|| __DATA.__data _OBJC_METACLASS_$__TtC26AuthenticationServicesCore13ASCABLEClient
|| __DATA.__data _OBJC_METACLASS_$__TtC26AuthenticationServicesCore20ASCABLEAuthenticator
|| __DATA.__data _authenticationServicesViewServiceBundleIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_ASCABLELoginChoice
|| __DATA.__objc_data _OBJC_CLASS_$_ASCAppleIDLoginChoice
|| __DATA.__objc_data _OBJC_CLASS_$_ASCAuthorizationPresenterHostInterface
|| __DATA.__objc_data _OBJC_CLASS_$_ASCPasswordLoginChoice
|| __DATA.__objc_data _OBJC_CLASS_$_ASCPlatformPublicKeyCredentialLoginChoice
|| __DATA.__objc_data _OBJC_CLASS_$_ASCPublicKeyCredentialDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_ASCSecurityKeyPublicKeyCredentialLoginChoice
|| __DATA.__objc_data _OBJC_CLASS_$_ASCViewServiceInterface
|| __DATA.__objc_data _OBJC_CLASS_$_ASCWebAuthenticationExtensionsClientInputs
|| __DATA.__objc_data _OBJC_CLASS_$__ASDevice
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26AuthenticationServicesCore13ASCABLEClient
|| __DATA.__objc_data _OBJC_CLASS_$__TtC26AuthenticationServicesCore20ASCABLEAuthenticator
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCABLELoginChoice
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCAppleIDLoginChoice
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCAuthorizationPresenterHostInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCPasswordLoginChoice
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCPlatformPublicKeyCredentialLoginChoice
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCPublicKeyCredentialDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCSecurityKeyPublicKeyCredentialLoginChoice
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCViewServiceInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCWebAuthenticationExtensionsClientInputs
|| __DATA.__objc_data _OBJC_METACLASS_$__ASDevice
|| __DATA_CONST.__const _ASCAgentBundleIdentifier
|| __DATA_CONST.__const _ASCAgentServiceName
|| __DATA_CONST.__const _ASCAuthorizationErrorDomain
|| __DATA_CONST.__const _ASCAuthorizationPresentationContextDataKey
|| __DATA_CONST.__const _ASCAuthorizationPresenterClientEntitlementName
|| __DATA_CONST.__const _ASViewServiceClientEntitlement
|| __DATA_CONST.__const _ASViewServiceProcess
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCAgentInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCAgentListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCAgentProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCAppleIDCredential
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCAuthorizationPresentationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCAuthorizationPresenter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCAuthorizationTrafficController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCCredentialRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCPasswordCredential
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCPlatformPublicKeyCredentialAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCPlatformPublicKeyCredentialRegistration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCPublicKeyCredentialAssertionOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCPublicKeyCredentialCreationOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCSecurityKeyPublicKeyCredentialAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCSecurityKeyPublicKeyCredentialRegistration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCWebKitSPISupport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASFeatureManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCAgentInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCAgentListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCAgentProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCAppleIDCredential
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCAuthorizationPresentationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCAuthorizationPresenter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCAuthorizationTrafficController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCCredentialRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCPasswordCredential
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCPlatformPublicKeyCredentialAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCPlatformPublicKeyCredentialRegistration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCPublicKeyCredentialAssertionOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCPublicKeyCredentialCreationOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCSecurityKeyPublicKeyCredentialAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCSecurityKeyPublicKeyCredentialRegistration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCWebKitSPISupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASFeatureManager
|| __TEXT.__text _ASAllLoginChoiceClasses
|| __TEXT.__text _ascCredentialRequestTypesAllPasskey
|| __TEXT.__text _ascCredentialRequestTypesAllPublicKey
|| __TEXT.__text _descriptionForErrorCode
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _OBJC_CLASS_$_ACMonitoredAccountStore
__ ApplePushService: _APSConnectionOverrideNamedDelegatePort
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ AuthKit: _OBJC_CLASS_$_AKAuthorization
__ AuthKit: _OBJC_CLASS_$_AKAuthorizationController
__ AuthKit: _OBJC_CLASS_$_AKAuthorizationRequest
__ AuthKit: _OBJC_CLASS_$_AKAuthorizationValidator
__ AuthKit: _OBJC_CLASS_$_AKCredentialRequestContext
__ AuthKit: _OBJC_CLASS_$_AKUsernameFormatter
__ CBORLibrary: _OBJC_CLASS_$_CBOR
__ CoreBluetooth: _CBAdvertisementDataServiceDataKey
__ CoreBluetooth: _OBJC_CLASS_$_CBAdvertiser
__ CoreBluetooth: _OBJC_CLASS_$_CBCentralManager
__ CoreBluetooth: _OBJC_CLASS_$_CBUUID
__ CoreFoundation: _CFUserNotificationDisplayAlert
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreServices: _OBJC_CLASS_$_LSBundleRecord
__ FTServices: _OBJC_CLASS_$_FTMessageDelivery_APS
__ FTServices: _OBJC_CLASS_$_FTProtobufMessage
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSURLAuthenticationMethodServerTrust
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLCredential
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ IDSFoundation: _OBJC_CLASS_$_IDSBaseMessage
__ LocalAuthentication: _LAErrorDomain
__ LocalAuthentication: _OBJC_CLASS_$_LAContext
__ MobileKeyBag: _MKBGetDeviceLockState
__ SafariCore: _OBJC_CLASS_$_WBSScopeExitHandler
__ SafariCore: _WBSAuditTokenHasEntitlement
__ SafariCore: __WBSLocalizedString
__ SafariFoundation: _OBJC_CLASS_$_SFPasswordCredentialIdentity
__ SafariFoundation: _OBJC_CLASS_$_SFSafariCredentialStore
__ SafariFoundation: _SFCredentialIdentityStoreIdentifierGetApplicationBundleIdentifier
__ Security: _OBJC_CLASS_$_OTClique
__ Security: _OBJC_CLASS_$_OTConfigurationContext
__ Security: _OTDefaultContext
__ Security: _SecPolicyCreateSSL
__ Security: _SecTrustEvaluateWithError
__ Security: _SecTrustSetPolicies
__ SharedWebCredentials: _OBJC_CLASS_$__SWCServiceDetails
__ SharedWebCredentials: _OBJC_CLASS_$__SWCServiceSpecifier
__ SharedWebCredentials: __SWCServiceTypeWebCredentials
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertActivationContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertConfigurationContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertDefinition
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertHandle
__ SpringBoardServices: _SBSRemoteAlertHandleInvalidationErrorDomain
__ UIKit: _OBJC_CLASS_$_UIDevice
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: _CCCrypt
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_dispatch_queue
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _getpwnam
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libswiftCloudKit.dylib: __swift_FORCE_LOAD_$_swiftCloudKit
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocError
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_arrayDestroy
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deallocPartialClassInstance
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_errorRetain
__ libswiftCore.dylib: _swift_getAssociatedConformanceWitness
__ libswiftCore.dylib: _swift_getAssociatedTypeWitness
__ libswiftCore.dylib: _swift_getEnumCaseMultiPayload
__ libswiftCore.dylib: _swift_getEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_getErrorValue
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initEnumMetadataMultiPayload
__ libswiftCore.dylib: _swift_initStackObject
__ libswiftCore.dylib: _swift_initStaticObject
__ libswiftCore.dylib: _swift_initStructMetadata
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_isaMask
__ libswiftCore.dylib: _swift_lookUpClassMethod
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_release_n
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_retain_n
__ libswiftCore.dylib: _swift_slowAlloc
__ libswiftCore.dylib: _swift_slowDealloc
__ libswiftCore.dylib: _swift_storeEnumTagMultiPayload
__ libswiftCore.dylib: _swift_storeEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_unexpectedError
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRelease_n
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_unknownObjectRetain_n
__ libswiftCore.dylib: _swift_unknownObjectWeakAssign
__ libswiftCore.dylib: _swift_unknownObjectWeakDestroy
__ libswiftCore.dylib: _swift_unknownObjectWeakInit
__ libswiftCore.dylib: _swift_unknownObjectWeakLoadStrong
__ libswiftCore.dylib: _swift_updateClassMetadata2
__ libswiftCore.dylib: _swift_willThrow
__ libswiftCoreFoundation.dylib: __swift_FORCE_LOAD_$_swiftCoreFoundation
__ libswiftCoreGraphics.dylib: __swift_FORCE_LOAD_$_swiftCoreGraphics
__ libswiftCoreLocation.dylib: __swift_FORCE_LOAD_$_swiftCoreLocation
__ libswiftDarwin.dylib: __swift_FORCE_LOAD_$_swiftDarwin
__ libswiftDispatch.dylib: __swift_FORCE_LOAD_$_swiftDispatch
__ libswiftFoundation.dylib: __swift_FORCE_LOAD_$_swiftFoundation
__ libswiftObjectiveC.dylib: __swift_FORCE_LOAD_$_swiftObjectiveC
__ libswift_Concurrency.dylib: _swift_deletedAsyncMethodErrorTu
__ libswift_Concurrency.dylib: _swift_task_alloc
__ libswift_Concurrency.dylib: _swift_task_create
__ libswift_Concurrency.dylib: _swift_task_dealloc
__ libswiftos.dylib: __swift_FORCE_LOAD_$_swiftos
ASCPublicKeyCredentialDescriptor : NSObject <NSSecureCoding>
 @property  NSData *credentialID
 @property  NSArray *transports

  // class methods
  +[ASCPublicKeyCredentialDescriptor supportsSecureCoding]

  // instance methods
  -[ASCPublicKeyCredentialDescriptor initWithCoder:]
  -[ASCPublicKeyCredentialDescriptor .cxx_destruct]
  -[ASCPublicKeyCredentialDescriptor copyWithZone:]
  -[ASCPublicKeyCredentialDescriptor transports]
  -[ASCPublicKeyCredentialDescriptor encodeWithCoder:]
  -[ASCPublicKeyCredentialDescriptor initWithCredentialID:transports:]
  -[ASCPublicKeyCredentialDescriptor credentialID]


ASCAuthorizationPresenterHostInterface : NSObject
  // class methods
  +[ASCAuthorizationPresenterHostInterface xpcInterface]


ASCCredentialRequestContext : NSObject <NSSecureCoding>
 @property  NSString *proxiedAppName
 @property  NSString *proxiedAppIdentifier
 @property  NSString *proxiedBundleIdentifier
 @property  NSString *proxiedTeamIdentifier
 @property  NSArray *proxiedAssociatedDomains
 @property  NSData *proxiedIconData
 @property  NSNumber *proxiedIconScale
 @property  NSString *proxiedOriginDeviceName
 @property  BOOL isClientLinkedOnOrAfterIOS15Aligned
 @property  BOOL isCABLEAuthenticatorRequest
 @property  unsigned long requestTypes
 @property  NSString *relyingPartyIdentifier
 @property  ASCPublicKeyCredentialCreationOptions *platformKeyCredentialCreationOptions
 @property  ASCPublicKeyCredentialCreationOptions *securityKeyCredentialCreationOptions
 @property  ASCPublicKeyCredentialAssertionOptions *platformKeyCredentialAssertionOptions
 @property  ASCPublicKeyCredentialAssertionOptions *securityKeyCredentialAssertionOptions
 @property  AKAuthorizationRequest *appleIDAuthorizationRequest
 @property  BOOL isProxiedRequest

  // class methods
  +[ASCCredentialRequestContext supportsSecureCoding]

  // instance methods
  -[ASCCredentialRequestContext initWithCoder:]
  -[ASCCredentialRequestContext .cxx_destruct]
  -[ASCCredentialRequestContext relyingPartyIdentifier]
  -[ASCCredentialRequestContext setRelyingPartyIdentifier:]
  -[ASCCredentialRequestContext requestTypes]
  -[ASCCredentialRequestContext proxiedAppName]
  -[ASCCredentialRequestContext setProxiedAppName:]
  -[ASCCredentialRequestContext setProxiedBundleIdentifier:]
  -[ASCCredentialRequestContext proxiedBundleIdentifier]
  -[ASCCredentialRequestContext encodeWithCoder:]
  -[ASCCredentialRequestContext appleIDAuthorizationRequest]
  -[ASCCredentialRequestContext isProxiedRequest]
  -[ASCCredentialRequestContext proxiedOriginDeviceName]
  -[ASCCredentialRequestContext isCABLEAuthenticatorRequest]
  -[ASCCredentialRequestContext proxiedAssociatedDomains]
  -[ASCCredentialRequestContext proxiedIconData]
  -[ASCCredentialRequestContext proxiedIconScale]
  -[ASCCredentialRequestContext initWithRequestTypes:]
  -[ASCCredentialRequestContext setAppleIDAuthorizationRequest:]
  -[ASCCredentialRequestContext setPlatformKeyCredentialCreationOptions:]
  -[ASCCredentialRequestContext setPlatformKeyCredentialAssertionOptions:]
  -[ASCCredentialRequestContext setSecurityKeyCredentialCreationOptions:]
  -[ASCCredentialRequestContext setSecurityKeyCredentialAssertionOptions:]
  -[ASCCredentialRequestContext setProxiedOriginDeviceName:]
  -[ASCCredentialRequestContext removePasskeyRequestsIfNecessary]
  -[ASCCredentialRequestContext platformKeyCredentialCreationOptions]
  -[ASCCredentialRequestContext securityKeyCredentialCreationOptions]
  -[ASCCredentialRequestContext platformKeyCredentialAssertionOptions]
  -[ASCCredentialRequestContext securityKeyCredentialAssertionOptions]
  -[ASCCredentialRequestContext proxiedAppIdentifier]
  -[ASCCredentialRequestContext setProxiedAppIdentifier:]
  -[ASCCredentialRequestContext proxiedTeamIdentifier]
  -[ASCCredentialRequestContext setProxiedTeamIdentifier:]
  -[ASCCredentialRequestContext setProxiedAssociatedDomains:]
  -[ASCCredentialRequestContext setProxiedIconData:]
  -[ASCCredentialRequestContext setProxiedIconScale:]
  -[ASCCredentialRequestContext isClientLinkedOnOrAfterIOS15Aligned]
  -[ASCCredentialRequestContext setIsCABLEAuthenticatorRequest:]


ASCAgentListener : NSObject <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCAgentListener .cxx_destruct]
  -[ASCAgentListener listener:shouldAcceptNewConnection:]
  -[ASCAgentListener initWithPublicKeyCredentialManager:]


ASFeatureManager : NSObject <ACMonitoredAccountStoreDelegateProtocol>
 @property  BOOL keychainSyncEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASFeatureManager sharedManager]

  // instance methods
  -[ASFeatureManager isKeychainSyncEnabled]
  -[ASFeatureManager accountWasAdded:]
  -[ASFeatureManager accountWasRemoved:]
  -[ASFeatureManager .cxx_destruct]
  -[ASFeatureManager init]
  -[ASFeatureManager accountWasModified:]
  -[ASFeatureManager accountCredentialChanged:]
  -[ASFeatureManager _updateAccountOnInternalQueue:]
  -[ASFeatureManager _updateKeychainSyncingStatusOnInternalQueue]


ASCSecurityKeyPublicKeyCredentialAssertion : NSObject <ASCCredentialProtocol>
 @property  NSData *credentialID
 @property  NSString *relyingPartyIdentifier
 @property  NSData *authenticatorData
 @property  NSData *signature
 @property  NSData *userHandle
 @property  NSData *rawClientDataJSON
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCSecurityKeyPublicKeyCredentialAssertion supportsSecureCoding]

  // instance methods
  -[ASCSecurityKeyPublicKeyCredentialAssertion initWithCoder:]
  -[ASCSecurityKeyPublicKeyCredentialAssertion .cxx_destruct]
  -[ASCSecurityKeyPublicKeyCredentialAssertion relyingPartyIdentifier]
  -[ASCSecurityKeyPublicKeyCredentialAssertion signature]
  -[ASCSecurityKeyPublicKeyCredentialAssertion userHandle]
  -[ASCSecurityKeyPublicKeyCredentialAssertion authenticatorData]
  -[ASCSecurityKeyPublicKeyCredentialAssertion encodeWithCoder:]
  -[ASCSecurityKeyPublicKeyCredentialAssertion credentialID]
  -[ASCSecurityKeyPublicKeyCredentialAssertion initWithRelyingPartyIdentifier:authenticatorData:signature:userHandle:rawClientDataJSON:credentialID:]
  -[ASCSecurityKeyPublicKeyCredentialAssertion rawClientDataJSON]


ASCAppleIDCredential : NSObject <ASCCredentialProtocol>
 @property  AKAuthorization *authorization
 @property  NSString *user
 @property  NSData *identityToken
 @property  NSString *state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCAppleIDCredential supportsSecureCoding]

  // instance methods
  -[ASCAppleIDCredential initWithCoder:]
  -[ASCAppleIDCredential initWithAuthorization:]
  -[ASCAppleIDCredential .cxx_destruct]
  -[ASCAppleIDCredential user]
  -[ASCAppleIDCredential authorization]
  -[ASCAppleIDCredential state]
  -[ASCAppleIDCredential initWithUser:identityToken:state:]
  -[ASCAppleIDCredential copyWithZone:]
  -[ASCAppleIDCredential encodeWithCoder:]
  -[ASCAppleIDCredential identityToken]


ASCAuthorizationPresentationContext : NSObject <NSSecureCoding>
 @property  NSString *appIdentifier
 @property  NSString *bundleIdentifier
 @property  NSString *teamIdentifier
 @property  NSArray *loginChoices
 @property  NSString *serviceName
 @property  NSString *destinationSiteForCrossSiteAssertion
 @property  unsigned long requestTypes
 @property  BOOL isRegistrationRequest
 @property  BOOL isCombinedPublicKeyCredentialRegistrationRequest
 @property  BOOL isProxiedRequest
 @property  NSArray *proxiedAssociatedDomains
 @property  NSData *proxiedIconData
 @property  NSNumber *proxiedIconScale
 @property  NSString *proxiedOriginDeviceName
 @property  AKAuthorizationRequest *appleIDAuthorizationRequest
 @property  NSString *platformUserVerificationPreference
 @property  BOOL hasExternalPasswords
 @property  NSArray *primaryLoginChoices
 @property  NSArray *otherLoginChoices
 @property  NSArray *localAccountLoginChoices
 @property  NSURL *cableAuthenticatorURL
 @property  BOOL isCABLEAuthenticatorRequest
 @property  BOOL shouldRequireCABLEAuthenticatorConsent

  // class methods
  +[ASCAuthorizationPresentationContext supportsSecureCoding]

  // instance methods
  -[ASCAuthorizationPresentationContext appIdentifier]
  -[ASCAuthorizationPresentationContext setServiceName:]
  -[ASCAuthorizationPresentationContext serviceName]
  -[ASCAuthorizationPresentationContext initWithCoder:]
  -[ASCAuthorizationPresentationContext bundleIdentifier]
  -[ASCAuthorizationPresentationContext .cxx_destruct]
  -[ASCAuthorizationPresentationContext teamIdentifier]
  -[ASCAuthorizationPresentationContext requestTypes]
  -[ASCAuthorizationPresentationContext addLoginChoice:]
  -[ASCAuthorizationPresentationContext initWithRequestContext:appIdentifier:]
  -[ASCAuthorizationPresentationContext isRegistrationRequest]
  -[ASCAuthorizationPresentationContext loginChoices]
  -[ASCAuthorizationPresentationContext encodeWithCoder:]
  -[ASCAuthorizationPresentationContext appleIDAuthorizationRequest]
  -[ASCAuthorizationPresentationContext isCombinedPublicKeyCredentialRegistrationRequest]
  -[ASCAuthorizationPresentationContext isProxiedRequest]
  -[ASCAuthorizationPresentationContext destinationSiteForCrossSiteAssertion]
  -[ASCAuthorizationPresentationContext proxiedOriginDeviceName]
  -[ASCAuthorizationPresentationContext localAccountLoginChoices]
  -[ASCAuthorizationPresentationContext isCABLEAuthenticatorRequest]
  -[ASCAuthorizationPresentationContext platformUserVerificationPreference]
  -[ASCAuthorizationPresentationContext primaryLoginChoices]
  -[ASCAuthorizationPresentationContext otherLoginChoices]
  -[ASCAuthorizationPresentationContext proxiedAssociatedDomains]
  -[ASCAuthorizationPresentationContext proxiedIconData]
  -[ASCAuthorizationPresentationContext proxiedIconScale]
  -[ASCAuthorizationPresentationContext updateLoginChoices:]
  -[ASCAuthorizationPresentationContext cableAuthenticatorURL]
  -[ASCAuthorizationPresentationContext shouldRequireCABLEAuthenticatorConsent]
  -[ASCAuthorizationPresentationContext hasExternalPasswords]
  -[ASCAuthorizationPresentationContext setAppleIDAuthorizationRequest:]
  -[ASCAuthorizationPresentationContext setProxiedOriginDeviceName:]
  -[ASCAuthorizationPresentationContext setProxiedAssociatedDomains:]
  -[ASCAuthorizationPresentationContext setProxiedIconData:]
  -[ASCAuthorizationPresentationContext setProxiedIconScale:]
  -[ASCAuthorizationPresentationContext initWithRequestContext:appIdentifier:shouldUseRelyingPartyForServiceName:]
  -[ASCAuthorizationPresentationContext initWithCABLEAuthenticatorURL:shouldRequireConsent:]
  -[ASCAuthorizationPresentationContext setDestinationSiteForCrossSiteAssertion:]
  -[ASCAuthorizationPresentationContext setIsProxiedRequest:]


_ASDevice : NSObject
  // class methods
  +[_ASDevice isPad]
  +[_ASDevice biometryType]
  +[_ASDevice isBiometricAuthenticationAvailable]
  +[_ASDevice shouldRequireLocalAuthenticationForPasswords]
  +[_ASDevice shouldRequireLocalAuthenticationForPlatformCredentials]
  +[_ASDevice isCABLEClient]


ASCPlatformPublicKeyCredentialLoginChoice : NSObject <ASCLoginChoiceProtocol>
 @property  NSString *name
 @property  NSString *displayName
 @property  NSData *userHandle
 @property  NSString *relyingPartyIdentifier
 @property  BOOL isRegistrationRequest
 @property  unsigned long loginChoiceKind
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCPlatformPublicKeyCredentialLoginChoice supportsSecureCoding]

  // instance methods
  -[ASCPlatformPublicKeyCredentialLoginChoice displayName]
  -[ASCPlatformPublicKeyCredentialLoginChoice name]
  -[ASCPlatformPublicKeyCredentialLoginChoice initWithCoder:]
  -[ASCPlatformPublicKeyCredentialLoginChoice .cxx_destruct]
  -[ASCPlatformPublicKeyCredentialLoginChoice relyingPartyIdentifier]
  -[ASCPlatformPublicKeyCredentialLoginChoice isEqual:]
  -[ASCPlatformPublicKeyCredentialLoginChoice initRegistrationChoiceWithOptions:]
  -[ASCPlatformPublicKeyCredentialLoginChoice initWithName:displayName:userHandle:]
  -[ASCPlatformPublicKeyCredentialLoginChoice isRegistrationRequest]
  -[ASCPlatformPublicKeyCredentialLoginChoice userHandle]
  -[ASCPlatformPublicKeyCredentialLoginChoice encodeWithCoder:]
  -[ASCPlatformPublicKeyCredentialLoginChoice initWithName:displayName:userHandle:relyingPartyIdentifier:]
  -[ASCPlatformPublicKeyCredentialLoginChoice loginChoiceKind]
  -[ASCPlatformPublicKeyCredentialLoginChoice _initAsRegistrationChoice:withName:displayName:userHandle:relyingPartyIdentifier:]


ASCSecurityKeyPublicKeyCredentialRegistration : NSObject <ASCCredentialProtocol>
 @property  NSData *credentialID
 @property  NSData *rawClientDataJSON
 @property  NSString *relyingPartyIdentifier
 @property  NSData *attestationObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCSecurityKeyPublicKeyCredentialRegistration supportsSecureCoding]

  // instance methods
  -[ASCSecurityKeyPublicKeyCredentialRegistration initWithCoder:]
  -[ASCSecurityKeyPublicKeyCredentialRegistration .cxx_destruct]
  -[ASCSecurityKeyPublicKeyCredentialRegistration relyingPartyIdentifier]
  -[ASCSecurityKeyPublicKeyCredentialRegistration attestationObject]
  -[ASCSecurityKeyPublicKeyCredentialRegistration encodeWithCoder:]
  -[ASCSecurityKeyPublicKeyCredentialRegistration credentialID]
  -[ASCSecurityKeyPublicKeyCredentialRegistration initWithRelyingPartyIdentifier:attestationObject:rawClientDataJSON:credentialID:]
  -[ASCSecurityKeyPublicKeyCredentialRegistration rawClientDataJSON]


ASCPasswordCredential : NSObject <ASCCredentialProtocol>
 @property  NSString *user
 @property  NSString *password
 @property  NSString *site
 @property  NSDate *creationDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCPasswordCredential supportsSecureCoding]

  // instance methods
  -[ASCPasswordCredential site]
  -[ASCPasswordCredential initWithCoder:]
  -[ASCPasswordCredential password]
  -[ASCPasswordCredential .cxx_destruct]
  -[ASCPasswordCredential user]
  -[ASCPasswordCredential isEqual:]
  -[ASCPasswordCredential creationDate]
  -[ASCPasswordCredential encodeWithCoder:]
  -[ASCPasswordCredential initWithUser:password:site:creationDate:]


ASCAgentInterface : NSObject
  // class methods
  +[ASCAgentInterface xpcInterface]


ASCAppleIDLoginChoice : NSObject <ASCLoginChoiceProtocol>
 @property  NSString *user
 @property  unsigned long loginChoiceKind
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCAppleIDLoginChoice supportsSecureCoding]

  // instance methods
  -[ASCAppleIDLoginChoice initWithUser:]
  -[ASCAppleIDLoginChoice initWithCoder:]
  -[ASCAppleIDLoginChoice .cxx_destruct]
  -[ASCAppleIDLoginChoice user]
  -[ASCAppleIDLoginChoice isEqual:]
  -[ASCAppleIDLoginChoice encodeWithCoder:]
  -[ASCAppleIDLoginChoice loginChoiceKind]


ASCPlatformPublicKeyCredentialRegistration : NSObject <ASCCredentialProtocol>
 @property  NSData *credentialID
 @property  NSString *relyingPartyIdentifier
 @property  NSData *attestationObject
 @property  NSData *rawClientDataJSON
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCPlatformPublicKeyCredentialRegistration supportsSecureCoding]

  // instance methods
  -[ASCPlatformPublicKeyCredentialRegistration initWithCoder:]
  -[ASCPlatformPublicKeyCredentialRegistration .cxx_destruct]
  -[ASCPlatformPublicKeyCredentialRegistration relyingPartyIdentifier]
  -[ASCPlatformPublicKeyCredentialRegistration attestationObject]
  -[ASCPlatformPublicKeyCredentialRegistration encodeWithCoder:]
  -[ASCPlatformPublicKeyCredentialRegistration credentialID]
  -[ASCPlatformPublicKeyCredentialRegistration initWithRelyingPartyIdentifier:attestationObject:rawClientDataJSON:credentialID:]
  -[ASCPlatformPublicKeyCredentialRegistration rawClientDataJSON]


ASCAgentProxy : NSObject <ASCAgentProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCAgentProxy cancelCurrentRequest]
  -[ASCAgentProxy .cxx_destruct]
  -[ASCAgentProxy _proxy]
  -[ASCAgentProxy init]
  -[ASCAgentProxy reconnectIfNecessary]
  -[ASCAgentProxy dealloc]
  -[ASCAgentProxy invalidate]
  -[ASCAgentProxy _remoteObjectProxyWithErrorHandler:]
  -[ASCAgentProxy performAuthorizationRequestsForContext:withCompletionHandler:]
  -[ASCAgentProxy clearAllPlatformPublicKeyCredentialsWithCompletionHandler:]
  -[ASCAgentProxy getShouldUseAlternateCredentialStoreWithCompletionHandler:]
  -[ASCAgentProxy openCABLEURL:fromSourceApplication:withCompletionHandler:]
  -[ASCAgentProxy _setUpConnection:]


ASCPublicKeyCredentialCreationOptions : NSObject <NSSecureCoding>
 @property  NSData *challenge
 @property  NSData *clientDataHash
 @property  NSString *relyingPartyIdentifier
 @property  NSString *userName
 @property  NSData *userIdentifier
 @property  NSString *userDisplayName
 @property  NSArray *supportedAlgorithmIdentifiers
 @property  NSString *userVerificationPreference
 @property  NSString *attestationPreference
 @property  ASCWebAuthenticationExtensionsClientInputs *extensions
 @property  BOOL shouldRequireResidentKey
 @property  NSArray *excludedCredentials

  // class methods
  +[ASCPublicKeyCredentialCreationOptions supportsSecureCoding]

  // instance methods
  -[ASCPublicKeyCredentialCreationOptions setClientDataHash:]
  -[ASCPublicKeyCredentialCreationOptions userName]
  -[ASCPublicKeyCredentialCreationOptions userIdentifier]
  -[ASCPublicKeyCredentialCreationOptions initWithCoder:]
  -[ASCPublicKeyCredentialCreationOptions setUserIdentifier:]
  -[ASCPublicKeyCredentialCreationOptions .cxx_destruct]
  -[ASCPublicKeyCredentialCreationOptions clientDataHash]
  -[ASCPublicKeyCredentialCreationOptions relyingPartyIdentifier]
  -[ASCPublicKeyCredentialCreationOptions setRelyingPartyIdentifier:]
  -[ASCPublicKeyCredentialCreationOptions setExtensions:]
  -[ASCPublicKeyCredentialCreationOptions extensions]
  -[ASCPublicKeyCredentialCreationOptions setUserName:]
  -[ASCPublicKeyCredentialCreationOptions challenge]
  -[ASCPublicKeyCredentialCreationOptions setChallenge:]
  -[ASCPublicKeyCredentialCreationOptions userDisplayName]
  -[ASCPublicKeyCredentialCreationOptions encodeWithCoder:]
  -[ASCPublicKeyCredentialCreationOptions supportedAlgorithmIdentifiers]
  -[ASCPublicKeyCredentialCreationOptions shouldRequireResidentKey]
  -[ASCPublicKeyCredentialCreationOptions excludedCredentials]
  -[ASCPublicKeyCredentialCreationOptions attestationPreference]
  -[ASCPublicKeyCredentialCreationOptions userVerificationPreference]
  -[ASCPublicKeyCredentialCreationOptions setUserVerificationPreference:]
  -[ASCPublicKeyCredentialCreationOptions setUserDisplayName:]
  -[ASCPublicKeyCredentialCreationOptions setSupportedAlgorithmIdentifiers:]
  -[ASCPublicKeyCredentialCreationOptions setAttestationPreference:]
  -[ASCPublicKeyCredentialCreationOptions setShouldRequireResidentKey:]
  -[ASCPublicKeyCredentialCreationOptions setExcludedCredentials:]


ASCWebAuthenticationExtensionsClientInputs : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *appID
 @property  BOOL isGoogleLegacyAppIDSupport

  // class methods
  +[ASCWebAuthenticationExtensionsClientInputs supportsSecureCoding]

  // instance methods
  -[ASCWebAuthenticationExtensionsClientInputs setAppID:]
  -[ASCWebAuthenticationExtensionsClientInputs appID]
  -[ASCWebAuthenticationExtensionsClientInputs initWithCoder:]
  -[ASCWebAuthenticationExtensionsClientInputs .cxx_destruct]
  -[ASCWebAuthenticationExtensionsClientInputs init]
  -[ASCWebAuthenticationExtensionsClientInputs copyWithZone:]
  -[ASCWebAuthenticationExtensionsClientInputs encodeWithCoder:]
  -[ASCWebAuthenticationExtensionsClientInputs isGoogleLegacyAppIDSupport]
  -[ASCWebAuthenticationExtensionsClientInputs initWithAppID:isGoogleLegacyAppIDSupport:]
  -[ASCWebAuthenticationExtensionsClientInputs setIsGoogleLegacyAppIDSupport:]


ASCPlatformPublicKeyCredentialAssertion : NSObject <ASCCredentialProtocol>
 @property  NSData *credentialID
 @property  NSData *rawClientDataJSON
 @property  NSString *relyingPartyIdentifier
 @property  NSData *authenticatorData
 @property  NSData *signature
 @property  NSData *userHandle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCPlatformPublicKeyCredentialAssertion supportsSecureCoding]

  // instance methods
  -[ASCPlatformPublicKeyCredentialAssertion initWithCoder:]
  -[ASCPlatformPublicKeyCredentialAssertion .cxx_destruct]
  -[ASCPlatformPublicKeyCredentialAssertion relyingPartyIdentifier]
  -[ASCPlatformPublicKeyCredentialAssertion signature]
  -[ASCPlatformPublicKeyCredentialAssertion userHandle]
  -[ASCPlatformPublicKeyCredentialAssertion authenticatorData]
  -[ASCPlatformPublicKeyCredentialAssertion encodeWithCoder:]
  -[ASCPlatformPublicKeyCredentialAssertion credentialID]
  -[ASCPlatformPublicKeyCredentialAssertion initWithRelyingPartyIdentifier:authenticatorData:signature:userHandle:rawClientDataJSON:credentialID:]
  -[ASCPlatformPublicKeyCredentialAssertion rawClientDataJSON]


ASCAuthorizationTrafficController : NSObject
  // class methods
  +[ASCAuthorizationTrafficController sharedInstance]

  // instance methods
  -[ASCAuthorizationTrafficController .cxx_destruct]
  -[ASCAuthorizationTrafficController init]
  -[ASCAuthorizationTrafficController beginAuthorizationForApplicationIdentifier:withClearanceHandler:]
  -[ASCAuthorizationTrafficController endAuthorizationForAppIdentifier:clearanceHandler:]
  -[ASCAuthorizationTrafficController cancelAuthorizationForAppIdentifierIfNecessary:]


ASCWebKitSPISupport : NSObject
  // class methods
  +[ASCWebKitSPISupport shouldUseAlternateCredentialStore]
  +[ASCWebKitSPISupport getShouldUseAlternateCredentialStoreWithCompletionHandler:]
  +[ASCWebKitSPISupport setShouldUseAlternateCredentialStore:]
  +[ASCWebKitSPISupport resetCredentialStore]


ASCAgent : NSObject <_TtP26AuthenticationServicesCore21ASCABLEClientDelegate_, ASPublicKeyCredentialManagerDelegate, ASCAuthorizationPresenterDelegate, ASCAgentProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCAgent cancelCurrentRequest]
  -[ASCAgent .cxx_destruct]
  -[ASCAgent didReceiveError:]
  -[ASCAgent authorizationPresenter:credentialRequestedForLoginChoice:authenticatedContext:completionHandler:]
  -[ASCAgent authorizationPresenter:validateUserEnteredPIN:completionHandler:]
  -[ASCAgent dealloc]
  -[ASCAgent requestPINWithRemainingRetries:completionHandler:]
  -[ASCAgent didFetchPlatformLoginChoices:]
  -[ASCAgent didFetchSecurityKeyLoginChoices:]
  -[ASCAgent didCompleteAssertionWithCredential:error:]
  -[ASCAgent didCompleteRegistrationWithCredential:error:]
  -[ASCAgent performAuthorizationRequestsForContext:withCompletionHandler:]
  -[ASCAgent initWithTrafficController:connection:publicKeyCredentialManager:]
  -[ASCAgent clearAllPlatformPublicKeyCredentialsWithCompletionHandler:]
  -[ASCAgent getShouldUseAlternateCredentialStoreWithCompletionHandler:]
  -[ASCAgent openCABLEURL:fromSourceApplication:withCompletionHandler:]
  -[ASCAgent _presentAuthorizationRequestWithContext:completionHandler:]
  -[ASCAgent _prepareForAuthorizationRequestsForContext:clientConnection:withPresentationHandler:]
  -[ASCAgent _authorizationCompletedWithCredential:error:]
  -[ASCAgent _isAuthenticationConfiguredForPlatformPublicKeyRequestWithError:]
  -[ASCAgent _isClientWithApplicationIdentifier:properlyEntitledForRequestContext:error:]
  -[ASCAgent _configureAppleIDCredentialwithCompletionHandler:]
  -[ASCAgent _configurePasswordCredentialsWithCompletionHandler:]
  -[ASCAgent _configurePublicKeyCredentialsWithAssertionOptions:completionHandler:]
  -[ASCAgent _hasSignInOptionsForRequestTypes:]
  -[ASCAgent _credentialRequestedForPasswordLoginChoice:completionHandler:]
  -[ASCAgent _credentialRequestedForPlatformLoginChoice:authenticatedContext:]
  -[ASCAgent _credentialRequestedForSecurityKeyLoginChoice:]
  -[ASCAgent _credentialRequestedForCABLELoginChoice:]
  -[ASCAgent _clientHasNecessaryAuthKitEntitlements]
  -[ASCAgent _bundleIDfromAppID:]
  -[ASCAgent _performAuthKitAuthorizationValidation]
  -[ASCAgent _allAvailableLoginChoicesForRequestContext:]
  -[ASCAgent _shouldAddCABLEChoiceForRequestContext:]
  -[ASCAgent _configureLoginChoicesForPresentationContext:withRequestContext:]
  -[ASCAgent _hasAnyCredentialsAvailableForRequestTypes:]
  -[ASCAgent _clientHasAuthKitDeveloperEntitlement]
  -[ASCAgent _clientIsAuthKitOwner]
  -[ASCAgent _clientIsInternalAuthKit]
  -[ASCAgent _clientIsPrivateAuthKit]
  -[ASCAgent _isClientEntitledWebBrowser]
  -[ASCAgent userSelectedLoginChoice:authenticatedContext:completionHandler:]
  -[ASCAgent encodeGetAssertionCTAPCommandForAuthenticatorWithUserVerificationAvailability:]
  -[ASCAgent encodeMakeCredentialCTAPCommandForAuthenticatorWithUserVerificationAvailability:]
  -[ASCAgent cableClientWillConnect:]
  -[ASCAgent cableClientWillAuthenticate:]
  -[ASCAgent authorizationPresenter:startCABLEAuthenticationWithCompletionHandler:]


ASCViewServiceInterface : NSObject
  // class methods
  +[ASCViewServiceInterface xpcInterface]


ASCSecurityKeyPublicKeyCredentialLoginChoice : NSObject <ASCLoginChoiceProtocol>
 @property  NSString *name
 @property  NSString *displayName
 @property  NSData *userHandle
 @property  long long credentialKind
 @property  unsigned long loginChoiceKind
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCSecurityKeyPublicKeyCredentialLoginChoice supportsSecureCoding]

  // instance methods
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice displayName]
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice name]
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice initWithCoder:]
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice .cxx_destruct]
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice isEqual:]
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice initRegistrationChoiceWithOptions:]
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice initAssertionPlaceholderChoice]
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice initWithName:displayName:userHandle:]
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice credentialKind]
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice userHandle]
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice encodeWithCoder:]
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice loginChoiceKind]
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice _initWithKind:name:displayName:userHandle:]
  -[ASCSecurityKeyPublicKeyCredentialLoginChoice initRegistrationChoice]


ASCPublicKeyCredentialAssertionOptions : NSObject <NSSecureCoding>
 @property  unsigned long credentialKind
 @property  NSString *relyingPartyIdentifier
 @property  NSData *challenge
 @property  NSData *clientDataHash
 @property  NSString *userVerificationPreference
 @property  ASCWebAuthenticationExtensionsClientInputs *extensions
 @property  NSArray *allowedCredentials
 @property  NSString *destinationSiteForCrossSiteAssertion

  // class methods
  +[ASCPublicKeyCredentialAssertionOptions supportsSecureCoding]

  // instance methods
  -[ASCPublicKeyCredentialAssertionOptions setClientDataHash:]
  -[ASCPublicKeyCredentialAssertionOptions initWithCoder:]
  -[ASCPublicKeyCredentialAssertionOptions .cxx_destruct]
  -[ASCPublicKeyCredentialAssertionOptions clientDataHash]
  -[ASCPublicKeyCredentialAssertionOptions relyingPartyIdentifier]
  -[ASCPublicKeyCredentialAssertionOptions setExtensions:]
  -[ASCPublicKeyCredentialAssertionOptions extensions]
  -[ASCPublicKeyCredentialAssertionOptions credentialKind]
  -[ASCPublicKeyCredentialAssertionOptions challenge]
  -[ASCPublicKeyCredentialAssertionOptions encodeWithCoder:]
  -[ASCPublicKeyCredentialAssertionOptions userVerificationPreference]
  -[ASCPublicKeyCredentialAssertionOptions allowedCredentials]
  -[ASCPublicKeyCredentialAssertionOptions destinationSiteForCrossSiteAssertion]
  -[ASCPublicKeyCredentialAssertionOptions initWithKind:relyingPartyIdentifier:challenge:userVerificationPreference:allowedCredentials:]
  -[ASCPublicKeyCredentialAssertionOptions setDestinationSiteForCrossSiteAssertion:]
  -[ASCPublicKeyCredentialAssertionOptions initWithKind:relyingPartyIdentifier:clientDataHash:userVerificationPreference:allowedCredentials:]


ASCAuthorizationPresenter : NSObject <NSXPCListenerDelegate, SBSRemoteAlertHandleObserver, ASCAuthorizationPresenterHostProtocol>
 @property  <ASCAuthorizationPresenterDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCAuthorizationPresenter remoteAlertHandle:didInvalidateWithError:]
  -[ASCAuthorizationPresenter remoteAlertHandleDidDeactivate:]
  -[ASCAuthorizationPresenter .cxx_destruct]
  -[ASCAuthorizationPresenter setDelegate:]
  -[ASCAuthorizationPresenter init]
  -[ASCAuthorizationPresenter _invalidateWithError:]
  -[ASCAuthorizationPresenter presentAuthorizationWithContext:completionHandler:]
  -[ASCAuthorizationPresenter updateInterfaceForUserVisibleError:]
  -[ASCAuthorizationPresenter presentPINEntryInterface]
  -[ASCAuthorizationPresenter presentError:forService:completionHandler:]
  -[ASCAuthorizationPresenter updateInterfaceWithLoginChoices:]
  -[ASCAuthorizationPresenter dismissWithError:]
  -[ASCAuthorizationPresenter dismiss]
  -[ASCAuthorizationPresenter delegate]
  -[ASCAuthorizationPresenter listener:shouldAcceptNewConnection:]
  -[ASCAuthorizationPresenter initializeClientToViewServiceConnection]
  -[ASCAuthorizationPresenter cableClientWillConnect]
  -[ASCAuthorizationPresenter cableClientWillAuthenticate]
  -[ASCAuthorizationPresenter authorizationRequestInitiatedWithLoginChoice:authenticatedContext:completionHandler:]
  -[ASCAuthorizationPresenter authorizationRequestFinishedWithCredential:error:completionHandler:]
  -[ASCAuthorizationPresenter validateUserEnteredPIN:completionHandler:]
  -[ASCAuthorizationPresenter startCABLEAuthenticationWithCompletionHandler:]
  -[ASCAuthorizationPresenter _isPresentationContextValid:error:]
  -[ASCAuthorizationPresenter _performQueuedUpdatesIfNecessary]
  -[ASCAuthorizationPresenter _isErrorDueToNewAlertHandleRequest:]


ASCPasswordLoginChoice : NSObject <ASCLoginChoiceProtocol>
 @property  NSString *username
 @property  NSString *site
 @property  BOOL external
 @property  SFPasswordCredentialIdentity *externalCredentialIdentity
 @property  NSString *providerBundleIdentifier
 @property  unsigned long loginChoiceKind
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCPasswordLoginChoice supportsSecureCoding]

  // instance methods
  -[ASCPasswordLoginChoice isExternal]
  -[ASCPasswordLoginChoice site]
  -[ASCPasswordLoginChoice initWithCoder:]
  -[ASCPasswordLoginChoice providerBundleIdentifier]
  -[ASCPasswordLoginChoice .cxx_destruct]
  -[ASCPasswordLoginChoice username]
  -[ASCPasswordLoginChoice isEqual:]
  -[ASCPasswordLoginChoice compare:]
  -[ASCPasswordLoginChoice encodeWithCoder:]
  -[ASCPasswordLoginChoice loginChoiceKind]
  -[ASCPasswordLoginChoice externalCredentialIdentity]
  -[ASCPasswordLoginChoice initWithUsername:site:externalCredentialIdentity:]


ASCABLELoginChoice : NSObject <ASCLoginChoiceProtocol>
 @property  NSURL *qrCodeURL
 @property  unsigned long loginChoiceKind
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCABLELoginChoice supportsSecureCoding]

  // instance methods
  -[ASCABLELoginChoice initWithCoder:]
  -[ASCABLELoginChoice .cxx_destruct]
  -[ASCABLELoginChoice encodeWithCoder:]
  -[ASCABLELoginChoice loginChoiceKind]
  -[ASCABLELoginChoice qrCodeURL]
  -[ASCABLELoginChoice initWithQRCodeURL:]


_TtC26AuthenticationServicesCore11ASWebSocket : NSObject <NSURLSessionWebSocketDelegate>
  // instance methods
  -[_TtC26AuthenticationServicesCore11ASWebSocket .cxx_destruct]
  -[_TtC26AuthenticationServicesCore11ASWebSocket init]
  -[_TtC26AuthenticationServicesCore11ASWebSocket URLSession:task:didCompleteWithError:]
  -[_TtC26AuthenticationServicesCore11ASWebSocket URLSession:webSocketTask:didOpenWithProtocol:]
  -[_TtC26AuthenticationServicesCore11ASWebSocket URLSession:task:didReceiveChallenge:completionHandler:]


_TtC26AuthenticationServicesCore20ASCABLEAuthenticator : NSObject
  // instance methods
  -[_TtC26AuthenticationServicesCore20ASCABLEAuthenticator .cxx_destruct]
  -[_TtC26AuthenticationServicesCore20ASCABLEAuthenticator init]
  -[_TtC26AuthenticationServicesCore20ASCABLEAuthenticator startWithCompletionHandler:]
  -[_TtC26AuthenticationServicesCore20ASCABLEAuthenticator dealloc]
  -[_TtC26AuthenticationServicesCore20ASCABLEAuthenticator initWithCaBLEURL:error:]
  -[_TtC26AuthenticationServicesCore20ASCABLEAuthenticator finishTransactionWithCredential:error:]


_TtCC26AuthenticationServicesCore20ASCABLEAuthenticatorP33_84AFAA0745E7F5997DD6543D9C2808DD10APSWrapper : NSObject <APSConnectionDelegate>
  // instance methods
  -[_TtCC26AuthenticationServicesCore20ASCABLEAuthenticatorP33_84AFAA0745E7F5997DD6543D9C2808DD10APSWrapper connection:didReceivePublicToken:]
  -[_TtCC26AuthenticationServicesCore20ASCABLEAuthenticatorP33_84AFAA0745E7F5997DD6543D9C2808DD10APSWrapper connection:didReceiveIncomingMessage:]
  -[_TtCC26AuthenticationServicesCore20ASCABLEAuthenticatorP33_84AFAA0745E7F5997DD6543D9C2808DD10APSWrapper .cxx_destruct]
  -[_TtCC26AuthenticationServicesCore20ASCABLEAuthenticatorP33_84AFAA0745E7F5997DD6543D9C2808DD10APSWrapper init]


_TtC26AuthenticationServicesCore13ASCABLEClient : NSObject <CBCentralManagerDelegate>
 @property  NSURL *qrCodeURL

  // instance methods
  -[_TtC26AuthenticationServicesCore13ASCABLEClient .cxx_destruct]
  -[_TtC26AuthenticationServicesCore13ASCABLEClient centralManagerDidUpdateState:]
  -[_TtC26AuthenticationServicesCore13ASCABLEClient init]
  -[_TtC26AuthenticationServicesCore13ASCABLEClient initWithDelegate:]
  -[_TtC26AuthenticationServicesCore13ASCABLEClient centralManager:didDiscoverPeripheral:advertisementData:RSSI:]
  -[_TtC26AuthenticationServicesCore13ASCABLEClient qrCodeURL]
  -[_TtC26AuthenticationServicesCore13ASCABLEClient performAuthenticationOperation:forRelyingPartyIdentifier:completionHandler:]
  -[_TtC26AuthenticationServicesCore13ASCABLEClient cancelIfNecessary]


_TtC26AuthenticationServicesCore26ASCABLECryptographyManager : Swift._SwiftObject

01 00 0f00 /System/Library/Frameworks/Accounts.framework/Accounts: ACMonitoredAccountStore 
01 00 0500 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 0500 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAuthorization 
01 00 0500 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAuthorizationController 
01 00 0500 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAuthorizationRequest 
01 00 0500 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAuthorizationValidator 
01 00 0500 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKCredentialRequestContext 
01 00 0500 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKUsernameFormatter 
01 00 1600 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 1200 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBAdvertiser 
01 00 1200 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBCentralManager 
01 00 1700 /System/Library/PrivateFrameworks/CBORLibrary.framework/CBORLibrary: CBOR 
01 00 1200 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBUUID 
01 00 0800 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTMessageDelivery_APS 
01 00 0800 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTProtobufMessage 
01 00 0900 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSBaseMessage 
01 00 0200 /System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication: LAContext 
01 00 0600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleRecord 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCredential 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 1100 /usr/lib/libSystem.B.dylib: OS_dispatch_queue 
01 00 0d00 /System/Library/Frameworks/Security.framework/Security: OTClique 
01 00 0d00 /System/Library/Frameworks/Security.framework/Security: OTConfigurationContext 
01 00 0100 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertActivationContext 
01 00 0100 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertConfigurationContext 
01 00 0100 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertDefinition 
01 00 0100 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertHandle 
01 00 0c00 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFPasswordCredentialIdentity 
01 00 0c00 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFSafariCredentialStore 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0a00 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSScopeExitHandler 
01 00 0700 /System/Library/PrivateFrameworks/SharedWebCredentials.framework/SharedWebCredentials: _SWCServiceDetails 
01 00 0700 /System/Library/PrivateFrameworks/SharedWebCredentials.framework/SharedWebCredentials: _SWCServiceSpecifier 
01 00 1b00 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
