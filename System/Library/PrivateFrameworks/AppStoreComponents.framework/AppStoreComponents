|| __DATA.__objc_data _OBJC_CLASS_$_ASCAdLockupView
|| __DATA.__objc_data _OBJC_CLASS_$_ASCAppLaunchTrampoline
|| __DATA.__objc_data _OBJC_CLASS_$_ASCAppLaunchTrampolineURL
|| __DATA.__objc_data _OBJC_CLASS_$_ASCLockupProductDetails
|| __DATA.__objc_data _OBJC_CLASS_$_ASCOverlaySettings
|| __DATA.__objc_data _OBJC_CLASS_$_ASCScreenshots
|| __DATA.__objc_data _OBJC_CLASS_$_ASCTrailers
|| __DATA.__objc_data _OBJC_CLASS_$_ASCVideo
|| __DATA.__objc_data _OBJC_CLASS_$_ASCWatchApps
|| __DATA.__objc_data _OBJC_CLASS_$__ASCLockupResponse
|| __DATA.__objc_data _OBJC_CLASS_$___ASCLayoutProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCAdLockupView
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCAppLaunchTrampoline
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCAppLaunchTrampolineURL
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCLockupProductDetails
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCOverlaySettings
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCScreenshots
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCTrailers
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCVideo
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCWatchApps
|| __DATA.__objc_data _OBJC_METACLASS_$__ASCLockupResponse
|| __DATA_CONST.__const _ASCAppLaunchTrampolineErrorDomain
|| __DATA_CONST.__const _ASCAppOfferActionErrorDomain
|| __DATA_CONST.__const _ASCAppStateBuyable
|| __DATA_CONST.__const _ASCAppStateDownloadable
|| __DATA_CONST.__const _ASCAppStateInstalled
|| __DATA_CONST.__const _ASCAppStateInstalling
|| __DATA_CONST.__const _ASCAppStateOpenable
|| __DATA_CONST.__const _ASCAppStatePurchased
|| __DATA_CONST.__const _ASCAppStateUnknown
|| __DATA_CONST.__const _ASCAppStateUpdatable
|| __DATA_CONST.__const _ASCAppStateWaiting
|| __DATA_CONST.__const _ASCArtworkCropBoundingBox
|| __DATA_CONST.__const _ASCArtworkCropConstrainedHeight
|| __DATA_CONST.__const _ASCArtworkCropConstrainedWidth
|| __DATA_CONST.__const _ASCArtworkCropFCCrop270
|| __DATA_CONST.__const _ASCArtworkCropFCCrop44
|| __DATA_CONST.__const _ASCArtworkCropSourceSize
|| __DATA_CONST.__const _ASCArtworkCropSpecificRectangle
|| __DATA_CONST.__const _ASCArtworkCropSquareCenterCrop
|| __DATA_CONST.__const _ASCArtworkDecorationIAP
|| __DATA_CONST.__const _ASCArtworkDecorationMaskToCircle
|| __DATA_CONST.__const _ASCArtworkDecorationNone
|| __DATA_CONST.__const _ASCArtworkDecorationPill
|| __DATA_CONST.__const _ASCArtworkDecorationRoundedRect
|| __DATA_CONST.__const _ASCArtworkDecorationScreenshot
|| __DATA_CONST.__const _ASCArtworkDecorationTVRect
|| __DATA_CONST.__const _ASCArtworkFormatHEIC
|| __DATA_CONST.__const _ASCArtworkFormatJPEG
|| __DATA_CONST.__const _ASCArtworkFormatLCR
|| __DATA_CONST.__const _ASCArtworkFormatPNG
|| __DATA_CONST.__const _ASCArtworkTemplateKeyCrop
|| __DATA_CONST.__const _ASCArtworkTemplateKeyFormat
|| __DATA_CONST.__const _ASCArtworkTemplateKeyHeight
|| __DATA_CONST.__const _ASCArtworkTemplateKeyWidth
|| __DATA_CONST.__const _ASCCollectionIDGamesForYou
|| __DATA_CONST.__const _ASCCollectionIDNewArcadeGames
|| __DATA_CONST.__const _ASCLockupContextAdGridWithLandscapeScreenshots
|| __DATA_CONST.__const _ASCLockupContextAdGridWithPortraitScreenshots
|| __DATA_CONST.__const _ASCLockupContextAdMaterialWithLandscapeScreenshots
|| __DATA_CONST.__const _ASCLockupContextAdMaterialWithPortraitScreenshots
|| __DATA_CONST.__const _ASCLockupContextAdWithLandscapeScreenshot
|| __DATA_CONST.__const _ASCLockupContextAdWithLandscapeVideo
|| __DATA_CONST.__const _ASCLockupContextAdWithPortraitScreenshots
|| __DATA_CONST.__const _ASCLockupContextAdWithPortraitVideo
|| __DATA_CONST.__const _ASCLockupContextAdWithText
|| __DATA_CONST.__const _ASCLockupContextGameCenter
|| __DATA_CONST.__const _ASCLockupContextGameCenterArcade
|| __DATA_CONST.__const _ASCLockupContextOfferOnly
|| __DATA_CONST.__const _ASCLockupContextOverlay
|| __DATA_CONST.__const _ASCLockupContextOverlayClip
|| __DATA_CONST.__const _ASCLockupContextStandard
|| __DATA_CONST.__const _ASCLockupContextWatch
|| __DATA_CONST.__const _ASCLockupKindApp
|| __DATA_CONST.__const _ASCLockupKindAppBundle
|| __DATA_CONST.__const _ASCLockupKindInAppPurchase
|| __DATA_CONST.__const _ASCLockupViewSizeDefault
|| __DATA_CONST.__const _ASCLockupViewSizeLarge
|| __DATA_CONST.__const _ASCLockupViewSizeLargeAppShowcase
|| __DATA_CONST.__const _ASCLockupViewSizeMedium
|| __DATA_CONST.__const _ASCLockupViewSizeSmall
|| __DATA_CONST.__const _ASCLockupViewSizeSmallOfferButton
|| __DATA_CONST.__const _ASCMetricsActivityKeyHostApp
|| __DATA_CONST.__const _ASCMetricsActivityKeyRedirectURL
|| __DATA_CONST.__const _ASCMetricsActivityKeyRedirectURLParameters
|| __DATA_CONST.__const _ASCMetricsActivityKeyReferrerApp
|| __DATA_CONST.__const _ASCMetricsActivityKeyReferrerURL
|| __DATA_CONST.__const _ASCMetricsInvocationPointAppear
|| __DATA_CONST.__const _ASCMetricsInvocationPointClick
|| __DATA_CONST.__const _ASCMetricsInvocationPointDisappear
|| __DATA_CONST.__const _ASCOfferTitleVariantConfirmation
|| __DATA_CONST.__const _ASCOfferTitleVariantDiscountOwnedParent
|| __DATA_CONST.__const _ASCOfferTitleVariantDiscountUnownedParent
|| __DATA_CONST.__const _ASCOfferTitleVariantNotSubscribed
|| __DATA_CONST.__const _ASCOfferTitleVariantOpen
|| __DATA_CONST.__const _ASCOfferTitleVariantPreorderNotSubscribed
|| __DATA_CONST.__const _ASCOfferTitleVariantPreorderStatus
|| __DATA_CONST.__const _ASCOfferTitleVariantPreorderSubscribed
|| __DATA_CONST.__const _ASCOfferTitleVariantPreorderedNotSubscribed
|| __DATA_CONST.__const _ASCOfferTitleVariantPreorderedSubscribed
|| __DATA_CONST.__const _ASCOfferTitleVariantStandard
|| __DATA_CONST.__const _ASCOfferTitleVariantSubscribed
|| __DATA_CONST.__const _ASCOfferTitleVariantTrial
|| __DATA_CONST.__const _ASCOpenAppErrorDomain
|| __DATA_CONST.__const __ASCLockupKeyAdamID
|| __DATA_CONST.__const __ASCLockupKeyIcon
|| __DATA_CONST.__const __ASCLockupKeySubtitle
|| __DATA_CONST.__const __ASCLockupKeyTitle
|| __DATA_DIRTY.__data _OBJC_METACLASS_$___ASCLayoutProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCAdamID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCArtwork
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCCollectionRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCContentSkeleton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCLocalOffer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCLockup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCLockupFeatureAd
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCLockupFeatureProductVariants
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCLockupFeatureSignpostTags
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCLockupRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCLockupView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCLockupViewGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCMetricsActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCMetricsData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCOfferButtonBackgroundImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCOfferMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCOfferTheme
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCSignpostPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCSignpostSpan
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCURLOffer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCViewMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCViewMetricsInstruction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ASCViewRender
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCAdamID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCArtwork
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCCollectionRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCContentSkeleton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCLocalOffer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCLockup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCLockupFeatureAd
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCLockupFeatureProductVariants
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCLockupFeatureSignpostTags
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCLockupRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCLockupView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCLockupViewGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCMetricsActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCMetricsData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCOfferButtonBackgroundImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCOfferMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCOfferTheme
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCSignpostPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCSignpostSpan
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCURLOffer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCViewMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCViewMetricsInstruction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ASCViewRender
|| __TEXT.__const _ASCSignpostTagMaxValue
|| __TEXT.__const _ASCSignpostTagNull
|| __TEXT.__const _AppStoreComponentsVersionNumber
|| __TEXT.__const _AppStoreComponentsVersionString
|| __TEXT.__text _ASCAXStarRatingStringForRating
|| __TEXT.__text _ASCArtworkCropScaleSizeToFit
|| __TEXT.__text _ASCArtworkDecorationHasBorder
|| __TEXT.__text _ASCArtworkFormatIsLayered
|| __TEXT.__text _ASCLockupContextIsAdGridContext
|| __TEXT.__text _ASCLockupContextIsAdMaterialContext
|| __TEXT.__text _ASCLockupContextIsAdMaterialWithLandscapeScreenshotsContext
|| __TEXT.__text _ASCLockupViewSizeGetEstimatedSize
|| __TEXT.__text _ASCLockupViewSizeGetIconSize
|| __TEXT.__text _ASCLockupViewSizeGetLayoutEstimatedSize
|| __TEXT.__text _ASCOfferFlagsGetDescription
|| __TEXT.__text _ASCSignpostTagCreate
|| __TEXT.__text _ASCSignpostTagCreateForProcess
|| __TEXT.__text _ASCSignpostTagFromID
|| __TEXT.__text _ASCSignpostTagFromIDInProcess
|| __TEXT.__text _ASCSignpostTagUnique
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLayer
__ AppleMediaServices: _AMSHashIfNeeded
__ AppleMediaServices: _AMSLogableError
__ AppleMediaServices: _OBJC_CLASS_$_AMSBinaryPromise
__ AppleMediaServices: _OBJC_CLASS_$_AMSProcessInfo
__ AppleMediaServices: _OBJC_CLASS_$_AMSPromise
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetRGBFillColor
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGPathAddRelativeArc
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreServices: _OBJC_CLASS_$_LSAppLink
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$__LSOpenConfiguration
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSExtensionHostDidBecomeActiveNotification
__ Foundation: _NSExtensionHostDidEnterBackgroundNotification
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSURLErrorDomain
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _FBSOpenApplicationOptionKeyUnlockDevice
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ IconServices: _kISImageDescriptorHomeScreen
__ JetEngine: _OBJC_CLASS_$_JEUnfairLock
__ JetUI: _JUMeasurementsMake
__ JetUI: _JUMeasurementsZero
__ QuartzCore: _CATransform3DMakeTranslation
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAReplicatorLayer
__ QuartzCore: _kCACornerCurveCircular
__ QuartzCore: _kCACornerCurveContinuous
__ SoftLinking: __sl_dlopen
__ UIFoundation: _OBJC_CLASS_$_NSParagraphStyle
__ UIFoundation: _OBJC_CLASS_$_NSTextAttachment
__ UIFoundation: _OBJC_CLASS_$_UIFont
__ UIFoundation: _OBJC_CLASS_$_UIFontDescriptor
__ UIFoundation: _UIFontDescriptorSizeAttribute
__ UIFoundation: _UIFontDescriptorTraitsAttribute
__ UIFoundation: _UIFontSystemFontDesignDefault
__ UIFoundation: _UIFontSystemFontDesignTrait
__ UIFoundation: _UIFontWeightBold
__ UIFoundation: _UIFontWeightMedium
__ UIFoundation: _UIFontWeightRegular
__ UIFoundation: _UIFontWeightTrait
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UICubicTimingParameters
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFocusHaloEffect
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIAccessibilityLayoutChangedNotification
__ UIKit: _UIAccessibilityPostNotification
__ UIKit: _UIAccessibilityTraitButton
__ UIKit: _UIAccessibilityTraitImage
__ UIKit: _UIAccessibilityTraitNotEnabled
__ UIKit: _UIAccessibilityTraitPlaysSound
__ UIKit: _UIAccessibilityTraitUpdatesFrequently
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UILayoutFittingCompressedSize
__ UIKit: _UIRoundToViewScale
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: __UIApplicationIsExtension
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libswiftAVFoundation.dylib: __swift_FORCE_LOAD_$_swiftAVFoundation
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocBox
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_arrayInitWithTakeBackToFront
__ libswiftCore.dylib: _swift_arrayInitWithTakeFrontToBack
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastClass
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_getEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initEnumMetadataSinglePayload
__ libswiftCore.dylib: _swift_initStructMetadata
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_bridgeObject
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_lookUpClassMethod
__ libswiftCore.dylib: _swift_makeBoxUnique
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_slowAlloc
__ libswiftCore.dylib: _swift_storeEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCoreAudio.dylib: __swift_FORCE_LOAD_$_swiftCoreAudio
__ libswiftCoreData.dylib: __swift_FORCE_LOAD_$_swiftCoreData
__ libswiftCoreFoundation.dylib: __swift_FORCE_LOAD_$_swiftCoreFoundation
__ libswiftCoreGraphics.dylib: __swift_FORCE_LOAD_$_swiftCoreGraphics
__ libswiftCoreImage.dylib: __swift_FORCE_LOAD_$_swiftCoreImage
__ libswiftCoreMIDI.dylib: __swift_FORCE_LOAD_$_swiftCoreMIDI
__ libswiftCoreMedia.dylib: __swift_FORCE_LOAD_$_swiftCoreMedia
__ libswiftDarwin.dylib: __swift_FORCE_LOAD_$_swiftDarwin
__ libswiftDataDetection.dylib: __swift_FORCE_LOAD_$_swiftDataDetection
__ libswiftDispatch.dylib: __swift_FORCE_LOAD_$_swiftDispatch
__ libswiftFileProvider.dylib: __swift_FORCE_LOAD_$_swiftFileProvider
__ libswiftFoundation.dylib: __swift_FORCE_LOAD_$_swiftFoundation
__ libswiftMetal.dylib: __swift_FORCE_LOAD_$_swiftMetal
__ libswiftObjectiveC.dylib: __swift_FORCE_LOAD_$_swiftObjectiveC
__ libswiftQuartzCore.dylib: __swift_FORCE_LOAD_$_swiftQuartzCore
__ libswiftUIKit.dylib: __swift_FORCE_LOAD_$_swiftUIKit
__ libswiftUniformTypeIdentifiers.dylib: __swift_FORCE_LOAD_$_swiftUniformTypeIdentifiers
__ libswiftos.dylib: __swift_FORCE_LOAD_$_swiftos
__ libswiftsimd.dylib: __swift_FORCE_LOAD_$_swiftsimd
ASCLockupFetcher : NSObject
 @property  <ASCServices> *connection
 @property  ASCPendingPromises *pendingRequests
 @property  ASCTaskCoordinator *requestCoordinator
 @property  ASCLazy *bundleCoordinator

  // class methods
  +[ASCLockupFetcher sharedFetcher]

  // instance methods
  -[ASCLockupFetcher pendingRequests]
  -[ASCLockupFetcher .cxx_destruct]
  -[ASCLockupFetcher initWithConnection:]
  -[ASCLockupFetcher connection]
  -[ASCLockupFetcher requestCoordinator]
  -[ASCLockupFetcher dealloc]
  -[ASCLockupFetcher daemonConnectionWasLost:]
  -[ASCLockupFetcher daemonDidRebootstrap:]
  -[ASCLockupFetcher bundleCoordinator]
  -[ASCLockupFetcher loadedLockupWithRequest:]
  -[ASCLockupFetcher lockupWithRequest:]
  -[ASCLockupFetcher submitBatchRequest:]
  -[ASCLockupFetcher lockupForBundleID:withContext:]
  -[ASCLockupFetcher collectionWithRequest:]


ASCAdTransparencyContainerView : UIView
 @property  ASCAdTransparencyButtonView *adTransparencyButton
 @property  UILabel *titleLabel
 @property  UIVisualEffectView *backgroundView
 @property  BOOL backgroundHidden
 @property  NSString *developerName

  // class methods
  +[ASCAdTransparencyContainerView edgePadding]
  +[ASCAdTransparencyContainerView buttonTextPadding]
  +[ASCAdTransparencyContainerView developerNameFontCompatibleWithTraitCollection:]

  // instance methods
  -[ASCAdTransparencyContainerView titleLabel]
  -[ASCAdTransparencyContainerView initWithCoder:]
  -[ASCAdTransparencyContainerView traitCollectionDidChange:]
  -[ASCAdTransparencyContainerView .cxx_destruct]
  -[ASCAdTransparencyContainerView updateFont]
  -[ASCAdTransparencyContainerView setTitleLabel:]
  -[ASCAdTransparencyContainerView layoutSubviews]
  -[ASCAdTransparencyContainerView sizeThatFits:]
  -[ASCAdTransparencyContainerView initWithFrame:]
  -[ASCAdTransparencyContainerView setBackgroundView:]
  -[ASCAdTransparencyContainerView setDeveloperName:]
  -[ASCAdTransparencyContainerView developerName]
  -[ASCAdTransparencyContainerView encodeWithCoder:]
  -[ASCAdTransparencyContainerView backgroundView]
  -[ASCAdTransparencyContainerView isBackgroundHidden]
  -[ASCAdTransparencyContainerView adTransparencyButton]
  -[ASCAdTransparencyContainerView setBackgroundHidden:]
  -[ASCAdTransparencyContainerView addAdTransparencyTarget:action:]


ASCImageRenderer : NSObject
 @property  {CGSize=dd} size
 @property  {UIEdgeInsets=dddd} capInsets
 @property  long long renderingMode

  // class methods
  +[ASCImageRenderer systemImageNamed:compatibleWithTraitCollection:]
  +[ASCImageRenderer bundleImageNamed:compatibleWithTraitCollection:]

  // instance methods
  -[ASCImageRenderer renderingMode]
  -[ASCImageRenderer initWithSize:]
  -[ASCImageRenderer imageWithActions:]
  -[ASCImageRenderer isEqual:]
  -[ASCImageRenderer size]
  -[ASCImageRenderer capInsets]
  -[ASCImageRenderer initWithSize:capInsets:renderingMode:]


ASCAppearMetricsPresenter : NSObject <ASCMetricsScrollObserverDelegate>
 @property  ASCMetrics *metrics
 @property  BOOL appeared
 @property  BOOL settingModel
 @property  ASCMetricsScrollObserver *scrollObserver
 @property  BOOL canAppear
 @property  BOOL canDisappear
 @property  UIView *view
 @property  ASCMetricsActivity *activity
 @property  BOOL enabled
 @property  <ASCViewModel> *model
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCAppearMetricsPresenter log]

  // instance methods
  -[ASCAppearMetricsPresenter setActivity:]
  -[ASCAppearMetricsPresenter initWithView:]
  -[ASCAppearMetricsPresenter scrollObserver]
  -[ASCAppearMetricsPresenter viewDidMoveToWindow]
  -[ASCAppearMetricsPresenter .cxx_destruct]
  -[ASCAppearMetricsPresenter setAppeared:]
  -[ASCAppearMetricsPresenter view]
  -[ASCAppearMetricsPresenter scrollViewDidScroll:]
  -[ASCAppearMetricsPresenter activity]
  -[ASCAppearMetricsPresenter isEnabled]
  -[ASCAppearMetricsPresenter model]
  -[ASCAppearMetricsPresenter metrics]
  -[ASCAppearMetricsPresenter setModel:]
  -[ASCAppearMetricsPresenter setEnabled:]
  -[ASCAppearMetricsPresenter setScrollObserver:]
  -[ASCAppearMetricsPresenter initWithView:metrics:]
  -[ASCAppearMetricsPresenter setSettingModel:]
  -[ASCAppearMetricsPresenter disappearIfNeeded]
  -[ASCAppearMetricsPresenter isAppeared]
  -[ASCAppearMetricsPresenter appearIfNeeded]
  -[ASCAppearMetricsPresenter canAppear]
  -[ASCAppearMetricsPresenter isSettingModel]
  -[ASCAppearMetricsPresenter canDisappear]
  -[ASCAppearMetricsPresenter viewDidSetHidden]
  -[ASCAppearMetricsPresenter viewDidAction]
  -[ASCAppearMetricsPresenter viewDidEndRenderWithPredicate:]
  -[ASCAppearMetricsPresenter viewDidFailRequest:withError:]
  -[ASCAppearMetricsPresenter viewDidRetryFailedRequest]


ASCLockupPresenter : NSObject
 @property  <ASCLockupPresenterView> *view
 @property  ASCPresenterContext *context
 @property  ASCOfferPresenter *offerPresenter
 @property  ASCAppearMetricsPresenter *metricsPresenter
 @property  AMSPromise *pendingRequestedLockup
 @property  ASCSignpostSpan *pendingViewRender
 @property  BOOL prefersRightToLeftViewLayout
 @property  BOOL showsPlaceholderContent
 @property  <ASCLockupPresenterObserver> *observer
 @property  ASCLockup *lockup
 @property  ASCLockupViewGroup *group
 @property  ASCLockupRequest *request
 @property  @? viewRenderSpanProvider

  // instance methods
  -[ASCLockupPresenter request:didFailWithError:]
  -[ASCLockupPresenter setRequest:]
  -[ASCLockupPresenter setGroup:]
  -[ASCLockupPresenter .cxx_destruct]
  -[ASCLockupPresenter lockup]
  -[ASCLockupPresenter view]
  -[ASCLockupPresenter request]
  -[ASCLockupPresenter group]
  -[ASCLockupPresenter observer]
  -[ASCLockupPresenter setObserver:]
  -[ASCLockupPresenter dealloc]
  -[ASCLockupPresenter clearContent]
  -[ASCLockupPresenter context]
  -[ASCLockupPresenter setLockup:]
  -[ASCLockupPresenter daemonDidRebootstrap:]
  -[ASCLockupPresenter initWithView:offerPresenter:metricsPresenter:context:]
  -[ASCLockupPresenter offerPresenter]
  -[ASCLockupPresenter metricsPresenter]
  -[ASCLockupPresenter performIconFetch]
  -[ASCLockupPresenter prefersRightToLeftViewLayout]
  -[ASCLockupPresenter reloadDefaultContent]
  -[ASCLockupPresenter retryGroup:]
  -[ASCLockupPresenter performLockupFetch]
  -[ASCLockupPresenter pendingRequestedLockup]
  -[ASCLockupPresenter showsPlaceholderContent]
  -[ASCLockupPresenter showPlaceholderContent]
  -[ASCLockupPresenter setPendingRequestedLockup:]
  -[ASCLockupPresenter requestWillFetchLockup:]
  -[ASCLockupPresenter request:didCompleteWithLockup:]
  -[ASCLockupPresenter endViewRender]
  -[ASCLockupPresenter pendingViewRender]
  -[ASCLockupPresenter iconArtwork:didFetchImage:]
  -[ASCLockupPresenter iconArtwork:didFailFetchWithError:]
  -[ASCLockupPresenter beginViewRender]
  -[ASCLockupPresenter performFollowUpWork:]
  -[ASCLockupPresenter setPendingViewRender:]
  -[ASCLockupPresenter viewRenderSpanProvider]
  -[ASCLockupPresenter initWithView:offerPresenter:metricsPresenter:]
  -[ASCLockupPresenter setShowsPlaceholderContent:]
  -[ASCLockupPresenter retryRequestIfNeeded]
  -[ASCLockupPresenter setViewRenderSpanProvider:]


ASCStatefulOffer : NSObject <ASCOffer, NSSecureCoding>
 @property  <ASCOffer> *defaultOffer
 @property  <ASCOffer> *buyOffer
 @property  <ASCOffer> *openOffer
 @property  ASCAdamID *id
 @property  NSDictionary *titles
 @property  NSDictionary *subtitles
 @property  long long flags
 @property  NSNumber *ageRating
 @property  NSArray *metrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCStatefulOffer supportsSecureCoding]

  // instance methods
  -[ASCStatefulOffer titles]
  -[ASCStatefulOffer initWithCoder:]
  -[ASCStatefulOffer .cxx_destruct]
  -[ASCStatefulOffer isEqual:]
  -[ASCStatefulOffer subtitles]
  -[ASCStatefulOffer id]
  -[ASCStatefulOffer flags]
  -[ASCStatefulOffer metrics]
  -[ASCStatefulOffer copyWithZone:]
  -[ASCStatefulOffer encodeWithCoder:]
  -[ASCStatefulOffer ageRating]
  -[ASCStatefulOffer defaultOffer]
  -[ASCStatefulOffer initWithID:titles:subtitles:flags:ageRating:metrics:defaultOffer:buyOffer:openOffer:]
  -[ASCStatefulOffer buyOffer]
  -[ASCStatefulOffer openOffer]
  -[ASCStatefulOffer offerWithMetrics:]


ASCVideo : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *videoURL
 @property  ASCArtwork *preview

  // class methods
  +[ASCVideo supportsSecureCoding]

  // instance methods
  -[ASCVideo preview]
  -[ASCVideo initWithCoder:]
  -[ASCVideo .cxx_destruct]
  -[ASCVideo isEqual:]
  -[ASCVideo copyWithZone:]
  -[ASCVideo videoURL]
  -[ASCVideo encodeWithCoder:]
  -[ASCVideo initWithVideoURL:preview:]


ASCAppOffer : NSObject <ASCOffer, NSSecureCoding, NSCopying>
 @property  NSString *baseBuyParams
 @property  NSString *metricsBuyParams
 @property  NSDictionary *additionalHeaders
 @property  NSURL *preflightPackageURL
 @property  NSString *bundleID
 @property  NSString *itemName
 @property  NSString *vendorName
 @property  ASCAdamID *id
 @property  NSDictionary *titles
 @property  NSDictionary *subtitles
 @property  long long flags
 @property  NSNumber *ageRating
 @property  NSArray *metrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCAppOffer supportsSecureCoding]

  // instance methods
  -[ASCAppOffer vendorName]
  -[ASCAppOffer bundleID]
  -[ASCAppOffer titles]
  -[ASCAppOffer initWithCoder:]
  -[ASCAppOffer .cxx_destruct]
  -[ASCAppOffer itemName]
  -[ASCAppOffer isEqual:]
  -[ASCAppOffer preflightPackageURL]
  -[ASCAppOffer subtitles]
  -[ASCAppOffer id]
  -[ASCAppOffer flags]
  -[ASCAppOffer metrics]
  -[ASCAppOffer additionalHeaders]
  -[ASCAppOffer copyWithZone:]
  -[ASCAppOffer encodeWithCoder:]
  -[ASCAppOffer ageRating]
  -[ASCAppOffer offerWithMetrics:]
  -[ASCAppOffer initWithID:titles:subtitles:flags:ageRating:metrics:baseBuyParams:metricsBuyParams:additionalHeaders:preflightPackageURL:bundleID:itemName:vendorName:]
  -[ASCAppOffer baseBuyParams]
  -[ASCAppOffer metricsBuyParams]


ASCOfferTheme : NSObject <NSSecureCoding, NSCopying>
 @property  UIColor *titleBackgroundColor
 @property  UIColor *titleTextColor
 @property  UIColor *titleTextDisabledColor
 @property  UIColor *subtitleTextColor
 @property  UIColor *iconTintColor
 @property  UIColor *progressColor

  // class methods
  +[ASCOfferTheme supportsSecureCoding]
  +[ASCOfferTheme adTheme]
  +[ASCOfferTheme secondaryTheme]
  +[ASCOfferTheme grayTheme]
  +[ASCOfferTheme whiteTheme]
  +[ASCOfferTheme blueTheme]
  +[ASCOfferTheme loadingTheme]
  +[ASCOfferTheme confirmationForTheme:]
  +[ASCOfferTheme primaryTheme]

  // instance methods
  -[ASCOfferTheme initWithCoder:]
  -[ASCOfferTheme .cxx_destruct]
  -[ASCOfferTheme subtitleTextColor]
  -[ASCOfferTheme isEqual:]
  -[ASCOfferTheme progressColor]
  -[ASCOfferTheme titleTextColor]
  -[ASCOfferTheme copyWithZone:]
  -[ASCOfferTheme encodeWithCoder:]
  -[ASCOfferTheme initWithTitleBackgroundColor:titleTextColor:subtitleTextColor:iconTintColor:progressColor:]
  -[ASCOfferTheme titleBackgroundColor]
  -[ASCOfferTheme initWithTitleBackgroundColor:titleTextColor:titleTextDisabledColor:subtitleTextColor:iconTintColor:progressColor:]
  -[ASCOfferTheme iconTintColor]
  -[ASCOfferTheme titleTextDisabledColor]


ASCExponentialBackoff : NSObject <ASCBackoff>
 @property  double baseSleepTimeInterval
 @property  double maxSleepTimeInterval
 @property  JEUnfairLock *attemptLock
 @property  long long attemptsMade
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCExponentialBackoff .cxx_destruct]
  -[ASCExponentialBackoff reset]
  -[ASCExponentialBackoff attemptLock]
  -[ASCExponentialBackoff attemptsMade]
  -[ASCExponentialBackoff baseSleepTimeInterval]
  -[ASCExponentialBackoff setAttemptsMade:]
  -[ASCExponentialBackoff maxSleepTimeInterval]
  -[ASCExponentialBackoff nextSleepTimeInterval]
  -[ASCExponentialBackoff initWithBaseSleepTimeInterval:maxSleepTimeInterval:]


ASCOfferMetadata : NSObject <NSSecureCoding, NSCopying>
 @property  BOOL empty
 @property  BOOL text
 @property  BOOL icon
 @property  BOOL progress
 @property  BOOL placeholder

  // class methods
  +[ASCOfferMetadata supportsSecureCoding]
  +[ASCOfferMetadata textMetadataWithTitle:subtitle:]
  +[ASCOfferMetadata placeholderMetadata]
  +[ASCOfferMetadata iconMetadataWithImageName:animationName:]
  +[ASCOfferMetadata emptyMetadata]
  +[ASCOfferMetadata redownloadMetadata]
  +[ASCOfferMetadata indeterminateProgressMetadata]
  +[ASCOfferMetadata progressMetadataWithValue:]

  // instance methods
  -[ASCOfferMetadata initWithCoder:]
  -[ASCOfferMetadata isEmpty]
  -[ASCOfferMetadata init]
  -[ASCOfferMetadata _init]
  -[ASCOfferMetadata copyWithZone:]
  -[ASCOfferMetadata isPlaceholder]
  -[ASCOfferMetadata isText]
  -[ASCOfferMetadata isIcon]
  -[ASCOfferMetadata encodeWithCoder:]
  -[ASCOfferMetadata isProgress]


ASCEmptyOfferMetadata : ASCOfferMetadata
  // class methods
  +[ASCEmptyOfferMetadata supportsSecureCoding]

  // instance methods
  -[ASCEmptyOfferMetadata initWithCoder:]
  -[ASCEmptyOfferMetadata isEmpty]
  -[ASCEmptyOfferMetadata init]
  -[ASCEmptyOfferMetadata isEqual:]


ASCTextOfferMetadata : ASCOfferMetadata
 @property  NSString *title
 @property  NSString *subtitle

  // class methods
  +[ASCTextOfferMetadata supportsSecureCoding]

  // instance methods
  -[ASCTextOfferMetadata initWithCoder:]
  -[ASCTextOfferMetadata .cxx_destruct]
  -[ASCTextOfferMetadata isEqual:]
  -[ASCTextOfferMetadata subtitle]
  -[ASCTextOfferMetadata title]
  -[ASCTextOfferMetadata isText]
  -[ASCTextOfferMetadata encodeWithCoder:]
  -[ASCTextOfferMetadata initWithTitle:subtitle:]


ASCIconOfferMetadata : ASCOfferMetadata
 @property  NSString *imageName
 @property  NSString *animationName

  // class methods
  +[ASCIconOfferMetadata supportsSecureCoding]

  // instance methods
  -[ASCIconOfferMetadata initWithCoder:]
  -[ASCIconOfferMetadata .cxx_destruct]
  -[ASCIconOfferMetadata isEqual:]
  -[ASCIconOfferMetadata imageName]
  -[ASCIconOfferMetadata isIcon]
  -[ASCIconOfferMetadata encodeWithCoder:]
  -[ASCIconOfferMetadata initWithImageName:animationName:]
  -[ASCIconOfferMetadata animationName]


ASCProgressOfferMetadata : ASCOfferMetadata
 @property  double percent
 @property  BOOL indeterminate

  // class methods
  +[ASCProgressOfferMetadata supportsSecureCoding]

  // instance methods
  -[ASCProgressOfferMetadata initWithCoder:]
  -[ASCProgressOfferMetadata setIndeterminate:]
  -[ASCProgressOfferMetadata isEqual:]
  -[ASCProgressOfferMetadata isIndeterminate]
  -[ASCProgressOfferMetadata percent]
  -[ASCProgressOfferMetadata encodeWithCoder:]
  -[ASCProgressOfferMetadata initIndeterminate]
  -[ASCProgressOfferMetadata initWithPercent:]
  -[ASCProgressOfferMetadata isProgress]


ASCPlaceholderOfferMetadata : ASCOfferMetadata
  // class methods
  +[ASCPlaceholderOfferMetadata supportsSecureCoding]

  // instance methods
  -[ASCPlaceholderOfferMetadata initWithCoder:]
  -[ASCPlaceholderOfferMetadata init]
  -[ASCPlaceholderOfferMetadata isEqual:]
  -[ASCPlaceholderOfferMetadata isPlaceholder]


ASCArtworkView : UIView
 @property  UIImageView *imageView
 @property  ASCBorderView *borderView
 @property  {CGSize=dd} preferredSize
 @property  NSString *decoration
 @property  ASCScreenshotDisplayConfiguration *screenshotDisplayConfiguration
 @property  UIImage *image
 @property  UIColor *placeholderColor
 @property  BOOL highlighted
 @property  UIView *overlayView

  // instance methods
  -[ASCArtworkView setHighlighted:]
  -[ASCArtworkView setPlaceholderColor:]
  -[ASCArtworkView placeholderColor]
  -[ASCArtworkView invalidateIntrinsicContentSize]
  -[ASCArtworkView imageView]
  -[ASCArtworkView contentRectForBounds:]
  -[ASCArtworkView initWithCoder:]
  -[ASCArtworkView overlayView]
  -[ASCArtworkView image]
  -[ASCArtworkView .cxx_destruct]
  -[ASCArtworkView setOverlayView:]
  -[ASCArtworkView layoutSubviews]
  -[ASCArtworkView setSemanticContentAttribute:]
  -[ASCArtworkView preferredSize]
  -[ASCArtworkView isHighlighted]
  -[ASCArtworkView sizeThatFits:]
  -[ASCArtworkView setPreferredSize:]
  -[ASCArtworkView initWithFrame:]
  -[ASCArtworkView setImage:]
  -[ASCArtworkView borderView]
  -[ASCArtworkView intrinsicContentSize]
  -[ASCArtworkView encodeWithCoder:]
  -[ASCArtworkView decoration]
  -[ASCArtworkView setDataChanged]
  -[ASCArtworkView screenshotDisplayConfiguration]
  -[ASCArtworkView cornerRadiusForContentRect:]
  -[ASCArtworkView cornerCurveForContentRect:]
  -[ASCArtworkView cornerMaskForContentRect:]
  -[ASCArtworkView setDecoration:]
  -[ASCArtworkView setScreenshotDisplayConfiguration:]


ASCAppOfferSavedState : NSObject
 @property  NSString *state
 @property  ASCOfferMetadata *metadata
 @property  long long flags
 @property  BOOL isLoadingFullState
 @property  BOOL isActionable

  // instance methods
  -[ASCAppOfferSavedState isActionable]
  -[ASCAppOfferSavedState .cxx_destruct]
  -[ASCAppOfferSavedState metadata]
  -[ASCAppOfferSavedState state]
  -[ASCAppOfferSavedState flags]
  -[ASCAppOfferSavedState initWithState:metadata:flags:]
  -[ASCAppOfferSavedState isLoadingFullState]


ASCAppOfferStateMachine : NSObject
 @property  <ASCOffer> *offer
 @property  ASCAppOfferStateCenter *stateCenter
 @property  NSMutableArray *delegates
 @property  ASCAppOfferSavedState *mostRecentState
 @property  NSString *mostRecentStatusText
 @property  ASCAppOfferSavedState *overrideState

  // instance methods
  -[ASCAppOfferStateMachine removeDelegate:]
  -[ASCAppOfferStateMachine offer]
  -[ASCAppOfferStateMachine .cxx_destruct]
  -[ASCAppOfferStateMachine delegates]
  -[ASCAppOfferStateMachine enumerateDelegatesUsingBlock:]
  -[ASCAppOfferStateMachine overrideState]
  -[ASCAppOfferStateMachine setOverrideState:]
  -[ASCAppOfferStateMachine dealloc]
  -[ASCAppOfferStateMachine addDelegate:]
  -[ASCAppOfferStateMachine stateCenter]
  -[ASCAppOfferStateMachine mostRecentState]
  -[ASCAppOfferStateMachine mostRecentStatusText]
  -[ASCAppOfferStateMachine offerStatusTextDidChange:]
  -[ASCAppOfferStateMachine setMostRecentState:]
  -[ASCAppOfferStateMachine setMostRecentStatusText:]
  -[ASCAppOfferStateMachine offerStateDidChange:withMetadata:flags:]
  -[ASCAppOfferStateMachine initWithOffer:stateCenter:]
  -[ASCAppOfferStateMachine performActionWithActivity:]
  -[ASCAppOfferStateMachine installTemporaryWaitingState]
  -[ASCAppOfferStateMachine invalidateTemporaryStateForcingUpdate:]


ASCMaterialBackgroundView : UIView <ASCLockupMediaPresenterBackgroundView>
 @property  UIVisualEffectView *visualEffectView
 @property  UIImageView *imageView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCMaterialBackgroundView imageView]
  -[ASCMaterialBackgroundView initWithCoder:]
  -[ASCMaterialBackgroundView .cxx_destruct]
  -[ASCMaterialBackgroundView layoutSubviews]
  -[ASCMaterialBackgroundView initWithFrame:]
  -[ASCMaterialBackgroundView setImage:]
  -[ASCMaterialBackgroundView setImageView:]
  -[ASCMaterialBackgroundView visualEffectView]
  -[ASCMaterialBackgroundView encodeWithCoder:]


ASCOfferPresenterViewState : NSObject <NSCopying>
 @property  ASCOfferMetadata *metadata
 @property  ASCOfferTheme *theme

  // instance methods
  -[ASCOfferPresenterViewState theme]
  -[ASCOfferPresenterViewState .cxx_destruct]
  -[ASCOfferPresenterViewState isEqual:]
  -[ASCOfferPresenterViewState metadata]
  -[ASCOfferPresenterViewState copyWithZone:]
  -[ASCOfferPresenterViewState initWithMetadata:theme:]


ASCAdamID : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *stringValue
 @property  NSNumber *numberValue
 @property  long long int64value

  // class methods
  +[ASCAdamID supportsSecureCoding]
  +[ASCAdamID invalidAdamID]

  // instance methods
  -[ASCAdamID stringValue]
  -[ASCAdamID initWithCoder:]
  -[ASCAdamID .cxx_destruct]
  -[ASCAdamID numberValue]
  -[ASCAdamID isEqual:]
  -[ASCAdamID initWithStringValue:]
  -[ASCAdamID copyWithZone:]
  -[ASCAdamID initWithInt64:]
  -[ASCAdamID encodeWithCoder:]
  -[ASCAdamID initWithNumberValue:]
  -[ASCAdamID int64value]


ASCWorkspace : NSObject
 @property  NSMutableDictionary *pendingResults
 @property  NSOperationQueue *openApplicationOperationQueue
 @property  NSRecursiveLock *stateLock
 @property  BOOL extension

  // class methods
  +[ASCWorkspace log]
  +[ASCWorkspace sharedWorkspace]
  +[ASCWorkspace withSharedWorkspace:perform:]

  // instance methods
  -[ASCWorkspace openResourceOperationDidComplete:]
  -[ASCWorkspace openResourceOperation:didFailWithError:]
  -[ASCWorkspace isExtension]
  -[ASCWorkspace openURL:]
  -[ASCWorkspace .cxx_destruct]
  -[ASCWorkspace stateLock]
  -[ASCWorkspace _init]
  -[ASCWorkspace pendingResults]
  -[ASCWorkspace openSensitiveURL:]
  -[ASCWorkspace openURL:frontBoardOptions:]
  -[ASCWorkspace enqueueOpenApplicationOperation:pendingResult:]
  -[ASCWorkspace popPendingResultForOperationName:]
  -[ASCWorkspace openApplicationOperationQueue]
  -[ASCWorkspace setOpenApplicationOperationQueue:]
  -[ASCWorkspace openApplicationWithBundleIdentifier:payloadURL:]
  -[ASCWorkspace openProductURL:]
  -[ASCWorkspace openApplicationWithBundleIdentifier:usingOpenResourceOperationWithPayloadURL:options:pendingResult:]
  -[ASCWorkspace openApplicationWithBundleIdentifier:configuration:pendingResult:]


ASCOverlaySettings : NSObject
 @property  NSNumber *rateLimitRequestsPerSecond
 @property  NSNumber *rateLimitTimeWindow
 @property  NSNumber *overlaysLoadTimeout

  // class methods
  +[ASCOverlaySettings sharedSettings]

  // instance methods
  -[ASCOverlaySettings _init]
  -[ASCOverlaySettings overlaysLoadTimeout]
  -[ASCOverlaySettings setOverlaysLoadTimeout:]
  -[ASCOverlaySettings rateLimitRequestsPerSecond]
  -[ASCOverlaySettings setRateLimitRequestsPerSecond:]
  -[ASCOverlaySettings rateLimitTimeWindow]
  -[ASCOverlaySettings setRateLimitTimeWindow:]


ASCLockupFeatureSignpostTags : NSObject <ASCLockupFeature>
 @property  NSSet *signpostTags
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCLockupFeatureSignpostTags supportsSecureCoding]

  // instance methods
  -[ASCLockupFeatureSignpostTags initWithCoder:]
  -[ASCLockupFeatureSignpostTags .cxx_destruct]
  -[ASCLockupFeatureSignpostTags isEqual:]
  -[ASCLockupFeatureSignpostTags copyWithZone:]
  -[ASCLockupFeatureSignpostTags encodeWithCoder:]
  -[ASCLockupFeatureSignpostTags signpostTags]
  -[ASCLockupFeatureSignpostTags initWithSignpostTags:]


ASCSkeletonLabel : UILabel
 @property  long long effectiveSkeletonAlignment
 @property  BOOL wantsAncesterFocusMarqueeAfterClearingSkeleton
 @property  UIColor *skeletonColor
 @property  ASCContentSkeleton *skeleton

  // instance methods
  -[ASCSkeletonLabel skeleton]
  -[ASCSkeletonLabel initWithCoder:]
  -[ASCSkeletonLabel .cxx_destruct]
  -[ASCSkeletonLabel _baselineOffsetFromBottom]
  -[ASCSkeletonLabel sizeThatFits:]
  -[ASCSkeletonLabel initWithFrame:]
  -[ASCSkeletonLabel drawRect:]
  -[ASCSkeletonLabel _firstBaselineOffsetFromTop]
  -[ASCSkeletonLabel intrinsicContentSize]
  -[ASCSkeletonLabel encodeWithCoder:]
  -[ASCSkeletonLabel setSkeleton:]
  -[ASCSkeletonLabel effectiveSkeletonAlignment]
  -[ASCSkeletonLabel skeletonRectForBounds:]
  -[ASCSkeletonLabel skeletonColor]
  -[ASCSkeletonLabel drawSkeletonInRect:]
  -[ASCSkeletonLabel setSkeletonColor:]
  -[ASCSkeletonLabel wantsAncesterFocusMarqueeAfterClearingSkeleton]
  -[ASCSkeletonLabel setWantsAncesterFocusMarqueeAfterClearingSkeleton:]


ASCViewRender : NSObject <ASCSignpostGroup>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCViewRender log]
  +[ASCViewRender subsystem]
  +[ASCViewRender category]
  +[ASCViewRender resourceRequestDidBeginWithTag:]
  +[ASCViewRender rootViewModelPresentWithTag:]
  +[ASCViewRender resourceRequestDidEndWithTag:]
  +[ASCViewRender pageRequestedWithTag:]
  +[ASCViewRender pageUserReadyWithTag:]
  +[ASCViewRender willEmitSignpostOfType:withName:]
  +[ASCViewRender requiredFieldNames]
  +[ASCViewRender overlayRequestedWithTag:]
  +[ASCViewRender modelPrefetchDidBeginWithTag:]
  +[ASCViewRender modelPrefetchDidEndWithTag:]
  +[ASCViewRender bootstrapDidBeginWithTag:]
  +[ASCViewRender bootstrapDidEndWithTag:]
  +[ASCViewRender launchCorrelationKeyWithTag:withString:]
  +[ASCViewRender requestDidBeginWithTag:]
  +[ASCViewRender requestDidEndWithTag:]
  +[ASCViewRender jsStackBootstrapDidBeginWithTag:]
  +[ASCViewRender jsStackBootstrapDidEndWithTag:]
  +[ASCViewRender jsCallDidBeginWithTag:]
  +[ASCViewRender jsCallDidEndWithTag:]
  +[ASCViewRender rootViewModelParseDidBeginWithTag:]
  +[ASCViewRender rootViewModelParseDidEndWithTag:]


ASCAlertOffer : NSObject <ASCOffer, NSSecureCoding>
 @property  NSString *alertTitle
 @property  NSString *alertMessage
 @property  <ASCOffer> *alertButtonOffer
 @property  NSString *alertButtonTitle
 @property  ASCAdamID *id
 @property  NSDictionary *titles
 @property  NSDictionary *subtitles
 @property  long long flags
 @property  NSNumber *ageRating
 @property  NSArray *metrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCAlertOffer supportsSecureCoding]

  // instance methods
  -[ASCAlertOffer titles]
  -[ASCAlertOffer initWithCoder:]
  -[ASCAlertOffer .cxx_destruct]
  -[ASCAlertOffer isEqual:]
  -[ASCAlertOffer subtitles]
  -[ASCAlertOffer alertMessage]
  -[ASCAlertOffer id]
  -[ASCAlertOffer flags]
  -[ASCAlertOffer metrics]
  -[ASCAlertOffer alertTitle]
  -[ASCAlertOffer copyWithZone:]
  -[ASCAlertOffer encodeWithCoder:]
  -[ASCAlertOffer ageRating]
  -[ASCAlertOffer offerWithMetrics:]
  -[ASCAlertOffer initWithID:titles:subtitles:flags:ageRating:metrics:alertTitle:alertMessage:alertButtonOffer:alertButtonTitle:]
  -[ASCAlertOffer alertButtonOffer]
  -[ASCAlertOffer alertButtonTitle]


ASCAdLockupView : UIView <ASCLockupPresenterObserver, ASCOfferPresenterObserver, ASCLockupMediaPresenterObserver, ASCAdLockupPresenterView, UIGestureRecognizerDelegate>
 @property  NSString *accessibilityAdvertisement
 @property  NSString *accessibilityUserRating
 @property  ASCAdTransparencyContainerView *adTransparencyContainer
 @property  ASCLockupContentView *contentView
 @property  ASCLockupMediaView *mediaView
 @property  ASCMaterialBackgroundView *materialBackgroundView
 @property  ASCGradientBackgroundView *gradientBackgroundView
 @property  ASCOfferPresenter *offerPresenter
 @property  ASCAppearMetricsPresenter *metricsPresenter
 @property  ASCLockupPresenter *lockupPresenter
 @property  ASCAdLockupPresenter *adLockupPresenter
 @property  ASCLockupMediaPresenter *lockupMediaPresenter
 @property  NSString *storeSheetHostBundleID
 @property  NSString *storeSheetUsageContext
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  UIViewController *presentingViewController
 @property  ASCLockup *lockup
 @property  ASCLockupViewGroup *group
 @property  ASCLockupRequest *request
 @property  <ASCAdLockupViewDelegate> *delegate
 @property  BOOL automaticallyPresentsProductDetails
 @property  BOOL adMarkerHidden
 @property  BOOL videoLoopingEnabled
 @property  BOOL videoMuted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCAdLockupView topContentViewSpacing]

  // instance methods
  -[ASCAdLockupView setHighlighted:]
  -[ASCAdLockupView layoutMarginsDidChange]
  -[ASCAdLockupView setRequest:]
  -[ASCAdLockupView invalidateIntrinsicContentSize]
  -[ASCAdLockupView setGroup:]
  -[ASCAdLockupView initWithCoder:]
  -[ASCAdLockupView traitCollectionDidChange:]
  -[ASCAdLockupView .cxx_destruct]
  -[ASCAdLockupView accessibilityLabel]
  -[ASCAdLockupView layoutSubviews]
  -[ASCAdLockupView lockup]
  -[ASCAdLockupView contentView]
  -[ASCAdLockupView setDelegate:]
  -[ASCAdLockupView mediaView]
  -[ASCAdLockupView presentingViewController]
  -[ASCAdLockupView setLayoutMargins:]
  -[ASCAdLockupView isHighlighted]
  -[ASCAdLockupView tapGestureRecognizer]
  -[ASCAdLockupView request]
  -[ASCAdLockupView accessibilityTraits]
  -[ASCAdLockupView sizeThatFits:]
  -[ASCAdLockupView isAccessibilityElement]
  -[ASCAdLockupView group]
  -[ASCAdLockupView accessibilityActivate]
  -[ASCAdLockupView initWithFrame:]
  -[ASCAdLockupView delegate]
  -[ASCAdLockupView didMoveToWindow]
  -[ASCAdLockupView setDeveloperName:]
  -[ASCAdLockupView intrinsicContentSize]
  -[ASCAdLockupView encodeWithCoder:]
  -[ASCAdLockupView setHidden:]
  -[ASCAdLockupView context]
  -[ASCAdLockupView _accessibilitySupplementaryHeaderViews]
  -[ASCAdLockupView _accessibilitySupplementaryFooterViews]
  -[ASCAdLockupView setLockup:]
  -[ASCAdLockupView setAutomaticallyPresentsProductDetails:]
  -[ASCAdLockupView setOfferTheme:]
  -[ASCAdLockupView presentProductDetailsViewController]
  -[ASCAdLockupView appearMetricsActivity]
  -[ASCAdLockupView setAdMarkerHidden:]
  -[ASCAdLockupView updateVisibility:]
  -[ASCAdLockupView offerPresenter]
  -[ASCAdLockupView metricsPresenter]
  -[ASCAdLockupView lockupPresenterDidBeginRequest]
  -[ASCAdLockupView lockupPresenterDidFinishRequest]
  -[ASCAdLockupView lockupPresenterDidFailRequestWithError:]
  -[ASCAdLockupView automaticallyPresentsProductDetails]
  -[ASCAdLockupView performOfferAction]
  -[ASCAdLockupView performAdTransparencyAction]
  -[ASCAdLockupView performLockupAction]
  -[ASCAdLockupView adTransparencyContainer]
  -[ASCAdLockupView updateLayoutMarginsForContext:]
  -[ASCAdLockupView lockupPresenter]
  -[ASCAdLockupView materialBackgroundView]
  -[ASCAdLockupView lockupMediaPresenter]
  -[ASCAdLockupView gradientBackgroundView]
  -[ASCAdLockupView isAdMarkerHidden]
  -[ASCAdLockupView offerTheme]
  -[ASCAdLockupView isVideoLoopingEnabled]
  -[ASCAdLockupView setVideoLoopingEnabled:]
  -[ASCAdLockupView isVideoMuted]
  -[ASCAdLockupView setVideoMuted:]
  -[ASCAdLockupView isLargeSizeClass]
  -[ASCAdLockupView layoutAdContentView]
  -[ASCAdLockupView adLockupPresenter]
  -[ASCAdLockupView metricsParametersForPresentingProductDetails]
  -[ASCAdLockupView storeSheetHostBundleID]
  -[ASCAdLockupView storeSheetUsageContext]
  -[ASCAdLockupView metricsActivityForPresentingProductDetails]
  -[ASCAdLockupView metricsParametersFromMetricsActivity:]
  -[ASCAdLockupView offerPresenterDidObserveChangeToState:]
  -[ASCAdLockupView offerPresenterWillPerformActionOfOffer:inState:withActivity:]
  -[ASCAdLockupView offerPresenterPreprocessOffer:inState:completionBlock:]
  -[ASCAdLockupView lockupMediaPresenterDidBeginScreenshotsFetchRequest]
  -[ASCAdLockupView lockupMediaPresenterDidCancelScreenshotsFetchRequest]
  -[ASCAdLockupView lockupMediaPresenterDidFinishScreenshotsFetchRequest]
  -[ASCAdLockupView lockupMediaPresenterVideoStateDidChange:]
  -[ASCAdLockupView setAdTransparencyButtonHidden:]
  -[ASCAdLockupView automaticallyGeneratesAppearMetrics]
  -[ASCAdLockupView setAutomaticallyGeneratesAppearMetrics:]
  -[ASCAdLockupView setAppearMetricsActivity:]
  -[ASCAdLockupView setStoreSheetHostBundleID:]
  -[ASCAdLockupView setStoreSheetUsageContext:]
  -[ASCAdLockupView accessibilityAdvertisement]
  -[ASCAdLockupView accessibilityUserRating]


ASCSignpostPredicate : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL empty
 @property  NSSet *tags
 @property  NSArray *dateRanges

  // class methods
  +[ASCSignpostPredicate supportsSecureCoding]

  // instance methods
  -[ASCSignpostPredicate initWithCoder:]
  -[ASCSignpostPredicate isEmpty]
  -[ASCSignpostPredicate .cxx_destruct]
  -[ASCSignpostPredicate init]
  -[ASCSignpostPredicate isEqual:]
  -[ASCSignpostPredicate copyWithZone:]
  -[ASCSignpostPredicate dateRanges]
  -[ASCSignpostPredicate encodeWithCoder:]
  -[ASCSignpostPredicate tags]
  -[ASCSignpostPredicate initWithSpans:]
  -[ASCSignpostPredicate initWithTags:dateRanges:]
  -[ASCSignpostPredicate predicateByAddingTag:]
  -[ASCSignpostPredicate predicateByAddingDateRange:]


ASCScreenshotDisplayConfiguration : NSObject <NSSecureCoding, NSCopying>
 @property  NSNumber *deviceCornerRadiusFactor
 @property  NSString *cornerCurve
 @property  unsigned long maskedCorners

  // class methods
  +[ASCScreenshotDisplayConfiguration supportsSecureCoding]
  +[ASCScreenshotDisplayConfiguration defaultCornerRadius]
  +[ASCScreenshotDisplayConfiguration defaultConfiguration]

  // instance methods
  -[ASCScreenshotDisplayConfiguration cornerCurve]
  -[ASCScreenshotDisplayConfiguration initWithCoder:]
  -[ASCScreenshotDisplayConfiguration .cxx_destruct]
  -[ASCScreenshotDisplayConfiguration isEqual:]
  -[ASCScreenshotDisplayConfiguration copyWithZone:]
  -[ASCScreenshotDisplayConfiguration maskedCorners]
  -[ASCScreenshotDisplayConfiguration encodeWithCoder:]
  -[ASCScreenshotDisplayConfiguration cornerRadiusForSize:]
  -[ASCScreenshotDisplayConfiguration initWithDeviceCornerRadiusFactor:]
  -[ASCScreenshotDisplayConfiguration deviceCornerRadiusFactor]


ASCLockupBatchRequest : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *clientID
 @property  NSSet *ids
 @property  NSString *kind
 @property  NSString *context
 @property  NSArray *requests

  // class methods
  +[ASCLockupBatchRequest supportsSecureCoding]
  +[ASCLockupBatchRequest lockupBatchRequestsFromRequests:]

  // instance methods
  -[ASCLockupBatchRequest ids]
  -[ASCLockupBatchRequest requests]
  -[ASCLockupBatchRequest initWithCoder:]
  -[ASCLockupBatchRequest .cxx_destruct]
  -[ASCLockupBatchRequest isEqual:]
  -[ASCLockupBatchRequest kind]
  -[ASCLockupBatchRequest copyWithZone:]
  -[ASCLockupBatchRequest encodeWithCoder:]
  -[ASCLockupBatchRequest context]
  -[ASCLockupBatchRequest clientID]
  -[ASCLockupBatchRequest lockupBatchRequestWithIDs:]
  -[ASCLockupBatchRequest _initWithIDs:kind:context:clientID:]
  -[ASCLockupBatchRequest initWithIDs:kind:context:]


ASCJitterBackoff : NSObject <ASCBackoff>
 @property  ASCExponentialBackoff *exponentialBackoff
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCJitterBackoff .cxx_destruct]
  -[ASCJitterBackoff reset]
  -[ASCJitterBackoff nextSleepTimeInterval]
  -[ASCJitterBackoff initWithBaseSleepTimeInterval:maxSleepTimeInterval:]
  -[ASCJitterBackoff exponentialBackoff]


ASCLocalOffer : NSObject <ASCOffer, NSCopying>
 @property  ASCOfferMetadata *metadata
 @property  @? action
 @property  ASCAdamID *id
 @property  NSDictionary *titles
 @property  NSDictionary *subtitles
 @property  long long flags
 @property  NSNumber *ageRating
 @property  NSArray *metrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCLocalOffer titles]
  -[ASCLocalOffer .cxx_destruct]
  -[ASCLocalOffer formattedPrice]
  -[ASCLocalOffer action]
  -[ASCLocalOffer isEqual:]
  -[ASCLocalOffer price]
  -[ASCLocalOffer subtitles]
  -[ASCLocalOffer metadata]
  -[ASCLocalOffer id]
  -[ASCLocalOffer flags]
  -[ASCLocalOffer metrics]
  -[ASCLocalOffer copyWithZone:]
  -[ASCLocalOffer initWithMetadata:action:]
  -[ASCLocalOffer ageRating]
  -[ASCLocalOffer offerWithMetrics:]


ASCEligibility : NSObject
  // class methods
  +[ASCEligibility isInternalASCClient:]
  +[ASCEligibility isSpotlightClient:]


ASCArtworkFetcher : NSObject
 @property  NSURLSession *urlSession
 @property  double scale
 @property  ASCTaskCoordinator *fetchCoordinator

  // class methods
  +[ASCArtworkFetcher sharedFetcher]

  // instance methods
  -[ASCArtworkFetcher imageWithContentsOfURL:]
  -[ASCArtworkFetcher .cxx_destruct]
  -[ASCArtworkFetcher urlSession]
  -[ASCArtworkFetcher scale]
  -[ASCArtworkFetcher dataWithContentsOfURL:]
  -[ASCArtworkFetcher imageForContentsOfArtwork:withSize:]
  -[ASCArtworkFetcher initWithURLSession:scale:]
  -[ASCArtworkFetcher URLWithContentsOfArtwork:preferredSize:]
  -[ASCArtworkFetcher fetchCoordinator]


ASCWatchApps : NSObject
 @property  ASCAppOfferStateCenter *appOfferStateCenter

  // class methods
  +[ASCWatchApps sharedWatchApps]

  // instance methods
  -[ASCWatchApps .cxx_destruct]
  -[ASCWatchApps reinstallAppWithID:]
  -[ASCWatchApps reinstallSystemAppWithBundleID:]
  -[ASCWatchApps initWithAppOfferStateCenter:]
  -[ASCWatchApps appOfferStateCenter]


ASCLockup : NSObject <NSSecureCoding, NSCopying, ASCViewModel>
 @property  NSSet *signpostTags
 @property  BOOL isEditorsChoice
 @property  float productRating
 @property  NSString *productRatingBadge
 @property  NSString *productDescription
 @property  ASCScreenshots *screenshots
 @property  ASCTrailers *trailers
 @property  BOOL hasMedia
 @property  NSString *developerName
 @property  NSString *productVariantID
 @property  NSArray *features
 @property  ASCAdamID *id
 @property  NSString *kind
 @property  ASCViewMetrics *metrics
 @property  ASCArtwork *icon
 @property  NSString *heading
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *ageRating
 @property  <ASCOffer> *offer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCLockup supportsSecureCoding]

  // instance methods
  -[ASCLockup offer]
  -[ASCLockup features]
  -[ASCLockup initWithCoder:]
  -[ASCLockup icon]
  -[ASCLockup heading]
  -[ASCLockup hasMedia]
  -[ASCLockup .cxx_destruct]
  -[ASCLockup isEqual:]
  -[ASCLockup subtitle]
  -[ASCLockup id]
  -[ASCLockup title]
  -[ASCLockup metrics]
  -[ASCLockup kind]
  -[ASCLockup developerName]
  -[ASCLockup copyWithZone:]
  -[ASCLockup encodeWithCoder:]
  -[ASCLockup screenshots]
  -[ASCLockup initWithID:kind:icon:heading:title:subtitle:ageRating:offer:]
  -[ASCLockup ageRating]
  -[ASCLockup initWithID:kind:metrics:icon:heading:title:subtitle:ageRating:offer:]
  -[ASCLockup productVariantID]
  -[ASCLockup productDescription]
  -[ASCLockup trailers]
  -[ASCLockup signpostTags]
  -[ASCLockup featureWithClass:]
  -[ASCLockup lockupByAddingFeature:]
  -[ASCLockup lockupWithSignpostTags:]
  -[ASCLockup initWithID:kind:metrics:icon:heading:title:subtitle:ageRating:offer:features:]
  -[ASCLockup lockupWithOffer:]
  -[ASCLockup isEditorsChoice]
  -[ASCLockup productRating]
  -[ASCLockup productRatingBadge]


ASCPresenterContext : NSObject
 @property  ASCArtworkFetcher *artworkFetcher
 @property  ASCLockupFetcher *lockupFetcher
 @property  ASCAppOfferStateCenter *appOfferStateCenter

  // class methods
  +[ASCPresenterContext sharedContext]

  // instance methods
  -[ASCPresenterContext .cxx_destruct]
  -[ASCPresenterContext isEqual:]
  -[ASCPresenterContext lockupFetcher]
  -[ASCPresenterContext artworkFetcher]
  -[ASCPresenterContext appOfferStateCenter]
  -[ASCPresenterContext initWithArtworkFetcher:lockupFetcher:appOfferStateCenter:]


ASCLockupMediaPresenter : NSObject <ASCVideoViewDelegate>
 @property  <ASCLockupMediaPresenterView> *view
 @property  ASCPresenterContext *context
 @property  ASCLockup *lockup
 @property  ASCPendingPromises *pendingArtworkPromises
 @property  <ASCLockupMediaPresenterObserver> *observer
 @property  <ASCLockupMediaPresenterBackgroundView> *backgroundView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCLockupMediaPresenter log]

  // instance methods
  -[ASCLockupMediaPresenter .cxx_destruct]
  -[ASCLockupMediaPresenter lockup]
  -[ASCLockupMediaPresenter view]
  -[ASCLockupMediaPresenter viewDidLayoutSubviews]
  -[ASCLockupMediaPresenter observer]
  -[ASCLockupMediaPresenter setBackgroundView:]
  -[ASCLockupMediaPresenter setObserver:]
  -[ASCLockupMediaPresenter dealloc]
  -[ASCLockupMediaPresenter backgroundView]
  -[ASCLockupMediaPresenter context]
  -[ASCLockupMediaPresenter setLockup:]
  -[ASCLockupMediaPresenter performFollowUpWork:]
  -[ASCLockupMediaPresenter initWithView:lockupPresenter:]
  -[ASCLockupMediaPresenter lockupPresenterDidChange:]
  -[ASCLockupMediaPresenter initWithView:lockupPresenter:context:]
  -[ASCLockupMediaPresenter pendingArtworkPromises]
  -[ASCLockupMediaPresenter videoViewForLockup:]
  -[ASCLockupMediaPresenter performScreenshotsFetch]
  -[ASCLockupMediaPresenter artworkForLockup:]
  -[ASCLockupMediaPresenter screenshotArtwork:didFetchImage:atIndex:]
  -[ASCLockupMediaPresenter screenshotArtwork:didFailFetchWithError:atIndex:]
  -[ASCLockupMediaPresenter videoView:videoStateDidChange:]


ASCOfferPresenter : NSObject <ASCAppOfferStateMachineDelegate>
 @property  <ASCOfferPresenterView> *view
 @property  ASCPresenterContext *context
 @property  ASCAppOfferStateMachine *offerStateMachine
 @property  NSString *mostRecentAppState
 @property  ASCOfferPresenterViewState *savedStateForConfirm
 @property  <ASCOfferPresenterObserver> *observer
 @property  <ASCOffer> *offer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCOfferPresenter offer]
  -[ASCOfferPresenter initWithView:]
  -[ASCOfferPresenter .cxx_destruct]
  -[ASCOfferPresenter view]
  -[ASCOfferPresenter observer]
  -[ASCOfferPresenter setObserver:]
  -[ASCOfferPresenter setOffer:]
  -[ASCOfferPresenter context]
  -[ASCOfferPresenter offerStateDidChange:withMetadata:isActionable:]
  -[ASCOfferPresenter offerStatusTextDidChange:]
  -[ASCOfferPresenter performOfferAction]
  -[ASCOfferPresenter mostRecentAppState]
  -[ASCOfferPresenter initWithView:context:]
  -[ASCOfferPresenter setMostRecentAppState:]
  -[ASCOfferPresenter clearConfirmForNewStateIfNeeded]
  -[ASCOfferPresenter setOfferStateMachine:]
  -[ASCOfferPresenter savedStateForConfirm]
  -[ASCOfferPresenter setSavedStateForConfirm:]
  -[ASCOfferPresenter offerStateMachine]
  -[ASCOfferPresenter confirmOfferActionIfNeeded]


ASCCollectionRequest : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *clientID
 @property  NSString *id
 @property  NSString *kind
 @property  NSString *context
 @property  long long limit

  // class methods
  +[ASCCollectionRequest supportsSecureCoding]

  // instance methods
  -[ASCCollectionRequest initWithCoder:]
  -[ASCCollectionRequest .cxx_destruct]
  -[ASCCollectionRequest isEqual:]
  -[ASCCollectionRequest id]
  -[ASCCollectionRequest kind]
  -[ASCCollectionRequest limit]
  -[ASCCollectionRequest copyWithZone:]
  -[ASCCollectionRequest encodeWithCoder:]
  -[ASCCollectionRequest context]
  -[ASCCollectionRequest clientID]
  -[ASCCollectionRequest initWithID:kind:context:limit:]
  -[ASCCollectionRequest collectionRequestWithClientID:]
  -[ASCCollectionRequest _initWithID:kind:context:limit:clientID:]


ASCAdTransparencyButtonView : UIButton
  // class methods
  +[ASCAdTransparencyButtonView titleColor]
  +[ASCAdTransparencyButtonView selectedTitleColor]
  +[ASCAdTransparencyButtonView adTransparencyButtonImage]
  +[ASCAdTransparencyButtonView adButtonTitleLocalized]
  +[ASCAdTransparencyButtonView buttonFontCompatibleWithTraitColletion:]

  // instance methods
  -[ASCAdTransparencyButtonView setLoading:]
  -[ASCAdTransparencyButtonView initWithCoder:]
  -[ASCAdTransparencyButtonView traitCollectionDidChange:]
  -[ASCAdTransparencyButtonView updateFont]
  -[ASCAdTransparencyButtonView initWithFrame:]
  -[ASCAdTransparencyButtonView encodeWithCoder:]
  -[ASCAdTransparencyButtonView updateInsets]


ASCArtwork : NSObject <NSSecureCoding, NSCopying>
 @property  id dataSource
 @property  UIImage *embeddedImage
 @property  NSString *URLTemplate
 @property  double width
 @property  double height
 @property  NSString *decoration
 @property  NSString *preferredCrop
 @property  NSString *preferredFormat

  // class methods
  +[ASCArtwork supportsSecureCoding]

  // instance methods
  -[ASCArtwork width]
  -[ASCArtwork preferredFormat]
  -[ASCArtwork initWithCoder:]
  -[ASCArtwork .cxx_destruct]
  -[ASCArtwork dataSource]
  -[ASCArtwork height]
  -[ASCArtwork isEqual:]
  -[ASCArtwork URLTemplate]
  -[ASCArtwork copyWithZone:]
  -[ASCArtwork encodeWithCoder:]
  -[ASCArtwork decoration]
  -[ASCArtwork preferredCrop]
  -[ASCArtwork makeURLWithSubstitutions:]
  -[ASCArtwork embeddedImage]
  -[ASCArtwork initWithURLTemplate:width:height:decoration:preferredCrop:preferredFormat:]
  -[ASCArtwork initWithImage:decoration:]


ASCOfferButton : UIControl
 @property  ASCOfferButtonBackgroundImageView *imageView
 @property  UILabel *titleLabelIfLoaded
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabelIfLoaded
 @property  UILabel *subtitleLabel
 @property  ASCModalViewInteraction *modalInteraction
 @property  CAAnimation *imageAnimation
 @property  UIViewPropertyAnimator *currentTransition
 @property  long long subtitlePosition
 @property  ASCOfferTheme *theme
 @property  ASCOfferMetadata *metadata
 @property  <ASCOfferButtonDelegate> *delegate
 @property  BOOL fixedHeight

  // instance methods
  -[ASCOfferButton setHighlighted:]
  -[ASCOfferButton titleLabel]
  -[ASCOfferButton theme]
  -[ASCOfferButton invalidateIntrinsicContentSize]
  -[ASCOfferButton imageView]
  -[ASCOfferButton currentTransition]
  -[ASCOfferButton initWithCoder:]
  -[ASCOfferButton traitCollectionDidChange:]
  -[ASCOfferButton .cxx_destruct]
  -[ASCOfferButton focusEffect]
  -[ASCOfferButton accessibilityLabel]
  -[ASCOfferButton layoutSubviews]
  -[ASCOfferButton setSemanticContentAttribute:]
  -[ASCOfferButton setDelegate:]
  -[ASCOfferButton subtitleLabelIfLoaded]
  -[ASCOfferButton setSubtitleLabelIfLoaded:]
  -[ASCOfferButton accessibilityTraits]
  -[ASCOfferButton sizeThatFits:]
  -[ASCOfferButton subtitleLabel]
  -[ASCOfferButton gestureRecognizerShouldBegin:]
  -[ASCOfferButton accessibilityHint]
  -[ASCOfferButton accessibilityValue]
  -[ASCOfferButton metadata]
  -[ASCOfferButton isAccessibilityElement]
  -[ASCOfferButton setTheme:]
  -[ASCOfferButton accessibilityActivate]
  -[ASCOfferButton initWithFrame:]
  -[ASCOfferButton setMetadata:]
  -[ASCOfferButton pressesCancelled:withEvent:]
  -[ASCOfferButton delegate]
  -[ASCOfferButton canBecomeFocused]
  -[ASCOfferButton setCurrentTransition:]
  -[ASCOfferButton pressesEnded:withEvent:]
  -[ASCOfferButton setFixedHeight:]
  -[ASCOfferButton setEnabled:]
  -[ASCOfferButton alignmentRectInsets]
  -[ASCOfferButton pressesBegan:withEvent:]
  -[ASCOfferButton intrinsicContentSize]
  -[ASCOfferButton encodeWithCoder:]
  -[ASCOfferButton isFixedHeight]
  -[ASCOfferButton titleLabelIfLoaded]
  -[ASCOfferButton setTitleLabelIfLoaded:]
  -[ASCOfferButton updateLabelStyleProperties]
  -[ASCOfferButton subtitlePosition]
  -[ASCOfferButton updateImageStyleProperties]
  -[ASCOfferButton setImageAnimation:]
  -[ASCOfferButton setModalInteraction:]
  -[ASCOfferButton modalInteraction]
  -[ASCOfferButton transitionToMetadata:scalingDurationBy:withCompletion:]
  -[ASCOfferButton canTransitionToMetadata:]
  -[ASCOfferButton chainTransitionToMetadata:scalingDurationBy:withCompletion:]
  -[ASCOfferButton transitionImageForMetadata:]
  -[ASCOfferButton transitionColorForMetadata:]
  -[ASCOfferButton imageAnimation]
  -[ASCOfferButton shouldTransitionImageViewFromMetadata:toMetadata:]
  -[ASCOfferButton updateFocusState]
  -[ASCOfferButton makeLayout]
  -[ASCOfferButton setSubtitlePosition:]
  -[ASCOfferButton beginModalStateWithCancelBlock:]
  -[ASCOfferButton endModalState]
  -[ASCOfferButton transitionToMetadata:withCompletion:]


ASCVideoView : UIView
 @property  ASCScreenshotDisplayConfiguration *screenshotDisplayConfiguration
 @property  ASCBorderedScreenshotView *previewFrameArtwork
 @property  AVPlayer *player
 @property  AVPlayerLayer *playerLayer
 @property  <ASCVideoViewDelegate> *delegate
 @property  BOOL isPlaying
 @property  BOOL loopingEnabled
 @property  BOOL muted

  // instance methods
  -[ASCVideoView playerLayer]
  -[ASCVideoView setMuted:]
  -[ASCVideoView isMuted]
  -[ASCVideoView initWithCoder:]
  -[ASCVideoView isPlaying]
  -[ASCVideoView .cxx_destruct]
  -[ASCVideoView layoutSubviews]
  -[ASCVideoView setDelegate:]
  -[ASCVideoView player]
  -[ASCVideoView setLoopingEnabled:]
  -[ASCVideoView initWithFrame:]
  -[ASCVideoView delegate]
  -[ASCVideoView setImage:]
  -[ASCVideoView dealloc]
  -[ASCVideoView encodeWithCoder:]
  -[ASCVideoView isLoopingEnabled]
  -[ASCVideoView playVideo]
  -[ASCVideoView pauseVideo]
  -[ASCVideoView screenshotDisplayConfiguration]
  -[ASCVideoView initWithFrame:videoURL:screenshotDisplayConfiguration:]
  -[ASCVideoView playerDidPlayToEndTime:]
  -[ASCVideoView previewFrameArtwork]
  -[ASCVideoView resetVideo]
  -[ASCVideoView preferredVideoSize]
  -[ASCVideoView toggleIsPlaying]


ASCLockupFeatureAd : NSObject <ASCLockupFeature>
 @property  BOOL isEditorsChoice
 @property  float productRating
 @property  NSString *productRatingBadge
 @property  NSString *productDescription
 @property  ASCScreenshots *screenshots
 @property  ASCTrailers *trailers
 @property  NSString *developerName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCLockupFeatureAd supportsSecureCoding]

  // instance methods
  -[ASCLockupFeatureAd initWithCoder:]
  -[ASCLockupFeatureAd .cxx_destruct]
  -[ASCLockupFeatureAd isEqual:]
  -[ASCLockupFeatureAd developerName]
  -[ASCLockupFeatureAd copyWithZone:]
  -[ASCLockupFeatureAd encodeWithCoder:]
  -[ASCLockupFeatureAd screenshots]
  -[ASCLockupFeatureAd productDescription]
  -[ASCLockupFeatureAd trailers]
  -[ASCLockupFeatureAd initWithEditorsChoice:productRating:productRatingBadge:productDescription:screenshots:trailers:developerName:]
  -[ASCLockupFeatureAd isEditorsChoice]
  -[ASCLockupFeatureAd productRating]
  -[ASCLockupFeatureAd productRatingBadge]


ASCMetricsActivity : NSObject <NSCopying, NSSecureCoding>
 @property  NSDictionary *fields

  // class methods
  +[ASCMetricsActivity supportsSecureCoding]
  +[ASCMetricsActivity defaultFields]

  // instance methods
  -[ASCMetricsActivity fields]
  -[ASCMetricsActivity initWithCoder:]
  -[ASCMetricsActivity .cxx_destruct]
  -[ASCMetricsActivity init]
  -[ASCMetricsActivity isEqual:]
  -[ASCMetricsActivity copyWithZone:]
  -[ASCMetricsActivity encodeWithCoder:]
  -[ASCMetricsActivity initWithFields:]
  -[ASCMetricsActivity metricsActivityWithValue:forKey:]
  -[ASCMetricsActivity metricsActivityByMergingFields:uniquingFieldsWithBlock:]
  -[ASCMetricsActivity metricsActivityByRemovingValueForKey:]


ASCStarRatingView : UIView
 @property  double rating
 @property  long long maxNumberOfStars
 @property  long long starSize
 @property  ASCStarRow *hollowStarRowView
 @property  ASCStarRow *filledStarRowView
 @property  UIColor *starColor

  // class methods
  +[ASCStarRatingView greyFill]

  // instance methods
  -[ASCStarRatingView initWithCoder:]
  -[ASCStarRatingView .cxx_destruct]
  -[ASCStarRatingView accessibilityLabel]
  -[ASCStarRatingView layoutSubviews]
  -[ASCStarRatingView rating]
  -[ASCStarRatingView setRating:]
  -[ASCStarRatingView sizeThatFits:]
  -[ASCStarRatingView initWithFrame:]
  -[ASCStarRatingView intrinsicContentSize]
  -[ASCStarRatingView encodeWithCoder:]
  -[ASCStarRatingView measurementsWithFitting:in:]
  -[ASCStarRatingView sizeWithStarSize:andNumberOfStars:]
  -[ASCStarRatingView initWithMaxNumberOfStars:starSize:andFill:]
  -[ASCStarRatingView maxNumberOfStars]
  -[ASCStarRatingView starSize]
  -[ASCStarRatingView hollowStarRowView]
  -[ASCStarRatingView filledStarRowView]
  -[ASCStarRatingView starColor]


ASCAppLaunchTrampoline : NSObject
 @property  NSObject<ASCAppLaunchTrampolineWorkspace> *workspace

  // class methods
  +[ASCAppLaunchTrampoline log]

  // instance methods
  -[ASCAppLaunchTrampoline handleURL:]
  -[ASCAppLaunchTrampoline .cxx_destruct]
  -[ASCAppLaunchTrampoline workspace]
  -[ASCAppLaunchTrampoline init]
  -[ASCAppLaunchTrampoline initWithWorkspace:]
  -[ASCAppLaunchTrampoline handleURL:workspace:]
  -[ASCAppLaunchTrampoline openApplicationWithBundleIdentifier:payloadURL:workspace:]
  -[ASCAppLaunchTrampoline openApplicationWithBundleIdentifier:payloadURL:]
  -[ASCAppLaunchTrampoline productPageURLForAdamId:eventId:encodedMetrics:]
  -[ASCAppLaunchTrampoline productPageURLForAdamId:eventId:]


ASCAppOfferStateCenter : NSObject <ASCAppOfferStateDelegate>
 @property  <ASCServices> *connection
 @property  ASCWorkspace *workspace
 @property  NSMapTable *stateMachines
 @property  ASCJitterBackoff *reconnectBackoff
 @property  ASCPendingPromises *pendingActionPromises
 @property  AMSPromise *service
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCAppOfferStateCenter log]
  +[ASCAppOfferStateCenter sharedCenter]

  // instance methods
  -[ASCAppOfferStateCenter .cxx_destruct]
  -[ASCAppOfferStateCenter workspace]
  -[ASCAppOfferStateCenter connection]
  -[ASCAppOfferStateCenter service]
  -[ASCAppOfferStateCenter dealloc]
  -[ASCAppOfferStateCenter setService:]
  -[ASCAppOfferStateCenter connectToService]
  -[ASCAppOfferStateCenter daemonConnectionWasLost:]
  -[ASCAppOfferStateCenter daemonDidRebootstrap:]
  -[ASCAppOfferStateCenter stopObservingStateForOffer:]
  -[ASCAppOfferStateCenter performActionOfOffer:withActivity:]
  -[ASCAppOfferStateCenter reinstallWatchAppWithID:]
  -[ASCAppOfferStateCenter reinstallWatchSystemAppWithBundleID:]
  -[ASCAppOfferStateCenter stateMachineForOffer:]
  -[ASCAppOfferStateCenter offer:didChangeState:withMetadata:flags:]
  -[ASCAppOfferStateCenter offer:didChangeStatusText:]
  -[ASCAppOfferStateCenter initWithConnection:workspace:]
  -[ASCAppOfferStateCenter stateMachines]
  -[ASCAppOfferStateCenter reconnectBackoff]
  -[ASCAppOfferStateCenter tryReconnect]
  -[ASCAppOfferStateCenter useOfferStateMachineFallback]
  -[ASCAppOfferStateCenter pendingActionPromises]
  -[ASCAppOfferStateCenter scheduleTryReconnect]
  -[ASCAppOfferStateCenter performActionOfOffer:withActivity:usingService:]
  -[ASCAppOfferStateCenter performFallbackActionForOffer:]


ASCTrailers : NSObject <NSSecureCoding, NSCopying>
 @property  ASCMediaPlatform *mediaPlatform
 @property  NSArray *videos

  // class methods
  +[ASCTrailers supportsSecureCoding]

  // instance methods
  -[ASCTrailers initWithCoder:]
  -[ASCTrailers .cxx_destruct]
  -[ASCTrailers isEqual:]
  -[ASCTrailers videos]
  -[ASCTrailers copyWithZone:]
  -[ASCTrailers encodeWithCoder:]
  -[ASCTrailers mediaPlatform]
  -[ASCTrailers initWithVideos:mediaPlatform:]


ASCLazy : NSObject
 @property  id objectIfLoaded
 @property  @? factory
 @property  {os_unfair_lock_s=I} loadingGuard
 @property  id object

  // instance methods
  -[ASCLazy .cxx_destruct]
  -[ASCLazy factory]
  -[ASCLazy object]
  -[ASCLazy initWithFactory:]
  -[ASCLazy objectIfLoaded]
  -[ASCLazy setObjectIfLoaded:]
  -[ASCLazy loadingGuard]


ASCDefaults : NSObject
 @property  NSString *bundleID
 @property  NSString *storefrontLocaleID
 @property  BOOL forceRightToLeftLayout
 @property  BOOL disableShutdownTimer
 @property  BOOL enableWebInspector
 @property  NSNumber *overlaysRateLimitRequestsPerSecond
 @property  NSNumber *overlaysRateLimitTimeWindow
 @property  NSNumber *overlaysLoadTimeout
 @property  BOOL forceStandaloneWatch
 @property  NSString *debugPackageURL
 @property  BOOL preferInternalJS

  // class methods
  +[ASCDefaults daemonDefaults]

  // instance methods
  -[ASCDefaults initWithBundleID:]
  -[ASCDefaults objectForKey:]
  -[ASCDefaults bundleID]
  -[ASCDefaults setObject:forKey:]
  -[ASCDefaults .cxx_destruct]
  -[ASCDefaults isEqual:]
  -[ASCDefaults overlaysRateLimitRequestsPerSecond]
  -[ASCDefaults setOverlaysRateLimitRequestsPerSecond:]
  -[ASCDefaults overlaysRateLimitTimeWindow]
  -[ASCDefaults setOverlaysRateLimitTimeWindow:]
  -[ASCDefaults overlaysLoadTimeout]
  -[ASCDefaults setOverlaysLoadTimeout:]
  -[ASCDefaults storefrontLocaleID]
  -[ASCDefaults forceRightToLeftLayout]
  -[ASCDefaults setStorefrontLocaleID:]
  -[ASCDefaults setForceRightToLeftLayout:]
  -[ASCDefaults disableShutdownTimer]
  -[ASCDefaults setDisableShutdownTimer:]
  -[ASCDefaults enableWebInspector]
  -[ASCDefaults setEnableWebInspector:]
  -[ASCDefaults forceStandaloneWatch]
  -[ASCDefaults setForceStandaloneWatch:]
  -[ASCDefaults debugPackageURL]
  -[ASCDefaults setDebugPackageURL:]
  -[ASCDefaults preferInternalJS]
  -[ASCDefaults setPreferInternalJS:]


ASCSignpostSpan : NSObject <NSSecureCoding>
 @property  NSMutableSet *mutableSupplementaryTags
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  unsigned long primaryTag
 @property  NSSet *supplementaryTags
 @property  NSDateInterval *dateRange

  // class methods
  +[ASCSignpostSpan supportsSecureCoding]

  // instance methods
  -[ASCSignpostSpan initWithCoder:]
  -[ASCSignpostSpan setEndDate:]
  -[ASCSignpostSpan .cxx_destruct]
  -[ASCSignpostSpan dateRange]
  -[ASCSignpostSpan setStartDate:]
  -[ASCSignpostSpan init]
  -[ASCSignpostSpan startDate]
  -[ASCSignpostSpan endDate]
  -[ASCSignpostSpan encodeWithCoder:]
  -[ASCSignpostSpan primaryTag]
  -[ASCSignpostSpan addSupplementaryTag:]
  -[ASCSignpostSpan beginEmitting]
  -[ASCSignpostSpan endEmitting]
  -[ASCSignpostSpan supplementaryTags]
  -[ASCSignpostSpan mutableSupplementaryTags]


ASCLockupRequest : NSObject <NSSecureCoding, NSCopying>
 @property  NSDictionary *mediaQueryParams
 @property  NSString *clientID
 @property  ASCAdamID *id
 @property  NSString *kind
 @property  NSString *context

  // class methods
  +[ASCLockupRequest supportsSecureCoding]
  +[ASCLockupRequest _requestWithID:kind:context:productVariantID:]

  // instance methods
  -[ASCLockupRequest initWithCoder:]
  -[ASCLockupRequest .cxx_destruct]
  -[ASCLockupRequest isEqual:]
  -[ASCLockupRequest id]
  -[ASCLockupRequest kind]
  -[ASCLockupRequest copyWithZone:]
  -[ASCLockupRequest encodeWithCoder:]
  -[ASCLockupRequest context]
  -[ASCLockupRequest clientID]
  -[ASCLockupRequest initWithID:kind:context:]
  -[ASCLockupRequest lockupRequestWithMediaQueryParams:]
  -[ASCLockupRequest _initWithID:kind:context:minExternalVersionID:latestReleaseID:productVariantID:]
  -[ASCLockupRequest mediaQueryParams]
  -[ASCLockupRequest lockupRequestWithClientID:]
  -[ASCLockupRequest _initWithID:kind:context:clientID:]


ASCDescriber : NSObject
 @property  <NSObject> *object
 @property  NSMutableArray *properties

  // class methods
  +[ASCDescriber nilObject]

  // instance methods
  -[ASCDescriber initWithObject:]
  -[ASCDescriber .cxx_destruct]
  -[ASCDescriber properties]
  -[ASCDescriber isEqual:]
  -[ASCDescriber object]
  -[ASCDescriber addObject:withName:]
  -[ASCDescriber finalizeDescription]
  -[ASCDescriber addBool:withName:]
  -[ASCDescriber addSensitiveObject:withName:]
  -[ASCDescriber addDouble:withName:]
  -[ASCDescriber addInteger:withName:]
  -[ASCDescriber addUInt64:withName:]
  -[ASCDescriber describeObject]
  -[ASCDescriber describeProperties]
  -[ASCDescriber addUnsignedInteger:withName:]
  -[ASCDescriber addInt64:withName:]


ASCPair : NSObject <NSCopying>
 @property  id first
 @property  id second

  // instance methods
  -[ASCPair first]
  -[ASCPair second]
  -[ASCPair .cxx_destruct]
  -[ASCPair isEqual:]
  -[ASCPair copyWithZone:]
  -[ASCPair initWithFirst:second:]


ASCSemanticColor : NSObject

ASCMetrics : NSObject
 @property  <ASCServices> *connection
 @property  ASCPendingPromises *pendingProcesses

  // class methods
  +[ASCMetrics sharedMetrics]

  // instance methods
  -[ASCMetrics .cxx_destruct]
  -[ASCMetrics initWithConnection:]
  -[ASCMetrics connection]
  -[ASCMetrics dealloc]
  -[ASCMetrics daemonConnectionWasLost:]
  -[ASCMetrics processViewMetrics:atInvocationPoint:withActivity:]
  -[ASCMetrics processViewRenderWithPredicate:]
  -[ASCMetrics processMetricsData:withActivity:]
  -[ASCMetrics logErrorMessage:]
  -[ASCMetrics pendingProcesses]
  -[ASCMetrics processMetricsData:pageFields:activity:]
  -[ASCMetrics recordCampaignToken:providerToken:withLockup:]
  -[ASCMetrics recordQToken:campaignToken:advertisementID:withLockup:]


ASCModalViewGestureRecognizer : UIGestureRecognizer
 @property  NSMutableSet *activeTouches
 @property  UIView *targetView

  // instance methods
  -[ASCModalViewGestureRecognizer initWithCoder:]
  -[ASCModalViewGestureRecognizer targetView]
  -[ASCModalViewGestureRecognizer .cxx_destruct]
  -[ASCModalViewGestureRecognizer touchesBegan:withEvent:]
  -[ASCModalViewGestureRecognizer activeTouches]
  -[ASCModalViewGestureRecognizer reset]
  -[ASCModalViewGestureRecognizer touchesCancelled:withEvent:]
  -[ASCModalViewGestureRecognizer encodeWithCoder:]
  -[ASCModalViewGestureRecognizer touchesEnded:withEvent:]
  -[ASCModalViewGestureRecognizer isAnyTouch:fromEvent:outsideView:]
  -[ASCModalViewGestureRecognizer initWithTargetView:target:action:]


ASCMetricsScrollObserver : NSObject <_UIScrollViewScrollObserver>
 @property  UIScrollView *scrollView
 @property  NSHashTable *delegates
 @property  NSMutableSet *appearedModelIDs
 @property  NSMutableSet *renderedModelIDs
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleRect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCMetricsScrollObserver observerForScrollView:]

  // instance methods
  -[ASCMetricsScrollObserver removeDelegate:]
  -[ASCMetricsScrollObserver scrollView]
  -[ASCMetricsScrollObserver _observeScrollViewDidScroll:]
  -[ASCMetricsScrollObserver .cxx_destruct]
  -[ASCMetricsScrollObserver delegates]
  -[ASCMetricsScrollObserver scrollViewDidScroll:]
  -[ASCMetricsScrollObserver visibleRect]
  -[ASCMetricsScrollObserver dealloc]
  -[ASCMetricsScrollObserver initWithScrollView:]
  -[ASCMetricsScrollObserver addDelegate:]
  -[ASCMetricsScrollObserver hasModelAppeared:]
  -[ASCMetricsScrollObserver hasModelRendered:]
  -[ASCMetricsScrollObserver modelDidRender:]
  -[ASCMetricsScrollObserver centerOfView:]
  -[ASCMetricsScrollObserver modelDidAppear:]
  -[ASCMetricsScrollObserver appearedModelIDs]
  -[ASCMetricsScrollObserver renderedModelIDs]
  -[ASCMetricsScrollObserver isDelegateAdded:]


ASCHasher : NSObject
 @property  NSMutableData *buffer
 @property  BOOL isFinalized

  // class methods
  +[ASCHasher executionSeed]

  // instance methods
  -[ASCHasher combineBool:]
  -[ASCHasher isFinalized]
  -[ASCHasher .cxx_destruct]
  -[ASCHasher init]
  -[ASCHasher combineInteger:]
  -[ASCHasher buffer]
  -[ASCHasher combineDouble:]
  -[ASCHasher finalizeHash]
  -[ASCHasher combineObject:]
  -[ASCHasher combineBytes:length:]
  -[ASCHasher setIsFinalized:]
  -[ASCHasher combineUnsignedInteger:]


ASCLockupProductDetails : NSObject
 @property  ASCLockup *lockup
 @property  NSString *storeSheetHostBundleID
 @property  NSString *storeSheetUsageContext
 @property  NSDictionary *parameters

  // class methods
  +[ASCLockupProductDetails URLForLockupID:ofKind:withOfferFlags:]
  +[ASCLockupProductDetails URLForLockupID:ofKind:offerFlags:queryParameters:]
  +[ASCLockupProductDetails queryParametersForLockup:]

  // instance methods
  -[ASCLockupProductDetails presentFromViewController:animated:completion:]
  -[ASCLockupProductDetails .cxx_destruct]
  -[ASCLockupProductDetails lockup]
  -[ASCLockupProductDetails isEqual:]
  -[ASCLockupProductDetails parameters]
  -[ASCLockupProductDetails storeSheetHostBundleID]
  -[ASCLockupProductDetails storeSheetUsageContext]
  -[ASCLockupProductDetails initWithLockup:storeSheetHostBundleID:storeSheetUsageContext:parameters:]
  -[ASCLockupProductDetails present:]
  -[ASCLockupProductDetails initWithLockup:storeSheetHostBundleID:storeSheetUsageContext:]


ASCAppOfferStateDelegateProxy : NSObject <ASCAppOfferStateDelegate>
 @property  <ASCAppOfferStateDelegate> *target
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCAppOfferStateDelegateProxy initWithTarget:]
  -[ASCAppOfferStateDelegateProxy .cxx_destruct]
  -[ASCAppOfferStateDelegateProxy target]
  -[ASCAppOfferStateDelegateProxy offer:didChangeState:withMetadata:flags:]
  -[ASCAppOfferStateDelegateProxy offer:didChangeStatusText:]


ASCAdLockupPresenter : NSObject
 @property  <ASCAdLockupPresenterView> *view
 @property  ASCLockup *lockup

  // instance methods
  -[ASCAdLockupPresenter .cxx_destruct]
  -[ASCAdLockupPresenter lockup]
  -[ASCAdLockupPresenter view]
  -[ASCAdLockupPresenter setDeveloperName:]
  -[ASCAdLockupPresenter dealloc]
  -[ASCAdLockupPresenter setLockup:]
  -[ASCAdLockupPresenter initWithView:lockupPresenter:]
  -[ASCAdLockupPresenter setAdTransparencyButtonHidden:]
  -[ASCAdLockupPresenter setEditorsChoice:]
  -[ASCAdLockupPresenter setProductRating:]
  -[ASCAdLockupPresenter setProductRatingBadge:]
  -[ASCAdLockupPresenter setProductDescription:]
  -[ASCAdLockupPresenter lockupPresenterDidChange:]
  -[ASCAdLockupPresenter shouldDisplayDescriptionForLockup:]


ASCOfferButtonBackgroundImageView : UIImageView
 @property  BOOL isBackgroundForText

  // instance methods
  -[ASCOfferButtonBackgroundImageView setIsBackgroundForText:]
  -[ASCOfferButtonBackgroundImageView isBackgroundForText]


ASCGradientBackgroundView : UIView
 @property  UIView *gradientOverlayView
 @property  CAGradientLayer *gradientLayer

  // class methods
  +[ASCGradientBackgroundView gradientPercentageOfBounds]

  // instance methods
  -[ASCGradientBackgroundView initWithCoder:]
  -[ASCGradientBackgroundView .cxx_destruct]
  -[ASCGradientBackgroundView layoutSubviews]
  -[ASCGradientBackgroundView initWithFrame:]
  -[ASCGradientBackgroundView gradientLayer]
  -[ASCGradientBackgroundView encodeWithCoder:]
  -[ASCGradientBackgroundView gradientOverlayView]


ASCArcadeOffer : NSObject <ASCOffer, NSSecureCoding>
 @property  <ASCOffer> *notSubscribedOffer
 @property  <ASCOffer> *subscribedOffer
 @property  ASCAdamID *id
 @property  NSDictionary *titles
 @property  NSDictionary *subtitles
 @property  long long flags
 @property  NSNumber *ageRating
 @property  NSArray *metrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCArcadeOffer supportsSecureCoding]

  // instance methods
  -[ASCArcadeOffer titles]
  -[ASCArcadeOffer initWithCoder:]
  -[ASCArcadeOffer .cxx_destruct]
  -[ASCArcadeOffer isEqual:]
  -[ASCArcadeOffer subtitles]
  -[ASCArcadeOffer id]
  -[ASCArcadeOffer flags]
  -[ASCArcadeOffer metrics]
  -[ASCArcadeOffer copyWithZone:]
  -[ASCArcadeOffer encodeWithCoder:]
  -[ASCArcadeOffer ageRating]
  -[ASCArcadeOffer offerWithMetrics:]
  -[ASCArcadeOffer initWithID:titles:subtitles:flags:ageRating:metrics:notSubscribedOffer:subscribedOffer:]
  -[ASCArcadeOffer notSubscribedOffer]
  -[ASCArcadeOffer subscribedOffer]


ASCServicesConnection : NSObject <ASCServices>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSXPCConnection *connectionIfValid
 @property  NSXPCConnection *connection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCServicesConnection log]
  +[ASCServicesConnection sharedConnection]

  // instance methods
  -[ASCServicesConnection .cxx_destruct]
  -[ASCServicesConnection init]
  -[ASCServicesConnection connection]
  -[ASCServicesConnection workQueue]
  -[ASCServicesConnection connectionWasInvalidated]
  -[ASCServicesConnection connectionWasInterrupted]
  -[ASCServicesConnection lockupFetcherService]
  -[ASCServicesConnection testConnection]
  -[ASCServicesConnection offerStateServiceWithDelegate:]
  -[ASCServicesConnection metricsService]
  -[ASCServicesConnection connectionIfValid]
  -[ASCServicesConnection setConnectionIfValid:]
  -[ASCServicesConnection serviceWithBlock:]


ASCURLOffer : NSObject <ASCOffer, NSSecureCoding>
 @property  NSURL *url
 @property  BOOL isSensitive
 @property  ASCAdamID *id
 @property  NSDictionary *titles
 @property  NSDictionary *subtitles
 @property  long long flags
 @property  NSNumber *ageRating
 @property  NSArray *metrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCURLOffer supportsSecureCoding]

  // instance methods
  -[ASCURLOffer isSensitive]
  -[ASCURLOffer titles]
  -[ASCURLOffer initWithCoder:]
  -[ASCURLOffer url]
  -[ASCURLOffer .cxx_destruct]
  -[ASCURLOffer isEqual:]
  -[ASCURLOffer subtitles]
  -[ASCURLOffer id]
  -[ASCURLOffer flags]
  -[ASCURLOffer metrics]
  -[ASCURLOffer copyWithZone:]
  -[ASCURLOffer encodeWithCoder:]
  -[ASCURLOffer ageRating]
  -[ASCURLOffer offerWithMetrics:]
  -[ASCURLOffer initWithID:titles:subtitles:flags:ageRating:metrics:url:isSensitive:]


ASCLockupViewGroup : NSObject
 @property  NSString *name
 @property  ASCLockupFetcher *lockupFetcher
 @property  NSMutableDictionary *deferredRequests
 @property  BOOL hasScheduledBatchRequest
 @property  NSMutableArray *prefetchSpansIfLoaded
 @property  NSMutableArray *prefetchSpans

  // class methods
  +[ASCLockupViewGroup log]
  +[ASCLockupViewGroup createConnectionWithCompletionBlock:]

  // instance methods
  -[ASCLockupViewGroup name]
  -[ASCLockupViewGroup .cxx_destruct]
  -[ASCLockupViewGroup initWithName:]
  -[ASCLockupViewGroup init]
  -[ASCLockupViewGroup _cacheLockupsWithCollectionRequest:withCompletionBlock:]
  -[ASCLockupViewGroup _prefetchLockupsWithRequests:withCompletionBlock:]
  -[ASCLockupViewGroup _cacheLockupsWithRequests:withCompletionBlock:]
  -[ASCLockupViewGroup lockupWithRequest:]
  -[ASCLockupViewGroup lockupFetcher]
  -[ASCLockupViewGroup prefetchSpansIfLoaded]
  -[ASCLockupViewGroup initWithName:lockupFetcher:]
  -[ASCLockupViewGroup setPrefetchSpansIfLoaded:]
  -[ASCLockupViewGroup hasScheduledBatchRequest]
  -[ASCLockupViewGroup performBatchRequests]
  -[ASCLockupViewGroup setHasScheduledBatchRequest:]
  -[ASCLockupViewGroup deferredRequests]
  -[ASCLockupViewGroup scheduleBatchRequestsIfNeeded]
  -[ASCLockupViewGroup prefetchSpans]
  -[ASCLockupViewGroup _lockupDictionaryForRequest:includingKeys:withCompletionBlock:]
  -[ASCLockupViewGroup _lockupRequestForBundleID:withContext:completionBlock:]


ASCRebootstrapNotifier : NSObject
 @property  int token
 @property  unsigned long rebootstrapCounterSnapshot

  // class methods
  +[ASCRebootstrapNotifier sharedNotifier]

  // instance methods
  -[ASCRebootstrapNotifier token]
  -[ASCRebootstrapNotifier dealloc]
  -[ASCRebootstrapNotifier _initSingleton]
  -[ASCRebootstrapNotifier postLocalNotification]
  -[ASCRebootstrapNotifier postLocalNotificationIfNeeded]
  -[ASCRebootstrapNotifier rebootstrapCounterSnapshot]
  -[ASCRebootstrapNotifier setRebootstrapCounterSnapshot:]


ASCModalViewInteraction : NSObject
 @property  ASCModalViewGestureRecognizer *cancelGestureRecognizer
 @property  @? cancelBlock
 @property  NSMutableArray *observers
 @property  UIView *view

  // instance methods
  -[ASCModalViewInteraction initWithView:]
  -[ASCModalViewInteraction .cxx_destruct]
  -[ASCModalViewInteraction view]
  -[ASCModalViewInteraction cancelBlock]
  -[ASCModalViewInteraction setCancelBlock:]
  -[ASCModalViewInteraction observers]
  -[ASCModalViewInteraction dealloc]
  -[ASCModalViewInteraction invalidate]
  -[ASCModalViewInteraction installWithCancelBlock:]
  -[ASCModalViewInteraction cancelGestureRecognizer]
  -[ASCModalViewInteraction cancelGestureDidChange:]
  -[ASCModalViewInteraction setCancelGestureRecognizer:]


ASCContentSkeleton : NSObject <NSCopying>
 @property  long long type
 @property  double rawValue

  // class methods
  +[ASCContentSkeleton absoluteSkeleton:]
  +[ASCContentSkeleton fractionalSkeleton:]

  // instance methods
  -[ASCContentSkeleton isEqual:]
  -[ASCContentSkeleton rawValue]
  -[ASCContentSkeleton type]
  -[ASCContentSkeleton copyWithZone:]
  -[ASCContentSkeleton widthThatFits:]
  -[ASCContentSkeleton initWithType:rawValue:]


ASCBorderView : UIView
 @property  UIColor *color
 @property  double width
 @property  double cornerRadius
 @property  NSString *cornerCurve
 @property  unsigned long cornerMask

  // instance methods
  -[ASCBorderView width]
  -[ASCBorderView cornerCurve]
  -[ASCBorderView initWithCoder:]
  -[ASCBorderView traitCollectionDidChange:]
  -[ASCBorderView setWidth:]
  -[ASCBorderView color]
  -[ASCBorderView .cxx_destruct]
  -[ASCBorderView setCornerMask:]
  -[ASCBorderView setCornerCurve:]
  -[ASCBorderView setColor:]
  -[ASCBorderView cornerMask]
  -[ASCBorderView setCornerRadius:]
  -[ASCBorderView initWithFrame:]
  -[ASCBorderView cornerRadius]
  -[ASCBorderView encodeWithCoder:]
  -[ASCBorderView updateBorderColor]


ASCBorderedScreenshotView : UIView
 @property  ASCArtworkView *artworkView

  // instance methods
  -[ASCBorderedScreenshotView imageView]
  -[ASCBorderedScreenshotView initWithCoder:]
  -[ASCBorderedScreenshotView preferredArtworkSize]
  -[ASCBorderedScreenshotView .cxx_destruct]
  -[ASCBorderedScreenshotView layoutSubviews]
  -[ASCBorderedScreenshotView artworkView]
  -[ASCBorderedScreenshotView encodeWithCoder:]
  -[ASCBorderedScreenshotView setArtworkView:]
  -[ASCBorderedScreenshotView initWithFrame:screenshotDisplayConfiguration:]


ASCMetricsData : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *topic
 @property  BOOL shouldFlush
 @property  NSDictionary *fields
 @property  NSSet *includingFields
 @property  NSSet *excludingFields

  // class methods
  +[ASCMetricsData supportsSecureCoding]

  // instance methods
  -[ASCMetricsData fields]
  -[ASCMetricsData initWithCoder:]
  -[ASCMetricsData .cxx_destruct]
  -[ASCMetricsData isEqual:]
  -[ASCMetricsData topic]
  -[ASCMetricsData copyWithZone:]
  -[ASCMetricsData encodeWithCoder:]
  -[ASCMetricsData shouldFlush]
  -[ASCMetricsData initWithTopic:shouldFlush:fields:includingFields:excludingFields:]
  -[ASCMetricsData includingFields]
  -[ASCMetricsData excludingFields]
  -[ASCMetricsData metricsDataByMergingFields:uniquingFieldsWithBlock:]


_ASCLockupResponse : NSObject
 @property  ASCLockupRequest *request
 @property  ASCLockup *lockup
 @property  NSError *error

  // instance methods
  -[_ASCLockupResponse .cxx_destruct]
  -[_ASCLockupResponse lockup]
  -[_ASCLockupResponse isEqual:]
  -[_ASCLockupResponse request]
  -[_ASCLockupResponse error]
  -[_ASCLockupResponse initWithRequest:lockup:error:]


ASCMediaPlatform : NSObject <NSSecureCoding, NSCopying>
 @property  NSNumber *deviceCornerRadiusFactor

  // class methods
  +[ASCMediaPlatform supportsSecureCoding]

  // instance methods
  -[ASCMediaPlatform initWithCoder:]
  -[ASCMediaPlatform .cxx_destruct]
  -[ASCMediaPlatform isEqual:]
  -[ASCMediaPlatform copyWithZone:]
  -[ASCMediaPlatform encodeWithCoder:]
  -[ASCMediaPlatform initWithDeviceCornerRadiusFactor:]
  -[ASCMediaPlatform deviceCornerRadiusFactor]


ASCViewMetrics : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *instructions
 @property  NSDictionary *pageFields

  // class methods
  +[ASCViewMetrics supportsSecureCoding]

  // instance methods
  -[ASCViewMetrics initWithCoder:]
  -[ASCViewMetrics .cxx_destruct]
  -[ASCViewMetrics isEqual:]
  -[ASCViewMetrics instructions]
  -[ASCViewMetrics copyWithZone:]
  -[ASCViewMetrics encodeWithCoder:]
  -[ASCViewMetrics dataForInvocationPoint:]
  -[ASCViewMetrics pageFields]
  -[ASCViewMetrics initWithInstructions:pageFields:]


ASCViewMetricsInstruction : NSObject <NSCopying, NSSecureCoding>
 @property  ASCMetricsData *data
 @property  NSSet *invocationPoints

  // class methods
  +[ASCViewMetricsInstruction supportsSecureCoding]

  // instance methods
  -[ASCViewMetricsInstruction initWithCoder:]
  -[ASCViewMetricsInstruction .cxx_destruct]
  -[ASCViewMetricsInstruction data]
  -[ASCViewMetricsInstruction isEqual:]
  -[ASCViewMetricsInstruction copyWithZone:]
  -[ASCViewMetricsInstruction encodeWithCoder:]
  -[ASCViewMetricsInstruction invocationPoints]
  -[ASCViewMetricsInstruction initWithData:invocationPoints:]


ASCAppLaunchTrampolineURL : NSObject
  // class methods
  +[ASCAppLaunchTrampolineURL URLWithAdamId:bundleId:widgetId:widgetSize:localizedName:topic:]
  +[ASCAppLaunchTrampolineURL URLWithAdamId:bundleId:widgetId:widgetSize:localizedName:]


ASCStarRow : UIView
 @property  double numberOfStarsInRow
 @property  UIImageView *starImageView
 @property  double maxNumberOfStars
 @property  CAReplicatorLayer *starLayer
 @property  long long starSize
 @property  UIColor *starColor

  // class methods
  +[ASCStarRow sizeForStarRowWithSizeOfStar:andNumberOfStars:]
  +[ASCStarRow starForSize:withFill:]

  // instance methods
  -[ASCStarRow initWithCoder:]
  -[ASCStarRow .cxx_destruct]
  -[ASCStarRow initWithFrame:]
  -[ASCStarRow encodeWithCoder:]
  -[ASCStarRow initWithStarSize:fill:starColor:andMaxNumberOfStars:]
  -[ASCStarRow setNumberOfStarsInRow:]
  -[ASCStarRow maxNumberOfStars]
  -[ASCStarRow starSize]
  -[ASCStarRow starColor]
  -[ASCStarRow frameForCurrentRating:andStarSize:]
  -[ASCStarRow modifyStarLayerRectToHideOuterPaddingUsing:]
  -[ASCStarRow numberOfStarsInRow]
  -[ASCStarRow starImageView]
  -[ASCStarRow starLayer]


ASCAdLockupContentView : UIControl <ASCOfferButtonDelegate, ASCLockupPresenterView, ASCAdLockupPresenterView, ASCOfferPresenterView>
 @property  NSString *size
 @property  ASCArtworkView *iconArtworkView
 @property  ASCSkeletonLabel *titleLabel
 @property  ASCSkeletonLabel *subtitleLabel
 @property  ASCAdTransparencyButtonView *adTransparencyButton
 @property  ASCStarRatingView *starRatingView
 @property  UILabel *userRatingLabel
 @property  ASCOfferButton *offerButton
 @property  ASCEditorsChoiceView *editorsChoiceView
 @property  ASCSkeletonLabel *descriptionLabel
 @property  UILabel *headingLabelIfLoaded
 @property  UILabel *headingLabel
 @property  UILabel *offerStatusLabelIfLoaded
 @property  UILabel *offerStatusLabel
 @property  BOOL adMarkerHidden
 @property  ASCOfferTheme *offerTheme
 @property  UIColor *loadingColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {CGSize=dd} preferredIconSize

  // class methods
  +[ASCAdLockupContentView descriptionLabelFontForSize:compatibleWithTraitCollection:]
  +[ASCAdLockupContentView userRatingLabelFontForSize:compatibleWithTraitCollection:]

  // instance methods
  -[ASCAdLockupContentView setHighlighted:]
  -[ASCAdLockupContentView layoutMarginsDidChange]
  -[ASCAdLockupContentView titleLabel]
  -[ASCAdLockupContentView invalidateIntrinsicContentSize]
  -[ASCAdLockupContentView setLoading:]
  -[ASCAdLockupContentView initWithCoder:]
  -[ASCAdLockupContentView traitCollectionDidChange:]
  -[ASCAdLockupContentView setTitle:]
  -[ASCAdLockupContentView .cxx_destruct]
  -[ASCAdLockupContentView layoutSubviews]
  -[ASCAdLockupContentView setSemanticContentAttribute:]
  -[ASCAdLockupContentView setSubtitle:]
  -[ASCAdLockupContentView setHeading:]
  -[ASCAdLockupContentView descriptionLabel]
  -[ASCAdLockupContentView setSize:]
  -[ASCAdLockupContentView sizeThatFits:]
  -[ASCAdLockupContentView subtitleLabel]
  -[ASCAdLockupContentView initWithFrame:]
  -[ASCAdLockupContentView size]
  -[ASCAdLockupContentView intrinsicContentSize]
  -[ASCAdLockupContentView encodeWithCoder:]
  -[ASCAdLockupContentView setOfferTheme:]
  -[ASCAdLockupContentView starRatingView]
  -[ASCAdLockupContentView setAdMarkerHidden:]
  -[ASCAdLockupContentView preferredIconSize]
  -[ASCAdLockupContentView userRatingLabel]
  -[ASCAdLockupContentView adTransparencyButton]
  -[ASCAdLockupContentView addAdTransparencyTarget:action:]
  -[ASCAdLockupContentView setPrefersRightToLeftLayout:]
  -[ASCAdLockupContentView setIconImage:withDecoration:]
  -[ASCAdLockupContentView offerButton]
  -[ASCAdLockupContentView headingLabelIfLoaded]
  -[ASCAdLockupContentView offerStatusLabelIfLoaded]
  -[ASCAdLockupContentView addOfferTarget:action:]
  -[ASCAdLockupContentView isAdMarkerHidden]
  -[ASCAdLockupContentView offerTheme]
  -[ASCAdLockupContentView setAdTransparencyButtonHidden:]
  -[ASCAdLockupContentView setEditorsChoice:]
  -[ASCAdLockupContentView setProductRating:]
  -[ASCAdLockupContentView setProductRatingBadge:]
  -[ASCAdLockupContentView setProductDescription:]
  -[ASCAdLockupContentView setOfferEnabled:]
  -[ASCAdLockupContentView setOfferStatus:]
  -[ASCAdLockupContentView setOfferInteractive:]
  -[ASCAdLockupContentView setOfferMetadata:]
  -[ASCAdLockupContentView endOfferModalState]
  -[ASCAdLockupContentView saveOfferState]
  -[ASCAdLockupContentView beginOfferModalStateWithCancelBlock:]
  -[ASCAdLockupContentView offerButton:willTransitionToMetadata:usingAnimator:]
  -[ASCAdLockupContentView makeLayout]
  -[ASCAdLockupContentView iconArtworkView]
  -[ASCAdLockupContentView editorsChoiceView]
  -[ASCAdLockupContentView headingLabel]
  -[ASCAdLockupContentView offerStatusLabel]
  -[ASCAdLockupContentView loadingColor]
  -[ASCAdLockupContentView setLoadingColor:]
  -[ASCAdLockupContentView removeOfferTarget:action:]
  -[ASCAdLockupContentView removeAdTransparencyTarget:action:]


ASCLockupView : UIView <ASCLockupPresenterObserver, ASCOfferPresenterObserver>
 @property  NSString *storeSheetHostBundleID
 @property  NSString *storeSheetUsageContext
 @property  ASCLockupContentView *contentView
 @property  ASCOfferPresenter *offerPresenter
 @property  ASCAppearMetricsPresenter *metricsPresenter
 @property  ASCLockupPresenter *lockupPresenter
 @property  NSString *storeSheetHostBundleID
 @property  NSString *storeSheetUsageContext
 @property  UIViewController *presentingViewController
 @property  BOOL automaticallyGeneratesAppearMetrics
 @property  ASCMetricsActivity *appearMetricsActivity
 @property  ASCOfferTheme *offerTheme
 @property  NSString *size
 @property  ASCLockup *lockup
 @property  ASCLockupViewGroup *group
 @property  ASCLockupRequest *request
 @property  <ASCLockupViewDelegate> *delegate
 @property  BOOL automaticallyPresentsProductDetails
 @property  BOOL highlighted
 @property  BOOL showsPlaceholderContent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCLockupView setHighlighted:]
  -[ASCLockupView layoutMarginsDidChange]
  -[ASCLockupView setRequest:]
  -[ASCLockupView invalidateIntrinsicContentSize]
  -[ASCLockupView setGroup:]
  -[ASCLockupView initWithCoder:]
  -[ASCLockupView .cxx_destruct]
  -[ASCLockupView accessibilityLabel]
  -[ASCLockupView layoutSubviews]
  -[ASCLockupView lockup]
  -[ASCLockupView contentView]
  -[ASCLockupView setDelegate:]
  -[ASCLockupView presentingViewController]
  -[ASCLockupView setLayoutMargins:]
  -[ASCLockupView setSize:]
  -[ASCLockupView isHighlighted]
  -[ASCLockupView request]
  -[ASCLockupView accessibilityTraits]
  -[ASCLockupView sizeThatFits:]
  -[ASCLockupView isAccessibilityElement]
  -[ASCLockupView group]
  -[ASCLockupView accessibilityActivate]
  -[ASCLockupView layoutContentView]
  -[ASCLockupView initWithFrame:]
  -[ASCLockupView delegate]
  -[ASCLockupView didMoveToWindow]
  -[ASCLockupView size]
  -[ASCLockupView intrinsicContentSize]
  -[ASCLockupView encodeWithCoder:]
  -[ASCLockupView setHidden:]
  -[ASCLockupView _accessibilitySupplementaryFooterViews]
  -[ASCLockupView setLockup:]
  -[ASCLockupView setAutomaticallyPresentsProductDetails:]
  -[ASCLockupView setOfferTheme:]
  -[ASCLockupView presentProductDetailsViewController]
  -[ASCLockupView appearMetricsActivity]
  -[ASCLockupView offerPresenter]
  -[ASCLockupView metricsPresenter]
  -[ASCLockupView showsPlaceholderContent]
  -[ASCLockupView lockupPresenterDidBeginRequest]
  -[ASCLockupView lockupPresenterDidFinishRequest]
  -[ASCLockupView lockupPresenterDidFailRequestWithError:]
  -[ASCLockupView setShowsPlaceholderContent:]
  -[ASCLockupView setViewRenderSpanProvider:]
  -[ASCLockupView automaticallyPresentsProductDetails]
  -[ASCLockupView performLockupAction]
  -[ASCLockupView lockupPresenter]
  -[ASCLockupView offerTheme]
  -[ASCLockupView storeSheetHostBundleID]
  -[ASCLockupView storeSheetUsageContext]
  -[ASCLockupView offerPresenterDidObserveChangeToState:]
  -[ASCLockupView offerPresenterWillPerformActionOfOffer:inState:withActivity:]
  -[ASCLockupView automaticallyGeneratesAppearMetrics]
  -[ASCLockupView setAutomaticallyGeneratesAppearMetrics:]
  -[ASCLockupView setAppearMetricsActivity:]
  -[ASCLockupView setStoreSheetHostBundleID:]
  -[ASCLockupView setStoreSheetUsageContext:]


ASCPendingPromises : NSObject
 @property  NSRecursiveLock *stateLock
 @property  NSMutableArray *binaryPromisesIfLoaded
 @property  NSMutableArray *binaryPromises
 @property  NSMutableArray *promisesIfLoaded
 @property  NSMutableArray *promises
 @property  BOOL hasPromises

  // instance methods
  -[ASCPendingPromises .cxx_destruct]
  -[ASCPendingPromises cancelAll]
  -[ASCPendingPromises init]
  -[ASCPendingPromises stateLock]
  -[ASCPendingPromises promises]
  -[ASCPendingPromises finishAllWithError:]
  -[ASCPendingPromises addPromise:]
  -[ASCPendingPromises hasPromises]
  -[ASCPendingPromises addBinaryPromise:]
  -[ASCPendingPromises binaryPromisesIfLoaded]
  -[ASCPendingPromises setBinaryPromisesIfLoaded:]
  -[ASCPendingPromises promisesIfLoaded]
  -[ASCPendingPromises setPromisesIfLoaded:]
  -[ASCPendingPromises binaryPromises]
  -[ASCPendingPromises enumerateBinaryPromises:andPromises:]
  -[ASCPendingPromises containsBinaryPromise:]
  -[ASCPendingPromises containsPromise:]


ASCLockupTheme : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *titleTextStyle
 @property  @? titleFontSizeProvider
 @property  double titleFontWeight
 @property  NSString *subtitleTextStyle
 @property  @? subtitleFontSizeProvider
 @property  double subtitleFontWeight
 @property  NSString *headingTextStyle
 @property  @? headingFontSizeProvider
 @property  double headingFontWeight
 @property  UIColor *titleTextColor
 @property  UIColor *subtitleTextColor
 @property  UIColor *headingTextColor

  // class methods
  +[ASCLockupTheme supportsSecureCoding]
  +[ASCLockupTheme adTheme]
  +[ASCLockupTheme adWhiteTheme]

  // instance methods
  -[ASCLockupTheme initWithCoder:]
  -[ASCLockupTheme .cxx_destruct]
  -[ASCLockupTheme subtitleTextColor]
  -[ASCLockupTheme isEqual:]
  -[ASCLockupTheme titleTextColor]
  -[ASCLockupTheme copyWithZone:]
  -[ASCLockupTheme encodeWithCoder:]
  -[ASCLockupTheme titleTextStyle]
  -[ASCLockupTheme setTitleTextStyle:]
  -[ASCLockupTheme subtitleTextStyle]
  -[ASCLockupTheme setSubtitleTextStyle:]
  -[ASCLockupTheme titleFontWeight]
  -[ASCLockupTheme initWithTitleTextColor:titleFontSizeProvider:titleFontWeight:subtitleTextColor:subtitleFontSizeProvider:subtitleFontWeight:headingTextColor:headingFontSizeProvider:headingFontWeight:]
  -[ASCLockupTheme titleFontSizeProvider]
  -[ASCLockupTheme subtitleFontSizeProvider]
  -[ASCLockupTheme subtitleFontWeight]
  -[ASCLockupTheme headingFontSizeProvider]
  -[ASCLockupTheme headingFontWeight]
  -[ASCLockupTheme headingTextStyle]
  -[ASCLockupTheme initWithTitleTextColor:titleTextStyle:titleFontWeight:subtitleTextColor:subtitleTextStyle:subtitleFontWeight:headingTextColor:headingTextStyle:headingFontWeight:]
  -[ASCLockupTheme headingTextColor]
  -[ASCLockupTheme titleFontCompatibleWithTraitCollection:]
  -[ASCLockupTheme subtitleFontCompatibleWithTraitCollection:]
  -[ASCLockupTheme headingFontCompatibleWithTraitCollection:]
  -[ASCLockupTheme setTitleFontSizeProvider:]
  -[ASCLockupTheme setTitleFontWeight:]
  -[ASCLockupTheme setSubtitleFontSizeProvider:]
  -[ASCLockupTheme setSubtitleFontWeight:]
  -[ASCLockupTheme setHeadingTextStyle:]
  -[ASCLockupTheme setHeadingFontSizeProvider:]
  -[ASCLockupTheme setHeadingFontWeight:]


ASCEditorsChoiceView : UIView
 @property  UIColor *color
 @property  UILabel *titleLabel

  // class methods
  +[ASCEditorsChoiceView editorsChoiceText]
  +[ASCEditorsChoiceView editorsChoiceFont]
  +[ASCEditorsChoiceView leftLaurel]
  +[ASCEditorsChoiceView rightLaurel]
  +[ASCEditorsChoiceView laurelPadding]

  // instance methods
  -[ASCEditorsChoiceView titleLabel]
  -[ASCEditorsChoiceView initWithCoder:]
  -[ASCEditorsChoiceView color]
  -[ASCEditorsChoiceView .cxx_destruct]
  -[ASCEditorsChoiceView accessibilityLabel]
  -[ASCEditorsChoiceView setTitleLabel:]
  -[ASCEditorsChoiceView layoutSubviews]
  -[ASCEditorsChoiceView setColor:]
  -[ASCEditorsChoiceView sizeThatFits:]
  -[ASCEditorsChoiceView initWithFrame:]
  -[ASCEditorsChoiceView drawRect:]
  -[ASCEditorsChoiceView encodeWithCoder:]


ASCLockupContentView : UIControl <ASCOfferButtonDelegate, ASCLockupPresenterView, ASCOfferPresenterView>
 @property  BOOL isOfferButtonOnlyLockup
 @property  ASCArtworkView *iconArtworkView
 @property  ASCSkeletonLabel *titleLabel
 @property  ASCSkeletonLabel *subtitleLabel
 @property  ASCOfferButton *offerButton
 @property  UILabel *headingLabelIfLoaded
 @property  UILabel *headingLabel
 @property  UILabel *offerStatusLabelIfLoaded
 @property  UILabel *offerStatusLabel
 @property  NSString *size
 @property  ASCOfferTheme *offerTheme
 @property  ASCLockupTheme *lockupTheme
 @property  UIColor *loadingColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {CGSize=dd} preferredIconSize

  // class methods
  +[ASCLockupContentView isOfferButtonOnlyLockupForSize:]
  +[ASCLockupContentView isOfferButtonFixedHeightForSize:]

  // instance methods
  -[ASCLockupContentView setHighlighted:]
  -[ASCLockupContentView titleLabel]
  -[ASCLockupContentView invalidateIntrinsicContentSize]
  -[ASCLockupContentView setLoading:]
  -[ASCLockupContentView initWithCoder:]
  -[ASCLockupContentView traitCollectionDidChange:]
  -[ASCLockupContentView setTitle:]
  -[ASCLockupContentView .cxx_destruct]
  -[ASCLockupContentView layoutSubviews]
  -[ASCLockupContentView setSemanticContentAttribute:]
  -[ASCLockupContentView setSubtitle:]
  -[ASCLockupContentView setHeading:]
  -[ASCLockupContentView setSize:]
  -[ASCLockupContentView sizeThatFits:]
  -[ASCLockupContentView subtitleLabel]
  -[ASCLockupContentView initWithFrame:]
  -[ASCLockupContentView size]
  -[ASCLockupContentView intrinsicContentSize]
  -[ASCLockupContentView encodeWithCoder:]
  -[ASCLockupContentView setOfferTheme:]
  -[ASCLockupContentView preferredIconSize]
  -[ASCLockupContentView setPrefersRightToLeftLayout:]
  -[ASCLockupContentView setIconImage:withDecoration:]
  -[ASCLockupContentView isOfferButtonOnlyLockup]
  -[ASCLockupContentView offerButton]
  -[ASCLockupContentView headingLabelIfLoaded]
  -[ASCLockupContentView offerStatusLabelIfLoaded]
  -[ASCLockupContentView addOfferTarget:action:]
  -[ASCLockupContentView setLockupTheme:]
  -[ASCLockupContentView offerTheme]
  -[ASCLockupContentView setOfferEnabled:]
  -[ASCLockupContentView setOfferStatus:]
  -[ASCLockupContentView setOfferInteractive:]
  -[ASCLockupContentView setOfferMetadata:]
  -[ASCLockupContentView endOfferModalState]
  -[ASCLockupContentView saveOfferState]
  -[ASCLockupContentView beginOfferModalStateWithCancelBlock:]
  -[ASCLockupContentView offerButton:willTransitionToMetadata:usingAnimator:]
  -[ASCLockupContentView makeLayout]
  -[ASCLockupContentView iconArtworkView]
  -[ASCLockupContentView headingLabel]
  -[ASCLockupContentView offerStatusLabel]
  -[ASCLockupContentView loadingColor]
  -[ASCLockupContentView setLoadingColor:]
  -[ASCLockupContentView removeOfferTarget:action:]
  -[ASCLockupContentView lockupTheme]


ASCLockupFeatureProductVariants : NSObject <ASCLockupFeature>
 @property  NSString *productVariantID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCLockupFeatureProductVariants supportsSecureCoding]

  // instance methods
  -[ASCLockupFeatureProductVariants initWithCoder:]
  -[ASCLockupFeatureProductVariants .cxx_destruct]
  -[ASCLockupFeatureProductVariants isEqual:]
  -[ASCLockupFeatureProductVariants copyWithZone:]
  -[ASCLockupFeatureProductVariants encodeWithCoder:]
  -[ASCLockupFeatureProductVariants productVariantID]
  -[ASCLockupFeatureProductVariants initWithProductVariantID:]


ASCLockupMediaView : UIControl <ASCLockupMediaPresenterView>
 @property  NSMutableArray *imageViews
 @property  UIView *containerView
 @property  ASCVideoView *videoView
 @property  NSArray *mediaViews
 @property  NSString *context
 @property  BOOL videoLoopingEnabled
 @property  BOOL videoMuted
 @property  unsigned long numberOfViews
 @property  ASCScreenshots *screenshots
 @property  ASCTrailers *trailers
 @property  {CGSize=dd} preferredScreenshotSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCLockupMediaView layoutMarginsDidChange]
  -[ASCLockupMediaView setVideoView:]
  -[ASCLockupMediaView invalidateIntrinsicContentSize]
  -[ASCLockupMediaView initWithCoder:]
  -[ASCLockupMediaView containerView]
  -[ASCLockupMediaView .cxx_destruct]
  -[ASCLockupMediaView imageViews]
  -[ASCLockupMediaView layoutSubviews]
  -[ASCLockupMediaView numberOfViews]
  -[ASCLockupMediaView sizeThatFits:]
  -[ASCLockupMediaView prepareForReuse]
  -[ASCLockupMediaView initWithFrame:]
  -[ASCLockupMediaView setContext:]
  -[ASCLockupMediaView videoView]
  -[ASCLockupMediaView intrinsicContentSize]
  -[ASCLockupMediaView encodeWithCoder:]
  -[ASCLockupMediaView context]
  -[ASCLockupMediaView screenshots]
  -[ASCLockupMediaView setScreenshots:]
  -[ASCLockupMediaView setImage:atIndex:]
  -[ASCLockupMediaView trailers]
  -[ASCLockupMediaView isVideoLoopingEnabled]
  -[ASCLockupMediaView setVideoLoopingEnabled:]
  -[ASCLockupMediaView isVideoMuted]
  -[ASCLockupMediaView setVideoMuted:]
  -[ASCLockupMediaView setScreenshots:andTrailers:]
  -[ASCLockupMediaView preferredScreenshotSize]
  -[ASCLockupMediaView makeLayout]
  -[ASCLockupMediaView estimatedMediaContentSize]
  -[ASCLockupMediaView mediaViews]
  -[ASCLockupMediaView layoutMarginsForCurrentContext]
  -[ASCLockupMediaView numberOfImageViews]
  -[ASCLockupMediaView updateImageViews]
  -[ASCLockupMediaView setNumberOfViews:]
  -[ASCLockupMediaView makeSizingLayout]
  -[ASCLockupMediaView setTrailers:]


ASCTaskCoordinator : NSObject
 @property  NSRecursiveLock *consistencyLock
 @property  NSMutableDictionary *pendingResults
 @property  NSCache *loadedResults
 @property  NSString *name

  // class methods
  +[ASCTaskCoordinator log]

  // instance methods
  -[ASCTaskCoordinator name]
  -[ASCTaskCoordinator .cxx_destruct]
  -[ASCTaskCoordinator initWithName:]
  -[ASCTaskCoordinator withLock:]
  -[ASCTaskCoordinator pendingResults]
  -[ASCTaskCoordinator removeAllFinishedTasks]
  -[ASCTaskCoordinator taskForKey:]
  -[ASCTaskCoordinator taskForKey:withCreatorBlock:]
  -[ASCTaskCoordinator hasTaskForKey:]
  -[ASCTaskCoordinator consistencyLock]
  -[ASCTaskCoordinator loadedResults]
  -[ASCTaskCoordinator taskForKey:didCompleteWithResult:]
  -[ASCTaskCoordinator taskForKey:didFailWithError:]
  -[ASCTaskCoordinator removeTaskForKey:]


ASCScreenshots : NSObject <NSSecureCoding, NSCopying>
 @property  ASCMediaPlatform *mediaPlatform
 @property  NSArray *artwork

  // class methods
  +[ASCScreenshots supportsSecureCoding]

  // instance methods
  -[ASCScreenshots artwork]
  -[ASCScreenshots initWithCoder:]
  -[ASCScreenshots .cxx_destruct]
  -[ASCScreenshots isEqual:]
  -[ASCScreenshots copyWithZone:]
  -[ASCScreenshots encodeWithCoder:]
  -[ASCScreenshots mediaPlatform]
  -[ASCScreenshots initWithArtwork:mediaPlatform:]


__ASCLayoutProxy : NSObject
 @property  NSString *description

  // class methods
  +[__ASCLayoutProxy adTransparencyDeveloperNamePointSizeProvider:]
  +[__ASCLayoutProxy rectWithLayoutDirectionForRect:inTraitEnvironment:relativeTo:]
  +[__ASCLayoutProxy smallLockupEstimatedSizeFittingSize:compatibleWithTraitCollection:]
  +[__ASCLayoutProxy mediumLockupEstimatedSizeFittingSize:compatibleWithTraitCollection:]
  +[__ASCLayoutProxy smallOfferButtonLockupEstimatedSizeFittingSize:compatibleWithTraitCollection:]
  +[__ASCLayoutProxy artworkFrom:and:]
  +[__ASCLayoutProxy adTransparencyButtonTitlePointSizeProvider:]
  +[__ASCLayoutProxy adTransparencyButtonScaledCapInset:in:]
  +[__ASCLayoutProxy offerButtonHeight]
  +[__ASCLayoutProxy offerProgressDiameter]
  +[__ASCLayoutProxy offerEmptyLayoutWithImageView:titleView:subtitleView:]
  +[__ASCLayoutProxy offerTextLayoutWithTitleBackgroundView:titleView:subtitleView:hasTrailingSubtitle:shouldTopAlign:]
  +[__ASCLayoutProxy offerIconLayoutWithImageView:titleView:subtitleView:hasTrailingSubtitle:shouldTopAlign:]
  +[__ASCLayoutProxy offerButtonFixedHeight]
  +[__ASCLayoutProxy traitEnvironmentWithTraitCollection:]
  +[__ASCLayoutProxy adLockupLayoutWithTraitCollection:artworkView:headingText:titleText:subtitleText:offerText:offerButton:starRatingView:ratingCountLabel:adTransparencyButton:editorsChoiceView:descriptionLabel:]
  +[__ASCLayoutProxy lockupTitlePointSizeProvider:]
  +[__ASCLayoutProxy lockupSubtitlePointSizeProvider:]
  +[__ASCLayoutProxy lockupHeadingPointSizeProvider:]
  +[__ASCLayoutProxy lockupLayoutOfSize:traitCollection:artworkView:headingText:titleText:subtitleText:offerText:offerButton:]
  +[__ASCLayoutProxy offerButtonRegularWidth]
  +[__ASCLayoutProxy lockupMediaPreferredMediaSizeWithFitting:for:with:and:in:]
  +[__ASCLayoutProxy lockupMediaLayoutFor:screenshots:trailers:containerView:mediaViews:]
  +[__ASCLayoutProxy lockupMediaSizingLayoutFor:screenshots:trailers:containerView:mediaViews:]
  +[__ASCLayoutProxy estimatedMediaContentSizeFor:screenshots:trailers:fitting:in:]
  +[__ASCLayoutProxy containerViewRotationAngleFor:screenshots:trailers:]
  +[__ASCLayoutProxy layoutMarginsFor:existingLayoutMargins:]
  +[__ASCLayoutProxy numberOfViewsInLockupMediaLayoutFor:with:and:]
  +[__ASCLayoutProxy tvTextPillOverlayWithBackgroundView:textView:]
  +[__ASCLayoutProxy axOfferButtonHeight]

  // instance methods
  -[__ASCLayoutProxy .cxx_destruct]
  -[__ASCLayoutProxy init]
  -[__ASCLayoutProxy measuredSizeFittingSize:inTraitEnvironment:]
  -[__ASCLayoutProxy alignmentInsetsInTraitEnvironment:]
  -[__ASCLayoutProxy placeChildrenRelativeToRect:inTraitEnvironment:]


_TtCV18AppStoreComponents15OfferTextLayoutP33_6EFB21F730031AFDBEC26976FC7F34E47Storage : Swift._SwiftObject

_TtC18AppStoreComponents13MediaPlatform : Swift._SwiftObject

_TtCV18AppStoreComponents16OfferEmptyLayoutP33_398031BF28E361BD948B59FE70B42E0C7Storage : Swift._SwiftObject

_TtCV18AppStoreComponents15OfferIconLayoutP33_B1BC02F59159A9D44304BD3398B514787Storage : Swift._SwiftObject

AMSPromise(AppStoreComponents)
	// instance methods
	-[AMSPromise(AppStoreComponents) asc_isFailed]
	-[AMSPromise(AppStoreComponents) asc_copy]

UIColor(AppStoreComponents)
	// class methods
	+[UIColor(AppStoreComponents) asc_colorWithLightColor:darkColor:]
	+[UIColor(AppStoreComponents) _asc_highlightBlendColor]

	// instance methods
	-[UIColor(AppStoreComponents) asc_highlightedColor]

(AppStoreComponents)
	// class methods
	+[(AppStoreComponents) asc_storefrontLocale]

	// instance methods
	-[(AppStoreComponents) asc_prefersRightToLeftLayout]

NSBundle(AppStoreComponents)
	// class methods
	+[NSBundle(AppStoreComponents) asc_frameworkBundle]
	+[NSBundle(AppStoreComponents) asc_realMainBundle]
	+[NSBundle(AppStoreComponents) asc_localizedStringKeyPlatformSuffix]

	// instance methods
	-[NSBundle(AppStoreComponents) __asc_localizedStringForKey:inTable:withLanguage:]

UIView(AppStoreComponents)
	// instance methods
	-[UIView(AppStoreComponents) asc_layoutTraitEnvironment]
	-[UIView(AppStoreComponents) asc_nearestSuperviewPassingTest:]
	-[UIView(AppStoreComponents) asc_isEqualToOrDescendantOfFocusItem:]

(AppStoreComponents)
	// class methods
	+[(AppStoreComponents) asc_attributedStringWithLockupHeading:compatibleWithTraitCollection:]

(AppStoreComponents)
	// instance methods
	-[(AppStoreComponents) asc_dictionaryByMergingDictionary:uniquingKeysWithBlock:]

UIFont(AppStoreComponents)
	// class methods
	+[UIFont(AppStoreComponents) asc_preferredFontForTextStyle:withTraits:compatibleWithTraitCollection:]
	+[UIFont(AppStoreComponents) asc_preferredFontForTextStyle:compatibleWithTraitCollection:]
	+[UIFont(AppStoreComponents) asc_fontDerivedFromTextStyle:byApplyingFontWeight:compatibleWithTraitCollection:]

01 00 0300 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBinaryPromise 
01 00 0300 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSProcessInfo 
01 00 0300 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSPromise 
01 00 0500 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 0500 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLayer 
01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 0e00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAReplicatorLayer 
01 00 0100 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 0600 /System/Library/PrivateFrameworks/JetEngine.framework/JetEngine: JEUnfairLock 
01 00 0200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSAppLink 
01 00 0200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1100 /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation: NSParagraphStyle 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1100 /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation: NSTextAttachment 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICubicTimingParameters 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusHaloEffect 
01 00 1100 /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation: UIFont 
01 00 1100 /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation: UIFontDescriptor 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 0200 /System/Library/Frameworks/CoreServices.framework/CoreServices: _LSOpenConfiguration 
01 00 1300 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
