|| __DATA.__objc_data _OBJC_CLASS_$_PPConstants
|| __DATA.__objc_data _OBJC_CLASS_$_PPContactNameRecordLoadingDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_PPEnumTypes
|| __DATA.__objc_data _OBJC_CLASS_$_PPEventNameRecordLoadingDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_PPExtractionSet
|| __DATA.__objc_data _OBJC_CLASS_$_PPHighlightedEvent
|| __DATA.__objc_data _OBJC_CLASS_$_PPHighlightedEventQuery
|| __DATA.__objc_data _OBJC_CLASS_$_PPInternalClient
|| __DATA.__objc_data _OBJC_CLASS_$_PPLocationReadWriteClient
|| __DATA.__objc_data _OBJC_CLASS_$_PPMutableLocationRecord
|| __DATA.__objc_data _OBJC_CLASS_$_PPNamedEntityRecordLoadingDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_PPPostalAddress
|| __DATA.__objc_data _OBJC_CLASS_$_PPQuickTypeBroker
|| __DATA.__objc_data _OBJC_CLASS_$_PPRecordLoadingDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_PPReranker
|| __DATA.__objc_data _OBJC_CLASS_$_PPRerankerGuardedData
|| __DATA.__objc_data _OBJC_CLASS_$_PPSiriQueryResult
|| __DATA.__objc_data _OBJC_CLASS_$_PPSuggestedEvent
|| __DATA.__objc_data _OBJC_CLASS_$_PPSuggestedEventQuery
|| __DATA.__objc_data _OBJC_CLASS_$_PPTopicReadWriteClient
|| __DATA.__objc_data _OBJC_CLASS_$_PPTripEventQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_PPConstants
|| __DATA.__objc_data _OBJC_METACLASS_$_PPContactNameRecordLoadingDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_PPEnumTypes
|| __DATA.__objc_data _OBJC_METACLASS_$_PPEventNameRecordLoadingDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_PPExtractionSet
|| __DATA.__objc_data _OBJC_METACLASS_$_PPHighlightedEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_PPHighlightedEventQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_PPInternalClient
|| __DATA.__objc_data _OBJC_METACLASS_$_PPLocationReadWriteClient
|| __DATA.__objc_data _OBJC_METACLASS_$_PPMutableLocationRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_PPNamedEntityRecordLoadingDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_PPPostalAddress
|| __DATA.__objc_data _OBJC_METACLASS_$_PPQuickTypeBroker
|| __DATA.__objc_data _OBJC_METACLASS_$_PPRecordLoadingDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_PPReranker
|| __DATA.__objc_data _OBJC_METACLASS_$_PPRerankerGuardedData
|| __DATA.__objc_data _OBJC_METACLASS_$_PPSiriQueryResult
|| __DATA.__objc_data _OBJC_METACLASS_$_PPSuggestedEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_PPSuggestedEventQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_PPTopicReadWriteClient
|| __DATA.__objc_data _OBJC_METACLASS_$_PPTripEventQuery
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPLocationRecord._algorithm
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPLocationRecord._bucketizedSentimentScore
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPLocationRecord._contextualNamedEntities
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPLocationRecord._decayRate
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPLocationRecord._extractionAssetVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPLocationRecord._extractionOsBuild
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPLocationRecord._initialScore
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPLocationRecord._location
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPLocationRecord._source
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPLocationRecord._uuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNamedEntityRecord._algorithm
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNamedEntityRecord._bucketizedSentimentScore
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNamedEntityRecord._changeType
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNamedEntityRecord._decayRate
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNamedEntityRecord._entity
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNamedEntityRecord._extractionAssetVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNamedEntityRecord._extractionOsBuild
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNamedEntityRecord._initialScore
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNamedEntityRecord._metadata
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNamedEntityRecord._source
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNamedEntityWithRecord._mostRelevantRecord
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationHandlerGuardedData._blockMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationHandlerGuardedData._delayedFiringInProgress
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationHandlerGuardedData._lastFiringTimeSince1970
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationHandlerGuardedData._objects
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._cnStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._contactsHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._contactsToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._ekStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._eventKitChangeTrackingToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._eventKitHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._eventKitToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._meCardDonationToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._meCardHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._meCardToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._portraitChangeHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._portraitChangeToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._portraitInvalidationHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._portraitInvalidationToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._suggestionsHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._suggestionsService
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPNotificationManagerGuardedData._suggestionsToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPRerankerGuardedData._entityToRankMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPTopicRecord._algorithm
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPTopicRecord._bucketizedSentimentScore
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPTopicRecord._decayRate
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPTopicRecord._extractionAssetVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPTopicRecord._extractionOsBuild
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPTopicRecord._initialScore
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPTopicRecord._isLocal
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPTopicRecord._metadata
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPTopicRecord._source
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPTopicRecord._topic
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPTopicWithRecord._mostRelevantRecord
|| __DATA.__objc_ivar _OBJC_IVAR_$_PPXPCClientPipelinedBatchQueryContext._stop
|| __DATA_CONST.__const _PETPortraitFeatureId
|| __DATA_CONST.__const _PPErrorDomain
|| __DATA_CONST.__const _PPErrorInfoKey
|| __DATA_CONST.__const _PPLocationStringFieldAddress
|| __DATA_CONST.__const _PPLocationStringFieldContextualNamedEntities
|| __DATA_CONST.__const _PPLocationStringFieldName
|| __DATA_CONST.__const _kPPBundleIdCalendar
|| __DATA_CONST.__const _kPPBundleIdCamera
|| __DATA_CONST.__const _kPPBundleIdContacts
|| __DATA_CONST.__const _kPPBundleIdCoreRoutine
|| __DATA_CONST.__const _kPPBundleIdFaceTime
|| __DATA_CONST.__const _kPPBundleIdFitness
|| __DATA_CONST.__const _kPPBundleIdHealth
|| __DATA_CONST.__const _kPPBundleIdHome
|| __DATA_CONST.__const _kPPBundleIdIOSCalendar
|| __DATA_CONST.__const _kPPBundleIdIOSContacts
|| __DATA_CONST.__const _kPPBundleIdIOSFaceTime
|| __DATA_CONST.__const _kPPBundleIdIOSMail
|| __DATA_CONST.__const _kPPBundleIdIOSMessages
|| __DATA_CONST.__const _kPPBundleIdIOSNotes
|| __DATA_CONST.__const _kPPBundleIdIOSPhotos
|| __DATA_CONST.__const _kPPBundleIdIOSSafari
|| __DATA_CONST.__const _kPPBundleIdMacOSCalendar
|| __DATA_CONST.__const _kPPBundleIdMacOSContacts
|| __DATA_CONST.__const _kPPBundleIdMacOSFaceTime
|| __DATA_CONST.__const _kPPBundleIdMacOSMail
|| __DATA_CONST.__const _kPPBundleIdMacOSMessages
|| __DATA_CONST.__const _kPPBundleIdMacOSMessagesLegacy
|| __DATA_CONST.__const _kPPBundleIdMacOSNotes
|| __DATA_CONST.__const _kPPBundleIdMacOSPhotos
|| __DATA_CONST.__const _kPPBundleIdMacOSSafari
|| __DATA_CONST.__const _kPPBundleIdMail
|| __DATA_CONST.__const _kPPBundleIdMaps
|| __DATA_CONST.__const _kPPBundleIdMessages
|| __DATA_CONST.__const _kPPBundleIdMusic
|| __DATA_CONST.__const _kPPBundleIdNews
|| __DATA_CONST.__const _kPPBundleIdNotes
|| __DATA_CONST.__const _kPPBundleIdPPTool
|| __DATA_CONST.__const _kPPBundleIdParsec
|| __DATA_CONST.__const _kPPBundleIdPhone
|| __DATA_CONST.__const _kPPBundleIdPhotos
|| __DATA_CONST.__const _kPPBundleIdPodcasts
|| __DATA_CONST.__const _kPPBundleIdReminders
|| __DATA_CONST.__const _kPPBundleIdSafari
|| __DATA_CONST.__const _kPPBundleIdSiri
|| __DATA_CONST.__const _kPPBundleIdSiriAssistantService
|| __DATA_CONST.__const _kPPBundleIdSpringBoard
|| __DATA_CONST.__const _kPPBundleIdTVApp
|| __DATA_CONST.__const _kPPBundleIdTVRemote
|| __DATA_CONST.__const _kPPBundleIdWallet
|| __DATA_CONST.__const _kPPCoderKeyCalendarColorSpaceData
|| __DATA_CONST.__const _kPPCoderKeyCalendarColor_0
|| __DATA_CONST.__const _kPPCoderKeyCalendarColor_1
|| __DATA_CONST.__const _kPPCoderKeyCalendarColor_2
|| __DATA_CONST.__const _kPPCoderKeyCalendarColor_3
|| __DATA_CONST.__const _kPPCoderKeyHasCalendarColor
|| __DATA_CONST.__const _kPPGroupIdHealthKitDonation
|| __DATA_CONST.__const _kPPGroupIdMapsCollectionsDonation
|| __DATA_CONST.__const _kPPGroupIdMapsInteractionsDonation
|| __DATA_CONST.__const _kPPGroupIdMapsPinnedPlacesDonation
|| __DATA_CONST.__const _kPPGroupIdNotifications
|| __DATA_CONST.__const _kPPGroupIdNowPlayingDonation
|| __DATA_CONST.__const _kPPGroupIdPPToolDonation
|| __DATA_CONST.__const _kPPGroupIdPhotosGraphDonation
|| __DATA_CONST.__const _kPPGroupIdPhotosOneUpDonation
|| __DATA_CONST.__const _kPPGroupIdPortraitPrefix
|| __DATA_CONST.__const _kPPGroupIdSiriDonation
|| __DATA_CONST.__const _kPPLogSubsystem
|| __DATA_CONST.__const _kPPNaturalPortraitVariantName
|| __DATA_CONST.__const _kPPPortraitVariantName
|| __DATA_CONST.__const _kPPSignpostSubsystem
|| __DATA_CONST.__const _kSGEventMetadataKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPAttendee
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPBaseFeedback
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPCalendar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPCalendarInternPool
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPClientContactNameRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPClientFeedbackHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPConfigClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPConfigStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPConnectionsClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPConnectionsCriteria
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPConnectionsLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPConnectionsStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPContact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPContactClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPContactNameRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPContactNameRecordChangeResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPContactQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPContactStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPCustomDonation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPEventClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPEventHighlight
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPEventNameRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPEventQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPEventStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPFeedback
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPFeedbackItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPLabeledValue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPLocationNamedEntities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPLocationQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPLocationReadOnlyClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPLocationRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPLocationStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPMappedFeedback
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPMutableNamedEntityRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPMutableTopicRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPNamedEntity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPNamedEntityMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPNamedEntityQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPNamedEntityReadOnlyClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPNamedEntityReadWriteClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPNamedEntityRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPNamedEntityStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPNamedEntityWithRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPNotificationHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPNotificationHandlerGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPNotificationManagerGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPQuickTypeExplanationSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPQuickTypeItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPQuickTypeQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPRecordMonitoringHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPScoredContact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPScoredEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPScoredItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPScoredLabeledValue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPScoredLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPSentimentScoreEncoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPSourceMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTopic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTopicMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTopicQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTopicReadOnlyClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTopicRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTopicStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTopicWithRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTripEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTripPart
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPUtils
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPXPCClientHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPXPCClientPipelinedBatchQueryContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPXPCClientPipelinedBatchQueryManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPXPCNamedEntityStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPXPCTopicStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPAttendee
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPBaseFeedback
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPCalendar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPCalendarInternPool
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPClientContactNameRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPClientFeedbackHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPConfigClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPConfigStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPConnectionsClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPConnectionsCriteria
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPConnectionsLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPConnectionsStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPContact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPContactClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPContactNameRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPContactNameRecordChangeResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPContactQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPContactStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPCustomDonation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPEventClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPEventHighlight
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPEventNameRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPEventQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPEventStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPFeedback
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPFeedbackItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPLabeledValue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPLocationNamedEntities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPLocationQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPLocationReadOnlyClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPLocationRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPLocationStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPMappedFeedback
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPMutableNamedEntityRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPMutableTopicRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPNamedEntity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPNamedEntityMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPNamedEntityQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPNamedEntityReadOnlyClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPNamedEntityReadWriteClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPNamedEntityRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPNamedEntityStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPNamedEntityWithRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPNotificationHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPNotificationHandlerGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPNotificationManagerGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPQuickTypeExplanationSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPQuickTypeItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPQuickTypeQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPRecordMonitoringHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPScoredContact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPScoredEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPScoredItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPScoredLabeledValue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPScoredLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPSentimentScoreEncoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPSourceMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTopic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTopicMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTopicQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTopicReadOnlyClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTopicRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTopicStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTopicWithRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTripEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTripPart
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPUtils
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPXPCClientHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPXPCClientPipelinedBatchQueryContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPXPCClientPipelinedBatchQueryManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPXPCNamedEntityStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPXPCTopicStore
|| __TEXT.__const _PersonalizationPortraitVersionNumber
|| __TEXT.__const _PersonalizationPortraitVersionString
|| __TEXT.__const _kPPDecayRateNotSet
|| __TEXT.__const _kPPLongTermDecayRate
|| __TEXT.__const _kPPMediumTermDecayRate
|| __TEXT.__const _kPPShortTermDecayRate
|| __TEXT.__text _PPCollapseWhitespaceAndStrip
|| __TEXT.__text _PPCreateCalendarColorWithDecoder
|| __TEXT.__text _PPEncodeCalendarColor
|| __TEXT.__text _PPGetSourceInternPool
|| __TEXT.__text _PPGetStringInternPool
|| __TEXT.__text _PPIsServerContext
|| __TEXT.__text _PPNewCNContactStore
|| __TEXT.__text _PPNewEKEventStore
|| __TEXT.__text _PPNewSuggestionsContactService
|| __TEXT.__text _PPNewSuggestionsHarvestStore
|| __TEXT.__text _PPNextMidnight
|| __TEXT.__text _PPPreviousMidnight
|| __TEXT.__text _PPSetContactStoreFactoryForTesting
|| __TEXT.__text _PPSetEventStoreFactoryForTesting
|| __TEXT.__text _PPSetSuggestionsContactServiceFactoryForTesting
|| __TEXT.__text _PPSetSuggestionsHarvestStoreFactoryForTesting
|| __TEXT.__text _PPSharedCNContactStore
|| __TEXT.__text _PPSharedEKEventStore
|| __TEXT.__text _PPSharedSuggestionsContactService
|| __TEXT.__text _PPSharedSuggestionsHarvestStore
|| __TEXT.__text _PPStringAllWhiteSpace
|| __TEXT.__text _PPStringFirstNumber
|| __TEXT.__text _PPStringIsWellFormed
|| __TEXT.__text _PPStringLooksLikeNumber
|| __TEXT.__text _pp_asset_log_handle
|| __TEXT.__text _pp_connections_log_handle
|| __TEXT.__text _pp_connections_signpost_handle
|| __TEXT.__text _pp_contacts_log_handle
|| __TEXT.__text _pp_contacts_signpost_handle
|| __TEXT.__text _pp_default_log_handle
|| __TEXT.__text _pp_default_signpost_handle
|| __TEXT.__text _pp_entities_log_handle
|| __TEXT.__text _pp_entities_signpost_handle
|| __TEXT.__text _pp_events_log_handle
|| __TEXT.__text _pp_events_signpost_handle
|| __TEXT.__text _pp_locations_log_handle
|| __TEXT.__text _pp_locations_signpost_handle
|| __TEXT.__text _pp_maintenance_signpost_handle
|| __TEXT.__text _pp_private_log_handle
|| __TEXT.__text _pp_quicktype_log_handle
|| __TEXT.__text _pp_quicktype_signpost_handle
|| __TEXT.__text _pp_reranker_log_handle
|| __TEXT.__text _pp_reranker_signpost_handle
|| __TEXT.__text _pp_score_interpreter_log_handle
|| __TEXT.__text _pp_topics_log_handle
|| __TEXT.__text _pp_topics_signpost_handle
|| __TEXT.__text _pp_xpc_client_log_handle
|| __TEXT.__text _pp_xpc_server_log_handle
__ Contacts: _CNContactBirthdayKey
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactGivenNameKey
__ Contacts: _CNContactJobTitleKey
__ Contacts: _CNContactMiddleNameKey
__ Contacts: _CNContactNamePrefixKey
__ Contacts: _CNContactNameSuffixKey
__ Contacts: _CNContactNicknameKey
__ Contacts: _CNContactNonGregorianBirthdayKey
__ Contacts: _CNContactOrganizationNameKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNContactPostalAddressesKey
__ Contacts: _CNContactSocialProfilesKey
__ Contacts: _CNContactStoreDidChangeNotification
__ Contacts: _CNContactStoreMeContactDidChangeNotification
__ Contacts: _CNLabelHome
__ Contacts: _CNLabelPhoneNumberHomeFax
__ Contacts: _CNLabelPhoneNumberMobile
__ Contacts: _CNLabelWork
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNMutableContact
__ Contacts: _OBJC_CLASS_$_CNMutablePostalAddress
__ Contacts: _OBJC_CLASS_$_CNPostalAddressFormatter
__ ContactsDonation: _CNDonationStoreMeCardValuesDidChangeNotification
__ CoreFoundation: _CFErrorCopyDescription
__ CoreFoundation: _CFPropertyListCreateData
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetFastestEncoding
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSMallocException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorCreateCopy
__ CoreGraphics: _CGColorCreateCopyByMatchingToColorSpace
__ CoreGraphics: _CGColorEqualToColor
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorRetain
__ CoreGraphics: _CGColorSpaceCopyPropertyList
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceCreateWithPropertyList
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLPlacemark
__ CoreML: _OBJC_CLASS_$_MLFeatureValue
__ CoreML: _OBJC_CLASS_$_MLSequence
__ Foundation: _NSDefaultMallocZone
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTextCheckingCityKey
__ Foundation: _NSTextCheckingCountryKey
__ Foundation: _NSTextCheckingStateKey
__ Foundation: _NSTextCheckingStreetKey
__ Foundation: _NSTextCheckingZIPKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ LanguageModeling: _kLMAttributedTokenAddressField
__ LanguageModeling: _kLMAttributedTokenBirthdayField
__ LanguageModeling: _kLMAttributedTokenCompanyField
__ LanguageModeling: _kLMAttributedTokenDesiredFieldKey
__ LanguageModeling: _kLMAttributedTokenDistanceAwayRequest
__ LanguageModeling: _kLMAttributedTokenDurationOfAvailabilityRequest
__ LanguageModeling: _kLMAttributedTokenETAIntervalRequest
__ LanguageModeling: _kLMAttributedTokenETARequest
__ LanguageModeling: _kLMAttributedTokenETASpecificRequest
__ LanguageModeling: _kLMAttributedTokenEmailAddressField
__ LanguageModeling: _kLMAttributedTokenEventType
__ LanguageModeling: _kLMAttributedTokenFaxNumberField
__ LanguageModeling: _kLMAttributedTokenFirstPersonType
__ LanguageModeling: _kLMAttributedTokenFullNameField
__ LanguageModeling: _kLMAttributedTokenFullNameQualifier
__ LanguageModeling: _kLMAttributedTokenGivenNameField
__ LanguageModeling: _kLMAttributedTokenGivenNameQualifier
__ LanguageModeling: _kLMAttributedTokenHomeAddressField
__ LanguageModeling: _kLMAttributedTokenHomeCityField
__ LanguageModeling: _kLMAttributedTokenHomePhoneNumberField
__ LanguageModeling: _kLMAttributedTokenLastEventOfDayRequest
__ LanguageModeling: _kLMAttributedTokenLocationOfMeetingRequest
__ LanguageModeling: _kLMAttributedTokenLocationType
__ LanguageModeling: _kLMAttributedTokenMediaNameQualifier
__ LanguageModeling: _kLMAttributedTokenMobilePhoneNumberField
__ LanguageModeling: _kLMAttributedTokenNameOfDestinationRequest
__ LanguageModeling: _kLMAttributedTokenNameOfStreetRequest
__ LanguageModeling: _kLMAttributedTokenNavigationType
__ LanguageModeling: _kLMAttributedTokenNextEventNameRequest
__ LanguageModeling: _kLMAttributedTokenNextTimeAvailableRequest
__ LanguageModeling: _kLMAttributedTokenPersonType
__ LanguageModeling: _kLMAttributedTokenPhoneNumberField
__ LanguageModeling: _kLMAttributedTokenPostalCodeField
__ LanguageModeling: _kLMAttributedTokenQualifiersKey
__ LanguageModeling: _kLMAttributedTokenRecentAddressType
__ LanguageModeling: _kLMAttributedTokenRecentLocationType
__ LanguageModeling: _kLMAttributedTokenRequestKey
__ LanguageModeling: _kLMAttributedTokenSecondPersonType
__ LanguageModeling: _kLMAttributedTokenSocialMediaField
__ LanguageModeling: _kLMAttributedTokenSubtypeKey
__ LanguageModeling: _kLMAttributedTokenSurnameField
__ LanguageModeling: _kLMAttributedTokenSurnameQualifier
__ LanguageModeling: _kLMAttributedTokenThirdPersonType
__ LanguageModeling: _kLMAttributedTokenTimeOfMeetingRequest
__ LanguageModeling: _kLMAttributedTokenTypeKey
__ LanguageModeling: _kLMAttributedTokenWorkAddressField
__ LanguageModeling: _kLMAttributedTokenWorkCityField
__ LanguageModeling: _kLMAttributedTokenWorkPhoneNumberField
__ ProactiveSupport: _OBJC_CLASS_$__PASDeviceState
__ ProactiveSupport: _OBJC_CLASS_$__PASDispatch
__ ProactiveSupport: _OBJC_CLASS_$__PASDomainSelection
__ ProactiveSupport: _OBJC_CLASS_$__PASInternPool
__ ProactiveSupport: _OBJC_CLASS_$__PASLanguageDetection
__ ProactiveSupport: _OBJC_CLASS_$__PASLock
__ ProactiveSupport: _OBJC_CLASS_$__PASTuple2
__ ProactiveSupport: _OBJC_CLASS_$__PASZoneSupport
__ ProactiveSupport: _OBJC_CLASS_$__PASZonedObject
__ ProactiveSupport: _OBJC_METACLASS_$__PASZonedObject
__ libSystem.B.dylib: _CC_SHA256_Final
__ libSystem.B.dylib: _CC_SHA256_Init
__ libSystem.B.dylib: _CC_SHA256_Update
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _localtime_r
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: dyld_stub_binder
__ libicucore.A.dylib: _u_strIsWellFormed
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
PPClientFeedbackHelper : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *clientIdentifier

  // instance methods
  -[PPClientFeedbackHelper clientIdentifier]
  -[PPClientFeedbackHelper .cxx_destruct]
  -[PPClientFeedbackHelper setClientIdentifier:]
  -[PPClientFeedbackHelper initWithParentObject:]


PPExtractionSet : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSArray *namedEntityRecords
 @property  NSArray *topicRecords

  // class methods
  +[PPExtractionSet supportsSecureCoding]

  // instance methods
  -[PPExtractionSet copyWithZone:]
  -[PPExtractionSet .cxx_destruct]
  -[PPExtractionSet encodeWithCoder:]
  -[PPExtractionSet initWithNamedEntityRecords:topicRecords:]
  -[PPExtractionSet namedEntityRecords]
  -[PPExtractionSet topicRecords]
  -[PPExtractionSet isEmpty]
  -[PPExtractionSet merge:]
  -[PPExtractionSet initWithCoder:]


PPSourceMetadata : _PASZonedObject /System/Library/Frameworks/Contacts.framework/Contacts <NSCopying, NSSecureCoding, MLFeatureProvider>
 @property  unsigned int dwellTimeSeconds
 @property  unsigned int lengthSeconds
 @property  unsigned int lengthCharacters
 @property  unsigned short donationCount
 @property  unsigned short contactHandleCount
 @property  unsigned char flags
 @property  NSSet *featureNames

  // class methods
  +[PPSourceMetadata supportsSecureCoding]

  // instance methods
  -[PPSourceMetadata copyWithZone:]
  -[PPSourceMetadata init]
  -[PPSourceMetadata featureNames]
  -[PPSourceMetadata featureValueForName:]
  -[PPSourceMetadata initWithDwellTimeSeconds:lengthSeconds:lengthCharacters:donationCount:contactHandleCount:flags:]
  -[PPSourceMetadata dwellTimeSeconds]
  -[PPSourceMetadata donationCount]
  -[PPSourceMetadata encodeWithCoder:]
  -[PPSourceMetadata initWithFlags:]
  -[PPSourceMetadata isEqual:]
  -[PPSourceMetadata flags]
  -[PPSourceMetadata lengthSeconds]
  -[PPSourceMetadata isEqualToSourceMetadata:]
  -[PPSourceMetadata initWithCoder:]
  -[PPSourceMetadata lengthCharacters]
  -[PPSourceMetadata contactHandleCount]


PPQuickTypeQuery : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  unsigned char type
 @property  unsigned char subtype
 @property  unsigned char semanticTag
 @property  unsigned int fields
 @property  unsigned char time
 @property  unsigned char options
 @property  NSArray *subFields
 @property  NSString *label
 @property  NSArray *people
 @property  NSString *localeIdentifier
 @property  NSString *bundleIdentifier
 @property  NSArray *recipients
 @property  NSNumber *timeoutSeconds

  // class methods
  +[PPQuickTypeQuery supportsSecureCoding]
  +[PPQuickTypeQuery _typeFromString:]
  +[PPQuickTypeQuery _peopleNamesFromLMQualifiers:]
  +[PPQuickTypeQuery _labelFromLMFieldString:qualifiers:]
  +[PPQuickTypeQuery _subfieldsFromString:]
  +[PPQuickTypeQuery _subtypeFromString:]
  +[PPQuickTypeQuery quickTypeQueryFromLMTokens:localeIdentifier:recipients:bundleIdentifier:]
  +[PPQuickTypeQuery quickTypeQueryWithType:subtype:semanticTag:fields:time:subFields:label:people:localeIdentifier:bundleIdentifier:recipients:]
  +[PPQuickTypeQuery _timeFromString:]
  +[PPQuickTypeQuery quickTypeQueryWithType:subtype:semanticTag:fields:time:options:subFields:label:people:localeIdentifier:bundleIdentifier:recipients:]
  +[PPQuickTypeQuery _fieldsFromStrings:]
  +[PPQuickTypeQuery _semanticTagFromString:]

  // instance methods
  -[PPQuickTypeQuery copyWithZone:]
  -[PPQuickTypeQuery people]
  -[PPQuickTypeQuery setRecipients:]
  -[PPQuickTypeQuery subtype]
  -[PPQuickTypeQuery localeIdentifier]
  -[PPQuickTypeQuery setLocaleIdentifier:]
  -[PPQuickTypeQuery init]
  -[PPQuickTypeQuery semanticTag]
  -[PPQuickTypeQuery setSubtype:]
  -[PPQuickTypeQuery timeoutSeconds]
  -[PPQuickTypeQuery recipients]
  -[PPQuickTypeQuery setFields:]
  -[PPQuickTypeQuery setTimeoutSeconds:]
  -[PPQuickTypeQuery fields]
  -[PPQuickTypeQuery setType:]
  -[PPQuickTypeQuery setSemanticTag:]
  -[PPQuickTypeQuery .cxx_destruct]
  -[PPQuickTypeQuery time]
  -[PPQuickTypeQuery options]
  -[PPQuickTypeQuery label]
  -[PPQuickTypeQuery isEqualToQuickTypeQuery:]
  -[PPQuickTypeQuery encodeWithCoder:]
  -[PPQuickTypeQuery setTime:]
  -[PPQuickTypeQuery initWithType:subtype:semanticTag:fields:time:options:subFields:label:people:localeIdentifier:bundleIdentifier:recipients:timeoutSeconds:]
  -[PPQuickTypeQuery type]
  -[PPQuickTypeQuery setOptions:]
  -[PPQuickTypeQuery setSubFields:]
  -[PPQuickTypeQuery subFields]
  -[PPQuickTypeQuery setBundleIdentifier:]
  -[PPQuickTypeQuery isEqual:]
  -[PPQuickTypeQuery setLabel:]
  -[PPQuickTypeQuery isResultEquivelentToQuickTypeQuery:]
  -[PPQuickTypeQuery bundleIdentifier]
  -[PPQuickTypeQuery initWithCoder:]
  -[PPQuickTypeQuery setPeople:]


PPQuickTypeBroker : NSObject /usr/lib/libSystem.B.dylib <PPFeedbackAccepting, PPClientStore>
 @property  NSString *clientIdentifier

  // class methods
  +[PPQuickTypeBroker sharedInstance]

  // instance methods
  -[PPQuickTypeBroker registerFeedback:completion:]
  -[PPQuickTypeBroker recentQuickTypeItemsForRecipients:completion:]
  -[PPQuickTypeBroker init]
  -[PPQuickTypeBroker forwardingTargetForSelector:]
  -[PPQuickTypeBroker hibernateWithCompletion:]
  -[PPQuickTypeBroker .cxx_destruct]
  -[PPQuickTypeBroker quickTypeItemsWithQuery:limit:completion:]
  -[PPQuickTypeBroker warmUpWithCompletion:]
  -[PPQuickTypeBroker quickTypeItemsWithLanguageModelingTokens:localeIdentifier:recipients:bundleIdentifier:limit:completion:]
  -[PPQuickTypeBroker _remoteObjectProxy]


PPNamedEntityWithRecord : PPNamedEntity
  // instance methods
  -[PPNamedEntityWithRecord copyWithZone:]
  -[PPNamedEntityWithRecord initWithName:category:dynamicCategory:language:mostRelevantRecord:]
  -[PPNamedEntityWithRecord mostRelevantRecord]
  -[PPNamedEntityWithRecord sentimentScore]
  -[PPNamedEntityWithRecord .cxx_destruct]


PPNamedEntity : _PASZonedObject /System/Library/Frameworks/Contacts.framework/Contacts <NSCopying, NSSecureCoding, MLFeatureProvider>
 @property  NSString *clusterIdentifier
 @property  NSString *name
 @property  unsigned long category
 @property  NSString *dynamicCategory
 @property  NSString *bestLanguage
 @property  PPNamedEntityRecord *mostRelevantRecord
 @property  double sentimentScore
 @property  NSSet *featureNames

  // class methods
  +[PPNamedEntity categoryForDescription:]
  +[PPNamedEntity supportsSecureCoding]
  +[PPNamedEntity clusterIdentifierFromName:]
  +[PPNamedEntity describeCategory:]

  // instance methods
  -[PPNamedEntity copyWithZone:]
  -[PPNamedEntity category]
  -[PPNamedEntity initWithName:category:dynamicCategory:language:mostRelevantRecord:]
  -[PPNamedEntity mostRelevantRecord]
  -[PPNamedEntity bestLanguage]
  -[PPNamedEntity sentimentScore]
  -[PPNamedEntity clusterIdentifier]
  -[PPNamedEntity featureNames]
  -[PPNamedEntity featureValueForName:]
  -[PPNamedEntity .cxx_destruct]
  -[PPNamedEntity name]
  -[PPNamedEntity initWithName:category:language:]
  -[PPNamedEntity encodeWithCoder:]
  -[PPNamedEntity dynamicCategory]
  -[PPNamedEntity isEqual:]
  -[PPNamedEntity initWithName:category:dynamicCategory:language:]
  -[PPNamedEntity isEqualToNamedEntity:]
  -[PPNamedEntity initWithCoder:]


PPNamedEntityRecord : _PASZonedObject /System/Library/Frameworks/Contacts.framework/Contacts <PPRecord, NSCopying, NSMutableCopying, NSSecureCoding, MLFeatureProvider>
 @property  PPNamedEntity *entity
 @property  PPSource *source
 @property  unsigned long algorithm
 @property  double initialScore
 @property  double decayRate
 @property  NSString *extractionOsBuild
 @property  unsigned int extractionAssetVersion
 @property  unsigned char changeType
 @property  double sentimentScore
 @property  PPNamedEntityMetadata *metadata
 @property  NSSet *featureNames

  // class methods
  +[PPNamedEntityRecord algorithmForName:]
  +[PPNamedEntityRecord supportsSecureCoding]
  +[PPNamedEntityRecord describeChangeType:]
  +[PPNamedEntityRecord describeAlgorithm:]

  // instance methods
  -[PPNamedEntityRecord entity]
  -[PPNamedEntityRecord copyWithZone:]
  -[PPNamedEntityRecord algorithm]
  -[PPNamedEntityRecord initialScore]
  -[PPNamedEntityRecord sentimentScore]
  -[PPNamedEntityRecord isEqualToNamedEntityRecord:]
  -[PPNamedEntityRecord featureNames]
  -[PPNamedEntityRecord source]
  -[PPNamedEntityRecord featureValueForName:]
  -[PPNamedEntityRecord .cxx_destruct]
  -[PPNamedEntityRecord decayRate]
  -[PPNamedEntityRecord encodeWithCoder:]
  -[PPNamedEntityRecord isEqual:]
  -[PPNamedEntityRecord changeType]
  -[PPNamedEntityRecord extractionAssetVersion]
  -[PPNamedEntityRecord metadata]
  -[PPNamedEntityRecord mutableCopyWithZone:]
  -[PPNamedEntityRecord extractionOsBuild]
  -[PPNamedEntityRecord initWithCoder:]


PPMutableNamedEntityRecord : PPNamedEntityRecord
 @property  PPNamedEntity *entity
 @property  PPSource *source
 @property  unsigned long algorithm
 @property  double initialScore
 @property  double decayRate
 @property  NSString *extractionOsBuild
 @property  unsigned char changeType
 @property  unsigned int extractionAssetVersion
 @property  double sentimentScore
 @property  PPNamedEntityMetadata *metadata

  // instance methods
  -[PPMutableNamedEntityRecord setEntity:]
  -[PPMutableNamedEntityRecord copyWithZone:]
  -[PPMutableNamedEntityRecord setMetadata:]
  -[PPMutableNamedEntityRecord init]
  -[PPMutableNamedEntityRecord setAlgorithm:]
  -[PPMutableNamedEntityRecord setSource:]
  -[PPMutableNamedEntityRecord setExtractionAssetVersion:]
  -[PPMutableNamedEntityRecord setDecayRate:]
  -[PPMutableNamedEntityRecord setInitialScore:]
  -[PPMutableNamedEntityRecord setExtractionOsBuild:]
  -[PPMutableNamedEntityRecord setSentimentScore:]
  -[PPMutableNamedEntityRecord setChangeType:]


PPInternalClient : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PPInternalClient sharedInstance]

  // instance methods
  -[PPInternalClient init]
  -[PPInternalClient .cxx_destruct]
  -[PPInternalClient trialOverridePath:namespaceName:factorName:error:]
  -[PPInternalClient setTrialUseDefaultFiles:error:]
  -[PPInternalClient resetTrialMLModelsForNamespaceName:error:]
  -[PPInternalClient sysdiagnoseInformationWithError:]
  -[PPInternalClient _synchronousRemoteObjectProxyWithErrorHandler:]


PPEventClient : NSObject /usr/lib/libSystem.B.dylib <PPEventClientProtocol>
  // class methods
  +[PPEventClient sharedInstance]

  // instance methods
  -[PPEventClient registerFeedback:completion:]
  -[PPEventClient scoredEventsWithQuery:error:handleBatch:]
  -[PPEventClient eventNameRecordChangesBatch:isLast:error:queryId:completion:]
  -[PPEventClient init]
  -[PPEventClient interactionSummaryMetricsBatch:isLast:error:queryId:completion:]
  -[PPEventClient scoredEventsBatch:isLast:error:queryId:completion:]
  -[PPEventClient interactionSummaryMetricsWithError:handleBatch:]
  -[PPEventClient .cxx_destruct]
  -[PPEventClient eventHighlightsFrom:to:options:error:handleBatch:]
  -[PPEventClient sendRTCLogsWithError:]
  -[PPEventClient eventNameRecordBatch:isLast:error:queryId:completion:]
  -[PPEventClient logEventInteractionForEventWithEventIdentifier:interface:actionType:]
  -[PPEventClient eventHighlightsBatch:isLast:error:queryId:completion:]
  -[PPEventClient _remoteObjectProxy]
  -[PPEventClient eventNameRecordsForClient:error:handleBatch:]
  -[PPEventClient _unblockPendingQueries]
  -[PPEventClient resolveEventNameRecordChanges:client:error:handleBatch:]


PPTopicReadWriteClient : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PPTopicReadWriteClient sharedInstance]

  // instance methods
  -[PPTopicReadWriteClient donateTopics:source:algorithm:cloudSync:sentimentScore:exactMatchesInSourceText:error:]
  -[PPTopicReadWriteClient deleteAllTopicsFromSourcesWithBundleId:groupIds:deletedCount:error:]
  -[PPTopicReadWriteClient deleteAllTopicsWithTopicId:deletedCount:error:]
  -[PPTopicReadWriteClient clearWithError:deletedCount:]
  -[PPTopicReadWriteClient cloudSyncWithError:]
  -[PPTopicReadWriteClient deleteAllTopicsFromSourcesWithBundleId:documentIds:deletedCount:error:]
  -[PPTopicReadWriteClient deleteAllTopicsFromSourcesWithBundleId:deletedCount:error:]
  -[PPTopicReadWriteClient init]
  -[PPTopicReadWriteClient .cxx_destruct]
  -[PPTopicReadWriteClient _doSyncCallWithError:syncCall:]
  -[PPTopicReadWriteClient _doDeletionSyncCallWithError:deletedCount:syncCall:]
  -[PPTopicReadWriteClient deleteAllTopicsFromSourcesWithBundleId:groupId:olderThanDate:deletedCount:error:]
  -[PPTopicReadWriteClient _synchronousRemoteObjectProxyWithErrorHandler:]


PPCalendarInternPool : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[PPCalendarInternPool init]
  -[PPCalendarInternPool clearPool]
  -[PPCalendarInternPool .cxx_destruct]
  -[PPCalendarInternPool internedCalendarWithEKCalendar:]


PPCalendar : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *calendarIdentifier
 @property  NSString *title
 @property  ^{CGColor=} color

  // class methods
  +[PPCalendar supportsSecureCoding]

  // instance methods
  -[PPCalendar copyWithZone:]
  -[PPCalendar calendarIdentifier]
  -[PPCalendar init]
  -[PPCalendar dealloc]
  -[PPCalendar .cxx_destruct]
  -[PPCalendar initWithCalendarIdentifier:title:color:]
  -[PPCalendar initWithEKCalendar:internPool:]
  -[PPCalendar color]
  -[PPCalendar encodeWithCoder:]
  -[PPCalendar title]
  -[PPCalendar isEqual:]
  -[PPCalendar initWithCoder:]
  -[PPCalendar isEqualToCalendar:]


PPLocationQuery : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  unsigned long consumer
 @property  unsigned long limit
 @property  NSDate *fromDate
 @property  NSDate *toDate
 @property  NSDate *scoringDate
 @property  NSSet *matchingSourceBundleIds
 @property  NSSet *excludingSourceBundleIds
 @property  unsigned long deviceFilter
 @property  double perRecordDecayRate
 @property  double decayRate
 @property  NSString *fuzzyMatchingString
 @property  NSSet *fuzzyMatchingFields
 @property  NSSet *matchingCategories
 @property  NSSet *matchingAlgorithms
 @property  NSSet *excludingAlgorithms
 @property  BOOL excludingWithoutSentiment
 @property  NSString *matchingContactHandle

  // class methods
  +[PPLocationQuery supportsSecureCoding]
  +[PPLocationQuery queryForMapsWithLimit:fromDate:consumerType:]
  +[PPLocationQuery _algorithmsDescription:]
  +[PPLocationQuery _matchingCategoriesDescription:]

  // instance methods
  -[PPLocationQuery copyWithZone:]
  -[PPLocationQuery customizedDescription]
  -[PPLocationQuery setMatchingCategories:]
  -[PPLocationQuery setExcludingAlgorithms:]
  -[PPLocationQuery excludingWithoutSentiment]
  -[PPLocationQuery fuzzyMatchingFields]
  -[PPLocationQuery init]
  -[PPLocationQuery setConsumer:]
  -[PPLocationQuery excludingAlgorithms]
  -[PPLocationQuery setLimit:]
  -[PPLocationQuery perRecordDecayRate]
  -[PPLocationQuery scoringDate]
  -[PPLocationQuery excludingSourceBundleIds]
  -[PPLocationQuery matchingSourceBundleIds]
  -[PPLocationQuery setMatchingContactHandle:]
  -[PPLocationQuery setDeviceFilter:]
  -[PPLocationQuery limit]
  -[PPLocationQuery .cxx_destruct]
  -[PPLocationQuery setMatchingAlgorithms:]
  -[PPLocationQuery fromDate]
  -[PPLocationQuery decayRate]
  -[PPLocationQuery setToDate:]
  -[PPLocationQuery setDecayRate:]
  -[PPLocationQuery encodeWithCoder:]
  -[PPLocationQuery toDate]
  -[PPLocationQuery setExcludingSourceBundleIds:]
  -[PPLocationQuery setExcludingWithoutSentiment:]
  -[PPLocationQuery setFuzzyMatchingFields:]
  -[PPLocationQuery isEqualToLocationQuery:]
  -[PPLocationQuery matchingContactHandle]
  -[PPLocationQuery setFuzzyMatchingString:]
  -[PPLocationQuery matchingCategories]
  -[PPLocationQuery isEqual:]
  -[PPLocationQuery setScoringDate:]
  -[PPLocationQuery deviceFilter]
  -[PPLocationQuery setFromDate:]
  -[PPLocationQuery setPerRecordDecayRate:]
  -[PPLocationQuery fuzzyMatchingString]
  -[PPLocationQuery setMatchingSourceBundleIds:]
  -[PPLocationQuery consumer]
  -[PPLocationQuery initWithCoder:]
  -[PPLocationQuery matchingAlgorithms]


PPLocationStore : NSObject /usr/lib/libSystem.B.dylib <PPFeedbackAccepting, PPClientStore>
 @property  NSString *clientIdentifier

  // class methods
  +[PPLocationStore placemarkWithName:clLocation:]
  +[PPLocationStore _mergedThoroughfareForThorughfare:subThoroughfare:subPremises:]
  +[PPLocationStore describeLocationConsumer:]
  +[PPLocationStore defaultStore]
  +[PPLocationStore placemarkWithLatitudeDegrees:longitudeDegrees:name:thoroughfare:subthoroughFare:locality:subLocality:administrativeArea:subAdministrativeArea:postalCode:countryCode:country:inlandWater:ocean:areasOfInterest:]
  +[PPLocationStore placemarkWithLocation:name:thoroughfare:subthoroughFare:locality:subLocality:administrativeArea:subAdministrativeArea:postalCode:countryCode:country:inlandWater:ocean:areasOfInterest:]

  // instance methods
  -[PPLocationStore registerFeedback:completion:]
  -[PPLocationStore clearWithError:deletedCount:]
  -[PPLocationStore cloudSyncWithError:]
  -[PPLocationStore iterRankedLocationsWithQuery:error:block:]
  -[PPLocationStore init]
  -[PPLocationStore forwardingTargetForSelector:]
  -[PPLocationStore .cxx_destruct]
  -[PPLocationStore iterLocationRecordsWithQuery:error:block:]
  -[PPLocationStore rankedLocationsWithQuery:error:]
  -[PPLocationStore locationRecordsWithQuery:error:]
  -[PPLocationStore donateLocations:source:contextualNamedEntities:algorithm:cloudSync:decayRate:error:]
  -[PPLocationStore registerFeedback:clientIdentifier:completion:]


PPScoredLabeledValue : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  PPLabeledValue *labeledValue
 @property  double score
 @property  unsigned char flags

  // class methods
  +[PPScoredLabeledValue supportsSecureCoding]
  +[PPScoredLabeledValue scoredLabeledValueWithLabeledValue:score:flags:]

  // instance methods
  -[PPScoredLabeledValue copyWithZone:]
  -[PPScoredLabeledValue compare:]
  -[PPScoredLabeledValue .cxx_destruct]
  -[PPScoredLabeledValue encodeWithCoder:]
  -[PPScoredLabeledValue reverseCompare:]
  -[PPScoredLabeledValue score]
  -[PPScoredLabeledValue labeledValue]
  -[PPScoredLabeledValue isEqual:]
  -[PPScoredLabeledValue isEqualToScoredLabeledValue:]
  -[PPScoredLabeledValue flags]
  -[PPScoredLabeledValue initWithLabeledValue:score:flags:]
  -[PPScoredLabeledValue initWithCoder:]


PPScoredContact : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  PPContact *contact
 @property  double score
 @property  unsigned char flags
 @property  NSArray *scoredPhoneNumbers
 @property  NSArray *scoredEmailAddresses
 @property  NSArray *scoredSocialProfiles
 @property  NSArray *scoredPostalAddresses

  // class methods
  +[PPScoredContact supportsSecureCoding]
  +[PPScoredContact scoredContactWithContact:scoredPhoneNumbers:scoredEmailAddresses:scoredSocialProfiles:scoredPostalAddresses:score:flags:]

  // instance methods
  -[PPScoredContact copyWithZone:]
  -[PPScoredContact contact]
  -[PPScoredContact compare:]
  -[PPScoredContact scoredPostalAddresses]
  -[PPScoredContact .cxx_destruct]
  -[PPScoredContact isEqualToScoredContact:]
  -[PPScoredContact encodeWithCoder:]
  -[PPScoredContact reverseCompare:]
  -[PPScoredContact initWithContact:scoredPhoneNumbers:scoredEmailAddresses:scoredSocialProfiles:scoredPostalAddresses:score:flags:]
  -[PPScoredContact score]
  -[PPScoredContact scoredEmailAddresses]
  -[PPScoredContact isEqual:]
  -[PPScoredContact scoredSocialProfiles]
  -[PPScoredContact flags]
  -[PPScoredContact scoredPhoneNumbers]
  -[PPScoredContact initWithCoder:]


PPConstants : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PPConstants groupIds]


PPXPCNamedEntityStore : PPNamedEntityStore
  // instance methods
  -[PPXPCNamedEntityStore iterRankedNamedEntitiesWithQuery:error:block:]
  -[PPXPCNamedEntityStore removeMapItemsBeforeCutoffDate:error:]
  -[PPXPCNamedEntityStore mapItemForPlaceName:error:]
  -[PPXPCNamedEntityStore namedEntityRecordsWithQuery:error:]
  -[PPXPCNamedEntityStore flushDonationsWithError:]
  -[PPXPCNamedEntityStore rankedNamedEntitiesWithQuery:error:]
  -[PPXPCNamedEntityStore donateMapItem:forPlaceName:error:]
  -[PPXPCNamedEntityStore _sendResetToAllDelegates]
  -[PPXPCNamedEntityStore registerFeedback:completion:]
  -[PPXPCNamedEntityStore clearWithError:deletedCount:]
  -[PPXPCNamedEntityStore loadNamedEntityRecordsAndMonitorChangesWithDelegate:error:]
  -[PPXPCNamedEntityStore cloudSyncWithError:]
  -[PPXPCNamedEntityStore removeMapItemForPlaceName:error:]
  -[PPXPCNamedEntityStore _recordGenerator]
  -[PPXPCNamedEntityStore clientIdentifier]
  -[PPXPCNamedEntityStore deleteAllNamedEntitiesFromSourcesWithBundleId:deletedCount:error:]
  -[PPXPCNamedEntityStore .cxx_destruct]
  -[PPXPCNamedEntityStore deleteAllNamedEntitiesFromSourcesWithBundleId:documentIds:deletedCount:error:]
  -[PPXPCNamedEntityStore _init]
  -[PPXPCNamedEntityStore iterNamedEntityRecordsWithQuery:error:block:]
  -[PPXPCNamedEntityStore _getLastCallDate]
  -[PPXPCNamedEntityStore _sendChangesToDelegates]
  -[PPXPCNamedEntityStore _loadNamedEntityRecordsWithDelegate:]
  -[PPXPCNamedEntityStore deleteAllNamedEntitiesFromSourcesWithBundleId:groupId:olderThan:deletedCount:error:]
  -[PPXPCNamedEntityStore donateLocationNamedEntities:bundleId:groupId:error:]
  -[PPXPCNamedEntityStore deleteAllNamedEntitiesFromSourcesWithBundleId:groupIds:deletedCount:error:]
  -[PPXPCNamedEntityStore donateNamedEntities:source:algorithm:cloudSync:sentimentScore:error:]
  -[PPXPCNamedEntityStore _setLastCallDate]
  -[PPXPCNamedEntityStore setClientIdentifier:]


PPAttendee : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *name
 @property  NSString *emailAddress
 @property  NSString *urlString
 @property  BOOL isCurrentUser
 @property  unsigned char status

  // class methods
  +[PPAttendee supportsSecureCoding]

  // instance methods
  -[PPAttendee copyWithZone:]
  -[PPAttendee init]
  -[PPAttendee .cxx_destruct]
  -[PPAttendee name]
  -[PPAttendee encodeWithCoder:]
  -[PPAttendee urlString]
  -[PPAttendee isCurrentUser]
  -[PPAttendee initWithEKParticipant:]
  -[PPAttendee isEqual:]
  -[PPAttendee initWithName:emailAddress:urlString:isCurrentUser:status:]
  -[PPAttendee emailAddress]
  -[PPAttendee isEqualToAttendee:]
  -[PPAttendee status]
  -[PPAttendee initWithCoder:]


PPEvent : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *eventIdentifier
 @property  NSString *title
 @property  NSString *location
 @property  PPCalendar *calendar
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  BOOL availability
 @property  NSURL *externalURI
 @property  NSArray *attendees
 @property  NSString *organizerName
 @property  unsigned char eventFlags
 @property  NSString *notes
 @property  NSURL *url
 @property  NSString *structuredLocationTitle
 @property  NSString *structuredLocationAddress
 @property  CLLocation *structuredLocationCoordinates
 @property  unsigned char suggestedEventCategory

  // class methods
  +[PPEvent supportsSecureCoding]
  +[PPEvent descriptionForSuggestedEventCategory:]

  // instance methods
  -[PPEvent copyWithZone:]
  -[PPEvent eventFlags]
  -[PPEvent init]
  -[PPEvent url]
  -[PPEvent startDate]
  -[PPEvent representsUnscheduledFreeTime]
  -[PPEvent structuredLocationTitle]
  -[PPEvent .cxx_destruct]
  -[PPEvent externalURI]
  -[PPEvent calendar]
  -[PPEvent attendees]
  -[PPEvent encodeWithCoder:]
  -[PPEvent eventIdentifier]
  -[PPEvent organizerName]
  -[PPEvent endDate]
  -[PPEvent title]
  -[PPEvent initWithEKEvent:calendarInternPool:]
  -[PPEvent initWithEventIdentifier:title:location:calendar:startDate:endDate:availability:externalURI:attendees:organizerName:eventFlags:notes:url:structuredLocationTitle:structuredLocationAddress:structuredLocationCoordinates:suggestedEventCategory:]
  -[PPEvent notes]
  -[PPEvent isNLEvent]
  -[PPEvent structuredLocationCoordinates]
  -[PPEvent isEqual:]
  -[PPEvent isStructuredEvent]
  -[PPEvent _suggestedEventCategoryFromMetaData:]
  -[PPEvent location]
  -[PPEvent isEqualToEvent:]
  -[PPEvent suggestedEventCategory]
  -[PPEvent compareStartDateWithEvent:]
  -[PPEvent organizerIsCurrentUser]
  -[PPEvent initWithCoder:]
  -[PPEvent availability]
  -[PPEvent structuredLocationAddress]


PPLabeledValue : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *label
 @property  NSObject<NSCopying><NSSecureCoding> *value

  // class methods
  +[PPLabeledValue supportsSecureCoding]
  +[PPLabeledValue labeledValueWithLabel:value:]

  // instance methods
  -[PPLabeledValue copyWithZone:]
  -[PPLabeledValue .cxx_destruct]
  -[PPLabeledValue label]
  -[PPLabeledValue initWithLabel:value:]
  -[PPLabeledValue encodeWithCoder:]
  -[PPLabeledValue isEqualToLabeledValue:]
  -[PPLabeledValue isEqual:]
  -[PPLabeledValue value]
  -[PPLabeledValue initWithCoder:]


PPXPCTopicStore : PPTopicStore
  // instance methods
  -[PPXPCTopicStore scoresForTopicMapping:query:error:]
  -[PPXPCTopicStore topicRecordsWithQuery:error:]
  -[PPXPCTopicStore topicExtractionsFromText:error:]
  -[PPXPCTopicStore donateTopics:source:algorithm:cloudSync:sentimentScore:exactMatchesInSourceText:error:]
  -[PPXPCTopicStore unmapMappedTopicIdentifier:mappingIdentifier:error:]
  -[PPXPCTopicStore deleteAllTopicsFromSourcesWithBundleId:groupIds:deletedCount:error:]
  -[PPXPCTopicStore deleteAllTopicsWithTopicId:deletedCount:error:]
  -[PPXPCTopicStore registerFeedback:completion:]
  -[PPXPCTopicStore iterRankedTopicsWithQuery:error:block:]
  -[PPXPCTopicStore rankedTopicsWithQuery:error:]
  -[PPXPCTopicStore clearWithError:deletedCount:]
  -[PPXPCTopicStore iterTopicRecordsWithQuery:error:block:]
  -[PPXPCTopicStore cloudSyncWithError:]
  -[PPXPCTopicStore deleteAllTopicsFromSourcesWithBundleId:documentIds:deletedCount:error:]
  -[PPXPCTopicStore iterScoresForTopicMapping:query:error:block:]
  -[PPXPCTopicStore deleteAllTopicsFromSourcesWithBundleId:deletedCount:error:]
  -[PPXPCTopicStore clientIdentifier]
  -[PPXPCTopicStore .cxx_destruct]
  -[PPXPCTopicStore _init]
  -[PPXPCTopicStore setClientIdentifier:]


PPNamedEntityMetadata : _PASZonedObject /System/Library/Frameworks/Contacts.framework/Contacts <NSCopying, NSSecureCoding, MLFeatureProvider>
 @property  unsigned short impressionCount
 @property  unsigned short occurrencesInSource
 @property  NSSet *featureNames

  // class methods
  +[PPNamedEntityMetadata supportsSecureCoding]

  // instance methods
  -[PPNamedEntityMetadata copyWithZone:]
  -[PPNamedEntityMetadata isEqualToNamedEntityMetadata:]
  -[PPNamedEntityMetadata init]
  -[PPNamedEntityMetadata impressionCount]
  -[PPNamedEntityMetadata occurrencesInSource]
  -[PPNamedEntityMetadata initWithImpressionCount:occurrencesInSource:]
  -[PPNamedEntityMetadata featureNames]
  -[PPNamedEntityMetadata featureValueForName:]
  -[PPNamedEntityMetadata encodeWithCoder:]
  -[PPNamedEntityMetadata isEqual:]
  -[PPNamedEntityMetadata initWithCoder:]


PPConnectionsLocation : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *identifier
 @property  NSString *name
 @property  NSString *originatingBundleID
 @property  NSString *fullFormattedAddress
 @property  NSString *thoroughfare
 @property  NSString *subThoroughfare
 @property  NSString *locality
 @property  NSString *administrativeArea
 @property  NSString *postalCode
 @property  NSString *country
 @property  NSNumber *latitude
 @property  NSNumber *longitude
 @property  NSURL *originatingWebsiteURL
 @property  NSURL *mapItemURL
 @property  BOOL copiedToPasteboard
 @property  NSString *label
 @property  NSString *value
 @property  NSString *shortValue
 @property  BOOL shouldAggregate
 @property  NSString *documentID
 @property  NSDictionary *addressComponents
 @property  NSString *source
 @property  NSString *trigger
 @property  NSDate *createdAt
 @property  NSNumber *lifetime

  // class methods
  +[PPConnectionsLocation supportsSecureCoding]
  +[PPConnectionsLocation round:toNearest:]

  // instance methods
  -[PPConnectionsLocation setLocality:]
  -[PPConnectionsLocation copyWithZone:]
  -[PPConnectionsLocation administrativeArea]
  -[PPConnectionsLocation setPostalCode:]
  -[PPConnectionsLocation longitude]
  -[PPConnectionsLocation addressDictionary]
  -[PPConnectionsLocation setCreatedAt:]
  -[PPConnectionsLocation createdAt]
  -[PPConnectionsLocation locality]
  -[PPConnectionsLocation country]
  -[PPConnectionsLocation thoroughfare]
  -[PPConnectionsLocation init]
  -[PPConnectionsLocation postalCode]
  -[PPConnectionsLocation setLongitude:]
  -[PPConnectionsLocation setSource:]
  -[PPConnectionsLocation setLifetime:]
  -[PPConnectionsLocation setLatitude:]
  -[PPConnectionsLocation latitude]
  -[PPConnectionsLocation source]
  -[PPConnectionsLocation .cxx_destruct]
  -[PPConnectionsLocation name]
  -[PPConnectionsLocation label]
  -[PPConnectionsLocation shortValue]
  -[PPConnectionsLocation subThoroughfare]
  -[PPConnectionsLocation setThoroughfare:]
  -[PPConnectionsLocation setSubThoroughfare:]
  -[PPConnectionsLocation encodeWithCoder:]
  -[PPConnectionsLocation identifier]
  -[PPConnectionsLocation lifetime]
  -[PPConnectionsLocation setTrigger:]
  -[PPConnectionsLocation addressComponents]
  -[PPConnectionsLocation setValue:]
  -[PPConnectionsLocation isEqual:]
  -[PPConnectionsLocation setLabel:]
  -[PPConnectionsLocation value]
  -[PPConnectionsLocation initWithOriginatingBundleID:]
  -[PPConnectionsLocation quickTypeItem]
  -[PPConnectionsLocation _pexItemSource]
  -[PPConnectionsLocation mapItemURL]
  -[PPConnectionsLocation _roundedPredictionAge]
  -[PPConnectionsLocation isEqualToConnectionsLocation:]
  -[PPConnectionsLocation originatingBundleID]
  -[PPConnectionsLocation fullFormattedAddress]
  -[PPConnectionsLocation setMapItemURL:]
  -[PPConnectionsLocation setFullFormattedAddress:]
  -[PPConnectionsLocation originatingWebsiteURL]
  -[PPConnectionsLocation setOriginatingWebsiteURL:]
  -[PPConnectionsLocation copiedToPasteboard]
  -[PPConnectionsLocation setShortValue:]
  -[PPConnectionsLocation setCopiedToPasteboard:]
  -[PPConnectionsLocation shouldAggregate]
  -[PPConnectionsLocation setShouldAggregate:]
  -[PPConnectionsLocation documentID]
  -[PPConnectionsLocation setDocumentID:]
  -[PPConnectionsLocation setAddressComponents:]
  -[PPConnectionsLocation setAdministrativeArea:]
  -[PPConnectionsLocation trigger]
  -[PPConnectionsLocation setCountry:]
  -[PPConnectionsLocation setName:]
  -[PPConnectionsLocation initWithCoder:]


PPTopicQuery : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  BOOL scoreWithCalibration
 @property  unsigned long minimumComponentCount
 @property  NSSet *matchingAlgorithms
 @property  NSSet *excludingAlgorithms
 @property  NSString *matchingTopicTrie
 @property  BOOL orderByIdentifier
 @property  BOOL removeNearDuplicates
 @property  unsigned long limit
 @property  NSDate *fromDate
 @property  NSDate *toDate
 @property  NSDate *scoringDate
 @property  NSSet *matchingSourceBundleIds
 @property  NSSet *excludingSourceBundleIds
 @property  NSSet *matchingGroupIds
 @property  NSSet *matchingDocumentIds
 @property  unsigned long deviceFilter
 @property  BOOL overrideDecayRate
 @property  double decayRate
 @property  BOOL scoreWithBiases
 @property  NSSet *matchingTopicIds
 @property  BOOL scoreWithStrictFiltering
 @property  BOOL excludeWithoutSentiment
 @property  NSString *matchingContactHandle

  // class methods
  +[PPTopicQuery supportsSecureCoding]
  +[PPTopicQuery queryForCSSearchableItem:]
  +[PPTopicQuery _algorithmsDescription:]

  // instance methods
  -[PPTopicQuery copyWithZone:]
  -[PPTopicQuery customizedDescription]
  -[PPTopicQuery setExcludingAlgorithms:]
  -[PPTopicQuery overrideDecayRate]
  -[PPTopicQuery init]
  -[PPTopicQuery excludingAlgorithms]
  -[PPTopicQuery setLimit:]
  -[PPTopicQuery scoringDate]
  -[PPTopicQuery excludingSourceBundleIds]
  -[PPTopicQuery setRemoveNearDuplicates:]
  -[PPTopicQuery matchingSourceBundleIds]
  -[PPTopicQuery setMatchingContactHandle:]
  -[PPTopicQuery setDeviceFilter:]
  -[PPTopicQuery limit]
  -[PPTopicQuery .cxx_destruct]
  -[PPTopicQuery setMatchingAlgorithms:]
  -[PPTopicQuery fromDate]
  -[PPTopicQuery decayRate]
  -[PPTopicQuery setToDate:]
  -[PPTopicQuery setDecayRate:]
  -[PPTopicQuery setOverrideDecayRate:]
  -[PPTopicQuery setExcludeWithoutSentiment:]
  -[PPTopicQuery encodeWithCoder:]
  -[PPTopicQuery toDate]
  -[PPTopicQuery setExcludingSourceBundleIds:]
  -[PPTopicQuery matchingContactHandle]
  -[PPTopicQuery removeNearDuplicates]
  -[PPTopicQuery isEqual:]
  -[PPTopicQuery setScoringDate:]
  -[PPTopicQuery deviceFilter]
  -[PPTopicQuery setFromDate:]
  -[PPTopicQuery isEqualToTopicQuery:]
  -[PPTopicQuery matchingGroupIds]
  -[PPTopicQuery setMatchingGroupIds:]
  -[PPTopicQuery matchingDocumentIds]
  -[PPTopicQuery setMatchingDocumentIds:]
  -[PPTopicQuery scoreWithBiases]
  -[PPTopicQuery setScoreWithBiases:]
  -[PPTopicQuery matchingTopicIds]
  -[PPTopicQuery setMatchingTopicIds:]
  -[PPTopicQuery scoreWithStrictFiltering]
  -[PPTopicQuery setScoreWithStrictFiltering:]
  -[PPTopicQuery scoreWithCalibration]
  -[PPTopicQuery setScoreWithCalibration:]
  -[PPTopicQuery minimumComponentCount]
  -[PPTopicQuery setMinimumComponentCount:]
  -[PPTopicQuery matchingTopicTrie]
  -[PPTopicQuery setMatchingTopicTrie:]
  -[PPTopicQuery orderByIdentifier]
  -[PPTopicQuery setOrderByIdentifier:]
  -[PPTopicQuery setMatchingSourceBundleIds:]
  -[PPTopicQuery excludeWithoutSentiment]
  -[PPTopicQuery initWithCoder:]
  -[PPTopicQuery matchingAlgorithms]


PPTopicStore : NSObject /usr/lib/libSystem.B.dylib <PPFeedbackAccepting, PPClientStore>
 @property  NSString *clientIdentifier

  // class methods
  +[PPTopicStore defaultStore]
  +[PPTopicStore decayValue:withDecayRate:forTimeElapsed:]

  // instance methods
  -[PPTopicStore scoresForTopicMapping:query:error:]
  -[PPTopicStore topicRecordsWithQuery:error:]
  -[PPTopicStore _initFromSubclass]
  -[PPTopicStore topicExtractionsFromText:error:]
  -[PPTopicStore donateTopics:source:algorithm:cloudSync:sentimentScore:exactMatchesInSourceText:error:]
  -[PPTopicStore unmapMappedTopicIdentifier:mappingIdentifier:error:]
  -[PPTopicStore deleteAllTopicsFromSourcesWithBundleId:groupIds:deletedCount:error:]
  -[PPTopicStore deleteAllTopicsWithTopicId:deletedCount:error:]
  -[PPTopicStore registerFeedback:completion:]
  -[PPTopicStore iterRankedTopicsWithQuery:error:block:]
  -[PPTopicStore rankedTopicsWithQuery:error:]
  -[PPTopicStore clearWithError:deletedCount:]
  -[PPTopicStore iterTopicRecordsWithQuery:error:block:]
  -[PPTopicStore cloudSyncWithError:]
  -[PPTopicStore deleteAllTopicsFromSourcesWithBundleId:documentIds:deletedCount:error:]
  -[PPTopicStore clearWithError:]
  -[PPTopicStore iterScoresForTopicMapping:query:error:block:]
  -[PPTopicStore deleteAllTopicsFromSourcesWithBundleId:deletedCount:error:]
  -[PPTopicStore deleteAllTopicsFromSourcesWithBundleId:groupId:olderThan:deletedCount:error:]
  -[PPTopicStore init]
  -[PPTopicStore clientIdentifier]
  -[PPTopicStore setClientIdentifier:]


PPContactNameRecordChangeResult : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSArray *changes
 @property  BOOL changesTruncated

  // class methods
  +[PPContactNameRecordChangeResult supportsSecureCoding]
  +[PPContactNameRecordChangeResult contactNameRecordChangeResultWithChanges:changesTruncated:]

  // instance methods
  -[PPContactNameRecordChangeResult changes]
  -[PPContactNameRecordChangeResult copyWithZone:]
  -[PPContactNameRecordChangeResult .cxx_destruct]
  -[PPContactNameRecordChangeResult encodeWithCoder:]
  -[PPContactNameRecordChangeResult isEqual:]
  -[PPContactNameRecordChangeResult initWithChanges:changesTruncated:]
  -[PPContactNameRecordChangeResult isEqualToContactNameRecordChangeResult:]
  -[PPContactNameRecordChangeResult changesTruncated]
  -[PPContactNameRecordChangeResult initWithCoder:]


PPUtils : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PPUtils coordinatesToGeoHashWithLength:latitude:longitude:]
  +[PPUtils osBuild]
  +[PPUtils isInternalDevice]
  +[PPUtils preferredLanguages]
  +[PPUtils hexOfBytes:size:]
  +[PPUtils reverseCompareDouble:withDouble:]
  +[PPUtils isFirstPartyApp:]
  +[PPUtils sqliteGlobEscape:]
  +[PPUtils formatStringArray:truncatingAtLength:]
  +[PPUtils compareDouble:withDouble:]
  +[PPUtils localizedTimeStructForDate:tm:]
  +[PPUtils enumerateChunksOfSize:fromArray:usingBlock:]
  +[PPUtils localizedTimeStructForSecondsFrom1970:tm:]
  +[PPUtils hexUUID]
  +[PPUtils yesWithProbability:]
  +[PPUtils reduceSpotlightDomainIdentifiers:]
  +[PPUtils Sha256ForData:withSalt:]
  +[PPUtils currentLocaleLanguageCode]


PPScoredItem : _PASZonedObject /System/Library/Frameworks/Contacts.framework/Contacts <NSCopying, NSSecureCoding>
 @property  unsigned short resultPosition
 @property  unsigned short resultCount
 @property  NSObject<NSCopying><NSSecureCoding> *item
 @property  double score

  // class methods
  +[PPScoredItem supportsSecureCoding]

  // instance methods
  -[PPScoredItem item]
  -[PPScoredItem copyWithZone:]
  -[PPScoredItem isEqualToScoredItem:]
  -[PPScoredItem .cxx_destruct]
  -[PPScoredItem encodeWithCoder:]
  -[PPScoredItem initWithItem:score:]
  -[PPScoredItem score]
  -[PPScoredItem isEqual:]
  -[PPScoredItem resultCount]
  -[PPScoredItem initWithItem:score:resultPosition:resultCount:]
  -[PPScoredItem initWithCoder:]
  -[PPScoredItem resultPosition]


PPSiriQueryResult : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *qid
 @property  NSString *domain
 @property  NSNumber *confidence

  // class methods
  +[PPSiriQueryResult siriQueryResultWithQid:domain:confidence:]

  // instance methods
  -[PPSiriQueryResult qid]
  -[PPSiriQueryResult copyWithZone:]
  -[PPSiriQueryResult init]
  -[PPSiriQueryResult domain]
  -[PPSiriQueryResult .cxx_destruct]
  -[PPSiriQueryResult confidence]
  -[PPSiriQueryResult isEqual:]
  -[PPSiriQueryResult initWithQid:domain:confidence:]
  -[PPSiriQueryResult isEqualToSiriQueryResult:]


PPEventNameRecord : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *identifier
 @property  double score
 @property  unsigned char changeType
 @property  NSString *eventIdentifier
 @property  NSString *title
 @property  NSString *location
 @property  NSArray *participantNames

  // class methods
  +[PPEventNameRecord supportsSecureCoding]
  +[PPEventNameRecord eventNameRecordWithScore:eventIdentifier:changeType:title:location:participantNames:]
  +[PPEventNameRecord describeChangeType:]

  // instance methods
  -[PPEventNameRecord copyWithZone:]
  -[PPEventNameRecord setScore:]
  -[PPEventNameRecord .cxx_destruct]
  -[PPEventNameRecord setTitle:]
  -[PPEventNameRecord setIdentifier:]
  -[PPEventNameRecord setLocation:]
  -[PPEventNameRecord encodeWithCoder:]
  -[PPEventNameRecord eventIdentifier]
  -[PPEventNameRecord identifier]
  -[PPEventNameRecord title]
  -[PPEventNameRecord score]
  -[PPEventNameRecord isEqual:]
  -[PPEventNameRecord changeType]
  -[PPEventNameRecord location]
  -[PPEventNameRecord isEqualToEventNameRecord:]
  -[PPEventNameRecord participantNames]
  -[PPEventNameRecord initWithIdentifier:score:eventIdentifier:changeType:title:location:participantNames:]
  -[PPEventNameRecord hasScoreSimilarToRecord:]
  -[PPEventNameRecord setParticipantNames:]
  -[PPEventNameRecord setChangeType:]
  -[PPEventNameRecord initWithCoder:]
  -[PPEventNameRecord setEventIdentifier:]


PPContactStore : NSObject /usr/lib/libSystem.B.dylib <PPFeedbackAccepting, PPClientStore>
 @property  NSString *clientIdentifier

  // instance methods
  -[PPContactStore registerFeedback:completion:]
  -[PPContactStore init]
  -[PPContactStore _recordGenerator]
  -[PPContactStore forwardingTargetForSelector:]
  -[PPContactStore _loadContactNameRecordsWithDelegate:]
  -[PPContactStore contactHandlesForTopics:error:]
  -[PPContactStore .cxx_destruct]
  -[PPContactStore contactHandlesForSource:error:]
  -[PPContactStore _sendChangesToDelegates]
  -[PPContactStore loadContactNameRecordsAndMonitorChangesWithDelegate:error:]
  -[PPContactStore feedbackDisambiguationResultWithChoicesIdentifiers:chosenContactIdentifier:completion:]
  -[PPContactStore iterRankedContactsWithQuery:error:block:]
  -[PPContactStore iterContactNameRecordsForClient:error:block:]


PPFeedback : PPBaseFeedback
  // instance methods
  -[PPFeedback initWithExplicitlyEngagedStrings:explicitlyRejectedStrings:implicitlyEngagedStrings:implicitlyRejectedStrings:offeredStrings:]
  -[PPFeedback initWithExplicitlyEngagedString:]
  -[PPFeedback initWithExplicitlyRejectedString:]
  -[PPFeedback initWithOfferedString:]
  -[PPFeedback initWithImplicitlyEngagedString:]
  -[PPFeedback initWithImplicitlyRejectedString:]
  -[PPFeedback initWithExplicitlyEngagedStrings:implicitlyEngagedStrings:offeredStrings:]
  -[PPFeedback initWithExplicitlyEngagedStrings:explicitlyRejectedStrings:implicitlyEngagedStrings:implicitlyRejectedStrings:]


PPRecordMonitoringHelper : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[PPRecordMonitoringHelper initWithName:]
  -[PPRecordMonitoringHelper _setupRecentChangesWithDelegates:recordGenerator:]
  -[PPRecordMonitoringHelper loadRecordsWithDelegate:recordGenerator:]
  -[PPRecordMonitoringHelper .cxx_destruct]
  -[PPRecordMonitoringHelper _handleRecentChangesWithDelegates:changeGenerator:recordGenerator:]
  -[PPRecordMonitoringHelper handleChangeNotificationWithName:afterDelaySeconds:handler:]
  -[PPRecordMonitoringHelper sendResetToAllDelegatesWithRecordGenerator:]
  -[PPRecordMonitoringHelper resetWithDelegate:recordGenerator:]
  -[PPRecordMonitoringHelper loadRecordsAndMonitorChangesWithDelegate:recordGenerator:notificationRegistrationBlock:]
  -[PPRecordMonitoringHelper sendChangesToDelegatesWithChangeGenerator:recordGenerator:]


PPSentimentScoreEncoder : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PPSentimentScoreEncoder encodeSentimentScore:]
  +[PPSentimentScoreEncoder decodeSentimentScore:]


PPConfigClient : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PPConfigClient sharedInstance]

  // instance methods
  -[PPConfigClient init]
  -[PPConfigClient assetVersionWithError:]
  -[PPConfigClient .cxx_destruct]
  -[PPConfigClient variantNameWithError:]
  -[PPConfigClient readableTrialTreatmentsMappingWithError:]
  -[PPConfigClient _synchronousRemoteObjectProxyWithErrorHandler:]


PPLocation : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding, MLFeatureProvider>
 @property  NSString *clusterIdentifier
 @property  CLPlacemark *placemark
 @property  unsigned short category
 @property  PPLocationRecord *mostRelevantRecord
 @property  NSSet *featureNames

  // class methods
  +[PPLocation supportsSecureCoding]
  +[PPLocation clusterIdentifierFromPlacemark:]
  +[PPLocation describeCategory:]

  // instance methods
  -[PPLocation copyWithZone:]
  -[PPLocation customizedDescription]
  -[PPLocation category]
  -[PPLocation init]
  -[PPLocation mostRelevantRecord]
  -[PPLocation isEqualToLocation:]
  -[PPLocation clusterIdentifier]
  -[PPLocation featureNames]
  -[PPLocation featureValueForName:]
  -[PPLocation .cxx_destruct]
  -[PPLocation encodeWithCoder:]
  -[PPLocation initWithPlacemark:category:mostRelevantRecord:]
  -[PPLocation isEqual:]
  -[PPLocation placemark]
  -[PPLocation initWithCoder:]


PPLocationRecord : NSObject /usr/lib/libSystem.B.dylib <PPRecord, NSCopying, NSMutableCopying, NSSecureCoding, MLFeatureProvider>
 @property  BOOL isAmbiguous
 @property  NSUUID *uuid
 @property  PPLocation *location
 @property  PPSource *source
 @property  unsigned short algorithm
 @property  double initialScore
 @property  double decayRate
 @property  double sentimentScore
 @property  NSArray *contextualNamedEntities
 @property  NSString *extractionOsBuild
 @property  unsigned int extractionAssetVersion
 @property  NSSet *featureNames

  // class methods
  +[PPLocationRecord algorithmForName:]
  +[PPLocationRecord supportsSecureCoding]
  +[PPLocationRecord describeAlgorithm:]
  +[PPLocationRecord sharedAmbiguousRecord]

  // instance methods
  -[PPLocationRecord copyWithZone:]
  -[PPLocationRecord algorithm]
  -[PPLocationRecord init]
  -[PPLocationRecord initialScore]
  -[PPLocationRecord sentimentScore]
  -[PPLocationRecord uuid]
  -[PPLocationRecord featureNames]
  -[PPLocationRecord source]
  -[PPLocationRecord featureValueForName:]
  -[PPLocationRecord .cxx_destruct]
  -[PPLocationRecord decayRate]
  -[PPLocationRecord isAmbiguous]
  -[PPLocationRecord encodeWithCoder:]
  -[PPLocationRecord isEqual:]
  -[PPLocationRecord init_]
  -[PPLocationRecord location]
  -[PPLocationRecord extractionAssetVersion]
  -[PPLocationRecord initAmbiguousRecord]
  -[PPLocationRecord supplementFieldsWithClusterID:locationWithLatLong:]
  -[PPLocationRecord isEqualToLocationRecord:]
  -[PPLocationRecord contextualNamedEntities]
  -[PPLocationRecord mutableCopyWithZone:]
  -[PPLocationRecord extractionOsBuild]
  -[PPLocationRecord initWithCoder:]


PPMutableLocationRecord : PPLocationRecord
 @property  NSUUID *uuid
 @property  PPLocation *location
 @property  PPSource *source
 @property  unsigned short algorithm
 @property  double initialScore
 @property  double decayRate
 @property  double sentimentScore
 @property  NSArray *contextualNamedEntities
 @property  NSString *extractionOsBuild
 @property  unsigned int extractionAssetVersion

  // class methods
  +[PPMutableLocationRecord new]

  // instance methods
  -[PPMutableLocationRecord copyWithZone:]
  -[PPMutableLocationRecord init]
  -[PPMutableLocationRecord setAlgorithm:]
  -[PPMutableLocationRecord setSource:]
  -[PPMutableLocationRecord setExtractionAssetVersion:]
  -[PPMutableLocationRecord setUuid:]
  -[PPMutableLocationRecord setDecayRate:]
  -[PPMutableLocationRecord setLocation:]
  -[PPMutableLocationRecord setInitialScore:]
  -[PPMutableLocationRecord setExtractionOsBuild:]
  -[PPMutableLocationRecord setContextualNamedEntities:]
  -[PPMutableLocationRecord setSentimentScore:]


PPSource : _PASZonedObject /System/Library/Frameworks/Contacts.framework/Contacts <NSCopying, NSSecureCoding, MLFeatureProvider>
 @property  PPSourceMetadata *metadata
 @property  NSDate *relevanceDate
 @property  NSString *language
 @property  NSArray *contactHandles
 @property  NSString *bundleId
 @property  NSString *groupId
 @property  NSString *documentId
 @property  NSDate *date
 @property  NSSet *featureNames

  // class methods
  +[PPSource supportsSecureCoding]

  // instance methods
  -[PPSource groupId]
  -[PPSource copyWithZone:]
  -[PPSource contactHandles]
  -[PPSource sha256]
  -[PPSource featureNames]
  -[PPSource featureValueForName:]
  -[PPSource isEqualToSource:]
  -[PPSource .cxx_destruct]
  -[PPSource date]
  -[PPSource initWithBundleId:groupId:documentId:date:]
  -[PPSource encodeWithCoder:]
  -[PPSource isEqual:]
  -[PPSource documentId]
  -[PPSource bundleId]
  -[PPSource metadata]
  -[PPSource relevanceDate]
  -[PPSource initWithBundleId:groupId:documentId:date:relevanceDate:contactHandles:language:metadata:]
  -[PPSource initWithCoder:]
  -[PPSource language]


PPEnumTypes : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PPEnumTypes deviceFilterMapping]
  +[PPEnumTypes stringForDeviceFilter:]
  +[PPEnumTypes stringForLocationConsumer:]
  +[PPEnumTypes reverseDeviceFilterMapping]
  +[PPEnumTypes locationConsumerMapping]
  +[PPEnumTypes reverseLocationConsumerMapping]
  +[PPEnumTypes locationConsumerValidValueList]


PPTopicReadOnlyClient : NSObject /usr/lib/libSystem.B.dylib <PPTopicClientProtocol>
  // class methods
  +[PPTopicReadOnlyClient sharedInstance]

  // instance methods
  -[PPTopicReadOnlyClient unmapMappedTopicIdentifier:mappingIdentifier:error:]
  -[PPTopicReadOnlyClient registerFeedback:completion:]
  -[PPTopicReadOnlyClient init]
  -[PPTopicReadOnlyClient topicExtractionsFromText:error:handleBatch:]
  -[PPTopicReadOnlyClient scoredMappedTopicBatch:isLast:error:queryId:completion:]
  -[PPTopicReadOnlyClient .cxx_destruct]
  -[PPTopicReadOnlyClient topicBatch:isLast:error:queryId:completion:]
  -[PPTopicReadOnlyClient rankedTopicsWithQuery:error:handleBatch:]
  -[PPTopicReadOnlyClient topicExtractionsFromTextBatch:isLast:error:queryId:completion:]
  -[PPTopicReadOnlyClient _remoteObjectProxy]
  -[PPTopicReadOnlyClient topicRecordsWithQuery:error:handleBatch:]
  -[PPTopicReadOnlyClient _synchronousRemoteObjectProxyWithErrorHandler:]
  -[PPTopicReadOnlyClient scoresForTopicMapping:query:error:handleBatch:]
  -[PPTopicReadOnlyClient _unblockPendingQueries]
  -[PPTopicReadOnlyClient topicRecordBatch:isLast:error:queryId:completion:]


PPEventStore : NSObject /usr/lib/libSystem.B.dylib <PPFeedbackAccepting, PPClientStore>
 @property  NSString *clientIdentifier

  // instance methods
  -[PPEventStore registerFeedback:completion:]
  -[PPEventStore init]
  -[PPEventStore _recordGenerator]
  -[PPEventStore forwardingTargetForSelector:]
  -[PPEventStore .cxx_destruct]
  -[PPEventStore _loadEventNameRecordsWithDelegate:]
  -[PPEventStore iterEventHighlightsFrom:to:options:error:block:]
  -[PPEventStore sendRTCLogsWithError:]
  -[PPEventStore iterWeeklyEventHighlightsWithOptions:error:block:]
  -[PPEventStore interactionSummaryMetricsError:block:]
  -[PPEventStore logEventInteractionForEventWithEventIdentifier:interface:actionType:]
  -[PPEventStore iterScoredEventsWithQuery:error:block:]
  -[PPEventStore iterEventHighlightsFrom:to:error:block:]
  -[PPEventStore iterEventNameRecordsForClient:error:block:]
  -[PPEventStore _sendChangesToDelegates:]
  -[PPEventStore iterDailyEventHighlightsWithOptions:error:block:]
  -[PPEventStore iterWeeklyEventHighlightsError:block:]
  -[PPEventStore loadEventNameRecordsAndMonitorChangesWithDelegate:error:]
  -[PPEventStore iterDailyEventHighlightsError:block:]


PPEventQuery : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDate *fromDate
 @property  NSDate *toDate

  // class methods
  +[PPEventQuery supportsSecureCoding]

  // instance methods
  -[PPEventQuery .cxx_destruct]
  -[PPEventQuery fromDate]
  -[PPEventQuery setToDate:]
  -[PPEventQuery encodeWithCoder:]
  -[PPEventQuery toDate]
  -[PPEventQuery setFromDate:]
  -[PPEventQuery initWithCoder:]


PPSuggestedEventQuery : PPEventQuery
 @property  NSSet *matchingCategories

  // class methods
  +[PPSuggestedEventQuery supportsSecureCoding]

  // instance methods
  -[PPSuggestedEventQuery setMatchingCategories:]
  -[PPSuggestedEventQuery .cxx_destruct]
  -[PPSuggestedEventQuery encodeWithCoder:]
  -[PPSuggestedEventQuery matchingCategories]
  -[PPSuggestedEventQuery initWithCoder:]


PPHighlightedEventQuery : PPEventQuery
 @property  int highlightsOptions

  // instance methods
  -[PPHighlightedEventQuery highlightsOptions]
  -[PPHighlightedEventQuery setHighlightsOptions:]


PPTripEventQuery : PPEventQuery
 @property  unsigned char tripOptions

  // class methods
  +[PPTripEventQuery supportsSecureCoding]

  // instance methods
  -[PPTripEventQuery encodeWithCoder:]
  -[PPTripEventQuery tripOptions]
  -[PPTripEventQuery setTripOptions:]
  -[PPTripEventQuery initWithCoder:]


PPXPCClientHelper : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[PPXPCClientHelper synchronousRemoteObjectProxyWithErrorHandler:]
  -[PPXPCClientHelper dealloc]
  -[PPXPCClientHelper .cxx_destruct]
  -[PPXPCClientHelper remoteObjectProxy]
  -[PPXPCClientHelper initWithServiceName:allowedServerInterface:allowedClientInterface:clientExportedObject:interruptionHandler:invalidationHandler:]
  -[PPXPCClientHelper _locked_establishConnection]


PPXPCClientPipelinedBatchQueryContext : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? handleBatch

  // instance methods
  -[PPXPCClientPipelinedBatchQueryContext handleBatch]
  -[PPXPCClientPipelinedBatchQueryContext .cxx_destruct]
  -[PPXPCClientPipelinedBatchQueryContext finalizeCallWithSuccess:error:]
  -[PPXPCClientPipelinedBatchQueryContext setFinalizeCall:]
  -[PPXPCClientPipelinedBatchQueryContext setQueue:]
  -[PPXPCClientPipelinedBatchQueryContext setHandleBatch:]
  -[PPXPCClientPipelinedBatchQueryContext queue]


PPXPCClientPipelinedBatchQueryManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PPXPCClientPipelinedBatchQueryManager assertBatch:forQueryName:hasExpectedContainedType:]

  // instance methods
  -[PPXPCClientPipelinedBatchQueryManager initWithName:]
  -[PPXPCClientPipelinedBatchQueryManager init]
  -[PPXPCClientPipelinedBatchQueryManager syncExecuteQueryWithName:error:queryInitializer:handleBatch:]
  -[PPXPCClientPipelinedBatchQueryManager .cxx_destruct]
  -[PPXPCClientPipelinedBatchQueryManager cancelPendingQueriesWithError:]
  -[PPXPCClientPipelinedBatchQueryManager handleReplyWithName:batch:isLast:error:queryId:completion:]


PPRecordLoadingDelegate : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  NSDate *loadRecordsDetectedSince

  // instance methods
  -[PPRecordLoadingDelegate initWithName:]
  -[PPRecordLoadingDelegate resetRecordData]
  -[PPRecordLoadingDelegate recordLoadingHandler:]
  -[PPRecordLoadingDelegate .cxx_destruct]
  -[PPRecordLoadingDelegate name]
  -[PPRecordLoadingDelegate recentRecordLoadingHandler:]
  -[PPRecordLoadingDelegate recentRecordLoadingCompletion]
  -[PPRecordLoadingDelegate recordLoadingSetup]
  -[PPRecordLoadingDelegate recordLoadingCompletion]
  -[PPRecordLoadingDelegate recentRecordLoadingSetup]
  -[PPRecordLoadingDelegate loadRecordsDetectedSince]
  -[PPRecordLoadingDelegate setLoadRecordsDetectedSince:]


PPQuickTypeItem : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  double score
 @property  unsigned char source
 @property  NSString *sourceIdentifier
 @property  NSString *label
 @property  NSString *value
 @property  NSString *name
 @property  NSDate *date
 @property  unsigned int fields
 @property  NSString *originatingBundleID
 @property  NSURL *originatingWebsiteURL
 @property  unsigned long predictionAge
 @property  BOOL shouldAggregate
 @property  unsigned char flags

  // class methods
  +[PPQuickTypeItem supportsSecureCoding]
  +[PPQuickTypeItem quickTypeItemWithLabel:value:name:date:fields:originatingBundleID:originatingWebsiteURL:predictionAge:shouldAggregate:flags:score:source:sourceIdentifier:]

  // instance methods
  -[PPQuickTypeItem copyWithZone:]
  -[PPQuickTypeItem setScore:]
  -[PPQuickTypeItem initWithLabel:value:name:date:fields:originatingBundleID:originatingWebsiteURL:predictionAge:shouldAggregate:flags:score:source:sourceIdentifier:]
  -[PPQuickTypeItem setSourceIdentifier:]
  -[PPQuickTypeItem setFields:]
  -[PPQuickTypeItem setSource:]
  -[PPQuickTypeItem compare:]
  -[PPQuickTypeItem fields]
  -[PPQuickTypeItem sourceIdentifier]
  -[PPQuickTypeItem setFlags:]
  -[PPQuickTypeItem source]
  -[PPQuickTypeItem .cxx_destruct]
  -[PPQuickTypeItem name]
  -[PPQuickTypeItem date]
  -[PPQuickTypeItem setDate:]
  -[PPQuickTypeItem label]
  -[PPQuickTypeItem encodeWithCoder:]
  -[PPQuickTypeItem setPredictionAge:]
  -[PPQuickTypeItem reverseCompare:]
  -[PPQuickTypeItem score]
  -[PPQuickTypeItem predictionAge]
  -[PPQuickTypeItem setValue:]
  -[PPQuickTypeItem isEqual:]
  -[PPQuickTypeItem setLabel:]
  -[PPQuickTypeItem value]
  -[PPQuickTypeItem originatingBundleID]
  -[PPQuickTypeItem originatingWebsiteURL]
  -[PPQuickTypeItem setOriginatingWebsiteURL:]
  -[PPQuickTypeItem shouldAggregate]
  -[PPQuickTypeItem setShouldAggregate:]
  -[PPQuickTypeItem flags]
  -[PPQuickTypeItem hasScoreSimilarToItem:]
  -[PPQuickTypeItem isEqualToQuickTypeItem:]
  -[PPQuickTypeItem setOriginatingBundleID:]
  -[PPQuickTypeItem setName:]
  -[PPQuickTypeItem initWithCoder:]


PPContactClient : NSObject /usr/lib/libSystem.B.dylib <PPContactClientProtocol>
  // class methods
  +[PPContactClient sharedInstance]

  // instance methods
  -[PPContactClient contactNameRecordChangesForClient:error:handleBatch:]
  -[PPContactClient registerFeedback:completion:]
  -[PPContactClient init]
  -[PPContactClient rankedContactsWithQuery:error:handleBatch:]
  -[PPContactClient contactHandlesForSourceBatch:isLast:error:queryId:completion:]
  -[PPContactClient .cxx_destruct]
  -[PPContactClient contactHandlesForTopicsBatch:isLast:error:queryId:completion:]
  -[PPContactClient contactNameRecordBatch:isLast:error:queryId:completion:]
  -[PPContactClient contactHandlesForTopics:error:handleBatch:]
  -[PPContactClient rankedContactsBatch:isLast:error:queryId:completion:]
  -[PPContactClient feedbackDisambiguationResultWithChoicesIdentifiers:chosenContactIdentifier:completion:]
  -[PPContactClient contactNameRecordChangesBatch:isLast:error:queryId:completion:]
  -[PPContactClient _remoteObjectProxy]
  -[PPContactClient contactHandlesForSource:error:handleBatch:]
  -[PPContactClient contactNameRecordsForClient:error:handleBatch:]
  -[PPContactClient _unblockPendingQueries]
  -[PPContactClient contactNameRecordChangesForClient:completion:]


PPConnectionsClient : NSObject /usr/lib/libSystem.B.dylib <PPConnectionsClientProtocol>
  // class methods
  +[PPConnectionsClient sharedInstance]

  // instance methods
  -[PPConnectionsClient registerFeedback:completion:]
  -[PPConnectionsClient init]
  -[PPConnectionsClient recentLocationsForConsumer:criteria:limit:explanationSet:client:error:handleBatch:]
  -[PPConnectionsClient .cxx_destruct]
  -[PPConnectionsClient recentLocationsBatch:isLast:error:queryId:completion:]
  -[PPConnectionsClient recentLocationDonationsSinceDate:client:error:handleBatch:]
  -[PPConnectionsClient _remoteObjectProxy]
  -[PPConnectionsClient _unblockPendingQueries]


PPConnectionsCriteria : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned char locationField
 @property  NSString *bundleIdentifier

  // class methods
  +[PPConnectionsCriteria supportsSecureCoding]

  // instance methods
  -[PPConnectionsCriteria .cxx_destruct]
  -[PPConnectionsCriteria encodeWithCoder:]
  -[PPConnectionsCriteria setBundleIdentifier:]
  -[PPConnectionsCriteria initWithLocationField:bundleIdentifier:]
  -[PPConnectionsCriteria setLocationField:]
  -[PPConnectionsCriteria locationField]
  -[PPConnectionsCriteria bundleIdentifier]
  -[PPConnectionsCriteria initWithCoder:]


PPRerankerGuardedData : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[PPRerankerGuardedData .cxx_destruct]


PPReranker : NSObject /usr/lib/libSystem.B.dylib <PPFeedbackAccepting, PPClientStore>
 @property  NSString *clientIdentifier

  // instance methods
  -[PPReranker registerFeedback:completion:]
  -[PPReranker init]
  -[PPReranker forwardingTargetForSelector:]
  -[PPReranker .cxx_destruct]
  -[PPReranker initWithNamedEntityStore:]
  -[PPReranker _lazyLoadEntityRankMapWithError:]
  -[PPReranker rerankedMediaItems:error:]


PPNamedEntityReadWriteClient : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PPNamedEntityReadWriteClient sharedInstance]

  // instance methods
  -[PPNamedEntityReadWriteClient flushDonationsWithError:]
  -[PPNamedEntityReadWriteClient donateMapItem:forPlaceName:error:]
  -[PPNamedEntityReadWriteClient clearWithError:deletedCount:]
  -[PPNamedEntityReadWriteClient cloudSyncWithError:]
  -[PPNamedEntityReadWriteClient removeMapItemForPlaceName:error:]
  -[PPNamedEntityReadWriteClient init]
  -[PPNamedEntityReadWriteClient deleteAllNamedEntitiesFromSourcesWithBundleId:deletedCount:error:]
  -[PPNamedEntityReadWriteClient .cxx_destruct]
  -[PPNamedEntityReadWriteClient deleteAllNamedEntitiesFromSourcesWithBundleId:documentIds:deletedCount:error:]
  -[PPNamedEntityReadWriteClient donateLocationNamedEntities:bundleId:groupId:error:]
  -[PPNamedEntityReadWriteClient deleteAllNamedEntitiesFromSourcesWithBundleId:groupIds:deletedCount:error:]
  -[PPNamedEntityReadWriteClient _doSyncCallWithError:syncCall:]
  -[PPNamedEntityReadWriteClient _doDeletionSyncCallWithError:deletedCount:syncCall:]
  -[PPNamedEntityReadWriteClient donateNamedEntities:source:algorithm:cloudSync:sentimentScore:error:]
  -[PPNamedEntityReadWriteClient removeMapItemsBeforeDate:error:]
  -[PPNamedEntityReadWriteClient deleteAllNamedEntitiesFromSourcesWithBundleId:groupId:olderThanDate:deletedCount:error:]
  -[PPNamedEntityReadWriteClient _synchronousRemoteObjectProxyWithErrorHandler:]


PPScoredLocation : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  PPLocation *location
 @property  double score
 @property  double sentimentScore

  // class methods
  +[PPScoredLocation supportsSecureCoding]

  // instance methods
  -[PPScoredLocation copyWithZone:]
  -[PPScoredLocation init]
  -[PPScoredLocation sentimentScore]
  -[PPScoredLocation .cxx_destruct]
  -[PPScoredLocation encodeWithCoder:]
  -[PPScoredLocation score]
  -[PPScoredLocation isEqual:]
  -[PPScoredLocation location]
  -[PPScoredLocation initWithLocation:score:sentimentScore:]
  -[PPScoredLocation isEqualToScoredLocation:]
  -[PPScoredLocation initWithCoder:]


PPContactNameRecordLoadingDelegate : PPRecordLoadingDelegate
 @property  @? contactNameRecordsSetup
 @property  @? contactNameRecordsHandler
 @property  @? contactNameRecordsCompletion
 @property  @? recentContactNameRecordsSetup
 @property  @? recentContactNameRecordsHandler
 @property  @? recentContactNameRecordsCompletion
 @property  @? resetContactNameRecordData

  // instance methods
  -[PPContactNameRecordLoadingDelegate initWithName:]
  -[PPContactNameRecordLoadingDelegate resetRecordData]
  -[PPContactNameRecordLoadingDelegate recordLoadingHandler:]
  -[PPContactNameRecordLoadingDelegate recentContactNameRecordsSetup]
  -[PPContactNameRecordLoadingDelegate .cxx_destruct]
  -[PPContactNameRecordLoadingDelegate contactNameRecordsSetup]
  -[PPContactNameRecordLoadingDelegate setContactNameRecordsHandler:]
  -[PPContactNameRecordLoadingDelegate recentRecordLoadingHandler:]
  -[PPContactNameRecordLoadingDelegate setContactNameRecordsCompletion:]
  -[PPContactNameRecordLoadingDelegate setRecentContactNameRecordsHandler:]
  -[PPContactNameRecordLoadingDelegate recentRecordLoadingCompletion]
  -[PPContactNameRecordLoadingDelegate recordLoadingSetup]
  -[PPContactNameRecordLoadingDelegate recentContactNameRecordsCompletion]
  -[PPContactNameRecordLoadingDelegate setRecentContactNameRecordsSetup:]
  -[PPContactNameRecordLoadingDelegate setContactNameRecordsSetup:]
  -[PPContactNameRecordLoadingDelegate resetContactNameRecordData]
  -[PPContactNameRecordLoadingDelegate recordLoadingCompletion]
  -[PPContactNameRecordLoadingDelegate contactNameRecordsHandler]
  -[PPContactNameRecordLoadingDelegate recentContactNameRecordsHandler]
  -[PPContactNameRecordLoadingDelegate setResetContactNameRecordData:]
  -[PPContactNameRecordLoadingDelegate recentRecordLoadingSetup]
  -[PPContactNameRecordLoadingDelegate setRecentContactNameRecordsCompletion:]
  -[PPContactNameRecordLoadingDelegate contactNameRecordsCompletion]


PPQuickTypeExplanationSet : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
  // class methods
  +[PPQuickTypeExplanationSet supportsSecureCoding]
  +[PPQuickTypeExplanationSet stringFromExplanation:]
  +[PPQuickTypeExplanationSet uniqueKeycodeFromExplanation:]

  // instance methods
  -[PPQuickTypeExplanationSet push:]
  -[PPQuickTypeExplanationSet copyWithZone:]
  -[PPQuickTypeExplanationSet enumerateWithBlock:]
  -[PPQuickTypeExplanationSet init]
  -[PPQuickTypeExplanationSet .cxx_destruct]
  -[PPQuickTypeExplanationSet isEqualToQuickTypeExplanationSet:]
  -[PPQuickTypeExplanationSet encodeWithCoder:]
  -[PPQuickTypeExplanationSet isEqual:]
  -[PPQuickTypeExplanationSet count]
  -[PPQuickTypeExplanationSet initWithCoder:]


PPEventNameRecordLoadingDelegate : PPRecordLoadingDelegate
 @property  @? eventNameRecordsSetup
 @property  @? eventNameRecordsHandler
 @property  @? eventNameRecordsCompletion
 @property  @? recentEventNameRecordsSetup
 @property  @? recentEventNameRecordsHandler
 @property  @? recentEventNameRecordsCompletion
 @property  @? resetEventNameRecordData

  // instance methods
  -[PPEventNameRecordLoadingDelegate initWithName:]
  -[PPEventNameRecordLoadingDelegate resetRecordData]
  -[PPEventNameRecordLoadingDelegate recordLoadingHandler:]
  -[PPEventNameRecordLoadingDelegate .cxx_destruct]
  -[PPEventNameRecordLoadingDelegate recentRecordLoadingHandler:]
  -[PPEventNameRecordLoadingDelegate recentRecordLoadingCompletion]
  -[PPEventNameRecordLoadingDelegate recordLoadingSetup]
  -[PPEventNameRecordLoadingDelegate recordLoadingCompletion]
  -[PPEventNameRecordLoadingDelegate recentRecordLoadingSetup]
  -[PPEventNameRecordLoadingDelegate eventNameRecordsSetup]
  -[PPEventNameRecordLoadingDelegate setEventNameRecordsSetup:]
  -[PPEventNameRecordLoadingDelegate eventNameRecordsHandler]
  -[PPEventNameRecordLoadingDelegate setEventNameRecordsHandler:]
  -[PPEventNameRecordLoadingDelegate eventNameRecordsCompletion]
  -[PPEventNameRecordLoadingDelegate setEventNameRecordsCompletion:]
  -[PPEventNameRecordLoadingDelegate recentEventNameRecordsSetup]
  -[PPEventNameRecordLoadingDelegate setRecentEventNameRecordsSetup:]
  -[PPEventNameRecordLoadingDelegate recentEventNameRecordsHandler]
  -[PPEventNameRecordLoadingDelegate setRecentEventNameRecordsHandler:]
  -[PPEventNameRecordLoadingDelegate recentEventNameRecordsCompletion]
  -[PPEventNameRecordLoadingDelegate setRecentEventNameRecordsCompletion:]
  -[PPEventNameRecordLoadingDelegate resetEventNameRecordData]
  -[PPEventNameRecordLoadingDelegate setResetEventNameRecordData:]


PPNamedEntityReadOnlyClient : NSObject /usr/lib/libSystem.B.dylib <PPNamedEntityClientProtocol>
  // class methods
  +[PPNamedEntityReadOnlyClient sharedInstance]

  // instance methods
  -[PPNamedEntityReadOnlyClient mapItemForPlaceName:error:]
  -[PPNamedEntityReadOnlyClient registerFeedback:completion:]
  -[PPNamedEntityReadOnlyClient namedEntityRecordBatch:isLast:error:queryId:completion:]
  -[PPNamedEntityReadOnlyClient init]
  -[PPNamedEntityReadOnlyClient namedEntityRecordsWithQuery:error:handleBatch:]
  -[PPNamedEntityReadOnlyClient .cxx_destruct]
  -[PPNamedEntityReadOnlyClient _remoteObjectProxy]
  -[PPNamedEntityReadOnlyClient _synchronousRemoteObjectProxyWithErrorHandler:]
  -[PPNamedEntityReadOnlyClient _unblockPendingQueries]
  -[PPNamedEntityReadOnlyClient namedEntityBatch:isLast:error:queryId:completion:]
  -[PPNamedEntityReadOnlyClient rankedNamedEntitiesWithQuery:error:handleBatch:]


PPNotificationHandlerGuardedData : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[PPNotificationHandlerGuardedData init]
  -[PPNotificationHandlerGuardedData .cxx_destruct]


PPNotificationHandler : NSObject /usr/lib/libSystem.B.dylib
 @property  double waitSeconds
 @property  NSString *name

  // instance methods
  -[PPNotificationHandler waitOnQueueToDrain]
  -[PPNotificationHandler .cxx_destruct]
  -[PPNotificationHandler name]
  -[PPNotificationHandler waitSeconds]
  -[PPNotificationHandler fireWithObjects:]
  -[PPNotificationHandler setWaitSeconds:]
  -[PPNotificationHandler initWithName:waitSeconds:]
  -[PPNotificationHandler _executeBlocksWithGuardedData:]
  -[PPNotificationHandler _delayedExecutionAfterSeconds:]
  -[PPNotificationHandler addObserverBlock:forLifetimeOfObject:]
  -[PPNotificationHandler setName:]


PPNotificationManagerGuardedData : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[PPNotificationManagerGuardedData .cxx_destruct]


PPNotificationManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PPNotificationManager sharedInstance]
  +[PPNotificationManager new]
  +[PPNotificationManager addEventKitObserverForLifetimeOfObject:block:]
  +[PPNotificationManager addPortraitChangeObserverForLifetimeOfObject:block:]
  +[PPNotificationManager addPortraitInvalidationObserverForLifetimeOfObject:block:]
  +[PPNotificationManager addSuggestionsObserverForLifetimeOfObject:block:]
  +[PPNotificationManager addMeCardObserverForLifetimeOfObject:block:]
  +[PPNotificationManager addContactsObserverForLifetimeOfObject:block:]

  // instance methods
  -[PPNotificationManager stopListening]
  -[PPNotificationManager addEventKitChangeBlock:forLifetimeOfObject:]
  -[PPNotificationManager init]
  -[PPNotificationManager waitOnQueueToDrain]
  -[PPNotificationManager addSuggestionsChangeBlock:forLifetimeOfObject:]
  -[PPNotificationManager dealloc]
  -[PPNotificationManager .cxx_destruct]
  -[PPNotificationManager _registerForEventKitChangeTrackingWithGuardedData:]
  -[PPNotificationManager addPortraitChangeBlock:forLifetimeOfObject:]
  -[PPNotificationManager addMeCardChangeBlock:forLifetimeOfObject:]
  -[PPNotificationManager simulatePortraitInvalidation]
  -[PPNotificationManager simulatePortraitChange]
  -[PPNotificationManager addContactsChangeBlock:forLifetimeOfObject:]
  -[PPNotificationManager addPortraitInvalidationBlock:forLifetimeOfObject:]
  -[PPNotificationManager initWithQueueName:notificationCenter:]


PPLocationReadOnlyClient : NSObject /usr/lib/libSystem.B.dylib <PPLocationClientProtocol>
  // class methods
  +[PPLocationReadOnlyClient sharedInstance]

  // instance methods
  -[PPLocationReadOnlyClient registerFeedback:completion:]
  -[PPLocationReadOnlyClient locationRecordsWithQuery:error:handleBatch:]
  -[PPLocationReadOnlyClient init]
  -[PPLocationReadOnlyClient locationBatch:isLast:error:queryId:completion:]
  -[PPLocationReadOnlyClient .cxx_destruct]
  -[PPLocationReadOnlyClient locationRecordBatch:isLast:error:queryId:completion:]
  -[PPLocationReadOnlyClient rankedLocationsWithQuery:error:handleBatch:]
  -[PPLocationReadOnlyClient _remoteObjectProxy]
  -[PPLocationReadOnlyClient _synchronousRemoteObjectProxyWithErrorHandler:]
  -[PPLocationReadOnlyClient _unblockPendingQueries]


PPTopicMetadata : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding, MLFeatureProvider>
 @property  unsigned short impressionCount
 @property  unsigned short occurrencesInSource
 @property  unsigned short algorithmResultPosition
 @property  unsigned short algorithmResultCount
 @property  BOOL exactMatchInSourceText
 @property  NSSet *featureNames

  // class methods
  +[PPTopicMetadata supportsSecureCoding]

  // instance methods
  -[PPTopicMetadata copyWithZone:]
  -[PPTopicMetadata init]
  -[PPTopicMetadata impressionCount]
  -[PPTopicMetadata occurrencesInSource]
  -[PPTopicMetadata featureNames]
  -[PPTopicMetadata featureValueForName:]
  -[PPTopicMetadata encodeWithCoder:]
  -[PPTopicMetadata isEqual:]
  -[PPTopicMetadata isEqualToTopicMetadata:]
  -[PPTopicMetadata algorithmResultPosition]
  -[PPTopicMetadata algorithmResultCount]
  -[PPTopicMetadata initWithImpressionCount:occurrencesInSource:algorithmResultPosition:algorithmResultCount:exactMatchInSourceText:]
  -[PPTopicMetadata exactMatchInSourceText]
  -[PPTopicMetadata initWithCoder:]


PPCustomDonation : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PPCustomDonation donateLabeledStrings:bundleId:groupId:documentId:completion:]
  +[PPCustomDonation donateNotification:error:]
  +[PPCustomDonation donateSiriQuery:results:error:]
  +[PPCustomDonation donatePhotosOneUpLocationNamedEntities:bundleId:error:]
  +[PPCustomDonation donatePhotosLocationNamedEntities:bundleId:error:]
  +[PPCustomDonation donatePhotosNamedEntities:bundleId:date:error:]
  +[PPCustomDonation _photosTopicMap]
  +[PPCustomDonation donatePhotosTopics:bundleId:date:error:]
  +[PPCustomDonation donateParsecNamedEntitiesAndTopics:rawQuery:reformulatedQuery:source:error:]


PPEventHighlight : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *eventIdentifier
 @property  NSURL *externalURI
 @property  NSString *title
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSString *location
 @property  NSString *organizer
 @property  ^{CGColor=} calendarColor
 @property  unsigned long prominentFeature
 @property  NSArray *features
 @property  double score
 @property  BOOL isExtraordinary

  // class methods
  +[PPEventHighlight supportsSecureCoding]
  +[PPEventHighlight describeProminentFeature:]
  +[PPEventHighlight eventHighlightWithEKEvent:score:prominentFeature:features:isExtraordinary:]
  +[PPEventHighlight eventHighlightWithEvent:score:prominentFeature:features:isExtraordinary:]

  // instance methods
  -[PPEventHighlight copyWithZone:]
  -[PPEventHighlight isExtraordinary]
  -[PPEventHighlight setScore:]
  -[PPEventHighlight setEndDate:]
  -[PPEventHighlight startDate]
  -[PPEventHighlight isEqualToEventHighlight:]
  -[PPEventHighlight dealloc]
  -[PPEventHighlight features]
  -[PPEventHighlight setFeatures:]
  -[PPEventHighlight .cxx_destruct]
  -[PPEventHighlight externalURI]
  -[PPEventHighlight setOrganizer:]
  -[PPEventHighlight setTitle:]
  -[PPEventHighlight setLocation:]
  -[PPEventHighlight encodeWithCoder:]
  -[PPEventHighlight eventIdentifier]
  -[PPEventHighlight setExternalURI:]
  -[PPEventHighlight endDate]
  -[PPEventHighlight setCalendarColor:]
  -[PPEventHighlight title]
  -[PPEventHighlight calendarColor]
  -[PPEventHighlight initWithEventIdentifier:externalURI:title:startDate:endDate:location:organizer:calendarColor:prominentFeature:features:score:isExtraordinary:]
  -[PPEventHighlight score]
  -[PPEventHighlight prominentFeature]
  -[PPEventHighlight setProminentFeature:]
  -[PPEventHighlight isEqual:]
  -[PPEventHighlight organizer]
  -[PPEventHighlight location]
  -[PPEventHighlight setIsExtraordinary:]
  -[PPEventHighlight setStartDate:]
  -[PPEventHighlight initWithCoder:]
  -[PPEventHighlight setEventIdentifier:]


PPLocationNamedEntities : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *locationName
 @property  NSString *streetAddress
 @property  NSString *city
 @property  NSString *stateOrProvince
 @property  NSString *postalCode
 @property  NSString *country
 @property  NSString *unstructuredLocationString
 @property  double score
 @property  NSString *documentId
 @property  NSData *mapItem
 @property  CLLocation *location
 @property  NSDate *date

  // class methods
  +[PPLocationNamedEntities supportsSecureCoding]

  // instance methods
  -[PPLocationNamedEntities copyWithZone:]
  -[PPLocationNamedEntities locationName]
  -[PPLocationNamedEntities setPostalCode:]
  -[PPLocationNamedEntities setLocationName:]
  -[PPLocationNamedEntities setScore:]
  -[PPLocationNamedEntities country]
  -[PPLocationNamedEntities postalCode]
  -[PPLocationNamedEntities setCity:]
  -[PPLocationNamedEntities .cxx_destruct]
  -[PPLocationNamedEntities city]
  -[PPLocationNamedEntities date]
  -[PPLocationNamedEntities setDate:]
  -[PPLocationNamedEntities setLocation:]
  -[PPLocationNamedEntities encodeWithCoder:]
  -[PPLocationNamedEntities streetAddress]
  -[PPLocationNamedEntities setStreetAddress:]
  -[PPLocationNamedEntities score]
  -[PPLocationNamedEntities stateOrProvince]
  -[PPLocationNamedEntities mapItem]
  -[PPLocationNamedEntities documentId]
  -[PPLocationNamedEntities location]
  -[PPLocationNamedEntities setStateOrProvince:]
  -[PPLocationNamedEntities setDocumentId:]
  -[PPLocationNamedEntities unstructuredLocationString]
  -[PPLocationNamedEntities setUnstructuredLocationString:]
  -[PPLocationNamedEntities setMapItem:]
  -[PPLocationNamedEntities setCountry:]
  -[PPLocationNamedEntities initWithCoder:]


PPNamedEntityRecordLoadingDelegate : PPRecordLoadingDelegate
 @property  @? namedEntityRecordsSetup
 @property  @? namedEntityRecordsHandler
 @property  @? namedEntityRecordsCompletion
 @property  @? recentNamedEntityRecordsSetup
 @property  @? recentNamedEntityRecordsHandler
 @property  @? recentNamedEntityRecordsCompletion
 @property  @? resetNamedEntityRecordData

  // instance methods
  -[PPNamedEntityRecordLoadingDelegate initWithName:]
  -[PPNamedEntityRecordLoadingDelegate resetRecordData]
  -[PPNamedEntityRecordLoadingDelegate recordLoadingHandler:]
  -[PPNamedEntityRecordLoadingDelegate setNamedEntityRecordsHandler:]
  -[PPNamedEntityRecordLoadingDelegate .cxx_destruct]
  -[PPNamedEntityRecordLoadingDelegate recentRecordLoadingHandler:]
  -[PPNamedEntityRecordLoadingDelegate recentNamedEntityRecordsSetup]
  -[PPNamedEntityRecordLoadingDelegate namedEntityRecordsSetup]
  -[PPNamedEntityRecordLoadingDelegate recentRecordLoadingCompletion]
  -[PPNamedEntityRecordLoadingDelegate recordLoadingSetup]
  -[PPNamedEntityRecordLoadingDelegate setRecentNamedEntityRecordsHandler:]
  -[PPNamedEntityRecordLoadingDelegate resetNamedEntityRecordData]
  -[PPNamedEntityRecordLoadingDelegate recordLoadingCompletion]
  -[PPNamedEntityRecordLoadingDelegate setNamedEntityRecordsSetup:]
  -[PPNamedEntityRecordLoadingDelegate setResetNamedEntityRecordData:]
  -[PPNamedEntityRecordLoadingDelegate setRecentNamedEntityRecordsCompletion:]
  -[PPNamedEntityRecordLoadingDelegate setRecentNamedEntityRecordsSetup:]
  -[PPNamedEntityRecordLoadingDelegate setNamedEntityRecordsCompletion:]
  -[PPNamedEntityRecordLoadingDelegate recentRecordLoadingSetup]
  -[PPNamedEntityRecordLoadingDelegate recentNamedEntityRecordsHandler]
  -[PPNamedEntityRecordLoadingDelegate namedEntityRecordsCompletion]
  -[PPNamedEntityRecordLoadingDelegate namedEntityRecordsHandler]
  -[PPNamedEntityRecordLoadingDelegate recentNamedEntityRecordsCompletion]


PPLocationReadWriteClient : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PPLocationReadWriteClient sharedInstance]

  // instance methods
  -[PPLocationReadWriteClient clearWithError:deletedCount:]
  -[PPLocationReadWriteClient cloudSyncWithError:]
  -[PPLocationReadWriteClient init]
  -[PPLocationReadWriteClient .cxx_destruct]
  -[PPLocationReadWriteClient donateLocations:source:contextualNamedEntities:algorithm:cloudSync:decayRate:error:]
  -[PPLocationReadWriteClient _doSyncCallWithError:syncCall:]
  -[PPLocationReadWriteClient _doDeletionSyncCallWithError:deletedCount:syncCall:]
  -[PPLocationReadWriteClient _synchronousRemoteObjectProxyWithErrorHandler:]


PPBaseFeedback : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *clientIdentifier
 @property  NSArray *feedbackItems
 @property  NSString *clientBundleId
 @property  NSString *mappingId
 @property  NSDate *timestamp
 @property  BOOL isMapped

  // class methods
  +[PPBaseFeedback supportsSecureCoding]

  // instance methods
  -[PPBaseFeedback copyWithZone:]
  -[PPBaseFeedback init]
  -[PPBaseFeedback clientIdentifier]
  -[PPBaseFeedback .cxx_destruct]
  -[PPBaseFeedback timestamp]
  -[PPBaseFeedback encodeWithCoder:]
  -[PPBaseFeedback isMapped]
  -[PPBaseFeedback isEqual:]
  -[PPBaseFeedback mappingId]
  -[PPBaseFeedback initWithFeedbackItems:mappingId:]
  -[PPBaseFeedback feedbackItems]
  -[PPBaseFeedback setClientIdentifier:]
  -[PPBaseFeedback initWithFeedbackItems:timestamp:clientIdentifier:clientBundleId:mappingId:]
  -[PPBaseFeedback isEqualToPPBaseFeedback:]
  -[PPBaseFeedback clientBundleId]
  -[PPBaseFeedback initWithCoder:]


PPClientContactNameRecord : PPContactNameRecord
  // instance methods
  -[PPClientContactNameRecord lastName]
  -[PPClientContactNameRecord relatedNames]
  -[PPClientContactNameRecord middleName]
  -[PPClientContactNameRecord organizationName]
  -[PPClientContactNameRecord jobTitle]
  -[PPClientContactNameRecord phoneticMiddleName]
  -[PPClientContactNameRecord sourceIdentifier]
  -[PPClientContactNameRecord phoneticLastName]
  -[PPClientContactNameRecord cityNames]
  -[PPClientContactNameRecord phoneticFirstName]
  -[PPClientContactNameRecord nickname]
  -[PPClientContactNameRecord source]
  -[PPClientContactNameRecord firstName]
  -[PPClientContactNameRecord streetNames]
  -[PPClientContactNameRecord .cxx_destruct]
  -[PPClientContactNameRecord identifier]
  -[PPClientContactNameRecord initWithIdentifier:score:source:sourceIdentifier:changeType:firstName:phoneticFirstName:middleName:phoneticMiddleName:lastName:phoneticLastName:organizationName:jobTitle:nickname:relatedNames:streetNames:cityNames:]
  -[PPClientContactNameRecord score]
  -[PPClientContactNameRecord changeType]


PPContact : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *identifier
 @property  unsigned char source
 @property  NSString *namePrefix
 @property  NSString *givenName
 @property  NSString *middleName
 @property  NSString *familyName
 @property  NSString *nameSuffix
 @property  NSString *nickname
 @property  NSString *localizedFullName
 @property  NSString *organizationName
 @property  NSString *jobTitle
 @property  NSDateComponents *birthday
 @property  NSDateComponents *nonGregorianBirthday
 @property  NSArray *phoneNumbers
 @property  NSArray *emailAddresses
 @property  NSArray *socialProfiles
 @property  NSArray *postalAddresses

  // class methods
  +[PPContact supportsSecureCoding]
  +[PPContact contactWithIdentifier:source:namePrefix:givenName:middleName:familyName:nameSuffix:nickname:localizedFullName:organizationName:jobTitle:birthday:nonGregorianBirthday:phoneNumbers:emailAddresses:socialProfiles:postalAddresses:]
  +[PPContact sourceIdentifierWithSource:identifier:]
  +[PPContact sourceFromSourceIdentifier:]
  +[PPContact foundInAppsRecordIdentifierNumberWithIdentifier:error:]
  +[PPContact contactsContactIdentifierWithIdentifier:error:]
  +[PPContact identifier:startsWithPrefix:]

  // instance methods
  -[PPContact familyName]
  -[PPContact isEqualToContact:]
  -[PPContact birthday]
  -[PPContact copyWithZone:]
  -[PPContact socialProfiles]
  -[PPContact postalAddresses]
  -[PPContact emailAddresses]
  -[PPContact middleName]
  -[PPContact organizationName]
  -[PPContact jobTitle]
  -[PPContact phoneNumbers]
  -[PPContact givenName]
  -[PPContact nickname]
  -[PPContact source]
  -[PPContact .cxx_destruct]
  -[PPContact nameSuffix]
  -[PPContact setIdentifierForTesting:]
  -[PPContact initWithIdentifier:source:namePrefix:givenName:middleName:familyName:nameSuffix:nickname:localizedFullName:organizationName:jobTitle:birthday:nonGregorianBirthday:phoneNumbers:emailAddresses:socialProfiles:postalAddresses:]
  -[PPContact encodeWithCoder:]
  -[PPContact identifier]
  -[PPContact isEqual:]
  -[PPContact foundInAppsRecordIdentifierNumberWithError:]
  -[PPContact contactsContactIdentifierWithError:]
  -[PPContact nonGregorianBirthday]
  -[PPContact initWithContactsContact:]
  -[PPContact localizedFullName]
  -[PPContact namePrefix]
  -[PPContact initWithFoundInAppsContact:]
  -[PPContact initWithCoder:]
  -[PPContact _generateLocalizedFullName]


PPFeedbackItem : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *itemString
 @property  unsigned int itemFeedbackType

  // class methods
  +[PPFeedbackItem supportsSecureCoding]
  +[PPFeedbackItem stringForItemFeedbackType:]

  // instance methods
  -[PPFeedbackItem copyWithZone:]
  -[PPFeedbackItem init]
  -[PPFeedbackItem itemFeedbackType]
  -[PPFeedbackItem .cxx_destruct]
  -[PPFeedbackItem initWithItemString:itemFeedbackType:]
  -[PPFeedbackItem encodeWithCoder:]
  -[PPFeedbackItem itemString]
  -[PPFeedbackItem isEqual:]
  -[PPFeedbackItem isEqualToPPFeedbackItem:]
  -[PPFeedbackItem initWithCoder:]


PPScoredEvent : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSString *title
 @property  double score

  // class methods
  +[PPScoredEvent supportsSecureCoding]

  // instance methods
  -[PPScoredEvent startDate]
  -[PPScoredEvent .cxx_destruct]
  -[PPScoredEvent setTitle:]
  -[PPScoredEvent encodeWithCoder:]
  -[PPScoredEvent endDate]
  -[PPScoredEvent title]
  -[PPScoredEvent score]
  -[PPScoredEvent initWithStartDate:endDate:title:score:]
  -[PPScoredEvent initWithCoder:]


PPSuggestedEvent : PPScoredEvent
 @property  unsigned char category

  // class methods
  +[PPSuggestedEvent supportsSecureCoding]

  // instance methods
  -[PPSuggestedEvent category]
  -[PPSuggestedEvent encodeWithCoder:]
  -[PPSuggestedEvent initWithPPEvent:]
  -[PPSuggestedEvent initWithPPEvent:score:]
  -[PPSuggestedEvent initWithCoder:]


PPHighlightedEvent : PPScoredEvent

PPTripEvent : PPScoredEvent
 @property  NSArray *tripParts

  // class methods
  +[PPTripEvent supportsSecureCoding]

  // instance methods
  -[PPTripEvent destinations]
  -[PPTripEvent .cxx_destruct]
  -[PPTripEvent encodeWithCoder:]
  -[PPTripEvent tripParts]
  -[PPTripEvent initWithStartDate:endDate:tripParts:]
  -[PPTripEvent destinationsBasedTitle]
  -[PPTripEvent initWithCoder:]


PPTripPart : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSArray *eventIdentifiers
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSString *startLocation
 @property  NSString *endLocation
 @property  CLPlacemark *mainLocation
 @property  NSString *fallbackLocationString
 @property  unsigned char tripMode

  // class methods
  +[PPTripPart supportsSecureCoding]
  +[PPTripPart descriptionForTripMode:]

  // instance methods
  -[PPTripPart eventIdentifiers]
  -[PPTripPart startDate]
  -[PPTripPart .cxx_destruct]
  -[PPTripPart encodeWithCoder:]
  -[PPTripPart endDate]
  -[PPTripPart endLocation]
  -[PPTripPart tripMode]
  -[PPTripPart startLocation]
  -[PPTripPart destinationString]
  -[PPTripPart mainLocation]
  -[PPTripPart initWithStartDate:endDate:eventIdentifiers:mode:location:fallbackLocationString:]
  -[PPTripPart setMainLocation:]
  -[PPTripPart fallbackLocationString]
  -[PPTripPart setFallbackLocationString:]
  -[PPTripPart initWithCoder:]


PPTopicWithRecord : PPTopic
  // instance methods
  -[PPTopicWithRecord copyWithZone:]
  -[PPTopicWithRecord mostRelevantRecord]
  -[PPTopicWithRecord sentimentScore]
  -[PPTopicWithRecord .cxx_destruct]
  -[PPTopicWithRecord initWithTopicIdentifier:mostRelevantRecord:]


PPTopic : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding, MLFeatureProvider>
 @property  NSString *clusterIdentifier
 @property  NSString *topicIdentifier
 @property  PPTopicRecord *mostRelevantRecord
 @property  double sentimentScore
 @property  NSSet *featureNames

  // class methods
  +[PPTopic supportsSecureCoding]
  +[PPTopic clusterIdentifierFromTopicId:]

  // instance methods
  -[PPTopic copyWithZone:]
  -[PPTopic mostRelevantRecord]
  -[PPTopic sentimentScore]
  -[PPTopic clusterIdentifier]
  -[PPTopic initWithTopicIdentifier:]
  -[PPTopic featureNames]
  -[PPTopic featureValueForName:]
  -[PPTopic .cxx_destruct]
  -[PPTopic initWithTopicIdentifier:mostRelevantRecord:]
  -[PPTopic isEqualToTopic:]
  -[PPTopic encodeWithCoder:]
  -[PPTopic id]
  -[PPTopic isEqual:]
  -[PPTopic topicIdentifier]
  -[PPTopic initWithId:]
  -[PPTopic initWithCoder:]


PPTopicRecord : NSObject /usr/lib/libSystem.B.dylib <PPRecord, NSCopying, NSMutableCopying, NSSecureCoding, MLFeatureProvider>
 @property  PPTopic *topic
 @property  PPSource *source
 @property  unsigned long algorithm
 @property  double initialScore
 @property  double decayRate
 @property  BOOL isLocal
 @property  NSString *extractionOsBuild
 @property  unsigned int extractionAssetVersion
 @property  double sentimentScore
 @property  PPTopicMetadata *metadata
 @property  NSSet *featureNames

  // class methods
  +[PPTopicRecord algorithmForName:]
  +[PPTopicRecord supportsSecureCoding]
  +[PPTopicRecord describeAlgorithm:]

  // instance methods
  -[PPTopicRecord copyWithZone:]
  -[PPTopicRecord topic]
  -[PPTopicRecord algorithm]
  -[PPTopicRecord initialScore]
  -[PPTopicRecord sentimentScore]
  -[PPTopicRecord featureNames]
  -[PPTopicRecord source]
  -[PPTopicRecord featureValueForName:]
  -[PPTopicRecord .cxx_destruct]
  -[PPTopicRecord decayRate]
  -[PPTopicRecord encodeWithCoder:]
  -[PPTopicRecord isEqual:]
  -[PPTopicRecord extractionAssetVersion]
  -[PPTopicRecord isLocal]
  -[PPTopicRecord metadata]
  -[PPTopicRecord isEqualToTopicRecord:]
  -[PPTopicRecord mutableCopyWithZone:]
  -[PPTopicRecord extractionOsBuild]
  -[PPTopicRecord initWithCoder:]


PPMutableTopicRecord : PPTopicRecord
 @property  PPTopic *topic
 @property  PPSource *source
 @property  unsigned long algorithm
 @property  double initialScore
 @property  double decayRate
 @property  BOOL isLocal
 @property  NSString *extractionOsBuild
 @property  unsigned int extractionAssetVersion
 @property  double sentimentScore
 @property  PPTopicMetadata *metadata

  // instance methods
  -[PPMutableTopicRecord copyWithZone:]
  -[PPMutableTopicRecord setMetadata:]
  -[PPMutableTopicRecord init]
  -[PPMutableTopicRecord setTopic:]
  -[PPMutableTopicRecord setAlgorithm:]
  -[PPMutableTopicRecord setSource:]
  -[PPMutableTopicRecord setExtractionAssetVersion:]
  -[PPMutableTopicRecord setDecayRate:]
  -[PPMutableTopicRecord setInitialScore:]
  -[PPMutableTopicRecord setExtractionOsBuild:]
  -[PPMutableTopicRecord setSentimentScore:]
  -[PPMutableTopicRecord setIsLocal:]


PPPostalAddress : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *thoroughfare
 @property  NSString *subThoroughfare
 @property  NSString *locality
 @property  NSString *subLocality
 @property  NSString *administrativeArea
 @property  NSString *subAdministrativeArea
 @property  NSString *postalCode
 @property  NSString *country

  // class methods
  +[PPPostalAddress supportsSecureCoding]
  +[PPPostalAddress postalAddressWithThoroughfare:subThoroughfare:locality:subLocality:administrativeArea:subAdministrativeArea:postalCode:country:]
  +[PPPostalAddress normalizeAddressString:]

  // instance methods
  -[PPPostalAddress copyWithZone:]
  -[PPPostalAddress administrativeArea]
  -[PPPostalAddress locality]
  -[PPPostalAddress country]
  -[PPPostalAddress thoroughfare]
  -[PPPostalAddress subAdministrativeArea]
  -[PPPostalAddress _countryStringWithCountry:isoCode:]
  -[PPPostalAddress postalCode]
  -[PPPostalAddress subLocality]
  -[PPPostalAddress .cxx_destruct]
  -[PPPostalAddress subThoroughfare]
  -[PPPostalAddress encodeWithCoder:]
  -[PPPostalAddress singleLineNormalizedAddressString]
  -[PPPostalAddress toCNPostalAddress]
  -[PPPostalAddress initWithContactsPostalAddress:]
  -[PPPostalAddress initWithThoroughfare:subThoroughfare:locality:subLocality:administrativeArea:subAdministrativeArea:postalCode:country:]
  -[PPPostalAddress isEqual:]
  -[PPPostalAddress isEqualToPostalAddress:]
  -[PPPostalAddress initWithFoundInAppsPostalAddress:]
  -[PPPostalAddress initWithCoder:]


PPConnectionsStore : NSObject /usr/lib/libSystem.B.dylib <PPFeedbackAccepting, PPClientStore>
 @property  NSString *clientIdentifier

  // instance methods
  -[PPConnectionsStore registerFeedback:completion:]
  -[PPConnectionsStore init]
  -[PPConnectionsStore forwardingTargetForSelector:]
  -[PPConnectionsStore .cxx_destruct]
  -[PPConnectionsStore iterRecentLocationsForConsumer:criteria:limit:explanationSet:client:error:block:]
  -[PPConnectionsStore iterRecentLocationDonationsSinceDate:client:error:block:]
  -[PPConnectionsStore iterRecentLocationsForConsumer:criteria:limit:client:error:block:]


PPContactQuery : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSArray *matchingIdentifiers
 @property  NSString *matchingName
 @property  NSString *matchingEmail
 @property  NSString *matchingPhone
 @property  NSString *matchingPostalAddress
 @property  unsigned char domain
 @property  NSString *targetBundleIdentifier
 @property  NSString *context
 @property  BOOL onlyQueryMostRelevantContacts

  // class methods
  +[PPContactQuery supportsSecureCoding]

  // instance methods
  -[PPContactQuery context]
  -[PPContactQuery copyWithZone:]
  -[PPContactQuery domain]
  -[PPContactQuery .cxx_destruct]
  -[PPContactQuery setDomain:]
  -[PPContactQuery matchingName]
  -[PPContactQuery encodeWithCoder:]
  -[PPContactQuery setContext:]
  -[PPContactQuery setMatchingName:]
  -[PPContactQuery targetBundleIdentifier]
  -[PPContactQuery isEqual:]
  -[PPContactQuery hasNoConstraints]
  -[PPContactQuery isEqualToContactQuery:]
  -[PPContactQuery matchingIdentifiers]
  -[PPContactQuery setMatchingIdentifiers:]
  -[PPContactQuery matchingEmail]
  -[PPContactQuery setMatchingEmail:]
  -[PPContactQuery matchingPhone]
  -[PPContactQuery setMatchingPhone:]
  -[PPContactQuery matchingPostalAddress]
  -[PPContactQuery setMatchingPostalAddress:]
  -[PPContactQuery setTargetBundleIdentifier:]
  -[PPContactQuery onlyQueryMostRelevantContacts]
  -[PPContactQuery setOnlyQueryMostRelevantContacts:]
  -[PPContactQuery initWithCoder:]


PPMappedFeedback : PPBaseFeedback
  // instance methods
  -[PPMappedFeedback initWithImplicitlyEngagedString:mappingId:]
  -[PPMappedFeedback initWithExplicitlyRejectedString:mappingId:]
  -[PPMappedFeedback initWithExplicitlyEngagedString:mappingId:]
  -[PPMappedFeedback initWithImplicitlyRejectedString:mappingId:]
  -[PPMappedFeedback initWithOfferedString:mappingId:]
  -[PPMappedFeedback initWithExplicitlyEngagedStrings:explicitlyRejectedStrings:implicitlyEngagedStrings:implicitlyRejectedStrings:mappingId:]
  -[PPMappedFeedback initWithExplicitlyEngagedStrings:implicitlyEngagedStrings:offeredStrings:mappingId:]
  -[PPMappedFeedback initWithExplicitlyEngagedStrings:explicitlyRejectedStrings:implicitlyEngagedStrings:implicitlyRejectedStrings:offeredStrings:mappingId:]


PPContactNameRecord : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
  // class methods
  +[PPContactNameRecord supportsSecureCoding]
  +[PPContactNameRecord describeChangeType:]
  +[PPContactNameRecord describeSource:]

  // instance methods
  -[PPContactNameRecord lastName]
  -[PPContactNameRecord copyWithZone:]
  -[PPContactNameRecord relatedNames]
  -[PPContactNameRecord compare:]
  -[PPContactNameRecord middleName]
  -[PPContactNameRecord organizationName]
  -[PPContactNameRecord jobTitle]
  -[PPContactNameRecord phoneticMiddleName]
  -[PPContactNameRecord sourceIdentifier]
  -[PPContactNameRecord phoneticLastName]
  -[PPContactNameRecord cityNames]
  -[PPContactNameRecord phoneticFirstName]
  -[PPContactNameRecord nickname]
  -[PPContactNameRecord source]
  -[PPContactNameRecord firstName]
  -[PPContactNameRecord streetNames]
  -[PPContactNameRecord encodeWithCoder:]
  -[PPContactNameRecord identifier]
  -[PPContactNameRecord initWithIdentifier:score:source:sourceIdentifier:changeType:firstName:phoneticFirstName:middleName:phoneticMiddleName:lastName:phoneticLastName:organizationName:jobTitle:nickname:relatedNames:streetNames:cityNames:]
  -[PPContactNameRecord score]
  -[PPContactNameRecord isEqual:]
  -[PPContactNameRecord init_]
  -[PPContactNameRecord changeType]
  -[PPContactNameRecord isEqualToContactNameRecord:]
  -[PPContactNameRecord initWithCoder:]


PPNotification : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *bundleId
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *message
 @property  NSDate *date

  // class methods
  +[PPNotification supportsSecureCoding]

  // instance methods
  -[PPNotification copyWithZone:]
  -[PPNotification message]
  -[PPNotification init]
  -[PPNotification .cxx_destruct]
  -[PPNotification date]
  -[PPNotification encodeWithCoder:]
  -[PPNotification title]
  -[PPNotification isEqual:]
  -[PPNotification subtitle]
  -[PPNotification bundleId]
  -[PPNotification isEqualToNotification:]
  -[PPNotification initWithCurrentDateAndBundleId:title:subtitle:message:]
  -[PPNotification initWithBundleId:title:subtitle:message:date:]
  -[PPNotification initWithCoder:]


PPConfigStore : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PPConfigStore defaultStore]

  // instance methods
  -[PPConfigStore assetVersionWithError:]
  -[PPConfigStore variantNameWithError:]
  -[PPConfigStore readableTrialTreatmentsMappingWithError:]


PPNamedEntityQuery : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *matchingEntityTrie
 @property  unsigned long locationConsumer
 @property  BOOL orderByName
 @property  BOOL removeNearDuplicates
 @property  BOOL isForRecordMonitoring
 @property  unsigned long limit
 @property  NSDate *fromDate
 @property  NSDate *toDate
 @property  NSDate *scoringDate
 @property  NSSet *matchingSourceBundleIds
 @property  NSSet *excludingSourceBundleIds
 @property  NSSet *matchingSourceGroupIds
 @property  NSSet *matchingSourceDocumentIds
 @property  unsigned long deviceFilter
 @property  BOOL overrideDecayRate
 @property  double decayRate
 @property  NSString *matchingName
 @property  BOOL matchCategory
 @property  NSSet *matchingCategories
 @property  NSSet *excludingAlgorithms
 @property  BOOL excludeWithoutSentiment
 @property  NSString *matchingContactHandle

  // class methods
  +[PPNamedEntityQuery locationQueryWithLimit:fromDate:consumerType:]
  +[PPNamedEntityQuery supportsSecureCoding]
  +[PPNamedEntityQuery _excludingAlgorithmsDescription:]
  +[PPNamedEntityQuery _matchingCategoriesDescription:]

  // instance methods
  -[PPNamedEntityQuery copyWithZone:]
  -[PPNamedEntityQuery setMatchingEntityTrie:]
  -[PPNamedEntityQuery customizedDescription]
  -[PPNamedEntityQuery setMatchingCategories:]
  -[PPNamedEntityQuery setExcludingAlgorithms:]
  -[PPNamedEntityQuery overrideDecayRate]
  -[PPNamedEntityQuery init]
  -[PPNamedEntityQuery excludingAlgorithms]
  -[PPNamedEntityQuery setLimit:]
  -[PPNamedEntityQuery matchingEntityTrie]
  -[PPNamedEntityQuery scoringDate]
  -[PPNamedEntityQuery excludingSourceBundleIds]
  -[PPNamedEntityQuery setRemoveNearDuplicates:]
  -[PPNamedEntityQuery matchingSourceBundleIds]
  -[PPNamedEntityQuery setMatchingContactHandle:]
  -[PPNamedEntityQuery setDeviceFilter:]
  -[PPNamedEntityQuery setLocationConsumer:]
  -[PPNamedEntityQuery setMatchingSourceGroupIds:]
  -[PPNamedEntityQuery limit]
  -[PPNamedEntityQuery .cxx_destruct]
  -[PPNamedEntityQuery fromDate]
  -[PPNamedEntityQuery decayRate]
  -[PPNamedEntityQuery setMatchingSourceDocumentIds:]
  -[PPNamedEntityQuery matchingName]
  -[PPNamedEntityQuery setToDate:]
  -[PPNamedEntityQuery setDecayRate:]
  -[PPNamedEntityQuery setOverrideDecayRate:]
  -[PPNamedEntityQuery setExcludeWithoutSentiment:]
  -[PPNamedEntityQuery encodeWithCoder:]
  -[PPNamedEntityQuery toDate]
  -[PPNamedEntityQuery isEqualToNamedEntityQuery:]
  -[PPNamedEntityQuery setOrderByName:]
  -[PPNamedEntityQuery setExcludingSourceBundleIds:]
  -[PPNamedEntityQuery setMatchCategory:]
  -[PPNamedEntityQuery setMatchingName:]
  -[PPNamedEntityQuery setIsForRecordMonitoring:]
  -[PPNamedEntityQuery matchingContactHandle]
  -[PPNamedEntityQuery locationConsumer]
  -[PPNamedEntityQuery orderByName]
  -[PPNamedEntityQuery removeNearDuplicates]
  -[PPNamedEntityQuery matchingCategories]
  -[PPNamedEntityQuery isEqual:]
  -[PPNamedEntityQuery setScoringDate:]
  -[PPNamedEntityQuery deviceFilter]
  -[PPNamedEntityQuery setFromDate:]
  -[PPNamedEntityQuery setMatchingSourceBundleIds:]
  -[PPNamedEntityQuery matchingSourceGroupIds]
  -[PPNamedEntityQuery excludeWithoutSentiment]
  -[PPNamedEntityQuery matchCategory]
  -[PPNamedEntityQuery matchingSourceDocumentIds]
  -[PPNamedEntityQuery initWithCoder:]
  -[PPNamedEntityQuery isForRecordMonitoring]


PPNamedEntityStore : NSObject /usr/lib/libSystem.B.dylib <PPFeedbackAccepting, PPClientStore>
 @property  NSString *clientIdentifier

  // class methods
  +[PPNamedEntityStore defaultStore]

  // instance methods
  -[PPNamedEntityStore iterRankedNamedEntitiesWithQuery:error:block:]
  -[PPNamedEntityStore removeMapItemsBeforeCutoffDate:error:]
  -[PPNamedEntityStore mapItemForPlaceName:error:]
  -[PPNamedEntityStore namedEntityRecordsWithQuery:error:]
  -[PPNamedEntityStore flushDonationsWithError:]
  -[PPNamedEntityStore _initFromSubclass]
  -[PPNamedEntityStore rankedNamedEntitiesWithQuery:error:]
  -[PPNamedEntityStore donateMapItem:forPlaceName:error:]
  -[PPNamedEntityStore registerFeedback:completion:]
  -[PPNamedEntityStore clearWithError:deletedCount:]
  -[PPNamedEntityStore loadNamedEntityRecordsAndMonitorChangesWithDelegate:error:]
  -[PPNamedEntityStore cloudSyncWithError:]
  -[PPNamedEntityStore removeMapItemForPlaceName:error:]
  -[PPNamedEntityStore init]
  -[PPNamedEntityStore clientIdentifier]
  -[PPNamedEntityStore deleteAllNamedEntitiesFromSourcesWithBundleId:deletedCount:error:]
  -[PPNamedEntityStore deleteAllNamedEntitiesFromSourcesWithBundleId:documentIds:deletedCount:error:]
  -[PPNamedEntityStore iterNamedEntityRecordsWithQuery:error:block:]
  -[PPNamedEntityStore deleteAllNamedEntitiesFromSourcesWithBundleId:groupId:olderThan:deletedCount:error:]
  -[PPNamedEntityStore donateLocationNamedEntities:bundleId:groupId:error:]
  -[PPNamedEntityStore deleteAllNamedEntitiesFromSourcesWithBundleId:groupIds:deletedCount:error:]
  -[PPNamedEntityStore donateNamedEntities:source:algorithm:cloudSync:sentimentScore:error:]
  -[PPNamedEntityStore setClientIdentifier:]


CLPlacemark(PPMLHelpers)
	// instance methods
	-[CLPlacemark(PPMLHelpers) pp_featureNames]
	-[CLPlacemark(PPMLHelpers) pp_featureValueForName:]
	-[CLPlacemark(PPMLHelpers) pp_addressSpecificity]

01 00 0600 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0600 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLPlacemark 
01 00 0300 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 0300 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0300 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutableContact 
01 00 0300 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutablePostalAddress 
01 00 0300 /System/Library/Frameworks/Contacts.framework/Contacts: CNPostalAddressFormatter 
01 00 0800 /System/Library/Frameworks/CoreML.framework/CoreML: MLFeatureValue 
01 00 0800 /System/Library/Frameworks/CoreML.framework/CoreML: MLSequence 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASDeviceState 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASDispatch 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASDomainSelection 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASInternPool 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASLanguageDetection 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASLock 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASTuple2 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASZoneSupport 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASZonedObject 
