|| __DATA.__objc_data _OBJC_CLASS_$_ENActiveEntity
|| __DATA.__objc_data _OBJC_CLASS_$_ENAdvertisement
|| __DATA.__objc_data _OBJC_CLASS_$_ENAdvertisementDatabaseQuerySession
|| __DATA.__objc_data _OBJC_CLASS_$_ENAdvertisementMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_ENBeaconCountMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_ENChaffTestResultSession
|| __DATA.__objc_data _OBJC_CLASS_$_ENDifferentialPrivacyManager
|| __DATA.__objc_data _OBJC_CLASS_$_ENDownloadEndpoint
|| __DATA.__objc_data _OBJC_CLASS_$_ENDownloadManager
|| __DATA.__objc_data _OBJC_CLASS_$_ENDownloadManagerState
|| __DATA.__objc_data _OBJC_CLASS_$_ENExposureCalculationSession
|| __DATA.__objc_data _OBJC_CLASS_$_ENExposureDetectionDaemonSession
|| __DATA.__objc_data _OBJC_CLASS_$_ENExposureDetectionDaemonSessionState
|| __DATA.__objc_data _OBJC_CLASS_$_ENExposureDetectionManager
|| __DATA.__objc_data _OBJC_CLASS_$_ENPersistentTemporaryExposureKey
|| __DATA.__objc_data _OBJC_CLASS_$_ENSecKey
|| __DATA.__objc_data _OBJC_CLASS_$_ENTestResultCertificateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ENTestResultChaffRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ENTestResultManager
|| __DATA.__objc_data _OBJC_CLASS_$_ENTestResultNetworkRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ENTestResultSession
|| __DATA.__objc_data _OBJC_CLASS_$_ENTestResultUploadRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ENTestResultVerificationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ENXPCServiceListener
|| __DATA.__objc_data _OBJC_METACLASS_$_ENActiveEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_ENAdvertisement
|| __DATA.__objc_data _OBJC_METACLASS_$_ENAdvertisementDatabaseQuerySession
|| __DATA.__objc_data _OBJC_METACLASS_$_ENAdvertisementMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_ENBeaconCountMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_ENChaffTestResultSession
|| __DATA.__objc_data _OBJC_METACLASS_$_ENDifferentialPrivacyManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ENDownloadEndpoint
|| __DATA.__objc_data _OBJC_METACLASS_$_ENDownloadManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ENDownloadManagerState
|| __DATA.__objc_data _OBJC_METACLASS_$_ENExposureCalculationSession
|| __DATA.__objc_data _OBJC_METACLASS_$_ENExposureDetectionDaemonSession
|| __DATA.__objc_data _OBJC_METACLASS_$_ENExposureDetectionDaemonSessionState
|| __DATA.__objc_data _OBJC_METACLASS_$_ENExposureDetectionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ENPersistentTemporaryExposureKey
|| __DATA.__objc_data _OBJC_METACLASS_$_ENSecKey
|| __DATA.__objc_data _OBJC_METACLASS_$_ENTestResultCertificateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ENTestResultChaffRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ENTestResultManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ENTestResultNetworkRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ENTestResultSession
|| __DATA.__objc_data _OBJC_METACLASS_$_ENTestResultUploadRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ENTestResultVerificationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ENXPCServiceListener
|| __DATA_CONST.__const _ENAdvertisementStoreErrorDomain
|| __DATA_CONST.__const _ENConfigurationManagerErrorDomain
|| __DATA_CONST.__const _ENDownloadManagerDownloadsAvailable
|| __DATA_CONST.__const _ENExposureDetectionDaemonSessionErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENAdvertisementDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENAdvertisementSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENConfigurationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENConfigurationStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENCoreTelephonyUtility
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENDaemon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENExposureDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENLoggingPrefs
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENRegionHistory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENRegionHistoryManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENRegionMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENRegionMonitorCoreLocationDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENRegionMonitorTelephonyDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENSQLiteConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENSecureArchiveFileWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENTemporaryExposureKeyManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENXPCClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ENXPCTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENAdvertisementDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENAdvertisementSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENConfigurationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENConfigurationStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENCoreTelephonyUtility
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENDaemon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENExposureDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENLoggingPrefs
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENRegionHistory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENRegionHistoryManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENRegionMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENRegionMonitorCoreLocationDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENRegionMonitorTelephonyDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENSQLiteConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENSecureArchiveFileWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENTemporaryExposureKeyManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENXPCClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ENXPCTimer
|| __TEXT.__text _ENBundleIdentifierForURLSessions
|| __TEXT.__text _ENNestedTestResultErrorF
|| __TEXT.__text _ENReadLinesFromFile
|| __TEXT.__text _ENSQLiteBindFoundationValue
|| __TEXT.__text _ENSQLiteColumnAsData
|| __TEXT.__text _ENSQLiteColumnAsDate
|| __TEXT.__text _ENSQLiteColumnAsNaturalType
|| __TEXT.__text _ENSQLiteColumnAsString
|| __TEXT.__text _ENSQLiteColumnAsUUID
|| __TEXT.__text _ENTestResultErrorF
__ AssertionServices: _BKSApplicationStateKey
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ CFNetwork: _CFHTTPCookieStorageCreateFromFile
__ CFNetwork: _CFHTTPCookieStorageScheduleWithRunLoop
__ CFNetwork: _OBJC_CLASS_$_NSHTTPCookieStorage
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CallKit: _OBJC_CLASS_$_CXCallObserver
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCopyBundleURL
__ CoreFoundation: _CFBundleGetInfoDictionary
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDateGetTypeID
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFURLCreateFromFileSystemRepresentation
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSURLAddedToDirectoryDateKey
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _NSURLNameKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFPreferencesSetBackupDisabled
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAbsoluteTimeIntervalSince1970
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreLocation: _CLAppResetChangedNotification
__ CoreLocation: _CLLocationDistanceMax
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _kCLLocationAccuracyHundredMeters
__ CoreRoutine: _OBJC_CLASS_$_RTRoutineManager
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$__LSOpenConfiguration
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: __CTServerConnectionCopyISOForMCC
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: _kCTCellMonitorMCC
__ CoreUtils: _CFDictionaryGetDouble
__ CoreUtils: _CFDictionaryGetInt64
__ CoreUtils: _CFDictionaryGetInt64Ranged
__ CoreUtils: _CFDictionaryGetTypedValue
__ CoreUtils: _CFPrefs_CopyKeys
__ CoreUtils: _CFPrefs_CopyTypedValue
__ CoreUtils: _CFPrefs_GetDouble
__ CoreUtils: _CFPrefs_GetInt64
__ CoreUtils: _CFPrefs_RemoveValue
__ CoreUtils: _CFPrefs_SetDouble
__ CoreUtils: _CFPrefs_SetInt64
__ CoreUtils: _CFPrefs_SetValue
__ CoreUtils: _CUDescriptionWithLevel
__ CoreUtils: _CUDispatchTimerSet
__ CoreUtils: _CUPrintDateCF
__ CoreUtils: _CUPrintDuration32
__ CoreUtils: _CUPrintDurationDouble
__ CoreUtils: _CUPrintErrorCode
__ CoreUtils: _CUPrintFlags32
__ CoreUtils: _CUPrintHex
__ CoreUtils: _CUPrintNSDataHex
__ CoreUtils: _CUPrintNSError
__ CoreUtils: _CUPrintNSObjectOneLine
__ CoreUtils: _CUPrintPID
__ CoreUtils: _CUPrintXPC
__ CoreUtils: _CUStateDumpWithObject
__ CoreUtils: _CUXPCDecodeBool
__ CoreUtils: _CUXPCDecodeNSData
__ CoreUtils: _CUXPCDecodeNSString
__ CoreUtils: _CUXPCDecodeNSUUID
__ CoreUtils: _CUXPCDecodeUInt64RangedEx
__ CoreUtils: _CUXPCEncodeNSError
__ CoreUtils: _FatalErrorF
__ CoreUtils: _GestaltCopyAnswer
__ CoreUtils: _GestaltGetDeviceClass
__ CoreUtils: _IsAppleInternalBuild
__ CoreUtils: _LogCategoryCopyOSLogHandle
__ CoreUtils: _LogControl
__ CoreUtils: _LogPrintF
__ CoreUtils: _LogPrintF_safe
__ CoreUtils: _LogSetAppID
__ CoreUtils: _LogShow
__ CoreUtils: _NSAppendPrintF
__ CoreUtils: _NSAppendPrintF_safe
__ CoreUtils: _NSArrayGetNSNumberAtIndex
__ CoreUtils: _NSDataWithHex
__ CoreUtils: _NSDictionaryGetNSNumber
__ CoreUtils: _NSErrorF
__ CoreUtils: _NSErrorNestedF
__ CoreUtils: _NSPrintF
__ CoreUtils: _NSPrintV
__ CoreUtils: _NSRandomData
__ CoreUtils: _OBJC_CLASS_$_CUSystemMonitor
__ CoreUtils: _UpTicksToSeconds
__ CoreUtils: __LogCategory_Initialize
__ CoreUtils: _stricmp_prefix
__ CoreUtils: _xpc_dictionary_set_cf_object
__ DifferentialPrivacy: _OBJC_CLASS_$__DPBitValueRecorder
__ DifferentialPrivacy: _kDPMetadataCountryCode
__ DifferentialPrivacy: _kDPMetadataState
__ DifferentialPrivacy: _kDPMetadataVersionHash
__ ExposureNotification: _ENCloneFileToTemporaryDirectory
__ ExposureNotification: _ENCompareDiagnosisReportTypes
__ ExposureNotification: _ENCopyPublicKeyFromBase64String
__ ExposureNotification: _ENDaemonBundle
__ ExposureNotification: _ENDataVaultPath
__ ExposureNotification: _ENDataVaultURL
__ ExposureNotification: _ENDefaultExpirationDate
__ ExposureNotification: _ENDiagnosisMetadataKeyDiagnosisReportType
__ ExposureNotification: _ENDiagnosisMetadataKeyHasSymptoms
__ ExposureNotification: _ENDiagnosisMetadataKeyIsUserVaccinated
__ ExposureNotification: _ENDiagnosisMetadataKeySymptomOnsetDate
__ ExposureNotification: _ENDiagnosisMetadataKeyUserDidTravel
__ ExposureNotification: _ENErrorDomain
__ ExposureNotification: _ENErrorF
__ ExposureNotification: _ENErrorMetricTypeToString
__ ExposureNotification: _ENErrorUserInfoKeyAppBundleIdentifier
__ ExposureNotification: _ENLocalizedString
__ ExposureNotification: _ENNestedErrorF
__ ExposureNotification: _ENRPIMetadataDeserialize
__ ExposureNotification: _ENSecondaryIdentifierForURLSessions
__ ExposureNotification: _ENTestResultErrorDomain
__ ExposureNotification: _ENXPCDecodeSecureObject
__ ExposureNotification: _ENXPCDecodeSecureObjectIfPresent
__ ExposureNotification: _ENXPCEncodeSecureObject
__ ExposureNotification: _OBJC_CLASS_$_ENArchive
__ ExposureNotification: _OBJC_CLASS_$_ENEntity
__ ExposureNotification: _OBJC_CLASS_$_ENExposureClassification
__ ExposureNotification: _OBJC_CLASS_$_ENExposureConfiguration
__ ExposureNotification: _OBJC_CLASS_$_ENExposureDaySummary
__ ExposureNotification: _OBJC_CLASS_$_ENExposureDetectionClientSession
__ ExposureNotification: _OBJC_CLASS_$_ENExposureDetectionHistoryFile
__ ExposureNotification: _OBJC_CLASS_$_ENExposureDetectionHistorySession
__ ExposureNotification: _OBJC_CLASS_$_ENExposureDetectionSession
__ ExposureNotification: _OBJC_CLASS_$_ENExposureDetectionSummary
__ ExposureNotification: _OBJC_CLASS_$_ENExposureInfo
__ ExposureNotification: _OBJC_CLASS_$_ENExposureNotification
__ ExposureNotification: _OBJC_CLASS_$_ENExposureWindow
__ ExposureNotification: _OBJC_CLASS_$_ENFile
__ ExposureNotification: _OBJC_CLASS_$_ENFileSession
__ ExposureNotification: _OBJC_CLASS_$_ENManager
__ ExposureNotification: _OBJC_CLASS_$_ENRegion
__ ExposureNotification: _OBJC_CLASS_$_ENRegionConfiguration
__ ExposureNotification: _OBJC_CLASS_$_ENRegionServerAgencyConfiguration
__ ExposureNotification: _OBJC_CLASS_$_ENRegionServerConfiguration
__ ExposureNotification: _OBJC_CLASS_$_ENRegionServerExposureConfiguration
__ ExposureNotification: _OBJC_CLASS_$_ENRegionServerNKDConfiguration
__ ExposureNotification: _OBJC_CLASS_$_ENRegionUserConsent
__ ExposureNotification: _OBJC_CLASS_$_ENRegionVisit
__ ExposureNotification: _OBJC_CLASS_$_ENRemotePresentationRequest
__ ExposureNotification: _OBJC_CLASS_$_ENScanInstance
__ ExposureNotification: _OBJC_CLASS_$_ENSignatureFile
__ ExposureNotification: _OBJC_CLASS_$_ENTemporaryExposureKey
__ ExposureNotification: _OBJC_CLASS_$_ENTextMessage
__ ExposureNotification: _OBJC_CLASS_$_ENUserAlert
__ ExposureNotification: _OBJC_CLASS_$_ENUserAuthorization
__ ExposureNotification: _OBJC_CLASS_$_ENXPCServiceClient
__ FindMyDevice: _OBJC_CLASS_$_FMDFMIPManager
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSFileModificationDate
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUnionRange
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBackgroundActivityScheduler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _FBSOpenApplicationOptionKeyUnlockDevice
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ NetworkServiceProxy: _OBJC_CLASS_$_PrivacyProxyClient
__ Security: _SecKeyCreateWithData
__ Security: _SecKeyVerifySignature
__ Security: _SecRandomCopyBytes
__ Security: _kSecAttrKeyClass
__ Security: _kSecAttrKeyClassPublic
__ Security: _kSecAttrKeySizeInBits
__ Security: _kSecAttrKeyType
__ Security: _kSecAttrKeyTypeEC
__ Security: _kSecKeyAlgorithmECDSASignatureMessageX962SHA256
__ Security: _kSecRandomDefault
__ SetupAssistant: _BYSetupAssistantNeedsToRun
__ Sharing: _OBJC_CLASS_$_SFClient
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertConfigurationContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertDefinition
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertHandle
__ SpringBoardServices: _SBSGetScreenLockStatus
__ SpringBoardServices: _SBSRemoteAlertHandleInvalidationErrorDomain
__ SpringBoardServices: _SBUserNotificationAllowMenuButtonDismissal
__ SpringBoardServices: _kSBSLockStateNotifyKey
__ TCC: _TCCAccessCheckAuditToken
__ TCC: _TCCAccessCopyInformation
__ TCC: _TCCAccessCopyInformationForBundleId
__ TCC: _TCCAccessGetOverride
__ TCC: _TCCAccessPreflightWithAuditToken
__ TCC: _TCCAccessReset
__ TCC: _TCCAccessResetForBundle
__ TCC: _TCCAccessSetForBundleId
__ TCC: _TCCAccessSetOverride
__ TCC: _kTCCAccessCheckOptionPrompt
__ TCC: _kTCCInfoBundle
__ TCC: _kTCCInfoGranted
__ TCC: _kTCCInfoService
__ TCC: _kTCCServiceExposureNotification
__ TCC: _kTCCServiceExposureNotificationRegion
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNNotificationIcon
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ UserNotifications: _OBJC_CLASS_$_UNNotificationSound
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ UserNotifications: _UNNotificationDefaultActionIdentifier
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_CPU_INTENSIVE
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_DISK_INTENSIVE
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_15_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_30_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_4_HOURS
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_5_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_7_DAYS
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_8_HOURS
__ libSystem.B.dylib: _XPC_ACTIVITY_MEMORY_INTENSIVE
__ libSystem.B.dylib: _XPC_ACTIVITY_POWER_NAP
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRES_CLASS_A
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRES_CLASS_B
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRES_CLASS_C
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_SIGNIFICANT_USER_INACTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_SHOULD_WAKE_DEVICE
__ libSystem.B.dylib: _XPC_ACTIVITY_USES_DUET_POWER_BUDGETING
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___memmove_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _cchmac
__ libSystem.B.dylib: _ccsha256_di
__ libSystem.B.dylib: _clock_gettime_nsec_np
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _container_system_group_path_for_identifier
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_and_wait
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _lseek
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _open_dprotected_np
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_state_remove_handler
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _pread
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _strcasecmp
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_array_create
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_array_set_string
__ libSystem.B.dylib: _xpc_array_set_value
__ libSystem.B.dylib: _xpc_connection_activate
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_get_audit_token
__ libSystem.B.dylib: _xpc_connection_get_pid
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_copy_code_signing_identity_for_token
__ libSystem.B.dylib: _xpc_copy_entitlement_for_token
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_dup_fd
__ libSystem.B.dylib: _xpc_dictionary_expects_reply
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_double
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_get_uuid
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_uuid
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_endpoint_create
__ libSystem.B.dylib: _xpc_equal
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_main
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libsqlite3.dylib: __sqlite3_db_copy
__ libsqlite3.dylib: __sqlite3_db_truncate
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_pointer
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_busy_timeout
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_create_module
__ libsqlite3.dylib: _sqlite3_declare_vtab
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_extended_errcode
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_free
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_malloc
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_result_blob
__ libsqlite3.dylib: _sqlite3_result_int64
__ libsqlite3.dylib: _sqlite3_sql
__ libsqlite3.dylib: _sqlite3_step
__ libsqlite3.dylib: _sqlite3_value_int64
__ libsqlite3.dylib: _sqlite3_value_pointer
ENBeaconCountMetrics : NSObject
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  double windowDuration

  // instance methods
  -[ENBeaconCountMetrics endDate]
  -[ENBeaconCountMetrics dealloc]
  -[ENBeaconCountMetrics .cxx_destruct]
  -[ENBeaconCountMetrics startDate]
  -[ENBeaconCountMetrics windowDuration]
  -[ENBeaconCountMetrics initWithStartDate:endDate:windowDuration:]
  -[ENBeaconCountMetrics addAdvertisement:]
  -[ENBeaconCountMetrics beaconCountAtDate:]
  -[ENBeaconCountMetrics enumerateBeaconCountWindows:]
  -[ENBeaconCountMetrics differentialPrivacyRepresentationWithCountThresholds:]


ENTextMessageManager : NSObject
 @property  ENSecureArchiveFileWrapper *textMessageHistoryFileWrapper
 @property  NSMutableDictionary *textMessageHashes
 @property  NSObject<ENTextMessageManagerDelegate> *delegate

  // instance methods
  -[ENTextMessageManager setDelegate:]
  -[ENTextMessageManager delegate]
  -[ENTextMessageManager .cxx_destruct]
  -[ENTextMessageManager initWithDirectoryURL:]
  -[ENTextMessageManager invalidate]
  -[ENTextMessageManager activateIfNeeded]
  -[ENTextMessageManager _readIfNecessaryWithError:]
  -[ENTextMessageManager purgeAllHashes]
  -[ENTextMessageManager purgeOldHashes]
  -[ENTextMessageManager _purgeOldHashes]
  -[ENTextMessageManager verifyTextMessage:phoneNumber:verificationDate:publicKey:publicKeyVersion:userReport:outError:]
  -[ENTextMessageManager _verifyTextMessage:phoneNumber:verificationDate:publicKey:publicKeyVersion:reportType:outError:]
  -[ENTextMessageManager textMessageHistoryFileWrapper]
  -[ENTextMessageManager setTextMessageHistoryFileWrapper:]
  -[ENTextMessageManager textMessageHashes]
  -[ENTextMessageManager setTextMessageHashes:]


ENLoggingPrefs : NSObject
  // class methods
  +[ENLoggingPrefs sharedENLoggingPrefs]

  // instance methods
  -[ENLoggingPrefs isSensitiveLoggingAllowed]
  -[ENLoggingPrefs loadLoggingPrefs]
  -[ENLoggingPrefs isRPILoggingAllowed]
  -[ENLoggingPrefs setLoggingEntitledApp:]
  -[ENLoggingPrefs init]


ENChaffTestResultSession : NSObject
 @property  ENRegion *region
 @property  NSString *agencyAPIKey
 @property  NSURL *certificateURL
 @property  NSURL *verificationURL
 @property  NSURL *uploadURL

  // class methods
  +[ENChaffTestResultSession sessionWithConfiguration:URLSession:queue:error:]

  // instance methods
  -[ENChaffTestResultSession _invalidate]
  -[ENChaffTestResultSession dealloc]
  -[ENChaffTestResultSession .cxx_destruct]
  -[ENChaffTestResultSession region]
  -[ENChaffTestResultSession invalidate]
  -[ENChaffTestResultSession verificationURL]
  -[ENChaffTestResultSession certificateURL]
  -[ENChaffTestResultSession uploadURL]
  -[ENChaffTestResultSession _initWithAgencyAPIKey:certificateURL:queue:region:uploadURL:URLSession:verifyURL:]
  -[ENChaffTestResultSession sendChaffMessagesWithCompletion:]
  -[ENChaffTestResultSession _sendVerificationChaffRequest]
  -[ENChaffTestResultSession _sendCertificateChaffRequest]
  -[ENChaffTestResultSession _sendUploadChaffRequest]
  -[ENChaffTestResultSession _sendChaffRequestWithURL:useAPIKey:successHandler:]
  -[ENChaffTestResultSession _callCompletionIfNecessaryWithError:]
  -[ENChaffTestResultSession agencyAPIKey]


ENAdvertisementDatabaseQuerySession : NSObject
 @property  unsigned char attenuationThreshold
 @property  ENAdvertisementDatabase *database
 @property  unsigned int storedAdvertisementCount

  // instance methods
  -[ENAdvertisementDatabaseQuerySession dealloc]
  -[ENAdvertisementDatabaseQuerySession .cxx_destruct]
  -[ENAdvertisementDatabaseQuerySession storedAdvertisementCount]
  -[ENAdvertisementDatabaseQuerySession database]
  -[ENAdvertisementDatabaseQuerySession invalidate]
  -[ENAdvertisementDatabaseQuerySession initWithDatabase:attenuationThreshold:advertisementCount:queue:]
  -[ENAdvertisementDatabaseQuerySession enumerateAdvertisementsMatchingKeys:attenuationThreshold:timestampTolerance:error:handler:]
  -[ENAdvertisementDatabaseQuerySession beaconCountMetricsWithStartDate:endDate:windowDuration:error:]
  -[ENAdvertisementDatabaseQuerySession attenuationThreshold]


ENCloudServerChannel : NSObject <NSURLSessionDelegate>
 @property  NSURLSession *session
 @property  NSURLSessionConfiguration *sessionConfig
 @property  NSURLSession *sourceApplicationSession
 @property  NSURLSessionConfiguration *sourceApplicationSessionConfig
 @property  NSOperationQueue *queue
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  NSHTTPCookieStorage *cookieStorage
 @property  NSMutableDictionary *requests
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ENCloudServerChannel requests]
  -[ENCloudServerChannel setSerialQueue:]
  -[ENCloudServerChannel URLSession:didReceiveChallenge:completionHandler:]
  -[ENCloudServerChannel session]
  -[ENCloudServerChannel serialQueue]
  -[ENCloudServerChannel sourceApplicationSession]
  -[ENCloudServerChannel setSourceApplicationSessionConfig:]
  -[ENCloudServerChannel setSession:]
  -[ENCloudServerChannel dealloc]
  -[ENCloudServerChannel cookieStorage]
  -[ENCloudServerChannel .cxx_destruct]
  -[ENCloudServerChannel setSourceApplicationSession:]
  -[ENCloudServerChannel setSessionConfig:]
  -[ENCloudServerChannel setRequests:]
  -[ENCloudServerChannel setQueue:]
  -[ENCloudServerChannel setCookieStorage:]
  -[ENCloudServerChannel sessionConfig]
  -[ENCloudServerChannel queue]
  -[ENCloudServerChannel URLSession:didBecomeInvalidWithError:]
  -[ENCloudServerChannel enqueueRequest:withCompletion:]
  -[ENCloudServerChannel init]
  -[ENCloudServerChannel sourceApplicationSessionConfig]


ENRegionTestDataSource : NSObject <ENRegionMonitorDataSource>
 @property  NSObject<ENRegionMonitorSourceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ENRegionTestDataSource setDelegate:]
  -[ENRegionTestDataSource delegate]
  -[ENRegionTestDataSource dealloc]
  -[ENRegionTestDataSource .cxx_destruct]
  -[ENRegionTestDataSource initWithDelegate:]
  -[ENRegionTestDataSource currentRegionVisit]
  -[ENRegionTestDataSource stopMonitoring]
  -[ENRegionTestDataSource startMonitoring]
  -[ENRegionTestDataSource regionChanged]


ENXPCServiceListener : NSObject
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  NSObject<OS_xpc_object> *xpcEndpoint

  // class methods
  +[ENXPCServiceListener sharedServiceListener]

  // instance methods
  -[ENXPCServiceListener activate]
  -[ENXPCServiceListener .cxx_destruct]
  -[ENXPCServiceListener connectionInvalidated:]
  -[ENXPCServiceListener dispatchQueue]
  -[ENXPCServiceListener invalidate]
  -[ENXPCServiceListener main]
  -[ENXPCServiceListener _init]
  -[ENXPCServiceListener initAnonymousListener]
  -[ENXPCServiceListener xpcEndpoint]
  -[ENXPCServiceListener xpcConnectionAccept:]
  -[ENXPCServiceListener xpcListenerEvent:]


ENXPCServiceConnection : NSObject
  // class methods
  +[ENXPCServiceConnection connectionWithXPCConnection:serviceListener:dispatchQueue:]

  // instance methods
  -[ENXPCServiceConnection activate]
  -[ENXPCServiceConnection .cxx_destruct]
  -[ENXPCServiceConnection xpcConnectionEvent:]
  -[ENXPCServiceConnection invalidate]
  -[ENXPCServiceConnection xpcConnectionRequest:]
  -[ENXPCServiceConnection xpcSendMessage:]
  -[ENXPCServiceConnection xpcSendReplyError:request:]
  -[ENXPCServiceConnection xpcFileSessionActivate:archive:]
  -[ENXPCServiceConnection xpcFileSessionInvalidate:]
  -[ENXPCServiceConnection xpcFileSessionReadTEKBatch:]


ENTestResultVerificationRequest : ENTestResultNetworkRequest
 @property  NSString *verificationCode
 @property  NSSet *acceptedTestTypes
 @property  NSString *nonce
 @property  NSString *token
 @property  NSDictionary *metadata

  // class methods
  +[ENTestResultVerificationRequest verificationRequestWithCode:acceptedReportTypes:APIKey:nonce:requestURL:URLSession:queue:error:]
  +[ENTestResultVerificationRequest _metadataFromVerificationResponseDictionary:error:]

  // instance methods
  -[ENTestResultVerificationRequest token]
  -[ENTestResultVerificationRequest .cxx_destruct]
  -[ENTestResultVerificationRequest metadata]
  -[ENTestResultVerificationRequest nonce]
  -[ENTestResultVerificationRequest verificationCode]
  -[ENTestResultVerificationRequest errorForUnsuccessfulResponse:body:]
  -[ENTestResultVerificationRequest bodyJSON]
  -[ENTestResultVerificationRequest _testVerificationErrorForErrorCodeString:]
  -[ENTestResultVerificationRequest handleResponse:body:]
  -[ENTestResultVerificationRequest acceptedTestTypes]


ENRegionMonitorCoreLocationDataSource : NSObject <ENRegionMonitorDataSource, CLLocationManagerDelegate>
 @property  ENRegionVisit *cachedRegionVisit
 @property  NSObject<OS_dispatch_queue> *queue
 @property  CLLocationManager *locationManager
 @property  RTRoutineManager *routineManager
 @property  NSObject<ENRegionMonitorSourceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ENRegionMonitorCoreLocationDataSource locationManager:didFailWithError:]
  -[ENRegionMonitorCoreLocationDataSource processLocation:locationsOfInterest:]
  -[ENRegionMonitorCoreLocationDataSource setup]
  -[ENRegionMonitorCoreLocationDataSource _processLocation:locationsOfInterest:]
  -[ENRegionMonitorCoreLocationDataSource setDelegate:]
  -[ENRegionMonitorCoreLocationDataSource _processLocation:locationOfInterest:]
  -[ENRegionMonitorCoreLocationDataSource delegate]
  -[ENRegionMonitorCoreLocationDataSource updateRegionVisit:]
  -[ENRegionMonitorCoreLocationDataSource _processVisit:]
  -[ENRegionMonitorCoreLocationDataSource updateRegionAllowed]
  -[ENRegionMonitorCoreLocationDataSource .cxx_destruct]
  -[ENRegionMonitorCoreLocationDataSource _updateRegionVisit:]
  -[ENRegionMonitorCoreLocationDataSource cachedRegionVisit]
  -[ENRegionMonitorCoreLocationDataSource routineManager]
  -[ENRegionMonitorCoreLocationDataSource initWithDelegate:]
  -[ENRegionMonitorCoreLocationDataSource currentRegionVisit]
  -[ENRegionMonitorCoreLocationDataSource locationManager]
  -[ENRegionMonitorCoreLocationDataSource _setup]
  -[ENRegionMonitorCoreLocationDataSource setQueue:]
  -[ENRegionMonitorCoreLocationDataSource setRoutineManager:]
  -[ENRegionMonitorCoreLocationDataSource locationManager:didVisit:]
  -[ENRegionMonitorCoreLocationDataSource initWithDelegate:routineManager:]
  -[ENRegionMonitorCoreLocationDataSource queue]
  -[ENRegionMonitorCoreLocationDataSource updateRegion]
  -[ENRegionMonitorCoreLocationDataSource _updatedRegion]
  -[ENRegionMonitorCoreLocationDataSource setLocationManager:]
  -[ENRegionMonitorCoreLocationDataSource stopMonitoring]
  -[ENRegionMonitorCoreLocationDataSource processLocation:locationOfInterest:]
  -[ENRegionMonitorCoreLocationDataSource locationManager:didUpdateLocations:]
  -[ENRegionMonitorCoreLocationDataSource _processLocation:]
  -[ENRegionMonitorCoreLocationDataSource startMonitoring]
  -[ENRegionMonitorCoreLocationDataSource setCachedRegionVisit:]


ENAdvertisementMetadata : NSObject
 @property  long long version
 @property  NSString *versionString
 @property  BOOL txPower
 @property  unsigned char calibrationConfidence

  // instance methods
  -[ENAdvertisementMetadata versionString]
  -[ENAdvertisementMetadata version]
  -[ENAdvertisementMetadata txPower]
  -[ENAdvertisementMetadata initWithVersion:txPower:calibrationConfidence:]
  -[ENAdvertisementMetadata attenuationForRSSI:saturated:]
  -[ENAdvertisementMetadata calibrationConfidence]


ENAppConfiguration : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *appID
 @property  NSString *regionID
 @property  NSString *publicKey
 @property  NSString *publicKeyVersion
 @property  BOOL exposureMatching
 @property  long long maxMatchingAttempts
 @property  long long maxTtkMatchAttempt
 @property  long long maxTtkMatchAttemptPerDay
 @property  double callbackIntervalInMin
 @property  double lastCachedEpochTimeInterval

  // class methods
  +[ENAppConfiguration supportsSecureCoding]
  +[ENAppConfiguration appConfigurationForRegion:withInfo:]

  // instance methods
  -[ENAppConfiguration setPublicKey:]
  -[ENAppConfiguration appID]
  -[ENAppConfiguration encodeWithCoder:]
  -[ENAppConfiguration setRegionID:]
  -[ENAppConfiguration publicKey]
  -[ENAppConfiguration .cxx_destruct]
  -[ENAppConfiguration setAppID:]
  -[ENAppConfiguration publicKeyVersion]
  -[ENAppConfiguration copyWithZone:]
  -[ENAppConfiguration regionID]
  -[ENAppConfiguration initWithCoder:]
  -[ENAppConfiguration setPublicKeyVersion:]
  -[ENAppConfiguration exposureMatching]
  -[ENAppConfiguration maxMatchingAttempts]
  -[ENAppConfiguration maxTtkMatchAttempt]
  -[ENAppConfiguration maxTtkMatchAttemptPerDay]
  -[ENAppConfiguration callbackIntervalInMin]
  -[ENAppConfiguration lastCachedEpochTimeInterval]
  -[ENAppConfiguration initWithRegion:andAppConfigInfo:]
  -[ENAppConfiguration setExposureMatching:]
  -[ENAppConfiguration setMaxMatchingAttempts:]
  -[ENAppConfiguration setMaxTtkMatchAttempt:]
  -[ENAppConfiguration setMaxTtkMatchAttemptPerDay:]
  -[ENAppConfiguration setCallbackIntervalInMin:]
  -[ENAppConfiguration setLastCachedEpochTimeInterval:]


ENExposureDetectionDaemonSession : NSObject
 @property  ENAdvertisementDatabaseQuerySession *advertisementDatabaseQuerySession
 @property  ENXPCClient *client
 @property  ENExposureConfiguration *clientExposureConfiguration
 @property  ENExposureDatabase *exposureDatabase
 @property  ENExposureClassification *previousExposureClassification
 @property  ENRegionConfiguration *regionConfiguration
 @property  ENRegionServerConfiguration *regionServerConfiguration
 @property  ENRegionServerExposureConfiguration *serverExposureConfiguration
 @property  NSDate *sessionDate
 @property  ENExposureDetectionHistorySession *historySession
 @property  ENExposureConfiguration *sessionExposureConfiguration
 @property  unsigned long tekMatchBatchSize
 @property  ENExposureDetectionDaemonSessionStatistics *statistics
 @property  BOOL skipFileSigningVerification
 @property  ENExposureCalculationSession *exposureCalculationSession

  // instance methods
  -[ENExposureDetectionDaemonSession statistics]
  -[ENExposureDetectionDaemonSession _invalidate]
  -[ENExposureDetectionDaemonSession dealloc]
  -[ENExposureDetectionDaemonSession .cxx_destruct]
  -[ENExposureDetectionDaemonSession setClient:]
  -[ENExposureDetectionDaemonSession client]
  -[ENExposureDetectionDaemonSession initWithQueue:]
  -[ENExposureDetectionDaemonSession setSkipFileSigningVerification:]
  -[ENExposureDetectionDaemonSession invalidate]
  -[ENExposureDetectionDaemonSession skipFileSigningVerification]
  -[ENExposureDetectionDaemonSession finishAndReturnError:]
  -[ENExposureDetectionDaemonSession prepareAndReturnError:]
  -[ENExposureDetectionDaemonSession _prepareAndReturnError:]
  -[ENExposureDetectionDaemonSession prepareConfiguration:bundleIdentifier:nowDate:expiryInterval:error:]
  -[ENExposureDetectionDaemonSession addMatchesFromFileSession:publicKey:endpoint:error:]
  -[ENExposureDetectionDaemonSession _addMatchesFromFileSession:publicKey:endpoint:error:]
  -[ENExposureDetectionDaemonSession _addFileToHistoryWithHash:metadata:endpoint:keyCount:matchCount:]
  -[ENExposureDetectionDaemonSession _verifySignatureForFileSession:publicKey:error:]
  -[ENExposureDetectionDaemonSession _checkPreparedAndReturnError:]
  -[ENExposureDetectionDaemonSession _checkFinishedAndReturnError:]
  -[ENExposureDetectionDaemonSession _finishAndReturnError:]
  -[ENExposureDetectionDaemonSession _shouldMatchPersistenKey:]
  -[ENExposureDetectionDaemonSession classifyExposureWithResult:error:]
  -[ENExposureDetectionDaemonSession _classifyExposureWithResult:error:]
  -[ENExposureDetectionDaemonSession getAnalysisSessionAndReturnError:]
  -[ENExposureDetectionDaemonSession _getAnalysisSessionAndReturnError:]
  -[ENExposureDetectionDaemonSession getBeaconCountMetricsAndReturnError:]
  -[ENExposureDetectionDaemonSession _getBeaconCountMetricsAndReturnError:]
  -[ENExposureDetectionDaemonSession getSummaryAndReturnError:]
  -[ENExposureDetectionDaemonSession _getSummaryAndReturnError:]
  -[ENExposureDetectionDaemonSession _prepareExposureCalculationSessionWithError:]
  -[ENExposureDetectionDaemonSession _updateStatisticsWithHandler:]
  -[ENExposureDetectionDaemonSession _signpostBegin]
  -[ENExposureDetectionDaemonSession _signpostEnd]
  -[ENExposureDetectionDaemonSession exposureCalculationSession]
  -[ENExposureDetectionDaemonSession advertisementDatabaseQuerySession]
  -[ENExposureDetectionDaemonSession setAdvertisementDatabaseQuerySession:]
  -[ENExposureDetectionDaemonSession clientExposureConfiguration]
  -[ENExposureDetectionDaemonSession setClientExposureConfiguration:]
  -[ENExposureDetectionDaemonSession exposureDatabase]
  -[ENExposureDetectionDaemonSession setExposureDatabase:]
  -[ENExposureDetectionDaemonSession previousExposureClassification]
  -[ENExposureDetectionDaemonSession setPreviousExposureClassification:]
  -[ENExposureDetectionDaemonSession regionConfiguration]
  -[ENExposureDetectionDaemonSession setRegionConfiguration:]
  -[ENExposureDetectionDaemonSession regionServerConfiguration]
  -[ENExposureDetectionDaemonSession setRegionServerConfiguration:]
  -[ENExposureDetectionDaemonSession serverExposureConfiguration]
  -[ENExposureDetectionDaemonSession setServerExposureConfiguration:]
  -[ENExposureDetectionDaemonSession sessionDate]
  -[ENExposureDetectionDaemonSession setSessionDate:]
  -[ENExposureDetectionDaemonSession historySession]
  -[ENExposureDetectionDaemonSession sessionExposureConfiguration]
  -[ENExposureDetectionDaemonSession tekMatchBatchSize]
  -[ENExposureDetectionDaemonSession setTekMatchBatchSize:]


ENExposureDetectionDaemonSessionState : NSObject <NSSecureCoding>
 @property  NSString *clientSigningIdentity
 @property  ENRegion *region
 @property  NSDate *infectiousnessForDaysSinceOnsetOfSymptomsChangeDate
 @property  NSDictionary *infectiousnessForDaysSinceOnsetOfSymptoms

  // class methods
  +[ENExposureDetectionDaemonSessionState supportsSecureCoding]

  // instance methods
  -[ENExposureDetectionDaemonSessionState encodeWithCoder:]
  -[ENExposureDetectionDaemonSessionState .cxx_destruct]
  -[ENExposureDetectionDaemonSessionState region]
  -[ENExposureDetectionDaemonSessionState setRegion:]
  -[ENExposureDetectionDaemonSessionState initWithCoder:]
  -[ENExposureDetectionDaemonSessionState infectiousnessForDaysSinceOnsetOfSymptoms]
  -[ENExposureDetectionDaemonSessionState clientSigningIdentity]
  -[ENExposureDetectionDaemonSessionState setClientSigningIdentity:]
  -[ENExposureDetectionDaemonSessionState infectiousnessForDaysSinceOnsetOfSymptomsChangeDate]
  -[ENExposureDetectionDaemonSessionState setInfectiousnessForDaysSinceOnsetOfSymptomsChangeDate:]
  -[ENExposureDetectionDaemonSessionState setInfectiousnessForDaysSinceOnsetOfSymptoms:]


ENExposureDetectionDaemonSessionStatistics : NSObject <NSCopying>
 @property  unsigned long droppedCachedKeyUpdatesCount
 @property  unsigned long droppedKeyCount
 @property  unsigned long fileKeyCount
 @property  unsigned long fileInvalidKeyCount
 @property  unsigned long invalidFileSignatureCount
 @property  unsigned long matchedKeyCount
 @property  unsigned long newCachedKeyCount
 @property  unsigned long processedFileCount
 @property  unsigned long revokedKeyCount
 @property  unsigned long updatedCachedKeyCount

  // instance methods
  -[ENExposureDetectionDaemonSessionStatistics copyWithZone:]
  -[ENExposureDetectionDaemonSessionStatistics droppedKeyCount]
  -[ENExposureDetectionDaemonSessionStatistics setDroppedKeyCount:]
  -[ENExposureDetectionDaemonSessionStatistics droppedCachedKeyUpdatesCount]
  -[ENExposureDetectionDaemonSessionStatistics setDroppedCachedKeyUpdatesCount:]
  -[ENExposureDetectionDaemonSessionStatistics fileKeyCount]
  -[ENExposureDetectionDaemonSessionStatistics setFileKeyCount:]
  -[ENExposureDetectionDaemonSessionStatistics fileInvalidKeyCount]
  -[ENExposureDetectionDaemonSessionStatistics setFileInvalidKeyCount:]
  -[ENExposureDetectionDaemonSessionStatistics invalidFileSignatureCount]
  -[ENExposureDetectionDaemonSessionStatistics setInvalidFileSignatureCount:]
  -[ENExposureDetectionDaemonSessionStatistics matchedKeyCount]
  -[ENExposureDetectionDaemonSessionStatistics setMatchedKeyCount:]
  -[ENExposureDetectionDaemonSessionStatistics newCachedKeyCount]
  -[ENExposureDetectionDaemonSessionStatistics setNewCachedKeyCount:]
  -[ENExposureDetectionDaemonSessionStatistics processedFileCount]
  -[ENExposureDetectionDaemonSessionStatistics setProcessedFileCount:]
  -[ENExposureDetectionDaemonSessionStatistics revokedKeyCount]
  -[ENExposureDetectionDaemonSessionStatistics setRevokedKeyCount:]
  -[ENExposureDetectionDaemonSessionStatistics updatedCachedKeyCount]
  -[ENExposureDetectionDaemonSessionStatistics setUpdatedCachedKeyCount:]


ENExposureDetectionDaemonSessionResult : NSObject
 @property  ENExposureDetectionDaemonSessionStatistics *statistics
 @property  ENExposureDetectionSummary *summary
 @property  ENRegion *region
 @property  ENExposureClassification *exposureClassification
 @property  long long exposureClassificationStatus
 @property  NSData *differentialPrivacyRiskParameters
 @property  NSData *differentialPrivacyBeaconCount

  // instance methods
  -[ENExposureDetectionDaemonSessionResult statistics]
  -[ENExposureDetectionDaemonSessionResult setSummary:]
  -[ENExposureDetectionDaemonSessionResult setStatistics:]
  -[ENExposureDetectionDaemonSessionResult .cxx_destruct]
  -[ENExposureDetectionDaemonSessionResult summary]
  -[ENExposureDetectionDaemonSessionResult region]
  -[ENExposureDetectionDaemonSessionResult setRegion:]
  -[ENExposureDetectionDaemonSessionResult differentialPrivacyRiskParameters]
  -[ENExposureDetectionDaemonSessionResult setDifferentialPrivacyRiskParameters:]
  -[ENExposureDetectionDaemonSessionResult differentialPrivacyBeaconCount]
  -[ENExposureDetectionDaemonSessionResult setDifferentialPrivacyBeaconCount:]
  -[ENExposureDetectionDaemonSessionResult exposureClassification]
  -[ENExposureDetectionDaemonSessionResult setExposureClassification:]
  -[ENExposureDetectionDaemonSessionResult exposureClassificationStatus]
  -[ENExposureDetectionDaemonSessionResult setExposureClassificationStatus:]


ENRegionHistory : NSObject <NSSecureCoding>
 @property  NSMutableArray *regionHistory

  // class methods
  +[ENRegionHistory supportsSecureCoding]

  // instance methods
  -[ENRegionHistory getRegions]
  -[ENRegionHistory encodeWithCoder:]
  -[ENRegionHistory removeAllRegionVisits]
  -[ENRegionHistory addRegionVisit:]
  -[ENRegionHistory .cxx_destruct]
  -[ENRegionHistory getRegionVisits]
  -[ENRegionHistory regionHistory]
  -[ENRegionHistory copyWithZone:]
  -[ENRegionHistory initWithRegionVisits:]
  -[ENRegionHistory removeRegionVisit:]
  -[ENRegionHistory init]
  -[ENRegionHistory initWithCoder:]


ENRemoteUISession : NSObject
 @property  NSUUID *sessionID
 @property  ENXPCConnection *connection
 @property  NSObject<OS_xpc_object> *originalRequest

  // instance methods
  -[ENRemoteUISession originalRequest]
  -[ENRemoteUISession sessionID]
  -[ENRemoteUISession .cxx_destruct]
  -[ENRemoteUISession connection]
  -[ENRemoteUISession setSessionID:]
  -[ENRemoteUISession setConnection:]
  -[ENRemoteUISession setOriginalRequest:]


ApplicationObserver : NSObject <LSApplicationWorkspaceObserverProtocol>
 @property  NSObject<ApplicationObserver> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ApplicationObserver applicationsDidInstall:]
  -[ApplicationObserver setDelegate:]
  -[ApplicationObserver applicationsDidUninstall:]
  -[ApplicationObserver delegate]
  -[ApplicationObserver dealloc]
  -[ApplicationObserver .cxx_destruct]
  -[ApplicationObserver init]


ENDaemon : NSObject <ApplicationObserver, ENConfigurationManagerDelegate, ENExposureDetectionManagerDelegate, ENOnboardingManagerDelegate, ENTemporaryExposureKeyManagerDelegate, ENTestResultManagerDelegate, ENTextMessageManagerDelegate, SBSRemoteAlertHandleObserver, UNUserNotificationCenterDelegate>
 @property  ENActiveEntity *activeEntity
 @property  NSMutableDictionary *appActivities
 @property  BOOL automaticRegionSwitchEnabled
 @property  BOOL availabilityAlertDisabled
 @property  long long travelStatus
 @property  NSString *btTracingAppID
 @property  ENConfigurationManager *configurationManager
 @property  ENDifferentialPrivacyManager *differentialPrivacyManager
 @property  NSObject<OS_dispatch_queue> *dispatchExposureDetectionManagingQueue
 @property  NSObject<OS_dispatch_queue> *dispatchDownloadManagingQueue
 @property  NSObject<OS_dispatch_queue> *dispatchTestResultManagingQueue
 @property  ENDownloadManager *downloadManager
 @property  ENExposureDetectionManager *exposureDetectionManager
 @property  ENOnboardingManager *onboardingManager
 @property  BOOL onboardingFirstTime
 @property  long long onboardingLegalConsentLastViewCount
 @property  unsigned int onboardingTrigger
 @property  ENRegion *onboardingRegionTrigger
 @property  long long overallStatus
 @property  NSBackgroundActivityScheduler *persistencePurgeScheduler
 @property  NSMutableOrderedSet *previouslyTrackedApps
 @property  ENRegionMonitor *regionMonitor
 @property  NSMutableDictionary *remoteUISessions
 @property  NSMutableDictionary *screenUnlockPendingActions
 @property  unsigned int stateMetricVersion
 @property  CUSystemMonitor *systemMonitor
 @property  ENTemporaryExposureKeyManager *temporaryExposureKeyManager
 @property  ENTestResultManager *testResultManager
 @property  ENTextMessageManager *textMessageManager
 @property  ENUserAlert *userAlert
 @property  UNUserNotificationCenter *userNotificationCenter
 @property  BOOL wasInRestrictedStatus
 @property  BOOL wasInDifferentActiveRegion
 @property  BOOL monthlySummaryDisabled
 @property  ENXPCTimer *monthlyNotificationTimer
 @property  ENXPCTimer *onboardingTimer
 @property  BOOL prefAggressiveScanning
 @property  BOOL prefConfigurationManagerEnabled
 @property  double prefDatabasePurgeInterval
 @property  BOOL prefDeveloperServerConfiguration
 @property  BOOL prefEnableNKD
 @property  double prefServerConfigurationRefreshInterval
 @property  long long prefDifferentialPrivacyConsent
 @property  BOOL prefEnabled
 @property  BOOL prefLoggingSensitive
 @property  BOOL prefLoggingRPI
 @property  BOOL prefPaused
 @property  BOOL prefNetworkProxyEnabled
 @property  unsigned int prefRateLimitMaxAPICount
 @property  unsigned int prefRateLimitMaxAPICountV2
 @property  NSString *prefRegionIdentifierOverride
 @property  BOOL prefRegionMonitorTestMode
 @property  BOOL prefServerForceDisable
 @property  BOOL prefSkipExposureWindowShuffling
 @property  BOOL prefSkipFileSigning
 @property  BOOL prefStoreDemoMode
 @property  BOOL prefTCCAllowWithoutApps
 @property  unsigned int usageUserEnabled
 @property  unsigned int usageUserDisabled
 @property  unsigned int usageUserPaused
 @property  unsigned int usageUserUnpaused
 @property  unsigned int usageUserAlertShare
 @property  unsigned int usageUserAlertDontShare
 @property  unsigned int usageUserAlertReset
 @property  unsigned int usageUserAlertDontReset
 @property  unsigned int usageManagerActivate
 @property  unsigned int usageGetDiagnosisKeys
 @property  unsigned int usageResetAllData
 @property  unsigned int usageExposureDetectFileActivate
 @property  unsigned int usageExposureDetectFileAddKeys
 @property  unsigned int usageExposureDetectFileFinish
 @property  unsigned int usageExposureDetectFileGetExposures
 @property  unsigned int usageExposureDetectFileGetExposureWindows
 @property  SBSRemoteAlertHandle *buddyAlertHandle
 @property  SFClient *sharingClient
 @property  PrivacyProxyServiceStatus *networkProxyStatus
 @property  unsigned long networkProxyTraffic
 @property  <ENDaemonDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ENDaemon deviceSupportsFaceID]

  // instance methods
  -[ENDaemon applicationsDidInstall:]
  -[ENDaemon temporaryExposureKeyManager:retrieveTEKHistoryIncludingActive:generateNewTEK:]
  -[ENDaemon persistencePurgeScheduler]
  -[ENDaemon xpcReportStatus]
  -[ENDaemon configurationManager]
  -[ENDaemon downloadManager]
  -[ENDaemon setAppActivities:]
  -[ENDaemon setPrefServerConfigurationRefreshInterval:]
  -[ENDaemon activate]
  -[ENDaemon setPrefLoggingSensitive:]
  -[ENDaemon postAnalyticsOptInNotificationForRegion:]
  -[ENDaemon previouslyTrackedApps]
  -[ENDaemon postOnboardingNotificationForRegion:]
  -[ENDaemon stateMetricVersion]
  -[ENDaemon prefEnabled]
  -[ENDaemon enqueueScreenUnlockAction:withIdentifier:]
  -[ENDaemon _differentialPrivacyEnsureStarted]
  -[ENDaemon usageUserAlertDontReset]
  -[ENDaemon _databasesEnsureOpened]
  -[ENDaemon usageExposureDetectFileGetExposureWindows]
  -[ENDaemon regionMonitor]
  -[ENDaemon setPrefRateLimitMaxAPICountV2:]
  -[ENDaemon setPrefSkipFileSigning:]
  -[ENDaemon _getDownloadEndpointsAndReturnError:]
  -[ENDaemon textMessageManager]
  -[ENDaemon monthlyTriggerActivateWithIntervalOverride:]
  -[ENDaemon setUsageUserDisabled:]
  -[ENDaemon _invalidate]
  -[ENDaemon _writePreferenceActiveEntity:]
  -[ENDaemon setDispatchDownloadManagingQueue:]
  -[ENDaemon automaticRegionSwitchEnabled]
  -[ENDaemon setUsageResetAllData:]
  -[ENDaemon _bluetoothMonitorShouldRun]
  -[ENDaemon setPrefEnabled:]
  -[ENDaemon setPrefAggressiveScanning:]
  -[ENDaemon setUsageUserUnpaused:]
  -[ENDaemon prefPaused]
  -[ENDaemon setPrefNetworkProxyEnabled:]
  -[ENDaemon setDelegate:]
  -[ENDaemon prefRegionIdentifierOverride]
  -[ENDaemon postMonthlySummaryNotificationForAppBundleIdentifier:]
  -[ENDaemon _handleTestVerificationErrors:]
  -[ENDaemon _networkProxyStatusCheck]
  -[ENDaemon applicationsDidUninstall:]
  -[ENDaemon setActiveEntity:]
  -[ENDaemon prefServerConfigurationRefreshInterval]
  -[ENDaemon usageExposureDetectFileFinish]
  -[ENDaemon onboardingManagerDidObserveDeviceUnlock:]
  -[ENDaemon _activate]
  -[ENDaemon prefLoggingSensitive]
  -[ENDaemon setNetworkProxyStatus:]
  -[ENDaemon postPreAuthorizationNotificationForRegion:]
  -[ENDaemon postGeneralNotificationWithTitle:message:]
  -[ENDaemon _getReportTypeFromMetadata:]
  -[ENDaemon systemMonitor]
  -[ENDaemon _enqueueScreenUnlockAction:withIdentifier:]
  -[ENDaemon usageUserEnabled]
  -[ENDaemon loadLegacyHistorySinceTime:]
  -[ENDaemon setOnboardingManager:]
  -[ENDaemon _enApplicationDidUninstall:]
  -[ENDaemon _bluetoothMonitorEnsureStopped]
  -[ENDaemon delegate]
  -[ENDaemon setPrefRateLimitMaxAPICount:]
  -[ENDaemon monthlySummaryDisabled]
  -[ENDaemon _getLatestExposureForDifferentialPrivacy]
  -[ENDaemon postExposureSummaryAccessNotificationWithAppBundleIdentifier:string:]
  -[ENDaemon dispatchTestResultManagingQueue]
  -[ENDaemon userAlert]
  -[ENDaemon dispatchDownloadManagingQueue]
  -[ENDaemon _bluetoothTracingStop]
  -[ENDaemon _bluetoothTracingEnsureStarted]
  -[ENDaemon remoteUISessions]
  -[ENDaemon setUsageExposureDetectFileFinish:]
  -[ENDaemon _exposureManagersEnsureStopped]
  -[ENDaemon prefEnableNKD]
  -[ENDaemon tearDownAlertHandle]
  -[ENDaemon setMonthlyNotificationTimer:]
  -[ENDaemon setUsageExposureDetectFileGetExposures:]
  -[ENDaemon textMessageManager:errorDetected:]
  -[ENDaemon setPrefLoggingRPI:]
  -[ENDaemon setTestResultManager:]
  -[ENDaemon setUsageManagerActivate:]
  -[ENDaemon _startPreauthorizedTestVerificationAction]
  -[ENDaemon temporaryExposureKeyManager]
  -[ENDaemon enqueuePreauthorizedTestVerificationUnlockAction]
  -[ENDaemon _getDelegateAndReturnError:]
  -[ENDaemon _xpcListenerEvent:]
  -[ENDaemon _bluetoothMonitorEnsureStarted]
  -[ENDaemon usageExposureDetectFileGetExposures]
  -[ENDaemon setBtTracingAppID:]
  -[ENDaemon monthlyNotificationTimer]
  -[ENDaemon isProxyEnabledForTestResultManager:]
  -[ENDaemon prefStoreDemoMode]
  -[ENDaemon configurationManager:errorDetected:]
  -[ENDaemon presentBuddyForRegion:errorHandler:completionHandler:]
  -[ENDaemon setDownloadManager:]
  -[ENDaemon setScreenUnlockPendingActions:]
  -[ENDaemon _exposureNotificationRegionConfigurationChanged:]
  -[ENDaemon _exposureManagersEnsureStarted]
  -[ENDaemon .cxx_destruct]
  -[ENDaemon prefsChanged]
  -[ENDaemon setWasInRestrictedStatus:]
  -[ENDaemon prefTCCAllowWithoutApps]
  -[ENDaemon setPrefEnableNKD:]
  -[ENDaemon prefDeveloperServerConfiguration]
  -[ENDaemon userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[ENDaemon xpcConnectionInvalidated:]
  -[ENDaemon userNotificationCenter]
  -[ENDaemon _configurationManagerEnsureStopped]
  -[ENDaemon _periodicPersistencePurge]
  -[ENDaemon startAvailabilityAlertCycleWithBuddy:]
  -[ENDaemon _regionMonitorEnsureStarted]
  -[ENDaemon usageManagerActivate]
  -[ENDaemon _getInfoDictFromBundle:]
  -[ENDaemon setPrefServerForceDisable:]
  -[ENDaemon _readPreferenceActiveEntity]
  -[ENDaemon fetchServerConfigurationForAppBundleIdentifier:infoDictionary:]
  -[ENDaemon setUsageUserAlertShare:]
  -[ENDaemon startServerConfigurationFetchForRegion:]
  -[ENDaemon _enApplicationDidInstall:]
  -[ENDaemon usageGetDiagnosisKeys]
  -[ENDaemon _shouldDisableMonthlySummary]
  -[ENDaemon postTestVerificationReceivedNotification:region:reportType:]
  -[ENDaemon setTextMessageManager:]
  -[ENDaemon _setActiveRegionForApp:infoDict:]
  -[ENDaemon setDispatchQueue:]
  -[ENDaemon travelStatus]
  -[ENDaemon _getExposureMatchAttemptBool]
  -[ENDaemon buddyAlertHandle]
  -[ENDaemon getOverallStatus]
  -[ENDaemon setMonthlySummaryDisabled:]
  -[ENDaemon prefSkipFileSigning]
  -[ENDaemon _readPreferenceRegionPendingOnboarding]
  -[ENDaemon prefDifferentialPrivacyConsent]
  -[ENDaemon setOnboardingLegalConsentLastViewCount:]
  -[ENDaemon appDequeueActivityFlagsWithBundleID:]
  -[ENDaemon setOnboardingFirstTime:]
  -[ENDaemon setUsageUserEnabled:]
  -[ENDaemon isOnboardingNeeded]
  -[ENDaemon exposureDetectionManager:errorDetected:]
  -[ENDaemon dispatchExposureDetectionManagingQueue]
  -[ENDaemon setUsageGetDiagnosisKeys:]
  -[ENDaemon onboardingTimer]
  -[ENDaemon activeRegionForExposureDetectionManager:]
  -[ENDaemon setRegionMonitor:]
  -[ENDaemon setExposureDetectionManager:]
  -[ENDaemon prefNetworkProxyEnabled]
  -[ENDaemon usageExposureDetectFileActivate]
  -[ENDaemon _turnOffEN]
  -[ENDaemon prefRateLimitMaxAPICount]
  -[ENDaemon _getLegalConsentPageCount]
  -[ENDaemon setPrefDifferentialPrivacyConsent:]
  -[ENDaemon sharingClient]
  -[ENDaemon xpcPreAuthorizedDiagnosisKeysAvailable]
  -[ENDaemon _migrateLegacyHistoryIfNecessary]
  -[ENDaemon btTracingAppID]
  -[ENDaemon setPrefSkipExposureWindowShuffling:]
  -[ENDaemon setTravelStatus:]
  -[ENDaemon setPrefRegionMonitorTestMode:]
  -[ENDaemon dispatchQueue]
  -[ENDaemon wasInDifferentActiveRegion]
  -[ENDaemon remoteAlertHandleDidDeactivate:]
  -[ENDaemon usageExposureDetectFileAddKeys]
  -[ENDaemon _disableAvailabilityAlertIfNeeded]
  -[ENDaemon differentialPrivacyManager]
  -[ENDaemon _differentialPrivacyEnsureStopped]
  -[ENDaemon regionForBundleInfo:]
  -[ENDaemon _writePreferenceRegionPendingOnboarding:]
  -[ENDaemon _xpcConnectionAccept:]
  -[ENDaemon prefServerForceDisable]
  -[ENDaemon setDispatchTestResultManagingQueue:]
  -[ENDaemon tccAccessForBundleID:]
  -[ENDaemon monthlyTriggerDeactivate]
  -[ENDaemon setUsageUserPaused:]
  -[ENDaemon onboardingTrigger]
  -[ENDaemon setOnboardingRegionTrigger:]
  -[ENDaemon onboardingLegalConsentLastViewCount]
  -[ENDaemon setDifferentialPrivacyManager:]
  -[ENDaemon _isNKDActive]
  -[ENDaemon setAutomaticRegionSwitchEnabled:]
  -[ENDaemon remoteAlertHandle:didInvalidateWithError:]
  -[ENDaemon _configurationManagerEnsureStarted]
  -[ENDaemon appLaunchWithBundleID:activity:shouldEnterForeground:requiredRuntimeInSeconds:]
  -[ENDaemon configurationManager:exposureNotificationRegionConfigurationRemovedForRegion:]
  -[ENDaemon configurationManager:didResolveCurrentRegion:]
  -[ENDaemon descriptionWithLevel:]
  -[ENDaemon remoteAlertHandleDidActivate:]
  -[ENDaemon bluetoothPowerStateChanged]
  -[ENDaemon setSystemMonitor:]
  -[ENDaemon setUsageUserAlertDontReset:]
  -[ENDaemon overallStatus]
  -[ENDaemon usageUserAlertReset]
  -[ENDaemon onboardingManager]
  -[ENDaemon postENOffNotification]
  -[ENDaemon testResultManager]
  -[ENDaemon networkProxyStatus]
  -[ENDaemon _regionMonitorEnsureStopped]
  -[ENDaemon setPrefStoreDemoMode:]
  -[ENDaemon setConfigurationManager:]
  -[ENDaemon _bluetoothTracingEnsureStopped]
  -[ENDaemon setPreviouslyTrackedApps:]
  -[ENDaemon invalidate]
  -[ENDaemon exposureDetectionManager:advertisementDatabaseQuerySessionWithAttenuationThreshold:error:]
  -[ENDaemon prefAggressiveScanning]
  -[ENDaemon _scheduleUpdate]
  -[ENDaemon setSharingClient:]
  -[ENDaemon onboardingTriggerDeactivate]
  -[ENDaemon usageUserUnpaused]
  -[ENDaemon _resetDataWithFlags:]
  -[ENDaemon setOverallStatus:]
  -[ENDaemon onboardingFirstTime]
  -[ENDaemon _fetchPrefRegionConfig:oldCustomCountryCode:]
  -[ENDaemon _getReportTypeForSession:]
  -[ENDaemon usageUserAlertShare]
  -[ENDaemon usageUserAlertDontShare]
  -[ENDaemon availabilityAlertDisabled]
  -[ENDaemon onboardingTriggerResumeIfNeeded]
  -[ENDaemon getExposureDatabaseAndReturnError:]
  -[ENDaemon _getDiagnosedVaccineStatusForDifferentialPrivacyWithUserVaccinationStatus:]
  -[ENDaemon setBuddyAlertHandle:]
  -[ENDaemon wasInRestrictedStatus]
  -[ENDaemon prefSkipExposureWindowShuffling]
  -[ENDaemon usageUserPaused]
  -[ENDaemon _updateOverallStatus]
  -[ENDaemon exposureDetectionManager]
  -[ENDaemon setUsageExposureDetectFileGetExposureWindows:]
  -[ENDaemon advertisementDatabaseQuerySessionWithAttenuationThreshold:error:]
  -[ENDaemon xpcConnectionForBundleID:]
  -[ENDaemon setDispatchExposureDetectionManagingQueue:]
  -[ENDaemon setUsageExposureDetectFileAddKeys:]
  -[ENDaemon loadHistorySinceTime:]
  -[ENDaemon setPrefDatabasePurgeInterval:]
  -[ENDaemon postExposureNotification:]
  -[ENDaemon setOnboardingTrigger:]
  -[ENDaemon isDeviceUnlocked]
  -[ENDaemon setAvailabilityAlertDisabled:]
  -[ENDaemon setPrefConfigurationManagerEnabled:]
  -[ENDaemon usageResetAllData]
  -[ENDaemon setRemoteUISessions:]
  -[ENDaemon _getBundleIDFromBundle:]
  -[ENDaemon prefDatabasePurgeInterval]
  -[ENDaemon _update]
  -[ENDaemon setUserNotificationCenter:]
  -[ENDaemon updateExistingConsentForPhase1ActiveRegion:]
  -[ENDaemon setNetworkProxyTraffic:]
  -[ENDaemon setUserAlert:]
  -[ENDaemon timeForAvailabilityAlertCycleReset]
  -[ENDaemon screenUnlockPendingActions]
  -[ENDaemon exposureDetectionManager:finishedSessionWithResult:]
  -[ENDaemon setOnboardingTimer:]
  -[ENDaemon setWasInDifferentActiveRegion:]
  -[ENDaemon setPersistencePurgeScheduler:]
  -[ENDaemon networkProxyTraffic]
  -[ENDaemon _updatePhase1ConfigurationIfNeeded:]
  -[ENDaemon setPrefPaused:]
  -[ENDaemon prefRegionMonitorTestMode]
  -[ENDaemon _getAvailabilityAlertCountIncrement:reset:]
  -[ENDaemon setUsageUserAlertReset:]
  -[ENDaemon onboardingRegionTrigger]
  -[ENDaemon usageUserDisabled]
  -[ENDaemon setPrefRegionIdentifierOverride:]
  -[ENDaemon setPrefDeveloperServerConfiguration:]
  -[ENDaemon _tccChanged]
  -[ENDaemon onboardingTriggerRetry:]
  -[ENDaemon _deferConsentForPendingRegion]
  -[ENDaemon legacyHistoryPath]
  -[ENDaemon appActivities]
  -[ENDaemon prefConfigurationManagerEnabled]
  -[ENDaemon pauseUpdate]
  -[ENDaemon setUsageUserAlertDontShare:]
  -[ENDaemon _databasesEnsureClosed]
  -[ENDaemon activeEntity]
  -[ENDaemon prefLoggingRPI]
  -[ENDaemon init]
  -[ENDaemon setPrefTCCAllowWithoutApps:]
  -[ENDaemon _schedulePeriodicPersistencePurge]
  -[ENDaemon notifyUserWithStatus:]
  -[ENDaemon setTemporaryExposureKeyManager:]
  -[ENDaemon _resetDeveloperSettings]
  -[ENDaemon setUsageExposureDetectFileActivate:]
  -[ENDaemon _getInfoDictFromAppProxy:]
  -[ENDaemon _postUserNotificationWithRequest:authorizationFailureHandler:]
  -[ENDaemon fetchServerConfigurationForRegion:completion:]
  -[ENDaemon _exposureNotificationRegionConfigurationRemoved:]
  -[ENDaemon prefRateLimitMaxAPICountV2]
  -[ENDaemon _postExposureNotificationForClassification:status:region:]
  -[ENDaemon configurationManager:exposureNotificationRegionConfigurationChanged:]


ENXPCConnection : NSObject
 @property  ENXPCClient *client
 @property  ENDaemon *daemon
 @property  ENExposureDetectionDaemonSession *detectionSession
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  ENManager *manager
 @property  BOOL skipFileSigningVerification
 @property  NSObject<OS_xpc_object> *xpcCnx

  // instance methods
  -[ENXPCConnection setDaemon:]
  -[ENXPCConnection _xpcGetDataVaultSize:]
  -[ENXPCConnection activate]
  -[ENXPCConnection _xpcPreAuthorizeDiagnosisKeysComplete:userDecision:]
  -[ENXPCConnection _xpcDiagnosticShow:]
  -[ENXPCConnection _xpcGetAllRegionConfig:]
  -[ENXPCConnection _xpcGetUserTraveledPromptWithCompletion:]
  -[ENXPCConnection _xpcLegalConsentPageCount:]
  -[ENXPCConnection _xpcGetAllRegionServerConfig:]
  -[ENXPCConnection _rateLimitAndReturnError:]
  -[ENXPCConnection _xpcSendReplyError:request:]
  -[ENXPCConnection setManager:]
  -[ENXPCConnection _xpcGetInfo:]
  -[ENXPCConnection _sendOnboardingMetricForRegionConfiguration:]
  -[ENXPCConnection _xpcExposureDetectionFileAdd:]
  -[ENXPCConnection _xpcSetRegionHistoryEnabled:]
  -[ENXPCConnection _xpcExposureDetectionFileGetExposureWindows:]
  -[ENXPCConnection _xpcSendMessage:]
  -[ENXPCConnection _xpcDiagnosticControl:]
  -[ENXPCConnection _xpcSetPaused:]
  -[ENXPCConnection detectionSession]
  -[ENXPCConnection _xpcGetPreAuthorizeDiagnosisKeysEnabled:]
  -[ENXPCConnection _xpcPreAuthorizeDiagnosisKeys:]
  -[ENXPCConnection _updateActiveEntityFromTCCResult:]
  -[ENXPCConnection xpcReportActivityFlags:]
  -[ENXPCConnection _xpcExposureDetectionFileAddNext:fileSession:publicKey:]
  -[ENXPCConnection _xpcGetRegionServerConfig:]
  -[ENXPCConnection _xpcExposureDetectionFileFinish:]
  -[ENXPCConnection _xpcGetDiagnosisKeys:testMode:]
  -[ENXPCConnection setDetectionSession:]
  -[ENXPCConnection _xpcSetActiveRegion:]
  -[ENXPCConnection _xpcGetRegionHistory:]
  -[ENXPCConnection _appActiveStatusWithError:]
  -[ENXPCConnection _xpcDownload:]
  -[ENXPCConnection _xpcStartTestVerificationSession:]
  -[ENXPCConnection updateDiagnosisKeysPreAuthorizationForRequest:withDecision:errorOut:]
  -[ENXPCConnection .cxx_destruct]
  -[ENXPCConnection _xpcGetRegionHistoryEnabled:]
  -[ENXPCConnection _xpcSetActiveApp:]
  -[ENXPCConnection xpcConnectionEvent:]
  -[ENXPCConnection setClient:]
  -[ENXPCConnection _xpcSetAutomaticRegionSwitch:]
  -[ENXPCConnection _xpcGetSubdivisionList:]
  -[ENXPCConnection _xpcGetRegionConfig:]
  -[ENXPCConnection setDispatchQueue:]
  -[ENXPCConnection _xpcGetRegionMonitorEnabled:]
  -[ENXPCConnection _xpcExposureDetectionHistoryGetFiles:]
  -[ENXPCConnection _xpcGetActiveRegion:]
  -[ENXPCConnection _authorizationPreflightUnknownAndReturnError:]
  -[ENXPCConnection _xpcDiagnosticLog:]
  -[ENXPCConnection client]
  -[ENXPCConnection _xpcStartSelfReportWebSession:]
  -[ENXPCConnection enqueuePreAuthorizedLockScreenActionForRequest:outError:]
  -[ENXPCConnection _processServerResponseConfigurationsForRegion:serverResponses:request:]
  -[ENXPCConnection _xpcExposureDetectionFileActivate:]
  -[ENXPCConnection _xpcSetDeveloperRegionServerConfig:]
  -[ENXPCConnection _xpcSetPreAuthorizeDiagnosisKeysEnabled:]
  -[ENXPCConnection _xpcSetMonthlySummaryAlertEnabled:]
  -[ENXPCConnection xpcPreAuthorizedDiagnosisKeysAvailable]
  -[ENXPCConnection _xpcSetTravelStatusEnabled:]
  -[ENXPCConnection dispatchQueue]
  -[ENXPCConnection _authorizedAndReturnError:]
  -[ENXPCConnection xpcCnx]
  -[ENXPCConnection _fetchClientPublicKeyWithVerificationID:keyVersion:completion:]
  -[ENXPCConnection _xpcGetRegionAgencyConfig:]
  -[ENXPCConnection _regionConfigForXPCRequest:error:]
  -[ENXPCConnection _xpcGetUserTraveled:]
  -[ENXPCConnection _xpcManagerActivateIfNecessaryWithRequest:error:]
  -[ENXPCConnection _xpcGetRegionSystemConfig:]
  -[ENXPCConnection daemon]
  -[ENXPCConnection _xpcNotificationTrigger:]
  -[ENXPCConnection setSkipFileSigningVerification:]
  -[ENXPCConnection _xpcGetAllRegionAgencyConfig:]
  -[ENXPCConnection manager]
  -[ENXPCConnection _xpcGetStatusForBundleIdentifier:]
  -[ENXPCConnection setXpcCnx:]
  -[ENXPCConnection descriptionWithLevel:]
  -[ENXPCConnection _entitledForAccessLevel:error:]
  -[ENXPCConnection _xpcGetEntities:]
  -[ENXPCConnection _xpcGetUserTraveledReplyAllowed:request:]
  -[ENXPCConnection _xpcEntitlementCheck:]
  -[ENXPCConnection _regionServerConfigForXPCRequest:error:]
  -[ENXPCConnection _xpcVerifyTextMessage:]
  -[ENXPCConnection _xpcManagerActivate:]
  -[ENXPCConnection invalidate]
  -[ENXPCConnection skipFileSigningVerification]
  -[ENXPCConnection _xpcSetActiveEntity:]
  -[ENXPCConnection _xpcExposureDetectionFileGetExposures:]
  -[ENXPCConnection _xpcFetchTestVerificationMetadata:]
  -[ENXPCConnection _xpcRequestPreAuthorizedDiagnosisKeys:]
  -[ENXPCConnection _xpcResetData:]
  -[ENXPCConnection _xpcGetRemotePresentationRequestIfNeeded:]
  -[ENXPCConnection _xpcTCCCheck:]
  -[ENXPCConnection _xpcGetAllRegionGeneralConfig:]
  -[ENXPCConnection _xpcOnboardingDidStart:]
  -[ENXPCConnection _xpcGetCurrentAgencyConfig:]
  -[ENXPCConnection _xpcFinishTestVerificationSession:]
  -[ENXPCConnection xpcStatusChanged]
  -[ENXPCConnection _xpcSetAvailabilityAlertEnabled:]
  -[ENXPCConnection _xpcConnectionRequest:]
  -[ENXPCConnection _xpcGetDiagnosisKeysCompletion:didPrompt:testMode:error:]
  -[ENXPCConnection _xpcSetRegionConsent:]
  -[ENXPCConnection _xpcShowBuddy:]
  -[ENXPCConnection _xpcSetEnabled:]
  -[ENXPCConnection _xpcGetLastExposureNotification:]
  -[ENXPCConnection _xpcExposureDetectionHistoryGetSessions:]
  -[ENXPCConnection _xpcRemotePresentationReceivedDecision:]
  -[ENXPCConnection _xpcMessageAddCommonKeys:allowed:]
  -[ENXPCConnection _xpcGetTravelStatusEnabled:]
  -[ENXPCConnection _xpcSendReplyError:reply:]


ENCloudNetworkRequest : NSObject
 @property  NSUUID *requestID
 @property  NSURL *url
 @property  NSDictionary *headers
 @property  NSDictionary *parameters
 @property  NSData *body
 @property  unsigned long httpMethod

  // class methods
  +[ENCloudNetworkRequest requestWithURL:httpMethod:headers:parameters:andBody:]

  // instance methods
  -[ENCloudNetworkRequest headers]
  -[ENCloudNetworkRequest parameters]
  -[ENCloudNetworkRequest setUrl:]
  -[ENCloudNetworkRequest setHeaders:]
  -[ENCloudNetworkRequest httpMethod]
  -[ENCloudNetworkRequest setBody:]
  -[ENCloudNetworkRequest setRequestID:]
  -[ENCloudNetworkRequest .cxx_destruct]
  -[ENCloudNetworkRequest setParameters:]
  -[ENCloudNetworkRequest body]
  -[ENCloudNetworkRequest requestID]
  -[ENCloudNetworkRequest url]
  -[ENCloudNetworkRequest httpMethodString]
  -[ENCloudNetworkRequest setHttpMethod:]


ENXPCClient : NSObject
 @property  int accessLevel
 @property  int pid
 @property  NSString *signingIdentity
 @property  BOOL entitledForLogging
 @property  BOOL entitledToSkipFileSigningVerification
 @property  BOOL entitledToSkipKeyReleasePrompt
 @property  BOOL entitledToShowBuddy
 @property  int appAPIVersion
 @property  ENRegion *appRegion
 @property  BOOL entitledForDifferentialPrivacy
 @property  BOOL entitledForTestVerification

  // class methods
  +[ENXPCClient clientWithAuditToken:pid:]

  // instance methods
  -[ENXPCClient setAccessLevel:]
  -[ENXPCClient signingIdentity]
  -[ENXPCClient setEntitledToShowBuddy:]
  -[ENXPCClient setSigningIdentity:]
  -[ENXPCClient entitledToShowBuddy]
  -[ENXPCClient entitledForTestVerification]
  -[ENXPCClient appRegion]
  -[ENXPCClient .cxx_destruct]
  -[ENXPCClient accessLevel]
  -[ENXPCClient activateWithAppAPIVersion:regionISO:]
  -[ENXPCClient setEntitledToSkipFileSigningVerification:]
  -[ENXPCClient entitledForDifferentialPrivacy]
  -[ENXPCClient pid]
  -[ENXPCClient setEntitledToSkipKeyReleasePrompt:]
  -[ENXPCClient appAPIVersion]
  -[ENXPCClient setPid:]
  -[ENXPCClient entitledForLogging]
  -[ENXPCClient entitledToSkipFileSigningVerification]
  -[ENXPCClient entitledToSkipKeyReleasePrompt]
  -[ENXPCClient setEntitledForLogging:]


ENFileSessionDaemon : NSObject
 @property  unsigned long batchSize
 @property  ENFile *file
 @property  unsigned int flags
 @property  unsigned long invalidKeyCount

  // instance methods
  -[ENFileSessionDaemon setBatchSize:]
  -[ENFileSessionDaemon batchSize]
  -[ENFileSessionDaemon dealloc]
  -[ENFileSessionDaemon setFlags:]
  -[ENFileSessionDaemon .cxx_destruct]
  -[ENFileSessionDaemon file]
  -[ENFileSessionDaemon flags]
  -[ENFileSessionDaemon invalidate]
  -[ENFileSessionDaemon init]
  -[ENFileSessionDaemon activateWithArchiveFD:error:]
  -[ENFileSessionDaemon activateWithFileFD:signatureData:error:]
  -[ENFileSessionDaemon _createTransaction]
  -[ENFileSessionDaemon _resetAndAdvanceArchive:toPathWithExtension:error:]
  -[ENFileSessionDaemon readSignaturesAndReturnError:]
  -[ENFileSessionDaemon readTEKBatchAndReturnError:]
  -[ENFileSessionDaemon _readTEKBatchAndReturnError:]
  -[ENFileSessionDaemon prepareNextTEKBatchIfNecessary]
  -[ENFileSessionDaemon invalidKeyCount]


ENTestResultNetworkRequest : NSObject
 @property  NSURL *requestURL
 @property  NSDictionary *requestHeaders
 @property  NSString *APIKey
 @property  unsigned long paddedRequestSize
 @property  NSError *error
 @property  NSDictionary *additionalRequestHeaders
 @property  NSDictionary *bodyJSON

  // instance methods
  -[ENTestResultNetworkRequest error]
  -[ENTestResultNetworkRequest .cxx_destruct]
  -[ENTestResultNetworkRequest requestURL]
  -[ENTestResultNetworkRequest _completeWithError:]
  -[ENTestResultNetworkRequest resumeWithCompletionHandler:]
  -[ENTestResultNetworkRequest invalidate]
  -[ENTestResultNetworkRequest _dataTaskWithRequest:completionHandler:]
  -[ENTestResultNetworkRequest requestHeaders]
  -[ENTestResultNetworkRequest errorForUnsuccessfulResponse:body:]
  -[ENTestResultNetworkRequest bodyJSON]
  -[ENTestResultNetworkRequest handleResponse:body:]
  -[ENTestResultNetworkRequest initWithRequestURL:URLSession:queue:]
  -[ENTestResultNetworkRequest getPaddedBodyJSONAndReturnError:]
  -[ENTestResultNetworkRequest handleURLResponse:data:error:]
  -[ENTestResultNetworkRequest setMaxRetryTime:]
  -[ENTestResultNetworkRequest _dictionaryFromData:response:error:]
  -[ENTestResultNetworkRequest additionalRequestHeaders]
  -[ENTestResultNetworkRequest _createURLRequestWithError:]
  -[ENTestResultNetworkRequest _errorForURLRequestError:]
  -[ENTestResultNetworkRequest _performURLRequest:attempt:]
  -[ENTestResultNetworkRequest retryCheck:retryAttempt:baseMultiplier:]
  -[ENTestResultNetworkRequest APIKey]
  -[ENTestResultNetworkRequest setAPIKey:]
  -[ENTestResultNetworkRequest paddedRequestSize]
  -[ENTestResultNetworkRequest setPaddedRequestSize:]


ENActiveEntity : NSObject <NSSecureCoding, NSCopying>
 @property  ENEntity *entity
 @property  int activeStatus

  // class methods
  +[ENActiveEntity supportsSecureCoding]

  // instance methods
  -[ENActiveEntity entity]
  -[ENActiveEntity encodeWithCoder:]
  -[ENActiveEntity .cxx_destruct]
  -[ENActiveEntity copyWithZone:]
  -[ENActiveEntity isEqual:]
  -[ENActiveEntity setEntity:]
  -[ENActiveEntity initWithCoder:]
  -[ENActiveEntity activeStatus]
  -[ENActiveEntity setActiveStatus:]
  -[ENActiveEntity initWithEntity:activeStatus:]


ENRegionMonitor : NSObject <CLLocationManagerDelegate, ENRegionHistoryManagerDelegate, ENRegionMonitorSourceDelegate>
 @property  ENRegionMonitorTelephonyDataSource *telephonyDataSource
 @property  ENRegionMonitorCoreLocationDataSource *coreLocationDataSource
 @property  ENRegionTestDataSource *testRegionDataSource
 @property  NSObject<OS_dispatch_queue> *regionMonitorQueue
 @property  unsigned long authorizationState
 @property  unsigned long exposureNotificationAuthorizationState
 @property  unsigned long significantLocationsAuthorizationState
 @property  unsigned long monitoringMode
 @property  ENRegionVisit *currentRegionVisit
 @property  CLLocationManager *exposureNotificationLocationManager
 @property  CLLocationManager *significantLocationsLocationManager
 @property  BOOL monitoringEnabled
 @property  ENRegionHistoryManager *regionHistoryManager
 @property  <ENRegionMonitorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ENRegionMonitor regionMonitorStateFromAuthorizationStatus:]
  +[ENRegionMonitor regionMonitorMonitoringModeToString:]
  +[ENRegionMonitor locationAuthorizationStatusToString:]
  +[ENRegionMonitor regionMonitorAuthorizationStateToString:]

  // instance methods
  -[ENRegionMonitor _regionDataSource:updatedWithVisit:]
  -[ENRegionMonitor regionDataSource:updatedWithVisit:]
  -[ENRegionMonitor setSignificantLocationsAuthorizationState:]
  -[ENRegionMonitor _getAllRegionVisitsWithError:]
  -[ENRegionMonitor telephonyDataSource]
  -[ENRegionMonitor setup]
  -[ENRegionMonitor testRegionDataSource]
  -[ENRegionMonitor setRegionHistoryManager:]
  -[ENRegionMonitor setRegionMonitorQueue:]
  -[ENRegionMonitor updateRegionHistoryFileStatus]
  -[ENRegionMonitor getAuthorizationState]
  -[ENRegionMonitor getCurrentRegionVisit]
  -[ENRegionMonitor setDelegate:]
  -[ENRegionMonitor delegate]
  -[ENRegionMonitor _createCountryDataSource]
  -[ENRegionMonitor _purgeRegionsOlderThanDate:error:]
  -[ENRegionMonitor updateRegionMonitorMonitoringMode:]
  -[ENRegionMonitor regionHistoryManager]
  -[ENRegionMonitor .cxx_destruct]
  -[ENRegionMonitor regionMonitorQueue]
  -[ENRegionMonitor purgeRegionsOlderThanDate:error:]
  -[ENRegionMonitor setTestRegionDataSource:]
  -[ENRegionMonitor _stopAllDataSources]
  -[ENRegionMonitor locationManagerDidChangeAuthorization:]
  -[ENRegionMonitor _getAllRegionsWithError:]
  -[ENRegionMonitor significantLocationsLocationManager]
  -[ENRegionMonitor getCurrentRegionVisitWithError:]
  -[ENRegionMonitor setExposureNotificationLocationManager:]
  -[ENRegionMonitor currentRegionVisit]
  -[ENRegionMonitor _createSubdivisionDataSource]
  -[ENRegionMonitor resetRegionMonitor]
  -[ENRegionMonitor getAllRegionVisitsWithError:]
  -[ENRegionMonitor setCurrentRegionVisit:]
  -[ENRegionMonitor setTelephonyDataSource:]
  -[ENRegionMonitor getMonitoringMode]
  -[ENRegionMonitor _getCurrentRegionVisitWithError:]
  -[ENRegionMonitor _setup]
  -[ENRegionMonitor purgeAllRegionHistoryWithError:]
  -[ENRegionMonitor monitoringMode]
  -[ENRegionMonitor _notifyDelegateOfCurrentRegion]
  -[ENRegionMonitor setCoreLocationDataSource:]
  -[ENRegionMonitor significantLocationsAuthorizationState]
  -[ENRegionMonitor exposureNotificationAuthorizationState]
  -[ENRegionMonitor setConfigurationManager:]
  -[ENRegionMonitor exposureNotificationLocationManager]
  -[ENRegionMonitor setExposureNotificationAuthorizationState:]
  -[ENRegionMonitor currentRegionVisitDidChange:]
  -[ENRegionMonitor monitoringEnabled]
  -[ENRegionMonitor updateAuthorizationState]
  -[ENRegionMonitor _resetRegionMonitor]
  -[ENRegionMonitor getAllRegionsWithError:]
  -[ENRegionMonitor enableRegionMonitor]
  -[ENRegionMonitor setMonitoringMode:]
  -[ENRegionMonitor _createLocationManager]
  -[ENRegionMonitor setAuthorizationState:]
  -[ENRegionMonitor setSignificantLocationsLocationManager:]
  -[ENRegionMonitor coreLocationDataSource]
  -[ENRegionMonitor _createTestDataSource]
  -[ENRegionMonitor _updateRegionHistoryFileStatus]
  -[ENRegionMonitor init]
  -[ENRegionMonitor disableRegionMonitor]
  -[ENRegionMonitor _purgeAllRegionHistoryWithError:]
  -[ENRegionMonitor setMonitoringEnabled:]
  -[ENRegionMonitor authorizationState]


ENSecKey : NSObject
 @property  ^{__SecKey=} keyRef

  // class methods
  +[ENSecKey keyFromBase64String:keyClass:error:]

  // instance methods
  -[ENSecKey dealloc]
  -[ENSecKey keyRef]
  -[ENSecKey initWithKeyRef:]


ENAdvertisement : NSObject
 @property  NSData *rpi
 @property  NSData *encryptedAEM
 @property  double timestamp
 @property  unsigned short scanInterval
 @property  BOOL typicalRSSI
 @property  BOOL maxRSSI
 @property  BOOL saturated
 @property  unsigned char counter

  // class methods
  +[ENAdvertisement decryptedMetadataForTemporaryExposureKey:encryptedAEM:RPI:]

  // instance methods
  -[ENAdvertisement setTimestamp:]
  -[ENAdvertisement .cxx_destruct]
  -[ENAdvertisement setCounter:]
  -[ENAdvertisement setScanInterval:]
  -[ENAdvertisement timestamp]
  -[ENAdvertisement scanInterval]
  -[ENAdvertisement counter]
  -[ENAdvertisement saturated]
  -[ENAdvertisement setSaturated:]
  -[ENAdvertisement initWithStructRepresentation:]
  -[ENAdvertisement initWithRPI:encryptedAEM:timestamp:scanInterval:typicalRSSI:maxRSSI:saturated:counter:]
  -[ENAdvertisement structRepresentation]
  -[ENAdvertisement combineWithAdvertisement:]
  -[ENAdvertisement decryptedMetadataForTemporaryExposureKey:]
  -[ENAdvertisement rpi]
  -[ENAdvertisement setRpi:]
  -[ENAdvertisement encryptedAEM]
  -[ENAdvertisement setEncryptedAEM:]
  -[ENAdvertisement typicalRSSI]
  -[ENAdvertisement setTypicalRSSI:]
  -[ENAdvertisement maxRSSI]
  -[ENAdvertisement setMaxRSSI:]


ENDifferentialPrivacyManager : NSObject
 @property  NSDictionary *metadata

  // class methods
  +[ENDifferentialPrivacyManager userRiskScoreForExposureDetectionSummary:]
  +[ENDifferentialPrivacyManager hashForServerExposureConfiguration:]

  // instance methods
  -[ENDifferentialPrivacyManager .cxx_destruct]
  -[ENDifferentialPrivacyManager metadata]
  -[ENDifferentialPrivacyManager initWithServerConfiguration:serverExposureConfiguration:]
  -[ENDifferentialPrivacyManager updatedServerConfiguration:serverExposureConfiguration:]
  -[ENDifferentialPrivacyManager reportUserRiskScoreWithSummary:]
  -[ENDifferentialPrivacyManager reportUserRiskParameters:]
  -[ENDifferentialPrivacyManager reportUserBeaconCount:]
  -[ENDifferentialPrivacyManager reportUserExposureNotificationWithClassificationIndex:daysDelay:]
  -[ENDifferentialPrivacyManager reportUserExposureNotificationTapped:classificationIndex:]
  -[ENDifferentialPrivacyManager reportUserCodeVerified:reportType:]
  -[ENDifferentialPrivacyManager reportUserKeysUploaded:reportType:]
  -[ENDifferentialPrivacyManager reportUserDiagnosedVaccineStatus:]
  -[ENDifferentialPrivacyManager _submitVectorValue:toRecorder:description:]
  -[ENDifferentialPrivacyManager _submitValue:toRecorder:description:]


ENQueryFilter : NSObject
 @property  unsigned long bufferSize
 @property  unsigned long hashCount

  // instance methods
  -[ENQueryFilter dealloc]
  -[ENQueryFilter bufferSize]
  -[ENQueryFilter init]
  -[ENQueryFilter initWithBufferSize:hashCount:]
  -[ENQueryFilter addPossibleRPI:]
  -[ENQueryFilter shouldIgnoreRPI:]
  -[ENQueryFilter hashCount]


ENDownloadManager : NSObject
 @property  NSBackgroundActivityScheduler *fetchScheduler
 @property  NSURLSession *URLSession
 @property  ENDownloadManagerState *state
 @property  NSURL *directoryURL
 @property  unsigned long enabledEndpointCount
 @property  @? errorMetricReporter

  // instance methods
  -[ENDownloadManager URLSession]
  -[ENDownloadManager directoryURL]
  -[ENDownloadManager setURLSession:]
  -[ENDownloadManager activate]
  -[ENDownloadManager _invalidate]
  -[ENDownloadManager _activate]
  -[ENDownloadManager state]
  -[ENDownloadManager .cxx_destruct]
  -[ENDownloadManager update]
  -[ENDownloadManager initWithQueue:]
  -[ENDownloadManager invalidate]
  -[ENDownloadManager _update]
  -[ENDownloadManager _saveState]
  -[ENDownloadManager _saveStateWithError:]
  -[ENDownloadManager initWithDirectoryURL:queue:]
  -[ENDownloadManager _reportErrorMetric:]
  -[ENDownloadManager _reportErrorMetricForHTTPStatus:forIndexFile:]
  -[ENDownloadManager countOfAvailableDownloadsWithError:]
  -[ENDownloadManager _countOfAvailableDownloadsWithError:]
  -[ENDownloadManager enumerateDownloadsWithError:handler:]
  -[ENDownloadManager _enumerateDownloadsWithError:handler:]
  -[ENDownloadManager setDownloadEndpoints:]
  -[ENDownloadManager _setDownloadEndpoints:]
  -[ENDownloadManager enabledEndpointCount]
  -[ENDownloadManager performDownloadsForced:completion:]
  -[ENDownloadManager performDownloadsAtDate:forced:completion:]
  -[ENDownloadManager _performDownloadsWithScheduler:atDate:forced:completion:]
  -[ENDownloadManager _shouldFetchFromEndpointWithState:time:]
  -[ENDownloadManager _downloadIndexWithTask:]
  -[ENDownloadManager _baseDirectoryPathForEndpointWithState:]
  -[ENDownloadManager _downloadsDirectoryPathForEndpointState:]
  -[ENDownloadManager _indexFilePathForEndpointState:]
  -[ENDownloadManager _copyDownloadedFileAtPath:toPath:removeExisting:error:]
  -[ENDownloadManager _handleIndexFileDownloadFinishedForTask:filePath:]
  -[ENDownloadManager _downloadNextFileFromServerWithTask:]
  -[ENDownloadManager _handleFileDownloadFinishedForTask:serverFilePath:downloadedFilePath:]
  -[ENDownloadManager _nextFilePathToDownloadWithEndpointState:]
  -[ENDownloadManager purgeAllDownloads]
  -[ENDownloadManager _purgeAllDownloads]
  -[ENDownloadManager purgeExpiredDownloadsWithDate:]
  -[ENDownloadManager _purgeExpiredDownloadsWithDate:]
  -[ENDownloadManager _purgeKeepingDownloadsForIdentifiers:expiryDate:]
  -[ENDownloadManager resetStateFile]
  -[ENDownloadManager _updateFetchSchedule]
  -[ENDownloadManager _backgroundActivityFiredWithCompletion:]
  -[ENDownloadManager _aggregateDownloadIntervalFromEndpoints:]
  -[ENDownloadManager _readStateIfNecessaryWithError:]
  -[ENDownloadManager createScheduler]
  -[ENDownloadManager errorMetricReporter]
  -[ENDownloadManager setErrorMetricReporter:]
  -[ENDownloadManager fetchScheduler]


ENDownloadEndpoint : NSObject
 @property  double downloadInterval
 @property  BOOL enabled
 @property  ENRegion *region
 @property  NSURL *serverBaseURL
 @property  NSURL *serverIndexURL

  // instance methods
  -[ENDownloadEndpoint .cxx_destruct]
  -[ENDownloadEndpoint region]
  -[ENDownloadEndpoint enabled]
  -[ENDownloadEndpoint initWithBaseURL:indexURL:interval:enabled:region:]
  -[ENDownloadEndpoint serverURLForFileWithRelativePath:]
  -[ENDownloadEndpoint downloadInterval]
  -[ENDownloadEndpoint serverBaseURL]
  -[ENDownloadEndpoint serverIndexURL]


ENDownloadManagerState : NSObject <NSSecureCoding>
 @property  NSArray *endpoints
 @property  NSArray *endpointStates

  // class methods
  +[ENDownloadManagerState supportsSecureCoding]

  // instance methods
  -[ENDownloadManagerState setEndpoints:]
  -[ENDownloadManagerState endpoints]
  -[ENDownloadManagerState encodeWithCoder:]
  -[ENDownloadManagerState .cxx_destruct]
  -[ENDownloadManagerState init]
  -[ENDownloadManagerState initWithCoder:]
  -[ENDownloadManagerState endpointStates]
  -[ENDownloadManagerState stateForServerBaseURL:]


ENDownloadEndpointState : NSObject <NSSecureCoding>
 @property  ENDownloadEndpoint *endpoint
 @property  NSUUID *identifier
 @property  NSDate *lastFetchAttemptDate
 @property  NSDate *lastSuccessfulFetchDate
 @property  NSString *lastDownloadedFilePath
 @property  NSString *shortIdentifier

  // class methods
  +[ENDownloadEndpointState supportsSecureCoding]

  // instance methods
  -[ENDownloadEndpointState initWithEndpoint:]
  -[ENDownloadEndpointState identifier]
  -[ENDownloadEndpointState setEndpoint:]
  -[ENDownloadEndpointState encodeWithCoder:]
  -[ENDownloadEndpointState endpoint]
  -[ENDownloadEndpointState .cxx_destruct]
  -[ENDownloadEndpointState lastFetchAttemptDate]
  -[ENDownloadEndpointState initWithCoder:]
  -[ENDownloadEndpointState shortIdentifier]
  -[ENDownloadEndpointState setLastFetchAttemptDate:]
  -[ENDownloadEndpointState lastSuccessfulFetchDate]
  -[ENDownloadEndpointState setLastSuccessfulFetchDate:]
  -[ENDownloadEndpointState lastDownloadedFilePath]
  -[ENDownloadEndpointState setLastDownloadedFilePath:]


ENDownloadTask : NSObject
 @property  ENDownloadEndpointState *endpointState
 @property  NSDate *date
 @property  BOOL shouldDefer
 @property  BOOL didDefer
 @property  unsigned long downloadCount
 @property  NSString *shortIdentifier

  // class methods
  +[ENDownloadTask taskWithEndpointState:date:group:scheduler:]

  // instance methods
  -[ENDownloadTask endpointState]
  -[ENDownloadTask shouldDefer]
  -[ENDownloadTask date]
  -[ENDownloadTask .cxx_destruct]
  -[ENDownloadTask shortIdentifier]
  -[ENDownloadTask didDefer]
  -[ENDownloadTask incrementDownloadCount]
  -[ENDownloadTask finishDeferred:error:]
  -[ENDownloadTask downloadCount]


ENTestResultCertificateRequest : ENTestResultNetworkRequest
 @property  NSString *token
 @property  NSData *symmetricKey
 @property  NSData *HMAC
 @property  NSString *certificate

  // class methods
  +[ENTestResultCertificateRequest certificateRequestWithToken:temporaryExposureKeys:APIKey:requestURL:URLSession:queue:error:]
  +[ENTestResultCertificateRequest deriveHMACForTemporaryExposureKeys:symmetricKey:]

  // instance methods
  -[ENTestResultCertificateRequest token]
  -[ENTestResultCertificateRequest certificate]
  -[ENTestResultCertificateRequest .cxx_destruct]
  -[ENTestResultCertificateRequest symmetricKey]
  -[ENTestResultCertificateRequest bodyJSON]
  -[ENTestResultCertificateRequest handleResponse:body:]
  -[ENTestResultCertificateRequest HMAC]


ENXPCTimer : NSObject
 @property  NSString *name
 @property  NSDate *date
 @property  double gracePeriod
 @property  long long priority
 @property  unsigned long options
 @property  unsigned long cadence
 @property  @? block
 @property  NSObject<OS_xpc_object> *activity

  // instance methods
  -[ENXPCTimer setPriority:]
  -[ENXPCTimer setGracePeriod:]
  -[ENXPCTimer gracePeriod]
  -[ENXPCTimer initWithName:delay:gracePeriod:priority:options:block:]
  -[ENXPCTimer initWithName:timeInterval:priority:options:block:]
  -[ENXPCTimer activityHandler]
  -[ENXPCTimer setDate:]
  -[ENXPCTimer date]
  -[ENXPCTimer .cxx_destruct]
  -[ENXPCTimer setBlock:]
  -[ENXPCTimer cadence]
  -[ENXPCTimer options]
  -[ENXPCTimer initWithName:delay:gracePeriod:cadence:priority:options:block:]
  -[ENXPCTimer initWithName:date:gracePeriod:priority:options:block:]
  -[ENXPCTimer criteria]
  -[ENXPCTimer setCadence:]
  -[ENXPCTimer activity]
  -[ENXPCTimer setName:]
  -[ENXPCTimer block]
  -[ENXPCTimer handleActivity]
  -[ENXPCTimer initWithName:date:gracePeriod:cadence:priority:options:block:]
  -[ENXPCTimer setOptions:]
  -[ENXPCTimer invalidate]
  -[ENXPCTimer name]
  -[ENXPCTimer priority]
  -[ENXPCTimer setActivity:]
  -[ENXPCTimer initWithName:date:priority:options:block:]


ENTestResultManager : NSObject
 @property  ENConfigurationStore *configurationStore
 @property  ENExposureDatabase *exposureDatabase
 @property  ENTemporaryExposureKeyManager *temporaryExposureKeyManager
 @property  <ENTestResultManagerDelegate> *delegate

  // class methods
  +[ENTestResultManager checkValidNonce:size:]
  +[ENTestResultManager generateSecureNonce:]

  // instance methods
  -[ENTestResultManager _invalidate]
  -[ENTestResultManager setDelegate:]
  -[ENTestResultManager delegate]
  -[ENTestResultManager startSelfReportWebSession:completionHandler:]
  -[ENTestResultManager temporaryExposureKeyManager]
  -[ENTestResultManager .cxx_destruct]
  -[ENTestResultManager invalidate]
  -[ENTestResultManager configurationStore]
  -[ENTestResultManager exposureDatabase]
  -[ENTestResultManager setMaxRetryTime:]
  -[ENTestResultManager initWithConfigurationStore:exposureDatabase:temporaryExposureKeyManager:queue:]
  -[ENTestResultManager _createURLSessionWithSecondaryIdentifier:]
  -[ENTestResultManager activateAutomatedChaffingWithRegion:]
  -[ENTestResultManager _activateAutomatedChaffingWithRegion:]
  -[ENTestResultManager activateWebSession:verificationTimestamp:nonceTimestamp:]
  -[ENTestResultManager deactivateAutomatedChaffing]
  -[ENTestResultManager _deactivateAutomatedChaffing]
  -[ENTestResultManager deactivateWebSession]
  -[ENTestResultManager _updateChaffingTimerBlock]
  -[ENTestResultManager startChaffTestVerficationSessionForRegion:completionHandler:]
  -[ENTestResultManager _startChaffTestVerficationSessionForRegion:completionHandler:]
  -[ENTestResultManager startTestVerficationSessionWithCode:proxyEnabled:region:completionHandler:]
  -[ENTestResultManager _startTestVerficationSessionWithCode:proxyEnabled:region:completionHandler:]
  -[ENTestResultManager _startSelfReportWebSession:completionHandler:]
  -[ENTestResultManager metadataForSessionWithUUID:error:]
  -[ENTestResultManager _metadataForSessionWithUUID:error:]
  -[ENTestResultManager finishSessionWithUUID:userDidConsent:metadata:completionHandler:]
  -[ENTestResultManager _finishSessionWithUUID:userDidConsent:metadata:completionHandler:]
  -[ENTestResultManager _invalidateSession:]
  -[ENTestResultManager _configurationForRegion:error:]
  -[ENTestResultManager _serverConfigurationForRegion:error:]
  -[ENTestResultManager _createSessionWithVerificationCode:proxyEnabled:region:maxRetryTime:error:]
  -[ENTestResultManager _getTemporaryExposureKeysForUpload:requireConsentForRegion:error:]
  -[ENTestResultManager _sessionWithUUID:error:]
  -[ENTestResultManager _existingSessionForVerificationCode:region:]
  -[ENTestResultManager _getRevisionToken:forSession:error:]
  -[ENTestResultManager _setRevisionToken:forSession:error:]
  -[ENTestResultManager _revisionTokenKeyForSession:]


ENConfigurationStore : NSObject
 @property  NSString *directoryPath
 @property  NSObject<OS_dispatch_queue> *storeQueue
 @property  BOOL developerServerConfiguration
 @property  NSString *regionIdentifierOverride

  // class methods
  +[ENConfigurationStore legacyAppCacheURL]

  // instance methods
  -[ENConfigurationStore initWithDirectoryPath:]
  -[ENConfigurationStore storeQueue]
  -[ENConfigurationStore removeConfigurationsForRegion:includingSubdivisions:error:]
  -[ENConfigurationStore directoryPath]
  -[ENConfigurationStore agencyConfigurationForRegion:]
  -[ENConfigurationStore cachedAppConfiguationForBundleID:forRegionID:]
  -[ENConfigurationStore regionCacheURL]
  -[ENConfigurationStore fileURLforRegionServerConfiguration:]
  -[ENConfigurationStore _saveServerConfigurationResponse:error:]
  -[ENConfigurationStore allRegionServerConfigurationsWithCompletion:]
  -[ENConfigurationStore localeIdentifiersForRegion:]
  -[ENConfigurationStore _serverConfigurationForRegion:]
  -[ENConfigurationStore subdivisionListCacheURL]
  -[ENConfigurationStore enumerateCachedRegionServerConfigurationsWithHandler:]
  -[ENConfigurationStore _configurationForRegion:]
  -[ENConfigurationStore resetStore]
  -[ENConfigurationStore serverConfigurationResponseForRegion:]
  -[ENConfigurationStore clearTemporaryCountrySubdivisionList]
  -[ENConfigurationStore _existingConfigurationForRegion:]
  -[ENConfigurationStore developerSubdivisionListCacheURL]
  -[ENConfigurationStore serverExposureConfigurationForRegion:]
  -[ENConfigurationStore _existingConfigurationForRegionPath:]
  -[ENConfigurationStore _localeForRegion:]
  -[ENConfigurationStore fileURLforCountrySubdivisionList:]
  -[ENConfigurationStore allCachedCountries]
  -[ENConfigurationStore allCachedServerResponseConfigurationsWithCountryCode:completion:]
  -[ENConfigurationStore developerServerConfiguration]
  -[ENConfigurationStore serverConfigurationCacheURL]
  -[ENConfigurationStore regionIdentifierOverride]
  -[ENConfigurationStore _serverConfigurationResponseForRegion:]
  -[ENConfigurationStore regionFromServerResponse:]
  -[ENConfigurationStore .cxx_destruct]
  -[ENConfigurationStore prefsChanged]
  -[ENConfigurationStore allCachedServerResponseConfigurationsWithCompletion:]
  -[ENConfigurationStore _saveRegionConfiguration:error:]
  -[ENConfigurationStore allRegionServerConfigurations]
  -[ENConfigurationStore _subdivisionListForRegion:]
  -[ENConfigurationStore serverConfigurationForRegion:]
  -[ENConfigurationStore saveServerConfigurationResponse:error:]
  -[ENConfigurationStore saveTemporaryCountrySubdivisionList:region:error:]
  -[ENConfigurationStore _enumerateCachedServerResponseConfigurationsWithDirectoryURL:prefix:handler:]
  -[ENConfigurationStore subdivisionListForRegion:]
  -[ENConfigurationStore setRegionIdentifierOverride:]
  -[ENConfigurationStore developerConfigurationsURL]
  -[ENConfigurationStore downloadConfigurationForRegion:]
  -[ENConfigurationStore allAgencyServerRegionConfigurationsWithCompletion:]
  -[ENConfigurationStore fileURLforRegionConfiguration:]
  -[ENConfigurationStore regionSupportsSubdivisions:]
  -[ENConfigurationStore configurationCacheURL]
  -[ENConfigurationStore _serverConfigurationResponseForFileURL:]
  -[ENConfigurationStore removeSubdivisionListForRegion:error:]
  -[ENConfigurationStore _allCachedServerResponseConfigurationsWithPrefix:]
  -[ENConfigurationStore _localeIdentifiersForRegion:]
  -[ENConfigurationStore legacyAppConfiguationForMobileCountryCode:]
  -[ENConfigurationStore saveCountrySubdivisionList:region:error:]
  -[ENConfigurationStore _directoryURLForCachedConfigurations]
  -[ENConfigurationStore configurationForRegion:]
  -[ENConfigurationStore _removeSubdivisionListForRegion:error:]
  -[ENConfigurationStore allRegionServerConfigurationsForCountryCode:]
  -[ENConfigurationStore clearTemporaryServerConfigurations]
  -[ENConfigurationStore removeConfigurationsForRegionCode:error:]
  -[ENConfigurationStore _saveCountrySubdivisionList:country:error:]
  -[ENConfigurationStore allRegionConfigurations]
  -[ENConfigurationStore _agencyConfigurationForRegion:]
  -[ENConfigurationStore serverSubdivisionListCacheURL]
  -[ENConfigurationStore saveTemporaryServerConfigurations:error:]
  -[ENConfigurationStore setDeveloperServerConfiguration:]
  -[ENConfigurationStore init]
  -[ENConfigurationStore enumerateCachedRegionServerConfigurationsWithCountryCode:handler:]
  -[ENConfigurationStore localeForRegion:]
  -[ENConfigurationStore systemConfigurationCacheURL]
  -[ENConfigurationStore setStoreQueue:]
  -[ENConfigurationStore saveRegionConfiguration:error:]
  -[ENConfigurationStore allRegionConfigurationsWithCompletion:]


ENRegionMonitorTelephonyDataSource : NSObject <ENCoreTelephonyUtilityObserver, ENRegionMonitorDataSource>
 @property  ENRegionVisit *cachedRegionVisit
 @property  NSObject<OS_dispatch_queue> *dataSourceQueue
 @property  ENCoreTelephonyUtility *telephonyUtility
 @property  NSObject<ENRegionMonitorSourceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ENRegionMonitorTelephonyDataSource telephonyUtility:mobileCountryCodeChanged:andCountryCodeISO:]
  -[ENRegionMonitorTelephonyDataSource setDelegate:]
  -[ENRegionMonitorTelephonyDataSource setTelephonyUtility:]
  -[ENRegionMonitorTelephonyDataSource delegate]
  -[ENRegionMonitorTelephonyDataSource .cxx_destruct]
  -[ENRegionMonitorTelephonyDataSource dataSourceQueue]
  -[ENRegionMonitorTelephonyDataSource cachedRegionVisit]
  -[ENRegionMonitorTelephonyDataSource initWithDelegate:]
  -[ENRegionMonitorTelephonyDataSource telephonyUtility]
  -[ENRegionMonitorTelephonyDataSource currentRegionVisit]
  -[ENRegionMonitorTelephonyDataSource setDataSourceQueue:]
  -[ENRegionMonitorTelephonyDataSource mobileCountryCodeChanged:withISOString:]
  -[ENRegionMonitorTelephonyDataSource stopMonitoring]
  -[ENRegionMonitorTelephonyDataSource startMonitoring]
  -[ENRegionMonitorTelephonyDataSource setCachedRegionVisit:]


ENConfigurationManager : NSObject
 @property  BOOL mobileCountryCodeOverriden
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  ENXPCTimer *serverConfigurationFetchTimer
 @property  ENXPCTimer *gracePeriodConfigurationFetchTimer
 @property  ENConfigurationStore *configurationStore
 @property  ENCloudServerChannel *cloudServerChannel
 @property  NSMutableDictionary *regionRampModeOverride
 @property  BOOL prefTestHeaderEnabled
 @property  BOOL prefRampTrialPeriodProfile
 @property  NSObject<ENConfigurationManagerDelegate> *delegate
 @property  ENActiveEntity *activeEntity
 @property  ENRegionMonitor *regionMonitor

  // class methods
  +[ENConfigurationManager iCloudServerEndpoint]
  +[ENConfigurationManager verifyAppleServerResponse:signatureHeader:]
  +[ENConfigurationManager staticRegionForBundleID:]
  +[ENConfigurationManager _printServerConfiguration:]
  +[ENConfigurationManager rampModeFromServerResponse:]
  +[ENConfigurationManager serverResponse:isOnRampMode:]
  +[ENConfigurationManager isRampModeEnabledFromServerResponse:]
  +[ENConfigurationManager randomSelectPercentagePerDayFromServerResponse:]

  // instance methods
  -[ENConfigurationManager activate]
  -[ENConfigurationManager prefRampTrialPeriodProfile]
  -[ENConfigurationManager setSerialQueue:]
  -[ENConfigurationManager cloudServerChannel]
  -[ENConfigurationManager serverConfigurationFetchTimer]
  -[ENConfigurationManager regionMonitor:regionDidChange:]
  -[ENConfigurationManager regionMonitor]
  -[ENConfigurationManager serialQueue]
  -[ENConfigurationManager regionSupportsFeatures:featureFlags:]
  -[ENConfigurationManager _reportErrorMetricForHTTPStatus:]
  -[ENConfigurationManager setDelegate:]
  -[ENConfigurationManager isInGracePeriodTransition]
  -[ENConfigurationManager setActiveEntity:]
  -[ENConfigurationManager setPrefRampTrialPeriodProfile:]
  -[ENConfigurationManager _activate]
  -[ENConfigurationManager delegate]
  -[ENConfigurationManager mobileCountryCodeOverriden]
  -[ENConfigurationManager setDelegateQueue:]
  -[ENConfigurationManager setupGracePeriodFetchTimerWithDelay:]
  -[ENConfigurationManager regionRampModeOverride]
  -[ENConfigurationManager setServerConfigurationFetchTimer:]
  -[ENConfigurationManager dealloc]
  -[ENConfigurationManager _scheduleRegionConfigurationRefresh]
  -[ENConfigurationManager updateRegionMonitorModeForCurrentRegion]
  -[ENConfigurationManager setConfigurationStore:]
  -[ENConfigurationManager resetConfigurationCache]
  -[ENConfigurationManager .cxx_destruct]
  -[ENConfigurationManager prefsChanged]
  -[ENConfigurationManager delegateQueue]
  -[ENConfigurationManager setRegionMonitor:]
  -[ENConfigurationManager overrideRampModeForRegion:rampMode:]
  -[ENConfigurationManager stopGracePeriodTimer]
  -[ENConfigurationManager _fetchServerConfigurationsForRegion:userInitiated:completion:]
  -[ENConfigurationManager setRegionRampModeOverride:]
  -[ENConfigurationManager _processServerConfiguration:forceUpdate:]
  -[ENConfigurationManager resetConfigurationManager]
  -[ENConfigurationManager updateRampModeForRegion:rampMode:]
  -[ENConfigurationManager setMobileCountryCodeOverriden:]
  -[ENConfigurationManager refreshServerConfigurationsUponProfileChange]
  -[ENConfigurationManager fetchServerConfigurationsForRegion:userInitiated:withCompletion:]
  -[ENConfigurationManager gracePeriodConfigurationFetchTimer]
  -[ENConfigurationManager regionMonitor:authorizationStateDidChange:]
  -[ENConfigurationManager configurationStore]
  -[ENConfigurationManager setGracePeriodConfigurationFetchTimer:]
  -[ENConfigurationManager prefTestHeaderEnabled]
  -[ENConfigurationManager readCachedRampModeForRegion:]
  -[ENConfigurationManager _saveAndRemoveStaleConfigurations:region:error:]
  -[ENConfigurationManager setCloudServerChannel:]
  -[ENConfigurationManager serverFetchRegionConfiguration:userInitiated:completion:]
  -[ENConfigurationManager _serverFetchRegionConfiguration:userInitiated:completion:]
  -[ENConfigurationManager setPrefTestHeaderEnabled:]
  -[ENConfigurationManager initWithDelegate:activeEntity:]
  -[ENConfigurationManager activeEntity]


ENTestResultChaffRequest : ENTestResultNetworkRequest
 @property  NSString *chaffValue

  // instance methods
  -[ENTestResultChaffRequest .cxx_destruct]
  -[ENTestResultChaffRequest additionalRequestHeaders]
  -[ENTestResultChaffRequest chaffValue]
  -[ENTestResultChaffRequest setChaffValue:]


ENSecureArchiveFileWrapper : NSObject
 @property  NSString *path

  // instance methods
  -[ENSecureArchiveFileWrapper openWithError:]
  -[ENSecureArchiveFileWrapper initWithPath:]
  -[ENSecureArchiveFileWrapper path]
  -[ENSecureArchiveFileWrapper _writeObject:toFileDescriptor:error:]
  -[ENSecureArchiveFileWrapper close]
  -[ENSecureArchiveFileWrapper .cxx_destruct]
  -[ENSecureArchiveFileWrapper saveObject:error:]
  -[ENSecureArchiveFileWrapper readObject:ofClasses:error:]
  -[ENSecureArchiveFileWrapper readObject:ofClass:error:]


ENOnboardingManager : NSObject
 @property  CXCallObserver *callObserver
 @property  BOOL isCaptureSessionRunning
 @property  NSObject<ENOnboardingManagerDelegate> *delegate
 @property  BOOL idealTimeForBuddy
 @property  BOOL deviceUnlocked
 @property  BOOL pendingBuddyOnboarding

  // instance methods
  -[ENOnboardingManager setCallObserver:]
  -[ENOnboardingManager callObserver]
  -[ENOnboardingManager setDelegate:]
  -[ENOnboardingManager _cameraIrisStateChangedWithToken:]
  -[ENOnboardingManager setIsCaptureSessionRunning:]
  -[ENOnboardingManager delegate]
  -[ENOnboardingManager dealloc]
  -[ENOnboardingManager .cxx_destruct]
  -[ENOnboardingManager _deviceLockStateChangedWithToken:]
  -[ENOnboardingManager _isInLostMode]
  -[ENOnboardingManager isIdealTimeForBuddy]
  -[ENOnboardingManager setShouldObserveDeviceUnlocks:]
  -[ENOnboardingManager pendingBuddyOnboarding]
  -[ENOnboardingManager isCaptureSessionRunning]
  -[ENOnboardingManager isDeviceUnlocked]
  -[ENOnboardingManager _observeCameraIrisNotifications]
  -[ENOnboardingManager setPendingBuddyOnboarding:]
  -[ENOnboardingManager init]


ENSQLiteConnection : NSObject
 @property  NSURL *fileURL
 @property  BOOL isOpen
 @property  long long lastInsertedRowID
 @property  int additionalOpenFlags

  // instance methods
  -[ENSQLiteConnection openWithError:]
  -[ENSQLiteConnection lastInsertedRowID]
  -[ENSQLiteConnection executeSQL:error:bindingHandler:enumerationHandler:]
  -[ENSQLiteConnection fileURL]
  -[ENSQLiteConnection dealloc]
  -[ENSQLiteConnection close]
  -[ENSQLiteConnection .cxx_destruct]
  -[ENSQLiteConnection performTransactionWithType:error:usingBlock:]
  -[ENSQLiteConnection executeSQL:error:]
  -[ENSQLiteConnection isOpen]
  -[ENSQLiteConnection initWithDatabaseURL:]
  -[ENSQLiteConnection init]
  -[ENSQLiteConnection executeUncachedSQL:error:]
  -[ENSQLiteConnection _initWithDatabaseURL:]
  -[ENSQLiteConnection executeUncachedSQLStatements:error:]
  -[ENSQLiteConnection _executeSQL:cacheStatement:error:bindingHandler:enumerationHandler:]
  -[ENSQLiteConnection _prepareStatementForSQL:cache:error:statementHandler:]
  -[ENSQLiteConnection _stepStatement:hasRow:error:]
  -[ENSQLiteConnection setIntegerValue:forPragma:error:]
  -[ENSQLiteConnection getIntegerValue:forPragma:error:]
  -[ENSQLiteConnection setUserVersion:error:]
  -[ENSQLiteConnection getUserVersion:error:]
  -[ENSQLiteConnection truncateWithError:]
  -[ENSQLiteConnection _lastErrorWithResultCode:]
  -[ENSQLiteConnection additionalOpenFlags]
  -[ENSQLiteConnection setAdditionalOpenFlags:]


ENExposureCalculationSession : NSObject
 @property  unsigned int droppedScanInstanceCount
 @property  BOOL allowRecursiveReportType
 @property  ENExposureConfiguration *exposureConfiguration
 @property  NSNumber *allowedRPIBroadcastDuration
 @property  NSNumber *advertisementSampleCountThreshold
 @property  BOOL cacheExposureInfo
 @property  unsigned long cachedExposureInfoCount
 @property  BOOL cacheExposureWindows
 @property  unsigned long cachedExposureWindowCount

  // instance methods
  -[ENExposureCalculationSession dealloc]
  -[ENExposureCalculationSession .cxx_destruct]
  -[ENExposureCalculationSession initWithAttenuationThreshold:capacity:]
  -[ENExposureCalculationSession setExposureConfiguration:]
  -[ENExposureCalculationSession weightedAttenuationValueForDurations:]
  -[ENExposureCalculationSession exposureInfoForExposureWindows:key:]
  -[ENExposureCalculationSession exposureInfosForEachExposureWindow:key:]
  -[ENExposureCalculationSession exposureInfoForMatchedAdvertisements:key:]
  -[ENExposureCalculationSession cachedExposureInfoCount]
  -[ENExposureCalculationSession enumerateCachedExposureInfo:]
  -[ENExposureCalculationSession enumerateCachedExposureInfo:withBatchSize:]
  -[ENExposureCalculationSession enumerateCachedExposureInfo:inRange:withBatchSize:]
  -[ENExposureCalculationSession filterAdvertisements:fromKey:]
  -[ENExposureCalculationSession scanInstanceFromAdvertisement:key:]
  -[ENExposureCalculationSession exposureWindowsForMatchedAdvertisements:key:]
  -[ENExposureCalculationSession exposureWindowsForMatchedAdvertisements:key:options:]
  -[ENExposureCalculationSession _shouldMatchKey:]
  -[ENExposureCalculationSession enumerateCachedExposureWindows:inRange:withBatchSize:]
  -[ENExposureCalculationSession enumerateCachedExposureWindows:inRange:withBatchSize:options:]
  -[ENExposureCalculationSession groupExposureWindowsByDay:]
  -[ENExposureCalculationSession groupExposureWindowsByInfectiousness:]
  -[ENExposureCalculationSession attenuationDurationMapDataForExposureWindows:]
  -[ENExposureCalculationSession cachedExposuresDifferentialPrivacyRiskParameters]
  -[ENExposureCalculationSession droppedScanInstanceCount]
  -[ENExposureCalculationSession allowRecursiveReportType]
  -[ENExposureCalculationSession setAllowRecursiveReportType:]
  -[ENExposureCalculationSession exposureConfiguration]
  -[ENExposureCalculationSession allowedRPIBroadcastDuration]
  -[ENExposureCalculationSession setAllowedRPIBroadcastDuration:]
  -[ENExposureCalculationSession advertisementSampleCountThreshold]
  -[ENExposureCalculationSession setAdvertisementSampleCountThreshold:]
  -[ENExposureCalculationSession cacheExposureInfo]
  -[ENExposureCalculationSession setCacheExposureInfo:]
  -[ENExposureCalculationSession cacheExposureWindows]
  -[ENExposureCalculationSession setCacheExposureWindows:]
  -[ENExposureCalculationSession cachedExposureWindowCount]


ENTestResultUploadRequest : ENTestResultNetworkRequest
 @property  NSString *responseRevisionToken
 @property  NSNumber *insertedExposures

  // class methods
  +[ENTestResultUploadRequest uploadRequestWithCertificate:healthAuthorityID:revisionToken:symmetricKey:temporaryExposureKeys:userMetadata:requestURL:URLSession:queue:error:]

  // instance methods
  -[ENTestResultUploadRequest .cxx_destruct]
  -[ENTestResultUploadRequest bodyJSON]
  -[ENTestResultUploadRequest handleResponse:body:]
  -[ENTestResultUploadRequest responseRevisionToken]
  -[ENTestResultUploadRequest insertedExposures]


ENAdvertisementSQLiteStore : NSObject
 @property  NSString *databasePath
 @property  NSNumber *storedAdvertisementCount

  // class methods
  +[ENAdvertisementSQLiteStore storePathsInFolderPath:]
  +[ENAdvertisementSQLiteStore isStore:]
  +[ENAdvertisementSQLiteStore statementStringForStatementType:]
  +[ENAdvertisementSQLiteStore storesPresentInFolderPath:]
  +[ENAdvertisementSQLiteStore isCentralStore:]
  +[ENAdvertisementSQLiteStore temporaryStorePathsInFolderPath:]
  +[ENAdvertisementSQLiteStore advertisementForSQLiteStatement:]
  +[ENAdvertisementSQLiteStore isTemporaryStore:]
  +[ENAdvertisementSQLiteStore temporaryStoreInFolderPath:error:]
  +[ENAdvertisementSQLiteStore errorForSQLiteResult:]
  +[ENAdvertisementSQLiteStore enumerateTemporaryStoresInFolderPath:handler:]
  +[ENAdvertisementSQLiteStore centralStoreInFolderPath:error:]
  +[ENAdvertisementSQLiteStore removeAllDatabaseFilesWithDatabasePath:]
  +[ENAdvertisementSQLiteStore removeAllTemporaryStoresFromDiskWithFolderPath:lastModifiedBeforeDate:]
  +[ENAdvertisementSQLiteStore temporaryStoresInFolderPath:]
  +[ENAdvertisementSQLiteStore temporaryStoresPresentInFolderPath:]
  +[ENAdvertisementSQLiteStore removeAllStoresFromDiskWithFolderPath:]

  // instance methods
  -[ENAdvertisementSQLiteStore setDatabasePath:]
  -[ENAdvertisementSQLiteStore databasePath]
  -[ENAdvertisementSQLiteStore closeDatabase]
  -[ENAdvertisementSQLiteStore purgeAndRemoveFromDisk:]
  -[ENAdvertisementSQLiteStore importContentsOfStore:error:]
  -[ENAdvertisementSQLiteStore initWithPath:]
  -[ENAdvertisementSQLiteStore enumeratePreparedStatements:]
  -[ENAdvertisementSQLiteStore dealloc]
  -[ENAdvertisementSQLiteStore openDatabase]
  -[ENAdvertisementSQLiteStore disconnectFromDatabase]
  -[ENAdvertisementSQLiteStore .cxx_destruct]
  -[ENAdvertisementSQLiteStore setVersionCurrent]
  -[ENAdvertisementSQLiteStore migrateDatabase]
  -[ENAdvertisementSQLiteStore initializeAdvertisementTable]
  -[ENAdvertisementSQLiteStore enumerateAdvertisments:]
  -[ENAdvertisementSQLiteStore initWithPath:error:]
  -[ENAdvertisementSQLiteStore endDatabaseTransaction]
  -[ENAdvertisementSQLiteStore storedAdvertisementCount]
  -[ENAdvertisementSQLiteStore bindAdvertisement:toSQLiteStatement:]
  -[ENAdvertisementSQLiteStore getAdvertisementsMatchingRPIBuffer:count:validityBuffer:validRPICount:matchingAdvertisementBuffer:error:]
  -[ENAdvertisementSQLiteStore rollbackDatabaseTransaction]
  -[ENAdvertisementSQLiteStore preparedStatementOfType:]
  -[ENAdvertisementSQLiteStore configureDatabase]
  -[ENAdvertisementSQLiteStore saveContactTracingAdvertisementBuffer:count:error:]
  -[ENAdvertisementSQLiteStore queryFilterWithBufferSize:hashCount:attenuationThreshold:]
  -[ENAdvertisementSQLiteStore transactionNeededForMigrationFromVersion:]
  -[ENAdvertisementSQLiteStore initializePreparedStatements]
  -[ENAdvertisementSQLiteStore refreshStoredAdvertismentCountWithError:]
  -[ENAdvertisementSQLiteStore beaconCountMetricsWithStartDate:endDate:windowDuration:]
  -[ENAdvertisementSQLiteStore beginDatabaseTransaction]
  -[ENAdvertisementSQLiteStore cloneStoreTo:]
  -[ENAdvertisementSQLiteStore migrateFromVersion:]
  -[ENAdvertisementSQLiteStore initializeRPIBufferModule]
  -[ENAdvertisementSQLiteStore purgeAdvertismentsRecordedPriorToDate:error:]
  -[ENAdvertisementSQLiteStore checkpointWAL]
  -[ENAdvertisementSQLiteStore connectToDatabaseAndReturnError:]
  -[ENAdvertisementSQLiteStore bindRPIBuffer:count:validityBuffer:validRPICount:toSQLiteStatement:]


ENExposureDatabase : NSObject
 @property  ENSQLiteConnection *connection
 @property  @? errorMetricReporter
 @property  BOOL isOpen

  // class methods
  +[ENExposureDatabase _obliterateDatabaseAtURL:reason:generateStackshot:]

  // instance methods
  -[ENExposureDatabase openWithError:]
  -[ENExposureDatabase initWithURL:]
  -[ENExposureDatabase _initWithURL:]
  -[ENExposureDatabase close]
  -[ENExposureDatabase .cxx_destruct]
  -[ENExposureDatabase connection]
  -[ENExposureDatabase initWithDirectoryURL:]
  -[ENExposureDatabase isOpen]
  -[ENExposureDatabase _reportErrorMetric:]
  -[ENExposureDatabase errorMetricReporter]
  -[ENExposureDatabase setErrorMetricReporter:]
  -[ENExposureDatabase initInMemoryDatabase]
  -[ENExposureDatabase _reportSQLiteResult:]
  -[ENExposureDatabase _reallyOpenDatabaseWithError:]
  -[ENExposureDatabase _checkDatabaseOpenWithError:]
  -[ENExposureDatabase _createOrMigrateSchemaFromVersion:error:]
  -[ENExposureDatabase _createSchemaWithConnection:error:]
  -[ENExposureDatabase insertMatchedAdvertisements:forKey:error:]
  -[ENExposureDatabase _insertAdvertisement:keyRowID:connection:error:]
  -[ENExposureDatabase _getExistingPersistentTemporaryExposureKey:rowID:keyData:connection:error:]
  -[ENExposureDatabase _updateExistingPersistentKeyIfNecessary:replacementKey:existingKeyID:connection:error:]
  -[ENExposureDatabase _persistentTemporaryExposureKeyWithKeyData:appBundleIdentifier:regionCountryCode:rollingStartNumber:rollingPeriod:daysSinceOnsetOfSymptoms:diagnosisReportType:originalReportType:transmissionRiskLevel:variantOfConcernType:originalVariantOfConcernType:]
  -[ENExposureDatabase _insertPersistentTemporaryExposureKey:connection:error:]
  -[ENExposureDatabase enumerateMatchedAdvertisementsWithError:handler:]
  -[ENExposureDatabase advertisementCountsByTemporaryKeyDatasWithError:]
  -[ENExposureDatabase _advertisementsForTemporaryExposureKeyRowID:connection:error:]
  -[ENExposureDatabase _advertisementWithRPIData:encryptedAEMData:timestamp:scanInterval:typicalRSSI:maxRSSI:saturated:counter:]
  -[ENExposureDatabase getAdvertisementCount:error:]
  -[ENExposureDatabase upsertExposureDetectionHistorySession:error:]
  -[ENExposureDatabase _insertOrUpdateExposureDetectionHistorySession:connection:error:]
  -[ENExposureDatabase _sessionIDForUUID:connection:error:]
  -[ENExposureDatabase enumerateExposureDetectionHistorySessionsWithError:handler:]
  -[ENExposureDatabase insertExposureDetectionFile:session:error:]
  -[ENExposureDatabase _insertExposureDetectionFile:sessionID:connection:error:]
  -[ENExposureDatabase enumerateExposureDetectionHistoryFilesForSessionUUID:error:handler:]
  -[ENExposureDatabase deleteExposureDetectionHistoryWithError:]
  -[ENExposureDatabase getValue:forKey:ofClass:error:]
  -[ENExposureDatabase getValue:forKey:ofClass:connection:error:]
  -[ENExposureDatabase setValue:forKey:expiryDate:error:]
  -[ENExposureDatabase setPropertyListValue:forKey:expiryDate:error:]
  -[ENExposureDatabase setValue:forKey:type:expiryDate:modDate:connection:error:]
  -[ENExposureDatabase purgeRecordsWithInterval:nowDate:error:]
  -[ENExposureDatabase purgeAllAndCloseWithReason:]


ENPersistentTemporaryExposureKey : NSObject
 @property  unsigned int originalReportType
 @property  unsigned int originalVariantOfConcernType
 @property  ENTemporaryExposureKey *key
 @property  NSString *appBundleIdentifier
 @property  NSString *regionCountryCode

  // instance methods
  -[ENPersistentTemporaryExposureKey appBundleIdentifier]
  -[ENPersistentTemporaryExposureKey .cxx_destruct]
  -[ENPersistentTemporaryExposureKey key]
  -[ENPersistentTemporaryExposureKey initWithTemporaryExposureKey:appBundleIdentifier:regionCountryCode:]
  -[ENPersistentTemporaryExposureKey regionCountryCode]
  -[ENPersistentTemporaryExposureKey originalReportType]
  -[ENPersistentTemporaryExposureKey setOriginalReportType:]
  -[ENPersistentTemporaryExposureKey originalVariantOfConcernType]
  -[ENPersistentTemporaryExposureKey setOriginalVariantOfConcernType:]


ENTemporaryExposureKeyManager : NSObject
 @property  NSDate *nextPromptDate
 @property  ENTemporaryExposureKey *oldestTEK
 @property  unsigned int lastTEKRequestENIN
 @property  <ENTemporaryExposureKeyManagerDelegate> *delegate

  // class methods
  +[ENTemporaryExposureKeyManager temporaryExposureKeyFromRawKey:error:]

  // instance methods
  -[ENTemporaryExposureKeyManager getTemporaryExposureKeysFromRollingStart:includingActive:refresh:error:]
  -[ENTemporaryExposureKeyManager oldestTEK]
  -[ENTemporaryExposureKeyManager setDelegate:]
  -[ENTemporaryExposureKeyManager _getTemporaryExposureKeysFromRollingStart:includingActive:refresh:error:]
  -[ENTemporaryExposureKeyManager nextPromptDate]
  -[ENTemporaryExposureKeyManager delegate]
  -[ENTemporaryExposureKeyManager resetClientState]
  -[ENTemporaryExposureKeyManager .cxx_destruct]
  -[ENTemporaryExposureKeyManager setNextPromptDate:]
  -[ENTemporaryExposureKeyManager lastTEKRequestENIN]
  -[ENTemporaryExposureKeyManager requireKeyReleasePromptForClient:]
  -[ENTemporaryExposureKeyManager initWithQueue:]
  -[ENTemporaryExposureKeyManager getTemporaryExposureKeysForClient:fromRollingStart:didPrompt:forTesting:forceRefresh:error:]


ENTestResultSession : NSObject
 @property  ENRegion *region
 @property  NSString *verificationCode
 @property  NSUUID *UUID
 @property  NSString *agencyAPIKey
 @property  NSURL *certificateURL
 @property  NSString *healthAuthorityID
 @property  NSString *nonce
 @property  NSURL *verificationURL
 @property  NSURL *uploadURL
 @property  NSArray *acceptedReportTypes
 @property  unsigned long maxRetryTime

  // class methods
  +[ENTestResultSession sessionWithVerificationCode:configuration:maxRetryTime:nonce:URLSession:queue:error:]

  // instance methods
  -[ENTestResultSession dealloc]
  -[ENTestResultSession .cxx_destruct]
  -[ENTestResultSession UUID]
  -[ENTestResultSession region]
  -[ENTestResultSession invalidate]
  -[ENTestResultSession verificationURL]
  -[ENTestResultSession nonce]
  -[ENTestResultSession certificateURL]
  -[ENTestResultSession uploadURL]
  -[ENTestResultSession verificationCode]
  -[ENTestResultSession agencyAPIKey]
  -[ENTestResultSession setMaxRetryTime:]
  -[ENTestResultSession _initWithAgencyAPIKey:certificateURL:acceptedReportTypes:healthAuthorityID:maxRetryTime:nonce:queue:region:uploadURL:URLSession:verificationCode:verifyURL:]
  -[ENTestResultSession verifyCodeWithCompletionHandler:]
  -[ENTestResultSession getMetadataAndReturnError:]
  -[ENTestResultSession getUploadingTemporaryExposureKeys]
  -[ENTestResultSession uploadTemporaryExposureKeys:revisionToken:userMetadata:completionHandler:]
  -[ENTestResultSession _performVerificationRequestWithError:]
  -[ENTestResultSession _flushVerificationCompletionsWithError:]
  -[ENTestResultSession _performCertificateRequestWithToken:temporaryExposureKeys:completionHandler:]
  -[ENTestResultSession _performUploadRequestWithTemporaryExposureKeys:revisionToken:certificate:HMACKey:userMetadata:completionHandler:]
  -[ENTestResultSession _checkInvalidatedAndReturnError:]
  -[ENTestResultSession healthAuthorityID]
  -[ENTestResultSession acceptedReportTypes]
  -[ENTestResultSession maxRetryTime]


ENTestResultPersistentSession : NSObject
 @property  NSString *certificate
 @property  NSDictionary *fetchedMetadata
 @property  NSData *HMACKey
 @property  NSString *revisionToken
 @property  NSArray *teks
 @property  NSError *verificationError
 @property  NSString *verificationToken

  // instance methods
  -[ENTestResultPersistentSession setCertificate:]
  -[ENTestResultPersistentSession certificate]
  -[ENTestResultPersistentSession .cxx_destruct]
  -[ENTestResultPersistentSession verificationError]
  -[ENTestResultPersistentSession setVerificationError:]
  -[ENTestResultPersistentSession fetchedMetadata]
  -[ENTestResultPersistentSession setFetchedMetadata:]
  -[ENTestResultPersistentSession HMACKey]
  -[ENTestResultPersistentSession setHMACKey:]
  -[ENTestResultPersistentSession revisionToken]
  -[ENTestResultPersistentSession setRevisionToken:]
  -[ENTestResultPersistentSession teks]
  -[ENTestResultPersistentSession setTeks:]
  -[ENTestResultPersistentSession verificationToken]
  -[ENTestResultPersistentSession setVerificationToken:]


ENCoreTelephonyUtility : NSObject <CoreTelephonyClientDelegate, CoreTelephonyClientRegistrationDelegate>
 @property  CoreTelephonyClient *ctClient
 @property  ^{__CTServerConnection=} ctServerConnection
 @property  NSHashTable *observersTable
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ENCoreTelephonyUtility sharedInstance]
  +[ENCoreTelephonyUtility mobileCountryCodeForISO:]
  +[ENCoreTelephonyUtility countryCodeISOForMobileCountryCode:]

  // instance methods
  -[ENCoreTelephonyUtility cellMonitorUpdate:info:]
  -[ENCoreTelephonyUtility ctClient]
  -[ENCoreTelephonyUtility ctServerConnection]
  -[ENCoreTelephonyUtility setSerialQueue:]
  -[ENCoreTelephonyUtility serialQueue]
  -[ENCoreTelephonyUtility currentMobileCountryCode]
  -[ENCoreTelephonyUtility observersTable]
  -[ENCoreTelephonyUtility addObserver:]
  -[ENCoreTelephonyUtility dealloc]
  -[ENCoreTelephonyUtility .cxx_destruct]
  -[ENCoreTelephonyUtility currentPhoneNumbers]
  -[ENCoreTelephonyUtility setObserversTable:]
  -[ENCoreTelephonyUtility countryCodeISOForMobileCountryCode:]
  -[ENCoreTelephonyUtility removeObserver:]
  -[ENCoreTelephonyUtility init]


ENAdvertisementDatabase : NSObject
 @property  unsigned long currentStoreType
 @property  BOOL temporaryStoresPresent
 @property  ENQueryFilter *inlineQueryFilter
 @property  NSNumber *storedAdvertisementCount
 @property  unsigned long droppedAdvertisementCount
 @property  double storageFullAlertInterval

  // class methods
  +[ENAdvertisementDatabase purgeAllStoresInPath:]

  // instance methods
  -[ENAdvertisementDatabase mergeStoresFromFolderPath:]
  -[ENAdvertisementDatabase droppedAdvertisementCount]
  -[ENAdvertisementDatabase setInlineQueryFilter:]
  -[ENAdvertisementDatabase inlineQueryFilter]
  -[ENAdvertisementDatabase initWithDatabaseFolderPath:cacheCount:]
  -[ENAdvertisementDatabase setStorageFullAlertInterval:]
  -[ENAdvertisementDatabase purgeAdvertismentsOlderThan:]
  -[ENAdvertisementDatabase openTemporaryStore]
  -[ENAdvertisementDatabase mergeTemporaryStores]
  -[ENAdvertisementDatabase dealloc]
  -[ENAdvertisementDatabase displayStorageFullAlert]
  -[ENAdvertisementDatabase .cxx_destruct]
  -[ENAdvertisementDatabase advertisementsBufferMatchingDailyKeys:attenuationThreshold:timestampTolerance:]
  -[ENAdvertisementDatabase openCentralStoreAndReturnError:]
  -[ENAdvertisementDatabase purgeAllStoresInActiveDatabasePath]
  -[ENAdvertisementDatabase storedAdvertisementCount]
  -[ENAdvertisementDatabase reportErrorMetric:]
  -[ENAdvertisementDatabase reportStoreError:]
  -[ENAdvertisementDatabase temporaryStoresPresent]
  -[ENAdvertisementDatabase matchingAdvertisementBufferForRPIBuffer:exposureKeys:]
  -[ENAdvertisementDatabase openStoreAndReturnError:]
  -[ENAdvertisementDatabase queryFilterWithBufferSize:hashCount:attenuationThreshold:]
  -[ENAdvertisementDatabase switchToCentralStore]
  -[ENAdvertisementDatabase beaconCountMetricsWithStartDate:endDate:windowDuration:]
  -[ENAdvertisementDatabase saveContactTracingAdvertisement:]
  -[ENAdvertisementDatabase createQuerySessionWithAttenuationThreshold:queue:error:]
  -[ENAdvertisementDatabase storageFullAlertInterval]
  -[ENAdvertisementDatabase currentStoreType]
  -[ENAdvertisementDatabase flushCache]
  -[ENAdvertisementDatabase cloneDatabaseTo:]
  -[ENAdvertisementDatabase cacheRecordCount]
  -[ENAdvertisementDatabase currentStore]
  -[ENAdvertisementDatabase initWithDatabaseFolderPath:cacheCount:errorMetricReporter:]
  -[ENAdvertisementDatabase init]
  -[ENAdvertisementDatabase closeAllStores]
  -[ENAdvertisementDatabase purgeAdvertismentsSeenBeforeDate:]
  -[ENAdvertisementDatabase mergeStores:]


ENExposureDetectionManager : NSObject
 @property  <ENExposureDetectionManagerDelegate> *delegate
 @property  NSBackgroundActivityScheduler *detectionScheduler
 @property  BOOL enableNativeExposureDetection
 @property  BOOL scheduleDetectionAutomatically

  // instance methods
  -[ENExposureDetectionManager activate]
  -[ENExposureDetectionManager _invalidate]
  -[ENExposureDetectionManager setDelegate:]
  -[ENExposureDetectionManager _activate]
  -[ENExposureDetectionManager delegate]
  -[ENExposureDetectionManager .cxx_destruct]
  -[ENExposureDetectionManager invalidate]
  -[ENExposureDetectionManager createScheduler]
  -[ENExposureDetectionManager _downloadsDidBecomeAvailable:]
  -[ENExposureDetectionManager initWithConfigurationStore:downloadManager:exposureDatabase:queue:]
  -[ENExposureDetectionManager _getDelegateWithError:]
  -[ENExposureDetectionManager _createDetectionSessionWithError:]
  -[ENExposureDetectionManager _applyRegionalConfigurationToDetectionSession:delegate:error:]
  -[ENExposureDetectionManager createDetectionSessionForClient:configuration:error:]
  -[ENExposureDetectionManager createFileSession]
  -[ENExposureDetectionManager createNativeDetectionSessionWithError:]
  -[ENExposureDetectionManager performNativeExposureDetectionWithResultHandler:]
  -[ENExposureDetectionManager _performNativeExposureDetectionWithScheduler:resultHandler:]
  -[ENExposureDetectionManager _exposureDetectionSession:finishedWithResult:]
  -[ENExposureDetectionManager _publicKeyForRegion:dictionary:]
  -[ENExposureDetectionManager _processFileAtURL:publicKey:endpoint:session:error:]
  -[ENExposureDetectionManager scheduleNativeExposureDetectionForced:]
  -[ENExposureDetectionManager _scheduleNativeExposureDetectionForced:]
  -[ENExposureDetectionManager _scheduleNativeExposureDetection]
  -[ENExposureDetectionManager _unscheduleNativeExposureDetection]
  -[ENExposureDetectionManager createXPCServiceClient]
  -[ENExposureDetectionManager detectionScheduler]
  -[ENExposureDetectionManager enableNativeExposureDetection]
  -[ENExposureDetectionManager setEnableNativeExposureDetection:]
  -[ENExposureDetectionManager scheduleDetectionAutomatically]
  -[ENExposureDetectionManager setScheduleDetectionAutomatically:]


ENRegionHistoryManager : NSObject
 @property  NSString *directoryPath
 @property  ENSecureArchiveFileWrapper *regionHistoryFileWrapper
 @property  ENRegionHistory *regionHistory
 @property  int resetToken
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <ENRegionHistoryManagerDelegate> *delegate
 @property  long long fileStatus

  // class methods
  +[ENRegionHistoryManager regionHistoryFileStatusToString:]

  // instance methods
  -[ENRegionHistoryManager setDirectoryPath:]
  -[ENRegionHistoryManager initWithDelegate:queue:]
  -[ENRegionHistoryManager setFileStatus:]
  -[ENRegionHistoryManager directoryPath]
  -[ENRegionHistoryManager getAllRegions]
  -[ENRegionHistoryManager setDelegate:]
  -[ENRegionHistoryManager delegate]
  -[ENRegionHistoryManager resetToken]
  -[ENRegionHistoryManager dealloc]
  -[ENRegionHistoryManager addRegionVisit:]
  -[ENRegionHistoryManager .cxx_destruct]
  -[ENRegionHistoryManager getAllRegionVisits]
  -[ENRegionHistoryManager setResetToken:]
  -[ENRegionHistoryManager purgeRegionsOlderThanDate:error:]
  -[ENRegionHistoryManager setRegionHistory:]
  -[ENRegionHistoryManager setupPersistedRegionHistory]
  -[ENRegionHistoryManager regionHistory]
  -[ENRegionHistoryManager setQueue:]
  -[ENRegionHistoryManager purgeAllRegionHistoryWithError:]
  -[ENRegionHistoryManager queue]
  -[ENRegionHistoryManager fileStatus]
  -[ENRegionHistoryManager initWithDelegate:queue:directoryPath:]
  -[ENRegionHistoryManager mergeRegionHistoryOnDisk:inMemory:]
  -[ENRegionHistoryManager regionHistoryFileWrapper]
  -[ENRegionHistoryManager resetRegionHistory]
  -[ENRegionHistoryManager updateFileStatus]
  -[ENRegionHistoryManager setRegionHistoryFileWrapper:]


(CommonCrypto)
	// instance methods
	-[(CommonCrypto) sha256]

(Base64)
	// instance methods
	-[(Base64) en_base64PaddedString]

01 00 0100 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 0100 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 0400 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0400 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0800 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUSystemMonitor 
01 00 1600 /System/Library/Frameworks/CallKit.framework/CallKit: CXCallObserver 
01 00 0740 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENArchive 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENEntity 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENExposureClassification 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENExposureConfiguration 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENExposureDaySummary 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENExposureDetectionClientSession 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENExposureDetectionHistoryFile 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENExposureDetectionHistorySession 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENExposureDetectionSession 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENExposureDetectionSummary 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENExposureInfo 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENExposureNotification 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENExposureWindow 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENFile 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENFileSession 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENManager 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENRegion 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENRegionConfiguration 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENRegionServerAgencyConfiguration 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENRegionServerConfiguration 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENRegionServerExposureConfiguration 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENRegionServerNKDConfiguration 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENRegionUserConsent 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENRegionVisit 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENRemotePresentationRequest 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENScanInstance 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENSignatureFile 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENTemporaryExposureKey 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENTextMessage 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENUserAlert 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENUserAuthorization 
01 00 0900 /System/Library/Frameworks/ExposureNotification.framework/ExposureNotification: ENXPCServiceClient 
01 00 0b00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 0b00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 1800 /System/Library/PrivateFrameworks/FindMyDevice.framework/FindMyDevice: FMDFMIPManager 
01 00 0600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBackgroundActivityScheduler 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0200 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPCookieStorage 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0200 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0200 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 0200 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0e00 /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy: PrivacyProxyClient 
01 00 0500 /System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine: RTRoutineManager 
01 00 1540 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertConfigurationContext 
01 00 1540 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertDefinition 
01 00 1540 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertHandle 
01 00 1440 /System/Library/PrivateFrameworks/Sharing.framework/Sharing: SFClient 
01 00 1200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 1200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationIcon 
01 00 1200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 1200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationSound 
01 00 1200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 1700 /System/Library/PrivateFrameworks/DifferentialPrivacy.framework/DifferentialPrivacy: _DPBitValueRecorder 
01 00 0600 /System/Library/Frameworks/CoreServices.framework/CoreServices: _LSOpenConfiguration 
