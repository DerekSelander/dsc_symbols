|| __DATA.__objc_data _OBJC_CLASS_$_VSAppDescriptionFetchOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSAppSettingsFacade
|| __DATA.__objc_data _OBJC_CLASS_$_VSAppSettingsViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_VSBindableSwitch
|| __DATA.__objc_data _OBJC_CLASS_$_VSErrorViewController
|| __DATA.__objc_data _OBJC_CLASS_$_VSFontCenter
|| __DATA.__objc_data _OBJC_CLASS_$_VSIdentityProviderFetchAllOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSIdentityProviderFetchOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSIdentityProviderFilter
|| __DATA.__objc_data _OBJC_CLASS_$_VSIdentityProviderRequest
|| __DATA.__objc_data _OBJC_CLASS_$_VSIdentityProviderRequestManager
|| __DATA.__objc_data _OBJC_CLASS_$_VSIdentityProviderViewController
|| __DATA.__objc_data _OBJC_CLASS_$_VSImageLoadOperation
|| __DATA.__objc_data _OBJC_CLASS_$_VSMaximumWidthMultilineButton
|| __DATA.__objc_data _OBJC_CLASS_$_VSMaximumWidthTintedBackgroundButton
|| __DATA.__objc_data _OBJC_CLASS_$_VSMultilineButton
|| __DATA.__objc_data _OBJC_CLASS_$_VSOnboardingInfoCenter
|| __DATA.__objc_data _OBJC_CLASS_$_VSSetupFlowController
|| __DATA.__objc_data _OBJC_CLASS_$_VSSetupView
|| __DATA.__objc_data _OBJC_CLASS_$_VSSupportedAppsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_VSTintedBackgroundButton
|| __DATA.__objc_data _OBJC_CLASS_$_VSTopShelfPurgingAccountStore
|| __DATA.__objc_data _OBJC_CLASS_$_VSViewControllerFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAppDescriptionFetchOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAppSettingsFacade
|| __DATA.__objc_data _OBJC_METACLASS_$_VSAppSettingsViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_VSBindableSwitch
|| __DATA.__objc_data _OBJC_METACLASS_$_VSErrorViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_VSFontCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_VSIdentityProviderFetchAllOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSIdentityProviderFetchOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSIdentityProviderFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_VSIdentityProviderRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_VSIdentityProviderRequestManager
|| __DATA.__objc_data _OBJC_METACLASS_$_VSIdentityProviderViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_VSImageLoadOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_VSMaximumWidthMultilineButton
|| __DATA.__objc_data _OBJC_METACLASS_$_VSMaximumWidthTintedBackgroundButton
|| __DATA.__objc_data _OBJC_METACLASS_$_VSMultilineButton
|| __DATA.__objc_data _OBJC_METACLASS_$_VSOnboardingInfoCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_VSSetupFlowController
|| __DATA.__objc_data _OBJC_METACLASS_$_VSSetupView
|| __DATA.__objc_data _OBJC_METACLASS_$_VSSupportedAppsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_VSTintedBackgroundButton
|| __DATA.__objc_data _OBJC_METACLASS_$_VSTopShelfPurgingAccountStore
|| __DATA.__objc_data _OBJC_METACLASS_$_VSViewControllerFactory
|| __DATA_CONST.__const _VSAppSettingsFacadeAppsDidChangeNotification
|| __TEXT.__text _VSAlertForError
|| __TEXT.__text _VSIconForBundleWithIdentifier
__ AccountsUI: _OBJC_CLASS_$_ACUIViewController
__ AccountsUI: _OBJC_METACLASS_$_ACUIViewController
__ CFNetwork: _CFURLRequestSetHTTPCookieStorage
__ CoreFoundation: _CFBundleGetBundleWithIdentifier
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ CoreServices: _kUTTypeImage
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSIsNilTransformerName
__ Foundation: _NSIsNotNilTransformerName
__ Foundation: _NSItemProviderOptionsDispatchModeAsynchronous
__ Foundation: _NSItemProviderOptionsDispatchModeKey
__ Foundation: _NSItemProviderPreferredImageSizeKey
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSNegateBooleanTransformerName
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSHTTPCookieStorage
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSValueTransformer
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSValueTransformer
__ Foundation: __NSDictionaryOfVariableBindings
__ ITMLKit: _OBJC_CLASS_$_IKAppContext
__ ITMLKit: _OBJC_CLASS_$_IKAppDocument
__ ITMLKit: _OBJC_CLASS_$_IKDOMFeatureFactory
__ ITMLKit: _OBJC_CLASS_$_IKImageElement
__ ITMLKit: _OBJC_CLASS_$_IKJSObject
__ ITMLKit: _OBJC_CLASS_$_IKTextElement
__ ITMLKit: _OBJC_CLASS_$_IKTextFieldElement
__ ITMLKit: _OBJC_CLASS_$_IKViewElement
__ ITMLKit: _OBJC_CLASS_$_IKViewElementRegistry
__ ITMLKit: _OBJC_METACLASS_$_IKJSObject
__ ITMLKit: _OBJC_METACLASS_$_IKViewElement
__ JavaScriptCore: _JSObjectGetArrayBufferByteLength
__ JavaScriptCore: _JSObjectGetArrayBufferBytesPtr
__ JavaScriptCore: _JSPropertyDescriptorConfigurableKey
__ JavaScriptCore: _JSPropertyDescriptorEnumerableKey
__ JavaScriptCore: _JSPropertyDescriptorValueKey
__ JavaScriptCore: _JSPropertyDescriptorWritableKey
__ JavaScriptCore: _JSValueGetTypedArrayType
__ JavaScriptCore: _JSValueIsObject
__ JavaScriptCore: _OBJC_CLASS_$_JSContext
__ JavaScriptCore: _OBJC_CLASS_$_JSValue
__ OnBoardingKit: _OBJC_CLASS_$_OBBundle
__ OnBoardingKit: _OBJC_CLASS_$_OBPrivacyFlow
__ OnBoardingKit: _OBJC_CLASS_$_OBPrivacyLinkController
__ OnBoardingKit: _OBJC_CLASS_$_OBPrivacyPresenter
__ Preferences: _OBJC_CLASS_$_PSEditableTableCell
__ Preferences: _OBJC_CLASS_$_PSSpecifier
__ Preferences: _OBJC_CLASS_$_PSTableCell
__ Preferences: _OBJC_CLASS_$_PSTextFieldSpecifier
__ Preferences: _OBJC_METACLASS_$_PSTableCell
__ Preferences: _PSCellClassKey
__ Preferences: _PSFooterCellClassGroupKey
__ Preferences: _PSOverrideDevicePasscodeEntryPresetKey
__ Preferences: _PSTableCellHeightKey
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCAFilterPlusL
__ StoreServices: _OBJC_CLASS_$_SSAccountStore
__ StoreServices: _OBJC_CLASS_$_SSLookupRequest
__ StoreServices: _SSAccountStoreChangedNotification
__ StoreServices: _SSLookupKeyProfileLockup
__ StoreServices: _SSLookupKeyProfileProduct
__ StoreServices: _SSLookupParameterItemIdentifiers
__ StoreServices: _SSLookupParameterProtocolVersion
__ StoreServices: _SSLookupPropertyHasInAppPurchases
__ StoreServices: _SSLookupPropertyResults
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIFocusGuide
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILocalizedIndexedCollation
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIPickerView
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIWebView
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UISwitch
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle0
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightBold
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIKeyboardAnimationCurveUserInfoKey
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardFrameBeginUserInfoKey
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UILayoutFittingCompressedSize
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UITableViewIndexSearch
__ UIKit: _UITextContentTypeOneTimeCode
__ UIKit: _UITextFieldTextDidChangeNotification
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSAccount
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSAccountChannels
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSAccountChannelsCenter
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSAccountChannelsSaveOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSAccountMetadata
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSAccountProviderResponse
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSAccountSaveOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSAccountSerializationCenter
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSAccountStore
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSAppChannelsFilter
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSAppInstallationOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSApplicationBootURLOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSAsyncOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSAuditToken
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSBlockBasedValueTransformer
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSCasePreservingString
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSCompoundValueTransformer
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSDelayOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSDeveloperIdentityProviderFetchAllOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSDeveloperSettingsFetchOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSDevice
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSErrorRecoveryAttempterDelegate
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSExpressionEvaluator
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSFailable
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSFailableValueTransformer
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSIdentityProvider
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSIdentityProviderAvailabilityInfoCenter
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSIdentityProviderFetchAllAppsOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSIdentityProviderFetchAppsOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSMetricsCenter
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSOpaqueAuthenticationToken
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSOptional
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSPersistentStorage
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSPreferences
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSPrivacyConsentVoucher
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSRemoteNotifier
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSRestrictionsCenter
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSReverseValueTransformer
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSSAMLAuthenticationToken
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSSecurityTask
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSSemaphore
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSStateMachine
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSStoreRequest
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSStoreRequestOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSStoreURLBag
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSStoreURLBagLoadOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSSubscription
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSSubscriptionRegistrationCenter
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSSubscriptionSource
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSTimeoutOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSValueType
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSValueTypeProperty
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSVerificationDataOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSVerificationStateResetOperation
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSViewServiceResponse
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSViewServiceXPCInterface
__ VideoSubscriberAccount: _OBJC_CLASS_$_VSWeakForwardingTarget
__ VideoSubscriberAccount: _OBJC_METACLASS_$_VSAccountStore
__ VideoSubscriberAccount: _OBJC_METACLASS_$_VSAsyncOperation
__ VideoSubscriberAccount: _OBJC_METACLASS_$_VSCompoundValueTransformer
__ VideoSubscriberAccount: _VSAccountProviderAuthenticationSchemeSAML
__ VideoSubscriberAccount: _VSAccountStoreDidChangeNotification
__ VideoSubscriberAccount: _VSCheckEntitlementForTask
__ VideoSubscriberAccount: _VSDataCompressionValueTransformerName
__ VideoSubscriberAccount: _VSDefaultLogObject
__ VideoSubscriberAccount: _VSDisplayNameForBundleWithIdentifier
__ VideoSubscriberAccount: _VSElementKeyAuthenticationTemplate
__ VideoSubscriberAccount: _VSElementKeyAutoAuthenticationTemplate
__ VideoSubscriberAccount: _VSElementKeyTwoFactorVerificationTemplate
__ VideoSubscriberAccount: _VSElementKeyWebAuthenticationTemplate
__ VideoSubscriberAccount: _VSEnqueueCompletionOperation
__ VideoSubscriberAccount: _VSErrorDestructiveRecoveryOptionIndexSet
__ VideoSubscriberAccount: _VSErrorDomain
__ VideoSubscriberAccount: _VSErrorIsPrivateError
__ VideoSubscriberAccount: _VSErrorIsPublicError
__ VideoSubscriberAccount: _VSErrorLogObject
__ VideoSubscriberAccount: _VSHTTPMethodNameGET
__ VideoSubscriberAccount: _VSInvalidVerificationTokenError
__ VideoSubscriberAccount: _VSJSErrorDomain
__ VideoSubscriberAccount: _VSJSONDataValueTransformerName
__ VideoSubscriberAccount: _VSMainConcurrencyBindingOptions
__ VideoSubscriberAccount: _VSMainThreadOperationWithBlock
__ VideoSubscriberAccount: _VSMetricPageTypeViewService
__ VideoSubscriberAccount: _VSMetricPageViewServiceMain
__ VideoSubscriberAccount: _VSOpenURL
__ VideoSubscriberAccount: _VSPerformBlockOnMainThread
__ VideoSubscriberAccount: _VSPerformCompletionHandler
__ VideoSubscriberAccount: _VSPrivacyServiceInterface
__ VideoSubscriberAccount: _VSPrivateAccountDeletionErrorWithRecoveryHandler
__ VideoSubscriberAccount: _VSPrivateAccountValidationErrorWithRecoveryHandler
__ VideoSubscriberAccount: _VSPrivateError
__ VideoSubscriberAccount: _VSPrivateErrorWithRecoverySuggestion
__ VideoSubscriberAccount: _VSPrivateViewServiceCrashedErrorWithRecoveryHandler
__ VideoSubscriberAccount: _VSPublicError
__ VideoSubscriberAccount: _VSPublicErrorWithDetailedErrors
__ VideoSubscriberAccount: _VSPublicProviderRejectedError
__ VideoSubscriberAccount: _VSPublicServiceTemporarilyUnavailableError
__ VideoSubscriberAccount: _VSPublicUnsupportedProviderError
__ VideoSubscriberAccount: _VSRequireKeyedCoder
__ VideoSubscriberAccount: _VSRequireMainThread
__ VideoSubscriberAccount: _VSSharedSAMLParserController
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyAppPlacementPosition
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyAppStoreIdentifiers
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyAppStoreURL
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyAuthProtocols
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyAuthTemplates
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyAuthURL
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyDefaultAppIdentifier
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyFeaturedProviderIdentifiers
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyIsSTBOptOutAllowed
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyIsSetTopBoxSupported
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyIsSingleSignOnSupported
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyName
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyPrimaryIdentifier
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyProviderAppArtwork
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyProviderArtwork
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyRoot
__ VideoSubscriberAccount: _VSStoreProviderResponseKeyVendorIdentifier
__ VideoSubscriberAccount: _VSStoreURLBagKeyAllIdentityProviderApps
__ VideoSubscriberAccount: _VSStoreURLBagKeyCountryCode
__ VideoSubscriberAccount: _VSStoreURLBagKeyIdentityProviders
__ VideoSubscriberAccount: _VSStoreURLBagKeyMaxFeaturedProviders
__ VideoSubscriberAccount: _VSStoreURLBagKeySoleProviderFeatureEnabled
__ VideoSubscriberAccount: _VSSubscriptionFetchOptionExcludeUninstalledApps
__ VideoSubscriberAccount: _VSValueTransformerBindingOption
__ VideoSubscriberAccount: _VSValueTypeCopyWithZone
__ VideoSubscriberAccount: _VSValueTypeDescription
__ VideoSubscriberAccount: _VSValueTypeEncodeWithCoder
__ VideoSubscriberAccount: _VSValueTypeHash
__ VideoSubscriberAccount: _VSValueTypeInit
__ VideoSubscriberAccount: _VSValueTypeInitWithCoder
__ VideoSubscriberAccount: _VSValueTypeIsEqual
__ VideosUI: _OBJC_CLASS_$_VUIAccessViewController
__ VideosUI: _OBJC_CLASS_$_VUIAppInstallerViewController
__ VideosUI: _OBJC_CLASS_$_VUIAppsGridViewController
__ VideosUI: _VUIAccessOptionsAccountKey
__ VideosUI: _VUIAccessOptionsBodyKey
__ VideosUI: _VUIAccessOptionsTitleKey
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync_f
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
VSImageScaleValueTransformer : NSValueTransformer /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  {CGSize=dd} preferredSize

  // class methods
  +[VSImageScaleValueTransformer transformedValueClass]
  +[VSImageScaleValueTransformer allowsReverseTransformation]

  // instance methods
  -[VSImageScaleValueTransformer preferredSize]
  -[VSImageScaleValueTransformer transformedValue:]
  -[VSImageScaleValueTransformer setPreferredSize:]


VSITMLCredentialEntryField : VSCredentialEntryField <IKAppKeyboardDelegate>
 @property  IKTextFieldElement *associatedTextFieldElement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSITMLCredentialEntryField .cxx_destruct]
  -[VSITMLCredentialEntryField textDidChangeForKeyboard:]
  -[VSITMLCredentialEntryField setAssociatedTextFieldElement:]
  -[VSITMLCredentialEntryField associatedTextFieldElement]


VSMaximumWidthTintedBackgroundButton : VSTintedBackgroundButton
  // instance methods
  -[VSMaximumWidthTintedBackgroundButton intrinsicContentSize]


VSViewServiceHostViewController : UIViewController /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI <VSViewServiceRemoteViewControllerDelegate>
 @property  NSMutableDictionary *requestsByID
 @property  VSOptional *currentRequest
 @property  VSViewServiceRemoteViewController *remoteViewController
 @property  BOOL hasRetriedOnce
 @property  BOOL hasRequestedPresentation
 @property  VSViewControllerFactory *viewControllerFactory
 @property  <VSViewServiceHostViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSViewServiceHostViewController dealloc]
  -[VSViewServiceHostViewController modalPresentationStyle]
  -[VSViewServiceHostViewController .cxx_destruct]
  -[VSViewServiceHostViewController currentRequest]
  -[VSViewServiceHostViewController setCurrentRequest:]
  -[VSViewServiceHostViewController initWithNibName:bundle:]
  -[VSViewServiceHostViewController viewControllerFactory]
  -[VSViewServiceHostViewController setRemoteViewController:]
  -[VSViewServiceHostViewController setDelegate:]
  -[VSViewServiceHostViewController delegate]
  -[VSViewServiceHostViewController remoteViewController]
  -[VSViewServiceHostViewController _cancelButtonPressed:]
  -[VSViewServiceHostViewController setViewControllerFactory:]
  -[VSViewServiceHostViewController enqueueViewServiceRequest:withIdentifier:]
  -[VSViewServiceHostViewController _request:didFinishWithResponse:]
  -[VSViewServiceHostViewController _request:didFailWithError:]
  -[VSViewServiceHostViewController _didChooseAdditionalProvidersForRequest:]
  -[VSViewServiceHostViewController _didCancelRequest:]
  -[VSViewServiceHostViewController requestsByID]
  -[VSViewServiceHostViewController _connectToViewServiceForRequest:]
  -[VSViewServiceHostViewController _requestForID:]
  -[VSViewServiceHostViewController _didCompleteRequest:]
  -[VSViewServiceHostViewController hasRequestedPresentation]
  -[VSViewServiceHostViewController setHasRequestedPresentation:]
  -[VSViewServiceHostViewController _presentViewServiceHostViewController]
  -[VSViewServiceHostViewController _addRemoteViewControllerAsChildViewController]
  -[VSViewServiceHostViewController _dismissViewServiceHostViewController]
  -[VSViewServiceHostViewController _removeRemoteViewControllerAsChildViewController]
  -[VSViewServiceHostViewController hasRetriedOnce]
  -[VSViewServiceHostViewController setHasRetriedOnce:]
  -[VSViewServiceHostViewController _shouldAuthenticateAccountProviderWithIdentifier:]
  -[VSViewServiceHostViewController presentViewServiceRemoteViewController:]
  -[VSViewServiceHostViewController dismissViewServiceRemoteViewController:]
  -[VSViewServiceHostViewController viewServiceRemoteViewController:didTerminateWithError:]
  -[VSViewServiceHostViewController viewServiceRemoteViewController:request:didFinishWithResponse:]
  -[VSViewServiceHostViewController viewServiceRemoteViewController:request:didFailWithError:]
  -[VSViewServiceHostViewController viewServiceRemoteViewController:didChooseAdditionalProvidersForRequest:]
  -[VSViewServiceHostViewController viewServiceRemoteViewController:didCancelRequest:]
  -[VSViewServiceHostViewController viewServiceRemoteViewController:didSelectProviderWithIdentifier:vetoHandler:]
  -[VSViewServiceHostViewController setRequestsByID:]


VSIdentityProviderRequestContext : NSObject /usr/lib/libSystem.B.dylib
 @property  VSIdentityProviderRequest *request
 @property  BOOL attemptedVerificationStateReset

  // instance methods
  -[VSIdentityProviderRequestContext setRequest:]
  -[VSIdentityProviderRequestContext .cxx_destruct]
  -[VSIdentityProviderRequestContext request]
  -[VSIdentityProviderRequestContext attemptedVerificationStateReset]
  -[VSIdentityProviderRequestContext setAttemptedVerificationStateReset:]


VSJSError : IKJSObject /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <VSJSError>
 @property  unsigned long code
 @property  NSString *message

  // instance methods
  -[VSJSError setCode:]
  -[VSJSError message]
  -[VSJSError init]
  -[VSJSError setMessage:]
  -[VSJSError .cxx_destruct]
  -[VSJSError code]
  -[VSJSError error]


VSErrorViewController : UIViewController /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
 @property  UILabel *titleLabel
 @property  UILabel *messageLabel
 @property  UIButton *recoveryButton
 @property  VSFontCenter *fontCenter
 @property  NSError *error
 @property  BOOL recoveryDestructive

  // instance methods
  -[VSErrorViewController viewDidLoad]
  -[VSErrorViewController setTitleLabel:]
  -[VSErrorViewController _updateText]
  -[VSErrorViewController titleLabel]
  -[VSErrorViewController messageLabel]
  -[VSErrorViewController dealloc]
  -[VSErrorViewController setError:]
  -[VSErrorViewController .cxx_destruct]
  -[VSErrorViewController initWithNibName:bundle:]
  -[VSErrorViewController traitCollectionDidChange:]
  -[VSErrorViewController error]
  -[VSErrorViewController setMessageLabel:]
  -[VSErrorViewController recoveryButton]
  -[VSErrorViewController fontCenter]
  -[VSErrorViewController _recoveryButtonPressed:]
  -[VSErrorViewController isRecoveryDestructive]
  -[VSErrorViewController setRecoveryButton:]
  -[VSErrorViewController setRecoveryDestructive:]
  -[VSErrorViewController setFontCenter:]


VSIdentityProviderSubscriptionOperation : VSAsyncOperation /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
 @property  NSOperationQueue *privateQueue
 @property  VSIdentityProvider *identityProvider
 @property  NSArray *subscriptionsToAdd
 @property  NSArray *subscriptionsToRemoveByBundleID

  // instance methods
  -[VSIdentityProviderSubscriptionOperation init]
  -[VSIdentityProviderSubscriptionOperation .cxx_destruct]
  -[VSIdentityProviderSubscriptionOperation setPrivateQueue:]
  -[VSIdentityProviderSubscriptionOperation cancel]
  -[VSIdentityProviderSubscriptionOperation privateQueue]
  -[VSIdentityProviderSubscriptionOperation executionDidBegin]
  -[VSIdentityProviderSubscriptionOperation identityProvider]
  -[VSIdentityProviderSubscriptionOperation setIdentityProvider:]
  -[VSIdentityProviderSubscriptionOperation subscriptionsToAdd]
  -[VSIdentityProviderSubscriptionOperation subscriptionsToRemoveByBundleID]
  -[VSIdentityProviderSubscriptionOperation _authorizedBundleIdsFromAppDescriptions:]
  -[VSIdentityProviderSubscriptionOperation _removeSubscriptionsForBundleIdentifiers:withAuthorizedBundleIdentifiers:]
  -[VSIdentityProviderSubscriptionOperation _registerSubscriptions:withAuthorizedBundleIdentifiers:]
  -[VSIdentityProviderSubscriptionOperation setSubscriptionsToAdd:]
  -[VSIdentityProviderSubscriptionOperation setSubscriptionsToRemoveByBundleID:]


VSIdentityProviderFetchAllOperation : VSAsyncOperation /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
 @property  VSOptional *result
 @property  NSOperationQueue *subqueue
 @property  VSDevice *currentDevice
 @property  VSAuditToken *auditToken

  // instance methods
  -[VSIdentityProviderFetchAllOperation setAuditToken:]
  -[VSIdentityProviderFetchAllOperation auditToken]
  -[VSIdentityProviderFetchAllOperation result]
  -[VSIdentityProviderFetchAllOperation init]
  -[VSIdentityProviderFetchAllOperation .cxx_destruct]
  -[VSIdentityProviderFetchAllOperation currentDevice]
  -[VSIdentityProviderFetchAllOperation setResult:]
  -[VSIdentityProviderFetchAllOperation executionDidBegin]
  -[VSIdentityProviderFetchAllOperation setCurrentDevice:]
  -[VSIdentityProviderFetchAllOperation subqueue]
  -[VSIdentityProviderFetchAllOperation setSubqueue:]


VSIdentityProviderFilter : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *allIdentityProviders
 @property  NSArray *supportedAccountProviderIDs
 @property  NSString *searchQuery
 @property  NSArray *filteredIdentityProviders

  // class methods
  +[VSIdentityProviderFilter keyPathsForValuesAffectingFilteredIdentityProviders]

  // instance methods
  -[VSIdentityProviderFilter init]
  -[VSIdentityProviderFilter .cxx_destruct]
  -[VSIdentityProviderFilter setSearchQuery:]
  -[VSIdentityProviderFilter searchQuery]
  -[VSIdentityProviderFilter allIdentityProviders]
  -[VSIdentityProviderFilter supportedAccountProviderIDs]
  -[VSIdentityProviderFilter filteredIdentityProviders]
  -[VSIdentityProviderFilter setAllIdentityProviders:]
  -[VSIdentityProviderFilter setSupportedAccountProviderIDs:]


VSMessageQueue : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *messages
 @property  <VSMessageQueueDelegate> *delegate

  // instance methods
  -[VSMessageQueue setMessages:]
  -[VSMessageQueue init]
  -[VSMessageQueue removeAllMessages]
  -[VSMessageQueue messages]
  -[VSMessageQueue .cxx_destruct]
  -[VSMessageQueue setDelegate:]
  -[VSMessageQueue addMessage:]
  -[VSMessageQueue delegate]


VSSpinnerTitleView : UIView /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
  // instance methods
  -[VSSpinnerTitleView initWithTitle:]
  -[VSSpinnerTitleView didMoveToWindow]
  -[VSSpinnerTitleView dealloc]
  -[VSSpinnerTitleView .cxx_destruct]
  -[VSSpinnerTitleView sizeThatFits:]
  -[VSSpinnerTitleView layoutSubviews]


VSIdentityProviderFetchAllFromStoreOperation : VSAsyncOperation /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
 @property  VSOptional *result
 @property  NSOperationQueue *privateQueue
 @property  VSAuditToken *auditToken

  // instance methods
  -[VSIdentityProviderFetchAllFromStoreOperation setAuditToken:]
  -[VSIdentityProviderFetchAllFromStoreOperation auditToken]
  -[VSIdentityProviderFetchAllFromStoreOperation result]
  -[VSIdentityProviderFetchAllFromStoreOperation init]
  -[VSIdentityProviderFetchAllFromStoreOperation .cxx_destruct]
  -[VSIdentityProviderFetchAllFromStoreOperation setPrivateQueue:]
  -[VSIdentityProviderFetchAllFromStoreOperation cancel]
  -[VSIdentityProviderFetchAllFromStoreOperation privateQueue]
  -[VSIdentityProviderFetchAllFromStoreOperation setResult:]
  -[VSIdentityProviderFetchAllFromStoreOperation executionDidBegin]


VSIKItemGroup : NSObject /usr/lib/libSystem.B.dylib <VSJSItemGroupBridge, IKDOMFeature>
 @property  <VSIKItemGroupDelegate> *delegate
 @property  long long selectedItemIndex
 @property  long long jsSelectedItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *featureName
 @property  IKAppContext *appContext

  // class methods
  +[VSIKItemGroup makeFeatureJSObjectForFeature:]
  +[VSIKItemGroup registerFeature]

  // instance methods
  -[VSIKItemGroup .cxx_destruct]
  -[VSIKItemGroup setSelectedItemIndex:]
  -[VSIKItemGroup appContext]
  -[VSIKItemGroup setDelegate:]
  -[VSIKItemGroup delegate]
  -[VSIKItemGroup featureName]
  -[VSIKItemGroup selectedItemIndex]
  -[VSIKItemGroup initWithDOMNode:featureName:]
  -[VSIKItemGroup jsSelectedItem]
  -[VSIKItemGroup setJSSelectedItem:]


VSJSItemGroup : IKJSObject /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <VSJSItemGroup>
 @property  <VSJSItemGroupBridge> *bridge
 @property  long long selectedItem

  // instance methods
  -[VSJSItemGroup setBridge:]
  -[VSJSItemGroup bridge]
  -[VSJSItemGroup .cxx_destruct]
  -[VSJSItemGroup selectedItem]
  -[VSJSItemGroup setSelectedItem:]


VSOnscreenCodeAuthenticationAppDocumentController : VSAppDocumentController <VSMessageQueueDelegate>
 @property  IKViewElement *regenerateCodeButtonElement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSOnscreenCodeAuthenticationAppDocumentController .cxx_destruct]
  -[VSOnscreenCodeAuthenticationAppDocumentController _stopObservingViewModel:]
  -[VSOnscreenCodeAuthenticationAppDocumentController _startObservingViewModel:]
  -[VSOnscreenCodeAuthenticationAppDocumentController didAddMessagesToMessageQueue:]
  -[VSOnscreenCodeAuthenticationAppDocumentController _updateOnscreenCodeViewModel:withTemplate:]
  -[VSOnscreenCodeAuthenticationAppDocumentController setRegenerateCodeButtonElement:]
  -[VSOnscreenCodeAuthenticationAppDocumentController regenerateCodeButtonElement]
  -[VSOnscreenCodeAuthenticationAppDocumentController _onscreenCodeViewModelWithViewModel:]
  -[VSOnscreenCodeAuthenticationAppDocumentController _updateOnscreenCodeViewModel:error:]
  -[VSOnscreenCodeAuthenticationAppDocumentController _newViewModel]
  -[VSOnscreenCodeAuthenticationAppDocumentController _updateViewModel:error:]


VSViewModel : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long viewState
 @property  BOOL preValidate
 @property  unsigned long validationState
 @property  NSError *error
 @property  NSString *title
 @property  VSIdentityProvider *identityProvider

  // instance methods
  -[VSViewModel setValidationState:]
  -[VSViewModel setError:]
  -[VSViewModel .cxx_destruct]
  -[VSViewModel setTitle:]
  -[VSViewModel title]
  -[VSViewModel error]
  -[VSViewModel setViewState:]
  -[VSViewModel viewState]
  -[VSViewModel validationState]
  -[VSViewModel identityProvider]
  -[VSViewModel setIdentityProvider:]
  -[VSViewModel configureWithRequest:]
  -[VSViewModel shouldPreValidate]
  -[VSViewModel setPreValidate:]


VSAccountAuthentication : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *username
 @property  VSOptional *authenticationToken
 @property  NSString *appBundleIdentifier

  // instance methods
  -[VSAccountAuthentication setUsername:]
  -[VSAccountAuthentication init]
  -[VSAccountAuthentication username]
  -[VSAccountAuthentication .cxx_destruct]
  -[VSAccountAuthentication setAuthenticationToken:]
  -[VSAccountAuthentication authenticationToken]
  -[VSAccountAuthentication appBundleIdentifier]
  -[VSAccountAuthentication setAppBundleIdentifier:]


VSOnscreenCodeViewModel : VSViewModel <VSLogoImageViewModel>
 @property  NSString *webPagePreamble
 @property  NSURL *webPageURL
 @property  NSString *webPagePostamble
 @property  NSString *onscreenCode
 @property  BOOL shouldShowRegenerateCodeButton
 @property  NSString *regenerateCodeButtonTitle
 @property  VSMessageQueue *regenerateCodeEventQueue
 @property  NSString *footerText
 @property  NSItemProvider *logoProvider
 @property  UIImage *logo
 @property  NSString *logoAccessibilityLabel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSOnscreenCodeViewModel logo]
  -[VSOnscreenCodeViewModel init]
  -[VSOnscreenCodeViewModel setLogo:]
  -[VSOnscreenCodeViewModel .cxx_destruct]
  -[VSOnscreenCodeViewModel webPageURL]
  -[VSOnscreenCodeViewModel setWebPageURL:]
  -[VSOnscreenCodeViewModel setFooterText:]
  -[VSOnscreenCodeViewModel footerText]
  -[VSOnscreenCodeViewModel logoProvider]
  -[VSOnscreenCodeViewModel setLogoProvider:]
  -[VSOnscreenCodeViewModel setOnscreenCode:]
  -[VSOnscreenCodeViewModel setRegenerateCodeButtonTitle:]
  -[VSOnscreenCodeViewModel setShouldShowRegenerateCodeButton:]
  -[VSOnscreenCodeViewModel regenerateCodeEventQueue]
  -[VSOnscreenCodeViewModel configureWithRequest:]
  -[VSOnscreenCodeViewModel setWebPagePreamble:]
  -[VSOnscreenCodeViewModel setWebPagePostamble:]
  -[VSOnscreenCodeViewModel logoAccessibilityLabel]
  -[VSOnscreenCodeViewModel setLogoAccessibilityLabel:]
  -[VSOnscreenCodeViewModel webPagePreamble]
  -[VSOnscreenCodeViewModel webPagePostamble]
  -[VSOnscreenCodeViewModel onscreenCode]
  -[VSOnscreenCodeViewModel shouldShowRegenerateCodeButton]
  -[VSOnscreenCodeViewModel regenerateCodeButtonTitle]
  -[VSOnscreenCodeViewModel setRegenerateCodeEventQueue:]


VSIdentityProviderViewController : UIViewController /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI <VSAuthenticationViewControllerDelegate, VSIdentityProviderRequestManagerDelegate, PSStateRestoration>
 @property  NSOperationQueue *privateQueue
 @property  VSImageLoadOperation *logoLoadOperation
 @property  VSViewModel *viewModel
 @property  VSIdentityProviderRequestManager *requestManager
 @property  UIBarButtonItem *signInButtonItem
 @property  UIBarButtonItem *cancelButtonItem
 @property  UIViewController *currentlyPresentedIdentityProviderAlert
 @property  VSIdentityProvider *identityProvider
 @property  <VSIdentityProviderViewControllerDelegate> *delegate
 @property  VSAuditToken *auditToken
 @property  BOOL canIssuePrivacyVouchers
 @property  BOOL cancellationAllowed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSIdentityProviderViewController setAuditToken:]
  -[VSIdentityProviderViewController auditToken]
  -[VSIdentityProviderViewController init]
  -[VSIdentityProviderViewController canBeShownFromSuspendedState]
  -[VSIdentityProviderViewController dealloc]
  -[VSIdentityProviderViewController .cxx_destruct]
  -[VSIdentityProviderViewController viewModel]
  -[VSIdentityProviderViewController setPrivateQueue:]
  -[VSIdentityProviderViewController initWithNibName:bundle:]
  -[VSIdentityProviderViewController privateQueue]
  -[VSIdentityProviderViewController cancelButtonItem]
  -[VSIdentityProviderViewController setCancelButtonItem:]
  -[VSIdentityProviderViewController observeValueForKeyPath:ofObject:change:context:]
  -[VSIdentityProviderViewController _dismiss]
  -[VSIdentityProviderViewController enqueueRequest:]
  -[VSIdentityProviderViewController setDelegate:]
  -[VSIdentityProviderViewController _didCancel]
  -[VSIdentityProviderViewController viewDidLayoutSubviews]
  -[VSIdentityProviderViewController setViewModel:]
  -[VSIdentityProviderViewController delegate]
  -[VSIdentityProviderViewController requestManager]
  -[VSIdentityProviderViewController initWithCoder:]
  -[VSIdentityProviderViewController _cancelButtonPressed:]
  -[VSIdentityProviderViewController _stopObservingViewModel:]
  -[VSIdentityProviderViewController _startObservingViewModel:]
  -[VSIdentityProviderViewController _showViewController:]
  -[VSIdentityProviderViewController identityProvider]
  -[VSIdentityProviderViewController initWithIdentityProvider:]
  -[VSIdentityProviderViewController _hideNavigationBarButtons]
  -[VSIdentityProviderViewController _showNavigationBarButtons]
  -[VSIdentityProviderViewController signInButtonItem]
  -[VSIdentityProviderViewController isCancellationAllowed]
  -[VSIdentityProviderViewController setLogoLoadOperation:]
  -[VSIdentityProviderViewController _stopValidationAndShowButtons:]
  -[VSIdentityProviderViewController _signInButtonPressed:]
  -[VSIdentityProviderViewController setSignInButtonItem:]
  -[VSIdentityProviderViewController _logoLoadOperationForPreferredImageSize:]
  -[VSIdentityProviderViewController setCancellationAllowed:]
  -[VSIdentityProviderViewController _startValidation]
  -[VSIdentityProviderViewController _showValidationAlertForError:]
  -[VSIdentityProviderViewController currentlyPresentedIdentityProviderAlert]
  -[VSIdentityProviderViewController setCurrentlyPresentedIdentityProviderAlert:]
  -[VSIdentityProviderViewController authenticationViewControllerDidCancel:]
  -[VSIdentityProviderViewController identityProviderRequestManager:finishedRequest:withResult:]
  -[VSIdentityProviderViewController identityProviderRequestManager:didAuthenticateAccount:forRequest:]
  -[VSIdentityProviderViewController identityProviderRequestManager:requestsAlert:]
  -[VSIdentityProviderViewController currentAuthenticationViewControllerSupportsPreAuth]
  -[VSIdentityProviderViewController canIssuePrivacyVouchers]
  -[VSIdentityProviderViewController setCanIssuePrivacyVouchers:]
  -[VSIdentityProviderViewController logoLoadOperation]
  -[VSIdentityProviderViewController setRequestManager:]


VSITMLTwoFactorEntryField : VSTwoFactorEntryTextField <IKAppKeyboardDelegate>
 @property  IKTextFieldElement *associatedTextFieldElement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSITMLTwoFactorEntryField .cxx_destruct]
  -[VSITMLTwoFactorEntryField textDidChangeForKeyboard:]
  -[VSITMLTwoFactorEntryField setAssociatedTextFieldElement:]
  -[VSITMLTwoFactorEntryField associatedTextFieldElement]


VSAppDescriptionFetchOperation : VSAsyncOperation /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
 @property  NSSet *appAdamIDs
 @property  {CGSize=dd} preferredArtworkSize
 @property  VSOptional *result
 @property  SSLookupRequest *lookupRequest
 @property  NSOperationQueue *imageLoadingQueue
 @property  BOOL needsProductProfile
 @property  BOOL shouldPersonalizeResponse
 @property  BOOL shouldPrecomposeIcon
 @property  VSAuditToken *auditToken

  // instance methods
  -[VSAppDescriptionFetchOperation setAuditToken:]
  -[VSAppDescriptionFetchOperation auditToken]
  -[VSAppDescriptionFetchOperation result]
  -[VSAppDescriptionFetchOperation init]
  -[VSAppDescriptionFetchOperation .cxx_destruct]
  -[VSAppDescriptionFetchOperation preferredArtworkSize]
  -[VSAppDescriptionFetchOperation setPreferredArtworkSize:]
  -[VSAppDescriptionFetchOperation cancel]
  -[VSAppDescriptionFetchOperation setResult:]
  -[VSAppDescriptionFetchOperation imageLoadingQueue]
  -[VSAppDescriptionFetchOperation setImageLoadingQueue:]
  -[VSAppDescriptionFetchOperation executionDidBegin]
  -[VSAppDescriptionFetchOperation appAdamIDs]
  -[VSAppDescriptionFetchOperation setAppAdamIDs:]
  -[VSAppDescriptionFetchOperation initWithAppAdamIDs:]
  -[VSAppDescriptionFetchOperation setShouldPrecomposeIcon:]
  -[VSAppDescriptionFetchOperation setShouldPersonalizeResponse:]
  -[VSAppDescriptionFetchOperation initWithAppAdamIDs:preferredArtworkSize:]
  -[VSAppDescriptionFetchOperation _appDescriptionFromLookupResponse:appAdamID:]
  -[VSAppDescriptionFetchOperation shouldPrecomposeIcon]
  -[VSAppDescriptionFetchOperation needsProductProfile]
  -[VSAppDescriptionFetchOperation shouldPersonalizeResponse]
  -[VSAppDescriptionFetchOperation _handleLookupResponse:]
  -[VSAppDescriptionFetchOperation setLookupRequest:]
  -[VSAppDescriptionFetchOperation lookupRequest]
  -[VSAppDescriptionFetchOperation setNeedsProductProfile:]


VSViewServiceRequestPreparationOperation : VSAsyncOperation /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
 @property  VSOptional *result
 @property  NSOperationQueue *privateQueue
 @property  NSXPCConnection *privacyServiceConnection
 @property  VSIdentityProviderAvailabilityInfoCenter *availabilityInfoCenter
 @property  VSStoreURLBag *bag
 @property  {?=[8I]} hostAuditToken
 @property  int hostProcessIdentifier
 @property  VSAuditToken *auditToken
 @property  BOOL requestAllowsPrivacyUI
 @property  BOOL requestRequiresPrivacyUI
 @property  NSArray *supportedIdentityProviderIdentifiers
 @property  NSArray *featuredIdentityProviderIdentifiers
 @property  BOOL shouldInferFeaturedProviders
 @property  BOOL shouldReturnErrorOnTVProviderFeatureUnsupportedByStorefront
 @property  BOOL accountModificationAllowed
 @property  VSOptional *currentAccount

  // instance methods
  -[VSViewServiceRequestPreparationOperation setAuditToken:]
  -[VSViewServiceRequestPreparationOperation auditToken]
  -[VSViewServiceRequestPreparationOperation result]
  -[VSViewServiceRequestPreparationOperation init]
  -[VSViewServiceRequestPreparationOperation dealloc]
  -[VSViewServiceRequestPreparationOperation _finishWithError:]
  -[VSViewServiceRequestPreparationOperation .cxx_destruct]
  -[VSViewServiceRequestPreparationOperation setPrivateQueue:]
  -[VSViewServiceRequestPreparationOperation setBag:]
  -[VSViewServiceRequestPreparationOperation bag]
  -[VSViewServiceRequestPreparationOperation cancel]
  -[VSViewServiceRequestPreparationOperation privateQueue]
  -[VSViewServiceRequestPreparationOperation setResult:]
  -[VSViewServiceRequestPreparationOperation executionDidBegin]
  -[VSViewServiceRequestPreparationOperation hostAuditToken]
  -[VSViewServiceRequestPreparationOperation setHostAuditToken:]
  -[VSViewServiceRequestPreparationOperation currentAccount]
  -[VSViewServiceRequestPreparationOperation isAccountModificationAllowed]
  -[VSViewServiceRequestPreparationOperation setCurrentAccount:]
  -[VSViewServiceRequestPreparationOperation setAccountModificationAllowed:]
  -[VSViewServiceRequestPreparationOperation setShouldReturnErrorOnTVProviderFeatureUnsupportedByStorefront:]
  -[VSViewServiceRequestPreparationOperation setShouldInferFeaturedProviders:]
  -[VSViewServiceRequestPreparationOperation supportedIdentityProviderIdentifiers]
  -[VSViewServiceRequestPreparationOperation featuredIdentityProviderIdentifiers]
  -[VSViewServiceRequestPreparationOperation shouldInferFeaturedProviders]
  -[VSViewServiceRequestPreparationOperation shouldReturnErrorOnTVProviderFeatureUnsupportedByStorefront]
  -[VSViewServiceRequestPreparationOperation privacyServiceConnection]
  -[VSViewServiceRequestPreparationOperation _checkPrivacy]
  -[VSViewServiceRequestPreparationOperation _privacyServiceWithErrorHandler:]
  -[VSViewServiceRequestPreparationOperation hostProcessIdentifier]
  -[VSViewServiceRequestPreparationOperation availabilityInfoCenter]
  -[VSViewServiceRequestPreparationOperation _continueCheckPrivacyWithAccessStatus:]
  -[VSViewServiceRequestPreparationOperation _checkAvailability]
  -[VSViewServiceRequestPreparationOperation requestRequiresPrivacyUI]
  -[VSViewServiceRequestPreparationOperation _determineProviderDisplayNameWithUI:]
  -[VSViewServiceRequestPreparationOperation requestAllowsPrivacyUI]
  -[VSViewServiceRequestPreparationOperation _checkSupportedProviders]
  -[VSViewServiceRequestPreparationOperation _finishWithSupportedProviders:]
  -[VSViewServiceRequestPreparationOperation _promptForPrivacyWithDisplayNameIfRequired:providerID:providerIsSupported:allowUI:]
  -[VSViewServiceRequestPreparationOperation _checkEntitlement]
  -[VSViewServiceRequestPreparationOperation setHostProcessIdentifier:]
  -[VSViewServiceRequestPreparationOperation setRequestAllowsPrivacyUI:]
  -[VSViewServiceRequestPreparationOperation setRequestRequiresPrivacyUI:]
  -[VSViewServiceRequestPreparationOperation setSupportedIdentityProviderIdentifiers:]
  -[VSViewServiceRequestPreparationOperation setFeaturedIdentityProviderIdentifiers:]
  -[VSViewServiceRequestPreparationOperation setPrivacyServiceConnection:]
  -[VSViewServiceRequestPreparationOperation setAvailabilityInfoCenter:]


VSMultilineButton : UIButton /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
  // instance methods
  -[VSMultilineButton initWithFrame:]
  -[VSMultilineButton dealloc]
  -[VSMultilineButton setHighlighted:]
  -[VSMultilineButton drawRect:]
  -[VSMultilineButton intrinsicContentSize]
  -[VSMultilineButton sizeThatFits:]
  -[VSMultilineButton tintColorDidChange]
  -[VSMultilineButton layoutSubviews]
  -[VSMultilineButton initWithCoder:]
  -[VSMultilineButton _updateTitleTextColor]


VSWebAuthenticationTemplateElement : IKViewElement /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  VSMessagePortFeature *messagePort

  // class methods
  +[VSWebAuthenticationTemplateElement supportedFeatures]

  // instance methods
  -[VSWebAuthenticationTemplateElement .cxx_destruct]
  -[VSWebAuthenticationTemplateElement initWithDOMElement:parent:elementFactory:]
  -[VSWebAuthenticationTemplateElement messagePort]


VSJSMessagePort : IKJSObject /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <VSJSMessagePort>
 @property  <VSJSMessagePortDelegate> *delegate

  // instance methods
  -[VSJSMessagePort .cxx_destruct]
  -[VSJSMessagePort setDelegate:]
  -[VSJSMessagePort delegate]
  -[VSJSMessagePort postMessage:]


VSMessagePortFeature : NSObject /usr/lib/libSystem.B.dylib <VSJSMessagePortDelegate, IKDOMFeature>
 @property  <VSMessagePortFeatureDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *featureName
 @property  IKAppContext *appContext

  // class methods
  +[VSMessagePortFeature makeFeatureJSObjectForFeature:]

  // instance methods
  -[VSMessagePortFeature .cxx_destruct]
  -[VSMessagePortFeature appContext]
  -[VSMessagePortFeature setDelegate:]
  -[VSMessagePortFeature delegate]
  -[VSMessagePortFeature featureName]
  -[VSMessagePortFeature initWithDOMNode:featureName:]
  -[VSMessagePortFeature messagePort:didReceiveMessage:]


VSWebAuthenticationViewModel : VSViewModel
 @property  NSURL *sourceURL
 @property  VSMessageQueue *messagesToWeb
 @property  VSMessageQueue *messagesFromWeb

  // instance methods
  -[VSWebAuthenticationViewModel setSourceURL:]
  -[VSWebAuthenticationViewModel init]
  -[VSWebAuthenticationViewModel sourceURL]
  -[VSWebAuthenticationViewModel .cxx_destruct]
  -[VSWebAuthenticationViewModel messagesToWeb]
  -[VSWebAuthenticationViewModel messagesFromWeb]


VSAppDeviceConfig : NSObject /usr/lib/libSystem.B.dylib <IKAppDeviceConfig>
 @property  NSOperationQueue *privateQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSAppDeviceConfig preferredVideoFormat]
  -[VSAppDeviceConfig timeZone]
  -[VSAppDeviceConfig init]
  -[VSAppDeviceConfig screenSize]
  -[VSAppDeviceConfig .cxx_destruct]
  -[VSAppDeviceConfig setPrivateQueue:]
  -[VSAppDeviceConfig systemLanguage]
  -[VSAppDeviceConfig privateQueue]
  -[VSAppDeviceConfig preferredVideoPreviewFormat]
  -[VSAppDeviceConfig isTimeZoneSet]
  -[VSAppDeviceConfig storeFrontCountryCode]


VSTwoFactorEntryAppDocumentController : VSAppDocumentController <VSTwoFactorEntryViewModelDelegate>
 @property  NSMutableArray *buttonElements
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSTwoFactorEntryAppDocumentController .cxx_destruct]
  -[VSTwoFactorEntryAppDocumentController observeValueForKeyPath:ofObject:change:context:]
  -[VSTwoFactorEntryAppDocumentController _stopObservingViewModel:]
  -[VSTwoFactorEntryAppDocumentController _startObservingViewModel:]
  -[VSTwoFactorEntryAppDocumentController buttonElements]
  -[VSTwoFactorEntryAppDocumentController setButtonElements:]
  -[VSTwoFactorEntryAppDocumentController _newViewModel]
  -[VSTwoFactorEntryAppDocumentController _updateViewModel:error:]
  -[VSTwoFactorEntryAppDocumentController _updateTwoFactorEntryViewModel:withTemplate:error:]
  -[VSTwoFactorEntryAppDocumentController twoFactorEntryViewModel:didPressButtonAtIndex:]


VSSAMLRequestFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[VSSAMLRequestFactory authNRequestWithResponse:forced:error:]
  +[VSSAMLRequestFactory attributeQueryWithAttributeNames:channelID:authNResponse:error:]
  +[VSSAMLRequestFactory logoutRequestWithError:]


VSJSAlertAction : IKJSObject /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <VSJSAlertAction>
 @property  NSString *title
 @property  NSString *style
 @property  JSValue *callback

  // instance methods
  -[VSJSAlertAction callback]
  -[VSJSAlertAction init]
  -[VSJSAlertAction .cxx_destruct]
  -[VSJSAlertAction setTitle:]
  -[VSJSAlertAction title]
  -[VSJSAlertAction setCallback:]
  -[VSJSAlertAction setStyle:]
  -[VSJSAlertAction style]


VSJSAlert : IKJSObject /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <VSJSAlert>
 @property  NSString *title
 @property  NSString *message
 @property  NSArray *actions

  // instance methods
  -[VSJSAlert actions]
  -[VSJSAlert message]
  -[VSJSAlert setActions:]
  -[VSJSAlert init]
  -[VSJSAlert setMessage:]
  -[VSJSAlert .cxx_destruct]
  -[VSJSAlert setTitle:]
  -[VSJSAlert title]


VSAppSettingsViewModel : NSObject /usr/lib/libSystem.B.dylib <LSApplicationWorkspaceObserverProtocol>
 @property  long long installState
 @property  long long privacyState
 @property  UIImage *icon
 @property  NSString *displayName
 @property  VSPrivacyFacade *privacyFacade
 @property  LSApplicationWorkspace *workspace
 @property  int registrationToken
 @property  VSRestrictionsCenter *restrictionsCenter
 @property  ^{__CFBundle=} bundle
 @property  VSAppDescription *appDescription
 @property  NSString *buyParams
 @property  VSOptional *voucher
 @property  NSString *adamID
 @property  NSString *bundleID
 @property  NSURL *appStoreURL
 @property  NSString *storeName
 @property  NSString *installationTitle
 @property  NSString *unavailableTitle
 @property  NSString *launchAppTitle
 @property  BOOL canChangePrivacyAccess
 @property  BOOL accessGranted
 @property  BOOL canRevokeVoucher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSAppSettingsViewModel keyPathsForValuesAffectingAccessGranted]

  // instance methods
  -[VSAppSettingsViewModel setVoucher:]
  -[VSAppSettingsViewModel installState]
  -[VSAppSettingsViewModel bundle]
  -[VSAppSettingsViewModel setInstallState:]
  -[VSAppSettingsViewModel appBundleIDs]
  -[VSAppSettingsViewModel applicationsDidFailToUninstall:]
  -[VSAppSettingsViewModel init]
  -[VSAppSettingsViewModel dealloc]
  -[VSAppSettingsViewModel setRegistrationToken:]
  -[VSAppSettingsViewModel .cxx_destruct]
  -[VSAppSettingsViewModel name]
  -[VSAppSettingsViewModel icon]
  -[VSAppSettingsViewModel setIcon:]
  -[VSAppSettingsViewModel applicationsWillUninstall:]
  -[VSAppSettingsViewModel buyParams]
  -[VSAppSettingsViewModel setDisplayName:]
  -[VSAppSettingsViewModel applicationsDidInstall:]
  -[VSAppSettingsViewModel initWithApplicationWorkspace:]
  -[VSAppSettingsViewModel voucher]
  -[VSAppSettingsViewModel applicationsDidFailToInstall:]
  -[VSAppSettingsViewModel setBundle:]
  -[VSAppSettingsViewModel setWorkspace:]
  -[VSAppSettingsViewModel adamID]
  -[VSAppSettingsViewModel registrationToken]
  -[VSAppSettingsViewModel setBuyParams:]
  -[VSAppSettingsViewModel isAccessGranted]
  -[VSAppSettingsViewModel applicationsDidUninstall:]
  -[VSAppSettingsViewModel launchApp]
  -[VSAppSettingsViewModel displayName]
  -[VSAppSettingsViewModel appStoreURL]
  -[VSAppSettingsViewModel bundleID]
  -[VSAppSettingsViewModel applicationsWillInstall:]
  -[VSAppSettingsViewModel storeName]
  -[VSAppSettingsViewModel workspace]
  -[VSAppSettingsViewModel appAdamIDs]
  -[VSAppSettingsViewModel appIconURLForSize:]
  -[VSAppSettingsViewModel appDescription]
  -[VSAppSettingsViewModel setAppDescription:]
  -[VSAppSettingsViewModel privacyFacade]
  -[VSAppSettingsViewModel iconURLForSize:]
  -[VSAppSettingsViewModel _updatePrivacyState]
  -[VSAppSettingsViewModel initWithBundle:restrictionsCenter:privacyFacade:]
  -[VSAppSettingsViewModel setPrivacyState:]
  -[VSAppSettingsViewModel privacyState]
  -[VSAppSettingsViewModel restrictionsCenter]
  -[VSAppSettingsViewModel _grantPrivacyAccess]
  -[VSAppSettingsViewModel _denyPrivacyAccess]
  -[VSAppSettingsViewModel canChangePrivacyAccess]
  -[VSAppSettingsViewModel initWithBundle:restrictionsCenter:privacyFacade:adamID:]
  -[VSAppSettingsViewModel initWithAppDescription:privacyVoucher:restrictionsCenter:privacyFacade:]
  -[VSAppSettingsViewModel installationTitle]
  -[VSAppSettingsViewModel unavailableTitle]
  -[VSAppSettingsViewModel launchAppTitle]
  -[VSAppSettingsViewModel canRevokeVoucher]
  -[VSAppSettingsViewModel revokeVoucher]
  -[VSAppSettingsViewModel installApp]
  -[VSAppSettingsViewModel setAccessGranted:]
  -[VSAppSettingsViewModel setPrivacyFacade:]
  -[VSAppSettingsViewModel setRestrictionsCenter:]


VSAutoAuthenticationAppDocumentController : VSAppDocumentController <VSAutoAuthenticationViewModelDelegate>
 @property  IKViewElement *buttonLockupElement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSAutoAuthenticationAppDocumentController .cxx_destruct]
  -[VSAutoAuthenticationAppDocumentController _newViewModel]
  -[VSAutoAuthenticationAppDocumentController _updateViewModel:error:]
  -[VSAutoAuthenticationAppDocumentController _autoAuthenticationViewModelWithViewModel:]
  -[VSAutoAuthenticationAppDocumentController _updateAutoAuthenticationViewModel:error:]
  -[VSAutoAuthenticationAppDocumentController buttonLockupElement]
  -[VSAutoAuthenticationAppDocumentController _updateAutoAuthenticationViewModel:withTemplate:]
  -[VSAutoAuthenticationAppDocumentController setButtonLockupElement:]
  -[VSAutoAuthenticationAppDocumentController autoAuthenticationViewModelDidManualSignInButton:]


VSDigitView : UIView /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
 @property  UILabel *label

  // instance methods
  -[VSDigitView initWithFrame:]
  -[VSDigitView .cxx_destruct]
  -[VSDigitView label]
  -[VSDigitView intrinsicContentSize]
  -[VSDigitView setLabel:]


VSTwoFactorDigitView : UIControl /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI <UIKeyInput, UITextInputTraits>
 @property  NSArray *digits
 @property  <VSTwoFactorDigitViewDelegate> *delegate
 @property  unsigned long digitCount
 @property  NSString *text
 @property  BOOL hasText
 @property  long long autocapitalizationType
 @property  long long autocorrectionType
 @property  long long spellCheckingType
 @property  long long smartQuotesType
 @property  long long smartDashesType
 @property  long long smartInsertDeleteType
 @property  long long keyboardType
 @property  long long keyboardAppearance
 @property  long long returnKeyType
 @property  BOOL enablesReturnKeyAutomatically
 @property  BOOL secureTextEntry
 @property  NSString *textContentType
 @property  UITextInputPasswordRules *passwordRules
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSTwoFactorDigitView setAutocapitalizationType:]
  -[VSTwoFactorDigitView keyboardType]
  -[VSTwoFactorDigitView deleteBackward]
  -[VSTwoFactorDigitView insertText:]
  -[VSTwoFactorDigitView setTextContentType:]
  -[VSTwoFactorDigitView autocapitalizationType]
  -[VSTwoFactorDigitView setReturnKeyType:]
  -[VSTwoFactorDigitView returnKeyType]
  -[VSTwoFactorDigitView setKeyboardType:]
  -[VSTwoFactorDigitView hasText]
  -[VSTwoFactorDigitView text]
  -[VSTwoFactorDigitView .cxx_destruct]
  -[VSTwoFactorDigitView canBecomeFirstResponder]
  -[VSTwoFactorDigitView onTouchUpInside:]
  -[VSTwoFactorDigitView digits]
  -[VSTwoFactorDigitView textContentType]
  -[VSTwoFactorDigitView setDelegate:]
  -[VSTwoFactorDigitView setDigits:]
  -[VSTwoFactorDigitView delegate]
  -[VSTwoFactorDigitView setText:]
  -[VSTwoFactorDigitView initWithDigitCount:]
  -[VSTwoFactorDigitView setupDigitViews]
  -[VSTwoFactorDigitView digitCount]


VSOnboardingInfoCenter : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *localizedButtonTitle

  // instance methods
  -[VSOnboardingInfoCenter localizedButtonTitle]
  -[VSOnboardingInfoCenter presentDetailsFromViewController:]
  -[VSOnboardingInfoCenter tvProviderPrivacyButtonViewController]
  -[VSOnboardingInfoCenter tvAppPrivacyButtonViewController]


VSTwoFactorEntryViewController_iOS : UIViewController /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI <UIScrollViewDelegate, VSTwoFactorDigitViewDelegate, VSTwoFactorEntryViewController>
 @property  UIBarButtonItem *verifyButton
 @property  UIScrollView *scrollView
 @property  VSTwoFactorDigitView *digitView
 @property  NSArray *buttons
 @property  VSIdentityProviderLogoView *logoView
 @property  VSFontCenter *fontCenter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  VSTwoFactorEntryViewModel *viewModel
 @property  <VSAuthenticationViewControllerDelegate> *delegate
 @property  BOOL cancellationAllowed
 @property  {CGSize=dd} preferredLogoSize

  // instance methods
  -[VSTwoFactorEntryViewController_iOS viewDidLoad]
  -[VSTwoFactorEntryViewController_iOS buttons]
  -[VSTwoFactorEntryViewController_iOS setButtons:]
  -[VSTwoFactorEntryViewController_iOS dealloc]
  -[VSTwoFactorEntryViewController_iOS buttonPressed:]
  -[VSTwoFactorEntryViewController_iOS .cxx_destruct]
  -[VSTwoFactorEntryViewController_iOS scrollView]
  -[VSTwoFactorEntryViewController_iOS viewModel]
  -[VSTwoFactorEntryViewController_iOS initWithNibName:bundle:]
  -[VSTwoFactorEntryViewController_iOS traitCollectionDidChange:]
  -[VSTwoFactorEntryViewController_iOS viewDidAppear:]
  -[VSTwoFactorEntryViewController_iOS setScrollView:]
  -[VSTwoFactorEntryViewController_iOS observeValueForKeyPath:ofObject:change:context:]
  -[VSTwoFactorEntryViewController_iOS scrollViewDidScroll:]
  -[VSTwoFactorEntryViewController_iOS viewWillAppear:]
  -[VSTwoFactorEntryViewController_iOS setDelegate:]
  -[VSTwoFactorEntryViewController_iOS viewDidDisappear:]
  -[VSTwoFactorEntryViewController_iOS logoView]
  -[VSTwoFactorEntryViewController_iOS viewWillDisappear:]
  -[VSTwoFactorEntryViewController_iOS setViewModel:]
  -[VSTwoFactorEntryViewController_iOS delegate]
  -[VSTwoFactorEntryViewController_iOS setLogoView:]
  -[VSTwoFactorEntryViewController_iOS fontCenter]
  -[VSTwoFactorEntryViewController_iOS setFontCenter:]
  -[VSTwoFactorEntryViewController_iOS isCancellationAllowed]
  -[VSTwoFactorEntryViewController_iOS preferredLogoSize]
  -[VSTwoFactorEntryViewController_iOS setCancellationAllowed:]
  -[VSTwoFactorEntryViewController_iOS twoFactorDigitView:textDidChange:]
  -[VSTwoFactorEntryViewController_iOS stopObservingViewModel:]
  -[VSTwoFactorEntryViewController_iOS setDigitView:]
  -[VSTwoFactorEntryViewController_iOS digitView]
  -[VSTwoFactorEntryViewController_iOS verifyButtonPressed:]
  -[VSTwoFactorEntryViewController_iOS setVerifyButton:]
  -[VSTwoFactorEntryViewController_iOS startObservingViewModel:]
  -[VSTwoFactorEntryViewController_iOS verifyButton]


VSApplicationController : NSObject /usr/lib/libSystem.B.dylib <VSAppDocumentControllerDelegate, VSApplicationDelegate, VSStateMachineDelegate>
 @property  VSStateMachine *stateMachine
 @property  NSError *delegateError
 @property  NSError *onLaunchError
 @property  VSIdentityProvider *identityProvider
 @property  NSURL *fetchedURL
 @property  NSOperationQueue *privateQueue
 @property  VSApplication *application
 @property  VSApplicationControllerResponseHandler *responseHandler
 @property  VSAppDocumentController *appDocumentController
 @property  JSValue *applicationReadyCallback
 @property  BOOL applicationMustSelfValidate
 @property  BOOL allowUI
 @property  VSPreferences *preferences
 @property  <VSApplicationControllerDelegate> *delegate
 @property  NSString *accountProviderAuthenticationToken
 @property  VSAuditToken *auditToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSApplicationController setAuditToken:]
  -[VSApplicationController auditToken]
  -[VSApplicationController application]
  -[VSApplicationController setStateMachine:]
  -[VSApplicationController stateMachine]
  -[VSApplicationController init]
  -[VSApplicationController setPreferences:]
  -[VSApplicationController dealloc]
  -[VSApplicationController preferences]
  -[VSApplicationController .cxx_destruct]
  -[VSApplicationController setPrivateQueue:]
  -[VSApplicationController stop]
  -[VSApplicationController responseHandler]
  -[VSApplicationController privateQueue]
  -[VSApplicationController setDelegate:]
  -[VSApplicationController submitRequest:]
  -[VSApplicationController delegate]
  -[VSApplicationController setApplication:]
  -[VSApplicationController allowUI]
  -[VSApplicationController setResponseHandler:]
  -[VSApplicationController release]
  -[VSApplicationController start]
  -[VSApplicationController _presentAlert:]
  -[VSApplicationController _notifyDelegateWithBlock:]
  -[VSApplicationController identityProvider]
  -[VSApplicationController setIdentityProvider:]
  -[VSApplicationController accountProviderAuthenticationToken]
  -[VSApplicationController setAccountProviderAuthenticationToken:]
  -[VSApplicationController initWithIdentityProvider:]
  -[VSApplicationController setFetchedURL:]
  -[VSApplicationController setOnLaunchError:]
  -[VSApplicationController _bootURL]
  -[VSApplicationController _notifyDidStart]
  -[VSApplicationController delegateError]
  -[VSApplicationController onLaunchError]
  -[VSApplicationController _notifyStartDidFailWithError:]
  -[VSApplicationController setDelegateError:]
  -[VSApplicationController setAllowUI:]
  -[VSApplicationController _submitJavascriptRequest:forApplicationControllerRequest:]
  -[VSApplicationController _completeRequest:withResult:]
  -[VSApplicationController _makeJavascriptRequestForRequest:withCompletionHandler:]
  -[VSApplicationController _presentDocument:]
  -[VSApplicationController _beginAuthentication]
  -[VSApplicationController _cancelValidation]
  -[VSApplicationController applicationReadyCallback]
  -[VSApplicationController _applicationReadyWithSuccess:javascriptErrorValue:]
  -[VSApplicationController setApplicationReadyCallback:]
  -[VSApplicationController _applicationLaunchParams]
  -[VSApplicationController appDocumentController]
  -[VSApplicationController setAppDocumentController:]
  -[VSApplicationController applicationMustSelfValidate]
  -[VSApplicationController _notifyDidReceiveViewModel:]
  -[VSApplicationController _notifyDidReceiveViewModelError:]
  -[VSApplicationController _applicationControllerAlertForJavascriptAlert:]
  -[VSApplicationController _completeRequest:withJavascriptResponse:javascriptErrorValue:]
  -[VSApplicationController setApplicationMustSelfValidate:]
  -[VSApplicationController _errorForJavascriptErrorValueValue:withRequest:]
  -[VSApplicationController _notifyRequest:didCompleteWithResponse:]
  -[VSApplicationController _notifyRequest:didFailWithError:]
  -[VSApplicationController fetchedURL]
  -[VSApplicationController _javascriptRequestForRequest:withVerificationData:]
  -[VSApplicationController _makeJavaScriptRequest]
  -[VSApplicationController appDocumentController:didUpdateViewModel:]
  -[VSApplicationController appDocumentController:didFailToUpdateViewModelWithError:]
  -[VSApplicationController applicationDidStart:]
  -[VSApplicationController application:startDidFailWithError:]
  -[VSApplicationController application:evaluateAppJavascriptInContext:]
  -[VSApplicationController launchParamsForApplication:]
  -[VSApplicationController activeAppDocumentForApplication:]
  -[VSApplicationController transitionToWaitingForBootUrlState]
  -[VSApplicationController transitionToWaitingForBothLaunchCallbacksState]
  -[VSApplicationController transitionToReadyState]
  -[VSApplicationController transitionToNotifyingOfLaunchFailureState]
  -[VSApplicationController transitionToInvalidState]
  -[VSApplicationController showAuthenticationUserInterfaceWithAuthenticationToken:]
  -[VSApplicationController applicationStartSelfValidationWithAuthenticationToken:]


VSIdentityProviderResponse : NSObject /usr/lib/libSystem.B.dylib
 @property  VSAccountMetadata *accountMetadata
 @property  VSAccount *account
 @property  BOOL didCreateAccount
 @property  VSOptional *logoLoadOperation

  // instance methods
  -[VSIdentityProviderResponse init]
  -[VSIdentityProviderResponse setAccount:]
  -[VSIdentityProviderResponse account]
  -[VSIdentityProviderResponse .cxx_destruct]
  -[VSIdentityProviderResponse accountMetadata]
  -[VSIdentityProviderResponse setAccountMetadata:]
  -[VSIdentityProviderResponse setLogoLoadOperation:]
  -[VSIdentityProviderResponse logoLoadOperation]
  -[VSIdentityProviderResponse didCreateAccount]
  -[VSIdentityProviderResponse setDidCreateAccount:]


VSAppDocumentController : NSObject /usr/lib/libSystem.B.dylib <IKAppDocumentDelegate>
 @property  IKAppDocument *appDocument
 @property  VSViewModel *viewModel
 @property  NSError *viewModelError
 @property  IKViewElement *templateElement
 @property  <VSAppDocumentControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSAppDocumentController init]
  -[VSAppDocumentController dealloc]
  -[VSAppDocumentController .cxx_destruct]
  -[VSAppDocumentController viewModel]
  -[VSAppDocumentController observeValueForKeyPath:ofObject:change:context:]
  -[VSAppDocumentController setDelegate:]
  -[VSAppDocumentController setViewModel:]
  -[VSAppDocumentController delegate]
  -[VSAppDocumentController appDocument]
  -[VSAppDocumentController templateElement]
  -[VSAppDocumentController documentDidUpdate:]
  -[VSAppDocumentController documentNeedsUpdate:]
  -[VSAppDocumentController document:evaluateStyleMediaQuery:]
  -[VSAppDocumentController setTemplateElement:]
  -[VSAppDocumentController _stopObservingViewModel:]
  -[VSAppDocumentController _startObservingViewModel:]
  -[VSAppDocumentController setAppDocument:]
  -[VSAppDocumentController initWithAppDocument:]
  -[VSAppDocumentController _imageItemProviderWithImageElement:]
  -[VSAppDocumentController _newViewModel]
  -[VSAppDocumentController viewModelError]
  -[VSAppDocumentController _notiftyDidUpdateViewModel:]
  -[VSAppDocumentController setViewModelError:]
  -[VSAppDocumentController _notiftyDidFailToUpdateViewModelWithError:]
  -[VSAppDocumentController _updateViewModel:WithError:]


VSFeaturedIdentityProviderLimitingOperation : VSAsyncOperation /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
 @property  VSStoreURLBag *bag
 @property  NSArray *unlimitedIdentityProviders
 @property  VSOptional *result

  // instance methods
  -[VSFeaturedIdentityProviderLimitingOperation result]
  -[VSFeaturedIdentityProviderLimitingOperation init]
  -[VSFeaturedIdentityProviderLimitingOperation .cxx_destruct]
  -[VSFeaturedIdentityProviderLimitingOperation setBag:]
  -[VSFeaturedIdentityProviderLimitingOperation bag]
  -[VSFeaturedIdentityProviderLimitingOperation setResult:]
  -[VSFeaturedIdentityProviderLimitingOperation executionDidBegin]
  -[VSFeaturedIdentityProviderLimitingOperation setUnlimitedIdentityProviders:]
  -[VSFeaturedIdentityProviderLimitingOperation unlimitedIdentityProviders]


VSImageDataValueTransformer : NSValueTransformer /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // class methods
  +[VSImageDataValueTransformer transformedValueClass]
  +[VSImageDataValueTransformer allowsReverseTransformation]

  // instance methods
  -[VSImageDataValueTransformer transformedValue:]
  -[VSImageDataValueTransformer reverseTransformedValue:]


VSSearchBarDelegate : NSObject /usr/lib/libSystem.B.dylib <UISearchBarDelegate>
 @property  NSString *text
 @property  UISearchBar *searchBar
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSSearchBarDelegate searchBar]
  -[VSSearchBarDelegate setSearchBar:]
  -[VSSearchBarDelegate init]
  -[VSSearchBarDelegate text]
  -[VSSearchBarDelegate .cxx_destruct]
  -[VSSearchBarDelegate searchBar:textDidChange:]
  -[VSSearchBarDelegate setText:]


VSCredentialEntryAppDocumentController : VSAppDocumentController <VSCredentialEntryViewModelDelegate, VSIKItemGroupDelegate>
 @property  VSIKItemGroupElement *pickerElement
 @property  NSArray *buttonElements
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSCredentialEntryAppDocumentController .cxx_destruct]
  -[VSCredentialEntryAppDocumentController observeValueForKeyPath:ofObject:change:context:]
  -[VSCredentialEntryAppDocumentController _stopObservingViewModel:]
  -[VSCredentialEntryAppDocumentController _startObservingViewModel:]
  -[VSCredentialEntryAppDocumentController buttonElements]
  -[VSCredentialEntryAppDocumentController setButtonElements:]
  -[VSCredentialEntryAppDocumentController itemGroup:selectedItemIndexDidChange:]
  -[VSCredentialEntryAppDocumentController _newViewModel]
  -[VSCredentialEntryAppDocumentController _updateViewModel:error:]
  -[VSCredentialEntryAppDocumentController _credentialEntryViewModelWithViewModel:]
  -[VSCredentialEntryAppDocumentController _updateCredentialEntryViewModel:error:]
  -[VSCredentialEntryAppDocumentController _updateCredentialEntryViewModel:withTemplate:error:]
  -[VSCredentialEntryAppDocumentController pickerElement]
  -[VSCredentialEntryAppDocumentController setPickerElement:]
  -[VSCredentialEntryAppDocumentController viewModel:buttonTappedAtIndex:]
  -[VSCredentialEntryAppDocumentController viewModel:pickerDidSelectRow:]


VSPSPickerTableViewCell : PSTableCell /usr/lib/libobjc.A.dylib <UIPickerViewDataSource, UIPickerViewDelegate>
 @property  UIPickerView *pickerView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSPSPickerTableViewCell preferredHeight]

  // instance methods
  -[VSPSPickerTableViewCell initWithStyle:reuseIdentifier:specifier:]
  -[VSPSPickerTableViewCell .cxx_destruct]
  -[VSPSPickerTableViewCell numberOfComponentsInPickerView:]
  -[VSPSPickerTableViewCell pickerView:numberOfRowsInComponent:]
  -[VSPSPickerTableViewCell pickerView:titleForRow:forComponent:]
  -[VSPSPickerTableViewCell pickerView:didSelectRow:inComponent:]
  -[VSPSPickerTableViewCell pickerView]
  -[VSPSPickerTableViewCell targetAsDelegate]


VSJSResponsePayload : IKJSObject /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <VSJSResponsePayload, NSCopying>
 @property  NSString *authN
 @property  NSString *username
 @property  NSDate *expirationDate
 @property  NSString *userMetadata
 @property  NSString *logout
 @property  NSArray *userChannelList
 @property  NSString *authenticationScheme
 @property  NSString *statusCode
 @property  NSNumber *expectedAction
 @property  NSArray *subscriptions
 @property  NSArray *clearSubscriptions
 @property  NSString *appBundleIdentifier

  // instance methods
  -[VSJSResponsePayload setSubscriptions:]
  -[VSJSResponsePayload subscriptions]
  -[VSJSResponsePayload copyWithZone:]
  -[VSJSResponsePayload setUsername:]
  -[VSJSResponsePayload userMetadata]
  -[VSJSResponsePayload setUserMetadata:]
  -[VSJSResponsePayload init]
  -[VSJSResponsePayload username]
  -[VSJSResponsePayload logout]
  -[VSJSResponsePayload setExpirationDate:]
  -[VSJSResponsePayload .cxx_destruct]
  -[VSJSResponsePayload authN]
  -[VSJSResponsePayload setStatusCode:]
  -[VSJSResponsePayload statusCode]
  -[VSJSResponsePayload appBundleIdentifier]
  -[VSJSResponsePayload expirationDate]
  -[VSJSResponsePayload setLogout:]
  -[VSJSResponsePayload setAppBundleIdentifier:]
  -[VSJSResponsePayload authenticationScheme]
  -[VSJSResponsePayload setAuthenticationScheme:]
  -[VSJSResponsePayload clearSubscriptions]
  -[VSJSResponsePayload expectedAction]
  -[VSJSResponsePayload setAuthN:]
  -[VSJSResponsePayload userChannelList]
  -[VSJSResponsePayload setUserChannelList:]
  -[VSJSResponsePayload setExpectedAction:]
  -[VSJSResponsePayload setClearSubscriptions:]


VSStoreIdentityProviderResponseDictionaryValueTransformer : NSValueTransformer /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // class methods
  +[VSStoreIdentityProviderResponseDictionaryValueTransformer transformedValueClass]
  +[VSStoreIdentityProviderResponseDictionaryValueTransformer allowsReverseTransformation]

  // instance methods
  -[VSStoreIdentityProviderResponseDictionaryValueTransformer transformedValue:]


VSStoreIdentityProviderResponseValueTransformer : VSCompoundValueTransformer /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
  // instance methods
  -[VSStoreIdentityProviderResponseValueTransformer init]


VSJavaScriptDataValueTransformer : NSValueTransformer /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // class methods
  +[VSJavaScriptDataValueTransformer transformedValueClass]
  +[VSJavaScriptDataValueTransformer allowsReverseTransformation]

  // instance methods
  -[VSJavaScriptDataValueTransformer transformedValue:]
  -[VSJavaScriptDataValueTransformer reverseTransformedValue:]


VSViewControllerFactory : NSObject /usr/lib/libSystem.B.dylib
 @property  NSOperationQueue *privateQueue

  // class methods
  +[VSViewControllerFactory sharedFactory]

  // instance methods
  -[VSViewControllerFactory init]
  -[VSViewControllerFactory .cxx_destruct]
  -[VSViewControllerFactory loadingViewController]
  -[VSViewControllerFactory setPrivateQueue:]
  -[VSViewControllerFactory privateQueue]
  -[VSViewControllerFactory viewServiceRemoteViewControllerWithCompletion:]
  -[VSViewControllerFactory authenticationViewControllerForViewModel:]
  -[VSViewControllerFactory identityProviderPickerViewControllerWithIdentityProviders:]
  -[VSViewControllerFactory viewControllerToConfirmAccountDeletionForIdentityProviderDisplayName:preferredStyle:confirmationHandler:]
  -[VSViewControllerFactory viewControllerToConfirmDeveloperIdentityProviderDeletionWithConfirmationHandler:]
  -[VSViewControllerFactory viewControllerForUnsupportedProvider:withRequestingAppDisplayName:storage:acknowledgementHandler:]
  -[VSViewControllerFactory viewControllerForAppsSupportedByIdentityProvider:delegate:]
  -[VSViewControllerFactory viewControllerForPlaybackActivityReportingFromAppsWithBundleIDs:grantingVouchers:appleAccount:identityProvider:completionHandler:]


VSSetupFlowController : NSObject /usr/lib/libSystem.B.dylib <VSIdentityProviderPickerViewControllerDelegate, VSIdentityProviderViewControllerDelegate, VSRemoteNotifierDelegate, VSSupportedAppsViewControllerDelegate, VSIdentityProviderRequestManagerDelegate>
 @property  VSPreferences *preferences
 @property  VSPersistentStorage *storage
 @property  NSOperationQueue *privateQueue
 @property  VSRemoteNotifier *remoteNotifier
 @property  NSArray *freeOnBoardingBundleIDs
 @property  BOOL signingIn
 @property  VSAppDescription *appDescription
 @property  NSString *providerAccountUsername
 @property  BOOL isInSTBMode
 @property  VSIdentityProviderRequestManager *requestManager
 @property  BOOL notifyDelegateFromActivation
 @property  @? goingBackActivationCompletionBlock
 @property  VSDevice *currentDevice
 @property  VSAccountSerializationCenter *serializationCenter
 @property  <VSSetupFlowControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSSetupFlowController isInSTBMode]
  -[VSSetupFlowController init]
  -[VSSetupFlowController _didStartLoading]
  -[VSSetupFlowController setPreferences:]
  -[VSSetupFlowController dealloc]
  -[VSSetupFlowController preferences]
  -[VSSetupFlowController .cxx_destruct]
  -[VSSetupFlowController notNow]
  -[VSSetupFlowController setRemoteNotifier:]
  -[VSSetupFlowController setPrivateQueue:]
  -[VSSetupFlowController storage]
  -[VSSetupFlowController privateQueue]
  -[VSSetupFlowController currentDevice]
  -[VSSetupFlowController setCurrentDevice:]
  -[VSSetupFlowController setSigningIn:]
  -[VSSetupFlowController setStorage:]
  -[VSSetupFlowController setDelegate:]
  -[VSSetupFlowController remoteNotifier:didReceiveRemoteNotificationWithUserInfo:]
  -[VSSetupFlowController delegate]
  -[VSSetupFlowController requestManager]
  -[VSSetupFlowController _presentError:]
  -[VSSetupFlowController remoteNotifier]
  -[VSSetupFlowController appDescription]
  -[VSSetupFlowController setAppDescription:]
  -[VSSetupFlowController dismissIdentityProviderViewController:]
  -[VSSetupFlowController identityProviderViewControllerDidCancel:]
  -[VSSetupFlowController identityProviderViewController:didFinishRequest:withResult:]
  -[VSSetupFlowController identityProviderViewController:didAuthenticateAccount:forRequest:]
  -[VSSetupFlowController identityProviderRequestManager:finishedRequest:withResult:]
  -[VSSetupFlowController setRequestManager:]
  -[VSSetupFlowController _appleAccountDidChange:]
  -[VSSetupFlowController _startLoadingAfterOfferingOptions:endingUndoGrouping:arrivedViaNotNowButton:arrivedAfterSigningIn:goingBack:]
  -[VSSetupFlowController _presentViewController:completion:]
  -[VSSetupFlowController _finishAfterOfferingOptions:endingUndoGrouping:]
  -[VSSetupFlowController _requestAccessWithViewController:]
  -[VSSetupFlowController startSilentSigningInForSTBFromActivation:withCompletion:]
  -[VSSetupFlowController serializationCenter]
  -[VSSetupFlowController setFreeOnBoardingBundleIDs:]
  -[VSSetupFlowController providerAccountUsername]
  -[VSSetupFlowController setProviderAccountUsername:]
  -[VSSetupFlowController setIsInSTBMode:]
  -[VSSetupFlowController _offerAuthenticationForSTBProvider:msoAppDescription:providerAccountUsername:]
  -[VSSetupFlowController _offerAuthenticationForProvider:withSupportedAppsButton:msoAppDescription:]
  -[VSSetupFlowController _offerAuthenticationWithSupportedAppsButton:]
  -[VSSetupFlowController _obtainConsentForBundleIDs:vouchers:withAppleAccount:identityProvider:endingUndoGrouping:arrivedViaNotNowButton:arrivedAfterSigningIn:goingBack:]
  -[VSSetupFlowController isSigningIn]
  -[VSSetupFlowController _pickProviderWithViewController:]
  -[VSSetupFlowController markSTBProviderAppForInstallation:withAppPlacementPosition:]
  -[VSSetupFlowController finishSTBSuccessFlowForProvider:]
  -[VSSetupFlowController freeOnBoardingBundleIDs]
  -[VSSetupFlowController notNowWithIdentityProvider:]
  -[VSSetupFlowController signOutForNotNowFlowWithIdentityProvider:]
  -[VSSetupFlowController forceSignOutWithAccount:]
  -[VSSetupFlowController setNotifyDelegateFromActivation:]
  -[VSSetupFlowController setGoingBackActivationCompletionBlock:]
  -[VSSetupFlowController _getProviderWithUserTokenFromAllProviders:]
  -[VSSetupFlowController notifyDelegateFromActivation]
  -[VSSetupFlowController goingBackActivationCompletionBlock]
  -[VSSetupFlowController _offerFreeOnBoardingIfNeededAfterOfferingOptions:endingUndoGrouping:arrivedViaNotNowButton:arrivedAfterSigningIn:goingBack:]
  -[VSSetupFlowController performDismissalOfIdentityProviderViewController:]
  -[VSSetupFlowController _dismissViewController:completion:]
  -[VSSetupFlowController identityProviderPickerViewController:didPickIdentityProvider:]
  -[VSSetupFlowController supportedAppsViewControllerDidFinish:]
  -[VSSetupFlowController startLoadingWhenGoingBack:serializedAccountDataToImport:]
  -[VSSetupFlowController startSigningIn]
  -[VSSetupFlowController startSigningInForIdentityProvider:]
  -[VSSetupFlowController showSupportedApps]
  -[VSSetupFlowController setSerializationCenter:]


VSApplication : NSObject /usr/lib/libSystem.B.dylib <IKAppContextDelegate, VSStateMachineDelegate, IKApplication>
 @property  VSStateMachine *stateMachine
 @property  VSAppDeviceConfig *appDeviceConfig
 @property  IKAppContext *appContext
 @property  NSHTTPCookieStorage *cookieStorage
 @property  NSError *failureToStart
 @property  NSURL *bootURL
 @property  <VSApplicationDelegate> *delegate
 @property  VSAuditToken *auditToken
 @property  BOOL shouldAllowRemoteInspection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSApplication setAuditToken:]
  -[VSApplication appIdentifier]
  -[VSApplication auditToken]
  -[VSApplication setStateMachine:]
  -[VSApplication stateMachine]
  -[VSApplication init]
  -[VSApplication setCookieStorage:]
  -[VSApplication dealloc]
  -[VSApplication activeDocument]
  -[VSApplication .cxx_destruct]
  -[VSApplication vendorIdentifier]
  -[VSApplication stop]
  -[VSApplication appContext]
  -[VSApplication setDelegate:]
  -[VSApplication setAppContext:]
  -[VSApplication delegate]
  -[VSApplication appJSURL]
  -[VSApplication bootURL]
  -[VSApplication release]
  -[VSApplication start]
  -[VSApplication shouldIgnoreJSValidation]
  -[VSApplication localStorage]
  -[VSApplication vendorStorage]
  -[VSApplication userDefaultsStorage]
  -[VSApplication shouldAllowRemoteInspection]
  -[VSApplication appIsTrusted]
  -[VSApplication appLaunchParams]
  -[VSApplication viewElementRegistry]
  -[VSApplication deviceConfigForContext:]
  -[VSApplication objectForPlayer:]
  -[VSApplication objectForPlaylist:]
  -[VSApplication objectForMediaItem:]
  -[VSApplication appContext:evaluateAppJavaScriptInContext:]
  -[VSApplication appContext:validateDOMDocument:inContext:error:]
  -[VSApplication appContext:didStartWithOptions:]
  -[VSApplication appContext:didFailWithError:]
  -[VSApplication appContext:didStopWithOptions:]
  -[VSApplication xhrSessionConfigurationForContext:]
  -[VSApplication sourceApplicationBundleIdentifierForContext:]
  -[VSApplication sourceApplicationAuditTokenDataForContext:]
  -[VSApplication cookieStorage]
  -[VSApplication initWithBootURL:]
  -[VSApplication setShouldAllowRemoteInspection:]
  -[VSApplication sendErrorWithMessage:]
  -[VSApplication evaluate:completionHandler:]
  -[VSApplication appDocumentForDocument:completionHandler:]
  -[VSApplication transitionToReadyState]
  -[VSApplication transitionToInvalidState]
  -[VSApplication failureToStart]
  -[VSApplication setFailureToStart:]
  -[VSApplication appDeviceConfig]
  -[VSApplication transitionToStartingState]
  -[VSApplication transitionToNotifyingOfFailureToStartState]
  -[VSApplication transitionToStoppingState]
  -[VSApplication setAppDeviceConfig:]


VSTwoFactorEntryViewModel : VSCuratedViewModel
 @property  NSString *originalTwoFacorCode
 @property  VSExpressionEvaluator *buttonExpressionEvaluator
 @property  <VSTwoFactorEntryViewModelDelegate> *delegate
 @property  VSTwoFactorEntryTextField *twoFactorTextField
 @property  NSString *headerText
 @property  NSArray *buttons

  // instance methods
  -[VSTwoFactorEntryViewModel init]
  -[VSTwoFactorEntryViewModel buttons]
  -[VSTwoFactorEntryViewModel setButtons:]
  -[VSTwoFactorEntryViewModel .cxx_destruct]
  -[VSTwoFactorEntryViewModel headerText]
  -[VSTwoFactorEntryViewModel setHeaderText:]
  -[VSTwoFactorEntryViewModel setDelegate:]
  -[VSTwoFactorEntryViewModel delegate]
  -[VSTwoFactorEntryViewModel configureWithRequest:]
  -[VSTwoFactorEntryViewModel twoFactorTextField]
  -[VSTwoFactorEntryViewModel setTwoFactorTextField:]
  -[VSTwoFactorEntryViewModel buttonAtIndexWasPressed:]
  -[VSTwoFactorEntryViewModel setButtonExpressionEvaluator:]
  -[VSTwoFactorEntryViewModel setOriginalTwoFacorCode:]
  -[VSTwoFactorEntryViewModel originalTwoFacorCode]
  -[VSTwoFactorEntryViewModel buttonExpressionEvaluator]


VSTwoFactorEntryTextField : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *label
 @property  unsigned long expectedLength
 @property  BOOL autoShowKeyboard
 @property  NSString *text
 @property  long long keyboardType
 @property  long long autocapitalizationType
 @property  long long autocorrectionType
 @property  long long returnKeyType

  // instance methods
  -[VSTwoFactorEntryTextField setAutocapitalizationType:]
  -[VSTwoFactorEntryTextField keyboardType]
  -[VSTwoFactorEntryTextField setAutocorrectionType:]
  -[VSTwoFactorEntryTextField autocapitalizationType]
  -[VSTwoFactorEntryTextField setReturnKeyType:]
  -[VSTwoFactorEntryTextField returnKeyType]
  -[VSTwoFactorEntryTextField setKeyboardType:]
  -[VSTwoFactorEntryTextField init]
  -[VSTwoFactorEntryTextField text]
  -[VSTwoFactorEntryTextField .cxx_destruct]
  -[VSTwoFactorEntryTextField label]
  -[VSTwoFactorEntryTextField setLabel:]
  -[VSTwoFactorEntryTextField setExpectedLength:]
  -[VSTwoFactorEntryTextField expectedLength]
  -[VSTwoFactorEntryTextField autocorrectionType]
  -[VSTwoFactorEntryTextField setText:]
  -[VSTwoFactorEntryTextField setAutoShowKeyboard:]
  -[VSTwoFactorEntryTextField autoShowKeyboard]


VSTwoFactorEntryButton : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *text
 @property  NSString *type

  // instance methods
  -[VSTwoFactorEntryButton init]
  -[VSTwoFactorEntryButton setType:]
  -[VSTwoFactorEntryButton text]
  -[VSTwoFactorEntryButton .cxx_destruct]
  -[VSTwoFactorEntryButton type]
  -[VSTwoFactorEntryButton setText:]


VSApplicationControllerResponseHandler : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[VSApplicationControllerResponseHandler handleJavascriptResponse:requestType:completionHandler:]
  -[VSApplicationControllerResponseHandler _accountAuthenticationWithJavascriptResponse:error:]
  -[VSApplicationControllerResponseHandler _handleJavascriptResponseInternal:requestType:accountAuthentication:completionHandler:]
  -[VSApplicationControllerResponseHandler _parseSAMLResponseString:error:]
  -[VSApplicationControllerResponseHandler _setSubscriptionDataWithResponse:forJavascriptResponse:]


VSIdentityProviderRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  long long type
 @property  NSString *requestingAppDisplayName
 @property  NSString *requestingAppAdamID
 @property  VSAccount *account
 @property  VSPersistentStorage *storage
 @property  VSOptional *accountMetadataRequest
 @property  NSString *accountProviderAuthenticationToken
 @property  BOOL forceAuthentication
 @property  BOOL allowsUI
 @property  BOOL requiresUI

  // class methods
  +[VSIdentityProviderRequest makeAccountRequestWithStorage:]
  +[VSIdentityProviderRequest deleteAccountRequestWithAccount:storage:]
  +[VSIdentityProviderRequest silentMakeAccountRequestWithStorage:]
  +[VSIdentityProviderRequest accountMetadataRequestWithAccount:storage:accountMetadataRequest:requestingAppDisplayName:requestingAppAdamID:accountProviderAuthenticationToken:]
  +[VSIdentityProviderRequest STBOptOutRequestWithStorage:]

  // instance methods
  -[VSIdentityProviderRequest init]
  -[VSIdentityProviderRequest setAccount:]
  -[VSIdentityProviderRequest account]
  -[VSIdentityProviderRequest setType:]
  -[VSIdentityProviderRequest .cxx_destruct]
  -[VSIdentityProviderRequest type]
  -[VSIdentityProviderRequest storage]
  -[VSIdentityProviderRequest setStorage:]
  -[VSIdentityProviderRequest setAccountMetadataRequest:]
  -[VSIdentityProviderRequest accountMetadataRequest]
  -[VSIdentityProviderRequest accountProviderAuthenticationToken]
  -[VSIdentityProviderRequest requestingAppDisplayName]
  -[VSIdentityProviderRequest setRequestingAppDisplayName:]
  -[VSIdentityProviderRequest requestingAppAdamID]
  -[VSIdentityProviderRequest setRequestingAppAdamID:]
  -[VSIdentityProviderRequest forceAuthentication]
  -[VSIdentityProviderRequest setAccountProviderAuthenticationToken:]
  -[VSIdentityProviderRequest _initWithRequestType:account:storage:]
  -[VSIdentityProviderRequest requiresUI]
  -[VSIdentityProviderRequest allowsUI]


VSIdentityProviderFetchOperation : VSAsyncOperation /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
 @property  NSOperationQueue *privateQueue
 @property  NSString *identityProviderID
 @property  BOOL fetchFromStoreOnly
 @property  VSOptional *result
 @property  NSString *identityProviderUniqueID
 @property  VSAuditToken *auditToken

  // instance methods
  -[VSIdentityProviderFetchOperation setAuditToken:]
  -[VSIdentityProviderFetchOperation auditToken]
  -[VSIdentityProviderFetchOperation result]
  -[VSIdentityProviderFetchOperation init]
  -[VSIdentityProviderFetchOperation .cxx_destruct]
  -[VSIdentityProviderFetchOperation setPrivateQueue:]
  -[VSIdentityProviderFetchOperation cancel]
  -[VSIdentityProviderFetchOperation privateQueue]
  -[VSIdentityProviderFetchOperation setResult:]
  -[VSIdentityProviderFetchOperation executionDidBegin]
  -[VSIdentityProviderFetchOperation setIdentityProviderID:]
  -[VSIdentityProviderFetchOperation identityProviderID]
  -[VSIdentityProviderFetchOperation initWithIdentityProviderID:]
  -[VSIdentityProviderFetchOperation setFetchFromStoreOnly:]
  -[VSIdentityProviderFetchOperation fetchFromStoreOnly]
  -[VSIdentityProviderFetchOperation _fetchAllOperation]
  -[VSIdentityProviderFetchOperation identityProviderUniqueID]
  -[VSIdentityProviderFetchOperation initWithIdentityProviderUniqueID:]


VSViewServiceViewController : UIViewController /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI <VSViewServiceProtocol, VSIdentityProviderPickerViewControllerDelegate, VSIdentityProviderViewControllerDelegate, VSRemoteNotifierDelegate>
 @property  VSPersistentStorage *storage
 @property  VSRestrictionsCenter *restrictionsCenter
 @property  VSRemoteNotifier *remoteNotifier
 @property  VSPreferences *preferences
 @property  NSOperationQueue *privateQueue
 @property  VSOptional *currentRequest
 @property  VSOptional *currentRequestID
 @property  BOOL presentedInHost
 @property  BOOL identityProviderPickerRequired
 @property  BOOL didAuthenticateAccount
 @property  UINavigationController *navController
 @property  VSAuditToken *auditToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSViewServiceViewController _remoteViewControllerInterface]
  +[VSViewServiceViewController _exportedInterface]

  // instance methods
  -[VSViewServiceViewController setAuditToken:]
  -[VSViewServiceViewController auditToken]
  -[VSViewServiceViewController setPreferences:]
  -[VSViewServiceViewController dealloc]
  -[VSViewServiceViewController preferences]
  -[VSViewServiceViewController currentRequestID]
  -[VSViewServiceViewController setCurrentRequestID:]
  -[VSViewServiceViewController .cxx_destruct]
  -[VSViewServiceViewController currentRequest]
  -[VSViewServiceViewController navController]
  -[VSViewServiceViewController setCurrentRequest:]
  -[VSViewServiceViewController _willAppearInRemoteViewController]
  -[VSViewServiceViewController setRemoteNotifier:]
  -[VSViewServiceViewController setPrivateQueue:]
  -[VSViewServiceViewController storage]
  -[VSViewServiceViewController initWithNibName:bundle:]
  -[VSViewServiceViewController privateQueue]
  -[VSViewServiceViewController setStorage:]
  -[VSViewServiceViewController remoteNotifier:didReceiveRemoteNotificationWithUserInfo:]
  -[VSViewServiceViewController setNavController:]
  -[VSViewServiceViewController remoteNotifier]
  -[VSViewServiceViewController _performRequest:withIdentifier:]
  -[VSViewServiceViewController _viewControllerWasDismissed]
  -[VSViewServiceViewController _request:didFailWithError:]
  -[VSViewServiceViewController dismissIdentityProviderViewController:]
  -[VSViewServiceViewController identityProviderViewControllerDidCancel:]
  -[VSViewServiceViewController identityProviderViewControllerDidFinishLoading:]
  -[VSViewServiceViewController identityProviderViewController:didFinishRequest:withResult:]
  -[VSViewServiceViewController identityProviderViewController:didAuthenticateAccount:forRequest:]
  -[VSViewServiceViewController restrictionsCenter]
  -[VSViewServiceViewController setRestrictionsCenter:]
  -[VSViewServiceViewController identityProviderPickerViewControllerDidCancel:]
  -[VSViewServiceViewController identityProviderPickerViewController:didPickIdentityProvider:]
  -[VSViewServiceViewController identityProviderPickerViewControllerDidPickAdditionalIdentityProviders:]
  -[VSViewServiceViewController _performRequestInternal:withID:identityProviders:accounts:]
  -[VSViewServiceViewController setDidAuthenticateAccount:]
  -[VSViewServiceViewController setIdentityProviderPickerRequired:]
  -[VSViewServiceViewController _requestDidFailWithError:]
  -[VSViewServiceViewController _performRequestWithIdentityProvider:account:]
  -[VSViewServiceViewController _didDetermineIdentityProvider:withPickerViewController:]
  -[VSViewServiceViewController _showIdentityProviderPickerViewControllerWithIdentityProviders:]
  -[VSViewServiceViewController _completeRequestWithResponse:]
  -[VSViewServiceViewController _identityProviderRequestForViewServiceRequest:withAccount:]
  -[VSViewServiceViewController isIdentityProviderPickerRequired]
  -[VSViewServiceViewController _determinePreAuthAppIsAuthorized:completion:]
  -[VSViewServiceViewController _presentInHostIfNecessary]
  -[VSViewServiceViewController _viewControllerHost]
  -[VSViewServiceViewController isPresentedInHost]
  -[VSViewServiceViewController setPresentedInHost:]
  -[VSViewServiceViewController _viewServiceResponseWithIdentityProviderResponse:]
  -[VSViewServiceViewController _dismissInHostIfNecessary]
  -[VSViewServiceViewController _completeRequest:withResponse:]
  -[VSViewServiceViewController _didCancelRequest]
  -[VSViewServiceViewController _completeRequestWithResponse:fromIdentityProvider:]
  -[VSViewServiceViewController didAuthenticateAccount]


VSFontCenter : NSObject /usr/lib/libSystem.B.dylib
 @property  UIFont *title0Font
 @property  UIFont *title1Font
 @property  UIFont *title2Font
 @property  UIFont *title3Font
 @property  UIFont *headlineFont
 @property  UIFont *subheadlineFont
 @property  UIFont *bodyFont
 @property  UIFont *calloutFont
 @property  UIFont *footnoteFont
 @property  UIFont *caption1Font
 @property  UIFont *caption2Font
 @property  UIFont *appAgeRatingFont
 @property  <UITraitEnvironment> *traitEnvironment
 @property  UITraitCollection *traitCollection

  // instance methods
  -[VSFontCenter traitCollection]
  -[VSFontCenter _contentSizeCategoryDidChange:]
  -[VSFontCenter setTraitCollection:]
  -[VSFontCenter init]
  -[VSFontCenter bodyFont]
  -[VSFontCenter calloutFont]
  -[VSFontCenter setBodyFont:]
  -[VSFontCenter dealloc]
  -[VSFontCenter .cxx_destruct]
  -[VSFontCenter footnoteFont]
  -[VSFontCenter traitEnvironment]
  -[VSFontCenter setHeadlineFont:]
  -[VSFontCenter headlineFont]
  -[VSFontCenter initWithTraitEnvironment:]
  -[VSFontCenter _updateFontsWithTraitCollection:]
  -[VSFontCenter setTitle0Font:]
  -[VSFontCenter setTitle1Font:]
  -[VSFontCenter setTitle2Font:]
  -[VSFontCenter setTitle3Font:]
  -[VSFontCenter setSubheadlineFont:]
  -[VSFontCenter setCalloutFont:]
  -[VSFontCenter setFootnoteFont:]
  -[VSFontCenter setCaption1Font:]
  -[VSFontCenter setCaption2Font:]
  -[VSFontCenter setAppAgeRatingFont:]
  -[VSFontCenter setTraitEnvironment:]
  -[VSFontCenter title0Font]
  -[VSFontCenter title1Font]
  -[VSFontCenter title2Font]
  -[VSFontCenter title3Font]
  -[VSFontCenter subheadlineFont]
  -[VSFontCenter caption1Font]
  -[VSFontCenter caption2Font]
  -[VSFontCenter appAgeRatingFont]


VSWebAuthenticationViewController : UIViewController /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI <UIWebViewDelegate, UIWebViewPrivateDelegate, VSMessageQueueDelegate, VSWebAuthenticationViewController>
 @property  UIWebView *webView
 @property  UIActivityIndicatorView *activityIndicator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  VSWebAuthenticationViewModel *viewModel
 @property  <VSAuthenticationViewControllerDelegate> *delegate
 @property  BOOL cancellationAllowed
 @property  {CGSize=dd} preferredLogoSize

  // instance methods
  -[VSWebAuthenticationViewController viewDidLoad]
  -[VSWebAuthenticationViewController webView]
  -[VSWebAuthenticationViewController dealloc]
  -[VSWebAuthenticationViewController .cxx_destruct]
  -[VSWebAuthenticationViewController viewModel]
  -[VSWebAuthenticationViewController _sendMessage:]
  -[VSWebAuthenticationViewController setWebView:]
  -[VSWebAuthenticationViewController webView:shouldStartLoadWithRequest:navigationType:]
  -[VSWebAuthenticationViewController webViewDidStartLoad:]
  -[VSWebAuthenticationViewController webViewDidFinishLoad:]
  -[VSWebAuthenticationViewController uiWebView:resource:willSendRequest:redirectResponse:fromDataSource:]
  -[VSWebAuthenticationViewController uiWebView:didFirstLayoutInFrame:]
  -[VSWebAuthenticationViewController viewDidAppear:]
  -[VSWebAuthenticationViewController observeValueForKeyPath:ofObject:change:context:]
  -[VSWebAuthenticationViewController viewWillAppear:]
  -[VSWebAuthenticationViewController setDelegate:]
  -[VSWebAuthenticationViewController viewDidDisappear:]
  -[VSWebAuthenticationViewController viewWillDisappear:]
  -[VSWebAuthenticationViewController activityIndicator]
  -[VSWebAuthenticationViewController setViewModel:]
  -[VSWebAuthenticationViewController setActivityIndicator:]
  -[VSWebAuthenticationViewController delegate]
  -[VSWebAuthenticationViewController _cancelButtonPressed:]
  -[VSWebAuthenticationViewController _stopObservingViewModel:]
  -[VSWebAuthenticationViewController _startObservingViewModel:]
  -[VSWebAuthenticationViewController didAddMessagesToMessageQueue:]
  -[VSWebAuthenticationViewController isCancellationAllowed]
  -[VSWebAuthenticationViewController setCancellationAllowed:]
  -[VSWebAuthenticationViewController _sendMessages:]
  -[VSWebAuthenticationViewController _didBeginActivity]
  -[VSWebAuthenticationViewController _didEndActivity]
  -[VSWebAuthenticationViewController _retrieveMessages]
  -[VSWebAuthenticationViewController _canonicalRequestForRequest:]


VSJSSubscription : IKJSObject /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <VSJSSubscription, NSCopying>
 @property  NSString *bundleId
 @property  NSDate *expirationDate
 @property  long long accessLevel
 @property  NSArray *tierIdentifiers
 @property  NSString *billingIdentifier

  // class methods
  +[VSJSSubscription toVSSubscriptions:]

  // instance methods
  -[VSJSSubscription copyWithZone:]
  -[VSJSSubscription setBundleId:]
  -[VSJSSubscription init]
  -[VSJSSubscription setExpirationDate:]
  -[VSJSSubscription .cxx_destruct]
  -[VSJSSubscription setAccessLevel:]
  -[VSJSSubscription expirationDate]
  -[VSJSSubscription bundleId]
  -[VSJSSubscription accessLevel]
  -[VSJSSubscription setTierIdentifiers:]
  -[VSJSSubscription setBillingIdentifier:]
  -[VSJSSubscription billingIdentifier]
  -[VSJSSubscription tierIdentifiers]
  -[VSJSSubscription toVSSubscription]


VSIdentityProviderAlertAction : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *title
 @property  long long style
 @property  @? callback

  // instance methods
  -[VSIdentityProviderAlertAction callback]
  -[VSIdentityProviderAlertAction .cxx_destruct]
  -[VSIdentityProviderAlertAction setTitle:]
  -[VSIdentityProviderAlertAction title]
  -[VSIdentityProviderAlertAction setCallback:]
  -[VSIdentityProviderAlertAction setStyle:]
  -[VSIdentityProviderAlertAction style]


VSIdentityProviderAlert : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *title
 @property  NSString *message
 @property  NSArray *actions

  // instance methods
  -[VSIdentityProviderAlert actions]
  -[VSIdentityProviderAlert message]
  -[VSIdentityProviderAlert setActions:]
  -[VSIdentityProviderAlert setMessage:]
  -[VSIdentityProviderAlert .cxx_destruct]
  -[VSIdentityProviderAlert setTitle:]
  -[VSIdentityProviderAlert title]


VSTableHeaderFooterView : UIView /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
 @property  UILabel *textLabel
 @property  UIStackView *stackView
 @property  VSFontCenter *fontCenter
 @property  long long kind
 @property  <VSTableHeaderFooterViewDelegate> *delegate
 @property  UIView *button

  // instance methods
  -[VSTableHeaderFooterView layoutMarginsDidChange]
  -[VSTableHeaderFooterView stackView]
  -[VSTableHeaderFooterView initWithFrame:]
  -[VSTableHeaderFooterView invalidateIntrinsicContentSize]
  -[VSTableHeaderFooterView dealloc]
  -[VSTableHeaderFooterView .cxx_destruct]
  -[VSTableHeaderFooterView kind]
  -[VSTableHeaderFooterView intrinsicContentSize]
  -[VSTableHeaderFooterView setKind:]
  -[VSTableHeaderFooterView traitCollectionDidChange:]
  -[VSTableHeaderFooterView setTextLabel:]
  -[VSTableHeaderFooterView sizeThatFits:]
  -[VSTableHeaderFooterView setBounds:]
  -[VSTableHeaderFooterView setFrame:]
  -[VSTableHeaderFooterView _didInvalidateIntrinsicContentSize]
  -[VSTableHeaderFooterView setStackView:]
  -[VSTableHeaderFooterView textLabel]
  -[VSTableHeaderFooterView setDelegate:]
  -[VSTableHeaderFooterView button]
  -[VSTableHeaderFooterView setButton:]
  -[VSTableHeaderFooterView delegate]
  -[VSTableHeaderFooterView setText:]
  -[VSTableHeaderFooterView layoutSubviews]
  -[VSTableHeaderFooterView initWithCoder:]
  -[VSTableHeaderFooterView fontCenter]
  -[VSTableHeaderFooterView setFontCenter:]


VSAutoAuthenticationViewModel : VSCuratedViewModel
 @property  <VSAutoAuthenticationViewModelDelegate> *delegate
 @property  NSString *messageTitle
 @property  NSString *accountName
 @property  NSString *manualSignInTitle
 @property  NSString *manualSignInButtonText

  // instance methods
  -[VSAutoAuthenticationViewModel accountName]
  -[VSAutoAuthenticationViewModel init]
  -[VSAutoAuthenticationViewModel .cxx_destruct]
  -[VSAutoAuthenticationViewModel setDelegate:]
  -[VSAutoAuthenticationViewModel messageTitle]
  -[VSAutoAuthenticationViewModel setMessageTitle:]
  -[VSAutoAuthenticationViewModel setAccountName:]
  -[VSAutoAuthenticationViewModel delegate]
  -[VSAutoAuthenticationViewModel configureWithRequest:]
  -[VSAutoAuthenticationViewModel setManualSignInTitle:]
  -[VSAutoAuthenticationViewModel setManualSignInButtonText:]
  -[VSAutoAuthenticationViewModel didSelectManualSignInButton]
  -[VSAutoAuthenticationViewModel manualSignInTitle]
  -[VSAutoAuthenticationViewModel manualSignInButtonText]


VSWebAuthenticationAppDocumentController : VSAppDocumentController <VSMessagePortFeatureDelegate, VSMessageQueueDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSWebAuthenticationAppDocumentController _sendMessage:]
  -[VSWebAuthenticationAppDocumentController _stopObservingViewModel:]
  -[VSWebAuthenticationAppDocumentController _startObservingViewModel:]
  -[VSWebAuthenticationAppDocumentController initWithAppDocument:]
  -[VSWebAuthenticationAppDocumentController didAddMessagesToMessageQueue:]
  -[VSWebAuthenticationAppDocumentController _newViewModel]
  -[VSWebAuthenticationAppDocumentController _updateViewModel:error:]
  -[VSWebAuthenticationAppDocumentController messagePort:didReceiveMessage:]
  -[VSWebAuthenticationAppDocumentController _updateWebAuthenticationViewModel:withTemplate:error:]
  -[VSWebAuthenticationAppDocumentController _webAuthenticationViewModelWithViewModel:]
  -[VSWebAuthenticationAppDocumentController _updateWebAuthenticationViewModel:error:]


VSIdentityProviderPickerViewController_iOS : UITableViewController /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI <UISearchControllerDelegate, VSTableHeaderFooterViewDelegate, VSIdentityProviderPickerViewController>
 @property  UISearchController *searchController
 @property  VSOnboardingInfoCenter *onboardingInfoCenter
 @property  VSIdentityProviderFilter *filter
 @property  VSSearchBarDelegate *searchBarDelegate
 @property  VSIdentityProviderTableViewDataSource *unfilteredDataSource
 @property  VSIdentityProviderTableViewDataSource *filteredDataSource
 @property  VSFontCenter *fontCenter
 @property  BOOL dismissingSearchDueToSelection
 @property  VSIdentityProvider *selectedIdentityProvider
 @property  BOOL sectionContentInsetInitialized
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <VSIdentityProviderPickerViewControllerDelegate> *delegate
 @property  BOOL cancellationAllowed
 @property  NSArray *identityProviders
 @property  unsigned long additionalProvidersMode
 @property  NSString *requestingAppDisplayName
 @property  NSString *resourceTitle

  // instance methods
  -[VSIdentityProviderPickerViewController_iOS viewDidLoad]
  -[VSIdentityProviderPickerViewController_iOS searchController]
  -[VSIdentityProviderPickerViewController_iOS didDismissSearchController:]
  -[VSIdentityProviderPickerViewController_iOS tableView:heightForRowAtIndexPath:]
  -[VSIdentityProviderPickerViewController_iOS setSearchController:]
  -[VSIdentityProviderPickerViewController_iOS setFilter:]
  -[VSIdentityProviderPickerViewController_iOS willMoveToParentViewController:]
  -[VSIdentityProviderPickerViewController_iOS setUnfilteredDataSource:]
  -[VSIdentityProviderPickerViewController_iOS unfilteredDataSource]
  -[VSIdentityProviderPickerViewController_iOS filter]
  -[VSIdentityProviderPickerViewController_iOS tableView:didSelectRowAtIndexPath:]
  -[VSIdentityProviderPickerViewController_iOS _isRegularWidth]
  -[VSIdentityProviderPickerViewController_iOS _updateSectionContentInsetWithAnimation:]
  -[VSIdentityProviderPickerViewController_iOS .cxx_destruct]
  -[VSIdentityProviderPickerViewController_iOS tableView:estimatedHeightForRowAtIndexPath:]
  -[VSIdentityProviderPickerViewController_iOS traitCollectionDidChange:]
  -[VSIdentityProviderPickerViewController_iOS initWithStyle:]
  -[VSIdentityProviderPickerViewController_iOS setDelegate:]
  -[VSIdentityProviderPickerViewController_iOS viewDidLayoutSubviews]
  -[VSIdentityProviderPickerViewController_iOS delegate]
  -[VSIdentityProviderPickerViewController_iOS _cancelButtonPressed:]
  -[VSIdentityProviderPickerViewController_iOS setSearchBarDelegate:]
  -[VSIdentityProviderPickerViewController_iOS searchBarDelegate]
  -[VSIdentityProviderPickerViewController_iOS requestingAppDisplayName]
  -[VSIdentityProviderPickerViewController_iOS setRequestingAppDisplayName:]
  -[VSIdentityProviderPickerViewController_iOS fontCenter]
  -[VSIdentityProviderPickerViewController_iOS setFontCenter:]
  -[VSIdentityProviderPickerViewController_iOS isCancellationAllowed]
  -[VSIdentityProviderPickerViewController_iOS setCancellationAllowed:]
  -[VSIdentityProviderPickerViewController_iOS setIdentityProviders:]
  -[VSIdentityProviderPickerViewController_iOS deselectSelectedProviderAnimated:]
  -[VSIdentityProviderPickerViewController_iOS setResourceTitle:]
  -[VSIdentityProviderPickerViewController_iOS setAdditionalProvidersMode:]
  -[VSIdentityProviderPickerViewController_iOS didInvalidateIntrinsicContentSizeForTableHeaderFooterView:]
  -[VSIdentityProviderPickerViewController_iOS _updateTableHeaderTitle]
  -[VSIdentityProviderPickerViewController_iOS _titleForTableHeaderView]
  -[VSIdentityProviderPickerViewController_iOS additionalProvidersMode]
  -[VSIdentityProviderPickerViewController_iOS resourceTitle]
  -[VSIdentityProviderPickerViewController_iOS onboardingInfoCenter]
  -[VSIdentityProviderPickerViewController_iOS _didPickIdentityProvider:]
  -[VSIdentityProviderPickerViewController_iOS _didPickAdditionalIdentityProviders]
  -[VSIdentityProviderPickerViewController_iOS isDismissingSearchDueToSelection]
  -[VSIdentityProviderPickerViewController_iOS selectedIdentityProvider]
  -[VSIdentityProviderPickerViewController_iOS _performSelectionForIdentityProvider:]
  -[VSIdentityProviderPickerViewController_iOS setSelectedIdentityProvider:]
  -[VSIdentityProviderPickerViewController_iOS setDismissingSearchDueToSelection:]
  -[VSIdentityProviderPickerViewController_iOS filteredDataSource]
  -[VSIdentityProviderPickerViewController_iOS titleForTableFooterView]
  -[VSIdentityProviderPickerViewController_iOS sectionContentInsetInitialized]
  -[VSIdentityProviderPickerViewController_iOS setSectionContentInsetInitialized:]
  -[VSIdentityProviderPickerViewController_iOS identityProviders]
  -[VSIdentityProviderPickerViewController_iOS _showAboutPrivacy:]
  -[VSIdentityProviderPickerViewController_iOS setOnboardingInfoCenter:]
  -[VSIdentityProviderPickerViewController_iOS setFilteredDataSource:]


VSBindableTextField : UITextField /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
  // instance methods
  -[VSBindableTextField setAutocapitalizationType:]
  -[VSBindableTextField setSecureTextEntry:]
  -[VSBindableTextField keyboardType]
  -[VSBindableTextField setAutocorrectionType:]
  -[VSBindableTextField autocapitalizationType]
  -[VSBindableTextField setReturnKeyType:]
  -[VSBindableTextField returnKeyType]
  -[VSBindableTextField setKeyboardType:]
  -[VSBindableTextField placeholder]
  -[VSBindableTextField text]
  -[VSBindableTextField setPlaceholder:]
  -[VSBindableTextField isSecureTextEntry]
  -[VSBindableTextField autocorrectionType]
  -[VSBindableTextField setText:]


VSFooterMessageView : UIView /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI <PSHeaderFooterView>
 @property  NSString *primaryMessage
 @property  NSString *secondaryMessage
 @property  NSString *tertiaryMessage
 @property  VSFontCenter *fontCenter

  // instance methods
  -[VSFooterMessageView dealloc]
  -[VSFooterMessageView preferredHeightForWidth:]
  -[VSFooterMessageView .cxx_destruct]
  -[VSFooterMessageView traitCollectionDidChange:]
  -[VSFooterMessageView initWithSpecifier:]
  -[VSFooterMessageView fontCenter]
  -[VSFooterMessageView setFontCenter:]
  -[VSFooterMessageView primaryMessage]
  -[VSFooterMessageView setPrimaryMessage:]
  -[VSFooterMessageView secondaryMessage]
  -[VSFooterMessageView setSecondaryMessage:]
  -[VSFooterMessageView tertiaryMessage]
  -[VSFooterMessageView setTertiaryMessage:]


VSCredentialEntryButton : NSObject /usr/lib/libSystem.B.dylib
 @property  VSCredentialEntryViewModel *owningViewModel
 @property  NSString *title

  // instance methods
  -[VSCredentialEntryButton .cxx_destruct]
  -[VSCredentialEntryButton setTitle:]
  -[VSCredentialEntryButton title]
  -[VSCredentialEntryButton setOwningViewModel:]
  -[VSCredentialEntryButton owningViewModel]


VSCredentialEntryPickerItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *itemName
 @property  NSString *itemValue
 @property  NSString *itemId

  // instance methods
  -[VSCredentialEntryPickerItem itemId]
  -[VSCredentialEntryPickerItem .cxx_destruct]
  -[VSCredentialEntryPickerItem setItemName:]
  -[VSCredentialEntryPickerItem itemName]
  -[VSCredentialEntryPickerItem setItemId:]
  -[VSCredentialEntryPickerItem itemValue]
  -[VSCredentialEntryPickerItem setItemValue:]


VSCredentialEntryPicker : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *title
 @property  NSArray *pickerItems
 @property  long long selectedIndex

  // instance methods
  -[VSCredentialEntryPicker .cxx_destruct]
  -[VSCredentialEntryPicker setTitle:]
  -[VSCredentialEntryPicker title]
  -[VSCredentialEntryPicker pickerItems]
  -[VSCredentialEntryPicker setPickerItems:]
  -[VSCredentialEntryPicker selectedIndex]
  -[VSCredentialEntryPicker setSelectedIndex:]
  -[VSCredentialEntryPicker pickerItemAtCurrentIndex]


VSCredentialEntryViewModel : VSCuratedViewModel
 @property  VSExpressionEvaluator *buttonExpressionEvaluator
 @property  NSArray *credentialEntryFields
 @property  VSCredentialEntryPicker *picker
 @property  NSURL *linkURL
 @property  NSString *linkTitle
 @property  NSArray *buttons
 @property  NSString *recentsTitle
 @property  NSString *recentsMessage
 @property  NSString *additionalMessage
 @property  <VSCredentialEntryViewModelDelegate> *delegate

  // instance methods
  -[VSCredentialEntryViewModel picker]
  -[VSCredentialEntryViewModel linkURL]
  -[VSCredentialEntryViewModel buttons]
  -[VSCredentialEntryViewModel setButtons:]
  -[VSCredentialEntryViewModel .cxx_destruct]
  -[VSCredentialEntryViewModel setPicker:]
  -[VSCredentialEntryViewModel setDelegate:]
  -[VSCredentialEntryViewModel delegate]
  -[VSCredentialEntryViewModel setLinkURL:]
  -[VSCredentialEntryViewModel configureWithRequest:]
  -[VSCredentialEntryViewModel credentialEntryFields]
  -[VSCredentialEntryViewModel setCredentialEntryFields:]
  -[VSCredentialEntryViewModel setLinkTitle:]
  -[VSCredentialEntryViewModel setAdditionalMessage:]
  -[VSCredentialEntryViewModel setButtonExpressionEvaluator:]
  -[VSCredentialEntryViewModel buttonExpressionEvaluator]
  -[VSCredentialEntryViewModel _bindField:]
  -[VSCredentialEntryViewModel validateCredentialEntryFields]
  -[VSCredentialEntryViewModel setRecentsTitle:]
  -[VSCredentialEntryViewModel setRecentsMessage:]
  -[VSCredentialEntryViewModel _unbindField:]
  -[VSCredentialEntryViewModel linkTitle]
  -[VSCredentialEntryViewModel buttonTappedAtIndex:]
  -[VSCredentialEntryViewModel pickerDidSelectRow:]
  -[VSCredentialEntryViewModel clearFieldsAfterUsername]
  -[VSCredentialEntryViewModel recentsTitle]
  -[VSCredentialEntryViewModel recentsMessage]
  -[VSCredentialEntryViewModel additionalMessage]


VSCredentialEntryField : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *recentsTitle
 @property  NSString *recentsMessage
 @property  NSString *title
 @property  NSString *placeholder
 @property  long long keyboardType
 @property  BOOL secure
 @property  NSString *text
 @property  BOOL required
 @property  long long autocapitalizationType
 @property  long long autocorrectionType
 @property  long long returnKeyType
 @property  NSString *identifier

  // instance methods
  -[VSCredentialEntryField setAutocapitalizationType:]
  -[VSCredentialEntryField keyboardType]
  -[VSCredentialEntryField setAutocorrectionType:]
  -[VSCredentialEntryField autocapitalizationType]
  -[VSCredentialEntryField setReturnKeyType:]
  -[VSCredentialEntryField returnKeyType]
  -[VSCredentialEntryField setKeyboardType:]
  -[VSCredentialEntryField placeholder]
  -[VSCredentialEntryField isSecure]
  -[VSCredentialEntryField init]
  -[VSCredentialEntryField setSecure:]
  -[VSCredentialEntryField text]
  -[VSCredentialEntryField .cxx_destruct]
  -[VSCredentialEntryField setTitle:]
  -[VSCredentialEntryField identifier]
  -[VSCredentialEntryField title]
  -[VSCredentialEntryField setPlaceholder:]
  -[VSCredentialEntryField isRequired]
  -[VSCredentialEntryField setRequired:]
  -[VSCredentialEntryField autocorrectionType]
  -[VSCredentialEntryField setText:]
  -[VSCredentialEntryField setRecentsTitle:]
  -[VSCredentialEntryField setRecentsMessage:]
  -[VSCredentialEntryField recentsTitle]
  -[VSCredentialEntryField recentsMessage]


VSApplicationControllerRequestFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[VSApplicationControllerRequestFactory _authNRequestSAMLStringWithAuthenticationToken:forced:error:]
  +[VSApplicationControllerRequestFactory _attributeQuerySAMLRequestStringWithAttributeNames:channelID:authenticationToken:error:]
  +[VSApplicationControllerRequestFactory _logoutSAMLRequestStringWithError:]

  // instance methods
  -[VSApplicationControllerRequestFactory authenticationApplicationControllerRequestWithAuthenticationToken:forcedAuthentication:]
  -[VSApplicationControllerRequestFactory silentAuthenticationApplicationControllerRequestWithAuthenticationToken:forcedAuthentication:]
  -[VSApplicationControllerRequestFactory silentAuthenticationApplicationControllerRequest]
  -[VSApplicationControllerRequestFactory accountMetadataApplicationControllerRequestWithAccountMetadataRequest:authenticationToken:]
  -[VSApplicationControllerRequestFactory logoutApplicationControllerRequestWithAuthenticationToken:]
  -[VSApplicationControllerRequestFactory STBOptOutApplicationControllerRequest]


VSImageLoadOperation : VSAsyncOperation /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
 @property  VSOptional *result
 @property  NSURLSessionTask *task
 @property  NSItemProvider *itemProvider
 @property  {CGSize=dd} preferredImageSize
 @property  VSAuditToken *auditToken

  // instance methods
  -[VSImageLoadOperation setAuditToken:]
  -[VSImageLoadOperation auditToken]
  -[VSImageLoadOperation result]
  -[VSImageLoadOperation init]
  -[VSImageLoadOperation .cxx_destruct]
  -[VSImageLoadOperation cancel]
  -[VSImageLoadOperation itemProvider]
  -[VSImageLoadOperation setTask:]
  -[VSImageLoadOperation setResult:]
  -[VSImageLoadOperation executionDidBegin]
  -[VSImageLoadOperation task]
  -[VSImageLoadOperation preferredImageSize]
  -[VSImageLoadOperation initWithItemProvider:preferredImageSize:]
  -[VSImageLoadOperation _finishWithImageData:orError:]
  -[VSImageLoadOperation _beginFetchingDataFromURL:]


VSJSRequest : IKJSObject /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <VSJSRequest, NSCopying>
 @property  NSString *requestType
 @property  NSString *requestBody
 @property  NSString *currentAuthentication
 @property  NSString *appleVerificationToken
 @property  NSString *requestorVerificationToken
 @property  NSArray *attributeNames

  // instance methods
  -[VSJSRequest copyWithZone:]
  -[VSJSRequest setRequestType:]
  -[VSJSRequest requestType]
  -[VSJSRequest .cxx_destruct]
  -[VSJSRequest attributeNames]
  -[VSJSRequest requestBody]
  -[VSJSRequest setRequestBody:]
  -[VSJSRequest setAttributeNames:]
  -[VSJSRequest requestorVerificationToken]
  -[VSJSRequest setCurrentAuthentication:]
  -[VSJSRequest setRequestorVerificationToken:]
  -[VSJSRequest setAppleVerificationToken:]
  -[VSJSRequest currentAuthentication]
  -[VSJSRequest appleVerificationToken]


VSLoadingViewController_iOS : UIViewController /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI <VSLoadingViewController>
 @property  UIActivityIndicatorView *loadingIndicator
 @property  <VSLoadingViewControllerDelegate> *delegate
 @property  BOOL cancellationAllowed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSLoadingViewController_iOS viewDidLoad]
  -[VSLoadingViewController_iOS .cxx_destruct]
  -[VSLoadingViewController_iOS viewDidAppear:]
  -[VSLoadingViewController_iOS setDelegate:]
  -[VSLoadingViewController_iOS setLoadingIndicator:]
  -[VSLoadingViewController_iOS loadingIndicator]
  -[VSLoadingViewController_iOS delegate]
  -[VSLoadingViewController_iOS _cancelButtonPressed:]
  -[VSLoadingViewController_iOS isCancellationAllowed]
  -[VSLoadingViewController_iOS setCancellationAllowed:]


VSIKItemGroupElement : IKViewElement /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  VSIKItemGroup *itemGroup

  // class methods
  +[VSIKItemGroupElement supportedFeaturesForElementName:]

  // instance methods
  -[VSIKItemGroupElement .cxx_destruct]
  -[VSIKItemGroupElement itemGroup]
  -[VSIKItemGroupElement initWithDOMElement:parent:elementFactory:]


VSCredentialEntryViewController_iOS : ACUIViewController /System/Library/Frameworks/CFNetwork.framework/CFNetwork <VSCredentialEntryViewController, VSPSPickerTableViewCellDelegate>
 @property  VSIdentityProviderLogoView *logoView
 @property  UIButton *linkButton
 @property  NSArray *buttons
 @property  UIView *buttonView
 @property  NSArray *fieldSpecifiers
 @property  double keyboardHeight
 @property  id textFieldTextDidChangeObserver
 @property  id keyboardWillShowObserver
 @property  id keyboardWillHideObserver
 @property  id weakTarget
 @property  PSSpecifier *pickerButtonSpecifier
 @property  PSSpecifier *pickerSpecifier
 @property  VSCredentialEntryPicker *picker
 @property  VSCredentialEntryViewModel *viewModel
 @property  <VSAuthenticationViewControllerDelegate> *delegate
 @property  BOOL cancellationAllowed
 @property  {CGSize=dd} preferredLogoSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSCredentialEntryViewController_iOS viewDidLoad]
  -[VSCredentialEntryViewController_iOS picker]
  -[VSCredentialEntryViewController_iOS buttons]
  -[VSCredentialEntryViewController_iOS setButtons:]
  -[VSCredentialEntryViewController_iOS dealloc]
  -[VSCredentialEntryViewController_iOS .cxx_destruct]
  -[VSCredentialEntryViewController_iOS viewModel]
  -[VSCredentialEntryViewController_iOS weakTarget]
  -[VSCredentialEntryViewController_iOS _linkURL]
  -[VSCredentialEntryViewController_iOS initWithNibName:bundle:]
  -[VSCredentialEntryViewController_iOS viewDidAppear:]
  -[VSCredentialEntryViewController_iOS setPicker:]
  -[VSCredentialEntryViewController_iOS cancelButtonTapped:]
  -[VSCredentialEntryViewController_iOS buttonView]
  -[VSCredentialEntryViewController_iOS observeValueForKeyPath:ofObject:change:context:]
  -[VSCredentialEntryViewController_iOS doneButtonPressed:]
  -[VSCredentialEntryViewController_iOS scrollViewDidScroll:]
  -[VSCredentialEntryViewController_iOS viewWillAppear:]
  -[VSCredentialEntryViewController_iOS setDelegate:]
  -[VSCredentialEntryViewController_iOS viewWillTransitionToSize:withTransitionCoordinator:]
  -[VSCredentialEntryViewController_iOS viewDidDisappear:]
  -[VSCredentialEntryViewController_iOS logoView]
  -[VSCredentialEntryViewController_iOS pickerTitle]
  -[VSCredentialEntryViewController_iOS viewWillDisappear:]
  -[VSCredentialEntryViewController_iOS linkButton]
  -[VSCredentialEntryViewController_iOS setButtonView:]
  -[VSCredentialEntryViewController_iOS viewDidLayoutSubviews]
  -[VSCredentialEntryViewController_iOS setViewModel:]
  -[VSCredentialEntryViewController_iOS keyboardHeight]
  -[VSCredentialEntryViewController_iOS setKeyboardHeight:]
  -[VSCredentialEntryViewController_iOS delegate]
  -[VSCredentialEntryViewController_iOS setLinkButton:]
  -[VSCredentialEntryViewController_iOS setWeakTarget:]
  -[VSCredentialEntryViewController_iOS _presentError:]
  -[VSCredentialEntryViewController_iOS _linkButtonTapped:]
  -[VSCredentialEntryViewController_iOS setLogoView:]
  -[VSCredentialEntryViewController_iOS _stopObservingViewModel:]
  -[VSCredentialEntryViewController_iOS _startObservingViewModel:]
  -[VSCredentialEntryViewController_iOS isCancellationAllowed]
  -[VSCredentialEntryViewController_iOS preferredLogoSize]
  -[VSCredentialEntryViewController_iOS setCancellationAllowed:]
  -[VSCredentialEntryViewController_iOS _startValidation]
  -[VSCredentialEntryViewController_iOS pickerViewCellInitialSelectedRow:]
  -[VSCredentialEntryViewController_iOS pickerViewCell:titleForRow:]
  -[VSCredentialEntryViewController_iOS pickerViewCellNumberOfRows:]
  -[VSCredentialEntryViewController_iOS pickerViewCell:didSelectRow:]
  -[VSCredentialEntryViewController_iOS _specifierForTextField:]
  -[VSCredentialEntryViewController_iOS _setText:forSpecifier:]
  -[VSCredentialEntryViewController_iOS _updateLinkButtonLayout]
  -[VSCredentialEntryViewController_iOS _textFieldForSpecifier:]
  -[VSCredentialEntryViewController_iOS _credentialEntryFieldForSpecifier:]
  -[VSCredentialEntryViewController_iOS _textForSpecifier:]
  -[VSCredentialEntryViewController_iOS _createSpecifierForField:]
  -[VSCredentialEntryViewController_iOS pickerButtonSelected]
  -[VSCredentialEntryViewController_iOS setPickerButtonSpecifier:]
  -[VSCredentialEntryViewController_iOS _jsButtonTapped:]
  -[VSCredentialEntryViewController_iOS pickerSpecifier]
  -[VSCredentialEntryViewController_iOS setPickerSpecifier:]
  -[VSCredentialEntryViewController_iOS pickerButtonSpecifier]
  -[VSCredentialEntryViewController_iOS buildButtonsIfNeeded]
  -[VSCredentialEntryViewController_iOS fieldSpecifiers]
  -[VSCredentialEntryViewController_iOS setFieldSpecifiers:]
  -[VSCredentialEntryViewController_iOS textFieldTextDidChangeObserver]
  -[VSCredentialEntryViewController_iOS setTextFieldTextDidChangeObserver:]
  -[VSCredentialEntryViewController_iOS keyboardWillShowObserver]
  -[VSCredentialEntryViewController_iOS setKeyboardWillShowObserver:]
  -[VSCredentialEntryViewController_iOS keyboardWillHideObserver]
  -[VSCredentialEntryViewController_iOS setKeyboardWillHideObserver:]


VSIdentityProviderLogoView : UIView /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
 @property  UIImageView *imageView
 @property  UIImage *logo
 @property  double marginLength
 @property  {CGSize=dd} preferredImageSize

  // instance methods
  -[VSIdentityProviderLogoView imageView]
  -[VSIdentityProviderLogoView logo]
  -[VSIdentityProviderLogoView setImageView:]
  -[VSIdentityProviderLogoView initWithFrame:]
  -[VSIdentityProviderLogoView setLogo:]
  -[VSIdentityProviderLogoView .cxx_destruct]
  -[VSIdentityProviderLogoView intrinsicContentSize]
  -[VSIdentityProviderLogoView _height]
  -[VSIdentityProviderLogoView sizeThatFits:]
  -[VSIdentityProviderLogoView layoutSubviews]
  -[VSIdentityProviderLogoView initWithCoder:]
  -[VSIdentityProviderLogoView _imageViewFrame]
  -[VSIdentityProviderLogoView preferredImageSize]
  -[VSIdentityProviderLogoView marginLength]


VSScriptSecurityOrigin : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *scheme
 @property  NSString *host
 @property  long long port

  // instance methods
  -[VSScriptSecurityOrigin setScheme:]
  -[VSScriptSecurityOrigin setPort:]
  -[VSScriptSecurityOrigin scheme]
  -[VSScriptSecurityOrigin host]
  -[VSScriptSecurityOrigin setHost:]
  -[VSScriptSecurityOrigin .cxx_destruct]
  -[VSScriptSecurityOrigin port]
  -[VSScriptSecurityOrigin isEqual:]


VSScriptMessage : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *body
 @property  VSScriptSecurityOrigin *source
 @property  VSScriptSecurityOrigin *target

  // instance methods
  -[VSScriptMessage setSource:]
  -[VSScriptMessage target]
  -[VSScriptMessage source]
  -[VSScriptMessage .cxx_destruct]
  -[VSScriptMessage setTarget:]
  -[VSScriptMessage setBody:]
  -[VSScriptMessage body]


VSMaximumWidthMultilineButton : VSMultilineButton
  // instance methods
  -[VSMaximumWidthMultilineButton intrinsicContentSize]


VSBindableSwitch : UISwitch /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
  // instance methods
  -[VSBindableSwitch vs_unbind:]
  -[VSBindableSwitch _updateBindingForValueChanged:]
  -[VSBindableSwitch vs_bind:toObject:withKeyPath:options:]


VSSetupFlowPreparationOperation : VSAsyncOperation /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
 @property  VSOptional *result
 @property  VSStoreURLBag *bag
 @property  NSOperationQueue *privateQueue
 @property  VSDevice *currentDevice
 @property  VSOptional *storage
 @property  VSOptional *preferences

  // instance methods
  -[VSSetupFlowPreparationOperation result]
  -[VSSetupFlowPreparationOperation init]
  -[VSSetupFlowPreparationOperation setPreferences:]
  -[VSSetupFlowPreparationOperation preferences]
  -[VSSetupFlowPreparationOperation _finishWithError:]
  -[VSSetupFlowPreparationOperation .cxx_destruct]
  -[VSSetupFlowPreparationOperation setPrivateQueue:]
  -[VSSetupFlowPreparationOperation setBag:]
  -[VSSetupFlowPreparationOperation bag]
  -[VSSetupFlowPreparationOperation storage]
  -[VSSetupFlowPreparationOperation privateQueue]
  -[VSSetupFlowPreparationOperation currentDevice]
  -[VSSetupFlowPreparationOperation setResult:]
  -[VSSetupFlowPreparationOperation executionDidBegin]
  -[VSSetupFlowPreparationOperation setCurrentDevice:]
  -[VSSetupFlowPreparationOperation setStorage:]
  -[VSSetupFlowPreparationOperation _checkPreferences]
  -[VSSetupFlowPreparationOperation _checkAvailability]
  -[VSSetupFlowPreparationOperation _finishWithFlow:]
  -[VSSetupFlowPreparationOperation _checkForExistingAccounts]
  -[VSSetupFlowPreparationOperation _fetchProviderForAccount:]
  -[VSSetupFlowPreparationOperation _fetchAllProvidersIfNeeded]
  -[VSSetupFlowPreparationOperation _fetchAllProviders]
  -[VSSetupFlowPreparationOperation _checkForSupportedAppsButton]
  -[VSSetupFlowPreparationOperation createAppDescriptionFetchOperationForProvider:withFlow:]
  -[VSSetupFlowPreparationOperation _resolveBundleIDs:forFlow:]
  -[VSSetupFlowPreparationOperation _checkForSupportedAppsButtonWithFlow:]
  -[VSSetupFlowPreparationOperation _loadProviderAppDescriptionWithFlow:]
  -[VSSetupFlowPreparationOperation _getSTBProviderFromAllProviders:completionHandler:]
  -[VSSetupFlowPreparationOperation prepareSTBSetupForAccount:forProvider:]
  -[VSSetupFlowPreparationOperation _checkForSupportedAppsFromProvider:]
  -[VSSetupFlowPreparationOperation _checkForPersonalizedChannelsWithResponse:identityProvider:]
  -[VSSetupFlowPreparationOperation _findBundleIDsForAdamIDs:withFlow:]


VSAutoAuthenticationViewController_iOS : UIViewController /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI <VSAutoAuthenticationViewController>
 @property  UIScrollView *scrollView
 @property  VSIdentityProviderLogoView *logoView
 @property  UILabel *accountNameLabel
 @property  UILabel *messageTitleLabel
 @property  UILabel *messageLabel
 @property  UILabel *noticeLabel
 @property  UILabel *manualSignInTitleLabel
 @property  UIButton *manualSignInButton
 @property  UILabel *footerLabel
 @property  VSFontCenter *fontCenter
 @property  VSAutoAuthenticationViewModel *viewModel
 @property  <VSAuthenticationViewControllerDelegate> *delegate
 @property  BOOL cancellationAllowed
 @property  {CGSize=dd} preferredLogoSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSAutoAuthenticationViewController_iOS viewDidLoad]
  -[VSAutoAuthenticationViewController_iOS messageLabel]
  -[VSAutoAuthenticationViewController_iOS dealloc]
  -[VSAutoAuthenticationViewController_iOS .cxx_destruct]
  -[VSAutoAuthenticationViewController_iOS scrollView]
  -[VSAutoAuthenticationViewController_iOS viewModel]
  -[VSAutoAuthenticationViewController_iOS initWithNibName:bundle:]
  -[VSAutoAuthenticationViewController_iOS traitCollectionDidChange:]
  -[VSAutoAuthenticationViewController_iOS viewDidAppear:]
  -[VSAutoAuthenticationViewController_iOS setScrollView:]
  -[VSAutoAuthenticationViewController_iOS observeValueForKeyPath:ofObject:change:context:]
  -[VSAutoAuthenticationViewController_iOS footerLabel]
  -[VSAutoAuthenticationViewController_iOS viewWillAppear:]
  -[VSAutoAuthenticationViewController_iOS setMessageLabel:]
  -[VSAutoAuthenticationViewController_iOS setDelegate:]
  -[VSAutoAuthenticationViewController_iOS viewDidDisappear:]
  -[VSAutoAuthenticationViewController_iOS logoView]
  -[VSAutoAuthenticationViewController_iOS viewWillDisappear:]
  -[VSAutoAuthenticationViewController_iOS viewDidLayoutSubviews]
  -[VSAutoAuthenticationViewController_iOS setViewModel:]
  -[VSAutoAuthenticationViewController_iOS delegate]
  -[VSAutoAuthenticationViewController_iOS initWithCoder:]
  -[VSAutoAuthenticationViewController_iOS setLogoView:]
  -[VSAutoAuthenticationViewController_iOS setFooterLabel:]
  -[VSAutoAuthenticationViewController_iOS _stopObservingViewModel:]
  -[VSAutoAuthenticationViewController_iOS _startObservingViewModel:]
  -[VSAutoAuthenticationViewController_iOS fontCenter]
  -[VSAutoAuthenticationViewController_iOS setFontCenter:]
  -[VSAutoAuthenticationViewController_iOS isCancellationAllowed]
  -[VSAutoAuthenticationViewController_iOS preferredLogoSize]
  -[VSAutoAuthenticationViewController_iOS setCancellationAllowed:]
  -[VSAutoAuthenticationViewController_iOS setAccountNameLabel:]
  -[VSAutoAuthenticationViewController_iOS setMessageTitleLabel:]
  -[VSAutoAuthenticationViewController_iOS setNoticeLabel:]
  -[VSAutoAuthenticationViewController_iOS setManualSignInTitleLabel:]
  -[VSAutoAuthenticationViewController_iOS _manualSignInButtonPressed:]
  -[VSAutoAuthenticationViewController_iOS setManualSignInButton:]
  -[VSAutoAuthenticationViewController_iOS manualSignInTitleLabel]
  -[VSAutoAuthenticationViewController_iOS manualSignInButton]
  -[VSAutoAuthenticationViewController_iOS accountNameLabel]
  -[VSAutoAuthenticationViewController_iOS messageTitleLabel]
  -[VSAutoAuthenticationViewController_iOS noticeLabel]


VSTopShelfPurgingAccountStore : VSAccountStore /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
  // instance methods
  -[VSTopShelfPurgingAccountStore saveAccounts:withCompletionHandler:]
  -[VSTopShelfPurgingAccountStore removeAccounts:withCompletionHandler:]
  -[VSTopShelfPurgingAccountStore _purgeTopShelfContent]


VSApplicationControllerResponse : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *authenticationScheme
 @property  NSString *responseStatusCode
 @property  NSString *responseString
 @property  NSNumber *expectedAction
 @property  VSAccountAuthentication *accountAuthentication
 @property  NSSet *accountChannelIDs
 @property  NSArray *subscriptionsToAdd
 @property  NSArray *subscriptionsToRemoveByBundleID

  // instance methods
  -[VSApplicationControllerResponse responseStatusCode]
  -[VSApplicationControllerResponse .cxx_destruct]
  -[VSApplicationControllerResponse setResponseStatusCode:]
  -[VSApplicationControllerResponse authenticationScheme]
  -[VSApplicationControllerResponse setAuthenticationScheme:]
  -[VSApplicationControllerResponse responseString]
  -[VSApplicationControllerResponse setResponseString:]
  -[VSApplicationControllerResponse expectedAction]
  -[VSApplicationControllerResponse subscriptionsToAdd]
  -[VSApplicationControllerResponse subscriptionsToRemoveByBundleID]
  -[VSApplicationControllerResponse setSubscriptionsToAdd:]
  -[VSApplicationControllerResponse setSubscriptionsToRemoveByBundleID:]
  -[VSApplicationControllerResponse setExpectedAction:]
  -[VSApplicationControllerResponse setAccountChannelIDs:]
  -[VSApplicationControllerResponse setAccountAuthentication:]
  -[VSApplicationControllerResponse accountAuthentication]
  -[VSApplicationControllerResponse accountChannelIDs]


VSAppDescription : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *displayName
 @property  NSString *shortenedDisplayName
 @property  NSNumber *adamID
 @property  NSString *buyParams
 @property  NSString *bundleID
 @property  NSString *sellerName
 @property  NSString *externalVersionID
 @property  NSURL *appStoreURL
 @property  NSURL *privacyPolicyEndpointURL
 @property  NSURL *licenseAgreementEndpointURL
 @property  NSString *rating
 @property  NSNumber *contentRank
 @property  BOOL offersInAppPurchases
 @property  NSString *artworkURLTemplate
 @property  UIImage *icon

  // class methods
  +[VSAppDescription supportsSecureCoding]

  // instance methods
  -[VSAppDescription copyWithZone:]
  -[VSAppDescription setBundleID:]
  -[VSAppDescription init]
  -[VSAppDescription .cxx_destruct]
  -[VSAppDescription icon]
  -[VSAppDescription encodeWithCoder:]
  -[VSAppDescription setIcon:]
  -[VSAppDescription setAdamID:]
  -[VSAppDescription setRating:]
  -[VSAppDescription buyParams]
  -[VSAppDescription setDisplayName:]
  -[VSAppDescription isEqual:]
  -[VSAppDescription adamID]
  -[VSAppDescription setBuyParams:]
  -[VSAppDescription externalVersionID]
  -[VSAppDescription displayName]
  -[VSAppDescription rating]
  -[VSAppDescription shortenedDisplayName]
  -[VSAppDescription appStoreURL]
  -[VSAppDescription setAppStoreURL:]
  -[VSAppDescription bundleID]
  -[VSAppDescription initWithCoder:]
  -[VSAppDescription setExternalVersionID:]
  -[VSAppDescription contentRank]
  -[VSAppDescription sellerName]
  -[VSAppDescription artworkURLTemplate]
  -[VSAppDescription setArtworkURLTemplate:]
  -[VSAppDescription iconURLForSize:]
  -[VSAppDescription setSellerName:]
  -[VSAppDescription setLicenseAgreementEndpointURL:]
  -[VSAppDescription setPrivacyPolicyEndpointURL:]
  -[VSAppDescription setContentRank:]
  -[VSAppDescription setOffersInAppPurchases:]
  -[VSAppDescription privacyPolicyEndpointURL]
  -[VSAppDescription licenseAgreementEndpointURL]
  -[VSAppDescription offersInAppPurchases]


VSAppSettingsFacade : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *decidedApps
 @property  NSArray *availableApps
 @property  NSOperationQueue *privateQueue
 @property  NSOperation *currentPresentationOperation
 @property  VSPersistentStorage *storage
 @property  VSRestrictionsCenter *restrictionsCenter
 @property  VSOptional *identityProviderID
 @property  NSArray *featuredAdamIDs
 @property  NSArray *knownAppBundles
 @property  NSArray *unredeemedVouchers
 @property  BOOL needsUpdateApps
 @property  int registrationToken
 @property  VSAppSettingsViewModel *mvpdAppSettingsViewModel
 @property  BOOL needsPresentationOfMVPDAppInstallPromptIfAvailable
 @property  UIViewController *mvpdInstallPromptPresentingViewController
 @property  VSIdentityProvider *identityProvider
 @property  BOOL hasChannelApps

  // instance methods
  -[VSAppSettingsFacade autorelease]
  -[VSAppSettingsFacade init]
  -[VSAppSettingsFacade dealloc]
  -[VSAppSettingsFacade setRegistrationToken:]
  -[VSAppSettingsFacade .cxx_destruct]
  -[VSAppSettingsFacade setPrivateQueue:]
  -[VSAppSettingsFacade storage]
  -[VSAppSettingsFacade privateQueue]
  -[VSAppSettingsFacade registrationToken]
  -[VSAppSettingsFacade setStorage:]
  -[VSAppSettingsFacade retain]
  -[VSAppSettingsFacade release]
  -[VSAppSettingsFacade setAvailableApps:]
  -[VSAppSettingsFacade availableApps]
  -[VSAppSettingsFacade identityProvider]
  -[VSAppSettingsFacade setIdentityProvider:]
  -[VSAppSettingsFacade setIdentityProviderID:]
  -[VSAppSettingsFacade identityProviderID]
  -[VSAppSettingsFacade unredeemedVouchers]
  -[VSAppSettingsFacade knownAppBundles]
  -[VSAppSettingsFacade setUnredeemedVouchers:]
  -[VSAppSettingsFacade restrictionsCenter]
  -[VSAppSettingsFacade setRestrictionsCenter:]
  -[VSAppSettingsFacade setKnownAppBundles:]
  -[VSAppSettingsFacade setNeedsUpdateApps:]
  -[VSAppSettingsFacade currentPresentationOperation]
  -[VSAppSettingsFacade setDecidedApps:]
  -[VSAppSettingsFacade setCurrentPresentationOperation:]
  -[VSAppSettingsFacade setHasChannelApps:]
  -[VSAppSettingsFacade _fetchOperationForAdamIDs:]
  -[VSAppSettingsFacade setMvpdAppSettingsViewModel:]
  -[VSAppSettingsFacade needsUpdateApps]
  -[VSAppSettingsFacade _updateApps]
  -[VSAppSettingsFacade _setNeedsUpdateApps]
  -[VSAppSettingsFacade setFeaturedAdamIDs:]
  -[VSAppSettingsFacade setMvpdInstallPromptPresentingViewController:]
  -[VSAppSettingsFacade shouldShowMVPDAppInstallPrompt]
  -[VSAppSettingsFacade mvpdAppSettingsViewModel]
  -[VSAppSettingsFacade setNeedsPresentationOfMVPDAppInstallPromptIfAvailable:]
  -[VSAppSettingsFacade needsPresentationOfMVPDAppInstallPromptIfAvailable]
  -[VSAppSettingsFacade mvpdInstallPromptPresentingViewController]
  -[VSAppSettingsFacade presentMVPDAppInstallPromptFromViewController:]
  -[VSAppSettingsFacade initWithStorage:restrictionsCenter:]
  -[VSAppSettingsFacade shouldShowMVPDAppInstallPromptFromViewController:]
  -[VSAppSettingsFacade decidedApps]
  -[VSAppSettingsFacade hasChannelApps]
  -[VSAppSettingsFacade featuredAdamIDs]


VSIdentityProviderRequestManager : NSObject /usr/lib/libSystem.B.dylib <VSApplicationControllerDelegate>
 @property  VSViewModel *viewModel
 @property  NSOperationQueue *privateQueue
 @property  NSMutableArray *requestContexts
 @property  VSApplicationController *applicationController
 @property  VSOptional *currentApplicationControllerRequest
 @property  VSOptional *account
 @property  VSOptional *storage
 @property  VSApplicationControllerRequestFactory *requestFactory
 @property  BOOL didCreateAccount
 @property  VSPreferences *preferences
 @property  NSObject<OS_dispatch_source> *applicationControllerTimerSource
 @property  BOOL allowsApplicationControllerTimer
 @property  double applicationControllerTimerLeeway
 @property  double requestCompletionDelayAfterShowingUserInterface
 @property  double applicationControllerTimerDelay
 @property  VSIdentityProvider *identityProvider
 @property  <VSIdentityProviderRequestManagerDelegate> *delegate
 @property  VSAuditToken *auditToken
 @property  BOOL canIssuePrivacyVouchers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSIdentityProviderRequestManager setAuditToken:]
  -[VSIdentityProviderRequestManager auditToken]
  -[VSIdentityProviderRequestManager init]
  -[VSIdentityProviderRequestManager _currentRequest]
  -[VSIdentityProviderRequestManager setPreferences:]
  -[VSIdentityProviderRequestManager setAccount:]
  -[VSIdentityProviderRequestManager dealloc]
  -[VSIdentityProviderRequestManager account]
  -[VSIdentityProviderRequestManager preferences]
  -[VSIdentityProviderRequestManager .cxx_destruct]
  -[VSIdentityProviderRequestManager viewModel]
  -[VSIdentityProviderRequestManager setPrivateQueue:]
  -[VSIdentityProviderRequestManager storage]
  -[VSIdentityProviderRequestManager privateQueue]
  -[VSIdentityProviderRequestManager observeValueForKeyPath:ofObject:change:context:]
  -[VSIdentityProviderRequestManager setStorage:]
  -[VSIdentityProviderRequestManager enqueueRequest:]
  -[VSIdentityProviderRequestManager setDelegate:]
  -[VSIdentityProviderRequestManager setViewModel:]
  -[VSIdentityProviderRequestManager delegate]
  -[VSIdentityProviderRequestManager applicationController]
  -[VSIdentityProviderRequestManager setApplicationController:]
  -[VSIdentityProviderRequestManager _stopObservingViewModel:]
  -[VSIdentityProviderRequestManager _startObservingViewModel:]
  -[VSIdentityProviderRequestManager identityProvider]
  -[VSIdentityProviderRequestManager initWithIdentityProvider:]
  -[VSIdentityProviderRequestManager canIssuePrivacyVouchers]
  -[VSIdentityProviderRequestManager setCanIssuePrivacyVouchers:]
  -[VSIdentityProviderRequestManager applicationController:requestsAlert:]
  -[VSIdentityProviderRequestManager applicationController:request:didCompleteWithResponse:]
  -[VSIdentityProviderRequestManager applicationController:didReceiveViewModel:]
  -[VSIdentityProviderRequestManager applicationController:didReceiveViewModelError:]
  -[VSIdentityProviderRequestManager applicationController:request:didFailWithError:]
  -[VSIdentityProviderRequestManager applicationControllerDidStart:]
  -[VSIdentityProviderRequestManager applicationController:startDidFailWithError:]
  -[VSIdentityProviderRequestManager didCreateAccount]
  -[VSIdentityProviderRequestManager setDidCreateAccount:]
  -[VSIdentityProviderRequestManager _stopApplicationController]
  -[VSIdentityProviderRequestManager requestContexts]
  -[VSIdentityProviderRequestManager _processRequestContext:]
  -[VSIdentityProviderRequestManager setAllowsApplicationControllerTimer:]
  -[VSIdentityProviderRequestManager _requestRequiresApplicationController:]
  -[VSIdentityProviderRequestManager _startApplicationControllerTimer]
  -[VSIdentityProviderRequestManager _completeCachedAccountMetadataRequest]
  -[VSIdentityProviderRequestManager _currentRequestContext]
  -[VSIdentityProviderRequestManager allowsApplicationControllerTimer]
  -[VSIdentityProviderRequestManager _stopApplicationControllerTimer]
  -[VSIdentityProviderRequestManager setApplicationControllerTimerSource:]
  -[VSIdentityProviderRequestManager applicationControllerTimerDelay]
  -[VSIdentityProviderRequestManager applicationControllerTimerLeeway]
  -[VSIdentityProviderRequestManager currentApplicationControllerRequest]
  -[VSIdentityProviderRequestManager _handleApplicationControllerError:forRequest:]
  -[VSIdentityProviderRequestManager _completeCurrentRequestWithError:]
  -[VSIdentityProviderRequestManager applicationControllerTimerSource]
  -[VSIdentityProviderRequestManager _handleAuthenticationRequest:didCompleteWithResponse:]
  -[VSIdentityProviderRequestManager _handleSilentAuthenticationRequest:didCompleteWithResponse:]
  -[VSIdentityProviderRequestManager _handleLogoutRequestDidComplete:]
  -[VSIdentityProviderRequestManager _handleSTBOptOutDidComplete:]
  -[VSIdentityProviderRequestManager _handleAccountMetadataRequest:didCompleteWithResponse:]
  -[VSIdentityProviderRequestManager _notifyDidAuthenticateAccount:]
  -[VSIdentityProviderRequestManager _completeAuthenticationRequestWithApplicationControllerResponse:]
  -[VSIdentityProviderRequestManager _requestRequiresApplicationControllerIgnoringAuthentication:]
  -[VSIdentityProviderRequestManager _applicationControllerRequestWithIdentityProviderRequest:]
  -[VSIdentityProviderRequestManager _submitApplicationControllerRequest:]
  -[VSIdentityProviderRequestManager _canShowAuthenticationUI]
  -[VSIdentityProviderRequestManager _showAuthenticationUI]
  -[VSIdentityProviderRequestManager _completeDeletingAccountWithError:]
  -[VSIdentityProviderRequestManager _completeCurrentRequestWithApplicationControllerResponse:]
  -[VSIdentityProviderRequestManager _resetVerificationStateWithCompletionHandler:]
  -[VSIdentityProviderRequestManager requestFactory]
  -[VSIdentityProviderRequestManager _requestCompletionDelay]
  -[VSIdentityProviderRequestManager _completeCurrentRequestWithApplicationControllerResponse:verificationData:]
  -[VSIdentityProviderRequestManager _accountMetadataWithAuthenticationScheme:responseStatusCode:responseString:accountMetadataRequest:verificationData:]
  -[VSIdentityProviderRequestManager _completeCurrentRequestWithResult:]
  -[VSIdentityProviderRequestManager setCurrentApplicationControllerRequest:]
  -[VSIdentityProviderRequestManager _supportedProviderAuthenticationToken]
  -[VSIdentityProviderRequestManager requestCompletionDelayAfterShowingUserInterface]
  -[VSIdentityProviderRequestManager _startDeletingAccount]
  -[VSIdentityProviderRequestManager _updateAccountWithAccountAuthentication:]
  -[VSIdentityProviderRequestManager _accountChannelsWithChannelIDs:]
  -[VSIdentityProviderRequestManager _handleApplicationControllerRequest:didCompleteWithResponse:]
  -[VSIdentityProviderRequestManager _enqueueSubscriptionOperationIfRequiredForResponse:asDependencyOf:]
  -[VSIdentityProviderRequestManager _identityProviderAlertWithApplicationControllerAlert:]
  -[VSIdentityProviderRequestManager setApplicationControllerTimerDelay:]
  -[VSIdentityProviderRequestManager setRequestContexts:]
  -[VSIdentityProviderRequestManager setRequestFactory:]
  -[VSIdentityProviderRequestManager setApplicationControllerTimerLeeway:]
  -[VSIdentityProviderRequestManager setRequestCompletionDelayAfterShowingUserInterface:]


VSViewServiceRemoteViewController : _UIRemoteViewController /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI <VSViewServiceHostProtocol>
 @property  <VSViewServiceRemoteViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSViewServiceRemoteViewController shouldPropagateAppearanceCustomizations]
  +[VSViewServiceRemoteViewController exportedInterface]
  +[VSViewServiceRemoteViewController serviceViewControllerInterface]

  // instance methods
  -[VSViewServiceRemoteViewController dealloc]
  -[VSViewServiceRemoteViewController .cxx_destruct]
  -[VSViewServiceRemoteViewController _presentViewController]
  -[VSViewServiceRemoteViewController _dismissViewController]
  -[VSViewServiceRemoteViewController initWithNibName:bundle:]
  -[VSViewServiceRemoteViewController setDelegate:]
  -[VSViewServiceRemoteViewController delegate]
  -[VSViewServiceRemoteViewController viewServiceDidTerminateWithError:]
  -[VSViewServiceRemoteViewController _request:didFinishWithResponse:]
  -[VSViewServiceRemoteViewController _request:didFailWithError:]
  -[VSViewServiceRemoteViewController _didChooseAdditionalProvidersForRequest:]
  -[VSViewServiceRemoteViewController _didCancelRequest:]
  -[VSViewServiceRemoteViewController _didChooseProviderWithIdentifier:vetoHandler:]


VSApplicationControllerAlertAction : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *title
 @property  long long style
 @property  @? callback

  // class methods
  +[VSApplicationControllerAlertAction styleFromString:]

  // instance methods
  -[VSApplicationControllerAlertAction callback]
  -[VSApplicationControllerAlertAction .cxx_destruct]
  -[VSApplicationControllerAlertAction setTitle:]
  -[VSApplicationControllerAlertAction title]
  -[VSApplicationControllerAlertAction setCallback:]
  -[VSApplicationControllerAlertAction setStyle:]
  -[VSApplicationControllerAlertAction style]


VSApplicationControllerAlert : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *title
 @property  NSString *message
 @property  NSArray *actions

  // instance methods
  -[VSApplicationControllerAlert actions]
  -[VSApplicationControllerAlert message]
  -[VSApplicationControllerAlert setActions:]
  -[VSApplicationControllerAlert setMessage:]
  -[VSApplicationControllerAlert .cxx_destruct]
  -[VSApplicationControllerAlert setTitle:]
  -[VSApplicationControllerAlert title]


VSCuratedViewModel : VSViewModel <VSLogoImageViewModel>
 @property  BOOL beginValidationButtonEnabled
 @property  NSString *beginValidationButtonTitle
 @property  VSOptional *identityProviderDisplayName
 @property  NSString *message
 @property  NSString *notice
 @property  BOOL showFooter
 @property  NSString *footerText
 @property  NSItemProvider *logoProvider
 @property  UIImage *logo
 @property  NSString *logoAccessibilityLabel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSCuratedViewModel showFooter]
  -[VSCuratedViewModel message]
  -[VSCuratedViewModel logo]
  -[VSCuratedViewModel init]
  -[VSCuratedViewModel notice]
  -[VSCuratedViewModel setMessage:]
  -[VSCuratedViewModel setLogo:]
  -[VSCuratedViewModel .cxx_destruct]
  -[VSCuratedViewModel setShowFooter:]
  -[VSCuratedViewModel identityProviderDisplayName]
  -[VSCuratedViewModel setNotice:]
  -[VSCuratedViewModel setFooterText:]
  -[VSCuratedViewModel footerText]
  -[VSCuratedViewModel logoProvider]
  -[VSCuratedViewModel setLogoProvider:]
  -[VSCuratedViewModel configureWithRequest:]
  -[VSCuratedViewModel logoAccessibilityLabel]
  -[VSCuratedViewModel setLogoAccessibilityLabel:]
  -[VSCuratedViewModel beginValidationButtonTitle]
  -[VSCuratedViewModel isBeginValidationButtonEnabled]
  -[VSCuratedViewModel setBeginValidationButtonTitle:]
  -[VSCuratedViewModel setBeginValidationButtonEnabled:]
  -[VSCuratedViewModel setIdentityProviderDisplayName:]


VSIdentityProviderSection : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *identityProviders

  // instance methods
  -[VSIdentityProviderSection init]
  -[VSIdentityProviderSection .cxx_destruct]
  -[VSIdentityProviderSection setIdentityProviders:]
  -[VSIdentityProviderSection identityProviders]


VSIdentityProviderTableViewDataSource : NSObject /usr/lib/libSystem.B.dylib <UITableViewDataSource>
 @property  NSArray *sections
 @property  NSDictionary *destinationsBySectionIndexTitle
 @property  NSString *titleForTableHeader
 @property  UITableView *tableView
 @property  NSArray *identityProviders
 @property  unsigned long additionalProvidersMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSIdentityProviderTableViewDataSource tableView:indexPathForSectionIndexTitle:atIndex:]
  -[VSIdentityProviderTableViewDataSource setSections:]
  -[VSIdentityProviderTableViewDataSource init]
  -[VSIdentityProviderTableViewDataSource setTableView:]
  -[VSIdentityProviderTableViewDataSource tableView:numberOfRowsInSection:]
  -[VSIdentityProviderTableViewDataSource tableView]
  -[VSIdentityProviderTableViewDataSource sectionIndexTitlesForTableView:]
  -[VSIdentityProviderTableViewDataSource .cxx_destruct]
  -[VSIdentityProviderTableViewDataSource tableView:titleForHeaderInSection:]
  -[VSIdentityProviderTableViewDataSource tableView:cellForRowAtIndexPath:]
  -[VSIdentityProviderTableViewDataSource numberOfSectionsInTableView:]
  -[VSIdentityProviderTableViewDataSource sections]
  -[VSIdentityProviderTableViewDataSource setIdentityProviders:]
  -[VSIdentityProviderTableViewDataSource setAdditionalProvidersMode:]
  -[VSIdentityProviderTableViewDataSource setTitleForTableHeader:]
  -[VSIdentityProviderTableViewDataSource additionalProvidersMode]
  -[VSIdentityProviderTableViewDataSource identityProviderForRowAtIndexPath:]
  -[VSIdentityProviderTableViewDataSource identityProviders]
  -[VSIdentityProviderTableViewDataSource _minimumProviderCountForIndexes]
  -[VSIdentityProviderTableViewDataSource setDestinationsBySectionIndexTitle:]
  -[VSIdentityProviderTableViewDataSource _additionalProvidersRowTitle]
  -[VSIdentityProviderTableViewDataSource _scrollToTableHeaderView]
  -[VSIdentityProviderTableViewDataSource destinationsBySectionIndexTitle]
  -[VSIdentityProviderTableViewDataSource _cellReuseIdentifierForRowAtIndexPath:]
  -[VSIdentityProviderTableViewDataSource _cellStyleForRowAtIndexPath:]
  -[VSIdentityProviderTableViewDataSource _titleForRowAtIndexPath:]
  -[VSIdentityProviderTableViewDataSource _textAlignmentForRowAtIndexPath:]
  -[VSIdentityProviderTableViewDataSource _textColorForRowAtIndexPath:]
  -[VSIdentityProviderTableViewDataSource titleForTableHeader]


VSTintedBackgroundButton : UIButton /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
  // instance methods
  -[VSTintedBackgroundButton setBounds:]
  -[VSTintedBackgroundButton setFrame:]
  -[VSTintedBackgroundButton tintColorDidChange]
  -[VSTintedBackgroundButton _updateBackgroundImages]


VSSupportedAppsViewController : UIViewController /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
 @property  NSOperationQueue *privateQueue
 @property  NSArray *apps
 @property  VSOptional *identityProvider
 @property  VSAuditToken *auditToken
 @property  <VSSupportedAppsViewControllerDelegate> *delegate

  // instance methods
  -[VSSupportedAppsViewController viewDidLoad]
  -[VSSupportedAppsViewController setAuditToken:]
  -[VSSupportedAppsViewController setApps:]
  -[VSSupportedAppsViewController auditToken]
  -[VSSupportedAppsViewController .cxx_destruct]
  -[VSSupportedAppsViewController _didFinish]
  -[VSSupportedAppsViewController setPrivateQueue:]
  -[VSSupportedAppsViewController initWithNibName:bundle:]
  -[VSSupportedAppsViewController privateQueue]
  -[VSSupportedAppsViewController setDelegate:]
  -[VSSupportedAppsViewController delegate]
  -[VSSupportedAppsViewController apps]
  -[VSSupportedAppsViewController _presentError:]
  -[VSSupportedAppsViewController identityProvider]
  -[VSSupportedAppsViewController setIdentityProvider:]
  -[VSSupportedAppsViewController beginLoadingApps]
  -[VSSupportedAppsViewController _doneButtonPresed:]
  -[VSSupportedAppsViewController _finishLoadingApps:]


VSSetupView : UIView /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
 @property  VSFontCenter *fontCenter
 @property  UIFont *defaultSkipButtonFont
 @property  UIFont *skipButtonFont
 @property  double defaultSkipButtonSpacing
 @property  UIStackView *stackView
 @property  UIButton *beginButton
 @property  UIButton *skipButton
 @property  UIButton *appsButton
 @property  <VSSetupViewDelegate> *delegate
 @property  UIImage *image
 @property  NSString *appName
 @property  NSString *appAgeRatingBadge
 @property  NSString *footnote
 @property  NSString *title
 @property  NSString *message
 @property  BOOL shouldShowAppsButton
 @property  BOOL shouldShowAboutButton
 @property  BOOL shouldOverrideSkipButtonStyle
 @property  NSString *beginButtonTitle
 @property  NSString *skipButtonTitle
 @property  NSString *appsButtonTitle
 @property  UIView *tvProviderPrivacyButtonContainer
 @property  UIView *tvAppPrivacyButtonContainer
 @property  NSString *footer

  // instance methods
  -[VSSetupView footer]
  -[VSSetupView didUpdateFocusInContext:withAnimationCoordinator:]
  -[VSSetupView message]
  -[VSSetupView stackView]
  -[VSSetupView initWithFrame:]
  -[VSSetupView setAppName:]
  -[VSSetupView setFootnote:]
  -[VSSetupView setMessage:]
  -[VSSetupView dealloc]
  -[VSSetupView .cxx_destruct]
  -[VSSetupView setImage:]
  -[VSSetupView setFooter:]
  -[VSSetupView setTitle:]
  -[VSSetupView image]
  -[VSSetupView title]
  -[VSSetupView traitCollectionDidChange:]
  -[VSSetupView footnote]
  -[VSSetupView skipButton]
  -[VSSetupView setStackView:]
  -[VSSetupView setDelegate:]
  -[VSSetupView setSkipButton:]
  -[VSSetupView delegate]
  -[VSSetupView initWithCoder:]
  -[VSSetupView appName]
  -[VSSetupView skipButtonTitle]
  -[VSSetupView setSkipButtonTitle:]
  -[VSSetupView fontCenter]
  -[VSSetupView setFontCenter:]
  -[VSSetupView defaultSkipButtonSpacing]
  -[VSSetupView defaultSkipButtonFont]
  -[VSSetupView setSkipButtonFont:]
  -[VSSetupView appsButton]
  -[VSSetupView beginButton]
  -[VSSetupView setShouldOverrideSkipButtonStyle:]
  -[VSSetupView _beginButtonPressed:]
  -[VSSetupView _skipButtonPressed:]
  -[VSSetupView _appsButtonPressed:]
  -[VSSetupView appAgeRatingBadge]
  -[VSSetupView setAppAgeRatingBadge:]
  -[VSSetupView shouldShowAppsButton]
  -[VSSetupView setShouldShowAppsButton:]
  -[VSSetupView shouldShowAboutButton]
  -[VSSetupView setShouldShowAboutButton:]
  -[VSSetupView shouldOverrideSkipButtonStyle]
  -[VSSetupView beginButtonTitle]
  -[VSSetupView setBeginButtonTitle:]
  -[VSSetupView appsButtonTitle]
  -[VSSetupView setAppsButtonTitle:]
  -[VSSetupView tvProviderPrivacyButtonContainer]
  -[VSSetupView tvAppPrivacyButtonContainer]
  -[VSSetupView setDefaultSkipButtonFont:]
  -[VSSetupView skipButtonFont]
  -[VSSetupView setDefaultSkipButtonSpacing:]
  -[VSSetupView setBeginButton:]
  -[VSSetupView setAppsButton:]


VSAppDocumentControllerFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[VSAppDocumentControllerFactory appDocumentControllerForAppDocument:error:]


VSApplicationControllerRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  long long type
 @property  NSString *authenticationToken
 @property  NSString *SAMLRequest
 @property  NSArray *attributeNames
 @property  NSString *requestorVerificationToken

  // instance methods
  -[VSApplicationControllerRequest setType:]
  -[VSApplicationControllerRequest .cxx_destruct]
  -[VSApplicationControllerRequest attributeNames]
  -[VSApplicationControllerRequest type]
  -[VSApplicationControllerRequest setAuthenticationToken:]
  -[VSApplicationControllerRequest authenticationToken]
  -[VSApplicationControllerRequest setAttributeNames:]
  -[VSApplicationControllerRequest SAMLRequest]
  -[VSApplicationControllerRequest requestorVerificationToken]
  -[VSApplicationControllerRequest setRequestorVerificationToken:]
  -[VSApplicationControllerRequest setSAMLRequest:]


VSSetupFlowConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL shouldSkipSetupEntirely
 @property  BOOL shouldOfferAuthenticationFlow
 @property  BOOL shouldOfferSoleAuthenticationFlow
 @property  BOOL shouldOfferSTBAuthenticationFlow
 @property  VSIdentityProvider *identityProvider
 @property  NSString *providerAccountUsername
 @property  NSString *preferredAppID
 @property  VSAppDescription *msoAppDescription
 @property  NSArray *bundlesIDsToConsent
 @property  NSDictionary *vouchersByBundleID
 @property  BOOL canShowSupportedAppsButton

  // class methods
  +[VSSetupFlowConfiguration supportsSecureCoding]

  // instance methods
  -[VSSetupFlowConfiguration copyWithZone:]
  -[VSSetupFlowConfiguration init]
  -[VSSetupFlowConfiguration .cxx_destruct]
  -[VSSetupFlowConfiguration encodeWithCoder:]
  -[VSSetupFlowConfiguration isEqual:]
  -[VSSetupFlowConfiguration initWithCoder:]
  -[VSSetupFlowConfiguration identityProvider]
  -[VSSetupFlowConfiguration setIdentityProvider:]
  -[VSSetupFlowConfiguration setPreferredAppID:]
  -[VSSetupFlowConfiguration preferredAppID]
  -[VSSetupFlowConfiguration shouldSkipSetupEntirely]
  -[VSSetupFlowConfiguration shouldOfferSTBAuthenticationFlow]
  -[VSSetupFlowConfiguration msoAppDescription]
  -[VSSetupFlowConfiguration providerAccountUsername]
  -[VSSetupFlowConfiguration setProviderAccountUsername:]
  -[VSSetupFlowConfiguration shouldOfferSoleAuthenticationFlow]
  -[VSSetupFlowConfiguration canShowSupportedAppsButton]
  -[VSSetupFlowConfiguration bundlesIDsToConsent]
  -[VSSetupFlowConfiguration shouldOfferAuthenticationFlow]
  -[VSSetupFlowConfiguration vouchersByBundleID]
  -[VSSetupFlowConfiguration setShouldSkipSetupEntirely:]
  -[VSSetupFlowConfiguration setMsoAppDescription:]
  -[VSSetupFlowConfiguration setShouldOfferSTBAuthenticationFlow:]
  -[VSSetupFlowConfiguration setShouldOfferSoleAuthenticationFlow:]
  -[VSSetupFlowConfiguration setVouchersByBundleID:]
  -[VSSetupFlowConfiguration setBundlesIDsToConsent:]
  -[VSSetupFlowConfiguration setShouldOfferAuthenticationFlow:]
  -[VSSetupFlowConfiguration setCanShowSupportedAppsButton:]


UIButton(VSAdditions)
	// instance methods
	-[UIButton(VSAdditions) vs_normalTitle]
	-[UIButton(VSAdditions) setVs_normalTitle:]

NSURLSessionConfiguration(VSAdditions)
	// class methods
	+[NSURLSessionConfiguration(VSAdditions) vs_defaultSessionConfigurationForSourceAppWithAuditToken:]

UIViewController(VSAdditions)
	// instance methods
	-[UIViewController(VSAdditions) vs_beginIgnoringInteraction]
	-[UIViewController(VSAdditions) vs_endIgnoringInteraction]
	-[UIViewController(VSAdditions) vs_adjustContentScrollViewInsets]
	-[UIViewController(VSAdditions) vs_ignoreInteractionCount]
	-[UIViewController(VSAdditions) vs_setIgnoreInteractionCount:]
	-[UIViewController(VSAdditions) vs_addFocusGuideFromView:toViews:withDirection:]

IKViewElement(VSAdditions)
	// instance methods
	-[IKViewElement(VSAdditions) vs_elementType]
	-[IKViewElement(VSAdditions) vs_itemElementsOfType:]
	-[IKViewElement(VSAdditions) vs_boolAttributeValueForKey:]
	-[IKViewElement(VSAdditions) vs_selectedChildElementIndex]

UIColor(VSAdditions)
	// class methods
	+[UIColor(VSAdditions) vsa_opacityALightColor]
	+[UIColor(VSAdditions) vsa_opacityADarkColor]
	+[UIColor(VSAdditions) vsa_dynamicColorWithLightStyleColor:darkStyleColor:]
	+[UIColor(VSAdditions) vsa_opacityBLightColor]
	+[UIColor(VSAdditions) vsa_opacityBDarkColor]
	+[UIColor(VSAdditions) vsa_opacityCLightColor]
	+[UIColor(VSAdditions) vsa_opacityCDarkColor]
	+[UIColor(VSAdditions) vsa_primaryBackgroundColor]
	+[UIColor(VSAdditions) vsa_secondaryBackgroundColor]
	+[UIColor(VSAdditions) vsa_tertiaryBackgroundColor]
	+[UIColor(VSAdditions) vsa_primaryLabelColor]
	+[UIColor(VSAdditions) vsa_secondaryLabelColor]
	+[UIColor(VSAdditions) vsa_tertiaryLabelColor]
	+[UIColor(VSAdditions) vsa_quaternaryLabelColor]
	+[UIColor(VSAdditions) vsa_primaryFillColor]
	+[UIColor(VSAdditions) vsa_secondaryFillColor]
	+[UIColor(VSAdditions) vsa_tertiaryFillColor]
	+[UIColor(VSAdditions) vsa_opacityADynamicColor]
	+[UIColor(VSAdditions) vsa_opacityBDynamicColor]
	+[UIColor(VSAdditions) vsa_opacityCDynamicColor]

01 00 0f00 /System/Library/PrivateFrameworks/AccountsUI.framework/AccountsUI: ACUIViewController 
01 00 0700 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKAppContext 
01 00 0700 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKAppDocument 
01 00 0700 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKDOMFeatureFactory 
01 00 0700 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKImageElement 
01 00 0700 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKJSObject 
01 00 0700 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKTextElement 
01 00 0700 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKTextFieldElement 
01 00 0700 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKViewElement 
01 00 0700 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKViewElementRegistry 
01 00 0300 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSContext 
01 00 0300 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSValue 
01 00 1500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPCookieStorage 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValueTransformer 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0400 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBBundle 
01 00 0400 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBPrivacyFlow 
01 00 0400 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBPrivacyLinkController 
01 00 0400 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBPrivacyPresenter 
01 00 1100 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSEditableTableCell 
01 00 1100 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSpecifier 
01 00 1100 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSTableCell 
01 00 1100 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSTextFieldSpecifier 
01 00 0900 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSAccountStore 
01 00 0900 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSLookupRequest 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusGuide 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UILocalizedIndexedCollation 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPickerView 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebView 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSAccount 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSAccountChannels 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSAccountChannelsCenter 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSAccountChannelsSaveOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSAccountMetadata 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSAccountProviderResponse 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSAccountSaveOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSAccountSerializationCenter 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSAccountStore 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSAppChannelsFilter 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSAppInstallationOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSApplicationBootURLOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSAsyncOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSAuditToken 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSBlockBasedValueTransformer 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSCasePreservingString 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSCompoundValueTransformer 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSDelayOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSDeveloperIdentityProviderFetchAllOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSDeveloperSettingsFetchOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSDevice 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSErrorRecoveryAttempterDelegate 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSExpressionEvaluator 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSFailable 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSFailableValueTransformer 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSIdentityProvider 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSIdentityProviderAvailabilityInfoCenter 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSIdentityProviderFetchAllAppsOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSIdentityProviderFetchAppsOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSMetricsCenter 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSOpaqueAuthenticationToken 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSOptional 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSPersistentStorage 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSPreferences 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSPrivacyConsentVoucher 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSRemoteNotifier 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSRestrictionsCenter 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSReverseValueTransformer 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSSAMLAuthenticationToken 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSSecurityTask 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSSemaphore 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSStateMachine 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSStoreRequest 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSStoreRequestOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSStoreURLBag 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSStoreURLBagLoadOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSSubscription 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSSubscriptionRegistrationCenter 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSSubscriptionSource 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSTimeoutOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSValueType 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSValueTypeProperty 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSVerificationDataOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSVerificationStateResetOperation 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSViewServiceResponse 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSViewServiceXPCInterface 
01 00 0600 /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount: VSWeakForwardingTarget 
01 00 0b00 /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI: VUIAccessViewController 
01 00 0b00 /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI: VUIAppInstallerViewController 
01 00 0b00 /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI: VUIAppsGridViewController 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
