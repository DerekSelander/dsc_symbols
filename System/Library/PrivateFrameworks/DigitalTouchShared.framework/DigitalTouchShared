|| __DATA.__objc_data _OBJC_CLASS_$_DTSForceGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_DTSSceneView
|| __DATA.__objc_data _OBJC_CLASS_$_ETAngerMessage
|| __DATA.__objc_data _OBJC_CLASS_$_ETBoxcarFilterPointFIFO
|| __DATA.__objc_data _OBJC_CLASS_$_ETColorGradientView
|| __DATA.__objc_data _OBJC_CLASS_$_ETColorPickerView
|| __DATA.__objc_data _OBJC_CLASS_$_ETColorStore
|| __DATA.__objc_data _OBJC_CLASS_$_ETColorWheelView
|| __DATA.__objc_data _OBJC_CLASS_$_ETGLSketchRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_ETGLSketchView
|| __DATA.__objc_data _OBJC_CLASS_$_ETKissMessage
|| __DATA.__objc_data _OBJC_CLASS_$_ETMessageHeaderReader
|| __DATA.__objc_data _OBJC_CLASS_$_ETPAnger
|| __DATA.__objc_data _OBJC_CLASS_$_ETPDoodle
|| __DATA.__objc_data _OBJC_CLASS_$_ETPHeader
|| __DATA.__objc_data _OBJC_CLASS_$_ETPHeartbeat
|| __DATA.__objc_data _OBJC_CLASS_$_ETPKiss
|| __DATA.__objc_data _OBJC_CLASS_$_ETPReadReceipt
|| __DATA.__objc_data _OBJC_CLASS_$_ETPTap
|| __DATA.__objc_data _OBJC_CLASS_$_ETPVideo
|| __DATA.__objc_data _OBJC_CLASS_$_ETPointFIFO
|| __DATA.__objc_data _OBJC_CLASS_$_ETQuadCurvePointFIFO
|| __DATA.__objc_data _OBJC_CLASS_$_ETQuickTapMessage
|| __DATA.__objc_data _OBJC_CLASS_$_ETReadReceiptMessage
|| __DATA.__objc_data _OBJC_CLASS_$_ETUtility
|| __DATA.__objc_data _OBJC_CLASS_$_ETVideoMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HeartRateStore
|| __DATA.__objc_data _OBJC_CLASS_$_KissNode
|| __DATA.__objc_data _OBJC_METACLASS_$_DTSForceGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_DTSSceneView
|| __DATA.__objc_data _OBJC_METACLASS_$_ETAngerMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_ETBoxcarFilterPointFIFO
|| __DATA.__objc_data _OBJC_METACLASS_$_ETColorGradientView
|| __DATA.__objc_data _OBJC_METACLASS_$_ETColorPickerView
|| __DATA.__objc_data _OBJC_METACLASS_$_ETColorStore
|| __DATA.__objc_data _OBJC_METACLASS_$_ETColorWheelView
|| __DATA.__objc_data _OBJC_METACLASS_$_ETGLSketchRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_ETGLSketchView
|| __DATA.__objc_data _OBJC_METACLASS_$_ETKissMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_ETMessageHeaderReader
|| __DATA.__objc_data _OBJC_METACLASS_$_ETPAnger
|| __DATA.__objc_data _OBJC_METACLASS_$_ETPDoodle
|| __DATA.__objc_data _OBJC_METACLASS_$_ETPHeader
|| __DATA.__objc_data _OBJC_METACLASS_$_ETPHeartbeat
|| __DATA.__objc_data _OBJC_METACLASS_$_ETPKiss
|| __DATA.__objc_data _OBJC_METACLASS_$_ETPReadReceipt
|| __DATA.__objc_data _OBJC_METACLASS_$_ETPTap
|| __DATA.__objc_data _OBJC_METACLASS_$_ETPVideo
|| __DATA.__objc_data _OBJC_METACLASS_$_ETPointFIFO
|| __DATA.__objc_data _OBJC_METACLASS_$_ETQuadCurvePointFIFO
|| __DATA.__objc_data _OBJC_METACLASS_$_ETQuickTapMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_ETReadReceiptMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_ETUtility
|| __DATA.__objc_data _OBJC_METACLASS_$_ETVideoMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HeartRateStore
|| __DATA.__objc_data _OBJC_METACLASS_$_KissNode
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPAnger._delays
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPAnger._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPAnger._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPAnger._normalizedCenterX
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPAnger._normalizedCenterY
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPAnger._points
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPDoodle._colorData
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPDoodle._doodleCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPDoodle._doodleData
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPDoodle._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPDoodle._pointTimeDeltaData
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeader._baseColor
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeader._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeader._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeader._messageData
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeader._messageType
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeader._sendDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeader._startDelay
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeader._supportsPlaybackTimeOffsets
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeartbeat._beatsPerMinute
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeartbeat._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeartbeat._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeartbeat._heartbreakTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeartbeat._normalizedCenterX
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeartbeat._normalizedCenterY
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPHeartbeat._rotation
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPKiss._angles
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPKiss._delays
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPKiss._points
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPTap._colors
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPTap._points
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPTap._timeDeltas
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPVideo._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPVideo._introMessageData
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPVideo._mediaType
|| __DATA.__objc_ivar _OBJC_IVAR_$_ETPVideo._playingMessagesData
|| __DATA_CONST.__const _ETAggdExpiredUnreadMessagesKey
|| __DATA_CONST.__const _ETAggdIMessageButtonTappedKey
|| __DATA_CONST.__const _ETAggdMessageReceivedTransportTimeToAppKey
|| __DATA_CONST.__const _ETAggdMessageReceivedTransportTimeToDaemonKey
|| __DATA_CONST.__const _ETAggdMessageReceivedTypeDoodleKey
|| __DATA_CONST.__const _ETAggdMessageReceivedTypeHeartbeatKey
|| __DATA_CONST.__const _ETAggdMessageReceivedTypeQuickTapKey
|| __DATA_CONST.__const _ETAggdMessageReceivedTypeTapKey
|| __DATA_CONST.__const _ETAggdMessageReceivedTypeVideoKey
|| __DATA_CONST.__const _ETAggdMessageSentNumberOfColorsPrefixKey
|| __DATA_CONST.__const _ETAggdMessageSentSizeKey
|| __DATA_CONST.__const _ETAggdMessageSentTypeDoodleKey
|| __DATA_CONST.__const _ETAggdMessageSentTypeHeartbeatKey
|| __DATA_CONST.__const _ETAggdMessageSentTypeQuickTapKey
|| __DATA_CONST.__const _ETAggdMessageSentTypeTapKey
|| __DATA_CONST.__const _ETAggdPhoneButtonTappedKey
|| __DATA_CONST.__const _ETAggdSenderCountKey
|| __DATA_CONST.__const _ETAppServiceName
|| __DATA_CONST.__const _ETAppViewControllerActivatedNotification
|| __DATA_CONST.__const _ETAppViewControllerDeactivatedNotification
|| __DATA_CONST.__const _ETDomain
|| __DATA_CONST.__const _ETMessageDictionaryABRecordGUIDKey
|| __DATA_CONST.__const _ETMessageDictionaryAddressKey
|| __DATA_CONST.__const _ETMessageDictionaryAllCountKey
|| __DATA_CONST.__const _ETMessageDictionaryContentKey
|| __DATA_CONST.__const _ETMessageDictionaryDeliveryStatusDateKey
|| __DATA_CONST.__const _ETMessageDictionaryFromIDKey
|| __DATA_CONST.__const _ETMessageDictionaryIdentifierKey
|| __DATA_CONST.__const _ETMessageDictionaryMessageCountKey
|| __DATA_CONST.__const _ETMessageDictionaryMessageTypeKey
|| __DATA_CONST.__const _ETMessageDictionaryRecipientKey
|| __DATA_CONST.__const _ETMessageDictionarySenderKey
|| __DATA_CONST.__const _ETMessageDictionarySentDateKey
|| __DATA_CONST.__const _ETMessageDictionaryTapCountKey
|| __DATA_CONST.__const _ETMessageSenderUnreadCountKey
|| __DATA_CONST.__const _ETNotificationURLMessageTypeKey
|| __DATA_CONST.__const _ETNotificationURLScheme
|| __DATA_CONST.__const _ETNotificationURLSenderKey
|| __DATA_CONST.__const _ETPairedSyncStateChangedNotification
|| __DATA_CONST.__const _ETPairedSyncStatePreferenceKey
|| __DATA_CONST.__const _ETPeoplePicker1UpScrollPPTTestName
|| __DATA_CONST.__const _ETPeoplePicker2UpScrollPPTTestName
|| __DATA_CONST.__const _ETPeoplePicker3UpScrollPPTTestName
|| __DATA_CONST.__const _ETPersonUnreadMessageCountKey
|| __DATA_CONST.__const _ETPersonUnreadMessageStatusChangedNotification
|| __DATA_CONST.__const _ETUserTappedOnNotificationNotification
|| __DATA_CONST.__const _kETArchiveSentMessages
|| __DATA_CONST.__const _kETDomain
|| __DATA_CONST.__const _kETEarlyLoadEnabled
|| __DATA_CONST.__const _kETLastInteractiveZoomLevelKey
|| __DATA_CONST.__const _kETLoggingEnabledDefaultsKey
|| __DATA_CONST.__const _kETSceneLoggingEnabledDefaultsKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DTSCanvasViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DTSColorPicker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DTSColorWheel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DTSTypingIndicatorLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ETCanvasView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ETHeartbeatMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ETMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ETPaletteCircleView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ETSketchMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ETTapMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DTSCanvasViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DTSColorPicker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DTSColorWheel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DTSTypingIndicatorLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ETCanvasView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ETHeartbeatMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ETMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ETPaletteCircleView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ETSketchMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ETTapMessage
|| __TEXT.__const _DOT_POINTSIZE
|| __TEXT.__const _DigitalTouchSharedVersionNumber
|| __TEXT.__const _DigitalTouchSharedVersionString
|| __TEXT.__const _ETFallbackHeartRate
|| __TEXT.__const _ETMaxFriendGroups
|| __TEXT.__const _ETMaxFriendsPerGroup
|| __TEXT.__const _ETMaxHeartRateMessageDuration
|| __TEXT.__const _ETMessageRenderBufferHeight
|| __TEXT.__const _ETMessageRenderBufferWidth
|| __TEXT.__const _ETMinHeartRateMessageDuration
|| __TEXT.__const _ETPreferredFramesPerSecond
|| __TEXT.__const _ETSceneWidthNormalizationFactor
|| __TEXT.__const _FADE_IN_DURATION
|| __TEXT.__const _FADE_OUT_DURATION
|| __TEXT.__const _LINE_POINTSIZE
|| __TEXT.__const _VERTEX_COUNT
|| __TEXT.__const _VERTEX_TIME_OFFSET_PER_GROUP
|| __TEXT.__text _ETAggdLogMessageReceived
|| __TEXT.__text _ETFrameworkBundle
|| __TEXT.__text _ETPAngerReadFrom
|| __TEXT.__text _ETPDoodleReadFrom
|| __TEXT.__text _ETPHeaderReadFrom
|| __TEXT.__text _ETPHeartbeatReadFrom
|| __TEXT.__text _ETPKissReadFrom
|| __TEXT.__text _ETPReadReceiptReadFrom
|| __TEXT.__text _ETPTapReadFrom
|| __TEXT.__text _ETPVideoReadFrom
|| __TEXT.__text _HueFromRadians
|| __TEXT.__text _NSStringFromETMessageType
|| __TEXT.__text _RadiansFromHue
|| __TEXT.__text _RoundViewOriginToViewScale
|| __TEXT.__text __Z10clampFloatfff
|| __TEXT.__text __Z16createCirclePathdd
|| __TEXT.__text __Z20createSemiCirclePathdd
|| __TEXT.__text __createLogKeyForReceivedMessage
|| __TEXT.__text __endOfCurrentDay
|| __TEXT.__text __logUniqueSenderCount
|| __TEXT.__text _releasePixels
__ AVFAudio: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVURLAssetPreferPreciseDurationAndTimingKey
__ AVFoundation: _OBJC_CLASS_$_AVAssetImageGenerator
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLayer
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientSetValueForDistributionKey
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGColorEqualToColor
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddEllipseInRect
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPathAddArc
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersection
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _kCMTimeZero
__ Foundation: _NSStringFromClass
__ Foundation: _NSUserDefaultsDidChangeNotification
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ HealthKit: _HKPredicateKeyPathStartDate
__ HealthKit: _HKQuantityTypeIdentifierHeartRate
__ HealthKit: _HKSampleSortIdentifierEndDate
__ HealthKit: _OBJC_CLASS_$_HKHealthStore
__ HealthKit: _OBJC_CLASS_$_HKObjectType
__ HealthKit: _OBJC_CLASS_$_HKQuantityType
__ HealthKit: _OBJC_CLASS_$_HKSampleQuery
__ HealthKit: _OBJC_CLASS_$_HKUnit
__ IMFoundation: _IMOSLoggingEnabled
__ IMFoundation: _OSLogHandleForIMFoundationCategory
__ IMFoundation: __IMAlwaysLog
__ IMFoundation: __IMWillLog
__ IMSharedUI: _OBJC_CLASS_$_IMTypingIndicatorLayer
__ IMSharedUI: _OBJC_METACLASS_$_IMTypingIndicatorLayer
__ Marco: _MarcoLogMadridLevel
__ Marco: _MarcoShouldLogMadridLevel
__ OpenGLES: _OBJC_CLASS_$_EAGLContext
__ OpenGLES: _glAttachShader
__ OpenGLES: _glBindBuffer
__ OpenGLES: _glBindFramebuffer
__ OpenGLES: _glBindRenderbuffer
__ OpenGLES: _glBindTexture
__ OpenGLES: _glBindVertexArrayOES
__ OpenGLES: _glBlendFunc
__ OpenGLES: _glBufferData
__ OpenGLES: _glBufferSubData
__ OpenGLES: _glCheckFramebufferStatus
__ OpenGLES: _glClear
__ OpenGLES: _glCompileShader
__ OpenGLES: _glCreateProgram
__ OpenGLES: _glCreateShader
__ OpenGLES: _glDeleteBuffers
__ OpenGLES: _glDeleteFramebuffers
__ OpenGLES: _glDeleteRenderbuffers
__ OpenGLES: _glDeleteShader
__ OpenGLES: _glDeleteVertexArraysOES
__ OpenGLES: _glDetachShader
__ OpenGLES: _glDiscardFramebufferEXT
__ OpenGLES: _glDrawArrays
__ OpenGLES: _glEnable
__ OpenGLES: _glEnableVertexAttribArray
__ OpenGLES: _glFramebufferRenderbuffer
__ OpenGLES: _glGenBuffers
__ OpenGLES: _glGenFramebuffers
__ OpenGLES: _glGenRenderbuffers
__ OpenGLES: _glGenTextures
__ OpenGLES: _glGenVertexArraysOES
__ OpenGLES: _glGetError
__ OpenGLES: _glGetProgramiv
__ OpenGLES: _glGetRenderbufferParameteriv
__ OpenGLES: _glGetShaderiv
__ OpenGLES: _glLinkProgram
__ OpenGLES: _glPixelStorei
__ OpenGLES: _glReadPixels
__ OpenGLES: _glRenderbufferStorage
__ OpenGLES: _glShaderSource
__ OpenGLES: _glTexImage2D
__ OpenGLES: _glTexParameteri
__ OpenGLES: _glUseProgram
__ OpenGLES: _glVertexAttrib1f
__ OpenGLES: _glVertexAttribPointer
__ OpenGLES: _glViewport
__ OpenGLES: _kEAGLColorFormatRGBA8
__ OpenGLES: _kEAGLDrawablePropertyColorFormat
__ OpenGLES: _kEAGLDrawablePropertyRetainedBacking
__ PhysicsKit: _srdnoise2
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBDataReader
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteFixed32Field
__ ProtocolBuffer: _PBDataWriterWriteFloatField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteSfixed64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAEAGLLayer
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCALineCapRound
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ SoftLinking: __sl_dlopen
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRoundToViewScale
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _drand48
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fmodf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _hypotf
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
DTSColorPicker : UIView
 @property  NSArray *paletteCircles
 @property  ETPaletteCircleView *selectedCircle
 @property  UILongPressGestureRecognizer *longPressRecognizer
 @property  <DTSColorPickerDelegate> *delegate
 @property  UIColor *selectedColor
 @property  BOOL dimmed
 @property  unsigned long colorCircleSize
 @property  double colorCircleDiameter
 @property  double colorCircleHorizontalSpacing

  // instance methods
  -[DTSColorPicker setDimmed:]
  -[DTSColorPicker isDimmed]
  -[DTSColorPicker setDelegate:]
  -[DTSColorPicker delegate]
  -[DTSColorPicker longPressRecognizer]
  -[DTSColorPicker .cxx_destruct]
  -[DTSColorPicker setLongPressRecognizer:]
  -[DTSColorPicker initWithFrame:]
  -[DTSColorPicker selectedColor]
  -[DTSColorPicker selectedCircle]
  -[DTSColorPicker setSelectedCircle:]
  -[DTSColorPicker didReceiveLongPress:]
  -[DTSColorPicker paletteCircleTapped:]
  -[DTSColorPicker colorCircleHorizontalSpacing]
  -[DTSColorPicker colorCircleDiameter]
  -[DTSColorPicker setColorCircleSize:]
  -[DTSColorPicker createPaletteCirclesWithParentView:]
  -[DTSColorPicker selectCircle:completion:]
  -[DTSColorPicker showColorWheel]
  -[DTSColorPicker colorCircleSize]
  -[DTSColorPicker paletteCircles]
  -[DTSColorPicker setPaletteCircles:]


ETPHeader : PBCodable <NSCopying>
 @property  BOOL hasMessageType
 @property  int messageType
 @property  BOOL hasSendDate
 @property  long long sendDate
 @property  BOOL hasMessageData
 @property  NSData *messageData
 @property  BOOL hasBaseColor
 @property  unsigned int baseColor
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasSupportsPlaybackTimeOffsets
 @property  BOOL supportsPlaybackTimeOffsets
 @property  BOOL hasStartDelay
 @property  double startDelay

  // instance methods
  -[ETPHeader messageTypeAsString:]
  -[ETPHeader identifier]
  -[ETPHeader setMessageType:]
  -[ETPHeader hasMessageType]
  -[ETPHeader hasIdentifier]
  -[ETPHeader .cxx_destruct]
  -[ETPHeader mergeFrom:]
  -[ETPHeader StringAsMessageType:]
  -[ETPHeader setIdentifier:]
  -[ETPHeader dictionaryRepresentation]
  -[ETPHeader copyWithZone:]
  -[ETPHeader readFrom:]
  -[ETPHeader messageType]
  -[ETPHeader writeTo:]
  -[ETPHeader isEqual:]
  -[ETPHeader setHasMessageType:]
  -[ETPHeader hasMessageData]
  -[ETPHeader messageData]
  -[ETPHeader setMessageData:]
  -[ETPHeader baseColor]
  -[ETPHeader sendDate]
  -[ETPHeader setSendDate:]
  -[ETPHeader startDelay]
  -[ETPHeader setBaseColor:]
  -[ETPHeader setStartDelay:]
  -[ETPHeader setHasSendDate:]
  -[ETPHeader hasSendDate]
  -[ETPHeader setHasBaseColor:]
  -[ETPHeader hasBaseColor]
  -[ETPHeader setSupportsPlaybackTimeOffsets:]
  -[ETPHeader setHasSupportsPlaybackTimeOffsets:]
  -[ETPHeader hasSupportsPlaybackTimeOffsets]
  -[ETPHeader setHasStartDelay:]
  -[ETPHeader hasStartDelay]
  -[ETPHeader supportsPlaybackTimeOffsets]


ETColorPickerView : DTSColorPicker <DTSColorWheelDelegate>
 @property  BOOL isExpanded
 @property  <ETColorPickerViewDelegate> *presentationDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ETColorPickerView presentationDelegate]
  -[ETColorPickerView setDimmed:]
  -[ETColorPickerView setIsExpanded:]
  -[ETColorPickerView presentAnimated:completion:]
  -[ETColorPickerView setPresentationDelegate:]
  -[ETColorPickerView .cxx_destruct]
  -[ETColorPickerView dismissAnimated:completion:]
  -[ETColorPickerView pointInside:withEvent:]
  -[ETColorPickerView isExpanded]
  -[ETColorPickerView _dismissAnimated:completion:]
  -[ETColorPickerView paletteCircleTapped:]
  -[ETColorPickerView showColorWheel]
  -[ETColorPickerView presentTapReceived:]
  -[ETColorPickerView colorWheel:willPickColor:]
  -[ETColorPickerView colorWheel:didPickColor:]
  -[ETColorPickerView initWithFrame:collapsedFrame:]
  -[ETColorPickerView layoutPaletteCircles]
  -[ETColorPickerView _addRotationAnimationFromAngle:toAngle:]
  -[ETColorPickerView _isCenterCircle:]
  -[ETColorPickerView animateToGray]
  -[ETColorPickerView animateToSelectedColor]
  -[ETColorPickerView animateOffscreen]
  -[ETColorPickerView animateOnscreen]
  -[ETColorPickerView transformSelectionMarkerToPickerCircleWithCompletion:]
  -[ETColorPickerView transformPickerCircleToSelectionMarkerWithCompletion:]
  -[ETColorPickerView fadeoutPaletterCirclesInPairs]
  -[ETColorPickerView fadeinPaletterCirclesInPairs]
  -[ETColorPickerView fadeoutPaletteCircle:delay:]
  -[ETColorPickerView fadeinPaletteCircle:delay:]
  -[ETColorPickerView movePaletteCircleTowardsViewCenter:distance:]
  -[ETColorPickerView movePalettCircleToOriginalLayoutPosition:]
  -[ETColorPickerView paletteCircleAnimationPairs]


DTSSceneView : UIView
 @property  BOOL shouldCullNonVisibleNodes
 @property  BOOL ignoresSiblingOrder
 @property  BOOL allowsTransparency
 @property  BOOL paused
 @property  long long preferredFramesPerSecond
 @property  NSMutableDictionary *options

  // instance methods
  -[DTSSceneView _updateLayout]
  -[DTSSceneView _applicationWillEnterForeground]
  -[DTSSceneView preferredFramesPerSecond]
  -[DTSSceneView setPreferredFramesPerSecond:]
  -[DTSSceneView setPaused:]
  -[DTSSceneView .cxx_destruct]
  -[DTSSceneView _applicationDidEnterBackground]
  -[DTSSceneView paused]
  -[DTSSceneView options]
  -[DTSSceneView layoutSubviews]
  -[DTSSceneView initWithFrame:]
  -[DTSSceneView _applicationDidBecomeActive]
  -[DTSSceneView setIgnoresSiblingOrder:]
  -[DTSSceneView ignoresSiblingOrder]
  -[DTSSceneView setShouldCullNonVisibleNodes:]
  -[DTSSceneView shouldCullNonVisibleNodes]
  -[DTSSceneView allowsTransparency]
  -[DTSSceneView setAllowsTransparency:]
  -[DTSSceneView presentScene:]


ETPHeartbeat : PBCodable <NSCopying>
 @property  BOOL hasBeatsPerMinute
 @property  float beatsPerMinute
 @property  BOOL hasDuration
 @property  unsigned int duration
 @property  BOOL hasNormalizedCenterX
 @property  float normalizedCenterX
 @property  BOOL hasNormalizedCenterY
 @property  float normalizedCenterY
 @property  BOOL hasRotation
 @property  float rotation
 @property  BOOL hasHeartbreakTime
 @property  float heartbreakTime

  // instance methods
  -[ETPHeartbeat setDuration:]
  -[ETPHeartbeat setRotation:]
  -[ETPHeartbeat hasDuration]
  -[ETPHeartbeat rotation]
  -[ETPHeartbeat duration]
  -[ETPHeartbeat mergeFrom:]
  -[ETPHeartbeat dictionaryRepresentation]
  -[ETPHeartbeat copyWithZone:]
  -[ETPHeartbeat readFrom:]
  -[ETPHeartbeat setHasDuration:]
  -[ETPHeartbeat writeTo:]
  -[ETPHeartbeat isEqual:]
  -[ETPHeartbeat hasRotation]
  -[ETPHeartbeat beatsPerMinute]
  -[ETPHeartbeat setBeatsPerMinute:]
  -[ETPHeartbeat setHasBeatsPerMinute:]
  -[ETPHeartbeat hasBeatsPerMinute]
  -[ETPHeartbeat setNormalizedCenterX:]
  -[ETPHeartbeat setHasNormalizedCenterX:]
  -[ETPHeartbeat hasNormalizedCenterX]
  -[ETPHeartbeat setNormalizedCenterY:]
  -[ETPHeartbeat setHasNormalizedCenterY:]
  -[ETPHeartbeat hasNormalizedCenterY]
  -[ETPHeartbeat setHasRotation:]
  -[ETPHeartbeat setHeartbreakTime:]
  -[ETPHeartbeat setHasHeartbreakTime:]
  -[ETPHeartbeat hasHeartbreakTime]
  -[ETPHeartbeat normalizedCenterX]
  -[ETPHeartbeat normalizedCenterY]
  -[ETPHeartbeat heartbreakTime]


DTSColorWheel : UIView
 @property  <DTSColorWheelDelegate> *delegate
 @property  double colorWheelRadius
 @property  double gradientWidth
 @property  double pickerDiameter
 @property  double hueRotation
 @property  double pickerRotation
 @property  UIView *pickerCircle
 @property  UIButton *doneButton

  // instance methods
  -[DTSColorWheel setDoneButton:]
  -[DTSColorWheel setDelegate:]
  -[DTSColorWheel delegate]
  -[DTSColorWheel doneButton]
  -[DTSColorWheel .cxx_destruct]
  -[DTSColorWheel doneButtonTapped:]
  -[DTSColorWheel touchesMoved:withEvent:]
  -[DTSColorWheel touchesBegan:withEvent:]
  -[DTSColorWheel touchesEnded:withEvent:]
  -[DTSColorWheel touchesCancelled:withEvent:]
  -[DTSColorWheel beganTouches:]
  -[DTSColorWheel finishedTouches]
  -[DTSColorWheel createDoneButtonWithFrame:]
  -[DTSColorWheel updatePickerPositionForPoint:]
  -[DTSColorWheel pickerViewHighlightedColor]
  -[DTSColorWheel colorWheelRadius]
  -[DTSColorWheel setColorWheelRadius:]
  -[DTSColorWheel gradientWidth]
  -[DTSColorWheel setGradientWidth:]
  -[DTSColorWheel pickerDiameter]
  -[DTSColorWheel setPickerDiameter:]
  -[DTSColorWheel hueRotation]
  -[DTSColorWheel setHueRotation:]
  -[DTSColorWheel pickerRotation]
  -[DTSColorWheel setPickerRotation:]
  -[DTSColorWheel pickerCircle]
  -[DTSColorWheel setPickerCircle:]


ETGLSketchView : UIView <ETGLSketchRendererDelegate>
 @property  EAGLContext *context
 @property  ETGLSketchRenderer *renderer
 @property  ETQuadCurvePointFIFO *interpolatingFIFO
 @property  ETBoxcarFilterPointFIFO *smoothingFIFO
 @property  ETPointFIFO *pointFIFO
 @property  ETQuadCurvePointFIFO *secondaryInterpolatingFIFO
 @property  ETBoxcarFilterPointFIFO *secondarySmoothingFIFO
 @property  ETPointFIFO *secondaryPointFIFO
 @property  float unitSize
 @property  {vector<std::vector<float __attribute__((ext_vector_type(2)))> vertexBatches
 @property  {vector<float __attribute__((ext_vector_type(2))) controlBatches
 @property  {vector<unsigned long vertexBatchCount
 @property  {vector<unsigned long secondaryVertexBatchCount
 @property  unsigned long vertexOffset
 @property  double delayBetweenStrokes
 @property  ETSketchMessage *messageData
 @property  BOOL playing
 @property  BOOL paused
 @property  double wispDelay
 @property  double timestampForLastDrawnPoint
 @property  BOOL playbackCompleted
 @property  BOOL useFastVerticalWisp

  // class methods
  +[ETGLSketchView layerClass]

  // instance methods
  -[ETGLSketchView clear]
  -[ETGLSketchView setPaused:]
  -[ETGLSketchView .cxx_construct]
  -[ETGLSketchView isPaused]
  -[ETGLSketchView .cxx_destruct]
  -[ETGLSketchView setPlaying:]
  -[ETGLSketchView renderer]
  -[ETGLSketchView setRenderer:]
  -[ETGLSketchView layoutSubviews]
  -[ETGLSketchView isPlaying]
  -[ETGLSketchView setContext:]
  -[ETGLSketchView context]
  -[ETGLSketchView initWithFrame:]
  -[ETGLSketchView messageData]
  -[ETGLSketchView setMessageData:]
  -[ETGLSketchView smoothingFIFO]
  -[ETGLSketchView setSmoothingFIFO:]
  -[ETGLSketchView interpolatingFIFO]
  -[ETGLSketchView setInterpolatingFIFO:]
  -[ETGLSketchView setUnitSize:]
  -[ETGLSketchView unitSize]
  -[ETGLSketchView animateOutWithCompletion:]
  -[ETGLSketchView didCompleteStroke]
  -[ETGLSketchView drawView:]
  -[ETGLSketchView sketchRendererDidReachVertexLimit:]
  -[ETGLSketchView setGLContextAsCurrent]
  -[ETGLSketchView setWispDelay:]
  -[ETGLSketchView beginStrokeWithColor:]
  -[ETGLSketchView _drawCurrentPointAdvancingPlayback]
  -[ETGLSketchView drawFrameBeforeWisp]
  -[ETGLSketchView _doesPoint:predateTime:]
  -[ETGLSketchView _getCurrentSketchPoint:]
  -[ETGLSketchView createRenderedFrameImage]
  -[ETGLSketchView createImageForTime:]
  -[ETGLSketchView _endPlayback]
  -[ETGLSketchView handleTapAtPosition:]
  -[ETGLSketchView updateRendererWithPoints:count:controlPoint:flush:]
  -[ETGLSketchView updateRendererWithSecondaryPoints:count:controlPoint:flush:]
  -[ETGLSketchView handleSketchAtPosition:]
  -[ETGLSketchView clearAllPoints]
  -[ETGLSketchView wispDelay]
  -[ETGLSketchView timestampForLastDrawnPoint]
  -[ETGLSketchView setTimestampForLastDrawnPoint:]
  -[ETGLSketchView playbackCompleted]
  -[ETGLSketchView setPlaybackCompleted:]
  -[ETGLSketchView useFastVerticalWisp]
  -[ETGLSketchView setUseFastVerticalWisp:]
  -[ETGLSketchView pointFIFO]
  -[ETGLSketchView setPointFIFO:]
  -[ETGLSketchView secondaryInterpolatingFIFO]
  -[ETGLSketchView setSecondaryInterpolatingFIFO:]
  -[ETGLSketchView secondarySmoothingFIFO]
  -[ETGLSketchView setSecondarySmoothingFIFO:]
  -[ETGLSketchView secondaryPointFIFO]
  -[ETGLSketchView setSecondaryPointFIFO:]
  -[ETGLSketchView vertexBatches]
  -[ETGLSketchView setVertexBatches:]
  -[ETGLSketchView controlBatches]
  -[ETGLSketchView setControlBatches:]
  -[ETGLSketchView vertexBatchCount]
  -[ETGLSketchView setVertexBatchCount:]
  -[ETGLSketchView secondaryVertexBatchCount]
  -[ETGLSketchView setSecondaryVertexBatchCount:]
  -[ETGLSketchView vertexOffset]
  -[ETGLSketchView setVertexOffset:]
  -[ETGLSketchView delayBetweenStrokes]
  -[ETGLSketchView setDelayBetweenStrokes:]


ETPTap : PBCodable <NSCopying>
 @property  BOOL hasTimeDeltas
 @property  NSData *timeDeltas
 @property  BOOL hasPoints
 @property  NSData *points
 @property  BOOL hasColors
 @property  NSData *colors

  // instance methods
  -[ETPTap colors]
  -[ETPTap setColors:]
  -[ETPTap points]
  -[ETPTap .cxx_destruct]
  -[ETPTap mergeFrom:]
  -[ETPTap dictionaryRepresentation]
  -[ETPTap copyWithZone:]
  -[ETPTap readFrom:]
  -[ETPTap writeTo:]
  -[ETPTap isEqual:]
  -[ETPTap hasColors]
  -[ETPTap setPoints:]
  -[ETPTap hasTimeDeltas]
  -[ETPTap hasPoints]
  -[ETPTap timeDeltas]
  -[ETPTap setTimeDeltas:]


ETMessageHeaderReader : NSObject
  // class methods
  +[ETMessageHeaderReader identifierInArchive:]
  +[ETMessageHeaderReader messageTypeInArchive:]
  +[ETMessageHeaderReader getSendTime:type:inArchive:]
  +[ETMessageHeaderReader sendTimeInArchive:]


ETSketchMessage : ETMessage
 @property  BOOL hasMultipleColors
 @property  unsigned long numberOfColors
 @property  BOOL didEndWisping
 @property  BOOL didDrawPoints
 @property  NSArray *strokes
 @property  NSArray *colorsInMessage
 @property  BOOL hideComet

  // class methods
  +[ETSketchMessage messageType]

  // instance methods
  -[ETSketchMessage archiveData]
  -[ETSketchMessage .cxx_destruct]
  -[ETSketchMessage initWithArchiveData:]
  -[ETSketchMessage init]
  -[ETSketchMessage strokes]
  -[ETSketchMessage numberOfColors]
  -[ETSketchMessage setParentMessage:]
  -[ETSketchMessage colorsInMessage]
  -[ETSketchMessage didReachRendererLimit]
  -[ETSketchMessage addStrokeWithColor:]
  -[ETSketchMessage addSketchPoint:atTime:]
  -[ETSketchMessage addSketchPoint:]
  -[ETSketchMessage _decodeWithDoodle:]
  -[ETSketchMessage messageTypeAsString]
  -[ETSketchMessage willBeginWisp]
  -[ETSketchMessage didEndWisp]
  -[ETSketchMessage convertToSimulatedPlaybackSpeed]
  -[ETSketchMessage messageDuration]
  -[ETSketchMessage hasMultipleColors]
  -[ETSketchMessage setHasMultipleColors:]
  -[ETSketchMessage didEndWisping]
  -[ETSketchMessage setDidEndWisping:]
  -[ETSketchMessage didDrawPoints]
  -[ETSketchMessage setDidDrawPoints:]
  -[ETSketchMessage hideComet]
  -[ETSketchMessage setHideComet:]


HeartRateStore : NSObject
 @property  HKQuery *heartRateQuery
 @property  unsigned long recentHeartRate
 @property  double recentHeartRateTime

  // class methods
  +[HeartRateStore sharedStore]

  // instance methods
  -[HeartRateStore .cxx_destruct]
  -[HeartRateStore init]
  -[HeartRateStore recentHeartRateWithCompletion:]
  -[HeartRateStore _updateHeartRateWithCompletion:]
  -[HeartRateStore _updateHeartRateEnabled]
  -[HeartRateStore heartRateQuery]
  -[HeartRateStore setHeartRateQuery:]
  -[HeartRateStore recentHeartRate]
  -[HeartRateStore setRecentHeartRate:]
  -[HeartRateStore recentHeartRateTime]
  -[HeartRateStore setRecentHeartRateTime:]


DTSForceGestureRecognizer : UILongPressGestureRecognizer
  // instance methods
  -[DTSForceGestureRecognizer reset]
  -[DTSForceGestureRecognizer touchesMoved:withEvent:]
  -[DTSForceGestureRecognizer touchesBegan:withEvent:]
  -[DTSForceGestureRecognizer setState:]


ETColorGradientView : UIView
  // instance methods
  -[ETColorGradientView .cxx_destruct]
  -[ETColorGradientView initWithFrame:]
  -[ETColorGradientView prepareToAnimateColorWheelWithRotation:]
  -[ETColorGradientView revealColorWheelWithCompletion:]
  -[ETColorGradientView hideColorWheelWithRotation:completion:]


ETColorWheelView : DTSColorWheel
 @property  UIColor *selectedColor

  // class methods
  +[ETColorWheelView pickerWidth]
  +[ETColorWheelView pickerDiameter]
  +[ETColorWheelView colorWheelWidth]
  +[ETColorWheelView pickerBorderColor]

  // instance methods
  -[ETColorWheelView .cxx_destruct]
  -[ETColorWheelView doneButtonTapped:]
  -[ETColorWheelView initWithFrame:]
  -[ETColorWheelView selectedColor]
  -[ETColorWheelView hideDoneButton]
  -[ETColorWheelView beganTouches:]
  -[ETColorWheelView finishedTouches]
  -[ETColorWheelView pickerViewHighlightedColor]
  -[ETColorWheelView colorWheelRadius]
  -[ETColorWheelView gradientWidth]
  -[ETColorWheelView pickerDiameter]
  -[ETColorWheelView showColorWheelFromPaletteCircle:rotation:]
  -[ETColorWheelView showDoneButtonAnimated]
  -[ETColorWheelView hideDoneButtonAnimated]
  -[ETColorWheelView addPickerCircleForPaletteCircle:]
  -[ETColorWheelView pickerShouldDismissClockwise]
  -[ETColorWheelView colorWheelDismissalRotation]
  -[ETColorWheelView hideColorWheelPickingColor:]
  -[ETColorWheelView animatePickerToOriginalPosition]


ETPKiss : PBCodable <NSCopying>
 @property  BOOL hasDelays
 @property  NSData *delays
 @property  BOOL hasPoints
 @property  NSData *points
 @property  BOOL hasAngles
 @property  NSData *angles

  // instance methods
  -[ETPKiss points]
  -[ETPKiss .cxx_destruct]
  -[ETPKiss mergeFrom:]
  -[ETPKiss dictionaryRepresentation]
  -[ETPKiss copyWithZone:]
  -[ETPKiss readFrom:]
  -[ETPKiss writeTo:]
  -[ETPKiss isEqual:]
  -[ETPKiss setPoints:]
  -[ETPKiss angles]
  -[ETPKiss setAngles:]
  -[ETPKiss hasPoints]
  -[ETPKiss hasDelays]
  -[ETPKiss hasAngles]
  -[ETPKiss delays]
  -[ETPKiss setDelays:]


ETPointFIFO : NSObject
 @property  ETPointFIFO *nextFIFO

  // instance methods
  -[ETPointFIFO clear]
  -[ETPointFIFO .cxx_destruct]
  -[ETPointFIFO flush]
  -[ETPointFIFO initWithFIFO:]
  -[ETPointFIFO nextFIFO]
  -[ETPointFIFO setNextFIFO:]
  -[ETPointFIFO emitPoints:count:]
  -[ETPointFIFO addPoints:count:]


ETBoxcarFilterPointFIFO : ETPointFIFO
 @property  {vector<float __attribute__((ext_vector_type(2))) prevPoints
 @property  unsigned long width
 @property  float spacing

  // instance methods
  -[ETBoxcarFilterPointFIFO spacing]
  -[ETBoxcarFilterPointFIFO setSpacing:]
  -[ETBoxcarFilterPointFIFO width]
  -[ETBoxcarFilterPointFIFO clear]
  -[ETBoxcarFilterPointFIFO .cxx_construct]
  -[ETBoxcarFilterPointFIFO setWidth:]
  -[ETBoxcarFilterPointFIFO .cxx_destruct]
  -[ETBoxcarFilterPointFIFO flush]
  -[ETBoxcarFilterPointFIFO emitAveragedPoint]
  -[ETBoxcarFilterPointFIFO prevPoints]
  -[ETBoxcarFilterPointFIFO setPrevPoints:]
  -[ETBoxcarFilterPointFIFO initWithFIFO:width:spacing:]
  -[ETBoxcarFilterPointFIFO addPoints:count:]


ETQuadCurvePointFIFO : ETPointFIFO
 @property  {vector<float __attribute__((ext_vector_type(2))) prevPoints
 @property  {vector<float __attribute__((ext_vector_type(2))) points
 @property  {vector<float __attribute__((ext_vector_type(2))) controlPoints
 @property  void lastPoint
 @property  float unitSize
 @property  BOOL emitInterpolatedPoints
 @property  @? emissionHandler

  // instance methods
  -[ETQuadCurvePointFIFO points]
  -[ETQuadCurvePointFIFO clear]
  -[ETQuadCurvePointFIFO .cxx_construct]
  -[ETQuadCurvePointFIFO .cxx_destruct]
  -[ETQuadCurvePointFIFO flush]
  -[ETQuadCurvePointFIFO initWithFIFO:]
  -[ETQuadCurvePointFIFO prevPoints]
  -[ETQuadCurvePointFIFO setPrevPoints:]
  -[ETQuadCurvePointFIFO emissionHandler]
  -[ETQuadCurvePointFIFO setEmissionHandler:]
  -[ETQuadCurvePointFIFO lastPoint]
  -[ETQuadCurvePointFIFO setLastPoint:]
  -[ETQuadCurvePointFIFO setPoints:]
  -[ETQuadCurvePointFIFO controlPoints]
  -[ETQuadCurvePointFIFO setControlPoints:]
  -[ETQuadCurvePointFIFO emitInterpolatedPoints]
  -[ETQuadCurvePointFIFO setEmitInterpolatedPoints:]
  -[ETQuadCurvePointFIFO setUnitSize:]
  -[ETQuadCurvePointFIFO unitSize]
  -[ETQuadCurvePointFIFO addPoints:count:]


ETVideoMessage : ETMessage
 @property  NSArray *playingMessages
 @property  NSURL *mediaURL
 @property  UIImage *stillImage
 @property  ETSketchMessage *introMessage
 @property  unsigned long mediaType
 @property  BOOL canCompressTime
 @property  BOOL pauseTimeCompression

  // class methods
  +[ETVideoMessage messageType]

  // instance methods
  -[ETVideoMessage setMediaType:]
  -[ETVideoMessage mediaType]
  -[ETVideoMessage archiveData]
  -[ETVideoMessage .cxx_destruct]
  -[ETVideoMessage initWithArchiveData:]
  -[ETVideoMessage mediaURL]
  -[ETVideoMessage isAnimated]
  -[ETVideoMessage init]
  -[ETVideoMessage setMediaURL:]
  -[ETVideoMessage stillImage]
  -[ETVideoMessage setStillImage:]
  -[ETVideoMessage messageTypeAsString]
  -[ETVideoMessage messageDuration]
  -[ETVideoMessage _mediaTypeFromETPVideoType:]
  -[ETVideoMessage _etpMediaTypeFromETMediaType:]
  -[ETVideoMessage setPlayingMessages:]
  -[ETVideoMessage setIntroMessage:]
  -[ETVideoMessage shouldLoopDuringPlayback]
  -[ETVideoMessage playingMessages]
  -[ETVideoMessage canCompressTime]
  -[ETVideoMessage compressTimeSinceStartOfMessage:]
  -[ETVideoMessage introMessage]
  -[ETVideoMessage pauseTimeCompression]
  -[ETVideoMessage setPauseTimeCompression:]


DTSTypingIndicatorLayer : IMTypingIndicatorLayer
  // class methods
  +[DTSTypingIndicatorLayer iconImageFrame]
  +[DTSTypingIndicatorLayer defaultBubbleColor]
  +[DTSTypingIndicatorLayer defaultThinkingDotColor]
  +[DTSTypingIndicatorLayer iconImageLeadingSpace]

  // instance methods
  -[DTSTypingIndicatorLayer iconImage]
  -[DTSTypingIndicatorLayer init]


ETPaletteCircleView : UIView
 @property  BOOL selected
 @property  UIView *selectionMarker

  // class methods
  +[ETPaletteCircleView paletteCircleDiameter]
  +[ETPaletteCircleView selectionMarkerDiameter]
  +[ETPaletteCircleView selectionMarkerColor]

  // instance methods
  -[ETPaletteCircleView setSelected:]
  -[ETPaletteCircleView .cxx_destruct]
  -[ETPaletteCircleView layoutSubviews]
  -[ETPaletteCircleView initWithFrame:]
  -[ETPaletteCircleView isSelected]
  -[ETPaletteCircleView selectionMarker]
  -[ETPaletteCircleView _updateSelectionMarkerFrame]
  -[ETPaletteCircleView setSelected:animated:completion:]


ETPAnger : PBCodable <NSCopying>
 @property  BOOL hasDuration
 @property  float duration
 @property  BOOL hasNormalizedCenterX
 @property  float normalizedCenterX
 @property  BOOL hasNormalizedCenterY
 @property  float normalizedCenterY
 @property  BOOL hasDelays
 @property  NSData *delays
 @property  BOOL hasPoints
 @property  NSData *points

  // instance methods
  -[ETPAnger setDuration:]
  -[ETPAnger hasDuration]
  -[ETPAnger points]
  -[ETPAnger .cxx_destruct]
  -[ETPAnger duration]
  -[ETPAnger mergeFrom:]
  -[ETPAnger dictionaryRepresentation]
  -[ETPAnger copyWithZone:]
  -[ETPAnger readFrom:]
  -[ETPAnger setHasDuration:]
  -[ETPAnger writeTo:]
  -[ETPAnger isEqual:]
  -[ETPAnger setPoints:]
  -[ETPAnger setNormalizedCenterX:]
  -[ETPAnger setHasNormalizedCenterX:]
  -[ETPAnger hasNormalizedCenterX]
  -[ETPAnger setNormalizedCenterY:]
  -[ETPAnger setHasNormalizedCenterY:]
  -[ETPAnger hasNormalizedCenterY]
  -[ETPAnger normalizedCenterX]
  -[ETPAnger normalizedCenterY]
  -[ETPAnger hasPoints]
  -[ETPAnger hasDelays]
  -[ETPAnger delays]
  -[ETPAnger setDelays:]


ETReadReceiptMessage : ETMessage
  // class methods
  +[ETReadReceiptMessage messageType]


ETCanvasView : UIView <ETMessageDelegate, UIGestureRecognizerDelegate>
 @property  <ETCanvasViewDelegate> *canvasDelegate
 @property  <ETMessageTimeSource> *timeSource
 @property  UIColor *drawingColor
 @property  BOOL canComposeHeartbeat
 @property  BOOL canComposeTap
 @property  BOOL canComposeKiss
 @property  BOOL canComposeAnger
 @property  BOOL isComposing
 @property  BOOL usesMediaAppearance
 @property  ETMessage *parentMessage
 @property  BOOL paused
 @property  BOOL useFastVerticalWisp
 @property  BOOL angerUsesForceTouch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ETCanvasView drawingColor]
  -[ETCanvasView gestureRecognizerShouldBegin:]
  -[ETCanvasView setPaused:]
  -[ETCanvasView isPaused]
  -[ETCanvasView dealloc]
  -[ETCanvasView .cxx_destruct]
  -[ETCanvasView layoutSubviews]
  -[ETCanvasView touchesMoved:withEvent:]
  -[ETCanvasView touchesBegan:withEvent:]
  -[ETCanvasView _tapRecognized:]
  -[ETCanvasView touchesEnded:withEvent:]
  -[ETCanvasView initWithFrame:]
  -[ETCanvasView willMoveToWindow:]
  -[ETCanvasView traitCollectionDidChange:]
  -[ETCanvasView touchesCancelled:withEvent:]
  -[ETCanvasView _updateVideoViewFrame]
  -[ETCanvasView timeSource]
  -[ETCanvasView _sendHeartbeat]
  -[ETCanvasView setTimeSource:]
  -[ETCanvasView canvasDelegate]
  -[ETCanvasView setCanvasDelegate:]
  -[ETCanvasView useFastVerticalWisp]
  -[ETCanvasView setUseFastVerticalWisp:]
  -[ETCanvasView setParentMessage:]
  -[ETCanvasView _heartbeatRecognized:]
  -[ETCanvasView _kissRecognized:]
  -[ETCanvasView _checkForIdle]
  -[ETCanvasView _fastTapAllowableMovementTimerFired]
  -[ETCanvasView _angerDurationLimitTimerFired]
  -[ETCanvasView _sendMessageTimerFired]
  -[ETCanvasView _hideHeartbeatTimerFired]
  -[ETCanvasView _angerRecognized:]
  -[ETCanvasView messageWillReachSizeLimit:]
  -[ETCanvasView messageWillStopPlaying:]
  -[ETCanvasView messageDidStopPlaying:]
  -[ETCanvasView showPhotoForImage:]
  -[ETCanvasView hidePhoto]
  -[ETCanvasView showVideoForPlayer:]
  -[ETCanvasView hideVideo]
  -[ETCanvasView _updatePhotoViewFrame]
  -[ETCanvasView _sketchInProgress]
  -[ETCanvasView isComposingHeartbeat]
  -[ETCanvasView isComposingSketch]
  -[ETCanvasView _tapsInProgress]
  -[ETCanvasView _startDoodleMessageCompositionAtTime:]
  -[ETCanvasView startDoodleMessageComposition]
  -[ETCanvasView _setIsComposingMessageOfType:]
  -[ETCanvasView _updateRecognizersAtEndOfComposition]
  -[ETCanvasView _endMessage:withSend:]
  -[ETCanvasView _setSketchesPaused:]
  -[ETCanvasView _sketchesPaused]
  -[ETCanvasView setAlwaysPaused:]
  -[ETCanvasView wispVisibleSketchViewsWithCompletion:]
  -[ETCanvasView _animateOutSketchView:withCompletion:]
  -[ETCanvasView _clearDoodleViewForMessage:]
  -[ETCanvasView clearCanvasAnimated:]
  -[ETCanvasView _startCheckForIdleTimer]
  -[ETCanvasView _stopCheckForIdleTimer]
  -[ETCanvasView setDrawingColor:]
  -[ETCanvasView _canComposeExclusiveMessage]
  -[ETCanvasView _isTapTooRecentAfterKissGesture]
  -[ETCanvasView updateIgnoredTouchesRectForStatusBarSize:]
  -[ETCanvasView _startFastTapAllowableMovementTimer]
  -[ETCanvasView _normalizedGesturePoint:]
  -[ETCanvasView _sendAnger]
  -[ETCanvasView _showAngerAtPoint:]
  -[ETCanvasView _hideAnger]
  -[ETCanvasView _areRecognizersTrackingMultipleFingers]
  -[ETCanvasView _doodleEndedWithTouches:cancelled:]
  -[ETCanvasView _createSketchViewWithColor:time:message:]
  -[ETCanvasView handleTapAtX:Y:color:time:isRemote:]
  -[ETCanvasView handlePanAtX:Y:color:time:state:isRemote:]
  -[ETCanvasView handleDotAtX:Y:color:time:isRemote:]
  -[ETCanvasView _startSendMessageTimer]
  -[ETCanvasView _clearSendMessageTimer]
  -[ETCanvasView endMessageComposition]
  -[ETCanvasView composedSketchMessage]
  -[ETCanvasView _sendSketch]
  -[ETCanvasView _sendTaps]
  -[ETCanvasView sendCurrentMessage]
  -[ETCanvasView setCanComposeTap:]
  -[ETCanvasView setCanComposeKiss:]
  -[ETCanvasView setCanComposeAnger:]
  -[ETCanvasView setCanComposeHeartbeat:]
  -[ETCanvasView _angleOfRotationBetweenTwoFingers:]
  -[ETCanvasView _viewPointNormalizedInSceneSpace:]
  -[ETCanvasView _sendKiss]
  -[ETCanvasView updateCurrentMessageWithHeartRate:]
  -[ETCanvasView _showHeartbeatAtNormalizedPoint:rotation:]
  -[ETCanvasView _hideHeartbeat]
  -[ETCanvasView playTestStrokeWithColor:duration:]
  -[ETCanvasView playMessage:]
  -[ETCanvasView setUsesMediaAppearance:]
  -[ETCanvasView setForceTouchEnabled:]
  -[ETCanvasView _configureAngerRecognizer]
  -[ETCanvasView canComposeHeartbeat]
  -[ETCanvasView canComposeTap]
  -[ETCanvasView canComposeKiss]
  -[ETCanvasView canComposeAnger]
  -[ETCanvasView isComposing]
  -[ETCanvasView usesMediaAppearance]
  -[ETCanvasView parentMessage]
  -[ETCanvasView angerUsesForceTouch]
  -[ETCanvasView setAngerUsesForceTouch:]


ETMessage : NSObject
 @property  unsigned short messageType
 @property  unsigned long messageVersion
 @property  double timeCreated
 @property  double sendTime
 @property  double startDelay
 @property  BOOL supportsPlaybackTimeOffset
 @property  NSString *identifier
 @property  BOOL missedDuringPlayback
 @property  BOOL shouldLoopDuringPlayback
 @property  UIColor *color
 @property  BOOL renderingOffscreen
 @property  BOOL renderingOffscreenOpaque
 @property  double messageDuration
 @property  <ETMessageDelegate> *delegate
 @property  <ETMessageTimeSource> *timeSource
 @property  BOOL delayWisp
 @property  ETMessage *parentMessage
 @property  BOOL animated
 @property  BOOL mute

  // class methods
  +[ETMessage messageType]
  +[ETMessage unarchive:]

  // instance methods
  -[ETMessage identifier]
  -[ETMessage mute]
  -[ETMessage setDelegate:]
  -[ETMessage encodeWithCoder:]
  -[ETMessage archiveData]
  -[ETMessage delegate]
  -[ETMessage .cxx_destruct]
  -[ETMessage setMute:]
  -[ETMessage archive]
  -[ETMessage initWithArchiveData:]
  -[ETMessage stopPlaying]
  -[ETMessage setIdentifier:]
  -[ETMessage color]
  -[ETMessage isAnimated]
  -[ETMessage setColor:]
  -[ETMessage messageType]
  -[ETMessage init]
  -[ETMessage initWithCoder:]
  -[ETMessage timeCreated]
  -[ETMessage startDelay]
  -[ETMessage timeSource]
  -[ETMessage messageVersion]
  -[ETMessage setStartDelay:]
  -[ETMessage setTimeSource:]
  -[ETMessage setParentMessage:]
  -[ETMessage messageTypeAsString]
  -[ETMessage messageDuration]
  -[ETMessage shouldLoopDuringPlayback]
  -[ETMessage parentMessage]
  -[ETMessage preVisualizeInScene:]
  -[ETMessage displayInScene:]
  -[ETMessage sendTimeIsValid]
  -[ETMessage _stopAudioPlayback]
  -[ETMessage _startAudioPlayback]
  -[ETMessage reachedSizeLimit]
  -[ETMessage scenePointFromNormalizedPoint:inScene:]
  -[ETMessage wispChildren]
  -[ETMessage childMessageDidCompleteWisp:]
  -[ETMessage childMessageDidDelayWisp:]
  -[ETMessage hasWispingChildren]
  -[ETMessage setTimeCreated:]
  -[ETMessage sendTime]
  -[ETMessage setSendTime:]
  -[ETMessage supportsPlaybackTimeOffset]
  -[ETMessage setSupportsPlaybackTimeOffset:]
  -[ETMessage missedDuringPlayback]
  -[ETMessage setMissedDuringPlayback:]
  -[ETMessage isRenderingOffscreen]
  -[ETMessage setRenderingOffscreen:]
  -[ETMessage isRenderingOffscreenOpaque]
  -[ETMessage setRenderingOffscreenOpaque:]
  -[ETMessage delayWisp]
  -[ETMessage setDelayWisp:]


ETColorStore : NSObject
 @property  unsigned long selectedColorIndex
 @property  NSArray *colors

  // class methods
  +[ETColorStore defaultStore]

  // instance methods
  -[ETColorStore colors]
  -[ETColorStore dealloc]
  -[ETColorStore defaultsChanged:]
  -[ETColorStore .cxx_destruct]
  -[ETColorStore _colors]
  -[ETColorStore init]
  -[ETColorStore setSelectedColorIndex:]
  -[ETColorStore selectedColorIndex]
  -[ETColorStore addDefaultsObserver]
  -[ETColorStore saveColor:forIndex:]


ETPDoodle : PBCodable <NSCopying>
 @property  BOOL hasDoodleCount
 @property  unsigned int doodleCount
 @property  BOOL hasDoodleData
 @property  NSData *doodleData
 @property  BOOL hasColorData
 @property  NSData *colorData
 @property  BOOL hasPointTimeDeltaData
 @property  NSData *pointTimeDeltaData

  // instance methods
  -[ETPDoodle colorData]
  -[ETPDoodle .cxx_destruct]
  -[ETPDoodle mergeFrom:]
  -[ETPDoodle setColorData:]
  -[ETPDoodle dictionaryRepresentation]
  -[ETPDoodle copyWithZone:]
  -[ETPDoodle readFrom:]
  -[ETPDoodle writeTo:]
  -[ETPDoodle isEqual:]
  -[ETPDoodle setDoodleCount:]
  -[ETPDoodle setHasDoodleCount:]
  -[ETPDoodle hasDoodleCount]
  -[ETPDoodle hasDoodleData]
  -[ETPDoodle hasColorData]
  -[ETPDoodle hasPointTimeDeltaData]
  -[ETPDoodle doodleCount]
  -[ETPDoodle doodleData]
  -[ETPDoodle setDoodleData:]
  -[ETPDoodle pointTimeDeltaData]
  -[ETPDoodle setPointTimeDeltaData:]


ETGLSketchRenderer : NSObject
 @property  ^{?=} allVertices
 @property  int vertexBufferCount
 @property  int vertexBufferBegin
 @property  unsigned long vertexCount
 @property  float deathTime
 @property  float lastBirth
 @property  void brushColorForInitialColor
 @property  void brushColorForFinalColor
 @property  unsigned int shaderProgram
 @property  unsigned int vboVertLineId
 @property  unsigned int vaoLineID
 @property  unsigned int viewRenderbuffer
 @property  unsigned int viewFramebuffer
 @property  unsigned int backingWidth
 @property  unsigned int backingHeight
 @property  double cometScaleFactor
 @property  unsigned int allocatedWidth
 @property  unsigned int allocatedHeight
 @property  EAGLContext *context
 @property  CAEAGLLayer *cachedLayer
 @property  @? completionBlock
 @property  float currentTimeClock
 @property  float currentTimeIndex
 @property  BOOL isDying
 @property  double wispDelay
 @property  <ETGLSketchRendererDelegate> *delegate
 @property  BOOL renderingOffscreen
 @property  double lineWidthScaleFactor
 @property  BOOL useFastVerticalWisp

  // class methods
  +[ETGLSketchRenderer warmupShaders]

  // instance methods
  -[ETGLSketchRenderer setCompletionBlock:]
  -[ETGLSketchRenderer setDelegate:]
  -[ETGLSketchRenderer completionBlock]
  -[ETGLSketchRenderer delegate]
  -[ETGLSketchRenderer dealloc]
  -[ETGLSketchRenderer reset]
  -[ETGLSketchRenderer .cxx_destruct]
  -[ETGLSketchRenderer setContext:]
  -[ETGLSketchRenderer context]
  -[ETGLSketchRenderer erase]
  -[ETGLSketchRenderer vertexCount]
  -[ETGLSketchRenderer isDying]
  -[ETGLSketchRenderer setVertexCount:]
  -[ETGLSketchRenderer render]
  -[ETGLSketchRenderer currentTimeIndex]
  -[ETGLSketchRenderer animateOutWithCompletion:]
  -[ETGLSketchRenderer setWispDelay:]
  -[ETGLSketchRenderer wispDelay]
  -[ETGLSketchRenderer useFastVerticalWisp]
  -[ETGLSketchRenderer setUseFastVerticalWisp:]
  -[ETGLSketchRenderer setRenderingOffscreen:]
  -[ETGLSketchRenderer renderingOffscreen]
  -[ETGLSketchRenderer initWithContext:andDrawable:]
  -[ETGLSketchRenderer updateGLWithTime:]
  -[ETGLSketchRenderer updateGLWithCurrentTime]
  -[ETGLSketchRenderer setInitialDrawingColor:]
  -[ETGLSketchRenderer setFinalDrawingColor:]
  -[ETGLSketchRenderer setupFBOs:]
  -[ETGLSketchRenderer setupTexture]
  -[ETGLSketchRenderer setupShaders]
  -[ETGLSketchRenderer loadOneShaderOfType:withCString:length:]
  -[ETGLSketchRenderer linkProgramWithVShader:FShader:]
  -[ETGLSketchRenderer setupVAOs]
  -[ETGLSketchRenderer resizeFromCachedLayer]
  -[ETGLSketchRenderer resizeFromLayer:]
  -[ETGLSketchRenderer appendPointArray:length:]
  -[ETGLSketchRenderer appendDualPointArray:length:controlPoint:alternatePoints:alternateLength:alternateControlPoint:unitSize:segmentIndex:segmentCount:]
  -[ETGLSketchRenderer updateVertexBufferWithVertexCount:]
  -[ETGLSketchRenderer _warmupShaders]
  -[ETGLSketchRenderer createRenderedFrameImageUsingAlpha:]
  -[ETGLSketchRenderer setLineWidthScaleFactor:]
  -[ETGLSketchRenderer currentTimeClock]
  -[ETGLSketchRenderer setIsDying:]
  -[ETGLSketchRenderer lineWidthScaleFactor]
  -[ETGLSketchRenderer allVertices]
  -[ETGLSketchRenderer setAllVertices:]
  -[ETGLSketchRenderer vertexBufferCount]
  -[ETGLSketchRenderer setVertexBufferCount:]
  -[ETGLSketchRenderer vertexBufferBegin]
  -[ETGLSketchRenderer setVertexBufferBegin:]
  -[ETGLSketchRenderer deathTime]
  -[ETGLSketchRenderer setDeathTime:]
  -[ETGLSketchRenderer lastBirth]
  -[ETGLSketchRenderer setLastBirth:]
  -[ETGLSketchRenderer brushColorForInitialColor]
  -[ETGLSketchRenderer setBrushColorForInitialColor:]
  -[ETGLSketchRenderer brushColorForFinalColor]
  -[ETGLSketchRenderer setBrushColorForFinalColor:]
  -[ETGLSketchRenderer shaderProgram]
  -[ETGLSketchRenderer setShaderProgram:]
  -[ETGLSketchRenderer vboVertLineId]
  -[ETGLSketchRenderer setVboVertLineId:]
  -[ETGLSketchRenderer vaoLineID]
  -[ETGLSketchRenderer setVaoLineID:]
  -[ETGLSketchRenderer viewRenderbuffer]
  -[ETGLSketchRenderer setViewRenderbuffer:]
  -[ETGLSketchRenderer viewFramebuffer]
  -[ETGLSketchRenderer setViewFramebuffer:]
  -[ETGLSketchRenderer backingWidth]
  -[ETGLSketchRenderer setBackingWidth:]
  -[ETGLSketchRenderer backingHeight]
  -[ETGLSketchRenderer setBackingHeight:]
  -[ETGLSketchRenderer cometScaleFactor]
  -[ETGLSketchRenderer setCometScaleFactor:]
  -[ETGLSketchRenderer allocatedWidth]
  -[ETGLSketchRenderer setAllocatedWidth:]
  -[ETGLSketchRenderer allocatedHeight]
  -[ETGLSketchRenderer setAllocatedHeight:]
  -[ETGLSketchRenderer cachedLayer]
  -[ETGLSketchRenderer setCachedLayer:]


ETPVideo : PBCodable <NSCopying>
 @property  BOOL hasIntroMessageData
 @property  NSData *introMessageData
 @property  BOOL hasPlayingMessagesData
 @property  NSData *playingMessagesData
 @property  BOOL hasMediaType
 @property  int mediaType

  // instance methods
  -[ETPVideo setMediaType:]
  -[ETPVideo hasMediaType]
  -[ETPVideo mediaType]
  -[ETPVideo .cxx_destruct]
  -[ETPVideo setHasMediaType:]
  -[ETPVideo mergeFrom:]
  -[ETPVideo dictionaryRepresentation]
  -[ETPVideo copyWithZone:]
  -[ETPVideo readFrom:]
  -[ETPVideo writeTo:]
  -[ETPVideo isEqual:]
  -[ETPVideo mediaTypeAsString:]
  -[ETPVideo StringAsMediaType:]
  -[ETPVideo hasIntroMessageData]
  -[ETPVideo hasPlayingMessagesData]
  -[ETPVideo introMessageData]
  -[ETPVideo setIntroMessageData:]
  -[ETPVideo playingMessagesData]
  -[ETPVideo setPlayingMessagesData:]


ETPReadReceipt : PBCodable <NSCopying>
  // instance methods
  -[ETPReadReceipt mergeFrom:]
  -[ETPReadReceipt dictionaryRepresentation]
  -[ETPReadReceipt copyWithZone:]
  -[ETPReadReceipt readFrom:]
  -[ETPReadReceipt writeTo:]
  -[ETPReadReceipt isEqual:]


ETUtility : NSObject
  // class methods
  +[ETUtility dateFormatWithMilliseconds:]
  +[ETUtility destinationFromMessageIdentifier:keepPrefix:]
  +[ETUtility removePrefixFromDestination:]
  +[ETUtility isRetailDemo]
  +[ETUtility shouldArchiveSentMessages]
  +[ETUtility lastInteractiveZoomLevel]
  +[ETUtility imageWithEllipseDiameter:strokeWidth:strokeColor:fillDiameter:fillColor:edgeOverlap:]


ETTapMessage : ETMessage
 @property  unsigned long tapCount

  // class methods
  +[ETTapMessage messageType]

  // instance methods
  -[ETTapMessage archiveData]
  -[ETTapMessage .cxx_construct]
  -[ETTapMessage tapCount]
  -[ETTapMessage .cxx_destruct]
  -[ETTapMessage initWithArchiveData:]
  -[ETTapMessage init]
  -[ETTapMessage pointAtIndex:]
  -[ETTapMessage messageTypeAsString]
  -[ETTapMessage messageDuration]
  -[ETTapMessage preVisualizeInScene:]
  -[ETTapMessage displayInScene:]
  -[ETTapMessage reachedSizeLimit]
  -[ETTapMessage timeDeltaAtIndex:]
  -[ETTapMessage addTapAtPoint:time:color:]
  -[ETTapMessage _animateCircleInner0:inner1:outer0:outer1:duration:]
  -[ETTapMessage _displayInScene:point:color:filled:withWisp:]


ETQuickTapMessage : ETTapMessage
  // class methods
  +[ETQuickTapMessage doubleTapMessageWithColor:]

  // instance methods
  -[ETQuickTapMessage messageTypeAsString]


ETHeartbeatMessage : ETMessage
 @property  float beatsPerMinute
 @property  int duration
 @property  float scale
 @property  {CGPoint=dd} normalizedCenter
 @property  double rotation
 @property  BOOL broken
 @property  double heartbreakTime

  // class methods
  +[ETHeartbeatMessage messageType]

  // instance methods
  -[ETHeartbeatMessage setDuration:]
  -[ETHeartbeatMessage setRotation:]
  -[ETHeartbeatMessage rotation]
  -[ETHeartbeatMessage archiveData]
  -[ETHeartbeatMessage .cxx_destruct]
  -[ETHeartbeatMessage setMute:]
  -[ETHeartbeatMessage duration]
  -[ETHeartbeatMessage initWithArchiveData:]
  -[ETHeartbeatMessage scale]
  -[ETHeartbeatMessage stopPlaying]
  -[ETHeartbeatMessage setScale:]
  -[ETHeartbeatMessage beatsPerMinute]
  -[ETHeartbeatMessage normalizedCenter]
  -[ETHeartbeatMessage setNormalizedCenter:]
  -[ETHeartbeatMessage setBeatsPerMinute:]
  -[ETHeartbeatMessage heartbreakTime]
  -[ETHeartbeatMessage messageTypeAsString]
  -[ETHeartbeatMessage messageDuration]
  -[ETHeartbeatMessage displayInScene:]
  -[ETHeartbeatMessage _stopAudioPlayback]
  -[ETHeartbeatMessage _startAudioPlayback]
  -[ETHeartbeatMessage _displayInScene:useDuration:]
  -[ETHeartbeatMessage _displayInScene:useDuration:fastStart:]
  -[ETHeartbeatMessage moveHeartNodeByX:y:duration:]
  -[ETHeartbeatMessage playBeatWithDuration:]
  -[ETHeartbeatMessage startHeartbeat:]
  -[ETHeartbeatMessage startHeartbeat:fastStart:]
  -[ETHeartbeatMessage breakHeart]
  -[ETHeartbeatMessage isBroken]


ETAngerMessage : ETMessage
 @property  {CGPoint=dd} normalizedCenter
 @property  double duration

  // class methods
  +[ETAngerMessage messageType]

  // instance methods
  -[ETAngerMessage setDuration:]
  -[ETAngerMessage archiveData]
  -[ETAngerMessage .cxx_destruct]
  -[ETAngerMessage duration]
  -[ETAngerMessage initWithArchiveData:]
  -[ETAngerMessage stopPlaying]
  -[ETAngerMessage init]
  -[ETAngerMessage normalizedCenter]
  -[ETAngerMessage setNormalizedCenter:]
  -[ETAngerMessage messageTypeAsString]
  -[ETAngerMessage messageDuration]
  -[ETAngerMessage displayInScene:]
  -[ETAngerMessage _updateCenterFromNormalizedPoint:inScene:]
  -[ETAngerMessage setNormalizedPoint:atRelativeTime:inScene:]


KissNode : NSObject
 @property  BOOL leavesMark
 @property  SKSpriteNode *node
 @property  UIColor *color
 @property  SKShader *shader
 @property  double colorBlendFactor
 @property  long long blendMode
 @property  {CGPoint=dd} position
 @property  double zRotation

  // class methods
  +[KissNode kissNodeWithColor:size:]

  // instance methods
  -[KissNode node]
  -[KissNode blendMode]
  -[KissNode .cxx_destruct]
  -[KissNode color]
  -[KissNode setBlendMode:]
  -[KissNode setPosition:]
  -[KissNode setColor:]
  -[KissNode shader]
  -[KissNode setScale:]
  -[KissNode position]
  -[KissNode setNode:]
  -[KissNode removeFromParent]
  -[KissNode zRotation]
  -[KissNode setZRotation:]
  -[KissNode setShader:]
  -[KissNode colorBlendFactor]
  -[KissNode setColorBlendFactor:]
  -[KissNode runAction:]
  -[KissNode setColorBlendMode:]
  -[KissNode leavesMark]
  -[KissNode setLeavesMark:]


ETKissMessage : ETMessage
  // class methods
  +[ETKissMessage messageType]
  +[ETKissMessage _kissColor]

  // instance methods
  -[ETKissMessage archiveData]
  -[ETKissMessage .cxx_destruct]
  -[ETKissMessage initWithArchiveData:]
  -[ETKissMessage stopPlaying]
  -[ETKissMessage init]
  -[ETKissMessage setParentMessage:]
  -[ETKissMessage messageTypeAsString]
  -[ETKissMessage messageDuration]
  -[ETKissMessage displayInScene:]
  -[ETKissMessage reachedSizeLimit]
  -[ETKissMessage _leaveMarkAtDelay:]
  -[ETKissMessage _initAtlas]
  -[ETKissMessage addKissAtNormalizedPoint:angle:time:toScene:]
  -[ETKissMessage _hasKissesThatLeaveMark]
  -[ETKissMessage _setKissLeavesMark:]
  -[ETKissMessage _displayKissAtPoint:angle:leavesMark:inScene:]
  -[ETKissMessage _notifyDelegateDidStopPlaying]
  -[ETKissMessage _notifyDelegateWillStopPlaying]


DTSCanvasViewController : UIViewController <ETCanvasViewDelegate, DTSColorPickerDelegate>
 @property  DTSColorPicker *colorPicker
 @property  ETBalloonPluginDataSource *dataSource
 @property  @? balloonPlaybackCompletion
 @property  ETMessage *messageForReplay
 @property  <DTSCanvasViewControllerSendDelegate> *sendDelegate
 @property  unsigned short composingMessageType
 @property  BOOL composingCompositeMessage
 @property  BOOL playingCompositeMessage
 @property  double mediaMessagePlayTrackerTime
 @property  BOOL paused
 @property  BOOL composeDisabled
 @property  BOOL autoPlayOnAppearanceDisabled
 @property  BOOL ignoreAppearanceCallbacks
 @property  ETCanvasView *canvasView
 @property  BOOL playingMessages
 @property  ETMessage *playingMessage
 @property  BOOL deferMessageSend
 @property  NSArray *deferredMessages
 @property  BOOL usesCompactKeyboardLayout
 @property  BOOL overrideAudioDefaultToOff
 @property  BOOL playbackEnabled
 @property  double bottomMargin
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DTSCanvasViewController replayButtonFont]
  +[DTSCanvasViewController audioToggleOnImage]
  +[DTSCanvasViewController audioToggleOffImage]

  // instance methods
  -[DTSCanvasViewController _isVisible]
  -[DTSCanvasViewController dataSource]
  -[DTSCanvasViewController setPaused:]
  -[DTSCanvasViewController viewWillLayoutSubviews]
  -[DTSCanvasViewController viewDidAppear:]
  -[DTSCanvasViewController isPaused]
  -[DTSCanvasViewController .cxx_destruct]
  -[DTSCanvasViewController replay]
  -[DTSCanvasViewController viewDidLoad]
  -[DTSCanvasViewController _applicationDidEnterBackground]
  -[DTSCanvasViewController bottomMargin]
  -[DTSCanvasViewController viewDidLayoutSubviews]
  -[DTSCanvasViewController shouldAutorotate]
  -[DTSCanvasViewController setDataSource:]
  -[DTSCanvasViewController supportedInterfaceOrientations]
  -[DTSCanvasViewController viewDidDisappear:]
  -[DTSCanvasViewController viewWillDisappear:]
  -[DTSCanvasViewController canvasView]
  -[DTSCanvasViewController init]
  -[DTSCanvasViewController _cancelButton]
  -[DTSCanvasViewController setBottomMargin:]
  -[DTSCanvasViewController setCanvasView:]
  -[DTSCanvasViewController sendDelegate]
  -[DTSCanvasViewController setSendDelegate:]
  -[DTSCanvasViewController _cancelButtonTapped]
  -[DTSCanvasViewController _applicationWillResignActive]
  -[DTSCanvasViewController _applicationDidBecomeActive]
  -[DTSCanvasViewController setPlaybackEnabled:]
  -[DTSCanvasViewController _skipButton]
  -[DTSCanvasViewController colorPicker]
  -[DTSCanvasViewController setColorPicker:]
  -[DTSCanvasViewController _shouldShowCancelButton]
  -[DTSCanvasViewController isPlaybackEnabled]
  -[DTSCanvasViewController _replayButton]
  -[DTSCanvasViewController _skipButtonTapped]
  -[DTSCanvasViewController recentHeartRate]
  -[DTSCanvasViewController setPlayingMessages:]
  -[DTSCanvasViewController canvasViewShouldUseFastVerticalWisp:]
  -[DTSCanvasViewController canvasViewDidPause:]
  -[DTSCanvasViewController canvasViewDidUnpause:]
  -[DTSCanvasViewController canvasView:tapRecognizerShouldBegin:]
  -[DTSCanvasViewController canvasViewDidStartMediaAppearance:]
  -[DTSCanvasViewController canvasViewDidEndMediaAppearance:]
  -[DTSCanvasViewController canvasView:angerUsesForceTouch:]
  -[DTSCanvasViewController _audioToggleButtonTapped]
  -[DTSCanvasViewController _videoMessageDidFinishPlaying:]
  -[DTSCanvasViewController _composeSessionEndTimerFired]
  -[DTSCanvasViewController canvasView:didBeginPlayingMessage:]
  -[DTSCanvasViewController canvasView:willEndPlayingMessage:]
  -[DTSCanvasViewController canvasView:didEndPlayingMessage:]
  -[DTSCanvasViewController canvasView:didBeginComposingMessageType:]
  -[DTSCanvasViewController canvasView:didUpdateComposingMessageType:]
  -[DTSCanvasViewController canvasView:didEndComposingMessageType:]
  -[DTSCanvasViewController canvasView:sendMessage:]
  -[DTSCanvasViewController canvasViewDidBeginStroke:]
  -[DTSCanvasViewController canvasViewDidEndStroke:]
  -[DTSCanvasViewController canvasViewWillReachComposingSizeLimit:]
  -[DTSCanvasViewController canvasViewShouldSendWithTimer:]
  -[DTSCanvasViewController colorPickerSelectedColorDidChange:]
  -[DTSCanvasViewController colorPickerTapped:]
  -[DTSCanvasViewController canExpireMessages]
  -[DTSCanvasViewController _updateVideoPlayerUI]
  -[DTSCanvasViewController _shouldShowSkipButton]
  -[DTSCanvasViewController _cornerButtonInset]
  -[DTSCanvasViewController _updateSkipButtonFrame]
  -[DTSCanvasViewController _updatePlaybackControls]
  -[DTSCanvasViewController _updateSendButton]
  -[DTSCanvasViewController _audioToggleButton]
  -[DTSCanvasViewController _rightButtonInset]
  -[DTSCanvasViewController _updateAudioOnOffButton]
  -[DTSCanvasViewController _updateAudioOnOffButtonImage]
  -[DTSCanvasViewController _relinquishAudio]
  -[DTSCanvasViewController _sendAutosendingComposition]
  -[DTSCanvasViewController addUnplayedMessage:]
  -[DTSCanvasViewController canReplay]
  -[DTSCanvasViewController hasMessageForReplay]
  -[DTSCanvasViewController _setCachedMessageForReplay:]
  -[DTSCanvasViewController setComposingCompositeMessage:]
  -[DTSCanvasViewController setPlayingMessage:]
  -[DTSCanvasViewController _playMessage:]
  -[DTSCanvasViewController _schedulePlaybackOfCompositeMessageContent:]
  -[DTSCanvasViewController updateVideoUI]
  -[DTSCanvasViewController _shouldDimColorPicker]
  -[DTSCanvasViewController _updateColorPickerEnabled]
  -[DTSCanvasViewController _shouldAutoSend]
  -[DTSCanvasViewController usesCompactKeyboardLayout]
  -[DTSCanvasViewController setComposeDisabled:]
  -[DTSCanvasViewController _usingDemoHook]
  -[DTSCanvasViewController _sendDemoHookMessage]
  -[DTSCanvasViewController _exportDemoHookMessage]
  -[DTSCanvasViewController _showDemoHookAlertWithTitle:message:]
  -[DTSCanvasViewController _updateCanvasInteractionEnabled]
  -[DTSCanvasViewController _canLoopMessageDuringPlayback:]
  -[DTSCanvasViewController _startVideoPlayerWithMessage:]
  -[DTSCanvasViewController _hideVideoPlayer]
  -[DTSCanvasViewController _canComposeAfterMediaPlayback]
  -[DTSCanvasViewController didChangeColorPickerColor]
  -[DTSCanvasViewController didBeginComposingMessage]
  -[DTSCanvasViewController didEndComposingMessage]
  -[DTSCanvasViewController clearDeferredMessages]
  -[DTSCanvasViewController _tapRecognizerShouldBegin:]
  -[DTSCanvasViewController _setAngerUsesForceTouch:]
  -[DTSCanvasViewController _canStartMessagePlaybackLoop]
  -[DTSCanvasViewController startMessagePlaybackLoop]
  -[DTSCanvasViewController _stopPlaybackAnimated:]
  -[DTSCanvasViewController _reloadUnplayedMessages]
  -[DTSCanvasViewController setPlayingCompositeMessage:]
  -[DTSCanvasViewController _playNextMessage]
  -[DTSCanvasViewController _continueMessagePlaybackLoopWithDelay:]
  -[DTSCanvasViewController willBeginSessionPlayback]
  -[DTSCanvasViewController willEndSessionPlaybackInterrupted:]
  -[DTSCanvasViewController didEndSessionPlayback]
  -[DTSCanvasViewController _startComposeSessionEndTimer]
  -[DTSCanvasViewController _clearComposeSessionEndTimer]
  -[DTSCanvasViewController _setReplayButton:]
  -[DTSCanvasViewController canShowReplayButton]
  -[DTSCanvasViewController _setShowingReplayButton:]
  -[DTSCanvasViewController _playingParentMessage]
  -[DTSCanvasViewController _nonAnimatedMessagePlaybackDuration]
  -[DTSCanvasViewController dataSource:didReceiveSessionMessage:]
  -[DTSCanvasViewController dataSourceShouldUseDemoHook:]
  -[DTSCanvasViewController dataSource:startPlaybackWithCompletion:]
  -[DTSCanvasViewController dataSource:addDemoHookToMessage:]
  -[DTSCanvasViewController dataSourceStopPlayback:]
  -[DTSCanvasViewController dataSourceViewIsMostlyVisible:]
  -[DTSCanvasViewController dataSource:didUpdateAttachmentURL:forMessageWithIdentifier:]
  -[DTSCanvasViewController minimumBottomMargin]
  -[DTSCanvasViewController composingMessageType]
  -[DTSCanvasViewController setComposingMessageType:]
  -[DTSCanvasViewController isComposingCompositeMessage]
  -[DTSCanvasViewController isPlayingCompositeMessage]
  -[DTSCanvasViewController mediaMessagePlayTrackerTime]
  -[DTSCanvasViewController setMediaMessagePlayTrackerTime:]
  -[DTSCanvasViewController isComposeDisabled]
  -[DTSCanvasViewController isAutoPlayOnAppearanceDisabled]
  -[DTSCanvasViewController setAutoPlayOnAppearanceDisabled:]
  -[DTSCanvasViewController ignoreAppearanceCallbacks]
  -[DTSCanvasViewController setIgnoreAppearanceCallbacks:]
  -[DTSCanvasViewController isPlayingMessages]
  -[DTSCanvasViewController playingMessage]
  -[DTSCanvasViewController deferMessageSend]
  -[DTSCanvasViewController setDeferMessageSend:]
  -[DTSCanvasViewController deferredMessages]
  -[DTSCanvasViewController setUsesCompactKeyboardLayout:]
  -[DTSCanvasViewController overrideAudioDefaultToOff]
  -[DTSCanvasViewController setOverrideAudioDefaultToOff:]
  -[DTSCanvasViewController balloonPlaybackCompletion]
  -[DTSCanvasViewController setBalloonPlaybackCompletion:]
  -[DTSCanvasViewController messageForReplay]
  -[DTSCanvasViewController setMessageForReplay:]


UIImage(ETImage)
	// class methods
	+[UIImage(ETImage) etImageNamed:]
	+[UIImage(ETImage) etImageNamed:inBundle:]

UIColor(ETColorConverter)
	// instance methods
	-[UIColor(ETColorConverter) colorSpaceConvertedColor]

NSKeyedArchiver(ETAdditions)
	// class methods
	+[NSKeyedArchiver(ETAdditions) _et_secureArchivedDataWithRootObject:]

NSKeyedUnarchiver(ETAdditions)
	// class methods
	+[NSKeyedUnarchiver(ETAdditions) _et_secureUnarchiveObjectOfClasses:withData:]
	+[NSKeyedUnarchiver(ETAdditions) _et_secureUnarchiveObjectOfClass:withData:]

01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetImageGenerator 
01 00 1900 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioSession 
01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLayer 
01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 1500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAEAGLLayer 
01 00 1500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 1500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0300 /System/Library/Frameworks/OpenGLES.framework/OpenGLES: EAGLContext 
01 00 0700 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKHealthStore 
01 00 0700 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKObjectType 
01 00 0700 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKQuantityType 
01 00 0700 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKSampleQuery 
01 00 0700 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKUnit 
01 00 0900 /System/Library/PrivateFrameworks/IMSharedUI.framework/IMSharedUI: IMTypingIndicatorLayer 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1400 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1400 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBDataReader 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
