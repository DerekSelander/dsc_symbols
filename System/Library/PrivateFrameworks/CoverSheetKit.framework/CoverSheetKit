|| __DATA.__objc_data _OBJC_CLASS_$_CSBundlePlaceholderClass
|| __DATA.__objc_data _OBJC_CLASS_$_CSProminentDisplayInteractiveTransition
|| __DATA.__objc_data _OBJC_CLASS_$_CSProminentLabeledElementView
|| __DATA.__objc_data _OBJC_CLASS_$_CSProminentSubtitleView
|| __DATA.__objc_data _OBJC_METACLASS_$_CSBundlePlaceholderClass
|| __DATA.__objc_data _OBJC_METACLASS_$_CSProminentDisplayInteractiveTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_CSProminentLabeledElementView
|| __DATA.__objc_data _OBJC_METACLASS_$_CSProminentSubtitleView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSComplicationLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSComplicationLayoutElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSDeviceDetermination
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSGraphicComplicationLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSProminentDisplayView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSProminentDisplayViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSProminentElementView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSProminentEmptyElementView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSProminentLayoutController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSProminentSubtitleDateView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSProminentTextElementView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSProminentTimeView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSComplicationLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSComplicationLayoutElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSDeviceDetermination
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSGraphicComplicationLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSProminentDisplayView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSProminentDisplayViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSProminentElementView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSProminentEmptyElementView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSProminentLayoutController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSProminentSubtitleDateView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSProminentTextElementView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSProminentTimeView
|| __TEXT.__const _CSDisplayMetrics
|| __TEXT.__const _CoverSheetKitVersionNumber
|| __TEXT.__const _CoverSheetKitVersionString
|| __TEXT.__text _CSEffectiveArtworkSubtype
|| __TEXT.__text _CSFrameworkBundle
|| __TEXT.__text __CS_Private_BaseIsN84OrSimilarDevice
|| __TEXT.__text __CS_Private_MainScreenClass
|| __TEXT.__text __CS_Private_ProductType
__ BaseBoard: _BSEqualBools
__ BaseBoard: _BSEqualObjects
__ BaseBoard: _BSEqualStrings
__ BaseBoard: _BSFloatEqualToFloat
__ BaseBoard: _BSFloatGreaterThanFloat
__ BaseBoard: _BSFloatIsZero
__ BaseBoard: _BSSizeEqualToSize
__ BaseBoard: _BSSizeRoundForScale
__ BaseBoard: _OBJC_CLASS_$_BSDateFormatterCache
__ BaseBoard: _OBJC_CLASS_$_BSPlatform
__ BaseBoardUI: _OBJC_CLASS_$_BSUIVibrancyConfiguration
__ BaseBoardUI: _OBJC_CLASS_$_BSUIVibrancyEffectView
__ BaseBoardUI: _OBJC_CLASS_$_BSUIVibrancyLUT
__ BaseBoardUI: _OBJC_CLASS_$_BSUIVibrancyShadowView
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreText: _CTFontCreateWithNameAndOptions
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSValue
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$__UIAnimatingLabel
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIRoundToScale
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_time
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
CSComplicationLayout : NSObject
 @property  NSDictionary *framesByElement
 @property  long long draggedItemInsertionIndex

  // instance methods
  -[CSComplicationLayout framesByElement]
  -[CSComplicationLayout .cxx_destruct]
  -[CSComplicationLayout draggedItemInsertionIndex]
  -[CSComplicationLayout _initWithFramesByElement:draggedItemInsertionIndex:]


CSGraphicComplicationLayoutProvider : NSObject
  // class methods
  +[CSGraphicComplicationLayoutProvider complicationContainerHeight]
  +[CSGraphicComplicationLayoutProvider _insertionIndexForElement:withExistingElements:proposedInsertionIndex:]
  +[CSGraphicComplicationLayoutProvider interComplicationSpacing]
  +[CSGraphicComplicationLayoutProvider complicationLayoutForElements:containerSize:]
  +[CSGraphicComplicationLayoutProvider complicationLayoutForElements:containerSize:draggedElement:draggedElementPosition:]
  +[CSGraphicComplicationLayoutProvider interComplicationSpacingExcludingInnerInset]
  +[CSGraphicComplicationLayoutProvider _framesForLayoutElements:containerSize:]
  +[CSGraphicComplicationLayoutProvider canAddElement:toElements:]
  +[CSGraphicComplicationLayoutProvider containerEdgeInset]
  +[CSGraphicComplicationLayoutProvider complicationEdgeInset]
  +[CSGraphicComplicationLayoutProvider complicationHeight]
  +[CSGraphicComplicationLayoutProvider insertionIndexForElement:withExistingElements:]


CSProminentSubtitleView : CSProminentTextElementView
 @property  CSProminentSubtitleDateView *dateView
 @property  CSProminentSubtitleDateView *compactDateView

  // class methods
  +[CSProminentSubtitleView elementType]

  // instance methods
  -[CSProminentSubtitleView setDateView:]
  -[CSProminentSubtitleView dateView]
  -[CSProminentSubtitleView initWithDate:font:textColor:]
  -[CSProminentSubtitleView setDate:]
  -[CSProminentSubtitleView .cxx_destruct]
  -[CSProminentSubtitleView layoutSubviews]
  -[CSProminentSubtitleView _usesCompactDate]
  -[CSProminentSubtitleView compactDateView]
  -[CSProminentSubtitleView setCompactDateView:]


CSProminentElementView : UIView

CSDeviceDetermination : NSObject
  // class methods
  +[CSDeviceDetermination isCategoryPad:]
  +[CSDeviceDetermination categoryFromScreenSize]
  +[CSDeviceDetermination _zoomAwareCategoryForDevice:zoomVariant:]
  +[CSDeviceDetermination _zoomScaleForBaseDevice:]
  +[CSDeviceDetermination _screenScaleMatchesZoomScale:]
  +[CSDeviceDetermination effectiveCategory]
  +[CSDeviceDetermination isCategoryPhone:]
  +[CSDeviceDetermination baseCategory]


CSProminentLayoutController : NSObject
 @property  <UITraitEnvironment> *traitEnvironment

  // class methods
  +[CSProminentLayoutController fontWeightForElementType:familyName:]
  +[CSProminentLayoutController editingFrameForElements:]
  +[CSProminentLayoutController tightBoundsForElements:]
  +[CSProminentLayoutController timeTightBoundingHeight]
  +[CSProminentLayoutController editingBoundsForElements:]
  +[CSProminentLayoutController fontSizeForElementType:isLandscapeVariant:]
  +[CSProminentLayoutController leadingLandscapeLayoutInset]
  +[CSProminentLayoutController subtitleElementFontSize]
  +[CSProminentLayoutController tightFrameForElements:]
  +[CSProminentLayoutController timeElementFontSize]
  +[CSProminentLayoutController leadingPortraitLayoutInset]
  +[CSProminentLayoutController reticlePortraitLayoutInset]
  +[CSProminentLayoutController _landscapeReductionFactor]
  +[CSProminentLayoutController boundsForElements:variant:]
  +[CSProminentLayoutController fontWeightForElementType:]
  +[CSProminentLayoutController frameForElements:]
  +[CSProminentLayoutController frameForElements:variant:]
  +[CSProminentLayoutController boundsForElements:]

  // instance methods
  -[CSProminentLayoutController boundsForElements:variant:withBoundingRect:]
  -[CSProminentLayoutController shouldCenterElementsInBoundingRect:]
  -[CSProminentLayoutController subtitleElementBoundingTopYMultiplierLandscapePhone]
  -[CSProminentLayoutController setTraitEnvironment:]
  -[CSProminentLayoutController tightNormalizedBoundsForElements:inBoundingRect:]
  -[CSProminentLayoutController _frameForElement:withBoundingRect:variant:]
  -[CSProminentLayoutController frameForElements:variant:withBoundingRect:]
  -[CSProminentLayoutController subtitleElementEditingReticleFrameWithBoundingRect:]
  -[CSProminentLayoutController complicationRowElementEditingReticleFrameWithBoundingRect:]
  -[CSProminentLayoutController tightFrameForElements:withBoundingRect:]
  -[CSProminentLayoutController editingBoundsForElements:withBoundingRect:]
  -[CSProminentLayoutController subtitleElementBoundingTopY]
  -[CSProminentLayoutController timeElementEditingReticleFrameWithBoundingRect:]
  -[CSProminentLayoutController complicationElementEditingOffset]
  -[CSProminentLayoutController normalizedFrameForElements:inBoundingRect:]
  -[CSProminentLayoutController normalizedBoundsForElements:variant:inBoundingRect:]
  -[CSProminentLayoutController .cxx_destruct]
  -[CSProminentLayoutController timeElementReticleInset]
  -[CSProminentLayoutController _safeAreaTopInset:]
  -[CSProminentLayoutController editingFrameForElements:withBoundingRect:]
  -[CSProminentLayoutController _isPortraitForBoundingRect:]
  -[CSProminentLayoutController leadingLandscapeLayoutInset]
  -[CSProminentLayoutController tightNormalizedFrameForElements:inBoundingRect:]
  -[CSProminentLayoutController editingNormalizedFrameForElements:inBoundingRect:]
  -[CSProminentLayoutController timeElementBoundingTopY]
  -[CSProminentLayoutController complicationElementBoundingHeight]
  -[CSProminentLayoutController traitEnvironment]
  -[CSProminentLayoutController subtitleElementBoundingHeight]
  -[CSProminentLayoutController complicationElementBoundingTopY]
  -[CSProminentLayoutController elementHorizontalFrameInBoundingRect:]
  -[CSProminentLayoutController leadingPortraitLayoutInset]
  -[CSProminentLayoutController tightBoundsForElements:withBoundingRect:]
  -[CSProminentLayoutController editingNormalizedBoundsForElements:inBoundingRect:]
  -[CSProminentLayoutController reticlePortraitLayoutInset]
  -[CSProminentLayoutController normalizedFrameForElements:variant:inBoundingRect:]
  -[CSProminentLayoutController normalizedBoundsForElements:inBoundingRect:]
  -[CSProminentLayoutController editingReticleFrameForElement:withBoundingRect:]
  -[CSProminentLayoutController boundsForElements:withBoundingRect:]
  -[CSProminentLayoutController frameForElements:withBoundingRect:]
  -[CSProminentLayoutController initWithTraitEnvironment:]
  -[CSProminentLayoutController subtitleElementEditingOffset]
  -[CSProminentLayoutController reticleSpacing]
  -[CSProminentLayoutController _frameForElement:withBoundingRect:]
  -[CSProminentLayoutController timeElementBoundingHeight]


CSProminentSubtitleDateView : CSProminentTextElementView
 @property  NSDateFormatter *formatter
 @property  NSDateFormatter *alternateDateFormatter
 @property  NSString *alternateCalendarIdentifier
 @property  NSLocale *alternateCalendarLocale

  // class methods
  +[CSProminentSubtitleDateView elementType]

  // instance methods
  -[CSProminentSubtitleDateView overrideString]
  -[CSProminentSubtitleDateView initWithDate:font:textColor:]
  -[CSProminentSubtitleDateView _updateLabel]
  -[CSProminentSubtitleDateView setDate:]
  -[CSProminentSubtitleDateView setAlternateCalendarLocale:]
  -[CSProminentSubtitleDateView .cxx_destruct]
  -[CSProminentSubtitleDateView _alternateDateString]
  -[CSProminentSubtitleDateView formatter]
  -[CSProminentSubtitleDateView setAlternateDateFormatter:]
  -[CSProminentSubtitleDateView setAlternateCalendarIdentifier:locale:]
  -[CSProminentSubtitleDateView _dateString]
  -[CSProminentSubtitleDateView _isLandscape]
  -[CSProminentSubtitleDateView setAlternateCalendarIdentifier:]
  -[CSProminentSubtitleDateView alternateCalendarIdentifier]
  -[CSProminentSubtitleDateView alternateCalendarLocale]
  -[CSProminentSubtitleDateView alternateDateFormatter]
  -[CSProminentSubtitleDateView setFormatter:]
  -[CSProminentSubtitleDateView initWithDate:textColor:]


CSProminentEmptyElementView : CSProminentElementView
 @property  UIView *contentView

  // instance methods
  -[CSProminentEmptyElementView contentView]
  -[CSProminentEmptyElementView initWithContentView:]
  -[CSProminentEmptyElementView layoutSubviews]
  -[CSProminentEmptyElementView setContentView:]
  -[CSProminentEmptyElementView _layoutContentIfNeeded]


CSProminentDisplayViewController : UIViewController
 @property  double timeAlpha
 @property  double complicationRowAlpha
 @property  NSString *alternateCalendarIdentifier
 @property  NSLocale *alternateCalendarLocale
 @property  CSProminentDisplayInteractiveTransition *currentTransition
 @property  BSUIVibrancyConfiguration *vibrancyConfiguration
 @property  BSUIVibrancyLUT *alternativeVibrancyEffectLUT
 @property  unsigned long visibleElements
 @property  UIView *backgroundView
 @property  NSDate *displayDate
 @property  UIColor *textColor
 @property  long long backgroundType
 @property  long long effectType
 @property  NSString *groupName
 @property  long long vibrancyContentType
 @property  UIFont *baseFont
 @property  NSString *numberingSystem
 @property  UIViewController *subtitleComplicationViewController
 @property  UIViewController *complicationContainerViewController
 @property  BOOL usesLightTimeFontVariant
 @property  BOOL usesLandscapeTimeFontVariant
 @property  BOOL usesEditingLayout
 @property  BOOL shouldApplyVibrancyToComplications

  // class methods
  +[CSProminentDisplayViewController viewClass]

  // instance methods
  -[CSProminentDisplayViewController shouldApplyVibrancyToComplications]
  -[CSProminentDisplayViewController setComplicationContainerViewController:]
  -[CSProminentDisplayViewController _canShowWhileLocked]
  -[CSProminentDisplayViewController numberingSystem]
  -[CSProminentDisplayViewController setShouldApplyVibrancyToComplications:]
  -[CSProminentDisplayViewController backgroundType]
  -[CSProminentDisplayViewController setTextColor:]
  -[CSProminentDisplayViewController complicationContainerViewController]
  -[CSProminentDisplayViewController setDisplayDate:]
  -[CSProminentDisplayViewController timeAlpha]
  -[CSProminentDisplayViewController setAlternateCalendarLocale:]
  -[CSProminentDisplayViewController .cxx_destruct]
  -[CSProminentDisplayViewController setContentAlpha:]
  -[CSProminentDisplayViewController baseFont]
  -[CSProminentDisplayViewController viewDidLoad]
  -[CSProminentDisplayViewController setUsesLandscapeTimeFontVariant:]
  -[CSProminentDisplayViewController vibrancyConfiguration]
  -[CSProminentDisplayViewController loadView]
  -[CSProminentDisplayViewController groupName]
  -[CSProminentDisplayViewController backgroundView]
  -[CSProminentDisplayViewController displayDate]
  -[CSProminentDisplayViewController setNumberingSystem:]
  -[CSProminentDisplayViewController usesLandscapeTimeFontVariant]
  -[CSProminentDisplayViewController usesLightTimeFontVariant]
  -[CSProminentDisplayViewController setBaseFont:]
  -[CSProminentDisplayViewController setAlternateCalendarIdentifier:locale:]
  -[CSProminentDisplayViewController setAlternateCalendarIdentifier:]
  -[CSProminentDisplayViewController alternateCalendarIdentifier]
  -[CSProminentDisplayViewController alternateCalendarLocale]
  -[CSProminentDisplayViewController effectType]
  -[CSProminentDisplayViewController setCurrentTransition:]
  -[CSProminentDisplayViewController textColor]
  -[CSProminentDisplayViewController setUsesEditingLayout:]
  -[CSProminentDisplayViewController currentTransition]
  -[CSProminentDisplayViewController usesEditingLayout]
  -[CSProminentDisplayViewController setUsesLightTimeFontVariant:]
  -[CSProminentDisplayViewController setBackgroundType:]
  -[CSProminentDisplayViewController init]
  -[CSProminentDisplayViewController setGroupName:]
  -[CSProminentDisplayViewController alternativeVibrancyEffectLUT]
  -[CSProminentDisplayViewController initWithElements:date:textColor:]
  -[CSProminentDisplayViewController setSubtitleComplicationViewController:]
  -[CSProminentDisplayViewController setAlternativeVibrancyEffectLUTIdentifier:alternativeVibrancyEffectLUTBundleURL:]
  -[CSProminentDisplayViewController setEffectType:]
  -[CSProminentDisplayViewController setTransientSubtitleText:]
  -[CSProminentDisplayViewController setTransientSubtitleText:withTimeout:]
  -[CSProminentDisplayViewController setContentAlpha:forElements:]
  -[CSProminentDisplayViewController updateCustomSubtitleWithText:]
  -[CSProminentDisplayViewController subtitleComplicationViewController]
  -[CSProminentDisplayViewController setCustomSubtitleWithText:glyphName:]
  -[CSProminentDisplayViewController initWithElements:baseFont:date:textColor:]
  -[CSProminentDisplayViewController visibleElements]
  -[CSProminentDisplayViewController setVisibleElements:]
  -[CSProminentDisplayViewController beginInteractiveTransitionToBaseFont:vibrancyConfiguration:]
  -[CSProminentDisplayViewController interactiveTransition:didUpdate:]
  -[CSProminentDisplayViewController interactiveTransition:didFinishSuccessfully:]
  -[CSProminentDisplayViewController _updateElements]
  -[CSProminentDisplayViewController _displayView]
  -[CSProminentDisplayViewController _displayViewIfLoaded]
  -[CSProminentDisplayViewController contentBoundingBox]
  -[CSProminentDisplayViewController beginInteractiveTransitionToBaseFont:textColor:]
  -[CSProminentDisplayViewController _customSubtitleGlyphWithName:]
  -[CSProminentDisplayViewController _fallbackDate]
  -[CSProminentDisplayViewController setVibrancyContentType:]
  -[CSProminentDisplayViewController effectiveTextColor]
  -[CSProminentDisplayViewController _updateViewColors]
  -[CSProminentDisplayViewController _createOrDestoryVibrancyShadowViewIfNecessary]
  -[CSProminentDisplayViewController _createOrDestroyTimeElementIfNecessary]
  -[CSProminentDisplayViewController _createOrDestroySubtitleElementIfNecessary]
  -[CSProminentDisplayViewController _createOrDestroySubtitleComplicationElementIfNecessary]
  -[CSProminentDisplayViewController _createOrDestroyComplicationRowElementIfNecessary]
  -[CSProminentDisplayViewController _isShowingTime]
  -[CSProminentDisplayViewController _isShowingSubtitle]
  -[CSProminentDisplayViewController _isShowingTransientSubtitle]
  -[CSProminentDisplayViewController _isShowingSubtitleComplication]
  -[CSProminentDisplayViewController _isShowingAnySubtitle]
  -[CSProminentDisplayViewController _isShowingComplicationRow]
  -[CSProminentDisplayViewController _isShowingElement:]
  -[CSProminentDisplayViewController _elements:containElement:]
  -[CSProminentDisplayViewController vibrancyContentType]
  -[CSProminentDisplayViewController setTimeAlpha:]
  -[CSProminentDisplayViewController complicationRowAlpha]
  -[CSProminentDisplayViewController setComplicationRowAlpha:]


CSProminentDisplayInteractiveTransition : NSObject <CSProminentDisplayTransitioning>
 @property  CSProminentDisplayViewController *viewController
 @property  UIFont *baseFont
 @property  BSUIVibrancyConfiguration *fromVibrancyConfiguration
 @property  BSUIVibrancyConfiguration *toVibrancyConfiguration

  // instance methods
  -[CSProminentDisplayInteractiveTransition setViewController:]
  -[CSProminentDisplayInteractiveTransition .cxx_destruct]
  -[CSProminentDisplayInteractiveTransition baseFont]
  -[CSProminentDisplayInteractiveTransition finishInteractiveTransition]
  -[CSProminentDisplayInteractiveTransition viewController]
  -[CSProminentDisplayInteractiveTransition cancelInteractiveTransition]
  -[CSProminentDisplayInteractiveTransition updateInteractiveTransition:]
  -[CSProminentDisplayInteractiveTransition fromVibrancyConfiguration]
  -[CSProminentDisplayInteractiveTransition toVibrancyConfiguration]
  -[CSProminentDisplayInteractiveTransition initWithViewController:baseFont:fromVibrancyConfiguration:toVibrancyConfiguration:]


CSProminentDisplayView : UIView
 @property  CSProminentLayoutController *layoutController
 @property  BOOL animatingTransientSubtitleTransition
 @property  BOOL animatingTransientSubtitleTransitionToTransient
 @property  NSMutableArray *pendedTransientSubtitleViews
 @property  BOOL hasClearedSinceLastAddedTransient
 @property  BSUIVibrancyEffectView *vibrancyEffectView
 @property  UIView *backgroundView
 @property  BSUIVibrancyShadowView *vibrancyShadowView
 @property  CSProminentTimeView *timeView
 @property  CSProminentTextElementView *subtitleView
 @property  CSProminentEmptyElementView *subtitleComplicationView
 @property  CSProminentEmptyElementView *complicationRowView
 @property  CSProminentTextElementView *transientSubtitleView
 @property  CSProminentTextElementView *customSubtitleView
 @property  double subtitleAlpha
 @property  BOOL usesEditingLayout
 @property  BOOL shouldApplyVibrancyToComplications

  // instance methods
  -[CSProminentDisplayView _applyAlphaToNonTransientSubtitleViews:]
  -[CSProminentDisplayView shouldApplyVibrancyToComplications]
  -[CSProminentDisplayView _contentView]
  -[CSProminentDisplayView setCustomSubtitleView:]
  -[CSProminentDisplayView timeView]
  -[CSProminentDisplayView _addComplicationSubview:]
  -[CSProminentDisplayView vibrancyShadowView]
  -[CSProminentDisplayView _showTransientSubtitleView:]
  -[CSProminentDisplayView setShouldApplyVibrancyToComplications:]
  -[CSProminentDisplayView setPendedTransientSubtitleViews:]
  -[CSProminentDisplayView setDisplayDate:]
  -[CSProminentDisplayView setSubtitleView:]
  -[CSProminentDisplayView setSubtitleComplicationView:]
  -[CSProminentDisplayView setVibrancyShadowView:]
  -[CSProminentDisplayView subtitleComplicationView]
  -[CSProminentDisplayView .cxx_destruct]
  -[CSProminentDisplayView subtitleAlpha]
  -[CSProminentDisplayView hasClearedSinceLastAddedTransient]
  -[CSProminentDisplayView layoutController]
  -[CSProminentDisplayView setHasClearedSinceLastAddedTransient:]
  -[CSProminentDisplayView backgroundView]
  -[CSProminentDisplayView layoutSubviews]
  -[CSProminentDisplayView transientSubtitleView]
  -[CSProminentDisplayView pendedTransientSubtitleViews]
  -[CSProminentDisplayView vibrancyEffectView]
  -[CSProminentDisplayView subtitleView]
  -[CSProminentDisplayView setComplicationRowView:]
  -[CSProminentDisplayView setAnimatingTransientSubtitleTransition:]
  -[CSProminentDisplayView setUsesEditingLayout:]
  -[CSProminentDisplayView setTimeView:]
  -[CSProminentDisplayView animatingTransientSubtitleTransitionToTransient]
  -[CSProminentDisplayView initWithFrame:]
  -[CSProminentDisplayView _complicationsSuperview]
  -[CSProminentDisplayView usesEditingLayout]
  -[CSProminentDisplayView setSubtitleAlpha:]
  -[CSProminentDisplayView customSubtitleView]
  -[CSProminentDisplayView _showTransientSubtitleView:withDelay:]
  -[CSProminentDisplayView _transitionToNextPendedSubtitleIfNecessaryWithDelay:]
  -[CSProminentDisplayView setAnimatingTransientSubtitleTransitionToTransient:]
  -[CSProminentDisplayView animatingTransientSubtitleTransition]
  -[CSProminentDisplayView setTransientSubtitleView:]
  -[CSProminentDisplayView complicationRowView]
  -[CSProminentDisplayView _transitionToNextPendedSubtitleIfNecessary]


CSBundlePlaceholderClass : NSObject

CSProminentLabeledElementView : CSProminentTextElementView
 @property  UIImage *glyph

  // instance methods
  -[CSProminentLabeledElementView setOverrideString:]
  -[CSProminentLabeledElementView .cxx_destruct]
  -[CSProminentLabeledElementView initWithDate:font:textColor:glyph:]
  -[CSProminentLabeledElementView glyph]
  -[CSProminentLabeledElementView setGlyph:]


CSProminentTimeView : CSProminentTextElementView
 @property  NSDateFormatter *timeFormatter
 @property  BOOL usesLightTimeFontVariant
 @property  BOOL usesLandscapeTimeFontVariant
 @property  UIFont *baseFont
 @property  NSString *numberingSystem

  // class methods
  +[CSProminentTimeView elementType]
  +[CSProminentTimeView _lightVariantForBaseFont:size:]
  +[CSProminentTimeView _prominentFontFromBaseFont:usingLightVariant:usingLandscapeVariant:]

  // instance methods
  -[CSProminentTimeView timeFormatter]
  -[CSProminentTimeView numberingSystem]
  -[CSProminentTimeView initWithDate:font:textColor:]
  -[CSProminentTimeView _localeAccountingForNumberingSystem:]
  -[CSProminentTimeView dealloc]
  -[CSProminentTimeView setDate:]
  -[CSProminentTimeView .cxx_destruct]
  -[CSProminentTimeView baseFont]
  -[CSProminentTimeView setUsesLandscapeTimeFontVariant:]
  -[CSProminentTimeView currentLocaleDidChange:]
  -[CSProminentTimeView setNumberingSystem:]
  -[CSProminentTimeView _updateTimeFormatterNumberingSystem]
  -[CSProminentTimeView usesLandscapeTimeFontVariant]
  -[CSProminentTimeView usesLightTimeFontVariant]
  -[CSProminentTimeView setBaseFont:]
  -[CSProminentTimeView setTimeFormatter:]
  -[CSProminentTimeView _correctedDateFormat]
  -[CSProminentTimeView _isLandscape]
  -[CSProminentTimeView _timeString]
  -[CSProminentTimeView _updateTimeFormatter]
  -[CSProminentTimeView setUsesLightTimeFontVariant:]
  -[CSProminentTimeView _updateTimeString]
  -[CSProminentTimeView initWithDate:baseFont:textColor:]


CSProminentTextElementView : CSProminentElementView <CSProminentTextDefining>
 @property  UILabel *textLabel
 @property  NSDate *date
 @property  NSString *overrideString
 @property  UIFont *primaryFont
 @property  UIColor *primaryTextColor

  // class methods
  +[CSProminentTextElementView elementType]

  // instance methods
  -[CSProminentTextElementView setOverrideString:]
  -[CSProminentTextElementView overrideString]
  -[CSProminentTextElementView setPrimaryFont:]
  -[CSProminentTextElementView textLabel]
  -[CSProminentTextElementView primaryFont]
  -[CSProminentTextElementView setPrimaryTextColor:]
  -[CSProminentTextElementView primaryTextColor]
  -[CSProminentTextElementView displayString]
  -[CSProminentTextElementView initWithDate:font:textColor:]
  -[CSProminentTextElementView setDate:]
  -[CSProminentTextElementView date]
  -[CSProminentTextElementView .cxx_destruct]
  -[CSProminentTextElementView layoutSubviews]


CSComplicationLayoutElement : NSObject <NSCopying>
 @property  NSString *identifier
 @property  unsigned long complicationFamily
 @property  {CGSize=dd} size
 @property  long long gridWidth

  // instance methods
  -[CSComplicationLayoutElement identifier]
  -[CSComplicationLayoutElement .cxx_destruct]
  -[CSComplicationLayoutElement size]
  -[CSComplicationLayoutElement copyWithZone:]
  -[CSComplicationLayoutElement isEqual:]
  -[CSComplicationLayoutElement initWithIdentifier:complicationFamily:size:]
  -[CSComplicationLayoutElement gridWidth]
  -[CSComplicationLayoutElement complicationFamily]


01 00 0400 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDateFormatterCache 
01 00 0400 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSPlatform 
01 00 0100 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIVibrancyConfiguration 
01 00 0100 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIVibrancyEffectView 
01 00 0100 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIVibrancyLUT 
01 00 0100 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIVibrancyShadowView 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0800 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: _UIAnimatingLabel 
