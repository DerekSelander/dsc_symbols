|| __DATA.__common _WBSHistoryItemSynchronizationQueue
|| __DATA.__common _WBSNullPointer
|| __DATA.__data _getIMOneTimeCodeAcceleratorClass
|| __DATA.__data _getPKVirtualCardClass
|| __DATA.__data _getPKVirtualCardManagerClass
|| __DATA.__data _get_SWCTrackingDomainInfoClass
|| __DATA.__objc_data _OBJC_CLASS_$_WBSAddressBookMatch
|| __DATA.__objc_data _OBJC_CLASS_$_WBSAllowedLegacyTLSHostManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSAppleAccountInformationProvider
|| __DATA.__objc_data _OBJC_CLASS_$_WBSAsynchronousRequestHelper
|| __DATA.__objc_data _OBJC_CLASS_$_WBSAutomaticBugCaptureManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSAutomaticReaderActivationManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSAutoplayPreferenceManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSAutoplayQuirkWhitelistManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSAutoplayQuirkWhitelistSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_WBSAutoplayQuirkWhitelistSnapshotTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_WBSBookmarkAndHistoryCompletionMatch
|| __DATA.__objc_data _OBJC_CLASS_$_WBSBrowserTabCompletionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_WBSBrowserTabCompletionMatch
|| __DATA.__objc_data _OBJC_CLASS_$_WBSBrowserTabCompletionProvider
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCache
|| __DATA.__objc_data _OBJC_CLASS_$_WBSClass
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCleanupHandler
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCloudBookmarksMigrationCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCloudHistory
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCloudHistoryConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCloudHistoryFetchResult
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCloudHistoryMergeOperation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCloudHistoryPushAgentProxy
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCloudHistoryServiceProxy
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCloudHistoryStore
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCloudTab
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCloudTabCloseRequest
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCloudTabDevice
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCloudTabStore
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCompletionQuery
|| __DATA.__objc_data _OBJC_CLASS_$_WBSContactAutoFillSet
|| __DATA.__objc_data _OBJC_CLASS_$_WBSContactsEntry
|| __DATA.__objc_data _OBJC_CLASS_$_WBSContactsHelper
|| __DATA.__objc_data _OBJC_CLASS_$_WBSContentBlockerStatisticsFirstParty
|| __DATA.__objc_data _OBJC_CLASS_$_WBSContentBlockerStatisticsSQLiteStore
|| __DATA.__objc_data _OBJC_CLASS_$_WBSContentBlockersPreferenceManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCredentialIdentityMatch
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCredentialMatch
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCredentialMatchCriteria
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCredentialMatchResult
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCreditCardData
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCreditCardDataController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCreditCardFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCrowdsourcedFeedbackDomainNormalizer
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerBookmarkLeafRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerBookmarkListRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerBookmarkOperationContext
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerBookmarkRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerBookmarksTestSuite
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerCloudKitMigrationTestSuite
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerConnectionManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerCreateBookmarkOperation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerDeleteBookmarkOperation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerModifyBookmarkOperation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerMoveBookmarkOperation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerOperation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerRandomnessUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerService
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerServiceProxy
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerStatus
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerTestRunner
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerTestSuiteBookmarkAuxiliary
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCyclerTestTargetProxyController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSDigitalHealthManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSDispatchSourceTimer
|| __DATA.__objc_data _OBJC_CLASS_$_WBSDistributedNotificationObserver
|| __DATA.__objc_data _OBJC_CLASS_$_WBSDomainWhitelistManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSDomainWhitelistSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_WBSDomainWhitelistSnapshotTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_WBSEncryptedCloudKeyValueStore
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFileLockFactoryPOSIX
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFileLockPOSIX
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormAutoFillClassificationToCorrectionsTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormAutoFillCorrectionManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormAutoFillCorrectionSet
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormAutoFillCorrectionsHistoryObserver
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormAutoFillCorrectionsSQLiteStore
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormAutoFillItem
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormAutoFillMetadataCorrector
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormAutoFillParsecDomainPolicyProvider
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormAutoFillParsecFeedbackProcessor
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormDataController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormFieldClassificationCorrector
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormFieldFingerprinter
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFormToABBinder
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFrequentlyVisitedSiteCandidate
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFrequentlyVisitedSitesBannedURLStore
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFrequentlyVisitedSitesController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSGeolocationPreferenceManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryAccessSession
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryAccessSessionProxy
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryConnectionProxy
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryConnectionProxyForTesting
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryContextController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryDeletionPlan
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryItem
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryNotification
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryObjectCache
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryServiceDatabaseDelegateWeakProxy
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryServiceDatabaseProxy
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryServiceForTesting
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryServicePendingVisit
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryServiceStore
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistorySession
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistorySessionController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistorySessionIntervalCache
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistorySessionWithItems
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryTag
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryTopicTag
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryURLCompletionDataStore
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryURLCompletionMatchData
|| __DATA.__objc_data _OBJC_CLASS_$_WBSHistoryURLCompletionSession
|| __DATA.__objc_data _OBJC_CLASS_$_WBSJSCallbackHandler
|| __DATA.__objc_data _OBJC_CLASS_$_WBSMultiRoundAutoFillManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSMutableFormControlMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_WBSOneShotTimer
|| __DATA.__objc_data _OBJC_CLASS_$_WBSOpenSearchDescription
|| __DATA.__objc_data _OBJC_CLASS_$_WBSOpenSearchSchemaFetcher
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPageZoomPreferenceManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecModel
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSchema
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordAutoFillUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachBloomFilter
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachChecker
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachConfigurationBag
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachConfigurationBagLoader
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachConfigurationBagSnapshotTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachConfigurationDictionaryUnpacker
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachContext
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachCredential
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachCryptographicOperations
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachHelper
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachHelperListener
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachHelperProxy
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachKeychainCredentialSource
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachNotificationManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachQueuedPassword
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachQueuedPasswordBagManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachRequestManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachResultQuery
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachResultRecord
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachResults
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachStore
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordBreachTestCredentialSource
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordEvaluation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordEvaluator
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordImportedCredential
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordLexiconWordList
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordOrderedSetWordList
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordPatternMatch
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordPatternMatchSolver
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordPatternMatcher
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordPatternPartialSolution
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordPickerHintStringGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordSetWordList
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordWarning
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordWarningManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordWarningStore
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordWarningTopFraudTargets
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordWarningTopFraudTargetsTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordWordList
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordWordListCollection
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPasswordWordListEntry
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPerSitePreference
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPerSitePreferenceManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPerSitePreferenceTimeout
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPerSitePreferenceValueInformation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPerSitePreferencesSQLiteStore
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPeriodicActivityScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPersistentPropertyListStore
|| __DATA.__objc_data _OBJC_CLASS_$_WBSProcessProxyOverride
|| __DATA.__objc_data _OBJC_CLASS_$_WBSProtectionSpaceMatch
|| __DATA.__objc_data _OBJC_CLASS_$_WBSQuerySuggestion
|| __DATA.__objc_data _OBJC_CLASS_$_WBSQuickWebsiteSearchController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSQuickWebsiteSearchProvider
|| __DATA.__objc_data _OBJC_CLASS_$_WBSRadarNewProblemURLBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_WBSReaderConfigurationManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSReaderFont
|| __DATA.__objc_data _OBJC_CLASS_$_WBSReaderFontDownloadManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSReaderFontManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSReaderLocalizedFonts
|| __DATA.__objc_data _OBJC_CLASS_$_WBSReaderNavigationPolicyDecider
|| __DATA.__objc_data _OBJC_CLASS_$_WBSRecentHistoryTopicTagController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSRecentWebSearchEntry
|| __DATA.__objc_data _OBJC_CLASS_$_WBSRecentWebSearchesController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSRecentlyUsedAutoFillSet
|| __DATA.__objc_data _OBJC_CLASS_$_WBSResultRanker
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSafariCyclerConfigurationTool
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSafariSandboxBroker
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSafariSandboxBrokerConnection
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSameDocumentNavigationToHistoryVisitCorrelator
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSearchHelperConnectionManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSearchImpressionAnalyticsRecorder
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSingleCreditCardData
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSmartHistorySearcher
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTabCompletionMatch
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTabDialog
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTabDialogCancellationContext
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTabDialogCancellationExemption
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTabDialogInformation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTabDialogManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTabOrderInsertionHint
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTabOrderManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTopHitCompletionMatch
|| __DATA.__objc_data _OBJC_CLASS_$_WBSURLCompletionHistorySnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_WBSURLCompletionMatch
|| __DATA.__objc_data _OBJC_CLASS_$_WBSURLCompletionSessionProxy
|| __DATA.__objc_data _OBJC_CLASS_$_WBSUserAgentQuirksManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSUserAgentQuirksSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_WBSUserAgentQuirksSnapshotTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_WBSUserMediaCapturePolicyEntry
|| __DATA.__objc_data _OBJC_CLASS_$_WBSUserMediaPermissionController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSUserTypedFormString
|| __DATA.__objc_data _OBJC_CLASS_$_WBSWellKnownURLResponseCodeReliabilityChecker
|| __DATA.__objc_data _OBJC_CLASS_$__WBSFieldLabelPatternMatcherFactory
|| __DATA.__objc_data _OBJC_CLASS_$__WBSParsecArraySchema
|| __DATA.__objc_data _OBJC_CLASS_$__WBSParsecDictionarySchema
|| __DATA.__objc_data _OBJC_CLASS_$__WBSSafariCyclerConfigurationCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSAddressBookMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSAllowedLegacyTLSHostManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSAppleAccountInformationProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSAsynchronousRequestHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSAutomaticBugCaptureManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSAutomaticReaderActivationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSAutoplayPreferenceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSAutoplayQuirkWhitelistManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSAutoplayQuirkWhitelistSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSAutoplayQuirkWhitelistSnapshotTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSBookmarkAndHistoryCompletionMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSBrowserTabCompletionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSBrowserTabCompletionMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSBrowserTabCompletionProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCache
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSClass
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCleanupHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCloudBookmarksMigrationCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCloudHistory
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryFetchResult
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryMergeOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryPushAgentProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryServiceProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryStore
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCloudTab
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCloudTabCloseRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCloudTabDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCloudTabStore
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCompletionQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSContactAutoFillSet
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSContactsEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSContactsHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSContentBlockerStatisticsFirstParty
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSContentBlockerStatisticsSQLiteStore
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSContentBlockersPreferenceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCredentialIdentityMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCredentialMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCredentialMatchCriteria
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCredentialMatchResult
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCreditCardData
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCreditCardDataController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCreditCardFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCrowdsourcedFeedbackDomainNormalizer
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerBookmarkLeafRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerBookmarkListRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerBookmarkOperationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerBookmarkRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerBookmarksTestSuite
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerCloudKitMigrationTestSuite
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerConnectionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerCreateBookmarkOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerDeleteBookmarkOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerModifyBookmarkOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerMoveBookmarkOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerRandomnessUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerService
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerServiceProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerTestRunner
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerTestSuiteBookmarkAuxiliary
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCyclerTestTargetProxyController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSDigitalHealthManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSDispatchSourceTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSDistributedNotificationObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSDomainWhitelistManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSDomainWhitelistSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSDomainWhitelistSnapshotTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSEncryptedCloudKeyValueStore
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFileLockFactoryPOSIX
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFileLockPOSIX
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillClassificationToCorrectionsTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillCorrectionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillCorrectionSet
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillCorrectionsHistoryObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillCorrectionsSQLiteStore
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillItem
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillMetadataCorrector
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillParsecDomainPolicyProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillParsecFeedbackProcessor
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormDataController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormFieldClassificationCorrector
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormFieldFingerprinter
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFormToABBinder
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFrequentlyVisitedSiteCandidate
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFrequentlyVisitedSitesBannedURLStore
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFrequentlyVisitedSitesController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSGeolocationPreferenceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryAccessSession
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryAccessSessionProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryConnectionProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryConnectionProxyForTesting
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryContextController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryDeletionPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryItem
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryObjectCache
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceDatabaseDelegateWeakProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceDatabaseProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceForTesting
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryServicePendingVisit
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceStore
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistorySession
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistorySessionController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistorySessionIntervalCache
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistorySessionWithItems
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryTag
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryTopicTag
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryURLCompletionDataStore
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryURLCompletionMatchData
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSHistoryURLCompletionSession
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSJSCallbackHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSMultiRoundAutoFillManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSMutableFormControlMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSOneShotTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSOpenSearchDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSOpenSearchSchemaFetcher
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPageZoomPreferenceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecModel
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSchema
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordAutoFillUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachBloomFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachChecker
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachConfigurationBag
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachConfigurationBagLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachConfigurationBagSnapshotTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachConfigurationDictionaryUnpacker
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachContext
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachCredential
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachCryptographicOperations
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachHelperListener
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachHelperProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachKeychainCredentialSource
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachNotificationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachQueuedPassword
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachQueuedPasswordBagManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachRequestManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachResultQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachResultRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachResults
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachStore
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordBreachTestCredentialSource
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordEvaluation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordEvaluator
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordImportedCredential
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordLexiconWordList
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordOrderedSetWordList
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordPatternMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordPatternMatchSolver
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordPatternMatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordPatternPartialSolution
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordPickerHintStringGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordSetWordList
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordWarning
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordWarningManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordWarningStore
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordWarningTopFraudTargets
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordWarningTopFraudTargetsTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordWordList
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordWordListCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPasswordWordListEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPerSitePreference
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPerSitePreferenceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPerSitePreferenceTimeout
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPerSitePreferenceValueInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPerSitePreferencesSQLiteStore
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPeriodicActivityScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPersistentPropertyListStore
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSProcessProxyOverride
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSProtectionSpaceMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSQuerySuggestion
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSQuickWebsiteSearchController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSQuickWebsiteSearchProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSRadarNewProblemURLBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSReaderConfigurationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSReaderFont
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSReaderFontDownloadManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSReaderFontManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSReaderLocalizedFonts
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSReaderNavigationPolicyDecider
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSRecentHistoryTopicTagController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSRecentWebSearchEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSRecentWebSearchesController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSRecentlyUsedAutoFillSet
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSResultRanker
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSafariCyclerConfigurationTool
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSafariSandboxBroker
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSafariSandboxBrokerConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSameDocumentNavigationToHistoryVisitCorrelator
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSearchHelperConnectionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSearchImpressionAnalyticsRecorder
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSingleCreditCardData
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSmartHistorySearcher
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTabCompletionMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTabDialog
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTabDialogCancellationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTabDialogCancellationExemption
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTabDialogInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTabDialogManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTabOrderInsertionHint
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTabOrderManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTopHitCompletionMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSURLCompletionHistorySnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSURLCompletionMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSURLCompletionSessionProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSUserAgentQuirksManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSUserAgentQuirksSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSUserAgentQuirksSnapshotTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSUserMediaCapturePolicyEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSUserMediaPermissionController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSUserTypedFormString
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSWellKnownURLResponseCodeReliabilityChecker
|| __DATA.__objc_data _OBJC_METACLASS_$__WBSFieldLabelPatternMatcherFactory
|| __DATA.__objc_data _OBJC_METACLASS_$__WBSParsecArraySchema
|| __DATA.__objc_data _OBJC_METACLASS_$__WBSParsecDictionarySchema
|| __DATA.__objc_data _OBJC_METACLASS_$__WBSSafariCyclerConfigurationCommand
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSFrequentlyVisitedSitesController._bannedURLStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSHistory._entriesByURLString
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSHistory._entriesByURLStringAccessQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSHistory._historyAgeLimit
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSHistory._stringsForUserTypedDomainExpansion
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSHistoryItem._lastVisit
|| __DATA_CONST.__const _AutoplayPreferenceDomainKey
|| __DATA_CONST.__const _WBSAddressBookMatchIdentifierKey
|| __DATA_CONST.__const _WBSAddressBookMatchKeyKey
|| __DATA_CONST.__const _WBSAddressBookMatchLabelKey
|| __DATA_CONST.__const _WBSAddressBookMatchPropertyKey
|| __DATA_CONST.__const _WBSAddressBookMatchUniqueIDKey
|| __DATA_CONST.__const _WBSAddressBookMatchValueKey
|| __DATA_CONST.__const _WBSAutomaticBugCaptureHistoryProcess
|| __DATA_CONST.__const _WBSAutomaticBugCaptureSafariSharedDomain
|| __DATA_CONST.__const _WBSAutoplayPolicyWhitelistConfigurationUpdateDateKey
|| __DATA_CONST.__const _WBSAutoplayPreferenceIdentifier
|| __DATA_CONST.__const _WBSAutoplayPreferenceManagerDidUpdateAutoplayPreferenceNotificationName
|| __DATA_CONST.__const _WBSAutoplayQuirksWhitelistConfigurationUpdateDateKey
|| __DATA_CONST.__const _WBSCameraPreferenceIdentifier
|| __DATA_CONST.__const _WBSCloudHistoryAllPendingDataSavedToCloudKey
|| __DATA_CONST.__const _WBSCloudHistoryClientVersionKey
|| __DATA_CONST.__const _WBSCloudHistoryConfigurationChangedNotification
|| __DATA_CONST.__const _WBSCloudHistoryConfigurationMaximumRequestLimitCharacterCountKey
|| __DATA_CONST.__const _WBSCloudHistoryConfigurationMultipleDeviceFetchChangesThrottlingPolicyStringKey
|| __DATA_CONST.__const _WBSCloudHistoryConfigurationMultipleDeviceSaveChangesThrottlingPolicyStringKey
|| __DATA_CONST.__const _WBSCloudHistoryConfigurationSingleDeviceFetchChangesThrottlingPolicyStringKey
|| __DATA_CONST.__const _WBSCloudHistoryConfigurationSingleDeviceSaveChangesThrottlingPolicyStringKey
|| __DATA_CONST.__const _WBSCloudHistoryContainerIdentifier
|| __DATA_CONST.__const _WBSCloudHistoryDataKey
|| __DATA_CONST.__const _WBSCloudHistoryEncryptedDataKey
|| __DATA_CONST.__const _WBSCloudHistoryErrorDomain
|| __DATA_CONST.__const _WBSCloudHistoryItemsWereRemovedNotification
|| __DATA_CONST.__const _WBSCloudHistoryManateeContainerIdentifier
|| __DATA_CONST.__const _WBSCloudHistoryPushAgentServiceName
|| __DATA_CONST.__const _WBSCloudHistoryPushNotificationReceivedNotificationName
|| __DATA_CONST.__const _WBSCloudHistorySaveChangesAttemptDidCompleteNotification
|| __DATA_CONST.__const _WBSCloudHistoryStoreErrorDomain
|| __DATA_CONST.__const _WBSCloudHistoryStoreManateeStateDidChangeNotification
|| __DATA_CONST.__const _WBSCloudHistoryStoreUsesManateeContainerNotificationKey
|| __DATA_CONST.__const _WBSCloudHistoryTombstonesKey
|| __DATA_CONST.__const _WBSCloudHistoryTombstonesRecordType
|| __DATA_CONST.__const _WBSCloudHistoryUUIDKey
|| __DATA_CONST.__const _WBSCloudHistoryVersionKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitHTTPNonGetKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitLoadSuccessfulKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitRedirectDestinationURLKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitRedirectDestinationVisitTimeKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitRedirectSourceURLKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitRedirectSourceVisitTimeKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitTimeKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitTitleKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitURLKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitsKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitsRecordType
|| __DATA_CONST.__const _WBSCloudHistoryZoneName
|| __DATA_CONST.__const _WBSCloudTabDictionaryTypeKey
|| __DATA_CONST.__const _WBSCloudTabStoreErrorDomain
|| __DATA_CONST.__const _WBSContentBlockersPreferenceIdentifier
|| __DATA_CONST.__const _WBSCreditCardAutoFillAccessGroup
|| __DATA_CONST.__const _WBSCreditCardAutoFillKeychainService
|| __DATA_CONST.__const _WBSCyclerBookmarksTestSuiteErrorDomain
|| __DATA_CONST.__const _WBSCyclerCloudKitMigrationTestSuiteErrorDomain
|| __DATA_CONST.__const _WBSCyclerErrorCodeUserInfoKey
|| __DATA_CONST.__const _WBSCyclerErrorDomainUserInfoKey
|| __DATA_CONST.__const _WBSCyclerErrorLocalizedDescriptionUserInfoKey
|| __DATA_CONST.__const _WBSCyclerServiceDidFinishRunningTestDistributedNotification
|| __DATA_CONST.__const _WBSCyclerServiceErrorDomain
|| __DATA_CONST.__const _WBSCyclerServiceName
|| __DATA_CONST.__const _WBSCyclerTestRunnerErrorDomain
|| __DATA_CONST.__const _WBSCyclerTestSuiteBookmarkAuxiliaryErrorDomain
|| __DATA_CONST.__const _WBSCyclerTestSuiteBookmarkOperationClearLocalDataForCloudKitTestKey
|| __DATA_CONST.__const _WBSCyclerTestSuiteBookmarkOperationClearLocalDataIncludeMigrationStateKey
|| __DATA_CONST.__const _WBSDebugAutoplayWhitelistConfigurationUpdateIntervalKey
|| __DATA_CONST.__const _WBSDebugCloudKitBookmarkMigrationDeviceEligibilityUpdateIntervalPreferenceKey
|| __DATA_CONST.__const _WBSDebugCloudKitBookmarkMigrationGraceIntervalPreferenceKey
|| __DATA_CONST.__const _WBSDebugCloudKitBookmarkMigrationMaximumAgeOfCloudTabDevicesUpdatePreferenceKey
|| __DATA_CONST.__const _WBSDebugCloudKitBookmarkMigrationMinimumWaitForCloudTabDevicesUpdateAfterSynchronizationRequestPreferenceKey
|| __DATA_CONST.__const _WBSDebugCloudKitBookmarkMigrationTimescaleKey
|| __DATA_CONST.__const _WBSDebugCrowdsourcedAutoFillCorrectionsModePreferenceKey
|| __DATA_CONST.__const _WBSDebugHTTPProxyPreferenceKey
|| __DATA_CONST.__const _WBSDebugHTTPSProxyPreferenceKey
|| __DATA_CONST.__const _WBSDebugMLPhishingAssetURLKey
|| __DATA_CONST.__const _WBSDebugShowTabAncestryInTabTitlePreferenceKey
|| __DATA_CONST.__const _WBSDebugUserAgentQuirksConfigurationUpdateIntervalKey
|| __DATA_CONST.__const _WBSDisableMLPhishingKey
|| __DATA_CONST.__const _WBSDomainWithModifiedContentBlockersPreferenceUserInfoKey
|| __DATA_CONST.__const _WBSDomainWithModifiedPageZoomPreferenceUserInfoKey
|| __DATA_CONST.__const _WBSDomainWithModifiedReaderPreferenceUserInfoKey
|| __DATA_CONST.__const _WBSForYouSitePreferenceIdentifier
|| __DATA_CONST.__const _WBSForceCloudKitBookmarkMigrationEligibilityPreferenceKey
|| __DATA_CONST.__const _WBSFormAnnotationContactIDKey
|| __DATA_CONST.__const _WBSFormAnnotationCurrentPasswordKey
|| __DATA_CONST.__const _WBSFormAnnotationNewPasswordKey
|| __DATA_CONST.__const _WBSFormAnnotationUsernameKey
|| __DATA_CONST.__const _WBSFormAutoFillParsecCrowdsourcedCorrectionsErrorDomain
|| __DATA_CONST.__const _WBSFormMetadataAddressBookLabelKey
|| __DATA_CONST.__const _WBSFormMetadataAncestorFrameURLsKey
|| __DATA_CONST.__const _WBSFormMetadataAnnotationsKey
|| __DATA_CONST.__const _WBSFormMetadataAutoFillFormTypeKey
|| __DATA_CONST.__const _WBSFormMetadataAutocompleteTokensKey
|| __DATA_CONST.__const _WBSFormMetadataConfirmPasswordElementUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataContainsActiveElementKey
|| __DATA_CONST.__const _WBSFormMetadataControlAssociatedUsernameKey
|| __DATA_CONST.__const _WBSFormMetadataControlAutoFillButtonTypeKey
|| __DATA_CONST.__const _WBSFormMetadataControlClaimsToBeCurrentPasswordViaAutocompleteAttribute
|| __DATA_CONST.__const _WBSFormMetadataControlClaimsToBeNewPasswordViaAutocompleteAttribute
|| __DATA_CONST.__const _WBSFormMetadataControlClaimsToBeUsernameViaAutocompleteAttribute
|| __DATA_CONST.__const _WBSFormMetadataControlFieldClassKey
|| __DATA_CONST.__const _WBSFormMetadataControlFieldIDKey
|| __DATA_CONST.__const _WBSFormMetadataControlFieldNameKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsActiveElementKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsAutoFilledTextFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsDisabledKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsLabeledUsernameField
|| __DATA_CONST.__const _WBSFormMetadataControlIsReadOnlyKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsSecureTextFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsTextFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsUserEditedTextFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLastAutoFillButtonTypeKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeCreditCardCardholderFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeCreditCardCompositeExpirationDateFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeCreditCardNumberFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeCreditCardSecurityCodeFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeCreditCardTypeFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeDayFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeIgnoredDataTypeFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeMonthFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeOneTimeCodeFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeYearFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlMaxLengthKey
|| __DATA_CONST.__const _WBSFormMetadataControlMinLengthKey
|| __DATA_CONST.__const _WBSFormMetadataControlNextFieldUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataControlPasswordRules
|| __DATA_CONST.__const _WBSFormMetadataControlPlaceholderKey
|| __DATA_CONST.__const _WBSFormMetadataControlRectHeightKey
|| __DATA_CONST.__const _WBSFormMetadataControlRectLeftKey
|| __DATA_CONST.__const _WBSFormMetadataControlRectTopKey
|| __DATA_CONST.__const _WBSFormMetadataControlRectWidthKey
|| __DATA_CONST.__const _WBSFormMetadataControlSizeKey
|| __DATA_CONST.__const _WBSFormMetadataControlTagNameKey
|| __DATA_CONST.__const _WBSFormMetadataControlUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataControlValueKey
|| __DATA_CONST.__const _WBSFormMetadataDisallowsAutocompleteKey
|| __DATA_CONST.__const _WBSFormMetadataFirstCreditCardCardholderFieldOrCreditCardNumberFieldUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataFormActionKey
|| __DATA_CONST.__const _WBSFormMetadataFormControlsKey
|| __DATA_CONST.__const _WBSFormMetadataFormIDKey
|| __DATA_CONST.__const _WBSFormMetadataFormIsBestForPageLevelAutoFill
|| __DATA_CONST.__const _WBSFormMetadataFormIsBestForStreamlinedLogin
|| __DATA_CONST.__const _WBSFormMetadataFormIsEligibleForAutomaticLogin
|| __DATA_CONST.__const _WBSFormMetadataFormIsSearchFormKey
|| __DATA_CONST.__const _WBSFormMetadataFormIsVisibleKey
|| __DATA_CONST.__const _WBSFormMetadataFormUsesRelAsync
|| __DATA_CONST.__const _WBSFormMetadataOldPasswordElementUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataPasswordElementUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataPasswordRequirementsKey
|| __DATA_CONST.__const _WBSFormMetadataRadioButtonInfoKey
|| __DATA_CONST.__const _WBSFormMetadataRequestTypeKey
|| __DATA_CONST.__const _WBSFormMetadataSelectElementInfoKey
|| __DATA_CONST.__const _WBSFormMetadataSelectionLengthKey
|| __DATA_CONST.__const _WBSFormMetadataSelectionStartKey
|| __DATA_CONST.__const _WBSFormMetadataTextSampleKey
|| __DATA_CONST.__const _WBSFormMetadataUsernameElementUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataUsesGeneratedPasswordKey
|| __DATA_CONST.__const _WBSFrequentlyVisitedSitesAlgorithmVersion
|| __DATA_CONST.__const _WBSFrequentlyVisitedSitesDidChangeNotification
|| __DATA_CONST.__const _WBSGeolocationPreferenceIdentifier
|| __DATA_CONST.__const _WBSHistoryConnectionDefaultDatabaseID
|| __DATA_CONST.__const _WBSHistoryConnectionOptionCheckIntegrity
|| __DATA_CONST.__const _WBSHistoryConnectionOptionCryptographicKey
|| __DATA_CONST.__const _WBSHistoryConnectionOptionDatabaseID
|| __DATA_CONST.__const _WBSHistoryConnectionOptionDatabaseURL
|| __DATA_CONST.__const _WBSHistoryConnectionOptionDatabaseVFS
|| __DATA_CONST.__const _WBSHistoryConnectionOptionEventListenerName
|| __DATA_CONST.__const _WBSHistoryConnectionOptionLegacyDatabaseImportAfterDate
|| __DATA_CONST.__const _WBSHistoryConnectionOptionNoMemoryFallback
|| __DATA_CONST.__const _WBSHistoryConnectionOptionSalt
|| __DATA_CONST.__const _WBSHistoryConnectionOptionTruncate
|| __DATA_CONST.__const _WBSHistoryContextControllerDidAddTagNotification
|| __DATA_CONST.__const _WBSHistoryDidRemoveHostnamesNotification
|| __DATA_CONST.__const _WBSHistoryErrorDomain
|| __DATA_CONST.__const _WBSHistoryInMemoryDatabaseKey
|| __DATA_CONST.__const _WBSHistoryItemDidChangeNotification
|| __DATA_CONST.__const _WBSHistoryItemWillChangeNotification
|| __DATA_CONST.__const _WBSHistoryItemsKey
|| __DATA_CONST.__const _WBSHistoryItemsWereAddedNotification
|| __DATA_CONST.__const _WBSHistoryItemsWereLoadedNotification
|| __DATA_CONST.__const _WBSHistoryItemsWereRemovedDuringLoadingNotification
|| __DATA_CONST.__const _WBSHistoryItemsWereRemovedFromDatabaseNotification
|| __DATA_CONST.__const _WBSHistoryItemsWereRemovedNotification
|| __DATA_CONST.__const _WBSHistoryItemsWereTaggedNotification
|| __DATA_CONST.__const _WBSHistoryMachServiceName
|| __DATA_CONST.__const _WBSHistorySQLiteStoreCachedSyncCircleSizeDataKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreClearHistoryEndDateKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreClearHistoryStartDateKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreCurrentGenerationKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreFetchThrottlerDataKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreImportCompletedKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreLastMaintenanceDateKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreLastSyncedGenerationKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreLongLivedSaveOperationKey
|| __DATA_CONST.__const _WBSHistorySQLiteStorePushNotificationsAreInitializedKey
|| __DATA_CONST.__const _WBSHistorySQLiteStorePushThrottlerDataKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreServerChangeTokenKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreSyncCircleSizeRetrievalThrottlerDataKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreSyncsWithManateeContainerKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreURLHashKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreURLKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreURLSaltKey
|| __DATA_CONST.__const _WBSHistoryServiceEventClearEndDateKey
|| __DATA_CONST.__const _WBSHistoryServiceEventClearStartDateKey
|| __DATA_CONST.__const _WBSHistoryServiceEventMaintenanceDisposedHostnamesKey
|| __DATA_CONST.__const _WBSHistoryServiceEventMaintenanceDisposedURLsKey
|| __DATA_CONST.__const _WBSHistoryServiceEventMaintenanceDisposedVisitsKey
|| __DATA_CONST.__const _WBSHistoryServiceEventMaintenanceUpdateLatestVisitsKey
|| __DATA_CONST.__const _WBSHistoryServiceEventTypeClear
|| __DATA_CONST.__const _WBSHistoryServiceEventTypeMaintenance
|| __DATA_CONST.__const _WBSHistoryServiceEventTypeUpdate
|| __DATA_CONST.__const _WBSHistorySessionsDidChangeNotification
|| __DATA_CONST.__const _WBSHistorySessionsRemovedItemsKey
|| __DATA_CONST.__const _WBSHistorySessionsWithAddedItemsKey
|| __DATA_CONST.__const _WBSHistoryTaggedItemsKey
|| __DATA_CONST.__const _WBSHistoryTagsKey
|| __DATA_CONST.__const _WBSHistoryTombstoneEndTimeKey
|| __DATA_CONST.__const _WBSHistoryTombstoneStartTimeKey
|| __DATA_CONST.__const _WBSHistoryTombstoneURLHashKey
|| __DATA_CONST.__const _WBSHistoryTombstoneURLKey
|| __DATA_CONST.__const _WBSHistoryTombstoneURLSaltKey
|| __DATA_CONST.__const _WBSHistoryVisitKey
|| __DATA_CONST.__const _WBSHistoryVisitWasAddedNotification
|| __DATA_CONST.__const _WBSHistoryVisitsKey
|| __DATA_CONST.__const _WBSHistoryVisitsWereRemovedFromDatabaseNotification
|| __DATA_CONST.__const _WBSHistoryWasClearedNotification
|| __DATA_CONST.__const _WBSHistoryWasLoadedNotification
|| __DATA_CONST.__const _WBSKeychainAccessGroup
|| __DATA_CONST.__const _WBSKeychainAccountSafari
|| __DATA_CONST.__const _WBSLastWeakPasswordReportTimePreferenceKey
|| __DATA_CONST.__const _WBSMicrophonePreferenceIdentifier
|| __DATA_CONST.__const _WBSNewBlankTabPositionAppliesToAllBlankTabsPreferenceKey
|| __DATA_CONST.__const _WBSNewBlankTabPositionDelayPreferenceKey
|| __DATA_CONST.__const _WBSNewTabPositionAppliesToSpawnedTabsPreferenceKey
|| __DATA_CONST.__const _WBSNewTabPositionPreferenceKey
|| __DATA_CONST.__const _WBSNotificationsPreferenceIdentifier
|| __DATA_CONST.__const _WBSOpenSearchDescriptionUserInfoKey
|| __DATA_CONST.__const _WBSOpenSearchSchemaFetcherDidCollectDescriptionNotificationName
|| __DATA_CONST.__const _WBSOpenSearchSearchTermsParameterName
|| __DATA_CONST.__const _WBSOpenSearchStartPageParameterName
|| __DATA_CONST.__const _WBSPageMetadataAuthorKey
|| __DATA_CONST.__const _WBSPageMetadataDescriptionKey
|| __DATA_CONST.__const _WBSPageMetadataKeywordsKey
|| __DATA_CONST.__const _WBSPageMetadataTitleKey
|| __DATA_CONST.__const _WBSPageZoomFactorUserInfoKey
|| __DATA_CONST.__const _WBSPageZoomPreferenceDidChangeNotification
|| __DATA_CONST.__const _WBSParsecABGroupIdentifierGenerationDatePreferenceKey
|| __DATA_CONST.__const _WBSParsecABGroupIdentifierPreferenceKey
|| __DATA_CONST.__const _WBSParsecDomainSafariAddressBox
|| __DATA_CONST.__const _WBSParsecDomainSafariBaiduCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariBaiduSearch
|| __DATA_CONST.__const _WBSParsecDomainSafariBingCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariBingSearch
|| __DATA_CONST.__const _WBSParsecDomainSafariBookmark
|| __DATA_CONST.__const _WBSParsecDomainSafariDuckDuckGoCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariDuckDuckGoSearch
|| __DATA_CONST.__const _WBSParsecDomainSafariFindOnPage
|| __DATA_CONST.__const _WBSParsecDomainSafariGoToSite
|| __DATA_CONST.__const _WBSParsecDomainSafariGoogleCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariGoogleSearch
|| __DATA_CONST.__const _WBSParsecDomainSafariHistory
|| __DATA_CONST.__const _WBSParsecDomainSafariHistorySearch
|| __DATA_CONST.__const _WBSParsecDomainSafariICloudTab
|| __DATA_CONST.__const _WBSParsecDomainSafariLastSearchFormat
|| __DATA_CONST.__const _WBSParsecDomainSafariOther
|| __DATA_CONST.__const _WBSParsecDomainSafariQihooCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariQihooSearch
|| __DATA_CONST.__const _WBSParsecDomainSafariSiriCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariSogouCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariSogouSearch
|| __DATA_CONST.__const _WBSParsecDomainSafariSwitchToTab
|| __DATA_CONST.__const _WBSParsecDomainSafariTopHit
|| __DATA_CONST.__const _WBSParsecDomainSafariURL
|| __DATA_CONST.__const _WBSParsecDomainSafariYahooCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariYahooSearch
|| __DATA_CONST.__const _WBSParsecDomainServerApp
|| __DATA_CONST.__const _WBSParsecDomainServerITunes
|| __DATA_CONST.__const _WBSParsecDomainServerMaps
|| __DATA_CONST.__const _WBSParsecDomainServerMovie
|| __DATA_CONST.__const _WBSParsecDomainServerNews
|| __DATA_CONST.__const _WBSParsecDomainServerSport
|| __DATA_CONST.__const _WBSParsecDomainServerStock
|| __DATA_CONST.__const _WBSParsecDomainServerTopSite
|| __DATA_CONST.__const _WBSParsecDomainServerTwitter
|| __DATA_CONST.__const _WBSParsecDomainServerWeather
|| __DATA_CONST.__const _WBSParsecDomainServerWeb
|| __DATA_CONST.__const _WBSParsecDomainServerWikipedia
|| __DATA_CONST.__const _WBSParsecITunesMediaKindAlbum
|| __DATA_CONST.__const _WBSParsecITunesMediaKindArtist
|| __DATA_CONST.__const _WBSParsecITunesMediaKindBook
|| __DATA_CONST.__const _WBSParsecITunesMediaKindCourse
|| __DATA_CONST.__const _WBSParsecITunesMediaKindDesktopApp
|| __DATA_CONST.__const _WBSParsecITunesMediaKindEPubBook
|| __DATA_CONST.__const _WBSParsecITunesMediaKindIOSSoftware
|| __DATA_CONST.__const _WBSParsecITunesMediaKindMovie
|| __DATA_CONST.__const _WBSParsecITunesMediaKindMusicVideo
|| __DATA_CONST.__const _WBSParsecITunesMediaKindPlaylist
|| __DATA_CONST.__const _WBSParsecITunesMediaKindPodcast
|| __DATA_CONST.__const _WBSParsecITunesMediaKindPodcastEpisode
|| __DATA_CONST.__const _WBSParsecITunesMediaKindShortFilm
|| __DATA_CONST.__const _WBSParsecITunesMediaKindSong
|| __DATA_CONST.__const _WBSParsecITunesMediaKindTVEpisode
|| __DATA_CONST.__const _WBSParsecITunesMediaKindTVSeason
|| __DATA_CONST.__const _WBSPasswordBreachHelperServiceName
|| __DATA_CONST.__const _WBSPasswordListCommonPasswordsIdentifier
|| __DATA_CONST.__const _WBSPasswordListCommonSensitivePasswordsIdentifier
|| __DATA_CONST.__const _WBSPasswordPatternMatchBaseGuessesRequiredCountKey
|| __DATA_CONST.__const _WBSPasswordPatternMatchCaseVariationsKey
|| __DATA_CONST.__const _WBSPasswordPatternMatchFirstSubstitutedCharacter
|| __DATA_CONST.__const _WBSPasswordPatternMatchFirstSubstitutionCharacter
|| __DATA_CONST.__const _WBSPasswordPatternMatchIsSensitive
|| __DATA_CONST.__const _WBSPasswordPatternMatchKeyboardLayoutKey
|| __DATA_CONST.__const _WBSPasswordPatternMatchRepetitionCountKey
|| __DATA_CONST.__const _WBSPasswordPatternMatchSubstitutionVariationsKey
|| __DATA_CONST.__const _WBSPasswordPatternMatchWordListGuessesRequiredKey
|| __DATA_CONST.__const _WBSPasswordPatternMatchWordListIdentifierKey
|| __DATA_CONST.__const _WBSPasswordWordListCollectionEnglishLexiconIdentifier
|| __DATA_CONST.__const _WBSPasswordWordListCommonPasscodesIdentifier
|| __DATA_CONST.__const _WBSPerSiteAutomaticReaderActivationPreferenceDidChangeNotification
|| __DATA_CONST.__const _WBSPerSiteContentBlockersPreferenceDidChangeNotification
|| __DATA_CONST.__const _WBSQuickWebsiteSearchControllerDidFinishLoadingNotification
|| __DATA_CONST.__const _WBSQuickWebsiteSearchProviderKey
|| __DATA_CONST.__const _WBSQuickWebsiteSearchProviderWasAddedNotification
|| __DATA_CONST.__const _WBSReaderFontDownloadDidBeginNotification
|| __DATA_CONST.__const _WBSReaderFontDownloadDidFailNotification
|| __DATA_CONST.__const _WBSReaderFontDownloadDidFinishNotification
|| __DATA_CONST.__const _WBSReaderFontDownloadNotificationUserInfoKey
|| __DATA_CONST.__const _WBSReaderFontDownloadProgressDidChangeNotification
|| __DATA_CONST.__const _WBSReaderPreferenceIdentifier
|| __DATA_CONST.__const _WBSRecentlyUsedAutoFillSetArrayKey
|| __DATA_CONST.__const _WBSRecentlyUsedAutoFillSetDoNotFillArrayKey
|| __DATA_CONST.__const _WBSRecentlyUsedAutoFillSetDoNotFillIdentifier
|| __DATA_CONST.__const _WBSRecentlyUsedAutoFillSetLabelKey
|| __DATA_CONST.__const _WBSRequestDesktopSitePreferenceIdentifier
|| __DATA_CONST.__const _WBSTabDialogCancellationReasonCommittedNavigation
|| __DATA_CONST.__const _WBSTabDialogCancellationReasonCommittedNavigationCurrentURLKey
|| __DATA_CONST.__const _WBSTabDialogCancellationReasonProvisionalNavigation
|| __DATA_CONST.__const _WBSTabDialogCancellationReasonTabClosed
|| __DATA_CONST.__const _WBSTabOrderManagerSuppressRelatingNewBlankTabsPreferenceKey
|| __DATA_CONST.__const _WBSTranslationIsUnthrottledKey
|| __DATA_CONST.__const _WBSUserAgentQuirksConfigurationUpdateDateKey
|| __DATA_CONST.__const _WBSUserHasUsedNonVirtualCardPreferenceKey
|| __DATA_CONST.__const _WBSWebGLPreferenceIdentifier
|| __DATA_CONST.__const _WBSWebsiteShouldStartWithReaderEnabledUserInfoKey
|| __DATA_CONST.__const _WBSZoomPreferenceIdentifier
|| __DATA_CONST.__const __WBSABAddressCityKey
|| __DATA_CONST.__const __WBSABAddressCountryKey
|| __DATA_CONST.__const __WBSABAddressStateKey
|| __DATA_CONST.__const __WBSABAddressStreetKey
|| __DATA_CONST.__const __WBSABAddressZIPKey
|| __DATA_CONST.__const __WBSABInstantMessageServiceKey
|| __DATA_CONST.__const __WBSABInstantMessageUsernameKey
|| __DATA_CONST.__const __WBSABJobTitleProperty
|| __DATA_CONST.__const __WBSABLabelHome
|| __DATA_CONST.__const __WBSABLabelHomePage
|| __DATA_CONST.__const __WBSABLabelOther
|| __DATA_CONST.__const __WBSABLabelWork
|| __DATA_CONST.__const __WBSABPhoneLabelHomeFax
|| __DATA_CONST.__const __WBSABPhoneLabelMain
|| __DATA_CONST.__const __WBSABPhoneLabelMobile
|| __DATA_CONST.__const __WBSABPhoneLabelOtherFax
|| __DATA_CONST.__const __WBSABPhoneLabelPager
|| __DATA_CONST.__const __WBSABPhoneLabelWorkFax
|| __DATA_CONST.__const __WBSABPhoneLabeliPhone
|| __DATA_CONST.__const __WBSABURLsProperty
|| __DATA_CONST.__const __WBSChineseCharacterForCity
|| __DATA_CONST.__const __WBSChineseCharacterForProvince
|| __DATA_CONST.__const __ZN12SafariShared34AddressBookAutoCompleteMappingData13fieldLabelMapE
|| __DATA_CONST.__const __ZN12SafariShared34AddressBookAutoCompleteMappingData20autocompleteTokenMapE
|| __DATA_CONST.__const __ZN12SafariShared34AddressBookAutoCompleteMappingData30emailFieldLabelPatternMatchersE
|| __DATA_CONST.__const __ZN12SafariShared34AddressBookAutoCompleteMappingData36addressBookFieldLabelPatternMatchersE
|| __DATA_CONST.__const __ZN12SafariShared34AddressBookAutoCompleteMappingData8synonymsE
|| __DATA_CONST.__const __ZTVN12SafariShared12JSControllerE
|| __DATA_CONST.__const __ZTVN12SafariShared13FrameMetadataE
|| __DATA_CONST.__const __ZTVN12SafariShared18ReaderJSControllerE
|| __DATA_CONST.__const __ZTVN12SafariShared25ArticleFinderJSControllerE
|| __DATA_CONST.__const __ZTVN12SafariShared28ReaderAvailabilityControllerE
|| __DATA_CONST.__const _amharicLanguageTag
|| __DATA_CONST.__const _arabicLanguageTag
|| __DATA_CONST.__const _armenianLanguageTag
|| __DATA_CONST.__const _bengaliLanguageTag
|| __DATA_CONST.__const _burmeseLanguageTag
|| __DATA_CONST.__const _cherokeeLanguageTag
|| __DATA_CONST.__const _gujaratiLanguageTag
|| __DATA_CONST.__const _hebrewLanguageTag
|| __DATA_CONST.__const _hindiLanguageTag
|| __DATA_CONST.__const _japaneseLanguageTag
|| __DATA_CONST.__const _kannadaLanguageTag
|| __DATA_CONST.__const _khmerLanguageTag
|| __DATA_CONST.__const _koreanLanguageTag
|| __DATA_CONST.__const _laoLanguageTag
|| __DATA_CONST.__const _malayalamLanguageTag
|| __DATA_CONST.__const _oriyaLanguageTag
|| __DATA_CONST.__const _punjabiLanguageTag
|| __DATA_CONST.__const _simplifiedChineseLanguageTag
|| __DATA_CONST.__const _sinhalaLanguageTag
|| __DATA_CONST.__const _tamilLanguageTag
|| __DATA_CONST.__const _teluguLanguageTag
|| __DATA_CONST.__const _thaiLanguageTag
|| __DATA_CONST.__const _traditionalChineseLanguageTag
|| __DATA_CONST.__const _unifiedCanadianSyllabicsLanguageTag
|| __DATA_CONST.__const _urduLanguageTag
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCertificateWarningPageContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudHistoryPushAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudHistoryVisit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCoalescedAsynchronousWriter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSDictionaryInt64
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormControlMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormMetadataController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryCrypto
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryDatabaseAccessBroker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryItemToTagPairsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistorySQLiteSchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryServiceDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryServiceDatabaseDelegateProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryServiceEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryServiceItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryServiceObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryServiceTombstone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryServiceURLCompletion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryServiceURLCompletionMatchData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryServiceURLCompletionMatchEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryServiceURLRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryServiceVisit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryTagDatabaseController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryTagsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryTombstone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryUniversalPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryVisit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryVisitIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryVisitsAndTombstonesInSyncWindowPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryVisitsInRedirectChainPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryVisitsInTimeRangePredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryVisitsMatchingOriginsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryVisitsMatchingTimesPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryVisitsNeedingRecomputedVisitCountsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryVisitsWithIDPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryVisitsWithItemsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSMemoryPressureMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSOpenSearchURLTemplate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSOpenSearchURLTemplateParameter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSReaderAvailabilityCheckResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSReaderResources
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSRemoteHistoryItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSRemoteHistorySession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSRemoteHistoryVisit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSScopeTimeoutHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSetInt64
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSURLCompletionDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSURLCompletionMatchSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSURLCompletionUserTypedString
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSURLSuffixChecker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCertificateWarningPageContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryPushAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryVisit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCoalescedAsynchronousWriter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSDictionaryInt64
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormControlMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormMetadataController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryCrypto
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryDatabaseAccessBroker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryItemToTagPairsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistorySQLiteSchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceDatabaseDelegateProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceTombstone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceURLCompletion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceURLCompletionMatchData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceURLCompletionMatchEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceURLRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceVisit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryTagDatabaseController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryTagsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryTombstone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryUniversalPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryVisit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryVisitIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryVisitsAndTombstonesInSyncWindowPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryVisitsInRedirectChainPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryVisitsInTimeRangePredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryVisitsMatchingOriginsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryVisitsMatchingTimesPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryVisitsNeedingRecomputedVisitCountsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryVisitsWithIDPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryVisitsWithItemsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSMemoryPressureMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSOpenSearchURLTemplate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSOpenSearchURLTemplateParameter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSReaderAvailabilityCheckResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSReaderResources
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSRemoteHistoryItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSRemoteHistorySession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSRemoteHistoryVisit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSScopeTimeoutHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSetInt64
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSURLCompletionDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSURLCompletionMatchSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSURLCompletionUserTypedString
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSURLSuffixChecker
|| __TEXT.__const _WBSCloudHistoryPenalty
|| __TEXT.__const _WBSHistoryCurrentDatabaseSchemaVersion
|| __TEXT.__const _WBSHistoryItemUnvisitedTimeInterval
|| __TEXT.__const _WBSHistoryVisitCountScoreForNormalVisit
|| __TEXT.__const _WBSHistoryVisitScoreDaysPerWeek
|| __TEXT.__const _WBSHistoryVisitScoreMaxDailyCounts
|| __TEXT.__const _WBSHistoryVisitScoreMaxWeeklyCounts
|| __TEXT.__const _WBSHistoryVisitScoreNumberOfDaysForDailyAndWeeklyVisitCountScores
|| __TEXT.__const _WBSHistoryVisitScoreSecondsPerDay
|| __TEXT.__const _WBSHistoryVisitScoreTimeIntervalForDailyAndWeeklyVisitCountScores
|| __TEXT.__const _WBSMaximumNumberOfFrequentlyVisitedSites
|| __TEXT.__const _WBSMaximumURLStringLengthToDisplay
|| __TEXT.__const _WBSModerateTimeSinceLastVisitPenalty
|| __TEXT.__const _WBSNTPTimeoutInterval
|| __TEXT.__const _WBSNullOperatingSystemVersion
|| __TEXT.__const _WBSPerSitePreferencesNoTimeoutInterval
|| __TEXT.__const _WBSShortTimeSinceLastVisitPenalty
|| __TEXT.__text _CCECCryptorBlind
|| __TEXT.__text _CCECCryptorBlindingKeysRelease
|| __TEXT.__text _CCECCryptorGenerateBlindingKeys
|| __TEXT.__text _CCECCryptorH2C
|| __TEXT.__text _CCECCryptorUnblind
|| __TEXT.__text _WBHistoryVisitWeightForAttributesAndOrigin
|| __TEXT.__text _WBSAllowedCreditCardNumberSeparatorCharacters
|| __TEXT.__text _WBSAppWasLaunchedAfterMajorOSUpgrade
|| __TEXT.__text _WBSAutoFillGetSavedDataClasses
|| __TEXT.__text _WBSAutoplayDifferentialPrivacyKeyForSignal
|| __TEXT.__text _WBSCloudHistoryServiceInterface
|| __TEXT.__text _WBSCreditCardCardholderFieldLabels
|| __TEXT.__text _WBSCreditCardCompositeExpirationDateFieldLabels
|| __TEXT.__text _WBSCreditCardNumberFieldLabels
|| __TEXT.__text _WBSCreditCardSecurityCodeFieldLabels
|| __TEXT.__text _WBSCreditCardTypeFieldLabels
|| __TEXT.__text _WBSCreditCardTypeFromNumber
|| __TEXT.__text _WBSCreditCardTypeFromNumberAllowingPartialMatch
|| __TEXT.__text _WBSCreditCardTypeLocalizedName
|| __TEXT.__text _WBSCreditCardTypeSynonyms
|| __TEXT.__text _WBSDispatchGroupNotifyWithTimeout
|| __TEXT.__text _WBSExpirationDateWithDayMonthYear
|| __TEXT.__text _WBSFieldLabelPatternMatcherArrayFree
|| __TEXT.__text _WBSFieldLabelPatternMatcherArrayGetCount
|| __TEXT.__text _WBSFieldLabelPatternMatcherArrayGetPatternMatcherAtIndex
|| __TEXT.__text _WBSFieldLabelPatternMatcherFindLongestMatch
|| __TEXT.__text _WBSFieldLabelPatternMatcherSearchReverse
|| __TEXT.__text _WBSGetKeychainData
|| __TEXT.__text _WBSGetKeychainPassword
|| __TEXT.__text _WBSHistoryAddAutocompleteTriggerToArray
|| __TEXT.__text _WBSHistoryConnectionInterface
|| __TEXT.__text _WBSHistoryDecodeAutocompleteTriggers
|| __TEXT.__text _WBSHistoryInMemoryDatabaseURL
|| __TEXT.__text _WBSHistorySHA512
|| __TEXT.__text _WBSHistoryServiceDatabaseDelegateInterface
|| __TEXT.__text _WBSHistoryServiceDatabaseInterface
|| __TEXT.__text _WBSHistoryServiceMain
|| __TEXT.__text _WBSHistoryTopicScore
|| __TEXT.__text _WBSHistoryVisitScoreForWeightedVisitCount
|| __TEXT.__text _WBSHistoryVisitWeightedVisitCountFromScore
|| __TEXT.__text _WBSKeychainItemExists
|| __TEXT.__text _WBSMakeOperatingSystemVersion
|| __TEXT.__text _WBSNonCreditCardCardNumberFieldLabels
|| __TEXT.__text _WBSNormalizedCreditCardNumber
|| __TEXT.__text _WBSOperatingSystemVersionsEqual
|| __TEXT.__text _WBSParseOperatingSystemVersion
|| __TEXT.__text _WBSPasswordBreachMurmur3HashWithSeed
|| __TEXT.__text _WBSPerformBlockOnMainRunLoopWithCommonModes
|| __TEXT.__text _WBSRemoveKeychainData
|| __TEXT.__text _WBSRemoveKeychainDataIfExists
|| __TEXT.__text _WBSRemoveKeychainPasswordIfExists
|| __TEXT.__text _WBSReportAutoplaySignalIfNecessary
|| __TEXT.__text _WBSRespondWithRandomDelay
|| __TEXT.__text _WBSRingerIsSilent
|| __TEXT.__text _WBSSQLiteComputeLatestVisitFinal
|| __TEXT.__text _WBSSQLiteComputeLatestVisitStep
|| __TEXT.__text _WBSSQLiteDailyVisitCountsFinal
|| __TEXT.__text _WBSSQLiteDailyVisitCountsStep
|| __TEXT.__text _WBSSQLiteExtractDomainExpansion
|| __TEXT.__text _WBSSQLiteExtractHostname
|| __TEXT.__text _WBSSQLiteLatestVisitFor
|| __TEXT.__text _WBSSQLiteSHA512
|| __TEXT.__text _WBSSQLiteVisitScore
|| __TEXT.__text _WBSSQLiteWeeklyVisitCountsFinal
|| __TEXT.__text _WBSSQLiteWeeklyVisitCountsStep
|| __TEXT.__text _WBSSafariSandboxBrokerInterface
|| __TEXT.__text _WBSSafariSandboxBrokerInterfaceWithProtocol
|| __TEXT.__text _WBSSetIsStringForUserTypedDomainExpansionInHistoryFunction
|| __TEXT.__text _WBSSetKeychainData
|| __TEXT.__text _WBSSetKeychainPassword
|| __TEXT.__text _WBSSignalToSendForAutoplayEventWithFlags
|| __TEXT.__text _WBSTopSitesCachedScoreIsStale
|| __TEXT.__text _WBSTopSitesMinimumVisitCountThreshold
|| __TEXT.__text _WBSTopSitesScore
|| __TEXT.__text _WBSTopSitesScoreForCaching
|| __TEXT.__text _WBSTopSitesScoreWithCachedValues
|| __TEXT.__text _WBSUnifiedFieldInputTypeForString
|| __TEXT.__text _WBSUnlocalizedStringFromPasswordBreachCheckResult
|| __TEXT.__text __SSURLCompletionMatchLocationForWBSURLCompletionMatchLocation
|| __TEXT.__text __Z25WBSHistoryAddVisitToScoreiddRN3WTF6VectorIiLm0ENS_15CrashOnOverflowELm16ENS_10FastMallocEEES4_
|| __TEXT.__text __Z27WBSSetOfIdentifiersFromTagsP5NSSetIP13WBSHistoryTagE
|| __TEXT.__text __Z28WBSCloudHistoryPushAgentMainv
|| __TEXT.__text __Z28WBSHistoryUpdateScoreOfVisitddiiRN3WTF6VectorIiLm0ENS_15CrashOnOverflowELm16ENS_10FastMallocEEES4_Pb
|| __TEXT.__text __Z37WBSHistoryCollapseDailyVisitsToWeeklyRN3WTF6VectorIiLm0ENS_15CrashOnOverflowELm16ENS_10FastMallocEEES4_
|| __TEXT.__text __Z41WBSHistoryPadDailyCountsForNewVisitAtTimeddRN3WTF6VectorIiLm0ENS_15CrashOnOverflowELm16ENS_10FastMallocEEES4_
|| __TEXT.__text __Z50WBSHistoryTimesOfVisitsToSynthesizeFromDailyCountsdRKN3WTF6VectorIiLm0ENS_15CrashOnOverflowELm16ENS_10FastMallocEEES5_
|| __TEXT.__text __Z64WBSHistoryTimesForSynthesizedVisitsPreceedingDailyAndWeeklyRangedm
|| __TEXT.__text __ZN12SafariShared11JSUtilities10toNSStringEPK15OpaqueJSContextPK13OpaqueJSValue19WBSNullStringPolicy
|| __TEXT.__text __ZN12SafariShared11JSUtilities11arrayLengthEPK15OpaqueJSContextP13OpaqueJSValuePPKS4_
|| __TEXT.__text __ZN12SafariShared11JSUtilities19toJSCallbackHandlerEPK15OpaqueJSContextPK13OpaqueJSValuePU44objcproto33WBSJSCallbackHandlerErrorReporter11objc_object
|| __TEXT.__text __ZN12SafariShared11JSUtilities20functionObjectByNameEPK15OpaqueJSContextP13OpaqueJSValuePKc
|| __TEXT.__text __ZN12SafariShared11JSUtilities20globalJSObjectByNameEPK15OpaqueJSContextPKc
|| __TEXT.__text __ZN12SafariShared11JSUtilities20logExceptionInternalEPK15OpaqueJSContextPK13OpaqueJSValue
|| __TEXT.__text __ZN12SafariShared11JSUtilities24toJSErrorCallbackHandlerEPK15OpaqueJSContextPU44objcproto33WBSJSCallbackHandlerErrorReporter11objc_object
|| __TEXT.__text __ZN12SafariShared11JSUtilities25callJSMethodWithArgumentsEPK15OpaqueJSContextP13OpaqueJSValuePKcPKPKS4_m
|| __TEXT.__text __ZN12SafariShared11JSUtilities26toJSPromiseCallbackHandlerEPK15OpaqueJSContextP13OpaqueJSValueS5_
|| __TEXT.__text __ZN12SafariShared11JSUtilities29registerJSObjectInGlobalSpaceEPK15OpaqueJSContextP13OpaqueJSClassPKcPv
|| __TEXT.__text __ZN12SafariShared11JSUtilities40translateNSToJSValueForJSCallbackHandlerEPK15OpaqueJSContextP11objc_object
|| __TEXT.__text __ZN12SafariShared11JSUtilities8jsStringEP8NSString
|| __TEXT.__text __ZN12SafariShared11JSUtilities8jsStringEPKc
|| __TEXT.__text __ZN12SafariShared11JSUtilities8nsStringEP14OpaqueJSString
|| __TEXT.__text __ZN12SafariShared11JSUtilities9toJSValueEPK15OpaqueJSContextP8NSString20WBSNullOrEmptyString
|| __TEXT.__text __ZN12SafariShared12DeletionPlan19sanitizeItemTouchedEv
|| __TEXT.__text __ZN12SafariShared12DeletionPlan22sanitizeVisitsToDeleteEv
|| __TEXT.__text __ZN12SafariShared12DeletionPlanC1Ev
|| __TEXT.__text __ZN12SafariShared12DeletionPlanC2Ev
|| __TEXT.__text __ZN12SafariShared12JSController10setContextEP15OpaqueJSContext
|| __TEXT.__text __ZN12SafariShared12JSController12jsControllerEP13OpaqueJSValue
|| __TEXT.__text __ZN12SafariShared12JSController12staticValuesERN3WTF6VectorI13JSStaticValueLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE
|| __TEXT.__text __ZN12SafariShared12JSController13createJSClassEv
|| __TEXT.__text __ZN12SafariShared12JSController13protectObjectEP13OpaqueJSValue
|| __TEXT.__text __ZN12SafariShared12JSController14controllerNameEv
|| __TEXT.__text __ZN12SafariShared12JSController15staticFunctionsERN3WTF6VectorI16JSStaticFunctionLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE
|| __TEXT.__text __ZN12SafariShared12JSController16unprotectObjectsEv
|| __TEXT.__text __ZN12SafariShared12JSController17scriptObjectReadyEPK15OpaqueJSContext
|| __TEXT.__text __ZN12SafariShared12JSController29addScriptObjectToGlobalObjectEPK15OpaqueJSContext
|| __TEXT.__text __ZN12SafariShared12JSControllerC2Ev
|| __TEXT.__text __ZN12SafariShared12JSControllerD0Ev
|| __TEXT.__text __ZN12SafariShared12JSControllerD1Ev
|| __TEXT.__text __ZN12SafariShared12JSControllerD2Ev
|| __TEXT.__text __ZN12SafariShared13FrameMetadata12staticValuesERN3WTF6VectorI13JSStaticValueLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE
|| __TEXT.__text __ZN12SafariShared13FrameMetadata13staticJSClassEv
|| __TEXT.__text __ZN12SafariShared13FrameMetadata15staticFunctionsERN3WTF6VectorI16JSStaticFunctionLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE
|| __TEXT.__text __ZN12SafariShared13FrameMetadataC1EPU31objcproto20WBSFormAutoFillFrame11objc_objectP25WBSFormMetadataController
|| __TEXT.__text __ZN12SafariShared13FrameMetadataC2EPU31objcproto20WBSFormAutoFillFrame11objc_objectP25WBSFormMetadataController
|| __TEXT.__text __ZN12SafariShared18ReaderJSController13staticJSClassEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController14loadNewArticleEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController15staticFunctionsERN3WTF6VectorI16JSStaticFunctionLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE
|| __TEXT.__text __ZN12SafariShared18ReaderJSController16scriptObjectNameEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController16setConfigurationEP12NSDictionary
|| __TEXT.__text __ZN12SafariShared18ReaderJSController17setReaderIsActiveEb
|| __TEXT.__text __ZN12SafariShared18ReaderJSController19stopLoadingNextPageEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController21activateWithAnimationEb
|| __TEXT.__text __ZN12SafariShared18ReaderJSController21nextPageArticleFinderEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController25readerWillEnterBackgroundEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController26clearNextPageArticleFinderEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController30evaluateLocalizedStringsScriptEPK15OpaqueJSContext
|| __TEXT.__text __ZN12SafariShared18ReaderJSController33evaluateSharedUINormalWorldScriptEPK15OpaqueJSContext
|| __TEXT.__text __ZN12SafariShared18ReaderJSController36getArticleScrollPositionAsDictionaryEv
|| __TEXT.__text __ZN12SafariShared18URLCompletionEntry13markAsDeletedEv
|| __TEXT.__text __ZN12SafariShared18URLCompletionEntry18setVisitCountScoreEi
|| __TEXT.__text __ZN12SafariShared18URLCompletionEntry26setHasAutocompleteTriggersEb
|| __TEXT.__text __ZN12SafariShared18URLCompletionEntry6updateEP8NSStringdbb
|| __TEXT.__text __ZN12SafariShared18URLCompletionEntryC1EP8NSStringS2_dy
|| __TEXT.__text __ZN12SafariShared18URLCompletionEntryC1EPKcmS2_mdy
|| __TEXT.__text __ZN12SafariShared18URLCompletionEntryC1Ev
|| __TEXT.__text __ZN12SafariShared18URLCompletionEntryC2EP8NSStringS2_dy
|| __TEXT.__text __ZN12SafariShared18URLCompletionEntryC2EPKcmS2_mdy
|| __TEXT.__text __ZN12SafariShared18URLCompletionEntryC2Ev
|| __TEXT.__text __ZN12SafariShared19ReadStreamedMatchesEiU13block_pointerFvONSt3__110unique_ptrINS_25_HistoryStreamedMatchDataENS0_14default_deleteIS2_EEEEEU13block_pointerFvONS1_INS_26_HistoryStreamedMatchEntryENS3_IS9_EEEEE
|| __TEXT.__text __ZN12SafariShared19ReadStreamedObjectsEiU13block_pointerFvPNS_20_HistoryStreamedItemEEU13block_pointerFvPNS_21_HistoryStreamedVisitEEU13block_pointerFvPNS_25_HistoryStreamedTombstoneEEU13block_pointerFbvE
|| __TEXT.__text __ZN12SafariShared19ReadStreamedObjectsEiU13block_pointerFvPNS_20_HistoryStreamedItemEEU13block_pointerFvPNS_21_HistoryStreamedVisitEEU13block_pointerFvPNS_25_HistoryStreamedTombstoneEEU13block_pointerFvPNS_19_HistoryStreamedTagEEU13block_pointerFvPNS_34_HistoryStreamedObjectToTagMappingEEU13block_pointerFbvE
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryKeyC1EP8NSString
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryKeyC1EPKcm
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryKeyC1Ev
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryKeyC2EP8NSString
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryKeyC2EPKcm
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryKeyC2Ev
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryMap11recordVisitEP8NSStringS2_dbbbi
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryMap15updateItemScoreEP8NSStringdiiPb
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryMap15updateItemTitleEP8NSStringdS2_
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryMap16queryVisitCountsEP8NSStringPxPU15__autoreleasingP6NSDataS7_
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryMap17updateVisitCountsERNS_18URLCompletionEntryEP8NSStringU13block_pointerFvRN3WTF6VectorIiLm0ENS5_15CrashOnOverflowELm16ENS5_10FastMallocEEESA_E
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryMap26updateAutocompleteTriggersEP8NSStringP6NSData
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryMap32setNextItemInRedirectChainOfItemEP8NSStringS2_
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryMap6insertEONS_18URLCompletionEntryEONSt3__110unique_ptrINS_24URLCompletionEntryExtrasENS3_14default_deleteIS5_EEEE
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryMap6insertERNS_25URLCompletionEntryBuilderEb
|| __TEXT.__text __ZN12SafariShared21URLCompletionEntryMap6removeEP5NSSetIP8NSStringE
|| __TEXT.__text __ZN12SafariShared22weightForMatchLocationE29WBSURLCompletionMatchLocation
|| __TEXT.__text __ZN12SafariShared23computeURLMatchLocationEP8NSStringP31WBSURLCompletionUserTypedString
|| __TEXT.__text __ZN12SafariShared24FieldLabelPatternMatcher15isWordCharacterEt
|| __TEXT.__text __ZN12SafariShared24FieldLabelPatternMatcherC1ERKNS0_3DFAEPKtl
|| __TEXT.__text __ZN12SafariShared24FieldLabelPatternMatcherC2ERKNS0_3DFAEPKtl
|| __TEXT.__text __ZN12SafariShared24URLCompletionEntryExtras6createEPKimS2_mPKhm
|| __TEXT.__text __ZN12SafariShared24URLCompletionEntryExtrasC1EPiS1_PhS2_
|| __TEXT.__text __ZN12SafariShared24URLCompletionEntryExtrasC1Ev
|| __TEXT.__text __ZN12SafariShared24URLCompletionEntryExtrasC2EPiS1_PhS2_
|| __TEXT.__text __ZN12SafariShared24URLCompletionEntryExtrasC2Ev
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController12staticValuesERN3WTF6VectorI13JSStaticValueLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController13staticJSClassEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController14articleContentEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController15staticFunctionsERN3WTF6VectorI16JSStaticFunctionLm0ENS1_15CrashOnOverflowELm16ENS1_10FastMallocEEE
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController16scriptObjectNameEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController17readerIsAvailableEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController20reloadArticleContentEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController27prepareToTransitionToReaderEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController33collectReadingListItemInformationEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController34findTextSamplesByVisualExaminationEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController34readerTextIncludingArticleMetadataEb
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController41detectAvailabilityForUIProcessDrivenCheckEv
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriter14ensureCapacityEm
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriter17createPipeHandlesEPU15__autoreleasingP12NSFileHandleS4_
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriter5writeERKNS_19_HistoryStreamedTagE
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriter5writeERKNS_20_HistoryStreamedItemE
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriter5writeERKNS_21_HistoryStreamedVisitE
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriter5writeERKNS_25_HistoryStreamedMatchDataE
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriter5writeERKNS_25_HistoryStreamedTombstoneE
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriter5writeERKNS_26_HistoryStreamedMatchEntryE
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriter5writeERKNS_31_HistoryStreamedDomainExpansionE
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriter5writeERKNS_34_HistoryStreamedObjectToTagMappingE
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriterC1Ei
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriterC2Ei
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriterD1Ev
|| __TEXT.__text __ZN12SafariShared25HistoryObjectStreamWriterD2Ev
|| __TEXT.__text __ZN12SafariShared25LatestVisitInformationMap11removeItemsERKNSt3__113unordered_setIxNS1_4hashIxEENS1_8equal_toIxEENS1_9allocatorIxEEEE
|| __TEXT.__text __ZN12SafariShared25LatestVisitInformationMap5clearEv
|| __TEXT.__text __ZN12SafariShared25LatestVisitInformationMap6updateExxdi
|| __TEXT.__text __ZN12SafariShared25SuddenTerminationDisabler14invalidateTaskEv
|| __TEXT.__text __ZN12SafariShared25SuddenTerminationDisabler17setTaskIdentifierEm
|| __TEXT.__text __ZN12SafariShared25SuddenTerminationDisabler23enableSuddenTerminationEv
|| __TEXT.__text __ZN12SafariShared25SuddenTerminationDisabler24disableSuddenTerminationEv
|| __TEXT.__text __ZN12SafariShared25SuddenTerminationDisabler27enableSuddenTerminationTaskEv
|| __TEXT.__text __ZN12SafariShared25SuddenTerminationDisabler28disableSuddenTerminationTaskEv
|| __TEXT.__text __ZN12SafariShared25SuddenTerminationDisabler34enableSuddenTerminationTransactionEv
|| __TEXT.__text __ZN12SafariShared25SuddenTerminationDisabler35disableSuddenTerminationTransactionEv
|| __TEXT.__text __ZN12SafariShared25SuddenTerminationDisablerC1EP8NSString
|| __TEXT.__text __ZN12SafariShared25SuddenTerminationDisablerC2EP8NSString
|| __TEXT.__text __ZN12SafariShared25URLCompletionEntryBuilderC1ERKNS0_10ParametersE
|| __TEXT.__text __ZN12SafariShared25URLCompletionEntryBuilderC2ERKNS0_10ParametersE
|| __TEXT.__text __ZN12SafariShared25computeTitleMatchLocationEP8NSStringP31WBSURLCompletionUserTypedString
|| __TEXT.__text __ZN12SafariShared27debugStringForMatchLocationE29WBSURLCompletionMatchLocation
|| __TEXT.__text __ZN12SafariShared28ReadStreamedDomainExpansionsEiU13block_pointerFvPNS_31_HistoryStreamedDomainExpansionEE
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController13didFinishLoadEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController17clearAvailabilityEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController20prepareArticleFinderEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController21determineAvailabilityEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController21didFinishDocumentLoadEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController21doneWithArticleFinderEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController21originalArticleFinderEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController23articleReloadTimerFiredEP16__CFRunLoopTimerPv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController25checkAvailabilityIfNeededEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController26scheduleArticleReloadTimerEd
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController27prepareToTransitionToReaderEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController28clearArticleFinderIfPossibleEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController28detectAvailabilityAfterDelayEdNS_34LoadEventTriggeringReaderDetectionE
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController28invalidateArticleReloadTimerEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController29extractPageMetadataAndTextNowEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController30AvailabilityDetectionScheduler12setLoadEventENS_34LoadEventTriggeringReaderDetectionE
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController30AvailabilityDetectionScheduler19detectionTimerFiredEP16__CFRunLoopTimerPv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController30AvailabilityDetectionScheduler21detectAvailabilityNowEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController30AvailabilityDetectionScheduler22scheduleDetectionTimerEd
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController30AvailabilityDetectionScheduler24invalidateDetectionTimerEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController30AvailabilityDetectionScheduler24scheduleDelayedDetectionEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController30AvailabilityDetectionScheduler27cancelAvailabilityDetectionEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController30AvailabilityDetectionScheduler28detectAvailabilityAfterDelayEdNS_34LoadEventTriggeringReaderDetectionE
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController30AvailabilityDetectionScheduler9loadEventEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController30AvailabilityDetectionSchedulerC1EPS0_NS_34LoadEventTriggeringReaderDetectionEMS0_FvvERKNSt3__16vectorIdNS6_9allocatorIdEEEE
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController30AvailabilityDetectionSchedulerC2EPS0_NS_34LoadEventTriggeringReaderDetectionEMS0_FvvERKNSt3__16vectorIdNS6_9allocatorIdEEEE
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController30setCanRunAvailabilityDetectionEb
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController32extractTextSamplesForTranslationEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController35cancelPageMetadataAndTextExtractionEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController36extractPageMetadataAndTextTimerFiredEP16__CFRunLoopTimerPv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController38extractPageMetadataAndTextSoonIfNeededENS_25IsDeterminingAvailabilityE
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController41detectAvailabilityForUIProcessDrivenCheckEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController45detectAvailabilityAfterSameDocumentNavigationEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityControllerC2Ev
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityControllerD0Ev
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityControllerD1Ev
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityControllerD2Ev
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch13computeWeightEd
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch19hasMatchWithOptionsEP8NSStringS2_P31WBSURLCompletionUserTypedStringm
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch20computeMatchLocationEP8NSStringS2_P31WBSURLCompletionUserTypedStringR29WBSURLCompletionMatchLocation
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch20computeMatchLocationEPU36objcproto25WBSURLCompletionMatchData11objc_objectP31WBSURLCompletionUserTypedStringRmR29WBSURLCompletionMatchLocation
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch23computeURLMatchLocationEPU36objcproto25WBSURLCompletionMatchData11objc_objectP31WBSURLCompletionUserTypedStringRm
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch25computeTitleMatchLocationEPU36objcproto25WBSURLCompletionMatchData11objc_objectP31WBSURLCompletionUserTypedStringRm
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch37computeMatchLocationOfTitleUsingBlockEP31WBSURLCompletionUserTypedStringU13block_pointerF29WBSURLCompletionMatchLocationS2_E
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatchC1EPU36objcproto25WBSURLCompletionMatchData11objc_objectmd29WBSURLCompletionMatchLocationS3_m
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatchC2EPU36objcproto25WBSURLCompletionMatchData11objc_objectmd29WBSURLCompletionMatchLocationS3_m
|| __TEXT.__text __ZN12SafariShared35initializeURLCompletionOnMainThreadEv
|| __TEXT.__text __ZNK12SafariShared12DeletionPlan20findItemIDForVisitIDEx
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata15metadataForFormEP13OpaqueJSValue26WBSFormMetadataRequestType
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata17jsMetadataForFormEP13OpaqueJSValue26WBSFormMetadataRequestType
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata19getFormsAndMetadataE26WBSFormMetadataRequestTypeRP13OpaqueJSValueRPKS2_
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata19getFormsAndMetadataE26WBSFormMetadataRequestTypeRP13OpaqueJSValueRU15__autoreleasingP7NSArray
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata19metadataForAllFormsE26WBSFormMetadataRequestType
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata21lockedMetadataForFormEP13OpaqueJSValue
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata22currentMetadataForFormEP13OpaqueJSValue26WBSFormMetadataRequestType
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController11loadArticleEv
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController13reloadArticleEv
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController18canLoadFromNetworkEv
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController21cachedTopScrollOffsetEv
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController27preparePrintingMailingFrameEv
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController29maxDistanceForLoadingNextPageEv
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController29printingMailingFrameElementIdEv
|| __TEXT.__text __ZNK12SafariShared21URLCompletionEntryMap13lastVisitTimeEP8NSString
|| __TEXT.__text __ZNK12SafariShared21URLCompletionEntryMap21enumerateConcurrentlyEPU28objcproto17OS_dispatch_group8NSObjectPU28objcproto17OS_dispatch_queueS1_iU13block_pointerFvRKNS_18URLCompletionEntryEE
|| __TEXT.__text __ZNK12SafariShared21URLCompletionEntryMap29nextItemInRedirectChainOfItemEP8NSString
|| __TEXT.__text __ZNK12SafariShared21URLCompletionEntryMap33addURLCompletionMatchEntryToArrayEP39WBSHistoryServiceURLCompletionMatchDataP14NSMutableArrayIP40WBSHistoryServiceURLCompletionMatchEntryEP8NSStringd
|| __TEXT.__text __ZNK12SafariShared21URLCompletionEntryMap9enumerateEiiU13block_pointerFvRKNS_18URLCompletionEntryEE
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher10isEndStateERKNS0_3DFA5StateEPKt
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher12longestMatchEv
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher13checkForMatchEPKtS2_
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher13searchReverseEv
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher14isWordBoundaryEPKt
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher23findNextStateAndAdvanceERKNS0_3DFA5StateERPKt
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher6searchEPKtS2_
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher7toRangeERKNS0_5MatchE
|| __TEXT.__text __ZNK12SafariShared25ArticleFinderJSController13mainImageNodeEv
|| __TEXT.__text __ZNK12SafariShared25LatestVisitInformationMap11lastVisitIDEx
|| __TEXT.__text __ZNK12SafariShared25LatestVisitInformationMap13lastVisitTimeEx
|| __TEXT.__text __ZNK12SafariShared25LatestVisitInformationMap4findExPx
|| __TEXT.__text __ZNK12SafariShared25LatestVisitInformationMap4sizeEv
|| __TEXT.__text __ZNK12SafariShared25SuddenTerminationDisabler13isTaskInvalidEv
|| __TEXT.__text __ZNK12SafariShared25URLCompletionEntryBuilder10buildEntryEv
|| __TEXT.__text __ZNK12SafariShared25URLCompletionEntryBuilder11buildExtrasEv
|| __TEXT.__text __ZNK12SafariShared25URLCompletionEntryBuilder15buildCachedInfoEv
|| __TEXT.__text __ZNK12SafariShared25URLCompletionEntryBuilder15buildEntryInMapERN3WTF9HashTableINS_21URLCompletionEntryKeyENS_18URLCompletionEntryENS_30URLCompletionEntryKeyExtractorENS_22URLCompletionEntryHashENS_29URLCompletionEntryValueTraitsENS_27URLCompletionEntryKeyTraitsEEEb
|| __TEXT.__text __ZNK12SafariShared28ReaderAvailabilityController29canExtractPageMetadataAndTextEv
|| __TEXT.__text __ZNK12SafariShared28ReaderAvailabilityController33originalArticleFinderJSControllerEv
|| __TEXT.__text __ZNK12SafariShared28ReaderAvailabilityController38isPageLoadedEnoughForAvailabilityCheckEv
|| __TEXT.__text __ZNK12SafariShared28ReaderAvailabilityController38pageMetadataAndTextExtractionIsPendingEv
|| __TEXT.__text __ZNK12SafariShared28ReaderAvailabilityController50isPageLoadedEnoughForPageMetadataAndTextExtractionEv
|| __TEXT.__text __ZNK12SafariShared33BookmarkAndHistoryCompletionMatch17originalURLStringEv
|| __TEXT.__text __ZNK12SafariShared33BookmarkAndHistoryCompletionMatch20userVisibleURLStringEv
|| __TEXT.__text __ZNK12SafariShared33BookmarkAndHistoryCompletionMatch24placeholderForEmptyTitleEv
|| __TEXT.__text __ZNK12SafariShared33BookmarkAndHistoryCompletionMatch4dataEv
|| __TEXT.__text __ZNK12SafariShared33BookmarkAndHistoryCompletionMatch5titleEv
|| __TEXT.__text __ZNK12SafariShared33BookmarkAndHistoryCompletionMatch7compareEPS0_
|| __TEXT.__text _allocIMOneTimeCodeAcceleratorInstance
|| __TEXT.__text _allocPKVirtualCardInstance
|| __TEXT.__text _allocPKVirtualCardManagerInstance
|| __TEXT.__text _alloc_SWCTrackingDomainInfoInstance
|| __TEXT.__text _canLoadCCECCryptorBlind
|| __TEXT.__text _canLoadCCECCryptorBlindingKeysRelease
|| __TEXT.__text _canLoadCCECCryptorGenerateBlindingKeys
|| __TEXT.__text _canLoadCCECCryptorH2C
|| __TEXT.__text _canLoadCCECCryptorUnblind
|| __TEXT.__text _canLoadIMCore
|| __TEXT.__text _canLoadPassKitCore
|| __TEXT.__text _canLoadSharedWebCredentials
|| __TEXT.__text _getIMOneTimeCodeDisplayKey
|| __TEXT.__text _getIMOneTimeCodeDomainKey
|| __TEXT.__text _getIMOneTimeCodeGuidKey
|| __TEXT.__text _getIMOneTimeCodeHandleKey
|| __TEXT.__text _getIMOneTimeCodeKey
|| __TEXT.__text _getIMOneTimeCodeMachineReadableCodeKey
|| __TEXT.__text _getIMOneTimeCodeTimeStampKey
|| __TEXT.__text _titleForNewTabPosition
__ Accounts: _ACAccountStoreDidChangeNotification
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ CFNetwork: _NSURLProtectionSpaceHTTP
__ CFNetwork: _NSURLProtectionSpaceHTTPS
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLConnection
__ CFNetwork: _OBJC_CLASS_$_NSURLCredential
__ CFNetwork: _OBJC_CLASS_$_NSURLCredentialStorage
__ CFNetwork: _OBJC_CLASS_$_NSURLProtectionSpace
__ CFNetwork: _OBJC_CLASS_$_NSURLProtocol
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: __CFHostIsDomainTopLevel
__ CFNetwork: __CFNetworkSetOverrideSystemProxySettings
__ CFNetwork: __kCFStreamErrorCodeKey
__ CFNetwork: _kCFStreamPropertyHTTPProxyHost
__ CFNetwork: _kCFStreamPropertyHTTPProxyPort
__ CFNetwork: _kCFStreamPropertyHTTPSProxyHost
__ CFNetwork: _kCFStreamPropertyHTTPSProxyPort
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKErrorRetryAfterKey
__ CloudKit: _CKIdentityUpdateNotification
__ CloudKit: _CKOwnerDefaultName
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifySubscriptionsOperation
__ CloudKit: _OBJC_CLASS_$_CKNotification
__ CloudKit: _OBJC_CLASS_$_CKNotificationInfo
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneSubscription
__ CloudKit: _OBJC_CLASS_$_CKServerChangeToken
__ Contacts: _CNContactBirthdayKey
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactGivenNameKey
__ Contacts: _CNContactImageDataKey
__ Contacts: _CNContactInstantMessageAddressesKey
__ Contacts: _CNContactJobTitleKey
__ Contacts: _CNContactMiddleNameKey
__ Contacts: _CNContactOrganizationNameKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNContactPostalAddressesKey
__ Contacts: _CNContactThumbnailImageDataKey
__ Contacts: _CNContactUrlAddressesKey
__ Contacts: _CNInstantMessageAddressServiceKey
__ Contacts: _CNInstantMessageAddressUsernameKey
__ Contacts: _CNLabelHome
__ Contacts: _CNLabelOther
__ Contacts: _CNLabelPhoneNumberHomeFax
__ Contacts: _CNLabelPhoneNumberMain
__ Contacts: _CNLabelPhoneNumberMobile
__ Contacts: _CNLabelPhoneNumberOtherFax
__ Contacts: _CNLabelPhoneNumberPager
__ Contacts: _CNLabelPhoneNumberWorkFax
__ Contacts: _CNLabelPhoneNumberiPhone
__ Contacts: _CNLabelURLAddressHomePage
__ Contacts: _CNLabelWork
__ Contacts: _CNPostalAddressCityKey
__ Contacts: _CNPostalAddressCountryKey
__ Contacts: _CNPostalAddressISOCountryCodeKey
__ Contacts: _CNPostalAddressPostalCodeKey
__ Contacts: _CNPostalAddressStateKey
__ Contacts: _CNPostalAddressStreetKey
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNLabeledValue
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ Contacts: _OBJC_CLASS_$_CNPostalAddressFormatter
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFCharacterSetCreateMutable
__ CoreFoundation: _CFCharacterSetGetPredefined
__ CoreFoundation: _CFCharacterSetIsCharacterMember
__ CoreFoundation: _CFCharacterSetUnion
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFHash
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddTimer
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopTimerCreate
__ CoreFoundation: _CFRunLoopTimerInvalidate
__ CoreFoundation: _CFRunLoopTimerIsValid
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFStringCompareWithOptions
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFStringFindWithOptions
__ CoreFoundation: _CFStringFold
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetFastestEncoding
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringNormalize
__ CoreFoundation: _CFStringTokenizerCopyBestStringLanguage
__ CoreFoundation: _CFURLCopyPath
__ CoreFoundation: _CFURLCreateAbsoluteURLWithBytes
__ CoreFoundation: _CFURLCreateStringByAddingPercentEscapes
__ CoreFoundation: _CFURLCreateWithBytes
__ CoreFoundation: _CFURLGetByteRangeForComponent
__ CoreFoundation: _CFURLGetBytes
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSStreamDataWrittenToMemoryStreamKey
__ CoreFoundation: _NSSystemTimeZoneDidChangeNotification
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSBlock
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreParsec: _OBJC_CLASS_$_PAREngagedCompletionCache
__ CorePhoneNumbers: _PNCreateFormattedStringWithCountry
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreText: _CTFontDescriptorCopyLocalizedAttribute
__ CoreText: _CTFontDescriptorCreateMatchingFontDescriptor
__ CoreText: _CTFontDescriptorCreateWithAttributes
__ CoreText: _CTFontDescriptorMatchFontDescriptorsWithProgressHandler
__ CoreText: _kCTFontDescriptorMatchingPercentage
__ CoreText: _kCTFontEnabledAttribute
__ CoreText: _kCTFontFamilyNameAttribute
__ CoreText: _kCTFontRegistrationScopeAttribute
__ DeviceManagement: _OBJC_CLASS_$_DMFWebsitePolicyMonitor
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileModificationDate
__ Foundation: _NSInconsistentArchiveException
__ Foundation: _NSIntersectionRange
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLinguisticTagSchemeLanguage
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFormatter
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLinguisticTagger
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUbiquitousKeyValueStore
__ Foundation: _OBJC_CLASS_$_NSValueTransformer
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSFormatter
__ Foundation: _OBJC_METACLASS_$_NSValueTransformer
__ JavaScriptCore: _JSClassCreate
__ JavaScriptCore: _JSContextGetGlobalContext
__ JavaScriptCore: _JSContextGetGlobalObject
__ JavaScriptCore: _JSContextGetGroup
__ JavaScriptCore: _JSEvaluateScript
__ JavaScriptCore: _JSGlobalContextRelease
__ JavaScriptCore: _JSGlobalContextRetain
__ JavaScriptCore: _JSObjectCallAsFunction
__ JavaScriptCore: _JSObjectDeleteProperty
__ JavaScriptCore: _JSObjectGetPrivate
__ JavaScriptCore: _JSObjectGetProperty
__ JavaScriptCore: _JSObjectGetPropertyAtIndex
__ JavaScriptCore: _JSObjectHasProperty
__ JavaScriptCore: _JSObjectIsFunction
__ JavaScriptCore: _JSObjectMake
__ JavaScriptCore: _JSObjectMakeArray
__ JavaScriptCore: _JSObjectSetPrivate
__ JavaScriptCore: _JSObjectSetProperty
__ JavaScriptCore: _JSScriptCreateReferencingImmortalASCIIText
__ JavaScriptCore: _JSScriptEvaluate
__ JavaScriptCore: _JSStringCopyCFString
__ JavaScriptCore: _JSStringCreateWithCFString
__ JavaScriptCore: _JSStringCreateWithCharacters
__ JavaScriptCore: _JSStringCreateWithUTF8CString
__ JavaScriptCore: _JSStringGetCharactersPtr
__ JavaScriptCore: _JSStringGetLength
__ JavaScriptCore: _JSStringRelease
__ JavaScriptCore: _JSValueIsArray
__ JavaScriptCore: _JSValueIsBoolean
__ JavaScriptCore: _JSValueIsNull
__ JavaScriptCore: _JSValueIsObject
__ JavaScriptCore: _JSValueIsString
__ JavaScriptCore: _JSValueIsUndefined
__ JavaScriptCore: _JSValueMakeBoolean
__ JavaScriptCore: _JSValueMakeNull
__ JavaScriptCore: _JSValueMakeNumber
__ JavaScriptCore: _JSValueMakeString
__ JavaScriptCore: _JSValueMakeUndefined
__ JavaScriptCore: _JSValueProtect
__ JavaScriptCore: _JSValueToBoolean
__ JavaScriptCore: _JSValueToNumber
__ JavaScriptCore: _JSValueToObject
__ JavaScriptCore: _JSValueToStringCopy
__ JavaScriptCore: _JSValueUnprotect
__ JavaScriptCore: _OBJC_CLASS_$_JSContext
__ JavaScriptCore: _OBJC_CLASS_$_JSManagedValue
__ JavaScriptCore: _OBJC_CLASS_$_JSValue
__ JavaScriptCore: _WTFLogAlways
__ JavaScriptCore: __ZN3WTF10fastMallocEm
__ JavaScriptCore: __ZN3WTF11URLWithDataEP6NSDataP5NSURL
__ JavaScriptCore: __ZN3WTF11fastReallocEPvm
__ JavaScriptCore: __ZN3WTF14decodeHostNameEP8NSString
__ JavaScriptCore: __ZN3WTF15originalURLDataEP5NSURL
__ JavaScriptCore: __ZN3WTF16fastZeroedMallocEm
__ JavaScriptCore: __ZN3WTF16isUserVisibleURLEP8NSString
__ JavaScriptCore: __ZN3WTF17userVisibleStringEP5NSURL
__ JavaScriptCore: __ZN3WTF18asciiCaseFoldTableE
__ JavaScriptCore: __ZN3WTF20initializeMainThreadEv
__ JavaScriptCore: __ZN3WTF22URLWithUserTypedStringEP8NSStringP5NSURL
__ JavaScriptCore: __ZN3WTF8fastFreeEPv
__ Lexicon: _LXEntryCopyString
__ Lexicon: _LXEntryGetMetaFlags
__ Lexicon: _LXEntryGetProbability
__ Lexicon: _LXLexiconCreate
__ Lexicon: _LXLexiconEnumerateEntriesForString
__ Lexicon: _kLXLexiconLocaleKey
__ ManagedConfiguration: _MCFeatureUntrustedTLSPromptAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ ProtectedCloudStorage: _PCSFPAddPublicIdentity
__ ProtectedCloudStorage: _PCSFPCopyDecryptedData
__ ProtectedCloudStorage: _PCSFPCopyEncryptedData
__ ProtectedCloudStorage: _PCSFPCopyExported
__ ProtectedCloudStorage: _PCSFPShouldRoll
__ ProtectedCloudStorage: _PCSIdentitySetCopyCurrentPublicIdentityWithError
__ ProtectedCloudStorage: _PCSIdentitySetCreate
__ ProtectedCloudStorage: _PCSIdentitySetIsICDP
__ ProtectedCloudStorage: _PCSObjectCreateFromExportedWithIdentities
__ ProtectedCloudStorage: _PCSShareProtectionCreate
__ ProtectedCloudStorage: _kPCSServiceLiverpool
__ ProtectedCloudStorage: _kPCSSetupDSID
__ SafariCore: _OBJC_CLASS_$_WBSAddressBookValueSpecifier
__ SafariCore: _OBJC_CLASS_$_WBSAnalyticsLogger
__ SafariCore: _OBJC_CLASS_$_WBSAutoFillQuirksManager
__ SafariCore: _OBJC_CLASS_$_WBSCloudKitContainerManateeObserver
__ SafariCore: _OBJC_CLASS_$_WBSCloudKitThrottler
__ SafariCore: _OBJC_CLASS_$_WBSConfigurationDataTransformer
__ SafariCore: _OBJC_CLASS_$_WBSDontSaveMarker
__ SafariCore: _OBJC_CLASS_$_WBSKeychainCredentialNotificationMonitor
__ SafariCore: _OBJC_CLASS_$_WBSMemoryFootprint
__ SafariCore: _OBJC_CLASS_$_WBSPair
__ SafariCore: _OBJC_CLASS_$_WBSPasswordGenerationManager
__ SafariCore: _OBJC_CLASS_$_WBSPasswordManagerURL
__ SafariCore: _OBJC_CLASS_$_WBSPasswordRuleParser
__ SafariCore: _OBJC_CLASS_$_WBSRemotePlistController
__ SafariCore: _OBJC_CLASS_$_WBSSQLiteDatabase
__ SafariCore: _OBJC_CLASS_$_WBSSQLiteStatement
__ SafariCore: _OBJC_CLASS_$_WBSSQLiteStatementCache
__ SafariCore: _OBJC_CLASS_$_WBSSafariBookmarksSyncAgentProxy
__ SafariCore: _OBJC_CLASS_$_WBSSavedPasswordAuditor
__ SafariCore: _OBJC_CLASS_$_WBSSavedPasswordStore
__ SafariCore: _OBJC_CLASS_$_WBSScopeExitHandler
__ SafariCore: _OBJC_CLASS_$_WBSURLCredentialCache
__ SafariCore: _OBJC_METACLASS_$_WBSConfigurationDataTransformer
__ SafariCore: _WBSABAddressProperty
__ SafariCore: _WBSABBirthdayProperty
__ SafariCore: _WBSABEmailProperty
__ SafariCore: _WBSABInstantMessageProperty
__ SafariCore: _WBSABOrganizationProperty
__ SafariCore: _WBSABPhoneProperty
__ SafariCore: _WBSABPropertyFirstName
__ SafariCore: _WBSABPropertyLastName
__ SafariCore: _WBSABPropertyMiddleName
__ SafariCore: _WBSABProxyPropertyFullName
__ SafariCore: _WBSIsEqual
__ SafariCore: _WBSKeychainCredentialNotificationMonitorDoNotCoalesceInterval
__ SafariCore: _WBSLogWithDifferentialPrivacy
__ SafariCore: _WBSPasswordManagerURLChangePasswordDomainKey
__ SafariCore: _WBSPasswordManagerURLChangePasswordUserKey
__ SafariCore: _WBSPasswordManagerURLFalse
__ SafariCore: _WBSPasswordManagerURLShowChangePasswordController
__ SafariCore: _WBSRemoteAutoFillQuirksLastUpdateTimePreferenceKey
__ SafariCore: _WBSSafariBookmarksSyncAgentProxyConnectionWasInvalidatedNotification
__ SafariCore: _WBSSuppressCloudKitBookmarkMigrationForCyclerTestPreferenceKey
__ SafariCore: __WBSLocalizedString
__ SafariCore: _safariMobileApplicationBundleIdentifier
__ ScreenTimeCore: _OBJC_CLASS_$_STWebUsageController
__ SearchFoundation: _OBJC_CLASS_$_SFPunchout
__ SearchFoundation: _OBJC_CLASS_$_SFSearchResult
__ Security: _SecCertificateIsValid
__ Security: _SecCertificateNotValidAfter
__ Security: _SecCertificateNotValidBefore
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecRandomCopyBytes
__ Security: _SecTrustGetTrustResult
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccount
__ Security: _kSecAttrAuthenticationType
__ Security: _kSecAttrAuthenticationTypeHTMLForm
__ Security: _kSecAttrComment
__ Security: _kSecAttrIsInvisible
__ Security: _kSecAttrLabel
__ Security: _kSecAttrModificationDate
__ Security: _kSecAttrService
__ Security: _kSecAttrSynchronizable
__ Security: _kSecAttrSynchronizableAny
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecClassInternetPassword
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecMatchLimitOne
__ Security: _kSecRandomDefault
__ Security: _kSecReturnAttributes
__ Security: _kSecReturnData
__ Security: _kSecReturnPersistentRef
__ Security: _kSecUseDataProtectionKeychain
__ Security: _kSecValueData
__ Security: _kSecValuePersistentRef
__ SymptomDiagnosticReporter: _OBJC_CLASS_$_SDRDiagnosticReporter
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignatureSubTypeContext
__ SymptomDiagnosticReporter: _kSymptomDiagnosticTypeFunctional
__ SymptomDiagnosticReporter: _kSymptomDiagnosticTypePerformance
__ UsageTracking: _OBJC_CLASS_$_USWebpageUsage
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logger_create_static
__ libCTGreenTeaLogger.dylib: _getCTGreenTeaOsLogHandle
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: _CCCrypt
__ libSystem.B.dylib: _CCECCryptorExportKey
__ libSystem.B.dylib: _CCECCryptorImportKey
__ libSystem.B.dylib: _CCECCryptorRelease
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _CC_SHA512_Final
__ libSystem.B.dylib: _CC_SHA512_Init
__ libSystem.B.dylib: _CC_SHA512_Update
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_activity_initiate
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _bsearch_b
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _ccscrypt_storage_size
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _connect
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_block_cancel
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_block_testcancel
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_queue_get_qos_class
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_source_testcancel
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _drand48
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _flock
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeaddrinfo
__ libSystem.B.dylib: _getaddrinfo
__ libSystem.B.dylib: _inet_pton
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _logf
__ libSystem.B.dylib: _lrand48
__ libSystem.B.dylib: _lstat
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_allows_internal_security_policies
__ libSystem.B.dylib: _pipe
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _pthread_getspecific
__ libSystem.B.dylib: _pthread_key_create
__ libSystem.B.dylib: _pthread_setspecific
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _setenv
__ libSystem.B.dylib: _sigaction
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _srand48
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncasecmp
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _write
__ libSystem.B.dylib: _xpc_transaction_begin
__ libSystem.B.dylib: _xpc_transaction_end
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEx
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16chrono12steady_clock3nowEv
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__19to_stringEx
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___gxx_personality_v0
__ libicucore.A.dylib: _u_foldCase
__ libicucore.A.dylib: _u_memcasecmp
__ libicucore.A.dylib: _u_strToLower
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getInstanceVariable
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_setIvar
__ libsqlite3.dylib: _sqlite3_aggregate_context
__ libsqlite3.dylib: _sqlite3_bind_blob64
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_create_function_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_result_blob
__ libsqlite3.dylib: _sqlite3_result_double
__ libsqlite3.dylib: _sqlite3_result_error_nomem
__ libsqlite3.dylib: _sqlite3_result_int64
__ libsqlite3.dylib: _sqlite3_result_null
__ libsqlite3.dylib: _sqlite3_result_text
__ libsqlite3.dylib: _sqlite3_step
__ libsqlite3.dylib: _sqlite3_user_data
__ libsqlite3.dylib: _sqlite3_value_blob
__ libsqlite3.dylib: _sqlite3_value_bytes
__ libsqlite3.dylib: _sqlite3_value_double
__ libsqlite3.dylib: _sqlite3_value_int
__ libsqlite3.dylib: _sqlite3_value_int64
__ libsqlite3.dylib: _sqlite3_value_text
__ libsqlite3.dylib: _sqlite3_value_type
WBSAutoplayQuirkWhitelistManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSAutoplayQuirkWhitelistManager init]
  -[WBSAutoplayQuirkWhitelistManager .cxx_destruct]
  -[WBSAutoplayQuirkWhitelistManager prepareForTermination]
  -[WBSAutoplayQuirkWhitelistManager initWithBuiltInWhitelistURL:downloadsDirectoryURL:resourceName:resourceVersion:updateDateDefaultsKey:updateInterval:]
  -[WBSAutoplayQuirkWhitelistManager quirksForDomain:completionHandler:]


WBSPasswordBreachConfigurationBagSnapshotTransformer : WBSConfigurationDataTransformer /System/Library/PrivateFrameworks/Lexicon.framework/Lexicon
  // instance methods
  -[WBSPasswordBreachConfigurationBagSnapshotTransformer objectFromData:]


WBSFormControlMetadataProperty : NSObject /usr/lib/libc++.1.dylib

WBSFormControlMetadata : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  NSString *addressBookLabel
 @property  NSDictionary *annotations
 @property  NSArray *autocompleteTokens
 @property  NSString *associatedUsername
 @property  NSString *passwordRules
 @property  NSString *fieldClass
 @property  NSString *fieldID
 @property  NSString *fieldName
 @property  NSString *tagName
 @property  NSString *uniqueID
 @property  NSString *nextControlUniqueID
 @property  NSString *placeholder
 @property  NSString *value
 @property  BOOL visible
 @property  BOOL active
 @property  BOOL disabled
 @property  BOOL readOnly
 @property  BOOL textField
 @property  BOOL secureTextField
 @property  BOOL autoFilledTextField
 @property  BOOL userEditedTextField
 @property  BOOL labeledUsernameField
 @property  BOOL disallowsAutocomplete
 @property  BOOL claimsToBeCurrentPasswordViaAutocompleteAttribute
 @property  BOOL claimsToBeNewPasswordViaAutocompleteAttribute
 @property  BOOL claimsToBeUsernameViaAutocompleteAttribute
 @property  BOOL looksLikeCreditCardCardholderField
 @property  BOOL looksLikeCreditCardCompositeExpirationDateField
 @property  BOOL looksLikeCreditCardNumberField
 @property  BOOL looksLikeCreditCardSecurityCodeField
 @property  BOOL looksLikeCreditCardTypeField
 @property  BOOL looksLikeDayField
 @property  BOOL looksLikeMonthField
 @property  BOOL looksLikeYearField
 @property  BOOL looksLikeOneTimeCodeField
 @property  BOOL looksLikeIgnoredDataTypeField
 @property  BOOL looksLikePasswordCredentialField
 @property  NSDictionary *radioButtonInfo
 @property  NSArray *selectElementInfo
 @property  double rectLeft
 @property  double rectTop
 @property  double rectWidth
 @property  double rectHeight
 @property  unsigned long size
 @property  unsigned long maxLength
 @property  unsigned long minLength
 @property  unsigned long selectionStart
 @property  unsigned long selectionLength
 @property  long long autoFillButtonType
 @property  long long lastAutoFillButtonType
 @property  NSArray *ancestorFrameURLs
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[WBSFormControlMetadata supportsSecureCoding]

  // instance methods
  -[WBSFormControlMetadata isReadOnly]
  -[WBSFormControlMetadata copyWithZone:]
  -[WBSFormControlMetadata isDisabled]
  -[WBSFormControlMetadata placeholder]
  -[WBSFormControlMetadata fieldName]
  -[WBSFormControlMetadata isVisible]
  -[WBSFormControlMetadata annotations]
  -[WBSFormControlMetadata claimsToBeUsernameViaAutocompleteAttribute]
  -[WBSFormControlMetadata looksLikeCreditCardCompositeExpirationDateField]
  -[WBSFormControlMetadata looksLikeCreditCardNumberField]
  -[WBSFormControlMetadata looksLikeCreditCardSecurityCodeField]
  -[WBSFormControlMetadata looksLikeCreditCardTypeField]
  -[WBSFormControlMetadata looksLikeDayField]
  -[WBSFormControlMetadata looksLikeMonthField]
  -[WBSFormControlMetadata looksLikeYearField]
  -[WBSFormControlMetadata init]
  -[WBSFormControlMetadata tagName]
  -[WBSFormControlMetadata looksLikeIgnoredDataTypeField]
  -[WBSFormControlMetadata looksLikePasswordCredentialField]
  -[WBSFormControlMetadata looksLikeOneTimeCodeField]
  -[WBSFormControlMetadata isSecureTextField]
  -[WBSFormControlMetadata isAutoFilledTextField]
  -[WBSFormControlMetadata isUserEditedTextField]
  -[WBSFormControlMetadata isLabeledUsernameField]
  -[WBSFormControlMetadata selectionStart]
  -[WBSFormControlMetadata selectionLength]
  -[WBSFormControlMetadata autoFillButtonType]
  -[WBSFormControlMetadata lastAutoFillButtonType]
  -[WBSFormControlMetadata fieldID]
  -[WBSFormControlMetadata rectWidth]
  -[WBSFormControlMetadata rectTop]
  -[WBSFormControlMetadata size]
  -[WBSFormControlMetadata addressBookLabel]
  -[WBSFormControlMetadata autocompleteTokens]
  -[WBSFormControlMetadata associatedUsername]
  -[WBSFormControlMetadata nextControlUniqueID]
  -[WBSFormControlMetadata radioButtonInfo]
  -[WBSFormControlMetadata selectElementInfo]
  -[WBSFormControlMetadata ancestorFrameURLs]
  -[WBSFormControlMetadata .cxx_destruct]
  -[WBSFormControlMetadata initWithMetadata:]
  -[WBSFormControlMetadata fieldClass]
  -[WBSFormControlMetadata encodeWithCoder:]
  -[WBSFormControlMetadata uniqueID]
  -[WBSFormControlMetadata rectLeft]
  -[WBSFormControlMetadata rectHeight]
  -[WBSFormControlMetadata initWithDictionary:]
  -[WBSFormControlMetadata isActive]
  -[WBSFormControlMetadata isTextField]
  -[WBSFormControlMetadata maxLength]
  -[WBSFormControlMetadata passwordRules]
  -[WBSFormControlMetadata isEqual:]
  -[WBSFormControlMetadata value]
  -[WBSFormControlMetadata minLength]
  -[WBSFormControlMetadata dictionaryRepresentation]
  -[WBSFormControlMetadata mutableCopyWithZone:]
  -[WBSFormControlMetadata initWithCoder:]
  -[WBSFormControlMetadata disallowsAutocomplete]
  -[WBSFormControlMetadata claimsToBeCurrentPasswordViaAutocompleteAttribute]
  -[WBSFormControlMetadata claimsToBeNewPasswordViaAutocompleteAttribute]
  -[WBSFormControlMetadata looksLikeCreditCardCardholderField]


WBSMutableFormControlMetadata : WBSFormControlMetadata
 @property  NSString *addressBookLabel
 @property  NSDictionary *annotations
 @property  NSArray *autocompleteTokens
 @property  NSString *associatedUsername
 @property  NSString *passwordRules
 @property  NSString *fieldClass
 @property  NSString *fieldID
 @property  NSString *fieldName
 @property  NSString *tagName
 @property  NSString *uniqueID
 @property  NSString *nextControlUniqueID
 @property  NSString *value
 @property  BOOL visible
 @property  BOOL active
 @property  BOOL disabled
 @property  BOOL readOnly
 @property  BOOL textField
 @property  BOOL secureTextField
 @property  BOOL autoFilledTextField
 @property  BOOL userEditedTextField
 @property  BOOL labeledUsernameField
 @property  BOOL disallowsAutocomplete
 @property  BOOL claimsToBeCurrentPasswordViaAutocompleteAttribute
 @property  BOOL claimsToBeNewPasswordViaAutocompleteAttribute
 @property  BOOL claimsToBeUsernameViaAutocompleteAttribute
 @property  BOOL looksLikeCreditCardCardholderField
 @property  BOOL looksLikeCreditCardCompositeExpirationDateField
 @property  BOOL looksLikeCreditCardNumberField
 @property  BOOL looksLikeCreditCardSecurityCodeField
 @property  BOOL looksLikeCreditCardTypeField
 @property  BOOL looksLikeDayField
 @property  BOOL looksLikeMonthField
 @property  BOOL looksLikeYearField
 @property  BOOL looksLikeOneTimeCodeField
 @property  BOOL looksLikeIgnoredDataTypeField
 @property  BOOL looksLikePasswordCredentialField
 @property  NSDictionary *radioButtonInfo
 @property  NSArray *selectElementInfo
 @property  double rectLeft
 @property  double rectTop
 @property  double rectWidth
 @property  double rectHeight
 @property  unsigned long size
 @property  unsigned long maxLength
 @property  unsigned long minLength
 @property  unsigned long selectionStart
 @property  unsigned long selectionLength
 @property  long long autoFillButtonType
 @property  long long lastAutoFillButtonType
 @property  NSArray *ancestorFrameURLs

  // instance methods
  -[WBSMutableFormControlMetadata setReadOnly:]
  -[WBSMutableFormControlMetadata setVisible:]
  -[WBSMutableFormControlMetadata setDisabled:]
  -[WBSMutableFormControlMetadata setAnnotations:]
  -[WBSMutableFormControlMetadata setSecureTextField:]
  -[WBSMutableFormControlMetadata setAutoFilledTextField:]
  -[WBSMutableFormControlMetadata setUserEditedTextField:]
  -[WBSMutableFormControlMetadata setLabeledUsernameField:]
  -[WBSMutableFormControlMetadata setDisallowsAutocomplete:]
  -[WBSMutableFormControlMetadata setLooksLikeCreditCardTypeField:]
  -[WBSMutableFormControlMetadata setTextField:]
  -[WBSMutableFormControlMetadata setMinLength:]
  -[WBSMutableFormControlMetadata setUniqueID:]
  -[WBSMutableFormControlMetadata setPlaceholder:]
  -[WBSMutableFormControlMetadata setActive:]
  -[WBSMutableFormControlMetadata setFieldID:]
  -[WBSMutableFormControlMetadata setClaimsToBeCurrentPasswordViaAutocompleteAttribute:]
  -[WBSMutableFormControlMetadata setClaimsToBeNewPasswordViaAutocompleteAttribute:]
  -[WBSMutableFormControlMetadata setClaimsToBeUsernameViaAutocompleteAttribute:]
  -[WBSMutableFormControlMetadata setLooksLikeCreditCardCardholderField:]
  -[WBSMutableFormControlMetadata setLooksLikeCreditCardCompositeExpirationDateField:]
  -[WBSMutableFormControlMetadata setLooksLikeCreditCardNumberField:]
  -[WBSMutableFormControlMetadata setLooksLikeCreditCardSecurityCodeField:]
  -[WBSMutableFormControlMetadata setLooksLikeDayField:]
  -[WBSMutableFormControlMetadata setLooksLikeMonthField:]
  -[WBSMutableFormControlMetadata setLooksLikeYearField:]
  -[WBSMutableFormControlMetadata setLooksLikeIgnoredDataTypeField:]
  -[WBSMutableFormControlMetadata setLooksLikePasswordCredentialField:]
  -[WBSMutableFormControlMetadata setLooksLikeOneTimeCodeField:]
  -[WBSMutableFormControlMetadata setAddressBookLabel:]
  -[WBSMutableFormControlMetadata setassociatedUsername:]
  -[WBSMutableFormControlMetadata setFieldClass:]
  -[WBSMutableFormControlMetadata setTagName:]
  -[WBSMutableFormControlMetadata setNextControlUniqueID:]
  -[WBSMutableFormControlMetadata setRectLeft:]
  -[WBSMutableFormControlMetadata setRectTop:]
  -[WBSMutableFormControlMetadata setRectWidth:]
  -[WBSMutableFormControlMetadata setRectHeight:]
  -[WBSMutableFormControlMetadata setSelectionStart:]
  -[WBSMutableFormControlMetadata setSelectionLength:]
  -[WBSMutableFormControlMetadata setAutoFillButtonType:]
  -[WBSMutableFormControlMetadata setLastAutoFillButtonType:]
  -[WBSMutableFormControlMetadata setRadioButtonInfo:]
  -[WBSMutableFormControlMetadata setAutocompleteTokens:]
  -[WBSMutableFormControlMetadata setSelectElementInfo:]
  -[WBSMutableFormControlMetadata setAncestorFrameURLs:]
  -[WBSMutableFormControlMetadata setValue:]
  -[WBSMutableFormControlMetadata setSize:]
  -[WBSMutableFormControlMetadata setPasswordRules:]
  -[WBSMutableFormControlMetadata setFieldName:]
  -[WBSMutableFormControlMetadata setMaxLength:]


WBSAddressBookMatch : WBSFormAutoFillItem
 @property  NSString *stringValue
 @property  NSDate *dateValue
 @property  NSString *property
 @property  NSString *key
 @property  NSString *identifier
 @property  NSString *label
 @property  NSDictionary *dictionaryRepresentation
 @property  NSString *uniqueID

  // class methods
  +[WBSAddressBookMatch addressBookMatchWithDictionaryRepresentation:]

  // instance methods
  -[WBSAddressBookMatch setStringValue:]
  -[WBSAddressBookMatch completion]
  -[WBSAddressBookMatch .cxx_destruct]
  -[WBSAddressBookMatch dateValue]
  -[WBSAddressBookMatch label]
  -[WBSAddressBookMatch property]
  -[WBSAddressBookMatch identifier]
  -[WBSAddressBookMatch uniqueID]
  -[WBSAddressBookMatch setProperty:]
  -[WBSAddressBookMatch key]
  -[WBSAddressBookMatch _setValue:]
  -[WBSAddressBookMatch setDateValue:]
  -[WBSAddressBookMatch initWithValue:property:key:identifier:label:]
  -[WBSAddressBookMatch initWithValue:property:key:identifier:label:uniqueID:]
  -[WBSAddressBookMatch initWithValue:property:key:identifier:]
  -[WBSAddressBookMatch isEqual:]
  -[WBSAddressBookMatch dictionaryRepresentation]
  -[WBSAddressBookMatch stringValue]


WBSHistoryServiceURLCompletion : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSHistoryServiceURLCompletion computeFrequentlyVisitedSites:minimalVisitCountScore:disallowList:allowList:options:currentTime:completionHandler:]
  -[WBSHistoryServiceURLCompletion _warmUpWithDatabase:]
  -[WBSHistoryServiceURLCompletion recordVisit:sourceVisit:title:loadSuccessful:visitWasFromThisDevice:increaseVisitCount:score:]
  -[WBSHistoryServiceURLCompletion init]
  -[WBSHistoryServiceURLCompletion lastVisitTimeForURLString:]
  -[WBSHistoryServiceURLCompletion .cxx_construct]
  -[WBSHistoryServiceURLCompletion .cxx_destruct]
  -[WBSHistoryServiceURLCompletion noteRedirectFromURLString:toURLString:]
  -[WBSHistoryServiceURLCompletion removeURLStrings:]
  -[WBSHistoryServiceURLCompletion warmUpWithDatabase:]
  -[WBSHistoryServiceURLCompletion _endOfRedirectChain:]
  -[WBSHistoryServiceURLCompletion updateVisit:oldScore:newScore:completionHandler:]
  -[WBSHistoryServiceURLCompletion updateItemWithLatestVisit:database:]
  -[WBSHistoryServiceURLCompletion updateVisit:title:]
  -[WBSHistoryServiceURLCompletion queryVisitCounts:outVisitCountScore:outDailyVisitCounts:outWeeklyVisitCounts:]
  -[WBSHistoryServiceURLCompletion updateURLString:autocompleteTriggerData:]
  -[WBSHistoryServiceURLCompletion searchForUserTypedString:options:currentTime:enumerationGroup:enumerationBlock:]


WBSHistoryUniversalPredicate : NSObject /usr/lib/libc++.1.dylib <WBSHistoryVisitPredicate, WBSHistoryTombstonePredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistoryUniversalPredicate supportsSecureCoding]

  // instance methods
  -[WBSHistoryUniversalPredicate statementForDatabase:cache:fetchOptions:error:]
  -[WBSHistoryUniversalPredicate evaluateVisit:]
  -[WBSHistoryUniversalPredicate evaluateTombstone:]
  -[WBSHistoryUniversalPredicate evaluateServiceVisit:]
  -[WBSHistoryUniversalPredicate encodeWithCoder:]
  -[WBSHistoryUniversalPredicate evaluateServiceTombstone:]
  -[WBSHistoryUniversalPredicate initWithCoder:]


WBSBookmarkAndHistoryCompletionMatch : WBSURLCompletionMatch
 @property  <WBSURLCompletionMatchData> *data
 @property  float weight

  // instance methods
  -[WBSBookmarkAndHistoryCompletionMatch weight]
  -[WBSBookmarkAndHistoryCompletionMatch .cxx_construct]
  -[WBSBookmarkAndHistoryCompletionMatch .cxx_destruct]
  -[WBSBookmarkAndHistoryCompletionMatch userVisibleURLString]
  -[WBSBookmarkAndHistoryCompletionMatch data]
  -[WBSBookmarkAndHistoryCompletionMatch title]
  -[WBSBookmarkAndHistoryCompletionMatch initWithBookmarkAndHistoryCompletionMatch:userInput:forQueryID:]
  -[WBSBookmarkAndHistoryCompletionMatch parsecDomainIdentifier]
  -[WBSBookmarkAndHistoryCompletionMatch originalURLString]


WBSCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSCache init]
  -[WBSCache removeObjectForKey:]
  -[WBSCache .cxx_destruct]
  -[WBSCache removeAllObjects]
  -[WBSCache setObject:forKey:]
  -[WBSCache objectForKey:]
  -[WBSCache _recacheObjectForKey:]


WBSPasswordBreachStore : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *queuedPasswordBagManagerState
 @property  NSArray *resultRecords
 @property  NSArray *recentlyBreachedPersistentIdentifiers
 @property  unsigned long rampIdentifier
 @property  NSDate *lastSessionCompletionDate

  // instance methods
  -[WBSPasswordBreachStore .cxx_destruct]
  -[WBSPasswordBreachStore setResultRecords:]
  -[WBSPasswordBreachStore resultRecords]
  -[WBSPasswordBreachStore initWithBackingStoreURL:]
  -[WBSPasswordBreachStore saveStoreSynchronously]
  -[WBSPasswordBreachStore saveAndCloseStoreSynchronously]
  -[WBSPasswordBreachStore queuedPasswordBagManagerState]
  -[WBSPasswordBreachStore setQueuedPasswordBagManagerState:]
  -[WBSPasswordBreachStore recentlyBreachedPersistentIdentifiers]
  -[WBSPasswordBreachStore setRecentlyBreachedPersistentIdentifiers:]
  -[WBSPasswordBreachStore rampIdentifier]
  -[WBSPasswordBreachStore setRampIdentifier:]
  -[WBSPasswordBreachStore lastSessionCompletionDate]
  -[WBSPasswordBreachStore setLastSessionCompletionDate:]


WBSCleanupHandler : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSCleanupHandler initWithBlock:]
  -[WBSCleanupHandler dealloc]
  -[WBSCleanupHandler .cxx_destruct]
  -[WBSCleanupHandler invalidate]


WBSPasswordBreachConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *highFrequencyBucketHashSalt
 @property  NSString *lowFrequencyBucketHashSalt
 @property  unsigned long highFrequencyBucketHashWorkFactor
 @property  unsigned long lowFrequencyBucketHashWorkFactor
 @property  unsigned long highFrequencyBucketScryptBlockSizeR
 @property  unsigned long lowFrequencyBucketScryptBlockSizeR
 @property  unsigned long highFrequencyBucketScryptParallelismFactorP
 @property  unsigned long lowFrequencyBucketScryptParallelismFactorP
 @property  unsigned long lowFrequencyBucketIdentifierBitCount
 @property  NSURL *highFrequencyBucketURL
 @property  NSURL *lowFrequencyBucketURL
 @property  NSURLSessionConfiguration *urlSessionConfiguration
 @property  double minimumDelayBetweenSessions
 @property  unsigned long passwordCheckBatchSize
 @property  unsigned long numberOfBatchesPerSession
 @property  unsigned long fakePasswordLengthBytes
 @property  unsigned long lowFrequencyBucketFetchTimeout
 @property  BOOL shouldRefillBagWhenEmpty
 @property  BOOL verboseSensitiveLoggingEnabled

  // class methods
  +[WBSPasswordBreachConfiguration standardConfiguration]

  // instance methods
  -[WBSPasswordBreachConfiguration copyWithZone:]
  -[WBSPasswordBreachConfiguration .cxx_destruct]
  -[WBSPasswordBreachConfiguration initWithDictionary:]
  -[WBSPasswordBreachConfiguration initWithDictionary:protocolClasses:allowValuesForTesting:]
  -[WBSPasswordBreachConfiguration shouldRefillBagWhenEmpty]
  -[WBSPasswordBreachConfiguration isVerboseSensitiveLoggingEnabled]
  -[WBSPasswordBreachConfiguration highFrequencyBucketHashSalt]
  -[WBSPasswordBreachConfiguration lowFrequencyBucketHashSalt]
  -[WBSPasswordBreachConfiguration highFrequencyBucketHashWorkFactor]
  -[WBSPasswordBreachConfiguration lowFrequencyBucketHashWorkFactor]
  -[WBSPasswordBreachConfiguration highFrequencyBucketScryptBlockSizeR]
  -[WBSPasswordBreachConfiguration lowFrequencyBucketScryptBlockSizeR]
  -[WBSPasswordBreachConfiguration highFrequencyBucketScryptParallelismFactorP]
  -[WBSPasswordBreachConfiguration lowFrequencyBucketScryptParallelismFactorP]
  -[WBSPasswordBreachConfiguration lowFrequencyBucketIdentifierBitCount]
  -[WBSPasswordBreachConfiguration highFrequencyBucketURL]
  -[WBSPasswordBreachConfiguration lowFrequencyBucketURL]
  -[WBSPasswordBreachConfiguration urlSessionConfiguration]
  -[WBSPasswordBreachConfiguration minimumDelayBetweenSessions]
  -[WBSPasswordBreachConfiguration passwordCheckBatchSize]
  -[WBSPasswordBreachConfiguration numberOfBatchesPerSession]
  -[WBSPasswordBreachConfiguration fakePasswordLengthBytes]
  -[WBSPasswordBreachConfiguration lowFrequencyBucketFetchTimeout]
  -[WBSPasswordBreachConfiguration verboseSensitiveLoggingEnabled]


WBSCloudBookmarksMigrationCoordinator : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSCloudBookmarksMigrationCoordinatorLocalDataProvider> *localDataProvider
 @property  <WBSSafariBookmarksSyncAgentProtocol> *syncAgent
 @property  <WBSLogger> *keyActionsLogger
 @property  BOOL migrationEnabled

  // instance methods
  -[WBSCloudBookmarksMigrationCoordinator _logKeyAction:]
  -[WBSCloudBookmarksMigrationCoordinator init]
  -[WBSCloudBookmarksMigrationCoordinator _beginMigrationIfPossible]
  -[WBSCloudBookmarksMigrationCoordinator _logErrorAsKeyAction:]
  -[WBSCloudBookmarksMigrationCoordinator setKeyActionsLogger:]
  -[WBSCloudBookmarksMigrationCoordinator .cxx_destruct]
  -[WBSCloudBookmarksMigrationCoordinator _determineCourseOfActionFromSyncAgentMigrationState]
  -[WBSCloudBookmarksMigrationCoordinator localDataProvider]
  -[WBSCloudBookmarksMigrationCoordinator isMigrationEnabled]
  -[WBSCloudBookmarksMigrationCoordinator startCoordinatingMigration]
  -[WBSCloudBookmarksMigrationCoordinator syncAgent]
  -[WBSCloudBookmarksMigrationCoordinator _considerOverridingOtherMigratingDevice]
  -[WBSCloudBookmarksMigrationCoordinator setMigrationEnabled:]
  -[WBSCloudBookmarksMigrationCoordinator _determineCourseOfActionFromRemoteMigrationState]
  -[WBSCloudBookmarksMigrationCoordinator initWithSyncAgent:localDataProvider:]
  -[WBSCloudBookmarksMigrationCoordinator keyActionsLogger]


WBSCredentialMatchResult : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *exactMatches
 @property  NSArray *potentialMatches
 @property  NSArray *associatedDomainMatches

  // instance methods
  -[WBSCredentialMatchResult .cxx_destruct]
  -[WBSCredentialMatchResult exactMatches]
  -[WBSCredentialMatchResult potentialMatches]
  -[WBSCredentialMatchResult initWithExactMatches:potentialMatches:associatedDomainMatches:]
  -[WBSCredentialMatchResult associatedDomainMatches]


WBSPasswordBreachTestCredentialSource : NSObject /usr/lib/libc++.1.dylib <WBSPasswordBreachCredentialSource>
 @property  NSArray *credentials

  // instance methods
  -[WBSPasswordBreachTestCredentialSource .cxx_destruct]
  -[WBSPasswordBreachTestCredentialSource savedPasswordsForPersistentIdentifiers:]
  -[WBSPasswordBreachTestCredentialSource credentials]
  -[WBSPasswordBreachTestCredentialSource initWithPasswords:]


WBSCloudHistory : NSObject /usr/lib/libc++.1.dylib <WBSCloudHistoryServiceProtocol, WBSCloudKitThrottlerDataStore>
 @property  unsigned long numberOfDevicesInSyncCircle
 @property  BOOL cloudHistoryEnabled
 @property  BOOL removedHistoryItemsArePendingSave
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCloudHistory .cxx_construct]
  -[WBSCloudHistory dealloc]
  -[WBSCloudHistory _resetForAccountChangeWithCompletionHandler:]
  -[WBSCloudHistory _backoffTimeIntervalFromError:]
  -[WBSCloudHistory _saveVisits:tombstones:toCloudHistoryBypassingThrottler:longLivedOperationPersistenceCompletion:withCallback:]
  -[WBSCloudHistory _priorityForSaveWithVisits:tombstones:bypassingThrottler:]
  -[WBSCloudHistory _estimatedPriorityForPotentialSaveAttempt]
  -[WBSCloudHistory fetchAndMergeChangesBypassingThrottler:completionHandler:]
  -[WBSCloudHistory _registerFetchCompletionHandler:]
  -[WBSCloudHistory fetchAndMergeChanges]
  -[WBSCloudHistory recordOfPastOperationsForThrottler:]
  -[WBSCloudHistory setRecordOfPastOperations:forThrottler:]
  -[WBSCloudHistory .cxx_destruct]
  -[WBSCloudHistory _callAndResetFetchCompletionHandlerWithError:]
  -[WBSCloudHistory _fetchAndMergeChangesWithServerChangeTokenData:withPriority:]
  -[WBSCloudHistory _getServerChangeTokenDataWithCompletion:]
  -[WBSCloudHistory saveChangesToCloudHistoryStore]
  -[WBSCloudHistory _manateeErrorCode:]
  -[WBSCloudHistory _deleteAllCloudHistoryAndSaveAgain]
  -[WBSCloudHistory _pcsIdentitiesChangedNotification:]
  -[WBSCloudHistory _setServerChangeToken:]
  -[WBSCloudHistory _processPendingPushNotifications]
  -[WBSCloudHistory _persistedLongLivedSaveOperationID:databaseGeneration:]
  -[WBSCloudHistory setCloudHistoryEnabled:]
  -[WBSCloudHistory _updateHistoryAfterSuccessfulPersistedLongLivedSaveOperationWithGeneration:completion:]
  -[WBSCloudHistory _setPushNotificationAreInitialized:]
  -[WBSCloudHistory _pushNotificationsAreInitializedWithCompletionHandler:]
  -[WBSCloudHistory _updateDeviceCountInResponseToPushNotification]
  -[WBSCloudHistory _fetchChangesInResponseToPushNotification:]
  -[WBSCloudHistory _cachedNumberOfDevicesInSyncCircle]
  -[WBSCloudHistory setNumberOfDevicesInSyncCircle:]
  -[WBSCloudHistory _serverBackoffTimerFired:]
  -[WBSCloudHistory _registerForHistoryWasLoadedNotificationIfNecessary]
  -[WBSCloudHistory _updateThrottlerPolicies]
  -[WBSCloudHistory _setCachedNumberOfDevicesInSyncCircle:]
  -[WBSCloudHistory _resetCloudHistoryDataWithCompletionHandler:]
  -[WBSCloudHistory resetForAccountChange]
  -[WBSCloudHistory dateOfNextPermittedSaveChangesAttempt]
  -[WBSCloudHistory updateConfiguration:completionHandler:]
  -[WBSCloudHistory resetForAccountChangeWithCompletionHandler:]
  -[WBSCloudHistory fetchDateOfNextPermittedSaveChangesAttemptWithCompletionHandler:]
  -[WBSCloudHistory initWithDatabase:configuration:]
  -[WBSCloudHistory _saveChangesWhenHistoryLoads]
  -[WBSCloudHistory saveChangesToCloudHistoryStoreBypassingThrottler]
  -[WBSCloudHistory fetchAndMergeChangesBypassingThrottler]
  -[WBSCloudHistory _fetchChangesWhenHistoryLoads]
  -[WBSCloudHistory removedHistoryItemsArePendingSave]
  -[WBSCloudHistory setRemovedHistoryItemsArePendingSave:]
  -[WBSCloudHistory numberOfDevicesInSyncCircle]
  -[WBSCloudHistory getVisitsAndTombstonesNeedingSyncWithVisitSyncWindow:completion:]
  -[WBSCloudHistory initWithDatabase:configuration:completionBlock:]
  -[WBSCloudHistory _determineCloudHistoryStoreWithCompletion:]
  -[WBSCloudHistory _resultFromError:]
  -[WBSCloudHistory _currentSaveChangesThrottlerPolicyString]
  -[WBSCloudHistory _currentFetchChangesThrottlerPolicyString]
  -[WBSCloudHistory _currentSyncCircleSizeRetrievalThrottlerPolicyString]
  -[WBSCloudHistory _replayPersistedLongLivedSaveOperationIfNecessary]
  -[WBSCloudHistory _pruneTombstonesThatCanNoLongerMatchVisitsFetchedFromCloud]
  -[WBSCloudHistory _initializePushNotificationSupport]
  -[WBSCloudHistory _performBlockAsynchronouslyOnCloudHistoryQueueAfterHistoryHasLoaded:]
  -[WBSCloudHistory _cloudHistoryConfigurationChanged:]
  -[WBSCloudHistory _pushNotificationReceived:]
  -[WBSCloudHistory _transitionCloudHistoryStoreToManateeState:completion:]
  -[WBSCloudHistory isCloudHistoryEnabled]
  -[WBSCloudHistory saveChangesBypassingThrottler:completionHandler:]
  -[WBSCloudHistory _postSaveChangesAttemptCompletedNotificationWithAllPendingDataSaved:]
  -[WBSCloudHistory _callAndResetSaveCompletionHandlerWithError:]
  -[WBSCloudHistory _registerSaveCompletionHandler:]
  -[WBSCloudHistory _determineNumberOfDevicesInSyncCircleForOperation:completionHandler:]
  -[WBSCloudHistory _persistLongLivedSaveOperationDictionaryWithOperationID:databaseGeneration:]
  -[WBSCloudHistory _removePersistedLongLivedSaveOperationDictionary]
  -[WBSCloudHistory _handleManateeErrorIfNeeded:]
  -[WBSCloudHistory _backOffWithInterval:]


WBSQuerySuggestion : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *title
 @property  NSString *identifier
 @property  long long type
 @property  id tag

  // instance methods
  -[WBSQuerySuggestion init]
  -[WBSQuerySuggestion tag]
  -[WBSQuerySuggestion .cxx_destruct]
  -[WBSQuerySuggestion identifier]
  -[WBSQuerySuggestion title]
  -[WBSQuerySuggestion type]
  -[WBSQuerySuggestion initWithTitle:identifier:type:tag:]


WBSCredentialIdentityMatch : WBSFormAutoFillItem
 @property  SFPasswordCredentialIdentity *credentialIdentity
 @property  NSExtension *extension
 @property  SFSafariCredential *resolvedCredential

  // instance methods
  -[WBSCredentialIdentityMatch extension]
  -[WBSCredentialIdentityMatch completion]
  -[WBSCredentialIdentityMatch .cxx_destruct]
  -[WBSCredentialIdentityMatch initWithCredentialIdentity:extension:]
  -[WBSCredentialIdentityMatch resolvedMatchWithCredential:]
  -[WBSCredentialIdentityMatch credentialIdentity]
  -[WBSCredentialIdentityMatch resolvedCredential]


WBSPasswordWarningTopFraudTargets : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *highPriorityFraudTargets
 @property  NSArray *fraudTargets
 @property  NSArray *financialFraudTargets

  // instance methods
  -[WBSPasswordWarningTopFraudTargets .cxx_destruct]
  -[WBSPasswordWarningTopFraudTargets fraudTargets]
  -[WBSPasswordWarningTopFraudTargets initWithHighPriorityTargets:targets:financialTargets:]
  -[WBSPasswordWarningTopFraudTargets highPriorityFraudTargets]
  -[WBSPasswordWarningTopFraudTargets financialFraudTargets]
  -[WBSPasswordWarningTopFraudTargets initWithPlistData:error:]


WBSPasswordWarningTopFraudTargetsTransformer : WBSConfigurationDataTransformer /System/Library/PrivateFrameworks/Lexicon.framework/Lexicon
  // instance methods
  -[WBSPasswordWarningTopFraudTargetsTransformer objectFromData:]


WBSCloudHistoryConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *singleDeviceSaveChangesThrottlingPolicyString
 @property  NSString *multipleDeviceSaveChangesThrottlingPolicyString
 @property  NSString *singleDeviceFetchChangesThrottlingPolicyString
 @property  NSString *multipleDeviceFetchChangesThrottlingPolicyString
 @property  NSString *syncCircleSizeRetrievalThrottlingPolicyString
 @property  unsigned long maximumRequestCharacterCount
 @property  double syncWindow
 @property  BOOL shouldBatchSaveRecords
 @property  BOOL shouldUseLongLivedOperationsToSaveRecords

  // instance methods
  -[WBSCloudHistoryConfiguration init]
  -[WBSCloudHistoryConfiguration .cxx_destruct]
  -[WBSCloudHistoryConfiguration singleDeviceSaveChangesThrottlingPolicyString]
  -[WBSCloudHistoryConfiguration multipleDeviceSaveChangesThrottlingPolicyString]
  -[WBSCloudHistoryConfiguration applyRemoteConfiguration:]
  -[WBSCloudHistoryConfiguration initWithDictionary:]
  -[WBSCloudHistoryConfiguration singleDeviceFetchChangesThrottlingPolicyString]
  -[WBSCloudHistoryConfiguration multipleDeviceFetchChangesThrottlingPolicyString]
  -[WBSCloudHistoryConfiguration syncCircleSizeRetrievalThrottlingPolicyString]
  -[WBSCloudHistoryConfiguration _builtInConfiguration]
  -[WBSCloudHistoryConfiguration _applyBuiltInConfiguration:]
  -[WBSCloudHistoryConfiguration remoteConfiguration]
  -[WBSCloudHistoryConfiguration setSyncWindow:]
  -[WBSCloudHistoryConfiguration dictionaryRepresentation]
  -[WBSCloudHistoryConfiguration syncWindow]
  -[WBSCloudHistoryConfiguration shouldUseLongLivedOperationsToSaveRecords]
  -[WBSCloudHistoryConfiguration _applyConfiguration:withTolerance:]
  -[WBSCloudHistoryConfiguration shouldBatchSaveRecords]
  -[WBSCloudHistoryConfiguration _sharedBuiltInConfiguration]
  -[WBSCloudHistoryConfiguration platformBuiltInConfiguration]
  -[WBSCloudHistoryConfiguration applyPlatformConfiguration:withTolerance:]
  -[WBSCloudHistoryConfiguration setSingleDeviceSaveChangesThrottlingPolicyString:]
  -[WBSCloudHistoryConfiguration setMaximumRequestCharacterCount:]
  -[WBSCloudHistoryConfiguration setMultipleDeviceSaveChangesThrottlingPolicyString:]
  -[WBSCloudHistoryConfiguration setSingleDeviceFetchChangesThrottlingPolicyString:]
  -[WBSCloudHistoryConfiguration setMultipleDeviceFetchChangesThrottlingPolicyString:]
  -[WBSCloudHistoryConfiguration setSyncCircleSizeRetrievalThrottlingPolicyString:]
  -[WBSCloudHistoryConfiguration maximumRequestCharacterCount]


WBSCloudHistoryFetchResult : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *cloudHistoryVisits
 @property  NSArray *historyTombstones
 @property  NSDictionary *clientVersions
 @property  NSData *serverChangeTokenData

  // instance methods
  -[WBSCloudHistoryFetchResult _addCloudHistoryVisit:]
  -[WBSCloudHistoryFetchResult _updateClientVersion:seenAt:]
  -[WBSCloudHistoryFetchResult _addHistoryTombstone:]
  -[WBSCloudHistoryFetchResult _setServerChangeTokenData:]
  -[WBSCloudHistoryFetchResult init]
  -[WBSCloudHistoryFetchResult .cxx_destruct]
  -[WBSCloudHistoryFetchResult serverChangeTokenData]
  -[WBSCloudHistoryFetchResult cloudHistoryVisits]
  -[WBSCloudHistoryFetchResult historyTombstones]
  -[WBSCloudHistoryFetchResult clientVersions]


WBSAutomaticReaderActivationManager : WBSPerSitePreferenceManager <WBSPerSitePreferenceManagerStorageDelegate, WBSPerSitePreferenceManagerDefaultsDelegate, WBSPerSitePreferenceBinaryToggleItemManager>
 @property  WBSPerSitePreference *readerPreference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore

  // instance methods
  -[WBSAutomaticReaderActivationManager perSitePreferencesStore]
  -[WBSAutomaticReaderActivationManager getAutomaticReaderEnabledByDefaultUsingBlock:]
  -[WBSAutomaticReaderActivationManager getAutomaticReaderEnabledForDomain:usingBlock:]
  -[WBSAutomaticReaderActivationManager readerPreference]
  -[WBSAutomaticReaderActivationManager init]
  -[WBSAutomaticReaderActivationManager offValueForPreference:]
  -[WBSAutomaticReaderActivationManager _submitOptInOutStateForAnalyticsGivenAutomaticReaderIsNotGloballyEnabled]
  -[WBSAutomaticReaderActivationManager initWithPerSitePreferencesStore:]
  -[WBSAutomaticReaderActivationManager getAutomaticReaderStateForDomain:usingBlock:]
  -[WBSAutomaticReaderActivationManager setAutomaticReaderEnabled:forDomain:]
  -[WBSAutomaticReaderActivationManager defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[WBSAutomaticReaderActivationManager setAutomaticReaderEnabledByDefault:removingExistingPreferencesForSites:]
  -[WBSAutomaticReaderActivationManager submitOptInOutStateForAnalytics]
  -[WBSAutomaticReaderActivationManager preferences]
  -[WBSAutomaticReaderActivationManager onValueForPreference:]
  -[WBSAutomaticReaderActivationManager .cxx_destruct]
  -[WBSAutomaticReaderActivationManager valuesForPreference:]
  -[WBSAutomaticReaderActivationManager preferencesStoreKeyForPreference:]
  -[WBSAutomaticReaderActivationManager localizedStringForValue:inPreference:]
  -[WBSAutomaticReaderActivationManager didUpdatePreference:toValue:forDomain:]


WBSContentBlockerStatisticsSQLiteStore : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSContentBlockerStatisticsSQLiteStore _defaultDatabaseURL]
  +[WBSContentBlockerStatisticsSQLiteStore standardStore]

  // instance methods
  -[WBSContentBlockerStatisticsSQLiteStore closeDatabase]
  -[WBSContentBlockerStatisticsSQLiteStore _openDatabase]
  -[WBSContentBlockerStatisticsSQLiteStore initWithDatabaseURL:]
  -[WBSContentBlockerStatisticsSQLiteStore _openDatabaseIfNeeded]
  -[WBSContentBlockerStatisticsSQLiteStore _idForThirdPartyWithHighLevelDomain:]
  -[WBSContentBlockerStatisticsSQLiteStore .cxx_destruct]
  -[WBSContentBlockerStatisticsSQLiteStore _idForFirstPartyWithHighLevelDomain:]
  -[WBSContentBlockerStatisticsSQLiteStore blockedThirdPartiesAfter:before:onFirstParty:completionHandler:]
  -[WBSContentBlockerStatisticsSQLiteStore _clearStatisticsAfter:before:]
  -[WBSContentBlockerStatisticsSQLiteStore _clearStatisticsForDomain:]
  -[WBSContentBlockerStatisticsSQLiteStore _deleteUnusedDomains]
  -[WBSContentBlockerStatisticsSQLiteStore _closeDatabaseOnDatabaseQueue]
  -[WBSContentBlockerStatisticsSQLiteStore _createDatabaseSchemaIfNeeded]
  -[WBSContentBlockerStatisticsSQLiteStore _schemaVersion]
  -[WBSContentBlockerStatisticsSQLiteStore recordThirdPartyResourceBlocked:onFirstParty:completionHandler:]
  -[WBSContentBlockerStatisticsSQLiteStore blockedThirdPartiesAfter:before:completionHandler:]
  -[WBSContentBlockerStatisticsSQLiteStore clearAllStatisticsWithCompletionHandler:]
  -[WBSContentBlockerStatisticsSQLiteStore clearStatisticsAfter:before:]
  -[WBSContentBlockerStatisticsSQLiteStore clearStatisticsForDomains:]
  -[WBSContentBlockerStatisticsSQLiteStore _configureDatabase]


WBSContentBlockerStatisticsFirstParty : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *domain
 @property  double lastSeen

  // instance methods
  -[WBSContentBlockerStatisticsFirstParty initWithDomain:lastSeen:]
  -[WBSContentBlockerStatisticsFirstParty domain]
  -[WBSContentBlockerStatisticsFirstParty .cxx_destruct]
  -[WBSContentBlockerStatisticsFirstParty lastSeen]


WBSCloudHistoryMergeOperation : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSCloudHistoryMergeOperation .cxx_destruct]
  -[WBSCloudHistoryMergeOperation initWithDatabase:fetchResult:]
  -[WBSCloudHistoryMergeOperation mergeWithCompletion:]
  -[WBSCloudHistoryMergeOperation _updateClientVersions]
  -[WBSCloudHistoryMergeOperation _buildVisitsByVisitIdentifiersMap]
  -[WBSCloudHistoryMergeOperation _buildRedirectChains]
  -[WBSCloudHistoryMergeOperation _filterVisitsByTombstones]
  -[WBSCloudHistoryMergeOperation _removeDuplicateVisits]
  -[WBSCloudHistoryMergeOperation _mergeVisitsWithCompletion:]
  -[WBSCloudHistoryMergeOperation _lookupRedirectChainSourcesWithCompletion:]
  -[WBSCloudHistoryMergeOperation _lookUpExistingItemsWithCompletion:]
  -[WBSCloudHistoryMergeOperation _loadTombstonesWithCompletion:]
  -[WBSCloudHistoryMergeOperation _replayAndAddTombstones:]


WBSHistoryServiceTombstone : WBSHistoryServiceObject
 @property  NSString *url
 @property  NSData *urlHash
 @property  NSData *urlSalt
 @property  double startTime
 @property  double endTime
 @property  long long generation

  // class methods
  +[WBSHistoryServiceTombstone supportsSecureCoding]

  // instance methods
  -[WBSHistoryServiceTombstone endTime]
  -[WBSHistoryServiceTombstone url]
  -[WBSHistoryServiceTombstone .cxx_destruct]
  -[WBSHistoryServiceTombstone encodeWithCoder:]
  -[WBSHistoryServiceTombstone urlSalt]
  -[WBSHistoryServiceTombstone urlHash]
  -[WBSHistoryServiceTombstone generation]
  -[WBSHistoryServiceTombstone initWithCoder:]
  -[WBSHistoryServiceTombstone startTime]
  -[WBSHistoryServiceTombstone initWithDatabaseID:url:urlHash:urlSalt:startTime:endTime:generation:]
  -[WBSHistoryServiceTombstone initWithTombstone:]


WBSCloudHistoryPushAgent : NSObject /usr/lib/libc++.1.dylib <NSXPCListenerDelegate, WBSCloudHistoryPushAgent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCloudHistoryPushAgent connection:didReceiveIncomingMessage:]
  -[WBSCloudHistoryPushAgent connection:didReceiveToken:forTopic:identifier:]
  -[WBSCloudHistoryPushAgent connection:didReceivePublicToken:]
  -[WBSCloudHistoryPushAgent _hasUnacknowledgedPushNotifications]
  -[WBSCloudHistoryPushAgent init]
  -[WBSCloudHistoryPushAgent _pushTopic]
  -[WBSCloudHistoryPushAgent clearAcknowledgedPushNotifications]
  -[WBSCloudHistoryPushAgent queryMemoryFootprint:]
  -[WBSCloudHistoryPushAgent .cxx_destruct]
  -[WBSCloudHistoryPushAgent _setHasUnacknowledgedPushNotifications:]
  -[WBSCloudHistoryPushAgent getPushNotifications:]
  -[WBSCloudHistoryPushAgent listener:shouldAcceptNewConnection:]
  -[WBSCloudHistoryPushAgent _userDefaults]
  -[WBSCloudHistoryPushAgent _hasAcknowledgedPushNotifications]
  -[WBSCloudHistoryPushAgent _setHasAcknowlegedPushNotifications:]
  -[WBSCloudHistoryPushAgent acknowledgePendingPushNotifications]


WBSCloudHistoryPushAgentProxy : NSObject /usr/lib/libc++.1.dylib <WBSCloudHistoryPushAgent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCloudHistoryPushAgentProxy init]
  -[WBSCloudHistoryPushAgentProxy clearAcknowledgedPushNotifications]
  -[WBSCloudHistoryPushAgentProxy queryMemoryFootprint:]
  -[WBSCloudHistoryPushAgentProxy dealloc]
  -[WBSCloudHistoryPushAgentProxy .cxx_destruct]
  -[WBSCloudHistoryPushAgentProxy queryMemoryFootprintWithError:]
  -[WBSCloudHistoryPushAgentProxy getPushNotifications:]
  -[WBSCloudHistoryPushAgentProxy acknowledgePendingPushNotifications]


WBSCloudHistoryStore : NSObject /usr/lib/libc++.1.dylib <WBSCloudHistoryDataStore>
  // instance methods
  -[WBSCloudHistoryStore saveCloudHistoryVisits:tombstones:longLivedOperationPersistenceCompletion:completion:]
  -[WBSCloudHistoryStore .cxx_destruct]
  -[WBSCloudHistoryStore initWithConfiguration:useManateeContainer:]
  -[WBSCloudHistoryStore deleteHistoryZoneWithCompletion:]
  -[WBSCloudHistoryStore fetchRecordsWithServerChangeTokenData:completion:]
  -[WBSCloudHistoryStore _batchSaveRecords:useLongLivedOperation:longLivedOperationPersistenceCompletion:completion:]
  -[WBSCloudHistoryStore _recordWithCloudHistoryVisits:]
  -[WBSCloudHistoryStore _recordWithType:version:dataDictionary:]
  -[WBSCloudHistoryStore _configureFetchChangesOperation:]
  -[WBSCloudHistoryStore _appendRecord:toResult:]
  -[WBSCloudHistoryStore _dictionaryForRecordData:]
  -[WBSCloudHistoryStore replayPersistedLongLivedSaveOperationWithID:completion:]
  -[WBSCloudHistoryStore initializePushNotifications:]
  -[WBSCloudHistoryStore fetchNumberOfDevicesInSyncCircleWithCompletion:]
  -[WBSCloudHistoryStore _shouldTryToResetRecordZoneForError:]
  -[WBSCloudHistoryStore _resetRecordZone]
  -[WBSCloudHistoryStore _saveCloudHistoryVisits:tombstones:longLivedOperationPersistenceCompletion:completion:]
  -[WBSCloudHistoryStore _recordsWithCloudHistoryVisits:]
  -[WBSCloudHistoryStore _recordWithHistoryTombstones:version:]
  -[WBSCloudHistoryStore _saveRecords:withCompletion:]
  -[WBSCloudHistoryStore _fetchRecordsWithServerChangeToken:numberOfFetchRecordsOperationsPerformedSoFar:result:completion:]
  -[WBSCloudHistoryStore _recordDataForDictionary:]
  -[WBSCloudHistoryStore _scheduleOperation:]
  -[WBSCloudHistoryStore _prepareRecordZoneWithCompletion:]


WBSCloudHistoryVisit : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDictionary *dictionaryRepresentation
 @property  WBSHistoryVisitIdentifier *visitIdentifier
 @property  NSString *title
 @property  BOOL loadSuccessful
 @property  BOOL httpNonGet
 @property  WBSHistoryVisitIdentifier *redirectSourceVisitIdentifier
 @property  WBSCloudHistoryVisit *redirectSourceVisit
 @property  WBSHistoryVisitIdentifier *redirectDestinationVisitIdentifier
 @property  WBSCloudHistoryVisit *redirectDestinationVisit

  // class methods
  +[WBSCloudHistoryVisit supportsSecureCoding]

  // instance methods
  -[WBSCloudHistoryVisit .cxx_destruct]
  -[WBSCloudHistoryVisit wasHTTPNonGet]
  -[WBSCloudHistoryVisit setTitle:]
  -[WBSCloudHistoryVisit encodeWithCoder:]
  -[WBSCloudHistoryVisit visitIdentifier]
  -[WBSCloudHistoryVisit title]
  -[WBSCloudHistoryVisit initWithDictionary:]
  -[WBSCloudHistoryVisit loadWasSuccessful]
  -[WBSCloudHistoryVisit redirectSourceVisitIdentifier]
  -[WBSCloudHistoryVisit setRedirectSourceVisit:]
  -[WBSCloudHistoryVisit setRedirectDestinationVisit:]
  -[WBSCloudHistoryVisit redirectSourceVisit]
  -[WBSCloudHistoryVisit redirectDestinationVisit]
  -[WBSCloudHistoryVisit setHttpNonGet:]
  -[WBSCloudHistoryVisit dictionaryRepresentation]
  -[WBSCloudHistoryVisit initWithHistoryVisit:]
  -[WBSCloudHistoryVisit setVisitIdentifier:]
  -[WBSCloudHistoryVisit setLoadSuccessful:]
  -[WBSCloudHistoryVisit initWithCoder:]
  -[WBSCloudHistoryVisit initWithVisitIdentifier:title:loadSuccessful:httpNonGet:redirectSourceVisitIdentifier:redirectDestinationVisitIdentifier:]
  -[WBSCloudHistoryVisit setRedirectSourceVisitIdentifier:]
  -[WBSCloudHistoryVisit redirectDestinationVisitIdentifier]
  -[WBSCloudHistoryVisit setRedirectDestinationVisitIdentifier:]


WBSAutomaticBugCaptureManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSAutomaticBugCaptureManager sharedManager]

  // instance methods
  -[WBSAutomaticBugCaptureManager init]
  -[WBSAutomaticBugCaptureManager captureLoadingStallWithDomain:detectedProcess:context:duration:]
  -[WBSAutomaticBugCaptureManager captureLoadingStallWithDomain:detectedProcess:context:]
  -[WBSAutomaticBugCaptureManager _startLoggingSessionForDomain:detectedProcess:type:subType:context:duration:]
  -[WBSAutomaticBugCaptureManager captureProcessTerminationDueToResourceLimitsWithDomain:detectedProcess:resourceType:]
  -[WBSAutomaticBugCaptureManager captureDeferredNavigationWithDomain:detectedProcess:context:]
  -[WBSAutomaticBugCaptureManager .cxx_destruct]
  -[WBSAutomaticBugCaptureManager capturePerformanceTimeoutWithDomain:detectedProcess:context:]


WBSPasswordWordList : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *identifier

  // instance methods
  -[WBSPasswordWordList entriesForString:]
  -[WBSPasswordWordList .cxx_destruct]
  -[WBSPasswordWordList initWithIdentifier:]
  -[WBSPasswordWordList identifier]
  -[WBSPasswordWordList enumerateEntriesForString:withBlock:]


WBSCloudTab : NSObject /usr/lib/libc++.1.dylib <NSCopying, WBSTabItemSearchSupport>
 @property  BOOL isShowingReader
 @property  NSDictionary *readerScrollPositionDictionary
 @property  NSString *title
 @property  NSURL *url
 @property  NSUUID *uuid
 @property  BOOL pinned
 @property  NSDictionary *dictionaryRepresentation
 @property  NSDictionary *dictionaryRepresentationForUserActivityUserInfo
 @property  NSString *sceneID
 @property  NSString *titleForLastSearch
 @property  NSArray *titleWords
 @property  NSString *URLString
 @property  NSString *URLStringForLastSearch
 @property  NSArray *URLStringComponents
 @property  NSString *lastSearchTerm
 @property  BOOL matchedLastSearch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSCloudTab _dictionaryWithURL:uuid:title:isShowingReader:readerScrollPosition:isPinned:sceneID:]

  // instance methods
  -[WBSCloudTab copyWithZone:]
  -[WBSCloudTab URLString]
  -[WBSCloudTab url]
  -[WBSCloudTab setPinned:]
  -[WBSCloudTab sceneID]
  -[WBSCloudTab isPinned]
  -[WBSCloudTab initWithURL:uuid:title:isShowingReader:readerScrollPosition:sceneID:]
  -[WBSCloudTab uuid]
  -[WBSCloudTab .cxx_destruct]
  -[WBSCloudTab matchedLastSearch]
  -[WBSCloudTab initWithURL:uuid:title:isShowingReader:readerScrollPosition:isPinned:]
  -[WBSCloudTab setUuid:]
  -[WBSCloudTab setIsShowingReader:]
  -[WBSCloudTab setLastSearchTerm:]
  -[WBSCloudTab setTitle:]
  -[WBSCloudTab hasSameUUIDAndURLAsTab:]
  -[WBSCloudTab setTitleWords:]
  -[WBSCloudTab isShowingReader]
  -[WBSCloudTab setUrl:]
  -[WBSCloudTab title]
  -[WBSCloudTab setTitleForLastSearch:]
  -[WBSCloudTab initWithDictionary:]
  -[WBSCloudTab setURLStringForLastSearch:]
  -[WBSCloudTab setMatchedLastSearch:]
  -[WBSCloudTab isEqual:]
  -[WBSCloudTab URLStringComponents]
  -[WBSCloudTab dictionaryRepresentationForUserActivityUserInfo]
  -[WBSCloudTab initWithDictionaryFromUserActivityUserInfo:]
  -[WBSCloudTab lastSearchTerm]
  -[WBSCloudTab readerScrollPositionDictionary]
  -[WBSCloudTab dictionaryRepresentation]
  -[WBSCloudTab URLStringForLastSearch]
  -[WBSCloudTab setReaderScrollPositionDictionary:]
  -[WBSCloudTab setURLStringComponents:]
  -[WBSCloudTab titleForLastSearch]
  -[WBSCloudTab titleWords]


WBSCloudTabCloseRequest : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSUUID *requestUUID
 @property  NSUUID *destinationDeviceUUID
 @property  NSUUID *tabUUID
 @property  NSURL *url
 @property  NSDate *lastModified
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[WBSCloudTabCloseRequest _dictionaryWithURL:tabUUID:lastModified:sourceDeviceUUID:destinationDeviceUUID:]
  +[WBSCloudTabCloseRequest isCloudTabCloseRequestDictionary:]
  +[WBSCloudTabCloseRequest destinationDeviceUUIDInDictionary:]

  // instance methods
  -[WBSCloudTabCloseRequest copyWithZone:]
  -[WBSCloudTabCloseRequest requestUUID]
  -[WBSCloudTabCloseRequest lastModified]
  -[WBSCloudTabCloseRequest url]
  -[WBSCloudTabCloseRequest .cxx_destruct]
  -[WBSCloudTabCloseRequest tabUUID]
  -[WBSCloudTabCloseRequest initWithDictionary:requestUUID:]
  -[WBSCloudTabCloseRequest dictionaryRepresentation]
  -[WBSCloudTabCloseRequest initWithURL:tabUUID:lastModified:sourceDeviceUUID:destinationDeviceUUID:requestUUID:]
  -[WBSCloudTabCloseRequest matchesCloudTab:]
  -[WBSCloudTabCloseRequest destinationDeviceUUID]


WBSCloudTabDevice : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *name
 @property  NSString *disambiguatedName
 @property  BOOL closeRequestSupported
 @property  BOOL hasDuplicateName
 @property  BOOL ephemeralDevice
 @property  NSString *uuid
 @property  NSArray *tabs
 @property  NSDate *lastModified
 @property  NSDictionary *dictionaryRepresentation
 @property  BOOL cloudKitBookmarkSyncingSupported

  // class methods
  +[WBSCloudTabDevice deviceNameInDictionary:]
  +[WBSCloudTabDevice lastModifiedDateInDictionary:]
  +[WBSCloudTabDevice hasDuplicateDeviceNameInDictionary:]
  +[WBSCloudTabDevice isEphemeralDeviceInDictionary:]
  +[WBSCloudTabDevice _dictionaryWithDeviceName:lastModified:hasDuplicateName:tabs:isEphemeralDevice:]
  +[WBSCloudTabDevice isCloudTabDeviceDictionary:]
  +[WBSCloudTabDevice tabCountInDictionary:]

  // instance methods
  -[WBSCloudTabDevice copyWithZone:]
  -[WBSCloudTabDevice lastModified]
  -[WBSCloudTabDevice initWithDeviceName:lastModified:hasDuplicateName:tabs:uuid:]
  -[WBSCloudTabDevice deviceByRemovingTabs:]
  -[WBSCloudTabDevice deviceBySettingDisambiguatedName:]
  -[WBSCloudTabDevice hasDuplicateName]
  -[WBSCloudTabDevice tabs]
  -[WBSCloudTabDevice isCloseRequestSupported]
  -[WBSCloudTabDevice isEphemeralDevice]
  -[WBSCloudTabDevice isCloudKitBookmarkSyncingSupported]
  -[WBSCloudTabDevice uuid]
  -[WBSCloudTabDevice .cxx_destruct]
  -[WBSCloudTabDevice name]
  -[WBSCloudTabDevice isEqual:]
  -[WBSCloudTabDevice dictionaryRepresentation]
  -[WBSCloudTabDevice disambiguatedName]
  -[WBSCloudTabDevice initWithDeviceName:lastModified:hasDuplicateName:tabs:uuid:isEphemeralDevice:]
  -[WBSCloudTabDevice initWithDictionary:uuid:]
  -[WBSCloudTabDevice deviceByRemovingTab:]


WBSCloudTabStore : NSObject /usr/lib/libc++.1.dylib <WBSCloudTabDeviceProvider>
 @property  BOOL atLeastOneOtherActiveDeviceIsRegistered
 @property  <WBSCloudTabStoreDelegate> *wbsDelegate
 @property  BOOL syncAgentIsAvailable
 @property  long long uniqueDeviceMultiplicity
 @property  BOOL currentDeviceIsRegisteredInCloudKit
 @property  NSDictionary *dictionaryRepresentationOfCurrentDeviceInCloudKit
 @property  NSError *lastFetchError
 @property  NSArray *syncedCloudTabDevices
 @property  NSDate *dateOfLastCloudTabDevicesUpdate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSCloudTabStore _debugErrorMessageForCode:]
  +[WBSCloudTabStore errorWithCode:]

  // instance methods
  -[WBSCloudTabStore _devicesByRemovingDevicesFromKVSWithOutstandingCloseRequests:]
  -[WBSCloudTabStore handleCloseTabRequestsFromCloudKit]
  -[WBSCloudTabStore init]
  -[WBSCloudTabStore _tabsWereClosed:onDevice:deviceIsStoredInCloudKit:syncedCloudTabDevices:]
  -[WBSCloudTabStore currentDeviceIsRegisteredInCloudKit]
  -[WBSCloudTabStore synchronizeCloudTabDevicesWithCompletionHandler:]
  -[WBSCloudTabStore closeAllTabsOnDevice:]
  -[WBSCloudTabStore atLeastOneOtherActiveDeviceIsRegistered]
  -[WBSCloudTabStore _closeRequestedTabIfPossible:]
  -[WBSCloudTabStore .cxx_destruct]
  -[WBSCloudTabStore _indexOfDevice:inSyncedCloudTabDevices:]
  -[WBSCloudTabStore closeTabs:onDevice:]
  -[WBSCloudTabStore _syncAgentProxyConnectionWasInvalidated:]
  -[WBSCloudTabStore setWbsDelegate:]
  -[WBSCloudTabStore dictionaryRepresentationOfCurrentDeviceInCloudKit]
  -[WBSCloudTabStore _pruneOrphanedCloseRequestsFromKVS]
  -[WBSCloudTabStore _closeTabs:onDevice:]
  -[WBSCloudTabStore _didFetchDeviceDictionariesFromCloudKit:fetchedCloseRequests:error:]
  -[WBSCloudTabStore _addCloseRequestDictionary:toDeviceUUIDsToCloseRequestsDictionary:requestUUID:]
  -[WBSCloudTabStore syncedCloudTabDevices]
  -[WBSCloudTabStore resetSyncedCloudTabDevicesAndCloseRequestsFromCloudKit]
  -[WBSCloudTabStore lastFetchError]
  -[WBSCloudTabStore _writeCloseRequestForTab:onDevice:deviceIsStoredInCloudKit:]
  -[WBSCloudTabStore _didFetchDeviceDictionariesFromCloudKit:fetchedCloseRequests:fetchedDevicesBySyncing:error:]
  -[WBSCloudTabStore uniqueDeviceMultiplicity]
  -[WBSCloudTabStore resetSyncedCloudTabDevicesAndCloseRequestsFromKVS]
  -[WBSCloudTabStore _deviceIsStoredInCloudKit:]
  -[WBSCloudTabStore _addDeviceDictionaryFromKVS:deviceUUID:]
  -[WBSCloudTabStore clearTabsForFirstDuplicateDeviceInCloudKitWithName:passingTest:]
  -[WBSCloudTabStore _devicesByFilteringAndSortingDevices:]
  -[WBSCloudTabStore deleteAllDevicesFromCloudKit]
  -[WBSCloudTabStore wbsDelegate]
  -[WBSCloudTabStore dateOfLastCloudTabDevicesUpdate]
  -[WBSCloudTabStore clearTabsForFirstDuplicateDeviceInCloudKitWithName:]
  -[WBSCloudTabStore _deviceWithTabsWithOutstandingCloseRequestsRemoved:closeRequestsForDevice:]
  -[WBSCloudTabStore syncAgentIsAvailable]
  -[WBSCloudTabStore createSyncedCloudTabDevicesAndCloseRequestsFromKVS]
  -[WBSCloudTabStore _keyValueStoreDictionaryRepresentation:]
  -[WBSCloudTabStore fetchSyncedCloudTabDevicesAndCloseRequestsFromCloudKit]
  -[WBSCloudTabStore pruneExpiredDevicesFromKVS]
  -[WBSCloudTabStore handleCloseTabRequestsFromKVS]
  -[WBSCloudTabStore saveCurrentCloudTabDeviceDictionaryToCloudKit:completionHandler:]
  -[WBSCloudTabStore _removeObjectFromKeyValueStore:forKey:]
  -[WBSCloudTabStore _tabWasClosed:onDevice:deviceIsStoredInCloudKit:syncedCloudTabDevices:]
  -[WBSCloudTabStore _currentDeviceUUID]
  -[WBSCloudTabStore pruneExpiredDevicesFromCloudKit]
  -[WBSCloudTabStore closeTab:onDevice:]
  -[WBSCloudTabStore _setDictionaryInKeyValueStore:dictionary:forKey:]


WBSCoalescedAsynchronousWriter : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSCoalescedAsynchronousWriterDelegate> *delegate

  // instance methods
  -[WBSCoalescedAsynchronousWriter _invalidateTimer]
  -[WBSCoalescedAsynchronousWriter startScheduledWriteNowWithCompletionHandler:]
  -[WBSCoalescedAsynchronousWriter _cancelPendingWriteSynchronouslyLeavingSuddenTerminationIntact]
  -[WBSCoalescedAsynchronousWriter _timerFired]
  -[WBSCoalescedAsynchronousWriter initWithName:fileURL:dataSourceBlock:]
  -[WBSCoalescedAsynchronousWriter initWithName:fileURL:dataSourceBlock:writeDelayInterval:]
  -[WBSCoalescedAsynchronousWriter _scheduleTimer]
  -[WBSCoalescedAsynchronousWriter cancelPendingWriteSynchronously]
  -[WBSCoalescedAsynchronousWriter .cxx_construct]
  -[WBSCoalescedAsynchronousWriter completePendingWriteSynchronously]
  -[WBSCoalescedAsynchronousWriter dealloc]
  -[WBSCoalescedAsynchronousWriter .cxx_destruct]
  -[WBSCoalescedAsynchronousWriter _writeData:]
  -[WBSCoalescedAsynchronousWriter _writeDataAsynchronously:completionHandler:]
  -[WBSCoalescedAsynchronousWriter scheduleWrite]
  -[WBSCoalescedAsynchronousWriter initWithName:writerBlock:dataSourceBlock:]
  -[WBSCoalescedAsynchronousWriter _dataFromDataSource]
  -[WBSCoalescedAsynchronousWriter setDelegate:]
  -[WBSCoalescedAsynchronousWriter initWithName:fileURL:dataSourceQueue:dataSourceBlock:]
  -[WBSCoalescedAsynchronousWriter _initWithName:fileURL:writerBlock:dataSourceQueue:dataSourceBlock:writeDelayInterval:]
  -[WBSCoalescedAsynchronousWriter delegate]
  -[WBSCoalescedAsynchronousWriter performScheduledWriteSynchronously]
  -[WBSCoalescedAsynchronousWriter initWithName:writerBlock:dataSourceQueue:dataSourceBlock:]
  -[WBSCoalescedAsynchronousWriter _waitForWriteCompletion]
  -[WBSCoalescedAsynchronousWriter startScheduledWriteNow]


WBSProcessProxyOverride : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSProcessProxyOverride overrideSystemHTTPProxy:HTTPSProxy:]
  +[WBSProcessProxyOverride overrideSystemProxiesIfNeeded:]


WBSUserAgentQuirksSnapshot : NSObject /usr/lib/libc++.1.dylib <WBSRemotePlistSnapshot>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSUserAgentQuirksSnapshot .cxx_destruct]
  -[WBSUserAgentQuirksSnapshot isEqual:]
  -[WBSUserAgentQuirksSnapshot quirkTypeForDomain:]
  -[WBSUserAgentQuirksSnapshot initWithPlistData:error:]
  -[WBSUserAgentQuirksSnapshot plistDataWithFormat:]


WBSCompletionQuery : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *parsecFeedbackQueryIdentifier
 @property  NSURLRequest *parsecSearchRequest
 @property  {time_point<std::__1::chrono::steady_clock timestamp
 @property  NSString *searchSuggestionProviderIdentifier
 @property  {duration<long long searchSuggestionProviderLatency
 @property  {duration<long long parsecLatency
 @property  unsigned long indexInFeedbackArray
 @property  NSString *queryString
 @property  NSString *normalizedQueryStringForParsec
 @property  BOOL forLastSearch
 @property  NSArray *querySuggestions
 @property  NSString *rewrittenQueryStringFromParsec
 @property  long long queryID
 @property  unsigned long triggerEvent

  // class methods
  +[WBSCompletionQuery currentQueryID]

  // instance methods
  -[WBSCompletionQuery triggerEvent]
  -[WBSCompletionQuery copyWithZone:]
  -[WBSCompletionQuery setTriggerEvent:]
  -[WBSCompletionQuery init]
  -[WBSCompletionQuery .cxx_construct]
  -[WBSCompletionQuery .cxx_destruct]
  -[WBSCompletionQuery timestamp]
  -[WBSCompletionQuery queryString]
  -[WBSCompletionQuery initWithQueryString:queryID:]
  -[WBSCompletionQuery initWithQueryString:queryID:triggerEvent:]
  -[WBSCompletionQuery _initWithQueryString:queryID:timestamp:indexInFeedbackArray:triggerEvent:]
  -[WBSCompletionQuery initWithQueryString:]
  -[WBSCompletionQuery isForLastSearch]
  -[WBSCompletionQuery initWithQueryString:triggerEvent:]
  -[WBSCompletionQuery normalizedQueryStringForParsec]
  -[WBSCompletionQuery setForLastSearch:]
  -[WBSCompletionQuery querySuggestions]
  -[WBSCompletionQuery setQuerySuggestions:]
  -[WBSCompletionQuery rewrittenQueryStringFromParsec]
  -[WBSCompletionQuery setRewrittenQueryStringFromParsec:]
  -[WBSCompletionQuery parsecFeedbackQueryIdentifier]
  -[WBSCompletionQuery setParsecFeedbackQueryIdentifier:]
  -[WBSCompletionQuery queryID]
  -[WBSCompletionQuery parsecSearchRequest]
  -[WBSCompletionQuery setParsecSearchRequest:]
  -[WBSCompletionQuery searchSuggestionProviderIdentifier]
  -[WBSCompletionQuery setSearchSuggestionProviderIdentifier:]
  -[WBSCompletionQuery searchSuggestionProviderLatency]
  -[WBSCompletionQuery setSearchSuggestionProviderLatency:]
  -[WBSCompletionQuery setParsecLatency:]
  -[WBSCompletionQuery indexInFeedbackArray]
  -[WBSCompletionQuery setIndexInFeedbackArray:]
  -[WBSCompletionQuery parsecLatency]


WBSContactAutoFillSet : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *controlIDToValueMap
 @property  NSString *label
 @property  NSArray *fillDisplayProperties
 @property  NSArray *skipDisplayProperties
 @property  NSSet *propertiesToFillOrSkip

  // class methods
  +[WBSContactAutoFillSet displayStringsForSkipMatches:matchesForForm:formDataController:]
  +[WBSContactAutoFillSet displayStringsForFillMatches:skipMatches:matchesForForm:label:formDataController:]

  // instance methods
  -[WBSContactAutoFillSet .cxx_destruct]
  -[WBSContactAutoFillSet label]
  -[WBSContactAutoFillSet controlIDToValueMap]
  -[WBSContactAutoFillSet fillDisplayProperties]
  -[WBSContactAutoFillSet skipDisplayProperties]
  -[WBSContactAutoFillSet propertiesToFillOrSkip]
  -[WBSContactAutoFillSet initWithControlIDToValueMap:label:fillDisplayProperties:skipDisplayProperties:propertiesToFillOrSkip:]


WBSContactsEntry : NSObject /usr/lib/libc++.1.dylib
 @property  CNContact *contact

  // class methods
  +[WBSContactsEntry _isValueAStringForContactsProperty:]
  +[WBSContactsEntry _valueStringForWBSComponent:inInstantMessageAddress:]
  +[WBSContactsEntry localizedWBSPropertyOrLabel:]
  +[WBSContactsEntry _isContactsProperty:]
  +[WBSContactsEntry _isContactsLabel:]
  +[WBSContactsEntry isWBSProxyProperty:]
  +[WBSContactsEntry _valueStringForValue:wbsProperty:wbsComponent:atIndex:]
  +[WBSContactsEntry _valueStringForValue:wbsProperty:wbsComponent:]
  +[WBSContactsEntry _valueStringForWBSComponent:inAddress:]

  // instance methods
  -[WBSContactsEntry fullName]
  -[WBSContactsEntry _numberOfValuesForWBSProperty:andContact:]
  -[WBSContactsEntry valueStringForWBSProperty:wbsComponent:atIndex:]
  -[WBSContactsEntry contact]
  -[WBSContactsEntry initWithContact:]
  -[WBSContactsEntry .cxx_destruct]
  -[WBSContactsEntry _numberOfValuesForWBSProperty:]
  -[WBSContactsEntry valueForWBSProxyProperty:]


WBSUserAgentQuirksSnapshotTransformer : WBSConfigurationDataTransformer /System/Library/PrivateFrameworks/Lexicon.framework/Lexicon
  // instance methods
  -[WBSUserAgentQuirksSnapshotTransformer objectFromData:]


WBSCloudHistoryServiceProxy : NSObject /usr/lib/libc++.1.dylib <WBSCloudHistoryServiceProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCloudHistoryServiceProxy _defaultProxyErrorHandlerWithSimpleReplyCompletionHandler:]
  -[WBSCloudHistoryServiceProxy initWithProxy:]
  -[WBSCloudHistoryServiceProxy fetchAndMergeChangesBypassingThrottler:completionHandler:]
  -[WBSCloudHistoryServiceProxy .cxx_destruct]
  -[WBSCloudHistoryServiceProxy updateConfiguration:completionHandler:]
  -[WBSCloudHistoryServiceProxy resetForAccountChangeWithCompletionHandler:]
  -[WBSCloudHistoryServiceProxy fetchDateOfNextPermittedSaveChangesAttemptWithCompletionHandler:]
  -[WBSCloudHistoryServiceProxy saveChangesBypassingThrottler:completionHandler:]


WBSContactsHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSContactsHelper WBSABKeyFromCNContactKey:]
  +[WBSContactsHelper CNContactKeyFromWBSABKey:]


WBSCredentialMatch : WBSFormAutoFillItem
 @property  NSURLCredential *credential
 @property  NSURLProtectionSpace *protectionSpace

  // instance methods
  -[WBSCredentialMatch credential]
  -[WBSCredentialMatch completion]
  -[WBSCredentialMatch initWithCredential:protectionSpace:]
  -[WBSCredentialMatch .cxx_destruct]
  -[WBSCredentialMatch protectionSpace]
  -[WBSCredentialMatch initWithCredential:]


WBSHistoryServiceDatabaseProxy : NSObject /usr/lib/libc++.1.dylib <WBSHistoryServiceDatabaseProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSHistoryServiceDatabaseProxy fetchAllTombstonesWithCompletionHandler:]
  -[WBSHistoryServiceDatabaseProxy vacuumHistoryWithCompletionHandler:]
  -[WBSHistoryServiceDatabaseProxy setMetadataValue:forKey:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy fetchWithOptions:predicate:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy replayAndAddTombstones:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy fetchAutocompleteTriggersForURLString:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy fetchDomainExpansions:]
  -[WBSHistoryServiceDatabaseProxy finishClearingHistoryIfNecessaryWithCompletionHandler:]
  -[WBSHistoryServiceDatabaseProxy recordVisitWithIdentifier:sourceVisit:title:wasHTTPNonGet:loadSuccessful:origin:attributes:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy clearHistoryVisitsAddedAfterDate:beforeDate:tombstoneMode:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy visitsAndTombstonesNeedingSyncWithVisitSyncWindow:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy fetchDatabaseURL:]
  -[WBSHistoryServiceDatabaseProxy updateWithType:addOrModifyObjects:updateCurrentGeneration:updateLastSyncGeneration:updateLastMaintenance:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy resetCloudHistoryDataWithCompletionHandler:]
  -[WBSHistoryServiceDatabaseProxy updateVisitWithIdentifier:title:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy setTitle:ofTagWithID:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy updateDatabaseAfterSuccessfulSyncWithGeneration:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy fetchCloudClientVersionTable:]
  -[WBSHistoryServiceDatabaseProxy createTagsForIdentifiers:withTitles:type:level:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy expireOldVisits:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy visitIdentifiersMatchingExistingVisits:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy addAutocompleteTrigger:forURL:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy flushWithCompletionHandler:]
  -[WBSHistoryServiceDatabaseProxy fetchMetadataForKeys:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy clearHistoryItems:afterDate:beforeDate:tombstoneMode:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy recomputeItemScoresWithCompletionHandler:]
  -[WBSHistoryServiceDatabaseProxy markEventsAsReceivedByListener:eventIDs:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy assignHistoryItemWithID:toTopicTagsWithIDs:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy pruneTombstonesWithEndDatePriorToDate:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy clearAllHistoryInsertingTombstoneUpToDate:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy performMaintenanceWithAgeLimit:itemCountLimit:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy updateVisitWithIdentifier:removeAttributes:addAttributes:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy checkIfLocalVisitExistsForDatabaseIDs:withCompletion:]
  -[WBSHistoryServiceDatabaseProxy fetchEventsForListener:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy setLastSeenDate:forCloudClientVersion:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy computeFrequentlyVisitedSites:minimalVisitCountScore:disallowList:allowList:options:currentTime:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy lastSeenDateForCloudClientVersion:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy dispatchEvent:listenersToIgnore:persistForDelayedDispatching:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy searchForUserTypedString:options:currentTime:writeHandle:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy _defaultProxyErrorHandlerWithSimpleReplyCompletionHandler:]
  -[WBSHistoryServiceDatabaseProxy convertTombstoneWithGenerationToSecureFormat:lastSyncedGeneration:completionHandler:]
  -[WBSHistoryServiceDatabaseProxy initWithProxy:]
  -[WBSHistoryServiceDatabaseProxy .cxx_destruct]
  -[WBSHistoryServiceDatabaseProxy close]
  -[WBSHistoryServiceDatabaseProxy isOpen]


WBSCreditCardData : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *cardName
 @property  NSString *cardholderName
 @property  NSString *cardNumber
 @property  NSDate *lastUsedDate
 @property  NSDate *expirationDate
 @property  NSString *cardSecurityCode
 @property  PKVirtualCard *virtualCard

  // instance methods
  -[WBSCreditCardData keychainRepresentation]
  -[WBSCreditCardData initWithCardName:number:cardholderName:expirationDate:securityCode:]
  -[WBSCreditCardData _expirationDateFromPKVirtualCard:]
  -[WBSCreditCardData initWithCardName:number:cardholderName:expirationDate:]
  -[WBSCreditCardData creditCardDataByUpdatingLastUsedDate:]
  -[WBSCreditCardData setCardNumber:]
  -[WBSCreditCardData initWithVirtualCardCredentials:virtualCard:]
  -[WBSCreditCardData initWithKeychainRepresentation:]
  -[WBSCreditCardData creditCardDataByMergingCardholderNameAndExpirationDateFromCard:]
  -[WBSCreditCardData hasSameCreditCardInformationAs:]
  -[WBSCreditCardData setCardName:]
  -[WBSCreditCardData .cxx_destruct]
  -[WBSCreditCardData cardSecurityCode]
  -[WBSCreditCardData cardName]
  -[WBSCreditCardData expirationDate]
  -[WBSCreditCardData lastUsedDate]
  -[WBSCreditCardData cardholderName]
  -[WBSCreditCardData setCardholderName:]
  -[WBSCreditCardData cardNumber]
  -[WBSCreditCardData initWithVirtualCard:]
  -[WBSCreditCardData virtualCard]
  -[WBSCreditCardData setLastUsedDate:]


WBSPasswordBreachChecker : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSPasswordBreachChecker .cxx_destruct]
  -[WBSPasswordBreachChecker _mergeResultsByUUID:intoResultsByPersistentIdentifier:usingQueuedPasswordsbyUUID:]
  -[WBSPasswordBreachChecker _checkLowFrequencyBatchesWithBagManager:completionHandler:]
  -[WBSPasswordBreachChecker initWithContext:bagManager:]
  -[WBSPasswordBreachChecker _checkHighFrequencyBucketForPasswords:withCompletionHandler:]
  -[WBSPasswordBreachChecker checkPasswordBatchesWithCompletionHandler:]


WBSHistoryServiceVisit : WBSHistoryServiceObject
 @property  long long itemID
 @property  NSString *title
 @property  double visitTime
 @property  BOOL loadSuccessful
 @property  BOOL httpNonGet
 @property  BOOL synthesized
 @property  long long redirectSource
 @property  long long redirectDestination
 @property  long long origin
 @property  long long generation
 @property  long long attributes
 @property  int score

  // class methods
  +[WBSHistoryServiceVisit supportsSecureCoding]

  // instance methods
  -[WBSHistoryServiceVisit setOrigin:]
  -[WBSHistoryServiceVisit setScore:]
  -[WBSHistoryServiceVisit origin]
  -[WBSHistoryServiceVisit redirectSource]
  -[WBSHistoryServiceVisit visitTime]
  -[WBSHistoryServiceVisit setRedirectDestination:]
  -[WBSHistoryServiceVisit .cxx_destruct]
  -[WBSHistoryServiceVisit setAttributes:]
  -[WBSHistoryServiceVisit redirectDestination]
  -[WBSHistoryServiceVisit attributes]
  -[WBSHistoryServiceVisit setTitle:]
  -[WBSHistoryServiceVisit encodeWithCoder:]
  -[WBSHistoryServiceVisit title]
  -[WBSHistoryServiceVisit httpNonGet]
  -[WBSHistoryServiceVisit synthesized]
  -[WBSHistoryServiceVisit _initWithDatabaseID:serviceVisit:]
  -[WBSHistoryServiceVisit initWithVisit:]
  -[WBSHistoryServiceVisit visitWithUpdatedID:updatedItemID:]
  -[WBSHistoryServiceVisit score]
  -[WBSHistoryServiceVisit itemID]
  -[WBSHistoryServiceVisit setGeneration:]
  -[WBSHistoryServiceVisit loadSuccessful]
  -[WBSHistoryServiceVisit generation]
  -[WBSHistoryServiceVisit setRedirectSource:]
  -[WBSHistoryServiceVisit initWithCoder:]


WBSPasswordBreachQueuedPassword : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *persistentIdentifiers
 @property  WBSPair *topBucketIdentiferAndHash
 @property  unsigned long remainingHashCount
 @property  NSDictionary *dictionaryRepresentation
 @property  NSData *highFrequencyEncodedPasswordData
 @property  NSUUID *uuid

  // instance methods
  -[WBSPasswordBreachQueuedPassword initWithDictionaryRepresentation:]
  -[WBSPasswordBreachQueuedPassword highFrequencyEncodedPasswordData]
  -[WBSPasswordBreachQueuedPassword uuid]
  -[WBSPasswordBreachQueuedPassword .cxx_destruct]
  -[WBSPasswordBreachQueuedPassword topBucketIdentiferAndHash]
  -[WBSPasswordBreachQueuedPassword persistentIdentifiers]
  -[WBSPasswordBreachQueuedPassword initFakePasswordWithContext:]
  -[WBSPasswordBreachQueuedPassword initWithCredentials:context:]
  -[WBSPasswordBreachQueuedPassword remainingHashCount]
  -[WBSPasswordBreachQueuedPassword removeTopBucketIdentifierAndHash]
  -[WBSPasswordBreachQueuedPassword pushBucketIdentifiersAndHashesFromQueuedPassword:]
  -[WBSPasswordBreachQueuedPassword dictionaryRepresentation]


WBSCreditCardDataController : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *creditCardData

  // class methods
  +[WBSCreditCardDataController hasCreditCardData]

  // instance methods
  -[WBSCreditCardDataController init]
  -[WBSCreditCardDataController .cxx_destruct]
  -[WBSCreditCardDataController savePendingChangesBeforeTermination]
  -[WBSCreditCardDataController _sortCreditCardDataArray:]
  -[WBSCreditCardDataController _creditCardData]
  -[WBSCreditCardDataController creditCardData]
  -[WBSCreditCardDataController _shouldOfferVirtualCards]
  -[WBSCreditCardDataController virtualCardFieldsToRequest]
  -[WBSCreditCardDataController _virtualCardDataFromPKVirtualCards:]
  -[WBSCreditCardDataController _deduplicatedVirtualCardDataArray:andCreditCardDataArray:]
  -[WBSCreditCardDataController hasUsedNonVirtualCard]
  -[WBSCreditCardDataController authenticationRequiredForVirtualCard:]
  -[WBSCreditCardDataController _neverSavedCreditCardSuffixFromCardNumber:]
  -[WBSCreditCardDataController shouldNeverSaveCardWithNumber:]
  -[WBSCreditCardDataController existingCardWithNumber:]
  -[WBSCreditCardDataController _uniqueCardNameForCardName:]
  -[WBSCreditCardDataController defaultNameForCardOfType:cardholderName:]
  -[WBSCreditCardDataController creditCardDataDidChange]
  -[WBSCreditCardDataController replaceCreditCardData:withCard:]
  -[WBSCreditCardDataController setHasUsedNonVirtualCard]
  -[WBSCreditCardDataController _removeNeverSaveCreditCardData:]
  -[WBSCreditCardDataController shouldAddCardWithNumber:]
  -[WBSCreditCardDataController saveCreditCardData:]
  -[WBSCreditCardDataController _neverSavedCreditCardSuffixFromCard:]
  -[WBSCreditCardDataController invalidateCreditCardData]
  -[WBSCreditCardDataController urlForVirtualCard:]
  -[WBSCreditCardDataController getCreditCardDataWithCompletionHandler:]
  -[WBSCreditCardDataController getVirtualCardsWithCompletionHandler:]
  -[WBSCreditCardDataController getVirtualCardCredentialsFromKeychainWithCompletionHandler:]
  -[WBSCreditCardDataController getCreditCardDataToFill:externalizedContext:completionHandler:]
  -[WBSCreditCardDataController savableCreditCardDataInForm:]
  -[WBSCreditCardDataController removeCreditCardData:]
  -[WBSCreditCardDataController markCreditCardDataAsMostRecentlyUsed:]
  -[WBSCreditCardDataController saveCreditCardDataIfAllowed:]
  -[WBSCreditCardDataController isCreditCardDataSaved:]
  -[WBSCreditCardDataController neverSaveCreditCardData:]
  -[WBSCreditCardDataController clearCreditCardData]
  -[WBSCreditCardDataController _testVirtualCard]
  -[WBSCreditCardDataController isVirtualCard:completion:]


WBSCreditCardFormatter : NSFormatter /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
 @property  BOOL showLastFourDigits
 @property  BOOL showCreditCardNumber
 @property  BOOL allowsUnknownCardTypes
 @property  BOOL isVirtualCard

  // instance methods
  -[WBSCreditCardFormatter stringForObjectValue:]
  -[WBSCreditCardFormatter isPartialStringValid:newEditingString:errorDescription:]
  -[WBSCreditCardFormatter showCreditCardNumber]
  -[WBSCreditCardFormatter _formattedStringForNormalizedNumber:showCreditCardNumber:]
  -[WBSCreditCardFormatter allowsUnknownCardTypes]
  -[WBSCreditCardFormatter _normalizedSelectionRangeForFormattedCreditCardNumber:withOriginalSelectionRange:]
  -[WBSCreditCardFormatter isVirtualCard]
  -[WBSCreditCardFormatter showLastFourDigits]
  -[WBSCreditCardFormatter setShowLastFourDigits:]
  -[WBSCreditCardFormatter _selectionRangeInFormattedCreditCardNumber:forNormalizedSelectionRange:inNormalizedCreditCardNumber:]
  -[WBSCreditCardFormatter setShowCreditCardNumber:]
  -[WBSCreditCardFormatter setAllowsUnknownCardTypes:]
  -[WBSCreditCardFormatter setIsVirtualCard:]
  -[WBSCreditCardFormatter getObjectValue:forString:errorDescription:]
  -[WBSCreditCardFormatter isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:]


WBSPasswordBreachKeychainCredentialSource : NSObject /usr/lib/libc++.1.dylib <WBSPasswordBreachCredentialSource>
 @property  NSArray *credentials

  // instance methods
  -[WBSPasswordBreachKeychainCredentialSource _shouldCheckCredential:]
  -[WBSPasswordBreachKeychainCredentialSource savedPasswordsForPersistentIdentifiers:]
  -[WBSPasswordBreachKeychainCredentialSource credentials]


WBSPasswordBreachHelper : NSObject /usr/lib/libc++.1.dylib <WBSPasswordBreachHelperProtocol>
  // instance methods
  -[WBSPasswordBreachHelper runLookupSessionIgnoringMinimumDelay:completionHandler:]
  -[WBSPasswordBreachHelper getResultRecordDictionariesForResultQueryDictionaries:withCompletionHandler:]
  -[WBSPasswordBreachHelper recentlyBreachedResultRecordDictionariesWithCompletionHandler:]
  -[WBSPasswordBreachHelper clearRecentlyBreachedResultRecordsWithCompletionHandler:]
  -[WBSPasswordBreachHelper addResultRecordDictionaries:completionHandler:]


WBSSafariSandboxBroker : NSObject /usr/lib/libc++.1.dylib <WBSSafariSandboxBrokerProtocol>
 @property  NSObject<OS_os_log> *log
 @property  int pid
 @property  {?=[8I]} auditToken

  // instance methods
  -[WBSSafariSandboxBroker auditToken]
  -[WBSSafariSandboxBroker log]
  -[WBSSafariSandboxBroker initWithPID:auditToken:]
  -[WBSSafariSandboxBroker .cxx_destruct]
  -[WBSSafariSandboxBroker pid]


WBSCyclerBookmarkLeafRepresentation : WBSCyclerBookmarkRepresentation
 @property  NSURL *url

  // class methods
  +[WBSCyclerBookmarkLeafRepresentation supportsSecureCoding]

  // instance methods
  -[WBSCyclerBookmarkLeafRepresentation copyWithZone:]
  -[WBSCyclerBookmarkLeafRepresentation url]
  -[WBSCyclerBookmarkLeafRepresentation initWithTitle:uniqueIdentifier:]
  -[WBSCyclerBookmarkLeafRepresentation initWithURL:title:uniqueIdentifier:]
  -[WBSCyclerBookmarkLeafRepresentation .cxx_destruct]
  -[WBSCyclerBookmarkLeafRepresentation encodeWithCoder:]
  -[WBSCyclerBookmarkLeafRepresentation setURL:]
  -[WBSCyclerBookmarkLeafRepresentation isEquivalent:]
  -[WBSCyclerBookmarkLeafRepresentation initWithCoder:]


WBSBrowserTabCompletionMatch : WBSTabCompletionMatch
 @property  NSUUID *tabUUID
 @property  NSUUID *windowUUID
 @property  unsigned long tabIndex

  // instance methods
  -[WBSBrowserTabCompletionMatch tabIndex]
  -[WBSBrowserTabCompletionMatch windowUUID]
  -[WBSBrowserTabCompletionMatch initWithTabUUID:windowUUID:tabIndex:userTypedString:tabURL:tabTitle:forQueryID:]
  -[WBSBrowserTabCompletionMatch .cxx_destruct]
  -[WBSBrowserTabCompletionMatch tabUUID]
  -[WBSBrowserTabCompletionMatch parsecDomainIdentifier]


WBSCyclerBookmarkListRepresentation : WBSCyclerBookmarkRepresentation <NSFastEnumeration>
 @property  unsigned long numberOfChildren

  // class methods
  +[WBSCyclerBookmarkListRepresentation supportsSecureCoding]

  // instance methods
  -[WBSCyclerBookmarkListRepresentation copyWithZone:]
  -[WBSCyclerBookmarkListRepresentation addChild:]
  -[WBSCyclerBookmarkListRepresentation numberOfChildren]
  -[WBSCyclerBookmarkListRepresentation initWithTitle:uniqueIdentifier:]
  -[WBSCyclerBookmarkListRepresentation _tryToDeleteDescendant:]
  -[WBSCyclerBookmarkListRepresentation containsChild:]
  -[WBSCyclerBookmarkListRepresentation deleteChild:]
  -[WBSCyclerBookmarkListRepresentation .cxx_destruct]
  -[WBSCyclerBookmarkListRepresentation childAtIndex:]
  -[WBSCyclerBookmarkListRepresentation pairsOfBookmarksWithDifferingExtraAttributesComparedTo:]
  -[WBSCyclerBookmarkListRepresentation containsDescendant:]
  -[WBSCyclerBookmarkListRepresentation descendantWithUniqueIdentifier:]
  -[WBSCyclerBookmarkListRepresentation allDescendantsPassingTest:]
  -[WBSCyclerBookmarkListRepresentation randomDescendantPassingTest:]
  -[WBSCyclerBookmarkListRepresentation insertChild:atIndex:]
  -[WBSCyclerBookmarkListRepresentation deleteDescendant:]
  -[WBSCyclerBookmarkListRepresentation deleteAllChildren]
  -[WBSCyclerBookmarkListRepresentation randomDescendant]
  -[WBSCyclerBookmarkListRepresentation randomListDescendant]
  -[WBSCyclerBookmarkListRepresentation encodeWithCoder:]
  -[WBSCyclerBookmarkListRepresentation countByEnumeratingWithState:objects:count:]
  -[WBSCyclerBookmarkListRepresentation isEquivalent:]
  -[WBSCyclerBookmarkListRepresentation initWithCoder:]


WBSCyclerBookmarkOperationContext : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSCyclerTestTarget> *testTarget
 @property  WBSCyclerBookmarkListRepresentation *topLevelBookmark
 @property  NSString *titlePrefix

  // instance methods
  -[WBSCyclerBookmarkOperationContext .cxx_destruct]
  -[WBSCyclerBookmarkOperationContext setTitlePrefix:]
  -[WBSCyclerBookmarkOperationContext _isBookmarkPrefixed:]
  -[WBSCyclerBookmarkOperationContext _buildDictionaryOfDescendantIdentifiersToParentIdentifiersFromList:]
  -[WBSCyclerBookmarkOperationContext _copyBookmark:filteringWithIdentifierWhitelist:]
  -[WBSCyclerBookmarkOperationContext _isBookmarkValid:]
  -[WBSCyclerBookmarkOperationContext randomDescendantOfList:enforcingTitlePrefixValidity:passingTest:]
  -[WBSCyclerBookmarkOperationContext randomValidStrictDescendantOfList:]
  -[WBSCyclerBookmarkOperationContext filterOutBookmarksWithoutTitlePrefixInList:]
  -[WBSCyclerBookmarkOperationContext randomBookmarkTitle]
  -[WBSCyclerBookmarkOperationContext randomValidStrictDescendantOfTopLevelBookmark]
  -[WBSCyclerBookmarkOperationContext testTarget]
  -[WBSCyclerBookmarkOperationContext setTestTarget:]
  -[WBSCyclerBookmarkOperationContext topLevelBookmark]
  -[WBSCyclerBookmarkOperationContext setTopLevelBookmark:]
  -[WBSCyclerBookmarkOperationContext titlePrefix]


WBSCyclerBookmarkRepresentation : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *uniqueIdentifier
 @property  NSString *title
 @property  NSDictionary *extraAttributes

  // class methods
  +[WBSCyclerBookmarkRepresentation supportsSecureCoding]

  // instance methods
  -[WBSCyclerBookmarkRepresentation setUniqueIdentifier:]
  -[WBSCyclerBookmarkRepresentation copyWithZone:]
  -[WBSCyclerBookmarkRepresentation init]
  -[WBSCyclerBookmarkRepresentation extraAttributes]
  -[WBSCyclerBookmarkRepresentation initWithTitle:uniqueIdentifier:]
  -[WBSCyclerBookmarkRepresentation .cxx_destruct]
  -[WBSCyclerBookmarkRepresentation setExtraAttributes:]
  -[WBSCyclerBookmarkRepresentation pairsOfBookmarksWithDifferingExtraAttributesComparedTo:]
  -[WBSCyclerBookmarkRepresentation setTitle:]
  -[WBSCyclerBookmarkRepresentation encodeWithCoder:]
  -[WBSCyclerBookmarkRepresentation uniqueIdentifier]
  -[WBSCyclerBookmarkRepresentation title]
  -[WBSCyclerBookmarkRepresentation isEquivalent:]
  -[WBSCyclerBookmarkRepresentation initWithCoder:]


WBSHistoryServiceStore : NSObject /usr/lib/libc++.1.dylib <WBSHistoryConnectionProxyDelegate, WBSHistoryStore, WBSHistoryServiceDatabaseDelegate>
 @property  <WBSHistoryStoreDelegate> *delegate
 @property  double historyAgeLimit
 @property  WBSHistoryCrypto *crypto
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isUsingInMemoryDatabase

  // instance methods
  -[WBSHistoryServiceStore reportPermanentIDsForVisits:completionHandler:]
  -[WBSHistoryServiceStore vacuumHistoryWithCompletionHandler:]
  -[WBSHistoryServiceStore replayAndAddTombstones:completionHandler:]
  -[WBSHistoryServiceStore waitForLoadingToComplete]
  -[WBSHistoryServiceStore computeFrequentlyVisitedSites:minimalVisitCountScore:disallowList:allowList:options:currentTime:completionHandler:]
  -[WBSHistoryServiceStore _fetchVisitsOnDatabaseQueue:predicate:error:]
  -[WBSHistoryServiceStore searchForUserTypedString:options:currentTime:enumerationBlock:completionHandler:]
  -[WBSHistoryServiceStore reportSevereError:completionHandler:]
  -[WBSHistoryServiceStore _setLastSyncedGeneration:]
  -[WBSHistoryServiceStore performMaintenance:]
  -[WBSHistoryServiceStore getAutocompleteTriggersForItem:completionHandler:]
  -[WBSHistoryServiceStore reportPermanentIDsForItems:completionHandler:]
  -[WBSHistoryServiceStore handleEvent:completionHandler:]
  -[WBSHistoryServiceStore _ageLimitSinceReferenceDate]
  -[WBSHistoryServiceStore _evaluateWithOptionsOnDatabaseQueue:predicate:completionHandler:]
  -[WBSHistoryServiceStore _setMetadataValue:forKey:group:]
  -[WBSHistoryServiceStore _processPendingWrites]
  -[WBSHistoryServiceStore _addOrUpdateItemsOnDatabaseQueue:userInitiated:]
  -[WBSHistoryServiceStore _updateDatabaseAfterSuccessfulSyncWithGeneration:convertTombstonesToSecureFormat:]
  -[WBSHistoryServiceStore .cxx_construct]
  -[WBSHistoryServiceStore _databaseFetchWithOptions:predicate:completionHandler:]
  -[WBSHistoryServiceStore dealloc]
  -[WBSHistoryServiceStore _fetchWithOptionsOnDatabaseQueue:predicate:completionHandler:]
  -[WBSHistoryServiceStore enumerateLastVisitForItemsOnDatabaseQueue:ignoringVisits:enumerationBlock:]
  -[WBSHistoryServiceStore clearHistoryVisitsAddedAfterDate:beforeDate:completionHandler:]
  -[WBSHistoryServiceStore _ensureVisitHasID:]
  -[WBSHistoryServiceStore .cxx_destruct]
  -[WBSHistoryServiceStore _fetchTags:fromStartDate:toEndDate:withIdentifiers:limit:minimumItemCount:sortOrder:completionHandler:]
  -[WBSHistoryServiceStore _connectWithOptions:completionHandler:]
  -[WBSHistoryServiceStore pruneTombstonesWithEndDatePriorToDate:]
  -[WBSHistoryServiceStore visitTitleWasUpdated:]
  -[WBSHistoryServiceStore getAllTombstonesWithCompletion:]
  -[WBSHistoryServiceStore initWithURL:itemCountLimit:historyAgeLimit:historyItemClass:]
  -[WBSHistoryServiceStore _loadOnDatabaseQueue:readHandle:]
  -[WBSHistoryServiceStore initializeCloudHistoryWithConfiguration:completionHandler:]
  -[WBSHistoryServiceStore _load]
  -[WBSHistoryServiceStore _recomputeDerivedVisitCountScores]
  -[WBSHistoryServiceStore visitIdentifiersMatchingExistingVisits:populateAssociatedVisits:completion:]
  -[WBSHistoryServiceStore _scheduleSendDeltaToService]
  -[WBSHistoryServiceStore _fetchWithOptions:predicate:completionHandler:]
  -[WBSHistoryServiceStore setHistoryAgeLimit:]
  -[WBSHistoryServiceStore crypto]
  -[WBSHistoryServiceStore updateHistoryAfterSuccessfulPersistedLongLivedSaveOperationWithGeneration:completion:]
  -[WBSHistoryServiceStore setLastSeenDate:forCloudClientVersion:]
  -[WBSHistoryServiceStore checkIfLocalVisitExistsInAnyOfItems:withCompletion:]
  -[WBSHistoryServiceStore _scheduleImmediateDeltaToService]
  -[WBSHistoryServiceStore startLoading]
  -[WBSHistoryServiceStore _incrementCurrentGeneration]
  -[WBSHistoryServiceStore addAutocompleteTrigger:forItem:]
  -[WBSHistoryServiceStore _enumerateVisitsGroupedByItem:enumerationBlock:]
  -[WBSHistoryServiceStore allVisitsForItemsOnDatabaseQueue:]
  -[WBSHistoryServiceStore shouldEmitLegacyTombstones]
  -[WBSHistoryServiceStore releaseCloudHistory:]
  -[WBSHistoryServiceStore _scheduleMaintenance]
  -[WBSHistoryServiceStore assignHistoryItem:toTopicTags:completionHandler:]
  -[WBSHistoryServiceStore _lastSeenDateForCloudClientVersionOnDatabaseQueue:]
  -[WBSHistoryServiceStore fetchTopicsFromStartDate:toEndDate:completionHandler:]
  -[WBSHistoryServiceStore _shouldEmitLegacyTombstones]
  -[WBSHistoryServiceStore fetchTopicsFromStartDate:toEndDate:limit:minimumItemCount:sortOrder:completionHandler:]
  -[WBSHistoryServiceStore historyAgeLimit]
  -[WBSHistoryServiceStore addOrUpdateItemsOnDatabaseQueue:]
  -[WBSHistoryServiceStore getVisitsCreatedAfterDate:beforeDate:completionHandler:]
  -[WBSHistoryServiceStore _createTagsForIdentifiers:withTitles:type:level:completionHandler:]
  -[WBSHistoryServiceStore closeWithCompletionHandler:]
  -[WBSHistoryServiceStore _performMaintenance:]
  -[WBSHistoryServiceStore setServerChangeTokenData:]
  -[WBSHistoryServiceStore isUsingInMemoryDatabase]
  -[WBSHistoryServiceStore visitsWereModified:]
  -[WBSHistoryServiceStore clearHistoryWithCompletionHandler:]
  -[WBSHistoryServiceStore _waitForDatabase:]
  -[WBSHistoryServiceStore _fetchHistoryItemsForTopics:fromStartDate:toEndDate:completionHandler:]
  -[WBSHistoryServiceStore _convertTombstoneWithGenerationToSecureFormat:]
  -[WBSHistoryServiceStore setDelegate:]
  -[WBSHistoryServiceStore itemWasReplaced:byItem:]
  -[WBSHistoryServiceStore getVisitsAndTombstonesNeedingSyncWithVisitSyncWindow:completion:]
  -[WBSHistoryServiceStore visitsWereAdded:]
  -[WBSHistoryServiceStore tagsWithIdentifiers:type:level:creatingIfNecessary:withTitles:completionHandler:]
  -[WBSHistoryServiceStore connectionProxyConnectionWasInterrupted:]
  -[WBSHistoryServiceStore _generateTemporaryDatabaseID]
  -[WBSHistoryServiceStore _ensureItemHasID:]
  -[WBSHistoryServiceStore getServerChangeTokenDataWithCompletion:]
  -[WBSHistoryServiceStore initWithURL:itemCountLimit:historyAgeLimit:historyItemClass:connectionProxy:]
  -[WBSHistoryServiceStore delegate]
  -[WBSHistoryServiceStore removePastHistoryVisitsForItem:completionHandler:]
  -[WBSHistoryServiceStore itemsWereModified:byUserInitiatedAction:]
  -[WBSHistoryServiceStore enumeratePriorVisitsInRedirectChainOnDatabaseQueue:items:enumerationBlock:]
  -[WBSHistoryServiceStore lastSeenDateForCloudClientVersion:]
  -[WBSHistoryServiceStore itemsWereAdded:byUserInitiatedAction:]
  -[WBSHistoryServiceStore _connectOptions]
  -[WBSHistoryServiceStore enumerateSubsequentVisitsInRedirectChainOnDatabaseQueue:items:enumerationBlock:]
  -[WBSHistoryServiceStore _updateGenerationForVisits:]
  -[WBSHistoryServiceStore _expireOldVisits]
  -[WBSHistoryServiceStore _fetchGroupedVisitsOnDatabaseQueue:predicate:enumerationBlock:]
  -[WBSHistoryServiceStore setTitle:ofTag:completionHandler:]
  -[WBSHistoryServiceStore _processPendingWrites:completionHandler:]


WBSPasswordBreachManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSPasswordBreachManager testableManagerWithTestCredentialSource:store:configuration:]
  +[WBSPasswordBreachManager getSharedManagerWithCompletionHandler:]
  +[WBSPasswordBreachManager _getStandardContextWithCompletionHandler:]
  +[WBSPasswordBreachManager isPasswordBreachDetectionOn]
  +[WBSPasswordBreachManager setPasswordBreachDetectionOn:]

  // instance methods
  -[WBSPasswordBreachManager performNextSessionLookupIgnoringMinimumDelay:completionHandler:]
  -[WBSPasswordBreachManager resultRecordsForQueries:]
  -[WBSPasswordBreachManager recentlyBreachedResultRecords]
  -[WBSPasswordBreachManager clearRecentlyBreachedResultRecords]
  -[WBSPasswordBreachManager addResultRecords:]
  -[WBSPasswordBreachManager .cxx_destruct]
  -[WBSPasswordBreachManager _checker]
  -[WBSPasswordBreachManager initWithContext:credentialSource:]
  -[WBSPasswordBreachManager _canPerformSessionIgnoringMinimumDelay:]
  -[WBSPasswordBreachManager recentlyBreachedSavedPasswords]
  -[WBSPasswordBreachManager _completeSessionWithResults:completionHandler:]
  -[WBSPasswordBreachManager _addRecentlyBreachedNotificationIfNecessaryWithCompletionHandler:]


WBSCyclerBookmarksTestSuite : NSObject /usr/lib/libc++.1.dylib <WBSCyclerTestSuite>
 @property  BOOL finished
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSCyclerBookmarksTestSuite setValue:forConfigurationKey:]

  // instance methods
  -[WBSCyclerBookmarksTestSuite _validateServerBookmarksWithTarget:completionHandler:]
  -[WBSCyclerBookmarksTestSuite _errorWithCode:userInfo:]
  -[WBSCyclerBookmarksTestSuite init]
  -[WBSCyclerBookmarksTestSuite _validateServerBookmarksAfterInitialSyncWithTarget:completionHandler:]
  -[WBSCyclerBookmarksTestSuite _validateServerBookmarksWithTarget:initialBookmarks:completionHandler:]
  -[WBSCyclerBookmarksTestSuite _validateServerBookmarksAfterClearingLocallyWithTarget:initialBookmarks:completionHandler:]
  -[WBSCyclerBookmarksTestSuite _performCloudKitSecondaryMigrationAfterClearingBookmarksWithTarget:initialBookmarks:completionHandler:]
  -[WBSCyclerBookmarksTestSuite _performFinalServerBookmarkValidationAfterClearingAndSyncingWithInitialBookmarks:completionHandler:]
  -[WBSCyclerBookmarksTestSuite runWithTarget:completionHandler:]
  -[WBSCyclerBookmarksTestSuite handleRequest:withTarget:completionHandler:]
  -[WBSCyclerBookmarksTestSuite setUp]
  -[WBSCyclerBookmarksTestSuite .cxx_destruct]
  -[WBSCyclerBookmarksTestSuite isFinished]
  -[WBSCyclerBookmarksTestSuite _descriptionForErrorCode:]
  -[WBSCyclerBookmarksTestSuite tearDown]
  -[WBSCyclerBookmarksTestSuite canHandleRequest:]


WBSCyclerCloudKitMigrationTestSuite : NSObject /usr/lib/libc++.1.dylib <WBSCyclerTestSuite>
 @property  BOOL finished
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSCyclerCloudKitMigrationTestSuite setValue:forConfigurationKey:]

  // instance methods
  -[WBSCyclerCloudKitMigrationTestSuite init]
  -[WBSCyclerCloudKitMigrationTestSuite runWithTarget:completionHandler:]
  -[WBSCyclerCloudKitMigrationTestSuite _errorWithCode:]
  -[WBSCyclerCloudKitMigrationTestSuite _createRandomBookmarkWithTarget:completionHandler:]
  -[WBSCyclerCloudKitMigrationTestSuite _generateDAVServerIDsForExistingBookmarksWithTarget:completionHandler:]
  -[WBSCyclerCloudKitMigrationTestSuite _migrateToCloudKitWithTarget:completionHandler:]
  -[WBSCyclerCloudKitMigrationTestSuite _validateResultsOfMigrationWithTarget:completionHandler:]
  -[WBSCyclerCloudKitMigrationTestSuite _fetchBookmarksPriorToMigrationWithTarget:completionHandler:]
  -[WBSCyclerCloudKitMigrationTestSuite .cxx_destruct]
  -[WBSCyclerCloudKitMigrationTestSuite isFinished]
  -[WBSCyclerCloudKitMigrationTestSuite _descriptionForErrorCode:]


WBSPasswordWarning : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long severityScore
 @property  WBSSavedPassword *password
 @property  unsigned long issueTypes
 @property  unsigned long severity
 @property  unsigned long hashForUserAcknowlegement
 @property  BOOL shouldShowWarningsWhenLoggingIn
 @property  NSString *localizedShortDescription
 @property  NSString *localizedTitleForWarningWhenLoggingIn
 @property  NSString *localizedInformationTextForWarningWhenLoggingIn

  // instance methods
  -[WBSPasswordWarning password]
  -[WBSPasswordWarning compare:]
  -[WBSPasswordWarning shouldShowWarningsWhenLoggingIn]
  -[WBSPasswordWarning localizedLongDescriptionForClient:]
  -[WBSPasswordWarning setSeverityScore:]
  -[WBSPasswordWarning .cxx_destruct]
  -[WBSPasswordWarning initWithPassword:issueTypes:weakPasswordEvaluation:longDescriptionStrings:shortDescription:]
  -[WBSPasswordWarning localizedTitleForWarningWhenLoggingIn]
  -[WBSPasswordWarning localizedInformationTextForWarningWhenLoggingIn]
  -[WBSPasswordWarning hashForUserAcknowlegement]
  -[WBSPasswordWarning localizedShortDescription]
  -[WBSPasswordWarning severity]
  -[WBSPasswordWarning severityScore]
  -[WBSPasswordWarning issueTypes]


WBSPerSitePreferenceTimeout : NSObject /usr/lib/libc++.1.dylib
 @property  double interval
 @property  id fallbackValue

  // class methods
  +[WBSPerSitePreferenceTimeout timeoutWithInterval:fallbackValue:]

  // instance methods
  -[WBSPerSitePreferenceTimeout interval]
  -[WBSPerSitePreferenceTimeout .cxx_destruct]
  -[WBSPerSitePreferenceTimeout initWithInterval:fallbackValue:]
  -[WBSPerSitePreferenceTimeout fallbackValue]


WBSPerSitePreferenceManager : NSObject /usr/lib/libc++.1.dylib <WBSPerSitePreferenceManager>
 @property  <WBSPerSitePreferenceManagerStorageDelegate> *storageDelegate
 @property  <WBSPerSitePreferenceManagerDefaultsDelegate> *defaultsDelegate
 @property  <WBSPerSitePreferenceManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSPerSitePreferenceManager removePreferenceValuesForDomains:fromPreference:completionHandler:]
  -[WBSPerSitePreferenceManager setStorageDelegate:]
  -[WBSPerSitePreferenceManager setDefaultsDelegate:]
  -[WBSPerSitePreferenceManager setDefaultValue:ofPreference:completionHandler:]
  -[WBSPerSitePreferenceManager preferences]
  -[WBSPerSitePreferenceManager .cxx_destruct]
  -[WBSPerSitePreferenceManager valuesForPreference:]
  -[WBSPerSitePreferenceManager storageDelegate]
  -[WBSPerSitePreferenceManager _validatePreferenceValue:inPreference:]
  -[WBSPerSitePreferenceManager _recursivelySetDefaultPreferenceValues:orderedKeys:currentIndex:existingResult:completionHandler:]
  -[WBSPerSitePreferenceManager setDefaultPreferenceValues:completionHandler:]
  -[WBSPerSitePreferenceManager defaultsDelegate]
  -[WBSPerSitePreferenceManager getDefaultPreferenceValueForPreference:completionHandler:]
  -[WBSPerSitePreferenceManager getAllDomainsConfiguredForPreference:usingBlock:]
  -[WBSPerSitePreferenceManager getValueOfPreference:forDomain:withTimeout:usingBlock:]
  -[WBSPerSitePreferenceManager setDelegate:]
  -[WBSPerSitePreferenceManager localizedStringForValue:inPreference:]
  -[WBSPerSitePreferenceManager setValue:ofPreference:forDomain:completionHandler:]
  -[WBSPerSitePreferenceManager delegate]
  -[WBSPerSitePreferenceManager didUpdatePreference:toValue:forDomain:]


WBSCyclerConnectionManager : NSObject /usr/lib/libc++.1.dylib <NSXPCListenerDelegate>
 @property  <WBSCyclerTestTarget> *testTarget
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSCyclerConnectionManager isCyclerEnabled]

  // instance methods
  -[WBSCyclerConnectionManager connect]
  -[WBSCyclerConnectionManager init]
  -[WBSCyclerConnectionManager .cxx_destruct]
  -[WBSCyclerConnectionManager testTarget]
  -[WBSCyclerConnectionManager listener:shouldAcceptNewConnection:]
  -[WBSCyclerConnectionManager initWithTestTarget:]


WBSCyclerCreateBookmarkOperation : NSObject /usr/lib/libc++.1.dylib <WBSCyclerBookmarkOperation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCyclerCreateBookmarkOperation executeWithContext:completionHandler:]
  -[WBSCyclerCreateBookmarkOperation _createRandomLeafWithContext:completionHandler:]
  -[WBSCyclerCreateBookmarkOperation _createRandomListWithContext:completionHandler:]
  -[WBSCyclerCreateBookmarkOperation _randomListWithContext:]


WBSSearchImpressionAnalyticsRecorder : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *searchProviders
 @property  WBSSearchProvider *defaultSearchProvider

  // class methods
  +[WBSSearchImpressionAnalyticsRecorder sharedRecorder]

  // instance methods
  -[WBSSearchImpressionAnalyticsRecorder init]
  -[WBSSearchImpressionAnalyticsRecorder setSearchProviders:]
  -[WBSSearchImpressionAnalyticsRecorder .cxx_destruct]
  -[WBSSearchImpressionAnalyticsRecorder defaultSearchProvider]
  -[WBSSearchImpressionAnalyticsRecorder didActualizeImpressionForURL:provenance:]
  -[WBSSearchImpressionAnalyticsRecorder searchProviderForURL:]
  -[WBSSearchImpressionAnalyticsRecorder searchProviders]
  -[WBSSearchImpressionAnalyticsRecorder setDefaultSearchProvider:]


WBSCyclerDeleteBookmarkOperation : NSObject /usr/lib/libc++.1.dylib <WBSCyclerBookmarkOperation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCyclerDeleteBookmarkOperation executeWithContext:completionHandler:]


WBSPerSitePreference : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *identifier

  // class methods
  +[WBSPerSitePreference localizedStringForBinaryPreferenceValue:]

  // instance methods
  -[WBSPerSitePreference copyWithZone:]
  -[WBSPerSitePreference .cxx_destruct]
  -[WBSPerSitePreference initWithIdentifier:]
  -[WBSPerSitePreference identifier]
  -[WBSPerSitePreference isEqual:]


WBSCyclerModifyBookmarkOperation : NSObject /usr/lib/libc++.1.dylib <WBSCyclerBookmarkOperation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCyclerModifyBookmarkOperation executeWithContext:completionHandler:]
  -[WBSCyclerModifyBookmarkOperation _changeTitleOfBookmark:withContext:completionHandler:]
  -[WBSCyclerModifyBookmarkOperation _changeURLOfBookmark:withContext:completionHandler:]


WBSCyclerMoveBookmarkOperation : NSObject /usr/lib/libc++.1.dylib <WBSCyclerBookmarkOperation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCyclerMoveBookmarkOperation executeWithContext:completionHandler:]


WBSCyclerOperation : NSObject /usr/lib/libc++.1.dylib
 @property  @? block
 @property  BOOL finished
 @property  BOOL executing
 @property  double nextBackoffTimeInterval

  // instance methods
  -[WBSCyclerOperation init]
  -[WBSCyclerOperation .cxx_destruct]
  -[WBSCyclerOperation block]
  -[WBSCyclerOperation setBlock:]
  -[WBSCyclerOperation isExecuting]
  -[WBSCyclerOperation isFinished]
  -[WBSCyclerOperation executeWithCompletionHandler:]
  -[WBSCyclerOperation nextBackoffTimeInterval]
  -[WBSCyclerOperation initWithMaximumNumberOfAttempts:backoffRatio:]


WBSPasswordImportedCredential : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSString *user
 @property  NSString *password
 @property  NSURL *url

  // class methods
  +[WBSPasswordImportedCredential supportsSecureCoding]

  // instance methods
  -[WBSPasswordImportedCredential user]
  -[WBSPasswordImportedCredential password]
  -[WBSPasswordImportedCredential init]
  -[WBSPasswordImportedCredential url]
  -[WBSPasswordImportedCredential .cxx_destruct]
  -[WBSPasswordImportedCredential encodeWithCoder:]
  -[WBSPasswordImportedCredential initWithUser:password:url:]
  -[WBSPasswordImportedCredential isEqual:]
  -[WBSPasswordImportedCredential urlCredentialWithPersistence:]
  -[WBSPasswordImportedCredential encryptedURLCredentialWithPersistence:]
  -[WBSPasswordImportedCredential initWithCoder:]


WBSCyclerRandomnessUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSCyclerRandomnessUtilities seed]
  +[WBSCyclerRandomnessUtilities initialize]
  +[WBSCyclerRandomnessUtilities reseed]
  +[WBSCyclerRandomnessUtilities randomElementOfArray:relativeProbabilities:]
  +[WBSCyclerRandomnessUtilities randomElementOfArray:]
  +[WBSCyclerRandomnessUtilities randomURL]
  +[WBSCyclerRandomnessUtilities randomIntegerWithUpperBound:]
  +[WBSCyclerRandomnessUtilities randomString]
  +[WBSCyclerRandomnessUtilities _randomStringWithCharactersFromString:]
  +[WBSCyclerRandomnessUtilities setSeed:]


WBSTabDialogCancellationExemption : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSTabDialogCancellationExemption provisionalNavigationExemption]
  +[WBSTabDialogCancellationExemption committedNavigationExemption]
  +[WBSTabDialogCancellationExemption sameOriginNavigationExemption:]

  // instance methods
  -[WBSTabDialogCancellationExemption init]
  -[WBSTabDialogCancellationExemption .cxx_destruct]
  -[WBSTabDialogCancellationExemption initWithCancellationHandler:]
  -[WBSTabDialogCancellationExemption isExemptFromCancellationInContext:]


WBSCyclerService : NSObject /usr/lib/libc++.1.dylib <NSXPCListenerDelegate, WBSCyclerServiceProtocol>
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCyclerService init]
  -[WBSCyclerService _errorWithCode:]
  -[WBSCyclerService .cxx_destruct]
  -[WBSCyclerService setTestTargetEndpoint:reply:]
  -[WBSCyclerService setIdentifier:]
  -[WBSCyclerService identifier]
  -[WBSCyclerService listener:shouldAcceptNewConnection:]
  -[WBSCyclerService _descriptionForErrorCode:]
  -[WBSCyclerService _postFinishNotificationWithError:]
  -[WBSCyclerService _setTestSuiteName:reply:]
  -[WBSCyclerService _setSeed:reply:]
  -[WBSCyclerService _startCyclingFromBeginning:]
  -[WBSCyclerService setValue:forConfigurationKey:reply:]
  -[WBSCyclerService stopCyclingWithReply:]
  -[WBSCyclerService startCyclingFromBeginning:reply:]
  -[WBSCyclerService sendRequestToTestSuite:reply:]
  -[WBSCyclerService fetchStatusWithReply:]


WBSCyclerServiceProxy : NSObject /usr/lib/libc++.1.dylib <WBSCyclerServiceProtocol>
 @property  @? connectionInvalidationHandler
 @property  @? errorHandler

  // instance methods
  -[WBSCyclerServiceProxy init]
  -[WBSCyclerServiceProxy errorHandler]
  -[WBSCyclerServiceProxy dealloc]
  -[WBSCyclerServiceProxy setErrorHandler:]
  -[WBSCyclerServiceProxy .cxx_destruct]
  -[WBSCyclerServiceProxy setTestTargetEndpoint:reply:]
  -[WBSCyclerServiceProxy _cyclerProxy]
  -[WBSCyclerServiceProxy setValue:forConfigurationKey:reply:]
  -[WBSCyclerServiceProxy stopCyclingWithReply:]
  -[WBSCyclerServiceProxy startCyclingFromBeginning:reply:]
  -[WBSCyclerServiceProxy sendRequestToTestSuite:reply:]
  -[WBSCyclerServiceProxy fetchStatusWithReply:]
  -[WBSCyclerServiceProxy connectionInvalidationHandler]
  -[WBSCyclerServiceProxy setConnectionInvalidationHandler:]


WBSHistoryServicePendingVisit : NSObject /usr/lib/libc++.1.dylib
 @property  WBSHistoryVisitIdentifier *visitIdentifier
 @property  unsigned long operation
 @property  WBSHistoryVisitIdentifier *sourceVisitIdentifier
 @property  NSString *title
 @property  BOOL wasHTTPNonGet
 @property  BOOL loadSuccessful
 @property  long long origin
 @property  unsigned long attributes
 @property  NSString *urlString
 @property  double visitTime
 @property  unsigned long score

  // instance methods
  -[WBSHistoryServicePendingVisit setOrigin:]
  -[WBSHistoryServicePendingVisit setOperation:]
  -[WBSHistoryServicePendingVisit operation]
  -[WBSHistoryServicePendingVisit origin]
  -[WBSHistoryServicePendingVisit visitTime]
  -[WBSHistoryServicePendingVisit .cxx_destruct]
  -[WBSHistoryServicePendingVisit setAttributes:]
  -[WBSHistoryServicePendingVisit wasHTTPNonGet]
  -[WBSHistoryServicePendingVisit attributes]
  -[WBSHistoryServicePendingVisit setTitle:]
  -[WBSHistoryServicePendingVisit urlString]
  -[WBSHistoryServicePendingVisit visitIdentifier]
  -[WBSHistoryServicePendingVisit title]
  -[WBSHistoryServicePendingVisit score]
  -[WBSHistoryServicePendingVisit loadSuccessful]
  -[WBSHistoryServicePendingVisit sourceVisitIdentifier]
  -[WBSHistoryServicePendingVisit initWithWithVisitIdentifier:]
  -[WBSHistoryServicePendingVisit setSourceVisitIdentifier:]
  -[WBSHistoryServicePendingVisit setWasHTTPNonGet:]
  -[WBSHistoryServicePendingVisit setLoadSuccessful:]


WBSCyclerStatus : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSString *activeTestSuiteName
 @property  unsigned long seed
 @property  BOOL connectedToTestTarget
 @property  BOOL running

  // class methods
  +[WBSCyclerStatus supportsSecureCoding]

  // instance methods
  -[WBSCyclerStatus seed]
  -[WBSCyclerStatus init]
  -[WBSCyclerStatus .cxx_destruct]
  -[WBSCyclerStatus encodeWithCoder:]
  -[WBSCyclerStatus isRunning]
  -[WBSCyclerStatus initWithActiveTestSuiteName:seed:isConnectedToTestTarget:isRunning:]
  -[WBSCyclerStatus activeTestSuiteName]
  -[WBSCyclerStatus isConnectedToTestTarget]
  -[WBSCyclerStatus initWithCoder:]


WBSCyclerTestRunner : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSCyclerTestSuite> *testSuite
 @property  <WBSCyclerTestTarget> *target
 @property  BOOL running

  // instance methods
  -[WBSCyclerTestRunner init]
  -[WBSCyclerTestRunner requestStop]
  -[WBSCyclerTestRunner target]
  -[WBSCyclerTestRunner _errorWithCode:]
  -[WBSCyclerTestRunner dealloc]
  -[WBSCyclerTestRunner .cxx_destruct]
  -[WBSCyclerTestRunner _stop]
  -[WBSCyclerTestRunner runWithCompletionHandler:]
  -[WBSCyclerTestRunner testSuite]
  -[WBSCyclerTestRunner _descriptionForErrorCode:]
  -[WBSCyclerTestRunner isRunning]
  -[WBSCyclerTestRunner handleRequest:completionHandler:]
  -[WBSCyclerTestRunner initWithTestSuite:target:]
  -[WBSCyclerTestRunner _performNextIterationWithCompletionHandler:]
  -[WBSCyclerTestRunner _handleNextPendingRequestWithCompletionHandler:]


WBSHistoryVisitIdentifier : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *urlString
 @property  double visitTime
 @property  WBSHistoryItem *associatedHistoryItem
 @property  WBSHistoryVisit *associatedHistoryVisit

  // class methods
  +[WBSHistoryVisitIdentifier supportsSecureCoding]

  // instance methods
  -[WBSHistoryVisitIdentifier copyWithZone:]
  -[WBSHistoryVisitIdentifier visitTime]
  -[WBSHistoryVisitIdentifier .cxx_destruct]
  -[WBSHistoryVisitIdentifier encodeWithCoder:]
  -[WBSHistoryVisitIdentifier urlString]
  -[WBSHistoryVisitIdentifier associatedHistoryItem]
  -[WBSHistoryVisitIdentifier setAssociatedHistoryVisit:]
  -[WBSHistoryVisitIdentifier isEqual:]
  -[WBSHistoryVisitIdentifier setAssociatedHistoryItem:]
  -[WBSHistoryVisitIdentifier associatedHistoryVisit]
  -[WBSHistoryVisitIdentifier initWithURLString:visitTime:]
  -[WBSHistoryVisitIdentifier initWithCoder:]


WBSCyclerTestSuiteBookmarkAuxiliary : NSObject /usr/lib/libc++.1.dylib
 @property  float operationBackoffRatio

  // instance methods
  -[WBSCyclerTestSuiteBookmarkAuxiliary performOperation:withTarget:options:completionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary performOperation:withTarget:completionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary validateBookmarks:expectingBookmarks:context:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary fetchAndValidateBookmarksWithExpectedBookmarks:context:completionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _errorWithCode:userInfo:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary init]
  -[WBSCyclerTestSuiteBookmarkAuxiliary resetOperation:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _errorWithCode:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary .cxx_destruct]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _descriptionForErrorCode:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary hasPerformedOperation:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _formattedStringForBookmark:indentationLevel:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _expandedDescriptionForBookmark:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _attemptInitialClearWithTarget:options:completionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _attemptResetToDAVModeWithCompletionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _attemptToGenerateDAVServerIDsForExistingBookmarksWithCompletionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _attemptCloudKitMigrationWithCompletionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _attemptToClearDataWithOptions:completionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _attributeStringForBookmark:multiline:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _descriptionForBookmark:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary operationBackoffRatio]


WBSCyclerTestTargetProxyController : NSObject /usr/lib/libc++.1.dylib
 @property  @? disconnectionHandler
 @property  <WBSCyclerTestTarget> *testTargetProxy

  // instance methods
  -[WBSCyclerTestTargetProxyController init]
  -[WBSCyclerTestTargetProxyController dealloc]
  -[WBSCyclerTestTargetProxyController .cxx_destruct]
  -[WBSCyclerTestTargetProxyController initWithEndpoint:]
  -[WBSCyclerTestTargetProxyController disconnectionHandler]
  -[WBSCyclerTestTargetProxyController setDisconnectionHandler:]
  -[WBSCyclerTestTargetProxyController testTargetProxy]


WBSDistributedNotificationObserver : NSObject /usr/lib/libc++.1.dylib
 @property  @? notificationHandler
 @property  @? timeoutHandler

  // instance methods
  -[WBSDistributedNotificationObserver waitWithTimeout:]
  -[WBSDistributedNotificationObserver init]
  -[WBSDistributedNotificationObserver .cxx_destruct]
  -[WBSDistributedNotificationObserver initWithNotificationName:type:]
  -[WBSDistributedNotificationObserver _scheduleTimeoutTimerWithTimeout:]
  -[WBSDistributedNotificationObserver _didReceiveNotification:]
  -[WBSDistributedNotificationObserver _invalidateTimeoutTimer]
  -[WBSDistributedNotificationObserver setNotificationHandler:]
  -[WBSDistributedNotificationObserver timeoutHandler]
  -[WBSDistributedNotificationObserver notificationHandler]
  -[WBSDistributedNotificationObserver stopWaiting]
  -[WBSDistributedNotificationObserver _stopObserving]
  -[WBSDistributedNotificationObserver setTimeoutHandler:]
  -[WBSDistributedNotificationObserver initWithNotificationName:]
  -[WBSDistributedNotificationObserver _didTimeOut]
  -[WBSDistributedNotificationObserver _startObserving]


WBSEncryptedCloudKeyValueStore : NSObject /usr/lib/libc++.1.dylib
 @property  NSUbiquitousKeyValueStore *backingStore

  // class methods
  +[WBSEncryptedCloudKeyValueStore additionalStoreWithIdentifier:]
  +[WBSEncryptedCloudKeyValueStore defaultStore]

  // instance methods
  -[WBSEncryptedCloudKeyValueStore initWithStore:]
  -[WBSEncryptedCloudKeyValueStore setDictionary:forKey:]
  -[WBSEncryptedCloudKeyValueStore _dsidForPrimaryAccount]
  -[WBSEncryptedCloudKeyValueStore synchronizeWithCompletionHandler:]
  -[WBSEncryptedCloudKeyValueStore _objectForKey:ofClass:]
  -[WBSEncryptedCloudKeyValueStore synchronize]
  -[WBSEncryptedCloudKeyValueStore setArray:forKey:]
  -[WBSEncryptedCloudKeyValueStore removeObjectForKey:]
  -[WBSEncryptedCloudKeyValueStore .cxx_construct]
  -[WBSEncryptedCloudKeyValueStore dealloc]
  -[WBSEncryptedCloudKeyValueStore .cxx_destruct]
  -[WBSEncryptedCloudKeyValueStore _setObject:forKey:]
  -[WBSEncryptedCloudKeyValueStore encryptPropertyList:]
  -[WBSEncryptedCloudKeyValueStore backingStore]
  -[WBSEncryptedCloudKeyValueStore dictionaryRepresentation]
  -[WBSEncryptedCloudKeyValueStore arrayForKey:]
  -[WBSEncryptedCloudKeyValueStore dictionaryForKey:]
  -[WBSEncryptedCloudKeyValueStore decryptEntry:]
  -[WBSEncryptedCloudKeyValueStore _currentPCSConfiguration]


WBSFileLockPOSIX : NSObject /usr/lib/libc++.1.dylib <WBSFileLock>
  // instance methods
  -[WBSFileLockPOSIX initWithFileDescriptor:]
  -[WBSFileLockPOSIX dealloc]
  -[WBSFileLockPOSIX releaseLock]


WBSFileLockFactoryPOSIX : NSObject /usr/lib/libc++.1.dylib <WBSFileLockFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSFileLockFactoryPOSIX coordinationLockURL:]
  -[WBSFileLockFactoryPOSIX lockURL:error:]


_WBSFieldLabelPatternMatcherFactory : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_WBSFieldLabelPatternMatcherFactory createFieldLabelPatternMatcherArrayFromWordArrays:allowingEndOfWordMatches:]

  // instance methods
  -[_WBSFieldLabelPatternMatcherFactory init]
  -[_WBSFieldLabelPatternMatcherFactory .cxx_destruct]
  -[_WBSFieldLabelPatternMatcherFactory _addWord:allowingEndOfWordMatch:]


WBSFormAutoFillClassificationToCorrectionsTransformer : NSValueTransformer /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
  // class methods
  +[WBSFormAutoFillClassificationToCorrectionsTransformer transformedValueClass]
  +[WBSFormAutoFillClassificationToCorrectionsTransformer allowsReverseTransformation]

  // instance methods
  -[WBSFormAutoFillClassificationToCorrectionsTransformer transformedValue:]
  -[WBSFormAutoFillClassificationToCorrectionsTransformer reverseTransformedValue:]


WBSFormAutoFillCorrectionManager : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSFormAutoFillCorrectionManagerDelegate> *delegate

  // instance methods
  -[WBSFormAutoFillCorrectionManager .cxx_destruct]
  -[WBSFormAutoFillCorrectionManager _setCorrections:forFingerprint:onDomain:]
  -[WBSFormAutoFillCorrectionManager _feedbackProcessor]
  -[WBSFormAutoFillCorrectionManager setCorrectionSet:]
  -[WBSFormAutoFillCorrectionManager getCorrectionsForFormFieldFingerprint:onDomain:completionHandler:]
  -[WBSFormAutoFillCorrectionManager initWithCorrectionsStore:]
  -[WBSFormAutoFillCorrectionManager setDelegate:]
  -[WBSFormAutoFillCorrectionManager delegate]


WBSCrowdsourcedFeedbackDomainNormalizer : NSValueTransformer /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
  // class methods
  +[WBSCrowdsourcedFeedbackDomainNormalizer transformedValueClass]
  +[WBSCrowdsourcedFeedbackDomainNormalizer allowsReverseTransformation]

  // instance methods
  -[WBSCrowdsourcedFeedbackDomainNormalizer init]
  -[WBSCrowdsourcedFeedbackDomainNormalizer .cxx_destruct]
  -[WBSCrowdsourcedFeedbackDomainNormalizer transformedValue:]


WBSFormAutoFillCorrectionSet : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *domain
 @property  NSDictionary *fingerprintsToClassifications
 @property  NSDictionary *fingerprintsToCorrections

  // instance methods
  -[WBSFormAutoFillCorrectionSet domain]
  -[WBSFormAutoFillCorrectionSet .cxx_destruct]
  -[WBSFormAutoFillCorrectionSet isEqual:]
  -[WBSFormAutoFillCorrectionSet fingerprintsToCorrections]
  -[WBSFormAutoFillCorrectionSet fingerprintsToClassifications]
  -[WBSFormAutoFillCorrectionSet initWithDomain:fingerprintsToClassifications:]
  -[WBSFormAutoFillCorrectionSet initWithDomain:fingerprintsToCorrections:]


WBSBrowserTabCompletionInfo : NSObject /usr/lib/libc++.1.dylib
 @property  NSUUID *uuid
 @property  NSUUID *windowUUID
 @property  unsigned long tabIndex
 @property  NSURL *url
 @property  NSString *title

  // instance methods
  -[WBSBrowserTabCompletionInfo url]
  -[WBSBrowserTabCompletionInfo tabIndex]
  -[WBSBrowserTabCompletionInfo uuid]
  -[WBSBrowserTabCompletionInfo windowUUID]
  -[WBSBrowserTabCompletionInfo .cxx_destruct]
  -[WBSBrowserTabCompletionInfo title]
  -[WBSBrowserTabCompletionInfo initWithUUID:windowUUID:tabIndex:url:title:]


WBSBrowserTabCompletionProvider : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSBrowserTabCompletionProviderSource> *dataSource
 @property  <WBSBrowserTabCompletionProviderDelegate> *delegate
 @property  NSString *currentQuery
 @property  NSArray *currentTabCompletionMatches

  // instance methods
  -[WBSBrowserTabCompletionProvider setDataSource:]
  -[WBSBrowserTabCompletionProvider init]
  -[WBSBrowserTabCompletionProvider currentQuery]
  -[WBSBrowserTabCompletionProvider .cxx_destruct]
  -[WBSBrowserTabCompletionProvider dataSource]
  -[WBSBrowserTabCompletionProvider setDelegate:]
  -[WBSBrowserTabCompletionProvider invalidate]
  -[WBSBrowserTabCompletionProvider _performTabCompletionOperationForQuery:tabInfos:selectedTabInfo:forQueryID:]
  -[WBSBrowserTabCompletionProvider bestTabCompletionMatchFromMatches:withTopHitURL:isBestMatchTopHit:]
  -[WBSBrowserTabCompletionProvider setCurrentQuery:forQueryID:]
  -[WBSBrowserTabCompletionProvider delegate]
  -[WBSBrowserTabCompletionProvider _compareTabMatch:otherTabMatch:]
  -[WBSBrowserTabCompletionProvider _tabCompletionOperationCompletedForQuery:matches:tabInfos:selectedTabInfo:]
  -[WBSBrowserTabCompletionProvider _distanceFromSelectedTabForTabMatch:]
  -[WBSBrowserTabCompletionProvider bestTabCompletionMatchWithTopHitURL:isBestMatchTopHit:]
  -[WBSBrowserTabCompletionProvider currentTabCompletionMatches]


WBSFormAutoFillCorrectionsHistoryObserver : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSFormAutoFillCorrectionsHistoryObserver _historyItemsWereRemoved:]
  -[WBSFormAutoFillCorrectionsHistoryObserver _updateCorrectionsStoreNow]
  -[WBSFormAutoFillCorrectionsHistoryObserver dealloc]
  -[WBSFormAutoFillCorrectionsHistoryObserver .cxx_destruct]
  -[WBSFormAutoFillCorrectionsHistoryObserver _normalizeURL:]
  -[WBSFormAutoFillCorrectionsHistoryObserver _historyVisitsWereRemoved:]
  -[WBSFormAutoFillCorrectionsHistoryObserver _updateCorrectionsStoreSoon]
  -[WBSFormAutoFillCorrectionsHistoryObserver _invalidateUpdateCoalescingTimer]
  -[WBSFormAutoFillCorrectionsHistoryObserver initWithCorrectionsStore:]
  -[WBSFormAutoFillCorrectionsHistoryObserver _historyWasCleared:]
  -[WBSFormAutoFillCorrectionsHistoryObserver flushPendingChangesAndDisconnectFromStoreAndHistory]


WBSFormAutoFillCorrectionsSQLiteStore : NSObject /usr/lib/libc++.1.dylib <WBSFormAutoFillCorrectionsStore, WBSCrowdsourcedFeedbackAllowList>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSFormAutoFillCorrectionsSQLiteStore _defaultParsecDatabaseURL]
  +[WBSFormAutoFillCorrectionsSQLiteStore _defaultLocalDatabaseURL]
  +[WBSFormAutoFillCorrectionsSQLiteStore standardStore]

  // instance methods
  -[WBSFormAutoFillCorrectionsSQLiteStore closeDatabase]
  -[WBSFormAutoFillCorrectionsSQLiteStore _migrateToSchemaVersion_3]
  -[WBSFormAutoFillCorrectionsSQLiteStore _removeAllLocalClassifications]
  -[WBSFormAutoFillCorrectionsSQLiteStore _normalizeDomain:]
  -[WBSFormAutoFillCorrectionsSQLiteStore init]
  -[WBSFormAutoFillCorrectionsSQLiteStore _createFreshParsecDatabaseSchema]
  -[WBSFormAutoFillCorrectionsSQLiteStore setCrowdsourcedClassification:forFieldWithFingerprint:onDomain:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore setLastAllowListRetrievalURLString:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _tryToPerformTransactionOnDatabase:inBlock:]
  -[WBSFormAutoFillCorrectionsSQLiteStore getAllowListStatusForDomain:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _replaceDomainAllowListWithDomains:retrievalURLString:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _isDatabaseOpen:]
  -[WBSFormAutoFillCorrectionsSQLiteStore .cxx_destruct]
  -[WBSFormAutoFillCorrectionsSQLiteStore removeLocalClassificationsForDomain:recordedOnOrAfter:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _migrateToCurrentSchemaVersionIfNeededForDatabase:]
  -[WBSFormAutoFillCorrectionsSQLiteStore replaceCrowdsourcedCorrectionSetsWithCorrectionSets:retrievalURLString:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _closeDatabases]
  -[WBSFormAutoFillCorrectionsSQLiteStore removeAllLocalClassificationsWithCompletionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore setLocalClassification:forFieldWithFingerprint:onDomain:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _removeLocalClassificationsForDomain:recordedOnOrAfter:]
  -[WBSFormAutoFillCorrectionsSQLiteStore initWithLocalDatabaseURL:parsecDatabaseURL:]
  -[WBSFormAutoFillCorrectionsSQLiteStore replaceDomainAllowListWithDomains:retrievalURLString:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _parsecMetadataStringValueForKey:]
  -[WBSFormAutoFillCorrectionsSQLiteStore setLastCrowdsourcedCorrectionsRetrievalURLString:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _openLocalDatabase]
  -[WBSFormAutoFillCorrectionsSQLiteStore _openDatabasesIfNeeded]
  -[WBSFormAutoFillCorrectionsSQLiteStore getLastCrowdsourcedCorrectionsRetrievalURLStringWithCompletionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _migrateToSchemaVersion:forDatabase:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _setDomain:isAllowListedForFeedback:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _classificationForFieldWithFingerprint:onDomain:]
  -[WBSFormAutoFillCorrectionsSQLiteStore setDomain:isAllowListedForFeedback:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore getClassificationForFieldWithFingerprint:onDomain:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _configureDatabase:currentSchemaVersion:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _setCrowdsourcedClassification:forFieldWithFingerprint:onDomain:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _migrateToSchemaVersion_4]
  -[WBSFormAutoFillCorrectionsSQLiteStore getLastAllowListRetrievalURLStringWithCompletionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _openParsecDatabase]
  -[WBSFormAutoFillCorrectionsSQLiteStore _replaceCrowdsourcedCorrectionSetsWithCorrectionSets:retrievalURLString:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _createFreshLocalDatabaseSchema]
  -[WBSFormAutoFillCorrectionsSQLiteStore _migrateToSchemaVersion_2]
  -[WBSFormAutoFillCorrectionsSQLiteStore _setLocalClassification:forFieldWithFingerprint:onDomain:dateReclassified:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _schemaVersionForDatabase:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _setDatabaseSchemaVersion:forDatabase:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _setLocalClassification:forFieldWithFingerprint:onDomain:date:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _setParsecMetadataStringValue:forKey:]


WBSFormAutoFillItem : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *completion

  // instance methods
  -[WBSFormAutoFillItem completion]


WBSDigitalHealthManager : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSDigitalHealthManagerDelegate> *delegate

  // class methods
  +[WBSDigitalHealthManager _updateWebpageUsage:withDigitalHealthManagerUsageState:]
  +[WBSDigitalHealthManager deleteUsageHistoryForURLs:]
  +[WBSDigitalHealthManager deleteUsageHistoryFromDate:toDate:]
  +[WBSDigitalHealthManager deleteAllUsageHistory]

  // instance methods
  -[WBSDigitalHealthManager _historyItemsWereRemoved:]
  -[WBSDigitalHealthManager getOverlayStateForURLs:withCompletionHandler:]
  -[WBSDigitalHealthManager init]
  -[WBSDigitalHealthManager stopObserving]
  -[WBSDigitalHealthManager dealloc]
  -[WBSDigitalHealthManager .cxx_destruct]
  -[WBSDigitalHealthManager stopUsageTrackingForURL:]
  -[WBSDigitalHealthManager startObserving]
  -[WBSDigitalHealthManager observeValueForKeyPath:ofObject:change:context:]
  -[WBSDigitalHealthManager setDelegate:]
  -[WBSDigitalHealthManager _historyWasCleared:]
  -[WBSDigitalHealthManager updateUsageTrackingForURL:withBundleIdentifier:toState:]
  -[WBSDigitalHealthManager delegate]
  -[WBSDigitalHealthManager _requestPoliciesForWebsites:completionHandler:]


WBSHistorySessionWithItems : WBSHistorySession
 @property  NSArray *items

  // instance methods
  -[WBSHistorySessionWithItems init]
  -[WBSHistorySessionWithItems initWithSessionStartDate:]
  -[WBSHistorySessionWithItems initWithSessionStartDate:items:]
  -[WBSHistorySessionWithItems items]
  -[WBSHistorySessionWithItems .cxx_destruct]


WBSSetInt64 : NSObject /usr/lib/libc++.1.dylib <NSCoding, NSSecureCoding, NSCopying>
 @property  r^{unordered_set<long long set
 @property  unsigned long count

  // class methods
  +[WBSSetInt64 supportsSecureCoding]

  // instance methods
  -[WBSSetInt64 copyWithZone:]
  -[WBSSetInt64 set]
  -[WBSSetInt64 init]
  -[WBSSetInt64 commaSeparatedValues]
  -[WBSSetInt64 initWithMovableSet:]
  -[WBSSetInt64 initWithSet:]
  -[WBSSetInt64 .cxx_construct]
  -[WBSSetInt64 .cxx_destruct]
  -[WBSSetInt64 encodeWithCoder:]
  -[WBSSetInt64 contains:]
  -[WBSSetInt64 copy]
  -[WBSSetInt64 count]
  -[WBSSetInt64 initWithInt64:]
  -[WBSSetInt64 initWithCoder:]


WBSFormAutoFillMetadataCorrector : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *domain

  // instance methods
  -[WBSFormAutoFillMetadataCorrector initWithDomain:]
  -[WBSFormAutoFillMetadataCorrector init]
  -[WBSFormAutoFillMetadataCorrector _commonInitWithDomain:correctionsStore:]
  -[WBSFormAutoFillMetadataCorrector bestAvailableMetadataFromControlMetadata:]
  -[WBSFormAutoFillMetadataCorrector enqueueCorrectionsRequestForFormMetadata:completionHandler:]
  -[WBSFormAutoFillMetadataCorrector hasAttemptedToCorrectMetadata:]
  -[WBSFormAutoFillMetadataCorrector bestAvailableMetadataFromMetadata:]
  -[WBSFormAutoFillMetadataCorrector domain]
  -[WBSFormAutoFillMetadataCorrector .cxx_destruct]


WBSPasswordBreachConfigurationBag : NSObject /usr/lib/libc++.1.dylib <WBSRemotePlistSnapshot>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSPasswordBreachConfigurationBag .cxx_destruct]
  -[WBSPasswordBreachConfigurationBag initWithBagDictionary:]
  -[WBSPasswordBreachConfigurationBag firstConfigurationForSupportedProtocolVersion:rampIdentifier:allowValuesForTesting:]
  -[WBSPasswordBreachConfigurationBag initWithPlistData:error:]
  -[WBSPasswordBreachConfigurationBag plistDataWithFormat:]


WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor _schemaWithExpectedClass:errorCode:isOptional:]
  +[WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor _correctionsSchema]
  +[WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor test_correctionsSchema]

  // instance methods
  -[WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor getLastCorrectionsRetrievalURLStringWithResultHandler:]
  -[WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor setCorrectionsWithJSONData:retrievalURLString:]
  -[WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor .cxx_destruct]
  -[WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor initWithCorrectionsStore:]


WBSPasswordWarningManager : NSObject /usr/lib/libc++.1.dylib <WBSRemotePlistControllerDelegate>
 @property  WBSSavedPasswordAuditor *passwordAuditor
 @property  WBSPasswordEvaluator *passwordEvaluator
 @property  long long numberOfWarningsWithSpecifiedPriority
 @property  BOOL hasUnacknowledgedHighPriorityWarnings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSPasswordWarningManager _updateUserDefaultsWithWarningHashes:]
  -[WBSPasswordWarningManager dealloc]
  -[WBSPasswordWarningManager .cxx_destruct]
  -[WBSPasswordWarningManager getAllWarningsForcingUpdate:completionHandler:]
  -[WBSPasswordWarningManager _getBreachResultRecordsForPasswords:startSessionIfNecessary:withCompletionHandler:]
  -[WBSPasswordWarningManager _scoredWarningForSavedPassword:topFraudTargets:contextKitCategories:breachResultRecord:]
  -[WBSPasswordWarningManager passwordEvaluator]
  -[WBSPasswordWarningManager _scoreWarnings:contextKitCategoryMap:topFraudTargets:]
  -[WBSPasswordWarningManager _sortWarningsBySeverity:intoHighPriorityBucket:intoStandardPriorityBucket:unspecifiedSeverityBucket:savedPasswordMap:highPriorityWarningHashes:]
  -[WBSPasswordWarningManager _warningForSavedPassword:breachResultRecord:]
  -[WBSPasswordWarningManager _issuesForPassword:withWeakPasswordEvaluation:breachResultRecord:]
  -[WBSPasswordWarningManager _localizedLongWarningDescriptionStringsForPassword:weakPasswordEvaluation:issueTypes:]
  -[WBSPasswordWarningManager _localizedShortWarningDescriptionForIssueTypes:]
  -[WBSPasswordWarningManager _scoreForSavedPassword:issueTypes:topFraudTargets:contextKitCategories:]
  -[WBSPasswordWarningManager _historyContainsItemForDomain:]
  -[WBSPasswordWarningManager _passwordBreachHelperProxy]
  -[WBSPasswordWarningManager numberOfWarningsWithSpecifiedPriority]
  -[WBSPasswordWarningManager initWithSavedPasswordStore:autoFillQuirksManager:userDefaults:history:]
  -[WBSPasswordWarningManager preWarmWarningsWithCompletionHandler:]
  -[WBSPasswordWarningManager getWarningForSavedPassword:completionHandler:]
  -[WBSPasswordWarningManager removeWarningForSavedPassword:]
  -[WBSPasswordWarningManager hasUnacknowledgedHighPriorityWarnings]
  -[WBSPasswordWarningManager acknowledgeHighPriorityWarnings]
  -[WBSPasswordWarningManager passwordAuditor]


WBSFormAutoFillParsecDomainPolicyProvider : NSObject /usr/lib/libc++.1.dylib <WBSFormAutoFillFeedbackDomainPolicyProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSFormAutoFillParsecDomainPolicyProvider .cxx_destruct]
  -[WBSFormAutoFillParsecDomainPolicyProvider initWithFeedbackAllowList:]
  -[WBSFormAutoFillParsecDomainPolicyProvider autoFillFeedbackProcessor:determineWhetherToSendFeedbackForDomain:resultHandler:]
  -[WBSFormAutoFillParsecDomainPolicyProvider setPoliciesWithJSONData:retrievalURLString:]
  -[WBSFormAutoFillParsecDomainPolicyProvider getLastPolicyRetrievalURLStringWithResultHandler:]


WBSFormAutoFillParsecFeedbackProcessor : NSObject /usr/lib/libc++.1.dylib <WBSFormAutoFillFeedbackProcessor>
 @property  <WBSFormAutoFillFeedbackDomainPolicyProvider> *domainPolicyProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSFormAutoFillParsecFeedbackProcessor init]
  -[WBSFormAutoFillParsecFeedbackProcessor .cxx_destruct]
  -[WBSFormAutoFillParsecFeedbackProcessor _getFeedbackWithCorrectionSet:completionHandler:]
  -[WBSFormAutoFillParsecFeedbackProcessor sendFeedbackWithCorrectionSet:]
  -[WBSFormAutoFillParsecFeedbackProcessor _feedbackWithCorrectionSet:includeOrigin:]
  -[WBSFormAutoFillParsecFeedbackProcessor domainPolicyProvider]
  -[WBSFormAutoFillParsecFeedbackProcessor setDomainPolicyProvider:]
  -[WBSFormAutoFillParsecFeedbackProcessor initWithGlobalFeedbackDispatcher:domainPolicyProvider:autoFillVersion:]


WBSResultRanker : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSResultRanker allowLooserMatching:]
  +[WBSResultRanker filterOutUnlikelyMatchesFromMatches:forQuery:rewrittenQuery:]


WBSPasswordEvaluator : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSPasswordEvaluator passwordLooksLikeDigitOnlyPasscode:]
  +[WBSPasswordEvaluator standardPasswordEvaluator]

  // instance methods
  -[WBSPasswordEvaluator .cxx_destruct]
  -[WBSPasswordEvaluator evaluatePassword:]
  -[WBSPasswordEvaluator _initWithPasswordWordListCollection:passcodeWordListCollection:]


WBSFormDataController : NSObject /usr/lib/libc++.1.dylib
 @property  WBSAutoFillQuirksManager *autoFillQuirksManager

  // class methods
  +[WBSFormDataController addressBookAddressPropertyKey]
  +[WBSFormDataController allAddressBookAddressComponentKeys]
  +[WBSFormDataController allSynonymsForMatch:]
  +[WBSFormDataController allAddressBookNonAddressPropertyKeys]
  +[WBSFormDataController formContainsDateFields:matchingAddressBookMatch:]
  +[WBSFormDataController specifierForAddressBookLabel:]
  +[WBSFormDataController domainFromURL:]
  +[WBSFormDataController _password:appearsToBeMoreThanOneSymbolAppendedToPassword:]
  +[WBSFormDataController fieldToFocusBeforeSubmittingForm:]
  +[WBSFormDataController formContainsCreditCardData:]
  +[WBSFormDataController formContainsCreditCardNumberField:]
  +[WBSFormDataController shouldDisplayOneTimeCodeForControl:inForm:]
  +[WBSFormDataController stringWithAddressBookValue:key:]
  +[WBSFormDataController canAutocompleteTextField:inForm:]
  +[WBSFormDataController availableManualAutoFillActionForTextField:form:outUsernameElementUniqueID:outPasswordElementUniqueID:outConfirmPasswordElementUniqueID:]
  +[WBSFormDataController textFieldLooksLikeCreditCardFormField:inForm:]
  +[WBSFormDataController nextFieldAfterControls:inForm:]
  +[WBSFormDataController lastFieldInControls:inForm:]
  +[WBSFormDataController isFieldUnidentified:]
  +[WBSFormDataController valueOfControlWithUniqueID:inForm:]
  +[WBSFormDataController formContainsCreditCardNumberOrCardSecurityCodeField:]
  +[WBSFormDataController controlsConsideredByAutoFillInForm:]
  +[WBSFormDataController valuesFromCredential:forLoginOrChangePasswordForm:]
  +[WBSFormDataController password:shouldBeConsideredEqualToExistingPassword:]
  +[WBSFormDataController textFieldLooksLikeCreditCardNumericFormField:]
  +[WBSFormDataController dontSaveMarker]
  +[WBSFormDataController continuingFieldsInFormControls:startingAtIndex:textFieldsOnly:ignorePositioning:]
  +[WBSFormDataController specifierForControl:]
  +[WBSFormDataController valuesFromUser:password:forLoginOrChangePasswordForm:]
  +[WBSFormDataController _metadataForControlWithUniqueID:inForm:]
  +[WBSFormDataController isNameProperty:]
  +[WBSFormDataController stringLooksLikeCreditCardNumber:]
  +[WBSFormDataController contactIsMe:]
  +[WBSFormDataController localizedLowercaseContactProperty:]
  +[WBSFormDataController _password:appearsToBeASixDigitCodeAppendedToPassword:]
  +[WBSFormDataController convertNumber:toAutoFillFormType:]
  +[WBSFormDataController contactKeyForString:]

  // instance methods
  -[WBSFormDataController textFieldIsEligibleForAutomaticStrongPassword:form:ignorePreviousDecision:textFieldCurrentlyContainsStrongPassword:]
  -[WBSFormDataController init]
  -[WBSFormDataController addressBookMatchesForProperty:key:label:]
  -[WBSFormDataController _cachedLocalizedStringsForBirthdate:]
  -[WBSFormDataController shouldAutoFillFromPreviousData]
  -[WBSFormDataController _matchesForControl:inDomain:matchingPartialString:autoFillDataType:preferredLabel:contact:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController addPreviousDataMatchesForFieldWithName:inDomain:matchingPartialString:toArray:]
  -[WBSFormDataController dealloc]
  -[WBSFormDataController .cxx_destruct]
  -[WBSFormDataController shouldAutoFillFromAddressBook]
  -[WBSFormDataController addABMatchesForValueSpecifier:matchingPartialString:toArray:preferredLabel:contact:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController addAllAddressDataIfNecessary:contactLabel:contact:]
  -[WBSFormDataController bestMatchForControl:inDomain:matchingPartialString:autoFillDataType:preferredLabel:contact:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController _phoneNumberCandidates:fillingMultipleFields:]
  -[WBSFormDataController _currentLocaleDidChange:]
  -[WBSFormDataController addValuesForStandardFormControls:startingAtIndex:fromAutoFillItem:toDictionary:formTextSample:multiRoundAutoFillManager:]
  -[WBSFormDataController _fillPhoneNumber:intoValues:controls:formTextSample:multiRoundAutoFillManager:]
  -[WBSFormDataController autoFillActionForFormType:onURL:shouldSubmitAfterFilling:]
  -[WBSFormDataController shouldSubmitForm:withCredential:onURL:]
  -[WBSFormDataController allFormDataForSaving]
  -[WBSFormDataController didAutomaticallySubmitFormWhenFillingOnURL:formMetadata:]
  -[WBSFormDataController domainsWithPreviousData]
  -[WBSFormDataController clearPreviousDataForDomain:]
  -[WBSFormDataController clearPreviousDataDatabaseItemsAddedAfterDate:]
  -[WBSFormDataController clearPreviousDataDatabase]
  -[WBSFormDataController setPreferredIdentifier:forProperty:withContact:]
  -[WBSFormDataController recentlyUsedAutoFillSets]
  -[WBSFormDataController _indexForControlWithUniqueID:inForm:]
  -[WBSFormDataController _nextFieldToFocusAfterFillingFieldAtIndex:inForm:]
  -[WBSFormDataController valuesForContactFormWithMetadata:matches:multiRoundAutoFillManager:existingMatches:contact:]
  -[WBSFormDataController autoFillQuirksManager]
  -[WBSFormDataController _autoFillSetFromMatches:label:contact:form:]
  -[WBSFormDataController _matchHasPreferredIdentifierOrShouldBeFilledInMultiRoundAutoFill:specifier:multiRoundAutoFillManager:contact:]
  -[WBSFormDataController shouldAutoFillPasswords]
  -[WBSFormDataController bestAddressBookLabelForFormMetadata:formControlValue:]
  -[WBSFormDataController addressBookHasDataForLabel:]
  -[WBSFormDataController matchesForControl:atURL:matchingPartialString:autoFillDataType:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController cascadingAddressMatchesForMatch:contact:]
  -[WBSFormDataController _valuesForStandardForm:inDomain:autoFillDataType:matches:preferredLabel:multiRoundAutoFillManager:wantAllMatches:contact:existingMatches:shouldUseExistingMatchesToFillFocusedField:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController matchesForControl:atURL:matchingPartialString:autoFillDataType:contact:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController orderedHomeAndWorkSetsForContact:form:]
  -[WBSFormDataController contactAutoFillSetForRecentlyUsedAutoFillSet:contact:form:]
  -[WBSFormDataController _addMatchesForControl:startingAtIndex:formMetadata:fromExistingMatches:fromAllMatchesIfNecessary:addToFoundMatches:addToAutoFillValues:multiRoundAutoFillManager:propertyToIdentifierMapForFoundMatches:shouldUseExistingMatchesToFillFocusedField:]
  -[WBSFormDataController addValuesForStandardFormControlsInForm:startingAtIndex:fromAutoFillItem:toDictionary:multiRoundAutoFillManager:]
  -[WBSFormDataController preferredIdentifierExistsForProperty:withContact:]
  -[WBSFormDataController preferredIdentifierForProperty:withContact:]
  -[WBSFormDataController addRecentlyUsedAutoFillSet:appendToTheEnd:]
  -[WBSFormDataController valuesForContactFormWithMetadata:inDomain:matches:multiRoundAutoFillManager:contact:]
  -[WBSFormDataController valuesForContactFormWithMetadata:matches:multiRoundAutoFillManager:existingMatches:shouldUseExistingMatchesToFillFocusedField:contact:]
  -[WBSFormDataController lastUsedUsernameForURL:protectionSpace:]
  -[WBSFormDataController _matchesForControl:inDomain:matchingPartialString:autoFillDataType:preferredLabel:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController getFormFieldValues:andFieldToFocus:withSingleCreditCardData:inField:inForm:]
  -[WBSFormDataController isControlASelectElement:]
  -[WBSFormDataController bestMatchForControl:inDomain:matchingPartialString:autoFillDataType:preferredLabel:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController getFormFieldValues:andFieldToFocus:andCreditCardDataTypesThatWillBeFilled:forCreditCardForm:fromCreditCardData:]
  -[WBSFormDataController valuesForStandardForm:inDomain:autoFillDataType:matches:preferredLabel:multiRoundAutoFillManager:contact:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController saveRecentlyUsedAutoFillSetWithMatchesToFill:matchesForDoNotFill:]
  -[WBSFormDataController valuesForStandardForm:inDomain:autoFillDataType:matches:preferredLabel:multiRoundAutoFillManager:]
  -[WBSFormDataController valuesForContactFormWithMetadata:inDomain:matches:multiRoundAutoFillManager:]
  -[WBSFormDataController credentialMatchesForForm:atURL:potentialMatches:]
  -[WBSFormDataController annotationsFromCredential:forLoginOrChangePasswordForm:]
  -[WBSFormDataController getCredentialMatches:andPotentialMatches:matchesForAssociatedDomains:forURL:matchingPartialUsername:]
  -[WBSFormDataController credentialMatchesWithCriteria:completionHandler:]
  -[WBSFormDataController metadataOfActiveFormOrBestFormForPageLevelAutoFill:frame:]
  -[WBSFormDataController metadataOfBestFormForStreamlinedLogin:frame:]
  -[WBSFormDataController isPasswordFieldForUserCredentialsWithMetadata:formMetadata:]
  -[WBSFormDataController willSubmitFormWithCredentials:shouldPreferAnnotatedCredentials:atURL:username:password:]
  -[WBSFormDataController autoGeneratedPasswordForURL:respectingPasswordRequirements:maxLength:]
  -[WBSFormDataController getCredentialMatches:andPotentialMatches:forURL:matchingPartialUsername:omittingCredentialsUserHasDeniedAccessTo:]
  -[WBSFormDataController _lastUsedUsernameForDomain:protectionSpace:]
  -[WBSFormDataController getCredentialMatches:andPotentialMatches:matchesForAssociatedDomains:forURL:matchingPartialUsername:omittingCredentialsUserHasDeniedAccessTo:]
  -[WBSFormDataController _protectionSpaceMatchesWithCriteria:credentialsByProtectionSpace:associatedDomainsManager:]
  -[WBSFormDataController _credentialMatchesWithCriteria:protectionSpaceMatches:]
  -[WBSFormDataController substituteCredential:inProtectionSpace:]
  -[WBSFormDataController hasUserDeniedAccessToCredential:inProtectionSpace:]
  -[WBSFormDataController _removeStaleEntriesFromMapOfHighLevelDomainToLastAutomaticFormSubmission]
  -[WBSFormDataController _formKeyForMapOfHighLevelDomainToLastAutomaticFormSubmission:formMetadata:]
  -[WBSFormDataController completionDBPath]
  -[WBSFormDataController updateLastUsedUsernameAndExtractUsernameAndPasswordFromForm:shouldPreferAnnotatedCredentials:atURL:username:password:]
  -[WBSFormDataController _knownUsernamesForURL:]
  -[WBSFormDataController _setLastUsedUsername:andProtectionSpace:forDomain:]
  -[WBSFormDataController setInfo:forDomain:]
  -[WBSFormDataController _dateIsWithinGracePeriodForNotAutomaticallySubmittingLoginForms:]
  -[WBSFormDataController initWithAggressiveKeychainCaching:]
  -[WBSFormDataController encryptOrDecryptData:encrypt:]
  -[WBSFormDataController _loadCompletionDBIfNeededOnInternalQueue]
  -[WBSFormDataController _domainsWithPreviousDataOnInternalQueue]
  -[WBSFormDataController domainsWithPreviousDataChanged]
  -[WBSFormDataController pruneCompletionDB]
  -[WBSFormDataController _completionDB]
  -[WBSFormDataController saveCompletionDBSoon]
  -[WBSFormDataController uniqueIDOfContact:]
  -[WBSFormDataController loadCompletionDBIfNeeded]
  -[WBSFormDataController _recentlyUsedAutoFillDictionaries]
  -[WBSFormDataController infoForDomain:]
  -[WBSFormDataController lastUsedUsernameForURL:]
  -[WBSFormDataController _keyToLookUpInAnnotationsForPasswordForFormMetadata:]
  -[WBSFormDataController textFieldMetadataMeetsRequirementsForAutomaticStrongPasswordTreatment:form:]
  -[WBSFormDataController addressBookMatchesForProperty:key:label:partialString:contact:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController _singleFieldPhoneNumberCandidates:]
  -[WBSFormDataController searchForCredentialUsingDomainsToConsiderIdentical:URL:hostForCredentials:credential:protectionSpace:]
  -[WBSFormDataController addressBookMatchesForFullNameForContact:]
  -[WBSFormDataController notifyKeychainWasDirectlyAffectedBySafari]


WBSPersistentPropertyListStore : NSObject /usr/lib/libc++.1.dylib
 @property  @? createEmptyStoreHandler
 @property  @? validateLoadedStoreHandler

  // instance methods
  -[WBSPersistentPropertyListStore stringForKey:]
  -[WBSPersistentPropertyListStore _objectForKey:ofClass:]
  -[WBSPersistentPropertyListStore dataForKey:]
  -[WBSPersistentPropertyListStore _existingSavedData]
  -[WBSPersistentPropertyListStore _prepareEmptyStore]
  -[WBSPersistentPropertyListStore _loadDataIfNecessary]
  -[WBSPersistentPropertyListStore clearStoreSynchronously]
  -[WBSPersistentPropertyListStore createEmptyStoreHandler]
  -[WBSPersistentPropertyListStore validateLoadedStoreHandler]
  -[WBSPersistentPropertyListStore .cxx_destruct]
  -[WBSPersistentPropertyListStore setObject:forKey:]
  -[WBSPersistentPropertyListStore objectForKey:]
  -[WBSPersistentPropertyListStore dateForKey:]
  -[WBSPersistentPropertyListStore numberForKey:]
  -[WBSPersistentPropertyListStore _dataRepresentation]
  -[WBSPersistentPropertyListStore initWithBackingStoreURL:]
  -[WBSPersistentPropertyListStore setCreateEmptyStoreHandler:]
  -[WBSPersistentPropertyListStore setValidateLoadedStoreHandler:]
  -[WBSPersistentPropertyListStore saveStoreSynchronously]
  -[WBSPersistentPropertyListStore saveAndCloseStoreSynchronously]
  -[WBSPersistentPropertyListStore arrayForKey:]
  -[WBSPersistentPropertyListStore dictionaryForKey:]


WBSFormFieldClassificationCorrector : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSFormFieldClassificationCorrectorDelegate> *delegate
 @property  NSString *domain
 @property  WBSFormMetadata *formMetadata
 @property  NSDictionary *formValues

  // instance methods
  -[WBSFormFieldClassificationCorrector init]
  -[WBSFormFieldClassificationCorrector processCorrections]
  -[WBSFormFieldClassificationCorrector domain]
  -[WBSFormFieldClassificationCorrector .cxx_destruct]
  -[WBSFormFieldClassificationCorrector initWithDomain:formMetadata:formValues:uniqueIDsOfControlsThatWereAutoFilled:]
  -[WBSFormFieldClassificationCorrector _classificationCorrectionsForControlWithMetadata:wasIdentifiedAsAddressBookField:]
  -[WBSFormFieldClassificationCorrector formValues]
  -[WBSFormFieldClassificationCorrector formMetadata]
  -[WBSFormFieldClassificationCorrector setDelegate:]
  -[WBSFormFieldClassificationCorrector delegate]


WBSFormFieldFingerprinter : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSFormFieldFingerprinter _hashForString:]
  +[WBSFormFieldFingerprinter fingerprintForControlMetadata:]
  +[WBSFormFieldFingerprinter _fingerprintComponentsForControlMetadata:]


WBSPasswordBreachConfigurationDictionaryUnpacker : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL errorOccurred

  // instance methods
  -[WBSPasswordBreachConfigurationDictionaryUnpacker .cxx_destruct]
  -[WBSPasswordBreachConfigurationDictionaryUnpacker _valueOfClass:forKey:required:]
  -[WBSPasswordBreachConfigurationDictionaryUnpacker sortedUnsignedIntegerArrayForKey:minimumValue:maximumValue:ascending:]
  -[WBSPasswordBreachConfigurationDictionaryUnpacker dataFromHexStringForKey:expectedLength:]
  -[WBSPasswordBreachConfigurationDictionaryUnpacker initWithDictionary:]
  -[WBSPasswordBreachConfigurationDictionaryUnpacker errorOccurred]
  -[WBSPasswordBreachConfigurationDictionaryUnpacker stringForKey:minimumLength:]
  -[WBSPasswordBreachConfigurationDictionaryUnpacker unsignedIntegerForKey:minimumValue:maximumValue:]
  -[WBSPasswordBreachConfigurationDictionaryUnpacker optionalBoolForKey:defaultValue:]
  -[WBSPasswordBreachConfigurationDictionaryUnpacker URLForKey:]


WBSPasswordPatternPartialSolution : NSObject /usr/lib/libc++.1.dylib
 @property  WBSPasswordPatternMatch *patternMatch
 @property  double guessesRequiredWithoutPatternCountPenalty
 @property  double guessesRequiredWithPatternCountPenalty

  // instance methods
  -[WBSPasswordPatternPartialSolution .cxx_destruct]
  -[WBSPasswordPatternPartialSolution initWithPatternMatch:guessesRequiredWithoutPatternCountPenalty:withPatternCountPenalty:]
  -[WBSPasswordPatternPartialSolution guessesRequiredWithoutPatternCountPenalty]
  -[WBSPasswordPatternPartialSolution guessesRequiredWithPatternCountPenalty]
  -[WBSPasswordPatternPartialSolution patternMatch]


WBSPasswordPatternMatchSolver : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSPasswordPatternMatchSolver .cxx_destruct]
  -[WBSPasswordPatternMatchSolver _unwindSolution]
  -[WBSPasswordPatternMatchSolver _partialSolutionWithEndIndex:patternCount:]
  -[WBSPasswordPatternMatchSolver _enumeratePartialSolutionsWithEndIndex:usingBlock:]
  -[WBSPasswordPatternMatchSolver _setPartialSolution:withEndIndex:patternCount:]
  -[WBSPasswordPatternMatchSolver _exhaustiveSearchPatternWithStartIndex:endIndex:]
  -[WBSPasswordPatternMatchSolver _updatePartialSolutionsWithPatternMatch:patternCount:]
  -[WBSPasswordPatternMatchSolver _updateExhaustiveSearchPartialSolutionsAtEndIndex:]
  -[WBSPasswordPatternMatchSolver optimalEvaluation]
  -[WBSPasswordPatternMatchSolver initWithPassword:patternMatches:]


WBSFormMetadata : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDictionary *passwordRequirements
 @property  BOOL allowsAutocomplete
 @property  NSDictionary *annotations
 @property  unsigned long type
 @property  NSString *confirmPasswordElementUniqueID
 @property  BOOL containsActiveElement
 @property  NSString *firstCreditCardCardholderFieldOrCreditCardNumberFieldUniqueID
 @property  NSURL *action
 @property  NSArray *controls
 @property  long long uniqueID
 @property  BOOL bestForCredentialPreFill
 @property  BOOL bestForPageLevelAutoFill
 @property  BOOL bestForStreamlinedLogin
 @property  BOOL eligibleForAutomaticLogin
 @property  BOOL visible
 @property  BOOL usesRelAsync
 @property  NSString *oldPasswordElementUniqueID
 @property  NSString *passwordElementUniqueID
 @property  NSString *textSample
 @property  NSString *userNameElementUniqueID
 @property  BOOL usesGeneratedPassword
 @property  unsigned long requestType
 @property  BOOL isSearchForm
 @property  BOOL containsAtLeastOneSecureTextField
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[WBSFormMetadata supportsSecureCoding]

  // instance methods
  -[WBSFormMetadata isVisible]
  -[WBSFormMetadata annotations]
  -[WBSFormMetadata oldPasswordElementUniqueID]
  -[WBSFormMetadata confirmPasswordElementUniqueID]
  -[WBSFormMetadata formMetadataByReplacingControlsWith:]
  -[WBSFormMetadata requestType]
  -[WBSFormMetadata .cxx_destruct]
  -[WBSFormMetadata controls]
  -[WBSFormMetadata action]
  -[WBSFormMetadata containsActiveElement]
  -[WBSFormMetadata encodeWithCoder:]
  -[WBSFormMetadata textSample]
  -[WBSFormMetadata uniqueID]
  -[WBSFormMetadata _init]
  -[WBSFormMetadata type]
  -[WBSFormMetadata initWithJSValue:]
  -[WBSFormMetadata usesRelAsync]
  -[WBSFormMetadata containsAtLeastOneSecureTextField]
  -[WBSFormMetadata allowsAutocomplete]
  -[WBSFormMetadata firstCreditCardCardholderFieldOrCreditCardNumberFieldUniqueID]
  -[WBSFormMetadata isBestForCredentialPreFill]
  -[WBSFormMetadata usesGeneratedPassword]
  -[WBSFormMetadata isSearchForm]
  -[WBSFormMetadata passwordRequirements]
  -[WBSFormMetadata setPasswordRequirements:]
  -[WBSFormMetadata isEqual:]
  -[WBSFormMetadata dictionaryRepresentation]
  -[WBSFormMetadata isBestForPageLevelAutoFill]
  -[WBSFormMetadata isEligibleForAutomaticLogin]
  -[WBSFormMetadata isBestForStreamlinedLogin]
  -[WBSFormMetadata userNameElementUniqueID]
  -[WBSFormMetadata passwordElementUniqueID]
  -[WBSFormMetadata initWithCoder:]


WBSFormMetadataController : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSFormMetadataController convertNumber:toFormMetadataRequestType:]

  // instance methods
  -[WBSFormMetadataController removeAutomaticPasswordVisualTreatmentInFrame:passwordControlUniqueIDs:]
  -[WBSFormMetadataController passwordFieldFocused:inFrame:isPasswordFieldForUserCredentials:]
  -[WBSFormMetadataController removeAutomaticPasswordElementsInFrame:focusedPasswordControlUniqueID:passwordControlUniqueIDs:blurAfterRemoval:]
  -[WBSFormMetadataController shouldIncludeNonEmptyFields]
  -[WBSFormMetadataController fillField:inFrame:withGeneratedPassword:]
  -[WBSFormMetadataController focusField:inFrame:]
  -[WBSFormMetadataController disableSpellCheckInField:inFrame:]
  -[WBSFormMetadataController selectionRangeInField:inFrame:]
  -[WBSFormMetadataController selectRange:inField:inFrame:]
  -[WBSFormMetadataController replaceRange:inField:inFrame:withString:andSelectTailStartingAt:]
  -[WBSFormMetadataController metadataForForm:inFrame:requestType:]
  -[WBSFormMetadataController init]
  -[WBSFormMetadataController usernameFieldFocused:fieldMetadata:inForm:inFrame:]
  -[WBSFormMetadataController uniqueIDForTextField:inFrame:]
  -[WBSFormMetadataController pageWithMainFrameMeetsEditedFormTextWarningCriteria:]
  -[WBSFormMetadataController textFieldFocused:inFrame:]
  -[WBSFormMetadataController textFieldBlurred:inFrame:page:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController willSendSubmitEventForForm:inFrame:]
  -[WBSFormMetadataController willSubmitForm:inFrame:]
  -[WBSFormMetadataController formElementWithFormID:inFrame:]
  -[WBSFormMetadataController .cxx_construct]
  -[WBSFormMetadataController autoFillFrameIsValid:]
  -[WBSFormMetadataController formSubmissionURLStringForSearchTextField:inFrame:useStrictDetection:]
  -[WBSFormMetadataController visibleNonEmptyTextFieldsInForm:inFrame:]
  -[WBSFormMetadataController metadataForActiveFormInPageWithMainFrame:]
  -[WBSFormMetadataController .cxx_destruct]
  -[WBSFormMetadataController substitutePasswordElementsWithAutomaticPasswordElementsInFrame:formID:focusedPasswordControlUniqueID:passwordControlUniqueIDs:automaticPassword:blurAfterSubstitution:]
  -[WBSFormMetadataController automaticPasswordSheetDimissedInFrame:focusedPasswordControlUniqueID:]
  -[WBSFormMetadataController annotateForm:inFrame:withValues:]
  -[WBSFormMetadataController autoFillFormInFrame:withValues:fillSynchronously:setAutoFilled:selectFieldAfterFilling:]
  -[WBSFormMetadataController focusFormForStreamlinedLogin:inFrame:]
  -[WBSFormMetadataController clearField:inFrame:]
  -[WBSFormMetadataController autoFillOneTimeCodeFieldsInFrame:withValue:]
  -[WBSFormMetadataController finishedAutoFillingForm:inFrame:shouldSubmit:]
  -[WBSFormMetadataController formAutoFillNodeForJSWrapper:inContext:]
  -[WBSFormMetadataController autoFillFormSynchronouslyInFrame:withValues:]
  -[WBSFormMetadataController autoFillFormInFrame:withValues:fillSynchronously:setAutoFilled:focusFieldAfterFilling:fieldToFocus:]
  -[WBSFormMetadataController isFrameAnnotated:]
  -[WBSFormMetadataController isFrameOrChildAnnotated:]
  -[WBSFormMetadataController recursivelyClearMetadataForFrames:]
  -[WBSFormMetadataController clearMetadataForFrame:]
  -[WBSFormMetadataController fillForm:inFrame:withPassword:focusedFieldControlID:]
  -[WBSFormMetadataController metadataForFrame:requestType:]
  -[WBSFormMetadataController recursivelyCollectMetadataInFrame:requestType:frames:formMetadata:]
  -[WBSFormMetadataController recursivelyCollectAncestorFramesOfFrame:startingFromFrame:ancestorFrames:]
  -[WBSFormMetadataController _jsObjectForForm:inFrame:]
  -[WBSFormMetadataController metadataForForm:inFrame:requestType:addUserEditedStateForUserNameAndPasswordFields:]
  -[WBSFormMetadataController _formMetadataByAddingInformationAboutUserEditedStateForUserNameAndPasswordFieldsToFormMetadata:inFrame:]
  -[WBSFormMetadataController formAutoFillNodeForField:inFrame:]
  -[WBSFormMetadataController clearScriptWorld]
  -[WBSFormMetadataController _unlockMetadataForForm:inFrame:]
  -[WBSFormMetadataController userEditedTextControlCountInArray:context:expectTextFieldsRatherThanTextAreas:]
  -[WBSFormMetadataController countUserEditedTextControlsInFrame:textFields:textAreas:]
  -[WBSFormMetadataController oneTimeCodeFieldFocused:withFieldMetadata:inFrame:]
  -[WBSFormMetadataController recursivelyCountUserEditedTextControlsInFrame:textFields:textAreas:]
  -[WBSFormMetadataController getMetadataForTextField:inFrame:textFieldMetadata:formMetadata:requestType:]
  -[WBSFormMetadataController getMetadataForAllFormsInPageWithMainFrame:requestType:frames:formMetadata:]
  -[WBSFormMetadataController addressBookAutoFillableFieldFocused:withAddressBookAutoFillableFieldMetadata:inFrame:]
  -[WBSFormMetadataController otherCreditCardFieldFocused:inFrame:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController unidentifiedTextFieldFocused:inFrame:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController _lockMetadataForForm:inFrame:]
  -[WBSFormMetadataController creditCardFieldFocused:inFrame:]
  -[WBSFormMetadataController passwordFieldBlurred:inFrame:page:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController creditCardFieldBlurred:inFrame:page:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController usernameFieldBlurred:inFrame:page:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController addressBookAutoFillableFieldBlurred:inFrame:page:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController otherCreditCardFieldBlurred:inFrame:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController oneTimeCodeFieldBlurred:inFrame:page:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController autoFillFormInFrame:withValues:]
  -[WBSFormMetadataController autoFillFormInFrame:withValues:fillSynchronously:setAutoFilled:focusFieldAfterFilling:fieldToFocus:submitForm:]
  -[WBSFormMetadataController unidentifiedTextFieldBlurred:inFrame:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController autoFillFormSynchronouslyInFrame:withValues:selectFieldAfterFilling:]
  -[WBSFormMetadataController autoFillFormAsynchronouslyInFrame:withValues:selectFieldAfterFilling:]
  -[WBSFormMetadataController setFormControls:inFrame:asAutoFilled:]


WBSPasswordSetWordList : WBSPasswordWordList
  // instance methods
  -[WBSPasswordSetWordList .cxx_destruct]
  -[WBSPasswordSetWordList initWithIdentifier:words:]
  -[WBSPasswordSetWordList enumerateEntriesForString:withBlock:]


WBSGeolocationPreferenceManager : WBSPerSitePreferenceManager <WBSPerSitePreferenceManagerDefaultsDelegate>
 @property  WBSPerSitePreference *geolocationPreference
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSGeolocationPreferenceManager removePreferenceValuesForDomains:fromPreference:completionHandler:]
  -[WBSGeolocationPreferenceManager perSitePreferencesStore]
  -[WBSGeolocationPreferenceManager initWithPerSitePreferencesStore:]
  -[WBSGeolocationPreferenceManager defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[WBSGeolocationPreferenceManager preferences]
  -[WBSGeolocationPreferenceManager .cxx_destruct]
  -[WBSGeolocationPreferenceManager valuesForPreference:]
  -[WBSGeolocationPreferenceManager _setValue:forDomain:shouldIncludeTimestamp:completionHandler:]
  -[WBSGeolocationPreferenceManager _isDateLessThanOneDayAgo:]
  -[WBSGeolocationPreferenceManager setDefaultGeolocationSetting:completionHandler:]
  -[WBSGeolocationPreferenceManager perSitePreferenceValueForGeolocationSetting:]
  -[WBSGeolocationPreferenceManager _removePermissionsPassingTest:completionHandler:]
  -[WBSGeolocationPreferenceManager removeAllPermissionsWithCompletionHandler:]
  -[WBSGeolocationPreferenceManager getGeolocationSettingForDomain:completionHandler:]
  -[WBSGeolocationPreferenceManager setDefaultGeolocationSetting:]
  -[WBSGeolocationPreferenceManager setGeolocationSetting:forDomain:completionHandler:]
  -[WBSGeolocationPreferenceManager removeAllTemporaryPermissions]
  -[WBSGeolocationPreferenceManager removeAllPermissions]
  -[WBSGeolocationPreferenceManager removeTemporaryPermissionsAddedAfterDate:completionHandler:]
  -[WBSGeolocationPreferenceManager removePermissionsAddedAfterDate:completionHandler:]
  -[WBSGeolocationPreferenceManager geolocationPreference]
  -[WBSGeolocationPreferenceManager getAllDomainsConfiguredForPreference:usingBlock:]
  -[WBSGeolocationPreferenceManager getValueOfPreference:forDomain:withTimeout:usingBlock:]
  -[WBSGeolocationPreferenceManager preferencesStoreKeyForPreference:]
  -[WBSGeolocationPreferenceManager localizedStringForValue:inPreference:]
  -[WBSGeolocationPreferenceManager setValue:ofPreference:forDomain:completionHandler:]


WBSPasswordWordListCollection : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSPasswordWordListCollection commonPasswordWordListCollection]
  +[WBSPasswordWordListCollection commonPasscodeWordListCollection]

  // instance methods
  -[WBSPasswordWordListCollection init]
  -[WBSPasswordWordListCollection entriesForString:]
  -[WBSPasswordWordListCollection .cxx_destruct]
  -[WBSPasswordWordListCollection enumerateEntriesForString:withBlock:]
  -[WBSPasswordWordListCollection addWordList:]


WBSFormToABBinder : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSFormToABBinder specifierForAutocompleteToken:]
  +[WBSFormToABBinder indexOfBestMatchForString:inArray:startingPosition:]
  +[WBSFormToABBinder addressBookFieldLabelPatternMatchers]
  +[WBSFormToABBinder emailFieldLabelPatternMatchers]
  +[WBSFormToABBinder specifierForLabel:]
  +[WBSFormToABBinder allSynonymsForMatch:formAppearsToBeChinese:]


WBSFrequentlyVisitedSiteCandidate : NSObject /usr/lib/libc++.1.dylib
 @property  WBSHistoryItem *historyItem
 @property  float score

  // class methods
  +[WBSFrequentlyVisitedSiteCandidate titleForHistoryItem:]

  // instance methods
  -[WBSFrequentlyVisitedSiteCandidate .cxx_destruct]
  -[WBSFrequentlyVisitedSiteCandidate initWithHistoryItem:score:]
  -[WBSFrequentlyVisitedSiteCandidate score]
  -[WBSFrequentlyVisitedSiteCandidate historyItem]


WBSFrequentlyVisitedSitesBannedURLStore : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSFrequentlyVisitedSitesBannedURLStore _historyItemsWereRemoved:]
  -[WBSFrequentlyVisitedSitesBannedURLStore urlStrings]
  -[WBSFrequentlyVisitedSitesBannedURLStore dealloc]
  -[WBSFrequentlyVisitedSitesBannedURLStore .cxx_destruct]
  -[WBSFrequentlyVisitedSitesBannedURLStore removeURLStrings:]
  -[WBSFrequentlyVisitedSitesBannedURLStore _bannedURLStringsToEntriesMap]
  -[WBSFrequentlyVisitedSitesBannedURLStore _writeOutBannedURLStringsAsynchronously]
  -[WBSFrequentlyVisitedSitesBannedURLStore removeAllURLStrings]
  -[WBSFrequentlyVisitedSitesBannedURLStore initWithStoreURL:history:]
  -[WBSFrequentlyVisitedSitesBannedURLStore containsURLString:]
  -[WBSFrequentlyVisitedSitesBannedURLStore _historyWasCleared:]
  -[WBSFrequentlyVisitedSitesBannedURLStore addURLString:]


WBSFrequentlyVisitedSitesController : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *frequentlyVisitedSites

  // class methods
  +[WBSFrequentlyVisitedSitesController scoreForHistoryItem:atTime:withMinimumVisitCount:]
  +[WBSFrequentlyVisitedSitesController scoreWithHistoryItemForVisitScoring:historyItemForURLScoring:atTime:withMinimumVisitCount:]
  +[WBSFrequentlyVisitedSitesController scoreForHistoryItem:atTime:]
  +[WBSFrequentlyVisitedSitesController scoreWithHistoryItemForVisitScoring:historyItemForURLScoring:atTime:]

  // instance methods
  -[WBSFrequentlyVisitedSitesController frequentlyVisitedSites]
  -[WBSFrequentlyVisitedSitesController _canonicalizedFavoritesURLStringSet]
  -[WBSFrequentlyVisitedSitesController .cxx_destruct]
  -[WBSFrequentlyVisitedSitesController _recomputeFrequentlyVisitedSitesNow]
  -[WBSFrequentlyVisitedSitesController _computeFrequentlyVisitedSiteCandidates]
  -[WBSFrequentlyVisitedSitesController _scoreForHistoryItem:]
  -[WBSFrequentlyVisitedSitesController _updateFrequentlyVisitedSitesWithCandidates:]
  -[WBSFrequentlyVisitedSitesController _postFrequentlyVisitedSitesDidChangeNotification]
  -[WBSFrequentlyVisitedSitesController initWithHistory:bannedURLStore:]
  -[WBSFrequentlyVisitedSitesController recomputeFrequentlyVisitedSitesIfNecessary]
  -[WBSFrequentlyVisitedSitesController _saveFrequentlyVisitedSites:]
  -[WBSFrequentlyVisitedSitesController clearFrequentlyVisitedSites]


WBSSafariSandboxBrokerConnection : NSObject /usr/lib/libc++.1.dylib <WBSSafariSandboxBrokerProtocol>
  // instance methods
  -[WBSSafariSandboxBrokerConnection .cxx_destruct]
  -[WBSSafariSandboxBrokerConnection _connectionWithCompletionHandler:]
  -[WBSSafariSandboxBrokerConnection ensureConnected:]


WBSHistory : NSObject /usr/lib/libc++.1.dylib <WBSHistoryStoreDelegate>
 @property  NSArray *allItems
 @property  BOOL hasAnyHistoryItems
 @property  unsigned long numberOfHistoryItems
 @property  unsigned long numberOfHistoryItemsOnHistoryQueue
 @property  double historyAgeLimit
 @property  WBSHistoryTagMap *historyTagMap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistory existingSharedHistory]
  +[WBSHistory historyPropertyListURL]
  +[WBSHistory historyDatabaseWriteAheadLogURL]
  +[WBSHistory clearExistingSharedHistory]
  +[WBSHistory historyDatabaseURL]

  // instance methods
  -[WBSHistory vacuumHistoryWithCompletionHandler:]
  -[WBSHistory replayAndAddTombstones:completionHandler:]
  -[WBSHistory computeFrequentlyVisitedSites:minimalVisitCountScore:disallowList:allowList:options:currentTime:completionHandler:]
  -[WBSHistory searchForUserTypedString:options:currentTime:enumerationBlock:completionHandler:]
  -[WBSHistory enumerateItemsUsingBlock:]
  -[WBSHistory historyStoreShouldCheckDatabaseIntegrity:]
  -[WBSHistory performMaintenance:]
  -[WBSHistory _unload]
  -[WBSHistory init]
  -[WBSHistory allItems]
  -[WBSHistory performMaintenance]
  -[WBSHistory _startLoading]
  -[WBSHistory performBlockAfterHistoryHasLoaded:]
  -[WBSHistory clearHistoryVisitsAddedAfterDate:beforeDate:completionHandler:]
  -[WBSHistory .cxx_destruct]
  -[WBSHistory pruneTombstonesWithEndDatePriorToDate:]
  -[WBSHistory clearHistory]
  -[WBSHistory close]
  -[WBSHistory getAllTombstonesWithCompletion:]
  -[WBSHistory _removeAllVisitedLinks]
  -[WBSHistory initializeCloudHistoryWithConfiguration:completionHandler:]
  -[WBSHistory visitIdentifiersMatchingExistingVisits:populateAssociatedVisits:completion:]
  -[WBSHistory _historyItemClass]
  -[WBSHistory setHistoryAgeLimit:]
  -[WBSHistory historyLoader:didLoadItems:discardedItems:stringsForUserTypeDomainExpansion:]
  -[WBSHistory historyLoaderDidFinishLoading:]
  -[WBSHistory itemForURLString:createIfNeeded:]
  -[WBSHistory updateHistoryAfterSuccessfulPersistedLongLivedSaveOperationWithGeneration:completion:]
  -[WBSHistory setLastSeenDate:forCloudClientVersion:]
  -[WBSHistory checkIfLocalVisitExistsInAnyOfItems:withCompletion:]
  -[WBSHistory historyStoreDidFailDatabaseIntegrityCheck:]
  -[WBSHistory historyStore:didRemoveItems:]
  -[WBSHistory waitUntilHistoryHasLoaded]
  -[WBSHistory _removeItemForURLString:]
  -[WBSHistory _waitUntilHistoryHasLoadedMainThread]
  -[WBSHistory releaseCloudHistory:]
  -[WBSHistory _removeItemsInResponseToUserAction:completionHandler:]
  -[WBSHistory itemForURLString:]
  -[WBSHistory _addItemToStringsForUserTypedDomainExpansion:]
  -[WBSHistory _removeItemFromStringsForUserTypedDomainExpansion:]
  -[WBSHistory numberOfHistoryItems]
  -[WBSHistory numberOfHistoryItemsOnHistoryQueue]
  -[WBSHistory _loadHistoryAsynchronouslyIfNeeded]
  -[WBSHistory fetchTopicsFromStartDate:toEndDate:completionHandler:]
  -[WBSHistory fetchTopicsFromStartDate:toEndDate:limit:minimumItemCount:sortOrder:completionHandler:]
  -[WBSHistory historyAgeLimit]
  -[WBSHistory itemVisitedAtURLString:title:timeOfVisit:wasHTTPNonGet:wasFailure:increaseVisitCount:origin:]
  -[WBSHistory itemVisitedAtURLString:title:timeOfVisit:wasHTTPNonGet:wasFailure:increaseVisitCount:origin:attributes:]
  -[WBSHistory _dispatchHistoryItemWillChange:]
  -[WBSHistory _dispatchHistoryVisitAdded:]
  -[WBSHistory _dispatchHistoryItemsAdded:byUserInitiatedAction:]
  -[WBSHistory _dispatchHistoryItemDidChange:byUserInitiatedAction:]
  -[WBSHistory canRecordRedirectFromVisit:to:]
  -[WBSHistory _setAttributes:forVisit:]
  -[WBSHistory _dispatchHistoryCleared:]
  -[WBSHistory _loadHistory]
  -[WBSHistory _dispatchHistoryItemsLoaded:]
  -[WBSHistory historyTagMap]
  -[WBSHistory getVisitsCreatedAfterDate:beforeDate:completionHandler:]
  -[WBSHistory _addVisitedLinksForItemsIfNeeded:]
  -[WBSHistory closeWithCompletionHandler:]
  -[WBSHistory historyStore:didPrepareToDeleteWithDeletionPlan:]
  -[WBSHistory historyStore:didRemoveHostnames:]
  -[WBSHistory historyStore:didRemoveVisits:]
  -[WBSHistory clearHistoryWithCompletionHandler:]
  -[WBSHistory _addItem:addToStringsForUserTypedDomainExpansions:]
  -[WBSHistory _dispatchHistoryItemsRemovedDuringLoading:]
  -[WBSHistory _dispatchHistoryLoaded]
  -[WBSHistory _dispatchHistoryItemsRemoved:]
  -[WBSHistory hasAnyHistoryItems]
  -[WBSHistory _createHistoryStore]
  -[WBSHistory _sendNotification:withItems:]
  -[WBSHistory removeItemsInResponseToUserAction:]
  -[WBSHistory _removeHistoryItemsInResponseToUserAction:]
  -[WBSHistory addAutocompleteTrigger:forURLString:]
  -[WBSHistory getAutocompleteTriggersForURLString:completionHandler:]
  -[WBSHistory getVisitsAndTombstonesNeedingSyncWithVisitSyncWindow:completion:]
  -[WBSHistory itemForURL:]
  -[WBSHistory _isStringForUserTypedDomainExpansionInHistory:]
  -[WBSHistory enumerateItemsAsynchronouslyUsingBlock:completionHandler:]
  -[WBSHistory itemVisitedAtURLString:title:wasHTTPNonGet:wasFailure:increaseVisitCount:]
  -[WBSHistory itemRedirectedFrom:to:origin:date:]
  -[WBSHistory updateTitle:forVisit:]
  -[WBSHistory addAttributes:toVisit:]
  -[WBSHistory historyStore:didAddVisits:]
  -[WBSHistory historyStoreWasCleared:]
  -[WBSHistory getHighLevelHTTPFamilyDomainsVisitedAfterDate:beforeDate:onlyFromThisDevice:completionHandler:]
  -[WBSHistory removeAttributes:fromVisit:]
  -[WBSHistory addTagWithIdentifier:title:toItemAtURL:level:completionHandler:]
  -[WBSHistory savePendingChangesBeforeTerminationWithCompletionHandler:]
  -[WBSHistory lastSeenDateForCloudClientVersion:]
  -[WBSHistory setTitle:ofTag:completionHandler:]


WBSHistoryAccessSession : NSObject /usr/lib/libc++.1.dylib <WBSHistoryAccessSessionProtocol>
  // instance methods
  -[WBSHistoryAccessSession .cxx_destruct]
  -[WBSHistoryAccessSession getHistoryItemsVisitedAfterDate:beforeDate:completionHandler:]
  -[WBSHistoryAccessSession initWithHistoryService:]
  -[WBSHistoryAccessSession getHistoryVisitsAfterDate:beforeDate:completionHandler:]


WBSCredentialMatchCriteria : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long options
 @property  NSURL *URL
 @property  NSString *partialUsername

  // instance methods
  -[WBSCredentialMatchCriteria .cxx_destruct]
  -[WBSCredentialMatchCriteria options]
  -[WBSCredentialMatchCriteria partialUsername]
  -[WBSCredentialMatchCriteria initWithURL:options:partialUsername:]
  -[WBSCredentialMatchCriteria URL]


WBSHistoryAccessSessionProxy : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSHistoryAccessSessionProxy init]
  -[WBSHistoryAccessSessionProxy .cxx_destruct]
  -[WBSHistoryAccessSessionProxy getHistoryItemsVisitedAfterDate:beforeDate:completionHandler:]
  -[WBSHistoryAccessSessionProxy getHistoryVisitsAfterDate:beforeDate:completionHandler:]
  -[WBSHistoryAccessSessionProxy _getHistoryAccessSessionWithCompletionHandler:]


WBSHistoryConnection : NSObject /usr/lib/libc++.1.dylib <WBSHistoryConnectionProtocol>
  // instance methods
  -[WBSHistoryConnection finishClearingHistoryIfNecessaryWithCompletionHandler:]
  -[WBSHistoryConnection connectWithOptions:delegate:completionHandler:]
  -[WBSHistoryConnection getServiceInfo:]
  -[WBSHistoryConnection queryMemoryFootprint:]
  -[WBSHistoryConnection .cxx_destruct]
  -[WBSHistoryConnection initializeCloudHistoryWithConfiguration:completionHandler:]
  -[WBSHistoryConnection releaseCloudHistory:]
  -[WBSHistoryConnection beginURLCompletionSession:]
  -[WBSHistoryConnection beginHistoryAccessSession:]
  -[WBSHistoryConnection ensureConnected:]
  -[WBSHistoryConnection groupVisitsIntoSessionsBetweenStartDate:endDate:completionHandler:]
  -[WBSHistoryConnection debugGetDatabaseURLWithCompletionHandler:]
  -[WBSHistoryConnection initWithHistoryService:]
  -[WBSHistoryConnection getVisitedLinksWithCompletionHandler:]
  -[WBSHistoryConnection disconnectWithCompletionHandler:]


WBSTabOrderManager : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSTabOrderProvider> *tabOrderProvider
 @property  <WBSOrderedTab> *tabToSelectBeforeClosingSelectedTab

  // instance methods
  -[WBSTabOrderManager _newTabPositionPreferenceAppliesToSwawnedTabs]
  -[WBSTabOrderManager tabInsertionHintForNewBlankTab]
  -[WBSTabOrderManager _insertionHintWithIndexOfTabToInsertAfter:relation:]
  -[WBSTabOrderManager init]
  -[WBSTabOrderManager tabInsertionHintForPosition:]
  -[WBSTabOrderManager tabToSelectBeforeClosingSelectedTab]
  -[WBSTabOrderManager .cxx_destruct]
  -[WBSTabOrderManager tabToInsertSpawnedTabAfter]
  -[WBSTabOrderManager tabToInsertNewTabAfterForPosition:]
  -[WBSTabOrderManager _tab:isRelatedOrEqualToTab:]
  -[WBSTabOrderManager tabInsertionHintForSpawnedTab]
  -[WBSTabOrderManager setTabOrderProvider:]
  -[WBSTabOrderManager tab:isInSameSetAsTab:]
  -[WBSTabOrderManager tabInsertionHintForDuplicateOfTab:]
  -[WBSTabOrderManager tabInsertionHintForNewBlankTabInCurrentContext]
  -[WBSTabOrderManager tabOrderProvider]
  -[WBSTabOrderManager _indexOfTabToInsertNewTabAfter]
  -[WBSTabOrderManager _tabInsertionHintForNewBlankTabWithRecommendedPosition:]
  -[WBSTabOrderManager _userPreferredNewBlankTabPositionInCurrentContext:]
  -[WBSTabOrderManager _nextNonClosedTabAdjacentToIndex:inAscendingOrder:]
  -[WBSTabOrderManager _relationConsideringUserPreferenceForRelation:isBlankTab:]
  -[WBSTabOrderManager _insertionHintWithTabToInsertAfter:relation:]
  -[WBSTabOrderManager simplifiedIdentifierForDisplayInTabTitle:]
  -[WBSTabOrderManager _tabInsertionHintForNewTabAfterTab:relation:]
  -[WBSTabOrderManager _tabInsertionHintForPosition:isBlankTab:]
  -[WBSTabOrderManager _userPreferredNewSpawnedTabPosition]
  -[WBSTabOrderManager tabToInsertNewBlankTabAfter]
  -[WBSTabOrderManager _indexOfLastRelatedTab]


WBSTabOrderInsertionHint : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSOrderedTab> *tabToInsertAfter
 @property  unsigned long insertionIndex
 @property  unsigned long relationType

  // instance methods
  -[WBSTabOrderInsertionHint .cxx_destruct]
  -[WBSTabOrderInsertionHint relationType]
  -[WBSTabOrderInsertionHint tabToInsertAfter]
  -[WBSTabOrderInsertionHint initWithTabToInsertAfter:insertionIndex:relation:]
  -[WBSTabOrderInsertionHint initWithTabToInsertAfter:relation:]
  -[WBSTabOrderInsertionHint insertionIndex]


WBSHistoryConnectionProxy : NSObject /usr/lib/libc++.1.dylib <WBSHistoryConnectionProxy>
 @property  NSObject<OS_dispatch_queue> *connectionProxyQueue
 @property  <WBSHistoryConnectionProxyDelegate> *delegate

  // instance methods
  -[WBSHistoryConnectionProxy finishClearingHistoryIfNecessaryWithCompletionHandler:]
  -[WBSHistoryConnectionProxy _setupConnection]
  -[WBSHistoryConnectionProxy connectWithOptions:delegate:completionHandler:]
  -[WBSHistoryConnectionProxy getServiceInfo:]
  -[WBSHistoryConnectionProxy _defaultProxyErrorHandlerWithSimpleReplyCompletionHandler:]
  -[WBSHistoryConnectionProxy init]
  -[WBSHistoryConnectionProxy queryMemoryFootprint:]
  -[WBSHistoryConnectionProxy dealloc]
  -[WBSHistoryConnectionProxy .cxx_destruct]
  -[WBSHistoryConnectionProxy _createConnection]
  -[WBSHistoryConnectionProxy queryMemoryFootprintWithError:]
  -[WBSHistoryConnectionProxy initializeCloudHistoryWithConfiguration:completionHandler:]
  -[WBSHistoryConnectionProxy releaseCloudHistory:]
  -[WBSHistoryConnectionProxy beginURLCompletionSession:]
  -[WBSHistoryConnectionProxy beginHistoryAccessSession:]
  -[WBSHistoryConnectionProxy ensureConnected:]
  -[WBSHistoryConnectionProxy groupVisitsIntoSessionsBetweenStartDate:endDate:completionHandler:]
  -[WBSHistoryConnectionProxy killService]
  -[WBSHistoryConnectionProxy debugGetDatabaseURLWithCompletionHandler:]
  -[WBSHistoryConnectionProxy setDelegate:]
  -[WBSHistoryConnectionProxy getVisitedLinksWithCompletionHandler:]
  -[WBSHistoryConnectionProxy delegate]
  -[WBSHistoryConnectionProxy connectionProxyQueue]
  -[WBSHistoryConnectionProxy disconnectWithCompletionHandler:]


WBSHistoryDatabaseAccessBroker : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSHistoryDatabaseAccessBroker requestAccessType:onQueue:completionHandler:]
  -[WBSHistoryDatabaseAccessBroker init]
  -[WBSHistoryDatabaseAccessBroker _requestReadWriteAccessOnQueue:completionHandler:]
  -[WBSHistoryDatabaseAccessBroker initWithHistoryDatabaseURL:]
  -[WBSHistoryDatabaseAccessBroker .cxx_destruct]
  -[WBSHistoryDatabaseAccessBroker databaseLastModifiedDate]
  -[WBSHistoryDatabaseAccessBroker _requestReadOnlyAccessOnQueue:completionHandler:]
  -[WBSHistoryDatabaseAccessBroker requestAccessType:onQueue:completionHandlerWithInvalidationHandler:]
  -[WBSHistoryDatabaseAccessBroker _requestAccessType:onQueue:completionHandler:]
  -[WBSHistoryDatabaseAccessBroker _openDatabaseWithAccessType:onQueue:error:]


WBSHistoryDeletionPlan : NSObject /usr/lib/libc++.1.dylib
 @property  NSSet *triggeringItems
 @property  NSSet *triggeringVisits
 @property  NSSet *discoveredItemsToDelete
 @property  NSSet *discoveredVisitsToDelete
 @property  NSSet *allItemsToDelete
 @property  NSSet *allVisitsToDeleteExcludingVisitsFromItemsBeingDeleted
 @property  NSMapTable *allVisitsToDeleteByItemExcludingItemsBeingDeleted
 @property  NSMapTable *updatedLastVisitsByItem
 @property  BOOL wasPrepared

  // instance methods
  -[WBSHistoryDeletionPlan allItemsToDelete]
  -[WBSHistoryDeletionPlan allVisitsToDeleteExcludingVisitsFromItemsBeingDeleted]
  -[WBSHistoryDeletionPlan _extraVisitsToDeleteWhenDeletingItems:visits:]
  -[WBSHistoryDeletionPlan _extraVisitsToDeleteWhenDeletingItems:visits:relatedVisitKey:relatedVisitsQueryFactory:]
  -[WBSHistoryDeletionPlan initWithSQLiteStore:triggeringVisits:excludingItems:visits:]
  -[WBSHistoryDeletionPlan initWithSQLiteStore:triggeringItems:excludingItems:visits:reason:]
  -[WBSHistoryDeletionPlan _prepareWithTriggeringItems:triggeringVisits:]
  -[WBSHistoryDeletionPlan triggeringItems]
  -[WBSHistoryDeletionPlan triggeringVisits]
  -[WBSHistoryDeletionPlan discoveredVisitsToDelete]
  -[WBSHistoryDeletionPlan .cxx_destruct]
  -[WBSHistoryDeletionPlan initWithSQLiteStore:discoveredItemsToDelete:]
  -[WBSHistoryDeletionPlan initWithSQLiteStore:triggeringVisits:updatedLastVisitsByItem:]
  -[WBSHistoryDeletionPlan discoveredItemsToDelete]
  -[WBSHistoryDeletionPlan allVisitsToDeleteByItemExcludingItemsBeingDeleted]
  -[WBSHistoryDeletionPlan updatedLastVisitsByItem]
  -[WBSHistoryDeletionPlan wasPrepared]


WBSPasswordBreachHelperListener : NSObject /usr/lib/libc++.1.dylib <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSPasswordBreachHelperListener init]
  -[WBSPasswordBreachHelperListener _connectionHasValidEntitlements:]
  -[WBSPasswordBreachHelperListener .cxx_destruct]
  -[WBSPasswordBreachHelperListener listener:shouldAcceptNewConnection:]


WBSHistoryItem : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long dailyVisitCountScoresCountOnSynchronizationQueue
 @property  r^i dailyVisitCountScoresPtrOnSynchronizationQueue
 @property  unsigned long weeklyVisitCountScoresCountOnSynchronizationQueue
 @property  r^i weeklyVisitCountScoresPtrOnSynchronizationQueue
 @property  long long databaseID
 @property  NSString *title
 @property  NSString *urlString
 @property  NSString *userVisibleURLString
 @property  NSURL *url
 @property  NSString *stringForUserTypedDomainExpansion
 @property  WBSHistoryVisit *lastVisit
 @property  double lastVisitedTimeInterval
 @property  NSDate *lastVisitedDate
 @property  NSArray *visits
 @property  int visitCount
 @property  int visitCountScore
 @property  BOOL shouldRecomputeDerivedVisitCountScores
 @property  BOOL lastVisitWasHTTPNonGet
 @property  BOOL lastVisitWasFailure
 @property  WBSHistoryItem *lastVisitRedirectDestinationItem
 @property  WBSHistoryItem *endOfLastVisitRedirectChain
 @property  WBSHistoryVisit *lastVisitOnSynchronizationQueue
 @property  double lastVisitedTimeIntervalOnSynchronizationQueue
 @property  NSSet *visitsPendingWriteToDataStoreOnSynchronizationQueue
 @property  NSData *dailyVisitCountScoresDataOnSynchronizationQueue
 @property  NSData *weeklyVisitCountScoresDataOnSynchronizationQueue
 @property  NSString *userVisibleHostOrFallbackURLString

  // class methods
  +[WBSHistoryItem initialize]
  +[WBSHistoryItem synchronizationQueue]
  +[WBSHistoryItem timeIntervalForDailyAndWeeklyVisitCountScores]

  // instance methods
  -[WBSHistoryItem databaseID]
  -[WBSHistoryItem setDatabaseID:]
  -[WBSHistoryItem removeVisitsOnSynchronizationQueue:candidateLastVisit:]
  -[WBSHistoryItem _addVisitToPendingWriteSet:]
  -[WBSHistoryItem url]
  -[WBSHistoryItem _addVisit:]
  -[WBSHistoryItem _addExistingVisit:]
  -[WBSHistoryItem .cxx_construct]
  -[WBSHistoryItem dealloc]
  -[WBSHistoryItem weeklyVisitCountScoresDataOnSynchronizationQueue]
  -[WBSHistoryItem visitWasModified:]
  -[WBSHistoryItem .cxx_destruct]
  -[WBSHistoryItem userVisibleURLString]
  -[WBSHistoryItem lastVisitWasFailure]
  -[WBSHistoryItem weeklyVisitCountScoresCountOnSynchronizationQueue]
  -[WBSHistoryItem lastVisitedTimeIntervalOnSynchronizationQueue]
  -[WBSHistoryItem _wasVisitedOnSynchronizationQueue:]
  -[WBSHistoryItem setTitle:]
  -[WBSHistoryItem lastVisitRedirectDestinationItem]
  -[WBSHistoryItem addExistingVisit:]
  -[WBSHistoryItem lastVisitWasHTTPNonGet]
  -[WBSHistoryItem urlString]
  -[WBSHistoryItem visitsPendingWriteToDataStoreOnSynchronizationQueue]
  -[WBSHistoryItem title]
  -[WBSHistoryItem _accessVisitCountScoresStorage:]
  -[WBSHistoryItem shouldRecomputeDerivedVisitCountScores]
  -[WBSHistoryItem endOfLastVisitRedirectChain]
  -[WBSHistoryItem visits]
  -[WBSHistoryItem updateLastVisitIfNil:]
  -[WBSHistoryItem userVisibleHostOrFallbackURLString]
  -[WBSHistoryItem _visitsPendingWriteSetCreatingIfNeeded:]
  -[WBSHistoryItem initWithURLString:]
  -[WBSHistoryItem wasRedirectedFrom:to:]
  -[WBSHistoryItem visitCountScore]
  -[WBSHistoryItem clearVisitsPendingWriteToDataStoreFromSynchronizationQueue]
  -[WBSHistoryItem wasVisited:]
  -[WBSHistoryItem dailyVisitCountScoresDataOnSynchronizationQueue]
  -[WBSHistoryItem lastVisitOnSynchronizationQueue]
  -[WBSHistoryItem dailyVisitCountScoresPtrOnSynchronizationQueue]
  -[WBSHistoryItem lastVisit]
  -[WBSHistoryItem weeklyVisitCountScoresPtrOnSynchronizationQueue]
  -[WBSHistoryItem initWithSQLiteRow:]
  -[WBSHistoryItem dailyVisitCountScoresCountOnSynchronizationQueue]
  -[WBSHistoryItem removeVisits:candidateLastVisit:]
  -[WBSHistoryItem updateWithStreamedItem:]
  -[WBSHistoryItem scoreOfVisit:wasUpdatedFrom:to:]
  -[WBSHistoryItem setLastVisitWasFailure:]
  -[WBSHistoryItem mergeDataFromItem:]
  -[WBSHistoryItem recomputeDerivedVisitCountScoresWithVisits:]
  -[WBSHistoryItem initWithHistoryStreamedItem:]
  -[WBSHistoryItem lastVisitedTimeInterval]
  -[WBSHistoryItem visitCount]
  -[WBSHistoryItem _visitsPendingWriteSetContains:]
  -[WBSHistoryItem stringForUserTypedDomainExpansion]
  -[WBSHistoryItem lastVisitedDate]


WBSPasswordBreachHelperProxy : NSObject /usr/lib/libc++.1.dylib <WBSPasswordBreachHelperProtocol>
  // instance methods
  -[WBSPasswordBreachHelperProxy init]
  -[WBSPasswordBreachHelperProxy runLookupSessionIgnoringMinimumDelay:completionHandler:]
  -[WBSPasswordBreachHelperProxy dealloc]
  -[WBSPasswordBreachHelperProxy getResultRecordDictionariesForResultQueryDictionaries:withCompletionHandler:]
  -[WBSPasswordBreachHelperProxy recentlyBreachedResultRecordDictionariesWithCompletionHandler:]
  -[WBSPasswordBreachHelperProxy clearRecentlyBreachedResultRecordsWithCompletionHandler:]
  -[WBSPasswordBreachHelperProxy addResultRecordDictionaries:completionHandler:]
  -[WBSPasswordBreachHelperProxy .cxx_destruct]
  -[WBSPasswordBreachHelperProxy _remoteObjectProxyWithErrorHandler:]
  -[WBSPasswordBreachHelperProxy invalidate]


WBSHistoryNotification : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSString *name
 @property  NSDictionary *userInfo

  // class methods
  +[WBSHistoryNotification supportsSecureCoding]

  // instance methods
  -[WBSHistoryNotification init]
  -[WBSHistoryNotification .cxx_destruct]
  -[WBSHistoryNotification name]
  -[WBSHistoryNotification initWithName:userInfo:]
  -[WBSHistoryNotification encodeWithCoder:]
  -[WBSHistoryNotification userInfo]
  -[WBSHistoryNotification initWithCoder:]


WBSProtectionSpaceMatch : NSObject /usr/lib/libc++.1.dylib
 @property  NSURLProtectionSpace *protectionSpace
 @property  NSDictionary *credentials
 @property  NSURLCredential *defaultCredential
 @property  long long matchLevel

  // instance methods
  -[WBSProtectionSpaceMatch .cxx_destruct]
  -[WBSProtectionSpaceMatch protectionSpace]
  -[WBSProtectionSpaceMatch defaultCredential]
  -[WBSProtectionSpaceMatch credentials]
  -[WBSProtectionSpaceMatch matchLevel]
  -[WBSProtectionSpaceMatch initWithProtectionSpace:credentials:defaultCredential:matchLevel:]


WBSHistoryService : NSObject /usr/lib/libc++.1.dylib <NSXPCListenerDelegate>
 @property  WBSHistoryDatabaseAccessBroker *databaseAccessBroker
 @property  WBSHistoryURLCompletionDataStore *urlCompletionDataStore
 @property  NSURL *databaseURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSHistoryService databaseAccessBroker]
  -[WBSHistoryService init]
  -[WBSHistoryService shutdown]
  -[WBSHistoryService resume]
  -[WBSHistoryService disconnectDatabase:completionHandler:]
  -[WBSHistoryService urlCompletionDataStore]
  -[WBSHistoryService dealloc]
  -[WBSHistoryService .cxx_destruct]
  -[WBSHistoryService listener:shouldAcceptNewConnection:]
  -[WBSHistoryService databaseURL]
  -[WBSHistoryService _createListener]
  -[WBSHistoryService connectWithOptions:connection:completionHandler:]
  -[WBSHistoryService _openOrReuseExistingDatabaseWithOptions:error:]
  -[WBSHistoryService _connectionIsEntitledToUseUserDatabase:]


WBSAllowedLegacyTLSHostManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSAllowedLegacyTLSHostManager initWithBrowserDefaults:]
  -[WBSAllowedLegacyTLSHostManager isLegacyTLSAllowedForHost:]
  -[WBSAllowedLegacyTLSHostManager allowLegacyTLSForHost:]
  -[WBSAllowedLegacyTLSHostManager clearAllLegacyTLSHosts]
  -[WBSAllowedLegacyTLSHostManager clearLegacyTLSForHostIfPresent:]
  -[WBSAllowedLegacyTLSHostManager clearLegacyTLSForHosts:]
  -[WBSAllowedLegacyTLSHostManager .cxx_destruct]


WBSHistoryServiceItem : WBSHistoryServiceObject
 @property  long long visitCount
 @property  long long visitCountScore
 @property  BOOL shouldRecomputeDerivedVisitCountScores
 @property  NSString *url
 @property  NSData *dailyVisitCounts
 @property  NSData *weeklyVisitCounts

  // class methods
  +[WBSHistoryServiceItem supportsSecureCoding]

  // instance methods
  -[WBSHistoryServiceItem url]
  -[WBSHistoryServiceItem setVisitCountScore:]
  -[WBSHistoryServiceItem .cxx_destruct]
  -[WBSHistoryServiceItem setShouldRecomputeDerivedVisitCountScores:]
  -[WBSHistoryServiceItem dailyVisitCounts]
  -[WBSHistoryServiceItem setDailyVisitCounts:]
  -[WBSHistoryServiceItem weeklyVisitCounts]
  -[WBSHistoryServiceItem setWeeklyVisitCounts:]
  -[WBSHistoryServiceItem encodeWithCoder:]
  -[WBSHistoryServiceItem shouldRecomputeDerivedVisitCountScores]
  -[WBSHistoryServiceItem setVisitCount:]
  -[WBSHistoryServiceItem visitCountScore]
  -[WBSHistoryServiceItem initWithItem:]
  -[WBSHistoryServiceItem visitCount]
  -[WBSHistoryServiceItem initWithCoder:]


WBSHistorySession : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *startDate
 @property  BOOL isCurrentSession

  // class methods
  +[WBSHistorySession currentSession]

  // instance methods
  -[WBSHistorySession init]
  -[WBSHistorySession initWithSessionStartDate:]
  -[WBSHistorySession startDate]
  -[WBSHistorySession .cxx_destruct]
  -[WBSHistorySession isCurrentSession]
  -[WBSHistorySession isEqual:]


WBSHistorySessionController : NSObject /usr/lib/libc++.1.dylib <WBSHistorySessions>
 @property  NSArray *orderedSessions
 @property  unsigned long numberOfSessions

  // class methods
  +[WBSHistorySessionController sharedSessionController]

  // instance methods
  -[WBSHistorySessionController _historyItemsWereRemoved:]
  -[WBSHistorySessionController initWithHistory:]
  -[WBSHistorySessionController .cxx_destruct]
  -[WBSHistorySessionController _historyItemsWereAdded:]
  -[WBSHistorySessionController _timeZoneDidChange:]
  -[WBSHistorySessionController _loadSessionCache]
  -[WBSHistorySessionController _getKey:forDate:]
  -[WBSHistorySessionController _orderedSessionKeys]
  -[WBSHistorySessionController _insertItem:withSessionKey:]
  -[WBSHistorySessionController _addItemsToSessionCache:shouldPostChangeNotification:]
  -[WBSHistorySessionController _removeItemsFromSessionCache:]
  -[WBSHistorySessionController _clearSessionCache]
  -[WBSHistorySessionController _dispatchHistorySessionsDidChangeNotification]
  -[WBSHistorySessionController orderedSessions]
  -[WBSHistorySessionController numberOfItemsVisitedInSession:]
  -[WBSHistorySessionController itemLastVisitedInSession:atIndex:]
  -[WBSHistorySessionController itemsLastVisitedInSession:]
  -[WBSHistorySessionController enumerateOrderedItemsLastVisitedInSession:usingBlock:]
  -[WBSHistorySessionController orderedItemsNewerThanDate:maxCount:completionHandler:]
  -[WBSHistorySessionController numberOfSessions]
  -[WBSHistorySessionController sessionForItem:]
  -[WBSHistorySessionController _requestSessionKeyForDate:withBlock:]


WBSHistoryTopicTag : WBSHistoryTag
 @property  NSArray *historyItems

  // class methods
  +[WBSHistoryTopicTag initialize]

  // instance methods
  -[WBSHistoryTopicTag _historyItemsWereRemoved:]
  -[WBSHistoryTopicTag dealloc]
  -[WBSHistoryTopicTag .cxx_destruct]
  -[WBSHistoryTopicTag initWithTitle:identifier:databaseID:modificationTimestamp:level:]
  -[WBSHistoryTopicTag groupHistoryItemsBySessionWithCompletionHandler:]
  -[WBSHistoryTopicTag historyItems]
  -[WBSHistoryTopicTag initWithTag:historyItems:]
  -[WBSHistoryTopicTag containsHistoryItem:]
  -[WBSHistoryTopicTag tagHistoryItem:]
  -[WBSHistoryTopicTag removeHistoryItems:]


WBSHistorySessionIntervalCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSHistorySessionIntervalCache init]
  -[WBSHistorySessionIntervalCache .cxx_construct]
  -[WBSHistorySessionIntervalCache .cxx_destruct]
  -[WBSHistorySessionIntervalCache beginningOfSessionContainingTime:]
  -[WBSHistorySessionIntervalCache _beginningOfSessionContainingTime:]
  -[WBSHistorySessionIntervalCache _getSessionIntervalForTime:beginningOfDay:beginningOfNextDay:]
  -[WBSHistorySessionIntervalCache initWithCalendar:]


WBSReaderConfigurationManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *configurationToSave
 @property  NSDictionary *configurationToSendToWebPage
 @property  BOOL javaScriptEnabled
 @property  BOOL darkModeEnabled
 @property  BOOL isOLEDDisplay
 @property  BOOL canMakeTextBigger
 @property  BOOL canMakeTextSmaller
 @property  BOOL resettingTextSizeWouldHaveEffect

  // instance methods
  -[WBSReaderConfigurationManager fontForLanguageTag:]
  -[WBSReaderConfigurationManager setJavaScriptEnabled:]
  -[WBSReaderConfigurationManager setIsOLEDDisplay:]
  -[WBSReaderConfigurationManager initWithPersistedSettingsAsDictionaryRepresentation:fontManager:]
  -[WBSReaderConfigurationManager _defaultThemeForAppearance:]
  -[WBSReaderConfigurationManager .cxx_destruct]
  -[WBSReaderConfigurationManager configurationToSave]
  -[WBSReaderConfigurationManager _effectiveTextZoomIndex]
  -[WBSReaderConfigurationManager _migrateToVersion5IfNecessary]
  -[WBSReaderConfigurationManager isOLEDDisplay]
  -[WBSReaderConfigurationManager initWithPersistedSettingsAsDictionaryRepresentation:fontManager:prefersLargerDefaultFontSize:]
  -[WBSReaderConfigurationManager resettingTextSizeWouldHaveEffect]
  -[WBSReaderConfigurationManager configurationToSendToWebPage]
  -[WBSReaderConfigurationManager _defaultTextZoomIndex]
  -[WBSReaderConfigurationManager javaScriptEnabled]
  -[WBSReaderConfigurationManager resetTextSize]
  -[WBSReaderConfigurationManager themeForAppearance:]
  -[WBSReaderConfigurationManager makeTextBigger]
  -[WBSReaderConfigurationManager canMakeTextBigger]
  -[WBSReaderConfigurationManager setFont:forLanguageTag:]
  -[WBSReaderConfigurationManager setTheme:forAppearance:]
  -[WBSReaderConfigurationManager makeTextSmaller]
  -[WBSReaderConfigurationManager setDarkModeEnabled:]
  -[WBSReaderConfigurationManager canMakeTextSmaller]
  -[WBSReaderConfigurationManager darkModeEnabled]


WBSHistoryVisitsNeedingRecomputedVisitCountsPredicate : NSObject /usr/lib/libc++.1.dylib <WBSHistoryVisitPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistoryVisitsNeedingRecomputedVisitCountsPredicate supportsSecureCoding]

  // instance methods
  -[WBSHistoryVisitsNeedingRecomputedVisitCountsPredicate statementForDatabase:cache:fetchOptions:error:]
  -[WBSHistoryVisitsNeedingRecomputedVisitCountsPredicate evaluateVisit:]
  -[WBSHistoryVisitsNeedingRecomputedVisitCountsPredicate evaluateServiceVisit:]
  -[WBSHistoryVisitsNeedingRecomputedVisitCountsPredicate encodeWithCoder:]
  -[WBSHistoryVisitsNeedingRecomputedVisitCountsPredicate initWithCoder:]


WBSHistoryTag : NSObject /usr/lib/libc++.1.dylib
 @property  long long databaseID
 @property  NSString *title
 @property  NSString *identifier
 @property  double modificationTimestamp
 @property  long long level

  // instance methods
  -[WBSHistoryTag databaseID]
  -[WBSHistoryTag level]
  -[WBSHistoryTag init]
  -[WBSHistoryTag modificationTimestamp]
  -[WBSHistoryTag .cxx_destruct]
  -[WBSHistoryTag initWithTitle:identifier:databaseID:modificationTimestamp:level:]
  -[WBSHistoryTag identifier]
  -[WBSHistoryTag title]
  -[WBSHistoryTag isEqual:]


WBSHistoryTombstone : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDictionary *dictionaryRepresentation
 @property  NSString *urlString
 @property  NSData *urlHash
 @property  NSData *urlSalt
 @property  double startTime
 @property  double endTime
 @property  long long generation
 @property  BOOL secure

  // class methods
  +[WBSHistoryTombstone supportsSecureCoding]

  // instance methods
  -[WBSHistoryTombstone endTime]
  -[WBSHistoryTombstone isSecure]
  -[WBSHistoryTombstone .cxx_destruct]
  -[WBSHistoryTombstone initWithStreamedTombstone:]
  -[WBSHistoryTombstone encodeWithCoder:]
  -[WBSHistoryTombstone urlString]
  -[WBSHistoryTombstone urlSalt]
  -[WBSHistoryTombstone urlHash]
  -[WBSHistoryTombstone initWithDictionary:]
  -[WBSHistoryTombstone matchesVisitTime:urlString:]
  -[WBSHistoryTombstone initWithURLString:urlHash:urlSalt:startTime:endTime:generation:]
  -[WBSHistoryTombstone initWithSQLiteRow:crypto:]
  -[WBSHistoryTombstone secureTombstoneWithSalt:]
  -[WBSHistoryTombstone dictionaryRepresentation]
  -[WBSHistoryTombstone generation]
  -[WBSHistoryTombstone initWithCoder:]
  -[WBSHistoryTombstone startTime]


WBSHistoryTagDatabaseController : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSHistoryTagDatabaseController clearAllTagsWithError:]
  -[WBSHistoryTagDatabaseController .cxx_destruct]
  -[WBSHistoryTagDatabaseController clearTagsFromStartDate:endDate:error:]
  -[WBSHistoryTagDatabaseController assignHistoryItemWithID:toTopicTagsWithIDs:error:]
  -[WBSHistoryTagDatabaseController renameTagWithID:toTitle:error:]
  -[WBSHistoryTagDatabaseController initWithDatabase:]
  -[WBSHistoryTagDatabaseController createTagsForIdentifiers:withTitles:type:level:error:]


WBSHistoryVisitsInRedirectChainPredicate : NSObject /usr/lib/libc++.1.dylib <WBSHistoryVisitPredicate>
 @property  WBSSetInt64 *visitIdentifiers
 @property  WBSSetInt64 *ignoredItemIdentifiers
 @property  long long direction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistoryVisitsInRedirectChainPredicate supportsSecureCoding]

  // instance methods
  -[WBSHistoryVisitsInRedirectChainPredicate statementForDatabase:cache:fetchOptions:error:]
  -[WBSHistoryVisitsInRedirectChainPredicate evaluateVisit:]
  -[WBSHistoryVisitsInRedirectChainPredicate direction]
  -[WBSHistoryVisitsInRedirectChainPredicate evaluateServiceVisit:]
  -[WBSHistoryVisitsInRedirectChainPredicate .cxx_destruct]
  -[WBSHistoryVisitsInRedirectChainPredicate encodeWithCoder:]
  -[WBSHistoryVisitsInRedirectChainPredicate initWithHistoryVisits:ignoredItems:direction:]
  -[WBSHistoryVisitsInRedirectChainPredicate visitIdentifiers]
  -[WBSHistoryVisitsInRedirectChainPredicate ignoredItemIdentifiers]
  -[WBSHistoryVisitsInRedirectChainPredicate initWithCoder:]


WBSPasswordBreachNotificationManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSPasswordBreachNotificationManager init]
  -[WBSPasswordBreachNotificationManager .cxx_destruct]
  -[WBSPasswordBreachNotificationManager _contentWithSavedPasswords:]
  -[WBSPasswordBreachNotificationManager _titleForSavedPasswords:]
  -[WBSPasswordBreachNotificationManager _bodyForSavedPasswords:]
  -[WBSPasswordBreachNotificationManager addBreachNotificationForSavedPasswords:withCompletionHandler:]


WBSWellKnownURLResponseCodeReliabilityChecker : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSWellKnownURLResponseCodeReliabilityChecker initWithURL:]
  -[WBSWellKnownURLResponseCodeReliabilityChecker .cxx_destruct]
  -[WBSWellKnownURLResponseCodeReliabilityChecker cancel]
  -[WBSWellKnownURLResponseCodeReliabilityChecker checkReliabilityWithCompletion:]


WBSHistoryURLCompletionDataStore : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSHistoryURLCompletionDataStore .cxx_destruct]
  -[WBSHistoryURLCompletionDataStore _loadFromDatabaseIfNecessary]
  -[WBSHistoryURLCompletionDataStore _completionItemFromRow:]
  -[WBSHistoryURLCompletionDataStore _enumerateCompletionItemsForMostRecentVisitsFromDatabase:usingBlock:]
  -[WBSHistoryURLCompletionDataStore _completionItemFromDatabase:withVisitDatabaseID:]
  -[WBSHistoryURLCompletionDataStore getSnapshotWithCompletionHandler:]
  -[WBSHistoryURLCompletionDataStore initWithHistoryService:]


WBSHistoryURLCompletionMatchData : NSObject /usr/lib/libc++.1.dylib <WBSURLCompletionMatchData>
 @property  NSString *originalURLString
 @property  BOOL containsBookmark
 @property  double lastVisitedTimeInterval
 @property  BOOL lastVisitWasFailure
 @property  BOOL shouldPreload
 @property  long long visitCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSHistoryURLCompletionMatchData init]
  -[WBSHistoryURLCompletionMatchData .cxx_construct]
  -[WBSHistoryURLCompletionMatchData .cxx_destruct]
  -[WBSHistoryURLCompletionMatchData lastVisitWasFailure]
  -[WBSHistoryURLCompletionMatchData shouldPreload]
  -[WBSHistoryURLCompletionMatchData matchDataByMergingWithMatchData:]
  -[WBSHistoryURLCompletionMatchData matchesAutocompleteTrigger:]
  -[WBSHistoryURLCompletionMatchData initWithCompletionItem:]
  -[WBSHistoryURLCompletionMatchData containsBookmark]
  -[WBSHistoryURLCompletionMatchData pageTitleAtIndex:]
  -[WBSHistoryURLCompletionMatchData pageTitleForUserVisibleURLStringAtIndex:]
  -[WBSHistoryURLCompletionMatchData originalURLString]
  -[WBSHistoryURLCompletionMatchData userVisibleURLStringForPageTitleAtIndex:]
  -[WBSHistoryURLCompletionMatchData userVisibleURLStringAtIndex:]
  -[WBSHistoryURLCompletionMatchData enumeratePageTitlesUsingBlock:]
  -[WBSHistoryURLCompletionMatchData topSitesScoreForPageTitleAtTime:]
  -[WBSHistoryURLCompletionMatchData lastVisitedTimeInterval]
  -[WBSHistoryURLCompletionMatchData visitCount]
  -[WBSHistoryURLCompletionMatchData enumerateUserVisibleURLsUsingBlock:]
  -[WBSHistoryURLCompletionMatchData topSitesScoreForURLStringAtIndex:atTime:]


WBSHistoryVisitsAndTombstonesInSyncWindowPredicate : NSObject /usr/lib/libc++.1.dylib <WBSHistoryVisitPredicate, WBSHistoryTombstonePredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistoryVisitsAndTombstonesInSyncWindowPredicate supportsSecureCoding]

  // instance methods
  -[WBSHistoryVisitsAndTombstonesInSyncWindowPredicate statementForDatabase:cache:fetchOptions:error:]
  -[WBSHistoryVisitsAndTombstonesInSyncWindowPredicate evaluateVisit:]
  -[WBSHistoryVisitsAndTombstonesInSyncWindowPredicate evaluateTombstone:]
  -[WBSHistoryVisitsAndTombstonesInSyncWindowPredicate evaluateServiceVisit:]
  -[WBSHistoryVisitsAndTombstonesInSyncWindowPredicate encodeWithCoder:]
  -[WBSHistoryVisitsAndTombstonesInSyncWindowPredicate initWithSyncWindow:lastSyncedGeneration:]
  -[WBSHistoryVisitsAndTombstonesInSyncWindowPredicate evaluateServiceTombstone:]
  -[WBSHistoryVisitsAndTombstonesInSyncWindowPredicate initWithCoder:]


WBSHistoryURLCompletionSession : NSObject /usr/lib/libc++.1.dylib <WBSURLCompletionDataSource, WBSURLCompletionSessionProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSHistoryURLCompletionSession dealloc]
  -[WBSHistoryURLCompletionSession .cxx_destruct]
  -[WBSHistoryURLCompletionSession _matchSnapshotForCompletionMatch:]
  -[WBSHistoryURLCompletionSession _ensureDatabaseIsWarmed]
  -[WBSHistoryURLCompletionSession _databaseConnectionOptions]
  -[WBSHistoryURLCompletionSession _getBestMatchesForTypedString:limit:forQueryID:completionHandler:]
  -[WBSHistoryURLCompletionSession enumerateMatchDataForTypedStringHint:options:withBlock:]
  -[WBSHistoryURLCompletionSession fakeBookmarkMatchDataWithURLString:title:shouldPreload:]
  -[WBSHistoryURLCompletionSession getBestMatchesForTypedString:limit:forQueryID:completionHandler:]
  -[WBSHistoryURLCompletionSession initWithHistoryService:]


WBSHistoryVisit : NSObject /usr/lib/libc++.1.dylib
 @property  long long databaseID
 @property  long long redirectSourceDatabaseID
 @property  long long redirectDestinationDatabaseID
 @property  long long generation
 @property  WBSHistoryItem *item
 @property  long long origin
 @property  double visitTime
 @property  NSString *title
 @property  int score
 @property  unsigned long attributes
 @property  BOOL loadSuccessful
 @property  BOOL httpNonGet
 @property  BOOL synthesized
 @property  WBSHistoryVisit *redirectSource
 @property  WBSHistoryVisit *redirectDestination
 @property  WBSHistoryVisit *endOfRedirectChain
 @property  unsigned long redirectSourceChainLength

  // class methods
  +[WBSHistoryVisit weightedVisitCountFromScore:]
  +[WBSHistoryVisit scoreForWeightedVisitCount:]
  +[WBSHistoryVisit synthesizedVisitWithHistoryItem:visitTime:]

  // instance methods
  -[WBSHistoryVisit setOrigin:]
  -[WBSHistoryVisit databaseID]
  -[WBSHistoryVisit item]
  -[WBSHistoryVisit setDatabaseID:]
  -[WBSHistoryVisit setScore:]
  -[WBSHistoryVisit hasAttributes:]
  -[WBSHistoryVisit origin]
  -[WBSHistoryVisit redirectSource]
  -[WBSHistoryVisit initWithHistoryItem:streamedVisit:]
  -[WBSHistoryVisit visitTime]
  -[WBSHistoryVisit setRedirectDestination:]
  -[WBSHistoryVisit .cxx_destruct]
  -[WBSHistoryVisit isSynthesized]
  -[WBSHistoryVisit setAttributes:]
  -[WBSHistoryVisit redirectDestination]
  -[WBSHistoryVisit wasHTTPNonGet]
  -[WBSHistoryVisit setItem:]
  -[WBSHistoryVisit attributes]
  -[WBSHistoryVisit initWithHistoryItem:visitTime:]
  -[WBSHistoryVisit setTitle:]
  -[WBSHistoryVisit title]
  -[WBSHistoryVisit score]
  -[WBSHistoryVisit initWithHistoryItem:sqliteRow:baseColumnIndex:]
  -[WBSHistoryVisit recomputeScore]
  -[WBSHistoryVisit loadWasSuccessful]
  -[WBSHistoryVisit setRedirectDestinationDatabaseID:]
  -[WBSHistoryVisit setGeneration:]
  -[WBSHistoryVisit redirectDestinationDatabaseID]
  -[WBSHistoryVisit endOfRedirectChain]
  -[WBSHistoryVisit _weight]
  -[WBSHistoryVisit generation]
  -[WBSHistoryVisit initWithHistoryItem:visitTime:loadWasSuccesful:wasHTTPNonGet:origin:attributes:]
  -[WBSHistoryVisit setRedirectSource:]
  -[WBSHistoryVisit redirectSourceChainLength]
  -[WBSHistoryVisit redirectSourceDatabaseID]
  -[WBSHistoryVisit setLoadSuccessful:]
  -[WBSHistoryVisit setRedirectSourceDatabaseID:]


WBSHistoryCrypto : NSObject /usr/lib/libc++.1.dylib
 @property  NSData *salt
 @property  NSData *cryptographicKey

  // instance methods
  -[WBSHistoryCrypto init]
  -[WBSHistoryCrypto .cxx_destruct]
  -[WBSHistoryCrypto encryptDictionary:]
  -[WBSHistoryCrypto initWithCryptographicKey:salt:]
  -[WBSHistoryCrypto salt]
  -[WBSHistoryCrypto _createCryptographicKey]
  -[WBSHistoryCrypto _createOrLoadCryptographicKey]
  -[WBSHistoryCrypto decryptDictionary:]
  -[WBSHistoryCrypto cryptographicKey]


WBSDomainWhitelistSnapshot : NSObject /usr/lib/libc++.1.dylib <WBSRemotePlistSnapshot>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSDomainWhitelistSnapshot init]
  -[WBSDomainWhitelistSnapshot isDomainWhitelisted:]
  -[WBSDomainWhitelistSnapshot .cxx_destruct]
  -[WBSDomainWhitelistSnapshot isEqual:]
  -[WBSDomainWhitelistSnapshot initWithDomains:]
  -[WBSDomainWhitelistSnapshot initWithPlistData:error:]
  -[WBSDomainWhitelistSnapshot plistDataWithFormat:]


WBSJSCallbackHandler : NSObject /usr/lib/libc++.1.dylib
 @property  ^{OpaqueJSContext=} globalContext
 @property  JSValue *jsValue

  // instance methods
  -[WBSJSCallbackHandler call]
  -[WBSJSCallbackHandler initWithCallbackFunction:errorReporter:context:]
  -[WBSJSCallbackHandler initWithErrorReporter:context:]
  -[WBSJSCallbackHandler reportErrorWithMessage:]
  -[WBSJSCallbackHandler callWithArgument:]
  -[WBSJSCallbackHandler initWithPromiseResolveFunction:rejectFunction:context:]
  -[WBSJSCallbackHandler callWithArgument:argument:]
  -[WBSJSCallbackHandler callWithArgument:argument:argument:]
  -[WBSJSCallbackHandler .cxx_construct]
  -[WBSJSCallbackHandler dealloc]
  -[WBSJSCallbackHandler .cxx_destruct]
  -[WBSJSCallbackHandler jsValue]
  -[WBSJSCallbackHandler globalContext]


WBSSmartHistorySearcher : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSSmartHistorySearcher _searchItemsInTopic:forText:options:]
  -[WBSSmartHistorySearcher initWithTopics:]
  -[WBSSmartHistorySearcher _searchTopicsForText:options:]
  -[WBSSmartHistorySearcher performSearchWithText:options:completionHandler:]
  -[WBSSmartHistorySearcher .cxx_destruct]


WBSSingleCreditCardData : NSObject /usr/lib/libc++.1.dylib
 @property  id value
 @property  long long type

  // instance methods
  -[WBSSingleCreditCardData init]
  -[WBSSingleCreditCardData .cxx_destruct]
  -[WBSSingleCreditCardData type]
  -[WBSSingleCreditCardData value]
  -[WBSSingleCreditCardData initWithValue:type:]


WBSDispatchSourceTimer : NSObject /usr/lib/libc++.1.dylib
 @property  double interval
 @property  double startDelay
 @property  BOOL repeats
 @property  @? handler
 @property  BOOL valid

  // class methods
  +[WBSDispatchSourceTimer scheduledTimerWithInterval:repeats:handler:]
  +[WBSDispatchSourceTimer scheduledRepeatingTimerWithStartDelay:interval:handler:]

  // instance methods
  -[WBSDispatchSourceTimer interval]
  -[WBSDispatchSourceTimer _scheduleTimer]
  -[WBSDispatchSourceTimer _initWithStartDelay:interval:repeats:handler:]
  -[WBSDispatchSourceTimer resetFireDate]
  -[WBSDispatchSourceTimer dealloc]
  -[WBSDispatchSourceTimer .cxx_destruct]
  -[WBSDispatchSourceTimer handler]
  -[WBSDispatchSourceTimer repeats]
  -[WBSDispatchSourceTimer isValid]
  -[WBSDispatchSourceTimer schedule]
  -[WBSDispatchSourceTimer startDelay]
  -[WBSDispatchSourceTimer invalidate]


WBSPasswordBreachQueuedPasswordBagManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *allNonbreachedPasswords

  // instance methods
  -[WBSPasswordBreachQueuedPasswordBagManager _unbreachedCredentials]
  -[WBSPasswordBreachQueuedPasswordBagManager _passwordBagFromDictionaryRepresentation:]
  -[WBSPasswordBreachQueuedPasswordBagManager _constructNewBagOnInternalQueue]
  -[WBSPasswordBreachQueuedPasswordBagManager .cxx_destruct]
  -[WBSPasswordBreachQueuedPasswordBagManager getPasswordsForNextBatchWithCompletionHandler:]
  -[WBSPasswordBreachQueuedPasswordBagManager _dictionaryRepresentation]
  -[WBSPasswordBreachQueuedPasswordBagManager allNonbreachedPasswords]
  -[WBSPasswordBreachQueuedPasswordBagManager reportPasswordCheckBatchResults:]
  -[WBSPasswordBreachQueuedPasswordBagManager initWithContext:results:passwordSource:]


WBSPasswordBreachResults : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSPasswordBreachResults resultRecordsForQueries:]
  -[WBSPasswordBreachResults recentlyBreachedResultRecords]
  -[WBSPasswordBreachResults clearRecentlyBreachedResultRecords]
  -[WBSPasswordBreachResults addResultRecords:]
  -[WBSPasswordBreachResults initWithContext:]
  -[WBSPasswordBreachResults _restoreResultsFromPersistentStoreIfNecessary]
  -[WBSPasswordBreachResults _saveResultsToPersistentStore]
  -[WBSPasswordBreachResults .cxx_destruct]
  -[WBSPasswordBreachResults clearAllResultsSynchronously]


WBSMultiRoundAutoFillManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *addressSetLabelUsedDuringFirstAutoFillPass
 @property  NSSet *addressBookPropertiesThatCanBeFilled

  // instance methods
  -[WBSMultiRoundAutoFillManager addControlUniqueIDIgnoredByFollowUpAutoFill:]
  -[WBSMultiRoundAutoFillManager init]
  -[WBSMultiRoundAutoFillManager dispatchFollowUpAutoFillOfFormWithMetdata:autoFillBlock:]
  -[WBSMultiRoundAutoFillManager didEditFormText]
  -[WBSMultiRoundAutoFillManager shouldAttemptFollowUpAutoFillInFormWithMetadata:requestType:]
  -[WBSMultiRoundAutoFillManager addControlUniqueIDsIgnoredByFollowUpAutoFill:]
  -[WBSMultiRoundAutoFillManager setAddressBookPropertiesThatCanBeFilled:]
  -[WBSMultiRoundAutoFillManager dealloc]
  -[WBSMultiRoundAutoFillManager .cxx_destruct]
  -[WBSMultiRoundAutoFillManager currentAutoFillAttemptTrigger]
  -[WBSMultiRoundAutoFillManager setAddressSetLabelUsedDuringFirstAutoFillPass:]
  -[WBSMultiRoundAutoFillManager addressBookPropertiesThatCanBeFilled]
  -[WBSMultiRoundAutoFillManager shouldControlBeIgnoredByFollowUpAutoFill:]
  -[WBSMultiRoundAutoFillManager addressSetLabelUsedDuringFirstAutoFillPass]


WBSClass : NSObject /usr/lib/libc++.1.dylib

WBSPasswordLexiconWordList : WBSPasswordWordList
  // class methods
  +[WBSPasswordLexiconWordList lexiconWordListWithIdentifier:localeIdentifier:]

  // instance methods
  -[WBSPasswordLexiconWordList dealloc]
  -[WBSPasswordLexiconWordList initWithIdentifier:lexicon:]
  -[WBSPasswordLexiconWordList enumerateEntriesForString:withBlock:]


WBSPasswordBreachRequestManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSPasswordBreachRequestManager initWithContext:]
  -[WBSPasswordBreachRequestManager .cxx_destruct]
  -[WBSPasswordBreachRequestManager fetchHighFrequencyBucketWithCompletionHandler:]
  -[WBSPasswordBreachRequestManager fetchLowFrequencyBucketsForBucketIdentifiersAndClientBlindedHashes:completionHandler:]
  -[WBSPasswordBreachRequestManager _buildRequestWithURL:headers:completionHandler:]
  -[WBSPasswordBreachRequestManager _fetchBucketAtURL:withClientBlindedHash:completionHandler:]


WBSAutoplayQuirkWhitelistSnapshot : NSObject /usr/lib/libc++.1.dylib <WBSRemotePlistSnapshot>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSAutoplayQuirkWhitelistSnapshot init]
  -[WBSAutoplayQuirkWhitelistSnapshot .cxx_destruct]
  -[WBSAutoplayQuirkWhitelistSnapshot isEqual:]
  -[WBSAutoplayQuirkWhitelistSnapshot quirkTypeForDomain:]
  -[WBSAutoplayQuirkWhitelistSnapshot initWithPlistData:error:]
  -[WBSAutoplayQuirkWhitelistSnapshot plistDataWithFormat:]


WBSReaderAvailabilityCheckResult : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  BOOL readerAvailable
 @property  BOOL isSameDocumentNavigation
 @property  NSArray *textSamples

  // class methods
  +[WBSReaderAvailabilityCheckResult supportsSecureCoding]

  // instance methods
  -[WBSReaderAvailabilityCheckResult copyWithZone:]
  -[WBSReaderAvailabilityCheckResult setReaderAvailable:]
  -[WBSReaderAvailabilityCheckResult .cxx_destruct]
  -[WBSReaderAvailabilityCheckResult textSamples]
  -[WBSReaderAvailabilityCheckResult isReaderAvailable]
  -[WBSReaderAvailabilityCheckResult encodeWithCoder:]
  -[WBSReaderAvailabilityCheckResult setTextSamples:]
  -[WBSReaderAvailabilityCheckResult isSameDocumentNavigation]
  -[WBSReaderAvailabilityCheckResult setIsSameDocumentNavigation:]
  -[WBSReaderAvailabilityCheckResult initWithCoder:]


WBSHistoryServiceURLRepresentation : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *urlString
 @property  NSData *urlHash
 @property  NSData *urlSalt

  // class methods
  +[WBSHistoryServiceURLRepresentation supportsSecureCoding]

  // instance methods
  -[WBSHistoryServiceURLRepresentation copyWithZone:]
  -[WBSHistoryServiceURLRepresentation init]
  -[WBSHistoryServiceURLRepresentation .cxx_destruct]
  -[WBSHistoryServiceURLRepresentation encodeWithCoder:]
  -[WBSHistoryServiceURLRepresentation urlString]
  -[WBSHistoryServiceURLRepresentation urlSalt]
  -[WBSHistoryServiceURLRepresentation urlHash]
  -[WBSHistoryServiceURLRepresentation initWithURLString:]
  -[WBSHistoryServiceURLRepresentation initWithURLHash:salt:]
  -[WBSHistoryServiceURLRepresentation isEqual:]
  -[WBSHistoryServiceURLRepresentation initWithCoder:]


WBSAsynchronousRequestHelper : NSObject /usr/lib/libc++.1.dylib <NSURLConnectionDelegate, WBSAsynchronousRequest>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSAsynchronousRequestHelper connection:didReceiveResponse:]
  -[WBSAsynchronousRequestHelper dealloc]
  -[WBSAsynchronousRequestHelper connection:didFailWithError:]
  -[WBSAsynchronousRequestHelper connectionDidFinishLoading:]
  -[WBSAsynchronousRequestHelper .cxx_destruct]
  -[WBSAsynchronousRequestHelper cancel]
  -[WBSAsynchronousRequestHelper sendRequest]
  -[WBSAsynchronousRequestHelper initWithRequest:queue:completionHandler:]
  -[WBSAsynchronousRequestHelper connection:didReceiveData:]


WBSPasswordWarningStore : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSPasswordWarningStore sharedStore]

  // instance methods
  -[WBSPasswordWarningStore clearStoreSynchronously]
  -[WBSPasswordWarningStore .cxx_construct]
  -[WBSPasswordWarningStore .cxx_destruct]
  -[WBSPasswordWarningStore _initWithBackingStoreURL:]
  -[WBSPasswordWarningStore _initWithDefaultBackingStore]
  -[WBSPasswordWarningStore _saveStoreSoon]
  -[WBSPasswordWarningStore _saveStoreNow]
  -[WBSPasswordWarningStore _loadStoreIfNecessary]
  -[WBSPasswordWarningStore addPersistentIdentifier:]
  -[WBSPasswordWarningStore _addPersistentIdentifier:withLastWarningDate:]
  -[WBSPasswordWarningStore getContainsPersistentIdentifier:completionHandler:]
  -[WBSPasswordWarningStore synchronousyClearIdentifiersAddedAfterDate:]
  -[WBSPasswordWarningStore saveStoreSynchronously]


WBSTabDialogCancellationContext : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *reason
 @property  NSDictionary *userInfo

  // class methods
  +[WBSTabDialogCancellationContext cancellationContextWithReason:userInfo:]
  +[WBSTabDialogCancellationContext provisionalNavigationContext]
  +[WBSTabDialogCancellationContext committedNavigationContextWithURL:]
  +[WBSTabDialogCancellationContext tabClosedContext]

  // instance methods
  -[WBSTabDialogCancellationContext init]
  -[WBSTabDialogCancellationContext .cxx_destruct]
  -[WBSTabDialogCancellationContext userInfo]
  -[WBSTabDialogCancellationContext initWithReason:userInfo:]
  -[WBSTabDialogCancellationContext reason]


WBSHistoryTagsPredicate : NSObject /usr/lib/libc++.1.dylib <WBSHistoryPredicate>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  unsigned long tagType
 @property  NSSet *identifiers
 @property  unsigned long limit
 @property  unsigned long minimumItemCount
 @property  long long sortOrder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistoryTagsPredicate supportsSecureCoding]

  // instance methods
  -[WBSHistoryTagsPredicate sortOrder]
  -[WBSHistoryTagsPredicate tagType]
  -[WBSHistoryTagsPredicate identifiers]
  -[WBSHistoryTagsPredicate statementForDatabase:cache:fetchOptions:error:]
  -[WBSHistoryTagsPredicate setIdentifiers:]
  -[WBSHistoryTagsPredicate startDate]
  -[WBSHistoryTagsPredicate minimumItemCount]
  -[WBSHistoryTagsPredicate setLimit:]
  -[WBSHistoryTagsPredicate setSortOrder:]
  -[WBSHistoryTagsPredicate limit]
  -[WBSHistoryTagsPredicate .cxx_destruct]
  -[WBSHistoryTagsPredicate initWithStartDate:endDate:tagType:]
  -[WBSHistoryTagsPredicate encodeWithCoder:]
  -[WBSHistoryTagsPredicate endDate]
  -[WBSHistoryTagsPredicate setMinimumItemCount:]
  -[WBSHistoryTagsPredicate initWithCoder:]


WBSScopeTimeoutHandler : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSScopeTimeoutHandler init]
  -[WBSScopeTimeoutHandler dealloc]
  -[WBSScopeTimeoutHandler .cxx_destruct]
  -[WBSScopeTimeoutHandler initWithTimeout:autoBugCaptureDomain:detectedProcess:context:]
  -[WBSScopeTimeoutHandler initWithTimeout:handler:]


WBSPasswordOrderedSetWordList : WBSPasswordWordList
 @property  BOOL sensitive

  // instance methods
  -[WBSPasswordOrderedSetWordList isSensitive]
  -[WBSPasswordOrderedSetWordList .cxx_destruct]
  -[WBSPasswordOrderedSetWordList initWithIdentifier:isSensitive:orderedWordsArray:]
  -[WBSPasswordOrderedSetWordList initWithIdentifier:isSensitive:orderedWords:]
  -[WBSPasswordOrderedSetWordList enumerateEntriesForString:withBlock:]


WBSDomainWhitelistSnapshotTransformer : WBSConfigurationDataTransformer /System/Library/PrivateFrameworks/Lexicon.framework/Lexicon
  // instance methods
  -[WBSDomainWhitelistSnapshotTransformer objectFromData:]


WBSOpenSearchDescription : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *descriptionDocumentURLString
 @property  WBSOpenSearchURLTemplate *searchURLTemplate
 @property  WBSOpenSearchURLTemplate *urlTemplateForSuggestionsInJSON
 @property  WBSOpenSearchURLTemplate *urlTemplateForSuggestionsInXML

  // instance methods
  -[WBSOpenSearchDescription initWithDictionaryRepresentation:]
  -[WBSOpenSearchDescription .cxx_destruct]
  -[WBSOpenSearchDescription searchURLTemplate]
  -[WBSOpenSearchDescription isEqual:]
  -[WBSOpenSearchDescription dictionaryRepresentation]
  -[WBSOpenSearchDescription descriptionDocumentURLString]
  -[WBSOpenSearchDescription urlTemplateForSuggestionsInXML]
  -[WBSOpenSearchDescription urlTemplateForSuggestionsInJSON]
  -[WBSOpenSearchDescription initWithDescriptionDocumentURLString:searchURLTemplate:urlTemplateForSuggestionsInJSON:urlTemplateForSuggestionsInXML:]


WBSPasswordBreachCredential : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *password
 @property  NSData *persistentIdentifier
 @property  NSDate *dateLastModified

  // instance methods
  -[WBSPasswordBreachCredential password]
  -[WBSPasswordBreachCredential initWithSecItemDictionary:]
  -[WBSPasswordBreachCredential dateLastModified]
  -[WBSPasswordBreachCredential .cxx_destruct]
  -[WBSPasswordBreachCredential persistentIdentifier]
  -[WBSPasswordBreachCredential initWithPassword:persistentIdentifier:dateLastModified:]


WBSOpenSearchSchemaFetcher : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSOpenSearchSchemaFetcher sharedFetcher]

  // instance methods
  -[WBSOpenSearchSchemaFetcher .cxx_destruct]
  -[WBSOpenSearchSchemaFetcher _didFinishFetchingOpenSearchDescriptionDocumentWithURL:]
  -[WBSOpenSearchSchemaFetcher fetchOpenSearchDescriptionWithURL:]


WBSOpenSearchURLTemplateParameter : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *name
 @property  NSString *prefix
 @property  {_NSRange=QQ} range
 @property  BOOL optional

  // instance methods
  -[WBSOpenSearchURLTemplateParameter isOptional]
  -[WBSOpenSearchURLTemplateParameter range]
  -[WBSOpenSearchURLTemplateParameter setPrefix:]
  -[WBSOpenSearchURLTemplateParameter setRange:]
  -[WBSOpenSearchURLTemplateParameter .cxx_destruct]
  -[WBSOpenSearchURLTemplateParameter name]
  -[WBSOpenSearchURLTemplateParameter prefix]
  -[WBSOpenSearchURLTemplateParameter setName:]
  -[WBSOpenSearchURLTemplateParameter setOptional:]


WBSOpenSearchURLTemplate : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *templateString

  // class methods
  +[WBSOpenSearchURLTemplate supportsSecureCoding]

  // instance methods
  -[WBSOpenSearchURLTemplate copyWithZone:]
  -[WBSOpenSearchURLTemplate templateBySubstitutingValue:forParameter:]
  -[WBSOpenSearchURLTemplate initWithString:]
  -[WBSOpenSearchURLTemplate templateBySubstitutingValues:]
  -[WBSOpenSearchURLTemplate .cxx_destruct]
  -[WBSOpenSearchURLTemplate templateByAddingParameter:asURLQueryParameter:]
  -[WBSOpenSearchURLTemplate encodeWithCoder:]
  -[WBSOpenSearchURLTemplate templateString]
  -[WBSOpenSearchURLTemplate includesParameter:]
  -[WBSOpenSearchURLTemplate isEqual:]
  -[WBSOpenSearchURLTemplate URLWithSearchTerms:]
  -[WBSOpenSearchURLTemplate initWithCoder:]


WBSReaderNavigationPolicyDecider : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSReaderNavigationPolicyDecider readerPageWithURL:canLoadFrameWithURL:]


WBSPasswordBreachConfigurationBagLoader : NSObject /usr/lib/libc++.1.dylib <WBSRemotePlistControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSPasswordBreachConfigurationBagLoader sharedLoader]

  // instance methods
  -[WBSPasswordBreachConfigurationBagLoader init]
  -[WBSPasswordBreachConfigurationBagLoader dealloc]
  -[WBSPasswordBreachConfigurationBagLoader .cxx_destruct]
  -[WBSPasswordBreachConfigurationBagLoader getConfigurationBagWithCompletionHandler:]


WBSRecentHistoryTopicTagController : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long maximumNumberOfTopics
 @property  double timeIntervalBeforeNowForFetchingTags

  // instance methods
  -[WBSRecentHistoryTopicTagController initWithHistory:]
  -[WBSRecentHistoryTopicTagController .cxx_destruct]
  -[WBSRecentHistoryTopicTagController loadTopicsWithCompletionHandler:]
  -[WBSRecentHistoryTopicTagController maximumNumberOfTopics]
  -[WBSRecentHistoryTopicTagController setMaximumNumberOfTopics:]
  -[WBSRecentHistoryTopicTagController setTimeIntervalBeforeNowForFetchingTags:]
  -[WBSRecentHistoryTopicTagController timeIntervalBeforeNowForFetchingTags]


WBSParsecModel : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSParsecModel schema]
  +[WBSParsecModel optionalSchema]

  // instance methods
  -[WBSParsecModel _init]
  -[WBSParsecModel initWithDictionary:]
  -[WBSParsecModel initWithJSONObject:]


WBSPasswordEvaluation : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *password
 @property  NSArray *patternMatches
 @property  long long evaluationType
 @property  double guessesRequired
 @property  unsigned long strength
 @property  BOOL userShouldBeShownPassiveWarning
 @property  BOOL userShouldBeShownActiveWarning
 @property  WBSPasswordPatternMatch *bestPatternMatchForUserFeedback
 @property  NSString *userFeedbackString

  // instance methods
  -[WBSPasswordEvaluation _bestPatternMatchOfType:]
  -[WBSPasswordEvaluation compactDescriptionWithPasswordColumnWidth:includePatternMatches:]
  -[WBSPasswordEvaluation patternMatches]
  -[WBSPasswordEvaluation password]
  -[WBSPasswordEvaluation evaluationType]
  -[WBSPasswordEvaluation userShouldBeShownActiveWarning]
  -[WBSPasswordEvaluation .cxx_destruct]
  -[WBSPasswordEvaluation strength]
  -[WBSPasswordEvaluation userShouldBeShownPassiveWarning]
  -[WBSPasswordEvaluation userFeedbackString]
  -[WBSPasswordEvaluation guessesRequired]
  -[WBSPasswordEvaluation initWithEvaluationType:password:patternMatches:guessesRequired:]
  -[WBSPasswordEvaluation _userFeedbackLengthScoreForPatternMatch:]
  -[WBSPasswordEvaluation bestPatternMatchForUserFeedback]
  -[WBSPasswordEvaluation _shouldShowUserFeedbackStringsForWordListPatternMatch:]
  -[WBSPasswordEvaluation _passwordFeedbackString]


WBSMemoryPressureMonitor : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL pressured

  // instance methods
  -[WBSMemoryPressureMonitor init]
  -[WBSMemoryPressureMonitor dealloc]
  -[WBSMemoryPressureMonitor .cxx_destruct]
  -[WBSMemoryPressureMonitor pressured]
  -[WBSMemoryPressureMonitor setPressured:]


WBSOneShotTimer : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL isValid
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSDate *fireDate

  // instance methods
  -[WBSOneShotTimer initWithFireDate:queue:block:]
  -[WBSOneShotTimer .cxx_destruct]
  -[WBSOneShotTimer fireDate]
  -[WBSOneShotTimer initWithFireDate:queue:target:selector:]
  -[WBSOneShotTimer isValid]
  -[WBSOneShotTimer queue]
  -[WBSOneShotTimer invalidate]


WBSPasswordWordListEntry : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *word
 @property  BOOL sensitive
 @property  NSString *wordListIdentifier
 @property  unsigned long guessesRequired

  // instance methods
  -[WBSPasswordWordListEntry isSensitive]
  -[WBSPasswordWordListEntry word]
  -[WBSPasswordWordListEntry wordListIdentifier]
  -[WBSPasswordWordListEntry .cxx_destruct]
  -[WBSPasswordWordListEntry initWithWord:isSensitive:wordListIdentifier:guessesRequired:]
  -[WBSPasswordWordListEntry guessesRequired]


WBSHistoryServiceForTesting : WBSHistoryService
  // instance methods
  -[WBSHistoryServiceForTesting init]
  -[WBSHistoryServiceForTesting connectWithClass:]
  -[WBSHistoryServiceForTesting .cxx_destruct]
  -[WBSHistoryServiceForTesting _createListener]


WBSHistoryServiceDatabase : NSObject /usr/lib/libc++.1.dylib <WBSSQLiteDatabaseDelegate, WBSHistoryServiceDatabaseProtocol>
 @property  NSString *databaseID
 @property  NSURL *databaseURL
 @property  WBSHistoryServiceURLCompletion *urlCompletion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSHistoryServiceDatabase fetchAllTombstonesWithCompletionHandler:]
  -[WBSHistoryServiceDatabase vacuumHistoryWithCompletionHandler:]
  -[WBSHistoryServiceDatabase setMetadataValue:forKey:completionHandler:]
  -[WBSHistoryServiceDatabase fetchWithOptions:predicate:completionHandler:]
  -[WBSHistoryServiceDatabase warmUp]
  -[WBSHistoryServiceDatabase databaseID]
  -[WBSHistoryServiceDatabase replayAndAddTombstones:completionHandler:]
  -[WBSHistoryServiceDatabase fetchAutocompleteTriggersForURLString:completionHandler:]
  -[WBSHistoryServiceDatabase fetchDomainExpansions:]
  -[WBSHistoryServiceDatabase finishClearingHistoryIfNecessaryWithCompletionHandler:]
  -[WBSHistoryServiceDatabase recordVisitWithIdentifier:sourceVisit:title:wasHTTPNonGet:loadSuccessful:origin:attributes:completionHandler:]
  -[WBSHistoryServiceDatabase clearHistoryVisitsAddedAfterDate:beforeDate:tombstoneMode:completionHandler:]
  -[WBSHistoryServiceDatabase visitsAndTombstonesNeedingSyncWithVisitSyncWindow:completionHandler:]
  -[WBSHistoryServiceDatabase fetchDatabaseURL:]
  -[WBSHistoryServiceDatabase _deleteOldestItems:forPlan:]
  -[WBSHistoryServiceDatabase updateWithType:addOrModifyObjects:updateCurrentGeneration:updateLastSyncGeneration:updateLastMaintenance:completionHandler:]
  -[WBSHistoryServiceDatabase resetCloudHistoryDataWithCompletionHandler:]
  -[WBSHistoryServiceDatabase updateVisitWithIdentifier:title:completionHandler:]
  -[WBSHistoryServiceDatabase setTitle:ofTagWithID:completionHandler:]
  -[WBSHistoryServiceDatabase updateDatabaseAfterSuccessfulSyncWithGeneration:completionHandler:]
  -[WBSHistoryServiceDatabase fetchCloudClientVersionTable:]
  -[WBSHistoryServiceDatabase _recomputeItemScores:]
  -[WBSHistoryServiceDatabase createTagsForIdentifiers:withTitles:type:level:completionHandler:]
  -[WBSHistoryServiceDatabase expireOldVisits:completionHandler:]
  -[WBSHistoryServiceDatabase visitIdentifiersMatchingExistingVisits:completionHandler:]
  -[WBSHistoryServiceDatabase addAutocompleteTrigger:forURL:completionHandler:]
  -[WBSHistoryServiceDatabase flushWithCompletionHandler:]
  -[WBSHistoryServiceDatabase fetchMetadataForKeys:completionHandler:]
  -[WBSHistoryServiceDatabase clearHistoryItems:afterDate:beforeDate:tombstoneMode:completionHandler:]
  -[WBSHistoryServiceDatabase _dispatchEvent:listenersToIgnore:persistForDelayedDispatching:completionHandler:]
  -[WBSHistoryServiceDatabase recomputeItemScoresWithCompletionHandler:]
  -[WBSHistoryServiceDatabase markEventsAsReceivedByListener:eventIDs:completionHandler:]
  -[WBSHistoryServiceDatabase assignHistoryItemWithID:toTopicTagsWithIDs:completionHandler:]
  -[WBSHistoryServiceDatabase pruneTombstonesWithEndDatePriorToDate:completionHandler:]
  -[WBSHistoryServiceDatabase clearAllHistoryInsertingTombstoneUpToDate:completionHandler:]
  -[WBSHistoryServiceDatabase _insertTombstone:]
  -[WBSHistoryServiceDatabase performMaintenanceWithAgeLimit:itemCountLimit:completionHandler:]
  -[WBSHistoryServiceDatabase updateVisitWithIdentifier:removeAttributes:addAttributes:completionHandler:]
  -[WBSHistoryServiceDatabase checkIfLocalVisitExistsForDatabaseIDs:withCompletion:]
  -[WBSHistoryServiceDatabase fetchEventsForListener:completionHandler:]
  -[WBSHistoryServiceDatabase setLastSeenDate:forCloudClientVersion:completionHandler:]
  -[WBSHistoryServiceDatabase computeFrequentlyVisitedSites:minimalVisitCountScore:disallowList:allowList:options:currentTime:completionHandler:]
  -[WBSHistoryServiceDatabase lastSeenDateForCloudClientVersion:completionHandler:]
  -[WBSHistoryServiceDatabase dispatchEvent:listenersToIgnore:persistForDelayedDispatching:completionHandler:]
  -[WBSHistoryServiceDatabase searchForUserTypedString:options:currentTime:writeHandle:completionHandler:]
  -[WBSHistoryServiceDatabase _addAutocompleteTrigger:forURL:error:]
  -[WBSHistoryServiceDatabase _metadataForKey:error:]
  -[WBSHistoryServiceDatabase _generateDisposedVisitsForPlan:]
  -[WBSHistoryServiceDatabase _executePlan:outDeletedItemCount:outDeletedVisitCount:]
  -[WBSHistoryServiceDatabase _insertItem:]
  -[WBSHistoryServiceDatabase _findAllRelatedVisitsToItems:forPlan:]
  -[WBSHistoryServiceDatabase init]
  -[WBSHistoryServiceDatabase convertTombstoneWithGenerationToSecureFormat:lastSyncedGeneration:completionHandler:]
  -[WBSHistoryServiceDatabase _expireOldVisits:]
  -[WBSHistoryServiceDatabase _preparePlan:itemsToDelete:visitsToDelete:afterDate:beforeDate:]
  -[WBSHistoryServiceDatabase _updateItem:visitCountScore:dailyVisitCounts:weeklyVisitCounts:shouldRecomputeDerivedVisitCounts:]
  -[WBSHistoryServiceDatabase _fetchTombstonesWithOptions:predicate:writeDescriptor:]
  -[WBSHistoryServiceDatabase addDelegate:listenerName:forConnection:]
  -[WBSHistoryServiceDatabase _updateVisitWithIdentifier:removeAttributes:addAttributes:pendingVisit:]
  -[WBSHistoryServiceDatabase _countOfItems]
  -[WBSHistoryServiceDatabase _migrateToCurrentSchemaVersionIfNeeded]
  -[WBSHistoryServiceDatabase .cxx_construct]
  -[WBSHistoryServiceDatabase _clearAllHistoryInsertingTombstoneUpToDate:]
  -[WBSHistoryServiceDatabase _closeTagController]
  -[WBSHistoryServiceDatabase _permanentIDsForItemIfAvailable:]
  -[WBSHistoryServiceDatabase initWithID:url:options:error:]
  -[WBSHistoryServiceDatabase _commitPendingVisits:]
  -[WBSHistoryServiceDatabase _findAllRelatedVisits:forPlan:afterDate:beforeDate:]
  -[WBSHistoryServiceDatabase .cxx_destruct]
  -[WBSHistoryServiceDatabase _ensureLatestVisitsAreComputed]
  -[WBSHistoryServiceDatabase close]
  -[WBSHistoryServiceDatabase database:hadSevereError:]
  -[WBSHistoryServiceDatabase _fetchVisitsWithOptions:predicate:writeDescriptor:]
  -[WBSHistoryServiceDatabase _removeLegacyHistoryDatabaseIfNeeded]
  -[WBSHistoryServiceDatabase _markEventsAsReceivedByListener:eventIDs:]
  -[WBSHistoryServiceDatabase _recomputeVisitScores:]
  -[WBSHistoryServiceDatabase _commitPendingItems:]
  -[WBSHistoryServiceDatabase isOpen]
  -[WBSHistoryServiceDatabase _lastSeenDateForCloudClientVersion:]
  -[WBSHistoryServiceDatabase _notifyDelegatesOfItemIDs]
  -[WBSHistoryServiceDatabase _finishedClearingHistory]
  -[WBSHistoryServiceDatabase _currentGeneration]
  -[WBSHistoryServiceDatabase deletionPlanForItemsToDelete:visitsToDelete:completionHandler:]
  -[WBSHistoryServiceDatabase _notifyExecutionOfPlan:]
  -[WBSHistoryServiceDatabase databaseURL]
  -[WBSHistoryServiceDatabase _updateByAddingOrModifyObjects:updateCurrentGeneration:updateLastSyncGeneration:updateLastMaintenance:]
  -[WBSHistoryServiceDatabase _queuePendingUpdates]
  -[WBSHistoryServiceDatabase _addOrModifyObjects:]
  -[WBSHistoryServiceDatabase _commitPendingUpdates]
  -[WBSHistoryServiceDatabase _dateForMetadataKey:error:]
  -[WBSHistoryServiceDatabase _clearWBSHistorySQLiteStoreClearHistoryKeys]
  -[WBSHistoryServiceDatabase allocateTemporaryIDRange:]
  -[WBSHistoryServiceDatabase _checkpointWriteAheadLog]
  -[WBSHistoryServiceDatabase _insertTombstonesForURLs:afterDate:beforeDate:tombstoneMode:]
  -[WBSHistoryServiceDatabase _fetchListenerNamesFromDatabase:]
  -[WBSHistoryServiceDatabase _permanentIDsForVisitIfAvailable:]
  -[WBSHistoryServiceDatabase _fetchEventsForListener:error:]
  -[WBSHistoryServiceDatabase _updateVisitRedirectRelationships:]
  -[WBSHistoryServiceDatabase _pruneTombstonesOnDatabaseQueueWithEndDatePriorToDate:error:]
  -[WBSHistoryServiceDatabase urlCompletion]
  -[WBSHistoryServiceDatabase _shouldEmitLegacyTombstones]
  -[WBSHistoryServiceDatabase _startingClearHistoryOperationForStartDate:endDate:]
  -[WBSHistoryServiceDatabase _clearHistoryVisitsAddedAfterDate:beforeDate:tombstoneMode:]
  -[WBSHistoryServiceDatabase ensureLatestVisitsAreComputed:]
  -[WBSHistoryServiceDatabase _updateItem:]
  -[WBSHistoryServiceDatabase _collectDeletedURLsForPlan:]
  -[WBSHistoryServiceDatabase _generateUpdatedLastVisitForPlan:]
  -[WBSHistoryServiceDatabase _fetchObjectToTagMappingsWithOptions:predicate:writeDescriptor:]
  -[WBSHistoryServiceDatabase _findItemIDsForPendingVisitsWithError:]
  -[WBSHistoryServiceDatabase _clearHistoryItems:afterDate:beforeDate:tombstoneMode:]
  -[WBSHistoryServiceDatabase _ensureDatabaseIsSynced]
  -[WBSHistoryServiceDatabase _registerHistoryTagFrecencyScoringFunction]
  -[WBSHistoryServiceDatabase _updateListenerRegistration:lastSeen:]
  -[WBSHistoryServiceDatabase _collectDeletedHostnamesForPlan:]
  -[WBSHistoryServiceDatabase _updateVisit:]
  -[WBSHistoryServiceDatabase _writeEventToDatabase:listeners:error:]
  -[WBSHistoryServiceDatabase _oldestLatestVisit]
  -[WBSHistoryServiceDatabase _setMetadataValue:forKey:]
  -[WBSHistoryServiceDatabase _findObsoleteItemsForPlan:]
  -[WBSHistoryServiceDatabase _fetchTagsWithOptions:predicate:writeDescriptor:]
  -[WBSHistoryServiceDatabase _preparePlan:ageLimit:itemCountLimit:]
  -[WBSHistoryServiceDatabase _insertVisit:]
  -[WBSHistoryServiceDatabase _convertTombstoneWithGenerationToSecureFormat:lastSyncedGeneration:]
  -[WBSHistoryServiceDatabase _recomputeLatestVisitsForItems:]
  -[WBSHistoryServiceDatabase _reopenDatabase:]
  -[WBSHistoryServiceDatabase _prepareDatabase:]
  -[WBSHistoryServiceDatabase _notifyDelegatesOfVisitIDs]
  -[WBSHistoryServiceDatabase _lastSyncedGeneration]
  -[WBSHistoryServiceDatabase deletionPlanForAgeLimit:itemCountLimit:completionHandler:]


WBSDomainWhitelistManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSDomainWhitelistManager init]
  -[WBSDomainWhitelistManager isDomainWhitelisted:completionHandler:]
  -[WBSDomainWhitelistManager .cxx_destruct]
  -[WBSDomainWhitelistManager prepareForTermination]
  -[WBSDomainWhitelistManager initWithBuiltInWhitelistURL:downloadsDirectoryURL:resourceName:resourceVersion:updateDateDefaultsKey:updateInterval:]


WBSHistoryServiceDatabaseDelegateProxy : NSObject /usr/lib/libc++.1.dylib <WBSHistoryServiceDatabaseDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSHistoryServiceDatabaseDelegateProxy reportPermanentIDsForVisits:completionHandler:]
  -[WBSHistoryServiceDatabaseDelegateProxy reportSevereError:completionHandler:]
  -[WBSHistoryServiceDatabaseDelegateProxy _defaultProxyErrorHandlerWithSimpleReplyCompletionHandler:]
  -[WBSHistoryServiceDatabaseDelegateProxy reportPermanentIDsForItems:completionHandler:]
  -[WBSHistoryServiceDatabaseDelegateProxy init]
  -[WBSHistoryServiceDatabaseDelegateProxy handleEvent:completionHandler:]
  -[WBSHistoryServiceDatabaseDelegateProxy initWithProxy:]
  -[WBSHistoryServiceDatabaseDelegateProxy .cxx_destruct]


WBSHistoryServiceDatabaseDelegateWeakProxy : NSObject /usr/lib/libc++.1.dylib <WBSHistoryServiceDatabaseDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSHistoryServiceDatabaseDelegateWeakProxy reportPermanentIDsForVisits:completionHandler:]
  -[WBSHistoryServiceDatabaseDelegateWeakProxy initWithDelegate:]
  -[WBSHistoryServiceDatabaseDelegateWeakProxy reportSevereError:completionHandler:]
  -[WBSHistoryServiceDatabaseDelegateWeakProxy reportPermanentIDsForItems:completionHandler:]
  -[WBSHistoryServiceDatabaseDelegateWeakProxy init]
  -[WBSHistoryServiceDatabaseDelegateWeakProxy handleEvent:completionHandler:]
  -[WBSHistoryServiceDatabaseDelegateWeakProxy .cxx_destruct]


WBSParsecSchema : NSObject /usr/lib/libc++.1.dylib
 @property  @? validationBlock
 @property  @? specializedSchemaBlock
 @property  BOOL optional
 @property  Class expectedClass
 @property  NSError *associatedError

  // class methods
  +[WBSParsecSchema schemaForArrayWithElementSchema:associatedError:]
  +[WBSParsecSchema schemaWithConstantValue:]
  +[WBSParsecSchema schemaWithExpectedClass:]
  +[WBSParsecSchema schemaForDictionaryWithStructure:]
  +[WBSParsecSchema schemaForArrayWithElementSchema:]
  +[WBSParsecSchema schemaForDictionaryWithStructure:associatedError:]
  +[WBSParsecSchema schemaWithExpectedClass:associatedError:isOptional:]
  +[WBSParsecSchema schemaForArrayWithElementSchema:associatedError:isOptional:]
  +[WBSParsecSchema schemaForDictionaryWithStructure:associatedError:isOptional:]
  +[WBSParsecSchema schemaWithExpectedClass:associatedError:]

  // instance methods
  -[WBSParsecSchema isOptional]
  -[WBSParsecSchema validationBlock]
  -[WBSParsecSchema validateObject:withErrorHandler:]
  -[WBSParsecSchema specializedSchemaBlock]
  -[WBSParsecSchema expectedClass]
  -[WBSParsecSchema _initWithExpectedClass:associatedError:isOptional:]
  -[WBSParsecSchema _validateChild:ofParent:withParentAssociatedError:errorHandler:]
  -[WBSParsecSchema setSpecializedSchemaBlock:]
  -[WBSParsecSchema setExpectedClass:]
  -[WBSParsecSchema associatedError]
  -[WBSParsecSchema setAssociatedError:]
  -[WBSParsecSchema .cxx_destruct]
  -[WBSParsecSchema setValidationBlock:]
  -[WBSParsecSchema setOptional:]


_WBSParsecArraySchema : WBSParsecSchema
 @property  WBSParsecSchema *elementSchema

  // instance methods
  -[_WBSParsecArraySchema initWithElementSchema:associatedError:isOptional:]
  -[_WBSParsecArraySchema _validateChild:ofParent:withParentAssociatedError:errorHandler:]
  -[_WBSParsecArraySchema .cxx_destruct]
  -[_WBSParsecArraySchema elementSchema]
  -[_WBSParsecArraySchema setElementSchema:]


_WBSParsecDictionarySchema : WBSParsecSchema
 @property  NSDictionary *keysToSchemata

  // instance methods
  -[_WBSParsecDictionarySchema initWithSchemaDictionary:associatedError:isOptional:]
  -[_WBSParsecDictionarySchema _validateChild:ofParent:withParentAssociatedError:errorHandler:]
  -[_WBSParsecDictionarySchema .cxx_destruct]
  -[_WBSParsecDictionarySchema keysToSchemata]
  -[_WBSParsecDictionarySchema setKeysToSchemata:]


WBSTabDialog : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL blocksWebProcessUntilDismissed
 @property  NSArray *cancellationExemptions

  // class methods
  +[WBSTabDialog tabDialogWithPresentationBlock:dismissalBlock:]

  // instance methods
  -[WBSTabDialog init]
  -[WBSTabDialog .cxx_destruct]
  -[WBSTabDialog setCancellationExemptions:]
  -[WBSTabDialog createInfo]
  -[WBSTabDialog blocksWebProcessUntilDismissed]
  -[WBSTabDialog setBlocksWebProcessUntilDismissed:]
  -[WBSTabDialog cancellationExemptions]
  -[WBSTabDialog _init]


WBSHistoryServiceEvent : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  long long eventID
 @property  NSString *eventType
 @property  NSDate *time
 @property  NSDictionary *value

  // class methods
  +[WBSHistoryServiceEvent supportsSecureCoding]

  // instance methods
  -[WBSHistoryServiceEvent init]
  -[WBSHistoryServiceEvent initWithType:time:value:]
  -[WBSHistoryServiceEvent initWithEventID:type:time:value:]
  -[WBSHistoryServiceEvent .cxx_destruct]
  -[WBSHistoryServiceEvent time]
  -[WBSHistoryServiceEvent eventType]
  -[WBSHistoryServiceEvent eventID]
  -[WBSHistoryServiceEvent encodeWithCoder:]
  -[WBSHistoryServiceEvent value]
  -[WBSHistoryServiceEvent initWithCoder:]


WBSHistoryVisitsMatchingOriginsPredicate : NSObject /usr/lib/libc++.1.dylib <WBSHistoryVisitPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistoryVisitsMatchingOriginsPredicate supportsSecureCoding]

  // instance methods
  -[WBSHistoryVisitsMatchingOriginsPredicate statementForDatabase:cache:fetchOptions:error:]
  -[WBSHistoryVisitsMatchingOriginsPredicate evaluateVisit:]
  -[WBSHistoryVisitsMatchingOriginsPredicate evaluateServiceVisit:]
  -[WBSHistoryVisitsMatchingOriginsPredicate .cxx_destruct]
  -[WBSHistoryVisitsMatchingOriginsPredicate initWithOrigins:]
  -[WBSHistoryVisitsMatchingOriginsPredicate encodeWithCoder:]
  -[WBSHistoryVisitsMatchingOriginsPredicate initWithCoder:]


WBSPasswordBreachBloomFilter : NSObject /usr/lib/libc++.1.dylib
 @property  NSData *serializedRepresentation

  // instance methods
  -[WBSPasswordBreachBloomFilter initWithSerializedRepresentation:]
  -[WBSPasswordBreachBloomFilter containsLowercaseHexStringForData:]
  -[WBSPasswordBreachBloomFilter serializedRepresentation]
  -[WBSPasswordBreachBloomFilter .cxx_destruct]
  -[WBSPasswordBreachBloomFilter containsData:]
  -[WBSPasswordBreachBloomFilter initWithCapacity:errorDenominator:bucketData:]
  -[WBSPasswordBreachBloomFilter _setBucketAtIndex:inBuffer:]
  -[WBSPasswordBreachBloomFilter _getBucketAtIndex:]
  -[WBSPasswordBreachBloomFilter addData:]
  -[WBSPasswordBreachBloomFilter _enumerateBucketIndexesForData:withBlock:]


WBSPasswordPatternMatcher : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSPasswordPatternMatcher _wordListMatchesForPassword:withWordListCollection:]
  -[WBSPasswordPatternMatcher _sequencePatternMatchesForPassword:]
  -[WBSPasswordPatternMatcher _keyboardLayoutPatternMatchesForPassword:]
  -[WBSPasswordPatternMatcher _repetitionMatchesForPassword:withMatches:]
  -[WBSPasswordPatternMatcher _keyboardsByIdentifier]
  -[WBSPasswordPatternMatcher _wordListMatchesForPasscode:withWordListCollection:]
  -[WBSPasswordPatternMatcher _sequenceMatchesForPasscode:]
  -[WBSPasswordPatternMatcher _dateMatchesForPasscode:]
  -[WBSPasswordPatternMatcher _repetitionMatchesForPasscode:]
  -[WBSPasswordPatternMatcher _passwordWithoutShiftedCharacters:shiftMap:outShiftedCharacterIndexSet:]
  -[WBSPasswordPatternMatcher _directionFromHexCoordinate:to:]
  -[WBSPasswordPatternMatcher _keyboardMatchWithPassword:range:shiftedCharacterCount:keyboardIdentifier:keyboard:]
  -[WBSPasswordPatternMatcher _sequencePatternMatchWithPassword:startIndex:endIndex:delta:]
  -[WBSPasswordPatternMatcher _obviousSequenceStartCharacterSet]
  -[WBSPasswordPatternMatcher _commonlySubstitutedCharacterSet]
  -[WBSPasswordPatternMatcher _passwordVariationsWithoutCommonCharacterSubstitutions:]
  -[WBSPasswordPatternMatcher _enumerateGraphemeClusterSubrangesOfString:withMinimumLength:usingBlock:]
  -[WBSPasswordPatternMatcher _commonlySubstitutedCharactersMap]
  -[WBSPasswordPatternMatcher _patternWithFewestGuessesRequiredWithRange:patternMatches:]
  -[WBSPasswordPatternMatcher _characterRepetitionPatternForPasscode:]
  -[WBSPasswordPatternMatcher _commonPasscodeCharacterRepetitionPatterns]
  -[WBSPasswordPatternMatcher patternMatchesForPasscode:withWordListCollection:]
  -[WBSPasswordPatternMatcher patternMatchesForPassword:withWordListCollection:]


WBSHistoryVisitsInTimeRangePredicate : NSObject /usr/lib/libc++.1.dylib <WBSHistoryVisitPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistoryVisitsInTimeRangePredicate supportsSecureCoding]

  // instance methods
  -[WBSHistoryVisitsInTimeRangePredicate statementForDatabase:cache:fetchOptions:error:]
  -[WBSHistoryVisitsInTimeRangePredicate evaluateVisit:]
  -[WBSHistoryVisitsInTimeRangePredicate evaluateServiceVisit:]
  -[WBSHistoryVisitsInTimeRangePredicate .cxx_destruct]
  -[WBSHistoryVisitsInTimeRangePredicate encodeWithCoder:]
  -[WBSHistoryVisitsInTimeRangePredicate initWithStartDate:endDate:urlString:urlHash:urlSalt:]
  -[WBSHistoryVisitsInTimeRangePredicate initWithCoder:]


WBSPasswordBreachContext : NSObject /usr/lib/libc++.1.dylib
 @property  WBSPasswordBreachConfiguration *configuration
 @property  WBSPasswordBreachCryptographicOperations *cryptographicOperations
 @property  WBSPasswordBreachStore *store

  // instance methods
  -[WBSPasswordBreachContext store]
  -[WBSPasswordBreachContext .cxx_destruct]
  -[WBSPasswordBreachContext cryptographicOperations]
  -[WBSPasswordBreachContext configuration]
  -[WBSPasswordBreachContext initWithConfiguration:store:]


WBSAutoplayPreferenceManager : WBSPerSitePreferenceManager <WBSPerSitePreferenceManagerStorageDelegate, WBSPerSitePreferenceManagerDefaultsDelegate>
 @property  WBSPerSitePreference *autoplayPreference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore

  // instance methods
  -[WBSAutoplayPreferenceManager perSitePreferencesStore]
  -[WBSAutoplayPreferenceManager init]
  -[WBSAutoplayPreferenceManager defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[WBSAutoplayPreferenceManager preferences]
  -[WBSAutoplayPreferenceManager .cxx_destruct]
  -[WBSAutoplayPreferenceManager valuesForPreference:]
  -[WBSAutoplayPreferenceManager getValueOfPreference:forDomain:withTimeout:usingBlock:]
  -[WBSAutoplayPreferenceManager prepareForTermination]
  -[WBSAutoplayPreferenceManager autoplayPreference]
  -[WBSAutoplayPreferenceManager initWithPerSitePreferencesStore:whitelistManager:]
  -[WBSAutoplayPreferenceManager getAutoplayPreferenceValueForDomain:withTimeout:fallbackValue:completionHandler:]
  -[WBSAutoplayPreferenceManager setAutoplayPreferenceValue:forURL:completionHandler:]
  -[WBSAutoplayPreferenceManager preferencesStoreKeyForPreference:]
  -[WBSAutoplayPreferenceManager localizedStringForValue:inPreference:]
  -[WBSAutoplayPreferenceManager didUpdatePreference:toValue:forDomain:]


WBSHistoryServiceURLCompletionMatchEntry : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSString *url
 @property  NSString *title
 @property  float topSitesScore
 @property  ^{_HistoryStreamedMatchEntry={?=II}**f} streamData

  // class methods
  +[WBSHistoryServiceURLCompletionMatchEntry supportsSecureCoding]

  // instance methods
  -[WBSHistoryServiceURLCompletionMatchEntry init]
  -[WBSHistoryServiceURLCompletionMatchEntry url]
  -[WBSHistoryServiceURLCompletionMatchEntry streamData]
  -[WBSHistoryServiceURLCompletionMatchEntry .cxx_construct]
  -[WBSHistoryServiceURLCompletionMatchEntry .cxx_destruct]
  -[WBSHistoryServiceURLCompletionMatchEntry initWithStreamData:]
  -[WBSHistoryServiceURLCompletionMatchEntry encodeWithCoder:]
  -[WBSHistoryServiceURLCompletionMatchEntry title]
  -[WBSHistoryServiceURLCompletionMatchEntry topSitesScore]
  -[WBSHistoryServiceURLCompletionMatchEntry initWithURLString:title:topSitesScore:]
  -[WBSHistoryServiceURLCompletionMatchEntry initWithCoder:]


WBSHistoryServiceURLCompletionMatchData : NSObject /usr/lib/libc++.1.dylib <WBSURLCompletionMatchData>
 @property  NSArray *entries
 @property  double lastVisitedTimeInterval
 @property  BOOL lastVisitWasFailure
 @property  long long visitCount
 @property  ^{_HistoryStreamedMatchData={?=II}d^vqiCC} streamData
 @property  NSString *originalURLString
 @property  BOOL containsBookmark
 @property  BOOL shouldPreload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSHistoryServiceURLCompletionMatchData init]
  -[WBSHistoryServiceURLCompletionMatchData streamData]
  -[WBSHistoryServiceURLCompletionMatchData .cxx_construct]
  -[WBSHistoryServiceURLCompletionMatchData .cxx_destruct]
  -[WBSHistoryServiceURLCompletionMatchData lastVisitWasFailure]
  -[WBSHistoryServiceURLCompletionMatchData setEntries:]
  -[WBSHistoryServiceURLCompletionMatchData entries]
  -[WBSHistoryServiceURLCompletionMatchData setVisitCount:]
  -[WBSHistoryServiceURLCompletionMatchData setLastVisitedTimeInterval:]
  -[WBSHistoryServiceURLCompletionMatchData setAutocompleteTriggers:length:]
  -[WBSHistoryServiceURLCompletionMatchData initWithLastVisitWasFailure:visitWasFromThisDevice:]
  -[WBSHistoryServiceURLCompletionMatchData shouldPreload]
  -[WBSHistoryServiceURLCompletionMatchData matchDataByMergingWithMatchData:]
  -[WBSHistoryServiceURLCompletionMatchData matchesAutocompleteTrigger:]
  -[WBSHistoryServiceURLCompletionMatchData containsBookmark]
  -[WBSHistoryServiceURLCompletionMatchData initWithStreamData:entries:]
  -[WBSHistoryServiceURLCompletionMatchData pageTitleAtIndex:]
  -[WBSHistoryServiceURLCompletionMatchData pageTitleForUserVisibleURLStringAtIndex:]
  -[WBSHistoryServiceURLCompletionMatchData originalURLString]
  -[WBSHistoryServiceURLCompletionMatchData userVisibleURLStringForPageTitleAtIndex:]
  -[WBSHistoryServiceURLCompletionMatchData userVisibleURLStringAtIndex:]
  -[WBSHistoryServiceURLCompletionMatchData enumeratePageTitlesUsingBlock:]
  -[WBSHistoryServiceURLCompletionMatchData topSitesScoreForPageTitleAtTime:]
  -[WBSHistoryServiceURLCompletionMatchData lastVisitedTimeInterval]
  -[WBSHistoryServiceURLCompletionMatchData visitCount]
  -[WBSHistoryServiceURLCompletionMatchData enumerateUserVisibleURLsUsingBlock:]
  -[WBSHistoryServiceURLCompletionMatchData topSitesScoreForURLStringAtIndex:atTime:]


WBSContentBlockersPreferenceManager : WBSPerSitePreferenceManager <WBSPerSitePreferenceManagerStorageDelegate, WBSPerSitePreferenceManagerDefaultsDelegate, WBSPerSitePreferenceBinaryToggleItemManager>
 @property  WBSPerSitePreference *contentBlockersPreference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore

  // instance methods
  -[WBSContentBlockersPreferenceManager perSitePreferencesStore]
  -[WBSContentBlockersPreferenceManager init]
  -[WBSContentBlockersPreferenceManager offValueForPreference:]
  -[WBSContentBlockersPreferenceManager initWithPerSitePreferencesStore:]
  -[WBSContentBlockersPreferenceManager defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[WBSContentBlockersPreferenceManager preferences]
  -[WBSContentBlockersPreferenceManager onValueForPreference:]
  -[WBSContentBlockersPreferenceManager .cxx_destruct]
  -[WBSContentBlockersPreferenceManager valuesForPreference:]
  -[WBSContentBlockersPreferenceManager preferencesStoreKeyForPreference:]
  -[WBSContentBlockersPreferenceManager getContentBlockersEnabledStateForDomain:withTimeout:fallbackEnabledState:completionHandler:]
  -[WBSContentBlockersPreferenceManager contentBlockersPreference]
  -[WBSContentBlockersPreferenceManager localizedStringForValue:inPreference:]
  -[WBSContentBlockersPreferenceManager didUpdatePreference:toValue:forDomain:]


WBSPageZoomPreferenceManager : WBSPerSitePreferenceManager <WBSPerSitePreferenceManagerDefaultsDelegate, WBSPerSitePreferenceManagerStorageDelegate>
 @property  WBSPerSitePreference *pageZoomPreference
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSPageZoomPreferenceManager pageZoomFactors]

  // instance methods
  -[WBSPageZoomPreferenceManager perSitePreferencesStore]
  -[WBSPageZoomPreferenceManager initWithPerSitePreferencesStore:]
  -[WBSPageZoomPreferenceManager defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[WBSPageZoomPreferenceManager preferences]
  -[WBSPageZoomPreferenceManager .cxx_destruct]
  -[WBSPageZoomPreferenceManager valuesForPreference:]
  -[WBSPageZoomPreferenceManager preferencesStoreKeyForPreference:]
  -[WBSPageZoomPreferenceManager _pageZoomStepToZoomFactor:]
  -[WBSPageZoomPreferenceManager _getDefaultZoomStep:]
  -[WBSPageZoomPreferenceManager _getZoomStepForDomain:usingBlock:]
  -[WBSPageZoomPreferenceManager _incrementOrDecreaseZoomStep:forURL:completionHandler:]
  -[WBSPageZoomPreferenceManager _canChangePageZoom:fromStep:]
  -[WBSPageZoomPreferenceManager pageZoomPreference]
  -[WBSPageZoomPreferenceManager getPageZoomFactorForURL:usingBlock:]
  -[WBSPageZoomPreferenceManager zoomInOnURL:completionHandler:]
  -[WBSPageZoomPreferenceManager localizedStringForValue:inPreference:]
  -[WBSPageZoomPreferenceManager zoomOutOnURL:completionHandler:]
  -[WBSPageZoomPreferenceManager resetZoomLevelOnURL:completionHandler:]
  -[WBSPageZoomPreferenceManager getAvailableActionsForURL:usingBlock:]
  -[WBSPageZoomPreferenceManager removePageZoomPreferencesForHostnames:]
  -[WBSPageZoomPreferenceManager removeAllPageZoomPreferences]
  -[WBSPageZoomPreferenceManager didUpdatePreference:toValue:forDomain:]


WBSHistoryVisitsWithItemsPredicate : NSObject /usr/lib/libc++.1.dylib <WBSHistoryVisitPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistoryVisitsWithItemsPredicate supportsSecureCoding]

  // instance methods
  -[WBSHistoryVisitsWithItemsPredicate statementForDatabase:cache:fetchOptions:error:]
  -[WBSHistoryVisitsWithItemsPredicate evaluateVisit:]
  -[WBSHistoryVisitsWithItemsPredicate evaluateServiceVisit:]
  -[WBSHistoryVisitsWithItemsPredicate .cxx_destruct]
  -[WBSHistoryVisitsWithItemsPredicate initWithHistoryItems:ignoreVisits:]
  -[WBSHistoryVisitsWithItemsPredicate encodeWithCoder:]
  -[WBSHistoryVisitsWithItemsPredicate initWithCoder:]


WBSPasswordAutoFillUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSPasswordAutoFillUtilities mayAutoFillPasswordOnHost:]


WBSPeriodicActivityScheduler : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSPeriodicActivityScheduler init]
  -[WBSPeriodicActivityScheduler .cxx_destruct]
  -[WBSPeriodicActivityScheduler _performActivity]
  -[WBSPeriodicActivityScheduler _timerDidFire:]
  -[WBSPeriodicActivityScheduler _scheduleActivityWithInterval:]
  -[WBSPeriodicActivityScheduler initWithInterval:minimumDelay:lastFireDate:block:]
  -[WBSPeriodicActivityScheduler invalidate]


WBSPerSitePreferencesSQLiteStore : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSPerSitePreferencesSQLiteStore sharedStore]

  // instance methods
  -[WBSPerSitePreferencesSQLiteStore removePreferenceValuesForDomains:fromPreference:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore closeDatabase]
  -[WBSPerSitePreferencesSQLiteStore _openDatabase]
  -[WBSPerSitePreferencesSQLiteStore initWithDatabaseURL:]
  -[WBSPerSitePreferencesSQLiteStore init]
  -[WBSPerSitePreferencesSQLiteStore getTimestampAndValueOfPreference:forDomain:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore getDefaultValueForPreference:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore dealloc]
  -[WBSPerSitePreferencesSQLiteStore .cxx_destruct]
  -[WBSPerSitePreferencesSQLiteStore _setDatabaseSchemaVersion:]
  -[WBSPerSitePreferencesSQLiteStore getAllDomainsConfiguredForPreference:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore _isDatabaseOpen]
  -[WBSPerSitePreferencesSQLiteStore getAllPreferenceInformationForPreference:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore _migrateToCurrentSchemaVersionIfNecessary]
  -[WBSPerSitePreferencesSQLiteStore _openDatabaseIfNecessary]
  -[WBSPerSitePreferencesSQLiteStore setValue:ofPreference:forDomain:includeTimestamp:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore getValueOfPreference:forDomain:withTimeoutInterval:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore _closeDatabase]
  -[WBSPerSitePreferencesSQLiteStore getValuesOfPreferences:forDomain:withTimeoutInterval:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore _tryToPerformTransactionInBlock:]
  -[WBSPerSitePreferencesSQLiteStore setValue:ofPreference:forDomain:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore setDefaultValue:forPreference:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore _migrateToSchemaVersion_2]
  -[WBSPerSitePreferencesSQLiteStore removeAllPreferenceValuesFromPreference:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore _createFreshDatabaseSchema]
  -[WBSPerSitePreferencesSQLiteStore _migrateToSchemaVersion:]


WBSPerSitePreferenceValueInformation : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *domain
 @property  NSNumber *value
 @property  NSDate *creationDate

  // instance methods
  -[WBSPerSitePreferenceValueInformation creationDate]
  -[WBSPerSitePreferenceValueInformation domain]
  -[WBSPerSitePreferenceValueInformation .cxx_destruct]
  -[WBSPerSitePreferenceValueInformation value]
  -[WBSPerSitePreferenceValueInformation initWithDomain:value:creationDate:]


WBSHistorySQLiteSchema : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *legacyDatabase

  // instance methods
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_10]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_3]
  -[WBSHistorySQLiteSchema _migrateLegacyVisitWithItemID:visitTime:title:score:loadSuccessful:httpNonGet:synthesized:]
  -[WBSHistorySQLiteSchema init]
  -[WBSHistorySQLiteSchema .cxx_destruct]
  -[WBSHistorySQLiteSchema _removeLegacyHistoryDatabaseIfNeeded]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_7]
  -[WBSHistorySQLiteSchema _migrateLegacyDatabaseCreatingItemsAndVisits:outVisitsToUseForRedirectChains:]
  -[WBSHistorySQLiteSchema _setDatabaseSchemaVersion:]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_13]
  -[WBSHistorySQLiteSchema migrateToCurrentSchemaVersionIfNeeded]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_9]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_15]
  -[WBSHistorySQLiteSchema legacyDatabase]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_6]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_8]
  -[WBSHistorySQLiteSchema migrateLegacyDatabaseCreatingRedirectChains:urlsToItemAndLastVisitID:visitsToUseForRedirectChains:]
  -[WBSHistorySQLiteSchema _migrateLegacyItem:dailyVisitCounts:weeklyVisitCounts:]
  -[WBSHistorySQLiteSchema _migrateLegacyDatabase]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_4]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_11]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_5]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_12]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_2]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_14]
  -[WBSHistorySQLiteSchema initWithDatabase:crypto:migrateVisitsAfterDate:]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion:]


WBSQuickWebsiteSearchController : NSObject /usr/lib/libc++.1.dylib <WBSQuickWebsiteSearchProviderDelegate>
 @property  BOOL quickWebsiteSearchProvidersLoadedFromDisk
 @property  NSArray *quickWebsiteSearchHosts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSQuickWebsiteSearchController sharedController]

  // instance methods
  -[WBSQuickWebsiteSearchController _loadFromDisk]
  -[WBSQuickWebsiteSearchController clear]
  -[WBSQuickWebsiteSearchController quickWebsiteSearchProvidersLoadedFromDisk]
  -[WBSQuickWebsiteSearchController _quickWebsiteSearchProviderHasSearchURLTemplateStringOnAccessQueue:]
  -[WBSQuickWebsiteSearchController _sendNotification:forQuickWebsiteSearchProvider:]
  -[WBSQuickWebsiteSearchController _addHost:toOpenSearchDescriptionWithDocumentURL:]
  -[WBSQuickWebsiteSearchController _removeHost:fromOpenSearchDescriptionWithDocumentURL:]
  -[WBSQuickWebsiteSearchController removeProvidersWithHosts:]
  -[WBSQuickWebsiteSearchController openSearchDescriptionForOpenSearchDescriptionURLString:]
  -[WBSQuickWebsiteSearchController _shouldRemoveQuickWebsiteSearchProvider:]
  -[WBSQuickWebsiteSearchController _pruneUnusedQuickWebsiteSearchProviders]
  -[WBSQuickWebsiteSearchController setQuickWebsiteSearchProvidersLoadedFromDisk:]
  -[WBSQuickWebsiteSearchController noteProvidersAreStale]
  -[WBSQuickWebsiteSearchController .cxx_destruct]
  -[WBSQuickWebsiteSearchController quickWebsiteSearchProvider:openSearchDescriptionForOpenSearchDescriptionURLString:]
  -[WBSQuickWebsiteSearchController removeProvidersAddedAfterDate:beforeDate:]
  -[WBSQuickWebsiteSearchController quickWebsiteSearchHosts]
  -[WBSQuickWebsiteSearchController providersMatchingQueryString:]
  -[WBSQuickWebsiteSearchController didPerformSearchWithProvider:]
  -[WBSQuickWebsiteSearchController setSearchURLTemplateFromForm:forSourcePageURLString:]
  -[WBSQuickWebsiteSearchController setOpenSearchDescriptionURLString:forSourcePageURLString:]
  -[WBSQuickWebsiteSearchController providerForSourcePageURLString:]
  -[WBSQuickWebsiteSearchController removeProviderWithHost:]
  -[WBSQuickWebsiteSearchController savePendingChangesBeforeTermination]
  -[WBSQuickWebsiteSearchController _dictionaryRepresentation]
  -[WBSQuickWebsiteSearchController _initWithSearchDescriptionsURL:]
  -[WBSQuickWebsiteSearchController beginLoadingFromDiskIfNeeded]
  -[WBSQuickWebsiteSearchController _didCollectOpenSearchDescription:]
  -[WBSQuickWebsiteSearchController _didFinishLoadingFromDisk]
  -[WBSQuickWebsiteSearchController _resetCachedDataWithCompletionHandler:]
  -[WBSQuickWebsiteSearchController _saveToDiskSoon]


WBSQuickWebsiteSearchProvider : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *sourcePageURLString
 @property  NSDate *dateAdded
 @property  WBSOpenSearchURLTemplate *searchURLTemplateFromForm
 @property  NSString *openSearchDescriptionURLString
 @property  NSDate *dateOfLastSearch
 @property  WBSOpenSearchDescription *openSearchDescription
 @property  WBSOpenSearchURLTemplate *searchURLTemplate
 @property  WBSOpenSearchURLTemplate *urlTemplateForSuggestionsInJSON
 @property  NSString *displayName
 @property  NSString *hostname

  // instance methods
  -[WBSQuickWebsiteSearchProvider hostname]
  -[WBSQuickWebsiteSearchProvider searchURLTemplateFromForm]
  -[WBSQuickWebsiteSearchProvider setSearchURLTemplateFromForm:]
  -[WBSQuickWebsiteSearchProvider initWithSourcePageURLString:searchURLTemplateFromForm:delegate:]
  -[WBSQuickWebsiteSearchProvider setOpenSearchDescriptionURLString:]
  -[WBSQuickWebsiteSearchProvider initWithSourcePageURLString:openSearchDescriptionURLString:delegate:]
  -[WBSQuickWebsiteSearchProvider sourcePageURLString]
  -[WBSQuickWebsiteSearchProvider initWithDictionaryRepresentation:delegate:]
  -[WBSQuickWebsiteSearchProvider openSearchDescription]
  -[WBSQuickWebsiteSearchProvider .cxx_destruct]
  -[WBSQuickWebsiteSearchProvider searchURLTemplate]
  -[WBSQuickWebsiteSearchProvider dateAdded]
  -[WBSQuickWebsiteSearchProvider dictionaryRepresentation]
  -[WBSQuickWebsiteSearchProvider urlTemplateForSuggestionsInJSON]
  -[WBSQuickWebsiteSearchProvider displayName]
  -[WBSQuickWebsiteSearchProvider openSearchDescriptionURLString]
  -[WBSQuickWebsiteSearchProvider dateOfLastSearch]
  -[WBSQuickWebsiteSearchProvider setDateOfLastSearch:]


WBSRadarNewProblemURLBuilder : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *componentName
 @property  NSString *componentVersion
 @property  NSString *title
 @property  NSString *descriptionText
 @property  NSArray *attachmentURLs
 @property  long long classification
 @property  NSURL *url

  // instance methods
  -[WBSRadarNewProblemURLBuilder url]
  -[WBSRadarNewProblemURLBuilder descriptionText]
  -[WBSRadarNewProblemURLBuilder setDescriptionText:]
  -[WBSRadarNewProblemURLBuilder .cxx_destruct]
  -[WBSRadarNewProblemURLBuilder setComponentName:]
  -[WBSRadarNewProblemURLBuilder setComponentVersion:]
  -[WBSRadarNewProblemURLBuilder setAttachmentURLs:]
  -[WBSRadarNewProblemURLBuilder setTitle:]
  -[WBSRadarNewProblemURLBuilder title]
  -[WBSRadarNewProblemURLBuilder componentName]
  -[WBSRadarNewProblemURLBuilder classification]
  -[WBSRadarNewProblemURLBuilder setClassification:]
  -[WBSRadarNewProblemURLBuilder componentVersion]
  -[WBSRadarNewProblemURLBuilder attachmentURLs]


WBSReaderResources : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSReaderResources articleFinderScriptForContext:]
  +[WBSReaderResources readerHTMLSourceURL]
  +[WBSReaderResources localizedStringsScriptURL]
  +[WBSReaderResources sharedUIScriptForContext:]
  +[WBSReaderResources sharedUINormalWorldScriptForContext:]


WBSHistoryServiceObject : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  long long databaseID

  // class methods
  +[WBSHistoryServiceObject supportsSecureCoding]

  // instance methods
  -[WBSHistoryServiceObject databaseID]
  -[WBSHistoryServiceObject encodeWithCoder:]
  -[WBSHistoryServiceObject initWithCoder:]
  -[WBSHistoryServiceObject initWithDatabaseID:]


WBSReaderFont : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *familyName
 @property  NSString *familyNameForWebContent
 @property  NSString *displayName
 @property  BOOL installed
 @property  long long type

  // class methods
  +[WBSReaderFont systemFontWithDisplayName:]
  +[WBSReaderFont systemFont]
  +[WBSReaderFont fontWithFamilyName:displayName:]
  +[WBSReaderFont systemSerifFont]

  // instance methods
  -[WBSReaderFont familyName]
  -[WBSReaderFont copyWithZone:]
  -[WBSReaderFont isInstalled]
  -[WBSReaderFont .cxx_destruct]
  -[WBSReaderFont _initWithFamilyName:displayName:type:]
  -[WBSReaderFont _fontDescriptorRefForFontFamilyName:restrictToEnabled:]
  -[WBSReaderFont type]
  -[WBSReaderFont familyNameForWebContent]
  -[WBSReaderFont _localizedName]
  -[WBSReaderFont isEqual:]
  -[WBSReaderFont displayName]


WBSHistoryObjectCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSHistoryObjectCache clear]
  -[WBSHistoryObjectCache visitForID:]
  -[WBSHistoryObjectCache init]
  -[WBSHistoryObjectCache allItems]
  -[WBSHistoryObjectCache setVisit:forID:]
  -[WBSHistoryObjectCache .cxx_construct]
  -[WBSHistoryObjectCache removeItemWithID:]
  -[WBSHistoryObjectCache .cxx_destruct]
  -[WBSHistoryObjectCache _clearNilReferences]
  -[WBSHistoryObjectCache changeVisitIDs:]
  -[WBSHistoryObjectCache itemForID:]
  -[WBSHistoryObjectCache changeItemIDs:]
  -[WBSHistoryObjectCache setItem:forID:]
  -[WBSHistoryObjectCache reserveItemCapacity:]


WBSReaderFontDownloadManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSReaderFontDownloadManager sharedManager]

  // instance methods
  -[WBSReaderFontDownloadManager init]
  -[WBSReaderFontDownloadManager downloadProgressForFont:]
  -[WBSReaderFontDownloadManager .cxx_destruct]
  -[WBSReaderFontDownloadManager hasOngoingRequestForFont:]
  -[WBSReaderFontDownloadManager downloadFont:]


WBSReaderFontManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *fonts
 @property  NSArray *possibleFonts
 @property  NSString *languageTag

  // instance methods
  -[WBSReaderFontManager fonts]
  -[WBSReaderFontManager defaultFontForLanguageTag:]
  -[WBSReaderFontManager init]
  -[WBSReaderFontManager .cxx_destruct]
  -[WBSReaderFontManager _fontDownloadDidFinish:]
  -[WBSReaderFontManager fontWithFontFamilyName:]
  -[WBSReaderFontManager updateLanguageTag:]
  -[WBSReaderFontManager languageTag]
  -[WBSReaderFontManager possibleFonts]


WBSPasswordBreachResultRecord : NSObject /usr/lib/libc++.1.dylib
 @property  NSData *persistentIdentifier
 @property  unsigned long result
 @property  NSDate *dateLastModified
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[WBSPasswordBreachResultRecord dictionaryRepresentationsForResultRecords:]
  +[WBSPasswordBreachResultRecord resultRecordsFromDictionaryRepresentations:]

  // instance methods
  -[WBSPasswordBreachResultRecord initWithDictionaryRepresentation:]
  -[WBSPasswordBreachResultRecord result]
  -[WBSPasswordBreachResultRecord dateLastModified]
  -[WBSPasswordBreachResultRecord initWithPersistentIdentifier:result:dateLastModified:]
  -[WBSPasswordBreachResultRecord .cxx_destruct]
  -[WBSPasswordBreachResultRecord persistentIdentifier]
  -[WBSPasswordBreachResultRecord dictionaryRepresentation]


WBSReaderLocalizedFonts : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSReaderLocalizedFonts defaultFontFamilyNameForLanguage:]
  +[WBSReaderLocalizedFonts defaultFontFamilyNameForLanguageMap]
  +[WBSReaderLocalizedFonts fontsForLanguage:]


WBSDictionaryInt64 : NSObject /usr/lib/libc++.1.dylib <NSCoding, NSSecureCoding, NSCopying>
 @property  r^{unordered_map<long long map

  // class methods
  +[WBSDictionaryInt64 supportsSecureCoding]

  // instance methods
  -[WBSDictionaryInt64 map]
  -[WBSDictionaryInt64 copyWithZone:]
  -[WBSDictionaryInt64 init]
  -[WBSDictionaryInt64 .cxx_construct]
  -[WBSDictionaryInt64 .cxx_destruct]
  -[WBSDictionaryInt64 encodeWithCoder:]
  -[WBSDictionaryInt64 copy]
  -[WBSDictionaryInt64 initWithMovableMap:]
  -[WBSDictionaryInt64 initWithMap:]
  -[WBSDictionaryInt64 initWithCoder:]


WBSRecentlyUsedAutoFillSet : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *fillMatches
 @property  NSArray *skipMatches
 @property  NSString *label

  // instance methods
  -[WBSRecentlyUsedAutoFillSet fillMatches]
  -[WBSRecentlyUsedAutoFillSet .cxx_destruct]
  -[WBSRecentlyUsedAutoFillSet label]
  -[WBSRecentlyUsedAutoFillSet initWithFillMatches:skipMatches:label:]
  -[WBSRecentlyUsedAutoFillSet skipMatches]


WBSRecentWebSearchEntry : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *searchString
 @property  NSDate *date

  // instance methods
  -[WBSRecentWebSearchEntry searchString]
  -[WBSRecentWebSearchEntry initWithDictionaryRepresentation:]
  -[WBSRecentWebSearchEntry init]
  -[WBSRecentWebSearchEntry .cxx_destruct]
  -[WBSRecentWebSearchEntry date]
  -[WBSRecentWebSearchEntry initWithSearchString:date:]
  -[WBSRecentWebSearchEntry isEqual:]
  -[WBSRecentWebSearchEntry dictionaryRepresentation]
  -[WBSRecentWebSearchEntry initWithSearchString:]


WBSRecentWebSearchesController : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSRecentWebSearchesController _defaultsKey]
  +[WBSRecentWebSearchesController _shouldTrackSearches]
  +[WBSRecentWebSearchesController _maximumNumberOfSearchesToTrack]

  // instance methods
  -[WBSRecentWebSearchesController .cxx_destruct]
  -[WBSRecentWebSearchesController _addRecentSearchEntry:]
  -[WBSRecentWebSearchesController _saveRecentSearches]
  -[WBSRecentWebSearchesController _loadRecentSearchesIfNeeded]
  -[WBSRecentWebSearchesController recentSearchesMatchingPrefix:]
  -[WBSRecentWebSearchesController _removeLegacyRecentSearchesData]
  -[WBSRecentWebSearchesController _recentSearchesDictionaries]
  -[WBSRecentWebSearchesController _saveRecentSearchDictionaries:toUserDefaultsUsingKey:]
  -[WBSRecentWebSearchesController _migrateLegacyData]
  -[WBSRecentWebSearchesController _recentSearchDictionariesFromUserDefaultsUsingKey:]
  -[WBSRecentWebSearchesController addRecentSearch:]
  -[WBSRecentWebSearchesController clearRecentSearchesAddedAfterDate:]
  -[WBSRecentWebSearchesController _addLegacySearch:]
  -[WBSRecentWebSearchesController clearRecentSearches]
  -[WBSRecentWebSearchesController recentSearches]


WBSRemoteHistoryItem : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSURL *url
 @property  NSString *title
 @property  NSDate *lastVisitTime

  // class methods
  +[WBSRemoteHistoryItem supportsSecureCoding]

  // instance methods
  -[WBSRemoteHistoryItem init]
  -[WBSRemoteHistoryItem url]
  -[WBSRemoteHistoryItem .cxx_destruct]
  -[WBSRemoteHistoryItem encodeWithCoder:]
  -[WBSRemoteHistoryItem title]
  -[WBSRemoteHistoryItem lastVisitTime]
  -[WBSRemoteHistoryItem initWithURL:title:lastVisitTime:]
  -[WBSRemoteHistoryItem initWithCoder:]


WBSRemoteHistorySession : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSArray *items
 @property  BOOL currentSession

  // class methods
  +[WBSRemoteHistorySession supportsSecureCoding]

  // instance methods
  -[WBSRemoteHistorySession init]
  -[WBSRemoteHistorySession startDate]
  -[WBSRemoteHistorySession items]
  -[WBSRemoteHistorySession .cxx_destruct]
  -[WBSRemoteHistorySession isCurrentSession]
  -[WBSRemoteHistorySession encodeWithCoder:]
  -[WBSRemoteHistorySession endDate]
  -[WBSRemoteHistorySession isEqual:]
  -[WBSRemoteHistorySession initWithStartDate:endDate:items:]
  -[WBSRemoteHistorySession initWithCoder:]


WBSRemoteHistoryVisit : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSURL *url
 @property  NSDate *date

  // class methods
  +[WBSRemoteHistoryVisit supportsSecureCoding]

  // instance methods
  -[WBSRemoteHistoryVisit init]
  -[WBSRemoteHistoryVisit url]
  -[WBSRemoteHistoryVisit .cxx_destruct]
  -[WBSRemoteHistoryVisit date]
  -[WBSRemoteHistoryVisit encodeWithCoder:]
  -[WBSRemoteHistoryVisit initWithURL:date:]
  -[WBSRemoteHistoryVisit initWithCoder:]


WBSHistoryItemToTagPairsPredicate : NSObject /usr/lib/libc++.1.dylib <WBSHistoryPredicate>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistoryItemToTagPairsPredicate supportsSecureCoding]

  // instance methods
  -[WBSHistoryItemToTagPairsPredicate statementForDatabase:cache:fetchOptions:error:]
  -[WBSHistoryItemToTagPairsPredicate startDate]
  -[WBSHistoryItemToTagPairsPredicate initWithStartDate:endDate:]
  -[WBSHistoryItemToTagPairsPredicate .cxx_destruct]
  -[WBSHistoryItemToTagPairsPredicate encodeWithCoder:]
  -[WBSHistoryItemToTagPairsPredicate endDate]
  -[WBSHistoryItemToTagPairsPredicate initWithCoder:]


WBSCertificateWarningPageContext : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSURL *failingURL
 @property  long long warningCategory
 @property  BOOL canGoBack
 @property  long long numberOfDaysInvalid
 @property  NSString *expiredCerticateDescription
 @property  double clockSkew

  // class methods
  +[WBSCertificateWarningPageContext supportsSecureCoding]
  +[WBSCertificateWarningPageContext permanentAcceptanceConfirmationTitle]
  +[WBSCertificateWarningPageContext certificateWarningCannotBeBypassedForTrust:]
  +[WBSCertificateWarningPageContext permanentAcceptanceConfirmationDescription]
  +[WBSCertificateWarningPageContext permanentAcceptanceConfirmationButtonTitle]
  +[WBSCertificateWarningPageContext certificateWarningCategoryForError:trustIncludesRevokedCertificate:clockSkew:]
  +[WBSCertificateWarningPageContext numberOfDaysBetweenCertificateValidityRangeAndNow:]

  // instance methods
  -[WBSCertificateWarningPageContext init]
  -[WBSCertificateWarningPageContext clockSkew]
  -[WBSCertificateWarningPageContext .cxx_destruct]
  -[WBSCertificateWarningPageContext encodeWithCoder:]
  -[WBSCertificateWarningPageContext initWithWarningCategory:failingURL:numberOfDaysInvalid:canGoBack:clockSkew:]
  -[WBSCertificateWarningPageContext failingURL]
  -[WBSCertificateWarningPageContext initLegacyTLSWarningWithFailingURL:canGoBack:]
  -[WBSCertificateWarningPageContext expiredCerticateDescription]
  -[WBSCertificateWarningPageContext warningCategory]
  -[WBSCertificateWarningPageContext numberOfDaysInvalid]
  -[WBSCertificateWarningPageContext canGoBack]
  -[WBSCertificateWarningPageContext initWithCoder:]


_WBSSafariCyclerConfigurationCommand : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *name
 @property  NSString *help
 @property  NSString *usage
 @property  unsigned long minimumArgumentCount
 @property  unsigned long maximumArgumentCount
 @property  id target
 @property  SEL action

  // instance methods
  -[_WBSSafariCyclerConfigurationCommand help]
  -[_WBSSafariCyclerConfigurationCommand init]
  -[_WBSSafariCyclerConfigurationCommand target]
  -[_WBSSafariCyclerConfigurationCommand setAction:]
  -[_WBSSafariCyclerConfigurationCommand usage]
  -[_WBSSafariCyclerConfigurationCommand .cxx_destruct]
  -[_WBSSafariCyclerConfigurationCommand action]
  -[_WBSSafariCyclerConfigurationCommand name]
  -[_WBSSafariCyclerConfigurationCommand setTarget:]
  -[_WBSSafariCyclerConfigurationCommand initWithName:help:]
  -[_WBSSafariCyclerConfigurationCommand setArgumentCount:]
  -[_WBSSafariCyclerConfigurationCommand invokeWithParameters:]
  -[_WBSSafariCyclerConfigurationCommand minimumArgumentCount]
  -[_WBSSafariCyclerConfigurationCommand setMinimumArgumentCount:]
  -[_WBSSafariCyclerConfigurationCommand maximumArgumentCount]
  -[_WBSSafariCyclerConfigurationCommand setMaximumArgumentCount:]
  -[_WBSSafariCyclerConfigurationCommand setUsage:]


WBSSafariCyclerConfigurationTool : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSSafariCyclerConfigurationTool run]
  -[WBSSafariCyclerConfigurationTool init]
  -[WBSSafariCyclerConfigurationTool _supportedCommands]
  -[WBSSafariCyclerConfigurationTool _errorWithCode:]
  -[WBSSafariCyclerConfigurationTool .cxx_destruct]
  -[WBSSafariCyclerConfigurationTool _runTest:]
  -[WBSSafariCyclerConfigurationTool _descriptionForErrorCode:]
  -[WBSSafariCyclerConfigurationTool _exitWithError:]
  -[WBSSafariCyclerConfigurationTool _printUsage]
  -[WBSSafariCyclerConfigurationTool _commandWithName:]
  -[WBSSafariCyclerConfigurationTool _startCycler:]
  -[WBSSafariCyclerConfigurationTool _stopCycler:]
  -[WBSSafariCyclerConfigurationTool _resumeCycler:]
  -[WBSSafariCyclerConfigurationTool _setConfigurationOption:]
  -[WBSSafariCyclerConfigurationTool _sendRequestToTest:]
  -[WBSSafariCyclerConfigurationTool _configureDevice:]
  -[WBSSafariCyclerConfigurationTool _fetchStatus:]
  -[WBSSafariCyclerConfigurationTool _waitForCyclerToFinish:]


WBSSameDocumentNavigationToHistoryVisitCorrelator : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSSameDocumentNavigationToHistoryVisitCorrelator init]
  -[WBSSameDocumentNavigationToHistoryVisitCorrelator .cxx_destruct]
  -[WBSSameDocumentNavigationToHistoryVisitCorrelator noteVisit:]
  -[WBSSameDocumentNavigationToHistoryVisitCorrelator visitForSameDocumentNavigationToURL:]


WBSUserMediaPermissionController : WBSPerSitePreferenceManager <WBSPerSitePreferenceManagerDefaultsDelegate, WBSCoalescedAsynchronousWriterDelegate>
 @property  WBSPerSitePreference *cameraMediaCapturePreference
 @property  WBSPerSitePreference *microphoneMediaCapturePreference
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSUserMediaPermissionController sharedController]
  +[WBSUserMediaPermissionController localizedStringForPerSitePreferenceValue:]

  // instance methods
  -[WBSUserMediaPermissionController removePreferenceValuesForDomains:fromPreference:completionHandler:]
  -[WBSUserMediaPermissionController perSitePreferencesStore]
  -[WBSUserMediaPermissionController _permissionMaskForMediaCaptureType:]
  -[WBSUserMediaPermissionController _invalidateAllPermissionsForDomain:]
  -[WBSUserMediaPermissionController _mediaCaptureSettingForMediaCaptureType:userMediaPermission:]
  -[WBSUserMediaPermissionController _userMediaPermissionForMediaCaptureType:mediaCaptureSetting:]
  -[WBSUserMediaPermissionController permissionForOrigin:topLevelOrigin:]
  -[WBSUserMediaPermissionController _removePreferenceValuesForDomains:fromPreference:]
  -[WBSUserMediaPermissionController performDelayedLaunchOperations]
  -[WBSUserMediaPermissionController reloadPreferences]
  -[WBSUserMediaPermissionController savePendingChangesWithCompletionHandler:]
  -[WBSUserMediaPermissionController getPermissionForOrigin:topLevelOrigin:completionHandler:]
  -[WBSUserMediaPermissionController permissionForNonHTTPSOriginFromPermission:]
  -[WBSUserMediaPermissionController init]
  -[WBSUserMediaPermissionController setPermission:expirationPolicy:forOrigin:topLevelOrigin:]
  -[WBSUserMediaPermissionController saltForOrigin:topLevelOrigin:frameIdentifier:]
  -[WBSUserMediaPermissionController removeAllOriginsAddedAfterDate:]
  -[WBSUserMediaPermissionController resetOriginPermissions]
  -[WBSUserMediaPermissionController didCommitLoadForFrameWithIdentifier:]
  -[WBSUserMediaPermissionController userMediaPermissionForDefaultPreferenceValues]
  -[WBSUserMediaPermissionController permissionForDomain:]
  -[WBSUserMediaPermissionController defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[WBSUserMediaPermissionController preferences]
  -[WBSUserMediaPermissionController .cxx_destruct]
  -[WBSUserMediaPermissionController valuesForPreference:]
  -[WBSUserMediaPermissionController savePendingChangesBeforeTermination]
  -[WBSUserMediaPermissionController _dictionaryRepresentation]
  -[WBSUserMediaPermissionController removeAllPermissionsWithCompletionHandler:]
  -[WBSUserMediaPermissionController getAllDomainsConfiguredForPreference:usingBlock:]
  -[WBSUserMediaPermissionController _init]
  -[WBSUserMediaPermissionController checkUserMediaPermissionForURL:mainFrameURL:frameIdentifier:decisionHandler:]
  -[WBSUserMediaPermissionController _isPreferenceValid:]
  -[WBSUserMediaPermissionController cameraMediaCapturePreference]
  -[WBSUserMediaPermissionController microphoneMediaCapturePreference]
  -[WBSUserMediaPermissionController getValueOfPreference:forDomain:withTimeout:usingBlock:]
  -[WBSUserMediaPermissionController preferencesStoreKeyForPreference:]
  -[WBSUserMediaPermissionController _loadSavedPermissions]
  -[WBSUserMediaPermissionController _dispatchAsyncOnInternalQueue:]
  -[WBSUserMediaPermissionController initWithUserMediaPermissionsFileURL:perSitePreferencesStore:]
  -[WBSUserMediaPermissionController _dispatchSyncOnInternalQueue:]
  -[WBSUserMediaPermissionController _cachedSettingsDidChange]
  -[WBSUserMediaPermissionController _permissionForOrigin:topLevelOrigin:]
  -[WBSUserMediaPermissionController _validPolicyForDomainWithOrigin:topLevelOrigin:]
  -[WBSUserMediaPermissionController _permissionByApplyingDefaultsForMissingValuesInPermission:]
  -[WBSUserMediaPermissionController localizedStringForValue:inPreference:]
  -[WBSUserMediaPermissionController _standardizedURLForDomain:]
  -[WBSUserMediaPermissionController _validPolicyForOrigin:topLevelOrigin:]
  -[WBSUserMediaPermissionController _captureDevicesAreAllDefaultsGivenPermission:]
  -[WBSUserMediaPermissionController _policyForOrigin:topLevelOrigin:]
  -[WBSUserMediaPermissionController _invalidateCachedSettingsForOriginHash:]
  -[WBSUserMediaPermissionController _setPermission:expirationPolicy:forOrigin:topLevelOrigin:]
  -[WBSUserMediaPermissionController setValue:ofPreference:forDomain:completionHandler:]
  -[WBSUserMediaPermissionController _permissionByRemovingDefaultPermissionFlagsInPermission:]
  -[WBSUserMediaPermissionController _saltForOrigin:topLevelOrigin:frameIdentifier:]
  -[WBSUserMediaPermissionController _saltWithPolicyEntry:computedPermission:frameIdentifier:]
  -[WBSUserMediaPermissionController resetOriginPermissionsWithCompletionHandler:]
  -[WBSUserMediaPermissionController _cachedSettingsDidChangeAndWriteImmediately:completionHandler:]
  -[WBSUserMediaPermissionController _mediaCaptureTypeForPreference:]
  -[WBSUserMediaPermissionController _setValue:ofPreference:forDomain:]


WBSSearchHelperConnectionManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSXPCConnection *searchHelperConnection

  // class methods
  +[WBSSearchHelperConnectionManager sharedManager]

  // instance methods
  -[WBSSearchHelperConnectionManager removeClient:]
  -[WBSSearchHelperConnectionManager init]
  -[WBSSearchHelperConnectionManager .cxx_destruct]
  -[WBSSearchHelperConnectionManager setSearchHelperConnection:]
  -[WBSSearchHelperConnectionManager searchHelperConnection]
  -[WBSSearchHelperConnectionManager searchHelperConnectionRequestedByClient:]


WBSPasswordBreachCryptographicOperations : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSPasswordBreachCryptographicOperations isValidScryptHashWorkFactor:blockSizeR:parallelismFactorP:]

  // instance methods
  -[WBSPasswordBreachCryptographicOperations _hashToCurve:]
  -[WBSPasswordBreachCryptographicOperations dealloc]
  -[WBSPasswordBreachCryptographicOperations .cxx_destruct]
  -[WBSPasswordBreachCryptographicOperations _bucketIdentifierWithBitCount:ofData:]
  -[WBSPasswordBreachCryptographicOperations _encodePasswordForLowFrequencyBucket:withHashSmoothingBits:]
  -[WBSPasswordBreachCryptographicOperations _blindPasswordHash:]
  -[WBSPasswordBreachCryptographicOperations _exportKeyFromCryptor:]
  -[WBSPasswordBreachCryptographicOperations _exportHashToCurve:]
  -[WBSPasswordBreachCryptographicOperations generateFakeEncodedPasswordForLowFrequencyBucket]
  -[WBSPasswordBreachCryptographicOperations generateFakeEncodedPasswordForHighFrequencyBucket]
  -[WBSPasswordBreachCryptographicOperations encodePasswordForLowFrequencyBucket:]
  -[WBSPasswordBreachCryptographicOperations encodePasswordForHighFrequencyBucket:]
  -[WBSPasswordBreachCryptographicOperations initWithConfiguration:]
  -[WBSPasswordBreachCryptographicOperations unblindHash:]


WBSHistoryVisitsWithIDPredicate : NSObject /usr/lib/libc++.1.dylib <WBSHistoryVisitPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistoryVisitsWithIDPredicate new]
  +[WBSHistoryVisitsWithIDPredicate supportsSecureCoding]

  // instance methods
  -[WBSHistoryVisitsWithIDPredicate statementForDatabase:cache:fetchOptions:error:]
  -[WBSHistoryVisitsWithIDPredicate evaluateVisit:]
  -[WBSHistoryVisitsWithIDPredicate init]
  -[WBSHistoryVisitsWithIDPredicate evaluateServiceVisit:]
  -[WBSHistoryVisitsWithIDPredicate .cxx_destruct]
  -[WBSHistoryVisitsWithIDPredicate encodeWithCoder:]
  -[WBSHistoryVisitsWithIDPredicate initWithHistoryVisitIDs:]
  -[WBSHistoryVisitsWithIDPredicate initWithCoder:]


WBSHistoryVisitsMatchingTimesPredicate : NSObject /usr/lib/libc++.1.dylib <WBSHistoryVisitPredicate, WBSHistoryStreamedVisitPredicate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistoryVisitsMatchingTimesPredicate supportsSecureCoding]

  // instance methods
  -[WBSHistoryVisitsMatchingTimesPredicate statementForDatabase:cache:fetchOptions:error:]
  -[WBSHistoryVisitsMatchingTimesPredicate evaluateVisit:]
  -[WBSHistoryVisitsMatchingTimesPredicate evaluateHistoryStreamedVisit:]
  -[WBSHistoryVisitsMatchingTimesPredicate evaluateServiceVisit:]
  -[WBSHistoryVisitsMatchingTimesPredicate .cxx_destruct]
  -[WBSHistoryVisitsMatchingTimesPredicate encodeWithCoder:]
  -[WBSHistoryVisitsMatchingTimesPredicate initWithItemVisitTimeMap:]
  -[WBSHistoryVisitsMatchingTimesPredicate _evaluateVisitWithItemID:visitTime:]
  -[WBSHistoryVisitsMatchingTimesPredicate initWithCloudVisitIdentifiers:]
  -[WBSHistoryVisitsMatchingTimesPredicate initWithCoder:]


WBSHistoryContextController : NSObject /usr/lib/libc++.1.dylib
 @property  WBSHistory *history

  // instance methods
  -[WBSHistoryContextController history]
  -[WBSHistoryContextController initWithHistory:contextClient:]
  -[WBSHistoryContextController .cxx_destruct]
  -[WBSHistoryContextController initWithHistory:contextClient:qualityOfService:]
  -[WBSHistoryContextController _persistTopicsFromContextResult:forPageURL:]
  -[WBSHistoryContextController cachedResponseForURL:completionHandler:]
  -[WBSHistoryContextController invalidateCachedResults]
  -[WBSHistoryContextController contextForPageURL:content:contentType:metadata:isPrivate:isReaderAvailable:withCompletionHandler:]


WBSPasswordBreachResultQuery : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *dictionaryRepresentation
 @property  NSData *persistentIdentifier
 @property  NSDate *dateLastModified

  // class methods
  +[WBSPasswordBreachResultQuery resultQueriesFromDictionaryRepresentations:]
  +[WBSPasswordBreachResultQuery dictionaryRepresentationsForResultQueries:]

  // instance methods
  -[WBSPasswordBreachResultQuery initWithDictionaryRepresentation:]
  -[WBSPasswordBreachResultQuery dateLastModified]
  -[WBSPasswordBreachResultQuery .cxx_destruct]
  -[WBSPasswordBreachResultQuery initWithPersistentIdentifier:dateLastModified:]
  -[WBSPasswordBreachResultQuery persistentIdentifier]
  -[WBSPasswordBreachResultQuery dictionaryRepresentation]


WBSUserMediaCapturePolicyEntry : NSObject /usr/lib/libc++.1.dylib
 @property  double permissionExpirationDate
 @property  double permissionGrantDate
 @property  NSString *origin
 @property  NSString *topLevelOrigin
 @property  NSString *persistentSalt
 @property  unsigned long permission
 @property  NSMutableDictionary *ephemeralSalts

  // instance methods
  -[WBSUserMediaCapturePolicyEntry setOrigin:]
  -[WBSUserMediaCapturePolicyEntry initWithDictionaryRepresentation:]
  -[WBSUserMediaCapturePolicyEntry permissionExpiresWithinOneDay]
  -[WBSUserMediaCapturePolicyEntry topLevelOrigin]
  -[WBSUserMediaCapturePolicyEntry permission]
  -[WBSUserMediaCapturePolicyEntry origin]
  -[WBSUserMediaCapturePolicyEntry setPermission:]
  -[WBSUserMediaCapturePolicyEntry .cxx_destruct]
  -[WBSUserMediaCapturePolicyEntry isValid]
  -[WBSUserMediaCapturePolicyEntry _isValidUserMediaPermission:]
  -[WBSUserMediaCapturePolicyEntry permissionExpirationDate]
  -[WBSUserMediaCapturePolicyEntry setPermissionExpirationDate:]
  -[WBSUserMediaCapturePolicyEntry setPermissionGrantDate:]
  -[WBSUserMediaCapturePolicyEntry setTopLevelOrigin:]
  -[WBSUserMediaCapturePolicyEntry setPersistentSalt:]
  -[WBSUserMediaCapturePolicyEntry dictionaryRepresentation]
  -[WBSUserMediaCapturePolicyEntry ephemeralSalts]
  -[WBSUserMediaCapturePolicyEntry updatePermission:expirationPolicy:]
  -[WBSUserMediaCapturePolicyEntry initWithPermission:expirationPolicy:forOrigin:topLevelOrigin:]
  -[WBSUserMediaCapturePolicyEntry persistentSalt]
  -[WBSUserMediaCapturePolicyEntry setEphemeralSalts:]
  -[WBSUserMediaCapturePolicyEntry permissionGrantDate]


WBSUserAgentQuirksManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSUserAgentQuirksManager init]
  -[WBSUserAgentQuirksManager .cxx_destruct]
  -[WBSUserAgentQuirksManager prepareForTermination]
  -[WBSUserAgentQuirksManager initWithBuiltInQuirkListURL:downloadsDirectoryURL:resourceName:resourceVersion:updateDateDefaultsKey:updateInterval:]
  -[WBSUserAgentQuirksManager getQuirksForDomain:completionHandler:]


WBSTabDialogInformation : NSObject /usr/lib/libc++.1.dylib
 @property  {?=iQ} slot
 @property  NSArray *cancellationExemptions
 @property  BOOL blockingWebProcess
 @property  BOOL dismissed
 @property  BOOL presented

  // instance methods
  -[WBSTabDialogInformation isPresented]
  -[WBSTabDialogInformation .cxx_destruct]
  -[WBSTabDialogInformation slot]
  -[WBSTabDialogInformation initWithPresentationBlock:dismissalBlock:blocksWebProcessUntilDismissed:]
  -[WBSTabDialogInformation setCancellationExemptions:]
  -[WBSTabDialogInformation cancellationExemptions]
  -[WBSTabDialogInformation presentIfNeeded]
  -[WBSTabDialogInformation dismissWithResponse:]
  -[WBSTabDialogInformation isBlockingWebProcess]
  -[WBSTabDialogInformation setSlot:]
  -[WBSTabDialogInformation isExemptFromCancellationInContext:]
  -[WBSTabDialogInformation isDismissed]


WBSTabDialogManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSTabDialogManager dismissCurrentDialogForTabID:withResponse:]
  -[WBSTabDialogManager cancelAllDialogsForTabID:]
  -[WBSTabDialogManager init]
  -[WBSTabDialogManager enqueueOrPresentDialogInSlot:presentationBlock:dismissalBlock:blocksWebProcessUntilDismissed:]
  -[WBSTabDialogManager .cxx_destruct]
  -[WBSTabDialogManager _dialogBlockingSlot:]
  -[WBSTabDialogManager _cancelDialogsInQueue:tabID:context:]
  -[WBSTabDialogManager cancelAllDialogsWithContext:]
  -[WBSTabDialogManager _setForWebProcessID:createIfNeeded:]
  -[WBSTabDialogManager cancelAllDialogsForTabID:context:]
  -[WBSTabDialogManager _dialogBlockingWebProcessID:]
  -[WBSTabDialogManager cancelAllDialogsBlockingWebProcessID:]
  -[WBSTabDialogManager cancelAllDialogsForTabID:reason:]
  -[WBSTabDialogManager _queueForTabID:createIfNeeded:]
  -[WBSTabDialogManager presentNextDialogForSlot:]
  -[WBSTabDialogManager enqueueOrPresentDialog:inSlot:]
  -[WBSTabDialogManager _dismissDialog:withResponse:]
  -[WBSTabDialogManager _enqueueDialog:]
  -[WBSTabDialogManager cancelAllDialogsBlockingSlot:]


WBSAutoplayQuirkWhitelistSnapshotTransformer : WBSConfigurationDataTransformer /System/Library/PrivateFrameworks/Lexicon.framework/Lexicon
  // instance methods
  -[WBSAutoplayQuirkWhitelistSnapshotTransformer objectFromData:]


WBSTopHitCompletionMatch : WBSBookmarkAndHistoryCompletionMatch
  // instance methods
  -[WBSTopHitCompletionMatch isTopHit]
  -[WBSTopHitCompletionMatch initWithBookmarkAndHistoryCompletionMatch:userInput:forQueryID:shouldPreload:]
  -[WBSTopHitCompletionMatch parsecDomainIdentifier]
  -[WBSTopHitCompletionMatch shouldPreload]


WBSPasswordPatternMatch : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long type
 @property  NSString *matchedSubstring
 @property  {_NSRange=QQ} range
 @property  unsigned long endIndex
 @property  double guessesRequired
 @property  NSDictionary *userInfo

  // instance methods
  -[WBSPasswordPatternMatch range]
  -[WBSPasswordPatternMatch compactDescriptionWithMatchedStringColumnWidth:]
  -[WBSPasswordPatternMatch endIndex]
  -[WBSPasswordPatternMatch .cxx_destruct]
  -[WBSPasswordPatternMatch type]
  -[WBSPasswordPatternMatch userInfo]
  -[WBSPasswordPatternMatch initWithType:matchedSubstring:range:guessesRequired:userInfo:]
  -[WBSPasswordPatternMatch isEqual:]
  -[WBSPasswordPatternMatch guessesRequired]
  -[WBSPasswordPatternMatch initExhaustiveSearchPatternWithMatchedSubstring:range:]
  -[WBSPasswordPatternMatch matchedSubstring]


WBSPasswordPickerHintStringGenerator : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSPasswordPickerHintStringGenerator getHintStringsForAppID:appNames:matchedSites:urlString:outServiceNameHintStrings:outDomainHintStrings:]


WBSURLCompletionDatabase : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSURLCompletionDataSource> *dataSource

  // class methods
  +[WBSURLCompletionDatabase initializeURLCompletionOnMainThread]
  +[WBSURLCompletionDatabase _matchIsNotURLMatchAndTitleLooksLikeURLForBookmarkAndHistoryCompletionMatch:]

  // instance methods
  -[WBSURLCompletionDatabase setDataSource:]
  -[WBSURLCompletionDatabase init]
  -[WBSURLCompletionDatabase .cxx_construct]
  -[WBSURLCompletionDatabase .cxx_destruct]
  -[WBSURLCompletionDatabase dataSource]
  -[WBSURLCompletionDatabase clearBookmarkMatchesCaches]
  -[WBSURLCompletionDatabase clearHistoryMatchesCache]
  -[WBSURLCompletionDatabase clearMatchesCaches]
  -[WBSURLCompletionDatabase _getSortedPrefixMatchesForTypedString:topHits:historyMatches:historyLimit:bookmarkMatches:bookmarkLimit:]
  -[WBSURLCompletionDatabase _getSortedFullTextMatchesForTypedString:topHits:historyMatches:historyLimit:bookmarkMatches:bookmarkLimit:]
  -[WBSURLCompletionDatabase clearBookmarkMatchesCachesKeepingEmptyValues:]
  -[WBSURLCompletionDatabase getBestMatchesForTypedString:topHits:matches:limit:forQueryID:]
  -[WBSURLCompletionDatabase _getSortedMatchesForTypedString:topHits:historyMatches:historyLimit:bookmarkMatches:bookmarkLimit:prefixMatchesOnly:]
  -[WBSURLCompletionDatabase _getUnsortedPrefixMatchesForTypedString:historyMatches:bookmarkMatches:]
  -[WBSURLCompletionDatabase _getUnsortedFullTextMatchesForTypedString:historyMatches:bookmarkMatches:dataTypes:]
  -[WBSURLCompletionDatabase _removeMatchesWithTitlesThatLookLikeURLsRemovedFromMatches:]


WBSURLCompletionHistorySnapshot : NSObject /usr/lib/libc++.1.dylib <WBSURLCompletionDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSURLCompletionHistorySnapshot initWithItems:]
  -[WBSURLCompletionHistorySnapshot init]
  -[WBSURLCompletionHistorySnapshot .cxx_construct]
  -[WBSURLCompletionHistorySnapshot .cxx_destruct]
  -[WBSURLCompletionHistorySnapshot _matchSnapshotForCompletionMatch:]
  -[WBSURLCompletionHistorySnapshot enumerateMatchDataForTypedStringHint:options:withBlock:]
  -[WBSURLCompletionHistorySnapshot fakeBookmarkMatchDataWithURLString:title:shouldPreload:]
  -[WBSURLCompletionHistorySnapshot getBestMatchesForTypedString:limit:forQueryID:completionHandler:]


WBSURLCompletionMatch : NSObject /usr/lib/libc++.1.dylib <WBSCompletionListItem>
 @property  long long matchLocation
 @property  BOOL matchLocationIsInURL
 @property  BOOL topHit
 @property  BOOL shouldPreload
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSURLCompletionMatch matchLocationForString:inURLString:]
  +[WBSURLCompletionMatch matchLocationForString:inTitle:]

  // instance methods
  -[WBSURLCompletionMatch isTopHit]
  -[WBSURLCompletionMatch .cxx_destruct]
  -[WBSURLCompletionMatch userVisibleURLString]
  -[WBSURLCompletionMatch parsecQueryID]
  -[WBSURLCompletionMatch setParsecQueryID:]
  -[WBSURLCompletionMatch title]
  -[WBSURLCompletionMatch initWithMatchLocation:userInput:forQueryID:]
  -[WBSURLCompletionMatch parsecDomainIdentifier]
  -[WBSURLCompletionMatch matchLocation]
  -[WBSURLCompletionMatch shouldPreload]
  -[WBSURLCompletionMatch originalURLString]
  -[WBSURLCompletionMatch sfSearchResultValue]
  -[WBSURLCompletionMatch engagementDestination]
  -[WBSURLCompletionMatch matchLocationIsInURL]
  -[WBSURLCompletionMatch matchingStringWithUserTypedPrefix:]


WBSHistoryConnectionProxyForTesting : WBSHistoryConnectionProxy
  // instance methods
  -[WBSHistoryConnectionProxyForTesting initWithListenerEndpoint:]
  -[WBSHistoryConnectionProxyForTesting .cxx_destruct]
  -[WBSHistoryConnectionProxyForTesting _createConnection]


WBSTabCompletionMatch : WBSURLCompletionMatch
 @property  NSURL *url
 @property  NSString *title

  // class methods
  +[WBSTabCompletionMatch _matchLocationForString:url:title:]

  // instance methods
  -[WBSTabCompletionMatch url]
  -[WBSTabCompletionMatch initWithUserTypedString:url:title:forQueryID:]
  -[WBSTabCompletionMatch .cxx_destruct]
  -[WBSTabCompletionMatch userVisibleURLString]
  -[WBSTabCompletionMatch title]
  -[WBSTabCompletionMatch originalURLString]


WBSURLCompletionMatchSnapshot : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, _SSURLCompletionMatch>
 @property  NSURL *url
 @property  NSString *title
 @property  NSString *userVisibleURLString
 @property  long long matchLocation
 @property  BOOL topHit
 @property  BOOL synthesizedTopHit
 @property  BOOL topHitDueToTriggerMatch
 @property  long long visitCount
 @property  NSDate *lastVisitTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSURLCompletionMatchSnapshot supportsSecureCoding]

  // instance methods
  -[WBSURLCompletionMatchSnapshot isTopHit]
  -[WBSURLCompletionMatchSnapshot init]
  -[WBSURLCompletionMatchSnapshot url]
  -[WBSURLCompletionMatchSnapshot .cxx_destruct]
  -[WBSURLCompletionMatchSnapshot userVisibleURLString]
  -[WBSURLCompletionMatchSnapshot encodeWithCoder:]
  -[WBSURLCompletionMatchSnapshot title]
  -[WBSURLCompletionMatchSnapshot lastVisitTime]
  -[WBSURLCompletionMatchSnapshot matchLocation]
  -[WBSURLCompletionMatchSnapshot initWithURL:title:matchLocation:isTopHit:isSynthesizedTopHit:isTopHitDueToTriggerMatch:visitCount:lastVisitTime:]
  -[WBSURLCompletionMatchSnapshot isSynthesizedTopHit]
  -[WBSURLCompletionMatchSnapshot isTopHitDueToTriggerMatch]
  -[WBSURLCompletionMatchSnapshot visitCount]
  -[WBSURLCompletionMatchSnapshot initWithCoder:]


WBSURLCompletionSessionProxy : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSURLCompletionSessionProxy init]
  -[WBSURLCompletionSessionProxy .cxx_destruct]
  -[WBSURLCompletionSessionProxy getBestMatchesForTypedString:limit:forQueryID:completionHandler:]
  -[WBSURLCompletionSessionProxy _completionSessionWithCompletionHandler:]
  -[WBSURLCompletionSessionProxy userDidSelectCompletionMatch:forTypedString:]


WBSURLCompletionUserTypedString : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSString *normalizedString

  // class methods
  +[WBSURLCompletionUserTypedString initialize]
  +[WBSURLCompletionUserTypedString supportsSecureCoding]

  // instance methods
  -[WBSURLCompletionUserTypedString init]
  -[WBSURLCompletionUserTypedString initWithString:]
  -[WBSURLCompletionUserTypedString dealloc]
  -[WBSURLCompletionUserTypedString .cxx_destruct]
  -[WBSURLCompletionUserTypedString encodeWithCoder:]
  -[WBSURLCompletionUserTypedString initWithCoder:]
  -[WBSURLCompletionUserTypedString normalizedString]


WBSURLSuffixChecker : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSURLSuffixChecker addStringToFailedSuffixes:]
  -[WBSURLSuffixChecker dealloc]
  -[WBSURLSuffixChecker initWithSuffixes:]
  -[WBSURLSuffixChecker hasSuffix:]
  -[WBSURLSuffixChecker .cxx_destruct]
  -[WBSURLSuffixChecker insertString:intoTrieWithCache:]


WBSAppleAccountInformationProvider : NSObject /usr/lib/libc++.1.dylib <WBSAppleAccountInformationProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSAppleAccountInformationProvider appleAccountSecurityState]
  -[WBSAppleAccountInformationProvider _primaryAppleAccountSecurityLevel]
  -[WBSAppleAccountInformationProvider getAppleAccountSecurityStateWithCompletion:]


WBSUserTypedFormString : WBSFormAutoFillItem
 @property  NSString *userTypedString

  // instance methods
  -[WBSUserTypedFormString completion]
  -[WBSUserTypedFormString .cxx_destruct]
  -[WBSUserTypedFormString userTypedString]
  -[WBSUserTypedFormString initWithUserTypedString:]


NSOutputStream(SafariCoreExtras)
	// instance methods
	-[NSOutputStream(SafariCoreExtras) safari_writeNetworkOrderUInt16:]
	-[NSOutputStream(SafariCoreExtras) safari_writeNetworkOrderUInt32:]

CNContact(SafariSharedExtras)
	// class methods
	+[CNContact(SafariSharedExtras) safari_defaultDescriptors]
	+[CNContact(SafariSharedExtras) safari_imageViewDescriptors]
	+[CNContact(SafariSharedExtras) safari_oneTimeCodeViewDescriptors]

	// instance methods
	-[CNContact(SafariSharedExtras) safari_fullName]
	-[CNContact(SafariSharedExtras) safari_valueForWBSABProperty:]

CNContactStore(SafariSharedExtras)
	// class methods
	+[CNContactStore(SafariSharedExtras) safari_sharedContactStore]

	// instance methods
	-[CNContactStore(SafariSharedExtras) safari_contactForHandle:error:]

NSInputStream(SafariCoreExtras)
	// instance methods
	-[NSInputStream(SafariCoreExtras) safari_readAllData]
	-[NSInputStream(SafariCoreExtras) safari_readNetworkOrderUInt16:]
	-[NSInputStream(SafariCoreExtras) safari_readNetworkOrderUInt32:]

NSProcessInfo(SafariSharedExtras)
	// instance methods
	-[NSProcessInfo(SafariSharedExtras) safari_systemSupportsBroadway]
	-[NSProcessInfo(SafariSharedExtras) _safari_operatingSystemVersionStringFromOperatingSystemVersion:]
	-[NSProcessInfo(SafariSharedExtras) safari_operatingSystemVersionString]

NSBundle(SafariSharedExtras)
	// class methods
	+[NSBundle(SafariSharedExtras) safari_safariSharedBundle]

	// instance methods
	-[NSBundle(SafariSharedExtras) safari_primaryLocalizationIsEnglish]

NSCharacterSet(SafariSharedExtras)
	// class methods
	+[NSCharacterSet(SafariSharedExtras) safari_lockRelatedEmojiCharacterSet]
	+[NSCharacterSet(SafariSharedExtras) safari_obscuredPasswordCharacterSets]
	+[NSCharacterSet(SafariSharedExtras) safari_whitespaceAndNewlineCharacterSet]
	+[NSCharacterSet(SafariSharedExtras) safari_asciiDigitCharacterSet]

(WBSNSDateExtras)
	// class methods
	+[(WBSNSDateExtras) safari_dateOfMidnightNumberOfDaysAgo:]
	+[(WBSNSDateExtras) safari_dateFromNTPServerWithTimeout:completionHandler:]

	// instance methods
	-[(WBSNSDateExtras) safari_stringsFromDateForLocaleIdentifiers:]
	-[(WBSNSDateExtras) safari_startOfDay]
	-[(WBSNSDateExtras) safari_isInToday]
	-[(WBSNSDateExtras) safari_isInclusivelyBetweenDate:andDate:]
	-[(WBSNSDateExtras) _safari_stringWithDashSeparatorWithDateFormatter:]
	-[(WBSNSDateExtras) safari_numberOfWeeksUntilDate:]
	-[(WBSNSDateExtras) safari_isInSameDayAsDate:]
	-[(WBSNSDateExtras) safari_isNowOrInRecentPast]
	-[(WBSNSDateExtras) safari_timeIntervalUntilNow]

(SafariSharedCloudKitExtras)
	// instance methods
	-[(SafariSharedCloudKitExtras) safari_errorOrAnyPartialErrorHasCloudKitErrorCode:]
	-[(SafariSharedCloudKitExtras) safari_errorOrAnyPartialErrorHasCloudKitInternalErrorCode:]
	-[(SafariSharedCloudKitExtras) _safari_enumerateCloudKitErrorsWithBlock:]

(SafariSharedExtras)
	// class methods
	+[(SafariSharedExtras) safari_stringWithJSValue:context:nullStringPolicy:]
	+[(SafariSharedExtras) safari_stringWithJSValue:context:]
	+[(SafariSharedExtras) safari_localizedStringFromComponents:usingConjunctionForFinalJoiner:]
	+[(SafariSharedExtras) safari_stringWithUTF8Bytes:length:]
	+[(SafariSharedExtras) safari_stringByBase64EncodingData:]

	// instance methods
	-[(SafariSharedExtras) safari_bestLanguageTag]
	-[(SafariSharedExtras) safari_looksLikeObscuredPassword]
	-[(SafariSharedExtras) safari_md5Hash]
	-[(SafariSharedExtras) safari_sha256Hash]
	-[(SafariSharedExtras) safari_canonicalURLStringForFrequentlyVisitedSites]
	-[(SafariSharedExtras) safari_bestURLForUserTypedString]
	-[(SafariSharedExtras) safari_hasDirectionalPrefix]
	-[(SafariSharedExtras) safari_isJavaScriptURLString]
	-[(SafariSharedExtras) safari_possibleTopLevelDomainCorrectionForUserTypedString]
	-[(SafariSharedExtras) safari_stringByRemovingTopLevelDomainFromHost]
	-[(SafariSharedExtras) safari_stringByDeletingStartingSlash]
	-[(SafariSharedExtras) safari_stringByRemovingUnnecessaryCharactersFromUserTypedURLString]
	-[(SafariSharedExtras) safari_fixedStringByExpandingTildeInPathToUserHomeDirectory]
	-[(SafariSharedExtras) safari_stringByDeletingTrailingSlash]
	-[(SafariSharedExtras) safari_stringEncodedAsURLQueryParameter]
	-[(SafariSharedExtras) safari_stringByRemovingDirectionalPrefix]
	-[(SafariSharedExtras) safari_isPDFMIMEType]
	-[(SafariSharedExtras) safari_stringBySubstitutingAmpersandAndAngleBracketsForHTMLEntities]
	-[(SafariSharedExtras) safari_stringBySubstitutingHTMLEntitiesForAmpersandAndAngleBrackets]
	-[(SafariSharedExtras) safari_isPathExtensionAllowedForAnalytics]
	-[(SafariSharedExtras) safari_scriptIfJavaScriptURLString]
	-[(SafariSharedExtras) safari_enumerateSubdomainRangesInHostUsingBlock:]
	-[(SafariSharedExtras) safari_canonicalURLForFrequentlyVisitedSites]
	-[(SafariSharedExtras) safari_isVisualDuplicateOfURLString:]
	-[(SafariSharedExtras) safari_containedURLs]
	-[(SafariSharedExtras) safari_stringByRemovingExcessWhitespace]
	-[(SafariSharedExtras) safari_stringByRemovingParenthesizedDomain]
	-[(SafariSharedExtras) safari_userVisibleTitleIgnoringFullURLString]
	-[(SafariSharedExtras) safari_normalizedParsecInputString]
	-[(SafariSharedExtras) safari_userVisibleURL]
	-[(SafariSharedExtras) safari_stringByFoldingWideCharactersAndNormalizing]
	-[(SafariSharedExtras) safari_bestURLStringForUserTypedString]

NSURLConnection(WBSNSURLConnectionExtras)
	// class methods
	+[NSURLConnection(WBSNSURLConnectionExtras) safari_sendAsynchronousRequest:queue:completionHandler:]

(SafariSharedExtras)
	// class methods
	+[(SafariSharedExtras) safari_enumeratePossibleURLsForUserTypedString:withBlock:]
	+[(SafariSharedExtras) safari_URLWithUserTypedString:]
	+[(SafariSharedExtras) safari_URLWithDataAsString:]
	+[(SafariSharedExtras) safari_URLWithDataAsString:relativeToURL:]

	// instance methods
	-[(SafariSharedExtras) safari_URLWithUniqueFilename]
	-[(SafariSharedExtras) safari_originalDataAsString]
	-[(SafariSharedExtras) safari_isURLTooLongToDisplay]
	-[(SafariSharedExtras) safari_isHTTPFamilyURL]
	-[(SafariSharedExtras) safari_userVisibleString]
	-[(SafariSharedExtras) safari_hasScheme:]
	-[(SafariSharedExtras) safari_isHTTPURL]
	-[(SafariSharedExtras) safari_canonicalURL]
	-[(SafariSharedExtras) safari_isTopLevelURL]
	-[(SafariSharedExtras) safari_isDataURL]
	-[(SafariSharedExtras) safari_isLocalOrPrivateNetworkURL]
	-[(SafariSharedExtras) safari_userVisibleHost]
	-[(SafariSharedExtras) safari_wellKnownChangePasswordURL]
	-[(SafariSharedExtras) safari_URLByRemovingUserAndPath]
	-[(SafariSharedExtras) safari_URLByReplacingSchemeWithString:]
	-[(SafariSharedExtras) safari_path]
	-[(SafariSharedExtras) safari_hasLocalScheme]
	-[(SafariSharedExtras) safari_hasCustomScheme]
	-[(SafariSharedExtras) safari_isBlobURL]
	-[(SafariSharedExtras) safari_isMailtoURL]
	-[(SafariSharedExtras) safari_isSafariResourceURL]
	-[(SafariSharedExtras) safari_isEligibleToShowNotSecureWarning]
	-[(SafariSharedExtras) safari_URLByReplacingHostWithString:]
	-[(SafariSharedExtras) safari_hasUserOrPassword]
	-[(SafariSharedExtras) safari_URLByDeletingUserAndPassword]
	-[(SafariSharedExtras) safari_canonicalURLForStartPage]
	-[(SafariSharedExtras) safari_simplifiedURLStringForDeduping]
	-[(SafariSharedExtras) safari_hasCharactersBeyondPath]
	-[(SafariSharedExtras) safari_wellKnownResponseCodeReliabilityURL]
	-[(SafariSharedExtras) safari_displayNameWithTitle:]
	-[(SafariSharedExtras) safari_shouldBeAssociatedWithFaviconFromRedirectedURL:]
	-[(SafariSharedExtras) safari_userVisibleStringConsideringLongURLs]
	-[(SafariSharedExtras) safari_isWellKnownChangePasswordURL]
	-[(SafariSharedExtras) safari_relativePathToURL:]
	-[(SafariSharedExtras) safari_userVisibleHostWithoutWWWSubdomain]

NSURLResponse(SafariSharedExtras)
	// instance methods
	-[NSURLResponse(SafariSharedExtras) safari_statusCodeGroup]
	-[NSURLResponse(SafariSharedExtras) safari_hasAttachment]
	-[NSURLResponse(SafariSharedExtras) safari_decodeJSONData:expectingRootClass:error:]

(ParsecExtras)
	// instance methods
	-[(ParsecExtras) safari_translateToArrayOfParsecModelsOfClass:]

(WBSNSLocaleExtras)
	// class methods
	+[(WBSNSLocaleExtras) safari_localeIdentifiersForMostWidelyUsedLanguages]

NSRegularExpression(SafariSharedExtras)
	// class methods
	+[NSRegularExpression(SafariSharedExtras) safari_escapedPatternForString:charactersToEscape:]

WBSSavedPasswordStore(SafariSharedExtras)
	// instance methods
	-[WBSSavedPasswordStore(SafariSharedExtras) safari_canSaveUser:password:forUserTypedSite:]
	-[WBSSavedPasswordStore(SafariSharedExtras) safari_saveUser:password:forUserTypedSite:]

WBSAnalyticsLogger(WBSAnalyticsLoggerExtras)
	// instance methods
	-[WBSAnalyticsLogger(WBSAnalyticsLoggerExtras) reportNumberOfFlaggedPasswordsUsingSavedPasswordAuditorIfNeeded:]

01 00 1b40 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1300 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 1c00 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 1e40 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 1e40 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordChangesOperation 
01 00 1e40 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZonesOperation 
01 00 1e40 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordZonesOperation 
01 00 1e40 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 1e40 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifySubscriptionsOperation 
01 00 1e40 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotification 
01 00 1e40 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotificationInfo 
01 00 1e40 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 1e40 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 1e40 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 1e40 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneSubscription 
01 00 1e40 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKServerChangeToken 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNLabeledValue 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNPostalAddressFormatter 
01 00 1040 /System/Library/PrivateFrameworks/DeviceManagement.framework/DeviceManagement: DMFWebsitePolicyMonitor 
01 00 2200 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSContext 
01 00 2200 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSManagedValue 
01 00 2200 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSValue 
01 00 0300 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0500 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSBlock 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFormatter 
01 00 1d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSLinguisticTagger 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLConnection 
01 00 1d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCredential 
01 00 1d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCredentialStorage 
01 00 1d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLProtectionSpace 
01 00 1d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLProtocol 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 1d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLResponse 
01 00 1d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 1d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUbiquitousKeyValueStore 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValueTransformer 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0900 /System/Library/PrivateFrameworks/CoreParsec.framework/CoreParsec: PAREngagedCompletionCache 
01 00 0700 /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/SymptomDiagnosticReporter: SDRDiagnosticReporter 
01 00 0a00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFPunchout 
01 00 0a00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSearchResult 
01 00 1240 /System/Library/PrivateFrameworks/ScreenTimeCore.framework/ScreenTimeCore: STWebUsageController 
01 00 1500 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 1500 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 1500 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 1140 /System/Library/PrivateFrameworks/UsageTracking.framework/UsageTracking: USWebpageUsage 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSAddressBookValueSpecifier 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSAnalyticsLogger 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSAutoFillQuirksManager 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSCloudKitContainerManateeObserver 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSCloudKitThrottler 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSConfigurationDataTransformer 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSDontSaveMarker 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSKeychainCredentialNotificationMonitor 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSMemoryFootprint 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSPair 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSPasswordGenerationManager 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSPasswordManagerURL 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSPasswordRuleParser 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSRemotePlistController 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSQLiteDatabase 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSQLiteStatement 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSQLiteStatementCache 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSafariBookmarksSyncAgentProxy 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSavedPasswordAuditor 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSavedPasswordStore 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSScopeExitHandler 
01 00 1800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSURLCredentialCache 
