|| __DATA.__common _WBSNullPointer
|| __DATA.__data _getPKGlyphViewClass
|| __DATA.__data _getPKVirtualCardClass
|| __DATA.__data _getPKVirtualCardManagerClass
|| __DATA.__objc_data _OBJC_CLASS_$_WBSReaderFontDownloadManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSafariSandboxBroker
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSafariSandboxBrokerConnection
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSearchImpressionAnalyticsRecorder
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSReaderFontDownloadManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSafariSandboxBroker
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSafariSandboxBrokerConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSearchImpressionAnalyticsRecorder
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSFrequentlyVisitedSitesController._bannedURLStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSHistory._entriesByURLString
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSHistory._entriesByURLStringAccessQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSHistory._historyAgeLimit
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSHistory._hostnameToHistoryItemCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSHistory._hostnameToHistoryItemCountAccessQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSHistory._stringsForUserTypedDomainExpansion
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSHistoryItem._lastVisit
|| __DATA.__objc_ivar _OBJC_IVAR_$_WBSHistoryItem._visitsPendingWriteToDataStore
|| __DATA_CONST.__const _WBSAddressBookMatchIdentifierKey
|| __DATA_CONST.__const _WBSAddressBookMatchKeyKey
|| __DATA_CONST.__const _WBSAddressBookMatchLabelKey
|| __DATA_CONST.__const _WBSAddressBookMatchPropertyKey
|| __DATA_CONST.__const _WBSAddressBookMatchUniqueIDKey
|| __DATA_CONST.__const _WBSAddressBookMatchValueKey
|| __DATA_CONST.__const _WBSAutomaticBugCaptureHistoryProcess
|| __DATA_CONST.__const _WBSAutomaticBugCaptureSafariSharedDomain
|| __DATA_CONST.__const _WBSAutoplayPreferenceIdentifier
|| __DATA_CONST.__const _WBSCameraPreferenceIdentifier
|| __DATA_CONST.__const _WBSCloudBookmarksMigrationReadinessDataInvalidatedNotification
|| __DATA_CONST.__const _WBSCloudHistoryAllPendingDataSavedToCloudKey
|| __DATA_CONST.__const _WBSCloudHistoryClientVersionKey
|| __DATA_CONST.__const _WBSCloudHistoryConfigurationChangedNotification
|| __DATA_CONST.__const _WBSCloudHistoryConfigurationMaximumRequestLimitCharacterCountKey
|| __DATA_CONST.__const _WBSCloudHistoryConfigurationMultipleDeviceFetchChangesThrottlingPolicyStringKey
|| __DATA_CONST.__const _WBSCloudHistoryConfigurationMultipleDeviceSaveChangesThrottlingPolicyStringKey
|| __DATA_CONST.__const _WBSCloudHistoryConfigurationSingleDeviceFetchChangesThrottlingPolicyStringKey
|| __DATA_CONST.__const _WBSCloudHistoryConfigurationSingleDeviceSaveChangesThrottlingPolicyStringKey
|| __DATA_CONST.__const _WBSCloudHistoryContainerIdentifier
|| __DATA_CONST.__const _WBSCloudHistoryDataKey
|| __DATA_CONST.__const _WBSCloudHistoryEncryptedDataKey
|| __DATA_CONST.__const _WBSCloudHistoryErrorDomain
|| __DATA_CONST.__const _WBSCloudHistoryItemsWereRemovedNotification
|| __DATA_CONST.__const _WBSCloudHistoryManateeContainerIdentifier
|| __DATA_CONST.__const _WBSCloudHistoryPushAgentServiceName
|| __DATA_CONST.__const _WBSCloudHistoryPushNotificationReceivedNotificationName
|| __DATA_CONST.__const _WBSCloudHistorySaveChangesAttemptDidCompleteNotification
|| __DATA_CONST.__const _WBSCloudHistoryStoreErrorDomain
|| __DATA_CONST.__const _WBSCloudHistoryStoreManateeStateDidChangeNotification
|| __DATA_CONST.__const _WBSCloudHistoryStoreUsesManateeContainerNotificationKey
|| __DATA_CONST.__const _WBSCloudHistoryTombstonesKey
|| __DATA_CONST.__const _WBSCloudHistoryTombstonesRecordType
|| __DATA_CONST.__const _WBSCloudHistoryUUIDKey
|| __DATA_CONST.__const _WBSCloudHistoryVersionKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitHTTPNonGetKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitLoadSuccessfulKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitRedirectDestinationURLKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitRedirectDestinationVisitTimeKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitRedirectSourceURLKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitRedirectSourceVisitTimeKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitTimeKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitTitleKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitURLKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitsKey
|| __DATA_CONST.__const _WBSCloudHistoryVisitsRecordType
|| __DATA_CONST.__const _WBSCloudHistoryZoneName
|| __DATA_CONST.__const _WBSCloudTabDictionaryTypeKey
|| __DATA_CONST.__const _WBSCloudTabStoreErrorDomain
|| __DATA_CONST.__const _WBSContentBlockersPreferenceIdentifier
|| __DATA_CONST.__const _WBSCreditCardAutoFillAccessGroup
|| __DATA_CONST.__const _WBSCreditCardAutoFillKeychainService
|| __DATA_CONST.__const _WBSCyclerBookmarksTestSuiteErrorDomain
|| __DATA_CONST.__const _WBSCyclerCloudKitMigrationTestSuiteErrorDomain
|| __DATA_CONST.__const _WBSCyclerErrorCodeUserInfoKey
|| __DATA_CONST.__const _WBSCyclerErrorDomainUserInfoKey
|| __DATA_CONST.__const _WBSCyclerErrorLocalizedDescriptionUserInfoKey
|| __DATA_CONST.__const _WBSCyclerServiceDidFinishRunningTestDistributedNotification
|| __DATA_CONST.__const _WBSCyclerServiceErrorDomain
|| __DATA_CONST.__const _WBSCyclerServiceName
|| __DATA_CONST.__const _WBSCyclerTestRunnerErrorDomain
|| __DATA_CONST.__const _WBSCyclerTestSuiteBookmarkAuxiliaryErrorDomain
|| __DATA_CONST.__const _WBSCyclerTestSuiteBookmarkOperationClearLocalDataForCloudKitTestKey
|| __DATA_CONST.__const _WBSCyclerTestSuiteBookmarkOperationClearLocalDataIncludeMigrationStateKey
|| __DATA_CONST.__const _WBSDebugCloudKitBookmarkMigrationDeviceEligibilityUpdateIntervalPreferenceKey
|| __DATA_CONST.__const _WBSDebugCloudKitBookmarkMigrationGraceIntervalPreferenceKey
|| __DATA_CONST.__const _WBSDebugCloudKitBookmarkMigrationMaximumAgeOfCloudTabDevicesUpdatePreferenceKey
|| __DATA_CONST.__const _WBSDebugCloudKitBookmarkMigrationMinimumWaitForCloudTabDevicesUpdateAfterSynchronizationRequestPreferenceKey
|| __DATA_CONST.__const _WBSDebugCloudKitBookmarkMigrationTimescaleKey
|| __DATA_CONST.__const _WBSDebugCrowdsourcedAutoFillCorrectionsModePreferenceKey
|| __DATA_CONST.__const _WBSDebugHTTPProxyPreferenceKey
|| __DATA_CONST.__const _WBSDebugHTTPSProxyPreferenceKey
|| __DATA_CONST.__const _WBSDebugShowTabAncestryInTabTitlePreferenceKey
|| __DATA_CONST.__const _WBSDomainWithModifiedContentBlockersPreferenceUserInfoKey
|| __DATA_CONST.__const _WBSDomainWithModifiedPageZoomPreferenceUserInfoKey
|| __DATA_CONST.__const _WBSDomainWithModifiedReaderPreferenceUserInfoKey
|| __DATA_CONST.__const _WBSForYouRecommendationMediatorContentDidChangeNotification
|| __DATA_CONST.__const _WBSForYouRecommendationMediatorContentDidChangeSourceKey
|| __DATA_CONST.__const _WBSForYouRecommendationMediatorDidUpdateHandoffApplicationNotification
|| __DATA_CONST.__const _WBSForYouRecommendationMediatorDidUpdateImageForItemNotification
|| __DATA_CONST.__const _WBSForYouRecommendationMediatorRecommendationKey
|| __DATA_CONST.__const _WBSForYouSitePreferenceIdentifier
|| __DATA_CONST.__const _WBSForceCloudKitBookmarkMigrationEligibilityPreferenceKey
|| __DATA_CONST.__const _WBSFormAnnotationContactIDKey
|| __DATA_CONST.__const _WBSFormAnnotationCurrentPasswordKey
|| __DATA_CONST.__const _WBSFormAnnotationNewPasswordKey
|| __DATA_CONST.__const _WBSFormAnnotationUsernameKey
|| __DATA_CONST.__const _WBSFormAutoFillParsecCrowdsourcedCorrectionsErrorDomain
|| __DATA_CONST.__const _WBSFormMetadataAddressBookLabelKey
|| __DATA_CONST.__const _WBSFormMetadataAnnotationsKey
|| __DATA_CONST.__const _WBSFormMetadataAutoFillFormTypeKey
|| __DATA_CONST.__const _WBSFormMetadataAutocompleteTokensKey
|| __DATA_CONST.__const _WBSFormMetadataConfirmPasswordElementUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataContainsActiveElementKey
|| __DATA_CONST.__const _WBSFormMetadataControlAssociatedUsernameKey
|| __DATA_CONST.__const _WBSFormMetadataControlAutoFillButtonTypeKey
|| __DATA_CONST.__const _WBSFormMetadataControlClaimsToBeCurrentPasswordViaAutocompleteAttribute
|| __DATA_CONST.__const _WBSFormMetadataControlClaimsToBeNewPasswordViaAutocompleteAttribute
|| __DATA_CONST.__const _WBSFormMetadataControlClaimsToBeUsernameViaAutocompleteAttribute
|| __DATA_CONST.__const _WBSFormMetadataControlFieldClassKey
|| __DATA_CONST.__const _WBSFormMetadataControlFieldIDKey
|| __DATA_CONST.__const _WBSFormMetadataControlFieldNameKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsActiveElementKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsAutoFilledTextFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsDisabledKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsLabeledUsernameField
|| __DATA_CONST.__const _WBSFormMetadataControlIsReadOnlyKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsSecureTextFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsTextFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlIsUserEditedTextFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLastAutoFillButtonTypeKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeCreditCardCardholderFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeCreditCardCompositeExpirationDateFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeCreditCardNumberFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeCreditCardSecurityCodeFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeCreditCardTypeFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeDayFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeIgnoredDataTypeFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeMonthFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeOneTimeCodeFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlLooksLikeYearFieldKey
|| __DATA_CONST.__const _WBSFormMetadataControlMaxLengthKey
|| __DATA_CONST.__const _WBSFormMetadataControlMinLengthKey
|| __DATA_CONST.__const _WBSFormMetadataControlNextFieldUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataControlPasswordRules
|| __DATA_CONST.__const _WBSFormMetadataControlPlaceholderKey
|| __DATA_CONST.__const _WBSFormMetadataControlRectHeightKey
|| __DATA_CONST.__const _WBSFormMetadataControlRectLeftKey
|| __DATA_CONST.__const _WBSFormMetadataControlRectTopKey
|| __DATA_CONST.__const _WBSFormMetadataControlRectWidthKey
|| __DATA_CONST.__const _WBSFormMetadataControlSizeKey
|| __DATA_CONST.__const _WBSFormMetadataControlTagNameKey
|| __DATA_CONST.__const _WBSFormMetadataControlUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataControlValueKey
|| __DATA_CONST.__const _WBSFormMetadataDisallowsAutocompleteKey
|| __DATA_CONST.__const _WBSFormMetadataFirstCreditCardCardholderFieldOrCreditCardNumberFieldUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataFormActionKey
|| __DATA_CONST.__const _WBSFormMetadataFormControlsKey
|| __DATA_CONST.__const _WBSFormMetadataFormIDKey
|| __DATA_CONST.__const _WBSFormMetadataFormIsBestForPageLevelAutoFill
|| __DATA_CONST.__const _WBSFormMetadataFormIsBestForStreamlinedLogin
|| __DATA_CONST.__const _WBSFormMetadataFormIsEligibleForAutomaticLogin
|| __DATA_CONST.__const _WBSFormMetadataFormIsSearchFormKey
|| __DATA_CONST.__const _WBSFormMetadataFormIsVisibleKey
|| __DATA_CONST.__const _WBSFormMetadataFormUsesRelAsync
|| __DATA_CONST.__const _WBSFormMetadataOldPasswordElementUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataPasswordElementUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataPasswordRequirementsKey
|| __DATA_CONST.__const _WBSFormMetadataRadioButtonInfoKey
|| __DATA_CONST.__const _WBSFormMetadataRequestTypeKey
|| __DATA_CONST.__const _WBSFormMetadataSelectElementInfoKey
|| __DATA_CONST.__const _WBSFormMetadataSelectionLengthKey
|| __DATA_CONST.__const _WBSFormMetadataSelectionStartKey
|| __DATA_CONST.__const _WBSFormMetadataTextSampleKey
|| __DATA_CONST.__const _WBSFormMetadataUsernameElementUniqueIDKey
|| __DATA_CONST.__const _WBSFormMetadataUsesGeneratedPasswordKey
|| __DATA_CONST.__const _WBSFoundInRecommendationManagerDidUpdateSuggestionsNotification
|| __DATA_CONST.__const _WBSFrequentlyVisitedSitesAlgorithmVersion
|| __DATA_CONST.__const _WBSFrequentlyVisitedSitesDidChangeNotification
|| __DATA_CONST.__const _WBSGeolocationPreferenceIdentifier
|| __DATA_CONST.__const _WBSHistoryContextControllerDidAddTagNotification
|| __DATA_CONST.__const _WBSHistoryDidRemoveHostnamesNotification
|| __DATA_CONST.__const _WBSHistoryErrorDomain
|| __DATA_CONST.__const _WBSHistoryInMemoryDatabaseKey
|| __DATA_CONST.__const _WBSHistoryItemDidChangeNotification
|| __DATA_CONST.__const _WBSHistoryItemWillChangeNotification
|| __DATA_CONST.__const _WBSHistoryItemsKey
|| __DATA_CONST.__const _WBSHistoryItemsWereAddedNotification
|| __DATA_CONST.__const _WBSHistoryItemsWereLoadedNotification
|| __DATA_CONST.__const _WBSHistoryItemsWereRemovedDuringLoadingNotification
|| __DATA_CONST.__const _WBSHistoryItemsWereRemovedFromDatabaseNotification
|| __DATA_CONST.__const _WBSHistoryItemsWereRemovedNotification
|| __DATA_CONST.__const _WBSHistoryItemsWereTaggedNotification
|| __DATA_CONST.__const _WBSHistorySQLiteStoreCachedSyncCircleSizeDataKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreClearHistoryEndDateKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreClearHistoryStartDateKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreCurrentGenerationKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreFetchThrottlerDataKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreImportCompletedKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreLastMaintenanceDateKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreLastSyncedGenerationKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreLongLivedSaveOperationKey
|| __DATA_CONST.__const _WBSHistorySQLiteStorePushNotificationsAreInitializedKey
|| __DATA_CONST.__const _WBSHistorySQLiteStorePushThrottlerDataKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreServerChangeTokenKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreSyncCircleSizeRetrievalThrottlerDataKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreSyncsWithManateeContainerKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreURLHashKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreURLKey
|| __DATA_CONST.__const _WBSHistorySQLiteStoreURLSaltKey
|| __DATA_CONST.__const _WBSHistorySessionsDidChangeNotification
|| __DATA_CONST.__const _WBSHistorySessionsRemovedItemsKey
|| __DATA_CONST.__const _WBSHistorySessionsWithAddedItemsKey
|| __DATA_CONST.__const _WBSHistoryTaggedItemsKey
|| __DATA_CONST.__const _WBSHistoryTagsKey
|| __DATA_CONST.__const _WBSHistoryTombstoneEndTimeKey
|| __DATA_CONST.__const _WBSHistoryTombstoneStartTimeKey
|| __DATA_CONST.__const _WBSHistoryTombstoneURLHashKey
|| __DATA_CONST.__const _WBSHistoryTombstoneURLKey
|| __DATA_CONST.__const _WBSHistoryTombstoneURLSaltKey
|| __DATA_CONST.__const _WBSHistoryVisitKey
|| __DATA_CONST.__const _WBSHistoryVisitWasAddedNotification
|| __DATA_CONST.__const _WBSHistoryVisitsKey
|| __DATA_CONST.__const _WBSHistoryVisitsWereRemovedFromDatabaseNotification
|| __DATA_CONST.__const _WBSHistoryWasClearedNotification
|| __DATA_CONST.__const _WBSHistoryWasLoadedNotification
|| __DATA_CONST.__const _WBSKeychainAccessGroup
|| __DATA_CONST.__const _WBSKeychainAccountSafari
|| __DATA_CONST.__const _WBSLastWeakPasswordReportTimePreferenceKey
|| __DATA_CONST.__const _WBSManagedMediaCapturePoliciesDidChangeNotification
|| __DATA_CONST.__const _WBSMicrophonePreferenceIdentifier
|| __DATA_CONST.__const _WBSNewBlankTabPositionAppliesToAllBlankTabsPreferenceKey
|| __DATA_CONST.__const _WBSNewBlankTabPositionDelayPreferenceKey
|| __DATA_CONST.__const _WBSNewTabPositionAppliesToSpawnedTabsPreferenceKey
|| __DATA_CONST.__const _WBSNewTabPositionPreferenceKey
|| __DATA_CONST.__const _WBSNotificationsPreferenceIdentifier
|| __DATA_CONST.__const _WBSOpenSearchDescriptionUserInfoKey
|| __DATA_CONST.__const _WBSOpenSearchSchemaFetcherDidCollectDescriptionNotificationName
|| __DATA_CONST.__const _WBSOpenSearchSearchTermsParameterName
|| __DATA_CONST.__const _WBSOpenSearchStartPageParameterName
|| __DATA_CONST.__const _WBSOperatingSystemFamilyIOS
|| __DATA_CONST.__const _WBSOperatingSystemFamilyMacOS
|| __DATA_CONST.__const _WBSPageMetadataAuthorKey
|| __DATA_CONST.__const _WBSPageMetadataDescriptionKey
|| __DATA_CONST.__const _WBSPageMetadataKeywordsKey
|| __DATA_CONST.__const _WBSPageMetadataTitleKey
|| __DATA_CONST.__const _WBSPageZoomFactorUserInfoKey
|| __DATA_CONST.__const _WBSPageZoomPreferenceDidChangeNotification
|| __DATA_CONST.__const _WBSParsecAuxiliaryInfoTextColorGreen
|| __DATA_CONST.__const _WBSParsecAuxiliaryInfoTextColorRed
|| __DATA_CONST.__const _WBSParsecDomainSafariAddressBox
|| __DATA_CONST.__const _WBSParsecDomainSafariBaiduCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariBaiduSearch
|| __DATA_CONST.__const _WBSParsecDomainSafariBingCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariBingSearch
|| __DATA_CONST.__const _WBSParsecDomainSafariBookmark
|| __DATA_CONST.__const _WBSParsecDomainSafariDuckDuckGoCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariDuckDuckGoSearch
|| __DATA_CONST.__const _WBSParsecDomainSafariFindOnPage
|| __DATA_CONST.__const _WBSParsecDomainSafariGoToSite
|| __DATA_CONST.__const _WBSParsecDomainSafariGoogleCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariGoogleSearch
|| __DATA_CONST.__const _WBSParsecDomainSafariHistory
|| __DATA_CONST.__const _WBSParsecDomainSafariHistorySearch
|| __DATA_CONST.__const _WBSParsecDomainSafariICloudTab
|| __DATA_CONST.__const _WBSParsecDomainSafariLastSearchFormat
|| __DATA_CONST.__const _WBSParsecDomainSafariOther
|| __DATA_CONST.__const _WBSParsecDomainSafariQihooCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariQihooSearch
|| __DATA_CONST.__const _WBSParsecDomainSafariSiriCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariSogouCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariSogouSearch
|| __DATA_CONST.__const _WBSParsecDomainSafariSwitchToTab
|| __DATA_CONST.__const _WBSParsecDomainSafariTopHit
|| __DATA_CONST.__const _WBSParsecDomainSafariURL
|| __DATA_CONST.__const _WBSParsecDomainSafariYahooCompletion
|| __DATA_CONST.__const _WBSParsecDomainSafariYahooSearch
|| __DATA_CONST.__const _WBSParsecDomainServerApp
|| __DATA_CONST.__const _WBSParsecDomainServerITunes
|| __DATA_CONST.__const _WBSParsecDomainServerMaps
|| __DATA_CONST.__const _WBSParsecDomainServerMovie
|| __DATA_CONST.__const _WBSParsecDomainServerNews
|| __DATA_CONST.__const _WBSParsecDomainServerSport
|| __DATA_CONST.__const _WBSParsecDomainServerStock
|| __DATA_CONST.__const _WBSParsecDomainServerTopSite
|| __DATA_CONST.__const _WBSParsecDomainServerTwitter
|| __DATA_CONST.__const _WBSParsecDomainServerWeather
|| __DATA_CONST.__const _WBSParsecDomainServerWeb
|| __DATA_CONST.__const _WBSParsecDomainServerWikipedia
|| __DATA_CONST.__const _WBSParsecEngagementActionArea
|| __DATA_CONST.__const _WBSParsecEngagementActionAreaCard
|| __DATA_CONST.__const _WBSParsecEngagementActionAreaResult
|| __DATA_CONST.__const _WBSParsecEngagementActionCardType
|| __DATA_CONST.__const _WBSParsecEngagementActionDestination
|| __DATA_CONST.__const _WBSParsecEngagementActionTarget
|| __DATA_CONST.__const _WBSParsecEngagementActionTargetPlayButton
|| __DATA_CONST.__const _WBSParsecEngagementActionType
|| __DATA_CONST.__const _WBSParsecEngagementActionTypeEnterKey
|| __DATA_CONST.__const _WBSParsecITunesMediaKindAlbum
|| __DATA_CONST.__const _WBSParsecITunesMediaKindArtist
|| __DATA_CONST.__const _WBSParsecITunesMediaKindBook
|| __DATA_CONST.__const _WBSParsecITunesMediaKindCourse
|| __DATA_CONST.__const _WBSParsecITunesMediaKindDesktopApp
|| __DATA_CONST.__const _WBSParsecITunesMediaKindEPubBook
|| __DATA_CONST.__const _WBSParsecITunesMediaKindIOSSoftware
|| __DATA_CONST.__const _WBSParsecITunesMediaKindMovie
|| __DATA_CONST.__const _WBSParsecITunesMediaKindMusicVideo
|| __DATA_CONST.__const _WBSParsecITunesMediaKindPlaylist
|| __DATA_CONST.__const _WBSParsecITunesMediaKindPodcast
|| __DATA_CONST.__const _WBSParsecITunesMediaKindPodcastEpisode
|| __DATA_CONST.__const _WBSParsecITunesMediaKindShortFilm
|| __DATA_CONST.__const _WBSParsecITunesMediaKindSong
|| __DATA_CONST.__const _WBSParsecITunesMediaKindTVEpisode
|| __DATA_CONST.__const _WBSParsecITunesMediaKindTVSeason
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetErrorDomain
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusCached
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusDebug
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusError
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusNoCompletion
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusNoResults
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusOK
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusRemote
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardAddressAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardBusinessMoreInfoAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardBusinessPhotoAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardBusinessReportAProblemAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardBusinessReviewAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardBusinessWriteAReviewAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardDirectionsFromHereAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardDirectionsToHereAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardHomePageAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardPhoneAction
|| __DATA_CONST.__const _WBSParsecSearchResultErrorDomain
|| __DATA_CONST.__const _WBSParsecSportsImageErrorDomain
|| __DATA_CONST.__const _WBSParsecSportsScoreSummaryErrorDomain
|| __DATA_CONST.__const _WBSPasswordListCommonPasswordsIdentifier
|| __DATA_CONST.__const _WBSPasswordListCommonSensitivePasswordsIdentifier
|| __DATA_CONST.__const _WBSPasswordPatternMatchBaseGuessesRequiredCountKey
|| __DATA_CONST.__const _WBSPasswordPatternMatchCaseVariationsKey
|| __DATA_CONST.__const _WBSPasswordPatternMatchFirstSubstitutedCharacter
|| __DATA_CONST.__const _WBSPasswordPatternMatchFirstSubstitutionCharacter
|| __DATA_CONST.__const _WBSPasswordPatternMatchIsSensitive
|| __DATA_CONST.__const _WBSPasswordPatternMatchKeyboardLayoutKey
|| __DATA_CONST.__const _WBSPasswordPatternMatchRepetitionCountKey
|| __DATA_CONST.__const _WBSPasswordPatternMatchSubstitutionVariationsKey
|| __DATA_CONST.__const _WBSPasswordPatternMatchWordListGuessesRequiredKey
|| __DATA_CONST.__const _WBSPasswordPatternMatchWordListIdentifierKey
|| __DATA_CONST.__const _WBSPasswordWordListCollectionEnglishLexiconIdentifier
|| __DATA_CONST.__const _WBSPasswordWordListCommonPasscodesIdentifier
|| __DATA_CONST.__const _WBSPerSiteAutomaticReaderActivationPreferenceDidChangeNotification
|| __DATA_CONST.__const _WBSPerSiteContentBlockersPreferenceDidChangeNotification
|| __DATA_CONST.__const _WBSPerSitePreferencesSQLiteStoreContentsDidChangeNotificationName
|| __DATA_CONST.__const _WBSQuickWebsiteSearchControllerDidFinishLoadingNotification
|| __DATA_CONST.__const _WBSQuickWebsiteSearchProviderKey
|| __DATA_CONST.__const _WBSQuickWebsiteSearchProviderWasAddedNotification
|| __DATA_CONST.__const _WBSReaderFontDownloadDidBeginNotification
|| __DATA_CONST.__const _WBSReaderFontDownloadDidFailNotification
|| __DATA_CONST.__const _WBSReaderFontDownloadDidFinishNotification
|| __DATA_CONST.__const _WBSReaderFontDownloadNotificationUserInfoKey
|| __DATA_CONST.__const _WBSReaderFontDownloadProgressDidChangeNotification
|| __DATA_CONST.__const _WBSReaderPreferenceIdentifier
|| __DATA_CONST.__const _WBSRecentlyUsedAutoFillSetArrayKey
|| __DATA_CONST.__const _WBSRecentlyUsedAutoFillSetDoNotFillArrayKey
|| __DATA_CONST.__const _WBSRecentlyUsedAutoFillSetDoNotFillIdentifier
|| __DATA_CONST.__const _WBSRecentlyUsedAutoFillSetLabelKey
|| __DATA_CONST.__const _WBSRequestDesktopSitePreferenceIdentifier
|| __DATA_CONST.__const _WBSSVGImageRenderingWebViewConfigurationGroupIdentifier
|| __DATA_CONST.__const _WBSTabDialogCancellationReasonCommittedNavigation
|| __DATA_CONST.__const _WBSTabDialogCancellationReasonCommittedNavigationCurrentURLKey
|| __DATA_CONST.__const _WBSTabDialogCancellationReasonProvisionalNavigation
|| __DATA_CONST.__const _WBSTabDialogCancellationReasonTabClosed
|| __DATA_CONST.__const _WBSTabOrderManagerSuppressRelatingNewBlankTabsPreferenceKey
|| __DATA_CONST.__const _WBSTouchIconCacheWillPurgeUnneededImagesNotification
|| __DATA_CONST.__const _WBSTouchIconWebViewConfigurationGroupIdentifier
|| __DATA_CONST.__const _WBSUserHasUsedNonVirtualCardPreferenceKey
|| __DATA_CONST.__const _WBSWebGLPreferenceIdentifier
|| __DATA_CONST.__const _WBSWebProcessPlugInSearchEnginesForRedirectToSafeSearchKey
|| __DATA_CONST.__const _WBSWebsiteShouldStartWithReaderEnabledUserInfoKey
|| __DATA_CONST.__const _WBSZoomPreferenceIdentifier
|| __DATA_CONST.__const __WBSABAddressCityKey
|| __DATA_CONST.__const __WBSABAddressCountryKey
|| __DATA_CONST.__const __WBSABAddressStateKey
|| __DATA_CONST.__const __WBSABAddressStreetKey
|| __DATA_CONST.__const __WBSABAddressZIPKey
|| __DATA_CONST.__const __WBSABInstantMessageServiceKey
|| __DATA_CONST.__const __WBSABInstantMessageUsernameKey
|| __DATA_CONST.__const __WBSABJobTitleProperty
|| __DATA_CONST.__const __WBSABLabelHome
|| __DATA_CONST.__const __WBSABLabelHomePage
|| __DATA_CONST.__const __WBSABLabelOther
|| __DATA_CONST.__const __WBSABLabelWork
|| __DATA_CONST.__const __WBSABPhoneLabelHomeFax
|| __DATA_CONST.__const __WBSABPhoneLabelMain
|| __DATA_CONST.__const __WBSABPhoneLabelMobile
|| __DATA_CONST.__const __WBSABPhoneLabelOtherFax
|| __DATA_CONST.__const __WBSABPhoneLabelPager
|| __DATA_CONST.__const __WBSABPhoneLabelWorkFax
|| __DATA_CONST.__const __WBSABPhoneLabeliPhone
|| __DATA_CONST.__const __WBSABURLsProperty
|| __DATA_CONST.__const __WBSChineseCharacterForCity
|| __DATA_CONST.__const __WBSChineseCharacterForProvince
|| __DATA_CONST.__const __ZN12SafariShared34AddressBookAutoCompleteMappingData13fieldLabelMapE
|| __DATA_CONST.__const __ZN12SafariShared34AddressBookAutoCompleteMappingData20autocompleteTokenMapE
|| __DATA_CONST.__const __ZN12SafariShared34AddressBookAutoCompleteMappingData30emailFieldLabelPatternMatchersE
|| __DATA_CONST.__const __ZN12SafariShared34AddressBookAutoCompleteMappingData36addressBookFieldLabelPatternMatchersE
|| __DATA_CONST.__const __ZN12SafariShared34AddressBookAutoCompleteMappingData8synonymsE
|| __DATA_CONST.__const __ZTVN12SafariShared12JSControllerE
|| __DATA_CONST.__const __ZTVN12SafariShared13FrameMetadataE
|| __DATA_CONST.__const __ZTVN12SafariShared18ReaderJSControllerE
|| __DATA_CONST.__const __ZTVN12SafariShared25ArticleFinderJSControllerE
|| __DATA_CONST.__const __ZTVN12SafariShared28ReaderAvailabilityControllerE
|| __DATA_CONST.__const _coreSpotlightHistoryContentType
|| __DATA_CONST.__const _coreSpotlightPageVisitCountKey
|| __DATA_CONST.__const _dpLanguageCodeForEnglish
|| __DATA_CONST.__const _dpLanguageCodeForFrench
|| __DATA_CONST.__const _dpLanguageCodeForGerman
|| __DATA_CONST.__const _dpLanguageCodeForJapanese
|| __DATA_CONST.__const _dpLanguageCodeForOthers
|| __DATA_CONST.__const _dpLanguageCodeForRussian
|| __DATA_CONST.__const _dpLanguageCodeForSimplifiedChinese
|| __DATA_CONST.__const _dpLanguageCodeForSpanish
|| __DATA_DIRTY.__common _WBSHistoryItemSynchronizationQueue
|| __DATA_DIRTY.__data _getIMOneTimeCodeAcceleratorClass
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSAddressBookMatch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSAppLink
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSAppleAccountInformationProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSAsynchronousRequestHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSAutomaticBugCaptureManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSAutomaticReaderActivationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSBookmarkAndHistoryCompletionMatch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSBookmarkFolderTouchIconProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSBookmarkFolderTouchIconProviderInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSBookmarkFolderTouchIconProviderRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSBrowserTabCompletionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSBrowserTabCompletionMatch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSBrowserTabCompletionProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCacheRetainReleasePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCertificateWarningPageContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSClass
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCleanupHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudBookmarksDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudBookmarksMigrationCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudBookmarksMigrationReadinessDecider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudHistory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudHistoryConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudHistoryFetchResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudHistoryMergeOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudHistoryPushAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudHistoryPushAgentProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudHistoryStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudHistoryVisit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudTab
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudTabCloseRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudTabDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCloudTabStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCoalescedAsynchronousWriter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCompletionListRankingObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCompletionQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSContactAutoFillSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSContactsEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSContactsHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSContentBlockersPreferenceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSContextResultGrouper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCredentialMatch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCredentialMatchCriteria
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCredentialMatchResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCreditCardData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCreditCardDataController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCreditCardFormatter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCrowdsourcedFeedbackDomainNormalizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerBookmarkLeafRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerBookmarkListRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerBookmarkOperationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerBookmarkRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerBookmarksTestSuite
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerCloudKitMigrationTestSuite
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerConnectionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerCreateBookmarkOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerDeleteBookmarkOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerModifyBookmarkOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerMoveBookmarkOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerRandomnessUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerServiceProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerTestRunner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerTestSuiteBookmarkAuxiliary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCyclerTestTargetProxyController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSDeviceEligibilityInformation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSDictionaryInt64
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSDigitalHealthManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSDistributedNotificationObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSEncryptedCloudKeyValueStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFaviconProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFaviconProviderDatabaseController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFaviconProviderIconInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFaviconProviderPersistenceController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFaviconProviderPrivateCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFaviconProviderRecordCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFaviconProviderUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFaviconRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFaviconRequestsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFaviconResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFileLockFactoryPOSIX
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFileLockPOSIX
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFluidProgressAnimation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFluidProgressController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFluidProgressState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSForYouCloudTabsDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSForYouDataSourceWeightManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSForYouLinkRecommendation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSForYouPerSitePreferenceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSForYouRecentParsecResultsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSForYouRecommendationMediator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSForYouRecommendationMediatorDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSForYouTopic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSForYouTopicManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormAutoFillClassificationToCorrectionsTransformer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormAutoFillCorrectionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormAutoFillCorrectionSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormAutoFillCorrectionsHistoryObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormAutoFillCorrectionsSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormAutoFillItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormAutoFillMetadataCorrector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormAutoFillParsecDomainPolicyProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormAutoFillParsecFeedbackProcessor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormControlMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormDataController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormFieldClassificationCorrector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormFieldFingerprinter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormMetadataController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFormToABBinder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFoundInRecommendationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFrequentlyVisitedSiteCandidate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFrequentlyVisitedSitesBannedURLStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSFrequentlyVisitedSitesController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSGeolocationPreferenceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryAccessSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryAccessSessionProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryAgeAndItemCountLimitEnforcementPlan
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryConnectionProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryContextController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryCrypto
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryDatabaseAccessBroker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryDeletionPlan
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryItemToTagPairsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryObjectCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistorySQLiteSchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistorySQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryServiceURLRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistorySession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistorySessionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistorySessionIntervalCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistorySessionWithItems
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryTag
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryTagDatabaseController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryTagsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryTombstone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryTopicTag
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryURLCompletionDataStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryURLCompletionMatchData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryURLCompletionSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryVisit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSHistoryVisitIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSImageFetchingURLSessionTaskManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSImageUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSLeadImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSLeadImageCacheRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSLeadImageCacheResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSLeadImageSaver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSMetadataExtractor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSMultiRoundAutoFillManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSMutableFormControlMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSOnDiskDataCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSOneShotTimer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSOneTimeCode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSOneTimeCodeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSOpenSearchDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSOpenSearchSchemaFetcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSOpenSearchURLTemplate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSOpenSearchURLTemplateParameter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSOperatingSystemVersionRange
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPageZoomPreferenceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecActionButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecAuxiliaryInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecDFeedbackDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecDSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecFormattedText
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecHiddenResultInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecImageRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecLegacySearchResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecPunchout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecResultSetPattern
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecRichText
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSearchCompletionResultSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSearchGenericResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSearchMapsResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSearchMapsResultFeedbackSender
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSearchMoviesResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSearchResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSearchResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSearchResultCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSearchSimpleResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSearchSportsAttributionExtraCompletionItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSearchSportsResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSearchUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSportsImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSportsScoreSummary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSubscriptionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSParsecSubscriptionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordAutoFillUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordEvaluation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordEvaluator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordLexiconWordList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordOrderedSetWordList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordPatternMatch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordPatternMatchSolver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordPatternMatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordPatternPartialSolution
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordSetWordList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordWarningStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordWordList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordWordListCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPasswordWordListEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPerSitePreference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPerSitePreferenceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPerSitePreferenceTimeout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPerSitePreferenceValueInformation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPerSitePreferencesSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSPeriodicActivityScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSProcessProxyOverride
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSProtectionSpaceMatch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSQuerySuggestion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSQuickWebsiteSearchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSQuickWebsiteSearchProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSRadarNewProblemURLBuilder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSReaderConfigurationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSReaderFont
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSReaderFontManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSReaderLocalizedFonts
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSReaderNavigationPolicyDecider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSReaderResources
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSRecentHistoryTopicTagController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSRecentWebSearchEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSRecentWebSearchesController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSRecentlyUsedAutoFillSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSRemoteHistoryItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSRemoteHistorySession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSRemoteHistoryVisit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSVGImageRenderingFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSVGImageRenderingProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSVGImageRenderingRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSVGImageRenderingResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSVGImageRenderingWebProcessPlugInPageController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSafariCyclerConfigurationTool
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSameDocumentNavigationToHistoryVisitCorrelator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSScopeTimeoutHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSearchHelperConnectionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSearchProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSetInt64
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSingleCreditCardData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiriIntelligenceDonor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiriIntelligenceDonorBookmarkData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiriIntelligenceDonorHistoryData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiriIntelligenceHistorySearch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiteIconKeyColorExtractor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiteMetadataFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiteMetadataImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiteMetadataImageCacheSettingsSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiteMetadataManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiteMetadataRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiteMetadataResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSmartHistorySearcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTabCompletionMatch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTabDialog
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTabDialogCancellationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTabDialogCancellationExemption
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTabDialogInformation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTabDialogManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTabOrderInsertionHint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTabOrderManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTemplateIconCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTemplateIconMonogramConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTemplateIconMonogramGenerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTemplateIconRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTemplateIconResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTopHitCompletionMatch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTouchIconCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTouchIconCacheSettingsEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTouchIconCacheSettingsSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTouchIconFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTouchIconFetchOperationResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTouchIconRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTouchIconResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTouchIconWebProcessPlugInPageController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTranslationDataCollectionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTranslationInformation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTranslationURLParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSURLCompletionDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSURLCompletionHistorySnapshot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSURLCompletionMatch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSURLCompletionMatchSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSURLCompletionSessionProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSURLCompletionUserTypedString
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSURLSpoofingMitigator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSURLSuffixChecker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSUserMediaCapturePolicyEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSUserMediaPermissionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSUserTypedFormString
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSWebProcessPlugIn
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSWebProcessPlugInPageController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSWebViewMetadataFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__WBSFaviconRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__WBSFieldLabelPatternMatcherFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__WBSParsecArraySchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__WBSParsecDictionarySchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__WBSParsecSubscriptionInfoKeyValueStringParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__WBSSafariCyclerConfigurationCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__WBSSearchFoundationFeedbackGenerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__WBSSiteMetadataRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__WBSSiteMetadataToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSAddressBookMatch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSAppLink
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSAppleAccountInformationProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSAsynchronousRequestHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSAutomaticBugCaptureManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSAutomaticReaderActivationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSBookmarkAndHistoryCompletionMatch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSBookmarkFolderTouchIconProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSBookmarkFolderTouchIconProviderInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSBookmarkFolderTouchIconProviderRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSBrowserTabCompletionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSBrowserTabCompletionMatch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSBrowserTabCompletionProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCacheRetainReleasePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCertificateWarningPageContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSClass
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCleanupHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudBookmarksDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudBookmarksMigrationCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudBookmarksMigrationReadinessDecider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudHistory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryFetchResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryMergeOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryPushAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryPushAgentProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudHistoryVisit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudTab
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudTabCloseRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudTabDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCloudTabStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCoalescedAsynchronousWriter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCompletionListRankingObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCompletionQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSContactAutoFillSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSContactsEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSContactsHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSContentBlockersPreferenceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSContextResultGrouper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCredentialMatch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCredentialMatchCriteria
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCredentialMatchResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCreditCardData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCreditCardDataController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCreditCardFormatter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCrowdsourcedFeedbackDomainNormalizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerBookmarkLeafRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerBookmarkListRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerBookmarkOperationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerBookmarkRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerBookmarksTestSuite
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerCloudKitMigrationTestSuite
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerConnectionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerCreateBookmarkOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerDeleteBookmarkOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerModifyBookmarkOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerMoveBookmarkOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerRandomnessUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerServiceProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerTestRunner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerTestSuiteBookmarkAuxiliary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCyclerTestTargetProxyController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSDeviceEligibilityInformation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSDictionaryInt64
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSDigitalHealthManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSDistributedNotificationObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSEncryptedCloudKeyValueStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFaviconProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFaviconProviderDatabaseController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFaviconProviderIconInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFaviconProviderPersistenceController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFaviconProviderPrivateCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFaviconProviderRecordCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFaviconProviderUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFaviconRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFaviconRequestsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFaviconResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFileLockFactoryPOSIX
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFileLockPOSIX
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFluidProgressAnimation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFluidProgressController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFluidProgressState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSForYouCloudTabsDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSForYouDataSourceWeightManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSForYouLinkRecommendation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSForYouPerSitePreferenceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSForYouRecentParsecResultsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSForYouRecommendationMediator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSForYouRecommendationMediatorDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSForYouTopic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSForYouTopicManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillClassificationToCorrectionsTransformer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillCorrectionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillCorrectionSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillCorrectionsHistoryObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillCorrectionsSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillMetadataCorrector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillParsecDomainPolicyProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormAutoFillParsecFeedbackProcessor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormControlMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormDataController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormFieldClassificationCorrector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormFieldFingerprinter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormMetadataController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFormToABBinder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFoundInRecommendationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFrequentlyVisitedSiteCandidate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFrequentlyVisitedSitesBannedURLStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSFrequentlyVisitedSitesController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSGeolocationPreferenceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryAccessSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryAccessSessionProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryAgeAndItemCountLimitEnforcementPlan
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryConnectionProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryContextController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryCrypto
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryDatabaseAccessBroker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryDeletionPlan
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryItemToTagPairsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryObjectCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistorySQLiteSchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistorySQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryServiceURLRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistorySession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistorySessionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistorySessionIntervalCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistorySessionWithItems
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryTag
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryTagDatabaseController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryTagsPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryTombstone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryTopicTag
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryURLCompletionDataStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryURLCompletionMatchData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryURLCompletionSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryVisit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSHistoryVisitIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSImageFetchingURLSessionTaskManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSImageUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSLeadImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSLeadImageCacheRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSLeadImageCacheResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSLeadImageSaver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSMetadataExtractor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSMultiRoundAutoFillManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSMutableFormControlMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSOnDiskDataCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSOneShotTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSOneTimeCode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSOneTimeCodeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSOpenSearchDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSOpenSearchSchemaFetcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSOpenSearchURLTemplate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSOpenSearchURLTemplateParameter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSOperatingSystemVersionRange
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPageZoomPreferenceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecActionButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecAuxiliaryInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecDFeedbackDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecDSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecFormattedText
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecHiddenResultInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecImageRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecLegacySearchResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecPunchout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecResultSetPattern
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecRichText
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSearchCompletionResultSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSearchGenericResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSearchMapsResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSearchMapsResultFeedbackSender
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSearchMoviesResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSearchResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSearchResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSearchResultCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSearchSimpleResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSearchSportsAttributionExtraCompletionItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSearchSportsResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSearchUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSportsImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSportsScoreSummary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSubscriptionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSParsecSubscriptionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordAutoFillUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordEvaluation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordEvaluator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordLexiconWordList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordOrderedSetWordList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordPatternMatch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordPatternMatchSolver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordPatternMatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordPatternPartialSolution
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordSetWordList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordWarningStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordWordList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordWordListCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPasswordWordListEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPerSitePreference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPerSitePreferenceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPerSitePreferenceTimeout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPerSitePreferenceValueInformation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPerSitePreferencesSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSPeriodicActivityScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSProcessProxyOverride
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSProtectionSpaceMatch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSQuerySuggestion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSQuickWebsiteSearchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSQuickWebsiteSearchProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSRadarNewProblemURLBuilder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSReaderConfigurationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSReaderFont
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSReaderFontManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSReaderLocalizedFonts
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSReaderNavigationPolicyDecider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSReaderResources
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSRecentHistoryTopicTagController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSRecentWebSearchEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSRecentWebSearchesController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSRecentlyUsedAutoFillSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSRemoteHistoryItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSRemoteHistorySession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSRemoteHistoryVisit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSVGImageRenderingFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSVGImageRenderingProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSVGImageRenderingRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSVGImageRenderingResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSVGImageRenderingWebProcessPlugInPageController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSafariCyclerConfigurationTool
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSameDocumentNavigationToHistoryVisitCorrelator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSScopeTimeoutHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSearchHelperConnectionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSearchProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSetInt64
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSingleCreditCardData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiriIntelligenceDonor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiriIntelligenceDonorBookmarkData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiriIntelligenceDonorHistoryData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiriIntelligenceHistorySearch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiteIconKeyColorExtractor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiteMetadataFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiteMetadataImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiteMetadataImageCacheSettingsSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiteMetadataManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiteMetadataRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiteMetadataResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSmartHistorySearcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTabCompletionMatch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTabDialog
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTabDialogCancellationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTabDialogCancellationExemption
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTabDialogInformation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTabDialogManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTabOrderInsertionHint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTabOrderManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTemplateIconCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTemplateIconMonogramConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTemplateIconMonogramGenerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTemplateIconRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTemplateIconResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTopHitCompletionMatch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTouchIconCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTouchIconCacheSettingsEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTouchIconCacheSettingsSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTouchIconFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTouchIconFetchOperationResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTouchIconRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTouchIconResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTouchIconWebProcessPlugInPageController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTranslationDataCollectionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTranslationInformation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTranslationURLParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSURLCompletionDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSURLCompletionHistorySnapshot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSURLCompletionMatch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSURLCompletionMatchSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSURLCompletionSessionProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSURLCompletionUserTypedString
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSURLSpoofingMitigator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSURLSuffixChecker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSUserMediaCapturePolicyEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSUserMediaPermissionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSUserTypedFormString
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSWebProcessPlugIn
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSWebProcessPlugInPageController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSWebViewMetadataFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__WBSFaviconRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__WBSFieldLabelPatternMatcherFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__WBSParsecArraySchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__WBSParsecDictionarySchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__WBSParsecSubscriptionInfoKeyValueStringParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__WBSSafariCyclerConfigurationCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__WBSSearchFoundationFeedbackGenerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__WBSSiteMetadataRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__WBSSiteMetadataToken
|| __TEXT.__const _WBSCloudHistoryPenalty
|| __TEXT.__const _WBSFaviconRequestMediumIconSize
|| __TEXT.__const _WBSFaviconRequestSmallIconSize
|| __TEXT.__const _WBSForYouRelevancyThresholdInSeconds
|| __TEXT.__const _WBSHistoryCurrentDatabaseSchemaVersion
|| __TEXT.__const _WBSHistoryItemUnvisitedTimeInterval
|| __TEXT.__const _WBSHistoryVisitCountScoreForNormalVisit
|| __TEXT.__const _WBSHistoryVisitScoreDaysPerWeek
|| __TEXT.__const _WBSHistoryVisitScoreMaxDailyCounts
|| __TEXT.__const _WBSHistoryVisitScoreMaxWeeklyCounts
|| __TEXT.__const _WBSHistoryVisitScoreNumberOfDaysForDailyAndWeeklyVisitCountScores
|| __TEXT.__const _WBSHistoryVisitScoreSecondsPerDay
|| __TEXT.__const _WBSHistoryVisitScoreTimeIntervalForDailyAndWeeklyVisitCountScores
|| __TEXT.__const _WBSMaximumNumberOfFrequentlyVisitedSites
|| __TEXT.__const _WBSMaximumURLStringLengthToDisplay
|| __TEXT.__const _WBSModerateTimeSinceLastVisitPenalty
|| __TEXT.__const _WBSNTPTimeoutInterval
|| __TEXT.__const _WBSNullOperatingSystemVersion
|| __TEXT.__const _WBSPerSitePreferencesNoTimeoutInterval
|| __TEXT.__const _WBSShortTimeSinceLastVisitPenalty
|| __TEXT.__text _WBHistoryVisitWeightForAttributesAndOrigin
|| __TEXT.__text _WBSAllowedCreditCardNumberSeparatorCharacters
|| __TEXT.__text _WBSAppWasLaunchedAfterMajorOSUpgrade
|| __TEXT.__text _WBSAutoFillGetSavedDataClasses
|| __TEXT.__text _WBSCompareOperatingSystemVersions
|| __TEXT.__text _WBSCreditCardCardholderFieldLabels
|| __TEXT.__text _WBSCreditCardCompositeExpirationDateFieldLabels
|| __TEXT.__text _WBSCreditCardNumberFieldLabels
|| __TEXT.__text _WBSCreditCardSecurityCodeFieldLabels
|| __TEXT.__text _WBSCreditCardTypeFieldLabels
|| __TEXT.__text _WBSCreditCardTypeFromNumber
|| __TEXT.__text _WBSCreditCardTypeFromNumberAllowingPartialMatch
|| __TEXT.__text _WBSCreditCardTypeLocalizedName
|| __TEXT.__text _WBSCreditCardTypeSynonyms
|| __TEXT.__text _WBSCurrentOperatingSystemFamily
|| __TEXT.__text _WBSDateOfLatestDAVAccessByIneligibleWindowsDeviceFromServerResponse
|| __TEXT.__text _WBSDispatchGroupNotifyWithTimeout
|| __TEXT.__text _WBSEligibilityForDeviceWithEligibleOperatingSystemVersionRanges
|| __TEXT.__text _WBSEuclideanDistanceBetweenPoints
|| __TEXT.__text _WBSExpirationDateWithDayMonthYear
|| __TEXT.__text _WBSFieldLabelPatternMatcherArrayFree
|| __TEXT.__text _WBSFieldLabelPatternMatcherArrayGetCount
|| __TEXT.__text _WBSFieldLabelPatternMatcherArrayGetPatternMatcherAtIndex
|| __TEXT.__text _WBSFieldLabelPatternMatcherFindLongestMatch
|| __TEXT.__text _WBSFieldLabelPatternMatcherSearchReverse
|| __TEXT.__text _WBSFolderGlyphColor
|| __TEXT.__text _WBSGetKeychainData
|| __TEXT.__text _WBSGetKeychainPassword
|| __TEXT.__text _WBSHistoryAddAutocompleteTriggerToArray
|| __TEXT.__text _WBSHistoryConnectionInterface
|| __TEXT.__text _WBSHistoryDecodeAutocompleteTriggers
|| __TEXT.__text _WBSHistoryInMemoryDatabaseURL
|| __TEXT.__text _WBSHistorySHA512
|| __TEXT.__text _WBSHistoryServiceMain
|| __TEXT.__text _WBSHistoryTopicScore
|| __TEXT.__text _WBSHistoryVisitScoreForWeightedVisitCount
|| __TEXT.__text _WBSHistoryVisitWeightedVisitCountFromScore
|| __TEXT.__text _WBSKeychainItemExists
|| __TEXT.__text _WBSMakeOperatingSystemVersion
|| __TEXT.__text _WBSNonCreditCardCardNumberFieldLabels
|| __TEXT.__text _WBSNormalizedCreditCardNumber
|| __TEXT.__text _WBSOperatingSystemVersionsEqual
|| __TEXT.__text _WBSParseOperatingSystemVersion
|| __TEXT.__text _WBSParseOperatingSystemVersionFamily
|| __TEXT.__text _WBSPerformBlockOnMainRunLoopWithCommonModes
|| __TEXT.__text _WBSRectCenteredWithinRect
|| __TEXT.__text _WBSRemoveKeychainData
|| __TEXT.__text _WBSRemoveKeychainDataIfExists
|| __TEXT.__text _WBSRemoveKeychainPasswordIfExists
|| __TEXT.__text _WBSRespondWithRandomDelay
|| __TEXT.__text _WBSRoundFloatToPixelsInContext
|| __TEXT.__text _WBSSQLiteComputeLatestVisitFinal
|| __TEXT.__text _WBSSQLiteComputeLatestVisitStep
|| __TEXT.__text _WBSSQLiteDailyVisitCountsFinal
|| __TEXT.__text _WBSSQLiteDailyVisitCountsStep
|| __TEXT.__text _WBSSQLiteExtractDomainExpansion
|| __TEXT.__text _WBSSQLiteLatestVisitFor
|| __TEXT.__text _WBSSQLiteSHA512
|| __TEXT.__text _WBSSQLiteVisitScore
|| __TEXT.__text _WBSSQLiteWeeklyVisitCountsFinal
|| __TEXT.__text _WBSSQLiteWeeklyVisitCountsStep
|| __TEXT.__text _WBSSafariSandboxBrokerInterface
|| __TEXT.__text _WBSSafariSandboxBrokerInterfaceWithProtocol
|| __TEXT.__text _WBSSetIsStringForUserTypedDomainExpansionInHistoryFunction
|| __TEXT.__text _WBSSetKeychainData
|| __TEXT.__text _WBSSetKeychainPassword
|| __TEXT.__text _WBSSetParsecGlobalFeedbackDispatcherEnabledBlock
|| __TEXT.__text _WBSSharedParsecBag
|| __TEXT.__text _WBSSharedParsecGlobalFeedbackDispatcher
|| __TEXT.__text _WBSShouldApplyBackingForDarkBackdropToImage
|| __TEXT.__text _WBSTopSitesCachedScoreIsStale
|| __TEXT.__text _WBSTopSitesMinimumVisitCountThreshold
|| __TEXT.__text _WBSTopSitesScore
|| __TEXT.__text _WBSTopSitesScoreForCaching
|| __TEXT.__text _WBSTopSitesScoreWithCachedValues
|| __TEXT.__text _WBSUnifiedFieldInputTypeForString
|| __TEXT.__text __SSURLCompletionMatchLocationForWBSURLCompletionMatchLocation
|| __TEXT.__text __Z25WBSHistoryAddVisitToScoreiddRN3WTF6VectorIiLm0ENS_15CrashOnOverflowELm16EEES3_
|| __TEXT.__text __Z27WBSSetOfIdentifiersFromTagsP5NSSetIP13WBSHistoryTagE
|| __TEXT.__text __Z28WBSCloudHistoryPushAgentMainv
|| __TEXT.__text __Z28WBSHistoryUpdateScoreOfVisitddiiRN3WTF6VectorIiLm0ENS_15CrashOnOverflowELm16EEES3_Pb
|| __TEXT.__text __Z37WBSHistoryCollapseDailyVisitsToWeeklyRN3WTF6VectorIiLm0ENS_15CrashOnOverflowELm16EEES3_
|| __TEXT.__text __Z41WBSHistoryPadDailyCountsForNewVisitAtTimeddRN3WTF6VectorIiLm0ENS_15CrashOnOverflowELm16EEES3_
|| __TEXT.__text __Z50WBSHistoryTimesOfVisitsToSynthesizeFromDailyCountsdRKN3WTF6VectorIiLm0ENS_15CrashOnOverflowELm16EEES4_
|| __TEXT.__text __Z64WBSHistoryTimesForSynthesizedVisitsPreceedingDailyAndWeeklyRangedm
|| __TEXT.__text __ZN12SafariShared11JSUtilities10toNSStringEPK15OpaqueJSContextPK13OpaqueJSValue19WBSNullStringPolicy
|| __TEXT.__text __ZN12SafariShared11JSUtilities11arrayLengthEPK15OpaqueJSContextP13OpaqueJSValuePPKS4_
|| __TEXT.__text __ZN12SafariShared11JSUtilities20functionObjectByNameEPK15OpaqueJSContextP13OpaqueJSValuePKc
|| __TEXT.__text __ZN12SafariShared11JSUtilities20globalJSObjectByNameEPK15OpaqueJSContextPKc
|| __TEXT.__text __ZN12SafariShared11JSUtilities20logExceptionInternalEPK15OpaqueJSContextPK13OpaqueJSValue
|| __TEXT.__text __ZN12SafariShared11JSUtilities25callJSMethodWithArgumentsEPK15OpaqueJSContextP13OpaqueJSValuePKcPKPKS4_mNS0_21ReportExceptionsOrNotE
|| __TEXT.__text __ZN12SafariShared11JSUtilities29registerJSObjectInGlobalSpaceEPK15OpaqueJSContextP13OpaqueJSClassPKcPv
|| __TEXT.__text __ZN12SafariShared11JSUtilities8jsStringEP8NSString
|| __TEXT.__text __ZN12SafariShared11JSUtilities8jsStringEPKc
|| __TEXT.__text __ZN12SafariShared11JSUtilities8nsStringEP14OpaqueJSString
|| __TEXT.__text __ZN12SafariShared11JSUtilities9toJSValueEPK15OpaqueJSContextP8NSString20WBSNullOrEmptyString
|| __TEXT.__text __ZN12SafariShared12JSController10setContextEP15OpaqueJSContext
|| __TEXT.__text __ZN12SafariShared12JSController12jsControllerEP13OpaqueJSValue
|| __TEXT.__text __ZN12SafariShared12JSController12staticValuesERN3WTF6VectorI13JSStaticValueLm0ENS1_15CrashOnOverflowELm16EEE
|| __TEXT.__text __ZN12SafariShared12JSController13createJSClassEv
|| __TEXT.__text __ZN12SafariShared12JSController13protectObjectEP13OpaqueJSValue
|| __TEXT.__text __ZN12SafariShared12JSController14controllerNameEv
|| __TEXT.__text __ZN12SafariShared12JSController15staticFunctionsERN3WTF6VectorI16JSStaticFunctionLm0ENS1_15CrashOnOverflowELm16EEE
|| __TEXT.__text __ZN12SafariShared12JSController16unprotectObjectsEv
|| __TEXT.__text __ZN12SafariShared12JSController17scriptObjectReadyEPK15OpaqueJSContext
|| __TEXT.__text __ZN12SafariShared12JSController29addScriptObjectToGlobalObjectEPK15OpaqueJSContext
|| __TEXT.__text __ZN12SafariShared12JSControllerC2Ev
|| __TEXT.__text __ZN12SafariShared12JSControllerD0Ev
|| __TEXT.__text __ZN12SafariShared12JSControllerD1Ev
|| __TEXT.__text __ZN12SafariShared12JSControllerD2Ev
|| __TEXT.__text __ZN12SafariShared13FrameMetadata12staticValuesERN3WTF6VectorI13JSStaticValueLm0ENS1_15CrashOnOverflowELm16EEE
|| __TEXT.__text __ZN12SafariShared13FrameMetadata13staticJSClassEv
|| __TEXT.__text __ZN12SafariShared13FrameMetadata15staticFunctionsERN3WTF6VectorI16JSStaticFunctionLm0ENS1_15CrashOnOverflowELm16EEE
|| __TEXT.__text __ZN12SafariShared13FrameMetadataC1EPU31objcproto20WBSFormAutoFillFrame11objc_objectP25WBSFormMetadataController
|| __TEXT.__text __ZN12SafariShared13FrameMetadataC2EPU31objcproto20WBSFormAutoFillFrame11objc_objectP25WBSFormMetadataController
|| __TEXT.__text __ZN12SafariShared18ReaderJSController13staticJSClassEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController14loadNewArticleEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController15staticFunctionsERN3WTF6VectorI16JSStaticFunctionLm0ENS1_15CrashOnOverflowELm16EEE
|| __TEXT.__text __ZN12SafariShared18ReaderJSController16scriptObjectNameEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController16setConfigurationEP12NSDictionary
|| __TEXT.__text __ZN12SafariShared18ReaderJSController17setReaderIsActiveEb
|| __TEXT.__text __ZN12SafariShared18ReaderJSController19stopLoadingNextPageEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController21activateWithAnimationEb
|| __TEXT.__text __ZN12SafariShared18ReaderJSController21nextPageArticleFinderEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController25readerWillEnterBackgroundEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController26clearNextPageArticleFinderEv
|| __TEXT.__text __ZN12SafariShared18ReaderJSController30evaluateLocalizedStringsScriptEPK15OpaqueJSContext
|| __TEXT.__text __ZN12SafariShared18ReaderJSController33evaluateSharedUINormalWorldScriptEPK15OpaqueJSContext
|| __TEXT.__text __ZN12SafariShared18ReaderJSController36getArticleScrollPositionAsDictionaryEv
|| __TEXT.__text __ZN12SafariShared22weightForMatchLocationE29WBSURLCompletionMatchLocation
|| __TEXT.__text __ZN12SafariShared23computeURLMatchLocationEP8NSStringP31WBSURLCompletionUserTypedString
|| __TEXT.__text __ZN12SafariShared24FieldLabelPatternMatcher15isWordCharacterEt
|| __TEXT.__text __ZN12SafariShared24FieldLabelPatternMatcherC1ERKNS0_3DFAEPKtl
|| __TEXT.__text __ZN12SafariShared24FieldLabelPatternMatcherC2ERKNS0_3DFAEPKtl
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController12staticValuesERN3WTF6VectorI13JSStaticValueLm0ENS1_15CrashOnOverflowELm16EEE
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController13staticJSClassEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController14articleContentEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController15staticFunctionsERN3WTF6VectorI16JSStaticFunctionLm0ENS1_15CrashOnOverflowELm16EEE
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController16scriptObjectNameEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController17readerIsAvailableEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController20reloadArticleContentEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController27prepareToTransitionToReaderEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController33collectReadingListItemInformationEv
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController34readerTextIncludingArticleMetadataEb
|| __TEXT.__text __ZN12SafariShared25ArticleFinderJSController41detectAvailabilityForUIProcessDrivenCheckEv
|| __TEXT.__text __ZN12SafariShared25LatestVisitInformationMap11removeItemsERKNSt3__113unordered_setIxNS1_4hashIxEENS1_8equal_toIxEENS1_9allocatorIxEEEE
|| __TEXT.__text __ZN12SafariShared25LatestVisitInformationMap5clearEv
|| __TEXT.__text __ZN12SafariShared25LatestVisitInformationMap6updateExxdi
|| __TEXT.__text __ZN12SafariShared25SuddenTerminationDisabler23enableSuddenTerminationEv
|| __TEXT.__text __ZN12SafariShared25SuddenTerminationDisabler24disableSuddenTerminationEv
|| __TEXT.__text __ZN12SafariShared25TranslatedFileURLProtocol16registerProtocolEPKNS0_12ProtocolInfoE
|| __TEXT.__text __ZN12SafariShared25computeTitleMatchLocationEP8NSStringP31WBSURLCompletionUserTypedString
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController13didFinishLoadEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController17clearAvailabilityEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController19detectionTimerFiredEP16__CFRunLoopTimerPv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController20prepareArticleFinderEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController21detectAvailabilityNowEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController21determineAvailabilityEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController21didFinishDocumentLoadEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController21doneWithArticleFinderEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController21originalArticleFinderEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController22scheduleDetectionTimerEd
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController23articleReloadTimerFiredEP16__CFRunLoopTimerPv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController24invalidateDetectionTimerEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController25checkAvailabilityIfNeededEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController26scheduleArticleReloadTimerEd
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController27cancelAvailabilityDetectionEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController27prepareToTransitionToReaderEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController28clearArticleFinderIfPossibleEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController28detectAvailabilityAfterDelayEdNS_34LoadEventTriggeringReaderDetectionE
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController28invalidateArticleReloadTimerEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController29extractPageMetadataAndTextNowEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController30setCanRunAvailabilityDetectionEb
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController35cancelPageMetadataAndTextExtractionEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController36extractPageMetadataAndTextTimerFiredEP16__CFRunLoopTimerPv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController37sameDocumentNavigationDetectionDelaysEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController38extractPageMetadataAndTextSoonIfNeededENS_25IsDeterminingAvailabilityE
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController39scheduleSameDocumentNavigationDetectionEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController41detectAvailabilityForUIProcessDrivenCheckEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityController45detectAvailabilityAfterSameDocumentNavigationEv
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityControllerC2Ev
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityControllerD0Ev
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityControllerD1Ev
|| __TEXT.__text __ZN12SafariShared28ReaderAvailabilityControllerD2Ev
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch13computeWeightEd
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch19hasMatchWithOptionsEP8NSStringS2_P31WBSURLCompletionUserTypedStringm
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch20computeMatchLocationEP8NSStringS2_P31WBSURLCompletionUserTypedStringR29WBSURLCompletionMatchLocation
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch20computeMatchLocationEPU36objcproto25WBSURLCompletionMatchData11objc_objectP31WBSURLCompletionUserTypedStringRmR29WBSURLCompletionMatchLocation
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch23computeURLMatchLocationEPU36objcproto25WBSURLCompletionMatchData11objc_objectP31WBSURLCompletionUserTypedStringRm
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch25computeTitleMatchLocationEPU36objcproto25WBSURLCompletionMatchData11objc_objectP31WBSURLCompletionUserTypedStringRm
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatch37computeMatchLocationOfTitleUsingBlockEP31WBSURLCompletionUserTypedStringU13block_pointerF29WBSURLCompletionMatchLocationS2_E
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatchC1EPU36objcproto25WBSURLCompletionMatchData11objc_objectmd29WBSURLCompletionMatchLocationS3_m
|| __TEXT.__text __ZN12SafariShared33BookmarkAndHistoryCompletionMatchC2EPU36objcproto25WBSURLCompletionMatchData11objc_objectmd29WBSURLCompletionMatchLocationS3_m
|| __TEXT.__text __ZN12SafariShared35initializeURLCompletionOnMainThreadEv
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata15metadataForFormEP13OpaqueJSValue26WBSFormMetadataRequestType
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata17jsMetadataForFormEP13OpaqueJSValue26WBSFormMetadataRequestType
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata19getFormsAndMetadataE26WBSFormMetadataRequestTypeRP13OpaqueJSValueRPKS2_
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata19getFormsAndMetadataE26WBSFormMetadataRequestTypeRP13OpaqueJSValueRU15__autoreleasingP7NSArray
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata19metadataForAllFormsE26WBSFormMetadataRequestType
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata21lockedMetadataForFormEP13OpaqueJSValue
|| __TEXT.__text __ZNK12SafariShared13FrameMetadata22currentMetadataForFormEP13OpaqueJSValue26WBSFormMetadataRequestType
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController11loadArticleEv
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController13reloadArticleEv
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController18canLoadFromNetworkEv
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController21cachedTopScrollOffsetEv
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController27preparePrintingMailingFrameEv
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController29maxDistanceForLoadingNextPageEv
|| __TEXT.__text __ZNK12SafariShared18ReaderJSController29printingMailingFrameElementIdEv
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher10isEndStateERKNS0_3DFA5StateEPKt
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher12longestMatchEv
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher13checkForMatchEPKtS2_
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher13searchReverseEv
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher14isWordBoundaryEPKt
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher23findNextStateAndAdvanceERKNS0_3DFA5StateERPKt
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher6searchEPKtS2_
|| __TEXT.__text __ZNK12SafariShared24FieldLabelPatternMatcher7toRangeERKNS0_5MatchE
|| __TEXT.__text __ZNK12SafariShared25ArticleFinderJSController13mainImageNodeEv
|| __TEXT.__text __ZNK12SafariShared25LatestVisitInformationMap11lastVisitIDEx
|| __TEXT.__text __ZNK12SafariShared25LatestVisitInformationMap13lastVisitTimeEx
|| __TEXT.__text __ZNK12SafariShared25LatestVisitInformationMap4findExPx
|| __TEXT.__text __ZNK12SafariShared25LatestVisitInformationMap4sizeEv
|| __TEXT.__text __ZNK12SafariShared28ReaderAvailabilityController29canExtractPageMetadataAndTextEv
|| __TEXT.__text __ZNK12SafariShared28ReaderAvailabilityController33originalArticleFinderJSControllerEv
|| __TEXT.__text __ZNK12SafariShared28ReaderAvailabilityController38isPageLoadedEnoughForAvailabilityCheckEv
|| __TEXT.__text __ZNK12SafariShared28ReaderAvailabilityController38pageMetadataAndTextExtractionIsPendingEv
|| __TEXT.__text __ZNK12SafariShared28ReaderAvailabilityController50isPageLoadedEnoughForPageMetadataAndTextExtractionEv
|| __TEXT.__text __ZNK12SafariShared33BookmarkAndHistoryCompletionMatch17originalURLStringEv
|| __TEXT.__text __ZNK12SafariShared33BookmarkAndHistoryCompletionMatch20userVisibleURLStringEv
|| __TEXT.__text __ZNK12SafariShared33BookmarkAndHistoryCompletionMatch24placeholderForEmptyTitleEv
|| __TEXT.__text __ZNK12SafariShared33BookmarkAndHistoryCompletionMatch4dataEv
|| __TEXT.__text __ZNK12SafariShared33BookmarkAndHistoryCompletionMatch5titleEv
|| __TEXT.__text __ZNK12SafariShared33BookmarkAndHistoryCompletionMatch7compareEPS0_
|| __TEXT.__text _allocIMOneTimeCodeAcceleratorInstance
|| __TEXT.__text _allocPKGlyphViewInstance
|| __TEXT.__text _allocPKVirtualCardInstance
|| __TEXT.__text _allocPKVirtualCardManagerInstance
|| __TEXT.__text _canLoadIMCore
|| __TEXT.__text _canLoadPassKitCore
|| __TEXT.__text _canLoadPassKitUIFoundation
|| __TEXT.__text _getIMOneTimeCodeDisplayKey
|| __TEXT.__text _getIMOneTimeCodeGuidKey
|| __TEXT.__text _getIMOneTimeCodeHandleKey
|| __TEXT.__text _getIMOneTimeCodeKey
|| __TEXT.__text _getIMOneTimeCodeTimeStampKey
|| __TEXT.__text _titleForNewTabPosition
__ Accelerate: _vImageBuffer_Init
__ Accelerate: _vImageBuffer_InitWithCGImage
__ Accelerate: _vImageCGImageFormat_IsEqual
__ Accelerate: _vImageConvert_AnyToAny
__ Accelerate: _vImageConverter_CreateWithCGImageFormat
__ Accelerate: _vImageConverter_MustOperateOutOfPlace
__ Accelerate: _vImageConverter_Release
__ Accelerate: _vImageHistogramCalculation_ARGB8888
__ Accounts: _ACAccountStoreDidChangeNotification
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ CFNetwork: _CFURLProtocolGetClient
__ CFNetwork: _CFURLProtocolGetRequest
__ CFNetwork: _CFURLProtocolRegisterImplementation
__ CFNetwork: _CFURLRequestGetURL
__ CFNetwork: _CFURLResponseCreate
__ CFNetwork: _NSURLProtectionSpaceHTTP
__ CFNetwork: _NSURLProtectionSpaceHTTPS
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSURLConnection
__ CFNetwork: _OBJC_CLASS_$_NSURLCredentialStorage
__ CFNetwork: _OBJC_CLASS_$_NSURLProtectionSpace
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: __CFHostIsDomainTopLevel
__ CFNetwork: __CFNetworkCopyHSTSPolicies
__ CFNetwork: __CFNetworkResetHSTS
__ CFNetwork: __CFNetworkSetOverrideSystemProxySettings
__ CFNetwork: __kCFStreamErrorCodeKey
__ CFNetwork: _kCFErrorDomainCFNetwork
__ CFNetwork: _kCFStreamPropertyHTTPProxyHost
__ CFNetwork: _kCFStreamPropertyHTTPProxyPort
__ CFNetwork: _kCFStreamPropertyHTTPSProxyHost
__ CFNetwork: _kCFStreamPropertyHTTPSProxyPort
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKErrorRetryAfterKey
__ CloudKit: _CKIdentityUpdateNotification
__ CloudKit: _CKOwnerDefaultName
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifySubscriptionsOperation
__ CloudKit: _OBJC_CLASS_$_CKNotificationInfo
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CloudKit: _OBJC_CLASS_$_CKServerChangeToken
__ CloudKit: _OBJC_CLASS_$_CKSubscription
__ Contacts: _CNContactBirthdayKey
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactGivenNameKey
__ Contacts: _CNContactImageDataKey
__ Contacts: _CNContactInstantMessageAddressesKey
__ Contacts: _CNContactJobTitleKey
__ Contacts: _CNContactMiddleNameKey
__ Contacts: _CNContactOrganizationNameKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNContactPostalAddressesKey
__ Contacts: _CNContactThumbnailImageDataKey
__ Contacts: _CNContactUrlAddressesKey
__ Contacts: _CNInstantMessageAddressServiceKey
__ Contacts: _CNInstantMessageAddressUsernameKey
__ Contacts: _CNLabelHome
__ Contacts: _CNLabelOther
__ Contacts: _CNLabelPhoneNumberHomeFax
__ Contacts: _CNLabelPhoneNumberMain
__ Contacts: _CNLabelPhoneNumberMobile
__ Contacts: _CNLabelPhoneNumberOtherFax
__ Contacts: _CNLabelPhoneNumberPager
__ Contacts: _CNLabelPhoneNumberWorkFax
__ Contacts: _CNLabelPhoneNumberiPhone
__ Contacts: _CNLabelURLAddressHomePage
__ Contacts: _CNLabelWork
__ Contacts: _CNPostalAddressCityKey
__ Contacts: _CNPostalAddressCountryKey
__ Contacts: _CNPostalAddressISOCountryCodeKey
__ Contacts: _CNPostalAddressPostalCodeKey
__ Contacts: _CNPostalAddressStateKey
__ Contacts: _CNPostalAddressStreetKey
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNLabeledValue
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ Contacts: _OBJC_CLASS_$_CNPostalAddressFormatter
__ ContextKit: _OBJC_CLASS_$_CKContextResponse
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBinaryHeapAddValue
__ CoreFoundation: _CFBinaryHeapCreate
__ CoreFoundation: _CFBinaryHeapGetMinimum
__ CoreFoundation: _CFBinaryHeapRemoveMinimumValue
__ CoreFoundation: _CFCharacterSetCreateMutable
__ CoreFoundation: _CFCharacterSetGetPredefined
__ CoreFoundation: _CFCharacterSetIsCharacterMember
__ CoreFoundation: _CFCharacterSetUnion
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFErrorCreate
__ CoreFoundation: _CFHash
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddTimer
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopTimerCreate
__ CoreFoundation: _CFRunLoopTimerInvalidate
__ CoreFoundation: _CFRunLoopTimerIsValid
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFStringCompareWithOptions
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFStringFindWithOptions
__ CoreFoundation: _CFStringFold
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetFastestEncoding
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringNormalize
__ CoreFoundation: _CFStringTokenizerCopyBestStringLanguage
__ CoreFoundation: _CFURLCopyPath
__ CoreFoundation: _CFURLCreateAbsoluteURLWithBytes
__ CoreFoundation: _CFURLCreateStringByAddingPercentEscapes
__ CoreFoundation: _CFURLGetByteRangeForComponent
__ CoreFoundation: _CFURLGetBytes
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSSystemTimeZoneDidChangeNotification
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawImageFromRect
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextGetUserSpaceToDeviceSpaceTransform
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGDataProviderCopyData
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGImageGetDecode
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetRenderingIntent
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageHasAlpha
__ CoreGraphics: _CGPathCreateWithRect
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceGenericRGB
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreParsec: _OBJC_CLASS_$_PAREngagedCompletionCache
__ CoreParsec: _OBJC_CLASS_$_PARRequest
__ CoreParsec: _OBJC_CLASS_$_PARSession
__ CoreParsec: _OBJC_CLASS_$_PARSessionConfiguration
__ CorePhoneNumbers: _PNCreateFormattedStringWithCountry
__ CorePhoneNumbers: _PNIsValidPhoneNumberForCountry
__ CoreRecognition: _CROutputTypeCreditCardCardholderName
__ CoreRecognition: _CROutputTypeCreditCardExpirationDate
__ CoreRecognition: _CROutputTypeCreditCardNumber
__ CoreServices: _OBJC_CLASS_$_LSAppLink
__ CoreServices: _OBJC_CLASS_$__LSOpenConfiguration
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTagClassMIMEType
__ CoreServices: _kUTTypeICO
__ CoreSpotlight: _OBJC_CLASS_$_CSCustomAttributeKey
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchQuery
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableIndex
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableItem
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableItemAttributeSet
__ CoreSuggestions: _OBJC_CLASS_$_SGSuggestionsService
__ CoreSuggestions: _kSGURLChangeNotification
__ CoreText: _CTFontDescriptorCopyLocalizedAttribute
__ CoreText: _CTFontDescriptorCreateMatchingFontDescriptor
__ CoreText: _CTFontDescriptorCreateMatchingFontDescriptors
__ CoreText: _CTFontDescriptorCreateWithAttributes
__ CoreText: _CTFontDescriptorMatchFontDescriptorsWithProgressHandler
__ CoreText: _CTLineCreateTruncatedLineWithTokenHandler
__ CoreText: _CTLineCreateWithAttributedString
__ CoreText: _CTLineGetGlyphRuns
__ CoreText: _kCTFontDescriptorMatchingPercentage
__ CoreText: _kCTFontDownloadableAttribute
__ CoreText: _kCTFontDownloadedAttribute
__ CoreText: _kCTFontEnabledAttribute
__ CoreText: _kCTFontFamilyNameAttribute
__ CoreText: _kCTFontRegistrationScopeAttribute
__ CoreText: _kCTFontWeightLight
__ CoreText: _kCTFontWeightMedium
__ DeviceManagement: _OBJC_CLASS_$_DMFWebsitePolicyMonitor
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileModificationDate
__ Foundation: _NSInconsistentArchiveException
__ Foundation: _NSIntersectionRange
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLinguisticTagSchemeLanguage
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUserActivityTypeBrowsingWeb
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFormatter
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLinguisticTagger
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUbiquitousKeyValueStore
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSValueTransformer
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSFormatter
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSValueTransformer
__ FrontBoardServices: _FBSOpenApplicationOptionKeyBrowserAppLinkState4LS
__ GeoServices: _OBJC_CLASS_$_GEOUsageManager
__ GeoServices: _OBJC_CLASS_$_GEOUserSession
__ IMCore: _IMSPIQueryMessageWithGUIDAndLoadAttachments
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ JavaScriptCore: _JSClassCreate
__ JavaScriptCore: _JSContextGetGlobalContext
__ JavaScriptCore: _JSContextGetGlobalObject
__ JavaScriptCore: _JSContextGetGroup
__ JavaScriptCore: _JSEvaluateScript
__ JavaScriptCore: _JSGlobalContextRelease
__ JavaScriptCore: _JSGlobalContextRetain
__ JavaScriptCore: _JSObjectCallAsFunction
__ JavaScriptCore: _JSObjectDeleteProperty
__ JavaScriptCore: _JSObjectGetPrivate
__ JavaScriptCore: _JSObjectGetProperty
__ JavaScriptCore: _JSObjectGetPropertyAtIndex
__ JavaScriptCore: _JSObjectHasProperty
__ JavaScriptCore: _JSObjectIsFunction
__ JavaScriptCore: _JSObjectMake
__ JavaScriptCore: _JSObjectMakeArray
__ JavaScriptCore: _JSObjectSetPrivate
__ JavaScriptCore: _JSObjectSetProperty
__ JavaScriptCore: _JSScriptCreateReferencingImmortalASCIIText
__ JavaScriptCore: _JSScriptEvaluate
__ JavaScriptCore: _JSStringCopyCFString
__ JavaScriptCore: _JSStringCreateWithCFString
__ JavaScriptCore: _JSStringCreateWithCharacters
__ JavaScriptCore: _JSStringCreateWithUTF8CString
__ JavaScriptCore: _JSStringGetCharactersPtr
__ JavaScriptCore: _JSStringGetLength
__ JavaScriptCore: _JSStringRelease
__ JavaScriptCore: _JSValueIsArray
__ JavaScriptCore: _JSValueIsBoolean
__ JavaScriptCore: _JSValueIsNull
__ JavaScriptCore: _JSValueIsObject
__ JavaScriptCore: _JSValueIsString
__ JavaScriptCore: _JSValueIsUndefined
__ JavaScriptCore: _JSValueMakeBoolean
__ JavaScriptCore: _JSValueMakeNull
__ JavaScriptCore: _JSValueMakeNumber
__ JavaScriptCore: _JSValueMakeString
__ JavaScriptCore: _JSValueMakeUndefined
__ JavaScriptCore: _JSValueProtect
__ JavaScriptCore: _JSValueToBoolean
__ JavaScriptCore: _JSValueToNumber
__ JavaScriptCore: _JSValueToObject
__ JavaScriptCore: _JSValueToStringCopy
__ JavaScriptCore: _JSValueUnprotect
__ JavaScriptCore: _OBJC_CLASS_$_JSContext
__ JavaScriptCore: _OBJC_CLASS_$_JSValue
__ JavaScriptCore: _WTFLogAlways
__ JavaScriptCore: __ZN3WTF10fastMallocEm
__ JavaScriptCore: __ZN3WTF11fastReallocEPvm
__ JavaScriptCore: __ZN3WTF16fastZeroedMallocEm
__ JavaScriptCore: __ZN3WTF18asciiCaseFoldTableE
__ JavaScriptCore: __ZN3WTF8fastFreeEPv
__ Lexicon: _LXEntryCopyString
__ Lexicon: _LXEntryGetMetaFlags
__ Lexicon: _LXEntryGetProbability
__ Lexicon: _LXLexiconCreate
__ Lexicon: _LXLexiconEnumerateEntriesForString
__ Lexicon: _kLXLexiconLocaleKey
__ LinkPresentation: _OBJC_CLASS_$_LPMetadataProvider
__ ManagedConfiguration: _MCFeatureUntrustedTLSPromptAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MapKit: _OBJC_CLASS_$_MKMapItem
__ ParsecSubscriptionServiceSupport: _OBJC_CLASS_$_PSSSSubscriptionManagerInternal
__ PersonalizationPortrait: _OBJC_CLASS_$_PPNamedEntityQuery
__ PersonalizationPortrait: _OBJC_CLASS_$_PPNamedEntityStore
__ ProtectedCloudStorage: _PCSFPAddPublicIdentity
__ ProtectedCloudStorage: _PCSFPCopyDecryptedData
__ ProtectedCloudStorage: _PCSFPCopyEncryptedData
__ ProtectedCloudStorage: _PCSFPCopyExported
__ ProtectedCloudStorage: _PCSFPShouldRoll
__ ProtectedCloudStorage: _PCSIdentitySetCopyCurrentPublicIdentityWithError
__ ProtectedCloudStorage: _PCSIdentitySetCreate
__ ProtectedCloudStorage: _PCSIdentitySetIsICDP
__ ProtectedCloudStorage: _PCSObjectCreateFromExportedWithIdentities
__ ProtectedCloudStorage: _PCSShareProtectionCreate
__ ProtectedCloudStorage: _kPCSServiceLiverpool
__ ProtectedCloudStorage: _kPCSSetupDSID
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ SafariCore: _OBJC_CLASS_$_WBSAddressBookValueSpecifier
__ SafariCore: _OBJC_CLASS_$_WBSAnalyticsLogger
__ SafariCore: _OBJC_CLASS_$_WBSAutoFillQuirksManager
__ SafariCore: _OBJC_CLASS_$_WBSCloudKitContainerManateeObserver
__ SafariCore: _OBJC_CLASS_$_WBSCloudKitThrottler
__ SafariCore: _OBJC_CLASS_$_WBSDontSaveMarker
__ SafariCore: _OBJC_CLASS_$_WBSKeychainCredentialNotificationMonitor
__ SafariCore: _OBJC_CLASS_$_WBSMemoryFootprint
__ SafariCore: _OBJC_CLASS_$_WBSPair
__ SafariCore: _OBJC_CLASS_$_WBSPasswordGenerationManager
__ SafariCore: _OBJC_CLASS_$_WBSPasswordRuleParser
__ SafariCore: _OBJC_CLASS_$_WBSSQLiteDatabase
__ SafariCore: _OBJC_CLASS_$_WBSSQLiteStatement
__ SafariCore: _OBJC_CLASS_$_WBSSQLiteStatementCache
__ SafariCore: _OBJC_CLASS_$_WBSSQLiteStore
__ SafariCore: _OBJC_CLASS_$_WBSSafariBookmarksSyncAgentProxy
__ SafariCore: _OBJC_CLASS_$_WBSSavedPasswordStore
__ SafariCore: _OBJC_CLASS_$_WBSScopeExitHandler
__ SafariCore: _OBJC_CLASS_$_WBSURLCredentialCache
__ SafariCore: _OBJC_METACLASS_$_WBSSQLiteStore
__ SafariCore: _WBSABAddressProperty
__ SafariCore: _WBSABBirthdayProperty
__ SafariCore: _WBSABEmailProperty
__ SafariCore: _WBSABInstantMessageProperty
__ SafariCore: _WBSABOrganizationProperty
__ SafariCore: _WBSABPhoneProperty
__ SafariCore: _WBSABPropertyFirstName
__ SafariCore: _WBSABPropertyLastName
__ SafariCore: _WBSABPropertyMiddleName
__ SafariCore: _WBSABProxyPropertyFullName
__ SafariCore: _WBSIsEqual
__ SafariCore: _WBSKeychainCredentialNotificationMonitorDoNotCoalesceInterval
__ SafariCore: _WBSLogWithDifferentialPrivacy
__ SafariCore: _WBSRemoteAutoFillQuirksLastUpdateTimePreferenceKey
__ SafariCore: _WBSSafariBookmarksSyncAgentProxyConnectionWasInvalidatedNotification
__ SafariCore: _WBSSuppressCloudKitBookmarkMigrationForCyclerTestPreferenceKey
__ SafariCore: __WBSLocalizedString
__ ScreenTimeCore: _OBJC_CLASS_$_STWebUsageController
__ SearchFoundation: _OBJC_CLASS_$_SFCardSectionEngagementFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFCardViewAppearFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFCardViewDisappearFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFClearInputFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFCompactRowCardSection
__ SearchFoundation: _OBJC_CLASS_$_SFCustomFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFDetailedRowCardSection
__ SearchFoundation: _OBJC_CLASS_$_SFDidGoToSearchFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFDidGoToSiteFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFEndLocalSearchFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFEndNetworkSearchFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFEndSearchFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFErrorFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFImage
__ SearchFoundation: _OBJC_CLASS_$_SFLateSectionsAppendedFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFMapsCardSectionEngagementFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFMapsDetailedRowCardSection
__ SearchFoundation: _OBJC_CLASS_$_SFPunchout
__ SearchFoundation: _OBJC_CLASS_$_SFRankingFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFResultEngagementFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFResultRankingFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFResultSection
__ SearchFoundation: _OBJC_CLASS_$_SFResultsReceivedAfterTimeoutFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFRowCardSection
__ SearchFoundation: _OBJC_CLASS_$_SFScoreboardCardSection
__ SearchFoundation: _OBJC_CLASS_$_SFSearchResult
__ SearchFoundation: _OBJC_CLASS_$_SFSearchSuggestion
__ SearchFoundation: _OBJC_CLASS_$_SFSearchViewAppearFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFSearchViewDisappearFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFSectionRankingFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFStartLocalSearchFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFStartNetworkSearchFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFStartSearchFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFSuggestionEngagementFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFText
__ SearchFoundation: _OBJC_CLASS_$_SFVisibleResultsFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFVisibleSuggestionsFeedback
__ Security: _SecCertificateIsValid
__ Security: _SecCertificateNotValidAfter
__ Security: _SecCertificateNotValidBefore
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecTrustGetTrustResult
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccount
__ Security: _kSecAttrComment
__ Security: _kSecAttrIsInvisible
__ Security: _kSecAttrLabel
__ Security: _kSecAttrService
__ Security: _kSecAttrSynchronizable
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecMatchLimitOne
__ Security: _kSecReturnData
__ Security: _kSecReturnPersistentRef
__ Security: _kSecUseDataProtectionKeychain
__ Security: _kSecValueData
__ Security: _kSecValuePersistentRef
__ StoreServices: _OBJC_CLASS_$_SSVSubscriptionStatusCoordinator
__ SymptomDiagnosticReporter: _OBJC_CLASS_$_SDRDiagnosticReporter
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignatureSubTypeContext
__ SymptomDiagnosticReporter: _kSymptomDiagnosticTypeFunctional
__ SymptomDiagnosticReporter: _kSymptomDiagnosticTypePerformance
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _UIBackgroundTaskInvalid
__ UIKit: _UIFontDescriptorSystemDesignSerif
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePNGRepresentation
__ UsageTracking: _OBJC_CLASS_$_USWebpageUsage
__ UserActivity: _OBJC_CLASS_$_UABestAppSuggestionManager
__ UserActivity: _OBJC_CLASS_$_UAUserActivity
__ UserActivity: _OBJC_CLASS_$_UAUserActivityManager
__ WebKit: _OBJC_CLASS_$_WKBrowsingContextController
__ WebKit: _OBJC_CLASS_$_WKProcessPool
__ WebKit: _OBJC_CLASS_$_WKWebProcessPlugInNodeHandle
__ WebKit: _OBJC_CLASS_$_WKWebProcessPlugInScriptWorld
__ WebKit: _OBJC_CLASS_$_WKWebView
__ WebKit: _OBJC_CLASS_$_WKWebViewConfiguration
__ WebKit: _OBJC_CLASS_$_WKWebsiteDataStore
__ WebKit: _OBJC_CLASS_$_WebView
__ WebKit: _OBJC_CLASS_$__WKProcessPoolConfiguration
__ WebKit: _OBJC_CLASS_$__WKRemoteObjectInterface
__ WebKit: __WKLegacyErrorDomain
__ WebKit: __WKWebsiteDataTypeCredentials
__ WebKit: __WKWebsiteDataTypeHSTSCache
__ WebKit: __WKWebsiteDataTypeMediaKeys
__ WebKit: __WKWebsiteDataTypeResourceLoadStatistics
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logger_create_static
__ libCTGreenTeaLogger.dylib: _getCTGreenTeaOsLogHandle
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CCCrypt
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _CC_SHA512_Final
__ libSystem.B.dylib: _CC_SHA512_Init
__ libSystem.B.dylib: _CC_SHA512_Update
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_8_HOURS
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _bsearch_b
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _connect
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_block_cancel
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_block_testcancel
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_queue_get_qos_class
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_source_testcancel
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _drand48
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _flock
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeaddrinfo
__ libSystem.B.dylib: _getaddrinfo
__ libSystem.B.dylib: _inet_pton
__ libSystem.B.dylib: _logf
__ libSystem.B.dylib: _lrand48
__ libSystem.B.dylib: _lstat
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _pthread_getspecific
__ libSystem.B.dylib: _pthread_key_create
__ libSystem.B.dylib: _pthread_setspecific
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _sigaction
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _srand48
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncasecmp
__ libSystem.B.dylib: _write
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
__ libc++.1.dylib: __ZNSt3__16chrono12steady_clock3nowEv
__ libc++.1.dylib: __ZNSt3__19to_stringEx
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___gxx_personality_v0
__ libicucore.A.dylib: _u_foldCase
__ libicucore.A.dylib: _u_memcasecmp
__ libicucore.A.dylib: _u_strToLower
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getInstanceVariable
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_setIvar
__ libsqlite3.dylib: _sqlite3_aggregate_context
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_create_function_v2
__ libsqlite3.dylib: _sqlite3_result_blob
__ libsqlite3.dylib: _sqlite3_result_double
__ libsqlite3.dylib: _sqlite3_result_error_nomem
__ libsqlite3.dylib: _sqlite3_result_int64
__ libsqlite3.dylib: _sqlite3_result_null
__ libsqlite3.dylib: _sqlite3_result_text
__ libsqlite3.dylib: _sqlite3_step
__ libsqlite3.dylib: _sqlite3_user_data
__ libsqlite3.dylib: _sqlite3_value_blob
__ libsqlite3.dylib: _sqlite3_value_bytes
__ libsqlite3.dylib: _sqlite3_value_double
__ libsqlite3.dylib: _sqlite3_value_int
__ libsqlite3.dylib: _sqlite3_value_int64
__ libsqlite3.dylib: _sqlite3_value_text
__ libsqlite3.dylib: _sqlite3_value_type
WBSForYouDataSourceWeightManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSForYouDataSourceWeightManager clear]
  -[WBSForYouDataSourceWeightManager .cxx_destruct]
  -[WBSForYouDataSourceWeightManager weightForSource:]
  -[WBSForYouDataSourceWeightManager initWithKeyValueStore:]
  -[WBSForYouDataSourceWeightManager downvoteSource:]


WBSFormControlMetadataProperty : NSObject /usr/lib/libc++.1.dylib

WBSFormControlMetadata : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  NSString *addressBookLabel
 @property  NSDictionary *annotations
 @property  NSArray *autocompleteTokens
 @property  NSString *associatedUsername
 @property  NSString *passwordRules
 @property  NSString *fieldClass
 @property  NSString *fieldID
 @property  NSString *fieldName
 @property  NSString *tagName
 @property  NSString *uniqueID
 @property  NSString *nextControlUniqueID
 @property  NSString *placeholder
 @property  NSString *value
 @property  BOOL visible
 @property  BOOL active
 @property  BOOL disabled
 @property  BOOL readOnly
 @property  BOOL textField
 @property  BOOL secureTextField
 @property  BOOL autoFilledTextField
 @property  BOOL userEditedTextField
 @property  BOOL labeledUsernameField
 @property  BOOL disallowsAutocomplete
 @property  BOOL claimsToBeCurrentPasswordViaAutocompleteAttribute
 @property  BOOL claimsToBeNewPasswordViaAutocompleteAttribute
 @property  BOOL claimsToBeUsernameViaAutocompleteAttribute
 @property  BOOL looksLikeCreditCardCardholderField
 @property  BOOL looksLikeCreditCardCompositeExpirationDateField
 @property  BOOL looksLikeCreditCardNumberField
 @property  BOOL looksLikeCreditCardSecurityCodeField
 @property  BOOL looksLikeCreditCardTypeField
 @property  BOOL looksLikeDayField
 @property  BOOL looksLikeMonthField
 @property  BOOL looksLikeYearField
 @property  BOOL looksLikeOneTimeCodeField
 @property  BOOL looksLikeIgnoredDataTypeField
 @property  BOOL looksLikePasswordCredentialField
 @property  NSDictionary *radioButtonInfo
 @property  NSArray *selectElementInfo
 @property  double rectLeft
 @property  double rectTop
 @property  double rectWidth
 @property  double rectHeight
 @property  unsigned long size
 @property  unsigned long maxLength
 @property  unsigned long minLength
 @property  unsigned long selectionStart
 @property  unsigned long selectionLength
 @property  long long autoFillButtonType
 @property  long long lastAutoFillButtonType
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[WBSFormControlMetadata supportsSecureCoding]

  // instance methods
  -[WBSFormControlMetadata init]
  -[WBSFormControlMetadata isEqual:]
  -[WBSFormControlMetadata copyWithZone:]
  -[WBSFormControlMetadata mutableCopyWithZone:]
  -[WBSFormControlMetadata encodeWithCoder:]
  -[WBSFormControlMetadata initWithCoder:]
  -[WBSFormControlMetadata .cxx_destruct]
  -[WBSFormControlMetadata initWithDictionary:]
  -[WBSFormControlMetadata size]
  -[WBSFormControlMetadata isActive]
  -[WBSFormControlMetadata value]
  -[WBSFormControlMetadata dictionaryRepresentation]
  -[WBSFormControlMetadata uniqueID]
  -[WBSFormControlMetadata minLength]
  -[WBSFormControlMetadata isDisabled]
  -[WBSFormControlMetadata isVisible]
  -[WBSFormControlMetadata tagName]
  -[WBSFormControlMetadata placeholder]
  -[WBSFormControlMetadata passwordRules]
  -[WBSFormControlMetadata maxLength]
  -[WBSFormControlMetadata isReadOnly]
  -[WBSFormControlMetadata fieldName]
  -[WBSFormControlMetadata isTextField]
  -[WBSFormControlMetadata initWithMetadata:]
  -[WBSFormControlMetadata annotations]
  -[WBSFormControlMetadata selectionStart]
  -[WBSFormControlMetadata isAutoFilledTextField]
  -[WBSFormControlMetadata isSecureTextField]
  -[WBSFormControlMetadata addressBookLabel]
  -[WBSFormControlMetadata isLabeledUsernameField]
  -[WBSFormControlMetadata looksLikeCreditCardNumberField]
  -[WBSFormControlMetadata looksLikeCreditCardCardholderField]
  -[WBSFormControlMetadata looksLikeCreditCardSecurityCodeField]
  -[WBSFormControlMetadata disallowsAutocomplete]
  -[WBSFormControlMetadata claimsToBeCurrentPasswordViaAutocompleteAttribute]
  -[WBSFormControlMetadata claimsToBeNewPasswordViaAutocompleteAttribute]
  -[WBSFormControlMetadata claimsToBeUsernameViaAutocompleteAttribute]
  -[WBSFormControlMetadata looksLikeCreditCardCompositeExpirationDateField]
  -[WBSFormControlMetadata looksLikeCreditCardTypeField]
  -[WBSFormControlMetadata looksLikeDayField]
  -[WBSFormControlMetadata looksLikeMonthField]
  -[WBSFormControlMetadata looksLikeYearField]
  -[WBSFormControlMetadata looksLikeIgnoredDataTypeField]
  -[WBSFormControlMetadata looksLikePasswordCredentialField]
  -[WBSFormControlMetadata looksLikeOneTimeCodeField]
  -[WBSFormControlMetadata isUserEditedTextField]
  -[WBSFormControlMetadata selectionLength]
  -[WBSFormControlMetadata autoFillButtonType]
  -[WBSFormControlMetadata lastAutoFillButtonType]
  -[WBSFormControlMetadata autocompleteTokens]
  -[WBSFormControlMetadata associatedUsername]
  -[WBSFormControlMetadata fieldClass]
  -[WBSFormControlMetadata fieldID]
  -[WBSFormControlMetadata nextControlUniqueID]
  -[WBSFormControlMetadata radioButtonInfo]
  -[WBSFormControlMetadata selectElementInfo]
  -[WBSFormControlMetadata rectLeft]
  -[WBSFormControlMetadata rectTop]
  -[WBSFormControlMetadata rectWidth]
  -[WBSFormControlMetadata rectHeight]


WBSMutableFormControlMetadata : WBSFormControlMetadata
 @property  NSString *addressBookLabel
 @property  NSDictionary *annotations
 @property  NSArray *autocompleteTokens
 @property  NSString *associatedUsername
 @property  NSString *passwordRules
 @property  NSString *fieldClass
 @property  NSString *fieldID
 @property  NSString *fieldName
 @property  NSString *tagName
 @property  NSString *uniqueID
 @property  NSString *nextControlUniqueID
 @property  NSString *value
 @property  BOOL visible
 @property  BOOL active
 @property  BOOL disabled
 @property  BOOL readOnly
 @property  BOOL textField
 @property  BOOL secureTextField
 @property  BOOL autoFilledTextField
 @property  BOOL userEditedTextField
 @property  BOOL labeledUsernameField
 @property  BOOL disallowsAutocomplete
 @property  BOOL claimsToBeCurrentPasswordViaAutocompleteAttribute
 @property  BOOL claimsToBeNewPasswordViaAutocompleteAttribute
 @property  BOOL claimsToBeUsernameViaAutocompleteAttribute
 @property  BOOL looksLikeCreditCardCardholderField
 @property  BOOL looksLikeCreditCardCompositeExpirationDateField
 @property  BOOL looksLikeCreditCardNumberField
 @property  BOOL looksLikeCreditCardSecurityCodeField
 @property  BOOL looksLikeCreditCardTypeField
 @property  BOOL looksLikeDayField
 @property  BOOL looksLikeMonthField
 @property  BOOL looksLikeYearField
 @property  BOOL looksLikeOneTimeCodeField
 @property  BOOL looksLikeIgnoredDataTypeField
 @property  BOOL looksLikePasswordCredentialField
 @property  NSDictionary *radioButtonInfo
 @property  NSArray *selectElementInfo
 @property  double rectLeft
 @property  double rectTop
 @property  double rectWidth
 @property  double rectHeight
 @property  unsigned long size
 @property  unsigned long maxLength
 @property  unsigned long minLength
 @property  unsigned long selectionStart
 @property  unsigned long selectionLength
 @property  long long autoFillButtonType
 @property  long long lastAutoFillButtonType

  // instance methods
  -[WBSMutableFormControlMetadata setValue:]
  -[WBSMutableFormControlMetadata setActive:]
  -[WBSMutableFormControlMetadata setSize:]
  -[WBSMutableFormControlMetadata setVisible:]
  -[WBSMutableFormControlMetadata setReadOnly:]
  -[WBSMutableFormControlMetadata setPlaceholder:]
  -[WBSMutableFormControlMetadata setDisabled:]
  -[WBSMutableFormControlMetadata setPasswordRules:]
  -[WBSMutableFormControlMetadata setMaxLength:]
  -[WBSMutableFormControlMetadata setFieldName:]
  -[WBSMutableFormControlMetadata setUniqueID:]
  -[WBSMutableFormControlMetadata setMinLength:]
  -[WBSMutableFormControlMetadata setTextField:]
  -[WBSMutableFormControlMetadata setSelectionStart:]
  -[WBSMutableFormControlMetadata setAnnotations:]
  -[WBSMutableFormControlMetadata setTagName:]
  -[WBSMutableFormControlMetadata setSecureTextField:]
  -[WBSMutableFormControlMetadata setAutoFilledTextField:]
  -[WBSMutableFormControlMetadata setUserEditedTextField:]
  -[WBSMutableFormControlMetadata setLabeledUsernameField:]
  -[WBSMutableFormControlMetadata setDisallowsAutocomplete:]
  -[WBSMutableFormControlMetadata setClaimsToBeCurrentPasswordViaAutocompleteAttribute:]
  -[WBSMutableFormControlMetadata setClaimsToBeNewPasswordViaAutocompleteAttribute:]
  -[WBSMutableFormControlMetadata setClaimsToBeUsernameViaAutocompleteAttribute:]
  -[WBSMutableFormControlMetadata setLooksLikeCreditCardCardholderField:]
  -[WBSMutableFormControlMetadata setLooksLikeCreditCardCompositeExpirationDateField:]
  -[WBSMutableFormControlMetadata setLooksLikeCreditCardNumberField:]
  -[WBSMutableFormControlMetadata setLooksLikeCreditCardSecurityCodeField:]
  -[WBSMutableFormControlMetadata setLooksLikeCreditCardTypeField:]
  -[WBSMutableFormControlMetadata setLooksLikeDayField:]
  -[WBSMutableFormControlMetadata setLooksLikeMonthField:]
  -[WBSMutableFormControlMetadata setLooksLikeYearField:]
  -[WBSMutableFormControlMetadata setLooksLikeIgnoredDataTypeField:]
  -[WBSMutableFormControlMetadata setLooksLikePasswordCredentialField:]
  -[WBSMutableFormControlMetadata setLooksLikeOneTimeCodeField:]
  -[WBSMutableFormControlMetadata setAddressBookLabel:]
  -[WBSMutableFormControlMetadata setassociatedUsername:]
  -[WBSMutableFormControlMetadata setFieldClass:]
  -[WBSMutableFormControlMetadata setFieldID:]
  -[WBSMutableFormControlMetadata setNextControlUniqueID:]
  -[WBSMutableFormControlMetadata setRectLeft:]
  -[WBSMutableFormControlMetadata setRectTop:]
  -[WBSMutableFormControlMetadata setRectWidth:]
  -[WBSMutableFormControlMetadata setRectHeight:]
  -[WBSMutableFormControlMetadata setSelectionLength:]
  -[WBSMutableFormControlMetadata setAutoFillButtonType:]
  -[WBSMutableFormControlMetadata setLastAutoFillButtonType:]
  -[WBSMutableFormControlMetadata setRadioButtonInfo:]
  -[WBSMutableFormControlMetadata setAutocompleteTokens:]
  -[WBSMutableFormControlMetadata setSelectElementInfo:]


WBSAddressBookMatch : WBSFormAutoFillItem
 @property  NSString *stringValue
 @property  NSDate *dateValue
 @property  NSString *property
 @property  NSString *key
 @property  NSString *identifier
 @property  NSString *label
 @property  NSDictionary *dictionaryRepresentation
 @property  NSString *uniqueID

  // class methods
  +[WBSAddressBookMatch addressBookMatchWithDictionaryRepresentation:]

  // instance methods
  -[WBSAddressBookMatch isEqual:]
  -[WBSAddressBookMatch key]
  -[WBSAddressBookMatch stringValue]
  -[WBSAddressBookMatch .cxx_destruct]
  -[WBSAddressBookMatch identifier]
  -[WBSAddressBookMatch dictionaryRepresentation]
  -[WBSAddressBookMatch uniqueID]
  -[WBSAddressBookMatch label]
  -[WBSAddressBookMatch setStringValue:]
  -[WBSAddressBookMatch setDateValue:]
  -[WBSAddressBookMatch dateValue]
  -[WBSAddressBookMatch completion]
  -[WBSAddressBookMatch _setValue:]
  -[WBSAddressBookMatch property]
  -[WBSAddressBookMatch setProperty:]
  -[WBSAddressBookMatch initWithValue:property:key:identifier:label:]
  -[WBSAddressBookMatch initWithValue:property:key:identifier:label:uniqueID:]
  -[WBSAddressBookMatch initWithValue:property:key:identifier:]


WBSBookmarkAndHistoryCompletionMatch : WBSURLCompletionMatch
 @property  <WBSURLCompletionMatchData> *data
 @property  float weight

  // instance methods
  -[WBSBookmarkAndHistoryCompletionMatch .cxx_destruct]
  -[WBSBookmarkAndHistoryCompletionMatch data]
  -[WBSBookmarkAndHistoryCompletionMatch title]
  -[WBSBookmarkAndHistoryCompletionMatch .cxx_construct]
  -[WBSBookmarkAndHistoryCompletionMatch weight]
  -[WBSBookmarkAndHistoryCompletionMatch originalURLString]
  -[WBSBookmarkAndHistoryCompletionMatch userVisibleURLString]
  -[WBSBookmarkAndHistoryCompletionMatch initWithBookmarkAndHistoryCompletionMatch:userInput:forQueryID:]
  -[WBSBookmarkAndHistoryCompletionMatch parsecDomainIdentifier]


WBSCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSCache init]
  -[WBSCache removeAllObjects]
  -[WBSCache objectForKey:]
  -[WBSCache removeObjectForKey:]
  -[WBSCache setObject:forKey:]
  -[WBSCache .cxx_destruct]
  -[WBSCache _recacheObjectForKey:]


WBSFaviconRequest : WBSSiteMetadataRequest <WBSIconRequest>
 @property  unsigned long type
 @property  {CGSize=dd} iconSize
 @property  unsigned long fallbackType
 @property  BOOL isURLTypedByUser
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {CGSize=dd} sizeForDrawing
 @property  NSString *uniqueIdentifier

  // instance methods
  -[WBSFaviconRequest type]
  -[WBSFaviconRequest uniqueIdentifier]
  -[WBSFaviconRequest iconSize]
  -[WBSFaviconRequest fallbackType]
  -[WBSFaviconRequest _initWithURL:type:iconSize:fallbackType:isURLTypedByUser:]
  -[WBSFaviconRequest initWithURL:extraInfo:]
  -[WBSFaviconRequest sizeForDrawing]
  -[WBSFaviconRequest initWithDomain:iconSize:fallbackType:]
  -[WBSFaviconRequest initWithURL:iconSize:fallbackType:]
  -[WBSFaviconRequest initWithURL:iconSize:fallbackType:isURLTypedByUser:]
  -[WBSFaviconRequest isURLTypedByUser]


WBSCacheRetainReleasePolicy : NSObject /usr/lib/libc++.1.dylib
 @property  NSSet *retainedKeyStrings

  // instance methods
  -[WBSCacheRetainReleasePolicy .cxx_destruct]
  -[WBSCacheRetainReleasePolicy _retainEntryForKeyString:]
  -[WBSCacheRetainReleasePolicy _releaseEntryForKeyString:]
  -[WBSCacheRetainReleasePolicy initWithPurgeBlock:]
  -[WBSCacheRetainReleasePolicy retainEntryForKeyString:]
  -[WBSCacheRetainReleasePolicy retainEntriesForKeyStrings:]
  -[WBSCacheRetainReleasePolicy retainEntryWithKeyStringProvider:]
  -[WBSCacheRetainReleasePolicy releaseEntryForKeyString:]
  -[WBSCacheRetainReleasePolicy releaseEntriesForKeyStrings:]
  -[WBSCacheRetainReleasePolicy releaseEntryWithKeyStringProvider:]
  -[WBSCacheRetainReleasePolicy isEntryRetainedForKeyString:]
  -[WBSCacheRetainReleasePolicy retainedKeyStrings]


WBSCleanupHandler : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSCleanupHandler dealloc]
  -[WBSCleanupHandler invalidate]
  -[WBSCleanupHandler .cxx_destruct]
  -[WBSCleanupHandler initWithBlock:]


WBSCloudBookmarksDevice : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *operatingSystemFamily
 @property  {?=qqq} operatingSystemVersion

  // instance methods
  -[WBSCloudBookmarksDevice .cxx_destruct]
  -[WBSCloudBookmarksDevice initWithDictionary:]
  -[WBSCloudBookmarksDevice operatingSystemVersion]
  -[WBSCloudBookmarksDevice initWithOperatingSystemVersion:family:]
  -[WBSCloudBookmarksDevice operatingSystemFamily]


WBSDeviceEligibilityInformation : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *dateOfLatestDAVAccessByIneligibleWindowsDevice
 @property  NSArray *devices
 @property  BOOL hasWindowsDevices

  // instance methods
  -[WBSDeviceEligibilityInformation .cxx_destruct]
  -[WBSDeviceEligibilityInformation devices]
  -[WBSDeviceEligibilityInformation initWithDateOfLatestDAVAccessByIneligibleWindowsDevice:devices:hasWindowsDevices:]
  -[WBSDeviceEligibilityInformation initWithDeviceListResponseDictionary:]
  -[WBSDeviceEligibilityInformation potentiallyEligibleDevicesWithEligibleOperatingSystemVersionRanges:]
  -[WBSDeviceEligibilityInformation dateOfLatestDAVAccessByIneligibleWindowsDevice]
  -[WBSDeviceEligibilityInformation hasWindowsDevices]


WBSCloudBookmarksMigrationCoordinator : NSObject /usr/lib/libc++.1.dylib <WBSCloudBookmarksUserIdentityFetcher>
 @property  <WBSCloudBookmarksMigrationCoordinatorStorage> *storage
 @property  <WBSCloudBookmarksMigrationCoordinatorLocalDataProvider> *localDataProvider
 @property  <WBSSafariBookmarksSyncAgentProtocol> *syncAgent
 @property  <WBSCloudTabDeviceProvider> *cloudTabDeviceProvider
 @property  <WBSCloudBookmarksDeviceEligibilityFetcher> *windowsDeviceEligibilityFetcher
 @property  <WBSLogger> *keyActionsLogger
 @property  BOOL migrationEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCloudBookmarksMigrationCoordinator init]
  -[WBSCloudBookmarksMigrationCoordinator dealloc]
  -[WBSCloudBookmarksMigrationCoordinator storage]
  -[WBSCloudBookmarksMigrationCoordinator .cxx_destruct]
  -[WBSCloudBookmarksMigrationCoordinator fetchUserIdentityWithCompletionHandler:]
  -[WBSCloudBookmarksMigrationCoordinator _migrationReadinessDataInvalidated:]
  -[WBSCloudBookmarksMigrationCoordinator _logKeyAction:]
  -[WBSCloudBookmarksMigrationCoordinator _determineCourseOfActionFromSyncAgentMigrationState]
  -[WBSCloudBookmarksMigrationCoordinator startCoordinatingMigration]
  -[WBSCloudBookmarksMigrationCoordinator setKeyActionsLogger:]
  -[WBSCloudBookmarksMigrationCoordinator _determineCourseOfActionFromRemoteMigrationState]
  -[WBSCloudBookmarksMigrationCoordinator _startWaitingForMigrationReadiness]
  -[WBSCloudBookmarksMigrationCoordinator _evaluateMigrationRampInclusionForced:withCompletionHandler:]
  -[WBSCloudBookmarksMigrationCoordinator _considerOverridingOtherMigratingDevice]
  -[WBSCloudBookmarksMigrationCoordinator noteCloudTabDevicesChanged]
  -[WBSCloudBookmarksMigrationCoordinator _logErrorAsKeyAction:]
  -[WBSCloudBookmarksMigrationCoordinator _reevaluateMigrationReadiness]
  -[WBSCloudBookmarksMigrationCoordinator _migrationReadinessDeciderDecidedMigrationIsPossible]
  -[WBSCloudBookmarksMigrationCoordinator _migrationReadinessDeciderDecidedMigrationIsNoLongerPossible]
  -[WBSCloudBookmarksMigrationCoordinator _scheduleMigrationReadinessReevaluationForDate:]
  -[WBSCloudBookmarksMigrationCoordinator _stopWaitingForMigrationReadiness]
  -[WBSCloudBookmarksMigrationCoordinator initWithStorage:syncAgent:localDataProvider:cloudTabDeviceProvider:windowsDeviceEligibilityFetcher:]
  -[WBSCloudBookmarksMigrationCoordinator syncAgent]
  -[WBSCloudBookmarksMigrationCoordinator cloudTabDeviceProvider]
  -[WBSCloudBookmarksMigrationCoordinator windowsDeviceEligibilityFetcher]
  -[WBSCloudBookmarksMigrationCoordinator setMigrationEnabled:]
  -[WBSCloudBookmarksMigrationCoordinator isMigrationEnabled]
  -[WBSCloudBookmarksMigrationCoordinator localDataProvider]
  -[WBSCloudBookmarksMigrationCoordinator keyActionsLogger]


WBSCredentialMatchResult : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *exactMatches
 @property  NSArray *potentialMatches
 @property  NSArray *associatedDomainMatches

  // instance methods
  -[WBSCredentialMatchResult .cxx_destruct]
  -[WBSCredentialMatchResult exactMatches]
  -[WBSCredentialMatchResult initWithExactMatches:potentialMatches:associatedDomainMatches:]
  -[WBSCredentialMatchResult potentialMatches]
  -[WBSCredentialMatchResult associatedDomainMatches]


WBSCloudBookmarksMigrationReadinessDecider : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL readyToMigrate
 @property  NSDictionary *dictionaryRepresentation
 @property  NSDate *earliestPossibleDateOfMigration
 @property  <WBSLogger> *keyActionsLogger
 @property  NSArray *eligibleOperatingSystemVersionRanges

  // class methods
  +[WBSCloudBookmarksMigrationReadinessDecider _deviceEligibilityInformationFromDictionaryRepresentation:]

  // instance methods
  -[WBSCloudBookmarksMigrationReadinessDecider .cxx_destruct]
  -[WBSCloudBookmarksMigrationReadinessDecider dictionaryRepresentation]
  -[WBSCloudBookmarksMigrationReadinessDecider _isInternalInstall]
  -[WBSCloudBookmarksMigrationReadinessDecider initFromDictionaryRepresentation:]
  -[WBSCloudBookmarksMigrationReadinessDecider _logKeyAction:]
  -[WBSCloudBookmarksMigrationReadinessDecider setKeyActionsLogger:]
  -[WBSCloudBookmarksMigrationReadinessDecider setEligibleOperatingSystemVersionRanges:]
  -[WBSCloudBookmarksMigrationReadinessDecider _logErrorAsKeyAction:]
  -[WBSCloudBookmarksMigrationReadinessDecider updateWithCloudTabDeviceProvider:deviceEligibilityFetcher:completionHandler:]
  -[WBSCloudBookmarksMigrationReadinessDecider isReadyToMigrate]
  -[WBSCloudBookmarksMigrationReadinessDecider earliestPossibleDateOfMigration]
  -[WBSCloudBookmarksMigrationReadinessDecider keyActionsLogger]
  -[WBSCloudBookmarksMigrationReadinessDecider _nonMigratableDeviceGracePeriod]
  -[WBSCloudBookmarksMigrationReadinessDecider _shouldRequestCloudTabDevicesSync]
  -[WBSCloudBookmarksMigrationReadinessDecider _minimumWaitForCloudTabDevicesUpdateAfterSync]
  -[WBSCloudBookmarksMigrationReadinessDecider _hasValidDeviceEligibilityInformation]
  -[WBSCloudBookmarksMigrationReadinessDecider _deviceEligibilityUpdateInterval]
  -[WBSCloudBookmarksMigrationReadinessDecider _logKeyActionForUpdateWithDevice:]
  -[WBSCloudBookmarksMigrationReadinessDecider _logDevicesExcludedFromUpdateWithDevices:]
  -[WBSCloudBookmarksMigrationReadinessDecider _reevaluateReadinessWithCompletionHandler:]
  -[WBSCloudBookmarksMigrationReadinessDecider _fetchDeviceEligibilityInformationWithCloudTabDeviceProvider:deviceEligibilityFetcher:completionHandler:]
  -[WBSCloudBookmarksMigrationReadinessDecider _pruneOldNonMigratableDevicesWithCompletionHandler:]
  -[WBSCloudBookmarksMigrationReadinessDecider _synchronizeCloudTabDevicesWithCloudTabDeviceProvider:deviceEligibilityFetcher:completionHandler:]
  -[WBSCloudBookmarksMigrationReadinessDecider _isDateInGracePeriod:]
  -[WBSCloudBookmarksMigrationReadinessDecider _shouldWaitForCloudTabDevicesUpdate]
  -[WBSCloudBookmarksMigrationReadinessDecider _timescale]
  -[WBSCloudBookmarksMigrationReadinessDecider _maximumAgeForCloudTabDevicesUpdate]
  -[WBSCloudBookmarksMigrationReadinessDecider _isPastMinimumWaitAfterCloudTabDeviceSyncRequest]
  -[WBSCloudBookmarksMigrationReadinessDecider _isCloudTabDeviceDataPastExpiration]
  -[WBSCloudBookmarksMigrationReadinessDecider eligibleOperatingSystemVersionRanges]
  -[WBSCloudBookmarksMigrationReadinessDecider _logPrunedDeviceIdentifiers:]


WBSCloudHistory : NSObject /usr/lib/libc++.1.dylib <WBSCloudKitThrottlerDataStore>
 @property  unsigned long numberOfDevicesInSyncCircle
 @property  BOOL cloudHistoryEnabled
 @property  BOOL removedHistoryItemsArePendingSave
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCloudHistory dealloc]
  -[WBSCloudHistory .cxx_destruct]
  -[WBSCloudHistory .cxx_construct]
  -[WBSCloudHistory _historyItemsWereRemoved:]
  -[WBSCloudHistory recordOfPastOperationsForThrottler:]
  -[WBSCloudHistory setRecordOfPastOperations:forThrottler:]
  -[WBSCloudHistory initWithHistory:configuration:completionBlock:]
  -[WBSCloudHistory _determineCloudHistoryStoreWithCompletion:]
  -[WBSCloudHistory _currentSaveChangesThrottlerPolicyString]
  -[WBSCloudHistory _currentFetchChangesThrottlerPolicyString]
  -[WBSCloudHistory _currentSyncCircleSizeRetrievalThrottlerPolicyString]
  -[WBSCloudHistory _replayPersistedLongLivedSaveOperationIfNecessary]
  -[WBSCloudHistory _pruneTombstonesThatCanNoLongerMatchVisitsFetchedFromCloud]
  -[WBSCloudHistory _initializePushNotificationSupport]
  -[WBSCloudHistory _performBlockAsynchronouslyOnCloudHistoryQueueAfterHistoryHasLoaded:]
  -[WBSCloudHistory _cloudHistoryConfigurationChanged:]
  -[WBSCloudHistory _pushNotificationReceived:]
  -[WBSCloudHistory _transitionCloudHistoryStoreToManateeState:completion:]
  -[WBSCloudHistory saveChangesBypassingThrottler:completionHandler:]
  -[WBSCloudHistory _postSaveChangesAttemptCompletedNotificationWithAllPendingDataSaved:]
  -[WBSCloudHistory _callAndResetSaveCompletionHandlerWithError:]
  -[WBSCloudHistory isCloudHistoryEnabled]
  -[WBSCloudHistory _registerSaveCompletionHandler:]
  -[WBSCloudHistory _determineNumberOfDevicesInSyncCircleForOperation:completionHandler:]
  -[WBSCloudHistory _persistLongLivedSaveOperationDictionaryWithOperationID:databaseGeneration:]
  -[WBSCloudHistory _removePersistedLongLivedSaveOperationDictionary]
  -[WBSCloudHistory _handleManateeErrorIfNeeded:]
  -[WBSCloudHistory _resetForAccountChangeWithCompletionHandler:]
  -[WBSCloudHistory _backoffTimeIntervalFromError:]
  -[WBSCloudHistory _backOffWithInterval:]
  -[WBSCloudHistory _saveVisits:tombstones:toCloudHistoryBypassingThrottler:longLivedOperationPersistenceCompletion:withCallback:]
  -[WBSCloudHistory getVisitsAndTombstonesNeedingSyncWithVisitSyncWindow:completion:]
  -[WBSCloudHistory _priorityForSaveWithVisits:tombstones:bypassingThrottler:]
  -[WBSCloudHistory _resultFromError:]
  -[WBSCloudHistory _estimatedPriorityForPotentialSaveAttempt]
  -[WBSCloudHistory fetchAndMergeChangesBypassingThrottler:completionHandler:]
  -[WBSCloudHistory _registerFetchCompletionHandler:]
  -[WBSCloudHistory _callAndResetFetchCompletionHandlerWithError:]
  -[WBSCloudHistory _fetchAndMergeChangesWithServerChangeTokenData:withPriority:]
  -[WBSCloudHistory _getServerChangeTokenDataWithCompletion:]
  -[WBSCloudHistory fetchAndMergeChanges]
  -[WBSCloudHistory saveChangesToCloudHistoryStore]
  -[WBSCloudHistory _manateeErrorCode:]
  -[WBSCloudHistory _deleteAllCloudHistoryAndSaveAgain]
  -[WBSCloudHistory _pcsIdentitiesChangedNotification:]
  -[WBSCloudHistory _setServerChangeToken:]
  -[WBSCloudHistory _processPendingPushNotifications]
  -[WBSCloudHistory _persistedLongLivedSaveOperationID:databaseGeneration:]
  -[WBSCloudHistory _updateHistoryAfterSuccessfulPersistedLongLivedSaveOperationWithGeneration:completion:]
  -[WBSCloudHistory _setPushNotificationAreInitialized:]
  -[WBSCloudHistory _pushNotificationsAreInitializedWithCompletionHandler:]
  -[WBSCloudHistory _updateDeviceCountInResponseToPushNotification]
  -[WBSCloudHistory _fetchChangesInResponseToPushNotification:]
  -[WBSCloudHistory _cachedNumberOfDevicesInSyncCircle]
  -[WBSCloudHistory setNumberOfDevicesInSyncCircle:]
  -[WBSCloudHistory _registerForHistoryWasLoadedNotificationIfNecessary]
  -[WBSCloudHistory _historyWasLoaded:]
  -[WBSCloudHistory _serverBackoffTimerFired:]
  -[WBSCloudHistory _updateThrottlerPolicies]
  -[WBSCloudHistory _setCachedNumberOfDevicesInSyncCircle:]
  -[WBSCloudHistory _resetCloudHistoryDataWithCompletionHandler:]
  -[WBSCloudHistory initWithHistory:configuration:]
  -[WBSCloudHistory setCloudHistoryEnabled:]
  -[WBSCloudHistory saveChangesToCloudHistoryStoreBypassingThrottler]
  -[WBSCloudHistory dateOfNextPermittedSaveChangesAttempt]
  -[WBSCloudHistory fetchAndMergeChangesBypassingThrottler]
  -[WBSCloudHistory _saveChangesWhenHistoryLoads]
  -[WBSCloudHistory _fetchChangesWhenHistoryLoads]
  -[WBSCloudHistory resetForAccountChange]
  -[WBSCloudHistory removedHistoryItemsArePendingSave]
  -[WBSCloudHistory setRemovedHistoryItemsArePendingSave:]
  -[WBSCloudHistory numberOfDevicesInSyncCircle]


WBSQuerySuggestion : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *title
 @property  NSString *identifier
 @property  long long type
 @property  id tag

  // instance methods
  -[WBSQuerySuggestion init]
  -[WBSQuerySuggestion type]
  -[WBSQuerySuggestion .cxx_destruct]
  -[WBSQuerySuggestion identifier]
  -[WBSQuerySuggestion title]
  -[WBSQuerySuggestion tag]
  -[WBSQuerySuggestion initWithTitle:identifier:type:tag:]


WBSCloudHistoryConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *singleDeviceSaveChangesThrottlingPolicyString
 @property  NSString *multipleDeviceSaveChangesThrottlingPolicyString
 @property  NSString *singleDeviceFetchChangesThrottlingPolicyString
 @property  NSString *multipleDeviceFetchChangesThrottlingPolicyString
 @property  NSString *syncCircleSizeRetrievalThrottlingPolicyString
 @property  unsigned long maximumRequestCharacterCount
 @property  double syncWindow
 @property  BOOL shouldBatchSaveRecords
 @property  BOOL shouldUseLongLivedOperationsToSaveRecords

  // instance methods
  -[WBSCloudHistoryConfiguration init]
  -[WBSCloudHistoryConfiguration .cxx_destruct]
  -[WBSCloudHistoryConfiguration initWithDictionary:]
  -[WBSCloudHistoryConfiguration dictionaryRepresentation]
  -[WBSCloudHistoryConfiguration syncWindow]
  -[WBSCloudHistoryConfiguration shouldUseLongLivedOperationsToSaveRecords]
  -[WBSCloudHistoryConfiguration singleDeviceSaveChangesThrottlingPolicyString]
  -[WBSCloudHistoryConfiguration multipleDeviceSaveChangesThrottlingPolicyString]
  -[WBSCloudHistoryConfiguration singleDeviceFetchChangesThrottlingPolicyString]
  -[WBSCloudHistoryConfiguration multipleDeviceFetchChangesThrottlingPolicyString]
  -[WBSCloudHistoryConfiguration syncCircleSizeRetrievalThrottlingPolicyString]
  -[WBSCloudHistoryConfiguration _builtInConfiguration]
  -[WBSCloudHistoryConfiguration _applyBuiltInConfiguration:]
  -[WBSCloudHistoryConfiguration remoteConfiguration]
  -[WBSCloudHistoryConfiguration applyRemoteConfiguration:]
  -[WBSCloudHistoryConfiguration _applyConfiguration:withTolerance:]
  -[WBSCloudHistoryConfiguration shouldBatchSaveRecords]
  -[WBSCloudHistoryConfiguration _sharedBuiltInConfiguration]
  -[WBSCloudHistoryConfiguration platformBuiltInConfiguration]
  -[WBSCloudHistoryConfiguration applyPlatformConfiguration:withTolerance:]
  -[WBSCloudHistoryConfiguration setSingleDeviceSaveChangesThrottlingPolicyString:]
  -[WBSCloudHistoryConfiguration setMultipleDeviceSaveChangesThrottlingPolicyString:]
  -[WBSCloudHistoryConfiguration setSingleDeviceFetchChangesThrottlingPolicyString:]
  -[WBSCloudHistoryConfiguration setMultipleDeviceFetchChangesThrottlingPolicyString:]
  -[WBSCloudHistoryConfiguration setSyncCircleSizeRetrievalThrottlingPolicyString:]
  -[WBSCloudHistoryConfiguration setMaximumRequestCharacterCount:]
  -[WBSCloudHistoryConfiguration setSyncWindow:]
  -[WBSCloudHistoryConfiguration maximumRequestCharacterCount]


WBSCloudHistoryFetchResult : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *cloudHistoryVisits
 @property  NSArray *historyTombstones
 @property  NSDictionary *clientVersions
 @property  NSData *serverChangeTokenData

  // instance methods
  -[WBSCloudHistoryFetchResult init]
  -[WBSCloudHistoryFetchResult .cxx_destruct]
  -[WBSCloudHistoryFetchResult serverChangeTokenData]
  -[WBSCloudHistoryFetchResult cloudHistoryVisits]
  -[WBSCloudHistoryFetchResult historyTombstones]
  -[WBSCloudHistoryFetchResult _addCloudHistoryVisit:]
  -[WBSCloudHistoryFetchResult clientVersions]
  -[WBSCloudHistoryFetchResult _updateClientVersion:seenAt:]
  -[WBSCloudHistoryFetchResult _addHistoryTombstone:]
  -[WBSCloudHistoryFetchResult _setServerChangeTokenData:]


WBSAutomaticReaderActivationManager : WBSPerSitePreferenceManager <WBSPerSitePreferenceManagerStorageDelegate, WBSPerSitePreferenceManagerDefaultsDelegate, WBSPerSitePreferenceBinaryToggleItemManager>
 @property  WBSPerSitePreference *readerPreference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore

  // instance methods
  -[WBSAutomaticReaderActivationManager init]
  -[WBSAutomaticReaderActivationManager .cxx_destruct]
  -[WBSAutomaticReaderActivationManager preferences]
  -[WBSAutomaticReaderActivationManager initWithPerSitePreferencesStore:]
  -[WBSAutomaticReaderActivationManager didUpdatePreference:toValue:forDomain:]
  -[WBSAutomaticReaderActivationManager readerPreference]
  -[WBSAutomaticReaderActivationManager onValueForPreference:]
  -[WBSAutomaticReaderActivationManager perSitePreferencesStore]
  -[WBSAutomaticReaderActivationManager preferencesStoreKeyForPreference:]
  -[WBSAutomaticReaderActivationManager defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[WBSAutomaticReaderActivationManager offValueForPreference:]
  -[WBSAutomaticReaderActivationManager valuesForPreference:]
  -[WBSAutomaticReaderActivationManager localizedStringForValue:inPreference:]
  -[WBSAutomaticReaderActivationManager getAutomaticReaderEnabledForDomain:usingBlock:]
  -[WBSAutomaticReaderActivationManager getAutomaticReaderEnabledByDefaultUsingBlock:]
  -[WBSAutomaticReaderActivationManager _submitOptInOutStateForAnalyticsGivenAutomaticReaderIsNotGloballyEnabled]
  -[WBSAutomaticReaderActivationManager getAutomaticReaderStateForDomain:usingBlock:]
  -[WBSAutomaticReaderActivationManager setAutomaticReaderEnabled:forDomain:]
  -[WBSAutomaticReaderActivationManager setAutomaticReaderEnabledByDefault:removingExistingPreferencesForSites:]
  -[WBSAutomaticReaderActivationManager submitOptInOutStateForAnalytics]


WBSCloudHistoryMergeOperation : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSCloudHistoryMergeOperation .cxx_destruct]
  -[WBSCloudHistoryMergeOperation initWithHistory:fetchResult:]
  -[WBSCloudHistoryMergeOperation mergeWithCompletion:]
  -[WBSCloudHistoryMergeOperation _updateClientVersions]
  -[WBSCloudHistoryMergeOperation _buildVisitsByVisitIdentifiersMap]
  -[WBSCloudHistoryMergeOperation _buildRedirectChains]
  -[WBSCloudHistoryMergeOperation _filterVisitsByTombstones]
  -[WBSCloudHistoryMergeOperation _removeDuplicateVisits]
  -[WBSCloudHistoryMergeOperation _mergeVisitsWithCompletion:]
  -[WBSCloudHistoryMergeOperation _lookupRedirectChainSourcesWithCompletion:]
  -[WBSCloudHistoryMergeOperation _lookUpExistingItemsWithCompletion:]
  -[WBSCloudHistoryMergeOperation _loadTombstonesWithCompletion:]
  -[WBSCloudHistoryMergeOperation _replayAndAddTombstones:]


WBSCloudHistoryPushAgent : NSObject /usr/lib/libc++.1.dylib <APSConnectionDelegate, NSXPCListenerDelegate, WBSCloudHistoryPushAgent>
 @property  BOOL _hasUnacknowledgedPushNotifications
 @property  BOOL _hasAcknowledgedPushNotifications
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCloudHistoryPushAgent init]
  -[WBSCloudHistoryPushAgent .cxx_destruct]
  -[WBSCloudHistoryPushAgent listener:shouldAcceptNewConnection:]
  -[WBSCloudHistoryPushAgent connection:didReceivePublicToken:]
  -[WBSCloudHistoryPushAgent connection:didReceiveIncomingMessage:]
  -[WBSCloudHistoryPushAgent connection:didReceiveToken:forTopic:identifier:]
  -[WBSCloudHistoryPushAgent _pushTopic]
  -[WBSCloudHistoryPushAgent clearAcknowledgedPushNotifications]
  -[WBSCloudHistoryPushAgent acknowledgePendingPushNotifications]
  -[WBSCloudHistoryPushAgent getPushNotifications:]
  -[WBSCloudHistoryPushAgent _setHasUnacknowledgedPushNotifications:]
  -[WBSCloudHistoryPushAgent queryMemoryFootprint:]
  -[WBSCloudHistoryPushAgent _hasUnacknowledgedPushNotifications]
  -[WBSCloudHistoryPushAgent _hasAcknowledgedPushNotifications]
  -[WBSCloudHistoryPushAgent _setHasAcknowlegedPushNotifications:]


WBSCloudHistoryPushAgentProxy : NSObject /usr/lib/libc++.1.dylib <WBSCloudHistoryPushAgent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCloudHistoryPushAgentProxy init]
  -[WBSCloudHistoryPushAgentProxy dealloc]
  -[WBSCloudHistoryPushAgentProxy .cxx_destruct]
  -[WBSCloudHistoryPushAgentProxy clearAcknowledgedPushNotifications]
  -[WBSCloudHistoryPushAgentProxy acknowledgePendingPushNotifications]
  -[WBSCloudHistoryPushAgentProxy getPushNotifications:]
  -[WBSCloudHistoryPushAgentProxy queryMemoryFootprint:]
  -[WBSCloudHistoryPushAgentProxy queryMemoryFootprintWithError:]


WBSCloudHistoryStore : NSObject /usr/lib/libc++.1.dylib <WBSCloudHistoryDataStore>
  // instance methods
  -[WBSCloudHistoryStore .cxx_destruct]
  -[WBSCloudHistoryStore _scheduleOperation:]
  -[WBSCloudHistoryStore saveCloudHistoryVisits:tombstones:longLivedOperationPersistenceCompletion:completion:]
  -[WBSCloudHistoryStore initWithConfiguration:useManateeContainer:]
  -[WBSCloudHistoryStore deleteHistoryZoneWithCompletion:]
  -[WBSCloudHistoryStore fetchRecordsWithServerChangeTokenData:completion:]
  -[WBSCloudHistoryStore replayPersistedLongLivedSaveOperationWithID:completion:]
  -[WBSCloudHistoryStore initializePushNotifications:]
  -[WBSCloudHistoryStore fetchNumberOfDevicesInSyncCircleWithCompletion:]
  -[WBSCloudHistoryStore _prepareRecordZoneWithCompletion:]
  -[WBSCloudHistoryStore _shouldTryToResetRecordZoneForError:]
  -[WBSCloudHistoryStore _resetRecordZone]
  -[WBSCloudHistoryStore _saveCloudHistoryVisits:tombstones:longLivedOperationPersistenceCompletion:completion:]
  -[WBSCloudHistoryStore _recordsWithCloudHistoryVisits:]
  -[WBSCloudHistoryStore _recordWithHistoryTombstones:version:]
  -[WBSCloudHistoryStore _batchSaveRecords:useLongLivedOperation:longLivedOperationPersistenceCompletion:completion:]
  -[WBSCloudHistoryStore _saveRecords:withCompletion:]
  -[WBSCloudHistoryStore _recordWithCloudHistoryVisits:]
  -[WBSCloudHistoryStore _recordWithType:version:dataDictionary:]
  -[WBSCloudHistoryStore _fetchRecordsWithServerChangeToken:numberOfFetchRecordsOperationsPerformedSoFar:result:completion:]
  -[WBSCloudHistoryStore _configureFetchChangesOperation:]
  -[WBSCloudHistoryStore _appendRecord:toResult:]
  -[WBSCloudHistoryStore _dictionaryForRecordData:]
  -[WBSCloudHistoryStore _recordDataForDictionary:]


WBSCloudHistoryVisit : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDictionary *dictionaryRepresentation
 @property  WBSHistoryVisitIdentifier *visitIdentifier
 @property  NSString *title
 @property  BOOL loadSuccessful
 @property  BOOL httpNonGet
 @property  WBSHistoryVisitIdentifier *redirectSourceVisitIdentifier
 @property  WBSCloudHistoryVisit *redirectSourceVisit
 @property  WBSHistoryVisitIdentifier *redirectDestinationVisitIdentifier
 @property  WBSCloudHistoryVisit *redirectDestinationVisit

  // class methods
  +[WBSCloudHistoryVisit supportsSecureCoding]

  // instance methods
  -[WBSCloudHistoryVisit encodeWithCoder:]
  -[WBSCloudHistoryVisit initWithCoder:]
  -[WBSCloudHistoryVisit .cxx_destruct]
  -[WBSCloudHistoryVisit initWithDictionary:]
  -[WBSCloudHistoryVisit dictionaryRepresentation]
  -[WBSCloudHistoryVisit title]
  -[WBSCloudHistoryVisit setTitle:]
  -[WBSCloudHistoryVisit initWithHistoryVisit:]
  -[WBSCloudHistoryVisit visitIdentifier]
  -[WBSCloudHistoryVisit redirectSourceVisitIdentifier]
  -[WBSCloudHistoryVisit setRedirectSourceVisit:]
  -[WBSCloudHistoryVisit setRedirectDestinationVisit:]
  -[WBSCloudHistoryVisit redirectSourceVisit]
  -[WBSCloudHistoryVisit redirectDestinationVisit]
  -[WBSCloudHistoryVisit wasHTTPNonGet]
  -[WBSCloudHistoryVisit loadWasSuccessful]
  -[WBSCloudHistoryVisit initWithVisitIdentifier:title:loadSuccessful:httpNonGet:redirectSourceVisitIdentifier:redirectDestinationVisitIdentifier:]
  -[WBSCloudHistoryVisit setVisitIdentifier:]
  -[WBSCloudHistoryVisit setLoadSuccessful:]
  -[WBSCloudHistoryVisit setHttpNonGet:]
  -[WBSCloudHistoryVisit setRedirectSourceVisitIdentifier:]
  -[WBSCloudHistoryVisit redirectDestinationVisitIdentifier]
  -[WBSCloudHistoryVisit setRedirectDestinationVisitIdentifier:]


WBSAutomaticBugCaptureManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSAutomaticBugCaptureManager sharedManager]

  // instance methods
  -[WBSAutomaticBugCaptureManager init]
  -[WBSAutomaticBugCaptureManager .cxx_destruct]
  -[WBSAutomaticBugCaptureManager captureLoadingStallWithDomain:detectedProcess:context:duration:]
  -[WBSAutomaticBugCaptureManager _startLoggingSessionForDomain:detectedProcess:type:subType:context:duration:]
  -[WBSAutomaticBugCaptureManager captureLoadingStallWithDomain:detectedProcess:context:]
  -[WBSAutomaticBugCaptureManager captureProcessTerminationDueToResourceLimitsWithDomain:detectedProcess:resourceType:]
  -[WBSAutomaticBugCaptureManager captureDeferredNavigationWithDomain:detectedProcess:context:]
  -[WBSAutomaticBugCaptureManager capturePerformanceTimeoutWithDomain:detectedProcess:context:]


WBSPasswordWordList : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *identifier

  // instance methods
  -[WBSPasswordWordList .cxx_destruct]
  -[WBSPasswordWordList identifier]
  -[WBSPasswordWordList initWithIdentifier:]
  -[WBSPasswordWordList enumerateEntriesForString:withBlock:]
  -[WBSPasswordWordList entriesForString:]


WBSCloudTab : NSObject /usr/lib/libc++.1.dylib <NSCopying, WBSTabItemSearchSupport>
 @property  BOOL isShowingReader
 @property  NSDictionary *readerScrollPositionDictionary
 @property  NSString *title
 @property  NSURL *url
 @property  NSUUID *uuid
 @property  BOOL pinned
 @property  NSDictionary *dictionaryRepresentation
 @property  NSDictionary *dictionaryRepresentationForUserActivityUserInfo
 @property  NSString *sceneID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *titleForLastSearch
 @property  NSArray *titleWords
 @property  NSString *URLString
 @property  NSString *URLStringForLastSearch
 @property  NSArray *URLStringComponents
 @property  NSString *lastSearchTerm
 @property  BOOL matchedLastSearch

  // class methods
  +[WBSCloudTab _dictionaryWithURL:uuid:title:isShowingReader:readerScrollPosition:isPinned:sceneID:]

  // instance methods
  -[WBSCloudTab isEqual:]
  -[WBSCloudTab copyWithZone:]
  -[WBSCloudTab .cxx_destruct]
  -[WBSCloudTab initWithDictionary:]
  -[WBSCloudTab dictionaryRepresentation]
  -[WBSCloudTab url]
  -[WBSCloudTab uuid]
  -[WBSCloudTab title]
  -[WBSCloudTab setTitle:]
  -[WBSCloudTab setUuid:]
  -[WBSCloudTab setUrl:]
  -[WBSCloudTab URLString]
  -[WBSCloudTab isPinned]
  -[WBSCloudTab setPinned:]
  -[WBSCloudTab sceneID]
  -[WBSCloudTab isShowingReader]
  -[WBSCloudTab initWithURL:uuid:title:isShowingReader:readerScrollPosition:sceneID:]
  -[WBSCloudTab dictionaryRepresentationForUserActivityUserInfo]
  -[WBSCloudTab lastSearchTerm]
  -[WBSCloudTab setLastSearchTerm:]
  -[WBSCloudTab titleForLastSearch]
  -[WBSCloudTab setTitleForLastSearch:]
  -[WBSCloudTab titleWords]
  -[WBSCloudTab setTitleWords:]
  -[WBSCloudTab URLStringForLastSearch]
  -[WBSCloudTab setURLStringForLastSearch:]
  -[WBSCloudTab URLStringComponents]
  -[WBSCloudTab setURLStringComponents:]
  -[WBSCloudTab matchedLastSearch]
  -[WBSCloudTab setMatchedLastSearch:]
  -[WBSCloudTab initWithDictionaryFromUserActivityUserInfo:]
  -[WBSCloudTab initWithURL:uuid:title:isShowingReader:readerScrollPosition:isPinned:]
  -[WBSCloudTab hasSameUUIDAndURLAsTab:]
  -[WBSCloudTab setIsShowingReader:]
  -[WBSCloudTab readerScrollPositionDictionary]
  -[WBSCloudTab setReaderScrollPositionDictionary:]


WBSCloudTabCloseRequest : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSUUID *requestUUID
 @property  NSUUID *destinationDeviceUUID
 @property  NSUUID *tabUUID
 @property  NSURL *url
 @property  NSDate *lastModified
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[WBSCloudTabCloseRequest _dictionaryWithURL:tabUUID:lastModified:sourceDeviceUUID:destinationDeviceUUID:]
  +[WBSCloudTabCloseRequest isCloudTabCloseRequestDictionary:]
  +[WBSCloudTabCloseRequest destinationDeviceUUIDInDictionary:]

  // instance methods
  -[WBSCloudTabCloseRequest copyWithZone:]
  -[WBSCloudTabCloseRequest .cxx_destruct]
  -[WBSCloudTabCloseRequest dictionaryRepresentation]
  -[WBSCloudTabCloseRequest url]
  -[WBSCloudTabCloseRequest requestUUID]
  -[WBSCloudTabCloseRequest lastModified]
  -[WBSCloudTabCloseRequest initWithDictionary:requestUUID:]
  -[WBSCloudTabCloseRequest initWithURL:tabUUID:lastModified:sourceDeviceUUID:destinationDeviceUUID:requestUUID:]
  -[WBSCloudTabCloseRequest matchesCloudTab:]
  -[WBSCloudTabCloseRequest destinationDeviceUUID]
  -[WBSCloudTabCloseRequest tabUUID]


WBSCloudTabDevice : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *name
 @property  BOOL closeRequestSupported
 @property  BOOL hasDuplicateName
 @property  BOOL ephemeralDevice
 @property  NSString *uuid
 @property  NSArray *tabs
 @property  NSDate *lastModified
 @property  NSDictionary *dictionaryRepresentation
 @property  BOOL cloudKitBookmarkSyncingSupported

  // class methods
  +[WBSCloudTabDevice _dictionaryWithDeviceName:lastModified:hasDuplicateName:tabs:isEphemeralDevice:]
  +[WBSCloudTabDevice isCloudTabDeviceDictionary:]
  +[WBSCloudTabDevice tabCountInDictionary:]
  +[WBSCloudTabDevice deviceNameInDictionary:]
  +[WBSCloudTabDevice lastModifiedDateInDictionary:]
  +[WBSCloudTabDevice hasDuplicateDeviceNameInDictionary:]
  +[WBSCloudTabDevice isEphemeralDeviceInDictionary:]

  // instance methods
  -[WBSCloudTabDevice isEqual:]
  -[WBSCloudTabDevice name]
  -[WBSCloudTabDevice copyWithZone:]
  -[WBSCloudTabDevice .cxx_destruct]
  -[WBSCloudTabDevice dictionaryRepresentation]
  -[WBSCloudTabDevice uuid]
  -[WBSCloudTabDevice lastModified]
  -[WBSCloudTabDevice tabs]
  -[WBSCloudTabDevice isCloudKitBookmarkSyncingSupported]
  -[WBSCloudTabDevice initWithDeviceName:lastModified:hasDuplicateName:tabs:uuid:isEphemeralDevice:]
  -[WBSCloudTabDevice initWithDictionary:uuid:]
  -[WBSCloudTabDevice initWithDeviceName:lastModified:hasDuplicateName:tabs:uuid:]
  -[WBSCloudTabDevice deviceByRemovingTab:]
  -[WBSCloudTabDevice deviceByRemovingTabs:]
  -[WBSCloudTabDevice isCloseRequestSupported]
  -[WBSCloudTabDevice hasDuplicateName]
  -[WBSCloudTabDevice isEphemeralDevice]


WBSCloudTabStore : NSObject /usr/lib/libc++.1.dylib <WBSCloudTabDeviceProvider>
 @property  BOOL atLeastOneOtherActiveDeviceIsRegistered
 @property  <WBSCloudTabStoreDelegate> *wbsDelegate
 @property  BOOL syncAgentIsAvailable
 @property  long long uniqueDeviceMultiplicity
 @property  BOOL currentDeviceIsRegisteredInCloudKit
 @property  NSDictionary *dictionaryRepresentationOfCurrentDeviceInCloudKit
 @property  NSError *lastFetchError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *syncedCloudTabDevices
 @property  NSDate *dateOfLastCloudTabDevicesUpdate

  // class methods
  +[WBSCloudTabStore errorWithCode:]
  +[WBSCloudTabStore _debugErrorMessageForCode:]

  // instance methods
  -[WBSCloudTabStore init]
  -[WBSCloudTabStore .cxx_destruct]
  -[WBSCloudTabStore dateOfLastCloudTabDevicesUpdate]
  -[WBSCloudTabStore syncedCloudTabDevices]
  -[WBSCloudTabStore synchronizeCloudTabDevicesWithCompletionHandler:]
  -[WBSCloudTabStore _syncAgentProxyConnectionWasInvalidated:]
  -[WBSCloudTabStore createSyncedCloudTabDevicesAndCloseRequestsFromKVS]
  -[WBSCloudTabStore _devicesByRemovingThisDeviceAndDevicesWithNoTabs:]
  -[WBSCloudTabStore _keyValueStoreDictionaryRepresentation:]
  -[WBSCloudTabStore _addDeviceDictionaryFromKVS:deviceUUID:]
  -[WBSCloudTabStore _addCloseRequestDictionary:toDeviceUUIDsToCloseRequestsDictionary:requestUUID:]
  -[WBSCloudTabStore _pruneOrphanedCloseRequestsFromKVS]
  -[WBSCloudTabStore _devicesByRemovingDevicesFromKVSWithOutstandingCloseRequests:]
  -[WBSCloudTabStore _removeObjectFromKeyValueStore:forKey:]
  -[WBSCloudTabStore uniqueDeviceMultiplicity]
  -[WBSCloudTabStore _currentDeviceUUID]
  -[WBSCloudTabStore _deviceIsStoredInCloudKit:]
  -[WBSCloudTabStore _writeCloseRequestForTab:onDevice:deviceIsStoredInCloudKit:]
  -[WBSCloudTabStore _tabWasClosed:onDevice:deviceIsStoredInCloudKit:syncedCloudTabDevices:]
  -[WBSCloudTabStore _closeTabs:onDevice:]
  -[WBSCloudTabStore _closeRequestedTabIfPossible:]
  -[WBSCloudTabStore clearTabsForFirstDuplicateDeviceInCloudKitWithName:passingTest:]
  -[WBSCloudTabStore _didFetchDeviceDictionariesFromCloudKit:fetchedCloseRequests:error:]
  -[WBSCloudTabStore _didFetchDeviceDictionariesFromCloudKit:fetchedCloseRequests:fetchedDevicesBySyncing:error:]
  -[WBSCloudTabStore fetchSyncedCloudTabDevicesAndCloseRequestsFromCloudKit]
  -[WBSCloudTabStore _setDictionaryInKeyValueStore:dictionary:forKey:]
  -[WBSCloudTabStore _tabsWereClosed:onDevice:deviceIsStoredInCloudKit:syncedCloudTabDevices:]
  -[WBSCloudTabStore _indexOfDevice:inSyncedCloudTabDevices:]
  -[WBSCloudTabStore _deviceWithTabsWithOutstandingCloseRequestsRemoved:closeRequestsForDevice:]
  -[WBSCloudTabStore resetSyncedCloudTabDevicesAndCloseRequestsFromCloudKit]
  -[WBSCloudTabStore resetSyncedCloudTabDevicesAndCloseRequestsFromKVS]
  -[WBSCloudTabStore pruneExpiredDevicesFromKVS]
  -[WBSCloudTabStore atLeastOneOtherActiveDeviceIsRegistered]
  -[WBSCloudTabStore closeTab:onDevice:]
  -[WBSCloudTabStore closeTabs:onDevice:]
  -[WBSCloudTabStore closeAllTabsOnDevice:]
  -[WBSCloudTabStore handleCloseTabRequestsFromKVS]
  -[WBSCloudTabStore saveCurrentCloudTabDeviceDictionaryToCloudKit:completionHandler:]
  -[WBSCloudTabStore lastFetchError]
  -[WBSCloudTabStore currentDeviceIsRegisteredInCloudKit]
  -[WBSCloudTabStore dictionaryRepresentationOfCurrentDeviceInCloudKit]
  -[WBSCloudTabStore pruneExpiredDevicesFromCloudKit]
  -[WBSCloudTabStore clearTabsForFirstDuplicateDeviceInCloudKitWithName:]
  -[WBSCloudTabStore handleCloseTabRequestsFromCloudKit]
  -[WBSCloudTabStore deleteAllDevicesFromCloudKit]
  -[WBSCloudTabStore wbsDelegate]
  -[WBSCloudTabStore setWbsDelegate:]
  -[WBSCloudTabStore syncAgentIsAvailable]


WBSCoalescedAsynchronousWriter : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSCoalescedAsynchronousWriterDelegate> *delegate

  // instance methods
  -[WBSCoalescedAsynchronousWriter dealloc]
  -[WBSCoalescedAsynchronousWriter delegate]
  -[WBSCoalescedAsynchronousWriter setDelegate:]
  -[WBSCoalescedAsynchronousWriter .cxx_destruct]
  -[WBSCoalescedAsynchronousWriter .cxx_construct]
  -[WBSCoalescedAsynchronousWriter _invalidateTimer]
  -[WBSCoalescedAsynchronousWriter _timerFired]
  -[WBSCoalescedAsynchronousWriter initWithName:fileURL:dataSourceBlock:]
  -[WBSCoalescedAsynchronousWriter scheduleWrite]
  -[WBSCoalescedAsynchronousWriter completePendingWriteSynchronously]
  -[WBSCoalescedAsynchronousWriter _writeData:]
  -[WBSCoalescedAsynchronousWriter _scheduleTimer]
  -[WBSCoalescedAsynchronousWriter initWithName:fileURL:dataSourceQueue:dataSourceBlock:]
  -[WBSCoalescedAsynchronousWriter _initWithName:fileURL:writerBlock:dataSourceQueue:dataSourceBlock:writeDelayInterval:]
  -[WBSCoalescedAsynchronousWriter initWithName:writerBlock:dataSourceQueue:dataSourceBlock:]
  -[WBSCoalescedAsynchronousWriter _dataFromDataSource]
  -[WBSCoalescedAsynchronousWriter _writeDataAsynchronously:completionHandler:]
  -[WBSCoalescedAsynchronousWriter _waitForWriteCompletion]
  -[WBSCoalescedAsynchronousWriter startScheduledWriteNowWithCompletionHandler:]
  -[WBSCoalescedAsynchronousWriter _cancelPendingWriteSynchronouslyLeavingSuddenTerminationIntact]
  -[WBSCoalescedAsynchronousWriter initWithName:fileURL:dataSourceBlock:writeDelayInterval:]
  -[WBSCoalescedAsynchronousWriter initWithName:writerBlock:dataSourceBlock:]
  -[WBSCoalescedAsynchronousWriter startScheduledWriteNow]
  -[WBSCoalescedAsynchronousWriter performScheduledWriteSynchronously]
  -[WBSCoalescedAsynchronousWriter cancelPendingWriteSynchronously]


WBSProcessProxyOverride : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSProcessProxyOverride overrideSystemHTTPProxy:HTTPSProxy:]
  +[WBSProcessProxyOverride overrideSystemProxiesIfNeeded:]


WBSCompletionListRankingObserver : NSObject /usr/lib/libc++.1.dylib <_CompletionListRankingObserverFeedbackGeneratorDelegate>
 @property  <WBSCompletionListRankingObserverDelegate> *delegate
 @property  SFRankingFeedback *rankingFeedback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCompletionListRankingObserver delegate]
  -[WBSCompletionListRankingObserver setDelegate:]
  -[WBSCompletionListRankingObserver .cxx_destruct]
  -[WBSCompletionListRankingObserver _createFeedbackGenerator]
  -[WBSCompletionListRankingObserver rankingFeedback]
  -[WBSCompletionListRankingObserver didBeginRanking]
  -[WBSCompletionListRankingObserver didEndRanking]
  -[WBSCompletionListRankingObserver didBeginSectionWithBundleIdentifier:]
  -[WBSCompletionListRankingObserver didAddItem:hidingOutrankedResults:hidingDuplicateResults:]
  -[WBSCompletionListRankingObserver removeAllSectionsAndItems]
  -[WBSCompletionListRankingObserver _feedbackGeneratorClass]
  -[WBSCompletionListRankingObserver completionListRankingObserverFeedbackGenerator:frequentlyVisitedSitesIndexOfItem:hidingItem:]
  -[WBSCompletionListRankingObserver didAddItem:]


_WBSSearchFoundationFeedbackGenerator : NSObject /usr/lib/libc++.1.dylib <_CompletionListRankingObserverFeedbackGenerator>
 @property  SFRankingFeedback *rankingFeedback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <_CompletionListRankingObserverFeedbackGeneratorDelegate> *delegate

  // instance methods
  -[_WBSSearchFoundationFeedbackGenerator init]
  -[_WBSSearchFoundationFeedbackGenerator .cxx_destruct]
  -[_WBSSearchFoundationFeedbackGenerator rankingFeedback]
  -[_WBSSearchFoundationFeedbackGenerator didBeginRanking]
  -[_WBSSearchFoundationFeedbackGenerator didEndRanking]
  -[_WBSSearchFoundationFeedbackGenerator didBeginSectionWithBundleIdentifier:]
  -[_WBSSearchFoundationFeedbackGenerator didAddItem:hidingOutrankedResults:hidingDuplicateResults:]
  -[_WBSSearchFoundationFeedbackGenerator removeAllSectionsAndItems]
  -[_WBSSearchFoundationFeedbackGenerator _commitPreviousSectionIfNecessary]


WBSCompletionQuery : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *parsecFeedbackQueryIdentifier
 @property  NSURLRequest *parsecSearchRequest
 @property  {time_point<std::__1::chrono::steady_clock timestamp
 @property  NSString *searchSuggestionProviderIdentifier
 @property  {duration<long long searchSuggestionProviderLatency
 @property  {duration<long long parsecLatency
 @property  unsigned long indexInFeedbackArray
 @property  NSString *queryString
 @property  NSString *normalizedQueryStringForParsec
 @property  BOOL forLastSearch
 @property  NSArray *querySuggestions
 @property  NSString *rewrittenQueryStringFromParsec
 @property  long long queryID
 @property  unsigned long triggerEvent

  // class methods
  +[WBSCompletionQuery initialize]

  // instance methods
  -[WBSCompletionQuery init]
  -[WBSCompletionQuery copyWithZone:]
  -[WBSCompletionQuery .cxx_destruct]
  -[WBSCompletionQuery timestamp]
  -[WBSCompletionQuery .cxx_construct]
  -[WBSCompletionQuery queryString]
  -[WBSCompletionQuery triggerEvent]
  -[WBSCompletionQuery setTriggerEvent:]
  -[WBSCompletionQuery queryID]
  -[WBSCompletionQuery initWithQueryString:]
  -[WBSCompletionQuery initWithQueryString:queryID:]
  -[WBSCompletionQuery initWithQueryString:queryID:triggerEvent:]
  -[WBSCompletionQuery _initWithQueryString:queryID:timestamp:indexInFeedbackArray:triggerEvent:]
  -[WBSCompletionQuery initWithQueryString:triggerEvent:]
  -[WBSCompletionQuery normalizedQueryStringForParsec]
  -[WBSCompletionQuery isForLastSearch]
  -[WBSCompletionQuery setForLastSearch:]
  -[WBSCompletionQuery querySuggestions]
  -[WBSCompletionQuery setQuerySuggestions:]
  -[WBSCompletionQuery rewrittenQueryStringFromParsec]
  -[WBSCompletionQuery setRewrittenQueryStringFromParsec:]
  -[WBSCompletionQuery parsecFeedbackQueryIdentifier]
  -[WBSCompletionQuery setParsecFeedbackQueryIdentifier:]
  -[WBSCompletionQuery parsecSearchRequest]
  -[WBSCompletionQuery setParsecSearchRequest:]
  -[WBSCompletionQuery searchSuggestionProviderIdentifier]
  -[WBSCompletionQuery setSearchSuggestionProviderIdentifier:]
  -[WBSCompletionQuery searchSuggestionProviderLatency]
  -[WBSCompletionQuery setSearchSuggestionProviderLatency:]
  -[WBSCompletionQuery parsecLatency]
  -[WBSCompletionQuery setParsecLatency:]
  -[WBSCompletionQuery indexInFeedbackArray]
  -[WBSCompletionQuery setIndexInFeedbackArray:]


WBSContactAutoFillSet : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *controlIDToValueMap
 @property  NSString *label
 @property  NSArray *fillDisplayProperties
 @property  NSArray *skipDisplayProperties
 @property  NSSet *propertiesToFillOrSkip

  // class methods
  +[WBSContactAutoFillSet displayStringsForSkipMatches:matchesForForm:formDataController:]
  +[WBSContactAutoFillSet displayStringsForFillMatches:skipMatches:matchesForForm:label:formDataController:]

  // instance methods
  -[WBSContactAutoFillSet .cxx_destruct]
  -[WBSContactAutoFillSet label]
  -[WBSContactAutoFillSet controlIDToValueMap]
  -[WBSContactAutoFillSet fillDisplayProperties]
  -[WBSContactAutoFillSet initWithControlIDToValueMap:label:fillDisplayProperties:skipDisplayProperties:propertiesToFillOrSkip:]
  -[WBSContactAutoFillSet skipDisplayProperties]
  -[WBSContactAutoFillSet propertiesToFillOrSkip]


WBSContactsEntry : NSObject /usr/lib/libc++.1.dylib
 @property  CNContact *contact

  // class methods
  +[WBSContactsEntry _isContactsProperty:]
  +[WBSContactsEntry _isContactsLabel:]
  +[WBSContactsEntry isWBSProxyProperty:]
  +[WBSContactsEntry _valueStringForValue:wbsProperty:wbsComponent:atIndex:]
  +[WBSContactsEntry _valueStringForValue:wbsProperty:wbsComponent:]
  +[WBSContactsEntry _valueStringForWBSComponent:inAddress:]
  +[WBSContactsEntry _isValueAStringForContactsProperty:]
  +[WBSContactsEntry _valueStringForWBSComponent:inInstantMessageAddress:]
  +[WBSContactsEntry localizedWBSPropertyOrLabel:]

  // instance methods
  -[WBSContactsEntry .cxx_destruct]
  -[WBSContactsEntry contact]
  -[WBSContactsEntry fullName]
  -[WBSContactsEntry initWithContact:]
  -[WBSContactsEntry _numberOfValuesForWBSProperty:]
  -[WBSContactsEntry valueForWBSProxyProperty:]
  -[WBSContactsEntry _numberOfValuesForWBSProperty:andContact:]
  -[WBSContactsEntry valueStringForWBSProperty:wbsComponent:atIndex:]


WBSContactsHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSContactsHelper CNContactKeyFromWBSABKey:]
  +[WBSContactsHelper WBSABKeyFromCNContactKey:]


WBSCredentialMatch : WBSFormAutoFillItem
 @property  NSURLCredential *credential
 @property  NSURLProtectionSpace *protectionSpace

  // instance methods
  -[WBSCredentialMatch .cxx_destruct]
  -[WBSCredentialMatch completion]
  -[WBSCredentialMatch protectionSpace]
  -[WBSCredentialMatch credential]
  -[WBSCredentialMatch initWithCredential:]
  -[WBSCredentialMatch initWithCredential:protectionSpace:]


WBSContextResultGrouper : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long minimumNumberOfItemsRequiredInGroup

  // instance methods
  -[WBSContextResultGrouper init]
  -[WBSContextResultGrouper groupItems:]
  -[WBSContextResultGrouper minimumNumberOfItemsRequiredInGroup]
  -[WBSContextResultGrouper setMinimumNumberOfItemsRequiredInGroup:]


WBSCreditCardData : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *cardName
 @property  NSString *cardholderName
 @property  NSString *cardNumber
 @property  NSDate *lastUsedDate
 @property  NSDate *expirationDate
 @property  NSString *cardSecurityCode
 @property  PKVirtualCard *virtualCard
 @property  UIImage *virtualCardIcon

  // instance methods
  -[WBSCreditCardData .cxx_destruct]
  -[WBSCreditCardData expirationDate]
  -[WBSCreditCardData lastUsedDate]
  -[WBSCreditCardData setLastUsedDate:]
  -[WBSCreditCardData initWithCameraReaderOutput:]
  -[WBSCreditCardData cardNumber]
  -[WBSCreditCardData cardName]
  -[WBSCreditCardData cardSecurityCode]
  -[WBSCreditCardData cardholderName]
  -[WBSCreditCardData virtualCard]
  -[WBSCreditCardData setCardholderName:]
  -[WBSCreditCardData setCardNumber:]
  -[WBSCreditCardData initWithCardName:number:cardholderName:expirationDate:securityCode:]
  -[WBSCreditCardData _expirationDateFromPKVirtualCard:]
  -[WBSCreditCardData initWithCardName:number:cardholderName:expirationDate:]
  -[WBSCreditCardData creditCardDataByUpdatingLastUsedDate:]
  -[WBSCreditCardData initWithVirtualCard:]
  -[WBSCreditCardData initWithVirtualCardCredentials:virtualCard:]
  -[WBSCreditCardData virtualCardIcon]
  -[WBSCreditCardData initWithKeychainRepresentation:]
  -[WBSCreditCardData keychainRepresentation]
  -[WBSCreditCardData creditCardDataByMergingCardholderNameAndExpirationDateFromCard:]
  -[WBSCreditCardData hasSameCreditCardInformationAs:]
  -[WBSCreditCardData setCardName:]


WBSLeadImageCacheRequest : WBSSiteMetadataRequest
  // class methods
  +[WBSLeadImageCacheRequest requestWithURL:]


WBSCreditCardDataController : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *creditCardData

  // class methods
  +[WBSCreditCardDataController hasCreditCardData]

  // instance methods
  -[WBSCreditCardDataController init]
  -[WBSCreditCardDataController .cxx_destruct]
  -[WBSCreditCardDataController savePendingChangesBeforeTermination]
  -[WBSCreditCardDataController authenticationRequiredForVirtualCard:]
  -[WBSCreditCardDataController getVirtualCardsWithCompletionHandler:]
  -[WBSCreditCardDataController getCreditCardDataWithCompletionHandler:]
  -[WBSCreditCardDataController markCreditCardDataAsMostRecentlyUsed:]
  -[WBSCreditCardDataController getCreditCardDataToFill:externalizedContext:completionHandler:]
  -[WBSCreditCardDataController _sortCreditCardDataArray:]
  -[WBSCreditCardDataController _creditCardData]
  -[WBSCreditCardDataController _shouldOfferVirtualCards]
  -[WBSCreditCardDataController virtualCardFieldsToRequest]
  -[WBSCreditCardDataController _virtualCardDataFromPKVirtualCards:]
  -[WBSCreditCardDataController _deduplicatedVirtualCardDataArray:andCreditCardDataArray:]
  -[WBSCreditCardDataController hasUsedNonVirtualCard]
  -[WBSCreditCardDataController _neverSavedCreditCardSuffixFromCardNumber:]
  -[WBSCreditCardDataController creditCardData]
  -[WBSCreditCardDataController shouldNeverSaveCardWithNumber:]
  -[WBSCreditCardDataController existingCardWithNumber:]
  -[WBSCreditCardDataController _uniqueCardNameForCardName:]
  -[WBSCreditCardDataController defaultNameForCardOfType:cardholderName:]
  -[WBSCreditCardDataController creditCardDataDidChange]
  -[WBSCreditCardDataController replaceCreditCardData:withCard:]
  -[WBSCreditCardDataController setHasUsedNonVirtualCard]
  -[WBSCreditCardDataController _removeNeverSaveCreditCardData:]
  -[WBSCreditCardDataController shouldAddCardWithNumber:]
  -[WBSCreditCardDataController saveCreditCardData:]
  -[WBSCreditCardDataController _neverSavedCreditCardSuffixFromCard:]
  -[WBSCreditCardDataController invalidateCreditCardData]
  -[WBSCreditCardDataController urlForVirtualCard:]
  -[WBSCreditCardDataController getVirtualCardCredentialsFromKeychainWithCompletionHandler:]
  -[WBSCreditCardDataController savableCreditCardDataInForm:]
  -[WBSCreditCardDataController removeCreditCardData:]
  -[WBSCreditCardDataController saveCreditCardDataIfAllowed:]
  -[WBSCreditCardDataController isCreditCardDataSaved:]
  -[WBSCreditCardDataController neverSaveCreditCardData:]
  -[WBSCreditCardDataController clearCreditCardData]
  -[WBSCreditCardDataController _testVirtualCard]
  -[WBSCreditCardDataController isVirtualCard:completion:]


WBSForYouRecommendationMediator : NSObject /usr/lib/libc++.1.dylib <UABestAppSuggestionManagerDelegate>
 @property  NSArray *dataSources
 @property  BOOL ignoreMinimumNumberOfRecommendationsPerTopic
 @property  BOOL suppressHistoryDeduplication
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSForYouRecommendationMediator areSiriSuggestionsEnabled]
  +[WBSForYouRecommendationMediator _adjustedTopicsWithTopics:]
  +[WBSForYouRecommendationMediator _rankRecommendationsInPlace:history:weightManager:suppressHistoryDeduplication:]
  +[WBSForYouRecommendationMediator _titleForRecommendationSource:]
  +[WBSForYouRecommendationMediator _titleForRecommendationTopicSource:]
  +[WBSForYouRecommendationMediator scoreForRecommendation:weightManager:simplifiedURLStringToLastVisitedDateMap:]

  // instance methods
  -[WBSForYouRecommendationMediator dealloc]
  -[WBSForYouRecommendationMediator .cxx_destruct]
  -[WBSForYouRecommendationMediator dataSources]
  -[WBSForYouRecommendationMediator bestAppSuggestionChanged:]
  -[WBSForYouRecommendationMediator downvoteSource:]
  -[WBSForYouRecommendationMediator _didUpdateFoundInSuggestions:]
  -[WBSForYouRecommendationMediator banURLsOfSameDomainAsURL:postingChangeNotificationWhenDone:]
  -[WBSForYouRecommendationMediator _createPreferenceManagerIfNecessary]
  -[WBSForYouRecommendationMediator _fetchImagesForRecommendations:recommendationsDispatchGroup:]
  -[WBSForYouRecommendationMediator _retrieveFoundInRecommendationsWithCompletionHandler:]
  -[WBSForYouRecommendationMediator _dataSourceWeightManager]
  -[WBSForYouRecommendationMediator obtainMessagesImagesWherePossibleForRecommendations:completionHandler:]
  -[WBSForYouRecommendationMediator loadLinkPresentationMetadataForMessageWithGUID:completionHandler:]
  -[WBSForYouRecommendationMediator fetchImageForRecommendation:completionHandler:]
  -[WBSForYouRecommendationMediator _createAppSuggestionsManagerIfNecessary]
  -[WBSForYouRecommendationMediator beginListeningForURLSuggestionChanges]
  -[WBSForYouRecommendationMediator stopListeningForURLSuggestionChanges]
  -[WBSForYouRecommendationMediator downvoteSource:postingChangeNotificationWhenDone:]
  -[WBSForYouRecommendationMediator initWithContextClient:historyProvider:]
  -[WBSForYouRecommendationMediator updatedTopicsWithCompletionHandler:]
  -[WBSForYouRecommendationMediator banURLsOfSameDomainAsURL:]
  -[WBSForYouRecommendationMediator updatedRecommendationsForTopics:withCompletionHandler:]
  -[WBSForYouRecommendationMediator retrieveHandoffRecommendationWithCompletionHandler:]
  -[WBSForYouRecommendationMediator beginListeningForHandoffActivity]
  -[WBSForYouRecommendationMediator endListeningForHandoffActivity]
  -[WBSForYouRecommendationMediator clearDataSourceWeights]
  -[WBSForYouRecommendationMediator analyticsMetadataForRecommendation:]
  -[WBSForYouRecommendationMediator recommendationFromDictionary:]
  -[WBSForYouRecommendationMediator ignoreMinimumNumberOfRecommendationsPerTopic]
  -[WBSForYouRecommendationMediator setIgnoreMinimumNumberOfRecommendationsPerTopic:]
  -[WBSForYouRecommendationMediator suppressHistoryDeduplication]
  -[WBSForYouRecommendationMediator setSuppressHistoryDeduplication:]


WBSCreditCardFormatter : NSFormatter /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 @property  BOOL showLastFourDigits
 @property  BOOL showCreditCardNumber
 @property  BOOL allowsUnknownCardTypes
 @property  BOOL isVirtualCard

  // instance methods
  -[WBSCreditCardFormatter stringForObjectValue:]
  -[WBSCreditCardFormatter getObjectValue:forString:errorDescription:]
  -[WBSCreditCardFormatter isPartialStringValid:newEditingString:errorDescription:]
  -[WBSCreditCardFormatter isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:]
  -[WBSCreditCardFormatter showCreditCardNumber]
  -[WBSCreditCardFormatter _formattedStringForNormalizedNumber:showCreditCardNumber:]
  -[WBSCreditCardFormatter allowsUnknownCardTypes]
  -[WBSCreditCardFormatter _normalizedSelectionRangeForFormattedCreditCardNumber:withOriginalSelectionRange:]
  -[WBSCreditCardFormatter _selectionRangeInFormattedCreditCardNumber:forNormalizedSelectionRange:inNormalizedCreditCardNumber:]
  -[WBSCreditCardFormatter isVirtualCard]
  -[WBSCreditCardFormatter showLastFourDigits]
  -[WBSCreditCardFormatter setShowLastFourDigits:]
  -[WBSCreditCardFormatter setShowCreditCardNumber:]
  -[WBSCreditCardFormatter setAllowsUnknownCardTypes:]
  -[WBSCreditCardFormatter setIsVirtualCard:]


WBSSafariSandboxBroker : NSObject /usr/lib/libc++.1.dylib <WBSSafariSandboxBrokerProtocol>
 @property  NSObject<OS_os_log> *log
 @property  int pid
 @property  {?=[8I]} auditToken

  // instance methods
  -[WBSSafariSandboxBroker .cxx_destruct]
  -[WBSSafariSandboxBroker auditToken]
  -[WBSSafariSandboxBroker log]
  -[WBSSafariSandboxBroker pid]
  -[WBSSafariSandboxBroker loadLinkPresentationMetdataForMessageWithGUID:completionHandler:]
  -[WBSSafariSandboxBroker initWithPID:auditToken:]


WBSFaviconProviderIconInfo : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *pageURLString
 @property  NSString *iconURLString
 @property  NSString *UUIDString
 @property  NSDate *dateAdded
 @property  {CGSize=dd} size
 @property  BOOL hasGeneratedResolutions
 @property  BOOL isRejectedResource

  // instance methods
  -[WBSFaviconProviderIconInfo init]
  -[WBSFaviconProviderIconInfo .cxx_destruct]
  -[WBSFaviconProviderIconInfo size]
  -[WBSFaviconProviderIconInfo UUIDString]
  -[WBSFaviconProviderIconInfo dateAdded]
  -[WBSFaviconProviderIconInfo iconURLString]
  -[WBSFaviconProviderIconInfo initWithPageURLString:iconURLString:UUIDString:dateAdded:size:hasGeneratedResolutions:isRejectedResource:]
  -[WBSFaviconProviderIconInfo pageURLString]
  -[WBSFaviconProviderIconInfo hasGeneratedResolutions]
  -[WBSFaviconProviderIconInfo isRejectedResource]


WBSCyclerBookmarkLeafRepresentation : WBSCyclerBookmarkRepresentation
 @property  NSURL *url

  // class methods
  +[WBSCyclerBookmarkLeafRepresentation supportsSecureCoding]

  // instance methods
  -[WBSCyclerBookmarkLeafRepresentation copyWithZone:]
  -[WBSCyclerBookmarkLeafRepresentation encodeWithCoder:]
  -[WBSCyclerBookmarkLeafRepresentation initWithCoder:]
  -[WBSCyclerBookmarkLeafRepresentation .cxx_destruct]
  -[WBSCyclerBookmarkLeafRepresentation url]
  -[WBSCyclerBookmarkLeafRepresentation setURL:]
  -[WBSCyclerBookmarkLeafRepresentation isEquivalent:]
  -[WBSCyclerBookmarkLeafRepresentation initWithTitle:uniqueIdentifier:]
  -[WBSCyclerBookmarkLeafRepresentation initWithURL:title:uniqueIdentifier:]


WBSBrowserTabCompletionMatch : WBSTabCompletionMatch
 @property  NSUUID *tabUUID
 @property  NSUUID *windowUUID
 @property  unsigned long tabIndex

  // instance methods
  -[WBSBrowserTabCompletionMatch .cxx_destruct]
  -[WBSBrowserTabCompletionMatch tabIndex]
  -[WBSBrowserTabCompletionMatch parsecDomainIdentifier]
  -[WBSBrowserTabCompletionMatch tabUUID]
  -[WBSBrowserTabCompletionMatch initWithTabUUID:windowUUID:tabIndex:userTypedString:tabURL:tabTitle:forQueryID:]
  -[WBSBrowserTabCompletionMatch windowUUID]


WBSCyclerBookmarkListRepresentation : WBSCyclerBookmarkRepresentation <NSFastEnumeration>
 @property  unsigned long numberOfChildren

  // class methods
  +[WBSCyclerBookmarkListRepresentation supportsSecureCoding]

  // instance methods
  -[WBSCyclerBookmarkListRepresentation copyWithZone:]
  -[WBSCyclerBookmarkListRepresentation addChild:]
  -[WBSCyclerBookmarkListRepresentation countByEnumeratingWithState:objects:count:]
  -[WBSCyclerBookmarkListRepresentation encodeWithCoder:]
  -[WBSCyclerBookmarkListRepresentation initWithCoder:]
  -[WBSCyclerBookmarkListRepresentation .cxx_destruct]
  -[WBSCyclerBookmarkListRepresentation numberOfChildren]
  -[WBSCyclerBookmarkListRepresentation childAtIndex:]
  -[WBSCyclerBookmarkListRepresentation insertChild:atIndex:]
  -[WBSCyclerBookmarkListRepresentation isEquivalent:]
  -[WBSCyclerBookmarkListRepresentation initWithTitle:uniqueIdentifier:]
  -[WBSCyclerBookmarkListRepresentation pairsOfBookmarksWithDifferingExtraAttributesComparedTo:]
  -[WBSCyclerBookmarkListRepresentation _tryToDeleteDescendant:]
  -[WBSCyclerBookmarkListRepresentation containsChild:]
  -[WBSCyclerBookmarkListRepresentation containsDescendant:]
  -[WBSCyclerBookmarkListRepresentation descendantWithUniqueIdentifier:]
  -[WBSCyclerBookmarkListRepresentation allDescendantsPassingTest:]
  -[WBSCyclerBookmarkListRepresentation randomDescendantPassingTest:]
  -[WBSCyclerBookmarkListRepresentation deleteChild:]
  -[WBSCyclerBookmarkListRepresentation deleteDescendant:]
  -[WBSCyclerBookmarkListRepresentation deleteAllChildren]
  -[WBSCyclerBookmarkListRepresentation randomDescendant]
  -[WBSCyclerBookmarkListRepresentation randomListDescendant]


WBSCyclerBookmarkOperationContext : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSCyclerTestTarget> *testTarget
 @property  WBSCyclerBookmarkListRepresentation *topLevelBookmark
 @property  NSString *titlePrefix

  // instance methods
  -[WBSCyclerBookmarkOperationContext .cxx_destruct]
  -[WBSCyclerBookmarkOperationContext _isBookmarkPrefixed:]
  -[WBSCyclerBookmarkOperationContext _buildDictionaryOfDescendantIdentifiersToParentIdentifiersFromList:]
  -[WBSCyclerBookmarkOperationContext _copyBookmark:filteringWithIdentifierWhitelist:]
  -[WBSCyclerBookmarkOperationContext _isBookmarkValid:]
  -[WBSCyclerBookmarkOperationContext randomDescendantOfList:enforcingTitlePrefixValidity:passingTest:]
  -[WBSCyclerBookmarkOperationContext randomValidStrictDescendantOfList:]
  -[WBSCyclerBookmarkOperationContext setTitlePrefix:]
  -[WBSCyclerBookmarkOperationContext filterOutBookmarksWithoutTitlePrefixInList:]
  -[WBSCyclerBookmarkOperationContext randomBookmarkTitle]
  -[WBSCyclerBookmarkOperationContext randomValidStrictDescendantOfTopLevelBookmark]
  -[WBSCyclerBookmarkOperationContext testTarget]
  -[WBSCyclerBookmarkOperationContext setTestTarget:]
  -[WBSCyclerBookmarkOperationContext topLevelBookmark]
  -[WBSCyclerBookmarkOperationContext setTopLevelBookmark:]
  -[WBSCyclerBookmarkOperationContext titlePrefix]


WBSCyclerBookmarkRepresentation : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *uniqueIdentifier
 @property  NSString *title
 @property  NSDictionary *extraAttributes

  // class methods
  +[WBSCyclerBookmarkRepresentation supportsSecureCoding]

  // instance methods
  -[WBSCyclerBookmarkRepresentation init]
  -[WBSCyclerBookmarkRepresentation copyWithZone:]
  -[WBSCyclerBookmarkRepresentation encodeWithCoder:]
  -[WBSCyclerBookmarkRepresentation initWithCoder:]
  -[WBSCyclerBookmarkRepresentation .cxx_destruct]
  -[WBSCyclerBookmarkRepresentation title]
  -[WBSCyclerBookmarkRepresentation setTitle:]
  -[WBSCyclerBookmarkRepresentation uniqueIdentifier]
  -[WBSCyclerBookmarkRepresentation setUniqueIdentifier:]
  -[WBSCyclerBookmarkRepresentation extraAttributes]
  -[WBSCyclerBookmarkRepresentation setExtraAttributes:]
  -[WBSCyclerBookmarkRepresentation isEquivalent:]
  -[WBSCyclerBookmarkRepresentation initWithTitle:uniqueIdentifier:]
  -[WBSCyclerBookmarkRepresentation pairsOfBookmarksWithDifferingExtraAttributesComparedTo:]


WBSCyclerBookmarksTestSuite : NSObject /usr/lib/libc++.1.dylib <WBSCyclerTestSuite>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL finished

  // class methods
  +[WBSCyclerBookmarksTestSuite setValue:forConfigurationKey:]

  // instance methods
  -[WBSCyclerBookmarksTestSuite init]
  -[WBSCyclerBookmarksTestSuite .cxx_destruct]
  -[WBSCyclerBookmarksTestSuite isFinished]
  -[WBSCyclerBookmarksTestSuite canHandleRequest:]
  -[WBSCyclerBookmarksTestSuite tearDown]
  -[WBSCyclerBookmarksTestSuite setUp]
  -[WBSCyclerBookmarksTestSuite _validateServerBookmarksWithTarget:completionHandler:]
  -[WBSCyclerBookmarksTestSuite _errorWithCode:userInfo:]
  -[WBSCyclerBookmarksTestSuite _validateServerBookmarksAfterInitialSyncWithTarget:completionHandler:]
  -[WBSCyclerBookmarksTestSuite _validateServerBookmarksWithTarget:initialBookmarks:completionHandler:]
  -[WBSCyclerBookmarksTestSuite _validateServerBookmarksAfterClearingLocallyWithTarget:initialBookmarks:completionHandler:]
  -[WBSCyclerBookmarksTestSuite _performCloudKitSecondaryMigrationAfterClearingBookmarksWithTarget:initialBookmarks:completionHandler:]
  -[WBSCyclerBookmarksTestSuite _performFinalServerBookmarkValidationAfterClearingAndSyncingWithInitialBookmarks:completionHandler:]
  -[WBSCyclerBookmarksTestSuite _descriptionForErrorCode:]
  -[WBSCyclerBookmarksTestSuite runWithTarget:completionHandler:]
  -[WBSCyclerBookmarksTestSuite handleRequest:withTarget:completionHandler:]


WBSCyclerCloudKitMigrationTestSuite : NSObject /usr/lib/libc++.1.dylib <WBSCyclerTestSuite>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL finished

  // class methods
  +[WBSCyclerCloudKitMigrationTestSuite setValue:forConfigurationKey:]

  // instance methods
  -[WBSCyclerCloudKitMigrationTestSuite init]
  -[WBSCyclerCloudKitMigrationTestSuite .cxx_destruct]
  -[WBSCyclerCloudKitMigrationTestSuite isFinished]
  -[WBSCyclerCloudKitMigrationTestSuite _descriptionForErrorCode:]
  -[WBSCyclerCloudKitMigrationTestSuite runWithTarget:completionHandler:]
  -[WBSCyclerCloudKitMigrationTestSuite _createRandomBookmarkWithTarget:completionHandler:]
  -[WBSCyclerCloudKitMigrationTestSuite _generateDAVServerIDsForExistingBookmarksWithTarget:completionHandler:]
  -[WBSCyclerCloudKitMigrationTestSuite _migrateToCloudKitWithTarget:completionHandler:]
  -[WBSCyclerCloudKitMigrationTestSuite _validateResultsOfMigrationWithTarget:completionHandler:]
  -[WBSCyclerCloudKitMigrationTestSuite _fetchBookmarksPriorToMigrationWithTarget:completionHandler:]
  -[WBSCyclerCloudKitMigrationTestSuite _errorWithCode:]


WBSPerSitePreferenceTimeout : NSObject /usr/lib/libc++.1.dylib
 @property  double interval
 @property  id fallbackValue

  // class methods
  +[WBSPerSitePreferenceTimeout timeoutWithInterval:fallbackValue:]

  // instance methods
  -[WBSPerSitePreferenceTimeout .cxx_destruct]
  -[WBSPerSitePreferenceTimeout interval]
  -[WBSPerSitePreferenceTimeout initWithInterval:fallbackValue:]
  -[WBSPerSitePreferenceTimeout fallbackValue]


WBSPerSitePreferenceManager : NSObject /usr/lib/libc++.1.dylib <WBSPerSitePreferenceManager>
 @property  <WBSPerSitePreferenceManagerStorageDelegate> *storageDelegate
 @property  <WBSPerSitePreferenceManagerDefaultsDelegate> *defaultsDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSPerSitePreferenceManagerDelegate> *delegate

  // instance methods
  -[WBSPerSitePreferenceManager delegate]
  -[WBSPerSitePreferenceManager setDelegate:]
  -[WBSPerSitePreferenceManager .cxx_destruct]
  -[WBSPerSitePreferenceManager preferences]
  -[WBSPerSitePreferenceManager didUpdatePreference:toValue:forDomain:]
  -[WBSPerSitePreferenceManager setStorageDelegate:]
  -[WBSPerSitePreferenceManager setDefaultsDelegate:]
  -[WBSPerSitePreferenceManager getValueOfPreference:forDomain:withTimeout:usingBlock:]
  -[WBSPerSitePreferenceManager getAllDomainsConfiguredForPreference:usingBlock:]
  -[WBSPerSitePreferenceManager getDefaultPreferenceValueForPreference:completionHandler:]
  -[WBSPerSitePreferenceManager valuesForPreference:]
  -[WBSPerSitePreferenceManager localizedStringForValue:inPreference:]
  -[WBSPerSitePreferenceManager setValue:ofPreference:forDomain:completionHandler:]
  -[WBSPerSitePreferenceManager setDefaultValue:ofPreference:completionHandler:]
  -[WBSPerSitePreferenceManager removePreferenceValuesForDomains:fromPreference:completionHandler:]
  -[WBSPerSitePreferenceManager _validatePreferenceValue:inPreference:]
  -[WBSPerSitePreferenceManager storageDelegate]
  -[WBSPerSitePreferenceManager defaultsDelegate]


WBSCyclerConnectionManager : NSObject /usr/lib/libc++.1.dylib <NSXPCListenerDelegate>
 @property  <WBSCyclerTestTarget> *testTarget
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSCyclerConnectionManager isCyclerEnabled]

  // instance methods
  -[WBSCyclerConnectionManager init]
  -[WBSCyclerConnectionManager .cxx_destruct]
  -[WBSCyclerConnectionManager listener:shouldAcceptNewConnection:]
  -[WBSCyclerConnectionManager connect]
  -[WBSCyclerConnectionManager testTarget]
  -[WBSCyclerConnectionManager initWithTestTarget:]


WBSCyclerCreateBookmarkOperation : NSObject /usr/lib/libc++.1.dylib <WBSCyclerBookmarkOperation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCyclerCreateBookmarkOperation executeWithContext:completionHandler:]
  -[WBSCyclerCreateBookmarkOperation _createRandomLeafWithContext:completionHandler:]
  -[WBSCyclerCreateBookmarkOperation _createRandomListWithContext:completionHandler:]
  -[WBSCyclerCreateBookmarkOperation _randomListWithContext:]


WBSSearchImpressionAnalyticsRecorder : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *searchProviders
 @property  WBSSearchProvider *defaultSearchProvider

  // class methods
  +[WBSSearchImpressionAnalyticsRecorder sharedRecorder]

  // instance methods
  -[WBSSearchImpressionAnalyticsRecorder init]
  -[WBSSearchImpressionAnalyticsRecorder .cxx_destruct]
  -[WBSSearchImpressionAnalyticsRecorder setSearchProviders:]
  -[WBSSearchImpressionAnalyticsRecorder setDefaultSearchProvider:]
  -[WBSSearchImpressionAnalyticsRecorder _searchProviderForURL:]
  -[WBSSearchImpressionAnalyticsRecorder didActualizeImpressionForURL:isFromUnifiedField:]
  -[WBSSearchImpressionAnalyticsRecorder searchProviders]
  -[WBSSearchImpressionAnalyticsRecorder defaultSearchProvider]


WBSCyclerDeleteBookmarkOperation : NSObject /usr/lib/libc++.1.dylib <WBSCyclerBookmarkOperation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCyclerDeleteBookmarkOperation executeWithContext:completionHandler:]


WBSPerSitePreference : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *identifier

  // class methods
  +[WBSPerSitePreference localizedStringForBinaryPreferenceValue:]

  // instance methods
  -[WBSPerSitePreference copyWithZone:]
  -[WBSPerSitePreference .cxx_destruct]
  -[WBSPerSitePreference identifier]
  -[WBSPerSitePreference initWithIdentifier:]


WBSCyclerModifyBookmarkOperation : NSObject /usr/lib/libc++.1.dylib <WBSCyclerBookmarkOperation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCyclerModifyBookmarkOperation executeWithContext:completionHandler:]
  -[WBSCyclerModifyBookmarkOperation _changeTitleOfBookmark:withContext:completionHandler:]
  -[WBSCyclerModifyBookmarkOperation _changeURLOfBookmark:withContext:completionHandler:]


WBSCyclerMoveBookmarkOperation : NSObject /usr/lib/libc++.1.dylib <WBSCyclerBookmarkOperation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCyclerMoveBookmarkOperation executeWithContext:completionHandler:]


WBSCyclerOperation : NSObject /usr/lib/libc++.1.dylib
 @property  @? block
 @property  BOOL finished
 @property  BOOL executing
 @property  double nextBackoffTimeInterval

  // instance methods
  -[WBSCyclerOperation init]
  -[WBSCyclerOperation .cxx_destruct]
  -[WBSCyclerOperation block]
  -[WBSCyclerOperation isFinished]
  -[WBSCyclerOperation isExecuting]
  -[WBSCyclerOperation setBlock:]
  -[WBSCyclerOperation executeWithCompletionHandler:]
  -[WBSCyclerOperation initWithMaximumNumberOfAttempts:backoffRatio:]
  -[WBSCyclerOperation nextBackoffTimeInterval]


WBSCyclerRandomnessUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSCyclerRandomnessUtilities initialize]
  +[WBSCyclerRandomnessUtilities seed]
  +[WBSCyclerRandomnessUtilities randomString]
  +[WBSCyclerRandomnessUtilities setSeed:]
  +[WBSCyclerRandomnessUtilities randomElementOfArray:]
  +[WBSCyclerRandomnessUtilities randomElementOfArray:relativeProbabilities:]
  +[WBSCyclerRandomnessUtilities randomIntegerWithUpperBound:]
  +[WBSCyclerRandomnessUtilities randomURL]
  +[WBSCyclerRandomnessUtilities reseed]
  +[WBSCyclerRandomnessUtilities _randomStringWithCharactersFromString:]


WBSTabDialogCancellationExemption : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSTabDialogCancellationExemption sameOriginNavigationExemption:]
  +[WBSTabDialogCancellationExemption provisionalNavigationExemption]
  +[WBSTabDialogCancellationExemption committedNavigationExemption]

  // instance methods
  -[WBSTabDialogCancellationExemption init]
  -[WBSTabDialogCancellationExemption .cxx_destruct]
  -[WBSTabDialogCancellationExemption initWithCancellationHandler:]
  -[WBSTabDialogCancellationExemption isExemptFromCancellationInContext:]


WBSCyclerService : NSObject /usr/lib/libc++.1.dylib <NSXPCListenerDelegate, WBSCyclerServiceProtocol>
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCyclerService init]
  -[WBSCyclerService .cxx_destruct]
  -[WBSCyclerService identifier]
  -[WBSCyclerService listener:shouldAcceptNewConnection:]
  -[WBSCyclerService setIdentifier:]
  -[WBSCyclerService _descriptionForErrorCode:]
  -[WBSCyclerService _errorWithCode:]
  -[WBSCyclerService setTestTargetEndpoint:reply:]
  -[WBSCyclerService _postFinishNotificationWithError:]
  -[WBSCyclerService _setTestSuiteName:reply:]
  -[WBSCyclerService _setSeed:reply:]
  -[WBSCyclerService _startCyclingFromBeginning:]
  -[WBSCyclerService setValue:forConfigurationKey:reply:]
  -[WBSCyclerService startCyclingFromBeginning:reply:]
  -[WBSCyclerService stopCyclingWithReply:]
  -[WBSCyclerService sendRequestToTestSuite:reply:]
  -[WBSCyclerService fetchStatusWithReply:]


WBSCyclerServiceProxy : NSObject /usr/lib/libc++.1.dylib <WBSCyclerServiceProtocol>
 @property  @? connectionInvalidationHandler
 @property  @? errorHandler

  // instance methods
  -[WBSCyclerServiceProxy init]
  -[WBSCyclerServiceProxy dealloc]
  -[WBSCyclerServiceProxy .cxx_destruct]
  -[WBSCyclerServiceProxy setErrorHandler:]
  -[WBSCyclerServiceProxy errorHandler]
  -[WBSCyclerServiceProxy setTestTargetEndpoint:reply:]
  -[WBSCyclerServiceProxy _cyclerProxy]
  -[WBSCyclerServiceProxy setValue:forConfigurationKey:reply:]
  -[WBSCyclerServiceProxy startCyclingFromBeginning:reply:]
  -[WBSCyclerServiceProxy stopCyclingWithReply:]
  -[WBSCyclerServiceProxy sendRequestToTestSuite:reply:]
  -[WBSCyclerServiceProxy fetchStatusWithReply:]
  -[WBSCyclerServiceProxy connectionInvalidationHandler]
  -[WBSCyclerServiceProxy setConnectionInvalidationHandler:]


WBSCyclerStatus : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSString *activeTestSuiteName
 @property  unsigned long seed
 @property  BOOL connectedToTestTarget
 @property  BOOL running

  // class methods
  +[WBSCyclerStatus supportsSecureCoding]

  // instance methods
  -[WBSCyclerStatus init]
  -[WBSCyclerStatus encodeWithCoder:]
  -[WBSCyclerStatus initWithCoder:]
  -[WBSCyclerStatus .cxx_destruct]
  -[WBSCyclerStatus isRunning]
  -[WBSCyclerStatus seed]
  -[WBSCyclerStatus initWithActiveTestSuiteName:seed:isConnectedToTestTarget:isRunning:]
  -[WBSCyclerStatus activeTestSuiteName]
  -[WBSCyclerStatus isConnectedToTestTarget]


WBSCyclerTestRunner : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSCyclerTestSuite> *testSuite
 @property  <WBSCyclerTestTarget> *target
 @property  BOOL running

  // instance methods
  -[WBSCyclerTestRunner init]
  -[WBSCyclerTestRunner dealloc]
  -[WBSCyclerTestRunner .cxx_destruct]
  -[WBSCyclerTestRunner target]
  -[WBSCyclerTestRunner isRunning]
  -[WBSCyclerTestRunner _stop]
  -[WBSCyclerTestRunner runWithCompletionHandler:]
  -[WBSCyclerTestRunner _descriptionForErrorCode:]
  -[WBSCyclerTestRunner _errorWithCode:]
  -[WBSCyclerTestRunner requestStop]
  -[WBSCyclerTestRunner handleRequest:completionHandler:]
  -[WBSCyclerTestRunner testSuite]
  -[WBSCyclerTestRunner initWithTestSuite:target:]
  -[WBSCyclerTestRunner _performNextIterationWithCompletionHandler:]
  -[WBSCyclerTestRunner _handleNextPendingRequestWithCompletionHandler:]


WBSHistoryVisitIdentifier : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *urlString
 @property  double visitTime
 @property  WBSHistoryItem *associatedHistoryItem
 @property  WBSHistoryVisit *associatedHistoryVisit

  // class methods
  +[WBSHistoryVisitIdentifier supportsSecureCoding]

  // instance methods
  -[WBSHistoryVisitIdentifier isEqual:]
  -[WBSHistoryVisitIdentifier copyWithZone:]
  -[WBSHistoryVisitIdentifier encodeWithCoder:]
  -[WBSHistoryVisitIdentifier initWithCoder:]
  -[WBSHistoryVisitIdentifier .cxx_destruct]
  -[WBSHistoryVisitIdentifier urlString]
  -[WBSHistoryVisitIdentifier visitTime]
  -[WBSHistoryVisitIdentifier associatedHistoryVisit]
  -[WBSHistoryVisitIdentifier initWithURLString:visitTime:]
  -[WBSHistoryVisitIdentifier associatedHistoryItem]
  -[WBSHistoryVisitIdentifier setAssociatedHistoryItem:]
  -[WBSHistoryVisitIdentifier setAssociatedHistoryVisit:]


WBSCyclerTestSuiteBookmarkAuxiliary : NSObject /usr/lib/libc++.1.dylib
 @property  float operationBackoffRatio

  // instance methods
  -[WBSCyclerTestSuiteBookmarkAuxiliary init]
  -[WBSCyclerTestSuiteBookmarkAuxiliary .cxx_destruct]
  -[WBSCyclerTestSuiteBookmarkAuxiliary hasPerformedOperation:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary performOperation:withTarget:options:completionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary performOperation:withTarget:completionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary validateBookmarks:expectingBookmarks:context:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary fetchAndValidateBookmarksWithExpectedBookmarks:context:completionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _errorWithCode:userInfo:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary resetOperation:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _descriptionForErrorCode:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _errorWithCode:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _formattedStringForBookmark:indentationLevel:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _expandedDescriptionForBookmark:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _attemptInitialClearWithTarget:options:completionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _attemptResetToDAVModeWithCompletionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _attemptToGenerateDAVServerIDsForExistingBookmarksWithCompletionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _attemptCloudKitMigrationWithCompletionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _attemptToClearDataWithOptions:completionHandler:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _attributeStringForBookmark:multiline:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary _descriptionForBookmark:]
  -[WBSCyclerTestSuiteBookmarkAuxiliary operationBackoffRatio]


WBSCyclerTestTargetProxyController : NSObject /usr/lib/libc++.1.dylib
 @property  @? disconnectionHandler
 @property  <WBSCyclerTestTarget> *testTargetProxy

  // instance methods
  -[WBSCyclerTestTargetProxyController init]
  -[WBSCyclerTestTargetProxyController dealloc]
  -[WBSCyclerTestTargetProxyController .cxx_destruct]
  -[WBSCyclerTestTargetProxyController initWithEndpoint:]
  -[WBSCyclerTestTargetProxyController setDisconnectionHandler:]
  -[WBSCyclerTestTargetProxyController testTargetProxy]
  -[WBSCyclerTestTargetProxyController disconnectionHandler]


WBSDistributedNotificationObserver : NSObject /usr/lib/libc++.1.dylib
 @property  @? notificationHandler
 @property  @? timeoutHandler

  // instance methods
  -[WBSDistributedNotificationObserver init]
  -[WBSDistributedNotificationObserver .cxx_destruct]
  -[WBSDistributedNotificationObserver _stopObserving]
  -[WBSDistributedNotificationObserver waitWithTimeout:]
  -[WBSDistributedNotificationObserver _startObserving]
  -[WBSDistributedNotificationObserver timeoutHandler]
  -[WBSDistributedNotificationObserver setTimeoutHandler:]
  -[WBSDistributedNotificationObserver initWithNotificationName:]
  -[WBSDistributedNotificationObserver initWithNotificationName:type:]
  -[WBSDistributedNotificationObserver _scheduleTimeoutTimerWithTimeout:]
  -[WBSDistributedNotificationObserver _didReceiveNotification:]
  -[WBSDistributedNotificationObserver _invalidateTimeoutTimer]
  -[WBSDistributedNotificationObserver _didTimeOut]
  -[WBSDistributedNotificationObserver setNotificationHandler:]
  -[WBSDistributedNotificationObserver notificationHandler]
  -[WBSDistributedNotificationObserver stopWaiting]


WBSEncryptedCloudKeyValueStore : NSObject /usr/lib/libc++.1.dylib
 @property  NSUbiquitousKeyValueStore *backingStore

  // class methods
  +[WBSEncryptedCloudKeyValueStore defaultStore]
  +[WBSEncryptedCloudKeyValueStore additionalStoreWithIdentifier:]

  // instance methods
  -[WBSEncryptedCloudKeyValueStore dealloc]
  -[WBSEncryptedCloudKeyValueStore synchronize]
  -[WBSEncryptedCloudKeyValueStore removeObjectForKey:]
  -[WBSEncryptedCloudKeyValueStore .cxx_destruct]
  -[WBSEncryptedCloudKeyValueStore dictionaryRepresentation]
  -[WBSEncryptedCloudKeyValueStore arrayForKey:]
  -[WBSEncryptedCloudKeyValueStore dictionaryForKey:]
  -[WBSEncryptedCloudKeyValueStore synchronizeWithCompletionHandler:]
  -[WBSEncryptedCloudKeyValueStore setArray:forKey:]
  -[WBSEncryptedCloudKeyValueStore setDictionary:forKey:]
  -[WBSEncryptedCloudKeyValueStore initWithStore:]
  -[WBSEncryptedCloudKeyValueStore .cxx_construct]
  -[WBSEncryptedCloudKeyValueStore backingStore]
  -[WBSEncryptedCloudKeyValueStore _setObject:forKey:]
  -[WBSEncryptedCloudKeyValueStore _dsidForPrimaryAccount]
  -[WBSEncryptedCloudKeyValueStore _currentPCSConfiguration]
  -[WBSEncryptedCloudKeyValueStore decryptEntry:]
  -[WBSEncryptedCloudKeyValueStore encryptPropertyList:]
  -[WBSEncryptedCloudKeyValueStore _objectForKey:ofClass:]


WBSFileLockPOSIX : NSObject /usr/lib/libc++.1.dylib <WBSFileLock>
  // instance methods
  -[WBSFileLockPOSIX dealloc]
  -[WBSFileLockPOSIX initWithFileDescriptor:]
  -[WBSFileLockPOSIX releaseLock]


WBSFileLockFactoryPOSIX : NSObject /usr/lib/libc++.1.dylib <WBSFileLockFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSFileLockFactoryPOSIX coordinationLockURL:]
  -[WBSFileLockFactoryPOSIX lockURL:error:]


_WBSFieldLabelPatternMatcherFactory : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_WBSFieldLabelPatternMatcherFactory createFieldLabelPatternMatcherArrayFromWordArrays:allowingEndOfWordMatches:]

  // instance methods
  -[_WBSFieldLabelPatternMatcherFactory init]
  -[_WBSFieldLabelPatternMatcherFactory .cxx_destruct]
  -[_WBSFieldLabelPatternMatcherFactory _addWord:allowingEndOfWordMatch:]


WBSFluidProgressController : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSFluidProgressControllerDelegate> *delegate
 @property  <WBSFluidProgressControllerWindowDelegate> *windowDelegate

  // instance methods
  -[WBSFluidProgressController delegate]
  -[WBSFluidProgressController setDelegate:]
  -[WBSFluidProgressController .cxx_destruct]
  -[WBSFluidProgressController animationStepCompleted:]
  -[WBSFluidProgressController setWindowDelegate:]
  -[WBSFluidProgressController progressStateSourceDidCommitLoad:loadingSingleResource:]
  -[WBSFluidProgressController finishFluidProgressWithProgressStateSource:]
  -[WBSFluidProgressController startFluidProgressWithProgressStateSource:]
  -[WBSFluidProgressController updateFluidProgressWithProgressStateSource:]
  -[WBSFluidProgressController cancelFluidProgressWithProgressStateSource:]
  -[WBSFluidProgressController _updateFluidProgressWithProgressStateSource:]
  -[WBSFluidProgressController startRocketEffectWithProgressStateSource:]
  -[WBSFluidProgressController frontmostTabDidChange]
  -[WBSFluidProgressController windowDelegate]


WBSFluidProgressAnimation : NSObject /usr/lib/libc++.1.dylib
 @property  CAMediaTimingFunction *timingFunction
 @property  double initialPosition
 @property  double destinationPosition
 @property  double animationDuration

  // instance methods
  -[WBSFluidProgressAnimation .cxx_destruct]
  -[WBSFluidProgressAnimation timingFunction]
  -[WBSFluidProgressAnimation setTimingFunction:]
  -[WBSFluidProgressAnimation animationDuration]
  -[WBSFluidProgressAnimation setAnimationDuration:]
  -[WBSFluidProgressAnimation destinationPosition]
  -[WBSFluidProgressAnimation initialPosition]
  -[WBSFluidProgressAnimation setInitialPosition:]
  -[WBSFluidProgressAnimation setDestinationPosition:]


WBSFluidProgressState : NSObject /usr/lib/libc++.1.dylib
 @property  long long fluidProgressType
 @property  NSString *loadURL
 @property  double minProgressPosition
 @property  long long fluidProgressAnimationPhase
 @property  BOOL hasCompletedLoad
 @property  BOOL hasCanceledLoad
 @property  BOOL hasCommittedLoad
 @property  BOOL shouldAnimateUsingInitialPosition

  // class methods
  +[WBSFluidProgressState _estimatedLoadTimeRemainingFromProgressValue:]

  // instance methods
  -[WBSFluidProgressState .cxx_destruct]
  -[WBSFluidProgressState initWithType:]
  -[WBSFluidProgressState _animationDuration]
  -[WBSFluidProgressState fluidProgressAnimationPhase]
  -[WBSFluidProgressState setFluidProgressAnimationPhase:]
  -[WBSFluidProgressState hasCompletedLoad]
  -[WBSFluidProgressState nextFluidProgressAnimation]
  -[WBSFluidProgressState isFluidProgressStalled]
  -[WBSFluidProgressState fluidProgressValue]
  -[WBSFluidProgressState setLoadURL:]
  -[WBSFluidProgressState setHasCommittedLoad:]
  -[WBSFluidProgressState loadURL]
  -[WBSFluidProgressState setWebKitProgressValue:]
  -[WBSFluidProgressState hasCommittedLoad]
  -[WBSFluidProgressState setHasCompletedLoad:]
  -[WBSFluidProgressState setHasCanceledLoad:]
  -[WBSFluidProgressState setShouldAnimateUsingInitialPosition:]
  -[WBSFluidProgressState setFluidProgressType:]
  -[WBSFluidProgressState hasCanceledLoad]
  -[WBSFluidProgressState setMinProgressPosition:]
  -[WBSFluidProgressState _updateLinearFunction]
  -[WBSFluidProgressState secondsElapsedSinceLoadBegan]
  -[WBSFluidProgressState _fractionCompleteAtElapsedTime:]
  -[WBSFluidProgressState _adjustProgressPosition:]
  -[WBSFluidProgressState _nextProgressPosition:]
  -[WBSFluidProgressState minProgressPosition]
  -[WBSFluidProgressState fluidProgressType]
  -[WBSFluidProgressState shouldAnimateUsingInitialPosition]
  -[WBSFluidProgressState _estimatedLoadTimeRemaining]


WBSFormAutoFillClassificationToCorrectionsTransformer : NSValueTransformer /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
  // class methods
  +[WBSFormAutoFillClassificationToCorrectionsTransformer allowsReverseTransformation]
  +[WBSFormAutoFillClassificationToCorrectionsTransformer transformedValueClass]

  // instance methods
  -[WBSFormAutoFillClassificationToCorrectionsTransformer transformedValue:]
  -[WBSFormAutoFillClassificationToCorrectionsTransformer reverseTransformedValue:]


WBSFormAutoFillCorrectionManager : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSFormAutoFillCorrectionManagerDelegate> *delegate

  // instance methods
  -[WBSFormAutoFillCorrectionManager delegate]
  -[WBSFormAutoFillCorrectionManager setDelegate:]
  -[WBSFormAutoFillCorrectionManager .cxx_destruct]
  -[WBSFormAutoFillCorrectionManager _correctionsStore]
  -[WBSFormAutoFillCorrectionManager _setCorrections:forFingerprint:onDomain:]
  -[WBSFormAutoFillCorrectionManager _feedbackProcessor]
  -[WBSFormAutoFillCorrectionManager getCorrectionsForFormFieldFingerprint:onDomain:completionHandler:]
  -[WBSFormAutoFillCorrectionManager setCorrectionSet:]


WBSCrowdsourcedFeedbackDomainNormalizer : NSValueTransformer /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
  // class methods
  +[WBSCrowdsourcedFeedbackDomainNormalizer allowsReverseTransformation]
  +[WBSCrowdsourcedFeedbackDomainNormalizer transformedValueClass]

  // instance methods
  -[WBSCrowdsourcedFeedbackDomainNormalizer init]
  -[WBSCrowdsourcedFeedbackDomainNormalizer .cxx_destruct]
  -[WBSCrowdsourcedFeedbackDomainNormalizer transformedValue:]


WBSFormAutoFillCorrectionSet : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *domain
 @property  NSDictionary *fingerprintsToClassifications
 @property  NSDictionary *fingerprintsToCorrections

  // instance methods
  -[WBSFormAutoFillCorrectionSet isEqual:]
  -[WBSFormAutoFillCorrectionSet domain]
  -[WBSFormAutoFillCorrectionSet .cxx_destruct]
  -[WBSFormAutoFillCorrectionSet fingerprintsToCorrections]
  -[WBSFormAutoFillCorrectionSet fingerprintsToClassifications]
  -[WBSFormAutoFillCorrectionSet initWithDomain:fingerprintsToClassifications:]
  -[WBSFormAutoFillCorrectionSet initWithDomain:fingerprintsToCorrections:]


WBSBrowserTabCompletionInfo : NSObject /usr/lib/libc++.1.dylib
 @property  NSUUID *uuid
 @property  NSUUID *windowUUID
 @property  unsigned long tabIndex
 @property  NSURL *url
 @property  NSString *title

  // instance methods
  -[WBSBrowserTabCompletionInfo .cxx_destruct]
  -[WBSBrowserTabCompletionInfo url]
  -[WBSBrowserTabCompletionInfo uuid]
  -[WBSBrowserTabCompletionInfo title]
  -[WBSBrowserTabCompletionInfo tabIndex]
  -[WBSBrowserTabCompletionInfo windowUUID]
  -[WBSBrowserTabCompletionInfo initWithUUID:windowUUID:tabIndex:url:title:]


WBSBrowserTabCompletionProvider : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSBrowserTabCompletionProviderSource> *dataSource
 @property  <WBSBrowserTabCompletionProviderDelegate> *delegate
 @property  NSString *currentQuery
 @property  NSArray *currentTabCompletionMatches

  // instance methods
  -[WBSBrowserTabCompletionProvider init]
  -[WBSBrowserTabCompletionProvider invalidate]
  -[WBSBrowserTabCompletionProvider delegate]
  -[WBSBrowserTabCompletionProvider setDelegate:]
  -[WBSBrowserTabCompletionProvider .cxx_destruct]
  -[WBSBrowserTabCompletionProvider dataSource]
  -[WBSBrowserTabCompletionProvider setDataSource:]
  -[WBSBrowserTabCompletionProvider currentQuery]
  -[WBSBrowserTabCompletionProvider _performTabCompletionOperationForQuery:tabInfos:selectedTabInfo:forQueryID:]
  -[WBSBrowserTabCompletionProvider bestTabCompletionMatchFromMatches:withTopHitURL:isBestMatchTopHit:]
  -[WBSBrowserTabCompletionProvider _compareTabMatch:otherTabMatch:]
  -[WBSBrowserTabCompletionProvider _tabCompletionOperationCompletedForQuery:matches:tabInfos:selectedTabInfo:]
  -[WBSBrowserTabCompletionProvider _distanceFromSelectedTabForTabMatch:]
  -[WBSBrowserTabCompletionProvider setCurrentQuery:forQueryID:]
  -[WBSBrowserTabCompletionProvider bestTabCompletionMatchWithTopHitURL:isBestMatchTopHit:]
  -[WBSBrowserTabCompletionProvider currentTabCompletionMatches]


WBSFormAutoFillCorrectionsHistoryObserver : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSFormAutoFillCorrectionsHistoryObserver dealloc]
  -[WBSFormAutoFillCorrectionsHistoryObserver .cxx_destruct]
  -[WBSFormAutoFillCorrectionsHistoryObserver _historyItemsWereRemoved:]
  -[WBSFormAutoFillCorrectionsHistoryObserver _historyWasCleared:]
  -[WBSFormAutoFillCorrectionsHistoryObserver _historyVisitsWereRemoved:]
  -[WBSFormAutoFillCorrectionsHistoryObserver _invalidateUpdateCoalescingTimer]
  -[WBSFormAutoFillCorrectionsHistoryObserver _updateCorrectionsStoreNow]
  -[WBSFormAutoFillCorrectionsHistoryObserver _updateCorrectionsStoreSoon]
  -[WBSFormAutoFillCorrectionsHistoryObserver _normalizeURL:]
  -[WBSFormAutoFillCorrectionsHistoryObserver initWithCorrectionsStore:]
  -[WBSFormAutoFillCorrectionsHistoryObserver flushPendingChangesAndDisconnectFromStoreAndHistory]


WBSFormAutoFillCorrectionsSQLiteStore : NSObject /usr/lib/libc++.1.dylib <WBSFormAutoFillCorrectionsStore, WBSCrowdsourcedFeedbackWhitelist>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSFormAutoFillCorrectionsSQLiteStore standardStore]
  +[WBSFormAutoFillCorrectionsSQLiteStore _defaultLocalDatabaseURL]
  +[WBSFormAutoFillCorrectionsSQLiteStore _defaultParsecDatabaseURL]

  // instance methods
  -[WBSFormAutoFillCorrectionsSQLiteStore init]
  -[WBSFormAutoFillCorrectionsSQLiteStore .cxx_destruct]
  -[WBSFormAutoFillCorrectionsSQLiteStore closeDatabase]
  -[WBSFormAutoFillCorrectionsSQLiteStore _migrateToSchemaVersion_2]
  -[WBSFormAutoFillCorrectionsSQLiteStore _migrateToSchemaVersion_3]
  -[WBSFormAutoFillCorrectionsSQLiteStore _migrateToSchemaVersion_4]
  -[WBSFormAutoFillCorrectionsSQLiteStore getClassificationForFieldWithFingerprint:onDomain:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore setLocalClassification:forFieldWithFingerprint:onDomain:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore removeAllLocalClassificationsWithCompletionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore removeLocalClassificationsForDomain:recordedOnOrAfter:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore initWithLocalDatabaseURL:parsecDatabaseURL:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _closeDatabases]
  -[WBSFormAutoFillCorrectionsSQLiteStore _openDatabasesIfNeeded]
  -[WBSFormAutoFillCorrectionsSQLiteStore _replaceDomainWhitelistWithDomains:retrievalURLString:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _tryToPerformTransactionOnDatabase:inBlock:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _normalizeDomain:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _isDatabaseOpen:]
  -[WBSFormAutoFillCorrectionsSQLiteStore getLastWhitelistRetrievalURLStringWithCompletionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _setDomain:isWhitelistedForFeedback:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _parsecMetadataStringValueForKey:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _setParsecMetadataStringValue:forKey:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _replaceCrowdsourcedCorrectionSetsWithCorrectionSets:retrievalURLString:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _setLocalClassification:forFieldWithFingerprint:onDomain:date:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _setCrowdsourcedClassification:forFieldWithFingerprint:onDomain:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _classificationForFieldWithFingerprint:onDomain:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _removeLocalClassificationsForDomain:recordedOnOrAfter:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _removeAllLocalClassifications]
  -[WBSFormAutoFillCorrectionsSQLiteStore _schemaVersionForDatabase:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _createFreshLocalDatabaseSchema]
  -[WBSFormAutoFillCorrectionsSQLiteStore _createFreshParsecDatabaseSchema]
  -[WBSFormAutoFillCorrectionsSQLiteStore _migrateToSchemaVersion:forDatabase:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _setDatabaseSchemaVersion:forDatabase:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _openLocalDatabase]
  -[WBSFormAutoFillCorrectionsSQLiteStore _openParsecDatabase]
  -[WBSFormAutoFillCorrectionsSQLiteStore _migrateToCurrentSchemaVersionIfNeededForDatabase:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _configureDatabase:currentSchemaVersion:]
  -[WBSFormAutoFillCorrectionsSQLiteStore _setLocalClassification:forFieldWithFingerprint:onDomain:dateReclassified:]
  -[WBSFormAutoFillCorrectionsSQLiteStore getLastCrowdsourcedCorrectionsRetrievalURLStringWithCompletionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore setLastCrowdsourcedCorrectionsRetrievalURLString:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore replaceCrowdsourcedCorrectionSetsWithCorrectionSets:retrievalURLString:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore setCrowdsourcedClassification:forFieldWithFingerprint:onDomain:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore replaceDomainWhitelistWithDomains:retrievalURLString:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore getWhitelistStatusForDomain:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore setDomain:isWhitelistedForFeedback:completionHandler:]
  -[WBSFormAutoFillCorrectionsSQLiteStore setLastWhitelistRetrievalURLString:completionHandler:]


WBSFormAutoFillItem : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *completion

  // instance methods
  -[WBSFormAutoFillItem completion]


WBSDigitalHealthManager : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSDigitalHealthManagerDelegate> *delegate
 @property  BOOL deviceManagementEnabled

  // class methods
  +[WBSDigitalHealthManager _updateWebpageUsage:withDigitalHealthManagerUsageState:]
  +[WBSDigitalHealthManager deleteUsageHistoryForURL:]
  +[WBSDigitalHealthManager deleteAllUsageHistory]
  +[WBSDigitalHealthManager deleteUsageHistoryFromDate:toDate:]

  // instance methods
  -[WBSDigitalHealthManager init]
  -[WBSDigitalHealthManager dealloc]
  -[WBSDigitalHealthManager delegate]
  -[WBSDigitalHealthManager setDelegate:]
  -[WBSDigitalHealthManager .cxx_destruct]
  -[WBSDigitalHealthManager observeValueForKeyPath:ofObject:change:context:]
  -[WBSDigitalHealthManager startObserving]
  -[WBSDigitalHealthManager stopObserving]
  -[WBSDigitalHealthManager _historyItemsWereRemoved:]
  -[WBSDigitalHealthManager _historyWasCleared:]
  -[WBSDigitalHealthManager getOverlayStateForURLs:withCompletionHandler:]
  -[WBSDigitalHealthManager _requestPoliciesForWebsites:completionHandler:]
  -[WBSDigitalHealthManager isDeviceManagementEnabled]
  -[WBSDigitalHealthManager updateUsageTrackingForURL:toState:]
  -[WBSDigitalHealthManager stopUsageTrackingForURL:]


WBSHistorySessionWithItems : WBSHistorySession
 @property  NSArray *items

  // instance methods
  -[WBSHistorySessionWithItems init]
  -[WBSHistorySessionWithItems .cxx_destruct]
  -[WBSHistorySessionWithItems items]
  -[WBSHistorySessionWithItems initWithSessionStartDate:]
  -[WBSHistorySessionWithItems initWithSessionStartDate:items:]


WBSSetInt64 : NSObject /usr/lib/libc++.1.dylib <NSCoding, NSSecureCoding, NSCopying>
 @property  r^{unordered_set<long long set
 @property  unsigned long count

  // class methods
  +[WBSSetInt64 supportsSecureCoding]

  // instance methods
  -[WBSSetInt64 init]
  -[WBSSetInt64 copyWithZone:]
  -[WBSSetInt64 copy]
  -[WBSSetInt64 count]
  -[WBSSetInt64 encodeWithCoder:]
  -[WBSSetInt64 initWithCoder:]
  -[WBSSetInt64 set]
  -[WBSSetInt64 initWithSet:]
  -[WBSSetInt64 .cxx_destruct]
  -[WBSSetInt64 .cxx_construct]
  -[WBSSetInt64 contains:]
  -[WBSSetInt64 initWithInt64:]
  -[WBSSetInt64 commaSeparatedValues]
  -[WBSSetInt64 initWithMovableSet:]


WBSTranslationDataCollectionManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSTranslationDataCollectionManager _currentLanguage]
  +[WBSTranslationDataCollectionManager _sendDomainDataToDifferentialPrivacy:withKey:]
  +[WBSTranslationDataCollectionManager _sendDataToDifferentialPrivacyWithKey:value:]
  +[WBSTranslationDataCollectionManager _sendNormalizedHighLevelDomainDataToDifferentialPrivacy:withKey:]
  +[WBSTranslationDataCollectionManager _translationDomainFromURLString:]
  +[WBSTranslationDataCollectionManager sendDataToDifferentialPrivacyWithContextResponse:]
  +[WBSTranslationDataCollectionManager sendUserMayWantTranslationURLDataToDifferentialPrivacyIfNecessary:]
  +[WBSTranslationDataCollectionManager sendUserPerformedTranslationURLDataToDifferentialPrivacyIfNecessary:]


WBSFormAutoFillMetadataCorrector : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *domain

  // instance methods
  -[WBSFormAutoFillMetadataCorrector init]
  -[WBSFormAutoFillMetadataCorrector domain]
  -[WBSFormAutoFillMetadataCorrector .cxx_destruct]
  -[WBSFormAutoFillMetadataCorrector initWithDomain:]
  -[WBSFormAutoFillMetadataCorrector enqueueCorrectionsRequestForFormMetadata:completionHandler:]
  -[WBSFormAutoFillMetadataCorrector bestAvailableMetadataFromMetadata:]
  -[WBSFormAutoFillMetadataCorrector bestAvailableMetadataFromControlMetadata:]
  -[WBSFormAutoFillMetadataCorrector _commonInitWithDomain:correctionsStore:]
  -[WBSFormAutoFillMetadataCorrector hasAttemptedToCorrectMetadata:]


WBSParsecSearchResult : NSObject /usr/lib/libc++.1.dylib <WBSParsecSearchResult, WBSCompletionListItem, WBSParsecSearchGenericResult, WBSParsecSearchMapsResult, WBSParsecSearchSimpleResult, WBSParsecSearchSportsResult>
 @property  WBSParsecLegacySearchResult *legacySearchResult
 @property  long long type
 @property  long long subtype
 @property  NSString *title
 @property  NSString *descriptionText
 @property  NSString *identifier
 @property  NSString *feedbackIdentifier
 @property  NSString *urlString
 @property  NSString *sectionHeader
 @property  NSString *completion
 @property  NSString *query
 @property  unsigned long minimumRankOfTopHitToSuppressResult
 @property  NSURL *appPunchoutURL
 @property  NSString *mediaKind
 @property  NSString *referrerForLoadingResult
 @property  WBSParsecActionButton *actionButton
 @property  MKMapItem *mapItem
 @property  NSString *sectionBundleIdentifier
 @property  WBSParsecImageRepresentation *icon
 @property  WBSParsecImageRepresentation *completionIcon
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion
 @property  NSNumber *titleMaximumLines
 @property  NSArray *descriptionRichTexts
 @property  NSString *footnote
 @property  NSString *secondaryTitle
 @property  WBSParsecImageRepresentation *secondaryTitleGlyph
 @property  WBSParsecAuxiliaryInfo *auxiliaryInfo
 @property  WBSParsecImageRepresentation *thumbnail
 @property  <WBSParsecSearchSession> *parsecSearchSession
 @property  WBSParsecSearchMapsResultFeedbackSender *mapsFeedbackSender
 @property  NSNumber *titleMaximumNumberOfLines
 @property  NSString *descriptionLeadInText
 @property  NSNumber *descriptionMaximumNumberOfLines
 @property  BOOL descriptionTextCanWrap
 @property  BOOL hasSingleLineDescriptionAndTitle
 @property  NSArray *images
 @property  NSArray *individualScores
 @property  NSString *subtitle
 @property  WBSParsecSearchSportsAttributionExtraCompletionItem *extraCompletionItem

  // class methods
  +[WBSParsecSearchResult typeForSFSearchResult:isOneLine:]
  +[WBSParsecSearchResult typeForSFSearchResult:]

  // instance methods
  -[WBSParsecSearchResult init]
  -[WBSParsecSearchResult type]
  -[WBSParsecSearchResult query]
  -[WBSParsecSearchResult .cxx_destruct]
  -[WBSParsecSearchResult identifier]
  -[WBSParsecSearchResult title]
  -[WBSParsecSearchResult _result]
  -[WBSParsecSearchResult images]
  -[WBSParsecSearchResult subtitle]
  -[WBSParsecSearchResult subtype]
  -[WBSParsecSearchResult completion]
  -[WBSParsecSearchResult icon]
  -[WBSParsecSearchResult sectionHeader]
  -[WBSParsecSearchResult thumbnail]
  -[WBSParsecSearchResult mapItem]
  -[WBSParsecSearchResult descriptionText]
  -[WBSParsecSearchResult urlString]
  -[WBSParsecSearchResult mediaKind]
  -[WBSParsecSearchResult footnote]
  -[WBSParsecSearchResult secondaryTitle]
  -[WBSParsecSearchResult sectionBundleIdentifier]
  -[WBSParsecSearchResult minimumRankOfTopHitToSuppressResult]
  -[WBSParsecSearchResult actionButton]
  -[WBSParsecSearchResult parsecQueryID]
  -[WBSParsecSearchResult parsecDomainIdentifier]
  -[WBSParsecSearchResult sfSearchResultValue]
  -[WBSParsecSearchResult feedbackIdentifier]
  -[WBSParsecSearchResult appPunchoutURL]
  -[WBSParsecSearchResult referrerForLoadingResult]
  -[WBSParsecSearchResult canBecomeTopHitForQuery:]
  -[WBSParsecSearchResult completionIcon]
  -[WBSParsecSearchResult iconWithSession:]
  -[WBSParsecSearchResult completionIconWithSession:]
  -[WBSParsecSearchResult engagementDestination]
  -[WBSParsecSearchResult _genericResult]
  -[WBSParsecSearchResult titleMaximumLines]
  -[WBSParsecSearchResult descriptionRichTexts]
  -[WBSParsecSearchResult secondaryTitleGlyph]
  -[WBSParsecSearchResult auxiliaryInfo]
  -[WBSParsecSearchResult thumbnailWithSession:]
  -[WBSParsecSearchResult _resultPresentedInCard]
  -[WBSParsecSearchResult parsecSearchSession]
  -[WBSParsecSearchResult setParsecSearchSession:]
  -[WBSParsecSearchResult _mapsResult]
  -[WBSParsecSearchResult mapsFeedbackSender]
  -[WBSParsecSearchResult setMapsFeedbackSender:]
  -[WBSParsecSearchResult _simpleResult]
  -[WBSParsecSearchResult titleMaximumNumberOfLines]
  -[WBSParsecSearchResult descriptionLeadInText]
  -[WBSParsecSearchResult descriptionMaximumNumberOfLines]
  -[WBSParsecSearchResult descriptionTextCanWrap]
  -[WBSParsecSearchResult hasSingleLineDescriptionAndTitle]
  -[WBSParsecSearchResult titleGlyphWithSession:]
  -[WBSParsecSearchResult _sportsResult]
  -[WBSParsecSearchResult individualScores]
  -[WBSParsecSearchResult extraCompletionItem]
  -[WBSParsecSearchResult initWithLegacySearchResult:]
  -[WBSParsecSearchResult legacySearchResult]


WBSOperatingSystemVersionRange : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *family
 @property  {?=qqq} minimumVersion
 @property  {?=qqq} maximumVersion

  // class methods
  +[WBSOperatingSystemVersionRange defaultCloudBookmarksEligibleOperatingSystemRanges]

  // instance methods
  -[WBSOperatingSystemVersionRange .cxx_destruct]
  -[WBSOperatingSystemVersionRange family]
  -[WBSOperatingSystemVersionRange minimumVersion]
  -[WBSOperatingSystemVersionRange includesOperatingSystemVersion:inFamily:]
  -[WBSOperatingSystemVersionRange initWithFamily:minimumVersion:maximumVersion:]
  -[WBSOperatingSystemVersionRange maximumVersion]


WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor _schemaWithExpectedClass:errorCode:isOptional:]
  +[WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor _correctionsSchema]
  +[WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor test_correctionsSchema]

  // instance methods
  -[WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor _correctionsStore]
  -[WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor getLastCorrectionsRetrievalURLStringWithResultHandler:]
  -[WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor setCorrectionsWithJSONData:retrievalURLString:]


WBSFormAutoFillParsecDomainPolicyProvider : NSObject /usr/lib/libc++.1.dylib <WBSFormAutoFillFeedbackDomainPolicyProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSFormAutoFillParsecDomainPolicyProvider _correctionsStore]
  -[WBSFormAutoFillParsecDomainPolicyProvider autoFillFeedbackProcessor:determineWhetherToSendFeedbackForDomain:resultHandler:]
  -[WBSFormAutoFillParsecDomainPolicyProvider setPoliciesWithJSONData:retrievalURLString:]
  -[WBSFormAutoFillParsecDomainPolicyProvider getLastPolicyRetrievalURLStringWithResultHandler:]


WBSLeadImageCacheResponse : WBSSiteMetadataResponse
 @property  UIImage *thumbnail

  // class methods
  +[WBSLeadImageCacheResponse responseWithURL:thumbnail:]

  // instance methods
  -[WBSLeadImageCacheResponse initWithURL:]
  -[WBSLeadImageCacheResponse .cxx_destruct]
  -[WBSLeadImageCacheResponse thumbnail]
  -[WBSLeadImageCacheResponse initWithURL:thumbnail:]


WBSFormAutoFillParsecFeedbackProcessor : NSObject /usr/lib/libc++.1.dylib <WBSFormAutoFillFeedbackProcessor>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSFormAutoFillFeedbackDomainPolicyProvider> *domainPolicyProvider

  // instance methods
  -[WBSFormAutoFillParsecFeedbackProcessor init]
  -[WBSFormAutoFillParsecFeedbackProcessor .cxx_destruct]
  -[WBSFormAutoFillParsecFeedbackProcessor sendFeedbackWithCorrectionSet:]
  -[WBSFormAutoFillParsecFeedbackProcessor _getFeedbackWithCorrectionSet:completionHandler:]
  -[WBSFormAutoFillParsecFeedbackProcessor _feedbackWithCorrectionSet:includeOrigin:]
  -[WBSFormAutoFillParsecFeedbackProcessor domainPolicyProvider]
  -[WBSFormAutoFillParsecFeedbackProcessor setDomainPolicyProvider:]
  -[WBSFormAutoFillParsecFeedbackProcessor initWithGlobalFeedbackDispatcher:domainPolicyProvider:autoFillVersion:]


WBSPasswordEvaluator : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSPasswordEvaluator passwordLooksLikeDigitOnlyPasscode:]
  +[WBSPasswordEvaluator standardPasswordEvaluator]

  // instance methods
  -[WBSPasswordEvaluator .cxx_destruct]
  -[WBSPasswordEvaluator _initWithPasswordWordListCollection:passcodeWordListCollection:]
  -[WBSPasswordEvaluator evaluatePassword:]


WBSFormDataController : NSObject /usr/lib/libc++.1.dylib
 @property  WBSAutoFillQuirksManager *autoFillQuirksManager

  // class methods
  +[WBSFormDataController textFieldLooksLikeCreditCardNumericFormField:]
  +[WBSFormDataController shouldDisplayOneTimeCodeForControl:inForm:]
  +[WBSFormDataController nextFieldAfterControls:inForm:]
  +[WBSFormDataController valuesFromCredential:forLoginOrChangePasswordForm:]
  +[WBSFormDataController dontSaveMarker]
  +[WBSFormDataController textFieldLooksLikeCreditCardFormField:inForm:]
  +[WBSFormDataController isFieldUnidentified:]
  +[WBSFormDataController localizedLowercaseContactProperty:]
  +[WBSFormDataController specifierForControl:]
  +[WBSFormDataController isNameProperty:]
  +[WBSFormDataController contactIsMe:]
  +[WBSFormDataController contactKeyForString:]
  +[WBSFormDataController continuingFieldsInFormControls:startingAtIndex:textFieldsOnly:ignorePositioning:]
  +[WBSFormDataController _metadataForControlWithUniqueID:inForm:]
  +[WBSFormDataController stringLooksLikeCreditCardNumber:]
  +[WBSFormDataController addressBookAddressPropertyKey]
  +[WBSFormDataController allAddressBookAddressComponentKeys]
  +[WBSFormDataController allSynonymsForMatch:]
  +[WBSFormDataController allAddressBookNonAddressPropertyKeys]
  +[WBSFormDataController formContainsDateFields:matchingAddressBookMatch:]
  +[WBSFormDataController specifierForAddressBookLabel:]
  +[WBSFormDataController domainFromURL:]
  +[WBSFormDataController valueOfControlWithUniqueID:inForm:]
  +[WBSFormDataController formContainsCreditCardNumberOrCardSecurityCodeField:]
  +[WBSFormDataController valuesFromUser:password:forLoginOrChangePasswordForm:]
  +[WBSFormDataController _password:appearsToBeASixDigitCodeAppendedToPassword:]
  +[WBSFormDataController _password:appearsToBeMoreThanOneSymbolAppendedToPassword:]
  +[WBSFormDataController convertNumber:toAutoFillFormType:]
  +[WBSFormDataController fieldToFocusBeforeSubmittingForm:]
  +[WBSFormDataController formContainsCreditCardData:]
  +[WBSFormDataController formContainsCreditCardNumberField:]
  +[WBSFormDataController stringWithAddressBookValue:key:]
  +[WBSFormDataController canAutocompleteTextField:inForm:]
  +[WBSFormDataController availableManualAutoFillActionForTextField:form:outUsernameElementUniqueID:outPasswordElementUniqueID:outConfirmPasswordElementUniqueID:]
  +[WBSFormDataController lastFieldInControls:inForm:]
  +[WBSFormDataController controlsConsideredByAutoFillInForm:]
  +[WBSFormDataController password:shouldBeConsideredEqualToExistingPassword:]

  // instance methods
  -[WBSFormDataController init]
  -[WBSFormDataController dealloc]
  -[WBSFormDataController .cxx_destruct]
  -[WBSFormDataController credentialMatchesWithCriteria:completionHandler:]
  -[WBSFormDataController autoFillQuirksManager]
  -[WBSFormDataController metadataOfBestFormForStreamlinedLogin:frame:]
  -[WBSFormDataController autoGeneratedPasswordForURL:respectingPasswordRequirements:maxLength:]
  -[WBSFormDataController textFieldIsEligibleForAutomaticStrongPassword:form:ignorePreviousDecision:textFieldCurrentlyContainsStrongPassword:]
  -[WBSFormDataController isControlASelectElement:]
  -[WBSFormDataController isPasswordFieldForUserCredentialsWithMetadata:formMetadata:]
  -[WBSFormDataController lastUsedUsernameForURL:]
  -[WBSFormDataController credentialMatchesForForm:atURL:potentialMatches:]
  -[WBSFormDataController annotationsFromCredential:forLoginOrChangePasswordForm:]
  -[WBSFormDataController shouldSubmitForm:withCredential:onURL:]
  -[WBSFormDataController didAutomaticallySubmitFormWhenFillingOnURL:]
  -[WBSFormDataController shouldAutoFillPasswords]
  -[WBSFormDataController getFormFieldValues:andFieldToFocus:withSingleCreditCardData:inField:inForm:]
  -[WBSFormDataController getFormFieldValues:andFieldToFocus:andCreditCardDataTypesThatWillBeFilled:forCreditCardForm:fromCreditCardData:]
  -[WBSFormDataController valuesForContactFormWithMetadata:matches:multiRoundAutoFillManager:existingMatches:contact:]
  -[WBSFormDataController recentlyUsedAutoFillSets]
  -[WBSFormDataController contactAutoFillSetForRecentlyUsedAutoFillSet:contact:form:]
  -[WBSFormDataController orderedHomeAndWorkSetsForContact:form:]
  -[WBSFormDataController valuesForContactFormWithMetadata:matches:multiRoundAutoFillManager:existingMatches:shouldUseExistingMatchesToFillFocusedField:contact:]
  -[WBSFormDataController setPreferredIdentifier:forProperty:withContact:]
  -[WBSFormDataController saveRecentlyUsedAutoFillSetWithMatchesToFill:matchesForDoNotFill:]
  -[WBSFormDataController initWithAggressiveKeychainCaching:]
  -[WBSFormDataController _currentLocaleDidChange:]
  -[WBSFormDataController _removeStaleEntriesFromMapOfHighLevelDomainToLastAutomaticFormSubmission]
  -[WBSFormDataController _dateIsWithinGracePeriodForNotAutomaticallySubmittingLoginForms:]
  -[WBSFormDataController completionDBPath]
  -[WBSFormDataController encryptOrDecryptData:encrypt:]
  -[WBSFormDataController _loadCompletionDBIfNeededOnInternalQueue]
  -[WBSFormDataController _domainsWithPreviousDataOnInternalQueue]
  -[WBSFormDataController domainsWithPreviousDataChanged]
  -[WBSFormDataController pruneCompletionDB]
  -[WBSFormDataController _completionDB]
  -[WBSFormDataController saveCompletionDBSoon]
  -[WBSFormDataController uniqueIDOfContact:]
  -[WBSFormDataController loadCompletionDBIfNeeded]
  -[WBSFormDataController _recentlyUsedAutoFillDictionaries]
  -[WBSFormDataController infoForDomain:]
  -[WBSFormDataController addressBookMatchesForProperty:key:label:partialString:contact:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController _singleFieldPhoneNumberCandidates:]
  -[WBSFormDataController addressBookMatchesForProperty:key:label:]
  -[WBSFormDataController _cachedLocalizedStringsForBirthdate:]
  -[WBSFormDataController _matchesForControl:inDomain:matchingPartialString:autoFillDataType:preferredLabel:contact:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController shouldAutoFillFromPreviousData]
  -[WBSFormDataController addPreviousDataMatchesForFieldWithName:inDomain:matchingPartialString:toArray:]
  -[WBSFormDataController shouldAutoFillFromAddressBook]
  -[WBSFormDataController addABMatchesForValueSpecifier:matchingPartialString:toArray:preferredLabel:contact:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController addAllAddressDataIfNecessary:contactLabel:contact:]
  -[WBSFormDataController bestMatchForControl:inDomain:matchingPartialString:autoFillDataType:preferredLabel:contact:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController _phoneNumberCandidates:fillingMultipleFields:]
  -[WBSFormDataController addValuesForStandardFormControls:startingAtIndex:fromAutoFillItem:toDictionary:formTextSample:multiRoundAutoFillManager:]
  -[WBSFormDataController _fillPhoneNumber:intoValues:controls:formTextSample:multiRoundAutoFillManager:]
  -[WBSFormDataController _indexForControlWithUniqueID:inForm:]
  -[WBSFormDataController _nextFieldToFocusAfterFillingFieldAtIndex:inForm:]
  -[WBSFormDataController _autoFillSetFromMatches:label:contact:form:]
  -[WBSFormDataController _valuesForStandardForm:inDomain:autoFillDataType:matches:preferredLabel:multiRoundAutoFillManager:wantAllMatches:contact:existingMatches:shouldUseExistingMatchesToFillFocusedField:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController _matchHasPreferredIdentifierOrShouldBeFilledInMultiRoundAutoFill:specifier:multiRoundAutoFillManager:contact:]
  -[WBSFormDataController _addMatchesForControl:startingAtIndex:formMetadata:fromExistingMatches:fromAllMatchesIfNecessary:addToFoundMatches:addToAutoFillValues:multiRoundAutoFillManager:propertyToIdentifierMapForFoundMatches:shouldUseExistingMatchesToFillFocusedField:]
  -[WBSFormDataController addValuesForStandardFormControlsInForm:startingAtIndex:fromAutoFillItem:toDictionary:multiRoundAutoFillManager:]
  -[WBSFormDataController preferredIdentifierExistsForProperty:withContact:]
  -[WBSFormDataController preferredIdentifierForProperty:withContact:]
  -[WBSFormDataController addRecentlyUsedAutoFillSet:appendToTheEnd:]
  -[WBSFormDataController valuesForContactFormWithMetadata:inDomain:matches:multiRoundAutoFillManager:contact:]
  -[WBSFormDataController getCredentialMatches:andPotentialMatches:forURL:matchingPartialUsername:omittingCredentialsUserHasDeniedAccessTo:]
  -[WBSFormDataController lastUsedUsernameForURL:protectionSpace:]
  -[WBSFormDataController _lastUsedUsernameForDomain:protectionSpace:]
  -[WBSFormDataController getCredentialMatches:andPotentialMatches:matchesForAssociatedDomains:forURL:matchingPartialUsername:omittingCredentialsUserHasDeniedAccessTo:]
  -[WBSFormDataController _protectionSpaceMatchesWithCriteria:credentialsByProtectionSpace:associatedDomainsManager:]
  -[WBSFormDataController _credentialMatchesWithCriteria:protectionSpaceMatches:]
  -[WBSFormDataController substituteCredential:inProtectionSpace:]
  -[WBSFormDataController hasUserDeniedAccessToCredential:inProtectionSpace:]
  -[WBSFormDataController updateLastUsedUsernameAndExtractUsernameAndPasswordFromForm:atURL:username:password:]
  -[WBSFormDataController _knownUsernamesForURL:]
  -[WBSFormDataController _setLastUsedUsername:andProtectionSpace:forDomain:]
  -[WBSFormDataController _keyToLookUpInAnnotationsForPasswordForFormMetadata:]
  -[WBSFormDataController textFieldMetadataMeetsRequirementsForAutomaticStrongPasswordTreatment:form:]
  -[WBSFormDataController autoFillActionForFormType:onURL:shouldSubmitAfterFilling:]
  -[WBSFormDataController allFormDataForSaving]
  -[WBSFormDataController domainsWithPreviousData]
  -[WBSFormDataController clearPreviousDataForDomain:]
  -[WBSFormDataController clearPreviousDataDatabaseItemsAddedAfterDate:]
  -[WBSFormDataController clearPreviousDataDatabase]
  -[WBSFormDataController setInfo:forDomain:]
  -[WBSFormDataController bestAddressBookLabelForFormMetadata:formControlValue:]
  -[WBSFormDataController addressBookHasDataForLabel:]
  -[WBSFormDataController matchesForControl:atURL:matchingPartialString:autoFillDataType:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController matchesForControl:atURL:matchingPartialString:autoFillDataType:contact:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController _matchesForControl:inDomain:matchingPartialString:autoFillDataType:preferredLabel:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController cascadingAddressMatchesForMatch:contact:]
  -[WBSFormDataController bestMatchForControl:inDomain:matchingPartialString:autoFillDataType:preferredLabel:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController valuesForStandardForm:inDomain:autoFillDataType:matches:preferredLabel:multiRoundAutoFillManager:contact:allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:]
  -[WBSFormDataController valuesForStandardForm:inDomain:autoFillDataType:matches:preferredLabel:multiRoundAutoFillManager:]
  -[WBSFormDataController valuesForContactFormWithMetadata:inDomain:matches:multiRoundAutoFillManager:]
  -[WBSFormDataController getCredentialMatches:andPotentialMatches:matchesForAssociatedDomains:forURL:matchingPartialUsername:]
  -[WBSFormDataController metadataOfActiveFormOrBestFormForPageLevelAutoFill:frame:]
  -[WBSFormDataController willSubmitFormWithCredentials:atURL:username:password:]
  -[WBSFormDataController searchForCredentialUsingDomainsToConsiderIdentical:URL:hostForCredentials:credential:protectionSpace:]
  -[WBSFormDataController addressBookMatchesForFullNameForContact:]
  -[WBSFormDataController notifyKeychainWasDirectlyAffectedBySafari]


WBSFormFieldClassificationCorrector : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSFormFieldClassificationCorrectorDelegate> *delegate
 @property  NSString *domain
 @property  WBSFormMetadata *formMetadata
 @property  NSDictionary *formValues

  // instance methods
  -[WBSFormFieldClassificationCorrector init]
  -[WBSFormFieldClassificationCorrector domain]
  -[WBSFormFieldClassificationCorrector delegate]
  -[WBSFormFieldClassificationCorrector setDelegate:]
  -[WBSFormFieldClassificationCorrector .cxx_destruct]
  -[WBSFormFieldClassificationCorrector formMetadata]
  -[WBSFormFieldClassificationCorrector initWithDomain:formMetadata:formValues:uniqueIDsOfControlsThatWereAutoFilled:]
  -[WBSFormFieldClassificationCorrector _classificationCorrectionsForControlWithMetadata:wasIdentifiedAsAddressBookField:]
  -[WBSFormFieldClassificationCorrector processCorrections]
  -[WBSFormFieldClassificationCorrector formValues]


WBSFormFieldFingerprinter : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSFormFieldFingerprinter fingerprintForControlMetadata:]
  +[WBSFormFieldFingerprinter _fingerprintComponentsForControlMetadata:]
  +[WBSFormFieldFingerprinter _hashForString:]


WBSPasswordPatternPartialSolution : NSObject /usr/lib/libc++.1.dylib
 @property  WBSPasswordPatternMatch *patternMatch
 @property  double guessesRequiredWithoutPatternCountPenalty
 @property  double guessesRequiredWithPatternCountPenalty

  // instance methods
  -[WBSPasswordPatternPartialSolution .cxx_destruct]
  -[WBSPasswordPatternPartialSolution initWithPatternMatch:guessesRequiredWithoutPatternCountPenalty:withPatternCountPenalty:]
  -[WBSPasswordPatternPartialSolution patternMatch]
  -[WBSPasswordPatternPartialSolution guessesRequiredWithoutPatternCountPenalty]
  -[WBSPasswordPatternPartialSolution guessesRequiredWithPatternCountPenalty]


WBSPasswordPatternMatchSolver : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSPasswordPatternMatchSolver .cxx_destruct]
  -[WBSPasswordPatternMatchSolver initWithPassword:patternMatches:]
  -[WBSPasswordPatternMatchSolver optimalEvaluation]
  -[WBSPasswordPatternMatchSolver _partialSolutionWithEndIndex:patternCount:]
  -[WBSPasswordPatternMatchSolver _enumeratePartialSolutionsWithEndIndex:usingBlock:]
  -[WBSPasswordPatternMatchSolver _setPartialSolution:withEndIndex:patternCount:]
  -[WBSPasswordPatternMatchSolver _exhaustiveSearchPatternWithStartIndex:endIndex:]
  -[WBSPasswordPatternMatchSolver _updatePartialSolutionsWithPatternMatch:patternCount:]
  -[WBSPasswordPatternMatchSolver _updateExhaustiveSearchPartialSolutionsAtEndIndex:]
  -[WBSPasswordPatternMatchSolver _unwindSolution]


WBSFormMetadata : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDictionary *passwordRequirements
 @property  BOOL allowsAutocomplete
 @property  NSDictionary *annotations
 @property  unsigned long type
 @property  NSString *confirmPasswordElementUniqueID
 @property  BOOL containsActiveElement
 @property  NSString *firstCreditCardCardholderFieldOrCreditCardNumberFieldUniqueID
 @property  NSURL *action
 @property  NSArray *controls
 @property  long long uniqueID
 @property  BOOL bestForCredentialPreFill
 @property  BOOL bestForPageLevelAutoFill
 @property  BOOL bestForStreamlinedLogin
 @property  BOOL eligibleForAutomaticLogin
 @property  BOOL visible
 @property  BOOL usesRelAsync
 @property  NSString *oldPasswordElementUniqueID
 @property  NSString *passwordElementUniqueID
 @property  NSString *textSample
 @property  NSString *userNameElementUniqueID
 @property  BOOL usesGeneratedPassword
 @property  unsigned long requestType
 @property  BOOL isSearchForm
 @property  BOOL containsAtLeastOneSecureTextField
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[WBSFormMetadata supportsSecureCoding]

  // instance methods
  -[WBSFormMetadata isEqual:]
  -[WBSFormMetadata type]
  -[WBSFormMetadata encodeWithCoder:]
  -[WBSFormMetadata initWithCoder:]
  -[WBSFormMetadata .cxx_destruct]
  -[WBSFormMetadata _init]
  -[WBSFormMetadata dictionaryRepresentation]
  -[WBSFormMetadata uniqueID]
  -[WBSFormMetadata action]
  -[WBSFormMetadata requestType]
  -[WBSFormMetadata isVisible]
  -[WBSFormMetadata annotations]
  -[WBSFormMetadata controls]
  -[WBSFormMetadata passwordRequirements]
  -[WBSFormMetadata passwordElementUniqueID]
  -[WBSFormMetadata confirmPasswordElementUniqueID]
  -[WBSFormMetadata userNameElementUniqueID]
  -[WBSFormMetadata usesRelAsync]
  -[WBSFormMetadata containsActiveElement]
  -[WBSFormMetadata isEligibleForAutomaticLogin]
  -[WBSFormMetadata formMetadataByReplacingControlsWith:]
  -[WBSFormMetadata oldPasswordElementUniqueID]
  -[WBSFormMetadata textSample]
  -[WBSFormMetadata isBestForPageLevelAutoFill]
  -[WBSFormMetadata isBestForStreamlinedLogin]
  -[WBSFormMetadata initWithJSValue:]
  -[WBSFormMetadata containsAtLeastOneSecureTextField]
  -[WBSFormMetadata allowsAutocomplete]
  -[WBSFormMetadata firstCreditCardCardholderFieldOrCreditCardNumberFieldUniqueID]
  -[WBSFormMetadata isBestForCredentialPreFill]
  -[WBSFormMetadata usesGeneratedPassword]
  -[WBSFormMetadata isSearchForm]
  -[WBSFormMetadata setPasswordRequirements:]


WBSFormMetadataController : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSFormMetadataController convertNumber:toFormMetadataRequestType:]

  // instance methods
  -[WBSFormMetadataController init]
  -[WBSFormMetadataController .cxx_destruct]
  -[WBSFormMetadataController .cxx_construct]
  -[WBSFormMetadataController getMetadataForAllFormsInPageWithMainFrame:requestType:frames:formMetadata:]
  -[WBSFormMetadataController formAutoFillNodeForField:inFrame:]
  -[WBSFormMetadataController getMetadataForTextField:inFrame:textFieldMetadata:formMetadata:requestType:]
  -[WBSFormMetadataController autoFillFormInFrame:withValues:fillSynchronously:setAutoFilled:focusFieldAfterFilling:fieldToFocus:]
  -[WBSFormMetadataController autoFillFormInFrame:withValues:fillSynchronously:setAutoFilled:focusFieldAfterFilling:fieldToFocus:submitForm:]
  -[WBSFormMetadataController fillForm:inFrame:withPassword:]
  -[WBSFormMetadataController formElementWithFormID:inFrame:]
  -[WBSFormMetadataController metadataForForm:inFrame:requestType:]
  -[WBSFormMetadataController autoFillFrameIsValid:]
  -[WBSFormMetadataController removeAutomaticPasswordElementsInFrame:focusedPasswordControlUniqueID:passwordControlUniqueIDs:blurAfterRemoval:]
  -[WBSFormMetadataController removeAutomaticPasswordVisualTreatmentInFrame:passwordControlUniqueIDs:]
  -[WBSFormMetadataController clearField:inFrame:]
  -[WBSFormMetadataController focusFormForStreamlinedLogin:inFrame:]
  -[WBSFormMetadataController textFieldFocused:inFrame:]
  -[WBSFormMetadataController willSendSubmitEventForForm:inFrame:]
  -[WBSFormMetadataController metadataForForm:inFrame:requestType:addUserEditedStateForUserNameAndPasswordFields:]
  -[WBSFormMetadataController willSubmitForm:inFrame:]
  -[WBSFormMetadataController visibleNonEmptyTextFieldsInForm:inFrame:]
  -[WBSFormMetadataController formSubmissionURLStringForSearchTextField:inFrame:useStrictDetection:]
  -[WBSFormMetadataController clearScriptWorld]
  -[WBSFormMetadataController formAutoFillNodeForJSWrapper:inContext:]
  -[WBSFormMetadataController usernameFieldFocused:fieldMetadata:inForm:inFrame:]
  -[WBSFormMetadataController passwordFieldFocused:inFrame:isPasswordFieldForUserCredentials:]
  -[WBSFormMetadataController creditCardFieldFocused:inFrame:]
  -[WBSFormMetadataController autoFillFormInFrame:withValues:fillSynchronously:setAutoFilled:selectFieldAfterFilling:]
  -[WBSFormMetadataController finishedAutoFillingForm:inFrame:shouldSubmit:]
  -[WBSFormMetadataController shouldIncludeNonEmptyFields]
  -[WBSFormMetadataController autoFillFormSynchronouslyInFrame:withValues:]
  -[WBSFormMetadataController annotateForm:inFrame:withValues:]
  -[WBSFormMetadataController autoFillOneTimeCodeFieldsInFrame:withValue:]
  -[WBSFormMetadataController automaticPasswordSheetDimissedInFrame:focusedPasswordControlUniqueID:]
  -[WBSFormMetadataController recursivelyClearMetadataForFrames:]
  -[WBSFormMetadataController clearMetadataForFrame:]
  -[WBSFormMetadataController fillField:inFrame:withGeneratedPassword:]
  -[WBSFormMetadataController setFormControls:inFrame:asAutoFilled:]
  -[WBSFormMetadataController substitutePasswordElementsWithAutomaticPasswordElementsInFrame:formID:focusedPasswordControlUniqueID:passwordControlUniqueIDs:automaticPassword:blurAfterSubstitution:]
  -[WBSFormMetadataController isFrameAnnotated:]
  -[WBSFormMetadataController isFrameOrChildAnnotated:]
  -[WBSFormMetadataController metadataForFrame:requestType:]
  -[WBSFormMetadataController recursivelyCollectMetadataInFrame:requestType:frames:formMetadata:]
  -[WBSFormMetadataController _jsObjectForForm:inFrame:]
  -[WBSFormMetadataController _formMetadataByAddingInformationAboutUserEditedStateForUserNameAndPasswordFieldsToFormMetadata:inFrame:]
  -[WBSFormMetadataController _unlockMetadataForForm:inFrame:]
  -[WBSFormMetadataController userEditedTextControlCountInArray:context:expectTextFieldsRatherThanTextAreas:]
  -[WBSFormMetadataController countUserEditedTextControlsInFrame:textFields:textAreas:]
  -[WBSFormMetadataController recursivelyCountUserEditedTextControlsInFrame:textFields:textAreas:]
  -[WBSFormMetadataController addressBookAutoFillableFieldFocused:withAddressBookAutoFillableFieldMetadata:inFrame:]
  -[WBSFormMetadataController otherCreditCardFieldFocused:inFrame:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController oneTimeCodeFieldFocused:withFieldMetadata:inFrame:]
  -[WBSFormMetadataController unidentifiedTextFieldFocused:inFrame:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController passwordFieldBlurred:inFrame:page:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController creditCardFieldBlurred:inFrame:page:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController usernameFieldBlurred:inFrame:page:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController addressBookAutoFillableFieldBlurred:inFrame:page:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController otherCreditCardFieldBlurred:inFrame:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController oneTimeCodeFieldBlurred:inFrame:page:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController unidentifiedTextFieldBlurred:inFrame:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController _lockMetadataForForm:inFrame:]
  -[WBSFormMetadataController autoFillFormInFrame:withValues:]
  -[WBSFormMetadataController autoFillFormSynchronouslyInFrame:withValues:selectFieldAfterFilling:]
  -[WBSFormMetadataController autoFillFormAsynchronouslyInFrame:withValues:selectFieldAfterFilling:]
  -[WBSFormMetadataController focusField:inFrame:]
  -[WBSFormMetadataController disableSpellCheckInField:inFrame:]
  -[WBSFormMetadataController selectionRangeInField:inFrame:]
  -[WBSFormMetadataController selectRange:inField:inFrame:]
  -[WBSFormMetadataController replaceRange:inField:inFrame:withString:andSelectTailStartingAt:]
  -[WBSFormMetadataController uniqueIDForTextField:inFrame:]
  -[WBSFormMetadataController pageWithMainFrameMeetsEditedFormTextWarningCriteria:]
  -[WBSFormMetadataController textFieldBlurred:inFrame:page:textFieldMetadata:formMetadata:]
  -[WBSFormMetadataController metadataForActiveFormInPageWithMainFrame:]


WBSAppLink : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *url
 @property  LSApplicationProxy *synchronousTargetApplicationProxy

  // class methods
  +[WBSAppLink clearSavedSettings]

  // instance methods
  -[WBSAppLink initWithURL:]
  -[WBSAppLink .cxx_destruct]
  -[WBSAppLink url]
  -[WBSAppLink disable]
  -[WBSAppLink synchronouslyDecideOpenStrategy]
  -[WBSAppLink getAppLinkLabel:name:icon:]
  -[WBSAppLink disableWithCompletionHandler:]
  -[WBSAppLink openExternally]
  -[WBSAppLink decideOpenStrategyWithCompletionHandler:]
  -[WBSAppLink synchronousTargetApplicationProxy]
  -[WBSAppLink _synchronouslyFetchAppLinkWithError:]
  -[WBSAppLink _getAppLinkWithCompletionHandler:]
  -[WBSAppLink _openStrategyForAppLink:]
  -[WBSAppLink _appLink:getAppLinkLabel:name:icon:]
  -[WBSAppLink openExternallyWithWebBrowserState:referrerURL:completionHandler:]
  -[WBSAppLink getAppLinkAttributesWithCompletionHandler:]


WBSPasswordSetWordList : WBSPasswordWordList
  // instance methods
  -[WBSPasswordSetWordList .cxx_destruct]
  -[WBSPasswordSetWordList enumerateEntriesForString:withBlock:]
  -[WBSPasswordSetWordList initWithIdentifier:words:]


WBSGeolocationPreferenceManager : WBSPerSitePreferenceManager <WBSPerSitePreferenceManagerDefaultsDelegate>
 @property  WBSPerSitePreference *geolocationPreference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore

  // instance methods
  -[WBSGeolocationPreferenceManager .cxx_destruct]
  -[WBSGeolocationPreferenceManager preferences]
  -[WBSGeolocationPreferenceManager initWithPerSitePreferencesStore:]
  -[WBSGeolocationPreferenceManager geolocationPreference]
  -[WBSGeolocationPreferenceManager getValueOfPreference:forDomain:withTimeout:usingBlock:]
  -[WBSGeolocationPreferenceManager getAllDomainsConfiguredForPreference:usingBlock:]
  -[WBSGeolocationPreferenceManager perSitePreferencesStore]
  -[WBSGeolocationPreferenceManager preferencesStoreKeyForPreference:]
  -[WBSGeolocationPreferenceManager defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[WBSGeolocationPreferenceManager valuesForPreference:]
  -[WBSGeolocationPreferenceManager localizedStringForValue:inPreference:]
  -[WBSGeolocationPreferenceManager setValue:ofPreference:forDomain:completionHandler:]
  -[WBSGeolocationPreferenceManager removePreferenceValuesForDomains:fromPreference:completionHandler:]
  -[WBSGeolocationPreferenceManager getGeolocationSettingForDomain:completionHandler:]
  -[WBSGeolocationPreferenceManager _setValue:forDomain:shouldIncludeTimestamp:completionHandler:]
  -[WBSGeolocationPreferenceManager perSitePreferenceValueForGeolocationSetting:]
  -[WBSGeolocationPreferenceManager _removePermissionsPassingTest:completionHandler:]
  -[WBSGeolocationPreferenceManager _isDateLessThanOneDayAgo:]
  -[WBSGeolocationPreferenceManager setGeolocationSetting:forDomain:completionHandler:]
  -[WBSGeolocationPreferenceManager setDefaultGeolocationSetting:]
  -[WBSGeolocationPreferenceManager removeAllTemporaryPermissions]
  -[WBSGeolocationPreferenceManager removeAllPermissions]
  -[WBSGeolocationPreferenceManager removeTemporaryPermissionsAddedAfterDate:completionHandler:]
  -[WBSGeolocationPreferenceManager removePermissionsAddedAfterDate:completionHandler:]


WBSPasswordWordListCollection : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSPasswordWordListCollection commonPasswordWordListCollection]
  +[WBSPasswordWordListCollection commonPasscodeWordListCollection]

  // instance methods
  -[WBSPasswordWordListCollection init]
  -[WBSPasswordWordListCollection .cxx_destruct]
  -[WBSPasswordWordListCollection enumerateEntriesForString:withBlock:]
  -[WBSPasswordWordListCollection entriesForString:]
  -[WBSPasswordWordListCollection addWordList:]


WBSFormToABBinder : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSFormToABBinder specifierForLabel:]
  +[WBSFormToABBinder allSynonymsForMatch:formAppearsToBeChinese:]
  +[WBSFormToABBinder specifierForAutocompleteToken:]
  +[WBSFormToABBinder indexOfBestMatchForString:inArray:startingPosition:]
  +[WBSFormToABBinder addressBookFieldLabelPatternMatchers]
  +[WBSFormToABBinder emailFieldLabelPatternMatchers]


WBSFrequentlyVisitedSiteCandidate : NSObject /usr/lib/libc++.1.dylib
 @property  WBSHistoryItem *historyItem
 @property  float score

  // class methods
  +[WBSFrequentlyVisitedSiteCandidate titleForHistoryItem:]

  // instance methods
  -[WBSFrequentlyVisitedSiteCandidate .cxx_destruct]
  -[WBSFrequentlyVisitedSiteCandidate score]
  -[WBSFrequentlyVisitedSiteCandidate initWithHistoryItem:score:]
  -[WBSFrequentlyVisitedSiteCandidate historyItem]


WBSFaviconProviderRecordCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSFaviconProviderRecordCache init]
  -[WBSFaviconProviderRecordCache .cxx_destruct]
  -[WBSFaviconProviderRecordCache iconInfoForURLString:]
  -[WBSFaviconProviderRecordCache setDateAdded:forFaviconURLString:iconUUID:iconSize:hasGeneratedResolutions:]
  -[WBSFaviconProviderRecordCache dateAddedForFaviconURLString:iconUUID:size:]
  -[WBSFaviconProviderRecordCache removeAllRecords]
  -[WBSFaviconProviderRecordCache removeRecordForIconUUIDs:]


WBSFrequentlyVisitedSitesBannedURLStore : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSFrequentlyVisitedSitesBannedURLStore dealloc]
  -[WBSFrequentlyVisitedSitesBannedURLStore .cxx_destruct]
  -[WBSFrequentlyVisitedSitesBannedURLStore urlStrings]
  -[WBSFrequentlyVisitedSitesBannedURLStore _historyItemsWereRemoved:]
  -[WBSFrequentlyVisitedSitesBannedURLStore _historyWasCleared:]
  -[WBSFrequentlyVisitedSitesBannedURLStore addURLString:]
  -[WBSFrequentlyVisitedSitesBannedURLStore containsURLString:]
  -[WBSFrequentlyVisitedSitesBannedURLStore _bannedURLStringsToEntriesMap]
  -[WBSFrequentlyVisitedSitesBannedURLStore _writeOutBannedURLStringsAsynchronously]
  -[WBSFrequentlyVisitedSitesBannedURLStore removeAllURLStrings]
  -[WBSFrequentlyVisitedSitesBannedURLStore removeURLStrings:]
  -[WBSFrequentlyVisitedSitesBannedURLStore initWithStoreURL:history:]


WBSFrequentlyVisitedSitesController : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *frequentlyVisitedSites

  // class methods
  +[WBSFrequentlyVisitedSitesController scoreForHistoryItem:atTime:withMinimumVisitCount:]
  +[WBSFrequentlyVisitedSitesController scoreWithHistoryItemForVisitScoring:historyItemForURLScoring:atTime:withMinimumVisitCount:]
  +[WBSFrequentlyVisitedSitesController scoreForHistoryItem:atTime:]
  +[WBSFrequentlyVisitedSitesController scoreWithHistoryItemForVisitScoring:historyItemForURLScoring:atTime:]

  // instance methods
  -[WBSFrequentlyVisitedSitesController .cxx_destruct]
  -[WBSFrequentlyVisitedSitesController _recomputeFrequentlyVisitedSitesNow]
  -[WBSFrequentlyVisitedSitesController _computeFrequentlyVisitedSiteCandidates]
  -[WBSFrequentlyVisitedSitesController _updateFrequentlyVisitedSitesWithCandidates:]
  -[WBSFrequentlyVisitedSitesController _scoreForHistoryItem:]
  -[WBSFrequentlyVisitedSitesController _canonicalizedFavoritesURLStringSet]
  -[WBSFrequentlyVisitedSitesController _saveFrequentlyVisitedSites:]
  -[WBSFrequentlyVisitedSitesController _postFrequentlyVisitedSitesDidChangeNotification]
  -[WBSFrequentlyVisitedSitesController initWithHistory:bannedURLStore:]
  -[WBSFrequentlyVisitedSitesController frequentlyVisitedSites]
  -[WBSFrequentlyVisitedSitesController recomputeFrequentlyVisitedSitesIfNecessary]
  -[WBSFrequentlyVisitedSitesController clearFrequentlyVisitedSites]


WBSOneTimeCode : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *code
 @property  NSString *displayCode
 @property  NSString *guid
 @property  NSString *handle
 @property  NSDate *timeStamp

  // instance methods
  -[WBSOneTimeCode isEqual:]
  -[WBSOneTimeCode code]
  -[WBSOneTimeCode .cxx_destruct]
  -[WBSOneTimeCode initWithDictionary:]
  -[WBSOneTimeCode handle]
  -[WBSOneTimeCode timeStamp]
  -[WBSOneTimeCode guid]
  -[WBSOneTimeCode displayCode]


WBSSafariSandboxBrokerConnection : NSObject /usr/lib/libc++.1.dylib <WBSSafariSandboxBrokerProtocol>
  // instance methods
  -[WBSSafariSandboxBrokerConnection .cxx_destruct]
  -[WBSSafariSandboxBrokerConnection loadLinkPresentationMetdataForMessageWithGUID:completionHandler:]
  -[WBSSafariSandboxBrokerConnection _connectionWithCompletionHandler:]
  -[WBSSafariSandboxBrokerConnection ensureConnected:]


WBSHistory : NSObject /usr/lib/libc++.1.dylib <WBSHistoryStoreDelegate>
 @property  NSArray *allItems
 @property  BOOL hasAnyHistoryItems
 @property  unsigned long numberOfHistoryItems
 @property  unsigned long numberOfHistoryItemsOnHistoryQueue
 @property  double historyAgeLimit
 @property  WBSHistoryTagMap *historyTagMap
 @property  NSData *pushThrottlerData
 @property  NSData *fetchThrottlerData
 @property  NSData *syncCircleSizeRetrievalThrottlerData
 @property  NSData *longLivedSaveOperationData
 @property  unsigned long cachedNumberOfDevicesInSyncCircle
 @property  BOOL pushNotificationsAreInitialized
 @property  BOOL syncsWithManateeContainer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistory clearExistingSharedHistory]
  +[WBSHistory existingSharedHistory]
  +[WBSHistory historyDatabaseURL]
  +[WBSHistory historyPropertyListURL]
  +[WBSHistory historyDatabaseWriteAheadLogURL]

  // instance methods
  -[WBSHistory init]
  -[WBSHistory close]
  -[WBSHistory .cxx_destruct]
  -[WBSHistory closeWithCompletionHandler:]
  -[WBSHistory enumerateItemsUsingBlock:]
  -[WBSHistory clearHistory]
  -[WBSHistory itemForURL:]
  -[WBSHistory itemForURLString:]
  -[WBSHistory allItems]
  -[WBSHistory _removeAllVisitedLinks]
  -[WBSHistory _startLoading]
  -[WBSHistory performBlockAfterHistoryHasLoaded:]
  -[WBSHistory checkIfLocalVisitExistsInAnyOfItems:withCompletion:]
  -[WBSHistory performMaintenance]
  -[WBSHistory setServerChangeTokenData:]
  -[WBSHistory setLongLivedSaveOperationData:]
  -[WBSHistory getVisitsAndTombstonesNeedingSyncWithVisitSyncWindow:completion:]
  -[WBSHistory getServerChangeTokenDataWithCompletion:]
  -[WBSHistory syncsWithManateeContainer]
  -[WBSHistory setSyncsWithManateeContainer:]
  -[WBSHistory pruneTombstonesWithEndDatePriorToDate:]
  -[WBSHistory updateHistoryAfterSuccessfulPersistedLongLivedSaveOperationWithGeneration:completion:]
  -[WBSHistory longLivedSaveOperationData]
  -[WBSHistory pushNotificationsAreInitialized]
  -[WBSHistory setPushNotificationsAreInitialized:]
  -[WBSHistory pushThrottlerData]
  -[WBSHistory fetchThrottlerData]
  -[WBSHistory syncCircleSizeRetrievalThrottlerData]
  -[WBSHistory setPushThrottlerData:]
  -[WBSHistory setFetchThrottlerData:]
  -[WBSHistory setSyncCircleSizeRetrievalThrottlerData:]
  -[WBSHistory cachedNumberOfDevicesInSyncCircle]
  -[WBSHistory setCachedNumberOfDevicesInSyncCircle:]
  -[WBSHistory resetCloudHistoryDataWithCompletionHandler:]
  -[WBSHistory setLastSeenDate:forCloudClientVersion:]
  -[WBSHistory replayAndAddTombstones:completionHandler:]
  -[WBSHistory getAllTombstonesWithCompletion:]
  -[WBSHistory visitIdentifiersMatchingExistingVisits:populateAssociatedVisits:completion:]
  -[WBSHistory itemRedirectedFrom:to:origin:date:]
  -[WBSHistory updateTitle:forVisit:]
  -[WBSHistory itemVisitedAtURLString:title:timeOfVisit:wasHTTPNonGet:wasFailure:increaseVisitCount:origin:]
  -[WBSHistory waitUntilHistoryHasLoaded]
  -[WBSHistory itemForURLString:createIfNeeded:]
  -[WBSHistory _historyItemClass]
  -[WBSHistory _removeItemsInResponseToUserAction:completionHandler:]
  -[WBSHistory _waitUntilHistoryHasLoadedMainThread]
  -[WBSHistory _removeItemForURLString:]
  -[WBSHistory _addItemToStringsForUserTypedDomainExpansion:]
  -[WBSHistory _removeItemFromStringsForUserTypedDomainExpansion:]
  -[WBSHistory numberOfHistoryItems]
  -[WBSHistory numberOfHistoryItemsOnHistoryQueue]
  -[WBSHistory setHistoryAgeLimit:]
  -[WBSHistory lastSeenDateForCloudClientVersion:]
  -[WBSHistory itemVisitedAtURLString:title:timeOfVisit:wasHTTPNonGet:wasFailure:increaseVisitCount:origin:attributes:]
  -[WBSHistory _loadHistoryAsynchronouslyIfNeeded]
  -[WBSHistory _dispatchHistoryItemWillChange:]
  -[WBSHistory _dispatchHistoryVisitAdded:]
  -[WBSHistory _dispatchHistoryItemsAdded:byUserInitiatedAction:]
  -[WBSHistory _dispatchHistoryItemDidChange:byUserInitiatedAction:]
  -[WBSHistory canRecordRedirectFromVisit:to:]
  -[WBSHistory getVisitsCreatedAfterDate:beforeDate:completionHandler:]
  -[WBSHistory _setAttributes:forVisit:]
  -[WBSHistory fetchTopicsFromStartDate:toEndDate:completionHandler:]
  -[WBSHistory fetchTopicsFromStartDate:toEndDate:limit:minimumItemCount:sortOrder:completionHandler:]
  -[WBSHistory setTitle:ofTag:completionHandler:]
  -[WBSHistory clearHistoryVisitsAddedAfterDate:beforeDate:completionHandler:]
  -[WBSHistory clearHistoryWithCompletionHandler:]
  -[WBSHistory _dispatchHistoryCleared:]
  -[WBSHistory vacuumHistoryWithCompletionHandler:]
  -[WBSHistory _dispatchDidRemoveHostnames:]
  -[WBSHistory performMaintenance:]
  -[WBSHistory _loadHistory]
  -[WBSHistory _createHistoryStore]
  -[WBSHistory _addItem:addToStringsForUserTypedDomainExpansions:]
  -[WBSHistory _dispatchHistoryItemsLoaded:]
  -[WBSHistory _dispatchHistoryItemsRemovedDuringLoading:]
  -[WBSHistory _dispatchHistoryLoaded]
  -[WBSHistory _dispatchHistoryItemsRemoved:]
  -[WBSHistory _updateHostnameCountWithDeletedHistoryItems:]
  -[WBSHistory _updateHostnameCountWithAddedHistoryItems:]
  -[WBSHistory _sendNotification:withItems:]
  -[WBSHistory _addVisitedLinksForItemsIfNeeded:]
  -[WBSHistory _clearHostnameCount]
  -[WBSHistory historyLoader:didLoadItems:discardedItems:stringsForUserTypeDomainExpansion:]
  -[WBSHistory historyLoaderDidFinishLoading:]
  -[WBSHistory historyStore:didPrepareToDeleteWithDeletionPlan:]
  -[WBSHistory historyStoreShouldCheckDatabaseIntegrity:]
  -[WBSHistory historyStoreDidFailDatabaseIntegrityCheck:]
  -[WBSHistory historyStore:didAddVisits:]
  -[WBSHistory historyStore:didRemoveItems:]
  -[WBSHistory historyStore:didRemoveVisits:]
  -[WBSHistory removeItemsInResponseToUserAction:]
  -[WBSHistory _removeHistoryItemsInResponseToUserAction:]
  -[WBSHistory addAutocompleteTrigger:forURLString:]
  -[WBSHistory _isStringForUserTypedDomainExpansionInHistory:]
  -[WBSHistory hasAnyHistoryItems]
  -[WBSHistory enumerateItemsAsynchronouslyUsingBlock:completionHandler:]
  -[WBSHistory itemVisitedAtURLString:title:wasHTTPNonGet:wasFailure:increaseVisitCount:]
  -[WBSHistory addAttributes:toVisit:]
  -[WBSHistory removeAttributes:fromVisit:]
  -[WBSHistory addTagWithIdentifier:title:toItemAtURL:level:completionHandler:]
  -[WBSHistory clearHistoryVisitsAddedAfterDate:beforeDate:]
  -[WBSHistory savePendingChangesBeforeTerminationWithCompletionHandler:]
  -[WBSHistory _unload]
  -[WBSHistory historyAgeLimit]
  -[WBSHistory historyTagMap]


WBSHistoryAccessSession : NSObject /usr/lib/libc++.1.dylib <WBSHistoryAccessSessionProtocol>
  // instance methods
  -[WBSHistoryAccessSession .cxx_destruct]
  -[WBSHistoryAccessSession getHistoryItemsVisitedAfterDate:beforeDate:completionHandler:]
  -[WBSHistoryAccessSession getHistoryVisitsAfterDate:beforeDate:completionHandler:]
  -[WBSHistoryAccessSession initWithHistoryService:]


WBSCredentialMatchCriteria : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long options
 @property  NSURL *URL
 @property  NSString *partialUsername

  // instance methods
  -[WBSCredentialMatchCriteria options]
  -[WBSCredentialMatchCriteria .cxx_destruct]
  -[WBSCredentialMatchCriteria URL]
  -[WBSCredentialMatchCriteria initWithURL:options:partialUsername:]
  -[WBSCredentialMatchCriteria partialUsername]


WBSHistoryAccessSessionProxy : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSHistoryAccessSessionProxy init]
  -[WBSHistoryAccessSessionProxy .cxx_destruct]
  -[WBSHistoryAccessSessionProxy getHistoryItemsVisitedAfterDate:beforeDate:completionHandler:]
  -[WBSHistoryAccessSessionProxy getHistoryVisitsAfterDate:beforeDate:completionHandler:]
  -[WBSHistoryAccessSessionProxy _getHistoryAccessSessionWithCompletionHandler:]


WBSHistoryAgeAndItemCountLimitEnforcementPlan : NSObject /usr/lib/libc++.1.dylib
 @property  NSSet *itemsToKeep
 @property  NSSet *itemsToDiscard
 @property  WBSHistoryDeletionPlan *deletionPlan

  // instance methods
  -[WBSHistoryAgeAndItemCountLimitEnforcementPlan .cxx_destruct]
  -[WBSHistoryAgeAndItemCountLimitEnforcementPlan execute]
  -[WBSHistoryAgeAndItemCountLimitEnforcementPlan prepare]
  -[WBSHistoryAgeAndItemCountLimitEnforcementPlan _itemsToDiscard]
  -[WBSHistoryAgeAndItemCountLimitEnforcementPlan initWithSQLiteStore:items:ageLimit:itemCountLimit:reason:]
  -[WBSHistoryAgeAndItemCountLimitEnforcementPlan itemsToKeep]
  -[WBSHistoryAgeAndItemCountLimitEnforcementPlan itemsToDiscard]
  -[WBSHistoryAgeAndItemCountLimitEnforcementPlan deletionPlan]


WBSHistoryConnection : NSObject /usr/lib/libc++.1.dylib <WBSHistoryConnectionProtocol>
  // instance methods
  -[WBSHistoryConnection .cxx_destruct]
  -[WBSHistoryConnection queryMemoryFootprint:]
  -[WBSHistoryConnection ensureConnected:]
  -[WBSHistoryConnection initWithHistoryService:]
  -[WBSHistoryConnection beginHistoryAccessSession:]
  -[WBSHistoryConnection getServiceInfo:]
  -[WBSHistoryConnection beginURLCompletionSession:]
  -[WBSHistoryConnection getVisitedLinksWithCompletionHandler:]
  -[WBSHistoryConnection groupVisitsIntoSessionsBetweenStartDate:endDate:completionHandler:]
  -[WBSHistoryConnection debugGetDatabaseURLWithCompletionHandler:]


WBSTabOrderManager : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSTabOrderProvider> *tabOrderProvider
 @property  <WBSOrderedTab> *tabToSelectBeforeClosingSelectedTab

  // instance methods
  -[WBSTabOrderManager init]
  -[WBSTabOrderManager .cxx_destruct]
  -[WBSTabOrderManager tabInsertionHintForPosition:]
  -[WBSTabOrderManager _tabInsertionHintForPosition:isBlankTab:]
  -[WBSTabOrderManager tabOrderProvider]
  -[WBSTabOrderManager _insertionHintWithTabToInsertAfter:relation:]
  -[WBSTabOrderManager _insertionHintWithIndexOfTabToInsertAfter:relation:]
  -[WBSTabOrderManager _indexOfTabToInsertNewTabAfter]
  -[WBSTabOrderManager _relationConsideringUserPreferenceForRelation:isBlankTab:]
  -[WBSTabOrderManager _indexOfLastRelatedTab]
  -[WBSTabOrderManager _tab:isRelatedOrEqualToTab:]
  -[WBSTabOrderManager tabInsertionHintForNewBlankTab]
  -[WBSTabOrderManager _userPreferredNewBlankTabPositionInCurrentContext:]
  -[WBSTabOrderManager _tabInsertionHintForNewBlankTabWithRecommendedPosition:]
  -[WBSTabOrderManager tabInsertionHintForSpawnedTab]
  -[WBSTabOrderManager _userPreferredNewSpawnedTabPosition]
  -[WBSTabOrderManager _newTabPositionPreferenceAppliesToSwawnedTabs]
  -[WBSTabOrderManager _nextNonClosedTabAdjacentToIndex:inAscendingOrder:]
  -[WBSTabOrderManager tab:isInSameSetAsTab:]
  -[WBSTabOrderManager tabToInsertNewTabAfterForPosition:]
  -[WBSTabOrderManager tabToInsertNewBlankTabAfter]
  -[WBSTabOrderManager tabInsertionHintForNewBlankTabInCurrentContext]
  -[WBSTabOrderManager tabToInsertSpawnedTabAfter]
  -[WBSTabOrderManager tabToSelectBeforeClosingSelectedTab]
  -[WBSTabOrderManager simplifiedIdentifierForDisplayInTabTitle:]
  -[WBSTabOrderManager setTabOrderProvider:]


WBSTabOrderInsertionHint : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSOrderedTab> *tabToInsertAfter
 @property  unsigned long insertionIndex
 @property  unsigned long relationType

  // instance methods
  -[WBSTabOrderInsertionHint .cxx_destruct]
  -[WBSTabOrderInsertionHint relationType]
  -[WBSTabOrderInsertionHint tabToInsertAfter]
  -[WBSTabOrderInsertionHint initWithTabToInsertAfter:insertionIndex:relation:]
  -[WBSTabOrderInsertionHint initWithTabToInsertAfter:relation:]
  -[WBSTabOrderInsertionHint insertionIndex]


WBSHistoryConnectionProxy : NSObject /usr/lib/libc++.1.dylib <WBSHistoryConnectionProxy>
 @property  NSObject<OS_dispatch_queue> *connectionProxyQueue

  // instance methods
  -[WBSHistoryConnectionProxy init]
  -[WBSHistoryConnectionProxy dealloc]
  -[WBSHistoryConnectionProxy .cxx_destruct]
  -[WBSHistoryConnectionProxy _setupConnection]
  -[WBSHistoryConnectionProxy queryMemoryFootprint:]
  -[WBSHistoryConnectionProxy queryMemoryFootprintWithError:]
  -[WBSHistoryConnectionProxy ensureConnected:]
  -[WBSHistoryConnectionProxy beginHistoryAccessSession:]
  -[WBSHistoryConnectionProxy getServiceInfo:]
  -[WBSHistoryConnectionProxy beginURLCompletionSession:]
  -[WBSHistoryConnectionProxy getVisitedLinksWithCompletionHandler:]
  -[WBSHistoryConnectionProxy groupVisitsIntoSessionsBetweenStartDate:endDate:completionHandler:]
  -[WBSHistoryConnectionProxy debugGetDatabaseURLWithCompletionHandler:]
  -[WBSHistoryConnectionProxy _defaultProxyErrorHandlerWithSimpleReplyCompletionHandler:]
  -[WBSHistoryConnectionProxy killService]
  -[WBSHistoryConnectionProxy connectionProxyQueue]


WBSHistoryDatabaseAccessBroker : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSHistoryDatabaseAccessBroker init]
  -[WBSHistoryDatabaseAccessBroker .cxx_destruct]
  -[WBSHistoryDatabaseAccessBroker requestAccessType:onQueue:completionHandler:]
  -[WBSHistoryDatabaseAccessBroker requestAccessType:onQueue:completionHandlerWithInvalidationHandler:]
  -[WBSHistoryDatabaseAccessBroker _requestReadOnlyAccessOnQueue:completionHandler:]
  -[WBSHistoryDatabaseAccessBroker _requestReadWriteAccessOnQueue:completionHandler:]
  -[WBSHistoryDatabaseAccessBroker _requestAccessType:onQueue:completionHandler:]
  -[WBSHistoryDatabaseAccessBroker _openDatabaseWithAccessType:onQueue:error:]
  -[WBSHistoryDatabaseAccessBroker initWithHistoryDatabaseURL:]
  -[WBSHistoryDatabaseAccessBroker databaseLastModifiedDate]


WBSHistoryDeletionPlan : NSObject /usr/lib/libc++.1.dylib
 @property  NSSet *triggeringItems
 @property  NSSet *triggeringVisits
 @property  NSSet *discoveredItemsToDelete
 @property  NSSet *discoveredVisitsToDelete
 @property  NSSet *allItemsToDelete
 @property  NSSet *allVisitsToDeleteExcludingVisitsFromItemsBeingDeleted
 @property  NSMapTable *allVisitsToDeleteByItemExcludingItemsBeingDeleted
 @property  NSMapTable *updatedLastVisitsByItem
 @property  BOOL wasPrepared

  // instance methods
  -[WBSHistoryDeletionPlan .cxx_destruct]
  -[WBSHistoryDeletionPlan execute]
  -[WBSHistoryDeletionPlan prepare]
  -[WBSHistoryDeletionPlan discoveredItemsToDelete]
  -[WBSHistoryDeletionPlan allVisitsToDeleteByItemExcludingItemsBeingDeleted]
  -[WBSHistoryDeletionPlan updatedLastVisitsByItem]
  -[WBSHistoryDeletionPlan initWithSQLiteStore:triggeringItems:excludingItems:visits:reason:]
  -[WBSHistoryDeletionPlan allItemsToDelete]
  -[WBSHistoryDeletionPlan allVisitsToDeleteExcludingVisitsFromItemsBeingDeleted]
  -[WBSHistoryDeletionPlan _prepareWithTriggeringItems:triggeringVisits:]
  -[WBSHistoryDeletionPlan _extraVisitsToDeleteWhenDeletingItems:visits:]
  -[WBSHistoryDeletionPlan _extraVisitsToDeleteWhenDeletingItems:visits:relatedVisitKey:relatedVisitsQueryFactory:]
  -[WBSHistoryDeletionPlan initWithSQLiteStore:triggeringVisits:excludingItems:visits:]
  -[WBSHistoryDeletionPlan triggeringItems]
  -[WBSHistoryDeletionPlan triggeringVisits]
  -[WBSHistoryDeletionPlan discoveredVisitsToDelete]
  -[WBSHistoryDeletionPlan wasPrepared]


WBSHistoryItem : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long dailyVisitCountScoresCountOnSynchronizationQueue
 @property  r^i dailyVisitCountScoresPtrOnSynchronizationQueue
 @property  unsigned long weeklyVisitCountScoresCountOnSynchronizationQueue
 @property  r^i weeklyVisitCountScoresPtrOnSynchronizationQueue
 @property  long long databaseID
 @property  NSString *title
 @property  NSString *urlString
 @property  NSString *userVisibleURLString
 @property  NSURL *url
 @property  NSArray *redirectSourceItems
 @property  NSArray *autocompleteTriggers
 @property  NSString *stringForUserTypedDomainExpansion
 @property  WBSHistoryVisit *lastVisit
 @property  double lastVisitedTimeInterval
 @property  NSDate *lastVisitedDate
 @property  NSArray *visits
 @property  unsigned long visitCount
 @property  unsigned long visitCountScore
 @property  BOOL shouldRecomputeDerivedVisitCountScores
 @property  BOOL lastVisitWasHTTPNonGet
 @property  BOOL lastVisitWasFailure
 @property  WBSHistoryItem *lastVisitRedirectDestinationItem
 @property  WBSHistoryItem *endOfLastVisitRedirectChain
 @property  WBSHistoryVisit *lastVisitOnSynchronizationQueue
 @property  double lastVisitedTimeIntervalOnSynchronizationQueue
 @property  NSSet *visitsPendingWriteToDataStoreOnSynchronizationQueue
 @property  NSData *dailyVisitCountScoresDataOnSynchronizationQueue
 @property  NSData *weeklyVisitCountScoresDataOnSynchronizationQueue
 @property  NSData *autocompleteTriggersDataOnSynchronizationQueue
 @property  float cachedTopSitesURLPenalty
 @property  float cachedTopSitesVisitScore
 @property  double lastTimeTopSitesScoreWasComputed
 @property  NSString *userVisibleHostOrFallbackURLString

  // class methods
  +[WBSHistoryItem initialize]
  +[WBSHistoryItem synchronizationQueue]
  +[WBSHistoryItem timeIntervalForDailyAndWeeklyVisitCountScores]

  // instance methods
  -[WBSHistoryItem .cxx_destruct]
  -[WBSHistoryItem url]
  -[WBSHistoryItem title]
  -[WBSHistoryItem setTitle:]
  -[WBSHistoryItem .cxx_construct]
  -[WBSHistoryItem visitCount]
  -[WBSHistoryItem lastVisitWasFailure]
  -[WBSHistoryItem urlString]
  -[WBSHistoryItem initWithURLString:]
  -[WBSHistoryItem visits]
  -[WBSHistoryItem lastVisitedTimeInterval]
  -[WBSHistoryItem databaseID]
  -[WBSHistoryItem setDatabaseID:]
  -[WBSHistoryItem initWithSQLiteRow:]
  -[WBSHistoryItem lastVisitedDate]
  -[WBSHistoryItem userVisibleURLString]
  -[WBSHistoryItem endOfLastVisitRedirectChain]
  -[WBSHistoryItem visitCountScore]
  -[WBSHistoryItem lastVisitedTimeIntervalOnSynchronizationQueue]
  -[WBSHistoryItem cachedTopSitesURLPenalty]
  -[WBSHistoryItem cachedTopSitesVisitScore]
  -[WBSHistoryItem dailyVisitCountScoresPtrOnSynchronizationQueue]
  -[WBSHistoryItem dailyVisitCountScoresCountOnSynchronizationQueue]
  -[WBSHistoryItem weeklyVisitCountScoresPtrOnSynchronizationQueue]
  -[WBSHistoryItem weeklyVisitCountScoresCountOnSynchronizationQueue]
  -[WBSHistoryItem setCachedTopSitesURLPenalty:]
  -[WBSHistoryItem setCachedTopSitesVisitScore:]
  -[WBSHistoryItem setLastTimeTopSitesScoreWasComputed:]
  -[WBSHistoryItem lastVisitWasHTTPNonGet]
  -[WBSHistoryItem lastVisit]
  -[WBSHistoryItem lastTimeTopSitesScoreWasComputed]
  -[WBSHistoryItem addAutocompleteTrigger:]
  -[WBSHistoryItem mergeDataFromItem:]
  -[WBSHistoryItem stringForUserTypedDomainExpansion]
  -[WBSHistoryItem wasVisited:]
  -[WBSHistoryItem wasRedirectedFrom:to:]
  -[WBSHistoryItem scoreOfVisit:wasUpdatedFrom:to:]
  -[WBSHistoryItem removeVisits:candidateLastVisit:]
  -[WBSHistoryItem addExistingVisit:]
  -[WBSHistoryItem lastVisitOnSynchronizationQueue]
  -[WBSHistoryItem removeVisitsOnSynchronizationQueue:candidateLastVisit:]
  -[WBSHistoryItem _collapseDailyVisitsToWeekly]
  -[WBSHistoryItem _autocompleteTriggersFromSynchronizationQueue]
  -[WBSHistoryItem _addAutocompleteTriggerFromSynchronizationQueue:]
  -[WBSHistoryItem _padDailyCountsForNewVisitAtTime:indexOfNewVisit:]
  -[WBSHistoryItem addRedirectSourceItemFromSynchronizationQueue:]
  -[WBSHistoryItem _wasVisitedOnSynchronizationQueue:]
  -[WBSHistoryItem _addVisit:]
  -[WBSHistoryItem _addExistingVisit:]
  -[WBSHistoryItem userVisibleHostOrFallbackURLString]
  -[WBSHistoryItem setLastVisitWasFailure:]
  -[WBSHistoryItem redirectSourceItems]
  -[WBSHistoryItem lastVisitRedirectDestinationItem]
  -[WBSHistoryItem autocompleteTriggers]
  -[WBSHistoryItem visitWasModified:]
  -[WBSHistoryItem visitsPendingWriteToDataStoreOnSynchronizationQueue]
  -[WBSHistoryItem clearVisitsPendingWriteToDataStoreFromSynchronizationQueue]
  -[WBSHistoryItem dailyVisitCountScoresDataOnSynchronizationQueue]
  -[WBSHistoryItem weeklyVisitCountScoresDataOnSynchronizationQueue]
  -[WBSHistoryItem autocompleteTriggersDataOnSynchronizationQueue]
  -[WBSHistoryItem recomputeDerivedVisitCountScoresWithVisits:]
  -[WBSHistoryItem shouldRecomputeDerivedVisitCountScores]


WBSHistoryNotification : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSString *name
 @property  NSDictionary *userInfo

  // class methods
  +[WBSHistoryNotification supportsSecureCoding]

  // instance methods
  -[WBSHistoryNotification init]
  -[WBSHistoryNotification name]
  -[WBSHistoryNotification userInfo]
  -[WBSHistoryNotification encodeWithCoder:]
  -[WBSHistoryNotification initWithCoder:]
  -[WBSHistoryNotification .cxx_destruct]
  -[WBSHistoryNotification initWithName:userInfo:]


WBSProtectionSpaceMatch : NSObject /usr/lib/libc++.1.dylib
 @property  NSURLProtectionSpace *protectionSpace
 @property  NSDictionary *credentials
 @property  NSURLCredential *defaultCredential
 @property  long long matchLevel

  // instance methods
  -[WBSProtectionSpaceMatch .cxx_destruct]
  -[WBSProtectionSpaceMatch protectionSpace]
  -[WBSProtectionSpaceMatch credentials]
  -[WBSProtectionSpaceMatch initWithProtectionSpace:credentials:defaultCredential:matchLevel:]
  -[WBSProtectionSpaceMatch defaultCredential]
  -[WBSProtectionSpaceMatch matchLevel]


WBSHistoryService : NSObject /usr/lib/libc++.1.dylib <NSXPCListenerDelegate>
 @property  WBSHistoryDatabaseAccessBroker *databaseAccessBroker
 @property  WBSHistoryURLCompletionDataStore *urlCompletionDataStore
 @property  NSURL *databaseURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSHistoryService init]
  -[WBSHistoryService _resume]
  -[WBSHistoryService .cxx_destruct]
  -[WBSHistoryService listener:shouldAcceptNewConnection:]
  -[WBSHistoryService databaseURL]
  -[WBSHistoryService _shutdown]
  -[WBSHistoryService databaseAccessBroker]
  -[WBSHistoryService _connectionIsEntitledToUseUserDatabase:]
  -[WBSHistoryService urlCompletionDataStore]


WBSLeadImageSaver : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSLeadImageSaver saveLeadImageFromWebView:toLeadImageCacheRegisteredWithMetadataManager:completionHandler:]


WBSHistorySession : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *startDate
 @property  BOOL isCurrentSession

  // class methods
  +[WBSHistorySession currentSession]

  // instance methods
  -[WBSHistorySession init]
  -[WBSHistorySession isEqual:]
  -[WBSHistorySession .cxx_destruct]
  -[WBSHistorySession startDate]
  -[WBSHistorySession initWithSessionStartDate:]
  -[WBSHistorySession isCurrentSession]


WBSTranslationInformation : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *urlString
 @property  NSString *sourceLanguage
 @property  NSString *targetLanguage

  // instance methods
  -[WBSTranslationInformation init]
  -[WBSTranslationInformation isEqual:]
  -[WBSTranslationInformation .cxx_destruct]
  -[WBSTranslationInformation urlString]
  -[WBSTranslationInformation sourceLanguage]
  -[WBSTranslationInformation targetLanguage]
  -[WBSTranslationInformation initWithURLString:sourceLanguage:targetLanguage:]


WBSHistorySessionController : NSObject /usr/lib/libc++.1.dylib <WBSHistorySessions>
 @property  NSArray *orderedSessions
 @property  unsigned long numberOfSessions

  // class methods
  +[WBSHistorySessionController sharedSessionController]

  // instance methods
  -[WBSHistorySessionController .cxx_destruct]
  -[WBSHistorySessionController _historyItemsWereRemoved:]
  -[WBSHistorySessionController initWithHistory:]
  -[WBSHistorySessionController _historyItemsWereAdded:]
  -[WBSHistorySessionController _timeZoneDidChange:]
  -[WBSHistorySessionController _loadSessionCache]
  -[WBSHistorySessionController _getKey:forDate:]
  -[WBSHistorySessionController _orderedSessionKeys]
  -[WBSHistorySessionController _insertItem:withSessionKey:]
  -[WBSHistorySessionController _addItemsToSessionCache:shouldPostChangeNotification:]
  -[WBSHistorySessionController _removeItemsFromSessionCache:]
  -[WBSHistorySessionController _clearSessionCache]
  -[WBSHistorySessionController _dispatchHistorySessionsDidChangeNotification]
  -[WBSHistorySessionController numberOfItemsVisitedInSession:]
  -[WBSHistorySessionController itemLastVisitedInSession:atIndex:]
  -[WBSHistorySessionController itemsLastVisitedInSession:]
  -[WBSHistorySessionController enumerateOrderedItemsLastVisitedInSession:usingBlock:]
  -[WBSHistorySessionController orderedItemsNewerThanDate:maxCount:completionHandler:]
  -[WBSHistorySessionController orderedSessions]
  -[WBSHistorySessionController numberOfSessions]
  -[WBSHistorySessionController sessionForItem:]
  -[WBSHistorySessionController _requestSessionKeyForDate:withBlock:]


WBSHistoryTopicTag : WBSHistoryTag
 @property  NSArray *historyItems

  // class methods
  +[WBSHistoryTopicTag initialize]

  // instance methods
  -[WBSHistoryTopicTag dealloc]
  -[WBSHistoryTopicTag .cxx_destruct]
  -[WBSHistoryTopicTag _historyItemsWereRemoved:]
  -[WBSHistoryTopicTag historyItems]
  -[WBSHistoryTopicTag initWithTitle:identifier:databaseID:modificationTimestamp:level:]
  -[WBSHistoryTopicTag removeHistoryItems:]
  -[WBSHistoryTopicTag initWithTag:historyItems:]
  -[WBSHistoryTopicTag tagHistoryItem:]
  -[WBSHistoryTopicTag groupHistoryItemsBySessionWithCompletionHandler:]
  -[WBSHistoryTopicTag containsHistoryItem:]


WBSHistorySessionIntervalCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSHistorySessionIntervalCache init]
  -[WBSHistorySessionIntervalCache .cxx_destruct]
  -[WBSHistorySessionIntervalCache .cxx_construct]
  -[WBSHistorySessionIntervalCache initWithCalendar:]
  -[WBSHistorySessionIntervalCache beginningOfSessionContainingTime:]
  -[WBSHistorySessionIntervalCache _beginningOfSessionContainingTime:]
  -[WBSHistorySessionIntervalCache _getSessionIntervalForTime:beginningOfDay:beginningOfNextDay:]


WBSReaderConfigurationManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *configurationToSave
 @property  NSDictionary *configurationToSendToWebPage
 @property  BOOL javaScriptEnabled
 @property  BOOL darkModeEnabled
 @property  BOOL isOLEDDisplay
 @property  BOOL canMakeTextBigger
 @property  BOOL canMakeTextSmaller
 @property  BOOL resettingTextSizeWouldHaveEffect

  // instance methods
  -[WBSReaderConfigurationManager .cxx_destruct]
  -[WBSReaderConfigurationManager setJavaScriptEnabled:]
  -[WBSReaderConfigurationManager javaScriptEnabled]
  -[WBSReaderConfigurationManager canMakeTextSmaller]
  -[WBSReaderConfigurationManager initWithPersistedSettingsAsDictionaryRepresentation:fontManager:prefersLargerDefaultFontSize:]
  -[WBSReaderConfigurationManager setIsOLEDDisplay:]
  -[WBSReaderConfigurationManager setFont:forLanguageTag:]
  -[WBSReaderConfigurationManager setTheme:forAppearance:]
  -[WBSReaderConfigurationManager canMakeTextBigger]
  -[WBSReaderConfigurationManager makeTextBigger]
  -[WBSReaderConfigurationManager makeTextSmaller]
  -[WBSReaderConfigurationManager resetTextSize]
  -[WBSReaderConfigurationManager configurationToSave]
  -[WBSReaderConfigurationManager configurationToSendToWebPage]
  -[WBSReaderConfigurationManager fontForLanguageTag:]
  -[WBSReaderConfigurationManager themeForAppearance:]
  -[WBSReaderConfigurationManager darkModeEnabled]
  -[WBSReaderConfigurationManager setDarkModeEnabled:]
  -[WBSReaderConfigurationManager _defaultTextZoomIndex]
  -[WBSReaderConfigurationManager _migrateToVersion5IfNecessary]
  -[WBSReaderConfigurationManager _effectiveTextZoomIndex]
  -[WBSReaderConfigurationManager _defaultThemeForAppearance:]
  -[WBSReaderConfigurationManager initWithPersistedSettingsAsDictionaryRepresentation:fontManager:]
  -[WBSReaderConfigurationManager resettingTextSizeWouldHaveEffect]
  -[WBSReaderConfigurationManager isOLEDDisplay]


WBSHistorySQLiteStore : NSObject /usr/lib/libc++.1.dylib <WBSHistoryStore, WBSHistoryLoader>
 @property  WBSSQLiteDatabase *database
 @property  WBSHistoryCrypto *crypto
 @property  <WBSHistoryStoreDelegate> *delegate
 @property  NSData *pushThrottlerData
 @property  NSData *fetchThrottlerData
 @property  NSData *syncCircleSizeRetrievalThrottlerData
 @property  NSData *longLivedSaveOperationData
 @property  unsigned long cachedNumberOfDevicesInSyncCircle
 @property  BOOL pushNotificationsAreInitialized
 @property  double historyAgeLimit
 @property  NSData *salt
 @property  BOOL syncsWithManateeContainer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isUsingInMemoryDatabase

  // instance methods
  -[WBSHistorySQLiteStore dealloc]
  -[WBSHistorySQLiteStore delegate]
  -[WBSHistorySQLiteStore setDelegate:]
  -[WBSHistorySQLiteStore .cxx_destruct]
  -[WBSHistorySQLiteStore .cxx_construct]
  -[WBSHistorySQLiteStore database]
  -[WBSHistorySQLiteStore salt]
  -[WBSHistorySQLiteStore startLoading]
  -[WBSHistorySQLiteStore closeWithCompletionHandler:]
  -[WBSHistorySQLiteStore _currentGeneration]
  -[WBSHistorySQLiteStore checkIfLocalVisitExistsInAnyOfItems:withCompletion:]
  -[WBSHistorySQLiteStore _checkDatabaseIntegrity]
  -[WBSHistorySQLiteStore _migrateToCurrentSchemaVersionIfNeeded]
  -[WBSHistorySQLiteStore setServerChangeTokenData:]
  -[WBSHistorySQLiteStore setLongLivedSaveOperationData:]
  -[WBSHistorySQLiteStore getVisitsAndTombstonesNeedingSyncWithVisitSyncWindow:completion:]
  -[WBSHistorySQLiteStore getServerChangeTokenDataWithCompletion:]
  -[WBSHistorySQLiteStore syncsWithManateeContainer]
  -[WBSHistorySQLiteStore setSyncsWithManateeContainer:]
  -[WBSHistorySQLiteStore pruneTombstonesWithEndDatePriorToDate:]
  -[WBSHistorySQLiteStore updateHistoryAfterSuccessfulPersistedLongLivedSaveOperationWithGeneration:completion:]
  -[WBSHistorySQLiteStore longLivedSaveOperationData]
  -[WBSHistorySQLiteStore pushNotificationsAreInitialized]
  -[WBSHistorySQLiteStore setPushNotificationsAreInitialized:]
  -[WBSHistorySQLiteStore pushThrottlerData]
  -[WBSHistorySQLiteStore fetchThrottlerData]
  -[WBSHistorySQLiteStore syncCircleSizeRetrievalThrottlerData]
  -[WBSHistorySQLiteStore setPushThrottlerData:]
  -[WBSHistorySQLiteStore setFetchThrottlerData:]
  -[WBSHistorySQLiteStore setSyncCircleSizeRetrievalThrottlerData:]
  -[WBSHistorySQLiteStore cachedNumberOfDevicesInSyncCircle]
  -[WBSHistorySQLiteStore setCachedNumberOfDevicesInSyncCircle:]
  -[WBSHistorySQLiteStore resetCloudHistoryDataWithCompletionHandler:]
  -[WBSHistorySQLiteStore setLastSeenDate:forCloudClientVersion:]
  -[WBSHistorySQLiteStore replayAndAddTombstones:completionHandler:]
  -[WBSHistorySQLiteStore getAllTombstonesWithCompletion:]
  -[WBSHistorySQLiteStore visitIdentifiersMatchingExistingVisits:populateAssociatedVisits:completion:]
  -[WBSHistorySQLiteStore removePastHistoryVisitsForItem:completionHandler:]
  -[WBSHistorySQLiteStore itemWasReplaced:byItem:]
  -[WBSHistorySQLiteStore setHistoryAgeLimit:]
  -[WBSHistorySQLiteStore lastSeenDateForCloudClientVersion:]
  -[WBSHistorySQLiteStore visitsWereAdded:]
  -[WBSHistorySQLiteStore visitsWereModified:]
  -[WBSHistorySQLiteStore getVisitsCreatedAfterDate:beforeDate:completionHandler:]
  -[WBSHistorySQLiteStore visitTitleWasUpdated:]
  -[WBSHistorySQLiteStore fetchTopicsFromStartDate:toEndDate:completionHandler:]
  -[WBSHistorySQLiteStore fetchTopicsFromStartDate:toEndDate:limit:minimumItemCount:sortOrder:completionHandler:]
  -[WBSHistorySQLiteStore assignHistoryItem:toTopicTags:completionHandler:]
  -[WBSHistorySQLiteStore tagsWithIdentifiers:type:level:creatingIfNecessary:withTitles:completionHandler:]
  -[WBSHistorySQLiteStore setTitle:ofTag:completionHandler:]
  -[WBSHistorySQLiteStore clearHistoryVisitsAddedAfterDate:beforeDate:completionHandler:]
  -[WBSHistorySQLiteStore clearHistoryWithCompletionHandler:]
  -[WBSHistorySQLiteStore vacuumHistoryWithCompletionHandler:]
  -[WBSHistorySQLiteStore performMaintenance:]
  -[WBSHistorySQLiteStore _loadHistory]
  -[WBSHistorySQLiteStore waitForLoadingToComplete]
  -[WBSHistorySQLiteStore isUsingInMemoryDatabase]
  -[WBSHistorySQLiteStore itemsWereAdded:byUserInitiatedAction:]
  -[WBSHistorySQLiteStore itemsWereModified:byUserInitiatedAction:]
  -[WBSHistorySQLiteStore historyAgeLimit]
  -[WBSHistorySQLiteStore removeItemsOnDatabaseQueue:]
  -[WBSHistorySQLiteStore removeVisitsOnDatabaseQueue:]
  -[WBSHistorySQLiteStore addOrUpdateItemsOnDatabaseQueue:]
  -[WBSHistorySQLiteStore allVisitsForItemsOnDatabaseQueue:]
  -[WBSHistorySQLiteStore enumerateLastVisitForItemsOnDatabaseQueue:ignoringVisits:enumerationBlock:]
  -[WBSHistorySQLiteStore enumeratePriorVisitsInRedirectChainOnDatabaseQueue:items:enumerationBlock:]
  -[WBSHistorySQLiteStore enumerateSubsequentVisitsInRedirectChainOnDatabaseQueue:items:enumerationBlock:]
  -[WBSHistorySQLiteStore _processPendingWrites]
  -[WBSHistorySQLiteStore _finishLoadingOnMainThreadIfNeeded]
  -[WBSHistorySQLiteStore _updateGenerationForVisits:]
  -[WBSHistorySQLiteStore _visitsCreatedAfterDate:beforeDate:]
  -[WBSHistorySQLiteStore _clearHistoryVisitsAddedAfterDate:beforeDate:addingTombstone:completionHandler:]
  -[WBSHistorySQLiteStore _shouldEmitLegacyTombstones]
  -[WBSHistorySQLiteStore _clearHistoryVisitsMatchingURLString:afterDate:beforeDate:addingTombstone:completionHandler:]
  -[WBSHistorySQLiteStore _insertTombstone:]
  -[WBSHistorySQLiteStore _removeVisitsProvidedByBlockInvokedOnDatabaseQueue:addingTombstone:completionHandler:]
  -[WBSHistorySQLiteStore _visitsCreatedMatchingURLString:afterDate:beforeDate:]
  -[WBSHistorySQLiteStore _visitsCreatedMatchingURLHash:salt:afterDate:beforeDate:]
  -[WBSHistorySQLiteStore _incrementCurrentGeneration]
  -[WBSHistorySQLiteStore _visitsNeedingSyncWithVisitSyncWindow:]
  -[WBSHistorySQLiteStore _tombstonesNeedingSync]
  -[WBSHistorySQLiteStore _updateDatabaseAfterSuccessfulSyncWithGeneration:convertTombstonesToSecureFormat:]
  -[WBSHistorySQLiteStore _lastSyncedGeneration]
  -[WBSHistorySQLiteStore _convertTombstoneWithGenerationToSecureFormat:]
  -[WBSHistorySQLiteStore _setLastSyncedGeneration:]
  -[WBSHistorySQLiteStore _visitsFromRows:predicate:]
  -[WBSHistorySQLiteStore visitForRow:]
  -[WBSHistorySQLiteStore _metadataDataValueForKey:]
  -[WBSHistorySQLiteStore _setMetadataDataValue:forKey:]
  -[WBSHistorySQLiteStore _pruneTombstonesOnDatabaseQueueWithEndDatePriorToDate:]
  -[WBSHistorySQLiteStore _setMetadataInt64Value:forKey:]
  -[WBSHistorySQLiteStore _clearHistoryVisitsMatchingURLHash:salt:afterDate:beforeDate:addingTombstone:completionHandler:]
  -[WBSHistorySQLiteStore _metadataInt64ValueForKey:]
  -[WBSHistorySQLiteStore _scheduleWrite]
  -[WBSHistorySQLiteStore existingItemFromVisitRow:]
  -[WBSHistorySQLiteStore visitForItem:row:]
  -[WBSHistorySQLiteStore _tagsWithIdentifiers:titles:ofType:level:creatingIfNeeded:createdTags:error:]
  -[WBSHistorySQLiteStore _fetchHistoryTagsWithPredicate:error:]
  -[WBSHistorySQLiteStore _createHistoryTagsWithIdentifiers:titles:type:level:error:]
  -[WBSHistorySQLiteStore _classForHistoryTagType:]
  -[WBSHistorySQLiteStore _populateHistoryItemsInHistoryTopicTag:fromStartDate:toEndDate:error:]
  -[WBSHistorySQLiteStore _openDatabase:andCheckIntegrity:]
  -[WBSHistorySQLiteStore _finishLoadingOnMainThread]
  -[WBSHistorySQLiteStore _registerHistoryTagFrecencyScoringFunction]
  -[WBSHistorySQLiteStore _loadFromDatabase]
  -[WBSHistorySQLiteStore _loadRedirectVisitsForLoadedItems:]
  -[WBSHistorySQLiteStore _ageLimitSinceReferenceDate]
  -[WBSHistorySQLiteStore _cachedNumberOfDevicesInSyncCircleOnDatabaseQueue]
  -[WBSHistorySQLiteStore _loadClientVersions]
  -[WBSHistorySQLiteStore _scheduleMaintenance]
  -[WBSHistorySQLiteStore _writeTimerFired]
  -[WBSHistorySQLiteStore _processPendingDeletes]
  -[WBSHistorySQLiteStore _insertItem:]
  -[WBSHistorySQLiteStore _updateItem:]
  -[WBSHistorySQLiteStore _updateVisitRedirectRelationships:]
  -[WBSHistorySQLiteStore _checkpointWriteAheadLog]
  -[WBSHistorySQLiteStore _processPendingVisitDeletes]
  -[WBSHistorySQLiteStore _insertVisit:]
  -[WBSHistorySQLiteStore _updateVisit:]
  -[WBSHistorySQLiteStore _lastSeenDateForCloudClientVersionOnDatabaseQueue:]
  -[WBSHistorySQLiteStore _deletionPlanForDeletionOfVisits:]
  -[WBSHistorySQLiteStore _performMaintenance:]
  -[WBSHistorySQLiteStore _recomputeDerivedVisitCountScores]
  -[WBSHistorySQLiteStore _expireOldVisits]
  -[WBSHistorySQLiteStore _enforceAgeAndItemCountLimits:]
  -[WBSHistorySQLiteStore initWithURL:itemCountLimit:historyAgeLimit:historyItemClass:]
  -[WBSHistorySQLiteStore _shouldMigrateFromPropertyListWhenLoadingDatabase:]
  -[WBSHistorySQLiteStore _setOrigin:forVisitsFromOrigin:]
  -[WBSHistorySQLiteStore _visitsWithOrigins:]
  -[WBSHistorySQLiteStore crypto]


WBSHistoryTag : NSObject /usr/lib/libc++.1.dylib
 @property  long long databaseID
 @property  NSString *title
 @property  NSString *identifier
 @property  double modificationTimestamp
 @property  long long level

  // instance methods
  -[WBSHistoryTag init]
  -[WBSHistoryTag isEqual:]
  -[WBSHistoryTag .cxx_destruct]
  -[WBSHistoryTag identifier]
  -[WBSHistoryTag level]
  -[WBSHistoryTag title]
  -[WBSHistoryTag modificationTimestamp]
  -[WBSHistoryTag databaseID]
  -[WBSHistoryTag initWithTitle:identifier:databaseID:modificationTimestamp:level:]


WBSHistoryTombstone : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDictionary *dictionaryRepresentation
 @property  NSString *urlString
 @property  NSData *urlHash
 @property  NSData *urlSalt
 @property  double startTime
 @property  double endTime
 @property  long long generation
 @property  BOOL secure

  // class methods
  +[WBSHistoryTombstone supportsSecureCoding]

  // instance methods
  -[WBSHistoryTombstone encodeWithCoder:]
  -[WBSHistoryTombstone initWithCoder:]
  -[WBSHistoryTombstone .cxx_destruct]
  -[WBSHistoryTombstone initWithDictionary:]
  -[WBSHistoryTombstone dictionaryRepresentation]
  -[WBSHistoryTombstone generation]
  -[WBSHistoryTombstone startTime]
  -[WBSHistoryTombstone endTime]
  -[WBSHistoryTombstone isSecure]
  -[WBSHistoryTombstone urlString]
  -[WBSHistoryTombstone matchesVisitTime:urlString:]
  -[WBSHistoryTombstone initWithURLString:urlHash:urlSalt:startTime:endTime:generation:]
  -[WBSHistoryTombstone secureTombstoneWithSalt:]
  -[WBSHistoryTombstone initWithSQLiteRow:crypto:]
  -[WBSHistoryTombstone urlHash]
  -[WBSHistoryTombstone urlSalt]


WBSHistoryTagDatabaseController : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSHistoryTagDatabaseController .cxx_destruct]
  -[WBSHistoryTagDatabaseController initWithDatabase:]
  -[WBSHistoryTagDatabaseController createTagsForIdentifiers:withTitles:type:level:error:]
  -[WBSHistoryTagDatabaseController assignHistoryItemWithID:toTopicTagsWithIDs:error:]
  -[WBSHistoryTagDatabaseController renameTagWithID:toTitle:error:]
  -[WBSHistoryTagDatabaseController clearAllTagsWithError:]
  -[WBSHistoryTagDatabaseController clearTagsFromStartDate:endDate:error:]


WBSHistoryURLCompletionDataStore : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSHistoryURLCompletionDataStore .cxx_destruct]
  -[WBSHistoryURLCompletionDataStore initWithHistoryService:]
  -[WBSHistoryURLCompletionDataStore _loadFromDatabaseIfNecessary]
  -[WBSHistoryURLCompletionDataStore _completionItemFromRow:]
  -[WBSHistoryURLCompletionDataStore _enumerateCompletionItemsForMostRecentVisitsFromDatabase:usingBlock:]
  -[WBSHistoryURLCompletionDataStore _completionItemFromDatabase:withVisitDatabaseID:]
  -[WBSHistoryURLCompletionDataStore getSnapshotWithCompletionHandler:]


WBSHistoryURLCompletionMatchData : NSObject /usr/lib/libc++.1.dylib <WBSURLCompletionMatchData>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *originalURLString
 @property  BOOL containsBookmark
 @property  double lastVisitedTimeInterval
 @property  BOOL lastVisitWasFailure
 @property  long long visitCount

  // instance methods
  -[WBSHistoryURLCompletionMatchData init]
  -[WBSHistoryURLCompletionMatchData .cxx_destruct]
  -[WBSHistoryURLCompletionMatchData .cxx_construct]
  -[WBSHistoryURLCompletionMatchData visitCount]
  -[WBSHistoryURLCompletionMatchData lastVisitWasFailure]
  -[WBSHistoryURLCompletionMatchData lastVisitedTimeInterval]
  -[WBSHistoryURLCompletionMatchData originalURLString]
  -[WBSHistoryURLCompletionMatchData pageTitleAtIndex:]
  -[WBSHistoryURLCompletionMatchData pageTitleForUserVisibleURLStringAtIndex:]
  -[WBSHistoryURLCompletionMatchData containsBookmark]
  -[WBSHistoryURLCompletionMatchData userVisibleURLStringForPageTitleAtIndex:]
  -[WBSHistoryURLCompletionMatchData userVisibleURLStringAtIndex:]
  -[WBSHistoryURLCompletionMatchData enumeratePageTitlesUsingBlock:]
  -[WBSHistoryURLCompletionMatchData enumerateUserVisibleURLsUsingBlock:]
  -[WBSHistoryURLCompletionMatchData topSitesScoreForPageTitleAtIndex:atTime:]
  -[WBSHistoryURLCompletionMatchData topSitesScoreForURLStringAtIndex:atTime:]
  -[WBSHistoryURLCompletionMatchData matchDataByMergingWithMatchData:]
  -[WBSHistoryURLCompletionMatchData matchesAutocompleteTrigger:]
  -[WBSHistoryURLCompletionMatchData initWithCompletionItem:]


WBSFaviconProviderUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSFaviconProviderUtilities computeRelativeSize:referenceSize:]
  +[WBSFaviconProviderUtilities isFaviconSize:morePreferrableThanFaviconSize:givenDesiredSize:]
  +[WBSFaviconProviderUtilities sizeOfImageWithData:closestToPreferredSize:isMultiResolution:]
  +[WBSFaviconProviderUtilities multiResolutionImageFromImageData:withPreferredSize:atScales:didGenerateResolutions:]
  +[WBSFaviconProviderUtilities imageWithURL:closetToPreferredSize:]


WBSHistoryURLCompletionSession : NSObject /usr/lib/libc++.1.dylib <WBSURLCompletionSessionProtocol>
  // instance methods
  -[WBSHistoryURLCompletionSession .cxx_destruct]
  -[WBSHistoryURLCompletionSession initWithHistoryService:]
  -[WBSHistoryURLCompletionSession getBestMatchesForTypedString:limit:forQueryID:completionHandler:]


WBSHistoryVisit : NSObject /usr/lib/libc++.1.dylib
 @property  long long databaseID
 @property  long long redirectSourceDatabaseID
 @property  long long redirectDestinationDatabaseID
 @property  long long generation
 @property  WBSHistoryItem *item
 @property  long long origin
 @property  double visitTime
 @property  NSString *title
 @property  unsigned long score
 @property  unsigned long attributes
 @property  BOOL loadSuccessful
 @property  BOOL httpNonGet
 @property  BOOL synthesized
 @property  WBSHistoryVisit *redirectSource
 @property  WBSHistoryVisit *redirectDestination
 @property  WBSHistoryVisit *endOfRedirectChain
 @property  unsigned long redirectSourceChainLength

  // class methods
  +[WBSHistoryVisit scoreForWeightedVisitCount:]
  +[WBSHistoryVisit weightedVisitCountFromScore:]
  +[WBSHistoryVisit synthesizedVisitWithHistoryItem:visitTime:]

  // instance methods
  -[WBSHistoryVisit .cxx_destruct]
  -[WBSHistoryVisit attributes]
  -[WBSHistoryVisit item]
  -[WBSHistoryVisit setItem:]
  -[WBSHistoryVisit setAttributes:]
  -[WBSHistoryVisit _weight]
  -[WBSHistoryVisit title]
  -[WBSHistoryVisit setTitle:]
  -[WBSHistoryVisit score]
  -[WBSHistoryVisit origin]
  -[WBSHistoryVisit setScore:]
  -[WBSHistoryVisit generation]
  -[WBSHistoryVisit setOrigin:]
  -[WBSHistoryVisit setGeneration:]
  -[WBSHistoryVisit databaseID]
  -[WBSHistoryVisit setDatabaseID:]
  -[WBSHistoryVisit visitTime]
  -[WBSHistoryVisit wasHTTPNonGet]
  -[WBSHistoryVisit loadWasSuccessful]
  -[WBSHistoryVisit redirectSource]
  -[WBSHistoryVisit redirectDestination]
  -[WBSHistoryVisit setLoadSuccessful:]
  -[WBSHistoryVisit initWithHistoryItem:visitTime:loadWasSuccesful:wasHTTPNonGet:origin:attributes:]
  -[WBSHistoryVisit redirectSourceChainLength]
  -[WBSHistoryVisit hasAttributes:]
  -[WBSHistoryVisit initWithHistoryItem:sqliteRow:baseColumnIndex:]
  -[WBSHistoryVisit endOfRedirectChain]
  -[WBSHistoryVisit setRedirectSource:]
  -[WBSHistoryVisit setRedirectDestination:]
  -[WBSHistoryVisit recomputeScore]
  -[WBSHistoryVisit redirectSourceDatabaseID]
  -[WBSHistoryVisit redirectDestinationDatabaseID]
  -[WBSHistoryVisit isSynthesized]
  -[WBSHistoryVisit initWithHistoryItem:visitTime:]
  -[WBSHistoryVisit setRedirectDestinationDatabaseID:]
  -[WBSHistoryVisit setRedirectSourceDatabaseID:]


WBSImageFetchingURLSessionTaskManager : NSObject /usr/lib/libc++.1.dylib <NSURLSessionTaskDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSImageFetchingURLSessionTaskManager sharedManager]

  // instance methods
  -[WBSImageFetchingURLSessionTaskManager URLSession:task:didReceiveChallenge:completionHandler:]


WBSImageUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSImageUtilities _pixelDataForImage:]
  +[WBSImageUtilities squareThumbnailImageFromImage:thumbnailWidthInPixels:]
  +[WBSImageUtilities flatImage:withColor:]
  +[WBSImageUtilities image:isEqualToImage:]
  +[WBSImageUtilities imageSizeScalingSize:proportionallyToFitSize:]
  +[WBSImageUtilities resizedImage:withSize:]


WBSHistoryCrypto : NSObject /usr/lib/libc++.1.dylib
 @property  NSData *salt
 @property  NSData *cryptographicKey

  // instance methods
  -[WBSHistoryCrypto init]
  -[WBSHistoryCrypto .cxx_destruct]
  -[WBSHistoryCrypto salt]
  -[WBSHistoryCrypto decryptDictionary:]
  -[WBSHistoryCrypto encryptDictionary:]
  -[WBSHistoryCrypto initWithCryptographicKey:salt:]
  -[WBSHistoryCrypto _createCryptographicKey]
  -[WBSHistoryCrypto _createOrLoadCryptographicKey]
  -[WBSHistoryCrypto cryptographicKey]


WBSSmartHistorySearcher : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSSmartHistorySearcher .cxx_destruct]
  -[WBSSmartHistorySearcher _searchItemsInTopic:forText:options:]
  -[WBSSmartHistorySearcher _searchTopicsForText:options:]
  -[WBSSmartHistorySearcher initWithTopics:]
  -[WBSSmartHistorySearcher performSearchWithText:options:completionHandler:]


WBSSingleCreditCardData : NSObject /usr/lib/libc++.1.dylib
 @property  id value
 @property  long long type

  // instance methods
  -[WBSSingleCreditCardData init]
  -[WBSSingleCreditCardData type]
  -[WBSSingleCreditCardData .cxx_destruct]
  -[WBSSingleCreditCardData value]
  -[WBSSingleCreditCardData initWithValue:type:]


_WBSFaviconRecord : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *pageURL
 @property  NSURL *originalPageURL
 @property  NSURL *iconURL
 @property  NSData *iconData
 @property  {CGSize=dd} size
 @property  BOOL isPrivate

  // class methods
  +[_WBSFaviconRecord new]

  // instance methods
  -[_WBSFaviconRecord init]
  -[_WBSFaviconRecord .cxx_destruct]
  -[_WBSFaviconRecord size]
  -[_WBSFaviconRecord iconData]
  -[_WBSFaviconRecord pageURL]
  -[_WBSFaviconRecord isPrivate]
  -[_WBSFaviconRecord iconURL]
  -[_WBSFaviconRecord initWithPageURL:originalPageURL:iconURL:iconData:size:isPrivate:]
  -[_WBSFaviconRecord originalPageURL]


WBSFaviconProvider : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataProvider>
 @property  NSURL *baseURL
 @property  {CGSize=dd} preferredIconSize
 @property  double preferredIconScale
 @property  NSArray *allIconScales
 @property  BOOL isReadOnly
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons

  // class methods
  +[WBSFaviconProvider defaultFaviconSize]

  // instance methods
  -[WBSFaviconProvider init]
  -[WBSFaviconProvider dealloc]
  -[WBSFaviconProvider baseURL]
  -[WBSFaviconProvider .cxx_destruct]
  -[WBSFaviconProvider canHandleRequest:]
  -[WBSFaviconProvider isReadOnly]
  -[WBSFaviconProvider _registerRequest:]
  -[WBSFaviconProvider persistenceController]
  -[WBSFaviconProvider stopWatchingUpdatesForRequest:]
  -[WBSFaviconProvider initWithPersistenceBaseURL:persistenceName:preferredIconSize:atScale:allScales:isReadOnly:shouldCheckIntegrityWhenOpeningDatabaseBlock:]
  -[WBSFaviconProvider fallbackIconForRequest:]
  -[WBSFaviconProvider savePendingChangesBeforeTermination]
  -[WBSFaviconProvider preferredIconSize]
  -[WBSFaviconProvider responseForRequest:willProvideUpdates:]
  -[WBSFaviconProvider prepareResponseForRequest:allowDelayedResponse:]
  -[WBSFaviconProvider providerDelegate]
  -[WBSFaviconProvider setProviderDelegate:]
  -[WBSFaviconProvider emptyCaches]
  -[WBSFaviconProvider providesFavicons]
  -[WBSFaviconProvider setUpWithCompletionHandler:]
  -[WBSFaviconProvider _updateOutstandingRequestsAfterSuccessfulSetup]
  -[WBSFaviconProvider _atomicallySaveImageData:iconURL:pageURL:originalPageURL:size:isPrivate:completionHandler:]
  -[WBSFaviconProvider cleanUpAfterPersistenceSetUpDidSucceed:completionHandler:]
  -[WBSFaviconProvider setUpPersistenceAtPath:completionHandler:]
  -[WBSFaviconProvider _isIconDateExpired:]
  -[WBSFaviconProvider _atomicallyLinkPageURLs:toIconWithInfo:isPrivate:]
  -[WBSFaviconProvider _updateOutstandingRequestsForPageURL:forceDidReceiveNewData:]
  -[WBSFaviconProvider _saveImageData:iconURL:pageURL:originalPageURL:size:isPrivate:completionHandler:]
  -[WBSFaviconProvider _confirmImageDataShouldBeSaved:size:pageURL:iconURL:includingPrivateData:completionHandler:]
  -[WBSFaviconProvider flushPrivateDataFromMemoryWithCompletionHandler:]
  -[WBSFaviconProvider _cachedResponseForRequest:]
  -[WBSFaviconProvider _prepareAndSendResponseForRequests:forceDidReceiveNewData:]
  -[WBSFaviconProvider _hostFromRequest:]
  -[WBSFaviconProvider _responseCacheKeyForRequest:]
  -[WBSFaviconProvider _responseDictionaryKeyForRequest:]
  -[WBSFaviconProvider _hostFromURL:]
  -[WBSFaviconProvider _removeCachedResponsesForURL:]
  -[WBSFaviconProvider _requestsForHost:]
  -[WBSFaviconProvider _addCachedResponse:forRequest:]
  -[WBSFaviconProvider _getIconForRequest:withCompletionHandler:]
  -[WBSFaviconProvider builtInIconForRequest:]
  -[WBSFaviconProvider imageForRequestDuringPersistenceSetUp:completionHandler:]
  -[WBSFaviconProvider _linkPageURL:toIconWithInfo:isPrivate:completionHandler:]
  -[WBSFaviconProvider initWithPersistenceBaseURL:persistenceName:preferredIconSize:atScale:allScales:shouldCheckIntegrityWhenOpeningDatabaseBlock:]
  -[WBSFaviconProvider providerState]
  -[WBSFaviconProvider shouldIconDataBeSavedForIconWithPageURL:originalPageURL:iconURL:size:isPrivate:completionHandler:]
  -[WBSFaviconProvider linkIconFromPageURL:toCurrentPageURL:isPrivate:completionHandler:]
  -[WBSFaviconProvider saveFaviconImageData:iconURL:pageURL:originalPageURL:size:isPrivate:completionHandler:]
  -[WBSFaviconProvider removeAllIconsForURLStringsNotIn:completionHandler:]
  -[WBSFaviconProvider removeIconForURLString:completionHandler:]
  -[WBSFaviconProvider retainPrivateData]
  -[WBSFaviconProvider releasePrivateData]
  -[WBSFaviconProvider _removeCachedResponsesForRequest:]
  -[WBSFaviconProvider preferredIconScale]
  -[WBSFaviconProvider allIconScales]


WBSFaviconResponse : WBSSiteMetadataResponse <WBSIconResponse>
 @property  UIImage *favicon
 @property  unsigned long faviconType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIImage *icon
 @property  BOOL generated
 @property  UIColor *extractedBackgroundColor

  // instance methods
  -[WBSFaviconResponse initWithURL:]
  -[WBSFaviconResponse .cxx_destruct]
  -[WBSFaviconResponse icon]
  -[WBSFaviconResponse favicon]
  -[WBSFaviconResponse initWithURL:favicon:faviconType:]
  -[WBSFaviconResponse faviconType]


WBSMetadataExtractor : NSObject /usr/lib/libc++.1.dylib
 @property  WKWebProcessPlugInFrame *webProcessPlugInFrame
 @property  JSContext *context

  // class methods
  +[WBSMetadataExtractor metadataExtractorScriptSource]

  // instance methods
  -[WBSMetadataExtractor dealloc]
  -[WBSMetadataExtractor .cxx_destruct]
  -[WBSMetadataExtractor context]
  -[WBSMetadataExtractor appleTouchIconURLs]
  -[WBSMetadataExtractor faviconURLs]
  -[WBSMetadataExtractor initWithWebProcessPlugInFrame:]
  -[WBSMetadataExtractor initWithWebProcessPlugInFrame:useNormalWorld:]
  -[WBSMetadataExtractor makeContext]
  -[WBSMetadataExtractor _resultForInvokingFunctionWithName:]
  -[WBSMetadataExtractor _colorFromColorComponents:]
  -[WBSMetadataExtractor getTemplateIconURL:andColor:]
  -[WBSMetadataExtractor firstElementForSelector:]
  -[WBSMetadataExtractor webProcessPlugInFrame]


WBSForYouCloudTabsDataSource : WBSForYouRecommendationMediatorDataSource
  // instance methods
  -[WBSForYouCloudTabsDataSource .cxx_destruct]
  -[WBSForYouCloudTabsDataSource _createInternalQueueIfNecessary]
  -[WBSForYouCloudTabsDataSource initWithTabStore:]
  -[WBSForYouCloudTabsDataSource retrieveRecommendationsMatchingTopic:withCompletionHandler:]


WBSMultiRoundAutoFillManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *addressSetLabelUsedDuringFirstAutoFillPass
 @property  NSSet *addressBookPropertiesThatCanBeFilled

  // instance methods
  -[WBSMultiRoundAutoFillManager init]
  -[WBSMultiRoundAutoFillManager dealloc]
  -[WBSMultiRoundAutoFillManager .cxx_destruct]
  -[WBSMultiRoundAutoFillManager currentAutoFillAttemptTrigger]
  -[WBSMultiRoundAutoFillManager shouldControlBeIgnoredByFollowUpAutoFill:]
  -[WBSMultiRoundAutoFillManager addressSetLabelUsedDuringFirstAutoFillPass]
  -[WBSMultiRoundAutoFillManager addressBookPropertiesThatCanBeFilled]
  -[WBSMultiRoundAutoFillManager addControlUniqueIDIgnoredByFollowUpAutoFill:]
  -[WBSMultiRoundAutoFillManager dispatchFollowUpAutoFillOfFormWithMetdata:autoFillBlock:]
  -[WBSMultiRoundAutoFillManager didEditFormText]
  -[WBSMultiRoundAutoFillManager shouldAttemptFollowUpAutoFillInFormWithMetadata:requestType:]
  -[WBSMultiRoundAutoFillManager addControlUniqueIDsIgnoredByFollowUpAutoFill:]
  -[WBSMultiRoundAutoFillManager setAddressBookPropertiesThatCanBeFilled:]
  -[WBSMultiRoundAutoFillManager setAddressSetLabelUsedDuringFirstAutoFillPass:]


WBSClass : NSObject /usr/lib/libc++.1.dylib

WBSFaviconRequestsController : NSObject /usr/lib/libc++.1.dylib
 @property  WBSSiteMetadataManager *manager
 @property  long long priority
 @property  {CGSize=dd} size

  // instance methods
  -[WBSFaviconRequestsController dealloc]
  -[WBSFaviconRequestsController .cxx_destruct]
  -[WBSFaviconRequestsController size]
  -[WBSFaviconRequestsController priority]
  -[WBSFaviconRequestsController manager]
  -[WBSFaviconRequestsController setPriority:]
  -[WBSFaviconRequestsController setSize:]
  -[WBSFaviconRequestsController _issueRequest:isOneTime:withToken:completion:]
  -[WBSFaviconRequestsController registerRequestForURLString:withToken:returnDefaultIconIfNoneAvailable:iconSize:isURLTypedByUser:completion:]
  -[WBSFaviconRequestsController registerOneTimeRequestForURLString:withToken:returnDefaultIconIfNoneAvailable:iconSize:isURLTypedByUser:completion:]
  -[WBSFaviconRequestsController cancelAllRegistrationsWithCompletionHandler:]
  -[WBSFaviconRequestsController initWithSiteMetadataManager:]
  -[WBSFaviconRequestsController registerRequestForDomain:withToken:completion:]
  -[WBSFaviconRequestsController registerRequestForURLString:withToken:completion:]
  -[WBSFaviconRequestsController registerOneTimeRequestForURLString:withToken:completion:]
  -[WBSFaviconRequestsController registerOneTimeRequestForDomain:withToken:completion:]
  -[WBSFaviconRequestsController cancelAllRegistrations]


WBSPasswordLexiconWordList : WBSPasswordWordList
  // class methods
  +[WBSPasswordLexiconWordList lexiconWordListWithIdentifier:localeIdentifier:]

  // instance methods
  -[WBSPasswordLexiconWordList dealloc]
  -[WBSPasswordLexiconWordList enumerateEntriesForString:withBlock:]
  -[WBSPasswordLexiconWordList initWithIdentifier:lexicon:]


WBSSiriIntelligenceHistorySearch : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSSiriIntelligenceHistorySearch dealloc]
  -[WBSSiriIntelligenceHistorySearch .cxx_destruct]
  -[WBSSiriIntelligenceHistorySearch findURLStringsForHistoryItemsContainingString:completionHandler:]


WBSFaviconProviderDatabaseController : WBSSQLiteStore /System/Library/Frameworks/ImageIO.framework/ImageIO
  // instance methods
  -[WBSFaviconProviderDatabaseController _createFreshDatabaseSchema]
  -[WBSFaviconProviderDatabaseController _migrateToSchemaVersion:]
  -[WBSFaviconProviderDatabaseController _migrateToSchemaVersion_2]
  -[WBSFaviconProviderDatabaseController _migrateToSchemaVersion_3]
  -[WBSFaviconProviderDatabaseController _migrateToSchemaVersion_4]
  -[WBSFaviconProviderDatabaseController _currentSchemaVersion]
  -[WBSFaviconProviderDatabaseController _fetchIconUUIDForPageURLString:]
  -[WBSFaviconProviderDatabaseController _fetchIconInfoForIconURLString:]
  -[WBSFaviconProviderDatabaseController _setIconUUID:forIconURLString:size:hasGeneratedResolutions:]
  -[WBSFaviconProviderDatabaseController _setTimestampToNowForIconUUID:]
  -[WBSFaviconProviderDatabaseController _deletePageURL:]
  -[WBSFaviconProviderDatabaseController _hasPageURLsForIconUUID:]
  -[WBSFaviconProviderDatabaseController _deleteIconWithUUIDFromIconInfo:]
  -[WBSFaviconProviderDatabaseController _setPageURL:toIconUUID:]
  -[WBSFaviconProviderDatabaseController _deleteRejectedResourceForPageURLString:iconURLString:]
  -[WBSFaviconProviderDatabaseController _deleteRejectedResourceForPageURLString:]
  -[WBSFaviconProviderDatabaseController _deleteRejectedResourceForPageURLStrings:]
  -[WBSFaviconProviderDatabaseController _fetchIconUUIDsForPageURLStrings:]
  -[WBSFaviconProviderDatabaseController _deletePageURLs:]
  -[WBSFaviconProviderDatabaseController _findOrphansFromIconUUIDs:]
  -[WBSFaviconProviderDatabaseController _deleteIconsWithUUIDsFromIconInfo:]
  -[WBSFaviconProviderDatabaseController _deletePageURLsWithUUIDFromPageInfo:]
  -[WBSFaviconProviderDatabaseController _deleteAllPageAndIconEntries]
  -[WBSFaviconProviderDatabaseController _fetchAllPageURLStrings]
  -[WBSFaviconProviderDatabaseController _fetchIconInfoForIconUUID:]
  -[WBSFaviconProviderDatabaseController _setRejectedResourceForPageURL:iconURLString:]
  -[WBSFaviconProviderDatabaseController _fetchIconInfoForRejectedResourceWithPageURLString:iconURLString:]
  -[WBSFaviconProviderDatabaseController _firstIconUUIDForPageURLStrings:completionHandler:]
  -[WBSFaviconProviderDatabaseController _fetchPageURLStringsWithPredicate:]
  -[WBSFaviconProviderDatabaseController _generateStatementsForQuery:arguments:statementCallback:]
  -[WBSFaviconProviderDatabaseController linkAndUpdateTimestampForIconWithPageURLString:iconURLString:iconSize:iconHasGeneratedResolutions:completionHandler:]
  -[WBSFaviconProviderDatabaseController linkPageURLString:toExistingIconURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController removePageURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController removePageURLStrings:completionHandler:]
  -[WBSFaviconProviderDatabaseController removeAllDataForIconUUID:completionHandler:]
  -[WBSFaviconProviderDatabaseController removeAllPageURLStringsWithCompletionHandler:]
  -[WBSFaviconProviderDatabaseController fetchAllKnownPageURLStringsWithCompletionHandler:]
  -[WBSFaviconProviderDatabaseController iconInfoForPageURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController iconInfoForIconURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController markRejectedIconAtPageURLString:iconURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController markValidIconAtPageURLString:iconURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController rejectedResourceIconInfoForPageURLString:iconURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController firstIconUUIDMatchingPageURLStringIn:completionHandler:]
  -[WBSFaviconProviderDatabaseController firstIconInfoMatchingPageURLStringIn:completionHandler:]
  -[WBSFaviconProviderDatabaseController firstIconInfoMatchingIconURLStringIn:completionHandler:]
  -[WBSFaviconProviderDatabaseController fetchAllIconUUIDsWithCompletionHandler:]
  -[WBSFaviconProviderDatabaseController fetchPageURLStringsWithPrefixesIn:completionHandler:]


WBSHistoryServiceURLRepresentation : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *urlString
 @property  NSData *urlHash
 @property  NSData *urlSalt

  // class methods
  +[WBSHistoryServiceURLRepresentation supportsSecureCoding]

  // instance methods
  -[WBSHistoryServiceURLRepresentation init]
  -[WBSHistoryServiceURLRepresentation isEqual:]
  -[WBSHistoryServiceURLRepresentation copyWithZone:]
  -[WBSHistoryServiceURLRepresentation encodeWithCoder:]
  -[WBSHistoryServiceURLRepresentation initWithCoder:]
  -[WBSHistoryServiceURLRepresentation .cxx_destruct]
  -[WBSHistoryServiceURLRepresentation urlString]
  -[WBSHistoryServiceURLRepresentation initWithURLString:]
  -[WBSHistoryServiceURLRepresentation urlHash]
  -[WBSHistoryServiceURLRepresentation urlSalt]
  -[WBSHistoryServiceURLRepresentation initWithURLHash:salt:]


WBSAsynchronousRequestHelper : NSObject /usr/lib/libc++.1.dylib <NSURLConnectionDelegate, WBSAsynchronousRequest>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSAsynchronousRequestHelper dealloc]
  -[WBSAsynchronousRequestHelper .cxx_destruct]
  -[WBSAsynchronousRequestHelper cancel]
  -[WBSAsynchronousRequestHelper connection:didFailWithError:]
  -[WBSAsynchronousRequestHelper connection:didReceiveResponse:]
  -[WBSAsynchronousRequestHelper connection:didReceiveData:]
  -[WBSAsynchronousRequestHelper connectionDidFinishLoading:]
  -[WBSAsynchronousRequestHelper sendRequest]
  -[WBSAsynchronousRequestHelper initWithRequest:queue:completionHandler:]


WBSPasswordWarningStore : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSPasswordWarningStore sharedStore]

  // instance methods
  -[WBSPasswordWarningStore .cxx_destruct]
  -[WBSPasswordWarningStore .cxx_construct]
  -[WBSPasswordWarningStore _initWithBackingStoreURL:]
  -[WBSPasswordWarningStore _initWithDefaultBackingStore]
  -[WBSPasswordWarningStore _saveStoreSoon]
  -[WBSPasswordWarningStore _saveStoreNow]
  -[WBSPasswordWarningStore _loadStoreIfNecessary]
  -[WBSPasswordWarningStore _addPersistentIdentifier:withLastWarningDate:]
  -[WBSPasswordWarningStore saveStoreSynchronously]
  -[WBSPasswordWarningStore getContainsPersistentIdentifier:completionHandler:]
  -[WBSPasswordWarningStore addPersistentIdentifier:]
  -[WBSPasswordWarningStore clearStoreSynchronously]
  -[WBSPasswordWarningStore synchronousyClearIdentifiersAddedAfterDate:]


WBSOneTimeCodeMonitor : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *codes

  // instance methods
  -[WBSOneTimeCodeMonitor init]
  -[WBSOneTimeCodeMonitor .cxx_destruct]
  -[WBSOneTimeCodeMonitor addObserver:]
  -[WBSOneTimeCodeMonitor removeObserver:]
  -[WBSOneTimeCodeMonitor codes]
  -[WBSOneTimeCodeMonitor consumeCode:]


WBSTabDialogCancellationContext : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *reason
 @property  NSDictionary *userInfo

  // class methods
  +[WBSTabDialogCancellationContext tabClosedContext]
  +[WBSTabDialogCancellationContext provisionalNavigationContext]
  +[WBSTabDialogCancellationContext committedNavigationContextWithURL:]
  +[WBSTabDialogCancellationContext cancellationContextWithReason:userInfo:]

  // instance methods
  -[WBSTabDialogCancellationContext init]
  -[WBSTabDialogCancellationContext userInfo]
  -[WBSTabDialogCancellationContext reason]
  -[WBSTabDialogCancellationContext .cxx_destruct]
  -[WBSTabDialogCancellationContext initWithReason:userInfo:]


WBSHistoryTagsPredicate : NSObject /usr/lib/libc++.1.dylib <WBSHistoryPredicate>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  unsigned long tagType
 @property  NSSet *identifiers
 @property  unsigned long limit
 @property  unsigned long minimumItemCount
 @property  long long sortOrder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistoryTagsPredicate supportsSecureCoding]

  // instance methods
  -[WBSHistoryTagsPredicate encodeWithCoder:]
  -[WBSHistoryTagsPredicate initWithCoder:]
  -[WBSHistoryTagsPredicate .cxx_destruct]
  -[WBSHistoryTagsPredicate startDate]
  -[WBSHistoryTagsPredicate endDate]
  -[WBSHistoryTagsPredicate limit]
  -[WBSHistoryTagsPredicate setLimit:]
  -[WBSHistoryTagsPredicate identifiers]
  -[WBSHistoryTagsPredicate setIdentifiers:]
  -[WBSHistoryTagsPredicate sortOrder]
  -[WBSHistoryTagsPredicate setSortOrder:]
  -[WBSHistoryTagsPredicate tagType]
  -[WBSHistoryTagsPredicate initWithStartDate:endDate:tagType:]
  -[WBSHistoryTagsPredicate statementForDatabase:cache:fetchOptions:error:]
  -[WBSHistoryTagsPredicate setMinimumItemCount:]
  -[WBSHistoryTagsPredicate minimumItemCount]


WBSScopeTimeoutHandler : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSScopeTimeoutHandler init]
  -[WBSScopeTimeoutHandler dealloc]
  -[WBSScopeTimeoutHandler .cxx_destruct]
  -[WBSScopeTimeoutHandler initWithTimeout:handler:]
  -[WBSScopeTimeoutHandler initWithTimeout:autoBugCaptureDomain:detectedProcess:context:]


WBSPasswordOrderedSetWordList : WBSPasswordWordList
 @property  BOOL sensitive

  // instance methods
  -[WBSPasswordOrderedSetWordList .cxx_destruct]
  -[WBSPasswordOrderedSetWordList isSensitive]
  -[WBSPasswordOrderedSetWordList enumerateEntriesForString:withBlock:]
  -[WBSPasswordOrderedSetWordList initWithIdentifier:isSensitive:orderedWordsArray:]
  -[WBSPasswordOrderedSetWordList initWithIdentifier:isSensitive:orderedWords:]


WBSOnDiskDataCache : NSObject /usr/lib/libc++.1.dylib <WBSDataCache>
 @property  BOOL isInMemoryCacheEnabled
 @property  NSURL *cacheDirectoryURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL terminating
 @property  <WBSDataCacheDelegate> *dataCacheDelegate

  // instance methods
  -[WBSOnDiskDataCache init]
  -[WBSOnDiskDataCache .cxx_destruct]
  -[WBSOnDiskDataCache reset]
  -[WBSOnDiskDataCache setUp]
  -[WBSOnDiskDataCache cacheDirectoryURL]
  -[WBSOnDiskDataCache _internalQueueName]
  -[WBSOnDiskDataCache _internalQueueDispatchSync:]
  -[WBSOnDiskDataCache _diskAccessQueueName]
  -[WBSOnDiskDataCache _cacheSettingsFileURL]
  -[WBSOnDiskDataCache _notifyDidFinishSettingUp]
  -[WBSOnDiskDataCache _internalQueueDispatchAsync:]
  -[WBSOnDiskDataCache _dispatchDiskAccessBlock:]
  -[WBSOnDiskDataCache _fileLocationForKeyString:]
  -[WBSOnDiskDataCache _didLoadEntry:forKeyString:]
  -[WBSOnDiskDataCache _didFailToLoadEntryForKeyString:error:]
  -[WBSOnDiskDataCache _internalEntryStateForKeyString:]
  -[WBSOnDiskDataCache savePendingChangesBeforeTearDown]
  -[WBSOnDiskDataCache settingForKey:]
  -[WBSOnDiskDataCache setSetting:forKey:]
  -[WBSOnDiskDataCache requestEntryForKeyString:]
  -[WBSOnDiskDataCache getEntryURLForKeyString:completionHandler:]
  -[WBSOnDiskDataCache setEntry:forKeyString:completionHandler:]
  -[WBSOnDiskDataCache removeEntriesForKeyStrings:completionHandler:]
  -[WBSOnDiskDataCache removeEntriesForKeyStringsNotIncludedIn:completionHandler:]
  -[WBSOnDiskDataCache entryStateForKeyString:]
  -[WBSOnDiskDataCache isTerminating]
  -[WBSOnDiskDataCache dataCacheDelegate]
  -[WBSOnDiskDataCache setDataCacheDelegate:]
  -[WBSOnDiskDataCache initWithCacheDirectoryURL:]
  -[WBSOnDiskDataCache setIsInMemoryCacheEnabled:]
  -[WBSOnDiskDataCache isInMemoryCacheEnabled]


WBSOpenSearchDescription : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *descriptionDocumentURLString
 @property  WBSOpenSearchURLTemplate *searchURLTemplate
 @property  WBSOpenSearchURLTemplate *urlTemplateForSuggestionsInJSON
 @property  WBSOpenSearchURLTemplate *urlTemplateForSuggestionsInXML

  // instance methods
  -[WBSOpenSearchDescription isEqual:]
  -[WBSOpenSearchDescription .cxx_destruct]
  -[WBSOpenSearchDescription dictionaryRepresentation]
  -[WBSOpenSearchDescription initWithDictionaryRepresentation:]
  -[WBSOpenSearchDescription descriptionDocumentURLString]
  -[WBSOpenSearchDescription searchURLTemplate]
  -[WBSOpenSearchDescription urlTemplateForSuggestionsInXML]
  -[WBSOpenSearchDescription initWithDescriptionDocumentURLString:searchURLTemplate:urlTemplateForSuggestionsInJSON:urlTemplateForSuggestionsInXML:]
  -[WBSOpenSearchDescription urlTemplateForSuggestionsInJSON]


WBSOpenSearchSchemaFetcher : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSOpenSearchSchemaFetcher sharedFetcher]

  // instance methods
  -[WBSOpenSearchSchemaFetcher .cxx_destruct]
  -[WBSOpenSearchSchemaFetcher _didFinishFetchingOpenSearchDescriptionDocumentWithURL:]
  -[WBSOpenSearchSchemaFetcher fetchOpenSearchDescriptionWithURL:]


WBSOpenSearchURLTemplateParameter : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *name
 @property  NSString *prefix
 @property  {_NSRange=QQ} range
 @property  BOOL optional

  // instance methods
  -[WBSOpenSearchURLTemplateParameter name]
  -[WBSOpenSearchURLTemplateParameter .cxx_destruct]
  -[WBSOpenSearchURLTemplateParameter setName:]
  -[WBSOpenSearchURLTemplateParameter range]
  -[WBSOpenSearchURLTemplateParameter isOptional]
  -[WBSOpenSearchURLTemplateParameter prefix]
  -[WBSOpenSearchURLTemplateParameter setRange:]
  -[WBSOpenSearchURLTemplateParameter setPrefix:]
  -[WBSOpenSearchURLTemplateParameter setOptional:]


WBSOpenSearchURLTemplate : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *templateString

  // class methods
  +[WBSOpenSearchURLTemplate supportsSecureCoding]

  // instance methods
  -[WBSOpenSearchURLTemplate isEqual:]
  -[WBSOpenSearchURLTemplate copyWithZone:]
  -[WBSOpenSearchURLTemplate encodeWithCoder:]
  -[WBSOpenSearchURLTemplate initWithCoder:]
  -[WBSOpenSearchURLTemplate .cxx_destruct]
  -[WBSOpenSearchURLTemplate initWithString:]
  -[WBSOpenSearchURLTemplate templateBySubstitutingValues:]
  -[WBSOpenSearchURLTemplate templateBySubstitutingValue:forParameter:]
  -[WBSOpenSearchURLTemplate templateString]
  -[WBSOpenSearchURLTemplate includesParameter:]
  -[WBSOpenSearchURLTemplate URLWithSearchTerms:]
  -[WBSOpenSearchURLTemplate templateByAddingParameter:asURLQueryParameter:]


WBSParsecActionButton : WBSParsecModel
 @property  NSString *type
 @property  NSString *label
 @property  NSString *labelAlignment
 @property  NSString *itunesLabel
 @property  NSString *offerType
 @property  NSString *completion
 @property  NSString *itunesCompletion
 @property  NSString *mediaKind
 @property  NSArray *itunesContentIdentifiers
 @property  BOOL forStreamingResult
 @property  BOOL forAppleMusicResult
 @property  BOOL overlay
 @property  WBSParsecImageRepresentation *baseIcon
 @property  WBSParsecImageRepresentation *icon
 @property  NSString *punchoutAppName
 @property  NSString *punchoutAppBundleIdentifier
 @property  NSURL *punchoutURL

  // class methods
  +[WBSParsecActionButton schema]

  // instance methods
  -[WBSParsecActionButton type]
  -[WBSParsecActionButton .cxx_destruct]
  -[WBSParsecActionButton label]
  -[WBSParsecActionButton completion]
  -[WBSParsecActionButton icon]
  -[WBSParsecActionButton mediaKind]
  -[WBSParsecActionButton isOverlay]
  -[WBSParsecActionButton offerType]
  -[WBSParsecActionButton baseIcon]
  -[WBSParsecActionButton labelAlignment]
  -[WBSParsecActionButton initWithDictionary:mediaKind:]
  -[WBSParsecActionButton isForAppleMusicResult]
  -[WBSParsecActionButton itunesLabel]
  -[WBSParsecActionButton itunesCompletion]
  -[WBSParsecActionButton itunesContentIdentifiers]
  -[WBSParsecActionButton isForStreamingResult]
  -[WBSParsecActionButton punchoutAppName]
  -[WBSParsecActionButton punchoutAppBundleIdentifier]
  -[WBSParsecActionButton punchoutURL]


WBSParsecAuxiliaryInfo : WBSParsecModel
 @property  NSString *topText
 @property  NSString *middleText
 @property  NSString *bottomText
 @property  NSString *bottomTextColor

  // class methods
  +[WBSParsecAuxiliaryInfo schema]

  // instance methods
  -[WBSParsecAuxiliaryInfo .cxx_destruct]
  -[WBSParsecAuxiliaryInfo initWithDictionary:]
  -[WBSParsecAuxiliaryInfo topText]
  -[WBSParsecAuxiliaryInfo middleText]
  -[WBSParsecAuxiliaryInfo bottomText]
  -[WBSParsecAuxiliaryInfo bottomTextColor]


WBSForYouTopic : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *title
 @property  NSString *identifier
 @property  NSArray *associatedTopics
 @property  NSDate *relevancyDate
 @property  unsigned long source

  // instance methods
  -[WBSForYouTopic setSource:]
  -[WBSForYouTopic .cxx_destruct]
  -[WBSForYouTopic identifier]
  -[WBSForYouTopic source]
  -[WBSForYouTopic title]
  -[WBSForYouTopic relevancyDate]
  -[WBSForYouTopic initWithTitle:identifier:relevancyDate:source:]
  -[WBSForYouTopic associatedTopics]
  -[WBSForYouTopic setAssociatedTopics:]


WBSReaderNavigationPolicyDecider : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSReaderNavigationPolicyDecider readerPageWithURL:canLoadFrameWithURL:]


WBSParsecDFeedbackDispatcher : NSObject /usr/lib/libc++.1.dylib <WBSParsecFeedbackDispatcher, WBSParsecGlobalFeedbackDispatcher>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSParsecDFeedbackDispatcher .cxx_destruct]
  -[WBSParsecDFeedbackDispatcher initWithSession:]
  -[WBSParsecDFeedbackDispatcher sendCrowdsourcedAutoFillFeedback:]
  -[WBSParsecDFeedbackDispatcher postFeedback:forQueryID:]
  -[WBSParsecDFeedbackDispatcher _postFeedbackOnFeedbackQueue:forQueryID:]
  -[WBSParsecDFeedbackDispatcher userDidEngageWithCompletionListItem:onActionButton:method:doesMatchSiriSuggestion:]
  -[WBSParsecDFeedbackDispatcher _takeStartSearchFeedbackForSearchOfType:forQuery:]
  -[WBSParsecDFeedbackDispatcher postFeedback:]
  -[WBSParsecDFeedbackDispatcher didBeginSearchOfType:withQuery:urlString:headers:endpoint:]
  -[WBSParsecDFeedbackDispatcher _setStartSearchFeedback:forSearchOfType:withQuery:]
  -[WBSParsecDFeedbackDispatcher _customFeedbackOfType:JSONDictionary:]
  -[WBSParsecDFeedbackDispatcher searchViewAppearedBecauseOfEvent:]
  -[WBSParsecDFeedbackDispatcher searchViewDisappearedBecauseOfEvent:]
  -[WBSParsecDFeedbackDispatcher searchViewAppearedBecauseOfEvent:isSafariReaderAvailable:]
  -[WBSParsecDFeedbackDispatcher didDisplayCompletionListItems:forQuery:forEvent:]
  -[WBSParsecDFeedbackDispatcher userDidCancelSession]
  -[WBSParsecDFeedbackDispatcher userDidCancelSession:]
  -[WBSParsecDFeedbackDispatcher didReceiveWebSuggestionsForQuery:fromSearchProvider:responseSize:statusCode:networkTimingData:]
  -[WBSParsecDFeedbackDispatcher didReceiveLocalResultsForQuery:]
  -[WBSParsecDFeedbackDispatcher userDidEngageWithCompletionListItem:onActionButton:method:]
  -[WBSParsecDFeedbackDispatcher userTypedURLDirectlyForQuery:]
  -[WBSParsecDFeedbackDispatcher didGenerateCompletionListItemsWithRankingObserver:]
  -[WBSParsecDFeedbackDispatcher didReceiveParsecResultsAfterTimeout:]
  -[WBSParsecDFeedbackDispatcher didBeginSearchOfType:withQuery:endpoint:]
  -[WBSParsecDFeedbackDispatcher userTypedGoToSearch:endpoint:forQueryID:]
  -[WBSParsecDFeedbackDispatcher sendMapsPlaceCardEngagementFeedbackOfType:]
  -[WBSParsecDFeedbackDispatcher sendAppLaunchFeedback]
  -[WBSParsecDFeedbackDispatcher sendAppQuitFeedback]
  -[WBSParsecDFeedbackDispatcher sendAppLostFocusFeedback]
  -[WBSParsecDFeedbackDispatcher sendNewWindowFeedback]
  -[WBSParsecDFeedbackDispatcher sendNewTabFeedback]
  -[WBSParsecDFeedbackDispatcher sendWindowCloseByKeyboardFeedback]
  -[WBSParsecDFeedbackDispatcher sendWindowCloseByMouseFeedback]
  -[WBSParsecDFeedbackDispatcher sendWindowMiniaturizeByKeyboardFeedback]
  -[WBSParsecDFeedbackDispatcher sendWindowMiniaturizeByMouseFeedback]
  -[WBSParsecDFeedbackDispatcher sendSmartSearchFieldClickedFeedbackWithReaderAvailable:]
  -[WBSParsecDFeedbackDispatcher didRankSections:blendingDuration:feedbackForHiddenAndDuplicateResults:]
  -[WBSParsecDFeedbackDispatcher sendClearInputFeedbackWithTriggerEvent:]


WBSBookmarkFolderTouchIconProvider : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataProvider>
 @property  NSArray *allFolderUUIDs
 @property  UIColor *backgroundColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons

  // class methods
  +[WBSBookmarkFolderTouchIconProvider _appUsesLeftToRightLayout]

  // instance methods
  -[WBSBookmarkFolderTouchIconProvider init]
  -[WBSBookmarkFolderTouchIconProvider .cxx_destruct]
  -[WBSBookmarkFolderTouchIconProvider canHandleRequest:]
  -[WBSBookmarkFolderTouchIconProvider backgroundColor]
  -[WBSBookmarkFolderTouchIconProvider removeInfoForFolderWithUUID:]
  -[WBSBookmarkFolderTouchIconProvider stopWatchingUpdatesForRequest:]
  -[WBSBookmarkFolderTouchIconProvider allFolderUUIDs]
  -[WBSBookmarkFolderTouchIconProvider removeInfoForFoldersWithUUIDs:]
  -[WBSBookmarkFolderTouchIconProvider defaultFolderIconForRequest:]
  -[WBSBookmarkFolderTouchIconProvider bookmarkUUIDForRequest:]
  -[WBSBookmarkFolderTouchIconProvider displayableFolderContentsForRequest:]
  -[WBSBookmarkFolderTouchIconProvider touchIconRequestForBookmark:inFolderWithRequest:]
  -[WBSBookmarkFolderTouchIconProvider responseForRequest:willProvideUpdates:]
  -[WBSBookmarkFolderTouchIconProvider prepareResponseForRequest:allowDelayedResponse:]
  -[WBSBookmarkFolderTouchIconProvider providerDelegate]
  -[WBSBookmarkFolderTouchIconProvider setProviderDelegate:]
  -[WBSBookmarkFolderTouchIconProvider _prepareResponseForRequest:allowDelayedResponse:]
  -[WBSBookmarkFolderTouchIconProvider _responseHandlerForRequest:thumbnailIndex:]
  -[WBSBookmarkFolderTouchIconProvider _coalesceResponseDispatchForRequest:]
  -[WBSBookmarkFolderTouchIconProvider _dispatchResponseForRequest:]
  -[WBSBookmarkFolderTouchIconProvider _dispatchResponseForRequest:touchIcon:]
  -[WBSBookmarkFolderTouchIconProvider _drawTouchIconForRequest:]
  -[WBSBookmarkFolderTouchIconProvider didCreateTouchIcon:]


WBSBookmarkFolderTouchIconProviderRequestInfo : NSObject /usr/lib/libc++.1.dylib
 @property  NSSet *subrequestTokens
 @property  NSArray *thumbnailImages
 @property  NSArray *backgroundColors
 @property  BOOL hasScheduledCoalescedUpdate

  // instance methods
  -[WBSBookmarkFolderTouchIconProviderRequestInfo init]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo .cxx_destruct]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo thumbnailImages]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo backgroundColors]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo subrequestTokens]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo setSubrequestTokens:]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo setThumbnailImage:atIndex:]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo setBackgroundColor:atIndex:]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo hasScheduledCoalescedUpdate]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo setHasScheduledCoalescedUpdate:]


WBSBookmarkFolderTouchIconProviderInfo : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *thumbnailImages
 @property  NSArray *backgroundColors
 @property  UIImage *touchIcon

  // class methods
  +[WBSBookmarkFolderTouchIconProviderInfo new]

  // instance methods
  -[WBSBookmarkFolderTouchIconProviderInfo init]
  -[WBSBookmarkFolderTouchIconProviderInfo .cxx_destruct]
  -[WBSBookmarkFolderTouchIconProviderInfo thumbnailImages]
  -[WBSBookmarkFolderTouchIconProviderInfo touchIcon]
  -[WBSBookmarkFolderTouchIconProviderInfo backgroundColors]
  -[WBSBookmarkFolderTouchIconProviderInfo initWithThumbnailImages:backgroundColors:touchIcon:]


WBSParsecDSession : NSObject /usr/lib/libc++.1.dylib <PARSessionDelegate, WBSParsecSearchSession>
 @property  unsigned long currentQueryID
 @property  BOOL skipAutoFillDataUpdates
 @property  PARSession *parsecdSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSParsecSearchSessionDelegate> *delegate
 @property  WBSCompletionQuery *currentQuery
 @property  double uiScale
 @property  <WBSParsecFeedbackDispatcher> *feedbackDispatcher

  // class methods
  +[WBSParsecDSession sharedPARSession]
  +[WBSParsecDSession _updateAutoFillTLDsIfNeededForSession:completionHandler:]
  +[WBSParsecDSession _updateAutoFillCorrectionSetsIfNeededForSession:completionHandler:]
  +[WBSParsecDSession sharedDomainPolicyProvider]
  +[WBSParsecDSession sharedCorrectionsProcessor]

  // instance methods
  -[WBSParsecDSession delegate]
  -[WBSParsecDSession setDelegate:]
  -[WBSParsecDSession .cxx_destruct]
  -[WBSParsecDSession currentQuery]
  -[WBSParsecDSession setCurrentQuery:]
  -[WBSParsecDSession uiScale]
  -[WBSParsecDSession session:bag:didLoadWithError:]
  -[WBSParsecDSession _startUpdatingAutoFillDataInBackgroundIfPossibleForSession:]
  -[WBSParsecDSession _didReceiveResponse:error:forTask:query:]
  -[WBSParsecDSession setCurrentQueryID:]
  -[WBSParsecDSession currentQueryID]
  -[WBSParsecDSession parsecdSession]
  -[WBSParsecDSession setUIScale:]
  -[WBSParsecDSession feedbackDispatcher]
  -[WBSParsecDSession initWithParsecdSession:skipAutoFillDataUpdates:]
  -[WBSParsecDSession setParsecdSession:]
  -[WBSParsecDSession skipAutoFillDataUpdates]


WBSParsecFormattedText : WBSParsecModel
 @property  NSString *text
 @property  BOOL emphasized
 @property  WBSParsecImageRepresentation *glyphRepresentation
 @property  NSNumber *spaceBeforeInPoints
 @property  NSNumber *spaceAfterInPoints

  // class methods
  +[WBSParsecFormattedText schema]

  // instance methods
  -[WBSParsecFormattedText isEqual:]
  -[WBSParsecFormattedText .cxx_destruct]
  -[WBSParsecFormattedText initWithDictionary:]
  -[WBSParsecFormattedText text]
  -[WBSParsecFormattedText isEmphasized]
  -[WBSParsecFormattedText spaceAfterInPoints]
  -[WBSParsecFormattedText spaceBeforeInPoints]
  -[WBSParsecFormattedText glyphWithSession:]
  -[WBSParsecFormattedText glyphRepresentation]


WBSRecentHistoryTopicTagController : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long maximumNumberOfTopics
 @property  double timeIntervalBeforeNowForFetchingTags

  // instance methods
  -[WBSRecentHistoryTopicTagController .cxx_destruct]
  -[WBSRecentHistoryTopicTagController initWithHistory:]
  -[WBSRecentHistoryTopicTagController loadTopicsWithCompletionHandler:]
  -[WBSRecentHistoryTopicTagController maximumNumberOfTopics]
  -[WBSRecentHistoryTopicTagController setMaximumNumberOfTopics:]
  -[WBSRecentHistoryTopicTagController timeIntervalBeforeNowForFetchingTags]
  -[WBSRecentHistoryTopicTagController setTimeIntervalBeforeNowForFetchingTags:]


WBSParsecHiddenResultInfo : NSObject /usr/lib/libc++.1.dylib
 @property  WBSParsecSearchResult *hiddenResult
 @property  <WBSCompletionListItem> *preferredCompletionListItem
 @property  long long reasonForHidingResult
 @property  unsigned long preferredCompletionListItemPositionInCompletionList
 @property  unsigned long preferredCompletionListItemPositionInFrequentlyVisitedSites
 @property  NSDictionary *feedbackDictionaryRepresentation

  // instance methods
  -[WBSParsecHiddenResultInfo .cxx_destruct]
  -[WBSParsecHiddenResultInfo initWithHiddenResult:preferredCompletionListItem:reason:]
  -[WBSParsecHiddenResultInfo feedbackDictionaryRepresentation]
  -[WBSParsecHiddenResultInfo hiddenResult]
  -[WBSParsecHiddenResultInfo preferredCompletionListItem]
  -[WBSParsecHiddenResultInfo reasonForHidingResult]
  -[WBSParsecHiddenResultInfo preferredCompletionListItemPositionInCompletionList]
  -[WBSParsecHiddenResultInfo setPreferredCompletionListItemPositionInCompletionList:]
  -[WBSParsecHiddenResultInfo preferredCompletionListItemPositionInFrequentlyVisitedSites]
  -[WBSParsecHiddenResultInfo setPreferredCompletionListItemPositionInFrequentlyVisitedSites:]


WBSParsecImageRepresentation : WBSParsecModel
 @property  NSNumber *baselineOffset
 @property  NSNumber *roundCornerRadius

  // class methods
  +[WBSParsecImageRepresentation schema]
  +[WBSParsecImageRepresentation _bagImageDataCache]

  // instance methods
  -[WBSParsecImageRepresentation isEqual:]
  -[WBSParsecImageRepresentation .cxx_destruct]
  -[WBSParsecImageRepresentation baselineOffset]
  -[WBSParsecImageRepresentation initWithJSONObject:]
  -[WBSParsecImageRepresentation _imageWithData:]
  -[WBSParsecImageRepresentation imageWithSession:]
  -[WBSParsecImageRepresentation _fetchImageData]
  -[WBSParsecImageRepresentation imageWithScaleFactor:]
  -[WBSParsecImageRepresentation _templateImageWithImage:]
  -[WBSParsecImageRepresentation _fetchImageDataUsingBlock:]
  -[WBSParsecImageRepresentation test_data]
  -[WBSParsecImageRepresentation test_identifier]
  -[WBSParsecImageRepresentation test_imageURLString]
  -[WBSParsecImageRepresentation test_isTemplate]
  -[WBSParsecImageRepresentation roundCornerRadius]


WBSParsecModel : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSParsecModel schema]
  +[WBSParsecModel optionalSchema]

  // instance methods
  -[WBSParsecModel initWithDictionary:]
  -[WBSParsecModel _init]
  -[WBSParsecModel initWithJSONObject:]


WBSPasswordEvaluation : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *password
 @property  NSArray *patternMatches
 @property  long long evaluationType
 @property  double guessesRequired
 @property  unsigned long strength
 @property  BOOL userShouldBeShownPassiveWarning
 @property  BOOL userShouldBeShownActiveWarning
 @property  NSString *userFeedbackString

  // instance methods
  -[WBSPasswordEvaluation password]
  -[WBSPasswordEvaluation .cxx_destruct]
  -[WBSPasswordEvaluation strength]
  -[WBSPasswordEvaluation initWithEvaluationType:password:patternMatches:guessesRequired:]
  -[WBSPasswordEvaluation guessesRequired]
  -[WBSPasswordEvaluation _bestPatternMatchOfType:]
  -[WBSPasswordEvaluation _shouldShowUserFeedbackStringsForWordListPatternMatch:]
  -[WBSPasswordEvaluation userShouldBeShownPassiveWarning]
  -[WBSPasswordEvaluation _passwordFeedbackStrings]
  -[WBSPasswordEvaluation userShouldBeShownActiveWarning]
  -[WBSPasswordEvaluation userFeedbackString]
  -[WBSPasswordEvaluation compactDescriptionWithPasswordColumnWidth:includePatternMatches:]
  -[WBSPasswordEvaluation patternMatches]
  -[WBSPasswordEvaluation evaluationType]


WBSParsecPunchout : WBSParsecModel
 @property  NSString *name
 @property  NSString *bundleID
 @property  NSString *punchoutLabel
 @property  NSURL *punchoutURL
 @property  NSURL *installURL

  // class methods
  +[WBSParsecPunchout schema]

  // instance methods
  -[WBSParsecPunchout name]
  -[WBSParsecPunchout .cxx_destruct]
  -[WBSParsecPunchout initWithDictionary:]
  -[WBSParsecPunchout bundleID]
  -[WBSParsecPunchout punchoutLabel]
  -[WBSParsecPunchout punchoutURL]
  -[WBSParsecPunchout installURL]


WBSParsecResultSetPattern : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSParsecResultSetPattern _regularExpressionPatternForToken:]
  +[WBSParsecResultSetPattern _nextTokenInResultSetPattern:]
  +[WBSParsecResultSetPattern _regularExpressionPatternForResultSetPatternSuffix:]
  +[WBSParsecResultSetPattern _regularExpressionPatternFromResultSetPattern:]
  +[WBSParsecResultSetPattern patternWithString:]

  // instance methods
  -[WBSParsecResultSetPattern .cxx_destruct]
  -[WBSParsecResultSetPattern _initWithRegularExpression:]
  -[WBSParsecResultSetPattern isMatchedByString:]


WBSOneShotTimer : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL isValid
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSDate *fireDate

  // instance methods
  -[WBSOneShotTimer invalidate]
  -[WBSOneShotTimer queue]
  -[WBSOneShotTimer isValid]
  -[WBSOneShotTimer fireDate]
  -[WBSOneShotTimer .cxx_destruct]
  -[WBSOneShotTimer initWithFireDate:queue:target:selector:]
  -[WBSOneShotTimer initWithFireDate:queue:block:]


WBSPasswordWordListEntry : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *word
 @property  BOOL sensitive
 @property  NSString *wordListIdentifier
 @property  unsigned long guessesRequired

  // instance methods
  -[WBSPasswordWordListEntry .cxx_destruct]
  -[WBSPasswordWordListEntry isSensitive]
  -[WBSPasswordWordListEntry word]
  -[WBSPasswordWordListEntry guessesRequired]
  -[WBSPasswordWordListEntry initWithWord:isSensitive:wordListIdentifier:guessesRequired:]
  -[WBSPasswordWordListEntry wordListIdentifier]


WBSParsecRichText : WBSParsecModel
 @property  NSString *text
 @property  NSNumber *maximumLines
 @property  NSArray *formattedTextList
 @property  NSArray *moreGlyphRepresentations
 @property  NSString *contentAdvisoryString

  // class methods
  +[WBSParsecRichText schema]

  // instance methods
  -[WBSParsecRichText isEqual:]
  -[WBSParsecRichText .cxx_destruct]
  -[WBSParsecRichText initWithDictionary:]
  -[WBSParsecRichText text]
  -[WBSParsecRichText maximumLines]
  -[WBSParsecRichText formattedTextList]
  -[WBSParsecRichText contentAdvisoryImageWithSession:]
  -[WBSParsecRichText moreGlyphsWithSession:]
  -[WBSParsecRichText moreGlyphRepresentations]
  -[WBSParsecRichText contentAdvisoryString]


WBSParsecSchema : NSObject /usr/lib/libc++.1.dylib
 @property  @? validationBlock
 @property  @? specializedSchemaBlock
 @property  BOOL optional
 @property  Class expectedClass
 @property  NSError *associatedError

  // class methods
  +[WBSParsecSchema schemaWithExpectedClass:]
  +[WBSParsecSchema schemaForDictionaryWithStructure:]
  +[WBSParsecSchema schemaForArrayWithElementSchema:]
  +[WBSParsecSchema schemaForDictionaryWithStructure:associatedError:]
  +[WBSParsecSchema schemaWithExpectedClass:associatedError:isOptional:]
  +[WBSParsecSchema schemaWithExpectedClass:associatedError:]
  +[WBSParsecSchema schemaForArrayWithElementSchema:associatedError:isOptional:]
  +[WBSParsecSchema schemaForDictionaryWithStructure:associatedError:isOptional:]
  +[WBSParsecSchema schemaForArrayWithElementSchema:associatedError:]
  +[WBSParsecSchema schemaWithConstantValue:]

  // instance methods
  -[WBSParsecSchema .cxx_destruct]
  -[WBSParsecSchema isOptional]
  -[WBSParsecSchema setOptional:]
  -[WBSParsecSchema validationBlock]
  -[WBSParsecSchema setValidationBlock:]
  -[WBSParsecSchema validateObject:withErrorHandler:]
  -[WBSParsecSchema setSpecializedSchemaBlock:]
  -[WBSParsecSchema _initWithExpectedClass:associatedError:isOptional:]
  -[WBSParsecSchema _validateChild:ofParent:withParentAssociatedError:errorHandler:]
  -[WBSParsecSchema specializedSchemaBlock]
  -[WBSParsecSchema expectedClass]
  -[WBSParsecSchema setExpectedClass:]
  -[WBSParsecSchema associatedError]
  -[WBSParsecSchema setAssociatedError:]


_WBSParsecArraySchema : WBSParsecSchema
 @property  WBSParsecSchema *elementSchema

  // instance methods
  -[_WBSParsecArraySchema .cxx_destruct]
  -[_WBSParsecArraySchema initWithElementSchema:associatedError:isOptional:]
  -[_WBSParsecArraySchema _validateChild:ofParent:withParentAssociatedError:errorHandler:]
  -[_WBSParsecArraySchema elementSchema]
  -[_WBSParsecArraySchema setElementSchema:]


_WBSParsecDictionarySchema : WBSParsecSchema
 @property  NSDictionary *keysToSchemata

  // instance methods
  -[_WBSParsecDictionarySchema .cxx_destruct]
  -[_WBSParsecDictionarySchema initWithSchemaDictionary:associatedError:isOptional:]
  -[_WBSParsecDictionarySchema _validateChild:ofParent:withParentAssociatedError:errorHandler:]
  -[_WBSParsecDictionarySchema keysToSchemata]
  -[_WBSParsecDictionarySchema setKeysToSchemata:]


WBSParsecSearchCompletionResultSet : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *status
 @property  NSString *errorCodeString
 @property  NSString *completionString
 @property  NSString *prefix
 @property  NSString *feedbackQueryIdentifier
 @property  NSArray *results
 @property  double maxAge
 @property  double completionScore

  // class methods
  +[WBSParsecSearchCompletionResultSet resultSetSchemaWithCache:]
  +[WBSParsecSearchCompletionResultSet resultSetWithDictionary:cache:]

  // instance methods
  -[WBSParsecSearchCompletionResultSet .cxx_destruct]
  -[WBSParsecSearchCompletionResultSet results]
  -[WBSParsecSearchCompletionResultSet status]
  -[WBSParsecSearchCompletionResultSet setStatus:]
  -[WBSParsecSearchCompletionResultSet prefix]
  -[WBSParsecSearchCompletionResultSet maxAge]
  -[WBSParsecSearchCompletionResultSet completionString]
  -[WBSParsecSearchCompletionResultSet completionScore]
  -[WBSParsecSearchCompletionResultSet _initWithDictionary:cache:]
  -[WBSParsecSearchCompletionResultSet enumeratePatternsUsingBlock:]
  -[WBSParsecSearchCompletionResultSet errorCodeString]
  -[WBSParsecSearchCompletionResultSet feedbackQueryIdentifier]


WBSParsecSearchGenericResult : WBSParsecLegacySearchResult <WBSParsecSearchGenericResult>
 @property  NSNumber *titleMaximumLines
 @property  NSArray *descriptionRichTexts
 @property  NSString *footnote
 @property  NSString *secondaryTitle
 @property  WBSParsecImageRepresentation *secondaryTitleGlyph
 @property  WBSParsecAuxiliaryInfo *auxiliaryInfo
 @property  WBSParsecImageRepresentation *thumbnail

  // class methods
  +[WBSParsecSearchGenericResult _specializedSchema]

  // instance methods
  -[WBSParsecSearchGenericResult .cxx_destruct]
  -[WBSParsecSearchGenericResult initWithDictionary:]
  -[WBSParsecSearchGenericResult thumbnail]
  -[WBSParsecSearchGenericResult footnote]
  -[WBSParsecSearchGenericResult secondaryTitle]
  -[WBSParsecSearchGenericResult actionButton]
  -[WBSParsecSearchGenericResult titleMaximumLines]
  -[WBSParsecSearchGenericResult descriptionRichTexts]
  -[WBSParsecSearchGenericResult secondaryTitleGlyph]
  -[WBSParsecSearchGenericResult auxiliaryInfo]
  -[WBSParsecSearchGenericResult thumbnailWithSession:]


WBSParsecSearchMapsResult : WBSParsecLegacySearchResult <WBSParsecSearchMapsResult>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSParsecSearchSession> *parsecSearchSession
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion
 @property  WBSParsecSearchMapsResultFeedbackSender *mapsFeedbackSender

  // instance methods
  -[WBSParsecSearchMapsResult .cxx_destruct]
  -[WBSParsecSearchMapsResult initWithDictionary:]
  -[WBSParsecSearchMapsResult parsecSearchSession]
  -[WBSParsecSearchMapsResult setParsecSearchSession:]
  -[WBSParsecSearchMapsResult mapsFeedbackSender]
  -[WBSParsecSearchMapsResult setMapsFeedbackSender:]


WBSTabDialog : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL blocksWebProcessUntilDismissed
 @property  NSArray *cancellationExemptions

  // class methods
  +[WBSTabDialog tabDialogWithPresentationBlock:dismissalBlock:]

  // instance methods
  -[WBSTabDialog init]
  -[WBSTabDialog .cxx_destruct]
  -[WBSTabDialog _init]
  -[WBSTabDialog setBlocksWebProcessUntilDismissed:]
  -[WBSTabDialog setCancellationExemptions:]
  -[WBSTabDialog createInfo]
  -[WBSTabDialog blocksWebProcessUntilDismissed]
  -[WBSTabDialog cancellationExemptions]


WBSParsecSearchMapsResultFeedbackSender : NSObject /usr/lib/libc++.1.dylib <_MKPlaceViewControllerFeedbackDelegate>
 @property  <WBSParsecSearchResultPresentedInCard><WBSCompletionListItem> *searchResult
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSParsecSearchMapsResultFeedbackSender .cxx_destruct]
  -[WBSParsecSearchMapsResultFeedbackSender searchResult]
  -[WBSParsecSearchMapsResultFeedbackSender placeViewController:shouldLogFeedbackOfType:]
  -[WBSParsecSearchMapsResultFeedbackSender initWithSearchResult:]


WBSParsecSearchMoviesResult : WBSParsecLegacySearchResult
 @property  NSString *descriptionLeadInText

  // instance methods
  -[WBSParsecSearchMoviesResult .cxx_destruct]
  -[WBSParsecSearchMoviesResult initWithDictionary:]
  -[WBSParsecSearchMoviesResult descriptionLeadInText]
  -[WBSParsecSearchMoviesResult postersWithSession:]


WBSParsecSearchResponse : NSObject /usr/lib/libc++.1.dylib
 @property  double maxAge
 @property  unsigned long sizeInBytes
 @property  NSArray *completionResultSets
 @property  WBSParsecSearchCompletionResultSet *bestCompletionResultSet
 @property  NSArray *statusCodesForCompletionResultSets

  // class methods
  +[WBSParsecSearchResponse searchResponseSchemaWithCache:]

  // instance methods
  -[WBSParsecSearchResponse .cxx_destruct]
  -[WBSParsecSearchResponse sizeInBytes]
  -[WBSParsecSearchResponse maxAge]
  -[WBSParsecSearchResponse initWithArray:responseHeaders:sizeInBytes:cache:]
  -[WBSParsecSearchResponse bestCompletionResultSet]
  -[WBSParsecSearchResponse statusCodesForCompletionResultSets]
  -[WBSParsecSearchResponse completionResultSets]


WBSPasswordPatternMatcher : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSPasswordPatternMatcher patternMatchesForPasscode:withWordListCollection:]
  -[WBSPasswordPatternMatcher patternMatchesForPassword:withWordListCollection:]
  -[WBSPasswordPatternMatcher _wordListMatchesForPassword:withWordListCollection:]
  -[WBSPasswordPatternMatcher _sequencePatternMatchesForPassword:]
  -[WBSPasswordPatternMatcher _keyboardLayoutPatternMatchesForPassword:]
  -[WBSPasswordPatternMatcher _repetitionMatchesForPassword:withMatches:]
  -[WBSPasswordPatternMatcher _wordListMatchesForPasscode:withWordListCollection:]
  -[WBSPasswordPatternMatcher _sequenceMatchesForPasscode:]
  -[WBSPasswordPatternMatcher _dateMatchesForPasscode:]
  -[WBSPasswordPatternMatcher _repetitionMatchesForPasscode:]
  -[WBSPasswordPatternMatcher _keyboardsByIdentifier]
  -[WBSPasswordPatternMatcher _passwordWithoutShiftedCharacters:shiftMap:outShiftedCharacterIndexSet:]
  -[WBSPasswordPatternMatcher _directionFromHexCoordinate:to:]
  -[WBSPasswordPatternMatcher _keyboardMatchWithPassword:range:shiftedCharacterCount:keyboardIdentifier:keyboard:]
  -[WBSPasswordPatternMatcher _sequencePatternMatchWithPassword:startIndex:endIndex:delta:]
  -[WBSPasswordPatternMatcher _obviousSequenceStartCharacterSet]
  -[WBSPasswordPatternMatcher _commonlySubstitutedCharacterSet]
  -[WBSPasswordPatternMatcher _passwordVariationsWithoutCommonCharacterSubstitutions:]
  -[WBSPasswordPatternMatcher _enumerateGraphemeClusterSubrangesOfString:withMinimumLength:usingBlock:]
  -[WBSPasswordPatternMatcher _commonlySubstitutedCharactersMap]
  -[WBSPasswordPatternMatcher _patternWithFewestGuessesRequiredWithRange:patternMatches:]
  -[WBSPasswordPatternMatcher _characterRepetitionPatternForPasscode:]
  -[WBSPasswordPatternMatcher _commonPasscodeCharacterRepetitionPatterns]


WBSParsecLegacySearchResult : WBSParsecModel <WBSParsecSearchResult, WBSCompletionListItem>
 @property  unsigned long legacyType
 @property  SFSearchResult *sfSearchResultValue
 @property  NSString *sectionBundleIdentifier
 @property  long long parsecQueryID
 @property  NSString *title
 @property  NSString *descriptionText
 @property  NSString *identifier
 @property  NSString *feedbackIdentifier
 @property  NSString *urlString
 @property  NSString *sectionHeader
 @property  NSString *completion
 @property  NSString *query
 @property  unsigned long minimumRankOfTopHitToSuppressResult
 @property  NSURL *appPunchoutURL
 @property  NSString *mediaKind
 @property  NSString *referrerForLoadingResult
 @property  WBSParsecActionButton *actionButton
 @property  MKMapItem *mapItem
 @property  WBSParsecImageRepresentation *icon
 @property  WBSParsecImageRepresentation *completionIcon
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *parsecDomainIdentifier
 @property  unsigned long engagementDestination
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion

  // class methods
  +[WBSParsecLegacySearchResult schema]
  +[WBSParsecLegacySearchResult resultWithDictionary:]
  +[WBSParsecLegacySearchResult _specializedSchema]
  +[WBSParsecLegacySearchResult _resultClassForDictionary:]

  // instance methods
  -[WBSParsecLegacySearchResult query]
  -[WBSParsecLegacySearchResult .cxx_destruct]
  -[WBSParsecLegacySearchResult initWithDictionary:]
  -[WBSParsecLegacySearchResult identifier]
  -[WBSParsecLegacySearchResult title]
  -[WBSParsecLegacySearchResult completion]
  -[WBSParsecLegacySearchResult icon]
  -[WBSParsecLegacySearchResult sectionHeader]
  -[WBSParsecLegacySearchResult mapItem]
  -[WBSParsecLegacySearchResult descriptionText]
  -[WBSParsecLegacySearchResult urlString]
  -[WBSParsecLegacySearchResult mediaKind]
  -[WBSParsecLegacySearchResult sectionBundleIdentifier]
  -[WBSParsecLegacySearchResult setSectionBundleIdentifier:]
  -[WBSParsecLegacySearchResult minimumRankOfTopHitToSuppressResult]
  -[WBSParsecLegacySearchResult actionButton]
  -[WBSParsecLegacySearchResult parsecQueryID]
  -[WBSParsecLegacySearchResult setParsecQueryID:]
  -[WBSParsecLegacySearchResult parsecDomainIdentifier]
  -[WBSParsecLegacySearchResult sfSearchResultValue]
  -[WBSParsecLegacySearchResult legacyType]
  -[WBSParsecLegacySearchResult feedbackIdentifier]
  -[WBSParsecLegacySearchResult appPunchoutURL]
  -[WBSParsecLegacySearchResult referrerForLoadingResult]
  -[WBSParsecLegacySearchResult canBecomeTopHitForQuery:]
  -[WBSParsecLegacySearchResult completionIcon]
  -[WBSParsecLegacySearchResult iconWithSession:]
  -[WBSParsecLegacySearchResult completionIconWithSession:]
  -[WBSParsecLegacySearchResult engagementDestination]
  -[WBSParsecLegacySearchResult _glyphRepresentationsFromGlyphDictionaries:]
  -[WBSParsecLegacySearchResult _glyphsFromGlyphRepresentations:withSession:]
  -[WBSParsecLegacySearchResult setSfSearchResultValue:]


WBSParsecSearchResultCache : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *allCachedQueries

  // instance methods
  -[WBSParsecSearchResultCache .cxx_destruct]
  -[WBSParsecSearchResultCache resultSetWithQuery:]
  -[WBSParsecSearchResultCache cacheResultSet:]
  -[WBSParsecSearchResultCache _shouldCacheResultSetForQueryMatching:]
  -[WBSParsecSearchResultCache _resultSet:isMatchForQuery:]
  -[WBSParsecSearchResultCache initWithCachedQueriesLimit:]
  -[WBSParsecSearchResultCache cacheResultSetsFromSearchResponse:]
  -[WBSParsecSearchResultCache bestResultSetForQuery:]
  -[WBSParsecSearchResultCache allCachedQueries]


WBSParsecSearchSimpleResult : WBSParsecLegacySearchResult <WBSParsecSearchSimpleResult>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSParsecSearchSession> *parsecSearchSession
 @property  WBSParsecSearchMapsResultFeedbackSender *mapsFeedbackSender
 @property  NSNumber *titleMaximumNumberOfLines
 @property  NSString *descriptionLeadInText
 @property  NSNumber *descriptionMaximumNumberOfLines
 @property  BOOL descriptionTextCanWrap
 @property  NSString *footnote
 @property  BOOL hasSingleLineDescriptionAndTitle

  // instance methods
  -[WBSParsecSearchSimpleResult .cxx_destruct]
  -[WBSParsecSearchSimpleResult initWithDictionary:]
  -[WBSParsecSearchSimpleResult footnote]
  -[WBSParsecSearchSimpleResult parsecSearchSession]
  -[WBSParsecSearchSimpleResult setParsecSearchSession:]
  -[WBSParsecSearchSimpleResult mapsFeedbackSender]
  -[WBSParsecSearchSimpleResult setMapsFeedbackSender:]
  -[WBSParsecSearchSimpleResult titleMaximumNumberOfLines]
  -[WBSParsecSearchSimpleResult descriptionLeadInText]
  -[WBSParsecSearchSimpleResult descriptionMaximumNumberOfLines]
  -[WBSParsecSearchSimpleResult descriptionTextCanWrap]
  -[WBSParsecSearchSimpleResult hasSingleLineDescriptionAndTitle]
  -[WBSParsecSearchSimpleResult titleGlyphWithSession:]


WBSParsecSearchSportsAttributionExtraCompletionItem : WBSParsecModel <WBSCompletionListItem>
 @property  NSString *label
 @property  NSURL *url
 @property  WBSParsecImageRepresentation *imageRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion

  // class methods
  +[WBSParsecSearchSportsAttributionExtraCompletionItem schema]

  // instance methods
  -[WBSParsecSearchSportsAttributionExtraCompletionItem .cxx_destruct]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem initWithDictionary:]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem url]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem label]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem imageRepresentation]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem parsecQueryID]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem parsecDomainIdentifier]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem sfSearchResultValue]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem engagementDestination]


WBSForYouLinkRecommendation : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *title
 @property  NSString *footnote
 @property  NSString *originalQueriesString
 @property  NSSet *originalQueries
 @property  NSURL *pageURL
 @property  NSString *simplifiedURLString
 @property  NSURL *imageURL
 @property  UIImage *image
 @property  CNContact *contact
 @property  UIImage *contactImage
 @property  UIImage *appIcon
 @property  NSDate *lastSeenDate
 @property  id sourceID
 @property  NSString *bundleIdentifier
 @property  NSString *badgeBundleIdentifier
 @property  NSString *secondarySourceIdentifier
 @property  unsigned long source
 @property  unsigned long topicSource
 @property  NSUUID *uniqueIdentifier
 @property  NSNumber *cachedScore

  // instance methods
  -[WBSForYouLinkRecommendation .cxx_destruct]
  -[WBSForYouLinkRecommendation source]
  -[WBSForYouLinkRecommendation bundleIdentifier]
  -[WBSForYouLinkRecommendation title]
  -[WBSForYouLinkRecommendation setTitle:]
  -[WBSForYouLinkRecommendation uniqueIdentifier]
  -[WBSForYouLinkRecommendation setBundleIdentifier:]
  -[WBSForYouLinkRecommendation image]
  -[WBSForYouLinkRecommendation setImage:]
  -[WBSForYouLinkRecommendation contact]
  -[WBSForYouLinkRecommendation setContact:]
  -[WBSForYouLinkRecommendation lastSeenDate]
  -[WBSForYouLinkRecommendation sourceID]
  -[WBSForYouLinkRecommendation setSourceID:]
  -[WBSForYouLinkRecommendation pageURL]
  -[WBSForYouLinkRecommendation imageURL]
  -[WBSForYouLinkRecommendation setContactImage:]
  -[WBSForYouLinkRecommendation contactImage]
  -[WBSForYouLinkRecommendation footnote]
  -[WBSForYouLinkRecommendation setFootnote:]
  -[WBSForYouLinkRecommendation setImageURL:]
  -[WBSForYouLinkRecommendation appIcon]
  -[WBSForYouLinkRecommendation initWithTitle:url:lastSeenDate:source:topicSource:]
  -[WBSForYouLinkRecommendation setSecondarySourceIdentifier:]
  -[WBSForYouLinkRecommendation cachedScore]
  -[WBSForYouLinkRecommendation topicSource]
  -[WBSForYouLinkRecommendation originalQueries]
  -[WBSForYouLinkRecommendation simplifiedURLString]
  -[WBSForYouLinkRecommendation setCachedScore:]
  -[WBSForYouLinkRecommendation addOriginalQueries:]
  -[WBSForYouLinkRecommendation badgeBundleIdentifier]
  -[WBSForYouLinkRecommendation originalQueriesString]
  -[WBSForYouLinkRecommendation secondarySourceIdentifier]
  -[WBSForYouLinkRecommendation setTopicSource:]


WBSContentBlockersPreferenceManager : WBSPerSitePreferenceManager <WBSPerSitePreferenceManagerStorageDelegate, WBSPerSitePreferenceManagerDefaultsDelegate, WBSPerSitePreferenceBinaryToggleItemManager>
 @property  WBSPerSitePreference *contentBlockersPreference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore

  // instance methods
  -[WBSContentBlockersPreferenceManager init]
  -[WBSContentBlockersPreferenceManager .cxx_destruct]
  -[WBSContentBlockersPreferenceManager preferences]
  -[WBSContentBlockersPreferenceManager initWithPerSitePreferencesStore:]
  -[WBSContentBlockersPreferenceManager didUpdatePreference:toValue:forDomain:]
  -[WBSContentBlockersPreferenceManager contentBlockersPreference]
  -[WBSContentBlockersPreferenceManager onValueForPreference:]
  -[WBSContentBlockersPreferenceManager perSitePreferencesStore]
  -[WBSContentBlockersPreferenceManager preferencesStoreKeyForPreference:]
  -[WBSContentBlockersPreferenceManager defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[WBSContentBlockersPreferenceManager offValueForPreference:]
  -[WBSContentBlockersPreferenceManager valuesForPreference:]
  -[WBSContentBlockersPreferenceManager localizedStringForValue:inPreference:]
  -[WBSContentBlockersPreferenceManager getContentBlockersEnabledStateForDomain:withTimeout:fallbackEnabledState:completionHandler:]


WBSPageZoomPreferenceManager : WBSPerSitePreferenceManager <WBSPerSitePreferenceManagerDefaultsDelegate, WBSPerSitePreferenceManagerStorageDelegate>
 @property  WBSPerSitePreference *pageZoomPreference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore

  // class methods
  +[WBSPageZoomPreferenceManager pageZoomFactors]

  // instance methods
  -[WBSPageZoomPreferenceManager .cxx_destruct]
  -[WBSPageZoomPreferenceManager preferences]
  -[WBSPageZoomPreferenceManager initWithPerSitePreferencesStore:]
  -[WBSPageZoomPreferenceManager didUpdatePreference:toValue:forDomain:]
  -[WBSPageZoomPreferenceManager pageZoomPreference]
  -[WBSPageZoomPreferenceManager perSitePreferencesStore]
  -[WBSPageZoomPreferenceManager preferencesStoreKeyForPreference:]
  -[WBSPageZoomPreferenceManager defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[WBSPageZoomPreferenceManager valuesForPreference:]
  -[WBSPageZoomPreferenceManager localizedStringForValue:inPreference:]
  -[WBSPageZoomPreferenceManager getPageZoomFactorForURL:usingBlock:]
  -[WBSPageZoomPreferenceManager zoomInOnURL:completionHandler:]
  -[WBSPageZoomPreferenceManager zoomOutOnURL:completionHandler:]
  -[WBSPageZoomPreferenceManager resetZoomLevelOnURL:completionHandler:]
  -[WBSPageZoomPreferenceManager getAvailableActionsForURL:usingBlock:]
  -[WBSPageZoomPreferenceManager removePageZoomPreferencesForHostnames:]
  -[WBSPageZoomPreferenceManager removeAllPageZoomPreferences]
  -[WBSPageZoomPreferenceManager _pageZoomStepToZoomFactor:]
  -[WBSPageZoomPreferenceManager _getDefaultZoomStep:]
  -[WBSPageZoomPreferenceManager _getZoomStepForDomain:usingBlock:]
  -[WBSPageZoomPreferenceManager _incrementOrDecreaseZoomStep:forURL:completionHandler:]
  -[WBSPageZoomPreferenceManager _canChangePageZoom:fromStep:]


WBSParsecSearchSportsResult : WBSParsecLegacySearchResult <WBSParsecSearchSportsResult>
 @property  NSArray *images
 @property  NSArray *individualScores
 @property  NSString *subtitle
 @property  WBSParsecSearchSportsAttributionExtraCompletionItem *extraCompletionItem

  // class methods
  +[WBSParsecSearchSportsResult _specializedSchema]

  // instance methods
  -[WBSParsecSearchSportsResult .cxx_destruct]
  -[WBSParsecSearchSportsResult initWithDictionary:]
  -[WBSParsecSearchSportsResult images]
  -[WBSParsecSearchSportsResult subtitle]
  -[WBSParsecSearchSportsResult individualScores]
  -[WBSParsecSearchSportsResult extraCompletionItem]


WBSParsecSearchUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSParsecSearchUtilities anyParsecSearchResult:fuzzyMatchesSuggestedSiteURLString:]


WBSParsecSportsImage : WBSParsecModel
 @property  long long alignment
 @property  WBSParsecImageRepresentation *imageRepresentation
 @property  NSString *label
 @property  NSString *name

  // class methods
  +[WBSParsecSportsImage schema]

  // instance methods
  -[WBSParsecSportsImage name]
  -[WBSParsecSportsImage .cxx_destruct]
  -[WBSParsecSportsImage initWithDictionary:]
  -[WBSParsecSportsImage alignment]
  -[WBSParsecSportsImage label]
  -[WBSParsecSportsImage imageRepresentation]


WBSParsecSportsScoreSummary : WBSParsecModel
 @property  NSArray *images
 @property  NSString *subtitle
 @property  NSArray *scores

  // class methods
  +[WBSParsecSportsScoreSummary schema]

  // instance methods
  -[WBSParsecSportsScoreSummary .cxx_destruct]
  -[WBSParsecSportsScoreSummary initWithDictionary:]
  -[WBSParsecSportsScoreSummary images]
  -[WBSParsecSportsScoreSummary subtitle]
  -[WBSParsecSportsScoreSummary scores]


WBSFoundInRecommendationManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSFoundInRecommendationManager isBundleIdentifierFromMessages:]
  +[WBSFoundInRecommendationManager _linkRecommendationsFromSGSuggestions:contactStoreProvider:]
  +[WBSFoundInRecommendationManager foundInSourceFromBundleIdentifier:]
  +[WBSFoundInRecommendationManager isBundleIdentifierFromCalendar:]

  // instance methods
  -[WBSFoundInRecommendationManager .cxx_destruct]
  -[WBSFoundInRecommendationManager recentRecommendationsWithCompletionHandler:]
  -[WBSFoundInRecommendationManager beginListeningForURLSuggestionChanges]
  -[WBSFoundInRecommendationManager stopListeningForURLSuggestionChanges]
  -[WBSFoundInRecommendationManager _createInternalQueueIfNecessary]
  -[WBSFoundInRecommendationManager _recentURLRecommendationsWithCompletionHandler:]


_WBSParsecSubscriptionInfoKeyValueStringParser : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_WBSParsecSubscriptionInfoKeyValueStringParser parseKeyValuePairsFromString:]

  // instance methods
  -[_WBSParsecSubscriptionInfoKeyValueStringParser .cxx_destruct]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _initWithString:]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _isAtEnd]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _parseKeyValuePairs]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _parseKeyValuePairWithKey:value:]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _previewCharacter]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _consumeCharacter]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _skipWhitespace]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _parseKey]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _parseValue]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _parseUpToCharacterFromSet:]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _parseJSONValue]


WBSParsecSubscriptionInfo : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *expirationDate
 @property  NSString *type
 @property  BOOL expired

  // instance methods
  -[WBSParsecSubscriptionInfo type]
  -[WBSParsecSubscriptionInfo .cxx_destruct]
  -[WBSParsecSubscriptionInfo initWithString:]
  -[WBSParsecSubscriptionInfo expirationDate]
  -[WBSParsecSubscriptionInfo isExpired]
  -[WBSParsecSubscriptionInfo _initWithDictionary:]


WBSParsecSubscriptionManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *subscriptionDictionaries
 @property  BOOL needsUpdate

  // class methods
  +[WBSParsecSubscriptionManager sharedManager]

  // instance methods
  -[WBSParsecSubscriptionManager init]
  -[WBSParsecSubscriptionManager .cxx_destruct]
  -[WBSParsecSubscriptionManager _init]
  -[WBSParsecSubscriptionManager needsUpdate]
  -[WBSParsecSubscriptionManager _updateAppleMusicSubscription]
  -[WBSParsecSubscriptionManager _updateThirdPartySubscriptionsWithBundleIdentifierWhitelist:domainWhitelist:maximumExpirationLimit:]
  -[WBSParsecSubscriptionManager subscriptionDictionaries]
  -[WBSParsecSubscriptionManager updateSubscriptionsWithBundleIdentifierWhitelist:domainWhitelist:maximumExpirationLimit:]
  -[WBSParsecSubscriptionManager registerSubscriptionServiceForURL:withSubscriptionInfo:]
  -[WBSParsecSubscriptionManager removeSubscriptionsAddedAfterDate:]


WBSPasswordAutoFillUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSPasswordAutoFillUtilities mayAutoFillPasswordOnHost:]


WBSPeriodicActivityScheduler : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSPeriodicActivityScheduler init]
  -[WBSPeriodicActivityScheduler invalidate]
  -[WBSPeriodicActivityScheduler .cxx_destruct]
  -[WBSPeriodicActivityScheduler _timerDidFire:]
  -[WBSPeriodicActivityScheduler initWithInterval:minimumDelay:lastFireDate:block:]
  -[WBSPeriodicActivityScheduler _scheduleActivityWithInterval:]
  -[WBSPeriodicActivityScheduler _performActivity]


WBSPerSitePreferencesSQLiteStore : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSPerSitePreferencesSQLiteStore sharedStore]

  // instance methods
  -[WBSPerSitePreferencesSQLiteStore init]
  -[WBSPerSitePreferencesSQLiteStore dealloc]
  -[WBSPerSitePreferencesSQLiteStore .cxx_destruct]
  -[WBSPerSitePreferencesSQLiteStore initWithDatabaseURL:]
  -[WBSPerSitePreferencesSQLiteStore closeDatabase]
  -[WBSPerSitePreferencesSQLiteStore _openDatabase]
  -[WBSPerSitePreferencesSQLiteStore _closeDatabase]
  -[WBSPerSitePreferencesSQLiteStore getAllPreferenceInformationForPreference:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore setValue:ofPreference:forDomain:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore _isDatabaseOpen]
  -[WBSPerSitePreferencesSQLiteStore _createFreshDatabaseSchema]
  -[WBSPerSitePreferencesSQLiteStore _migrateToSchemaVersion:]
  -[WBSPerSitePreferencesSQLiteStore _setDatabaseSchemaVersion:]
  -[WBSPerSitePreferencesSQLiteStore _migrateToSchemaVersion_2]
  -[WBSPerSitePreferencesSQLiteStore removePreferenceValuesForDomains:fromPreference:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore _migrateToCurrentSchemaVersionIfNecessary]
  -[WBSPerSitePreferencesSQLiteStore removeAllPreferenceValuesFromPreference:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore getValueOfPreference:forDomain:withTimeoutInterval:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore getDefaultValueForPreference:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore setDefaultValue:forPreference:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore getAllDomainsConfiguredForPreference:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore getTimestampAndValueOfPreference:forDomain:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore setValue:ofPreference:forDomain:includeTimestamp:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore _openDatabaseIfNecessary]
  -[WBSPerSitePreferencesSQLiteStore getValuesOfPreferences:forDomain:withTimeoutInterval:completionHandler:]
  -[WBSPerSitePreferencesSQLiteStore _tryToPerformTransactionInBlock:]


WBSPerSitePreferenceValueInformation : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *domain
 @property  NSNumber *value
 @property  NSDate *creationDate

  // instance methods
  -[WBSPerSitePreferenceValueInformation domain]
  -[WBSPerSitePreferenceValueInformation .cxx_destruct]
  -[WBSPerSitePreferenceValueInformation value]
  -[WBSPerSitePreferenceValueInformation creationDate]
  -[WBSPerSitePreferenceValueInformation initWithDomain:value:creationDate:]


WBSForYouRecentParsecResultsManager : WBSForYouRecommendationMediatorDataSource
 @property  NSArray *recentRecommendations

  // class methods
  +[WBSForYouRecentParsecResultsManager recommendationsMatchingTopic:fromArray:]

  // instance methods
  -[WBSForYouRecentParsecResultsManager .cxx_destruct]
  -[WBSForYouRecentParsecResultsManager _createInternalQueueIfNecessary]
  -[WBSForYouRecentParsecResultsManager retrieveRecommendationsMatchingTopic:withCompletionHandler:]
  -[WBSForYouRecentParsecResultsManager appendResultsIfApplicable:withDelayedExistenceCheck:]
  -[WBSForYouRecentParsecResultsManager _hasPermissibleResultTypeForResult:]
  -[WBSForYouRecentParsecResultsManager _bestAcceptableImageForSFResult:]
  -[WBSForYouRecentParsecResultsManager _cacheEnsuringExistence]
  -[WBSForYouRecentParsecResultsManager recentRecommendations]
  -[WBSForYouRecentParsecResultsManager appendResultsIfApplicable:]
  -[WBSForYouRecentParsecResultsManager clearAllResults]


WBSHistorySQLiteSchema : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *legacyDatabase

  // instance methods
  -[WBSHistorySQLiteSchema init]
  -[WBSHistorySQLiteSchema .cxx_destruct]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion:]
  -[WBSHistorySQLiteSchema _setDatabaseSchemaVersion:]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_2]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_3]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_4]
  -[WBSHistorySQLiteSchema initWithDatabase:crypto:migrateVisitsAfterDate:]
  -[WBSHistorySQLiteSchema migrateToCurrentSchemaVersionIfNeeded]
  -[WBSHistorySQLiteSchema _migrateLegacyDatabase]
  -[WBSHistorySQLiteSchema _migrateLegacyItem:dailyVisitCounts:weeklyVisitCounts:]
  -[WBSHistorySQLiteSchema _migrateLegacyVisitWithItemID:visitTime:title:score:loadSuccessful:httpNonGet:synthesized:]
  -[WBSHistorySQLiteSchema legacyDatabase]
  -[WBSHistorySQLiteSchema _removeLegacyHistoryDatabaseIfNeeded]
  -[WBSHistorySQLiteSchema _migrateLegacyDatabaseCreatingItemsAndVisits:outVisitsToUseForRedirectChains:]
  -[WBSHistorySQLiteSchema migrateLegacyDatabaseCreatingRedirectChains:urlsToItemAndLastVisitID:visitsToUseForRedirectChains:]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_5]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_6]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_7]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_8]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_9]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_10]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_11]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_12]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_13]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_14]
  -[WBSHistorySQLiteSchema _migrateToSchemaVersion_15]


WBSFaviconProviderPersistenceController : NSObject /usr/lib/libc++.1.dylib <WBSDataCacheDelegate, WBSSQLiteStoreDelegate>
 @property  NSURL *databaseURL
 @property  NSURL *diskCacheURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSFaviconProviderPersistenceController init]
  -[WBSFaviconProviderPersistenceController .cxx_destruct]
  -[WBSFaviconProviderPersistenceController closeWithCompletionHandler:]
  -[WBSFaviconProviderPersistenceController databaseURL]
  -[WBSFaviconProviderPersistenceController savePendingChangesBeforeTermination]
  -[WBSFaviconProviderPersistenceController sqliteStoreDidFailDatabaseIntegrityCheck:completionHandler:]
  -[WBSFaviconProviderPersistenceController sqliteStoreDidFallBackToInMemoryStore:]
  -[WBSFaviconProviderPersistenceController initWithPersistenceBaseURL:databaseName:preferredIconSize:isReadOnly:]
  -[WBSFaviconProviderPersistenceController removeIconFilesNotReferencedInDatabaseWithCompletionHandler:]
  -[WBSFaviconProviderPersistenceController openAndCheckIntegrity:createIfNeeded:fallBackToMemoryStoreIfError:completionHandler:]
  -[WBSFaviconProviderPersistenceController iconInfoForIconURLString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController iconInfoForPageURLString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController rejectedResourceInfoForPageURLString:iconURLString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController setIconIsRejectedResource:forPageURLString:iconURLString:isPrivate:completionHandler:]
  -[WBSFaviconProviderPersistenceController linkPageURLString:toIconURLString:isPrivate:completionHandler:]
  -[WBSFaviconProviderPersistenceController setIconData:forPageURLString:iconURLString:iconSize:hasGeneratedResolutions:isPrivate:completionHandler:]
  -[WBSFaviconProviderPersistenceController removeIconsWithURLStringsNotFoundIn:completionHandler:]
  -[WBSFaviconProviderPersistenceController removeIconWithPageURLString:completionHandler:]
  -[WBSFaviconProviderPersistenceController flushPrivateDataFromMemoryWithCompletionHandler:]
  -[WBSFaviconProviderPersistenceController removeAllIconsWithCompletionHandler:]
  -[WBSFaviconProviderPersistenceController iconForPageURLString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController pageURLStringsPrefixedWithVariantsOfDomainString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController firstIconForVariantsOfDomainString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController firstIconForVariantsOfPageURLString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController dataCacheDidSetUp:]
  -[WBSFaviconProviderPersistenceController _finishSetUpWithStatus:]
  -[WBSFaviconProviderPersistenceController _faviconStatusFromWBSSQLStoreStatus:]
  -[WBSFaviconProviderPersistenceController _imageFromURL:]
  -[WBSFaviconProviderPersistenceController _iconForIconUUID:completionHandler:]
  -[WBSFaviconProviderPersistenceController iconForIconURLString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController diskCacheURL]


WBSForYouPerSitePreferenceManager : WBSPerSitePreferenceManager <WBSPerSitePreferenceManagerStorageDelegate, WBSPerSitePreferenceManagerDefaultsDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore

  // instance methods
  -[WBSForYouPerSitePreferenceManager init]
  -[WBSForYouPerSitePreferenceManager .cxx_destruct]
  -[WBSForYouPerSitePreferenceManager preferences]
  -[WBSForYouPerSitePreferenceManager initWithPerSitePreferencesStore:]
  -[WBSForYouPerSitePreferenceManager perSitePreferencesStore]
  -[WBSForYouPerSitePreferenceManager preferencesStoreKeyForPreference:]
  -[WBSForYouPerSitePreferenceManager defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[WBSForYouPerSitePreferenceManager valuesForPreference:]
  -[WBSForYouPerSitePreferenceManager localizedStringForValue:inPreference:]
  -[WBSForYouPerSitePreferenceManager setPreferenceValue:forURL:completionHandler:]
  -[WBSForYouPerSitePreferenceManager allowedForYouRecommendationsFromRecommendations:completionHandler:]


WBSQuickWebsiteSearchController : NSObject /usr/lib/libc++.1.dylib <WBSQuickWebsiteSearchProviderDelegate>
 @property  BOOL quickWebsiteSearchProvidersLoadedFromDisk
 @property  NSArray *quickWebsiteSearchHosts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSQuickWebsiteSearchController sharedController]

  // instance methods
  -[WBSQuickWebsiteSearchController clear]
  -[WBSQuickWebsiteSearchController .cxx_destruct]
  -[WBSQuickWebsiteSearchController _dictionaryRepresentation]
  -[WBSQuickWebsiteSearchController _loadFromDisk]
  -[WBSQuickWebsiteSearchController savePendingChangesBeforeTermination]
  -[WBSQuickWebsiteSearchController _initWithSearchDescriptionsURL:]
  -[WBSQuickWebsiteSearchController beginLoadingFromDiskIfNeeded]
  -[WBSQuickWebsiteSearchController _didCollectOpenSearchDescription:]
  -[WBSQuickWebsiteSearchController _didFinishLoadingFromDisk]
  -[WBSQuickWebsiteSearchController _resetCachedDataWithCompletionHandler:]
  -[WBSQuickWebsiteSearchController _saveToDiskSoon]
  -[WBSQuickWebsiteSearchController quickWebsiteSearchProvidersLoadedFromDisk]
  -[WBSQuickWebsiteSearchController _quickWebsiteSearchProviderHasSearchURLTemplateStringOnAccessQueue:]
  -[WBSQuickWebsiteSearchController _sendNotification:forQuickWebsiteSearchProvider:]
  -[WBSQuickWebsiteSearchController _addHost:toOpenSearchDescriptionWithDocumentURL:]
  -[WBSQuickWebsiteSearchController _removeHost:fromOpenSearchDescriptionWithDocumentURL:]
  -[WBSQuickWebsiteSearchController removeProvidersWithHosts:]
  -[WBSQuickWebsiteSearchController openSearchDescriptionForOpenSearchDescriptionURLString:]
  -[WBSQuickWebsiteSearchController _shouldRemoveQuickWebsiteSearchProvider:]
  -[WBSQuickWebsiteSearchController _pruneUnusedQuickWebsiteSearchProviders]
  -[WBSQuickWebsiteSearchController setQuickWebsiteSearchProvidersLoadedFromDisk:]
  -[WBSQuickWebsiteSearchController quickWebsiteSearchProvider:openSearchDescriptionForOpenSearchDescriptionURLString:]
  -[WBSQuickWebsiteSearchController noteProvidersAreStale]
  -[WBSQuickWebsiteSearchController removeProvidersAddedAfterDate:beforeDate:]
  -[WBSQuickWebsiteSearchController quickWebsiteSearchHosts]
  -[WBSQuickWebsiteSearchController providersMatchingQueryString:]
  -[WBSQuickWebsiteSearchController didPerformSearchWithProvider:]
  -[WBSQuickWebsiteSearchController setSearchURLTemplateFromForm:forSourcePageURLString:]
  -[WBSQuickWebsiteSearchController setOpenSearchDescriptionURLString:forSourcePageURLString:]
  -[WBSQuickWebsiteSearchController providerForSourcePageURLString:]
  -[WBSQuickWebsiteSearchController removeProviderWithHost:]


WBSQuickWebsiteSearchProvider : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *sourcePageURLString
 @property  NSDate *dateAdded
 @property  WBSOpenSearchURLTemplate *searchURLTemplateFromForm
 @property  NSString *openSearchDescriptionURLString
 @property  NSDate *dateOfLastSearch
 @property  WBSOpenSearchDescription *openSearchDescription
 @property  WBSOpenSearchURLTemplate *searchURLTemplate
 @property  WBSOpenSearchURLTemplate *urlTemplateForSuggestionsInJSON
 @property  NSString *displayName
 @property  NSString *hostname

  // instance methods
  -[WBSQuickWebsiteSearchProvider .cxx_destruct]
  -[WBSQuickWebsiteSearchProvider dictionaryRepresentation]
  -[WBSQuickWebsiteSearchProvider displayName]
  -[WBSQuickWebsiteSearchProvider hostname]
  -[WBSQuickWebsiteSearchProvider dateAdded]
  -[WBSQuickWebsiteSearchProvider searchURLTemplate]
  -[WBSQuickWebsiteSearchProvider urlTemplateForSuggestionsInJSON]
  -[WBSQuickWebsiteSearchProvider openSearchDescriptionURLString]
  -[WBSQuickWebsiteSearchProvider dateOfLastSearch]
  -[WBSQuickWebsiteSearchProvider setDateOfLastSearch:]
  -[WBSQuickWebsiteSearchProvider searchURLTemplateFromForm]
  -[WBSQuickWebsiteSearchProvider setSearchURLTemplateFromForm:]
  -[WBSQuickWebsiteSearchProvider initWithSourcePageURLString:searchURLTemplateFromForm:delegate:]
  -[WBSQuickWebsiteSearchProvider setOpenSearchDescriptionURLString:]
  -[WBSQuickWebsiteSearchProvider initWithSourcePageURLString:openSearchDescriptionURLString:delegate:]
  -[WBSQuickWebsiteSearchProvider initWithDictionaryRepresentation:delegate:]
  -[WBSQuickWebsiteSearchProvider sourcePageURLString]
  -[WBSQuickWebsiteSearchProvider openSearchDescription]


WBSRadarNewProblemURLBuilder : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *componentName
 @property  NSString *componentVersion
 @property  NSString *title
 @property  NSString *descriptionText
 @property  NSArray *attachmentURLs
 @property  long long classification
 @property  NSURL *url

  // instance methods
  -[WBSRadarNewProblemURLBuilder .cxx_destruct]
  -[WBSRadarNewProblemURLBuilder url]
  -[WBSRadarNewProblemURLBuilder title]
  -[WBSRadarNewProblemURLBuilder setTitle:]
  -[WBSRadarNewProblemURLBuilder componentName]
  -[WBSRadarNewProblemURLBuilder descriptionText]
  -[WBSRadarNewProblemURLBuilder setDescriptionText:]
  -[WBSRadarNewProblemURLBuilder classification]
  -[WBSRadarNewProblemURLBuilder componentVersion]
  -[WBSRadarNewProblemURLBuilder attachmentURLs]
  -[WBSRadarNewProblemURLBuilder setClassification:]
  -[WBSRadarNewProblemURLBuilder setComponentName:]
  -[WBSRadarNewProblemURLBuilder setComponentVersion:]
  -[WBSRadarNewProblemURLBuilder setAttachmentURLs:]


WBSReaderResources : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSReaderResources sharedUIScriptForContext:]
  +[WBSReaderResources articleFinderScriptForContext:]
  +[WBSReaderResources readerHTMLSourceURL]
  +[WBSReaderResources localizedStringsScriptURL]
  +[WBSReaderResources sharedUINormalWorldScriptForContext:]


WBSFaviconProviderPrivateCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSFaviconProviderPrivateCache init]
  -[WBSFaviconProviderPrivateCache .cxx_destruct]
  -[WBSFaviconProviderPrivateCache removeAllImageDataWithCompletionHandler:]
  -[WBSFaviconProviderPrivateCache setIsRejectedResource:forPageURLString:iconURLString:]
  -[WBSFaviconProviderPrivateCache setImageData:forPageURLString:iconURLString:iconSize:hasGeneratedResolutions:]
  -[WBSFaviconProviderPrivateCache rejectedResourceInfoForPageURLString:iconURLString:]
  -[WBSFaviconProviderPrivateCache linkPageURLString:toIconURLString:]
  -[WBSFaviconProviderPrivateCache removeImageDataForPageURLString:]
  -[WBSFaviconProviderPrivateCache imageDataForPageURLString:]
  -[WBSFaviconProviderPrivateCache imageDataForIconURLString:]
  -[WBSFaviconProviderPrivateCache imageInfoForPageURLString:]
  -[WBSFaviconProviderPrivateCache imageInfoForIconURLString:]
  -[WBSFaviconProviderPrivateCache firstImageDataMatchingPageURLStringIn:matchedPageURLString:]
  -[WBSFaviconProviderPrivateCache pageURLStringsWithPrefixesIn:]


WBSReaderFont : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *familyName
 @property  NSString *familyNameForWebContent
 @property  NSString *displayName
 @property  BOOL installed

  // class methods
  +[WBSReaderFont systemSerifFont]
  +[WBSReaderFont systemFontWithDisplayName:]
  +[WBSReaderFont systemFont]
  +[WBSReaderFont fontWithFamilyName:displayName:]

  // instance methods
  -[WBSReaderFont isEqual:]
  -[WBSReaderFont copyWithZone:]
  -[WBSReaderFont .cxx_destruct]
  -[WBSReaderFont familyName]
  -[WBSReaderFont _localizedName]
  -[WBSReaderFont displayName]
  -[WBSReaderFont isInstalled]
  -[WBSReaderFont isInstalledWithCompletionHandler:]
  -[WBSReaderFont fontOfSize:]
  -[WBSReaderFont familyNameForWebContent]
  -[WBSReaderFont _initWithFamilyName:displayName:type:]
  -[WBSReaderFont _fontDescriptorRefForFontFamilyName:restrictToEnabled:]


WBSHistoryObjectCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSHistoryObjectCache init]
  -[WBSHistoryObjectCache clear]
  -[WBSHistoryObjectCache .cxx_destruct]
  -[WBSHistoryObjectCache .cxx_construct]
  -[WBSHistoryObjectCache allItems]
  -[WBSHistoryObjectCache _clearNilReferences]
  -[WBSHistoryObjectCache itemForID:]
  -[WBSHistoryObjectCache setItem:forID:]
  -[WBSHistoryObjectCache removeItemWithID:]
  -[WBSHistoryObjectCache changeItemIDs:]
  -[WBSHistoryObjectCache reserveItemCapacity:]
  -[WBSHistoryObjectCache visitForID:]
  -[WBSHistoryObjectCache setVisit:forID:]
  -[WBSHistoryObjectCache changeVisitIDs:]


WBSReaderFontDownloadManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSReaderFontDownloadManager sharedManager]

  // instance methods
  -[WBSReaderFontDownloadManager init]
  -[WBSReaderFontDownloadManager .cxx_destruct]
  -[WBSReaderFontDownloadManager downloadFont:]
  -[WBSReaderFontDownloadManager downloadProgressForFont:]
  -[WBSReaderFontDownloadManager hasOngoingRequestForFont:]


WBSReaderFontManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *fonts
 @property  NSArray *possibleFonts
 @property  NSString *languageTag

  // instance methods
  -[WBSReaderFontManager init]
  -[WBSReaderFontManager .cxx_destruct]
  -[WBSReaderFontManager fonts]
  -[WBSReaderFontManager languageTag]
  -[WBSReaderFontManager updateLanguageTag:]
  -[WBSReaderFontManager possibleFonts]
  -[WBSReaderFontManager _fontDownloadDidFinish:]
  -[WBSReaderFontManager fontWithFontFamilyName:]
  -[WBSReaderFontManager defaultFontForLanguageTag:]


WBSReaderLocalizedFonts : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSReaderLocalizedFonts defaultFontFamilyNameForLanguageMap]
  +[WBSReaderLocalizedFonts defaultFontFamilyNameForLanguage:]
  +[WBSReaderLocalizedFonts fontsForLanguage:]


WBSDictionaryInt64 : NSObject /usr/lib/libc++.1.dylib <NSCoding, NSSecureCoding, NSCopying>
 @property  r^{unordered_map<long long map

  // class methods
  +[WBSDictionaryInt64 supportsSecureCoding]

  // instance methods
  -[WBSDictionaryInt64 init]
  -[WBSDictionaryInt64 copyWithZone:]
  -[WBSDictionaryInt64 copy]
  -[WBSDictionaryInt64 encodeWithCoder:]
  -[WBSDictionaryInt64 initWithCoder:]
  -[WBSDictionaryInt64 .cxx_destruct]
  -[WBSDictionaryInt64 map]
  -[WBSDictionaryInt64 .cxx_construct]
  -[WBSDictionaryInt64 initWithMap:]
  -[WBSDictionaryInt64 initWithMovableMap:]


WBSRecentlyUsedAutoFillSet : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *fillMatches
 @property  NSArray *skipMatches
 @property  NSString *label

  // instance methods
  -[WBSRecentlyUsedAutoFillSet .cxx_destruct]
  -[WBSRecentlyUsedAutoFillSet label]
  -[WBSRecentlyUsedAutoFillSet fillMatches]
  -[WBSRecentlyUsedAutoFillSet initWithFillMatches:skipMatches:label:]
  -[WBSRecentlyUsedAutoFillSet skipMatches]


WBSRecentWebSearchEntry : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *searchString
 @property  NSDate *date

  // instance methods
  -[WBSRecentWebSearchEntry init]
  -[WBSRecentWebSearchEntry isEqual:]
  -[WBSRecentWebSearchEntry .cxx_destruct]
  -[WBSRecentWebSearchEntry date]
  -[WBSRecentWebSearchEntry dictionaryRepresentation]
  -[WBSRecentWebSearchEntry initWithSearchString:]
  -[WBSRecentWebSearchEntry initWithDictionaryRepresentation:]
  -[WBSRecentWebSearchEntry searchString]
  -[WBSRecentWebSearchEntry initWithSearchString:date:]


WBSRecentWebSearchesController : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSRecentWebSearchesController _maximumNumberOfSearchesToTrack]
  +[WBSRecentWebSearchesController _defaultsKey]
  +[WBSRecentWebSearchesController _shouldTrackSearches]

  // instance methods
  -[WBSRecentWebSearchesController .cxx_destruct]
  -[WBSRecentWebSearchesController _addLegacySearch:]
  -[WBSRecentWebSearchesController _removeLegacyRecentSearchesData]
  -[WBSRecentWebSearchesController _saveRecentSearchDictionaries:toUserDefaultsUsingKey:]
  -[WBSRecentWebSearchesController _recentSearchDictionariesFromUserDefaultsUsingKey:]
  -[WBSRecentWebSearchesController _migrateLegacyData]
  -[WBSRecentWebSearchesController clearRecentSearches]
  -[WBSRecentWebSearchesController recentSearches]
  -[WBSRecentWebSearchesController _addRecentSearchEntry:]
  -[WBSRecentWebSearchesController _saveRecentSearches]
  -[WBSRecentWebSearchesController _loadRecentSearchesIfNeeded]
  -[WBSRecentWebSearchesController recentSearchesMatchingPrefix:]
  -[WBSRecentWebSearchesController _recentSearchesDictionaries]
  -[WBSRecentWebSearchesController addRecentSearch:]
  -[WBSRecentWebSearchesController clearRecentSearchesAddedAfterDate:]


WBSRemoteHistoryItem : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSURL *url
 @property  NSString *title
 @property  NSDate *lastVisitTime

  // class methods
  +[WBSRemoteHistoryItem supportsSecureCoding]

  // instance methods
  -[WBSRemoteHistoryItem init]
  -[WBSRemoteHistoryItem encodeWithCoder:]
  -[WBSRemoteHistoryItem initWithCoder:]
  -[WBSRemoteHistoryItem .cxx_destruct]
  -[WBSRemoteHistoryItem url]
  -[WBSRemoteHistoryItem title]
  -[WBSRemoteHistoryItem initWithURL:title:lastVisitTime:]
  -[WBSRemoteHistoryItem lastVisitTime]


WBSRemoteHistorySession : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSArray *items
 @property  BOOL currentSession

  // class methods
  +[WBSRemoteHistorySession supportsSecureCoding]

  // instance methods
  -[WBSRemoteHistorySession init]
  -[WBSRemoteHistorySession isEqual:]
  -[WBSRemoteHistorySession encodeWithCoder:]
  -[WBSRemoteHistorySession initWithCoder:]
  -[WBSRemoteHistorySession .cxx_destruct]
  -[WBSRemoteHistorySession startDate]
  -[WBSRemoteHistorySession endDate]
  -[WBSRemoteHistorySession items]
  -[WBSRemoteHistorySession initWithStartDate:endDate:items:]
  -[WBSRemoteHistorySession isCurrentSession]


WBSRemoteHistoryVisit : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSURL *url
 @property  NSDate *date

  // class methods
  +[WBSRemoteHistoryVisit supportsSecureCoding]

  // instance methods
  -[WBSRemoteHistoryVisit init]
  -[WBSRemoteHistoryVisit encodeWithCoder:]
  -[WBSRemoteHistoryVisit initWithCoder:]
  -[WBSRemoteHistoryVisit .cxx_destruct]
  -[WBSRemoteHistoryVisit date]
  -[WBSRemoteHistoryVisit url]
  -[WBSRemoteHistoryVisit initWithURL:date:]


WBSHistoryItemToTagPairsPredicate : NSObject /usr/lib/libc++.1.dylib <WBSHistoryPredicate>
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSHistoryItemToTagPairsPredicate supportsSecureCoding]

  // instance methods
  -[WBSHistoryItemToTagPairsPredicate encodeWithCoder:]
  -[WBSHistoryItemToTagPairsPredicate initWithCoder:]
  -[WBSHistoryItemToTagPairsPredicate .cxx_destruct]
  -[WBSHistoryItemToTagPairsPredicate startDate]
  -[WBSHistoryItemToTagPairsPredicate endDate]
  -[WBSHistoryItemToTagPairsPredicate initWithStartDate:endDate:]
  -[WBSHistoryItemToTagPairsPredicate statementForDatabase:cache:fetchOptions:error:]


WBSLeadImageCache : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataImageCacheDelegate, WBSSiteMetadataProvider>
 @property  NSURL *imageDirectoryURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons

  // instance methods
  -[WBSLeadImageCache .cxx_destruct]
  -[WBSLeadImageCache canHandleRequest:]
  -[WBSLeadImageCache imageForURL:]
  -[WBSLeadImageCache stopWatchingUpdatesForRequest:]
  -[WBSLeadImageCache savePendingChangesBeforeTermination]
  -[WBSLeadImageCache responseForRequest:willProvideUpdates:]
  -[WBSLeadImageCache prepareResponseForRequest:allowDelayedResponse:]
  -[WBSLeadImageCache providerDelegate]
  -[WBSLeadImageCache setProviderDelegate:]
  -[WBSLeadImageCache emptyCaches]
  -[WBSLeadImageCache purgeUnneededCacheEntries]
  -[WBSLeadImageCache initWithImageDirectoryURL:]
  -[WBSLeadImageCache imageDirectoryURL]
  -[WBSLeadImageCache _addRequest:]
  -[WBSLeadImageCache saveImage:forURL:completionHandler:]
  -[WBSLeadImageCache siteMetadataImageCache:didFinishLoadingImage:forKeyString:]
  -[WBSLeadImageCache siteMetadataImageCacheDidEmptyCache:]


WBSCertificateWarningPageContext : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSURL *failingURL
 @property  long long warningCategory
 @property  BOOL canGoBack
 @property  long long numberOfDaysInvalid
 @property  NSString *expiredCerticateDescription
 @property  double clockSkew

  // class methods
  +[WBSCertificateWarningPageContext supportsSecureCoding]
  +[WBSCertificateWarningPageContext certificateWarningCannotBeBypassedForTrust:]
  +[WBSCertificateWarningPageContext certificateWarningCategoryForError:trustIncludesRevokedCertificate:clockSkew:]
  +[WBSCertificateWarningPageContext numberOfDaysBetweenCertificateValidityRangeAndNow:]
  +[WBSCertificateWarningPageContext permanentAcceptanceConfirmationTitle]
  +[WBSCertificateWarningPageContext permanentAcceptanceConfirmationDescription]
  +[WBSCertificateWarningPageContext permanentAcceptanceConfirmationButtonTitle]

  // instance methods
  -[WBSCertificateWarningPageContext init]
  -[WBSCertificateWarningPageContext encodeWithCoder:]
  -[WBSCertificateWarningPageContext initWithCoder:]
  -[WBSCertificateWarningPageContext .cxx_destruct]
  -[WBSCertificateWarningPageContext canGoBack]
  -[WBSCertificateWarningPageContext failingURL]
  -[WBSCertificateWarningPageContext initWithWarningCategory:failingURL:numberOfDaysInvalid:canGoBack:clockSkew:]
  -[WBSCertificateWarningPageContext warningCategory]
  -[WBSCertificateWarningPageContext numberOfDaysInvalid]
  -[WBSCertificateWarningPageContext expiredCerticateDescription]
  -[WBSCertificateWarningPageContext clockSkew]


_WBSSafariCyclerConfigurationCommand : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *name
 @property  NSString *help
 @property  NSString *usage
 @property  unsigned long minimumArgumentCount
 @property  unsigned long maximumArgumentCount
 @property  id target
 @property  SEL action

  // instance methods
  -[_WBSSafariCyclerConfigurationCommand init]
  -[_WBSSafariCyclerConfigurationCommand name]
  -[_WBSSafariCyclerConfigurationCommand .cxx_destruct]
  -[_WBSSafariCyclerConfigurationCommand setTarget:]
  -[_WBSSafariCyclerConfigurationCommand target]
  -[_WBSSafariCyclerConfigurationCommand action]
  -[_WBSSafariCyclerConfigurationCommand setUsage:]
  -[_WBSSafariCyclerConfigurationCommand usage]
  -[_WBSSafariCyclerConfigurationCommand setAction:]
  -[_WBSSafariCyclerConfigurationCommand help]
  -[_WBSSafariCyclerConfigurationCommand setArgumentCount:]
  -[_WBSSafariCyclerConfigurationCommand initWithName:help:]
  -[_WBSSafariCyclerConfigurationCommand invokeWithParameters:]
  -[_WBSSafariCyclerConfigurationCommand minimumArgumentCount]
  -[_WBSSafariCyclerConfigurationCommand setMinimumArgumentCount:]
  -[_WBSSafariCyclerConfigurationCommand maximumArgumentCount]
  -[_WBSSafariCyclerConfigurationCommand setMaximumArgumentCount:]


WBSSafariCyclerConfigurationTool : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSSafariCyclerConfigurationTool init]
  -[WBSSafariCyclerConfigurationTool run]
  -[WBSSafariCyclerConfigurationTool .cxx_destruct]
  -[WBSSafariCyclerConfigurationTool _supportedCommands]
  -[WBSSafariCyclerConfigurationTool _descriptionForErrorCode:]
  -[WBSSafariCyclerConfigurationTool _errorWithCode:]
  -[WBSSafariCyclerConfigurationTool _exitWithError:]
  -[WBSSafariCyclerConfigurationTool _printUsage]
  -[WBSSafariCyclerConfigurationTool _commandWithName:]
  -[WBSSafariCyclerConfigurationTool _runTest:]
  -[WBSSafariCyclerConfigurationTool _startCycler:]
  -[WBSSafariCyclerConfigurationTool _stopCycler:]
  -[WBSSafariCyclerConfigurationTool _resumeCycler:]
  -[WBSSafariCyclerConfigurationTool _setConfigurationOption:]
  -[WBSSafariCyclerConfigurationTool _sendRequestToTest:]
  -[WBSSafariCyclerConfigurationTool _configureDevice:]
  -[WBSSafariCyclerConfigurationTool _fetchStatus:]
  -[WBSSafariCyclerConfigurationTool _waitForCyclerToFinish:]


WBSForYouRecommendationMediatorDataSource : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSForYouRecommendationMediatorDataSource recommendationsWithTopics:withCompletionHandler:]
  -[WBSForYouRecommendationMediatorDataSource emitStartRetrievingRecommendationsPerformanceMarker]
  -[WBSForYouRecommendationMediatorDataSource retrieveRecommendationsMatchingTopic:withCompletionHandler:]
  -[WBSForYouRecommendationMediatorDataSource notifyImageWasUpdatedForRecommendation:]
  -[WBSForYouRecommendationMediatorDataSource notifyContentsDidChangeFromSource:]


WBSSameDocumentNavigationToHistoryVisitCorrelator : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSSameDocumentNavigationToHistoryVisitCorrelator init]
  -[WBSSameDocumentNavigationToHistoryVisitCorrelator .cxx_destruct]
  -[WBSSameDocumentNavigationToHistoryVisitCorrelator noteVisit:]
  -[WBSSameDocumentNavigationToHistoryVisitCorrelator visitForSameDocumentNavigationToURL:]


WBSUserMediaPermissionController : WBSPerSitePreferenceManager <WBSPerSitePreferenceManagerDefaultsDelegate, WBSCoalescedAsynchronousWriterDelegate>
 @property  WBSPerSitePreference *cameraMediaCapturePreference
 @property  WBSPerSitePreference *microphoneMediaCapturePreference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore

  // class methods
  +[WBSUserMediaPermissionController sharedController]
  +[WBSUserMediaPermissionController localizedStringForPerSitePreferenceValue:]

  // instance methods
  -[WBSUserMediaPermissionController init]
  -[WBSUserMediaPermissionController .cxx_destruct]
  -[WBSUserMediaPermissionController _init]
  -[WBSUserMediaPermissionController _dictionaryRepresentation]
  -[WBSUserMediaPermissionController preferences]
  -[WBSUserMediaPermissionController cameraMediaCapturePreference]
  -[WBSUserMediaPermissionController microphoneMediaCapturePreference]
  -[WBSUserMediaPermissionController savePendingChangesWithCompletionHandler:]
  -[WBSUserMediaPermissionController permissionForOrigin:topLevelOrigin:]
  -[WBSUserMediaPermissionController setPermission:expirationPolicy:forOrigin:topLevelOrigin:]
  -[WBSUserMediaPermissionController savePendingChangesBeforeTermination]
  -[WBSUserMediaPermissionController checkUserMediaPermissionForURL:mainFrameURL:frameIdentifier:decisionHandler:]
  -[WBSUserMediaPermissionController getValueOfPreference:forDomain:withTimeout:usingBlock:]
  -[WBSUserMediaPermissionController getAllDomainsConfiguredForPreference:usingBlock:]
  -[WBSUserMediaPermissionController perSitePreferencesStore]
  -[WBSUserMediaPermissionController preferencesStoreKeyForPreference:]
  -[WBSUserMediaPermissionController defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[WBSUserMediaPermissionController valuesForPreference:]
  -[WBSUserMediaPermissionController localizedStringForValue:inPreference:]
  -[WBSUserMediaPermissionController setValue:ofPreference:forDomain:completionHandler:]
  -[WBSUserMediaPermissionController reloadPreferences]
  -[WBSUserMediaPermissionController removePreferenceValuesForDomains:fromPreference:completionHandler:]
  -[WBSUserMediaPermissionController initWithUserMediaPermissionsFileURL:perSitePreferencesStore:]
  -[WBSUserMediaPermissionController _loadSavedPermissionsIfNecessary]
  -[WBSUserMediaPermissionController _loadSavedPermissions]
  -[WBSUserMediaPermissionController _defaultUserMediaPermission]
  -[WBSUserMediaPermissionController _cachedSettingsDidChange]
  -[WBSUserMediaPermissionController _standardizedURLForDomain:]
  -[WBSUserMediaPermissionController _permissionForOrigin:topLevelOrigin:]
  -[WBSUserMediaPermissionController _captureDevicesAreAllDefaultsGivenPermission:]
  -[WBSUserMediaPermissionController _policyForOrigin:topLevelOrigin:]
  -[WBSUserMediaPermissionController _invalidateCachedSettingsForOriginHash:]
  -[WBSUserMediaPermissionController userMediaPermissionForDefaultPreferenceValues]
  -[WBSUserMediaPermissionController _waitUntilPermissionsHaveLoaded]
  -[WBSUserMediaPermissionController saltForOrigin:topLevelOrigin:frameIdentifier:]
  -[WBSUserMediaPermissionController _mediaCaptureTypeForPreference:]
  -[WBSUserMediaPermissionController _permissionMaskForMediaCaptureType:]
  -[WBSUserMediaPermissionController _invalidateAllPermissionsForDomain:]
  -[WBSUserMediaPermissionController _mediaCaptureSettingForMediaCaptureType:userMediaPermission:]
  -[WBSUserMediaPermissionController _userMediaPermissionForMediaCaptureType:mediaCaptureSetting:]
  -[WBSUserMediaPermissionController removePolicyEntries:]
  -[WBSUserMediaPermissionController performDelayedLaunchOperations]
  -[WBSUserMediaPermissionController setPermission:expirationPolicy:forPolicyEntry:]
  -[WBSUserMediaPermissionController removeAllOriginsAddedAfterDate:]
  -[WBSUserMediaPermissionController resetOriginPermissions]
  -[WBSUserMediaPermissionController didCommitLoadForFrameWithIdentifier:]
  -[WBSUserMediaPermissionController sortedPolicies]
  -[WBSUserMediaPermissionController hasPolicyEntryForTopLevelOrigin:]
  -[WBSUserMediaPermissionController permissionForDomain:]
  -[WBSUserMediaPermissionController _isPreferenceValid:]


WBSSearchHelperConnectionManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSXPCConnection *searchHelperConnection

  // class methods
  +[WBSSearchHelperConnectionManager sharedManager]

  // instance methods
  -[WBSSearchHelperConnectionManager init]
  -[WBSSearchHelperConnectionManager .cxx_destruct]
  -[WBSSearchHelperConnectionManager removeClient:]
  -[WBSSearchHelperConnectionManager searchHelperConnectionRequestedByClient:]
  -[WBSSearchHelperConnectionManager setSearchHelperConnection:]
  -[WBSSearchHelperConnectionManager searchHelperConnection]


WBSSearchProvider : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSString *shortName
 @property  WBSOpenSearchURLTemplate *searchURLTemplate
 @property  WBSOpenSearchURLTemplate *safeSearchURLTemplate
 @property  NSDictionary *safeSearchURLQueryParameters
 @property  WBSOpenSearchURLTemplate *suggestionsURLTemplate
 @property  NSArray *hostSuffixes
 @property  NSArray *pathPrefixes
 @property  BOOL usesSearchTermsFromFragment

  // class methods
  +[WBSSearchProvider supportsSecureCoding]

  // instance methods
  -[WBSSearchProvider encodeWithCoder:]
  -[WBSSearchProvider initWithCoder:]
  -[WBSSearchProvider .cxx_destruct]
  -[WBSSearchProvider shortName]
  -[WBSSearchProvider urlIsValidSearch:]
  -[WBSSearchProvider safeSearchURLForSearchURL:]
  -[WBSSearchProvider initWithShortName:searchURLTemplate:safeSearchURLTemplate:safeSearchURLQueryParameters:usesSearchTermsFromFragment:suggestionsURLTemplate:hostSuffixes:pathPrefixes:]
  -[WBSSearchProvider searchShouldUseSafeSearchTemplate]
  -[WBSSearchProvider searchURLTemplate]
  -[WBSSearchProvider userVisibleQueryFromSearchURL:allowQueryThatLooksLikeURL:]
  -[WBSSearchProvider searchURLForUserTypedString:]
  -[WBSSearchProvider suggestionsURLForUserTypedString:]
  -[WBSSearchProvider userVisibleQueryFromSearchURL:]
  -[WBSSearchProvider urlAttributingToSafariIfValidSearchURL:]
  -[WBSSearchProvider safeSearchURLTemplate]
  -[WBSSearchProvider safeSearchURLQueryParameters]
  -[WBSSearchProvider suggestionsURLTemplate]
  -[WBSSearchProvider hostSuffixes]
  -[WBSSearchProvider pathPrefixes]
  -[WBSSearchProvider usesSearchTermsFromFragment]


WBSSiriIntelligenceDonorHistoryData : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *pageURL
 @property  NSString *userVisibleURLString
 @property  NSString *pageTitle
 @property  NSString *fullPageText
 @property  NSString *readerText
 @property  NSDate *lastVisitedDate
 @property  unsigned long visitCount

  // instance methods
  -[WBSSiriIntelligenceDonorHistoryData .cxx_destruct]
  -[WBSSiriIntelligenceDonorHistoryData visitCount]
  -[WBSSiriIntelligenceDonorHistoryData setPageURL:]
  -[WBSSiriIntelligenceDonorHistoryData pageURL]
  -[WBSSiriIntelligenceDonorHistoryData pageTitle]
  -[WBSSiriIntelligenceDonorHistoryData setPageTitle:]
  -[WBSSiriIntelligenceDonorHistoryData setLastVisitedDate:]
  -[WBSSiriIntelligenceDonorHistoryData lastVisitedDate]
  -[WBSSiriIntelligenceDonorHistoryData userVisibleURLString]
  -[WBSSiriIntelligenceDonorHistoryData setUserVisibleURLString:]
  -[WBSSiriIntelligenceDonorHistoryData fullPageText]
  -[WBSSiriIntelligenceDonorHistoryData setFullPageText:]
  -[WBSSiriIntelligenceDonorHistoryData readerText]
  -[WBSSiriIntelligenceDonorHistoryData setReaderText:]
  -[WBSSiriIntelligenceDonorHistoryData setVisitCount:]


WBSSiriIntelligenceDonorBookmarkData : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *coreSpotlightID
 @property  NSString *bookmarkURLString
 @property  NSString *bookmarkTitle

  // instance methods
  -[WBSSiriIntelligenceDonorBookmarkData .cxx_destruct]
  -[WBSSiriIntelligenceDonorBookmarkData coreSpotlightID]
  -[WBSSiriIntelligenceDonorBookmarkData setCoreSpotlightID:]
  -[WBSSiriIntelligenceDonorBookmarkData bookmarkURLString]
  -[WBSSiriIntelligenceDonorBookmarkData setBookmarkURLString:]
  -[WBSSiriIntelligenceDonorBookmarkData bookmarkTitle]
  -[WBSSiriIntelligenceDonorBookmarkData setBookmarkTitle:]


WBSSiriIntelligenceDonor : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSSiriIntelligenceDonor sharedInstance]
  +[WBSSiriIntelligenceDonor coreSpotlightPageDonationIdentifier]
  +[WBSSiriIntelligenceDonor historyItemIdentifierForURL:]
  +[WBSSiriIntelligenceDonor _historyItemIdentifierForURLString:]
  +[WBSSiriIntelligenceDonor _coreSpotlightItemIdentifierForURLString:]
  +[WBSSiriIntelligenceDonor _bookmarkItemIdentifierForURLString:]

  // instance methods
  -[WBSSiriIntelligenceDonor init]
  -[WBSSiriIntelligenceDonor .cxx_destruct]
  -[WBSSiriIntelligenceDonor _indexHistoryItemsToCoreSpotlight:completionHandler:]
  -[WBSSiriIntelligenceDonor _computeCoreSpotlightIDsForBookmarks:]
  -[WBSSiriIntelligenceDonor _indexedBookmarksIDs:]
  -[WBSSiriIntelligenceDonor _computeCoreSpotlightIndexingRequirementsForAllBookmarksIDs:indexedBookmarksIDs:outIndexIDs:outRemoveIDs:]
  -[WBSSiriIntelligenceDonor _removeCoreSpotlightDataWithIDs:completionHandler:]
  -[WBSSiriIntelligenceDonor _searchableItemsForIDs:allBookmarks:]
  -[WBSSiriIntelligenceDonor _indexCoreSpotlightData:]
  -[WBSSiriIntelligenceDonor _sanitizeAttributeSet:]
  -[WBSSiriIntelligenceDonor donateDataForPageWithURL:fullPageText:readerText:]
  -[WBSSiriIntelligenceDonor export30DaysWorthOfHistoryToCoreSpotlightWithCompletionHandler:]
  -[WBSSiriIntelligenceDonor donateSafariBookmarksToCoreSpotlight:]
  -[WBSSiriIntelligenceDonor processRemovedHistoryItems:]
  -[WBSSiriIntelligenceDonor removeAllCoreSpotlightHistoryDataDonatedBySafari]


WBSHistoryContextController : NSObject /usr/lib/libc++.1.dylib
 @property  WBSHistory *history

  // instance methods
  -[WBSHistoryContextController .cxx_destruct]
  -[WBSHistoryContextController history]
  -[WBSHistoryContextController initWithHistory:contextClient:]
  -[WBSHistoryContextController _persistTopicsFromContextResult:forPageURL:]
  -[WBSHistoryContextController cachedResponseForURL:completionHandler:]
  -[WBSHistoryContextController invalidateCachedResults]
  -[WBSHistoryContextController contextForPageURL:content:contentType:metadata:isPrivate:isReaderAvailable:withCompletionHandler:]


WBSSiteIconKeyColorExtractor : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSSiteIconKeyColorExtractor _createRGBAPixelBufferFromImage:]
  +[WBSSiteIconKeyColorExtractor keyColorForIcon:]


WBSSiteMetadataFetchOperation : NSOperation /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 @property  long long status
 @property  WBSSiteMetadataRequest *request

  // class methods
  +[WBSSiteMetadataFetchOperation keyPathsForValuesAffectingValueForKey:]

  // instance methods
  -[WBSSiteMetadataFetchOperation init]
  -[WBSSiteMetadataFetchOperation .cxx_destruct]
  -[WBSSiteMetadataFetchOperation _status]
  -[WBSSiteMetadataFetchOperation start]
  -[WBSSiteMetadataFetchOperation isFinished]
  -[WBSSiteMetadataFetchOperation isExecuting]
  -[WBSSiteMetadataFetchOperation request]
  -[WBSSiteMetadataFetchOperation initWithRequest:]
  -[WBSSiteMetadataFetchOperation _setStatus:]


WBSSiteMetadataImageCache : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *imageDirectoryURL
 @property  long long imageType
 @property  BOOL terminating
 @property  <WBSSiteMetadataImageCacheDelegate> *delegate

  // instance methods
  -[WBSSiteMetadataImageCache init]
  -[WBSSiteMetadataImageCache delegate]
  -[WBSSiteMetadataImageCache setDelegate:]
  -[WBSSiteMetadataImageCache .cxx_destruct]
  -[WBSSiteMetadataImageCache imageType]
  -[WBSSiteMetadataImageCache emptyCache]
  -[WBSSiteMetadataImageCache removeAllImages]
  -[WBSSiteMetadataImageCache savePendingChangesBeforeTermination]
  -[WBSSiteMetadataImageCache initWithImageDirectoryURL:imageType:]
  -[WBSSiteMetadataImageCache setUpImageCache]
  -[WBSSiteMetadataImageCache imageForKeyString:completionHandler:]
  -[WBSSiteMetadataImageCache saveImageToDisk:forKeyString:completionHandler:]
  -[WBSSiteMetadataImageCache removeImagesFromCacheForKeyStrings:]
  -[WBSSiteMetadataImageCache purgeUnneededImages]
  -[WBSSiteMetadataImageCache _internalQueueName]
  -[WBSSiteMetadataImageCache _internalQueueDispatchSync:]
  -[WBSSiteMetadataImageCache _diskAccessQueueName]
  -[WBSSiteMetadataImageCache _cacheSettingsFileURL]
  -[WBSSiteMetadataImageCache _dispatchDiskAccessBlock:]
  -[WBSSiteMetadataImageCache _fileLocationForKeyString:]
  -[WBSSiteMetadataImageCache settingForKey:]
  -[WBSSiteMetadataImageCache setSetting:forKey:]
  -[WBSSiteMetadataImageCache isTerminating]
  -[WBSSiteMetadataImageCache imageDirectoryURL]
  -[WBSSiteMetadataImageCache imageForKeyString:getImageState:]
  -[WBSSiteMetadataImageCache setImageState:forKeyString:]
  -[WBSSiteMetadataImageCache initWithImageDirectoryURL:imageType:fileProtectionOptions:]
  -[WBSSiteMetadataImageCache _internalReleaseImageForKeyString:]
  -[WBSSiteMetadataImageCache _notifyDidFinishLoadingSettings]
  -[WBSSiteMetadataImageCache _internalQueueDispatchBarrierAsync:]
  -[WBSSiteMetadataImageCache _internalSetUpImageCache]
  -[WBSSiteMetadataImageCache _internalPurgeUnneededImages]
  -[WBSSiteMetadataImageCache _fileNameForKeyString:]
  -[WBSSiteMetadataImageCache _removeImagesPassingTest:]
  -[WBSSiteMetadataImageCache _emptyCacheDirectory]
  -[WBSSiteMetadataImageCache _didLoadImage:forKeyString:fromDisk:]
  -[WBSSiteMetadataImageCache _loadImageFromDiskForKeyString:]
  -[WBSSiteMetadataImageCache _internalImageStateForKeyString:]
  -[WBSSiteMetadataImageCache _internalSetImageState:forKeyString:]
  -[WBSSiteMetadataImageCache _internalImageForKeyString:]
  -[WBSSiteMetadataImageCache _requestImageForKeyString:]
  -[WBSSiteMetadataImageCache _internalSaveImageToDisk:forKeyString:completionHandler:]
  -[WBSSiteMetadataImageCache _internalRemoveAllImages]
  -[WBSSiteMetadataImageCache _internalRemoveImagesFromCacheForKeyStrings:]
  -[WBSSiteMetadataImageCache _internalSettingForKey:]
  -[WBSSiteMetadataImageCache _internalSetSetting:forKey:]
  -[WBSSiteMetadataImageCache _saveCacheSettingsSoon]
  -[WBSSiteMetadataImageCache setImage:forKeyString:]
  -[WBSSiteMetadataImageCache imageStateForKeyString:]
  -[WBSSiteMetadataImageCache retainImageWithKeyStringProvider:]
  -[WBSSiteMetadataImageCache retainImageForKeyString:]
  -[WBSSiteMetadataImageCache retainImagesForKeyStrings:]
  -[WBSSiteMetadataImageCache releaseImageWithKeyStringProvider:]
  -[WBSSiteMetadataImageCache releaseImageForKeyString:]
  -[WBSSiteMetadataImageCache releaseImagesForKeyStrings:]
  -[WBSSiteMetadataImageCache isImageRetainedForKeyString:]


WBSSiteMetadataImageCacheSettingsSQLiteStore : NSObject /usr/lib/libc++.1.dylib
 @property  WBSSQLiteDatabase *database
 @property  NSURL *databaseURL

  // class methods
  +[WBSSiteMetadataImageCacheSettingsSQLiteStore databaseSchemaVersion]
  +[WBSSiteMetadataImageCacheSettingsSQLiteStore cacheSettingsEntryClass]

  // instance methods
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore dealloc]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore close]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore .cxx_destruct]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore database]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore allEntries]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore databaseURL]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore initWithDatabaseURL:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _closeDatabase]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _checkDatabaseIntegrity]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _setDatabaseSchemaVersion:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _openDatabase:andCheckIntegrity:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore initWithDatabaseURL:protectionType:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _migrateToCurrentSchemaVersionifNeeded]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _createNewDatabaseSchema]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _statementsForMigrationToSchemaVersion:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _performMigrationStepToSchemaVersion:withStatements:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _createNewDatabaseSQLiteStatement]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _selectEntrySQLiteStatementWithHost:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _selectAllEntriesSQLiteStatement]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _updateEntry:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _insertEntry:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _insertEntrySQLiteStatementWithEntry:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _updateEntrySQLiteStatementWithEntry:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _deleteEntrySQLiteStatementWithHost:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _deleteAllEntriesSQLiteStatement]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore entryWithHost:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore saveEntry:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore deleteEntryWithHost:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore deleteAllEntries]


WBSUserMediaCapturePolicyEntry : NSObject /usr/lib/libc++.1.dylib
 @property  double permissionExpirationDate
 @property  double permissionGrantDate
 @property  NSString *origin
 @property  NSString *topLevelOrigin
 @property  NSString *persistentSalt
 @property  unsigned long permission
 @property  NSMutableDictionary *ephemeralSalts

  // instance methods
  -[WBSUserMediaCapturePolicyEntry isValid]
  -[WBSUserMediaCapturePolicyEntry .cxx_destruct]
  -[WBSUserMediaCapturePolicyEntry dictionaryRepresentation]
  -[WBSUserMediaCapturePolicyEntry origin]
  -[WBSUserMediaCapturePolicyEntry setOrigin:]
  -[WBSUserMediaCapturePolicyEntry initWithDictionaryRepresentation:]
  -[WBSUserMediaCapturePolicyEntry permission]
  -[WBSUserMediaCapturePolicyEntry setPermission:]
  -[WBSUserMediaCapturePolicyEntry setPersistentSalt:]
  -[WBSUserMediaCapturePolicyEntry _defaultUserMediaPermission]
  -[WBSUserMediaCapturePolicyEntry updatePermission:expirationPolicy:]
  -[WBSUserMediaCapturePolicyEntry initWithPermission:expirationPolicy:forOrigin:topLevelOrigin:]
  -[WBSUserMediaCapturePolicyEntry ephemeralSalts]
  -[WBSUserMediaCapturePolicyEntry persistentSalt]
  -[WBSUserMediaCapturePolicyEntry setEphemeralSalts:]
  -[WBSUserMediaCapturePolicyEntry permissionGrantDate]
  -[WBSUserMediaCapturePolicyEntry topLevelOrigin]
  -[WBSUserMediaCapturePolicyEntry permissionExpiresWithinOneDay]
  -[WBSUserMediaCapturePolicyEntry _isValidUserMediaPermission:]
  -[WBSUserMediaCapturePolicyEntry permissionExpirationDate]
  -[WBSUserMediaCapturePolicyEntry setPermissionExpirationDate:]
  -[WBSUserMediaCapturePolicyEntry setPermissionGrantDate:]
  -[WBSUserMediaCapturePolicyEntry setTopLevelOrigin:]


WBSSiteMetadataManager : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataProviderDelegate>
 @property  NSURL *injectedBundleURL
 @property  BOOL suspended
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSSiteMetadataManager init]
  -[WBSSiteMetadataManager .cxx_destruct]
  -[WBSSiteMetadataManager setSuspended:]
  -[WBSSiteMetadataManager isSuspended]
  -[WBSSiteMetadataManager initWithInjectedBundleURL:]
  -[WBSSiteMetadataManager _processPool]
  -[WBSSiteMetadataManager injectedBundleURL]
  -[WBSSiteMetadataManager cancelRequestsWithTokens:]
  -[WBSSiteMetadataManager registerRequest:priority:responseHandler:]
  -[WBSSiteMetadataManager registerSiteMetadataProvider:]
  -[WBSSiteMetadataManager preloadRequests:withPriority:responseHandler:]
  -[WBSSiteMetadataManager cancelRequestWithToken:]
  -[WBSSiteMetadataManager preloadRequest:withPriority:responseHandler:]
  -[WBSSiteMetadataManager siteMetadataProvider:didReceiveResponse:ofType:didReceiveNewData:forRequest:]
  -[WBSSiteMetadataManager cancelRequestsWithTokens:completionHandler:]
  -[WBSSiteMetadataManager registerOneTimeRequest:priority:responseHandler:]
  -[WBSSiteMetadataManager siteMetadataProvider:cancelRequestsWithTokens:]
  -[WBSSiteMetadataManager siteMetadataProvider:registerRequest:priority:responseHandler:]
  -[WBSSiteMetadataManager _numberOfConcurrentRequests]
  -[WBSSiteMetadataManager _providerForRequest:]
  -[WBSSiteMetadataManager _registerToken:withProvider:]
  -[WBSSiteMetadataManager _requestIsCancelledForToken:]
  -[WBSSiteMetadataManager _internalCancelRequestWithToken:]
  -[WBSSiteMetadataManager _reprioritizeOperationForRequest:]
  -[WBSSiteMetadataManager _internalSetPriority:ofRequestWithToken:]
  -[WBSSiteMetadataManager emptyProviderCachesIncludingFavicons:]
  -[WBSSiteMetadataManager _highestRequestPriorityForRequest:]
  -[WBSSiteMetadataManager _updateOperationForRequestIfPossible:]
  -[WBSSiteMetadataManager _sendResponse:toResponseHandlersForRequest:didReceiveNewData:]
  -[WBSSiteMetadataManager _scheduleDelayedResponse:forRequestToken:]
  -[WBSSiteMetadataManager _setUpOperationForRequest:withSiteMetadataProvider:usingOperationBlock:]
  -[WBSSiteMetadataManager _sendRequiresDownloadResponse:toResponseHandlersForRequest:]
  -[WBSSiteMetadataManager _popReusableWebView]
  -[WBSSiteMetadataManager _discardWebViewSoon:]
  -[WBSSiteMetadataManager siteMetadataProvider:didReceiveResponse:forRequest:beginOperationUsingBlock:]
  -[WBSSiteMetadataManager siteMetadataProvider:registerOneTimeRequest:priority:responseHandler:]
  -[WBSSiteMetadataManager siteMetadataProvider:getWebViewOfSize:withConfiguration:completionHandler:]
  -[WBSSiteMetadataManager siteMetadataProvider:didFinishUsingWebView:]
  -[WBSSiteMetadataManager setPriority:ofRequestWithToken:]
  -[WBSSiteMetadataManager setPriority:ofRequestsWithTokens:]
  -[WBSSiteMetadataManager emptyProviderCaches]
  -[WBSSiteMetadataManager savePendingProviderChangesBeforeTermination]
  -[WBSSiteMetadataManager _makeWebViewOfSize:withConfiguration:]


_WBSSiteMetadataToken : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL isOneTimeRequest
 @property  WBSSiteMetadataRequest *request
 @property  long long priority
 @property  @? responseHandler
 @property  NSTimer *delayTimer
 @property  BOOL didReceiveResponse

  // instance methods
  -[_WBSSiteMetadataToken dealloc]
  -[_WBSSiteMetadataToken .cxx_destruct]
  -[_WBSSiteMetadataToken priority]
  -[_WBSSiteMetadataToken setPriority:]
  -[_WBSSiteMetadataToken request]
  -[_WBSSiteMetadataToken responseHandler]
  -[_WBSSiteMetadataToken delayTimer]
  -[_WBSSiteMetadataToken setDelayTimer:]
  -[_WBSSiteMetadataToken initWithRequest:priority:responseHandler:]
  -[_WBSSiteMetadataToken initWithOneTimeRequest:priority:responseHandler:]
  -[_WBSSiteMetadataToken isOneTimeRequest]
  -[_WBSSiteMetadataToken didReceiveResponse]
  -[_WBSSiteMetadataToken setDidReceiveResponse:]
  -[_WBSSiteMetadataToken dispatchResponse:]


_WBSSiteMetadataRequestInfo : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSSiteMetadataProvider> *provider
 @property  NSMutableSet *tokens
 @property  NSOperation *operation

  // instance methods
  -[_WBSSiteMetadataRequestInfo dealloc]
  -[_WBSSiteMetadataRequestInfo .cxx_destruct]
  -[_WBSSiteMetadataRequestInfo operation]
  -[_WBSSiteMetadataRequestInfo setOperation:]
  -[_WBSSiteMetadataRequestInfo provider]
  -[_WBSSiteMetadataRequestInfo tokens]
  -[_WBSSiteMetadataRequestInfo initWithProvider:]


WBSForYouTopicManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSForYouTopicManager .cxx_destruct]
  -[WBSForYouTopicManager initWithHistory:contextClient:]
  -[WBSForYouTopicManager contextKitTopicsWithCompletionHandler:]
  -[WBSForYouTopicManager portraitNamedEntitiesWithCompletionHandler:]
  -[WBSForYouTopicManager _createInternalQueueIfNecessary]


WBSSiteMetadataRequest : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSURL *url
 @property  NSDictionary *extraInfo

  // instance methods
  -[WBSSiteMetadataRequest init]
  -[WBSSiteMetadataRequest isEqual:]
  -[WBSSiteMetadataRequest copyWithZone:]
  -[WBSSiteMetadataRequest .cxx_destruct]
  -[WBSSiteMetadataRequest url]
  -[WBSSiteMetadataRequest extraInfo]
  -[WBSSiteMetadataRequest initWithURL:extraInfo:]


WBSSiteMetadataResponse : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *url

  // class methods
  +[WBSSiteMetadataResponse responseWithURL:]

  // instance methods
  -[WBSSiteMetadataResponse init]
  -[WBSSiteMetadataResponse initWithURL:]
  -[WBSSiteMetadataResponse .cxx_destruct]
  -[WBSSiteMetadataResponse url]


WBSSVGImageRenderingFetchOperation : WBSWebViewMetadataFetchOperation <WBSSVGImageRenderingObserver>
 @property  WBSSVGImageRenderingRequest *request
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSSVGImageRenderingFetchOperation .cxx_destruct]
  -[WBSSVGImageRenderingFetchOperation completionHandler]
  -[WBSSVGImageRenderingFetchOperation initWithRequest:]
  -[WBSSVGImageRenderingFetchOperation webViewConfiguration]
  -[WBSSVGImageRenderingFetchOperation didCreateWebView]
  -[WBSSVGImageRenderingFetchOperation initWithRequest:completionHandler:]
  -[WBSSVGImageRenderingFetchOperation _htmlStringWithImageElementString:]
  -[WBSSVGImageRenderingFetchOperation didRenderImage:]
  -[WBSSVGImageRenderingFetchOperation _htmlStringWithSVGContent:]
  -[WBSSVGImageRenderingFetchOperation _loadingTimerDidTimeout:]
  -[WBSSVGImageRenderingFetchOperation _htmlStringWithURL:]
  -[WBSSVGImageRenderingFetchOperation _loadSVGFileURL:]
  -[WBSSVGImageRenderingFetchOperation _renderNextImage]
  -[WBSSVGImageRenderingFetchOperation _didCompleteWithImage:]
  -[WBSSVGImageRenderingFetchOperation willClearWebView]
  -[WBSSVGImageRenderingFetchOperation didFailFetch]
  -[WBSSVGImageRenderingFetchOperation webViewSize]
  -[WBSSVGImageRenderingFetchOperation startOffscreenFetching]


WBSSVGImageRenderingProvider : NSObject /usr/lib/libc++.1.dylib <WBSWebViewMetadataFetchOperationDelegate, WBSSiteMetadataProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons

  // instance methods
  -[WBSSVGImageRenderingProvider .cxx_destruct]
  -[WBSSVGImageRenderingProvider canHandleRequest:]
  -[WBSSVGImageRenderingProvider responseForRequest:willProvideUpdates:]
  -[WBSSVGImageRenderingProvider prepareResponseForRequest:allowDelayedResponse:]
  -[WBSSVGImageRenderingProvider providerDelegate]
  -[WBSSVGImageRenderingProvider setProviderDelegate:]
  -[WBSSVGImageRenderingProvider _requestIsValid:]
  -[WBSSVGImageRenderingProvider webViewMetadataFetchOperation:getWebViewOfSize:withConfiguration:completionHandler:]
  -[WBSSVGImageRenderingProvider webViewMetadataFetchOperation:didFinishUsingWebView:]


WBSSVGImageRenderingRequest : WBSSiteMetadataRequest
 @property  {CGSize=dd} imageSize
 @property  NSArray *urls
 @property  NSString *svgContent

  // instance methods
  -[WBSSVGImageRenderingRequest imageSize]
  -[WBSSVGImageRenderingRequest urls]
  -[WBSSVGImageRenderingRequest initWithURL:extraInfo:]
  -[WBSSVGImageRenderingRequest svgContent]
  -[WBSSVGImageRenderingRequest _imageSizeValueWithSize:]
  -[WBSSVGImageRenderingRequest initWithURL:imageSize:]
  -[WBSSVGImageRenderingRequest initWithURLs:imageSize:]
  -[WBSSVGImageRenderingRequest initWithSVGContent:imageSize:]


WBSSVGImageRenderingResponse : WBSSiteMetadataResponse
 @property  UIImage *image

  // instance methods
  -[WBSSVGImageRenderingResponse initWithURL:]
  -[WBSSVGImageRenderingResponse .cxx_destruct]
  -[WBSSVGImageRenderingResponse image]
  -[WBSSVGImageRenderingResponse initWithURL:image:]


WBSSVGImageRenderingWebProcessPlugInPageController : WBSWebProcessPlugInPageController
  // instance methods
  -[WBSSVGImageRenderingWebProcessPlugInPageController .cxx_destruct]
  -[WBSSVGImageRenderingWebProcessPlugInPageController webProcessPlugInBrowserContextController:didFinishLoadForFrame:]
  -[WBSSVGImageRenderingWebProcessPlugInPageController svgImageRenderingObserver]


WBSTabDialogInformation : NSObject /usr/lib/libc++.1.dylib
 @property  {?=iQ} slot
 @property  NSArray *cancellationExemptions
 @property  BOOL blockingWebProcess
 @property  BOOL dismissed
 @property  BOOL presented

  // instance methods
  -[WBSTabDialogInformation .cxx_destruct]
  -[WBSTabDialogInformation slot]
  -[WBSTabDialogInformation setSlot:]
  -[WBSTabDialogInformation setCancellationExemptions:]
  -[WBSTabDialogInformation isPresented]
  -[WBSTabDialogInformation isExemptFromCancellationInContext:]
  -[WBSTabDialogInformation initWithPresentationBlock:dismissalBlock:blocksWebProcessUntilDismissed:]
  -[WBSTabDialogInformation cancellationExemptions]
  -[WBSTabDialogInformation presentIfNeeded]
  -[WBSTabDialogInformation dismissWithResponse:]
  -[WBSTabDialogInformation isBlockingWebProcess]
  -[WBSTabDialogInformation isDismissed]


WBSTabDialogManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSTabDialogManager init]
  -[WBSTabDialogManager .cxx_destruct]
  -[WBSTabDialogManager presentNextDialogForSlot:]
  -[WBSTabDialogManager enqueueOrPresentDialog:inSlot:]
  -[WBSTabDialogManager cancelAllDialogsForTabID:context:]
  -[WBSTabDialogManager cancelAllDialogsBlockingSlot:]
  -[WBSTabDialogManager cancelAllDialogsWithContext:]
  -[WBSTabDialogManager cancelAllDialogsForTabID:]
  -[WBSTabDialogManager dismissCurrentDialogForTabID:withResponse:]
  -[WBSTabDialogManager _enqueueDialog:]
  -[WBSTabDialogManager _queueForTabID:createIfNeeded:]
  -[WBSTabDialogManager _dismissDialog:withResponse:]
  -[WBSTabDialogManager _dialogBlockingSlot:]
  -[WBSTabDialogManager _dialogBlockingWebProcessID:]
  -[WBSTabDialogManager cancelAllDialogsForTabID:reason:]
  -[WBSTabDialogManager _cancelDialogsInQueue:tabID:context:]
  -[WBSTabDialogManager _setForWebProcessID:createIfNeeded:]
  -[WBSTabDialogManager enqueueOrPresentDialogInSlot:presentationBlock:dismissalBlock:blocksWebProcessUntilDismissed:]
  -[WBSTabDialogManager cancelAllDialogsBlockingWebProcessID:]


WBSTemplateIconCache : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataImageCacheDelegate, WBSSiteMetadataProvider>
 @property  NSURL *imageDirectoryURL
 @property  {CGSize=dd} defaultIconSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons

  // instance methods
  -[WBSTemplateIconCache init]
  -[WBSTemplateIconCache dealloc]
  -[WBSTemplateIconCache .cxx_destruct]
  -[WBSTemplateIconCache canHandleRequest:]
  -[WBSTemplateIconCache _registerRequest:]
  -[WBSTemplateIconCache stopWatchingUpdatesForRequest:]
  -[WBSTemplateIconCache savePendingChangesBeforeTermination]
  -[WBSTemplateIconCache responseForRequest:willProvideUpdates:]
  -[WBSTemplateIconCache prepareResponseForRequest:allowDelayedResponse:]
  -[WBSTemplateIconCache providerDelegate]
  -[WBSTemplateIconCache setProviderDelegate:]
  -[WBSTemplateIconCache emptyCaches]
  -[WBSTemplateIconCache purgeUnneededCacheEntries]
  -[WBSTemplateIconCache initWithImageDirectoryURL:]
  -[WBSTemplateIconCache imageDirectoryURL]
  -[WBSTemplateIconCache siteMetadataImageCacheDidFinishLoadingSettings:]
  -[WBSTemplateIconCache siteMetadataImageCache:didFinishLoadingImage:forKeyString:]
  -[WBSTemplateIconCache siteMetadataImageCache:didRemoveImageFromCacheForKeyString:]
  -[WBSTemplateIconCache siteMetadataImageCacheDidEmptyCache:]
  -[WBSTemplateIconCache _didAddHistoryItems:]
  -[WBSTemplateIconCache _didRemoveHistoryItems:]
  -[WBSTemplateIconCache _didLoadHistory:]
  -[WBSTemplateIconCache _monogramForRequest:themeColor:]
  -[WBSTemplateIconCache _requestTemplateIconForRequest:]
  -[WBSTemplateIconCache hasDeterminedIconAvailabilityForURL:]
  -[WBSTemplateIconCache _setUpAndReturnDelayedResponseForRequest:]
  -[WBSTemplateIconCache _setUpAndReturnPreparedResponseForRequest:]
  -[WBSTemplateIconCache _generateResponseForRequest:completionHandler:]
  -[WBSTemplateIconCache _templateIconForURL:getThemeColor:]
  -[WBSTemplateIconCache _notifyImageWasLoaded:forHost:]
  -[WBSTemplateIconCache _imageForRequest:getThemeColor:]
  -[WBSTemplateIconCache _saveTemplateIcon:withThemeColor:forHost:toDisk:]
  -[WBSTemplateIconCache _updateTemplateIconsDataForHost:image:themeColor:isSavedToDisk:]
  -[WBSTemplateIconCache _shouldRequestTemplateIconForURL:allowRefresh:]
  -[WBSTemplateIconCache _templateIconRetainerIsReadyForCleanUp]
  -[WBSTemplateIconCache retainTemplateIconsForHosts:]
  -[WBSTemplateIconCache releaseTemplateIconsForHosts:]
  -[WBSTemplateIconCache _purgeUnneededTemplateIconsIfReady]
  -[WBSTemplateIconCache _removeTemplateIconsDataForHost:]
  -[WBSTemplateIconCache _notifyDidLoadIconForHost:]
  -[WBSTemplateIconCache _upgradeCacheVersionIfNeeded]
  -[WBSTemplateIconCache _isLocalIconRequest:]
  -[WBSTemplateIconCache templateIconForURL:getThemeColor:]
  -[WBSTemplateIconCache addTemplateIconAtURL:withThemeColor:forHost:toDisk:]
  -[WBSTemplateIconCache retainTemplateIconForURLString:]
  -[WBSTemplateIconCache retainTemplateIconForHost:]
  -[WBSTemplateIconCache releaseTemplateIconForURLString:]
  -[WBSTemplateIconCache releaseTemplateIconForHost:]
  -[WBSTemplateIconCache shouldRequestTemplateIconForURL:allowRefresh:]
  -[WBSTemplateIconCache defaultIconSize]
  -[WBSTemplateIconCache setDefaultIconSize:]


WBSTemplateIconMonogramGenerator : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSTemplateIconMonogramGenerator monogramStringForURL:]
  +[WBSTemplateIconMonogramGenerator monogramWithTitle:url:backgroundColor:]
  +[WBSTemplateIconMonogramGenerator monogramStringForTitle:url:]
  +[WBSTemplateIconMonogramGenerator monogramWithTitle:url:monogramConfiguration:]
  +[WBSTemplateIconMonogramGenerator _monogramStringForPreparedTitle:url:]
  +[WBSTemplateIconMonogramGenerator monogramWithTitle:url:size:fontSize:fontWeight:baselineOffset:backgroundColor:cornerRadius:]


WBSTemplateIconMonogramConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL skipMonogramGeneration
 @property  {CGSize=dd} iconSize
 @property  double fontSize
 @property  long long fontWeight
 @property  double baselineOffset
 @property  UIColor *backgroundColor
 @property  double cornerRadius

  // class methods
  +[WBSTemplateIconMonogramConfiguration configurationWithIconSize:fontSize:fontWeight:baselineOffset:backgroundColor:cornerRadius:]
  +[WBSTemplateIconMonogramConfiguration configurationWithBackgroundColor:]

  // instance methods
  -[WBSTemplateIconMonogramConfiguration .cxx_destruct]
  -[WBSTemplateIconMonogramConfiguration fontSize]
  -[WBSTemplateIconMonogramConfiguration setFontSize:]
  -[WBSTemplateIconMonogramConfiguration baselineOffset]
  -[WBSTemplateIconMonogramConfiguration setBaselineOffset:]
  -[WBSTemplateIconMonogramConfiguration backgroundColor]
  -[WBSTemplateIconMonogramConfiguration setBackgroundColor:]
  -[WBSTemplateIconMonogramConfiguration setCornerRadius:]
  -[WBSTemplateIconMonogramConfiguration cornerRadius]
  -[WBSTemplateIconMonogramConfiguration setFontWeight:]
  -[WBSTemplateIconMonogramConfiguration fontWeight]
  -[WBSTemplateIconMonogramConfiguration iconSize]
  -[WBSTemplateIconMonogramConfiguration setIconSize:]
  -[WBSTemplateIconMonogramConfiguration skipMonogramGeneration]
  -[WBSTemplateIconMonogramConfiguration setSkipMonogramGeneration:]


WBSTemplateIconRequest : WBSSiteMetadataRequest
 @property  NSString *monogramTitle
 @property  WBSTemplateIconMonogramConfiguration *monogramConfiguration
 @property  UIColor *overrideForegroundColor
 @property  BOOL saveToDisk

  // instance methods
  -[WBSTemplateIconRequest saveToDisk]
  -[WBSTemplateIconRequest initWithURL:extraInfo:]
  -[WBSTemplateIconRequest overrideForegroundColor]
  -[WBSTemplateIconRequest monogramConfiguration]
  -[WBSTemplateIconRequest monogramTitle]
  -[WBSTemplateIconRequest initWithURL:title:monogramConfiguration:overrideForegroundColor:saveToDisk:]


WBSTemplateIconResponse : WBSSiteMetadataResponse
 @property  UIImage *image
 @property  UIImage *highlightedImage
 @property  UIColor *themeColor
 @property  BOOL monogram

  // class methods
  +[WBSTemplateIconResponse responseWithURL:image:highlightedImage:themeColor:isMonogram:]

  // instance methods
  -[WBSTemplateIconResponse initWithURL:]
  -[WBSTemplateIconResponse .cxx_destruct]
  -[WBSTemplateIconResponse image]
  -[WBSTemplateIconResponse highlightedImage]
  -[WBSTemplateIconResponse isMonogram]
  -[WBSTemplateIconResponse themeColor]
  -[WBSTemplateIconResponse initWithURL:image:highlightedImage:themeColor:isMonogram:]


WBSTranslationURLParser : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSTranslationURLParser parseURL:forProvider:]
  +[WBSTranslationURLParser _normalizeSourceLanguage:targetLanguage:forProvider:]
  +[WBSTranslationURLParser _parseURL:sourceLanguageKey:targetLanguageKey:urlKey:provider:]


WBSTopHitCompletionMatch : WBSBookmarkAndHistoryCompletionMatch
  // instance methods
  -[WBSTopHitCompletionMatch parsecDomainIdentifier]
  -[WBSTopHitCompletionMatch isTopHit]


WBSTouchIconCache : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataImageCacheDelegate, WBSWebViewMetadataFetchOperationDelegate, WBSSiteMetadataProvider>
 @property  NSURL *imageDirectoryURL
 @property  NSURL *cacheDirectoryURL
 @property  BOOL readOnly
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons

  // class methods
  +[WBSTouchIconCache defaultBackgroundColor]
  +[WBSTouchIconCache _generateDefaultFavoritesIcon]
  +[WBSTouchIconCache _monogramConfiguration]
  +[WBSTouchIconCache generateFavoritesIconForTitle:url:backgroundColor:]
  +[WBSTouchIconCache _generateFavoritesIconForRequest:withBackgroundColor:]
  +[WBSTouchIconCache defaultGlyphColor]

  // instance methods
  -[WBSTouchIconCache init]
  -[WBSTouchIconCache dealloc]
  -[WBSTouchIconCache .cxx_destruct]
  -[WBSTouchIconCache canHandleRequest:]
  -[WBSTouchIconCache isReadOnly]
  -[WBSTouchIconCache _operationWithRequest:completionHandler:]
  -[WBSTouchIconCache stopWatchingUpdatesForRequest:]
  -[WBSTouchIconCache savePendingChangesBeforeTermination]
  -[WBSTouchIconCache responseForRequest:willProvideUpdates:]
  -[WBSTouchIconCache prepareResponseForRequest:allowDelayedResponse:]
  -[WBSTouchIconCache providerDelegate]
  -[WBSTouchIconCache setProviderDelegate:]
  -[WBSTouchIconCache emptyCaches]
  -[WBSTouchIconCache purgeUnneededCacheEntries]
  -[WBSTouchIconCache initWithCacheDirectoryURL:isReadOnly:]
  -[WBSTouchIconCache initWithCacheDirectoryURL:isReadOnly:protectionType:allowFetchingOverCellularNetwork:fileMappingStyle:]
  -[WBSTouchIconCache cacheDirectoryURL]
  -[WBSTouchIconCache initWithCacheDirectoryURL:]
  -[WBSTouchIconCache imageDirectoryURL]
  -[WBSTouchIconCache siteMetadataImageCacheDidFinishLoadingSettings:]
  -[WBSTouchIconCache siteMetadataImageCache:didFinishLoadingImage:forKeyString:]
  -[WBSTouchIconCache siteMetadataImageCache:didRemoveImageFromCacheForKeyString:]
  -[WBSTouchIconCache siteMetadataImageCacheDidEmptyCache:]
  -[WBSTouchIconCache siteMetadataImageCache:customFileNameForKeyString:]
  -[WBSTouchIconCache webViewMetadataFetchOperation:getWebViewOfSize:withConfiguration:completionHandler:]
  -[WBSTouchIconCache webViewMetadataFetchOperation:didFinishUsingWebView:]
  -[WBSTouchIconCache hasDeterminedIconAvailabilityForURL:]
  -[WBSTouchIconCache _setUpAndReturnDelayedResponseForRequest:]
  -[WBSTouchIconCache _notifyImageWasLoaded:forHost:]
  -[WBSTouchIconCache _setUpImageCacheSettingsSQLiteStore]
  -[WBSTouchIconCache _imageCacheSettingsDatabaseURL]
  -[WBSTouchIconCache _ensureCacheDirectory]
  -[WBSTouchIconCache _openCacheSettingsDatabaseIfNeeded]
  -[WBSTouchIconCache _touchIconForURL:getImageState:]
  -[WBSTouchIconCache _didLoadTouchIcon:withCacheSettingsEntry:]
  -[WBSTouchIconCache _resizedImage:forHost:]
  -[WBSTouchIconCache _updateTouchIconsDataForHost:image:requestDidSucceed:isUserLoadedWebpageRequest:higherPriorityIconDownloadFailedDueToNetworkError:UUIDString:]
  -[WBSTouchIconCache _saveTouchIconToDisk:forHost:requestDidSucceed:isUserLoadedWebpageRequest:higherPriorityIconDownloadFailedDueToNetworkError:]
  -[WBSTouchIconCache _shouldRequestTouchIconWithTimeoutForURL:inUserLoadedWebpage:initiatedFromBookmarkInteraction:]
  -[WBSTouchIconCache _shouldRequestTouchIconForURL:inUserLoadedWebpage:initiatedFromBookmarkInteraction:]
  -[WBSTouchIconCache _canFetchTouchIconForURL:inUserLoadedWebpage:]
  -[WBSTouchIconCache _shouldRequestTouchIconForURL:inUserLoadedWebpage:initiatedFromBookmarkInteraction:shouldCheckImageState:]
  -[WBSTouchIconCache _responseForTouchIconRequestWithNoHost:]
  -[WBSTouchIconCache _setUpAndReturnPreparedResponseForRequest:withImage:imageState:didReceiveNewData:]
  -[WBSTouchIconCache _didGenerateResponse:forRequest:]
  -[WBSTouchIconCache _responseForRequest:withTouchIcon:]
  -[WBSTouchIconCache _shouldRequestTouchIconForURL:inUserLoadedWebpage:initiatedFromBookmarkInteraction:knownImageState:]
  -[WBSTouchIconCache _blockOperationForRequest:knownImageState:]
  -[WBSTouchIconCache _saveTouchIconToDiskWithResult:forRequest:knownImageState:]
  -[WBSTouchIconCache _maximumScreenScale]
  -[WBSTouchIconCache _enumerateRequestsForHost:usingBlock:]
  -[WBSTouchIconCache _willSaveTouchIcon:withCacheSettingsEntry:]
  -[WBSTouchIconCache _removeTouchIconsDataForHost:]
  -[WBSTouchIconCache _shouldGenerateTouchIconFromTouchIcon:forRequest:]
  -[WBSTouchIconCache uuidStringToHost]
  -[WBSTouchIconCache cacheFirstAvailableTouchIcon:forURL:]
  -[WBSTouchIconCache retainTouchIconForURLString:]
  -[WBSTouchIconCache retainTouchIconForHost:]
  -[WBSTouchIconCache retainTouchIconsForHosts:]
  -[WBSTouchIconCache releaseTouchIconForURLString:]
  -[WBSTouchIconCache releaseTouchIconForHost:]
  -[WBSTouchIconCache releaseTouchIconsForHosts:]
  -[WBSTouchIconCache shouldRequestTouchIconForWebPageNavigationFromBookmarkInteractionForURL:]
  -[WBSTouchIconCache shouldRequestTouchIconForURL:inUserLoadedWebpage:]
  -[WBSTouchIconCache removeTouchIconMetadataForHosts:completionHandler:]


WBSTouchIconCacheSettingsEntry : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataImageCacheSettingsEntry>
 @property  NSString *host
 @property  NSString *UUIDString
 @property  NSDate *lastRequestDate
 @property  BOOL lastRequestWasInUserLoadedWebpage
 @property  long long requestCount
 @property  BOOL iconInCache
 @property  BOOL requestDidSucceed
 @property  UIColor *extractedColor
 @property  long long transparencyAnalysisResult
 @property  BOOL higherPriorityIconDownloadFailedDueToNetworkError
 @property  unsigned long downloadStatusFlags
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long databaseID

  // class methods
  +[WBSTouchIconCacheSettingsEntry entryWithHost:lastRequestDate:lastRequestWasInUserLoadedWebpage:requestCount:iconInCache:requestDidSucceed:extractedColor:transparencyAnalysisResult:higherPriorityIconDownloadFailedDueToNetworkError:UUIDString:]

  // instance methods
  -[WBSTouchIconCacheSettingsEntry isEqual:]
  -[WBSTouchIconCacheSettingsEntry host]
  -[WBSTouchIconCacheSettingsEntry .cxx_destruct]
  -[WBSTouchIconCacheSettingsEntry setHost:]
  -[WBSTouchIconCacheSettingsEntry UUIDString]
  -[WBSTouchIconCacheSettingsEntry initWithHost:]
  -[WBSTouchIconCacheSettingsEntry requestCount]
  -[WBSTouchIconCacheSettingsEntry setUUIDString:]
  -[WBSTouchIconCacheSettingsEntry databaseID]
  -[WBSTouchIconCacheSettingsEntry setDatabaseID:]
  -[WBSTouchIconCacheSettingsEntry setRequestCount:]
  -[WBSTouchIconCacheSettingsEntry initWithSQLiteRow:]
  -[WBSTouchIconCacheSettingsEntry isIconInCache]
  -[WBSTouchIconCacheSettingsEntry requestDidSucceed]
  -[WBSTouchIconCacheSettingsEntry higherPriorityIconDownloadFailedDueToNetworkError]
  -[WBSTouchIconCacheSettingsEntry lastRequestDate]
  -[WBSTouchIconCacheSettingsEntry lastRequestWasInUserLoadedWebpage]
  -[WBSTouchIconCacheSettingsEntry setLastRequestDate:]
  -[WBSTouchIconCacheSettingsEntry setLastRequestWasInUserLoadedWebpage:]
  -[WBSTouchIconCacheSettingsEntry setIconInCache:]
  -[WBSTouchIconCacheSettingsEntry setRequestDidSucceed:]
  -[WBSTouchIconCacheSettingsEntry setHigherPriorityIconDownloadFailedDueToNetworkError:]
  -[WBSTouchIconCacheSettingsEntry initWithHost:lastRequestDate:lastRequestWasInUserLoadedWebpage:requestCount:iconInCache:requestDidSucceed:extractedColor:transparencyAnalysisResult:higherPriorityIconDownloadFailedDueToNetworkError:UUIDString:]
  -[WBSTouchIconCacheSettingsEntry extractedColor]
  -[WBSTouchIconCacheSettingsEntry downloadStatusFlags]
  -[WBSTouchIconCacheSettingsEntry transparencyAnalysisResult]
  -[WBSTouchIconCacheSettingsEntry setExtractedColor:]
  -[WBSTouchIconCacheSettingsEntry setTransparencyAnalysisResult:]


WBSTouchIconCacheSettingsSQLiteStore : WBSSiteMetadataImageCacheSettingsSQLiteStore
  // class methods
  +[WBSTouchIconCacheSettingsSQLiteStore databaseSchemaVersion]
  +[WBSTouchIconCacheSettingsSQLiteStore cacheSettingsEntryClass]

  // instance methods
  -[WBSTouchIconCacheSettingsSQLiteStore _statementsForMigrationToSchemaVersion:]
  -[WBSTouchIconCacheSettingsSQLiteStore _createNewDatabaseSQLiteStatement]
  -[WBSTouchIconCacheSettingsSQLiteStore _selectEntrySQLiteStatementWithHost:]
  -[WBSTouchIconCacheSettingsSQLiteStore _selectAllEntriesSQLiteStatement]
  -[WBSTouchIconCacheSettingsSQLiteStore _insertEntrySQLiteStatementWithEntry:]
  -[WBSTouchIconCacheSettingsSQLiteStore _updateEntrySQLiteStatementWithEntry:]
  -[WBSTouchIconCacheSettingsSQLiteStore _deleteEntrySQLiteStatementWithHost:]
  -[WBSTouchIconCacheSettingsSQLiteStore _deleteAllEntriesSQLiteStatement]


WBSPasswordPatternMatch : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long type
 @property  NSString *matchedSubstring
 @property  {_NSRange=QQ} range
 @property  unsigned long endIndex
 @property  double guessesRequired
 @property  NSDictionary *userInfo

  // instance methods
  -[WBSPasswordPatternMatch isEqual:]
  -[WBSPasswordPatternMatch type]
  -[WBSPasswordPatternMatch userInfo]
  -[WBSPasswordPatternMatch .cxx_destruct]
  -[WBSPasswordPatternMatch range]
  -[WBSPasswordPatternMatch endIndex]
  -[WBSPasswordPatternMatch guessesRequired]
  -[WBSPasswordPatternMatch initExhaustiveSearchPatternWithMatchedSubstring:range:]
  -[WBSPasswordPatternMatch matchedSubstring]
  -[WBSPasswordPatternMatch compactDescriptionWithMatchedStringColumnWidth:]
  -[WBSPasswordPatternMatch initWithType:matchedSubstring:range:guessesRequired:userInfo:]


WBSTouchIconFetchOperation : WBSWebViewMetadataFetchOperation <WBSTouchIconObserver>
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSTouchIconFetchOperation isEqual:]
  -[WBSTouchIconFetchOperation .cxx_destruct]
  -[WBSTouchIconFetchOperation completionHandler]
  -[WBSTouchIconFetchOperation initWithRequest:]
  -[WBSTouchIconFetchOperation webView:decidePolicyForNavigationAction:decisionHandler:]
  -[WBSTouchIconFetchOperation resetState]
  -[WBSTouchIconFetchOperation initWithRequest:allowFetchingOverCellularNetwork:completionHandler:]
  -[WBSTouchIconFetchOperation webViewConfiguration]
  -[WBSTouchIconFetchOperation didCreateWebView]
  -[WBSTouchIconFetchOperation didFetchTouchIconURLs:andFaviconURLs:forURL:]
  -[WBSTouchIconFetchOperation initWithRequest:completionHandler:]
  -[WBSTouchIconFetchOperation clearWebView]
  -[WBSTouchIconFetchOperation willClearWebView]
  -[WBSTouchIconFetchOperation didFailFetch]
  -[WBSTouchIconFetchOperation startOffscreenFetching]
  -[WBSTouchIconFetchOperation _scheduleTimeoutWithTimeInterval:]
  -[WBSTouchIconFetchOperation loadRequest]
  -[WBSTouchIconFetchOperation didCompleteWithResult:]
  -[WBSTouchIconFetchOperation _downloadFirstValidImageWithURLs:failureHandler:]
  -[WBSTouchIconFetchOperation _setUpRemoteObjectProxies]
  -[WBSTouchIconFetchOperation _tearDownRemoteObjectProxies]
  -[WBSTouchIconFetchOperation _downloadPendingTouchIconURLs]


WBSTouchIconFetchOperationResult : NSObject /usr/lib/libc++.1.dylib
 @property  UIImage *touchIcon
 @property  NSString *host
 @property  BOOL favicon
 @property  BOOL pageRequestDidSucceed
 @property  BOOL higherPriorityIconDownloadFailedDueToNetworkError

  // class methods
  +[WBSTouchIconFetchOperationResult resultForFetchFailureWithHost:pageRequestDidSucceed:]
  +[WBSTouchIconFetchOperationResult resultWithTouchIcon:host:isFavicon:pageRequestDidSucceed:higherPriorityIconDownloadFailedDueToNetworkError:]

  // instance methods
  -[WBSTouchIconFetchOperationResult host]
  -[WBSTouchIconFetchOperationResult .cxx_destruct]
  -[WBSTouchIconFetchOperationResult touchIcon]
  -[WBSTouchIconFetchOperationResult higherPriorityIconDownloadFailedDueToNetworkError]
  -[WBSTouchIconFetchOperationResult pageRequestDidSucceed]
  -[WBSTouchIconFetchOperationResult initWithTouchIcon:host:isFavicon:pageRequestDidSucceed:higherPriorityIconDownloadFailedDueToNetworkError:]
  -[WBSTouchIconFetchOperationResult isFavicon]


WBSTouchIconRequest : WBSSiteMetadataRequest <WBSIconRequest>
 @property  BOOL iconGenerationEnabled
 @property  BOOL iconDownloadingEnabled
 @property  {CGSize=dd} minimumIconSize
 @property  {CGSize=dd} maximumIconSize
 @property  NSString *monogramTitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {CGSize=dd} sizeForDrawing
 @property  NSString *uniqueIdentifier

  // class methods
  +[WBSTouchIconRequest requestWithTitle:url:minimumIconSize:maximumIconSize:iconGenerationEnabled:iconDownloadingEnabled:]
  +[WBSTouchIconRequest requestWithTitle:url:minimumIconSize:maximumIconSize:iconGenerationEnabled:]
  +[WBSTouchIconRequest requestWithTitle:url:minimumIconSize:maximumIconSize:]

  // instance methods
  -[WBSTouchIconRequest isEqual:]
  -[WBSTouchIconRequest .cxx_destruct]
  -[WBSTouchIconRequest uniqueIdentifier]
  -[WBSTouchIconRequest initWithTitle:url:minimumIconSize:maximumIconSize:iconGenerationEnabled:]
  -[WBSTouchIconRequest maximumIconSize]
  -[WBSTouchIconRequest sizeForDrawing]
  -[WBSTouchIconRequest monogramTitle]
  -[WBSTouchIconRequest isIconGenerationEnabled]
  -[WBSTouchIconRequest isIconDownloadingEnabled]
  -[WBSTouchIconRequest minimumIconSize]
  -[WBSTouchIconRequest initWithTitle:url:minimumIconSize:maximumIconSize:]
  -[WBSTouchIconRequest initWithTitle:url:minimumIconSize:maximumIconSize:iconGenerationEnabled:iconDownloadingEnabled:]


WBSTouchIconResponse : WBSSiteMetadataResponse <WBSIconResponse>
 @property  UIImage *touchIcon
 @property  UIColor *extractedBackgroundColor
 @property  BOOL generated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIImage *icon

  // class methods
  +[WBSTouchIconResponse responseWithURL:touchIcon:generated:extractedBackgroundColor:]

  // instance methods
  -[WBSTouchIconResponse initWithURL:]
  -[WBSTouchIconResponse .cxx_destruct]
  -[WBSTouchIconResponse icon]
  -[WBSTouchIconResponse isGenerated]
  -[WBSTouchIconResponse touchIcon]
  -[WBSTouchIconResponse extractedBackgroundColor]
  -[WBSTouchIconResponse initWithURL:touchIcon:generated:extractedBackgroundColor:]


WBSURLSpoofingMitigator : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL UIShouldReflectCommittedURLInsteadOfCurrentURL
 @property  long long navigationSource

  // class methods
  +[WBSURLSpoofingMitigator automaticallyNotifiesObserversOfUIShouldReflectCommittedURLInsteadOfCurrentURL]

  // instance methods
  -[WBSURLSpoofingMitigator .cxx_destruct]
  -[WBSURLSpoofingMitigator UIShouldReflectCommittedURLInsteadOfCurrentURL]
  -[WBSURLSpoofingMitigator didStartProvisionalNavigationWithUserInitiatedAction:]
  -[WBSURLSpoofingMitigator didCommitNavigation]
  -[WBSURLSpoofingMitigator setNavigationSource:]
  -[WBSURLSpoofingMitigator didFailProvisionalNavigationWithError:]
  -[WBSURLSpoofingMitigator _setUIShouldReflectCommittedURLInsteadOfCurrentURL:]
  -[WBSURLSpoofingMitigator _determineIfPageIsTryingToSpoofAddressFieldWhenInterruptingProvisionalNavigation]
  -[WBSURLSpoofingMitigator _stopTrackingInterruptedProvisionalNavigations]
  -[WBSURLSpoofingMitigator navigationSource]


WBSTouchIconWebProcessPlugInPageController : WBSWebProcessPlugInPageController
 @property  <WBSTouchIconObserver> *touchIconObserver

  // instance methods
  -[WBSTouchIconWebProcessPlugInPageController .cxx_destruct]
  -[WBSTouchIconWebProcessPlugInPageController webProcessPlugInBrowserContextController:didFinishDocumentLoadForFrame:]
  -[WBSTouchIconWebProcessPlugInPageController webProcessPlugInBrowserContextController:didHandleOnloadEventsForFrame:]
  -[WBSTouchIconWebProcessPlugInPageController webProcessPlugInBrowserContextController:frame:willSendRequestForResource:request:redirectResponse:]
  -[WBSTouchIconWebProcessPlugInPageController webProcessPlugInBrowserContextController:frame:didInitiateLoadForResource:request:pageIsProvisionallyLoading:]
  -[WBSTouchIconWebProcessPlugInPageController _extractTouchIconURLsIncludingDefaultURLs:didExtractNonDefaultIconURLs:]
  -[WBSTouchIconWebProcessPlugInPageController _extractFaviconURLsIncludingDefaultURLs:didExtractNonDefaultIconURLs:]
  -[WBSTouchIconWebProcessPlugInPageController touchIconObserver]


WBSURLCompletionDatabase : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSURLCompletionDataSource> *dataSource

  // class methods
  +[WBSURLCompletionDatabase initializeURLCompletionOnMainThread]
  +[WBSURLCompletionDatabase _matchIsNotURLMatchAndTitleLooksLikeURLForBookmarkAndHistoryCompletionMatch:]

  // instance methods
  -[WBSURLCompletionDatabase init]
  -[WBSURLCompletionDatabase .cxx_destruct]
  -[WBSURLCompletionDatabase .cxx_construct]
  -[WBSURLCompletionDatabase dataSource]
  -[WBSURLCompletionDatabase setDataSource:]
  -[WBSURLCompletionDatabase _getSortedPrefixMatchesForTypedString:topHits:historyMatches:historyLimit:bookmarkMatches:bookmarkLimit:]
  -[WBSURLCompletionDatabase _getSortedFullTextMatchesForTypedString:topHits:historyMatches:historyLimit:bookmarkMatches:bookmarkLimit:]
  -[WBSURLCompletionDatabase clearBookmarkMatchesCachesKeepingEmptyValues:]
  -[WBSURLCompletionDatabase clearBookmarkMatchesCaches]
  -[WBSURLCompletionDatabase clearHistoryMatchesCache]
  -[WBSURLCompletionDatabase _getSortedMatchesForTypedString:topHits:historyMatches:historyLimit:bookmarkMatches:bookmarkLimit:prefixMatchesOnly:]
  -[WBSURLCompletionDatabase _getUnsortedPrefixMatchesForTypedString:historyMatches:bookmarkMatches:]
  -[WBSURLCompletionDatabase _getUnsortedFullTextMatchesForTypedString:historyMatches:bookmarkMatches:dataTypes:]
  -[WBSURLCompletionDatabase _removeMatchesWithTitlesThatLookLikeURLsRemovedFromMatches:]
  -[WBSURLCompletionDatabase getBestMatchesForTypedString:topHits:matches:limit:forQueryID:]
  -[WBSURLCompletionDatabase clearMatchesCaches]


WBSURLCompletionHistorySnapshot : NSObject /usr/lib/libc++.1.dylib <WBSURLCompletionDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSURLCompletionHistorySnapshot init]
  -[WBSURLCompletionHistorySnapshot .cxx_destruct]
  -[WBSURLCompletionHistorySnapshot .cxx_construct]
  -[WBSURLCompletionHistorySnapshot initWithItems:]
  -[WBSURLCompletionHistorySnapshot getBestMatchesForTypedString:limit:forQueryID:completionHandler:]
  -[WBSURLCompletionHistorySnapshot fakeBookmarkMatchDataWithURLString:title:]
  -[WBSURLCompletionHistorySnapshot enumerateMatchDataForTypedStringHint:withBlock:]
  -[WBSURLCompletionHistorySnapshot _matchSnapshotForCompletionMatch:]


WBSURLCompletionMatch : NSObject /usr/lib/libc++.1.dylib <WBSCompletionListItem>
 @property  long long matchLocation
 @property  BOOL matchLocationIsInURL
 @property  BOOL topHit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion

  // class methods
  +[WBSURLCompletionMatch matchLocationForString:inURLString:]
  +[WBSURLCompletionMatch matchLocationForString:inTitle:]

  // instance methods
  -[WBSURLCompletionMatch .cxx_destruct]
  -[WBSURLCompletionMatch title]
  -[WBSURLCompletionMatch originalURLString]
  -[WBSURLCompletionMatch parsecQueryID]
  -[WBSURLCompletionMatch userVisibleURLString]
  -[WBSURLCompletionMatch initWithMatchLocation:userInput:forQueryID:]
  -[WBSURLCompletionMatch parsecDomainIdentifier]
  -[WBSURLCompletionMatch sfSearchResultValue]
  -[WBSURLCompletionMatch matchLocation]
  -[WBSURLCompletionMatch engagementDestination]
  -[WBSURLCompletionMatch isTopHit]
  -[WBSURLCompletionMatch matchLocationIsInURL]
  -[WBSURLCompletionMatch matchingStringWithUserTypedPrefix:]


WBSTabCompletionMatch : WBSURLCompletionMatch
 @property  NSURL *url
 @property  NSString *title

  // class methods
  +[WBSTabCompletionMatch _matchLocationForString:url:title:]

  // instance methods
  -[WBSTabCompletionMatch .cxx_destruct]
  -[WBSTabCompletionMatch url]
  -[WBSTabCompletionMatch title]
  -[WBSTabCompletionMatch originalURLString]
  -[WBSTabCompletionMatch userVisibleURLString]
  -[WBSTabCompletionMatch initWithUserTypedString:url:title:forQueryID:]


WBSURLCompletionMatchSnapshot : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, _SSURLCompletionMatch>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURL *url
 @property  NSString *title
 @property  NSString *userVisibleURLString
 @property  long long matchLocation
 @property  BOOL topHit
 @property  BOOL synthesizedTopHit
 @property  BOOL topHitDueToTriggerMatch
 @property  long long visitCount
 @property  NSDate *lastVisitTime

  // class methods
  +[WBSURLCompletionMatchSnapshot supportsSecureCoding]

  // instance methods
  -[WBSURLCompletionMatchSnapshot init]
  -[WBSURLCompletionMatchSnapshot encodeWithCoder:]
  -[WBSURLCompletionMatchSnapshot initWithCoder:]
  -[WBSURLCompletionMatchSnapshot .cxx_destruct]
  -[WBSURLCompletionMatchSnapshot url]
  -[WBSURLCompletionMatchSnapshot title]
  -[WBSURLCompletionMatchSnapshot visitCount]
  -[WBSURLCompletionMatchSnapshot userVisibleURLString]
  -[WBSURLCompletionMatchSnapshot matchLocation]
  -[WBSURLCompletionMatchSnapshot lastVisitTime]
  -[WBSURLCompletionMatchSnapshot isTopHit]
  -[WBSURLCompletionMatchSnapshot initWithURL:title:matchLocation:isTopHit:isSynthesizedTopHit:isTopHitDueToTriggerMatch:visitCount:lastVisitTime:]
  -[WBSURLCompletionMatchSnapshot isSynthesizedTopHit]
  -[WBSURLCompletionMatchSnapshot isTopHitDueToTriggerMatch]


WBSURLCompletionSessionProxy : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSURLCompletionSessionProxy init]
  -[WBSURLCompletionSessionProxy .cxx_destruct]
  -[WBSURLCompletionSessionProxy getBestMatchesForTypedString:limit:forQueryID:completionHandler:]
  -[WBSURLCompletionSessionProxy _completionSessionWithCompletionHandler:]
  -[WBSURLCompletionSessionProxy userDidSelectCompletionMatch:forTypedString:]


WBSURLCompletionUserTypedString : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSString *normalizedString

  // class methods
  +[WBSURLCompletionUserTypedString initialize]
  +[WBSURLCompletionUserTypedString supportsSecureCoding]

  // instance methods
  -[WBSURLCompletionUserTypedString init]
  -[WBSURLCompletionUserTypedString dealloc]
  -[WBSURLCompletionUserTypedString encodeWithCoder:]
  -[WBSURLCompletionUserTypedString initWithCoder:]
  -[WBSURLCompletionUserTypedString .cxx_destruct]
  -[WBSURLCompletionUserTypedString initWithString:]
  -[WBSURLCompletionUserTypedString normalizedString]


WBSURLSuffixChecker : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSURLSuffixChecker dealloc]
  -[WBSURLSuffixChecker hasSuffix:]
  -[WBSURLSuffixChecker .cxx_destruct]
  -[WBSURLSuffixChecker insertString:intoTrieWithCache:]
  -[WBSURLSuffixChecker addStringToFailedSuffixes:]
  -[WBSURLSuffixChecker initWithSuffixes:]


WBSAppleAccountInformationProvider : NSObject /usr/lib/libc++.1.dylib <WBSAppleAccountInformationProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSAppleAccountInformationProvider appleAccountSecurityState]
  -[WBSAppleAccountInformationProvider _primaryAppleAccountSecurityLevel]
  -[WBSAppleAccountInformationProvider getAppleAccountSecurityStateWithCompletion:]


WBSUserTypedFormString : WBSFormAutoFillItem
 @property  NSString *userTypedString

  // instance methods
  -[WBSUserTypedFormString .cxx_destruct]
  -[WBSUserTypedFormString completion]
  -[WBSUserTypedFormString initWithUserTypedString:]
  -[WBSUserTypedFormString userTypedString]


WBSWebProcessPlugIn : NSObject /usr/lib/libc++.1.dylib <WKWebProcessPlugIn>
 @property  WKWebProcessPlugInController *plugInController
 @property  NSArray *searchEnginesForRedirectToSafeSearch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSWebProcessPlugIn .cxx_destruct]
  -[WBSWebProcessPlugIn parameterValueForKey:]
  -[WBSWebProcessPlugIn webProcessPlugIn:initializeWithObject:]
  -[WBSWebProcessPlugIn webProcessPlugIn:didCreateBrowserContextController:]
  -[WBSWebProcessPlugIn webProcessPlugIn:willDestroyBrowserContextController:]
  -[WBSWebProcessPlugIn searchEnginesForRedirectToSafeSearch]
  -[WBSWebProcessPlugIn didCreatePageController:forBrowserContextController:]
  -[WBSWebProcessPlugIn willDestroyPageController:forBrowserContextController:]
  -[WBSWebProcessPlugIn pageControllerWithBrowserContextController:]
  -[WBSWebProcessPlugIn plugInController]


WBSWebProcessPlugInPageController : NSObject /usr/lib/libc++.1.dylib <WKWebProcessPlugInLoadDelegate>
 @property  WKWebProcessPlugInFrame *mainFrame
 @property  WKWebProcessPlugInBrowserContextController *browserContextController
 @property  WBSWebProcessPlugIn *webProcessPlugIn
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSWebProcessPlugInPageController init]
  -[WBSWebProcessPlugInPageController .cxx_destruct]
  -[WBSWebProcessPlugInPageController mainFrame]
  -[WBSWebProcessPlugInPageController webProcessPlugIn]
  -[WBSWebProcessPlugInPageController initWithPlugIn:contextController:]
  -[WBSWebProcessPlugInPageController willDestroyBrowserContextController:]
  -[WBSWebProcessPlugInPageController browserContextController]


WBSWebViewMetadataFetchOperation : WBSSiteMetadataFetchOperation <WKNavigationDelegate>
 @property  <WBSWebViewMetadataFetchOperationDelegate> *delegate
 @property  WKWebView *webView
 @property  WKWebViewConfiguration *webViewConfiguration
 @property  {CGSize=dd} webViewSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSWebViewMetadataFetchOperation dealloc]
  -[WBSWebViewMetadataFetchOperation delegate]
  -[WBSWebViewMetadataFetchOperation setDelegate:]
  -[WBSWebViewMetadataFetchOperation .cxx_destruct]
  -[WBSWebViewMetadataFetchOperation cancel]
  -[WBSWebViewMetadataFetchOperation start]
  -[WBSWebViewMetadataFetchOperation webView]
  -[WBSWebViewMetadataFetchOperation webView:didFailProvisionalNavigation:withError:]
  -[WBSWebViewMetadataFetchOperation webView:didFailNavigation:withError:]
  -[WBSWebViewMetadataFetchOperation _webViewWebProcessDidCrash:]
  -[WBSWebViewMetadataFetchOperation webViewConfiguration]
  -[WBSWebViewMetadataFetchOperation didCreateWebView]
  -[WBSWebViewMetadataFetchOperation clearWebView]
  -[WBSWebViewMetadataFetchOperation willClearWebView]
  -[WBSWebViewMetadataFetchOperation didFailFetch]
  -[WBSWebViewMetadataFetchOperation webViewSize]
  -[WBSWebViewMetadataFetchOperation startOffscreenFetching]
  -[WBSWebViewMetadataFetchOperation _setUpWebViewAndStartOffscreenFetching]


NSNumber(WBSParsecExtras)
	// instance methods
	-[NSNumber(WBSParsecExtras) safari_percentageFromSamplingRate]

CNContact(SafariSharedExtras)
	// class methods
	+[CNContact(SafariSharedExtras) safari_defaultDescriptors]
	+[CNContact(SafariSharedExtras) safari_imageViewDescriptors]
	+[CNContact(SafariSharedExtras) safari_oneTimeCodeViewDescriptors]

	// instance methods
	-[CNContact(SafariSharedExtras) safari_fullName]
	-[CNContact(SafariSharedExtras) safari_valueForWBSABProperty:]

CNContactStore(SafariSharedExtras)
	// class methods
	+[CNContactStore(SafariSharedExtras) safari_sharedContactStore]

	// instance methods
	-[CNContactStore(SafariSharedExtras) safari_contactForHandle:error:]

UIColor(SafariSharedExtras)
	// class methods
	+[UIColor(SafariSharedExtras) safari_colorWithRGBColorComponents:]
	+[UIColor(SafariSharedExtras) safari_colorWithSerializedColorData:]

	// instance methods
	-[UIColor(SafariSharedExtras) safari_rgbColorComponents]
	-[UIColor(SafariSharedExtras) safari_colorDataForSerialization]

NSString(WBSFaviconProviderNSStringExtras)
	// class methods
	+[NSString(WBSFaviconProviderNSStringExtras) safari_localizedStringFromComponents:usingConjunctionForFinalJoiner:]
	+[NSString(WBSFaviconProviderNSStringExtras) safari_stringWithJSValue:context:nullStringPolicy:]
	+[NSString(WBSFaviconProviderNSStringExtras) safari_stringWithJSValue:context:]
	+[NSString(WBSFaviconProviderNSStringExtras) safari_stringWithUTF8Bytes:length:]
	+[NSString(WBSFaviconProviderNSStringExtras) safari_stringByBase64EncodingData:]

	// instance methods
	-[NSString(WBSFaviconProviderNSStringExtras) safari_bestURLForUserTypedString]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_containedURLs]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringByRemovingExcessWhitespace]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_bestURLStringForUserTypedString]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_normalizedParsecInputString]
	-[NSString(WBSFaviconProviderNSStringExtras) _safari_variantsOfURLStringInFaviconFormat:]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringByFormattingForFaviconDatabase]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_domainURLStringPrefixVariantsForFaviconDatabase]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringByFormattingForIconControllerDatabase]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_urlStringVariantsForFaviconDatabase]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_domainFaviconURLStringVariantsForFaviconDatabase]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_urlStringVariantsForIconControllerDatabase]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_bestLanguageTag]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_looksLikeObscuredPassword]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_md5Hash]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_canonicalURLStringForFrequentlyVisitedSites]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_userVisibleURL]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringByFoldingWideCharactersAndNormalizing]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_hasDirectionalPrefix]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_isJavaScriptURLString]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_possibleTopLevelDomainCorrectionForUserTypedString]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringByRemovingTopLevelDomainFromHost]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringByRemovingUnnecessaryCharactersFromUserTypedURLString]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_fixedStringByExpandingTildeInPathToUserHomeDirectory]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringByDeletingStartingSlash]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringByDeletingTrailingSlash]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringEncodedAsURLQueryParameter]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringByRemovingDirectionalPrefix]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringBySubstitutingAmpersandAndAngleBracketsForHTMLEntities]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringBySubstitutingHTMLEntitiesForAmpersandAndAngleBrackets]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_isPathExtensionAllowedForAnalytics]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_scriptIfJavaScriptURLString]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_enumerateSubdomainRangesInHostUsingBlock:]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_canonicalURLForFrequentlyVisitedSites]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_isVisualDuplicateOfURLString:]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_sha256Hash]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_isPDFMIMEType]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringWithFont:forWidth:lineBreakMode:]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_stringByRemovingParenthesizedDomain]
	-[NSString(WBSFaviconProviderNSStringExtras) safari_userVisibleTitleIgnoringFullURLString]

UIImage(SafariSharedExtras)
	// class methods
	+[UIImage(SafariSharedExtras) safari_imageWithSize:actions:]

	// instance methods
	-[UIImage(SafariSharedExtras) safari_transparencyAnalysisResult]
	-[UIImage(SafariSharedExtras) safari_setTransparencyAnalysisResult:]
	-[UIImage(SafariSharedExtras) safari_transparencyAnalysisResultIsNotOpaque]

NSProcessInfo(SafariSharedExtras)
	// instance methods
	-[NSProcessInfo(SafariSharedExtras) safari_systemSupportsBroadway]
	-[NSProcessInfo(SafariSharedExtras) _safari_operatingSystemVersionStringFromOperatingSystemVersion:]
	-[NSProcessInfo(SafariSharedExtras) safari_operatingSystemVersionString]

NSBundle(SafariSharedExtras)
	// class methods
	+[NSBundle(SafariSharedExtras) safari_safariSharedBundle]

	// instance methods
	-[NSBundle(SafariSharedExtras) safari_primaryLocalizationIsEnglish]

NSCharacterSet(SafariSharedExtras)
	// class methods
	+[NSCharacterSet(SafariSharedExtras) safari_asciiDigitCharacterSet]
	+[NSCharacterSet(SafariSharedExtras) safari_lockRelatedEmojiCharacterSet]
	+[NSCharacterSet(SafariSharedExtras) safari_obscuredPasswordCharacterSets]

NSDate(WBSNSDateExtras)
	// class methods
	+[NSDate(WBSNSDateExtras) safari_dateFromNTPServerWithTimeout:completionHandler:]
	+[NSDate(WBSNSDateExtras) safari_dateOfMidnightNumberOfDaysAgo:]

	// instance methods
	-[NSDate(WBSNSDateExtras) safari_stringsFromDateForLocaleIdentifiers:]
	-[NSDate(WBSNSDateExtras) safari_startOfDay]
	-[NSDate(WBSNSDateExtras) safari_isInclusivelyBetweenDate:andDate:]
	-[NSDate(WBSNSDateExtras) _safari_stringWithDashSeparatorWithDateFormatter:]
	-[NSDate(WBSNSDateExtras) safari_numberOfWeeksUntilDate:]
	-[NSDate(WBSNSDateExtras) safari_isInToday]
	-[NSDate(WBSNSDateExtras) safari_isInSameDayAsDate:]
	-[NSDate(WBSNSDateExtras) safari_isNowOrInRecentPast]
	-[NSDate(WBSNSDateExtras) safari_timeIntervalUntilNow]

NSError(SafariSharedCloudKitExtras)
	// instance methods
	-[NSError(SafariSharedCloudKitExtras) safari_errorOrAnyPartialErrorHasCloudKitErrorCode:]
	-[NSError(SafariSharedCloudKitExtras) safari_errorOrAnyPartialErrorHasCloudKitInternalErrorCode:]
	-[NSError(SafariSharedCloudKitExtras) _safari_enumerateCloudKitErrorsWithBlock:]

NSURLConnection(WBSNSURLConnectionExtras)
	// class methods
	+[NSURLConnection(WBSNSURLConnectionExtras) safari_sendAsynchronousRequest:queue:completionHandler:]

NSURL(SafariSharedExtras)
	// class methods
	+[NSURL(SafariSharedExtras) safari_URLWithDataAsString:]
	+[NSURL(SafariSharedExtras) safari_URLWithUserTypedString:]
	+[NSURL(SafariSharedExtras) safari_enumeratePossibleURLsForUserTypedString:withBlock:]
	+[NSURL(SafariSharedExtras) safari_URLWithDataAsString:relativeToURL:]

	// instance methods
	-[NSURL(SafariSharedExtras) safari_userVisibleString]
	-[NSURL(SafariSharedExtras) safari_wellKnownChangePasswordURL]
	-[NSURL(SafariSharedExtras) safari_originalDataAsString]
	-[NSURL(SafariSharedExtras) safari_URLByReplacingSchemeWithString:]
	-[NSURL(SafariSharedExtras) safari_hasScheme:]
	-[NSURL(SafariSharedExtras) safari_isDataURL]
	-[NSURL(SafariSharedExtras) safari_hasSameOriginAsURL:]
	-[NSURL(SafariSharedExtras) safari_userVisibleHostWithoutWWWSubdomain]
	-[NSURL(SafariSharedExtras) safari_isHTTPFamilyURL]
	-[NSURL(SafariSharedExtras) safari_userVisibleHost]
	-[NSURL(SafariSharedExtras) safari_userVisibleStringConsideringLongURLs]
	-[NSURL(SafariSharedExtras) safari_hasUserOrPassword]
	-[NSURL(SafariSharedExtras) safari_URLByDeletingUserAndPassword]
	-[NSURL(SafariSharedExtras) safari_isWellKnownChangePasswordURL]
	-[NSURL(SafariSharedExtras) safari_isEligibleToShowNotSecureWarning]
	-[NSURL(SafariSharedExtras) safari_isMailtoURL]
	-[NSURL(SafariSharedExtras) safari_URLByRemovingUserAndPath]
	-[NSURL(SafariSharedExtras) safari_relativePathToURL:]
	-[NSURL(SafariSharedExtras) safari_URLWithUniqueFilename]
	-[NSURL(SafariSharedExtras) safari_isURLTooLongToDisplay]
	-[NSURL(SafariSharedExtras) safari_URLByReplacingHostWithString:]
	-[NSURL(SafariSharedExtras) safari_isTopLevelURL]
	-[NSURL(SafariSharedExtras) safari_simplifiedURLStringForDeduping]
	-[NSURL(SafariSharedExtras) safari_shouldBeAssociatedWithFaviconFromRedirectedURL:]
	-[NSURL(SafariSharedExtras) safari_isHTTPURL]
	-[NSURL(SafariSharedExtras) safari_isLocalOrPrivateNetworkURL]
	-[NSURL(SafariSharedExtras) safari_canonicalURL]
	-[NSURL(SafariSharedExtras) safari_path]
	-[NSURL(SafariSharedExtras) safari_hasLocalScheme]
	-[NSURL(SafariSharedExtras) safari_isBlobURL]
	-[NSURL(SafariSharedExtras) safari_isSafariResourceURL]
	-[NSURL(SafariSharedExtras) safari_canonicalURLForStartPage]
	-[NSURL(SafariSharedExtras) safari_hasCharactersBeyondPath]
	-[NSURL(SafariSharedExtras) safari_displayNameWithTitle:]

NSURLResponse(SafariSharedExtras)
	// instance methods
	-[NSURLResponse(SafariSharedExtras) safari_hasAttachment]
	-[NSURLResponse(SafariSharedExtras) safari_statusCodeGroup]

NSURLSession(WBSNSURLSessionExtras)
	// class methods
	+[NSURLSession(WBSNSURLSessionExtras) safari_sharedSession]
	+[NSURLSession(WBSNSURLSessionExtras) safari_sharedNonCellularSession]

	// instance methods
	-[NSURLSession(WBSNSURLSessionExtras) safari_downloadImageWithURL:completionHandler:]
	-[NSURLSession(WBSNSURLSessionExtras) _safari_downloadFirstValidImageWithURLs:failedURLDownloadsToErrorsDictionary:completionHandler:]
	-[NSURLSession(WBSNSURLSessionExtras) safari_downloadFirstValidImageWithURLs:completionHandler:]
	-[NSURLSession(WBSNSURLSessionExtras) safari_downloadImageWithURL:completionHandlerIncludingErrors:]

NSArray(ParsecExtras)
	// instance methods
	-[NSArray(ParsecExtras) safari_translateToArrayOfParsecModelsOfClass:]

NSLocale(WBSNSLocaleExtras)
	// class methods
	+[NSLocale(WBSNSLocaleExtras) safari_localeIdentifiersForMostWidelyUsedLanguages]

WBSSavedPasswordStore(SafariSharedExtras)
	// instance methods
	-[WBSSavedPasswordStore(SafariSharedExtras) safari_saveUser:password:forUserTypedSite:]
	-[WBSSavedPasswordStore(SafariSharedExtras) safari_canSaveUser:password:forUserTypedSite:]

SFSearchResult(SafariSharedExtras)
	// class methods
	+[SFSearchResult(SafariSharedExtras) safari_sfSearchResultWithUniqueIdentifier]

	// instance methods
	-[SFSearchResult(SafariSharedExtras) parsecQueryID]
	-[SFSearchResult(SafariSharedExtras) parsecDomainIdentifier]
	-[SFSearchResult(SafariSharedExtras) sfSearchResultValue]
	-[SFSearchResult(SafariSharedExtras) engagementDestination]
	-[SFSearchResult(SafariSharedExtras) safari_firstInlineCardSectionOfClass:]
	-[SFSearchResult(SafariSharedExtras) _firstCardSectionOfClass:ofCard:outIndex:]
	-[SFSearchResult(SafariSharedExtras) safari_firstCardSectionOfClass:]
	-[SFSearchResult(SafariSharedExtras) safari_indexOfFirstInlineCardSectionOfClass:]
	-[SFSearchResult(SafariSharedExtras) safari_loggingDescription]

CKContextResponse(SafariSharedExtras)
	// instance methods
	-[CKContextResponse(SafariSharedExtras) safari_topQIDsWithMaximumCount:]

_WKRemoteObjectInterface(SafariSharedExtras)
	// class methods
	+[_WKRemoteObjectInterface(SafariSharedExtras) safari_javaScriptClasses]

WBSAnalyticsLogger(WBSAnalyticsLoggerExtras)
	// instance methods
	-[WBSAnalyticsLogger(WBSAnalyticsLoggerExtras) reportNumberOfFlaggedPasswordsUsingSavedPasswordAuditorIfNeeded:]

WKWebsiteDataStore(SafariSharedExtras)
	// class methods
	+[WKWebsiteDataStore(SafariSharedExtras) safari_dataStoreWithConfiguration:]
	+[WKWebsiteDataStore(SafariSharedExtras) safari_nonPersistentDataStore]
	+[WKWebsiteDataStore(SafariSharedExtras) safari_defaultDataStoreDisallowingTLSFallback]
	+[WKWebsiteDataStore(SafariSharedExtras) safari_allDataTypes]
	+[WKWebsiteDataStore(SafariSharedExtras) safari_clearHSTSSuperCookies]

01 00 2540 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1f00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 2600 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 3300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 2840 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 1400 /System/Library/PrivateFrameworks/ContextKit.framework/ContextKit: CKContextResponse 
01 00 2840 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordChangesOperation 
01 00 2840 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZonesOperation 
01 00 2840 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordZonesOperation 
01 00 2840 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 2840 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifySubscriptionsOperation 
01 00 2840 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotificationInfo 
01 00 2840 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 2840 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 2840 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 2840 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKServerChangeToken 
01 00 2840 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKSubscription 
01 00 0c00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 0c00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 0c00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0c00 /System/Library/Frameworks/Contacts.framework/Contacts: CNLabeledValue 
01 00 0c00 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 0c00 /System/Library/Frameworks/Contacts.framework/Contacts: CNPostalAddressFormatter 
01 00 1300 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSCustomAttributeKey 
01 00 1300 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchQuery 
01 00 1300 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableIndex 
01 00 1300 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableItem 
01 00 1300 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableItemAttributeSet 
01 00 1640 /System/Library/PrivateFrameworks/DeviceManagement.framework/DeviceManagement: DMFWebsitePolicyMonitor 
01 00 2c40 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOUsageManager 
01 00 2c40 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOUserSession 
01 00 2d00 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSContext 
01 00 2d00 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSValue 
01 00 1e00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPMetadataProvider 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSAppLink 
01 00 0900 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0400 /System/Library/Frameworks/MapKit.framework/MapKit: MKMapItem 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFormatter 
01 00 2700 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLinguisticTagger 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 3600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 2700 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLConnection 
01 00 2700 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCredentialStorage 
01 00 2700 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLProtectionSpace 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 2700 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 2700 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLResponse 
01 00 2700 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 2700 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUbiquitousKeyValueStore 
01 00 3900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValueTransformer 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 2b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0d00 /System/Library/PrivateFrameworks/CoreParsec.framework/CoreParsec: PAREngagedCompletionCache 
01 00 0d00 /System/Library/PrivateFrameworks/CoreParsec.framework/CoreParsec: PARRequest 
01 00 0d00 /System/Library/PrivateFrameworks/CoreParsec.framework/CoreParsec: PARSession 
01 00 0d00 /System/Library/PrivateFrameworks/CoreParsec.framework/CoreParsec: PARSessionConfiguration 
01 00 1a00 /System/Library/PrivateFrameworks/PersonalizationPortrait.framework/PersonalizationPortrait: PPNamedEntityQuery 
01 00 1a00 /System/Library/PrivateFrameworks/PersonalizationPortrait.framework/PersonalizationPortrait: PPNamedEntityStore 
01 00 1000 /System/Library/PrivateFrameworks/ParsecSubscriptionServiceSupport.framework/ParsecSubscriptionServiceSupport: PSSSSubscriptionManagerInternal 
01 00 0b00 /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/SymptomDiagnosticReporter: SDRDiagnosticReporter 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFCardSectionEngagementFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFCardViewAppearFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFCardViewDisappearFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFClearInputFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFCompactRowCardSection 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFCustomFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFDetailedRowCardSection 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFDidGoToSearchFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFDidGoToSiteFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFEndLocalSearchFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFEndNetworkSearchFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFEndSearchFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFErrorFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFImage 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFLateSectionsAppendedFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFMapsCardSectionEngagementFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFMapsDetailedRowCardSection 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFPunchout 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFRankingFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFResultEngagementFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFResultRankingFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFResultSection 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFResultsReceivedAfterTimeoutFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFRowCardSection 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFScoreboardCardSection 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSearchResult 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSearchSuggestion 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSearchViewAppearFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSearchViewDisappearFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSectionRankingFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFStartLocalSearchFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFStartNetworkSearchFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFStartSearchFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSuggestionEngagementFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFText 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFVisibleResultsFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFVisibleSuggestionsFeedback 
01 00 1b00 /System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions: SGSuggestionsService 
01 00 0600 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVSubscriptionStatusCoordinator 
01 00 1840 /System/Library/PrivateFrameworks/ScreenTimeCore.framework/ScreenTimeCore: STWebUsageController 
01 00 1d00 /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity: UABestAppSuggestionManager 
01 00 1d00 /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity: UAUserActivity 
01 00 1d00 /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity: UAUserActivityManager 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1740 /System/Library/PrivateFrameworks/UsageTracking.framework/UsageTracking: USWebpageUsage 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSAddressBookValueSpecifier 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSAnalyticsLogger 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSAutoFillQuirksManager 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSCloudKitContainerManateeObserver 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSCloudKitThrottler 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSDontSaveMarker 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSKeychainCredentialNotificationMonitor 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSMemoryFootprint 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSPair 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSPasswordGenerationManager 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSPasswordRuleParser 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSQLiteDatabase 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSQLiteStatement 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSQLiteStatementCache 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSQLiteStore 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSafariBookmarksSyncAgentProxy 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSavedPasswordStore 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSScopeExitHandler 
01 00 2300 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSURLCredentialCache 
01 00 3500 /System/Library/Frameworks/WebKit.framework/WebKit: WKBrowsingContextController 
01 00 3500 /System/Library/Frameworks/WebKit.framework/WebKit: WKProcessPool 
01 00 3500 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebProcessPlugInNodeHandle 
01 00 3500 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebProcessPlugInScriptWorld 
01 00 3500 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebView 
01 00 3500 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebViewConfiguration 
01 00 3500 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebsiteDataStore 
01 00 3500 /System/Library/Frameworks/WebKit.framework/WebKit: WebView 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: _LSOpenConfiguration 
01 00 3500 /System/Library/Frameworks/WebKit.framework/WebKit: _WKProcessPoolConfiguration 
01 00 3500 /System/Library/Frameworks/WebKit.framework/WebKit: _WKRemoteObjectInterface 
