|| __DATA.__data _boundingBoxes
|| __DATA.__data _mccIsoMap
|| __DATA.__objc_data _OBJC_CLASS_$_TBDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_TBJoinAnalyticsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_TBLocalFetchRequestDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_TBLocalFetchTileItem
|| __DATA.__objc_data _OBJC_CLASS_$_TBMutableTileFetchResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TBQualityScore
|| __DATA.__objc_data _OBJC_CLASS_$_TBRemoteFetchTileItem
|| __DATA.__objc_data _OBJC_CLASS_$_TBTileFetchRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TBTileFetchRequestDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_TBTileItemDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_TBTileRemoteFetchResponse
|| __DATA.__objc_data _OBJC_CLASS_$_WFMeasure
|| __DATA.__objc_data _OBJC_CLASS_$_WFMeasureThroughputResult
|| __DATA.__objc_data _OBJC_CLASS_$_WiFi3BarsTileFetcher
|| __DATA.__objc_data _OBJC_CLASS_$_WiFiLexicon
|| __DATA.__objc_data _OBJC_CLASS_$_WiFiWalletPass
|| __DATA.__objc_data _OBJC_METACLASS_$_TBDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_TBJoinAnalyticsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_TBLocalFetchRequestDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_TBLocalFetchTileItem
|| __DATA.__objc_data _OBJC_METACLASS_$_TBMutableTileFetchResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TBQualityScore
|| __DATA.__objc_data _OBJC_METACLASS_$_TBRemoteFetchTileItem
|| __DATA.__objc_data _OBJC_METACLASS_$_TBTileFetchRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TBTileFetchRequestDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_TBTileItemDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_TBTileRemoteFetchResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_WFBlacklistStateNode
|| __DATA.__objc_data _OBJC_METACLASS_$_WFMeasureThroughputResult
|| __DATA.__objc_data _OBJC_METACLASS_$_WiFi3BarsTileFetcher
|| __DATA.__objc_data _OBJC_METACLASS_$_WiFiLexicon
|| __DATA.__objc_data _OBJC_METACLASS_$_WiFiWalletPass
|| __DATA.__objc_ivar _OBJC_IVAR_$_WFLoggerBase._ctxt
|| __DATA.__objc_ivar _OBJC_IVAR_$_WFLoggerBase._dispatchQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_WFLoggerBase._internalInstall
|| __DATA.__objc_ivar _OBJC_IVAR_$_WiFiLocaleManager._ctServerConnectionRef
|| __DATA_CONST.__const _TBPersistenceConfigurationCache
|| __DATA_CONST.__const _TBPersistenceRemoteStoreServerServiceNameCache
|| __DATA_CONST.__const _kTBPopularityScoreDescription
|| __DATA_CONST.__const _kTBQualityScoreDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBAccessPointMO
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBAnalytics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBCacheAnalyticsEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBCoreDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBCoreDataStoreDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBDataSourceMediator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBError
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBErrorFetchResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBFetchAnalyticsEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBFetchedTile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBGloriaTile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBLocalFetchResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBLocationFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBLocationFetchRequestDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBNetworkFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBNetworkFetchRequestDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBNetworkMO
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBNetworkRemoteFetchResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBPersistenceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBPersistenceRemoteStoreServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBPersistenceRemoteStoreServerHandlingPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBPopularityScore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBPreferLocalFetchDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBPreferLocalFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBRemoteDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBRemoteFetchAndCacheDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBRemoteFetchAndCacheOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBRemoteFetchResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TBTileMO
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFBlackListNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFBlacklistEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFBlacklistStateNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFBlacklistTriggerNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFLogger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFLoggerBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFLoggerCircularBuffer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFLoggerFile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFLoggerOsLog
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WiFi3BarsNetwork
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WiFi3BarsSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WiFiAvailabilityEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WiFiAvailabilityMatch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WiFiLocaleManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WiFiLocationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WiFiWalletSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBAccessPointMO
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBAnalytics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBCacheAnalyticsEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBCoreDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBCoreDataStoreDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBDataSourceMediator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBError
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBErrorFetchResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBFetchAnalyticsEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBFetchedTile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBGloriaTile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBLocalFetchResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBLocationFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBLocationFetchRequestDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBNetworkFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBNetworkFetchRequestDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBNetworkMO
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBNetworkRemoteFetchResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBPersistenceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBPersistenceRemoteStoreServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBPersistenceRemoteStoreServerHandlingPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBPopularityScore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBPreferLocalFetchDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBPreferLocalFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBRemoteDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBRemoteFetchAndCacheDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBRemoteFetchAndCacheOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBRemoteFetchResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TBTileMO
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFBlackListNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFBlacklistEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFBlacklistTriggerNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFLogger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFLoggerBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFLoggerCircularBuffer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFLoggerFile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFLoggerOsLog
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFMeasure
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WiFi3BarsNetwork
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WiFi3BarsSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WiFiAvailabilityEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WiFiAvailabilityMatch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WiFiLocaleManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WiFiLocationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WiFiWalletSource
|| __TEXT.__const _WiFiPolicyVersionNumber
|| __TEXT.__const _WiFiPolicyVersionString
|| __TEXT.__const _kDefaultWiFiAvailabilityMatchMaximumAge
|| __TEXT.__text _MachTimeToSecs
|| __TEXT.__text _TBMacAddressFromString
|| __TEXT.__text _TBMacAdressFromLong
|| __TEXT.__text _WFLoggerTimerTmoCallBack
|| __TEXT.__text _WiFiWalletSignedDataForRawPass
|| __TEXT.__text _WiFiWalletUtilAddPass
|| __TEXT.__text _WiFiWalletUtilAddPassFromURL
|| __TEXT.__text _WiFiWalletUtilRemovePass
|| __TEXT.__text _WiFiWalletUtilRemovePassMatchingURL
|| __TEXT.__text _WiFiWalletUtilRemovePassesMatchingIdentifier
|| __TEXT.__text __WiFiWalletUtilRemovePassMatching
|| __TEXT.__text __Z32_TBGloriaBoundingBoxFromLocationddh
|| __TEXT.__text __ZN6gloria11MortonUtils10XYToQuadIdEyy
|| __TEXT.__text __ZN6gloria11MortonUtils12LeadingZerosEy
|| __TEXT.__text __ZN6gloria14TileCoordinate10FromLatLngERKdS2_RKh
|| __TEXT.__text __ZN6gloria15TileBoundingBox5ToWKTEv
|| __TEXT.__text __ZN6gloria6TileId10FromLatLngERKdS2_RKh
|| __TEXT.__text __ZN6gloria6TileId10ResolutionEv
|| __TEXT.__text __ZN6gloria6TileId21NeighborsWithinRadiusEd
|| __TEXT.__text __ZN6gloria6TileId4ZoomEy
|| __TEXT.__text __ZN6gloria6TileId5ReachEj
|| __TEXT.__text __ZN6gloria6TileId5ToXYZEv
|| __TEXT.__text __ZN6gloria6TileId6ToBBOXEv
|| __TEXT.__text __ZN6gloria6TileId7FromXYZERKNS_14TileCoordinateE
|| __TEXT.__text __ZN6gloria6TileId7MapSizeEv
|| __TEXT.__text __ZN6gloria6TileId8AncestorEh
|| __TEXT.__text __ZN6gloria6TileId8AncestorEv
|| __TEXT.__text __ZN6gloria6TileId8ChildrenEh
|| __TEXT.__text __ZN6gloria6TileId8ChildrenEv
|| __TEXT.__text __ZN6gloria6TileId8TileSizeEv
|| __TEXT.__text __ZN6gloria6TileId9NeighborsEj
|| __TEXT.__text __ZN6gloria6TileId9NeighborsEv
|| __TEXT.__text __ZN6gloria6TileIdC1Ey
|| __TEXT.__text __ZN6gloria6TileIdC2Ey
|| __TEXT.__text __ZN6glorialsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_14TileCoordinateE
|| __TEXT.__text __ZN6glorialsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6TileIdE
|| __TEXT.__text __ZNK6gloria14TileCoordinate6XToLngEv
|| __TEXT.__text __ZNK6gloria14TileCoordinate6YToLatEv
|| __TEXT.__text __ZNK6gloria6TileId16GetEncodedTileIdEv
|| __TEXT.__text __ZNK6gloria6TileIdeqERKS0_
|| __TEXT.__text __ZNK6gloria6TileIdltERKS0_
|| __TEXT.__text __ZNK6gloria6TileIdneERKS0_
|| __TEXT.__text ___WiFiManagerLocationManagerVisitCallback
__ Bom: _BOMCopierCopyWithOptions
__ Bom: _BOMCopierFree
__ Bom: _BOMCopierNew
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreData: _NSPersistentStoreRemoteChangeNotificationOptionKey
__ CoreData: _NSSQLiteStoreType
__ CoreData: _NSXPCStoreDaemonizeKey
__ CoreData: _NSXPCStorePostUpdateNotificationsKey
__ CoreData: _NSXPCStoreServiceNameKey
__ CoreData: _NSXPCStoreType
__ CoreData: _OBJC_CLASS_$_NSBatchDeleteRequest
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_CLASS_$_NSManagedObjectContext
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSMergePolicy
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreCoordinator
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreDescription
__ CoreData: _OBJC_CLASS_$_NSXPCStoreServer
__ CoreData: _OBJC_CLASS_$_NSXPCStoreServerRequestHandlingPolicy
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreData: _OBJC_METACLASS_$_NSXPCStoreServerRequestHandlingPolicy
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDateCreate
__ CoreFoundation: _CFDateFormatterCreate
__ CoreFoundation: _CFDateFormatterCreateStringWithAbsoluteTime
__ CoreFoundation: _CFDateFormatterSetFormat
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddTimer
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopRemoveTimer
__ CoreFoundation: _CFRunLoopTimerCreate
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFStringAppendFormat
__ CoreFoundation: _CFStringAppendFormatAndArguments
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringCreateExternalRepresentation
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithFormatAndArguments
__ CoreFoundation: _CFStringGetFileSystemRepresentation
__ CoreFoundation: _CFStringGetMaximumSizeOfFileSystemRepresentation
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _NSURLIsRegularFileKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreLocation: _CLLocationCoordinate2DMake
__ CoreLocation: _OBJC_CLASS_$_CLCircularRegion
__ CoreLocation: _OBJC_CLASS_$_CLGeocoder
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _kCLLocationAccuracyHundredMeters
__ CoreLocation: _kCLLocationAccuracyKilometer
__ CoreLocation: _kCLLocationAccuracyLeech
__ CoreRoutine: _OBJC_CLASS_$_RTRoutineManager
__ CoreTelephony: __CTServerConnectionCopyMobileCountryCode
__ CoreTelephony: __CTServerConnectionCreateWithIdentifier
__ Foundation: _NSClassFromString
__ Foundation: _NSFileSize
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_METACLASS_$_NSError
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ GeoServices: _GEOErrorDomain
__ GeoServices: _OBJC_CLASS_$_GEOMapService
__ GeoServices: _OBJC_CLASS_$_GEOWiFiBSS
__ GeoServices: _OBJC_CLASS_$_GEOWiFiESS
__ GeoServices: _OBJC_CLASS_$_GEOWiFiQualityIndex
__ GeoServices: _OBJC_CLASS_$_GEOWiFiQualityNetworkSearch
__ IOKit: _IOPMAssertionCreateWithName
__ IOKit: _IOPMAssertionRelease
__ Lexicon: _LXEntryCopyString
__ Lexicon: _LXEntryGetMetaFlags
__ Lexicon: _LXLexiconCreate
__ Lexicon: _LXLexiconEnumerateEntriesForString
__ Lexicon: _kLXLexiconLocaleKey
__ MobileKeyBag: _MKBUserUnlockedSinceBoot
__ PassKitCore: _OBJC_CLASS_$_PKPass
__ PassKitCore: _OBJC_CLASS_$_PKPassLibrary
__ PassKitCore: _PKPassLibraryAddedPassesUserInfoKey
__ PassKitCore: _PKPassLibraryDidChangeNotification
__ PassKitCore: _PKPassLibraryRelevantInfoUniqueID
__ PassKitCore: _PKPassLibraryRelevantPassesDidChangeNotification
__ PassKitCore: _PKPassLibraryReplacementPassesUserInfoKey
__ PassKitCore: _PKPassSemanticDictionariesKeyWifiAccess
__ PassKitCore: _PKPassSemanticWifiAccessKeyPassword
__ PassKitCore: _PKPassSemanticWifiAccessKeySSID
__ Security: _SecCMSCreateSignedData
__ Security: _SecCertificateCreateWithData
__ Security: _SecPKCS12Import
__ Security: _kSecCMSAdditionalCerts
__ Security: _kSecCMSSignDetached
__ Security: _kSecImportExportPassphrase
__ Security: _kSecImportItemIdentity
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCPrint
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___sprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___vsnprintf_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __dispatch_source_type_vnode
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _closedir
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _difftime
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _ether_aton
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fdopen
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fseek
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _ldexp
__ libSystem.B.dylib: _localtime_r
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _lroundl
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _open_dprotected_np
__ libSystem.B.dylib: _opendir
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _readdir
__ libSystem.B.dylib: _remove
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _strstr
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _truncate
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__113basic_ostreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTINSt3__115basic_streambufIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
TBTileFetchRequest : NSObject /usr/lib/libc++.1.dylib <TBFetchRequest, NSCopying>
 @property  TBTileFetchRequestDescriptor *descriptor
 @property  BOOL cacheable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long sourcePolicy
 @property  @? resultsHandler
 @property  @? preferLocalHandler
 @property  NSDictionary *userInfo

  // class methods
  +[TBTileFetchRequest fetchRequestWithDescriptor:sourcePolicy:cacheable:]

  // instance methods
  -[TBTileFetchRequest copyWithZone:]
  -[TBTileFetchRequest userInfo]
  -[TBTileFetchRequest .cxx_destruct]
  -[TBTileFetchRequest setUserInfo:]
  -[TBTileFetchRequest resultsHandler]
  -[TBTileFetchRequest setResultsHandler:]
  -[TBTileFetchRequest descriptor]
  -[TBTileFetchRequest setDescriptor:]
  -[TBTileFetchRequest setCacheable:]
  -[TBTileFetchRequest handleResponse:]
  -[TBTileFetchRequest initWithDescriptor:sourcePolicy:cacheable:]
  -[TBTileFetchRequest sourcePolicy]
  -[TBTileFetchRequest setSourcePolicy:]
  -[TBTileFetchRequest cacheable]
  -[TBTileFetchRequest preferLocalHandler]
  -[TBTileFetchRequest setPreferLocalHandler:]
  -[TBTileFetchRequest handlePreferLocalResponse:]
  -[TBTileFetchRequest doesLocalResultsSatisfyRequest:]


TBLocationFetchRequestDescriptor : NSObject /usr/lib/libc++.1.dylib <TBFetchRequestDescriptor, NSCopying>
 @property  NSPredicate *localFetchPredicate
 @property  unsigned long type
 @property  NSSet *tileItems
 @property  unsigned long primaryTileKey
 @property  NSDate *maxCacheAge
 @property  double latitude
 @property  double longitude
 @property  TBLocalFetchRequestDescriptor *localFetchDescriptor
 @property  TBLocalFetchRequestDescriptor *preferLocalFetchDescriptor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PBCodable *remoteRequest
 @property  Class remoteRequestClass

  // instance methods
  -[TBLocationFetchRequestDescriptor copyWithZone:]
  -[TBLocationFetchRequestDescriptor type]
  -[TBLocationFetchRequestDescriptor setType:]
  -[TBLocationFetchRequestDescriptor .cxx_destruct]
  -[TBLocationFetchRequestDescriptor latitude]
  -[TBLocationFetchRequestDescriptor longitude]
  -[TBLocationFetchRequestDescriptor setLongitude:]
  -[TBLocationFetchRequestDescriptor setLatitude:]
  -[TBLocationFetchRequestDescriptor initWithLatitude:longitude:]
  -[TBLocationFetchRequestDescriptor remoteRequest]
  -[TBLocationFetchRequestDescriptor initWithLatitude:longitude:radius:maxCacheAge:]
  -[TBLocationFetchRequestDescriptor _localFetchRequest]
  -[TBLocationFetchRequestDescriptor _preferLocalCacheFetchRequest]
  -[TBLocationFetchRequestDescriptor tileItems]
  -[TBLocationFetchRequestDescriptor maxCacheAge]
  -[TBLocationFetchRequestDescriptor localFetchPredicate]
  -[TBLocationFetchRequestDescriptor setMaxCacheAge:]
  -[TBLocationFetchRequestDescriptor primaryTileKey]
  -[TBLocationFetchRequestDescriptor setPrimaryTileKey:]
  -[TBLocationFetchRequestDescriptor setTileItems:]
  -[TBLocationFetchRequestDescriptor setLocalFetchDescriptor:]
  -[TBLocationFetchRequestDescriptor setPreferLocalFetchDescriptor:]
  -[TBLocationFetchRequestDescriptor remoteRequestClass]
  -[TBLocationFetchRequestDescriptor localFetchDescriptor]
  -[TBLocationFetchRequestDescriptor preferLocalFetchDescriptor]
  -[TBLocationFetchRequestDescriptor initWithLatitude:longitude:maxCacheAge:]
  -[TBLocationFetchRequestDescriptor setLocalFetchPredicate:]


WiFi3BarsTileFetcher : NSObject /usr/lib/libc++.1.dylib
 @property  TBDataSourceMediator *dataSourceMediator
 @property  unsigned long lastFetchedKey

  // instance methods
  -[WiFi3BarsTileFetcher dealloc]
  -[WiFi3BarsTileFetcher .cxx_destruct]
  -[WiFi3BarsTileFetcher dataSourceMediator]
  -[WiFi3BarsTileFetcher initWithDataSourceMediator:]
  -[WiFi3BarsTileFetcher _handleLocationManagerVisitCallbackWithVisit:]
  -[WiFi3BarsTileFetcher setDataSourceMediator:]
  -[WiFi3BarsTileFetcher lastFetchedKey]
  -[WiFi3BarsTileFetcher setLastFetchedKey:]


WiFiLocaleManager : NSObject /usr/lib/libc++.1.dylib <WiFiLocationManagerDelegate>
 @property  NSString *localeCountryCode
 @property  int localeSource
 @property  double localeTimeout
 @property  double localeLastUpdatedTime
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_source> *localeTimer
 @property  NSDateFormatter *dateFormatter
 @property  WiFiLocationManager *locationManager
 @property  unsigned char isWaitingForLocationUpdate
 @property  unsigned char testModeEnabled
 @property  int testMcc
 @property  NSString *testHost11d
 @property  NSString *testPeer
 @property  <WiFiLocaleManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WiFiLocaleManager getStringOfLocaleSource:]

  // instance methods
  -[WiFiLocaleManager init]
  -[WiFiLocaleManager dealloc]
  -[WiFiLocaleManager setQueue:]
  -[WiFiLocaleManager queue]
  -[WiFiLocaleManager delegate]
  -[WiFiLocaleManager setDelegate:]
  -[WiFiLocaleManager .cxx_destruct]
  -[WiFiLocaleManager dateFormatter]
  -[WiFiLocaleManager setDateFormatter:]
  -[WiFiLocaleManager didUpdateLocations:]
  -[WiFiLocaleManager didFailWithError:]
  -[WiFiLocaleManager locationManager]
  -[WiFiLocaleManager setLocationManager:]
  -[WiFiLocaleManager setLocaleCountryCode:]
  -[WiFiLocaleManager setLocaleSource:]
  -[WiFiLocaleManager setLocaleLastUpdatedTime:]
  -[WiFiLocaleManager setLocaleTimeout:]
  -[WiFiLocaleManager setTestMcc:]
  -[WiFiLocaleManager setTestHost11d:]
  -[WiFiLocaleManager setTestPeer:]
  -[WiFiLocaleManager setLocaleTimer:]
  -[WiFiLocaleManager localeTimer]
  -[WiFiLocaleManager _determineAndSetLocale:]
  -[WiFiLocaleManager setIsWaitingForLocationUpdate:]
  -[WiFiLocaleManager setTestModeEnabled:]
  -[WiFiLocaleManager testMcc]
  -[WiFiLocaleManager testHost11d]
  -[WiFiLocaleManager testPeer]
  -[WiFiLocaleManager localeTimeout]
  -[WiFiLocaleManager testModeEnabled]
  -[WiFiLocaleManager localeSource]
  -[WiFiLocaleManager localeLastUpdatedTime]
  -[WiFiLocaleManager localeCountryCode]
  -[WiFiLocaleManager getLocaleFromMcc]
  -[WiFiLocaleManager getLocaleFromLocation:]
  -[WiFiLocaleManager getLocaleFrom80211dInfo]
  -[WiFiLocaleManager getLocaleFromPeer]
  -[WiFiLocaleManager getLocaleFromTimezone]
  -[WiFiLocaleManager setCountryCode:source:]
  -[WiFiLocaleManager getLocaleUsingBoundingBoxes:]
  -[WiFiLocaleManager getLocaleUsingReverseGeocoder:]
  -[WiFiLocaleManager getNetworkReachability]
  -[WiFiLocaleManager applyCountryCodeExceptions:]
  -[WiFiLocaleManager getRestrictedCountryCodeFromTimezone]
  -[WiFiLocaleManager getRestrictedCountryCodeFromRegionInfo]
  -[WiFiLocaleManager isWaitingForLocationUpdate]
  -[WiFiLocaleManager didChangeAuthorizationStatus]
  -[WiFiLocaleManager determineAndSetLocale:]
  -[WiFiLocaleManager setLocaleTestParams:]
  -[WiFiLocaleManager getLocaleSource]
  -[WiFiLocaleManager getLocaleLastUpdatedTime]
  -[WiFiLocaleManager getLocaleCountryCode]
  -[WiFiLocaleManager getLocaleFromCompanion]


WiFiAvailabilityMatch : NSObject /usr/lib/libc++.1.dylib <WiFiRecommendation>
 @property  <WiFiScannedNetwork> *scannedNetwork
 @property  NSDate *matchedAt
 @property  BOOL unwantedNetworkName
 @property  NSString *SSID
 @property  <WiFiCandidateNetwork> *network
 @property  long long priority

  // class methods
  +[WiFiAvailabilityMatch matchWithNetwork:scannedNetwork:]

  // instance methods
  -[WiFiAvailabilityMatch isEqual:]
  -[WiFiAvailabilityMatch .cxx_destruct]
  -[WiFiAvailabilityMatch priority]
  -[WiFiAvailabilityMatch network]
  -[WiFiAvailabilityMatch SSID]
  -[WiFiAvailabilityMatch initWithNetwork:scannedNetwork:]
  -[WiFiAvailabilityMatch isEqualToAvailabilityMatch:]
  -[WiFiAvailabilityMatch scannedNetwork]
  -[WiFiAvailabilityMatch matchedAt]
  -[WiFiAvailabilityMatch unwantedNetworkName]
  -[WiFiAvailabilityMatch isEqualToScannedNetwork:]
  -[WiFiAvailabilityMatch setScannedNetwork:]
  -[WiFiAvailabilityMatch setMatchedAt:]
  -[WiFiAvailabilityMatch setUnwantedNetworkName:]


WFLoggerBase : NSObject /usr/lib/libc++.1.dylib <WFLogProtocol>
 @property  unsigned char WFIsInternalInstall
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSNumber *logLifespanInDays
 @property  unsigned long logPrivacy
 @property  unsigned long logLevelEnable
 @property  unsigned long logLevelPersist
 @property  unsigned long maxSizeInKb

  // instance methods
  -[WFLoggerBase dump]
  -[WFLoggerBase WFLog:privacy:message:valist:]
  -[WFLoggerBase WFLog:privacy:cfStrMsg:]
  -[WFLoggerBase getLogLifespanInDays]
  -[WFLoggerBase setLogLifespanInDays:]
  -[WFLoggerBase getLogPrivacy]
  -[WFLoggerBase setLogPrivacy:]
  -[WFLoggerBase getLogLevelEnable]
  -[WFLoggerBase setLogLevelEnable:]
  -[WFLoggerBase getLogLevelPersist]
  -[WFLoggerBase setLogLevelPersist:]
  -[WFLoggerBase getMaxFileSizeInMB]
  -[WFLoggerBase setMaxSizeInKb:]
  -[WFLoggerBase WFIsInternalInstall]
  -[WFLoggerBase stopWatchingLogFile]


TBPopularityScore : NSObject /usr/lib/libc++.1.dylib <TBScore>
 @property  NSString *typeDescription
 @property  unsigned long score
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TBPopularityScore popularityScoreWithValue:]

  // instance methods
  -[TBPopularityScore .cxx_destruct]
  -[TBPopularityScore score]
  -[TBPopularityScore setScore:]
  -[TBPopularityScore initWithValue:]
  -[TBPopularityScore setTypeDescription:]
  -[TBPopularityScore typeDescription]


WiFiLexicon : NSObject /usr/lib/libc++.1.dylib
 @property  NSCharacterSet *tokenizationCharacterSet
 @property  NSCharacterSet *tokenizationCharacterSetWithoutUpperCase
 @property  NSMutableDictionary *stringCache
 @property  NSSet *unwantedEnglishWords

  // instance methods
  -[WiFiLexicon init]
  -[WiFiLexicon dealloc]
  -[WiFiLexicon .cxx_destruct]
  -[WiFiLexicon stringCache]
  -[WiFiLexicon unwantedEnglishWords]
  -[WiFiLexicon _tokenizeStringForSpecialCharacters:]
  -[WiFiLexicon tokenizationCharacterSet]
  -[WiFiLexicon tokenizationCharacterSetWithoutUpperCase]
  -[WiFiLexicon stringContainsUnwantedWords:]
  -[WiFiLexicon setTokenizationCharacterSet:]
  -[WiFiLexicon setTokenizationCharacterSetWithoutUpperCase:]
  -[WiFiLexicon setStringCache:]
  -[WiFiLexicon setUnwantedEnglishWords:]


TBMutableTileFetchResponse : NSObject /usr/lib/libc++.1.dylib <TBFetchResponse>
 @property  NSMutableSet *mutableTiles
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *results
 @property  NSError *error
 @property  NSSet *tiles
 @property  NSDictionary *resultsByBSSID

  // instance methods
  -[TBMutableTileFetchResponse init]
  -[TBMutableTileFetchResponse .cxx_destruct]
  -[TBMutableTileFetchResponse error]
  -[TBMutableTileFetchResponse results]
  -[TBMutableTileFetchResponse tiles]
  -[TBMutableTileFetchResponse addResponse:]
  -[TBMutableTileFetchResponse mutableTiles]
  -[TBMutableTileFetchResponse resultsByBSSID]
  -[TBMutableTileFetchResponse setMutableTiles:]


TBAnalytics : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[TBAnalytics captureEvent:]


TBRemoteDataSource : TBDataSource
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[TBRemoteDataSource init]
  -[TBRemoteDataSource setQueue:]
  -[TBRemoteDataSource queue]
  -[TBRemoteDataSource type]
  -[TBRemoteDataSource .cxx_destruct]
  -[TBRemoteDataSource executeFetchRequest:]
  -[TBRemoteDataSource _executeNetworkFetchRequest:]
  -[TBRemoteDataSource _executeLocationFetchRequest:]
  -[TBRemoteDataSource _executeTileFetchRequest:]
  -[TBRemoteDataSource _fetchTilesWithRequest:]
  -[TBRemoteDataSource _submitNetworkSearch:completion:]
  -[TBRemoteDataSource _fetchTilesForTileItems:completionHandler:trigger:]
  -[TBRemoteDataSource _captureTileFetchError:tileKey:duration:trigger:]
  -[TBRemoteDataSource _submitLocationSearch:completion:]
  -[TBRemoteDataSource _writeSearchTileToFile:]


TBTileMO : NSManagedObject /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <TBTile>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long key
 @property  NSDate *created
 @property  NSString *etag
 @property  NSDate *created
 @property  NSString *etag
 @property  long long key
 @property  NSSet *networks

  // class methods
  +[TBTileMO fetchRequest]
  +[TBTileMO entityName]
  +[TBTileMO generateNewTileObjectFromMOC:]
  +[TBTileMO removeTilesUsingPredicate:moc:]
  +[TBTileMO removeAllTilesInMOC:]


TBError : NSError /usr/lib/libMobileGestalt.dylib
  // class methods
  +[TBError fetchMissingParametersErrorWithUserInfo:]
  +[TBError responseErrorWithUserInfo:]
  +[TBError fetchUnsupportedErrorWithUserInfo:]

  // instance methods
  -[TBError initWithType:userInfo:]


TBNetworkFetchRequest : NSObject /usr/lib/libc++.1.dylib <TBFetchRequest, NSCopying>
 @property  TBNetworkFetchRequestDescriptor *descriptor
 @property  BOOL cacheable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long sourcePolicy
 @property  @? resultsHandler
 @property  @? preferLocalHandler
 @property  NSDictionary *userInfo

  // class methods
  +[TBNetworkFetchRequest fetchRequestWithDescriptor:sourcePolicy:cacheable:]
  +[TBNetworkFetchRequest fetchRequestWithDescriptor:sourcePolicy:]

  // instance methods
  -[TBNetworkFetchRequest copyWithZone:]
  -[TBNetworkFetchRequest userInfo]
  -[TBNetworkFetchRequest .cxx_destruct]
  -[TBNetworkFetchRequest setUserInfo:]
  -[TBNetworkFetchRequest resultsHandler]
  -[TBNetworkFetchRequest setResultsHandler:]
  -[TBNetworkFetchRequest descriptor]
  -[TBNetworkFetchRequest setDescriptor:]
  -[TBNetworkFetchRequest setCacheable:]
  -[TBNetworkFetchRequest handleResponse:]
  -[TBNetworkFetchRequest initWithDescriptor:sourcePolicy:cacheable:]
  -[TBNetworkFetchRequest sourcePolicy]
  -[TBNetworkFetchRequest setSourcePolicy:]
  -[TBNetworkFetchRequest cacheable]
  -[TBNetworkFetchRequest preferLocalHandler]
  -[TBNetworkFetchRequest setPreferLocalHandler:]
  -[TBNetworkFetchRequest doesLocalResultsSatisfyRequest:]


TBQualityScore : NSObject /usr/lib/libc++.1.dylib <TBScore>
 @property  NSString *typeDescription
 @property  unsigned long score
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TBQualityScore qualityScoreWithValue:]

  // instance methods
  -[TBQualityScore .cxx_destruct]
  -[TBQualityScore score]
  -[TBQualityScore setScore:]
  -[TBQualityScore initWithValue:]
  -[TBQualityScore setTypeDescription:]
  -[TBQualityScore typeDescription]


TBTileFetchRequestDescriptor : NSObject /usr/lib/libc++.1.dylib <TBFetchRequestDescriptor, NSCopying>
 @property  NSSet *tileItems
 @property  NSPredicate *localFetchPredicate
 @property  unsigned long type
 @property  TBLocalFetchRequestDescriptor *localFetchDescriptor
 @property  TBLocalFetchRequestDescriptor *preferLocalFetchDescriptor
 @property  NSDate *maxCacheAge
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PBCodable *remoteRequest
 @property  Class remoteRequestClass

  // instance methods
  -[TBTileFetchRequestDescriptor copyWithZone:]
  -[TBTileFetchRequestDescriptor type]
  -[TBTileFetchRequestDescriptor setType:]
  -[TBTileFetchRequestDescriptor .cxx_destruct]
  -[TBTileFetchRequestDescriptor remoteRequest]
  -[TBTileFetchRequestDescriptor _preferLocalCacheFetchRequest]
  -[TBTileFetchRequestDescriptor tileItems]
  -[TBTileFetchRequestDescriptor maxCacheAge]
  -[TBTileFetchRequestDescriptor localFetchPredicate]
  -[TBTileFetchRequestDescriptor setMaxCacheAge:]
  -[TBTileFetchRequestDescriptor setTileItems:]
  -[TBTileFetchRequestDescriptor setLocalFetchDescriptor:]
  -[TBTileFetchRequestDescriptor setPreferLocalFetchDescriptor:]
  -[TBTileFetchRequestDescriptor remoteRequestClass]
  -[TBTileFetchRequestDescriptor localFetchDescriptor]
  -[TBTileFetchRequestDescriptor preferLocalFetchDescriptor]
  -[TBTileFetchRequestDescriptor setLocalFetchPredicate:]
  -[TBTileFetchRequestDescriptor initWithTileItems:maxCacheAge:]
  -[TBTileFetchRequestDescriptor initWithTileItems:]


TBCoreDataSource : TBDataSource <TBCacheProvider>
 @property  NSManagedObjectContext *context
 @property  TBPersistenceManager *persistenceManager
 @property  TBCoreDataStoreDescriptor *descriptor
 @property  unsigned long cacheExpirationInDays
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TBCoreDataSource type]
  -[TBCoreDataSource .cxx_destruct]
  -[TBCoreDataSource context]
  -[TBCoreDataSource setContext:]
  -[TBCoreDataSource descriptor]
  -[TBCoreDataSource setDescriptor:]
  -[TBCoreDataSource executeFetchRequest:]
  -[TBCoreDataSource _executePreferLocalFetchRequest:]
  -[TBCoreDataSource _executeFetchRequest:]
  -[TBCoreDataSource _canSupportRequest:]
  -[TBCoreDataSource persistenceManager]
  -[TBCoreDataSource cacheExpirationInDays]
  -[TBCoreDataSource _createNewNetwork:tile:withMOC:]
  -[TBCoreDataSource removeAllWithCompletionHandler:]
  -[TBCoreDataSource _createNewNetworkFromDictionary:withMOC:]
  -[TBCoreDataSource cacheFetchResponse:completionHandler:]
  -[TBCoreDataSource prune3BarsNetworks:completionHandler:]
  -[TBCoreDataSource removeWithFetchRequest:completionHandler:]
  -[TBCoreDataSource initWithStoreDescriptor:]
  -[TBCoreDataSource importObjectsWithArray:completionHandler:]
  -[TBCoreDataSource setCacheExpirationInDays:]
  -[TBCoreDataSource setPersistenceManager:]


TBPersistenceRemoteStoreServerHandlingPolicy : NSXPCStoreServerRequestHandlingPolicy /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
  // instance methods
  -[TBPersistenceRemoteStoreServerHandlingPolicy shouldAcceptConnectionsFromClientWithContext:]


TBPersistenceRemoteStoreServer : NSObject /usr/lib/libc++.1.dylib
 @property  NSXPCStoreServer *xpcStoreServer
 @property  NSURL *storeURL
 @property  NSURL *modelURL
 @property  NSDictionary *serverOptions

  // instance methods
  -[TBPersistenceRemoteStoreServer .cxx_destruct]
  -[TBPersistenceRemoteStoreServer modelURL]
  -[TBPersistenceRemoteStoreServer setModelURL:]
  -[TBPersistenceRemoteStoreServer startListening]
  -[TBPersistenceRemoteStoreServer storeURL]
  -[TBPersistenceRemoteStoreServer setStoreURL:]
  -[TBPersistenceRemoteStoreServer serverOptions]
  -[TBPersistenceRemoteStoreServer setXpcStoreServer:]
  -[TBPersistenceRemoteStoreServer xpcStoreServer]
  -[TBPersistenceRemoteStoreServer initWithStoreURL:modelURL:options:]
  -[TBPersistenceRemoteStoreServer setServerOptions:]


TBDataSourceMediator : NSObject /usr/lib/libc++.1.dylib
 @property  TBCoreDataSource *local
 @property  TBDataSource *remote
 @property  NSOperationQueue *fetchQueue

  // instance methods
  -[TBDataSourceMediator .cxx_destruct]
  -[TBDataSourceMediator local]
  -[TBDataSourceMediator setLocal:]
  -[TBDataSourceMediator remote]
  -[TBDataSourceMediator executeFetchRequest:]
  -[TBDataSourceMediator setRemote:]
  -[TBDataSourceMediator fetchQueue]
  -[TBDataSourceMediator setFetchQueue:]
  -[TBDataSourceMediator removeAllWithCompletionHandler:]
  -[TBDataSourceMediator prune3BarsNetworks:completionHandler:]
  -[TBDataSourceMediator initWithLocalStoreDescriptor:remoteStore:]
  -[TBDataSourceMediator initWithLocalStoreDescriptor:]
  -[TBDataSourceMediator removeWithFetchRequest:]


TBNetworkMO : NSManagedObject /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <TBNetwork, NSSecureCoding, NSCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <TBScore> *popularityScore
 @property  <TBScore> *qualityScore
 @property  NSString *remoteIdentifier
 @property  NSString *SSID
 @property  unsigned long authMask
 @property  NSString *authDescription
 @property  NSString *attributesDescription
 @property  NSSet *accessPoints
 @property  BOOL captive
 @property  BOOL moving
 @property  BOOL suspicious
 @property  BOOL public
 @property  unsigned long tileKey
 @property  long long authMask
 @property  BOOL captive
 @property  NSDate *created
 @property  NSString *identifier
 @property  BOOL moving
 @property  NSString *name
 @property  int popularityScoreValue
 @property  BOOL public
 @property  int qualityScoreValue
 @property  BOOL suspicious
 @property  long long tileKey
 @property  long long timestamp
 @property  NSSet *accessPoints
 @property  TBTileMO *tile

  // class methods
  +[TBNetworkMO supportsSecureCoding]
  +[TBNetworkMO fetchRequest]
  +[TBNetworkMO entityName]
  +[TBNetworkMO removeAllNetworksInMOC:]
  +[TBNetworkMO generateNewNetworkObjectFromMOC:]
  +[TBNetworkMO removeNetworksUsingPredicate:moc:]

  // instance methods
  -[TBNetworkMO encodeWithCoder:]
  -[TBNetworkMO initWithCoder:]
  -[TBNetworkMO dictionaryRepresentation]
  -[TBNetworkMO isMoving]
  -[TBNetworkMO SSID]
  -[TBNetworkMO remoteIdentifier]
  -[TBNetworkMO isPublic]
  -[TBNetworkMO isCaptive]
  -[TBNetworkMO qualityScore]
  -[TBNetworkMO popularityScore]
  -[TBNetworkMO isSuspicious]
  -[TBNetworkMO authDescription]
  -[TBNetworkMO attributesDescription]


WFLogger : NSObject /usr/lib/libc++.1.dylib
 @property  NSNumber *logLifespanInDays
 @property  unsigned long logLevelEnable
 @property  unsigned long logLevelPersist
 @property  unsigned long destination
 @property  unsigned long logPrivacy
 @property  unsigned long maxFileSizeInMB

  // class methods
  +[WFLogger sharedWFLoggerSingleton]

  // instance methods
  -[WFLogger init]
  -[WFLogger dump]
  -[WFLogger WFLog:message:]
  -[WFLogger getLogLifespanInDays]
  -[WFLogger getLogPrivacy]
  -[WFLogger getLogLevelEnable]
  -[WFLogger getLogLevelPersist]
  -[WFLogger getMaxFileSizeInMB]
  -[WFLogger setDestinationOsLog:category:logLifespanInDays:logLevel:logPrivacy:]
  -[WFLogger getDestination]
  -[WFLogger loggerBase]
  -[WFLogger setDestinationCircularBuffer]
  -[WFLogger setDestinationFile:runLoopRef:runLoopMode:classC:dateFormatter:maxFileSizeInMB:logLifespanInDays:]
  -[WFLogger setDestinationFileLocation:fileNamePrefix:runLoopRef:runLoopMode:classC:dateFormatter:maxFileSizeInMB:logLifespanInDays:]


TBLocationFetchRequest : NSObject /usr/lib/libc++.1.dylib <TBFetchRequest, NSCopying>
 @property  TBLocationFetchRequestDescriptor *descriptor
 @property  BOOL cacheable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long sourcePolicy
 @property  @? resultsHandler
 @property  @? preferLocalHandler
 @property  NSDictionary *userInfo

  // class methods
  +[TBLocationFetchRequest fetchRequestWithDescriptor:sourcePolicy:cacheable:]
  +[TBLocationFetchRequest fetchRequestWithDescriptor:sourcePolicy:]

  // instance methods
  -[TBLocationFetchRequest copyWithZone:]
  -[TBLocationFetchRequest userInfo]
  -[TBLocationFetchRequest .cxx_destruct]
  -[TBLocationFetchRequest setUserInfo:]
  -[TBLocationFetchRequest resultsHandler]
  -[TBLocationFetchRequest setResultsHandler:]
  -[TBLocationFetchRequest descriptor]
  -[TBLocationFetchRequest setDescriptor:]
  -[TBLocationFetchRequest setCacheable:]
  -[TBLocationFetchRequest handleResponse:]
  -[TBLocationFetchRequest initWithDescriptor:sourcePolicy:cacheable:]
  -[TBLocationFetchRequest sourcePolicy]
  -[TBLocationFetchRequest setSourcePolicy:]
  -[TBLocationFetchRequest cacheable]
  -[TBLocationFetchRequest preferLocalHandler]
  -[TBLocationFetchRequest setPreferLocalHandler:]
  -[TBLocationFetchRequest handlePreferLocalResponse:]


TBTileItemDescriptor : NSObject /usr/lib/libc++.1.dylib <TBTileRequestItem>
 @property  NSNumber *key
 @property  NSString *etag
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TBTileItemDescriptor tileItemDescriptorWithKey:]

  // instance methods
  -[TBTileItemDescriptor copyWithZone:]
  -[TBTileItemDescriptor key]
  -[TBTileItemDescriptor .cxx_destruct]
  -[TBTileItemDescriptor setKey:]
  -[TBTileItemDescriptor etag]
  -[TBTileItemDescriptor setEtag:]
  -[TBTileItemDescriptor initWithKey:etag:]


WFMeasureThroughputResult : NSObject /usr/lib/libc++.1.dylib <WFMeasureResult>
 @property  NSError *error
 @property  double downlinkThroughput
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFMeasureThroughputResult .cxx_destruct]
  -[WFMeasureThroughputResult error]
  -[WFMeasureThroughputResult downlinkThroughput]
  -[WFMeasureThroughputResult initWithResult:andError:]


WFMeasure : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WFMeasure .cxx_destruct]
  -[WFMeasure initWithType:]
  -[WFMeasure abort]
  -[WFMeasure start:]
  -[WFMeasure isInProgress]
  -[WFMeasure onTimeout:]


WiFi3BarsNetwork : NSObject /usr/lib/libc++.1.dylib <WiFiCandidateNetwork>
 @property  NSString *uniqueIdentifier
 @property  NSString *SSID
 @property  <TBNetwork> *network
 @property  BOOL unwantedNetworkName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <TBScore> *popularityScore
 @property  <TBScore> *qualityScore
 @property  NSSet *accessPoints
 @property  NSString *password
 @property  long long source
 @property  NSSet *attributes
 @property  BOOL matched

  // instance methods
  -[WiFi3BarsNetwork password]
  -[WiFi3BarsNetwork .cxx_destruct]
  -[WiFi3BarsNetwork source]
  -[WiFi3BarsNetwork attributes]
  -[WiFi3BarsNetwork uniqueIdentifier]
  -[WiFi3BarsNetwork setUniqueIdentifier:]
  -[WiFi3BarsNetwork network]
  -[WiFi3BarsNetwork setNetwork:]
  -[WiFi3BarsNetwork initWithNetwork:]
  -[WiFi3BarsNetwork accessPoints]
  -[WiFi3BarsNetwork SSID]
  -[WiFi3BarsNetwork setSSID:]
  -[WiFi3BarsNetwork qualityScore]
  -[WiFi3BarsNetwork matched]
  -[WiFi3BarsNetwork setMatched:]
  -[WiFi3BarsNetwork unwantedNetworkName]
  -[WiFi3BarsNetwork setUnwantedNetworkName:]
  -[WiFi3BarsNetwork popularityScore]
  -[WiFi3BarsNetwork containsAccessPointMatchingBSSIDs:]


WFLoggerCircularBuffer : WFLoggerBase
  // instance methods
  -[WFLoggerCircularBuffer init]
  -[WFLoggerCircularBuffer dealloc]
  -[WFLoggerCircularBuffer dump]
  -[WFLoggerCircularBuffer WFLog:privacy:message:valist:]
  -[WFLoggerCircularBuffer WFLog:privacy:cfStrMsg:]


WFLoggerFile : WFLoggerBase
 @property  r^{__CFString=} logFilePath
 @property  r^{__CFString=} logDirPath
 @property  r^{__CFString=} logFileNamePrefix

  // instance methods
  -[WFLoggerFile dealloc]
  -[WFLoggerFile WFLog:privacy:message:valist:]
  -[WFLoggerFile WFLog:privacy:cfStrMsg:]
  -[WFLoggerFile getLogLifespanInDays]
  -[WFLoggerFile setLogLifespanInDays:]
  -[WFLoggerFile getLogPrivacy]
  -[WFLoggerFile setLogPrivacy:]
  -[WFLoggerFile getLogLevelEnable]
  -[WFLoggerFile setLogLevelEnable:]
  -[WFLoggerFile getLogLevelPersist]
  -[WFLoggerFile setLogLevelPersist:]
  -[WFLoggerFile getMaxFileSizeInMB]
  -[WFLoggerFile stopWatchingLogFile]
  -[WFLoggerFile getLogFilePath]
  -[WFLoggerFile initWithFilePath:filePath:runLoopRef:runLoopMode:classC:dateFormatter:maxFileSizeInMB:logLifespanInDays:dispatchQueue:]
  -[WFLoggerFile schedule:]
  -[WFLoggerFile getLogDirPath]
  -[WFLoggerFile getLogFileNamePrefix]
  -[WFLoggerFile initWithDirectoryPath:dirPath:fileNamePrefix:runLoopRef:runLoopMode:classC:dateFormatter:maxFileSizeInMB:logLifespanInDays:dispatchQueue:]
  -[WFLoggerFile checkLogFileUpdate:]
  -[WFLoggerFile changeLogFile:]
  -[WFLoggerFile writeToFile:cfStrMsg:]
  -[WFLoggerFile init:runLoopRef:runLoopMode:classC:dateFormatter:maxFileSizeInMB:logLifespanInDays:]
  -[WFLoggerFile createDateString]
  -[WFLoggerFile doesLogFileExist:]
  -[WFLoggerFile generateLogFileName]
  -[WFLoggerFile rotateLogFile:]
  -[WFLoggerFile createLogFile:fileClassC:]
  -[WFLoggerFile removeLogFilesFromDir:]
  -[WFLoggerFile removeLogFile:maxAge:]
  -[WFLoggerFile startWatchingLogFile]
  -[WFLoggerFile cleanStaleLogs]
  -[WFLoggerFile mapLogLevelEnum:]
  -[WFLoggerFile setMaxFileSizeInMB:]


TBFetchedTile : NSObject /usr/lib/libc++.1.dylib <TBTile, NSCopying>
 @property  unsigned long key
 @property  NSDate *created
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *etag

  // class methods
  +[TBFetchedTile fetchedTileWithKey:etag:created:]

  // instance methods
  -[TBFetchedTile isEqual:]
  -[TBFetchedTile copyWithZone:]
  -[TBFetchedTile key]
  -[TBFetchedTile .cxx_destruct]
  -[TBFetchedTile setKey:]
  -[TBFetchedTile etag]
  -[TBFetchedTile setEtag:]
  -[TBFetchedTile created]
  -[TBFetchedTile setCreated:]
  -[TBFetchedTile initWithKey:etag:created:]
  -[TBFetchedTile _isEqualToFetchedTile:]


TBRemoteFetchTileItem : NSObject /usr/lib/libc++.1.dylib <TBFetchResponseTileItem>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long status
 @property  <TBTile> *tile
 @property  NSArray *networks
 @property  NSError *error

  // instance methods
  -[TBRemoteFetchTileItem .cxx_destruct]
  -[TBRemoteFetchTileItem error]
  -[TBRemoteFetchTileItem status]
  -[TBRemoteFetchTileItem networks]
  -[TBRemoteFetchTileItem tile]
  -[TBRemoteFetchTileItem initWithEmptyTileKey:etag:error:]
  -[TBRemoteFetchTileItem initWithTile:status:etag:error:]


TBLocalFetchRequestDescriptor : NSObject /usr/lib/libc++.1.dylib
 @property  NSFetchRequest *localFetchRequest
 @property  NSFetchRequest *fetchRequest

  // instance methods
  -[TBLocalFetchRequestDescriptor .cxx_destruct]
  -[TBLocalFetchRequestDescriptor fetchRequest]
  -[TBLocalFetchRequestDescriptor initWithFetchRequest:]
  -[TBLocalFetchRequestDescriptor localFetchRequest]
  -[TBLocalFetchRequestDescriptor setLocalFetchRequest:]


TBJoinAnalyticsEvent : NSObject /usr/lib/libc++.1.dylib <TBAnalyticsEvent>
 @property  unsigned long type
 @property  unsigned long source
 @property  unsigned long action
 @property  NSString *bssid
 @property  NSNumber *latitude
 @property  NSNumber *longitude
 @property  NSNumber *score
 @property  NSNumber *visibleDuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *eventName
 @property  NSDictionary *eventDictionary

  // class methods
  +[TBJoinAnalyticsEvent joinRecommendationEventWithSource:action:BSSID:latitude:longitude:score:visibleDuration:]
  +[TBJoinAnalyticsEvent joinAlertEventWithSource:action:visibleDuration:]

  // instance methods
  -[TBJoinAnalyticsEvent type]
  -[TBJoinAnalyticsEvent setType:]
  -[TBJoinAnalyticsEvent setSource:]
  -[TBJoinAnalyticsEvent .cxx_destruct]
  -[TBJoinAnalyticsEvent source]
  -[TBJoinAnalyticsEvent score]
  -[TBJoinAnalyticsEvent action]
  -[TBJoinAnalyticsEvent eventName]
  -[TBJoinAnalyticsEvent latitude]
  -[TBJoinAnalyticsEvent longitude]
  -[TBJoinAnalyticsEvent setScore:]
  -[TBJoinAnalyticsEvent setLongitude:]
  -[TBJoinAnalyticsEvent setLatitude:]
  -[TBJoinAnalyticsEvent setAction:]
  -[TBJoinAnalyticsEvent setBssid:]
  -[TBJoinAnalyticsEvent bssid]
  -[TBJoinAnalyticsEvent eventDictionary]
  -[TBJoinAnalyticsEvent visibleDuration]
  -[TBJoinAnalyticsEvent setVisibleDuration:]


WFLoggerOsLog : WFLoggerBase
 @property  NSString *profileFilePath

  // instance methods
  -[WFLoggerOsLog dealloc]
  -[WFLoggerOsLog WFLog:privacy:message:valist:]
  -[WFLoggerOsLog WFLog:privacy:cfStrMsg:]
  -[WFLoggerOsLog getLogLifespanInDays]
  -[WFLoggerOsLog setLogLifespanInDays:]
  -[WFLoggerOsLog getLogPrivacy]
  -[WFLoggerOsLog setLogPrivacy:]
  -[WFLoggerOsLog getLogLevelEnable]
  -[WFLoggerOsLog setLogLevelEnable:]
  -[WFLoggerOsLog getLogLevelPersist]
  -[WFLoggerOsLog setLogLevelPersist:]
  -[WFLoggerOsLog getMaxFileSizeInMB]
  -[WFLoggerOsLog setMaxSizeInKb:]
  -[WFLoggerOsLog stopWatchingLogFile]
  -[WFLoggerOsLog init:subSystem:category:logLifespanInDays:logLevel:logPrivacy:dispatchQueue:]
  -[WFLoggerOsLog mapLogLevelEnum:]
  -[WFLoggerOsLog getProfileFilePath]
  -[WFLoggerOsLog doesProfileExist:]
  -[WFLoggerOsLog createOsLogProfile]
  -[WFLoggerOsLog getLevelEnabled:category:]
  -[WFLoggerOsLog getLevelPersist:category:]
  -[WFLoggerOsLog getTtlDays:category:]
  -[WFLoggerOsLog getPrivacy:category:]
  -[WFLoggerOsLog convertLogLevel:]
  -[WFLoggerOsLog formatOsLogProfile:levelEnabled:levelPersist:ttlDays:privacy:]
  -[WFLoggerOsLog writeDictToFile:idStr:]
  -[WFLoggerOsLog setTtlDays:category:value:]
  -[WFLoggerOsLog setPrivacy:category:value:]
  -[WFLoggerOsLog setLevelEnabled:category:value:]
  -[WFLoggerOsLog mapLogLevelStr:]
  -[WFLoggerOsLog setLevelPersist:category:value:]


TBPreferLocalFetchDataSource : NSObject /usr/lib/libc++.1.dylib
 @property  TBDataSource *localDataSource
 @property  TBDataSource *remoteDataSource
 @property  <TBCacheProvider> *cacheProvider

  // instance methods
  -[TBPreferLocalFetchDataSource .cxx_destruct]
  -[TBPreferLocalFetchDataSource localDataSource]
  -[TBPreferLocalFetchDataSource setLocalDataSource:]
  -[TBPreferLocalFetchDataSource initWithLocalDataSource:remoteDataSource:cacheProvider:]
  -[TBPreferLocalFetchDataSource remoteDataSource]
  -[TBPreferLocalFetchDataSource setRemoteDataSource:]
  -[TBPreferLocalFetchDataSource cacheProvider]
  -[TBPreferLocalFetchDataSource setCacheProvider:]


TBPreferLocalFetchOperation : NSOperation /usr/lib/libMobileGestalt.dylib
 @property  <TBFetchRequest> *fetchRequest
 @property  <TBFetchRequest> *fetchRequestCopy
 @property  <TBFetchResponse> *response
 @property  TBPreferLocalFetchDataSource *dataSource
 @property  NSOperationQueue *fetchQueue
 @property  NSArray *remoteKeysToFetch
 @property  NSArray *satisfiedLocalKeys

  // instance methods
  -[TBPreferLocalFetchOperation name]
  -[TBPreferLocalFetchOperation .cxx_destruct]
  -[TBPreferLocalFetchOperation start]
  -[TBPreferLocalFetchOperation isFinished]
  -[TBPreferLocalFetchOperation isReady]
  -[TBPreferLocalFetchOperation finish]
  -[TBPreferLocalFetchOperation fetchRequest]
  -[TBPreferLocalFetchOperation response]
  -[TBPreferLocalFetchOperation dataSource]
  -[TBPreferLocalFetchOperation setDataSource:]
  -[TBPreferLocalFetchOperation setResponse:]
  -[TBPreferLocalFetchOperation setFetchRequest:]
  -[TBPreferLocalFetchOperation fetchQueue]
  -[TBPreferLocalFetchOperation setFetchQueue:]
  -[TBPreferLocalFetchOperation initWithFetchRequest:dataSource:fetchQueue:]
  -[TBPreferLocalFetchOperation setFetchRequestCopy:]
  -[TBPreferLocalFetchOperation _fetchLocal]
  -[TBPreferLocalFetchOperation fetchRequestCopy]
  -[TBPreferLocalFetchOperation _doResults:satisfyFetchRequest:keysToFetchRemotely:satisfiedKeys:]
  -[TBPreferLocalFetchOperation setRemoteKeysToFetch:]
  -[TBPreferLocalFetchOperation setSatisfiedLocalKeys:]
  -[TBPreferLocalFetchOperation _captureCacheEventWithStatus:userInfo:error:type:]
  -[TBPreferLocalFetchOperation _fetchRemote]
  -[TBPreferLocalFetchOperation finishAndCallCompletionWithResponse:]
  -[TBPreferLocalFetchOperation remoteKeysToFetch]
  -[TBPreferLocalFetchOperation _tileItemsFromTileKeys:]
  -[TBPreferLocalFetchOperation _mergeLocalAndRemoteResults:]
  -[TBPreferLocalFetchOperation satisfiedLocalKeys]


TBLocalFetchTileItem : NSObject /usr/lib/libc++.1.dylib <TBFetchResponseTileItem>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long status
 @property  <TBTile> *tile
 @property  NSArray *networks
 @property  NSError *error

  // instance methods
  -[TBLocalFetchTileItem .cxx_destruct]
  -[TBLocalFetchTileItem error]
  -[TBLocalFetchTileItem status]
  -[TBLocalFetchTileItem networks]
  -[TBLocalFetchTileItem tile]
  -[TBLocalFetchTileItem initWithTile:error:]


TBDefaults : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[TBDefaults zoomLevel]
  +[TBDefaults tileSearchRadius]
  +[TBDefaults nearbyTileSearchRadius]


TBFetchAnalyticsEvent : NSObject /usr/lib/libc++.1.dylib <TBAnalyticsEvent>
 @property  unsigned long source
 @property  unsigned long type
 @property  unsigned long trigger
 @property  NSNumber *duration
 @property  NSNumber *requestCount
 @property  NSNumber *resultCount
 @property  NSString *tileKey
 @property  NSError *error
 @property  NSDate *date
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *eventName
 @property  NSDictionary *eventDictionary

  // class methods
  +[TBFetchAnalyticsEvent fetchEventWithSource:type:trigger:duration:requestCount:resultCount:error:tileKey:]

  // instance methods
  -[TBFetchAnalyticsEvent type]
  -[TBFetchAnalyticsEvent setType:]
  -[TBFetchAnalyticsEvent setSource:]
  -[TBFetchAnalyticsEvent .cxx_destruct]
  -[TBFetchAnalyticsEvent date]
  -[TBFetchAnalyticsEvent source]
  -[TBFetchAnalyticsEvent error]
  -[TBFetchAnalyticsEvent resultCount]
  -[TBFetchAnalyticsEvent setError:]
  -[TBFetchAnalyticsEvent duration]
  -[TBFetchAnalyticsEvent eventName]
  -[TBFetchAnalyticsEvent setDate:]
  -[TBFetchAnalyticsEvent setDuration:]
  -[TBFetchAnalyticsEvent requestCount]
  -[TBFetchAnalyticsEvent trigger]
  -[TBFetchAnalyticsEvent tileKey]
  -[TBFetchAnalyticsEvent setTrigger:]
  -[TBFetchAnalyticsEvent setTileKey:]
  -[TBFetchAnalyticsEvent setRequestCount:]
  -[TBFetchAnalyticsEvent eventDictionary]
  -[TBFetchAnalyticsEvent setResultCount:]


TBLocalFetchResponse : NSObject /usr/lib/libc++.1.dylib <TBFetchResponse>
 @property  NSArray *results
 @property  NSDictionary *resultsByBSSID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSError *error
 @property  NSSet *tiles

  // class methods
  +[TBLocalFetchResponse responseWithResultsByBSSID:]
  +[TBLocalFetchResponse responseWithResults:entityDescription:]

  // instance methods
  -[TBLocalFetchResponse .cxx_destruct]
  -[TBLocalFetchResponse error]
  -[TBLocalFetchResponse results]
  -[TBLocalFetchResponse tiles]
  -[TBLocalFetchResponse setResults:]
  -[TBLocalFetchResponse resultsByBSSID]
  -[TBLocalFetchResponse initWithResults:entityDescription:]
  -[TBLocalFetchResponse initWithResultsByBSSID:]
  -[TBLocalFetchResponse setResultsByBSSID:]


TBRemoteFetchResponse : NSObject /usr/lib/libc++.1.dylib <TBFetchResponse>
 @property  NSArray *results
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *tiles
 @property  NSDictionary *resultsByBSSID

  // class methods
  +[TBRemoteFetchResponse responseWithResults:tiles:error:]

  // instance methods
  -[TBRemoteFetchResponse .cxx_destruct]
  -[TBRemoteFetchResponse error]
  -[TBRemoteFetchResponse results]
  -[TBRemoteFetchResponse setError:]
  -[TBRemoteFetchResponse tiles]
  -[TBRemoteFetchResponse setResults:]
  -[TBRemoteFetchResponse initWithResults:tiles:error:]


TBNetworkRemoteFetchResponse : TBRemoteFetchResponse
 @property  GEOWiFiQualityNetworkSearchResult *networkSearchResult

  // class methods
  +[TBNetworkRemoteFetchResponse responseWithNetworkSearchResults:]

  // instance methods
  -[TBNetworkRemoteFetchResponse .cxx_destruct]
  -[TBNetworkRemoteFetchResponse initWithNetworkSearchResults:]
  -[TBNetworkRemoteFetchResponse networkSearchResult]
  -[TBNetworkRemoteFetchResponse setNetworkSearchResult:]


TBTileRemoteFetchResponse : TBRemoteFetchResponse
 @property  GEOWiFiQualityLocationSearchResult *locationSearchResult

  // class methods
  +[TBTileRemoteFetchResponse responseWithTileItems:]

  // instance methods
  -[TBTileRemoteFetchResponse .cxx_destruct]
  -[TBTileRemoteFetchResponse initWithTileItems:]
  -[TBTileRemoteFetchResponse locationSearchResult]
  -[TBTileRemoteFetchResponse setLocationSearchResult:]


TBPersistenceManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSManagedObjectModel *managedObjectModel
 @property  NSManagedObjectContext *persistenceContext
 @property  TBPersistenceRemoteStoreServer *remoteStoreServer
 @property  NSPersistentStoreCoordinator *persistenceCoordinator

  // class methods
  +[TBPersistenceManager isStoreCompatibleAtURL:withModel:]

  // instance methods
  -[TBPersistenceManager .cxx_destruct]
  -[TBPersistenceManager managedObjectModel]
  -[TBPersistenceManager setManagedObjectModel:]
  -[TBPersistenceManager persistenceContext]
  -[TBPersistenceManager initWithManagedObjectModel:storeDescriptor:]
  -[TBPersistenceManager persistenceCoordinator]
  -[TBPersistenceManager setPersistenceContext:]
  -[TBPersistenceManager setPersistenceCoordinator:]
  -[TBPersistenceManager remoteStoreServer]
  -[TBPersistenceManager setRemoteStoreServer:]


TBDataSource : NSObject /usr/lib/libc++.1.dylib <TBFetchProvider>
 @property  unsigned long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TBDataSource type]
  -[TBDataSource executeFetchRequest:]
  -[TBDataSource submitAnalyticsEventForFetchRequest:duration:error:resultCount:]


WiFiLocationManager : NSObject /usr/lib/libc++.1.dylib <CLLocationManagerDelegate>
 @property  CLLocationManager *clLocationManager
 @property  NSMutableArray *clientsDataArray
 @property  NSMutableArray *visitClientsDataArray
 @property  int locationManagerState
 @property  NSObject<OS_dispatch_queue> *queue
 @property  CLLocation *latestLocation
 @property  unsigned char isAuthorized
 @property  <WiFiLocationManagerDelegate> *delegate
 @property  unsigned char shouldMonitorVisits
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WiFiLocationManager sharedWiFiLocationManager]
  +[WiFiLocationManager isLocationValid:uptoSeconds:isHighAccuracy:]
  +[WiFiLocationManager getStringOfCallbackType:]
  +[WiFiLocationManager getStringOfState:]
  +[WiFiLocationManager logLocation:addPrefixString:]

  // instance methods
  -[WiFiLocationManager init]
  -[WiFiLocationManager dealloc]
  -[WiFiLocationManager setQueue:]
  -[WiFiLocationManager queue]
  -[WiFiLocationManager delegate]
  -[WiFiLocationManager setDelegate:]
  -[WiFiLocationManager .cxx_destruct]
  -[WiFiLocationManager locationManager:didUpdateLocations:]
  -[WiFiLocationManager locationManager:didFailWithError:]
  -[WiFiLocationManager locationManager:didChangeAuthorizationStatus:]
  -[WiFiLocationManager locationManager:didVisit:]
  -[WiFiLocationManager isAuthorized]
  -[WiFiLocationManager latestLocation]
  -[WiFiLocationManager setShouldMonitorVisits:]
  -[WiFiLocationManager registerVisitCallbackFunctionPtr:withContext:]
  -[WiFiLocationManager requestLowAccuracyLocationUpdate]
  -[WiFiLocationManager setIsAuthorized:]
  -[WiFiLocationManager setLocationManagerState:]
  -[WiFiLocationManager setClientsDataArray:]
  -[WiFiLocationManager setVisitClientsDataArray:]
  -[WiFiLocationManager createCoreLocationObjects]
  -[WiFiLocationManager destroyCoreLocationObjects]
  -[WiFiLocationManager clientsDataArray]
  -[WiFiLocationManager visitClientsDataArray]
  -[WiFiLocationManager invokeClientsCallbackType:withLocation:withError:]
  -[WiFiLocationManager locationManagerState]
  -[WiFiLocationManager setCLLocationUpdateParams:]
  -[WiFiLocationManager clLocationManager]
  -[WiFiLocationManager setClLocationManager:]
  -[WiFiLocationManager requestLeechedAccuracyLocationUpdate]
  -[WiFiLocationManager locationRequestDidTimeOut]
  -[WiFiLocationManager setLatestLocation:]
  -[WiFiLocationManager cancelLocationRequestTimeOut]
  -[WiFiLocationManager shouldMonitorVisits]
  -[WiFiLocationManager registerCallbackFunctionPtr:withContext:]
  -[WiFiLocationManager requestHighAccuracyLocationUpdate]
  -[WiFiLocationManager stopQueryingLocation]


WiFiWalletPass : NSObject /usr/lib/libc++.1.dylib <WiFiCandidateNetwork>
 @property  NSString *uniqueIdentifier
 @property  NSString *serialNumber
 @property  NSDate *relevantDate
 @property  NSString *localizedDescription
 @property  NSString *SSID
 @property  NSString *password
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <TBScore> *popularityScore
 @property  <TBScore> *qualityScore
 @property  NSSet *accessPoints
 @property  long long source
 @property  NSSet *attributes
 @property  BOOL matched

  // instance methods
  -[WiFiWalletPass localizedDescription]
  -[WiFiWalletPass password]
  -[WiFiWalletPass .cxx_destruct]
  -[WiFiWalletPass source]
  -[WiFiWalletPass attributes]
  -[WiFiWalletPass setPassword:]
  -[WiFiWalletPass uniqueIdentifier]
  -[WiFiWalletPass setLocalizedDescription:]
  -[WiFiWalletPass setUniqueIdentifier:]
  -[WiFiWalletPass serialNumber]
  -[WiFiWalletPass accessPoints]
  -[WiFiWalletPass SSID]
  -[WiFiWalletPass setSerialNumber:]
  -[WiFiWalletPass relevantDate]
  -[WiFiWalletPass setRelevantDate:]
  -[WiFiWalletPass setSSID:]
  -[WiFiWalletPass qualityScore]
  -[WiFiWalletPass matched]
  -[WiFiWalletPass setMatched:]
  -[WiFiWalletPass popularityScore]
  -[WiFiWalletPass containsAccessPointMatchingBSSIDs:]


WiFiWalletSource : NSObject /usr/lib/libc++.1.dylib <WiFiAvailabilitySource>
 @property  PKPassLibrary *passLibrary
 @property  NSMutableDictionary *networks
 @property  NSMutableSet *relevantPassIdentifiers
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? changeHandler
 @property  @? relevancyHandler

  // instance methods
  -[WiFiWalletSource init]
  -[WiFiWalletSource dealloc]
  -[WiFiWalletSource setQueue:]
  -[WiFiWalletSource queue]
  -[WiFiWalletSource .cxx_destruct]
  -[WiFiWalletSource setChangeHandler:]
  -[WiFiWalletSource changeHandler]
  -[WiFiWalletSource networks]
  -[WiFiWalletSource setNetworks:]
  -[WiFiWalletSource initWithChangeHandler:]
  -[WiFiWalletSource _passLibraryDidChange:]
  -[WiFiWalletSource passLibrary]
  -[WiFiWalletSource _initializeWiFiPasses]
  -[WiFiWalletSource _passLibraryDidBecomeRelevantNotification:]
  -[WiFiWalletSource _addPass:]
  -[WiFiWalletSource _handleRelevantPassUpdate:]
  -[WiFiWalletSource _createWiFiWalletPassFromPass:]
  -[WiFiWalletSource _removeRelevantPasses]
  -[WiFiWalletSource _handlePassLibraryChange:]
  -[WiFiWalletSource _passDidBecomeRelevant:]
  -[WiFiWalletSource relevantPassIdentifiers]
  -[WiFiWalletSource _networksWithIdentifier:]
  -[WiFiWalletSource _issueRelevancyCallbackWithRelevantNetworks:notRelevantNetworks:]
  -[WiFiWalletSource relevancyHandler]
  -[WiFiWalletSource relevantNetworks]
  -[WiFiWalletSource setRelevancyHandler:]
  -[WiFiWalletSource candidateNetworks]
  -[WiFiWalletSource setPassLibrary:]
  -[WiFiWalletSource setRelevantPassIdentifiers:]


TBCoreDataStoreDescriptor : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long type
 @property  NSURL *storeURL
 @property  NSURL *modelURL
 @property  NSDictionary *storeOptions
 @property  NSPersistentStoreDescription *storeDescription

  // class methods
  +[TBCoreDataStoreDescriptor defaultStoresDirectoryURL]
  +[TBCoreDataStoreDescriptor defaultPersistentStoreURLWithDirectory:]
  +[TBCoreDataStoreDescriptor defaultModelURL]
  +[TBCoreDataStoreDescriptor tempStoresDirectoryURL]
  +[TBCoreDataStoreDescriptor clientStoreDescriptor]
  +[TBCoreDataStoreDescriptor serverStoreDescriptor]
  +[TBCoreDataStoreDescriptor directStoreDescriptor]
  +[TBCoreDataStoreDescriptor tempStoreDescriptor]

  // instance methods
  -[TBCoreDataStoreDescriptor type]
  -[TBCoreDataStoreDescriptor setType:]
  -[TBCoreDataStoreDescriptor .cxx_destruct]
  -[TBCoreDataStoreDescriptor modelURL]
  -[TBCoreDataStoreDescriptor setModelURL:]
  -[TBCoreDataStoreDescriptor setStoreOptions:]
  -[TBCoreDataStoreDescriptor storeOptions]
  -[TBCoreDataStoreDescriptor storeDescription]
  -[TBCoreDataStoreDescriptor storeURL]
  -[TBCoreDataStoreDescriptor setStoreURL:]
  -[TBCoreDataStoreDescriptor initWithType:storeURL:modelURL:]


TBNetworkFetchRequestDescriptor : NSObject /usr/lib/libc++.1.dylib <TBFetchRequestDescriptor, NSCopying>
 @property  GEOWiFiQualityNetworkSearch *remoteRequest
 @property  NSPredicate *localFetchPredicate
 @property  NSSet *bssids
 @property  unsigned long type
 @property  NSDate *maxCacheAge
 @property  TBLocalFetchRequestDescriptor *localFetchDescriptor
 @property  TBLocalFetchRequestDescriptor *preferLocalFetchDescriptor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  Class remoteRequestClass
 @property  NSSet *tileItems

  // instance methods
  -[TBNetworkFetchRequestDescriptor init]
  -[TBNetworkFetchRequestDescriptor copyWithZone:]
  -[TBNetworkFetchRequestDescriptor type]
  -[TBNetworkFetchRequestDescriptor setType:]
  -[TBNetworkFetchRequestDescriptor .cxx_destruct]
  -[TBNetworkFetchRequestDescriptor remoteRequest]
  -[TBNetworkFetchRequestDescriptor maxCacheAge]
  -[TBNetworkFetchRequestDescriptor localFetchPredicate]
  -[TBNetworkFetchRequestDescriptor setMaxCacheAge:]
  -[TBNetworkFetchRequestDescriptor setLocalFetchDescriptor:]
  -[TBNetworkFetchRequestDescriptor setPreferLocalFetchDescriptor:]
  -[TBNetworkFetchRequestDescriptor remoteRequestClass]
  -[TBNetworkFetchRequestDescriptor localFetchDescriptor]
  -[TBNetworkFetchRequestDescriptor preferLocalFetchDescriptor]
  -[TBNetworkFetchRequestDescriptor setLocalFetchPredicate:]
  -[TBNetworkFetchRequestDescriptor bssids]
  -[TBNetworkFetchRequestDescriptor initWithBSSIDs:maxCacheAge:]
  -[TBNetworkFetchRequestDescriptor setBssids:]
  -[TBNetworkFetchRequestDescriptor initWithBSSIDs:]
  -[TBNetworkFetchRequestDescriptor setRemoteRequest:]


WiFi3BarsSource : NSObject /usr/lib/libc++.1.dylib <WiFiAvailabilitySource>
 @property  NSMutableDictionary *networks
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSURL *storeURL
 @property  TBDataSourceMediator *sourceMediator
 @property  WiFi3BarsTileFetcher *tileFetcher
 @property  unsigned long cacheExpirationInDays
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? changeHandler
 @property  @? relevancyHandler

  // instance methods
  -[WiFi3BarsSource setQueue:]
  -[WiFi3BarsSource queue]
  -[WiFi3BarsSource .cxx_destruct]
  -[WiFi3BarsSource setChangeHandler:]
  -[WiFi3BarsSource changeHandler]
  -[WiFi3BarsSource networks]
  -[WiFi3BarsSource setNetworks:]
  -[WiFi3BarsSource storeURL]
  -[WiFi3BarsSource setStoreURL:]
  -[WiFi3BarsSource cacheExpirationInDays]
  -[WiFi3BarsSource prune3BarsNetworks:completionHandler:]
  -[WiFi3BarsSource setCacheExpirationInDays:]
  -[WiFi3BarsSource relevancyHandler]
  -[WiFi3BarsSource relevantNetworks]
  -[WiFi3BarsSource setRelevancyHandler:]
  -[WiFi3BarsSource fetchCandidateNetworksMatchingBSSIDs:completionHandler:]
  -[WiFi3BarsSource _descriptorForType:]
  -[WiFi3BarsSource fetch3BarsNetworksForLocation:forceRemote:trigger:completionHandler:]
  -[WiFi3BarsSource _handleRemoteFetchResponse:]
  -[WiFi3BarsSource sourceMediator]
  -[WiFi3BarsSource _matchSearchBSSIDs:toResponse:]
  -[WiFi3BarsSource initWithChangeHandler:localStoreType:]
  -[WiFi3BarsSource fetch3BarsNetworksFor:]
  -[WiFi3BarsSource fetch3BarsNetworksPredictedForLocation:duration:maxLocations:completionHandler:]
  -[WiFi3BarsSource forceFetch3BarsNetworkMatchingBSSID:completionHandler:]
  -[WiFi3BarsSource submitCacheAnalyticsEvent]
  -[WiFi3BarsSource setSourceMediator:]
  -[WiFi3BarsSource tileFetcher]
  -[WiFi3BarsSource setTileFetcher:]


WFBlacklistEngine : NSObject /usr/lib/libc++.1.dylib
 @property  <WFBlacklistDelegate> *blacklistDelegate
 @property  BOOL enabled
 @property  NSMutableArray *ssidThresholds
 @property  NSMutableArray *bssidThresholds
 @property  double wowBlacklistExpiry
 @property  double autojoinBlacklistExpiry

  // class methods
  +[WFBlacklistEngine stringRepresentationWithReason:]
  +[WFBlacklistEngine stringRepresentationWithState:]

  // instance methods
  -[WFBlacklistEngine dealloc]
  -[WFBlacklistEngine enabled]
  -[WFBlacklistEngine setEnabled:]
  -[WFBlacklistEngine .cxx_destruct]
  -[WFBlacklistEngine setBlacklistDelegate:]
  -[WFBlacklistEngine setWowBlacklistExpiry:]
  -[WFBlacklistEngine setAutojoinBlacklistExpiry:]
  -[WFBlacklistEngine setDefaultBlacklistThresholds]
  -[WFBlacklistEngine bssidThresholds]
  -[WFBlacklistEngine ssidThresholds]
  -[WFBlacklistEngine _findBlacklistNode:]
  -[WFBlacklistEngine _ignoreTriggersForDeviceProfile:node:]
  -[WFBlacklistEngine _evaluateTriggersForBlacklisting:reason:reasonData:bssid:ssid:state:]
  -[WFBlacklistEngine _printBlacklist]
  -[WFBlacklistEngine blacklistDelegate]
  -[WFBlacklistEngine setTriggerForNetworkWithReasonAndState:reason:reasonData:bssid:state:]
  -[WFBlacklistEngine _meetsThresholds:count:perSsid:bssid:ssid:]
  -[WFBlacklistEngine _setBlacklistedState:state:reason:reasonData:]
  -[WFBlacklistEngine isNetworkInBlacklistedState:state:]
  -[WFBlacklistEngine autojoinBlacklistExpiry]
  -[WFBlacklistEngine wowBlacklistExpiry]
  -[WFBlacklistEngine removeBlacklistedStates]
  -[WFBlacklistEngine _evaluateTriggersForUnblacklisting:unblacklistReason:ssid:]
  -[WFBlacklistEngine initWithBlacklistDelegate:profile:]
  -[WFBlacklistEngine configureBlacklistedStateExpiryIntervalInSec:state:]
  -[WFBlacklistEngine changeBlacklistingThresholds:value:perSsid:]
  -[WFBlacklistEngine setTriggerForNetworkWithReason:reason:reasonData:bssid:]
  -[WFBlacklistEngine removeBlacklistedStateForNetworkWithReason:state:reason:]
  -[WFBlacklistEngine removeBlacklistedStateWithUnblacklistType:]
  -[WFBlacklistEngine removeExpiredBlacklistedState:]
  -[WFBlacklistEngine clearTriggerForNetworkWithUnblacklistReason:reason:]
  -[WFBlacklistEngine retrieveNetworksInBlacklistedState:]
  -[WFBlacklistEngine retrieveNetworksInBlacklistedStateHistory:]
  -[WFBlacklistEngine retrieveBlacklistedStateHistoryForNetwork:state:timestamps:reasonData:]
  -[WFBlacklistEngine retrieveReasonsForNetworkInBlacklistedState:state:timestamps:reasonData:]
  -[WFBlacklistEngine getRssiWhenNetworkWasBlacklisted:]
  -[WFBlacklistEngine isNetworkBlacklistedForAutoJoinDueToTrigDisc:rssi:timestamp:]
  -[WFBlacklistEngine retrieveBlacklistedNetworkSsids:]
  -[WFBlacklistEngine getBlacklistedNetworkCount]
  -[WFBlacklistEngine getBlacklist]
  -[WFBlacklistEngine getNodeFromBlacklist:]
  -[WFBlacklistEngine setSsidThresholds:]
  -[WFBlacklistEngine setBssidThresholds:]


WFBlackListNode : NSObject /usr/lib/libc++.1.dylib
 @property  <WFBlacklistNetwork> *networkDelegate
 @property  NSMutableArray *blacklistTriggers
 @property  NSMutableArray *blacklistedStatesCurrent
 @property  NSMutableArray *blacklistedStatesHistory
 @property  BOOL enterprisePolicy

  // instance methods
  -[WFBlackListNode dealloc]
  -[WFBlackListNode .cxx_destruct]
  -[WFBlackListNode setNetworkDelegate:]
  -[WFBlackListNode networkDelegate]
  -[WFBlackListNode addBlacklistedState:reason:reasonData:]
  -[WFBlackListNode initWithBlacklistNetwork:]
  -[WFBlackListNode addBlacklistTrigger:reasonData:bssid:]
  -[WFBlackListNode blacklistTriggers]
  -[WFBlackListNode enterprisePolicy]
  -[WFBlackListNode addBlacklistedStateHistory:state:reason:reasonData:]
  -[WFBlackListNode blacklistedStatesCurrent]
  -[WFBlackListNode blacklistedStatesHistory]
  -[WFBlackListNode containsNetwork:]
  -[WFBlackListNode hasBlacklistedState:]
  -[WFBlackListNode _copyCreateBlacklistedState:reason:reasonData:]
  -[WFBlackListNode updateNetwork:]
  -[WFBlackListNode setBlacklistTriggers:]
  -[WFBlackListNode setBlacklistedStatesCurrent:]
  -[WFBlackListNode setBlacklistedStatesHistory:]
  -[WFBlackListNode setEnterprisePolicy:]


WFBlacklistTriggerNode : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long triggerReason
 @property  long long triggerReasonData
 @property  NSString *triggerReasonString
 @property  double triggerReasonTimestamp
 @property  NSString *bssid

  // instance methods
  -[WFBlacklistTriggerNode init]
  -[WFBlacklistTriggerNode .cxx_destruct]
  -[WFBlacklistTriggerNode setBssid:]
  -[WFBlacklistTriggerNode bssid]
  -[WFBlacklistTriggerNode triggerReason]
  -[WFBlacklistTriggerNode triggerReasonTimestamp]
  -[WFBlacklistTriggerNode triggerReasonData]
  -[WFBlacklistTriggerNode triggerReasonString]
  -[WFBlacklistTriggerNode setTriggerReason:]
  -[WFBlacklistTriggerNode setTriggerReasonData:]
  -[WFBlacklistTriggerNode setTriggerReasonString:]
  -[WFBlacklistTriggerNode setTriggerReasonTimestamp:]


WFBlacklistStateNode : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long blacklistedState
 @property  NSString *blacklistedStateString
 @property  double blacklistedStateTimestamp
 @property  unsigned long blacklistedReason
 @property  long long blacklistedReasonData
 @property  NSString *blacklistedReasonString

  // instance methods
  -[WFBlacklistStateNode init]
  -[WFBlacklistStateNode .cxx_destruct]
  -[WFBlacklistStateNode blacklistedState]
  -[WFBlacklistStateNode blacklistedReason]
  -[WFBlacklistStateNode blacklistedStateTimestamp]
  -[WFBlacklistStateNode blacklistedStateString]
  -[WFBlacklistStateNode blacklistedReasonData]
  -[WFBlacklistStateNode setBlacklistedState:]
  -[WFBlacklistStateNode setBlacklistedStateString:]
  -[WFBlacklistStateNode setBlacklistedStateTimestamp:]
  -[WFBlacklistStateNode setBlacklistedReason:]
  -[WFBlacklistStateNode setBlacklistedReasonData:]
  -[WFBlacklistStateNode setBlacklistedReasonString:]
  -[WFBlacklistStateNode blacklistedReasonString]


TBErrorFetchResponse : NSObject /usr/lib/libc++.1.dylib <TBFetchResponse>
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *results
 @property  NSSet *tiles
 @property  NSDictionary *resultsByBSSID

  // class methods
  +[TBErrorFetchResponse responseWithError:]
  +[TBErrorFetchResponse remoteResponseWithError:]

  // instance methods
  -[TBErrorFetchResponse .cxx_destruct]
  -[TBErrorFetchResponse error]
  -[TBErrorFetchResponse results]
  -[TBErrorFetchResponse setError:]
  -[TBErrorFetchResponse initWithError:]
  -[TBErrorFetchResponse tiles]


TBCacheAnalyticsEvent : NSObject /usr/lib/libc++.1.dylib <TBAnalyticsEvent>
 @property  unsigned long status
 @property  NSNumber *staleness
 @property  NSNumber *tileKey
 @property  NSNumber *type
 @property  NSNumber *errorCode
 @property  NSString *eventName
 @property  NSDictionary *eventDictionary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TBCacheAnalyticsEvent cacheAnalyticsEventWithStatus:staleness:tileKey:type:error:]
  +[TBCacheAnalyticsEvent cacheEventWithTotalCount:last24HoursCount:]

  // instance methods
  -[TBCacheAnalyticsEvent type]
  -[TBCacheAnalyticsEvent setType:]
  -[TBCacheAnalyticsEvent .cxx_destruct]
  -[TBCacheAnalyticsEvent status]
  -[TBCacheAnalyticsEvent eventName]
  -[TBCacheAnalyticsEvent setEventName:]
  -[TBCacheAnalyticsEvent setStatus:]
  -[TBCacheAnalyticsEvent errorCode]
  -[TBCacheAnalyticsEvent tileKey]
  -[TBCacheAnalyticsEvent setErrorCode:]
  -[TBCacheAnalyticsEvent setTileKey:]
  -[TBCacheAnalyticsEvent eventDictionary]
  -[TBCacheAnalyticsEvent setEventDictionary:]
  -[TBCacheAnalyticsEvent staleness]
  -[TBCacheAnalyticsEvent setStaleness:]


TBAccessPointMO : NSManagedObject /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <TBAccessPoint, NSSecureCoding, NSCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <TBScore> *popularityScore
 @property  <TBScore> *qualityScore
 @property  NSString *BSSID
 @property  double latitude
 @property  double longitude
 @property  BOOL edge
 @property  BOOL TCPGood
 @property  NSString *bssid
 @property  NSDate *created
 @property  BOOL edge
 @property  double lat
 @property  double lng
 @property  int popularityScoreValue
 @property  int qualityScoreValue
 @property  BOOL tcpGood
 @property  TBNetworkMO *network

  // class methods
  +[TBAccessPointMO supportsSecureCoding]
  +[TBAccessPointMO fetchRequest]
  +[TBAccessPointMO entityName]
  +[TBAccessPointMO generateNewAccessPointObjectFromMOC:]
  +[TBAccessPointMO removeAllAccessPointsInMOC:]

  // instance methods
  -[TBAccessPointMO encodeWithCoder:]
  -[TBAccessPointMO initWithCoder:]
  -[TBAccessPointMO dictionaryRepresentation]
  -[TBAccessPointMO latitude]
  -[TBAccessPointMO longitude]
  -[TBAccessPointMO BSSID]
  -[TBAccessPointMO qualityScore]
  -[TBAccessPointMO popularityScore]
  -[TBAccessPointMO isEdge]
  -[TBAccessPointMO isTCPGood]


TBRemoteFetchAndCacheDataSource : NSObject /usr/lib/libc++.1.dylib
 @property  TBDataSource *fetchDataSource
 @property  <TBCacheProvider> *cacheProvider

  // instance methods
  -[TBRemoteFetchAndCacheDataSource .cxx_destruct]
  -[TBRemoteFetchAndCacheDataSource initWithFetchDataSource:cacheProvider:]
  -[TBRemoteFetchAndCacheDataSource cacheProvider]
  -[TBRemoteFetchAndCacheDataSource setCacheProvider:]
  -[TBRemoteFetchAndCacheDataSource fetchDataSource]
  -[TBRemoteFetchAndCacheDataSource setFetchDataSource:]


TBRemoteFetchAndCacheOperation : NSOperation /usr/lib/libMobileGestalt.dylib
 @property  <TBFetchRequest> *fetchRequest
 @property  <TBFetchResponse> *response
 @property  TBRemoteFetchAndCacheDataSource *dataSource

  // instance methods
  -[TBRemoteFetchAndCacheOperation name]
  -[TBRemoteFetchAndCacheOperation .cxx_destruct]
  -[TBRemoteFetchAndCacheOperation start]
  -[TBRemoteFetchAndCacheOperation isFinished]
  -[TBRemoteFetchAndCacheOperation isReady]
  -[TBRemoteFetchAndCacheOperation finish]
  -[TBRemoteFetchAndCacheOperation fetchRequest]
  -[TBRemoteFetchAndCacheOperation response]
  -[TBRemoteFetchAndCacheOperation dataSource]
  -[TBRemoteFetchAndCacheOperation setDataSource:]
  -[TBRemoteFetchAndCacheOperation setResponse:]
  -[TBRemoteFetchAndCacheOperation setFetchRequest:]
  -[TBRemoteFetchAndCacheOperation initWithFetchRequest:dataSource:]


WiFiAvailabilityEngine : NSObject /usr/lib/libc++.1.dylib
 @property  NSSet *providers
 @property  NSSet *sources
 @property  <WiFiScanProvider> *scanProvider
 @property  <WiFiLocationProvider> *locationProvider
 @property  NSSet *availableNetworks
 @property  NSObject<OS_dispatch_queue> *queue
 @property  WiFiLexicon *wifiLexicon
 @property  double availabilityMatchMaximumAge
 @property  @? availabilityChangedCallback

  // instance methods
  -[WiFiAvailabilityEngine setQueue:]
  -[WiFiAvailabilityEngine queue]
  -[WiFiAvailabilityEngine .cxx_destruct]
  -[WiFiAvailabilityEngine sources]
  -[WiFiAvailabilityEngine setSources:]
  -[WiFiAvailabilityEngine availableNetworks]
  -[WiFiAvailabilityEngine providers]
  -[WiFiAvailabilityEngine setProviders:]
  -[WiFiAvailabilityEngine setLocationProvider:]
  -[WiFiAvailabilityEngine locationProvider]
  -[WiFiAvailabilityEngine _setupProviderCallbacks:]
  -[WiFiAvailabilityEngine _setupSourceCallbacks:]
  -[WiFiAvailabilityEngine _handleScanResultCallback:error:]
  -[WiFiAvailabilityEngine _handleWalletRelevancyAdded:removed:]
  -[WiFiAvailabilityEngine _handle3BarsRelevancyAdded:removed:]
  -[WiFiAvailabilityEngine availabilityMatchMaximumAge]
  -[WiFiAvailabilityEngine setAvailableNetworks:]
  -[WiFiAvailabilityEngine availabilityChangedCallback]
  -[WiFiAvailabilityEngine _findExistingAvailabilityMatchForScannedNetwork:]
  -[WiFiAvailabilityEngine _findRelevantNetworkMatchForScannedNetwork:]
  -[WiFiAvailabilityEngine _createAvailabilityMatchForCandidate:scannedNetwork:]
  -[WiFiAvailabilityEngine _findAvailabilityMatchesInSourcesForBSSIDS:]
  -[WiFiAvailabilityEngine _handleCandidateMatches:]
  -[WiFiAvailabilityEngine _removeStaleMatches]
  -[WiFiAvailabilityEngine wifiLexicon]
  -[WiFiAvailabilityEngine findRecommendationsForScannedNetwork:]
  -[WiFiAvailabilityEngine initWithProviders:sources:]
  -[WiFiAvailabilityEngine setAvailabilityMatchMaximumAge:]
  -[WiFiAvailabilityEngine findRecommendationForScannedNetwork:]
  -[WiFiAvailabilityEngine setAvailabilityChangedCallback:]
  -[WiFiAvailabilityEngine scanProvider]
  -[WiFiAvailabilityEngine setScanProvider:]
  -[WiFiAvailabilityEngine setWifiLexicon:]


TBGloriaTile : NSObject /usr/lib/libc++.1.dylib <TBTile>
 @property  double lat
 @property  double lng
 @property  unsigned char zoom
 @property  unsigned long key
 @property  double north
 @property  double south
 @property  double east
 @property  double west
 @property  NSString *WKTString
 @property  double tileSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *created
 @property  NSString *etag

  // class methods
  +[TBGloriaTile defaultZoomLevel]
  +[TBGloriaTile gloriaTileWithLat:lng:zoom:]

  // instance methods
  -[TBGloriaTile key]
  -[TBGloriaTile .cxx_destruct]
  -[TBGloriaTile setKey:]
  -[TBGloriaTile setZoom:]
  -[TBGloriaTile zoom]
  -[TBGloriaTile setTileSize:]
  -[TBGloriaTile tileSize]
  -[TBGloriaTile lat]
  -[TBGloriaTile setLat:]
  -[TBGloriaTile lng]
  -[TBGloriaTile setLng:]
  -[TBGloriaTile south]
  -[TBGloriaTile setSouth:]
  -[TBGloriaTile west]
  -[TBGloriaTile setWest:]
  -[TBGloriaTile north]
  -[TBGloriaTile setNorth:]
  -[TBGloriaTile east]
  -[TBGloriaTile setEast:]
  -[TBGloriaTile initWithLat:lng:zoom:]
  -[TBGloriaTile neighborTileKeysWithRadius:]
  -[TBGloriaTile initWithEncodedKey:zoom:]
  -[TBGloriaTile initWithLat:lng:]
  -[TBGloriaTile adjacentTileKeysWithLevel:]
  -[TBGloriaTile WKTString]
  -[TBGloriaTile setWKTString:]


GEOWiFiQualityIndex(Serialization)
	// instance methods
	-[GEOWiFiQualityIndex(Serialization) score]
	-[GEOWiFiQualityIndex(Serialization) typeDescription]

NSSet(ThreeBars)
	// instance methods
	-[NSSet(ThreeBars) tilePredicate]
	-[NSSet(ThreeBars) reformatBSSIDs]
	-[NSSet(ThreeBars) bssidPredicate]

NSString(ThreeBars)
	// instance methods
	-[NSString(ThreeBars) isEmpty]
	-[NSString(ThreeBars) reformatBSSID]

CLCircularRegion(ThreeBars)
	// instance methods
	-[CLCircularRegion(ThreeBars) boundingBox]
	-[CLCircularRegion(ThreeBars) latitude]
	-[CLCircularRegion(ThreeBars) longitude]
	-[CLCircularRegion(ThreeBars) searchPredicateWithLatitudeKey:longitudeKey:]

GEOWiFiBSS(Serialization)
	// class methods
	+[GEOWiFiBSS(Serialization) supportsSecureCoding]

	// instance methods
	-[GEOWiFiBSS(Serialization) encodeWithCoder:]
	-[GEOWiFiBSS(Serialization) dictionaryRepresentation]
	-[GEOWiFiBSS(Serialization) latitude]
	-[GEOWiFiBSS(Serialization) longitude]
	-[GEOWiFiBSS(Serialization) BSSID]
	-[GEOWiFiBSS(Serialization) qualityScore]
	-[GEOWiFiBSS(Serialization) popularityScore]
	-[GEOWiFiBSS(Serialization) isEdge]
	-[GEOWiFiBSS(Serialization) isTCPGood]
	-[GEOWiFiBSS(Serialization) _hasAttribute:]

GEOWiFiESS(Serialization)
	// class methods
	+[GEOWiFiESS(Serialization) supportsSecureCoding]

	// instance methods
	-[GEOWiFiESS(Serialization) encodeWithCoder:]
	-[GEOWiFiESS(Serialization) dictionaryRepresentation]
	-[GEOWiFiESS(Serialization) isMoving]
	-[GEOWiFiESS(Serialization) accessPoints]
	-[GEOWiFiESS(Serialization) SSID]
	-[GEOWiFiESS(Serialization) remoteIdentifier]
	-[GEOWiFiESS(Serialization) isPublic]
	-[GEOWiFiESS(Serialization) isCaptive]
	-[GEOWiFiESS(Serialization) qualityScore]
	-[GEOWiFiESS(Serialization) authMask]
	-[GEOWiFiESS(Serialization) popularityScore]
	-[GEOWiFiESS(Serialization) isSuspicious]
	-[GEOWiFiESS(Serialization) _hasAttribute:]
	-[GEOWiFiESS(Serialization) authDescription]
	-[GEOWiFiESS(Serialization) attributesDescription]

NSDate(ThreeBars)
	// instance methods
	-[NSDate(ThreeBars) dateByAddingDays:]

NSFileManager(ThreeBars)
	// class methods
	+[NSFileManager(ThreeBars) defaultsDomain]
	+[NSFileManager(ThreeBars) userCacheDirectoryPath]
	+[NSFileManager(ThreeBars) wifiCacheDirectoryPath]

NSData(PKDataAdditions)
	// instance methods
	-[NSData(PKDataAdditions) hexEncoding]
	-[NSData(PKDataAdditions) SHA1Hash]

01 00 0a40 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLCircularRegion 
01 00 0a40 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLGeocoder 
01 00 0a40 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0a40 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0640 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOMapService 
01 00 0640 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOWiFiBSS 
01 00 0640 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOWiFiESS 
01 00 0640 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOWiFiQualityIndex 
01 00 0640 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOWiFiQualityNetworkSearch 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0500 /System/Library/Frameworks/CoreData.framework/CoreData: NSBatchDeleteRequest 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0500 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0500 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0500 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 0500 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectContext 
01 00 0500 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 0500 /System/Library/Frameworks/CoreData.framework/CoreData: NSMergePolicy 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0500 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreCoordinator 
01 00 0500 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreDescription 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0500 /System/Library/Frameworks/CoreData.framework/CoreData: NSXPCStoreServer 
01 00 0500 /System/Library/Frameworks/CoreData.framework/CoreData: NSXPCStoreServerRequestHandlingPolicy 
01 00 0740 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPass 
01 00 0740 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPassLibrary 
01 00 0340 /System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine: RTRoutineManager 
