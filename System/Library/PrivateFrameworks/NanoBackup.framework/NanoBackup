|| __DATA.__common _nb_daemon_log
|| __DATA.__common _nb_framework_log
|| __DATA.__objc_data _OBJC_CLASS_$_NBBackup
|| __DATA.__objc_data _OBJC_CLASS_$_NBExclusionListManager
|| __DATA.__objc_data _OBJC_CLASS_$_NBManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NBBackup
|| __DATA.__objc_data _OBJC_METACLASS_$_NBExclusionListManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NBManager
|| __DATA_CONST.__const _NanoBackupDomain
|| __DATA_CONST.__const _iCloudBackupsEnabled
|| __TEXT.__text _NBBackupDirectoryPath
|| __TEXT.__text _NBError
|| __TEXT.__text _NBLoggingDaemonObjectInit
|| __TEXT.__text _NBLoggingFrameworkObjectInit
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ NanoRegistry: _NRDevicePropertyPairingID
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
NBExclusionListManager : NSObject
 @property  BOOL hasReadConfiguration
 @property  NSSet *excludedPerGizmoDomains
 @property  NSMutableDictionary *excludedPerGizmoDomainSettings

  // instance methods
  -[NBExclusionListManager .cxx_destruct]
  -[NBExclusionListManager purgeCache]
  -[NBExclusionListManager readConfigurationIfNeeded]
  -[NBExclusionListManager excludedPerGizmoDomains]
  -[NBExclusionListManager excludedKeysInDomain:]
  -[NBExclusionListManager hasReadConfiguration]
  -[NBExclusionListManager setHasReadConfiguration:]
  -[NBExclusionListManager setExcludedPerGizmoDomains:]
  -[NBExclusionListManager excludedPerGizmoDomainSettings]
  -[NBExclusionListManager setExcludedPerGizmoDomainSettings:]


NBBackup : NSObject <NSSecureCoding>
 @property  BOOL hasResolvedActiveWatchFaceFilePath
 @property  NSUUID *uuid
 @property  unsigned long backupType
 @property  NSString *name
 @property  NSString *productType
 @property  NSString *productName
 @property  NSString *systemVersion
 @property  NSString *systemBuildVersion
 @property  NSString *marketingVersion
 @property  NSString *deviceColor
 @property  NSString *deviceEnclosureColor
 @property  NSNumber *bottomEnclosureMaterial
 @property  NSNumber *topEnclosureMaterial
 @property  NSNumber *fcmMaterial
 @property  NSNumber *bcmWindowMaterial
 @property  NSNumber *coverGlassColor
 @property  NSNumber *housingColor
 @property  NSNumber *backingColor
 @property  NSString *watchFace
 @property  NSString *watchFaceColor
 @property  BOOL locationOptInEnabled
 @property  BOOL diagnosticsOptInEnabled
 @property  NSDate *lastModificationDate
 @property  NSNumber *sizeInBytes
 @property  NSURL *activeWatchFaceFileURL
 @property  NSString *deviceCSN
 @property  NSData *watchFaceData

  // class methods
  +[NBBackup supportsSecureCoding]

  // instance methods
  -[NBBackup deviceColor]
  -[NBBackup setProductName:]
  -[NBBackup productName]
  -[NBBackup name]
  -[NBBackup initWithCoder:]
  -[NBBackup systemVersion]
  -[NBBackup deviceEnclosureColor]
  -[NBBackup .cxx_destruct]
  -[NBBackup sizeInBytes]
  -[NBBackup setSystemVersion:]
  -[NBBackup backingColor]
  -[NBBackup systemBuildVersion]
  -[NBBackup setName:]
  -[NBBackup setSizeInBytes:]
  -[NBBackup productType]
  -[NBBackup setProductType:]
  -[NBBackup setSystemBuildVersion:]
  -[NBBackup backupType]
  -[NBBackup setBackupType:]
  -[NBBackup setBackingColor:]
  -[NBBackup coverGlassColor]
  -[NBBackup housingColor]
  -[NBBackup setCoverGlassColor:]
  -[NBBackup setDeviceColor:]
  -[NBBackup lastModificationDate]
  -[NBBackup uuid]
  -[NBBackup setHousingColor:]
  -[NBBackup setUuid:]
  -[NBBackup encodeWithCoder:]
  -[NBBackup setDeviceEnclosureColor:]
  -[NBBackup marketingVersion]
  -[NBBackup setMarketingVersion:]
  -[NBBackup setLastModificationDate:]
  -[NBBackup watchFace]
  -[NBBackup setWatchFace:]
  -[NBBackup deviceCSN]
  -[NBBackup activeWatchFaceFileURL]
  -[NBBackup setActiveWatchFaceFileURL:]
  -[NBBackup bottomEnclosureMaterial]
  -[NBBackup setBottomEnclosureMaterial:]
  -[NBBackup topEnclosureMaterial]
  -[NBBackup setTopEnclosureMaterial:]
  -[NBBackup fcmMaterial]
  -[NBBackup setFcmMaterial:]
  -[NBBackup bcmWindowMaterial]
  -[NBBackup setBcmWindowMaterial:]
  -[NBBackup watchFaceColor]
  -[NBBackup setWatchFaceColor:]
  -[NBBackup isLocationOptInEnabled]
  -[NBBackup setLocationOptInEnabled:]
  -[NBBackup isDiagnosticsOptInEnabled]
  -[NBBackup setDiagnosticsOptInEnabled:]
  -[NBBackup setDeviceCSN:]
  -[NBBackup watchFaceData]
  -[NBBackup setWatchFaceData:]
  -[NBBackup hasResolvedActiveWatchFaceFilePath]
  -[NBBackup setHasResolvedActiveWatchFaceFilePath:]


NBManager : NSObject
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSObject<OS_dispatch_queue> *externalQueue
 @property  NSXPCConnection *xpcConnection

  // class methods
  +[NBManager initialize]

  // instance methods
  -[NBManager setXpcConnection:]
  -[NBManager xpcConnection]
  -[NBManager setInternalQueue:]
  -[NBManager .cxx_destruct]
  -[NBManager init]
  -[NBManager connection]
  -[NBManager initWithQueue:]
  -[NBManager unsafe_invalidate]
  -[NBManager internalQueue]
  -[NBManager dealloc]
  -[NBManager externalQueue]
  -[NBManager setExternalQueue:]
  -[NBManager listBackupsOfType:timeout:completionHandler:]
  -[NBManager createManualBackupWithCompletion:]
  -[NBManager setBackupsEnabled:completionHandler:]
  -[NBManager listBackupsWithTimeout:completionHandler:]
  -[NBManager listBackupsOfType:withSynchronousCompletionHandler:]
  -[NBManager createBackupForPairingID:completionHandler:]
  -[NBManager createBackupForPairingID:synchronousCompletionHandler:]
  -[NBManager listBackupsWithCompletionHandler:]
  -[NBManager getBackupsStatus]
  -[NBManager listBackupsWithSynchronousCompletionHandler:]
  -[NBManager restoreFromBackup:forDevice:completionHandler:]
  -[NBManager restoreFromBackup:forDevice:]
  -[NBManager restoreFromDevice:forDevice:completionHandler:]
  -[NBManager restoreFromDevice:forDevice:]
  -[NBManager createBackupForDevice:completionHandler:]
  -[NBManager createBackupForDevice:synchronousCompletionHandler:]
  -[NBManager deleteBackup:completionHandler:]
  -[NBManager deleteBackup:]


01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
