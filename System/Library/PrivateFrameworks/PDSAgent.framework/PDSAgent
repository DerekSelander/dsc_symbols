|| __DATA.__objc_data _OBJC_CLASS_$_PDSInternalDaemonListener
|| __DATA.__objc_data _OBJC_METACLASS_$_PDSInternalDaemonListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSBag
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSCDCacheContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSDaemon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSDaemonListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSDaemonRemoteVendor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSEntryStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSHeartbeatTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSProtoBatchRegisterReq
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSProtoBatchRegisterResp
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSProtoGSTokenAuth
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSProtoMapEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSProtoTopic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSProtoUserAuth
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSProtoUserPushToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSProtoUserPushTokenRegRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSProtoUserPushTokenRegResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSRegisterMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSRequestQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSUserTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSXPCClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PDSXPCServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSBag
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSCDCacheContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSDaemon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSDaemonListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSDaemonRemoteVendor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSEntryStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSHeartbeatTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSProtoBatchRegisterReq
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSProtoBatchRegisterResp
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSProtoGSTokenAuth
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSProtoMapEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSProtoTopic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSProtoUserAuth
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSProtoUserPushToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSProtoUserPushTokenRegRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSProtoUserPushTokenRegResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSRegisterMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSRequestQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSUserTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSXPCClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PDSXPCServer
|| __TEXT.__text _PDSClientVersionNumber
|| __TEXT.__text _PDSCurrentServerEnvironment
|| __TEXT.__text _PDSProtoBatchRegisterReqReadFrom
|| __TEXT.__text _PDSProtoBatchRegisterRespReadFrom
|| __TEXT.__text _PDSProtoGSTokenAuthReadFrom
|| __TEXT.__text _PDSProtoMapEntryReadFrom
|| __TEXT.__text _PDSProtoTopicReadFrom
|| __TEXT.__text _PDSProtoUserAuthReadFrom
|| __TEXT.__text _PDSProtoUserPushTokenReadFrom
|| __TEXT.__text _PDSProtoUserPushTokenRegRequestReadFrom
|| __TEXT.__text _PDSProtoUserPushTokenRegResponseReadFrom
|| __TEXT.__text _PDSProtocolVersionNumber
|| __TEXT.__text _PDSStringForServerEnvironment
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACAccountTypeIdentifierAppleIDAuthentication
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ ApplePushService: _APSConnectionOverrideNamedDelegatePort
__ ApplePushService: _APSEnvironmentDevelopment
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ CommonUtilities: _CUTIsInternalInstall
__ CommonUtilities: _OBJC_CLASS_$_CUTDeferredTaskQueue
__ CoreData: _NSSQLiteStoreType
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSPersistentContainer
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreDescription
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ FTServices: _OBJC_CLASS_$_FTIDSMessage
__ FTServices: _OBJC_CLASS_$_FTMessageDelivery_HTTP
__ FTServices: _OBJC_METACLASS_$_FTIDSMessage
__ Foundation: _NSLog
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSProxy
__ IDSFoundation: _IDSAssignPushIdentityToMessage
__ IDSFoundation: _IDSServerBagFinishedLoadingNotification
__ IDSFoundation: _OBJC_CLASS_$_IDSAutoBugCapture
__ IDSFoundation: _OBJC_CLASS_$_IDSCoreAnalyticsLogger
__ IDSFoundation: _OBJC_CLASS_$_IDSPushHandler
__ IDSFoundation: _OBJC_CLASS_$_IDSServerBag
__ IDSFoundation: _OBJC_CLASS_$_PDSRegistrationAbandonedMetric
__ IDSFoundation: _OBJC_METACLASS_$_IDSServerBag
__ IMFoundation: _IMWeakLinkClass
__ IMFoundation: _OBJC_CLASS_$_IMDeviceSupport
__ IMFoundation: _OBJC_CLASS_$_IMSystemMonitor
__ IMFoundation: _OBJC_CLASS_$_IMTimer
__ IMFoundation: _OBJC_CLASS_$_IMUserDefaults
__ PDS: _OBJC_CLASS_$_PDSEntry
__ PDS: _OBJC_CLASS_$_PDSRegistration
__ PDS: _OBJC_CLASS_$_PDSRemoteRegistry
__ PDS: _OBJC_CLASS_$_PDSUser
__ PDS: _OBJC_CLASS_$_PDSXPCAdapter
__ PDS: _OBJC_CLASS_$_PDSXPCInterface
__ PDS: _PDSCDCacheErrorDomain
__ PDS: _PDSHeartbeatMaintenanceXPCActivityIdentifier
__ PDS: _PDSInternalClientIDEntitlementKey
__ PDS: _PDSInternalDaemonMachServiceName
__ PDS: _PDSInternalToolEntitlementKey
__ PDS: _PDSInternalWildcardClientID
__ PDS: _PDSStringForEntryState
__ PDS: _PDSUserErrorDomain
__ PDS: _PDSXPCErrorDomain
__ PDS: _pds_defaultLog
__ PDS: _pds_oversizedLog
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBRequest
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_METACLASS_$_PBRequest
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_equal
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
PDSProtoUserAuth : PBCodable <NSCopying>
 @property  BOOL hasGsAuthToken
 @property  PDSProtoGSTokenAuth *gsAuthToken
 @property  BOOL hasUserauthOneof
 @property  int userauthOneof

  // instance methods
  -[PDSProtoUserAuth mergeFrom:]
  -[PDSProtoUserAuth userauthOneofAsString:]
  -[PDSProtoUserAuth setGsAuthToken:]
  -[PDSProtoUserAuth setHasUserauthOneof:]
  -[PDSProtoUserAuth .cxx_destruct]
  -[PDSProtoUserAuth gsAuthToken]
  -[PDSProtoUserAuth dictionaryRepresentation]
  -[PDSProtoUserAuth writeTo:]
  -[PDSProtoUserAuth isEqual:]
  -[PDSProtoUserAuth copyTo:]
  -[PDSProtoUserAuth readFrom:]
  -[PDSProtoUserAuth hasUserauthOneof]
  -[PDSProtoUserAuth setUserauthOneof:]
  -[PDSProtoUserAuth clearOneofValuesForUserauthOneof]
  -[PDSProtoUserAuth userauthOneof]
  -[PDSProtoUserAuth StringAsUserauthOneof:]
  -[PDSProtoUserAuth copyWithZone:]
  -[PDSProtoUserAuth hasGsAuthToken]


PDSProtoUserPushToken : PBCodable <NSCopying>
 @property  NSString *userId
 @property  BOOL hasUserAuth
 @property  PDSProtoUserAuth *userAuth
 @property  NSString *pushToken

  // instance methods
  -[PDSProtoUserPushToken userId]
  -[PDSProtoUserPushToken mergeFrom:]
  -[PDSProtoUserPushToken setUserId:]
  -[PDSProtoUserPushToken .cxx_destruct]
  -[PDSProtoUserPushToken dictionaryRepresentation]
  -[PDSProtoUserPushToken pushToken]
  -[PDSProtoUserPushToken writeTo:]
  -[PDSProtoUserPushToken hasUserAuth]
  -[PDSProtoUserPushToken userAuth]
  -[PDSProtoUserPushToken isEqual:]
  -[PDSProtoUserPushToken copyTo:]
  -[PDSProtoUserPushToken setPushToken:]
  -[PDSProtoUserPushToken setUserAuth:]
  -[PDSProtoUserPushToken readFrom:]
  -[PDSProtoUserPushToken copyWithZone:]


PDSXPCServer : NSObject <PDSXPCListenerDelegate>
 @property  <PDSXPCListener> *XPCListener
 @property  <PDSXPCInterfaceVendor> *interfaceVendor
 @property  <PDSDaemonListenerVendor> *daemonListenerVendor
 @property  NSObject<OS_dispatch_workloop> *workloop
 @property  NSMutableArray *XPCClients
 @property  NSArray *connectedClients
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PDSXPCServer setDaemonListenerVendor:]
  -[PDSXPCServer workloop]
  -[PDSXPCServer connectedClients]
  -[PDSXPCServer setWorkloop:]
  -[PDSXPCServer XPCListener]
  -[PDSXPCServer .cxx_destruct]
  -[PDSXPCServer setXPCListener:]
  -[PDSXPCServer initWithServiceName:listenerVendor:interfaceVendor:daemonListenerVendor:queue:workloop:]
  -[PDSXPCServer interfaceVendor]
  -[PDSXPCServer XPCClients]
  -[PDSXPCServer daemonListenerVendor]
  -[PDSXPCServer setInterfaceVendor:]
  -[PDSXPCServer resume]
  -[PDSXPCServer listener:shouldAcceptNewConnection:]
  -[PDSXPCServer setXPCClients:]


PDSProtoTopic : PBCodable <NSCopying>
 @property  NSString *name
 @property  NSString *qualifier
 @property  NSMutableArray *appInfos

  // class methods
  +[PDSProtoTopic appInfoType]

  // instance methods
  -[PDSProtoTopic mergeFrom:]
  -[PDSProtoTopic name]
  -[PDSProtoTopic appInfos]
  -[PDSProtoTopic .cxx_destruct]
  -[PDSProtoTopic setAppInfos:]
  -[PDSProtoTopic dictionaryRepresentation]
  -[PDSProtoTopic writeTo:]
  -[PDSProtoTopic setName:]
  -[PDSProtoTopic clearAppInfos]
  -[PDSProtoTopic isEqual:]
  -[PDSProtoTopic copyTo:]
  -[PDSProtoTopic qualifier]
  -[PDSProtoTopic readFrom:]
  -[PDSProtoTopic appInfosCount]
  -[PDSProtoTopic appInfoAtIndex:]
  -[PDSProtoTopic addAppInfo:]
  -[PDSProtoTopic copyWithZone:]
  -[PDSProtoTopic setQualifier:]


PDSProtoMapEntry : PBCodable <NSCopying>
 @property  NSString *key
 @property  NSString *value

  // instance methods
  -[PDSProtoMapEntry mergeFrom:]
  -[PDSProtoMapEntry setKey:]
  -[PDSProtoMapEntry .cxx_destruct]
  -[PDSProtoMapEntry dictionaryRepresentation]
  -[PDSProtoMapEntry writeTo:]
  -[PDSProtoMapEntry isEqual:]
  -[PDSProtoMapEntry copyTo:]
  -[PDSProtoMapEntry readFrom:]
  -[PDSProtoMapEntry setValue:]
  -[PDSProtoMapEntry value]
  -[PDSProtoMapEntry key]
  -[PDSProtoMapEntry copyWithZone:]


PDSCoordinator : NSObject <PDSRequestQueueDelegate, IDSPushHandlerDelegate, IMSystemMonitorListener, PDSHeartbeatTrackerDelegate, PDSEntryStoreDelegate>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSDate *pendingRequestDate
 @property  PDSBag *serverBag
 @property  CUTDeferredTaskQueue *processDeferredTaskQueue
 @property  @? kvStoreBlock
 @property  @? entryStoreBlock
 @property  IDSPushHandler *pushHandler
 @property  @? pushTokenBlock
 @property  PDSRequestQueue *requestQueue
 @property  BOOL requestPending
 @property  BOOL disabled
 @property  BOOL tokenChanged
 @property  long long bagLoadRetries
 @property  PDSHeartbeatTracker *heartbeatTracker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PDSCoordinator disabled]
  -[PDSCoordinator setDisabled:]
  -[PDSCoordinator _disabledForAnyReason]
  -[PDSCoordinator requestQueue]
  -[PDSCoordinator systemDidLeaveFirstDataProtectionLock]
  -[PDSCoordinator setProcessDeferredTaskQueue:]
  -[PDSCoordinator _entries:includeState:]
  -[PDSCoordinator _requestMatchesPreviousRequest:]
  -[PDSCoordinator setRequestPending:]
  -[PDSCoordinator .cxx_destruct]
  -[PDSCoordinator shouldScheduleHeartbeatForTracker:]
  -[PDSCoordinator registerIfNeeded]
  -[PDSCoordinator processDeferredTaskQueue]
  -[PDSCoordinator _lastPushTokenDiffersFrom:]
  -[PDSCoordinator pushTokenBlock]
  -[PDSCoordinator handler:pushTokenChanged:]
  -[PDSCoordinator entryStore:didUpdatePendingTopics:forceImmediateUpdate:]
  -[PDSCoordinator requestPending]
  -[PDSCoordinator _matchingEntryExistsFor:inStore:]
  -[PDSCoordinator _bagReloaded:]
  -[PDSCoordinator setKvStoreBlock:]
  -[PDSCoordinator _pushTokenChangedWithEntryStore:]
  -[PDSCoordinator setQueue:]
  -[PDSCoordinator setHeartbeatTracker:]
  -[PDSCoordinator entryStoreBlock]
  -[PDSCoordinator setServerBag:]
  -[PDSCoordinator pendingRequestDate]
  -[PDSCoordinator _processEntryStore]
  -[PDSCoordinator _timeToDelayRequestForTopics:]
  -[PDSCoordinator _markSandboxPushToken:]
  -[PDSCoordinator _markLastRequest:]
  -[PDSCoordinator _lastSandboxPushTokenDiffersFrom:]
  -[PDSCoordinator tokenChanged]
  -[PDSCoordinator kvStoreBlock]
  -[PDSCoordinator heartbeatFiredForTracker:]
  -[PDSCoordinator ttlForRequest:]
  -[PDSCoordinator queue]
  -[PDSCoordinator setEntryStoreBlock:]
  -[PDSCoordinator pushHandler]
  -[PDSCoordinator _updateAllHeartbeatEntriesWithState:inEntryStore:]
  -[PDSCoordinator setPushHandler:]
  -[PDSCoordinator setPushTokenBlock:]
  -[PDSCoordinator setBagLoadRetries:]
  -[PDSCoordinator dealloc]
  -[PDSCoordinator _updateOrDeleteEntry:inStore:]
  -[PDSCoordinator serverBag]
  -[PDSCoordinator _comparePushTokensWithEntryStore:]
  -[PDSCoordinator initWithQueue:serverBag:requestQueue:kvStoreBlock:entryStoreBlock:pushTokenBlock:systemMonitor:pushHandler:]
  -[PDSCoordinator _updateEntriesForResponse:fromRequest:]
  -[PDSCoordinator setRequestQueue:]
  -[PDSCoordinator requestQueue:processedRequest:withResponse:]
  -[PDSCoordinator _markPushToken:]
  -[PDSCoordinator setPendingRequestDate:]
  -[PDSCoordinator heartbeatTracker]
  -[PDSCoordinator bagLoadRetries]
  -[PDSCoordinator setTokenChanged:]
  -[PDSCoordinator _lastRequestHash]


PDSInternalDaemonListener : NSObject <PDSRemoteInternal>
 @property  <PDSKVStore> *kvStore

  // instance methods
  -[PDSInternalDaemonListener .cxx_destruct]
  -[PDSInternalDaemonListener setKvStore:]
  -[PDSInternalDaemonListener kvStore]
  -[PDSInternalDaemonListener setStringValue:forKey:withCompletion:]
  -[PDSInternalDaemonListener setNumberValue:forKey:withCompletion:]
  -[PDSInternalDaemonListener setDataValue:forKey:withCompletion:]
  -[PDSInternalDaemonListener stringRepresentationForKey:withCompletion:]
  -[PDSInternalDaemonListener kvStateDumpWithCompletion:]
  -[PDSInternalDaemonListener initWithKVStore:]


PDSQueueProxy : NSProxy
 @property  id target
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long mode

  // instance methods
  -[PDSQueueProxy conformsToProtocol:]
  -[PDSQueueProxy methodSignatureForSelector:]
  -[PDSQueueProxy .cxx_destruct]
  -[PDSQueueProxy respondsToSelector:]
  -[PDSQueueProxy setQueue:]
  -[PDSQueueProxy setTarget:]
  -[PDSQueueProxy target]
  -[PDSQueueProxy queue]
  -[PDSQueueProxy setMode:]
  -[PDSQueueProxy mode]
  -[PDSQueueProxy forwardInvocation:]
  -[PDSQueueProxy initWithTarget:queue:mode:]


PDSDaemonRemoteVendor : NSObject <PDSRemoteVendor>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <PDSDaemonListenerVendor> *daemonListenerVendor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PDSDaemonRemoteVendor setDaemonListenerVendor:]
  -[PDSDaemonRemoteVendor synchronousRemoteObjectProxyWithErrorHandler:]
  -[PDSDaemonRemoteVendor .cxx_destruct]
  -[PDSDaemonRemoteVendor synchronousInternalRemoteObjectProxyWithErrorHandler:]
  -[PDSDaemonRemoteVendor remoteObjectProxyWithError:]
  -[PDSDaemonRemoteVendor setQueue:]
  -[PDSDaemonRemoteVendor daemonListenerVendor]
  -[PDSDaemonRemoteVendor validateConnectionWithError:]
  -[PDSDaemonRemoteVendor queue]
  -[PDSDaemonRemoteVendor internalRemoteObjectProxyWithError:]
  -[PDSDaemonRemoteVendor _remoteInternalForSync:]
  -[PDSDaemonRemoteVendor _remoteForSync:]
  -[PDSDaemonRemoteVendor initWithQueue:daemonListenerVendor:]


PDSBag : IDSServerBag
 @property  long long ttlFromBag
 @property  long long ttlWindowFromBag
 @property  long long ttlGracePeriodFromBag
 @property  double coalesceDelayFromBag
 @property  double coalescePeriodFromBag
 @property  double coalesceMaxPeriodFromBag
 @property  double messageTimeoutFromBag
 @property  BOOL bagKillSwitchActive
 @property  NSNumber *minEnabledVersion
 @property  BOOL allRequiredBagCoalescingValuesPresent
 @property  BOOL allRequiredBagTTLValuesPresent
 @property  NSArray *nonCoalescingTopicsFromBag

  // instance methods
  -[PDSBag messageTimeoutFromBag]
  -[PDSBag allRequiredBagCoalescingValuesPresent]
  -[PDSBag ttlFromDefault]
  -[PDSBag _bagDomain]
  -[PDSBag nonCoalescingTopicsFromBag]
  -[PDSBag coalescePeriodFromBag]
  -[PDSBag ttlWindowFromBag]
  -[PDSBag ttlGracePeriodFromBag]
  -[PDSBag ttlFromBag]
  -[PDSBag topicAvoidsCoalescing:]
  -[PDSBag init]
  -[PDSBag coalesceMaxPeriodFromBag]
  -[PDSBag _valuesDefinedAsNumbersInBagForKeys:]
  -[PDSBag coalesceDelayFromBag]
  -[PDSBag _bagExternallyReloaded]
  -[PDSBag bagKillSwitchActive]
  -[PDSBag allRequiredBagTTLValuesPresent]
  -[PDSBag ttlWindowFromDefault]
  -[PDSBag minEnabledVersion]
  -[PDSBag ttlGracePeriodFromDefault]


PDSProtoBatchRegisterReq : PBCodable <NSCopying>
 @property  NSMutableArray *userPushTokenRegRequests
 @property  BOOL hasRequestTtl
 @property  long long requestTtl

  // class methods
  +[PDSProtoBatchRegisterReq userPushTokenRegRequestsType]

  // instance methods
  -[PDSProtoBatchRegisterReq setRequestTtl:]
  -[PDSProtoBatchRegisterReq mergeFrom:]
  -[PDSProtoBatchRegisterReq hasRequestTtl]
  -[PDSProtoBatchRegisterReq userPushTokenRegRequestsAtIndex:]
  -[PDSProtoBatchRegisterReq .cxx_destruct]
  -[PDSProtoBatchRegisterReq dictionaryRepresentation]
  -[PDSProtoBatchRegisterReq writeTo:]
  -[PDSProtoBatchRegisterReq setHasRequestTtl:]
  -[PDSProtoBatchRegisterReq isEqual:]
  -[PDSProtoBatchRegisterReq copyTo:]
  -[PDSProtoBatchRegisterReq userPushTokenRegRequests]
  -[PDSProtoBatchRegisterReq readFrom:]
  -[PDSProtoBatchRegisterReq requestTtl]
  -[PDSProtoBatchRegisterReq clearUserPushTokenRegRequests]
  -[PDSProtoBatchRegisterReq addUserPushTokenRegRequests:]
  -[PDSProtoBatchRegisterReq copyWithZone:]
  -[PDSProtoBatchRegisterReq setUserPushTokenRegRequests:]
  -[PDSProtoBatchRegisterReq userPushTokenRegRequestsCount]


PDSUserTracker : NSObject
 @property  @? accountStoreBlock

  // class methods
  +[PDSUserTracker standardAccountStore]

  // instance methods
  -[PDSUserTracker initWithAccountStoreBlock:]
  -[PDSUserTracker .cxx_destruct]
  -[PDSUserTracker tokenAndIdentifier:forUser:withError:]
  -[PDSUserTracker accountStoreBlock]
  -[PDSUserTracker init]
  -[PDSUserTracker refreshCredentialsForUser:withError:completion:]
  -[PDSUserTracker _accountForUser:withError:]
  -[PDSUserTracker validUser:withError:]
  -[PDSUserTracker setAccountStoreBlock:]


PDSConfiguration : NSObject <NSCopying>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_workloop> *workloop
 @property  NSURL *daemonRootDirectory
 @property  NSString *pushHandlerPort

  // instance methods
  -[PDSConfiguration workloop]
  -[PDSConfiguration setWorkloop:]
  -[PDSConfiguration .cxx_destruct]
  -[PDSConfiguration setPushHandlerPort:]
  -[PDSConfiguration pushHandlerPort]
  -[PDSConfiguration setQueue:]
  -[PDSConfiguration setDaemonRootDirectory:]
  -[PDSConfiguration daemonRootDirectory]
  -[PDSConfiguration queue]
  -[PDSConfiguration copyWithZone:]


PDSDaemon : NSObject <PDSDaemonListenerVendor>
 @property  PDSConfiguration *configuration
 @property  PDSXPCServer *XPCServer
 @property  PDSCDCacheContainer *cacheContainer
 @property  PDSBag *bag
 @property  PDSEntryStore *entryStore
 @property  <PDSCDCache><PDSKVStore> *underlyingStorage
 @property  PDSUserTracker *userTracker
 @property  PDSCoordinator *coordinator
 @property  PDSRequestQueue *requestQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PDSDaemon _entryStore]
  -[PDSDaemon requestQueue]
  -[PDSDaemon remoteInternalListener]
  -[PDSDaemon entryStore]
  -[PDSDaemon configuration]
  -[PDSDaemon coordinator]
  -[PDSDaemon .cxx_destruct]
  -[PDSDaemon remoteListenerForAllClientIDs]
  -[PDSDaemon bag]
  -[PDSDaemon _underlyingStorage]
  -[PDSDaemon setEntryStore:]
  -[PDSDaemon XPCServer]
  -[PDSDaemon setXPCServer:]
  -[PDSDaemon remoteListenerForClientIDs:]
  -[PDSDaemon initWithConfiguration:]
  -[PDSDaemon setCacheContainer:]
  -[PDSDaemon setCoordinator:]
  -[PDSDaemon setUnderlyingStorage:]
  -[PDSDaemon start]
  -[PDSDaemon cacheContainer]
  -[PDSDaemon setBag:]
  -[PDSDaemon underlyingStorage]
  -[PDSDaemon setUserTracker:]
  -[PDSDaemon userTracker]
  -[PDSDaemon setRequestQueue:]
  -[PDSDaemon setConfiguration:]


PDSXPCClient : NSObject <PDSXPCHandshake>
 @property  <PDSRemote> *daemonListener
 @property  <PDSDaemonListenerVendor> *daemonListenerVendor
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <PDSXPCDaemonConnection> *connection

  // instance methods
  -[PDSXPCClient daemonListener]
  -[PDSXPCClient setDaemonListenerVendor:]
  -[PDSXPCClient connectInternalWithCompletion:]
  -[PDSXPCClient connectWithClientID:completion:]
  -[PDSXPCClient _connectionEntitledClientIDs]
  -[PDSXPCClient .cxx_destruct]
  -[PDSXPCClient setConnection:]
  -[PDSXPCClient setQueue:]
  -[PDSXPCClient connection]
  -[PDSXPCClient daemonListenerVendor]
  -[PDSXPCClient setDaemonListener:]
  -[PDSXPCClient resume]
  -[PDSXPCClient queue]
  -[PDSXPCClient initWithConnection:interfaceVendor:daemonListenerVendor:queue:]
  -[PDSXPCClient _hasToolEntitlement]


PDSRequestQueue : NSObject
 @property  PDSRequest *inflightRequest
 @property  PDSRequest *queuedRequest
 @property  NSObject<OS_dispatch_queue> *queue
 @property  FTMessageDelivery *messageDelivery
 @property  PDSUserTracker *userTracker
 @property  @? pushTokenBlock
 @property  @? entryStoreBlock
 @property  long long authRetries
 @property  NSDate *lastReauthAttempt
 @property  <PDSRequestQueueDelegate> *delegate
 @property  long long messageTimeout

  // instance methods
  -[PDSRequestQueue _dequeueIfNeeded]
  -[PDSRequestQueue enqueueRequest:]
  -[PDSRequestQueue messageDelivery]
  -[PDSRequestQueue .cxx_destruct]
  -[PDSRequestQueue initWithMessageDelivery:userTracker:queue:pushTokenBlock:entryStoreBlock:]
  -[PDSRequestQueue setInflightRequest:]
  -[PDSRequestQueue pushTokenBlock]
  -[PDSRequestQueue messageTimeout]
  -[PDSRequestQueue setQueuedRequest:]
  -[PDSRequestQueue setDelegate:]
  -[PDSRequestQueue authRetries]
  -[PDSRequestQueue _cancelPendingRequests]
  -[PDSRequestQueue setQueue:]
  -[PDSRequestQueue entryStoreBlock]
  -[PDSRequestQueue lastReauthAttempt]
  -[PDSRequestQueue _machineID]
  -[PDSRequestQueue _reAuthAndContinueWithRequest:forUser:]
  -[PDSRequestQueue setMessageTimeout:]
  -[PDSRequestQueue _logProtoUserPushToken:]
  -[PDSRequestQueue _deviceInfo]
  -[PDSRequestQueue queuedRequest]
  -[PDSRequestQueue delegate]
  -[PDSRequestQueue inflightRequest]
  -[PDSRequestQueue _isAuthIssue:]
  -[PDSRequestQueue _hwVersion]
  -[PDSRequestQueue _osVersion]
  -[PDSRequestQueue queue]
  -[PDSRequestQueue setEntryStoreBlock:]
  -[PDSRequestQueue setPushTokenBlock:]
  -[PDSRequestQueue setUserTracker:]
  -[PDSRequestQueue setAuthRetries:]
  -[PDSRequestQueue userTracker]
  -[PDSRequestQueue _flightRequest:]
  -[PDSRequestQueue _logEntries:]
  -[PDSRequestQueue _removeDeadEntriesForUser:withError:]
  -[PDSRequestQueue setLastReauthAttempt:]
  -[PDSRequestQueue setMessageDelivery:]


PDSRequestInfo : NSObject
 @property  unsigned long regReason
 @property  NSDate *heartbeatDate

  // instance methods
  -[PDSRequestInfo .cxx_destruct]
  -[PDSRequestInfo initWithRegistrationReason:nextHeartbeatDate:]
  -[PDSRequestInfo setHeartbeatDate:]
  -[PDSRequestInfo setRegReason:]
  -[PDSRequestInfo init]
  -[PDSRequestInfo regReason]
  -[PDSRequestInfo heartbeatDate]


PDSEntryStore : NSObject
 @property  <PDSCDCache> *cache
 @property  <PDSEntryStoreDelegate> *delegate

  // instance methods
  -[PDSEntryStore setCache:]
  -[PDSEntryStore entriesWithClientID:]
  -[PDSEntryStore storeEntry:withError:]
  -[PDSEntryStore _permitTransitionFromState:toState:]
  -[PDSEntryStore deleteEntriesForUser:withState:withError:]
  -[PDSEntryStore .cxx_destruct]
  -[PDSEntryStore cache]
  -[PDSEntryStore updateAllEntriesWithState:toState:withError:]
  -[PDSEntryStore activeUsers]
  -[PDSEntryStore setDelegate:]
  -[PDSEntryStore deleteEntry:withError:]
  -[PDSEntryStore activeUsersWithClientID:]
  -[PDSEntryStore entries]
  -[PDSEntryStore updateEntryState:forUser:clientID:withError:]
  -[PDSEntryStore usersWithClientID:]
  -[PDSEntryStore delegate]
  -[PDSEntryStore hasPendingEntries]
  -[PDSEntryStore storeEntries:deleteEntries:withError:]
  -[PDSEntryStore entriesForUser:]
  -[PDSEntryStore entriesForUser:withClientID:]
  -[PDSEntryStore hasActiveEntries]
  -[PDSEntryStore initWithCache:]
  -[PDSEntryStore users]


PDSHeartbeatTracker : NSObject
 @property  IMTimer *heartbeatTimer
 @property  PDSBag *serverBag
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? kvStoreBlock
 @property  <PDSHeartbeatTrackerDelegate> *delegate
 @property  BOOL scheduledActivity
 @property  NSDate *trackedHeartbeatDate
 @property  BOOL isPassedTrackedHeartbeatDate

  // instance methods
  -[PDSHeartbeatTracker noteUpdatedHeartbeatTTL:]
  -[PDSHeartbeatTracker _handleHeartbeatFired]
  -[PDSHeartbeatTracker .cxx_destruct]
  -[PDSHeartbeatTracker setScheduledActivity:]
  -[PDSHeartbeatTracker noteShouldNotTrackHeartbeat]
  -[PDSHeartbeatTracker _markNextCheckpointTimeWithTTL:]
  -[PDSHeartbeatTracker trackedHeartbeatDate]
  -[PDSHeartbeatTracker setDelegate:]
  -[PDSHeartbeatTracker _setupMaintenanceActivity]
  -[PDSHeartbeatTracker setKvStoreBlock:]
  -[PDSHeartbeatTracker setQueue:]
  -[PDSHeartbeatTracker setServerBag:]
  -[PDSHeartbeatTracker initWithDelegate:queue:kvStoreBlock:serverBag:]
  -[PDSHeartbeatTracker kvStoreBlock]
  -[PDSHeartbeatTracker heartbeatTimer]
  -[PDSHeartbeatTracker delegate]
  -[PDSHeartbeatTracker queue]
  -[PDSHeartbeatTracker scheduledActivity]
  -[PDSHeartbeatTracker serverBag]
  -[PDSHeartbeatTracker isPassedTrackedHeartbeatDate]
  -[PDSHeartbeatTracker setHeartbeatTimer:]
  -[PDSHeartbeatTracker noteShouldTrackHeartbeat]


PDSCDCacheReferenceProxy : NSProxy
 @property  PDSCDCacheContainer *cacheContainer
 @property  NSPersistentContainer *persistentContainer

  // instance methods
  -[PDSCDCacheReferenceProxy persistentContainer]
  -[PDSCDCacheReferenceProxy conformsToProtocol:]
  -[PDSCDCacheReferenceProxy initWithCacheContainer:persistentContainer:]
  -[PDSCDCacheReferenceProxy .cxx_destruct]
  -[PDSCDCacheReferenceProxy forwardingTargetForSelector:]
  -[PDSCDCacheReferenceProxy setCacheContainer:]
  -[PDSCDCacheReferenceProxy cacheContainer]
  -[PDSCDCacheReferenceProxy setPersistentContainer:]


PDSCDCacheContainer : NSObject <PDSCDCache, PDSKVStore>
 @property  NSPersistentContainer *container
 @property  NSURL *containingPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PDSCDCacheContainer numberForKey:]
  -[PDSCDCacheContainer _updateEntryState:forUser:clientID:withError:]
  -[PDSCDCacheContainer _updateAllEntriesWithState:toState:withError:]
  -[PDSCDCacheContainer storeEntry:withError:]
  -[PDSCDCacheContainer loadAllActiveUsersForClientID:]
  -[PDSCDCacheContainer dataForKey:]
  -[PDSCDCacheContainer loadAllUsersForClientID:]
  -[PDSCDCacheContainer deleteEntriesForUser:withState:withError:]
  -[PDSCDCacheContainer loadPendingEntries]
  -[PDSCDCacheContainer storeEntry:transitionBlock:withError:]
  -[PDSCDCacheContainer container]
  -[PDSCDCacheContainer loadAllActiveUsers]
  -[PDSCDCacheContainer .cxx_destruct]
  -[PDSCDCacheContainer updateAllEntriesWithState:toState:withError:]
  -[PDSCDCacheContainer _cdRegistrationsMatchingEntry:inContext:]
  -[PDSCDCacheContainer _deleteEntry:context:withError:]
  -[PDSCDCacheContainer storeEntries:transitionBlock:deleteEntries:withError:]
  -[PDSCDCacheContainer setContainer:]
  -[PDSCDCacheContainer deleteEntry:withError:]
  -[PDSCDCacheContainer stringForKey:]
  -[PDSCDCacheContainer setString:forKey:]
  -[PDSCDCacheContainer loadAllEntriesUser:]
  -[PDSCDCacheContainer loadAllEntriesUser:withClientID:]
  -[PDSCDCacheContainer updateEntryState:forUser:clientID:withError:]
  -[PDSCDCacheContainer setNumber:forKey:]
  -[PDSCDCacheContainer _cdRegistrationsMatchingUser:withClientID:inContext:]
  -[PDSCDCacheContainer updateEntryState:forUser:withError:]
  -[PDSCDCacheContainer setContainingPath:]
  -[PDSCDCacheContainer _syncBlockWithContext:]
  -[PDSCDCacheContainer deleteCache]
  -[PDSCDCacheContainer _entriesFromRegistrations:inContext:]
  -[PDSCDCacheContainer _loadUsersIncludingOnlyActive:]
  -[PDSCDCacheContainer loadAllEntriesForClientID:]
  -[PDSCDCacheContainer setData:forKey:]
  -[PDSCDCacheContainer loadWithError:]
  -[PDSCDCacheContainer loadAllEntries]
  -[PDSCDCacheContainer containingPath]
  -[PDSCDCacheContainer _storeEntry:transitionBlock:context:withError:]
  -[PDSCDCacheContainer _usersForClientID:activeOnly:]
  -[PDSCDCacheContainer hasPendingEntries]
  -[PDSCDCacheContainer hasActiveEntries]
  -[PDSCDCacheContainer loadAllUsers]
  -[PDSCDCacheContainer _cdUsersMatchingUserID:userType:inContext:]
  -[PDSCDCacheContainer _KVEntryForKey:withBlock:]
  -[PDSCDCacheContainer allStoredValues]
  -[PDSCDCacheContainer initWithContainingPath:]


PDSResponse : NSObject
 @property  long long status
 @property  NSDictionary *statusByUser
 @property  long long ttl

  // instance methods
  -[PDSResponse ttl]
  -[PDSResponse .cxx_destruct]
  -[PDSResponse statusByUser]
  -[PDSResponse status]
  -[PDSResponse initWithStatus:statusByUser:ttl:]


PDSProtoGSTokenAuth : PBCodable <NSCopying>
 @property  NSString *gsAuthToken

  // instance methods
  -[PDSProtoGSTokenAuth mergeFrom:]
  -[PDSProtoGSTokenAuth setGsAuthToken:]
  -[PDSProtoGSTokenAuth .cxx_destruct]
  -[PDSProtoGSTokenAuth gsAuthToken]
  -[PDSProtoGSTokenAuth dictionaryRepresentation]
  -[PDSProtoGSTokenAuth writeTo:]
  -[PDSProtoGSTokenAuth isEqual:]
  -[PDSProtoGSTokenAuth copyTo:]
  -[PDSProtoGSTokenAuth readFrom:]
  -[PDSProtoGSTokenAuth copyWithZone:]


PDSCDKV : NSManagedObject
 @property  NSString *key
 @property  NSString *stringValue
 @property  NSNumber *numValue
 @property  NSData *dataValue

  // class methods
  +[PDSCDKV predicateForKey:]
  +[PDSCDKV fetchRequest]
  +[PDSCDKV insertIntoManagedObjectContext:]


PDSCDRegistration : NSManagedObject
 @property  NSString *qualifier
 @property  NSString *topic
 @property  NSString *clientID
 @property  short entryState
 @property  short environment
 @property  PDSCDUser *user

  // class methods
  +[PDSCDRegistration fetchRequest]
  +[PDSCDRegistration insertIntoManagedObjectContext:]
  +[PDSCDRegistration registrationsForClientID:]
  +[PDSCDRegistration pendingRegistrations]
  +[PDSCDRegistration activeRegistrations]
  +[PDSCDRegistration registrationFromEntry:insertIntoManagedObjectContext:]
  +[PDSCDRegistration registrationsWithState:]
  +[PDSCDRegistration activeRegistrationsForClientID:]
  +[PDSCDRegistration uniquenessPredicateForEntry:]

  // instance methods
  -[PDSCDRegistration entryWithUserCache:]


PDSRegisterMessage : FTIDSMessage
 @property  PDSProtoBatchRegisterReq *protoRequest
 @property  PDSProtoBatchRegisterResp *protoResponse
 @property  unsigned long regReason

  // instance methods
  -[PDSRegisterMessage additionalMessageHeaders]
  -[PDSRegisterMessage .cxx_destruct]
  -[PDSRegisterMessage requiresPushTokenKeys]
  -[PDSRegisterMessage parsedIDSMessageResult]
  -[PDSRegisterMessage messageBodyDataOverride]
  -[PDSRegisterMessage protoResponse]
  -[PDSRegisterMessage setRegReason:]
  -[PDSRegisterMessage hasRequiredKeys:]
  -[PDSRegisterMessage regReason]
  -[PDSRegisterMessage protoRequest]
  -[PDSRegisterMessage overrideContentType]
  -[PDSRegisterMessage wantsIDSProtocolVersion]
  -[PDSRegisterMessage handleResponseBody:]
  -[PDSRegisterMessage bagKey]
  -[PDSRegisterMessage setProtoResponse:]
  -[PDSRegisterMessage wantsClientInfo]
  -[PDSRegisterMessage anisetteHeadersTimeout]
  -[PDSRegisterMessage setProtoRequest:]
  -[PDSRegisterMessage wantsUDID]


PDSProtoBatchRegisterResp : PBCodable <NSCopying>
 @property  int status
 @property  BOOL hasMessage
 @property  NSString *message
 @property  NSMutableArray *userPushTokenRegResponses
 @property  BOOL hasResponseTtl
 @property  long long responseTtl
 @property  BOOL hasRetryInterval
 @property  long long retryInterval
 @property  BOOL hasServerTimestamp
 @property  long long serverTimestamp

  // class methods
  +[PDSProtoBatchRegisterResp userPushTokenRegResponsesType]

  // instance methods
  -[PDSProtoBatchRegisterResp serverTimestamp]
  -[PDSProtoBatchRegisterResp setServerTimestamp:]
  -[PDSProtoBatchRegisterResp hasServerTimestamp]
  -[PDSProtoBatchRegisterResp mergeFrom:]
  -[PDSProtoBatchRegisterResp clearUserPushTokenRegResponses]
  -[PDSProtoBatchRegisterResp setHasResponseTtl:]
  -[PDSProtoBatchRegisterResp userPushTokenRegResponses]
  -[PDSProtoBatchRegisterResp .cxx_destruct]
  -[PDSProtoBatchRegisterResp hasMessage]
  -[PDSProtoBatchRegisterResp setRetryInterval:]
  -[PDSProtoBatchRegisterResp setMessage:]
  -[PDSProtoBatchRegisterResp dictionaryRepresentation]
  -[PDSProtoBatchRegisterResp userPushTokenRegResponsesAtIndex:]
  -[PDSProtoBatchRegisterResp writeTo:]
  -[PDSProtoBatchRegisterResp responseTtl]
  -[PDSProtoBatchRegisterResp hasRetryInterval]
  -[PDSProtoBatchRegisterResp isEqual:]
  -[PDSProtoBatchRegisterResp copyTo:]
  -[PDSProtoBatchRegisterResp readFrom:]
  -[PDSProtoBatchRegisterResp message]
  -[PDSProtoBatchRegisterResp setHasRetryInterval:]
  -[PDSProtoBatchRegisterResp setResponseTtl:]
  -[PDSProtoBatchRegisterResp setHasServerTimestamp:]
  -[PDSProtoBatchRegisterResp hasResponseTtl]
  -[PDSProtoBatchRegisterResp status]
  -[PDSProtoBatchRegisterResp setUserPushTokenRegResponses:]
  -[PDSProtoBatchRegisterResp userPushTokenRegResponsesCount]
  -[PDSProtoBatchRegisterResp setStatus:]
  -[PDSProtoBatchRegisterResp addUserPushTokenRegResponses:]
  -[PDSProtoBatchRegisterResp copyWithZone:]
  -[PDSProtoBatchRegisterResp retryInterval]


PDSProtoUserPushTokenRegRequest : PBRequest <NSCopying>
 @property  PDSProtoUserPushToken *userPushToken
 @property  NSMutableArray *deviceInfos
 @property  BOOL hasTtl
 @property  long long ttl
 @property  NSMutableArray *topics

  // class methods
  +[PDSProtoUserPushTokenRegRequest deviceInfoType]
  +[PDSProtoUserPushTokenRegRequest topicType]

  // instance methods
  -[PDSProtoUserPushTokenRegRequest setHasTtl:]
  -[PDSProtoUserPushTokenRegRequest addDeviceInfo:]
  -[PDSProtoUserPushTokenRegRequest ttl]
  -[PDSProtoUserPushTokenRegRequest clearTopics]
  -[PDSProtoUserPushTokenRegRequest mergeFrom:]
  -[PDSProtoUserPushTokenRegRequest setUserPushToken:]
  -[PDSProtoUserPushTokenRegRequest userPushToken]
  -[PDSProtoUserPushTokenRegRequest setTopics:]
  -[PDSProtoUserPushTokenRegRequest hasTtl]
  -[PDSProtoUserPushTokenRegRequest .cxx_destruct]
  -[PDSProtoUserPushTokenRegRequest dictionaryRepresentation]
  -[PDSProtoUserPushTokenRegRequest writeTo:]
  -[PDSProtoUserPushTokenRegRequest isEqual:]
  -[PDSProtoUserPushTokenRegRequest copyTo:]
  -[PDSProtoUserPushTokenRegRequest topicAtIndex:]
  -[PDSProtoUserPushTokenRegRequest readFrom:]
  -[PDSProtoUserPushTokenRegRequest setTtl:]
  -[PDSProtoUserPushTokenRegRequest setDeviceInfos:]
  -[PDSProtoUserPushTokenRegRequest topicsCount]
  -[PDSProtoUserPushTokenRegRequest topics]
  -[PDSProtoUserPushTokenRegRequest deviceInfosCount]
  -[PDSProtoUserPushTokenRegRequest copyWithZone:]
  -[PDSProtoUserPushTokenRegRequest deviceInfoAtIndex:]
  -[PDSProtoUserPushTokenRegRequest deviceInfos]
  -[PDSProtoUserPushTokenRegRequest clearDeviceInfos]
  -[PDSProtoUserPushTokenRegRequest addTopic:]


PDSCDUser : NSManagedObject
 @property  NSString *userID
 @property  short userType
 @property  NSSet *registrations

  // class methods
  +[PDSCDUser fetchRequest]
  +[PDSCDUser predicateForUserID:userType:]
  +[PDSCDUser userFromUser:insertIntoManagedObjectContext:]
  +[PDSCDUser insertIntoManagedObjectContext:]

  // instance methods
  -[PDSCDUser user]


PDSDaemonListener : NSObject <PDSRemote>
 @property  NSArray *clientIDs
 @property  PDSEntryStore *entryStore
 @property  PDSUserTracker *userTracker
 @property  BOOL bypassClientIDCheck

  // instance methods
  -[PDSDaemonListener storeEntries:deleteEntries:withCompletion:]
  -[PDSDaemonListener entryStore]
  -[PDSDaemonListener .cxx_destruct]
  -[PDSDaemonListener clientIDs]
  -[PDSDaemonListener bypassClientIDCheck]
  -[PDSDaemonListener usersWithClientID:withCompletion:]
  -[PDSDaemonListener entriesForClientID:withCompletion:]
  -[PDSDaemonListener setEntryStore:]
  -[PDSDaemonListener initWithEntryStore:userTracker:]
  -[PDSDaemonListener entriesForUser:clientID:withCompletion:]
  -[PDSDaemonListener batchUpdateEntries:forClientID:withCompletion:]
  -[PDSDaemonListener initWithClientIDs:entryStore:userTracker:]
  -[PDSDaemonListener activeUsersWithClientID:withCompletion:]
  -[PDSDaemonListener setUserTracker:]
  -[PDSDaemonListener setClientIDs:]
  -[PDSDaemonListener userTracker]
  -[PDSDaemonListener removeAllEntriesForUser:withClientID:withCompletion:]


PDSProtoUserPushTokenRegResponse : PBCodable <NSCopying>
 @property  PDSProtoUserPushToken *userPushToken
 @property  int status
 @property  BOOL hasMessage
 @property  NSString *message

  // instance methods
  -[PDSProtoUserPushTokenRegResponse mergeFrom:]
  -[PDSProtoUserPushTokenRegResponse setUserPushToken:]
  -[PDSProtoUserPushTokenRegResponse userPushToken]
  -[PDSProtoUserPushTokenRegResponse .cxx_destruct]
  -[PDSProtoUserPushTokenRegResponse hasMessage]
  -[PDSProtoUserPushTokenRegResponse setMessage:]
  -[PDSProtoUserPushTokenRegResponse dictionaryRepresentation]
  -[PDSProtoUserPushTokenRegResponse writeTo:]
  -[PDSProtoUserPushTokenRegResponse isEqual:]
  -[PDSProtoUserPushTokenRegResponse copyTo:]
  -[PDSProtoUserPushTokenRegResponse readFrom:]
  -[PDSProtoUserPushTokenRegResponse message]
  -[PDSProtoUserPushTokenRegResponse status]
  -[PDSProtoUserPushTokenRegResponse setStatus:]
  -[PDSProtoUserPushTokenRegResponse copyWithZone:]


PDSRequest : NSObject
 @property  NSSet *entries
 @property  PDSRequestInfo *requestInfo

  // instance methods
  -[PDSRequest initWithEntries:requestInfo:]
  -[PDSRequest .cxx_destruct]
  -[PDSRequest setRequestInfo:]
  -[PDSRequest isEqual:]
  -[PDSRequest isEqualToRequest:]
  -[PDSRequest entries]
  -[PDSRequest requestInfo]


PDSXPCAdapter(PDSListener)
	// class methods
	+[PDSXPCAdapter(PDSListener) defaultListenerVendor]

	// instance methods
	-[PDSXPCAdapter(PDSListener) listenerForMachService:]

NSUserDefaults(PDSKVStore)
	// instance methods
	-[NSUserDefaults(PDSKVStore) numberForKey:]
	-[NSUserDefaults(PDSKVStore) setString:forKey:]
	-[NSUserDefaults(PDSKVStore) setNumber:forKey:]
	-[NSUserDefaults(PDSKVStore) setData:forKey:]
	-[NSUserDefaults(PDSKVStore) allStoredValues]

01 00 0800 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0500 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 0200 /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities: CUTDeferredTaskQueue 
01 00 0400 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTIDSMessage 
01 00 0400 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTMessageDelivery_HTTP 
01 00 0600 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSAutoBugCapture 
01 00 0600 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSCoreAnalyticsLogger 
01 00 0600 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSPushHandler 
01 00 0600 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSServerBag 
01 00 0300 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMDeviceSupport 
01 00 0300 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMSystemMonitor 
01 00 0300 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMTimer 
01 00 0300 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMUserDefaults 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentContainer 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreDescription 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0100 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0100 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBRequest 
01 00 0900 /System/Library/PrivateFrameworks/PDS.framework/PDS: PDSEntry 
01 00 0900 /System/Library/PrivateFrameworks/PDS.framework/PDS: PDSRegistration 
01 00 0600 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: PDSRegistrationAbandonedMetric 
01 00 0900 /System/Library/PrivateFrameworks/PDS.framework/PDS: PDSRemoteRegistry 
01 00 0900 /System/Library/PrivateFrameworks/PDS.framework/PDS: PDSUser 
01 00 0900 /System/Library/PrivateFrameworks/PDS.framework/PDS: PDSXPCAdapter 
01 00 0900 /System/Library/PrivateFrameworks/PDS.framework/PDS: PDSXPCInterface 
