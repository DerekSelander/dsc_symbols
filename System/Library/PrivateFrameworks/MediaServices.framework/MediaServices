|| __DATA.__data _MSVOPACKDecoderErrorDomain
|| __DATA.__objc_data _OBJC_CLASS_$_MSVArtworkService
|| __DATA.__objc_data _OBJC_CLASS_$_MSVArtworkServiceOperation
|| __DATA.__objc_data _OBJC_CLASS_$_MSVAsyncOperation
|| __DATA.__objc_data _OBJC_CLASS_$_MSVCLICommand
|| __DATA.__objc_data _OBJC_CLASS_$_MSVCLICommandInterpreter
|| __DATA.__objc_data _OBJC_CLASS_$_MSVFileBufferedPipe
|| __DATA.__objc_data _OBJC_CLASS_$_MSVFinally
|| __DATA.__objc_data _OBJC_CLASS_$_MSVLyricsAgent
|| __DATA.__objc_data _OBJC_CLASS_$_MSVLyricsElement
|| __DATA.__objc_data _OBJC_CLASS_$_MSVLyricsLine
|| __DATA.__objc_data _OBJC_CLASS_$_MSVLyricsSection
|| __DATA.__objc_data _OBJC_CLASS_$_MSVLyricsSongInfo
|| __DATA.__objc_data _OBJC_CLASS_$_MSVLyricsSongWriter
|| __DATA.__objc_data _OBJC_CLASS_$_MSVLyricsTextElement
|| __DATA.__objc_data _OBJC_CLASS_$_MSVLyricsTranslation
|| __DATA.__objc_data _OBJC_CLASS_$_MSVLyricsTranslationText
|| __DATA.__objc_data _OBJC_CLASS_$_MSVLyricsWord
|| __DATA.__objc_data _OBJC_CLASS_$_MSVLyricsXMLElement
|| __DATA.__objc_data _OBJC_CLASS_$_MSVMessageParser
|| __DATA.__objc_data _OBJC_CLASS_$_MSVOPACKDecoder
|| __DATA.__objc_data _OBJC_CLASS_$_MSVOPACKEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MSVPersistentTimer
|| __DATA.__objc_data _OBJC_CLASS_$_MSVPropertyListEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MSVSegmentedCodingPackage
|| __DATA.__objc_data _OBJC_CLASS_$_MSVSegmentedDecoder
|| __DATA.__objc_data _OBJC_CLASS_$_MSVSegmentedEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MSVStreamReader
|| __DATA.__objc_data _OBJC_CLASS_$_MSVStreamWriter
|| __DATA.__objc_data _OBJC_CLASS_$_MSVSystemDialog
|| __DATA.__objc_data _OBJC_CLASS_$_MSVSystemDialogOptions
|| __DATA.__objc_data _OBJC_CLASS_$_MSVSystemDialogResponse
|| __DATA.__objc_data _OBJC_CLASS_$_MSVSystemDialogTextField
|| __DATA.__objc_data _OBJC_CLASS_$_MSVWatchdog
|| __DATA.__objc_data _OBJC_CLASS_$_MSVZipArchive
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVArtworkService
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVArtworkServiceOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVAsyncOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVCLICommand
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVCLICommandInterpreter
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVFileBufferedPipe
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVFinally
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVLyricsAgent
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVLyricsElement
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVLyricsLine
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVLyricsSection
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVLyricsSongInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVLyricsSongWriter
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVLyricsTextElement
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVLyricsTranslation
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVLyricsTranslationText
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVLyricsWord
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVLyricsXMLElement
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVMessageParser
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVOPACKDecoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVOPACKEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVPersistentTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVSegmentedCodingPackage
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVSegmentedDecoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVSegmentedEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVStreamReader
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVStreamWriter
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVSystemDialog
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVSystemDialogOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVSystemDialogResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVSystemDialogTextField
|| __DATA.__objc_data _OBJC_METACLASS_$_MSVZipArchive
|| __DATA_CONST.__const _MSVArtworkServiceErrorDomain
|| __DATA_CONST.__const _MSVErrorDomain
|| __DATA_CONST.__const _MSVLyricsTTMLParserErrorDomain
|| __DATA_CONST.__const _MSVSegmentCodingPackageInfoKeyPackageTypeIdentifier
|| __DATA_CONST.__const _MSVStreamReaderErrorDomain
|| __DATA_CONST.__const _MSVStreamWriterErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVArtworkServiceConversionRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVArtworkServiceRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVArtworkServiceResizeRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVArtworkServiceResizeRequestDestination
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVBidirectionalDictionary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVBlockGuard
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVBloomFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVCallback
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVDistributedNotificationObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVEntitlementUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVLRUDictionary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVLyricsTTMLParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVMultiCallback
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVMutableBidirectionalDictionary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVPair
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVTaskAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVTimer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVXPCTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVArtworkServiceConversionRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVArtworkServiceRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVArtworkServiceResizeRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVArtworkServiceResizeRequestDestination
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVBidirectionalDictionary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVBlockGuard
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVBloomFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVCallback
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVDistributedNotificationObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVEntitlementUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVLRUDictionary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVLyricsTTMLParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVMultiCallback
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVMutableBidirectionalDictionary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVPair
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVPropertyListEncoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVTaskAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVWatchdog
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVXPCTransaction
|| __TEXT.__const _MSVImageUtilitiesDefaultImageCompressionQuality
|| __TEXT.__const _MSVSignedRangeNotFound
|| __TEXT.__const _MSVSignedRangeZero
|| __TEXT.__text _MSVArchivedDataWithRootObject
|| __TEXT.__text _MSVBundleIDForPID
|| __TEXT.__text _MSVCLIPrint
|| __TEXT.__text _MSVCLIPrintErr
|| __TEXT.__text _MSVCLIPrompt
|| __TEXT.__text _MSVCLIStartMainRunLoop
|| __TEXT.__text _MSVCLIStopMainRunLoop
|| __TEXT.__text _MSVCopyDeviceName
|| __TEXT.__text _MSVCopyDeviceUniqueIdentifier
|| __TEXT.__text _MSVCopyLocalizedModelName
|| __TEXT.__text _MSVCopySystemBuildVersion
|| __TEXT.__text _MSVCreateTemporaryFileHandle
|| __TEXT.__text _MSVCryptoDigestForContentsOfFile
|| __TEXT.__text _MSVCryptoDigestForContentsOfInputStream
|| __TEXT.__text _MSVCryptoDigestForData
|| __TEXT.__text _MSVCryptoDigestForString
|| __TEXT.__text _MSVCryptoUtilitiesHexStringFromDigest
|| __TEXT.__text _MSVDeviceHasCellularBaseband
|| __TEXT.__text _MSVDeviceIsAppleTV
|| __TEXT.__text _MSVDeviceIsAudioAccessory
|| __TEXT.__text _MSVDeviceIsiPad
|| __TEXT.__text _MSVDeviceOSHasInternalDiagnostics
|| __TEXT.__text _MSVDeviceOSIsInternalInstall
|| __TEXT.__text _MSVDevicePPTTestsAreInProgress
|| __TEXT.__text _MSVDeviceSupportsDelegatedIdentities
|| __TEXT.__text _MSVDeviceSupportsExtendedColorDisplay
|| __TEXT.__text _MSVDeviceSupportsMultipleLibraries
|| __TEXT.__text _MSVDiagnoseSecureCodingClassesWithPrefix
|| __TEXT.__text _MSVFrameworkExists
|| __TEXT.__text _MSVGetMaximumScreenScale
|| __TEXT.__text _MSVGetMaximumScreenSize
|| __TEXT.__text _MSVGzipCompressData
|| __TEXT.__text _MSVGzipCompressFile
|| __TEXT.__text _MSVGzipDecompressData
|| __TEXT.__text _MSVGzipDecompressFile
|| __TEXT.__text _MSVImageUtilitiesAddImageToDestination
|| __TEXT.__text _MSVImageUtilitiesAddJPEGToDestination
|| __TEXT.__text _MSVImageUtilitiesAddSourceImageToDestination
|| __TEXT.__text _MSVImageUtilitiesAddSourceImageToJPEGDestination
|| __TEXT.__text _MSVImageUtilitiesCopyUTTypeForImage
|| __TEXT.__text _MSVImageUtilitiesCopyUTTypeForImageFormat
|| __TEXT.__text _MSVImageUtilitiesCreateDataImageDestination
|| __TEXT.__text _MSVImageUtilitiesCreateFileImageDestination
|| __TEXT.__text _MSVImageUtilitiesCreateImageFromSource
|| __TEXT.__text _MSVImageUtilitiesCreateImageSource
|| __TEXT.__text _MSVImageUtilitiesImageFormatSupportsTransparency
|| __TEXT.__text _MSVImageUtilitiesMakeBoundingBoxSize
|| __TEXT.__text _MSVImageUtilitiesResizeSourceImageToDestination
|| __TEXT.__text _MSVImageUtilitiesResizeSourceImageToJPEGDestination
|| __TEXT.__text _MSVKeychainCopyKeychainValue
|| __TEXT.__text _MSVKeychainSetKeychainValue
|| __TEXT.__text _MSVLaunchApplication
|| __TEXT.__text _MSVLaunchApplicationWithOptions
|| __TEXT.__text _MSVMediaLoggingDirectory
|| __TEXT.__text _MSVMobileHomeDirectory
|| __TEXT.__text _MSVProcessIDForApplication
|| __TEXT.__text _MSVProcessIsRunning
|| __TEXT.__text _MSVProcessNameForPID
|| __TEXT.__text _MSVPropertyListDataClasses
|| __TEXT.__text _MSVReplacementRangeForRanges
|| __TEXT.__text _MSVSignedIntersectionRange
|| __TEXT.__text _MSVSignedRangeFromString
|| __TEXT.__text _MSVSignedSubtractedRange
|| __TEXT.__text _MSVSignedUnionRange
|| __TEXT.__text _MSVSystemRootDirectory
|| __TEXT.__text _MSVUnarchivedObjectOfClass
|| __TEXT.__text _MSVUnarchivedObjectOfClasses
|| __TEXT.__text _MSVWeakLinkClass
|| __TEXT.__text _MSVWeakLinkProtocol
|| __TEXT.__text _MSVWeakLinkStringConstant
|| __TEXT.__text _MSVWeakLinkSymbol
|| __TEXT.__text _NSStringFromMSVSignedRange
|| __TEXT.__text _msv_class_getSubclasses
|| __TEXT.__text _msv_dispatch_async_on_queue
|| __TEXT.__text _msv_dispatch_barrier_async_on_queue
|| __TEXT.__text _msv_dispatch_sync_on_queue
__ AppSupport: _CPLoggingCopyLogDirectory
__ BackBoardServices: _BKSApplicationStateAll
__ BackBoardServices: _BKSApplicationStateDisplayIDKey
__ BackBoardServices: _BKSApplicationStateProcessIDKey
__ BackBoardServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ BackBoardServices: _OBJC_CLASS_$_BKSProcessAssertion
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFBitVectorCreate
__ CoreFoundation: _CFBitVectorCreateMutable
__ CoreFoundation: _CFBitVectorCreateMutableCopy
__ CoreFoundation: _CFBitVectorGetBitAtIndex
__ CoreFoundation: _CFBitVectorGetBits
__ CoreFoundation: _CFBitVectorGetCountOfBit
__ CoreFoundation: _CFBitVectorSetBitAtIndex
__ CoreFoundation: _CFBitVectorSetCount
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFCharacterSetCreateWithCharactersInString
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFReadStreamSetDispatchQueue
__ CoreFoundation: _CFReadStreamSignalEvent
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopRun
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopStop
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFStringCreateExternalRepresentation
__ CoreFoundation: _CFStringCreateWithCharactersNoCopy
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringFindCharacterFromSet
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetIntValue
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _CFUserNotificationGetResponseDictionary
__ CoreFoundation: _CFWriteStreamSetDispatchQueue
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSStream
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: __NSIsNSArray
__ CoreFoundation: __NSIsNSData
__ CoreFoundation: __NSIsNSDate
__ CoreFoundation: __NSIsNSDictionary
__ CoreFoundation: __NSIsNSNumber
__ CoreFoundation: __NSIsNSSet
__ CoreFoundation: __NSIsNSString
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationIconURLKey
__ CoreFoundation: _kCFUserNotificationKeyboardTypesKey
__ CoreFoundation: _kCFUserNotificationTextFieldTitlesKey
__ CoreFoundation: _kCFUserNotificationTextFieldValuesKey
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetProperty
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGSizeZero
__ CoreUtils: _NSErrorWithOSStatusF
__ CoreUtils: _OPACKDecodeData
__ CoreUtils: _OPACKEncoderCreateData
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSGlobalDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSMapGet
__ Foundation: _NSMapInsert
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSProtocolFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPipe
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXMLParser
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSCoder
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPayloadOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationAddImageFromSource
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateThumbnailAtIndex
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _kCGImageDestinationImageMaxPixelSize
__ ImageIO: _kCGImageDestinationLossyCompressionQuality
__ ImageIO: _kCGImageDestinationUseHardwareAcceleration
__ ImageIO: _kCGImagePropertyASTCBlockSize
__ ImageIO: _kCGImagePropertyASTCEncoder
__ ImageIO: _kCGImagePropertyASTCPreTwiddle
__ ImageIO: _kCGImagePropertyASTCUseLZFSE
__ ImageIO: _kCGImagePropertyEncoder
__ ImageIO: _kCGImageSourceCreateThumbnailFromImageAlways
__ ImageIO: _kCGImageSourceShouldCache
__ ImageIO: _kCGImageSourceThumbnailMaxPixelSize
__ PersistentConnection: _OBJC_CLASS_$_PCPersistentTimer
__ ProtocolBuffer: _PBDataWriterWriteBareVarint
__ ProtocolBuffer: _PBReaderReadVarIntBuf
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleWhenUnlocked
__ Security: _kSecAttrAccount
__ Security: _kSecAttrService
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecReturnData
__ Security: _kSecUseSystemKeychain
__ Security: _kSecValueData
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGCopyAnswerWithError
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _CC_MD5_Final
__ libSystem.B.dylib: _CC_MD5_Init
__ libSystem.B.dylib: _CC_MD5_Update
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _CC_SHA256_Final
__ libSystem.B.dylib: _CC_SHA256_Init
__ libSystem.B.dylib: _CC_SHA256_Update
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___sprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___stdinp
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_read
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __dispatch_source_type_write
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_wait
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fgets
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _mkstemp
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _pthread_main_np
__ libSystem.B.dylib: _signal
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strndup
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _write
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_copyMethodList
__ libobjc.A.dylib: _class_getClassMethod
__ libobjc.A.dylib: _class_getName
__ libobjc.A.dylib: _class_getSuperclass
__ libobjc.A.dylib: _method_getName
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyClassList
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClassList
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
__ libobjc.A.dylib: _object_getClassName
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
__ libz.1.dylib: _deflateInit_
__ libz.1.dylib: _gzclose
__ libz.1.dylib: _gzopen
__ libz.1.dylib: _gzread
__ libz.1.dylib: _gzwrite
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
__ libz.1.dylib: _inflateInit_
MSVLyricsTTMLParser : NSObject /usr/lib/libSystem.B.dylib <NSXMLParserDelegate>
 @property  NSData *ttmlData
 @property  NSInputStream *inputStream
 @property  NSObject<OS_dispatch_queue> *parseQueue
 @property  MSVLyricsSongInfo *lyricsInfo
 @property  NSError *parserError
 @property  NSMutableArray *elementStack
 @property  NSMutableArray *lyricLines
 @property  MSVLyricsTextElement *currentTextElement
 @property  NSMutableDictionary *translationsMap
 @property  double currentStartTime
 @property  BOOL linesAreSortedByStartTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSVLyricsTTMLParser .cxx_destruct]
  -[MSVLyricsTTMLParser parser:foundCharacters:]
  -[MSVLyricsTTMLParser parser:didEndElement:namespaceURI:qualifiedName:]
  -[MSVLyricsTTMLParser parser:didStartElement:namespaceURI:qualifiedName:attributes:]
  -[MSVLyricsTTMLParser parser:parseErrorOccurred:]
  -[MSVLyricsTTMLParser parserError]
  -[MSVLyricsTTMLParser inputStream]
  -[MSVLyricsTTMLParser setInputStream:]
  -[MSVLyricsTTMLParser initWithTTMLStream:]
  -[MSVLyricsTTMLParser setLinesAreSortedByStartTime:]
  -[MSVLyricsTTMLParser setCurrentStartTime:]
  -[MSVLyricsTTMLParser elementStack]
  -[MSVLyricsTTMLParser lyricLines]
  -[MSVLyricsTTMLParser translationsMap]
  -[MSVLyricsTTMLParser lyricsInfo]
  -[MSVLyricsTTMLParser setTranslationsMap:]
  -[MSVLyricsTTMLParser parseQueue]
  -[MSVLyricsTTMLParser parseWithError:]
  -[MSVLyricsTTMLParser setLyricsInfo:]
  -[MSVLyricsTTMLParser currentStartTime]
  -[MSVLyricsTTMLParser setCurrentTextElement:]
  -[MSVLyricsTTMLParser linesAreSortedByStartTime]
  -[MSVLyricsTTMLParser currentTextElement]
  -[MSVLyricsTTMLParser setParserError:]
  -[MSVLyricsTTMLParser initWithTTMLData:]
  -[MSVLyricsTTMLParser parseWithCompletion:]
  -[MSVLyricsTTMLParser ttmlData]
  -[MSVLyricsTTMLParser setTtmlData:]
  -[MSVLyricsTTMLParser setParseQueue:]
  -[MSVLyricsTTMLParser setElementStack:]
  -[MSVLyricsTTMLParser setLyricLines:]


MSVBidirectionalDictionary : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, NSSecureCoding>
  // class methods
  +[MSVBidirectionalDictionary supportsSecureCoding]
  +[MSVBidirectionalDictionary bidirectionalDictionary]

  // instance methods
  -[MSVBidirectionalDictionary init]
  -[MSVBidirectionalDictionary isEqual:]
  -[MSVBidirectionalDictionary copyWithZone:]
  -[MSVBidirectionalDictionary mutableCopyWithZone:]
  -[MSVBidirectionalDictionary allKeys]
  -[MSVBidirectionalDictionary objectForKey:]
  -[MSVBidirectionalDictionary encodeWithCoder:]
  -[MSVBidirectionalDictionary initWithCoder:]
  -[MSVBidirectionalDictionary .cxx_destruct]
  -[MSVBidirectionalDictionary keyForObject:]


MSVMutableBidirectionalDictionary : MSVBidirectionalDictionary
  // instance methods
  -[MSVMutableBidirectionalDictionary removeAllObjects]
  -[MSVMutableBidirectionalDictionary removeObjectForKey:]
  -[MSVMutableBidirectionalDictionary setObject:forKey:]
  -[MSVMutableBidirectionalDictionary setKey:forObject:]
  -[MSVMutableBidirectionalDictionary removeKeyForObject:]


MSVArtworkServiceResizeOperation : MSVArtworkServiceOperation
  // instance methods
  -[MSVArtworkServiceResizeOperation main]


MSVArtworkServiceConversionOperation : MSVArtworkServiceOperation
  // instance methods
  -[MSVArtworkServiceConversionOperation main]


MSVArtworkServiceRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  Class operationClass
 @property  long long operationPriority

  // class methods
  +[MSVArtworkServiceRequest supportsSecureCoding]

  // instance methods
  -[MSVArtworkServiceRequest encodeWithCoder:]
  -[MSVArtworkServiceRequest initWithCoder:]
  -[MSVArtworkServiceRequest operationClass]
  -[MSVArtworkServiceRequest operationPriority]


MSVTaskAssertion : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *bundleID
 @property  int pid
 @property  BOOL valid
 @property  NSString *name

  // instance methods
  -[MSVTaskAssertion init]
  -[MSVTaskAssertion dealloc]
  -[MSVTaskAssertion name]
  -[MSVTaskAssertion invalidate]
  -[MSVTaskAssertion isValid]
  -[MSVTaskAssertion .cxx_destruct]
  -[MSVTaskAssertion bundleID]
  -[MSVTaskAssertion pid]
  -[MSVTaskAssertion _BSKFlagsForMSVFlags:]
  -[MSVTaskAssertion _BSKReasonForMSVReason:]
  -[MSVTaskAssertion _initWithName:bundleID:pid:subsystem:reason:flags:]
  -[MSVTaskAssertion initWithName:bundleID:subsystem:reason:flags:]
  -[MSVTaskAssertion initWithName:pid:subsystem:reason:flags:]
  -[MSVTaskAssertion _cancelInvalidationTimerWithCompletion:]
  -[MSVTaskAssertion invalidateOnDate:]


MSVSegmentedEncoder : NSCoder /System/Library/Frameworks/ImageIO.framework/ImageIO
 @property  BOOL hasFinished
 @property  MSVSegmentedCodingPackage *package
 @property  <MSVSegmentedCoding> *rootObject
 @property  NSMutableDictionary *subcoders
 @property  NSDictionary *userInfo

  // instance methods
  -[MSVSegmentedEncoder userInfo]
  -[MSVSegmentedEncoder encodeInt64:forKey:]
  -[MSVSegmentedEncoder encodeObject:forKey:]
  -[MSVSegmentedEncoder encodeBool:forKey:]
  -[MSVSegmentedEncoder .cxx_destruct]
  -[MSVSegmentedEncoder encodeBytes:length:forKey:]
  -[MSVSegmentedEncoder encodeInt32:forKey:]
  -[MSVSegmentedEncoder encodeRootObject:]
  -[MSVSegmentedEncoder encodeInt:forKey:]
  -[MSVSegmentedEncoder encodeDouble:forKey:]
  -[MSVSegmentedEncoder encodeFloat:forKey:]
  -[MSVSegmentedEncoder finishEncoding]
  -[MSVSegmentedEncoder setUserInfo:]
  -[MSVSegmentedEncoder setRootObject:]
  -[MSVSegmentedEncoder rootObject]
  -[MSVSegmentedEncoder setPackage:]
  -[MSVSegmentedEncoder package]
  -[MSVSegmentedEncoder initWithCodingPackage:userInfo:]
  -[MSVSegmentedEncoder hasFinished]
  -[MSVSegmentedEncoder setHasFinished:]
  -[MSVSegmentedEncoder _coderForKey:]
  -[MSVSegmentedEncoder msv_setUserInfo:]
  -[MSVSegmentedEncoder initWithCodingPackage:]
  -[MSVSegmentedEncoder msv_userInfo]
  -[MSVSegmentedEncoder subcoders]
  -[MSVSegmentedEncoder setSubcoders:]


MSVSegmentedDecoder : NSCoder /System/Library/Frameworks/ImageIO.framework/ImageIO
 @property  MSVSegmentedCodingPackage *package
 @property  Class rootClass
 @property  NSArray *subcoders
 @property  NSDictionary *userInfo

  // class methods
  +[MSVSegmentedDecoder decodedObjectOfClass:fromPackage:userInfo:error:]
  +[MSVSegmentedDecoder decodedObjectOfClasses:fromPackage:userInfo:error:]
  +[MSVSegmentedDecoder decodedObjectOfClass:fromPackage:error:]
  +[MSVSegmentedDecoder decodedObjectOfClasses:fromPackage:error:]

  // instance methods
  -[MSVSegmentedDecoder userInfo]
  -[MSVSegmentedDecoder .cxx_destruct]
  -[MSVSegmentedDecoder decodeBytesForKey:returnedLength:]
  -[MSVSegmentedDecoder decodeInt64ForKey:]
  -[MSVSegmentedDecoder decodeObjectOfClasses:forKey:]
  -[MSVSegmentedDecoder containsValueForKey:]
  -[MSVSegmentedDecoder decodeInt32ForKey:]
  -[MSVSegmentedDecoder decodeIntForKey:]
  -[MSVSegmentedDecoder decodeDoubleForKey:]
  -[MSVSegmentedDecoder decodeBoolForKey:]
  -[MSVSegmentedDecoder decodeFloatForKey:]
  -[MSVSegmentedDecoder setUserInfo:]
  -[MSVSegmentedDecoder setPackage:]
  -[MSVSegmentedDecoder package]
  -[MSVSegmentedDecoder _coderForKey:]
  -[MSVSegmentedDecoder msv_setUserInfo:]
  -[MSVSegmentedDecoder msv_userInfo]
  -[MSVSegmentedDecoder subcoders]
  -[MSVSegmentedDecoder setSubcoders:]
  -[MSVSegmentedDecoder initWithCodingPackage:userInfo:error:]
  -[MSVSegmentedDecoder decodeRootObjectOfClasses:error:]
  -[MSVSegmentedDecoder initWithCodingPackage:error:]
  -[MSVSegmentedDecoder rootClass]
  -[MSVSegmentedDecoder setRootClass:]


MSVSegmentedCodingPackage : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *packageURL
 @property  NSMutableDictionary *segmentEncoderMap
 @property  NSMutableDictionary *infoDictionary
 @property  Class archivedClass
 @property  NSDictionary *allVersions

  // class methods
  +[MSVSegmentedCodingPackage packageTypeIdentifier]

  // instance methods
  -[MSVSegmentedCodingPackage initWithURL:]
  -[MSVSegmentedCodingPackage .cxx_destruct]
  -[MSVSegmentedCodingPackage infoDictionary]
  -[MSVSegmentedCodingPackage setInfoDictionary:]
  -[MSVSegmentedCodingPackage reset]
  -[MSVSegmentedCodingPackage deleteWithError:]
  -[MSVSegmentedCodingPackage setArchivedClass:]
  -[MSVSegmentedCodingPackage encoderForSegment:version:]
  -[MSVSegmentedCodingPackage archivedClass]
  -[MSVSegmentedCodingPackage decodersWithError:]
  -[MSVSegmentedCodingPackage allVersions]
  -[MSVSegmentedCodingPackage coderTypeForSegment:]
  -[MSVSegmentedCodingPackage writeWithError:]
  -[MSVSegmentedCodingPackage setNeedsInfoDictionaryUpdate]
  -[MSVSegmentedCodingPackage saveWithError:]
  -[MSVSegmentedCodingPackage packageURL]
  -[MSVSegmentedCodingPackage setPackageURL:]
  -[MSVSegmentedCodingPackage segmentEncoderMap]
  -[MSVSegmentedCodingPackage setSegmentEncoderMap:]


MSVArtworkServiceOperation : NSOperation /System/Library/Frameworks/ImageIO.framework/ImageIO
 @property  MSVArtworkServiceRequest *request
 @property  NSError *operationError
 @property  NSString *debugMessage

  // instance methods
  -[MSVArtworkServiceOperation .cxx_destruct]
  -[MSVArtworkServiceOperation request]
  -[MSVArtworkServiceOperation operationError]
  -[MSVArtworkServiceOperation setOperationError:]
  -[MSVArtworkServiceOperation setDebugMessage:]
  -[MSVArtworkServiceOperation initWithArtworkRequest:]
  -[MSVArtworkServiceOperation debugMessage]


MSVDistributedNotificationObserver : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *distributedName
 @property  NSString *localName
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <MSVDistributedNotificationObserverDelegate> *delegate
 @property  NSDictionary *userInfoForLocalNotification

  // class methods
  +[MSVDistributedNotificationObserver observerWithDistributedName:localName:queue:]

  // instance methods
  -[MSVDistributedNotificationObserver init]
  -[MSVDistributedNotificationObserver dealloc]
  -[MSVDistributedNotificationObserver queue]
  -[MSVDistributedNotificationObserver notifyToken]
  -[MSVDistributedNotificationObserver delegate]
  -[MSVDistributedNotificationObserver setDelegate:]
  -[MSVDistributedNotificationObserver .cxx_destruct]
  -[MSVDistributedNotificationObserver localName]
  -[MSVDistributedNotificationObserver initWithDistributedName:localName:queue:]
  -[MSVDistributedNotificationObserver _handleDistributedNotificationWithNotifyToken:]
  -[MSVDistributedNotificationObserver userInfoForLocalNotification]
  -[MSVDistributedNotificationObserver distributedName]
  -[MSVDistributedNotificationObserver setUserInfoForLocalNotification:]


MSVLyricsSongInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  long long type
 @property  double songDuration
 @property  NSArray *songwriters
 @property  NSString *lyricGenId
 @property  NSString *language
 @property  NSArray *lyricsSections
 @property  NSArray *lyricsLines
 @property  NSDictionary *translationsMap
 @property  NSArray *availableTranslations

  // class methods
  +[MSVLyricsSongInfo _elementsInArray:atTimeOffset:errorMargin:]
  +[MSVLyricsSongInfo _descriptionForLyricsInfoType:]

  // instance methods
  -[MSVLyricsSongInfo init]
  -[MSVLyricsSongInfo type]
  -[MSVLyricsSongInfo setType:]
  -[MSVLyricsSongInfo .cxx_destruct]
  -[MSVLyricsSongInfo language]
  -[MSVLyricsSongInfo setLanguage:]
  -[MSVLyricsSongInfo translationsMap]
  -[MSVLyricsSongInfo setTranslationsMap:]
  -[MSVLyricsSongInfo setSongDuration:]
  -[MSVLyricsSongInfo setLyricGenId:]
  -[MSVLyricsSongInfo songwriters]
  -[MSVLyricsSongInfo lyricsSections]
  -[MSVLyricsSongInfo setSongwriters:]
  -[MSVLyricsSongInfo setLyricsLinesSortedByStartTime:]
  -[MSVLyricsSongInfo setLyricsLines:]
  -[MSVLyricsSongInfo setLyricsSections:]
  -[MSVLyricsSongInfo lyricsLines]
  -[MSVLyricsSongInfo songDuration]
  -[MSVLyricsSongInfo availableTranslations]
  -[MSVLyricsSongInfo _sortLyricsLinesByStartTime:]
  -[MSVLyricsSongInfo lyricsLinesAtTimeOffset:errorMargin:]
  -[MSVLyricsSongInfo lyricsWordsAtTimeOffset:errorMargin:]
  -[MSVLyricsSongInfo lyricsLineStartingBeforeTimeOffset:]
  -[MSVLyricsSongInfo translatedTextForLyricsLine:language:]
  -[MSVLyricsSongInfo lyricGenId]


MSVLyricsXMLElement : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *elementName
 @property  NSString *identifier
 @property  NSMutableString *mutableText

  // instance methods
  -[MSVLyricsXMLElement .cxx_destruct]
  -[MSVLyricsXMLElement identifier]
  -[MSVLyricsXMLElement setIdentifier:]
  -[MSVLyricsXMLElement elementName]
  -[MSVLyricsXMLElement setElementName:]
  -[MSVLyricsXMLElement mutableText]
  -[MSVLyricsXMLElement setMutableText:]


MSVLyricsElement : MSVLyricsXMLElement
 @property  long long type
 @property  double startTime
 @property  double endTime
 @property  MSVLyricsAgent *agent

  // class methods
  +[MSVLyricsElement _descriptionForElementType:]

  // instance methods
  -[MSVLyricsElement type]
  -[MSVLyricsElement setType:]
  -[MSVLyricsElement .cxx_destruct]
  -[MSVLyricsElement startTime]
  -[MSVLyricsElement endTime]
  -[MSVLyricsElement setEndTime:]
  -[MSVLyricsElement setStartTime:]
  -[MSVLyricsElement agent]
  -[MSVLyricsElement setAgent:]


MSVLyricsTextElement : MSVLyricsElement
 @property  NSAttributedString *lyricsText

  // instance methods
  -[MSVLyricsTextElement init]
  -[MSVLyricsTextElement .cxx_destruct]
  -[MSVLyricsTextElement setLyricsText:]
  -[MSVLyricsTextElement lyricsText]


MSVLyricsLine : MSVLyricsTextElement
 @property  long long lineIndex
 @property  long long originalLineIndex
 @property  MSVLyricsSection *parentSection
 @property  MSVLyricsLine *nextLine
 @property  NSArray *words
 @property  NSString *translationKey

  // instance methods
  -[MSVLyricsLine init]
  -[MSVLyricsLine .cxx_destruct]
  -[MSVLyricsLine setWords:]
  -[MSVLyricsLine lineIndex]
  -[MSVLyricsLine setLineIndex:]
  -[MSVLyricsLine words]
  -[MSVLyricsLine setTranslationKey:]
  -[MSVLyricsLine setOriginalLineIndex:]
  -[MSVLyricsLine setNextLine:]
  -[MSVLyricsLine setParentSection:]
  -[MSVLyricsLine translationKey]
  -[MSVLyricsLine containsTimeOffset:withErrorMargin:]
  -[MSVLyricsLine originalLineIndex]
  -[MSVLyricsLine parentSection]
  -[MSVLyricsLine nextLine]


MSVLyricsWord : MSVLyricsTextElement
 @property  MSVLyricsLine *parentLine
 @property  MSVLyricsWord *nextWord

  // instance methods
  -[MSVLyricsWord init]
  -[MSVLyricsWord .cxx_destruct]
  -[MSVLyricsWord setParentLine:]
  -[MSVLyricsWord parentLine]
  -[MSVLyricsWord nextWord]
  -[MSVLyricsWord setNextWord:]


MSVLyricsSection : MSVLyricsElement
 @property  long long songPart
 @property  NSString *songPartText
 @property  NSArray *lines

  // class methods
  +[MSVLyricsSection _songPartForText:]

  // instance methods
  -[MSVLyricsSection init]
  -[MSVLyricsSection .cxx_destruct]
  -[MSVLyricsSection lines]
  -[MSVLyricsSection setLines:]
  -[MSVLyricsSection setSongPartText:]
  -[MSVLyricsSection songPart]
  -[MSVLyricsSection songPartText]
  -[MSVLyricsSection setSongPart:]


MSVLyricsSongWriter : MSVLyricsXMLElement
 @property  NSString *name
 @property  NSString *artistID

  // instance methods
  -[MSVLyricsSongWriter init]
  -[MSVLyricsSongWriter name]
  -[MSVLyricsSongWriter .cxx_destruct]
  -[MSVLyricsSongWriter setName:]
  -[MSVLyricsSongWriter setArtistID:]
  -[MSVLyricsSongWriter artistID]


MSVLyricsAgent : MSVLyricsXMLElement
 @property  NSString *type
 @property  NSString *name
 @property  NSString *artistID

  // instance methods
  -[MSVLyricsAgent name]
  -[MSVLyricsAgent type]
  -[MSVLyricsAgent setType:]
  -[MSVLyricsAgent .cxx_destruct]
  -[MSVLyricsAgent setName:]
  -[MSVLyricsAgent setArtistID:]
  -[MSVLyricsAgent artistID]


MSVLyricsTranslation : MSVLyricsXMLElement
 @property  NSString *language

  // instance methods
  -[MSVLyricsTranslation .cxx_destruct]
  -[MSVLyricsTranslation language]
  -[MSVLyricsTranslation setLanguage:]


MSVLyricsTranslationText : MSVLyricsXMLElement
 @property  NSString *lyricsLineKey

  // instance methods
  -[MSVLyricsTranslationText init]
  -[MSVLyricsTranslationText .cxx_destruct]
  -[MSVLyricsTranslationText setLyricsLineKey:]
  -[MSVLyricsTranslationText lyricsLineKey]


MSVCLICommandInterpreter : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MSVCLICommandInterpreter init]
  -[MSVCLICommandInterpreter .cxx_destruct]
  -[MSVCLICommandInterpreter addHandlerToCommand:withTarget:action:]
  -[MSVCLICommandInterpreter addHandlerToCommand:withBlock:]
  -[MSVCLICommandInterpreter handlerExistsForCommand:]
  -[MSVCLICommandInterpreter executeWithArgumentCount:arguments:]


MSVCLIBlockHandler : NSObject /usr/lib/libSystem.B.dylib
 @property  @? block

  // instance methods
  -[MSVCLIBlockHandler .cxx_destruct]
  -[MSVCLIBlockHandler block]
  -[MSVCLIBlockHandler initWithBlock:]
  -[MSVCLIBlockHandler invokeWithCommand:]


MSVArtworkServiceConversionRequest : MSVArtworkServiceRequest
 @property  NSURL *sourceURL
 @property  NSURL *destinationURL
 @property  long long destinationFormat
 @property  double destinationCompressionQuality

  // class methods
  +[MSVArtworkServiceConversionRequest supportsSecureCoding]

  // instance methods
  -[MSVArtworkServiceConversionRequest encodeWithCoder:]
  -[MSVArtworkServiceConversionRequest initWithCoder:]
  -[MSVArtworkServiceConversionRequest .cxx_destruct]
  -[MSVArtworkServiceConversionRequest setDestinationURL:]
  -[MSVArtworkServiceConversionRequest destinationURL]
  -[MSVArtworkServiceConversionRequest sourceURL]
  -[MSVArtworkServiceConversionRequest setSourceURL:]
  -[MSVArtworkServiceConversionRequest operationClass]
  -[MSVArtworkServiceConversionRequest destinationFormat]
  -[MSVArtworkServiceConversionRequest destinationCompressionQuality]
  -[MSVArtworkServiceConversionRequest operationPriority]
  -[MSVArtworkServiceConversionRequest initWithSourceURL:destinationURL:destinationFormat:]
  -[MSVArtworkServiceConversionRequest setDestinationFormat:]
  -[MSVArtworkServiceConversionRequest setDestinationCompressionQuality:]


MSVFileBufferedPipe : NSObject /usr/lib/libSystem.B.dylib
 @property  NSFileHandle *fileHandleForReading
 @property  NSFileHandle *fileHandleForWriting

  // class methods
  +[MSVFileBufferedPipe pipe]

  // instance methods
  -[MSVFileBufferedPipe init]
  -[MSVFileBufferedPipe .cxx_destruct]
  -[MSVFileBufferedPipe fileHandleForReading]
  -[MSVFileBufferedPipe fileHandleForWriting]
  -[MSVFileBufferedPipe _outputReadyForWriting:]
  -[MSVFileBufferedPipe _inputReadyForReading:]
  -[MSVFileBufferedPipe _writeBufferedData]
  -[MSVFileBufferedPipe _createBufferFiles]


MSVWatchdog : NSObject /usr/lib/libSystem.B.dylib
 @property  NSOperationQueue *operationQueue
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  NSRunLoop *runLoop
 @property  BOOL scheduled
 @property  BOOL running
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_source> *timer
 @property  double interval
 @property  double timeoutInterval
 @property  @? timeoutCallback
 @property  NSString *mode

  // instance methods
  -[MSVWatchdog init]
  -[MSVWatchdog setQueue:]
  -[MSVWatchdog queue]
  -[MSVWatchdog .cxx_destruct]
  -[MSVWatchdog setMode:]
  -[MSVWatchdog resume]
  -[MSVWatchdog operationQueue]
  -[MSVWatchdog setOperationQueue:]
  -[MSVWatchdog interval]
  -[MSVWatchdog setInterval:]
  -[MSVWatchdog runLoop]
  -[MSVWatchdog suspend]
  -[MSVWatchdog mode]
  -[MSVWatchdog timer]
  -[MSVWatchdog setTimer:]
  -[MSVWatchdog dispatchQueue]
  -[MSVWatchdog running]
  -[MSVWatchdog setDispatchQueue:]
  -[MSVWatchdog setTimeoutInterval:]
  -[MSVWatchdog timeoutInterval]
  -[MSVWatchdog scheduled]
  -[MSVWatchdog setRunning:]
  -[MSVWatchdog scheduleInRunLoop:]
  -[MSVWatchdog _cancelTimeout]
  -[MSVWatchdog _invokeCallback]
  -[MSVWatchdog _scheduleTest]
  -[MSVWatchdog _scheduleTimeout]
  -[MSVWatchdog timeoutCallback]
  -[MSVWatchdog setScheduled:]
  -[MSVWatchdog setRunLoop:]
  -[MSVWatchdog scheduleInOperationQueue:]
  -[MSVWatchdog scheduleInDispatchQueue:]
  -[MSVWatchdog setTimeoutCallback:]


MSVTimer : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MSVTimer timerWithInterval:block:]
  +[MSVTimer timerWithInterval:repeats:block:]
  +[MSVTimer timerWithInterval:queue:block:]
  +[MSVTimer timerWithInterval:repeats:queue:block:]

  // instance methods
  -[MSVTimer dealloc]
  -[MSVTimer invalidate]
  -[MSVTimer .cxx_destruct]
  -[MSVTimer initWithInterval:queue:block:]
  -[MSVTimer initWithInterval:repeats:queue:block:]


MSVPersistentTimer : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL valid

  // instance methods
  -[MSVPersistentTimer dealloc]
  -[MSVPersistentTimer invalidate]
  -[MSVPersistentTimer isValid]
  -[MSVPersistentTimer .cxx_destruct]
  -[MSVPersistentTimer invalidateWithReason:]
  -[MSVPersistentTimer _handleTimerElapsed:]
  -[MSVPersistentTimer initWithInterval:name:queue:block:]


MSVCLICommand : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  NSArray *options
 @property  NSDictionary *optionsDictionary

  // instance methods
  -[MSVCLICommand init]
  -[MSVCLICommand name]
  -[MSVCLICommand options]
  -[MSVCLICommand .cxx_destruct]
  -[MSVCLICommand optionsDictionary]
  -[MSVCLICommand initWithName:options:]
  -[MSVCLICommand containsOption:]
  -[MSVCLICommand valueForOption:]


MSVXPCTransaction : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  BOOL active

  // class methods
  +[MSVXPCTransaction activeTransactions]

  // instance methods
  -[MSVXPCTransaction dealloc]
  -[MSVXPCTransaction name]
  -[MSVXPCTransaction _identifier]
  -[MSVXPCTransaction .cxx_destruct]
  -[MSVXPCTransaction initWithName:]
  -[MSVXPCTransaction isActive]
  -[MSVXPCTransaction beginTransaction]
  -[MSVXPCTransaction endTransaction]
  -[MSVXPCTransaction endTransactionOnDate:]


MSVXPCTransactionController : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL inTransaction

  // class methods
  +[MSVXPCTransactionController sharedInstance]

  // instance methods
  -[MSVXPCTransactionController init]
  -[MSVXPCTransactionController dealloc]
  -[MSVXPCTransactionController .cxx_destruct]
  -[MSVXPCTransactionController isTransactionActive:]
  -[MSVXPCTransactionController activeTransactions]
  -[MSVXPCTransactionController addActiveTransaction:]
  -[MSVXPCTransactionController removeActiveTransaction:]
  -[MSVXPCTransactionController _setupSignalHandler]
  -[MSVXPCTransactionController _tearDownSignalHandler]
  -[MSVXPCTransactionController _onQueueUpdateInternalTransactionState]
  -[MSVXPCTransactionController _onQueueCleanupEndedTransactions]
  -[MSVXPCTransactionController _saveActiveTransactionsToFile]
  -[MSVXPCTransactionController isInTransaction]


_EntitlementCheckResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSError *error
 @property  NSString *group
 @property  NSString *entitlement
 @property  BOOL entitled

  // instance methods
  -[_EntitlementCheckResult .cxx_destruct]
  -[_EntitlementCheckResult setGroup:]
  -[_EntitlementCheckResult error]
  -[_EntitlementCheckResult setError:]
  -[_EntitlementCheckResult group]
  -[_EntitlementCheckResult entitlement]
  -[_EntitlementCheckResult isEntitled]
  -[_EntitlementCheckResult initWithEntitlement:group:]
  -[_EntitlementCheckResult setEntitlement:]
  -[_EntitlementCheckResult setEntitled:]


MSVEntitlementUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MSVEntitlementUtilities _checkEntitlement:inGroup:]
  +[MSVEntitlementUtilities _checkArrayEntitlement:group:task:]
  +[MSVEntitlementUtilities _checkBooleanEntitlement:task:]
  +[MSVEntitlementUtilities _processKeyChainResult:]
  +[MSVEntitlementUtilities hasEntitlement:inGroup:]
  +[MSVEntitlementUtilities hasBoolEntitlement:]


MSVOPACKEncoder : NSCoder /System/Library/Frameworks/ImageIO.framework/ImageIO <MSVSegmentedSubEncoder>
 @property  BOOL hasFinished
 @property  NSMutableArray *objects
 @property  NSMapTable *objectLookupTable
 @property  NSMutableArray *wrapperStack
 @property  NSDictionary *userInfo
 @property  NSData *encodedData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hasTopLevelData

  // class methods
  +[MSVOPACKEncoder encodedDataWithRootObject:userInfo:error:]
  +[MSVOPACKEncoder encodedDataWithRootObject:error:]

  // instance methods
  -[MSVOPACKEncoder init]
  -[MSVOPACKEncoder userInfo]
  -[MSVOPACKEncoder allowsKeyedCoding]
  -[MSVOPACKEncoder encodeInt64:forKey:]
  -[MSVOPACKEncoder encodeObject:forKey:]
  -[MSVOPACKEncoder encodeBool:forKey:]
  -[MSVOPACKEncoder .cxx_destruct]
  -[MSVOPACKEncoder encodeBytes:length:forKey:]
  -[MSVOPACKEncoder encodeInt32:forKey:]
  -[MSVOPACKEncoder encodeRootObject:]
  -[MSVOPACKEncoder encodeInt:forKey:]
  -[MSVOPACKEncoder encodeDouble:forKey:]
  -[MSVOPACKEncoder requiresSecureCoding]
  -[MSVOPACKEncoder encodeFloat:forKey:]
  -[MSVOPACKEncoder encodedData]
  -[MSVOPACKEncoder finishEncoding]
  -[MSVOPACKEncoder objects]
  -[MSVOPACKEncoder hasFinished]
  -[MSVOPACKEncoder finishEncodingPartialTopLevelObject]
  -[MSVOPACKEncoder setHasFinished:]
  -[MSVOPACKEncoder msv_setUserInfo:]
  -[MSVOPACKEncoder beginEncodingPartialTopLevelObject:]
  -[MSVOPACKEncoder msv_userInfo]
  -[MSVOPACKEncoder hasTopLevelData]
  -[MSVOPACKEncoder encodedDataWithError:]
  -[MSVOPACKEncoder finishEncodingWithError:]
  -[MSVOPACKEncoder _convertObject:]
  -[MSVOPACKEncoder _encodeNumber:forKey:]
  -[MSVOPACKEncoder _convertNumber:]
  -[MSVOPACKEncoder objectLookupTable]
  -[MSVOPACKEncoder wrapperStack]


MSVStreamReader : NSObject /usr/lib/libSystem.B.dylib <NSStreamDelegate>
 @property  NSInputStream *stream
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? didReadDataBlock
 @property  @? didFinishReadingBlock
 @property  @? didEncounterErrorBlock
 @property  unsigned long maximumBufferSize
 @property  BOOL compress
 @property  double timestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSVStreamReader dealloc]
  -[MSVStreamReader setQueue:]
  -[MSVStreamReader queue]
  -[MSVStreamReader stream:handleEvent:]
  -[MSVStreamReader .cxx_destruct]
  -[MSVStreamReader stop]
  -[MSVStreamReader start]
  -[MSVStreamReader timestamp]
  -[MSVStreamReader stream]
  -[MSVStreamReader setStream:]
  -[MSVStreamReader _stop]
  -[MSVStreamReader initWithInputStream:queue:]
  -[MSVStreamReader setDidEncounterErrorBlock:]
  -[MSVStreamReader setDidReadDataBlock:]
  -[MSVStreamReader setDidFinishReadingBlock:]
  -[MSVStreamReader _shouldHandleEvent]
  -[MSVStreamReader stopWithCompletion:]
  -[MSVStreamReader readAllDataWithCompletion:]
  -[MSVStreamReader didFinishReadingBlock]
  -[MSVStreamReader didEncounterErrorBlock]
  -[MSVStreamReader didReadDataBlock]
  -[MSVStreamReader shouldCompress]
  -[MSVStreamReader _compressedDataForData:]
  -[MSVStreamReader readAllDataWithError:]
  -[MSVStreamReader readAllDataIntoFileHandle:withCompletion:]
  -[MSVStreamReader maximumBufferSize]
  -[MSVStreamReader setMaximumBufferSize:]
  -[MSVStreamReader setCompress:]


MSVAsyncOperation : NSOperation /System/Library/Frameworks/ImageIO.framework/ImageIO
 @property  NSError *error
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  BOOL _executing
 @property  BOOL _finished

  // instance methods
  -[MSVAsyncOperation init]
  -[MSVAsyncOperation .cxx_destruct]
  -[MSVAsyncOperation error]
  -[MSVAsyncOperation start]
  -[MSVAsyncOperation setError:]
  -[MSVAsyncOperation isFinished]
  -[MSVAsyncOperation isExecuting]
  -[MSVAsyncOperation isConcurrent]
  -[MSVAsyncOperation isAsynchronous]
  -[MSVAsyncOperation finish]
  -[MSVAsyncOperation _isFinished]
  -[MSVAsyncOperation _isExecuting]
  -[MSVAsyncOperation accessQueue]
  -[MSVAsyncOperation execute]
  -[MSVAsyncOperation finishWithError:]
  -[MSVAsyncOperation _setExecuting:]
  -[MSVAsyncOperation _setFinished:]


MSVArtworkService : NSObject /usr/lib/libSystem.B.dylib
 @property  NSOperationQueue *serviceThrottlingOperationQueue
 @property  NSXPCConnection *serverConnection

  // class methods
  +[MSVArtworkService sharedService]

  // instance methods
  -[MSVArtworkService init]
  -[MSVArtworkService dealloc]
  -[MSVArtworkService .cxx_destruct]
  -[MSVArtworkService sendRequest:completionHandler:]
  -[MSVArtworkService serverConnection]
  -[MSVArtworkService setServerConnection:]
  -[MSVArtworkService setServiceThrottlingOperationQueue:]
  -[MSVArtworkService serviceThrottlingOperationQueue]


MSVZipArchive : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MSVZipArchive init]
  -[MSVZipArchive dealloc]
  -[MSVZipArchive initWithContentsOfFile:]
  -[MSVZipArchive .cxx_destruct]
  -[MSVZipArchive addFileAtPath:]
  -[MSVZipArchive writeToFileAtPath:withError:]
  -[MSVZipArchive decompressToPath:withError:]


MSVOPACKDecoder : NSCoder /System/Library/Frameworks/ImageIO.framework/ImageIO <MSVSegmentedSubDecoder>
 @property  NSArray *objects
 @property  NSMapTable *objectLookupTable
 @property  NSMutableArray *wrapperStack
 @property  NSDictionary *userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSVOPACKDecoder decodedObjectOfClass:fromData:userInfo:error:]
  +[MSVOPACKDecoder decodedObjectOfClasses:fromData:userInfo:error:]
  +[MSVOPACKDecoder decodedObjectOfClass:fromData:error:]
  +[MSVOPACKDecoder decodedObjectOfClasses:fromData:error:]

  // instance methods
  -[MSVOPACKDecoder userInfo]
  -[MSVOPACKDecoder allowsKeyedCoding]
  -[MSVOPACKDecoder .cxx_destruct]
  -[MSVOPACKDecoder decodeBytesForKey:returnedLength:]
  -[MSVOPACKDecoder decodeInt64ForKey:]
  -[MSVOPACKDecoder decodeObjectOfClasses:forKey:]
  -[MSVOPACKDecoder containsValueForKey:]
  -[MSVOPACKDecoder decodeInt32ForKey:]
  -[MSVOPACKDecoder decodeIntForKey:]
  -[MSVOPACKDecoder decodeDoubleForKey:]
  -[MSVOPACKDecoder decodeBoolForKey:]
  -[MSVOPACKDecoder requiresSecureCoding]
  -[MSVOPACKDecoder decodeFloatForKey:]
  -[MSVOPACKDecoder initForReadingFromData:error:]
  -[MSVOPACKDecoder setUserInfo:]
  -[MSVOPACKDecoder objects]
  -[MSVOPACKDecoder msv_setUserInfo:]
  -[MSVOPACKDecoder msv_userInfo]
  -[MSVOPACKDecoder decodeRootObjectOfClasses:error:]
  -[MSVOPACKDecoder beginDecodingPartialTopLevelObjectOfClasses:]
  -[MSVOPACKDecoder finishDecodingPartialTopLevelObject]
  -[MSVOPACKDecoder objectLookupTable]
  -[MSVOPACKDecoder wrapperStack]
  -[MSVOPACKDecoder initForReadingFromData:userInfo:error:]
  -[MSVOPACKDecoder _decodeOPACKObject:ofClasses:]
  -[MSVOPACKDecoder _validateClass:fromSupportedClasses:]
  -[MSVOPACKDecoder _decodeNumberForKey:]


MSVMessageParser : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableData *unhandledPartialObjectData
 @property  long long unhandledObjectDataExpectedLength
 @property  NSMutableData *unhandledPartialData
 @property  <MSVMessageParserDelegate> *delegate

  // class methods
  +[MSVMessageParser createHeader:]

  // instance methods
  -[MSVMessageParser delegate]
  -[MSVMessageParser setDelegate:]
  -[MSVMessageParser .cxx_destruct]
  -[MSVMessageParser _notifyDelegate:]
  -[MSVMessageParser setUnhandledPartialObjectData:]
  -[MSVMessageParser setUnhandledObjectDataExpectedLength:]
  -[MSVMessageParser processData:]
  -[MSVMessageParser unhandledPartialObjectData]
  -[MSVMessageParser unhandledObjectDataExpectedLength]
  -[MSVMessageParser unhandledPartialData]
  -[MSVMessageParser setUnhandledPartialData:]


MSVSystemDialog : NSObject /usr/lib/libSystem.B.dylib
 @property  ^{__CFUserNotification=} presentedUserNotification
 @property  ^{__CFRunLoopSource=} activeRunLoopSource
 @property  @? pendingCompletion
 @property  MSVSystemDialogOptions *options
 @property  NSArray *textFields

  // class methods
  +[MSVSystemDialog systemDialogWithOptions:]

  // instance methods
  -[MSVSystemDialog dealloc]
  -[MSVSystemDialog options]
  -[MSVSystemDialog initWithOptions:]
  -[MSVSystemDialog .cxx_destruct]
  -[MSVSystemDialog textFields]
  -[MSVSystemDialog dismiss]
  -[MSVSystemDialog presentWithCompletion:]
  -[MSVSystemDialog addTextField:]
  -[MSVSystemDialog setPresentedUserNotification:]
  -[MSVSystemDialog setPendingCompletion:]
  -[MSVSystemDialog setActiveRunLoopSource:]
  -[MSVSystemDialog presentedUserNotification]
  -[MSVSystemDialog activeRunLoopSource]
  -[MSVSystemDialog pendingCompletion]
  -[MSVSystemDialog addTextFieldWithTitle:secure:]
  -[MSVSystemDialog clearTextFields]


MSVSystemDialogTextField : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *title
 @property  BOOL secure
 @property  long long keyboardType

  // class methods
  +[MSVSystemDialogTextField textFieldWithTitle:]
  +[MSVSystemDialogTextField textFieldWithTitle:secure:]

  // instance methods
  -[MSVSystemDialogTextField .cxx_destruct]
  -[MSVSystemDialogTextField title]
  -[MSVSystemDialogTextField setTitle:]
  -[MSVSystemDialogTextField keyboardType]
  -[MSVSystemDialogTextField isSecure]
  -[MSVSystemDialogTextField initWithTitle:]
  -[MSVSystemDialogTextField setKeyboardType:]
  -[MSVSystemDialogTextField setSecure:]


MSVSystemDialogOptions : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *alertHeader
 @property  NSString *alertMessage
 @property  NSURL *alertIconURL
 @property  NSArray *allowedApplicationBundleIDs
 @property  NSString *defaultButtonTitle
 @property  NSString *alternateButtonTitle
 @property  BOOL showAsTopmost
 @property  BOOL forceModalAlertAppearance
 @property  BOOL showOnLockscreen
 @property  BOOL dismissOverlaysOnLockscreen

  // instance methods
  -[MSVSystemDialogOptions .cxx_destruct]
  -[MSVSystemDialogOptions defaultButtonTitle]
  -[MSVSystemDialogOptions setDefaultButtonTitle:]
  -[MSVSystemDialogOptions alternateButtonTitle]
  -[MSVSystemDialogOptions setAlternateButtonTitle:]
  -[MSVSystemDialogOptions alertHeader]
  -[MSVSystemDialogOptions alertMessage]
  -[MSVSystemDialogOptions alertIconURL]
  -[MSVSystemDialogOptions showAsTopmost]
  -[MSVSystemDialogOptions forceModalAlertAppearance]
  -[MSVSystemDialogOptions showOnLockscreen]
  -[MSVSystemDialogOptions dismissOverlaysOnLockscreen]
  -[MSVSystemDialogOptions allowedApplicationBundleIDs]
  -[MSVSystemDialogOptions setAlertHeader:]
  -[MSVSystemDialogOptions setAlertMessage:]
  -[MSVSystemDialogOptions setAlertIconURL:]
  -[MSVSystemDialogOptions setAllowedApplicationBundleIDs:]
  -[MSVSystemDialogOptions setShowAsTopmost:]
  -[MSVSystemDialogOptions setForceModalAlertAppearance:]
  -[MSVSystemDialogOptions setShowOnLockscreen:]
  -[MSVSystemDialogOptions setDismissOverlaysOnLockscreen:]


MSVSystemDialogResponse : NSObject /usr/lib/libSystem.B.dylib
 @property  long long buttonIdentifier
 @property  NSArray *textFieldValues

  // instance methods
  -[MSVSystemDialogResponse .cxx_destruct]
  -[MSVSystemDialogResponse textFieldValues]
  -[MSVSystemDialogResponse initWithIdentifier:textFieldValues:]
  -[MSVSystemDialogResponse buttonIdentifier]


MSVSystemDialogManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MSVSystemDialogManager sharedManager]

  // instance methods
  -[MSVSystemDialogManager init]
  -[MSVSystemDialogManager dealloc]
  -[MSVSystemDialogManager .cxx_destruct]
  -[MSVSystemDialogManager registerSystemDialog:forUserNotification:]
  -[MSVSystemDialogManager systemDialogForUserNotification:]
  -[MSVSystemDialogManager unregisterSystemDialogWithUserNotification:]


MSVPropertyListEncoder : NSObject /usr/lib/libSystem.B.dylib
 @property  NSFileHandle *outputFileHandle
 @property  NSMutableData *outputBuffer
 @property  NSDateFormatter *dateFormatter
 @property  NSMutableArray *containerStack
 @property  NSMutableString *tabPrefix
 @property  NSData *tabPrefixData
 @property  NSData *arrayOpeningTagData
 @property  NSData *arrayClosingTagData
 @property  NSData *dictionaryOpeningTagData
 @property  NSData *dictionaryClosingTagData
 @property  NSData *keyOpeningTagData
 @property  NSData *keyClosingTagData
 @property  NSData *stringOpeningTagData
 @property  NSData *stringClosingTagData
 @property  NSData *dataOpeningTagData
 @property  NSData *dataClosingTagData
 @property  NSData *boolTrueTagData
 @property  NSData *boolFalseTagData

  // instance methods
  -[MSVPropertyListEncoder init]
  -[MSVPropertyListEncoder addObject:]
  -[MSVPropertyListEncoder close]
  -[MSVPropertyListEncoder setObject:forKey:]
  -[MSVPropertyListEncoder .cxx_destruct]
  -[MSVPropertyListEncoder dateFormatter]
  -[MSVPropertyListEncoder setDateFormatter:]
  -[MSVPropertyListEncoder _addObject:]
  -[MSVPropertyListEncoder setOutputBuffer:]
  -[MSVPropertyListEncoder outputBuffer]
  -[MSVPropertyListEncoder endDictionary]
  -[MSVPropertyListEncoder endArray]
  -[MSVPropertyListEncoder _writeData:]
  -[MSVPropertyListEncoder initWithOutputFileHandle:]
  -[MSVPropertyListEncoder containerStack]
  -[MSVPropertyListEncoder _startArray]
  -[MSVPropertyListEncoder _writeDictionaryKey:]
  -[MSVPropertyListEncoder _decrementTabPrefix]
  -[MSVPropertyListEncoder tabPrefixData]
  -[MSVPropertyListEncoder arrayClosingTagData]
  -[MSVPropertyListEncoder _startDictionary]
  -[MSVPropertyListEncoder dictionaryClosingTagData]
  -[MSVPropertyListEncoder _flushOutputBuffer]
  -[MSVPropertyListEncoder outputFileHandle]
  -[MSVPropertyListEncoder _encodeString:]
  -[MSVPropertyListEncoder _encodeNumber:]
  -[MSVPropertyListEncoder _encodeDate:]
  -[MSVPropertyListEncoder _encodeData:]
  -[MSVPropertyListEncoder stringOpeningTagData]
  -[MSVPropertyListEncoder _writeString:]
  -[MSVPropertyListEncoder stringClosingTagData]
  -[MSVPropertyListEncoder boolTrueTagData]
  -[MSVPropertyListEncoder boolFalseTagData]
  -[MSVPropertyListEncoder tabPrefix]
  -[MSVPropertyListEncoder dataOpeningTagData]
  -[MSVPropertyListEncoder dataClosingTagData]
  -[MSVPropertyListEncoder arrayOpeningTagData]
  -[MSVPropertyListEncoder _incrementTabPrefix]
  -[MSVPropertyListEncoder dictionaryOpeningTagData]
  -[MSVPropertyListEncoder setTabPrefixData:]
  -[MSVPropertyListEncoder keyOpeningTagData]
  -[MSVPropertyListEncoder keyClosingTagData]
  -[MSVPropertyListEncoder startArray]
  -[MSVPropertyListEncoder startArrayForKey:]
  -[MSVPropertyListEncoder startDictionary]
  -[MSVPropertyListEncoder startDictionaryForKey:]
  -[MSVPropertyListEncoder setOutputFileHandle:]
  -[MSVPropertyListEncoder setContainerStack:]
  -[MSVPropertyListEncoder setTabPrefix:]


MSVBloomFilter : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  long long capacity
 @property  float falsePositiveTolerance
 @property  float falsePositiveProbability
 @property  long long estimatedCount

  // class methods
  +[MSVBloomFilter supportsSecureCoding]

  // instance methods
  -[MSVBloomFilter dealloc]
  -[MSVBloomFilter addObject:]
  -[MSVBloomFilter containsObject:]
  -[MSVBloomFilter encodeWithCoder:]
  -[MSVBloomFilter initWithCoder:]
  -[MSVBloomFilter capacity]
  -[MSVBloomFilter falsePositiveProbability]
  -[MSVBloomFilter initWithCapacity:falsePositiveTolerance:]
  -[MSVBloomFilter _vectorIndexSetForObject:]
  -[MSVBloomFilter _fnvHashObject:]
  -[MSVBloomFilter _murmur2HashObject:]
  -[MSVBloomFilter initWithCapacity:falsePositiveTolerance:murmurSeed:]
  -[MSVBloomFilter estimatedCount]
  -[MSVBloomFilter falsePositiveTolerance]


MSVLRUDictionaryNode : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  id key
 @property  id object
 @property  MSVLRUDictionaryNode *next
 @property  MSVLRUDictionaryNode *prev

  // instance methods
  -[MSVLRUDictionaryNode copyWithZone:]
  -[MSVLRUDictionaryNode key]
  -[MSVLRUDictionaryNode object]
  -[MSVLRUDictionaryNode setObject:]
  -[MSVLRUDictionaryNode .cxx_destruct]
  -[MSVLRUDictionaryNode next]
  -[MSVLRUDictionaryNode initWithKey:object:]
  -[MSVLRUDictionaryNode prev]
  -[MSVLRUDictionaryNode setNext:]
  -[MSVLRUDictionaryNode setPrev:]


MSVLRUDictionary : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableDictionary *dictionary
 @property  MSVLRUDictionaryNode *head
 @property  MSVLRUDictionaryNode *tail
 @property  long long transactionCount
 @property  <MSVLRUDictionaryDelegate> *delegate
 @property  long long maximumCapacity
 @property  long long count

  // instance methods
  -[MSVLRUDictionary isEqual:]
  -[MSVLRUDictionary copyWithZone:]
  -[MSVLRUDictionary count]
  -[MSVLRUDictionary allKeys]
  -[MSVLRUDictionary removeAllObjects]
  -[MSVLRUDictionary objectForKey:]
  -[MSVLRUDictionary removeObjectForKey:]
  -[MSVLRUDictionary delegate]
  -[MSVLRUDictionary setDelegate:]
  -[MSVLRUDictionary allValues]
  -[MSVLRUDictionary objectForKeyedSubscript:]
  -[MSVLRUDictionary setObject:forKey:]
  -[MSVLRUDictionary .cxx_destruct]
  -[MSVLRUDictionary dictionary]
  -[MSVLRUDictionary setObject:forKeyedSubscript:]
  -[MSVLRUDictionary setDictionary:]
  -[MSVLRUDictionary head]
  -[MSVLRUDictionary tail]
  -[MSVLRUDictionary beginTransaction]
  -[MSVLRUDictionary endTransaction]
  -[MSVLRUDictionary _removeNodeFromLinkedList:]
  -[MSVLRUDictionary _addNodeToFront:]
  -[MSVLRUDictionary _removeNode:]
  -[MSVLRUDictionary _moveNodeToFront:]
  -[MSVLRUDictionary initWithMaximumCapacity:]
  -[MSVLRUDictionary peekObjectForKey:]
  -[MSVLRUDictionary performTransaction:]
  -[MSVLRUDictionary setTail:]
  -[MSVLRUDictionary setHead:]
  -[MSVLRUDictionary transactionCount]
  -[MSVLRUDictionary setTransactionCount:]
  -[MSVLRUDictionary _shrinkToCapacity]
  -[MSVLRUDictionary maximumCapacity]
  -[MSVLRUDictionary setMaximumCapacity:]
  -[MSVLRUDictionary pokeKey:]


MSVStreamWriter : NSObject /usr/lib/libSystem.B.dylib <NSStreamDelegate>
 @property  NSOutputStream *outputStream
 @property  NSInputStream *inputStream
 @property  NSObject<OS_dispatch_queue> *queue
 @property  double timestamp
 @property  unsigned long bytesWritten
 @property  unsigned long maximumBufferSize
 @property  BOOL compressed
 @property  @? canWriteDataBlock
 @property  @? didFinishWritingBlock
 @property  @? didEncounterErrorBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSVStreamWriter init]
  -[MSVStreamWriter setQueue:]
  -[MSVStreamWriter queue]
  -[MSVStreamWriter stream:handleEvent:]
  -[MSVStreamWriter .cxx_destruct]
  -[MSVStreamWriter stop]
  -[MSVStreamWriter start]
  -[MSVStreamWriter initWithQueue:]
  -[MSVStreamWriter timestamp]
  -[MSVStreamWriter outputStream]
  -[MSVStreamWriter setTimestamp:]
  -[MSVStreamWriter inputStream]
  -[MSVStreamWriter setInputStream:]
  -[MSVStreamWriter setOutputStream:]
  -[MSVStreamWriter setCompressed:]
  -[MSVStreamWriter isCompressed]
  -[MSVStreamWriter bytesWritten]
  -[MSVStreamWriter setDidEncounterErrorBlock:]
  -[MSVStreamWriter stopWithCompletion:]
  -[MSVStreamWriter didEncounterErrorBlock]
  -[MSVStreamWriter maximumBufferSize]
  -[MSVStreamWriter setMaximumBufferSize:]
  -[MSVStreamWriter _onQueue_stop]
  -[MSVStreamWriter setDidFinishWritingBlock:]
  -[MSVStreamWriter setBytesWritten:]
  -[MSVStreamWriter didFinishWritingBlock]
  -[MSVStreamWriter setCanWriteDataBlock:]
  -[MSVStreamWriter _writeAvailablePendingData]
  -[MSVStreamWriter _decompressData:]
  -[MSVStreamWriter writeAllData:error:]
  -[MSVStreamWriter initWithOutputStream:queue:]
  -[MSVStreamWriter writeAllData:withCompletion:]
  -[MSVStreamWriter writeData:withCompletion:]
  -[MSVStreamWriter writeStreamError:]
  -[MSVStreamWriter canWriteDataBlock]


_MSVStreamWriterPendingData : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *data
 @property  @? completionHandler
 @property  long long bytesWritten

  // instance methods
  -[_MSVStreamWriterPendingData .cxx_destruct]
  -[_MSVStreamWriterPendingData data]
  -[_MSVStreamWriterPendingData setData:]
  -[_MSVStreamWriterPendingData completionHandler]
  -[_MSVStreamWriterPendingData setCompletionHandler:]
  -[_MSVStreamWriterPendingData bytesWritten]
  -[_MSVStreamWriterPendingData setBytesWritten:]


MSVBlockGuard : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MSVBlockGuard init]
  -[MSVBlockGuard dealloc]
  -[MSVBlockGuard .cxx_destruct]
  -[MSVBlockGuard initWithTimeout:]
  -[MSVBlockGuard disarm]
  -[MSVBlockGuard initWithDeallocHandler:]
  -[MSVBlockGuard initWithTimeout:interruptionHandler:]
  -[MSVBlockGuard _interruptWithReason:]


MSVArtworkServiceResizeRequestDestination : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  long long format
 @property  {CGSize=dd} size
 @property  NSURL *destinationURL
 @property  double compressionQuality

  // class methods
  +[MSVArtworkServiceResizeRequestDestination supportsSecureCoding]
  +[MSVArtworkServiceResizeRequestDestination destinationWithFormat:size:url:]
  +[MSVArtworkServiceResizeRequestDestination jpegDestinationWithSize:compressionQuality:url:]

  // instance methods
  -[MSVArtworkServiceResizeRequestDestination encodeWithCoder:]
  -[MSVArtworkServiceResizeRequestDestination initWithCoder:]
  -[MSVArtworkServiceResizeRequestDestination .cxx_destruct]
  -[MSVArtworkServiceResizeRequestDestination size]
  -[MSVArtworkServiceResizeRequestDestination format]
  -[MSVArtworkServiceResizeRequestDestination destinationURL]
  -[MSVArtworkServiceResizeRequestDestination compressionQuality]
  -[MSVArtworkServiceResizeRequestDestination initWithFormat:size:compressionQuality:destinationURL:]


MSVArtworkServiceResizeRequest : MSVArtworkServiceRequest
 @property  NSMutableArray *resizeDestinations
 @property  NSURL *sourceURL

  // class methods
  +[MSVArtworkServiceResizeRequest supportsSecureCoding]

  // instance methods
  -[MSVArtworkServiceResizeRequest encodeWithCoder:]
  -[MSVArtworkServiceResizeRequest initWithCoder:]
  -[MSVArtworkServiceResizeRequest .cxx_destruct]
  -[MSVArtworkServiceResizeRequest sourceURL]
  -[MSVArtworkServiceResizeRequest setSourceURL:]
  -[MSVArtworkServiceResizeRequest operationClass]
  -[MSVArtworkServiceResizeRequest addDestinationWithFormat:size:url:]
  -[MSVArtworkServiceResizeRequest addJPEGDestinationWithSize:compressionQuality:url:]
  -[MSVArtworkServiceResizeRequest initWithSourceURL:]
  -[MSVArtworkServiceResizeRequest enumerateDestinationsUsingBlock:]
  -[MSVArtworkServiceResizeRequest resizeDestinations]
  -[MSVArtworkServiceResizeRequest setResizeDestinations:]


MSVPair : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  id first
 @property  id second

  // class methods
  +[MSVPair supportsSecureCoding]
  +[MSVPair pairWithFirst:second:]

  // instance methods
  -[MSVPair isEqual:]
  -[MSVPair copyWithZone:]
  -[MSVPair encodeWithCoder:]
  -[MSVPair initWithCoder:]
  -[MSVPair .cxx_destruct]
  -[MSVPair second]
  -[MSVPair first]
  -[MSVPair initWithFirst:second:]


MSVCallback : NSObject /usr/lib/libSystem.B.dylib
 @property  id block
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[MSVCallback callbackWithQueue:block:]

  // instance methods
  -[MSVCallback setQueue:]
  -[MSVCallback queue]
  -[MSVCallback .cxx_destruct]
  -[MSVCallback invoke]
  -[MSVCallback block]
  -[MSVCallback setBlock:]
  -[MSVCallback invokeWithObject:]


MSVMultiCallback : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long count
 @property  NSArray *callbacks
 @property  MSVCallback *firstCallback
 @property  MSVCallback *lastCallback

  // instance methods
  -[MSVMultiCallback init]
  -[MSVMultiCallback count]
  -[MSVMultiCallback .cxx_destruct]
  -[MSVMultiCallback invoke]
  -[MSVMultiCallback callbacks]
  -[MSVMultiCallback invokeWithObject:]
  -[MSVMultiCallback addCallback:]
  -[MSVMultiCallback setFirstCallback:]
  -[MSVMultiCallback firstCallback]
  -[MSVMultiCallback setLastCallback:]
  -[MSVMultiCallback lastCallback]
  -[MSVMultiCallback removeCallback:]


MSVFinally : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MSVFinally dealloc]
  -[MSVFinally .cxx_destruct]
  -[MSVFinally initWithBlock:]


NSString(MSVLyricsParser)
	// class methods
	+[NSString(MSVLyricsParser) isString:equalTo:]

	// instance methods
	-[NSString(MSVLyricsParser) msvl_isElementType:]
	-[NSString(MSVLyricsParser) msvl_timeValue]

NSValue(MSVSignedRange)
	// class methods
	+[NSValue(MSVSignedRange) valueWithMSVSignedRange:]

	// instance methods
	-[NSValue(MSVSignedRange) signedRangeValue]

NSError(MSVDependencyError)
	// class methods
	+[NSError(MSVDependencyError) MSVErrorWithMissingDependencies:]
	+[NSError(MSVDependencyError) MSVErrorWithMissingDependency:]

NSNumber(MSVComparison)
	// class methods
	+[NSNumber(MSVComparison) isNumber:equalTo:]

NSUUID(MSVBase64)
	// class methods
	+[NSUUID(MSVBase64) uuidWithMSVBase64UUID:]

	// instance methods
	-[NSUUID(MSVBase64) MSVBase64UUIDString]
	-[NSUUID(MSVBase64) initWithMSVBase64UUIDString:]

NSMapTable(MediaServices)
	// class methods
	+[NSMapTable(MediaServices) msvIndexMapTableWithCapacity:]

NSOperationQueue(MSVAdditions)
	// instance methods
	-[NSOperationQueue(MSVAdditions) increaseQualityOfService]
	-[NSOperationQueue(MSVAdditions) decreaseQualityOfService]

NSOperation(MSVAdditions)
	// instance methods
	-[NSOperation(MSVAdditions) increasePriority]
	-[NSOperation(MSVAdditions) decreasePriority]

NSCoder(MSVAdditions)
	// instance methods
	-[NSCoder(MSVAdditions) msv_setUserInfo:]
	-[NSCoder(MSVAdditions) msv_userInfo]

NSURLSession(MSVTaskCapturingCompletion)
	// instance methods
	-[NSURLSession(MSVTaskCapturingCompletion) msv_dataTaskWithRequest:completionHandler:]
	-[NSURLSession(MSVTaskCapturingCompletion) msv_uploadTaskWithRequest:fromData:completionHandler:]
	-[NSURLSession(MSVTaskCapturingCompletion) msv_downloadTaskWithRequest:completionHandler:]

01 00 0100 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSApplicationStateMonitor 
01 00 0100 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSProcessAssertion 
01 00 0200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 0200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPipe 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSStream 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXMLParser 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0600 /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection: PCPersistentTimer 
