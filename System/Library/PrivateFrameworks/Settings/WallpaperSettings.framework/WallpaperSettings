|| __DATA.__objc_data _OBJC_CLASS_$_WSWallpaperSettingsCoordinatorInternal
|| __DATA.__objc_data _OBJC_CLASS_$__TtC17WallpaperSettings36WallpaperPreviewNavigationController
|| __DATA_DIRTY.__data _OBJC_METACLASS_$_WSWallpaperSettingsCoordinatorInternal
|| __DATA_DIRTY.__data _OBJC_METACLASS_$__TtC17WallpaperSettings36WallpaperPreviewNavigationController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WSWallpaperSettingsCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WSWallpaperSettingsCoordinator
|| __TEXT.__text _WSLogForCategory
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectZero
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ PhotoLibraryServices: _OBJC_CLASS_$_PLFilteredAlbum
__ PhotoLibraryServicesCore: _OBJC_CLASS_$_PLImageFormat
__ PhotoLibraryServicesCore: _PLIsTallScreen
__ PhotoLibraryServicesCore: _PLLocalizedFrameworkString
__ Photos: _OBJC_CLASS_$_PHAssetCollection
__ Photos: _OBJC_CLASS_$_PHCollection
__ Photos: _OBJC_CLASS_$_PHCollectionList
__ Photos: _OBJC_CLASS_$_PHFetchOptions
__ Photos: _OBJC_CLASS_$_PHImageManager
__ Photos: _OBJC_CLASS_$_PHPhotoLibrary
__ PhotosUI: _OBJC_CLASS_$_PUAlbumListViewController
__ PhotosUI: _OBJC_CLASS_$_PUAlbumListViewControllerPhoneImagePickerSpec
__ PhotosUI: _OBJC_CLASS_$_PUPhotosAlbumViewController
__ PhotosUI: _OBJC_CLASS_$_PUPhotosGridDownloadHelper
__ PhotosUI: _OBJC_CLASS_$_PUPhotosGridViewControllerPadSpec
__ PhotosUI: _OBJC_CLASS_$_PUPhotosGridViewControllerPhoneSpec
__ PhotosUI: _OBJC_CLASS_$_PUPhotosPanoramaViewController
__ PhotosUI: _OBJC_CLASS_$_PUPhotosPanoramaViewControllerPadSpec
__ PhotosUI: _OBJC_CLASS_$_PUPhotosPanoramaViewControllerPhoneSpec
__ PhotosUI: _OBJC_CLASS_$_PUSectionedGridLayout
__ PhotosUI: _OBJC_METACLASS_$_PUAlbumListViewController
__ PhotosUI: _OBJC_METACLASS_$_PUPhotosAlbumViewController
__ PhotosUI: _OBJC_METACLASS_$_PUPhotosPanoramaViewController
__ PhotosUI: _PUFloorToPixel
__ PhotosUI: _PULocalizedString
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitCollectionsDataSourceManagerConfiguration
__ Preferences: _OBJC_CLASS_$_PSSpecifier
__ Preferences: _PSShouldInsetListView
__ SpringBoardFoundation: _SBFMagicWallpaperEnumeration
__ SpringBoardFoundation: _SBFMagicWallpaperRepresentativeThumbnailForClass
__ SpringBoardFoundation: _SBFMagicWallpaperThumbnail
__ SpringBoardFoundation: _SBFStringForWallpaperLocations
__ SpringBoardFoundation: _SBFWallpaperDidChangeNotification
__ SpringBoardFoundation: _kSBFMagicWallpaperDynamicSectionKey
__ SpringBoardFoundation: _kSBFMagicWallpaperIdentifierKey
__ SpringBoardUIServices: _OBJC_CLASS_$_SBSUIWallpaperPreviewViewController
__ SpringBoardUIServices: _SBSUIWallpaperGetOptions
__ SpringBoardUIServices: _SBSUIWallpaperGetPreview
__ UIFoundation: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutDimension
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutGroup
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSection
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSize
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSpacing
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UICollectionReusableView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewController
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UICollectionReusableView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UICollectionViewController
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UICollectionElementKindSectionHeader
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UITableViewAutomaticDimension
__ WallpaperKit: _OBJC_CLASS_$_WKHeritageStripeImageGenerator
__ WallpaperKit: _OBJC_CLASS_$_WKIndicatorView
__ WallpaperKit: _OBJC_CLASS_$_WKPhotoWallpaperBundle
__ WallpaperKit: _OBJC_CLASS_$_WKWallpaperBundleImporter
__ WallpaperKit: _OBJC_CLASS_$_WKWallpaperPreviewViewControllerFactory
__ WallpaperKit: _WKSupportsLiveWallpapers
__ WallpaperKit: _WKWallpaperAppearanceDark
__ WallpaperKit: _WKWallpaperKitDataDisableParallaxKey
__ WallpaperKit: _WKWallpaperLocationCoverSheet
__ WallpaperKit: _WKWallpaperLocationHomeScreen
__ WallpaperKit: _WK_LocalizedString
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libMobileGestalt.dylib: _MGIsQuestionValid
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_dispatch_queue
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_os_log
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_variant_has_internal_ui
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libswiftAVFoundation.dylib: __swift_FORCE_LOAD_$_swiftAVFoundation
__ libswiftAccelerate.dylib: __swift_FORCE_LOAD_$_swiftAccelerate
__ libswiftCloudKit.dylib: __swift_FORCE_LOAD_$_swiftCloudKit
__ libswiftContacts.dylib: __swift_FORCE_LOAD_$_swiftContacts
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_allocateGenericClassMetadata
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getGenericMetadata
__ libswiftCore.dylib: _swift_getKeyPath
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getOpaqueTypeConformance
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initClassMetadata2
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_isaMask
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_unknownObjectWeakAssign
__ libswiftCore.dylib: _swift_unknownObjectWeakDestroy
__ libswiftCore.dylib: _swift_unknownObjectWeakInit
__ libswiftCore.dylib: _swift_unknownObjectWeakLoadStrong
__ libswiftCore.dylib: _swift_updateClassMetadata2
__ libswiftCore.dylib: _swift_weakDestroy
__ libswiftCore.dylib: _swift_weakInit
__ libswiftCore.dylib: _swift_weakLoadStrong
__ libswiftCoreAudio.dylib: __swift_FORCE_LOAD_$_swiftCoreAudio
__ libswiftCoreData.dylib: __swift_FORCE_LOAD_$_swiftCoreData
__ libswiftCoreFoundation.dylib: __swift_FORCE_LOAD_$_swiftCoreFoundation
__ libswiftCoreGraphics.dylib: __swift_FORCE_LOAD_$_swiftCoreGraphics
__ libswiftCoreImage.dylib: __swift_FORCE_LOAD_$_swiftCoreImage
__ libswiftCoreLocation.dylib: __swift_FORCE_LOAD_$_swiftCoreLocation
__ libswiftCoreMIDI.dylib: __swift_FORCE_LOAD_$_swiftCoreMIDI
__ libswiftCoreMedia.dylib: __swift_FORCE_LOAD_$_swiftCoreMedia
__ libswiftDarwin.dylib: __swift_FORCE_LOAD_$_swiftDarwin
__ libswiftDataDetection.dylib: __swift_FORCE_LOAD_$_swiftDataDetection
__ libswiftDispatch.dylib: __swift_FORCE_LOAD_$_swiftDispatch
__ libswiftFileProvider.dylib: __swift_FORCE_LOAD_$_swiftFileProvider
__ libswiftFoundation.dylib: __swift_FORCE_LOAD_$_swiftFoundation
__ libswiftMapKit.dylib: __swift_FORCE_LOAD_$_swiftMapKit
__ libswiftMetal.dylib: __swift_FORCE_LOAD_$_swiftMetal
__ libswiftMetalKit.dylib: __swift_FORCE_LOAD_$_swiftMetalKit
__ libswiftModelIO.dylib: __swift_FORCE_LOAD_$_swiftModelIO
__ libswiftOSLog.dylib: __swift_FORCE_LOAD_$_swiftOSLog
__ libswiftObjectiveC.dylib: __swift_FORCE_LOAD_$_swiftObjectiveC
__ libswiftPhotos.dylib: __swift_FORCE_LOAD_$_swiftPhotos
__ libswiftPhotosUI.dylib: __swift_FORCE_LOAD_$_swiftPhotosUI
__ libswiftPrivate_BiomePubSub.dylib: __swift_FORCE_LOAD_$_swiftPrivate_BiomePubSub
__ libswiftPrivate_BiomeStreams.dylib: __swift_FORCE_LOAD_$_swiftPrivate_BiomeStreams
__ libswiftQuartzCore.dylib: __swift_FORCE_LOAD_$_swiftQuartzCore
__ libswiftUIKit.dylib: __swift_FORCE_LOAD_$_swiftUIKit
__ libswiftUniformTypeIdentifiers.dylib: __swift_FORCE_LOAD_$_swiftUniformTypeIdentifiers
__ libswiftWebKit.dylib: __swift_FORCE_LOAD_$_swiftWebKit
__ libswift_Concurrency.dylib: _swift_task_alloc
__ libswift_Concurrency.dylib: _swift_task_create
__ libswift_Concurrency.dylib: _swift_task_dealloc
__ libswift_Concurrency.dylib: _swift_task_switch
__ libswiftos.dylib: __swift_FORCE_LOAD_$_swiftos
__ libswiftsimd.dylib: __swift_FORCE_LOAD_$_swiftsimd
WallpaperAlbumViewControllerSpec : NSObject
 @property  PUPhotosGridViewControllerSpec *gridSpec

  // class methods
  +[WallpaperAlbumViewControllerSpec gridSpecClass]

  // instance methods
  -[WallpaperAlbumViewControllerSpec .cxx_destruct]
  -[WallpaperAlbumViewControllerSpec init]
  -[WallpaperAlbumViewControllerSpec gridSpec]
  -[WallpaperAlbumViewControllerSpec configureCollectionViewGridLayout:forWidth:safeAreaInsets:]
  -[WallpaperAlbumViewControllerSpec configureFactoryGridLayout:forWidth:andThumbnailSize:]


WallpaperAlbumViewControllerPhoneSpec : WallpaperAlbumViewControllerSpec
  // class methods
  +[WallpaperAlbumViewControllerPhoneSpec gridSpecClass]

  // instance methods
  -[WallpaperAlbumViewControllerPhoneSpec configureCollectionViewGridLayout:forWidth:safeAreaInsets:]
  -[WallpaperAlbumViewControllerPhoneSpec configureFactoryGridLayout:forWidth:andThumbnailSize:]


WallpaperAlbumViewControllerPadSpec : WallpaperAlbumViewControllerSpec
  // class methods
  +[WallpaperAlbumViewControllerPadSpec gridSpecClass]

  // instance methods
  -[WallpaperAlbumViewControllerPadSpec configureCollectionViewGridLayout:forWidth:safeAreaInsets:]
  -[WallpaperAlbumViewControllerPadSpec _defaultItemSize]
  -[WallpaperAlbumViewControllerPadSpec configureFactoryGridLayout:forWidth:andThumbnailSize:]
  -[WallpaperAlbumViewControllerPadSpec _gridMargins]
  -[WallpaperAlbumViewControllerPadSpec _minimumItemSpacing]
  -[WallpaperAlbumViewControllerPadSpec _maximumItemSpacing]


WallpaperPanoramaViewControllerSpec : NSObject
  // instance methods
  -[WallpaperPanoramaViewControllerSpec configureCollectionViewGridLayout:]
  -[WallpaperPanoramaViewControllerSpec panoramaSpec]
  -[WallpaperPanoramaViewControllerSpec combinedSidePadding]


WallpaperPanoramaViewControllerPhoneSpec : WallpaperPanoramaViewControllerSpec
  // instance methods
  -[WallpaperPanoramaViewControllerPhoneSpec panoramaSpec]


WallpaperPanoramaViewControllerPadSpec : WallpaperPanoramaViewControllerSpec
  // instance methods
  -[WallpaperPanoramaViewControllerPadSpec panoramaSpec]


WallpaperAlbumViewController : PUPhotosAlbumViewController <SBSUIWallpaperPreviewViewControllerDelegate, PSController>
 @property  WallpaperAlbumViewControllerSpec *wallpaperAlbumSpec
 @property  UIViewController<PSController> *parentController
 @property  PSRootController *rootController
 @property  PSSpecifier *specifier
 @property  PUPhotosGridDownloadHelper *downloadHelper
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WallpaperAlbumViewController preferredWhitePointAdaptivityStyle]
  -[WallpaperAlbumViewController initWithSpec:]
  -[WallpaperAlbumViewController handleURL:]
  -[WallpaperAlbumViewController suspend]
  -[WallpaperAlbumViewController didLock]
  -[WallpaperAlbumViewController collectionView:shouldSelectItemAtIndexPath:]
  -[WallpaperAlbumViewController didWake]
  -[WallpaperAlbumViewController parentController]
  -[WallpaperAlbumViewController .cxx_destruct]
  -[WallpaperAlbumViewController setSpecifier:]
  -[WallpaperAlbumViewController willResignActive]
  -[WallpaperAlbumViewController handleURL:withCompletion:]
  -[WallpaperAlbumViewController didUnlock]
  -[WallpaperAlbumViewController popupViewWillDisappear]
  -[WallpaperAlbumViewController setRootController:]
  -[WallpaperAlbumViewController formSheetViewWillDisappear]
  -[WallpaperAlbumViewController showController:]
  -[WallpaperAlbumViewController showController:animate:]
  -[WallpaperAlbumViewController canBeShownFromSuspendedState]
  -[WallpaperAlbumViewController readPreferenceValue:]
  -[WallpaperAlbumViewController setPreferenceValue:specifier:]
  -[WallpaperAlbumViewController statusBarWillAnimateByHeight:]
  -[WallpaperAlbumViewController setParentController:]
  -[WallpaperAlbumViewController willBecomeActive]
  -[WallpaperAlbumViewController shouldShowSectionHeaders]
  -[WallpaperAlbumViewController viewWillAppear:]
  -[WallpaperAlbumViewController popupViewDidDisappear]
  -[WallpaperAlbumViewController formSheetViewDidDisappear]
  -[WallpaperAlbumViewController specifier]
  -[WallpaperAlbumViewController willUnlock]
  -[WallpaperAlbumViewController dealloc]
  -[WallpaperAlbumViewController canDragIn]
  -[WallpaperAlbumViewController rootController]
  -[WallpaperAlbumViewController canDragOut]
  -[WallpaperAlbumViewController setAlbum:existingFetchResult:]
  -[WallpaperAlbumViewController newGridLayout]
  -[WallpaperAlbumViewController allowSlideshowButton]
  -[WallpaperAlbumViewController downloadHelper]
  -[WallpaperAlbumViewController updateLayoutMetrics]
  -[WallpaperAlbumViewController canNavigateToPhotoInteractively:]
  -[WallpaperAlbumViewController isPreheatingEnabled]
  -[WallpaperAlbumViewController shouldShowMenu]
  -[WallpaperAlbumViewController wallpaperPreviewViewControllerCancelButtonPressed:]
  -[WallpaperAlbumViewController wallpaperPreviewViewControllerSetButtonPressed:]
  -[WallpaperAlbumViewController wallpaperAlbumSpec]
  -[WallpaperAlbumViewController allowsPeeking]
  -[WallpaperAlbumViewController setWallpaperAlbumSpec:]


WallpaperPhotoCell : UICollectionViewCell
 @property  UIImage *image
 @property  BOOL appearanceAware

  // instance methods
  -[WallpaperPhotoCell setHighlighted:]
  -[WallpaperPhotoCell _updateHighlight]
  -[WallpaperPhotoCell image]
  -[WallpaperPhotoCell .cxx_destruct]
  -[WallpaperPhotoCell _updateImageView]
  -[WallpaperPhotoCell layoutSubviews]
  -[WallpaperPhotoCell prepareForReuse]
  -[WallpaperPhotoCell initWithFrame:]
  -[WallpaperPhotoCell setImage:]
  -[WallpaperPhotoCell _configureView]
  -[WallpaperPhotoCell appearanceAware]
  -[WallpaperPhotoCell setAppearanceAware:]


WallpaperAlbumListTableViewControllerSpec : NSObject
  // instance methods
  -[WallpaperAlbumListTableViewControllerSpec cellHeight]
  -[WallpaperAlbumListTableViewControllerSpec thumbnailSize]
  -[WallpaperAlbumListTableViewControllerSpec panoramaSpec]
  -[WallpaperAlbumListTableViewControllerSpec magicCellSpec]
  -[WallpaperAlbumListTableViewControllerSpec _workaroundThumbnailSizeForItemCount:]
  -[WallpaperAlbumListTableViewControllerSpec albumListSpec]
  -[WallpaperAlbumListTableViewControllerSpec albumViewSpec]
  -[WallpaperAlbumListTableViewControllerSpec cellContentViewXInset]


WallpaperAlbumListTableViewControllerPhoneSpec : WallpaperAlbumListTableViewControllerSpec
  // instance methods
  -[WallpaperAlbumListTableViewControllerPhoneSpec panoramaSpec]
  -[WallpaperAlbumListTableViewControllerPhoneSpec magicCellSpec]
  -[WallpaperAlbumListTableViewControllerPhoneSpec albumListSpec]
  -[WallpaperAlbumListTableViewControllerPhoneSpec albumViewSpec]


WallpaperAlbumListTableViewControllerPadSpec : WallpaperAlbumListTableViewControllerSpec
  // instance methods
  -[WallpaperAlbumListTableViewControllerPadSpec panoramaSpec]
  -[WallpaperAlbumListTableViewControllerPadSpec magicCellSpec]
  -[WallpaperAlbumListTableViewControllerPadSpec albumListSpec]
  -[WallpaperAlbumListTableViewControllerPadSpec albumViewSpec]


WallpaperAlbumListTableViewController : PUAlbumListViewController <WSBundleCollectionsTableViewCellDelegate, PSController>
 @property  WallpaperAlbumListTableViewControllerSpec *wallpaperAlbumListTableViewSpec
 @property  UIViewController<PSController> *parentController
 @property  PSRootController *rootController
 @property  PSSpecifier *specifier
 @property  WKWallpaperBundleImporter *wallpaperBundleImporter
 @property  double layoutReferenceWidth
 @property  {CGSize=dd} canonicalButtonSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WallpaperAlbumListTableViewController preferredWhitePointAdaptivityStyle]
  -[WallpaperAlbumListTableViewController initWithSpec:]
  -[WallpaperAlbumListTableViewController handleURL:]
  -[WallpaperAlbumListTableViewController _updateLayout]
  -[WallpaperAlbumListTableViewController suspend]
  -[WallpaperAlbumListTableViewController didLock]
  -[WallpaperAlbumListTableViewController didWake]
  -[WallpaperAlbumListTableViewController parentController]
  -[WallpaperAlbumListTableViewController tableView:numberOfRowsInSection:]
  -[WallpaperAlbumListTableViewController tableView:titleForHeaderInSection:]
  -[WallpaperAlbumListTableViewController tableView:heightForRowAtIndexPath:]
  -[WallpaperAlbumListTableViewController .cxx_destruct]
  -[WallpaperAlbumListTableViewController setSpecifier:]
  -[WallpaperAlbumListTableViewController tableViewStyle]
  -[WallpaperAlbumListTableViewController tableView:didSelectRowAtIndexPath:]
  -[WallpaperAlbumListTableViewController tableView:cellForRowAtIndexPath:]
  -[WallpaperAlbumListTableViewController layoutReferenceWidth]
  -[WallpaperAlbumListTableViewController willResignActive]
  -[WallpaperAlbumListTableViewController handleURL:withCompletion:]
  -[WallpaperAlbumListTableViewController didUnlock]
  -[WallpaperAlbumListTableViewController popupViewWillDisappear]
  -[WallpaperAlbumListTableViewController setRootController:]
  -[WallpaperAlbumListTableViewController formSheetViewWillDisappear]
  -[WallpaperAlbumListTableViewController showController:]
  -[WallpaperAlbumListTableViewController showController:animate:]
  -[WallpaperAlbumListTableViewController canBeShownFromSuspendedState]
  -[WallpaperAlbumListTableViewController readPreferenceValue:]
  -[WallpaperAlbumListTableViewController setPreferenceValue:specifier:]
  -[WallpaperAlbumListTableViewController statusBarWillAnimateByHeight:]
  -[WallpaperAlbumListTableViewController setParentController:]
  -[WallpaperAlbumListTableViewController willBecomeActive]
  -[WallpaperAlbumListTableViewController viewDidLayoutSubviews]
  -[WallpaperAlbumListTableViewController viewWillAppear:]
  -[WallpaperAlbumListTableViewController popupViewDidDisappear]
  -[WallpaperAlbumListTableViewController formSheetViewDidDisappear]
  -[WallpaperAlbumListTableViewController specifier]
  -[WallpaperAlbumListTableViewController willUnlock]
  -[WallpaperAlbumListTableViewController _prepareStackView:forCollection:withStackCount:withCustomEmptyPlaceHolderImage:]
  -[WallpaperAlbumListTableViewController assetsFilterPredicate]
  -[WallpaperAlbumListTableViewController rootController]
  -[WallpaperAlbumListTableViewController updateSpec]
  -[WallpaperAlbumListTableViewController filteringAssetTypes]
  -[WallpaperAlbumListTableViewController showsEmptyPlaceholderWhenEmpty]
  -[WallpaperAlbumListTableViewController canShowAvatarViews]
  -[WallpaperAlbumListTableViewController setTitleForCell:withCollection:]
  -[WallpaperAlbumListTableViewController showsTopPlaceholdersSection]
  -[WallpaperAlbumListTableViewController backgroundColorForTableView]
  -[WallpaperAlbumListTableViewController canShowSyncProgress]
  -[WallpaperAlbumListTableViewController setLayoutReferenceWidth:]
  -[WallpaperAlbumListTableViewController setWallpaperBundleImporter:]
  -[WallpaperAlbumListTableViewController setCanonicalButtonSize:]
  -[WallpaperAlbumListTableViewController wallpaperBundleImporter]
  -[WallpaperAlbumListTableViewController canonicalButtonSize]
  -[WallpaperAlbumListTableViewController wallpaperAlbumListTableViewSpec]
  -[WallpaperAlbumListTableViewController _navigateToStills]
  -[WallpaperAlbumListTableViewController _navigateToLive]
  -[WallpaperAlbumListTableViewController _navigateToDynamic]
  -[WallpaperAlbumListTableViewController navigateToAssetContainer:animated:completion:]
  -[WallpaperAlbumListTableViewController _configureWallpaperViewControllerAllowedActions:]
  -[WallpaperAlbumListTableViewController bundleCollectionsTableViewCell:didTapOnBundleCollectionWithWallpaperType:]
  -[WallpaperAlbumListTableViewController _navigateToVR]
  -[WallpaperAlbumListTableViewController _navigateToPanorama]
  -[WallpaperAlbumListTableViewController setWallpaperAlbumListTableViewSpec:]


WallpaperMagicTableViewCellSpec : NSObject
  // instance methods
  -[WallpaperMagicTableViewCellSpec magicButtonHorizontalMarginForWidth:]
  -[WallpaperMagicTableViewCellSpec stillsThumbnailImageName]
  -[WallpaperMagicTableViewCellSpec magicButtonVerticalMargin]
  -[WallpaperMagicTableViewCellSpec magicLabelHeight]
  -[WallpaperMagicTableViewCellSpec motionThumbnailImageName]


WallpaperMagicTableViewCellPhoneSpec : WallpaperMagicTableViewCellSpec
  // instance methods
  -[WallpaperMagicTableViewCellPhoneSpec magicButtonHorizontalMarginForWidth:]
  -[WallpaperMagicTableViewCellPhoneSpec stillsThumbnailImageName]


WallpaperMagicTableViewCellPadSpec : WallpaperMagicTableViewCellSpec
  // instance methods
  -[WallpaperMagicTableViewCellPadSpec magicButtonHorizontalMarginForWidth:]
  -[WallpaperMagicTableViewCellPadSpec stillsThumbnailImageName]


PUPhotosPanoramaHeaderView : UICollectionReusableView
 @property  UILabel *titleLabel

  // instance methods
  -[PUPhotosPanoramaHeaderView titleLabel]
  -[PUPhotosPanoramaHeaderView setTitle:]
  -[PUPhotosPanoramaHeaderView .cxx_destruct]
  -[PUPhotosPanoramaHeaderView setTitleLabel:]
  -[PUPhotosPanoramaHeaderView layoutSubviews]
  -[PUPhotosPanoramaHeaderView prepareForReuse]
  -[PUPhotosPanoramaHeaderView initWithFrame:]


WallpaperPanoramaViewController : PUPhotosPanoramaViewController <SBSUIWallpaperPreviewViewControllerDelegate>
 @property  WallpaperPanoramaViewControllerSpec *_wallpaperPanoramaSpec
 @property  NSDictionary *_variantBeingPreviewed
 @property  NSDictionary *_optionsBeingPreviewed
 @property  NSArray *_wallpaperVariants
 @property  BOOL mineOnly
 @property  SBSUIWallpaperPreviewViewController *_previewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WallpaperPanoramaViewController collectionView:numberOfItemsInSection:]
  -[WallpaperPanoramaViewController preferredWhitePointAdaptivityStyle]
  -[WallpaperPanoramaViewController initWithSpec:]
  -[WallpaperPanoramaViewController numberOfSectionsInCollectionView:]
  -[WallpaperPanoramaViewController isEmpty]
  -[WallpaperPanoramaViewController collectionView:shouldSelectItemAtIndexPath:]
  -[WallpaperPanoramaViewController .cxx_destruct]
  -[WallpaperPanoramaViewController _previewController]
  -[WallpaperPanoramaViewController canBeShownFromSuspendedState]
  -[WallpaperPanoramaViewController canDragIn]
  -[WallpaperPanoramaViewController loadView]
  -[WallpaperPanoramaViewController canDragOut]
  -[WallpaperPanoramaViewController configureSupplementaryView:ofKind:forIndexPath:]
  -[WallpaperPanoramaViewController newGridLayout]
  -[WallpaperPanoramaViewController allowSlideshowButton]
  -[WallpaperPanoramaViewController updateLayoutMetrics]
  -[WallpaperPanoramaViewController canNavigateToPhotoInteractively:]
  -[WallpaperPanoramaViewController isPreheatingEnabled]
  -[WallpaperPanoramaViewController configureGridCell:forItemAtIndexPath:]
  -[WallpaperPanoramaViewController shouldShowMenu]
  -[WallpaperPanoramaViewController _itemSizeForWidth:]
  -[WallpaperPanoramaViewController wallpaperPreviewViewControllerCancelButtonPressed:]
  -[WallpaperPanoramaViewController wallpaperPreviewViewControllerSetButtonPressed:]
  -[WallpaperPanoramaViewController allowsPeeking]
  -[WallpaperPanoramaViewController initWithSpec:mineOnly:]
  -[WallpaperPanoramaViewController _setWallpaperPanoramaSpec:]
  -[WallpaperPanoramaViewController _setWallpaperVariants:]
  -[WallpaperPanoramaViewController _wallpaperVariants]
  -[WallpaperPanoramaViewController navigateToFactoryWallpaperAtIndex:]
  -[WallpaperPanoramaViewController navigateToPhoto:]
  -[WallpaperPanoramaViewController presentPreviewControllerWithWallpaperDict:photo:andOptions:]
  -[WallpaperPanoramaViewController _setVariantBeingPreviewed:]
  -[WallpaperPanoramaViewController _setOptionsBeingPreviewed:]
  -[WallpaperPanoramaViewController _wallpaperPanoramaSpec]
  -[WallpaperPanoramaViewController _variantBeingPreviewed]
  -[WallpaperPanoramaViewController _optionsBeingPreviewed]
  -[WallpaperPanoramaViewController mineOnly]
  -[WallpaperPanoramaViewController setMineOnly:]
  -[WallpaperPanoramaViewController _setPreviewController:]


WSWallpaperSettingsCoordinator : NSObject <WSBaseCoordinator>
 @property  WSWallpaperSettingsCoordinatorInternal *_storage
 @property  UINavigationController *navigationController

  // instance methods
  -[WSWallpaperSettingsCoordinator _storage]
  -[WSWallpaperSettingsCoordinator .cxx_destruct]
  -[WSWallpaperSettingsCoordinator initWithNavigationController:]
  -[WSWallpaperSettingsCoordinator navigationController]
  -[WSWallpaperSettingsCoordinator start]
  -[WSWallpaperSettingsCoordinator runTestWithTestName:options:]
  -[WSWallpaperSettingsCoordinator set_storage:]


WSBundleCollectionsTableViewCell : UITableViewCell <WSBundleCollectionOptionViewDelegate>
 @property  UIStackView *_stackView
 @property  NSMutableArray *_optionViews
 @property  <WSBundleCollectionsTableViewCellDelegate> *delegate
 @property  {CGSize=dd} canonicalButtonSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WSBundleCollectionsTableViewCell .cxx_destruct]
  -[WSBundleCollectionsTableViewCell setDelegate:]
  -[WSBundleCollectionsTableViewCell _stackView]
  -[WSBundleCollectionsTableViewCell delegate]
  -[WSBundleCollectionsTableViewCell initWithStyle:reuseIdentifier:]
  -[WSBundleCollectionsTableViewCell _configureView]
  -[WSBundleCollectionsTableViewCell set_stackView:]
  -[WSBundleCollectionsTableViewCell setCanonicalButtonSize:]
  -[WSBundleCollectionsTableViewCell addViewForBundleCollection:]
  -[WSBundleCollectionsTableViewCell canonicalButtonSize]
  -[WSBundleCollectionsTableViewCell _optionViews]
  -[WSBundleCollectionsTableViewCell userDidTapBundleCollectionOptionView:]
  -[WSBundleCollectionsTableViewCell set_optionViews:]


WallpaperGridViewController : UICollectionViewController <SBSUIWallpaperPreviewViewControllerDelegate, PSStateRestoration>
 @property  WKWallpaperBundleCollection *_bundleCollection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WallpaperGridViewController collectionView:cellForItemAtIndexPath:]
  -[WallpaperGridViewController collectionView:numberOfItemsInSection:]
  -[WallpaperGridViewController numberOfSectionsInCollectionView:]
  -[WallpaperGridViewController collectionView:didSelectItemAtIndexPath:]
  -[WallpaperGridViewController .cxx_destruct]
  -[WallpaperGridViewController viewDidLoad]
  -[WallpaperGridViewController canBeShownFromSuspendedState]
  -[WallpaperGridViewController wallpaperPreviewViewControllerCancelButtonPressed:]
  -[WallpaperGridViewController wallpaperPreviewViewControllerSetButtonPressed:]
  -[WallpaperGridViewController initWithWallperBundleCollection:]
  -[WallpaperGridViewController _bundleCollection]
  -[WallpaperGridViewController _thumbnailForWallpaperBundle:]
  -[WallpaperGridViewController _wallpaperPreviewController:wallpaperLocations:]
  -[WallpaperGridViewController set_bundleCollection:]


WSBundleCollectionOptionView : UIView
 @property  UIStackView *_stackView
 @property  UIButton *_button
 @property  UILabel *_label
 @property  NSLayoutConstraint *_buttonHeightConstraint
 @property  NSLayoutConstraint *_buttonWidthConstraint
 @property  WKWallpaperBundleCollection *bundleCollection
 @property  <WSBundleCollectionOptionViewDelegate> *delegate
 @property  {CGSize=dd} canonicalButtonSize

  // instance methods
  -[WSBundleCollectionOptionView _label]
  -[WSBundleCollectionOptionView _button]
  -[WSBundleCollectionOptionView traitCollectionDidChange:]
  -[WSBundleCollectionOptionView .cxx_destruct]
  -[WSBundleCollectionOptionView setDelegate:]
  -[WSBundleCollectionOptionView _stackView]
  -[WSBundleCollectionOptionView delegate]
  -[WSBundleCollectionOptionView _configureView]
  -[WSBundleCollectionOptionView _buttonHeightConstraint]
  -[WSBundleCollectionOptionView set_label:]
  -[WSBundleCollectionOptionView set_stackView:]
  -[WSBundleCollectionOptionView setCanonicalButtonSize:]
  -[WSBundleCollectionOptionView canonicalButtonSize]
  -[WSBundleCollectionOptionView initWithFrame:bundleCollection:canonicalButtonSize:]
  -[WSBundleCollectionOptionView bundleCollection]
  -[WSBundleCollectionOptionView set_button:]
  -[WSBundleCollectionOptionView _imageForButtonForCurrentInterfaceStyle]
  -[WSBundleCollectionOptionView _userDidTapButton:]
  -[WSBundleCollectionOptionView set_buttonHeightConstraint:]
  -[WSBundleCollectionOptionView set_buttonWidthConstraint:]
  -[WSBundleCollectionOptionView _buttonWidthConstraint]


WSWallpaperSettingsCoordinatorInternal : NSObject <WSBaseCoordinator>
 @property  UINavigationController *navigationController

  // instance methods
  -[WSWallpaperSettingsCoordinatorInternal .cxx_destruct]
  -[WSWallpaperSettingsCoordinatorInternal init]
  -[WSWallpaperSettingsCoordinatorInternal initWithNavigationController:]
  -[WSWallpaperSettingsCoordinatorInternal setNavigationController:]
  -[WSWallpaperSettingsCoordinatorInternal navigationController]
  -[WSWallpaperSettingsCoordinatorInternal start]
  -[WSWallpaperSettingsCoordinatorInternal dealloc]


_TtC17WallpaperSettings28WallpaperOverviewCoordinator : Swift._SwiftObject <WSBaseCoordinator>
  // instance methods
  -[_TtC17WallpaperSettings28WallpaperOverviewCoordinator start]


_TtC17WallpaperSettingsP33_66B62FA33698A2DE4AB0698BF46489989FindClass : NSObject
  // instance methods
  -[_TtC17WallpaperSettingsP33_66B62FA33698A2DE4AB0698BF46489989FindClass init]


_TtC17WallpaperSettings32UserInteractionEnabledObservable : Swift._SwiftObject

_TtC17WallpaperSettings45CurrentSystemShellWallpaperPreviewCoordinator : NSObject
  // instance methods
  -[_TtC17WallpaperSettings45CurrentSystemShellWallpaperPreviewCoordinator .cxx_destruct]
  -[_TtC17WallpaperSettings45CurrentSystemShellWallpaperPreviewCoordinator init]


_TtC17WallpaperSettings25SystemShellPreviewFetcher : Swift._SwiftObject

_TtC17WallpaperSettings36WallpaperPreviewNavigationController : UINavigationController
 @property  unsigned long supportedInterfaceOrientations
 @property  BOOL prefersStatusBarHidden
 @property  long long preferredStatusBarStyle

  // instance methods
  -[_TtC17WallpaperSettings36WallpaperPreviewNavigationController preferredStatusBarStyle]
  -[_TtC17WallpaperSettings36WallpaperPreviewNavigationController prefersStatusBarHidden]
  -[_TtC17WallpaperSettings36WallpaperPreviewNavigationController initWithCoder:]
  -[_TtC17WallpaperSettings36WallpaperPreviewNavigationController viewDidLoad]
  -[_TtC17WallpaperSettings36WallpaperPreviewNavigationController initWithNibName:bundle:]
  -[_TtC17WallpaperSettings36WallpaperPreviewNavigationController initWithNavigationBarClass:toolbarClass:]
  -[_TtC17WallpaperSettings36WallpaperPreviewNavigationController initWithRootViewController:]
  -[_TtC17WallpaperSettings36WallpaperPreviewNavigationController supportedInterfaceOrientations]


_TtC17WallpaperSettings19ListInsetObservable : Swift._SwiftObject

UIDevice(WSAdditions)
	// instance methods
	-[UIDevice(WSAdditions) ws_hasFaceID]

WSWallpaperSettingsCoordinatorInternal(WallpaperSettings)
	// instance methods
	-[WSWallpaperSettingsCoordinatorInternal(WallpaperSettings) runTestWithTestName:options:]

_TtC17WallpaperSettings45CurrentSystemShellWallpaperPreviewCoordinator(WallpaperSettings)
	// instance methods
	-[_TtC17WallpaperSettings45CurrentSystemShellWallpaperPreviewCoordinator(WallpaperSettings) start]
	-[_TtC17WallpaperSettings45CurrentSystemShellWallpaperPreviewCoordinator(WallpaperSettings) wallpaperPreviewViewControllerCancelButtonPressed:]
	-[_TtC17WallpaperSettings45CurrentSystemShellWallpaperPreviewCoordinator(WallpaperSettings) wallpaperPreviewViewControllerSetButtonPressed:]

01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutDimension 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutGroup 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutItem 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSection 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSize 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSpacing 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1100 /usr/lib/libSystem.B.dylib: OS_dispatch_queue 
01 00 1100 /usr/lib/libSystem.B.dylib: OS_os_log 
01 00 0500 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCollection 
01 00 0500 /System/Library/Frameworks/Photos.framework/Photos: PHCollection 
01 00 0500 /System/Library/Frameworks/Photos.framework/Photos: PHCollectionList 
01 00 0500 /System/Library/Frameworks/Photos.framework/Photos: PHFetchOptions 
01 00 0500 /System/Library/Frameworks/Photos.framework/Photos: PHImageManager 
01 00 0500 /System/Library/Frameworks/Photos.framework/Photos: PHPhotoLibrary 
01 00 0400 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLFilteredAlbum 
01 00 0100 /System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/PhotoLibraryServicesCore: PLImageFormat 
01 00 0800 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSpecifier 
01 00 0600 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUAlbumListViewController 
01 00 0600 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUAlbumListViewControllerPhoneImagePickerSpec 
01 00 0600 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUPhotosAlbumViewController 
01 00 0600 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUPhotosGridDownloadHelper 
01 00 0600 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUPhotosGridViewControllerPadSpec 
01 00 0600 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUPhotosGridViewControllerPhoneSpec 
01 00 0600 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUPhotosPanoramaViewController 
01 00 0600 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUPhotosPanoramaViewControllerPadSpec 
01 00 0600 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUPhotosPanoramaViewControllerPhoneSpec 
01 00 0600 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUSectionedGridLayout 
01 00 0700 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitCollectionsDataSourceManagerConfiguration 
01 00 0a00 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBSUIWallpaperPreviewViewController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionReusableView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayout 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1400 /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation: UIFont 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0d00 /System/Library/PrivateFrameworks/WallpaperKit.framework/WallpaperKit: WKHeritageStripeImageGenerator 
01 00 0d00 /System/Library/PrivateFrameworks/WallpaperKit.framework/WallpaperKit: WKIndicatorView 
01 00 0d00 /System/Library/PrivateFrameworks/WallpaperKit.framework/WallpaperKit: WKPhotoWallpaperBundle 
01 00 0d00 /System/Library/PrivateFrameworks/WallpaperKit.framework/WallpaperKit: WKWallpaperBundleImporter 
01 00 0d00 /System/Library/PrivateFrameworks/WallpaperKit.framework/WallpaperKit: WKWallpaperPreviewViewControllerFactory 
01 00 1900 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
