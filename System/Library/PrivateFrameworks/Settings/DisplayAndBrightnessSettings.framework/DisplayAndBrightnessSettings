|| __DATA.__objc_data _OBJC_CLASS_$_DBSDeviceDisplayZoomAnimationView
|| __DATA.__objc_data _OBJC_CLASS_$_DBSDisplayZoomConfigurationController
|| __DATA.__objc_data _OBJC_CLASS_$_DBSDisplayZoomMode
|| __DATA.__objc_data _OBJC_CLASS_$_DBSHomeScreenPadListController
|| __DATA.__objc_data _OBJC_CLASS_$_DBSLargeTextController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSDeviceDisplayZoomAnimationView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSDisplayZoomConfigurationController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSDisplayZoomMode
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSHomeScreenPadListController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSLargeTextController
|| __DATA_CONST.__const _DBSLargeTextUsesExtendedRangeKey
|| __DATA_CONST.__const _DBSMagnifyModeDidChangeNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DBSHomeScreenBaseListController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DBSHomeScreenPhoneListController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DBSSettingsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DBSHomeScreenBaseListController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DBSHomeScreenPhoneListController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DBSSettingsController
|| __TEXT.__text _DBSAnimationPackageURLForDisplayZoomOptionAndUserInterfaceStyle
|| __TEXT.__text _DBSLockScreenTimeString
|| __TEXT.__text _DBSLogForCategory
|| __TEXT.__text _DBSPurgeKeyboardCache
|| __TEXT.__text _DBSStillPreviewImageForDisplayZoomOption
|| __TEXT.__text _DBSStringForDisplayZoomOption
|| __TEXT.__text _DBS_BundleForDisplayAndBrightnessSettingsFramework
|| __TEXT.__text _DBS_LocalizedStringForColorSchedule
|| __TEXT.__text _DBS_LocalizedStringForColorTemperature
|| __TEXT.__text _DBS_LocalizedStringForConnectedDisplays
|| __TEXT.__text _DBS_LocalizedStringForContinuousExpose
|| __TEXT.__text _DBS_LocalizedStringForDeviceAppearance
|| __TEXT.__text _DBS_LocalizedStringForDisplays
|| __TEXT.__text _DBS_LocalizedStringForFineTune
|| __TEXT.__text _DBS_LocalizedStringForHomeScreenBase
|| __TEXT.__text _DBS_LocalizedStringForHomeScreenPad
|| __TEXT.__text _DBS_LocalizedStringForLargeFontSettings
|| __TEXT.__text _DBS_LocalizedStringForMagnify
|| __TEXT.__text _DBS_LocalizedStringForPictureInPicture
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _OBJC_CLASS_$_CPAggregateDictionary
__ AppSupport: _OBJC_CLASS_$_CPBitmapStore
__ BackBoardServices: _BKSDisplayBrightnessGetCurrent
__ BackBoardServices: _BKSDisplayBrightnessSet
__ BackBoardServices: _BKSDisplayBrightnessTransactionCreate
__ CloudSettings: _OBJC_CLASS_$_CloudSettingsManager
__ CoreBrightness: _OBJC_CLASS_$_BrightnessSystemClient
__ CoreBrightness: _OBJC_CLASS_$_CBClient
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFLocaleCurrentLocaleDidChangeNotification
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreText: _CTFontCreateCopyOfSystemUIFontWithGrade
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: __NSDictionaryOfVariableBindings
__ FrontBoardServices: _OBJC_CLASS_$_FBSSystemService
__ GraphicsServices: _GSSendAppPreferencesChanged
__ IOMobileFramebuffer: _IOMobileFramebufferGetCanvasSizes
__ IOMobileFramebuffer: _IOMobileFramebufferOpenByName
__ IOMobileFramebuffer: _IOMobileFramebufferSetCanvasSize
__ ManagedConfiguration: _MCFeatureAutoLockTime
__ ManagedConfiguration: _MCSetParametersForSettingsByTypeParamSenderPID
__ ManagedConfiguration: _MCSettingParameterRangeMaximumKey
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ Pegasus: _OBJC_CLASS_$_PGPictureInPictureProxy
__ Preferences: _OBJC_CLASS_$_PSCapabilityManager
__ Preferences: _OBJC_CLASS_$_PSConfirmationSpecifier
__ Preferences: _OBJC_CLASS_$_PSDateTimePickerCell
__ Preferences: _OBJC_CLASS_$_PSEditableTableCell
__ Preferences: _OBJC_CLASS_$_PSListController
__ Preferences: _OBJC_CLASS_$_PSListControllerDefaultAppearanceProvider
__ Preferences: _OBJC_CLASS_$_PSSegmentableSlider
__ Preferences: _OBJC_CLASS_$_PSSetupController
__ Preferences: _OBJC_CLASS_$_PSSliderTableCell
__ Preferences: _OBJC_CLASS_$_PSSpecifier
__ Preferences: _OBJC_CLASS_$_PSTableCell
__ Preferences: _OBJC_CLASS_$_PSTimeRangeCell
__ Preferences: _OBJC_CLASS_$_PSViewController
__ Preferences: _OBJC_IVAR_$_PSEditableTableCell._realTarget
__ Preferences: _OBJC_IVAR_$_PSEditableTableCell._targetSetter
__ Preferences: _OBJC_IVAR_$_PSListController._specifiers
__ Preferences: _OBJC_IVAR_$_PSListController._table
__ Preferences: _OBJC_IVAR_$_PSSliderTableCell._disabledView
__ Preferences: _OBJC_IVAR_$_PSViewController._specifier
__ Preferences: _OBJC_METACLASS_$_PSEditableTableCell
__ Preferences: _OBJC_METACLASS_$_PSListController
__ Preferences: _OBJC_METACLASS_$_PSListControllerDefaultAppearanceProvider
__ Preferences: _OBJC_METACLASS_$_PSSliderTableCell
__ Preferences: _OBJC_METACLASS_$_PSTableCell
__ Preferences: _OBJC_METACLASS_$_PSViewController
__ Preferences: _PSAlignmentKey
__ Preferences: _PSAllowMultilineTitleKey
__ Preferences: _PSAutoWhiteBalanceCapability
__ Preferences: _PSCellClassKey
__ Preferences: _PSConfirmationCancelKey
__ Preferences: _PSConfirmationOKKey
__ Preferences: _PSConfirmationPromptKey
__ Preferences: _PSConfirmationTitleKey
__ Preferences: _PSControlKey
__ Preferences: _PSControlMaximumKey
__ Preferences: _PSControlMinimumKey
__ Preferences: _PSDatePickerInlineKey
__ Preferences: _PSDefaultValueKey
__ Preferences: _PSDefaultsKey
__ Preferences: _PSDisplayZoomCapability
__ Preferences: _PSEnabledKey
__ Preferences: _PSFooterCellClassGroupKey
__ Preferences: _PSFooterTextGroupKey
__ Preferences: _PSGetCapabilityBoolAnswer
__ Preferences: _PSHeaderCellClassGroupKey
__ Preferences: _PSIDKey
__ Preferences: _PSIconImageKey
__ Preferences: _PSIsInEDUMode
__ Preferences: _PSIsRadioGroupKey
__ Preferences: _PSKeyNameKey
__ Preferences: _PSLocalizablePearlStringForKey
__ Preferences: _PSNightShiftCapability
__ Preferences: _PSRadioGroupCheckedSpecifierKey
__ Preferences: _PSRaiseToWakeCapability
__ Preferences: _PSRequiredCapabilitiesKey
__ Preferences: _PSRetailKioskModeCapability
__ Preferences: _PSRoundToPixel
__ Preferences: _PSSetupCustomClassKey
__ Preferences: _PSSliderIsContinuous
__ Preferences: _PSSliderIsSegmented
__ Preferences: _PSSliderLeftImageKey
__ Preferences: _PSSliderRightImageKey
__ Preferences: _PSSpecifierIsSearchableKey
__ Preferences: _PSStaticTextMessageKey
__ Preferences: _PSTableCellHeightKey
__ Preferences: _PSTableCellKey
__ Preferences: _PSTitleKey
__ Preferences: _PSValueKey
__ Preferences: _PreferencesTableViewFooterFont
__ QuartzCore: _OBJC_CLASS_$_CADisplay
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAPackage
__ QuartzCore: _OBJC_CLASS_$_CAStateController
__ QuartzCore: _kCADisplayModeDolby
__ QuartzCore: _kCADisplayModeHDR10
__ QuartzCore: _kCADisplayModeSDR
__ QuartzCore: _kCAFillModeBackwards
__ QuartzCore: _kCAGravityResizeAspect
__ QuartzCore: _kCAPackageTypeCAMLBundle
__ SpringBoardServices: _OBJC_CLASS_$_SBSExternalDisplayService
__ SpringBoardServices: _OBJC_CLASS_$_SBSHomeScreenService
__ SpringBoardServices: _OBJC_CLASS_$_SBSMutableDisplayModeSettings
__ SpringBoardServices: _OBJC_CLASS_$_SBSRelativeDisplayArrangement
__ SpringBoardServices: _OBJC_CLASS_$_SBSRelaunchAction
__ UIKit: _NSStringFromCGSize
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIButtonConfiguration
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDatePicker
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIImpactFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UISlider
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewCellLayoutManagerValue1
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIWindowScene
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UIStackView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewCellLayoutManagerValue1
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIAccessibilityTraitButton
__ UIKit: _UIAccessibilityTraitNone
__ UIKit: _UIAccessibilityTraitSelected
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontWeightLight
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIRectGetCenter
__ UIKit: _UIScreenBrightnessDidChangeNotification
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: __UIUpdatedVisualStyleEnabled
__ UIKitServices: _OBJC_CLASS_$_UISUserInterfaceStyleMode
__ UIKitServices: _UISUserInterfaceStyleModeOverrideNone
__ UIKitServices: _UISUserInterfaceStyleModeScheduleDefault
__ UIKitServices: _UISUserInterfaceStyleModeScheduleNone
__ UIKitServices: _UISUserInterfaceStyleModeSchedulesEqual
__ UIKitServices: _UISUserInterfaceStyleModeValueIsAutomatic
__ libAccessibility.dylib: __AXSAttentionAwarenessFeaturesEnabled
__ libAccessibility.dylib: __AXSDisableScreenFilters
__ libAccessibility.dylib: __AXSEnhanceTextLegibilityEnabled
__ libAccessibility.dylib: __AXSScreenFilterApplied
__ libAccessibility.dylib: __AXSSetEnhanceTextLegibilityEnabled
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGCopyAnswerWithError
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___invert_d3
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
DBSContinuousExposeLayoutAnimationView : UIView
 @property  CALayer *packageLayer
 @property  CAPackage *package
 @property  CAStateController *stateController
 @property  CAState *currentState
 @property  double scaleFactor

  // instance methods
  -[DBSContinuousExposeLayoutAnimationView package]
  -[DBSContinuousExposeLayoutAnimationView setCurrentState:]
  -[DBSContinuousExposeLayoutAnimationView setScaleFactor:]
  -[DBSContinuousExposeLayoutAnimationView scaleFactor]
  -[DBSContinuousExposeLayoutAnimationView .cxx_destruct]
  -[DBSContinuousExposeLayoutAnimationView stateController]
  -[DBSContinuousExposeLayoutAnimationView drawRect:]
  -[DBSContinuousExposeLayoutAnimationView intrinsicContentSize]
  -[DBSContinuousExposeLayoutAnimationView initWithFrame:]
  -[DBSContinuousExposeLayoutAnimationView currentState]
  -[DBSContinuousExposeLayoutAnimationView setPackage:]
  -[DBSContinuousExposeLayoutAnimationView preferredSize]
  -[DBSContinuousExposeLayoutAnimationView packageLayer]
  -[DBSContinuousExposeLayoutAnimationView setPackageLayer:]
  -[DBSContinuousExposeLayoutAnimationView setStateController:]
  -[DBSContinuousExposeLayoutAnimationView configureView]
  -[DBSContinuousExposeLayoutAnimationView packageURLForContinuousExposeLayoutAnimation]
  -[DBSContinuousExposeLayoutAnimationView packageStateNameWithState:]
  -[DBSContinuousExposeLayoutAnimationView animateToState:animated:]
  -[DBSContinuousExposeLayoutAnimationView updatePackageLayerWithPackage:]
  -[DBSContinuousExposeLayoutAnimationView scaleFactorForInterfaceOrientation:]


DBSMultitaskingContinuousExposeController : PSListController <SBSExternalDisplayServiceObserver>
 @property  SBSExternalDisplayService *displayService
 @property  SBSConnectedDisplayInfo *externalDisplayInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBSMultitaskingContinuousExposeController viewWillTransitionToSize:withTransitionCoordinator:]
  -[DBSMultitaskingContinuousExposeController tableView:cellForRowAtIndexPath:]
  -[DBSMultitaskingContinuousExposeController specifiers]
  -[DBSMultitaskingContinuousExposeController dealloc]
  -[DBSMultitaskingContinuousExposeController .cxx_destruct]
  -[DBSMultitaskingContinuousExposeController externalDisplayDidConnect:]
  -[DBSMultitaskingContinuousExposeController externalDisplayWillDisconnect:]
  -[DBSMultitaskingContinuousExposeController init]
  -[DBSMultitaskingContinuousExposeController externalDisplayDidUpdateProperties:]
  -[DBSMultitaskingContinuousExposeController setContinuousExposeEnabled:specifier:]
  -[DBSMultitaskingContinuousExposeController updateExternalDisplayInfoWithCompletionHandler:]
  -[DBSMultitaskingContinuousExposeController reloadSpecifierLayoutChooser]
  -[DBSMultitaskingContinuousExposeController displayService]
  -[DBSMultitaskingContinuousExposeController setDisplayService:]
  -[DBSMultitaskingContinuousExposeController externalDisplayInfo]
  -[DBSMultitaskingContinuousExposeController setExternalDisplayInfo:]


DBSColorTemperatureController : PSListController <PSTimeRangeCellDelegate>
 @property  CBClient *_brightnessClient
 @property  PSSpecifier *_scheduleRangeSpecifier
 @property  PSSpecifier *_scheduleSwitchSpecifier
 @property  PSSpecifier *_manualSwitchSpecifier
 @property  PSSpecifier *_temperatureSlider

  // instance methods
  -[DBSColorTemperatureController specifiers]
  -[DBSColorTemperatureController initWithNibName:bundle:]
  -[DBSColorTemperatureController dealloc]
  -[DBSColorTemperatureController .cxx_destruct]
  -[DBSColorTemperatureController _brightnessClient]
  -[DBSColorTemperatureController fromDetailForCell:]
  -[DBSColorTemperatureController toDetailForCell:]
  -[DBSColorTemperatureController colorTemperatureSliderDidChange]
  -[DBSColorTemperatureController _printBlueLightStatus:]
  -[DBSColorTemperatureController showScheduleRange:animated:]
  -[DBSColorTemperatureController handleBlueLightStatusChanged:]
  -[DBSColorTemperatureController getBlueLightReductionEnabled:]
  -[DBSColorTemperatureController setBlueLightReductionEnabled:forSpecifier:]
  -[DBSColorTemperatureController getBlueLightReductionScheduleEnabled:]
  -[DBSColorTemperatureController setBlueLightReductionSchedule:forSpecifier:]
  -[DBSColorTemperatureController showAlertToDisableAccessibilityFiltersForBlueLightReduction:cancel:]
  -[DBSColorTemperatureController temperatureStrength:]
  -[DBSColorTemperatureController setTemperatureStrength:specifier:]
  -[DBSColorTemperatureController blueLightReductionFooter]
  -[DBSColorTemperatureController localizedTimeForTime:]
  -[DBSColorTemperatureController set_brightnessClient:]
  -[DBSColorTemperatureController _scheduleRangeSpecifier]
  -[DBSColorTemperatureController set_scheduleRangeSpecifier:]
  -[DBSColorTemperatureController _scheduleSwitchSpecifier]
  -[DBSColorTemperatureController set_scheduleSwitchSpecifier:]
  -[DBSColorTemperatureController _manualSwitchSpecifier]
  -[DBSColorTemperatureController set_manualSwitchSpecifier:]
  -[DBSColorTemperatureController _temperatureSlider]
  -[DBSColorTemperatureController set_temperatureSlider:]


DBSHomeScreenBaseListController : PSListController <PSCloudSyncDelegate>
 @property  PSCloudSyncButton *cloudSyncButton
 @property  SBSHomeScreenService *_homeScreenService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBSHomeScreenBaseListController tableView:didSelectRowAtIndexPath:]
  -[DBSHomeScreenBaseListController specifiers]
  -[DBSHomeScreenBaseListController dealloc]
  -[DBSHomeScreenBaseListController .cxx_destruct]
  -[DBSHomeScreenBaseListController viewDidLoad]
  -[DBSHomeScreenBaseListController setCloudSyncEnabled:]
  -[DBSHomeScreenBaseListController init]
  -[DBSHomeScreenBaseListController isCloudSyncEnabled:]
  -[DBSHomeScreenBaseListController hasMergeConflict]
  -[DBSHomeScreenBaseListController resolveMergeConflict:]
  -[DBSHomeScreenBaseListController _homeScreenService]
  -[DBSHomeScreenBaseListController setShowsBadgesInAppLibrary:specifier:]
  -[DBSHomeScreenBaseListController showsBadgesInAppLibrary:]
  -[DBSHomeScreenBaseListController setShowsSpotlight:specifier:]
  -[DBSHomeScreenBaseListController showsSpotlight:]
  -[DBSHomeScreenBaseListController cloudSyncButton]
  -[DBSHomeScreenBaseListController setCloudSyncButton:]


DBSHomeScreenPhoneListController : DBSHomeScreenBaseListController

DBSFineTuneEditTextTableCell : PSEditableTableCell
  // instance methods
  -[DBSFineTuneEditTextTableCell refreshCellContentsWithSpecifier:]
  -[DBSFineTuneEditTextTableCell .cxx_destruct]
  -[DBSFineTuneEditTextTableCell layoutSubviews]
  -[DBSFineTuneEditTextTableCell textField:shouldChangeCharactersInRange:replacementString:]


DBSDeviceAppearanceTableViewCell : UITableViewCell <DBSDeviceAppearanceOptionViewDelegate>
 @property  DBSDeviceAppearanceOptionView *_lightOptionView
 @property  DBSDeviceAppearanceOptionView *_darkOptionView
 @property  UILayoutGuide *_leadingGuide
 @property  UILayoutGuide *_middleGuide
 @property  UILayoutGuide *_trailingGuide
 @property  <DBSDeviceAppearanceTableViewCellDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBSDeviceAppearanceTableViewCell cellStyle]

  // instance methods
  -[DBSDeviceAppearanceTableViewCell initWithStyle:reuseIdentifier:]
  -[DBSDeviceAppearanceTableViewCell setDelegate:]
  -[DBSDeviceAppearanceTableViewCell delegate]
  -[DBSDeviceAppearanceTableViewCell .cxx_destruct]
  -[DBSDeviceAppearanceTableViewCell initWithFrame:]
  -[DBSDeviceAppearanceTableViewCell init]
  -[DBSDeviceAppearanceTableViewCell initWithCoder:]
  -[DBSDeviceAppearanceTableViewCell _leadingGuide]
  -[DBSDeviceAppearanceTableViewCell _configureView]
  -[DBSDeviceAppearanceTableViewCell userDidTapOnAppearanceOptionView:]
  -[DBSDeviceAppearanceTableViewCell _lightOptionView]
  -[DBSDeviceAppearanceTableViewCell set_lightOptionView:]
  -[DBSDeviceAppearanceTableViewCell _darkOptionView]
  -[DBSDeviceAppearanceTableViewCell set_darkOptionView:]
  -[DBSDeviceAppearanceTableViewCell set_leadingGuide:]
  -[DBSDeviceAppearanceTableViewCell _middleGuide]
  -[DBSDeviceAppearanceTableViewCell set_middleGuide:]
  -[DBSDeviceAppearanceTableViewCell _trailingGuide]
  -[DBSDeviceAppearanceTableViewCell set_trailingGuide:]


DBSDisplayZoomTableViewCell : UITableViewCell <DBSDisplayZoomOptionViewDelegate>
 @property  DBSDisplayZoomOptionView *standardOptionView
 @property  DBSDisplayZoomOptionView *zoomedOptionView
 @property  DBSDisplayZoomOptionView *denseOptionView
 @property  DBSDisplayZoomOptionView *denserOptionView
 @property  <DBSDisplayZoomTableViewCellDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBSDisplayZoomTableViewCell cellStyle]

  // instance methods
  -[DBSDisplayZoomTableViewCell startAnimation]
  -[DBSDisplayZoomTableViewCell setDelegate:]
  -[DBSDisplayZoomTableViewCell stopAnimation]
  -[DBSDisplayZoomTableViewCell delegate]
  -[DBSDisplayZoomTableViewCell .cxx_destruct]
  -[DBSDisplayZoomTableViewCell configureView]
  -[DBSDisplayZoomTableViewCell userDidTapOnDisplayZoomOptionView:]
  -[DBSDisplayZoomTableViewCell _configureForTwoDisplayOptionsWithLeadingView:trailingView:]
  -[DBSDisplayZoomTableViewCell _configureForThreeDisplayOptionsWithLeadingView:middleView:trailingView:]
  -[DBSDisplayZoomTableViewCell _configureForLegacy]
  -[DBSDisplayZoomTableViewCell _optionViewsByDensity]
  -[DBSDisplayZoomTableViewCell updateSelectedViewWithOption:]
  -[DBSDisplayZoomTableViewCell standardOptionView]
  -[DBSDisplayZoomTableViewCell setStandardOptionView:]
  -[DBSDisplayZoomTableViewCell zoomedOptionView]
  -[DBSDisplayZoomTableViewCell setZoomedOptionView:]
  -[DBSDisplayZoomTableViewCell denseOptionView]
  -[DBSDisplayZoomTableViewCell setDenseOptionView:]
  -[DBSDisplayZoomTableViewCell denserOptionView]
  -[DBSDisplayZoomTableViewCell setDenserOptionView:]


DBSColorScheduleController : PSListController <PSDateTimePickerCellDelegate>
  // instance methods
  -[DBSColorScheduleController willResignActive]
  -[DBSColorScheduleController startTime]
  -[DBSColorScheduleController endTime]
  -[DBSColorScheduleController tableView:didSelectRowAtIndexPath:]
  -[DBSColorScheduleController specifiers]
  -[DBSColorScheduleController initWithNibName:bundle:]
  -[DBSColorScheduleController dealloc]
  -[DBSColorScheduleController .cxx_destruct]
  -[DBSColorScheduleController datePickerChanged:]
  -[DBSColorScheduleController datePickerForSpecifier:]
  -[DBSColorScheduleController handleBlueLightStatusChanged:]
  -[DBSColorScheduleController showScheduleSpecifiers:animated:]
  -[DBSColorScheduleController blueLightMode]


DBSListControllerAppearanceProvider : PSListControllerDefaultAppearanceProvider
  // instance methods
  -[DBSListControllerAppearanceProvider listController:updateSectionContentInsetAnimated:isRegularWidth:contentInsetInitialized:contentInsetInitializedApplicator:]


DBSDeviceAppearanceOptionView : UIView <UIGestureRecognizerDelegate>
 @property  UIStackView *_stackView
 @property  UIImageView *_previewImageView
 @property  UILabel *_timeLabel
 @property  UILabel *_label
 @property  DBSCheckmarkView *_checkmarkView
 @property  UIImpactFeedbackGenerator *_feedbackGenerator
 @property  BOOL highlight
 @property  <DBSDeviceAppearanceOptionViewDelegate> *delegate
 @property  unsigned long appearanceOption
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBSDeviceAppearanceOptionView setDelegate:]
  -[DBSDeviceAppearanceOptionView _stackView]
  -[DBSDeviceAppearanceOptionView delegate]
  -[DBSDeviceAppearanceOptionView .cxx_destruct]
  -[DBSDeviceAppearanceOptionView _timeLabel]
  -[DBSDeviceAppearanceOptionView _label]
  -[DBSDeviceAppearanceOptionView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[DBSDeviceAppearanceOptionView highlighted]
  -[DBSDeviceAppearanceOptionView traitCollectionDidChange:]
  -[DBSDeviceAppearanceOptionView _feedbackGenerator]
  -[DBSDeviceAppearanceOptionView setHighlight:]
  -[DBSDeviceAppearanceOptionView _previewImageView]
  -[DBSDeviceAppearanceOptionView _checkmarkView]
  -[DBSDeviceAppearanceOptionView _configureView]
  -[DBSDeviceAppearanceOptionView set_label:]
  -[DBSDeviceAppearanceOptionView set_stackView:]
  -[DBSDeviceAppearanceOptionView _userDidTapOnView:]
  -[DBSDeviceAppearanceOptionView initWithFrame:appearanceOption:]
  -[DBSDeviceAppearanceOptionView _updateViewForCurrentInterfaceStyle:]
  -[DBSDeviceAppearanceOptionView appearanceOption]
  -[DBSDeviceAppearanceOptionView set_previewImageView:]
  -[DBSDeviceAppearanceOptionView set_timeLabel:]
  -[DBSDeviceAppearanceOptionView set_checkmarkView:]
  -[DBSDeviceAppearanceOptionView set_feedbackGenerator:]


DBSBrightnessManager : NSObject
 @property  NSMutableArray *specifiers
 @property  CBClient *brightnessClient
 @property  PSListController *delegate

  // class methods
  +[DBSBrightnessManager defaultManager]
  +[DBSBrightnessManager specifiersPresentIn:]
  +[DBSBrightnessManager removeSpecifiersFrom:]

  // instance methods
  -[DBSBrightnessManager setDelegate:]
  -[DBSBrightnessManager delegate]
  -[DBSBrightnessManager specifiers]
  -[DBSBrightnessManager setSpecifiers:]
  -[DBSBrightnessManager dealloc]
  -[DBSBrightnessManager .cxx_destruct]
  -[DBSBrightnessManager init]
  -[DBSBrightnessManager brightnessChangedExternally]
  -[DBSBrightnessManager brightnessClient]
  -[DBSBrightnessManager setBrightnessClient:]
  -[DBSBrightnessManager handleBrightnessChangedNotification:]
  -[DBSBrightnessManager setAutoWhiteBalanceEnabled:forSpecifier:]
  -[DBSBrightnessManager getAutoWhiteBalanceEnabled:]
  -[DBSBrightnessManager setBacklightValue:specifier:]
  -[DBSBrightnessManager backlightValue:]
  -[DBSBrightnessManager mainDisplayBrightnessSpecifiers]
  -[DBSBrightnessManager _generateMainBrightnessSpecifier]
  -[DBSBrightnessManager _cleanupTransactionRef]
  -[DBSBrightnessManager showAlertToDisableAccessibilityFilters:cancel:]


DBSHomeScreenPadListController : DBSHomeScreenBaseListController
  // instance methods
  -[DBSHomeScreenPadListController specifiers]
  -[DBSHomeScreenPadListController dealloc]
  -[DBSHomeScreenPadListController init]
  -[DBSHomeScreenPadListController continuousExposeEnablementChanged:]
  -[DBSHomeScreenPadListController rearrangeAndConfigureContinuousExposeWithSpecifiers:]
  -[DBSHomeScreenPadListController isLargeIconLayoutEnabled:]
  -[DBSHomeScreenPadListController setLargeIconLayoutEnabled:specifier:]
  -[DBSHomeScreenPadListController setShowAppLibraryInDock:specifier:]
  -[DBSHomeScreenPadListController setShowRecentAppsInDock:specifier:]
  -[DBSHomeScreenPadListController continuousExposeState:]


DBSContentDisplayModeTableCell : PSTableCell
  // class methods
  +[DBSContentDisplayModeTableCell cellStyle]

  // instance methods
  -[DBSContentDisplayModeTableCell initWithStyle:reuseIdentifier:]


DBSExternalDisplayPreferencesController : PSListController <DBSZoomAndProSpecifiersDelegate, DBSDisplayZoomSelectionControllerDelegate>
 @property  DBSZoomAndProSpecifiers *_zoomAndProSpecifierVendor
 @property  SBSConnectedDisplayInfo *externalDisplayInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBSExternalDisplayPreferencesController tableView:shouldHighlightRowAtIndexPath:]
  -[DBSExternalDisplayPreferencesController tableView:didSelectRowAtIndexPath:]
  -[DBSExternalDisplayPreferencesController specifiers]
  -[DBSExternalDisplayPreferencesController dealloc]
  -[DBSExternalDisplayPreferencesController .cxx_destruct]
  -[DBSExternalDisplayPreferencesController viewDidLoad]
  -[DBSExternalDisplayPreferencesController init]
  -[DBSExternalDisplayPreferencesController valueForSpecifier:]
  -[DBSExternalDisplayPreferencesController externalDisplayInfo]
  -[DBSExternalDisplayPreferencesController connectedDisplayDidUpdate:]
  -[DBSExternalDisplayPreferencesController externalBrightnessDidUpdate:]
  -[DBSExternalDisplayPreferencesController handleDBSExternalDisplayManagerExternalBrightnessAvailablityDidChangeNotification:]
  -[DBSExternalDisplayPreferencesController handleDBSExternalDBSDisplayPreferencesControllerExternalDisplayManagerExternalAutoBrightnessAvailablityDidChangeNotification:]
  -[DBSExternalDisplayPreferencesController handleDBSExternalDBSDisplayPreferencesControllerExternalDisplayManagerExternalAutoBrightnessValueDidChangeNotification:]
  -[DBSExternalDisplayPreferencesController setMatchContentEnabled:specifier:]
  -[DBSExternalDisplayPreferencesController matchContentEnabled:]
  -[DBSExternalDisplayPreferencesController setExternalBrightnessValue:specifier:]
  -[DBSExternalDisplayPreferencesController externalBrightnessValueForSpecifier:]
  -[DBSExternalDisplayPreferencesController setExternalAutoBrightnessValue:specifier:]
  -[DBSExternalDisplayPreferencesController externalAutoBrightnessValueForSpecifier:]
  -[DBSExternalDisplayPreferencesController presentModalMagnifyController]
  -[DBSExternalDisplayPreferencesController proModeSupported]
  -[DBSExternalDisplayPreferencesController getProModeEnabled]
  -[DBSExternalDisplayPreferencesController setProModeEnabled:]
  -[DBSExternalDisplayPreferencesController presentModalFineTuneController]
  -[DBSExternalDisplayPreferencesController localizedMagnifyModeName]
  -[DBSExternalDisplayPreferencesController displayZoomDidUpdate]
  -[DBSExternalDisplayPreferencesController supportedZoomModesCount]
  -[DBSExternalDisplayPreferencesController externalBrightnessSpecifiers]
  -[DBSExternalDisplayPreferencesController insertExternalBrightnessSpecifiers]
  -[DBSExternalDisplayPreferencesController removeExternalBrightnessSpecifiers]
  -[DBSExternalDisplayPreferencesController displayModeSpecifiers]
  -[DBSExternalDisplayPreferencesController _zoomAndProSpecifierVendor]
  -[DBSExternalDisplayPreferencesController set_zoomAndProSpecifierVendor:]


DBSMainDisplayPreferencesController : PSListController <DBSZoomAndProSpecifiersDelegate>
 @property  DBSZoomAndProSpecifiers *_zoomAndProSpecifierVendor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBSMainDisplayPreferencesController specifiers]
  -[DBSMainDisplayPreferencesController dealloc]
  -[DBSMainDisplayPreferencesController .cxx_destruct]
  -[DBSMainDisplayPreferencesController viewWillAppear:]
  -[DBSMainDisplayPreferencesController observeValueForKeyPath:ofObject:change:context:]
  -[DBSMainDisplayPreferencesController init]
  -[DBSMainDisplayPreferencesController presentModalMagnifyController]
  -[DBSMainDisplayPreferencesController proModeSupported]
  -[DBSMainDisplayPreferencesController getProModeEnabled]
  -[DBSMainDisplayPreferencesController setProModeEnabled:]
  -[DBSMainDisplayPreferencesController presentModalFineTuneController]
  -[DBSMainDisplayPreferencesController _zoomAndProSpecifierVendor]
  -[DBSMainDisplayPreferencesController set_zoomAndProSpecifierVendor:]


DBSBrightnessSliderCell : PSSliderTableCell
 @property  NSMutableArray *controlAndWarningLayoutConstraints
 @property  UILabel *referenceWarningLabel
 @property  UIView *warningContainerView

  // instance methods
  -[DBSBrightnessSliderCell refreshCellContentsWithSpecifier:]
  -[DBSBrightnessSliderCell .cxx_destruct]
  -[DBSBrightnessSliderCell sizeThatFits:]
  -[DBSBrightnessSliderCell initWithStyle:reuseIdentifier:specifier:]
  -[DBSBrightnessSliderCell _configureLayout]
  -[DBSBrightnessSliderCell controlAndWarningLayoutConstraints]
  -[DBSBrightnessSliderCell setControlAndWarningLayoutConstraints:]
  -[DBSBrightnessSliderCell referenceWarningLabel]
  -[DBSBrightnessSliderCell setReferenceWarningLabel:]
  -[DBSBrightnessSliderCell warningContainerView]
  -[DBSBrightnessSliderCell setWarningContainerView:]


DBSDeviceAppearanceScheduleController : PSListController <PSDateTimePickerCellDelegate>
 @property  PSSpecifier *_radioGroup
 @property  PSSpecifier *_timeGroup
 @property  PSSpecifier *_lightAppearanceTimePickerSpecifier
 @property  PSSpecifier *_darkAppearanceTimePickerSpecifier
 @property  BOOL _showingScheduleSpecifiers
 @property  UISUserInterfaceStyleMode *_styleMode
 @property  NSDateFormatter *_timeFormatter
 @property  UIDatePicker *_lightAppearanceTimePicker
 @property  UIDatePicker *_darkAppearanceTimePicker

  // instance methods
  -[DBSDeviceAppearanceScheduleController willResignActive]
  -[DBSDeviceAppearanceScheduleController _timeFormatter]
  -[DBSDeviceAppearanceScheduleController tableView:didSelectRowAtIndexPath:]
  -[DBSDeviceAppearanceScheduleController specifiers]
  -[DBSDeviceAppearanceScheduleController initWithNibName:bundle:]
  -[DBSDeviceAppearanceScheduleController .cxx_destruct]
  -[DBSDeviceAppearanceScheduleController setSpecifier:]
  -[DBSDeviceAppearanceScheduleController _styleMode]
  -[DBSDeviceAppearanceScheduleController datePickerChanged:]
  -[DBSDeviceAppearanceScheduleController datePickerForSpecifier:]
  -[DBSDeviceAppearanceScheduleController _radioGroup]
  -[DBSDeviceAppearanceScheduleController showScheduleSpecifiers:animated:]
  -[DBSDeviceAppearanceScheduleController _timeGroup]
  -[DBSDeviceAppearanceScheduleController _showingScheduleSpecifiers]
  -[DBSDeviceAppearanceScheduleController _lightAppearanceTimeString]
  -[DBSDeviceAppearanceScheduleController _darkAppearanceTimeString]
  -[DBSDeviceAppearanceScheduleController set_radioGroup:]
  -[DBSDeviceAppearanceScheduleController set_timeGroup:]
  -[DBSDeviceAppearanceScheduleController _lightAppearanceTimePickerSpecifier]
  -[DBSDeviceAppearanceScheduleController set_lightAppearanceTimePickerSpecifier:]
  -[DBSDeviceAppearanceScheduleController _darkAppearanceTimePickerSpecifier]
  -[DBSDeviceAppearanceScheduleController set_darkAppearanceTimePickerSpecifier:]
  -[DBSDeviceAppearanceScheduleController set_showingScheduleSpecifiers:]
  -[DBSDeviceAppearanceScheduleController set_styleMode:]
  -[DBSDeviceAppearanceScheduleController set_timeFormatter:]
  -[DBSDeviceAppearanceScheduleController _lightAppearanceTimePicker]
  -[DBSDeviceAppearanceScheduleController set_lightAppearanceTimePicker:]
  -[DBSDeviceAppearanceScheduleController _darkAppearanceTimePicker]
  -[DBSDeviceAppearanceScheduleController set_darkAppearanceTimePicker:]


DBSFineTuneController : PSListController
  // instance methods
  -[DBSFineTuneController specifiers]
  -[DBSFineTuneController .cxx_destruct]
  -[DBSFineTuneController viewDidLoad]
  -[DBSFineTuneController init]
  -[DBSFineTuneController userDidTapCancel:]
  -[DBSFineTuneController userDidTapDone:]
  -[DBSFineTuneController updateTargetLuminanceValidationRange]
  -[DBSFineTuneController updateValidationRanges]
  -[DBSFineTuneController validateUserAdjustment]
  -[DBSFineTuneController getMeasuredWhitePointX:]
  -[DBSFineTuneController setMeasuredWhitePointX:forSpecifier:]
  -[DBSFineTuneController getMeasuredWhitePointY:]
  -[DBSFineTuneController setMeasuredWhitePointY:forSpecifier:]
  -[DBSFineTuneController getMeasuredLuminance:]
  -[DBSFineTuneController setMeasuredLuminance:forSpecifier:]
  -[DBSFineTuneController getTargetWhitePointX:]
  -[DBSFineTuneController setTargetWhitePointX:forSpecifier:]
  -[DBSFineTuneController getTargetWhitePointY:]
  -[DBSFineTuneController setTargetWhitePointY:forSpecifier:]
  -[DBSFineTuneController getTargetLuminance:]
  -[DBSFineTuneController setTargetLuminance:forSpecifier:]
  -[DBSFineTuneController restoreDefaults:]


DBSDisplayZoomMode : NSObject
 @property  unsigned long displayZoomOption
 @property  NSString *localizedName
 @property  {CGSize=dd} size

  // instance methods
  -[DBSDisplayZoomMode .cxx_destruct]
  -[DBSDisplayZoomMode localizedName]
  -[DBSDisplayZoomMode size]
  -[DBSDisplayZoomMode displayZoomOption]
  -[DBSDisplayZoomMode initWithDisplayZoomOption:localizedName:size:]


DBSExternalDisplayManager : NSObject <SBSExternalDisplayServiceObserver>
 @property  BrightnessSystemClient *brightnessSystemClient
 @property  SBSExternalDisplayService *displayService
 @property  BOOL externalDisplayAvailable
 @property  BOOL externalDisplayBrightnessAvailable
 @property  BOOL externalDisplayAutoBrightnessAvailable
 @property  NSString *currentHDRMode
 @property  BOOL matchContent
 @property  NSNumber *externalDisplayBrightness
 @property  BOOL autoBrightnessEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBSExternalDisplayManager defaultManager]

  // instance methods
  -[DBSExternalDisplayManager supportedHDRModes]
  -[DBSExternalDisplayManager dealloc]
  -[DBSExternalDisplayManager .cxx_destruct]
  -[DBSExternalDisplayManager observeValueForKeyPath:ofObject:change:context:]
  -[DBSExternalDisplayManager preferredHDRModes]
  -[DBSExternalDisplayManager brightnessSystemClient]
  -[DBSExternalDisplayManager setBrightnessSystemClient:]
  -[DBSExternalDisplayManager externalDisplayDidConnect:]
  -[DBSExternalDisplayManager externalDisplayWillDisconnect:]
  -[DBSExternalDisplayManager init]
  -[DBSExternalDisplayManager matchContent]
  -[DBSExternalDisplayManager setMatchContent:]
  -[DBSExternalDisplayManager setAutoBrightnessEnabled:]
  -[DBSExternalDisplayManager autoBrightnessEnabled]
  -[DBSExternalDisplayManager displayService]
  -[DBSExternalDisplayManager setDisplayService:]
  -[DBSExternalDisplayManager externalDisplayName]
  -[DBSExternalDisplayManager externalDisplaySize]
  -[DBSExternalDisplayManager mainDisplayName]
  -[DBSExternalDisplayManager mainDisplaySize]
  -[DBSExternalDisplayManager mainDisplayImage]
  -[DBSExternalDisplayManager externalDisplayAvailable]
  -[DBSExternalDisplayManager externalDisplayBrightnessAvailable]
  -[DBSExternalDisplayManager externalDisplayAutoBrightnessAvailable]
  -[DBSExternalDisplayManager currentHDRMode]
  -[DBSExternalDisplayManager setCurrentHDRMode:]
  -[DBSExternalDisplayManager externalDisplayBrightness]
  -[DBSExternalDisplayManager setExternalDisplayBrightness:shouldCommit:]


DBSColorTemperatureSliderTableCell : PSSliderTableCell
  // instance methods
  -[DBSColorTemperatureSliderTableCell .cxx_destruct]
  -[DBSColorTemperatureSliderTableCell layoutSubviews]
  -[DBSColorTemperatureSliderTableCell sizeThatFits:]
  -[DBSColorTemperatureSliderTableCell initWithStyle:reuseIdentifier:specifier:]


DBSDisplayZoomConfigurationController : NSObject
  // class methods
  +[DBSDisplayZoomConfigurationController defaultController]

  // instance methods
  -[DBSDisplayZoomConfigurationController currentDisplayZoomMode]
  -[DBSDisplayZoomConfigurationController displayZoomModes]
  -[DBSDisplayZoomConfigurationController setDisplayZoomMode:withRelaunchURL:]


DBSPiPController : PSListController
  // instance methods
  -[DBSPiPController specifiers]


DBSContinuousExposeLayoutCheckmarkStackView : UIStackView
 @property  UILabel *label
 @property  DBSCheckmarkView *checkmark

  // instance methods
  -[DBSContinuousExposeLayoutCheckmarkStackView setLabel:]
  -[DBSContinuousExposeLayoutCheckmarkStackView .cxx_destruct]
  -[DBSContinuousExposeLayoutCheckmarkStackView label]
  -[DBSContinuousExposeLayoutCheckmarkStackView checkmark]
  -[DBSContinuousExposeLayoutCheckmarkStackView setCheckmark:]
  -[DBSContinuousExposeLayoutCheckmarkStackView initWithLabelText:checkmarkKey:]


DBSContinuousExposeLayoutTableViewCell : UITableViewCell
 @property  UIButton *displaySelectionButton
 @property  DBSContinuousExposeLayoutCheckmarkStackView *recentAppCheckmarkStackView
 @property  DBSContinuousExposeLayoutCheckmarkStackView *dockCheckmarkStackView
 @property  DBSContinuousExposeLayoutAnimationView *animationView
 @property  UILayoutGuide *topLayoutGuide
 @property  UILayoutGuide *bottomLayoutGuide
 @property  UILayoutGuide *leftLayoutGuide
 @property  UILayoutGuide *rightLayoutGuide
 @property  long long currentDisplaySelection
 @property  BOOL isExternalDisplayConnected

  // class methods
  +[DBSContinuousExposeLayoutTableViewCell cellStyle]

  // instance methods
  -[DBSContinuousExposeLayoutTableViewCell initWithStyle:reuseIdentifier:]
  -[DBSContinuousExposeLayoutTableViewCell scaleFactor]
  -[DBSContinuousExposeLayoutTableViewCell .cxx_destruct]
  -[DBSContinuousExposeLayoutTableViewCell layoutSubviews]
  -[DBSContinuousExposeLayoutTableViewCell initWithFrame:]
  -[DBSContinuousExposeLayoutTableViewCell init]
  -[DBSContinuousExposeLayoutTableViewCell initWithCoder:]
  -[DBSContinuousExposeLayoutTableViewCell topLayoutGuide]
  -[DBSContinuousExposeLayoutTableViewCell bottomLayoutGuide]
  -[DBSContinuousExposeLayoutTableViewCell isLandscape]
  -[DBSContinuousExposeLayoutTableViewCell animationView]
  -[DBSContinuousExposeLayoutTableViewCell setAnimationView:]
  -[DBSContinuousExposeLayoutTableViewCell configureCell]
  -[DBSContinuousExposeLayoutTableViewCell recentAppsCheckmarkIsTapped:]
  -[DBSContinuousExposeLayoutTableViewCell dockCheckmarkIsTapped:]
  -[DBSContinuousExposeLayoutTableViewCell configureAnimationViews]
  -[DBSContinuousExposeLayoutTableViewCell layoutAnimationViews]
  -[DBSContinuousExposeLayoutTableViewCell updateCheckmarkStackViewSelection]
  -[DBSContinuousExposeLayoutTableViewCell displaySelectionMenuChildren:]
  -[DBSContinuousExposeLayoutTableViewCell animationViewStateShowStrip:showDock:]
  -[DBSContinuousExposeLayoutTableViewCell configureTapGestureRecognizer]
  -[DBSContinuousExposeLayoutTableViewCell isExternalDisplayConnected]
  -[DBSContinuousExposeLayoutTableViewCell setIsExternalDisplayConnected:]
  -[DBSContinuousExposeLayoutTableViewCell displaySelectionButton]
  -[DBSContinuousExposeLayoutTableViewCell setDisplaySelectionButton:]
  -[DBSContinuousExposeLayoutTableViewCell recentAppCheckmarkStackView]
  -[DBSContinuousExposeLayoutTableViewCell setRecentAppCheckmarkStackView:]
  -[DBSContinuousExposeLayoutTableViewCell dockCheckmarkStackView]
  -[DBSContinuousExposeLayoutTableViewCell setDockCheckmarkStackView:]
  -[DBSContinuousExposeLayoutTableViewCell setTopLayoutGuide:]
  -[DBSContinuousExposeLayoutTableViewCell setBottomLayoutGuide:]
  -[DBSContinuousExposeLayoutTableViewCell leftLayoutGuide]
  -[DBSContinuousExposeLayoutTableViewCell setLeftLayoutGuide:]
  -[DBSContinuousExposeLayoutTableViewCell rightLayoutGuide]
  -[DBSContinuousExposeLayoutTableViewCell setRightLayoutGuide:]
  -[DBSContinuousExposeLayoutTableViewCell currentDisplaySelection]
  -[DBSContinuousExposeLayoutTableViewCell setCurrentDisplaySelection:]


DBSFontSizeSliderCell : PSSliderTableCell
  // instance methods
  -[DBSFontSizeSliderCell layoutSubviews]
  -[DBSFontSizeSliderCell newControl]


DBSLargeTextExplanationView : UIView <PSHeaderFooterView>
  // instance methods
  -[DBSLargeTextExplanationView .cxx_destruct]
  -[DBSLargeTextExplanationView layoutSubviews]
  -[DBSLargeTextExplanationView initWithSpecifier:]
  -[DBSLargeTextExplanationView preferredHeightForWidth:inTableView:]
  -[DBSLargeTextExplanationView layoutForWidth:inTableView:]


DBSLargerSizesHelpTextView : UIView <PSHeaderFooterView>
  // instance methods
  -[DBSLargerSizesHelpTextView .cxx_destruct]
  -[DBSLargerSizesHelpTextView layoutSubviews]
  -[DBSLargerSizesHelpTextView initWithSpecifier:]
  -[DBSLargerSizesHelpTextView preferredHeightForWidth:inTableView:]
  -[DBSLargerSizesHelpTextView layoutForWidth:inTableView:]


DBSLargeTextSliderListController : PSListController
 @property  NSArray *contentSizeCategories
 @property  long long selectedCategoryIndex
 @property  BOOL showsExtendedRangeSwitch
 @property  BOOL usesExtendedRange
 @property  BOOL showsLargerSizesHelpText
 @property  BOOL showsResetSliderButton
 @property  DBSLargeTextController *largeTextController

  // instance methods
  -[DBSLargeTextSliderListController viewSafeAreaInsetsDidChange]
  -[DBSLargeTextSliderListController specifiers]
  -[DBSLargeTextSliderListController .cxx_destruct]
  -[DBSLargeTextSliderListController viewWillAppear:]
  -[DBSLargeTextSliderListController loadView]
  -[DBSLargeTextSliderListController viewWillDisappear:]
  -[DBSLargeTextSliderListController setDynamicTypeValue:forSpecifier:]
  -[DBSLargeTextSliderListController getDynamicTypeValueForSpecifier:]
  -[DBSLargeTextSliderListController initUsingExtendedRange:]
  -[DBSLargeTextSliderListController setSelectedCategoryIndex:]
  -[DBSLargeTextSliderListController setUsesExtendedRange:]
  -[DBSLargeTextSliderListController contentSizeCategories]
  -[DBSLargeTextSliderListController setContentSizeCategories:]
  -[DBSLargeTextSliderListController selectedCategoryIndex]
  -[DBSLargeTextSliderListController showsExtendedRangeSwitch]
  -[DBSLargeTextSliderListController setShowsExtendedRangeSwitch:]
  -[DBSLargeTextSliderListController usesExtendedRange]
  -[DBSLargeTextSliderListController showsLargerSizesHelpText]
  -[DBSLargeTextSliderListController setShowsLargerSizesHelpText:]
  -[DBSLargeTextSliderListController resetSliderValue]
  -[DBSLargeTextSliderListController updateSliderValue]
  -[DBSLargeTextSliderListController showsResetSliderButton]
  -[DBSLargeTextSliderListController setShowsResetSliderButton:]
  -[DBSLargeTextSliderListController largeTextController]
  -[DBSLargeTextSliderListController setLargeTextController:]


DBSLargeTextController : PSListController
 @property  BOOL showsResetSliderButton
 @property  BOOL savesCategoryNameOnlyOnSliderEvent
 @property  BOOL showsExtendedRangeSwitch

  // instance methods
  -[DBSLargeTextController specifiers]
  -[DBSLargeTextController dealloc]
  -[DBSLargeTextController .cxx_destruct]
  -[DBSLargeTextController loadView]
  -[DBSLargeTextController viewDidLayoutSubviews]
  -[DBSLargeTextController init]
  -[DBSLargeTextController sizeCategoryDidChange:]
  -[DBSLargeTextController showsExtendedRangeSwitch]
  -[DBSLargeTextController setShowsExtendedRangeSwitch:]
  -[DBSLargeTextController setUsesExtendedRange:forSpecifier:]
  -[DBSLargeTextController usesExtendedRangeForSpecifier:]
  -[DBSLargeTextController updateSlider]
  -[DBSLargeTextController showsResetSliderButton]
  -[DBSLargeTextController setShowsResetSliderButton:]
  -[DBSLargeTextController updateSlidersForNewUsesExtendedRangeValue:]
  -[DBSLargeTextController readPreferredContentSizeCategoryName]
  -[DBSLargeTextController savePreferredContentSizeCategoryName:]
  -[DBSLargeTextController resetContentSizeCategoryName]
  -[DBSLargeTextController readUsesExtendedRange]
  -[DBSLargeTextController saveUsesExtendedRange:]
  -[DBSLargeTextController savesCategoryNameOnlyOnSliderEvent]
  -[DBSLargeTextController setSavesCategoryNameOnlyOnSliderEvent:]


DBSSettingsController : PSListController <UISUserInterfaceStyleModeDelegate, DBSDeviceAppearanceTableViewCellDelegate, DBSZoomAndProSpecifiersDelegate, DBSArrangementViewControllerDelegate, PSListControllerTestableSpecifiers>
 @property  UISUserInterfaceStyleMode *_styleMode
 @property  CBClient *_brightnessClient
 @property  DBSZoomAndProSpecifiers *_zoomAndProSpecifierVendor
 @property  SBSExternalDisplayService *displayService
 @property  SBSConnectedDisplayInfo *externalDisplayInfo
 @property  PSSetupController *arrangementViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBSSettingsController booleanCapabilitiesToTest]

  // instance methods
  -[DBSSettingsController tableView:cellForRowAtIndexPath:]
  -[DBSSettingsController specifiers]
  -[DBSSettingsController initWithNibName:bundle:]
  -[DBSSettingsController dealloc]
  -[DBSSettingsController .cxx_destruct]
  -[DBSSettingsController viewWillAppear:]
  -[DBSSettingsController profileNotification:]
  -[DBSSettingsController observeValueForKeyPath:ofObject:change:context:]
  -[DBSSettingsController userInterfaceStyleModeDidChange:]
  -[DBSSettingsController traitCollectionDidChange:]
  -[DBSSettingsController init]
  -[DBSSettingsController _styleMode]
  -[DBSSettingsController _brightnessClient]
  -[DBSSettingsController screenLock:]
  -[DBSSettingsController updateExternalDisplayInfoWithCompletionHandler:]
  -[DBSSettingsController displayService]
  -[DBSSettingsController setDisplayService:]
  -[DBSSettingsController externalDisplayInfo]
  -[DBSSettingsController setExternalDisplayInfo:]
  -[DBSSettingsController handleBlueLightStatusChanged:]
  -[DBSSettingsController localizedTimeForTime:]
  -[DBSSettingsController set_brightnessClient:]
  -[DBSSettingsController deviceAppearanceTableViewCellUserDidTapOnLightAppearance:]
  -[DBSSettingsController deviceAppearanceTableViewCellUserDidTapOnDarkAppearance:]
  -[DBSSettingsController presentModalMagnifyController]
  -[DBSSettingsController proModeSupported]
  -[DBSSettingsController getProModeEnabled]
  -[DBSSettingsController setProModeEnabled:]
  -[DBSSettingsController presentModalFineTuneController]
  -[DBSSettingsController _zoomAndProSpecifierVendor]
  -[DBSSettingsController set_zoomAndProSpecifierVendor:]
  -[DBSSettingsController _lightAppearanceTimeString]
  -[DBSSettingsController _darkAppearanceTimeString]
  -[DBSSettingsController set_styleMode:]
  -[DBSSettingsController handleDBSExternalDisplayManagerCurrentModeDidChangeNotification:]
  -[DBSSettingsController presentArrangementController]
  -[DBSSettingsController _deviceAppearanceScheduleString]
  -[DBSSettingsController arrangementViewControllerDidDismiss:]
  -[DBSSettingsController lockGroupFooter]
  -[DBSSettingsController shouldShowAutoLock]
  -[DBSSettingsController shouldShowCaseLockOption]
  -[DBSSettingsController shouldShowAlwaysOn]
  -[DBSSettingsController setScreenLock:specifier:]
  -[DBSSettingsController _updateAutoLockSpecifiers:]
  -[DBSSettingsController updateAutoLockSpecifier]
  -[DBSSettingsController _localizeAutoLockTitlesWithSpecifiers:]
  -[DBSSettingsController _localizeAutoLockTitles]
  -[DBSSettingsController locksAndUnlocksWithCase:]
  -[DBSSettingsController setLocksAndUnlocksWithCase:specifier:]
  -[DBSSettingsController setBoldTextEnabled:specifier:]
  -[DBSSettingsController boldTextEnabledForSpecifier:]
  -[DBSSettingsController updateForExternalMonitorAvailability:]
  -[DBSSettingsController _reloadBlueLightSpecifiers:reloadUI:]
  -[DBSSettingsController blueLightSchedule:]
  -[DBSSettingsController connectedDisplaySpecifiers]
  -[DBSSettingsController makeArrangementSpecifier]
  -[DBSSettingsController insertArrangementSpecifier]
  -[DBSSettingsController insertExternalDisplaySpecifiers]
  -[DBSSettingsController removeExternalDisplaySpecifiers]
  -[DBSSettingsController handleDisplayServiceInfoUpdate]
  -[DBSSettingsController _deviceAppearanceScheduleSpecifier]
  -[DBSSettingsController getAppearanceValueForSpecifier:]
  -[DBSSettingsController setAppearanceValue:forSpecifier:]
  -[DBSSettingsController getAutomaticAppearanceEnabledForSpecifier:]
  -[DBSSettingsController setAutomaticAppearanceEnabled:forSpecifier:]
  -[DBSSettingsController _updateDeviceAppearanceToNewInterfaceStyle:]
  -[DBSSettingsController arrangementViewController]
  -[DBSSettingsController setArrangementViewController:]


DBSArrangementLayoutViewController : UIViewController <UIGestureRecognizerDelegate>
 @property  unsigned long nativeDisplayLocation
 @property  {CGSize=dd} nativeDisplaySize
 @property  {CGSize=dd} externalDisplaySize
 @property  NSString *nativeDisplayName
 @property  NSString *externalDisplayName
 @property  UIImage *nativeDisplayImage
 @property  DBSArrangementLayoutView *arrangementView
 @property  UIPanGestureRecognizer *dragGestureRecognizer
 @property  UITapGestureRecognizer *tapGestureRecogniser
 @property  DBSNativeDisplayIconView *dragView
 @property  {CGPoint=dd} unitDragPoint
 @property  <DBSArrangementLayoutViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBSArrangementLayoutViewController setDelegate:]
  -[DBSArrangementLayoutViewController gestureRecognizerShouldBegin:]
  -[DBSArrangementLayoutViewController delegate]
  -[DBSArrangementLayoutViewController .cxx_destruct]
  -[DBSArrangementLayoutViewController loadView]
  -[DBSArrangementLayoutViewController didTap:]
  -[DBSArrangementLayoutViewController dragView]
  -[DBSArrangementLayoutViewController setDragView:]
  -[DBSArrangementLayoutViewController dragGestureRecognizer]
  -[DBSArrangementLayoutViewController setDragGestureRecognizer:]
  -[DBSArrangementLayoutViewController externalDisplayName]
  -[DBSArrangementLayoutViewController externalDisplaySize]
  -[DBSArrangementLayoutViewController didDrag:]
  -[DBSArrangementLayoutViewController initWithNativeDisplaySize:nativeDisplayName:externalDisplaySize:externalDisplayName:currentNativeDisplayLocation:]
  -[DBSArrangementLayoutViewController arrangementView]
  -[DBSArrangementLayoutViewController nativeDisplayImage]
  -[DBSArrangementLayoutViewController currentDisplayIconView]
  -[DBSArrangementLayoutViewController updateOrientationTo:]
  -[DBSArrangementLayoutViewController nativeDisplayLocation]
  -[DBSArrangementLayoutViewController setNativeDisplayLocation:]
  -[DBSArrangementLayoutViewController nativeDisplaySize]
  -[DBSArrangementLayoutViewController setNativeDisplaySize:]
  -[DBSArrangementLayoutViewController setExternalDisplaySize:]
  -[DBSArrangementLayoutViewController nativeDisplayName]
  -[DBSArrangementLayoutViewController setNativeDisplayName:]
  -[DBSArrangementLayoutViewController setExternalDisplayName:]
  -[DBSArrangementLayoutViewController tapGestureRecogniser]
  -[DBSArrangementLayoutViewController setTapGestureRecogniser:]
  -[DBSArrangementLayoutViewController unitDragPoint]
  -[DBSArrangementLayoutViewController setUnitDragPoint:]


DBSArrangementLayoutView : UIView
 @property  DBSArrangementLayoutViewController *dataSource
 @property  double margin
 @property  DBSExternalDisplayIconView *externalDisplay
 @property  DBSNativeDisplayIconView *northDisplay
 @property  DBSNativeDisplayIconView *eastDisplay
 @property  DBSNativeDisplayIconView *southDisplay
 @property  DBSNativeDisplayIconView *westDisplay
 @property  NSLayoutConstraint *nativeIconAspectRatioConstraint
 @property  NSLayoutConstraint *widthRatioConstraint

  // instance methods
  -[DBSArrangementLayoutView initWithDataSource:]
  -[DBSArrangementLayoutView dataSource]
  -[DBSArrangementLayoutView margin]
  -[DBSArrangementLayoutView updateForOrientation:]
  -[DBSArrangementLayoutView .cxx_destruct]
  -[DBSArrangementLayoutView setDataSource:]
  -[DBSArrangementLayoutView setMargin:]
  -[DBSArrangementLayoutView setExternalDisplay:]
  -[DBSArrangementLayoutView externalDisplay]
  -[DBSArrangementLayoutView placeCurrentDisplayAtLocation:]
  -[DBSArrangementLayoutView _nativeDisplaySizeForOrientation:]
  -[DBSArrangementLayoutView arrangeDisplayIcons]
  -[DBSArrangementLayoutView _pointDistanceFirst:second:]
  -[DBSArrangementLayoutView displayLocationForPointInView:]
  -[DBSArrangementLayoutView northDisplay]
  -[DBSArrangementLayoutView setNorthDisplay:]
  -[DBSArrangementLayoutView eastDisplay]
  -[DBSArrangementLayoutView setEastDisplay:]
  -[DBSArrangementLayoutView southDisplay]
  -[DBSArrangementLayoutView setSouthDisplay:]
  -[DBSArrangementLayoutView westDisplay]
  -[DBSArrangementLayoutView setWestDisplay:]
  -[DBSArrangementLayoutView nativeIconAspectRatioConstraint]
  -[DBSArrangementLayoutView setNativeIconAspectRatioConstraint:]
  -[DBSArrangementLayoutView widthRatioConstraint]
  -[DBSArrangementLayoutView setWidthRatioConstraint:]


DBSExternalDisplayIconView : UIView
 @property  UILabel *nameField

  // class methods
  +[DBSExternalDisplayIconView layerClass]

  // instance methods
  -[DBSExternalDisplayIconView .cxx_destruct]
  -[DBSExternalDisplayIconView nameField]
  -[DBSExternalDisplayIconView setNameField:]
  -[DBSExternalDisplayIconView initWithFrame:displayName:]


DBSNativeDisplayIconView : UIView
 @property  BOOL isCurrentDisplayLocation
 @property  UIImageView *imageView
 @property  UILabel *nameField

  // instance methods
  -[DBSNativeDisplayIconView setImageView:]
  -[DBSNativeDisplayIconView .cxx_destruct]
  -[DBSNativeDisplayIconView imageView]
  -[DBSNativeDisplayIconView nameField]
  -[DBSNativeDisplayIconView setNameField:]
  -[DBSNativeDisplayIconView initWithFrame:displayName:image:]
  -[DBSNativeDisplayIconView setIsCurrentDisplayLocation:]
  -[DBSNativeDisplayIconView isCurrentDisplayLocation]


DBSDisplayNameLabel : UILabel
 @property  {UIEdgeInsets=dddd} textMargins

  // instance methods
  -[DBSDisplayNameLabel drawTextInRect:]
  -[DBSDisplayNameLabel intrinsicContentSize]
  -[DBSDisplayNameLabel initWithFrame:]
  -[DBSDisplayNameLabel setTextMargins:]
  -[DBSDisplayNameLabel textMargins]


DBSDisplayZoomSelectionListController : PSListController <DBSDisplayZoomTableViewCellDelegate>
 @property  unsigned long selectedDisplayZoomOption
 @property  <DBSDisplayZoomSelectionControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBSDisplayZoomSelectionListController tableView:cellForRowAtIndexPath:]
  -[DBSDisplayZoomSelectionListController preferredContentSize]
  -[DBSDisplayZoomSelectionListController setDelegate:]
  -[DBSDisplayZoomSelectionListController tableView:willDisplayCell:forRowAtIndexPath:]
  -[DBSDisplayZoomSelectionListController delegate]
  -[DBSDisplayZoomSelectionListController specifiers]
  -[DBSDisplayZoomSelectionListController .cxx_destruct]
  -[DBSDisplayZoomSelectionListController viewDidLoad]
  -[DBSDisplayZoomSelectionListController tableView:didEndDisplayingCell:forRowAtIndexPath:]
  -[DBSDisplayZoomSelectionListController displayZoomTableViewCellCurrentlySelectedDisplayZoomOption:]
  -[DBSDisplayZoomSelectionListController displayZoomTableViewCell:userDidTapOnDisplayZoomOption:]
  -[DBSDisplayZoomSelectionListController userDidTapCancel:]
  -[DBSDisplayZoomSelectionListController userDidTapDone:]
  -[DBSDisplayZoomSelectionListController _userDidConfirmDisplayZoomModeWithSpecifier:]
  -[DBSDisplayZoomSelectionListController supportedDisplayZoomOptions]
  -[DBSDisplayZoomSelectionListController updateNavigationButtonStateWithCurrentState]
  -[DBSDisplayZoomSelectionListController confirmationDictForCurrentSelectedScale]
  -[DBSDisplayZoomSelectionListController _updateNavigationButtonStateWithNewOption:]
  -[DBSDisplayZoomSelectionListController selectedDisplayZoomOption]
  -[DBSDisplayZoomSelectionListController setSelectedDisplayZoomOption:]


DBSExternalDisplayZoomSelectionListController : DBSDisplayZoomSelectionListController
 @property  SBSDisplayModeSettings *selectedDisplayModeSettings
 @property  SBSConnectedDisplayInfo *externalDisplayInfo
 @property  SBSExternalDisplayService *displayService

  // instance methods
  -[DBSExternalDisplayZoomSelectionListController .cxx_destruct]
  -[DBSExternalDisplayZoomSelectionListController displayService]
  -[DBSExternalDisplayZoomSelectionListController setDisplayService:]
  -[DBSExternalDisplayZoomSelectionListController externalDisplayInfo]
  -[DBSExternalDisplayZoomSelectionListController setExternalDisplayInfo:]
  -[DBSExternalDisplayZoomSelectionListController displayZoomTableViewCellCurrentlySelectedDisplayZoomOption:]
  -[DBSExternalDisplayZoomSelectionListController displayZoomTableViewCell:userDidTapOnDisplayZoomOption:]
  -[DBSExternalDisplayZoomSelectionListController userDidTapDone:]
  -[DBSExternalDisplayZoomSelectionListController supportedDisplayZoomOptions]
  -[DBSExternalDisplayZoomSelectionListController updateNavigationButtonStateWithCurrentState]
  -[DBSExternalDisplayZoomSelectionListController _updateNavigationButtonStateWithNewDisplayModeSettings:]
  -[DBSExternalDisplayZoomSelectionListController selectedDisplayModeSettings]
  -[DBSExternalDisplayZoomSelectionListController setSelectedDisplayModeSettings:]


DBSDisplayZoomOptionView : UIView <UIGestureRecognizerDelegate>
 @property  UILabel *optionNameLabel
 @property  DBSCheckmarkView *_checkmarkView
 @property  DBSDeviceDisplayZoomAnimationView *_packageView
 @property  UIImpactFeedbackGenerator *_feedbackGenerator
 @property  BOOL highlight
 @property  unsigned long displayZoomOption
 @property  <DBSDisplayZoomOptionViewDelegate> *delegate
 @property  BOOL selected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBSDisplayZoomOptionView startAnimation]
  -[DBSDisplayZoomOptionView setDelegate:]
  -[DBSDisplayZoomOptionView stopAnimation]
  -[DBSDisplayZoomOptionView delegate]
  -[DBSDisplayZoomOptionView setSelected:]
  -[DBSDisplayZoomOptionView .cxx_destruct]
  -[DBSDisplayZoomOptionView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[DBSDisplayZoomOptionView highlighted]
  -[DBSDisplayZoomOptionView isSelected]
  -[DBSDisplayZoomOptionView _feedbackGenerator]
  -[DBSDisplayZoomOptionView setHighlight:]
  -[DBSDisplayZoomOptionView _checkmarkView]
  -[DBSDisplayZoomOptionView _configureView]
  -[DBSDisplayZoomOptionView _packageView]
  -[DBSDisplayZoomOptionView displayZoomOption]
  -[DBSDisplayZoomOptionView _userDidTapOnView:]
  -[DBSDisplayZoomOptionView set_checkmarkView:]
  -[DBSDisplayZoomOptionView set_feedbackGenerator:]
  -[DBSDisplayZoomOptionView initWithFrame:displayZoomOption:]
  -[DBSDisplayZoomOptionView optionNameLabel]
  -[DBSDisplayZoomOptionView setOptionNameLabel:]
  -[DBSDisplayZoomOptionView set_packageView:]


DBSCheckmarkView : UIView
 @property  UIImageView *_checkmarkImageView
 @property  UIImageView *_circleImageView
 @property  BOOL selected

  // instance methods
  -[DBSCheckmarkView setSelected:]
  -[DBSCheckmarkView .cxx_destruct]
  -[DBSCheckmarkView _circleImageView]
  -[DBSCheckmarkView initWithFrame:]
  -[DBSCheckmarkView isSelected]
  -[DBSCheckmarkView _checkmarkImageView]
  -[DBSCheckmarkView _configureView]
  -[DBSCheckmarkView _updateViewState]
  -[DBSCheckmarkView set_checkmarkImageView:]
  -[DBSCheckmarkView set_circleImageView:]


DBSDeviceDisplayZoomAnimationView : UIView
 @property  unsigned long displayZoomOption
 @property  CALayer *packageLayer
 @property  CAPackage *package
 @property  CAStateController *stateController
 @property  unsigned long state
 @property  float duration
 @property  BOOL animating
 @property  {CGSize=dd} preferredSize
 @property  double scale

  // instance methods
  -[DBSDeviceDisplayZoomAnimationView package]
  -[DBSDeviceDisplayZoomAnimationView setDuration:]
  -[DBSDeviceDisplayZoomAnimationView startAnimation]
  -[DBSDeviceDisplayZoomAnimationView stopAnimation]
  -[DBSDeviceDisplayZoomAnimationView isAnimating]
  -[DBSDeviceDisplayZoomAnimationView state]
  -[DBSDeviceDisplayZoomAnimationView .cxx_destruct]
  -[DBSDeviceDisplayZoomAnimationView stateController]
  -[DBSDeviceDisplayZoomAnimationView duration]
  -[DBSDeviceDisplayZoomAnimationView _setPackage:]
  -[DBSDeviceDisplayZoomAnimationView drawRect:]
  -[DBSDeviceDisplayZoomAnimationView scale]
  -[DBSDeviceDisplayZoomAnimationView intrinsicContentSize]
  -[DBSDeviceDisplayZoomAnimationView setPackage:]
  -[DBSDeviceDisplayZoomAnimationView setScale:]
  -[DBSDeviceDisplayZoomAnimationView traitCollectionDidChange:]
  -[DBSDeviceDisplayZoomAnimationView setAnimating:]
  -[DBSDeviceDisplayZoomAnimationView setState:]
  -[DBSDeviceDisplayZoomAnimationView preferredSize]
  -[DBSDeviceDisplayZoomAnimationView packageLayer]
  -[DBSDeviceDisplayZoomAnimationView setPackageLayer:]
  -[DBSDeviceDisplayZoomAnimationView setStateController:]
  -[DBSDeviceDisplayZoomAnimationView _startAnimationForLayer:]
  -[DBSDeviceDisplayZoomAnimationView _configureView]
  -[DBSDeviceDisplayZoomAnimationView setDisplayZoomOption:]
  -[DBSDeviceDisplayZoomAnimationView displayZoomOption]
  -[DBSDeviceDisplayZoomAnimationView _stepAnimamtionForLayer:]
  -[DBSDeviceDisplayZoomAnimationView initWithDisplayZoomOption:]


DBSArrangementViewController : PSViewController <DBSArrangementLayoutViewControllerDelegate>
 @property  UIView *containerView
 @property  DBSArrangementLayoutViewController *layoutController
 @property  UISwitch *mirroredSwitch
 @property  unsigned long currentDisplayLocation
 @property  BOOL isCurrentlyMirrored
 @property  SBSConnectedDisplayInfo *externalDisplayInfo
 @property  SBSExternalDisplayService *displayService
 @property  <DBSArrangementViewControllerDelegate> *delegate

  // instance methods
  -[DBSArrangementViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[DBSArrangementViewController preferredContentSize]
  -[DBSArrangementViewController setDelegate:]
  -[DBSArrangementViewController delegate]
  -[DBSArrangementViewController .cxx_destruct]
  -[DBSArrangementViewController dismissViewControllerAnimated:completion:]
  -[DBSArrangementViewController loadView]
  -[DBSArrangementViewController setContainerView:]
  -[DBSArrangementViewController layoutController]
  -[DBSArrangementViewController containerView]
  -[DBSArrangementViewController cancelPressed]
  -[DBSArrangementViewController setLayoutController:]
  -[DBSArrangementViewController displayService]
  -[DBSArrangementViewController setDisplayService:]
  -[DBSArrangementViewController externalDisplayInfo]
  -[DBSArrangementViewController setExternalDisplayInfo:]
  -[DBSArrangementViewController externalDisplayName]
  -[DBSArrangementViewController externalDisplaySize]
  -[DBSArrangementViewController nativeDisplayImage]
  -[DBSArrangementViewController nativeDisplaySize]
  -[DBSArrangementViewController nativeDisplayName]
  -[DBSArrangementViewController setPressed]
  -[DBSArrangementViewController mirroredToggled:]
  -[DBSArrangementViewController nativeDisplayLocationDidChange:]
  -[DBSArrangementViewController updateSetButtonEnablement]
  -[DBSArrangementViewController mirroredSwitch]
  -[DBSArrangementViewController setMirroredSwitch:]
  -[DBSArrangementViewController currentDisplayLocation]
  -[DBSArrangementViewController setCurrentDisplayLocation:]
  -[DBSArrangementViewController isCurrentlyMirrored]
  -[DBSArrangementViewController setIsCurrentlyMirrored:]


DBSDisplayCellLayoutManager : UITableViewCellLayoutManagerValue1
  // instance methods
  -[DBSDisplayCellLayoutManager standardLayoutImageViewFrameForCell:forSizing:]


DBSDisplayTableViewCell : PSTableCell
  // instance methods
  -[DBSDisplayTableViewCell initWithStyle:reuseIdentifier:specifier:]


DBSZoomAndProSpecifiers : NSObject
 @property  <DBSZoomAndProSpecifiersDelegate> *delegate
 @property  NSArray *specifiers
 @property  PSSpecifier *proModeSwitchSpecifier
 @property  PSSpecifier *fineTuneSpecifier

  // class methods
  +[DBSZoomAndProSpecifiers specifiersPresentIn:]
  +[DBSZoomAndProSpecifiers removeSpecifiersFrom:]

  // instance methods
  -[DBSZoomAndProSpecifiers setDelegate:]
  -[DBSZoomAndProSpecifiers delegate]
  -[DBSZoomAndProSpecifiers specifiers]
  -[DBSZoomAndProSpecifiers .cxx_destruct]
  -[DBSZoomAndProSpecifiers presentModalMagnifyController]
  -[DBSZoomAndProSpecifiers presentModalFineTuneController]
  -[DBSZoomAndProSpecifiers localizedMagnifyModeName]
  -[DBSZoomAndProSpecifiers setProModeEnabled:forSpecifier:]
  -[DBSZoomAndProSpecifiers getProModeEnabled:]
  -[DBSZoomAndProSpecifiers proModeSwitchSpecifier]
  -[DBSZoomAndProSpecifiers fineTuneSpecifier]


UIImage(DBSAdditions)
	// class methods
	+[UIImage(DBSAdditions) dbs_minSliderImage]
	+[UIImage(DBSAdditions) dbs_maxSliderImage]

01 00 0700 /System/Library/PrivateFrameworks/CoreBrightness.framework/CoreBrightness: BrightnessSystemClient 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplay 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAPackage 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateController 
01 00 0700 /System/Library/PrivateFrameworks/CoreBrightness.framework/CoreBrightness: CBClient 
01 00 0b00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPAggregateDictionary 
01 00 0b00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPBitmapStore 
01 00 0200 /System/Library/PrivateFrameworks/CloudSettings.framework/CloudSettings: CloudSettingsManager 
01 00 0d00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSSystemService 
01 00 0800 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1200 /System/Library/PrivateFrameworks/Pegasus.framework/Pegasus: PGPictureInPictureProxy 
01 00 0900 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSCapabilityManager 
01 00 0900 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSConfirmationSpecifier 
01 00 0900 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSDateTimePickerCell 
01 00 0900 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSEditableTableCell 
01 00 0900 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSListController 
01 00 0900 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSListControllerDefaultAppearanceProvider 
01 00 0900 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSegmentableSlider 
01 00 0900 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSetupController 
01 00 0900 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSliderTableCell 
01 00 0900 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSpecifier 
01 00 0900 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSTableCell 
01 00 0900 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSTimeRangeCell 
01 00 0900 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSViewController 
01 00 0600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSExternalDisplayService 
01 00 0600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSHomeScreenService 
01 00 0600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSMutableDisplayModeSettings 
01 00 0600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRelativeDisplayArrangement 
01 00 0600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRelaunchAction 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIButtonConfiguration 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIDatePicker 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImpactFeedbackGenerator 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 0f00 /System/Library/PrivateFrameworks/UIKitServices.framework/UIKitServices: UISUserInterfaceStyleMode 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UISlider 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCellLayoutManagerValue1 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowScene 
