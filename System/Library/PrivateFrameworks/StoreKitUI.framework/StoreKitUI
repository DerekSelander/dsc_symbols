|| __DATA.__objc_data _OBJC_CLASS_$_SKProductPageViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKScriptInterface
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIAbstractEntityProviderViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIAnalyzedImageColors
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIAppDeviceConfig
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIAppleIDImageURLProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIApplicationController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIApplicationControllerOptions
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIApplicationLicensePage
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIApplicationLicenseViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIArtwork
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIArtworkList
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIArtworkProvidingFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIArtworkRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIArtworkTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIBorderView
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIBrickItem
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIBrickSwooshArtworkLoader
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIBrickSwooshPageSection
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIBrickSwooshViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUICategory
|| __DATA.__objc_data _OBJC_CLASS_$_SKUICategoryController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUICellScrollView
|| __DATA.__objc_data _OBJC_CLASS_$_SKUICollectionViewLayoutAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIColorScheme
|| __DATA.__objc_data _OBJC_CLASS_$_SKUICompletion
|| __DATA.__objc_data _OBJC_CLASS_$_SKUICompletionDataConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_SKUICompletionList
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIComposeReviewViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIConfigurationPreloader
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIContentUnavailableTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_SKUICountLimitViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIDonationViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIDownloadsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIDynamicPageSectionIndexMapper
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIEditorTemplateViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIEditorialComponent
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIEmptyContentPlaceholderView
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIEntityProviderInvalidationContext
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIEntityProviderListViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIErrorDocumentViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIExplicitRestrictionAlertController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIFamilyCircleController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIFocusedTouchGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIFullscreenImageViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIGalleryPageComponent
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIGift
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIGiftViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIGridComponent
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIGroupedHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIHorizontalScrollingContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIIPadSearchController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIImageColorAnalyzer
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIImageViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIIndexBarEntry
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIInteractiveSegmentedControl
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIItem
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIItemArtworkContext
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIItemCollectionController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIItemGridCollectionViewLayout
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIItemGridViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIItemList
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIItemListTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIItemOffer
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIItemOfferButtonAppearance
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIItemResourceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIItemRoomTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIJSITunesStore
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIJSONDataConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIJSRestrictions
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILaunchErrorViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILayoutCache
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILibraryItem
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILibraryItemState
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILimitListViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILimitViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILink
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILinkButton
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILoadResourceOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILoadingView
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILoadingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILockupComponent
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILockupSwooshArtworkLoader
|| __DATA.__objc_data _OBJC_CLASS_$_SKUILockupSwooshViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIMediaComponent
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIMediaPlayerItemStatus
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIMediaSocialAdminPermissionsCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIMediaSocialAdminPermissionsOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIMediaSocialAuthor
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIMediaSocialProfile
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIMediaSocialProfileCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIMediaSocialProfileOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIMenuViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIMessageBanner
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIMetricsController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIMetricsImpressionSession
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIModalDocumentController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIModalSourceViewProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIMutableApplicationControllerOptions
|| __DATA.__objc_data _OBJC_CLASS_$_SKUINavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUINavigationControllerAssistant
|| __DATA.__objc_data _OBJC_CLASS_$_SKUINavigationDocumentController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUINearMeController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUINetworkErrorViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIOffscreenRenderOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIPageComponent
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIPageComponentContext
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIPassbookLoader
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIPassbookPassDataConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIPlayButton
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIPlayButtonGradientView
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIPlayButtonImageCache
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIPlayButtonShapeView
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIPostReviewOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIPredicateListViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIPredicateViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIProductImageDataConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIProductPage
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIProductPageActivityViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIProductPageDataConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIProductPageItem
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIPropertyPredicateViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIProxyScrollView
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIQuicklinksPageComponent
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIRadioEntityProviderViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIRadioStationEntityValueProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIRedeemViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIRedeemViewControllerLegacy
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIResourceLoader
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIResourceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIReviewInAppConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIReviewInAppController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIReviewMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIScreenshot
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIScreenshotDataConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIScrollForwardingView
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIScrollingSegmentedControllerNavigationBarTitleView
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIScrollingTabBarController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIScrollingTabBarPalette
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIScrollingTabNavigationBar
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIScrollingTabNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISearchBar
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISearchFieldController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISearchItem
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISearchRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISeparatorView
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIShareSheetActivityViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIShareTemplateActivityViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIShareTemplateViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISimpleCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISizeToFitImageDataConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISortDescriptorListViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISortDescriptorViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISpacePageComponent
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIStackTemplateElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIStackView
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIStackedBar
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIStackedPopTransition
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIStackedPushTransition
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIStandardInteractiveDividerView
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIStarRatingViewElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIStateRestorationContext
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIStorePage
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIStorePageCollectionViewLayout
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIStorePageDataConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIStorePageViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISwooshArrayViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISwooshArtworkLoader
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISwooshPageComponent
|| __DATA.__objc_data _OBJC_CLASS_$_SKUISwooshViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUITabBarItem
|| __DATA.__objc_data _OBJC_CLASS_$_SKUITestDataURLProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_SKUITextLayout
|| __DATA.__objc_data _OBJC_CLASS_$_SKUITextLayoutRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIToastViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIToggleStateCenter
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIToggleStateItem
|| __DATA.__objc_data _OBJC_CLASS_$_SKUITrendingSearchDocumentViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SKUITrendingSearchTemplateElement
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIURL
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIURLResolver
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIUber
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIViewControllerFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SKUIViewElementText
|| __DATA.__objc_data _OBJC_METACLASS_$_SKProductPageViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKScriptInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIAbstractEntityProviderViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIAnalyzedImageColors
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIAppDeviceConfig
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIAppleIDImageURLProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIApplicationController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIApplicationControllerOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIApplicationLicensePage
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIApplicationLicenseViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIArtworkList
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIArtworkProvidingFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIArtworkRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIArtworkTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIBorderView
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIBrickItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIBrickSwooshArtworkLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIBrickSwooshPageSection
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIBrickSwooshViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUICategory
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUICategoryController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUICellScrollView
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUICollectionViewLayoutAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIColorScheme
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUICompletion
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUICompletionDataConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUICompletionList
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIComposeReviewViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIConfigurationPreloader
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIContentUnavailableTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUICountLimitViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIDonationViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIDownloadsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIDynamicPageSectionIndexMapper
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIEditorTemplateViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIEditorialComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIEmptyContentPlaceholderView
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIEntityProviderInvalidationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIEntityProviderListViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIErrorDocumentViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIExplicitRestrictionAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIFamilyCircleController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIFocusedTouchGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIFullscreenImageViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIGalleryPageComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIGift
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIGridComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIGroupedHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIHorizontalScrollingContainerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIIPadSearchController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIImageColorAnalyzer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIImageViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIIndexBarEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIInteractiveSegmentedControl
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIItemArtworkContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIItemCollectionController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIItemGridCollectionViewLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIItemGridViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIItemList
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIItemListTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIItemOffer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIItemOfferButtonAppearance
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIItemResourceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIItemRoomTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIJSITunesStore
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIJSONDataConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIJSRestrictions
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILaunchErrorViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILayoutCache
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILibraryItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILibraryItemState
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILimitListViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILimitViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILink
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILinkButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILoadResourceOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILoadingView
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILoadingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILockupComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILockupSwooshArtworkLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUILockupSwooshViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIMediaComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIMediaPlayerItemStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIMediaSocialAdminPermissionsCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIMediaSocialAdminPermissionsOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIMediaSocialAuthor
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIMediaSocialProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIMediaSocialProfileCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIMediaSocialProfileOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIMenuViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIMessageBanner
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIMetricsController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIMetricsImpressionSession
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIModalDocumentController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIModalSourceViewProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIMutableApplicationControllerOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUINavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUINavigationControllerAssistant
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUINavigationDocumentController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUINearMeController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUINetworkErrorViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIOffscreenRenderOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIPageComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIPageComponentContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIPassbookLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIPassbookPassDataConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIPlayButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIPlayButtonGradientView
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIPlayButtonImageCache
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIPlayButtonShapeView
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIPostReviewOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIPredicateListViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIPredicateViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIProductImageDataConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIProductPage
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIProductPageActivityViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIProductPageDataConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIProductPageItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIPropertyPredicateViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIProxyScrollView
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIQuicklinksPageComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIRadioEntityProviderViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIRadioStationEntityValueProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIRedeemViewControllerLegacy
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIResourceLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIResourceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIReviewInAppConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIReviewInAppController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIReviewMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIScreenshot
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIScreenshotDataConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIScrollForwardingView
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIScrollingSegmentedControllerNavigationBarTitleView
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIScrollingTabBarController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIScrollingTabBarPalette
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIScrollingTabNavigationBar
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIScrollingTabNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISearchBar
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISearchFieldController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISearchItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISearchRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISeparatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIShareSheetActivityViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIShareTemplateActivityViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIShareTemplateViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISimpleCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISizeToFitImageDataConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISortDescriptorListViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISortDescriptorViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISpacePageComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIStackTemplateElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIStackView
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIStackedBar
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIStackedPopTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIStackedPushTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIStandardInteractiveDividerView
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIStarRatingViewElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIStateRestorationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIStorePage
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIStorePageCollectionViewLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIStorePageDataConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIStorePageViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISwooshArrayViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISwooshArtworkLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISwooshPageComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUISwooshViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUITabBarItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUITestDataURLProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUITextLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUITextLayoutRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIToastViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIToggleStateCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIToggleStateItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUITrendingSearchDocumentViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUITrendingSearchTemplateElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIURL
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIURLResolver
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIUber
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIViewControllerFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SKUIViewElementText
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKUIApplicationControllerOptions._bootstrapScriptFallbackEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKUIApplicationControllerOptions._bootstrapScriptFallbackMaximumAge
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKUIApplicationControllerOptions._bootstrapScriptTimeoutInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKUIApplicationControllerOptions._pageRenderMetricsEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKUIApplicationControllerOptions._requiresLocalBootstrapScript
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKUIApplicationControllerOptions._supportsFullApplicationReload
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKUIApplicationControllerOptions._tabBarControllerStyle
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKUIApplicationControllerOptions._useTransientStorageForTests
|| __DATA_CONST.__const _SKUIApplicationControllerPreviewOverlayDidChangeNotification
|| __DATA_CONST.__const _SKUIApplicationPageDidDisplayNotification
|| __DATA_CONST.__const _SKUIApplicationPageDidUpdateNotification
|| __DATA_CONST.__const _SKUIArtworkRequestDidLoadImageNotification
|| __DATA_CONST.__const _SKUIArtworkRequestImageKey
|| __DATA_CONST.__const _SKUIClientContextConfigurationDidChangeNotification
|| __DATA_CONST.__const _SKUIConfigurationKeyApplicationScriptURL
|| __DATA_CONST.__const _SKUIConfigurationKeyContentGiftingEnabled
|| __DATA_CONST.__const _SKUIConfigurationKeyLocale
|| __DATA_CONST.__const _SKUIConfigurationKeyMonetaryGiftingEnabled
|| __DATA_CONST.__const _SKUIConfigurationKeyOffersInAppNoticeString
|| __DATA_CONST.__const _SKUIConfigurationKeyStorefrontSuffix
|| __DATA_CONST.__const _SKUIConfigurationKeyTabs
|| __DATA_CONST.__const _SKUIErrorDomain
|| __DATA_CONST.__const _SKUIFamilyCircleDidChangeNotification
|| __DATA_CONST.__const _SKUIFamilyCircleProfilePictureDidChangeNotification
|| __DATA_CONST.__const _SKUIItemStateCenterErrorDomain
|| __DATA_CONST.__const _SKUIJSITunesStoreResetStateForDocumentNotification
|| __DATA_CONST.__const _SKUIJSShowPageTypeCategory
|| __DATA_CONST.__const _SKUIJSShowPageTypeNearby
|| __DATA_CONST.__const _SKUIJSShowPageTypeSearch
|| __DATA_CONST.__const _SKUILinkTargetExternal
|| __DATA_CONST.__const _SKUILocalizedStringTableDownload
|| __DATA_CONST.__const _SKUILocalizedStringTableExplicitByDefault
|| __DATA_CONST.__const _SKUILocalizedStringTableGifting
|| __DATA_CONST.__const _SKUILocalizedStringTableOnboarding
|| __DATA_CONST.__const _SKUILocalizedStringTableProductPage
|| __DATA_CONST.__const _SKUILocalizedStringTableRedeem
|| __DATA_CONST.__const _SKUILocalizedStringTableSettings
|| __DATA_CONST.__const _SKUILocalizedStringTableTabBar
|| __DATA_CONST.__const _SKUILocalizedStringTableTones
|| __DATA_CONST.__const _SKUIMediaSocialAdminPermissionsOptionIgnoreCache
|| __DATA_CONST.__const _SKUIMediaSocialAuthorPermissionCommentAsEntity
|| __DATA_CONST.__const _SKUIMediaSocialAuthorPermissionCommentWithAttribution
|| __DATA_CONST.__const _SKUIMediaSocialAuthorPermissionShareAsEntity
|| __DATA_CONST.__const _SKUIMediaSocialAuthorPermissionShareWithAttribution
|| __DATA_CONST.__const _SKUIMediaSocialProfileOptionIgnoreCache
|| __DATA_CONST.__const _SKUIMetricsDidRecordEnterEventNotification
|| __DATA_CONST.__const _SKUIMetricsImpressionNotification
|| __DATA_CONST.__const _SKUINearMeItemsDidChangeNotification
|| __DATA_CONST.__const _SKUINearMeLocationDidQueryKey
|| __DATA_CONST.__const _SKUINearMeLocationStatusDidChangeNotification
|| __DATA_CONST.__const _SKUINearMeLocationStatusEnabledNotificationKey
|| __DATA_CONST.__const _SKUIPassbookAddCreditPassTypeIdentifier
|| __DATA_CONST.__const _SKUIPassbookAddCreditURLBagKey
|| __DATA_CONST.__const _SKUIProtocolKeyAdamID
|| __DATA_CONST.__const _SKUIProtocolKeyAdamIDs
|| __DATA_CONST.__const _SKUIProtocolKeyAlignment
|| __DATA_CONST.__const _SKUIProtocolKeyArtwork
|| __DATA_CONST.__const _SKUIProtocolKeyBlockType
|| __DATA_CONST.__const _SKUIProtocolKeyChildType
|| __DATA_CONST.__const _SKUIProtocolKeyChildren
|| __DATA_CONST.__const _SKUIProtocolKeyContentIDs
|| __DATA_CONST.__const _SKUIProtocolKeyDesignLabel
|| __DATA_CONST.__const _SKUIProtocolKeyEditorial
|| __DATA_CONST.__const _SKUIProtocolKeyGratisIdentifiers
|| __DATA_CONST.__const _SKUIProtocolKeyLabel
|| __DATA_CONST.__const _SKUIProtocolKeyLink
|| __DATA_CONST.__const _SKUIProtocolKeyName
|| __DATA_CONST.__const _SKUIProtocolKeyPageType
|| __DATA_CONST.__const _SKUIProtocolKeySeeAllURL
|| __DATA_CONST.__const _SKUIProtocolKeyStorePlatformData
|| __DATA_CONST.__const _SKUIProtocolKeyStorePlatformPrewarmData
|| __DATA_CONST.__const _SKUIProtocolKeyTitle
|| __DATA_CONST.__const _SKUIProtocolKeyURL
|| __DATA_CONST.__const _SKUIRadioEntityTypeStationString
|| __DATA_CONST.__const _SKUIRadioStationEntityUniqueIdentifierKeyStationHash
|| __DATA_CONST.__const _SKUIRadioStationEntityUniqueIdentifierKeyStationID
|| __DATA_CONST.__const _SKUIRemoteKeyboardFrameChangedNotification
|| __DATA_CONST.__const _SKUIRemoteKeyboardFrameKey
|| __DATA_CONST.__const _SKUIResourceLoaderDidBeginLoadingNotification
|| __DATA_CONST.__const _SKUIResourceLoaderDidIdleNotification
|| __DATA_CONST.__const _SKUIResourceLoaderDidLoadAllForReasonNotification
|| __DATA_CONST.__const _SKUIResourceLoaderLoadReasonUserInfoKey
|| __DATA_CONST.__const _SKUIResourceNamePreviewHistory
|| __DATA_CONST.__const _SKUIResourceNameSearch
|| __DATA_CONST.__const _SKUIResourceNameShare
|| __DATA_CONST.__const _SKUIScreenshotOrientationLandscape
|| __DATA_CONST.__const _SKUIScreenshotOrientationPortrait
|| __DATA_CONST.__const _SKUIScreenshotVariantHighDPI
|| __DATA_CONST.__const _SKUIScreenshotVariantLowDPI
|| __DATA_CONST.__const _SKUIScrollingTabBarControllerPaletteWasAttached
|| __DATA_CONST.__const _SKUIScrollingTabBarControllerPaletteWasDetached
|| __DATA_CONST.__const _SKUIShareSheetActivityTypeAirDrop
|| __DATA_CONST.__const _SKUIShareSheetActivityTypeFacebook
|| __DATA_CONST.__const _SKUIShareSheetActivityTypeGift
|| __DATA_CONST.__const _SKUIShareSheetActivityTypeMail
|| __DATA_CONST.__const _SKUIShareSheetActivityTypeMessage
|| __DATA_CONST.__const _SKUIShareSheetActivityTypePasteboard
|| __DATA_CONST.__const _SKUIShareSheetActivityTypeSinaWeibo
|| __DATA_CONST.__const _SKUIShareSheetActivityTypeTencentWeibo
|| __DATA_CONST.__const _SKUIShareSheetActivityTypeTwitter
|| __DATA_CONST.__const _SKUIShareSheetActivityTypeWildcard
|| __DATA_CONST.__const _SKUIShareSheetActivityTypeWishlist
|| __DATA_CONST.__const _SKUISimpleCollectionViewCellReuseIdentifier
|| __DATA_CONST.__const _SKUIStorePageTypeArtist
|| __DATA_CONST.__const _SKUIStorePageTypeBannerRoom
|| __DATA_CONST.__const _SKUIStorePageTypeChart
|| __DATA_CONST.__const _SKUIStorePageTypeCustom
|| __DATA_CONST.__const _SKUIStorePageTypeDocumentTypeSearchResults
|| __DATA_CONST.__const _SKUIStorePageTypeGrouping
|| __DATA_CONST.__const _SKUIStorePageTypeITML
|| __DATA_CONST.__const _SKUIStorePageTypeMultiRoom
|| __DATA_CONST.__const _SKUIStorePageTypeRoom
|| __DATA_CONST.__const _SKUIStorePageTypeSoftwareBundleProductPage
|| __DATA_CONST.__const _SKUIStorePageTypeSoftwareProductPage
|| __DATA_CONST.__const _SKUIStorePageTypeVideoLockupRoom
|| __DATA_CONST.__const _SKUITestDataURLScheme
|| __DATA_CONST.__const _SKUIURLActionAccessoryLookup
|| __DATA_CONST.__const _SKUIURLActionAccount
|| __DATA_CONST.__const _SKUIURLActionAddPassbookPass
|| __DATA_CONST.__const _SKUIURLActionApplicationEULA
|| __DATA_CONST.__const _SKUIURLActionDonation
|| __DATA_CONST.__const _SKUIURLActionGift
|| __DATA_CONST.__const _SKUIURLActionLibraryLink
|| __DATA_CONST.__const _SKUIURLActionPerformLookup
|| __DATA_CONST.__const _SKUIURLActionRedeem
|| __DATA_CONST.__const _SKUIURLActionSearch
|| __DATA_CONST.__const _SKUIURLActionShowAudiobooksMain
|| __DATA_CONST.__const _SKUIURLActionShowBagURL
|| __DATA_CONST.__const _SKUIURLActionShowBooksMain
|| __DATA_CONST.__const _SKUIURLActionShowManage
|| __DATA_CONST.__const _SKUIURLActionShowMoviesMain
|| __DATA_CONST.__const _SKUIURLActionShowMusicMain
|| __DATA_CONST.__const _SKUIURLActionShowMusicVideosMain
|| __DATA_CONST.__const _SKUIURLActionShowNewsstandMain
|| __DATA_CONST.__const _SKUIURLActionShowPassbookMain
|| __DATA_CONST.__const _SKUIURLActionShowPodcastsMain
|| __DATA_CONST.__const _SKUIURLActionShowPurchased
|| __DATA_CONST.__const _SKUIURLActionShowRingtonesMain
|| __DATA_CONST.__const _SKUIURLActionShowSoftwareMain
|| __DATA_CONST.__const _SKUIURLActionShowTelevisionMain
|| __DATA_CONST.__const _SKUIURLActionShowUpdates
|| __DATA_CONST.__const _SKUIURLAppStoreSearchBagKeyOverrideKey
|| __DATA_CONST.__const _SKUIUserDefaultsKeyHideFamilyBanner
|| __DATA_CONST.__const _SKUIVideoPreviewDidEndNotification
|| __DATA_CONST.__const _SKUIVideoPreviewDidStartNotification
|| __DATA_CONST.__const _SKUIVideoPreviewDismissNotification
|| __DATA_CONST.__const _SKUIViewElementAttributeDataContentIdentifier
|| __DATA_CONST.__const _SKUIViewElementAttributeDataFeedURL
|| __DATA_CONST.__const _SKUIViewElementAttributeDisabled
|| __DATA_CONST.__const _SKUIViewElementAttributeHighlight
|| __DATA_CONST.__const _SKUIViewElementAttributePreviewIdentifier
|| __DATA_CONST.__const _SKUIViewElementEventAttributeVisibleImagesLoaded
|| __DATA_CONST.__const _SKUIViewElementEventNameVisibleImagesLoaded
|| __DATA_CONST.__const _kOptionKeyLaunchTime
|| __DATA_CONST.__const _kOptionKeyReferrerApp
|| __DATA_CONST.__const _kOptionKeyReferrerURL
|| __DATA_CONST.__const _kOptionKeySelectedTabId
|| __DATA_CONST.__const _kOptionKeyURL
|| __DATA_CONST.__const _kOptionKeyWindowSize
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIButtonViewElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUICellLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUICircleProgressIndicator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIClientContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUICollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIDocumentContainerViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIIPhoneProductPageViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIImageDataConsumer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIIndexBarControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIItemBrowseCellLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIItemCellLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIItemCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIItemOfferButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIItemState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIItemStateCenter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIItemTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUILabelViewElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUILocalizedStringDictionary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIPlayButtonControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIProductPageOverlayController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIRatingStarsCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIRedeemCameraViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIRedeemStepViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIReloadConfigurationOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIScrollingSegmentedController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUISegmentedTableHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIStandardInteractiveSegment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIStoreIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIStorePageSection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIStyledImageDataConsumer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUISwooshView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUITabBarController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUITableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUITableViewSection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUITextBoxView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SKUIViewElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIArtwork
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIButtonViewElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUICellLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUICircleProgressIndicator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIClientContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUICollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIDocumentContainerViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIGiftViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIIPhoneProductPageViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIImageDataConsumer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIIndexBarControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIItemBrowseCellLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIItemCellLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIItemCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIItemOfferButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIItemState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIItemStateCenter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIItemTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUILabelViewElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUILocalizedStringDictionary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIPlayButtonControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIProductPageOverlayController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIRatingStarsCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIRedeemCameraViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIRedeemStepViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIRedeemViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIReloadConfigurationOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIScrollingSegmentedController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUISegmentedTableHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIStandardInteractiveSegment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIStoreIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIStorePageSection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIStyledImageDataConsumer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUISwooshView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUITabBarController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUITableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUITableViewSection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUITextBoxView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SKUIViewElement
|| __TEXT.__const _kSKUITextBoxLayoutHorizontalMargin
|| __TEXT.__const _kSKUITextBoxLayoutMarginBottomIPad
|| __TEXT.__const _kSKUITextBoxLayoutMarginBottomIPhone
|| __TEXT.__const _kSKUITextBoxLayoutMarginTopIPad
|| __TEXT.__const _kSKUITextBoxLayoutMarginTopIPhone
|| __TEXT.__const _kSKUITextBoxLayoutMoreButtonLeftPadding
|| __TEXT.__const _kSKUITextBoxLayoutRatingBottomPadding
|| __TEXT.__const _kSKUITextBoxLayoutRatingLabelHeight
|| __TEXT.__const _kSKUITextBoxLayoutRatingStarsHeight
|| __TEXT.__const _kSKUITextBoxLayoutSubtitleHeight
|| __TEXT.__const _kSKUITextBoxLayoutTextBottomPaddingIPad
|| __TEXT.__const _kSKUITextBoxLayoutTextBottomPaddingIPhone
|| __TEXT.__const _kSKUITextBoxLayoutTextRatingBottomPaddingIPad
|| __TEXT.__const _kSKUITextBoxLayoutTextRatingBottomPaddingIPhone
|| __TEXT.__const _kSKUITextBoxLayoutTitleFontSizeIPad
|| __TEXT.__const _kSKUITextBoxLayoutTitleFontSizeIPhone
|| __TEXT.__const _kSKUITextBoxLayoutTitleHeightIPad
|| __TEXT.__const _kSKUITextBoxLayoutTitleHeightIPhone
|| __TEXT.__text _SKUIAllowsLandscapePhone
|| __TEXT.__text _SKUIAppearanceStyleBarButtonItem
|| __TEXT.__text _SKUIAppearanceStyleNavigationBar
|| __TEXT.__text _SKUIBorderColorWithBackgroundColor
|| __TEXT.__text _SKUIBundle
|| __TEXT.__text _SKUIButtonViewTypeForString
|| __TEXT.__text _SKUICTTextAlignmentForPageComponentAlignment
|| __TEXT.__text _SKUICacheCodingDecodeArray
|| __TEXT.__text _SKUICacheCodingEncodeArray
|| __TEXT.__text _SKUIChartGetTitle
|| __TEXT.__text _SKUICollectionViewCellForView
|| __TEXT.__text _SKUICollectionViewForView
|| __TEXT.__text _SKUIColorByAdjustingBrightness
|| __TEXT.__text _SKUIColorForStyleWithAlpha
|| __TEXT.__text _SKUIColorForStyleWithBrightness
|| __TEXT.__text _SKUIColorSchemeStyleForColor
|| __TEXT.__text _SKUIColorWithAlpha
|| __TEXT.__text _SKUIColorWithHTMLCode
|| __TEXT.__text _SKUICompactThreshold
|| __TEXT.__text _SKUIDecodeRestorableStateWithCoder
|| __TEXT.__text _SKUIEditorialBodySizeForString
|| __TEXT.__text _SKUIEditorialBodyWeightForString
|| __TEXT.__text _SKUIEditorialLinkSpacingForString
|| __TEXT.__text _SKUIEditorialStyleDefault
|| __TEXT.__text _SKUIEditorialStyleForDictionary
|| __TEXT.__text _SKUIEditorialTitleSizeForString
|| __TEXT.__text _SKUIEditorialTitleSpacingForString
|| __TEXT.__text _SKUIEditorialTitleWeightForString
|| __TEXT.__text _SKUIEncodeRestorableStateWithCoder
|| __TEXT.__text _SKUIErrorDocumentTitle
|| __TEXT.__text _SKUIFamilyAlertMessageBanner
|| __TEXT.__text _SKUIFontForTextStyle
|| __TEXT.__text _SKUIFontLimitedPreferredFontForTextStyle
|| __TEXT.__text _SKUIFontPreferredFontForTextStyle
|| __TEXT.__text _SKUIGetFamilyMemberImage
|| __TEXT.__text _SKUIHexValueWithString
|| __TEXT.__text _SKUIIKViewElementTypeIsButton
|| __TEXT.__text _SKUIIconColorsForColorScheme
|| __TEXT.__text _SKUIIconFrameForIconSize
|| __TEXT.__text _SKUIImageExistsWithResourceName
|| __TEXT.__text _SKUIImageTreatmentForString
|| __TEXT.__text _SKUIImageWithResourceName
|| __TEXT.__text _SKUIInitializeDOMFeatureFactory
|| __TEXT.__text _SKUIInitializeViewElementFactory
|| __TEXT.__text _SKUIInitializeViewElementStyleFactory
|| __TEXT.__text _SKUIItemCollectionItemPageRangeForCollectionView
|| __TEXT.__text _SKUIItemCollectionItemPageRangeForTableView
|| __TEXT.__text _SKUIItemCollectionVisibleItemRangeForCollectionView
|| __TEXT.__text _SKUIItemCollectionVisibleItemRangeForTableView
|| __TEXT.__text _SKUIItemDeviceFamilyIsTVOnly
|| __TEXT.__text _SKUIItemDeviceFamilyIsUniversal
|| __TEXT.__text _SKUIItemKindForString
|| __TEXT.__text _SKUIItemKindIsSoftwareKind
|| __TEXT.__text _SKUIItemKindIsToneKind
|| __TEXT.__text _SKUIItemScreenshotsForDictionary
|| __TEXT.__text _SKUIItemStateCenterUseAppstorePurchasesSwitchEnabled
|| __TEXT.__text _SKUIItemStateCenterUseAppstoredPurchases
|| __TEXT.__text _SKUILabelStringAttributesWithSpanElement
|| __TEXT.__text _SKUILabelViewStyleForString
|| __TEXT.__text _SKUILayoutGuideInsets
|| __TEXT.__text _SKUILinkArrowButton
|| __TEXT.__text _SKUILinkArrowImage
|| __TEXT.__text _SKUILockupFieldForString
|| __TEXT.__text _SKUILockupItemCountString
|| __TEXT.__text _SKUILockupLayoutStyleForString
|| __TEXT.__text _SKUILockupLayoutStyleIsHorizontal
|| __TEXT.__text _SKUILockupSizeForString
|| __TEXT.__text _SKUILockupStyleDefault
|| __TEXT.__text _SKUILockupStyleForDictionary
|| __TEXT.__text _SKUIMessageBannerAttributedString
|| __TEXT.__text _SKUIMetricsLaunchApplicationWithIdentifier
|| __TEXT.__text _SKUIMetricsLaunchApplicationWithIdentifierAndURLAndLaunchOptions
|| __TEXT.__text _SKUIMetricsNavigationTypeFromNavigationControllerOperation
|| __TEXT.__text _SKUIMetricsOpenSensitiveURL
|| __TEXT.__text _SKUIMetricsOpenURL
|| __TEXT.__text _SKUIMetricsSetClickEventPositionWithPoint
|| __TEXT.__text _SKUIMetricsSetClickEventPositionWithView
|| __TEXT.__text _SKUIMetricsWindowOrientationForInterfaceOrientation
|| __TEXT.__text _SKUIMoreDisclosureImage
|| __TEXT.__text _SKUINavigationControllerDidShowViewController
|| __TEXT.__text _SKUINavigationControllerWillShowViewController
|| __TEXT.__text _SKUINearMeIsEnabledForAuthorizationStatus
|| __TEXT.__text _SKUIPageComponentAlignmentForString
|| __TEXT.__text _SKUIPageComponentClassForComponentType
|| __TEXT.__text _SKUIPageComponentFontWeightForString
|| __TEXT.__text _SKUIPageComponentTypeForBlockType
|| __TEXT.__text _SKUIPageComponentTypeForFeaturedContentKind
|| __TEXT.__text _SKUIProductPageFragmentWithURL
|| __TEXT.__text _SKUIRangesForFormatString
|| __TEXT.__text _SKUIRectByApplyingStoreUserInterfaceLayoutDirectionInRect
|| __TEXT.__text _SKUIRectByApplyingUserInterfaceLayoutDirectionInRect
|| __TEXT.__text _SKUIRectByRemovingStoreUserInterfaceLayoutDirectionInRect
|| __TEXT.__text _SKUIRectByRemovingUserInterfaceLayoutDirectionInRect
|| __TEXT.__text _SKUIRegisterDOMFeatureFactory
|| __TEXT.__text _SKUIResourceImageSetRegisterWithBundle
|| __TEXT.__text _SKUIResourceImageSetRegisterWithBundleAlwaysTemplate
|| __TEXT.__text _SKUIResourceLoaderGetNameForObject
|| __TEXT.__text _SKUIScrollViewLayoutTopBackgroundColor
|| __TEXT.__text _SKUIScrollViewLayoutTopBackgroundColorForProductPage
|| __TEXT.__text _SKUIScrollViewSetContentInsets
|| __TEXT.__text _SKUIScrollViewSetDefaultContentInsets
|| __TEXT.__text _SKUIScrollViewSetPinnedHeaderContentInsets
|| __TEXT.__text _SKUIScrollViewSetTopBackgroundColor
|| __TEXT.__text _SKUISearchNoResultsImage
|| __TEXT.__text _SKUISetExternalResourceManager
|| __TEXT.__text _SKUISetShouldReverseLayoutDirectionWithContext
|| __TEXT.__text _SKUIShareSheetActivityTypeForUIActivityType
|| __TEXT.__text _SKUISpacePageComponentHeightForString
|| __TEXT.__text _SKUIStackedBarNavAnimationController
|| __TEXT.__text _SKUIStackedBarNavDidShow
|| __TEXT.__text _SKUIStorePageItemsWithStorePlatformDictionary
|| __TEXT.__text _SKUIStorePageTypeIsProductPage
|| __TEXT.__text _SKUITabBarControllerGetActiveNavigationController
|| __TEXT.__text _SKUITabBarControllerGetFloatingOverlayViewController
|| __TEXT.__text _SKUITabBarControllerGetMoreNavigationController
|| __TEXT.__text _SKUITabBarControllerSetFloatingOverlayViewControllerAnimated
|| __TEXT.__text _SKUITableViewGroupedBackgroundColor
|| __TEXT.__text _SKUITextLayoutSizeForCTFrame
|| __TEXT.__text _SKUITintedImage
|| __TEXT.__text _SKUIUserInterfaceIdiom
|| __TEXT.__text _SKUIVideoPreviewDismissOnEnterBackground
|| __TEXT.__text _SKUIVideoPreviewObservePlayer
|| __TEXT.__text _SKUIVideoPreviewPlayPlayableAsset
|| __TEXT.__text _SKUIVideoPreviewPlayPlayableVideoWithAsset
|| __TEXT.__text _SKUIViewControllerGetAncestorTabBarController
|| __TEXT.__text _SKUIViewControllerGetTopMostViewController
|| __TEXT.__text _SKUIViewControllerIsDescendent
|| __TEXT.__text _SKUIViewControllerIsVisible
|| __TEXT.__text _SKUIViewElementAccumulatePersonalizationLibraryItemsForChild
|| __TEXT.__text _SKUIViewElementAccumulatePersonalizationLibraryItemsForChildren
|| __TEXT.__text _SKUIViewElementAlignmentForStyle
|| __TEXT.__text _SKUIViewElementDateWithString
|| __TEXT.__text _SKUIViewElementFontWithStyle
|| __TEXT.__text _SKUIViewElementMarginForStyle
|| __TEXT.__text _SKUIViewElementNSTextAlignmentForIKElementAlignment
|| __TEXT.__text _SKUIViewElementPaddingForStyle
|| __TEXT.__text _SKUIViewElementPlainColorWithIKColor
|| __TEXT.__text _SKUIViewElementPlainColorWithStyle
|| __TEXT.__text _SKUIViewElementTextDeadlockFix
|| __TEXT.__text _SKUIViewSetBottomBorderColor
|| __TEXT.__text _SKUIViewSetTopBorderColor
|| __TEXT.__text _SKUIXEventSearchDictionary
|| __TEXT.__text _SKUIXEventSidepackDictionary
|| __TEXT.__text _storeSemanticContentAttribute
|| __TEXT.__text _storeShouldReverseLayoutDirection
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeNotification
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVKit: _OBJC_CLASS_$_AVPlayerViewController
__ AppStoreDaemon: _ASDSoftwareUpdatesStoreDidChangeNotification
__ AppStoreDaemon: _OBJC_CLASS_$_ASDJobManager
__ AppStoreDaemon: _OBJC_CLASS_$_ASDJobManagerOptions
__ AppStoreDaemon: _OBJC_CLASS_$_ASDPurchase
__ AppStoreDaemon: _OBJC_CLASS_$_ASDPurchaseRequest
__ AppStoreDaemon: _OBJC_CLASS_$_ASDPurchaseRequestOptions
__ AppStoreDaemon: _OBJC_CLASS_$_ASDPurchaseResponse
__ AppStoreDaemon: _OBJC_CLASS_$_ASDSoftwareUpdatesStore
__ AppSupport: _CPFSSizeStrings
__ AppSupport: _CPPhoneNumberCopyActiveCountryCode
__ AppSupport: _CPPhoneNumberCopyFormattedStringForTextMessage
__ AppSupport: _OBJC_CLASS_$_CPLRUDictionary
__ AuthKit: _AKAuthenticationAlternateDSIDKey
__ AuthKit: _AKAuthenticationPasswordKey
__ AuthKit: _AKAuthenticationUsernameKey
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationController
__ AuthKit: _OBJC_CLASS_$_AKUsernameFormatter
__ AuthKitUI: _OBJC_CLASS_$_AKAppleIDAuthenticationInAppContext
__ BookLibrary: _OBJC_CLASS_$_BLDownloadQueue
__ CFNetwork: _CFURLCacheRemoveAllCachedResponses
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLCache
__ CFNetwork: _OBJC_CLASS_$_NSURLProtocol
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLResponse
__ CFNetwork: _OBJC_METACLASS_$_NSURLProtocol
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFAttributedStringCreate
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFHash
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetDistributedCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopObserverCreateWithHandler
__ CoreFoundation: _CFRunLoopRemoveObserver
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopSourceSignal
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSURLContentModificationDateKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetBitmapInfo
__ CoreGraphics: _CGBitmapContextGetBytesPerRow
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGBitmapContextGetHeight
__ CoreGraphics: _CGBitmapContextGetWidth
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorGetAlpha
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorRetain
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithICCProfile
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddArc
__ CoreGraphics: _CGContextAddEllipseInRect
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextBeginTransparencyLayer
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextClipToRect
__ CoreGraphics: _CGContextClosePath
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextDrawRadialGradient
__ CoreGraphics: _CGContextEndTransparencyLayer
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextSetShadowWithColor
__ CoreGraphics: _CGContextSetTextMatrix
__ CoreGraphics: _CGContextSetTextPosition
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGGradientCreateWithColorComponents
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGImageCreateCopyWithColorSpace
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateWithEllipseInRect
__ CoreGraphics: _CGPathGetBoundingBox
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInfinite
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreRecognition: _CRCodeRedeemerInfoCodeKey
__ CoreRecognition: _CRCodeRedeemerInfoErrorKey
__ CoreRecognition: _OBJC_CLASS_$_CRCodeRedeemerController
__ CoreServices: _kUTTypeJPEG
__ CoreText: _CTFontCopySystemUIFontExcessiveLineHeightCharacterSet
__ CoreText: _CTFontCreateWithName
__ CoreText: _CTFontDescriptorCreateWithTextStyle
__ CoreText: _CTFontGetLanguageAwareOutsets
__ CoreText: _CTFrameGetLineOrigins
__ CoreText: _CTFrameGetLines
__ CoreText: _CTFrameGetPath
__ CoreText: _CTFrameGetVisibleStringRange
__ CoreText: _CTFramesetterCreateFrame
__ CoreText: _CTFramesetterCreateWithAttributedString
__ CoreText: _CTFramesetterSuggestFrameSizeWithConstraints
__ CoreText: _CTLineCreateTruncatedLine
__ CoreText: _CTLineCreateWithAttributedString
__ CoreText: _CTLineDraw
__ CoreText: _CTLineGetBoundsWithOptions
__ CoreText: _CTLineGetStringRange
__ CoreText: _CTLineGetTrailingWhitespaceWidth
__ CoreText: _kCTFontAttributeName
__ CoreText: _kCTFontDescriptorTextStyleLight
__ CoreText: _kCTFontDescriptorTextStyleRegular
__ CoreText: _kCTFontDescriptorTextStyleSemibold
__ CoreText: _kCTFontDescriptorTextStyleThin
__ CoreText: _kCTFontDescriptorTextStyleUltraLight
__ CoreText: _kCTForegroundColorFromContextAttributeName
__ CoreText: _kCTUIFontTextStyleBody
__ CoreText: _kCTUIFontTextStyleCallout
__ CoreText: _kCTUIFontTextStyleCaption1
__ CoreText: _kCTUIFontTextStyleCaption2
__ CoreText: _kCTUIFontTextStyleFootnote
__ CoreText: _kCTUIFontTextStyleHeadline
__ CoreText: _kCTUIFontTextStyleShortBody
__ CoreText: _kCTUIFontTextStyleShortCaption1
__ CoreText: _kCTUIFontTextStyleShortFootnote
__ CoreText: _kCTUIFontTextStyleShortHeadline
__ CoreText: _kCTUIFontTextStyleShortSubhead
__ CoreText: _kCTUIFontTextStyleSubhead
__ Foundation: _NSAllMapTableKeys
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSMapGet
__ Foundation: _NSMapInsert
__ Foundation: _NSMapInsertKnownAbsent
__ Foundation: _NSMapMember
__ Foundation: _NSMapRemove
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringEncodingErrorKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_METACLASS_$_NSItemProvider
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: __NSDictionaryOfVariableBindings
__ ITMLKit: _IKDOMFeatureMenuBarDocument
__ ITMLKit: _IKElementKeyITMLID
__ ITMLKit: _IKElementKeyKeyDelivery
__ ITMLKit: _IKEntityProviderDidInvalidateNotification
__ ITMLKit: _IKEntityProviderInvalidationContextUserInfoKey
__ ITMLKit: _IKViewElementStyleBackgroundColor
__ ITMLKit: _IKViewElementStyleBorderColor
__ ITMLKit: _IKViewElementStyleBorderMargin
__ ITMLKit: _IKViewElementStyleBorderWidth
__ ITMLKit: _IKViewElementStyleItemHeight
__ ITMLKit: _IKViewElementStyleMargin
__ ITMLKit: _IKViewElementStylePadding
__ ITMLKit: _IKViewElementStyleTextMaxLines
__ ITMLKit: _ITMLKitErrorDomain
__ ITMLKit: _OBJC_CLASS_$_IKAppContext
__ ITMLKit: _OBJC_CLASS_$_IKAppDataStorage
__ ITMLKit: _OBJC_CLASS_$_IKAppDocument
__ ITMLKit: _OBJC_CLASS_$_IKAppMenuBarDocument
__ ITMLKit: _OBJC_CLASS_$_IKColor
__ ITMLKit: _OBJC_CLASS_$_IKDOMDocument
__ ITMLKit: _OBJC_CLASS_$_IKDOMFeatureFactory
__ ITMLKit: _OBJC_CLASS_$_IKJSApplication
__ ITMLKit: _OBJC_CLASS_$_IKJSEntityValueProvider
__ ITMLKit: _OBJC_CLASS_$_IKJSITunesStore
__ ITMLKit: _OBJC_CLASS_$_IKJSNavigationDocument
__ ITMLKit: _OBJC_CLASS_$_IKJSObject
__ ITMLKit: _OBJC_CLASS_$_IKTextParser
__ ITMLKit: _OBJC_CLASS_$_IKViewElement
__ ITMLKit: _OBJC_CLASS_$_IKViewElementFactory
__ ITMLKit: _OBJC_CLASS_$_IKViewElementStyle
__ ITMLKit: _OBJC_METACLASS_$_IKAppMenuBarDocument
__ ITMLKit: _OBJC_METACLASS_$_IKJSApplication
__ ITMLKit: _OBJC_METACLASS_$_IKJSITunesStore
__ ITMLKit: _OBJC_METACLASS_$_IKJSObject
__ ITMLKit: _OBJC_METACLASS_$_IKTextParser
__ ITMLKit: _OBJC_METACLASS_$_IKViewElement
__ JavaScriptCore: _OBJC_CLASS_$_JSManagedValue
__ JavaScriptCore: _OBJC_CLASS_$_JSValue
__ LinkPresentation: _OBJC_CLASS_$_LPImage
__ LinkPresentation: _OBJC_CLASS_$_LPLinkMetadata
__ LinkPresentation: _OBJC_CLASS_$_LPVideo
__ LinkPresentation: _OBJC_CLASS_$_LPiTunesMediaSoftwareMetadata
__ ManagedConfiguration: _MCEffectiveSettingsChangedNotification
__ ManagedConfiguration: _MCFeatureAccountModificationAllowed
__ ManagedConfiguration: _MCFeatureMaximumAppsRating
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DMakeRotation
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DRotate
__ QuartzCore: _CATransform3DScale
__ QuartzCore: _CATransform3DTranslate
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CARenderer
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCAFillModeBackwards
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAFilterDestOut
__ QuartzCore: _kCAFilterMultiplyColor
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCAFilterSourceOver
__ QuartzCore: _kCAFilterXor
__ QuartzCore: _kCAMediaTimingFunctionDefault
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ StoreKit: _OBJC_CLASS_$_SKComposeReviewViewController
__ StoreKit: _OBJC_CLASS_$_SKStarRatingAlertController
__ StoreKit: _OBJC_CLASS_$_SKStarRatingControl
__ StoreKit: _OBJC_CLASS_$_SKStorePageRequest
__ StoreKit: _OBJC_CLASS_$_SKStoreProductViewController
__ StoreKit: _OBJC_METACLASS_$_SKStoreProductViewController
__ StoreKit: _SKErrorDomain
__ StoreKit: _SKGetRatingStarsImage
__ StoreKit: _SKStoreProductParameterITunesItemIdentifier
__ StoreServices: _OBJC_CLASS_$_SSAccountStore
__ StoreServices: _OBJC_CLASS_$_SSAppPurchaseHistoryDatabase
__ StoreServices: _OBJC_CLASS_$_SSAppPurchaseHistoryDatabaseSchema
__ StoreServices: _OBJC_CLASS_$_SSAppPurchaseHistoryEntry
__ StoreServices: _OBJC_CLASS_$_SSApplicationUtil
__ StoreServices: _OBJC_CLASS_$_SSAuthenticateRequest
__ StoreServices: _OBJC_CLASS_$_SSAuthenticationContext
__ StoreServices: _OBJC_CLASS_$_SSDevice
__ StoreServices: _OBJC_CLASS_$_SSDictionaryResponse
__ StoreServices: _OBJC_CLASS_$_SSDownload
__ StoreServices: _OBJC_CLASS_$_SSDownloadManager
__ StoreServices: _OBJC_CLASS_$_SSDownloadManagerOptions
__ StoreServices: _OBJC_CLASS_$_SSDownloadManifestRequest
__ StoreServices: _OBJC_CLASS_$_SSDownloadMetadata
__ StoreServices: _OBJC_CLASS_$_SSFamilyCircleRequest
__ StoreServices: _OBJC_CLASS_$_SSLogConfig
__ StoreServices: _OBJC_CLASS_$_SSLookupItem
__ StoreServices: _OBJC_CLASS_$_SSLookupItemArtwork
__ StoreServices: _OBJC_CLASS_$_SSLookupRequest
__ StoreServices: _OBJC_CLASS_$_SSMetricsAccountEvent
__ StoreServices: _OBJC_CLASS_$_SSMetricsBaseEvent
__ StoreServices: _OBJC_CLASS_$_SSMetricsClickEvent
__ StoreServices: _OBJC_CLASS_$_SSMetricsConfiguration
__ StoreServices: _OBJC_CLASS_$_SSMetricsController
__ StoreServices: _OBJC_CLASS_$_SSMetricsEventController
__ StoreServices: _OBJC_CLASS_$_SSMetricsEventLocation
__ StoreServices: _OBJC_CLASS_$_SSMetricsEventTable
__ StoreServices: _OBJC_CLASS_$_SSMetricsImpressionsEvent
__ StoreServices: _OBJC_CLASS_$_SSMetricsMediaEvent
__ StoreServices: _OBJC_CLASS_$_SSMetricsPageEvent
__ StoreServices: _OBJC_CLASS_$_SSMetricsPurchaseEvent
__ StoreServices: _OBJC_CLASS_$_SSMetricsTimingDefaults
__ StoreServices: _OBJC_CLASS_$_SSMutableAuthenticationContext
__ StoreServices: _OBJC_CLASS_$_SSMutableURLRequestProperties
__ StoreServices: _OBJC_CLASS_$_SSPurchase
__ StoreServices: _OBJC_CLASS_$_SSPurchaseRequest
__ StoreServices: _OBJC_CLASS_$_SSPurchaseResponse
__ StoreServices: _OBJC_CLASS_$_SSRedeemCodesRequest
__ StoreServices: _OBJC_CLASS_$_SSRestrictions
__ StoreServices: _OBJC_CLASS_$_SSSQLiteComparisonPredicate
__ StoreServices: _OBJC_CLASS_$_SSSQLiteContainsPredicate
__ StoreServices: _OBJC_CLASS_$_SSSQLiteQuery
__ StoreServices: _OBJC_CLASS_$_SSSQLiteQueryDescriptor
__ StoreServices: _OBJC_CLASS_$_SSScriptURLHandler
__ StoreServices: _OBJC_CLASS_$_SSSoftwareLibrary
__ StoreServices: _OBJC_CLASS_$_SSTonePurchase
__ StoreServices: _OBJC_CLASS_$_SSURLBag
__ StoreServices: _OBJC_CLASS_$_SSURLBagContext
__ StoreServices: _OBJC_CLASS_$_SSURLConnectionRequest
__ StoreServices: _OBJC_CLASS_$_SSURLRequestProperties
__ StoreServices: _OBJC_CLASS_$_SSURLSessionManager
__ StoreServices: _OBJC_CLASS_$_SSUpdatableAssetController
__ StoreServices: _OBJC_CLASS_$_SSUpdatableAssetManifest
__ StoreServices: _OBJC_CLASS_$_SSVComplexOperation
__ StoreServices: _OBJC_CLASS_$_SSVFairPlaySAPSession
__ StoreServices: _OBJC_CLASS_$_SSVGratisRequestBody
__ StoreServices: _OBJC_CLASS_$_SSVLoadURLOperation
__ StoreServices: _OBJC_CLASS_$_SSVMediaSocialAdminPermissionsCoordinator
__ StoreServices: _OBJC_CLASS_$_SSVPlatformContext
__ StoreServices: _OBJC_CLASS_$_SSVPlatformRequestOperation
__ StoreServices: _OBJC_CLASS_$_SSVRedeemCodeMetadata
__ StoreServices: _OBJC_CLASS_$_SSVSAPSignaturePolicy
__ StoreServices: _OBJC_CLASS_$_SSVSecureKeyDeliveryRequestOperation
__ StoreServices: _OBJC_CLASS_$_SSVSubscriptionStatusCoordinator
__ StoreServices: _OBJC_CLASS_$_SSVURLBagInterpreter
__ StoreServices: _OBJC_CLASS_$_SSVURLDataConsumer
__ StoreServices: _OBJC_CLASS_$_SSVURLProtocolConsumer
__ StoreServices: _OBJC_CLASS_$_SSWeakReference
__ StoreServices: _OBJC_CLASS_$_SSWishlist
__ StoreServices: _OBJC_CLASS_$_SSWishlistItemEntity
__ StoreServices: _OBJC_METACLASS_$_SSMetricsBaseEvent
__ StoreServices: _OBJC_METACLASS_$_SSURLBag
__ StoreServices: _OBJC_METACLASS_$_SSURLConnectionRequest
__ StoreServices: _OBJC_METACLASS_$_SSVComplexOperation
__ StoreServices: _OBJC_METACLASS_$_SSVURLDataConsumer
__ StoreServices: _OBJC_METACLASS_$_SSVURLProtocolConsumer
__ StoreServices: _SSAccountStoreChangedNotification
__ StoreServices: _SSAppPurchaseHistoryDatabaseLocalRevisionDidChange
__ StoreServices: _SSAppPurchaseHistoryEntryAccountUniqueIdentifier
__ StoreServices: _SSAppPurchaseHistoryEntryBundleID
__ StoreServices: _SSAppPurchaseHistoryEntryStoreID
__ StoreServices: _SSAppPurchaseHistoryEntryVPPIsLicensed
__ StoreServices: _SSDebugFileLevel
__ StoreServices: _SSDebugLevel
__ StoreServices: _SSDebugLog
__ StoreServices: _SSDebugShouldLogNetworkTimingMetrics
__ StoreServices: _SSDeviceStoreFrontChangedNotification
__ StoreServices: _SSDialogGetDaemonDialogState
__ StoreServices: _SSDialogKindAuthentication
__ StoreServices: _SSDownloadExternalPropertyBytesDownloaded
__ StoreServices: _SSDownloadExternalPropertyBytesTotal
__ StoreServices: _SSDownloadExternalPropertyEstimatedTimeRemaining
__ StoreServices: _SSDownloadExternalPropertyPercentComplete
__ StoreServices: _SSDownloadExternalPropertyStatusDescription
__ StoreServices: _SSDownloadKindAudiobook
__ StoreServices: _SSDownloadKindEBook
__ StoreServices: _SSDownloadKindIsEBookKind
__ StoreServices: _SSDownloadKindIsSoftwareKind
__ StoreServices: _SSDownloadKindMovie
__ StoreServices: _SSDownloadKindMusic
__ StoreServices: _SSDownloadKindMusicVideo
__ StoreServices: _SSDownloadKindOther
__ StoreServices: _SSDownloadKindPodcast
__ StoreServices: _SSDownloadKindSoftwareApplication
__ StoreServices: _SSDownloadKindTelevisionEpisode
__ StoreServices: _SSDownloadKindTone
__ StoreServices: _SSDownloadPhaseCanceled
__ StoreServices: _SSDownloadPhaseDownloading
__ StoreServices: _SSDownloadPhaseFailed
__ StoreServices: _SSDownloadPhaseFinished
__ StoreServices: _SSDownloadPhaseInstalling
__ StoreServices: _SSDownloadPhasePaused
__ StoreServices: _SSDownloadPhaseWaiting
__ StoreServices: _SSDownloadPropertyArtistName
__ StoreServices: _SSDownloadPropertyArtworkIsPrerendered
__ StoreServices: _SSDownloadPropertyBundleIdentifier
__ StoreServices: _SSDownloadPropertyCanCancel
__ StoreServices: _SSDownloadPropertyCanPause
__ StoreServices: _SSDownloadPropertyDownloadPhase
__ StoreServices: _SSDownloadPropertyEnableExtensions
__ StoreServices: _SSDownloadPropertyIsContentRestricted
__ StoreServices: _SSDownloadPropertyIsHighDefinition
__ StoreServices: _SSDownloadPropertyIsPurchase
__ StoreServices: _SSDownloadPropertyIsRedownload
__ StoreServices: _SSDownloadPropertyIsRental
__ StoreServices: _SSDownloadPropertyIsSample
__ StoreServices: _SSDownloadPropertyKind
__ StoreServices: _SSDownloadPropertyReferrerAppName
__ StoreServices: _SSDownloadPropertyReferrerURL
__ StoreServices: _SSDownloadPropertyShouldCancelIfDuplicate
__ StoreServices: _SSDownloadPropertySoftwareType
__ StoreServices: _SSDownloadPropertyStoreCancelURL
__ StoreServices: _SSDownloadPropertyStoreItemIdentifier
__ StoreServices: _SSDownloadPropertyStorePreorderIdentifier
__ StoreServices: _SSDownloadPropertyStoreTransactionIdentifier
__ StoreServices: _SSDownloadPropertyThumbnailImageURL
__ StoreServices: _SSDownloadPropertyTitle
__ StoreServices: _SSDownloadSoftwareTypeNewsstand
__ StoreServices: _SSError
__ StoreServices: _SSErrorDomain
__ StoreServices: _SSErrorHTTPStatusCodeKey
__ StoreServices: _SSFileIsLocalWritable
__ StoreServices: _SSFileLog
__ StoreServices: _SSGetStringForNetworkType
__ StoreServices: _SSHTTPHeaderUserAgent
__ StoreServices: _SSHTTPHeaderXAppleClientIdentifier
__ StoreServices: _SSItemToneStyleRingtone
__ StoreServices: _SSItemToneStyleTextTone
__ StoreServices: _SSLookupItemOfferSubscriptionTypePodcast
__ StoreServices: _SSLookupItemOfferTextTypeShort
__ StoreServices: _SSLookupKeyProfileLockup
__ StoreServices: _SSLookupKeyProfileProduct
__ StoreServices: _SSLookupKeyProfileURL
__ StoreServices: _SSLookupParameterItemIdentifiers
__ StoreServices: _SSLookupPropertyAdvisories
__ StoreServices: _SSLookupPropertyArtistName
__ StoreServices: _SSLookupPropertyArtistURL
__ StoreServices: _SSLookupPropertyArtwork
__ StoreServices: _SSLookupPropertyBundleIdentifier
__ StoreServices: _SSLookupPropertyContentRating
__ StoreServices: _SSLookupPropertyContentRatingName
__ StoreServices: _SSLookupPropertyCopyright
__ StoreServices: _SSLookupPropertyDescription
__ StoreServices: _SSLookupPropertyDescriptionStandard
__ StoreServices: _SSLookupPropertyDisplayName
__ StoreServices: _SSLookupPropertyGenreNames
__ StoreServices: _SSLookupPropertyHasInAppPurchases
__ StoreServices: _SSLookupPropertyIsGameCenter
__ StoreServices: _SSLookupPropertyItemIdentifier
__ StoreServices: _SSLookupPropertyKind
__ StoreServices: _SSLookupPropertyLicenseAgreementURL
__ StoreServices: _SSLookupPropertyNewsstandArtwork
__ StoreServices: _SSLookupPropertyOffers
__ StoreServices: _SSLookupPropertyPrivacyPolicyURL
__ StoreServices: _SSLookupPropertyProductURL
__ StoreServices: _SSLookupPropertyReleaseDate
__ StoreServices: _SSLookupPropertyRequiredCapabilities
__ StoreServices: _SSLookupPropertyRequirementsDescription
__ StoreServices: _SSLookupPropertyResults
__ StoreServices: _SSLookupPropertyScreenshotTypeIPad
__ StoreServices: _SSLookupPropertyScreenshotTypeIPhone
__ StoreServices: _SSLookupPropertyScreenshotTypeIPhone5
__ StoreServices: _SSLookupPropertyScreenshots
__ StoreServices: _SSLookupPropertyShortProductURL
__ StoreServices: _SSLookupPropertySoftwareInfo
__ StoreServices: _SSLookupPropertyStandardNotes
__ StoreServices: _SSLookupPropertyStoreNotes
__ StoreServices: _SSLookupPropertySupportURL
__ StoreServices: _SSLookupPropertyUserRatingCount
__ StoreServices: _SSLookupPropertyUserRatingCountCurrentVersion
__ StoreServices: _SSLookupPropertyUserRatingInfo
__ StoreServices: _SSLookupPropertyUserRatingValue
__ StoreServices: _SSLookupPropertyUserRatingValueCurrentVersion
__ StoreServices: _SSMetricsActionTypeBack
__ StoreServices: _SSMetricsActionTypeBuy
__ StoreServices: _SSMetricsActionTypeCancel
__ StoreServices: _SSMetricsActionTypeDownload
__ StoreServices: _SSMetricsActionTypeLaunchApp
__ StoreServices: _SSMetricsActionTypeNavigate
__ StoreServices: _SSMetricsActionTypeSelect
__ StoreServices: _SSMetricsEventTypeClick
__ StoreServices: _SSMetricsEventTypeImpressions
__ StoreServices: _SSMetricsEventTypeMedia
__ StoreServices: _SSMetricsFieldNameAdamID
__ StoreServices: _SSMetricsFieldNameFeaturedContentKind
__ StoreServices: _SSMetricsFieldNameLongName
__ StoreServices: _SSMetricsFieldNameShortName
__ StoreServices: _SSMetricsFieldNameType
__ StoreServices: _SSMetricsMediaEventTypeEnd
__ StoreServices: _SSMetricsMediaEventTypePaused
__ StoreServices: _SSMetricsMediaEventTypePlay
__ StoreServices: _SSMetricsNavigationTypeBack
__ StoreServices: _SSMetricsNavigationTypeForward
__ StoreServices: _SSMetricsTargetTypeBrick
__ StoreServices: _SSMetricsTargetTypeButton
__ StoreServices: _SSMetricsTargetTypeFlowcaseItem
__ StoreServices: _SSMetricsTargetTypeLockup
__ StoreServices: _SSMetricsTargetTypeTab
__ StoreServices: _SSMetricsTargetTypeTabItem
__ StoreServices: _SSMetricsURLBagKey
__ StoreServices: _SSResponseActionTypeShowDialog
__ StoreServices: _SSSQLiteOrderDescending
__ StoreServices: _SSScriptSafariViewControllerDataUpdateNotification
__ StoreServices: _SSScriptURLSafariDataUpdate
__ StoreServices: _SSSoftwareLibraryItemBundleIdentifier
__ StoreServices: _SSSoftwareLibraryItemBundleVersion
__ StoreServices: _SSSoftwareLibraryItemPropertyFamilyAccountIdentifier
__ StoreServices: _SSSoftwareLibraryItemPropertyITunesAccountIdentifier
__ StoreServices: _SSSoftwareLibraryItemPropertyITunesItemIdentifier
__ StoreServices: _SSSoftwareLibraryItemPropertyITunesVersionIdentifier
__ StoreServices: _SSURLBagKeyIForgot
__ StoreServices: _SSUpdatableAssetControllerAssetsDidUpdateNotification
__ StoreServices: _SSVAddMediaSocialHeadersToURLRequest
__ StoreServices: _SSVAssetResourceLoadingRequestContainsSecureKeyDeliveryRequest
__ StoreServices: _SSVDefaultUserAgent
__ StoreServices: _SSVGetMetricsPageDescriptionWithPlatformDictionary
__ StoreServices: _SSVMediaSocialAdminPermissionsOptionIgnoreCache
__ StoreServices: _SSVNetworkingDidStartNotification
__ StoreServices: _SSVNetworkingDidStopNotification
__ StoreServices: _SSVProtocolRedirectURLForResponse
__ StoreServices: _SSVRedeemCodeMetadataQueryParameterRedeemCode
__ StoreServices: _SSVRedeemCodeMetadataURLBagKey
__ StoreServices: _SSVStoreFrontIdentifierForAccount
__ StoreServices: _SSVURLBagKeyMusicCommon
__ StoreServices: _SSWishlistErrorDomain
__ StoreServices: _SSWishlistItemPropertyItemData
__ StoreServices: _SSWishlistItemPropertyItemIdentifier
__ StoreServices: _SSWishlistItemPropertyItemKind
__ StoreServices: _SSWishlistItemPropertySortOrder
__ StoreServices: _SSWishlistItemPropertyState
__ StoreServices: _kSSNotificationAccountsChanged
__ StoreServices: _kSSUserDefaultsIdentifier
__ StoreServices: _kSSVPlatformMaximumBatchSize
__ UIKit: _NSBackgroundColorAttributeName
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSKernAttributeName
__ UIKit: _NSLinkAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSShadowAttributeName
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSTextAlignmentFromCTTextAlignment
__ UIKit: _OBJC_CLASS_$_NSLayoutManager
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSStringDrawingContext
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_NSTextContainer
__ UIKit: _OBJC_CLASS_$_NSTextStorage
__ UIKit: _OBJC_CLASS_$_UIActivity
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIActivityItemProvider
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIAlertView
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationRotationFollowingController
__ UIKit: _OBJC_CLASS_$_UIApplicationRotationFollowingWindow
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UICollectionReusableView
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayoutInvalidationContext
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayoutAttributes
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayoutInvalidationContext
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDatePicker
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDynamicAnimator
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIGradient
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImagePickerController
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIInterfaceAction
__ UIKit: _OBJC_CLASS_$_UIInterfaceActionGroup
__ UIKit: _OBJC_CLASS_$_UIInterfaceActionGroupView
__ UIKit: _OBJC_CLASS_$_UIKeyboard
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILocalizedIndexedCollation
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMoreListController
__ UIKit: _OBJC_CLASS_$_UIMoreNavigationController
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationButton
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UINavigationItem
__ UIKit: _OBJC_CLASS_$_UIPageControl
__ UIKit: _OBJC_CLASS_$_UIPageViewController
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPasteboard
__ UIKit: _OBJC_CLASS_$_UIPickerView
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPopoverBackgroundView
__ UIKit: _OBJC_CLASS_$_UIPopoverController
__ UIKit: _OBJC_CLASS_$_UIPresentationController
__ UIKit: _OBJC_CLASS_$_UIPreviewInteraction
__ UIKit: _OBJC_CLASS_$_UIRefreshControl
__ UIKit: _OBJC_CLASS_$_UIResponder
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISearchBar
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UISegmentedControl
__ UIKit: _OBJC_CLASS_$_UISlider
__ UIKit: _OBJC_CLASS_$_UISplitViewController
__ UIKit: _OBJC_CLASS_$_UISpringTimingParameters
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITabBarController
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIToolbar
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWebView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UIBackdropViewSettings
__ UIKit: _OBJC_CLASS_$__UICollectionViewCompositionLayout
__ UIKit: _OBJC_CLASS_$__UIContentUnavailableView
__ UIKit: _OBJC_CLASS_$__UINavigationControllerPalette
__ UIKit: _OBJC_METACLASS_$_NSTextAttachment
__ UIKit: _OBJC_METACLASS_$_UIActivity
__ UIKit: _OBJC_METACLASS_$_UIActivityItemProvider
__ UIKit: _OBJC_METACLASS_$_UIActivityViewController
__ UIKit: _OBJC_METACLASS_$_UIAlertAction
__ UIKit: _OBJC_METACLASS_$_UIApplicationRotationFollowingWindow
__ UIKit: _OBJC_METACLASS_$_UIBlurEffect
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICollectionReusableView
__ UIKit: _OBJC_METACLASS_$_UICollectionView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_METACLASS_$_UICollectionViewFlowLayoutInvalidationContext
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayout
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayoutAttributes
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayoutInvalidationContext
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIImage
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UIInterfaceAction
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UIMoreListController
__ UIKit: _OBJC_METACLASS_$_UIMoreNavigationController
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIPresentationController
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UISearchBar
__ UIKit: _OBJC_METACLASS_$_UISearchController
__ UIKit: _OBJC_METACLASS_$_UISegmentedControl
__ UIKit: _OBJC_METACLASS_$_UISplitViewController
__ UIKit: _OBJC_METACLASS_$_UITabBarController
__ UIKit: _OBJC_METACLASS_$_UITableView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$__UICollectionViewCompositionLayout
__ UIKit: _UIAccessibilityIsBoldTextEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIActivityTypeAddToReadingList
__ UIKit: _UIActivityTypeAirDrop
__ UIKit: _UIActivityTypeAssignToContact
__ UIKit: _UIActivityTypeCopyToPasteboard
__ UIKit: _UIActivityTypeMail
__ UIKit: _UIActivityTypeMessage
__ UIKit: _UIActivityTypePostToFacebook
__ UIKit: _UIActivityTypePostToFlickr
__ UIKit: _UIActivityTypePostToTencentWeibo
__ UIKit: _UIActivityTypePostToVimeo
__ UIKit: _UIActivityTypePostToWeibo
__ UIKit: _UIActivityTypePrint
__ UIKit: _UIActivityTypeSaveToCameraRoll
__ UIKit: _UIAnimationDragCoefficient
__ UIKit: _UIApp
__ UIKit: _UIApplicationAutomaticSnapshotDefaultPNG
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationDidReceiveMemoryWarningNotification
__ UIKit: _UIApplicationLaunchOptionsAnnotationKey
__ UIKit: _UIApplicationLaunchOptionsSourceApplicationKey
__ UIKit: _UIApplicationLaunchOptionsURLKey
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIBackgroundTaskInvalid
__ UIKit: _UICeilToViewScale
__ UIKit: _UICollectionElementKindSectionFooter
__ UIKit: _UICollectionElementKindSectionHeader
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UIDistanceBetweenPointAndRect
__ UIKit: _UIDistanceBetweenPoints
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFloorToViewScale
__ UIKit: _UIFlowLayoutCommonRowHorizontalAlignmentKey
__ UIKit: _UIFlowLayoutRowVerticalAlignmentKey
__ UIKit: _UIFontDescriptorFamilyAttribute
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontDescriptorNameAttribute
__ UIKit: _UIFontDescriptorSizeAttribute
__ UIKit: _UIFontDescriptorTextStyleAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleSubhead
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleSubheadline2
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightLight
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightThin
__ UIKit: _UIFontWeightUltraLight
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIITunesStoreResolvedURLForHTTPURL
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIImagePickerControllerAllowsEditing
__ UIKit: _UIImagePickerControllerCropRect
__ UIKit: _UIImagePickerControllerOriginalImage
__ UIKit: _UIKeyboardAnimationCurveUserInfoKey
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardAutomaticIsOnScreen
__ UIKit: _UIKeyboardDidHideNotification
__ UIKit: _UIKeyboardDidShowNotification
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardOrderInAutomatic
__ UIKit: _UIKeyboardOrderOutAutomatic
__ UIKit: _UIKeyboardWillChangeFrameNotification
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UIOffsetZero
__ UIKit: _UIRectCenteredAboutPointScale
__ UIKit: _UIRectCenteredIntegralRectScale
__ UIKit: _UIRectCenteredXInRectScale
__ UIKit: _UIRectCenteredYInRectScale
__ UIKit: _UIRectFill
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: _UIRectGetCenter
__ UIKit: _UIRoundToViewScale
__ UIKit: _UIScrollViewDecelerationRateFast
__ UIKit: _UISplitViewControllerAutomaticDimension
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UITextFieldTextDidBeginEditingNotification
__ UIKit: _UITextFieldTextDidChangeNotification
__ UIKit: _UITextFieldTextDidEndEditingNotification
__ UIKit: _UITextViewTextDidChangeNotification
__ UIKit: _UITextViewTextDidEndEditingNotification
__ UIKit: _UITrackingRunLoopMode
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextFromViewKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UITransitionContextToViewKey
__ UIKit: _UIWindowLevelAlert
__ UIKit: _UIWindowLevelStatusBar
__ UIKit: __UIImagePickerController1XCroppedImage
__ UIKit: __UIImagePickerControllerAllowAnySuperview
__ UIKit: __UIImagePickerControllerForceNativeScreenScale
__ UIKit: __UIImagePickerControllerUseTelephonyUI
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ iTunesStore: _ISDictionaryValueForCaseInsensitiveString
__ iTunesStore: _ISErrorIsEqual
__ iTunesStore: _ISNetworkTypeChangedNotification
__ iTunesStore: _OBJC_CLASS_$_ISBiometricStore
__ iTunesStore: _OBJC_CLASS_$_ISClient
__ iTunesStore: _OBJC_CLASS_$_ISDevice
__ iTunesStore: _OBJC_CLASS_$_ISDialog
__ iTunesStore: _OBJC_CLASS_$_ISDialogOperation
__ iTunesStore: _OBJC_CLASS_$_ISLoadURLBagOperation
__ iTunesStore: _OBJC_CLASS_$_ISNetworkObserver
__ iTunesStore: _OBJC_CLASS_$_ISOpenURLOperation
__ iTunesStore: _OBJC_CLASS_$_ISOpenURLRequest
__ iTunesStore: _OBJC_CLASS_$_ISOperation
__ iTunesStore: _OBJC_CLASS_$_ISOperationQueue
__ iTunesStore: _OBJC_CLASS_$_ISProcessPropertyListOperation
__ iTunesStore: _OBJC_CLASS_$_ISPropertyListProvider
__ iTunesStore: _OBJC_CLASS_$_ISProtocolDataProvider
__ iTunesStore: _OBJC_CLASS_$_ISStoreURLOperation
__ iTunesStore: _OBJC_CLASS_$_ISURLBagCache
__ iTunesStore: _OBJC_CLASS_$_ISURLOperation
__ iTunesStore: _OBJC_CLASS_$_RemovableSoftwareLookupTable
__ iTunesStore: _OBJC_METACLASS_$_ISOperation
__ iTunesStore: _OBJC_METACLASS_$_ISPropertyListProvider
__ iTunesStore: _kISDialogKey
__ iTunesStore: _kISFailureTypeKey
__ iTunesStoreUI: _OBJC_CLASS_$_SUAccountViewController
__ iTunesStoreUI: _OBJC_CLASS_$_SUAudioPlayerSessionManager
__ iTunesStoreUI: _OBJC_CLASS_$_SUBarButtonItem
__ iTunesStoreUI: _OBJC_CLASS_$_SUClientInterface
__ iTunesStoreUI: _OBJC_CLASS_$_SUDialogManager
__ iTunesStoreUI: _OBJC_CLASS_$_SUGradient
__ iTunesStoreUI: _OBJC_CLASS_$_SULoadingView
__ iTunesStoreUI: _OBJC_CLASS_$_SUNavigationBar
__ iTunesStoreUI: _OBJC_CLASS_$_SUNavigationContainerViewController
__ iTunesStoreUI: _OBJC_CLASS_$_SUNavigationController
__ iTunesStoreUI: _OBJC_CLASS_$_SUNavigationItem
__ iTunesStoreUI: _OBJC_CLASS_$_SUPlaceholderViewController
__ iTunesStoreUI: _OBJC_CLASS_$_SUPreviewOverlayViewController
__ iTunesStoreUI: _OBJC_CLASS_$_SUPurchaseManager
__ iTunesStoreUI: _OBJC_CLASS_$_SUScriptInterface
__ iTunesStoreUI: _OBJC_CLASS_$_SUScriptObject
__ iTunesStoreUI: _OBJC_CLASS_$_SUSearchFieldConfiguration
__ iTunesStoreUI: _OBJC_CLASS_$_SUSection
__ iTunesStoreUI: _OBJC_CLASS_$_SUStorePageViewController
__ iTunesStoreUI: _OBJC_CLASS_$_SUStructuredPage
__ iTunesStoreUI: _OBJC_CLASS_$_SUTextContentView
__ iTunesStoreUI: _OBJC_CLASS_$_SUViewController
__ iTunesStoreUI: _OBJC_CLASS_$_SUViewControllerFactory
__ iTunesStoreUI: _OBJC_METACLASS_$_SUNavigationBar
__ iTunesStoreUI: _OBJC_METACLASS_$_SUNavigationController
__ iTunesStoreUI: _OBJC_METACLASS_$_SUScriptInterface
__ iTunesStoreUI: _OBJC_METACLASS_$_SUScriptObject
__ iTunesStoreUI: _OBJC_METACLASS_$_SUStorePageViewController
__ iTunesStoreUI: _OBJC_METACLASS_$_SUViewController
__ iTunesStoreUI: _OBJC_METACLASS_$_SUViewControllerFactory
__ iTunesStoreUI: _SUAudioPlayerSessionsChangedNotification
__ iTunesStoreUI: _SUAudioPlayerStatusChangeNotification
__ iTunesStoreUI: _SUBarButtonItemApplyStyling
__ iTunesStoreUI: _SUCreateHTMLForPlainText
__ iTunesStoreUI: _SUCreatePreviewHistoryOperation
__ iTunesStoreUI: _SUNavigationBarApplyStyling
__ iTunesStoreUI: _SUPreviewOverlayVisibilityDidChangeNotification
__ iTunesStoreUI: _SUPurchaseFailedNotification
__ iTunesStoreUI: _SUPurchaseFinishedNotification
__ iTunesStoreUI: _SUPurchaseNotificationKeyError
__ iTunesStoreUI: _SUPurchaseNotificationKeyPurchaseResponse
__ iTunesStoreUI: _SUPurchaseRequestDidSucceedNotification
__ iTunesStoreUI: _SUWebScriptNameForSelector2
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _drand48
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _lround
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _srand48
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_conformsToProtocol
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _method_getImplementation
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SKProductPageViewController : SUViewController /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore <SKUIBannerViewDelegate, SKUIIPadProductPageDelegate, SKUIIPhoneProductPageDelegate, SUClientInterfaceDelegatePrivate, SUPurchaseManagerDelegate, SKUIItemStateCenterObserver>
 @property  <SKProductPageViewControllerDelegate> *delegate
 @property  long long productPageStyle
 @property  BOOL preview
 @property  BOOL showsStoreButton
 @property  NSString *cancelButtonTitle
 @property  NSString *rightBarButtonTitle
 @property  BOOL showsRightBarButton
 @property  NSString *promptString
 @property  BOOL askToBuy
 @property  NSString *additionalPurchaseParameters
 @property  NSString *affiliateIdentifier
 @property  NSDictionary *scriptContextDictionary
 @property  long long URLBagType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKProductPageViewController _defaultClientInterface]
  +[SKProductPageViewController _validateURL:withURLBag:completionBlock:]
  +[SKProductPageViewController _defaultClientIdentifier]
  +[SKProductPageViewController getCanLoadWithURL:completionBlock:]

  // instance methods
  -[SKProductPageViewController init]
  -[SKProductPageViewController dealloc]
  -[SKProductPageViewController delegate]
  -[SKProductPageViewController setDelegate:]
  -[SKProductPageViewController .cxx_destruct]
  -[SKProductPageViewController _failWithError:]
  -[SKProductPageViewController loadView]
  -[SKProductPageViewController supportedInterfaceOrientations]
  -[SKProductPageViewController viewDidAppear:]
  -[SKProductPageViewController _setShowsCancelButton:]
  -[SKProductPageViewController shouldAutorotateToInterfaceOrientation:]
  -[SKProductPageViewController setPreview:]
  -[SKProductPageViewController _applicationWillEnterForeground]
  -[SKProductPageViewController rightBarButtonTitle]
  -[SKProductPageViewController setRightBarButtonTitle:]
  -[SKProductPageViewController _reloadViews]
  -[SKProductPageViewController loadProductWithParameters:]
  -[SKProductPageViewController loadProductWithRequest:]
  -[SKProductPageViewController setAffiliateIdentifier:]
  -[SKProductPageViewController setProductPageStyle:]
  -[SKProductPageViewController setScriptContextDictionary:]
  -[SKProductPageViewController setShowsStoreButton:]
  -[SKProductPageViewController setAskToBuy:]
  -[SKProductPageViewController setCancelButtonTitle:]
  -[SKProductPageViewController setShowsRightBarButton:]
  -[SKProductPageViewController setPromptString:]
  -[SKProductPageViewController productPageStyle]
  -[SKProductPageViewController affiliateIdentifier]
  -[SKProductPageViewController scriptContextDictionary]
  -[SKProductPageViewController askToBuy]
  -[SKProductPageViewController showsStoreButton]
  -[SKProductPageViewController cancelButtonTitle]
  -[SKProductPageViewController showsRightBarButton]
  -[SKProductPageViewController promptString]
  -[SKProductPageViewController setClientInterface:]
  -[SKProductPageViewController URLBagType]
  -[SKProductPageViewController setURLBagType:]
  -[SKProductPageViewController _purchaseFailedNotification:]
  -[SKProductPageViewController _purchaseFinishedNotification:]
  -[SKProductPageViewController _initSKProductPageViewController]
  -[SKProductPageViewController _loadRequestForProductParameters]
  -[SKProductPageViewController _loadProductWithRequest:]
  -[SKProductPageViewController _reloadGotoStoreButton]
  -[SKProductPageViewController _sendDidFailLoadWithError:]
  -[SKProductPageViewController _sendDidFinishWithResult:]
  -[SKProductPageViewController _previewOverlay]
  -[SKProductPageViewController _showPreviewOverlayAnimated:]
  -[SKProductPageViewController _showProductPage:pageEvent:]
  -[SKProductPageViewController _loadClientContextWithCompletionBlock:]
  -[SKProductPageViewController loadWithStorePageRequest:]
  -[SKProductPageViewController _newRequestPropertiesWithRequest:]
  -[SKProductPageViewController _setResponse:forProperties:error:]
  -[SKProductPageViewController _gotoStoreButtonAction:]
  -[SKProductPageViewController _rightBarButtonAction:]
  -[SKProductPageViewController bannerViewDidClose:]
  -[SKProductPageViewController bannerView:didFailWithError:]
  -[SKProductPageViewController iPadProductPage:openItem:]
  -[SKProductPageViewController iPadProductPage:openURL:viewControllerBlock:]
  -[SKProductPageViewController iPhoneProductPage:shouldOpenItem:]
  -[SKProductPageViewController iPhoneProductPage:shouldOpenURL:]
  -[SKProductPageViewController clientInterface:exitStoreWithReason:]
  -[SKProductPageViewController clientInterface:presentDialog:]
  -[SKProductPageViewController clientInterface:hidePreviewOverlayAnimated:]
  -[SKProductPageViewController clientInterface:showPreviewOverlayAnimated:]
  -[SKProductPageViewController clientInterface:setStatusBarHidden:withAnimation:]
  -[SKProductPageViewController clientInterface:setStatusBarStyle:animated:]
  -[SKProductPageViewController previewOverlayForClientInterface:]
  -[SKProductPageViewController scriptInterfaceForClientInterface:]
  -[SKProductPageViewController clientInterface:willDismissViewController:]
  -[SKProductPageViewController clientInterface:willPresentViewController:]
  -[SKProductPageViewController purchaseManager:willAddPurchases:]
  -[SKProductPageViewController purchaseManager:didFinishPurchaseRequest:withError:]
  -[SKProductPageViewController itemStateCenter:didFinishPurchases:]
  -[SKProductPageViewController itemStateCenter:didFinishSoftwarePurchases:]
  -[SKProductPageViewController initWithProductPageStyle:]
  -[SKProductPageViewController initWithTabBarItem:]
  -[SKProductPageViewController setAdditionalPurchaseParameters:]
  -[SKProductPageViewController cancelButtonTitle:]
  -[SKProductPageViewController storePage:finishedWithSuccess:]
  -[SKProductPageViewController loadWithProductPage:]
  -[SKProductPageViewController _setClientContext:]
  -[SKProductPageViewController _showPageWithRequest:animated:]
  -[SKProductPageViewController additionalPurchaseParameters]
  -[SKProductPageViewController isPreview]


SKUIMediaQuerySizeFeature : SKUIMediaQueryFeature
  // class methods
  +[SKUIMediaQuerySizeFeature supportsFeatureName:]

  // instance methods
  -[SKUIMediaQuerySizeFeature requiredKeys]
  -[SKUIMediaQuerySizeFeature initWithFeatureName:value:]
  -[SKUIMediaQuerySizeFeature evaluateWithValues:]


SKUIPageControlCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
 @property  long long currentPage
 @property  long long numberOfPages
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIPageControlCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIPageControlCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIPageControlCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIPageControlCollectionViewCell sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIPageControlCollectionViewCell .cxx_destruct]
  -[SKUIPageControlCollectionViewCell initWithFrame:]
  -[SKUIPageControlCollectionViewCell layoutSubviews]
  -[SKUIPageControlCollectionViewCell setContentInset:]
  -[SKUIPageControlCollectionViewCell setCurrentPage:]
  -[SKUIPageControlCollectionViewCell currentPage]
  -[SKUIPageControlCollectionViewCell setNumberOfPages:]
  -[SKUIPageControlCollectionViewCell numberOfPages]
  -[SKUIPageControlCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIPageControlCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIPageControlCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIPageControlCollectionViewCell viewForElementIdentifier:]


SKUIMediaQueryEvaluator : NSObject /usr/lib/libc++.1.dylib
 @property  <SKUIMediaQueryDelegate> *delegate

  // class methods
  +[SKUIMediaQueryEvaluator initialize]
  +[SKUIMediaQueryEvaluator registerFeatureClass:]

  // instance methods
  -[SKUIMediaQueryEvaluator init]
  -[SKUIMediaQueryEvaluator dealloc]
  -[SKUIMediaQueryEvaluator delegate]
  -[SKUIMediaQueryEvaluator setDelegate:]
  -[SKUIMediaQueryEvaluator .cxx_destruct]
  -[SKUIMediaQueryEvaluator reloadData]
  -[SKUIMediaQueryEvaluator evaluateMediaQuery:]
  -[SKUIMediaQueryEvaluator _featureDidChangeNotification:]
  -[SKUIMediaQueryEvaluator _delegateValuesForKeys:]


SKUIVideoImageDataConsumer : SKUIImageDataConsumer
 @property  unsigned long allowedOrientations
 @property  UIColor *backgroundColor
 @property  SKUIColorScheme *colorScheme
 @property  {CGSize=dd} landscapeSize
 @property  {CGSize=dd} portraitSize

  // instance methods
  -[SKUIVideoImageDataConsumer .cxx_destruct]
  -[SKUIVideoImageDataConsumer backgroundColor]
  -[SKUIVideoImageDataConsumer setBackgroundColor:]
  -[SKUIVideoImageDataConsumer imageForColor:orientation:]
  -[SKUIVideoImageDataConsumer imageForImage:]
  -[SKUIVideoImageDataConsumer allowedOrientations]
  -[SKUIVideoImageDataConsumer setAllowedOrientations:]
  -[SKUIVideoImageDataConsumer colorScheme]
  -[SKUIVideoImageDataConsumer setColorScheme:]
  -[SKUIVideoImageDataConsumer landscapeSize]
  -[SKUIVideoImageDataConsumer setLandscapeSize:]
  -[SKUIVideoImageDataConsumer portraitSize]
  -[SKUIVideoImageDataConsumer setPortraitSize:]


SKUIFamilySettingDescriptionView : SKUISettingDescriptionView
  // class methods
  +[SKUIFamilySettingDescriptionView prefetchResourcesForSettingDescription:reason:context:]
  +[SKUIFamilySettingDescriptionView preferredSizeForSettingDescription:context:]
  +[SKUIFamilySettingDescriptionView requestLayoutForSettingDescription:width:context:]
  +[SKUIFamilySettingDescriptionView sizeThatFitsWidth:settingDescription:context:]

  // instance methods
  -[SKUIFamilySettingDescriptionView .cxx_destruct]
  -[SKUIFamilySettingDescriptionView layoutSubviews]
  -[SKUIFamilySettingDescriptionView setContentInset:]
  -[SKUIFamilySettingDescriptionView setImage:forArtworkRequest:context:]
  -[SKUIFamilySettingDescriptionView _setViewState:]
  -[SKUIFamilySettingDescriptionView _layoutWithActivityIndicator]
  -[SKUIFamilySettingDescriptionView _layoutWithLockup]
  -[SKUIFamilySettingDescriptionView _attributedStringForKey:]
  -[SKUIFamilySettingDescriptionView _attributedStringForViewState]
  -[SKUIFamilySettingDescriptionView reloadWithSettingDescription:width:context:]


SKUIRedeemIdViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIRedeemIdManagerDelegate>
 @property  SKUIRedeemIdManager *manager
 @property  SKUIClientContext *clientContext
 @property  UITableView *tableView
 @property  UIBarButtonItem *nextButton
 @property  NSMutableDictionary *fields
 @property  <SKUIRedeemIdDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRedeemIdViewController delegate]
  -[SKUIRedeemIdViewController setDelegate:]
  -[SKUIRedeemIdViewController .cxx_destruct]
  -[SKUIRedeemIdViewController fields]
  -[SKUIRedeemIdViewController manager]
  -[SKUIRedeemIdViewController setManager:]
  -[SKUIRedeemIdViewController tableView]
  -[SKUIRedeemIdViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUIRedeemIdViewController viewDidLayoutSubviews]
  -[SKUIRedeemIdViewController setTableView:]
  -[SKUIRedeemIdViewController _keyboardWillShow:]
  -[SKUIRedeemIdViewController _keyboardDidHide:]
  -[SKUIRedeemIdViewController nextButton]
  -[SKUIRedeemIdViewController setNextButton:]
  -[SKUIRedeemIdViewController setFields:]
  -[SKUIRedeemIdViewController clientContext]
  -[SKUIRedeemIdViewController setClientContext:]
  -[SKUIRedeemIdViewController _initializeManager]
  -[SKUIRedeemIdViewController _initializeTableView]
  -[SKUIRedeemIdViewController _initializeNavigationItem]
  -[SKUIRedeemIdViewController _subscribeToKeyboardEvents]
  -[SKUIRedeemIdViewController _reloadFooter]
  -[SKUIRedeemIdViewController _updateFieldAtIndexPath:withText:]
  -[SKUIRedeemIdViewController _refreshNavigationItem]
  -[SKUIRedeemIdViewController _fieldForIndexPath:]
  -[SKUIRedeemIdViewController _validateForm]
  -[SKUIRedeemIdViewController initWithClientContext:]
  -[SKUIRedeemIdViewController _cancelPressed]
  -[SKUIRedeemIdViewController _nextPressed]
  -[SKUIRedeemIdViewController _finalOutputFields]
  -[SKUIRedeemIdViewController _adjustInsetsForKeyboardFrameValue:]
  -[SKUIRedeemIdViewController redeemIdManager:movedToRowAtIndexPath:]
  -[SKUIRedeemIdViewController redeemIdManager:didChangeToText:forCellAtIndexPath:]
  -[SKUIRedeemIdViewController redeemIdManager:didReturnText:forCellAtIndexPath:]
  -[SKUIRedeemIdViewController _edgeInsetsFromInsets:usingNewTopInset:]


SKUIStoreDialogController : NSObject /usr/lib/libc++.1.dylib <UIAlertViewDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIStoreDialogController init]
  -[SKUIStoreDialogController .cxx_destruct]
  -[SKUIStoreDialogController alertView:didDismissWithButtonIndex:]
  -[SKUIStoreDialogController alertViewCancel:]
  -[SKUIStoreDialogController presentDialog:]
  -[SKUIStoreDialogController _performActionForDialog:buttonIndex:]
  -[SKUIStoreDialogController presentDialog:fromViewController:]


SKUIImageCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
 @property  BOOL showsReflectionImage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIImageCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIImageCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIImageCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIImageCollectionViewCell sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIImageCollectionViewCell .cxx_destruct]
  -[SKUIImageCollectionViewCell layoutSubviews]
  -[SKUIImageCollectionViewCell setHighlighted:]
  -[SKUIImageCollectionViewCell setSelected:]
  -[SKUIImageCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIImageCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIImageCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIImageCollectionViewCell viewForElementIdentifier:]
  -[SKUIImageCollectionViewCell _reloadHighlightImageView]
  -[SKUIImageCollectionViewCell reloadWithCarouselItem:size:context:]
  -[SKUIImageCollectionViewCell showsReflectionImage]
  -[SKUIImageCollectionViewCell setShowsReflectionImage:]


SKUIPhysicalCirclesDocumentViewController : SKUIViewController <SKUIArtworkRequestDelegate, SKUIOnboardingAffiliationCirclesDelegate, SKUIPhysicalCirclesTemplateDelegate, UIGestureRecognizerDelegate, SKUIDocumentViewController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIPhysicalCirclesDocumentViewController dealloc]
  -[SKUIPhysicalCirclesDocumentViewController .cxx_destruct]
  -[SKUIPhysicalCirclesDocumentViewController loadView]
  -[SKUIPhysicalCirclesDocumentViewController gestureRecognizerShouldBegin:]
  -[SKUIPhysicalCirclesDocumentViewController viewWillDisappear:]
  -[SKUIPhysicalCirclesDocumentViewController viewDidLayoutSubviews]
  -[SKUIPhysicalCirclesDocumentViewController viewDidAppear:]
  -[SKUIPhysicalCirclesDocumentViewController viewDidDisappear:]
  -[SKUIPhysicalCirclesDocumentViewController documentDidUpdate:]
  -[SKUIPhysicalCirclesDocumentViewController _affiliationItemsWithCircleItemElements:]
  -[SKUIPhysicalCirclesDocumentViewController _footerLeftButtonAction:]
  -[SKUIPhysicalCirclesDocumentViewController _footerRightButtonAction:]
  -[SKUIPhysicalCirclesDocumentViewController _reloadFooterViewAnimated:]
  -[SKUIPhysicalCirclesDocumentViewController _reloadInstructionsView]
  -[SKUIPhysicalCirclesDocumentViewController _loadImagesWithReason:]
  -[SKUIPhysicalCirclesDocumentViewController _profileImageElement]
  -[SKUIPhysicalCirclesDocumentViewController _leftFooterButtonElement]
  -[SKUIPhysicalCirclesDocumentViewController _rightFooterButtonElement]
  -[SKUIPhysicalCirclesDocumentViewController _styleAttributedString:withStyle:]
  -[SKUIPhysicalCirclesDocumentViewController artworkRequest:didLoadImage:]
  -[SKUIPhysicalCirclesDocumentViewController onboardingCircles:didRemoveAffiliationItem:]
  -[SKUIPhysicalCirclesDocumentViewController onboardingCircles:didSelectAffiliationItem:atIndex:]
  -[SKUIPhysicalCirclesDocumentViewController physicalCirclesDOMFeature:didRequestAnimation:]
  -[SKUIPhysicalCirclesDocumentViewController initWithPhysicalCirclesTemplateViewElement:]


SKUIReportAConcernReasonViewElement : SKUIViewElement
 @property  NSNumber *reasonID
 @property  NSString *name
 @property  NSString *uppercaseName

  // instance methods
  -[SKUIReportAConcernReasonViewElement name]
  -[SKUIReportAConcernReasonViewElement .cxx_destruct]
  -[SKUIReportAConcernReasonViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIReportAConcernReasonViewElement reasonID]
  -[SKUIReportAConcernReasonViewElement uppercaseName]


SKUIRedeemResultSimpleTableViewSection : SKUITableViewSection
 @property  {UIEdgeInsets=dddd} contentInsets

  // instance methods
  -[SKUIRedeemResultSimpleTableViewSection .cxx_destruct]
  -[SKUIRedeemResultSimpleTableViewSection contentInsets]
  -[SKUIRedeemResultSimpleTableViewSection initWithView:]
  -[SKUIRedeemResultSimpleTableViewSection setContentInsets:]
  -[SKUIRedeemResultSimpleTableViewSection heightForCellInTableView:indexPath:]
  -[SKUIRedeemResultSimpleTableViewSection numberOfRowsInSection]
  -[SKUIRedeemResultSimpleTableViewSection tableViewCellForTableView:indexPath:]
  -[SKUIRedeemResultSimpleTableViewSection tableView:willDisplayCell:forIndexPath:]


SKUIRedeemResultSimpleTableViewCell : UITableViewCell /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} childContentInsets
 @property  UIView *childContentView

  // instance methods
  -[SKUIRedeemResultSimpleTableViewCell .cxx_destruct]
  -[SKUIRedeemResultSimpleTableViewCell layoutSubviews]
  -[SKUIRedeemResultSimpleTableViewCell setChildContentInsets:]
  -[SKUIRedeemResultSimpleTableViewCell setChildContentView:]
  -[SKUIRedeemResultSimpleTableViewCell childContentInsets]
  -[SKUIRedeemResultSimpleTableViewCell childContentView]


SKUIPlayableAsset : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *contentURL
 @property  double initialPlaybackTime
 @property  BOOL ITunesStream
 @property  NSURL *keyCertificateURL
 @property  NSURL *keyServerURL
 @property  double playbackDuration
 @property  BOOL shouldUseITunesStoreSecureKeyDelivery
 @property  long long storeItemIdentifier

  // instance methods
  -[SKUIPlayableAsset init]
  -[SKUIPlayableAsset .cxx_destruct]
  -[SKUIPlayableAsset contentURL]
  -[SKUIPlayableAsset setContentURL:]
  -[SKUIPlayableAsset playbackDuration]
  -[SKUIPlayableAsset setPlaybackDuration:]
  -[SKUIPlayableAsset initWithContentURL:]
  -[SKUIPlayableAsset setInitialPlaybackTime:]
  -[SKUIPlayableAsset initialPlaybackTime]
  -[SKUIPlayableAsset keyCertificateURL]
  -[SKUIPlayableAsset keyServerURL]
  -[SKUIPlayableAsset storeItemIdentifier]
  -[SKUIPlayableAsset setStoreItemIdentifier:]
  -[SKUIPlayableAsset isITunesStream]
  -[SKUIPlayableAsset initWithVideoViewElement:assetViewElement:]
  -[SKUIPlayableAsset initWithVideo:]
  -[SKUIPlayableAsset shouldUseITunesStoreSecureKeyDelivery]
  -[SKUIPlayableAsset setShouldUseITunesStoreSecureKeyDelivery:]


SKUIDynamicShelfPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIItemStateCenterObserver, SKUIObservableScrollViewDelegate, SKUIShelfPageSectionConfigurationDataSource, UICollectionViewDataSource, UICollectionViewDelegate, SKUIShelfPageSection>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SKUIScrollViewDelegateObserver> *scrollViewDelegateObserver
 @property  SKUIShelfPageSectionConfiguration *configuration
 @property  SKUIShelfPageComponent *pageComponent

  // instance methods
  -[SKUIDynamicShelfPageSection dealloc]
  -[SKUIDynamicShelfPageSection _setContext:]
  -[SKUIDynamicShelfPageSection .cxx_destruct]
  -[SKUIDynamicShelfPageSection configuration]
  -[SKUIDynamicShelfPageSection scrollViewDidScroll:]
  -[SKUIDynamicShelfPageSection scrollViewWillBeginDragging:]
  -[SKUIDynamicShelfPageSection scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SKUIDynamicShelfPageSection scrollViewWillBeginDecelerating:]
  -[SKUIDynamicShelfPageSection scrollViewDidEndDecelerating:]
  -[SKUIDynamicShelfPageSection collectionView:numberOfItemsInSection:]
  -[SKUIDynamicShelfPageSection collectionView:cellForItemAtIndexPath:]
  -[SKUIDynamicShelfPageSection collectionView:shouldHighlightItemAtIndexPath:]
  -[SKUIDynamicShelfPageSection collectionView:didSelectItemAtIndexPath:]
  -[SKUIDynamicShelfPageSection setSectionIndex:]
  -[SKUIDynamicShelfPageSection itemStateCenter:itemStatesChanged:]
  -[SKUIDynamicShelfPageSection artworkRequest:didLoadImage:]
  -[SKUIDynamicShelfPageSection initWithPageComponent:configuration:]
  -[SKUIDynamicShelfPageSection initWithPageComponent:]
  -[SKUIDynamicShelfPageSection _reloadViewElementProperties]
  -[SKUIDynamicShelfPageSection applyUpdateType:]
  -[SKUIDynamicShelfPageSection backgroundColorForIndexPath:]
  -[SKUIDynamicShelfPageSection collectionViewWillApplyLayoutAttributes:]
  -[SKUIDynamicShelfPageSection deselectItemsAnimated:]
  -[SKUIDynamicShelfPageSection invalidateCachedLayoutInformation]
  -[SKUIDynamicShelfPageSection relevantEntityProviders]
  -[SKUIDynamicShelfPageSection sectionContentInset]
  -[SKUIDynamicShelfPageSection setTopSection:]
  -[SKUIDynamicShelfPageSection willAppearInContext:]
  -[SKUIDynamicShelfPageSection willHideInContext:]
  -[SKUIDynamicShelfPageSection _viewElementForEntityAtGlobalIndex:]
  -[SKUIDynamicShelfPageSection _normalizedShelfItemIndexPathFromActualIndexPath:]
  -[SKUIDynamicShelfPageSection scrollViewDelegateObserver]
  -[SKUIDynamicShelfPageSection setScrollViewDelegateObserver:]
  -[SKUIDynamicShelfPageSection shelfPageSectionConfiguration:viewElementAtIndex:]
  -[SKUIDynamicShelfPageSection cellForIndexPath:]
  -[SKUIDynamicShelfPageSection cellSizeForIndexPath:]
  -[SKUIDynamicShelfPageSection entityProvider:didInvalidateWithContext:]
  -[SKUIDynamicShelfPageSection numberOfCells]
  -[SKUIDynamicShelfPageSection collectionView:didConfirmButtonElement:withClickInfo:forItemAtIndexPath:]
  -[SKUIDynamicShelfPageSection collectionView:layout:willApplyLayoutAttributes:]


SKUITransientAppDataStorage : NSObject /usr/lib/libc++.1.dylib <IKAppDataStoring>
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  NSMutableDictionary *storage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUITransientAppDataStorage init]
  -[SKUITransientAppDataStorage count]
  -[SKUITransientAppDataStorage clear]
  -[SKUITransientAppDataStorage keyAtIndex:]
  -[SKUITransientAppDataStorage storage]
  -[SKUITransientAppDataStorage .cxx_destruct]
  -[SKUITransientAppDataStorage setData:forKey:]
  -[SKUITransientAppDataStorage accessQueue]
  -[SKUITransientAppDataStorage setStorage:]
  -[SKUITransientAppDataStorage removeDataForKey:]
  -[SKUITransientAppDataStorage setAccessQueue:]
  -[SKUITransientAppDataStorage getDataForKey:]


SKUIStoreItemRelationship : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIStoreIdentifier *singleParent
 @property  NSSet *chidItems

  // instance methods
  -[SKUIStoreItemRelationship .cxx_destruct]
  -[SKUIStoreItemRelationship initWithParent:andChildren:]
  -[SKUIStoreItemRelationship singleParent]
  -[SKUIStoreItemRelationship chidItems]


SKUIStoreItemRelationshipCounsellor : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableDictionary *relationshipsDictionary
 @property  NSRecursiveLock *lock

  // instance methods
  -[SKUIStoreItemRelationshipCounsellor init]
  -[SKUIStoreItemRelationshipCounsellor lock]
  -[SKUIStoreItemRelationshipCounsellor .cxx_destruct]
  -[SKUIStoreItemRelationshipCounsellor relationshipsDictionary]
  -[SKUIStoreItemRelationshipCounsellor removeAllRelationshipsForItem:]
  -[SKUIStoreItemRelationshipCounsellor setChildren:forParent:]
  -[SKUIStoreItemRelationshipCounsellor itemHasParent:]
  -[SKUIStoreItemRelationshipCounsellor itemHasChildren:]
  -[SKUIStoreItemRelationshipCounsellor childItemsForItem:]
  -[SKUIStoreItemRelationshipCounsellor parentItemForItem:]
  -[SKUIStoreItemRelationshipCounsellor siblingItemsForItem:]
  -[SKUIStoreItemRelationshipCounsellor familyForItem:]
  -[SKUIStoreItemRelationshipCounsellor addChildren:forParent:]
  -[SKUIStoreItemRelationshipCounsellor setRelationshipsDictionary:]


SKUIRatingResponseProvider : ISPropertyListProvider /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI
  // instance methods
  -[SKUIRatingResponseProvider parseData:returningError:]


SKUIViewControllerFactory : SUViewControllerFactory /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
  // instance methods
  -[SKUIViewControllerFactory newPlaceholderViewController]


SKScriptInterface : SUScriptInterface /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
 @property  SKProductPageViewController *parentProductPageViewController

  // class methods
  +[SKScriptInterface initialize]
  +[SKScriptInterface webScriptNameForSelector:]

  // instance methods
  -[SKScriptInterface .cxx_destruct]
  -[SKScriptInterface setParentProductPageViewController:]
  -[SKScriptInterface makeStoreSheetRequest]
  -[SKScriptInterface showStoreSheetWithRequest:animated:]
  -[SKScriptInterface parentProductPageViewController]


SKUIExternalResourceImage : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *imageName
 @property  NSBundle *bundle
 @property  BOOL alwaysTemplate

  // instance methods
  -[SKUIExternalResourceImage .cxx_destruct]
  -[SKUIExternalResourceImage bundle]
  -[SKUIExternalResourceImage setBundle:]
  -[SKUIExternalResourceImage setImageName:]
  -[SKUIExternalResourceImage imageName]
  -[SKUIExternalResourceImage alwaysTemplate]
  -[SKUIExternalResourceImage setAlwaysTemplate:]


SKScriptStoreSheetRequest : SUScriptObject /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
 @property  long long productPageStyle
 @property  WebScriptObject *productParameters
 @property  NSString *productURL
 @property  long long productPageStyleAutomatic
 @property  long long productPageStyleBanner
 @property  long long productPageStylePad
 @property  long long productPageStylePhone

  // class methods
  +[SKScriptStoreSheetRequest initialize]
  +[SKScriptStoreSheetRequest webScriptNameForSelector:]
  +[SKScriptStoreSheetRequest webScriptNameForKey:]

  // instance methods
  -[SKScriptStoreSheetRequest .cxx_destruct]
  -[SKScriptStoreSheetRequest _className]
  -[SKScriptStoreSheetRequest attributeKeys]
  -[SKScriptStoreSheetRequest setProductPageStyle:]
  -[SKScriptStoreSheetRequest productPageStyle]
  -[SKScriptStoreSheetRequest productParameters]
  -[SKScriptStoreSheetRequest setProductParameters:]
  -[SKScriptStoreSheetRequest productURL]
  -[SKScriptStoreSheetRequest setProductURL:]
  -[SKScriptStoreSheetRequest _safeValueForValue:]
  -[SKScriptStoreSheetRequest scriptAttributeKeys]
  -[SKScriptStoreSheetRequest newNativeStorePageRequest]
  -[SKScriptStoreSheetRequest productPageStyleAutomatic]
  -[SKScriptStoreSheetRequest productPageStyleBanner]
  -[SKScriptStoreSheetRequest productPageStylePad]
  -[SKScriptStoreSheetRequest productPageStylePhone]


SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell _leftPositionedChildrenOfViewElement:]
  +[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell _attributedStringForButton:context:]
  +[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell _attributedStringForLabel:context:]

  // instance methods
  -[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell .cxx_destruct]
  -[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell initWithFrame:]
  -[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell layoutSubviews]
  -[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell setContentInset:]
  -[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIMenuBarTemplateShelfFixedElementsCollectionViewCell viewForElementIdentifier:]


SKUIRedeemResultLinksTableViewSection : SKUITableViewSection
 @property  {UIEdgeInsets=dddd} contentInsets

  // instance methods
  -[SKUIRedeemResultLinksTableViewSection .cxx_destruct]
  -[SKUIRedeemResultLinksTableViewSection contentInsets]
  -[SKUIRedeemResultLinksTableViewSection setContentInsets:]
  -[SKUIRedeemResultLinksTableViewSection heightForCellInTableView:indexPath:]
  -[SKUIRedeemResultLinksTableViewSection numberOfRowsInSection]
  -[SKUIRedeemResultLinksTableViewSection tableViewCellForTableView:indexPath:]
  -[SKUIRedeemResultLinksTableViewSection tableView:willDisplayCell:forIndexPath:]
  -[SKUIRedeemResultLinksTableViewSection initWithLinks:]


SKUIJSTelephony : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIJSTelephony>
 @property  BOOL cellularRoaming
 @property  NSString *countryCode
 @property  NSString *mobileCountryCode
 @property  NSString *mobileNetworkCode
 @property  NSString *operatorName
 @property  NSString *phoneNumber
 @property  NSString *providerName

  // instance methods
  -[SKUIJSTelephony dealloc]
  -[SKUIJSTelephony .cxx_destruct]
  -[SKUIJSTelephony countryCode]
  -[SKUIJSTelephony phoneNumber]
  -[SKUIJSTelephony mobileNetworkCode]
  -[SKUIJSTelephony mobileCountryCode]
  -[SKUIJSTelephony providerName]
  -[SKUIJSTelephony beginObserving]
  -[SKUIJSTelephony operatorName]
  -[SKUIJSTelephony initWithAppContext:]
  -[SKUIJSTelephony _telephonyServer]
  -[SKUIJSTelephony formattedPhoneNumber:]
  -[SKUIJSTelephony sendSMSWithBodyText:::]
  -[SKUIJSTelephony isCellularRoaming]


SKUINavigationStackEnsureConsistencyRequest : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long navigationControllerOperation
 @property  BOOL operationDidComplete

  // instance methods
  -[SKUINavigationStackEnsureConsistencyRequest isEqual:]
  -[SKUINavigationStackEnsureConsistencyRequest copyWithZone:]
  -[SKUINavigationStackEnsureConsistencyRequest initWithNavigationControllerOperation:operationDidComplete:]
  -[SKUINavigationStackEnsureConsistencyRequest navigationControllerOperation]
  -[SKUINavigationStackEnsureConsistencyRequest operationDidComplete]


SKUISubmitFieldSettingDescriptionView : SKUIFieldSettingDescriptionView
  // class methods
  +[SKUISubmitFieldSettingDescriptionView prefetchResourcesForSettingDescription:reason:context:]
  +[SKUISubmitFieldSettingDescriptionView preferredSizeForSettingDescription:context:]
  +[SKUISubmitFieldSettingDescriptionView requestLayoutForSettingDescription:width:context:]
  +[SKUISubmitFieldSettingDescriptionView sizeThatFitsWidth:settingDescription:context:]

  // instance methods
  -[SKUISubmitFieldSettingDescriptionView setEnabled:]
  -[SKUISubmitFieldSettingDescriptionView .cxx_destruct]
  -[SKUISubmitFieldSettingDescriptionView layoutSubviews]
  -[SKUISubmitFieldSettingDescriptionView tintColorDidChange]
  -[SKUISubmitFieldSettingDescriptionView setContentInset:]
  -[SKUISubmitFieldSettingDescriptionView setImage:forArtworkRequest:context:]
  -[SKUISubmitFieldSettingDescriptionView reloadWithSettingDescription:width:context:]
  -[SKUISubmitFieldSettingDescriptionView _addInputWithElement:]
  -[SKUISubmitFieldSettingDescriptionView _currentControllerValue]
  -[SKUISubmitFieldSettingDescriptionView _addSubmitInputWithElement:]


SKUIGradientView : UIView /usr/lib/libobjc.A.dylib
 @property  CAGradientLayer *layer

  // class methods
  +[SKUIGradientView layerClass]


SKUIITunesStoreUIPageViewController : SUStorePageViewController /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
 @property  SKProductPageViewController *productPageViewController
 @property  BOOL showsCancelButton
 @property  NSString *cancelButtonTitle

  // instance methods
  -[SKUIITunesStoreUIPageViewController dealloc]
  -[SKUIITunesStoreUIPageViewController .cxx_destruct]
  -[SKUIITunesStoreUIPageViewController viewWillLayoutSubviews]
  -[SKUIITunesStoreUIPageViewController showsCancelButton]
  -[SKUIITunesStoreUIPageViewController setShowsCancelButton:]
  -[SKUIITunesStoreUIPageViewController setCancelButtonTitle:]
  -[SKUIITunesStoreUIPageViewController cancelButtonTitle]
  -[SKUIITunesStoreUIPageViewController setProductPageViewController:]
  -[SKUIITunesStoreUIPageViewController resetNavigationItem:]
  -[SKUIITunesStoreUIPageViewController handleFailureWithError:]
  -[SKUIITunesStoreUIPageViewController productPageViewController]
  -[SKUIITunesStoreUIPageViewController presentDialogForError:pendUntilVisible:]
  -[SKUIITunesStoreUIPageViewController _addCancelButtonToNavigationItem:]
  -[SKUIITunesStoreUIPageViewController _cancelButtonItem]
  -[SKUIITunesStoreUIPageViewController _storeSheetCancelButtonAction:]


SKUIStoreAssetResourceLoaderDelegate : NSObject /usr/lib/libc++.1.dylib <AVAssetResourceLoaderDelegate>
 @property  SKUIClientContext *clientContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIStoreAssetResourceLoaderDelegate storeAssetResourceLoaderDelegateForPlayableAsset:clientContext:]

  // instance methods
  -[SKUIStoreAssetResourceLoaderDelegate .cxx_destruct]
  -[SKUIStoreAssetResourceLoaderDelegate resourceLoader:shouldWaitForLoadingOfRequestedResource:]
  -[SKUIStoreAssetResourceLoaderDelegate clientContext]


SKUIReviewMetadata : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *body
 @property  NSString *nickname
 @property  float rating
 @property  NSString *title
 @property  NSURL *submitURL
 @property  unsigned long bodyMaxLength
 @property  unsigned long nicknameMaxLength
 @property  unsigned long titleMaxLength

  // instance methods
  -[SKUIReviewMetadata copyWithZone:]
  -[SKUIReviewMetadata .cxx_destruct]
  -[SKUIReviewMetadata nickname]
  -[SKUIReviewMetadata setNickname:]
  -[SKUIReviewMetadata title]
  -[SKUIReviewMetadata setTitle:]
  -[SKUIReviewMetadata setBody:]
  -[SKUIReviewMetadata body]
  -[SKUIReviewMetadata rating]
  -[SKUIReviewMetadata setRating:]
  -[SKUIReviewMetadata initWithReviewDictionary:]
  -[SKUIReviewMetadata bodyMaxLength]
  -[SKUIReviewMetadata nicknameMaxLength]
  -[SKUIReviewMetadata submitURL]
  -[SKUIReviewMetadata titleMaxLength]


SKUIPageTitledDividerCollectionViewCell : UICollectionViewCell /usr/lib/libobjc.A.dylib <SKUIViewElementView>
 @property  double topEdgeInset
 @property  NSString *dividerTitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIPageTitledDividerCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIPageTitledDividerCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIPageTitledDividerCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIPageTitledDividerCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUIPageTitledDividerCollectionViewCell _attributedStringForDividerTitle:context:]
  +[SKUIPageTitledDividerCollectionViewCell _attributedStringForButtonViewElement:context:]
  +[SKUIPageTitledDividerCollectionViewCell _imageVerticalPaddingForViewElement:]
  +[SKUIPageTitledDividerCollectionViewCell _attributedStringForViewElementText:style:context:]
  +[SKUIPageTitledDividerCollectionViewCell _titleVerticalPaddingForViewElement:]
  +[SKUIPageTitledDividerCollectionViewCell _contentEdgeInsetsForViewElement:]
  +[SKUIPageTitledDividerCollectionViewCell viewElementInsetDividerHeight:]
  +[SKUIPageTitledDividerCollectionViewCell sizeThatFitsWidth:dividerTitle:context:]

  // instance methods
  -[SKUIPageTitledDividerCollectionViewCell .cxx_destruct]
  -[SKUIPageTitledDividerCollectionViewCell setBackgroundColor:]
  -[SKUIPageTitledDividerCollectionViewCell initWithFrame:]
  -[SKUIPageTitledDividerCollectionViewCell layoutSubviews]
  -[SKUIPageTitledDividerCollectionViewCell setContentInset:]
  -[SKUIPageTitledDividerCollectionViewCell applyLayoutAttributes:]
  -[SKUIPageTitledDividerCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIPageTitledDividerCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIPageTitledDividerCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIPageTitledDividerCollectionViewCell viewForElementIdentifier:]
  -[SKUIPageTitledDividerCollectionViewCell _buttonAction:]
  -[SKUIPageTitledDividerCollectionViewCell _imageForImageViewElement:returningRequestIdentifier:context:]
  -[SKUIPageTitledDividerCollectionViewCell dividerTitle]
  -[SKUIPageTitledDividerCollectionViewCell setColoringWithColorScheme:]
  -[SKUIPageTitledDividerCollectionViewCell setDividerTitle:]
  -[SKUIPageTitledDividerCollectionViewCell setTopEdgeInset:]
  -[SKUIPageTitledDividerCollectionViewCell topEdgeInset]


SKUIOfferCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIOfferCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIOfferCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIOfferCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIOfferCollectionViewCell sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIOfferCollectionViewCell .cxx_destruct]
  -[SKUIOfferCollectionViewCell setBackgroundColor:]
  -[SKUIOfferCollectionViewCell initWithFrame:]
  -[SKUIOfferCollectionViewCell layoutSubviews]
  -[SKUIOfferCollectionViewCell setContentInset:]
  -[SKUIOfferCollectionViewCell applyLayoutAttributes:]
  -[SKUIOfferCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIOfferCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIOfferCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIOfferCollectionViewCell viewForElementIdentifier:]


SKUIComposeReviewViewController : SUNavigationController /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore <SKUIComposeReviewFormDelegate, UITextFieldDelegate>
 @property  BOOL edit
 @property  <SKUIComposeReviewDelegate> *delegate
 @property  SKUIWriteAReviewTemplateViewElement *templateViewElement
 @property  SKUIReviewMetadata *editedReviewMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIComposeReviewViewController _preventsAppearanceProxyCustomization]

  // instance methods
  -[SKUIComposeReviewViewController init]
  -[SKUIComposeReviewViewController dealloc]
  -[SKUIComposeReviewViewController .cxx_destruct]
  -[SKUIComposeReviewViewController preferredStatusBarStyle]
  -[SKUIComposeReviewViewController textField:shouldChangeCharactersInRange:replacementString:]
  -[SKUIComposeReviewViewController setRating:]
  -[SKUIComposeReviewViewController _setNickname:]
  -[SKUIComposeReviewViewController _cancelAction:]
  -[SKUIComposeReviewViewController setTemplateViewElement:]
  -[SKUIComposeReviewViewController templateViewElement]
  -[SKUIComposeReviewViewController editedReviewMetadata]
  -[SKUIComposeReviewViewController _loadReviewWithURL:completionBlock:]
  -[SKUIComposeReviewViewController _setNicknameShouldResetOnError:]
  -[SKUIComposeReviewViewController _sendDidSubmit]
  -[SKUIComposeReviewViewController _sendDidCancel]
  -[SKUIComposeReviewViewController _promptForNickname]
  -[SKUIComposeReviewViewController _attemptReviewSubmission]
  -[SKUIComposeReviewViewController submitReview]
  -[SKUIComposeReviewViewController setEdit:]
  -[SKUIComposeReviewViewController isEdit]
  -[SKUIComposeReviewViewController _finishLoadWithOutput:error:]
  -[SKUIComposeReviewViewController composeReviewFormDidCancel:]
  -[SKUIComposeReviewViewController composeReviewFormDidSubmit:]
  -[SKUIComposeReviewViewController loadReviewWithURL:completionBlock:]


SKUIComposeReviewFormViewController : SUViewController /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore <SKUIComposeReviewViewDelegate>
 @property  <SKUIComposeReviewFormDelegate> *delegate
 @property  SKUIReviewMetadata *editedReviewMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIComposeReviewFormViewController dealloc]
  -[SKUIComposeReviewFormViewController delegate]
  -[SKUIComposeReviewFormViewController setDelegate:]
  -[SKUIComposeReviewFormViewController .cxx_destruct]
  -[SKUIComposeReviewFormViewController loadView]
  -[SKUIComposeReviewFormViewController viewWillAppear:]
  -[SKUIComposeReviewFormViewController _cancel]
  -[SKUIComposeReviewFormViewController setRating:]
  -[SKUIComposeReviewFormViewController editedReviewMetadata]
  -[SKUIComposeReviewFormViewController initWithReviewMetadata:]
  -[SKUIComposeReviewFormViewController _submit]
  -[SKUIComposeReviewFormViewController composeReviewViewValidityChanged:]


SKUIComposeReviewHeaderView : UIView /usr/lib/libobjc.A.dylib <SKUIComposeTextFieldListViewDelegate>
 @property  long long composeReviewStyle
 @property  <SKUIComposeReviewHeaderDelegate> *delegate
 @property  SKUIReviewMetadata *review
 @property  UIResponder *initialFirstResponder
 @property  float rating
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIComposeReviewHeaderView dealloc]
  -[SKUIComposeReviewHeaderView delegate]
  -[SKUIComposeReviewHeaderView setDelegate:]
  -[SKUIComposeReviewHeaderView .cxx_destruct]
  -[SKUIComposeReviewHeaderView title]
  -[SKUIComposeReviewHeaderView layoutSubviews]
  -[SKUIComposeReviewHeaderView sizeToFit]
  -[SKUIComposeReviewHeaderView initWithFrame:style:]
  -[SKUIComposeReviewHeaderView review]
  -[SKUIComposeReviewHeaderView rating]
  -[SKUIComposeReviewHeaderView setRating:]
  -[SKUIComposeReviewHeaderView setReview:]
  -[SKUIComposeReviewHeaderView initialFirstResponder]
  -[SKUIComposeReviewHeaderView numberOfColumnsInTextFieldList:]
  -[SKUIComposeReviewHeaderView numberOfFieldsInTextFieldList:]
  -[SKUIComposeReviewHeaderView textFieldList:configurationForFieldAtIndex:]
  -[SKUIComposeReviewHeaderView textFieldListValidityDidChange:]
  -[SKUIComposeReviewHeaderView textFieldListValuesDidChange:]
  -[SKUIComposeReviewHeaderView composeReviewStyle]


SKUITemplateDefinitionViewElement : SKUIViewElement
 @property  SKUIPredicateListViewElement *predicateListViewElement
 @property  SKUIViewElement *contentViewElement
 @property  NSString *definitionMode
 @property  NSString *definitionType

  // instance methods
  -[SKUITemplateDefinitionViewElement contentViewElement]
  -[SKUITemplateDefinitionViewElement definitionMode]
  -[SKUITemplateDefinitionViewElement definitionType]
  -[SKUITemplateDefinitionViewElement predicateListViewElement]


SKUIComposeReviewView : UIView /usr/lib/libobjc.A.dylib <SKUIComposeReviewHeaderDelegate, UITextContentViewDelegate>
 @property  long long composeReviewStyle
 @property  <SKUIComposeReviewViewDelegate> *delegate
 @property  BOOL loading
 @property  float rating
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIComposeReviewView dealloc]
  -[SKUIComposeReviewView isValid]
  -[SKUIComposeReviewView delegate]
  -[SKUIComposeReviewView setDelegate:]
  -[SKUIComposeReviewView .cxx_destruct]
  -[SKUIComposeReviewView setFrame:]
  -[SKUIComposeReviewView layoutSubviews]
  -[SKUIComposeReviewView reloadData]
  -[SKUIComposeReviewView initWithFrame:style:]
  -[SKUIComposeReviewView hitTest:withEvent:]
  -[SKUIComposeReviewView _body]
  -[SKUIComposeReviewView _updateContentSize]
  -[SKUIComposeReviewView textContentView:shouldScrollForPendingContentSize:]
  -[SKUIComposeReviewView textContentView:shouldChangeSizeForContentSize:]
  -[SKUIComposeReviewView textContentView:didChangeSize:]
  -[SKUIComposeReviewView textContentView:shouldChangeTextInRange:replacementText:]
  -[SKUIComposeReviewView textContentViewDidChange:]
  -[SKUIComposeReviewView isLoading]
  -[SKUIComposeReviewView rating]
  -[SKUIComposeReviewView setRating:]
  -[SKUIComposeReviewView setReview:]
  -[SKUIComposeReviewView setLoading:]
  -[SKUIComposeReviewView _keyboardVisibilityDidChangeNotification:]
  -[SKUIComposeReviewView copyReview]
  -[SKUIComposeReviewView composeHeaderViewValidityDidChange:]
  -[SKUIComposeReviewView composeHeaderViewValuesDidChange:]
  -[SKUIComposeReviewView composeReviewStyle]
  -[SKUIComposeReviewView _showComposeView]
  -[SKUIComposeReviewView _remoteKeyboardVisibilityDidChangeNotification:]
  -[SKUIComposeReviewView _layoutLoadingView]
  -[SKUIComposeReviewView _layoutComposeView]
  -[SKUIComposeReviewView _showLoadingView]
  -[SKUIComposeReviewView _reviewPlaceholder]
  -[SKUIComposeReviewView _delayedUpdateReviewLength]
  -[SKUIComposeReviewView _isReviewTextOptional]


SKUIComposeTextField : UIView /usr/lib/libobjc.A.dylib <UITextFieldDelegate>
 @property  long long composeReviewStyle
 @property  id delegate
 @property  SKUIComposeTextFieldConfiguration *configuration
 @property  NSString *text
 @property  UITextField *textField
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIComposeTextField labelFontForStyle:]
  +[SKUIComposeTextField labelColorForStyle:]

  // instance methods
  -[SKUIComposeTextField dealloc]
  -[SKUIComposeTextField isValid]
  -[SKUIComposeTextField delegate]
  -[SKUIComposeTextField setDelegate:]
  -[SKUIComposeTextField .cxx_destruct]
  -[SKUIComposeTextField text]
  -[SKUIComposeTextField setText:]
  -[SKUIComposeTextField configuration]
  -[SKUIComposeTextField layoutSubviews]
  -[SKUIComposeTextField textField]
  -[SKUIComposeTextField drawRect:]
  -[SKUIComposeTextField hitTest:withEvent:]
  -[SKUIComposeTextField textField:shouldInsertText:replacingRange:]
  -[SKUIComposeTextField _textChanged:]
  -[SKUIComposeTextField composeReviewStyle]
  -[SKUIComposeTextField initWithConfiguration:style:]


SKUIComposeTextFieldConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  {UIEdgeInsets=dddd} borderInsets
 @property  long long columnIndex
 @property  NSString *label
 @property  unsigned long maxLength
 @property  NSString *placeholder
 @property  BOOL required
 @property  NSString *value

  // instance methods
  -[SKUIComposeTextFieldConfiguration .cxx_destruct]
  -[SKUIComposeTextFieldConfiguration value]
  -[SKUIComposeTextFieldConfiguration setValue:]
  -[SKUIComposeTextFieldConfiguration setLabel:]
  -[SKUIComposeTextFieldConfiguration label]
  -[SKUIComposeTextFieldConfiguration setRequired:]
  -[SKUIComposeTextFieldConfiguration setPlaceholder:]
  -[SKUIComposeTextFieldConfiguration placeholder]
  -[SKUIComposeTextFieldConfiguration maxLength]
  -[SKUIComposeTextFieldConfiguration setMaxLength:]
  -[SKUIComposeTextFieldConfiguration isRequired]
  -[SKUIComposeTextFieldConfiguration columnIndex]
  -[SKUIComposeTextFieldConfiguration borderInsets]
  -[SKUIComposeTextFieldConfiguration setBorderInsets:]
  -[SKUIComposeTextFieldConfiguration setColumnIndex:]


SKUIComposeTextFieldListView : UIView /usr/lib/libobjc.A.dylib
 @property  long long composeReviewStyle
 @property  <SKUIComposeTextFieldListViewDelegate> *delegate
 @property  double height
 @property  UIResponder *initialFirstResponder

  // instance methods
  -[SKUIComposeTextFieldListView dealloc]
  -[SKUIComposeTextFieldListView isValid]
  -[SKUIComposeTextFieldListView delegate]
  -[SKUIComposeTextFieldListView setDelegate:]
  -[SKUIComposeTextFieldListView .cxx_destruct]
  -[SKUIComposeTextFieldListView height]
  -[SKUIComposeTextFieldListView layoutSubviews]
  -[SKUIComposeTextFieldListView reloadData]
  -[SKUIComposeTextFieldListView initWithFrame:style:]
  -[SKUIComposeTextFieldListView initialFirstResponder]
  -[SKUIComposeTextFieldListView textForFieldAtIndex:]
  -[SKUIComposeTextFieldListView composeReviewStyle]
  -[SKUIComposeTextFieldListView composeTextFieldValidityChanged:]
  -[SKUIComposeTextFieldListView _updateValidity]


SKUIPostReviewOperation : ISOperation /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI
 @property  NSDictionary *responseDictionary

  // instance methods
  -[SKUIPostReviewOperation run]
  -[SKUIPostReviewOperation .cxx_destruct]
  -[SKUIPostReviewOperation responseDictionary]
  -[SKUIPostReviewOperation _httpBody]
  -[SKUIPostReviewOperation initWithReviewMetadata:]


SKUIItemState : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  BOOL activeStateIsPreview
 @property  unsigned long allContentFlags
 @property  unsigned long downloadContentFlags
 @property  NSString *downloadPhase
 @property  float downloadProgress
 @property  NSNumber *itemIdentifier
 @property  NSArray *downloadIdentifiers
 @property  SKUIStoreIdentifier *storeIdentifier
 @property  unsigned long libraryContentFlags
 @property  long long mediaCategory
 @property  unsigned long state
 @property  NSString *variantIdentifier

  // instance methods
  -[SKUIItemState copyWithZone:]
  -[SKUIItemState .cxx_destruct]
  -[SKUIItemState itemIdentifier]
  -[SKUIItemState setItemIdentifier:]
  -[SKUIItemState state]
  -[SKUIItemState setState:]
  -[SKUIItemState storeIdentifier]
  -[SKUIItemState setStoreIdentifier:]
  -[SKUIItemState variantIdentifier]
  -[SKUIItemState setVariantIdentifier:]
  -[SKUIItemState downloadProgress]
  -[SKUIItemState setDownloadProgress:]
  -[SKUIItemState downloadPhase]
  -[SKUIItemState downloadIdentifiers]
  -[SKUIItemState setDownloadIdentifiers:]
  -[SKUIItemState downloadContentFlags]
  -[SKUIItemState libraryContentFlags]
  -[SKUIItemState activeStateIsPreview]
  -[SKUIItemState allContentFlags]
  -[SKUIItemState setDownloadContentFlags:]
  -[SKUIItemState setDownloadPhase:]
  -[SKUIItemState setLibraryContentFlags:]
  -[SKUIItemState mediaCategory]
  -[SKUIItemState setMediaCategory:]


SKUIMenuItemViewElement : SKUIViewElement

SKUIFocusedTouchGestureRecognizer : UIGestureRecognizer /usr/lib/libobjc.A.dylib
 @property  UIView *focusedView
 @property  {UIEdgeInsets=dddd} touchAllowance

  // instance methods
  -[SKUIFocusedTouchGestureRecognizer .cxx_destruct]
  -[SKUIFocusedTouchGestureRecognizer reset]
  -[SKUIFocusedTouchGestureRecognizer touchesBegan:withEvent:]
  -[SKUIFocusedTouchGestureRecognizer touchesEnded:withEvent:]
  -[SKUIFocusedTouchGestureRecognizer focusedView]
  -[SKUIFocusedTouchGestureRecognizer initWithFocusedView:touchAllowance:]
  -[SKUIFocusedTouchGestureRecognizer touchAllowance]
  -[SKUIFocusedTouchGestureRecognizer setTouchAllowance:]


SKUIBrowseItemCell : UICollectionViewCell /usr/lib/libobjc.A.dylib
 @property  NSString *title
 @property  NSString *subtitle
 @property  UIImage *decorationImage
 @property  BOOL showTopBorder
 @property  BOOL hasBlueBackgroundWhenSelected

  // instance methods
  -[SKUIBrowseItemCell .cxx_destruct]
  -[SKUIBrowseItemCell title]
  -[SKUIBrowseItemCell setTitle:]
  -[SKUIBrowseItemCell subtitle]
  -[SKUIBrowseItemCell initWithFrame:]
  -[SKUIBrowseItemCell layoutSubviews]
  -[SKUIBrowseItemCell setSubtitle:]
  -[SKUIBrowseItemCell setHighlighted:]
  -[SKUIBrowseItemCell setSelected:]
  -[SKUIBrowseItemCell _reloadHighlightState]
  -[SKUIBrowseItemCell setDecorationImage:]
  -[SKUIBrowseItemCell setShowTopBorder:]
  -[SKUIBrowseItemCell decorationImage]
  -[SKUIBrowseItemCell showTopBorder]
  -[SKUIBrowseItemCell hasBlueBackgroundWhenSelected]
  -[SKUIBrowseItemCell setHasBlueBackgroundWhenSelected:]


SKUIDividerPageComponent : SKUIPageComponent
 @property  SKUIDividerViewElement *viewElement
 @property  NSString *dividerTitle

  // instance methods
  -[SKUIDividerPageComponent .cxx_destruct]
  -[SKUIDividerPageComponent componentType]
  -[SKUIDividerPageComponent dividerTitle]
  -[SKUIDividerPageComponent initWithCustomPageContext:]
  -[SKUIDividerPageComponent initWithViewElement:]
  -[SKUIDividerPageComponent initWithDividerTitle:]


SKUIAbstractEntityProviderViewElement : SKUIViewElement
 @property  NSString *entityTypeString
 @property  NSArray *prefetchedProperties
 @property  SKUILimitListViewElement *limitListViewElement
 @property  SKUIPredicateListViewElement *predicateListViewElement
 @property  SKUISortDescriptorListViewElement *sortDescriptorListViewElement

  // instance methods
  -[SKUIAbstractEntityProviderViewElement .cxx_destruct]
  -[SKUIAbstractEntityProviderViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIAbstractEntityProviderViewElement applyUpdatesWithElement:]
  -[SKUIAbstractEntityProviderViewElement predicateListViewElement]
  -[SKUIAbstractEntityProviderViewElement entityTypeString]
  -[SKUIAbstractEntityProviderViewElement prefetchedProperties]
  -[SKUIAbstractEntityProviderViewElement limitListViewElement]
  -[SKUIAbstractEntityProviderViewElement sortDescriptorListViewElement]


SKUIPinnedFooterView : UITableViewHeaderFooterView /usr/lib/libobjc.A.dylib
 @property  UITextView *textView
 @property  NSAttributedString *attributedText
 @property  double horizontalPadding

  // instance methods
  -[SKUIPinnedFooterView .cxx_destruct]
  -[SKUIPinnedFooterView textView]
  -[SKUIPinnedFooterView setTextView:]
  -[SKUIPinnedFooterView initWithFrame:]
  -[SKUIPinnedFooterView layoutSubviews]
  -[SKUIPinnedFooterView setAttributedText:]
  -[SKUIPinnedFooterView attributedText]
  -[SKUIPinnedFooterView setHorizontalPadding:]
  -[SKUIPinnedFooterView horizontalPadding]
  -[SKUIPinnedFooterView _initializeTextView]
  -[SKUIPinnedFooterView _configureTextViewTextStyling]


SKUISearchBarViewElement : SKUIInputViewElement
 @property  NSString *accessoryText
 @property  SKUIViewElementText *defaultText
 @property  NSString *placeholderString
 @property  NSString *searchHintsURLString
 @property  NSString *trendingSearchURLString

  // instance methods
  -[SKUISearchBarViewElement .cxx_destruct]
  -[SKUISearchBarViewElement elementType]
  -[SKUISearchBarViewElement placeholderString]
  -[SKUISearchBarViewElement defaultText]
  -[SKUISearchBarViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUISearchBarViewElement applyUpdatesWithElement:]
  -[SKUISearchBarViewElement accessoryText]
  -[SKUISearchBarViewElement searchHintsURLString]
  -[SKUISearchBarViewElement trendingSearchURLString]
  -[SKUISearchBarViewElement pageComponentType]


SKUIReviewListTitleView : SKUIViewReuseView <SKUIViewElementView>
 @property  {UIEdgeInsets=dddd} contentInset
 @property  SKUIAttributedStringView *titleView
 @property  SKUIAttributedStringView *dateView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIReviewListTitleView prefetchResourcesForViewElement:reason:context:]
  +[SKUIReviewListTitleView preferredSizeForViewElement:context:]
  +[SKUIReviewListTitleView requestLayoutForViewElement:width:context:]
  +[SKUIReviewListTitleView sizeThatFitsWidth:viewElement:context:]
  +[SKUIReviewListTitleView _dateLabelForViewElement:]
  +[SKUIReviewListTitleView _attributedStringForDateLabel:context:]
  +[SKUIReviewListTitleView _textLabelForViewElement:]
  +[SKUIReviewListTitleView _attributedStringForTitleLabel:context:]

  // instance methods
  -[SKUIReviewListTitleView .cxx_destruct]
  -[SKUIReviewListTitleView initWithFrame:]
  -[SKUIReviewListTitleView sizeThatFits:]
  -[SKUIReviewListTitleView layoutSubviews]
  -[SKUIReviewListTitleView setContentInset:]
  -[SKUIReviewListTitleView titleView]
  -[SKUIReviewListTitleView setTitleView:]
  -[SKUIReviewListTitleView contentInset]
  -[SKUIReviewListTitleView dateView]
  -[SKUIReviewListTitleView setDateView:]
  -[SKUIReviewListTitleView reloadWithViewElement:width:context:]
  -[SKUIReviewListTitleView setImage:forArtworkRequest:context:]
  -[SKUIReviewListTitleView updateWithItemState:context:animated:]
  -[SKUIReviewListTitleView viewForElementIdentifier:]


SKUITrailersCell : UICollectionViewCell /usr/lib/libobjc.A.dylib
 @property  UIImage *image
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} imageFrame
 @property  NSString *title
 @property  NSString *subtitle

  // instance methods
  -[SKUITrailersCell .cxx_destruct]
  -[SKUITrailersCell title]
  -[SKUITrailersCell setTitle:]
  -[SKUITrailersCell prepareForReuse]
  -[SKUITrailersCell image]
  -[SKUITrailersCell setImage:]
  -[SKUITrailersCell subtitle]
  -[SKUITrailersCell setBackgroundColor:]
  -[SKUITrailersCell initWithFrame:]
  -[SKUITrailersCell layoutSubviews]
  -[SKUITrailersCell setSubtitle:]
  -[SKUITrailersCell imageFrame]


SKUIItemOffer : NSObject /usr/lib/libc++.1.dylib <SKUICacheCoding>
 @property  NSString *actionParameters
 @property  NSString *buttonText
 @property  NSString *confirmationText
 @property  long long fileSize
 @property  NSString *fileSizeText
 @property  NSDictionary *lookupDictionary
 @property  long long offerType
 @property  float price
 @property  BOOL shouldEnableMessagesExtension
 @property  NSString *variantIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *cacheRepresentation

  // instance methods
  -[SKUIItemOffer .cxx_destruct]
  -[SKUIItemOffer fileSize]
  -[SKUIItemOffer price]
  -[SKUIItemOffer buttonText]
  -[SKUIItemOffer variantIdentifier]
  -[SKUIItemOffer offerType]
  -[SKUIItemOffer initWithLookupDictionary:]
  -[SKUIItemOffer lookupDictionary]
  -[SKUIItemOffer initWithButtonText:]
  -[SKUIItemOffer initWithCacheRepresentation:]
  -[SKUIItemOffer confirmationText]
  -[SKUIItemOffer cacheRepresentation]
  -[SKUIItemOffer _setFileSizeWithAssets:]
  -[SKUIItemOffer _setFileSizeWithFlavors:]
  -[SKUIItemOffer initWithOfferDictionary:]
  -[SKUIItemOffer initWithRedownloadToken:]
  -[SKUIItemOffer fileSizeText]
  -[SKUIItemOffer _addActionParameterWithName:value:]
  -[SKUIItemOffer _setFileSizeWithDeviceSizes:]
  -[SKUIItemOffer actionParameters]
  -[SKUIItemOffer shouldEnableMessagesExtension]


SKUIItemStateCenter : NSObject /usr/lib/libc++.1.dylib <SSDownloadManagerObserver, ASDJobManagerObserver, BLDownloadQueueObserving>
 @property  SSSoftwareUpdatesStore *appUpdatesStore
 @property  ASDSoftwareUpdatesStore *appstoredUpdatesStore
 @property  BOOL applicationInstallRestricted
 @property  BOOL gratisEligible
 @property  long long parentalControlsRank
 @property  BOOL runningInStoreDemoMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIItemStateCenter defaultCenter]

  // instance methods
  -[SKUIItemStateCenter init]
  -[SKUIItemStateCenter dealloc]
  -[SKUIItemStateCenter .cxx_destruct]
  -[SKUIItemStateCenter addObserver:]
  -[SKUIItemStateCenter removeObserver:]
  -[SKUIItemStateCenter downloadManager:downloadStatesDidChange:]
  -[SKUIItemStateCenter downloadManagerDownloadsDidChange:]
  -[SKUIItemStateCenter isRunningInStoreDemoMode]
  -[SKUIItemStateCenter _mediaLibraryDidChangeNotification:]
  -[SKUIItemStateCenter addDownloads:]
  -[SKUIItemStateCenter reloadFromServer]
  -[SKUIItemStateCenter _setDownloads:]
  -[SKUIItemStateCenter downloadQueue:downloadStatesDidChange:]
  -[SKUIItemStateCenter downloadQueue:downloadStates:didCompleteWithError:]
  -[SKUIItemStateCenter getUpdatesWithCompletionBlock:]
  -[SKUIItemStateCenter reloadFromServerWithCompletionBlock:]
  -[SKUIItemStateCenter parentalControlsRank]
  -[SKUIItemStateCenter _purchaseHistoryDatabase]
  -[SKUIItemStateCenter jobManager:changedJobs:]
  -[SKUIItemStateCenter jobManager:completedJobs:]
  -[SKUIItemStateCenter jobManager:updatedProgressOfJobs:]
  -[SKUIItemStateCenter jobManager:updatedStateOfJobs:]
  -[SKUIItemStateCenter _jobManager]
  -[SKUIItemStateCenter evaluatePurchaseResponseForRentals:]
  -[SKUIItemStateCenter _reloadAppUpdatesStore]
  -[SKUIItemStateCenter _reloadDownloadManager]
  -[SKUIItemStateCenter _reloadJobManager]
  -[SKUIItemStateCenter _reloadPurchaseHistory]
  -[SKUIItemStateCenter _reloadSoftwareLibrary]
  -[SKUIItemStateCenter _restrictionsChangedNotification:]
  -[SKUIItemStateCenter _storefrontDidChangeNotification:]
  -[SKUIItemStateCenter _notifyObserversOfStateChanges:]
  -[SKUIItemStateCenter _fireFinishLoadBlocksIfNecessary]
  -[SKUIItemStateCenter isApplicationInstallRestricted]
  -[SKUIItemStateCenter stateForItemWithIdentifier:]
  -[SKUIItemStateCenter performActionForItem:clientContext:completionBlock:]
  -[SKUIItemStateCenter performActionForItem:offer:clientContext:completionBlock:]
  -[SKUIItemStateCenter performActionForSoftwareItem:offer:clientContext:completionBlock:]
  -[SKUIItemStateCenter metricsActionTypeForItem:]
  -[SKUIItemStateCenter purchaseItem:offer:clientContext:completionBlock:]
  -[SKUIItemStateCenter cancelDownloadForItemWithIdentifier:]
  -[SKUIItemStateCenter purchaseSoftwareItem:offer:clientContext:completionBlock:]
  -[SKUIItemStateCenter _newPurchasesWithBundleItem:bundleOffer:]
  -[SKUIItemStateCenter _newPurchaseWithItem:offer:]
  -[SKUIItemStateCenter _performPurchases:hasBundlePurchase:withClientContext:completionBlock:]
  -[SKUIItemStateCenter _newPurchasesForSoftwareWithBundleItem:bundleOffer:]
  -[SKUIItemStateCenter _newSoftwarePurchaseWithItem:offer:]
  -[SKUIItemStateCenter _performSoftwarePurchases:withClientContext:completionBlock:]
  -[SKUIItemStateCenter purchaseItems:withClientContext:completionBlock:]
  -[SKUIItemStateCenter _newPurchasesWithItems:]
  -[SKUIItemStateCenter _gratisStateIsValid]
  -[SKUIItemStateCenter _setGratisIdentifiers:error:]
  -[SKUIItemStateCenter _reloadStateForObservedMediaLibraryItems]
  -[SKUIItemStateCenter _addState:forItemIdentifier:]
  -[SKUIItemStateCenter _notifyObserversOfStateChange:]
  -[SKUIItemStateCenter _removeState:forItemIdentifier:]
  -[SKUIItemStateCenter _appstoredUpdatesStore]
  -[SKUIItemStateCenter _reloadMediaLibraryStateForItems:]
  -[SKUIItemStateCenter _setStateFlag:forItemsWithIdentifiers:sendNotification:]
  -[SKUIItemStateCenter stateForItemWithStoreIdentifier:]
  -[SKUIItemStateCenter appstoredUpdatesStore]
  -[SKUIItemStateCenter _setAvailableAppstoredUpdatesWithUpdates:decrementLoadCount:]
  -[SKUIItemStateCenter performActionForLibraryItem:]
  -[SKUIItemStateCenter _downloadPhaseForJobPhase:]
  -[SKUIItemStateCenter _copyItemsStatesForLibraryItems:]
  -[SKUIItemStateCenter _notifyObserversOfMediaLibraryChange]
  -[SKUIItemStateCenter _notifyObserversOfRestrictionsChange]
  -[SKUIItemStateCenter _appstoredUpdatesStoreChangeNotification:]
  -[SKUIItemStateCenter _enumerateAvailableItemsForLibraryItems:usingBlock:]
  -[SKUIItemStateCenter _isPurchaseForOffDeviceContent:]
  -[SKUIItemStateCenter _replacePurchasingItem:withDownloadIDs:]
  -[SKUIItemStateCenter _notifyObserversOfPurchasesResponses:]
  -[SKUIItemStateCenter _removePurchasingItemsForPurchases:]
  -[SKUIItemStateCenter _notifyObserversOfSoftwarePurchasesResponses:]
  -[SKUIItemStateCenter _updatesSoftwarePurchasingItemsForPurchases:purchaseWasSuccessful:]
  -[SKUIItemStateCenter _setJobs:]
  -[SKUIItemStateCenter _setPurchaseHistoryItemsWithIdentifiers:]
  -[SKUIItemStateCenter _setFirstPartyRemovableItemsIdentifiers:]
  -[SKUIItemStateCenter _setPurchaseHistoryVPPItemsWithIdentifiers:]
  -[SKUIItemStateCenter _setInstalledItems:]
  -[SKUIItemStateCenter _setStateFlag:forOnlyItemsWithIdentifiers:sendNotification:]
  -[SKUIItemStateCenter addMediaLibrary:]
  -[SKUIItemStateCenter finishLoadingWithCompletionBlock:]
  -[SKUIItemStateCenter isGratisEligible]
  -[SKUIItemStateCenter isItemRestrictedWithParentalControlsRank:]
  -[SKUIItemStateCenter performActionForItem:withCompletionBlock:]
  -[SKUIItemStateCenter performActionForItem:clientContext:]
  -[SKUIItemStateCenter purchaseItems:withCompletionBlock:]
  -[SKUIItemStateCenter reloadGratisEligibilityWithBundleIdentifiers:clientContext:]
  -[SKUIItemStateCenter reloadMediaLibrary:]
  -[SKUIItemStateCenter removeMediaLibrary:]
  -[SKUIItemStateCenter addManifestDownloadWithURL:placeholderMetadata:]
  -[SKUIItemStateCenter appUpdatesStore]
  -[SKUIItemStateCenter beginObservingLibraryItems:]
  -[SKUIItemStateCenter endObservingLibraryItems:]
  -[SKUIItemStateCenter getSoftwareUpdatesWithCompletionBlock:]
  -[SKUIItemStateCenter reloadSoftwareUpdatesFromServerWithCompletionBlock:]
  -[SKUIItemStateCenter findLibraryItemsForContentIdentifiers:options:completionBlock:]
  -[SKUIItemStateCenter gratisEligibleItemIdentifiers]
  -[SKUIItemStateCenter purchaseTone:withProperties:clientContext:completionBlock:]
  -[SKUIItemStateCenter addRelationshipForParentAdamId:withChildAdamIds:]
  -[SKUIItemStateCenter removeRelationshipsForParentAdamId:]
  -[SKUIItemStateCenter _updatesStoreChangeNotification:]


SKUIMoreNavigationController : UIMoreNavigationController /usr/lib/libobjc.A.dylib
 @property  <SKUIMoreNavigationControllerDelegate> *storeKitDelegate

  // class methods
  +[SKUIMoreNavigationController _moreListControllerClass]

  // instance methods
  -[SKUIMoreNavigationController .cxx_destruct]
  -[SKUIMoreNavigationController supportedInterfaceOrientations]
  -[SKUIMoreNavigationController pushViewController:animated:]
  -[SKUIMoreNavigationController didShowViewController:animated:]
  -[SKUIMoreNavigationController displayedViewController]
  -[SKUIMoreNavigationController setDisplayedViewController:]
  -[SKUIMoreNavigationController storeKitDelegate]
  -[SKUIMoreNavigationController setStoreKitDelegate:]


SKUIMoreListController : UIMoreListController /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIMoreListController initWithNibName:bundle:]
  -[SKUIMoreListController supportedInterfaceOrientations]
  -[SKUIMoreListController tableView:didSelectRowAtIndexPath:]


SKUIArtwork : NSObject /usr/lib/libc++.1.dylib <SKUICacheCoding, NSSecureCoding>
 @property  {CGSize=dd} size
 @property  long long height
 @property  long long width
 @property  NSURL *URL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *cacheRepresentation

  // class methods
  +[SKUIArtwork supportsSecureCoding]

  // instance methods
  -[SKUIArtwork isEqual:]
  -[SKUIArtwork copyWithZone:]
  -[SKUIArtwork encodeWithCoder:]
  -[SKUIArtwork initWithCoder:]
  -[SKUIArtwork .cxx_destruct]
  -[SKUIArtwork size]
  -[SKUIArtwork URL]
  -[SKUIArtwork width]
  -[SKUIArtwork height]
  -[SKUIArtwork _lookupDictionary]
  -[SKUIArtwork initWithArtworkDictionary:]
  -[SKUIArtwork initWithCacheRepresentation:]
  -[SKUIArtwork cacheRepresentation]
  -[SKUIArtwork initWithURL:size:]


SKUIJSRestrictions : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIJSRestrictions>
  // instance methods
  -[SKUIJSRestrictions .cxx_destruct]
  -[SKUIJSRestrictions isExplicitContentRestrictedByDefaultInCurrentStoreFront:]
  -[SKUIJSRestrictions isExplicitContentDisallowedInCurrentStoreFront:]
  -[SKUIJSRestrictions isRestrictionsPasscodeSet:]
  -[SKUIJSRestrictions setAllowExplicitContent]
  -[SKUIJSRestrictions didDisplayExplicitRestrictionAlertOfType:]
  -[SKUIJSRestrictions _explicitRestrictionAlertTypeForTypeString:]
  -[SKUIJSRestrictions isRestrictedApp:]
  -[SKUIJSRestrictions shouldDisplayExplicitRestrictionAlertOfType::]
  -[SKUIJSRestrictions presentExplicitRestrictionAlertIfNeededOfType::]
  -[SKUIJSRestrictions initWithAppContext:clientContext:]


SKUIItem : NSObject /usr/lib/libc++.1.dylib <SKUICacheCoding, SSMetricsEventFieldProvider>
 @property  NSString *_downloadKind
 @property  {_NSRange=QQ} ageBandRange
 @property  NSString *artistName
 @property  NSString *bundleIdentifier
 @property  NSURL *largestArtworkURL
 @property  <SKUIArtworkProviding> *artworksProvider
 @property  UIImage *artworkImage
 @property  NSArray *childItemIdentifiers
 @property  NSArray *loadedChildItems
 @property  long long numberOfChildItems
 @property  unsigned long deviceFamilies
 @property  BOOL prerenderedArtwork
 @property  NSString *categoryName
 @property  NSString *collectionName
 @property  NSString *editorialBadge
 @property  long long itemIdentifier
 @property  long long itemKind
 @property  NSString *itemKindString
 @property  long long numberOfUserRatings
 @property  long long parentalControlsRank
 @property  SKUIItemOffer *primaryItemOffer
 @property  NSString *productPageURLString
 @property  NSArray *requiredCapabilities
 @property  SKUIStoreIdentifier *storeIdentifier
 @property  float userRating
 @property  NSString *title
 @property  long long versionIdentifier
 @property  NSString *versionString
 @property  NSArray *videos
 @property  BOOL hasInAppPurchases
 @property  BOOL hasMessagesExtension
 @property  BOOL isHiddenFromSpringBoard
 @property  BOOL gameControllerSupported
 @property  BOOL requiresGameController
 @property  BOOL newsstandApp
 @property  long long newsstandBindingEdge
 @property  long long newsstandBindingType
 @property  <SKUIArtworkProviding> *newsstandArtworks
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *cacheRepresentation

  // instance methods
  -[SKUIItem isEqual:]
  -[SKUIItem .cxx_destruct]
  -[SKUIItem bundleIdentifier]
  -[SKUIItem itemIdentifier]
  -[SKUIItem setItemIdentifier:]
  -[SKUIItem title]
  -[SKUIItem setTitle:]
  -[SKUIItem isNewsstandApp]
  -[SKUIItem versionString]
  -[SKUIItem categoryName]
  -[SKUIItem versionIdentifier]
  -[SKUIItem storeIdentifier]
  -[SKUIItem setStoreIdentifier:]
  -[SKUIItem requiredCapabilities]
  -[SKUIItem deviceFamilies]
  -[SKUIItem artistName]
  -[SKUIItem userRating]
  -[SKUIItem collectionName]
  -[SKUIItem itemKind]
  -[SKUIItem initWithLookupDictionary:]
  -[SKUIItem lookupDictionary]
  -[SKUIItem setItemKind:]
  -[SKUIItem numberOfUserRatings]
  -[SKUIItem videos]
  -[SKUIItem hasMessagesExtension]
  -[SKUIItem valueForMetricsField:]
  -[SKUIItem initWithCacheRepresentation:]
  -[SKUIItem _downloadKind]
  -[SKUIItem parentalControlsRank]
  -[SKUIItem isHiddenFromSpringBoard]
  -[SKUIItem productPageURLString]
  -[SKUIItem cacheRepresentation]
  -[SKUIItem primaryItemOffer]
  -[SKUIItem hasPrerenderedArtwork]
  -[SKUIItem artworkURLForSize:]
  -[SKUIItem childItemIdentifiers]
  -[SKUIItem loadedChildItems]
  -[SKUIItem artworksProvider]
  -[SKUIItem ageBandRange]
  -[SKUIItem hasInAppPurchases]
  -[SKUIItem itemKindString]
  -[SKUIItem numberOfChildItems]
  -[SKUIItem newsstandArtworks]
  -[SKUIItem initContainerItemWithItem:]
  -[SKUIItem artworkImage]
  -[SKUIItem childItemForIdentifier:]
  -[SKUIItem largestArtworkURL]
  -[SKUIItem addItemOfferParameterWithName:value:]
  -[SKUIItem _setHasInAppPurchases:]
  -[SKUIItem editorialBadge]
  -[SKUIItem gameControllerSupported]
  -[SKUIItem requiresGameController]
  -[SKUIItem newsstandBindingEdge]
  -[SKUIItem newsstandBindingType]


SKUIRedeemResultMessageView : UIView /usr/lib/libobjc.A.dylib
 @property  NSString *message
 @property  NSString *title

  // instance methods
  -[SKUIRedeemResultMessageView .cxx_destruct]
  -[SKUIRedeemResultMessageView title]
  -[SKUIRedeemResultMessageView setTitle:]
  -[SKUIRedeemResultMessageView message]
  -[SKUIRedeemResultMessageView setMessage:]
  -[SKUIRedeemResultMessageView setBackgroundColor:]
  -[SKUIRedeemResultMessageView sizeThatFits:]
  -[SKUIRedeemResultMessageView layoutSubviews]


SKUIBackgroundViewElement : SKUIViewElement

SKUICountdownViewTimerTarget : NSObject /usr/lib/libc++.1.dylib
 @property  @? actionBlock

  // instance methods
  -[SKUICountdownViewTimerTarget .cxx_destruct]
  -[SKUICountdownViewTimerTarget action]
  -[SKUICountdownViewTimerTarget actionBlock]
  -[SKUICountdownViewTimerTarget setActionBlock:]


SKUICountdownView : UIView /usr/lib/libobjc.A.dylib
 @property  SKUICountdown *countdown
 @property  SKUIClientContext *clientContext
 @property  UIImage *backgroundImage

  // instance methods
  -[SKUICountdownView dealloc]
  -[SKUICountdownView .cxx_destruct]
  -[SKUICountdownView stop]
  -[SKUICountdownView start]
  -[SKUICountdownView backgroundImage]
  -[SKUICountdownView setBackgroundImage:]
  -[SKUICountdownView setFrame:]
  -[SKUICountdownView layoutSubviews]
  -[SKUICountdownView _currentValue]
  -[SKUICountdownView clientContext]
  -[SKUICountdownView _reload]
  -[SKUICountdownView _setCountdownWithResponse:error:]
  -[SKUICountdownView _reloadFontSizes]
  -[SKUICountdownView _reloadNumberFlapped]
  -[SKUICountdownView _reloadNumber]
  -[SKUICountdownView _reloadTimeFlapped]
  -[SKUICountdownView _reloadDateDescriptions:]
  -[SKUICountdownView _reloadTime]
  -[SKUICountdownView _newNumberSeparatorLabel]
  -[SKUICountdownView _newFlapLabelWithPosition:]
  -[SKUICountdownView _currentRemainingDays:hours:minutes:seconds:]
  -[SKUICountdownView _newDateDescriptionLabel]
  -[SKUICountdownView _newDateLabel]
  -[SKUICountdownView initWithCountdown:clientContext:]
  -[SKUICountdownView countdown]


SKUIUber : NSObject /usr/lib/libc++.1.dylib
 @property  <SKUIArtworkProviding> *artworkProvider
 @property  SKUIColorScheme *colorScheme
 @property  NSString *text

  // instance methods
  -[SKUIUber .cxx_destruct]
  -[SKUIUber text]
  -[SKUIUber colorScheme]
  -[SKUIUber artworkProvider]
  -[SKUIUber initWithUberDictionary:]


SKUIColorScheme : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  long long schemeStyle
 @property  UIColor *backgroundColor
 @property  UIColor *highlightedTextColor
 @property  UIColor *primaryTextColor
 @property  UIColor *secondaryTextColor

  // class methods
  +[SKUIColorScheme supportsSecureCoding]

  // instance methods
  -[SKUIColorScheme copyWithZone:]
  -[SKUIColorScheme encodeWithCoder:]
  -[SKUIColorScheme initWithCoder:]
  -[SKUIColorScheme .cxx_destruct]
  -[SKUIColorScheme backgroundColor]
  -[SKUIColorScheme setBackgroundColor:]
  -[SKUIColorScheme setHighlightedTextColor:]
  -[SKUIColorScheme highlightedTextColor]
  -[SKUIColorScheme setPrimaryTextColor:]
  -[SKUIColorScheme setSecondaryTextColor:]
  -[SKUIColorScheme primaryTextColor]
  -[SKUIColorScheme secondaryTextColor]
  -[SKUIColorScheme initWithColorSchemeDictionary:]
  -[SKUIColorScheme schemeStyle]


SKUILockupMetadataView : UIView /usr/lib/libobjc.A.dylib
 @property  SKUIClientContext *clientContext
 @property  unsigned long visibleFields
 @property  NSString *artistName
 @property  NSString *editorialBadgeString
 @property  NSString *categoryString
 @property  NSString *itemCountString
 @property  NSString *itemOfferString
 @property  NSString *releaseDateString
 @property  NSString *title
 @property  long long numberOfUserRatings
 @property  float userRating
 @property  UIColor *primaryTextColor

  // class methods
  +[SKUILockupMetadataView maximumHeightWithVisibleFields:]

  // instance methods
  -[SKUILockupMetadataView .cxx_destruct]
  -[SKUILockupMetadataView title]
  -[SKUILockupMetadataView setTitle:]
  -[SKUILockupMetadataView setBackgroundColor:]
  -[SKUILockupMetadataView initWithFrame:]
  -[SKUILockupMetadataView sizeThatFits:]
  -[SKUILockupMetadataView drawRect:]
  -[SKUILockupMetadataView clientContext]
  -[SKUILockupMetadataView setClientContext:]
  -[SKUILockupMetadataView artistName]
  -[SKUILockupMetadataView setArtistName:]
  -[SKUILockupMetadataView userRating]
  -[SKUILockupMetadataView setUserRating:]
  -[SKUILockupMetadataView primaryTextColor]
  -[SKUILockupMetadataView numberOfUserRatings]
  -[SKUILockupMetadataView categoryString]
  -[SKUILockupMetadataView setItemCountString:]
  -[SKUILockupMetadataView releaseDateString]
  -[SKUILockupMetadataView setReleaseDateString:]
  -[SKUILockupMetadataView setColoringWithColorScheme:]
  -[SKUILockupMetadataView _newDefaultLabel]
  -[SKUILockupMetadataView _reloadUserRatingViews]
  -[SKUILockupMetadataView _decimalNumberFormatter]
  -[SKUILockupMetadataView editorialBadgeString]
  -[SKUILockupMetadataView itemCountString]
  -[SKUILockupMetadataView itemOfferString]
  -[SKUILockupMetadataView setEditorialBadgeString:]
  -[SKUILockupMetadataView setCategoryString:]
  -[SKUILockupMetadataView setItemOfferString:]
  -[SKUILockupMetadataView setNumberOfUserRatings:]
  -[SKUILockupMetadataView setVisibleFields:]
  -[SKUILockupMetadataView visibleFields]


SKUIReviewInAppRatingPresentationController : UIPresentationController /usr/lib/libobjc.A.dylib <UIAdaptivePresentationControllerDelegate>
 @property  UIView *dimmingView
 @property  BOOL constraintsPrepared
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIReviewInAppRatingPresentationController .cxx_destruct]
  -[SKUIReviewInAppRatingPresentationController initWithPresentedViewController:presentingViewController:]
  -[SKUIReviewInAppRatingPresentationController _prepareDimmingViewIfNecessary]
  -[SKUIReviewInAppRatingPresentationController _prepareConstraintsIfNecessary]
  -[SKUIReviewInAppRatingPresentationController containerViewDidLayoutSubviews]
  -[SKUIReviewInAppRatingPresentationController adaptivePresentationStyleForPresentationController:]
  -[SKUIReviewInAppRatingPresentationController presentationController:viewControllerForAdaptivePresentationStyle:]
  -[SKUIReviewInAppRatingPresentationController adaptivePresentationStyle]
  -[SKUIReviewInAppRatingPresentationController containerViewWillLayoutSubviews]
  -[SKUIReviewInAppRatingPresentationController _frameForTransitionViewInPresentationSuperview:]
  -[SKUIReviewInAppRatingPresentationController presentationTransitionWillBegin]
  -[SKUIReviewInAppRatingPresentationController constraintsPrepared]
  -[SKUIReviewInAppRatingPresentationController setDimmingView:]
  -[SKUIReviewInAppRatingPresentationController dimmingView]
  -[SKUIReviewInAppRatingPresentationController shouldRemovePresentersView]
  -[SKUIReviewInAppRatingPresentationController setConstraintsPrepared:]


SKUIStackedPushTransition : NSObject /usr/lib/libc++.1.dylib <UIViewControllerAnimatedTransitioning>
 @property  SKUIStackedBar *fromBar
 @property  SKUIStackedBar *toBar
 @property  double split
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIStackedPushTransition .cxx_destruct]
  -[SKUIStackedPushTransition transitionDuration:]
  -[SKUIStackedPushTransition animateTransition:]
  -[SKUIStackedPushTransition split]
  -[SKUIStackedPushTransition setSplit:]
  -[SKUIStackedPushTransition fromBar]
  -[SKUIStackedPushTransition setFromBar:]
  -[SKUIStackedPushTransition toBar]
  -[SKUIStackedPushTransition setToBar:]


SKUIStackedPopTransition : NSObject /usr/lib/libc++.1.dylib <UIViewControllerAnimatedTransitioning>
 @property  SKUIStackedBar *fromBar
 @property  SKUIStackedBar *toBar
 @property  double split
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIStackedPopTransition .cxx_destruct]
  -[SKUIStackedPopTransition transitionDuration:]
  -[SKUIStackedPopTransition animateTransition:]
  -[SKUIStackedPopTransition split]
  -[SKUIStackedPopTransition setSplit:]
  -[SKUIStackedPopTransition fromBar]
  -[SKUIStackedPopTransition setFromBar:]
  -[SKUIStackedPopTransition toBar]
  -[SKUIStackedPopTransition setToBar:]


SKUISettingsHeaderFooterDescription : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SKUISettingsHeaderFooterDescription _settingsHeaderFooterDescriptionWithHeaderElement:]
  +[SKUISettingsHeaderFooterDescription _settingsHeaderFooterDescriptionWithFooterElement:]
  +[SKUISettingsHeaderFooterDescription settingsHeaderFooterDescriptionWithViewElement:]
  +[SKUISettingsHeaderFooterDescription viewClassForSettingsHeaderFooterDescription:]

  // instance methods
  -[SKUISettingsHeaderFooterDescription .cxx_destruct]
  -[SKUISettingsHeaderFooterDescription viewElement]
  -[SKUISettingsHeaderFooterDescription initWithViewElement:]
  -[SKUISettingsHeaderFooterDescription _viewClassForSettingsHeaderFooterDescription:]


SKUIToastPresentationWindow : UIApplicationRotationFollowingWindow /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIToastPresentationWindow init]
  -[SKUIToastPresentationWindow presentViewController:animated:completion:]
  -[SKUIToastPresentationWindow _presentationViewController]
  -[SKUIToastPresentationWindow isInternalWindow]
  -[SKUIToastPresentationWindow presentAlertController:animated:completion:]


SKUIArtworkList : NSObject /usr/lib/libc++.1.dylib <SKUIArtworkProviding>
 @property  NSArray *_lookupArray
 @property  NSArray *artworks
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *cacheRepresentation
 @property  SKUIArtwork *largestArtwork
 @property  SKUIArtwork *smallestArtwork

  // class methods
  +[SKUIArtworkList supportsSecureCoding]
  +[SKUIArtworkList artworkForSize:artworkDictionaries:]
  +[SKUIArtworkList canHandleArtworkFormat:]

  // instance methods
  -[SKUIArtworkList isEqual:]
  -[SKUIArtworkList copyWithZone:]
  -[SKUIArtworkList encodeWithCoder:]
  -[SKUIArtworkList initWithCoder:]
  -[SKUIArtworkList .cxx_destruct]
  -[SKUIArtworkList hasArtwork]
  -[SKUIArtworkList artworks]
  -[SKUIArtworkList setArtworks:]
  -[SKUIArtworkList initWithCacheRepresentation:]
  -[SKUIArtworkList artworkForSize:]
  -[SKUIArtworkList cacheRepresentation]
  -[SKUIArtworkList artworkURLForSize:]
  -[SKUIArtworkList largestArtwork]
  -[SKUIArtworkList _lookupArray]
  -[SKUIArtworkList bestArtworkForSize:]
  -[SKUIArtworkList artworkWithWidth:]
  -[SKUIArtworkList bestArtworkForScaledSize:]
  -[SKUIArtworkList preferredExactArtworkForSize:]
  -[SKUIArtworkList smallestArtwork]
  -[SKUIArtworkList initWithArtworkListArray:]
  -[SKUIArtworkList initWithLookupArray:]


SKUIDynamicPageSectionIndexMapper : NSObject /usr/lib/libc++.1.dylib
 @property  <SKUIEntityProviding> *entityProvider
 @property  long long numberOfSections
 @property  long long totalNumberOfEntities

  // instance methods
  -[SKUIDynamicPageSectionIndexMapper dealloc]
  -[SKUIDynamicPageSectionIndexMapper .cxx_destruct]
  -[SKUIDynamicPageSectionIndexMapper reloadData]
  -[SKUIDynamicPageSectionIndexMapper numberOfSections]
  -[SKUIDynamicPageSectionIndexMapper totalNumberOfEntities]
  -[SKUIDynamicPageSectionIndexMapper entityProvider]
  -[SKUIDynamicPageSectionIndexMapper setEntityProvider:]
  -[SKUIDynamicPageSectionIndexMapper entityIndexPathForGlobalIndex:]
  -[SKUIDynamicPageSectionIndexMapper _loadDataIfNeeded]
  -[SKUIDynamicPageSectionIndexMapper getItem:section:forGlobalIndex:]
  -[SKUIDynamicPageSectionIndexMapper globalIndexForEntityIndexPath:]
  -[SKUIDynamicPageSectionIndexMapper rangeForSectionAtIndex:]


SKUIBannerViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIItemStateCenterObserver>
 @property  SKUIClientContext *clientContext
 @property  <SKUIBannerViewDelegate> *delegate
 @property  NSOperationQueue *resourceOperationQueue
 @property  NSDictionary *scriptContextDictionary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIBannerViewController dealloc]
  -[SKUIBannerViewController delegate]
  -[SKUIBannerViewController setDelegate:]
  -[SKUIBannerViewController .cxx_destruct]
  -[SKUIBannerViewController loadView]
  -[SKUIBannerViewController _itemState]
  -[SKUIBannerViewController _iconImage]
  -[SKUIBannerViewController clientContext]
  -[SKUIBannerViewController setClientContext:]
  -[SKUIBannerViewController _finishWithResponse:error:]
  -[SKUIBannerViewController setScriptContextDictionary:]
  -[SKUIBannerViewController scriptContextDictionary]
  -[SKUIBannerViewController loadWithProductParameters:]
  -[SKUIBannerViewController itemStateCenter:itemStatesChanged:]
  -[SKUIBannerViewController resourceOperationQueue]
  -[SKUIBannerViewController _warmItemStateCenter]
  -[SKUIBannerViewController _closeButtonAction:]
  -[SKUIBannerViewController _bannerViewAction:]
  -[SKUIBannerViewController _reloadBannerView]
  -[SKUIBannerViewController _launchApp]
  -[SKUIBannerViewController _loadImages]
  -[SKUIBannerViewController _itemArtworkContext]
  -[SKUIBannerViewController _launchURL:withBundleIdentifier:]
  -[SKUIBannerViewController _setIcon:error:]
  -[SKUIBannerViewController _screenshotConsumerWithSize:]
  -[SKUIBannerViewController _setScreenshot:forIndex:error:]
  -[SKUIBannerViewController setResourceOperationQueue:]


SKUISettingsTemplateViewElement : SKUIViewElement

SKUIOfferViewElement : SKUIViewElement
 @property  BOOL simpleOffer
 @property  BOOL compactModeEnabled

  // instance methods
  -[SKUIOfferViewElement enumerateChildrenUsingBlock:]
  -[SKUIOfferViewElement pageComponentType]
  -[SKUIOfferViewElement isSimpleOffer]
  -[SKUIOfferViewElement isCompactModeEnabled]


SKUIBannerCloseButton : UIButton /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIBannerCloseButton layoutSubviews]
  -[SKUIBannerCloseButton setHighlighted:]


SKUIBannerView : UIView /usr/lib/libobjc.A.dylib
 @property  SKUIClientContext *clientContext
 @property  UIImage *iconImage
 @property  NSArray *screenshotImages
 @property  NSString *artistName
 @property  NSString *title
 @property  float userRating
 @property  SSLookupItemOffer *itemOffer
 @property  SKUIItemState *itemState
 @property  UIControl *closeButton
 @property  UIControl *itemOfferButton

  // instance methods
  -[SKUIBannerView .cxx_destruct]
  -[SKUIBannerView title]
  -[SKUIBannerView setTitle:]
  -[SKUIBannerView initWithFrame:]
  -[SKUIBannerView sizeThatFits:]
  -[SKUIBannerView layoutSubviews]
  -[SKUIBannerView hitTest:withEvent:]
  -[SKUIBannerView setItemState:]
  -[SKUIBannerView itemState]
  -[SKUIBannerView iconImage]
  -[SKUIBannerView closeButton]
  -[SKUIBannerView setIconImage:]
  -[SKUIBannerView clientContext]
  -[SKUIBannerView setClientContext:]
  -[SKUIBannerView artistName]
  -[SKUIBannerView setArtistName:]
  -[SKUIBannerView userRating]
  -[SKUIBannerView setUserRating:]
  -[SKUIBannerView itemOffer]
  -[SKUIBannerView _newDefaultLabel]
  -[SKUIBannerView itemOfferButton]
  -[SKUIBannerView setScreenshotImages:]
  -[SKUIBannerView setItemOffer:]
  -[SKUIBannerView _reloadItemState]
  -[SKUIBannerView screenshotImages]


SKUIMenuBarTemplateElement : SKUIViewElement
 @property  SKUIViewElement<SKUIMenuBarViewElement> *menuBar
 @property  SKUINavigationBarViewElement *navigationBarElement

  // instance methods
  -[SKUIMenuBarTemplateElement navigationBarElement]
  -[SKUIMenuBarTemplateElement menuBar]
  -[SKUIMenuBarTemplateElement _menuBarChildOfElement:]


SKUIViewReuseView : UIView /usr/lib/libobjc.A.dylib
 @property  NSArray *allExistingViews

  // instance methods
  -[SKUIViewReuseView dealloc]
  -[SKUIViewReuseView .cxx_destruct]
  -[SKUIViewReuseView setBackgroundColor:]
  -[SKUIViewReuseView initWithFrame:]
  -[SKUIViewReuseView modifyUsingBlock:]
  -[SKUIViewReuseView allExistingViews]
  -[SKUIViewReuseView registerClass:forViewWithReuseIdentifier:]
  -[SKUIViewReuseView enumerateExistingViewsForReuseIdentifier:usingBlock:]


SKUIRatingStarsCache : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SKUIRatingStarsCache cacheWithProperties:]

  // instance methods
  -[SKUIRatingStarsCache .cxx_destruct]
  -[SKUIRatingStarsCache initWithProperties:]
  -[SKUIRatingStarsCache ratingStarsImageForRating:]


SKUIAppDeviceConfig : NSObject /usr/lib/libc++.1.dylib <IKAppDeviceConfig>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIAppDeviceConfig timeZone]
  -[SKUIAppDeviceConfig screenSize]
  -[SKUIAppDeviceConfig preferredVideoFormat]
  -[SKUIAppDeviceConfig preferredVideoPreviewFormat]
  -[SKUIAppDeviceConfig systemLanguage]
  -[SKUIAppDeviceConfig storeFrontCountryCode]
  -[SKUIAppDeviceConfig isTimeZoneSet]
  -[SKUIAppDeviceConfig currentSizeClasses]


SKUIVerticalLockupCollectionViewCell : SKUICollectionViewCell <SKUIPerspectiveView, SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIVerticalLockupCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIVerticalLockupCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIVerticalLockupCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIVerticalLockupCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUIVerticalLockupCollectionViewCell maximumPerspectiveHeightForSize:]

  // instance methods
  -[SKUIVerticalLockupCollectionViewCell .cxx_destruct]
  -[SKUIVerticalLockupCollectionViewCell setBackgroundColor:]
  -[SKUIVerticalLockupCollectionViewCell initWithFrame:]
  -[SKUIVerticalLockupCollectionViewCell layoutSubviews]
  -[SKUIVerticalLockupCollectionViewCell setHighlighted:]
  -[SKUIVerticalLockupCollectionViewCell setContentInset:]
  -[SKUIVerticalLockupCollectionViewCell setSelected:]
  -[SKUIVerticalLockupCollectionViewCell applyLayoutAttributes:]
  -[SKUIVerticalLockupCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIVerticalLockupCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIVerticalLockupCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIVerticalLockupCollectionViewCell viewForElementIdentifier:]
  -[SKUIVerticalLockupCollectionViewCell _reloadHighlightImageView]
  -[SKUIVerticalLockupCollectionViewCell setPerspectiveTargetView:]
  -[SKUIVerticalLockupCollectionViewCell setVanishingPoint:]
  -[SKUIVerticalLockupCollectionViewCell updateForChangedDistanceFromVanishingPoint]


SKUIGiftViewController : UINavigationController /usr/lib/libobjc.A.dylib
 @property  SKUIGift *gift
 @property  SKUIClientContext *clientContext
 @property  <SKUIGiftViewControllerDelegate> *giftDelegate
 @property  NSOperationQueue *operationQueue

  // instance methods
  -[SKUIGiftViewController .cxx_destruct]
  -[SKUIGiftViewController operationQueue]
  -[SKUIGiftViewController setOperationQueue:]
  -[SKUIGiftViewController preferredContentSize]
  -[SKUIGiftViewController viewWillDisappear:]
  -[SKUIGiftViewController viewDidLoad]
  -[SKUIGiftViewController supportedInterfaceOrientations]
  -[SKUIGiftViewController viewDidAppear:]
  -[SKUIGiftViewController clientContext]
  -[SKUIGiftViewController setClientContext:]
  -[SKUIGiftViewController _cancelButtonAction:]
  -[SKUIGiftViewController _localizedString:]
  -[SKUIGiftViewController _loadGiftConfiguration]
  -[SKUIGiftViewController _finishAuthenticateWithResponse:error:]
  -[SKUIGiftViewController _finishGiftingWithResult:]
  -[SKUIGiftViewController _configurationDidLoadWithResult:error:]
  -[SKUIGiftViewController _clientContextDidLoadWithContext:error:]
  -[SKUIGiftViewController initWithGift:]
  -[SKUIGiftViewController gift]
  -[SKUIGiftViewController giftDelegate]
  -[SKUIGiftViewController setGiftDelegate:]


SKUIGift : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *totalGiftAmountString
 @property  SKUIGiftTheme *theme
 @property  SKUIItem *item
 @property  long long giftCategory
 @property  NSDate *deliveryDate
 @property  long long giftAmount
 @property  NSString *giftAmountString
 @property  NSString *message
 @property  NSArray *recipientAddresses
 @property  NSString *senderEmailAddress
 @property  NSString *senderName

  // instance methods
  -[SKUIGift copyWithZone:]
  -[SKUIGift .cxx_destruct]
  -[SKUIGift item]
  -[SKUIGift reset]
  -[SKUIGift message]
  -[SKUIGift setMessage:]
  -[SKUIGift recipientAddresses]
  -[SKUIGift initWithItem:]
  -[SKUIGift theme]
  -[SKUIGift setTheme:]
  -[SKUIGift senderEmailAddress]
  -[SKUIGift setRecipientAddresses:]
  -[SKUIGift setSenderEmailAddress:]
  -[SKUIGift deliveryDate]
  -[SKUIGift giftAmount]
  -[SKUIGift senderName]
  -[SKUIGift initWithGiftCategory:]
  -[SKUIGift HTTPBodyDictionary]
  -[SKUIGift setDeliveryDate:]
  -[SKUIGift setGiftAmount:]
  -[SKUIGift giftAmountString]
  -[SKUIGift setGiftAmountString:]
  -[SKUIGift giftCategory]
  -[SKUIGift setSenderName:]
  -[SKUIGift totalGiftAmountString]
  -[SKUIGift setTotalGiftAmountString:]


SKUIDeveloperInfoView : UIView /usr/lib/libobjc.A.dylib
 @property  SKUIClientContext *clientContext
 @property  SKUIDeveloperInfo *developerInfo

  // instance methods
  -[SKUIDeveloperInfoView .cxx_destruct]
  -[SKUIDeveloperInfoView setBackgroundColor:]
  -[SKUIDeveloperInfoView sizeThatFits:]
  -[SKUIDeveloperInfoView layoutSubviews]
  -[SKUIDeveloperInfoView clientContext]
  -[SKUIDeveloperInfoView initWithDeveloperInfo:clientContext:]
  -[SKUIDeveloperInfoView developerInfo]


SKUITomatoRatingViewElement : SKUIViewElement
 @property  long long freshness
 @property  float tomatoRating
 @property  SKUIViewElementText *ratingText

  // instance methods
  -[SKUITomatoRatingViewElement .cxx_destruct]
  -[SKUITomatoRatingViewElement ratingText]
  -[SKUITomatoRatingViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUITomatoRatingViewElement applyUpdatesWithElement:]
  -[SKUITomatoRatingViewElement freshness]
  -[SKUITomatoRatingViewElement tomatoRating]


SKUITextHeaderSettingsHeaderFooterDescriptionView : SKUISettingsHeaderFooterDescriptionView
  // class methods
  +[SKUITextHeaderSettingsHeaderFooterDescriptionView _labelElementsFromViewElement:]
  +[SKUITextHeaderSettingsHeaderFooterDescriptionView _labelWithLabelElements:]
  +[SKUITextHeaderSettingsHeaderFooterDescriptionView _concatenateTextFromLabelElements:]
  +[SKUITextHeaderSettingsHeaderFooterDescriptionView preferredSizeForSettingsHeaderFooterDescription:context:]
  +[SKUITextHeaderSettingsHeaderFooterDescriptionView prefetchResourcesForSettingsHeaderFooterDescription:reason:context:]
  +[SKUITextHeaderSettingsHeaderFooterDescriptionView requestLayoutForSettingsHeaderFooterDescription:width:context:]
  +[SKUITextHeaderSettingsHeaderFooterDescriptionView sizeThatFitsWidth:settingsHeaderFooterDescription:context:]

  // instance methods
  -[SKUITextHeaderSettingsHeaderFooterDescriptionView .cxx_destruct]
  -[SKUITextHeaderSettingsHeaderFooterDescriptionView layoutSubviews]
  -[SKUITextHeaderSettingsHeaderFooterDescriptionView setImage:forArtworkRequest:context:]
  -[SKUITextHeaderSettingsHeaderFooterDescriptionView reloadWithSettingsHeaderFooterDescription:width:context:]


SKUIGiftComposeViewController : SKUIGiftStepViewController <UIPopoverControllerDelegate, UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate>
 @property  UIBarButtonItem *nextButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIGiftComposeViewController dealloc]
  -[SKUIGiftComposeViewController .cxx_destruct]
  -[SKUIGiftComposeViewController loadView]
  -[SKUIGiftComposeViewController popoverControllerShouldDismissPopover:]
  -[SKUIGiftComposeViewController popoverControllerDidDismissPopover:]
  -[SKUIGiftComposeViewController scrollViewDidScroll:]
  -[SKUIGiftComposeViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SKUIGiftComposeViewController scrollViewDidEndDecelerating:]
  -[SKUIGiftComposeViewController scrollViewDidEndScrollingAnimation:]
  -[SKUIGiftComposeViewController viewWillAppear:]
  -[SKUIGiftComposeViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUIGiftComposeViewController _headerView]
  -[SKUIGiftComposeViewController _itemView]
  -[SKUIGiftComposeViewController tableView:numberOfRowsInSection:]
  -[SKUIGiftComposeViewController tableView:cellForRowAtIndexPath:]
  -[SKUIGiftComposeViewController numberOfSectionsInTableView:]
  -[SKUIGiftComposeViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[SKUIGiftComposeViewController tableView:heightForRowAtIndexPath:]
  -[SKUIGiftComposeViewController tableView:heightForHeaderInSection:]
  -[SKUIGiftComposeViewController tableView:viewForHeaderInSection:]
  -[SKUIGiftComposeViewController tableView:didSelectRowAtIndexPath:]
  -[SKUIGiftComposeViewController textFieldShouldReturn:]
  -[SKUIGiftComposeViewController nextButton]
  -[SKUIGiftComposeViewController setNextButton:]
  -[SKUIGiftComposeViewController _cancelAction:]
  -[SKUIGiftComposeViewController _reloadSections]
  -[SKUIGiftComposeViewController initWithGift:configuration:]
  -[SKUIGiftComposeViewController _keyboardChangeNotification:]
  -[SKUIGiftComposeViewController _recipientsDidChangeNotification:]
  -[SKUIGiftComposeViewController _textFieldChangeNotification:]
  -[SKUIGiftComposeViewController _textViewChangeNotification:]
  -[SKUIGiftComposeViewController _textViewDidEndEditingNotification:]
  -[SKUIGiftComposeViewController _nextAction:]
  -[SKUIGiftComposeViewController _setItemImage:error:]
  -[SKUIGiftComposeViewController _validateGiftThrottled:]
  -[SKUIGiftComposeViewController _removeDatePickerIfPossible]
  -[SKUIGiftComposeViewController _showDatePickerForRowAtIndexPath:]
  -[SKUIGiftComposeViewController _pushThemePickerOrShowInvalidAlert]
  -[SKUIGiftComposeViewController _validateGift]
  -[SKUIGiftComposeViewController _itemImage]
  -[SKUIGiftComposeViewController _amountControlAction:]
  -[SKUIGiftComposeViewController _datePickerAction:]
  -[SKUIGiftComposeViewController _showDatePickerPopoverForRowAtIndexPath:]
  -[SKUIGiftComposeViewController _finishValidationWithResponse:error:]
  -[SKUIGiftComposeViewController tableView:giftRecipientCellDidChangeRecipients:]
  -[SKUIGiftComposeViewController tableView:giftRecipientCellDidChangeSize:]
  -[SKUIGiftComposeViewController tableView:giftRecipientCell:didUpdateSearchController:]
  -[SKUIGiftComposeViewController tableView:giftRecipientCell:dismissContactPicker:]
  -[SKUIGiftComposeViewController tableView:giftRecipientCell:presentContactPicker:]


SKUIURLResolverDataConsumer : SSVURLDataConsumer /System/Library/Frameworks/UIKit.framework/UIKit
  // instance methods
  -[SKUIURLResolverDataConsumer objectForData:response:error:]


SKUIURLResolverResponse : NSObject /usr/lib/libc++.1.dylib
 @property  NSData *data
 @property  NSHTTPURLResponse *URLResponse

  // instance methods
  -[SKUIURLResolverResponse .cxx_destruct]
  -[SKUIURLResolverResponse data]
  -[SKUIURLResolverResponse URLResponse]
  -[SKUIURLResolverResponse initWithData:URLResponse:]


SKUITableViewSection : NSObject /usr/lib/libc++.1.dylib
 @property  <SKUITableViewSectionDelegate> *delegate
 @property  BOOL hidesHeaderView
 @property  long long sectionIndex
 @property  long long numberOfRowsInSection

  // instance methods
  -[SKUITableViewSection delegate]
  -[SKUITableViewSection setDelegate:]
  -[SKUITableViewSection .cxx_destruct]
  -[SKUITableViewSection sectionIndex]
  -[SKUITableViewSection setSectionIndex:]
  -[SKUITableViewSection heightForCellInTableView:indexPath:]
  -[SKUITableViewSection numberOfRowsInSection]
  -[SKUITableViewSection tableViewCellForTableView:indexPath:]
  -[SKUITableViewSection tableView:willDisplayCell:forIndexPath:]
  -[SKUITableViewSection headerViewForTableView:]
  -[SKUITableViewSection footerViewForTableView:]
  -[SKUITableViewSection hidesHeaderView]
  -[SKUITableViewSection setHidesHeaderView:]


SKUIInfoViewElement : SKUIViewElement
 @property  SKUILabelViewElement *titleElement
 @property  NSArray *valueElements

  // instance methods
  -[SKUIInfoViewElement titleElement]
  -[SKUIInfoViewElement valueElements]


SKUIDonationResultView : UIView /usr/lib/libobjc.A.dylib
 @property  UIImage *image
 @property  NSString *message
 @property  NSString *title

  // instance methods
  -[SKUIDonationResultView .cxx_destruct]
  -[SKUIDonationResultView title]
  -[SKUIDonationResultView setTitle:]
  -[SKUIDonationResultView image]
  -[SKUIDonationResultView setImage:]
  -[SKUIDonationResultView message]
  -[SKUIDonationResultView setMessage:]
  -[SKUIDonationResultView layoutSubviews]


SKUIImageViewElement : SKUIViewElement
 @property  float layerShadowOpacity
 @property  {CGSize=dd} layerShadowOffset
 @property  double layerShadowRadius
 @property  {CGSize=dd} shadowOffset
 @property  double shadowRadius
 @property  UIColor *shadowColor
 @property  id resourceCacheKey
 @property  id transientResourceCacheKey
 @property  NSString *resourceName
 @property  {CGSize=dd} size
 @property  NSURL *URL

  // instance methods
  -[SKUIImageViewElement .cxx_destruct]
  -[SKUIImageViewElement size]
  -[SKUIImageViewElement URL]
  -[SKUIImageViewElement isEnabled]
  -[SKUIImageViewElement shadowRadius]
  -[SKUIImageViewElement setShadowRadius:]
  -[SKUIImageViewElement shadowOffset]
  -[SKUIImageViewElement setShadowOffset:]
  -[SKUIImageViewElement shadowColor]
  -[SKUIImageViewElement setShadowColor:]
  -[SKUIImageViewElement accessibilityText]
  -[SKUIImageViewElement resourceName]
  -[SKUIImageViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIImageViewElement applyUpdatesWithElement:]
  -[SKUIImageViewElement resourceCacheKey]
  -[SKUIImageViewElement rendersWithParallax]
  -[SKUIImageViewElement rendersWithPerspective]
  -[SKUIImageViewElement pageComponentType]
  -[SKUIImageViewElement entityValueProviderDidChange]
  -[SKUIImageViewElement _loadEntityValuesIfNeeded]
  -[SKUIImageViewElement uniquingMapKey]
  -[SKUIImageViewElement entityValueProperties]
  -[SKUIImageViewElement transientResourceCacheKey]
  -[SKUIImageViewElement layerShadowOpacity]
  -[SKUIImageViewElement setLayerShadowOpacity:]
  -[SKUIImageViewElement layerShadowOffset]
  -[SKUIImageViewElement setLayerShadowOffset:]
  -[SKUIImageViewElement layerShadowRadius]
  -[SKUIImageViewElement setLayerShadowRadius:]


SKUIFullscreenImageViewElement : SKUIImageViewElement

SKUIImageViewElementCacheKey : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUIImageViewElementCacheKey isEqual:]
  -[SKUIImageViewElementCacheKey .cxx_destruct]
  -[SKUIImageViewElementCacheKey initWithURL:size:imageTreatment:]


SKUISettingDescription : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL allowsSelection
 @property  SKUISettingsGroupDescription *parent
 @property  BOOL editsValid
 @property  SKUIViewElement *viewElement

  // class methods
  +[SKUISettingDescription allowsEdit]
  +[SKUISettingDescription _viewClassForSettingDescription:]
  +[SKUISettingDescription viewClassForSettingDescription:]

  // instance methods
  -[SKUISettingDescription parent]
  -[SKUISettingDescription beginEditing]
  -[SKUISettingDescription setParent:]
  -[SKUISettingDescription .cxx_destruct]
  -[SKUISettingDescription indexPath]
  -[SKUISettingDescription _isHidden]
  -[SKUISettingDescription reloadData]
  -[SKUISettingDescription allowsSelection]
  -[SKUISettingDescription _presentViewController:animated:completion:]
  -[SKUISettingDescription _initiallyHidden]
  -[SKUISettingDescription viewElement]
  -[SKUISettingDescription _dismissViewController:animated:completion:]
  -[SKUISettingDescription initWithViewElement:parent:]
  -[SKUISettingDescription cancelEdits]
  -[SKUISettingDescription commitEdits:]
  -[SKUISettingDescription discardEdits]
  -[SKUISettingDescription editsValid]
  -[SKUISettingDescription handleSelectionOnCompletion:]
  -[SKUISettingDescription reloadWithViewElement:parent:]
  -[SKUISettingDescription _deleteSetting]
  -[SKUISettingDescription _dispatchUpdate:]
  -[SKUISettingDescription _hideSetting]
  -[SKUISettingDescription _reloadSetting]
  -[SKUISettingDescription _revealSetting]
  -[SKUISettingDescription _setEditsValid:]
  -[SKUISettingDescription setViewElement:]


SKUIGiftAddressingSection : SKUIGiftTableViewSection
 @property  SKUIGiftTextTableViewCell *messageCell
 @property  SKUIGift *gift
 @property  <UITextFieldDelegate> *textFieldDelegate

  // instance methods
  -[SKUIGiftAddressingSection .cxx_destruct]
  -[SKUIGiftAddressingSection heightForCellInTableView:indexPath:]
  -[SKUIGiftAddressingSection numberOfRowsInSection]
  -[SKUIGiftAddressingSection tableViewCellForTableView:indexPath:]
  -[SKUIGiftAddressingSection tableView:willDisplayCell:forIndexPath:]
  -[SKUIGiftAddressingSection gift]
  -[SKUIGiftAddressingSection setTextFieldDelegate:]
  -[SKUIGiftAddressingSection beginEditingMessageForTableView:indexPath:]
  -[SKUIGiftAddressingSection endEditingMessageForTableView:indexPath:]
  -[SKUIGiftAddressingSection initWithGiftConfiguration:]
  -[SKUIGiftAddressingSection setGift:]
  -[SKUIGiftAddressingSection _recipientTableViewCell]
  -[SKUIGiftAddressingSection _footerString]
  -[SKUIGiftAddressingSection _textFieldTableViewCellForTableView:indexPath:]
  -[SKUIGiftAddressingSection messageCell]
  -[SKUIGiftAddressingSection _attributedPlaceholderWithString:]
  -[SKUIGiftAddressingSection textFieldDelegate]
  -[SKUIGiftAddressingSection setMessageCell:]


SKUIConfigurationPreloader : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL hasExistingConfigurationCache
 @property  NSOperationQueue *workQueue
 @property  NSMutableArray *completionBlocks
 @property  SKUIReloadConfigurationOperation *pendingReloadOperation
 @property  NSDictionary *loadedConfiguration
 @property  NSString *configurationCachePath

  // instance methods
  -[SKUIConfigurationPreloader init]
  -[SKUIConfigurationPreloader .cxx_destruct]
  -[SKUIConfigurationPreloader workQueue]
  -[SKUIConfigurationPreloader completionBlocks]
  -[SKUIConfigurationPreloader initWithConfigurationCachePath:]
  -[SKUIConfigurationPreloader configurationCachePath]
  -[SKUIConfigurationPreloader loadedConfiguration]
  -[SKUIConfigurationPreloader hasExistingConfigurationCache]
  -[SKUIConfigurationPreloader pendingReloadOperation]
  -[SKUIConfigurationPreloader newReloadConfigurationOperation]
  -[SKUIConfigurationPreloader setPendingReloadOperation:]
  -[SKUIConfigurationPreloader finishPreloadingConfiguration:error:]
  -[SKUIConfigurationPreloader setLoadedConfiguration:]
  -[SKUIConfigurationPreloader preloadConfigurationForPurpose:withCompletionBlock:]


SKUIGiftTextFieldTableViewCell : UITableViewCell /usr/lib/libobjc.A.dylib
 @property  BOOL leftToRight
 @property  NSAttributedString *attributedPlaceholder
 @property  BOOL enabled
 @property  long long keyboardType
 @property  NSString *label
 @property  UIControl *textField
 @property  <UITextFieldDelegate> *textFieldDelegate
 @property  NSString *value

  // instance methods
  -[SKUIGiftTextFieldTableViewCell setEnabled:]
  -[SKUIGiftTextFieldTableViewCell .cxx_destruct]
  -[SKUIGiftTextFieldTableViewCell value]
  -[SKUIGiftTextFieldTableViewCell setValue:]
  -[SKUIGiftTextFieldTableViewCell keyboardType]
  -[SKUIGiftTextFieldTableViewCell isEnabled]
  -[SKUIGiftTextFieldTableViewCell setLabel:]
  -[SKUIGiftTextFieldTableViewCell label]
  -[SKUIGiftTextFieldTableViewCell layoutSubviews]
  -[SKUIGiftTextFieldTableViewCell textField]
  -[SKUIGiftTextFieldTableViewCell hitTest:withEvent:]
  -[SKUIGiftTextFieldTableViewCell setKeyboardType:]
  -[SKUIGiftTextFieldTableViewCell initWithStyle:reuseIdentifier:]
  -[SKUIGiftTextFieldTableViewCell setLeftToRight:]
  -[SKUIGiftTextFieldTableViewCell leftToRight]
  -[SKUIGiftTextFieldTableViewCell attributedPlaceholder]
  -[SKUIGiftTextFieldTableViewCell setAttributedPlaceholder:]
  -[SKUIGiftTextFieldTableViewCell setTextFieldDelegate:]
  -[SKUIGiftTextFieldTableViewCell textFieldDelegate]


SKUIGiftFooterLabelTableViewCell : UITableViewCell /usr/lib/libobjc.A.dylib
 @property  NSString *footerLabel

  // instance methods
  -[SKUIGiftFooterLabelTableViewCell .cxx_destruct]
  -[SKUIGiftFooterLabelTableViewCell setBackgroundColor:]
  -[SKUIGiftFooterLabelTableViewCell sizeThatFits:]
  -[SKUIGiftFooterLabelTableViewCell layoutSubviews]
  -[SKUIGiftFooterLabelTableViewCell setFooterLabel:]
  -[SKUIGiftFooterLabelTableViewCell footerLabel]


SKUIViewElementSlideshowController : NSObject /usr/lib/libc++.1.dylib <SKUISlideshowViewControllerDataSource, SKUISlideshowViewControllerDelegate>
 @property  NSMutableArray *dataConsumers
 @property  <SKUIViewElementSlideshowDelegate> *delegate
 @property  SKUIViewElementLayoutContext *layoutContext
 @property  long long numberOfSlideshowItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIViewElementSlideshowController dealloc]
  -[SKUIViewElementSlideshowController delegate]
  -[SKUIViewElementSlideshowController setDelegate:]
  -[SKUIViewElementSlideshowController .cxx_destruct]
  -[SKUIViewElementSlideshowController setDataConsumers:]
  -[SKUIViewElementSlideshowController dataConsumers]
  -[SKUIViewElementSlideshowController numberOfItemsInSlideshowViewController:]
  -[SKUIViewElementSlideshowController slideshowViewController:dataConsumerAtIndex:]
  -[SKUIViewElementSlideshowController slideshowViewController:imageURLAtIndex:]
  -[SKUIViewElementSlideshowController slideshowViewController:placeholderImageAtIndex:]
  -[SKUIViewElementSlideshowController slideshowViewControllerDidFinish:]
  -[SKUIViewElementSlideshowController initWithShelf:selectedLockup:]
  -[SKUIViewElementSlideshowController numberOfSlideshowItems]
  -[SKUIViewElementSlideshowController presentFromParentViewController:]
  -[SKUIViewElementSlideshowController layoutContext]
  -[SKUIViewElementSlideshowController setLayoutContext:]


SKUIErrorDocumentViewController : SKUIViewController <SKUIDocumentViewController>
 @property  @? retryActionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIErrorDocumentViewController .cxx_destruct]
  -[SKUIErrorDocumentViewController loadView]
  -[SKUIErrorDocumentViewController documentDidUpdate:]
  -[SKUIErrorDocumentViewController retryActionBlock]
  -[SKUIErrorDocumentViewController initWithBackgroundColor:clientContext:]
  -[SKUIErrorDocumentViewController setRetryActionBlock:]


SKUISectionHeaderView : SKUIViewReuseView <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUISectionHeaderView prefetchResourcesForViewElement:reason:context:]
  +[SKUISectionHeaderView preferredSizeForViewElement:context:]
  +[SKUISectionHeaderView requestLayoutForViewElement:width:context:]
  +[SKUISectionHeaderView sizeThatFitsWidth:viewElement:context:]
  +[SKUISectionHeaderView _attributedStringForButton:context:]
  +[SKUISectionHeaderView _attributedStringForLabel:context:]
  +[SKUISectionHeaderView _sizeForViewElement:width:context:]
  +[SKUISectionHeaderView _linesForViewElement:width:buttonSize:context:]

  // instance methods
  -[SKUISectionHeaderView .cxx_destruct]
  -[SKUISectionHeaderView initWithFrame:]
  -[SKUISectionHeaderView sizeThatFits:]
  -[SKUISectionHeaderView layoutSubviews]
  -[SKUISectionHeaderView setContentInset:]
  -[SKUISectionHeaderView reloadWithViewElement:width:context:]
  -[SKUISectionHeaderView setImage:forArtworkRequest:context:]
  -[SKUISectionHeaderView updateWithItemState:context:animated:]
  -[SKUISectionHeaderView viewForElementIdentifier:]
  -[SKUISectionHeaderView _buttonAction:]


SKUIGiftTableViewSection : SKUITableViewSection
 @property  SKUIGiftConfiguration *giftConfiguration

  // class methods
  +[SKUIGiftTableViewSection aloneRowBackgroundImageWithSize:]

  // instance methods
  -[SKUIGiftTableViewSection .cxx_destruct]
  -[SKUIGiftTableViewSection giftConfiguration]
  -[SKUIGiftTableViewSection initWithGiftConfiguration:]


SKUICountdownComponent : SKUIPageComponent
 @property  SKUICountdown *countdown

  // instance methods
  -[SKUICountdownComponent .cxx_destruct]
  -[SKUICountdownComponent componentType]
  -[SKUICountdownComponent initWithCustomPageContext:]
  -[SKUICountdownComponent countdown]
  -[SKUICountdownComponent setCountdown:]


SKUICarouselViewElement : SKUIViewElement
 @property  double displayInterval
 @property  SKUIProgressIndicatorViewElement *progressIndicatorElement

  // instance methods
  -[SKUICarouselViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUICarouselViewElement applyUpdatesWithElement:]
  -[SKUICarouselViewElement enumerateChildrenUsingBlock:]
  -[SKUICarouselViewElement pageComponentType]
  -[SKUICarouselViewElement displayInterval]
  -[SKUICarouselViewElement progressIndicatorElement]


SKUIPickerView : UIView /usr/lib/libobjc.A.dylib <UIPickerViewDataSource, UIPickerViewDelegate>
 @property  <SKUIPickerViewDelegate> *delegate
 @property  long long selectedItemIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIPickerView dealloc]
  -[SKUIPickerView initWithCoder:]
  -[SKUIPickerView delegate]
  -[SKUIPickerView setDelegate:]
  -[SKUIPickerView .cxx_destruct]
  -[SKUIPickerView initWithFrame:]
  -[SKUIPickerView sizeThatFits:]
  -[SKUIPickerView layoutSubviews]
  -[SKUIPickerView numberOfComponentsInPickerView:]
  -[SKUIPickerView pickerView:numberOfRowsInComponent:]
  -[SKUIPickerView pickerView:titleForRow:forComponent:]
  -[SKUIPickerView pickerView:didSelectRow:inComponent:]
  -[SKUIPickerView initWithTitles:]
  -[SKUIPickerView selectedItemIndex]
  -[SKUIPickerView setSelectedItemIndex:]


SKUIIndexBarEntryDescriptor : NSObject /usr/lib/libc++.1.dylib
 @property  long long entryDescriptorType
 @property  SKUIArtwork *artwork
 @property  NSAttributedString *attributedString
 @property  UIImage *image
 @property  {CGSize=dd} size
 @property  {UIEdgeInsets=dddd} contentEdgeInsets
 @property  long long visibilityPriority

  // class methods
  +[SKUIIndexBarEntryDescriptor entryDescriptorWithArtwork:]
  +[SKUIIndexBarEntryDescriptor entryDescriptorWithAttributedString:]
  +[SKUIIndexBarEntryDescriptor entryDescriptorWithImage:]
  +[SKUIIndexBarEntryDescriptor placeholderEntryDescriptorWithSize:]

  // instance methods
  -[SKUIIndexBarEntryDescriptor isEqual:]
  -[SKUIIndexBarEntryDescriptor setAttributedString:]
  -[SKUIIndexBarEntryDescriptor .cxx_destruct]
  -[SKUIIndexBarEntryDescriptor size]
  -[SKUIIndexBarEntryDescriptor image]
  -[SKUIIndexBarEntryDescriptor setImage:]
  -[SKUIIndexBarEntryDescriptor setSize:]
  -[SKUIIndexBarEntryDescriptor attributedString]
  -[SKUIIndexBarEntryDescriptor setContentEdgeInsets:]
  -[SKUIIndexBarEntryDescriptor contentEdgeInsets]
  -[SKUIIndexBarEntryDescriptor artwork]
  -[SKUIIndexBarEntryDescriptor setArtwork:]
  -[SKUIIndexBarEntryDescriptor setEntryDescriptorType:]
  -[SKUIIndexBarEntryDescriptor entryDescriptorType]
  -[SKUIIndexBarEntryDescriptor visibilityPriority]
  -[SKUIIndexBarEntryDescriptor setVisibilityPriority:]


SKUIGiftTextTableViewCell : UITableViewCell /usr/lib/libobjc.A.dylib <UITextViewDelegate>
 @property  BOOL leftToRight
 @property  NSString *label
 @property  long long maximumCharacterCount
 @property  NSString *placeholder
 @property  UITextView *textView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIGiftTextTableViewCell newTextView]

  // instance methods
  -[SKUIGiftTextTableViewCell dealloc]
  -[SKUIGiftTextTableViewCell .cxx_destruct]
  -[SKUIGiftTextTableViewCell setLabel:]
  -[SKUIGiftTextTableViewCell label]
  -[SKUIGiftTextTableViewCell textView]
  -[SKUIGiftTextTableViewCell setTextView:]
  -[SKUIGiftTextTableViewCell layoutSubviews]
  -[SKUIGiftTextTableViewCell setPlaceholder:]
  -[SKUIGiftTextTableViewCell placeholder]
  -[SKUIGiftTextTableViewCell initWithStyle:reuseIdentifier:]
  -[SKUIGiftTextTableViewCell setLeftToRight:]
  -[SKUIGiftTextTableViewCell leftToRight]
  -[SKUIGiftTextTableViewCell textViewDidBeginEditing:]
  -[SKUIGiftTextTableViewCell textViewDidEndEditing:]
  -[SKUIGiftTextTableViewCell textView:shouldChangeTextInRange:replacementText:]
  -[SKUIGiftTextTableViewCell setMaximumCharacterCount:]
  -[SKUIGiftTextTableViewCell maximumCharacterCount]


SKUIPageComponent : NSObject /usr/lib/libc++.1.dylib <SSMetricsEventFieldProvider>
 @property  long long metricsLocationPosition
 @property  SKUIViewElement *viewElement
 @property  long long componentType
 @property  BOOL missingItemData
 @property  NSString *metricsElementName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIPageComponent .cxx_destruct]
  -[SKUIPageComponent componentType]
  -[SKUIPageComponent valueForMetricsField:]
  -[SKUIPageComponent viewElement]
  -[SKUIPageComponent initWithCustomPageContext:]
  -[SKUIPageComponent initWithViewElement:]
  -[SKUIPageComponent initWithFeaturedContentContext:kind:]
  -[SKUIPageComponent enumerateMissingItemIdentifiersFromIndex:usingBlock:]
  -[SKUIPageComponent isMissingItemData]
  -[SKUIPageComponent metricsElementName]
  -[SKUIPageComponent _enumerateMissingItemIdentifiersFromBricks:startIndex:usingBlock:]
  -[SKUIPageComponent _enumerateMissingItemIdentifiersFromLinks:startIndex:usingBlock:]
  -[SKUIPageComponent _enumerateMissingItemIdentifiersFromLockups:startIndex:usingBlock:]
  -[SKUIPageComponent metricsLocationPosition]
  -[SKUIPageComponent _setMetricsLocationPosition:]


SKUIPageComponentContext : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSDictionary *componentDictionary
 @property  NSDictionary *items
 @property  long long layoutStyle
 @property  double pageGenerationTime
 @property  NSDictionary *platformKeyProfileOverrides
 @property  NSArray *ineligibleGratisIdentifiers
 @property  NSSet *allUnavailableItemIdentifiers

  // instance methods
  -[SKUIPageComponentContext init]
  -[SKUIPageComponentContext copyWithZone:]
  -[SKUIPageComponentContext .cxx_destruct]
  -[SKUIPageComponentContext items]
  -[SKUIPageComponentContext setItems:]
  -[SKUIPageComponentContext setLayoutStyle:]
  -[SKUIPageComponentContext layoutStyle]
  -[SKUIPageComponentContext itemForItemIdentifier:]
  -[SKUIPageComponentContext componentDictionary]
  -[SKUIPageComponentContext pageGenerationTime]
  -[SKUIPageComponentContext addUnavailableItemIdentifiers:]
  -[SKUIPageComponentContext isUnavailableItemIdentifier:]
  -[SKUIPageComponentContext setUnavailableItemIdentifiers:]
  -[SKUIPageComponentContext allUnavailableItemIdentifiers]
  -[SKUIPageComponentContext setComponentDictionary:]
  -[SKUIPageComponentContext ineligibleGratisIdentifiers]
  -[SKUIPageComponentContext setIneligibleGratisIdentifiers:]
  -[SKUIPageComponentContext platformKeyProfileOverrides]
  -[SKUIPageComponentContext setPlatformKeyProfileOverrides:]


SKUIStorePage : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  SKUIArtwork *backgroundArtwork
 @property  NSData *ITMLData
 @property  NSHTTPURLResponse *ITMLResponse
 @property  SSMetricsConfiguration *metricsConfiguration
 @property  NSString *metricsPageDescription
 @property  NSArray *pageComponents
 @property  NSString *pageType
 @property  NSURL *pageURL
 @property  SKUIProductPage *productPage
 @property  NSString *title
 @property  SKUIUber *uber

  // instance methods
  -[SKUIStorePage copyWithZone:]
  -[SKUIStorePage .cxx_destruct]
  -[SKUIStorePage title]
  -[SKUIStorePage setTitle:]
  -[SKUIStorePage setPageURL:]
  -[SKUIStorePage pageURL]
  -[SKUIStorePage metricsConfiguration]
  -[SKUIStorePage pageType]
  -[SKUIStorePage setPageType:]
  -[SKUIStorePage setMetricsConfiguration:]
  -[SKUIStorePage setBackgroundArtwork:]
  -[SKUIStorePage setITMLData:]
  -[SKUIStorePage setITMLResponse:]
  -[SKUIStorePage setMetricsPageDescription:]
  -[SKUIStorePage setProductPage:]
  -[SKUIStorePage setUber:]
  -[SKUIStorePage setPageComponents:]
  -[SKUIStorePage setValue:forPageKey:]
  -[SKUIStorePage valueForPageKey:]
  -[SKUIStorePage backgroundArtwork]
  -[SKUIStorePage ITMLData]
  -[SKUIStorePage ITMLResponse]
  -[SKUIStorePage metricsPageDescription]
  -[SKUIStorePage pageComponents]
  -[SKUIStorePage productPage]
  -[SKUIStorePage uber]


SKUIOrdinalViewElement : SKUIViewElement
 @property  SKUIViewElementText *text

  // instance methods
  -[SKUIOrdinalViewElement .cxx_destruct]
  -[SKUIOrdinalViewElement text]
  -[SKUIOrdinalViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIOrdinalViewElement applyUpdatesWithElement:]


SKUIParallaxImageView : SKUIImageView <SKUIPerspectiveView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIParallaxImageView maximumPerspectiveHeightForSize:]

  // instance methods
  -[SKUIParallaxImageView .cxx_destruct]
  -[SKUIParallaxImageView image]
  -[SKUIParallaxImageView setImage:]
  -[SKUIParallaxImageView setFrame:]
  -[SKUIParallaxImageView initWithFrame:]
  -[SKUIParallaxImageView sizeThatFits:]
  -[SKUIParallaxImageView setPlaceholder:]
  -[SKUIParallaxImageView imageSize]
  -[SKUIParallaxImageView placeholder]
  -[SKUIParallaxImageView setImageSize:]
  -[SKUIParallaxImageView setPerspectiveTargetView:]
  -[SKUIParallaxImageView setVanishingPoint:]
  -[SKUIParallaxImageView updateForChangedDistanceFromVanishingPoint]
  -[SKUIParallaxImageView _updateInnerImageView]
  -[SKUIParallaxImageView setImagePadding:]


SKUILocalizedStringDictionary : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *localeName

  // instance methods
  -[SKUILocalizedStringDictionary .cxx_destruct]
  -[SKUILocalizedStringDictionary localizedStringForKey:]
  -[SKUILocalizedStringDictionary localizedStringForKey:inTable:]
  -[SKUILocalizedStringDictionary _stringTableForBundle:tableName:]
  -[SKUILocalizedStringDictionary initWithLocaleName:bundles:]
  -[SKUILocalizedStringDictionary localeName]


SKUILocalizedStringTable : NSObject /usr/lib/libc++.1.dylib
 @property  NSBundle *bundle
 @property  NSString *tableName

  // instance methods
  -[SKUILocalizedStringTable .cxx_destruct]
  -[SKUILocalizedStringTable bundle]
  -[SKUILocalizedStringTable localizedStringForKey:]
  -[SKUILocalizedStringTable tableName]
  -[SKUILocalizedStringTable initWithBundle:localeName:tableName:]
  -[SKUILocalizedStringTable _legacyLanguageNameForLanguageCode:]


SKUIArtworkItemProvider : NSItemProvider /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices <SKUIArtworkRequestDelegate>
 @property  NSURL *url
 @property  SKUIResourceLoader *resourceLoader
 @property  NSProgress *progress
 @property  NSData *imageData
 @property  NSMutableArray *completionHandlers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIArtworkItemProvider .cxx_destruct]
  -[SKUIArtworkItemProvider progress]
  -[SKUIArtworkItemProvider url]
  -[SKUIArtworkItemProvider loadDataRepresentationForTypeIdentifier:completionHandler:]
  -[SKUIArtworkItemProvider setUrl:]
  -[SKUIArtworkItemProvider setProgress:]
  -[SKUIArtworkItemProvider completionHandlers]
  -[SKUIArtworkItemProvider setCompletionHandlers:]
  -[SKUIArtworkItemProvider imageData]
  -[SKUIArtworkItemProvider setImageData:]
  -[SKUIArtworkItemProvider resourceLoader]
  -[SKUIArtworkItemProvider setResourceLoader:]
  -[SKUIArtworkItemProvider artworkRequest:didLoadImage:]
  -[SKUIArtworkItemProvider initWithURL:usingResourceLoader:]


SKUIStorePageSectionsViewController : SKUIViewController <UIViewControllerPreviewingDelegate, UIViewControllerPreviewingDelegate_Private, SKUIItemStateCenterObserver, SKUILayoutCacheDelegate, SKUIProductPageOverlayDelegate, SKUIStorePageCollectionViewDelegate, SKUIViewControllerTesting, UICollectionViewDataSource, UIGestureRecognizerDelegate>
 @property  SKUIMetricsImpressionSession *activeMetricsImpressionSession
 @property  SKUIResourceLoader *resourceLoader
 @property  UICollectionView *collectionView
 @property  SKUIColorScheme *colorScheme
 @property  <SKUIStorePageSectionsDelegate> *delegate
 @property  <SKUICollectionViewPullToRefreshDelegate> *pullToRefreshDelegate
 @property  SKUIIndexBarControl *indexBarControl
 @property  SKUIMetricsController *metricsController
 @property  long long pinningTransitionStyle
 @property  NSArray *sections
 @property  BOOL displayingOverlays
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIStorePageSectionsViewController _shouldForwardViewWillTransitionToSize]
  +[SKUIStorePageSectionsViewController viewControllerWithRestorationIdentifierPath:coder:]

  // instance methods
  -[SKUIStorePageSectionsViewController dealloc]
  -[SKUIStorePageSectionsViewController initWithCoder:]
  -[SKUIStorePageSectionsViewController delegate]
  -[SKUIStorePageSectionsViewController setDelegate:]
  -[SKUIStorePageSectionsViewController .cxx_destruct]
  -[SKUIStorePageSectionsViewController loadView]
  -[SKUIStorePageSectionsViewController traitCollectionDidChange:]
  -[SKUIStorePageSectionsViewController initWithNibName:bundle:]
  -[SKUIStorePageSectionsViewController scrollViewDidScroll:]
  -[SKUIStorePageSectionsViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SKUIStorePageSectionsViewController scrollViewDidEndDragging:willDecelerate:]
  -[SKUIStorePageSectionsViewController scrollViewDidEndDecelerating:]
  -[SKUIStorePageSectionsViewController viewWillAppear:]
  -[SKUIStorePageSectionsViewController viewWillDisappear:]
  -[SKUIStorePageSectionsViewController collectionView]
  -[SKUIStorePageSectionsViewController numberOfSectionsInCollectionView:]
  -[SKUIStorePageSectionsViewController collectionView:numberOfItemsInSection:]
  -[SKUIStorePageSectionsViewController collectionView:cellForItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUIStorePageSectionsViewController viewDidAppear:]
  -[SKUIStorePageSectionsViewController viewDidDisappear:]
  -[SKUIStorePageSectionsViewController sections]
  -[SKUIStorePageSectionsViewController reloadSections:]
  -[SKUIStorePageSectionsViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController collectionView:shouldSelectItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController collectionView:didSelectItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController encodeRestorableStateWithCoder:]
  -[SKUIStorePageSectionsViewController decodeRestorableStateWithCoder:]
  -[SKUIStorePageSectionsViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController collectionView:layout:insetForSectionAtIndex:]
  -[SKUIStorePageSectionsViewController willPresentPreviewViewController:forLocation:inSourceView:]
  -[SKUIStorePageSectionsViewController previewingContext:viewControllerForLocation:]
  -[SKUIStorePageSectionsViewController previewingContext:commitViewController:]
  -[SKUIStorePageSectionsViewController resourceLoader]
  -[SKUIStorePageSectionsViewController setResourceLoader:]
  -[SKUIStorePageSectionsViewController _handleTap:]
  -[SKUIStorePageSectionsViewController metricsController]
  -[SKUIStorePageSectionsViewController setMetricsController:]
  -[SKUIStorePageSectionsViewController itemStateCenter:itemStatesChanged:]
  -[SKUIStorePageSectionsViewController colorScheme]
  -[SKUIStorePageSectionsViewController setColorScheme:]
  -[SKUIStorePageSectionsViewController collectionView:didConfirmButtonElement:withClickInfo:forItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController collectionView:layout:willApplyLayoutAttributes:]
  -[SKUIStorePageSectionsViewController _contentSizeChangeNotification:]
  -[SKUIStorePageSectionsViewController initWithLayoutStyle:]
  -[SKUIStorePageSectionsViewController _unregisterForNotificationsForEntityProvider:]
  -[SKUIStorePageSectionsViewController _newStorePageCollectionViewLayout]
  -[SKUIStorePageSectionsViewController setIndexBarControl:]
  -[SKUIStorePageSectionsViewController _longPressAction:]
  -[SKUIStorePageSectionsViewController _enumerateSectionContextsUsingBlock:]
  -[SKUIStorePageSectionsViewController _defaultSectionForGridComponent:]
  -[SKUIStorePageSectionsViewController _defaultSectionForSwooshComponent:]
  -[SKUIStorePageSectionsViewController _collectionViewSublayouts]
  -[SKUIStorePageSectionsViewController _textLayoutCache]
  -[SKUIStorePageSectionsViewController setSectionsWithSplitsDescription:]
  -[SKUIStorePageSectionsViewController _newSectionContext]
  -[SKUIStorePageSectionsViewController _createSectionsForExpandPageComponent:context:newSections:sectionCount:sectionsByViewElement:updateStyle:]
  -[SKUIStorePageSectionsViewController _newSectionsWithPageComponent:]
  -[SKUIStorePageSectionsViewController _updateCollectionViewWithUpdates:]
  -[SKUIStorePageSectionsViewController _reloadRelevantEntityProviders]
  -[SKUIStorePageSectionsViewController dismissOverlays]
  -[SKUIStorePageSectionsViewController _setActiveProductPageOverlayController:]
  -[SKUIStorePageSectionsViewController _startRefresh:]
  -[SKUIStorePageSectionsViewController _deselectCellsForAppearance:]
  -[SKUIStorePageSectionsViewController skui_viewWillAppear:]
  -[SKUIStorePageSectionsViewController _invalidateIfLastKnownWidthChanged]
  -[SKUIStorePageSectionsViewController _currentBackdropGroupName]
  -[SKUIStorePageSectionsViewController _beginActiveImpressionsForImpressionableViewElements]
  -[SKUIStorePageSectionsViewController _endAllPendingActiveImpression]
  -[SKUIStorePageSectionsViewController _setPageSize:]
  -[SKUIStorePageSectionsViewController _reloadCollectionView]
  -[SKUIStorePageSectionsViewController _scrollFirstAppearanceSectionToView]
  -[SKUIStorePageSectionsViewController _prefetchArtworkForVisibleSections]
  -[SKUIStorePageSectionsViewController invalidateAndReload]
  -[SKUIStorePageSectionsViewController _splitForSectionIndex:]
  -[SKUIStorePageSectionsViewController defaultSectionForComponent:]
  -[SKUIStorePageSectionsViewController _updateSectionsAfterMenuChange]
  -[SKUIStorePageSectionsViewController _menuContextForMenuComponent:]
  -[SKUIStorePageSectionsViewController _childSectionsForMenuComponent:selectedIndex:]
  -[SKUIStorePageSectionsViewController _impressionableViewElements]
  -[SKUIStorePageSectionsViewController activeMetricsImpressionSession]
  -[SKUIStorePageSectionsViewController _invalidateLayoutWithNewSize:transitionCoordinator:]
  -[SKUIStorePageSectionsViewController indexBarControl]
  -[SKUIStorePageSectionsViewController _enumerateVisibleSectionsUsingBlock:]
  -[SKUIStorePageSectionsViewController _entityProviderDidInvalidateNotification:]
  -[SKUIStorePageSectionsViewController _prepareLayoutForSections]
  -[SKUIStorePageSectionsViewController _registerForNotificationsForEntityProvider:]
  -[SKUIStorePageSectionsViewController _beginIgnoringSectionChanges]
  -[SKUIStorePageSectionsViewController _endIgnoringSectionChanges]
  -[SKUIStorePageSectionsViewController layoutCacheDidFinishBatch:]
  -[SKUIStorePageSectionsViewController productPageOverlayDidDismiss:]
  -[SKUIStorePageSectionsViewController backgroundColorForSection:]
  -[SKUIStorePageSectionsViewController collectionView:didEndEditingItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController collectionView:canScrollCellAtIndexPath:]
  -[SKUIStorePageSectionsViewController collectionView:layout:pinningContentInsetForItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController collectionView:layout:pinningStyleForItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController collectionView:layout:pinningGroupForItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController collectionView:layout:pinningTransitionStyleForItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController collectionView:willBeginEditingItemAtIndexPath:]
  -[SKUIStorePageSectionsViewController indexPathsForPinningItemsInCollectionView:layout:]
  -[SKUIStorePageSectionsViewController indexPathsForGradientItemsInCollectionView:layout:]
  -[SKUIStorePageSectionsViewController performTestWithName:options:]
  -[SKUIStorePageSectionsViewController isDisplayingOverlays]
  -[SKUIStorePageSectionsViewController setActiveMetricsImpressionSession:]
  -[SKUIStorePageSectionsViewController setPinningTransitionStyle:]
  -[SKUIStorePageSectionsViewController setSectionsWithPageComponents:]
  -[SKUIStorePageSectionsViewController setSKUIStackedBar:]
  -[SKUIStorePageSectionsViewController showOverlayWithProductPage:metricsPageEvent:]
  -[SKUIStorePageSectionsViewController SKUIStackedBar]
  -[SKUIStorePageSectionsViewController setUsePullToRefresh:]
  -[SKUIStorePageSectionsViewController collectionView:editorialView:didSelectLink:]
  -[SKUIStorePageSectionsViewController collectionView:expandEditorialForLabelElement:indexPath:]
  -[SKUIStorePageSectionsViewController collectionView:performDefaultActionForViewElement:indexPath:]
  -[SKUIStorePageSectionsViewController itemCollectionView:didConfirmItemOfferForCell:]
  -[SKUIStorePageSectionsViewController itemCollectionView:didTapVideoForCollectionViewCell:]
  -[SKUIStorePageSectionsViewController skuiCollectionViewWillLayoutSubviews:]
  -[SKUIStorePageSectionsViewController _insertSectionsWithComponents:afterSection:]
  -[SKUIStorePageSectionsViewController _pageSectionDidDismissOverlayController:]
  -[SKUIStorePageSectionsViewController _setRendersWithPerspective:]
  -[SKUIStorePageSectionsViewController _setRendersWithParallax:]
  -[SKUIStorePageSectionsViewController _setSelectedIndex:forMenuSection:]
  -[SKUIStorePageSectionsViewController _updateSectionsForIndex:menuSection:]
  -[SKUIStorePageSectionsViewController _visibleMetricsImpressionsString]
  -[SKUIStorePageSectionsViewController _applyColorScheme:toIndexBarControl:]
  -[SKUIStorePageSectionsViewController _expandContextForMenuComponent:]
  -[SKUIStorePageSectionsViewController _newSectionsWithPageComponents:]
  -[SKUIStorePageSectionsViewController pinningTransitionStyle]
  -[SKUIStorePageSectionsViewController pullToRefreshDelegate]
  -[SKUIStorePageSectionsViewController setPullToRefreshDelegate:]


SKUIBadgeViewElement : SKUIViewElement
 @property  NSAttributedString *attributedString
 @property  long long badgeType
 @property  UIImage *fallbackImage
 @property  NSString *resourceName
 @property  {CGSize=dd} size
 @property  NSURL *URL

  // instance methods
  -[SKUIBadgeViewElement .cxx_destruct]
  -[SKUIBadgeViewElement size]
  -[SKUIBadgeViewElement URL]
  -[SKUIBadgeViewElement attributedString]
  -[SKUIBadgeViewElement accessibilityText]
  -[SKUIBadgeViewElement resourceName]
  -[SKUIBadgeViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIBadgeViewElement applyUpdatesWithElement:]
  -[SKUIBadgeViewElement fallbackImage]
  -[SKUIBadgeViewElement badgeType]


SKUIApplicationControllerOptions : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSMutableCopying>
 @property  BOOL supportsFullApplicationReload
 @property  long long tabBarControllerStyle
 @property  BOOL pageRenderMetricsEnabled
 @property  BOOL requiresLocalBootstrapScript
 @property  BOOL bootstrapScriptFallbackEnabled
 @property  double bootstrapScriptFallbackMaximumAge
 @property  double bootstrapScriptTimeoutInterval
 @property  BOOL useTransientStorageForTests

  // instance methods
  -[SKUIApplicationControllerOptions init]
  -[SKUIApplicationControllerOptions isEqual:]
  -[SKUIApplicationControllerOptions copyWithZone:]
  -[SKUIApplicationControllerOptions mutableCopyWithZone:]
  -[SKUIApplicationControllerOptions supportsFullApplicationReload]
  -[SKUIApplicationControllerOptions tabBarControllerStyle]
  -[SKUIApplicationControllerOptions pageRenderMetricsEnabled]
  -[SKUIApplicationControllerOptions requiresLocalBootstrapScript]
  -[SKUIApplicationControllerOptions isBootstrapScriptFallbackEnabled]
  -[SKUIApplicationControllerOptions bootstrapScriptFallbackMaximumAge]
  -[SKUIApplicationControllerOptions bootstrapScriptTimeoutInterval]
  -[SKUIApplicationControllerOptions useTransientStorageForTests]


SKUIMutableApplicationControllerOptions : SKUIApplicationControllerOptions
 @property  BOOL supportsFullApplicationReload
 @property  long long tabBarControllerStyle
 @property  BOOL pageRenderMetricsEnabled
 @property  BOOL requiresLocalBootstrapScript
 @property  BOOL bootstrapScriptFallbackEnabled
 @property  double bootstrapScriptFallbackMaximumAge
 @property  double bootstrapScriptTimeoutInterval
 @property  BOOL useTransientStorageForTests

  // instance methods
  -[SKUIMutableApplicationControllerOptions copyWithZone:]
  -[SKUIMutableApplicationControllerOptions setSupportsFullApplicationReload:]
  -[SKUIMutableApplicationControllerOptions setTabBarControllerStyle:]
  -[SKUIMutableApplicationControllerOptions setPageRenderMetricsEnabled:]
  -[SKUIMutableApplicationControllerOptions setRequiresLocalBootstrapScript:]
  -[SKUIMutableApplicationControllerOptions setBootstrapScriptFallbackEnabled:]
  -[SKUIMutableApplicationControllerOptions setBootstrapScriptFallbackMaximumAge:]
  -[SKUIMutableApplicationControllerOptions setBootstrapScriptTimeoutInterval:]
  -[SKUIMutableApplicationControllerOptions setUseTransientStorageForTests:]


SKUIBarRatingViewElement : SKUIViewElement
 @property  float ratingValue

  // instance methods
  -[SKUIBarRatingViewElement ratingValue]
  -[SKUIBarRatingViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIBarRatingViewElement applyUpdatesWithElement:]


SKUIImageActivityItemProvider : SKUIDeferredActivityItemProvider
  // class methods
  +[SKUIImageActivityItemProvider placeholderItem]

  // instance methods
  -[SKUIImageActivityItemProvider item]


SKUIResponseViewElement : SKUIViewElement

SKUIContentUnavailableView : SKUIViewReuseView <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIContentUnavailableView prefetchResourcesForViewElement:reason:context:]
  +[SKUIContentUnavailableView preferredSizeForViewElement:context:]
  +[SKUIContentUnavailableView requestLayoutForViewElement:width:context:]
  +[SKUIContentUnavailableView sizeThatFitsWidth:viewElement:context:]
  +[SKUIContentUnavailableView _attributedStringWithTitleLabel:context:]
  +[SKUIContentUnavailableView _attributedStringWithMessageLabel:context:]
  +[SKUIContentUnavailableView _attributedStringWithButton:context:]

  // instance methods
  -[SKUIContentUnavailableView .cxx_destruct]
  -[SKUIContentUnavailableView layoutSubviews]
  -[SKUIContentUnavailableView setContentInset:]
  -[SKUIContentUnavailableView reloadWithViewElement:width:context:]
  -[SKUIContentUnavailableView setImage:forArtworkRequest:context:]
  -[SKUIContentUnavailableView updateWithItemState:context:animated:]
  -[SKUIContentUnavailableView viewForElementIdentifier:]
  -[SKUIContentUnavailableView _buttonAction:]
  -[SKUIContentUnavailableView _firstBaselineOffsetForView:]
  -[SKUIContentUnavailableView _baselineOffsetForView:]


SKUIGiftAmountSection : SKUIGiftTableViewSection
 @property  UIControl *amountControl
 @property  long long selectedAmount
 @property  NSString *selectedAmountString

  // instance methods
  -[SKUIGiftAmountSection .cxx_destruct]
  -[SKUIGiftAmountSection heightForCellInTableView:indexPath:]
  -[SKUIGiftAmountSection numberOfRowsInSection]
  -[SKUIGiftAmountSection tableViewCellForTableView:indexPath:]
  -[SKUIGiftAmountSection tableView:willDisplayCell:forIndexPath:]
  -[SKUIGiftAmountSection amountControl]
  -[SKUIGiftAmountSection selectedAmount]
  -[SKUIGiftAmountSection selectedAmountString]


SKUIBlockAnimationDelegate : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUIBlockAnimationDelegate .cxx_destruct]
  -[SKUIBlockAnimationDelegate initWithCompletionHandler:]
  -[SKUIBlockAnimationDelegate animationDidStop:finished:]


SKUISimpleAnimationFactory : NSObject /usr/lib/libc++.1.dylib <_UIBasicAnimationFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUISimpleAnimationFactory factoryWithTimingFunction:]
  +[SKUISimpleAnimationFactory backOutTimingFunction]
  +[SKUISimpleAnimationFactory easeQuadInTimingFunction]
  +[SKUISimpleAnimationFactory easeQuadInOutTimingFunction]
  +[SKUISimpleAnimationFactory easeQuadOutTimingFunction]

  // instance methods
  -[SKUISimpleAnimationFactory .cxx_destruct]
  -[SKUISimpleAnimationFactory _basicAnimationForView:withKeyPath:]
  -[SKUISimpleAnimationFactory _timingFunctionForAnimation]


SKUIJSITunesStore : IKJSITunesStore /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIItemStateCenterObserver, SKUIJSITunesStore>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long applicationIconBadgeNumber
 @property  SKUIJSAppleAccount *primaryAppleAccount
 @property  SKUIJSRestrictions *restrictions
 @property  NSString *hostApp
 @property  BOOL isAppPreview

  // instance methods
  -[SKUIJSITunesStore dealloc]
  -[SKUIJSITunesStore .cxx_destruct]
  -[SKUIJSITunesStore log:]
  -[SKUIJSITunesStore restrictions]
  -[SKUIJSITunesStore setApplicationIconBadgeNumber:]
  -[SKUIJSITunesStore applicationIconBadgeNumber]
  -[SKUIJSITunesStore primaryAppleAccount]
  -[SKUIJSITunesStore itemStateCenterMediaLibrariesDidChange:]
  -[SKUIJSITunesStore initWithAppContext:clientContext:]
  -[SKUIJSITunesStore _purchaseRequestDidSucceedNotification:]
  -[SKUIJSITunesStore _finishPurchaseForOptions:purchaseResponse:]
  -[SKUIJSITunesStore _finishSoftwarePurchaseForOptions:purchaseResponse:]
  -[SKUIJSITunesStore _rentalInfoFromMediaItems:]
  -[SKUIJSITunesStore _millisecondsFromTimeInterval:]
  -[SKUIJSITunesStore buy:]
  -[SKUIJSITunesStore getAdminStatus::]
  -[SKUIJSITunesStore approveInPerson::]
  -[SKUIJSITunesStore areVideosCloudPurchasesEnabled]
  -[SKUIJSITunesStore attemptLocalAskToBuyApproval:]
  -[SKUIJSITunesStore download:]
  -[SKUIJSITunesStore downloadExistsFor::]
  -[SKUIJSITunesStore exit:]
  -[SKUIJSITunesStore findApps:::]
  -[SKUIJSITunesStore findLibraryItems:::]
  -[SKUIJSITunesStore findOwnedItems::]
  -[SKUIJSITunesStore findToggleStateForItem::]
  -[SKUIJSITunesStore clearToggleStateItems]
  -[SKUIJSITunesStore getBookSample:]
  -[SKUIJSITunesStore getProfilePermissions::]
  -[SKUIJSITunesStore isInstalledApp::]
  -[SKUIJSITunesStore isRemovedSystemApp::]
  -[SKUIJSITunesStore launchICloudFamilySettings]
  -[SKUIJSITunesStore loadGratisContent:]
  -[SKUIJSITunesStore headsUp::]
  -[SKUIJSITunesStore resetStateForActiveDocument]
  -[SKUIJSITunesStore resourceExists:]
  -[SKUIJSITunesStore setPreviewOverlay::]
  -[SKUIJSITunesStore restoreRemovedSystemApp::]
  -[SKUIJSITunesStore updateToggleStateForItem:toggled::]
  -[SKUIJSITunesStore loadRentals:]
  -[SKUIJSITunesStore loadRental::]
  -[SKUIJSITunesStore fetchTemplates::]
  -[SKUIJSITunesStore documentSizeForNavigationDocument:]
  -[SKUIJSITunesStore fetchMSOProviderStatus:]
  -[SKUIJSITunesStore hostApp]
  -[SKUIJSITunesStore isAppPreview]
  -[SKUIJSITunesStore sendApplicationDidEnterBackground]
  -[SKUIJSITunesStore sendApplicationWillEnterForeground]
  -[SKUIJSITunesStore sendOnNavigationStackWillPop:]
  -[SKUIJSITunesStore sendOnPageResponseWithDocument:data:URLResponse:performanceMetrics:]
  -[SKUIJSITunesStore sendOnXEventWithDictionary:]
  -[SKUIJSITunesStore sendAppPreviewStateChanged:]
  -[SKUIJSITunesStore sendApplicationWindowSizeDidUpdate:]
  -[SKUIJSITunesStore sendOnShowPageEventType:data:]
  -[SKUIJSITunesStore _displayWifiConnectionRequiredAlert]


SKUIGiftAmountControl : UIControl /usr/lib/libobjc.A.dylib <UITextFieldDelegate>
 @property  long long selectedAmount
 @property  NSString *selectedAmountString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIGiftAmountControl dealloc]
  -[SKUIGiftAmountControl .cxx_destruct]
  -[SKUIGiftAmountControl setBackgroundColor:]
  -[SKUIGiftAmountControl layoutSubviews]
  -[SKUIGiftAmountControl hitTest:withEvent:]
  -[SKUIGiftAmountControl _dynamicUserInterfaceTraitDidChange]
  -[SKUIGiftAmountControl beginTrackingWithTouch:withEvent:]
  -[SKUIGiftAmountControl cancelTrackingWithEvent:]
  -[SKUIGiftAmountControl continueTrackingWithTouch:withEvent:]
  -[SKUIGiftAmountControl endTrackingWithTouch:withEvent:]
  -[SKUIGiftAmountControl textFieldShouldBeginEditing:]
  -[SKUIGiftAmountControl textField:shouldChangeCharactersInRange:replacementString:]
  -[SKUIGiftAmountControl selectedAmount]
  -[SKUIGiftAmountControl selectedAmountString]
  -[SKUIGiftAmountControl initWithGiftConfiguration:]
  -[SKUIGiftAmountControl _textFieldDidBeginEditing:]
  -[SKUIGiftAmountControl _textFieldDidChange:]
  -[SKUIGiftAmountControl _textFieldDidEndEditing:]
  -[SKUIGiftAmountControl _updateButtonsWithTouch:]
  -[SKUIGiftAmountControl _reloadSelectedButton]


SKUIGiftSendDateSection : SKUIGiftTableViewSection
 @property  SKUIItem *giftItem
 @property  {UIEdgeInsets=dddd} headerInsets
 @property  NSDate *sendDate
 @property  long long sendDateStyle

  // instance methods
  -[SKUIGiftSendDateSection .cxx_destruct]
  -[SKUIGiftSendDateSection _headerView]
  -[SKUIGiftSendDateSection sendDate]
  -[SKUIGiftSendDateSection setSendDate:]
  -[SKUIGiftSendDateSection heightForCellInTableView:indexPath:]
  -[SKUIGiftSendDateSection numberOfRowsInSection]
  -[SKUIGiftSendDateSection tableViewCellForTableView:indexPath:]
  -[SKUIGiftSendDateSection updateCell:forTransitionToSize:]
  -[SKUIGiftSendDateSection setSendDateStyle:]
  -[SKUIGiftSendDateSection headerViewForTableView:]
  -[SKUIGiftSendDateSection setGiftItem:]
  -[SKUIGiftSendDateSection setHeaderInsets:]
  -[SKUIGiftSendDateSection _createFormattedDateString:]
  -[SKUIGiftSendDateSection headerInsets]
  -[SKUIGiftSendDateSection giftItem]
  -[SKUIGiftSendDateSection sendDateStyle]


SKUITextFieldSettingDescriptionView : SKUIFieldSettingDescriptionView <UITextFieldDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUITextFieldSettingDescriptionView prefetchResourcesForSettingDescription:reason:context:]
  +[SKUITextFieldSettingDescriptionView preferredSizeForSettingDescription:context:]
  +[SKUITextFieldSettingDescriptionView requestLayoutForSettingDescription:width:context:]
  +[SKUITextFieldSettingDescriptionView sizeThatFitsWidth:settingDescription:context:]

  // instance methods
  -[SKUITextFieldSettingDescriptionView setEnabled:]
  -[SKUITextFieldSettingDescriptionView .cxx_destruct]
  -[SKUITextFieldSettingDescriptionView layoutSubviews]
  -[SKUITextFieldSettingDescriptionView tintColorDidChange]
  -[SKUITextFieldSettingDescriptionView setContentInset:]
  -[SKUITextFieldSettingDescriptionView textFieldShouldReturn:]
  -[SKUITextFieldSettingDescriptionView textFieldDidEndEditing:]
  -[SKUITextFieldSettingDescriptionView textField:shouldChangeCharactersInRange:replacementString:]
  -[SKUITextFieldSettingDescriptionView setImage:forArtworkRequest:context:]
  -[SKUITextFieldSettingDescriptionView reloadWithSettingDescription:width:context:]
  -[SKUITextFieldSettingDescriptionView _addInputWithElement:]
  -[SKUITextFieldSettingDescriptionView _currentControllerValue]
  -[SKUITextFieldSettingDescriptionView _addLabelWithElement:]
  -[SKUITextFieldSettingDescriptionView _updateTextFieldValue:]
  -[SKUITextFieldSettingDescriptionView _fillLayoutWithView:labelForBaselinePosition:]
  -[SKUITextFieldSettingDescriptionView _arrangeTextField:andLabel:]
  -[SKUITextFieldSettingDescriptionView _addTextInputWithElement:]
  -[SKUITextFieldSettingDescriptionView _alignView:withBaselineLabel:font:offsetX:fitWidth:]
  -[SKUITextFieldSettingDescriptionView beginEdits]
  -[SKUITextFieldSettingDescriptionView commitEdits]


SKUIPredicateListViewElement : SKUIViewElement
 @property  NSArray *predicateViewElements
 @property  NSPredicate *compoundEntityValuePredicate

  // instance methods
  -[SKUIPredicateListViewElement .cxx_destruct]
  -[SKUIPredicateListViewElement applyUpdatesWithElement:]
  -[SKUIPredicateListViewElement _enumeratePredicateViewElementsUsingBlock:]
  -[SKUIPredicateListViewElement predicateViewElements]
  -[SKUIPredicateListViewElement compoundEntityValuePredicate]


SKUIDownloadsTableViewCell : UITableViewCell /usr/lib/libobjc.A.dylib
 @property  SKUIDownloadsCellView *cellView

  // instance methods
  -[SKUIDownloadsTableViewCell .cxx_destruct]
  -[SKUIDownloadsTableViewCell layoutSubviews]
  -[SKUIDownloadsTableViewCell initWithStyle:reuseIdentifier:]
  -[SKUIDownloadsTableViewCell cellView]


SKUINavigationBarSegmentsController : SKUINavigationBarSectionController
  // instance methods
  -[SKUINavigationBarSegmentsController .cxx_destruct]
  -[SKUINavigationBarSegmentsController view]
  -[SKUINavigationBarSegmentsController initWithViewElement:]
  -[SKUINavigationBarSegmentsController reloadAfterDocumentUpdateWithNavigationItem:]
  -[SKUINavigationBarSegmentsController willAppearInNavigationBar]


SKUIDynamicBarAnimator : NSObject /usr/lib/libc++.1.dylib
 @property  long long state
 @property  long long targetState
 @property  double topBarHeight
 @property  double bottomBarOffset
 @property  double minimumTopBarHeight
 @property  double maximumBottomBarOffset
 @property  <SKUIDynamicBarAnimatorDelegate> *delegate

  // instance methods
  -[SKUIDynamicBarAnimator init]
  -[SKUIDynamicBarAnimator dealloc]
  -[SKUIDynamicBarAnimator delegate]
  -[SKUIDynamicBarAnimator setDelegate:]
  -[SKUIDynamicBarAnimator .cxx_destruct]
  -[SKUIDynamicBarAnimator state]
  -[SKUIDynamicBarAnimator _displayLinkFired:]
  -[SKUIDynamicBarAnimator targetState]
  -[SKUIDynamicBarAnimator _updateOutputs]
  -[SKUIDynamicBarAnimator bottomBarOffset]
  -[SKUIDynamicBarAnimator topBarHeight]
  -[SKUIDynamicBarAnimator canTransitionToState:]
  -[SKUIDynamicBarAnimator attemptTransitionToState:animated:]
  -[SKUIDynamicBarAnimator _constrainTopBarHeight:]
  -[SKUIDynamicBarAnimator _updateDisplayLink]
  -[SKUIDynamicBarAnimator _bottomBarOffsetForTopBarHeight:]
  -[SKUIDynamicBarAnimator _setInSteadyState:]
  -[SKUIDynamicBarAnimator _transitionToSteadyState]
  -[SKUIDynamicBarAnimator _moveBarsWithDelta:]
  -[SKUIDynamicBarAnimator beginDraggingWithOffset:]
  -[SKUIDynamicBarAnimator updateDraggingWithOffset:]
  -[SKUIDynamicBarAnimator endDraggingWithTargetOffset:velocity:]
  -[SKUIDynamicBarAnimator setTopBarHeight:forState:]
  -[SKUIDynamicBarAnimator setBottomBarOffset:forState:]
  -[SKUIDynamicBarAnimator setMinimumTopBarHeight:]
  -[SKUIDynamicBarAnimator minimumTopBarHeight]
  -[SKUIDynamicBarAnimator _topBarHeightForBottomBarOffset:]
  -[SKUIDynamicBarAnimator setMaximumBottomBarOffset:]
  -[SKUIDynamicBarAnimator maximumBottomBarOffset]


SKUIGiftDateTableViewCell : UITableViewCell /usr/lib/libobjc.A.dylib
 @property  BOOL leftToRight
 @property  BOOL checked
 @property  NSString *dateString
 @property  NSString *label
 @property  NSString *placeholder

  // instance methods
  -[SKUIGiftDateTableViewCell .cxx_destruct]
  -[SKUIGiftDateTableViewCell setLabel:]
  -[SKUIGiftDateTableViewCell label]
  -[SKUIGiftDateTableViewCell layoutSubviews]
  -[SKUIGiftDateTableViewCell setPlaceholder:]
  -[SKUIGiftDateTableViewCell _newLabel]
  -[SKUIGiftDateTableViewCell placeholder]
  -[SKUIGiftDateTableViewCell initWithStyle:reuseIdentifier:]
  -[SKUIGiftDateTableViewCell setLeftToRight:]
  -[SKUIGiftDateTableViewCell leftToRight]
  -[SKUIGiftDateTableViewCell setChecked:]
  -[SKUIGiftDateTableViewCell _labelColor]
  -[SKUIGiftDateTableViewCell isChecked]
  -[SKUIGiftDateTableViewCell setDateString:]
  -[SKUIGiftDateTableViewCell dateString]


SKUIGiftTermsAndConditionsSection : SKUIGiftTableViewSection
  // instance methods
  -[SKUIGiftTermsAndConditionsSection .cxx_destruct]
  -[SKUIGiftTermsAndConditionsSection _headerView]
  -[SKUIGiftTermsAndConditionsSection headerViewForTableView:]
  -[SKUIGiftTermsAndConditionsSection _termsAction:]


SKUIReviewInAppRatingAnimatedTransitioning : NSObject /usr/lib/libc++.1.dylib <UIViewControllerAnimatedTransitioning>
 @property  BOOL presentation
 @property  UIViewController *viewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIReviewInAppRatingAnimatedTransitioning .cxx_destruct]
  -[SKUIReviewInAppRatingAnimatedTransitioning setViewController:]
  -[SKUIReviewInAppRatingAnimatedTransitioning isPresentation]
  -[SKUIReviewInAppRatingAnimatedTransitioning transitionDuration:]
  -[SKUIReviewInAppRatingAnimatedTransitioning _animateTransition:completionBlock:]
  -[SKUIReviewInAppRatingAnimatedTransitioning animateTransition:]
  -[SKUIReviewInAppRatingAnimatedTransitioning setPresentation:]
  -[SKUIReviewInAppRatingAnimatedTransitioning viewController]
  -[SKUIReviewInAppRatingAnimatedTransitioning _presentedViewControllerForContext:]


SKUILoadingTemplateViewElement : SKUIViewElement
 @property  SKUIActivityIndicatorViewElement *activityIndicator

  // instance methods
  -[SKUILoadingTemplateViewElement activityIndicator]


SKUIGiftTableSectionHeaderView : UIView /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  NSString *label

  // instance methods
  -[SKUIGiftTableSectionHeaderView .cxx_destruct]
  -[SKUIGiftTableSectionHeaderView setLabel:]
  -[SKUIGiftTableSectionHeaderView label]
  -[SKUIGiftTableSectionHeaderView setBackgroundColor:]
  -[SKUIGiftTableSectionHeaderView sizeThatFits:]
  -[SKUIGiftTableSectionHeaderView layoutSubviews]
  -[SKUIGiftTableSectionHeaderView contentInsets]
  -[SKUIGiftTableSectionHeaderView setContentInsets:]


SKUITextActivityItemProvider : SKUIDeferredActivityItemProvider
  // class methods
  +[SKUITextActivityItemProvider placeholderItem]

  // instance methods
  -[SKUITextActivityItemProvider item]


SKUIFilterBarView : SKUIViewReuseView <SKUIItemOfferButtonDelegate, SKUIMenuPopoverDelegate, SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIFilterBarView prefetchResourcesForViewElement:reason:context:]
  +[SKUIFilterBarView preferredSizeForViewElement:context:]
  +[SKUIFilterBarView requestLayoutForViewElement:width:context:]
  +[SKUIFilterBarView sizeThatFitsWidth:viewElement:context:]
  +[SKUIFilterBarView _attributedStringForButton:context:]
  +[SKUIFilterBarView _attributedStringForLabel:context:]
  +[SKUIFilterBarView _attributedStringForMenuItem:context:]
  +[SKUIFilterBarView _attributedStringForButtonText:style:context:]

  // instance methods
  -[SKUIFilterBarView dealloc]
  -[SKUIFilterBarView .cxx_destruct]
  -[SKUIFilterBarView initWithFrame:]
  -[SKUIFilterBarView sizeThatFits:]
  -[SKUIFilterBarView layoutSubviews]
  -[SKUIFilterBarView setContentInset:]
  -[SKUIFilterBarView reloadWithViewElement:width:context:]
  -[SKUIFilterBarView setImage:forArtworkRequest:context:]
  -[SKUIFilterBarView updateWithItemState:context:animated:]
  -[SKUIFilterBarView viewForElementIdentifier:]
  -[SKUIFilterBarView _buttonAction:]
  -[SKUIFilterBarView _cancelConfirmationAction:]
  -[SKUIFilterBarView _showConfirmationAction:]
  -[SKUIFilterBarView _imageTapAction:]
  -[SKUIFilterBarView _menuButtonAction:]
  -[SKUIFilterBarView _destroyMenuPopover]
  -[SKUIFilterBarView itemOfferButtonWillAnimateTransition:]
  -[SKUIFilterBarView menuPopoverDidCancel:]
  -[SKUIFilterBarView menuPopover:didSelectMenuItemAtIndex:]
  -[SKUIFilterBarView menuPopover:willRepositionToRect:inView:]


SKUISettingsGroupDescription : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIClientContext *clientContext
 @property  SKUISettingsGroupController *controller
 @property  SKUISettingsGroupsDescription *parent
 @property  SKUIGroupViewElement *viewElement

  // instance methods
  -[SKUISettingsGroupDescription parent]
  -[SKUISettingsGroupDescription isEmpty]
  -[SKUISettingsGroupDescription setParent:]
  -[SKUISettingsGroupDescription .cxx_destruct]
  -[SKUISettingsGroupDescription index]
  -[SKUISettingsGroupDescription recycle]
  -[SKUISettingsGroupDescription reloadData]
  -[SKUISettingsGroupDescription setController:]
  -[SKUISettingsGroupDescription controller]
  -[SKUISettingsGroupDescription _presentViewController:animated:completion:]
  -[SKUISettingsGroupDescription hasHeader]
  -[SKUISettingsGroupDescription clientContext]
  -[SKUISettingsGroupDescription viewElement]
  -[SKUISettingsGroupDescription indexPathForSettingDescription:]
  -[SKUISettingsGroupDescription deleteSettingDescription:]
  -[SKUISettingsGroupDescription _dismissViewController:animated:completion:]
  -[SKUISettingsGroupDescription dispatchUpdate:]
  -[SKUISettingsGroupDescription hideSettingDescription:]
  -[SKUISettingsGroupDescription isSettingDescriptionHidden:]
  -[SKUISettingsGroupDescription reloadSettingDescription:]
  -[SKUISettingsGroupDescription revealSettingDescription:]
  -[SKUISettingsGroupDescription _updatedEditsValid]
  -[SKUISettingsGroupDescription setViewElement:]
  -[SKUISettingsGroupDescription addSettingDescription:]
  -[SKUISettingsGroupDescription deleteSettingsGroup]
  -[SKUISettingsGroupDescription hideSettingsGroup]
  -[SKUISettingsGroupDescription _dispatchUpdateForSettingDescription:updateType:]
  -[SKUISettingsGroupDescription hasFooter]
  -[SKUISettingsGroupDescription revealSettingsGroup]
  -[SKUISettingsGroupDescription settingDescriptionAtIndex:]
  -[SKUISettingsGroupDescription initWithParent:settingsContext:]
  -[SKUISettingsGroupDescription addSettingViewElement:]
  -[SKUISettingsGroupDescription addSibling:]
  -[SKUISettingsGroupDescription editableSettingDescriptions]
  -[SKUISettingsGroupDescription footerDescription]
  -[SKUISettingsGroupDescription hasEditableSettingDescriptions]
  -[SKUISettingsGroupDescription hasNoVisibleSettings]
  -[SKUISettingsGroupDescription headerDescription]
  -[SKUISettingsGroupDescription newSiblingWithClass:]
  -[SKUISettingsGroupDescription numberOfSettings]
  -[SKUISettingsGroupDescription requestLayoutForWidth:context:]
  -[SKUISettingsGroupDescription setFooterDescription:]
  -[SKUISettingsGroupDescription setFooterViewElement:]
  -[SKUISettingsGroupDescription setHeaderDescription:]
  -[SKUISettingsGroupDescription setHeaderViewElement:]
  -[SKUISettingsGroupDescription viewElementForSettingAtIndex:]


SKUIGiftThemePickerViewController : SKUIGiftStepViewController <SKUIGiftConfigurationObserver, UICollectionViewDataSource, UICollectionViewDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIGiftThemePickerViewController dealloc]
  -[SKUIGiftThemePickerViewController .cxx_destruct]
  -[SKUIGiftThemePickerViewController loadView]
  -[SKUIGiftThemePickerViewController scrollViewDidScroll:]
  -[SKUIGiftThemePickerViewController scrollViewWillBeginDragging:]
  -[SKUIGiftThemePickerViewController scrollViewDidEndDecelerating:]
  -[SKUIGiftThemePickerViewController scrollViewDidEndScrollingAnimation:]
  -[SKUIGiftThemePickerViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[SKUIGiftThemePickerViewController viewWillAppear:]
  -[SKUIGiftThemePickerViewController viewWillLayoutSubviews]
  -[SKUIGiftThemePickerViewController collectionView:numberOfItemsInSection:]
  -[SKUIGiftThemePickerViewController collectionView:cellForItemAtIndexPath:]
  -[SKUIGiftThemePickerViewController _collectionView]
  -[SKUIGiftThemePickerViewController _flowLayout]
  -[SKUIGiftThemePickerViewController initWithGift:configuration:]
  -[SKUIGiftThemePickerViewController _nextAction:]
  -[SKUIGiftThemePickerViewController _setItemImage:error:]
  -[SKUIGiftThemePickerViewController _backgroundTapAction:]
  -[SKUIGiftThemePickerViewController _layoutCollectionViewWithTraits:]
  -[SKUIGiftThemePickerViewController _cardWidth]
  -[SKUIGiftThemePickerViewController _setSelectedThemeIndex:animated:]
  -[SKUIGiftThemePickerViewController _isIPadLarge]
  -[SKUIGiftThemePickerViewController _scrollInsetHorizontal:]
  -[SKUIGiftThemePickerViewController _cardHeight:]
  -[SKUIGiftThemePickerViewController _collectionViewWidth:]
  -[SKUIGiftThemePickerViewController giftConfigurationController:didLoadImageForTheme:]


SKUIGiftThemeBackgroundView : UIView /usr/lib/libobjc.A.dylib
 @property  UIScrollView *scrollView

  // instance methods
  -[SKUIGiftThemeBackgroundView .cxx_destruct]
  -[SKUIGiftThemeBackgroundView hitTest:withEvent:]
  -[SKUIGiftThemeBackgroundView scrollView]
  -[SKUIGiftThemeBackgroundView setScrollView:]


SKUIStackDocumentViewController : SKUIViewController <SKUIIndexBarControlControllerDataSource, SKUIIndexBarControlControllerDelegate, SKUIIndexBarEntryListControllerDelegate, SKUIModalSourceViewProvider, SKUIViewControllerTesting, SKUICollectionViewPullToRefreshDelegate, SKUIStorePageSectionsDelegate, SKUIResourceLoaderDelegate, SKUIDocumentViewController>
 @property  SKUIStorePageSectionsViewController *sectionsViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIStackDocumentViewController _shouldForwardViewWillTransitionToSize]

  // instance methods
  -[SKUIStackDocumentViewController dealloc]
  -[SKUIStackDocumentViewController .cxx_destruct]
  -[SKUIStackDocumentViewController loadView]
  -[SKUIStackDocumentViewController setPreferredContentSize:]
  -[SKUIStackDocumentViewController viewDidAppear:]
  -[SKUIStackDocumentViewController viewDidDisappear:]
  -[SKUIStackDocumentViewController _resourceLoader]
  -[SKUIStackDocumentViewController _resetState]
  -[SKUIStackDocumentViewController documentDidUpdate:]
  -[SKUIStackDocumentViewController _colorScheme]
  -[SKUIStackDocumentViewController impressionableViewElements]
  -[SKUIStackDocumentViewController documentMediaQueriesDidUpdate:]
  -[SKUIStackDocumentViewController sectionsViewController:willScrollToOffset:visibleRange:]
  -[SKUIStackDocumentViewController refresh:refreshControl:]
  -[SKUIStackDocumentViewController skui_viewWillAppear:]
  -[SKUIStackDocumentViewController performTestWithName:options:]
  -[SKUIStackDocumentViewController _pinningTransitionStyle]
  -[SKUIStackDocumentViewController _updateEntryListControllersWithReload:]
  -[SKUIStackDocumentViewController _resetStateForDocumentNotification:]
  -[SKUIStackDocumentViewController _indexBarViewElement]
  -[SKUIStackDocumentViewController _configureIndexBarControl:]
  -[SKUIStackDocumentViewController _updateIndexBarVisibility]
  -[SKUIStackDocumentViewController _pageSplitsDescription]
  -[SKUIStackDocumentViewController _pullToRefreshElement]
  -[SKUIStackDocumentViewController documentDidUpdate:withTemplate:]
  -[SKUIStackDocumentViewController resourceLoader:didLoadAllForReason:]
  -[SKUIStackDocumentViewController _tryToScrollToSectionAtIndexPath:]
  -[SKUIStackDocumentViewController _globalIndexFromIndexPath:]
  -[SKUIStackDocumentViewController _maxGlobalIndex]
  -[SKUIStackDocumentViewController _indexPathFromGlobalIndex:]
  -[SKUIStackDocumentViewController resourceLoaderDidBeginLoading:]
  -[SKUIStackDocumentViewController _pageComponentsWithViewElements:]
  -[SKUIStackDocumentViewController _shouldShowIndexBar]
  -[SKUIStackDocumentViewController _indexBarControlController]
  -[SKUIStackDocumentViewController indexBarControlController:numberOfEntryDescriptorsInSection:]
  -[SKUIStackDocumentViewController indexBarControlController:entryDescriptorAtIndexPath:]
  -[SKUIStackDocumentViewController numberOfSectionsInIndexBarControlController:]
  -[SKUIStackDocumentViewController indexBarControlController:didSelectEntryDescriptorAtIndexPath:]
  -[SKUIStackDocumentViewController indexBarControlControllerDidSelectBeyondBottom:]
  -[SKUIStackDocumentViewController indexBarControlControllerDidSelectBeyondTop:]
  -[SKUIStackDocumentViewController indexBarEntryListControllerDidInvalidate:]
  -[SKUIStackDocumentViewController getModalSourceViewForElementIdentifier:completionBlock:]
  -[SKUIStackDocumentViewController initWithTemplateElement:layoutStyle:]
  -[SKUIStackDocumentViewController sectionsViewController]


SKUIGiftThemeCollectionViewCell : UICollectionViewCell /usr/lib/libobjc.A.dylib
 @property  SKUIGiftConfiguration *giftConfiguration
 @property  SKUIGift *gift
 @property  SKUIGiftTheme *theme
 @property  UIImage *itemImage

  // instance methods
  -[SKUIGiftThemeCollectionViewCell .cxx_destruct]
  -[SKUIGiftThemeCollectionViewCell setBackgroundColor:]
  -[SKUIGiftThemeCollectionViewCell layoutSubviews]
  -[SKUIGiftThemeCollectionViewCell _setMessage:]
  -[SKUIGiftThemeCollectionViewCell _itemView]
  -[SKUIGiftThemeCollectionViewCell theme]
  -[SKUIGiftThemeCollectionViewCell setTheme:]
  -[SKUIGiftThemeCollectionViewCell _setPrice:]
  -[SKUIGiftThemeCollectionViewCell gift]
  -[SKUIGiftThemeCollectionViewCell giftConfiguration]
  -[SKUIGiftThemeCollectionViewCell setItemImage:]
  -[SKUIGiftThemeCollectionViewCell setGift:]
  -[SKUIGiftThemeCollectionViewCell reloadThemeHeaderImage]
  -[SKUIGiftThemeCollectionViewCell setGiftConfiguration:]
  -[SKUIGiftThemeCollectionViewCell itemImage]
  -[SKUIGiftThemeCollectionViewCell _setHeaderImage:]
  -[SKUIGiftThemeCollectionViewCell _setSenderName:]
  -[SKUIGiftThemeCollectionViewCell _reloadItemView]


SKUISectionHeaderCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUISectionHeaderCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUISectionHeaderCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUISectionHeaderCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUISectionHeaderCollectionViewCell sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUISectionHeaderCollectionViewCell .cxx_destruct]
  -[SKUISectionHeaderCollectionViewCell setBackgroundColor:]
  -[SKUISectionHeaderCollectionViewCell initWithFrame:]
  -[SKUISectionHeaderCollectionViewCell layoutSubviews]
  -[SKUISectionHeaderCollectionViewCell setContentInset:]
  -[SKUISectionHeaderCollectionViewCell applyLayoutAttributes:]
  -[SKUISectionHeaderCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUISectionHeaderCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUISectionHeaderCollectionViewCell updateWithItemState:context:animated:]
  -[SKUISectionHeaderCollectionViewCell viewForElementIdentifier:]


SKUIIndexBarDynamicElementEntryListController : SKUIIndexBarEntryListController
 @property  SKUIIndexBarEntryListViewElement *entryListViewElement

  // instance methods
  -[SKUIIndexBarDynamicElementEntryListController dealloc]
  -[SKUIIndexBarDynamicElementEntryListController .cxx_destruct]
  -[SKUIIndexBarDynamicElementEntryListController _entityProviderDidInvalidateNotification:]
  -[SKUIIndexBarDynamicElementEntryListController entryDescriptorAtIndex:]
  -[SKUIIndexBarDynamicElementEntryListController numberOfEntryDescriptors]
  -[SKUIIndexBarDynamicElementEntryListController hidesIndexBar]
  -[SKUIIndexBarDynamicElementEntryListController targetIndexBarEntryIDForEntryDescriptorAtIndex:returningRelativeSectionIndex:]
  -[SKUIIndexBarDynamicElementEntryListController needsRootTargetViewElement]
  -[SKUIIndexBarDynamicElementEntryListController rootTargetIndexBarEntryID]
  -[SKUIIndexBarDynamicElementEntryListController setRootTargetViewElement:]
  -[SKUIIndexBarDynamicElementEntryListController reloadViewElementData]
  -[SKUIIndexBarDynamicElementEntryListController initWithEntryListViewElement:]
  -[SKUIIndexBarDynamicElementEntryListController entryListViewElement]


SKUIFacebookPageComponent : SKUIPageComponent
 @property  SKUIFacebookViewElement *viewElement

  // instance methods
  -[SKUIFacebookPageComponent componentType]
  -[SKUIFacebookPageComponent initWithViewElement:]


SKUIDialogTemplateViewElement : SKUIViewElement
 @property  long long dialogType
 @property  SKUILabelViewElement *message
 @property  SKUILabelViewElement *title
 @property  NSArray *buttons
 @property  SKUIImageViewElement *image

  // instance methods
  -[SKUIDialogTemplateViewElement title]
  -[SKUIDialogTemplateViewElement image]
  -[SKUIDialogTemplateViewElement message]
  -[SKUIDialogTemplateViewElement buttons]
  -[SKUIDialogTemplateViewElement dialogType]
  -[SKUIDialogTemplateViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIDialogTemplateViewElement applyUpdatesWithElement:]


SKUIIndexBarEntry : NSObject /usr/lib/libc++.1.dylib
 @property  {CGSize=dd} contentSize
 @property  {CGSize=dd} size
 @property  UIColor *tintColor
 @property  long long entryType
 @property  {UIEdgeInsets=dddd} contentEdgeInsets
 @property  NSAttributedString *entryAttributedString
 @property  UIImage *entryImage
 @property  long long visibilityPriority

  // class methods
  +[SKUIIndexBarEntry entryWithAttributedString:]
  +[SKUIIndexBarEntry entryWithImage:]
  +[SKUIIndexBarEntry placeholderEntryWithSize:]
  +[SKUIIndexBarEntry systemCombinedEntry]

  // instance methods
  -[SKUIIndexBarEntry isEqual:]
  -[SKUIIndexBarEntry .cxx_destruct]
  -[SKUIIndexBarEntry size]
  -[SKUIIndexBarEntry contentSize]
  -[SKUIIndexBarEntry entryType]
  -[SKUIIndexBarEntry tintColor]
  -[SKUIIndexBarEntry setTintColor:]
  -[SKUIIndexBarEntry setContentEdgeInsets:]
  -[SKUIIndexBarEntry contentEdgeInsets]
  -[SKUIIndexBarEntry _tintColorDidChange]
  -[SKUIIndexBarEntry setEntryType:]
  -[SKUIIndexBarEntry visibilityPriority]
  -[SKUIIndexBarEntry setVisibilityPriority:]
  -[SKUIIndexBarEntry _calculatedContentSize]
  -[SKUIIndexBarEntry _drawContentInRect:]
  -[SKUIIndexBarEntry entryAttributedString]
  -[SKUIIndexBarEntry entryImage]
  -[SKUIIndexBarEntry _drawInRect:]


SKUIAttributedStringIndexBarEntry : SKUIIndexBarEntry
 @property  NSAttributedString *attributedString
 @property  NSDictionary *defaultTextAttributes

  // instance methods
  -[SKUIAttributedStringIndexBarEntry isEqual:]
  -[SKUIAttributedStringIndexBarEntry .cxx_destruct]
  -[SKUIAttributedStringIndexBarEntry initWithAttributedString:]
  -[SKUIAttributedStringIndexBarEntry attributedString]
  -[SKUIAttributedStringIndexBarEntry setDefaultTextAttributes:]
  -[SKUIAttributedStringIndexBarEntry defaultTextAttributes]
  -[SKUIAttributedStringIndexBarEntry _tintColorDidChange]
  -[SKUIAttributedStringIndexBarEntry _calculatedContentSize]
  -[SKUIAttributedStringIndexBarEntry _drawContentInRect:]
  -[SKUIAttributedStringIndexBarEntry entryAttributedString]
  -[SKUIAttributedStringIndexBarEntry _synthesizedAttributedString]
  -[SKUIAttributedStringIndexBarEntry _invalidateSynthesizedAttributedString]


SKUIImageIndexBarEntry : SKUIIndexBarEntry
 @property  UIImage *image

  // instance methods
  -[SKUIImageIndexBarEntry isEqual:]
  -[SKUIImageIndexBarEntry .cxx_destruct]
  -[SKUIImageIndexBarEntry image]
  -[SKUIImageIndexBarEntry initWithImage:]
  -[SKUIImageIndexBarEntry _calculatedContentSize]
  -[SKUIImageIndexBarEntry _drawContentInRect:]
  -[SKUIImageIndexBarEntry entryImage]


SKUIPlaceholderIndexBarEntry : SKUIIndexBarEntry
 @property  {CGSize=dd} placeholderSize

  // instance methods
  -[SKUIPlaceholderIndexBarEntry isEqual:]
  -[SKUIPlaceholderIndexBarEntry initWithPlaceholderSize:]
  -[SKUIPlaceholderIndexBarEntry _calculatedContentSize]
  -[SKUIPlaceholderIndexBarEntry placeholderSize]


SKUISystemCombinedIndexBarEntry : SKUIIndexBarEntry
  // class methods
  +[SKUISystemCombinedIndexBarEntry _dotDiameter]

  // instance methods
  -[SKUISystemCombinedIndexBarEntry init]
  -[SKUISystemCombinedIndexBarEntry _calculatedContentSize]
  -[SKUISystemCombinedIndexBarEntry _drawContentInRect:]


SKUIPanelDocumentViewController : SKUIViewController <SKUIArtworkRequestDelegate, SKUILayoutCacheDelegate, SKUIDocumentViewController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIPanelDocumentViewController dealloc]
  -[SKUIPanelDocumentViewController .cxx_destruct]
  -[SKUIPanelDocumentViewController loadView]
  -[SKUIPanelDocumentViewController viewWillAppear:]
  -[SKUIPanelDocumentViewController viewWillDisappear:]
  -[SKUIPanelDocumentViewController viewWillLayoutSubviews]
  -[SKUIPanelDocumentViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUIPanelDocumentViewController viewDidLayoutSubviews]
  -[SKUIPanelDocumentViewController viewDidAppear:]
  -[SKUIPanelDocumentViewController viewDidDisappear:]
  -[SKUIPanelDocumentViewController contentScrollView]
  -[SKUIPanelDocumentViewController _layoutBackgroundImageView]
  -[SKUIPanelDocumentViewController _activeBackgroundColor]
  -[SKUIPanelDocumentViewController _layoutContext]
  -[SKUIPanelDocumentViewController _keyboardWillChangeNotification:]
  -[SKUIPanelDocumentViewController documentDidUpdate:]
  -[SKUIPanelDocumentViewController artworkRequest:didLoadImage:]
  -[SKUIPanelDocumentViewController impressionableViewElements]
  -[SKUIPanelDocumentViewController layoutCacheDidFinishBatch:]
  -[SKUIPanelDocumentViewController _keyboardHideNotification:]
  -[SKUIPanelDocumentViewController _templateBackgroundColor]
  -[SKUIPanelDocumentViewController _reloadBackgroundImageView]
  -[SKUIPanelDocumentViewController _layoutScrollView]
  -[SKUIPanelDocumentViewController _reloadPanelViewWithScrollViewSize:]
  -[SKUIPanelDocumentViewController _reloadContentSize]
  -[SKUIPanelDocumentViewController _imageForBackgroundImageElement:]
  -[SKUIPanelDocumentViewController _requestPanelViewLayoutWithContentWidth:forced:]
  -[SKUIPanelDocumentViewController initWithTemplateElement:]


SKUIStarRatingView : UIView /usr/lib/libobjc.A.dylib
 @property  double elementSpacing
 @property  UIImage *ratingStarsImage
 @property  UILabel *textLabel

  // instance methods
  -[SKUIStarRatingView .cxx_destruct]
  -[SKUIStarRatingView setBackgroundColor:]
  -[SKUIStarRatingView initWithFrame:]
  -[SKUIStarRatingView sizeThatFits:]
  -[SKUIStarRatingView layoutSubviews]
  -[SKUIStarRatingView textLabel]
  -[SKUIStarRatingView setElementSpacing:]
  -[SKUIStarRatingView ratingStarsImage]
  -[SKUIStarRatingView setRatingStarsImage:]
  -[SKUIStarRatingView elementSpacing]


SKUIEditorialLinkLayout : NSObject /usr/lib/libc++.1.dylib <SKUICachedLayout>
 @property  NSArray *links
 @property  {CGSize=dd} totalSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIEditorialLinkLayout dealloc]
  -[SKUIEditorialLinkLayout .cxx_destruct]
  -[SKUIEditorialLinkLayout enumerateLinesUsingBlock:]
  -[SKUIEditorialLinkLayout totalSize]
  -[SKUIEditorialLinkLayout links]
  -[SKUIEditorialLinkLayout initWithLayoutRequest:]
  -[SKUIEditorialLinkLayout sizeForLinkAtIndex:]


SKUISignInSettingsGroupController : SKUISettingsGroupController
  // instance methods
  -[SKUISignInSettingsGroupController .cxx_destruct]
  -[SKUISignInSettingsGroupController _resignFirstResponder]
  -[SKUISignInSettingsGroupController valueForSettingDescription:]
  -[SKUISignInSettingsGroupController returnInSettingDescription:]
  -[SKUISignInSettingsGroupController setValue:forSettingDescription:]
  -[SKUISignInSettingsGroupController _keyForSettingDescription:]
  -[SKUISignInSettingsGroupController _becomeFirstResponderWithKey:]
  -[SKUISignInSettingsGroupController _attemptSignInWithAccountName:password:]
  -[SKUISignInSettingsGroupController _updateValidation]
  -[SKUISignInSettingsGroupController _updateFieldsAuthenticating:]
  -[SKUISignInSettingsGroupController _signInSuccess:]
  -[SKUISignInSettingsGroupController _signInFailed:error:]
  -[SKUISignInSettingsGroupController _settingDescriptionForKey:]
  -[SKUISignInSettingsGroupController _submitSettingDescription]
  -[SKUISignInSettingsGroupController isAuthenticating]
  -[SKUISignInSettingsGroupController submitSettingDescription:]


SKUIGiftThemeCollectionView : UICollectionView /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} visibleBoundsInsets

  // instance methods
  -[SKUIGiftThemeCollectionView pointInside:withEvent:]
  -[SKUIGiftThemeCollectionView _visibleBounds]
  -[SKUIGiftThemeCollectionView setVisibleBoundsInsets:]
  -[SKUIGiftThemeCollectionView visibleBoundsInsets]


SKUIMenuBarViewElementConfiguration : NSObject /usr/lib/libc++.1.dylib <IKAppMenuBarDocumentDelegate>
 @property  BOOL needsReload
 @property  <_SKUIMenuBarViewElementConfigurationReloadDelegate> *reloadDelegate
 @property  <SKUIMenuBarViewElementConfigurationDelegate> *delegate
 @property  long long menuBarStyle
 @property  unsigned long numberOfMenuItems
 @property  BOOL scrollEnabled
 @property  SKUIMenuItemViewElement *selectedMenuItemViewElement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIMenuBarViewElementConfiguration delegate]
  -[SKUIMenuBarViewElementConfiguration setDelegate:]
  -[SKUIMenuBarViewElementConfiguration .cxx_destruct]
  -[SKUIMenuBarViewElementConfiguration _needsReload]
  -[SKUIMenuBarViewElementConfiguration scrollEnabled]
  -[SKUIMenuBarViewElementConfiguration menuBarDocument:didSelectMenuItem:animated:]
  -[SKUIMenuBarViewElementConfiguration menuBarDocument:didReplaceDocumentForMenuItem:]
  -[SKUIMenuBarViewElementConfiguration menuBarDocument:didReplaceDocumentForEntityWithUniqueIdentifier:]
  -[SKUIMenuBarViewElementConfiguration documentForEntityUniqueIdentifier:]
  -[SKUIMenuBarViewElementConfiguration documentOptionsForEntityUniqueIdentifier:]
  -[SKUIMenuBarViewElementConfiguration _ensureDataLoaded]
  -[SKUIMenuBarViewElementConfiguration _initWithMenuBarDocument:]
  -[SKUIMenuBarViewElementConfiguration menuBarStyle]
  -[SKUIMenuBarViewElementConfiguration numberOfMenuItems]
  -[SKUIMenuBarViewElementConfiguration selectedMenuItemViewElement]
  -[SKUIMenuBarViewElementConfiguration documentForMenuItemAtIndex:]
  -[SKUIMenuBarViewElementConfiguration documentOptionsForMenuItemAtIndex:]
  -[SKUIMenuBarViewElementConfiguration indexOfMenuItemViewElement:]
  -[SKUIMenuBarViewElementConfiguration contentWillAppearForMenuItemAtIndex:withEntityValueProvider:clientContext:]
  -[SKUIMenuBarViewElementConfiguration _reloadWithMenuBarStyle:menuItemViewElements:scrollEnabled:]
  -[SKUIMenuBarViewElementConfiguration _setNeedsReload:]
  -[SKUIMenuBarViewElementConfiguration _reloadDelegate]
  -[SKUIMenuBarViewElementConfiguration _setReloadDelegate:]


SKUIOnboardingAffiliationCirclesViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIPhysicalCirclesDataSource, SKUIPhysicalCirclesDelegate>
 @property  NSArray *affiliationItems
 @property  SKUIClientContext *clientContext
 @property  <SKUIOnboardingAffiliationCirclesDelegate> *delegate
 @property  SKUIOnboardingInstructionsView *instructionsView
 @property  double maximumCircleDiameter
 @property  UIView *footerView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIOnboardingAffiliationCirclesViewController dealloc]
  -[SKUIOnboardingAffiliationCirclesViewController delegate]
  -[SKUIOnboardingAffiliationCirclesViewController setDelegate:]
  -[SKUIOnboardingAffiliationCirclesViewController .cxx_destruct]
  -[SKUIOnboardingAffiliationCirclesViewController loadView]
  -[SKUIOnboardingAffiliationCirclesViewController viewWillAppear:]
  -[SKUIOnboardingAffiliationCirclesViewController viewWillDisappear:]
  -[SKUIOnboardingAffiliationCirclesViewController viewDidLayoutSubviews]
  -[SKUIOnboardingAffiliationCirclesViewController viewDidAppear:]
  -[SKUIOnboardingAffiliationCirclesViewController viewDidDisappear:]
  -[SKUIOnboardingAffiliationCirclesViewController footerView]
  -[SKUIOnboardingAffiliationCirclesViewController setFooterView:]
  -[SKUIOnboardingAffiliationCirclesViewController clientContext]
  -[SKUIOnboardingAffiliationCirclesViewController setClientContext:]
  -[SKUIOnboardingAffiliationCirclesViewController setFooterView:animated:]
  -[SKUIOnboardingAffiliationCirclesViewController setAffiliationItems:]
  -[SKUIOnboardingAffiliationCirclesViewController affiliationItems]
  -[SKUIOnboardingAffiliationCirclesViewController setImage:forAffiliationItem:]
  -[SKUIOnboardingAffiliationCirclesViewController setUserAffinityCount:forAffiliationItemAtIndex:animated:completionBlock:]
  -[SKUIOnboardingAffiliationCirclesViewController removeAffiliationItemsInIndexSet:animated:completionBlock:]
  -[SKUIOnboardingAffiliationCirclesViewController addAffiliationItems:]
  -[SKUIOnboardingAffiliationCirclesViewController performFinishAnimationWithCompletionBlock:]
  -[SKUIOnboardingAffiliationCirclesViewController resetWithAffiliationItems:animated:completionBlock:]
  -[SKUIOnboardingAffiliationCirclesViewController maximumCircleDiameter]
  -[SKUIOnboardingAffiliationCirclesViewController instructionsView]
  -[SKUIOnboardingAffiliationCirclesViewController _circleSizeForAffinityCount:]
  -[SKUIOnboardingAffiliationCirclesViewController _titlePositionForAffinityCount:]
  -[SKUIOnboardingAffiliationCirclesViewController _circleImageAlphaForAffinityCount:]
  -[SKUIOnboardingAffiliationCirclesViewController _reloadRepellors]
  -[SKUIOnboardingAffiliationCirclesViewController _topLayoutMargin]
  -[SKUIOnboardingAffiliationCirclesViewController _cancelDeletionTimer]
  -[SKUIOnboardingAffiliationCirclesViewController _completeDeletionForCircleAtIndex:]
  -[SKUIOnboardingAffiliationCirclesViewController _sendAffilationItemsDidChange]
  -[SKUIOnboardingAffiliationCirclesViewController numberOfCirclesInCircleView:]
  -[SKUIOnboardingAffiliationCirclesViewController circlesView:circleForIndex:]
  -[SKUIOnboardingAffiliationCirclesViewController circleView:didBeginLongPressForCircleAtIndex:]
  -[SKUIOnboardingAffiliationCirclesViewController circleView:didEndLongPressForCircleAtIndex:]
  -[SKUIOnboardingAffiliationCirclesViewController circleView:didTapCircleAtIndex:]


SKUIGiftTheme : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long themeIdentifier
 @property  NSString *themeName
 @property  UIColor *backgroundColor
 @property  UIColor *bodyTextColor
 @property  UIColor *primaryTextColor
 @property  UIImage *headerImage
 @property  NSURL *headerImageURL

  // instance methods
  -[SKUIGiftTheme copyWithZone:]
  -[SKUIGiftTheme .cxx_destruct]
  -[SKUIGiftTheme backgroundColor]
  -[SKUIGiftTheme setBackgroundColor:]
  -[SKUIGiftTheme setPrimaryTextColor:]
  -[SKUIGiftTheme primaryTextColor]
  -[SKUIGiftTheme themeIdentifier]
  -[SKUIGiftTheme setThemeIdentifier:]
  -[SKUIGiftTheme headerImage]
  -[SKUIGiftTheme bodyTextColor]
  -[SKUIGiftTheme themeName]
  -[SKUIGiftTheme setBodyTextColor:]
  -[SKUIGiftTheme initWithThemeDictionary:]
  -[SKUIGiftTheme setHeaderImage:]
  -[SKUIGiftTheme headerImageURL]
  -[SKUIGiftTheme setHeaderImageURL:]
  -[SKUIGiftTheme setThemeName:]


SKUIGiftConfirmViewController : SKUIGiftStepViewController
  // instance methods
  -[SKUIGiftConfirmViewController dealloc]
  -[SKUIGiftConfirmViewController .cxx_destruct]
  -[SKUIGiftConfirmViewController loadView]
  -[SKUIGiftConfirmViewController initWithGift:configuration:]
  -[SKUIGiftConfirmViewController _termsButtonAction:]
  -[SKUIGiftConfirmViewController _buyButtonTitle]
  -[SKUIGiftConfirmViewController _newBuyBarButtonItemWithTitle:]
  -[SKUIGiftConfirmViewController _purchaseGift]
  -[SKUIGiftConfirmViewController _setShowingConfirmation:animated:]
  -[SKUIGiftConfirmViewController _removeCancelGestureRecognizer]
  -[SKUIGiftConfirmViewController _cancelBuyConfirmation:]
  -[SKUIGiftConfirmViewController _showSuccessPage]
  -[SKUIGiftConfirmViewController _finishPurchaseWithResult:errorMessage:]
  -[SKUIGiftConfirmViewController _confirmButtonTitle]
  -[SKUIGiftConfirmViewController _buyButtonAction:]


SKUIFamilySettingDescription : SKUISettingDescription
 @property  long long viewState

  // class methods
  +[SKUIFamilySettingDescription _viewClassForSettingDescription:]

  // instance methods
  -[SKUIFamilySettingDescription .cxx_destruct]
  -[SKUIFamilySettingDescription viewState]
  -[SKUIFamilySettingDescription _initiallyHidden]
  -[SKUIFamilySettingDescription initWithViewElement:parent:]
  -[SKUIFamilySettingDescription handleSelectionOnCompletion:]
  -[SKUIFamilySettingDescription _updateViewState]
  -[SKUIFamilySettingDescription _updateWithViewState:]


SKUIRedeemTemplateViewElement : SKUIViewElement
 @property  NSString *initialCode

  // instance methods
  -[SKUIRedeemTemplateViewElement .cxx_destruct]
  -[SKUIRedeemTemplateViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIRedeemTemplateViewElement applyUpdatesWithElement:]
  -[SKUIRedeemTemplateViewElement initialCode]


SKUIGiftConfirmView : UIView /usr/lib/libobjc.A.dylib
 @property  UIButton *termsButton

  // instance methods
  -[SKUIGiftConfirmView .cxx_destruct]
  -[SKUIGiftConfirmView layoutSubviews]
  -[SKUIGiftConfirmView initWithGift:configuration:]
  -[SKUIGiftConfirmView termsButton]
  -[SKUIGiftConfirmView _newLightLabelWithSize:alpha:]
  -[SKUIGiftConfirmView _termsButton]
  -[SKUIGiftConfirmView _newBoldLabelWithSize:]


SKUIWriteAReviewTemplateViewElement : SKUIViewElement
 @property  long long itemIdentifier
 @property  NSString *reviewMetadataURLString

  // instance methods
  -[SKUIWriteAReviewTemplateViewElement .cxx_destruct]
  -[SKUIWriteAReviewTemplateViewElement itemIdentifier]
  -[SKUIWriteAReviewTemplateViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIWriteAReviewTemplateViewElement applyUpdatesWithElement:]
  -[SKUIWriteAReviewTemplateViewElement reviewMetadataURLString]


SKUIReviewInAppConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *itemID
 @property  NSString *title
 @property  UIViewController *viewController
 @property  SKUIClientContext *clientContext
 @property  NSString *customDescription
 @property  UIImage *icon
 @property  BOOL sandboxed

  // instance methods
  -[SKUIReviewInAppConfiguration .cxx_destruct]
  -[SKUIReviewInAppConfiguration title]
  -[SKUIReviewInAppConfiguration setTitle:]
  -[SKUIReviewInAppConfiguration itemID]
  -[SKUIReviewInAppConfiguration setItemID:]
  -[SKUIReviewInAppConfiguration setViewController:]
  -[SKUIReviewInAppConfiguration icon]
  -[SKUIReviewInAppConfiguration viewController]
  -[SKUIReviewInAppConfiguration setIcon:]
  -[SKUIReviewInAppConfiguration customDescription]
  -[SKUIReviewInAppConfiguration setCustomDescription:]
  -[SKUIReviewInAppConfiguration clientContext]
  -[SKUIReviewInAppConfiguration setClientContext:]
  -[SKUIReviewInAppConfiguration isSandboxed]
  -[SKUIReviewInAppConfiguration setSandboxed:]


SKUIPredicateViewElement : SKUIViewElement
 @property  NSPredicate *entityValuePredicate

  // instance methods
  -[SKUIPredicateViewElement entityValuePredicate]


SKUITracklistColumnData : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *columns
 @property  double interColumnSpacing
 @property  double leftEdgeInset
 @property  double rightEdgeInset

  // instance methods
  -[SKUITracklistColumnData .cxx_destruct]
  -[SKUITracklistColumnData columns]
  -[SKUITracklistColumnData setColumns:]
  -[SKUITracklistColumnData _initSKUITracklistColumnData]
  -[SKUITracklistColumnData enumerateColumnsForTrack:usingBlock:]
  -[SKUITracklistColumnData initWithRepresentativeTrack:]
  -[SKUITracklistColumnData adjustColumnsToFitWidth:]
  -[SKUITracklistColumnData columnForIdentifier:]
  -[SKUITracklistColumnData enumerateColumnsForHeader:usingBlock:]
  -[SKUITracklistColumnData viewElementsForTrack:columnIndex:]
  -[SKUITracklistColumnData interColumnSpacing]
  -[SKUITracklistColumnData setInterColumnSpacing:]
  -[SKUITracklistColumnData leftEdgeInset]
  -[SKUITracklistColumnData setLeftEdgeInset:]
  -[SKUITracklistColumnData rightEdgeInset]
  -[SKUITracklistColumnData setRightEdgeInset:]


SKUITracklistColumn : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  double width
 @property  long long columnIdentifier
 @property  BOOL showsPreviewControl
 @property  BOOL sizesToFit
 @property  long long contentAlignment
 @property  long long headerAlignment
 @property  double maximumWidthFraction
 @property  double preferredWidth

  // instance methods
  -[SKUITracklistColumn copyWithZone:]
  -[SKUITracklistColumn width]
  -[SKUITracklistColumn setWidth:]
  -[SKUITracklistColumn preferredWidth]
  -[SKUITracklistColumn contentAlignment]
  -[SKUITracklistColumn setContentAlignment:]
  -[SKUITracklistColumn setPreferredWidth:]
  -[SKUITracklistColumn setHeaderAlignment:]
  -[SKUITracklistColumn columnIdentifier]
  -[SKUITracklistColumn setColumnIdentifier:]
  -[SKUITracklistColumn setShowsPreviewControl:]
  -[SKUITracklistColumn setSizesToFit:]
  -[SKUITracklistColumn sizesToFit]
  -[SKUITracklistColumn maximumWidthFraction]
  -[SKUITracklistColumn setMaximumWidthFraction:]
  -[SKUITracklistColumn setPreferredWidthForAttributedStrings:]
  -[SKUITracklistColumn headerAlignment]
  -[SKUITracklistColumn showsPreviewControl]


SKUIShareTemplateImageItemProvider : UIActivityItemProvider /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIShareTemplateImageItemProvider .cxx_destruct]
  -[SKUIShareTemplateImageItemProvider item]
  -[SKUIShareTemplateImageItemProvider initWithTemplateElement:]


SKUIGiftConfirmLabeledValue : UIView /usr/lib/libobjc.A.dylib
 @property  long long giftConfirmLabelStyle
 @property  NSString *label
 @property  NSString *subtitleLabel
 @property  NSString *value

  // instance methods
  -[SKUIGiftConfirmLabeledValue .cxx_destruct]
  -[SKUIGiftConfirmLabeledValue value]
  -[SKUIGiftConfirmLabeledValue setValue:]
  -[SKUIGiftConfirmLabeledValue setLabel:]
  -[SKUIGiftConfirmLabeledValue label]
  -[SKUIGiftConfirmLabeledValue sizeThatFits:]
  -[SKUIGiftConfirmLabeledValue layoutSubviews]
  -[SKUIGiftConfirmLabeledValue setSubtitleLabel:]
  -[SKUIGiftConfirmLabeledValue subtitleLabel]
  -[SKUIGiftConfirmLabeledValue initWithGiftConfirmLabelStyle:]
  -[SKUIGiftConfirmLabeledValue giftConfirmLabelStyle]


SKUIGiftDashView : UIView /usr/lib/libobjc.A.dylib
 @property  UIColor *dashColor
 @property  {CGSize=dd} dashSize
 @property  double dashSpacing

  // instance methods
  -[SKUIGiftDashView .cxx_destruct]
  -[SKUIGiftDashView drawRect:]
  -[SKUIGiftDashView setDashColor:]
  -[SKUIGiftDashView setDashSize:]
  -[SKUIGiftDashView setDashSpacing:]
  -[SKUIGiftDashView dashColor]
  -[SKUIGiftDashView dashSize]
  -[SKUIGiftDashView dashSpacing]


SKUILoadingViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  SKUILoadingView *loadingView
 @property  SKUIClientContext *clientContext
 @property  NSString *loadingText
 @property  UIColor *backgroundColor
 @property  SKUIColorScheme *spinnerColorScheme

  // instance methods
  -[SKUILoadingViewController .cxx_destruct]
  -[SKUILoadingViewController backgroundColor]
  -[SKUILoadingViewController setBackgroundColor:]
  -[SKUILoadingViewController viewDidLoad]
  -[SKUILoadingViewController viewDidLayoutSubviews]
  -[SKUILoadingViewController clientContext]
  -[SKUILoadingViewController initWithClientContext:]
  -[SKUILoadingViewController _initializeLoadingView]
  -[SKUILoadingViewController setLoadingView:]
  -[SKUILoadingViewController loadingText]
  -[SKUILoadingViewController loadingView]
  -[SKUILoadingViewController setLoadingText:]
  -[SKUILoadingViewController spinnerColorScheme]
  -[SKUILoadingViewController setSpinnerColorScheme:]


SKUIGiftResultViewController : SKUIGiftStepViewController
  // instance methods
  -[SKUIGiftResultViewController dealloc]
  -[SKUIGiftResultViewController .cxx_destruct]
  -[SKUIGiftResultViewController loadView]
  -[SKUIGiftResultViewController viewWillAppear:]
  -[SKUIGiftResultViewController _itemView]
  -[SKUIGiftResultViewController initWithGift:configuration:]
  -[SKUIGiftResultViewController _setItemImage:error:]
  -[SKUIGiftResultViewController _itemImage]
  -[SKUIGiftResultViewController _giftAgainAction:]
  -[SKUIGiftResultViewController _doneButtonAction:]


SKUIShelfPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIObservableScrollViewDelegate, SKUIShelfPageSectionConfigurationDataSource, SKUIViewElementSlideshowDelegate, UICollectionViewDataSource, UICollectionViewDelegate, SKUIShelfPageSection>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SKUIScrollViewDelegateObserver> *scrollViewDelegateObserver
 @property  SKUIShelfPageSectionConfiguration *configuration
 @property  SKUIShelfPageComponent *pageComponent

  // instance methods
  -[SKUIShelfPageSection dealloc]
  -[SKUIShelfPageSection _setContext:]
  -[SKUIShelfPageSection .cxx_destruct]
  -[SKUIShelfPageSection configuration]
  -[SKUIShelfPageSection scrollViewDidScroll:]
  -[SKUIShelfPageSection scrollViewWillBeginDragging:]
  -[SKUIShelfPageSection scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SKUIShelfPageSection scrollViewWillBeginDecelerating:]
  -[SKUIShelfPageSection scrollViewDidEndDecelerating:]
  -[SKUIShelfPageSection collectionView:numberOfItemsInSection:]
  -[SKUIShelfPageSection collectionView:cellForItemAtIndexPath:]
  -[SKUIShelfPageSection collectionView:shouldHighlightItemAtIndexPath:]
  -[SKUIShelfPageSection collectionView:didSelectItemAtIndexPath:]
  -[SKUIShelfPageSection collectionView:willDisplayCell:forItemAtIndexPath:]
  -[SKUIShelfPageSection collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[SKUIShelfPageSection willPresentPreviewViewController:forLocation:inSourceView:]
  -[SKUIShelfPageSection previewingContext:viewControllerForLocation:]
  -[SKUIShelfPageSection artworkRequest:didLoadImage:]
  -[SKUIShelfPageSection initWithPageComponent:configuration:]
  -[SKUIShelfPageSection initWithPageComponent:]
  -[SKUIShelfPageSection _reloadViewElementProperties]
  -[SKUIShelfPageSection applyUpdateType:]
  -[SKUIShelfPageSection backgroundColorForIndexPath:]
  -[SKUIShelfPageSection collectionViewWillApplyLayoutAttributes:]
  -[SKUIShelfPageSection deselectItemsAnimated:]
  -[SKUIShelfPageSection invalidateCachedLayoutInformation]
  -[SKUIShelfPageSection sectionContentInset]
  -[SKUIShelfPageSection setTopSection:]
  -[SKUIShelfPageSection willAppearInContext:]
  -[SKUIShelfPageSection _normalizedShelfItemIndexPathFromActualIndexPath:]
  -[SKUIShelfPageSection scrollViewDelegateObserver]
  -[SKUIShelfPageSection setScrollViewDelegateObserver:]
  -[SKUIShelfPageSection shelfPageSectionConfiguration:viewElementAtIndex:]
  -[SKUIShelfPageSection cellForIndexPath:]
  -[SKUIShelfPageSection cellSizeForIndexPath:]
  -[SKUIShelfPageSection entityProvider:didInvalidateWithContext:]
  -[SKUIShelfPageSection numberOfCells]
  -[SKUIShelfPageSection collectionView:didConfirmButtonElement:withClickInfo:forItemAtIndexPath:]
  -[SKUIShelfPageSection collectionView:layout:willApplyLayoutAttributes:]
  -[SKUIShelfPageSection viewElementSlideshowWillDismiss:]
  -[SKUIShelfPageSection prefetchResourcesWithReason:]
  -[SKUIShelfPageSection updateCellWithIndexPath:itemState:animated:]
  -[SKUIShelfPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIShelfPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIShelfPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIShelfPageSection getModalSourceViewForViewElement:completionBlock:]
  -[SKUIShelfPageSection _performDefaultSelectActionForEffectiveViewElement:]


SKUISettingsDocumentView : UIView /usr/lib/libobjc.A.dylib
 @property  <SKUISettingsDocumentViewDelegate> *delegate

  // instance methods
  -[SKUISettingsDocumentView delegate]
  -[SKUISettingsDocumentView setDelegate:]
  -[SKUISettingsDocumentView .cxx_destruct]
  -[SKUISettingsDocumentView tintColorDidChange]


SKUIVideoThumbnailView : SKUIImageView
  // instance methods
  -[SKUIVideoThumbnailView .cxx_destruct]
  -[SKUIVideoThumbnailView layoutSubviews]


SKUISeparatorView : UIView /usr/lib/libobjc.A.dylib
 @property  UIColor *color1
 @property  UIColor *color2
 @property  long long separatorStyle

  // instance methods
  -[SKUISeparatorView .cxx_destruct]
  -[SKUISeparatorView color1]
  -[SKUISeparatorView setColor1:]
  -[SKUISeparatorView drawRect:]
  -[SKUISeparatorView separatorStyle]
  -[SKUISeparatorView setSeparatorStyle:]
  -[SKUISeparatorView setColor2:]
  -[SKUISeparatorView color2]


SKUIArtworkProvidingFactory : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SKUIArtworkProvidingFactory artworkProviderForStoreResponse:]
  +[SKUIArtworkProvidingFactory artworkCacheCandidatesForProvider:]


SKUIIndexBarEntryListViewElement : SKUIViewElement
 @property  NSArray *childIndexBarEntryElements
 @property  long long entryListElementType
 @property  BOOL indexBarHiddenWhenEmpty
 @property  long long minimumEntityCount
 @property  NSString *targetIndexBarEntryID

  // instance methods
  -[SKUIIndexBarEntryListViewElement .cxx_destruct]
  -[SKUIIndexBarEntryListViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIIndexBarEntryListViewElement applyUpdatesWithElement:]
  -[SKUIIndexBarEntryListViewElement isIndexBarHiddenWhenEmpty]
  -[SKUIIndexBarEntryListViewElement minimumEntityCount]
  -[SKUIIndexBarEntryListViewElement childIndexBarEntryElements]
  -[SKUIIndexBarEntryListViewElement targetIndexBarEntryID]
  -[SKUIIndexBarEntryListViewElement entryListElementType]


SKUIGiftItemView : UIView /usr/lib/libobjc.A.dylib
 @property  BOOL leftToRight
 @property  long long giftItemStyle
 @property  SKUIItem *item
 @property  SKUIGiftTheme *theme
 @property  NSString *artistName
 @property  NSString *categoryName
 @property  NSString *price
 @property  NSString *title
 @property  long long numberOfUserRatings
 @property  float userRating
 @property  SKUIItemOfferButton *itemOfferButton
 @property  SKUIItemState *itemState
 @property  UIImage *itemImage
 @property  SKUIItemArtworkContext *artworkContext

  // instance methods
  -[SKUIGiftItemView dealloc]
  -[SKUIGiftItemView .cxx_destruct]
  -[SKUIGiftItemView item]
  -[SKUIGiftItemView title]
  -[SKUIGiftItemView setTitle:]
  -[SKUIGiftItemView categoryName]
  -[SKUIGiftItemView setBackgroundColor:]
  -[SKUIGiftItemView sizeThatFits:]
  -[SKUIGiftItemView layoutSubviews]
  -[SKUIGiftItemView _newLabel]
  -[SKUIGiftItemView setLeftToRight:]
  -[SKUIGiftItemView leftToRight]
  -[SKUIGiftItemView _imageEdgeInsets]
  -[SKUIGiftItemView _imageSize]
  -[SKUIGiftItemView _titleColor]
  -[SKUIGiftItemView setItemState:]
  -[SKUIGiftItemView itemState]
  -[SKUIGiftItemView price]
  -[SKUIGiftItemView setPrice:]
  -[SKUIGiftItemView theme]
  -[SKUIGiftItemView setTheme:]
  -[SKUIGiftItemView artistName]
  -[SKUIGiftItemView setArtistName:]
  -[SKUIGiftItemView userRating]
  -[SKUIGiftItemView setUserRating:]
  -[SKUIGiftItemView numberOfUserRatings]
  -[SKUIGiftItemView setCategoryName:]
  -[SKUIGiftItemView _subtitleColor]
  -[SKUIGiftItemView _reloadUserRatingViews]
  -[SKUIGiftItemView setNumberOfUserRatings:]
  -[SKUIGiftItemView itemOfferButton]
  -[SKUIGiftItemView artworkContext]
  -[SKUIGiftItemView initWithStyle:item:clientContext:]
  -[SKUIGiftItemView setItemImage:]
  -[SKUIGiftItemView itemImage]
  -[SKUIGiftItemView _reloadItemState:]
  -[SKUIGiftItemView _itemOfferConfirmAction:]
  -[SKUIGiftItemView _reloadSubtitles]
  -[SKUIGiftItemView setItemState:animated:]
  -[SKUIGiftItemView _paddingTrailing]
  -[SKUIGiftItemView _paddingLeading]
  -[SKUIGiftItemView _enumerateMetadataViewsUsingBlock:]
  -[SKUIGiftItemView _userRatingColor]
  -[SKUIGiftItemView giftItemStyle]


SKUIIPadSearchSeparatorView : UICollectionReusableView /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIIPadSearchSeparatorView initWithFrame:]


SKUISearchCollectionViewFlowLayout : SKUIItemGridCollectionViewLayout
 @property  double horizontalPadding
 @property  double verticalPadding
 @property  BOOL backfills

  // instance methods
  -[SKUISearchCollectionViewFlowLayout init]
  -[SKUISearchCollectionViewFlowLayout .cxx_destruct]
  -[SKUISearchCollectionViewFlowLayout prepareLayout]
  -[SKUISearchCollectionViewFlowLayout layoutAttributesForElementsInRect:]
  -[SKUISearchCollectionViewFlowLayout layoutAttributesForDecorationViewOfKind:atIndexPath:]
  -[SKUISearchCollectionViewFlowLayout setHorizontalPadding:]
  -[SKUISearchCollectionViewFlowLayout horizontalPadding]
  -[SKUISearchCollectionViewFlowLayout verticalPadding]
  -[SKUISearchCollectionViewFlowLayout setVerticalPadding:]
  -[SKUISearchCollectionViewFlowLayout backfills]
  -[SKUISearchCollectionViewFlowLayout setBackfills:]


SKUIImageDataConsumer : SSVURLDataConsumer /System/Library/Frameworks/UIKit.framework/UIKit
 @property  BOOL imagePlaceholderAvailable

  // instance methods
  -[SKUIImageDataConsumer objectForData:response:error:]
  -[SKUIImageDataConsumer imageForImage:]
  -[SKUIImageDataConsumer isImagePlaceholderAvailable]
  -[SKUIImageDataConsumer imagePlaceholderForColor:]
  -[SKUIImageDataConsumer imageForColor:]
  -[SKUIImageDataConsumer imageForColor:size:]


SKUIInputViewElement : SKUIViewElement
  // instance methods
  -[SKUIInputViewElement initWithDOMElement:parent:elementFactory:]


SKUISpacerViewElement : SKUIViewElement

SKUIGiftStepViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  SKUIGift *gift
 @property  SKUIGiftConfiguration *giftConfiguration
 @property  NSOperationQueue *operationQueue

  // instance methods
  -[SKUIGiftStepViewController .cxx_destruct]
  -[SKUIGiftStepViewController operationQueue]
  -[SKUIGiftStepViewController setOperationQueue:]
  -[SKUIGiftStepViewController initWithGift:configuration:]
  -[SKUIGiftStepViewController gift]
  -[SKUIGiftStepViewController giftConfiguration]
  -[SKUIGiftStepViewController loadItemArtworkWithArtworkContext:completionBlock:]
  -[SKUIGiftStepViewController finishGiftingWithResult:]
  -[SKUIGiftStepViewController _finishImageLoadWithImage:error:block:]


SKUIStorePageViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIStorePageSectionsDelegate, SKUIViewControllerTesting, SKUIMetricsViewController, UIViewControllerRestoration>
 @property  BOOL skLoading
 @property  SKUIStorePage *storePage
 @property  SKUIClientContext *clientContext
 @property  <SKUIStorePageDelegate> *delegate
 @property  NSOperationQueue *operationQueue
 @property  UIRefreshControl *refreshControl
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIStorePageViewController _shouldForwardViewWillTransitionToSize]
  +[SKUIStorePageViewController viewControllerWithRestorationIdentifierPath:coder:]

  // instance methods
  -[SKUIStorePageViewController dealloc]
  -[SKUIStorePageViewController delegate]
  -[SKUIStorePageViewController setDelegate:]
  -[SKUIStorePageViewController .cxx_destruct]
  -[SKUIStorePageViewController operationQueue]
  -[SKUIStorePageViewController setOperationQueue:]
  -[SKUIStorePageViewController loadView]
  -[SKUIStorePageViewController initWithNibName:bundle:]
  -[SKUIStorePageViewController viewWillAppear:]
  -[SKUIStorePageViewController supportedInterfaceOrientations]
  -[SKUIStorePageViewController refreshControl]
  -[SKUIStorePageViewController encodeRestorableStateWithCoder:]
  -[SKUIStorePageViewController decodeRestorableStateWithCoder:]
  -[SKUIStorePageViewController didRotateFromInterfaceOrientation:]
  -[SKUIStorePageViewController setRefreshControl:]
  -[SKUIStorePageViewController clientContext]
  -[SKUIStorePageViewController setClientContext:]
  -[SKUIStorePageViewController setMetricsController:]
  -[SKUIStorePageViewController _colorScheme]
  -[SKUIStorePageViewController _setMetricsController:]
  -[SKUIStorePageViewController sectionsViewControllerDidDismissOverlayController:]
  -[SKUIStorePageViewController performTestWithName:options:]
  -[SKUIStorePageViewController sectionsViewController:showProductPageForItem:]
  -[SKUIStorePageViewController sectionsViewController:showStorePageForURL:]
  -[SKUIStorePageViewController _sectionsViewController]
  -[SKUIStorePageViewController _metricsEnterEventNotification:]
  -[SKUIStorePageViewController loadURLRequest:withCompletionBlock:]
  -[SKUIStorePageViewController loadURLRequest:withDataConsumer:completionBlock:]
  -[SKUIStorePageViewController _loadWithOperation:completionBlock:]
  -[SKUIStorePageViewController _reloadStorePage]
  -[SKUIStorePageViewController _setStorePage:error:]
  -[SKUIStorePageViewController _recordMetricsPageEvent:forStorePage:]
  -[SKUIStorePageViewController _runScrollTestWithName:options:]
  -[SKUIStorePageViewController _showProductPage:withPageEvent:]
  -[SKUIStorePageViewController _runPerformanceTestAfterPageLoad]
  -[SKUIStorePageViewController cancelPageLoad]
  -[SKUIStorePageViewController activeMetricsController]
  -[SKUIStorePageViewController isSkLoading]
  -[SKUIStorePageViewController loadURL:withCompletionBlock:]
  -[SKUIStorePageViewController loadURL:withDataConsumer:completionBlock:]
  -[SKUIStorePageViewController setStorePage:]
  -[SKUIStorePageViewController loadWithJSONData:fromOperation:completionBlock:]
  -[SKUIStorePageViewController _runPerformanceTestAfterIdle]
  -[SKUIStorePageViewController storePage]


SKUIDefaultSettingDescription : SKUISettingDescription
  // class methods
  +[SKUIDefaultSettingDescription _viewClassForSettingDescription:]


SKUIStorePageSection : NSObject /usr/lib/libc++.1.dylib <SKUIProductPageOverlayDelegate>
 @property  long long defaultItemPinningStyle
 @property  IKColor *backgroundColorForSection
 @property  BOOL fitsToHeight
 @property  NSArray *indexPathsForBackgroundItems
 @property  NSArray *indexPathsForPinningItems
 @property  long long numberOfCells
 @property  {CGSize=dd} preferredContentSize
 @property  {UIEdgeInsets=dddd} sectionContentInset
 @property  NSSet *relevantEntityProviders
 @property  NSIndexPath *firstAppearanceIndexPath
 @property  SKUIPageComponent *pageComponent
 @property  SKUIStorePageSectionContext *context
 @property  long long sectionIndex
 @property  BOOL bottomSection
 @property  BOOL topSection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIStorePageSection dealloc]
  -[SKUIStorePageSection _setContext:]
  -[SKUIStorePageSection .cxx_destruct]
  -[SKUIStorePageSection context]
  -[SKUIStorePageSection preferredContentSize]
  -[SKUIStorePageSection willPresentPreviewViewController:forLocation:inSourceView:]
  -[SKUIStorePageSection previewingContext:viewControllerForLocation:]
  -[SKUIStorePageSection sectionIndex]
  -[SKUIStorePageSection setSectionIndex:]
  -[SKUIStorePageSection initWithPageComponent:]
  -[SKUIStorePageSection applyUpdateType:]
  -[SKUIStorePageSection backgroundColorForIndexPath:]
  -[SKUIStorePageSection collectionViewWillApplyLayoutAttributes:]
  -[SKUIStorePageSection deselectItemsAnimated:]
  -[SKUIStorePageSection invalidateCachedLayoutInformation]
  -[SKUIStorePageSection relevantEntityProviders]
  -[SKUIStorePageSection sectionContentInset]
  -[SKUIStorePageSection setTopSection:]
  -[SKUIStorePageSection willAppearInContext:]
  -[SKUIStorePageSection willHideInContext:]
  -[SKUIStorePageSection collectionViewDidConfirmButtonElement:withClickInfo:forItemAtIndexPath:]
  -[SKUIStorePageSection pageComponent]
  -[SKUIStorePageSection cellForIndexPath:]
  -[SKUIStorePageSection cellSizeForIndexPath:]
  -[SKUIStorePageSection entityProvider:didInvalidateWithContext:]
  -[SKUIStorePageSection numberOfCells]
  -[SKUIStorePageSection setBottomSection:]
  -[SKUIStorePageSection updateWithContext:pageComponent:]
  -[SKUIStorePageSection prefetchResourcesWithReason:]
  -[SKUIStorePageSection collectionViewDidLongPressItemAtIndexPath:]
  -[SKUIStorePageSection requestLayoutWithReloadReason:]
  -[SKUIStorePageSection indexPathsForPinningItems]
  -[SKUIStorePageSection showPageWithLink:]
  -[SKUIStorePageSection updateCellWithIndexPath:itemState:animated:]
  -[SKUIStorePageSection reloadVisibleCellsWithReason:]
  -[SKUIStorePageSection reloadCellWithIndexPath:reason:]
  -[SKUIStorePageSection backgroundColorForSection]
  -[SKUIStorePageSection pinningContentInsetForItemAtIndexPath:]
  -[SKUIStorePageSection pinningStyleForItemAtIndexPath:]
  -[SKUIStorePageSection pinningGroupForItemAtIndexPath:]
  -[SKUIStorePageSection pinningTransitionStyleForItemAtIndexPath:]
  -[SKUIStorePageSection indexPathsForBackgroundItems]
  -[SKUIStorePageSection addImpressionsForIndexPath:toSession:]
  -[SKUIStorePageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIStorePageSection registerContextActionsForCell:indexPath:viewController:]
  -[SKUIStorePageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIStorePageSection unregisterContextActionsForCell:indexPath:viewController:]
  -[SKUIStorePageSection collectionViewDidSelectItemAtIndexPath:]
  -[SKUIStorePageSection expandEditorialForLabelElement:indexPath:]
  -[SKUIStorePageSection performDefaultActionForViewElement:]
  -[SKUIStorePageSection collectionViewShouldHighlightItemAtIndexPath:]
  -[SKUIStorePageSection collectionViewShouldSelectItemAtIndexPath:]
  -[SKUIStorePageSection collectionViewDidConfirmItemOfferAtIndexPath:]
  -[SKUIStorePageSection collectionViewDidTapVideoAtIndexPath:]
  -[SKUIStorePageSection collectionViewWillScrollToOffset:visibleRange:]
  -[SKUIStorePageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIStorePageSection fitsToHeight]
  -[SKUIStorePageSection contentInsetAdjustmentForCollectionView:]
  -[SKUIStorePageSection didAppearInContext:]
  -[SKUIStorePageSection firstAppearanceIndexPath]
  -[SKUIStorePageSection productPageOverlayDidDismiss:]
  -[SKUIStorePageSection getModalSourceViewForViewElement:completionBlock:]
  -[SKUIStorePageSection containsElementWithIndexBarEntryID:]
  -[SKUIStorePageSection targetScrollingIndexPathForElementWithIndexBarEntryID:relativeSectionIndex:]
  -[SKUIStorePageSection _clickEventWithElementName:index:fieldData:]
  -[SKUIStorePageSection clickEventWithLink:elementName:index:]
  -[SKUIStorePageSection _itemPinningStyle]
  -[SKUIStorePageSection playVideoForElement:]
  -[SKUIStorePageSection showProductViewControllerWithItem:]
  -[SKUIStorePageSection _itemPinningGroup]
  -[SKUIStorePageSection _recursivelyAddRelevantEntityProvidersForViewElement:toSet:]
  -[SKUIStorePageSection _sendXEventWithDictionary:completionBlock:]
  -[SKUIStorePageSection sendXEventWithItem:completionBlock:]
  -[SKUIStorePageSection sendXEventWithLink:completionBlock:]
  -[SKUIStorePageSection defaultItemPinningStyle]
  -[SKUIStorePageSection clickEventWithItem:elementName:index:]
  -[SKUIStorePageSection clickEventWithMedia:elementName:index:]
  -[SKUIStorePageSection itemOfferClickEventWithItem:elementName:index:]
  -[SKUIStorePageSection itemRangeForIndexPathRange:]
  -[SKUIStorePageSection performItemOfferActionForItem:]
  -[SKUIStorePageSection playVideoWithURL:]
  -[SKUIStorePageSection isBottomSection]
  -[SKUIStorePageSection isTopSection]


SKUIURLViewElement : SKUIViewElement
 @property  NSURL *URL

  // instance methods
  -[SKUIURLViewElement .cxx_destruct]
  -[SKUIURLViewElement URL]
  -[SKUIURLViewElement initWithDOMElement:parent:elementFactory:]


SKUIMenuBarTemplateDocumentViewController : SKUIViewController <SKUIHorizontalScrollingContainerViewControllerDelegate, SKUIMenuBarViewElementConfigurationDelegate, SKUIScrollingSegmentedControllerDelegate, SKUIScrollingTabAppearanceStatusObserver, SKUIScrollingTabNestedPagedScrolling, SKUINavigationBarControllerProviding, SKUIDocumentViewController>
 @property  UIView *titleView
 @property  double titleViewHeight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIScrollView *scrollingTabNestedPagingScrollView

  // instance methods
  -[SKUIMenuBarTemplateDocumentViewController dealloc]
  -[SKUIMenuBarTemplateDocumentViewController .cxx_destruct]
  -[SKUIMenuBarTemplateDocumentViewController setOperationQueue:]
  -[SKUIMenuBarTemplateDocumentViewController viewDidLoad]
  -[SKUIMenuBarTemplateDocumentViewController setPreferredContentSize:]
  -[SKUIMenuBarTemplateDocumentViewController _contentViewController]
  -[SKUIMenuBarTemplateDocumentViewController titleView]
  -[SKUIMenuBarTemplateDocumentViewController contentScrollView]
  -[SKUIMenuBarTemplateDocumentViewController _replaceViewControllerAtIndex:withViewController:]
  -[SKUIMenuBarTemplateDocumentViewController setClientContext:]
  -[SKUIMenuBarTemplateDocumentViewController documentDidUpdate:]
  -[SKUIMenuBarTemplateDocumentViewController _colorScheme]
  -[SKUIMenuBarTemplateDocumentViewController navigationPaletteView]
  -[SKUIMenuBarTemplateDocumentViewController documentMediaQueriesDidUpdate:]
  -[SKUIMenuBarTemplateDocumentViewController _dynamicPageSectionIndexMapper]
  -[SKUIMenuBarTemplateDocumentViewController initWithTemplateElement:]
  -[SKUIMenuBarTemplateDocumentViewController menuBarViewElementConfiguration:didReplaceDocumentForEntityUniqueIdentifier:]
  -[SKUIMenuBarTemplateDocumentViewController menuBarViewElementConfiguration:didReplaceDocumentForMenuItemAtIndex:]
  -[SKUIMenuBarTemplateDocumentViewController menuBarViewElementConfiguration:selectMenuItemViewElement:animated:]
  -[SKUIMenuBarTemplateDocumentViewController _reloadContentViewController]
  -[SKUIMenuBarTemplateDocumentViewController _removeContentViewController:]
  -[SKUIMenuBarTemplateDocumentViewController _isFirstViewControllerOnNavigationStack]
  -[SKUIMenuBarTemplateDocumentViewController titleViewHeight]
  -[SKUIMenuBarTemplateDocumentViewController _willDisplayViewControllerAtIndex:]
  -[SKUIMenuBarTemplateDocumentViewController _recordEntityUniqueIdentifier:forEntityIndex:]
  -[SKUIMenuBarTemplateDocumentViewController _newChildViewControllerForEntityAtIndex:]
  -[SKUIMenuBarTemplateDocumentViewController scrollingTabAppearanceStatusWasUpdated:]
  -[SKUIMenuBarTemplateDocumentViewController scrollingTabNestedPagingScrollView]
  -[SKUIMenuBarTemplateDocumentViewController scrollingTabViewControllerInNestedPagingScrollViewAtPageIndex:]
  -[SKUIMenuBarTemplateDocumentViewController _menuItemIndexForEntityIndex:entityValueProvider:]
  -[SKUIMenuBarTemplateDocumentViewController _childViewControllersForMenuItems]
  -[SKUIMenuBarTemplateDocumentViewController _zoomingShelfPageSplitsDescription]
  -[SKUIMenuBarTemplateDocumentViewController _addContentViewController:]
  -[SKUIMenuBarTemplateDocumentViewController horizontalScrollingContainerViewController:willDisplayViewControllerAtIndex:]
  -[SKUIMenuBarTemplateDocumentViewController scrollingSegmentedController:willDisplayViewControllerAtIndex:]
  -[SKUIMenuBarTemplateDocumentViewController navigationBarControllerWithViewElement:]


SKUIMenuBarTemplateDocumentViewControllerEmbeddedPaletteHost : UIView /usr/lib/libobjc.A.dylib
 @property  UIView *titleView

  // instance methods
  -[SKUIMenuBarTemplateDocumentViewControllerEmbeddedPaletteHost .cxx_destruct]
  -[SKUIMenuBarTemplateDocumentViewControllerEmbeddedPaletteHost layoutSubviews]
  -[SKUIMenuBarTemplateDocumentViewControllerEmbeddedPaletteHost titleView]
  -[SKUIMenuBarTemplateDocumentViewControllerEmbeddedPaletteHost setTitleView:]


SKUIFamilySetupTemplateViewElement : SKUIViewElement

SKUIViewElementText : IKTextParser /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
  // instance methods
  -[SKUIViewElementText attributedStringWithDefaultFont:foregroundColor:style:]
  -[SKUIViewElementText attributedStringWithDefaultFont:foregroundColor:textAlignment:style:]
  -[SKUIViewElementText attributedStringWithDefaultFont:foregroundColor:textAlignment:]
  -[SKUIViewElementText attributedStringWithDefaultFont:foregroundColor:]


SKUIBrowseViewElement : SKUIViewElement
 @property  NSString *title

  // instance methods
  -[SKUIBrowseViewElement .cxx_destruct]
  -[SKUIBrowseViewElement title]
  -[SKUIBrowseViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIBrowseViewElement applyUpdatesWithElement:]


SKUISimpleCollectionViewCell : UICollectionViewCell /usr/lib/libobjc.A.dylib
 @property  UIView *contentChildView
 @property  {UIEdgeInsets=dddd} contentInsets

  // instance methods
  -[SKUISimpleCollectionViewCell .cxx_destruct]
  -[SKUISimpleCollectionViewCell setBackgroundColor:]
  -[SKUISimpleCollectionViewCell layoutSubviews]
  -[SKUISimpleCollectionViewCell contentInsets]
  -[SKUISimpleCollectionViewCell setContentInsets:]
  -[SKUISimpleCollectionViewCell applyLayoutAttributes:]
  -[SKUISimpleCollectionViewCell setContentChildView:]
  -[SKUISimpleCollectionViewCell contentChildView]


SKUICompressedImage : UIImage /usr/lib/libobjc.A.dylib
 @property  long long cornerType
 @property  double cornerRadius
 @property  double borderWidth
 @property  UIColor *borderColor

  // instance methods
  -[SKUICompressedImage .cxx_destruct]
  -[SKUICompressedImage setBorderColor:]
  -[SKUICompressedImage setCornerRadius:]
  -[SKUICompressedImage cornerRadius]
  -[SKUICompressedImage borderWidth]
  -[SKUICompressedImage setBorderWidth:]
  -[SKUICompressedImage borderColor]
  -[SKUICompressedImage cornerType]
  -[SKUICompressedImage setCornerType:]


SKUICountdownFlapView : UIImageView /usr/lib/libobjc.A.dylib
 @property  long long position
 @property  UIColor *flapTopColor
 @property  UIColor *flapBottomColor
 @property  NSString *string
 @property  UIColor *textColor

  // instance methods
  -[SKUICountdownFlapView string]
  -[SKUICountdownFlapView setString:]
  -[SKUICountdownFlapView .cxx_destruct]
  -[SKUICountdownFlapView position]
  -[SKUICountdownFlapView setFrame:]
  -[SKUICountdownFlapView setTextColor:]
  -[SKUICountdownFlapView sizeThatFits:]
  -[SKUICountdownFlapView layoutSubviews]
  -[SKUICountdownFlapView _newLabel]
  -[SKUICountdownFlapView animationDidStop:finished:]
  -[SKUICountdownFlapView textColor]
  -[SKUICountdownFlapView flapTopColor]
  -[SKUICountdownFlapView flapBottomColor]
  -[SKUICountdownFlapView initWithPosition:flapTopColor:flapBottomColor:]
  -[SKUICountdownFlapView _newBackgroundImageForTop:]
  -[SKUICountdownFlapView _transformForAngle:isTop:]


SKUIStorePageDataConsumer : SSVURLDataConsumer /System/Library/Frameworks/UIKit.framework/UIKit
 @property  Class storePageClass

  // instance methods
  -[SKUIStorePageDataConsumer init]
  -[SKUIStorePageDataConsumer objectForData:response:error:]
  -[SKUIStorePageDataConsumer storePageWithDictionary:response:]
  -[SKUIStorePageDataConsumer storePageClass]
  -[SKUIStorePageDataConsumer _backgroundArtworkWithDictionary:]
  -[SKUIStorePageDataConsumer _groupingPageComponentsForDictionary:items:]
  -[SKUIStorePageDataConsumer _roomComponentsForDictionary:items:gridType:]
  -[SKUIStorePageDataConsumer _multiRoomComponentsForDictionary:items:]
  -[SKUIStorePageDataConsumer _artistPageComponentsForDictionary:items:]
  -[SKUIStorePageDataConsumer _bannerRoomComponentsForDictionary:items:]
  -[SKUIStorePageDataConsumer _customPageComponentsForDictionary:items:]
  -[SKUIStorePageDataConsumer _newPageComponentContextWithDictionary:]
  -[SKUIStorePageDataConsumer _newCustomPageComponentForBlockType:context:]
  -[SKUIStorePageDataConsumer _newFeaturedContentComponentForKind:context:]
  -[SKUIStorePageDataConsumer storePageWithDictionary:]
  -[SKUIStorePageDataConsumer setStorePageClass:]


SKUIGridComponent : SKUIPageComponent
 @property  long long gridType
 @property  NSArray *children
 @property  {SKUIEditorialStyle=qqffqff} editorialStyle
 @property  {SKUILockupStyle=qqQ} lockupStyle
 @property  BOOL showsIndexNumbers

  // instance methods
  -[SKUIGridComponent .cxx_destruct]
  -[SKUIGridComponent children]
  -[SKUIGridComponent componentType]
  -[SKUIGridComponent initWithCustomPageContext:]
  -[SKUIGridComponent initWithViewElement:]
  -[SKUIGridComponent initWithFeaturedContentContext:kind:]
  -[SKUIGridComponent enumerateMissingItemIdentifiersFromIndex:usingBlock:]
  -[SKUIGridComponent isMissingItemData]
  -[SKUIGridComponent metricsElementName]
  -[SKUIGridComponent gridType]
  -[SKUIGridComponent initWithBrickItems:]
  -[SKUIGridComponent initWithRoomContext:gridType:]
  -[SKUIGridComponent _reloadMissingItemCount]
  -[SKUIGridComponent _setChildrenWithFeaturedContextContext:]
  -[SKUIGridComponent _newLockupComponentWithItem:defaultStyle:]
  -[SKUIGridComponent lockupStyle]
  -[SKUIGridComponent initWithGridItems:]
  -[SKUIGridComponent initWithLockups:]
  -[SKUIGridComponent _updateWithInvalidItemIdentifiers:]
  -[SKUIGridComponent _updateWithMissingItems:]
  -[SKUIGridComponent showsIndexNumbers]
  -[SKUIGridComponent editorialStyle]


SKUIIPhoneProductPageView : UIView /usr/lib/libobjc.A.dylib
 @property  UIView *view
 @property  UIView *bannerView
 @property  double bannerOffset

  // instance methods
  -[SKUIIPhoneProductPageView .cxx_destruct]
  -[SKUIIPhoneProductPageView view]
  -[SKUIIPhoneProductPageView setView:]
  -[SKUIIPhoneProductPageView initWithFrame:]
  -[SKUIIPhoneProductPageView layoutSubviews]
  -[SKUIIPhoneProductPageView bannerView]
  -[SKUIIPhoneProductPageView setBannerView:]
  -[SKUIIPhoneProductPageView animateYPosition:]
  -[SKUIIPhoneProductPageView bannerOffset]
  -[SKUIIPhoneProductPageView setBannerOffset:]


SKUICollectionViewLayoutAttributes : UICollectionViewLayoutAttributes /usr/lib/libobjc.A.dylib <NSCopying>
 @property  double zoomingImageLambda
 @property  UIColor *backgroundColor
 @property  long long position
 @property  double zoomingImageAlpha
 @property  double zoomingImageWidth
 @property  double zoomingImageImposedAlphaOfOtherViews

  // instance methods
  -[SKUICollectionViewLayoutAttributes isEqual:]
  -[SKUICollectionViewLayoutAttributes copyWithZone:]
  -[SKUICollectionViewLayoutAttributes .cxx_destruct]
  -[SKUICollectionViewLayoutAttributes position]
  -[SKUICollectionViewLayoutAttributes setPosition:]
  -[SKUICollectionViewLayoutAttributes backgroundColor]
  -[SKUICollectionViewLayoutAttributes setBackgroundColor:]
  -[SKUICollectionViewLayoutAttributes zoomingImageWidth]
  -[SKUICollectionViewLayoutAttributes zoomingImageImposedAlphaOfOtherViews]
  -[SKUICollectionViewLayoutAttributes zoomingImageAlpha]
  -[SKUICollectionViewLayoutAttributes setZoomingImageAlpha:]
  -[SKUICollectionViewLayoutAttributes setZoomingImageWidth:]
  -[SKUICollectionViewLayoutAttributes setZoomingImageImposedAlphaOfOtherViews:]
  -[SKUICollectionViewLayoutAttributes _zoomingImageLambda]
  -[SKUICollectionViewLayoutAttributes _setZoomingImageLambda:]


SKUIHorizontalScrollingContainerViewController : SKUIViewController <SKUIProxyScrollViewDelegate, SKUIScrollViewDelegateObserver, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
 @property  NSArray *viewControllers
 @property  <SKUIHorizontalScrollingContainerViewControllerDelegate> *delegate
 @property  UICollectionView *menuBarCollectionView
 @property  NSIndexPath *indexPathOfFocusedItem
 @property  BOOL initialScrollWasPerformed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIHorizontalScrollingContainerViewController dealloc]
  -[SKUIHorizontalScrollingContainerViewController delegate]
  -[SKUIHorizontalScrollingContainerViewController setDelegate:]
  -[SKUIHorizontalScrollingContainerViewController .cxx_destruct]
  -[SKUIHorizontalScrollingContainerViewController scrollViewDidScroll:]
  -[SKUIHorizontalScrollingContainerViewController scrollViewWillBeginDecelerating:]
  -[SKUIHorizontalScrollingContainerViewController viewDidLoad]
  -[SKUIHorizontalScrollingContainerViewController collectionView:numberOfItemsInSection:]
  -[SKUIHorizontalScrollingContainerViewController collectionView:cellForItemAtIndexPath:]
  -[SKUIHorizontalScrollingContainerViewController viewDidLayoutSubviews]
  -[SKUIHorizontalScrollingContainerViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[SKUIHorizontalScrollingContainerViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[SKUIHorizontalScrollingContainerViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[SKUIHorizontalScrollingContainerViewController viewControllers]
  -[SKUIHorizontalScrollingContainerViewController setViewControllers:]
  -[SKUIHorizontalScrollingContainerViewController contentScrollView]
  -[SKUIHorizontalScrollingContainerViewController setClientContext:]
  -[SKUIHorizontalScrollingContainerViewController observedScrollViewDidScroll:]
  -[SKUIHorizontalScrollingContainerViewController observedScrollViewWillBeginDecelerating:]
  -[SKUIHorizontalScrollingContainerViewController setMenuBarCollectionView:]
  -[SKUIHorizontalScrollingContainerViewController replaceViewControllerAtIndex:withViewController:]
  -[SKUIHorizontalScrollingContainerViewController _scrollViewDidScroll:]
  -[SKUIHorizontalScrollingContainerViewController _scrollViewWillBeginDecelerating:]
  -[SKUIHorizontalScrollingContainerViewController viewControllerContentScrollViewContentInset]
  -[SKUIHorizontalScrollingContainerViewController _applyNewContentInset:toViewControllers:]
  -[SKUIHorizontalScrollingContainerViewController _applyNewContentInset:toViewController:]
  -[SKUIHorizontalScrollingContainerViewController _indexPathOfFocusedContentItemWithDistanceToFocusedPosition:layoutAttributes:]
  -[SKUIHorizontalScrollingContainerViewController _updateScrollViewContentOffsetsToTargetContentOffsets]
  -[SKUIHorizontalScrollingContainerViewController _setViewControllers:collectionViewsUpdateHandler:]
  -[SKUIHorizontalScrollingContainerViewController _synchronizeContentCollectionViewWithMenuBarCollectionView]
  -[SKUIHorizontalScrollingContainerViewController _synchronizeMenuBarCollectionViewWithContentCollectionView]
  -[SKUIHorizontalScrollingContainerViewController scrollViewDidChangeContentInset:]
  -[SKUIHorizontalScrollingContainerViewController indexPathOfFocusedItem]
  -[SKUIHorizontalScrollingContainerViewController scrollToItemAtIndexPath:animated:]
  -[SKUIHorizontalScrollingContainerViewController setNeedsViewControllerContentScrollViewContentInsetUpdate]
  -[SKUIHorizontalScrollingContainerViewController menuBarCollectionView]
  -[SKUIHorizontalScrollingContainerViewController initialScrollWasPerformed]


SKUICollectionDOMFeature : NSObject /usr/lib/libc++.1.dylib <SKUIJSDOMFeatureCollectionAppBridge, SKUIDOMFeature>
 @property  <SKUICollectionDOMFeatureTargetting> *collectionTarget
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *featureName
 @property  IKAppContext *appContext

  // class methods
  +[SKUICollectionDOMFeature featureName]
  +[SKUICollectionDOMFeature makeFeatureJSObjectForFeature:]

  // instance methods
  -[SKUICollectionDOMFeature .cxx_destruct]
  -[SKUICollectionDOMFeature featureName]
  -[SKUICollectionDOMFeature appContext]
  -[SKUICollectionDOMFeature initWithDOMNode:featureName:]
  -[SKUICollectionDOMFeature setEditing:options:]
  -[SKUICollectionDOMFeature collectionTarget]
  -[SKUICollectionDOMFeature setCollectionTarget:]


SKUIJSDOMFeatureCollection : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIJSDOMFeatureCollection>
 @property  <SKUIJSDOMFeatureCollectionAppBridge> *appBridge

  // instance methods
  -[SKUIJSDOMFeatureCollection .cxx_destruct]
  -[SKUIJSDOMFeatureCollection setAppBridge:]
  -[SKUIJSDOMFeatureCollection appBridge]
  -[SKUIJSDOMFeatureCollection setEditing::]


SKUIStorePageCollectionViewLayout : UICollectionViewFlowLayout /usr/lib/libobjc.A.dylib <SKUIStorePageCollectionViewLayout>
 @property  BOOL allowsPinningTransitions
 @property  double overrideContentWidth
 @property  NSIndexSet *expandChildPageSectionsIndexSet
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *backdropGroupName
 @property  NSArray *indexPathsForPinningItems
 @property  NSArray *indexPathsForGradientItems
 @property  BOOL rendersWithParallax
 @property  BOOL rendersWithPerspective

  // class methods
  +[SKUIStorePageCollectionViewLayout invalidationContextClass]
  +[SKUIStorePageCollectionViewLayout layoutAttributesClass]

  // instance methods
  -[SKUIStorePageCollectionViewLayout init]
  -[SKUIStorePageCollectionViewLayout .cxx_destruct]
  -[SKUIStorePageCollectionViewLayout backdropGroupName]
  -[SKUIStorePageCollectionViewLayout setBackdropGroupName:]
  -[SKUIStorePageCollectionViewLayout invalidateLayoutWithContext:]
  -[SKUIStorePageCollectionViewLayout prepareLayout]
  -[SKUIStorePageCollectionViewLayout layoutAttributesForElementsInRect:]
  -[SKUIStorePageCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[SKUIStorePageCollectionViewLayout invalidationContextForBoundsChange:]
  -[SKUIStorePageCollectionViewLayout collectionViewContentSize]
  -[SKUIStorePageCollectionViewLayout layoutAttributesForDecorationViewOfKind:atIndexPath:]
  -[SKUIStorePageCollectionViewLayout shouldInvalidateLayoutForBoundsChange:]
  -[SKUIStorePageCollectionViewLayout prepareForCollectionViewUpdates:]
  -[SKUIStorePageCollectionViewLayout finalLayoutAttributesForDisappearingItemAtIndexPath:]
  -[SKUIStorePageCollectionViewLayout initialLayoutAttributesForAppearingItemAtIndexPath:]
  -[SKUIStorePageCollectionViewLayout rendersWithParallax]
  -[SKUIStorePageCollectionViewLayout rendersWithPerspective]
  -[SKUIStorePageCollectionViewLayout setRendersWithPerspective:]
  -[SKUIStorePageCollectionViewLayout setRendersWithParallax:]
  -[SKUIStorePageCollectionViewLayout indexPathsForPinningItems]
  -[SKUIStorePageCollectionViewLayout setOverrideContentWidth:]
  -[SKUIStorePageCollectionViewLayout setExpandChildPageSectionsIndexSet:]
  -[SKUIStorePageCollectionViewLayout layoutAttributesForUnpinnedItemAtIndexPath:]
  -[SKUIStorePageCollectionViewLayout pinnedLayoutAttributesForItemsInRect:]
  -[SKUIStorePageCollectionViewLayout _indexPathsForPinningItems]
  -[SKUIStorePageCollectionViewLayout _getCollectionViewUpdateItemForItemFromIndex:initalLayout:]
  -[SKUIStorePageCollectionViewLayout _invalidatePinningLayoutInformation]
  -[SKUIStorePageCollectionViewLayout _itemPinningConfigurationForItemAtIndexPath:]
  -[SKUIStorePageCollectionViewLayout _itemPinningLayoutInformationForItemAtIndexPath:]
  -[SKUIStorePageCollectionViewLayout _layoutAttributesForPinnedBackdropDecorationViewAtIndexPath:pinningConfiguration:layoutInformation:]
  -[SKUIStorePageCollectionViewLayout _appendAdditionalLayoutAttributesForPinningItemsInRect:toArray:]
  -[SKUIStorePageCollectionViewLayout _configureCellLayoutAttributes:forItemWithPinningConfiguration:layoutInformation:atIndexPath:allowPinning:returningIsPinning:]
  -[SKUIStorePageCollectionViewLayout _allowsBackdropDecorationForItemPinningConfiguration:atIndexPath:]
  -[SKUIStorePageCollectionViewLayout _indexPathsForBackgroundGradients]
  -[SKUIStorePageCollectionViewLayout _layoutAttributesForGradientDecorationViewAtIndexPath:currentAttributes:]
  -[SKUIStorePageCollectionViewLayout _alginCellsToTop:]
  -[SKUIStorePageCollectionViewLayout _updateItemsLayoutForRect:]
  -[SKUIStorePageCollectionViewLayout _pinningFrameForStartingFrame:itemPinningConfiguration:atIndexPath:]
  -[SKUIStorePageCollectionViewLayout _pinningStyleForItemPinningConfiguration:atIndexPath:]
  -[SKUIStorePageCollectionViewLayout _pinningContentInsetForItemPinningConfiguration:atIndexPath:]
  -[SKUIStorePageCollectionViewLayout _pinningGroupForItemPinningConfiguration:atIndexPath:]
  -[SKUIStorePageCollectionViewLayout _targetFrameForStartingFrame:itemPinningConfiguration:layoutInformation:atIndexPath:returningIsPinning:]
  -[SKUIStorePageCollectionViewLayout _calculatePinningLayoutInformation]
  -[SKUIStorePageCollectionViewLayout _pinningTransitionStyleForItemPinningConfiguration:atIndexPath:]
  -[SKUIStorePageCollectionViewLayout _pinnedBackdropViewStyle]
  -[SKUIStorePageCollectionViewLayout indexPathsForGradientItems]
  -[SKUIStorePageCollectionViewLayout setIndexPathsForGradientItems:]
  -[SKUIStorePageCollectionViewLayout setAllowsPinningTransitions:]
  -[SKUIStorePageCollectionViewLayout overrideContentWidth]
  -[SKUIStorePageCollectionViewLayout allowsPinningTransitions]
  -[SKUIStorePageCollectionViewLayout expandChildPageSectionsIndexSet]


SKUITonePurchaseController : NSObject /usr/lib/libc++.1.dylib <CNContactPickerDelegate>
 @property  SKUIClientContext *clientContext
 @property  UIViewController *parentViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUITonePurchaseController dealloc]
  -[SKUITonePurchaseController .cxx_destruct]
  -[SKUITonePurchaseController initWithItem:]
  -[SKUITonePurchaseController parentViewController]
  -[SKUITonePurchaseController setParentViewController:]
  -[SKUITonePurchaseController contactPickerDidCancel:]
  -[SKUITonePurchaseController contactPicker:didSelectContact:]
  -[SKUITonePurchaseController _presentViewController:]
  -[SKUITonePurchaseController clientContext]
  -[SKUITonePurchaseController setClientContext:]
  -[SKUITonePurchaseController showPurchaseFlowWithCompletionBlock:]
  -[SKUITonePurchaseController _finishWithTonePurchase:]
  -[SKUITonePurchaseController _showContactPicker]
  -[SKUITonePurchaseController _dismissContactPicker]
  -[SKUITonePurchaseController _finishContactPicker:withContact:]


SKUIArtworkRequest : SKUIResourceRequest <NSCopying>
 @property  SSVURLDataConsumer *dataConsumer
 @property  <SKUIArtworkRequestDelegate> *delegate
 @property  NSString *imageName
 @property  NSURL *URL

  // instance methods
  -[SKUIArtworkRequest copyWithZone:]
  -[SKUIArtworkRequest delegate]
  -[SKUIArtworkRequest setDelegate:]
  -[SKUIArtworkRequest .cxx_destruct]
  -[SKUIArtworkRequest setURL:]
  -[SKUIArtworkRequest URL]
  -[SKUIArtworkRequest dataConsumer]
  -[SKUIArtworkRequest setImageName:]
  -[SKUIArtworkRequest imageName]
  -[SKUIArtworkRequest setDataConsumer:]
  -[SKUIArtworkRequest cachesInMemory]
  -[SKUIArtworkRequest finishWithResource:]
  -[SKUIArtworkRequest newLoadOperation]


SKUIChartsTemplateViewElement : SKUIViewElement
 @property  SKUIActivityIndicatorViewElement *activityIndicator
 @property  NSArray *columns
 @property  SKUINavigationBarViewElement *navigationBarElement
 @property  NSString *type

  // instance methods
  -[SKUIChartsTemplateViewElement type]
  -[SKUIChartsTemplateViewElement .cxx_destruct]
  -[SKUIChartsTemplateViewElement columns]
  -[SKUIChartsTemplateViewElement activityIndicator]
  -[SKUIChartsTemplateViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIChartsTemplateViewElement navigationBarElement]


SKUIScreenshotDataConsumer : SKUIStyledImageDataConsumer
 @property  BOOL forcesPortrait

  // class methods
  +[SKUIScreenshotDataConsumer consumer]
  +[SKUIScreenshotDataConsumer consumerWithScreenshotSize:]

  // instance methods
  -[SKUIScreenshotDataConsumer imageForImage:]
  -[SKUIScreenshotDataConsumer setForcesPortrait:]
  -[SKUIScreenshotDataConsumer imageForColor:size:]
  -[SKUIScreenshotDataConsumer forcesPortrait]


SKUIMenuBarViewElement : SKUIViewElement <_SKUIMenuBarViewElementConfigurationReloadDelegate, SKUIMenuBarViewElement>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SKUIMenuBarViewElementConfiguration *configuration

  // class methods
  +[SKUIMenuBarViewElement supportedFeatures]
  +[SKUIMenuBarViewElement _titlesMenuBarViewElementClass]
  +[SKUIMenuBarViewElement _shelfMenuBarViewElementClass]

  // instance methods
  -[SKUIMenuBarViewElement .cxx_destruct]
  -[SKUIMenuBarViewElement setConfiguration:]
  -[SKUIMenuBarViewElement configuration]
  -[SKUIMenuBarViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIMenuBarViewElement applyUpdatesWithElement:]
  -[SKUIMenuBarViewElement _menuBarViewElementConfigurationRequestsReload:]
  -[SKUIMenuBarViewElement titleForMenuItemAtIndex:]
  -[SKUIMenuBarViewElement _reloadMenuItems]


SKUIListViewElement : SKUIViewElement
  // instance methods
  -[SKUIListViewElement pageComponentType]


SKUIHandleRulesSettingsHeaderFooterDescription : SKUISettingsHeaderFooterDescription
 @property  BOOL showInvalid

  // instance methods
  -[SKUIHandleRulesSettingsHeaderFooterDescription .cxx_destruct]
  -[SKUIHandleRulesSettingsHeaderFooterDescription text]
  -[SKUIHandleRulesSettingsHeaderFooterDescription initWithClientContext:]
  -[SKUIHandleRulesSettingsHeaderFooterDescription _viewClassForSettingsHeaderFooterDescription:]
  -[SKUIHandleRulesSettingsHeaderFooterDescription showInvalid]
  -[SKUIHandleRulesSettingsHeaderFooterDescription setShowInvalid:]


SKUITrendingSearchView : UIScrollView /usr/lib/libobjc.A.dylib
 @property  UIStackView *trendingSearchesStackView
 @property  UIStackView *titleStackView
 @property  NSArray *verticalMarginRelatedConstraints
 @property  UIView *trendingTitleView
 @property  NSArray *trendingSearchViews

  // instance methods
  -[SKUITrendingSearchView initWithCoder:]
  -[SKUITrendingSearchView .cxx_destruct]
  -[SKUITrendingSearchView initWithFrame:]
  -[SKUITrendingSearchView layoutSubviews]
  -[SKUITrendingSearchView updateConstraints]
  -[SKUITrendingSearchView layoutMarginsDidChange]
  -[SKUITrendingSearchView setTitleStackView:]
  -[SKUITrendingSearchView titleStackView]
  -[SKUITrendingSearchView commonInitWithFrame:]
  -[SKUITrendingSearchView trendingSearchesStackView]
  -[SKUITrendingSearchView verticalMarginRelatedConstraints]
  -[SKUITrendingSearchView setTrendingTitleView:]
  -[SKUITrendingSearchView setTrendingSearchViews:]
  -[SKUITrendingSearchView trendingTitleView]
  -[SKUITrendingSearchView trendingSearchViews]
  -[SKUITrendingSearchView setTrendingSearchesStackView:]
  -[SKUITrendingSearchView setVerticalMarginRelatedConstraints:]


SKUIContentRatingArtworkResourceLoader : NSObject /usr/lib/libc++.1.dylib <SKUIArtworkRequestDelegate>
 @property  SKUIResourceLoader *artworkLoader
 @property  SKUIImageDataConsumer *imageDataConsumer
 @property  UIImage *placeholderImage
 @property  {CGSize=dd} imageSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIContentRatingArtworkResourceLoader init]
  -[SKUIContentRatingArtworkResourceLoader .cxx_destruct]
  -[SKUIContentRatingArtworkResourceLoader addObserver:]
  -[SKUIContentRatingArtworkResourceLoader removeObserver:]
  -[SKUIContentRatingArtworkResourceLoader imageSize]
  -[SKUIContentRatingArtworkResourceLoader placeholderImage]
  -[SKUIContentRatingArtworkResourceLoader artworkRequest:didLoadImage:]
  -[SKUIContentRatingArtworkResourceLoader initWithArtworkLoader:]
  -[SKUIContentRatingArtworkResourceLoader _urlForContentRating:clientContext:]
  -[SKUIContentRatingArtworkResourceLoader _loadImage:]
  -[SKUIContentRatingArtworkResourceLoader cachedImageForContentRating:withClientContext:]
  -[SKUIContentRatingArtworkResourceLoader loadImageForContentRating:clientContent:reason:]
  -[SKUIContentRatingArtworkResourceLoader artworkLoader]
  -[SKUIContentRatingArtworkResourceLoader imageDataConsumer]
  -[SKUIContentRatingArtworkResourceLoader setImageDataConsumer:]


SKUIEditorialLinkLayoutRequest : NSObject /usr/lib/libc++.1.dylib <SKUILayoutRequest>
 @property  NSArray *links
 @property  double width
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  Class layoutClass

  // instance methods
  -[SKUIEditorialLinkLayoutRequest copyWithZone:]
  -[SKUIEditorialLinkLayoutRequest .cxx_destruct]
  -[SKUIEditorialLinkLayoutRequest width]
  -[SKUIEditorialLinkLayoutRequest setWidth:]
  -[SKUIEditorialLinkLayoutRequest links]
  -[SKUIEditorialLinkLayoutRequest layoutClass]
  -[SKUIEditorialLinkLayoutRequest setLinks:]


SKUIDefaultSettingDescriptionView : SKUISettingDescriptionView
  // class methods
  +[SKUIDefaultSettingDescriptionView prefetchResourcesForSettingDescription:reason:context:]
  +[SKUIDefaultSettingDescriptionView preferredSizeForSettingDescription:context:]
  +[SKUIDefaultSettingDescriptionView requestLayoutForSettingDescription:width:context:]
  +[SKUIDefaultSettingDescriptionView sizeThatFitsWidth:settingDescription:context:]
  +[SKUIDefaultSettingDescriptionView _paddingForStyle:]

  // instance methods
  -[SKUIDefaultSettingDescriptionView .cxx_destruct]
  -[SKUIDefaultSettingDescriptionView setBackgroundColor:]
  -[SKUIDefaultSettingDescriptionView layoutSubviews]
  -[SKUIDefaultSettingDescriptionView setImage:forArtworkRequest:context:]
  -[SKUIDefaultSettingDescriptionView reloadWithSettingDescription:width:context:]
  -[SKUIDefaultSettingDescriptionView hasDisclosureChevron]


SKUICarouselCollectionViewLayout : UICollectionViewFlowLayout /usr/lib/libobjc.A.dylib
 @property  NSIndexPath *startScrollingIndexPath

  // class methods
  +[SKUICarouselCollectionViewLayout layoutAttributesClass]

  // instance methods
  -[SKUICarouselCollectionViewLayout .cxx_destruct]
  -[SKUICarouselCollectionViewLayout prepareLayout]
  -[SKUICarouselCollectionViewLayout layoutAttributesForElementsInRect:]
  -[SKUICarouselCollectionViewLayout prepareForTransitionToLayout:]
  -[SKUICarouselCollectionViewLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]
  -[SKUICarouselCollectionViewLayout _panGestureRecognized:]
  -[SKUICarouselCollectionViewLayout startScrollingIndexPath]
  -[SKUICarouselCollectionViewLayout _collectionViewBoundsCenter]
  -[SKUICarouselCollectionViewLayout setStartScrollingIndexPath:]


SKUIResourceLoader : NSObject /usr/lib/libc++.1.dylib <NSCacheDelegate>
 @property  NSOperationQueue *delegateQueue
 @property  SKUIClientContext *clientContext
 @property  NSOperationQueue *operationQueue
 @property  <SKUIResourceLoaderDelegate> *delegate
 @property  BOOL idle
 @property  NSString *name
 @property  long long resourceCacheLimit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIResourceLoader init]
  -[SKUIResourceLoader dealloc]
  -[SKUIResourceLoader name]
  -[SKUIResourceLoader delegate]
  -[SKUIResourceLoader setDelegate:]
  -[SKUIResourceLoader .cxx_destruct]
  -[SKUIResourceLoader setName:]
  -[SKUIResourceLoader cache:willEvictObject:]
  -[SKUIResourceLoader operationQueue]
  -[SKUIResourceLoader _qualityOfService]
  -[SKUIResourceLoader setDelegateQueue:]
  -[SKUIResourceLoader delegateQueue]
  -[SKUIResourceLoader cancelAllRequests]
  -[SKUIResourceLoader clientContext]
  -[SKUIResourceLoader isIdle]
  -[SKUIResourceLoader initWithClientContext:]
  -[SKUIResourceLoader cachedResourceForRequestIdentifier:]
  -[SKUIResourceLoader enterForeground]
  -[SKUIResourceLoader enterBackground]
  -[SKUIResourceLoader initWithOperationQueue:clientContext:]
  -[SKUIResourceLoader trySetReason:forRequestWithIdentifier:]
  -[SKUIResourceLoader loadResourceWithRequest:reason:]
  -[SKUIResourceLoader isIdleForReason:]
  -[SKUIResourceLoader requestIdentifierForCacheKey:]
  -[SKUIResourceLoader _sendDidLoadAllForReason:]
  -[SKUIResourceLoader _reprioritizeOperations]
  -[SKUIResourceLoader _queuePriorityForLoadReason:]
  -[SKUIResourceLoader _updateLoadReason:forOperation:]
  -[SKUIResourceLoader _finishLoadForRequest:withResource:]
  -[SKUIResourceLoader _sendDidBeginLoadingIfNecessary]
  -[SKUIResourceLoader _sendDidIdleIfNecessary]
  -[SKUIResourceLoader initWithOperationQueue:]
  -[SKUIResourceLoader addResource:forRequestIdentifier:]
  -[SKUIResourceLoader removeAllCachedResources]
  -[SKUIResourceLoader cancelRequestWithIdentifier:]
  -[SKUIResourceLoader setReason:forRequestWithIdentifier:]
  -[SKUIResourceLoader resourceCacheLimit]
  -[SKUIResourceLoader setResourceCacheLimit:]


_SKUIResourceCacheValue : NSObject /usr/lib/libc++.1.dylib
 @property  id resource
 @property  id requestCacheKey

  // instance methods
  -[_SKUIResourceCacheValue .cxx_destruct]
  -[_SKUIResourceCacheValue resource]
  -[_SKUIResourceCacheValue initWithResource:requestCacheKey:]
  -[_SKUIResourceCacheValue requestCacheKey]


SKUIEditorialComponent : SKUIPageComponent
 @property  SKUILabelViewElement *viewElement
 @property  BOOL _usesLockupTitle
 @property  NSAttributedString *bodyAttributedText
 @property  NSString *bodyText
 @property  NSString *titleText
 @property  {SKUIEditorialStyle=qqffqff} editorialStyle
 @property  NSArray *links
 @property  long long maximumBodyLines

  // instance methods
  -[SKUIEditorialComponent .cxx_destruct]
  -[SKUIEditorialComponent bodyText]
  -[SKUIEditorialComponent componentType]
  -[SKUIEditorialComponent titleText]
  -[SKUIEditorialComponent links]
  -[SKUIEditorialComponent initWithCustomPageContext:]
  -[SKUIEditorialComponent initWithViewElement:]
  -[SKUIEditorialComponent initWithUberText:]
  -[SKUIEditorialComponent editorialStyle]
  -[SKUIEditorialComponent initWithBrickRoomText:]
  -[SKUIEditorialComponent bodyAttributedText]
  -[SKUIEditorialComponent _setTitleText:]
  -[SKUIEditorialComponent maximumBodyLines]
  -[SKUIEditorialComponent _usesLockupTitle]


SKUITextLayout : NSObject /usr/lib/libc++.1.dylib <SKUICachedLayout>
 @property  double lineHeight
 @property  BOOL requiresTruncation
 @property  ^{__CTFrame=} textFrame
 @property  {CGSize=dd} textSize
 @property  {CGSize=dd} truncatedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUITextLayout _newAttributedStringWithRequest:]
  +[SKUITextLayout newAttributedStringWithText:]

  // instance methods
  -[SKUITextLayout dealloc]
  -[SKUITextLayout lineHeight]
  -[SKUITextLayout textSize]
  -[SKUITextLayout initWithLayoutRequest:]
  -[SKUITextLayout requiresTruncation]
  -[SKUITextLayout truncatedSize]
  -[SKUITextLayout textFrame]


SKUIContextActionsPresentationRegistration : NSObject /usr/lib/libc++.1.dylib <UIGestureRecognizerDelegate, UIPreviewInteractionDelegate>
 @property  @? handler
 @property  UIViewController *viewController
 @property  UIPreviewInteraction *previewInteraction
 @property  BOOL previewInteractionDidEnd
 @property  NSTimer *previewInteractionTimeout
 @property  SKUIContextActionsViewController *orbContextActionsViewController
 @property  UIViewPropertyAnimator *previewPhasePropertyAnimator
 @property  UIViewPropertyAnimator *commitPhasePropertyAnimator
 @property  UILongPressGestureRecognizer *longPressGestureRecognizer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIContextActionsPresentationRegistration dealloc]
  -[SKUIContextActionsPresentationRegistration handler]
  -[SKUIContextActionsPresentationRegistration .cxx_destruct]
  -[SKUIContextActionsPresentationRegistration setHandler:]
  -[SKUIContextActionsPresentationRegistration setViewController:]
  -[SKUIContextActionsPresentationRegistration viewController]
  -[SKUIContextActionsPresentationRegistration previewInteraction]
  -[SKUIContextActionsPresentationRegistration previewInteractionShouldBegin:]
  -[SKUIContextActionsPresentationRegistration previewInteraction:didUpdatePreviewTransition:ended:]
  -[SKUIContextActionsPresentationRegistration previewInteractionDidCancel:]
  -[SKUIContextActionsPresentationRegistration setPreviewInteraction:]
  -[SKUIContextActionsPresentationRegistration longPressGestureRecognizer]
  -[SKUIContextActionsPresentationRegistration setLongPressGestureRecognizer:]
  -[SKUIContextActionsPresentationRegistration setOrbContextActionsViewController:]
  -[SKUIContextActionsPresentationRegistration cleanupPreviewInteraction:]
  -[SKUIContextActionsPresentationRegistration setPreviewPhasePropertyAnimator:]
  -[SKUIContextActionsPresentationRegistration setCommitPhasePropertyAnimator:]
  -[SKUIContextActionsPresentationRegistration previewInteractionDidEnd]
  -[SKUIContextActionsPresentationRegistration setPreviewInteractionTimeout:]
  -[SKUIContextActionsPresentationRegistration setPreviewInteractionDidEnd:]
  -[SKUIContextActionsPresentationRegistration previewPhasePropertyAnimator]
  -[SKUIContextActionsPresentationRegistration orbContextActionsViewController]
  -[SKUIContextActionsPresentationRegistration commitPhasePropertyAnimator]
  -[SKUIContextActionsPresentationRegistration previewInteractionTimeout]
  -[SKUIContextActionsPresentationRegistration _presentFromGestureRecognizer:]
  -[SKUIContextActionsPresentationRegistration longPressGestureRecognizerTriggered:]
  -[SKUIContextActionsPresentationRegistration initWithViewController:handler:]


SKUIJSAppleAccount : NSObject /usr/lib/libc++.1.dylib <SKUIJSAppleAccount>
 @property  ACAccount *nativeAccount
 @property  NSString *accountDescription
 @property  NSString *DSID
 @property  NSString *identifier
 @property  NSString *username

  // instance methods
  -[SKUIJSAppleAccount .cxx_destruct]
  -[SKUIJSAppleAccount identifier]
  -[SKUIJSAppleAccount username]
  -[SKUIJSAppleAccount accountDescription]
  -[SKUIJSAppleAccount DSID]
  -[SKUIJSAppleAccount initWithACAccount:]
  -[SKUIJSAppleAccount nativeAccount]


SKUINavigationPaletteView : SKUIViewReuseView <SKUIViewElementView>
 @property  long long verticalAlignment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUINavigationPaletteView prefetchResourcesForViewElement:reason:context:]
  +[SKUINavigationPaletteView preferredSizeForViewElement:context:]
  +[SKUINavigationPaletteView requestLayoutForViewElement:width:context:]
  +[SKUINavigationPaletteView sizeThatFitsWidth:viewElement:context:]
  +[SKUINavigationPaletteView _attributedStringForButton:context:]
  +[SKUINavigationPaletteView _attributedStringForLabel:context:]
  +[SKUINavigationPaletteView _sizeForViewElement:width:context:]
  +[SKUINavigationPaletteView _attributedStringForText:style:context:]

  // instance methods
  -[SKUINavigationPaletteView .cxx_destruct]
  -[SKUINavigationPaletteView verticalAlignment]
  -[SKUINavigationPaletteView setVerticalAlignment:]
  -[SKUINavigationPaletteView initWithFrame:]
  -[SKUINavigationPaletteView layoutSubviews]
  -[SKUINavigationPaletteView setContentInset:]
  -[SKUINavigationPaletteView reloadWithViewElement:width:context:]
  -[SKUINavigationPaletteView setImage:forArtworkRequest:context:]
  -[SKUINavigationPaletteView updateWithItemState:context:animated:]
  -[SKUINavigationPaletteView viewForElementIdentifier:]
  -[SKUINavigationPaletteView _buttonAction:]


SKUIShareTemplateActivityViewController : UIActivityViewController /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIShareTemplateActivityViewController .cxx_destruct]
  -[SKUIShareTemplateActivityViewController _titleForActivity:]
  -[SKUIShareTemplateActivityViewController _activityItemsWithTemplateElement:clientContext:]
  -[SKUIShareTemplateActivityViewController _applicationActivitiesWithTemplateElement:clientContext:]
  -[SKUIShareTemplateActivityViewController initWithTemplateElement:clientContext:]


SKUITrendingSearchPageView : UIView /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} contentInset
 @property  <SKUITrendingSearchPageViewDelegate> *delegate
 @property  SKUITrendingSearchPage *page

  // instance methods
  -[SKUITrendingSearchPageView delegate]
  -[SKUITrendingSearchPageView setDelegate:]
  -[SKUITrendingSearchPageView .cxx_destruct]
  -[SKUITrendingSearchPageView setBackgroundColor:]
  -[SKUITrendingSearchPageView initWithFrame:]
  -[SKUITrendingSearchPageView sizeThatFits:]
  -[SKUITrendingSearchPageView setContentInset:]
  -[SKUITrendingSearchPageView contentInset]
  -[SKUITrendingSearchPageView page]
  -[SKUITrendingSearchPageView setPage:]
  -[SKUITrendingSearchPageView _buttonAction:]


SKUITrendingSearchTemplateElement : SKUIViewElement
 @property  NSArray *buttons
 @property  SKUILabelViewElement *titleLabel

  // instance methods
  -[SKUITrendingSearchTemplateElement titleLabel]
  -[SKUITrendingSearchTemplateElement buttons]


SKUITextFooterSettingsHeaderFooterDescription : SKUISettingsHeaderFooterDescription
  // instance methods
  -[SKUITextFooterSettingsHeaderFooterDescription _viewClassForSettingsHeaderFooterDescription:]


SKUIContextActionsPresentationController : UIPresentationController /usr/lib/libobjc.A.dylib
 @property  UIVisualEffectView *backgroundView
 @property  @? dismissalAnimations

  // instance methods
  -[SKUIContextActionsPresentationController .cxx_destruct]
  -[SKUIContextActionsPresentationController backgroundView]
  -[SKUIContextActionsPresentationController initWithPresentedViewController:presentingViewController:]
  -[SKUIContextActionsPresentationController presentationTransitionWillBegin]
  -[SKUIContextActionsPresentationController setBackgroundView:]
  -[SKUIContextActionsPresentationController dismissalTransitionWillBegin]
  -[SKUIContextActionsPresentationController shouldRemovePresentersView]
  -[SKUIContextActionsPresentationController dismissalAnimations]
  -[SKUIContextActionsPresentationController setDismissalAnimations:]


SKUILayoutCache : NSObject /usr/lib/libc++.1.dylib
 @property  <SKUILayoutCacheDelegate> *delegate

  // instance methods
  -[SKUILayoutCache init]
  -[SKUILayoutCache delegate]
  -[SKUILayoutCache setDelegate:]
  -[SKUILayoutCache .cxx_destruct]
  -[SKUILayoutCache _populateCache]
  -[SKUILayoutCache commitLayoutRequests]
  -[SKUILayoutCache populateCacheWithLayoutRequests:]
  -[SKUILayoutCache layoutForIndex:forced:]
  -[SKUILayoutCache _layoutRequestsInRange:]
  -[SKUILayoutCache _addLayoutBatch:]
  -[SKUILayoutCache addLayoutRequests:]
  -[SKUILayoutCache layoutForIndex:]


SKUIMutableIntegerValue : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long integerValue

  // instance methods
  -[SKUIMutableIntegerValue isEqual:]
  -[SKUIMutableIntegerValue copyWithZone:]
  -[SKUIMutableIntegerValue integerValue]
  -[SKUIMutableIntegerValue setIntegerValue:]


SKUIPostRatingOperation : ISOperation /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI
 @property  NSDictionary *responseDictionary

  // instance methods
  -[SKUIPostRatingOperation run]
  -[SKUIPostRatingOperation .cxx_destruct]
  -[SKUIPostRatingOperation responseDictionary]
  -[SKUIPostRatingOperation initWithRating:forItemID:reviewConfiguration:]


SKUICountLimitViewElement : SKUILimitViewElement
 @property  long long limitValue
 @property  NSString *entityTypeString

  // class methods
  +[SKUICountLimitViewElement shouldParseChildDOMElements]

  // instance methods
  -[SKUICountLimitViewElement .cxx_destruct]
  -[SKUICountLimitViewElement limitValue]
  -[SKUICountLimitViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUICountLimitViewElement applyUpdatesWithElement:]
  -[SKUICountLimitViewElement entityTypeString]


SKUIBrowseHeaderPageSection : SKUIStorePageSection
 @property  SKUIBrowseHeaderPageComponent *pageComponent

  // instance methods
  -[SKUIBrowseHeaderPageSection initWithPageComponent:]
  -[SKUIBrowseHeaderPageSection sectionContentInset]
  -[SKUIBrowseHeaderPageSection willAppearInContext:]
  -[SKUIBrowseHeaderPageSection cellForIndexPath:]
  -[SKUIBrowseHeaderPageSection cellSizeForIndexPath:]
  -[SKUIBrowseHeaderPageSection numberOfCells]
  -[SKUIBrowseHeaderPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIBrowseHeaderPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIBrowseHeaderPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIBrowseHeaderPageSection collectionViewShouldHighlightItemAtIndexPath:]
  -[SKUIBrowseHeaderPageSection collectionViewShouldSelectItemAtIndexPath:]


SKUITextLayoutRequest : NSObject /usr/lib/libc++.1.dylib <SKUILayoutRequest>
 @property  double fontSize
 @property  long long fontWeight
 @property  unsigned char textAlignment
 @property  long long numberOfLines
 @property  NSAttributedString *attributedText
 @property  NSString *text
 @property  double width
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  Class layoutClass

  // instance methods
  -[SKUITextLayoutRequest init]
  -[SKUITextLayoutRequest copyWithZone:]
  -[SKUITextLayoutRequest .cxx_destruct]
  -[SKUITextLayoutRequest width]
  -[SKUITextLayoutRequest setWidth:]
  -[SKUITextLayoutRequest text]
  -[SKUITextLayoutRequest setText:]
  -[SKUITextLayoutRequest fontSize]
  -[SKUITextLayoutRequest setFontSize:]
  -[SKUITextLayoutRequest setNumberOfLines:]
  -[SKUITextLayoutRequest setTextAlignment:]
  -[SKUITextLayoutRequest numberOfLines]
  -[SKUITextLayoutRequest setAttributedText:]
  -[SKUITextLayoutRequest attributedText]
  -[SKUITextLayoutRequest textAlignment]
  -[SKUITextLayoutRequest setFontWeight:]
  -[SKUITextLayoutRequest fontWeight]
  -[SKUITextLayoutRequest layoutClass]


SKUIStorePageSectionContext : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIMetricsImpressionSession *activeMetricsImpressionSession
 @property  SKUIClientContext *clientContext
 @property  UICollectionView *collectionView
 @property  SKUIColorScheme *colorScheme
 @property  UIColor *placeholderColor
 @property  long long defaultPinningTransitionStyle
 @property  SKUIItemOfferButtonAppearance *itemOfferButtonAppearance
 @property  double activePageWidth
 @property  double landscapePageWidth
 @property  double portraitPageWidth
 @property  double horizontalPadding
 @property  long long layoutStyle
 @property  SKUIMetricsController *metricsController
 @property  SKUIStorePageSectionsViewController *parentViewController
 @property  SKUIResourceLoader *resourceLoader
 @property  SKUILayoutCache *textLayoutCache

  // instance methods
  -[SKUIStorePageSectionContext init]
  -[SKUIStorePageSectionContext .cxx_destruct]
  -[SKUIStorePageSectionContext collectionView]
  -[SKUIStorePageSectionContext parentViewController]
  -[SKUIStorePageSectionContext layoutStyle]
  -[SKUIStorePageSectionContext _setCollectionView:]
  -[SKUIStorePageSectionContext placeholderColor]
  -[SKUIStorePageSectionContext horizontalPadding]
  -[SKUIStorePageSectionContext resourceLoader]
  -[SKUIStorePageSectionContext clientContext]
  -[SKUIStorePageSectionContext metricsController]
  -[SKUIStorePageSectionContext colorScheme]
  -[SKUIStorePageSectionContext textLayoutCache]
  -[SKUIStorePageSectionContext _setParentViewController:]
  -[SKUIStorePageSectionContext _setTextLayoutCache:]
  -[SKUIStorePageSectionContext _setColorScheme:]
  -[SKUIStorePageSectionContext _setActiveMetricsImpressionSession:]
  -[SKUIStorePageSectionContext _setDefaultPinningTransitionStyle:]
  -[SKUIStorePageSectionContext _setMetricsController:]
  -[SKUIStorePageSectionContext activePageWidth]
  -[SKUIStorePageSectionContext _setActivePageWidth:]
  -[SKUIStorePageSectionContext activeMetricsImpressionSession]
  -[SKUIStorePageSectionContext _setLayoutStyle:]
  -[SKUIStorePageSectionContext _setResourceLoader:]
  -[SKUIStorePageSectionContext _setLandscapePageWidth:]
  -[SKUIStorePageSectionContext _setPortraitPageWidth:]
  -[SKUIStorePageSectionContext defaultPinningTransitionStyle]
  -[SKUIStorePageSectionContext itemOfferButtonAppearance]
  -[SKUIStorePageSectionContext landscapePageWidth]
  -[SKUIStorePageSectionContext portraitPageWidth]


SKUIBarRatingView : UIView /usr/lib/libobjc.A.dylib
 @property  long long barRatingStyle
 @property  long long numberOfBars
 @property  float ratingValue

  // instance methods
  -[SKUIBarRatingView initWithFrame:]
  -[SKUIBarRatingView sizeThatFits:]
  -[SKUIBarRatingView drawRect:]
  -[SKUIBarRatingView setNumberOfBars:]
  -[SKUIBarRatingView numberOfBars]
  -[SKUIBarRatingView ratingValue]
  -[SKUIBarRatingView setRatingValue:]
  -[SKUIBarRatingView setBarRatingStyle:]
  -[SKUIBarRatingView barRatingStyle]


SKUIRedeemViewControllerLegacy : UINavigationController /usr/lib/libobjc.A.dylib <SKUIRedeemIdDelegate, SKUIRedeemStepDelegate>
 @property  UIBarButtonItem *cancelButtonItem
 @property  long long category
 @property  BOOL attempsAutomaticRedeem
 @property  <SKUIRedeemViewCameraOverrideDelegate> *cameraDelegate
 @property  NSString *initialCode
 @property  SKUIClientContext *clientContext
 @property  BOOL cameraRedeemVisible
 @property  NSOperationQueue *operationQueue
 @property  SKUIRedeemConfiguration *redeemConfiguration
 @property  BOOL shouldPerformInitialOperationOnAppear
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIRedeemViewControllerLegacy redeemRequiresNationalId:]

  // instance methods
  -[SKUIRedeemViewControllerLegacy .cxx_destruct]
  -[SKUIRedeemViewControllerLegacy category]
  -[SKUIRedeemViewControllerLegacy operationQueue]
  -[SKUIRedeemViewControllerLegacy setOperationQueue:]
  -[SKUIRedeemViewControllerLegacy dismissViewControllerAnimated:completion:]
  -[SKUIRedeemViewControllerLegacy dismissAnimated:]
  -[SKUIRedeemViewControllerLegacy preferredContentSize]
  -[SKUIRedeemViewControllerLegacy viewWillAppear:]
  -[SKUIRedeemViewControllerLegacy viewWillDisappear:]
  -[SKUIRedeemViewControllerLegacy supportedInterfaceOrientations]
  -[SKUIRedeemViewControllerLegacy viewDidAppear:]
  -[SKUIRedeemViewControllerLegacy clientContext]
  -[SKUIRedeemViewControllerLegacy setClientContext:]
  -[SKUIRedeemViewControllerLegacy _cancelButtonAction:]
  -[SKUIRedeemViewControllerLegacy setCameraDelegate:]
  -[SKUIRedeemViewControllerLegacy cameraDelegate]
  -[SKUIRedeemViewControllerLegacy initWithRedeemCategory:]
  -[SKUIRedeemViewControllerLegacy setCameraRedeemVisible:]
  -[SKUIRedeemViewControllerLegacy setRedeemConfiguration:]
  -[SKUIRedeemViewControllerLegacy setShouldPerformInitialOperationOnAppear:]
  -[SKUIRedeemViewControllerLegacy redeemIdViewControllerDidCancel:]
  -[SKUIRedeemViewControllerLegacy redeemIdViewController:submittedWithFields:]
  -[SKUIRedeemViewControllerLegacy initialCode]
  -[SKUIRedeemViewControllerLegacy cancelButtonItem]
  -[SKUIRedeemViewControllerLegacy shouldPerformInitialOperationOnAppear]
  -[SKUIRedeemViewControllerLegacy _performInitialRedeemOperation]
  -[SKUIRedeemViewControllerLegacy _showInputViewController]
  -[SKUIRedeemViewControllerLegacy _showNationalIdVerificationPage]
  -[SKUIRedeemViewControllerLegacy _showNationalIdLoadingPage]
  -[SKUIRedeemViewControllerLegacy _executeIdValidationOperationWithFields:]
  -[SKUIRedeemViewControllerLegacy _newInputViewController]
  -[SKUIRedeemViewControllerLegacy _executeRequiresIdValidationOperation]
  -[SKUIRedeemViewControllerLegacy _executePreflightOperationForcesAuthentication:]
  -[SKUIRedeemViewControllerLegacy attempsAutomaticRedeem]
  -[SKUIRedeemViewControllerLegacy _finishPreflightWithResult:]
  -[SKUIRedeemViewControllerLegacy _loadInputViewController]
  -[SKUIRedeemViewControllerLegacy redeemConfiguration]
  -[SKUIRedeemViewControllerLegacy _attemptAutomaticRedeemWithMetadata:]
  -[SKUIRedeemViewControllerLegacy cameraRedeemVisible]
  -[SKUIRedeemViewControllerLegacy setInitialCode:]
  -[SKUIRedeemViewControllerLegacy redeemStepViewControllerShouldValidateNationalID:]
  -[SKUIRedeemViewControllerLegacy redeemAgainAnimated:]
  -[SKUIRedeemViewControllerLegacy setAttempsAutomaticRedeem:]
  -[SKUIRedeemViewControllerLegacy setCancelButtonItem:]


SKUIRedeemIdTableViewCell : UITableViewCell /usr/lib/libobjc.A.dylib <UITextFieldDelegate>
 @property  UITextField *textField
 @property  <SKUIRedeemIdTableViewCellDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRedeemIdTableViewCell delegate]
  -[SKUIRedeemIdTableViewCell setDelegate:]
  -[SKUIRedeemIdTableViewCell .cxx_destruct]
  -[SKUIRedeemIdTableViewCell layoutSubviews]
  -[SKUIRedeemIdTableViewCell textField]
  -[SKUIRedeemIdTableViewCell becomeFirstResponder]
  -[SKUIRedeemIdTableViewCell resignFirstResponder]
  -[SKUIRedeemIdTableViewCell setReturnKeyType:]
  -[SKUIRedeemIdTableViewCell setKeyboardType:]
  -[SKUIRedeemIdTableViewCell initWithStyle:reuseIdentifier:]
  -[SKUIRedeemIdTableViewCell textFieldShouldReturn:]
  -[SKUIRedeemIdTableViewCell textFieldShouldClear:]
  -[SKUIRedeemIdTableViewCell setPlaceholderText:]
  -[SKUIRedeemIdTableViewCell setTextField:]
  -[SKUIRedeemIdTableViewCell textFieldDidChange:]
  -[SKUIRedeemIdTableViewCell _initializeTextField]
  -[SKUIRedeemIdTableViewCell setAutoCapitalizationType:]


SKUIExploreDocumentViewController : SKUIViewController <CLLocationManagerDelegate, SKUINavigationBarDisplayConfiguring, SKUIStackedBarDelegate, UINavigationControllerDelegate, UISplitViewControllerDelegate, SKUIDocumentViewController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIExploreDocumentViewController _shouldForwardViewWillTransitionToSize]

  // instance methods
  -[SKUIExploreDocumentViewController dealloc]
  -[SKUIExploreDocumentViewController .cxx_destruct]
  -[SKUIExploreDocumentViewController locationManager:didChangeAuthorizationStatus:]
  -[SKUIExploreDocumentViewController loadView]
  -[SKUIExploreDocumentViewController viewWillAppear:]
  -[SKUIExploreDocumentViewController viewWillDisappear:]
  -[SKUIExploreDocumentViewController viewDidAppear:]
  -[SKUIExploreDocumentViewController _reloadData]
  -[SKUIExploreDocumentViewController sizeForChildContentContainer:withParentContainerSize:]
  -[SKUIExploreDocumentViewController contentScrollView]
  -[SKUIExploreDocumentViewController navigationController:willShowViewController:animated:]
  -[SKUIExploreDocumentViewController navigationController:didShowViewController:animated:]
  -[SKUIExploreDocumentViewController navigationController:animationControllerForOperation:fromViewController:toViewController:]
  -[SKUIExploreDocumentViewController splitViewController:shouldHideViewController:inOrientation:]
  -[SKUIExploreDocumentViewController setClientContext:]
  -[SKUIExploreDocumentViewController documentDidUpdate:]
  -[SKUIExploreDocumentViewController managesNavigationBarContents]
  -[SKUIExploreDocumentViewController impressionableViewElements]
  -[SKUIExploreDocumentViewController documentMediaQueriesDidUpdate:]
  -[SKUIExploreDocumentViewController _beginActiveImpressionsForImpressionableViewElements]
  -[SKUIExploreDocumentViewController _endAllPendingActiveImpression]
  -[SKUIExploreDocumentViewController prefersNavigationBarBackgroundViewHidden]
  -[SKUIExploreDocumentViewController navigationBarTintColor]
  -[SKUIExploreDocumentViewController prefersNavigationBarHidden]
  -[SKUIExploreDocumentViewController initWithTemplateElement:]
  -[SKUIExploreDocumentViewController _updateChildViewControllers]
  -[SKUIExploreDocumentViewController _contentInsetDidChange:]
  -[SKUIExploreDocumentViewController _reloadLeftViewControllers]
  -[SKUIExploreDocumentViewController _reloadRightViewController]
  -[SKUIExploreDocumentViewController _reloadSelectionForViewController:]
  -[SKUIExploreDocumentViewController _leftColumnWidth]
  -[SKUIExploreDocumentViewController _rootNavigationTitle]
  -[SKUIExploreDocumentViewController _getPageComponents:title:forViewControllerAtIndex:]
  -[SKUIExploreDocumentViewController _pageComponentsAtIndex:]
  -[SKUIExploreDocumentViewController _newSectionsViewControllerAtIndex:]
  -[SKUIExploreDocumentViewController _rightPageComponents]
  -[SKUIExploreDocumentViewController _rightVCColorScheme]
  -[SKUIExploreDocumentViewController stackedBar:didSelectItemAtIndex:]
  -[SKUIExploreDocumentViewController selectGenreListComponent:]
  -[SKUIExploreDocumentViewController _leftPageComponentsAtIndex:]


SKUIMediaSocialAdminPermissionsOperation : SSVComplexOperation /System/Library/Frameworks/UIKit.framework/UIKit
 @property  @? outputBlock

  // instance methods
  -[SKUIMediaSocialAdminPermissionsOperation .cxx_destruct]
  -[SKUIMediaSocialAdminPermissionsOperation main]
  -[SKUIMediaSocialAdminPermissionsOperation setOutputBlock:]
  -[SKUIMediaSocialAdminPermissionsOperation outputBlock]
  -[SKUIMediaSocialAdminPermissionsOperation initWithClientContext:]
  -[SKUIMediaSocialAdminPermissionsOperation _authorsWithResponseDictionary:]
  -[SKUIMediaSocialAdminPermissionsOperation _lookupResponseForMissingAuthors:error:]


SKUIRedeemResultsViewController : SKUIRedeemStepViewController
 @property  SKUIRedeem *redeem
 @property  long long redeemCategory

  // class methods
  +[SKUIRedeemResultsViewController canShowResultsForRedeem:]
  +[SKUIRedeemResultsViewController redeemResultsControllerForRedeem:]

  // instance methods
  -[SKUIRedeemResultsViewController initWithCoder:]
  -[SKUIRedeemResultsViewController .cxx_destruct]
  -[SKUIRedeemResultsViewController initWithNibName:bundle:]
  -[SKUIRedeemResultsViewController viewDidLoad]
  -[SKUIRedeemResultsViewController initWithRedeem:]
  -[SKUIRedeemResultsViewController setRedeemCategory:]
  -[SKUIRedeemResultsViewController _doneAction:]
  -[SKUIRedeemResultsViewController redeem]
  -[SKUIRedeemResultsViewController setRedeem:]
  -[SKUIRedeemResultsViewController redeemCategory]


SKUIButtonBorderStyle : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  IKColor *borderColor
 @property  double borderWidth
 @property  {IKCornerRadii=dddd} cornerRadii
 @property  IKColor *fillColor
 @property  NSString *namedCornerStyle
 @property  {UIEdgeInsets=dddd} contentInset

  // instance methods
  -[SKUIButtonBorderStyle copyWithZone:]
  -[SKUIButtonBorderStyle .cxx_destruct]
  -[SKUIButtonBorderStyle setBorderColor:]
  -[SKUIButtonBorderStyle setContentInset:]
  -[SKUIButtonBorderStyle setCornerRadii:]
  -[SKUIButtonBorderStyle fillColor]
  -[SKUIButtonBorderStyle borderWidth]
  -[SKUIButtonBorderStyle setBorderWidth:]
  -[SKUIButtonBorderStyle contentInset]
  -[SKUIButtonBorderStyle setFillColor:]
  -[SKUIButtonBorderStyle borderColor]
  -[SKUIButtonBorderStyle _usesBackgroundWithAlpha:]
  -[SKUIButtonBorderStyle initWithElementStyle:]
  -[SKUIButtonBorderStyle bezierPathWithBounds:]
  -[SKUIButtonBorderStyle cornerRadii]
  -[SKUIButtonBorderStyle namedCornerStyle]
  -[SKUIButtonBorderStyle setNamedCornerStyle:]


SKUICarouselPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIMissingItemDelegate, UICollectionViewDataSource, UICollectionViewDelegate>
 @property  SKUICarouselPageComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUICarouselPageSection dealloc]
  -[SKUICarouselPageSection .cxx_destruct]
  -[SKUICarouselPageSection scrollViewWillBeginDragging:]
  -[SKUICarouselPageSection scrollViewDidEndDecelerating:]
  -[SKUICarouselPageSection scrollViewDidEndScrollingAnimation:]
  -[SKUICarouselPageSection collectionView:numberOfItemsInSection:]
  -[SKUICarouselPageSection collectionView:cellForItemAtIndexPath:]
  -[SKUICarouselPageSection collectionView:shouldHighlightItemAtIndexPath:]
  -[SKUICarouselPageSection collectionView:shouldSelectItemAtIndexPath:]
  -[SKUICarouselPageSection collectionView:didSelectItemAtIndexPath:]
  -[SKUICarouselPageSection collectionView:willDisplayCell:forItemAtIndexPath:]
  -[SKUICarouselPageSection collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[SKUICarouselPageSection artworkRequest:didLoadImage:]
  -[SKUICarouselPageSection initWithPageComponent:]
  -[SKUICarouselPageSection _reloadViewElementProperties]
  -[SKUICarouselPageSection applyUpdateType:]
  -[SKUICarouselPageSection backgroundColorForIndexPath:]
  -[SKUICarouselPageSection invalidateCachedLayoutInformation]
  -[SKUICarouselPageSection sectionContentInset]
  -[SKUICarouselPageSection willAppearInContext:]
  -[SKUICarouselPageSection cellForIndexPath:]
  -[SKUICarouselPageSection cellSizeForIndexPath:]
  -[SKUICarouselPageSection entityProvider:didInvalidateWithContext:]
  -[SKUICarouselPageSection numberOfCells]
  -[SKUICarouselPageSection prefetchResourcesWithReason:]
  -[SKUICarouselPageSection addImpressionsForIndexPath:toSession:]
  -[SKUICarouselPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUICarouselPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUICarouselPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUICarouselPageSection defaultItemPinningStyle]
  -[SKUICarouselPageSection collectionView:carouselLayout:willApplyLayoutAttributes:]
  -[SKUICarouselPageSection _indexPathIsProgressIndicator:]
  -[SKUICarouselPageSection _currentPageIndex]
  -[SKUICarouselPageSection _carouselCollectionView]
  -[SKUICarouselPageSection _scrollToItemAtIndexPath:animated:]
  -[SKUICarouselPageSection _actualContentWidth]
  -[SKUICarouselPageSection _startCycleTimerIfNecessary]
  -[SKUICarouselPageSection _cellClassForViewElement:]
  -[SKUICarouselPageSection _cancelCycleTimer]
  -[SKUICarouselPageSection _loadMissingItemsFromIndex:withReason:]
  -[SKUICarouselPageSection _reloadLegacySizing]
  -[SKUICarouselPageSection _dequeueCellForViewElement:collectionView:indexPath:]
  -[SKUICarouselPageSection _addImpressionForIndex:toSession:]
  -[SKUICarouselPageSection _isItemEnabledAtIndexPath:]
  -[SKUICarouselPageSection _cellClassForLockup:]
  -[SKUICarouselPageSection _dequeueCellForLockup:collectionView:indexPath:]
  -[SKUICarouselPageSection _missingItemLoader]
  -[SKUICarouselPageSection _legacyItemSize]
  -[SKUICarouselPageSection _legacyItemSpacing]
  -[SKUICarouselPageSection _fireCycleTimer]
  -[SKUICarouselPageSection missingItemLoader:didLoadItems:invalidItemIdentifiers:]


SKUIRedeemViewController : UINavigationController /usr/lib/libobjc.A.dylib
 @property  UIActivityIndicatorView *activityIndicator
 @property  UIViewController *embeddedViewController
 @property  BOOL finishedLoading
 @property  SKUIRedeemConfiguration *redeemConfiguration
 @property  BOOL shouldPerformInitialOperationOnAppear
 @property  long long category
 @property  BOOL attempsAutomaticRedeem
 @property  <SKUIRedeemViewCameraOverrideDelegate> *cameraDelegate
 @property  NSString *initialCode
 @property  SKUIClientContext *clientContext
 @property  SUClientInterface *clientInterface
 @property  BOOL cameraRedeemVisible
 @property  NSOperationQueue *operationQueue

  // class methods
  +[SKUIRedeemViewController redeemRequiresNationalId:]

  // instance methods
  -[SKUIRedeemViewController .cxx_destruct]
  -[SKUIRedeemViewController category]
  -[SKUIRedeemViewController operationQueue]
  -[SKUIRedeemViewController setOperationQueue:]
  -[SKUIRedeemViewController _setup]
  -[SKUIRedeemViewController loadView]
  -[SKUIRedeemViewController viewDidLoad]
  -[SKUIRedeemViewController viewWillLayoutSubviews]
  -[SKUIRedeemViewController _setChildViewController:]
  -[SKUIRedeemViewController activityIndicator]
  -[SKUIRedeemViewController setActivityIndicator:]
  -[SKUIRedeemViewController clientInterface]
  -[SKUIRedeemViewController clientContext]
  -[SKUIRedeemViewController setClientContext:]
  -[SKUIRedeemViewController setCameraDelegate:]
  -[SKUIRedeemViewController cameraDelegate]
  -[SKUIRedeemViewController _setupNavigationItem]
  -[SKUIRedeemViewController initWithRedeemCategory:]
  -[SKUIRedeemViewController setCameraRedeemVisible:]
  -[SKUIRedeemViewController setRedeemConfiguration:]
  -[SKUIRedeemViewController setShouldPerformInitialOperationOnAppear:]
  -[SKUIRedeemViewController setClientInterface:]
  -[SKUIRedeemViewController clientInterfaceDidFinishLoading:]
  -[SKUIRedeemViewController initialCode]
  -[SKUIRedeemViewController shouldPerformInitialOperationOnAppear]
  -[SKUIRedeemViewController attempsAutomaticRedeem]
  -[SKUIRedeemViewController redeemConfiguration]
  -[SKUIRedeemViewController cameraRedeemVisible]
  -[SKUIRedeemViewController setInitialCode:]
  -[SKUIRedeemViewController setAttempsAutomaticRedeem:]
  -[SKUIRedeemViewController _cancelButtonAction]
  -[SKUIRedeemViewController _startActivityIndicator]
  -[SKUIRedeemViewController _stopActivityIndicator]
  -[SKUIRedeemViewController _presentModernRedeemWithURL:]
  -[SKUIRedeemViewController _presentLegacyRedeem]
  -[SKUIRedeemViewController _redeemURLWithCompletion:]
  -[SKUIRedeemViewController embeddedViewController]
  -[SKUIRedeemViewController setEmbeddedViewController:]
  -[SKUIRedeemViewController finishedLoading]
  -[SKUIRedeemViewController setFinishedLoading:]


SKUIContextActionsViewController : UIViewController /usr/lib/libobjc.A.dylib <UIViewControllerTransitioningDelegate, UIViewControllerAnimatedTransitioning, UIPopoverPresentationControllerDelegate, UIInterfaceActionHandlerInvocationDelegate, UIAdaptivePresentationControllerDelegate>
 @property  SKUIContextActionsConfiguration *configuration
 @property  NSMutableArray *constraints
 @property  UIInterfaceActionGroupView *contextActionView
 @property  UIStackView *stackView
 @property  UIVisualEffectView *backgroundView
 @property  UIInterfaceActionGroupView *scrollableActionGroupView
 @property  {CGPoint=dd} gestureRecognizerInitialLocation
 @property  BOOL appliedSystemRecognizer
 @property  SKUIContextActionsPresentationController *transitionPresentationController
 @property  BOOL orbPresentation
 @property  UIGestureRecognizer *systemProvidedGestureRecognzier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIContextActionsViewController initWithCoder:]
  -[SKUIContextActionsViewController .cxx_destruct]
  -[SKUIContextActionsViewController constraints]
  -[SKUIContextActionsViewController setConfiguration:]
  -[SKUIContextActionsViewController configuration]
  -[SKUIContextActionsViewController initWithConfiguration:]
  -[SKUIContextActionsViewController traitCollectionDidChange:]
  -[SKUIContextActionsViewController backgroundView]
  -[SKUIContextActionsViewController interfaceAction:invokeActionHandler:completion:]
  -[SKUIContextActionsViewController viewWillAppear:]
  -[SKUIContextActionsViewController stackView]
  -[SKUIContextActionsViewController viewDidLoad]
  -[SKUIContextActionsViewController transitionDuration:]
  -[SKUIContextActionsViewController animateTransition:]
  -[SKUIContextActionsViewController animationControllerForDismissedController:]
  -[SKUIContextActionsViewController presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]
  -[SKUIContextActionsViewController viewDidLayoutSubviews]
  -[SKUIContextActionsViewController viewDidAppear:]
  -[SKUIContextActionsViewController setBackgroundView:]
  -[SKUIContextActionsViewController setStackView:]
  -[SKUIContextActionsViewController setConstraints:]
  -[SKUIContextActionsViewController setOrbPresentation:]
  -[SKUIContextActionsViewController setSystemProvidedGestureRecognzier:]
  -[SKUIContextActionsViewController transitionPresentationController]
  -[SKUIContextActionsViewController isOrbPresentation]
  -[SKUIContextActionsViewController viewTapped:]
  -[SKUIContextActionsViewController _reloadViewsConfiguration]
  -[SKUIContextActionsViewController systemProvidedGestureRecognzier]
  -[SKUIContextActionsViewController setGestureRecognizerInitialLocation:]
  -[SKUIContextActionsViewController systemProvidedGestureRecognzierTriggered:]
  -[SKUIContextActionsViewController scrollableActionGroupView]
  -[SKUIContextActionsViewController gestureRecognizerInitialLocation]
  -[SKUIContextActionsViewController _applySystemRecognizer]
  -[SKUIContextActionsViewController contextActionView]
  -[SKUIContextActionsViewController setAppliedSystemRecognizer:]
  -[SKUIContextActionsViewController setContextActionView:]
  -[SKUIContextActionsViewController hasAppliedSystemRecognizer]
  -[SKUIContextActionsViewController setTransitionPresentationController:]
  -[SKUIContextActionsViewController _transitionPresentationControllerForPresentedViewController:presentingViewController:]
  -[SKUIContextActionsViewController setScrollableActionGroupView:]


SKUIURLResolver : NSObject /usr/lib/libc++.1.dylib <SKUIPassbookLoaderDelegate>
 @property  <SKUIURLResolverDelegate> *delegate
 @property  <UINavigationControllerDelegate> *navigationControllerDelegate
 @property  NSOperationQueue *operationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIURLResolver tabIdentifierForURL:]

  // instance methods
  -[SKUIURLResolver dealloc]
  -[SKUIURLResolver delegate]
  -[SKUIURLResolver setDelegate:]
  -[SKUIURLResolver .cxx_destruct]
  -[SKUIURLResolver operationQueue]
  -[SKUIURLResolver setOperationQueue:]
  -[SKUIURLResolver _presentViewController:]
  -[SKUIURLResolver navigationControllerDelegate]
  -[SKUIURLResolver _sendDidFinishWithResult:]
  -[SKUIURLResolver initWithClientContext:]
  -[SKUIURLResolver _showBagURLWithURL:]
  -[SKUIURLResolver _showAccountViewControllerWithURL:]
  -[SKUIURLResolver _addPassbookPassWithURL:]
  -[SKUIURLResolver _showDonationViewControllerWithURL:]
  -[SKUIURLResolver _showGiftViewControllerWithURL:]
  -[SKUIURLResolver _handleSafariScriptDataUpdate:]
  -[SKUIURLResolver _performLookupWithURL:]
  -[SKUIURLResolver _showRedeemViewControllerWithURL:]
  -[SKUIURLResolver _showSearchWithURL:]
  -[SKUIURLResolver _selectTabWithIdentifier:]
  -[SKUIURLResolver _resolveURLRequest:withOriginURL:]
  -[SKUIURLResolver _showPlaceholderViewController]
  -[SKUIURLResolver _showViewControllerWithResponse:fromOperation:]
  -[SKUIURLResolver _newHTMLViewControllerWithSection:]
  -[SKUIURLResolver presentationViewControllerForPassbookLoader:]
  -[SKUIURLResolver passbookLoaderDidFinish:]
  -[SKUIURLResolver resolveURL:]
  -[SKUIURLResolver setNavigationControllerDelegate:]


SKUIRedeemInputViewController : SKUIRedeemStepViewController <UITextFieldDelegate>
 @property  long long category
 @property  NSString *initialCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRedeemInputViewController dealloc]
  -[SKUIRedeemInputViewController .cxx_destruct]
  -[SKUIRedeemInputViewController category]
  -[SKUIRedeemInputViewController loadView]
  -[SKUIRedeemInputViewController textFieldShouldReturn:]
  -[SKUIRedeemInputViewController _cancelAction:]
  -[SKUIRedeemInputViewController initWithRedeemCategory:]
  -[SKUIRedeemInputViewController _termsButtonAction:]
  -[SKUIRedeemInputViewController initialCode]
  -[SKUIRedeemInputViewController setInitialCode:]
  -[SKUIRedeemInputViewController _redeemConfigurationImagesDidLoad:]
  -[SKUIRedeemInputViewController _newTextFieldWithClientContext:]
  -[SKUIRedeemInputViewController _textFieldTextDidChange:]
  -[SKUIRedeemInputViewController _passbookLockupAction:]
  -[SKUIRedeemInputViewController _redeemAction:]
  -[SKUIRedeemInputViewController _toggleActivityIndicatorBarButtonItem:]


SKUISettingValueStore : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUISettingValueStore init]
  -[SKUISettingValueStore setValue:forKey:]
  -[SKUISettingValueStore .cxx_destruct]
  -[SKUISettingValueStore valueForKey:]
  -[SKUISettingValueStore valueForKeyPath:]
  -[SKUISettingValueStore valueForUndefinedKey:]
  -[SKUISettingValueStore setValue:forUndefinedKey:]
  -[SKUISettingValueStore setValue:forKeyPath:]
  -[SKUISettingValueStore hasChanges]
  -[SKUISettingValueStore commitChanges]
  -[SKUISettingValueStore clearValueForKey:]
  -[SKUISettingValueStore discardChanges]
  -[SKUISettingValueStore modifiedKeys]
  -[SKUISettingValueStore originalValueForKey:]
  -[SKUISettingValueStore resolvedValueForKey:]
  -[SKUISettingValueStore setModifiedValue:forKey:]
  -[SKUISettingValueStore setOriginalValue:forKey:]


SKUIMediaLibraryInterface : NSObject /usr/lib/libc++.1.dylib <SKUILibraryInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIMediaLibraryInterface removeMediaItemsForLibraryItems:]
  -[SKUIMediaLibraryInterface stateForLibraryItem:]
  -[SKUIMediaLibraryInterface performActionForLibraryItem:]
  -[SKUIMediaLibraryInterface exposedPlatformItemKinds]
  -[SKUIMediaLibraryInterface enumerateStatesForLibraryItems:usingBlock:]
  -[SKUIMediaLibraryInterface _newDefaultQuery]
  -[SKUIMediaLibraryInterface _availabilityForMediaItem:]
  -[SKUIMediaLibraryInterface _AVTypesForMediaItem:]
  -[SKUIMediaLibraryInterface _storePlatformKindForMediaItem:]
  -[SKUIMediaLibraryInterface _restrictQueryToLocalContent:]
  -[SKUIMediaLibraryInterface isItemLocalAudiobook:]


SKUIReviewViewElement : SKUIViewElement
 @property  SKUIResponseViewElement *response
 @property  SKUIDialogTemplateViewElement *dialogTemplate

  // instance methods
  -[SKUIReviewViewElement response]
  -[SKUIReviewViewElement dialogTemplate]


SKUIRedeemStepViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  SKUIClientContext *clientContext
 @property  SKUIRedeemConfiguration *configuration
 @property  NSOperationQueue *operationQueue
 @property  BOOL shouldShowPassbookLearnMore
 @property  <SKUIRedeemStepDelegate> *redeemStepDelegate

  // instance methods
  -[SKUIRedeemStepViewController .cxx_destruct]
  -[SKUIRedeemStepViewController operationQueue]
  -[SKUIRedeemStepViewController setOperationQueue:]
  -[SKUIRedeemStepViewController setConfiguration:]
  -[SKUIRedeemStepViewController configuration]
  -[SKUIRedeemStepViewController clientContext]
  -[SKUIRedeemStepViewController setClientContext:]
  -[SKUIRedeemStepViewController setRedeemStepDelegate:]
  -[SKUIRedeemStepViewController shouldShowPassbookLearnMore]
  -[SKUIRedeemStepViewController redeemStepDelegate]


SKUITracklistSectionHeaderCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIItemOfferButtonDelegate, SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUITracklistSectionHeaderCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUITracklistSectionHeaderCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUITracklistSectionHeaderCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUITracklistSectionHeaderCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUITracklistSectionHeaderCollectionViewCell _titlesWidthForWidth:columnData:]

  // instance methods
  -[SKUITracklistSectionHeaderCollectionViewCell .cxx_destruct]
  -[SKUITracklistSectionHeaderCollectionViewCell initWithFrame:]
  -[SKUITracklistSectionHeaderCollectionViewCell layoutSubviews]
  -[SKUITracklistSectionHeaderCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUITracklistSectionHeaderCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUITracklistSectionHeaderCollectionViewCell updateWithItemState:context:animated:]
  -[SKUITracklistSectionHeaderCollectionViewCell viewForElementIdentifier:]
  -[SKUITracklistSectionHeaderCollectionViewCell _buttonAction:]
  -[SKUITracklistSectionHeaderCollectionViewCell _cancelConfirmationAction:]
  -[SKUITracklistSectionHeaderCollectionViewCell _showConfirmationAction:]
  -[SKUITracklistSectionHeaderCollectionViewCell itemOfferButtonWillAnimateTransition:]


SKUIContentUnavailableTemplateElement : SKUIViewElement
 @property  SKUIButtonViewElement *button
 @property  SKUIImageViewElement *image
 @property  SKUILabelViewElement *messageLabel
 @property  SKUILabelViewElement *titleLabel

  // instance methods
  -[SKUIContentUnavailableTemplateElement image]
  -[SKUIContentUnavailableTemplateElement button]
  -[SKUIContentUnavailableTemplateElement titleLabel]
  -[SKUIContentUnavailableTemplateElement messageLabel]
  -[SKUIContentUnavailableTemplateElement pageComponentType]


SKUIBadgeTextAttachmentLoader : NSObject /usr/lib/libc++.1.dylib <SKUIArtworkRequestDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIBadgeTextAttachmentLoader .cxx_destruct]
  -[SKUIBadgeTextAttachmentLoader artworkRequest:didLoadImage:]
  -[SKUIBadgeTextAttachmentLoader initWithResourceLoader:]
  -[SKUIBadgeTextAttachmentLoader connectStringView:]
  -[SKUIBadgeTextAttachmentLoader disconnectStringView:]
  -[SKUIBadgeTextAttachmentLoader loadImageForBadge:layout:reason:]


SKUIBadgeImageRequest : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUIBadgeImageRequest .cxx_destruct]


SKUIRedeem : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSArray *items
 @property  NSArray *downloads
 @property  NSString *inAppPurchase
 @property  NSString *credit
 @property  NSString *balance
 @property  NSString *creditDisplay
 @property  NSDictionary *thankYouDictionary
 @property  NSURL *redirectURL
 @property  NSURL *customizedThankyouURL
 @property  UIImage *headerImage
 @property  <SKUIArtworkProviding> *headerArtworkProvider
 @property  NSString *title
 @property  NSString *message
 @property  NSArray *links
 @property  BOOL hideItemView
 @property  double ITunesPassLearnMoreAlertInterval

  // class methods
  +[SKUIRedeem supportsSecureCoding]

  // instance methods
  -[SKUIRedeem init]
  -[SKUIRedeem encodeWithCoder:]
  -[SKUIRedeem initWithCoder:]
  -[SKUIRedeem .cxx_destruct]
  -[SKUIRedeem title]
  -[SKUIRedeem setTitle:]
  -[SKUIRedeem message]
  -[SKUIRedeem setMessage:]
  -[SKUIRedeem credit]
  -[SKUIRedeem items]
  -[SKUIRedeem setItems:]
  -[SKUIRedeem balance]
  -[SKUIRedeem setBalance:]
  -[SKUIRedeem links]
  -[SKUIRedeem downloads]
  -[SKUIRedeem redirectURL]
  -[SKUIRedeem setRedirectURL:]
  -[SKUIRedeem headerImage]
  -[SKUIRedeem setHeaderImage:]
  -[SKUIRedeem setLinks:]
  -[SKUIRedeem setITunesPassLearnMoreAlertInterval:]
  -[SKUIRedeem setDownloads:]
  -[SKUIRedeem inAppPurchase]
  -[SKUIRedeem setInAppPurchase:]
  -[SKUIRedeem setCredit:]
  -[SKUIRedeem creditDisplay]
  -[SKUIRedeem setCreditDisplay:]
  -[SKUIRedeem thankYouDictionary]
  -[SKUIRedeem setThankYouDictionary:]
  -[SKUIRedeem customizedThankyouURL]
  -[SKUIRedeem setCustomizedThankyouURL:]
  -[SKUIRedeem headerArtworkProvider]
  -[SKUIRedeem setHeaderArtworkProvider:]
  -[SKUIRedeem hideItemView]
  -[SKUIRedeem setHideItemView:]
  -[SKUIRedeem ITunesPassLearnMoreAlertInterval]


SKUIRedeemItem : SKUIItem <NSSecureCoding>
 @property  NSString *title
 @property  long long itemIdentifier
 @property  <SKUIArtworkProviding> *artworks
 @property  long long itemKind

  // class methods
  +[SKUIRedeemItem supportsSecureCoding]

  // instance methods
  -[SKUIRedeemItem encodeWithCoder:]
  -[SKUIRedeemItem initWithCoder:]
  -[SKUIRedeemItem .cxx_destruct]
  -[SKUIRedeemItem artworks]
  -[SKUIRedeemItem setArtworks:]
  -[SKUIRedeemItem artworkURLForSize:]
  -[SKUIRedeemItem ageBandRange]
  -[SKUIRedeemItem largestArtworkURL]


SKUIRedeemCameraViewController : SKUIRedeemStepViewController <CRCodeRedeemerControllerDelegate, SKUIRedeemCameraViewDelegate, SKUIRedeemCameraViewControllerDelegate>
 @property  long long category
 @property  NSString *initialCode
 @property  <SKUIRedeemCameraViewControllerDelegate> *delegate
 @property  <SKUIRedeemViewCameraOverrideDelegate> *cameraOverrideDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRedeemCameraViewController dealloc]
  -[SKUIRedeemCameraViewController _enabled]
  -[SKUIRedeemCameraViewController delegate]
  -[SKUIRedeemCameraViewController setDelegate:]
  -[SKUIRedeemCameraViewController .cxx_destruct]
  -[SKUIRedeemCameraViewController category]
  -[SKUIRedeemCameraViewController _setEnabled:]
  -[SKUIRedeemCameraViewController loadView]
  -[SKUIRedeemCameraViewController disablesAutomaticKeyboardDismissal]
  -[SKUIRedeemCameraViewController contentScrollView]
  -[SKUIRedeemCameraViewController _cancelAction:]
  -[SKUIRedeemCameraViewController performRedeemOperationWithCode:cameraRecognized:completion:]
  -[SKUIRedeemCameraViewController initWithRedeemCategory:]
  -[SKUIRedeemCameraViewController redeemCameraViewController:didFinishWithRedeem:]
  -[SKUIRedeemCameraViewController codeRedeemerController:didEndWithInfo:]
  -[SKUIRedeemCameraViewController codeRedeemerControllerDidCancel:]
  -[SKUIRedeemCameraViewController codeRedeemerControllerDidDisplayMessage:]
  -[SKUIRedeemCameraViewController initialCode]
  -[SKUIRedeemCameraViewController initWithRedeemCategoryFullscreen:]
  -[SKUIRedeemCameraViewController setCameraOverrideDelegate:]
  -[SKUIRedeemCameraViewController setInitialCode:]
  -[SKUIRedeemCameraViewController _redeemAction:]
  -[SKUIRedeemCameraViewController _performRedeemOperationWithCode:cameraRecognized:allowOverride:completion:]
  -[SKUIRedeemCameraViewController _flipAction:]
  -[SKUIRedeemCameraViewController _updateRightBarButtonItemsForRedeemInputState:]
  -[SKUIRedeemCameraViewController SKUIRedeemPreflightImagesDidLoad:]
  -[SKUIRedeemCameraViewController _redeemDidFinish:error:]
  -[SKUIRedeemCameraViewController cameraOverrideDelegate]
  -[SKUIRedeemCameraViewController _cameraRedeemDidFinish:error:]
  -[SKUIRedeemCameraViewController redeemerViewForSKUIRedeemCameraView:]
  -[SKUIRedeemCameraViewController SKUIRedeemCameraView:textFieldDidChange:]
  -[SKUIRedeemCameraViewController SKUIRedeemCameraView:textFieldDidRedeem:]
  -[SKUIRedeemCameraViewController cancelRedeemerViewForSKUIRedeemCameraView:]
  -[SKUIRedeemCameraViewController startRedeemerViewForSKUIRedeemCameraView:]
  -[SKUIRedeemCameraViewController presentFullScreenCameraViewForSKUIRedeemCameraView:]
  -[SKUIRedeemCameraViewController showITunesPassLearnMoreForSKUIRedeemCameraView:]


SKUIUberImageDataConsumer : SKUIImageDataConsumer
 @property  UIColor *backgroundColor

  // instance methods
  -[SKUIUberImageDataConsumer .cxx_destruct]
  -[SKUIUberImageDataConsumer backgroundColor]
  -[SKUIUberImageDataConsumer setBackgroundColor:]
  -[SKUIUberImageDataConsumer imageForImage:]


SKUIRedeemITunesPassLearnMoreViewController : SKUIRedeemStepViewController <SKUIPassbookLoaderDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRedeemITunesPassLearnMoreViewController dealloc]
  -[SKUIRedeemITunesPassLearnMoreViewController .cxx_destruct]
  -[SKUIRedeemITunesPassLearnMoreViewController loadView]
  -[SKUIRedeemITunesPassLearnMoreViewController initWithNibName:bundle:]
  -[SKUIRedeemITunesPassLearnMoreViewController viewWillAppear:]
  -[SKUIRedeemITunesPassLearnMoreViewController viewDidAppear:]
  -[SKUIRedeemITunesPassLearnMoreViewController _doneButtonAction:]
  -[SKUIRedeemITunesPassLearnMoreViewController presentationViewControllerForPassbookLoader:]
  -[SKUIRedeemITunesPassLearnMoreViewController passbookLoaderDidFinish:]
  -[SKUIRedeemITunesPassLearnMoreViewController _existingPass]
  -[SKUIRedeemITunesPassLearnMoreViewController _passButtonAction:]
  -[SKUIRedeemITunesPassLearnMoreViewController _loadPassbookPass]
  -[SKUIRedeemITunesPassLearnMoreViewController _loadPassbookURL]
  -[SKUIRedeemITunesPassLearnMoreViewController _showErrorDialog]
  -[SKUIRedeemITunesPassLearnMoreViewController _didLoadPassbookURLString:]


SKUICommentTemplateViewElement : SKUIViewElement
 @property  NSString *asText
 @property  NSString *asFormat
 @property  NSString *commentAsText
 @property  NSString *myselfText
 @property  NSString *postButtonText
 @property  NSString *postPlaceholderText
 @property  BOOL scrollNewCommentToView
 @property  BOOL showKeyboard

  // instance methods
  -[SKUICommentTemplateViewElement .cxx_destruct]
  -[SKUICommentTemplateViewElement showKeyboard]
  -[SKUICommentTemplateViewElement asText]
  -[SKUICommentTemplateViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUICommentTemplateViewElement asFormat]
  -[SKUICommentTemplateViewElement commentAsText]
  -[SKUICommentTemplateViewElement myselfText]
  -[SKUICommentTemplateViewElement postButtonText]
  -[SKUICommentTemplateViewElement postPlaceholderText]
  -[SKUICommentTemplateViewElement scrollNewCommentToView]


SKUIEditorialCardLayout : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *allLockups
 @property  SKUILockupViewElement *primaryLockup
 @property  {CGSize=dd} primaryLockupSize
 @property  double secondaryLockupWidth

  // instance methods
  -[SKUIEditorialCardLayout .cxx_destruct]
  -[SKUIEditorialCardLayout initWithCard:width:context:]
  -[SKUIEditorialCardLayout allLockups]
  -[SKUIEditorialCardLayout primaryLockup]
  -[SKUIEditorialCardLayout primaryLockupSize]
  -[SKUIEditorialCardLayout secondaryLockupWidth]


SKUIDeveloperInfoLineItemView : UIView /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} contentInset

  // instance methods
  -[SKUIDeveloperInfoLineItemView .cxx_destruct]
  -[SKUIDeveloperInfoLineItemView setBackgroundColor:]
  -[SKUIDeveloperInfoLineItemView sizeThatFits:]
  -[SKUIDeveloperInfoLineItemView layoutSubviews]
  -[SKUIDeveloperInfoLineItemView setContentInset:]
  -[SKUIDeveloperInfoLineItemView contentInset]
  -[SKUIDeveloperInfoLineItemView initWithLabel:value:]


SKUIProfileSettingDescription : SKUISettingDescription
 @property  NSString *handle
 @property  NSString *name
 @property  UIImage *photo

  // class methods
  +[SKUIProfileSettingDescription _viewClassForSettingDescription:]

  // instance methods
  -[SKUIProfileSettingDescription dealloc]
  -[SKUIProfileSettingDescription name]
  -[SKUIProfileSettingDescription .cxx_destruct]
  -[SKUIProfileSettingDescription handle]
  -[SKUIProfileSettingDescription reloadData]
  -[SKUIProfileSettingDescription photo]
  -[SKUIProfileSettingDescription initWithViewElement:parent:]
  -[SKUIProfileSettingDescription _fetchAccountInfo]
  -[SKUIProfileSettingDescription _fetchProfilePhoto]


SKUIIPhoneDownloadsViewController : UIViewController /usr/lib/libobjc.A.dylib <UITableViewDataSource, UITableViewDelegate>
 @property  SKUIClientContext *clientContext
 @property  NSArray *downloads
 @property  <SKUIDownloadsChildViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIIPhoneDownloadsViewController delegate]
  -[SKUIIPhoneDownloadsViewController setDelegate:]
  -[SKUIIPhoneDownloadsViewController .cxx_destruct]
  -[SKUIIPhoneDownloadsViewController loadView]
  -[SKUIIPhoneDownloadsViewController viewDidLayoutSubviews]
  -[SKUIIPhoneDownloadsViewController tableView:numberOfRowsInSection:]
  -[SKUIIPhoneDownloadsViewController tableView:cellForRowAtIndexPath:]
  -[SKUIIPhoneDownloadsViewController tableView:canEditRowAtIndexPath:]
  -[SKUIIPhoneDownloadsViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[SKUIIPhoneDownloadsViewController tableView:heightForRowAtIndexPath:]
  -[SKUIIPhoneDownloadsViewController tableView:didSelectRowAtIndexPath:]
  -[SKUIIPhoneDownloadsViewController clientContext]
  -[SKUIIPhoneDownloadsViewController setClientContext:]
  -[SKUIIPhoneDownloadsViewController downloads]
  -[SKUIIPhoneDownloadsViewController _reload]
  -[SKUIIPhoneDownloadsViewController setDownloads:]
  -[SKUIIPhoneDownloadsViewController reloadDownloadsAtIndexes:]


SKUIMediaSocialPhotoUpload : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  BOOL hasAlpha
 @property  unsigned long height
 @property  unsigned long length
 @property  NSString *MD5
 @property  NSString *token
 @property  NSString *tokenType
 @property  NSString *type
 @property  NSNumber *uniqueIdentifier
 @property  unsigned long width

  // instance methods
  -[SKUIMediaSocialPhotoUpload length]
  -[SKUIMediaSocialPhotoUpload copyWithZone:]
  -[SKUIMediaSocialPhotoUpload token]
  -[SKUIMediaSocialPhotoUpload type]
  -[SKUIMediaSocialPhotoUpload setType:]
  -[SKUIMediaSocialPhotoUpload setLength:]
  -[SKUIMediaSocialPhotoUpload .cxx_destruct]
  -[SKUIMediaSocialPhotoUpload uniqueIdentifier]
  -[SKUIMediaSocialPhotoUpload width]
  -[SKUIMediaSocialPhotoUpload height]
  -[SKUIMediaSocialPhotoUpload setWidth:]
  -[SKUIMediaSocialPhotoUpload setHeight:]
  -[SKUIMediaSocialPhotoUpload setUniqueIdentifier:]
  -[SKUIMediaSocialPhotoUpload setToken:]
  -[SKUIMediaSocialPhotoUpload tokenType]
  -[SKUIMediaSocialPhotoUpload setTokenType:]
  -[SKUIMediaSocialPhotoUpload setHasAlpha:]
  -[SKUIMediaSocialPhotoUpload setMD5:]
  -[SKUIMediaSocialPhotoUpload initWithUploadDictionary:]
  -[SKUIMediaSocialPhotoUpload hasAlpha]
  -[SKUIMediaSocialPhotoUpload MD5]


SKUIQuicklinksView : UIView /usr/lib/libobjc.A.dylib
 @property  UIView *collectionView
 @property  NSString *title

  // instance methods
  -[SKUIQuicklinksView .cxx_destruct]
  -[SKUIQuicklinksView title]
  -[SKUIQuicklinksView setTitle:]
  -[SKUIQuicklinksView setBackgroundColor:]
  -[SKUIQuicklinksView initWithFrame:]
  -[SKUIQuicklinksView sizeThatFits:]
  -[SKUIQuicklinksView layoutSubviews]
  -[SKUIQuicklinksView collectionView]
  -[SKUIQuicklinksView setCollectionView:]
  -[SKUIQuicklinksView setColoringWithColorScheme:]


SKUISettingsDocumentViewController : SKUIViewController <SKUIArtworkRequestDelegate, SKUISettingsDocumentViewDelegate, SKUISettingsEditTransactionDelegate, SKUISettingsGroupsDescriptionDelegate, UITableViewDataSource, UITableViewDelegate, SKUIDocumentViewController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUISettingsDocumentViewController _settingsGroupsFromTemplateElement:withDelegate:settingsContext:]
  +[SKUISettingsDocumentViewController _heightThatFitsWidth:withSettingsHeaderFooterDescription:context:]

  // instance methods
  -[SKUISettingsDocumentViewController dealloc]
  -[SKUISettingsDocumentViewController .cxx_destruct]
  -[SKUISettingsDocumentViewController loadView]
  -[SKUISettingsDocumentViewController viewWillAppear:]
  -[SKUISettingsDocumentViewController viewWillLayoutSubviews]
  -[SKUISettingsDocumentViewController viewDidAppear:]
  -[SKUISettingsDocumentViewController viewDidDisappear:]
  -[SKUISettingsDocumentViewController tableView:numberOfRowsInSection:]
  -[SKUISettingsDocumentViewController tableView:cellForRowAtIndexPath:]
  -[SKUISettingsDocumentViewController numberOfSectionsInTableView:]
  -[SKUISettingsDocumentViewController _reloadData]
  -[SKUISettingsDocumentViewController _tableView]
  -[SKUISettingsDocumentViewController _contentSizeCategoryDidChange:]
  -[SKUISettingsDocumentViewController tableView:heightForRowAtIndexPath:]
  -[SKUISettingsDocumentViewController tableView:heightForHeaderInSection:]
  -[SKUISettingsDocumentViewController tableView:heightForFooterInSection:]
  -[SKUISettingsDocumentViewController tableView:viewForHeaderInSection:]
  -[SKUISettingsDocumentViewController tableView:viewForFooterInSection:]
  -[SKUISettingsDocumentViewController tableView:didSelectRowAtIndexPath:]
  -[SKUISettingsDocumentViewController _invalidateLayout]
  -[SKUISettingsDocumentViewController _resourceLoader]
  -[SKUISettingsDocumentViewController _cancelButtonAction:]
  -[SKUISettingsDocumentViewController _layoutContext]
  -[SKUISettingsDocumentViewController documentDidUpdate:]
  -[SKUISettingsDocumentViewController artworkRequest:didLoadImage:]
  -[SKUISettingsDocumentViewController _textLayoutCache]
  -[SKUISettingsDocumentViewController _doneButtonAction:]
  -[SKUISettingsDocumentViewController settingsDocumentViewDidChangeTintColor:]
  -[SKUISettingsDocumentViewController initWithTemplateElement:clientContext:]
  -[SKUISettingsDocumentViewController _deselectItemsAnimated:]
  -[SKUISettingsDocumentViewController _viewForSettingsHeaderFooterDescription:]
  -[SKUISettingsDocumentViewController _showEditBarButtonItemAnimated:]
  -[SKUISettingsDocumentViewController _barButtonItemDone]
  -[SKUISettingsDocumentViewController _showEditingBarButtonItemsEnabled:animated:]
  -[SKUISettingsDocumentViewController _editButtonAction:]
  -[SKUISettingsDocumentViewController _barButtonItemEdit]
  -[SKUISettingsDocumentViewController _showBarItemLeft:right:animated:]
  -[SKUISettingsDocumentViewController _barButtonItemCancel]
  -[SKUISettingsDocumentViewController _dequeueHeaderFooterViewWithReuseIdentifier:]
  -[SKUISettingsDocumentViewController settingsEditTransactionDidCompleteTransaction:]
  -[SKUISettingsDocumentViewController settingsEditTransactionDidFailTransaction:]
  -[SKUISettingsDocumentViewController settingsEditTransactionWillBeginTransaction:]
  -[SKUISettingsDocumentViewController settingsEditTransactionWillCommitTransaction:]
  -[SKUISettingsDocumentViewController owningViewControllerForSettingsGroupsDescription:]
  -[SKUISettingsDocumentViewController settingsGroupsDescription:deletedSettingAtIndexPath:]
  -[SKUISettingsDocumentViewController settingsGroupsDescription:deletedSettingsGroupAtIndex:]
  -[SKUISettingsDocumentViewController settingsGroupsDescription:didUpdateSettingsDescription:]
  -[SKUISettingsDocumentViewController settingsGroupsDescription:dismissViewController:animated:completion:]
  -[SKUISettingsDocumentViewController settingsGroupsDescription:presentViewController:animated:completion:]
  -[SKUISettingsDocumentViewController settingsGroupsDescription:viewForSettingAtIndexPath:]
  -[SKUISettingsDocumentViewController settingsGroupsDescriptionDidUpdateValidity:]
  -[SKUISettingsDocumentViewController settingsEditTransaction:isValid:]


SKUIMediaPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIEmbeddedMediaViewDelegate>
 @property  SKUIMediaComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIMediaPageSection dealloc]
  -[SKUIMediaPageSection .cxx_destruct]
  -[SKUIMediaPageSection setSectionIndex:]
  -[SKUIMediaPageSection artworkRequest:didLoadImage:]
  -[SKUIMediaPageSection initWithPageComponent:]
  -[SKUIMediaPageSection willAppearInContext:]
  -[SKUIMediaPageSection cellForIndexPath:]
  -[SKUIMediaPageSection cellSizeForIndexPath:]
  -[SKUIMediaPageSection numberOfCells]
  -[SKUIMediaPageSection prefetchResourcesWithReason:]
  -[SKUIMediaPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIMediaPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIMediaPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIMediaPageSection collectionViewDidSelectItemAtIndexPath:]
  -[SKUIMediaPageSection contentInsetAdjustmentForCollectionView:]
  -[SKUIMediaPageSection defaultItemPinningStyle]
  -[SKUIMediaPageSection _loadImageWithReason:]
  -[SKUIMediaPageSection mediaView:playbackStateDidChange:]


SKUIStackViewItemView : UIView /usr/lib/libobjc.A.dylib
 @property  UIColor *borderColor
 @property  UIImage *image
 @property  BOOL shouldFlipImageHorizontal
 @property  BOOL shouldFlipImageVertical

  // instance methods
  -[SKUIStackViewItemView .cxx_destruct]
  -[SKUIStackViewItemView image]
  -[SKUIStackViewItemView setImage:]
  -[SKUIStackViewItemView setBorderColor:]
  -[SKUIStackViewItemView drawRect:]
  -[SKUIStackViewItemView borderColor]
  -[SKUIStackViewItemView setShouldFlipImageHorizontal:]
  -[SKUIStackViewItemView setShouldFlipImageVertical:]
  -[SKUIStackViewItemView shouldFlipImageHorizontal]
  -[SKUIStackViewItemView shouldFlipImageVertical]


SKUIRowComponent : SKUIPageComponent
 @property  SKUIRowViewElement *viewElement
 @property  UIColor *backgroundColor
 @property  NSArray *childComponents
 @property  NSArray *columnWidths
 @property  long long numberOfColumns
 @property  BOOL shouldAutoFlow

  // instance methods
  -[SKUIRowComponent .cxx_destruct]
  -[SKUIRowComponent numberOfColumns]
  -[SKUIRowComponent backgroundColor]
  -[SKUIRowComponent columnWidths]
  -[SKUIRowComponent componentType]
  -[SKUIRowComponent initWithCustomPageContext:]
  -[SKUIRowComponent initWithViewElement:]
  -[SKUIRowComponent enumerateMissingItemIdentifiersFromIndex:usingBlock:]
  -[SKUIRowComponent isMissingItemData]
  -[SKUIRowComponent metricsElementName]
  -[SKUIRowComponent _updateWithMissingItems:]
  -[SKUIRowComponent _childComponentWithContext:]
  -[SKUIRowComponent _isChildMissingItemData:]
  -[SKUIRowComponent childComponents]
  -[SKUIRowComponent shouldAutoFlow]


SKUIGroupedHeaderView : UIView /usr/lib/libobjc.A.dylib
 @property  BOOL hasTopBorder
 @property  BOOL hasBottomBorder
 @property  NSString *title

  // instance methods
  -[SKUIGroupedHeaderView .cxx_destruct]
  -[SKUIGroupedHeaderView title]
  -[SKUIGroupedHeaderView setTitle:]
  -[SKUIGroupedHeaderView initWithFrame:]
  -[SKUIGroupedHeaderView sizeThatFits:]
  -[SKUIGroupedHeaderView layoutSubviews]
  -[SKUIGroupedHeaderView hasTopBorder]
  -[SKUIGroupedHeaderView setHasTopBorder:]
  -[SKUIGroupedHeaderView hasBottomBorder]
  -[SKUIGroupedHeaderView setHasBottomBorder:]


SKUIRowSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIEmbeddedMediaViewDelegate, SKUIItemStateCenterObserver, SKUIMissingItemDelegate, SKUIProductPageOverlayDelegate>
 @property  SKUIRowComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRowSection dealloc]
  -[SKUIRowSection .cxx_destruct]
  -[SKUIRowSection itemStateCenter:itemStatesChanged:]
  -[SKUIRowSection itemStateCenterRestrictionsChanged:]
  -[SKUIRowSection artworkRequest:didLoadImage:]
  -[SKUIRowSection initWithPageComponent:]
  -[SKUIRowSection backgroundColorForIndexPath:]
  -[SKUIRowSection collectionViewWillApplyLayoutAttributes:]
  -[SKUIRowSection invalidateCachedLayoutInformation]
  -[SKUIRowSection willAppearInContext:]
  -[SKUIRowSection willHideInContext:]
  -[SKUIRowSection cellForIndexPath:]
  -[SKUIRowSection cellSizeForIndexPath:]
  -[SKUIRowSection numberOfCells]
  -[SKUIRowSection prefetchResourcesWithReason:]
  -[SKUIRowSection addImpressionsForIndexPath:toSession:]
  -[SKUIRowSection collectionViewDidSelectItemAtIndexPath:]
  -[SKUIRowSection collectionViewDidConfirmItemOfferAtIndexPath:]
  -[SKUIRowSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIRowSection productPageOverlay:flipSourceViewToDismissItem:]
  -[SKUIRowSection productPageOverlay:flipSourceViewToPresentItem:]
  -[SKUIRowSection productPageOverlayDidDismiss:]
  -[SKUIRowSection _interColumnSpacing]
  -[SKUIRowSection clickEventWithItem:elementName:index:]
  -[SKUIRowSection itemOfferClickEventWithItem:elementName:index:]
  -[SKUIRowSection _missingItemLoader]
  -[SKUIRowSection missingItemLoader:didLoadItems:invalidItemIdentifiers:]
  -[SKUIRowSection mediaView:playbackStateDidChange:]
  -[SKUIRowSection _reloadEditorialLockupCell:forComponent:columnIndex:]
  -[SKUIRowSection _reloadLockupCell:forComponent:columnIndex:]
  -[SKUIRowSection _reloadEditorialCell:forComponent:columnIndex:]
  -[SKUIRowSection _columnViews]
  -[SKUIRowSection _edgeInsetsForColumnIndex:]
  -[SKUIRowSection _loadImagesForGalleryComponent:columnIndex:]
  -[SKUIRowSection _reloadView:forMediaComponent:columnIndex:]
  -[SKUIRowSection _heightForComponent:columnIndex:rowWidth:]
  -[SKUIRowSection _cellContentHeightForRowWidth:]
  -[SKUIRowSection _columnWidthForColumnIndex:rowWidth:]
  -[SKUIRowSection _setPositionForClickEvent:elementIndex:]
  -[SKUIRowSection _expandEditorialComponent:columnIndex:]
  -[SKUIRowSection _selectGalleryComponent:columnIndex:]
  -[SKUIRowSection _selectLockupComponent:columnIndex:]
  -[SKUIRowSection _selectMediaComponent:columnIndex:]
  -[SKUIRowSection _editorialLayoutForEditorial:columnIndex:]
  -[SKUIRowSection _editorialLayoutForLockup:columnIndex:]
  -[SKUIRowSection _enumerateLockupsWithBlock:]
  -[SKUIRowSection _popSourceViewForOverlayController:]
  -[SKUIRowSection _overlaySourceCell]
  -[SKUIRowSection _viewControllerForCountdownComponent:]
  -[SKUIRowSection _viewControllerForGalleryComponent:]
  -[SKUIRowSection _newViewWithMediaComponent:]
  -[SKUIRowSection _lockupStyleForComponent:columnIndex:]
  -[SKUIRowSection _heightForCountdownComponent:columnIndex:rowWidth:]
  -[SKUIRowSection _heightForEditorialComponent:columnIndex:rowWidth:]
  -[SKUIRowSection _heightForGalleryComponent:columnIndex:rowWidth:]
  -[SKUIRowSection _heightForLockupComponent:columnIndex:rowWidth:]
  -[SKUIRowSection _heightForMediaComponent:columnIndex:rowWidth:]
  -[SKUIRowSection _heightForArtwork:columnIndex:rowWidth:]
  -[SKUIRowSection _lockupPlaceholderForComponent:]
  -[SKUIRowSection _imageConsumerWithItem:lockupSize:]
  -[SKUIRowSection _lockupImageForComponent:]
  -[SKUIRowSection _newSizeToFitArtworkRequestWithArtwork:columnIndex:]


SKUIShelfMenuBarViewElement : SKUIShelfViewElement <_SKUIMenuBarViewElementConfigurationReloadDelegate, SKUIMenuBarViewElement>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SKUIMenuBarViewElementConfiguration *configuration

  // class methods
  +[SKUIShelfMenuBarViewElement supportedFeatures]

  // instance methods
  -[SKUIShelfMenuBarViewElement .cxx_destruct]
  -[SKUIShelfMenuBarViewElement setConfiguration:]
  -[SKUIShelfMenuBarViewElement configuration]
  -[SKUIShelfMenuBarViewElement elementType]
  -[SKUIShelfMenuBarViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIShelfMenuBarViewElement applyUpdatesWithElement:]
  -[SKUIShelfMenuBarViewElement enumerateChildrenUsingBlock:]
  -[SKUIShelfMenuBarViewElement _menuBarViewElementConfigurationRequestsReload:]
  -[SKUIShelfMenuBarViewElement _reloadMenuItems]
  -[SKUIShelfMenuBarViewElement regularViewElementForMenuItemAtIndex:]
  -[SKUIShelfMenuBarViewElement focusedViewElementForMenuItemAtIndex:]


SKUITextBoxView : UIControl /usr/lib/libobjc.A.dylib
 @property  SKUIColorScheme *colorScheme
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  {UIEdgeInsets=dddd} titleInsets
 @property  long long numberOfVisibleLines
 @property  long long truncationStyle
 @property  NSString *moreButtonTitle
 @property  NSString *subtitle
 @property  double rating
 @property  NSString *ratingText
 @property  BOOL textIsNaturallyRTL

  // instance methods
  -[SKUITextBoxView dealloc]
  -[SKUITextBoxView .cxx_destruct]
  -[SKUITextBoxView reset]
  -[SKUITextBoxView setTitle:]
  -[SKUITextBoxView subtitle]
  -[SKUITextBoxView setBackgroundColor:]
  -[SKUITextBoxView setFrame:]
  -[SKUITextBoxView initWithFrame:]
  -[SKUITextBoxView sizeThatFits:]
  -[SKUITextBoxView layoutSubviews]
  -[SKUITextBoxView setSubtitle:]
  -[SKUITextBoxView contentInsets]
  -[SKUITextBoxView drawRect:]
  -[SKUITextBoxView setContentInsets:]
  -[SKUITextBoxView rating]
  -[SKUITextBoxView setRating:]
  -[SKUITextBoxView setRatingText:]
  -[SKUITextBoxView ratingText]
  -[SKUITextBoxView titleInsets]
  -[SKUITextBoxView setTitleInsets:]
  -[SKUITextBoxView colorScheme]
  -[SKUITextBoxView setColorScheme:]
  -[SKUITextBoxView _textFrame]
  -[SKUITextBoxView setMoreButtonTitle:]
  -[SKUITextBoxView setNumberOfVisibleLines:]
  -[SKUITextBoxView setFixedWidthTextFrame:]
  -[SKUITextBoxView setFixedWidthTitleTextFrame:]
  -[SKUITextBoxView moreButtonTitle]
  -[SKUITextBoxView _moreButtonLabel]
  -[SKUITextBoxView _textSizeToFitSize:]
  -[SKUITextBoxView setTextFrameWithText:]
  -[SKUITextBoxView setTruncationStyle:]
  -[SKUITextBoxView numberOfVisibleLines]
  -[SKUITextBoxView truncationStyle]
  -[SKUITextBoxView textIsNaturallyRTL]
  -[SKUITextBoxView setTextIsNaturallyRTL:]


SKUIEditorialLinkView : UIView /usr/lib/libobjc.A.dylib
 @property  <SKUIEditorialLinkViewDelegate> *delegate
 @property  long long horizontalAlignment
 @property  SKUIEditorialLinkLayout *linkLayout

  // instance methods
  -[SKUIEditorialLinkView dealloc]
  -[SKUIEditorialLinkView delegate]
  -[SKUIEditorialLinkView setDelegate:]
  -[SKUIEditorialLinkView .cxx_destruct]
  -[SKUIEditorialLinkView setBackgroundColor:]
  -[SKUIEditorialLinkView initWithFrame:]
  -[SKUIEditorialLinkView sizeThatFits:]
  -[SKUIEditorialLinkView layoutSubviews]
  -[SKUIEditorialLinkView tintColorDidChange]
  -[SKUIEditorialLinkView _newButton]
  -[SKUIEditorialLinkView horizontalAlignment]
  -[SKUIEditorialLinkView setHorizontalAlignment:]
  -[SKUIEditorialLinkView setColoringWithColorScheme:]
  -[SKUIEditorialLinkView _linkButtonAction:]
  -[SKUIEditorialLinkView setLinkLayout:]
  -[SKUIEditorialLinkView linkLayout]


SKUIMenuBarTemplateShelfPageSectionConfiguration : SKUIShelfPageSectionConfiguration
  // instance methods
  -[SKUIMenuBarTemplateShelfPageSectionConfiguration init]
  -[SKUIMenuBarTemplateShelfPageSectionConfiguration .cxx_destruct]
  -[SKUIMenuBarTemplateShelfPageSectionConfiguration scrollViewDidScroll:]
  -[SKUIMenuBarTemplateShelfPageSectionConfiguration numberOfIterations]
  -[SKUIMenuBarTemplateShelfPageSectionConfiguration cellForShelfViewElement:indexPath:]
  -[SKUIMenuBarTemplateShelfPageSectionConfiguration cellSizeForShelfViewElement:indexPath:numberOfShelfItems:]
  -[SKUIMenuBarTemplateShelfPageSectionConfiguration collectionViewWillApplyLayoutAttributes:]
  -[SKUIMenuBarTemplateShelfPageSectionConfiguration numberOfSectionCells]
  -[SKUIMenuBarTemplateShelfPageSectionConfiguration registerReusableClassesForCollectionView:]
  -[SKUIMenuBarTemplateShelfPageSectionConfiguration reloadShelfLayoutDataForShelfViewElement:withShelfItemViewElements:requestCellLayouts:numberOfShelfItems:]
  -[SKUIMenuBarTemplateShelfPageSectionConfiguration effectiveViewElementForShelfItemViewElement:]
  -[SKUIMenuBarTemplateShelfPageSectionConfiguration initWithNumberOfIterations:]
  -[SKUIMenuBarTemplateShelfPageSectionConfiguration _focusedViewElement]


SKUIEditorialPageSection : SKUIStorePageSection
 @property  SKUIEditorialComponent *pageComponent

  // instance methods
  -[SKUIEditorialPageSection .cxx_destruct]
  -[SKUIEditorialPageSection _colorScheme]
  -[SKUIEditorialPageSection initWithPageComponent:]
  -[SKUIEditorialPageSection applyUpdateType:]
  -[SKUIEditorialPageSection willAppearInContext:]
  -[SKUIEditorialPageSection cellForIndexPath:]
  -[SKUIEditorialPageSection cellSizeForIndexPath:]
  -[SKUIEditorialPageSection numberOfCells]
  -[SKUIEditorialPageSection reloadCellWithIndexPath:reason:]
  -[SKUIEditorialPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIEditorialPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIEditorialPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIEditorialPageSection collectionViewDidSelectItemAtIndexPath:]
  -[SKUIEditorialPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIEditorialPageSection _editorialLayout]


SKUIMetricsUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SKUIMetricsUtilities shouldLogTimingMetrics]
  +[SKUIMetricsUtilities showEventNotifications]
  +[SKUIMetricsUtilities trackAllEvents]
  +[SKUIMetricsUtilities timeIntervalFromJSTime:]
  +[SKUIMetricsUtilities jsTimeFromTimeInterval:]
  +[SKUIMetricsUtilities newErrorPageEvent]
  +[SKUIMetricsUtilities newErrorRetryClickEvent]


SKUIEditorialLayout : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIEditorialComponent *editorialComponent
 @property  SKUILayoutCache *layoutCache

  // instance methods
  -[SKUIEditorialLayout .cxx_destruct]
  -[SKUIEditorialLayout layoutCache]
  -[SKUIEditorialLayout enqueueLayoutRequests]
  -[SKUIEditorialLayout initWithEditorial:layoutCache:]
  -[SKUIEditorialLayout setLayoutWidth:forOrientation:]
  -[SKUIEditorialLayout bodyTextLayoutForOrientation:]
  -[SKUIEditorialLayout layoutHeightForOrientation:expanded:]
  -[SKUIEditorialLayout titleTextLayoutForOrientation:]
  -[SKUIEditorialLayout linkLayoutForOrientation:]
  -[SKUIEditorialLayout _bodyTextLayoutRequestWithTotalWidth:]
  -[SKUIEditorialLayout _titleTextLayoutRequestWithTotalWidth:]
  -[SKUIEditorialLayout _linkLayoutRequestWithTotalWidth:]
  -[SKUIEditorialLayout editorialComponent]


SKUIImageGridViewReuseView : SKUIViewReuseView <SKUIViewElementView>
 @property  NSArray *imageViews
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIImageGridViewReuseView prefetchResourcesForViewElement:reason:context:]
  +[SKUIImageGridViewReuseView preferredSizeForViewElement:context:]
  +[SKUIImageGridViewReuseView requestLayoutForViewElement:width:context:]
  +[SKUIImageGridViewReuseView sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIImageGridViewReuseView init]
  -[SKUIImageGridViewReuseView .cxx_destruct]
  -[SKUIImageGridViewReuseView setContentInset:]
  -[SKUIImageGridViewReuseView setImageViews:]
  -[SKUIImageGridViewReuseView imageViews]
  -[SKUIImageGridViewReuseView reloadWithViewElement:width:context:]
  -[SKUIImageGridViewReuseView setImage:forArtworkRequest:context:]
  -[SKUIImageGridViewReuseView updateWithItemState:context:animated:]
  -[SKUIImageGridViewReuseView viewForElementIdentifier:]


SKUIImageGridView : UIView /usr/lib/libobjc.A.dylib <SKUIViewElementView>
 @property  long long columnCount
 @property  {UIEdgeInsets=dddd} contentInset
 @property  NSArray *imageViews
 @property  {CGSize=dd} size
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIImageGridView prefetchResourcesForViewElement:reason:context:]
  +[SKUIImageGridView preferredSizeForViewElement:context:]
  +[SKUIImageGridView requestLayoutForViewElement:width:context:]
  +[SKUIImageGridView sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIImageGridView .cxx_destruct]
  -[SKUIImageGridView size]
  -[SKUIImageGridView columnCount]
  -[SKUIImageGridView setSize:]
  -[SKUIImageGridView sizeThatFits:]
  -[SKUIImageGridView layoutSubviews]
  -[SKUIImageGridView setContentInset:]
  -[SKUIImageGridView contentInset]
  -[SKUIImageGridView setImageViews:]
  -[SKUIImageGridView imageViews]
  -[SKUIImageGridView setColumnCount:]
  -[SKUIImageGridView reloadWithViewElement:width:context:]
  -[SKUIImageGridView setImage:forArtworkRequest:context:]
  -[SKUIImageGridView updateWithItemState:context:animated:]
  -[SKUIImageGridView viewForElementIdentifier:]


SKUISplitViewTemplateElement : SKUIViewElement
 @property  long long preferredDisplayMode
 @property  SKUIJSDOMFeatureNavigationDocument *leftNavigationDocument
 @property  SKUIJSDOMFeatureNavigationDocument *rightNavigationDocument
 @property  SKUIViewElement *leftSplitElement
 @property  SKUIViewElement *rightSplitElement
 @property  BOOL usesInlineSplitContent

  // class methods
  +[SKUISplitViewTemplateElement supportedFeatures]

  // instance methods
  -[SKUISplitViewTemplateElement .cxx_destruct]
  -[SKUISplitViewTemplateElement preferredDisplayMode]
  -[SKUISplitViewTemplateElement initWithDOMElement:parent:elementFactory:]
  -[SKUISplitViewTemplateElement applyUpdatesWithElement:]
  -[SKUISplitViewTemplateElement leftNavigationDocument]
  -[SKUISplitViewTemplateElement rightNavigationDocument]
  -[SKUISplitViewTemplateElement _splitElementForIndex:]
  -[SKUISplitViewTemplateElement leftSplitElement]
  -[SKUISplitViewTemplateElement rightSplitElement]
  -[SKUISplitViewTemplateElement usesInlineSplitContent]


SKUILockupComponent : SKUIPageComponent
 @property  SKUILockupViewElement *viewElement
 @property  BOOL _needsItemData
 @property  SKUIEditorialComponent *editorial
 @property  SKUIItem *item
 @property  long long itemIdentifier
 @property  {SKUILockupStyle=qqQ} lockupStyle

  // instance methods
  -[SKUILockupComponent .cxx_destruct]
  -[SKUILockupComponent item]
  -[SKUILockupComponent itemIdentifier]
  -[SKUILockupComponent componentType]
  -[SKUILockupComponent initWithCustomPageContext:]
  -[SKUILockupComponent initWithViewElement:]
  -[SKUILockupComponent _needsItemData]
  -[SKUILockupComponent initWithItem:style:]
  -[SKUILockupComponent editorial]
  -[SKUILockupComponent _setItem:]
  -[SKUILockupComponent lockupStyle]
  -[SKUILockupComponent _setLockupStyle:]
  -[SKUILockupComponent initWithItemIdentifier:style:]


SKUIBrowseHeaderViewElement : SKUIHeaderViewElement
  // instance methods
  -[SKUIBrowseHeaderViewElement pageComponentType]


SKUICellLayout : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIClientContext *clientContext
 @property  UIView *contentView
 @property  UIView *parentCellView

  // instance methods
  -[SKUICellLayout .cxx_destruct]
  -[SKUICellLayout prepareForReuse]
  -[SKUICellLayout setBackgroundColor:]
  -[SKUICellLayout contentView]
  -[SKUICellLayout setNeedsLayout]
  -[SKUICellLayout layoutSubviews]
  -[SKUICellLayout setHighlighted:]
  -[SKUICellLayout setSelected:]
  -[SKUICellLayout initWithParentView:]
  -[SKUICellLayout initWithTableViewCell:]
  -[SKUICellLayout resetLayout]
  -[SKUICellLayout clientContext]
  -[SKUICellLayout setClientContext:]
  -[SKUICellLayout setColoringWithColorScheme:]
  -[SKUICellLayout initWithCollectionViewCell:]
  -[SKUICellLayout parentCellView]


SKUILink : NSObject /usr/lib/libc++.1.dylib <SSMetricsEventFieldProvider>
 @property  BOOL actionable
 @property  SKUIItem *item
 @property  NSNumber *itemIdentifier
 @property  NSDictionary *linkDictionary
 @property  NSString *targetString
 @property  NSString *title
 @property  NSURL *URL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUILink initWithURL:]
  -[SKUILink .cxx_destruct]
  -[SKUILink item]
  -[SKUILink itemIdentifier]
  -[SKUILink URL]
  -[SKUILink title]
  -[SKUILink isActionable]
  -[SKUILink valueForMetricsField:]
  -[SKUILink linkDictionary]
  -[SKUILink targetString]
  -[SKUILink _setItem:]
  -[SKUILink initWithComponentContext:]
  -[SKUILink initWithURL:title:targetString:]
  -[SKUILink initWithLinkDictionary:]


SKUISettingsGroupController : NSObject /usr/lib/libc++.1.dylib
 @property  <SKUISettingsGroupControllerDelegate> *delegate
 @property  NSMutableArray *settingDescriptions
 @property  SKUISettingsGroupDescription *settingsGroupDescription

  // instance methods
  -[SKUISettingsGroupController delegate]
  -[SKUISettingsGroupController setDelegate:]
  -[SKUISettingsGroupController .cxx_destruct]
  -[SKUISettingsGroupController attachSettingDescription:]
  -[SKUISettingsGroupController settingDescriptions]
  -[SKUISettingsGroupController _viewForSettingDescription:]
  -[SKUISettingsGroupController settingsGroupDescription]
  -[SKUISettingsGroupController _reloadSettingDescription:]
  -[SKUISettingsGroupController setSettingDescriptions:]
  -[SKUISettingsGroupController setSettingsGroupDescription:]


SKUISplitViewDocumentViewController : SKUIViewController <SKUINavigationDocumentDelegate, SKUIDocumentViewController>
 @property  SKUINavigationDocumentController *leftNavigationDocumentController
 @property  SKUINavigationDocumentController *rightNavigationDocumentController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUISplitViewDocumentViewController _shouldForwardViewWillTransitionToSize]

  // instance methods
  -[SKUISplitViewDocumentViewController dealloc]
  -[SKUISplitViewDocumentViewController .cxx_destruct]
  -[SKUISplitViewDocumentViewController loadView]
  -[SKUISplitViewDocumentViewController _defaultBackgroundColor]
  -[SKUISplitViewDocumentViewController documentDidUpdate:]
  -[SKUISplitViewDocumentViewController leftBarButtonItemsForDocument:]
  -[SKUISplitViewDocumentViewController delayPresentationIfNeededForParentViewController:]
  -[SKUISplitViewDocumentViewController skui_viewWillAppear:]
  -[SKUISplitViewDocumentViewController initWithTemplateElement:clientContext:]
  -[SKUISplitViewDocumentViewController _reloadSplitViewControllers]
  -[SKUISplitViewDocumentViewController _isFullyPopulated]
  -[SKUISplitViewDocumentViewController _skui_endDelayingPresentation]
  -[SKUISplitViewDocumentViewController navigationDocumentStackDidChange:]
  -[SKUISplitViewDocumentViewController leftNavigationDocumentController]
  -[SKUISplitViewDocumentViewController setLeftNavigationDocumentController:]
  -[SKUISplitViewDocumentViewController rightNavigationDocumentController]
  -[SKUISplitViewDocumentViewController setRightNavigationDocumentController:]


_SKUISplitViewDocumentSplitViewController : UISplitViewController /usr/lib/libobjc.A.dylib
  // instance methods
  -[_SKUISplitViewDocumentSplitViewController sizeForChildContentContainer:withParentContainerSize:]
  -[_SKUISplitViewDocumentSplitViewController _skui_primaryColumnWidthForWidth:]


SKUICollectionViewCell : UICollectionViewCell /usr/lib/libobjc.A.dylib
 @property  long long separatorStyle
 @property  BOOL showsCellSeparators
 @property  UIColor *separatorColor
 @property  {UIEdgeInsets=dddd} separatorWidths
 @property  {UIEdgeInsets=dddd} separatorInsets

  // instance methods
  -[SKUICollectionViewCell .cxx_destruct]
  -[SKUICollectionViewCell setBackgroundColor:]
  -[SKUICollectionViewCell initWithFrame:]
  -[SKUICollectionViewCell layoutSubviews]
  -[SKUICollectionViewCell setHighlighted:]
  -[SKUICollectionViewCell setSelected:]
  -[SKUICollectionViewCell separatorColor]
  -[SKUICollectionViewCell setSeparatorColor:]
  -[SKUICollectionViewCell separatorStyle]
  -[SKUICollectionViewCell setSeparatorStyle:]
  -[SKUICollectionViewCell applyLayoutAttributes:]
  -[SKUICollectionViewCell _setPosition:]
  -[SKUICollectionViewCell _showsBottomBorder]
  -[SKUICollectionViewCell _showsLeftBorder]
  -[SKUICollectionViewCell _showsRightBorder]
  -[SKUICollectionViewCell _showsTopBorder]
  -[SKUICollectionViewCell _updateBorderVisibility]
  -[SKUICollectionViewCell setSeparatorWidths:]
  -[SKUICollectionViewCell setShowsCellSeparators:]
  -[SKUICollectionViewCell showsCellSeparators]
  -[SKUICollectionViewCell separatorWidths]
  -[SKUICollectionViewCell separatorInsets]
  -[SKUICollectionViewCell setSeparatorInsets:]


SKUIToolbarViewElement : SKUIViewElement

SKUIShelfCollectionViewLayout : UICollectionViewLayout /usr/lib/libobjc.A.dylib <SKUIShelfCollectionViewLayout>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SKUIShelfLayoutData *layoutData

  // class methods
  +[SKUIShelfCollectionViewLayout layoutAttributesClass]
  +[SKUIShelfCollectionViewLayout snapToBoundariesDecelerationRate]
  +[SKUIShelfCollectionViewLayout collectionViewCanClipToBounds]

  // instance methods
  -[SKUIShelfCollectionViewLayout .cxx_destruct]
  -[SKUIShelfCollectionViewLayout layoutAttributesForElementsInRect:]
  -[SKUIShelfCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[SKUIShelfCollectionViewLayout collectionViewContentSize]
  -[SKUIShelfCollectionViewLayout _shouldScrollToContentBeginningInRightToLeft]
  -[SKUIShelfCollectionViewLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]
  -[SKUIShelfCollectionViewLayout layoutData]
  -[SKUIShelfCollectionViewLayout setLayoutData:]


SKUIDividerView : UIView /usr/lib/libobjc.A.dylib
 @property  UIColor *dividerColor
 @property  long long dividerOrientation
 @property  double dividerSize

  // instance methods
  -[SKUIDividerView setBackgroundColor:]
  -[SKUIDividerView sizeThatFits:]
  -[SKUIDividerView dividerColor]
  -[SKUIDividerView setDividerColor:]
  -[SKUIDividerView setDividerOrientation:]
  -[SKUIDividerView setDividerSize:]
  -[SKUIDividerView dividerOrientation]
  -[SKUIDividerView dividerSize]


SKUIHorizontalListView : SKUIViewReuseView <SKUIMenuPopoverDelegate, SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIHorizontalListView prefetchResourcesForViewElement:reason:context:]
  +[SKUIHorizontalListView preferredSizeForViewElement:context:]
  +[SKUIHorizontalListView requestLayoutForViewElement:width:context:]
  +[SKUIHorizontalListView sizeThatFitsWidth:viewElement:context:]
  +[SKUIHorizontalListView _attributedStringForButton:context:]
  +[SKUIHorizontalListView _attributedStringForLabel:context:]
  +[SKUIHorizontalListView _sizeForViewElement:width:context:]
  +[SKUIHorizontalListView _attributedStringForMenuItem:context:]
  +[SKUIHorizontalListView _linesWithViewElement:width:context:]
  +[SKUIHorizontalListView _elementSpacingForViewElement:]
  +[SKUIHorizontalListView _lineSpacingForLineElements:]
  +[SKUIHorizontalListView _attributedStringForButtonText:type:style:context:]
  +[SKUIHorizontalListView _lineSpacingForViewElement:]

  // instance methods
  -[SKUIHorizontalListView dealloc]
  -[SKUIHorizontalListView .cxx_destruct]
  -[SKUIHorizontalListView initWithFrame:]
  -[SKUIHorizontalListView sizeThatFits:]
  -[SKUIHorizontalListView layoutSubviews]
  -[SKUIHorizontalListView pointInside:withEvent:]
  -[SKUIHorizontalListView setContentInset:]
  -[SKUIHorizontalListView hitRect]
  -[SKUIHorizontalListView reloadWithViewElement:width:context:]
  -[SKUIHorizontalListView setImage:forArtworkRequest:context:]
  -[SKUIHorizontalListView updateWithItemState:context:animated:]
  -[SKUIHorizontalListView viewForElementIdentifier:]
  -[SKUIHorizontalListView _buttonAction:]
  -[SKUIHorizontalListView _imageTapAction:]
  -[SKUIHorizontalListView _menuButtonAction:]
  -[SKUIHorizontalListView _destroyMenuPopover]
  -[SKUIHorizontalListView menuPopoverDidCancel:]
  -[SKUIHorizontalListView menuPopover:didSelectMenuItemAtIndex:]
  -[SKUIHorizontalListView menuPopover:willRepositionToRect:inView:]
  -[SKUIHorizontalListView _viewElementForView:]


SKUISimpleContainerViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  UIViewController *contentViewController

  // class methods
  +[SKUISimpleContainerViewController _shouldForwardViewWillTransitionToSize]

  // instance methods
  -[SKUISimpleContainerViewController .cxx_destruct]
  -[SKUISimpleContainerViewController loadView]
  -[SKUISimpleContainerViewController setContentViewController:]
  -[SKUISimpleContainerViewController setPreferredContentSize:]
  -[SKUISimpleContainerViewController contentViewController]


SKUIGridViewGradientDecorationView : UICollectionReusableView /usr/lib/libobjc.A.dylib
 @property  UIView *backgroundView

  // instance methods
  -[SKUIGridViewGradientDecorationView .cxx_destruct]
  -[SKUIGridViewGradientDecorationView initWithFrame:]
  -[SKUIGridViewGradientDecorationView backgroundView]
  -[SKUIGridViewGradientDecorationView layoutSubviews]
  -[SKUIGridViewGradientDecorationView applyLayoutAttributes:]
  -[SKUIGridViewGradientDecorationView _createGradient:withGradientType:]


SKUIGridViewGradientLayoutAttributes : UICollectionViewLayoutAttributes /usr/lib/libobjc.A.dylib <NSCopying>
 @property  IKColor *gradientColor

  // instance methods
  -[SKUIGridViewGradientLayoutAttributes isEqual:]
  -[SKUIGridViewGradientLayoutAttributes copyWithZone:]
  -[SKUIGridViewGradientLayoutAttributes .cxx_destruct]
  -[SKUIGridViewGradientLayoutAttributes gradientColor]
  -[SKUIGridViewGradientLayoutAttributes setGradientColor:]


SKUIGridViewGradientDecorationBackgroundView : UIView /usr/lib/libobjc.A.dylib
 @property  CAGradientLayer *layer

  // class methods
  +[SKUIGridViewGradientDecorationBackgroundView layerClass]


SKUIStackListCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
 @property  unsigned long alignment
 @property  NSMapTable *listViews
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIStackListCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIStackListCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIStackListCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIStackListCollectionViewCell sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIStackListCollectionViewCell .cxx_destruct]
  -[SKUIStackListCollectionViewCell alignment]
  -[SKUIStackListCollectionViewCell setAlignment:]
  -[SKUIStackListCollectionViewCell initWithFrame:]
  -[SKUIStackListCollectionViewCell sizeThatFits:]
  -[SKUIStackListCollectionViewCell layoutSubviews]
  -[SKUIStackListCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIStackListCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIStackListCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIStackListCollectionViewCell viewForElementIdentifier:]
  -[SKUIStackListCollectionViewCell listViews]
  -[SKUIStackListCollectionViewCell layoutSubviewsWithFlowLayout:size:]
  -[SKUIStackListCollectionViewCell layoutSubviewsWithFixedWidth:size:]
  -[SKUIStackListCollectionViewCell _isRightAligned]
  -[SKUIStackListCollectionViewCell setListViews:]


SKUIDynamicShelfMenuBarViewElement : SKUIShelfMenuBarViewElement <SKUIDynamicShelfViewElement>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SKUIViewElement *cellTemplateViewElement
 @property  <SKUIEntityProviding> *entityProvider

  // instance methods
  -[SKUIDynamicShelfMenuBarViewElement .cxx_destruct]
  -[SKUIDynamicShelfMenuBarViewElement applyUpdatesWithElement:]
  -[SKUIDynamicShelfMenuBarViewElement cellTemplateViewElement]
  -[SKUIDynamicShelfMenuBarViewElement isDynamicContainer]
  -[SKUIDynamicShelfMenuBarViewElement setShelfItemViewElementValidator:]


SKUICGRectHelpers : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SKUICGRectHelpers rect:withFlippedOriginXRelativeTo:]


SKUIItemCellLayout : SKUICellLayout <SKUIItemOfferButtonDelegate>
 @property  UIImage *iconImage
 @property  BOOL iconImageHidden
 @property  BOOL displaysItemOfferButton
 @property  BOOL restricted
 @property  SKUIItemOffer *itemOffer
 @property  SKUIItemOfferButtonAppearance *itemOfferButtonAppearance
 @property  NSString *itemOfferNoticeString
 @property  SKUIItemState *itemState
 @property  BOOL highlighted
 @property  BOOL selected
 @property  UIView *iconImageView
 @property  SKUIItemOfferButton *itemOfferButton
 @property  UILabel *itemOfferNoticeLabel
 @property  UIView *removeControlView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIItemCellLayout dealloc]
  -[SKUIItemCellLayout .cxx_destruct]
  -[SKUIItemCellLayout prepareForReuse]
  -[SKUIItemCellLayout isRestricted]
  -[SKUIItemCellLayout isSelected]
  -[SKUIItemCellLayout setBackgroundColor:]
  -[SKUIItemCellLayout isHighlighted]
  -[SKUIItemCellLayout setHighlighted:]
  -[SKUIItemCellLayout setSelected:]
  -[SKUIItemCellLayout iconImageView]
  -[SKUIItemCellLayout setItemState:]
  -[SKUIItemCellLayout itemState]
  -[SKUIItemCellLayout resetLayout]
  -[SKUIItemCellLayout iconImage]
  -[SKUIItemCellLayout setRestricted:]
  -[SKUIItemCellLayout setIconImage:]
  -[SKUIItemCellLayout itemOffer]
  -[SKUIItemCellLayout itemOfferButton]
  -[SKUIItemCellLayout setItemOffer:]
  -[SKUIItemCellLayout itemOfferButtonWillAnimateTransition:]
  -[SKUIItemCellLayout _itemOfferConfirmAction:]
  -[SKUIItemCellLayout setItemState:animated:]
  -[SKUIItemCellLayout itemOfferButtonAppearance]
  -[SKUIItemCellLayout setIconImageHidden:]
  -[SKUIItemCellLayout setItemOfferButtonAppearance:]
  -[SKUIItemCellLayout _reloadItemOfferButton:]
  -[SKUIItemCellLayout isIconImageHidden]
  -[SKUIItemCellLayout _reloadItemOfferVisibility]
  -[SKUIItemCellLayout _canShowItemOfferNotice]
  -[SKUIItemCellLayout layoutForItemOfferChange]
  -[SKUIItemCellLayout _getParentTableView:collectionView:]
  -[SKUIItemCellLayout _parentCollectionViewCell]
  -[SKUIItemCellLayout displaysItemOfferButton]
  -[SKUIItemCellLayout _cancelItemOfferConfirmationAction:]
  -[SKUIItemCellLayout _showItemOfferConfirmationAction:]
  -[SKUIItemCellLayout itemOfferNoticeString]
  -[SKUIItemCellLayout setDisplaysItemOfferButton:]
  -[SKUIItemCellLayout setItemOfferNoticeString:]
  -[SKUIItemCellLayout _useCloudButtonForItemState:]
  -[SKUIItemCellLayout itemOfferNoticeLabel]
  -[SKUIItemCellLayout removeControlView]


SKUIItemCollectionViewCell : SKUICollectionViewCell <SKUICellLayoutParentView>
 @property  SKUIItemCellLayout *layout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIItemCollectionViewCell prepareForReuse]
  -[SKUIItemCollectionViewCell setBounds:]
  -[SKUIItemCollectionViewCell layout]
  -[SKUIItemCollectionViewCell setFrame:]
  -[SKUIItemCollectionViewCell layoutSubviews]
  -[SKUIItemCollectionViewCell setHighlighted:]
  -[SKUIItemCollectionViewCell setSelected:]
  -[SKUIItemCollectionViewCell applyLayoutAttributes:]
  -[SKUIItemCollectionViewCell configureForItem:clientContext:]
  -[SKUIItemCollectionViewCell setCellLayoutNeedsLayout]


SKUIStackedBarCell : UIButton /usr/lib/libobjc.A.dylib
 @property  BOOL expanded
 @property  UIButton *backButton

  // instance methods
  -[SKUIStackedBarCell .cxx_destruct]
  -[SKUIStackedBarCell initWithFrame:]
  -[SKUIStackedBarCell setTitle:forState:]
  -[SKUIStackedBarCell sizeThatFits:]
  -[SKUIStackedBarCell layoutSubviews]
  -[SKUIStackedBarCell setHighlighted:]
  -[SKUIStackedBarCell backButton]
  -[SKUIStackedBarCell setExpanded:]
  -[SKUIStackedBarCell expanded]


SKUIStackedBar : UIView /usr/lib/libobjc.A.dylib
 @property  <SKUIStackedBarDelegate> *delegate
 @property  NSArray *items
 @property  BOOL alwaysShowsBackButton
 @property  BOOL hidesStatusBar
 @property  BOOL lastItemExpanded
 @property  BOOL splitViewStyle
 @property  BOOL zeroHeightWhenFirstChildExpanded
 @property  double offset

  // instance methods
  -[SKUIStackedBar delegate]
  -[SKUIStackedBar setDelegate:]
  -[SKUIStackedBar .cxx_destruct]
  -[SKUIStackedBar setOffset:]
  -[SKUIStackedBar offset]
  -[SKUIStackedBar items]
  -[SKUIStackedBar setItems:]
  -[SKUIStackedBar initWithFrame:]
  -[SKUIStackedBar sizeThatFits:]
  -[SKUIStackedBar layoutSubviews]
  -[SKUIStackedBar sizeToFit]
  -[SKUIStackedBar _reload]
  -[SKUIStackedBar _buttonAction:]
  -[SKUIStackedBar splitViewStyle]
  -[SKUIStackedBar setSplitViewStyle:]
  -[SKUIStackedBar setHidesStatusBar:]
  -[SKUIStackedBar setAlwaysShowsBackButton:]
  -[SKUIStackedBar setLastItemExpanded:animated:]
  -[SKUIStackedBar setLastItemExpanded:]
  -[SKUIStackedBar setZeroHeightWhenFirstChildExpanded:]
  -[SKUIStackedBar animateToFullSizeIfNecessary]
  -[SKUIStackedBar _selectItemAtIndex:]
  -[SKUIStackedBar _backAction:]
  -[SKUIStackedBar _resetNewOffset]
  -[SKUIStackedBar alwaysShowsBackButton]
  -[SKUIStackedBar lastItemExpanded]
  -[SKUIStackedBar hidesStatusBar]
  -[SKUIStackedBar zeroHeightWhenFirstChildExpanded]


SKUIJSAnalyzedImageColors : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIJSAnalyzedImageColors>
 @property  SKUIJSColor *backgroundColor
 @property  SKUIJSColor *textPrimaryColor
 @property  SKUIJSColor *textSecondaryColor
 @property  BOOL isBackgroundLight

  // instance methods
  -[SKUIJSAnalyzedImageColors .cxx_destruct]
  -[SKUIJSAnalyzedImageColors backgroundColor]
  -[SKUIJSAnalyzedImageColors textPrimaryColor]
  -[SKUIJSAnalyzedImageColors textSecondaryColor]
  -[SKUIJSAnalyzedImageColors isBackgroundLight]
  -[SKUIJSAnalyzedImageColors initWithAppContext:analyzedImageColors:]


SKUICollectionView : UICollectionView /usr/lib/libobjc.A.dylib
 @property  SKUIIndexBarControl *indexBarControl
 @property  UIRefreshControl *refreshControl
 @property  double overrideBoundsWidth

  // instance methods
  -[SKUICollectionView setDelegate:]
  -[SKUICollectionView .cxx_destruct]
  -[SKUICollectionView bounds]
  -[SKUICollectionView layoutSubviews]
  -[SKUICollectionView setContentInset:]
  -[SKUICollectionView refreshControl]
  -[SKUICollectionView collectionViewLayout]
  -[SKUICollectionView initWithFrame:collectionViewLayout:]
  -[SKUICollectionView setContentOffset:animated:]
  -[SKUICollectionView setCollectionViewLayout:animated:]
  -[SKUICollectionView setShowsHorizontalScrollIndicator:]
  -[SKUICollectionView setShowsVerticalScrollIndicator:]
  -[SKUICollectionView setRefreshControl:]
  -[SKUICollectionView setIndexBarControl:]
  -[SKUICollectionView indexBarControl]
  -[SKUICollectionView setOverrideBoundsWidth:]
  -[SKUICollectionView _updateIndexBarControlFrame]
  -[SKUICollectionView _updateShowsScrollIndicators]
  -[SKUICollectionView overrideBoundsWidth]


SKUIItemTableViewCell : SKUITableViewCell <SKUICellLayoutParentView>
 @property  SKUIItemCellLayout *layout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIItemTableViewCell prepareForReuse]
  -[SKUIItemTableViewCell layout]
  -[SKUIItemTableViewCell setBackgroundColor:]
  -[SKUIItemTableViewCell layoutSubviews]
  -[SKUIItemTableViewCell setSelected:animated:]
  -[SKUIItemTableViewCell setHighlighted:animated:]
  -[SKUIItemTableViewCell setCellLayoutNeedsLayout]
  -[SKUIItemTableViewCell configureForItem:clientContext:rowIndex:]
  -[SKUIItemTableViewCell configureForItem:rowIndex:]


SKUIImageView : UIImageView /usr/lib/libobjc.A.dylib
 @property  CAShapeLayer *layer
 @property  @? cornerPathBlock
 @property  {CGSize=dd} imageSize
 @property  UITapGestureRecognizer *tapRecognizer
 @property  UIImage *image
 @property  SKUIImagePlaceholder *placeholder

  // class methods
  +[SKUIImageView layerClass]

  // instance methods
  -[SKUIImageView .cxx_destruct]
  -[SKUIImageView setImage:]
  -[SKUIImageView setContents:]
  -[SKUIImageView sizeThatFits:]
  -[SKUIImageView layoutSubviews]
  -[SKUIImageView setPlaceholder:]
  -[SKUIImageView imageSize]
  -[SKUIImageView placeholder]
  -[SKUIImageView setImageSize:]
  -[SKUIImageView tapRecognizer]
  -[SKUIImageView cornerPathBlock]
  -[SKUIImageView setCornerPathBlock:]


SKUITableViewCell : UITableViewCell /usr/lib/libobjc.A.dylib
 @property  UIColor *bottomBorderColor
 @property  UIColor *topBorderColor
 @property  double borderPaddingLeft
 @property  {UIEdgeInsets=dddd} textLabelInsets

  // instance methods
  -[SKUITableViewCell .cxx_destruct]
  -[SKUITableViewCell prepareForReuse]
  -[SKUITableViewCell layoutSubviews]
  -[SKUITableViewCell initWithStyle:reuseIdentifier:]
  -[SKUITableViewCell setSelected:animated:]
  -[SKUITableViewCell setHighlighted:animated:]
  -[SKUITableViewCell setTopBorderColor:]
  -[SKUITableViewCell setBorderPaddingLeft:]
  -[SKUITableViewCell setTextLabelInsets:]
  -[SKUITableViewCell setBottomBorderColor:]
  -[SKUITableViewCell _reloadBorderVisibility]
  -[SKUITableViewCell bottomBorderColor]
  -[SKUITableViewCell topBorderColor]
  -[SKUITableViewCell borderPaddingLeft]
  -[SKUITableViewCell textLabelInsets]


SKUIBorderView : UIView /usr/lib/libobjc.A.dylib
 @property  UIColor *color

  // instance methods
  -[SKUIBorderView color]
  -[SKUIBorderView setColor:]
  -[SKUIBorderView setBackgroundColor:]


SKUIMenuPopoverController : NSObject /usr/lib/libc++.1.dylib <SKUIMenuViewControllerDelegate, UIPopoverControllerDelegate>
 @property  NSArray *menuTitles
 @property  <SKUIMenuPopoverDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIMenuPopoverController dealloc]
  -[SKUIMenuPopoverController delegate]
  -[SKUIMenuPopoverController setDelegate:]
  -[SKUIMenuPopoverController .cxx_destruct]
  -[SKUIMenuPopoverController popoverControllerDidDismissPopover:]
  -[SKUIMenuPopoverController popoverController:willRepositionPopoverToRect:inView:]
  -[SKUIMenuPopoverController dismissAnimated:]
  -[SKUIMenuPopoverController initWithMenuTitles:selectedIndex:]
  -[SKUIMenuPopoverController presentFromRect:inView:permittedArrowDirections:animated:]
  -[SKUIMenuPopoverController initWithMenuTitles:]
  -[SKUIMenuPopoverController _destroyPopoverController]
  -[SKUIMenuPopoverController menuTitles]
  -[SKUIMenuPopoverController menuViewController:didSelectItemAtIndex:]


SKUISearchBarPageSection : SKUIStorePageSection
  // instance methods
  -[SKUISearchBarPageSection .cxx_destruct]
  -[SKUISearchBarPageSection backgroundColorForIndexPath:]
  -[SKUISearchBarPageSection sectionContentInset]
  -[SKUISearchBarPageSection willAppearInContext:]
  -[SKUISearchBarPageSection cellForIndexPath:]
  -[SKUISearchBarPageSection cellSizeForIndexPath:]
  -[SKUISearchBarPageSection numberOfCells]
  -[SKUISearchBarPageSection addImpressionsForIndexPath:toSession:]
  -[SKUISearchBarPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUISearchBarPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUISearchBarPageSection _searchBarController]


SKUILockupItemCellLayout : SKUIItemCellLayout
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  {CGSize=dd} imageBoundingSize
 @property  long long itemOfferStyle
 @property  long long layoutStyle
 @property  long long lockupSize
 @property  long long verticalAlignment
 @property  unsigned long visibleFields
 @property  NSString *artistName
 @property  NSString *categoryString
 @property  NSString *editorialBadgeString
 @property  NSString *itemCountString
 @property  NSString *releaseDateString
 @property  NSString *title
 @property  long long numberOfUserRatings
 @property  float userRating
 @property  UIImage *videoThumbnailImage
 @property  {CGSize=dd} videoThumbnailSize
 @property  BOOL playsInlineVideo

  // class methods
  +[SKUILockupItemCellLayout heightForLockupStyle:item:editorial:clientContext:]
  +[SKUILockupItemCellLayout videoThumbnailSizeForVideo:clientContext:]
  +[SKUILockupItemCellLayout heightForLockupComponent:clientContext:]

  // instance methods
  -[SKUILockupItemCellLayout dealloc]
  -[SKUILockupItemCellLayout .cxx_destruct]
  -[SKUILockupItemCellLayout title]
  -[SKUILockupItemCellLayout setTitle:]
  -[SKUILockupItemCellLayout prepareForReuse]
  -[SKUILockupItemCellLayout verticalAlignment]
  -[SKUILockupItemCellLayout setVerticalAlignment:]
  -[SKUILockupItemCellLayout setBackgroundColor:]
  -[SKUILockupItemCellLayout layoutSubviews]
  -[SKUILockupItemCellLayout contentInsets]
  -[SKUILockupItemCellLayout setLayoutStyle:]
  -[SKUILockupItemCellLayout layoutStyle]
  -[SKUILockupItemCellLayout setContentInsets:]
  -[SKUILockupItemCellLayout initWithParentView:]
  -[SKUILockupItemCellLayout initWithTableViewCell:]
  -[SKUILockupItemCellLayout setIconImage:]
  -[SKUILockupItemCellLayout setClientContext:]
  -[SKUILockupItemCellLayout artistName]
  -[SKUILockupItemCellLayout setArtistName:]
  -[SKUILockupItemCellLayout userRating]
  -[SKUILockupItemCellLayout setUserRating:]
  -[SKUILockupItemCellLayout numberOfUserRatings]
  -[SKUILockupItemCellLayout categoryString]
  -[SKUILockupItemCellLayout setItemCountString:]
  -[SKUILockupItemCellLayout releaseDateString]
  -[SKUILockupItemCellLayout setReleaseDateString:]
  -[SKUILockupItemCellLayout playsInlineVideo]
  -[SKUILockupItemCellLayout setColoringWithColorScheme:]
  -[SKUILockupItemCellLayout editorialBadgeString]
  -[SKUILockupItemCellLayout itemCountString]
  -[SKUILockupItemCellLayout setEditorialBadgeString:]
  -[SKUILockupItemCellLayout setCategoryString:]
  -[SKUILockupItemCellLayout setNumberOfUserRatings:]
  -[SKUILockupItemCellLayout setVisibleFields:]
  -[SKUILockupItemCellLayout visibleFields]
  -[SKUILockupItemCellLayout setImageBoundingSize:]
  -[SKUILockupItemCellLayout setLockupSize:]
  -[SKUILockupItemCellLayout initWithCollectionViewCell:]
  -[SKUILockupItemCellLayout layoutForItemOfferChange]
  -[SKUILockupItemCellLayout _initSKUILockupItemCellLayout]
  -[SKUILockupItemCellLayout videoThumbnailImage]
  -[SKUILockupItemCellLayout _beginVideoPlaybackAction:]
  -[SKUILockupItemCellLayout _layoutHorizontal]
  -[SKUILockupItemCellLayout _layoutVertical]
  -[SKUILockupItemCellLayout _layoutIconImageView]
  -[SKUILockupItemCellLayout _isItemOfferHidden]
  -[SKUILockupItemCellLayout _itemOfferTextLabel]
  -[SKUILockupItemCellLayout endVideoPlaybackAnimated:]
  -[SKUILockupItemCellLayout playInlineVideoWithURL:]
  -[SKUILockupItemCellLayout setItemOfferStyle:]
  -[SKUILockupItemCellLayout setPlaysInlineVideo:]
  -[SKUILockupItemCellLayout setVideoThumbnailImage:]
  -[SKUILockupItemCellLayout setVideoThumbnailSize:]
  -[SKUILockupItemCellLayout imageBoundingSize]
  -[SKUILockupItemCellLayout itemOfferStyle]
  -[SKUILockupItemCellLayout lockupSize]
  -[SKUILockupItemCellLayout videoThumbnailSize]


SKUICellScrollView : UIScrollView /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUICellScrollView touchesBegan:withEvent:]
  -[SKUICellScrollView touchesMoved:withEvent:]
  -[SKUICellScrollView touchesEnded:withEvent:]
  -[SKUICellScrollView touchesCancelled:withEvent:]


SKUIProductLockupCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIItemOfferButtonDelegate, SKUIOfferViewDelegate, SKUIPerspectiveView, SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIProductLockupCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIProductLockupCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIProductLockupCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIProductLockupCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUIProductLockupCollectionViewCell _attributedStringForButton:context:]
  +[SKUIProductLockupCollectionViewCell _attributedStringForLabel:context:]
  +[SKUIProductLockupCollectionViewCell maximumPerspectiveHeightForSize:]
  +[SKUIProductLockupCollectionViewCell _requestLayoutForViewElements:width:context:]

  // instance methods
  -[SKUIProductLockupCollectionViewCell .cxx_destruct]
  -[SKUIProductLockupCollectionViewCell initWithFrame:]
  -[SKUIProductLockupCollectionViewCell layoutSubviews]
  -[SKUIProductLockupCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIProductLockupCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIProductLockupCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIProductLockupCollectionViewCell viewForElementIdentifier:]
  -[SKUIProductLockupCollectionViewCell _buttonAction:]
  -[SKUIProductLockupCollectionViewCell setPerspectiveTargetView:]
  -[SKUIProductLockupCollectionViewCell setVanishingPoint:]
  -[SKUIProductLockupCollectionViewCell updateForChangedDistanceFromVanishingPoint]
  -[SKUIProductLockupCollectionViewCell _cancelConfirmationAction:]
  -[SKUIProductLockupCollectionViewCell _showConfirmationAction:]
  -[SKUIProductLockupCollectionViewCell _imageTapAction:]
  -[SKUIProductLockupCollectionViewCell itemOfferButtonDidAnimateTransition:]
  -[SKUIProductLockupCollectionViewCell itemOfferButtonWillAnimateTransition:]
  -[SKUIProductLockupCollectionViewCell _viewElementForView:]
  -[SKUIProductLockupCollectionViewCell _stackElements:alignment:inRect:]
  -[SKUIProductLockupCollectionViewCell _stackBottomRightElements:inRect:]
  -[SKUIProductLockupCollectionViewCell _updateLayoutToAnimateOfferTransitionForView:]
  -[SKUIProductLockupCollectionViewCell _prepareOfferConfirmationGradientForView:]
  -[SKUIProductLockupCollectionViewCell _frameForSection:]
  -[SKUIProductLockupCollectionViewCell _layoutConfirmationGradientRelativeToSection:alpha:]
  -[SKUIProductLockupCollectionViewCell offerViewAnimateTransition:]
  -[SKUIProductLockupCollectionViewCell offerViewDidAnimateTransition:]
  -[SKUIProductLockupCollectionViewCell offerViewWillAnimateTransition:]


SKUIPINInputControl : UIControl /usr/lib/libobjc.A.dylib <SKUIViewElementView, UIKeyInput>
 @property  UIColor *boxBackgroundColor
 @property  UIColor *boxBorderColor
 @property  UIFont *font
 @property  UIColor *textColor
 @property  long long numberOfCharacters
 @property  NSString *text
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long autocapitalizationType
 @property  long long autocorrectionType
 @property  long long spellCheckingType
 @property  long long smartQuotesType
 @property  long long smartDashesType
 @property  long long smartInsertDeleteType
 @property  long long keyboardType
 @property  long long keyboardAppearance
 @property  long long returnKeyType
 @property  BOOL enablesReturnKeyAutomatically
 @property  BOOL secureTextEntry
 @property  NSString *textContentType
 @property  UITextInputPasswordRules *passwordRules
 @property  BOOL hasText

  // class methods
  +[SKUIPINInputControl prefetchResourcesForViewElement:reason:context:]
  +[SKUIPINInputControl preferredSizeForViewElement:context:]
  +[SKUIPINInputControl requestLayoutForViewElement:width:context:]
  +[SKUIPINInputControl sizeThatFitsWidth:viewElement:context:]
  +[SKUIPINInputControl _defaultBoxSizeForFont:]

  // instance methods
  -[SKUIPINInputControl .cxx_destruct]
  -[SKUIPINInputControl keyboardType]
  -[SKUIPINInputControl text]
  -[SKUIPINInputControl setText:]
  -[SKUIPINInputControl initWithFrame:]
  -[SKUIPINInputControl setTextColor:]
  -[SKUIPINInputControl setFont:]
  -[SKUIPINInputControl sizeThatFits:]
  -[SKUIPINInputControl layoutSubviews]
  -[SKUIPINInputControl font]
  -[SKUIPINInputControl setSecureTextEntry:]
  -[SKUIPINInputControl becomeFirstResponder]
  -[SKUIPINInputControl tintColorDidChange]
  -[SKUIPINInputControl setContentInset:]
  -[SKUIPINInputControl setAutocorrectionType:]
  -[SKUIPINInputControl resignFirstResponder]
  -[SKUIPINInputControl canBecomeFirstResponder]
  -[SKUIPINInputControl textColor]
  -[SKUIPINInputControl setKeyboardType:]
  -[SKUIPINInputControl setSpellCheckingType:]
  -[SKUIPINInputControl spellCheckingType]
  -[SKUIPINInputControl autocorrectionType]
  -[SKUIPINInputControl isSecureTextEntry]
  -[SKUIPINInputControl deleteBackward]
  -[SKUIPINInputControl insertText:]
  -[SKUIPINInputControl hasText]
  -[SKUIPINInputControl numberOfCharacters]
  -[SKUIPINInputControl reloadWithViewElement:width:context:]
  -[SKUIPINInputControl setImage:forArtworkRequest:context:]
  -[SKUIPINInputControl updateWithItemState:context:animated:]
  -[SKUIPINInputControl viewForElementIdentifier:]
  -[SKUIPINInputControl _reloadLabelSubviews]
  -[SKUIPINInputControl _setNeedsReloadLayout]
  -[SKUIPINInputControl setBoxBackgroundColor:]
  -[SKUIPINInputControl setBoxBorderColor:]
  -[SKUIPINInputControl setNumberOfCharacters:]
  -[SKUIPINInputControl _sendValueChangeEvents]
  -[SKUIPINInputControl boxBackgroundColor]
  -[SKUIPINInputControl boxBorderColor]


SKUIScrollingTabBarPalette : UIView /usr/lib/libobjc.A.dylib
 @property  <SKUIScrollingTabBarPaletteDelegate> *delegate
 @property  BOOL attached
 @property  SKUIScrollingTabBarBackgroundView *backgroundView
 @property  UIView *contentView
 @property  double paletteHeight
 @property  BOOL tabBarBackgroundExtendsBehindPalette

  // instance methods
  -[SKUIScrollingTabBarPalette .cxx_destruct]
  -[SKUIScrollingTabBarPalette _delegate]
  -[SKUIScrollingTabBarPalette _setDelegate:]
  -[SKUIScrollingTabBarPalette contentView]
  -[SKUIScrollingTabBarPalette initWithFrame:]
  -[SKUIScrollingTabBarPalette traitCollectionDidChange:]
  -[SKUIScrollingTabBarPalette _backgroundView]
  -[SKUIScrollingTabBarPalette layoutSubviews]
  -[SKUIScrollingTabBarPalette isAttached]
  -[SKUIScrollingTabBarPalette setTabBarBackgroundExtendsBehindPalette:]
  -[SKUIScrollingTabBarPalette _setAttached:]
  -[SKUIScrollingTabBarPalette paletteHeight]
  -[SKUIScrollingTabBarPalette tabBarBackgroundExtendsBehindPalette]


SKUILockupItemCollectionViewCell : SKUIItemCollectionViewCell
 @property  SKUILockupItemCellLayout *layout

  // instance methods
  -[SKUILockupItemCollectionViewCell .cxx_destruct]
  -[SKUILockupItemCollectionViewCell layout]
  -[SKUILockupItemCollectionViewCell initWithFrame:]
  -[SKUILockupItemCollectionViewCell configureForItem:clientContext:]


SKUIPreviewDocumentController : NSObject /usr/lib/libc++.1.dylib <IKAppDocumentDelegate, SKUIStatusOverlayProvider>
 @property  SKUIClientContext *clientContext
 @property  BOOL previewActive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIPreviewDocumentController dealloc]
  -[SKUIPreviewDocumentController .cxx_destruct]
  -[SKUIPreviewDocumentController _operationQueue]
  -[SKUIPreviewDocumentController initWithDocument:]
  -[SKUIPreviewDocumentController clientContext]
  -[SKUIPreviewDocumentController setClientContext:]
  -[SKUIPreviewDocumentController documentNeedsUpdate:]
  -[SKUIPreviewDocumentController documentDidUpdate:]
  -[SKUIPreviewDocumentController _playerSessionsDidChangeNotification:]
  -[SKUIPreviewDocumentController _connectToAudioPlayer]
  -[SKUIPreviewDocumentController _reloadViewControllersWithPreviewStatus:animated:]
  -[SKUIPreviewDocumentController isPreviewActive]
  -[SKUIPreviewDocumentController _audioPlayerStatusChangeNotification:]
  -[SKUIPreviewDocumentController overlayViewControllerWithBackgroundStyle:]


SKUIRedeemIdValidateOperation : ISOperation /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI <ISDialogOperationDelegate>
 @property  NSDictionary *dictionary
 @property  @? resultBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRedeemIdValidateOperation .cxx_destruct]
  -[SKUIRedeemIdValidateOperation dictionary]
  -[SKUIRedeemIdValidateOperation initWithDictionary:]
  -[SKUIRedeemIdValidateOperation setDictionary:]
  -[SKUIRedeemIdValidateOperation main]
  -[SKUIRedeemIdValidateOperation resultBlock]
  -[SKUIRedeemIdValidateOperation setResultBlock:]
  -[SKUIRedeemIdValidateOperation _subOperation]
  -[SKUIRedeemIdValidateOperation _logResultsForSuccess:failureReason:failureMessage:error:]
  -[SKUIRedeemIdValidateOperation _handleFailure:serverDialogDictionary:]
  -[SKUIRedeemIdValidateOperation operation:selectedButton:]


SKUIMediaQueryNetworkTypeFeature : SKUIMediaQueryFeature
  // class methods
  +[SKUIMediaQueryNetworkTypeFeature supportsFeatureName:]

  // instance methods
  -[SKUIMediaQueryNetworkTypeFeature .cxx_destruct]
  -[SKUIMediaQueryNetworkTypeFeature requiredKeys]
  -[SKUIMediaQueryNetworkTypeFeature initWithFeatureName:value:]
  -[SKUIMediaQueryNetworkTypeFeature evaluateWithValues:]
  -[SKUIMediaQueryNetworkTypeFeature notificationNames]


SKUILockupViewElement : SKUIViewElement
 @property  BOOL containsElementGroups
 @property  SKUIFullscreenImageViewElement *fullscreenImage
 @property  long long lockupViewType
 @property  BOOL selectable

  // instance methods
  -[SKUILockupViewElement isEnabled]
  -[SKUILockupViewElement isSelectable]
  -[SKUILockupViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUILockupViewElement applyUpdatesWithElement:]
  -[SKUILockupViewElement fullscreenImage]
  -[SKUILockupViewElement pageComponentType]
  -[SKUILockupViewElement lockupViewType]
  -[SKUILockupViewElement containsElementGroups]


SKUIPassbookLoader : NSObject /usr/lib/libc++.1.dylib <PKAddPassesViewControllerDelegate>
 @property  <SKUIPassbookLoaderDelegate> *delegate
 @property  NSOperationQueue *operationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIPassbookLoader delegate]
  -[SKUIPassbookLoader setDelegate:]
  -[SKUIPassbookLoader .cxx_destruct]
  -[SKUIPassbookLoader operationQueue]
  -[SKUIPassbookLoader setOperationQueue:]
  -[SKUIPassbookLoader addPassesViewControllerDidFinish:]
  -[SKUIPassbookLoader initWithClientContext:]
  -[SKUIPassbookLoader loadPassWithURL:]
  -[SKUIPassbookLoader _loadPassWithURL:]
  -[SKUIPassbookLoader _sendDidFinishIfFinished]
  -[SKUIPassbookLoader _didLoadWithPass:error:]


SKUIBrickCollectionViewCell : UICollectionViewCell /usr/lib/libobjc.A.dylib
 @property  NSString *accessibilityLabel
 @property  NSString *title
 @property  SKUICountdown *countdown
 @property  SKUIClientContext *clientContext
 @property  UIImage *itemImage
 @property  BOOL itemImageHidden
 @property  {UIEdgeInsets=dddd} itemImageInsets
 @property  UIView *itemImageView

  // instance methods
  -[SKUIBrickCollectionViewCell .cxx_destruct]
  -[SKUIBrickCollectionViewCell title]
  -[SKUIBrickCollectionViewCell setTitle:]
  -[SKUIBrickCollectionViewCell setBackgroundColor:]
  -[SKUIBrickCollectionViewCell accessibilityLabel]
  -[SKUIBrickCollectionViewCell setAccessibilityLabel:]
  -[SKUIBrickCollectionViewCell layoutSubviews]
  -[SKUIBrickCollectionViewCell setHighlighted:]
  -[SKUIBrickCollectionViewCell setSelected:]
  -[SKUIBrickCollectionViewCell clientContext]
  -[SKUIBrickCollectionViewCell setClientContext:]
  -[SKUIBrickCollectionViewCell setColoringWithColorScheme:]
  -[SKUIBrickCollectionViewCell countdown]
  -[SKUIBrickCollectionViewCell setItemImage:]
  -[SKUIBrickCollectionViewCell setCountdown:]
  -[SKUIBrickCollectionViewCell itemImage]
  -[SKUIBrickCollectionViewCell _reloadHighlight]
  -[SKUIBrickCollectionViewCell isItemImageHidden]
  -[SKUIBrickCollectionViewCell _removeOverlay]
  -[SKUIBrickCollectionViewCell setItemImageHidden:]
  -[SKUIBrickCollectionViewCell setItemImageInsets:]
  -[SKUIBrickCollectionViewCell itemImageInsets]
  -[SKUIBrickCollectionViewCell itemImageView]


SKUIFacebookViewElement : SKUIViewElement
 @property  long long facebookType
 @property  NSString *URLString

  // instance methods
  -[SKUIFacebookViewElement .cxx_destruct]
  -[SKUIFacebookViewElement URLString]
  -[SKUIFacebookViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIFacebookViewElement applyUpdatesWithElement:]
  -[SKUIFacebookViewElement pageComponentType]
  -[SKUIFacebookViewElement facebookType]


SKUIStackedImageView : SKUIImageView <MPUStackViewDataSource>
 @property  MPUBorderDrawingCache *borderDrawingCache
 @property  UIView *perspectiveTargetView
 @property  {CGPoint=dd} vanishingPoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIStackedImageView maximumPerspectiveHeightForSize:]
  +[SKUIStackedImageView _configurationForSize:]

  // instance methods
  -[SKUIStackedImageView dealloc]
  -[SKUIStackedImageView .cxx_destruct]
  -[SKUIStackedImageView setImage:]
  -[SKUIStackedImageView setCenter:]
  -[SKUIStackedImageView setFrame:]
  -[SKUIStackedImageView initWithFrame:]
  -[SKUIStackedImageView layoutSubviews]
  -[SKUIStackedImageView setImageSize:]
  -[SKUIStackedImageView setPerspectiveTargetView:]
  -[SKUIStackedImageView setVanishingPoint:]
  -[SKUIStackedImageView updateForChangedDistanceFromVanishingPoint]
  -[SKUIStackedImageView perspectiveTargetView]
  -[SKUIStackedImageView setBorderDrawingCache:]
  -[SKUIStackedImageView vanishingPoint]
  -[SKUIStackedImageView numberOfItemsInStackView:]
  -[SKUIStackedImageView stackView:applyAttributesToItem:atIndex:]
  -[SKUIStackedImageView stackView:didCreateItem:]
  -[SKUIStackedImageView performCompressionAnimationWithCompletionHandler:]
  -[SKUIStackedImageView borderDrawingCache]


SKUISortDataRequest : SKUIResourceRequest <NSCopying>
 @property  NSURL *sortURL
 @property  <SKUISortDataRequestDelegate> *delegate

  // instance methods
  -[SKUISortDataRequest copyWithZone:]
  -[SKUISortDataRequest delegate]
  -[SKUISortDataRequest setDelegate:]
  -[SKUISortDataRequest .cxx_destruct]
  -[SKUISortDataRequest finishWithResource:]
  -[SKUISortDataRequest newLoadOperation]
  -[SKUISortDataRequest initWithSortURL:]
  -[SKUISortDataRequest sortURL]


SKUIViewElement : IKViewElement /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
 @property  NSString *indexBarEntryID
 @property  BOOL dynamicContainer
 @property  BOOL enabled
 @property  <SKUIEntityProviding> *entityProvider
 @property  <SKUIEntityProviding> *explicitEntityProvider
 @property  <IKEntityValueProviding> *entityValueProvider
 @property  <IKEntityValueProviding> *explicitEntityValueProvider
 @property  NSSet *entityValueProperties
 @property  NSArray *flattenedChildren
 @property  NSString *itmlID
 @property  long long pageComponentType
 @property  NSSet *personalizationLibraryItems
 @property  long long pinStyle
 @property  long long pinGroup
 @property  BOOL rendersWithParallax
 @property  BOOL rendersWithPerspective
 @property  <NSCopying> *uniquingMapKey

  // instance methods
  -[SKUIViewElement dealloc]
  -[SKUIViewElement .cxx_destruct]
  -[SKUIViewElement isEnabled]
  -[SKUIViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIViewElement applyUpdatesWithElement:]
  -[SKUIViewElement entityValueProvider]
  -[SKUIViewElement setEntityValueProvider:]
  -[SKUIViewElement enumerateChildrenUsingBlock:]
  -[SKUIViewElement firstChildForElementType:]
  -[SKUIViewElement rendersWithParallax]
  -[SKUIViewElement rendersWithPerspective]
  -[SKUIViewElement entityProvider]
  -[SKUIViewElement indexBarEntryID]
  -[SKUIViewElement firstDescendentWithIndexBarEntryID:]
  -[SKUIViewElement pageComponentType]
  -[SKUIViewElement firstChildForElementName:]
  -[SKUIViewElement entityValueProviderDidChange]
  -[SKUIViewElement uniquingMapKey]
  -[SKUIViewElement entityValueProperties]
  -[SKUIViewElement _unregisterForNotificationsForEntityProvider:]
  -[SKUIViewElement isDynamicContainer]
  -[SKUIViewElement persistenceKey]
  -[SKUIViewElement flattenedChildren]
  -[SKUIViewElement _entityProviderDidInvalidateNotification:]
  -[SKUIViewElement _registerForNotificationsForEntityProvider:]
  -[SKUIViewElement elementWithIdentifier:]
  -[SKUIViewElement isDescendentFromViewElement:]
  -[SKUIViewElement personalizationLibraryItems]
  -[SKUIViewElement pinStyle]
  -[SKUIViewElement pinGroup]
  -[SKUIViewElement explicitEntityProvider]
  -[SKUIViewElement handlesBackgroundColorDirectly]
  -[SKUIViewElement featureWithName:]
  -[SKUIViewElement ancestorElementMatchingPredicate:]
  -[SKUIViewElement explicitEntityValueProvider]
  -[SKUIViewElement _entityValueProviderDidChange]
  -[SKUIViewElement canMoveWithinCollection]
  -[SKUIViewElement ancestorElementOfType:]
  -[SKUIViewElement descendsFromElementWithType:]
  -[SKUIViewElement enumerateViewElementsWithDictionary:factory:usingBlock:]
  -[SKUIViewElement setExplicitEntityValueProvider:]
  -[SKUIViewElement expandableLabelElementForWidth:context:]


SKUISettingsDescriptionUpdate : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *indexPaths
 @property  NSIndexSet *indexSet
 @property  long long updateType

  // instance methods
  -[SKUISettingsDescriptionUpdate .cxx_destruct]
  -[SKUISettingsDescriptionUpdate indexSet]
  -[SKUISettingsDescriptionUpdate indexPaths]
  -[SKUISettingsDescriptionUpdate setIndexPaths:]
  -[SKUISettingsDescriptionUpdate updateType]
  -[SKUISettingsDescriptionUpdate initWithUpdateType:]
  -[SKUISettingsDescriptionUpdate setIndexSet:]


SKUIBrickSwooshArtworkLoader : SKUISwooshArtworkLoader
 @property  SKUIBrickSwooshViewController *swooshViewController

  // instance methods
  -[SKUIBrickSwooshArtworkLoader initWithArtworkLoader:swoosh:]
  -[SKUIBrickSwooshArtworkLoader loadImageForBrick:reason:]
  -[SKUIBrickSwooshArtworkLoader setImage:forRequest:]
  -[SKUIBrickSwooshArtworkLoader cachedImageForBrick:]
  -[SKUIBrickSwooshArtworkLoader loadImagesForNextPageWithReason:]


SKUIStandardInteractiveSegment : UIControl /usr/lib/libobjc.A.dylib <SKUIInteractiveSegmenting>
 @property  NSAttributedString *attributedTitle
 @property  {UIEdgeInsets=dddd} contentEdgeInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double relativeSelectionProgress
 @property  long long segmentPosition

  // class methods
  +[SKUIStandardInteractiveSegment defaultHeight]

  // instance methods
  -[SKUIStandardInteractiveSegment .cxx_destruct]
  -[SKUIStandardInteractiveSegment setAttributedTitle:]
  -[SKUIStandardInteractiveSegment attributedTitle]
  -[SKUIStandardInteractiveSegment initWithFrame:]
  -[SKUIStandardInteractiveSegment traitCollectionDidChange:]
  -[SKUIStandardInteractiveSegment sizeThatFits:]
  -[SKUIStandardInteractiveSegment layoutSubviews]
  -[SKUIStandardInteractiveSegment setHighlighted:]
  -[SKUIStandardInteractiveSegment tintColorDidChange]
  -[SKUIStandardInteractiveSegment _backgroundImage]
  -[SKUIStandardInteractiveSegment setContentEdgeInsets:]
  -[SKUIStandardInteractiveSegment contentEdgeInsets]
  -[SKUIStandardInteractiveSegment _borderImage]
  -[SKUIStandardInteractiveSegment _updateBorderAndBackgroundContainerViewTinting]
  -[SKUIStandardInteractiveSegment _reloadCorneredImages]
  -[SKUIStandardInteractiveSegment _cornersForSegmentPosition:]
  -[SKUIStandardInteractiveSegment _titleLabelSize]
  -[SKUIStandardInteractiveSegment _applySelectionProgress]
  -[SKUIStandardInteractiveSegment _setNeedsReloadCorneredImages]
  -[SKUIStandardInteractiveSegment _normalizedSelectionProgressForRelativeSelectionProgress:]
  -[SKUIStandardInteractiveSegment _progressTimingFunction]
  -[SKUIStandardInteractiveSegment _inverseProgressTimingFunction]
  -[SKUIStandardInteractiveSegment _createCorneredImageWithScale:forBorder:]
  -[SKUIStandardInteractiveSegment relativeSelectionProgress]
  -[SKUIStandardInteractiveSegment setRelativeSelectionProgress:]
  -[SKUIStandardInteractiveSegment segmentPosition]
  -[SKUIStandardInteractiveSegment setSegmentPosition:]


SKUIBrickSwooshPageSection : SKUIStorePageSection <SKUIMissingItemDelegate, SKUISwooshViewControllerDelegate>
 @property  SKUISwooshPageComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIBrickSwooshPageSection dealloc]
  -[SKUIBrickSwooshPageSection .cxx_destruct]
  -[SKUIBrickSwooshPageSection initWithPageComponent:]
  -[SKUIBrickSwooshPageSection willAppearInContext:]
  -[SKUIBrickSwooshPageSection cellForIndexPath:]
  -[SKUIBrickSwooshPageSection cellSizeForIndexPath:]
  -[SKUIBrickSwooshPageSection numberOfCells]
  -[SKUIBrickSwooshPageSection prefetchResourcesWithReason:]
  -[SKUIBrickSwooshPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIBrickSwooshPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIBrickSwooshPageSection _loadMissingItemsFromIndex:withReason:]
  -[SKUIBrickSwooshPageSection _addImpressionForIndex:toSession:]
  -[SKUIBrickSwooshPageSection _missingItemLoader]
  -[SKUIBrickSwooshPageSection missingItemLoader:didLoadItems:invalidItemIdentifiers:]
  -[SKUIBrickSwooshPageSection _swooshViewController]
  -[SKUIBrickSwooshPageSection _artworkLoader]
  -[SKUIBrickSwooshPageSection swoosh:imageForCellAtIndex:]
  -[SKUIBrickSwooshPageSection swoosh:didSelectCellAtIndex:]
  -[SKUIBrickSwooshPageSection swoosh:willDisplayCellAtIndex:]


SKUIURLBag : SSURLBag /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[SKUIURLBag URLBagForContext:]
  +[SKUIURLBag bagQueue]

  // instance methods
  -[SKUIURLBag invalidate]
  -[SKUIURLBag .cxx_destruct]
  -[SKUIURLBag valueForKey:error:]
  -[SKUIURLBag storeFrontIdentifier]
  -[SKUIURLBag loadWithCompletionBlock:]
  -[SKUIURLBag loadValueForKey:completionBlock:]
  -[SKUIURLBag getTrustForURL:completionBlock:]
  -[SKUIURLBag existingBagDictionary]
  -[SKUIURLBag _enqueueOperationWithContext:completionBlock:]
  -[SKUIURLBag _finishOperationWithURLBag:error:]


SKUINavigationBarMenusView : SKUIViewReuseView
 @property  {UIEdgeInsets=dddd} contentInset

  // class methods
  +[SKUINavigationBarMenusView _attributedStringWithMenuItem:context:]
  +[SKUINavigationBarMenusView requestLayoutWithMenus:width:context:]

  // instance methods
  -[SKUINavigationBarMenusView .cxx_destruct]
  -[SKUINavigationBarMenusView sizeThatFits:]
  -[SKUINavigationBarMenusView layoutSubviews]
  -[SKUINavigationBarMenusView setContentInset:]
  -[SKUINavigationBarMenusView contentInset]
  -[SKUINavigationBarMenusView reloadWithMenus:width:context:]
  -[SKUINavigationBarMenusView setButtonTarget:action:]


SKUIEditorialCollectionViewCell : SKUICollectionViewCell <SKUICellLayoutParentView>
 @property  SKUIEditorialCellLayout *layout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIEditorialCollectionViewCell .cxx_destruct]
  -[SKUIEditorialCollectionViewCell prepareForReuse]
  -[SKUIEditorialCollectionViewCell layout]
  -[SKUIEditorialCollectionViewCell setBackgroundColor:]
  -[SKUIEditorialCollectionViewCell initWithFrame:]
  -[SKUIEditorialCollectionViewCell layoutSubviews]
  -[SKUIEditorialCollectionViewCell applyLayoutAttributes:]
  -[SKUIEditorialCollectionViewCell setCellLayoutNeedsLayout]


SKUIIndexBarControlController : NSObject /usr/lib/libc++.1.dylib <SKUIIndexBarControlDataSource, SKUIIndexBarControlDelegate>
 @property  <SKUIIndexBarControlControllerDataSource> *dataSource
 @property  <SKUIIndexBarControlControllerDelegate> *delegate
 @property  SKUIIndexBarControl *indexBarControl
 @property  SKUIResourceLoader *resourceLoader
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIIndexBarControlController init]
  -[SKUIIndexBarControlController dealloc]
  -[SKUIIndexBarControlController delegate]
  -[SKUIIndexBarControlController setDelegate:]
  -[SKUIIndexBarControlController .cxx_destruct]
  -[SKUIIndexBarControlController dataSource]
  -[SKUIIndexBarControlController setDataSource:]
  -[SKUIIndexBarControlController reloadData]
  -[SKUIIndexBarControlController reloadSections:]
  -[SKUIIndexBarControlController resourceLoader]
  -[SKUIIndexBarControlController setResourceLoader:]
  -[SKUIIndexBarControlController indexBarControl]
  -[SKUIIndexBarControlController initWithIndexBarControl:]
  -[SKUIIndexBarControlController _artworkRequestDidLoadImageNotification:]
  -[SKUIIndexBarControlController _cancelLoadForEntryDescriptors:]
  -[SKUIIndexBarControlController _combinedEntryDescriptor]
  -[SKUIIndexBarControlController _entryForEntryDescriptor:loadingIfNeeded:]
  -[SKUIIndexBarControlController _entryDescriptorAtIndexPath:]
  -[SKUIIndexBarControlController _finishLoadForRequestID:withResultingImage:]
  -[SKUIIndexBarControlController _URLForEntryDescriptor:]
  -[SKUIIndexBarControlController _configureEntry:withEntryDescriptor:]
  -[SKUIIndexBarControlController _cachedEntryForEntryDescriptor:]
  -[SKUIIndexBarControlController _placeholderEntryForEntryDescriptor:]
  -[SKUIIndexBarControlController _loadEntryForEntryDescriptor:]
  -[SKUIIndexBarControlController _updateCachedEntry:forEntryDescriptor:]
  -[SKUIIndexBarControlController indexBarControl:numberOfEntriesInSection:]
  -[SKUIIndexBarControlController indexBarControl:entryAtIndexPath:]
  -[SKUIIndexBarControlController combinedEntryForIndexBarControl:]
  -[SKUIIndexBarControlController numberOfSectionsInIndexBarControl:]
  -[SKUIIndexBarControlController indexBarControl:didSelectEntryAtIndexPath:]
  -[SKUIIndexBarControlController indexBarControlDidSelectBeyondBottom:]
  -[SKUIIndexBarControlController indexBarControlDidSelectBeyondTop:]
  -[SKUIIndexBarControlController reloadCombinedEntryDescriptor]
  -[SKUIIndexBarControlController reloadEntryDescriptorAtIndexPath:]


SKUIProductReviewURLProvider : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *itemID
 @property  SSURLBag *urlBag
 @property  NSURL *rateURL
 @property  NSURL *writeReviewURL

  // instance methods
  -[SKUIProductReviewURLProvider init]
  -[SKUIProductReviewURLProvider .cxx_destruct]
  -[SKUIProductReviewURLProvider itemID]
  -[SKUIProductReviewURLProvider setItemID:]
  -[SKUIProductReviewURLProvider urlBag]
  -[SKUIProductReviewURLProvider initWithClientContext:itemID:]
  -[SKUIProductReviewURLProvider _urlByAppendingItemId:]
  -[SKUIProductReviewURLProvider setRateURL:]
  -[SKUIProductReviewURLProvider setWriteReviewURL:]
  -[SKUIProductReviewURLProvider fetchURLsWithCompletion:]
  -[SKUIProductReviewURLProvider rateURL]
  -[SKUIProductReviewURLProvider writeReviewURL]
  -[SKUIProductReviewURLProvider setUrlBag:]


SKUISegmentedControlViewElementController : NSObject /usr/lib/libc++.1.dylib <SKUIFlexibleSegmentedControlDelegate, SKUIMenuPopoverDelegate, SKUIMenuViewControllerDelegate>
 @property  SKUIClientContext *clientContext
 @property  long long defaultMaximumNumberOfVisibleItems
 @property  double desiredSegmentWidth
 @property  UIViewController *parentViewController
 @property  UIView *segmentedControlView
 @property  SKUISegmentedControlViewElement *viewElement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUISegmentedControlViewElementController dealloc]
  -[SKUISegmentedControlViewElementController .cxx_destruct]
  -[SKUISegmentedControlViewElementController parentViewController]
  -[SKUISegmentedControlViewElementController setParentViewController:]
  -[SKUISegmentedControlViewElementController _segmentedControl]
  -[SKUISegmentedControlViewElementController clientContext]
  -[SKUISegmentedControlViewElementController setClientContext:]
  -[SKUISegmentedControlViewElementController viewElement]
  -[SKUISegmentedControlViewElementController initWithViewElement:]
  -[SKUISegmentedControlViewElementController setDesiredSegmentWidth:]
  -[SKUISegmentedControlViewElementController reloadAfterDocumentUpdate]
  -[SKUISegmentedControlViewElementController segmentedControlView]
  -[SKUISegmentedControlViewElementController setDefaultMaximumNumberOfVisibleItems:]
  -[SKUISegmentedControlViewElementController initWithViewElement:segmentedControl:]
  -[SKUISegmentedControlViewElementController menuPopoverDidCancel:]
  -[SKUISegmentedControlViewElementController menuPopover:didSelectMenuItemAtIndex:]
  -[SKUISegmentedControlViewElementController menuPopover:willRepositionToRect:inView:]
  -[SKUISegmentedControlViewElementController _destroyPopoverController]
  -[SKUISegmentedControlViewElementController menuViewController:didSelectItemAtIndex:]
  -[SKUISegmentedControlViewElementController _connectToSegmentedControl:]
  -[SKUISegmentedControlViewElementController _reloadPropertiesForSegmentedControl:]
  -[SKUISegmentedControlViewElementController _showPopoverMoreListWithTitles:]
  -[SKUISegmentedControlViewElementController _showMoreListSheetWithTitles:selectedIndex:]
  -[SKUISegmentedControlViewElementController _destroyMenuSheetViewController]
  -[SKUISegmentedControlViewElementController _cancelMenuAction:]
  -[SKUISegmentedControlViewElementController segmentedControl:didSelectSegmentIndex:]
  -[SKUISegmentedControlViewElementController segmentedControl:showMoreListWithTitles:]
  -[SKUISegmentedControlViewElementController defaultMaximumNumberOfVisibleItems]
  -[SKUISegmentedControlViewElementController desiredSegmentWidth]


SKUIContentUnavailableDocumentViewController : SKUIViewController <SKUIArtworkRequestDelegate, SKUILayoutCacheDelegate, SKUIDocumentViewController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIContentUnavailableDocumentViewController dealloc]
  -[SKUIContentUnavailableDocumentViewController .cxx_destruct]
  -[SKUIContentUnavailableDocumentViewController viewDidLoad]
  -[SKUIContentUnavailableDocumentViewController viewWillLayoutSubviews]
  -[SKUIContentUnavailableDocumentViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUIContentUnavailableDocumentViewController _contentInsets]
  -[SKUIContentUnavailableDocumentViewController _layoutContext]
  -[SKUIContentUnavailableDocumentViewController documentDidUpdate:]
  -[SKUIContentUnavailableDocumentViewController artworkRequest:didLoadImage:]
  -[SKUIContentUnavailableDocumentViewController layoutCacheDidFinishBatch:]
  -[SKUIContentUnavailableDocumentViewController initWithTemplateElement:]
  -[SKUIContentUnavailableDocumentViewController _reloadContentUnavailableView:width:]


SKUIBrickSwooshViewController : SKUISwooshViewController <UICollectionViewDataSource, UICollectionViewDelegate>
 @property  NSArray *bricks
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIBrickSwooshViewController dealloc]
  -[SKUIBrickSwooshViewController setDelegate:]
  -[SKUIBrickSwooshViewController .cxx_destruct]
  -[SKUIBrickSwooshViewController loadView]
  -[SKUIBrickSwooshViewController viewWillAppear:]
  -[SKUIBrickSwooshViewController collectionView:numberOfItemsInSection:]
  -[SKUIBrickSwooshViewController collectionView:cellForItemAtIndexPath:]
  -[SKUIBrickSwooshViewController collectionView:didSelectItemAtIndexPath:]
  -[SKUIBrickSwooshViewController indexPathsForVisibleItems]
  -[SKUIBrickSwooshViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[SKUIBrickSwooshViewController collectionView:layout:insetForSectionAtIndex:]
  -[SKUIBrickSwooshViewController setImage:forItemAtIndex:]
  -[SKUIBrickSwooshViewController setClientContext:]
  -[SKUIBrickSwooshViewController setColorScheme:]
  -[SKUIBrickSwooshViewController bricks]
  -[SKUIBrickSwooshViewController setBricks:]
  -[SKUIBrickSwooshViewController frameForItemAtIndex:]
  -[SKUIBrickSwooshViewController deselectAllItems]
  -[SKUIBrickSwooshViewController initWithSwoosh:]
  -[SKUIBrickSwooshViewController _brickSwooshMetrics]
  -[SKUIBrickSwooshViewController popImageViewForItemAtIndex:]
  -[SKUIBrickSwooshViewController unhideImages]


SKUIScrollingTabBarController : SKUIViewController <SKUIDynamicBarAnimatorDelegate, SKUIProxyScrollViewDelegate, SKUIScrollingTabBarContentCollectionViewDelegate, SKUIScrollingTabBarControllerItemContextDelegate, SKUIScrollingTabBarPaletteDelegate, SKUIScrollViewDelegateObserver, UICollectionViewDataSource, UICollectionViewDelegate, SKUITabBarController>
 @property  {UIOffset=dd} additionalTabBarButtonsContainerPositionOffset
 @property  {UIOffset=dd} additionalTabBarPalettePositionOffset
 @property  BOOL chargeEnabledOnTabBarButtonsContainer
 @property  double contentViewControllerBottomInsetAdjustment
 @property  BOOL scrollEnabled
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} tabBarButtonsContainerFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} tabBarPaletteFrame
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SKUITabBarControllerDelegate> *delegate
 @property  NSArray *viewControllers
 @property  UIViewController *selectedViewController
 @property  unsigned long selectedIndex
 @property  UIView *tabBar
 @property  UIViewController *transientViewController
 @property  NSArray *allViewControllers
 @property  long long forcedUserInterfaceStyle
 @property  UINavigationController *moreNavigationController
 @property  UIViewController *floatingOverlayViewController

  // class methods
  +[SKUIScrollingTabBarController _shouldForwardViewWillTransitionToSize]
  +[SKUIScrollingTabBarController areScrollingTabsAllowed]

  // instance methods
  -[SKUIScrollingTabBarController dealloc]
  -[SKUIScrollingTabBarController delegate]
  -[SKUIScrollingTabBarController setDelegate:]
  -[SKUIScrollingTabBarController .cxx_destruct]
  -[SKUIScrollingTabBarController observeValueForKeyPath:ofObject:change:context:]
  -[SKUIScrollingTabBarController traitCollectionDidChange:]
  -[SKUIScrollingTabBarController presentedViewController]
  -[SKUIScrollingTabBarController initWithNibName:bundle:]
  -[SKUIScrollingTabBarController setScrollEnabled:]
  -[SKUIScrollingTabBarController viewWillAppear:]
  -[SKUIScrollingTabBarController viewWillDisappear:]
  -[SKUIScrollingTabBarController viewDidLoad]
  -[SKUIScrollingTabBarController collectionView:numberOfItemsInSection:]
  -[SKUIScrollingTabBarController collectionView:cellForItemAtIndexPath:]
  -[SKUIScrollingTabBarController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUIScrollingTabBarController supportedInterfaceOrientations]
  -[SKUIScrollingTabBarController viewDidLayoutSubviews]
  -[SKUIScrollingTabBarController tabBar]
  -[SKUIScrollingTabBarController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[SKUIScrollingTabBarController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[SKUIScrollingTabBarController encodeRestorableStateWithCoder:]
  -[SKUIScrollingTabBarController decodeRestorableStateWithCoder:]
  -[SKUIScrollingTabBarController collectionView:layout:sizeForItemAtIndexPath:]
  -[SKUIScrollingTabBarController viewControllers]
  -[SKUIScrollingTabBarController setViewControllers:]
  -[SKUIScrollingTabBarController setViewControllers:animated:]
  -[SKUIScrollingTabBarController selectedViewController]
  -[SKUIScrollingTabBarController setSelectedViewController:]
  -[SKUIScrollingTabBarController contentScrollView]
  -[SKUIScrollingTabBarController selectedIndex]
  -[SKUIScrollingTabBarController transientViewController]
  -[SKUIScrollingTabBarController setTransientViewController:animated:]
  -[SKUIScrollingTabBarController setSelectedIndex:]
  -[SKUIScrollingTabBarController setTransientViewController:]
  -[SKUIScrollingTabBarController allViewControllers]
  -[SKUIScrollingTabBarController _edgeInsetsForChildViewController:insetsAreAbsolute:]
  -[SKUIScrollingTabBarController _backdropBarGroupName]
  -[SKUIScrollingTabBarController childViewControllerForStatusBarStyle]
  -[SKUIScrollingTabBarController childViewControllerForStatusBarHidden]
  -[SKUIScrollingTabBarController hideBarWithTransition:]
  -[SKUIScrollingTabBarController showBarWithTransition:]
  -[SKUIScrollingTabBarController rotatingSnapshotViewForWindow:]
  -[SKUIScrollingTabBarController setClientContext:]
  -[SKUIScrollingTabBarController _updateDynamicBarGeometry]
  -[SKUIScrollingTabBarController scrollEnabled]
  -[SKUIScrollingTabBarController observedScrollViewDidScroll:]
  -[SKUIScrollingTabBarController observedScrollViewWillBeginDragging:]
  -[SKUIScrollingTabBarController observedScrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SKUIScrollingTabBarController dynamicBarAnimatorDidUpdate:]
  -[SKUIScrollingTabBarController dynamicBarAnimator:canHideBarsByDraggingWithOffset:]
  -[SKUIScrollingTabBarController _updateScrollViewContentOffsetsToTargetContentOffsets]
  -[SKUIScrollingTabBarController scrollViewDidChangeContentInset:]
  -[SKUIScrollingTabBarController tabBarBackgroundExtendsBehindPaletteDidChangeForPalette:]
  -[SKUIScrollingTabBarController _setViewControllers:collectionViewsUpdateHandler:forFinalTearDown:]
  -[SKUIScrollingTabBarController _updateHorizontalScrollingAvailability]
  -[SKUIScrollingTabBarController _tabBarBackdropGroupName]
  -[SKUIScrollingTabBarController _updateTabBarButtons]
  -[SKUIScrollingTabBarController _updateLayoutOfTabBar]
  -[SKUIScrollingTabBarController _updateForHorizontalLayoutChange]
  -[SKUIScrollingTabBarController _updateStatusBarPositionForcingVisible:]
  -[SKUIScrollingTabBarController contentViewControllerBottomInsetAdjustment]
  -[SKUIScrollingTabBarController _updateHidesBarsOnSwipeAvailability]
  -[SKUIScrollingTabBarController _updateNavigationBarsForVerticalLayoutChange]
  -[SKUIScrollingTabBarController _updateFocusedViewControllerInsetsForVerticalLayoutChange]
  -[SKUIScrollingTabBarController _updateViewControllerContentScrollViewInset]
  -[SKUIScrollingTabBarController _parentCellForViewController:]
  -[SKUIScrollingTabBarController _updateTabBarBackgroundsAndHairlines]
  -[SKUIScrollingTabBarController _focusedContentScrollViewIsScrolledToOrPastBottom]
  -[SKUIScrollingTabBarController _viewControllerContentScrollViewContentInsetDescriptor]
  -[SKUIScrollingTabBarController _updateLayoutOfCollectionViewCell:]
  -[SKUIScrollingTabBarController _effectiveBottomBarOffset]
  -[SKUIScrollingTabBarController _roundedOffsetFromOffset:]
  -[SKUIScrollingTabBarController _updateAdditionalPositionOffsetsWithUpdateRecord:]
  -[SKUIScrollingTabBarController _selectTabAtIndex:shouldFallbackToPoppingToTabRootContent:]
  -[SKUIScrollingTabBarController attachTabBarPalette:animated:completion:]
  -[SKUIScrollingTabBarController _animatePaletteWithSetup:animations:completion:]
  -[SKUIScrollingTabBarController detachTabBarPalette:animated:completion:]
  -[SKUIScrollingTabBarController willUpdateAdditionalTabBarComponentsPositionOffsets]
  -[SKUIScrollingTabBarController setAdditionalTabBarButtonsContainerPositionOffset:]
  -[SKUIScrollingTabBarController setAdditionalTabBarPalettePositionOffset:]
  -[SKUIScrollingTabBarController didUpdateAdditionalTabBarComponentsPositionOffsets]
  -[SKUIScrollingTabBarController _deepestFocusedViewControllerWithTopLevelFocusedViewController:]
  -[SKUIScrollingTabBarController _setFocusedViewController:showBarsIfNeeded:animated:notifyDelegate:]
  -[SKUIScrollingTabBarController _invalidateContentCollectionViewLayoutForUpdatedContentSizeWithHorizontalLayoutContext:indexOfViewControllerWithUpdatedContentSize:]
  -[SKUIScrollingTabBarController _popVisibleNavigationStacksToRootWithHorizontalLayoutContext:]
  -[SKUIScrollingTabBarController _updateLayoutOfVisibleCollectionViewCells]
  -[SKUIScrollingTabBarController _updateTabBarButtonsSelectionProgressWithHorizontalLayoutContext:]
  -[SKUIScrollingTabBarController _updateFocusedViewControllerWithHorizontalLayoutContext:]
  -[SKUIScrollingTabBarController _discardUndesirableLastSelectedPageIndexesWithHorizontalLayoutContext:]
  -[SKUIScrollingTabBarController _notifyViewControllerAppearanceProgressUpdateWithHorizontalLayoutContext:]
  -[SKUIScrollingTabBarController _tabBarButtonTapped:]
  -[SKUIScrollingTabBarController scrollingTabBarContentCollectionViewDidLayoutSubviews:]
  -[SKUIScrollingTabBarController scrollingTabBarControllerItemContextRequestsContentOffsetUpdate:]
  -[SKUIScrollingTabBarController scrollingTabBarControllerItemContextRequestsContentSizeUpdate:]
  -[SKUIScrollingTabBarController scrollingTabBarControllerItemContext:observedNavigationStackDidChange:]
  -[SKUIScrollingTabBarController setChargeEnabledOnTabBarButtonsContainer:]
  -[SKUIScrollingTabBarController tabBarButtonsContainerFrame]
  -[SKUIScrollingTabBarController tabBarPaletteFrame]
  -[SKUIScrollingTabBarController existingTabBarPalette]
  -[SKUIScrollingTabBarController tabBarPaletteWithHeight:]
  -[SKUIScrollingTabBarController attachTabBarPalette:]
  -[SKUIScrollingTabBarController detachTabBarPalette:]
  -[SKUIScrollingTabBarController updateTabBarComponentPositionOffsetsWithPresentationValues]
  -[SKUIScrollingTabBarController _effectiveTopBarHeight]
  -[SKUIScrollingTabBarController _viewControllerNeedsNestedPagingScrollViewUpdate:]
  -[SKUIScrollingTabBarController additionalTabBarButtonsContainerPositionOffset]
  -[SKUIScrollingTabBarController additionalTabBarPalettePositionOffset]
  -[SKUIScrollingTabBarController chargeEnabledOnTabBarButtonsContainer]


SKUIAnimatorDOMFeature : NSObject /usr/lib/libc++.1.dylib <SKUIDOMFeature>
 @property  <SKUIAnimatorDOMFeatureDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *featureName
 @property  IKAppContext *appContext

  // class methods
  +[SKUIAnimatorDOMFeature featureName]
  +[SKUIAnimatorDOMFeature makeFeatureJSObjectForFeature:]

  // instance methods
  -[SKUIAnimatorDOMFeature delegate]
  -[SKUIAnimatorDOMFeature setDelegate:]
  -[SKUIAnimatorDOMFeature .cxx_destruct]
  -[SKUIAnimatorDOMFeature featureName]
  -[SKUIAnimatorDOMFeature appContext]
  -[SKUIAnimatorDOMFeature initWithDOMNode:featureName:]


SKJSUIAnimatorDOMFeature : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKJSUIAnimatorDOMFeature>
  // instance methods
  -[SKJSUIAnimatorDOMFeature .cxx_destruct]
  -[SKJSUIAnimatorDOMFeature initWithAppContext:DOMFeature:]
  -[SKJSUIAnimatorDOMFeature animate::]


SKUILockupSwooshArtworkLoader : SKUISwooshArtworkLoader
 @property  SKUILockupSwooshViewController *swooshViewController

  // instance methods
  -[SKUILockupSwooshArtworkLoader .cxx_destruct]
  -[SKUILockupSwooshArtworkLoader placeholderImageForItem:]
  -[SKUILockupSwooshArtworkLoader initWithArtworkLoader:swoosh:]
  -[SKUILockupSwooshArtworkLoader setImage:forRequest:]
  -[SKUILockupSwooshArtworkLoader loadImagesForNextPageWithReason:]
  -[SKUILockupSwooshArtworkLoader loadImageForItem:reason:]
  -[SKUILockupSwooshArtworkLoader loadImageForVideo:reason:]
  -[SKUILockupSwooshArtworkLoader cachedImageForItem:]
  -[SKUILockupSwooshArtworkLoader cachedImageForVideo:]
  -[SKUILockupSwooshArtworkLoader placeholderImageForVideo:]


SKUIOnboardingAffiliationItem : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  UIColor *fillColor
 @property  NSString *identifier
 @property  NSString *imageName
 @property  NSString *imageTreatment
 @property  NSURL *imageURL
 @property  NSString *title
 @property  long long userAffinityCount

  // instance methods
  -[SKUIOnboardingAffiliationItem isEqual:]
  -[SKUIOnboardingAffiliationItem copyWithZone:]
  -[SKUIOnboardingAffiliationItem .cxx_destruct]
  -[SKUIOnboardingAffiliationItem identifier]
  -[SKUIOnboardingAffiliationItem setIdentifier:]
  -[SKUIOnboardingAffiliationItem title]
  -[SKUIOnboardingAffiliationItem setTitle:]
  -[SKUIOnboardingAffiliationItem fillColor]
  -[SKUIOnboardingAffiliationItem setFillColor:]
  -[SKUIOnboardingAffiliationItem setImageName:]
  -[SKUIOnboardingAffiliationItem imageName]
  -[SKUIOnboardingAffiliationItem imageURL]
  -[SKUIOnboardingAffiliationItem setImageURL:]
  -[SKUIOnboardingAffiliationItem imageTreatment]
  -[SKUIOnboardingAffiliationItem userAffinityCount]
  -[SKUIOnboardingAffiliationItem setUserAffinityCount:]
  -[SKUIOnboardingAffiliationItem setImageTreatment:]


SKUICounterViewElement : SKUIViewElement
 @property  long long counterType
 @property  SKUIImageViewElement *backgroundImageElement
 @property  long long dateFormatType
 @property  NSDate *endDate
 @property  double changeRatePerSecond
 @property  NSString *numberFormat
 @property  NSDate *startValueDate
 @property  long long startValue
 @property  long long stopValue

  // instance methods
  -[SKUICounterViewElement .cxx_destruct]
  -[SKUICounterViewElement endDate]
  -[SKUICounterViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUICounterViewElement applyUpdatesWithElement:]
  -[SKUICounterViewElement numberFormat]
  -[SKUICounterViewElement backgroundImageElement]
  -[SKUICounterViewElement stopValue]
  -[SKUICounterViewElement startValueDate]
  -[SKUICounterViewElement changeRatePerSecond]
  -[SKUICounterViewElement startValue]
  -[SKUICounterViewElement counterType]
  -[SKUICounterViewElement dateFormatType]
  -[SKUICounterViewElement currentNumberValue]


SKUIOnboardingInstructionsView : UIView /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} contentInset
 @property  UILabel *explanationLabel
 @property  UILabel *titleLabel
 @property  long long contentPosition

  // class methods
  +[SKUIOnboardingInstructionsView titleAttributedStringWithString:]
  +[SKUIOnboardingInstructionsView explanationAttributedStringWithString:]

  // instance methods
  -[SKUIOnboardingInstructionsView .cxx_destruct]
  -[SKUIOnboardingInstructionsView setBackgroundColor:]
  -[SKUIOnboardingInstructionsView initWithFrame:]
  -[SKUIOnboardingInstructionsView titleLabel]
  -[SKUIOnboardingInstructionsView layoutSubviews]
  -[SKUIOnboardingInstructionsView setContentInset:]
  -[SKUIOnboardingInstructionsView contentInset]
  -[SKUIOnboardingInstructionsView _newExplanationLabel]
  -[SKUIOnboardingInstructionsView explanationLabel]
  -[SKUIOnboardingInstructionsView setContentPosition:]
  -[SKUIOnboardingInstructionsView pushLabelState]
  -[SKUIOnboardingInstructionsView popLabelState]
  -[SKUIOnboardingInstructionsView _newTitleLabel]
  -[SKUIOnboardingInstructionsView setContentPosition:animated:completionBlock:]
  -[SKUIOnboardingInstructionsView contentPosition]


SKUICardViewElementCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIAdvertisingSelectable, SKUIAdvertisingSelectionForardingTargetAction, SKUIPerspectiveView, SKUIViewElementView>
 @property  UIView *adCardBackgroundView
 @property  CALayer *compactAdCardHairlineLayer
 @property  SKUISizeValue *artworkBoundingSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *lineItem
 @property  NSString *impressionIdentifier

  // class methods
  +[SKUICardViewElementCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUICardViewElementCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUICardViewElementCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUICardViewElementCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUICardViewElementCollectionViewCell maximumPerspectiveHeightForSize:]
  +[SKUICardViewElementCollectionViewCell _defaultWidthForLockupWithContext:]
  +[SKUICardViewElementCollectionViewCell artworkBoundingSizeWithViewElement:width:context:]

  // instance methods
  -[SKUICardViewElementCollectionViewCell .cxx_destruct]
  -[SKUICardViewElementCollectionViewCell setBackgroundColor:]
  -[SKUICardViewElementCollectionViewCell initWithFrame:]
  -[SKUICardViewElementCollectionViewCell layoutSubviews]
  -[SKUICardViewElementCollectionViewCell canPerformAction:withSender:]
  -[SKUICardViewElementCollectionViewCell setSelected:]
  -[SKUICardViewElementCollectionViewCell applyLayoutAttributes:]
  -[SKUICardViewElementCollectionViewCell lineItem]
  -[SKUICardViewElementCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUICardViewElementCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUICardViewElementCollectionViewCell updateWithItemState:context:animated:]
  -[SKUICardViewElementCollectionViewCell viewForElementIdentifier:]
  -[SKUICardViewElementCollectionViewCell _buttonAction:]
  -[SKUICardViewElementCollectionViewCell setPerspectiveTargetView:]
  -[SKUICardViewElementCollectionViewCell setVanishingPoint:]
  -[SKUICardViewElementCollectionViewCell updateForChangedDistanceFromVanishingPoint]
  -[SKUICardViewElementCollectionViewCell _imageTapAction:]
  -[SKUICardViewElementCollectionViewCell setArtworkBoundingSize:]
  -[SKUICardViewElementCollectionViewCell adCardBackgroundView]
  -[SKUICardViewElementCollectionViewCell compactAdCardHairlineLayer]
  -[SKUICardViewElementCollectionViewCell _dividerHeight:]
  -[SKUICardViewElementCollectionViewCell _performDefaultActionForViewElement:]
  -[SKUICardViewElementCollectionViewCell impressionIdentifier]
  -[SKUICardViewElementCollectionViewCell skuiadvertising_advertSelectionEventShouldBeForwarded:]
  -[SKUICardViewElementCollectionViewCell artworkBoundingSize]
  -[SKUICardViewElementCollectionViewCell setAdCardBackgroundView:]
  -[SKUICardViewElementCollectionViewCell setCompactAdCardHairlineLayer:]


SKUIBackgroundImageWrapperForHorizontalLockup : SKUIImageView
 @property  SKUIHorizontalLockupView *lockup
 @property  SKUIImageView *imageView

  // instance methods
  -[SKUIBackgroundImageWrapperForHorizontalLockup .cxx_destruct]
  -[SKUIBackgroundImageWrapperForHorizontalLockup setImage:]
  -[SKUIBackgroundImageWrapperForHorizontalLockup initWithImage:]
  -[SKUIBackgroundImageWrapperForHorizontalLockup imageView]
  -[SKUIBackgroundImageWrapperForHorizontalLockup setImageView:]
  -[SKUIBackgroundImageWrapperForHorizontalLockup lockup]
  -[SKUIBackgroundImageWrapperForHorizontalLockup setLockup:]


SKUIStyledButton : UIControl /usr/lib/libobjc.A.dylib <SKUIViewElementOfferButton>
 @property  double baselineOffset
 @property  {UIEdgeInsets=dddd} bigHitInsets
 @property  double firstBaselineOffset
 @property  SKUIButtonBorderStyle *borderStyle
 @property  {UIEdgeInsets=dddd} buttonPadding
 @property  long long buttonType
 @property  double imageTextPaddingInterior
 @property  SKUIImageView *imageView
 @property  double imageYAdjustment
 @property  SKUIAttributedStringLayout *titleLayout
 @property  BOOL useBigHitTarget
 @property  BOOL usesTintColor
 @property  BOOL usingItemOfferAppearance
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SKUIItemOfferButtonDelegate> *itemOfferDelegate

  // class methods
  +[SKUIStyledButton sizeForTextSize:buttonType:borderStyle:interiorPadding:]
  +[SKUIStyledButton usesItemOfferAppearanceForButtonType:itemState:]
  +[SKUIStyledButton buttonTypeForElement:]
  +[SKUIStyledButton sizeForTextSize:buttonType:]
  +[SKUIStyledButton sizeForTextSize:buttonType:borderStyle:]

  // instance methods
  -[SKUIStyledButton dealloc]
  -[SKUIStyledButton setEnabled:]
  -[SKUIStyledButton .cxx_destruct]
  -[SKUIStyledButton baselineOffset]
  -[SKUIStyledButton firstBaselineOffset]
  -[SKUIStyledButton setBackgroundColor:]
  -[SKUIStyledButton initWithFrame:]
  -[SKUIStyledButton sizeThatFits:]
  -[SKUIStyledButton layoutSubviews]
  -[SKUIStyledButton imageView]
  -[SKUIStyledButton setHighlighted:]
  -[SKUIStyledButton pointInside:withEvent:]
  -[SKUIStyledButton touchesBegan:withEvent:]
  -[SKUIStyledButton touchesEnded:withEvent:]
  -[SKUIStyledButton tintColorDidChange]
  -[SKUIStyledButton animationDidStop:finished:]
  -[SKUIStyledButton buttonType]
  -[SKUIStyledButton _textColor]
  -[SKUIStyledButton setBorderStyle:]
  -[SKUIStyledButton _borderColor]
  -[SKUIStyledButton hitRect]
  -[SKUIStyledButton borderStyle]
  -[SKUIStyledButton setButtonType:]
  -[SKUIStyledButton _cancelConfirmationAction:]
  -[SKUIStyledButton _showConfirmationAction:]
  -[SKUIStyledButton setItemOfferDelegate:]
  -[SKUIStyledButton setValuesUsingBuyButtonDescriptor:itemState:clientContext:animated:]
  -[SKUIStyledButton _textBackgroundColor]
  -[SKUIStyledButton _reloadImageView]
  -[SKUIStyledButton _reloadDisclosureImage]
  -[SKUIStyledButton setTitleLayout:forceRefresh:]
  -[SKUIStyledButton titleLayout]
  -[SKUIStyledButton _reloadOverrideTextColor]
  -[SKUIStyledButton isUsingItemOfferAppearance]
  -[SKUIStyledButton _itemOfferButtonAction:]
  -[SKUIStyledButton _borderFillColor]
  -[SKUIStyledButton buttonPadding]
  -[SKUIStyledButton _usesTintColor]
  -[SKUIStyledButton itemOfferDelegate]
  -[SKUIStyledButton setTitleLayout:]
  -[SKUIStyledButton setUsesTintColor:]
  -[SKUIStyledButton bigHitInsets]
  -[SKUIStyledButton setBigHitInsets:]
  -[SKUIStyledButton imageTextPaddingInterior]
  -[SKUIStyledButton setImageTextPaddingInterior:]
  -[SKUIStyledButton imageYAdjustment]
  -[SKUIStyledButton setImageYAdjustment:]
  -[SKUIStyledButton useBigHitTarget]
  -[SKUIStyledButton setUseBigHitTarget:]
  -[SKUIStyledButton usesTintColor]
  -[SKUIStyledButton setButtonPadding:]


SKUILockupSwooshViewController : SKUISwooshViewController <UICollectionViewDataSource, UICollectionViewDelegate>
 @property  BOOL seeAllHidden
 @property  SKUIItemArtworkContext *artworkContext
 @property  SKUIVideoImageDataConsumer *videoImageConsumer
 @property  NSArray *items
 @property  NSArray *lockups
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} seeAllButtonFrame
 @property  NSURL *seeAllURL
 @property  long long swooshType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUILockupSwooshViewController _swooshTypeForLockups:]

  // instance methods
  -[SKUILockupSwooshViewController dealloc]
  -[SKUILockupSwooshViewController setDelegate:]
  -[SKUILockupSwooshViewController .cxx_destruct]
  -[SKUILockupSwooshViewController items]
  -[SKUILockupSwooshViewController loadView]
  -[SKUILockupSwooshViewController viewWillAppear:]
  -[SKUILockupSwooshViewController collectionView:numberOfItemsInSection:]
  -[SKUILockupSwooshViewController collectionView:cellForItemAtIndexPath:]
  -[SKUILockupSwooshViewController collectionView:didSelectItemAtIndexPath:]
  -[SKUILockupSwooshViewController indexPathsForVisibleItems]
  -[SKUILockupSwooshViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[SKUILockupSwooshViewController collectionView:layout:insetForSectionAtIndex:]
  -[SKUILockupSwooshViewController initWithItemList:]
  -[SKUILockupSwooshViewController setImage:forItemAtIndex:]
  -[SKUILockupSwooshViewController setClientContext:]
  -[SKUILockupSwooshViewController _seeAllAction:]
  -[SKUILockupSwooshViewController setColorScheme:]
  -[SKUILockupSwooshViewController artworkContext]
  -[SKUILockupSwooshViewController swooshType]
  -[SKUILockupSwooshViewController _newLockupComponentWithItem:defaultStyle:]
  -[SKUILockupSwooshViewController frameForItemAtIndex:]
  -[SKUILockupSwooshViewController deselectAllItems]
  -[SKUILockupSwooshViewController initWithSwoosh:]
  -[SKUILockupSwooshViewController popImageViewForItemAtIndex:]
  -[SKUILockupSwooshViewController unhideImages]
  -[SKUILockupSwooshViewController videoImageConsumer]
  -[SKUILockupSwooshViewController lockups]
  -[SKUILockupSwooshViewController setVideoThumbnail:forItemAtIndex:]
  -[SKUILockupSwooshViewController seeAllURL]
  -[SKUILockupSwooshViewController setLockups:]
  -[SKUILockupSwooshViewController _reloadSizes]
  -[SKUILockupSwooshViewController _lockupSwooshMetrics]
  -[SKUILockupSwooshViewController _newArtworkContextForSwooshType:]
  -[SKUILockupSwooshViewController _maximumCellSizeForImageSize:]
  -[SKUILockupSwooshViewController seeAllButtonFrame]
  -[SKUILockupSwooshViewController setItemsWithLockups:]
  -[SKUILockupSwooshViewController setSeeAllHidden:]
  -[SKUILockupSwooshViewController _setExpectedImageSize:]
  -[SKUILockupSwooshViewController setSwooshType:]
  -[SKUILockupSwooshViewController isSeeAllHidden]


SKUIPhysicalCirclesTemplateViewElement : SKUIViewElement
 @property  SKUILabelViewElement *subtitleElement
 @property  SKUILabelViewElement *titleElement
 @property  NSArray *circleItemElements
 @property  SKUIPaletteViewElement *footerPaletteElement
 @property  SKUIPhysicalCirclesTemplateDOMFeature *scriptInterface

  // class methods
  +[SKUIPhysicalCirclesTemplateViewElement supportedFeatures]

  // instance methods
  -[SKUIPhysicalCirclesTemplateViewElement .cxx_destruct]
  -[SKUIPhysicalCirclesTemplateViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIPhysicalCirclesTemplateViewElement scriptInterface]
  -[SKUIPhysicalCirclesTemplateViewElement circleItemElements]
  -[SKUIPhysicalCirclesTemplateViewElement dispatchRemovedEventWithChildViewElement:]
  -[SKUIPhysicalCirclesTemplateViewElement titleElement]
  -[SKUIPhysicalCirclesTemplateViewElement footerPaletteElement]
  -[SKUIPhysicalCirclesTemplateViewElement subtitleElement]


SKUILockupSwooshCellLayout : SKUIItemCellLayout
 @property  NSString *artistName
 @property  NSString *category
 @property  NSString *itemCountString
 @property  NSString *price
 @property  NSString *title
 @property  {CGSize=dd} videoSize
 @property  UIImage *videoThumbnailImage
 @property  {CGSize=dd} maxImageSize
 @property  unsigned long visibleFields

  // instance methods
  -[SKUILockupSwooshCellLayout .cxx_destruct]
  -[SKUILockupSwooshCellLayout category]
  -[SKUILockupSwooshCellLayout setCategory:]
  -[SKUILockupSwooshCellLayout title]
  -[SKUILockupSwooshCellLayout setTitle:]
  -[SKUILockupSwooshCellLayout setBackgroundColor:]
  -[SKUILockupSwooshCellLayout layoutSubviews]
  -[SKUILockupSwooshCellLayout setHighlighted:]
  -[SKUILockupSwooshCellLayout setSelected:]
  -[SKUILockupSwooshCellLayout price]
  -[SKUILockupSwooshCellLayout setPrice:]
  -[SKUILockupSwooshCellLayout artistName]
  -[SKUILockupSwooshCellLayout setArtistName:]
  -[SKUILockupSwooshCellLayout setItemCountString:]
  -[SKUILockupSwooshCellLayout setColoringWithColorScheme:]
  -[SKUILockupSwooshCellLayout _newDefaultLabel]
  -[SKUILockupSwooshCellLayout itemCountString]
  -[SKUILockupSwooshCellLayout setVisibleFields:]
  -[SKUILockupSwooshCellLayout visibleFields]
  -[SKUILockupSwooshCellLayout setItemOffer:]
  -[SKUILockupSwooshCellLayout setItemState:animated:]
  -[SKUILockupSwooshCellLayout initWithCollectionViewCell:]
  -[SKUILockupSwooshCellLayout videoThumbnailImage]
  -[SKUILockupSwooshCellLayout setVideoThumbnailImage:]
  -[SKUILockupSwooshCellLayout _reloadHighlight]
  -[SKUILockupSwooshCellLayout setMaxImageSize:]
  -[SKUILockupSwooshCellLayout setVideoSize:]
  -[SKUILockupSwooshCellLayout cellSizeForImageOfSize:]
  -[SKUILockupSwooshCellLayout _layoutFieldsHorizontal]
  -[SKUILockupSwooshCellLayout _layoutFieldsVertical]
  -[SKUILockupSwooshCellLayout _reloadPriceLabel]
  -[SKUILockupSwooshCellLayout _removeHighlightViews]
  -[SKUILockupSwooshCellLayout maxImageSize]
  -[SKUILockupSwooshCellLayout videoSize]


SKUIShareTemplateActivity : UIActivity /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIShareTemplateActivity .cxx_destruct]
  -[SKUIShareTemplateActivity activityType]
  -[SKUIShareTemplateActivity activityTitle]
  -[SKUIShareTemplateActivity canPerformWithActivityItems:]
  -[SKUIShareTemplateActivity activityImage]
  -[SKUIShareTemplateActivity performActivity]
  -[SKUIShareTemplateActivity _beforeActivity]
  -[SKUIShareTemplateActivity initWithActivityViewElement:clientContext:]


SKUILockupSwooshCollectionViewCell : SKUIItemCollectionViewCell
 @property  SKUILockupSwooshCellLayout *layout

  // instance methods
  -[SKUILockupSwooshCollectionViewCell .cxx_destruct]
  -[SKUILockupSwooshCollectionViewCell layout]
  -[SKUILockupSwooshCollectionViewCell initWithFrame:]
  -[SKUILockupSwooshCollectionViewCell configureForItem:clientContext:]


SKUIBrowseHeaderCollectionViewCell : SKUICollectionViewCell
 @property  NSString *title

  // instance methods
  -[SKUIBrowseHeaderCollectionViewCell .cxx_destruct]
  -[SKUIBrowseHeaderCollectionViewCell title]
  -[SKUIBrowseHeaderCollectionViewCell setTitle:]
  -[SKUIBrowseHeaderCollectionViewCell initWithFrame:]


SKUIViewControllerContainerCollectionViewCell : UICollectionViewCell /usr/lib/libobjc.A.dylib
 @property  double maximumContentWidth
 @property  UIViewController *viewController
 @property  UIView *viewControllerContainerView
 @property  BOOL managesViewControllerContainerViewLayout
 @property  NSIndexPath *indexPath

  // instance methods
  -[SKUIViewControllerContainerCollectionViewCell .cxx_destruct]
  -[SKUIViewControllerContainerCollectionViewCell indexPath]
  -[SKUIViewControllerContainerCollectionViewCell setViewController:]
  -[SKUIViewControllerContainerCollectionViewCell initWithFrame:]
  -[SKUIViewControllerContainerCollectionViewCell layoutSubviews]
  -[SKUIViewControllerContainerCollectionViewCell viewController]
  -[SKUIViewControllerContainerCollectionViewCell applyLayoutAttributes:]
  -[SKUIViewControllerContainerCollectionViewCell setMaximumContentWidth:]
  -[SKUIViewControllerContainerCollectionViewCell maximumContentWidth]
  -[SKUIViewControllerContainerCollectionViewCell setManagesViewControllerContainerViewLayout:]
  -[SKUIViewControllerContainerCollectionViewCell viewControllerContainerView]
  -[SKUIViewControllerContainerCollectionViewCell managesViewControllerContainerViewLayout]


SKUIJSApplication : IKJSApplication /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIJSApplication>
 @property  SKUIApplicationController *applicationController
 @property  BOOL pageRenderMetricsEnabled
 @property  BOOL isRunningTests

  // instance methods
  -[SKUIJSApplication .cxx_destruct]
  -[SKUIJSApplication isRunningTests]
  -[SKUIJSApplication applicationController]
  -[SKUIJSApplication pageRenderMetricsEnabled]
  -[SKUIJSApplication launchFailed]
  -[SKUIJSApplication launchComplete:]
  -[SKUIJSApplication sendDocumentMessage:::]
  -[SKUIJSApplication initWithAppContext:applicationController:]


SKUIGiftThemePickerFlowLayout : UICollectionViewFlowLayout /usr/lib/libobjc.A.dylib
 @property  long long currentPage

  // instance methods
  -[SKUIGiftThemePickerFlowLayout targetContentOffsetForProposedContentOffset:]
  -[SKUIGiftThemePickerFlowLayout setCurrentPage:]
  -[SKUIGiftThemePickerFlowLayout currentPage]


SKUIProgrammedCardLayout : SKUICardLayout
  // class methods
  +[SKUIProgrammedCardLayout allowsViewElement:]

  // instance methods
  -[SKUIProgrammedCardLayout layoutStyle]
  -[SKUIProgrammedCardLayout horizontalContentInset]
  -[SKUIProgrammedCardLayout attributedStringForButton:]
  -[SKUIProgrammedCardLayout attributedStringForLabel:]
  -[SKUIProgrammedCardLayout topInsetForViewElement:previousViewElement:width:]
  -[SKUIProgrammedCardLayout bottomInsetForLastViewElement:width:]
  -[SKUIProgrammedCardLayout _fontForButton:]
  -[SKUIProgrammedCardLayout _fontForLabel:]
  -[SKUIProgrammedCardLayout _stringLayoutForViewElement:width:]


SKUIToolbarButtonsController : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUIToolbarButtonsController .cxx_destruct]
  -[SKUIToolbarButtonsController _buttonAction:]
  -[SKUIToolbarButtonsController _updateButtonItem:withButtonViewElement:]
  -[SKUIToolbarButtonsController initWithToolbarViewElement:]
  -[SKUIToolbarButtonsController addButtonItemWithButtonViewElement:]
  -[SKUIToolbarButtonsController disconnectAllButtons]


SKUIPhysicalCirclesTemplateDOMFeature : NSObject /usr/lib/libc++.1.dylib <SKUIDOMFeature>
 @property  <SKUIPhysicalCirclesTemplateDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *featureName
 @property  IKAppContext *appContext

  // class methods
  +[SKUIPhysicalCirclesTemplateDOMFeature featureName]
  +[SKUIPhysicalCirclesTemplateDOMFeature makeFeatureJSObjectForFeature:]

  // instance methods
  -[SKUIPhysicalCirclesTemplateDOMFeature delegate]
  -[SKUIPhysicalCirclesTemplateDOMFeature setDelegate:]
  -[SKUIPhysicalCirclesTemplateDOMFeature .cxx_destruct]
  -[SKUIPhysicalCirclesTemplateDOMFeature featureName]
  -[SKUIPhysicalCirclesTemplateDOMFeature appContext]
  -[SKUIPhysicalCirclesTemplateDOMFeature initWithDOMNode:featureName:]
  -[SKUIPhysicalCirclesTemplateDOMFeature finishDOMUpdates]
  -[SKUIPhysicalCirclesTemplateDOMFeature popPendingAnimationRequests]
  -[SKUIPhysicalCirclesTemplateDOMFeature _addDOMUpdateBlock:]
  -[SKUIPhysicalCirclesTemplateDOMFeature _requestAnimation:]


SKUIPhysicalCirclesAnimationRequest : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long animationType

  // instance methods
  -[SKUIPhysicalCirclesAnimationRequest copyWithZone:]
  -[SKUIPhysicalCirclesAnimationRequest .cxx_destruct]
  -[SKUIPhysicalCirclesAnimationRequest animationType]
  -[SKUIPhysicalCirclesAnimationRequest setAnimationType:]
  -[SKUIPhysicalCirclesAnimationRequest finishAnimation]
  -[SKUIPhysicalCirclesAnimationRequest _setCompletionBlock:]


SKUIJSPhysicalCirclesTemplate : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIJSPhysicalCirclesTemplate>
  // instance methods
  -[SKUIJSPhysicalCirclesTemplate .cxx_destruct]
  -[SKUIJSPhysicalCirclesTemplate initWithAppContext:DOMFeature:]
  -[SKUIJSPhysicalCirclesTemplate _performAnimationWithType:callback:]
  -[SKUIJSPhysicalCirclesTemplate afterDOMUpdate:]
  -[SKUIJSPhysicalCirclesTemplate performFinishAnimation:]
  -[SKUIJSPhysicalCirclesTemplate performResetAnimation:]


SKUISwooshArrayViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIMetricsViewController, SKUISwooshViewControllerDelegate, UIScrollViewDelegate, SKUIProductPageChildViewController>
 @property  NSArray *swooshComponents
 @property  SKUIClientContext *clientContext
 @property  SKUIMetricsController *metricsController
 @property  SKUIColorScheme *colorScheme
 @property  <SKUIProductPageChildViewControllerDelegate> *delegate
 @property  NSOperationQueue *operationQueue
 @property  BOOL askPermission
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIScrollView *scrollView
 @property  SKUIProductPageHeaderViewController *headerViewController

  // instance methods
  -[SKUISwooshArrayViewController dealloc]
  -[SKUISwooshArrayViewController delegate]
  -[SKUISwooshArrayViewController setDelegate:]
  -[SKUISwooshArrayViewController .cxx_destruct]
  -[SKUISwooshArrayViewController operationQueue]
  -[SKUISwooshArrayViewController setOperationQueue:]
  -[SKUISwooshArrayViewController loadView]
  -[SKUISwooshArrayViewController scrollViewDidScroll:]
  -[SKUISwooshArrayViewController viewWillAppear:]
  -[SKUISwooshArrayViewController _scrollView]
  -[SKUISwooshArrayViewController scrollView]
  -[SKUISwooshArrayViewController headerViewController]
  -[SKUISwooshArrayViewController setHeaderViewController:]
  -[SKUISwooshArrayViewController clientContext]
  -[SKUISwooshArrayViewController setClientContext:]
  -[SKUISwooshArrayViewController metricsController]
  -[SKUISwooshArrayViewController setMetricsController:]
  -[SKUISwooshArrayViewController setAskPermission:]
  -[SKUISwooshArrayViewController colorScheme]
  -[SKUISwooshArrayViewController setColorScheme:]
  -[SKUISwooshArrayViewController activeMetricsController]
  -[SKUISwooshArrayViewController _artworkLoader]
  -[SKUISwooshArrayViewController swoosh:imageForCellAtIndex:]
  -[SKUISwooshArrayViewController swoosh:didSelectCellAtIndex:]
  -[SKUISwooshArrayViewController swooshDidSelectSeeAll:]
  -[SKUISwooshArrayViewController _loadMissingItemsIfNecessary]
  -[SKUISwooshArrayViewController _reloadChildViewControllers]
  -[SKUISwooshArrayViewController _addHeaderView]
  -[SKUISwooshArrayViewController _clickEventWithItem:]
  -[SKUISwooshArrayViewController _clickEventForSeeAllForViewController:]
  -[SKUISwooshArrayViewController _layoutSwooshViews]
  -[SKUISwooshArrayViewController _addMissingItemsWithResponse:error:]
  -[SKUISwooshArrayViewController initWithSwooshComponents:]
  -[SKUISwooshArrayViewController loadMissingItemData]
  -[SKUISwooshArrayViewController isSkLoaded]
  -[SKUISwooshArrayViewController setSwooshComponents:]
  -[SKUISwooshArrayViewController askPermission]
  -[SKUISwooshArrayViewController swooshComponents]


SKUIMetricsPageRenderEvent : SSMetricsBaseEvent /System/Library/Frameworks/UIKit.framework/UIKit <SKUIInspectableObject>
 @property  NSString *clientCorrelationKey
 @property  NSString *launchCorrelationKey
 @property  double pageRequestedTime
 @property  double pageAppearTime
 @property  double pageDisappearTime
 @property  double platformRequestStartTime
 @property  double platformResponseStartTime
 @property  double platformResponseEndTime
 @property  BOOL platformResponseWasCached
 @property  double platformJsonParseStartTime
 @property  double platformJsonParseEndTime
 @property  NSArray *domChanges
 @property  NSArray *requests
 @property  double resourceRequestStartTime
 @property  double resourceRequestOnScreenEndTime
 @property  double resourceRequestEndTime
 @property  double pageUserReadyTime
 @property  double xpSessionDuration
 @property  BOOL xpSamplingForced
 @property  double xpSamplingPercentageUsers
 @property  NSDictionary *metricsBase
 @property  BOOL readyForSubmission
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIMetricsPageRenderEvent _randomDouble]
  +[SKUIMetricsPageRenderEvent _sampleWindowStartTime]
  +[SKUIMetricsPageRenderEvent _setSampleWindowStartTime:]
  +[SKUIMetricsPageRenderEvent shouldCollectPageRenderData]
  +[SKUIMetricsPageRenderEvent shouldCollectPageRenderDataForDocument:]

  // instance methods
  -[SKUIMetricsPageRenderEvent init]
  -[SKUIMetricsPageRenderEvent .cxx_destruct]
  -[SKUIMetricsPageRenderEvent requests]
  -[SKUIMetricsPageRenderEvent addRequest:]
  -[SKUIMetricsPageRenderEvent setClientCorrelationKey:]
  -[SKUIMetricsPageRenderEvent clientCorrelationKey]
  -[SKUIMetricsPageRenderEvent xpSessionDuration]
  -[SKUIMetricsPageRenderEvent xpSamplingForced]
  -[SKUIMetricsPageRenderEvent xpSamplingPercentageUsers]
  -[SKUIMetricsPageRenderEvent setXPSamplingForced:]
  -[SKUIMetricsPageRenderEvent setXPSessionDuration:]
  -[SKUIMetricsPageRenderEvent setXPSamplingPercentageUsers:]
  -[SKUIMetricsPageRenderEvent appendPropertiesToBody:]
  -[SKUIMetricsPageRenderEvent pageAppearTime]
  -[SKUIMetricsPageRenderEvent resourceRequestStartTime]
  -[SKUIMetricsPageRenderEvent resourceRequestOnScreenEndTime]
  -[SKUIMetricsPageRenderEvent resourceRequestEndTime]
  -[SKUIMetricsPageRenderEvent pageUserReadyTime]
  -[SKUIMetricsPageRenderEvent domChanges]
  -[SKUIMetricsPageRenderEvent launchCorrelationKey]
  -[SKUIMetricsPageRenderEvent pageRequestedTime]
  -[SKUIMetricsPageRenderEvent pageDisappearTime]
  -[SKUIMetricsPageRenderEvent platformRequestStartTime]
  -[SKUIMetricsPageRenderEvent platformResponseStartTime]
  -[SKUIMetricsPageRenderEvent platformResponseEndTime]
  -[SKUIMetricsPageRenderEvent platformResponseWasCached]
  -[SKUIMetricsPageRenderEvent platformJsonParseStartTime]
  -[SKUIMetricsPageRenderEvent platformJsonParseEndTime]
  -[SKUIMetricsPageRenderEvent metricsBase]
  -[SKUIMetricsPageRenderEvent populateObjectInspector:]
  -[SKUIMetricsPageRenderEvent setLaunchCorrelationKey:]
  -[SKUIMetricsPageRenderEvent setPageRequestedTime:]
  -[SKUIMetricsPageRenderEvent setPageAppearTime:]
  -[SKUIMetricsPageRenderEvent setPageDisappearTime:]
  -[SKUIMetricsPageRenderEvent setPlatformRequestStartTime:]
  -[SKUIMetricsPageRenderEvent setPlatformResponseStartTime:]
  -[SKUIMetricsPageRenderEvent setPlatformResponseEndTime:]
  -[SKUIMetricsPageRenderEvent setPlatformResponseWasCached:]
  -[SKUIMetricsPageRenderEvent setPlatformJsonParseStartTime:]
  -[SKUIMetricsPageRenderEvent setPlatformJsonParseEndTime:]
  -[SKUIMetricsPageRenderEvent addDOMChange:]
  -[SKUIMetricsPageRenderEvent setResourceRequestStartTime:]
  -[SKUIMetricsPageRenderEvent setResourceRequestOnScreenEndTime:]
  -[SKUIMetricsPageRenderEvent setResourceRequestEndTime:]
  -[SKUIMetricsPageRenderEvent setPageUserReadyTime:]
  -[SKUIMetricsPageRenderEvent appendMetricsBaseProperties:]
  -[SKUIMetricsPageRenderEvent appendSamplingPropertiesFromClientContext:]
  -[SKUIMetricsPageRenderEvent isReadyForSubmission]
  -[SKUIMetricsPageRenderEvent setMetricsBase:]


SKUIReviewInAppRatingControlViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  SKUIStarRatingControl *ratingControl

  // instance methods
  -[SKUIReviewInAppRatingControlViewController initWithCoder:]
  -[SKUIReviewInAppRatingControlViewController .cxx_destruct]
  -[SKUIReviewInAppRatingControlViewController commonInit]
  -[SKUIReviewInAppRatingControlViewController initWithNibName:bundle:]
  -[SKUIReviewInAppRatingControlViewController preferredContentSize]
  -[SKUIReviewInAppRatingControlViewController viewDidLoad]
  -[SKUIReviewInAppRatingControlViewController viewDidLayoutSubviews]
  -[SKUIReviewInAppRatingControlViewController ratingControl]
  -[SKUIReviewInAppRatingControlViewController _repeatedTemplateImageForImage:]
  -[SKUIReviewInAppRatingControlViewController setRatingControl:]


SKUISignInViewElement : SKUIViewElement
  // instance methods
  -[SKUISignInViewElement initWithDOMElement:parent:elementFactory:]


SKUIContentInsetScrollView : UIScrollView /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIContentInsetScrollView setScrollIndicatorInsets:]


SKUIPropertyPredicateViewElement : SKUIPredicateViewElement
 @property  long long comparisonType
 @property  NSString *property
 @property  NSString *value

  // class methods
  +[SKUIPropertyPredicateViewElement shouldParseChildDOMElements]

  // instance methods
  -[SKUIPropertyPredicateViewElement .cxx_destruct]
  -[SKUIPropertyPredicateViewElement value]
  -[SKUIPropertyPredicateViewElement property]
  -[SKUIPropertyPredicateViewElement comparisonType]
  -[SKUIPropertyPredicateViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIPropertyPredicateViewElement applyUpdatesWithElement:]
  -[SKUIPropertyPredicateViewElement entityValuePredicate]


SKUIFilterBarViewElement : SKUIViewElement
 @property  SKUIDividerViewElement *bottomDivider

  // instance methods
  -[SKUIFilterBarViewElement bottomDivider]
  -[SKUIFilterBarViewElement enumerateChildrenUsingBlock:]
  -[SKUIFilterBarViewElement pageComponentType]
  -[SKUIFilterBarViewElement childViewElementsForAlignment:]


SKUIApplicationLicenseDataConsumer : SSVURLProtocolConsumer /System/Library/Frameworks/UIKit.framework/UIKit
  // instance methods
  -[SKUIApplicationLicenseDataConsumer objectForData:response:error:]
  -[SKUIApplicationLicenseDataConsumer applicationLicenseWithDictionary:]


SKUISizeValue : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  {CGSize=dd} size

  // instance methods
  -[SKUISizeValue isEqual:]
  -[SKUISizeValue copyWithZone:]
  -[SKUISizeValue size]
  -[SKUISizeValue initWithSize:]
  -[SKUISizeValue unionWithSize:]


SKUISegmentedControlViewElement : SKUIViewElement
 @property  SKUIDividerViewElement *bottomDivider
 @property  long long initialSelectedItemIndex
 @property  long long maximumNumberOfVisibleItems
 @property  NSString *moreListTitle
 @property  NSArray *segmentItemTitles

  // instance methods
  -[SKUISegmentedControlViewElement .cxx_destruct]
  -[SKUISegmentedControlViewElement bottomDivider]
  -[SKUISegmentedControlViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUISegmentedControlViewElement applyUpdatesWithElement:]
  -[SKUISegmentedControlViewElement pageComponentType]
  -[SKUISegmentedControlViewElement dispatchEventOfType:forItemAtIndex:]
  -[SKUISegmentedControlViewElement segmentItemTitles]
  -[SKUISegmentedControlViewElement moreListTitle]
  -[SKUISegmentedControlViewElement initialSelectedItemIndex]
  -[SKUISegmentedControlViewElement maximumNumberOfVisibleItems]
  -[SKUISegmentedControlViewElement _enumerateItemElementsUsingBlock:]


SKUISwooshArtworkLoader : NSObject /usr/lib/libc++.1.dylib <SKUIArtworkRequestDelegate>
 @property  SKUIResourceLoader *artworkLoader
 @property  SKUISwooshViewController *swooshViewController
 @property  SKUIImageDataConsumer *imageDataConsumer
 @property  UIImage *placeholderImage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUISwooshArtworkLoader .cxx_destruct]
  -[SKUISwooshArtworkLoader placeholderImage]
  -[SKUISwooshArtworkLoader artworkRequest:didLoadImage:]
  -[SKUISwooshArtworkLoader artworkLoader]
  -[SKUISwooshArtworkLoader imageDataConsumer]
  -[SKUISwooshArtworkLoader setImageDataConsumer:]
  -[SKUISwooshArtworkLoader initWithArtworkLoader:swoosh:]
  -[SKUISwooshArtworkLoader cachedImageForObject:]
  -[SKUISwooshArtworkLoader loadImageForObject:URL:reason:]
  -[SKUISwooshArtworkLoader swooshViewController]
  -[SKUISwooshArtworkLoader artworkRequestIdentifierForObject:]
  -[SKUISwooshArtworkLoader setImage:forRequest:]
  -[SKUISwooshArtworkLoader loadImagesForNextPageWithReason:]
  -[SKUISwooshArtworkLoader deprioritizePendingImageLoads]
  -[SKUISwooshArtworkLoader setPlaceholderColorWithColorScheme:]
  -[SKUISwooshArtworkLoader loadImageForObject:artworkRequest:reason:]
  -[SKUISwooshArtworkLoader cancelImageLoading]


SKUIBadgeLabel : UILabel /usr/lib/libobjc.A.dylib
  // class methods
  +[SKUIBadgeLabel defaultTextColor]
  +[SKUIBadgeLabel defaultBackgroundColor]

  // instance methods
  -[SKUIBadgeLabel initWithFrame:]
  -[SKUIBadgeLabel sizeThatFits:]
  -[SKUIBadgeLabel drawTextInRect:]


SKUIShapeView : UIView /usr/lib/libobjc.A.dylib
 @property  CAShapeLayer *layer

  // class methods
  +[SKUIShapeView layerClass]


SKUISegmentedControlCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUISegmentedControlCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUISegmentedControlCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUISegmentedControlCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUISegmentedControlCollectionViewCell sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUISegmentedControlCollectionViewCell .cxx_destruct]
  -[SKUISegmentedControlCollectionViewCell layoutSubviews]
  -[SKUISegmentedControlCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUISegmentedControlCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUISegmentedControlCollectionViewCell updateWithItemState:context:animated:]
  -[SKUISegmentedControlCollectionViewCell viewForElementIdentifier:]


SKUIIPadDownloadsViewController : UIViewController /usr/lib/libobjc.A.dylib <UICollectionViewDelegate, UICollectionViewDataSource>
 @property  SKUIClientContext *clientContext
 @property  NSArray *downloads
 @property  <SKUIDownloadsChildViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIIPadDownloadsViewController delegate]
  -[SKUIIPadDownloadsViewController setDelegate:]
  -[SKUIIPadDownloadsViewController .cxx_destruct]
  -[SKUIIPadDownloadsViewController loadView]
  -[SKUIIPadDownloadsViewController collectionView:numberOfItemsInSection:]
  -[SKUIIPadDownloadsViewController collectionView:cellForItemAtIndexPath:]
  -[SKUIIPadDownloadsViewController viewDidLayoutSubviews]
  -[SKUIIPadDownloadsViewController collectionView:shouldSelectItemAtIndexPath:]
  -[SKUIIPadDownloadsViewController collectionView:didSelectItemAtIndexPath:]
  -[SKUIIPadDownloadsViewController collectionView:didDeselectItemAtIndexPath:]
  -[SKUIIPadDownloadsViewController _cancelAction:]
  -[SKUIIPadDownloadsViewController clientContext]
  -[SKUIIPadDownloadsViewController setClientContext:]
  -[SKUIIPadDownloadsViewController downloads]
  -[SKUIIPadDownloadsViewController _reload]
  -[SKUIIPadDownloadsViewController setDownloads:]
  -[SKUIIPadDownloadsViewController reloadDownloadsAtIndexes:]
  -[SKUIIPadDownloadsViewController _reloadLayout]
  -[SKUIIPadDownloadsViewController _reloadNavigationItem]
  -[SKUIIPadDownloadsViewController _editAction:]
  -[SKUIIPadDownloadsViewController _deleteAction:]


SKUISwooshCollectionViewLayout : UICollectionViewFlowLayout /usr/lib/libobjc.A.dylib
 @property  UIColor *backgroundColor
 @property  BOOL snapsToItemBoundaries
 @property  BOOL snapsToItemCenters

  // class methods
  +[SKUISwooshCollectionViewLayout layoutAttributesClass]
  +[SKUISwooshCollectionViewLayout snapToBoundariesDecelerationRate]

  // instance methods
  -[SKUISwooshCollectionViewLayout init]
  -[SKUISwooshCollectionViewLayout .cxx_destruct]
  -[SKUISwooshCollectionViewLayout backgroundColor]
  -[SKUISwooshCollectionViewLayout setBackgroundColor:]
  -[SKUISwooshCollectionViewLayout layoutAttributesForElementsInRect:]
  -[SKUISwooshCollectionViewLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]
  -[SKUISwooshCollectionViewLayout setSnapsToItemBoundaries:]
  -[SKUISwooshCollectionViewLayout snapsToItemBoundaries]
  -[SKUISwooshCollectionViewLayout snapsToItemCenters]
  -[SKUISwooshCollectionViewLayout setSnapsToItemCenters:]


SKUISwooshView : UIView /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  UICollectionView *collectionView
 @property  {UIEdgeInsets=dddd} collectionViewInsets
 @property  UIControl *seeAllControl
 @property  NSString *seeAllTitle
 @property  UIControl *chevronTitleControl
 @property  BOOL showsChevronForTitle
 @property  NSString *title
 @property  UIColor *titleColor

  // instance methods
  -[SKUISwooshView .cxx_destruct]
  -[SKUISwooshView title]
  -[SKUISwooshView setTitle:]
  -[SKUISwooshView setBackgroundColor:]
  -[SKUISwooshView initWithFrame:]
  -[SKUISwooshView sizeThatFits:]
  -[SKUISwooshView layoutSubviews]
  -[SKUISwooshView collectionView]
  -[SKUISwooshView contentInsets]
  -[SKUISwooshView setContentInsets:]
  -[SKUISwooshView setCollectionView:]
  -[SKUISwooshView titleColor]
  -[SKUISwooshView setTitleColor:]
  -[SKUISwooshView setColoringWithColorScheme:]
  -[SKUISwooshView collectionViewInsets]
  -[SKUISwooshView setCollectionViewInsets:]
  -[SKUISwooshView seeAllTitle]
  -[SKUISwooshView chevronTitleControl]
  -[SKUISwooshView seeAllControl]
  -[SKUISwooshView setShowsChevronForTitle:]
  -[SKUISwooshView setSeeAllTitle:]
  -[SKUISwooshView _seeAllArrowImage]
  -[SKUISwooshView setSeeAllColor:forControlState:]
  -[SKUISwooshView showsChevronForTitle]
  -[SKUISwooshView seeAllColorForControlState:]


SKUIEntityProviderListViewElement : SKUIViewElement
  // instance methods
  -[SKUIEntityProviderListViewElement .cxx_destruct]
  -[SKUIEntityProviderListViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIEntityProviderListViewElement entityProviderWithIdentifier:]


SKUIRedeemWebResultsViewController : SKUIRedeemResultsViewController <SUStorePageViewControllerResponder>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIRedeemWebResultsViewController canShowResultsForRedeem:]

  // instance methods
  -[SKUIRedeemWebResultsViewController dealloc]
  -[SKUIRedeemWebResultsViewController viewDidLoad]
  -[SKUIRedeemWebResultsViewController storePage:finishedWithSuccess:]


SKUIToastViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  NSString *titleText
 @property  NSString *descriptionText
 @property  SKUIToastPresentationWindow *presentationWindow
 @property  UILabel *primaryLabel
 @property  UILabel *secondaryLabel
 @property  UIImageView *imageView
 @property  UIVisualEffectView *toastView
 @property  @? completion

  // class methods
  +[SKUIToastViewController _primaryLabelFont]
  +[SKUIToastViewController _secondaryLabelFont]
  +[SKUIToastViewController _fontWithSize:textStyleAttribute:]

  // instance methods
  -[SKUIToastViewController .cxx_destruct]
  -[SKUIToastViewController setCompletion:]
  -[SKUIToastViewController completion]
  -[SKUIToastViewController imageView]
  -[SKUIToastViewController viewWillAppear:]
  -[SKUIToastViewController viewDidLoad]
  -[SKUIToastViewController present]
  -[SKUIToastViewController viewDidLayoutSubviews]
  -[SKUIToastViewController setImageView:]
  -[SKUIToastViewController setTitleText:]
  -[SKUIToastViewController setPresentationWindow:]
  -[SKUIToastViewController presentationWindow]
  -[SKUIToastViewController titleText]
  -[SKUIToastViewController descriptionText]
  -[SKUIToastViewController setDescriptionText:]
  -[SKUIToastViewController initWithTitle:description:image:]
  -[SKUIToastViewController primaryLabel]
  -[SKUIToastViewController secondaryLabel]
  -[SKUIToastViewController setSecondaryLabel:]
  -[SKUIToastViewController setPrimaryLabel:]
  -[SKUIToastViewController toastView]
  -[SKUIToastViewController _dismissWithDelay:]
  -[SKUIToastViewController initWithDialogTemplate:]
  -[SKUIToastViewController presentFromViewController:completion:]
  -[SKUIToastViewController setToastView:]


SKUISwooshViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  SKUIClientContext *clientContext
 @property  SKUIColorScheme *colorScheme
 @property  <SKUISwooshViewControllerDelegate> *delegate

  // instance methods
  -[SKUISwooshViewController delegate]
  -[SKUISwooshViewController setDelegate:]
  -[SKUISwooshViewController .cxx_destruct]
  -[SKUISwooshViewController indexPathsForVisibleItems]
  -[SKUISwooshViewController setImage:forItemAtIndex:]
  -[SKUISwooshViewController clientContext]
  -[SKUISwooshViewController setClientContext:]
  -[SKUISwooshViewController colorScheme]
  -[SKUISwooshViewController setColorScheme:]
  -[SKUISwooshViewController frameForItemAtIndex:]
  -[SKUISwooshViewController deselectAllItems]
  -[SKUISwooshViewController popImageViewForItemAtIndex:]
  -[SKUISwooshViewController unhideImages]


SKUIDividerPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate>
 @property  SKUIDividerPageComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIDividerPageSection dealloc]
  -[SKUIDividerPageSection .cxx_destruct]
  -[SKUIDividerPageSection artworkRequest:didLoadImage:]
  -[SKUIDividerPageSection initWithPageComponent:]
  -[SKUIDividerPageSection backgroundColorForIndexPath:]
  -[SKUIDividerPageSection sectionContentInset]
  -[SKUIDividerPageSection willAppearInContext:]
  -[SKUIDividerPageSection cellForIndexPath:]
  -[SKUIDividerPageSection cellSizeForIndexPath:]
  -[SKUIDividerPageSection numberOfCells]
  -[SKUIDividerPageSection updateCellWithIndexPath:itemState:animated:]
  -[SKUIDividerPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIDividerPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIDividerPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIDividerPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIDividerPageSection _enumerateVisibleCellsUsingBlock:]
  -[SKUIDividerPageSection _requestCellLayout]


SKUIItemList : NSObject /usr/lib/libc++.1.dylib <SKUICacheCoding, NSCopying>
 @property  NSArray *items
 @property  NSString *seeAllTitle
 @property  NSString *seeAllURLString
 @property  NSString *title
 @property  NSSet *unavailableItemIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *cacheRepresentation

  // instance methods
  -[SKUIItemList copyWithZone:]
  -[SKUIItemList .cxx_destruct]
  -[SKUIItemList title]
  -[SKUIItemList setTitle:]
  -[SKUIItemList items]
  -[SKUIItemList setItems:]
  -[SKUIItemList addItem:]
  -[SKUIItemList addItems:]
  -[SKUIItemList removeItemsAtIndexes:]
  -[SKUIItemList initWithCacheRepresentation:]
  -[SKUIItemList cacheRepresentation]
  -[SKUIItemList isUnavailableItemIdentifier:]
  -[SKUIItemList setUnavailableItemIdentifiers:]
  -[SKUIItemList seeAllTitle]
  -[SKUIItemList seeAllURLString]
  -[SKUIItemList setSeeAllTitle:]
  -[SKUIItemList setSeeAllURLString:]
  -[SKUIItemList unavailableItemIdentifiers]


SKUIPreviewControlViewElement : SKUIViewElement
 @property  long long itemIdentifier
 @property  NSString *mediaURLString

  // instance methods
  -[SKUIPreviewControlViewElement .cxx_destruct]
  -[SKUIPreviewControlViewElement itemIdentifier]
  -[SKUIPreviewControlViewElement isEnabled]
  -[SKUIPreviewControlViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIPreviewControlViewElement applyUpdatesWithElement:]
  -[SKUIPreviewControlViewElement mediaURLString]


SKUIScrollingSegmentedController : SKUIViewController <SKUIProxyScrollViewDelegate, SKUIScrollingSegmentedControllerCollectionViewDelegate, SKUIScrollingSegmentedControllerItemContextDelegate, UICollectionViewDataSource, UICollectionViewDelegate, SKUIScrollingTabAppearanceStatusObserver, SKUIScrollingTabNestedPagedScrolling, SKUIViewControllerWithFocusedViewController>
 @property  SKUIInteractiveSegmentedControl *titlesSegmentedControl
 @property  <SKUIScrollingSegmentedControllerDelegate> *delegate
 @property  double maximumContentWidth
 @property  NSArray *viewControllers
 @property  BOOL scrollEnabled
 @property  {UIEdgeInsets=dddd} segmentedControlContentEdgeInsets
 @property  double segmentedControlHeight
 @property  long long segmentedControlLayoutStyle
 @property  unsigned long focusedViewControllerIndex
 @property  SKUIScrollingSegmentedControllerNavigationBarTitleView *navigationBarTitleView
 @property  BOOL wantsWhiteBackgroundBeyondLeftEdgeWhenBouncing
 @property  BOOL wantsWhiteBackgroundBeyondRightEdgeWhenBouncing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIScrollView *scrollingTabNestedPagingScrollView
 @property  UIViewController *focusedViewController

  // instance methods
  -[SKUIScrollingSegmentedController dealloc]
  -[SKUIScrollingSegmentedController delegate]
  -[SKUIScrollingSegmentedController setDelegate:]
  -[SKUIScrollingSegmentedController .cxx_destruct]
  -[SKUIScrollingSegmentedController observeValueForKeyPath:ofObject:change:context:]
  -[SKUIScrollingSegmentedController initWithNibName:bundle:]
  -[SKUIScrollingSegmentedController setScrollEnabled:]
  -[SKUIScrollingSegmentedController scrollViewDidScroll:]
  -[SKUIScrollingSegmentedController scrollViewWillBeginDragging:]
  -[SKUIScrollingSegmentedController scrollViewDidEndDragging:willDecelerate:]
  -[SKUIScrollingSegmentedController scrollViewWillBeginDecelerating:]
  -[SKUIScrollingSegmentedController scrollViewDidEndDecelerating:]
  -[SKUIScrollingSegmentedController viewDidLoad]
  -[SKUIScrollingSegmentedController collectionView:numberOfItemsInSection:]
  -[SKUIScrollingSegmentedController collectionView:cellForItemAtIndexPath:]
  -[SKUIScrollingSegmentedController viewDidLayoutSubviews]
  -[SKUIScrollingSegmentedController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[SKUIScrollingSegmentedController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[SKUIScrollingSegmentedController encodeRestorableStateWithCoder:]
  -[SKUIScrollingSegmentedController decodeRestorableStateWithCoder:]
  -[SKUIScrollingSegmentedController collectionView:layout:sizeForItemAtIndexPath:]
  -[SKUIScrollingSegmentedController viewControllers]
  -[SKUIScrollingSegmentedController setViewControllers:]
  -[SKUIScrollingSegmentedController contentScrollView]
  -[SKUIScrollingSegmentedController setMaximumContentWidth:]
  -[SKUIScrollingSegmentedController maximumContentWidth]
  -[SKUIScrollingSegmentedController setClientContext:]
  -[SKUIScrollingSegmentedController navigationBarTitleView]
  -[SKUIScrollingSegmentedController scrollEnabled]
  -[SKUIScrollingSegmentedController selectViewControllerAtIndex:animated:]
  -[SKUIScrollingSegmentedController scrollingTabAppearanceStatusWasUpdated:]
  -[SKUIScrollingSegmentedController scrollingTabNestedPagingScrollView]
  -[SKUIScrollingSegmentedController scrollingTabViewControllerInNestedPagingScrollViewAtPageIndex:]
  -[SKUIScrollingSegmentedController replaceViewControllerAtIndex:withViewController:]
  -[SKUIScrollingSegmentedController _updateScrollViewContentOffsetsToTargetContentOffsets]
  -[SKUIScrollingSegmentedController scrollViewDidChangeContentInset:]
  -[SKUIScrollingSegmentedController scrollViewDidMoveToWindow:]
  -[SKUIScrollingSegmentedController _titlesSegmentedControlValueChangeAction:]
  -[SKUIScrollingSegmentedController _updateViewBackgroundColor]
  -[SKUIScrollingSegmentedController _reloadTitleSegments]
  -[SKUIScrollingSegmentedController _updateTitlesSelectionProgress]
  -[SKUIScrollingSegmentedController focusedViewControllerIndex]
  -[SKUIScrollingSegmentedController _configureSegment:forViewController:]
  -[SKUIScrollingSegmentedController _viewControllerContentScrollViewContentInset]
  -[SKUIScrollingSegmentedController _indexPathOfFocusedItemAllowingLayoutIfNeeded:]
  -[SKUIScrollingSegmentedController _setViewControllers:viewUpdatesHandler:]
  -[SKUIScrollingSegmentedController _scrollToTitlesSelectionProgress:animated:]
  -[SKUIScrollingSegmentedController _updateTitleValueObservation]
  -[SKUIScrollingSegmentedController scrollingSegmentedControllerCollectionViewDidLayoutSubviews:]
  -[SKUIScrollingSegmentedController contentScrollViewDidChangeForScrollingSegmentedControllerItemContext:]
  -[SKUIScrollingSegmentedController focusedViewController]
  -[SKUIScrollingSegmentedController segmentedControlContentEdgeInsets]
  -[SKUIScrollingSegmentedController setSegmentedControlContentEdgeInsets:]
  -[SKUIScrollingSegmentedController segmentedControlHeight]
  -[SKUIScrollingSegmentedController setSegmentedControlHeight:]
  -[SKUIScrollingSegmentedController segmentedControlLayoutStyle]
  -[SKUIScrollingSegmentedController setSegmentedControlLayoutStyle:]
  -[SKUIScrollingSegmentedController setWantsWhiteBackgroundBeyondLeftEdgeWhenBouncing:]
  -[SKUIScrollingSegmentedController setWantsWhiteBackgroundBeyondRightEdgeWhenBouncing:]
  -[SKUIScrollingSegmentedController _viewControllerNeedsContentScrollViewUpdates:]
  -[SKUIScrollingSegmentedController wantsWhiteBackgroundBeyondLeftEdgeWhenBouncing]
  -[SKUIScrollingSegmentedController wantsWhiteBackgroundBeyondRightEdgeWhenBouncing]
  -[SKUIScrollingSegmentedController _titlesSegmentedControl]


SKUIInteractiveSegmentedControl : UIControl /usr/lib/libobjc.A.dylib
 @property  @? dividerCreationBlock
 @property  double dividerWidth
 @property  NSArray *segments
 @property  double selectionProgress

  // instance methods
  -[SKUIInteractiveSegmentedControl dealloc]
  -[SKUIInteractiveSegmentedControl .cxx_destruct]
  -[SKUIInteractiveSegmentedControl initWithFrame:]
  -[SKUIInteractiveSegmentedControl sizeThatFits:]
  -[SKUIInteractiveSegmentedControl layoutSubviews]
  -[SKUIInteractiveSegmentedControl hitTest:withEvent:]
  -[SKUIInteractiveSegmentedControl segments]
  -[SKUIInteractiveSegmentedControl setSegments:]
  -[SKUIInteractiveSegmentedControl setSelectionProgress:]
  -[SKUIInteractiveSegmentedControl setDividerCreationBlock:]
  -[SKUIInteractiveSegmentedControl setDividerWidth:]
  -[SKUIInteractiveSegmentedControl selectionProgress]
  -[SKUIInteractiveSegmentedControl _unregisterForObservationOfSegment:]
  -[SKUIInteractiveSegmentedControl _createDividerViewWithFrame:]
  -[SKUIInteractiveSegmentedControl selectedSegmentIndexForSelectionProgress:]
  -[SKUIInteractiveSegmentedControl relativeSelectionProgressForSelectionProgress:segmentIndex:]
  -[SKUIInteractiveSegmentedControl _registerForObservationOfSegment:]
  -[SKUIInteractiveSegmentedControl selectionProgressForRelativeSectionProgress:segmentIndex:]
  -[SKUIInteractiveSegmentedControl _setSelectionProgress:]
  -[SKUIInteractiveSegmentedControl _applySelectionProgressToSegments]
  -[SKUIInteractiveSegmentedControl _notifyClientsOfSelectionProgressChange]
  -[SKUIInteractiveSegmentedControl selectionProgressForSelectedSegmentAtIndex:]
  -[SKUIInteractiveSegmentedControl _segmentControlTouchUpInsideAction:]
  -[SKUIInteractiveSegmentedControl dividerCreationBlock]
  -[SKUIInteractiveSegmentedControl dividerWidth]


SKUIViewModification : NSObject /usr/lib/libc++.1.dylib
 @property  NSMapTable *allViewTextProperties
 @property  NSArray *views

  // instance methods
  -[SKUIViewModification .cxx_destruct]
  -[SKUIViewModification views]
  -[SKUIViewModification addReusableViewWithReuseIdentifier:]
  -[SKUIViewModification addImageViewWithVideoElement:context:]
  -[SKUIViewModification addImageViewWithElement:context:]
  -[SKUIViewModification addButtonWithElement:width:context:]
  -[SKUIViewModification addLabelViewWithElement:width:context:]
  -[SKUIViewModification setTextProperties:forView:]
  -[SKUIViewModification initWithViewReusePool:]
  -[SKUIViewModification addBadgeViewWithElement:width:context:]
  -[SKUIViewModification addMenuButtonWithTitleItem:width:context:]
  -[SKUIViewModification addView:]
  -[SKUIViewModification addDividerWithElement:context:]
  -[SKUIViewModification addTabularLockupWithElement:width:context:]
  -[SKUIViewModification addHorizontalLockupWithElement:width:context:]
  -[SKUIViewModification addTomatoRatingViewWithViewElement:width:context:]
  -[SKUIViewModification addStarRatingControlViewWithViewElement:width:context:]
  -[SKUIViewModification addStarRatingViewWithViewElement:width:context:]
  -[SKUIViewModification addStackItemViewWithElement:width:context:]
  -[SKUIViewModification addHeaderViewWithElement:width:context:]
  -[SKUIViewModification addHorizontalListWithElement:width:context:]
  -[SKUIViewModification addOfferViewWithViewElement:width:context:]
  -[SKUIViewModification addStackListViewWithElement:width:context:]
  -[SKUIViewModification addImageDeckViewWithElement:width:context:]
  -[SKUIViewModification allViewTextProperties]
  -[SKUIViewModification addImageGridViewWithElement:width:context:]
  -[SKUIViewModification addLabelViewWithOrdinalElement:width:context:]
  -[SKUIViewModification addTextViewWithElement:width:context:]
  -[SKUIViewModification addReviewListTitleViewWithViewElement:width:context:]
  -[SKUIViewModification addResponseViewWithViewElement:width:context:]
  -[SKUIViewModification _attributedStringViewForLayout:]
  -[SKUIViewModification _itemStateForButton:]
  -[SKUIViewModification _styleItemOfferButton:forElement:context:]
  -[SKUIViewModification _addImageViewWithReuseIdentifier:viewElement:context:]
  -[SKUIViewModification addBarRatingWithElement:width:context:]


SKUIFilterBarCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIFilterBarCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIFilterBarCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIFilterBarCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIFilterBarCollectionViewCell sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIFilterBarCollectionViewCell .cxx_destruct]
  -[SKUIFilterBarCollectionViewCell setBackgroundColor:]
  -[SKUIFilterBarCollectionViewCell initWithFrame:]
  -[SKUIFilterBarCollectionViewCell layoutSubviews]
  -[SKUIFilterBarCollectionViewCell setContentInset:]
  -[SKUIFilterBarCollectionViewCell applyLayoutAttributes:]
  -[SKUIFilterBarCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIFilterBarCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIFilterBarCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIFilterBarCollectionViewCell viewForElementIdentifier:]


SKUISpacerCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUISpacerCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUISpacerCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUISpacerCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUISpacerCollectionViewCell sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUISpacerCollectionViewCell setContentInset:]
  -[SKUISpacerCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUISpacerCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUISpacerCollectionViewCell updateWithItemState:context:animated:]
  -[SKUISpacerCollectionViewCell viewForElementIdentifier:]


SKUIRedeemIdManager : NSObject /usr/lib/libc++.1.dylib <SKUIRedeemIdTableViewCellDelegate, UITableViewDelegate, UITableViewDataSource>
 @property  SKUIClientContext *clientContext
 @property  NSIndexPath *activeIndexPath
 @property  SKUIPinnedFooterView *pinnedFooterView
 @property  <SKUIRedeemIdManagerDelegate> *delegate
 @property  UITableView *tableView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRedeemIdManager delegate]
  -[SKUIRedeemIdManager setDelegate:]
  -[SKUIRedeemIdManager .cxx_destruct]
  -[SKUIRedeemIdManager tableView]
  -[SKUIRedeemIdManager tableView:numberOfRowsInSection:]
  -[SKUIRedeemIdManager tableView:cellForRowAtIndexPath:]
  -[SKUIRedeemIdManager numberOfSectionsInTableView:]
  -[SKUIRedeemIdManager tableView:titleForHeaderInSection:]
  -[SKUIRedeemIdManager tableView:titleForFooterInSection:]
  -[SKUIRedeemIdManager setTableView:]
  -[SKUIRedeemIdManager _numberOfRowsInSection:]
  -[SKUIRedeemIdManager tableView:heightForRowAtIndexPath:]
  -[SKUIRedeemIdManager tableView:heightForFooterInSection:]
  -[SKUIRedeemIdManager tableView:viewForFooterInSection:]
  -[SKUIRedeemIdManager tableView:didSelectRowAtIndexPath:]
  -[SKUIRedeemIdManager clientContext]
  -[SKUIRedeemIdManager setClientContext:]
  -[SKUIRedeemIdManager setFooterHidden:]
  -[SKUIRedeemIdManager dismissActiveCell]
  -[SKUIRedeemIdManager initWithClientContext:]
  -[SKUIRedeemIdManager handleNextPressed]
  -[SKUIRedeemIdManager redeemIdCell:didReturnWithText:]
  -[SKUIRedeemIdManager redeemIdCell:didChangeToText:]
  -[SKUIRedeemIdManager _disclosureAttributedString]
  -[SKUIRedeemIdManager activeIndexPath]
  -[SKUIRedeemIdManager setActiveIndexPath:]
  -[SKUIRedeemIdManager _autoCapitalizationTypeForIndexPath:]
  -[SKUIRedeemIdManager _heightForDisclosureFooter]
  -[SKUIRedeemIdManager pinnedFooterView]
  -[SKUIRedeemIdManager _placeholderTextForIndexPath:]
  -[SKUIRedeemIdManager _keyboardTypeForIndexPath:]
  -[SKUIRedeemIdManager _returnKeyTypeForIndexPath:]
  -[SKUIRedeemIdManager _nextIndexPath:]
  -[SKUIRedeemIdManager _pcLinkString]
  -[SKUIRedeemIdManager _regulationsLinkString]
  -[SKUIRedeemIdManager _tableViewNonFooterContentHeight]
  -[SKUIRedeemIdManager setPinnedFooterView:]


SKUIReportAConcernDetailsCell : UITableViewCell /usr/lib/libobjc.A.dylib <UITextViewDelegate>
 @property  UITextView *textView
 @property  NSString *placeholderText
 @property  NSString *text
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIReportAConcernDetailsCell .cxx_destruct]
  -[SKUIReportAConcernDetailsCell text]
  -[SKUIReportAConcernDetailsCell textView]
  -[SKUIReportAConcernDetailsCell setTextView:]
  -[SKUIReportAConcernDetailsCell layoutSubviews]
  -[SKUIReportAConcernDetailsCell initWithStyle:reuseIdentifier:]
  -[SKUIReportAConcernDetailsCell textViewDidBeginEditing:]
  -[SKUIReportAConcernDetailsCell textViewDidEndEditing:]
  -[SKUIReportAConcernDetailsCell placeholderText]
  -[SKUIReportAConcernDetailsCell setPlaceholderText:]
  -[SKUIReportAConcernDetailsCell updatePlaceholderText:]


SKUIStyledImageDataConsumer : SKUIImageDataConsumer
 @property  UIColor *backgroundColor
 @property  UIColor *borderColor
 @property  {UIEdgeInsets=dddd} borderWidths
 @property  {UIEdgeInsets=dddd} borderMargins
 @property  long long imageContentMode
 @property  {UIEdgeInsets=dddd} imagePadding
 @property  long long imageTreatment
 @property  {CGSize=dd} imageSize
 @property  {CGSize=dd} shadowOffset
 @property  double shadowRadius
 @property  UIColor *shadowColor

  // class methods
  +[SKUIStyledImageDataConsumer safariBannerIconConsumer]
  +[SKUIStyledImageDataConsumer safariBannerProductImageConsumer]
  +[SKUIStyledImageDataConsumer shareSheetIconConsumer]
  +[SKUIStyledImageDataConsumer roomIconConsumer]
  +[SKUIStyledImageDataConsumer giftComposeProductImageConsumer]
  +[SKUIStyledImageDataConsumer giftResultIconConsumer]
  +[SKUIStyledImageDataConsumer giftResultProductImageConsumer]
  +[SKUIStyledImageDataConsumer giftThemeIconConsumer]
  +[SKUIStyledImageDataConsumer giftThemeProductImageConsumer]
  +[SKUIStyledImageDataConsumer lockupIconConsumerWithSize:]
  +[SKUIStyledImageDataConsumer appIconConsumerWithSize:]
  +[SKUIStyledImageDataConsumer brickConsumerWithBrickSize:]
  +[SKUIStyledImageDataConsumer productImageConsumerWithSize:]
  +[SKUIStyledImageDataConsumer roomProductImageConsumer]
  +[SKUIStyledImageDataConsumer applePackIconConsumer]
  +[SKUIStyledImageDataConsumer brickConsumer]
  +[SKUIStyledImageDataConsumer cardIconConsumer]
  +[SKUIStyledImageDataConsumer cardProductImageConsumer]
  +[SKUIStyledImageDataConsumer categoryIconConsumer]
  +[SKUIStyledImageDataConsumer gridIconConsumer]
  +[SKUIStyledImageDataConsumer listIconConsumer]
  +[SKUIStyledImageDataConsumer lockupProductImageConsumerWithSize:]
  +[SKUIStyledImageDataConsumer mixedTopChartsNewsstandConsumer]
  +[SKUIStyledImageDataConsumer newsstandRoomNewsstandConsumer]
  +[SKUIStyledImageDataConsumer newsstandSwooshNewsstandConsumer]
  +[SKUIStyledImageDataConsumer parentBundleIconConsumer]
  +[SKUIStyledImageDataConsumer productPageProductImageConsumer]
  +[SKUIStyledImageDataConsumer purchasedIconConsumer]
  +[SKUIStyledImageDataConsumer purchasedProductImageConsumer]
  +[SKUIStyledImageDataConsumer swooshNewsstandConsumer]
  +[SKUIStyledImageDataConsumer topChartsIconConsumer]
  +[SKUIStyledImageDataConsumer topChartsNewsstandConsumer]
  +[SKUIStyledImageDataConsumer updatesIconConsumer]
  +[SKUIStyledImageDataConsumer updatesProductImageConsumer]
  +[SKUIStyledImageDataConsumer wishlistIconConsumer]
  +[SKUIStyledImageDataConsumer wishlistProductImageConsumer]
  +[SKUIStyledImageDataConsumer manageMessagesConsumer]
  +[SKUIStyledImageDataConsumer categoriesMessagesConsumer]
  +[SKUIStyledImageDataConsumer purchasedMessagesConsumer]
  +[SKUIStyledImageDataConsumer isImageCompressionEnabled]

  // instance methods
  -[SKUIStyledImageDataConsumer init]
  -[SKUIStyledImageDataConsumer .cxx_destruct]
  -[SKUIStyledImageDataConsumer shadowRadius]
  -[SKUIStyledImageDataConsumer setShadowRadius:]
  -[SKUIStyledImageDataConsumer shadowOffset]
  -[SKUIStyledImageDataConsumer setShadowOffset:]
  -[SKUIStyledImageDataConsumer shadowColor]
  -[SKUIStyledImageDataConsumer setShadowColor:]
  -[SKUIStyledImageDataConsumer backgroundColor]
  -[SKUIStyledImageDataConsumer setBackgroundColor:]
  -[SKUIStyledImageDataConsumer setBorderColor:]
  -[SKUIStyledImageDataConsumer imageSize]
  -[SKUIStyledImageDataConsumer borderColor]
  -[SKUIStyledImageDataConsumer setImageSize:]
  -[SKUIStyledImageDataConsumer borderMargins]
  -[SKUIStyledImageDataConsumer borderWidths]
  -[SKUIStyledImageDataConsumer imageTreatment]
  -[SKUIStyledImageDataConsumer imageForImage:]
  -[SKUIStyledImageDataConsumer setBorderWidths:]
  -[SKUIStyledImageDataConsumer isImagePlaceholderAvailable]
  -[SKUIStyledImageDataConsumer imagePlaceholderForColor:]
  -[SKUIStyledImageDataConsumer setImageTreatment:]
  -[SKUIStyledImageDataConsumer initWithViewElement:]
  -[SKUIStyledImageDataConsumer imageForColor:]
  -[SKUIStyledImageDataConsumer setImagePadding:]
  -[SKUIStyledImageDataConsumer imageForColor:size:]
  -[SKUIStyledImageDataConsumer initWithSize:treatment:]
  -[SKUIStyledImageDataConsumer setImageContentMode:]
  -[SKUIStyledImageDataConsumer _defaultPlaceholderColor]
  -[SKUIStyledImageDataConsumer _outputImageWithInputSize:outputSize:drawBlock:]
  -[SKUIStyledImageDataConsumer _placeholderCornerPathBlock]
  -[SKUIStyledImageDataConsumer _arcRoundedImageWithBounds:contentRect:cornerRadius:drawBlock:]
  -[SKUIStyledImageDataConsumer _scaledImageWithBounds:contentRect:drawBlock:]
  -[SKUIStyledImageDataConsumer _leftToRightGradient:contentRect:drawBlock:]
  -[SKUIStyledImageDataConsumer _radialBlurImageWithBounds:contentRect:drawBlock:]
  -[SKUIStyledImageDataConsumer _dynamicUberImageWithBounds:inputSize:drawBlock:]
  -[SKUIStyledImageDataConsumer _uberBannerImageWithBounds:inputSize:drawBlock:]
  -[SKUIStyledImageDataConsumer _roundedBorderWithBounds:contentRect:drawBlock:]
  -[SKUIStyledImageDataConsumer _imageWithSize:isOpaque:drawBlock:]
  -[SKUIStyledImageDataConsumer _backgroundIsOpaque]
  -[SKUIStyledImageDataConsumer _drawBordersWithImageRect:bounds:]
  -[SKUIStyledImageDataConsumer _uberImageWithBounds:inputSize:backgroundColor:drawBlock:]
  -[SKUIStyledImageDataConsumer setBorderMargins:]
  -[SKUIStyledImageDataConsumer imageContentMode]
  -[SKUIStyledImageDataConsumer imagePadding]


SKUIHorizontalLockupView : SKUIViewReuseView <SKUIItemOfferButtonDelegate, SKUIOfferViewDelegate, SKUIMediaPlayerObserver, SKUIToggleButtonDelegate, UIGestureRecognizerDelegate, SKUIPerspectiveView, SKUIPreviewContainerView, SKUIViewElementView>
 @property  UIView *metadataBackgroundView
 @property  UIColor *gradientColor
 @property  BOOL updateLayoutOnButtonConfirmation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIHorizontalLockupView prefetchResourcesForViewElement:reason:context:]
  +[SKUIHorizontalLockupView preferredSizeForViewElement:context:]
  +[SKUIHorizontalLockupView requestLayoutForViewElement:width:context:]
  +[SKUIHorizontalLockupView sizeThatFitsWidth:viewElement:context:]
  +[SKUIHorizontalLockupView _attributedStringForButton:context:]
  +[SKUIHorizontalLockupView _attributedStringForLabel:context:]
  +[SKUIHorizontalLockupView maximumPerspectiveHeightForSize:]
  +[SKUIHorizontalLockupView _requestLayoutForViewElements:width:context:]
  +[SKUIHorizontalLockupView _usesEditorialLayoutForLabelViewElement:]
  +[SKUIHorizontalLockupView _attributedStringForOrdinal:context:]

  // instance methods
  -[SKUIHorizontalLockupView dealloc]
  -[SKUIHorizontalLockupView .cxx_destruct]
  -[SKUIHorizontalLockupView setBackgroundColor:]
  -[SKUIHorizontalLockupView initWithFrame:]
  -[SKUIHorizontalLockupView gestureRecognizer:shouldReceiveTouch:]
  -[SKUIHorizontalLockupView sizeThatFits:]
  -[SKUIHorizontalLockupView layoutSubviews]
  -[SKUIHorizontalLockupView setContentInset:]
  -[SKUIHorizontalLockupView setSemanticContentAttribute:]
  -[SKUIHorizontalLockupView gradientColor]
  -[SKUIHorizontalLockupView setGradientColor:]
  -[SKUIHorizontalLockupView reloadWithViewElement:width:context:]
  -[SKUIHorizontalLockupView setImage:forArtworkRequest:context:]
  -[SKUIHorizontalLockupView updateWithItemState:context:animated:]
  -[SKUIHorizontalLockupView viewForElementIdentifier:]
  -[SKUIHorizontalLockupView _buttonAction:]
  -[SKUIHorizontalLockupView setPerspectiveTargetView:]
  -[SKUIHorizontalLockupView setVanishingPoint:]
  -[SKUIHorizontalLockupView updateForChangedDistanceFromVanishingPoint]
  -[SKUIHorizontalLockupView _cancelConfirmationAction:]
  -[SKUIHorizontalLockupView _showConfirmationAction:]
  -[SKUIHorizontalLockupView itemOfferButtonDidAnimateTransition:]
  -[SKUIHorizontalLockupView itemOfferButtonWillAnimateTransition:]
  -[SKUIHorizontalLockupView _viewElementForView:]
  -[SKUIHorizontalLockupView offerViewAnimateTransition:]
  -[SKUIHorizontalLockupView offerViewDidAnimateTransition:]
  -[SKUIHorizontalLockupView offerViewWillAnimateTransition:]
  -[SKUIHorizontalLockupView showPreviewProgressWithStatus:animated:]
  -[SKUIHorizontalLockupView _audioPlayerStatusChangeNotification:]
  -[SKUIHorizontalLockupView _dividerHeight:]
  -[SKUIHorizontalLockupView setContainerBackgroundImageForPlayButton:]
  -[SKUIHorizontalLockupView _previewFrontView]
  -[SKUIHorizontalLockupView _addFlipContainerViewWithFrontView:backView:]
  -[SKUIHorizontalLockupView _resolvePreviewStateAfterTransitionForFlipView:]
  -[SKUIHorizontalLockupView _previewProgressIndicator]
  -[SKUIHorizontalLockupView _previewMediaURL]
  -[SKUIHorizontalLockupView hidePreviewProgressAnimated:]
  -[SKUIHorizontalLockupView _usesBackgroundWithAlpha]
  -[SKUIHorizontalLockupView _tapGestureAction:]
  -[SKUIHorizontalLockupView _sizeViewsForColumn:toFitWidth:]
  -[SKUIHorizontalLockupView _animateButton:]
  -[SKUIHorizontalLockupView updateLayoutOnButtonConfirmation]
  -[SKUIHorizontalLockupView _resizeMetadataRelativeToItemOfferView:]
  -[SKUIHorizontalLockupView _layoutConfirmationGradientRelativeToItemOfferView:alpha:]
  -[SKUIHorizontalLockupView _addConfirmationGradientForView:]
  -[SKUIHorizontalLockupView _handlePlayButtonTap:element:]
  -[SKUIHorizontalLockupView togglePreviewPlaybackAnimated:]
  -[SKUIHorizontalLockupView _performDefaultActionForImage:]
  -[SKUIHorizontalLockupView _expandEditorialForLabel:]
  -[SKUIHorizontalLockupView _columnForView:]
  -[SKUIHorizontalLockupView _previewIndicatorAction:]
  -[SKUIHorizontalLockupView mediaPlayer:itemStateChanged:]
  -[SKUIHorizontalLockupView toggleButtonDidAnimateTransition:]
  -[SKUIHorizontalLockupView toggleButtonWillAnimateTransition:]
  -[SKUIHorizontalLockupView preferredBackgroundColor]
  -[SKUIHorizontalLockupView metadataBackgroundView]
  -[SKUIHorizontalLockupView setMetadataBackgroundView:]
  -[SKUIHorizontalLockupView setUpdateLayoutOnButtonConfirmation:]


SKUINavigationDocumentController : NSObject /usr/lib/libc++.1.dylib <IKAppNavigationController>
 @property  UINavigationController *moreNavigationController
 @property  UINavigationController *navigationController
 @property  SKUIClientContext *clientContext
 @property  <SKUINavigationDocumentDelegate> *delegate
 @property  UINavigationController *overrideNavigationController
 @property  NSArray *documentStackItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUINavigationDocumentController clear]
  -[SKUINavigationDocumentController delegate]
  -[SKUINavigationDocumentController setDelegate:]
  -[SKUINavigationDocumentController .cxx_destruct]
  -[SKUINavigationDocumentController navigationController]
  -[SKUINavigationDocumentController moreNavigationController]
  -[SKUINavigationDocumentController clientContext]
  -[SKUINavigationDocumentController setClientContext:]
  -[SKUINavigationDocumentController initWithNavigationController:]
  -[SKUINavigationDocumentController pushDocument:options:]
  -[SKUINavigationDocumentController insertDocument:beforeDocument:options:]
  -[SKUINavigationDocumentController replaceDocument:withDocument:options:]
  -[SKUINavigationDocumentController popDocument]
  -[SKUINavigationDocumentController popToDocument:]
  -[SKUINavigationDocumentController popToRootDocument]
  -[SKUINavigationDocumentController removeDocument:]
  -[SKUINavigationDocumentController documents]
  -[SKUINavigationDocumentController documentStackItems]
  -[SKUINavigationDocumentController _scheduleFlushingPendingNavigationStackEnsureConsistencyRequestsWithTransitionCoordinator:]
  -[SKUINavigationDocumentController _ensureStackConsistencyForNavigationControllerOperation:operationDidComplete:]
  -[SKUINavigationDocumentController _unloadAllStackItems]
  -[SKUINavigationDocumentController _handleStackDidChange]
  -[SKUINavigationDocumentController _activeNavigationController]
  -[SKUINavigationDocumentController popAllDocuments]
  -[SKUINavigationDocumentController _applyDocumentReplacementForOldStackItem:atOldIndex:withStackItem:]
  -[SKUINavigationDocumentController ensureStackConsistencyForNavigationControllerOperation:operationDidComplete:]
  -[SKUINavigationDocumentController setStackItems:animated:]
  -[SKUINavigationDocumentController overrideNavigationController]
  -[SKUINavigationDocumentController setOverrideNavigationController:]
  -[SKUINavigationDocumentController setMoreNavigationController:]


SKUIHeaderViewElement : SKUIViewElement
 @property  SKUIButtonViewElement *button
 @property  NSArray *titleLabels

  // instance methods
  -[SKUIHeaderViewElement button]
  -[SKUIHeaderViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIHeaderViewElement pageComponentType]
  -[SKUIHeaderViewElement titleLabels]


SKUISearchItem : SKUIItem
 @property  SKUIScreenshot *primaryScreenshot
 @property  NSArray *screenshots

  // instance methods
  -[SKUISearchItem .cxx_destruct]
  -[SKUISearchItem initWithLookupDictionary:]
  -[SKUISearchItem screenshots]
  -[SKUISearchItem childItemIdentifiers]
  -[SKUISearchItem loadedChildItems]
  -[SKUISearchItem childItemForIdentifier:]
  -[SKUISearchItem setChildItem:forIdentifier:]
  -[SKUISearchItem primaryScreenshot]


SKUIPlayButtonControl : UIControl /usr/lib/libobjc.A.dylib
 @property  UIImage *backgroundImageForBlurring
 @property  BOOL disabledButSelectable
 @property  SKUIButtonViewElement *element
 @property  long long backgroundType
 @property  UIColor *controlForeGroundColor
 @property  UIImage *customPlayImage
 @property  UIImage *customToggleImage
 @property  UIImageView *imageView
 @property  {UIEdgeInsets=dddd} bigHitInsets
 @property  NSString *backdropGroupName
 @property  BOOL indeterminate
 @property  float progress
 @property  UIColor *progressIndicatorColor
 @property  BOOL showingPlayIndicator
 @property  BOOL showingProgress
 @property  BOOL showOuterBorder

  // class methods
  +[SKUIPlayButtonControl blurColorForColor:]
  +[SKUIPlayButtonControl _calculateStatistics:withSize:]
  +[SKUIPlayButtonControl blurColorForImage:forButtonSize:withOffsetRight:withOffsetBottom:]

  // instance methods
  -[SKUIPlayButtonControl setEnabled:]
  -[SKUIPlayButtonControl element]
  -[SKUIPlayButtonControl .cxx_destruct]
  -[SKUIPlayButtonControl progress]
  -[SKUIPlayButtonControl isIndeterminate]
  -[SKUIPlayButtonControl refresh]
  -[SKUIPlayButtonControl setProgress:]
  -[SKUIPlayButtonControl intrinsicContentSize]
  -[SKUIPlayButtonControl initWithFrame:]
  -[SKUIPlayButtonControl backgroundType]
  -[SKUIPlayButtonControl _backgroundView]
  -[SKUIPlayButtonControl sizeThatFits:]
  -[SKUIPlayButtonControl layoutSubviews]
  -[SKUIPlayButtonControl imageView]
  -[SKUIPlayButtonControl _imageView]
  -[SKUIPlayButtonControl setHighlighted:]
  -[SKUIPlayButtonControl pointInside:withEvent:]
  -[SKUIPlayButtonControl touchesBegan:withEvent:]
  -[SKUIPlayButtonControl touchesEnded:withEvent:]
  -[SKUIPlayButtonControl tintColorDidChange]
  -[SKUIPlayButtonControl setSelected:]
  -[SKUIPlayButtonControl backdropGroupName]
  -[SKUIPlayButtonControl setBackdropGroupName:]
  -[SKUIPlayButtonControl setProgress:animated:]
  -[SKUIPlayButtonControl hitRect]
  -[SKUIPlayButtonControl setImageView:]
  -[SKUIPlayButtonControl hideProgressAnimated:]
  -[SKUIPlayButtonControl defaultBackgroundColor]
  -[SKUIPlayButtonControl _defaultBackgroundView]
  -[SKUIPlayButtonControl _prepareForReuse]
  -[SKUIPlayButtonControl setElement:]
  -[SKUIPlayButtonControl _borderLayer]
  -[SKUIPlayButtonControl setBackgroundType:]
  -[SKUIPlayButtonControl endIndeterminateAnimation]
  -[SKUIPlayButtonControl showPlayIndicator:]
  -[SKUIPlayButtonControl beginIndeterminateAnimation]
  -[SKUIPlayButtonControl setShowOuterBorder:]
  -[SKUIPlayButtonControl setShowBorder:]
  -[SKUIPlayButtonControl buttonSize]
  -[SKUIPlayButtonControl _updateEnabledState]
  -[SKUIPlayButtonControl _showPlayIndicator:]
  -[SKUIPlayButtonControl _toggleToPlayState]
  -[SKUIPlayButtonControl outerBorderColor]
  -[SKUIPlayButtonControl buttonCornerRadius]
  -[SKUIPlayButtonControl _updateInnerProgressLayerStroke]
  -[SKUIPlayButtonControl playImage]
  -[SKUIPlayButtonControl _cancelImage]
  -[SKUIPlayButtonControl setControlColor:]
  -[SKUIPlayButtonControl _createGradient:withGradientType:]
  -[SKUIPlayButtonControl bigHitInsets]
  -[SKUIPlayButtonControl setBigHitInsets:]
  -[SKUIPlayButtonControl setBackgroundImageForBlurring:withOffsetRight:withOffsetBottom:]
  -[SKUIPlayButtonControl showingProgress]
  -[SKUIPlayButtonControl _selectedLayer]
  -[SKUIPlayButtonControl isDisabledButSelectable]
  -[SKUIPlayButtonControl _renderAsEnabled]
  -[SKUIPlayButtonControl _classicBackdropView]
  -[SKUIPlayButtonControl _updateBackdropView]
  -[SKUIPlayButtonControl setProgressIndicatorColor:withCompositingFilter:]
  -[SKUIPlayButtonControl updateOuterProgressLayerStroke]
  -[SKUIPlayButtonControl _beginIndeterminateAnimation]
  -[SKUIPlayButtonControl _outerProgressLayer]
  -[SKUIPlayButtonControl _innerProgressLayer]
  -[SKUIPlayButtonControl playButtonDefaultAlpha]
  -[SKUIPlayButtonControl _updateBackgroundBlur:withOffsetRight:withOffsetBottom:]
  -[SKUIPlayButtonControl _gradientBackgroundView]
  -[SKUIPlayButtonControl showPlayIndicator:force:]
  -[SKUIPlayButtonControl showOuterBorder]
  -[SKUIPlayButtonControl _newShapeViewWithBounds:lineWidth:]
  -[SKUIPlayButtonControl cancelImage]
  -[SKUIPlayButtonControl _useBlurredBackground:]
  -[SKUIPlayButtonControl setControlForegroundColor:]
  -[SKUIPlayButtonControl setSelectionColor:withCompositingFilter:]
  -[SKUIPlayButtonControl _playImage]
  -[SKUIPlayButtonControl playIndicatorDidChange:]
  -[SKUIPlayButtonControl setDisabledButSelectable:]
  -[SKUIPlayButtonControl setProgressIndicatorColor:]
  -[SKUIPlayButtonControl setBackgroundGradientColors:withGradientType:]
  -[SKUIPlayButtonControl setBufferProgressIndicatorColor:withCompositingFilter:]
  -[SKUIPlayButtonControl setCustomPlayImage:]
  -[SKUIPlayButtonControl _simpleBackdrop]
  -[SKUIPlayButtonControl controlForeGroundColor]
  -[SKUIPlayButtonControl customPlayImage]
  -[SKUIPlayButtonControl customToggleImage]
  -[SKUIPlayButtonControl setCustomToggleImage:]
  -[SKUIPlayButtonControl showingPlayIndicator]
  -[SKUIPlayButtonControl progressIndicatorColor]
  -[SKUIPlayButtonControl backgroundImageForBlurring]
  -[SKUIPlayButtonControl setBackgroundImageForBlurring:]


SKUIPlayButtonShapeView : UIView /usr/lib/libobjc.A.dylib
 @property  CAShapeLayer *layer

  // class methods
  +[SKUIPlayButtonShapeView layerClass]


SKUIPlayButtonGradientView : UIView /usr/lib/libobjc.A.dylib
 @property  CAGradientLayer *layer

  // class methods
  +[SKUIPlayButtonGradientView layerClass]


SKUIScreenshot : NSObject /usr/lib/libc++.1.dylib <NSCopying, SKUICacheCoding>
 @property  long long numberOfVariants
 @property  NSString *orientationString
 @property  long long uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *cacheRepresentation

  // instance methods
  -[SKUIScreenshot init]
  -[SKUIScreenshot copyWithZone:]
  -[SKUIScreenshot .cxx_destruct]
  -[SKUIScreenshot uniqueIdentifier]
  -[SKUIScreenshot initWithCacheRepresentation:]
  -[SKUIScreenshot cacheRepresentation]
  -[SKUIScreenshot setArtwork:forVariant:]
  -[SKUIScreenshot numberOfVariants]
  -[SKUIScreenshot _initSKUIScreenshot]
  -[SKUIScreenshot _addURLsFromDictionary:withRemoteLocalKeysMap:]
  -[SKUIScreenshot _firstVariant]
  -[SKUIScreenshot initWithScreenshotDictionary:]
  -[SKUIScreenshot sizeForVariant:]
  -[SKUIScreenshot URLForVariant:]
  -[SKUIScreenshot orientationString]


SKUIDynamicGridViewElementPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIGridViewElementPageSectionConfigurationDataSource, SKUICollectionDOMFeatureTargetting>
 @property  SKUIGridComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL editing

  // instance methods
  -[SKUIDynamicGridViewElementPageSection dealloc]
  -[SKUIDynamicGridViewElementPageSection _setContext:]
  -[SKUIDynamicGridViewElementPageSection .cxx_destruct]
  -[SKUIDynamicGridViewElementPageSection isEditing]
  -[SKUIDynamicGridViewElementPageSection setEditing:animated:]
  -[SKUIDynamicGridViewElementPageSection artworkRequest:didLoadImage:]
  -[SKUIDynamicGridViewElementPageSection initWithPageComponent:]
  -[SKUIDynamicGridViewElementPageSection _reloadViewElementProperties]
  -[SKUIDynamicGridViewElementPageSection applyUpdateType:]
  -[SKUIDynamicGridViewElementPageSection backgroundColorForIndexPath:]
  -[SKUIDynamicGridViewElementPageSection collectionViewWillApplyLayoutAttributes:]
  -[SKUIDynamicGridViewElementPageSection deselectItemsAnimated:]
  -[SKUIDynamicGridViewElementPageSection invalidateCachedLayoutInformation]
  -[SKUIDynamicGridViewElementPageSection relevantEntityProviders]
  -[SKUIDynamicGridViewElementPageSection sectionContentInset]
  -[SKUIDynamicGridViewElementPageSection willAppearInContext:]
  -[SKUIDynamicGridViewElementPageSection collectionViewDidConfirmButtonElement:withClickInfo:forItemAtIndexPath:]
  -[SKUIDynamicGridViewElementPageSection cellForIndexPath:]
  -[SKUIDynamicGridViewElementPageSection cellSizeForIndexPath:]
  -[SKUIDynamicGridViewElementPageSection entityProvider:didInvalidateWithContext:]
  -[SKUIDynamicGridViewElementPageSection numberOfCells]
  -[SKUIDynamicGridViewElementPageSection indexPathsForPinningItems]
  -[SKUIDynamicGridViewElementPageSection updateCellWithIndexPath:itemState:animated:]
  -[SKUIDynamicGridViewElementPageSection reloadVisibleCellsWithReason:]
  -[SKUIDynamicGridViewElementPageSection reloadCellWithIndexPath:reason:]
  -[SKUIDynamicGridViewElementPageSection pinningContentInsetForItemAtIndexPath:]
  -[SKUIDynamicGridViewElementPageSection pinningStyleForItemAtIndexPath:]
  -[SKUIDynamicGridViewElementPageSection collectionViewDidSelectItemAtIndexPath:]
  -[SKUIDynamicGridViewElementPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIDynamicGridViewElementPageSection targetScrollingIndexPathForElementWithIndexBarEntryID:relativeSectionIndex:]
  -[SKUIDynamicGridViewElementPageSection _enumerateVisibleCellsUsingBlock:]
  -[SKUIDynamicGridViewElementPageSection _invalidateCellSizeCache]
  -[SKUIDynamicGridViewElementPageSection _resetLayoutProperties]
  -[SKUIDynamicGridViewElementPageSection _viewElementAtGlobalIndex:]
  -[SKUIDynamicGridViewElementPageSection _dynamicGridViewElement]
  -[SKUIDynamicGridViewElementPageSection _entityGlobalIndexForGlobalIndex:returningSection:]
  -[SKUIDynamicGridViewElementPageSection _templateViewElementsForType:mode:]
  -[SKUIDynamicGridViewElementPageSection _reloadEntityProperties]
  -[SKUIDynamicGridViewElementPageSection _updateStyleProperties]
  -[SKUIDynamicGridViewElementPageSection _reloadVisibleCellsAnimated:]
  -[SKUIDynamicGridViewElementPageSection _entityValueProviderForGlobalIndex:sectionIndex:]
  -[SKUIDynamicGridViewElementPageSection _sectionTemplateViewElementForEntityValueProvider:]
  -[SKUIDynamicGridViewElementPageSection _globalIndexForEntityGlobalIndex:]
  -[SKUIDynamicGridViewElementPageSection _updateShowsSectionHeaders]
  -[SKUIDynamicGridViewElementPageSection _itemTemplateViewElementForEntityValueProvider:]
  -[SKUIDynamicGridViewElementPageSection gridViewElementPageSectionConfiguration:viewElementForIndexPath:]
  -[SKUIDynamicGridViewElementPageSection gridViewElementPageSectionConfiguration:configurePosition:forItemAtIndexPath:]


_SKUIDynamicGridEntityValueProviderValue : NSObject /usr/lib/libc++.1.dylib
 @property  <IKEntityValueProviding> *entityValueProvider
 @property  long long sectionIndex

  // instance methods
  -[_SKUIDynamicGridEntityValueProviderValue .cxx_destruct]
  -[_SKUIDynamicGridEntityValueProviderValue sectionIndex]
  -[_SKUIDynamicGridEntityValueProviderValue setSectionIndex:]
  -[_SKUIDynamicGridEntityValueProviderValue entityValueProvider]
  -[_SKUIDynamicGridEntityValueProviderValue setEntityValueProvider:]


_SKUIDynamicGridSizeCacheKey : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long position
 @property  SKUIViewElement *viewElement

  // instance methods
  -[_SKUIDynamicGridSizeCacheKey isEqual:]
  -[_SKUIDynamicGridSizeCacheKey copyWithZone:]
  -[_SKUIDynamicGridSizeCacheKey .cxx_destruct]
  -[_SKUIDynamicGridSizeCacheKey position]
  -[_SKUIDynamicGridSizeCacheKey setPosition:]
  -[_SKUIDynamicGridSizeCacheKey viewElement]
  -[_SKUIDynamicGridSizeCacheKey setViewElement:]
  -[_SKUIDynamicGridSizeCacheKey __isSKUIDynamicGridSizeCacheKey]


SKUIButtonFooterSettingsHeaderFooterDescriptionView : SKUISettingsHeaderFooterDescriptionView
  // class methods
  +[SKUIButtonFooterSettingsHeaderFooterDescriptionView preferredSizeForSettingsHeaderFooterDescription:context:]
  +[SKUIButtonFooterSettingsHeaderFooterDescriptionView prefetchResourcesForSettingsHeaderFooterDescription:reason:context:]
  +[SKUIButtonFooterSettingsHeaderFooterDescriptionView requestLayoutForSettingsHeaderFooterDescription:width:context:]
  +[SKUIButtonFooterSettingsHeaderFooterDescriptionView sizeThatFitsWidth:settingsHeaderFooterDescription:context:]
  +[SKUIButtonFooterSettingsHeaderFooterDescriptionView _buttonWithButtonElement:]

  // instance methods
  -[SKUIButtonFooterSettingsHeaderFooterDescriptionView .cxx_destruct]
  -[SKUIButtonFooterSettingsHeaderFooterDescriptionView layoutSubviews]
  -[SKUIButtonFooterSettingsHeaderFooterDescriptionView _buttonTapped:]
  -[SKUIButtonFooterSettingsHeaderFooterDescriptionView setImage:forArtworkRequest:context:]
  -[SKUIButtonFooterSettingsHeaderFooterDescriptionView reloadWithSettingsHeaderFooterDescription:width:context:]
  -[SKUIButtonFooterSettingsHeaderFooterDescriptionView _reloadWithButtonElement:context:]


SKUILockupSwooshPageSection : SKUIStorePageSection <SKUIMissingItemDelegate, SKUIProductPageOverlayDelegate, SKUISwooshViewControllerDelegate>
 @property  SKUISwooshPageComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUILockupSwooshPageSection dealloc]
  -[SKUILockupSwooshPageSection .cxx_destruct]
  -[SKUILockupSwooshPageSection initWithPageComponent:]
  -[SKUILockupSwooshPageSection willAppearInContext:]
  -[SKUILockupSwooshPageSection cellForIndexPath:]
  -[SKUILockupSwooshPageSection cellSizeForIndexPath:]
  -[SKUILockupSwooshPageSection numberOfCells]
  -[SKUILockupSwooshPageSection prefetchResourcesWithReason:]
  -[SKUILockupSwooshPageSection addImpressionsForIndexPath:toSession:]
  -[SKUILockupSwooshPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUILockupSwooshPageSection productPageOverlay:flipSourceViewToDismissItem:]
  -[SKUILockupSwooshPageSection productPageOverlay:flipSourceViewToPresentItem:]
  -[SKUILockupSwooshPageSection productPageOverlayDidDismiss:]
  -[SKUILockupSwooshPageSection _loadMissingItemsFromIndex:withReason:]
  -[SKUILockupSwooshPageSection _missingItemLoader]
  -[SKUILockupSwooshPageSection missingItemLoader:didLoadItems:invalidItemIdentifiers:]
  -[SKUILockupSwooshPageSection _popSourceViewForOverlayController:]
  -[SKUILockupSwooshPageSection setImage:forRequest:]
  -[SKUILockupSwooshPageSection _swooshViewController]
  -[SKUILockupSwooshPageSection _artworkLoader]
  -[SKUILockupSwooshPageSection swoosh:imageForCellAtIndex:]
  -[SKUILockupSwooshPageSection swoosh:videoThumbnailForCellAtIndex:]
  -[SKUILockupSwooshPageSection swoosh:didSelectCellAtIndex:]
  -[SKUILockupSwooshPageSection swoosh:willDisplayCellAtIndex:]
  -[SKUILockupSwooshPageSection swooshDidSelectSeeAll:]
  -[SKUILockupSwooshPageSection _addImpressionForItemIndex:toSession:]
  -[SKUILockupSwooshPageSection _showProductPageForItem:index:animated:]


SKUIProductInformationView : UIView /usr/lib/libobjc.A.dylib
 @property  SKUIColorScheme *colorScheme
 @property  {UIEdgeInsets=dddd} contentInset
 @property  NSArray *informationLines
 @property  BOOL hidesSeparatorView
 @property  NSString *title

  // instance methods
  -[SKUIProductInformationView .cxx_destruct]
  -[SKUIProductInformationView title]
  -[SKUIProductInformationView setTitle:]
  -[SKUIProductInformationView setBackgroundColor:]
  -[SKUIProductInformationView initWithFrame:]
  -[SKUIProductInformationView sizeThatFits:]
  -[SKUIProductInformationView layoutSubviews]
  -[SKUIProductInformationView setContentInset:]
  -[SKUIProductInformationView contentInset]
  -[SKUIProductInformationView colorScheme]
  -[SKUIProductInformationView setColorScheme:]
  -[SKUIProductInformationView setHidesSeparatorView:]
  -[SKUIProductInformationView setInformationLines:]
  -[SKUIProductInformationView _keyWidth]
  -[SKUIProductInformationView hidesSeparatorView]
  -[SKUIProductInformationView informationLines]


SKUIMetricsDOMChange : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  double buildStartTime
 @property  double buildEndTime
 @property  double renderStartTime
 @property  double renderEndTime
 @property  BOOL fromDeferredMessage
 @property  NSDictionary *dictionaryRepresentation

  // instance methods
  -[SKUIMetricsDOMChange isEqual:]
  -[SKUIMetricsDOMChange copyWithZone:]
  -[SKUIMetricsDOMChange dictionaryRepresentation]
  -[SKUIMetricsDOMChange buildStartTime]
  -[SKUIMetricsDOMChange buildEndTime]
  -[SKUIMetricsDOMChange renderStartTime]
  -[SKUIMetricsDOMChange renderEndTime]
  -[SKUIMetricsDOMChange setBuildStartTime:]
  -[SKUIMetricsDOMChange setBuildEndTime:]
  -[SKUIMetricsDOMChange setFromDeferredMessage:]
  -[SKUIMetricsDOMChange setRenderStartTime:]
  -[SKUIMetricsDOMChange setRenderEndTime:]
  -[SKUIMetricsDOMChange isFromDeferredMessage]
  -[SKUIMetricsDOMChange initWithReportDomBuildTimesMessagePayload:]


SKUIMetricsDOMChangeQueue : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL empty
 @property  unsigned long count

  // instance methods
  -[SKUIMetricsDOMChangeQueue init]
  -[SKUIMetricsDOMChangeQueue count]
  -[SKUIMetricsDOMChangeQueue isEmpty]
  -[SKUIMetricsDOMChangeQueue .cxx_destruct]
  -[SKUIMetricsDOMChangeQueue addPendingChange:]
  -[SKUIMetricsDOMChangeQueue oldestPendingChange]


SKUIReviewCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
 @property  SKUITextBoxView *descriptionView
 @property  SKUIResponseView *responseView
 @property  @? descriptionTapAction
 @property  @? responseDescriptionTapAction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIReviewCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIReviewCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIReviewCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIReviewCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUIReviewCollectionViewCell _attributedStringForDateLabel:context:]
  +[SKUIReviewCollectionViewCell _attributedStringForTitleLabel:context:]

  // instance methods
  -[SKUIReviewCollectionViewCell .cxx_destruct]
  -[SKUIReviewCollectionViewCell layoutSubviews]
  -[SKUIReviewCollectionViewCell setHighlighted:]
  -[SKUIReviewCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIReviewCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIReviewCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIReviewCollectionViewCell viewForElementIdentifier:]
  -[SKUIReviewCollectionViewCell setDescriptionView:]
  -[SKUIReviewCollectionViewCell setResponseView:]
  -[SKUIReviewCollectionViewCell _resetTapGestures]
  -[SKUIReviewCollectionViewCell responseView]
  -[SKUIReviewCollectionViewCell descriptionView]
  -[SKUIReviewCollectionViewCell descriptionTapAction]
  -[SKUIReviewCollectionViewCell responseDescriptionTapAction]
  -[SKUIReviewCollectionViewCell contentViewTapped:]
  -[SKUIReviewCollectionViewCell setDescriptionTapAction:]
  -[SKUIReviewCollectionViewCell setResponseDescriptionTapAction:]


SKUIDynamicGridViewElement : SKUIGridViewElement
 @property  BOOL hasSectionHeaders
 @property  BOOL malformed
 @property  long long minimumEntityCountForSections

  // instance methods
  -[SKUIDynamicGridViewElement .cxx_destruct]
  -[SKUIDynamicGridViewElement allowsMultipleSelectionDuringEditing]
  -[SKUIDynamicGridViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIDynamicGridViewElement applyUpdatesWithElement:]
  -[SKUIDynamicGridViewElement pageComponentType]
  -[SKUIDynamicGridViewElement isDynamicContainer]
  -[SKUIDynamicGridViewElement templateDefinitionViewElementsForType:mode:]
  -[SKUIDynamicGridViewElement bestTemplateDefinitionViewElementFromTemplateDefinitionViewElements:entityValueProvider:]
  -[SKUIDynamicGridViewElement minimumEntityCountForSections]
  -[SKUIDynamicGridViewElement hasSectionHeaders]
  -[SKUIDynamicGridViewElement _templateDefinitionTypeToModeValueMap]
  -[SKUIDynamicGridViewElement _unfilteredEnumerateChildrenUsingBlock:]
  -[SKUIDynamicGridViewElement isMalformed]


_SKUIDynamicGridTemplateDefinitionModeValueMap : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_SKUIDynamicGridTemplateDefinitionModeValueMap .cxx_destruct]
  -[_SKUIDynamicGridTemplateDefinitionModeValueMap templateDefinitionViewElementsForMode:]
  -[_SKUIDynamicGridTemplateDefinitionModeValueMap addTemplateDefinitionViewElement:forMode:]


SKUISortDescriptorListViewElement : SKUIViewElement
 @property  NSArray *sortDescriptorViewElements

  // instance methods
  -[SKUISortDescriptorListViewElement sortDescriptorViewElements]


SKUIDeveloperInfoViewController : SKUIViewController
 @property  SKUIDeveloperInfo *developerInfo

  // instance methods
  -[SKUIDeveloperInfoViewController .cxx_destruct]
  -[SKUIDeveloperInfoViewController loadView]
  -[SKUIDeveloperInfoViewController developerInfo]
  -[SKUIDeveloperInfoViewController initWithDeveloperInfo:]


SKUIOffscreenRenderOperation : NSOperation /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  @? createLayerBlock
 @property  UIImage *outputImage

  // class methods
  +[SKUIOffscreenRenderOperation preheatOffscreenRenderOperations]

  // instance methods
  -[SKUIOffscreenRenderOperation init]
  -[SKUIOffscreenRenderOperation .cxx_destruct]
  -[SKUIOffscreenRenderOperation main]
  -[SKUIOffscreenRenderOperation outputImage]
  -[SKUIOffscreenRenderOperation createLayerBlock]
  -[SKUIOffscreenRenderOperation setCreateLayerBlock:]


SKUIProductPageAction : NSObject /usr/lib/libc++.1.dylib
 @property  long long actionType
 @property  SKUIItem *item
 @property  NSURL *URL
 @property  @? viewControllerBlock
 @property  UIViewController *viewController

  // class methods
  +[SKUIProductPageAction actionWithType:]

  // instance methods
  -[SKUIProductPageAction .cxx_destruct]
  -[SKUIProductPageAction item]
  -[SKUIProductPageAction setItem:]
  -[SKUIProductPageAction setURL:]
  -[SKUIProductPageAction URL]
  -[SKUIProductPageAction viewController]
  -[SKUIProductPageAction actionType]
  -[SKUIProductPageAction setActionType:]
  -[SKUIProductPageAction viewControllerBlock]
  -[SKUIProductPageAction setViewControllerBlock:]


SKUISocialActivitiesViewElement : SKUIViewElement

SKUIEditorTemplateView : SKUIViewReuseView <UITextViewDelegate, SKUIViewElementView>
 @property  double bottomInset
 @property  <SKUIEditorTemplateViewDelegate> *delegate
 @property  BOOL disabled
 @property  NSString *text
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIEditorTemplateView prefetchResourcesForViewElement:reason:context:]
  +[SKUIEditorTemplateView preferredSizeForViewElement:context:]
  +[SKUIEditorTemplateView requestLayoutForViewElement:width:context:]
  +[SKUIEditorTemplateView sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIEditorTemplateView delegate]
  -[SKUIEditorTemplateView setDelegate:]
  -[SKUIEditorTemplateView .cxx_destruct]
  -[SKUIEditorTemplateView text]
  -[SKUIEditorTemplateView isDisabled]
  -[SKUIEditorTemplateView initWithFrame:]
  -[SKUIEditorTemplateView layoutSubviews]
  -[SKUIEditorTemplateView setContentInset:]
  -[SKUIEditorTemplateView setDisabled:]
  -[SKUIEditorTemplateView bottomInset]
  -[SKUIEditorTemplateView textViewDidChange:]
  -[SKUIEditorTemplateView setBottomInset:]
  -[SKUIEditorTemplateView reloadWithViewElement:width:context:]
  -[SKUIEditorTemplateView setImage:forArtworkRequest:context:]
  -[SKUIEditorTemplateView updateWithItemState:context:animated:]
  -[SKUIEditorTemplateView viewForElementIdentifier:]
  -[SKUIEditorTemplateView _reloadSubviews]
  -[SKUIEditorTemplateView _textFromViewElement:]


SKUIOnboardingCircleImageDataConsumer : SKUIImageDataConsumer
 @property  {CGSize=dd} outputSize
 @property  UIColor *tintColor
 @property  BOOL usesSaturationFilter

  // instance methods
  -[SKUIOnboardingCircleImageDataConsumer .cxx_destruct]
  -[SKUIOnboardingCircleImageDataConsumer setOutputSize:]
  -[SKUIOnboardingCircleImageDataConsumer outputSize]
  -[SKUIOnboardingCircleImageDataConsumer tintColor]
  -[SKUIOnboardingCircleImageDataConsumer setTintColor:]
  -[SKUIOnboardingCircleImageDataConsumer imageForImage:]
  -[SKUIOnboardingCircleImageDataConsumer setUsesSaturationFilter:]
  -[SKUIOnboardingCircleImageDataConsumer usesSaturationFilter]
  -[SKUIOnboardingCircleImageDataConsumer _saturationBackgroundImageWithSize:]


SKUIScrollingTabBarBackgroundView : UIView /usr/lib/libobjc.A.dylib
 @property  NSString *backdropBarGroupName
 @property  BOOL showsBackdrop
 @property  BOOL showsBottomHairline
 @property  BOOL showsTopHairline
 @property  BOOL usesOpaqueColorForTopHairline

  // instance methods
  -[SKUIScrollingTabBarBackgroundView .cxx_destruct]
  -[SKUIScrollingTabBarBackgroundView traitCollectionDidChange:]
  -[SKUIScrollingTabBarBackgroundView layoutSubviews]
  -[SKUIScrollingTabBarBackgroundView setShowsBottomHairline:]
  -[SKUIScrollingTabBarBackgroundView showsBottomHairline]
  -[SKUIScrollingTabBarBackgroundView setBackdropBarGroupName:]
  -[SKUIScrollingTabBarBackgroundView setShowsBackdrop:]
  -[SKUIScrollingTabBarBackgroundView setShowsTopHairline:]
  -[SKUIScrollingTabBarBackgroundView setUsesOpaqueColorForTopHairline:]
  -[SKUIScrollingTabBarBackgroundView _updateTopHairlineColor]
  -[SKUIScrollingTabBarBackgroundView backdropBarGroupName]
  -[SKUIScrollingTabBarBackgroundView showsBackdrop]
  -[SKUIScrollingTabBarBackgroundView showsTopHairline]
  -[SKUIScrollingTabBarBackgroundView usesOpaqueColorForTopHairline]


SKUINavigationBarController : NSObject /usr/lib/libc++.1.dylib <SKUILayoutCacheDelegate>
 @property  SKUINavigationBarViewElement *navigationBarViewElement
 @property  SKUIClientContext *clientContext
 @property  <SKUINavigationBarControllerDelegate> *delegate
 @property  UIViewController *parentViewController
 @property  UIView *navigationPaletteView
 @property  NSArray *existingSearchBarControllers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUINavigationBarController dealloc]
  -[SKUINavigationBarController delegate]
  -[SKUINavigationBarController setDelegate:]
  -[SKUINavigationBarController .cxx_destruct]
  -[SKUINavigationBarController parentViewController]
  -[SKUINavigationBarController setParentViewController:]
  -[SKUINavigationBarController clientContext]
  -[SKUINavigationBarController setClientContext:]
  -[SKUINavigationBarController _availableWidth]
  -[SKUINavigationBarController navigationBarViewElement]
  -[SKUINavigationBarController setNavigationBarViewElement:]
  -[SKUINavigationBarController viewForElementIdentifier:]
  -[SKUINavigationBarController navigationPaletteView]
  -[SKUINavigationBarController layoutCacheDidFinishBatch:]
  -[SKUINavigationBarController itemOfferButtonWillAnimateTransition:]
  -[SKUINavigationBarController initWithNavigationBarViewElement:]
  -[SKUINavigationBarController _viewElementEventNotification:]
  -[SKUINavigationBarController _barButtonItemWithViewElement:]
  -[SKUINavigationBarController titleViewWithViewElement:]
  -[SKUINavigationBarController fallbackTitleView]
  -[SKUINavigationBarController _navigationBarContext]
  -[SKUINavigationBarController barButtonItemForElementIdentifier:]
  -[SKUINavigationBarController detachNavigationItemControllers]
  -[SKUINavigationBarController _addSearchBarControllerWithViewElement:]
  -[SKUINavigationBarController _buttonWithElement:width:]
  -[SKUINavigationBarController _titleButtonAction:]
  -[SKUINavigationBarController detachFromNavigationItem:]
  -[SKUINavigationBarController attachToNavigationItem:]
  -[SKUINavigationBarController _fullyReloadSections:withNavigationItem:]
  -[SKUINavigationBarController _attributedStringForButtonText:type:style:]
  -[SKUINavigationBarController _barButtonItemWithButtonViewElement:]
  -[SKUINavigationBarController _barButtonItemWithSearchBarViewElement:]
  -[SKUINavigationBarController _resourceImageForImageElement:]
  -[SKUINavigationBarController _attributedStringForButton:]
  -[SKUINavigationBarController existingSearchBarControllers]
  -[SKUINavigationBarController setReusableSearchBarControllers:]
  -[SKUINavigationBarController updateNavigationItem:]


SKUIProductPageActivityViewController : UIActivityViewController /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIProductPageActivityViewController .cxx_destruct]
  -[SKUIProductPageActivityViewController _titleForActivity:]
  -[SKUIProductPageActivityViewController _activityItemsForProductPageItem:clientContext:]
  -[SKUIProductPageActivityViewController _applicationActivitiesForProductPageItem:clientContext:]
  -[SKUIProductPageActivityViewController _activityItemsForProductPageItemProvider:clientContext:]
  -[SKUIProductPageActivityViewController initWithProductPageItem:clientContext:]
  -[SKUIProductPageActivityViewController initWithProductPageItemProvider:clientContext:]


SKUIMetricsTemplateLoad : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  double requestStartTime
 @property  double responseStartTime
 @property  double responseEndTime
 @property  BOOL responseWasCached
 @property  NSDictionary *dictionaryRepresentation

  // instance methods
  -[SKUIMetricsTemplateLoad copyWithZone:]
  -[SKUIMetricsTemplateLoad dictionaryRepresentation]
  -[SKUIMetricsTemplateLoad setResponseEndTime:]
  -[SKUIMetricsTemplateLoad responseEndTime]
  -[SKUIMetricsTemplateLoad requestStartTime]
  -[SKUIMetricsTemplateLoad setRequestStartTime:]
  -[SKUIMetricsTemplateLoad setResponseStartTime:]
  -[SKUIMetricsTemplateLoad responseStartTime]
  -[SKUIMetricsTemplateLoad responseWasCached]
  -[SKUIMetricsTemplateLoad setResponseWasCached:]


SKUIProductPageDetailsViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIScreenshotsDelegate, SKUIItemStateCenterObserver, SKUITableViewSectionDelegate, SKUIProductPageChildViewController>
 @property  SKUIProductPage *productPage
 @property  SKUIClientContext *clientContext
 @property  NSOperationQueue *operationQueue
 @property  BOOL askPermission
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIScrollView *scrollView
 @property  SKUIProductPageHeaderViewController *headerViewController
 @property  <SKUIProductPageChildViewControllerDelegate> *delegate

  // class methods
  +[SKUIProductPageDetailsViewController defaultPageWidthForUserInterfaceIdiom:]

  // instance methods
  -[SKUIProductPageDetailsViewController dealloc]
  -[SKUIProductPageDetailsViewController delegate]
  -[SKUIProductPageDetailsViewController setDelegate:]
  -[SKUIProductPageDetailsViewController .cxx_destruct]
  -[SKUIProductPageDetailsViewController operationQueue]
  -[SKUIProductPageDetailsViewController setOperationQueue:]
  -[SKUIProductPageDetailsViewController loadView]
  -[SKUIProductPageDetailsViewController viewDidAppear:]
  -[SKUIProductPageDetailsViewController viewDidDisappear:]
  -[SKUIProductPageDetailsViewController scrollView]
  -[SKUIProductPageDetailsViewController _tableViewController]
  -[SKUIProductPageDetailsViewController _resourceLoader]
  -[SKUIProductPageDetailsViewController headerViewController]
  -[SKUIProductPageDetailsViewController setHeaderViewController:]
  -[SKUIProductPageDetailsViewController clientContext]
  -[SKUIProductPageDetailsViewController setClientContext:]
  -[SKUIProductPageDetailsViewController setAskPermission:]
  -[SKUIProductPageDetailsViewController initWithProductPage:]
  -[SKUIProductPageDetailsViewController itemStateCenterRestrictionsChanged:]
  -[SKUIProductPageDetailsViewController productPage]
  -[SKUIProductPageDetailsViewController askPermission]
  -[SKUIProductPageDetailsViewController _storeNotesSection]
  -[SKUIProductPageDetailsViewController _textLayoutRequestWithText:widthOffset:]
  -[SKUIProductPageDetailsViewController _bundledAppsSection]
  -[SKUIProductPageDetailsViewController _parentBundlesSection]
  -[SKUIProductPageDetailsViewController _screenshotsSection]
  -[SKUIProductPageDetailsViewController _descriptionSection]
  -[SKUIProductPageDetailsViewController _whatsNewSection]
  -[SKUIProductPageDetailsViewController _featuresSection]
  -[SKUIProductPageDetailsViewController _infoSection]
  -[SKUIProductPageDetailsViewController _expandSection:]
  -[SKUIProductPageDetailsViewController _addTapRecognizerForView:action:]
  -[SKUIProductPageDetailsViewController _copyrightSection]
  -[SKUIProductPageDetailsViewController _configureSwooshSection:]
  -[SKUIProductPageDetailsViewController screenshotsWillBeginDragging:]
  -[SKUIProductPageDetailsViewController tableViewForTableViewSection:]


SKUIIndexBarControl : UIControl /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} contentEdgeInsets
 @property  {UIEdgeInsets=dddd} hitTestEdgeInsets
 @property  <SKUIIndexBarControlDataSource> *dataSource
 @property  NSDictionary *defaultTextAttributes
 @property  <SKUIIndexBarControlDelegate> *delegate
 @property  long long numberOfSections

  // instance methods
  -[SKUIIndexBarControl initWithCoder:]
  -[SKUIIndexBarControl delegate]
  -[SKUIIndexBarControl setDelegate:]
  -[SKUIIndexBarControl .cxx_destruct]
  -[SKUIIndexBarControl setBounds:]
  -[SKUIIndexBarControl setTransform:]
  -[SKUIIndexBarControl dataSource]
  -[SKUIIndexBarControl setDataSource:]
  -[SKUIIndexBarControl setFrame:]
  -[SKUIIndexBarControl initWithFrame:]
  -[SKUIIndexBarControl traitCollectionDidChange:]
  -[SKUIIndexBarControl sizeThatFits:]
  -[SKUIIndexBarControl pointInside:withEvent:]
  -[SKUIIndexBarControl tintColorDidChange]
  -[SKUIIndexBarControl reloadData]
  -[SKUIIndexBarControl setContentEdgeInsets:]
  -[SKUIIndexBarControl contentEdgeInsets]
  -[SKUIIndexBarControl drawRect:]
  -[SKUIIndexBarControl _visibleBounds]
  -[SKUIIndexBarControl numberOfSections]
  -[SKUIIndexBarControl reloadSections:]
  -[SKUIIndexBarControl _numberOfSections]
  -[SKUIIndexBarControl beginTrackingWithTouch:withEvent:]
  -[SKUIIndexBarControl cancelTrackingWithEvent:]
  -[SKUIIndexBarControl continueTrackingWithTouch:withEvent:]
  -[SKUIIndexBarControl endTrackingWithTouch:withEvent:]
  -[SKUIIndexBarControl _allEntries]
  -[SKUIIndexBarControl setDefaultTextAttributes:]
  -[SKUIIndexBarControl defaultTextAttributes]
  -[SKUIIndexBarControl _displayEntries]
  -[SKUIIndexBarControl _totalSize]
  -[SKUIIndexBarControl reloadCombinedEntry]
  -[SKUIIndexBarControl reloadEntryAtIndexPath:]
  -[SKUIIndexBarControl _invalidateForChangedLayoutProperties]
  -[SKUIIndexBarControl _sendSelectionForTouch:withEvent:]
  -[SKUIIndexBarControl _invalidateDisplayEntries]
  -[SKUIIndexBarControl _numberOfEntriesInSection:]
  -[SKUIIndexBarControl _entryAtIndexPath:]
  -[SKUIIndexBarControl _enumerateEntryIndexPathsUsingBlock:]
  -[SKUIIndexBarControl _configureNewEntry:]
  -[SKUIIndexBarControl _sizeForEntries:]
  -[SKUIIndexBarControl _combinedEntry]
  -[SKUIIndexBarControl _displayEntriesThatFitInViewForGroupedEntries]
  -[SKUIIndexBarControl _allRequiredEntries]
  -[SKUIIndexBarControl _reloadLineSpacing]
  -[SKUIIndexBarControl _totalEntryCount]
  -[SKUIIndexBarControl _sizeForEntryAtIndexPath:]
  -[SKUIIndexBarControl numberOfEntriesInSection:]
  -[SKUIIndexBarControl hitTestEdgeInsets]
  -[SKUIIndexBarControl setHitTestEdgeInsets:]


SKUIProductPageFeaturesView : UIView /usr/lib/libobjc.A.dylib
 @property  long long features
 @property  unsigned long gameCenterFeatures
 @property  NSString *title
 @property  SKUIColorScheme *colorScheme
 @property  SKUIClientContext *clientContext

  // instance methods
  -[SKUIProductPageFeaturesView .cxx_destruct]
  -[SKUIProductPageFeaturesView title]
  -[SKUIProductPageFeaturesView setTitle:]
  -[SKUIProductPageFeaturesView features]
  -[SKUIProductPageFeaturesView setBackgroundColor:]
  -[SKUIProductPageFeaturesView initWithFrame:]
  -[SKUIProductPageFeaturesView sizeThatFits:]
  -[SKUIProductPageFeaturesView layoutSubviews]
  -[SKUIProductPageFeaturesView setFeatures:]
  -[SKUIProductPageFeaturesView clientContext]
  -[SKUIProductPageFeaturesView setClientContext:]
  -[SKUIProductPageFeaturesView colorScheme]
  -[SKUIProductPageFeaturesView setColorScheme:]
  -[SKUIProductPageFeaturesView setFeatures:gameCenterFeatures:]
  -[SKUIProductPageFeaturesView _gameCenterStringWithFeatures:]
  -[SKUIProductPageFeaturesView setGameCenterFeatures:]
  -[SKUIProductPageFeaturesView gameCenterFeatures]


SKUIProductPageFeatureView : UIView /usr/lib/libobjc.A.dylib
 @property  SKUIColorScheme *colorScheme
 @property  UIImage *icon
 @property  NSString *subtitle
 @property  NSString *title

  // instance methods
  -[SKUIProductPageFeatureView .cxx_destruct]
  -[SKUIProductPageFeatureView title]
  -[SKUIProductPageFeatureView setTitle:]
  -[SKUIProductPageFeatureView subtitle]
  -[SKUIProductPageFeatureView setBackgroundColor:]
  -[SKUIProductPageFeatureView sizeThatFits:]
  -[SKUIProductPageFeatureView layoutSubviews]
  -[SKUIProductPageFeatureView setSubtitle:]
  -[SKUIProductPageFeatureView icon]
  -[SKUIProductPageFeatureView setIcon:]
  -[SKUIProductPageFeatureView colorScheme]
  -[SKUIProductPageFeatureView setColorScheme:]


SKUIProductPageHeaderView : UIView /usr/lib/libobjc.A.dylib <SKUIItemOfferButtonDelegate, SKUIContentRatingArtworkLoaderObserver>
 @property  NSString *artistName
 @property  NSString *title
 @property  NSString *inAppPurchasesString
 @property  NSString *editorialBadge
 @property  UIControl *artistButton
 @property  SKUIContentRatingArtworkResourceLoader *contentRatingArtworkLoader
 @property  SKUIItemContentRating *contentRating
 @property  SKUIItemContentRating *secondaryContentRating
 @property  NSString *ageBandString
 @property  SKUIColorScheme *colorScheme
 @property  UIImage *headerImage
 @property  double headerImageHeight
 @property  UIImage *iconImage
 @property  UIControl *shareButton
 @property  SKUIItemOffer *itemOffer
 @property  SKUIItemOfferButton *itemOfferButton
 @property  NSString *itemOfferExplanationText
 @property  NSString *itemOfferExplanationTitle
 @property  BOOL restricted
 @property  SKUIItemState *itemState
 @property  long long numberOfUserRatings
 @property  double userRating
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIProductPageHeaderView dealloc]
  -[SKUIProductPageHeaderView .cxx_destruct]
  -[SKUIProductPageHeaderView title]
  -[SKUIProductPageHeaderView setTitle:]
  -[SKUIProductPageHeaderView isRestricted]
  -[SKUIProductPageHeaderView setBackgroundColor:]
  -[SKUIProductPageHeaderView layoutSubviews]
  -[SKUIProductPageHeaderView sizeToFit]
  -[SKUIProductPageHeaderView setItemState:]
  -[SKUIProductPageHeaderView itemState]
  -[SKUIProductPageHeaderView iconImage]
  -[SKUIProductPageHeaderView setRestricted:]
  -[SKUIProductPageHeaderView setIconImage:]
  -[SKUIProductPageHeaderView artistName]
  -[SKUIProductPageHeaderView setArtistName:]
  -[SKUIProductPageHeaderView userRating]
  -[SKUIProductPageHeaderView setUserRating:]
  -[SKUIProductPageHeaderView numberOfUserRatings]
  -[SKUIProductPageHeaderView setContentRating:]
  -[SKUIProductPageHeaderView contentRating]
  -[SKUIProductPageHeaderView itemOffer]
  -[SKUIProductPageHeaderView headerImage]
  -[SKUIProductPageHeaderView colorScheme]
  -[SKUIProductPageHeaderView setColorScheme:]
  -[SKUIProductPageHeaderView initWithClientContext:]
  -[SKUIProductPageHeaderView editorialBadge]
  -[SKUIProductPageHeaderView setNumberOfUserRatings:]
  -[SKUIProductPageHeaderView itemOfferButton]
  -[SKUIProductPageHeaderView setItemOffer:]
  -[SKUIProductPageHeaderView _cancelConfirmationAction:]
  -[SKUIProductPageHeaderView _showConfirmationAction:]
  -[SKUIProductPageHeaderView itemOfferButtonDidAnimateTransition:]
  -[SKUIProductPageHeaderView itemOfferButtonWillAnimateTransition:]
  -[SKUIProductPageHeaderView setHeaderImage:]
  -[SKUIProductPageHeaderView setItemState:animated:]
  -[SKUIProductPageHeaderView contentRatingArtworkLoader:didLoadImage:forContentRating:]
  -[SKUIProductPageHeaderView _reloadItemOfferButton:]
  -[SKUIProductPageHeaderView contentRatingName]
  -[SKUIProductPageHeaderView ageBandString]
  -[SKUIProductPageHeaderView _getTopLayoutProperties:origins:height:forWidth:]
  -[SKUIProductPageHeaderView _getBottomLayoutProperties:origins:height:forWidth:]
  -[SKUIProductPageHeaderView _finishButtonAnimation]
  -[SKUIProductPageHeaderView inAppPurchasesString]
  -[SKUIProductPageHeaderView itemOfferExplanationText]
  -[SKUIProductPageHeaderView itemOfferExplanationTitle]
  -[SKUIProductPageHeaderView setAgeBandString:]
  -[SKUIProductPageHeaderView setContentRatingArtworkLoader:]
  -[SKUIProductPageHeaderView setEditorialBadge:]
  -[SKUIProductPageHeaderView setHeaderImageHeight:]
  -[SKUIProductPageHeaderView setInAppPurchasesString:]
  -[SKUIProductPageHeaderView setItemOfferExplanationText:]
  -[SKUIProductPageHeaderView setItemOfferExplanationTitle:]
  -[SKUIProductPageHeaderView setSecondaryContentRating:]
  -[SKUIProductPageHeaderView artistButton]
  -[SKUIProductPageHeaderView contentRatingArtworkLoader]
  -[SKUIProductPageHeaderView headerImageHeight]
  -[SKUIProductPageHeaderView secondaryContentRating]
  -[SKUIProductPageHeaderView shareButton]


SKUIDocumentStackItem : NSObject /usr/lib/libc++.1.dylib
 @property  IKAppDocument *document
 @property  NSDictionary *presentationOptions
 @property  BOOL usesNavigationControllerForModalPresentation
 @property  SKUINavigationDocumentController *navigationDocumentController
 @property  UIViewController *viewController
 @property  UIPopoverPresentationController *popoverPresentationController
 @property  BOOL animated
 @property  NSString *presentationType
 @property  NSString *sheetType
 @property  NSString *overlayType
 @property  NSString *sourceElementIdentifier

  // instance methods
  -[SKUIDocumentStackItem init]
  -[SKUIDocumentStackItem .cxx_destruct]
  -[SKUIDocumentStackItem setViewController:]
  -[SKUIDocumentStackItem viewController]
  -[SKUIDocumentStackItem popoverPresentationController]
  -[SKUIDocumentStackItem isAnimated]
  -[SKUIDocumentStackItem sheetType]
  -[SKUIDocumentStackItem document]
  -[SKUIDocumentStackItem presentationType]
  -[SKUIDocumentStackItem initWithDocument:presentationOptions:]
  -[SKUIDocumentStackItem setNavigationDocumentController:]
  -[SKUIDocumentStackItem presentationOptions]
  -[SKUIDocumentStackItem _setDocument:]
  -[SKUIDocumentStackItem overlayType]
  -[SKUIDocumentStackItem sourceElementIdentifier]
  -[SKUIDocumentStackItem navigationDocumentController]
  -[SKUIDocumentStackItem usesNavigationControllerForModalPresentation]
  -[SKUIDocumentStackItem setUsesNavigationControllerForModalPresentation:]
  -[SKUIDocumentStackItem setPopoverPresentationController:]


SKUIShareTemplateTextItemProvider : UIActivityItemProvider /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIShareTemplateTextItemProvider .cxx_destruct]
  -[SKUIShareTemplateTextItemProvider item]
  -[SKUIShareTemplateTextItemProvider activityViewController:subjectForActivityType:]
  -[SKUIShareTemplateTextItemProvider initWithTemplateElement:clientContext:]


SKUISettingsGroupsDescription : NSObject /usr/lib/libc++.1.dylib <SKUISettingsGroupControllerDelegate>
 @property  SKUIClientContext *clientContext
 @property  <SKUISettingsGroupsDescriptionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUISettingsGroupsDescription init]
  -[SKUISettingsGroupsDescription delegate]
  -[SKUISettingsGroupsDescription setDelegate:]
  -[SKUISettingsGroupsDescription .cxx_destruct]
  -[SKUISettingsGroupsDescription recycle]
  -[SKUISettingsGroupsDescription reloadData]
  -[SKUISettingsGroupsDescription _presentViewController:animated:completion:]
  -[SKUISettingsGroupsDescription numberOfGroups]
  -[SKUISettingsGroupsDescription clientContext]
  -[SKUISettingsGroupsDescription setClientContext:]
  -[SKUISettingsGroupsDescription _dismissViewController:animated:completion:]
  -[SKUISettingsGroupsDescription dispatchUpdate:]
  -[SKUISettingsGroupsDescription _updatedEditsValid]
  -[SKUISettingsGroupsDescription deleteSettingsGroupDescription:]
  -[SKUISettingsGroupsDescription hideSettingsGroupDescription:]
  -[SKUISettingsGroupsDescription indexOfSettingsGroupDescription:]
  -[SKUISettingsGroupsDescription revealSettingsGroupDescription:]
  -[SKUISettingsGroupsDescription hasEditableSettingDescriptions]
  -[SKUISettingsGroupsDescription requestLayoutForWidth:context:]
  -[SKUISettingsGroupsDescription owningViewControllerForSettingsGroupController:]
  -[SKUISettingsGroupsDescription settingDescriptionAtIndexPath:]
  -[SKUISettingsGroupsDescription numberOfSettingsInGroupAtIndex:]
  -[SKUISettingsGroupsDescription footerDescriptionForGroupAtIndex:]
  -[SKUISettingsGroupsDescription shouldShowHeaderForGroupAtIndex:]
  -[SKUISettingsGroupsDescription headerDescriptionForGroupAtIndex:]
  -[SKUISettingsGroupsDescription shouldShowFooterForGroupAtIndex:]
  -[SKUISettingsGroupsDescription createEditTransaction]
  -[SKUISettingsGroupsDescription initWithDelegate:settingsContext:]
  -[SKUISettingsGroupsDescription addSettingsGroupWithViewElement:]
  -[SKUISettingsGroupsDescription settingsGroupController:reloadSettingDescription:]
  -[SKUISettingsGroupsDescription settingsGroupController:viewForSettingDescription:]
  -[SKUISettingsGroupsDescription _addSettingsGroupWithViewElement:controller:]
  -[SKUISettingsGroupsDescription _gatherEditableSettings]
  -[SKUISettingsGroupsDescription _dispatchUpdateForSettingsGroupDescription:atIndex:withUpdateType:]
  -[SKUISettingsGroupsDescription _controllerForGroupElement:]
  -[SKUISettingsGroupsDescription deleteSettingAtIndexPath:]
  -[SKUISettingsGroupsDescription viewElementForSettingAtIndexPath:]


SKUIProductPageTableSwooshSection : SKUIProductPageTableSection <SKUIMissingItemDelegate, SKUISwooshViewControllerDelegate>
 @property  @? actionBlock
 @property  SKUIColorScheme *colorScheme
 @property  SKUIResourceLoader *resourceLoader
 @property  UIViewController *swooshViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIProductPageTableSwooshSection dealloc]
  -[SKUIProductPageTableSwooshSection .cxx_destruct]
  -[SKUIProductPageTableSwooshSection resourceLoader]
  -[SKUIProductPageTableSwooshSection setResourceLoader:]
  -[SKUIProductPageTableSwooshSection actionBlock]
  -[SKUIProductPageTableSwooshSection setActionBlock:]
  -[SKUIProductPageTableSwooshSection colorScheme]
  -[SKUIProductPageTableSwooshSection setColorScheme:]
  -[SKUIProductPageTableSwooshSection headerViewForTableView:]
  -[SKUIProductPageTableSwooshSection _missingItemLoader]
  -[SKUIProductPageTableSwooshSection missingItemLoader:didLoadItems:invalidItemIdentifiers:]
  -[SKUIProductPageTableSwooshSection swooshViewController]
  -[SKUIProductPageTableSwooshSection _swooshViewController]
  -[SKUIProductPageTableSwooshSection _artworkLoader]
  -[SKUIProductPageTableSwooshSection swoosh:imageForCellAtIndex:]
  -[SKUIProductPageTableSwooshSection swoosh:didSelectCellAtIndex:]
  -[SKUIProductPageTableSwooshSection initWithLockups:title:]
  -[SKUIProductPageTableSwooshSection initWithItems:title:]


SKUIActionsViewElement : SKUIViewElement

SKUISettingsContext : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIClientContext *clientContext

  // instance methods
  -[SKUISettingsContext .cxx_destruct]
  -[SKUISettingsContext clientContext]
  -[SKUISettingsContext setClientContext:]
  -[SKUISettingsContext initWithClientContext:]
  -[SKUISettingsContext dequeueReusableSettingDescriptionForViewElement:parent:]
  -[SKUISettingsContext recycleSettingDescriptions:]
  -[SKUISettingsContext _registerReuseClasses]
  -[SKUISettingsContext _dequeueReusableSettingDescriptionWithReuseIdentifier:forViewElement:parent:]
  -[SKUISettingsContext _registerClass:forReuseIdentifier:]


SKUIRedeemITunesPassLockup : UIControl /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIRedeemITunesPassLockup .cxx_destruct]
  -[SKUIRedeemITunesPassLockup sizeThatFits:]
  -[SKUIRedeemITunesPassLockup layoutSubviews]
  -[SKUIRedeemITunesPassLockup setHighlighted:]
  -[SKUIRedeemITunesPassLockup initWithITunesPassConfiguration:clientContext:]
  -[SKUIRedeemITunesPassLockup _attributedDescriptionString]


SKUIAppleIDImageURLProtocol : NSURLProtocol /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // class methods
  +[SKUIAppleIDImageURLProtocol canInitWithRequest:]
  +[SKUIAppleIDImageURLProtocol canonicalRequestForRequest:]

  // instance methods
  -[SKUIAppleIDImageURLProtocol stopLoading]
  -[SKUIAppleIDImageURLProtocol startLoading]
  -[SKUIAppleIDImageURLProtocol _startLoading]


SKUIProductPageHeaderViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIItemStateCenterObserver, UIPopoverControllerDelegate>
 @property  SKUIItem *item
 @property  SKUIClientContext *clientContext
 @property  <SKUIProductPageHeaderViewDelegate> *delegate
 @property  BOOL askPermission
 @property  UIImage *iconImage
 @property  NSOperationQueue *operationQueue
 @property  long long selectedSectionIndex
 @property  SKUIProductPageHeaderFloatingView *floatingView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIProductPageHeaderViewController dealloc]
  -[SKUIProductPageHeaderViewController delegate]
  -[SKUIProductPageHeaderViewController setDelegate:]
  -[SKUIProductPageHeaderViewController .cxx_destruct]
  -[SKUIProductPageHeaderViewController operationQueue]
  -[SKUIProductPageHeaderViewController setOperationQueue:]
  -[SKUIProductPageHeaderViewController item]
  -[SKUIProductPageHeaderViewController loadView]
  -[SKUIProductPageHeaderViewController popoverControllerDidDismissPopover:]
  -[SKUIProductPageHeaderViewController viewWillAppear:]
  -[SKUIProductPageHeaderViewController viewWillDisappear:]
  -[SKUIProductPageHeaderViewController reloadData]
  -[SKUIProductPageHeaderViewController initWithItem:]
  -[SKUIProductPageHeaderViewController didRotateFromInterfaceOrientation:]
  -[SKUIProductPageHeaderViewController iconImage]
  -[SKUIProductPageHeaderViewController selectedSectionIndex]
  -[SKUIProductPageHeaderViewController setSelectedSectionIndex:]
  -[SKUIProductPageHeaderViewController clientContext]
  -[SKUIProductPageHeaderViewController setClientContext:]
  -[SKUIProductPageHeaderViewController _activeItem]
  -[SKUIProductPageHeaderViewController setAskPermission:]
  -[SKUIProductPageHeaderViewController itemStateCenter:itemStatesChanged:]
  -[SKUIProductPageHeaderViewController itemStateCenterRestrictionsChanged:]
  -[SKUIProductPageHeaderViewController setProductPage:]
  -[SKUIProductPageHeaderViewController _destroyPopoverController]
  -[SKUIProductPageHeaderViewController _itemOfferButtonAction:]
  -[SKUIProductPageHeaderViewController _artworkContext]
  -[SKUIProductPageHeaderViewController floatingView]
  -[SKUIProductPageHeaderViewController askPermission]
  -[SKUIProductPageHeaderViewController _segmentedControlTitles]
  -[SKUIProductPageHeaderViewController _sectionControlAction:]
  -[SKUIProductPageHeaderViewController _setPersonalizedOffer:]
  -[SKUIProductPageHeaderViewController _setArtworkWithImage:error:]
  -[SKUIProductPageHeaderViewController _loadUberImageIfAvailable]
  -[SKUIProductPageHeaderViewController _reloadItemStateAnimated:]
  -[SKUIProductPageHeaderViewController _showActivityViewControllerFromView:]
  -[SKUIProductPageHeaderViewController _contentRatingResourceLoader]
  -[SKUIProductPageHeaderViewController _artistButtonAction:]
  -[SKUIProductPageHeaderViewController _ageBandString]
  -[SKUIProductPageHeaderViewController _isRestricted]
  -[SKUIProductPageHeaderViewController _shareButtonAction:]
  -[SKUIProductPageHeaderViewController _showAskPermissionBanner]
  -[SKUIProductPageHeaderViewController _setItemState:animated:]
  -[SKUIProductPageHeaderViewController _sendDidReloadOffer]
  -[SKUIProductPageHeaderViewController _setUberWithImage:error:]
  -[SKUIProductPageHeaderViewController _showSynthesizedItemStateWithFlag:animated:]
  -[SKUIProductPageHeaderViewController _disableItemOfferButtonWithTitle:animated:]


SKUIITunesPassConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *lockupDescription
 @property  NSString *lockupLearnMoreLinkTitle
 @property  NSString *lockupTitle
 @property  NSString *learnMoreAddPassButtonTitle
 @property  NSString *learnMoreDoneButtonTitle
 @property  NSString *learnMoreExplanation
 @property  NSString *learnMoreTitle
 @property  NSString *learnMoreViewPassButtonTitle

  // instance methods
  -[SKUIITunesPassConfiguration .cxx_destruct]
  -[SKUIITunesPassConfiguration learnMoreExplanation]
  -[SKUIITunesPassConfiguration learnMoreViewPassButtonTitle]
  -[SKUIITunesPassConfiguration learnMoreAddPassButtonTitle]
  -[SKUIITunesPassConfiguration learnMoreTitle]
  -[SKUIITunesPassConfiguration learnMoreDoneButtonTitle]
  -[SKUIITunesPassConfiguration lockupTitle]
  -[SKUIITunesPassConfiguration lockupDescription]
  -[SKUIITunesPassConfiguration lockupLearnMoreLinkTitle]
  -[SKUIITunesPassConfiguration initWithITunesPassDictionary:clientContext:]
  -[SKUIITunesPassConfiguration learnMoreAlertView]


SKUIStorePageCollectionViewLayoutInvalidationContext : UICollectionViewFlowLayoutInvalidationContext /usr/lib/libobjc.A.dylib
 @property  BOOL invalidateItemPinningLayoutInformation
 @property  BOOL invalidatePinnedBackdropViewStyle

  // instance methods
  -[SKUIStorePageCollectionViewLayoutInvalidationContext setInvalidateItemPinningLayoutInformation:]
  -[SKUIStorePageCollectionViewLayoutInvalidationContext setInvalidatePinnedBackdropViewStyle:]
  -[SKUIStorePageCollectionViewLayoutInvalidationContext invalidateItemPinningLayoutInformation]
  -[SKUIStorePageCollectionViewLayoutInvalidationContext invalidatePinnedBackdropViewStyle]


SKUIProductPageInAppPurchaseTableCell : SKUITableViewCell
 @property  SKUIColorScheme *colorScheme
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  NSString *indexString
 @property  NSString *priceString
 @property  NSString *productName

  // instance methods
  -[SKUIProductPageInAppPurchaseTableCell .cxx_destruct]
  -[SKUIProductPageInAppPurchaseTableCell setBackgroundColor:]
  -[SKUIProductPageInAppPurchaseTableCell layoutSubviews]
  -[SKUIProductPageInAppPurchaseTableCell contentInsets]
  -[SKUIProductPageInAppPurchaseTableCell setContentInsets:]
  -[SKUIProductPageInAppPurchaseTableCell setSelected:animated:]
  -[SKUIProductPageInAppPurchaseTableCell setHighlighted:animated:]
  -[SKUIProductPageInAppPurchaseTableCell productName]
  -[SKUIProductPageInAppPurchaseTableCell setProductName:]
  -[SKUIProductPageInAppPurchaseTableCell colorScheme]
  -[SKUIProductPageInAppPurchaseTableCell setColorScheme:]
  -[SKUIProductPageInAppPurchaseTableCell indexString]
  -[SKUIProductPageInAppPurchaseTableCell priceString]
  -[SKUIProductPageInAppPurchaseTableCell setIndexString:]
  -[SKUIProductPageInAppPurchaseTableCell setPriceString:]


SKUIReportAConcernMetadata : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *reportConcernURL
 @property  long long itemIdentifier
 @property  SKUIReportAConcernReason *selectedReason
 @property  NSString *details

  // instance methods
  -[SKUIReportAConcernMetadata .cxx_destruct]
  -[SKUIReportAConcernMetadata itemIdentifier]
  -[SKUIReportAConcernMetadata setItemIdentifier:]
  -[SKUIReportAConcernMetadata details]
  -[SKUIReportAConcernMetadata setDetails:]
  -[SKUIReportAConcernMetadata reportConcernURL]
  -[SKUIReportAConcernMetadata setReportConcernURL:]
  -[SKUIReportAConcernMetadata selectedReason]
  -[SKUIReportAConcernMetadata setSelectedReason:]


SKUIDynamicShelfViewElement : SKUIShelfViewElement <SKUIDynamicShelfViewElement>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SKUIViewElement *cellTemplateViewElement
 @property  <SKUIEntityProviding> *entityProvider

  // instance methods
  -[SKUIDynamicShelfViewElement .cxx_destruct]
  -[SKUIDynamicShelfViewElement applyUpdatesWithElement:]
  -[SKUIDynamicShelfViewElement cellTemplateViewElement]
  -[SKUIDynamicShelfViewElement isDynamicContainer]
  -[SKUIDynamicShelfViewElement setShelfItemViewElementValidator:]


SKUIGroupViewElement : SKUIViewElement
 @property  NSString *type

  // instance methods
  -[SKUIGroupViewElement type]
  -[SKUIGroupViewElement .cxx_destruct]
  -[SKUIGroupViewElement initWithDOMElement:parent:elementFactory:]


SKUIVerticalLockupView : SKUIViewReuseView <SKUIItemOfferButtonDelegate, SKUIPerspectiveView, SKUIViewElementView>
 @property  long long sizingStyle
 @property  double opacityOfViewsOtherThanProductImageView
 @property  double zoomingImageAlpha
 @property  double zoomingImageWidth
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIVerticalLockupView prefetchResourcesForViewElement:reason:context:]
  +[SKUIVerticalLockupView preferredSizeForViewElement:context:]
  +[SKUIVerticalLockupView requestLayoutForViewElement:width:context:]
  +[SKUIVerticalLockupView sizeThatFitsWidth:viewElement:context:]
  +[SKUIVerticalLockupView _attributedStringForButton:context:]
  +[SKUIVerticalLockupView _attributedStringForLabel:context:]
  +[SKUIVerticalLockupView maximumPerspectiveHeightForSize:]
  +[SKUIVerticalLockupView _bottomInsetForViewElement:width:context:]
  +[SKUIVerticalLockupView _topInsetForViewElement:width:context:]

  // instance methods
  -[SKUIVerticalLockupView dealloc]
  -[SKUIVerticalLockupView .cxx_destruct]
  -[SKUIVerticalLockupView initWithFrame:]
  -[SKUIVerticalLockupView sizeThatFits:]
  -[SKUIVerticalLockupView layoutSubviews]
  -[SKUIVerticalLockupView setContentInset:]
  -[SKUIVerticalLockupView reloadWithViewElement:width:context:]
  -[SKUIVerticalLockupView setImage:forArtworkRequest:context:]
  -[SKUIVerticalLockupView updateWithItemState:context:animated:]
  -[SKUIVerticalLockupView viewForElementIdentifier:]
  -[SKUIVerticalLockupView _buttonAction:]
  -[SKUIVerticalLockupView zoomingImageWidth]
  -[SKUIVerticalLockupView zoomingImageAlpha]
  -[SKUIVerticalLockupView setOpacityOfViewsOtherThanProductImageView:]
  -[SKUIVerticalLockupView setZoomingImageAlpha:]
  -[SKUIVerticalLockupView setZoomingImageWidth:]
  -[SKUIVerticalLockupView setPerspectiveTargetView:]
  -[SKUIVerticalLockupView setVanishingPoint:]
  -[SKUIVerticalLockupView updateForChangedDistanceFromVanishingPoint]
  -[SKUIVerticalLockupView _cancelConfirmationAction:]
  -[SKUIVerticalLockupView _showConfirmationAction:]
  -[SKUIVerticalLockupView itemOfferButtonWillAnimateTransition:]
  -[SKUIVerticalLockupView setSizingStyle:]
  -[SKUIVerticalLockupView sizingStyle]
  -[SKUIVerticalLockupView opacityOfViewsOtherThanProductImageView]


SKUISettingsHeaderFooterDescriptionView : UIView /usr/lib/libobjc.A.dylib
  // class methods
  +[SKUISettingsHeaderFooterDescriptionView preferredSizeForSettingsHeaderFooterDescription:context:]
  +[SKUISettingsHeaderFooterDescriptionView prefetchResourcesForSettingsHeaderFooterDescription:reason:context:]
  +[SKUISettingsHeaderFooterDescriptionView requestLayoutForSettingsHeaderFooterDescription:width:context:]
  +[SKUISettingsHeaderFooterDescriptionView sizeThatFitsWidth:settingsHeaderFooterDescription:context:]

  // instance methods
  -[SKUISettingsHeaderFooterDescriptionView setImage:forArtworkRequest:context:]
  -[SKUISettingsHeaderFooterDescriptionView reloadWithSettingsHeaderFooterDescription:width:context:]


SKUIProductPageInformationViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIContentRatingArtworkLoaderObserver>
 @property  SKUIClientContext *clientContext
 @property  SKUIProductPageItem *item
 @property  NSOperationQueue *operationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIProductPageInformationViewController dealloc]
  -[SKUIProductPageInformationViewController .cxx_destruct]
  -[SKUIProductPageInformationViewController operationQueue]
  -[SKUIProductPageInformationViewController setOperationQueue:]
  -[SKUIProductPageInformationViewController item]
  -[SKUIProductPageInformationViewController loadView]
  -[SKUIProductPageInformationViewController clientContext]
  -[SKUIProductPageInformationViewController contentRatingArtworkLoader:didLoadImage:forContentRating:]
  -[SKUIProductPageInformationViewController initWithItem:clientContext:]
  -[SKUIProductPageInformationViewController initWithProductInformation:clientContext:]
  -[SKUIProductPageInformationViewController _contentRatingResourceLoader]
  -[SKUIProductPageInformationViewController _updateLinesWithRatingImage:]
  -[SKUIProductPageInformationViewController _informationLinesWithProductInfo:]
  -[SKUIProductPageInformationViewController _informationLinesWithItem:ratingImage:]


SKUIProductPageItem : SKUIItem
 @property  NSURL *artistPageURL
 @property  SKUIItemContentRating *contentRating
 @property  NSString *copyrightString
 @property  SKUIDeveloperInfo *developerInfo
 @property  NSArray *inAppPurchases
 @property  NSString *installationRequirementsDescription
 @property  NSString *itemDescription
 @property  NSString *lastUpdateDateString
 @property  NSString *licenseAgreementURLString
 @property  NSArray *parentBundleItemIdentifiers
 @property  NSString *privacyPolicyURLString
 @property  NSString *regularPriceString
 @property  NSArray *releaseNotes
 @property  NSString *reviewsURLString
 @property  NSArray *screenshots
 @property  NSArray *secondaryContentRatings
 @property  NSString *sellerName
 @property  NSString *shortenedProductPageURLString
 @property  SKUIStoreNotes *storeNotes
 @property  long long supportedFeatures
 @property  unsigned long supportedGameCenterFeatures
 @property  NSString *supportURLString
 @property  NSString *updateDescription

  // instance methods
  -[SKUIProductPageItem .cxx_destruct]
  -[SKUIProductPageItem supportedFeatures]
  -[SKUIProductPageItem releaseNotes]
  -[SKUIProductPageItem initWithLookupDictionary:]
  -[SKUIProductPageItem contentRating]
  -[SKUIProductPageItem screenshots]
  -[SKUIProductPageItem itemDescription]
  -[SKUIProductPageItem childItemIdentifiers]
  -[SKUIProductPageItem loadedChildItems]
  -[SKUIProductPageItem numberOfChildItems]
  -[SKUIProductPageItem childItemForIdentifier:]
  -[SKUIProductPageItem developerInfo]
  -[SKUIProductPageItem storeNotes]
  -[SKUIProductPageItem updateDescription]
  -[SKUIProductPageItem inAppPurchases]
  -[SKUIProductPageItem copyrightString]
  -[SKUIProductPageItem supportedGameCenterFeatures]
  -[SKUIProductPageItem parentBundleItemIdentifiers]
  -[SKUIProductPageItem lastUpdateDateString]
  -[SKUIProductPageItem secondaryContentRatings]
  -[SKUIProductPageItem artistPageURL]
  -[SKUIProductPageItem regularPriceString]
  -[SKUIProductPageItem sellerName]
  -[SKUIProductPageItem installationRequirementsDescription]
  -[SKUIProductPageItem _setVersionHistory:]
  -[SKUIProductPageItem _setInAppPurchases:]
  -[SKUIProductPageItem licenseAgreementURLString]
  -[SKUIProductPageItem privacyPolicyURLString]
  -[SKUIProductPageItem reviewsURLString]
  -[SKUIProductPageItem shortenedProductPageURLString]
  -[SKUIProductPageItem supportURLString]


SKUIProductPageOverlayController : NSObject /usr/lib/libc++.1.dylib <SKUIIPadProductPageDelegate, SKStoreProductViewControllerDelegate>
 @property  UIViewController *parentViewController
 @property  SKUIClientContext *clientContext
 @property  <SKUIProductPageOverlayDelegate> *delegate
 @property  long long numberOfVisibleOverlays
 @property  NSArray *URLs
 @property  UIView *view
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIProductPageOverlayController dealloc]
  -[SKUIProductPageOverlayController delegate]
  -[SKUIProductPageOverlayController setDelegate:]
  -[SKUIProductPageOverlayController .cxx_destruct]
  -[SKUIProductPageOverlayController URLs]
  -[SKUIProductPageOverlayController view]
  -[SKUIProductPageOverlayController dismiss]
  -[SKUIProductPageOverlayController parentViewController]
  -[SKUIProductPageOverlayController clientContext]
  -[SKUIProductPageOverlayController setClientContext:]
  -[SKUIProductPageOverlayController productViewControllerDidFinish:]
  -[SKUIProductPageOverlayController iPadProductPage:openItem:]
  -[SKUIProductPageOverlayController iPadProductPage:openURL:viewControllerBlock:]
  -[SKUIProductPageOverlayController iPadProductPageCannotOpen:]
  -[SKUIProductPageOverlayController initWithParentViewController:]
  -[SKUIProductPageOverlayController showWithInitialProductPage:metricsPageEvent:]
  -[SKUIProductPageOverlayController showWithInitialURLs:]
  -[SKUIProductPageOverlayController showWithInitialItem:]
  -[SKUIProductPageOverlayController numberOfVisibleOverlays]
  -[SKUIProductPageOverlayController _removeOverlayViewController]
  -[SKUIProductPageOverlayController _showWithInitialViewController:]
  -[SKUIProductPageOverlayController _showOverlayViewController]
  -[SKUIProductPageOverlayController _finishDismissAndNotifyDelegate:withViewController:]
  -[SKUIProductPageOverlayController _backstopViewAction:]
  -[SKUIProductPageOverlayController showWithInitialItemIdentifier:]
  -[SKUIProductPageOverlayController showWithInitialURL:]
  -[SKUIProductPageOverlayController showWithInitialURLRequest:]


SKUICheckboxFieldSettingDescriptionView : SKUIFieldSettingDescriptionView <UITextFieldDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUICheckboxFieldSettingDescriptionView prefetchResourcesForSettingDescription:reason:context:]
  +[SKUICheckboxFieldSettingDescriptionView preferredSizeForSettingDescription:context:]
  +[SKUICheckboxFieldSettingDescriptionView requestLayoutForSettingDescription:width:context:]
  +[SKUICheckboxFieldSettingDescriptionView sizeThatFitsWidth:settingDescription:context:]

  // instance methods
  -[SKUICheckboxFieldSettingDescriptionView .cxx_destruct]
  -[SKUICheckboxFieldSettingDescriptionView layoutSubviews]
  -[SKUICheckboxFieldSettingDescriptionView tintColorDidChange]
  -[SKUICheckboxFieldSettingDescriptionView setContentInset:]
  -[SKUICheckboxFieldSettingDescriptionView setImage:forArtworkRequest:context:]
  -[SKUICheckboxFieldSettingDescriptionView reloadWithSettingDescription:width:context:]
  -[SKUICheckboxFieldSettingDescriptionView _addInputWithElement:]
  -[SKUICheckboxFieldSettingDescriptionView _addLabelWithElement:]
  -[SKUICheckboxFieldSettingDescriptionView _addSwitchWithElement:]
  -[SKUICheckboxFieldSettingDescriptionView _switchValueChanged:]


SKUIPreviewTemplateViewElement : SKUIViewElement
 @property  long long itemIdentifier
 @property  SKUILockupViewElement *previewLockup
 @property  NSString *previewURLString

  // instance methods
  -[SKUIPreviewTemplateViewElement .cxx_destruct]
  -[SKUIPreviewTemplateViewElement itemIdentifier]
  -[SKUIPreviewTemplateViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIPreviewTemplateViewElement applyUpdatesWithElement:]
  -[SKUIPreviewTemplateViewElement previewURLString]
  -[SKUIPreviewTemplateViewElement previewLockup]


SKUIProductPagePlaceholderView : UIView /usr/lib/libobjc.A.dylib
 @property  UIColor *textColor

  // instance methods
  -[SKUIProductPagePlaceholderView .cxx_destruct]
  -[SKUIProductPagePlaceholderView setBackgroundColor:]
  -[SKUIProductPagePlaceholderView setTextColor:]
  -[SKUIProductPagePlaceholderView sizeThatFits:]
  -[SKUIProductPagePlaceholderView layoutSubviews]
  -[SKUIProductPagePlaceholderView textColor]
  -[SKUIProductPagePlaceholderView initWithPlaceholderString:isPad:]


SKUIExplicitRestrictionAlertController : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUIExplicitRestrictionAlertController .cxx_destruct]
  -[SKUIExplicitRestrictionAlertController initWithClientContext:]
  -[SKUIExplicitRestrictionAlertController presentExplicitRestrictionAlertIfNeededOfType:completionBlock:]
  -[SKUIExplicitRestrictionAlertController initWithClientContext:presentingViewController:]


SKUIDocumentContainerViewController : SKUIViewController <IKAppDocumentDelegate, SKUIMediaQueryDelegate, SKUIModalSourceViewProvider, SKUINavigationBarControllerDelegate, SKUINavigationBarDisplayConfiguring, SKUINavigationPaletteProvider, SKUIToolbarControllerDelegate, UIViewControllerTransitioningDelegate, SKUIResourceLoaderDelegate, SKUIViewControllerTesting, SKUIScrollingTabAppearanceStatusObserver, SKUIScrollingTabNestedPagedScrolling>
 @property  SKUIMetricsPageRenderEvent *pageRenderEvent
 @property  SKUIMetricsDOMChangeQueue *domChangeTimingQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *navigationPaletteView
 @property  UIScrollView *scrollingTabNestedPagingScrollView

  // class methods
  +[SKUIDocumentContainerViewController _shouldForwardViewWillTransitionToSize]
  +[SKUIDocumentContainerViewController allowsChildViewControllerNavigationBarManagement]

  // instance methods
  -[SKUIDocumentContainerViewController dealloc]
  -[SKUIDocumentContainerViewController .cxx_destruct]
  -[SKUIDocumentContainerViewController loadView]
  -[SKUIDocumentContainerViewController viewWillAppear:]
  -[SKUIDocumentContainerViewController viewWillDisappear:]
  -[SKUIDocumentContainerViewController reloadData]
  -[SKUIDocumentContainerViewController setPreferredContentSize:]
  -[SKUIDocumentContainerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUIDocumentContainerViewController animationControllerForPresentedController:presentingController:sourceController:]
  -[SKUIDocumentContainerViewController animationControllerForDismissedController:]
  -[SKUIDocumentContainerViewController willMoveToParentViewController:]
  -[SKUIDocumentContainerViewController supportedInterfaceOrientations]
  -[SKUIDocumentContainerViewController viewDidLayoutSubviews]
  -[SKUIDocumentContainerViewController viewDidAppear:]
  -[SKUIDocumentContainerViewController viewDidDisappear:]
  -[SKUIDocumentContainerViewController contentScrollView]
  -[SKUIDocumentContainerViewController childViewControllerForStatusBarStyle]
  -[SKUIDocumentContainerViewController childViewControllerForStatusBarHidden]
  -[SKUIDocumentContainerViewController toolbarItems]
  -[SKUIDocumentContainerViewController previewMenuItems]
  -[SKUIDocumentContainerViewController _setChildViewController:]
  -[SKUIDocumentContainerViewController documentNeedsUpdate:]
  -[SKUIDocumentContainerViewController impressionableViewElementsForDocument:]
  -[SKUIDocumentContainerViewController documentScrollToTop:]
  -[SKUIDocumentContainerViewController document:runTestWithName:options:]
  -[SKUIDocumentContainerViewController document:evaluateStyleMediaQuery:]
  -[SKUIDocumentContainerViewController documentDidUpdate:]
  -[SKUIDocumentContainerViewController _navigationBarViewElement]
  -[SKUIDocumentContainerViewController mediaQueryEvaluatorDidChange:]
  -[SKUIDocumentContainerViewController mediaQueryEvaluator:valueForKey:]
  -[SKUIDocumentContainerViewController navigationPaletteView]
  -[SKUIDocumentContainerViewController skui_viewWillAppear:]
  -[SKUIDocumentContainerViewController prefersNavigationBarBackgroundViewHidden]
  -[SKUIDocumentContainerViewController navigationBarTintColor]
  -[SKUIDocumentContainerViewController navigationBarTintAdjustmentMode]
  -[SKUIDocumentContainerViewController navigationBarTitleTextTintColor]
  -[SKUIDocumentContainerViewController prefersNavigationBarHidden]
  -[SKUIDocumentContainerViewController performTestWithName:options:]
  -[SKUIDocumentContainerViewController resourceLoader:didLoadAllForReason:]
  -[SKUIDocumentContainerViewController resourceLoaderDidBeginLoading:]
  -[SKUIDocumentContainerViewController getModalSourceViewForElementIdentifier:completionBlock:]
  -[SKUIDocumentContainerViewController scrollingTabAppearanceStatusWasUpdated:]
  -[SKUIDocumentContainerViewController scrollingTabNestedPagingScrollView]
  -[SKUIDocumentContainerViewController scrollingTabViewControllerInNestedPagingScrollViewAtPageIndex:]
  -[SKUIDocumentContainerViewController initWithDocument:options:clientContext:]
  -[SKUIDocumentContainerViewController _showAccountViewControllerWithURL:]
  -[SKUIDocumentContainerViewController additionalLeftBarButtonItemForNavigationBarController:]
  -[SKUIDocumentContainerViewController additionalRightBarButtonItemForNavigationBarController:]
  -[SKUIDocumentContainerViewController _sidepackViewControllerWithOptions:clientContext:]
  -[SKUIDocumentContainerViewController _newViewControllerWithTemplateElement:options:clientContext:]
  -[SKUIDocumentContainerViewController _skui_applicationDidEnterBackground:]
  -[SKUIDocumentContainerViewController documentDidSendMessage:]
  -[SKUIDocumentContainerViewController setPageRenderEvent:]
  -[SKUIDocumentContainerViewController pageRenderEvent]
  -[SKUIDocumentContainerViewController setDomChangeTimingQueue:]
  -[SKUIDocumentContainerViewController _enqueueLoadURLOperation]
  -[SKUIDocumentContainerViewController _submitPageRenderIfPossible]
  -[SKUIDocumentContainerViewController _sendOnViewAttributesChangeWithAttributes:viewWillAppear:]
  -[SKUIDocumentContainerViewController _reloadNavigationBarControllerIfNeeded]
  -[SKUIDocumentContainerViewController _shouldFillNavigationBarContentsBasedOnNavigationBarViewElement]
  -[SKUIDocumentContainerViewController _reloadNavigationPalette]
  -[SKUIDocumentContainerViewController _reloadNavigationBarController]
  -[SKUIDocumentContainerViewController _reloadDefaultBarButtonItems]
  -[SKUIDocumentContainerViewController _toolbarViewElement]
  -[SKUIDocumentContainerViewController _reloadToolbar]
  -[SKUIDocumentContainerViewController domChangeTimingQueue]
  -[SKUIDocumentContainerViewController _onReportPlatformJsonTimes:]
  -[SKUIDocumentContainerViewController _onReportDOMChange:]
  -[SKUIDocumentContainerViewController _onReportRequestTimes:]
  -[SKUIDocumentContainerViewController _onReportDocumentReady:]
  -[SKUIDocumentContainerViewController _reloadPageData]
  -[SKUIDocumentContainerViewController _skui_applicationWillEnterForeground:]
  -[SKUIDocumentContainerViewController _finishLoadOperationWithResponse:error:]
  -[SKUIDocumentContainerViewController _redirectToURL:]
  -[SKUIDocumentContainerViewController _networkTypeChangeNotification:]
  -[SKUIDocumentContainerViewController _showLegacyStorePageWithRequest:page:pageType:URLResponse:]
  -[SKUIDocumentContainerViewController _finishLegacyProtocolOperationForResponse:dataProvider:dictionary:]
  -[SKUIDocumentContainerViewController pendingSizeTransitionCompletion]
  -[SKUIDocumentContainerViewController _reloadNavigationItemContents]
  -[SKUIDocumentContainerViewController _makeSearchBarFirstResponderOnLoad]
  -[SKUIDocumentContainerViewController _selectSearchBarContentOnBecomingFirstResponder]
  -[SKUIDocumentContainerViewController _setMakeSearchBarFirstResponderOnLoad:]
  -[SKUIDocumentContainerViewController _setSelectSearchBarContentOnBecomingFirstResponder:]
  -[SKUIDocumentContainerViewController childViewController]


SKUIPreviewProgressIndicator : UIControl /usr/lib/libobjc.A.dylib
 @property  BOOL indeterminate
 @property  float progress

  // instance methods
  -[SKUIPreviewProgressIndicator .cxx_destruct]
  -[SKUIPreviewProgressIndicator progress]
  -[SKUIPreviewProgressIndicator isIndeterminate]
  -[SKUIPreviewProgressIndicator setProgress:]
  -[SKUIPreviewProgressIndicator setBackgroundColor:]
  -[SKUIPreviewProgressIndicator initWithFrame:]
  -[SKUIPreviewProgressIndicator tintColorDidChange]
  -[SKUIPreviewProgressIndicator setProgress:animated:]
  -[SKUIPreviewProgressIndicator endIndeterminateAnimation]
  -[SKUIPreviewProgressIndicator beginIndeterminateAnimation]
  -[SKUIPreviewProgressIndicator reloadWithPlayerStatus:animated:]
  -[SKUIPreviewProgressIndicator _beginIndeterminateAnimation]
  -[SKUIPreviewProgressIndicator _newShapeViewWithBounds:lineWidth:]


SKUILimitViewElement : SKUIViewElement

SKUIScrollingTabNavigationBar : SUNavigationBar /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore <SKUIPositionAdjusting>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {UIOffset=dd} positionOffset

  // instance methods
  -[SKUIScrollingTabNavigationBar setCenter:]
  -[SKUIScrollingTabNavigationBar setFrame:]
  -[SKUIScrollingTabNavigationBar positionOffset]
  -[SKUIScrollingTabNavigationBar setPositionOffset:]


SKUIProductPagePlaceholderViewController : UIViewController /usr/lib/libobjc.A.dylib <UIScrollViewDelegate, SKUIProductPageChildViewController>
 @property  SKUIClientContext *clientContext
 @property  SKUIColorScheme *colorScheme
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIScrollView *scrollView
 @property  SKUIProductPageHeaderViewController *headerViewController
 @property  <SKUIProductPageChildViewControllerDelegate> *delegate

  // instance methods
  -[SKUIProductPagePlaceholderViewController delegate]
  -[SKUIProductPagePlaceholderViewController setDelegate:]
  -[SKUIProductPagePlaceholderViewController .cxx_destruct]
  -[SKUIProductPagePlaceholderViewController loadView]
  -[SKUIProductPagePlaceholderViewController initWithStyle:]
  -[SKUIProductPagePlaceholderViewController scrollViewDidScroll:]
  -[SKUIProductPagePlaceholderViewController viewDidAppear:]
  -[SKUIProductPagePlaceholderViewController viewDidDisappear:]
  -[SKUIProductPagePlaceholderViewController scrollView]
  -[SKUIProductPagePlaceholderViewController headerViewController]
  -[SKUIProductPagePlaceholderViewController setHeaderViewController:]
  -[SKUIProductPagePlaceholderViewController clientContext]
  -[SKUIProductPagePlaceholderViewController setClientContext:]
  -[SKUIProductPagePlaceholderViewController colorScheme]
  -[SKUIProductPagePlaceholderViewController setColorScheme:]
  -[SKUIProductPagePlaceholderViewController _addHeaderView]


SKUIProductPagePlaceholderScrollView : UIScrollView /usr/lib/libobjc.A.dylib
 @property  BOOL isPad
 @property  UIView *placeholderView
 @property  double offset

  // instance methods
  -[SKUIProductPagePlaceholderScrollView .cxx_destruct]
  -[SKUIProductPagePlaceholderScrollView setOffset:]
  -[SKUIProductPagePlaceholderScrollView offset]
  -[SKUIProductPagePlaceholderScrollView layoutSubviews]
  -[SKUIProductPagePlaceholderScrollView isPad]
  -[SKUIProductPagePlaceholderScrollView setIsPad:]
  -[SKUIProductPagePlaceholderScrollView setPlaceholderView:]
  -[SKUIProductPagePlaceholderScrollView placeholderView]


SKUIProductPageReviewsViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUILayoutCacheDelegate, SKComposeReviewDelegate, SKUIReviewsFacebookViewControllerDelegate, UITableViewDataSource, UITableViewDelegate, SKUIProductPageChildViewController>
 @property  SKUIProductPage *productPage
 @property  SKUIClientContext *clientContext
 @property  SKUIFacebookLikeStatus *facebookLikeStatus
 @property  NSOperationQueue *operationQueue
 @property  BOOL askPermission
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIScrollView *scrollView
 @property  SKUIProductPageHeaderViewController *headerViewController
 @property  <SKUIProductPageChildViewControllerDelegate> *delegate

  // instance methods
  -[SKUIProductPageReviewsViewController dealloc]
  -[SKUIProductPageReviewsViewController delegate]
  -[SKUIProductPageReviewsViewController setDelegate:]
  -[SKUIProductPageReviewsViewController .cxx_destruct]
  -[SKUIProductPageReviewsViewController operationQueue]
  -[SKUIProductPageReviewsViewController loadView]
  -[SKUIProductPageReviewsViewController scrollViewDidScroll:]
  -[SKUIProductPageReviewsViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SKUIProductPageReviewsViewController viewWillAppear:]
  -[SKUIProductPageReviewsViewController reloadData]
  -[SKUIProductPageReviewsViewController viewDidAppear:]
  -[SKUIProductPageReviewsViewController tableView:numberOfRowsInSection:]
  -[SKUIProductPageReviewsViewController tableView:cellForRowAtIndexPath:]
  -[SKUIProductPageReviewsViewController numberOfSectionsInTableView:]
  -[SKUIProductPageReviewsViewController _reloadData]
  -[SKUIProductPageReviewsViewController _tableView]
  -[SKUIProductPageReviewsViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[SKUIProductPageReviewsViewController tableView:didEndDisplayingCell:forRowAtIndexPath:]
  -[SKUIProductPageReviewsViewController tableView:heightForRowAtIndexPath:]
  -[SKUIProductPageReviewsViewController tableView:heightForHeaderInSection:]
  -[SKUIProductPageReviewsViewController tableView:viewForHeaderInSection:]
  -[SKUIProductPageReviewsViewController tableView:didSelectRowAtIndexPath:]
  -[SKUIProductPageReviewsViewController scrollView]
  -[SKUIProductPageReviewsViewController headerViewController]
  -[SKUIProductPageReviewsViewController setHeaderViewController:]
  -[SKUIProductPageReviewsViewController clientContext]
  -[SKUIProductPageReviewsViewController setClientContext:]
  -[SKUIProductPageReviewsViewController reviewComposeViewControllerDidFinish:]
  -[SKUIProductPageReviewsViewController setAskPermission:]
  -[SKUIProductPageReviewsViewController initWithProductPage:]
  -[SKUIProductPageReviewsViewController productPage]
  -[SKUIProductPageReviewsViewController layoutCacheDidFinishBatch:]
  -[SKUIProductPageReviewsViewController _addHeaderView]
  -[SKUIProductPageReviewsViewController askPermission]
  -[SKUIProductPageReviewsViewController facebookLikeStatus]
  -[SKUIProductPageReviewsViewController _urlStringWithPageNumber:]
  -[SKUIProductPageReviewsViewController setFacebookLikeStatus:]
  -[SKUIProductPageReviewsViewController _defaultPageWidth]
  -[SKUIProductPageReviewsViewController _loadNextPageIfNecessaryForOffset:]
  -[SKUIProductPageReviewsViewController _textBoxCellForTableView:indexPath:]
  -[SKUIProductPageReviewsViewController _loadMoreCellForTableView:indexPath:]
  -[SKUIProductPageReviewsViewController _shouldShowLoadMoreCell]
  -[SKUIProductPageReviewsViewController _histogramViewController]
  -[SKUIProductPageReviewsViewController _reviewsHeaderView]
  -[SKUIProductPageReviewsViewController _resetPersonalStarRating]
  -[SKUIProductPageReviewsViewController _textLayoutRequestWithText:]
  -[SKUIProductPageReviewsViewController _appSupportAction:]
  -[SKUIProductPageReviewsViewController _versionSelectionAction:]
  -[SKUIProductPageReviewsViewController _starRatingAction:]
  -[SKUIProductPageReviewsViewController _writeAReviewAction:]
  -[SKUIProductPageReviewsViewController _addReviewsFromResponse:error:]
  -[SKUIProductPageReviewsViewController _setReviewListWithResponse:error:]
  -[SKUIProductPageReviewsViewController _sortSelectionAction:]
  -[SKUIProductPageReviewsViewController _bottomBorderColorForScheme:]
  -[SKUIProductPageReviewsViewController reviewsFacebookViewControllerDidChange:]


SKUIProductPageTableExpandableHeaderView : UIControl /usr/lib/libobjc.A.dylib
 @property  NSString *actionString
 @property  NSString *title
 @property  SKUIColorScheme *colorScheme
 @property  UIColor *bottomBorderColor
 @property  UIColor *topBorderColor

  // instance methods
  -[SKUIProductPageTableExpandableHeaderView .cxx_destruct]
  -[SKUIProductPageTableExpandableHeaderView title]
  -[SKUIProductPageTableExpandableHeaderView setTitle:]
  -[SKUIProductPageTableExpandableHeaderView setBackgroundColor:]
  -[SKUIProductPageTableExpandableHeaderView sizeThatFits:]
  -[SKUIProductPageTableExpandableHeaderView layoutSubviews]
  -[SKUIProductPageTableExpandableHeaderView colorScheme]
  -[SKUIProductPageTableExpandableHeaderView setColorScheme:]
  -[SKUIProductPageTableExpandableHeaderView setTopBorderColor:]
  -[SKUIProductPageTableExpandableHeaderView setBottomBorderColor:]
  -[SKUIProductPageTableExpandableHeaderView actionString]
  -[SKUIProductPageTableExpandableHeaderView bottomBorderColor]
  -[SKUIProductPageTableExpandableHeaderView topBorderColor]
  -[SKUIProductPageTableExpandableHeaderView setActionString:]


SKUINavigationPaletteController : SKUINavigationBarSectionController
  // instance methods
  -[SKUINavigationPaletteController .cxx_destruct]
  -[SKUINavigationPaletteController view]
  -[SKUINavigationPaletteController viewForElementIdentifier:]
  -[SKUINavigationPaletteController artworkRequest:didLoadImage:]
  -[SKUINavigationPaletteController willAppearInNavigationBar]
  -[SKUINavigationPaletteController reloadSectionViews]
  -[SKUINavigationPaletteController initWithPaletteViewElement:]


SKUIProductPageTableHeaderOnlySection : SKUIProductPageTableSection
 @property  UIView *headerView

  // instance methods
  -[SKUIProductPageTableHeaderOnlySection .cxx_destruct]
  -[SKUIProductPageTableHeaderOnlySection headerView]
  -[SKUIProductPageTableHeaderOnlySection setHeaderView:]
  -[SKUIProductPageTableHeaderOnlySection headerViewForTableView:]


SKUIProductPageTableInAppPurchasesSection : SKUIProductPageTableSection
 @property  SKUIColorScheme *colorScheme

  // instance methods
  -[SKUIProductPageTableInAppPurchasesSection .cxx_destruct]
  -[SKUIProductPageTableInAppPurchasesSection setExpanded:]
  -[SKUIProductPageTableInAppPurchasesSection colorScheme]
  -[SKUIProductPageTableInAppPurchasesSection setColorScheme:]
  -[SKUIProductPageTableInAppPurchasesSection heightForCellInTableView:indexPath:]
  -[SKUIProductPageTableInAppPurchasesSection numberOfRowsInSection]
  -[SKUIProductPageTableInAppPurchasesSection tableViewCellForTableView:indexPath:]
  -[SKUIProductPageTableInAppPurchasesSection headerViewForTableView:]
  -[SKUIProductPageTableInAppPurchasesSection initWithInAppPurchases:clientContext:]
  -[SKUIProductPageTableInAppPurchasesSection _reloadHeaderView]


SKUIProductPageTableLinksSection : SKUIProductPageTableSection
 @property  SKUIColorScheme *colorScheme

  // instance methods
  -[SKUIProductPageTableLinksSection .cxx_destruct]
  -[SKUIProductPageTableLinksSection colorScheme]
  -[SKUIProductPageTableLinksSection setColorScheme:]
  -[SKUIProductPageTableLinksSection heightForCellInTableView:indexPath:]
  -[SKUIProductPageTableLinksSection numberOfRowsInSection]
  -[SKUIProductPageTableLinksSection tableViewCellForTableView:indexPath:]
  -[SKUIProductPageTableLinksSection initWithItem:clientContext:askPermission:]
  -[SKUIProductPageTableLinksSection selectionActionForTableView:indexPath:]


SKUIInfoListViewElement : SKUIViewElement
 @property  long long infoListType

  // instance methods
  -[SKUIInfoListViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIInfoListViewElement applyUpdatesWithElement:]
  -[SKUIInfoListViewElement enumerateChildrenUsingBlock:]
  -[SKUIInfoListViewElement pageComponentType]
  -[SKUIInfoListViewElement infoListType]


SKUIToggleStateCenter : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SKUIToggleStateCenter defaultCenter]

  // instance methods
  -[SKUIToggleStateCenter init]
  -[SKUIToggleStateCenter dealloc]
  -[SKUIToggleStateCenter .cxx_destruct]
  -[SKUIToggleStateCenter addObserver:]
  -[SKUIToggleStateCenter removeObserver:]
  -[SKUIToggleStateCenter itemForIdentifier:]
  -[SKUIToggleStateCenter updateItem:]
  -[SKUIToggleStateCenter _notifyObserversOfStateChanges:]
  -[SKUIToggleStateCenter clearAll]
  -[SKUIToggleStateCenter _accountStoreChangeNotification:]


SKUIRedeemPreflightOperation : NSOperation /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  BOOL forcesAuthentication
 @property  BOOL loadsRedeemCodeMetadata
 @property  SKUIRedeemViewControllerLegacy *redeemViewController
 @property  SKUIRedeemConfiguration *redeemConfiguration
 @property  @? outputBlock

  // instance methods
  -[SKUIRedeemPreflightOperation init]
  -[SKUIRedeemPreflightOperation .cxx_destruct]
  -[SKUIRedeemPreflightOperation main]
  -[SKUIRedeemPreflightOperation _authenticationContext]
  -[SKUIRedeemPreflightOperation setRedeemConfiguration:]
  -[SKUIRedeemPreflightOperation setOutputBlock:]
  -[SKUIRedeemPreflightOperation outputBlock]
  -[SKUIRedeemPreflightOperation initWithClientContext:redeemCode:forcesAuthentication:]
  -[SKUIRedeemPreflightOperation setRedeemViewController:]
  -[SKUIRedeemPreflightOperation setLoadsRedeemCodeMetadata:]
  -[SKUIRedeemPreflightOperation redeemConfiguration]
  -[SKUIRedeemPreflightOperation _initSKUIRedeemPreflightOperation]
  -[SKUIRedeemPreflightOperation forcesAuthentication]
  -[SKUIRedeemPreflightOperation redeemViewController]
  -[SKUIRedeemPreflightOperation loadsRedeemCodeMetadata]
  -[SKUIRedeemPreflightOperation _redeemCodeMetadataWithClientContext:]
  -[SKUIRedeemPreflightOperation setForcesAuthentication:]


SKUIRedeemPreflightResult : NSObject /usr/lib/libc++.1.dylib
 @property  SSAccount *account
 @property  SKUIClientContext *clientContext
 @property  SSVRedeemCodeMetadata *codeMetadata
 @property  NSError *error
 @property  SKUIRedeemConfiguration *redeemConfiguration
 @property  long long resultType

  // instance methods
  -[SKUIRedeemPreflightResult .cxx_destruct]
  -[SKUIRedeemPreflightResult error]
  -[SKUIRedeemPreflightResult setError:]
  -[SKUIRedeemPreflightResult resultType]
  -[SKUIRedeemPreflightResult setResultType:]
  -[SKUIRedeemPreflightResult account]
  -[SKUIRedeemPreflightResult setAccount:]
  -[SKUIRedeemPreflightResult clientContext]
  -[SKUIRedeemPreflightResult setClientContext:]
  -[SKUIRedeemPreflightResult setRedeemConfiguration:]
  -[SKUIRedeemPreflightResult redeemConfiguration]
  -[SKUIRedeemPreflightResult codeMetadata]
  -[SKUIRedeemPreflightResult setCodeMetadata:]


SKUIScrollingTabBarContentCollectionView : SKUIViewControllerContainerCollectionView
 @property  <SKUIScrollingTabBarContentCollectionViewDelegate> *delegate
 @property  BOOL performingLayout

  // instance methods
  -[SKUIScrollingTabBarContentCollectionView layoutSubviews]
  -[SKUIScrollingTabBarContentCollectionView _reuseCell:]
  -[SKUIScrollingTabBarContentCollectionView isPerformingLayout]


SKUIAdFeedbackElement : SKUIViewElement
  // class methods
  +[SKUIAdFeedbackElement isEnabled]


SKUIEditorialCardCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIPerspectiveView, SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIEditorialCardCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIEditorialCardCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIEditorialCardCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIEditorialCardCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUIEditorialCardCollectionViewCell maximumPerspectiveHeightForSize:]

  // instance methods
  -[SKUIEditorialCardCollectionViewCell .cxx_destruct]
  -[SKUIEditorialCardCollectionViewCell initWithFrame:]
  -[SKUIEditorialCardCollectionViewCell layoutSubviews]
  -[SKUIEditorialCardCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIEditorialCardCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIEditorialCardCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIEditorialCardCollectionViewCell viewForElementIdentifier:]
  -[SKUIEditorialCardCollectionViewCell setPerspectiveTargetView:]
  -[SKUIEditorialCardCollectionViewCell setVanishingPoint:]
  -[SKUIEditorialCardCollectionViewCell updateForChangedDistanceFromVanishingPoint]


SKUIFlexibleSegmentedControl : UIView /usr/lib/libobjc.A.dylib
 @property  BOOL sizesSegmentsToFitWidth
 @property  <SKUIFlexibleSegmentedControlDelegate> *delegate
 @property  double desiredSegmentWidth
 @property  NSArray *itemTitles
 @property  long long maximumNumberOfVisibleItems
 @property  long long moreListIndex
 @property  NSString *moreListTitle
 @property  long long selectedSegmentIndex

  // instance methods
  -[SKUIFlexibleSegmentedControl dealloc]
  -[SKUIFlexibleSegmentedControl delegate]
  -[SKUIFlexibleSegmentedControl setDelegate:]
  -[SKUIFlexibleSegmentedControl .cxx_destruct]
  -[SKUIFlexibleSegmentedControl initWithFrame:]
  -[SKUIFlexibleSegmentedControl sizeThatFits:]
  -[SKUIFlexibleSegmentedControl layoutSubviews]
  -[SKUIFlexibleSegmentedControl selectedSegmentIndex]
  -[SKUIFlexibleSegmentedControl setSelectedSegmentIndex:]
  -[SKUIFlexibleSegmentedControl setDesiredSegmentWidth:]
  -[SKUIFlexibleSegmentedControl itemTitles]
  -[SKUIFlexibleSegmentedControl cancelMoreList]
  -[SKUIFlexibleSegmentedControl moreListIndex]
  -[SKUIFlexibleSegmentedControl frameForSegmentWithIndex:]
  -[SKUIFlexibleSegmentedControl setItemTitles:]
  -[SKUIFlexibleSegmentedControl moreListTitle]
  -[SKUIFlexibleSegmentedControl setMoreListTitle:]
  -[SKUIFlexibleSegmentedControl maximumNumberOfVisibleItems]
  -[SKUIFlexibleSegmentedControl setMaximumNumberOfVisibleItems:]
  -[SKUIFlexibleSegmentedControl setSizesSegmentsToFitWidth:]
  -[SKUIFlexibleSegmentedControl desiredSegmentWidth]
  -[SKUIFlexibleSegmentedControl _valueChangeAction:]
  -[SKUIFlexibleSegmentedControl _configureSegmentedControl:withTitles:boundingSize:]
  -[SKUIFlexibleSegmentedControl _setTitles:forSegmentedControl:]
  -[SKUIFlexibleSegmentedControl sizesSegmentsToFitWidth]


SKUIViewReusePool : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUIViewReusePool .cxx_destruct]
  -[SKUIViewReusePool initWithParentView:]
  -[SKUIViewReusePool recycleReusableViews:]
  -[SKUIViewReusePool hideUnusedViews]
  -[SKUIViewReusePool registerClass:forViewWithReuseIdentifier:]
  -[SKUIViewReusePool dequeueReusableViewWithReuseIdentifier:]
  -[SKUIViewReusePool viewClassWithReuseIdentifier:]


SKUIProductPageTableSection : SKUITableViewSection
 @property  SKUIClientContext *clientContext
 @property  BOOL expanded

  // instance methods
  -[SKUIProductPageTableSection .cxx_destruct]
  -[SKUIProductPageTableSection isExpanded]
  -[SKUIProductPageTableSection setExpanded:]
  -[SKUIProductPageTableSection clientContext]
  -[SKUIProductPageTableSection setClientContext:]
  -[SKUIProductPageTableSection selectionActionForTableView:indexPath:]
  -[SKUIProductPageTableSection heightForTextLayout:isExpanded:]
  -[SKUIProductPageTableSection textBoxTableViewCellForTableView:indexPath:]


SKUIProductPageTableTextBoxSection : SKUIProductPageTableSection
 @property  SKUILayoutCache *textLayoutCache
 @property  long long stringIndex
 @property  NSString *subtitle
 @property  NSString *title
 @property  SKUIColorScheme *colorScheme

  // instance methods
  -[SKUIProductPageTableTextBoxSection .cxx_destruct]
  -[SKUIProductPageTableTextBoxSection title]
  -[SKUIProductPageTableTextBoxSection setTitle:]
  -[SKUIProductPageTableTextBoxSection subtitle]
  -[SKUIProductPageTableTextBoxSection setSubtitle:]
  -[SKUIProductPageTableTextBoxSection colorScheme]
  -[SKUIProductPageTableTextBoxSection setColorScheme:]
  -[SKUIProductPageTableTextBoxSection initWithClientContext:]
  -[SKUIProductPageTableTextBoxSection heightForCellInTableView:indexPath:]
  -[SKUIProductPageTableTextBoxSection numberOfRowsInSection]
  -[SKUIProductPageTableTextBoxSection tableViewCellForTableView:indexPath:]
  -[SKUIProductPageTableTextBoxSection textLayoutCache]
  -[SKUIProductPageTableTextBoxSection setTextLayoutCache:]
  -[SKUIProductPageTableTextBoxSection setStringIndex:]
  -[SKUIProductPageTableTextBoxSection selectionActionForTableView:indexPath:]
  -[SKUIProductPageTableTextBoxSection stringIndex]


SKUIChartsDocumentViewController : SKUIViewController <SKUIResourceLoaderDelegate, SKUIDocumentViewController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIChartsDocumentViewController _shouldForwardViewWillTransitionToSize]

  // instance methods
  -[SKUIChartsDocumentViewController .cxx_destruct]
  -[SKUIChartsDocumentViewController loadView]
  -[SKUIChartsDocumentViewController viewWillAppear:]
  -[SKUIChartsDocumentViewController viewWillLayoutSubviews]
  -[SKUIChartsDocumentViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUIChartsDocumentViewController sizeForChildContentContainer:withParentContainerSize:]
  -[SKUIChartsDocumentViewController contentScrollView]
  -[SKUIChartsDocumentViewController _resourceLoader]
  -[SKUIChartsDocumentViewController documentDidUpdate:]
  -[SKUIChartsDocumentViewController documentMediaQueriesDidUpdate:]
  -[SKUIChartsDocumentViewController skui_viewWillAppear:]
  -[SKUIChartsDocumentViewController resourceLoader:didLoadAllForReason:]
  -[SKUIChartsDocumentViewController resourceLoaderDidBeginLoading:]
  -[SKUIChartsDocumentViewController initWithTemplateElement:]
  -[SKUIChartsDocumentViewController _newColumnViewControllersWithReusableViewControllers:]
  -[SKUIChartsDocumentViewController _visibleColumnCountForWidth:]
  -[SKUIChartsDocumentViewController _chartInsets]
  -[SKUIChartsDocumentViewController _columnViewControllers]


SKUIProductPageTableUpdateHistorySection : SKUIProductPageTableSection
 @property  long long firstStringIndex
 @property  NSArray *releaseNotes
 @property  SKUILayoutCache *textLayoutCache
 @property  SKUIColorScheme *colorScheme

  // instance methods
  -[SKUIProductPageTableUpdateHistorySection .cxx_destruct]
  -[SKUIProductPageTableUpdateHistorySection setExpanded:]
  -[SKUIProductPageTableUpdateHistorySection setReleaseNotes:]
  -[SKUIProductPageTableUpdateHistorySection releaseNotes]
  -[SKUIProductPageTableUpdateHistorySection colorScheme]
  -[SKUIProductPageTableUpdateHistorySection setColorScheme:]
  -[SKUIProductPageTableUpdateHistorySection initWithClientContext:]
  -[SKUIProductPageTableUpdateHistorySection heightForCellInTableView:indexPath:]
  -[SKUIProductPageTableUpdateHistorySection numberOfRowsInSection]
  -[SKUIProductPageTableUpdateHistorySection tableViewCellForTableView:indexPath:]
  -[SKUIProductPageTableUpdateHistorySection textLayoutCache]
  -[SKUIProductPageTableUpdateHistorySection headerViewForTableView:]
  -[SKUIProductPageTableUpdateHistorySection setTextLayoutCache:]
  -[SKUIProductPageTableUpdateHistorySection setFirstStringIndex:]
  -[SKUIProductPageTableUpdateHistorySection _reloadHeaderView]
  -[SKUIProductPageTableUpdateHistorySection selectionActionForTableView:indexPath:]
  -[SKUIProductPageTableUpdateHistorySection firstStringIndex]


SKUIOnboardingCircleView : UIView /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} edgeInsets
 @property  UIColor *fillColor
 @property  double minimumDiameter
 @property  UILabel *titleLabel
 @property  long long titlePosition

  // instance methods
  -[SKUIOnboardingCircleView .cxx_destruct]
  -[SKUIOnboardingCircleView setBackgroundImage:]
  -[SKUIOnboardingCircleView initWithFrame:]
  -[SKUIOnboardingCircleView titleLabel]
  -[SKUIOnboardingCircleView layoutSubviews]
  -[SKUIOnboardingCircleView setEdgeInsets:]
  -[SKUIOnboardingCircleView edgeInsets]
  -[SKUIOnboardingCircleView fillColor]
  -[SKUIOnboardingCircleView drawRect:]
  -[SKUIOnboardingCircleView setFillColor:]
  -[SKUIOnboardingCircleView setTitlePosition:]
  -[SKUIOnboardingCircleView setBackgroundImageAlpha:]
  -[SKUIOnboardingCircleView setMinimumDiameter:]
  -[SKUIOnboardingCircleView minimumDiameter]
  -[SKUIOnboardingCircleView titlePosition]


SKUIMenuBarNavigationBarController : SKUINavigationBarController
 @property  UIView *titleView

  // instance methods
  -[SKUIMenuBarNavigationBarController .cxx_destruct]
  -[SKUIMenuBarNavigationBarController titleView]
  -[SKUIMenuBarNavigationBarController setTitleView:]
  -[SKUIMenuBarNavigationBarController fallbackTitleView]


SKUIStarRatingViewElementView : UIView /usr/lib/libobjc.A.dylib <SKUIViewElementView>
 @property  long long elementSpacing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIStarRatingViewElementView prefetchResourcesForViewElement:reason:context:]
  +[SKUIStarRatingViewElementView preferredSizeForViewElement:context:]
  +[SKUIStarRatingViewElementView requestLayoutForViewElement:width:context:]
  +[SKUIStarRatingViewElementView sizeThatFitsWidth:viewElement:context:]
  +[SKUIStarRatingViewElementView textPropertiesForViewElement:width:context:]
  +[SKUIStarRatingViewElementView _attributedStringWithViewElement:context:]

  // instance methods
  -[SKUIStarRatingViewElementView .cxx_destruct]
  -[SKUIStarRatingViewElementView initWithFrame:]
  -[SKUIStarRatingViewElementView sizeThatFits:]
  -[SKUIStarRatingViewElementView setContentInset:]
  -[SKUIStarRatingViewElementView drawRect:]
  -[SKUIStarRatingViewElementView reloadWithViewElement:width:context:]
  -[SKUIStarRatingViewElementView setImage:forArtworkRequest:context:]
  -[SKUIStarRatingViewElementView updateWithItemState:context:animated:]
  -[SKUIStarRatingViewElementView viewForElementIdentifier:]
  -[SKUIStarRatingViewElementView setElementSpacing:]
  -[SKUIStarRatingViewElementView elementSpacing]


SKUIProductPageTableView : UITableView /usr/lib/libobjc.A.dylib
 @property  UIView *productPageHeaderView

  // instance methods
  -[SKUIProductPageTableView .cxx_destruct]
  -[SKUIProductPageTableView _addContentSubview:atBack:]
  -[SKUIProductPageTableView setProductPageHeaderView:]
  -[SKUIProductPageTableView productPageHeaderView]


SKUISubmitInputViewElement : SKUIInputViewElement
 @property  NSString *label

  // instance methods
  -[SKUISubmitInputViewElement .cxx_destruct]
  -[SKUISubmitInputViewElement label]
  -[SKUISubmitInputViewElement initWithDOMElement:parent:elementFactory:]


SKUIPanelView : SKUIViewReuseView <SKUIAnimatorDOMFeatureDelegate, SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIPanelView prefetchResourcesForViewElement:reason:context:]
  +[SKUIPanelView preferredSizeForViewElement:context:]
  +[SKUIPanelView requestLayoutForViewElement:width:context:]
  +[SKUIPanelView sizeThatFitsWidth:viewElement:context:]
  +[SKUIPanelView _sizeForViewElement:width:context:]
  +[SKUIPanelView _attributedStringForText:style:context:]
  +[SKUIPanelView _useEditorialLayoutForLabelElement:]
  +[SKUIPanelView _isValidTextInputViewElement:]
  +[SKUIPanelView _marginsForViewElement:index:width:context:]
  +[SKUIPanelView _enumerateChildrenOfViewElement:usingBlock:]
  +[SKUIPanelView _shouldDisplayViewElement:]

  // instance methods
  -[SKUIPanelView dealloc]
  -[SKUIPanelView .cxx_destruct]
  -[SKUIPanelView initWithFrame:]
  -[SKUIPanelView layoutSubviews]
  -[SKUIPanelView becomeFirstResponder]
  -[SKUIPanelView setContentInset:]
  -[SKUIPanelView resignFirstResponder]
  -[SKUIPanelView canBecomeFirstResponder]
  -[SKUIPanelView reloadWithViewElement:width:context:]
  -[SKUIPanelView setImage:forArtworkRequest:context:]
  -[SKUIPanelView updateWithItemState:context:animated:]
  -[SKUIPanelView viewForElementIdentifier:]
  -[SKUIPanelView _buttonAction:]
  -[SKUIPanelView animatorFeature:performAnimationWithName:options:]


SKUIProductPageTableViewController : UIViewController /usr/lib/libobjc.A.dylib <UITableViewDataSource, UITableViewDelegate>
 @property  SKUIClientContext *clientContext
 @property  SKUIColorScheme *colorScheme
 @property  NSArray *sections
 @property  SKUILayoutCache *textLayoutCache
 @property  UITableView *tableView
 @property  <SKUIProductPageChildViewControllerDelegate> *delegate
 @property  SKUIProductPageHeaderViewController *headerViewController
 @property  <SKUIProductPageChildViewController> *delegateSender
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIProductPageTableViewController dealloc]
  -[SKUIProductPageTableViewController delegate]
  -[SKUIProductPageTableViewController setDelegate:]
  -[SKUIProductPageTableViewController .cxx_destruct]
  -[SKUIProductPageTableViewController loadView]
  -[SKUIProductPageTableViewController tableView]
  -[SKUIProductPageTableViewController initWithNibName:bundle:]
  -[SKUIProductPageTableViewController scrollViewDidScroll:]
  -[SKUIProductPageTableViewController viewWillAppear:]
  -[SKUIProductPageTableViewController sections]
  -[SKUIProductPageTableViewController tableView:numberOfRowsInSection:]
  -[SKUIProductPageTableViewController tableView:cellForRowAtIndexPath:]
  -[SKUIProductPageTableViewController numberOfSectionsInTableView:]
  -[SKUIProductPageTableViewController setSections:]
  -[SKUIProductPageTableViewController _tableView]
  -[SKUIProductPageTableViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[SKUIProductPageTableViewController tableView:heightForRowAtIndexPath:]
  -[SKUIProductPageTableViewController tableView:heightForHeaderInSection:]
  -[SKUIProductPageTableViewController tableView:heightForFooterInSection:]
  -[SKUIProductPageTableViewController tableView:viewForHeaderInSection:]
  -[SKUIProductPageTableViewController tableView:viewForFooterInSection:]
  -[SKUIProductPageTableViewController tableView:didSelectRowAtIndexPath:]
  -[SKUIProductPageTableViewController headerViewController]
  -[SKUIProductPageTableViewController setHeaderViewController:]
  -[SKUIProductPageTableViewController clientContext]
  -[SKUIProductPageTableViewController setClientContext:]
  -[SKUIProductPageTableViewController colorScheme]
  -[SKUIProductPageTableViewController setColorScheme:]
  -[SKUIProductPageTableViewController textLayoutCache]
  -[SKUIProductPageTableViewController _addHeaderView]
  -[SKUIProductPageTableViewController setTextLayoutCache:]
  -[SKUIProductPageTableViewController initWithInAppPurchases:clientContext:]
  -[SKUIProductPageTableViewController scrollToView:animated:]
  -[SKUIProductPageTableViewController setDelegateSender:]
  -[SKUIProductPageTableViewController _textLayoutRequestWithText:]
  -[SKUIProductPageTableViewController initWithReleaseNotes:clientContext:]
  -[SKUIProductPageTableViewController delegateSender]


_SKUIFontDescriptorCacheKey : NSObject /usr/lib/libc++.1.dylib
 @property  r^{__CFString=} textStyle
 @property  NSString *sizeCategory

  // instance methods
  -[_SKUIFontDescriptorCacheKey isEqual:]
  -[_SKUIFontDescriptorCacheKey .cxx_destruct]
  -[_SKUIFontDescriptorCacheKey textStyle]
  -[_SKUIFontDescriptorCacheKey sizeCategory]
  -[_SKUIFontDescriptorCacheKey initWithTextStyle:sizeCategory:]


SKUIReleaseNote : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *changeNotes
 @property  NSDate *date
 @property  NSString *versionString

  // class methods
  +[SKUIReleaseNote dateFormatter]

  // instance methods
  -[SKUIReleaseNote .cxx_destruct]
  -[SKUIReleaseNote date]
  -[SKUIReleaseNote versionString]
  -[SKUIReleaseNote changeNotes]
  -[SKUIReleaseNote initWithReleaseNoteDictionary:dateFormatter:]


SKUIReview : NSObject /usr/lib/libc++.1.dylib <SKUICacheCoding>
 @property  NSString *body
 @property  NSString *dateString
 @property  float rating
 @property  NSString *reviewer
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *cacheRepresentation

  // instance methods
  -[SKUIReview .cxx_destruct]
  -[SKUIReview title]
  -[SKUIReview body]
  -[SKUIReview reviewer]
  -[SKUIReview rating]
  -[SKUIReview initWithCacheRepresentation:]
  -[SKUIReview initWithReviewDictionary:]
  -[SKUIReview cacheRepresentation]
  -[SKUIReview dateString]
  -[SKUIReview formattedBylineWithClientContext:]


SKUIBrowseItemViewElement : SKUIItemViewElement
 @property  SKUIImageViewElement *decorationImage
 @property  BOOL expands
 @property  NSArray *metadata

  // instance methods
  -[SKUIBrowseItemViewElement metadata]
  -[SKUIBrowseItemViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIBrowseItemViewElement applyUpdatesWithElement:]
  -[SKUIBrowseItemViewElement decorationImage]
  -[SKUIBrowseItemViewElement pageComponentType]
  -[SKUIBrowseItemViewElement expands]


SKUIReviewList : NSObject /usr/lib/libc++.1.dylib <SKUICacheCoding>
 @property  NSArray *reviews
 @property  long long numberOfPages
 @property  long long ratingCount
 @property  float userRating
 @property  long long fiveStarRatingCount
 @property  long long fourStarRatingCount
 @property  long long oneStarRatingCount
 @property  long long threeStarRatingCount
 @property  long long twoStarRatingCount
 @property  NSURL *writeReviewURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *cacheRepresentation

  // instance methods
  -[SKUIReviewList .cxx_destruct]
  -[SKUIReviewList numberOfPages]
  -[SKUIReviewList reviews]
  -[SKUIReviewList userRating]
  -[SKUIReviewList ratingCount]
  -[SKUIReviewList initWithCacheRepresentation:]
  -[SKUIReviewList cacheRepresentation]
  -[SKUIReviewList writeReviewURL]
  -[SKUIReviewList initWithReviewListDictionary:]
  -[SKUIReviewList addReviews:]
  -[SKUIReviewList fiveStarRatingCount]
  -[SKUIReviewList fourStarRatingCount]
  -[SKUIReviewList oneStarRatingCount]
  -[SKUIReviewList threeStarRatingCount]
  -[SKUIReviewList twoStarRatingCount]


SKUIReviewsFacebookView : UIView /usr/lib/libobjc.A.dylib
 @property  SKUIColorScheme *colorScheme
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  NSArray *friendNames
 @property  UIControl *likeToggleButton
 @property  BOOL userLiked

  // instance methods
  -[SKUIReviewsFacebookView .cxx_destruct]
  -[SKUIReviewsFacebookView setBackgroundColor:]
  -[SKUIReviewsFacebookView sizeThatFits:]
  -[SKUIReviewsFacebookView layoutSubviews]
  -[SKUIReviewsFacebookView contentInsets]
  -[SKUIReviewsFacebookView setContentInsets:]
  -[SKUIReviewsFacebookView colorScheme]
  -[SKUIReviewsFacebookView setColorScheme:]
  -[SKUIReviewsFacebookView initWithClientContext:]
  -[SKUIReviewsFacebookView _reloadFriendNamesLabel]
  -[SKUIReviewsFacebookView _reloadLikeButtonState]
  -[SKUIReviewsFacebookView _composedStringForNames:userLiked:]
  -[SKUIReviewsFacebookView setFriendNames:]
  -[SKUIReviewsFacebookView setUserLiked:]
  -[SKUIReviewsFacebookView friendNames]
  -[SKUIReviewsFacebookView likeToggleButton]
  -[SKUIReviewsFacebookView isUserLiked]


SKUIReviewListViewElement : SKUIViewElement
 @property  NSArray *items

  // instance methods
  -[SKUIReviewListViewElement items]
  -[SKUIReviewListViewElement pageComponentType]


SKUIIndexBarEntryViewElement : SKUIViewElement
 @property  SKUIViewElement *childElement
 @property  NSString *targetIndexBarEntryID
 @property  long long visibilityPriority

  // instance methods
  -[SKUIIndexBarEntryViewElement .cxx_destruct]
  -[SKUIIndexBarEntryViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIIndexBarEntryViewElement applyUpdatesWithElement:]
  -[SKUIIndexBarEntryViewElement visibilityPriority]
  -[SKUIIndexBarEntryViewElement childElement]
  -[SKUIIndexBarEntryViewElement targetIndexBarEntryID]


SKUIShelfLayoutData : NSObject /usr/lib/libc++.1.dylib
 @property  double columnSpacing
 @property  long long numberOfRows
 @property  {UIEdgeInsets=dddd} contentInset
 @property  {CGSize=dd} totalContentSize
 @property  long long numberOfColumns

  // instance methods
  -[SKUIShelfLayoutData dealloc]
  -[SKUIShelfLayoutData .cxx_destruct]
  -[SKUIShelfLayoutData numberOfColumns]
  -[SKUIShelfLayoutData numberOfRows]
  -[SKUIShelfLayoutData setContentInset:]
  -[SKUIShelfLayoutData contentInset]
  -[SKUIShelfLayoutData enumerateRowsUsingBlock:]
  -[SKUIShelfLayoutData columnSpacing]
  -[SKUIShelfLayoutData sizeForItemAtIndex:]
  -[SKUIShelfLayoutData totalContentSize]
  -[SKUIShelfLayoutData enumerateColumnsUsingBlock:]
  -[SKUIShelfLayoutData columnWidthForIndex:]
  -[SKUIShelfLayoutData rowHeightForIndex:]
  -[SKUIShelfLayoutData initWithNumberOfRows:columnSpacing:]
  -[SKUIShelfLayoutData reloadWithItemCount:sizeBlock:]


SKUIButtonViewElement : SKUIViewElement
 @property  SKUIBuyButtonDescriptor *buyButtonDescriptor
 @property  BOOL autoIncrementCount
 @property  BOOL bigHitButton
 @property  double bigHitSize
 @property  long long buttonViewType
 @property  long long buttonViewSubType
 @property  SKUIViewElementText *buttonText
 @property  IKViewElementStyle *buttonTitleStyle
 @property  NSString *confirmationText
 @property  NSString *nonToggledText
 @property  NSString *toggledText
 @property  NSString *badgeResourceName
 @property  SKUIImageViewElement *buttonImage
 @property  SKUIImageViewElement *additionalButtonImage
 @property  long long itemIdentifier
 @property  SKUIStoreIdentifier *storeIdentifier
 @property  NSString *bundleIdentifier
 @property  long long dataPlaybackId
 @property  NSString *playItemIdentifier
 @property  NSString *sizeVariant
 @property  BOOL showOnDemand
 @property  NSString *toggleItemIdentifier
 @property  NSString *variantIdentifier
 @property  BOOL disabledButSelectable
 @property  BOOL selected
 @property  BOOL toggled
 @property  BOOL suppressCloudRestore

  // instance methods
  -[SKUIButtonViewElement dealloc]
  -[SKUIButtonViewElement .cxx_destruct]
  -[SKUIButtonViewElement bundleIdentifier]
  -[SKUIButtonViewElement itemIdentifier]
  -[SKUIButtonViewElement isEnabled]
  -[SKUIButtonViewElement isSelected]
  -[SKUIButtonViewElement storeIdentifier]
  -[SKUIButtonViewElement elementType]
  -[SKUIButtonViewElement buttonText]
  -[SKUIButtonViewElement variantIdentifier]
  -[SKUIButtonViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIButtonViewElement applyUpdatesWithElement:]
  -[SKUIButtonViewElement confirmationText]
  -[SKUIButtonViewElement buttonTitleStyle]
  -[SKUIButtonViewElement buttonImage]
  -[SKUIButtonViewElement pageComponentType]
  -[SKUIButtonViewElement setToggled:]
  -[SKUIButtonViewElement buyButtonDescriptor]
  -[SKUIButtonViewElement personalizationLibraryItems]
  -[SKUIButtonViewElement isBigHitButton]
  -[SKUIButtonViewElement isToggled]
  -[SKUIButtonViewElement toggleItemIdentifier]
  -[SKUIButtonViewElement buttonViewType]
  -[SKUIButtonViewElement playItemIdentifier]
  -[SKUIButtonViewElement showOnDemand]
  -[SKUIButtonViewElement isDisabledButSelectable]
  -[SKUIButtonViewElement buttonViewSubType]
  -[SKUIButtonViewElement nonToggledText]
  -[SKUIButtonViewElement toggledText]
  -[SKUIButtonViewElement additionalButtonImage]
  -[SKUIButtonViewElement bigHitSize]
  -[SKUIButtonViewElement autoIncrementCount]
  -[SKUIButtonViewElement sizeVariant]
  -[SKUIButtonViewElement badgeResourceName]
  -[SKUIButtonViewElement _parseButtonText]
  -[SKUIButtonViewElement suppressCloudRestore]
  -[SKUIButtonViewElement setBuyButtonDescriptor:]
  -[SKUIButtonViewElement dataPlaybackId]


SKUIReviewsFacebookViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  SKUIClientContext *clientContext
 @property  SKUIFacebookLikeStatus *facebookLikeStatus
 @property  <SKUIReviewsFacebookViewControllerDelegate> *delegate

  // instance methods
  -[SKUIReviewsFacebookViewController dealloc]
  -[SKUIReviewsFacebookViewController delegate]
  -[SKUIReviewsFacebookViewController setDelegate:]
  -[SKUIReviewsFacebookViewController .cxx_destruct]
  -[SKUIReviewsFacebookViewController loadView]
  -[SKUIReviewsFacebookViewController clientContext]
  -[SKUIReviewsFacebookViewController setClientContext:]
  -[SKUIReviewsFacebookViewController facebookLikeStatus]
  -[SKUIReviewsFacebookViewController setFacebookLikeStatus:]
  -[SKUIReviewsFacebookViewController _reloadFacebookView]
  -[SKUIReviewsFacebookViewController _toggleLike:]
  -[SKUIReviewsFacebookViewController _changeStatusToUserLiked:]


SKUIDeferredActivityItemProvider : UIActivityItemProvider /usr/lib/libobjc.A.dylib
 @property  @? itemProvider
 @property  SKUIClientContext *clientContext
 @property  SKUIProductPageItem *productPageItem

  // class methods
  +[SKUIDeferredActivityItemProvider placeholderItem]

  // instance methods
  -[SKUIDeferredActivityItemProvider .cxx_destruct]
  -[SKUIDeferredActivityItemProvider itemProvider]
  -[SKUIDeferredActivityItemProvider setItemProvider:]
  -[SKUIDeferredActivityItemProvider clientContext]
  -[SKUIDeferredActivityItemProvider setClientContext:]
  -[SKUIDeferredActivityItemProvider productPageItem]
  -[SKUIDeferredActivityItemProvider initWithProductPageItem:clientContext:]
  -[SKUIDeferredActivityItemProvider initWithProductPageItemProvider:clientContext:]
  -[SKUIDeferredActivityItemProvider initWithProductPageItemProvider:clientContext:placeholderItem:]


SKUIToggleButton : SKUIStyledButton <SKUIToggleItemStateCenterObserver>
 @property  long long autoIncrementCount
 @property  long long count
 @property  SKUIButtonViewElement *element
 @property  NSString *toggleItemIdentifier
 @property  NSString *nonToggledTitle
 @property  NSString *toggledTitle
 @property  id nonToggledContents
 @property  id toggledContents
 @property  long long toggleButtonType
 @property  BOOL toggled
 @property  BOOL autoIncrement
 @property  <SKUIToggleButtonDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIToggleButton init]
  -[SKUIToggleButton dealloc]
  -[SKUIToggleButton count]
  -[SKUIToggleButton delegate]
  -[SKUIToggleButton setDelegate:]
  -[SKUIToggleButton element]
  -[SKUIToggleButton .cxx_destruct]
  -[SKUIToggleButton setCount:]
  -[SKUIToggleButton sizeThatFits:]
  -[SKUIToggleButton touchesEnded:withEvent:]
  -[SKUIToggleButton _titleAttributes]
  -[SKUIToggleButton setElement:]
  -[SKUIToggleButton setToggled:]
  -[SKUIToggleButton isToggled]
  -[SKUIToggleButton toggleItemIdentifier]
  -[SKUIToggleButton setNonToggledTitle:]
  -[SKUIToggleButton setToggledTitle:]
  -[SKUIToggleButton setToggleItemIdentifier:]
  -[SKUIToggleButton setToggled:animated:]
  -[SKUIToggleButton autoIncrementCount]
  -[SKUIToggleButton setAutoIncrement:]
  -[SKUIToggleButton setToggleButtonType:]
  -[SKUIToggleButton setAutoIncrementCount:]
  -[SKUIToggleButton setButtonTitleText:]
  -[SKUIToggleButton setNonToggledContents:]
  -[SKUIToggleButton setToggledContents:]
  -[SKUIToggleButton itemStateCenter:itemStateChanged:]
  -[SKUIToggleButton _toggledLayout]
  -[SKUIToggleButton _nonToggledLayout]
  -[SKUIToggleButton _showToggleState:]
  -[SKUIToggleButton _layoutForString:]
  -[SKUIToggleButton nonToggledTitle]
  -[SKUIToggleButton _sendWillAnimate]
  -[SKUIToggleButton _sendDidAnimate]
  -[SKUIToggleButton toggledContents]
  -[SKUIToggleButton nonToggledContents]
  -[SKUIToggleButton toggledTitle]
  -[SKUIToggleButton autoIncrement]
  -[SKUIToggleButton toggleButtonType]


SKUIReviewsHistogramView : UIView /usr/lib/libobjc.A.dylib
 @property  SKUIColorScheme *colorScheme
 @property  NSString *title
 @property  long long numberOfUserRatings
 @property  double userRating
 @property  NSString *versionString
 @property  NSArray *histogramValues
 @property  UIControl *segmentedControl
 @property  NSArray *segmentedControlTitles
 @property  long long selectedSegmentIndex
 @property  UIControl *starRatingControl
 @property  long long personalStarRating
 @property  UIControl *appSupportButton
 @property  UIControl *writeAReviewButton

  // instance methods
  -[SKUIReviewsHistogramView .cxx_destruct]
  -[SKUIReviewsHistogramView title]
  -[SKUIReviewsHistogramView setTitle:]
  -[SKUIReviewsHistogramView setVersionString:]
  -[SKUIReviewsHistogramView versionString]
  -[SKUIReviewsHistogramView setBackgroundColor:]
  -[SKUIReviewsHistogramView sizeThatFits:]
  -[SKUIReviewsHistogramView layoutSubviews]
  -[SKUIReviewsHistogramView selectedSegmentIndex]
  -[SKUIReviewsHistogramView setSelectedSegmentIndex:]
  -[SKUIReviewsHistogramView segmentedControl]
  -[SKUIReviewsHistogramView userRating]
  -[SKUIReviewsHistogramView setUserRating:]
  -[SKUIReviewsHistogramView numberOfUserRatings]
  -[SKUIReviewsHistogramView colorScheme]
  -[SKUIReviewsHistogramView setColorScheme:]
  -[SKUIReviewsHistogramView initWithClientContext:]
  -[SKUIReviewsHistogramView setNumberOfUserRatings:]
  -[SKUIReviewsHistogramView appSupportButton]
  -[SKUIReviewsHistogramView starRatingControl]
  -[SKUIReviewsHistogramView writeAReviewButton]
  -[SKUIReviewsHistogramView personalStarRating]
  -[SKUIReviewsHistogramView setSegmentedControlTitles:]
  -[SKUIReviewsHistogramView setPersonalStarRating:]
  -[SKUIReviewsHistogramView _histogramImageForValues:]
  -[SKUIReviewsHistogramView _countLabelString]
  -[SKUIReviewsHistogramView segmentedControlTitles]
  -[SKUIReviewsHistogramView setHistogramValues:]
  -[SKUIReviewsHistogramView histogramValues]


SKUIHorizontalLockupCollectionViewCell : SKUICollectionViewCell <UIScrollViewAccessibilityDelegate, SKUIPerspectiveView, SKUIViewElementView>
 @property  {UIEdgeInsets=dddd} contentInset
 @property  BOOL scrollingCellToHideActionButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIHorizontalLockupCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIHorizontalLockupCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIHorizontalLockupCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIHorizontalLockupCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUIHorizontalLockupCollectionViewCell maximumPerspectiveHeightForSize:]

  // instance methods
  -[SKUIHorizontalLockupCollectionViewCell dealloc]
  -[SKUIHorizontalLockupCollectionViewCell .cxx_destruct]
  -[SKUIHorizontalLockupCollectionViewCell setBackgroundColor:]
  -[SKUIHorizontalLockupCollectionViewCell initWithFrame:]
  -[SKUIHorizontalLockupCollectionViewCell layoutSubviews]
  -[SKUIHorizontalLockupCollectionViewCell setHighlighted:]
  -[SKUIHorizontalLockupCollectionViewCell scrollViewDidScroll:]
  -[SKUIHorizontalLockupCollectionViewCell scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SKUIHorizontalLockupCollectionViewCell scrollViewDidEndScrollingAnimation:]
  -[SKUIHorizontalLockupCollectionViewCell setContentInset:]
  -[SKUIHorizontalLockupCollectionViewCell setSemanticContentAttribute:]
  -[SKUIHorizontalLockupCollectionViewCell setSelected:]
  -[SKUIHorizontalLockupCollectionViewCell contentInset]
  -[SKUIHorizontalLockupCollectionViewCell applyLayoutAttributes:]
  -[SKUIHorizontalLockupCollectionViewCell setEditing:animated:]
  -[SKUIHorizontalLockupCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIHorizontalLockupCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIHorizontalLockupCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIHorizontalLockupCollectionViewCell viewForElementIdentifier:]
  -[SKUIHorizontalLockupCollectionViewCell setPerspectiveTargetView:]
  -[SKUIHorizontalLockupCollectionViewCell setVanishingPoint:]
  -[SKUIHorizontalLockupCollectionViewCell updateForChangedDistanceFromVanishingPoint]
  -[SKUIHorizontalLockupCollectionViewCell isDeleteButtonHidden]
  -[SKUIHorizontalLockupCollectionViewCell isScrollingCellToHideActionButton]
  -[SKUIHorizontalLockupCollectionViewCell hideDeleteButton]
  -[SKUIHorizontalLockupCollectionViewCell _removeEditControlAnimated:]
  -[SKUIHorizontalLockupCollectionViewCell _addEditControlAnimated:]
  -[SKUIHorizontalLockupCollectionViewCell _isActionsScrollViewEnabled]
  -[SKUIHorizontalLockupCollectionViewCell _reloadActionsScrollViewWithViewElement:context:]
  -[SKUIHorizontalLockupCollectionViewCell _editControlImage]
  -[SKUIHorizontalLockupCollectionViewCell _reloadHighlightBackgroundView]
  -[SKUIHorizontalLockupCollectionViewCell _reloadLockupViewBackgroundColor]
  -[SKUIHorizontalLockupCollectionViewCell _actionButtonAction:]
  -[SKUIHorizontalLockupCollectionViewCell _attributedStringForActionButton:context:]
  -[SKUIHorizontalLockupCollectionViewCell _highlightBackgroundColor]


SKUIAdornedImageViewReuseView : SKUIViewReuseView <SKUIViewElementView, SKUIMediaPlayerObserver>
 @property  SKUIPlayButton *playButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIAdornedImageViewReuseView prefetchResourcesForViewElement:reason:context:]
  +[SKUIAdornedImageViewReuseView preferredSizeForViewElement:context:]
  +[SKUIAdornedImageViewReuseView requestLayoutForViewElement:width:context:]
  +[SKUIAdornedImageViewReuseView sizeThatFitsWidth:viewElement:context:]
  +[SKUIAdornedImageViewReuseView _attributedStringForButton:context:]
  +[SKUIAdornedImageViewReuseView _attributedStringForLabel:context:]
  +[SKUIAdornedImageViewReuseView _attributedStringForMenuItem:context:]
  +[SKUIAdornedImageViewReuseView _attributedStringForButtonText:type:style:context:]

  // instance methods
  -[SKUIAdornedImageViewReuseView init]
  -[SKUIAdornedImageViewReuseView .cxx_destruct]
  -[SKUIAdornedImageViewReuseView layoutSubviews]
  -[SKUIAdornedImageViewReuseView setContentInset:]
  -[SKUIAdornedImageViewReuseView playButton]
  -[SKUIAdornedImageViewReuseView reloadWithViewElement:width:context:]
  -[SKUIAdornedImageViewReuseView setImage:forArtworkRequest:context:]
  -[SKUIAdornedImageViewReuseView updateWithItemState:context:animated:]
  -[SKUIAdornedImageViewReuseView viewForElementIdentifier:]
  -[SKUIAdornedImageViewReuseView _buttonAction:]
  -[SKUIAdornedImageViewReuseView mediaPlayer:itemStateChanged:]
  -[SKUIAdornedImageViewReuseView frameForView:]


SKUIAdornedImageView : SKUIImageView <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIAdornedImageView prefetchResourcesForViewElement:reason:context:]
  +[SKUIAdornedImageView preferredSizeForViewElement:context:]
  +[SKUIAdornedImageView requestLayoutForViewElement:width:context:]
  +[SKUIAdornedImageView sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIAdornedImageView .cxx_destruct]
  -[SKUIAdornedImageView setImage:]
  -[SKUIAdornedImageView initWithFrame:]
  -[SKUIAdornedImageView layoutSubviews]
  -[SKUIAdornedImageView setContentInset:]
  -[SKUIAdornedImageView reloadWithViewElement:width:context:]
  -[SKUIAdornedImageView setImage:forArtworkRequest:context:]
  -[SKUIAdornedImageView updateWithItemState:context:animated:]
  -[SKUIAdornedImageView viewForElementIdentifier:]
  -[SKUIAdornedImageView setImage:cacheKey:context:]
  -[SKUIAdornedImageView updatePlayButonBlur:context:image:cacheKey:]


SKUIGiftTemplateViewElement : SKUIViewElement
 @property  long long giftType
 @property  SKUIItem *productItem

  // instance methods
  -[SKUIGiftTemplateViewElement .cxx_destruct]
  -[SKUIGiftTemplateViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIGiftTemplateViewElement applyUpdatesWithElement:]
  -[SKUIGiftTemplateViewElement giftType]
  -[SKUIGiftTemplateViewElement productItem]


SKUIReviewsHistogramViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  SKUIClientContext *clientContext
 @property  SKUIReviewList *reviewList
 @property  NSString *versionString
 @property  UIControl *segmentedControl
 @property  NSArray *segmentedControlTitles
 @property  long long selectedSegmentIndex
 @property  UIControl *starRatingControl
 @property  long long personalStarRating
 @property  UIControl *appSupportButton
 @property  UIControl *writeAReviewButton

  // instance methods
  -[SKUIReviewsHistogramViewController .cxx_destruct]
  -[SKUIReviewsHistogramViewController setVersionString:]
  -[SKUIReviewsHistogramViewController versionString]
  -[SKUIReviewsHistogramViewController loadView]
  -[SKUIReviewsHistogramViewController selectedSegmentIndex]
  -[SKUIReviewsHistogramViewController setSelectedSegmentIndex:]
  -[SKUIReviewsHistogramViewController segmentedControl]
  -[SKUIReviewsHistogramViewController clientContext]
  -[SKUIReviewsHistogramViewController setClientContext:]
  -[SKUIReviewsHistogramViewController appSupportButton]
  -[SKUIReviewsHistogramViewController starRatingControl]
  -[SKUIReviewsHistogramViewController writeAReviewButton]
  -[SKUIReviewsHistogramViewController personalStarRating]
  -[SKUIReviewsHistogramViewController setReviewList:]
  -[SKUIReviewsHistogramViewController setSegmentedControlTitles:]
  -[SKUIReviewsHistogramViewController setPersonalStarRating:]
  -[SKUIReviewsHistogramViewController segmentedControlTitles]
  -[SKUIReviewsHistogramViewController _histogramView]
  -[SKUIReviewsHistogramViewController _reloadHistogram]
  -[SKUIReviewsHistogramViewController reviewList]


SKUILibraryItemState : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *itemStateVariantIdentifier
 @property  long long availability
 @property  unsigned long AVTypes
 @property  NSString *bundleIdentifier
 @property  NSString *bundleVersion
 @property  BOOL highDefinition
 @property  BOOL preview
 @property  BOOL rental
 @property  NSNumber *storeAccountIdentifier
 @property  NSString *storeFlavorIdentifier
 @property  NSString *storePlatformKind
 @property  NSNumber *storeVersionIdentifier

  // instance methods
  -[SKUILibraryItemState copyWithZone:]
  -[SKUILibraryItemState .cxx_destruct]
  -[SKUILibraryItemState bundleIdentifier]
  -[SKUILibraryItemState bundleVersion]
  -[SKUILibraryItemState setBundleIdentifier:]
  -[SKUILibraryItemState setPreview:]
  -[SKUILibraryItemState initWithApplication:]
  -[SKUILibraryItemState setBundleVersion:]
  -[SKUILibraryItemState availability]
  -[SKUILibraryItemState setAvailability:]
  -[SKUILibraryItemState isRental]
  -[SKUILibraryItemState storeAccountIdentifier]
  -[SKUILibraryItemState isHighDefinition]
  -[SKUILibraryItemState setHighDefinition:]
  -[SKUILibraryItemState setRental:]
  -[SKUILibraryItemState isPreview]
  -[SKUILibraryItemState storePlatformKind]
  -[SKUILibraryItemState newJavaScriptRepresentation]
  -[SKUILibraryItemState itemStateVariantIdentifier]
  -[SKUILibraryItemState AVTypes]
  -[SKUILibraryItemState setAVTypes:]
  -[SKUILibraryItemState setStoreAccountIdentifier:]
  -[SKUILibraryItemState setStorePlatformKind:]
  -[SKUILibraryItemState storeFlavorIdentifier]
  -[SKUILibraryItemState setStoreFlavorIdentifier:]
  -[SKUILibraryItemState storeVersionIdentifier]
  -[SKUILibraryItemState setStoreVersionIdentifier:]


SKUIAddToWishlistActivity : UIActivity /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIAddToWishlistActivity .cxx_destruct]
  -[SKUIAddToWishlistActivity activityType]
  -[SKUIAddToWishlistActivity activityTitle]
  -[SKUIAddToWishlistActivity canPerformWithActivityItems:]
  -[SKUIAddToWishlistActivity activityImage]
  -[SKUIAddToWishlistActivity performActivity]
  -[SKUIAddToWishlistActivity _beforeActivity]
  -[SKUIAddToWishlistActivity initWithItem:clientContext:]


SKUIButtonCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIButtonCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIButtonCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIButtonCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIButtonCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUIButtonCollectionViewCell _attributedStringWithButton:context:]

  // instance methods
  -[SKUIButtonCollectionViewCell dealloc]
  -[SKUIButtonCollectionViewCell .cxx_destruct]
  -[SKUIButtonCollectionViewCell setBackgroundColor:]
  -[SKUIButtonCollectionViewCell layoutSubviews]
  -[SKUIButtonCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIButtonCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIButtonCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIButtonCollectionViewCell viewForElementIdentifier:]
  -[SKUIButtonCollectionViewCell _buttonAction:]
  -[SKUIButtonCollectionViewCell _usesBackgroundWithAlpha]


SKUIGiftActivity : UIActivity /usr/lib/libobjc.A.dylib <SKUIGiftViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIGiftActivity .cxx_destruct]
  -[SKUIGiftActivity activityType]
  -[SKUIGiftActivity activityTitle]
  -[SKUIGiftActivity canPerformWithActivityItems:]
  -[SKUIGiftActivity activityViewController]
  -[SKUIGiftActivity activityImage]
  -[SKUIGiftActivity _beforeActivity]
  -[SKUIGiftActivity giftViewController:didFinishWithResult:]
  -[SKUIGiftActivity initWithItem:clientContext:]


SKUIItemContentRating : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *contentRatingAdvisories
 @property  NSString *contentRatingName
 @property  NSString *contentRank
 @property  NSString *contentRatingSystemName

  // instance methods
  -[SKUIItemContentRating .cxx_destruct]
  -[SKUIItemContentRating contentRatingSystemName]
  -[SKUIItemContentRating contentRank]
  -[SKUIItemContentRating contentRatingName]
  -[SKUIItemContentRating contentRatingAdvisories]
  -[SKUIItemContentRating initWithContentRatingDictionary:systemName:]


SKUIShelfCollectionViewCell : SKUICollectionViewCell <SKUIPerspectiveView>
 @property  UICollectionView *collectionView
 @property  {UIEdgeInsets=dddd} contentInset
 @property  BOOL rendersWithPerspective
 @property  BOOL rendersWithParallax
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIShelfCollectionViewCell maximumPerspectiveHeightForSize:]

  // instance methods
  -[SKUIShelfCollectionViewCell .cxx_destruct]
  -[SKUIShelfCollectionViewCell setBackgroundColor:]
  -[SKUIShelfCollectionViewCell layoutSubviews]
  -[SKUIShelfCollectionViewCell collectionView]
  -[SKUIShelfCollectionViewCell setContentInset:]
  -[SKUIShelfCollectionViewCell setSemanticContentAttribute:]
  -[SKUIShelfCollectionViewCell contentInset]
  -[SKUIShelfCollectionViewCell setCollectionView:]
  -[SKUIShelfCollectionViewCell applyLayoutAttributes:]
  -[SKUIShelfCollectionViewCell rendersWithParallax]
  -[SKUIShelfCollectionViewCell rendersWithPerspective]
  -[SKUIShelfCollectionViewCell setRendersWithPerspective:]
  -[SKUIShelfCollectionViewCell setRendersWithParallax:]
  -[SKUIShelfCollectionViewCell setPerspectiveTargetView:]
  -[SKUIShelfCollectionViewCell setVanishingPoint:]
  -[SKUIShelfCollectionViewCell updateForChangedDistanceFromVanishingPoint]


SKUITemplateParsingDataProvider : SSVURLDataConsumer /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSRegularExpression *regularExpression

  // class methods
  +[SKUITemplateParsingDataProvider templateParsingRegularExpression]

  // instance methods
  -[SKUITemplateParsingDataProvider .cxx_destruct]
  -[SKUITemplateParsingDataProvider regularExpression]
  -[SKUITemplateParsingDataProvider objectForData:response:error:]
  -[SKUITemplateParsingDataProvider initWithRegularExpression:]


SKUITemplateLoader : NSObject /usr/lib/libc++.1.dylib
 @property  NSOperationQueue *operationQueue
 @property  NSRegularExpression *templateParsingRegularExpression
 @property  NSMutableArray *errors
 @property  NSMutableDictionary *templateStrings
 @property  long long pendingOperationCount
 @property  NSArray *URLs
 @property  @? completionBlock

  // instance methods
  -[SKUITemplateLoader load]
  -[SKUITemplateLoader .cxx_destruct]
  -[SKUITemplateLoader operationQueue]
  -[SKUITemplateLoader URLs]
  -[SKUITemplateLoader completionBlock]
  -[SKUITemplateLoader errors]
  -[SKUITemplateLoader pendingOperationCount]
  -[SKUITemplateLoader setPendingOperationCount:]
  -[SKUITemplateLoader initWithURLs:completionBlock:]
  -[SKUITemplateLoader templateParsingRegularExpression]
  -[SKUITemplateLoader _operation:didFailWithError:]
  -[SKUITemplateLoader _operation:didCompleteWithOutput:]
  -[SKUITemplateLoader templateStrings]
  -[SKUITemplateLoader _operationDidFinish:]
  -[SKUITemplateLoader _operationWithURL:]


SKUIStorePagePinnedBackdropDecorationView : UICollectionReusableView /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIStorePagePinnedBackdropDecorationView .cxx_destruct]
  -[SKUIStorePagePinnedBackdropDecorationView initWithFrame:]
  -[SKUIStorePagePinnedBackdropDecorationView applyLayoutAttributes:]


SKUIStorePagePinnedBackdropLayoutAttributes : UICollectionViewLayoutAttributes /usr/lib/libobjc.A.dylib <NSCopying>
 @property  UIColor *backdropColor
 @property  NSString *backdropGroupName
 @property  long long backdropStyle
 @property  BOOL hidesBackdropView
 @property  double transitionProgress

  // instance methods
  -[SKUIStorePagePinnedBackdropLayoutAttributes isEqual:]
  -[SKUIStorePagePinnedBackdropLayoutAttributes copyWithZone:]
  -[SKUIStorePagePinnedBackdropLayoutAttributes .cxx_destruct]
  -[SKUIStorePagePinnedBackdropLayoutAttributes backdropGroupName]
  -[SKUIStorePagePinnedBackdropLayoutAttributes setBackdropGroupName:]
  -[SKUIStorePagePinnedBackdropLayoutAttributes setBackdropStyle:]
  -[SKUIStorePagePinnedBackdropLayoutAttributes backdropStyle]
  -[SKUIStorePagePinnedBackdropLayoutAttributes setTransitionProgress:]
  -[SKUIStorePagePinnedBackdropLayoutAttributes transitionProgress]
  -[SKUIStorePagePinnedBackdropLayoutAttributes setHidesBackdropView:]
  -[SKUIStorePagePinnedBackdropLayoutAttributes setBackdropColor:]
  -[SKUIStorePagePinnedBackdropLayoutAttributes hidesBackdropView]
  -[SKUIStorePagePinnedBackdropLayoutAttributes backdropColor]


SKUIExploreTemplateElement : SKUIViewElement
 @property  NSArray *childViewElements
 @property  SKUIViewElement *leftSplit
 @property  SKUIViewElement *rightSplit
 @property  SKUINavigationBarViewElement *navigationBarElement
 @property  BOOL usesSplits

  // instance methods
  -[SKUIExploreTemplateElement initWithDOMElement:parent:elementFactory:]
  -[SKUIExploreTemplateElement navigationBarElement]
  -[SKUIExploreTemplateElement leftSplit]
  -[SKUIExploreTemplateElement rightSplit]
  -[SKUIExploreTemplateElement usesSplits]
  -[SKUIExploreTemplateElement childViewElements]
  -[SKUIExploreTemplateElement _getLeftSplit:rightSplit:]


SKUIRedeemITunesPassLearnMoreView : UIView /usr/lib/libobjc.A.dylib
 @property  UIControl *button
 @property  NSString *buttonTitle
 @property  NSString *explanationString
 @property  UIImage *headerImage

  // instance methods
  -[SKUIRedeemITunesPassLearnMoreView .cxx_destruct]
  -[SKUIRedeemITunesPassLearnMoreView setBackgroundColor:]
  -[SKUIRedeemITunesPassLearnMoreView button]
  -[SKUIRedeemITunesPassLearnMoreView buttonTitle]
  -[SKUIRedeemITunesPassLearnMoreView layoutSubviews]
  -[SKUIRedeemITunesPassLearnMoreView setButtonTitle:]
  -[SKUIRedeemITunesPassLearnMoreView headerImage]
  -[SKUIRedeemITunesPassLearnMoreView setHeaderImage:]
  -[SKUIRedeemITunesPassLearnMoreView setExplanationString:]
  -[SKUIRedeemITunesPassLearnMoreView explanationString]


SKUIInAppPurchase : NSObject /usr/lib/libc++.1.dylib <SKUICacheCoding>
 @property  NSString *formattedPrice
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *cacheRepresentation

  // instance methods
  -[SKUIInAppPurchase name]
  -[SKUIInAppPurchase .cxx_destruct]
  -[SKUIInAppPurchase formattedPrice]
  -[SKUIInAppPurchase initWithCacheRepresentation:]
  -[SKUIInAppPurchase cacheRepresentation]
  -[SKUIInAppPurchase initWithInAppPurchaseDictionary:]


SKUIScreenshotsView : UIView /usr/lib/libobjc.A.dylib
 @property  UIView *primaryView

  // instance methods
  -[SKUIScreenshotsView .cxx_destruct]
  -[SKUIScreenshotsView initWithFrame:]
  -[SKUIScreenshotsView layoutSubviews]
  -[SKUIScreenshotsView setPrimaryView:]
  -[SKUIScreenshotsView primaryView]


SKUISearchFieldTableView : UITableView /usr/lib/libobjc.A.dylib
 @property  SKUITrendingSearchProvider *trendingSearchProvider
 @property  <SKUITrendingSearchPageViewDelegate> *trendingSearchDelegate
 @property  BOOL trendingSearchesVisible

  // instance methods
  -[SKUISearchFieldTableView .cxx_destruct]
  -[SKUISearchFieldTableView layoutSubviews]
  -[SKUISearchFieldTableView _reloadData]
  -[SKUISearchFieldTableView _reloadView]
  -[SKUISearchFieldTableView trendingSearchProvider]
  -[SKUISearchFieldTableView _setTrendingResponse:error:]
  -[SKUISearchFieldTableView setTrendingSearchProvider:]
  -[SKUISearchFieldTableView setTrendingSearchDelegate:]
  -[SKUISearchFieldTableView setTrendingSearchesVisible:]
  -[SKUISearchFieldTableView trendingSearchDelegate]
  -[SKUISearchFieldTableView trendingSearchesVisible]


SKUIStorePageSplitsDescription : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  SKUIStorePageSplit *bottomSplit
 @property  SKUIStorePageSplit *leftSplit
 @property  SKUIStorePageSplit *rightSplit
 @property  SKUIStorePageSplit *topSplit
 @property  SKUIStorePageSplit *firstSplit
 @property  long long numberOfSplits

  // instance methods
  -[SKUIStorePageSplitsDescription copyWithZone:]
  -[SKUIStorePageSplitsDescription .cxx_destruct]
  -[SKUIStorePageSplitsDescription enumerateSplitsUsingBlock:]
  -[SKUIStorePageSplitsDescription setTopSplit:]
  -[SKUIStorePageSplitsDescription numberOfSplits]
  -[SKUIStorePageSplitsDescription sizeSplitsToFitWidth:usingBlock:]
  -[SKUIStorePageSplitsDescription leftSplit]
  -[SKUIStorePageSplitsDescription rightSplit]
  -[SKUIStorePageSplitsDescription firstSplit]
  -[SKUIStorePageSplitsDescription setBottomSplit:]
  -[SKUIStorePageSplitsDescription setLeftSplit:]
  -[SKUIStorePageSplitsDescription setRightSplit:]
  -[SKUIStorePageSplitsDescription bottomSplit]
  -[SKUIStorePageSplitsDescription topSplit]


SKUIStorePageSplit : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  UIColor *dividerColor
 @property  long long numberOfPageSections
 @property  NSArray *pageComponents
 @property  SKUIStorePageSectionContext *sectionContext
 @property  double widthFraction

  // instance methods
  -[SKUIStorePageSplit copyWithZone:]
  -[SKUIStorePageSplit .cxx_destruct]
  -[SKUIStorePageSplit dividerColor]
  -[SKUIStorePageSplit setDividerColor:]
  -[SKUIStorePageSplit setPageComponents:]
  -[SKUIStorePageSplit pageComponents]
  -[SKUIStorePageSplit sectionContext]
  -[SKUIStorePageSplit setSectionContext:]
  -[SKUIStorePageSplit setNumberOfPageSections:]
  -[SKUIStorePageSplit numberOfPageSections]
  -[SKUIStorePageSplit setWidthFraction:]
  -[SKUIStorePageSplit widthFraction]


SKUIModernChartsView : UIView /usr/lib/libobjc.A.dylib <UIScrollViewDelegate>
 @property  _UIBackdropView *backdropView
 @property  {UIEdgeInsets=dddd} contentInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIModernChartsView dealloc]
  -[SKUIModernChartsView .cxx_destruct]
  -[SKUIModernChartsView initWithFrame:]
  -[SKUIModernChartsView layoutSubviews]
  -[SKUIModernChartsView scrollViewDidScroll:]
  -[SKUIModernChartsView setContentInset:]
  -[SKUIModernChartsView backdropView]
  -[SKUIModernChartsView contentInset]
  -[SKUIModernChartsView _contentSizeCategoryDidChange:]
  -[SKUIModernChartsView _updateHeader]
  -[SKUIModernChartsView _layoutHeadersWithColumnSize:]
  -[SKUIModernChartsView _layoutViewControllersWithColumnSize:contentInset:]
  -[SKUIModernChartsView setColumnViewControllers:]


SKUIPopoverObserver : NSObject /usr/lib/libc++.1.dylib <UIPopoverControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIPopoverObserver dealloc]
  -[SKUIPopoverObserver .cxx_destruct]
  -[SKUIPopoverObserver popoverControllerDidDismissPopover:]
  -[SKUIPopoverObserver dismissPopoverAnimated:]
  -[SKUIPopoverObserver initWithPopoverController:]
  -[SKUIPopoverObserver setTarget:selector:]


SKUIJSUpdatableAssetController : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIJSUpdatableAssetController>
  // instance methods
  -[SKUIJSUpdatableAssetController .cxx_destruct]
  -[SKUIJSUpdatableAssetController refreshCachedManifest:]
  -[SKUIJSUpdatableAssetController initWithAppContext:clientContext:]
  -[SKUIJSUpdatableAssetController currentManifestVersion]
  -[SKUIJSUpdatableAssetController loadResource:]
  -[SKUIJSUpdatableAssetController newestCachedManifestVersion]


SKUITextBoxTableViewCell : SKUITableViewCell
 @property  SKUITextBoxView *textBoxView
 @property  {UIEdgeInsets=dddd} textBoxInsets

  // instance methods
  -[SKUITextBoxTableViewCell .cxx_destruct]
  -[SKUITextBoxTableViewCell prepareForReuse]
  -[SKUITextBoxTableViewCell setBackgroundColor:]
  -[SKUITextBoxTableViewCell layoutSubviews]
  -[SKUITextBoxTableViewCell initWithStyle:reuseIdentifier:]
  -[SKUITextBoxTableViewCell textBoxView]
  -[SKUITextBoxTableViewCell setTextBoxInsets:]
  -[SKUITextBoxTableViewCell textBoxInsets]


SKUITracklistPageComponent : SKUIPageComponent
 @property  SKUITracklistViewElement *viewElement

  // instance methods
  -[SKUITracklistPageComponent componentType]
  -[SKUITracklistPageComponent initWithViewElement:]


SKUIMediaQueryFeature : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *featureName
 @property  NSArray *notificationNames
 @property  NSArray *requiredKeys

  // class methods
  +[SKUIMediaQueryFeature supportsFeatureName:]

  // instance methods
  -[SKUIMediaQueryFeature .cxx_destruct]
  -[SKUIMediaQueryFeature featureName]
  -[SKUIMediaQueryFeature requiredKeys]
  -[SKUIMediaQueryFeature initWithFeatureName:value:]
  -[SKUIMediaQueryFeature evaluateWithValues:]
  -[SKUIMediaQueryFeature notificationNames]


SKUIFacebookLikeStatus : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSArray *friendNames
 @property  NSURL *URL
 @property  BOOL userLiked

  // instance methods
  -[SKUIFacebookLikeStatus copyWithZone:]
  -[SKUIFacebookLikeStatus .cxx_destruct]
  -[SKUIFacebookLikeStatus setURL:]
  -[SKUIFacebookLikeStatus URL]
  -[SKUIFacebookLikeStatus setFriendNames:]
  -[SKUIFacebookLikeStatus setUserLiked:]
  -[SKUIFacebookLikeStatus friendNames]
  -[SKUIFacebookLikeStatus isUserLiked]
  -[SKUIFacebookLikeStatus initWithURL:likeStatusDictionary:]


SKUISizeToFitImageDataConsumer : SKUIImageDataConsumer
 @property  {CGSize=dd} constraintSize
 @property  UIColor *gradientEndColor
 @property  double gradientHeight

  // class methods
  +[SKUISizeToFitImageDataConsumer consumerWithConstraintSize:]
  +[SKUISizeToFitImageDataConsumer consumerWithConstraintSize2:]

  // instance methods
  -[SKUISizeToFitImageDataConsumer .cxx_destruct]
  -[SKUISizeToFitImageDataConsumer imageForImage:]
  -[SKUISizeToFitImageDataConsumer setGradientEndColor:]
  -[SKUISizeToFitImageDataConsumer setGradientHeight:]
  -[SKUISizeToFitImageDataConsumer _drawGradientWithContext:imageRect:]
  -[SKUISizeToFitImageDataConsumer constraintSize]
  -[SKUISizeToFitImageDataConsumer setConstraintSize:]
  -[SKUISizeToFitImageDataConsumer gradientEndColor]
  -[SKUISizeToFitImageDataConsumer gradientHeight]


SKUIProductPageTableHeaderView : UIView /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  NSString *title

  // instance methods
  -[SKUIProductPageTableHeaderView .cxx_destruct]
  -[SKUIProductPageTableHeaderView title]
  -[SKUIProductPageTableHeaderView setTitle:]
  -[SKUIProductPageTableHeaderView setBackgroundColor:]
  -[SKUIProductPageTableHeaderView sizeThatFits:]
  -[SKUIProductPageTableHeaderView layoutSubviews]
  -[SKUIProductPageTableHeaderView contentInsets]
  -[SKUIProductPageTableHeaderView setContentInsets:]


SKUIBrowseItemComponent : SKUIPageComponent
 @property  SKUIImageViewElement *decorationImage
 @property  NSString *title
 @property  NSString *subtitle
 @property  long long index
 @property  BOOL showTopBorder

  // instance methods
  -[SKUIBrowseItemComponent .cxx_destruct]
  -[SKUIBrowseItemComponent index]
  -[SKUIBrowseItemComponent title]
  -[SKUIBrowseItemComponent subtitle]
  -[SKUIBrowseItemComponent setIndex:]
  -[SKUIBrowseItemComponent componentType]
  -[SKUIBrowseItemComponent setShowTopBorder:]
  -[SKUIBrowseItemComponent decorationImage]
  -[SKUIBrowseItemComponent showTopBorder]
  -[SKUIBrowseItemComponent initWithViewElement:]


SKUIPillsControl : UIControl /usr/lib/libobjc.A.dylib
 @property  SKUIColorScheme *colorScheme
 @property  {UIEdgeInsets=dddd} contentInset
 @property  long long maximumNumberOfVisiblePills
 @property  NSString *moreListTitle
 @property  long long selectedIndex
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} selectedPillFrame
 @property  NSArray *titles

  // instance methods
  -[SKUIPillsControl dealloc]
  -[SKUIPillsControl .cxx_destruct]
  -[SKUIPillsControl initWithFrame:]
  -[SKUIPillsControl sizeThatFits:]
  -[SKUIPillsControl layoutSubviews]
  -[SKUIPillsControl setContentInset:]
  -[SKUIPillsControl contentInset]
  -[SKUIPillsControl selectedIndex]
  -[SKUIPillsControl setSelectedIndex:]
  -[SKUIPillsControl setTitles:]
  -[SKUIPillsControl titles]
  -[SKUIPillsControl colorScheme]
  -[SKUIPillsControl setColorScheme:]
  -[SKUIPillsControl moreListTitle]
  -[SKUIPillsControl setMoreListTitle:]
  -[SKUIPillsControl _segmentedControlAction:]
  -[SKUIPillsControl reloadPills]
  -[SKUIPillsControl selectedPillFrame]
  -[SKUIPillsControl maximumNumberOfVisiblePills]
  -[SKUIPillsControl setMaximumNumberOfVisiblePills:]


SKUICrossFadingTabBar : UIView /usr/lib/libobjc.A.dylib
 @property  SKUIScrollingTabBarBackgroundView *backgroundView
 @property  NSArray *tabBarButtons

  // instance methods
  -[SKUICrossFadingTabBar .cxx_destruct]
  -[SKUICrossFadingTabBar initWithFrame:]
  -[SKUICrossFadingTabBar traitCollectionDidChange:]
  -[SKUICrossFadingTabBar backgroundView]
  -[SKUICrossFadingTabBar layoutSubviews]
  -[SKUICrossFadingTabBar tabBarButtons]
  -[SKUICrossFadingTabBar setTabBarButtons:]


SKUIRoundedRectButton : UIButton /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIRoundedRectButton dealloc]
  -[SKUIRoundedRectButton setEnabled:]
  -[SKUIRoundedRectButton .cxx_destruct]
  -[SKUIRoundedRectButton initWithFrame:]
  -[SKUIRoundedRectButton sizeThatFits:]
  -[SKUIRoundedRectButton layoutSubviews]
  -[SKUIRoundedRectButton setHighlighted:]
  -[SKUIRoundedRectButton tintColorDidChange]
  -[SKUIRoundedRectButton animationDidStop:finished:]
  -[SKUIRoundedRectButton setTitleEdgeInsets:]
  -[SKUIRoundedRectButton _basicAnimationWithKeyPath:]
  -[SKUIRoundedRectButton _reloadColors]
  -[SKUIRoundedRectButton _reloadFonts]
  -[SKUIRoundedRectButton setSubtitleWithLabel:]


SKUIStarRatingControl : UIControl /usr/lib/libobjc.A.dylib
 @property  UIImage *emptyStarsImage
 @property  UIImage *filledStarsImage
 @property  long long userRating
 @property  float starSpacing
 @property  float starWidth

  // instance methods
  -[SKUIStarRatingControl .cxx_destruct]
  -[SKUIStarRatingControl setBackgroundColor:]
  -[SKUIStarRatingControl sizeThatFits:]
  -[SKUIStarRatingControl layoutSubviews]
  -[SKUIStarRatingControl pointInside:withEvent:]
  -[SKUIStarRatingControl _isRTL]
  -[SKUIStarRatingControl beginTrackingWithTouch:withEvent:]
  -[SKUIStarRatingControl cancelTrackingWithEvent:]
  -[SKUIStarRatingControl continueTrackingWithTouch:withEvent:]
  -[SKUIStarRatingControl endTrackingWithTouch:withEvent:]
  -[SKUIStarRatingControl userRating]
  -[SKUIStarRatingControl setUserRating:]
  -[SKUIStarRatingControl starWidth]
  -[SKUIStarRatingControl setStarWidth:]
  -[SKUIStarRatingControl setStarSpacing:]
  -[SKUIStarRatingControl setEmptyStarsImage:]
  -[SKUIStarRatingControl setFilledStarsImage:]
  -[SKUIStarRatingControl _updateUserRatingWithTouch:]
  -[SKUIStarRatingControl _unfilledStarsMinX]
  -[SKUIStarRatingControl starSpacing]
  -[SKUIStarRatingControl _ratingForUIDirection:]
  -[SKUIStarRatingControl _unfilledStarsWidth]
  -[SKUIStarRatingControl _firstStar]
  -[SKUIStarRatingControl _lastStar]
  -[SKUIStarRatingControl emptyStarsImage]
  -[SKUIStarRatingControl filledStarsImage]


SKUIWishlist : NSObject /usr/lib/libc++.1.dylib
 @property  long long accountIdentifier
 @property  NSArray *items

  // class methods
  +[SKUIWishlist activeWishlist]

  // instance methods
  -[SKUIWishlist isEqual:]
  -[SKUIWishlist .cxx_destruct]
  -[SKUIWishlist accountIdentifier]
  -[SKUIWishlist items]
  -[SKUIWishlist addItem:]
  -[SKUIWishlist initWithAccountIdentifier:]
  -[SKUIWishlist containsItemWithIdentifier:]
  -[SKUIWishlist postChangeNotification]
  -[SKUIWishlist removeItemsWithItemIdentifiers:]


SKUIScreenshotsViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUISlideshowViewControllerDataSource, SKUISlideshowViewControllerDelegate, UIScrollViewDelegate, UICollectionViewDelegate, UICollectionViewDataSource>
 @property  SKUIClientContext *clientContext
 @property  <SKUIScreenshotsDelegate> *delegate
 @property  NSOperationQueue *operationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIScreenshotsViewController delegate]
  -[SKUIScreenshotsViewController setDelegate:]
  -[SKUIScreenshotsViewController .cxx_destruct]
  -[SKUIScreenshotsViewController operationQueue]
  -[SKUIScreenshotsViewController setOperationQueue:]
  -[SKUIScreenshotsViewController loadView]
  -[SKUIScreenshotsViewController scrollViewWillBeginDragging:]
  -[SKUIScreenshotsViewController viewForZoomingInScrollView:]
  -[SKUIScreenshotsViewController reloadData]
  -[SKUIScreenshotsViewController numberOfSectionsInCollectionView:]
  -[SKUIScreenshotsViewController collectionView:numberOfItemsInSection:]
  -[SKUIScreenshotsViewController collectionView:cellForItemAtIndexPath:]
  -[SKUIScreenshotsViewController collectionView:didSelectItemAtIndexPath:]
  -[SKUIScreenshotsViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[SKUIScreenshotsViewController clientContext]
  -[SKUIScreenshotsViewController numberOfItemsInSlideshowViewController:]
  -[SKUIScreenshotsViewController slideshowViewController:dataConsumerAtIndex:]
  -[SKUIScreenshotsViewController slideshowViewController:imageURLAtIndex:]
  -[SKUIScreenshotsViewController slideshowViewController:placeholderImageAtIndex:]
  -[SKUIScreenshotsViewController slideshowViewController:poppedImageViewAtIndex:]
  -[SKUIScreenshotsViewController slideshowViewController:scrollToImageAtIndex:]
  -[SKUIScreenshotsViewController initWithTrailers:screenshots:clientContext:]
  -[SKUIScreenshotsViewController _setImage:forIndex:]
  -[SKUIScreenshotsViewController _setTrailerImage:forIndex:]


SKUIPaletteViewElement : SKUIViewElement
  // instance methods
  -[SKUIPaletteViewElement enumerateChildrenUsingBlock:]


SKUITracklistLockupCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIItemOfferButtonDelegate, SKUIPreviewContainerView, SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUITracklistLockupCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUITracklistLockupCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUITracklistLockupCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUITracklistLockupCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUITracklistLockupCollectionViewCell _attributedStringForOrdinal:context:]

  // instance methods
  -[SKUITracklistLockupCollectionViewCell dealloc]
  -[SKUITracklistLockupCollectionViewCell .cxx_destruct]
  -[SKUITracklistLockupCollectionViewCell initWithFrame:]
  -[SKUITracklistLockupCollectionViewCell layoutSubviews]
  -[SKUITracklistLockupCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUITracklistLockupCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUITracklistLockupCollectionViewCell updateWithItemState:context:animated:]
  -[SKUITracklistLockupCollectionViewCell viewForElementIdentifier:]
  -[SKUITracklistLockupCollectionViewCell _buttonAction:]
  -[SKUITracklistLockupCollectionViewCell _cancelConfirmationAction:]
  -[SKUITracklistLockupCollectionViewCell _showConfirmationAction:]
  -[SKUITracklistLockupCollectionViewCell itemOfferButtonDidAnimateTransition:]
  -[SKUITracklistLockupCollectionViewCell itemOfferButtonWillAnimateTransition:]
  -[SKUITracklistLockupCollectionViewCell showPreviewProgressWithStatus:animated:]
  -[SKUITracklistLockupCollectionViewCell _audioPlayerStatusChangeNotification:]
  -[SKUITracklistLockupCollectionViewCell _addFlipContainerViewWithFrontView:backView:]
  -[SKUITracklistLockupCollectionViewCell _resolvePreviewStateAfterTransitionForFlipView:]
  -[SKUITracklistLockupCollectionViewCell _previewMediaURL]
  -[SKUITracklistLockupCollectionViewCell hidePreviewProgressAnimated:]
  -[SKUITracklistLockupCollectionViewCell togglePreviewPlaybackAnimated:]
  -[SKUITracklistLockupCollectionViewCell _previewColumnView]
  -[SKUITracklistLockupCollectionViewCell _previewControlViewElement]
  -[SKUITracklistLockupCollectionViewCell _enumerateViewElementViewsUsingBlock:]
  -[SKUITracklistLockupCollectionViewCell _layoutConfirmationGradientRelativeToView:alpha:]


SKUIObjectInspectorViewController : UIViewController /usr/lib/libobjc.A.dylib <UITableViewDataSource, UITableViewDelegate, UIViewControllerTransitioningDelegate, SKUIObjectInspector>
 @property  UIView *contentView
 @property  UIVisualEffectView *backgroundView
 @property  UINavigationBar *navigationBar
 @property  UITableView *tableView
 @property  <SKUIInspectableObject> *inspectableObject
 @property  _SKUIInspectablePropertySection *currentSection
 @property  NSMutableArray *sections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *friendlyName
 @property  NSString *information

  // class methods
  +[SKUIObjectInspectorViewController showInspectableObject:]

  // instance methods
  -[SKUIObjectInspectorViewController .cxx_destruct]
  -[SKUIObjectInspectorViewController friendlyName]
  -[SKUIObjectInspectorViewController setFriendlyName:]
  -[SKUIObjectInspectorViewController contentView]
  -[SKUIObjectInspectorViewController setContentView:]
  -[SKUIObjectInspectorViewController backgroundView]
  -[SKUIObjectInspectorViewController dismiss]
  -[SKUIObjectInspectorViewController tableView]
  -[SKUIObjectInspectorViewController viewDidLoad]
  -[SKUIObjectInspectorViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUIObjectInspectorViewController navigationBar]
  -[SKUIObjectInspectorViewController setNavigationBar:]
  -[SKUIObjectInspectorViewController setBackgroundView:]
  -[SKUIObjectInspectorViewController sections]
  -[SKUIObjectInspectorViewController tableView:numberOfRowsInSection:]
  -[SKUIObjectInspectorViewController tableView:cellForRowAtIndexPath:]
  -[SKUIObjectInspectorViewController numberOfSectionsInTableView:]
  -[SKUIObjectInspectorViewController tableView:titleForHeaderInSection:]
  -[SKUIObjectInspectorViewController setSections:]
  -[SKUIObjectInspectorViewController setTableView:]
  -[SKUIObjectInspectorViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[SKUIObjectInspectorViewController tableView:didSelectRowAtIndexPath:]
  -[SKUIObjectInspectorViewController done:]
  -[SKUIObjectInspectorViewController setupConstraints]
  -[SKUIObjectInspectorViewController setInformation:]
  -[SKUIObjectInspectorViewController information]
  -[SKUIObjectInspectorViewController beginSectionWithFriendlyName:]
  -[SKUIObjectInspectorViewController exposePropertyWithFriendlyName:value:]
  -[SKUIObjectInspectorViewController endSection]
  -[SKUIObjectInspectorViewController initWithInspectableObject:]
  -[SKUIObjectInspectorViewController showFromViewController:]
  -[SKUIObjectInspectorViewController setInspectableObject:]
  -[SKUIObjectInspectorViewController handleBackgroundTap:]
  -[SKUIObjectInspectorViewController populate]
  -[SKUIObjectInspectorViewController calculateContentViewFrameWithParentBounds:withTraitCollection:]
  -[SKUIObjectInspectorViewController inspectableObject]
  -[SKUIObjectInspectorViewController setCurrentSection:]
  -[SKUIObjectInspectorViewController currentSection]


_SKUIInspectableProperty : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *friendlyName
 @property  id value
 @property  NSString *valueString

  // instance methods
  -[_SKUIInspectableProperty .cxx_destruct]
  -[_SKUIInspectableProperty value]
  -[_SKUIInspectableProperty setValue:]
  -[_SKUIInspectableProperty valueString]
  -[_SKUIInspectableProperty friendlyName]
  -[_SKUIInspectableProperty setFriendlyName:]


_SKUIInspectablePropertySection : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *friendlyName
 @property  NSMutableArray *properties

  // instance methods
  -[_SKUIInspectablePropertySection init]
  -[_SKUIInspectablePropertySection .cxx_destruct]
  -[_SKUIInspectablePropertySection properties]
  -[_SKUIInspectablePropertySection friendlyName]
  -[_SKUIInspectablePropertySection setFriendlyName:]


SKUILoadItemResourceOperation : SKUILoadResourceOperation
 @property  SSVPlatformRequestOperation *underlyingOperation
 @property  SKUIItemResourceRequest *resourceRequest

  // instance methods
  -[SKUILoadItemResourceOperation .cxx_destruct]
  -[SKUILoadItemResourceOperation cancel]
  -[SKUILoadItemResourceOperation main]
  -[SKUILoadItemResourceOperation initWithResourceRequest:]
  -[SKUILoadItemResourceOperation setUnderlyingOperation:]
  -[SKUILoadItemResourceOperation underlyingOperation]


SKUILoadItemsResponse : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *loadedItems
 @property  NSSet *invalidItemIdentifiers

  // instance methods
  -[SKUILoadItemsResponse .cxx_destruct]
  -[SKUILoadItemsResponse setLoadedItems:]
  -[SKUILoadItemsResponse loadedItems]
  -[SKUILoadItemsResponse setInvalidItemIdentifiers:]
  -[SKUILoadItemsResponse invalidItemIdentifiers]


SKUISlideshowGalleryBarView : UIView /usr/lib/libobjc.A.dylib
 @property  <SKUISlideshowGalleryBarViewDelegate> *delegate
 @property  unsigned long numberOfImages
 @property  unsigned long selectedImageIndex

  // instance methods
  -[SKUISlideshowGalleryBarView delegate]
  -[SKUISlideshowGalleryBarView setDelegate:]
  -[SKUISlideshowGalleryBarView .cxx_destruct]
  -[SKUISlideshowGalleryBarView initWithFrame:]
  -[SKUISlideshowGalleryBarView layoutSubviews]
  -[SKUISlideshowGalleryBarView touchesBegan:withEvent:]
  -[SKUISlideshowGalleryBarView touchesMoved:withEvent:]
  -[SKUISlideshowGalleryBarView touchesEnded:withEvent:]
  -[SKUISlideshowGalleryBarView touchesCancelled:withEvent:]
  -[SKUISlideshowGalleryBarView imageAtIndex:]
  -[SKUISlideshowGalleryBarView _newImageView]
  -[SKUISlideshowGalleryBarView _handleTouch:withEvent:]
  -[SKUISlideshowGalleryBarView setNumberOfImages:]
  -[SKUISlideshowGalleryBarView setSelectedImageIndex:]
  -[SKUISlideshowGalleryBarView setImage:atIndex:]
  -[SKUISlideshowGalleryBarView numberOfImages]
  -[SKUISlideshowGalleryBarView selectedImageIndex]


SKUITabBarController : UITabBarController /usr/lib/libobjc.A.dylib <SKUIMoreNavigationControllerDelegate>
 @property  BOOL sizeTransitionInProgress
 @property  BOOL containsTransientViewControllerOnly
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUITabBarController _moreNavigationControllerClass]

  // instance methods
  -[SKUITabBarController init]
  -[SKUITabBarController .cxx_destruct]
  -[SKUITabBarController traitCollection]
  -[SKUITabBarController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUITabBarController viewDidLayoutSubviews]
  -[SKUITabBarController moreNavigationController]
  -[SKUITabBarController setTransientViewController:animated:]
  -[SKUITabBarController _setSelectedViewController:]
  -[SKUITabBarController preferredUserInterfaceStyle]
  -[SKUITabBarController moreNavigationController:didSelectItemAtIndex:]
  -[SKUITabBarController forcedUserInterfaceStyle]
  -[SKUITabBarController setForcedUserInterfaceStyle:]
  -[SKUITabBarController setFloatingOverlayViewController:animated:]
  -[SKUITabBarController floatingOverlayViewController]
  -[SKUITabBarController _layoutFloatingOverlayView]
  -[SKUITabBarController sizeTransitionInProgress]
  -[SKUITabBarController setSizeTransitionInProgress:]
  -[SKUITabBarController containsTransientViewControllerOnly]
  -[SKUITabBarController cancelTransientViewController:]


SKUIViewElementLayoutContext : NSObject /usr/lib/libc++.1.dylib
 @property  NSCache *placeholderImageCache
 @property  double activePageWidth
 @property  <SKUIArtworkRequestDelegate> *artworkRequestDelegate
 @property  SKUIBadgeTextAttachmentLoader *badgeImageLoader
 @property  MPUBorderDrawingCache *borderDrawingCache
 @property  SKUIClientContext *clientContext
 @property  unsigned long containerViewElementType
 @property  SKUIViewElementTextLayoutCache *labelLayoutCache
 @property  UIViewController *parentViewController
 @property  SKUIResourceLoader *resourceLoader
 @property  UIColor *placeholderColor
 @property  UIColor *tintColor
 @property  {UIEdgeInsets=dddd} largeScreenElementPadding
 @property  NSString *backdropGroupName
 @property  double displayScale

  // class methods
  +[SKUIViewElementLayoutContext itemWidthForElement:withDefaultWidth:fitWidth:]
  +[SKUIViewElementLayoutContext _calculateValueFromString:withDefault:coefficent:]

  // instance methods
  -[SKUIViewElementLayoutContext init]
  -[SKUIViewElementLayoutContext dealloc]
  -[SKUIViewElementLayoutContext .cxx_destruct]
  -[SKUIViewElementLayoutContext displayScale]
  -[SKUIViewElementLayoutContext tintColor]
  -[SKUIViewElementLayoutContext setTintColor:]
  -[SKUIViewElementLayoutContext parentViewController]
  -[SKUIViewElementLayoutContext backdropGroupName]
  -[SKUIViewElementLayoutContext setBackdropGroupName:]
  -[SKUIViewElementLayoutContext setParentViewController:]
  -[SKUIViewElementLayoutContext placeholderColor]
  -[SKUIViewElementLayoutContext resourceLoader]
  -[SKUIViewElementLayoutContext setResourceLoader:]
  -[SKUIViewElementLayoutContext clientContext]
  -[SKUIViewElementLayoutContext setClientContext:]
  -[SKUIViewElementLayoutContext setPlaceholderColor:]
  -[SKUIViewElementLayoutContext aggregateValueForKey:]
  -[SKUIViewElementLayoutContext imageResourceCacheKeyForArtwork:]
  -[SKUIViewElementLayoutContext requestIdentifierForArtwork:]
  -[SKUIViewElementLayoutContext loadImageForArtwork:dataConsumer:reason:]
  -[SKUIViewElementLayoutContext placeholderImageForSize:]
  -[SKUIViewElementLayoutContext requestIdentifierForViewElement:]
  -[SKUIViewElementLayoutContext loadImageForImageElement:reason:]
  -[SKUIViewElementLayoutContext sizeForViewElement:width:]
  -[SKUIViewElementLayoutContext imageResourceCacheKeyForViewElement:]
  -[SKUIViewElementLayoutContext requestIdentifierForResourceCacheKey:]
  -[SKUIViewElementLayoutContext setArtworkRequestDelegate:]
  -[SKUIViewElementLayoutContext setAggregateValue:forKey:]
  -[SKUIViewElementLayoutContext setContainerViewElementType:]
  -[SKUIViewElementLayoutContext setLabelLayoutCache:]
  -[SKUIViewElementLayoutContext prefetchResourcesForViewElement:reason:]
  -[SKUIViewElementLayoutContext defaultItemWidthForViewElement:]
  -[SKUIViewElementLayoutContext labelLayoutCache]
  -[SKUIViewElementLayoutContext sizeForImageElement:]
  -[SKUIViewElementLayoutContext textPropertiesForViewElement:width:]
  -[SKUIViewElementLayoutContext activePageWidth]
  -[SKUIViewElementLayoutContext initWithStorePageSectionContext:previousLayoutContext:]
  -[SKUIViewElementLayoutContext loadImageForArtwork:reason:]
  -[SKUIViewElementLayoutContext borderDrawingCache]
  -[SKUIViewElementLayoutContext _artworkRequestDidLoadImageNotification:]
  -[SKUIViewElementLayoutContext invalidateAllEditorialLayouts]
  -[SKUIViewElementLayoutContext setActivePageWidth:]
  -[SKUIViewElementLayoutContext maxWidthForElement:withDefaultWidth:]
  -[SKUIViewElementLayoutContext containerViewElementType]
  -[SKUIViewElementLayoutContext editorialLayoutForLabelElement:width:]
  -[SKUIViewElementLayoutContext initWithStorePageSectionContext:]
  -[SKUIViewElementLayoutContext loadTemplatedImageForBadgeElement:reason:]
  -[SKUIViewElementLayoutContext badgeImageLoader]
  -[SKUIViewElementLayoutContext isEditorialLayoutExpanded:]
  -[SKUIViewElementLayoutContext transientRequestIdentifierForViewElement:]
  -[SKUIViewElementLayoutContext dataConsumerForImageElement:]
  -[SKUIViewElementLayoutContext loadImageForImageElement:reason:dataConsumer:]
  -[SKUIViewElementLayoutContext placeholderImageForImageElement:dataConsumer:]
  -[SKUIViewElementLayoutContext blurColorForCacheKey:]
  -[SKUIViewElementLayoutContext setBlurColor:cacheKey:]
  -[SKUIViewElementLayoutContext loadImageForBadgeElement:reason:]
  -[SKUIViewElementLayoutContext _initSKUIViewElementLayoutContext]
  -[SKUIViewElementLayoutContext setDisplayScale:]
  -[SKUIViewElementLayoutContext setLargeScreenElementPaddingFromContext:]
  -[SKUIViewElementLayoutContext placeholderImageCache]
  -[SKUIViewElementLayoutContext _loadImageForURL:cacheKey:dataConsumer:reason:]
  -[SKUIViewElementLayoutContext _sizeForImageElement:applyTransform:]
  -[SKUIViewElementLayoutContext sizeForBadgeElement:]
  -[SKUIViewElementLayoutContext sizeForItemOfferButton:]
  -[SKUIViewElementLayoutContext expandEditorialForLabelElement:]
  -[SKUIViewElementLayoutContext artworkRequestDelegate]
  -[SKUIViewElementLayoutContext largeScreenElementPadding]


SKUIPlaceholderImageKey : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUIPlaceholderImageKey isEqual:]
  -[SKUIPlaceholderImageKey .cxx_destruct]
  -[SKUIPlaceholderImageKey initWithSize:imageTreatment:placeholderBackgroundColor:]


SKUIStackTemplateElement : SKUIViewElement
 @property  NSArray *collectionElements
 @property  SKUIViewElement *collectionHeaderViewElement
 @property  SKUIIndexBarViewElement *indexBarViewElement
 @property  SKUINavigationBarViewElement *navigationBarElement
 @property  SKUIToolbarViewElement *toolbarElement
 @property  long long numberOfSplits
 @property  BOOL needsStateReset

  // instance methods
  -[SKUIStackTemplateElement .cxx_destruct]
  -[SKUIStackTemplateElement initWithDOMElement:parent:elementFactory:]
  -[SKUIStackTemplateElement navigationBarElement]
  -[SKUIStackTemplateElement toolbarElement]
  -[SKUIStackTemplateElement applyUpdatesWithElement:]
  -[SKUIStackTemplateElement numberOfSplits]
  -[SKUIStackTemplateElement needsStateReset]
  -[SKUIStackTemplateElement indexBarViewElement]
  -[SKUIStackTemplateElement collectionHeaderViewElement]
  -[SKUIStackTemplateElement collectionElements]


SKUISlideshowImageScrollView : UIScrollView /usr/lib/libobjc.A.dylib
 @property  UIImage *image
 @property  UIImageView *imageView

  // instance methods
  -[SKUISlideshowImageScrollView .cxx_destruct]
  -[SKUISlideshowImageScrollView image]
  -[SKUISlideshowImageScrollView setImage:]
  -[SKUISlideshowImageScrollView visibleRect]
  -[SKUISlideshowImageScrollView setFrame:]
  -[SKUISlideshowImageScrollView initWithFrame:]
  -[SKUISlideshowImageScrollView layoutSubviews]
  -[SKUISlideshowImageScrollView imageView]
  -[SKUISlideshowImageScrollView _prepareToResize]
  -[SKUISlideshowImageScrollView _recoverFromResize]
  -[SKUISlideshowImageScrollView _resetMinMaxZoomScales]
  -[SKUISlideshowImageScrollView resetZoomScale]
  -[SKUISlideshowImageScrollView zoomIntoPoint:]


SKUISlideshowItemViewController : UIViewController /usr/lib/libobjc.A.dylib <UIScrollViewDelegate, UIGestureRecognizerDelegatePrivate>
 @property  SKUIClientContext *clientContext
 @property  <SKUISlideshowItemViewControllerDelegate> *delegate
 @property  SKUISlideshowImageScrollView *imageScrollView
 @property  UIImage *itemImage
 @property  long long indexInCollection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUISlideshowItemViewController dealloc]
  -[SKUISlideshowItemViewController delegate]
  -[SKUISlideshowItemViewController setDelegate:]
  -[SKUISlideshowItemViewController .cxx_destruct]
  -[SKUISlideshowItemViewController _gestureRecognizer:canPreventGestureRecognizer:]
  -[SKUISlideshowItemViewController _gestureRecognizer:canBePreventedByGestureRecognizer:]
  -[SKUISlideshowItemViewController initWithNibName:bundle:]
  -[SKUISlideshowItemViewController viewForZoomingInScrollView:]
  -[SKUISlideshowItemViewController viewDidLoad]
  -[SKUISlideshowItemViewController supportedInterfaceOrientations]
  -[SKUISlideshowItemViewController viewDidDisappear:]
  -[SKUISlideshowItemViewController clientContext]
  -[SKUISlideshowItemViewController setClientContext:]
  -[SKUISlideshowItemViewController indexInCollection]
  -[SKUISlideshowItemViewController setIndexInCollection:]
  -[SKUISlideshowItemViewController setItemImage:]
  -[SKUISlideshowItemViewController itemImage]
  -[SKUISlideshowItemViewController _newLoadingView]
  -[SKUISlideshowItemViewController _pinchGestureAction:]
  -[SKUISlideshowItemViewController imageScrollView]


SKUICommentPostBarView : UIView /usr/lib/libobjc.A.dylib <UITextFieldDelegate>
 @property  <SKUICommentDelegate> *delegate
 @property  NSString *commenter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUICommentPostBarView delegate]
  -[SKUICommentPostBarView setDelegate:]
  -[SKUICommentPostBarView .cxx_destruct]
  -[SKUICommentPostBarView setText:]
  -[SKUICommentPostBarView initWithFrame:]
  -[SKUICommentPostBarView sizeThatFits:]
  -[SKUICommentPostBarView layoutSubviews]
  -[SKUICommentPostBarView becomeFirstResponder]
  -[SKUICommentPostBarView tintColorDidChange]
  -[SKUICommentPostBarView resignFirstResponder]
  -[SKUICommentPostBarView canBecomeFirstResponder]
  -[SKUICommentPostBarView textField:shouldChangeCharactersInRange:replacementString:]
  -[SKUICommentPostBarView setPlaceholderText:]
  -[SKUICommentPostBarView _post:]
  -[SKUICommentPostBarView _postComment]
  -[SKUICommentPostBarView _asLabel]
  -[SKUICommentPostBarView _asNameButton]
  -[SKUICommentPostBarView _changeCommenter:]
  -[SKUICommentPostBarView setAsText:]
  -[SKUICommentPostBarView setPostButtonText:]
  -[SKUICommentPostBarView setCommenter:]
  -[SKUICommentPostBarView setPostButtonVisible:]
  -[SKUICommentPostBarView commenter]


SKUICommentPostBarTextField : UITextField /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUICommentPostBarTextField becomeFirstResponder]
  -[SKUICommentPostBarTextField resignFirstResponder]
  -[SKUICommentPostBarTextField textRectForBounds:]
  -[SKUICommentPostBarTextField editingRectForBounds:]


SKUIReportAConcernViewController : UINavigationController /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIReportAConcernViewController initWithConfiguration:]


SKUIURLActivityItemProvider : SKUIDeferredActivityItemProvider
  // class methods
  +[SKUIURLActivityItemProvider placeholderItem]

  // instance methods
  -[SKUIURLActivityItemProvider .cxx_destruct]
  -[SKUIURLActivityItemProvider item]
  -[SKUIURLActivityItemProvider activityViewController:subjectForActivityType:]
  -[SKUIURLActivityItemProvider activityViewController:thumbnailImageForActivityType:suggestedSize:]
  -[SKUIURLActivityItemProvider activityViewControllerLinkMetadata:]
  -[SKUIURLActivityItemProvider initWithProductPageItem:clientContext:]
  -[SKUIURLActivityItemProvider initWithProductPageItemProvider:clientContext:]
  -[SKUIURLActivityItemProvider linkPresentationImageFor:]


SKUIStackItemViewElement : SKUIItemViewElement
 @property  NSArray *imageElements
 @property  SKUILabelViewElement *textElement

  // instance methods
  -[SKUIStackItemViewElement textElement]
  -[SKUIStackItemViewElement pageComponentType]
  -[SKUIStackItemViewElement imageElements]


SKUIKeyValueInfoListCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIKeyValueInfoListCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIKeyValueInfoListCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIKeyValueInfoListCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIKeyValueInfoListCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUIKeyValueInfoListCollectionViewCell _attributedStringForButton:context:]
  +[SKUIKeyValueInfoListCollectionViewCell _attributedStringForLabel:context:]
  +[SKUIKeyValueInfoListCollectionViewCell titleColumnWidthWithViewElement:width:context:]

  // instance methods
  -[SKUIKeyValueInfoListCollectionViewCell .cxx_destruct]
  -[SKUIKeyValueInfoListCollectionViewCell initWithFrame:]
  -[SKUIKeyValueInfoListCollectionViewCell layoutSubviews]
  -[SKUIKeyValueInfoListCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIKeyValueInfoListCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIKeyValueInfoListCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIKeyValueInfoListCollectionViewCell viewForElementIdentifier:]
  -[SKUIKeyValueInfoListCollectionViewCell _buttonAction:]
  -[SKUIKeyValueInfoListCollectionViewCell _imageTapAction:]


SKUIDividerViewElement : SKUIViewElement
 @property  SKUIButtonViewElement *button
 @property  long long dividerType
 @property  SKUIViewElementText *text

  // instance methods
  -[SKUIDividerViewElement .cxx_destruct]
  -[SKUIDividerViewElement isEnabled]
  -[SKUIDividerViewElement text]
  -[SKUIDividerViewElement button]
  -[SKUIDividerViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIDividerViewElement dividerType]
  -[SKUIDividerViewElement pageComponentType]


SKUIReviewListPageSection : SKUIStorePageSection
 @property  NSMutableDictionary *contextActionsRegistration
 @property  SKUIReviewListPageComponent *pageComponent

  // instance methods
  -[SKUIReviewListPageSection .cxx_destruct]
  -[SKUIReviewListPageSection initWithPageComponent:]
  -[SKUIReviewListPageSection collectionViewWillApplyLayoutAttributes:]
  -[SKUIReviewListPageSection willAppearInContext:]
  -[SKUIReviewListPageSection cellForIndexPath:]
  -[SKUIReviewListPageSection cellSizeForIndexPath:]
  -[SKUIReviewListPageSection entityProvider:didInvalidateWithContext:]
  -[SKUIReviewListPageSection numberOfCells]
  -[SKUIReviewListPageSection reloadCellWithIndexPath:reason:]
  -[SKUIReviewListPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIReviewListPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIReviewListPageSection registerContextActionsForCell:indexPath:viewController:]
  -[SKUIReviewListPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIReviewListPageSection unregisterContextActionsForCell:indexPath:viewController:]
  -[SKUIReviewListPageSection collectionViewDidSelectItemAtIndexPath:]
  -[SKUIReviewListPageSection collectionViewShouldHighlightItemAtIndexPath:]
  -[SKUIReviewListPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIReviewListPageSection _requestCellLayout]
  -[SKUIReviewListPageSection _contentInsetForReviewIndex:]
  -[SKUIReviewListPageSection _contextActionRegistrationKeyWithCell:indexPath:]
  -[SKUIReviewListPageSection contextActionsRegistration]
  -[SKUIReviewListPageSection setContextActionsRegistration:]


SKUIAccountButtonsViewElement : SKUIViewElement
  // instance methods
  -[SKUIAccountButtonsViewElement pageComponentType]


SKUILibraryItem : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  SKUIStoreIdentifier *storeIdentifier
 @property  NSNumber *storeItemIdentifier
 @property  NSString *storeFlavorIdentifier

  // instance methods
  -[SKUILibraryItem isEqual:]
  -[SKUILibraryItem copyWithZone:]
  -[SKUILibraryItem .cxx_destruct]
  -[SKUILibraryItem storeIdentifier]
  -[SKUILibraryItem setStoreIdentifier:]
  -[SKUILibraryItem storeItemIdentifier]
  -[SKUILibraryItem storeFlavorIdentifier]
  -[SKUILibraryItem setStoreFlavorIdentifier:]


SKUIAnalyzedImageColors : NSObject /usr/lib/libc++.1.dylib
 @property  UIColor *backgroundColor
 @property  UIColor *textPrimaryColor
 @property  UIColor *textSecondaryColor
 @property  BOOL isBackgroundLight

  // instance methods
  -[SKUIAnalyzedImageColors .cxx_destruct]
  -[SKUIAnalyzedImageColors backgroundColor]
  -[SKUIAnalyzedImageColors setBackgroundColor:]
  -[SKUIAnalyzedImageColors textPrimaryColor]
  -[SKUIAnalyzedImageColors textSecondaryColor]
  -[SKUIAnalyzedImageColors isBackgroundLight]
  -[SKUIAnalyzedImageColors setTextPrimaryColor:]
  -[SKUIAnalyzedImageColors setTextSecondaryColor:]
  -[SKUIAnalyzedImageColors setIsBackgroundLight:]


SKUIImageColorAnalyzer : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SKUIImageColorAnalyzer _createContextForImage:]
  +[SKUIImageColorAnalyzer _colorFromITColor:]
  +[SKUIImageColorAnalyzer analyzeImage:]


SKUICountdown : NSObject /usr/lib/libc++.1.dylib
 @property  long long type
 @property  NSURL *URL
 @property  NSDate *endDate
 @property  unsigned long dateFormat
 @property  NSDate *startDate
 @property  long long initialValue
 @property  long long finalValue
 @property  long long rate
 @property  NSString *numberFormat
 @property  UIColor *fontColor
 @property  UIColor *flapTopColor
 @property  UIColor *flapBottomColor
 @property  BOOL flapped
 @property  <SKUIArtworkProviding> *artworkProvider
 @property  <SKUIArtworkProviding> *endArtworkProvider

  // instance methods
  -[SKUICountdown type]
  -[SKUICountdown setType:]
  -[SKUICountdown .cxx_destruct]
  -[SKUICountdown isLoaded]
  -[SKUICountdown startDate]
  -[SKUICountdown endDate]
  -[SKUICountdown dateFormat]
  -[SKUICountdown setURL:]
  -[SKUICountdown URL]
  -[SKUICountdown setDateFormat:]
  -[SKUICountdown setStartDate:]
  -[SKUICountdown setEndDate:]
  -[SKUICountdown initialValue]
  -[SKUICountdown setRate:]
  -[SKUICountdown rate]
  -[SKUICountdown setInitialValue:]
  -[SKUICountdown setFontColor:]
  -[SKUICountdown fontColor]
  -[SKUICountdown updateWithDictionary:]
  -[SKUICountdown numberFormat]
  -[SKUICountdown artworkProvider]
  -[SKUICountdown isFlapped]
  -[SKUICountdown flapTopColor]
  -[SKUICountdown flapBottomColor]
  -[SKUICountdown finalValue]
  -[SKUICountdown initWithCountdownDictionary:]
  -[SKUICountdown setFlapped:]
  -[SKUICountdown setNumberFormat:]
  -[SKUICountdown setFinalValue:]
  -[SKUICountdown setFlapTopColor:]
  -[SKUICountdown setFlapBottomColor:]
  -[SKUICountdown setArtworkProvider:]
  -[SKUICountdown setEndArtworkProvider:]
  -[SKUICountdown endArtworkProvider]


SKUIShareSheetActivityViewElement : SKUIViewElement
 @property  NSString *activityType
 @property  NSURL *contentSourceURL
 @property  SKUIImageViewElement *image
 @property  SKUILabelViewElement *message
 @property  SKUILabelViewElement *title
 @property  SKUIURLViewElement *URL

  // instance methods
  -[SKUIShareSheetActivityViewElement .cxx_destruct]
  -[SKUIShareSheetActivityViewElement URL]
  -[SKUIShareSheetActivityViewElement title]
  -[SKUIShareSheetActivityViewElement activityType]
  -[SKUIShareSheetActivityViewElement image]
  -[SKUIShareSheetActivityViewElement message]
  -[SKUIShareSheetActivityViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIShareSheetActivityViewElement applyUpdatesWithElement:]
  -[SKUIShareSheetActivityViewElement contentSourceURL]


SKUISlideshowViewController : UIViewController /usr/lib/libobjc.A.dylib <UIPageViewControllerDataSource, UIPageViewControllerDelegate, SKUISlideshowItemViewControllerDelegate, UIViewControllerTransitioningDelegate>
 @property  SKUIClientContext *clientContext
 @property  <SKUISlideshowViewControllerDataSource> *dataSource
 @property  <SKUISlideshowViewControllerDelegate> *delegate
 @property  long long currentIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUISlideshowViewController dealloc]
  -[SKUISlideshowViewController delegate]
  -[SKUISlideshowViewController setDelegate:]
  -[SKUISlideshowViewController .cxx_destruct]
  -[SKUISlideshowViewController dataSource]
  -[SKUISlideshowViewController setDataSource:]
  -[SKUISlideshowViewController loadView]
  -[SKUISlideshowViewController initWithNibName:bundle:]
  -[SKUISlideshowViewController viewWillAppear:]
  -[SKUISlideshowViewController viewWillDisappear:]
  -[SKUISlideshowViewController viewDidLoad]
  -[SKUISlideshowViewController reloadData]
  -[SKUISlideshowViewController supportedInterfaceOrientations]
  -[SKUISlideshowViewController viewDidAppear:]
  -[SKUISlideshowViewController willRotateToInterfaceOrientation:duration:]
  -[SKUISlideshowViewController willAnimateRotationToInterfaceOrientation:duration:]
  -[SKUISlideshowViewController pageViewController:willTransitionToViewControllers:]
  -[SKUISlideshowViewController pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:]
  -[SKUISlideshowViewController pageViewController:viewControllerBeforeViewController:]
  -[SKUISlideshowViewController pageViewController:viewControllerAfterViewController:]
  -[SKUISlideshowViewController animatorForPresentedController:presentingController:sourceController:]
  -[SKUISlideshowViewController animatorForDismissedController:]
  -[SKUISlideshowViewController currentIndex]
  -[SKUISlideshowViewController clientContext]
  -[SKUISlideshowViewController setClientContext:]
  -[SKUISlideshowViewController _doneButtonTapped:]
  -[SKUISlideshowViewController setCurrentIndex:]
  -[SKUISlideshowViewController slideshowItemViewControllerDidBeginPinchGesture:]
  -[SKUISlideshowViewController slideshowItemViewControllerDidDismissWithPinchGesture:ratio:]
  -[SKUISlideshowViewController currentItemViewController]
  -[SKUISlideshowViewController _itemViewControllerForIndex:]
  -[SKUISlideshowViewController _updateCurrentIndex]
  -[SKUISlideshowViewController _contentViewTapped:]
  -[SKUISlideshowViewController _saveStatusBarAppearanceState]
  -[SKUISlideshowViewController _restoreStatusBarAppearanceState]
  -[SKUISlideshowViewController _setOverlayVisible:animated:]
  -[SKUISlideshowViewController _fadeOutOverlayAfterDelay:]
  -[SKUISlideshowViewController _updateTitleWithIndex:]
  -[SKUISlideshowViewController _toggleFadeOverlay]


SKUIVideoViewElement : SKUIViewElement
 @property  NSArray *assets
 @property  long long itemIdentifier
 @property  long long kind
 @property  long long playbackStyle
 @property  SKUIImageViewElement *thumbnailImage

  // instance methods
  -[SKUIVideoViewElement .cxx_destruct]
  -[SKUIVideoViewElement itemIdentifier]
  -[SKUIVideoViewElement kind]
  -[SKUIVideoViewElement isEnabled]
  -[SKUIVideoViewElement assets]
  -[SKUIVideoViewElement playbackStyle]
  -[SKUIVideoViewElement thumbnailImage]
  -[SKUIVideoViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIVideoViewElement applyUpdatesWithElement:]


SKUIProfileImagePicker : UIViewController /usr/lib/libobjc.A.dylib <UIImagePickerControllerDelegate, UINavigationControllerDelegate>
 @property  <SKUIProfileImagePickerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIProfileImagePicker _fixCropRect:forOriginalImage:]

  // instance methods
  -[SKUIProfileImagePicker delegate]
  -[SKUIProfileImagePicker setDelegate:]
  -[SKUIProfileImagePicker .cxx_destruct]
  -[SKUIProfileImagePicker loadView]
  -[SKUIProfileImagePicker viewDidAppear:]
  -[SKUIProfileImagePicker imagePickerControllerDidCancel:]
  -[SKUIProfileImagePicker imagePickerController:didFinishPickingMediaWithInfo:]
  -[SKUIProfileImagePicker _didCancel]
  -[SKUIProfileImagePicker initWithClientContext:]
  -[SKUIProfileImagePicker _showImagePicker]
  -[SKUIProfileImagePicker _showImageSourcePicker]
  -[SKUIProfileImagePicker _presentImagePickerWithSourceType:]


SKUIHorizontalListScrollView : SKUIViewReuseView <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIHorizontalListScrollView prefetchResourcesForViewElement:reason:context:]
  +[SKUIHorizontalListScrollView preferredSizeForViewElement:context:]
  +[SKUIHorizontalListScrollView requestLayoutForViewElement:width:context:]
  +[SKUIHorizontalListScrollView sizeThatFitsWidth:viewElement:context:]
  +[SKUIHorizontalListScrollView _attributedStringForButton:context:]
  +[SKUIHorizontalListScrollView _attributedStringForLabel:context:]
  +[SKUIHorizontalListScrollView _sizeForViewElement:width:context:]
  +[SKUIHorizontalListScrollView _attributedStringForText:style:context:]

  // instance methods
  -[SKUIHorizontalListScrollView .cxx_destruct]
  -[SKUIHorizontalListScrollView initWithFrame:]
  -[SKUIHorizontalListScrollView sizeThatFits:]
  -[SKUIHorizontalListScrollView layoutSubviews]
  -[SKUIHorizontalListScrollView setContentInset:]
  -[SKUIHorizontalListScrollView reloadWithViewElement:width:context:]
  -[SKUIHorizontalListScrollView setImage:forArtworkRequest:context:]
  -[SKUIHorizontalListScrollView updateWithItemState:context:animated:]
  -[SKUIHorizontalListScrollView viewForElementIdentifier:]
  -[SKUIHorizontalListScrollView _buttonAction:]


SKUIIPadProductPageViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIMetricsViewController, SKUINetworkErrorDelegate, SKUIProductPageHeaderViewDelegate, SKUIProductPageChildViewControllerDelegate, SKUIMessageBannerDelegate>
 @property  SKUIItem *item
 @property  SKUIProductPage *productPage
 @property  NSURL *URL
 @property  SKUIClientContext *clientContext
 @property  <SKUIIPadProductPageDelegate> *delegate
 @property  BOOL askPermission
 @property  NSString *bannerText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIIPadProductPageViewController dealloc]
  -[SKUIIPadProductPageViewController initWithURL:]
  -[SKUIIPadProductPageViewController delegate]
  -[SKUIIPadProductPageViewController setDelegate:]
  -[SKUIIPadProductPageViewController .cxx_destruct]
  -[SKUIIPadProductPageViewController item]
  -[SKUIIPadProductPageViewController URL]
  -[SKUIIPadProductPageViewController initWithURLRequest:]
  -[SKUIIPadProductPageViewController loadView]
  -[SKUIIPadProductPageViewController viewWillAppear:]
  -[SKUIIPadProductPageViewController reloadData]
  -[SKUIIPadProductPageViewController initWithItem:]
  -[SKUIIPadProductPageViewController viewDidLayoutSubviews]
  -[SKUIIPadProductPageViewController didRotateFromInterfaceOrientation:]
  -[SKUIIPadProductPageViewController clientContext]
  -[SKUIIPadProductPageViewController setClientContext:]
  -[SKUIIPadProductPageViewController initWithItemIdentifier:]
  -[SKUIIPadProductPageViewController setAskPermission:]
  -[SKUIIPadProductPageViewController setBannerText:]
  -[SKUIIPadProductPageViewController configureMetricsWithPageEvent:]
  -[SKUIIPadProductPageViewController initWithProductPage:]
  -[SKUIIPadProductPageViewController _placeholderViewController]
  -[SKUIIPadProductPageViewController productPage]
  -[SKUIIPadProductPageViewController _setMetricsController:]
  -[SKUIIPadProductPageViewController _metricsEnterEventNotification:]
  -[SKUIIPadProductPageViewController activeMetricsController]
  -[SKUIIPadProductPageViewController productPageChildViewControllerDidLoadScrollView:]
  -[SKUIIPadProductPageViewController productPageChildOpenItem:]
  -[SKUIIPadProductPageViewController productPageChildOpenURL:viewControllerBlock:]
  -[SKUIIPadProductPageViewController productPageChildViewControllerDidScroll:]
  -[SKUIIPadProductPageViewController productPageChildViewControllerDidLoad:]
  -[SKUIIPadProductPageViewController askPermission]
  -[SKUIIPadProductPageViewController productPageHeaderView:didSelectURL:]
  -[SKUIIPadProductPageViewController metricsControllerForProductPageHeader:]
  -[SKUIIPadProductPageViewController productPageHeaderView:didSelectSectionIndex:]
  -[SKUIIPadProductPageViewController productPageHeaderViewDidWantAskPermissionBanner:]
  -[SKUIIPadProductPageViewController topContentOffset]
  -[SKUIIPadProductPageViewController _initSKUIIPadProductPageViewController]
  -[SKUIIPadProductPageViewController _setDefaultSectionIndexWithFragment:]
  -[SKUIIPadProductPageViewController _setProductPage:error:]
  -[SKUIIPadProductPageViewController _showBanner]
  -[SKUIIPadProductPageViewController _selectSectionIndex:]
  -[SKUIIPadProductPageViewController _reviewsViewController]
  -[SKUIIPadProductPageViewController _sendCannotOpen]
  -[SKUIIPadProductPageViewController _reloadHeaderViewController]
  -[SKUIIPadProductPageViewController _viewControllerForSectionIndex:]
  -[SKUIIPadProductPageViewController _showViewController:]
  -[SKUIIPadProductPageViewController _showError:]
  -[SKUIIPadProductPageViewController _isIncompatibleItem]
  -[SKUIIPadProductPageViewController _showIncompatibleView]
  -[SKUIIPadProductPageViewController _detailsViewController]
  -[SKUIIPadProductPageViewController _relatedViewController]
  -[SKUIIPadProductPageViewController networkErrorViewControllerInvalidated:]
  -[SKUIIPadProductPageViewController askPermissionBannerDidSelect:]
  -[SKUIIPadProductPageViewController bannerText]


SKUIZoomingShelfCollectionViewLayout : UICollectionViewLayout /usr/lib/libobjc.A.dylib <SKUIHorizontalScrollingContainerMenuBarCollectionViewLayout, SKUIShelfCollectionViewLayout>
 @property  double focusedItemHorizontalCenterOffset
 @property  double interItemSpacing
 @property  double itemWidth
 @property  double scaledItemWidth
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SKUIShelfLayoutData *layoutData

  // class methods
  +[SKUIZoomingShelfCollectionViewLayout invalidationContextClass]
  +[SKUIZoomingShelfCollectionViewLayout layoutAttributesClass]
  +[SKUIZoomingShelfCollectionViewLayout snapToBoundariesDecelerationRate]
  +[SKUIZoomingShelfCollectionViewLayout collectionViewCanClipToBounds]

  // instance methods
  -[SKUIZoomingShelfCollectionViewLayout .cxx_destruct]
  -[SKUIZoomingShelfCollectionViewLayout setItemWidth:]
  -[SKUIZoomingShelfCollectionViewLayout itemWidth]
  -[SKUIZoomingShelfCollectionViewLayout interItemSpacing]
  -[SKUIZoomingShelfCollectionViewLayout setInterItemSpacing:]
  -[SKUIZoomingShelfCollectionViewLayout invalidateLayoutWithContext:]
  -[SKUIZoomingShelfCollectionViewLayout prepareLayout]
  -[SKUIZoomingShelfCollectionViewLayout layoutAttributesForElementsInRect:]
  -[SKUIZoomingShelfCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[SKUIZoomingShelfCollectionViewLayout invalidationContextForBoundsChange:]
  -[SKUIZoomingShelfCollectionViewLayout collectionViewContentSize]
  -[SKUIZoomingShelfCollectionViewLayout shouldInvalidateLayoutForBoundsChange:]
  -[SKUIZoomingShelfCollectionViewLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]
  -[SKUIZoomingShelfCollectionViewLayout menuBarFocusedItemIndexPathWithTransitionProgress:]
  -[SKUIZoomingShelfCollectionViewLayout setMenuBarFocusedItemIndexPath:withTransitionProgress:]
  -[SKUIZoomingShelfCollectionViewLayout layoutData]
  -[SKUIZoomingShelfCollectionViewLayout setLayoutData:]
  -[SKUIZoomingShelfCollectionViewLayout setFocusedItemHorizontalCenterOffset:]
  -[SKUIZoomingShelfCollectionViewLayout setScaledItemWidth:]
  -[SKUIZoomingShelfCollectionViewLayout focusedItemHorizontalCenterOffset]
  -[SKUIZoomingShelfCollectionViewLayout scaledItemWidth]


SKUIArtworkTemplate : NSObject /usr/lib/libc++.1.dylib <SKUIArtworkProviding>
 @property  long long height
 @property  long long width
 @property  NSString *urlTemplateString
 @property  NSMutableSet *servedArtworks
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *cacheRepresentation
 @property  SKUIArtwork *largestArtwork
 @property  SKUIArtwork *smallestArtwork

  // class methods
  +[SKUIArtworkTemplate supportsSecureCoding]
  +[SKUIArtworkTemplate canHandleArtworkFormat:]

  // instance methods
  -[SKUIArtworkTemplate isEqual:]
  -[SKUIArtworkTemplate copyWithZone:]
  -[SKUIArtworkTemplate encodeWithCoder:]
  -[SKUIArtworkTemplate initWithCoder:]
  -[SKUIArtworkTemplate .cxx_destruct]
  -[SKUIArtworkTemplate width]
  -[SKUIArtworkTemplate height]
  -[SKUIArtworkTemplate hasArtwork]
  -[SKUIArtworkTemplate _lookupDictionary]
  -[SKUIArtworkTemplate initWithCacheRepresentation:]
  -[SKUIArtworkTemplate artworkForSize:]
  -[SKUIArtworkTemplate cacheRepresentation]
  -[SKUIArtworkTemplate artworkURLForSize:]
  -[SKUIArtworkTemplate largestArtwork]
  -[SKUIArtworkTemplate urlTemplateString]
  -[SKUIArtworkTemplate bestArtworkForSize:]
  -[SKUIArtworkTemplate artworkWithWidth:]
  -[SKUIArtworkTemplate bestArtworkForScaledSize:]
  -[SKUIArtworkTemplate preferredExactArtworkForSize:]
  -[SKUIArtworkTemplate smallestArtwork]
  -[SKUIArtworkTemplate initWithTemplateDictionary:]
  -[SKUIArtworkTemplate servedArtworks]
  -[SKUIArtworkTemplate _artworkWithWidth:]
  -[SKUIArtworkTemplate _urlStringWithTargetSize:]
  -[SKUIArtworkTemplate _sizeForWidth:]
  -[SKUIArtworkTemplate _artworkURLWithWidth:]


SKUIFieldSettingDescriptionView : SKUISettingDescriptionView
 @property  BOOL enabled

  // instance methods
  -[SKUIFieldSettingDescriptionView enabled]
  -[SKUIFieldSettingDescriptionView setEnabled:]
  -[SKUIFieldSettingDescriptionView beginEdits]
  -[SKUIFieldSettingDescriptionView commitEdits]


SKUIAddToWishlistAnimation : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUIAddToWishlistAnimation .cxx_destruct]
  -[SKUIAddToWishlistAnimation animationDidStop:finished:]
  -[SKUIAddToWishlistAnimation initWithImage:buttonItem:navigationBar:]
  -[SKUIAddToWishlistAnimation animateWithCompletionBlock:]


SKUIProductLockupLayout : NSObject /usr/lib/libc++.1.dylib
 @property  long long bottomLeftLayoutStyle

  // instance methods
  -[SKUIProductLockupLayout .cxx_destruct]
  -[SKUIProductLockupLayout initWithLockup:width:context:]
  -[SKUIProductLockupLayout metadataWidthForWidth:]
  -[SKUIProductLockupLayout viewElementsForSection:]
  -[SKUIProductLockupLayout layoutWidthsForWidth:]
  -[SKUIProductLockupLayout sizingToFitWidth:]
  -[SKUIProductLockupLayout enumerateViewElementsForWidth:usingBlock:]
  -[SKUIProductLockupLayout bottomLeftLayoutStyle]
  -[SKUIProductLockupLayout hasBottomRightElementWithRightAlignment]
  -[SKUIProductLockupLayout topPaddingForViewElement:]
  -[SKUIProductLockupLayout bottomPaddingForViewElement:]
  -[SKUIProductLockupLayout _sizeForVerticalViewElements:width:]
  -[SKUIProductLockupLayout _sizeForViewElement:width:]
  -[SKUIProductLockupLayout _sizeForSegmentedControl:width:]


SKUIShelfPageComponent : SKUIPageComponent
 @property  SKUIShelfViewElement *viewElement

  // instance methods
  -[SKUIShelfPageComponent componentType]
  -[SKUIShelfPageComponent initWithViewElement:]


SKUIIPhoneProductPageViewController : SKUIViewController <SKUIMetricsViewController, SKUINetworkErrorDelegate, SKUIProductPageHeaderViewDelegate, SKUIProductPageChildViewControllerDelegate, UIScrollViewDelegate, SKStoreProductViewControllerDelegate, SKUIMessageBannerDelegate>
 @property  SKUIItem *item
 @property  SKUIProductPage *productPage
 @property  NSURL *URL
 @property  <SKUIIPhoneProductPageDelegate> *delegate
 @property  BOOL askPermission
 @property  NSString *bannerText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIIPhoneProductPageViewController dealloc]
  -[SKUIIPhoneProductPageViewController initWithURL:]
  -[SKUIIPhoneProductPageViewController delegate]
  -[SKUIIPhoneProductPageViewController setDelegate:]
  -[SKUIIPhoneProductPageViewController .cxx_destruct]
  -[SKUIIPhoneProductPageViewController item]
  -[SKUIIPhoneProductPageViewController URL]
  -[SKUIIPhoneProductPageViewController initWithURLRequest:]
  -[SKUIIPhoneProductPageViewController loadView]
  -[SKUIIPhoneProductPageViewController viewWillAppear:]
  -[SKUIIPhoneProductPageViewController reloadData]
  -[SKUIIPhoneProductPageViewController initWithItem:]
  -[SKUIIPhoneProductPageViewController viewDidLayoutSubviews]
  -[SKUIIPhoneProductPageViewController contentScrollView]
  -[SKUIIPhoneProductPageViewController didRotateFromInterfaceOrientation:]
  -[SKUIIPhoneProductPageViewController _headerViewController]
  -[SKUIIPhoneProductPageViewController productViewControllerDidFinish:]
  -[SKUIIPhoneProductPageViewController initWithItemIdentifier:]
  -[SKUIIPhoneProductPageViewController setAskPermission:]
  -[SKUIIPhoneProductPageViewController setBannerText:]
  -[SKUIIPhoneProductPageViewController configureMetricsWithPageEvent:]
  -[SKUIIPhoneProductPageViewController initWithProductPage:]
  -[SKUIIPhoneProductPageViewController productPage]
  -[SKUIIPhoneProductPageViewController _setMetricsController:]
  -[SKUIIPhoneProductPageViewController _metricsEnterEventNotification:]
  -[SKUIIPhoneProductPageViewController activeMetricsController]
  -[SKUIIPhoneProductPageViewController _reloadChildViewControllers]
  -[SKUIIPhoneProductPageViewController productPageChildViewControllerDidLoadScrollView:]
  -[SKUIIPhoneProductPageViewController productPageChildOpenItem:]
  -[SKUIIPhoneProductPageViewController productPageChildOpenURL:viewControllerBlock:]
  -[SKUIIPhoneProductPageViewController productPageChildViewControllerDidScroll:]
  -[SKUIIPhoneProductPageViewController productPageChildViewControllerDidLoad:]
  -[SKUIIPhoneProductPageViewController askPermission]
  -[SKUIIPhoneProductPageViewController _shareButtonAction:]
  -[SKUIIPhoneProductPageViewController productPageHeaderView:didSelectURL:]
  -[SKUIIPhoneProductPageViewController metricsControllerForProductPageHeader:]
  -[SKUIIPhoneProductPageViewController productPageHeaderView:didSelectSectionIndex:]
  -[SKUIIPhoneProductPageViewController productPageHeaderView:didReloadItemOffer:]
  -[SKUIIPhoneProductPageViewController productPageHeaderViewDidWantAskPermissionBanner:]
  -[SKUIIPhoneProductPageViewController topContentOffset]
  -[SKUIIPhoneProductPageViewController _setProductPage:error:]
  -[SKUIIPhoneProductPageViewController _showBanner]
  -[SKUIIPhoneProductPageViewController _reviewsViewController]
  -[SKUIIPhoneProductPageViewController _viewControllerForSectionIndex:]
  -[SKUIIPhoneProductPageViewController _showError:]
  -[SKUIIPhoneProductPageViewController _isIncompatibleItem]
  -[SKUIIPhoneProductPageViewController _detailsViewController]
  -[SKUIIPhoneProductPageViewController _relatedViewController]
  -[SKUIIPhoneProductPageViewController networkErrorViewControllerInvalidated:]
  -[SKUIIPhoneProductPageViewController askPermissionBannerDidSelect:]
  -[SKUIIPhoneProductPageViewController bannerText]
  -[SKUIIPhoneProductPageViewController _initSKUIIPhoneProductPageViewController]
  -[SKUIIPhoneProductPageViewController _setSectionIndexWithFragment:]
  -[SKUIIPhoneProductPageViewController _setContentInsetsForChildViewController:]
  -[SKUIIPhoneProductPageViewController _setHeaderPositionForChildViewController:]
  -[SKUIIPhoneProductPageViewController _hideBanner]
  -[SKUIIPhoneProductPageViewController _showActivityViewController]
  -[SKUIIPhoneProductPageViewController _invalidateChildViewControllers]
  -[SKUIIPhoneProductPageViewController _presentHTMLProductPage]
  -[SKUIIPhoneProductPageViewController _animateAddToWishlist]
  -[SKUIIPhoneProductPageViewController _loadingViewController]
  -[SKUIIPhoneProductPageViewController _relatedPlaceholderViewController]


SKUIDismissingProductViewController : SKStoreProductViewController /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices <SKStoreProductViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIDismissingProductViewController initWithNibName:bundle:]
  -[SKUIDismissingProductViewController productViewControllerDidFinish:]


SKUIDynamicMenuBarViewElement : SKUIMenuBarViewElement
  // class methods
  +[SKUIDynamicMenuBarViewElement _titlesMenuBarViewElementClass]
  +[SKUIDynamicMenuBarViewElement _shelfMenuBarViewElementClass]

  // instance methods
  -[SKUIDynamicMenuBarViewElement isDynamicContainer]


SKUIColumnViewElement : SKUIViewElement
 @property  long long columnSpan
 @property  SKUIHeaderViewElement *headerElement

  // instance methods
  -[SKUIColumnViewElement columnSpan]
  -[SKUIColumnViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIColumnViewElement applyUpdatesWithElement:]
  -[SKUIColumnViewElement enumerateChildrenUsingBlock:]
  -[SKUIColumnViewElement pageComponentType]
  -[SKUIColumnViewElement headerElement]


SKUIMetricsRequestInfo : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  BOOL hasResponseWasCachedValue
 @property  double requestStartTime
 @property  double responseStartTime
 @property  double responseEndTime
 @property  BOOL responseWasCached
 @property  NSDictionary *dictionaryRepresentation

  // instance methods
  -[SKUIMetricsRequestInfo copyWithZone:]
  -[SKUIMetricsRequestInfo dictionaryRepresentation]
  -[SKUIMetricsRequestInfo setResponseEndTime:]
  -[SKUIMetricsRequestInfo responseEndTime]
  -[SKUIMetricsRequestInfo requestStartTime]
  -[SKUIMetricsRequestInfo setRequestStartTime:]
  -[SKUIMetricsRequestInfo setResponseStartTime:]
  -[SKUIMetricsRequestInfo responseStartTime]
  -[SKUIMetricsRequestInfo responseWasCached]
  -[SKUIMetricsRequestInfo setResponseWasCached:]
  -[SKUIMetricsRequestInfo initWithReportRequestTimesMessagePayload:]
  -[SKUIMetricsRequestInfo hasResponseWasCachedValue]
  -[SKUIMetricsRequestInfo setHasResponseWasCachedValue:]


SKUINetworkErrorViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIProductPageChildViewController>
 @property  NSError *error
 @property  SKUIClientContext *clientContext
 @property  id delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIScrollView *scrollView
 @property  SKUIProductPageHeaderViewController *headerViewController

  // class methods
  +[SKUINetworkErrorViewController canDisplayError:]

  // instance methods
  -[SKUINetworkErrorViewController init]
  -[SKUINetworkErrorViewController dealloc]
  -[SKUINetworkErrorViewController delegate]
  -[SKUINetworkErrorViewController setDelegate:]
  -[SKUINetworkErrorViewController .cxx_destruct]
  -[SKUINetworkErrorViewController error]
  -[SKUINetworkErrorViewController initWithError:]
  -[SKUINetworkErrorViewController loadView]
  -[SKUINetworkErrorViewController scrollView]
  -[SKUINetworkErrorViewController headerViewController]
  -[SKUINetworkErrorViewController setHeaderViewController:]
  -[SKUINetworkErrorViewController clientContext]
  -[SKUINetworkErrorViewController setClientContext:]
  -[SKUINetworkErrorViewController _networkTypeChanged:]


SKUIJSImageColorAnalyzer : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIArtworkRequestDelegate, SKUIJSImageColorAnalyzer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIJSImageColorAnalyzer dealloc]
  -[SKUIJSImageColorAnalyzer .cxx_destruct]
  -[SKUIJSImageColorAnalyzer artworkRequest:didLoadImage:]
  -[SKUIJSImageColorAnalyzer initWithAppContext:clientContext:]
  -[SKUIJSImageColorAnalyzer analyzeImageAtUrl::]


SKUIReviewInAppController : NSObject /usr/lib/libc++.1.dylib <SKUIComposeReviewDelegate>
 @property  SKUIReviewInAppConfiguration *configuration
 @property  SKUIReviewInAppRatingViewController *ratingViewController
 @property  SKUIComposeReviewViewController *composeViewController
 @property  SKUIStoreDialogController *dialogController
 @property  SKUIProductReviewURLProvider *reviewURLProvider
 @property  SKUIStarRatingQueue *starRatingQueue
 @property  @? completion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIReviewInAppController init]
  -[SKUIReviewInAppController .cxx_destruct]
  -[SKUIReviewInAppController start]
  -[SKUIReviewInAppController setConfiguration:]
  -[SKUIReviewInAppController configuration]
  -[SKUIReviewInAppController setCompletion:]
  -[SKUIReviewInAppController completion]
  -[SKUIReviewInAppController initWithConfiguration:]
  -[SKUIReviewInAppController composeViewController]
  -[SKUIReviewInAppController dialogController]
  -[SKUIReviewInAppController composeReviewViewController:shouldSubmitReview:]
  -[SKUIReviewInAppController composeReviewViewController:didFailWithDialog:]
  -[SKUIReviewInAppController composeReviewViewControllerDidSubmit:]
  -[SKUIReviewInAppController composeReviewViewControllerDidCancel:]
  -[SKUIReviewInAppController setReviewURLProvider:]
  -[SKUIReviewInAppController reviewURLProvider]
  -[SKUIReviewInAppController _presentRatingPrompt]
  -[SKUIReviewInAppController _finishWithResult:error:]
  -[SKUIReviewInAppController _presentAlertForDialog:]
  -[SKUIReviewInAppController _promptForStarRatingDuringCompose:]
  -[SKUIReviewInAppController _composeReviewViewControllerDidFinish:result:]
  -[SKUIReviewInAppController setRatingViewController:]
  -[SKUIReviewInAppController ratingViewController]
  -[SKUIReviewInAppController _submitRating:completion:]
  -[SKUIReviewInAppController _presentWriteReview]
  -[SKUIReviewInAppController starRatingQueue]
  -[SKUIReviewInAppController setStarRatingQueue:]
  -[SKUIReviewInAppController composeReviewViewController:presentDialog:]
  -[SKUIReviewInAppController setComposeViewController:]
  -[SKUIReviewInAppController setDialogController:]


SKUISettingsObjectStore : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUISettingsObjectStore init]
  -[SKUISettingsObjectStore removeObject:]
  -[SKUISettingsObjectStore objectAtIndex:]
  -[SKUISettingsObjectStore indexOfObject:]
  -[SKUISettingsObjectStore containsObject:]
  -[SKUISettingsObjectStore allObjects]
  -[SKUISettingsObjectStore .cxx_destruct]
  -[SKUISettingsObjectStore numberOfObjects]
  -[SKUISettingsObjectStore addObject:hidden:]
  -[SKUISettingsObjectStore numberOfVisibleObjects]
  -[SKUISettingsObjectStore hideObject:]
  -[SKUISettingsObjectStore indexOfVisibleObject:]
  -[SKUISettingsObjectStore objectIsVisible:]
  -[SKUISettingsObjectStore enumerateObjects:]
  -[SKUISettingsObjectStore revealObject:]
  -[SKUISettingsObjectStore visibleObjectAtIndex:]
  -[SKUISettingsObjectStore _updateVisibleOrder]
  -[SKUISettingsObjectStore enumerateVisibleObjects:]


SKUISettingsEditProfileViewElement : SKUIViewElement

SKUIProductPageSegmentedControl : UISegmentedControl /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIProductPageSegmentedControl hitTest:withEvent:]


SKUIViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUINetworkErrorDelegate, SKUIProductPageOverlayDelegate, UIPopoverControllerDelegate, SKUITabBarItemRootViewController, SKUIClientContextConsuming, SKUIWishlistDelegate>
 @property  UIBarButtonItem *_wishlistButtonItem
 @property  SKUIClientContext *clientContext
 @property  SKUIIPadSearchController *IPadSearchController
 @property  NSOperationQueue *operationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIViewController dealloc]
  -[SKUIViewController .cxx_destruct]
  -[SKUIViewController operationQueue]
  -[SKUIViewController setOperationQueue:]
  -[SKUIViewController viewWillAppear:]
  -[SKUIViewController reloadData]
  -[SKUIViewController supportedInterfaceOrientations]
  -[SKUIViewController willAnimateRotationToInterfaceOrientation:duration:]
  -[SKUIViewController clientContext]
  -[SKUIViewController setClientContext:]
  -[SKUIViewController _setWishlistButtonHidden:]
  -[SKUIViewController showDefaultNavigationItems]
  -[SKUIViewController initWithTabBarItem:]
  -[SKUIViewController skui_viewWillAppear:]
  -[SKUIViewController productPageOverlayDidDismiss:]
  -[SKUIViewController forceOrientationBackToSupportedOrientation]
  -[SKUIViewController _defaultLeftBarButtonItems]
  -[SKUIViewController networkErrorViewControllerInvalidated:]
  -[SKUIViewController _wishlistButtonItem]
  -[SKUIViewController _getIPadSearchController]
  -[SKUIViewController _defaultRightBarButtonItemsIsCompact:]
  -[SKUIViewController _showDialogWithError:]
  -[SKUIViewController _reloadForOrientation:]
  -[SKUIViewController _presentWishlistFromSheet]
  -[SKUIViewController _presentWishlistFromPopover:]
  -[SKUIViewController _wishlistPopoverDidDismiss]
  -[SKUIViewController IPadSearchController]
  -[SKUIViewController _wishlistAction:]
  -[SKUIViewController wishlist:didSelectItem:atIndexPath:]
  -[SKUIViewController showDefaultNavigationItemsForSize:]
  -[SKUIViewController showDefaultNavigationItemsIsCompact:]
  -[SKUIViewController showError:]
  -[SKUIViewController showingError]


SKUIAppMenuBarDocument : IKAppMenuBarDocument /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIDOMFeature>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *featureName
 @property  IKAppContext *appContext

  // class methods
  +[SKUIAppMenuBarDocument featureName]


SKUIContextActionsBlurEffect : UIBlurEffect /usr/lib/libobjc.A.dylib
  // class methods
  +[SKUIContextActionsBlurEffect effectWithStyle:]

  // instance methods
  -[SKUIContextActionsBlurEffect effectSettings]


SKUIIPadCustomerReviewsHeaderView : UIControl /usr/lib/libobjc.A.dylib <SKUIMenuViewControllerDelegate, UIPopoverControllerDelegate>
 @property  SKUIColorScheme *colorScheme
 @property  UIControl *appSupportButton
 @property  UIControl *writeAReviewButton
 @property  long long selectedSortIndex
 @property  NSArray *sortTitles
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIIPadCustomerReviewsHeaderView dealloc]
  -[SKUIIPadCustomerReviewsHeaderView .cxx_destruct]
  -[SKUIIPadCustomerReviewsHeaderView setBackgroundColor:]
  -[SKUIIPadCustomerReviewsHeaderView sizeThatFits:]
  -[SKUIIPadCustomerReviewsHeaderView layoutSubviews]
  -[SKUIIPadCustomerReviewsHeaderView popoverControllerDidDismissPopover:]
  -[SKUIIPadCustomerReviewsHeaderView hitTest:withEvent:]
  -[SKUIIPadCustomerReviewsHeaderView selectedSortIndex]
  -[SKUIIPadCustomerReviewsHeaderView colorScheme]
  -[SKUIIPadCustomerReviewsHeaderView setColorScheme:]
  -[SKUIIPadCustomerReviewsHeaderView initWithClientContext:]
  -[SKUIIPadCustomerReviewsHeaderView menuViewController:didSelectItemAtIndex:]
  -[SKUIIPadCustomerReviewsHeaderView appSupportButton]
  -[SKUIIPadCustomerReviewsHeaderView writeAReviewButton]
  -[SKUIIPadCustomerReviewsHeaderView setSortTitles:]
  -[SKUIIPadCustomerReviewsHeaderView _reloadSortButton]
  -[SKUIIPadCustomerReviewsHeaderView _destroySortPopoverController]
  -[SKUIIPadCustomerReviewsHeaderView _sortButtonAction:]
  -[SKUIIPadCustomerReviewsHeaderView setSelectedSortIndex:]
  -[SKUIIPadCustomerReviewsHeaderView sortTitles]


SKUIOverlayContainerViewController : UIViewController /usr/lib/libobjc.A.dylib <UIGestureRecognizerDelegate>
 @property  UIColor *dimmingViewColor
 @property  UIControl *backstopControl
 @property  NSArray *viewControllers
 @property  <SKUIOverlayContainerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIOverlayContainerViewController dealloc]
  -[SKUIOverlayContainerViewController delegate]
  -[SKUIOverlayContainerViewController setDelegate:]
  -[SKUIOverlayContainerViewController .cxx_destruct]
  -[SKUIOverlayContainerViewController loadView]
  -[SKUIOverlayContainerViewController traitCollectionDidChange:]
  -[SKUIOverlayContainerViewController gestureRecognizerShouldBegin:]
  -[SKUIOverlayContainerViewController initWithNibName:bundle:]
  -[SKUIOverlayContainerViewController viewWillAppear:]
  -[SKUIOverlayContainerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUIOverlayContainerViewController supportedInterfaceOrientations]
  -[SKUIOverlayContainerViewController dimmingViewColor]
  -[SKUIOverlayContainerViewController viewControllers]
  -[SKUIOverlayContainerViewController popViewControllerAnimated:]
  -[SKUIOverlayContainerViewController _selectedViewController]
  -[SKUIOverlayContainerViewController shouldAutomaticallyForwardAppearanceMethods]
  -[SKUIOverlayContainerViewController _tapAction:]
  -[SKUIOverlayContainerViewController showViewControllers:]
  -[SKUIOverlayContainerViewController showViewController:withCompletionBlock:]
  -[SKUIOverlayContainerViewController dismissWithFadeTransitionCompletionBlock:]
  -[SKUIOverlayContainerViewController dismissWithFlipTransition:completionBlock:]
  -[SKUIOverlayContainerViewController backstopControl]
  -[SKUIOverlayContainerViewController showViewController:withFlipTransition:completionBlock:]
  -[SKUIOverlayContainerViewController _frameAction:]
  -[SKUIOverlayContainerViewController _removeChildren]
  -[SKUIOverlayContainerViewController popViewControllerAnimated:completion:]
  -[SKUIOverlayContainerViewController _positionViewControllersForSize:traitCollection:]
  -[SKUIOverlayContainerViewController _popViewControllers]
  -[SKUIOverlayContainerViewController _fadeInViewController:withCompletionBlock:]
  -[SKUIOverlayContainerViewController _slideInViewController:withCompletionBlock:]
  -[SKUIOverlayContainerViewController _pushViewController:]
  -[SKUIOverlayContainerViewController _centeredFrameForViewController:inBounds:]
  -[SKUIOverlayContainerViewController _viewControllerForPoint:]
  -[SKUIOverlayContainerViewController _indexOfViewControllerForPoint:]
  -[SKUIOverlayContainerViewController _overlaySizeForController:atBoundsSize:]
  -[SKUIOverlayContainerViewController _overlaySpacingForSize:]
  -[SKUIOverlayContainerViewController replaceViewController:withViewController:]


SKUIOverlayContainerView : UIControl /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIOverlayContainerView setFrame:]


SKUIHorizontalLockupLayout : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *columns
 @property  {UIEdgeInsets=dddd} metadataColumnEdgeInsets

  // class methods
  +[SKUIHorizontalLockupLayout fontForButtonViewElement:context:]
  +[SKUIHorizontalLockupLayout fontForLabelViewElement:context:]
  +[SKUIHorizontalLockupLayout fontForOrdinalViewElement:context:]

  // instance methods
  -[SKUIHorizontalLockupLayout .cxx_destruct]
  -[SKUIHorizontalLockupLayout columns]
  -[SKUIHorizontalLockupLayout _sizeForViewElement:width:context:]
  -[SKUIHorizontalLockupLayout topPaddingForViewElement:]
  -[SKUIHorizontalLockupLayout bottomPaddingForViewElement:]
  -[SKUIHorizontalLockupLayout initWithLockup:context:]
  -[SKUIHorizontalLockupLayout sizeColumnsToFitWidth:context:]
  -[SKUIHorizontalLockupLayout columnSpacingForColumnIdentifier:]
  -[SKUIHorizontalLockupLayout metadataColumnEdgeInsets]
  -[SKUIHorizontalLockupLayout _sizeForRightAlignedColumn:width:context:]
  -[SKUIHorizontalLockupLayout _heightForMetadataColumn:width:context:]


SKUIHorizontalLockupColumn : NSObject /usr/lib/libc++.1.dylib
 @property  long long identifier
 @property  {CGSize=dd} size
 @property  NSArray *childViewElements

  // instance methods
  -[SKUIHorizontalLockupColumn init]
  -[SKUIHorizontalLockupColumn .cxx_destruct]
  -[SKUIHorizontalLockupColumn identifier]
  -[SKUIHorizontalLockupColumn size]
  -[SKUIHorizontalLockupColumn setIdentifier:]
  -[SKUIHorizontalLockupColumn setSize:]
  -[SKUIHorizontalLockupColumn childViewElements]
  -[SKUIHorizontalLockupColumn _addChildViewElement:]


SKUIReviewInAppRatingHeaderView : UIView /usr/lib/libobjc.A.dylib
 @property  NSString *title
 @property  NSString *message
 @property  UIImageView *imageView
 @property  UILabel *titleLabel
 @property  UILabel *messageLabel
 @property  SKUIStarRatingControl *ratingView
 @property  {CGSize=dd} contentSize
 @property  BOOL completed

  // instance methods
  -[SKUIReviewInAppRatingHeaderView .cxx_destruct]
  -[SKUIReviewInAppRatingHeaderView title]
  -[SKUIReviewInAppRatingHeaderView setTitle:]
  -[SKUIReviewInAppRatingHeaderView contentSize]
  -[SKUIReviewInAppRatingHeaderView message]
  -[SKUIReviewInAppRatingHeaderView setMessage:]
  -[SKUIReviewInAppRatingHeaderView completed]
  -[SKUIReviewInAppRatingHeaderView setContentSize:]
  -[SKUIReviewInAppRatingHeaderView setCompleted:]
  -[SKUIReviewInAppRatingHeaderView intrinsicContentSize]
  -[SKUIReviewInAppRatingHeaderView titleLabel]
  -[SKUIReviewInAppRatingHeaderView sizeThatFits:]
  -[SKUIReviewInAppRatingHeaderView layoutSubviews]
  -[SKUIReviewInAppRatingHeaderView imageView]
  -[SKUIReviewInAppRatingHeaderView setTitleLabel:]
  -[SKUIReviewInAppRatingHeaderView setImageView:]
  -[SKUIReviewInAppRatingHeaderView messageLabel]
  -[SKUIReviewInAppRatingHeaderView setMessageLabel:]
  -[SKUIReviewInAppRatingHeaderView initWithTitle:message:icon:]
  -[SKUIReviewInAppRatingHeaderView _titleLabelFont]
  -[SKUIReviewInAppRatingHeaderView _messageLabelFont]
  -[SKUIReviewInAppRatingHeaderView ratingView]
  -[SKUIReviewInAppRatingHeaderView setCompletedWithRating:]
  -[SKUIReviewInAppRatingHeaderView setRatingView:]


SKUIRadioStationEntityValueProvider : NSObject /usr/lib/libc++.1.dylib <IKEntityValueProviding>
 @property  RadioStation *station
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRadioStationEntityValueProvider init]
  -[SKUIRadioStationEntityValueProvider .cxx_destruct]
  -[SKUIRadioStationEntityValueProvider station]
  -[SKUIRadioStationEntityValueProvider initWithStation:]
  -[SKUIRadioStationEntityValueProvider entityUniqueIdentifier]
  -[SKUIRadioStationEntityValueProvider valueForEntityProperty:]
  -[SKUIRadioStationEntityValueProvider valuesForEntityProperties:]
  -[SKUIRadioStationEntityValueProvider imageURLForEntityArtworkProperty:fittingSize:destinationScale:]
  -[SKUIRadioStationEntityValueProvider rsep_stationName]
  -[SKUIRadioStationEntityValueProvider rsep_coreSeedName]
  -[SKUIRadioStationEntityValueProvider rsep_stationDescription]


SKUIPhysicalCirclesView : UIView /usr/lib/libobjc.A.dylib <PKPhysicsContactDelegate>
 @property  <SKUIPhysicalCirclesDataSource> *dataSource
 @property  <SKUIPhysicalCirclesDelegate> *delegate
 @property  {SKUIPhysicalCircleConstants=dddddddd} constants
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIPhysicalCirclesView dealloc]
  -[SKUIPhysicalCirclesView delegate]
  -[SKUIPhysicalCirclesView setDelegate:]
  -[SKUIPhysicalCirclesView .cxx_destruct]
  -[SKUIPhysicalCirclesView dataSource]
  -[SKUIPhysicalCirclesView setDataSource:]
  -[SKUIPhysicalCirclesView initWithFrame:]
  -[SKUIPhysicalCirclesView reloadData]
  -[SKUIPhysicalCirclesView setConstants:]
  -[SKUIPhysicalCirclesView _displayLinkTick:]
  -[SKUIPhysicalCirclesView constants]
  -[SKUIPhysicalCirclesView _longPressAction:]
  -[SKUIPhysicalCirclesView addCirclesWithCount:]
  -[SKUIPhysicalCirclesView removeCirclesInIndexSet:byAnimatingToPoint:delay:completionBlock:]
  -[SKUIPhysicalCirclesView removeAllCirclesAnimated:completionBlock:]
  -[SKUIPhysicalCirclesView removeCirclesInIndexSet:animated:completionBlock:]
  -[SKUIPhysicalCirclesView circleViewAtIndex:]
  -[SKUIPhysicalCirclesView setSize:forCircleAtIndex:]
  -[SKUIPhysicalCirclesView startPhysics]
  -[SKUIPhysicalCirclesView stopPhysics]
  -[SKUIPhysicalCirclesView removeCircleAtIndex:animated:completionBlock:]
  -[SKUIPhysicalCirclesView removeAllRepellors]
  -[SKUIPhysicalCirclesView addRepellorWithCenter:radius:bufferSize:]
  -[SKUIPhysicalCirclesView _tapGestureAction:]
  -[SKUIPhysicalCirclesView _panGestureAction:]
  -[SKUIPhysicalCirclesView _loadCirclesWithStartIndex:totalCount:]
  -[SKUIPhysicalCirclesView _cancelStepTimers]
  -[SKUIPhysicalCirclesView _reloadDidFinish]
  -[SKUIPhysicalCirclesView removeRepellor:]
  -[SKUIPhysicalCirclesView _removeCircleBodies:]
  -[SKUIPhysicalCirclesView _calculateFrequencyScaling]
  -[SKUIPhysicalCirclesView _circleIndexForPoint:]
  -[SKUIPhysicalCirclesView _startFluctuationForCircleView:]
  -[SKUIPhysicalCirclesView _stopFluctuationForCircleView:]
  -[SKUIPhysicalCirclesView _addSpringForCircleBody:]
  -[SKUIPhysicalCirclesView _initialPositionForCircleIndex:view:]
  -[SKUIPhysicalCirclesView _circleBodyWithView:]
  -[SKUIPhysicalCirclesView _addNextMissingSpringJoint]


SKUICircleRepellor : NSObject /usr/lib/libc++.1.dylib
 @property  double bufferSize
 @property  {CGPoint=dd} center
 @property  PKPhysicsBody *physicsBody
 @property  double radius

  // instance methods
  -[SKUICircleRepellor .cxx_destruct]
  -[SKUICircleRepellor center]
  -[SKUICircleRepellor setCenter:]
  -[SKUICircleRepellor radius]
  -[SKUICircleRepellor setRadius:]
  -[SKUICircleRepellor bufferSize]
  -[SKUICircleRepellor setBufferSize:]
  -[SKUICircleRepellor setPhysicsBody:]
  -[SKUICircleRepellor physicsBody]


SKUIOverlayFlipTransition : NSObject /usr/lib/libc++.1.dylib
 @property  UIView *flipSourceView

  // instance methods
  -[SKUIOverlayFlipTransition .cxx_destruct]
  -[SKUIOverlayFlipTransition setFlipSourceView:]
  -[SKUIOverlayFlipTransition flipSourceView]


SKUIScalingFlipView : UIView /usr/lib/libobjc.A.dylib
 @property  long long direction
 @property  double duration

  // instance methods
  -[SKUIScalingFlipView .cxx_destruct]
  -[SKUIScalingFlipView duration]
  -[SKUIScalingFlipView direction]
  -[SKUIScalingFlipView setDirection:]
  -[SKUIScalingFlipView setDuration:]
  -[SKUIScalingFlipView _timingFunction]
  -[SKUIScalingFlipView animationDidStop:finished:]
  -[SKUIScalingFlipView initWithFrontView:backView:]
  -[SKUIScalingFlipView performFlipWithCompletionBlock:]
  -[SKUIScalingFlipView _frontLayerAnimation]
  -[SKUIScalingFlipView _backLayerAnimation]
  -[SKUIScalingFlipView _inputColorAnimation]
  -[SKUIScalingFlipView _positionAnimation]


SKUIEditorDocumentViewController : SKUIViewController <SKUIEditorTemplateViewDelegate, SKUIDocumentViewController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIEditorDocumentViewController dealloc]
  -[SKUIEditorDocumentViewController .cxx_destruct]
  -[SKUIEditorDocumentViewController loadView]
  -[SKUIEditorDocumentViewController viewWillAppear:]
  -[SKUIEditorDocumentViewController viewWillDisappear:]
  -[SKUIEditorDocumentViewController _backgroundColor]
  -[SKUIEditorDocumentViewController viewWillLayoutSubviews]
  -[SKUIEditorDocumentViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUIEditorDocumentViewController _keyboardWillShow:]
  -[SKUIEditorDocumentViewController _keyboardWillHide:]
  -[SKUIEditorDocumentViewController _keyboardWillChangeFrame:]
  -[SKUIEditorDocumentViewController _layoutContext]
  -[SKUIEditorDocumentViewController documentDidUpdate:]
  -[SKUIEditorDocumentViewController initWithTemplateElement:]
  -[SKUIEditorDocumentViewController _cancelButtonAction]
  -[SKUIEditorDocumentViewController didChangeTextInEditorTemplateView:]
  -[SKUIEditorDocumentViewController _sendDoneEventAndDismissWithText:]
  -[SKUIEditorDocumentViewController _updateBiographyWithText:onCompletion:]
  -[SKUIEditorDocumentViewController _sendCancelEventAndDismiss]
  -[SKUIEditorDocumentViewController _updateEditorViewInset]
  -[SKUIEditorDocumentViewController _layoutNavigation]
  -[SKUIEditorDocumentViewController _layoutEditorView]
  -[SKUIEditorDocumentViewController _doneButtonAction]
  -[SKUIEditorDocumentViewController _resetButtonAction]
  -[SKUIEditorDocumentViewController _resetTextView]
  -[SKUIEditorDocumentViewController _authenticateOnCompletion:]
  -[SKUIEditorDocumentViewController _locateFirstButtonWithType:inChildrenOfElement:]


SKUIMenuViewController : UITableViewController /usr/lib/libobjc.A.dylib
 @property  NSArray *menuTitles
 @property  NSArray *menuImages
 @property  <SKUIMenuViewControllerDelegate> *delegate
 @property  long long indexOfCheckedTitle
 @property  long long menuStyle

  // instance methods
  -[SKUIMenuViewController delegate]
  -[SKUIMenuViewController setDelegate:]
  -[SKUIMenuViewController .cxx_destruct]
  -[SKUIMenuViewController loadView]
  -[SKUIMenuViewController tableView:numberOfRowsInSection:]
  -[SKUIMenuViewController tableView:cellForRowAtIndexPath:]
  -[SKUIMenuViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[SKUIMenuViewController tableView:didSelectRowAtIndexPath:]
  -[SKUIMenuViewController preferredUserInterfaceStyle]
  -[SKUIMenuViewController initWithMenuTitles:]
  -[SKUIMenuViewController setIndexOfCheckedTitle:]
  -[SKUIMenuViewController menuTitles]
  -[SKUIMenuViewController setMenuStyle:]
  -[SKUIMenuViewController initWithMenuTitles:images:]
  -[SKUIMenuViewController menuImages]
  -[SKUIMenuViewController indexOfCheckedTitle]
  -[SKUIMenuViewController menuStyle]


SKUIJSONDataConsumer : SSVURLDataConsumer /System/Library/Frameworks/UIKit.framework/UIKit
  // instance methods
  -[SKUIJSONDataConsumer objectForData:response:error:]


SKUIIPadSearchController : NSObject /usr/lib/libc++.1.dylib <SKUISearchFieldDelegate>
 @property  UIViewController *parentViewController
 @property  SKUIClientContext *clientContext
 @property  SKUISearchFieldController *searchFieldController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIIPadSearchController lastSearchTerm]
  +[SKUIIPadSearchController setLastSearchTerm:]

  // instance methods
  -[SKUIIPadSearchController dealloc]
  -[SKUIIPadSearchController .cxx_destruct]
  -[SKUIIPadSearchController parentViewController]
  -[SKUIIPadSearchController clientContext]
  -[SKUIIPadSearchController setClientContext:]
  -[SKUIIPadSearchController initWithParentViewController:]
  -[SKUIIPadSearchController reloadSearchField]
  -[SKUIIPadSearchController newSearchFieldBarItem]
  -[SKUIIPadSearchController _termDidChangeNotification:]
  -[SKUIIPadSearchController _searchFieldController]
  -[SKUIIPadSearchController setSearchFieldText:]
  -[SKUIIPadSearchController setNumberOfSearchResults:]
  -[SKUIIPadSearchController searchFieldController:requestSearch:]
  -[SKUIIPadSearchController searchFieldController]
  -[SKUIIPadSearchController setSearchFieldPlaceholderText:]


_SKUIItemBrowseCellContentView : UIView /usr/lib/libobjc.A.dylib
 @property  UILabel *indexNumberLabel
 @property  UILabel *subtitleLabel
 @property  UILabel *titleLabel
 @property  UILabel *userRatingLabel
 @property  SKUICellImageView *userRatingImageView

  // instance methods
  -[_SKUIItemBrowseCellContentView .cxx_destruct]
  -[_SKUIItemBrowseCellContentView setBackgroundColor:]
  -[_SKUIItemBrowseCellContentView initWithFrame:]
  -[_SKUIItemBrowseCellContentView titleLabel]
  -[_SKUIItemBrowseCellContentView setTitleLabel:]
  -[_SKUIItemBrowseCellContentView drawRect:]
  -[_SKUIItemBrowseCellContentView setSubtitleLabel:]
  -[_SKUIItemBrowseCellContentView subtitleLabel]
  -[_SKUIItemBrowseCellContentView indexNumberLabel]
  -[_SKUIItemBrowseCellContentView setIndexNumberLabel:]
  -[_SKUIItemBrowseCellContentView userRatingLabel]
  -[_SKUIItemBrowseCellContentView setUserRatingLabel:]
  -[_SKUIItemBrowseCellContentView userRatingImageView]
  -[_SKUIItemBrowseCellContentView setUserRatingImageView:]


SKUIItemBrowseCellLayout : SKUIItemCellLayout
 @property  NSString *category
 @property  NSString *indexNumberString
 @property  long long numberOfUserRatings
 @property  double userRating
 @property  NSString *subtitle
 @property  NSString *title
 @property  BOOL largeSpacing
 @property  {CGSize=dd} imageBoundingSize

  // instance methods
  -[SKUIItemBrowseCellLayout .cxx_destruct]
  -[SKUIItemBrowseCellLayout category]
  -[SKUIItemBrowseCellLayout setCategory:]
  -[SKUIItemBrowseCellLayout title]
  -[SKUIItemBrowseCellLayout setTitle:]
  -[SKUIItemBrowseCellLayout subtitle]
  -[SKUIItemBrowseCellLayout setBackgroundColor:]
  -[SKUIItemBrowseCellLayout layoutSubviews]
  -[SKUIItemBrowseCellLayout setSubtitle:]
  -[SKUIItemBrowseCellLayout initWithParentView:]
  -[SKUIItemBrowseCellLayout initWithTableViewCell:]
  -[SKUIItemBrowseCellLayout setIconImage:]
  -[SKUIItemBrowseCellLayout userRating]
  -[SKUIItemBrowseCellLayout setUserRating:]
  -[SKUIItemBrowseCellLayout numberOfUserRatings]
  -[SKUIItemBrowseCellLayout setColoringWithColorScheme:]
  -[SKUIItemBrowseCellLayout _reloadUserRatingViews]
  -[SKUIItemBrowseCellLayout _decimalNumberFormatter]
  -[SKUIItemBrowseCellLayout setNumberOfUserRatings:]
  -[SKUIItemBrowseCellLayout setImageBoundingSize:]
  -[SKUIItemBrowseCellLayout initWithCollectionViewCell:]
  -[SKUIItemBrowseCellLayout layoutForItemOfferChange]
  -[SKUIItemBrowseCellLayout imageBoundingSize]
  -[SKUIItemBrowseCellLayout _initSKUIItemBrowseCellLayout]
  -[SKUIItemBrowseCellLayout indexNumberString]
  -[SKUIItemBrowseCellLayout setIndexNumberString:]
  -[SKUIItemBrowseCellLayout setLargeSpacing:]
  -[SKUIItemBrowseCellLayout isLargeSpacing]


SKUIPersonalizeOfferOperation : NSOperation /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  @? outputBlock

  // instance methods
  -[SKUIPersonalizeOfferOperation .cxx_destruct]
  -[SKUIPersonalizeOfferOperation main]
  -[SKUIPersonalizeOfferOperation setOutputBlock:]
  -[SKUIPersonalizeOfferOperation outputBlock]
  -[SKUIPersonalizeOfferOperation initWithItemIdentifier:clientContext:]


SKUICardLayout : NSObject /usr/lib/libc++.1.dylib
 @property  SKUICardViewElement *cardViewElement
 @property  SKUIViewElementLayoutContext *layoutContext
 @property  double horizontalContentInset
 @property  long long layoutStyle

  // class methods
  +[SKUICardLayout layoutWithCardViewElement:context:]
  +[SKUICardLayout allowsViewElement:]

  // instance methods
  -[SKUICardLayout .cxx_destruct]
  -[SKUICardLayout layoutStyle]
  -[SKUICardLayout sizeForViewElement:width:]
  -[SKUICardLayout layoutContext]
  -[SKUICardLayout horizontalContentInset]
  -[SKUICardLayout attributedStringForButton:]
  -[SKUICardLayout attributedStringForLabel:]
  -[SKUICardLayout topInsetForViewElement:previousViewElement:width:]
  -[SKUICardLayout bottomInsetForLastViewElement:width:]
  -[SKUICardLayout cardViewElement]


SKUIImageDeckViewElement : SKUIViewElement
 @property  double initialDragLeft
 @property  double initialDragRight
 @property  double additionalDragLeft
 @property  double additionalDragRight

  // instance methods
  -[SKUIImageDeckViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIImageDeckViewElement initialDragLeft]
  -[SKUIImageDeckViewElement initialDragRight]
  -[SKUIImageDeckViewElement additionalDragLeft]
  -[SKUIImageDeckViewElement additionalDragRight]


SKUIStarHistogramViewElement : SKUIViewElement
  // instance methods
  -[SKUIStarHistogramViewElement pageComponentType]


SKUISettingsTableHeaderFooterView : UITableViewHeaderFooterView /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUISettingsTableHeaderFooterView .cxx_destruct]
  -[SKUISettingsTableHeaderFooterView prepareForReuse]
  -[SKUISettingsTableHeaderFooterView layoutSubviews]
  -[SKUISettingsTableHeaderFooterView displaySettingsHeaderFooterDescriptionView:]


SKUICollectionListViewElement : SKUIViewElement
 @property  SKUISearchBarViewElement *searchHeader

  // instance methods
  -[SKUICollectionListViewElement .cxx_destruct]
  -[SKUICollectionListViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUICollectionListViewElement searchHeader]


SKUIItemGridViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIItemCollectionDelegate, UICollectionViewDataSource, UICollectionViewDelegate>
 @property  double rowHeight
 @property  SKUIClientContext *clientContext
 @property  {CGPoint=dd} contentOffset
 @property  <SKUIItemGridDelegate> *delegate
 @property  SKUIStyledImageDataConsumer *iconDataConsumer
 @property  SKUIItemArtworkContext *artworkContext
 @property  {CGSize=dd} imageBoundingSize
 @property  NSArray *items
 @property  NSOperationQueue *operationQueue
 @property  SKUIUber *uber
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIItemGridViewController dealloc]
  -[SKUIItemGridViewController delegate]
  -[SKUIItemGridViewController setDelegate:]
  -[SKUIItemGridViewController .cxx_destruct]
  -[SKUIItemGridViewController operationQueue]
  -[SKUIItemGridViewController setOperationQueue:]
  -[SKUIItemGridViewController items]
  -[SKUIItemGridViewController setItems:]
  -[SKUIItemGridViewController loadView]
  -[SKUIItemGridViewController scrollViewWillBeginDragging:]
  -[SKUIItemGridViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SKUIItemGridViewController scrollViewDidEndDecelerating:]
  -[SKUIItemGridViewController collectionView:numberOfItemsInSection:]
  -[SKUIItemGridViewController collectionView:cellForItemAtIndexPath:]
  -[SKUIItemGridViewController _collectionViewLayout]
  -[SKUIItemGridViewController contentOffset]
  -[SKUIItemGridViewController supportedInterfaceOrientations]
  -[SKUIItemGridViewController viewDidLayoutSubviews]
  -[SKUIItemGridViewController viewDidAppear:]
  -[SKUIItemGridViewController viewDidDisappear:]
  -[SKUIItemGridViewController setContentOffset:]
  -[SKUIItemGridViewController _collectionView]
  -[SKUIItemGridViewController rowHeight]
  -[SKUIItemGridViewController collectionView:didSelectItemAtIndexPath:]
  -[SKUIItemGridViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[SKUIItemGridViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[SKUIItemGridViewController clientContext]
  -[SKUIItemGridViewController setClientContext:]
  -[SKUIItemGridViewController removeItemsAtIndexes:]
  -[SKUIItemGridViewController artworkContext]
  -[SKUIItemGridViewController setUber:]
  -[SKUIItemGridViewController uber]
  -[SKUIItemGridViewController itemCollectionView:didConfirmItemOfferForCell:]
  -[SKUIItemGridViewController setImageBoundingSize:]
  -[SKUIItemGridViewController imageBoundingSize]
  -[SKUIItemGridViewController _reloadLayout]
  -[SKUIItemGridViewController iconDataConsumer]
  -[SKUIItemGridViewController _itemCollectionController]
  -[SKUIItemGridViewController loadNextPageOfArtworkWithReason:]
  -[SKUIItemGridViewController setArtworkContext:]
  -[SKUIItemGridViewController setIconDataConsumer:]
  -[SKUIItemGridViewController itemCollectionController:cellLayoutForItemIndex:]
  -[SKUIItemGridViewController itemCollectionController:itemPageRangeForOffset:]
  -[SKUIItemGridViewController visibleItemRangeForItemCollectionController:]
  -[SKUIItemGridViewController initWithRowHeight:]
  -[SKUIItemGridViewController popIconImageViewForItemAtIndex:]
  -[SKUIItemGridViewController setItemCellClass:]
  -[SKUIItemGridViewController unhideIcons]
  -[SKUIItemGridViewController itemCollectionView:didPerformEditActionForCell:]


SKUIItemListTableViewController : UITableViewController /usr/lib/libobjc.A.dylib <SKUIItemCollectionDelegate>
 @property  <SKUIItemListTableDelegate> *delegate
 @property  SKUIItemArtworkContext *artworkContext
 @property  SKUIResourceLoader *artworkLoader
 @property  SKUIClientContext *clientContext
 @property  SKUIStyledImageDataConsumer *iconDataConsumer
 @property  {CGSize=dd} imageBoundingSize
 @property  SKUIItemList *itemList
 @property  BOOL loadsMoreItems
 @property  NSOperationQueue *operationQueue
 @property  double rowHeight
 @property  long long selectionStyle
 @property  long long separatorStyle
 @property  BOOL suspended
 @property  SKUIUber *uber
 @property  NSString *visibleMetricsImpressions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIItemListTableViewController dealloc]
  -[SKUIItemListTableViewController delegate]
  -[SKUIItemListTableViewController setDelegate:]
  -[SKUIItemListTableViewController .cxx_destruct]
  -[SKUIItemListTableViewController operationQueue]
  -[SKUIItemListTableViewController setOperationQueue:]
  -[SKUIItemListTableViewController setSuspended:]
  -[SKUIItemListTableViewController isSuspended]
  -[SKUIItemListTableViewController loadView]
  -[SKUIItemListTableViewController initWithNibName:bundle:]
  -[SKUIItemListTableViewController scrollViewWillBeginDragging:]
  -[SKUIItemListTableViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SKUIItemListTableViewController scrollViewDidEndDecelerating:]
  -[SKUIItemListTableViewController viewDidAppear:]
  -[SKUIItemListTableViewController viewDidDisappear:]
  -[SKUIItemListTableViewController tableView:numberOfRowsInSection:]
  -[SKUIItemListTableViewController tableView:cellForRowAtIndexPath:]
  -[SKUIItemListTableViewController numberOfSectionsInTableView:]
  -[SKUIItemListTableViewController tableView:canEditRowAtIndexPath:]
  -[SKUIItemListTableViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[SKUIItemListTableViewController selectionStyle]
  -[SKUIItemListTableViewController setSelectionStyle:]
  -[SKUIItemListTableViewController separatorStyle]
  -[SKUIItemListTableViewController setSeparatorStyle:]
  -[SKUIItemListTableViewController rowHeight]
  -[SKUIItemListTableViewController setRowHeight:]
  -[SKUIItemListTableViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[SKUIItemListTableViewController tableView:didEndDisplayingCell:forRowAtIndexPath:]
  -[SKUIItemListTableViewController tableView:didSelectRowAtIndexPath:]
  -[SKUIItemListTableViewController tableView:didDeselectRowAtIndexPath:]
  -[SKUIItemListTableViewController tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:]
  -[SKUIItemListTableViewController addItems:]
  -[SKUIItemListTableViewController itemList]
  -[SKUIItemListTableViewController setItemList:]
  -[SKUIItemListTableViewController clientContext]
  -[SKUIItemListTableViewController setClientContext:]
  -[SKUIItemListTableViewController artworkContext]
  -[SKUIItemListTableViewController setUber:]
  -[SKUIItemListTableViewController uber]
  -[SKUIItemListTableViewController artworkLoader]
  -[SKUIItemListTableViewController setImageBoundingSize:]
  -[SKUIItemListTableViewController itemTableView:didConfirmItemOfferForTableViewCell:]
  -[SKUIItemListTableViewController imageBoundingSize]
  -[SKUIItemListTableViewController frameForItemAtIndex:]
  -[SKUIItemListTableViewController iconDataConsumer]
  -[SKUIItemListTableViewController _itemCollectionController]
  -[SKUIItemListTableViewController loadNextPageOfArtworkWithReason:]
  -[SKUIItemListTableViewController setArtworkContext:]
  -[SKUIItemListTableViewController setIconDataConsumer:]
  -[SKUIItemListTableViewController itemCollectionController:cellLayoutForItemIndex:]
  -[SKUIItemListTableViewController itemCollectionController:itemPageRangeForOffset:]
  -[SKUIItemListTableViewController visibleItemRangeForItemCollectionController:]
  -[SKUIItemListTableViewController popIconImageViewForItemAtIndex:]
  -[SKUIItemListTableViewController setItemCellClass:]
  -[SKUIItemListTableViewController unhideIcons]
  -[SKUIItemListTableViewController setArtworkLoader:]
  -[SKUIItemListTableViewController _loadRemainingItemsWithPriority:]
  -[SKUIItemListTableViewController _finishLoadMoreOperationWithItems:error:]
  -[SKUIItemListTableViewController deleteRowsAtIndexPaths:]
  -[SKUIItemListTableViewController setItemArtworkContext:]
  -[SKUIItemListTableViewController visibleMetricsImpressions]
  -[SKUIItemListTableViewController itemTableView:didRemoveCell:]
  -[SKUIItemListTableViewController loadsMoreItems]
  -[SKUIItemListTableViewController setLoadsMoreItems:]


SKUILoadMoreCell : SKUITableViewCell
  // instance methods
  -[SKUILoadMoreCell .cxx_destruct]
  -[SKUILoadMoreCell initWithStyle:reuseIdentifier:]
  -[SKUILoadMoreCell startAnimating]
  -[SKUILoadMoreCell stopAnimating]


SKUIReviewInAppRatingViewController : UIViewController /usr/lib/libobjc.A.dylib <UIViewControllerTransitioningDelegate, UIInterfaceActionHandlerInvocationDelegate>
 @property  UIVisualEffectView *backgroundView
 @property  UIStackView *stackView
 @property  NSMutableArray *constraints
 @property  SKUIReviewInAppRatingHeaderView *headerView
 @property  unsigned long state
 @property  UIInterfaceAction *ratingControlAction
 @property  SKUIStarRatingControl *ratingControl
 @property  @? completion
 @property  @? ratingHandler
 @property  BOOL disableSubmit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIReviewInAppRatingViewController .cxx_destruct]
  -[SKUIReviewInAppRatingViewController constraints]
  -[SKUIReviewInAppRatingViewController state]
  -[SKUIReviewInAppRatingViewController setState:]
  -[SKUIReviewInAppRatingViewController setCompletion:]
  -[SKUIReviewInAppRatingViewController completion]
  -[SKUIReviewInAppRatingViewController backgroundView]
  -[SKUIReviewInAppRatingViewController _actions]
  -[SKUIReviewInAppRatingViewController interfaceAction:invokeActionHandler:completion:]
  -[SKUIReviewInAppRatingViewController viewWillAppear:]
  -[SKUIReviewInAppRatingViewController stackView]
  -[SKUIReviewInAppRatingViewController viewDidLoad]
  -[SKUIReviewInAppRatingViewController animationControllerForPresentedController:presentingController:sourceController:]
  -[SKUIReviewInAppRatingViewController animationControllerForDismissedController:]
  -[SKUIReviewInAppRatingViewController presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]
  -[SKUIReviewInAppRatingViewController headerView]
  -[SKUIReviewInAppRatingViewController setHeaderView:]
  -[SKUIReviewInAppRatingViewController setBackgroundView:]
  -[SKUIReviewInAppRatingViewController setStackView:]
  -[SKUIReviewInAppRatingViewController setConstraints:]
  -[SKUIReviewInAppRatingViewController _ratingControlChanged:]
  -[SKUIReviewInAppRatingViewController ratingControl]
  -[SKUIReviewInAppRatingViewController setRatingControl:]
  -[SKUIReviewInAppRatingViewController initWithTitle:message:icon:]
  -[SKUIReviewInAppRatingViewController setDisableSubmit:]
  -[SKUIReviewInAppRatingViewController setRatingHandler:]
  -[SKUIReviewInAppRatingViewController setRatingControlAction:]
  -[SKUIReviewInAppRatingViewController ratingControlAction]
  -[SKUIReviewInAppRatingViewController reloadViewsConfiguration]
  -[SKUIReviewInAppRatingViewController _actionsLayoutAxesForCurrentState]
  -[SKUIReviewInAppRatingViewController _buttonActionWithTitle:style:]
  -[SKUIReviewInAppRatingViewController disableSubmit]
  -[SKUIReviewInAppRatingViewController ratingHandler]


SKUIProxyScrollView : UIScrollView /usr/lib/libobjc.A.dylib
 @property  <SKUIProxyScrollViewDelegate> *delegate

  // instance methods
  -[SKUIProxyScrollView setContentInset:]
  -[SKUIProxyScrollView didMoveToWindow]


SKUITrackViewElement : SKUIViewElement
 @property  BOOL selected
 @property  SKUIActionsViewElement *swipeActions

  // instance methods
  -[SKUITrackViewElement isEnabled]
  -[SKUITrackViewElement isSelected]
  -[SKUITrackViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUITrackViewElement applyUpdatesWithElement:]
  -[SKUITrackViewElement enumerateChildrenUsingBlock:]
  -[SKUITrackViewElement swipeActions]


SKUISignInDocumentViewController : SKUIViewController <SKUIArtworkRequestDelegate, SKUILayoutCacheDelegate, SKUISignInViewDelegate, SKUIDocumentViewController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUISignInDocumentViewController dealloc]
  -[SKUISignInDocumentViewController .cxx_destruct]
  -[SKUISignInDocumentViewController loadView]
  -[SKUISignInDocumentViewController viewWillAppear:]
  -[SKUISignInDocumentViewController viewWillDisappear:]
  -[SKUISignInDocumentViewController _backgroundColor]
  -[SKUISignInDocumentViewController viewWillLayoutSubviews]
  -[SKUISignInDocumentViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUISignInDocumentViewController _keyboardWillShow:]
  -[SKUISignInDocumentViewController _keyboardWillHide:]
  -[SKUISignInDocumentViewController _keyboardWillChangeFrame:]
  -[SKUISignInDocumentViewController _layoutContext]
  -[SKUISignInDocumentViewController documentDidUpdate:]
  -[SKUISignInDocumentViewController artworkRequest:didLoadImage:]
  -[SKUISignInDocumentViewController layoutCacheDidFinishBatch:]
  -[SKUISignInDocumentViewController _layoutScrollView]
  -[SKUISignInDocumentViewController _reloadPanelViewWithScrollViewSize:]
  -[SKUISignInDocumentViewController _reloadContentSize]
  -[SKUISignInDocumentViewController initWithTemplateElement:]
  -[SKUISignInDocumentViewController _signInSuccess:]
  -[SKUISignInDocumentViewController _signInFailed:error:]
  -[SKUISignInDocumentViewController signInEntryComplete:accountName:password:]


SKUIAccountButtonsView : UIView /usr/lib/libobjc.A.dylib
 @property  NSString *accountCredits
 @property  UIButton *appleIDButton
 @property  UIButton *giftingButton
 @property  UIButton *redeemButton
 @property  UIButton *termsAndConditionsButton
 @property  UIControl *ECommerceButton
 @property  NSString *ECommerceLinkTitle
 @property  BOOL giftingHidden
 @property  BOOL termsAndConditionsHidden

  // instance methods
  -[SKUIAccountButtonsView dealloc]
  -[SKUIAccountButtonsView .cxx_destruct]
  -[SKUIAccountButtonsView sizeThatFits:]
  -[SKUIAccountButtonsView layoutSubviews]
  -[SKUIAccountButtonsView tintColorDidChange]
  -[SKUIAccountButtonsView initWithClientContext:]
  -[SKUIAccountButtonsView _reloadFonts]
  -[SKUIAccountButtonsView _newLinkButtonWithTitle:]
  -[SKUIAccountButtonsView _layoutTwoRows]
  -[SKUIAccountButtonsView _layoutOneRow]
  -[SKUIAccountButtonsView isEcommerceHidden]
  -[SKUIAccountButtonsView isRedeemHidden]
  -[SKUIAccountButtonsView isGiftingHidden]
  -[SKUIAccountButtonsView accountCredits]
  -[SKUIAccountButtonsView ECommerceLinkTitle]
  -[SKUIAccountButtonsView setECommerceLinkTitle:]
  -[SKUIAccountButtonsView isTermsAndConditionsHidden]
  -[SKUIAccountButtonsView setAccountCredits:]
  -[SKUIAccountButtonsView setGiftingHidden:]
  -[SKUIAccountButtonsView setTermsAndConditionsHidden:]
  -[SKUIAccountButtonsView appleIDButton]
  -[SKUIAccountButtonsView ECommerceButton]
  -[SKUIAccountButtonsView giftingButton]
  -[SKUIAccountButtonsView redeemButton]
  -[SKUIAccountButtonsView termsAndConditionsButton]


SKUIAccountButtonsViewController : UIViewController /usr/lib/libobjc.A.dylib <UINavigationControllerDelegate>
 @property  SKUIClientContext *clientContext
 @property  <SKUIAccountButtonsDelegate> *delegate
 @property  SKUILink *ECommerceLink
 @property  BOOL giftingHidden
 @property  BOOL termsAndConditionsHidden
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIAccountButtonsViewController dealloc]
  -[SKUIAccountButtonsViewController delegate]
  -[SKUIAccountButtonsViewController setDelegate:]
  -[SKUIAccountButtonsViewController .cxx_destruct]
  -[SKUIAccountButtonsViewController loadView]
  -[SKUIAccountButtonsViewController initWithNibName:bundle:]
  -[SKUIAccountButtonsViewController navigationControllerSupportedInterfaceOrientations:]
  -[SKUIAccountButtonsViewController _buttonsView]
  -[SKUIAccountButtonsViewController clientContext]
  -[SKUIAccountButtonsViewController setClientContext:]
  -[SKUIAccountButtonsViewController _accountStoreChangedNotification:]
  -[SKUIAccountButtonsViewController _restrictionsChangedNotification:]
  -[SKUIAccountButtonsViewController isGiftingHidden]
  -[SKUIAccountButtonsViewController isTermsAndConditionsHidden]
  -[SKUIAccountButtonsViewController setGiftingHidden:]
  -[SKUIAccountButtonsViewController setTermsAndConditionsHidden:]
  -[SKUIAccountButtonsViewController _reloadAccountsButton]
  -[SKUIAccountButtonsViewController _reloadRestrictions]
  -[SKUIAccountButtonsViewController _sendDidSignIn]
  -[SKUIAccountButtonsViewController _viewAppleID]
  -[SKUIAccountButtonsViewController _signOut]
  -[SKUIAccountButtonsViewController _openIForgot]
  -[SKUIAccountButtonsViewController _ecommerceLinkAction:]
  -[SKUIAccountButtonsViewController _giftAction:]
  -[SKUIAccountButtonsViewController _redeemButtonAction:]
  -[SKUIAccountButtonsViewController _termsAndConditionsButtonAction:]
  -[SKUIAccountButtonsViewController _usernameButtonAction:]
  -[SKUIAccountButtonsViewController _signInButtonAction:]
  -[SKUIAccountButtonsViewController setECommerceLink:]
  -[SKUIAccountButtonsViewController ECommerceLink]


SKUIProductPageHeaderFloatingView : UIView /usr/lib/libobjc.A.dylib
 @property  double backdropAlpha
 @property  SKUIColorScheme *colorScheme
 @property  UIControl *sectionControl
 @property  long long selectedSectionIndex

  // instance methods
  -[SKUIProductPageHeaderFloatingView .cxx_destruct]
  -[SKUIProductPageHeaderFloatingView sizeThatFits:]
  -[SKUIProductPageHeaderFloatingView layoutSubviews]
  -[SKUIProductPageHeaderFloatingView selectedSectionIndex]
  -[SKUIProductPageHeaderFloatingView setSelectedSectionIndex:]
  -[SKUIProductPageHeaderFloatingView colorScheme]
  -[SKUIProductPageHeaderFloatingView setColorScheme:]
  -[SKUIProductPageHeaderFloatingView sectionControl]
  -[SKUIProductPageHeaderFloatingView initWithSectionTitles:isPad:]
  -[SKUIProductPageHeaderFloatingView setBackdropAlpha:]
  -[SKUIProductPageHeaderFloatingView _reloadBackdropView]
  -[SKUIProductPageHeaderFloatingView backdropAlpha]


SKUINearMeController : NSObject /usr/lib/libc++.1.dylib <CLLocationManagerDelegate, SKUIItemStateCenterObserver>
 @property  SKUIClientContext *clientContext
 @property  NSArray *items
 @property  NSDictionary *responseDictionary
 @property  long long status
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUINearMeController sharedController]

  // instance methods
  -[SKUINearMeController init]
  -[SKUINearMeController .cxx_destruct]
  -[SKUINearMeController status]
  -[SKUINearMeController items]
  -[SKUINearMeController disable]
  -[SKUINearMeController locationManager:didUpdateLocations:]
  -[SKUINearMeController locationManager:didFailWithError:]
  -[SKUINearMeController locationManager:didChangeAuthorizationStatus:]
  -[SKUINearMeController _applicationWillEnterForeground:]
  -[SKUINearMeController responseDictionary]
  -[SKUINearMeController clientContext]
  -[SKUINearMeController setClientContext:]
  -[SKUINearMeController itemStateCenterRestrictionsChanged:]
  -[SKUINearMeController _startMonitoringLocation]
  -[SKUINearMeController _disableNearMe]
  -[SKUINearMeController _setItems:responseDictionary:error:status:]
  -[SKUINearMeController _lookupItemsForLocation:]
  -[SKUINearMeController _stopRefreshTimer]
  -[SKUINearMeController _monitorLocationTimeout]
  -[SKUINearMeController _stopMonitoringLocation]
  -[SKUINearMeController _startRefreshTimer]
  -[SKUINearMeController _finishLookupWithItems:response:error:]
  -[SKUINearMeController _refreshTimeout]
  -[SKUINearMeController getItems]
  -[SKUINearMeController isNearMeLocationStatusEnabled]


SKUIItemCollectionController : NSObject /usr/lib/libc++.1.dylib <SKUIArtworkRequestDelegate, SKUIItemStateCenterObserver>
 @property  <SKUIItemCollectionDelegate> *delegate
 @property  SKUIResourceLoader *artworkLoader
 @property  SKUIClientContext *clientContext
 @property  SKUIItemArtworkContext *artworkContext
 @property  SKUIStyledImageDataConsumer *iconDataConsumer
 @property  SKUIScreenshotDataConsumer *landscapeScreenshotDataConsumer
 @property  SKUIScreenshotDataConsumer *portraitScreenshotDataConsumer
 @property  NSArray *items
 @property  long long numberOfItemsPerPage
 @property  double numberOfPagesToCacheAhead
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIItemCollectionController init]
  -[SKUIItemCollectionController dealloc]
  -[SKUIItemCollectionController delegate]
  -[SKUIItemCollectionController setDelegate:]
  -[SKUIItemCollectionController .cxx_destruct]
  -[SKUIItemCollectionController items]
  -[SKUIItemCollectionController setItems:]
  -[SKUIItemCollectionController scrollViewWillBeginDragging:]
  -[SKUIItemCollectionController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SKUIItemCollectionController scrollViewDidEndDecelerating:]
  -[SKUIItemCollectionController clientContext]
  -[SKUIItemCollectionController setClientContext:]
  -[SKUIItemCollectionController itemStateCenter:itemStatesChanged:]
  -[SKUIItemCollectionController itemStateCenterRestrictionsChanged:]
  -[SKUIItemCollectionController initWithClientContext:]
  -[SKUIItemCollectionController enterForeground]
  -[SKUIItemCollectionController enterBackground]
  -[SKUIItemCollectionController artworkRequest:didLoadImage:]
  -[SKUIItemCollectionController artworkContext]
  -[SKUIItemCollectionController artworkLoader]
  -[SKUIItemCollectionController removeAllCachedResources]
  -[SKUIItemCollectionController _artworkLoader]
  -[SKUIItemCollectionController iconDataConsumer]
  -[SKUIItemCollectionController loadNextPageOfArtworkWithReason:]
  -[SKUIItemCollectionController setArtworkContext:]
  -[SKUIItemCollectionController setIconDataConsumer:]
  -[SKUIItemCollectionController precacheNextPageArtworkForOffset:direction:]
  -[SKUIItemCollectionController performActionForItemAtIndex:]
  -[SKUIItemCollectionController configureCellLayout:forIndex:]
  -[SKUIItemCollectionController didEndDisplayingItemAtIndex:]
  -[SKUIItemCollectionController setNumberOfItemsPerPage:]
  -[SKUIItemCollectionController setNumberOfPagesToCacheAhead:]
  -[SKUIItemCollectionController setArtworkLoader:]
  -[SKUIItemCollectionController _memoryWarningNotification:]
  -[SKUIItemCollectionController _initSKUIItemCollectionController]
  -[SKUIItemCollectionController _iconArtworkRequestWithItem:]
  -[SKUIItemCollectionController _placeholderImageForItem:]
  -[SKUIItemCollectionController _reloadScreenshotForCellLayout:item:isRestricted:]
  -[SKUIItemCollectionController _loadArtworkForItem:reason:]
  -[SKUIItemCollectionController numberOfPagesToCacheAhead]
  -[SKUIItemCollectionController _enumerateVisibleCellLayoutsWithBlock:]
  -[SKUIItemCollectionController _reloadForItemStateChange:]
  -[SKUIItemCollectionController _reloadForRestrictionsChange]
  -[SKUIItemCollectionController _visibleItemRange]
  -[SKUIItemCollectionController _screenshotArtworkRequestWithItem:]
  -[SKUIItemCollectionController landscapeScreenshotDataConsumer]
  -[SKUIItemCollectionController portraitScreenshotDataConsumer]
  -[SKUIItemCollectionController _screenshotForItem:]
  -[SKUIItemCollectionController _placeholderImageForScreenshot:]
  -[SKUIItemCollectionController cancelArtworkLoadForItemIndex:]
  -[SKUIItemCollectionController setLandscapeScreenshotDataConsumer:]
  -[SKUIItemCollectionController setPortraitScreenshotDataConsumer:]
  -[SKUIItemCollectionController numberOfItemsPerPage]


SKUIReportAConcernReasonViewController : UIViewController /usr/lib/libobjc.A.dylib <UITableViewDelegate>
 @property  SKUIReportAConcernConfiguration *configuration
 @property  SKUIReportAConcernReasonDataSource *dataSource
 @property  UITableView *tableView
 @property  @? completion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIReportAConcernReasonViewController initWithCoder:]
  -[SKUIReportAConcernReasonViewController .cxx_destruct]
  -[SKUIReportAConcernReasonViewController setConfiguration:]
  -[SKUIReportAConcernReasonViewController configuration]
  -[SKUIReportAConcernReasonViewController setCompletion:]
  -[SKUIReportAConcernReasonViewController completion]
  -[SKUIReportAConcernReasonViewController dataSource]
  -[SKUIReportAConcernReasonViewController setDataSource:]
  -[SKUIReportAConcernReasonViewController initWithConfiguration:]
  -[SKUIReportAConcernReasonViewController tableView]
  -[SKUIReportAConcernReasonViewController initWithNibName:bundle:]
  -[SKUIReportAConcernReasonViewController viewDidLoad]
  -[SKUIReportAConcernReasonViewController viewWillLayoutSubviews]
  -[SKUIReportAConcernReasonViewController setTableView:]
  -[SKUIReportAConcernReasonViewController tableView:didSelectRowAtIndexPath:]
  -[SKUIReportAConcernReasonViewController cancelPressed:]


SKUIReportAConcernReasonDataSource : NSObject /usr/lib/libc++.1.dylib <UITableViewDataSource>
 @property  UITableView *tableView
 @property  NSArray *reasons
 @property  NSString *selectReasonTitle
 @property  NSString *selectReasonSubtitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIReportAConcernReasonDataSource init]
  -[SKUIReportAConcernReasonDataSource .cxx_destruct]
  -[SKUIReportAConcernReasonDataSource reasons]
  -[SKUIReportAConcernReasonDataSource setReasons:]
  -[SKUIReportAConcernReasonDataSource tableView]
  -[SKUIReportAConcernReasonDataSource tableView:numberOfRowsInSection:]
  -[SKUIReportAConcernReasonDataSource tableView:cellForRowAtIndexPath:]
  -[SKUIReportAConcernReasonDataSource tableView:titleForHeaderInSection:]
  -[SKUIReportAConcernReasonDataSource tableView:titleForFooterInSection:]
  -[SKUIReportAConcernReasonDataSource initWithTableView:]
  -[SKUIReportAConcernReasonDataSource setTableView:]
  -[SKUIReportAConcernReasonDataSource selectReasonTitle]
  -[SKUIReportAConcernReasonDataSource setSelectReasonTitle:]
  -[SKUIReportAConcernReasonDataSource selectReasonSubtitle]
  -[SKUIReportAConcernReasonDataSource setSelectReasonSubtitle:]


SKUITracklistViewElement : SKUIViewElement
 @property  SKUIHeaderViewElement *header
 @property  NSArray *sections
 @property  NSArray *tracks

  // instance methods
  -[SKUITracklistViewElement .cxx_destruct]
  -[SKUITracklistViewElement header]
  -[SKUITracklistViewElement sections]
  -[SKUITracklistViewElement tracks]
  -[SKUITracklistViewElement applyUpdatesWithElement:]
  -[SKUITracklistViewElement pageComponentType]
  -[SKUITracklistViewElement enumerateTracksUsingBlock:]


SKUILoadProductPageOperation : NSOperation /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  @? outputBlock
 @property  SSMetricsPageEvent *metricsPageEvent

  // instance methods
  -[SKUILoadProductPageOperation .cxx_destruct]
  -[SKUILoadProductPageOperation main]
  -[SKUILoadProductPageOperation setOutputBlock:]
  -[SKUILoadProductPageOperation metricsPageEvent]
  -[SKUILoadProductPageOperation outputBlock]
  -[SKUILoadProductPageOperation initWithItemIdentifier:clientContext:]
  -[SKUILoadProductPageOperation initWithProductPageURLRequest:clientContext:]
  -[SKUILoadProductPageOperation _initSKUILoadProductPageOperation]


SKUIItemGridCollectionViewLayout : UICollectionViewFlowLayout /usr/lib/libobjc.A.dylib
 @property  UIColor *evenRowBackgroundColor
 @property  UIColor *oddRowBackgroundColor
 @property  long long numberOfColumns

  // class methods
  +[SKUIItemGridCollectionViewLayout layoutAttributesClass]

  // instance methods
  -[SKUIItemGridCollectionViewLayout init]
  -[SKUIItemGridCollectionViewLayout .cxx_destruct]
  -[SKUIItemGridCollectionViewLayout numberOfColumns]
  -[SKUIItemGridCollectionViewLayout setNumberOfColumns:]
  -[SKUIItemGridCollectionViewLayout layoutAttributesForElementsInRect:]
  -[SKUIItemGridCollectionViewLayout evenRowBackgroundColor]
  -[SKUIItemGridCollectionViewLayout setEvenRowBackgroundColor:]
  -[SKUIItemGridCollectionViewLayout oddRowBackgroundColor]
  -[SKUIItemGridCollectionViewLayout setOddRowBackgroundColor:]


SKUIBrowseItemPageSection : SKUIStorePageSection
 @property  SKUIBrowseItemComponent *pageComponent

  // instance methods
  -[SKUIBrowseItemPageSection .cxx_destruct]
  -[SKUIBrowseItemPageSection initWithPageComponent:]
  -[SKUIBrowseItemPageSection sectionContentInset]
  -[SKUIBrowseItemPageSection willAppearInContext:]
  -[SKUIBrowseItemPageSection pageComponent]
  -[SKUIBrowseItemPageSection cellForIndexPath:]
  -[SKUIBrowseItemPageSection cellSizeForIndexPath:]
  -[SKUIBrowseItemPageSection numberOfCells]
  -[SKUIBrowseItemPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIBrowseItemPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIBrowseItemPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIBrowseItemPageSection collectionViewDidSelectItemAtIndexPath:]
  -[SKUIBrowseItemPageSection _imageForImageViewElement:styleColor:]


SKUIItemRoomTableViewCell : SKUIItemTableViewCell
 @property  SKUIItemBrowseCellLayout *layout

  // instance methods
  -[SKUIItemRoomTableViewCell .cxx_destruct]
  -[SKUIItemRoomTableViewCell layout]
  -[SKUIItemRoomTableViewCell initWithStyle:reuseIdentifier:]
  -[SKUIItemRoomTableViewCell configureForItem:clientContext:rowIndex:]


SKUIZoomingShelfCollectionViewLayoutInvalidationContext : UICollectionViewLayoutInvalidationContext /usr/lib/libobjc.A.dylib
 @property  BOOL invalidateGeometryOnlyOfExistingLayoutAttributes

  // instance methods
  -[SKUIZoomingShelfCollectionViewLayoutInvalidationContext setInvalidateGeometryOnlyOfExistingLayoutAttributes:]
  -[SKUIZoomingShelfCollectionViewLayoutInvalidationContext invalidateGeometryOnlyOfExistingLayoutAttributes]


SKUIDownloadsView : UIView /usr/lib/libobjc.A.dylib
 @property  UIView *contentView
 @property  UIView *overlayView

  // instance methods
  -[SKUIDownloadsView .cxx_destruct]
  -[SKUIDownloadsView contentView]
  -[SKUIDownloadsView setContentView:]
  -[SKUIDownloadsView layoutSubviews]
  -[SKUIDownloadsView setOverlayView:]
  -[SKUIDownloadsView overlayView]


SKUIApplicationController : NSObject /usr/lib/libc++.1.dylib <SKUIModalDocumentDelegate, SKUIModalSourceViewProvider, SKUINavigationControllerDelegate, SKUINavigationDocumentDelegate, SKUITabBarControllerDelegate, SKUIURLResolverDelegate, UINavigationControllerDelegate, UITabBarControllerDelegate, IKAppContextDelegate, IKApplication>
 @property  long long _applicationMode
 @property  BOOL _hidesTabBar
 @property  NSArray *_navigationControllers
 @property  SKUIPreviewDocumentController *_previewOverlayDocumentController
 @property  long long _selectedTabBarIndex
 @property  SKUINavigationDocumentController *_transientNavigationController
 @property  <SKUIApplicationDelegate> *delegate
 @property  SKUIClientContext *clientContext
 @property  BOOL mescalPrimeEnabledForXHRRequests
 @property  SKUIModalDocumentController *modalDocumentController
 @property  SKUIApplicationControllerOptions *options
 @property  UIViewController *rootViewController
 @property  SKUIScrollingTabBarController *scrollingTabBarController
 @property  UITabBarController *tabBarController
 @property  NSArray *tabBarItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIApplicationController configurationPreloader]
  +[SKUIApplicationController _referrerAppForSourceApplication:launchURL:]
  +[SKUIApplicationController finishedWithConfigurationPreloader]
  +[SKUIApplicationController prepareForLaunch]
  +[SKUIApplicationController applicationOptionsWithLaunchOptions:]

  // instance methods
  -[SKUIApplicationController init]
  -[SKUIApplicationController dealloc]
  -[SKUIApplicationController options]
  -[SKUIApplicationController delegate]
  -[SKUIApplicationController setDelegate:]
  -[SKUIApplicationController .cxx_destruct]
  -[SKUIApplicationController localStorage]
  -[SKUIApplicationController _operationQueue]
  -[SKUIApplicationController _failWithError:]
  -[SKUIApplicationController rootViewController]
  -[SKUIApplicationController tabBarController]
  -[SKUIApplicationController tabBarControllerSupportedInterfaceOrientations:]
  -[SKUIApplicationController tabBarController:didEndCustomizingViewControllers:changed:]
  -[SKUIApplicationController tabBarController:shouldSelectViewController:]
  -[SKUIApplicationController tabBarController:didSelectViewController:]
  -[SKUIApplicationController navigationController:willShowViewController:animated:]
  -[SKUIApplicationController navigationController:didShowViewController:animated:]
  -[SKUIApplicationController navigationControllerSupportedInterfaceOrientations:]
  -[SKUIApplicationController applicationWillResignActive:]
  -[SKUIApplicationController applicationDidBecomeActive:]
  -[SKUIApplicationController _applicationDidEnterBackground:]
  -[SKUIApplicationController _applicationWillEnterForeground:]
  -[SKUIApplicationController appIdentifier]
  -[SKUIApplicationController clientContext]
  -[SKUIApplicationController setClientContext:]
  -[SKUIApplicationController vendorIdentifier]
  -[SKUIApplicationController activeDocument]
  -[SKUIApplicationController deviceConfigForContext:]
  -[SKUIApplicationController navigationControllerForContext:]
  -[SKUIApplicationController appIsTrusted]
  -[SKUIApplicationController vendorStorage]
  -[SKUIApplicationController appContext:evaluateAppJavaScriptInContext:]
  -[SKUIApplicationController appJSURL]
  -[SKUIApplicationController appContext:needsReloadWithUrgency:options:]
  -[SKUIApplicationController appContext:didStartWithOptions:]
  -[SKUIApplicationController appContext:didFailWithError:]
  -[SKUIApplicationController appContext:didStopWithOptions:]
  -[SKUIApplicationController appContext:needsReloadWithUrgency:]
  -[SKUIApplicationController shouldIgnoreJSValidation]
  -[SKUIApplicationController appLaunchParams]
  -[SKUIApplicationController mescalPrimeEnabledForXHRRequests]
  -[SKUIApplicationController setMescalPrimeEnabledForXHRRequests:]
  -[SKUIApplicationController presentationViewControllerForAppContext:]
  -[SKUIApplicationController appContext:didExitWithOptions:]
  -[SKUIApplicationController sizeForNavigationDocument:]
  -[SKUIApplicationController appContext:setPreviewOverlayDocument:withOptions:]
  -[SKUIApplicationController appContext:didCompletePurchase:]
  -[SKUIApplicationController appContext:didCompleteSoftwarePurchase:]
  -[SKUIApplicationController getModalSourceViewForElementIdentifier:completionBlock:]
  -[SKUIApplicationController presentationViewControllerForURLResolver:]
  -[SKUIApplicationController URLResolver:shouldPerformDefaultActionForURL:]
  -[SKUIApplicationController URLResolver:showURL:withTabIdentifier:]
  -[SKUIApplicationController URLResolver:didFinishWithResult:]
  -[SKUIApplicationController URLResolver:showTransientViewController:]
  -[SKUIApplicationController navigationDocumentStackDidChange:]
  -[SKUIApplicationController jsNavigationDocumentForNavigationDocumentController:inContext:]
  -[SKUIApplicationController navigationDocumentController:requestsAccessToAppContextUsingBlock:]
  -[SKUIApplicationController tabBarController:willTransitionToSize:withTransitionCoordinator:]
  -[SKUIApplicationController tabBarController:willDisplayViewController:]
  -[SKUIApplicationController tabBarController:shouldFallbackToRootForController:]
  -[SKUIApplicationController scrollingTabBarController]
  -[SKUIApplicationController showErrorViewForLaunchFailure]
  -[SKUIApplicationController _jsLaunchFinishedWithLaunchMetrics:]
  -[SKUIApplicationController _activeNavigationController]
  -[SKUIApplicationController recordMetricsEvent:flushImmediately:]
  -[SKUIApplicationController tabBarController:didReselectViewController:]
  -[SKUIApplicationController showExternalURL:]
  -[SKUIApplicationController initWithClientContextClass:]
  -[SKUIApplicationController initWithClientContextClass:options:]
  -[SKUIApplicationController _pageDidDisplayNotification:]
  -[SKUIApplicationController _storeFrontChangeNotification:]
  -[SKUIApplicationController _assetsDidUpdate:]
  -[SKUIApplicationController _existingTabBarController]
  -[SKUIApplicationController resumeApplicationWithOptions:]
  -[SKUIApplicationController _finishWillResignActiveWithDialogState:]
  -[SKUIApplicationController _removeStatusOverlayFromAllNavigationControllers]
  -[SKUIApplicationController loadApplicationWithOptions:]
  -[SKUIApplicationController _loadApplicationScript]
  -[SKUIApplicationController _reloadTabBarWithClientContext:]
  -[SKUIApplicationController _setClientContextWithDictionary:]
  -[SKUIApplicationController _failReloadWithError:]
  -[SKUIApplicationController _navigationContainerViewController]
  -[SKUIApplicationController _tabBarController]
  -[SKUIApplicationController _dispatchTabBarOnSelect]
  -[SKUIApplicationController _tintTabBarWithViewController:]
  -[SKUIApplicationController _updateOverlayNavigationController:]
  -[SKUIApplicationController _reloadRootViewControllers]
  -[SKUIApplicationController showErrorViewWithTitle:message:buttonTitle:buttonAction:]
  -[SKUIApplicationController showTransientViewController:]
  -[SKUIApplicationController evaluateBlockWhenLoaded:]
  -[SKUIApplicationController _reloadApplication]
  -[SKUIApplicationController _shouldUseLegacyURLHandlingForExternalURL:]
  -[SKUIApplicationController _legacyResolveExternalURL:]
  -[SKUIApplicationController _launchOptionsWithURL:]
  -[SKUIApplicationController hideStatusOverlayForProvider:animated:]
  -[SKUIApplicationController _showStatusOverlayForNavigationController:viewController:animated:]
  -[SKUIApplicationController _transientNavigationDocument]
  -[SKUIApplicationController updateTabBarWithItems:animated:completion:]
  -[SKUIApplicationController _newNavigationControllerWithTabBarItem:]
  -[SKUIApplicationController _fireBlocksAfterLoad]
  -[SKUIApplicationController _dispatchTabBarOnNeedsContentForTabAtIndex:]
  -[SKUIApplicationController _removeObserversForReloadNotifications]
  -[SKUIApplicationController _invalidateApplication]
  -[SKUIApplicationController _JSITunesStoreClass]
  -[SKUIApplicationController _stopScriptContextForReload]
  -[SKUIApplicationController _previewDocumentIsActiveChangeNotification:]
  -[SKUIApplicationController _playPreviewForPreviewTemplate:]
  -[SKUIApplicationController _needsStatusOverlay]
  -[SKUIApplicationController _usesFloatingStatusOverlayForWidth:]
  -[SKUIApplicationController _showFloatingStatusOverlayAnimated:]
  -[SKUIApplicationController _documentControllerForNavigationController:]
  -[SKUIApplicationController _transientNavigationController]
  -[SKUIApplicationController _sendDidDisplayFirstPageIfNecessary]
  -[SKUIApplicationController selectTabWithIdentifier:]
  -[SKUIApplicationController _sendNativeBackButtonMetricEvents]
  -[SKUIApplicationController _ensureStackConsistencyForNavigationController:]
  -[SKUIApplicationController _overlayNavigationControllerForViewController:]
  -[SKUIApplicationController _recordTabBarMetricsEventToSelectViewController:]
  -[SKUIApplicationController _retryAfterFailure]
  -[SKUIApplicationController setUserInterfaceOverrideOnTabBarController:forViewController:]
  -[SKUIApplicationController _statusOverlayProviderForViewController:]
  -[SKUIApplicationController appContextNeedsRestart:]
  -[SKUIApplicationController _resetUserInterfaceAfterStoreFrontChange]
  -[SKUIApplicationController _isStoreFront:equalToStoreFront:]
  -[SKUIApplicationController _isDisplayingAccountViewController]
  -[SKUIApplicationController _resetUserInteraceForAccountViewDisappear:]
  -[SKUIApplicationController _applicationMode]
  -[SKUIApplicationController _reloadAfterNetworkChange:]
  -[SKUIApplicationController suspendApplicationWithOptions:]
  -[SKUIApplicationController modalDocumentController]
  -[SKUIApplicationController _loadApplicationFromUpdatableAssetsCache:]
  -[SKUIApplicationController _startScriptContextWithURL:]
  -[SKUIApplicationController _handleScriptUnavailable]
  -[SKUIApplicationController loadApplication]
  -[SKUIApplicationController _sendClientContextDidChange]
  -[SKUIApplicationController _tabBarControllerClass]
  -[SKUIApplicationController _scrollingTabBarControllerClass]
  -[SKUIApplicationController _setManifestURLOnUpdatableAssetController:completion:]
  -[SKUIApplicationController modalDocumentController:barStyleForStackItem:]
  -[SKUIApplicationController modalDocumentControllerDidFinish:]
  -[SKUIApplicationController jsNavigationDocumentForNavigationController:inContext:]
  -[SKUIApplicationController initWithClientContextClass:tabBarControllerStyle:]
  -[SKUIApplicationController application:didReceiveURL:]
  -[SKUIApplicationController setTabBarItems:]
  -[SKUIApplicationController showErrorViewWithTitle:message:]
  -[SKUIApplicationController showStatusOverlayUsingProvider:animated:]
  -[SKUIApplicationController updateTabBarWithItems:animated:]
  -[SKUIApplicationController appJSURLTrusted]
  -[SKUIApplicationController _navigationControllers]
  -[SKUIApplicationController _resetDocumentControllers]
  -[SKUIApplicationController _selectedTabBarIndex]
  -[SKUIApplicationController _setSelectedTabBarIndex:]
  -[SKUIApplicationController _stopApplication]
  -[SKUIApplicationController _rootDocuments]
  -[SKUIApplicationController _hidesTabBar]
  -[SKUIApplicationController _setHidesTabBar:]
  -[SKUIApplicationController _previewOverlayDocumentController]
  -[SKUIApplicationController tabBarItems]


_SKUIApplicationShutdownHelper : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_SKUIApplicationShutdownHelper dealloc]
  -[_SKUIApplicationShutdownHelper .cxx_destruct]
  -[_SKUIApplicationShutdownHelper stop]
  -[_SKUIApplicationShutdownHelper start]
  -[_SKUIApplicationShutdownHelper initWithApplicationController:]


SKUIWishlistViewController : SKUIViewController <SKUIItemListTableDelegate>
 @property  <SKUIWishlistDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIWishlistViewController wishlistBarButtonItemWithClientContext:]

  // instance methods
  -[SKUIWishlistViewController dealloc]
  -[SKUIWishlistViewController delegate]
  -[SKUIWishlistViewController setDelegate:]
  -[SKUIWishlistViewController .cxx_destruct]
  -[SKUIWishlistViewController loadView]
  -[SKUIWishlistViewController initWithNibName:bundle:]
  -[SKUIWishlistViewController viewWillAppear:]
  -[SKUIWishlistViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUIWishlistViewController viewDidLayoutSubviews]
  -[SKUIWishlistViewController contentScrollView]
  -[SKUIWishlistViewController setClientContext:]
  -[SKUIWishlistViewController _updateDeleteButton]
  -[SKUIWishlistViewController _doneAction:]
  -[SKUIWishlistViewController _deleteAction:]
  -[SKUIWishlistViewController itemList:didRemoveItemAtIndexPath:]
  -[SKUIWishlistViewController itemList:didDeselectItem:atIndexPath:]
  -[SKUIWishlistViewController itemList:didSelectItem:atIndexPath:]
  -[SKUIWishlistViewController _wishlistDidChangeNotification:]
  -[SKUIWishlistViewController _itemListViewController]
  -[SKUIWishlistViewController _reloadChildView]
  -[SKUIWishlistViewController _wishlistState]
  -[SKUIWishlistViewController _syncWishlist]
  -[SKUIWishlistViewController _reloadWishlist]
  -[SKUIWishlistViewController _reloadNavigationBarAnimated:]
  -[SKUIWishlistViewController _deleteItemsAtIndexPaths:]
  -[SKUIWishlistViewController _wishlist]
  -[SKUIWishlistViewController _setEditing:animated:]
  -[SKUIWishlistViewController _finishSignInWithResponse:error:]
  -[SKUIWishlistViewController _signInAction:]
  -[SKUIWishlistViewController _emptyWishlistView]
  -[SKUIWishlistViewController _destroyEmptyWishlistView]
  -[SKUIWishlistViewController _toggleEditAction:]
  -[SKUIWishlistViewController _isEditingEnabled]
  -[SKUIWishlistViewController _finishSyncWithResult:didChange:error:]
  -[SKUIWishlistViewController _reloadForAccountsChanged]


SKUILoadTrendingSearchPageOperation : NSOperation /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  SKUIClientContext *clientContext
 @property  NSURL *pageURL
 @property  @? outputBlock

  // instance methods
  -[SKUILoadTrendingSearchPageOperation .cxx_destruct]
  -[SKUILoadTrendingSearchPageOperation main]
  -[SKUILoadTrendingSearchPageOperation pageURL]
  -[SKUILoadTrendingSearchPageOperation clientContext]
  -[SKUILoadTrendingSearchPageOperation outputBlock]
  -[SKUILoadTrendingSearchPageOperation initWithClientContext:pageURL:outputBlock:]


SKUILoadResourceOperation : NSOperation /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  long long _loadReason
 @property  SKUIResourceRequest *resourceRequest
 @property  SKUIClientContext *clientContext
 @property  @? outputBlock

  // instance methods
  -[SKUILoadResourceOperation init]
  -[SKUILoadResourceOperation .cxx_destruct]
  -[SKUILoadResourceOperation cancel]
  -[SKUILoadResourceOperation main]
  -[SKUILoadResourceOperation _loadReason]
  -[SKUILoadResourceOperation clientContext]
  -[SKUILoadResourceOperation setClientContext:]
  -[SKUILoadResourceOperation setOutputBlock:]
  -[SKUILoadResourceOperation outputBlock]
  -[SKUILoadResourceOperation initWithResourceRequest:]
  -[SKUILoadResourceOperation _setLoadReason:]
  -[SKUILoadResourceOperation resourceRequest]
  -[SKUILoadResourceOperation _initSKUILoadResourceOperation]


SKUIEmptyContentPlaceholderView : UIView /usr/lib/libobjc.A.dylib
 @property  UIImage *placeholderImage
 @property  {UIEdgeInsets=dddd} placeholderImageInsets
 @property  NSString *placeholderMessage
 @property  UILabel *placeholderMessageLabel
 @property  BOOL showsSignInButton
 @property  UIButton *signInButton

  // instance methods
  -[SKUIEmptyContentPlaceholderView .cxx_destruct]
  -[SKUIEmptyContentPlaceholderView setBackgroundColor:]
  -[SKUIEmptyContentPlaceholderView sizeThatFits:]
  -[SKUIEmptyContentPlaceholderView layoutSubviews]
  -[SKUIEmptyContentPlaceholderView setPlaceholderImage:]
  -[SKUIEmptyContentPlaceholderView placeholderImage]
  -[SKUIEmptyContentPlaceholderView signInButton]
  -[SKUIEmptyContentPlaceholderView placeholderMessageLabel]
  -[SKUIEmptyContentPlaceholderView maskPlaceholdersInBackdropView:]
  -[SKUIEmptyContentPlaceholderView placeholderMessage]
  -[SKUIEmptyContentPlaceholderView setPlaceholderImageInsets:]
  -[SKUIEmptyContentPlaceholderView setPlaceholderMessage:]
  -[SKUIEmptyContentPlaceholderView setShowsSignInButton:]
  -[SKUIEmptyContentPlaceholderView showsSignInButton]
  -[SKUIEmptyContentPlaceholderView placeholderImageInsets]


SKUISegmentedTableHeaderView : UIView /usr/lib/libobjc.A.dylib
 @property  BOOL hidesBorderView
 @property  UIView *segmentedControl
 @property  _UIBackdropView *backdropView

  // instance methods
  -[SKUISegmentedTableHeaderView .cxx_destruct]
  -[SKUISegmentedTableHeaderView initWithFrame:]
  -[SKUISegmentedTableHeaderView sizeThatFits:]
  -[SKUISegmentedTableHeaderView layoutSubviews]
  -[SKUISegmentedTableHeaderView backdropView]
  -[SKUISegmentedTableHeaderView segmentedControl]
  -[SKUISegmentedTableHeaderView setSegmentedControl:]
  -[SKUISegmentedTableHeaderView _borderView]
  -[SKUISegmentedTableHeaderView hidesBorderView]
  -[SKUISegmentedTableHeaderView setHidesBorderView:]


SKUIScrollForwardingView : UIView /usr/lib/libobjc.A.dylib
 @property  UIScrollView *scrollView

  // instance methods
  -[SKUIScrollForwardingView .cxx_destruct]
  -[SKUIScrollForwardingView hitTest:withEvent:]
  -[SKUIScrollForwardingView scrollView]
  -[SKUIScrollForwardingView setScrollView:]


SKUISearchFieldController : NSObject /usr/lib/libc++.1.dylib <SKUISearchControllerDelegate, UISearchResultsUpdating, UIPopoverPresentationControllerDelegate, UITableViewDataSource, UITableViewDelegate, UISearchBarDelegate, SKUITrendingSearchPageViewDelegate>
 @property  UIViewController *contentsController
 @property  SKUIClientContext *clientContext
 @property  <SKUISearchFieldDelegate> *delegate
 @property  UISearchBar *searchBar
 @property  NSString *searchBarAccessoryText
 @property  NSString *searchHintsURLString
 @property  BOOL displaysSearchBarInNavigationBar
 @property  BOOL showsResultsForEmptyField
 @property  NSString *trendingSearchURLString
 @property  long long numberOfSearchResults
 @property  BOOL canBecomeActive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUISearchFieldController delegate]
  -[SKUISearchFieldController setDelegate:]
  -[SKUISearchFieldController .cxx_destruct]
  -[SKUISearchFieldController prepareForPopoverPresentation:]
  -[SKUISearchFieldController popoverPresentationControllerDidDismissPopover:]
  -[SKUISearchFieldController searchBar]
  -[SKUISearchFieldController displaysSearchBarInNavigationBar]
  -[SKUISearchFieldController searchBar:textDidChange:]
  -[SKUISearchFieldController searchBarShouldBeginEditing:]
  -[SKUISearchFieldController searchBarShouldClear:]
  -[SKUISearchFieldController searchBarSearchButtonClicked:]
  -[SKUISearchFieldController tableView:numberOfRowsInSection:]
  -[SKUISearchFieldController tableView:cellForRowAtIndexPath:]
  -[SKUISearchFieldController _reloadData]
  -[SKUISearchFieldController tableView:didSelectRowAtIndexPath:]
  -[SKUISearchFieldController setDisplaysSearchBarInNavigationBar:]
  -[SKUISearchFieldController willPresentSearchController:]
  -[SKUISearchFieldController willDismissSearchController:]
  -[SKUISearchFieldController updateSearchResultsForSearchController:]
  -[SKUISearchFieldController presentSearchController:]
  -[SKUISearchFieldController clientContext]
  -[SKUISearchFieldController setClientContext:]
  -[SKUISearchFieldController setSearchTerm:]
  -[SKUISearchFieldController becomeActive]
  -[SKUISearchFieldController searchHintsURLString]
  -[SKUISearchFieldController trendingSearchURLString]
  -[SKUISearchFieldController trendingSearchPageView:didSelectSearch:]
  -[SKUISearchFieldController resignActive:]
  -[SKUISearchFieldController setShowsResultsForEmptyField:]
  -[SKUISearchFieldController canBecomeActive]
  -[SKUISearchFieldController URLForTrendingSearchPageView:]
  -[SKUISearchFieldController setNumberOfSearchResults:]
  -[SKUISearchFieldController initWithContentsController:clientContext:]
  -[SKUISearchFieldController _presentsInPopover:]
  -[SKUISearchFieldController _reloadTrendingVisibility]
  -[SKUISearchFieldController _loadResultsForSearchRequest:]
  -[SKUISearchFieldController _adjustInsetsForResultsTableView:]
  -[SKUISearchFieldController contentsController]
  -[SKUISearchFieldController _setResponse:error:]
  -[SKUISearchFieldController setSearchHintsURLString:]
  -[SKUISearchFieldController searchControllerWillTransitionToSize:withTransitionCoordinator:]
  -[SKUISearchFieldController searchControllerClientContext:]
  -[SKUISearchFieldController initWithContentsController:]
  -[SKUISearchFieldController setSearchBarAccessoryText:]
  -[SKUISearchFieldController showsResultsForEmptyField]
  -[SKUISearchFieldController searchBarAccessoryText]
  -[SKUISearchFieldController setTrendingSearchURLString:]
  -[SKUISearchFieldController numberOfSearchResults]


SKUISearchController : UISearchController /usr/lib/libobjc.A.dylib
 @property  SKUISearchBar *searchBar
 @property  <SKUISearchControllerDelegate> *delegate

  // instance methods
  -[SKUISearchController .cxx_destruct]
  -[SKUISearchController setActive:]
  -[SKUISearchController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUISearchController searchBar]
  -[SKUISearchController _setSuffix:]


SKUISearchBar : UISearchBar /usr/lib/libobjc.A.dylib
 @property  double intrinsicWidth

  // instance methods
  -[SKUISearchBar init]
  -[SKUISearchBar sizeThatFits:]
  -[SKUISearchBar showsCancelButton]
  -[SKUISearchBar setShowsCancelButton:animated:]
  -[SKUISearchBar setShowsCancelButton:]
  -[SKUISearchBar setIntrinsicWidth:]
  -[SKUISearchBar intrinsicWidth]


SKUIRowViewElementPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate>
 @property  SKUIRowComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRowViewElementPageSection dealloc]
  -[SKUIRowViewElementPageSection .cxx_destruct]
  -[SKUIRowViewElementPageSection artworkRequest:didLoadImage:]
  -[SKUIRowViewElementPageSection initWithPageComponent:]
  -[SKUIRowViewElementPageSection backgroundColorForIndexPath:]
  -[SKUIRowViewElementPageSection sectionContentInset]
  -[SKUIRowViewElementPageSection willAppearInContext:]
  -[SKUIRowViewElementPageSection cellForIndexPath:]
  -[SKUIRowViewElementPageSection cellSizeForIndexPath:]
  -[SKUIRowViewElementPageSection entityProvider:didInvalidateWithContext:]
  -[SKUIRowViewElementPageSection numberOfCells]
  -[SKUIRowViewElementPageSection prefetchResourcesWithReason:]
  -[SKUIRowViewElementPageSection updateCellWithIndexPath:itemState:animated:]
  -[SKUIRowViewElementPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIRowViewElementPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIRowViewElementPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIRowViewElementPageSection collectionViewDidSelectItemAtIndexPath:]
  -[SKUIRowViewElementPageSection collectionViewShouldHighlightItemAtIndexPath:]
  -[SKUIRowViewElementPageSection collectionViewShouldSelectItemAtIndexPath:]
  -[SKUIRowViewElementPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIRowViewElementPageSection _cellClassForViewElement:]
  -[SKUIRowViewElementPageSection _firstChildForColumn:]
  -[SKUIRowViewElementPageSection _reuseIdentifierForViewElement:]
  -[SKUIRowViewElementPageSection _contentInsetForIndexPath:]
  -[SKUIRowViewElementPageSection _interiorColumnSpacing]
  -[SKUIRowViewElementPageSection _singleColumnWidth]
  -[SKUIRowViewElementPageSection _enumerateViewElementsUsingBlock:]
  -[SKUIRowViewElementPageSection _requestLayoutForCells]
  -[SKUIRowViewElementPageSection _cellClassForCardViewElement:]
  -[SKUIRowViewElementPageSection _cellClassForLockupViewElement:]
  -[SKUIRowViewElementPageSection _reuseIdentifierForCardViewElement:]
  -[SKUIRowViewElementPageSection _reuseIdentifierForLockupViewElement:]


SKUIContextActionsConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIDialogTemplateViewElement *dialogTemplate
 @property  SKUIContextActionsPresentationSource *presentationSource

  // instance methods
  -[SKUIContextActionsConfiguration .cxx_destruct]
  -[SKUIContextActionsConfiguration setPresentationSource:]
  -[SKUIContextActionsConfiguration presentationSource]
  -[SKUIContextActionsConfiguration contextActions]
  -[SKUIContextActionsConfiguration dialogTemplate]
  -[SKUIContextActionsConfiguration initWithDialogTemplate:]
  -[SKUIContextActionsConfiguration _resourceImageForImageElement:]
  -[SKUIContextActionsConfiguration setDialogTemplate:]


SKUIJSMediaSocialAuthor : NSObject /usr/lib/libc++.1.dylib <SKUIJSMediaSocialAuthor>
 @property  NSString *dsId
 @property  NSString *entityIdentifier
 @property  NSString *entityType
 @property  NSString *name
 @property  NSArray *permissions
 @property  NSDictionary *storePlatformData

  // instance methods
  -[SKUIJSMediaSocialAuthor name]
  -[SKUIJSMediaSocialAuthor .cxx_destruct]
  -[SKUIJSMediaSocialAuthor permissions]
  -[SKUIJSMediaSocialAuthor entityIdentifier]
  -[SKUIJSMediaSocialAuthor entityType]
  -[SKUIJSMediaSocialAuthor initWithSKUIMediaSocialAuthor:]
  -[SKUIJSMediaSocialAuthor storePlatformData]
  -[SKUIJSMediaSocialAuthor dsId]


SKUIToolbarController : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIToolbarViewElement *toolbarViewElement
 @property  <SKUIToolbarControllerDelegate> *delegate
 @property  NSArray *toolbarItems

  // instance methods
  -[SKUIToolbarController dealloc]
  -[SKUIToolbarController delegate]
  -[SKUIToolbarController setDelegate:]
  -[SKUIToolbarController .cxx_destruct]
  -[SKUIToolbarController toolbarItems]
  -[SKUIToolbarController initWithToolbarViewElement:]
  -[SKUIToolbarController detachFromNavigationController:]
  -[SKUIToolbarController toolbarViewElement]
  -[SKUIToolbarController updateToolbarForNavigationController:]
  -[SKUIToolbarController _barButtonItemWithElement:]
  -[SKUIToolbarController _barButtonItemWithButtonElement:]
  -[SKUIToolbarController toolbarButtonsController:shouldDispatchEventForButton:]


SKUIIndexBarLocaleStandardEntryListController : SKUIIndexBarEntryListController
  // instance methods
  -[SKUIIndexBarLocaleStandardEntryListController .cxx_destruct]
  -[SKUIIndexBarLocaleStandardEntryListController entryDescriptorAtIndex:]
  -[SKUIIndexBarLocaleStandardEntryListController numberOfEntryDescriptors]
  -[SKUIIndexBarLocaleStandardEntryListController targetIndexBarEntryIDForEntryDescriptorAtIndex:returningRelativeSectionIndex:]
  -[SKUIIndexBarLocaleStandardEntryListController reloadViewElementData]
  -[SKUIIndexBarLocaleStandardEntryListController initWithSKUIIndexBarEntryListViewElement:]


SKUIRedeemResultsView : UITableView /usr/lib/libobjc.A.dylib <UITableViewDelegate, UITableViewDataSource>
 @property  NSArray *sections
 @property  <SKUIRedeemResultsViewDelegate> *resultsDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRedeemResultsView init]
  -[SKUIRedeemResultsView .cxx_destruct]
  -[SKUIRedeemResultsView layoutSubviews]
  -[SKUIRedeemResultsView sections]
  -[SKUIRedeemResultsView tableView:numberOfRowsInSection:]
  -[SKUIRedeemResultsView tableView:cellForRowAtIndexPath:]
  -[SKUIRedeemResultsView numberOfSectionsInTableView:]
  -[SKUIRedeemResultsView setSections:]
  -[SKUIRedeemResultsView tableView:willDisplayCell:forRowAtIndexPath:]
  -[SKUIRedeemResultsView tableView:heightForRowAtIndexPath:]
  -[SKUIRedeemResultsView tableView:didSelectRowAtIndexPath:]
  -[SKUIRedeemResultsView resultsDelegate]
  -[SKUIRedeemResultsView setResultsDelegate:]


SKUIProductPageTableSeparatorView : UIView /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIProductPageTableSeparatorView .cxx_destruct]
  -[SKUIProductPageTableSeparatorView layoutSubviews]


SKUIEntityProviderInvalidationContext : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL invalidateEverything
 @property  BOOL invalidateDataSourceCounts

  // instance methods
  -[SKUIEntityProviderInvalidationContext invalidateEverything]
  -[SKUIEntityProviderInvalidationContext invalidateDataSourceCounts]
  -[SKUIEntityProviderInvalidationContext setInvalidateEverything:]
  -[SKUIEntityProviderInvalidationContext setInvalidateDataSourceCounts:]


SKUICompletion : NSObject /usr/lib/libc++.1.dylib <SKUICacheCoding>
 @property  NSString *alternateTitle
 @property  NSString *title
 @property  NSString *URLString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *cacheRepresentation

  // instance methods
  -[SKUICompletion .cxx_destruct]
  -[SKUICompletion title]
  -[SKUICompletion URLString]
  -[SKUICompletion alternateTitle]
  -[SKUICompletion initWithCacheRepresentation:]
  -[SKUICompletion cacheRepresentation]
  -[SKUICompletion initWithCompletionDictionary:]


SKUICompletionList : NSObject /usr/lib/libc++.1.dylib <SKUICacheCoding>
 @property  NSArray *completions
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *cacheRepresentation

  // instance methods
  -[SKUICompletionList .cxx_destruct]
  -[SKUICompletionList title]
  -[SKUICompletionList completions]
  -[SKUICompletionList initWithCacheRepresentation:]
  -[SKUICompletionList cacheRepresentation]
  -[SKUICompletionList initWithCompletionListDictionary:]


SKUIStyledImageButton : UIControl /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} bigHitInsets
 @property  SKUIImageView *imageView
 @property  SKUIImageView *additionalImageView
 @property  {UIEdgeInsets=dddd} hitRectInsets
 @property  BOOL useBigHitTarget

  // instance methods
  -[SKUIStyledImageButton .cxx_destruct]
  -[SKUIStyledImageButton setBackgroundColor:]
  -[SKUIStyledImageButton initWithFrame:]
  -[SKUIStyledImageButton sizeThatFits:]
  -[SKUIStyledImageButton layoutSubviews]
  -[SKUIStyledImageButton imageView]
  -[SKUIStyledImageButton setHighlighted:]
  -[SKUIStyledImageButton pointInside:withEvent:]
  -[SKUIStyledImageButton touchesBegan:withEvent:]
  -[SKUIStyledImageButton hitRect]
  -[SKUIStyledImageButton hitRectInsets]
  -[SKUIStyledImageButton setHitRectInsets:]
  -[SKUIStyledImageButton bigHitInsets]
  -[SKUIStyledImageButton setBigHitInsets:]
  -[SKUIStyledImageButton useBigHitTarget]
  -[SKUIStyledImageButton setUseBigHitTarget:]
  -[SKUIStyledImageButton additionalImageView]


SKUICompletionDataConsumer : SSVURLDataConsumer /System/Library/Frameworks/UIKit.framework/UIKit
  // instance methods
  -[SKUICompletionDataConsumer objectForData:response:error:]
  -[SKUICompletionDataConsumer _invalidResponseError]


SKUIContentUnavailableCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIContentUnavailableCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIContentUnavailableCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIContentUnavailableCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIContentUnavailableCollectionViewCell sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIContentUnavailableCollectionViewCell .cxx_destruct]
  -[SKUIContentUnavailableCollectionViewCell setBackgroundColor:]
  -[SKUIContentUnavailableCollectionViewCell initWithFrame:]
  -[SKUIContentUnavailableCollectionViewCell layoutSubviews]
  -[SKUIContentUnavailableCollectionViewCell setContentInset:]
  -[SKUIContentUnavailableCollectionViewCell applyLayoutAttributes:]
  -[SKUIContentUnavailableCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIContentUnavailableCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIContentUnavailableCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIContentUnavailableCollectionViewCell viewForElementIdentifier:]


SKUIJSColor : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIJSColor>
 @property  unsigned long red
 @property  unsigned long green
 @property  unsigned long blue
 @property  double alpha

  // instance methods
  -[SKUIJSColor red]
  -[SKUIJSColor green]
  -[SKUIJSColor blue]
  -[SKUIJSColor alpha]
  -[SKUIJSColor initWithAppContext:color:]


SKUISizingEntityValueProvider : NSObject /usr/lib/libc++.1.dylib <IKEntityValueProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUISizingEntityValueProvider .cxx_destruct]
  -[SKUISizingEntityValueProvider entityUniqueIdentifier]
  -[SKUISizingEntityValueProvider valueForEntityProperty:]
  -[SKUISizingEntityValueProvider valuesForEntityProperties:]
  -[SKUISizingEntityValueProvider imageURLForEntityArtworkProperty:fittingSize:destinationScale:]
  -[SKUISizingEntityValueProvider initForViewElement:]
  -[SKUISizingEntityValueProvider _insertTallestValueForViewElement:]


SKUIPassbookPassDataConsumer : SSVURLDataConsumer /System/Library/Frameworks/UIKit.framework/UIKit
  // instance methods
  -[SKUIPassbookPassDataConsumer objectForData:response:error:]


SKUIGridViewElementPageSectionConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIViewElementLayoutContext *cellLayoutContext
 @property  double columnContentWidth
 @property  double columnWidth
 @property  long long numberOfColumns
 @property  SKUIStorePageSectionContext *pageSectionContext
 @property  BOOL rendersWithPerspective
 @property  BOOL showsEditMode
 @property  <SKUIGridViewElementPageSectionConfigurationDataSource> *dataSource

  // instance methods
  -[SKUIGridViewElementPageSectionConfiguration .cxx_destruct]
  -[SKUIGridViewElementPageSectionConfiguration dataSource]
  -[SKUIGridViewElementPageSectionConfiguration setDataSource:]
  -[SKUIGridViewElementPageSectionConfiguration numberOfColumns]
  -[SKUIGridViewElementPageSectionConfiguration setNumberOfColumns:]
  -[SKUIGridViewElementPageSectionConfiguration columnWidth]
  -[SKUIGridViewElementPageSectionConfiguration collectionViewWillApplyLayoutAttributes:]
  -[SKUIGridViewElementPageSectionConfiguration registerReusableClassesForCollectionView:]
  -[SKUIGridViewElementPageSectionConfiguration setCellLayoutContext:]
  -[SKUIGridViewElementPageSectionConfiguration setPageSectionContext:]
  -[SKUIGridViewElementPageSectionConfiguration rendersWithPerspective]
  -[SKUIGridViewElementPageSectionConfiguration setRendersWithPerspective:]
  -[SKUIGridViewElementPageSectionConfiguration pageSectionContext]
  -[SKUIGridViewElementPageSectionConfiguration cellLayoutContext]
  -[SKUIGridViewElementPageSectionConfiguration showsEditMode]
  -[SKUIGridViewElementPageSectionConfiguration backgroundColorForViewElement:]
  -[SKUIGridViewElementPageSectionConfiguration requestCellLayoutForViewElement:]
  -[SKUIGridViewElementPageSectionConfiguration cellForViewElement:indexPath:]
  -[SKUIGridViewElementPageSectionConfiguration cellSizeForViewElement:indexPath:]
  -[SKUIGridViewElementPageSectionConfiguration reloadCellWithIndexPath:forViewElement:reason:]
  -[SKUIGridViewElementPageSectionConfiguration sectionContentInsetAdjustedFromValue:forGridViewElement:]
  -[SKUIGridViewElementPageSectionConfiguration configureCell:forViewElement:indexPath:]
  -[SKUIGridViewElementPageSectionConfiguration updateLayoutPropertiesForGridViewElement:]
  -[SKUIGridViewElementPageSectionConfiguration updateStylePropertiesForGridViewElement:gridItemViewElements:numberOfGridItems:]
  -[SKUIGridViewElementPageSectionConfiguration _columnContentWidthPaddingForWidth:]
  -[SKUIGridViewElementPageSectionConfiguration _cardCellClassForCard:]
  -[SKUIGridViewElementPageSectionConfiguration lockupCellClassWithLockup:]
  -[SKUIGridViewElementPageSectionConfiguration _lockupCellReuseIdentifierWithLockup:]
  -[SKUIGridViewElementPageSectionConfiguration _cellInsetsForViewElement:indexPath:]
  -[SKUIGridViewElementPageSectionConfiguration _cellHeightForViewElement:width:]
  -[SKUIGridViewElementPageSectionConfiguration _cellContentWidth]
  -[SKUIGridViewElementPageSectionConfiguration cellClassForViewElement:]
  -[SKUIGridViewElementPageSectionConfiguration _enumerateViewElementsForRowOfIndexPath:usingBlock:]
  -[SKUIGridViewElementPageSectionConfiguration positionForIndexPath:]
  -[SKUIGridViewElementPageSectionConfiguration _cellPaddingLeftEdgeHorizontal]
  -[SKUIGridViewElementPageSectionConfiguration _cellPaddingRightEdgeHorizontal]
  -[SKUIGridViewElementPageSectionConfiguration _normalizedContentInsetForViewElement:indexPath:]
  -[SKUIGridViewElementPageSectionConfiguration _cardArtworkBoundingSizeForIndexPath:]
  -[SKUIGridViewElementPageSectionConfiguration _lockupTypeForLockup:]
  -[SKUIGridViewElementPageSectionConfiguration viewElementIsStandardCard:]
  -[SKUIGridViewElementPageSectionConfiguration _numberOfColumnsForWidth:style:]
  -[SKUIGridViewElementPageSectionConfiguration _isContainedWithinExploreTemplateWithGridViewElement:]
  -[SKUIGridViewElementPageSectionConfiguration columnContentWidth]
  -[SKUIGridViewElementPageSectionConfiguration _cellPaddingInteriorHorizontal]
  -[SKUIGridViewElementPageSectionConfiguration _reloadCellPaddingIfNeeded]
  -[SKUIGridViewElementPageSectionConfiguration _useOrdinalPadding]


SKUINavigationBarViewElement : SKUIViewElement
 @property  BOOL hidesShadow
 @property  BOOL hidesBackButton
 @property  BOOL isTransparent
 @property  NSArray *mainViewElements
 @property  NSArray *navigationPalettes
 @property  UIColor *tintColor

  // instance methods
  -[SKUINavigationBarViewElement tintColor]
  -[SKUINavigationBarViewElement hidesShadow]
  -[SKUINavigationBarViewElement hidesBackButton]
  -[SKUINavigationBarViewElement isTransparent]
  -[SKUINavigationBarViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUINavigationBarViewElement applyUpdatesWithElement:]
  -[SKUINavigationBarViewElement navigationPalettes]
  -[SKUINavigationBarViewElement mainViewElements]


SKUIFamilyCircleController : NSObject /usr/lib/libc++.1.dylib
 @property  NSNumber *lastAccountID
 @property  long long reloadPromptStyle
 @property  SKUIClientContext *clientContext
 @property  BOOL hasLoaded
 @property  SSFamilyCircle *familyCircle
 @property  FAFamilyCircle *iCloudFamily

  // class methods
  +[SKUIFamilyCircleController sharedController]

  // instance methods
  -[SKUIFamilyCircleController init]
  -[SKUIFamilyCircleController dealloc]
  -[SKUIFamilyCircleController .cxx_destruct]
  -[SKUIFamilyCircleController _accountStoreDidChange:]
  -[SKUIFamilyCircleController reloadData]
  -[SKUIFamilyCircleController familyCircle]
  -[SKUIFamilyCircleController clientContext]
  -[SKUIFamilyCircleController setClientContext:]
  -[SKUIFamilyCircleController profilePictureForFamilyMember:]
  -[SKUIFamilyCircleController reloadPromptStyle]
  -[SKUIFamilyCircleController _reloadDataWithPromptStyle:]
  -[SKUIFamilyCircleController lastAccountID]
  -[SKUIFamilyCircleController setLastAccountID:]
  -[SKUIFamilyCircleController setReloadPromptStyle:]
  -[SKUIFamilyCircleController _setITunesFamily:error:iCloudFamily:error:]
  -[SKUIFamilyCircleController _setProfilePicture:forMember:]
  -[SKUIFamilyCircleController hasLoaded]
  -[SKUIFamilyCircleController iCloudFamily]


SKUILegacyNativeViewController : SKUIViewController <SKUICategoryControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUILegacyNativeViewController dealloc]
  -[SKUILegacyNativeViewController .cxx_destruct]
  -[SKUILegacyNativeViewController loadView]
  -[SKUILegacyNativeViewController viewWillAppear:]
  -[SKUILegacyNativeViewController reloadData]
  -[SKUILegacyNativeViewController willAnimateRotationToInterfaceOrientation:duration:]
  -[SKUILegacyNativeViewController _storePageViewController]
  -[SKUILegacyNativeViewController initWithData:fromOperation:]
  -[SKUILegacyNativeViewController activeMetricsController]
  -[SKUILegacyNativeViewController _reloadNavigationItem]
  -[SKUILegacyNativeViewController _finishLoadWithResult:error:]
  -[SKUILegacyNativeViewController _categoryController]
  -[SKUILegacyNativeViewController categoryController:didSelectCategory:]


SKUITextInputViewElement : SKUIInputViewElement
 @property  SKUIAnimatorDOMFeature *animationInterface
 @property  long long keyboardType
 @property  long long maximumLength
 @property  NSString *placeholderText
 @property  BOOL secure

  // class methods
  +[SKUITextInputViewElement supportedFeatures]
  +[SKUITextInputViewElement isTextInputType:]

  // instance methods
  -[SKUITextInputViewElement .cxx_destruct]
  -[SKUITextInputViewElement keyboardType]
  -[SKUITextInputViewElement isSecure]
  -[SKUITextInputViewElement elementType]
  -[SKUITextInputViewElement placeholderText]
  -[SKUITextInputViewElement maximumLength]
  -[SKUITextInputViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUITextInputViewElement applyUpdatesWithElement:]
  -[SKUITextInputViewElement animationInterface]


SKUITrendingSearchProvider : NSObject /usr/lib/libc++.1.dylib
 @property  NSOperationQueue *callbackQueue
 @property  NSOperationQueue *operationQueue
 @property  SKUITrendingSearchPage *cachedSearchPage
 @property  NSMutableArray *pendingCompletionBlocks
 @property  NSOperation *runningRequestOperation
 @property  SKUIClientContext *clientContext

  // instance methods
  -[SKUITrendingSearchProvider dealloc]
  -[SKUITrendingSearchProvider clearCache]
  -[SKUITrendingSearchProvider .cxx_destruct]
  -[SKUITrendingSearchProvider operationQueue]
  -[SKUITrendingSearchProvider callbackQueue]
  -[SKUITrendingSearchProvider clientContext]
  -[SKUITrendingSearchProvider initWithClientContext:]
  -[SKUITrendingSearchProvider trendingSearchPageWithURL:completionBlock:]
  -[SKUITrendingSearchProvider setCachedSearchPage:]
  -[SKUITrendingSearchProvider pendingCompletionBlocks]
  -[SKUITrendingSearchProvider setRunningRequestOperation:]
  -[SKUITrendingSearchProvider requestOperationWithPageURL:completionBlock:]
  -[SKUITrendingSearchProvider cachedSearchPage]
  -[SKUITrendingSearchProvider runningRequestOperation]
  -[SKUITrendingSearchProvider requestTrendingSearchPageWithURL:]


SKUIMediaSocialUpdateProfileOperation : SSVComplexOperation /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSString *entityType
 @property  NSNumber *identifier
 @property  @? outputBlock

  // instance methods
  -[SKUIMediaSocialUpdateProfileOperation .cxx_destruct]
  -[SKUIMediaSocialUpdateProfileOperation identifier]
  -[SKUIMediaSocialUpdateProfileOperation main]
  -[SKUIMediaSocialUpdateProfileOperation setIdentifier:]
  -[SKUIMediaSocialUpdateProfileOperation entityType]
  -[SKUIMediaSocialUpdateProfileOperation setEntityType:]
  -[SKUIMediaSocialUpdateProfileOperation setOutputBlock:]
  -[SKUIMediaSocialUpdateProfileOperation outputBlock]
  -[SKUIMediaSocialUpdateProfileOperation initWithClientContext:]
  -[SKUIMediaSocialUpdateProfileOperation setValue:forProfileField:]
  -[SKUIMediaSocialUpdateProfileOperation _imageDictionaryFromPhotoUpload:]
  -[SKUIMediaSocialUpdateProfileOperation _requestWithError:]
  -[SKUIMediaSocialUpdateProfileOperation _requestBodyWithError:]


SKUIStarRatingQueue : NSObject /usr/lib/libc++.1.dylib
 @property  UIWindow *window

  // instance methods
  -[SKUIStarRatingQueue init]
  -[SKUIStarRatingQueue .cxx_destruct]
  -[SKUIStarRatingQueue window]
  -[SKUIStarRatingQueue setWindow:]
  -[SKUIStarRatingQueue initWithClientContext:reviewConfiguration:]
  -[SKUIStarRatingQueue setRating:forItemID:completionBlock:]
  -[SKUIStarRatingQueue _setRating:forItemID:account:completionBlock:]


SKUISignInTemplateViewElement : SKUIViewElement

SKUICarouselItem : NSObject /usr/lib/libc++.1.dylib
 @property  <SKUIArtworkProviding> *artworkProvider
 @property  NSString *accessibilityLabel
 @property  long long carouselItemIdentifier
 @property  SKUILink *link

  // instance methods
  -[SKUICarouselItem .cxx_destruct]
  -[SKUICarouselItem accessibilityLabel]
  -[SKUICarouselItem link]
  -[SKUICarouselItem artworkForSize:]
  -[SKUICarouselItem artworkProvider]
  -[SKUICarouselItem _setLinkItem:]
  -[SKUICarouselItem initWithComponentContext:]
  -[SKUICarouselItem carouselItemIdentifier]
  -[SKUICarouselItem setArtworkProvider:]


SKUIURL : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSURL *underlyingURL
 @property  NSString *actionString
 @property  NSDictionary *queryStringDictionary
 @property  NSString *redeemCode
 @property  NSString *searchTerm
 @property  NSString *URLBagKey
 @property  NSString *referrerApplicationName
 @property  NSString *referrerURLString

  // instance methods
  -[SKUIURL isEqual:]
  -[SKUIURL copyWithZone:]
  -[SKUIURL initWithURL:]
  -[SKUIURL .cxx_destruct]
  -[SKUIURL _queryDictionary]
  -[SKUIURL newURLRequest]
  -[SKUIURL searchTerm]
  -[SKUIURL referrerApplicationName]
  -[SKUIURL referrerURLString]
  -[SKUIURL setReferrerApplicationName:]
  -[SKUIURL setReferrerURLString:]
  -[SKUIURL URLBagKey]
  -[SKUIURL valueForQueryParameter:]
  -[SKUIURL actionString]
  -[SKUIURL underlyingURL]
  -[SKUIURL newURLRequestWithBaseURL:]
  -[SKUIURL redeemCode]
  -[SKUIURL initWithURLBagKey:]
  -[SKUIURL _decodedQueryParameter:]
  -[SKUIURL _searchGroupForSearchKind:]
  -[SKUIURL _searchURLBagKey]
  -[SKUIURL _appStoreSearchURLBagKey]
  -[SKUIURL initWithURL:sourceApplication:annotation:]
  -[SKUIURL queryStringDictionary]


SKUIGridPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIItemStateCenterObserver, SKUIEmbeddedMediaViewDelegate, SKUIMissingItemDelegate, SKUIProductPageOverlayDelegate>
 @property  SKUIGridComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIGridPageSection dealloc]
  -[SKUIGridPageSection .cxx_destruct]
  -[SKUIGridPageSection itemStateCenter:itemStatesChanged:]
  -[SKUIGridPageSection itemStateCenterRestrictionsChanged:]
  -[SKUIGridPageSection artworkRequest:didLoadImage:]
  -[SKUIGridPageSection initWithPageComponent:]
  -[SKUIGridPageSection collectionViewWillApplyLayoutAttributes:]
  -[SKUIGridPageSection willAppearInContext:]
  -[SKUIGridPageSection willHideInContext:]
  -[SKUIGridPageSection cellForIndexPath:]
  -[SKUIGridPageSection cellSizeForIndexPath:]
  -[SKUIGridPageSection numberOfCells]
  -[SKUIGridPageSection prefetchResourcesWithReason:]
  -[SKUIGridPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIGridPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIGridPageSection collectionViewDidSelectItemAtIndexPath:]
  -[SKUIGridPageSection collectionViewDidConfirmItemOfferAtIndexPath:]
  -[SKUIGridPageSection collectionViewDidTapVideoAtIndexPath:]
  -[SKUIGridPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIGridPageSection productPageOverlay:flipSourceViewToDismissItem:]
  -[SKUIGridPageSection productPageOverlay:flipSourceViewToPresentItem:]
  -[SKUIGridPageSection productPageOverlayDidDismiss:]
  -[SKUIGridPageSection clickEventWithItem:elementName:index:]
  -[SKUIGridPageSection itemOfferClickEventWithItem:elementName:index:]
  -[SKUIGridPageSection _loadMissingItemsFromIndex:withReason:]
  -[SKUIGridPageSection _missingItemLoader]
  -[SKUIGridPageSection missingItemLoader:didLoadItems:invalidItemIdentifiers:]
  -[SKUIGridPageSection mediaView:playbackStateDidChange:]
  -[SKUIGridPageSection _popSourceViewForOverlayController:]
  -[SKUIGridPageSection _editorialCellWithEditorials:indexPath:]
  -[SKUIGridPageSection _editorialLockupCellWithLockups:indexPath:]
  -[SKUIGridPageSection _itemCellWithLockups:indexPath:]
  -[SKUIGridPageSection _mediaCellWithMedia:indexPath:]
  -[SKUIGridPageSection _heightForEditorialAtIndexPath:]
  -[SKUIGridPageSection _heightForEditorialLockupAtIndexPath:]
  -[SKUIGridPageSection _heightForLockupAtIndexPath:gridType:]
  -[SKUIGridPageSection _heightForMediaAtIndexPath:]
  -[SKUIGridPageSection _contentInsetForVideoLockupIndex:]
  -[SKUIGridPageSection _setPositionForClickEvent:withElementIndex:]
  -[SKUIGridPageSection _itemForIndex:]
  -[SKUIGridPageSection _selectItem:withIndex:]
  -[SKUIGridPageSection _enumerateVisibleIndexPathsWithBlock:]
  -[SKUIGridPageSection _loadImageForItem:lockupSize:loader:reason:]
  -[SKUIGridPageSection _loadImageForVideo:thumbnailSize:loader:reason:]
  -[SKUIGridPageSection _enumerateItemsFromStartIndex:withBlock:]
  -[SKUIGridPageSection _editorialLayoutForLockup:]
  -[SKUIGridPageSection _editorialLayoutForEditorial:]
  -[SKUIGridPageSection _numberOfLandscapeColumnsWithGridType:]
  -[SKUIGridPageSection _numberOfPortraitColumnsWithGridType:]
  -[SKUIGridPageSection _updateVisibileEditorialWithEditorialOrientation:]
  -[SKUIGridPageSection _enumerateVisibleItemsWithBlock:]
  -[SKUIGridPageSection _reloadEditorialLockupCell:withLockup:index:]
  -[SKUIGridPageSection _reloadItemCell:withLockup:index:]
  -[SKUIGridPageSection _artworkContextForLockupSize:]
  -[SKUIGridPageSection _heightForEditorialLockup:]
  -[SKUIGridPageSection _mediaWidthForMediaIndex:gridWidth:]
  -[SKUIGridPageSection _heightForMedia:width:]
  -[SKUIGridPageSection _contentInsetForMediaIndex:]
  -[SKUIGridPageSection _newSizeToFitArtworkRequestWithArtwork:mediaIndex:]
  -[SKUIGridPageSection _cellImageForItem:lockupSize:]
  -[SKUIGridPageSection _videoThumbnailImageForVideo:thumbnailSize:]
  -[SKUIGridPageSection _showProductPageWithItem:index:animated:]


SKUIAccountButtonsComponent : SKUIPageComponent
 @property  SKUIAccountButtonsViewElement *viewElement
 @property  SKUILink *ECommerceLink
 @property  BOOL hidesTermsAndConditions

  // instance methods
  -[SKUIAccountButtonsComponent .cxx_destruct]
  -[SKUIAccountButtonsComponent componentType]
  -[SKUIAccountButtonsComponent initWithCustomPageContext:]
  -[SKUIAccountButtonsComponent initWithViewElement:]
  -[SKUIAccountButtonsComponent initWithFeaturedContentContext:kind:]
  -[SKUIAccountButtonsComponent setECommerceLink:]
  -[SKUIAccountButtonsComponent ECommerceLink]
  -[SKUIAccountButtonsComponent hidesTermsAndConditions]
  -[SKUIAccountButtonsComponent setHidesTermsAndConditions:]


SKUIAccountButtonsSection : SKUIStorePageSection <SKUIAccountButtonsDelegate>
 @property  SKUIAccountButtonsComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIAccountButtonsSection dealloc]
  -[SKUIAccountButtonsSection .cxx_destruct]
  -[SKUIAccountButtonsSection initWithPageComponent:]
  -[SKUIAccountButtonsSection backgroundColorForIndexPath:]
  -[SKUIAccountButtonsSection willAppearInContext:]
  -[SKUIAccountButtonsSection cellForIndexPath:]
  -[SKUIAccountButtonsSection cellSizeForIndexPath:]
  -[SKUIAccountButtonsSection numberOfCells]
  -[SKUIAccountButtonsSection addImpressionsForIndexPath:toSession:]
  -[SKUIAccountButtonsSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIAccountButtonsSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIAccountButtonsSection accountButtonsViewControllerDidTapECommerceLink:]
  -[SKUIAccountButtonsSection accountButtonsViewControllerDidSignIn:]
  -[SKUIAccountButtonsSection accountButtonsViewControllerDidSignOut:]
  -[SKUIAccountButtonsSection _accountButtonsViewController]


SKUIStarBarView : UIView /usr/lib/libobjc.A.dylib
 @property  UIColor *emptyColor
 @property  UIColor *filledColor
 @property  long long numberOfStars
 @property  double value

  // instance methods
  -[SKUIStarBarView .cxx_destruct]
  -[SKUIStarBarView value]
  -[SKUIStarBarView setValue:]
  -[SKUIStarBarView initWithFrame:]
  -[SKUIStarBarView sizeThatFits:]
  -[SKUIStarBarView drawRect:]
  -[SKUIStarBarView setEmptyColor:]
  -[SKUIStarBarView setFilledColor:]
  -[SKUIStarBarView setColoringUsingStyle:]
  -[SKUIStarBarView setNumberOfStars:]
  -[SKUIStarBarView emptyColor]
  -[SKUIStarBarView numberOfStars]
  -[SKUIStarBarView filledColor]


SKUIIPhoneSlideshowViewController : UIViewController /usr/lib/libobjc.A.dylib <UICollectionViewDataSource, UICollectionViewDelegate>
 @property  SKUIClientContext *clientContext
 @property  <SKUISlideshowViewControllerDataSource> *dataSource
 @property  <SKUISlideshowViewControllerDelegate> *delegate
 @property  long long currentIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIIPhoneSlideshowViewController dealloc]
  -[SKUIIPhoneSlideshowViewController delegate]
  -[SKUIIPhoneSlideshowViewController setDelegate:]
  -[SKUIIPhoneSlideshowViewController .cxx_destruct]
  -[SKUIIPhoneSlideshowViewController dataSource]
  -[SKUIIPhoneSlideshowViewController setDataSource:]
  -[SKUIIPhoneSlideshowViewController loadView]
  -[SKUIIPhoneSlideshowViewController initWithNibName:bundle:]
  -[SKUIIPhoneSlideshowViewController scrollViewDidScroll:]
  -[SKUIIPhoneSlideshowViewController reloadData]
  -[SKUIIPhoneSlideshowViewController collectionView:numberOfItemsInSection:]
  -[SKUIIPhoneSlideshowViewController collectionView:cellForItemAtIndexPath:]
  -[SKUIIPhoneSlideshowViewController supportedInterfaceOrientations]
  -[SKUIIPhoneSlideshowViewController viewDidLayoutSubviews]
  -[SKUIIPhoneSlideshowViewController currentIndex]
  -[SKUIIPhoneSlideshowViewController clientContext]
  -[SKUIIPhoneSlideshowViewController setClientContext:]
  -[SKUIIPhoneSlideshowViewController setCurrentIndex:]
  -[SKUIIPhoneSlideshowViewController _doneAction:]
  -[SKUIIPhoneSlideshowViewController _reloadPageControl]
  -[SKUIIPhoneSlideshowViewController _reloadSize]
  -[SKUIIPhoneSlideshowViewController _setImage:atIndex:]
  -[SKUIIPhoneSlideshowViewController _imageAtIndex:]
  -[SKUIIPhoneSlideshowViewController _placeholderImageAtIndex:]


SKUISettingsFieldViewElement : SKUIViewElement
  // instance methods
  -[SKUISettingsFieldViewElement textInputViewElement]


SKUIItemResourceRequest : SKUIResourceRequest <NSCopying>
 @property  <SKUIItemRequestDelegate> *delegate
 @property  NSString *imageProfile
 @property  NSString *keyProfile
 @property  NSArray *itemIdentifiers

  // instance methods
  -[SKUIItemResourceRequest copyWithZone:]
  -[SKUIItemResourceRequest delegate]
  -[SKUIItemResourceRequest setDelegate:]
  -[SKUIItemResourceRequest .cxx_destruct]
  -[SKUIItemResourceRequest itemIdentifiers]
  -[SKUIItemResourceRequest setItemIdentifiers:]
  -[SKUIItemResourceRequest setKeyProfile:]
  -[SKUIItemResourceRequest imageProfile]
  -[SKUIItemResourceRequest keyProfile]
  -[SKUIItemResourceRequest setImageProfile:]
  -[SKUIItemResourceRequest finishWithResource:]
  -[SKUIItemResourceRequest newLoadOperation]


SKUIFieldSettingDescription : SKUISettingDescription <SKUIControllableSettingDescription>
 @property  long long fieldType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SKUISettingsGroupController *controller

  // class methods
  +[SKUIFieldSettingDescription _viewClassForSettingDescription:]
  +[SKUIFieldSettingDescription _fieldTypeFromElement:]
  +[SKUIFieldSettingDescription _inputViewElementFromElement:]

  // instance methods
  -[SKUIFieldSettingDescription .cxx_destruct]
  -[SKUIFieldSettingDescription setController:]
  -[SKUIFieldSettingDescription controller]
  -[SKUIFieldSettingDescription allowsSelection]
  -[SKUIFieldSettingDescription fieldType]
  -[SKUIFieldSettingDescription initWithViewElement:parent:]
  -[SKUIFieldSettingDescription handleSelectionOnCompletion:]
  -[SKUIFieldSettingDescription setFieldValue:forKey:]
  -[SKUIFieldSettingDescription fieldValueForKey:]
  -[SKUIFieldSettingDescription _dispatchEventOfType:extraInfo:]


SKUISettingsProfileViewElement : SKUIViewElement

SKUIIPhoneSlideshowCell : UICollectionViewCell /usr/lib/libobjc.A.dylib
 @property  UIImage *image
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} imageFrame
 @property  BOOL video
 @property  {CGSize=dd} imageSize

  // instance methods
  -[SKUIIPhoneSlideshowCell .cxx_destruct]
  -[SKUIIPhoneSlideshowCell prepareForReuse]
  -[SKUIIPhoneSlideshowCell image]
  -[SKUIIPhoneSlideshowCell setImage:]
  -[SKUIIPhoneSlideshowCell initWithFrame:]
  -[SKUIIPhoneSlideshowCell layoutSubviews]
  -[SKUIIPhoneSlideshowCell setHighlighted:]
  -[SKUIIPhoneSlideshowCell imageSize]
  -[SKUIIPhoneSlideshowCell isVideo]
  -[SKUIIPhoneSlideshowCell setImageSize:]
  -[SKUIIPhoneSlideshowCell setVideo:]
  -[SKUIIPhoneSlideshowCell imageFrame]


SKUIChartColumnHeaderView : UIControl /usr/lib/libobjc.A.dylib
 @property  double edgePadding
 @property  long long selectedTitleIndex
 @property  NSArray *titles

  // instance methods
  -[SKUIChartColumnHeaderView dealloc]
  -[SKUIChartColumnHeaderView .cxx_destruct]
  -[SKUIChartColumnHeaderView setBackgroundColor:]
  -[SKUIChartColumnHeaderView layoutSubviews]
  -[SKUIChartColumnHeaderView sizeToFit]
  -[SKUIChartColumnHeaderView edgePadding]
  -[SKUIChartColumnHeaderView setTitles:]
  -[SKUIChartColumnHeaderView titles]
  -[SKUIChartColumnHeaderView _buttonAction:]
  -[SKUIChartColumnHeaderView _reloadSelectedButton]
  -[SKUIChartColumnHeaderView setSelectedTitleIndex:]
  -[SKUIChartColumnHeaderView selectedTitleIndex]


SKUIPlaceholderViewElement : SKUIViewElement

SKUIVerticalInfoListPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIVerticalInfoListPageSection .cxx_destruct]
  -[SKUIVerticalInfoListPageSection artworkRequest:didLoadImage:]
  -[SKUIVerticalInfoListPageSection initWithPageComponent:]
  -[SKUIVerticalInfoListPageSection backgroundColorForIndexPath:]
  -[SKUIVerticalInfoListPageSection sectionContentInset]
  -[SKUIVerticalInfoListPageSection willAppearInContext:]
  -[SKUIVerticalInfoListPageSection cellForIndexPath:]
  -[SKUIVerticalInfoListPageSection cellSizeForIndexPath:]
  -[SKUIVerticalInfoListPageSection entityProvider:didInvalidateWithContext:]
  -[SKUIVerticalInfoListPageSection numberOfCells]
  -[SKUIVerticalInfoListPageSection reloadCellWithIndexPath:reason:]
  -[SKUIVerticalInfoListPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIVerticalInfoListPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIVerticalInfoListPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIVerticalInfoListPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIVerticalInfoListPageSection _requestCellLayout]
  -[SKUIVerticalInfoListPageSection _contentInsetForIndexPath:]
  -[SKUIVerticalInfoListPageSection _reloadColumnDataIfNecessary]
  -[SKUIVerticalInfoListPageSection _enumerateVisibleIndexPathsUsingBlock:]
  -[SKUIVerticalInfoListPageSection _numberOfColumnsForWidth:]


SKUIStarHistogramCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIStarHistogramCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIStarHistogramCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIStarHistogramCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIStarHistogramCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUIStarHistogramCollectionViewCell _attributedStringForLabelViewElement:]

  // instance methods
  -[SKUIStarHistogramCollectionViewCell initWithFrame:]
  -[SKUIStarHistogramCollectionViewCell layoutSubviews]
  -[SKUIStarHistogramCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIStarHistogramCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIStarHistogramCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIStarHistogramCollectionViewCell viewForElementIdentifier:]


SKUIMissingItemLoader : NSObject /usr/lib/libc++.1.dylib <SKUIItemRequestDelegate>
 @property  long long batchSize
 @property  NSString *imageProfile
 @property  NSString *keyProfile
 @property  <SKUIMissingItemDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIMissingItemLoader init]
  -[SKUIMissingItemLoader delegate]
  -[SKUIMissingItemLoader setDelegate:]
  -[SKUIMissingItemLoader .cxx_destruct]
  -[SKUIMissingItemLoader batchSize]
  -[SKUIMissingItemLoader setBatchSize:]
  -[SKUIMissingItemLoader setKeyProfile:]
  -[SKUIMissingItemLoader imageProfile]
  -[SKUIMissingItemLoader keyProfile]
  -[SKUIMissingItemLoader setImageProfile:]
  -[SKUIMissingItemLoader loadItemsForPageComponent:startIndex:reason:]
  -[SKUIMissingItemLoader initWithResourceLoader:]
  -[SKUIMissingItemLoader itemRequest:didFinishWithItems:invalidItemIdentifiers:]
  -[SKUIMissingItemLoader loadItemsWithIdentifiers:reason:]
  -[SKUIMissingItemLoader _existingRequestIDForItemID:]
  -[SKUIMissingItemLoader _requestItems:withReason:]


SKUIVideo : NSObject /usr/lib/libc++.1.dylib
 @property  <SKUIArtworkProviding> *artworks
 @property  NSURL *URL

  // instance methods
  -[SKUIVideo .cxx_destruct]
  -[SKUIVideo URL]
  -[SKUIVideo artworks]
  -[SKUIVideo initWithVideoDictionary:]


SKUIStackView : UIView /usr/lib/libobjc.A.dylib
 @property  UIImage *image
 @property  long long stackViewStyle

  // instance methods
  -[SKUIStackView .cxx_destruct]
  -[SKUIStackView image]
  -[SKUIStackView setImage:]
  -[SKUIStackView layoutSubviews]
  -[SKUIStackView didMoveToWindow]
  -[SKUIStackView performCompressionAnimationWithCompletionHandler:]
  -[SKUIStackView _stackDepth]
  -[SKUIStackView _initSKUIStackView]
  -[SKUIStackView _sizeOfItemAtIndex:]
  -[SKUIStackView _relativeOffsetOfItemAtIndex:withCenter:]
  -[SKUIStackView _centerInPerspectiveTargetViewCoordinates]
  -[SKUIStackView _levelInsetSize]
  -[SKUIStackView _normalizedDistanceFromVanishingPointForCenter:perspectiveTargetView:]
  -[SKUIStackView _relativeOffsetForMinimumRelativeOffset:maximumRelativeOffset:normalizedDistanceFromVanishingPoint:]
  -[SKUIStackView initWithStackViewStyle:]
  -[SKUIStackView stackViewStyle]


SKUIApplicationLicensePage : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *licenseAgreementHTML
 @property  NSString *title

  // instance methods
  -[SKUIApplicationLicensePage copyWithZone:]
  -[SKUIApplicationLicensePage .cxx_destruct]
  -[SKUIApplicationLicensePage title]
  -[SKUIApplicationLicensePage setTitle:]
  -[SKUIApplicationLicensePage setLicenseAgreementHTML:]
  -[SKUIApplicationLicensePage licenseAgreementHTML]


SKUIImageDeckView : SKUIViewReuseView <UIGestureRecognizerDelegate, SKUIViewElementView>
 @property  NSArray *imageViews
 @property  {UIEdgeInsets=dddd} contentInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIImageDeckView prefetchResourcesForViewElement:reason:context:]
  +[SKUIImageDeckView preferredSizeForViewElement:context:]
  +[SKUIImageDeckView requestLayoutForViewElement:width:context:]
  +[SKUIImageDeckView sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIImageDeckView init]
  -[SKUIImageDeckView .cxx_destruct]
  -[SKUIImageDeckView sizeThatFits:]
  -[SKUIImageDeckView layoutSubviews]
  -[SKUIImageDeckView setContentInset:]
  -[SKUIImageDeckView contentInset]
  -[SKUIImageDeckView setImageViews:]
  -[SKUIImageDeckView imageViews]
  -[SKUIImageDeckView reloadWithViewElement:width:context:]
  -[SKUIImageDeckView setImage:forArtworkRequest:context:]
  -[SKUIImageDeckView updateWithItemState:context:animated:]
  -[SKUIImageDeckView viewForElementIdentifier:]
  -[SKUIImageDeckView _layoutImages]


SKUIBadgeTextAttachment : NSTextAttachment /usr/lib/libobjc.A.dylib <NSCopying>
 @property  NSObject<OS_dispatch_semaphore> *imageLoadingSemaphore
 @property  {CGSize=dd} badgeSize
 @property  NSURL *imageURL

  // instance methods
  -[SKUIBadgeTextAttachment isEqual:]
  -[SKUIBadgeTextAttachment copyWithZone:]
  -[SKUIBadgeTextAttachment .cxx_destruct]
  -[SKUIBadgeTextAttachment badgeSize]
  -[SKUIBadgeTextAttachment imageURL]
  -[SKUIBadgeTextAttachment initWithViewElement:]
  -[SKUIBadgeTextAttachment _loadImageWithResourceName:fallbackImage:styleColor:]
  -[SKUIBadgeTextAttachment setImageLoadingSemaphore:]
  -[SKUIBadgeTextAttachment _ensureImageIsLoaded]
  -[SKUIBadgeTextAttachment imageLoadingSemaphore]


SKUIPullToRefreshViewElement : SKUIViewElement
  // instance methods
  -[SKUIPullToRefreshViewElement initWithDOMElement:parent:elementFactory:]


SKUIMediaPlayerInterface : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SKUIMediaPlayerInterface sharedInstance]
  +[SKUIMediaPlayerInterface identifierMatches:item:]
  +[SKUIMediaPlayerInterface isRadioItemIdentifier:]

  // instance methods
  -[SKUIMediaPlayerInterface init]
  -[SKUIMediaPlayerInterface dealloc]
  -[SKUIMediaPlayerInterface .cxx_destruct]
  -[SKUIMediaPlayerInterface addObserver:]
  -[SKUIMediaPlayerInterface removeObserver:]
  -[SKUIMediaPlayerInterface playerForItemWithIdentifier:]
  -[SKUIMediaPlayerInterface identifierIsOnDeck:]
  -[SKUIMediaPlayerInterface isItemWithIdentifierActive:]
  -[SKUIMediaPlayerInterface togglePlayStateForItemWithIdentifier:]
  -[SKUIMediaPlayerInterface notifyWillChangeToItemWithItemIdentifer:]
  -[SKUIMediaPlayerInterface _playerItemDidChangeNotification:]
  -[SKUIMediaPlayerInterface _playerItemWillChangeNotification:]
  -[SKUIMediaPlayerInterface _playerItemReady:]
  -[SKUIMediaPlayerInterface _playerRateDidChangeNotification:]
  -[SKUIMediaPlayerInterface _bufferingStateChangedNotification:]
  -[SKUIMediaPlayerInterface _playbackErrorNotification:]
  -[SKUIMediaPlayerInterface _unregisterForNotificationsForCurrentItem:]
  -[SKUIMediaPlayerInterface _destroyPeridicTimeObseverIfNeeded:]
  -[SKUIMediaPlayerInterface _cancelOnDeckItem]
  -[SKUIMediaPlayerInterface _notifiyObserversOfItemChange:]
  -[SKUIMediaPlayerInterface _startOnDeckTimer]
  -[SKUIMediaPlayerInterface _playerForNotification:]
  -[SKUIMediaPlayerInterface _updateBufferingState:player:]
  -[SKUIMediaPlayerInterface _notifyObserversOfItemStateChange]
  -[SKUIMediaPlayerInterface _updateDurationForPlayerItem:withMPAVItem:]
  -[SKUIMediaPlayerInterface _itemFromNotification:]
  -[SKUIMediaPlayerInterface _itemDidChange:incomingItem:]
  -[SKUIMediaPlayerInterface _updateTimeValuesUsingItemTime:player:item:]
  -[SKUIMediaPlayerInterface _setCurrentTimeIfPossible:player:]
  -[SKUIMediaPlayerInterface _registerForNotificationsForCurrentItem:]
  -[SKUIMediaPlayerInterface _currentItemDurationAvailableNotification:]
  -[SKUIMediaPlayerInterface _updateItemForPlayer:currentTime:]
  -[SKUIMediaPlayerInterface _onDeckTimedOut]
  -[SKUIMediaPlayerInterface _createPeriodicTimeObserverIfNeeded:]
  -[SKUIMediaPlayerInterface _notifyFinishedItem:]


SKUIStorePageItemPinningConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  {UIEdgeInsets=dddd} pinningContentInset
 @property  BOOL hasValidPinningContentInset
 @property  long long pinningStyle
 @property  long long pinningGroup
 @property  BOOL hasValidPinningStyle
 @property  BOOL hasValidPinningGroup
 @property  long long pinningTransitionStyle
 @property  BOOL hasValidPinningTransitionStyle

  // instance methods
  -[SKUIStorePageItemPinningConfiguration setPinningTransitionStyle:]
  -[SKUIStorePageItemPinningConfiguration pinningTransitionStyle]
  -[SKUIStorePageItemPinningConfiguration hasValidPinningContentInset]
  -[SKUIStorePageItemPinningConfiguration setPinningContentInset:]
  -[SKUIStorePageItemPinningConfiguration pinningContentInset]
  -[SKUIStorePageItemPinningConfiguration hasValidPinningStyle]
  -[SKUIStorePageItemPinningConfiguration setPinningStyle:]
  -[SKUIStorePageItemPinningConfiguration pinningStyle]
  -[SKUIStorePageItemPinningConfiguration hasValidPinningGroup]
  -[SKUIStorePageItemPinningConfiguration setPinningGroup:]
  -[SKUIStorePageItemPinningConfiguration pinningGroup]
  -[SKUIStorePageItemPinningConfiguration hasValidPinningTransitionStyle]
  -[SKUIStorePageItemPinningConfiguration invalidatePinningContentInset]
  -[SKUIStorePageItemPinningConfiguration invalidatePinningStyle]
  -[SKUIStorePageItemPinningConfiguration invalidatePinningGroup]
  -[SKUIStorePageItemPinningConfiguration invalidatePinningTransitionStyle]


SKUISuggestedHandlesSettingsHeaderFooterDescription : SKUISettingsHeaderFooterDescription
 @property  <SKUISuggestedHandlesSettingsHeaderFooterDescriptionDelegate> *delegate

  // instance methods
  -[SKUISuggestedHandlesSettingsHeaderFooterDescription delegate]
  -[SKUISuggestedHandlesSettingsHeaderFooterDescription setDelegate:]
  -[SKUISuggestedHandlesSettingsHeaderFooterDescription .cxx_destruct]
  -[SKUISuggestedHandlesSettingsHeaderFooterDescription _viewClassForSettingsHeaderFooterDescription:]
  -[SKUISuggestedHandlesSettingsHeaderFooterDescription initWithSuggestedHandles:clientContext:delegate:]
  -[SKUISuggestedHandlesSettingsHeaderFooterDescription helpText]
  -[SKUISuggestedHandlesSettingsHeaderFooterDescription selectedHandleAtIndex:]
  -[SKUISuggestedHandlesSettingsHeaderFooterDescription suggestedHandles]


SKUISettingsTableViewCell : UITableViewCell /usr/lib/libobjc.A.dylib
 @property  SKUISettingDescriptionView *settingDescriptionView

  // instance methods
  -[SKUISettingsTableViewCell .cxx_destruct]
  -[SKUISettingsTableViewCell prepareForReuse]
  -[SKUISettingsTableViewCell setBackgroundColor:]
  -[SKUISettingsTableViewCell layoutSubviews]
  -[SKUISettingsTableViewCell initWithStyle:reuseIdentifier:]
  -[SKUISettingsTableViewCell setImage:forArtworkRequest:context:]
  -[SKUISettingsTableViewCell displaySettingDescriptionView:]
  -[SKUISettingsTableViewCell settingDescriptionView]


SKUIContentUnavailableTableViewCell : SKUITableViewCell
 @property  NSString *title
 @property  NSString *message

  // instance methods
  -[SKUIContentUnavailableTableViewCell .cxx_destruct]
  -[SKUIContentUnavailableTableViewCell title]
  -[SKUIContentUnavailableTableViewCell setTitle:]
  -[SKUIContentUnavailableTableViewCell message]
  -[SKUIContentUnavailableTableViewCell setMessage:]
  -[SKUIContentUnavailableTableViewCell layoutSubviews]
  -[SKUIContentUnavailableTableViewCell initWithStyle:reuseIdentifier:]


SKUIStatusBarAlertCenter : NSObject /usr/lib/libc++.1.dylib <_SKUIStatusBarAlertViewControllerDelegate>
 @property  _SKUIClickThroughWindow *window
 @property  _SKUIStatusBarAlertViewController *rootViewController
 @property  double duration
 @property  BOOL visible
 @property  @? actionBlock
 @property  NSString *message
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIStatusBarAlertCenter sharedCenter]

  // instance methods
  -[SKUIStatusBarAlertCenter init]
  -[SKUIStatusBarAlertCenter .cxx_destruct]
  -[SKUIStatusBarAlertCenter duration]
  -[SKUIStatusBarAlertCenter message]
  -[SKUIStatusBarAlertCenter setDuration:]
  -[SKUIStatusBarAlertCenter setVisible:]
  -[SKUIStatusBarAlertCenter isVisible]
  -[SKUIStatusBarAlertCenter window]
  -[SKUIStatusBarAlertCenter rootViewController]
  -[SKUIStatusBarAlertCenter dismiss]
  -[SKUIStatusBarAlertCenter actionBlock]
  -[SKUIStatusBarAlertCenter setActionBlock:]
  -[SKUIStatusBarAlertCenter showMessage:withStyle:forDuration:actionBlock:]
  -[SKUIStatusBarAlertCenter unscheduleDismiss]
  -[SKUIStatusBarAlertCenter scheduleDismiss]
  -[SKUIStatusBarAlertCenter statusBarAlertViewControllerWasTapped:]


_SKUIClickThroughWindow : UIWindow /usr/lib/libobjc.A.dylib
 @property  UIView *interactionView

  // instance methods
  -[_SKUIClickThroughWindow .cxx_destruct]
  -[_SKUIClickThroughWindow pointInside:withEvent:]
  -[_SKUIClickThroughWindow hitTest:withEvent:]
  -[_SKUIClickThroughWindow interactionView]
  -[_SKUIClickThroughWindow setInteractionView:]


_SKUIStatusBarAlertViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  UIView *statusBarView
 @property  long long style
 @property  BOOL onScreen
 @property  NSString *message
 @property  unsigned long supportedInterfaceOrientations
 @property  <_SKUIStatusBarAlertViewControllerDelegate> *delegate
 @property  unsigned long defaultInterfaceOrientations

  // instance methods
  -[_SKUIStatusBarAlertViewController delegate]
  -[_SKUIStatusBarAlertViewController setDelegate:]
  -[_SKUIStatusBarAlertViewController .cxx_destruct]
  -[_SKUIStatusBarAlertViewController style]
  -[_SKUIStatusBarAlertViewController setStyle:]
  -[_SKUIStatusBarAlertViewController message]
  -[_SKUIStatusBarAlertViewController setMessage:]
  -[_SKUIStatusBarAlertViewController initWithNibName:bundle:]
  -[_SKUIStatusBarAlertViewController viewDidLoad]
  -[_SKUIStatusBarAlertViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[_SKUIStatusBarAlertViewController supportedInterfaceOrientations]
  -[_SKUIStatusBarAlertViewController setSupportedInterfaceOrientations:]
  -[_SKUIStatusBarAlertViewController isOnScreen]
  -[_SKUIStatusBarAlertViewController updateLabelFrame]
  -[_SKUIStatusBarAlertViewController endAllAnimations]
  -[_SKUIStatusBarAlertViewController setOnScreen:]
  -[_SKUIStatusBarAlertViewController defaultInterfaceOrientations]
  -[_SKUIStatusBarAlertViewController statusBarView]
  -[_SKUIStatusBarAlertViewController handleLabelTap:]


SKUIRowViewElement : SKUIViewElement
 @property  NSArray *columns
 @property  NSString *type

  // instance methods
  -[SKUIRowViewElement type]
  -[SKUIRowViewElement .cxx_destruct]
  -[SKUIRowViewElement columns]
  -[SKUIRowViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIRowViewElement pageComponentType]


SKUIMetricsAppLaunchEvent : SSMetricsBaseEvent /System/Library/Frameworks/UIKit.framework/UIKit <SKUIInspectableObject>
 @property  NSString *launchCorrelationKey
 @property  double mainTime
 @property  double clientConfigurationLoadTime
 @property  NSDictionary *templateMetrics
 @property  double bootstrapStartTime
 @property  double bootstrapEndTime
 @property  double jsResourcesStartTime
 @property  double jsResourcesEndTime
 @property  double initialTabRequestStartTime
 @property  double initialTabResponseStartTime
 @property  double initialTabResponseEndTime
 @property  double launchFailureTime
 @property  double launchEndTime
 @property  BOOL requiredBlockingBagLoad
 @property  BOOL usedBootstrapFallback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIMetricsAppLaunchEvent processStartTime]
  +[SKUIMetricsAppLaunchEvent withPendingLaunchEvent:]
  +[SKUIMetricsAppLaunchEvent createPendingLaunchEvent]
  +[SKUIMetricsAppLaunchEvent consumePendingLaunchEvent]
  +[SKUIMetricsAppLaunchEvent resetPendingLaunchEventForTesting]

  // instance methods
  -[SKUIMetricsAppLaunchEvent init]
  -[SKUIMetricsAppLaunchEvent .cxx_destruct]
  -[SKUIMetricsAppLaunchEvent appendPropertiesToBody:]
  -[SKUIMetricsAppLaunchEvent launchCorrelationKey]
  -[SKUIMetricsAppLaunchEvent populateObjectInspector:]
  -[SKUIMetricsAppLaunchEvent setLaunchCorrelationKey:]
  -[SKUIMetricsAppLaunchEvent addTemplateLoadTimingMetric:forURL:]
  -[SKUIMetricsAppLaunchEvent setMainTime:]
  -[SKUIMetricsAppLaunchEvent setClientConfigurationLoadTime:]
  -[SKUIMetricsAppLaunchEvent setRequiredBlockingBagLoad:]
  -[SKUIMetricsAppLaunchEvent setBootstrapEndTime:]
  -[SKUIMetricsAppLaunchEvent setLaunchFailureTime:]
  -[SKUIMetricsAppLaunchEvent setBootstrapStartTime:]
  -[SKUIMetricsAppLaunchEvent setLaunchEndTime:]
  -[SKUIMetricsAppLaunchEvent setJsResourcesStartTime:]
  -[SKUIMetricsAppLaunchEvent setJsResourcesEndTime:]
  -[SKUIMetricsAppLaunchEvent setInitialTabRequestStartTime:]
  -[SKUIMetricsAppLaunchEvent setInitialTabResponseStartTime:]
  -[SKUIMetricsAppLaunchEvent setInitialTabResponseEndTime:]
  -[SKUIMetricsAppLaunchEvent mainTime]
  -[SKUIMetricsAppLaunchEvent clientConfigurationLoadTime]
  -[SKUIMetricsAppLaunchEvent bootstrapStartTime]
  -[SKUIMetricsAppLaunchEvent bootstrapEndTime]
  -[SKUIMetricsAppLaunchEvent jsResourcesStartTime]
  -[SKUIMetricsAppLaunchEvent jsResourcesEndTime]
  -[SKUIMetricsAppLaunchEvent initialTabRequestStartTime]
  -[SKUIMetricsAppLaunchEvent initialTabResponseStartTime]
  -[SKUIMetricsAppLaunchEvent initialTabResponseEndTime]
  -[SKUIMetricsAppLaunchEvent launchFailureTime]
  -[SKUIMetricsAppLaunchEvent launchEndTime]
  -[SKUIMetricsAppLaunchEvent requiredBlockingBagLoad]
  -[SKUIMetricsAppLaunchEvent usedBootstrapFallback]
  -[SKUIMetricsAppLaunchEvent templateMetrics]
  -[SKUIMetricsAppLaunchEvent setUsedBootstrapFallback:]


SKUIChartColumnsView : UIView /usr/lib/libobjc.A.dylib <SKUIFlexibleSegmentedControlDelegate>
 @property  UIVisualEffectView *effectView
 @property  NSArray *chartViewControllers
 @property  {UIEdgeInsets=dddd} contentInset
 @property  long long numberOfVisibleColumns
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIChartColumnsView dealloc]
  -[SKUIChartColumnsView .cxx_destruct]
  -[SKUIChartColumnsView initWithFrame:]
  -[SKUIChartColumnsView layoutSubviews]
  -[SKUIChartColumnsView setContentInset:]
  -[SKUIChartColumnsView effectView]
  -[SKUIChartColumnsView contentInset]
  -[SKUIChartColumnsView segmentedControl:didSelectSegmentIndex:]
  -[SKUIChartColumnsView setChartViewControllers:]
  -[SKUIChartColumnsView setNumberOfVisibleColumns:]
  -[SKUIChartColumnsView beginColumnChangeAnimationToNumberOfVisibleColumns:]
  -[SKUIChartColumnsView endColumnChangeAnimation]
  -[SKUIChartColumnsView _reloadColumnViews]
  -[SKUIChartColumnsView numberOfVisibleColumns]
  -[SKUIChartColumnsView _headerViewAction:]
  -[SKUIChartColumnsView _headerViewWithViewControllers:]
  -[SKUIChartColumnsView chartViewControllers]


SKUIIPadChartsColumnView : UIView /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} contentInset
 @property  NSArray *contentViewControllers
 @property  UIViewController *selectedViewController

  // instance methods
  -[SKUIIPadChartsColumnView .cxx_destruct]
  -[SKUIIPadChartsColumnView layoutSubviews]
  -[SKUIIPadChartsColumnView setContentInset:]
  -[SKUIIPadChartsColumnView contentInset]
  -[SKUIIPadChartsColumnView selectedViewController]
  -[SKUIIPadChartsColumnView setSelectedViewControllerIndex:]
  -[SKUIIPadChartsColumnView setContentViewControllers:]
  -[SKUIIPadChartsColumnView _addSelectedViewController]
  -[SKUIIPadChartsColumnView contentViewControllers]


SKUITrendingSearchPageConsumer : SSVURLDataConsumer /System/Library/Frameworks/UIKit.framework/UIKit
  // instance methods
  -[SKUITrendingSearchPageConsumer objectForData:response:error:]
  -[SKUITrendingSearchPageConsumer _pageWithDictionary:]


SKUILockupItemTableViewCell : SKUIItemTableViewCell
 @property  SKUILockupItemCellLayout *layout

  // instance methods
  -[SKUILockupItemTableViewCell .cxx_destruct]
  -[SKUILockupItemTableViewCell layout]
  -[SKUILockupItemTableViewCell initWithStyle:reuseIdentifier:]
  -[SKUILockupItemTableViewCell configureForItem:clientContext:rowIndex:]


SKUITextHeaderSettingsHeaderFooterDescription : SKUISettingsHeaderFooterDescription
  // instance methods
  -[SKUITextHeaderSettingsHeaderFooterDescription _viewClassForSettingsHeaderFooterDescription:]


SKUIExpandViewElement : SKUIViewElement
 @property  BOOL open
 @property  BOOL previousIsOpen

  // instance methods
  -[SKUIExpandViewElement isOpen]
  -[SKUIExpandViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIExpandViewElement applyUpdatesWithElement:]
  -[SKUIExpandViewElement pageComponentType]
  -[SKUIExpandViewElement previousIsOpen]
  -[SKUIExpandViewElement setPreviousIsOpen:]


SKUISettingsEditTransaction : NSObject /usr/lib/libc++.1.dylib
 @property  <SKUISettingsEditTransactionDelegate> *delegate

  // instance methods
  -[SKUISettingsEditTransaction isValid]
  -[SKUISettingsEditTransaction delegate]
  -[SKUISettingsEditTransaction setDelegate:]
  -[SKUISettingsEditTransaction .cxx_destruct]
  -[SKUISettingsEditTransaction beginTransaction]
  -[SKUISettingsEditTransaction commitTransaction]
  -[SKUISettingsEditTransaction rollbackTransaction]
  -[SKUISettingsEditTransaction isCommiting]
  -[SKUISettingsEditTransaction cancelTransaction]
  -[SKUISettingsEditTransaction initWithSettingDescriptions:]
  -[SKUISettingsEditTransaction _delegateWillBeginTransaction]
  -[SKUISettingsEditTransaction _delegateDidFailTransaction]
  -[SKUISettingsEditTransaction _delegateWillCommitTransaction]
  -[SKUISettingsEditTransaction _settingDescription:completedWithSuccess:]
  -[SKUISettingsEditTransaction _delegateDidCompleteTransaction]
  -[SKUISettingsEditTransaction _finalizeCommit]


SKUIExpandPageSectionContext : NSObject /usr/lib/libc++.1.dylib

SKUILoadArtworkResourceOperation : SKUILoadResourceOperation
 @property  SSVLoadURLOperation *underlyingOperation
 @property  SKUIArtworkRequest *resourceRequest

  // instance methods
  -[SKUILoadArtworkResourceOperation .cxx_destruct]
  -[SKUILoadArtworkResourceOperation cancel]
  -[SKUILoadArtworkResourceOperation main]
  -[SKUILoadArtworkResourceOperation initWithResourceRequest:]
  -[SKUILoadArtworkResourceOperation setUnderlyingOperation:]
  -[SKUILoadArtworkResourceOperation underlyingOperation]


SKUILimitListViewElement : SKUIViewElement
 @property  NSArray *limitViewElements

  // instance methods
  -[SKUILimitListViewElement limitViewElements]


SKUIItemViewElement : SKUIViewElement
 @property  SKUIViewElementText *itemText
 @property  BOOL selected

  // instance methods
  -[SKUIItemViewElement .cxx_destruct]
  -[SKUIItemViewElement isSelected]
  -[SKUIItemViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIItemViewElement applyUpdatesWithElement:]
  -[SKUIItemViewElement itemText]


SKUIProductPageHeaderLabel : UIView /usr/lib/libobjc.A.dylib
 @property  BOOL isPad
 @property  NSString *text
 @property  UIColor *textColor
 @property  NSString *contentRating
 @property  NSArray *secondaryContentRatingImages
 @property  UIColor *ratingColor

  // instance methods
  -[SKUIProductPageHeaderLabel .cxx_destruct]
  -[SKUIProductPageHeaderLabel text]
  -[SKUIProductPageHeaderLabel setText:]
  -[SKUIProductPageHeaderLabel setTextColor:]
  -[SKUIProductPageHeaderLabel sizeThatFits:]
  -[SKUIProductPageHeaderLabel layoutSubviews]
  -[SKUIProductPageHeaderLabel drawRect:]
  -[SKUIProductPageHeaderLabel textColor]
  -[SKUIProductPageHeaderLabel _textAttributes]
  -[SKUIProductPageHeaderLabel isPad]
  -[SKUIProductPageHeaderLabel setContentRating:]
  -[SKUIProductPageHeaderLabel contentRating]
  -[SKUIProductPageHeaderLabel setIsPad:]
  -[SKUIProductPageHeaderLabel setRatingColor:]
  -[SKUIProductPageHeaderLabel setSecondaryContentRatingImages:]
  -[SKUIProductPageHeaderLabel _imageForContentRating:]
  -[SKUIProductPageHeaderLabel _newTextFramesetter]
  -[SKUIProductPageHeaderLabel secondaryImageWidth]
  -[SKUIProductPageHeaderLabel secondaryContentRatingImages]
  -[SKUIProductPageHeaderLabel ratingColor]


SKUIViewControllerContainerView : UIView /usr/lib/libobjc.A.dylib
 @property  UIViewController *viewController

  // instance methods
  -[SKUIViewControllerContainerView .cxx_destruct]
  -[SKUIViewControllerContainerView setBounds:]
  -[SKUIViewControllerContainerView setViewController:]
  -[SKUIViewControllerContainerView setFrame:]
  -[SKUIViewControllerContainerView initWithFrame:]
  -[SKUIViewControllerContainerView layoutSubviews]
  -[SKUIViewControllerContainerView viewController]
  -[SKUIViewControllerContainerView _updateLayoutOfViewControllerView]


SKUIReportAConcernOperation : ISOperation /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI
 @property  SKUIReportAConcernMetadata *metadata
 @property  NSDictionary *responseDictionary

  // instance methods
  -[SKUIReportAConcernOperation run]
  -[SKUIReportAConcernOperation .cxx_destruct]
  -[SKUIReportAConcernOperation setMetadata:]
  -[SKUIReportAConcernOperation metadata]
  -[SKUIReportAConcernOperation responseDictionary]
  -[SKUIReportAConcernOperation initWithMetadata:]
  -[SKUIReportAConcernOperation setResponseDictionary:]
  -[SKUIReportAConcernOperation _httpBody]


SKUIGridViewElement : SKUIViewElement
 @property  BOOL allowsMultipleSelectionDuringEditing
 @property  BOOL showsEditMode
 @property  SKUICollectionDOMFeature *collectionFeature

  // class methods
  +[SKUIGridViewElement supportedFeatures]

  // instance methods
  -[SKUIGridViewElement .cxx_destruct]
  -[SKUIGridViewElement allowsMultipleSelectionDuringEditing]
  -[SKUIGridViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIGridViewElement applyUpdatesWithElement:]
  -[SKUIGridViewElement enumerateChildrenUsingBlock:]
  -[SKUIGridViewElement pageComponentType]
  -[SKUIGridViewElement persistenceKey]
  -[SKUIGridViewElement showsEditMode]
  -[SKUIGridViewElement collectionFeature]
  -[SKUIGridViewElement _countOfInputCheckboxesWithBaseElement:limit:]


SKUIPlayButton : SKUIPlayButtonControl
 @property  SKUIPlayButtonImageCache *imageCache
 @property  long long itemIdentifier
 @property  NSString *playItemIdentifier
 @property  BOOL showOnDemand
 @property  long long style
 @property  NSString *mediaURLString
 @property  BOOL useLargeButton
 @property  BOOL radio

  // class methods
  +[SKUIPlayButton sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIPlayButton setEnabled:]
  -[SKUIPlayButton .cxx_destruct]
  -[SKUIPlayButton itemIdentifier]
  -[SKUIPlayButton setItemIdentifier:]
  -[SKUIPlayButton style]
  -[SKUIPlayButton setStyle:]
  -[SKUIPlayButton images]
  -[SKUIPlayButton refresh]
  -[SKUIPlayButton imageCache]
  -[SKUIPlayButton layoutSubviews]
  -[SKUIPlayButton tintColorDidChange]
  -[SKUIPlayButton defaultBackgroundColor]
  -[SKUIPlayButton setBackgroundType:]
  -[SKUIPlayButton buttonSize]
  -[SKUIPlayButton _updateEnabledState]
  -[SKUIPlayButton outerBorderColor]
  -[SKUIPlayButton buttonCornerRadius]
  -[SKUIPlayButton playImage]
  -[SKUIPlayButton mediaURLString]
  -[SKUIPlayButton setMediaURLString:]
  -[SKUIPlayButton playItemIdentifier]
  -[SKUIPlayButton showOnDemand]
  -[SKUIPlayButton reloadWithItemStatus:animated:]
  -[SKUIPlayButton showOuterBorder]
  -[SKUIPlayButton cancelImage]
  -[SKUIPlayButton playIndicatorDidChange:]
  -[SKUIPlayButton setShowOnDemand:]
  -[SKUIPlayButton setPlayItemIdentifier:]
  -[SKUIPlayButton setRadio:]
  -[SKUIPlayButton isRadio]
  -[SKUIPlayButton setUseLargeButton:]
  -[SKUIPlayButton useLargeButton]


SKUIPlayButtonImageCache : NSObject /usr/lib/libc++.1.dylib
 @property  UIImage *playImage
 @property  UIImage *pauseImage
 @property  UIImage *stopImage

  // class methods
  +[SKUIPlayButtonImageCache imageCacheForStyle:]

  // instance methods
  -[SKUIPlayButtonImageCache .cxx_destruct]
  -[SKUIPlayButtonImageCache initWithStyle:]
  -[SKUIPlayButtonImageCache playImage]
  -[SKUIPlayButtonImageCache pauseImage]
  -[SKUIPlayButtonImageCache stopImage]
  -[SKUIPlayButtonImageCache preloadImages]


SKUIPanelTemplateViewElement : SKUIViewElement
 @property  SKUIImageViewElement *backgroundImageElement

  // instance methods
  -[SKUIPanelTemplateViewElement backgroundImageElement]


SKUIModalDocumentController : NSObject /usr/lib/libc++.1.dylib <AAUIFamilySetupDelegate, SKUIComposeReviewDelegate, SKUIGiftViewControllerDelegate, SKUIModalDocumentController, SKUIOverlayContainerDelegate, UIPopoverControllerDelegate, UIPopoverPresentationControllerDelegate>
 @property  SKUIOverlayContainerViewController *_overlayViewController
 @property  UINavigationController *_overlayNavigationController
 @property  SKUIClientContext *clientContext
 @property  <SKUIModalDocumentDataSource> *dataSource
 @property  <SKUIModalDocumentDelegate> *delegate
 @property  <SKUIModalSourceViewProvider> *modalSourceViewProvider
 @property  <UINavigationControllerDelegate> *navigationControllerDelegate
 @property  UIViewController *rootViewController
 @property  NSArray *documents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIModalDocumentController init]
  -[SKUIModalDocumentController dealloc]
  -[SKUIModalDocumentController delegate]
  -[SKUIModalDocumentController setDelegate:]
  -[SKUIModalDocumentController .cxx_destruct]
  -[SKUIModalDocumentController dataSource]
  -[SKUIModalDocumentController setDataSource:]
  -[SKUIModalDocumentController setRootViewController:]
  -[SKUIModalDocumentController popoverControllerDidDismissPopover:]
  -[SKUIModalDocumentController rootViewController]
  -[SKUIModalDocumentController popoverPresentationControllerDidDismissPopover:]
  -[SKUIModalDocumentController popoverPresentationController:willRepositionPopoverToRect:inView:]
  -[SKUIModalDocumentController _presenterViewController]
  -[SKUIModalDocumentController clientContext]
  -[SKUIModalDocumentController setClientContext:]
  -[SKUIModalDocumentController pushDocument:options:]
  -[SKUIModalDocumentController replaceDocument:withDocument:options:]
  -[SKUIModalDocumentController popDocument]
  -[SKUIModalDocumentController popToDocument:]
  -[SKUIModalDocumentController documents]
  -[SKUIModalDocumentController navigationControllerDelegate]
  -[SKUIModalDocumentController composeReviewViewController:shouldSubmitReview:]
  -[SKUIModalDocumentController composeReviewViewController:didFailWithDialog:]
  -[SKUIModalDocumentController composeReviewViewController:didSubmitWithEdit:]
  -[SKUIModalDocumentController composeReviewViewControllerDidCancel:]
  -[SKUIModalDocumentController giftViewController:didFinishWithResult:]
  -[SKUIModalDocumentController setNavigationControllerDelegate:]
  -[SKUIModalDocumentController popAllDocuments]
  -[SKUIModalDocumentController _overlayViewController]
  -[SKUIModalDocumentController _presentAlertForDialog:]
  -[SKUIModalDocumentController composeReviewViewController:presentDialog:]
  -[SKUIModalDocumentController overlayContainerViewController:willPopViewController:]
  -[SKUIModalDocumentController setModalSourceViewProvider:]
  -[SKUIModalDocumentController ensureOverlayNavigationControllerStackConsistencyForNavigationController:]
  -[SKUIModalDocumentController presentOverlayViewControllersFromNavigationController:]
  -[SKUIModalDocumentController setOverlayNavigationController:withTransitionCoordinator:]
  -[SKUIModalDocumentController navigationDocumentForNavigationController:]
  -[SKUIModalDocumentController _overlayNavigationController]
  -[SKUIModalDocumentController _presentOverlayViewControllersFromNavigationController:]
  -[SKUIModalDocumentController _popDocument:completion:]
  -[SKUIModalDocumentController _sendDidFinishIfApplicable]
  -[SKUIModalDocumentController _pushCharityDocument:options:]
  -[SKUIModalDocumentController _pushDialogDocument:options:]
  -[SKUIModalDocumentController _pushFamilySetupDocument:options:]
  -[SKUIModalDocumentController _pushGiftDocument:options:]
  -[SKUIModalDocumentController _pushPlaylistDocument:options:]
  -[SKUIModalDocumentController _pushRedeemDocument:options:]
  -[SKUIModalDocumentController _garbageCollectActivityViewController:]
  -[SKUIModalDocumentController _pushPopoverStackItem:]
  -[SKUIModalDocumentController _pushPopoverSheetDocument:viewController:popoverPresentationController:options:]
  -[SKUIModalDocumentController _pushSheetStackItem:]
  -[SKUIModalDocumentController _composeReviewViewControllerDidFinish:finished:]
  -[SKUIModalDocumentController _pushSheetDocument:viewController:]
  -[SKUIModalDocumentController _pushOverlayStackItem:]
  -[SKUIModalDocumentController _dismissOverlayControllerWithStackItem:animated:]
  -[SKUIModalDocumentController _promptForStarRating:]
  -[SKUIModalDocumentController _unloadDocumentForViewController:]
  -[SKUIModalDocumentController _unloadDocumentForPopoverController:]
  -[SKUIModalDocumentController _popOverlayStackItem:animated:completion:]
  -[SKUIModalDocumentController _popPopoverStackItem:animated:completion:]
  -[SKUIModalDocumentController _overlayStackItems]
  -[SKUIModalDocumentController _showOverlayContainerViewController]
  -[SKUIModalDocumentController _imageForImageViewElement:]
  -[SKUIModalDocumentController _modalSourceViewProviderFromStackItems]
  -[SKUIModalDocumentController _centerRect:adjust:]
  -[SKUIModalDocumentController _presetPopoverSheetDocument:viewController:popoverPresentationController:]
  -[SKUIModalDocumentController _overlayControllerBackstopAction:]
  -[SKUIModalDocumentController _popoverController:containsStackItem:]
  -[SKUIModalDocumentController familySetupViewController:didCompleteWithSuccess:]
  -[SKUIModalDocumentController unloadDocumentForViewController:]
  -[SKUIModalDocumentController navigationDocumentForDocument:]
  -[SKUIModalDocumentController _popDocumentSkippingUserInterfaceUpdates]
  -[SKUIModalDocumentController modalSourceViewProvider]


_SKUIModalSheetNavigationController : UINavigationController /usr/lib/libobjc.A.dylib
 @property  long long forcedUserInterfaceStyle

  // instance methods
  -[_SKUIModalSheetNavigationController sizeForChildContentContainer:withParentContainerSize:]
  -[_SKUIModalSheetNavigationController preferredUserInterfaceStyle]
  -[_SKUIModalSheetNavigationController forcedUserInterfaceStyle]
  -[_SKUIModalSheetNavigationController setForcedUserInterfaceStyle:]


SKUIMessageBannerCloseButton : UIButton /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIMessageBannerCloseButton layoutSubviews]
  -[SKUIMessageBannerCloseButton setHighlighted:]


SKUIMessageBanner : UIView /usr/lib/libobjc.A.dylib
 @property  <SKUIMessageBannerDelegate> *delegate
 @property  NSString *message
 @property  NSAttributedString *attributedMessage
 @property  BOOL showsClearButton

  // instance methods
  -[SKUIMessageBanner delegate]
  -[SKUIMessageBanner setDelegate:]
  -[SKUIMessageBanner .cxx_destruct]
  -[SKUIMessageBanner value]
  -[SKUIMessageBanner message]
  -[SKUIMessageBanner setMessage:]
  -[SKUIMessageBanner initWithFrame:]
  -[SKUIMessageBanner sizeThatFits:]
  -[SKUIMessageBanner layoutSubviews]
  -[SKUIMessageBanner _buttonAction:]
  -[SKUIMessageBanner setAttributedMessage:]
  -[SKUIMessageBanner setShowsClearButton:]
  -[SKUIMessageBanner showsClearButton]
  -[SKUIMessageBanner _clearButtonAction:]
  -[SKUIMessageBanner attributedMessage]


SKUIItemBrowseTableViewCell : SKUIItemTableViewCell
 @property  SKUIItemBrowseCellLayout *layout

  // instance methods
  -[SKUIItemBrowseTableViewCell .cxx_destruct]
  -[SKUIItemBrowseTableViewCell layout]
  -[SKUIItemBrowseTableViewCell initWithStyle:reuseIdentifier:]
  -[SKUIItemBrowseTableViewCell configureForItem:clientContext:rowIndex:]


SKUIGridViewElementPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIGridViewElementPageSectionConfigurationDataSource, SKUICollectionDOMFeatureTargetting>
 @property  SKUIGridComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL editing

  // instance methods
  -[SKUIGridViewElementPageSection dealloc]
  -[SKUIGridViewElementPageSection _setContext:]
  -[SKUIGridViewElementPageSection .cxx_destruct]
  -[SKUIGridViewElementPageSection isEditing]
  -[SKUIGridViewElementPageSection setEditing:animated:]
  -[SKUIGridViewElementPageSection previewingContext:viewControllerForLocation:]
  -[SKUIGridViewElementPageSection artworkRequest:didLoadImage:]
  -[SKUIGridViewElementPageSection initWithPageComponent:]
  -[SKUIGridViewElementPageSection _reloadViewElementProperties]
  -[SKUIGridViewElementPageSection applyUpdateType:]
  -[SKUIGridViewElementPageSection backgroundColorForIndexPath:]
  -[SKUIGridViewElementPageSection collectionViewWillApplyLayoutAttributes:]
  -[SKUIGridViewElementPageSection deselectItemsAnimated:]
  -[SKUIGridViewElementPageSection sectionContentInset]
  -[SKUIGridViewElementPageSection willAppearInContext:]
  -[SKUIGridViewElementPageSection cellForIndexPath:]
  -[SKUIGridViewElementPageSection cellSizeForIndexPath:]
  -[SKUIGridViewElementPageSection numberOfCells]
  -[SKUIGridViewElementPageSection prefetchResourcesWithReason:]
  -[SKUIGridViewElementPageSection collectionViewDidLongPressItemAtIndexPath:]
  -[SKUIGridViewElementPageSection requestLayoutWithReloadReason:]
  -[SKUIGridViewElementPageSection updateCellWithIndexPath:itemState:animated:]
  -[SKUIGridViewElementPageSection reloadVisibleCellsWithReason:]
  -[SKUIGridViewElementPageSection reloadCellWithIndexPath:reason:]
  -[SKUIGridViewElementPageSection backgroundColorForSection]
  -[SKUIGridViewElementPageSection indexPathsForBackgroundItems]
  -[SKUIGridViewElementPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIGridViewElementPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIGridViewElementPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIGridViewElementPageSection collectionViewDidSelectItemAtIndexPath:]
  -[SKUIGridViewElementPageSection expandEditorialForLabelElement:indexPath:]
  -[SKUIGridViewElementPageSection collectionViewShouldHighlightItemAtIndexPath:]
  -[SKUIGridViewElementPageSection collectionViewShouldSelectItemAtIndexPath:]
  -[SKUIGridViewElementPageSection collectionViewWillScrollToOffset:visibleRange:]
  -[SKUIGridViewElementPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIGridViewElementPageSection getModalSourceViewForViewElement:completionBlock:]
  -[SKUIGridViewElementPageSection targetScrollingIndexPathForElementWithIndexBarEntryID:relativeSectionIndex:]
  -[SKUIGridViewElementPageSection _resetLayoutProperties]
  -[SKUIGridViewElementPageSection gridViewElementPageSectionConfiguration:viewElementForIndexPath:]
  -[SKUIGridViewElementPageSection _requestLayoutForCells]
  -[SKUIGridViewElementPageSection _containsOnlyShelfElements]
  -[SKUIGridViewElementPageSection _enumerateVisibleViewElementsUsingBlock:]


SKUICategory : NSObject /usr/lib/libc++.1.dylib
 @property  <SKUIArtworkProviding> *artworkProvider
 @property  long long categoryIdentifier
 @property  NSArray *children
 @property  NSString *name
 @property  NSURL *URL
 @property  NSString *parentLabel

  // instance methods
  -[SKUICategory name]
  -[SKUICategory .cxx_destruct]
  -[SKUICategory URL]
  -[SKUICategory children]
  -[SKUICategory categoryIdentifier]
  -[SKUICategory containsURL:]
  -[SKUICategory artworkProvider]
  -[SKUICategory initWithCategoryDictionary:]
  -[SKUICategory subcategoryContainingURL:]
  -[SKUICategory parentLabel]


SKUIReportAConcernConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSURL *reportConcernURL
 @property  long long itemIdentifier
 @property  NSString *reportConcernExplanation
 @property  NSString *selectReasonTitle
 @property  NSString *selectReasonSubtitle
 @property  NSString *privacyNote
 @property  NSArray *reasons

  // class methods
  +[SKUIReportAConcernConfiguration configurationWithTemplateElement:]

  // instance methods
  -[SKUIReportAConcernConfiguration copyWithZone:]
  -[SKUIReportAConcernConfiguration .cxx_destruct]
  -[SKUIReportAConcernConfiguration itemIdentifier]
  -[SKUIReportAConcernConfiguration setItemIdentifier:]
  -[SKUIReportAConcernConfiguration reasons]
  -[SKUIReportAConcernConfiguration setReasons:]
  -[SKUIReportAConcernConfiguration reportConcernURL]
  -[SKUIReportAConcernConfiguration setReportConcernURL:]
  -[SKUIReportAConcernConfiguration selectReasonTitle]
  -[SKUIReportAConcernConfiguration setSelectReasonTitle:]
  -[SKUIReportAConcernConfiguration selectReasonSubtitle]
  -[SKUIReportAConcernConfiguration setSelectReasonSubtitle:]
  -[SKUIReportAConcernConfiguration reportConcernExplanation]
  -[SKUIReportAConcernConfiguration setReportConcernExplanation:]
  -[SKUIReportAConcernConfiguration setPrivacyNote:]
  -[SKUIReportAConcernConfiguration privacyNote]


SKUIReportAConcernReason : NSObject /usr/lib/libc++.1.dylib
 @property  NSNumber *reasonID
 @property  NSString *name
 @property  NSString *uppercaseName

  // instance methods
  -[SKUIReportAConcernReason name]
  -[SKUIReportAConcernReason .cxx_destruct]
  -[SKUIReportAConcernReason setName:]
  -[SKUIReportAConcernReason reasonID]
  -[SKUIReportAConcernReason uppercaseName]
  -[SKUIReportAConcernReason setReasonID:]
  -[SKUIReportAConcernReason setUppercaseName:]


SKUICounterView : SKUIViewReuseView <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUICounterView prefetchResourcesForViewElement:reason:context:]
  +[SKUICounterView preferredSizeForViewElement:context:]
  +[SKUICounterView requestLayoutForViewElement:width:context:]
  +[SKUICounterView sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUICounterView dealloc]
  -[SKUICounterView .cxx_destruct]
  -[SKUICounterView setHidden:]
  -[SKUICounterView setAlpha:]
  -[SKUICounterView layoutSubviews]
  -[SKUICounterView setContentInset:]
  -[SKUICounterView didMoveToSuperview]
  -[SKUICounterView didMoveToWindow]
  -[SKUICounterView reloadWithViewElement:width:context:]
  -[SKUICounterView setImage:forArtworkRequest:context:]
  -[SKUICounterView updateWithItemState:context:animated:]
  -[SKUICounterView viewForElementIdentifier:]
  -[SKUICounterView _stopUpdateTimer]
  -[SKUICounterView _addNumberViewWithViewElement:context:]
  -[SKUICounterView _addTimeViewWithViewElement:context:]
  -[SKUICounterView _reloadUpdateTimer]
  -[SKUICounterView _reloadNumberValue]
  -[SKUICounterView _visibleTimeFieldsForDateFormat:]
  -[SKUICounterView _startUpdateTimer]
  -[SKUICounterView _updateTimerAction]


SKUICategoryTableViewCell : UITableViewCell /usr/lib/libobjc.A.dylib
 @property  {CGSize=dd} expectedImageSize

  // instance methods
  -[SKUICategoryTableViewCell .cxx_destruct]
  -[SKUICategoryTableViewCell setBounds:]
  -[SKUICategoryTableViewCell setFrame:]
  -[SKUICategoryTableViewCell layoutSubviews]
  -[SKUICategoryTableViewCell initWithStyle:reuseIdentifier:]
  -[SKUICategoryTableViewCell setExpectedImageSize:]
  -[SKUICategoryTableViewCell expectedImageSize]


SKUICommentDocumentViewController : SKUIViewController <SKUIArtworkRequestDelegate, SKUILayoutCacheDelegate, SKUICommentDelegate, SKUIDocumentViewController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUICommentDocumentViewController dealloc]
  -[SKUICommentDocumentViewController .cxx_destruct]
  -[SKUICommentDocumentViewController loadView]
  -[SKUICommentDocumentViewController viewWillAppear:]
  -[SKUICommentDocumentViewController viewWillDisappear:]
  -[SKUICommentDocumentViewController _backgroundColor]
  -[SKUICommentDocumentViewController viewWillLayoutSubviews]
  -[SKUICommentDocumentViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SKUICommentDocumentViewController viewDidAppear:]
  -[SKUICommentDocumentViewController _layoutContext]
  -[SKUICommentDocumentViewController documentDidUpdate:]
  -[SKUICommentDocumentViewController artworkRequest:didLoadImage:]
  -[SKUICommentDocumentViewController layoutCacheDidFinishBatch:]
  -[SKUICommentDocumentViewController initWithTemplateElement:]
  -[SKUICommentDocumentViewController _loadImageForURL:cacheKey:dataConsumer:reason:]
  -[SKUICommentDocumentViewController commentPostBarView:text:as:]
  -[SKUICommentDocumentViewController commentPostBarView:changeCommenter:]
  -[SKUICommentDocumentViewController _keyboardWillChangeFrameNotification:]
  -[SKUICommentDocumentViewController _keyboardDidHideChangeNotification:]
  -[SKUICommentDocumentViewController _keyboardWillHideNotification:]
  -[SKUICommentDocumentViewController _keyboardWillShowNotification:]
  -[SKUICommentDocumentViewController updateStackElement:withView:]
  -[SKUICommentDocumentViewController _layoutScrollView:]
  -[SKUICommentDocumentViewController _checkAdminStatus]
  -[SKUICommentDocumentViewController _layoutKeyboard]
  -[SKUICommentDocumentViewController _reloadContentSize:]
  -[SKUICommentDocumentViewController _getSelectedCommenter]
  -[SKUICommentDocumentViewController _changeCommenter]
  -[SKUICommentDocumentViewController _setSelectedCommenter:]
  -[SKUICommentDocumentViewController _keyboardWillChangeNotification:accountForGuideLines:applyKeyboardOffset:]
  -[SKUICommentDocumentViewController _preloadCommenterImages]


SKUICommentHeaderViewController : UIViewController /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUICommentHeaderViewController .cxx_destruct]
  -[SKUICommentHeaderViewController viewDidLoad]
  -[SKUICommentHeaderViewController viewWillLayoutSubviews]
  -[SKUICommentHeaderViewController initWithTitle:]


SKUICommentImageDataConsumer : SKUIStyledImageDataConsumer
 @property  @? completionBlock

  // instance methods
  -[SKUICommentImageDataConsumer .cxx_destruct]
  -[SKUICommentImageDataConsumer completionBlock]
  -[SKUICommentImageDataConsumer setCompletionBlock:]
  -[SKUICommentImageDataConsumer imageForImage:]
  -[SKUICommentImageDataConsumer _scaledImageWithBounds:contentRect:drawBlock:]


SKUICommenterAction : UIAlertAction /usr/lib/libobjc.A.dylib
 @property  long long index

  // instance methods
  -[SKUICommenterAction index]
  -[SKUICommenterAction setIndex:]


SKUICommenter : SKUIMediaSocialAuthor
 @property  NSString *attributedName
 @property  BOOL isAttributed
 @property  BOOL isMySelf
 @property  BOOL useImageCopy
 @property  UIImage *thumbnailImage

  // instance methods
  -[SKUICommenter .cxx_destruct]
  -[SKUICommenter setAttributedName:]
  -[SKUICommenter attributedName]
  -[SKUICommenter isAttributed]
  -[SKUICommenter thumbnailImage]
  -[SKUICommenter setThumbnailImage:]
  -[SKUICommenter isMySelf]
  -[SKUICommenter initWithAuthor:]
  -[SKUICommenter setIsMySelf:]
  -[SKUICommenter setIsAttributed:]
  -[SKUICommenter useImageCopy]
  -[SKUICommenter setUseImageCopy:]


SKUIShareTemplateURLItemProvider : UIActivityItemProvider /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIShareTemplateURLItemProvider .cxx_destruct]
  -[SKUIShareTemplateURLItemProvider item]
  -[SKUIShareTemplateURLItemProvider activityViewController:subjectForActivityType:]
  -[SKUIShareTemplateURLItemProvider activityViewController:thumbnailImageForActivityType:suggestedSize:]
  -[SKUIShareTemplateURLItemProvider initWithTemplateElement:]


SKUIMediaSocialProfile : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSURL *backgroundImageURL
 @property  NSString *bio
 @property  NSString *handle
 @property  NSString *identifier
 @property  NSString *name
 @property  NSURL *profileImageURL
 @property  NSString *profileType

  // instance methods
  -[SKUIMediaSocialProfile name]
  -[SKUIMediaSocialProfile copyWithZone:]
  -[SKUIMediaSocialProfile .cxx_destruct]
  -[SKUIMediaSocialProfile setName:]
  -[SKUIMediaSocialProfile identifier]
  -[SKUIMediaSocialProfile handle]
  -[SKUIMediaSocialProfile setIdentifier:]
  -[SKUIMediaSocialProfile setHandle:]
  -[SKUIMediaSocialProfile profileType]
  -[SKUIMediaSocialProfile profileImageURL]
  -[SKUIMediaSocialProfile setBackgroundImageURL:]
  -[SKUIMediaSocialProfile setBio:]
  -[SKUIMediaSocialProfile setProfileImageURL:]
  -[SKUIMediaSocialProfile setProfileType:]
  -[SKUIMediaSocialProfile initWithProfileDictionary:]
  -[SKUIMediaSocialProfile backgroundImageURL]
  -[SKUIMediaSocialProfile bio]


SKUICategoryTableViewController : UITableViewController /usr/lib/libobjc.A.dylib <SKUICategoryArtworkLoaderObserver, SKUICategoryTableViewControllerDelegate>
 @property  SKUICategoryArtworkLoader *artworkLoader
 @property  SKUICategory *category
 @property  SKUIClientContext *clientContext
 @property  <SKUICategoryTableViewControllerDelegate> *delegate
 @property  NSArray *metricsLocations
 @property  long long numberOfHiddenRows
 @property  NSURL *selectedURL
 @property  NSURL *defaultURL
 @property  BOOL root
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUICategoryTableViewController dealloc]
  -[SKUICategoryTableViewController delegate]
  -[SKUICategoryTableViewController setDelegate:]
  -[SKUICategoryTableViewController .cxx_destruct]
  -[SKUICategoryTableViewController category]
  -[SKUICategoryTableViewController setCategory:]
  -[SKUICategoryTableViewController setRoot:]
  -[SKUICategoryTableViewController isRoot]
  -[SKUICategoryTableViewController loadView]
  -[SKUICategoryTableViewController viewWillAppear:]
  -[SKUICategoryTableViewController tableView:numberOfRowsInSection:]
  -[SKUICategoryTableViewController tableView:cellForRowAtIndexPath:]
  -[SKUICategoryTableViewController numberOfSectionsInTableView:]
  -[SKUICategoryTableViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[SKUICategoryTableViewController tableView:didSelectRowAtIndexPath:]
  -[SKUICategoryTableViewController clientContext]
  -[SKUICategoryTableViewController setClientContext:]
  -[SKUICategoryTableViewController defaultURL]
  -[SKUICategoryTableViewController setDefaultURL:]
  -[SKUICategoryTableViewController _doneButtonAction:]
  -[SKUICategoryTableViewController artworkLoader]
  -[SKUICategoryTableViewController setArtworkLoader:]
  -[SKUICategoryTableViewController setSelectedURL:]
  -[SKUICategoryTableViewController _categoryAtIndexPath:]
  -[SKUICategoryTableViewController categoryTableView:didSelectCategory:]
  -[SKUICategoryTableViewController metricsPageContextForCategoryTableView:]
  -[SKUICategoryTableViewController _recordClickEventForIndexPath:category:actionType:]
  -[SKUICategoryTableViewController _metricsLocationsToPushIndexPath:]
  -[SKUICategoryTableViewController setMetricsLocations:]
  -[SKUICategoryTableViewController _metricsLocationPostionForIndexPath:]
  -[SKUICategoryTableViewController categoryArtworkLoader:didLoadImage:forCategory:]
  -[SKUICategoryTableViewController setNumberOfHiddenRows:]
  -[SKUICategoryTableViewController metricsLocations]
  -[SKUICategoryTableViewController numberOfHiddenRows]
  -[SKUICategoryTableViewController selectedURL]


SKUICategoryController : NSObject /usr/lib/libc++.1.dylib <SKUICategoryTableViewControllerDelegate, UIPopoverControllerDelegate>
 @property  SKUIClientContext *clientContext
 @property  <SKUICategoryControllerDelegate> *delegate
 @property  SKUICategory *category
 @property  NSURL *defaultURL
 @property  NSOperationQueue *operationQueue
 @property  UIBarButtonItem *categoryButton
 @property  BOOL isLoading
 @property  long long segmentedControlLength
 @property  UISegmentedControl *segmentedControl
 @property  NSURL *selectedURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUICategoryController dealloc]
  -[SKUICategoryController delegate]
  -[SKUICategoryController setDelegate:]
  -[SKUICategoryController .cxx_destruct]
  -[SKUICategoryController category]
  -[SKUICategoryController setCategory:]
  -[SKUICategoryController operationQueue]
  -[SKUICategoryController setOperationQueue:]
  -[SKUICategoryController popoverControllerDidDismissPopover:]
  -[SKUICategoryController dismiss]
  -[SKUICategoryController segmentedControl]
  -[SKUICategoryController isLoading]
  -[SKUICategoryController clientContext]
  -[SKUICategoryController setClientContext:]
  -[SKUICategoryController defaultURL]
  -[SKUICategoryController setDefaultURL:]
  -[SKUICategoryController _artworkLoader]
  -[SKUICategoryController _setResponse:error:]
  -[SKUICategoryController initWithContentsController:]
  -[SKUICategoryController loadFromURL:withCompletionBlock:]
  -[SKUICategoryController setSelectedURL:]
  -[SKUICategoryController categoryButton]
  -[SKUICategoryController setSegmentedControlLength:]
  -[SKUICategoryController categoryTableView:didSelectCategory:]
  -[SKUICategoryController metricsPageContextForCategoryTableView:]
  -[SKUICategoryController selectedURL]
  -[SKUICategoryController buttonAction:]
  -[SKUICategoryController segmentedControlAction:]
  -[SKUICategoryController _reloadSegmentedControl]
  -[SKUICategoryController _precacheArtworkForCategory:]
  -[SKUICategoryController _reloadSelectedSegment]
  -[SKUICategoryController _rootMetricsLocations]
  -[SKUICategoryController _tableViewControllerWithCategory:]
  -[SKUICategoryController _metricsLocationsWithIndex:]
  -[SKUICategoryController _recordClickEventWithCategory:index:]
  -[SKUICategoryController segmentedControlLength]


SKUIReviewInAppRatingAction : UIInterfaceAction /usr/lib/libobjc.A.dylib
 @property  @? beforeDismissHandler
 @property  @? afterDismissHandler

  // class methods
  +[SKUIReviewInAppRatingAction actionWithCustomContentViewController:]

  // instance methods
  -[SKUIReviewInAppRatingAction setEnabled:]
  -[SKUIReviewInAppRatingAction .cxx_destruct]
  -[SKUIReviewInAppRatingAction beforeDismissHandler]
  -[SKUIReviewInAppRatingAction setBeforeDismissHandler:]
  -[SKUIReviewInAppRatingAction setAfterDismissHandler:]
  -[SKUIReviewInAppRatingAction afterDismissHandler]
  -[SKUIReviewInAppRatingAction setCustomEnabledState:]


SKUIInlineFlipContainerView : UIView /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIInlineFlipContainerView .cxx_destruct]
  -[SKUIInlineFlipContainerView flipToBackViewWithDuration:options:completionBlock:]
  -[SKUIInlineFlipContainerView initWithFrontView:backView:]


SKUIAttributedStringLayoutRequest : NSObject /usr/lib/libc++.1.dylib <SKUILayoutRequest>
 @property  NSAttributedString *attributedString
 @property  long long numberOfLines
 @property  BOOL wantsBaselineOffset
 @property  double width
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  Class layoutClass

  // instance methods
  -[SKUIAttributedStringLayoutRequest copyWithZone:]
  -[SKUIAttributedStringLayoutRequest .cxx_destruct]
  -[SKUIAttributedStringLayoutRequest initWithAttributedString:]
  -[SKUIAttributedStringLayoutRequest width]
  -[SKUIAttributedStringLayoutRequest setWidth:]
  -[SKUIAttributedStringLayoutRequest attributedString]
  -[SKUIAttributedStringLayoutRequest wantsBaselineOffset]
  -[SKUIAttributedStringLayoutRequest setWantsBaselineOffset:]
  -[SKUIAttributedStringLayoutRequest setNumberOfLines:]
  -[SKUIAttributedStringLayoutRequest numberOfLines]
  -[SKUIAttributedStringLayoutRequest layoutClass]


SKUILoadSortDataOperation : SKUILoadResourceOperation
 @property  SSVLoadURLOperation *underlyingOperation
 @property  SKUISortDataRequest *resourceRequest

  // instance methods
  -[SKUILoadSortDataOperation .cxx_destruct]
  -[SKUILoadSortDataOperation cancel]
  -[SKUILoadSortDataOperation main]
  -[SKUILoadSortDataOperation initWithResourceRequest:]
  -[SKUILoadSortDataOperation setUnderlyingOperation:]
  -[SKUILoadSortDataOperation underlyingOperation]


SKUITabularLockupLayout : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *columns

  // class methods
  +[SKUITabularLockupLayout fontForLabelViewElement:context:]

  // instance methods
  -[SKUITabularLockupLayout .cxx_destruct]
  -[SKUITabularLockupLayout columns]
  -[SKUITabularLockupLayout initWithLockup:context:]
  -[SKUITabularLockupLayout sizeColumnsToFitWidth:context:]


SKUITabularLockupColumn : NSObject /usr/lib/libc++.1.dylib
 @property  long long identifier
 @property  {CGSize=dd} size
 @property  NSArray *childViewElements

  // instance methods
  -[SKUITabularLockupColumn .cxx_destruct]
  -[SKUITabularLockupColumn identifier]
  -[SKUITabularLockupColumn size]
  -[SKUITabularLockupColumn setIdentifier:]
  -[SKUITabularLockupColumn setSize:]
  -[SKUITabularLockupColumn childViewElements]
  -[SKUITabularLockupColumn _addChildViewElement:]
  -[SKUITabularLockupColumn initWithColumnIdentifier:]


SKUIButtonFooterSettingsHeaderFooterDescription : SKUISettingsHeaderFooterDescription
  // instance methods
  -[SKUIButtonFooterSettingsHeaderFooterDescription _viewClassForSettingsHeaderFooterDescription:]


SKUIMenuBarSectionsViewController : SKUIStorePageSectionsViewController
 @property  unsigned long numberOfIterationsForShelfPageSections

  // instance methods
  -[SKUIMenuBarSectionsViewController initWithLayoutStyle:]
  -[SKUIMenuBarSectionsViewController defaultSectionForComponent:]
  -[SKUIMenuBarSectionsViewController setNumberOfIterationsForShelfPageSections:]
  -[SKUIMenuBarSectionsViewController numberOfIterationsForShelfPageSections]


SKUIShakeAnimation : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUIShakeAnimation initWithOptions:]
  -[SKUIShakeAnimation animatePINInputControl:]
  -[SKUIShakeAnimation animateView:]


SKUICategoryArtworkLoader : NSObject /usr/lib/libc++.1.dylib <SKUIArtworkRequestDelegate>
 @property  SKUIResourceLoader *artworkLoader
 @property  SKUIImageDataConsumer *imageDataConsumer
 @property  UIImage *placeholderImage
 @property  {CGSize=dd} imageSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUICategoryArtworkLoader init]
  -[SKUICategoryArtworkLoader .cxx_destruct]
  -[SKUICategoryArtworkLoader addObserver:]
  -[SKUICategoryArtworkLoader removeObserver:]
  -[SKUICategoryArtworkLoader imageSize]
  -[SKUICategoryArtworkLoader placeholderImage]
  -[SKUICategoryArtworkLoader artworkRequest:didLoadImage:]
  -[SKUICategoryArtworkLoader initWithArtworkLoader:]
  -[SKUICategoryArtworkLoader artworkLoader]
  -[SKUICategoryArtworkLoader imageDataConsumer]
  -[SKUICategoryArtworkLoader setImageDataConsumer:]
  -[SKUICategoryArtworkLoader cachedImageForCategory:]
  -[SKUICategoryArtworkLoader loadImageForCategory:reason:]


SKUIViewElementHorizontalLayout : NSObject /usr/lib/libc++.1.dylib
 @property  double elementSpacing
 @property  double layoutWidth
 @property  long long maximumElementsPerLine
 @property  long long maximumLines

  // instance methods
  -[SKUIViewElementHorizontalLayout maximumLines]
  -[SKUIViewElementHorizontalLayout setMaximumLines:]
  -[SKUIViewElementHorizontalLayout layoutWidth]
  -[SKUIViewElementHorizontalLayout setElementSpacing:]
  -[SKUIViewElementHorizontalLayout setLayoutWidth:]
  -[SKUIViewElementHorizontalLayout layoutViewElements:usingSizingBlock:]
  -[SKUIViewElementHorizontalLayout elementSpacing]
  -[SKUIViewElementHorizontalLayout setMaximumElementsPerLine:]
  -[SKUIViewElementHorizontalLayout maximumElementsPerLine]


SKUISlideshowAnimator : NSObject /usr/lib/libc++.1.dylib <UIViewControllerAnimatorTransitioning>
 @property  UIImageView *imageView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUISlideshowAnimator .cxx_destruct]
  -[SKUISlideshowAnimator imageView]
  -[SKUISlideshowAnimator transitionDuration:]
  -[SKUISlideshowAnimator animateTransition:]
  -[SKUISlideshowAnimator animationEnded:]
  -[SKUISlideshowAnimator setImageView:]


SKUISlideshowDismissalAnimator : NSObject /usr/lib/libc++.1.dylib <UIViewControllerAnimatorTransitioning>
 @property  UIImageView *imageView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} imageRect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUISlideshowDismissalAnimator .cxx_destruct]
  -[SKUISlideshowDismissalAnimator imageView]
  -[SKUISlideshowDismissalAnimator transitionDuration:]
  -[SKUISlideshowDismissalAnimator animateTransition:]
  -[SKUISlideshowDismissalAnimator animationEnded:]
  -[SKUISlideshowDismissalAnimator setImageView:]
  -[SKUISlideshowDismissalAnimator imageRect]
  -[SKUISlideshowDismissalAnimator setImageRect:]


SKUISegmentedControl : UISegmentedControl /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUISegmentedControl touchesEnded:withEvent:]
  -[SKUISegmentedControl frameForSegmentAtIndex:]


SKUIStoreIdentifier : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSNumber *itemIdentifier
 @property  NSString *bundleIdentifier
 @property  NSString *podcastFeedURLIdentifier

  // instance methods
  -[SKUIStoreIdentifier longLongValue]
  -[SKUIStoreIdentifier initWithLongLong:]
  -[SKUIStoreIdentifier isEqual:]
  -[SKUIStoreIdentifier copyWithZone:]
  -[SKUIStoreIdentifier stringValue]
  -[SKUIStoreIdentifier .cxx_destruct]
  -[SKUIStoreIdentifier bundleIdentifier]
  -[SKUIStoreIdentifier itemIdentifier]
  -[SKUIStoreIdentifier setBundleIdentifier:]
  -[SKUIStoreIdentifier numberValue]
  -[SKUIStoreIdentifier initWithNumber:]
  -[SKUIStoreIdentifier setPodcastFeedURLIdentifier:]
  -[SKUIStoreIdentifier initWithPodcastFeedURL:]
  -[SKUIStoreIdentifier podcastFeedURLIdentifier]


SKUIProductPageTableLockupsSection : SKUIProductPageTableSection <SKUIArtworkRequestDelegate, SKUIMissingItemDelegate>
 @property  SKUIResourceLoader *resourceLoader
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIProductPageTableLockupsSection dealloc]
  -[SKUIProductPageTableLockupsSection .cxx_destruct]
  -[SKUIProductPageTableLockupsSection resourceLoader]
  -[SKUIProductPageTableLockupsSection setResourceLoader:]
  -[SKUIProductPageTableLockupsSection artworkRequest:didLoadImage:]
  -[SKUIProductPageTableLockupsSection heightForCellInTableView:indexPath:]
  -[SKUIProductPageTableLockupsSection numberOfRowsInSection]
  -[SKUIProductPageTableLockupsSection tableViewCellForTableView:indexPath:]
  -[SKUIProductPageTableLockupsSection headerViewForTableView:]
  -[SKUIProductPageTableLockupsSection footerViewForTableView:]
  -[SKUIProductPageTableLockupsSection _missingItemLoader]
  -[SKUIProductPageTableLockupsSection missingItemLoader:didLoadItems:invalidItemIdentifiers:]
  -[SKUIProductPageTableLockupsSection initWithLockups:title:]
  -[SKUIProductPageTableLockupsSection selectionActionForTableView:indexPath:]
  -[SKUIProductPageTableLockupsSection _productImageForItem:]


SKUILinkButton : UIButton /usr/lib/libobjc.A.dylib
 @property  long long arrowStyle

  // class methods
  +[SKUILinkButton buttonWithArrowStyle:]

  // instance methods
  -[SKUILinkButton setTitleColor:forState:]
  -[SKUILinkButton sizeThatFits:]
  -[SKUILinkButton layoutSubviews]
  -[SKUILinkButton sizeToFit]
  -[SKUILinkButton tintColorDidChange]
  -[SKUILinkButton initWithArrowStyle:]
  -[SKUILinkButton _reloadIcons]
  -[SKUILinkButton _linkImagePaddingLeft]
  -[SKUILinkButton arrowStyle]


SKUITracklistPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate>
 @property  SKUITracklistPageComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUITracklistPageSection dealloc]
  -[SKUITracklistPageSection .cxx_destruct]
  -[SKUITracklistPageSection artworkRequest:didLoadImage:]
  -[SKUITracklistPageSection initWithPageComponent:]
  -[SKUITracklistPageSection applyUpdateType:]
  -[SKUITracklistPageSection backgroundColorForIndexPath:]
  -[SKUITracklistPageSection relevantEntityProviders]
  -[SKUITracklistPageSection sectionContentInset]
  -[SKUITracklistPageSection willAppearInContext:]
  -[SKUITracklistPageSection cellForIndexPath:]
  -[SKUITracklistPageSection cellSizeForIndexPath:]
  -[SKUITracklistPageSection entityProvider:didInvalidateWithContext:]
  -[SKUITracklistPageSection numberOfCells]
  -[SKUITracklistPageSection prefetchResourcesWithReason:]
  -[SKUITracklistPageSection requestLayoutWithReloadReason:]
  -[SKUITracklistPageSection updateCellWithIndexPath:itemState:animated:]
  -[SKUITracklistPageSection reloadCellWithIndexPath:reason:]
  -[SKUITracklistPageSection addImpressionsForIndexPath:toSession:]
  -[SKUITracklistPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUITracklistPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUITracklistPageSection collectionViewDidSelectItemAtIndexPath:]
  -[SKUITracklistPageSection collectionViewWillScrollToOffset:visibleRange:]
  -[SKUITracklistPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUITracklistPageSection firstAppearanceIndexPath]
  -[SKUITracklistPageSection getModalSourceViewForViewElement:completionBlock:]
  -[SKUITracklistPageSection _columnData]
  -[SKUITracklistPageSection _enumerateVisibleViewElementsUsingBlock:]
  -[SKUITracklistPageSection _reloadEntityProvider]
  -[SKUITracklistPageSection _viewElementForIndex:]
  -[SKUITracklistPageSection _requestCellLayoutWithColumnData:]
  -[SKUITracklistPageSection _widthForButtonElements:]
  -[SKUITracklistPageSection _representativeStringForViewElement:]
  -[SKUITracklistPageSection _isDynamicTracklist]


SKUIHorizontalListCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
 @property  {UIEdgeInsets=dddd} contentInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIHorizontalListCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIHorizontalListCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIHorizontalListCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIHorizontalListCollectionViewCell sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIHorizontalListCollectionViewCell .cxx_destruct]
  -[SKUIHorizontalListCollectionViewCell setBackgroundColor:]
  -[SKUIHorizontalListCollectionViewCell initWithFrame:]
  -[SKUIHorizontalListCollectionViewCell layoutSubviews]
  -[SKUIHorizontalListCollectionViewCell setContentInset:]
  -[SKUIHorizontalListCollectionViewCell contentInset]
  -[SKUIHorizontalListCollectionViewCell applyLayoutAttributes:]
  -[SKUIHorizontalListCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIHorizontalListCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIHorizontalListCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIHorizontalListCollectionViewCell viewForElementIdentifier:]


SKUIJSDOMFeatureNavigationDocument : NSObject /usr/lib/libc++.1.dylib <IKAppNavigationController, SKUIDOMFeature>
 @property  SKUINavigationDocumentController *navigationDocumentController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *featureName
 @property  IKAppContext *appContext

  // class methods
  +[SKUIJSDOMFeatureNavigationDocument makeFeatureJSObjectForFeature:]
  +[SKUIJSDOMFeatureNavigationDocument possibleFeatureNames]

  // instance methods
  -[SKUIJSDOMFeatureNavigationDocument clear]
  -[SKUIJSDOMFeatureNavigationDocument .cxx_destruct]
  -[SKUIJSDOMFeatureNavigationDocument featureName]
  -[SKUIJSDOMFeatureNavigationDocument appContext]
  -[SKUIJSDOMFeatureNavigationDocument pushDocument:options:]
  -[SKUIJSDOMFeatureNavigationDocument insertDocument:beforeDocument:options:]
  -[SKUIJSDOMFeatureNavigationDocument replaceDocument:withDocument:options:]
  -[SKUIJSDOMFeatureNavigationDocument popDocument]
  -[SKUIJSDOMFeatureNavigationDocument popToDocument:]
  -[SKUIJSDOMFeatureNavigationDocument popToRootDocument]
  -[SKUIJSDOMFeatureNavigationDocument removeDocument:]
  -[SKUIJSDOMFeatureNavigationDocument documents]
  -[SKUIJSDOMFeatureNavigationDocument initWithDOMNode:featureName:]
  -[SKUIJSDOMFeatureNavigationDocument setNavigationDocumentController:]
  -[SKUIJSDOMFeatureNavigationDocument navigationDocumentController]


SKUIRedeemCameraView : UIView /usr/lib/libobjc.A.dylib <UITextFieldDelegate>
 @property  <SKUIRedeemCameraViewDelegate> *delegate
 @property  BOOL enabled
 @property  UIImage *image
 @property  SKUIITunesPassConfiguration *ITunesPassConfiguration
 @property  NSString *text
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRedeemCameraView dealloc]
  -[SKUIRedeemCameraView setEnabled:]
  -[SKUIRedeemCameraView delegate]
  -[SKUIRedeemCameraView setDelegate:]
  -[SKUIRedeemCameraView .cxx_destruct]
  -[SKUIRedeemCameraView start]
  -[SKUIRedeemCameraView isEnabled]
  -[SKUIRedeemCameraView image]
  -[SKUIRedeemCameraView setImage:]
  -[SKUIRedeemCameraView text]
  -[SKUIRedeemCameraView setText:]
  -[SKUIRedeemCameraView layoutSubviews]
  -[SKUIRedeemCameraView keyboardDidShow:]
  -[SKUIRedeemCameraView keyboardDidHide:]
  -[SKUIRedeemCameraView showKeyboard]
  -[SKUIRedeemCameraView textFieldShouldReturn:]
  -[SKUIRedeemCameraView textFieldShouldBeginEditing:]
  -[SKUIRedeemCameraView textFieldShouldEndEditing:]
  -[SKUIRedeemCameraView _hideKeyboard]
  -[SKUIRedeemCameraView keyboardWillShow:]
  -[SKUIRedeemCameraView keyboardWillHide:]
  -[SKUIRedeemCameraView initWithClientContext:]
  -[SKUIRedeemCameraView _termsButtonAction:]
  -[SKUIRedeemCameraView ITunesPassConfiguration]
  -[SKUIRedeemCameraView setITunesPassConfiguration:]
  -[SKUIRedeemCameraView _tapGestureAction:]
  -[SKUIRedeemCameraView _landingButtonAction:]
  -[SKUIRedeemCameraView _newTextFieldWithClientContext:placeholderColor:]
  -[SKUIRedeemCameraView textFieldTextDidChange:]
  -[SKUIRedeemCameraView _iTunesPassLearnMoreAction:]
  -[SKUIRedeemCameraView _isShowingRedeemer]
  -[SKUIRedeemCameraView _pauseRedeemer]
  -[SKUIRedeemCameraView _showRedeemer:]
  -[SKUIRedeemCameraView _resumeRedeemer]


SKUIRedeemCameraLandingView : UIView /usr/lib/libobjc.A.dylib
 @property  UIButton *button
 @property  UIImage *image
 @property  long long spacingStyle

  // instance methods
  -[SKUIRedeemCameraLandingView .cxx_destruct]
  -[SKUIRedeemCameraLandingView image]
  -[SKUIRedeemCameraLandingView setImage:]
  -[SKUIRedeemCameraLandingView button]
  -[SKUIRedeemCameraLandingView sizeThatFits:]
  -[SKUIRedeemCameraLandingView layoutSubviews]
  -[SKUIRedeemCameraLandingView initWithClientContext:]
  -[SKUIRedeemCameraLandingView setSpacingStyle:]
  -[SKUIRedeemCameraLandingView spacingStyle]


SKUIJSTabBarItem : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIJSTabBarItem>
 @property  SKUITabBarItem *tabBarItem
 @property  NSString *badgeValue
 @property  NSString *identifier
 @property  IKJSNavigationDocument *navigationDocument
 @property  NSString *rootURL
 @property  NSString *title

  // instance methods
  -[SKUIJSTabBarItem dealloc]
  -[SKUIJSTabBarItem .cxx_destruct]
  -[SKUIJSTabBarItem identifier]
  -[SKUIJSTabBarItem title]
  -[SKUIJSTabBarItem setBadgeValue:]
  -[SKUIJSTabBarItem badgeValue]
  -[SKUIJSTabBarItem tabBarItem]
  -[SKUIJSTabBarItem navigationDocument]
  -[SKUIJSTabBarItem rootURL]
  -[SKUIJSTabBarItem initWithAppContext:navigationController:tabBarItem:owner:]


SKUIDeveloperInfo : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *businessRegistrationIdentifier
 @property  NSString *ECommerceRegistrationIdentifier
 @property  NSString *emailAddress
 @property  NSString *phoneNumber
 @property  NSString *tradeName
 @property  NSString *tradeRepresentativeName
 @property  NSArray *addressLines
 @property  NSString *administrativeArea
 @property  NSString *country
 @property  NSString *ISOCountryCode
 @property  NSString *locality
 @property  NSString *postalCode

  // instance methods
  -[SKUIDeveloperInfo copyWithZone:]
  -[SKUIDeveloperInfo .cxx_destruct]
  -[SKUIDeveloperInfo phoneNumber]
  -[SKUIDeveloperInfo postalCode]
  -[SKUIDeveloperInfo country]
  -[SKUIDeveloperInfo setPhoneNumber:]
  -[SKUIDeveloperInfo emailAddress]
  -[SKUIDeveloperInfo setEmailAddress:]
  -[SKUIDeveloperInfo ISOCountryCode]
  -[SKUIDeveloperInfo locality]
  -[SKUIDeveloperInfo administrativeArea]
  -[SKUIDeveloperInfo setAdministrativeArea:]
  -[SKUIDeveloperInfo setLocality:]
  -[SKUIDeveloperInfo setCountry:]
  -[SKUIDeveloperInfo setISOCountryCode:]
  -[SKUIDeveloperInfo setPostalCode:]
  -[SKUIDeveloperInfo formattedAddressString]
  -[SKUIDeveloperInfo tradeName]
  -[SKUIDeveloperInfo tradeRepresentativeName]
  -[SKUIDeveloperInfo ECommerceRegistrationIdentifier]
  -[SKUIDeveloperInfo businessRegistrationIdentifier]
  -[SKUIDeveloperInfo initWithDeveloperDictionary:]
  -[SKUIDeveloperInfo setTradeName:]
  -[SKUIDeveloperInfo setAddressLines:]
  -[SKUIDeveloperInfo setBusinessRegistrationIdentifier:]
  -[SKUIDeveloperInfo setECommerceRegistrationIdentifier:]
  -[SKUIDeveloperInfo setTradeRepresentativeName:]
  -[SKUIDeveloperInfo addressLines]


SKUICardViewElement : SKUIViewElement
 @property  long long cardType
 @property  BOOL adCard

  // instance methods
  -[SKUICardViewElement isEnabled]
  -[SKUICardViewElement cardType]
  -[SKUICardViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUICardViewElement applyUpdatesWithElement:]
  -[SKUICardViewElement enumerateChildrenUsingBlock:]
  -[SKUICardViewElement pageComponentType]
  -[SKUICardViewElement isAdCard]


SKUIProductPageDataConsumer : SSVURLDataConsumer /System/Library/Frameworks/UIKit.framework/UIKit
  // instance methods
  -[SKUIProductPageDataConsumer objectForData:response:error:]
  -[SKUIProductPageDataConsumer productPageWithDictionary:]


SKUIRadioEntityProviderViewElement : SKUIAbstractEntityProviderViewElement <SKUIEntityProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRadioEntityProviderViewElement dealloc]
  -[SKUIRadioEntityProviderViewElement .cxx_destruct]
  -[SKUIRadioEntityProviderViewElement numberOfSections]
  -[SKUIRadioEntityProviderViewElement _stations]
  -[SKUIRadioEntityProviderViewElement _radioModelDidChangeNotification:]
  -[SKUIRadioEntityProviderViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIRadioEntityProviderViewElement applyUpdatesWithElement:]
  -[SKUIRadioEntityProviderViewElement entityValueProviderAtIndexPath:]
  -[SKUIRadioEntityProviderViewElement numberOfEntitiesInSection:]
  -[SKUIRadioEntityProviderViewElement indexBarEntryEntityValueProviderAtIndex:]
  -[SKUIRadioEntityProviderViewElement numberOfIndexBarEntries]
  -[SKUIRadioEntityProviderViewElement sectionForSectionIndexBarEntryAtIndex:]
  -[SKUIRadioEntityProviderViewElement sectionEntityValueProviderAtIndex:]
  -[SKUIRadioEntityProviderViewElement _invalidateWithContext:]
  -[SKUIRadioEntityProviderViewElement _entityValueProviderForStation:]


SKUISectionViewElement : SKUIViewElement

SKUIIncompatibleAppViewController : SKUIViewController <SKUIProductPageChildViewController>
 @property  SKUIProductPageItem *incompatibleItem
 @property  NSOperationQueue *operationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIScrollView *scrollView
 @property  SKUIProductPageHeaderViewController *headerViewController
 @property  <SKUIProductPageChildViewControllerDelegate> *delegate

  // instance methods
  -[SKUIIncompatibleAppViewController dealloc]
  -[SKUIIncompatibleAppViewController delegate]
  -[SKUIIncompatibleAppViewController setDelegate:]
  -[SKUIIncompatibleAppViewController .cxx_destruct]
  -[SKUIIncompatibleAppViewController operationQueue]
  -[SKUIIncompatibleAppViewController setOperationQueue:]
  -[SKUIIncompatibleAppViewController loadView]
  -[SKUIIncompatibleAppViewController viewWillAppear:]
  -[SKUIIncompatibleAppViewController reloadData]
  -[SKUIIncompatibleAppViewController scrollView]
  -[SKUIIncompatibleAppViewController headerViewController]
  -[SKUIIncompatibleAppViewController setHeaderViewController:]
  -[SKUIIncompatibleAppViewController _artworkContext]
  -[SKUIIncompatibleAppViewController _setArtworkWithImage:error:]
  -[SKUIIncompatibleAppViewController initWithIncompatibleItem:]
  -[SKUIIncompatibleAppViewController _learnMoreAboutIPad:]
  -[SKUIIncompatibleAppViewController _learnMoreAboutApp:]
  -[SKUIIncompatibleAppViewController incompatibleItem]


SKUIItemArtworkContext : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIProductImageDataConsumer *generalConsumer
 @property  SKUIStyledImageDataConsumer *iconConsumer
 @property  SKUIProductImageDataConsumer *letterboxConsumer
 @property  SKUIStyledImageDataConsumer *newsstandConsumer
 @property  SKUIProductImageDataConsumer *posterConsumer
 @property  SKUIStyledImageDataConsumer *messagesIconConsumer
 @property  SKUIColorScheme *colorScheme
 @property  UIColor *backgroundColor

  // class methods
  +[SKUIItemArtworkContext wishlistContext]
  +[SKUIItemArtworkContext lockupContextWithSize:]
  +[SKUIItemArtworkContext roomContext]

  // instance methods
  -[SKUIItemArtworkContext .cxx_destruct]
  -[SKUIItemArtworkContext backgroundColor]
  -[SKUIItemArtworkContext setBackgroundColor:]
  -[SKUIItemArtworkContext colorScheme]
  -[SKUIItemArtworkContext setColorScheme:]
  -[SKUIItemArtworkContext placeholderImageForItem:]
  -[SKUIItemArtworkContext dataConsumerForItem:]
  -[SKUIItemArtworkContext setIconConsumer:]
  -[SKUIItemArtworkContext setGeneralConsumer:]
  -[SKUIItemArtworkContext setNewsstandConsumer:]
  -[SKUIItemArtworkContext setPosterConsumer:]
  -[SKUIItemArtworkContext setLetterboxConsumer:]
  -[SKUIItemArtworkContext imageSizeForItem:]
  -[SKUIItemArtworkContext URLForItem:]
  -[SKUIItemArtworkContext largestImageSizeForLockups:]
  -[SKUIItemArtworkContext iconConsumer]
  -[SKUIItemArtworkContext artworkForItem:]
  -[SKUIItemArtworkContext largestImageSizeForItems:]
  -[SKUIItemArtworkContext generalConsumer]
  -[SKUIItemArtworkContext letterboxConsumer]
  -[SKUIItemArtworkContext newsstandConsumer]
  -[SKUIItemArtworkContext posterConsumer]
  -[SKUIItemArtworkContext messagesIconConsumer]
  -[SKUIItemArtworkContext setMessagesIconConsumer:]


SKUISearchRequest : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSNumber *searchHintIndex
 @property  NSString *searchHintOriginalTerm
 @property  NSString *term
 @property  NSURL *URL

  // instance methods
  -[SKUISearchRequest copyWithZone:]
  -[SKUISearchRequest .cxx_destruct]
  -[SKUISearchRequest setURL:]
  -[SKUISearchRequest URL]
  -[SKUISearchRequest term]
  -[SKUISearchRequest setTerm:]
  -[SKUISearchRequest setSearchHintOriginalTerm:]
  -[SKUISearchRequest setSearchHintIndex:]
  -[SKUISearchRequest searchHintIndex]
  -[SKUISearchRequest searchHintOriginalTerm]


SKUIIPadRedeemCameraView : UIView /usr/lib/libobjc.A.dylib <UITextFieldDelegate>
 @property  <SKUIRedeemCameraViewDelegate> *delegate
 @property  BOOL enabled
 @property  UIImage *image
 @property  NSString *text
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIIPadRedeemCameraView dealloc]
  -[SKUIIPadRedeemCameraView enabled]
  -[SKUIIPadRedeemCameraView setEnabled:]
  -[SKUIIPadRedeemCameraView delegate]
  -[SKUIIPadRedeemCameraView setDelegate:]
  -[SKUIIPadRedeemCameraView .cxx_destruct]
  -[SKUIIPadRedeemCameraView start]
  -[SKUIIPadRedeemCameraView image]
  -[SKUIIPadRedeemCameraView setImage:]
  -[SKUIIPadRedeemCameraView text]
  -[SKUIIPadRedeemCameraView setText:]
  -[SKUIIPadRedeemCameraView layoutSubviews]
  -[SKUIIPadRedeemCameraView showKeyboard]
  -[SKUIIPadRedeemCameraView textFieldShouldReturn:]
  -[SKUIIPadRedeemCameraView textFieldDidEndEditing:]
  -[SKUIIPadRedeemCameraView _hideKeyboard]
  -[SKUIIPadRedeemCameraView keyboardDidChange:]
  -[SKUIIPadRedeemCameraView initWithClientContext:]
  -[SKUIIPadRedeemCameraView _termsButtonAction:]
  -[SKUIIPadRedeemCameraView _landingButtonAction:]
  -[SKUIIPadRedeemCameraView _newTextFieldWithClientContext:placeholderColor:]
  -[SKUIIPadRedeemCameraView textFieldTextDidChange:]
  -[SKUIIPadRedeemCameraView _adjustVerticalSpacingForHeight:]


SKUIApplicationLicenseViewController : SKUIViewController
  // instance methods
  -[SKUIApplicationLicenseViewController .cxx_destruct]
  -[SKUIApplicationLicenseViewController loadView]
  -[SKUIApplicationLicenseViewController viewWillAppear:]
  -[SKUIApplicationLicenseViewController reloadData]
  -[SKUIApplicationLicenseViewController initWithLicenseAgreementURL:]
  -[SKUIApplicationLicenseViewController _displayPage:error:]
  -[SKUIApplicationLicenseViewController initWithLicenseAgreementPage:]


SKUILoadMoreDataConsumer : SSVURLDataConsumer /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSSet *unavailableItemIdentifiers

  // instance methods
  -[SKUILoadMoreDataConsumer .cxx_destruct]
  -[SKUILoadMoreDataConsumer objectForData:response:error:]
  -[SKUILoadMoreDataConsumer setUnavailableItemIdentifiers:]
  -[SKUILoadMoreDataConsumer unavailableItemIdentifiers]
  -[SKUILoadMoreDataConsumer _itemsWithDictionary:]


SKUIScrollingSegmentedControllerCollectionView : SKUIViewControllerContainerCollectionView
 @property  <SKUIScrollingSegmentedControllerCollectionViewDelegate> *delegate
 @property  BOOL performingLayout

  // instance methods
  -[SKUIScrollingSegmentedControllerCollectionView layoutSubviews]
  -[SKUIScrollingSegmentedControllerCollectionView isPerformingLayout]


SKUICheckboxInputViewElement : SKUIInputViewElement
 @property  BOOL selected

  // instance methods
  -[SKUICheckboxInputViewElement isSelected]
  -[SKUICheckboxInputViewElement setSelected:]
  -[SKUICheckboxInputViewElement elementType]
  -[SKUICheckboxInputViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUICheckboxInputViewElement applyUpdatesWithElement:]


SKUIDefaultCardLayout : SKUICardLayout
  // instance methods
  -[SKUIDefaultCardLayout attributedStringForButton:]
  -[SKUIDefaultCardLayout attributedStringForLabel:]
  -[SKUIDefaultCardLayout topInsetForViewElement:previousViewElement:width:]


SKUIGiftRecipientTableViewCell : UITableViewCell /usr/lib/libobjc.A.dylib <CNContactPickerDelegate, MFComposeRecipientViewDelegate, SKUIGiftContactSearchDelegate>
 @property  BOOL didLayoutSubviews
 @property  BOOL leftToRight
 @property  NSAttributedString *attributedPlaceholder
 @property  NSString *label
 @property  NSArray *recipientAddresses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIGiftRecipientTableViewCell dealloc]
  -[SKUIGiftRecipientTableViewCell .cxx_destruct]
  -[SKUIGiftRecipientTableViewCell setLabel:]
  -[SKUIGiftRecipientTableViewCell label]
  -[SKUIGiftRecipientTableViewCell recipientAddresses]
  -[SKUIGiftRecipientTableViewCell sizeThatFits:]
  -[SKUIGiftRecipientTableViewCell layoutSubviews]
  -[SKUIGiftRecipientTableViewCell initWithStyle:reuseIdentifier:]
  -[SKUIGiftRecipientTableViewCell setLeftToRight:]
  -[SKUIGiftRecipientTableViewCell leftToRight]
  -[SKUIGiftRecipientTableViewCell attributedPlaceholder]
  -[SKUIGiftRecipientTableViewCell setAttributedPlaceholder:]
  -[SKUIGiftRecipientTableViewCell _contactStore]
  -[SKUIGiftRecipientTableViewCell contactPickerDidCancel:]
  -[SKUIGiftRecipientTableViewCell contactPicker:didSelectContactProperty:]
  -[SKUIGiftRecipientTableViewCell setRecipientAddresses:]
  -[SKUIGiftRecipientTableViewCell composeRecipientViewDidFinishPickingRecipient:]
  -[SKUIGiftRecipientTableViewCell composeRecipientView:didAddRecipient:]
  -[SKUIGiftRecipientTableViewCell composeRecipientView:didFinishEnteringAddress:]
  -[SKUIGiftRecipientTableViewCell composeRecipientView:textDidChange:]
  -[SKUIGiftRecipientTableViewCell composeRecipientView:didChangeSize:]
  -[SKUIGiftRecipientTableViewCell recipientViewDidResignFirstResponder:]
  -[SKUIGiftRecipientTableViewCell composeRecipientViewRequestAddRecipient:]
  -[SKUIGiftRecipientTableViewCell composeRecipientView:composeRecipientForAddress:]
  -[SKUIGiftRecipientTableViewCell composeRecipientViewDidBecomeFirstResponder:]
  -[SKUIGiftRecipientTableViewCell presentSearchResultsPopover:animated:]
  -[SKUIGiftRecipientTableViewCell presentPeoplePickerPopover:animated:]
  -[SKUIGiftRecipientTableViewCell setDidLayoutSubviews:]
  -[SKUIGiftRecipientTableViewCell didLayoutSubviews]
  -[SKUIGiftRecipientTableViewCell _sendDismissContactPicker]
  -[SKUIGiftRecipientTableViewCell _resetSearchController]
  -[SKUIGiftRecipientTableViewCell _sendDidChangeRecipients]
  -[SKUIGiftRecipientTableViewCell _sendDidUpdateSearchController]
  -[SKUIGiftRecipientTableViewCell searchController:didSelectRecipient:]
  -[SKUIGiftRecipientTableViewCell searchControllerDidFinishSearch:]


SKUIGiftContactSearchController : NSObject /usr/lib/libc++.1.dylib <MFContactsSearchConsumer, UITableViewDataSource, UITableViewDelegate>
 @property  <SKUIGiftContactSearchDelegate> *delegate
 @property  long long numberOfResults
 @property  UIView *searchResultsView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIGiftContactSearchController dealloc]
  -[SKUIGiftContactSearchController delegate]
  -[SKUIGiftContactSearchController setDelegate:]
  -[SKUIGiftContactSearchController .cxx_destruct]
  -[SKUIGiftContactSearchController tableView:numberOfRowsInSection:]
  -[SKUIGiftContactSearchController tableView:cellForRowAtIndexPath:]
  -[SKUIGiftContactSearchController _tableView]
  -[SKUIGiftContactSearchController tableView:didSelectRowAtIndexPath:]
  -[SKUIGiftContactSearchController numberOfResults]
  -[SKUIGiftContactSearchController cancelSearch]
  -[SKUIGiftContactSearchController consumeAutocompleteSearchResults:taskID:]
  -[SKUIGiftContactSearchController finishedSearchingForAutocompleteResults]
  -[SKUIGiftContactSearchController searchResultsView]
  -[SKUIGiftContactSearchController searchForText:]
  -[SKUIGiftContactSearchController resetSearch]
  -[SKUIGiftContactSearchController _setResults:]
  -[SKUIGiftContactSearchController _finishSearchWithResults:]
  -[SKUIGiftContactSearchController makeChildLabelsSupportDarkMode:]


SKUIMediaCollectionViewCell : SKUICollectionViewCell
 @property  {UIEdgeInsets=dddd} contentInset
 @property  SKUIEmbeddedMediaView *mediaView

  // instance methods
  -[SKUIMediaCollectionViewCell .cxx_destruct]
  -[SKUIMediaCollectionViewCell setBackgroundColor:]
  -[SKUIMediaCollectionViewCell layoutSubviews]
  -[SKUIMediaCollectionViewCell setContentInset:]
  -[SKUIMediaCollectionViewCell contentInset]
  -[SKUIMediaCollectionViewCell mediaView]


SKUIGiftConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIClientContext *clientContext
 @property  NSString *currencySymbol
 @property  long long currencySymbolPosition
 @property  NSArray *fixedGiftAmountLabels
 @property  NSArray *fixedGiftAmountValues
 @property  {_NSRange=QQ} giftAmountRange
 @property  NSURL *giftPurchaseURL
 @property  NSURL *giftValidationURL
 @property  long long maximumMessageLength
 @property  NSString *senderEmailAddress
 @property  NSString *senderName
 @property  NSString *storeFrontName
 @property  NSArray *themes

  // instance methods
  -[SKUIGiftConfiguration .cxx_destruct]
  -[SKUIGiftConfiguration currencySymbol]
  -[SKUIGiftConfiguration addObserver:]
  -[SKUIGiftConfiguration removeObserver:]
  -[SKUIGiftConfiguration senderEmailAddress]
  -[SKUIGiftConfiguration clientContext]
  -[SKUIGiftConfiguration initWithOperationQueue:clientContext:]
  -[SKUIGiftConfiguration loadConfigurationWithCompletionBlock:]
  -[SKUIGiftConfiguration senderName]
  -[SKUIGiftConfiguration giftValidationURL]
  -[SKUIGiftConfiguration storeFrontName]
  -[SKUIGiftConfiguration maximumMessageLength]
  -[SKUIGiftConfiguration fixedGiftAmountLabels]
  -[SKUIGiftConfiguration fixedGiftAmountValues]
  -[SKUIGiftConfiguration currencySymbolPosition]
  -[SKUIGiftConfiguration themes]
  -[SKUIGiftConfiguration _finishLoadWithResponse:error:block:]
  -[SKUIGiftConfiguration _setLogoImage:forCharity:]
  -[SKUIGiftConfiguration _loadThemeImages]
  -[SKUIGiftConfiguration _finishLoadAccountInfoWithResponse:error:block:]
  -[SKUIGiftConfiguration _setHeaderImage:forTheme:]
  -[SKUIGiftConfiguration charityForIdentifier:]
  -[SKUIGiftConfiguration loadCachedConfiguration]
  -[SKUIGiftConfiguration loadLogoForCharity:]
  -[SKUIGiftConfiguration logoImageForCharity:]
  -[SKUIGiftConfiguration giftAmountRange]
  -[SKUIGiftConfiguration giftPurchaseURL]


SKUIGiftValidator : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL validating
 @property  NSOperationQueue *operationQueue

  // instance methods
  -[SKUIGiftValidator .cxx_destruct]
  -[SKUIGiftValidator operationQueue]
  -[SKUIGiftValidator setOperationQueue:]
  -[SKUIGiftValidator cancelValidation]
  -[SKUIGiftValidator isValidating]
  -[SKUIGiftValidator initWithValidationURL:clientContext:]
  -[SKUIGiftValidator validateGift:withCompletionBlock:]
  -[SKUIGiftValidator _validateWithBodyDictionary:completionBlock:]
  -[SKUIGiftValidator _finishValidationWithResponse:error:attemptNumber:block:]
  -[SKUIGiftValidator validateDonation:withCompletionBlock:]


SKUIStorePageSplitCollectionViewLayout : _UICollectionViewCompositionLayout /usr/lib/libobjc.A.dylib <SKUIStorePageCollectionViewLayout>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *backdropGroupName
 @property  NSArray *indexPathsForPinningItems
 @property  NSArray *indexPathsForGradientItems
 @property  BOOL rendersWithParallax
 @property  BOOL rendersWithPerspective

  // instance methods
  -[SKUIStorePageSplitCollectionViewLayout init]
  -[SKUIStorePageSplitCollectionViewLayout .cxx_destruct]
  -[SKUIStorePageSplitCollectionViewLayout backdropGroupName]
  -[SKUIStorePageSplitCollectionViewLayout setBackdropGroupName:]
  -[SKUIStorePageSplitCollectionViewLayout shouldInvalidateLayoutForBoundsChange:]
  -[SKUIStorePageSplitCollectionViewLayout sublayouts]
  -[SKUIStorePageSplitCollectionViewLayout _frameForLayout:offset:relativeToEdges:fromSiblingLayout:]
  -[SKUIStorePageSplitCollectionViewLayout addSublayout:forSections:offset:relativeToEdges:fromSiblingLayout:]
  -[SKUIStorePageSplitCollectionViewLayout addSublayout:forItems:inSection:offset:relativeToEdges:fromSiblingLayout:]
  -[SKUIStorePageSplitCollectionViewLayout addSublayout:forElementKinds:]
  -[SKUIStorePageSplitCollectionViewLayout removeSublayout:]
  -[SKUIStorePageSplitCollectionViewLayout rendersWithParallax]
  -[SKUIStorePageSplitCollectionViewLayout rendersWithPerspective]
  -[SKUIStorePageSplitCollectionViewLayout setRendersWithPerspective:]
  -[SKUIStorePageSplitCollectionViewLayout setRendersWithParallax:]
  -[SKUIStorePageSplitCollectionViewLayout _newStorePageCollectionViewLayout]
  -[SKUIStorePageSplitCollectionViewLayout indexPathsForPinningItems]
  -[SKUIStorePageSplitCollectionViewLayout addSublayoutsUsingSplitsDescription:]
  -[SKUIStorePageSplitCollectionViewLayout layoutAttributesForUnpinnedItemAtIndexPath:]
  -[SKUIStorePageSplitCollectionViewLayout pinnedLayoutAttributesForItemsInRect:]
  -[SKUIStorePageSplitCollectionViewLayout indexPathsForGradientItems]
  -[SKUIStorePageSplitCollectionViewLayout setIndexPathsForGradientItems:]
  -[SKUIStorePageSplitCollectionViewLayout _createSectionsToIndexRangesMapTableIfNeededForSublayout:]


SKUIGiftValidationResponse : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *errorString
 @property  NSString *giftKey
 @property  NSString *totalGiftAmountString
 @property  BOOL valid

  // instance methods
  -[SKUIGiftValidationResponse isValid]
  -[SKUIGiftValidationResponse .cxx_destruct]
  -[SKUIGiftValidationResponse totalGiftAmountString]
  -[SKUIGiftValidationResponse errorString]
  -[SKUIGiftValidationResponse initWithValidationDictionary:]
  -[SKUIGiftValidationResponse giftKey]


SKUIShelfViewElement : SKUIViewElement
 @property  long long numberOfRows
 @property  NSString *slideshowTitle
 @property  @? shelfItemViewElementValidator

  // instance methods
  -[SKUIShelfViewElement .cxx_destruct]
  -[SKUIShelfViewElement numberOfRows]
  -[SKUIShelfViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIShelfViewElement applyUpdatesWithElement:]
  -[SKUIShelfViewElement enumerateChildrenUsingBlock:]
  -[SKUIShelfViewElement pageComponentType]
  -[SKUIShelfViewElement slideshowTitle]
  -[SKUIShelfViewElement shelfItemViewElementValidator]
  -[SKUIShelfViewElement setShelfItemViewElementValidator:]


SKUIRedeemTextField : UITextField /usr/lib/libobjc.A.dylib
 @property  BOOL backdropBackground
 @property  BOOL suppressBorder

  // instance methods
  -[SKUIRedeemTextField .cxx_destruct]
  -[SKUIRedeemTextField initWithFrame:]
  -[SKUIRedeemTextField layoutSubviews]
  -[SKUIRedeemTextField textRectForBounds:]
  -[SKUIRedeemTextField editingRectForBounds:]
  -[SKUIRedeemTextField placeholderRectForBounds:]
  -[SKUIRedeemTextField setBackdropBackground:]
  -[SKUIRedeemTextField setSuppressBorder:]
  -[SKUIRedeemTextField backdropBackground]
  -[SKUIRedeemTextField suppressBorder]


SKUITabBarItem : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *tabIdentifier
 @property  BOOL alwaysCreatesRootViewController
 @property  long long barTintStyle
 @property  NSString *metricsIdentifier
 @property  NSURL *rootURL
 @property  UIViewController *customRootViewController
 @property  Class rootViewControllerClass
 @property  UITabBarItem *underlyingTabBarItem
 @property  UIColor *userInterfaceTintColor

  // instance methods
  -[SKUITabBarItem init]
  -[SKUITabBarItem isEqual:]
  -[SKUITabBarItem copyWithZone:]
  -[SKUITabBarItem .cxx_destruct]
  -[SKUITabBarItem barTintStyle]
  -[SKUITabBarItem underlyingTabBarItem]
  -[SKUITabBarItem tabIdentifier]
  -[SKUITabBarItem customRootViewController]
  -[SKUITabBarItem setUnderlyingTabBarItem:]
  -[SKUITabBarItem alwaysCreatesRootViewController]
  -[SKUITabBarItem rootViewControllerClass]
  -[SKUITabBarItem metricsIdentifier]
  -[SKUITabBarItem userInterfaceTintColor]
  -[SKUITabBarItem rootURL]
  -[SKUITabBarItem initWithTabIdentifier:]
  -[SKUITabBarItem setAlwaysCreatesRootViewController:]
  -[SKUITabBarItem setBarTintStyle:]
  -[SKUITabBarItem setCustomRootViewController:]
  -[SKUITabBarItem setMetricsIdentifier:]
  -[SKUITabBarItem setRootURL:]
  -[SKUITabBarItem setRootViewControllerClass:]
  -[SKUITabBarItem setUserInterfaceTintColor:]


SKUIModalSourceViewProvider : NSObject /usr/lib/libc++.1.dylib
 @property  <SKUIModalSourceViewProviderDelegate> *delegate
 @property  UIView *originalSourceView
 @property  UIView *sourceView
 @property  UIBarButtonItem *sourceButtonBarItem
 @property  id userInfo

  // instance methods
  -[SKUIModalSourceViewProvider userInfo]
  -[SKUIModalSourceViewProvider delegate]
  -[SKUIModalSourceViewProvider setDelegate:]
  -[SKUIModalSourceViewProvider .cxx_destruct]
  -[SKUIModalSourceViewProvider setUserInfo:]
  -[SKUIModalSourceViewProvider sourceView]
  -[SKUIModalSourceViewProvider setSourceView:]
  -[SKUIModalSourceViewProvider setOriginalSourceView:]
  -[SKUIModalSourceViewProvider setSourceButtonBarItem:]
  -[SKUIModalSourceViewProvider sourceButtonBarItem]
  -[SKUIModalSourceViewProvider originalSourceView]
  -[SKUIModalSourceViewProvider animationView]
  -[SKUIModalSourceViewProvider hideOriginalSourceView]
  -[SKUIModalSourceViewProvider showOriginalSourceView]


SKUINativeViewPlaceholderTemplateViewElement : SKUIViewElement

SKUIDownloadsCollectionViewCell : UICollectionViewCell /usr/lib/libobjc.A.dylib
 @property  SKUIDownloadsCellView *cellView
 @property  long long cellState

  // instance methods
  -[SKUIDownloadsCollectionViewCell .cxx_destruct]
  -[SKUIDownloadsCollectionViewCell cellState]
  -[SKUIDownloadsCollectionViewCell initWithFrame:]
  -[SKUIDownloadsCollectionViewCell layoutSubviews]
  -[SKUIDownloadsCollectionViewCell setSelected:]
  -[SKUIDownloadsCollectionViewCell cellView]
  -[SKUIDownloadsCollectionViewCell setCellState:]
  -[SKUIDownloadsCollectionViewCell _reloadEditState]


SKUIEditorialLockupCellLayout : SKUIItemCellLayout
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  long long layoutStyle
 @property  unsigned long visibleFields
 @property  SKUILockupItemCellLayout *lockupCellLayout
 @property  SKUITextBoxView *textBoxView

  // class methods
  +[SKUIEditorialLockupCellLayout editorialWidthForCellWidth:lockupStyle:]
  +[SKUIEditorialLockupCellLayout _imagePaddingForArtworkSize:]

  // instance methods
  -[SKUIEditorialLockupCellLayout .cxx_destruct]
  -[SKUIEditorialLockupCellLayout setBackgroundColor:]
  -[SKUIEditorialLockupCellLayout layoutSubviews]
  -[SKUIEditorialLockupCellLayout contentInsets]
  -[SKUIEditorialLockupCellLayout setLayoutStyle:]
  -[SKUIEditorialLockupCellLayout layoutStyle]
  -[SKUIEditorialLockupCellLayout setContentInsets:]
  -[SKUIEditorialLockupCellLayout iconImageView]
  -[SKUIEditorialLockupCellLayout itemState]
  -[SKUIEditorialLockupCellLayout iconImage]
  -[SKUIEditorialLockupCellLayout setRestricted:]
  -[SKUIEditorialLockupCellLayout setIconImage:]
  -[SKUIEditorialLockupCellLayout setClientContext:]
  -[SKUIEditorialLockupCellLayout itemOffer]
  -[SKUIEditorialLockupCellLayout setColoringWithColorScheme:]
  -[SKUIEditorialLockupCellLayout setVisibleFields:]
  -[SKUIEditorialLockupCellLayout visibleFields]
  -[SKUIEditorialLockupCellLayout setItemOffer:]
  -[SKUIEditorialLockupCellLayout _lockupView]
  -[SKUIEditorialLockupCellLayout setItemState:animated:]
  -[SKUIEditorialLockupCellLayout applyEditorialLayout:withOrientation:]
  -[SKUIEditorialLockupCellLayout setIconImageHidden:]
  -[SKUIEditorialLockupCellLayout textBoxView]
  -[SKUIEditorialLockupCellLayout lockupCellLayout]
  -[SKUIEditorialLockupCellLayout setItemOfferButtonAppearance:]
  -[SKUIEditorialLockupCellLayout isIconImageHidden]
  -[SKUIEditorialLockupCellLayout layoutForItemOfferChange]
  -[SKUIEditorialLockupCellLayout itemOfferNoticeString]
  -[SKUIEditorialLockupCellLayout setItemOfferNoticeString:]
  -[SKUIEditorialLockupCellLayout _editorialContainerView]
  -[SKUIEditorialLockupCellLayout _editorialCellLayout]
  -[SKUIEditorialLockupCellLayout _showsItemOfferUnderEditorial]
  -[SKUIEditorialLockupCellLayout _isItemOfferButtonHidden]


SKUIAttributedStringView : UIView /usr/lib/libobjc.A.dylib <SKUIReusableView>
 @property  double baselineOffset
 @property  double firstBaselineOffset
 @property  long long firstLineTopInset
 @property  SKUIAttributedStringLayout *layout
 @property  NSArray *requiredBadges
 @property  long long badgePlacement
 @property  long long stringTreatment
 @property  UIColor *treatmentColor
 @property  UIColor *textColor
 @property  BOOL textColorFollowsTintColor
 @property  BOOL usesTallCharacterSet
 @property  BOOL containsLinks
 @property  <SKUILinkHandler> *linkDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIAttributedStringView sizeWithLayout:treatment:]

  // instance methods
  -[SKUIAttributedStringView .cxx_destruct]
  -[SKUIAttributedStringView layout]
  -[SKUIAttributedStringView setLayout:]
  -[SKUIAttributedStringView baselineOffset]
  -[SKUIAttributedStringView firstBaselineOffset]
  -[SKUIAttributedStringView initWithFrame:]
  -[SKUIAttributedStringView setTextColor:]
  -[SKUIAttributedStringView sizeThatFits:]
  -[SKUIAttributedStringView touchesBegan:withEvent:]
  -[SKUIAttributedStringView touchesMoved:withEvent:]
  -[SKUIAttributedStringView touchesEnded:withEvent:]
  -[SKUIAttributedStringView touchesCancelled:withEvent:]
  -[SKUIAttributedStringView tintColorDidChange]
  -[SKUIAttributedStringView drawRect:]
  -[SKUIAttributedStringView textColor]
  -[SKUIAttributedStringView badgePlacement]
  -[SKUIAttributedStringView setBadgePlacement:]
  -[SKUIAttributedStringView setStringTreatment:]
  -[SKUIAttributedStringView setTreatmentColor:]
  -[SKUIAttributedStringView containsLinks]
  -[SKUIAttributedStringView setContainsLinks:]
  -[SKUIAttributedStringView linkDelegate]
  -[SKUIAttributedStringView setLinkDelegate:]
  -[SKUIAttributedStringView setTextColorFollowsTintColor:]
  -[SKUIAttributedStringView setRequiredBadges:]
  -[SKUIAttributedStringView viewWasRecycled]
  -[SKUIAttributedStringView usesTallCharacterSet]
  -[SKUIAttributedStringView _reloadTopInset]
  -[SKUIAttributedStringView _touchInsideLinkText:linkTextRange:]
  -[SKUIAttributedStringView _setTrackingTouch:]
  -[SKUIAttributedStringView _setTouchInside:]
  -[SKUIAttributedStringView _setupTapLocatorContainer]
  -[SKUIAttributedStringView setFirstLineTopInset:]
  -[SKUIAttributedStringView requiredBadges]
  -[SKUIAttributedStringView stringTreatment]
  -[SKUIAttributedStringView treatmentColor]
  -[SKUIAttributedStringView firstLineTopInset]
  -[SKUIAttributedStringView textColorFollowsTintColor]


SKUIAttributedStringWrapperView : SKUIAttributedStringView
 @property  SKUIAttributedStringView *delegateView

  // instance methods
  -[SKUIAttributedStringWrapperView .cxx_destruct]
  -[SKUIAttributedStringWrapperView layout]
  -[SKUIAttributedStringWrapperView setLayout:]
  -[SKUIAttributedStringWrapperView baselineOffset]
  -[SKUIAttributedStringWrapperView firstBaselineOffset]
  -[SKUIAttributedStringWrapperView initWithFrame:]
  -[SKUIAttributedStringWrapperView setTextColor:]
  -[SKUIAttributedStringWrapperView sizeThatFits:]
  -[SKUIAttributedStringWrapperView layoutSubviews]
  -[SKUIAttributedStringWrapperView textColor]
  -[SKUIAttributedStringWrapperView delegateView]
  -[SKUIAttributedStringWrapperView badgePlacement]
  -[SKUIAttributedStringWrapperView setBadgePlacement:]
  -[SKUIAttributedStringWrapperView setStringTreatment:]
  -[SKUIAttributedStringWrapperView setTreatmentColor:]
  -[SKUIAttributedStringWrapperView setTextColorFollowsTintColor:]
  -[SKUIAttributedStringWrapperView setRequiredBadges:]
  -[SKUIAttributedStringWrapperView viewWasRecycled]
  -[SKUIAttributedStringWrapperView usesTallCharacterSet]
  -[SKUIAttributedStringWrapperView setFirstLineTopInset:]
  -[SKUIAttributedStringWrapperView requiredBadges]
  -[SKUIAttributedStringWrapperView stringTreatment]
  -[SKUIAttributedStringWrapperView treatmentColor]
  -[SKUIAttributedStringWrapperView firstLineTopInset]
  -[SKUIAttributedStringWrapperView textColorFollowsTintColor]


SKUICellLayoutView : UIView /usr/lib/libobjc.A.dylib
 @property  SKUICellLayout *layout

  // instance methods
  -[SKUICellLayoutView .cxx_destruct]
  -[SKUICellLayoutView layout]
  -[SKUICellLayoutView setLayout:]
  -[SKUICellLayoutView setBackgroundColor:]
  -[SKUICellLayoutView layoutSubviews]


SKUIMediaPlayer : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIMediaPlayerItemStatus *playerItem
 @property  MPAVController *player
 @property  MPAVItem *currentItem
 @property  float rate
 @property  id periodicTimeObserver
 @property  BOOL playing

  // instance methods
  -[SKUIMediaPlayer .cxx_destruct]
  -[SKUIMediaPlayer playing]
  -[SKUIMediaPlayer setCurrentItem:]
  -[SKUIMediaPlayer currentItem]
  -[SKUIMediaPlayer setRate:]
  -[SKUIMediaPlayer rate]
  -[SKUIMediaPlayer setPlaying:]
  -[SKUIMediaPlayer player]
  -[SKUIMediaPlayer setPlayer:]
  -[SKUIMediaPlayer playerItem]
  -[SKUIMediaPlayer setPlayerItem:]
  -[SKUIMediaPlayer periodicTimeObserver]
  -[SKUIMediaPlayer setPeriodicTimeObserver:]


SKUIEditorialLockupCollectionViewCell : SKUIItemCollectionViewCell
 @property  SKUIEditorialLockupCellLayout *layout

  // instance methods
  -[SKUIEditorialLockupCollectionViewCell .cxx_destruct]
  -[SKUIEditorialLockupCollectionViewCell layout]
  -[SKUIEditorialLockupCollectionViewCell initWithFrame:]
  -[SKUIEditorialLockupCollectionViewCell configureForItem:clientContext:]


SKUINavigationBarSectionController : NSObject /usr/lib/libc++.1.dylib <SKUIArtworkRequestDelegate>
 @property  UIView *view
 @property  SKUINavigationBarContext *context
 @property  SKUIViewElementLayoutContext *viewLayoutContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUINavigationBarSectionController dealloc]
  -[SKUINavigationBarSectionController .cxx_destruct]
  -[SKUINavigationBarSectionController context]
  -[SKUINavigationBarSectionController setContext:]
  -[SKUINavigationBarSectionController view]
  -[SKUINavigationBarSectionController viewForElementIdentifier:]
  -[SKUINavigationBarSectionController artworkRequest:didLoadImage:]
  -[SKUINavigationBarSectionController reloadAfterDocumentUpdateWithNavigationItem:]
  -[SKUINavigationBarSectionController willAppearInNavigationBar]
  -[SKUINavigationBarSectionController reloadSectionViews]
  -[SKUINavigationBarSectionController barButtonItemForElementIdentifier:]
  -[SKUINavigationBarSectionController viewLayoutContext]


SKUIRedeemConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  long long category
 @property  SKUIClientContext *clientContext
 @property  NSOperationQueue *operationQueue
 @property  UIImage *inputImage
 @property  UIImage *landingImage
 @property  UIImage *successImage
 @property  SKUIITunesPassConfiguration *ITunesPassConfiguration

  // instance methods
  -[SKUIRedeemConfiguration .cxx_destruct]
  -[SKUIRedeemConfiguration category]
  -[SKUIRedeemConfiguration operationQueue]
  -[SKUIRedeemConfiguration inputImage]
  -[SKUIRedeemConfiguration clientContext]
  -[SKUIRedeemConfiguration initWithOperationQueue:category:clientContext:]
  -[SKUIRedeemConfiguration loadConfigurationWithCompletionBlock:]
  -[SKUIRedeemConfiguration ITunesPassConfiguration]
  -[SKUIRedeemConfiguration landingImage]
  -[SKUIRedeemConfiguration successImage]
  -[SKUIRedeemConfiguration _loadConfigurationWithURLBagDictionary:completionBlock:]
  -[SKUIRedeemConfiguration _setLandingImage:]
  -[SKUIRedeemConfiguration _setSuccessImage:]
  -[SKUIRedeemConfiguration _setInputImage:]
  -[SKUIRedeemConfiguration _loadDefaultImages]
  -[SKUIRedeemConfiguration _redeemPreflightRequestBodyData]
  -[SKUIRedeemConfiguration _didLoadWithResponseDictionary:]


SKUIEditorialCellLayout : SKUICellLayout <SKUIEditorialLinkViewDelegate>
 @property  {UIEdgeInsets=dddd} contentInset
 @property  SKUITextBoxView *textBoxView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIEditorialCellLayout dealloc]
  -[SKUIEditorialCellLayout .cxx_destruct]
  -[SKUIEditorialCellLayout setBackgroundColor:]
  -[SKUIEditorialCellLayout layoutSubviews]
  -[SKUIEditorialCellLayout setContentInset:]
  -[SKUIEditorialCellLayout contentInset]
  -[SKUIEditorialCellLayout initWithParentView:]
  -[SKUIEditorialCellLayout _linkView]
  -[SKUIEditorialCellLayout setColoringWithColorScheme:]
  -[SKUIEditorialCellLayout applyEditorialLayout:withOrientation:expanded:]
  -[SKUIEditorialCellLayout textBoxView]
  -[SKUIEditorialCellLayout editorialLinkView:didSelectLink:]
  -[SKUIEditorialCellLayout resetContentInset]
  -[SKUIEditorialCellLayout initWithCollectionViewCell:]
  -[SKUIEditorialCellLayout _textBoxView]
  -[SKUIEditorialCellLayout _initContentInset]


SKUIImagePlaceholder : NSObject /usr/lib/libc++.1.dylib
 @property  UIColor *backgroundColor
 @property  UIColor *borderColor
 @property  double borderWidth
 @property  @? cornerPathBlock

  // instance methods
  -[SKUIImagePlaceholder .cxx_destruct]
  -[SKUIImagePlaceholder backgroundColor]
  -[SKUIImagePlaceholder borderWidth]
  -[SKUIImagePlaceholder borderColor]
  -[SKUIImagePlaceholder cornerPathBlock]
  -[SKUIImagePlaceholder initWithBackgroundColor:borderColor:borderWidth:cornerRadius:]
  -[SKUIImagePlaceholder initWithBackgroundColor:borderColor:borderWidth:cornerPathBlock:]


SKUIDownloadsViewController : SKUIViewController <SSDownloadManagerObserver, SKUIDownloadsChildViewControllerDelegate>
 @property  NSArray *downloads
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIDownloadsViewController _sizeClassForSize:]

  // instance methods
  -[SKUIDownloadsViewController dealloc]
  -[SKUIDownloadsViewController .cxx_destruct]
  -[SKUIDownloadsViewController downloadManager:downloadStatesDidChange:]
  -[SKUIDownloadsViewController downloadManagerDownloadsDidChange:]
  -[SKUIDownloadsViewController loadView]
  -[SKUIDownloadsViewController initWithNibName:bundle:]
  -[SKUIDownloadsViewController viewDidLayoutSubviews]
  -[SKUIDownloadsViewController downloads]
  -[SKUIDownloadsViewController setDownloads:]
  -[SKUIDownloadsViewController childViewController:artworkForDownload:]
  -[SKUIDownloadsViewController childViewController:performActionForDownload:]
  -[SKUIDownloadsViewController childViewController:removeDownloads:]
  -[SKUIDownloadsViewController _reloadView]
  -[SKUIDownloadsViewController _reloadManagerFromServer]
  -[SKUIDownloadsViewController _reloadBadge]
  -[SKUIDownloadsViewController _reloadViewControllerWithSize:]
  -[SKUIDownloadsViewController _setArtwork:forURLString:]


SKUIMediaComponent : SKUIPageComponent <SSMetricsEventFieldProvider>
 @property  NSString *accessibilityLabel
 @property  long long alignment
 @property  double duration
 @property  SKUILink *link
 @property  long long mediaIdentifier
 @property  long long mediaAppearance
 @property  long long mediaType
 @property  NSString *mediaURLString
 @property  <SKUIArtworkProviding> *thumbnailArtworkProvider
 @property  NSString *title
 @property  float titleFontSize
 @property  long long titleFontWeight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIMediaComponent .cxx_destruct]
  -[SKUIMediaComponent title]
  -[SKUIMediaComponent duration]
  -[SKUIMediaComponent alignment]
  -[SKUIMediaComponent mediaType]
  -[SKUIMediaComponent accessibilityLabel]
  -[SKUIMediaComponent link]
  -[SKUIMediaComponent componentType]
  -[SKUIMediaComponent mediaIdentifier]
  -[SKUIMediaComponent valueForMetricsField:]
  -[SKUIMediaComponent initWithCustomPageContext:]
  -[SKUIMediaComponent initWithFeaturedContentContext:kind:]
  -[SKUIMediaComponent metricsElementName]
  -[SKUIMediaComponent mediaURLString]
  -[SKUIMediaComponent initWithArtworkProvider:appearance:]
  -[SKUIMediaComponent bestThumbnailForWidth:]
  -[SKUIMediaComponent mediaAppearance]
  -[SKUIMediaComponent bestThumbnailArtwork]
  -[SKUIMediaComponent initWithArtwork:]
  -[SKUIMediaComponent initWithArtworkProvider:]
  -[SKUIMediaComponent titleFontSize]
  -[SKUIMediaComponent titleFontWeight]
  -[SKUIMediaComponent thumbnailArtworkProvider]


SKUIIndexBarViewElement : SKUIViewElement

SKUIDownloadsCellView : UIView /usr/lib/libobjc.A.dylib
 @property  NSAttributedString *attributedTitle
 @property  NSString *subtitle
 @property  UIImage *image
 @property  double progress
 @property  long long buttonType
 @property  UIButton *button
 @property  BOOL isPad

  // instance methods
  -[SKUIDownloadsCellView init]
  -[SKUIDownloadsCellView .cxx_destruct]
  -[SKUIDownloadsCellView progress]
  -[SKUIDownloadsCellView setAttributedTitle:]
  -[SKUIDownloadsCellView attributedTitle]
  -[SKUIDownloadsCellView image]
  -[SKUIDownloadsCellView setImage:]
  -[SKUIDownloadsCellView subtitle]
  -[SKUIDownloadsCellView setProgress:]
  -[SKUIDownloadsCellView setBackgroundColor:]
  -[SKUIDownloadsCellView button]
  -[SKUIDownloadsCellView layoutSubviews]
  -[SKUIDownloadsCellView setSubtitle:]
  -[SKUIDownloadsCellView buttonType]
  -[SKUIDownloadsCellView isPad]
  -[SKUIDownloadsCellView setButtonType:]
  -[SKUIDownloadsCellView setIsPad:]


SKUIMenuViewElement : SKUIViewElement
 @property  NSArray *menuItemTitles
 @property  SKUILabelViewElement *menuLabel
 @property  long long selectedItemIndex
 @property  SKUIItemViewElement *titleItem

  // instance methods
  -[SKUIMenuViewElement .cxx_destruct]
  -[SKUIMenuViewElement isEnabled]
  -[SKUIMenuViewElement titleItem]
  -[SKUIMenuViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIMenuViewElement applyUpdatesWithElement:]
  -[SKUIMenuViewElement selectedItemIndex]
  -[SKUIMenuViewElement dispatchEventOfType:forItemAtIndex:]
  -[SKUIMenuViewElement menuItemTitles]
  -[SKUIMenuViewElement _enumerateItemElementsUsingBlock:]
  -[SKUIMenuViewElement menuLabel]


SKUISettingsFamilyViewElement : SKUIViewElement

SKUICircleProgressIndicator : UIView /usr/lib/libobjc.A.dylib
 @property  UIImage *image
 @property  {UIEdgeInsets=dddd} imageInsets
 @property  BOOL indeterminate
 @property  double progress
 @property  BOOL highlighted

  // class methods
  +[SKUICircleProgressIndicator _fillImage]
  +[SKUICircleProgressIndicator _borderImage]
  +[SKUICircleProgressIndicator _indeterminateImage]

  // instance methods
  -[SKUICircleProgressIndicator dealloc]
  -[SKUICircleProgressIndicator .cxx_destruct]
  -[SKUICircleProgressIndicator progress]
  -[SKUICircleProgressIndicator isIndeterminate]
  -[SKUICircleProgressIndicator setIndeterminate:]
  -[SKUICircleProgressIndicator image]
  -[SKUICircleProgressIndicator setImage:]
  -[SKUICircleProgressIndicator setProgress:]
  -[SKUICircleProgressIndicator setBackgroundColor:]
  -[SKUICircleProgressIndicator initWithFrame:]
  -[SKUICircleProgressIndicator sizeThatFits:]
  -[SKUICircleProgressIndicator setImageInsets:]
  -[SKUICircleProgressIndicator imageInsets]
  -[SKUICircleProgressIndicator layoutSubviews]
  -[SKUICircleProgressIndicator isHighlighted]
  -[SKUICircleProgressIndicator setHighlighted:]
  -[SKUICircleProgressIndicator tintColorDidChange]
  -[SKUICircleProgressIndicator didMoveToWindow]
  -[SKUICircleProgressIndicator drawRect:]
  -[SKUICircleProgressIndicator setProgress:animated:]
  -[SKUICircleProgressIndicator _startIndeterminateAnimation]
  -[SKUICircleProgressIndicator _animateValueOnDisplayLink:]
  -[SKUICircleProgressIndicator _setHidesBorderView:]


SKUITrendingSearchDocumentViewController : SKUIViewController <SKUIDocumentViewController>
 @property  SKUITrendingSearchView *resultsView
 @property  SKUITrendingSearchTemplateElement *template
 @property  UIViewController *privacyViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUITrendingSearchDocumentViewController .cxx_destruct]
  -[SKUITrendingSearchDocumentViewController loadView]
  -[SKUITrendingSearchDocumentViewController viewWillLayoutSubviews]
  -[SKUITrendingSearchDocumentViewController viewDidAppear:]
  -[SKUITrendingSearchDocumentViewController setTemplate:]
  -[SKUITrendingSearchDocumentViewController template]
  -[SKUITrendingSearchDocumentViewController documentDidUpdate:]
  -[SKUITrendingSearchDocumentViewController impressionableViewElements]
  -[SKUITrendingSearchDocumentViewController initWithTemplateElement:]
  -[SKUITrendingSearchDocumentViewController _reloadResultsView]
  -[SKUITrendingSearchDocumentViewController resultsView]
  -[SKUITrendingSearchDocumentViewController _resultsViewContentInset]
  -[SKUITrendingSearchDocumentViewController resultsViewTapRecognized:]
  -[SKUITrendingSearchDocumentViewController searchResultButtonTapped:]
  -[SKUITrendingSearchDocumentViewController setResultsView:]
  -[SKUITrendingSearchDocumentViewController privacyViewController]
  -[SKUITrendingSearchDocumentViewController setPrivacyViewController:]


SKUIEmbeddedMediaView : UIControl /usr/lib/libobjc.A.dylib
 @property  <SKUIEmbeddedMediaViewDelegate> *delegate
 @property  long long mediaType
 @property  NSString *mediaURLString
 @property  long long playbackState
 @property  BOOL showsThumbnailReflection
 @property  long long thumbnailContentMode
 @property  UIImage *thumbnailImage

  // instance methods
  -[SKUIEmbeddedMediaView dealloc]
  -[SKUIEmbeddedMediaView delegate]
  -[SKUIEmbeddedMediaView setDelegate:]
  -[SKUIEmbeddedMediaView .cxx_destruct]
  -[SKUIEmbeddedMediaView mediaType]
  -[SKUIEmbeddedMediaView setBackgroundColor:]
  -[SKUIEmbeddedMediaView layoutSubviews]
  -[SKUIEmbeddedMediaView didMoveToWindow]
  -[SKUIEmbeddedMediaView _thumbnailView]
  -[SKUIEmbeddedMediaView setMediaType:]
  -[SKUIEmbeddedMediaView thumbnailImage]
  -[SKUIEmbeddedMediaView setThumbnailImage:]
  -[SKUIEmbeddedMediaView playbackState]
  -[SKUIEmbeddedMediaView _playbackStateChanged:]
  -[SKUIEmbeddedMediaView mediaURLString]
  -[SKUIEmbeddedMediaView setThumbnailContentMode:]
  -[SKUIEmbeddedMediaView showsThumbnailReflection]
  -[SKUIEmbeddedMediaView beginPlaybackAnimated:]
  -[SKUIEmbeddedMediaView setShowsThumbnailReflection:]
  -[SKUIEmbeddedMediaView setMediaURLString:]
  -[SKUIEmbeddedMediaView endPlaybackAnimated:]
  -[SKUIEmbeddedMediaView beginInlinePlaybackWithURL:]
  -[SKUIEmbeddedMediaView _tearDownMoviePlayer]
  -[SKUIEmbeddedMediaView _newMoviePlayerControllerWithURL:]
  -[SKUIEmbeddedMediaView thumbnailContentMode]
  -[SKUIEmbeddedMediaView _sizeToFitImageSize:bounds:]
  -[SKUIEmbeddedMediaView _sendPlaybackStateChanged]
  -[SKUIEmbeddedMediaView _didExitFullscreen:]
  -[SKUIEmbeddedMediaView _didFinishPlayback:]


SKUIFacebookPageSection : SKUIStorePageSection
 @property  SKUIFacebookPageComponent *pageComponent

  // instance methods
  -[SKUIFacebookPageSection dealloc]
  -[SKUIFacebookPageSection .cxx_destruct]
  -[SKUIFacebookPageSection _accountStore]
  -[SKUIFacebookPageSection _resetState]
  -[SKUIFacebookPageSection _accountStoreDidChangeNotification:]
  -[SKUIFacebookPageSection initWithPageComponent:]
  -[SKUIFacebookPageSection applyUpdateType:]
  -[SKUIFacebookPageSection willAppearInContext:]
  -[SKUIFacebookPageSection cellForIndexPath:]
  -[SKUIFacebookPageSection cellSizeForIndexPath:]
  -[SKUIFacebookPageSection numberOfCells]
  -[SKUIFacebookPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIFacebookPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIFacebookPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIFacebookPageSection _changeStatusToUserLiked:]
  -[SKUIFacebookPageSection _facebookView]
  -[SKUIFacebookPageSection _applyColorSchemeToFacebookView:]
  -[SKUIFacebookPageSection _facebookAccountsExist]
  -[SKUIFacebookPageSection _reloadLikeStatus]
  -[SKUIFacebookPageSection _reloadCollectionViewSection]
  -[SKUIFacebookPageSection _toggleLikeAction:]
  -[SKUIFacebookPageSection _finishLookupWithStatus:error:]


SKUICrossFadingTabBarButton : UIControl /usr/lib/libobjc.A.dylib
 @property  NSString *title
 @property  UIImage *image
 @property  UIImage *selectedImage
 @property  double selectionProgress

  // instance methods
  -[SKUICrossFadingTabBarButton .cxx_destruct]
  -[SKUICrossFadingTabBarButton title]
  -[SKUICrossFadingTabBarButton setTitle:]
  -[SKUICrossFadingTabBarButton image]
  -[SKUICrossFadingTabBarButton setImage:]
  -[SKUICrossFadingTabBarButton initWithFrame:]
  -[SKUICrossFadingTabBarButton layoutSubviews]
  -[SKUICrossFadingTabBarButton tintColorDidChange]
  -[SKUICrossFadingTabBarButton _setBadgeValue:]
  -[SKUICrossFadingTabBarButton setSelectedImage:]
  -[SKUICrossFadingTabBarButton selectedImage]
  -[SKUICrossFadingTabBarButton _positionBadge]
  -[SKUICrossFadingTabBarButton setSelectionProgress:]
  -[SKUICrossFadingTabBarButton selectionProgress]


_Badge : UILabel /usr/lib/libobjc.A.dylib
  // instance methods
  -[_Badge setText:]
  -[_Badge sizeThatFits:]
  -[_Badge initWithText:]
  -[_Badge drawTextInRect:]


SKUIJSTabBar : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIJSTabBar>
 @property  SKUIJSTabBarItem *selectedTab
 @property  NSArray *tabs
 @property  SKUIJSTabBarItem *transientTab

  // instance methods
  -[SKUIJSTabBar .cxx_destruct]
  -[SKUIJSTabBar tabs]
  -[SKUIJSTabBar selectedTab]
  -[SKUIJSTabBar setSelectedTab:]
  -[SKUIJSTabBar transientTab]
  -[SKUIJSTabBar sendOnUpdateWithCompletion:]
  -[SKUIJSTabBar initWithAppContext:controller:]
  -[SKUIJSTabBar sendOnUpdate]
  -[SKUIJSTabBar sendOnNeedsContentForTabBarItem:]
  -[SKUIJSTabBar _reloadTabBarItemsWithPreludeMainThreadWork:]
  -[SKUIJSTabBar _selectedTabBarItemForIndex:]


SKUIPageDividerCollectionViewCell : UICollectionViewCell /usr/lib/libobjc.A.dylib <SKUIViewElementView>
 @property  long long dividerType
 @property  double dividerHeight
 @property  double leftEdgeInset
 @property  double rightEdgeInset
 @property  long long verticalAlignment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIPageDividerCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIPageDividerCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIPageDividerCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIPageDividerCollectionViewCell sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIPageDividerCollectionViewCell .cxx_destruct]
  -[SKUIPageDividerCollectionViewCell verticalAlignment]
  -[SKUIPageDividerCollectionViewCell setVerticalAlignment:]
  -[SKUIPageDividerCollectionViewCell initWithFrame:]
  -[SKUIPageDividerCollectionViewCell layoutSubviews]
  -[SKUIPageDividerCollectionViewCell setContentInset:]
  -[SKUIPageDividerCollectionViewCell applyLayoutAttributes:]
  -[SKUIPageDividerCollectionViewCell dividerHeight]
  -[SKUIPageDividerCollectionViewCell dividerType]
  -[SKUIPageDividerCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIPageDividerCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIPageDividerCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIPageDividerCollectionViewCell viewForElementIdentifier:]
  -[SKUIPageDividerCollectionViewCell setColoringWithColorScheme:]
  -[SKUIPageDividerCollectionViewCell leftEdgeInset]
  -[SKUIPageDividerCollectionViewCell setLeftEdgeInset:]
  -[SKUIPageDividerCollectionViewCell rightEdgeInset]
  -[SKUIPageDividerCollectionViewCell setRightEdgeInset:]
  -[SKUIPageDividerCollectionViewCell setDividerType:]
  -[SKUIPageDividerCollectionViewCell setDividerHeight:]
  -[SKUIPageDividerCollectionViewCell setInsetColor:]
  -[SKUIPageDividerCollectionViewCell setColoringWithStyle:]


SKUIGalleryPageComponent : SKUIPageComponent
 @property  NSArray *childComponents
 @property  double cycleInterval
 @property  BOOL hidesPageIndicator

  // instance methods
  -[SKUIGalleryPageComponent .cxx_destruct]
  -[SKUIGalleryPageComponent componentType]
  -[SKUIGalleryPageComponent initWithCustomPageContext:]
  -[SKUIGalleryPageComponent metricsElementName]
  -[SKUIGalleryPageComponent cycleInterval]
  -[SKUIGalleryPageComponent childComponents]
  -[SKUIGalleryPageComponent setCycleInterval:]
  -[SKUIGalleryPageComponent hidesPageIndicator]
  -[SKUIGalleryPageComponent setHidesPageIndicator:]


SKUIItemOfferButtonProperties : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL hasBorderView
 @property  UIColor *borderBackgroundColor
 @property  UIColor *borderColor
 @property  CAFilter *borderCompositingFilter
 @property  double borderWidth
 @property  double borderCornerRadius
 @property  BOOL borderCornerRadiusMatchesHalfBoundingDimension
 @property  BOOL hasTitleLabel
 @property  NSAttributedString *attributedText
 @property  UIColor *textColor
 @property  BOOL universal
 @property  long long confirmationTitleStyle
 @property  long long titleStyle
 @property  UIImage *image
 @property  UIImage *borderedImage
 @property  long long progressType
 @property  BOOL progressIndeterminate
 @property  double progress
 @property  BOOL cancelRecognizer
 @property  double alpha
 @property  BOOL restores

  // instance methods
  -[SKUIItemOfferButtonProperties .cxx_destruct]
  -[SKUIItemOfferButtonProperties progress]
  -[SKUIItemOfferButtonProperties image]
  -[SKUIItemOfferButtonProperties setImage:]
  -[SKUIItemOfferButtonProperties alpha]
  -[SKUIItemOfferButtonProperties setProgress:]
  -[SKUIItemOfferButtonProperties setBorderColor:]
  -[SKUIItemOfferButtonProperties setTextColor:]
  -[SKUIItemOfferButtonProperties setAlpha:]
  -[SKUIItemOfferButtonProperties setAttributedText:]
  -[SKUIItemOfferButtonProperties attributedText]
  -[SKUIItemOfferButtonProperties borderWidth]
  -[SKUIItemOfferButtonProperties setBorderWidth:]
  -[SKUIItemOfferButtonProperties textColor]
  -[SKUIItemOfferButtonProperties borderColor]
  -[SKUIItemOfferButtonProperties titleStyle]
  -[SKUIItemOfferButtonProperties setTitleStyle:]
  -[SKUIItemOfferButtonProperties setUniversal:]
  -[SKUIItemOfferButtonProperties hasBorderView]
  -[SKUIItemOfferButtonProperties setHasBorderView:]
  -[SKUIItemOfferButtonProperties borderBackgroundColor]
  -[SKUIItemOfferButtonProperties setBorderBackgroundColor:]
  -[SKUIItemOfferButtonProperties borderCompositingFilter]
  -[SKUIItemOfferButtonProperties setBorderCompositingFilter:]
  -[SKUIItemOfferButtonProperties borderCornerRadius]
  -[SKUIItemOfferButtonProperties setBorderCornerRadius:]
  -[SKUIItemOfferButtonProperties borderCornerRadiusMatchesHalfBoundingDimension]
  -[SKUIItemOfferButtonProperties setBorderCornerRadiusMatchesHalfBoundingDimension:]
  -[SKUIItemOfferButtonProperties hasTitleLabel]
  -[SKUIItemOfferButtonProperties setHasTitleLabel:]
  -[SKUIItemOfferButtonProperties universal]
  -[SKUIItemOfferButtonProperties confirmationTitleStyle]
  -[SKUIItemOfferButtonProperties setConfirmationTitleStyle:]
  -[SKUIItemOfferButtonProperties borderedImage]
  -[SKUIItemOfferButtonProperties setBorderedImage:]
  -[SKUIItemOfferButtonProperties progressType]
  -[SKUIItemOfferButtonProperties setProgressType:]
  -[SKUIItemOfferButtonProperties progressIndeterminate]
  -[SKUIItemOfferButtonProperties setProgressIndeterminate:]
  -[SKUIItemOfferButtonProperties cancelRecognizer]
  -[SKUIItemOfferButtonProperties setCancelRecognizer:]
  -[SKUIItemOfferButtonProperties restores]
  -[SKUIItemOfferButtonProperties setRestores:]


SKUIItemOfferButton : UIControl /usr/lib/libobjc.A.dylib <SKUIViewElementOfferButton>
 @property  SKUIBuyButtonDescriptor *buttonDescriptor
 @property  NSString *buyType
 @property  UIColor *cloudTintColor
 @property  BOOL disabledButSelectable
 @property  SKUIButtonViewElement *element
 @property  BOOL restores
 @property  BOOL supportsPlayButton
 @property  <SKUIItemOfferButtonDelegate> *delegate
 @property  NSString *confirmationTitle
 @property  UIImage *image
 @property  UIImage *borderedImage
 @property  NSString *title
 @property  @? centerImageProvider
 @property  NSString *offerButtonStateDescription
 @property  long long fillStyle
 @property  double borderColorAlphaMultiplier
 @property  double progress
 @property  BOOL showingConfirmation
 @property  BOOL showsConfirmationState
 @property  long long progressType
 @property  long long confirmationTitleStyle
 @property  long long titleStyle
 @property  BOOL universal
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SKUIItemOfferButtonDelegate> *itemOfferDelegate

  // class methods
  +[SKUIItemOfferButton _defaultTitleAttributes]
  +[SKUIItemOfferButton _basicAnimationWithKeyPath:]
  +[SKUIItemOfferButton itemOfferButtonWithAppearance:]
  +[SKUIItemOfferButton cloudTintColorForBackgroundColor:]
  +[SKUIItemOfferButton localizedTitleForItemState:clientContext:]
  +[SKUIItemOfferButton cloudImageWithTintColor:arrowTintColor:]
  +[SKUIItemOfferButton _sizeMattersForTitleStyle:]
  +[SKUIItemOfferButton _titleSizeThatFitsForSize:titleStyle:mutableAttributedString:]
  +[SKUIItemOfferButton canOpenItemForItemState:clientContext:]
  +[SKUIItemOfferButton playTintColorForBackgroundColor:]
  +[SKUIItemOfferButton playImageWithTintColor:]
  +[SKUIItemOfferButton _cachedImageForAttributedTitle:titleStyle:size:fillStyle:universal:tintColor:interfaceStyle:]
  +[SKUIItemOfferButton _universalPlusImageWithTintColor:]
  +[SKUIItemOfferButton _imageForAttributedTitle:titleStyle:size:fillStyle:universal:tintColor:]
  +[SKUIItemOfferButton _imageForProgressType:]
  +[SKUIItemOfferButton _imageInsetsForProgressType:]
  +[SKUIItemOfferButton playHighlightImageWithTintColor:]

  // instance methods
  -[SKUIItemOfferButton dealloc]
  -[SKUIItemOfferButton setEnabled:]
  -[SKUIItemOfferButton delegate]
  -[SKUIItemOfferButton setDelegate:]
  -[SKUIItemOfferButton element]
  -[SKUIItemOfferButton .cxx_destruct]
  -[SKUIItemOfferButton progress]
  -[SKUIItemOfferButton title]
  -[SKUIItemOfferButton setTitle:]
  -[SKUIItemOfferButton image]
  -[SKUIItemOfferButton setImage:]
  -[SKUIItemOfferButton setProgress:]
  -[SKUIItemOfferButton setBackgroundColor:]
  -[SKUIItemOfferButton setFrame:]
  -[SKUIItemOfferButton initWithFrame:]
  -[SKUIItemOfferButton sizeThatFits:]
  -[SKUIItemOfferButton layoutSubviews]
  -[SKUIItemOfferButton tintColorDidChange]
  -[SKUIItemOfferButton didMoveToWindow]
  -[SKUIItemOfferButton drawRect:]
  -[SKUIItemOfferButton _removeAllAnimations:]
  -[SKUIItemOfferButton setProgress:animated:]
  -[SKUIItemOfferButton beginTrackingWithTouch:withEvent:]
  -[SKUIItemOfferButton cancelTrackingWithEvent:]
  -[SKUIItemOfferButton continueTrackingWithTouch:withEvent:]
  -[SKUIItemOfferButton endTrackingWithTouch:withEvent:]
  -[SKUIItemOfferButton isUniversal]
  -[SKUIItemOfferButton setElement:]
  -[SKUIItemOfferButton buyType]
  -[SKUIItemOfferButton confirmationTitle]
  -[SKUIItemOfferButton setConfirmationTitle:]
  -[SKUIItemOfferButton titleStyle]
  -[SKUIItemOfferButton setTitleStyle:]
  -[SKUIItemOfferButton setItemOfferDelegate:]
  -[SKUIItemOfferButton setShowingConfirmation:animated:]
  -[SKUIItemOfferButton _removeCancelGestureRecognizer]
  -[SKUIItemOfferButton setValuesUsingItemOffer:itemState:clientContext:animated:]
  -[SKUIItemOfferButton setValuesUsingBuyButtonDescriptor:itemState:clientContext:animated:]
  -[SKUIItemOfferButton setColoringWithAppearance:]
  -[SKUIItemOfferButton removeButtonStateAnimations]
  -[SKUIItemOfferButton layoutSizeThatFits:]
  -[SKUIItemOfferButton isShowingConfirmation]
  -[SKUIItemOfferButton setUniversal:]
  -[SKUIItemOfferButton itemOfferDelegate]
  -[SKUIItemOfferButton isDisabledButSelectable]
  -[SKUIItemOfferButton setDisabledButSelectable:]
  -[SKUIItemOfferButton setCloudTintColor:]
  -[SKUIItemOfferButton _sendWillAnimate]
  -[SKUIItemOfferButton _sendDidAnimate]
  -[SKUIItemOfferButton showCloudImage]
  -[SKUIItemOfferButton confirmationTitleStyle]
  -[SKUIItemOfferButton setConfirmationTitleStyle:]
  -[SKUIItemOfferButton borderedImage]
  -[SKUIItemOfferButton setBorderedImage:]
  -[SKUIItemOfferButton progressType]
  -[SKUIItemOfferButton setProgressType:]
  -[SKUIItemOfferButton restores]
  -[SKUIItemOfferButton _horizontalInsetForTitleStyle:]
  -[SKUIItemOfferButton showsConfirmationState]
  -[SKUIItemOfferButton buttonDescriptor]
  -[SKUIItemOfferButton _reloadForCurrentState:]
  -[SKUIItemOfferButton _updateForChangedConfirmationTitleProperty]
  -[SKUIItemOfferButton setProgressType:animated:]
  -[SKUIItemOfferButton _buttonPropertiesForState:]
  -[SKUIItemOfferButton _transitionFromProgress:toProgress:withDuration:completion:]
  -[SKUIItemOfferButton _transitionFromTitleOrImage:toProgress:withDuration:completion:]
  -[SKUIItemOfferButton _transitionFromProgress:toTitleOrImage:withDuration:completion:]
  -[SKUIItemOfferButton _transitionFromTitle:toTitle:withDuration:completion:]
  -[SKUIItemOfferButton _updateForChangedTitleProperty]
  -[SKUIItemOfferButton supportsPlayButton]
  -[SKUIItemOfferButton setFillStyle:]
  -[SKUIItemOfferButton setShowsConfirmationState:]
  -[SKUIItemOfferButton setTitle:confirmationTitle:itemState:clientContext:animated:]
  -[SKUIItemOfferButton setButtonDescriptor:]
  -[SKUIItemOfferButton hasNonBorderedImage]
  -[SKUIItemOfferButton _transitionFromImage:toImage:withDuration:completion:]
  -[SKUIItemOfferButton hasBorderedImage]
  -[SKUIItemOfferButton _transitionFromBorderedImage:toTitle:withDuration:completion:]
  -[SKUIItemOfferButton _touchInBounds:]
  -[SKUIItemOfferButton _borderedImageViewFrame]
  -[SKUIItemOfferButton _imageForProgressType:]
  -[SKUIItemOfferButton _adjustViewOrderingForProperties:]
  -[SKUIItemOfferButton _insertUniversalView]
  -[SKUIItemOfferButton _insertBorderView]
  -[SKUIItemOfferButton _insertProgressIndicator]
  -[SKUIItemOfferButton _insertImageView]
  -[SKUIItemOfferButton _insertLabel]
  -[SKUIItemOfferButton _cancelGestureAction:]
  -[SKUIItemOfferButton _insertBorderedImageView]
  -[SKUIItemOfferButton _insertCancelGestureRecognizer]
  -[SKUIItemOfferButton offerButtonStateDescription]
  -[SKUIItemOfferButton setBorderColorAlphaMultiplier:]
  -[SKUIItemOfferButton cloudTintColor]
  -[SKUIItemOfferButton fillStyle]
  -[SKUIItemOfferButton centerImageProvider]
  -[SKUIItemOfferButton setCenterImageProvider:]
  -[SKUIItemOfferButton borderColorAlphaMultiplier]
  -[SKUIItemOfferButton setBuyType:]


SKUIBuyButtonDescriptor : NSObject /usr/lib/libc++.1.dylib
 @property  long long buttonType
 @property  NSString *buttonText
 @property  NSString *confirmationText
 @property  unsigned long elementType
 @property  SKUIStoreIdentifier *storeIdentifier
 @property  long long itemIdentifier
 @property  NSString *variantIdentifier
 @property  BOOL highlighted
 @property  BOOL showingConfirmation
 @property  long long progressType
 @property  BOOL showsUniversal
 @property  BOOL shouldSuppressEnabled
 @property  BOOL shouldSuppressCloudRestore

  // instance methods
  -[SKUIBuyButtonDescriptor .cxx_destruct]
  -[SKUIBuyButtonDescriptor itemIdentifier]
  -[SKUIBuyButtonDescriptor setItemIdentifier:]
  -[SKUIBuyButtonDescriptor setHighlighted:]
  -[SKUIBuyButtonDescriptor highlighted]
  -[SKUIBuyButtonDescriptor buttonType]
  -[SKUIBuyButtonDescriptor storeIdentifier]
  -[SKUIBuyButtonDescriptor setStoreIdentifier:]
  -[SKUIBuyButtonDescriptor elementType]
  -[SKUIBuyButtonDescriptor buttonText]
  -[SKUIBuyButtonDescriptor setButtonText:]
  -[SKUIBuyButtonDescriptor variantIdentifier]
  -[SKUIBuyButtonDescriptor setVariantIdentifier:]
  -[SKUIBuyButtonDescriptor setButtonType:]
  -[SKUIBuyButtonDescriptor setConfirmationText:]
  -[SKUIBuyButtonDescriptor confirmationText]
  -[SKUIBuyButtonDescriptor canPerformLocalActionWithItemState:]
  -[SKUIBuyButtonDescriptor canPersonalizeUsingItemState:]
  -[SKUIBuyButtonDescriptor setElementType:]
  -[SKUIBuyButtonDescriptor setShouldSuppressCloudRestore:]
  -[SKUIBuyButtonDescriptor progressType]
  -[SKUIBuyButtonDescriptor setProgressType:]
  -[SKUIBuyButtonDescriptor showingConfirmation]
  -[SKUIBuyButtonDescriptor setShowingConfirmation:]
  -[SKUIBuyButtonDescriptor setShouldSuppressEnabled:]
  -[SKUIBuyButtonDescriptor setShowsUniversal:]
  -[SKUIBuyButtonDescriptor shouldSuppressCloudRestore]
  -[SKUIBuyButtonDescriptor shouldSuppressEnabled]
  -[SKUIBuyButtonDescriptor showsUniversal]


SKUIGalleryViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIArtworkRequestDelegate, UIPageViewControllerDataSource, UIPageViewControllerDelegate, UIScrollViewDelegate>
 @property  SKUIGalleryPageComponent *galleryComponent
 @property  <SKUIEmbeddedMediaViewDelegate> *embeddedMediaDelegate
 @property  SKUIMediaComponent *selectedMediaComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIGalleryViewController dealloc]
  -[SKUIGalleryViewController .cxx_destruct]
  -[SKUIGalleryViewController setBackgroundColor:]
  -[SKUIGalleryViewController loadView]
  -[SKUIGalleryViewController scrollViewWillBeginDragging:]
  -[SKUIGalleryViewController scrollViewDidEndDecelerating:]
  -[SKUIGalleryViewController viewWillDisappear:]
  -[SKUIGalleryViewController viewDidAppear:]
  -[SKUIGalleryViewController _selectedViewController]
  -[SKUIGalleryViewController pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:]
  -[SKUIGalleryViewController pageViewController:viewControllerBeforeViewController:]
  -[SKUIGalleryViewController pageViewController:viewControllerAfterViewController:]
  -[SKUIGalleryViewController _tapAction:]
  -[SKUIGalleryViewController artworkRequest:didLoadImage:]
  -[SKUIGalleryViewController selectedMediaComponent]
  -[SKUIGalleryViewController _newViewWithMediaComponent:]
  -[SKUIGalleryViewController loadArtworkForChildComponent:reason:constraintWidth:]
  -[SKUIGalleryViewController performActionForSelectedComponentAnimated:]
  -[SKUIGalleryViewController initWithGalleryComponent:artworkLoader:]
  -[SKUIGalleryViewController setEmbeddedMediaDelegate:]
  -[SKUIGalleryViewController _newViewControllerWithIndex:]
  -[SKUIGalleryViewController _startCycleTimer]
  -[SKUIGalleryViewController _stopCycleTimer]
  -[SKUIGalleryViewController _finishPaneAnimation]
  -[SKUIGalleryViewController _showNextPaneAnimated:]
  -[SKUIGalleryViewController embeddedMediaDelegate]
  -[SKUIGalleryViewController galleryComponent]


SKUIMediaSocialAdminPermissionsCoordinator : NSObject /usr/lib/libc++.1.dylib
 @property  NSNumber *lastKnownAdminStatus
 @property  NSArray *lastKnownAuthors

  // class methods
  +[SKUIMediaSocialAdminPermissionsCoordinator sharedCoordinator]

  // instance methods
  -[SKUIMediaSocialAdminPermissionsCoordinator init]
  -[SKUIMediaSocialAdminPermissionsCoordinator .cxx_destruct]
  -[SKUIMediaSocialAdminPermissionsCoordinator reset]
  -[SKUIMediaSocialAdminPermissionsCoordinator getAdminStatusWithOptions:resultBlock:]
  -[SKUIMediaSocialAdminPermissionsCoordinator lastKnownAdminStatus]
  -[SKUIMediaSocialAdminPermissionsCoordinator lastKnownAuthors]
  -[SKUIMediaSocialAdminPermissionsCoordinator getAuthorsWithOptions:authorsBlock:]
  -[SKUIMediaSocialAdminPermissionsCoordinator getAuthorsAndWaitWithOptions:authorsBlock:]
  -[SKUIMediaSocialAdminPermissionsCoordinator _authenticateOnCompletion:]
  -[SKUIMediaSocialAdminPermissionsCoordinator _queueResultBlock:]
  -[SKUIMediaSocialAdminPermissionsCoordinator _getAuthors]
  -[SKUIMediaSocialAdminPermissionsCoordinator _handleOperationResponseWithAuthors:error:]
  -[SKUIMediaSocialAdminPermissionsCoordinator _fireResultsBlocksWithAuthors:error:]


SKUIModernChartHeaderView : UIView /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIModernChartHeaderView .cxx_destruct]
  -[SKUIModernChartHeaderView setTitle:]
  -[SKUIModernChartHeaderView initWithFrame:]
  -[SKUIModernChartHeaderView layoutSubviews]


SKUIIndexBarEntryListController : NSObject /usr/lib/libc++.1.dylib
 @property  <SKUIIndexBarEntryListControllerDelegate> *delegate
 @property  BOOL needsRootTargetViewElement
 @property  BOOL hidesIndexBar
 @property  NSString *rootTargetIndexBarEntryID
 @property  SKUIViewElement *rootTargetViewElement
 @property  long long numberOfEntryDescriptors

  // class methods
  +[SKUIIndexBarEntryListController entryListControllerForEntryViewElement:]
  +[SKUIIndexBarEntryListController entryListControllerForEntryListViewElement:]

  // instance methods
  -[SKUIIndexBarEntryListController delegate]
  -[SKUIIndexBarEntryListController setDelegate:]
  -[SKUIIndexBarEntryListController .cxx_destruct]
  -[SKUIIndexBarEntryListController entryDescriptorAtIndex:]
  -[SKUIIndexBarEntryListController numberOfEntryDescriptors]
  -[SKUIIndexBarEntryListController hidesIndexBar]
  -[SKUIIndexBarEntryListController targetIndexBarEntryIDForEntryDescriptorAtIndex:returningRelativeSectionIndex:]
  -[SKUIIndexBarEntryListController needsRootTargetViewElement]
  -[SKUIIndexBarEntryListController rootTargetIndexBarEntryID]
  -[SKUIIndexBarEntryListController setRootTargetViewElement:]
  -[SKUIIndexBarEntryListController reloadViewElementData]
  -[SKUIIndexBarEntryListController _didInvalidate]
  -[SKUIIndexBarEntryListController rootTargetViewElement]


SKUIFloatingOverlayView : UIView /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} contentInset
 @property  UIView *contentView

  // instance methods
  -[SKUIFloatingOverlayView .cxx_destruct]
  -[SKUIFloatingOverlayView contentView]
  -[SKUIFloatingOverlayView setContentView:]
  -[SKUIFloatingOverlayView initWithFrame:]
  -[SKUIFloatingOverlayView sizeThatFits:]
  -[SKUIFloatingOverlayView layoutSubviews]
  -[SKUIFloatingOverlayView setContentInset:]
  -[SKUIFloatingOverlayView contentInset]


SKUIProductPageCopyrightView : UIView /usr/lib/libobjc.A.dylib
 @property  NSString *copyrightString
 @property  SKUIColorScheme *colorScheme

  // instance methods
  -[SKUIProductPageCopyrightView .cxx_destruct]
  -[SKUIProductPageCopyrightView sizeThatFits:]
  -[SKUIProductPageCopyrightView layoutSubviews]
  -[SKUIProductPageCopyrightView colorScheme]
  -[SKUIProductPageCopyrightView setColorScheme:]
  -[SKUIProductPageCopyrightView copyrightString]
  -[SKUIProductPageCopyrightView setCopyrightString:]


SKUIGalleryPaneViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  SKUIMediaComponent *component
 @property  long long galleryIndex
 @property  SKUIEmbeddedMediaView *mediaView

  // instance methods
  -[SKUIGalleryPaneViewController .cxx_destruct]
  -[SKUIGalleryPaneViewController mediaView]
  -[SKUIGalleryPaneViewController component]
  -[SKUIGalleryPaneViewController galleryIndex]
  -[SKUIGalleryPaneViewController initWithMediaComponent:galleryIndex:]


SKUIStackItemView : SKUIViewReuseView <SKUIViewElementView>
 @property  {UIEdgeInsets=dddd} contentInset
 @property  SKUIStackItemViewElement *viewElement
 @property  SKUIViewElementLayoutContext *lastContext
 @property  SKUIAttributedStringView *textView
 @property  NSArray *imageViews
 @property  NSMapTable *imageViewToImageResourceCacheKey
 @property  unsigned long numberOfLines
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIStackItemView prefetchResourcesForViewElement:reason:context:]
  +[SKUIStackItemView preferredSizeForViewElement:context:]
  +[SKUIStackItemView requestLayoutForViewElement:width:context:]
  +[SKUIStackItemView sizeThatFitsWidth:viewElement:context:]
  +[SKUIStackItemView _attributedStringForLabel:context:]
  +[SKUIStackItemView sizeThatFitsWidth:viewElement:context:numberOfLines:]
  +[SKUIStackItemView _textViewLayoutWithWidth:string:]

  // instance methods
  -[SKUIStackItemView .cxx_destruct]
  -[SKUIStackItemView textView]
  -[SKUIStackItemView setTextView:]
  -[SKUIStackItemView sizeThatFits:]
  -[SKUIStackItemView layoutSubviews]
  -[SKUIStackItemView setContentInset:]
  -[SKUIStackItemView numberOfLines]
  -[SKUIStackItemView contentInset]
  -[SKUIStackItemView setImageViews:]
  -[SKUIStackItemView imageViews]
  -[SKUIStackItemView viewElement]
  -[SKUIStackItemView reloadWithViewElement:width:context:]
  -[SKUIStackItemView setImage:forArtworkRequest:context:]
  -[SKUIStackItemView updateWithItemState:context:animated:]
  -[SKUIStackItemView viewForElementIdentifier:]
  -[SKUIStackItemView setViewElement:]
  -[SKUIStackItemView imageViewToImageResourceCacheKey]
  -[SKUIStackItemView setImageViewToImageResourceCacheKey:]
  -[SKUIStackItemView setLastContext:]
  -[SKUIStackItemView lastContext]


SKUIGiftAmountButton : UIButton /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIGiftAmountButton .cxx_destruct]
  -[SKUIGiftAmountButton initWithFrame:]
  -[SKUIGiftAmountButton sizeThatFits:]
  -[SKUIGiftAmountButton setHighlighted:]
  -[SKUIGiftAmountButton setSelected:]
  -[SKUIGiftAmountButton _reloadBorderView]


SKUIProfileSettingDescriptionView : SKUISettingDescriptionView
  // class methods
  +[SKUIProfileSettingDescriptionView prefetchResourcesForSettingDescription:reason:context:]
  +[SKUIProfileSettingDescriptionView preferredSizeForSettingDescription:context:]
  +[SKUIProfileSettingDescriptionView requestLayoutForSettingDescription:width:context:]
  +[SKUIProfileSettingDescriptionView sizeThatFitsWidth:settingDescription:context:]

  // instance methods
  -[SKUIProfileSettingDescriptionView .cxx_destruct]
  -[SKUIProfileSettingDescriptionView layoutSubviews]
  -[SKUIProfileSettingDescriptionView setImage:forArtworkRequest:context:]
  -[SKUIProfileSettingDescriptionView reloadWithSettingDescription:width:context:]
  -[SKUIProfileSettingDescriptionView hasDisclosureChevron]


SKUISyncWishlistOperation : NSOperation /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  @? resultBlock

  // instance methods
  -[SKUISyncWishlistOperation init]
  -[SKUISyncWishlistOperation .cxx_destruct]
  -[SKUISyncWishlistOperation main]
  -[SKUISyncWishlistOperation resultBlock]
  -[SKUISyncWishlistOperation setResultBlock:]
  -[SKUISyncWishlistOperation initWithClientContext:]
  -[SKUISyncWishlistOperation _sendLocalChangesForWishlist:]
  -[SKUISyncWishlistOperation _loadRemoteItemsForWishlist:didChange:error:]
  -[SKUISyncWishlistOperation _mergeItems:wishlist:didChange:error:]


SKUISoftwareLibraryInterface : NSObject /usr/lib/libc++.1.dylib <SKUILibraryInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUISoftwareLibraryInterface stateForLibraryItem:]
  -[SKUISoftwareLibraryInterface performActionForLibraryItem:]
  -[SKUISoftwareLibraryInterface exposedPlatformItemKinds]
  -[SKUISoftwareLibraryInterface enumerateStatesForLibraryItems:usingBlock:]


SKUIKeyValueInfoListPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIKeyValueInfoListPageSection .cxx_destruct]
  -[SKUIKeyValueInfoListPageSection artworkRequest:didLoadImage:]
  -[SKUIKeyValueInfoListPageSection initWithPageComponent:]
  -[SKUIKeyValueInfoListPageSection _reloadViewElementProperties]
  -[SKUIKeyValueInfoListPageSection applyUpdateType:]
  -[SKUIKeyValueInfoListPageSection backgroundColorForIndexPath:]
  -[SKUIKeyValueInfoListPageSection sectionContentInset]
  -[SKUIKeyValueInfoListPageSection willAppearInContext:]
  -[SKUIKeyValueInfoListPageSection cellForIndexPath:]
  -[SKUIKeyValueInfoListPageSection cellSizeForIndexPath:]
  -[SKUIKeyValueInfoListPageSection entityProvider:didInvalidateWithContext:]
  -[SKUIKeyValueInfoListPageSection numberOfCells]
  -[SKUIKeyValueInfoListPageSection reloadCellWithIndexPath:reason:]
  -[SKUIKeyValueInfoListPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIKeyValueInfoListPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIKeyValueInfoListPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIKeyValueInfoListPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIKeyValueInfoListPageSection _requestCellLayout]
  -[SKUIKeyValueInfoListPageSection _enumerateVisibleViewElementsUsingBlock:]


SKUIWishlistDataConsumer : SSVURLDataConsumer /System/Library/Frameworks/UIKit.framework/UIKit
  // instance methods
  -[SKUIWishlistDataConsumer objectForData:response:error:]
  -[SKUIWishlistDataConsumer _itemsWithJSONData:error:]
  -[SKUIWishlistDataConsumer _errorWithData:MIMEType:]


SKUILoadingDocumentViewController : SKUIViewController <SKUIDocumentViewController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUILoadingDocumentViewController dealloc]
  -[SKUILoadingDocumentViewController .cxx_destruct]
  -[SKUILoadingDocumentViewController loadView]
  -[SKUILoadingDocumentViewController viewWillDisappear:]
  -[SKUILoadingDocumentViewController viewWillLayoutSubviews]
  -[SKUILoadingDocumentViewController viewDidAppear:]
  -[SKUILoadingDocumentViewController _activityIndicator]
  -[SKUILoadingDocumentViewController _showActivityIndicator]
  -[SKUILoadingDocumentViewController documentDidUpdate:]
  -[SKUILoadingDocumentViewController initWithTemplateElement:]
  -[SKUILoadingDocumentViewController initWithActivityIndicatorElement:]
  -[SKUILoadingDocumentViewController _layoutCache]
  -[SKUILoadingDocumentViewController _viewLayoutContext]
  -[SKUILoadingDocumentViewController _reloadViewStyling]
  -[SKUILoadingDocumentViewController _computedFrameForActivityIndicatorView]


SKUIStandardInteractiveDividerView : UIView /usr/lib/libobjc.A.dylib
  // class methods
  +[SKUIStandardInteractiveDividerView defaultWidth]

  // instance methods
  -[SKUIStandardInteractiveDividerView initWithFrame:]
  -[SKUIStandardInteractiveDividerView tintColorDidChange]


SKUIMediaSocialSuggestedHandlesOperation : SSVComplexOperation /System/Library/Frameworks/UIKit.framework/UIKit
 @property  @? outputBlock
 @property  NSArray *words

  // instance methods
  -[SKUIMediaSocialSuggestedHandlesOperation .cxx_destruct]
  -[SKUIMediaSocialSuggestedHandlesOperation main]
  -[SKUIMediaSocialSuggestedHandlesOperation setWords:]
  -[SKUIMediaSocialSuggestedHandlesOperation words]
  -[SKUIMediaSocialSuggestedHandlesOperation setOutputBlock:]
  -[SKUIMediaSocialSuggestedHandlesOperation outputBlock]
  -[SKUIMediaSocialSuggestedHandlesOperation initWithClientContext:]


SKUISpacePageComponent : SKUIPageComponent
 @property  double height

  // instance methods
  -[SKUISpacePageComponent height]
  -[SKUISpacePageComponent componentType]
  -[SKUISpacePageComponent initWithCustomPageContext:]


SKUISpacePageSection : SKUIStorePageSection
 @property  SKUISpacePageComponent *pageComponent

  // instance methods
  -[SKUISpacePageSection initWithPageComponent:]
  -[SKUISpacePageSection willAppearInContext:]
  -[SKUISpacePageSection cellForIndexPath:]
  -[SKUISpacePageSection cellSizeForIndexPath:]
  -[SKUISpacePageSection numberOfCells]


SKUIReviewListPageComponent : SKUIPageComponent
 @property  SKUIReviewListViewElement *viewElement

  // instance methods
  -[SKUIReviewListPageComponent componentType]
  -[SKUIReviewListPageComponent initWithViewElement:]


SKUINavigationBarMenusController : SKUINavigationBarSectionController <SKUIMenuPopoverDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUINavigationBarMenusController dealloc]
  -[SKUINavigationBarMenusController .cxx_destruct]
  -[SKUINavigationBarMenusController view]
  -[SKUINavigationBarMenusController willAppearInNavigationBar]
  -[SKUINavigationBarMenusController _menuButtonAction:]
  -[SKUINavigationBarMenusController menuPopoverDidCancel:]
  -[SKUINavigationBarMenusController menuPopover:didSelectMenuItemAtIndex:]
  -[SKUINavigationBarMenusController menuPopover:willRepositionToRect:inView:]
  -[SKUINavigationBarMenusController initWithMenuViewElements:]
  -[SKUINavigationBarMenusController reloadSectionViews]
  -[SKUINavigationBarMenusController _destroyPopover]
  -[SKUINavigationBarMenusController _menuViewElementForView:]


SKUINavigationBarContext : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIClientContext *clientContext
 @property  double maximumNavigationBarWidth
 @property  NSOperationQueue *operationQueue
 @property  UIViewController *parentViewController
 @property  SKUIResourceLoader *resourceLoader
 @property  SKUILayoutCache *textLayoutCache

  // instance methods
  -[SKUINavigationBarContext .cxx_destruct]
  -[SKUINavigationBarContext operationQueue]
  -[SKUINavigationBarContext setOperationQueue:]
  -[SKUINavigationBarContext parentViewController]
  -[SKUINavigationBarContext setParentViewController:]
  -[SKUINavigationBarContext resourceLoader]
  -[SKUINavigationBarContext setResourceLoader:]
  -[SKUINavigationBarContext clientContext]
  -[SKUINavigationBarContext setClientContext:]
  -[SKUINavigationBarContext textLayoutCache]
  -[SKUINavigationBarContext maximumNavigationBarWidth]
  -[SKUINavigationBarContext setMaximumNavigationBarWidth:]
  -[SKUINavigationBarContext setTextLayoutCache:]


SKUIGallerySwooshPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIGallerySwooshViewControllerDelegate>
 @property  SKUISwooshPageComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIGallerySwooshPageSection dealloc]
  -[SKUIGallerySwooshPageSection .cxx_destruct]
  -[SKUIGallerySwooshPageSection artworkRequest:didLoadImage:]
  -[SKUIGallerySwooshPageSection initWithPageComponent:]
  -[SKUIGallerySwooshPageSection willAppearInContext:]
  -[SKUIGallerySwooshPageSection cellForIndexPath:]
  -[SKUIGallerySwooshPageSection cellSizeForIndexPath:]
  -[SKUIGallerySwooshPageSection numberOfCells]
  -[SKUIGallerySwooshPageSection prefetchResourcesWithReason:]
  -[SKUIGallerySwooshPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIGallerySwooshPageSection _addImpressionForIndex:toSession:]
  -[SKUIGallerySwooshPageSection _swooshViewController]
  -[SKUIGallerySwooshPageSection swoosh:imageForCellAtIndex:]
  -[SKUIGallerySwooshPageSection swoosh:didSelectCellAtIndex:]
  -[SKUIGallerySwooshPageSection swoosh:willDisplayCellAtIndex:]
  -[SKUIGallerySwooshPageSection _newArtworkRequestWithArtwork:]
  -[SKUIGallerySwooshPageSection swoosh:didChangePlaybackState:forItemAtIndex:]


SKUITextFooterSettingsHeaderFooterDescriptionView : SKUISettingsHeaderFooterDescriptionView
  // class methods
  +[SKUITextFooterSettingsHeaderFooterDescriptionView _labelElementsFromViewElement:]
  +[SKUITextFooterSettingsHeaderFooterDescriptionView _labelWithLabelElements:]
  +[SKUITextFooterSettingsHeaderFooterDescriptionView _concatenateTextFromLabelElements:]
  +[SKUITextFooterSettingsHeaderFooterDescriptionView preferredSizeForSettingsHeaderFooterDescription:context:]
  +[SKUITextFooterSettingsHeaderFooterDescriptionView prefetchResourcesForSettingsHeaderFooterDescription:reason:context:]
  +[SKUITextFooterSettingsHeaderFooterDescriptionView requestLayoutForSettingsHeaderFooterDescription:width:context:]
  +[SKUITextFooterSettingsHeaderFooterDescriptionView sizeThatFitsWidth:settingsHeaderFooterDescription:context:]

  // instance methods
  -[SKUITextFooterSettingsHeaderFooterDescriptionView .cxx_destruct]
  -[SKUITextFooterSettingsHeaderFooterDescriptionView layoutSubviews]
  -[SKUITextFooterSettingsHeaderFooterDescriptionView setImage:forArtworkRequest:context:]
  -[SKUITextFooterSettingsHeaderFooterDescriptionView reloadWithSettingsHeaderFooterDescription:width:context:]


SKUIRunLoopDelay : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUIRunLoopDelay dealloc]
  -[SKUIRunLoopDelay .cxx_destruct]
  -[SKUIRunLoopDelay initWithRunLoopMode:timeout:]
  -[SKUIRunLoopDelay delayRunLoop]
  -[SKUIRunLoopDelay endDelay]


SKUIViewElementTextLayoutCache : NSObject /usr/lib/libc++.1.dylib
 @property  SKUILayoutCache *layoutCache

  // instance methods
  -[SKUIViewElementTextLayoutCache .cxx_destruct]
  -[SKUIViewElementTextLayoutCache sizeForViewElement:width:]
  -[SKUIViewElementTextLayoutCache initWithLayoutCache:]
  -[SKUIViewElementTextLayoutCache requestLayoutForButton:attributedString:width:]
  -[SKUIViewElementTextLayoutCache requestLayoutForLabel:attributedString:width:]
  -[SKUIViewElementTextLayoutCache requestLayoutForBadge:width:]
  -[SKUIViewElementTextLayoutCache requestLayoutForViewElement:attributedString:width:]
  -[SKUIViewElementTextLayoutCache layoutCache]
  -[SKUIViewElementTextLayoutCache layoutForWidth:viewElement:]
  -[SKUIViewElementTextLayoutCache requestLayoutForOrdinal:attributedString:width:]
  -[SKUIViewElementTextLayoutCache estimatedSizeForLabel:width:]
  -[SKUIViewElementTextLayoutCache invalidateLayoutsForUpdatedElements]
  -[SKUIViewElementTextLayoutCache sizeForButton:width:]
  -[SKUIViewElementTextLayoutCache estimatedSizeForOrdinal:width:]
  -[SKUIViewElementTextLayoutCache sizeForLabel:width:]
  -[SKUIViewElementTextLayoutCache _existingLayoutForViewElement:width:]
  -[SKUIViewElementTextLayoutCache _bestGuessSizeForButton:width:]
  -[SKUIViewElementTextLayoutCache _bestGuessSizeForLabel:width:]
  -[SKUIViewElementTextLayoutCache _bestGuessSizeForOrdinal:width:]
  -[SKUIViewElementTextLayoutCache _createLayoutRequestForBadge:width:]
  -[SKUIViewElementTextLayoutCache _addRequest:forViewElement:]
  -[SKUIViewElementTextLayoutCache _createLayoutRequestForButton:attributedString:width:]
  -[SKUIViewElementTextLayoutCache _createLayoutRequestForLabel:attributedString:width:]
  -[SKUIViewElementTextLayoutCache _createLayoutRequestForOrdinal:attributedString:width:]
  -[SKUIViewElementTextLayoutCache _createLayoutRequestForViewElement:attributedString:width:]
  -[SKUIViewElementTextLayoutCache _layoutIndexForViewElement:width:]
  -[SKUIViewElementTextLayoutCache _bestGuessCache]
  -[SKUIViewElementTextLayoutCache estimatedSizeForButton:width:]


_SKUIViewElementTextLayoutCacheBestGuessCacheKey : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *text
 @property  UIFont *font
 @property  long long width

  // instance methods
  -[_SKUIViewElementTextLayoutCacheBestGuessCacheKey isEqual:]
  -[_SKUIViewElementTextLayoutCacheBestGuessCacheKey .cxx_destruct]
  -[_SKUIViewElementTextLayoutCacheBestGuessCacheKey width]
  -[_SKUIViewElementTextLayoutCacheBestGuessCacheKey setWidth:]
  -[_SKUIViewElementTextLayoutCacheBestGuessCacheKey text]
  -[_SKUIViewElementTextLayoutCacheBestGuessCacheKey setText:]
  -[_SKUIViewElementTextLayoutCacheBestGuessCacheKey setFont:]
  -[_SKUIViewElementTextLayoutCacheBestGuessCacheKey font]


SKUISignInTemplateView : SKUIViewReuseView <SKUIViewElementView>
 @property  <SKUISignInViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUISignInTemplateView prefetchResourcesForViewElement:reason:context:]
  +[SKUISignInTemplateView preferredSizeForViewElement:context:]
  +[SKUISignInTemplateView requestLayoutForViewElement:width:context:]
  +[SKUISignInTemplateView sizeThatFitsWidth:viewElement:context:]
  +[SKUISignInTemplateView _sizeForViewElement:width:context:]
  +[SKUISignInTemplateView _attributedStringForText:style:context:]
  +[SKUISignInTemplateView _useEditorialLayoutForLabelElement:]
  +[SKUISignInTemplateView _marginsForViewElement:index:width:context:]
  +[SKUISignInTemplateView _enumerateChildrenOfViewElement:usingBlock:]

  // instance methods
  -[SKUISignInTemplateView delegate]
  -[SKUISignInTemplateView setDelegate:]
  -[SKUISignInTemplateView .cxx_destruct]
  -[SKUISignInTemplateView initWithFrame:]
  -[SKUISignInTemplateView layoutSubviews]
  -[SKUISignInTemplateView setContentInset:]
  -[SKUISignInTemplateView reloadWithViewElement:width:context:]
  -[SKUISignInTemplateView setImage:forArtworkRequest:context:]
  -[SKUISignInTemplateView updateWithItemState:context:animated:]
  -[SKUISignInTemplateView viewForElementIdentifier:]
  -[SKUISignInTemplateView _buttonAction:]


SKUIGallerySwooshViewController : SKUISwooshViewController <SKUIEmbeddedMediaViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
 @property  SKUISwooshPageComponent *gallerySwoosh
 @property  <SKUIGallerySwooshViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIGallerySwooshViewController setDelegate:]
  -[SKUIGallerySwooshViewController .cxx_destruct]
  -[SKUIGallerySwooshViewController loadView]
  -[SKUIGallerySwooshViewController collectionView:numberOfItemsInSection:]
  -[SKUIGallerySwooshViewController collectionView:cellForItemAtIndexPath:]
  -[SKUIGallerySwooshViewController collectionView:didSelectItemAtIndexPath:]
  -[SKUIGallerySwooshViewController indexPathsForVisibleItems]
  -[SKUIGallerySwooshViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[SKUIGallerySwooshViewController collectionView:layout:insetForSectionAtIndex:]
  -[SKUIGallerySwooshViewController setImage:forItemAtIndex:]
  -[SKUIGallerySwooshViewController setColorScheme:]
  -[SKUIGallerySwooshViewController mediaView:playbackStateDidChange:]
  -[SKUIGallerySwooshViewController _newViewWithMediaComponent:]
  -[SKUIGallerySwooshViewController artworkForItemAtIndex:]
  -[SKUIGallerySwooshViewController performActionForItemAtIndex:animated:]
  -[SKUIGallerySwooshViewController initWithGallerySwoosh:]
  -[SKUIGallerySwooshViewController gallerySwoosh]


SKUIGallerySwooshCollectionViewCell : UICollectionViewCell /usr/lib/libobjc.A.dylib
 @property  UIView *contentChildView
 @property  NSString *title

  // instance methods
  -[SKUIGallerySwooshCollectionViewCell .cxx_destruct]
  -[SKUIGallerySwooshCollectionViewCell title]
  -[SKUIGallerySwooshCollectionViewCell setTitle:]
  -[SKUIGallerySwooshCollectionViewCell layoutSubviews]
  -[SKUIGallerySwooshCollectionViewCell setColoringWithColorScheme:]
  -[SKUIGallerySwooshCollectionViewCell setContentChildView:]
  -[SKUIGallerySwooshCollectionViewCell contentChildView]


SKUIAddToWishlistOperation : NSOperation /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // instance methods
  -[SKUIAddToWishlistOperation .cxx_destruct]
  -[SKUIAddToWishlistOperation main]
  -[SKUIAddToWishlistOperation initWithItem:reason:]


SKUISearchBarController : NSObject /usr/lib/libc++.1.dylib <SKUISearchFieldDelegate, UISearchBarDelegate>
 @property  SKUISearchBarViewElement *searchBarViewElement
 @property  SKUIClientContext *clientContext
 @property  BOOL displaysSearchBarInNavigationBar
 @property  BOOL showsResultsForEmptyField
 @property  UIViewController *parentViewController
 @property  UISearchBar *searchBar
 @property  BOOL canBecomeActive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUISearchBarController dealloc]
  -[SKUISearchBarController .cxx_destruct]
  -[SKUISearchBarController parentViewController]
  -[SKUISearchBarController searchBar]
  -[SKUISearchBarController displaysSearchBarInNavigationBar]
  -[SKUISearchBarController searchBar:textDidChange:]
  -[SKUISearchBarController searchBarTextDidBeginEditing:]
  -[SKUISearchBarController searchBarTextDidEndEditing:]
  -[SKUISearchBarController searchBarSearchButtonClicked:]
  -[SKUISearchBarController setParentViewController:]
  -[SKUISearchBarController setDisplaysSearchBarInNavigationBar:]
  -[SKUISearchBarController clientContext]
  -[SKUISearchBarController setClientContext:]
  -[SKUISearchBarController becomeActive]
  -[SKUISearchBarController reloadAfterDocumentUpdate]
  -[SKUISearchBarController initWithSearchBarViewElement:]
  -[SKUISearchBarController setSearchBarViewElement:]
  -[SKUISearchBarController resignActive:]
  -[SKUISearchBarController setShowsResultsForEmptyField:]
  -[SKUISearchBarController canBecomeActive]
  -[SKUISearchBarController _searchFieldController]
  -[SKUISearchBarController searchFieldController:requestSearch:]
  -[SKUISearchBarController searchFieldController:searchBarDidChangeText:]
  -[SKUISearchBarController showsResultsForEmptyField]
  -[SKUISearchBarController _cancelGestureAction:]
  -[SKUISearchBarController _customizeSearchFieldController:]
  -[SKUISearchBarController _customizeSearchBar:]
  -[SKUISearchBarController _newSearchFieldController]
  -[SKUISearchBarController _dispatchSubmitEventWithText:URL:searchHintOriginalTerm:searchHintIndex:]
  -[SKUISearchBarController _dispatchChangeEventWithText:]
  -[SKUISearchBarController _removeCancelTouchGestureRecognizer]
  -[SKUISearchBarController searchBarViewElement]


SKUISearchBarController__MAKE_IT_RAIN__ : NSObject /usr/lib/libc++.1.dylib
 @property  UISearchController *searchController

  // instance methods
  -[SKUISearchBarController__MAKE_IT_RAIN__ .cxx_destruct]
  -[SKUISearchBarController__MAKE_IT_RAIN__ searchController]
  -[SKUISearchBarController__MAKE_IT_RAIN__ initWithSearchBarViewElement:]


SKUIGiftResultView : UIView /usr/lib/libobjc.A.dylib
 @property  UIButton *giftAgainButton
 @property  UIImage *image
 @property  SKUIGiftItemView *itemView
 @property  NSString *title

  // instance methods
  -[SKUIGiftResultView .cxx_destruct]
  -[SKUIGiftResultView title]
  -[SKUIGiftResultView setTitle:]
  -[SKUIGiftResultView image]
  -[SKUIGiftResultView setImage:]
  -[SKUIGiftResultView initWithFrame:]
  -[SKUIGiftResultView layoutSubviews]
  -[SKUIGiftResultView setItemView:]
  -[SKUIGiftResultView giftAgainButton]
  -[SKUIGiftResultView itemView]


SKUIRemoveFromWishlistOperation : NSOperation /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // instance methods
  -[SKUIRemoveFromWishlistOperation main]
  -[SKUIRemoveFromWishlistOperation initWithItemIdentifier:entityIdentifier:reason:]


SKUIBrickItem : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *accessibilityLabel
 @property  SKUIArtwork *artwork
 @property  long long brickIdentifier
 @property  SKUICountdown *countdown
 @property  SKUIEditorialComponent *editorial
 @property  SKUILink *link

  // instance methods
  -[SKUIBrickItem .cxx_destruct]
  -[SKUIBrickItem accessibilityLabel]
  -[SKUIBrickItem link]
  -[SKUIBrickItem artwork]
  -[SKUIBrickItem initWithCustomPageContext:]
  -[SKUIBrickItem countdown]
  -[SKUIBrickItem initWithBannerRoomContext:]
  -[SKUIBrickItem editorial]
  -[SKUIBrickItem _setLinkItem:]
  -[SKUIBrickItem initWithComponentContext:]
  -[SKUIBrickItem brickIdentifier]
  -[SKUIBrickItem _setLinkInfoWithLinkDictionary:context:]


SKUIFooterViewElement : SKUIViewElement
 @property  SKUIButtonViewElement *button
 @property  NSArray *titleLabels

  // instance methods
  -[SKUIFooterViewElement button]
  -[SKUIFooterViewElement titleLabels]


SKUIReportAConcernDetailsViewController : UIViewController /usr/lib/libobjc.A.dylib <UITableViewDelegate>
 @property  SKUIReportAConcernConfiguration *configuration
 @property  SKUIReportAConcernDetailsDataSource *dataSource
 @property  UITableView *tableView
 @property  double keyboardHeight
 @property  @? completion
 @property  SKUIReportAConcernMetadata *metadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIReportAConcernDetailsViewController dealloc]
  -[SKUIReportAConcernDetailsViewController initWithCoder:]
  -[SKUIReportAConcernDetailsViewController .cxx_destruct]
  -[SKUIReportAConcernDetailsViewController setMetadata:]
  -[SKUIReportAConcernDetailsViewController metadata]
  -[SKUIReportAConcernDetailsViewController setConfiguration:]
  -[SKUIReportAConcernDetailsViewController configuration]
  -[SKUIReportAConcernDetailsViewController setCompletion:]
  -[SKUIReportAConcernDetailsViewController completion]
  -[SKUIReportAConcernDetailsViewController dataSource]
  -[SKUIReportAConcernDetailsViewController setDataSource:]
  -[SKUIReportAConcernDetailsViewController initWithConfiguration:]
  -[SKUIReportAConcernDetailsViewController tableView]
  -[SKUIReportAConcernDetailsViewController initWithNibName:bundle:]
  -[SKUIReportAConcernDetailsViewController viewDidLoad]
  -[SKUIReportAConcernDetailsViewController viewWillLayoutSubviews]
  -[SKUIReportAConcernDetailsViewController setTableView:]
  -[SKUIReportAConcernDetailsViewController _keyboardWillShow:]
  -[SKUIReportAConcernDetailsViewController _keyboardWillHide:]
  -[SKUIReportAConcernDetailsViewController tableView:heightForRowAtIndexPath:]
  -[SKUIReportAConcernDetailsViewController keyboardHeight]
  -[SKUIReportAConcernDetailsViewController setKeyboardHeight:]
  -[SKUIReportAConcernDetailsViewController submitPressed:]
  -[SKUIReportAConcernDetailsViewController _detailsText]
  -[SKUIReportAConcernDetailsViewController _detailsCellHeight]


SKUIReportAConcernDetailsDataSource : NSObject /usr/lib/libc++.1.dylib <UITableViewDataSource>
 @property  UITableView *tableView
 @property  NSString *placeholder
 @property  NSString *selectedReason
 @property  NSString *privacyNote
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIReportAConcernDetailsDataSource init]
  -[SKUIReportAConcernDetailsDataSource .cxx_destruct]
  -[SKUIReportAConcernDetailsDataSource setPlaceholder:]
  -[SKUIReportAConcernDetailsDataSource tableView]
  -[SKUIReportAConcernDetailsDataSource placeholder]
  -[SKUIReportAConcernDetailsDataSource tableView:numberOfRowsInSection:]
  -[SKUIReportAConcernDetailsDataSource tableView:cellForRowAtIndexPath:]
  -[SKUIReportAConcernDetailsDataSource tableView:titleForHeaderInSection:]
  -[SKUIReportAConcernDetailsDataSource tableView:titleForFooterInSection:]
  -[SKUIReportAConcernDetailsDataSource initWithTableView:]
  -[SKUIReportAConcernDetailsDataSource setTableView:]
  -[SKUIReportAConcernDetailsDataSource selectedReason]
  -[SKUIReportAConcernDetailsDataSource setSelectedReason:]
  -[SKUIReportAConcernDetailsDataSource setPrivacyNote:]
  -[SKUIReportAConcernDetailsDataSource privacyNote]


SKUISortDescriptorViewElement : SKUIViewElement
 @property  BOOL ascending
 @property  NSString *property

  // class methods
  +[SKUISortDescriptorViewElement shouldParseChildDOMElements]

  // instance methods
  -[SKUISortDescriptorViewElement .cxx_destruct]
  -[SKUISortDescriptorViewElement property]
  -[SKUISortDescriptorViewElement isAscending]
  -[SKUISortDescriptorViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUISortDescriptorViewElement applyUpdatesWithElement:]


SKUIScrollingSegmentedControllerItemContext : NSObject /usr/lib/libc++.1.dylib
 @property  <SKUIScrollingSegmentedControllerItemContextDelegate> *delegate
 @property  UIViewController *viewController

  // instance methods
  -[SKUIScrollingSegmentedControllerItemContext init]
  -[SKUIScrollingSegmentedControllerItemContext delegate]
  -[SKUIScrollingSegmentedControllerItemContext setDelegate:]
  -[SKUIScrollingSegmentedControllerItemContext .cxx_destruct]
  -[SKUIScrollingSegmentedControllerItemContext viewController]
  -[SKUIScrollingSegmentedControllerItemContext initWithViewController:]
  -[SKUIScrollingSegmentedControllerItemContext applyNewContentInset:]
  -[SKUIScrollingSegmentedControllerItemContext updateAppliedContentInsetsAdjustment]
  -[SKUIScrollingSegmentedControllerItemContext _applyNewContentInset:withOldContentInset:toContentScrollView:]


SKUIBrickGridPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIMissingItemDelegate>
 @property  SKUIGridComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIBrickGridPageSection dealloc]
  -[SKUIBrickGridPageSection .cxx_destruct]
  -[SKUIBrickGridPageSection artworkRequest:didLoadImage:]
  -[SKUIBrickGridPageSection initWithPageComponent:]
  -[SKUIBrickGridPageSection willAppearInContext:]
  -[SKUIBrickGridPageSection cellForIndexPath:]
  -[SKUIBrickGridPageSection cellSizeForIndexPath:]
  -[SKUIBrickGridPageSection numberOfCells]
  -[SKUIBrickGridPageSection prefetchResourcesWithReason:]
  -[SKUIBrickGridPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIBrickGridPageSection collectionViewDidSelectItemAtIndexPath:]
  -[SKUIBrickGridPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIBrickGridPageSection clickEventWithLink:elementName:index:]
  -[SKUIBrickGridPageSection _loadMissingItemsFromIndex:withReason:]
  -[SKUIBrickGridPageSection _missingItemLoader]
  -[SKUIBrickGridPageSection missingItemLoader:didLoadItems:invalidItemIdentifiers:]
  -[SKUIBrickGridPageSection _contentInsetsForColumnIndex:rowWidth:]
  -[SKUIBrickGridPageSection _editorialLayoutForBrick:]
  -[SKUIBrickGridPageSection _loadArtworkForBrick:artworkLoader:reason:]
  -[SKUIBrickGridPageSection _enumerateVisibleBricksUsingBlock:]


SKUIMediaSocialAuthor : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *authorType
 @property  NSString *dsid
 @property  NSString *identifier
 @property  NSArray *permissions
 @property  NSString *name
 @property  NSDictionary *storePlatformData
 @property  NSURL *thumbnailImageURL

  // instance methods
  -[SKUIMediaSocialAuthor isEqual:]
  -[SKUIMediaSocialAuthor name]
  -[SKUIMediaSocialAuthor copyWithZone:]
  -[SKUIMediaSocialAuthor .cxx_destruct]
  -[SKUIMediaSocialAuthor setName:]
  -[SKUIMediaSocialAuthor identifier]
  -[SKUIMediaSocialAuthor setIdentifier:]
  -[SKUIMediaSocialAuthor dsid]
  -[SKUIMediaSocialAuthor setDsid:]
  -[SKUIMediaSocialAuthor permissions]
  -[SKUIMediaSocialAuthor setAuthorType:]
  -[SKUIMediaSocialAuthor authorType]
  -[SKUIMediaSocialAuthor setThumbnailImageURL:]
  -[SKUIMediaSocialAuthor thumbnailImageURL]
  -[SKUIMediaSocialAuthor initWithAuthorDictionary:]
  -[SKUIMediaSocialAuthor setStorePlatformData:]
  -[SKUIMediaSocialAuthor storePlatformData]
  -[SKUIMediaSocialAuthor setPermissions:]


SKUIBrickGridCollectionViewCell : UICollectionViewCell /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  NSString *accessibilityLabel
 @property  UIImage *brickImage

  // instance methods
  -[SKUIBrickGridCollectionViewCell .cxx_destruct]
  -[SKUIBrickGridCollectionViewCell setBackgroundColor:]
  -[SKUIBrickGridCollectionViewCell accessibilityLabel]
  -[SKUIBrickGridCollectionViewCell setAccessibilityLabel:]
  -[SKUIBrickGridCollectionViewCell layoutSubviews]
  -[SKUIBrickGridCollectionViewCell contentInsets]
  -[SKUIBrickGridCollectionViewCell setContentInsets:]
  -[SKUIBrickGridCollectionViewCell setColoringWithColorScheme:]
  -[SKUIBrickGridCollectionViewCell applyEditorialLayout:orientation:]
  -[SKUIBrickGridCollectionViewCell setBrickImage:]
  -[SKUIBrickGridCollectionViewCell brickImage]


SKUIGiftCharity : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *amountDisclaimer
 @property  NSString *charityDescription
 @property  NSString *legalText
 @property  NSString *legalText2
 @property  NSString *name
 @property  NSArray *donationAmounts
 @property  NSString *identifier
 @property  SKUIArtwork *logoArtwork

  // instance methods
  -[SKUIGiftCharity name]
  -[SKUIGiftCharity .cxx_destruct]
  -[SKUIGiftCharity identifier]
  -[SKUIGiftCharity logoArtwork]
  -[SKUIGiftCharity initWithCharityDictionary:]
  -[SKUIGiftCharity amountDisclaimer]
  -[SKUIGiftCharity charityDescription]
  -[SKUIGiftCharity donationAmounts]
  -[SKUIGiftCharity legalText]
  -[SKUIGiftCharity legalText2]


SKUIScrollingTabNavigationController : SKUINavigationController <SKUIScrollingTabBarBottomInsetAwareContent, SKUIObservableNavigationStack>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SKUINavigationStackObserver> *navigationStackObserver
 @property  BOOL showingNavigationStackRootContent

  // instance methods
  -[SKUIScrollingTabNavigationController .cxx_destruct]
  -[SKUIScrollingTabNavigationController presentViewController:animated:completion:]
  -[SKUIScrollingTabNavigationController dismissViewControllerAnimated:completion:]
  -[SKUIScrollingTabNavigationController initWithNibName:bundle:]
  -[SKUIScrollingTabNavigationController viewDidAppear:]
  -[SKUIScrollingTabNavigationController didShowViewController:animated:]
  -[SKUIScrollingTabNavigationController _scrollViewBottomContentInsetForViewController:]
  -[SKUIScrollingTabNavigationController scrollingTabBarBottomInsetAdjustmentDidChange]
  -[SKUIScrollingTabNavigationController popToNavigationStackRootContentAnimated:withBehavior:]
  -[SKUIScrollingTabNavigationController navigationStackObserver]
  -[SKUIScrollingTabNavigationController setNavigationStackObserver:]
  -[SKUIScrollingTabNavigationController isShowingNavigationStackRootContent]
  -[SKUIScrollingTabNavigationController _observedNavigationStackDidChange]


SKUINavigationBarButtonsController : SKUINavigationBarSectionController <SKUIItemOfferButtonDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUINavigationBarButtonsController dealloc]
  -[SKUINavigationBarButtonsController .cxx_destruct]
  -[SKUINavigationBarButtonsController artworkRequest:didLoadImage:]
  -[SKUINavigationBarButtonsController _buttonAction:]
  -[SKUINavigationBarButtonsController reloadAfterDocumentUpdateWithNavigationItem:]
  -[SKUINavigationBarButtonsController _cancelConfirmationAction:]
  -[SKUINavigationBarButtonsController _showConfirmationAction:]
  -[SKUINavigationBarButtonsController initWithNavigationBarViewElement:]
  -[SKUINavigationBarButtonsController _updateButtonItem:withButtonViewElement:]
  -[SKUINavigationBarButtonsController addButtonItemWithButtonViewElement:]
  -[SKUINavigationBarButtonsController disconnectAllButtons]
  -[SKUINavigationBarButtonsController barButtonItemForElementIdentifier:]
  -[SKUINavigationBarButtonsController _imageForImageViewElement:]
  -[SKUINavigationBarButtonsController _itemOfferAction:]
  -[SKUINavigationBarButtonsController _updateItemOfferButton:withButtonViewElement:]
  -[SKUINavigationBarButtonsController _reloadButtonItem:withButtonViewElement:]
  -[SKUINavigationBarButtonsController _imageInsetsForImageViewElement:]


SKUIITunesPassLearnMoreAlertDelegate : NSObject /usr/lib/libc++.1.dylib <UIAlertViewDelegate>
 @property  UIViewController *presentingViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIITunesPassLearnMoreAlertDelegate shouldShowAlertForRedeem:configuration:]
  +[SKUIITunesPassLearnMoreAlertDelegate beginThrottleInterval]

  // instance methods
  -[SKUIITunesPassLearnMoreAlertDelegate .cxx_destruct]
  -[SKUIITunesPassLearnMoreAlertDelegate presentingViewController]
  -[SKUIITunesPassLearnMoreAlertDelegate alertView:didDismissWithButtonIndex:]
  -[SKUIITunesPassLearnMoreAlertDelegate show]
  -[SKUIITunesPassLearnMoreAlertDelegate setPresentingViewController:]
  -[SKUIITunesPassLearnMoreAlertDelegate initWithRedeemConfiguration:clientContext:]


SKUINavigationControllerAssistant : NSObject /usr/lib/libc++.1.dylib
 @property  UIView *childPaletteView
 @property  UINavigationController *navigationController
 @property  _UINavigationControllerPalette *paletteBackgroundView
 @property  UIViewController *statusOverlayViewController
 @property  SKUIClientContext *clientContext
 @property  BOOL hidesShadow
 @property  <SKUIStatusOverlayProvider> *statusOverlayProvider

  // class methods
  +[SKUINavigationControllerAssistant existingAssistantForNavigationController:]
  +[SKUINavigationControllerAssistant assistantForNavigationController:clientContext:]

  // instance methods
  -[SKUINavigationControllerAssistant dealloc]
  -[SKUINavigationControllerAssistant .cxx_destruct]
  -[SKUINavigationControllerAssistant hidesShadow]
  -[SKUINavigationControllerAssistant setHidesShadow:]
  -[SKUINavigationControllerAssistant navigationController]
  -[SKUINavigationControllerAssistant willShowViewController:animated:]
  -[SKUINavigationControllerAssistant setNavigationController:]
  -[SKUINavigationControllerAssistant clientContext]
  -[SKUINavigationControllerAssistant setPalettePinningBarHidden:]
  -[SKUINavigationControllerAssistant setPaletteView:animated:]
  -[SKUINavigationControllerAssistant setStatusOverlayProvider:]
  -[SKUINavigationControllerAssistant statusOverlayProvider]
  -[SKUINavigationControllerAssistant setStatusOverlayProvider:animated:]
  -[SKUINavigationControllerAssistant _previewDocumentChangeNotification:]
  -[SKUINavigationControllerAssistant _initWithNavigationController:clientContext:]
  -[SKUINavigationControllerAssistant paletteBackgroundView]
  -[SKUINavigationControllerAssistant _transitionToPaletteView:animated:operation:]
  -[SKUINavigationControllerAssistant _setStatusOverlayProvider:animated:]
  -[SKUINavigationControllerAssistant childPaletteView]
  -[SKUINavigationControllerAssistant statusOverlayViewController]
  -[SKUINavigationControllerAssistant setStatusOverlayViewController:]
  -[SKUINavigationControllerAssistant _hideOverlayView:animated:]
  -[SKUINavigationControllerAssistant _showOverlayView:previousOverlayView:animated:]
  -[SKUINavigationControllerAssistant setChildPaletteView:]
  -[SKUINavigationControllerAssistant _hideChildPaletteView:animated:]
  -[SKUINavigationControllerAssistant setPaletteBackgroundView:]


SKUIGiftAmount : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *displayLabel
 @property  NSString *partNumber
 @property  NSNumber *value

  // instance methods
  -[SKUIGiftAmount copyWithZone:]
  -[SKUIGiftAmount .cxx_destruct]
  -[SKUIGiftAmount value]
  -[SKUIGiftAmount setValue:]
  -[SKUIGiftAmount displayLabel]
  -[SKUIGiftAmount partNumber]
  -[SKUIGiftAmount HTTPBodyDictionary]
  -[SKUIGiftAmount initWithAmountDictionary:]
  -[SKUIGiftAmount setDisplayLabel:]
  -[SKUIGiftAmount setPartNumber:]


SKUISignInView : UIView /usr/lib/libobjc.A.dylib <UITextFieldDelegate, SKUIViewElementView>
 @property  <SKUISignInViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUISignInView prefetchResourcesForViewElement:reason:context:]
  +[SKUISignInView preferredSizeForViewElement:context:]
  +[SKUISignInView requestLayoutForViewElement:width:context:]
  +[SKUISignInView sizeThatFitsWidth:viewElement:context:]
  +[SKUISignInView _fontDescriptorWithViewElement:defaultTextStyle:bold:]
  +[SKUISignInView _labelWithViewElement:]
  +[SKUISignInView _textFieldWithViewElement:]
  +[SKUISignInView _borderPathWithSize:]

  // instance methods
  -[SKUISignInView delegate]
  -[SKUISignInView setDelegate:]
  -[SKUISignInView .cxx_destruct]
  -[SKUISignInView initWithFrame:]
  -[SKUISignInView sizeThatFits:]
  -[SKUISignInView layoutSubviews]
  -[SKUISignInView becomeFirstResponder]
  -[SKUISignInView setContentInset:]
  -[SKUISignInView resignFirstResponder]
  -[SKUISignInView canBecomeFirstResponder]
  -[SKUISignInView textField:shouldChangeCharactersInRange:replacementString:]
  -[SKUISignInView _layoutLabels]
  -[SKUISignInView reloadWithViewElement:width:context:]
  -[SKUISignInView setImage:forArtworkRequest:context:]
  -[SKUISignInView updateWithItemState:context:animated:]
  -[SKUISignInView viewForElementIdentifier:]
  -[SKUISignInView _clearFieldsAndLabels]
  -[SKUISignInView _layoutTextFieldsOffsetX:]
  -[SKUISignInView _accountNameText]
  -[SKUISignInView _applePasswordText]


SKUISignInTextView : UITextField /usr/lib/libobjc.A.dylib <UITextInputTraits>
 @property  long long keyboardType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long autocapitalizationType
 @property  long long autocorrectionType
 @property  long long spellCheckingType
 @property  long long smartQuotesType
 @property  long long smartDashesType
 @property  long long smartInsertDeleteType
 @property  long long keyboardAppearance
 @property  long long returnKeyType
 @property  BOOL enablesReturnKeyAutomatically
 @property  BOOL secureTextEntry
 @property  NSString *textContentType
 @property  UITextInputPasswordRules *passwordRules

  // instance methods
  -[SKUISignInTextView keyboardType]
  -[SKUISignInTextView setKeyboardType:]
  -[SKUISignInTextView spellCheckingType]
  -[SKUISignInTextView autocorrectionType]
  -[SKUISignInTextView autocapitalizationType]
  -[SKUISignInTextView returnKeyType]


SKUIActivityIndicatorView : SKUIViewReuseView <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIActivityIndicatorView prefetchResourcesForViewElement:reason:context:]
  +[SKUIActivityIndicatorView preferredSizeForViewElement:context:]
  +[SKUIActivityIndicatorView requestLayoutForViewElement:width:context:]
  +[SKUIActivityIndicatorView sizeThatFitsWidth:viewElement:context:]
  +[SKUIActivityIndicatorView _attributedStringWithLabel:context:]
  +[SKUIActivityIndicatorView _activityIndicatorSize]

  // instance methods
  -[SKUIActivityIndicatorView .cxx_destruct]
  -[SKUIActivityIndicatorView setHidden:]
  -[SKUIActivityIndicatorView sizeThatFits:]
  -[SKUIActivityIndicatorView layoutSubviews]
  -[SKUIActivityIndicatorView _isAnimating]
  -[SKUIActivityIndicatorView setContentInset:]
  -[SKUIActivityIndicatorView didMoveToSuperview]
  -[SKUIActivityIndicatorView didMoveToWindow]
  -[SKUIActivityIndicatorView _stopAnimating]
  -[SKUIActivityIndicatorView _startAnimating]
  -[SKUIActivityIndicatorView reloadWithViewElement:width:context:]
  -[SKUIActivityIndicatorView setImage:forArtworkRequest:context:]
  -[SKUIActivityIndicatorView updateWithItemState:context:animated:]
  -[SKUIActivityIndicatorView viewForElementIdentifier:]
  -[SKUIActivityIndicatorView _updateSpinnerAnimation]


SKUIDonationViewController : UINavigationController /usr/lib/libobjc.A.dylib
 @property  NSString *charityIdentifier
 @property  SKUIClientContext *clientContext
 @property  NSOperationQueue *operationQueue

  // instance methods
  -[SKUIDonationViewController initWithURL:]
  -[SKUIDonationViewController .cxx_destruct]
  -[SKUIDonationViewController operationQueue]
  -[SKUIDonationViewController setOperationQueue:]
  -[SKUIDonationViewController viewWillAppear:]
  -[SKUIDonationViewController clientContext]
  -[SKUIDonationViewController setClientContext:]
  -[SKUIDonationViewController _cancelButtonAction:]
  -[SKUIDonationViewController _finishAuthenticateWithResponse:error:]
  -[SKUIDonationViewController _configurationDidLoadWithResult:error:]
  -[SKUIDonationViewController initWithCharityIdentifier:]
  -[SKUIDonationViewController _initSKUIDonationViewController]
  -[SKUIDonationViewController _loadDonationConfiguration]
  -[SKUIDonationViewController charityIdentifier]


SKUITabBarBackgroundView : UIView /usr/lib/libobjc.A.dylib
 @property  _UINavigationBarAppearanceStorage *appearanceStorage
 @property  long long barStyle
 @property  UIColor *barTintColor
 @property  BOOL barWantsAdaptiveBackdrop
 @property  UIView *_shadowView
 @property  BOOL translucent
 @property  NSString *backdropGroupName
 @property  long long backdropStyle

  // instance methods
  -[SKUITabBarBackgroundView .cxx_destruct]
  -[SKUITabBarBackgroundView initWithFrame:]
  -[SKUITabBarBackgroundView layoutSubviews]
  -[SKUITabBarBackgroundView _shadowView]
  -[SKUITabBarBackgroundView appearanceStorage]
  -[SKUITabBarBackgroundView setBarStyle:]
  -[SKUITabBarBackgroundView barStyle]
  -[SKUITabBarBackgroundView isTranslucent]
  -[SKUITabBarBackgroundView setTranslucent:]
  -[SKUITabBarBackgroundView backdropGroupName]
  -[SKUITabBarBackgroundView setBackdropGroupName:]
  -[SKUITabBarBackgroundView setBarTintColor:]
  -[SKUITabBarBackgroundView barTintColor]
  -[SKUITabBarBackgroundView setBackdropStyle:]
  -[SKUITabBarBackgroundView backdropStyle]
  -[SKUITabBarBackgroundView _setShadowView:]
  -[SKUITabBarBackgroundView _currentCustomBackground]
  -[SKUITabBarBackgroundView _currentCustomBackgroundRespectOversize_legacy:]
  -[SKUITabBarBackgroundView _setFrame:forceUpdateBackgroundImage:]
  -[SKUITabBarBackgroundView _setIsContainedInPopover:]
  -[SKUITabBarBackgroundView updateBackgroundImage]
  -[SKUITabBarBackgroundView setAppearanceStorage:]
  -[SKUITabBarBackgroundView barWantsAdaptiveBackdrop]
  -[SKUITabBarBackgroundView setBarWantsAdaptiveBackdrop:]


SKUILoadGratisEligibilityOperation : NSOperation /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  @? outputBlock

  // instance methods
  -[SKUILoadGratisEligibilityOperation init]
  -[SKUILoadGratisEligibilityOperation .cxx_destruct]
  -[SKUILoadGratisEligibilityOperation main]
  -[SKUILoadGratisEligibilityOperation _bodyData]
  -[SKUILoadGratisEligibilityOperation setOutputBlock:]
  -[SKUILoadGratisEligibilityOperation outputBlock]
  -[SKUILoadGratisEligibilityOperation initWithBundleIdentifiers:clientContext:]


SKUIPhysicalCircleItemViewElement : SKUIViewElement
 @property  long long circleSize
 @property  NSString *itemIdentifier
 @property  SKUIImageViewElement *imageElement
 @property  SKUILabelViewElement *titleElement

  // instance methods
  -[SKUIPhysicalCircleItemViewElement .cxx_destruct]
  -[SKUIPhysicalCircleItemViewElement itemIdentifier]
  -[SKUIPhysicalCircleItemViewElement circleSize]
  -[SKUIPhysicalCircleItemViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIPhysicalCircleItemViewElement applyUpdatesWithElement:]
  -[SKUIPhysicalCircleItemViewElement titleElement]
  -[SKUIPhysicalCircleItemViewElement imageElement]


SKUIAttributedStringLayout : NSObject /usr/lib/libc++.1.dylib <SKUICachedLayout>
 @property  NSAttributedString *attributedString
 @property  double baselineOffset
 @property  double firstBaselineOffset
 @property  {CGSize=dd} boundingSize
 @property  long long numberOfLines
 @property  NSStringDrawingContext *stringDrawingContext
 @property  double topInset
 @property  BOOL usesTallCharacterSet
 @property  {UIEdgeInsets=dddd} edgeInsetsForShadow
 @property  NSShadow *shadow
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIAttributedStringLayout .cxx_destruct]
  -[SKUIAttributedStringLayout shadow]
  -[SKUIAttributedStringLayout attributedString]
  -[SKUIAttributedStringLayout baselineOffset]
  -[SKUIAttributedStringLayout firstBaselineOffset]
  -[SKUIAttributedStringLayout numberOfLines]
  -[SKUIAttributedStringLayout topInset]
  -[SKUIAttributedStringLayout boundingSize]
  -[SKUIAttributedStringLayout initWithLayoutRequest:]
  -[SKUIAttributedStringLayout edgeInsetsForShadow]
  -[SKUIAttributedStringLayout stringDrawingContext]
  -[SKUIAttributedStringLayout usesTallCharacterSet]


SKUIStarRatingViewElement : SKUIViewElement
 @property  long long starType
 @property  float ratingValue
 @property  SKUIViewElementText *text

  // instance methods
  -[SKUIStarRatingViewElement .cxx_destruct]
  -[SKUIStarRatingViewElement isEnabled]
  -[SKUIStarRatingViewElement text]
  -[SKUIStarRatingViewElement ratingValue]
  -[SKUIStarRatingViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIStarRatingViewElement applyUpdatesWithElement:]
  -[SKUIStarRatingViewElement starType]


SKUIDecorationImageViewElement : SKUIImageViewElement

SKUIEditProfileSettingDescriptionView : SKUISettingDescriptionView <UITextFieldDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIEditProfileSettingDescriptionView prefetchResourcesForSettingDescription:reason:context:]
  +[SKUIEditProfileSettingDescriptionView preferredSizeForSettingDescription:context:]
  +[SKUIEditProfileSettingDescriptionView requestLayoutForSettingDescription:width:context:]
  +[SKUIEditProfileSettingDescriptionView sizeThatFitsWidth:settingDescription:context:]
  +[SKUIEditProfileSettingDescriptionView _baselineFontForTextStyle:]

  // instance methods
  -[SKUIEditProfileSettingDescriptionView .cxx_destruct]
  -[SKUIEditProfileSettingDescriptionView layoutSubviews]
  -[SKUIEditProfileSettingDescriptionView textFieldShouldReturn:]
  -[SKUIEditProfileSettingDescriptionView textFieldDidBeginEditing:]
  -[SKUIEditProfileSettingDescriptionView textFieldDidEndEditing:]
  -[SKUIEditProfileSettingDescriptionView textField:shouldChangeCharactersInRange:replacementString:]
  -[SKUIEditProfileSettingDescriptionView setImage:forArtworkRequest:context:]
  -[SKUIEditProfileSettingDescriptionView reloadWithSettingDescription:width:context:]
  -[SKUIEditProfileSettingDescriptionView _editProfilePhoto]
  -[SKUIEditProfileSettingDescriptionView _textFieldWithPlaceholder:]
  -[SKUIEditProfileSettingDescriptionView _updateHandleTextFieldValidity]


SKUIDonationStepViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  SKUIGiftCharity *charity
 @property  SKUIDonationConfiguration *donationConfiguration
 @property  NSOperationQueue *operationQueue
 @property  SKUIDonationViewController *donationViewController

  // instance methods
  -[SKUIDonationStepViewController .cxx_destruct]
  -[SKUIDonationStepViewController operationQueue]
  -[SKUIDonationStepViewController setOperationQueue:]
  -[SKUIDonationStepViewController initWithCharity:configuration:]
  -[SKUIDonationStepViewController donationViewController]
  -[SKUIDonationStepViewController charity]
  -[SKUIDonationStepViewController donationConfiguration]


SKUITestDataURLProtocol : NSURLProtocol /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // class methods
  +[SKUITestDataURLProtocol canInitWithRequest:]
  +[SKUITestDataURLProtocol requestIsCacheEquivalent:toRequest:]
  +[SKUITestDataURLProtocol canonicalRequestForRequest:]

  // instance methods
  -[SKUITestDataURLProtocol stopLoading]
  -[SKUITestDataURLProtocol startLoading]


SKUIResourceRequest : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  BOOL cachesInMemory
 @property  id cacheKey
 @property  unsigned long requestIdentifier

  // instance methods
  -[SKUIResourceRequest init]
  -[SKUIResourceRequest isEqual:]
  -[SKUIResourceRequest copyWithZone:]
  -[SKUIResourceRequest .cxx_destruct]
  -[SKUIResourceRequest cacheKey]
  -[SKUIResourceRequest setCacheKey:]
  -[SKUIResourceRequest setRequestIdentifier:]
  -[SKUIResourceRequest requestIdentifier]
  -[SKUIResourceRequest cachesInMemory]
  -[SKUIResourceRequest finishWithResource:]
  -[SKUIResourceRequest newLoadOperation]
  -[SKUIResourceRequest _initSKUIResourceRequest]


SKUIReviewInAppRatingButtonViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  NSString *titleString
 @property  unsigned long style
 @property  UILabel *titleLabel
 @property  BOOL enabled

  // instance methods
  -[SKUIReviewInAppRatingButtonViewController setEnabled:]
  -[SKUIReviewInAppRatingButtonViewController .cxx_destruct]
  -[SKUIReviewInAppRatingButtonViewController style]
  -[SKUIReviewInAppRatingButtonViewController setStyle:]
  -[SKUIReviewInAppRatingButtonViewController isEnabled]
  -[SKUIReviewInAppRatingButtonViewController titleLabel]
  -[SKUIReviewInAppRatingButtonViewController viewDidLoad]
  -[SKUIReviewInAppRatingButtonViewController setTitleLabel:]
  -[SKUIReviewInAppRatingButtonViewController initWithTitle:style:]
  -[SKUIReviewInAppRatingButtonViewController titleString]
  -[SKUIReviewInAppRatingButtonViewController setTitleString:]


SKUIDonationAmountViewController : SKUIDonationStepViewController <SKUIDonationConfigurationObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIDonationAmountViewController dealloc]
  -[SKUIDonationAmountViewController .cxx_destruct]
  -[SKUIDonationAmountViewController loadView]
  -[SKUIDonationAmountViewController _cancelButtonAction:]
  -[SKUIDonationAmountViewController _finishValidationWithResponse:error:]
  -[SKUIDonationAmountViewController _finishPurchaseWithResult:errorMessage:]
  -[SKUIDonationAmountViewController initWithCharity:configuration:]
  -[SKUIDonationAmountViewController _donateButtonAction:]
  -[SKUIDonationAmountViewController _amountChangedNotification:]
  -[SKUIDonationAmountViewController _validateDonation:]
  -[SKUIDonationAmountViewController _performActionAfterValidation]
  -[SKUIDonationAmountViewController _setDonationButtonEnabled:]
  -[SKUIDonationAmountViewController _reenableAfterFailure]
  -[SKUIDonationAmountViewController donationConfigurationController:didLoadLogoForCharity:]


SKUIBackdropContentViewController : UIViewController /usr/lib/libobjc.A.dylib
 @property  long long backdropViewPrivateStyle
 @property  UIViewController *contentViewController

  // instance methods
  -[SKUIBackdropContentViewController .cxx_destruct]
  -[SKUIBackdropContentViewController loadView]
  -[SKUIBackdropContentViewController initWithContentViewController:]
  -[SKUIBackdropContentViewController setContentViewController:]
  -[SKUIBackdropContentViewController contentViewController]
  -[SKUIBackdropContentViewController setBackdropViewPrivateStyle:]
  -[SKUIBackdropContentViewController backdropViewPrivateStyle]


SKUIIndexBarSingleEntryListController : SKUIIndexBarEntryListController
 @property  SKUIIndexBarEntryViewElement *entryViewElement

  // instance methods
  -[SKUIIndexBarSingleEntryListController .cxx_destruct]
  -[SKUIIndexBarSingleEntryListController entryDescriptorAtIndex:]
  -[SKUIIndexBarSingleEntryListController numberOfEntryDescriptors]
  -[SKUIIndexBarSingleEntryListController hidesIndexBar]
  -[SKUIIndexBarSingleEntryListController targetIndexBarEntryIDForEntryDescriptorAtIndex:returningRelativeSectionIndex:]
  -[SKUIIndexBarSingleEntryListController needsRootTargetViewElement]
  -[SKUIIndexBarSingleEntryListController reloadViewElementData]
  -[SKUIIndexBarSingleEntryListController initWithEntryViewElement:]
  -[SKUIIndexBarSingleEntryListController entryViewElement]


SKUIDonationAmountView : UIView /usr/lib/libobjc.A.dylib
 @property  SKUIGiftCharity *charity
 @property  UIImage *logoImage
 @property  SKUIGiftAmount *selectedAmount

  // instance methods
  -[SKUIDonationAmountView dealloc]
  -[SKUIDonationAmountView .cxx_destruct]
  -[SKUIDonationAmountView layoutSubviews]
  -[SKUIDonationAmountView logoImage]
  -[SKUIDonationAmountView setLogoImage:]
  -[SKUIDonationAmountView selectedAmount]
  -[SKUIDonationAmountView charity]
  -[SKUIDonationAmountView initWithCharity:]
  -[SKUIDonationAmountView _amountButtonDown:]
  -[SKUIDonationAmountView _amountButtonUpInside:]
  -[SKUIDonationAmountView _amountButtonUpOutside:]


SKUIActivityIndicatorViewElement : SKUIViewElement
 @property  SKUIImageViewElement *image
 @property  double period
 @property  SKUILabelViewElement *text

  // instance methods
  -[SKUIActivityIndicatorViewElement image]
  -[SKUIActivityIndicatorViewElement text]
  -[SKUIActivityIndicatorViewElement period]
  -[SKUIActivityIndicatorViewElement isDisabled]
  -[SKUIActivityIndicatorViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIActivityIndicatorViewElement pageComponentType]


SKUIRedeemIdRequiresValidationOperation : ISOperation /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI <ISDialogOperationDelegate>
 @property  @? resultBlock
 @property  SKUIRedeemViewControllerLegacy *redeemViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIRedeemIdRequiresValidationOperation .cxx_destruct]
  -[SKUIRedeemIdRequiresValidationOperation main]
  -[SKUIRedeemIdRequiresValidationOperation resultBlock]
  -[SKUIRedeemIdRequiresValidationOperation setResultBlock:]
  -[SKUIRedeemIdRequiresValidationOperation _authenticationContext]
  -[SKUIRedeemIdRequiresValidationOperation setRedeemViewController:]
  -[SKUIRedeemIdRequiresValidationOperation operation:selectedButton:]
  -[SKUIRedeemIdRequiresValidationOperation redeemViewController]
  -[SKUIRedeemIdRequiresValidationOperation _performAuthentication]
  -[SKUIRedeemIdRequiresValidationOperation _subOperationWithBagKey:]
  -[SKUIRedeemIdRequiresValidationOperation _logResultsForSuccess:shouldVerify:failureReason:error:]


SKUITrendingSearch : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *term
 @property  NSString *URLString

  // instance methods
  -[SKUITrendingSearch .cxx_destruct]
  -[SKUITrendingSearch URLString]
  -[SKUITrendingSearch setURLString:]
  -[SKUITrendingSearch term]
  -[SKUITrendingSearch setTerm:]


SKUITrendingSearchPage : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *title
 @property  NSArray *searches

  // instance methods
  -[SKUITrendingSearchPage .cxx_destruct]
  -[SKUITrendingSearchPage title]
  -[SKUITrendingSearchPage setTitle:]
  -[SKUITrendingSearchPage searches]
  -[SKUITrendingSearchPage setSearches:]


SKUITabularLockupView : SKUIViewReuseView <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUITabularLockupView prefetchResourcesForViewElement:reason:context:]
  +[SKUITabularLockupView preferredSizeForViewElement:context:]
  +[SKUITabularLockupView requestLayoutForViewElement:width:context:]
  +[SKUITabularLockupView sizeThatFitsWidth:viewElement:context:]
  +[SKUITabularLockupView _attributedStringForLabel:context:]
  +[SKUITabularLockupView _requestLayoutForViewElements:width:context:]

  // instance methods
  -[SKUITabularLockupView .cxx_destruct]
  -[SKUITabularLockupView initWithFrame:]
  -[SKUITabularLockupView layoutSubviews]
  -[SKUITabularLockupView setContentInset:]
  -[SKUITabularLockupView reloadWithViewElement:width:context:]
  -[SKUITabularLockupView setImage:forArtworkRequest:context:]
  -[SKUITabularLockupView updateWithItemState:context:animated:]
  -[SKUITabularLockupView viewForElementIdentifier:]
  -[SKUITabularLockupView _sizeViewsForColumn:toFitWidth:]
  -[SKUITabularLockupView _layoutSubviewsForColumn:]


SKUIResponseView : SKUIViewReuseView <SKUIViewElementView>
 @property  SKUITextBoxView *descriptionView
 @property  SKUIAttributedStringView *subtitleView
 @property  UIImageView *replyImageView
 @property  {UIEdgeInsets=dddd} contentInset
 @property  NSMapTable *allViewTextProperties
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIResponseView prefetchResourcesForViewElement:reason:context:]
  +[SKUIResponseView preferredSizeForViewElement:context:]
  +[SKUIResponseView requestLayoutForViewElement:width:context:]
  +[SKUIResponseView sizeThatFitsWidth:viewElement:context:]
  +[SKUIResponseView _attributedStringForSubtitleLabel:context:]

  // instance methods
  -[SKUIResponseView .cxx_destruct]
  -[SKUIResponseView initWithFrame:]
  -[SKUIResponseView sizeThatFits:]
  -[SKUIResponseView layoutSubviews]
  -[SKUIResponseView setContentInset:]
  -[SKUIResponseView contentInset]
  -[SKUIResponseView subtitleView]
  -[SKUIResponseView reloadWithViewElement:width:context:]
  -[SKUIResponseView setImage:forArtworkRequest:context:]
  -[SKUIResponseView updateWithItemState:context:animated:]
  -[SKUIResponseView viewForElementIdentifier:]
  -[SKUIResponseView allViewTextProperties]
  -[SKUIResponseView setDescriptionView:]
  -[SKUIResponseView descriptionView]
  -[SKUIResponseView setAllViewTextProperties:]
  -[SKUIResponseView setSubtitleView:]
  -[SKUIResponseView replyImageView]
  -[SKUIResponseView setReplyImageView:]


SKUIToggleStateItem : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long count
 @property  NSString *itemIdentifier
 @property  BOOL toggled
 @property  NSString *nonToggleString
 @property  NSString *toggledString

  // instance methods
  -[SKUIToggleStateItem copyWithZone:]
  -[SKUIToggleStateItem count]
  -[SKUIToggleStateItem .cxx_destruct]
  -[SKUIToggleStateItem setCount:]
  -[SKUIToggleStateItem itemIdentifier]
  -[SKUIToggleStateItem setItemIdentifier:]
  -[SKUIToggleStateItem toggled]
  -[SKUIToggleStateItem setToggled:]
  -[SKUIToggleStateItem toggledString]
  -[SKUIToggleStateItem setToggledString:]
  -[SKUIToggleStateItem nonToggleString]
  -[SKUIToggleStateItem setNonToggleString:]


SKUIDonationResultViewController : SKUIDonationStepViewController <SKUIDonationConfigurationObserver>
 @property  SKUIGiftAmount *donationAmount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIDonationResultViewController .cxx_destruct]
  -[SKUIDonationResultViewController loadView]
  -[SKUIDonationResultViewController _doneButtonAction:]
  -[SKUIDonationResultViewController initWithCharity:configuration:]
  -[SKUIDonationResultViewController setDonationAmount:]
  -[SKUIDonationResultViewController donationConfigurationController:didLoadLogoForCharity:]
  -[SKUIDonationResultViewController donationAmount]


SKUIGiftPurchaseRequest : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUIGiftPurchaseRequest .cxx_destruct]
  -[SKUIGiftPurchaseRequest initWithGift:configuration:]
  -[SKUIGiftPurchaseRequest purchaseWithCompletionBlock:]
  -[SKUIGiftPurchaseRequest initWithDonation:configuration:]
  -[SKUIGiftPurchaseRequest _requestWithURL:bodyDictionary:]


SKUIStoreNotes : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *standardNotes

  // instance methods
  -[SKUIStoreNotes .cxx_destruct]
  -[SKUIStoreNotes standardNotes]
  -[SKUIStoreNotes setStandardNotes:]


SKUITracklistHeaderCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUITracklistHeaderCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUITracklistHeaderCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUITracklistHeaderCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUITracklistHeaderCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUITracklistHeaderCollectionViewCell _attributedStringForLabel:context:]
  +[SKUITracklistHeaderCollectionViewCell sizeForHeaderTitleLabel:]

  // instance methods
  -[SKUITracklistHeaderCollectionViewCell .cxx_destruct]
  -[SKUITracklistHeaderCollectionViewCell initWithFrame:]
  -[SKUITracklistHeaderCollectionViewCell layoutSubviews]
  -[SKUITracklistHeaderCollectionViewCell setContentInset:]
  -[SKUITracklistHeaderCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUITracklistHeaderCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUITracklistHeaderCollectionViewCell updateWithItemState:context:animated:]
  -[SKUITracklistHeaderCollectionViewCell viewForElementIdentifier:]


SKUIReviewConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *allVersionsURLString
 @property  NSString *currentVersionURLString
 @property  NSString *pageNumberQueryParameter
 @property  NSString *ratingURLString

  // instance methods
  -[SKUIReviewConfiguration .cxx_destruct]
  -[SKUIReviewConfiguration initWithConfigurationDictionary:]
  -[SKUIReviewConfiguration ratingURLString]
  -[SKUIReviewConfiguration allVersionsURLString]
  -[SKUIReviewConfiguration currentVersionURLString]
  -[SKUIReviewConfiguration pageNumberQueryParameter]


SKUICounterCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
 @property  {UIEdgeInsets=dddd} contentInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUICounterCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUICounterCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUICounterCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUICounterCollectionViewCell sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUICounterCollectionViewCell .cxx_destruct]
  -[SKUICounterCollectionViewCell setBackgroundColor:]
  -[SKUICounterCollectionViewCell initWithFrame:]
  -[SKUICounterCollectionViewCell layoutSubviews]
  -[SKUICounterCollectionViewCell setHighlighted:]
  -[SKUICounterCollectionViewCell setContentInset:]
  -[SKUICounterCollectionViewCell setSelected:]
  -[SKUICounterCollectionViewCell contentInset]
  -[SKUICounterCollectionViewCell applyLayoutAttributes:]
  -[SKUICounterCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUICounterCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUICounterCollectionViewCell updateWithItemState:context:animated:]
  -[SKUICounterCollectionViewCell viewForElementIdentifier:]
  -[SKUICounterCollectionViewCell _reloadHighlightImageView]


SKUIProductPage : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long defaultPageFragment
 @property  SKUIProductPageItem *item
 @property  NSData *ITMLData
 @property  NSHTTPURLResponse *ITMLResponse
 @property  SSMetricsConfiguration *metricsConfiguration
 @property  NSString *metricsPageDescription
 @property  NSURL *pageURL
 @property  SKUIProductPageProductInfo *productInformation
 @property  NSArray *relatedContentSwooshes
 @property  SKUIReviewConfiguration *reviewConfiguration
 @property  SKUIUber *uber

  // instance methods
  -[SKUIProductPage copyWithZone:]
  -[SKUIProductPage .cxx_destruct]
  -[SKUIProductPage item]
  -[SKUIProductPage setItem:]
  -[SKUIProductPage setPageURL:]
  -[SKUIProductPage pageURL]
  -[SKUIProductPage metricsConfiguration]
  -[SKUIProductPage setMetricsConfiguration:]
  -[SKUIProductPage setITMLData:]
  -[SKUIProductPage setITMLResponse:]
  -[SKUIProductPage setMetricsPageDescription:]
  -[SKUIProductPage setUber:]
  -[SKUIProductPage ITMLData]
  -[SKUIProductPage ITMLResponse]
  -[SKUIProductPage metricsPageDescription]
  -[SKUIProductPage uber]
  -[SKUIProductPage setDefaultPageFragment:]
  -[SKUIProductPage productInformation]
  -[SKUIProductPage reviewConfiguration]
  -[SKUIProductPage defaultPageFragment]
  -[SKUIProductPage relatedContentSwooshes]
  -[SKUIProductPage setProductInformation:]
  -[SKUIProductPage setRelatedContentSwooshes:]
  -[SKUIProductPage setReviewConfiguration:]


SKUIModernChartsDocumentViewController : SKUIViewController <SKUIResourceLoaderDelegate, SKUIDocumentViewController, SKUIModalSourceViewProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIModernChartsDocumentViewController .cxx_destruct]
  -[SKUIModernChartsDocumentViewController loadView]
  -[SKUIModernChartsDocumentViewController viewWillLayoutSubviews]
  -[SKUIModernChartsDocumentViewController _contentInset]
  -[SKUIModernChartsDocumentViewController contentScrollView]
  -[SKUIModernChartsDocumentViewController _resourceLoader]
  -[SKUIModernChartsDocumentViewController _showActivityIndicator]
  -[SKUIModernChartsDocumentViewController documentDidUpdate:]
  -[SKUIModernChartsDocumentViewController documentMediaQueriesDidUpdate:]
  -[SKUIModernChartsDocumentViewController resourceLoader:didLoadAllForReason:]
  -[SKUIModernChartsDocumentViewController resourceLoaderDidBeginLoading:]
  -[SKUIModernChartsDocumentViewController getModalSourceViewForElementIdentifier:completionBlock:]
  -[SKUIModernChartsDocumentViewController initWithTemplateElement:]
  -[SKUIModernChartsDocumentViewController _layoutCache]
  -[SKUIModernChartsDocumentViewController _viewLayoutContext]
  -[SKUIModernChartsDocumentViewController _newColumnViewControllersWithReusableViewControllers:]
  -[SKUIModernChartsDocumentViewController _computedFrameForActivityIndicatorView]
  -[SKUIModernChartsDocumentViewController _reloadWithTemplateElement:]
  -[SKUIModernChartsDocumentViewController _hideActivityIndicator]


SKUIMenuPageComponent : SKUIPageComponent
 @property  SKUISegmentedControlViewElement *viewElement
 @property  long long menuStyle
 @property  NSString *menuTitle
 @property  float menuTitleFontSize
 @property  long long menuTitleFontWeight
 @property  long long defaultSelectedIndex
 @property  long long numberOfItems
 @property  NSArray *allTitles
 @property  NSString *titleForMoreItem

  // instance methods
  -[SKUIMenuPageComponent .cxx_destruct]
  -[SKUIMenuPageComponent numberOfItems]
  -[SKUIMenuPageComponent menuTitle]
  -[SKUIMenuPageComponent defaultSelectedIndex]
  -[SKUIMenuPageComponent componentType]
  -[SKUIMenuPageComponent initWithCustomPageContext:]
  -[SKUIMenuPageComponent initWithViewElement:]
  -[SKUIMenuPageComponent childComponentsForIndex:]
  -[SKUIMenuPageComponent initWithRoomSortData:]
  -[SKUIMenuPageComponent _setChildComponents:forIndex:]
  -[SKUIMenuPageComponent menuStyle]
  -[SKUIMenuPageComponent _componentWithContext:]
  -[SKUIMenuPageComponent allTitles]
  -[SKUIMenuPageComponent sortURLForIndex:]
  -[SKUIMenuPageComponent titleForIndex:]
  -[SKUIMenuPageComponent menuTitleFontSize]
  -[SKUIMenuPageComponent menuTitleFontWeight]
  -[SKUIMenuPageComponent titleForMoreItem]


SKUIRedeemNativeResultsViewController : SKUIRedeemResultsViewController <SKUIItemStateCenterObserver, SKUIRedeemResultsViewDelegate>
 @property  UIButton *anotherButton
 @property  SKUITextLayout *extendedMessageTextLayout
 @property  SKUITextBoxView *extendedMessageView
 @property  UIImageView *headerImageView
 @property  UIImage *itemImage
 @property  SKUIItemStateCenter *itemStateCenter
 @property  SKUIGiftItemView *itemView
 @property  SKUIRedeemResultMessageView *messageView
 @property  NSOperationQueue *operationQueue
 @property  SKUIRedeemITunesPassLockup *passbookLockup
 @property  unsigned long currentItemStateFlag
 @property  BOOL extendedMessageIsExpanded
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIRedeemNativeResultsViewController canShowResultsForRedeem:]

  // instance methods
  -[SKUIRedeemNativeResultsViewController dealloc]
  -[SKUIRedeemNativeResultsViewController .cxx_destruct]
  -[SKUIRedeemNativeResultsViewController operationQueue]
  -[SKUIRedeemNativeResultsViewController _item]
  -[SKUIRedeemNativeResultsViewController setOperationQueue:]
  -[SKUIRedeemNativeResultsViewController loadView]
  -[SKUIRedeemNativeResultsViewController viewWillAppear:]
  -[SKUIRedeemNativeResultsViewController _itemView]
  -[SKUIRedeemNativeResultsViewController _emptySection]
  -[SKUIRedeemNativeResultsViewController _tableWidth]
  -[SKUIRedeemNativeResultsViewController _reloadSections]
  -[SKUIRedeemNativeResultsViewController itemStateCenter:itemStatesChanged:]
  -[SKUIRedeemNativeResultsViewController setItemImage:]
  -[SKUIRedeemNativeResultsViewController itemImage]
  -[SKUIRedeemNativeResultsViewController _setHeaderImage:]
  -[SKUIRedeemNativeResultsViewController setItemView:]
  -[SKUIRedeemNativeResultsViewController initWithRedeem:]
  -[SKUIRedeemNativeResultsViewController _passbookLockupAction:]
  -[SKUIRedeemNativeResultsViewController redeemResultsView:didSelectRowAtIndexPath:]
  -[SKUIRedeemNativeResultsViewController itemView]
  -[SKUIRedeemNativeResultsViewController _setItemImage:]
  -[SKUIRedeemNativeResultsViewController _reloadResultViewMessage]
  -[SKUIRedeemNativeResultsViewController _redeemAnotherAction:]
  -[SKUIRedeemNativeResultsViewController _extendedMessageAction:]
  -[SKUIRedeemNativeResultsViewController _openAction:]
  -[SKUIRedeemNativeResultsViewController currentItemStateFlag]
  -[SKUIRedeemNativeResultsViewController setCurrentItemStateFlag:]
  -[SKUIRedeemNativeResultsViewController _resultImageViewSection]
  -[SKUIRedeemNativeResultsViewController _itemViewSection]
  -[SKUIRedeemNativeResultsViewController _messageViewSection]
  -[SKUIRedeemNativeResultsViewController _anotherButtonSection]
  -[SKUIRedeemNativeResultsViewController _passbookLearnMoreSection]
  -[SKUIRedeemNativeResultsViewController _headerImageViewSection]
  -[SKUIRedeemNativeResultsViewController _extendedMessageViewSection]
  -[SKUIRedeemNativeResultsViewController _linksSection]
  -[SKUIRedeemNativeResultsViewController anotherButton]
  -[SKUIRedeemNativeResultsViewController setAnotherButton:]
  -[SKUIRedeemNativeResultsViewController extendedMessageTextLayout]
  -[SKUIRedeemNativeResultsViewController setExtendedMessageTextLayout:]
  -[SKUIRedeemNativeResultsViewController extendedMessageView]
  -[SKUIRedeemNativeResultsViewController setExtendedMessageView:]
  -[SKUIRedeemNativeResultsViewController headerImageView]
  -[SKUIRedeemNativeResultsViewController setHeaderImageView:]
  -[SKUIRedeemNativeResultsViewController itemStateCenter]
  -[SKUIRedeemNativeResultsViewController setItemStateCenter:]
  -[SKUIRedeemNativeResultsViewController messageView]
  -[SKUIRedeemNativeResultsViewController setMessageView:]
  -[SKUIRedeemNativeResultsViewController passbookLockup]
  -[SKUIRedeemNativeResultsViewController setPassbookLockup:]
  -[SKUIRedeemNativeResultsViewController extendedMessageIsExpanded]
  -[SKUIRedeemNativeResultsViewController setExtendedMessageIsExpanded:]


SKUIMenuPageSection : SKUIStorePageSection <SKUIMenuViewControllerDelegate, SKUIPopupMenuDelegate, SKUISortDataRequestDelegate, UIPopoverControllerDelegate>
 @property  SKUIMenuPageComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIMenuPageSection dealloc]
  -[SKUIMenuPageSection .cxx_destruct]
  -[SKUIMenuPageSection popoverControllerDidDismissPopover:]
  -[SKUIMenuPageSection initWithPageComponent:]
  -[SKUIMenuPageSection backgroundColorForIndexPath:]
  -[SKUIMenuPageSection sectionContentInset]
  -[SKUIMenuPageSection willAppearInContext:]
  -[SKUIMenuPageSection cellForIndexPath:]
  -[SKUIMenuPageSection cellSizeForIndexPath:]
  -[SKUIMenuPageSection numberOfCells]
  -[SKUIMenuPageSection _contentChildView]
  -[SKUIMenuPageSection menuViewController:didSelectItemAtIndex:]
  -[SKUIMenuPageSection sortDataRequest:didFinishWithLockups:]
  -[SKUIMenuPageSection _cancelMenuAction:]
  -[SKUIMenuPageSection _setSelectedIndex:]
  -[SKUIMenuPageSection _dismissMenuViewController]
  -[SKUIMenuPageSection _restorePreviousSelection]
  -[SKUIMenuPageSection _showMoreList]
  -[SKUIMenuPageSection _pillsControl]
  -[SKUIMenuPageSection _popupHeaderView]
  -[SKUIMenuPageSection _pillAction:]
  -[SKUIMenuPageSection _loadSortDataIfNecessaryForMenuIndex:reason:]
  -[SKUIMenuPageSection _newMenuViewController]
  -[SKUIMenuPageSection _showMenuViewController]
  -[SKUIMenuPageSection _showPopoverController]
  -[SKUIMenuPageSection popupMenuHeader:didSelectMenuItemAtIndex:]


SKUIStackListViewElement : SKUIViewElement
  // instance methods
  -[SKUIStackListViewElement pageComponentType]


SKUIMenuPageSectionContext : NSObject /usr/lib/libc++.1.dylib
 @property  long long selectedIndex

  // instance methods
  -[SKUIMenuPageSectionContext .cxx_destruct]
  -[SKUIMenuPageSectionContext selectedIndex]
  -[SKUIMenuPageSectionContext setSelectedIndex:]
  -[SKUIMenuPageSectionContext sectionsForIndex:]
  -[SKUIMenuPageSectionContext setSections:forIndex:]


SKUIClientContext : NSObject /usr/lib/libc++.1.dylib <SUClientInterfaceDelegatePrivate>
 @property  BOOL bootstrapScriptFallbackDisabled
 @property  SKUIApplicationController *_applicationController
 @property  NSCache *placeholderImageCache
 @property  SKUITrendingSearchProvider *trendingSearchProvider
 @property  NSOperationQueue *resourceLoadQueue
 @property  Class moviePlayerViewControllerClass
 @property  BOOL multiUser
 @property  BOOL managedAppleID
 @property  SKUIApplicationController *applicationController
 @property  NSString *navigationHistoryPersistenceKey
 @property  NSDictionary *configurationDictionary
 @property  SSVPlatformContext *platformContext
 @property  IKAppContext *_scriptAppContext
 @property  NSArray *navigationHistory
 @property  SUClientInterface *clientInterface
 @property  long long userInterfaceIdiomOverride
 @property  NSString *storeFrontIdentifier
 @property  SSURLBag *URLBag
 @property  NSString *metricsConfigurationIdentifier
 @property  SKUIURL *purchaseReferrerURL
 @property  SSUpdatableAssetController *updatableAssetController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIClientContext defaultContext]
  +[SKUIClientContext _cachePath]
  +[SKUIClientContext localizedStringForKey:inBundles:inTable:]
  +[SKUIClientContext localizedStringForKey:inBundles:]
  +[SKUIClientContext _fallbackConfigurationDictionary]
  +[SKUIClientContext _cachePathForStoreFrontIdentifier:]
  +[SKUIClientContext _configurationDictionaryWithBagDictionary:]

  // instance methods
  -[SKUIClientContext dealloc]
  -[SKUIClientContext .cxx_destruct]
  -[SKUIClientContext isMultiUser]
  -[SKUIClientContext configurationDictionary]
  -[SKUIClientContext localizedStringForKey:]
  -[SKUIClientContext isManagedAppleID]
  -[SKUIClientContext clientInterface]
  -[SKUIClientContext storeFrontIdentifier]
  -[SKUIClientContext valueForConfigurationKey:]
  -[SKUIClientContext _setAdditionalPurchaseParameters:]
  -[SKUIClientContext _setPurchaseAffiliateIdentifier:]
  -[SKUIClientContext _setPurchaseURLBagType:]
  -[SKUIClientContext setMetricsPageContext:forViewController:]
  -[SKUIClientContext initWithConfigurationDictionary:]
  -[SKUIClientContext setUserInterfaceIdiomOverride:]
  -[SKUIClientContext clientInterface:presentDialog:]
  -[SKUIClientContext scriptInterfaceForClientInterface:]
  -[SKUIClientContext clientInterface:dispatchOnPageResponseWithData:response:]
  -[SKUIClientContext clientInterface:dispatchXEvent:completionBlock:]
  -[SKUIClientContext localizedStringForKey:inTable:]
  -[SKUIClientContext URLBag]
  -[SKUIClientContext customizePurchase:]
  -[SKUIClientContext customizeSoftwarePurchase:]
  -[SKUIClientContext platformContext]
  -[SKUIClientContext applicationController]
  -[SKUIClientContext sendApplicationDidEnterBackground]
  -[SKUIClientContext sendApplicationWillEnterForeground]
  -[SKUIClientContext sendOnPageResponseWithDocument:data:URLResponse:performanceMetrics:]
  -[SKUIClientContext sendAppPreviewStateChanged:]
  -[SKUIClientContext sendApplicationWindowSizeDidUpdate:]
  -[SKUIClientContext _scriptAppContext]
  -[SKUIClientContext previewViewControllerForViewElement:]
  -[SKUIClientContext getDefaultMetricsControllerWithCompletionBlock:]
  -[SKUIClientContext metricsPageContextForViewController:]
  -[SKUIClientContext sendOnXEventWithDictionary:completionBlock:]
  -[SKUIClientContext resourceLoadQueue]
  -[SKUIClientContext newLoadStoreURLOperationWithURL:]
  -[SKUIClientContext _applicationController]
  -[SKUIClientContext existingBagValueForKey:]
  -[SKUIClientContext shouldForceTransientSearchControllerBahavior]
  -[SKUIClientContext additionalLeftBarButtonItemForDocumentContainerViewController:]
  -[SKUIClientContext additionalRightBarButtonItemForDocumentContainerViewController:]
  -[SKUIClientContext documentViewControllerForTemplateViewElement:]
  -[SKUIClientContext newLegacyStorePageViewControllerForURLResponse:]
  -[SKUIClientContext trendingSearchProvider]
  -[SKUIClientContext updatableAssetController]
  -[SKUIClientContext placeholderImageCache]
  -[SKUIClientContext localizedAlertWithError:]
  -[SKUIClientContext additionalLeftBarButtonItemForViewController:]
  -[SKUIClientContext additionalRightBarButtonItemForViewController:]
  -[SKUIClientContext storeViewController:shouldDisplayDefaultDarButton:]
  -[SKUIClientContext _setApplicationController:]
  -[SKUIClientContext _setScriptAppContext:]
  -[SKUIClientContext setPurchaseReferrerURL:]
  -[SKUIClientContext tabBarStyleForWidth:]
  -[SKUIClientContext _setValue:forConfigurationKey:]
  -[SKUIClientContext isBootstrapScriptFallbackDisabled]
  -[SKUIClientContext setUpdatableAssetController:]
  -[SKUIClientContext newLoadStoreURLOperationWithURLRequest:]
  -[SKUIClientContext modalDocumentViewControllerForDocument:options:]
  -[SKUIClientContext metricsConfigurationIdentifier]
  -[SKUIClientContext _navigationHistory]
  -[SKUIClientContext SAPSessionForVersion:]
  -[SKUIClientContext navigationHistory]
  -[SKUIClientContext pushNavigationHistoryPageIdentifier:]
  -[SKUIClientContext supportsRenderingVersion:]
  -[SKUIClientContext tabBarItemsForStyle:]
  -[SKUIClientContext loadValueForConfigurationKey:completionBlock:]
  -[SKUIClientContext moviePlayerViewControllerClass]
  -[SKUIClientContext setMetricsConfigurationIdentifier:]
  -[SKUIClientContext navigationHistoryPersistenceKey]
  -[SKUIClientContext setNavigationHistoryPersistenceKey:]
  -[SKUIClientContext purchaseReferrerURL]
  -[SKUIClientContext userInterfaceIdiomOverride]


SKUIPreviewContainerViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIViewControllerPreviewing>
 @property  UIViewController *childViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIPreviewContainerViewController .cxx_destruct]
  -[SKUIPreviewContainerViewController previewCommitViewController]
  -[SKUIPreviewContainerViewController childViewController]
  -[SKUIPreviewContainerViewController setChildViewController:]


SKUIClientContextPreviewContainer : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIClientContextPreviewContainer>
  // instance methods
  -[SKUIClientContextPreviewContainer .cxx_destruct]
  -[SKUIClientContextPreviewContainer initWithAppContext:clientContext:previewContainerViewController:]
  -[SKUIClientContextPreviewContainer previewDocument::]


SKUIClientContextViewControllerFactory : SUViewControllerFactory /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
  // instance methods
  -[SKUIClientContextViewControllerFactory newPlaceholderViewController]


SKUILoadingView : UIView /usr/lib/libobjc.A.dylib
 @property  SKUIColorScheme *colorScheme
 @property  NSString *loadingText

  // class methods
  +[SKUILoadingView defaultLoadingTextWithClientContext:]

  // instance methods
  -[SKUILoadingView .cxx_destruct]
  -[SKUILoadingView setBackgroundColor:]
  -[SKUILoadingView initWithFrame:]
  -[SKUILoadingView sizeThatFits:]
  -[SKUILoadingView layoutSubviews]
  -[SKUILoadingView willMoveToSuperview:]
  -[SKUILoadingView colorScheme]
  -[SKUILoadingView setColorScheme:]
  -[SKUILoadingView loadingText]
  -[SKUILoadingView setLoadingText:]


SKUIAssetViewElement : SKUIViewElement
 @property  double initialPlaybackTime
 @property  long long itemIdentifier
 @property  NSString *secureKeyDeliveryType
 @property  BOOL ITunesStream
 @property  NSURL *keyCertificateURL
 @property  NSURL *keyServerURL
 @property  double playbackDuration
 @property  NSURL *URL

  // instance methods
  -[SKUIAssetViewElement .cxx_destruct]
  -[SKUIAssetViewElement itemIdentifier]
  -[SKUIAssetViewElement URL]
  -[SKUIAssetViewElement playbackDuration]
  -[SKUIAssetViewElement setInitialPlaybackTime:]
  -[SKUIAssetViewElement initialPlaybackTime]
  -[SKUIAssetViewElement keyCertificateURL]
  -[SKUIAssetViewElement keyServerURL]
  -[SKUIAssetViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIAssetViewElement applyUpdatesWithElement:]
  -[SKUIAssetViewElement secureKeyDeliveryType]
  -[SKUIAssetViewElement isITunesStream]


SKUINearMeViewElement : SKUIViewElement
  // instance methods
  -[SKUINearMeViewElement dealloc]
  -[SKUINearMeViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUINearMeViewElement enumerateChildrenUsingBlock:]
  -[SKUINearMeViewElement _itemsDidChange:]


SKUIReportAConcernTemplateViewElement : SKUIViewElement
 @property  NSURL *reportConcernURL
 @property  long long itemIdentifier
 @property  NSString *reportConcernExplanation
 @property  NSArray *reasonElements

  // instance methods
  -[SKUIReportAConcernTemplateViewElement .cxx_destruct]
  -[SKUIReportAConcernTemplateViewElement itemIdentifier]
  -[SKUIReportAConcernTemplateViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIReportAConcernTemplateViewElement reportConcernURL]
  -[SKUIReportAConcernTemplateViewElement reportConcernExplanation]
  -[SKUIReportAConcernTemplateViewElement reasonElements]


SKUIExpandPageComponent : SKUIPageComponent
 @property  SKUIExpandViewElement *viewElement

  // instance methods
  -[SKUIExpandPageComponent .cxx_destruct]
  -[SKUIExpandPageComponent componentType]
  -[SKUIExpandPageComponent viewElement]
  -[SKUIExpandPageComponent initWithViewElement:]
  -[SKUIExpandPageComponent metricsElementName]
  -[SKUIExpandPageComponent childComponentForIndex:]
  -[SKUIExpandPageComponent childComponents]


SKUIProductImageDataConsumer : SKUIImageDataConsumer <NSCopying>
 @property  {CGSize=dd} iconSize
 @property  {CGSize=dd} imageSize
 @property  UIColor *backgroundColor
 @property  SKUIColorScheme *colorScheme

  // class methods
  +[SKUIProductImageDataConsumer smartBannerConsumer]
  +[SKUIProductImageDataConsumer giftComposePosterConsumer]
  +[SKUIProductImageDataConsumer giftComposeLetterboxConsumer]
  +[SKUIProductImageDataConsumer giftComposeConsumer]
  +[SKUIProductImageDataConsumer giftResultConsumer]
  +[SKUIProductImageDataConsumer giftThemePosterConsumer]
  +[SKUIProductImageDataConsumer giftThemeLetterboxConsumer]
  +[SKUIProductImageDataConsumer giftThemeConsumer]
  +[SKUIProductImageDataConsumer lockupConsumerWithSize:itemKind:]
  +[SKUIProductImageDataConsumer consumerWithSize:]
  +[SKUIProductImageDataConsumer gridConsumer]
  +[SKUIProductImageDataConsumer wishlistConsumer]
  +[SKUIProductImageDataConsumer cardConsumer]
  +[SKUIProductImageDataConsumer chartsConsumer]
  +[SKUIProductImageDataConsumer updatesConsumer]
  +[SKUIProductImageDataConsumer purchasedConsumer]
  +[SKUIProductImageDataConsumer productPageConsumer]
  +[SKUIProductImageDataConsumer swooshConsumer]

  // instance methods
  -[SKUIProductImageDataConsumer copyWithZone:]
  -[SKUIProductImageDataConsumer .cxx_destruct]
  -[SKUIProductImageDataConsumer backgroundColor]
  -[SKUIProductImageDataConsumer setBackgroundColor:]
  -[SKUIProductImageDataConsumer imageSize]
  -[SKUIProductImageDataConsumer iconSize]
  -[SKUIProductImageDataConsumer imageForImage:]
  -[SKUIProductImageDataConsumer colorScheme]
  -[SKUIProductImageDataConsumer setColorScheme:]
  -[SKUIProductImageDataConsumer imageForColor:]
  -[SKUIProductImageDataConsumer imageForColor:size:]


SKUITomatoRatingView : UIView /usr/lib/libobjc.A.dylib <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUITomatoRatingView prefetchResourcesForViewElement:reason:context:]
  +[SKUITomatoRatingView preferredSizeForViewElement:context:]
  +[SKUITomatoRatingView requestLayoutForViewElement:width:context:]
  +[SKUITomatoRatingView sizeThatFitsWidth:viewElement:context:]
  +[SKUITomatoRatingView _attributedStringForRating:context:]
  +[SKUITomatoRatingView _tomatoImageForFreshness:]

  // instance methods
  -[SKUITomatoRatingView .cxx_destruct]
  -[SKUITomatoRatingView setBackgroundColor:]
  -[SKUITomatoRatingView sizeThatFits:]
  -[SKUITomatoRatingView layoutSubviews]
  -[SKUITomatoRatingView setContentInset:]
  -[SKUITomatoRatingView reloadWithViewElement:width:context:]
  -[SKUITomatoRatingView setImage:forArtworkRequest:context:]
  -[SKUITomatoRatingView updateWithItemState:context:animated:]
  -[SKUITomatoRatingView viewForElementIdentifier:]


SKUIPopupMenuHeaderView : UIView /usr/lib/libobjc.A.dylib <SKUIMenuViewControllerDelegate, UIPopoverControllerDelegate>
 @property  <SKUIPopupMenuDelegate> *delegate
 @property  NSArray *menuItemTitles
 @property  NSString *menuLabelTitle
 @property  long long selectedMenuItemIndex
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIPopupMenuHeaderView dealloc]
  -[SKUIPopupMenuHeaderView delegate]
  -[SKUIPopupMenuHeaderView setDelegate:]
  -[SKUIPopupMenuHeaderView .cxx_destruct]
  -[SKUIPopupMenuHeaderView title]
  -[SKUIPopupMenuHeaderView setTitle:]
  -[SKUIPopupMenuHeaderView setBackgroundColor:]
  -[SKUIPopupMenuHeaderView initWithFrame:]
  -[SKUIPopupMenuHeaderView sizeThatFits:]
  -[SKUIPopupMenuHeaderView layoutSubviews]
  -[SKUIPopupMenuHeaderView _titleLabel]
  -[SKUIPopupMenuHeaderView popoverControllerDidDismissPopover:]
  -[SKUIPopupMenuHeaderView setColoringWithColorScheme:]
  -[SKUIPopupMenuHeaderView _menuButtonAction:]
  -[SKUIPopupMenuHeaderView menuItemTitles]
  -[SKUIPopupMenuHeaderView menuViewController:didSelectItemAtIndex:]
  -[SKUIPopupMenuHeaderView setMenuLabelTitle:]
  -[SKUIPopupMenuHeaderView setMenuItemTitles:]
  -[SKUIPopupMenuHeaderView setSelectedMenuItemIndex:]
  -[SKUIPopupMenuHeaderView _reloadMenuButton]
  -[SKUIPopupMenuHeaderView menuLabelTitle]
  -[SKUIPopupMenuHeaderView selectedMenuItemIndex]


SKUICellImageView : UIImageView /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUICellImageView .cxx_destruct]
  -[SKUICellImageView setHighlighted:]


SKUIMediaSocialLoadProfilePhotoOperation : SSVComplexOperation /System/Library/Frameworks/UIKit.framework/UIKit
 @property  @? outputBlock

  // instance methods
  -[SKUIMediaSocialLoadProfilePhotoOperation .cxx_destruct]
  -[SKUIMediaSocialLoadProfilePhotoOperation main]
  -[SKUIMediaSocialLoadProfilePhotoOperation setOutputBlock:]
  -[SKUIMediaSocialLoadProfilePhotoOperation outputBlock]
  -[SKUIMediaSocialLoadProfilePhotoOperation initWithClientContext:]
  -[SKUIMediaSocialLoadProfilePhotoOperation _silhouette]
  -[SKUIMediaSocialLoadProfilePhotoOperation _returnPhoto:isFinal:]
  -[SKUIMediaSocialLoadProfilePhotoOperation _fetchProfile]
  -[SKUIMediaSocialLoadProfilePhotoOperation _fetchMonogram]
  -[SKUIMediaSocialLoadProfilePhotoOperation _fetchPhoto]


SKUICharityTemplateViewElement : SKUIViewElement
 @property  NSString *campaignIdentifier
 @property  NSString *charityMetadataURLString

  // instance methods
  -[SKUICharityTemplateViewElement .cxx_destruct]
  -[SKUICharityTemplateViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUICharityTemplateViewElement applyUpdatesWithElement:]
  -[SKUICharityTemplateViewElement campaignIdentifier]
  -[SKUICharityTemplateViewElement charityMetadataURLString]


SKUISettingDescriptionView : UIView /usr/lib/libobjc.A.dylib
 @property  {UIEdgeInsets=dddd} contentInset
 @property  BOOL hasDisclosureChevron

  // class methods
  +[SKUISettingDescriptionView prefetchResourcesForSettingDescription:reason:context:]
  +[SKUISettingDescriptionView preferredSizeForSettingDescription:context:]
  +[SKUISettingDescriptionView requestLayoutForSettingDescription:width:context:]
  +[SKUISettingDescriptionView sizeThatFitsWidth:settingDescription:context:]

  // instance methods
  -[SKUISettingDescriptionView layoutMargins]
  -[SKUISettingDescriptionView setContentInset:]
  -[SKUISettingDescriptionView contentInset]
  -[SKUISettingDescriptionView setImage:forArtworkRequest:context:]
  -[SKUISettingDescriptionView reloadWithSettingDescription:width:context:]
  -[SKUISettingDescriptionView hasDisclosureChevron]


SKUISettingsFamilyViewStateCoordinator : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[SKUISettingsFamilyViewStateCoordinator .cxx_destruct]
  -[SKUISettingsFamilyViewStateCoordinator checkSettingsFamilyViewStateWithBlock:]
  -[SKUISettingsFamilyViewStateCoordinator _getSubscriptionStatus]
  -[SKUISettingsFamilyViewStateCoordinator _returnFamilyViewState:]
  -[SKUISettingsFamilyViewStateCoordinator _checkSubscriptionStatus:isFinal:error:]


SKUITemplatedBadgeImageConsumer : SKUIImageDataConsumer
 @property  UIColor *templateColor

  // instance methods
  -[SKUITemplatedBadgeImageConsumer .cxx_destruct]
  -[SKUITemplatedBadgeImageConsumer objectForData:response:error:]
  -[SKUITemplatedBadgeImageConsumer setTemplateColor:]
  -[SKUITemplatedBadgeImageConsumer templateColor]


SKUIMediaSocialProfileCoordinator : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SKUIMediaSocialProfileCoordinator sharedCoordinator]

  // instance methods
  -[SKUIMediaSocialProfileCoordinator init]
  -[SKUIMediaSocialProfileCoordinator dealloc]
  -[SKUIMediaSocialProfileCoordinator .cxx_destruct]
  -[SKUIMediaSocialProfileCoordinator reset]
  -[SKUIMediaSocialProfileCoordinator getProfileWithOptions:profileBlock:]
  -[SKUIMediaSocialProfileCoordinator _accountStoreChangeNotification:]
  -[SKUIMediaSocialProfileCoordinator _authenticateOnCompletion:]
  -[SKUIMediaSocialProfileCoordinator _queueProfileBlock:]
  -[SKUIMediaSocialProfileCoordinator _requestProfile]
  -[SKUIMediaSocialProfileCoordinator _handleOperationResponseWithProfile:error:]
  -[SKUIMediaSocialProfileCoordinator _fireProfileBlocksWithProfile:isFinal:error:]


SKUISuggestedHandlesSettingsHeaderFooterDescriptionView : SKUISettingsHeaderFooterDescriptionView
  // class methods
  +[SKUISuggestedHandlesSettingsHeaderFooterDescriptionView preferredSizeForSettingsHeaderFooterDescription:context:]
  +[SKUISuggestedHandlesSettingsHeaderFooterDescriptionView prefetchResourcesForSettingsHeaderFooterDescription:reason:context:]
  +[SKUISuggestedHandlesSettingsHeaderFooterDescriptionView requestLayoutForSettingsHeaderFooterDescription:width:context:]
  +[SKUISuggestedHandlesSettingsHeaderFooterDescriptionView sizeThatFitsWidth:settingsHeaderFooterDescription:context:]
  +[SKUISuggestedHandlesSettingsHeaderFooterDescriptionView _helpLabelWithDescription:forWidth:]

  // instance methods
  -[SKUISuggestedHandlesSettingsHeaderFooterDescriptionView .cxx_destruct]
  -[SKUISuggestedHandlesSettingsHeaderFooterDescriptionView layoutSubviews]
  -[SKUISuggestedHandlesSettingsHeaderFooterDescriptionView setImage:forArtworkRequest:context:]
  -[SKUISuggestedHandlesSettingsHeaderFooterDescriptionView _buttonAction:]
  -[SKUISuggestedHandlesSettingsHeaderFooterDescriptionView reloadWithSettingsHeaderFooterDescription:width:context:]


SKUIMediaPlayerItemStatus : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  double currentTime
 @property  double duration
 @property  BOOL hideDuration
 @property  NSString *itemIdentifier
 @property  long long itemType
 @property  long long playState
 @property  NSString *storeID
 @property  NSString *storeAlbumID

  // instance methods
  -[SKUIMediaPlayerItemStatus init]
  -[SKUIMediaPlayerItemStatus copyWithZone:]
  -[SKUIMediaPlayerItemStatus .cxx_destruct]
  -[SKUIMediaPlayerItemStatus itemIdentifier]
  -[SKUIMediaPlayerItemStatus setItemIdentifier:]
  -[SKUIMediaPlayerItemStatus duration]
  -[SKUIMediaPlayerItemStatus setDuration:]
  -[SKUIMediaPlayerItemStatus currentTime]
  -[SKUIMediaPlayerItemStatus storeID]
  -[SKUIMediaPlayerItemStatus itemType]
  -[SKUIMediaPlayerItemStatus setItemType:]
  -[SKUIMediaPlayerItemStatus setCurrentTime:]
  -[SKUIMediaPlayerItemStatus storeAlbumID]
  -[SKUIMediaPlayerItemStatus setStoreAlbumID:]
  -[SKUIMediaPlayerItemStatus setStoreID:]
  -[SKUIMediaPlayerItemStatus playState]
  -[SKUIMediaPlayerItemStatus setPlayState:]
  -[SKUIMediaPlayerItemStatus setHideDuration:]
  -[SKUIMediaPlayerItemStatus hideDuration]


SKUIRedeemOperation : NSOperation /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  BOOL cameraRecognized
 @property  SKUIClientContext *clientContext
 @property  @? resultBlock

  // instance methods
  -[SKUIRedeemOperation .cxx_destruct]
  -[SKUIRedeemOperation main]
  -[SKUIRedeemOperation clientContext]
  -[SKUIRedeemOperation setClientContext:]
  -[SKUIRedeemOperation resultBlock]
  -[SKUIRedeemOperation setResultBlock:]
  -[SKUIRedeemOperation _authenticationContext]
  -[SKUIRedeemOperation initWithCode:]
  -[SKUIRedeemOperation cameraRecognized]
  -[SKUIRedeemOperation setCameraRecognized:]
  -[SKUIRedeemOperation _redeemForSuccessDictionary:]
  -[SKUIRedeemOperation _requestPropertiesForThankYouWithURL:]
  -[SKUIRedeemOperation _performRequestWithProperties:error:]
  -[SKUIRedeemOperation _applyThankYouDictionary:toRedeem:]
  -[SKUIRedeemOperation _itemsForItemIdentifiers:]


SKUIFullscreenRedeemCameraView : UIView /usr/lib/libobjc.A.dylib <UITextFieldDelegate>
 @property  <SKUIRedeemCameraViewDelegate> *delegate
 @property  BOOL enabled
 @property  UIImage *image
 @property  NSString *text
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIFullscreenRedeemCameraView dealloc]
  -[SKUIFullscreenRedeemCameraView enabled]
  -[SKUIFullscreenRedeemCameraView setEnabled:]
  -[SKUIFullscreenRedeemCameraView delegate]
  -[SKUIFullscreenRedeemCameraView setDelegate:]
  -[SKUIFullscreenRedeemCameraView .cxx_destruct]
  -[SKUIFullscreenRedeemCameraView start]
  -[SKUIFullscreenRedeemCameraView image]
  -[SKUIFullscreenRedeemCameraView setImage:]
  -[SKUIFullscreenRedeemCameraView text]
  -[SKUIFullscreenRedeemCameraView setText:]
  -[SKUIFullscreenRedeemCameraView layoutSubviews]
  -[SKUIFullscreenRedeemCameraView keyboardDidShow:]
  -[SKUIFullscreenRedeemCameraView keyboardDidHide:]
  -[SKUIFullscreenRedeemCameraView showKeyboard]
  -[SKUIFullscreenRedeemCameraView textFieldShouldReturn:]
  -[SKUIFullscreenRedeemCameraView textFieldDidBeginEditing:]
  -[SKUIFullscreenRedeemCameraView textFieldDidEndEditing:]
  -[SKUIFullscreenRedeemCameraView _hideKeyboard]
  -[SKUIFullscreenRedeemCameraView keyboardWillShow:]
  -[SKUIFullscreenRedeemCameraView keyboardWillHide:]
  -[SKUIFullscreenRedeemCameraView initWithClientContext:]
  -[SKUIFullscreenRedeemCameraView _newTextFieldWithClientContext:]
  -[SKUIFullscreenRedeemCameraView _tapGestureAction:]
  -[SKUIFullscreenRedeemCameraView textFieldTextDidChange:]
  -[SKUIFullscreenRedeemCameraView _pauseRedeemer]
  -[SKUIFullscreenRedeemCameraView _resumeRedeemer]


SKUIItemOfferButtonAppearance : NSObject /usr/lib/libc++.1.dylib
 @property  UIColor *buttonColor
 @property  UIColor *confirmationColor

  // instance methods
  -[SKUIItemOfferButtonAppearance .cxx_destruct]
  -[SKUIItemOfferButtonAppearance buttonColor]
  -[SKUIItemOfferButtonAppearance initWithColorScheme:]
  -[SKUIItemOfferButtonAppearance confirmationColor]


SKUIMediaSocialProfileOperation : SSVComplexOperation /System/Library/Frameworks/UIKit.framework/UIKit
 @property  @? outputBlock

  // instance methods
  -[SKUIMediaSocialProfileOperation init]
  -[SKUIMediaSocialProfileOperation .cxx_destruct]
  -[SKUIMediaSocialProfileOperation main]
  -[SKUIMediaSocialProfileOperation setOutputBlock:]
  -[SKUIMediaSocialProfileOperation outputBlock]
  -[SKUIMediaSocialProfileOperation initWithClientContext:]
  -[SKUIMediaSocialProfileOperation _profileWithResponseDictionary:]


SKUIOnboardingProgressView : UIView /usr/lib/libobjc.A.dylib
 @property  double progress
 @property  UIColor *fillColor
 @property  UIImage *image
 @property  NSString *title
 @property  {CGSize=dd} preferredImageSize

  // class methods
  +[SKUIOnboardingProgressView preferredImageSizeForViewSize:]

  // instance methods
  -[SKUIOnboardingProgressView .cxx_destruct]
  -[SKUIOnboardingProgressView progress]
  -[SKUIOnboardingProgressView title]
  -[SKUIOnboardingProgressView setTitle:]
  -[SKUIOnboardingProgressView image]
  -[SKUIOnboardingProgressView setImage:]
  -[SKUIOnboardingProgressView setProgress:]
  -[SKUIOnboardingProgressView initWithFrame:]
  -[SKUIOnboardingProgressView sizeThatFits:]
  -[SKUIOnboardingProgressView layoutSubviews]
  -[SKUIOnboardingProgressView tintColorDidChange]
  -[SKUIOnboardingProgressView fillColor]
  -[SKUIOnboardingProgressView setFillColor:]
  -[SKUIOnboardingProgressView setProgress:animated:]
  -[SKUIOnboardingProgressView _borderColor]
  -[SKUIOnboardingProgressView preferredImageSize]


SKUISwooshPageComponent : SKUIPageComponent
 @property  long long seeAllStyle
 @property  NSString *seeAllTitle
 @property  NSURL *seeAllURL
 @property  long long swooshType
 @property  NSString *title
 @property  NSArray *lockups
 @property  {SKUILockupStyle=qqQ} lockupStyle
 @property  NSString *platformKeyProfile
 @property  BOOL showsIndexNumbers
 @property  NSArray *bricks
 @property  BOOL showsBrickTitles
 @property  NSArray *mediaComponents
 @property  BOOL showsMediaTitles

  // instance methods
  -[SKUISwooshPageComponent .cxx_destruct]
  -[SKUISwooshPageComponent title]
  -[SKUISwooshPageComponent initWithItemList:]
  -[SKUISwooshPageComponent componentType]
  -[SKUISwooshPageComponent valueForMetricsField:]
  -[SKUISwooshPageComponent initWithCustomPageContext:]
  -[SKUISwooshPageComponent initWithFeaturedContentContext:kind:]
  -[SKUISwooshPageComponent enumerateMissingItemIdentifiersFromIndex:usingBlock:]
  -[SKUISwooshPageComponent isMissingItemData]
  -[SKUISwooshPageComponent metricsElementName]
  -[SKUISwooshPageComponent swooshType]
  -[SKUISwooshPageComponent initWithRoomContext:]
  -[SKUISwooshPageComponent _newLockupComponentWithItem:defaultStyle:]
  -[SKUISwooshPageComponent lockupStyle]
  -[SKUISwooshPageComponent showsIndexNumbers]
  -[SKUISwooshPageComponent bricks]
  -[SKUISwooshPageComponent _updateBricksWithItems:]
  -[SKUISwooshPageComponent showsBrickTitles]
  -[SKUISwooshPageComponent lockups]
  -[SKUISwooshPageComponent seeAllTitle]
  -[SKUISwooshPageComponent seeAllStyle]
  -[SKUISwooshPageComponent seeAllURL]
  -[SKUISwooshPageComponent _updateLockupItemsWithLookupResponse:]
  -[SKUISwooshPageComponent _updateLockupItemsWithItems:]
  -[SKUISwooshPageComponent platformKeyProfile]
  -[SKUISwooshPageComponent initWithLockups:swooshType:title:]
  -[SKUISwooshPageComponent initWithRelatedContentContext:]
  -[SKUISwooshPageComponent mediaComponents]
  -[SKUISwooshPageComponent showsMediaTitles]
  -[SKUISwooshPageComponent _setSeeAllValuesWithLinkInfo:]
  -[SKUISwooshPageComponent _brickItemsWithChildren:customPageContext:]
  -[SKUISwooshPageComponent _lockupsWithChildren:context:]
  -[SKUISwooshPageComponent _mediaComponentsWithChildren:context:]
  -[SKUISwooshPageComponent _reloadMissingDataCount]
  -[SKUISwooshPageComponent _brickItemsWithChildren:featuredPageContext:]
  -[SKUISwooshPageComponent _lockupsWithChildren:featuredPageContext:]
  -[SKUISwooshPageComponent _lockupStyleWithLockups:]
  -[SKUISwooshPageComponent _updateLockup:withItem:]
  -[SKUISwooshPageComponent _isBrickAvailable:withPageContext:]
  -[SKUISwooshPageComponent _defaultVisibleFieldsForItemKind:]
  -[SKUISwooshPageComponent _lockupWithItemIdentifier:context:]


SKUIActivityIndicatorCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIActivityIndicatorCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIActivityIndicatorCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIActivityIndicatorCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIActivityIndicatorCollectionViewCell sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIActivityIndicatorCollectionViewCell .cxx_destruct]
  -[SKUIActivityIndicatorCollectionViewCell setBackgroundColor:]
  -[SKUIActivityIndicatorCollectionViewCell initWithFrame:]
  -[SKUIActivityIndicatorCollectionViewCell layoutSubviews]
  -[SKUIActivityIndicatorCollectionViewCell setContentInset:]
  -[SKUIActivityIndicatorCollectionViewCell applyLayoutAttributes:]
  -[SKUIActivityIndicatorCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIActivityIndicatorCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIActivityIndicatorCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIActivityIndicatorCollectionViewCell viewForElementIdentifier:]


SKUIHandleRulesSettingsHeaderFooterDescriptionView : SKUISettingsHeaderFooterDescriptionView
  // class methods
  +[SKUIHandleRulesSettingsHeaderFooterDescriptionView preferredSizeForSettingsHeaderFooterDescription:context:]
  +[SKUIHandleRulesSettingsHeaderFooterDescriptionView prefetchResourcesForSettingsHeaderFooterDescription:reason:context:]
  +[SKUIHandleRulesSettingsHeaderFooterDescriptionView requestLayoutForSettingsHeaderFooterDescription:width:context:]
  +[SKUIHandleRulesSettingsHeaderFooterDescriptionView sizeThatFitsWidth:settingsHeaderFooterDescription:context:]
  +[SKUIHandleRulesSettingsHeaderFooterDescriptionView _labelWithDescription:forWidth:]

  // instance methods
  -[SKUIHandleRulesSettingsHeaderFooterDescriptionView .cxx_destruct]
  -[SKUIHandleRulesSettingsHeaderFooterDescriptionView layoutSubviews]
  -[SKUIHandleRulesSettingsHeaderFooterDescriptionView setImage:forArtworkRequest:context:]
  -[SKUIHandleRulesSettingsHeaderFooterDescriptionView reloadWithSettingsHeaderFooterDescription:width:context:]


SKUIViewTextProperties : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  double baselineOffsetFromBottom
 @property  double desiredOffsetTop
 @property  double firstBaselineOffset

  // instance methods
  -[SKUIViewTextProperties copyWithZone:]
  -[SKUIViewTextProperties firstBaselineOffset]
  -[SKUIViewTextProperties setFirstBaselineOffset:]
  -[SKUIViewTextProperties baselineOffsetFromBottom]
  -[SKUIViewTextProperties desiredOffsetTop]
  -[SKUIViewTextProperties initWithStringLayout:]
  -[SKUIViewTextProperties setBaselineOffsetFromBottom:]
  -[SKUIViewTextProperties initWithTextLayout:isExpanded:]
  -[SKUIViewTextProperties setDesiredOffsetTop:]


SKUIEditProfileSettingDescription : SKUISettingDescription <SKUIProfileImagePickerDelegate, SKUISuggestedHandlesSettingsHeaderFooterDescriptionDelegate>
 @property  BOOL editing
 @property  NSString *handle
 @property  BOOL handleValid
 @property  NSString *name
 @property  UIImage *photo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIEditProfileSettingDescription allowsEdit]
  +[SKUIEditProfileSettingDescription _viewClassForSettingDescription:]

  // instance methods
  -[SKUIEditProfileSettingDescription dealloc]
  -[SKUIEditProfileSettingDescription name]
  -[SKUIEditProfileSettingDescription beginEditing]
  -[SKUIEditProfileSettingDescription .cxx_destruct]
  -[SKUIEditProfileSettingDescription setName:]
  -[SKUIEditProfileSettingDescription handle]
  -[SKUIEditProfileSettingDescription setHandle:]
  -[SKUIEditProfileSettingDescription isEditing]
  -[SKUIEditProfileSettingDescription _reloadData]
  -[SKUIEditProfileSettingDescription allowsSelection]
  -[SKUIEditProfileSettingDescription _valueStore]
  -[SKUIEditProfileSettingDescription photo]
  -[SKUIEditProfileSettingDescription _updateValidity]
  -[SKUIEditProfileSettingDescription initWithViewElement:parent:]
  -[SKUIEditProfileSettingDescription cancelEdits]
  -[SKUIEditProfileSettingDescription commitEdits:]
  -[SKUIEditProfileSettingDescription discardEdits]
  -[SKUIEditProfileSettingDescription _fetchAccountInfo]
  -[SKUIEditProfileSettingDescription _fetchProfilePhoto]
  -[SKUIEditProfileSettingDescription profileImagePicker:didPickProfileImage:withCropRect:]
  -[SKUIEditProfileSettingDescription profileImagePickerDidCancel:]
  -[SKUIEditProfileSettingDescription _authenticateOnCompletion:]
  -[SKUIEditProfileSettingDescription suggestedHandlesSettingsHeaderFooterDescription:didSelectSuggestedHandle:]
  -[SKUIEditProfileSettingDescription isHandleValid]
  -[SKUIEditProfileSettingDescription chooseNewProfilePhoto]
  -[SKUIEditProfileSettingDescription setPhoto:withCropRect:]
  -[SKUIEditProfileSettingDescription _enterEditMode]
  -[SKUIEditProfileSettingDescription _uploadProfileImage:]
  -[SKUIEditProfileSettingDescription _updateAccountInfo]
  -[SKUIEditProfileSettingDescription _finalizeCommitWithSuccess:error:]
  -[SKUIEditProfileSettingDescription _leaveEditMode]
  -[SKUIEditProfileSettingDescription _displayFooter:]
  -[SKUIEditProfileSettingDescription _displayRules:]
  -[SKUIEditProfileSettingDescription _displaySuggestedHandles:]
  -[SKUIEditProfileSettingDescription _fetchSuggestedHandles]
  -[SKUIEditProfileSettingDescription _hideFooter]
  -[SKUIEditProfileSettingDescription _validateName:]
  -[SKUIEditProfileSettingDescription _validateHandle:]
  -[SKUIEditProfileSettingDescription _hideSuggestedHandles]


SKUIShareTemplateViewElement : SKUIViewElement
 @property  NSArray *activities

  // instance methods
  -[SKUIShareTemplateViewElement activities]
  -[SKUIShareTemplateViewElement activityForUIActivityType:]
  -[SKUIShareTemplateViewElement activityForShareSheetActivityType:]


SKUIScrollingSegmentedControllerNavigationBarTitleView : UIView /usr/lib/libobjc.A.dylib
 @property  long long layoutStyle
 @property  SKUIInteractiveSegmentedControl *segmentedControl
 @property  double segmentedControlMinimumHeight

  // class methods
  +[SKUIScrollingSegmentedControllerNavigationBarTitleView defaultLayoutMargins]

  // instance methods
  -[SKUIScrollingSegmentedControllerNavigationBarTitleView .cxx_destruct]
  -[SKUIScrollingSegmentedControllerNavigationBarTitleView initWithFrame:]
  -[SKUIScrollingSegmentedControllerNavigationBarTitleView sizeThatFits:]
  -[SKUIScrollingSegmentedControllerNavigationBarTitleView layoutSubviews]
  -[SKUIScrollingSegmentedControllerNavigationBarTitleView setLayoutStyle:]
  -[SKUIScrollingSegmentedControllerNavigationBarTitleView layoutStyle]
  -[SKUIScrollingSegmentedControllerNavigationBarTitleView segmentedControl]
  -[SKUIScrollingSegmentedControllerNavigationBarTitleView setSegmentedControl:]
  -[SKUIScrollingSegmentedControllerNavigationBarTitleView segmentedControlMinimumHeight]
  -[SKUIScrollingSegmentedControllerNavigationBarTitleView setSegmentedControlMinimumHeight:]


SKUIBootstrapScriptFallback : NSObject /usr/lib/libc++.1.dylib <IKAppScriptFallbackHandler>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSURL *cachedFileLocation
 @property  long long _unsynchronizedState
 @property  NSURL *cacheFolder
 @property  NSString *cacheFilename
 @property  double maximumAge
 @property  long long state
 @property  BOOL isBagAvailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIBootstrapScriptFallback cacheFilenameForStoreFrontIdentifier:]
  +[SKUIBootstrapScriptFallback defaultCacheFolder]

  // instance methods
  -[SKUIBootstrapScriptFallback init]
  -[SKUIBootstrapScriptFallback invalidate]
  -[SKUIBootstrapScriptFallback queue]
  -[SKUIBootstrapScriptFallback .cxx_destruct]
  -[SKUIBootstrapScriptFallback state]
  -[SKUIBootstrapScriptFallback canFallbackForError:]
  -[SKUIBootstrapScriptFallback retrieveScript:]
  -[SKUIBootstrapScriptFallback scriptEvaluated:]
  -[SKUIBootstrapScriptFallback initWithFilename:]
  -[SKUIBootstrapScriptFallback setMaximumAge:]
  -[SKUIBootstrapScriptFallback _createCacheDirectoriesIfNeeded]
  -[SKUIBootstrapScriptFallback initWithCacheFolder:filename:]
  -[SKUIBootstrapScriptFallback _unsynchronizedState]
  -[SKUIBootstrapScriptFallback cacheFolder]
  -[SKUIBootstrapScriptFallback cacheFilename]
  -[SKUIBootstrapScriptFallback isBagAvailable]
  -[SKUIBootstrapScriptFallback cachedFileLocation]
  -[SKUIBootstrapScriptFallback _logError:forOperation:]
  -[SKUIBootstrapScriptFallback maximumAge]
  -[SKUIBootstrapScriptFallback _runWhenBackgroundWorkFinished:]
  -[SKUIBootstrapScriptFallback _setCacheAge:error:]


SKUIPreviewOverlayViewController : SKUIViewController <SKUIItemStateCenterObserver, SKUIArtworkRequestDelegate, SKUILayoutCacheDelegate, UIGestureRecognizerDelegate>
 @property  long long backgroundStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIPreviewOverlayViewController dealloc]
  -[SKUIPreviewOverlayViewController .cxx_destruct]
  -[SKUIPreviewOverlayViewController loadView]
  -[SKUIPreviewOverlayViewController gestureRecognizer:shouldReceiveTouch:]
  -[SKUIPreviewOverlayViewController setBackgroundStyle:]
  -[SKUIPreviewOverlayViewController backgroundStyle]
  -[SKUIPreviewOverlayViewController initWithDocument:]
  -[SKUIPreviewOverlayViewController _tapAction:]
  -[SKUIPreviewOverlayViewController documentDidUpdate:]
  -[SKUIPreviewOverlayViewController itemStateCenter:itemStatesChanged:]
  -[SKUIPreviewOverlayViewController artworkRequest:didLoadImage:]
  -[SKUIPreviewOverlayViewController layoutCacheDidFinishBatch:]
  -[SKUIPreviewOverlayViewController prepareOverlayView]
  -[SKUIPreviewOverlayViewController showPreviewProgressWithStatus:animated:]
  -[SKUIPreviewOverlayViewController _layoutCache]
  -[SKUIPreviewOverlayViewController _overlayWidth]
  -[SKUIPreviewOverlayViewController reloadOverlayView]


SKUIIncompatibleAppView : UIView /usr/lib/libobjc.A.dylib
 @property  NSString *message
 @property  NSString *title
 @property  UIImage *iconImage

  // instance methods
  -[SKUIIncompatibleAppView .cxx_destruct]
  -[SKUIIncompatibleAppView title]
  -[SKUIIncompatibleAppView setTitle:]
  -[SKUIIncompatibleAppView message]
  -[SKUIIncompatibleAppView setMessage:]
  -[SKUIIncompatibleAppView setBackgroundColor:]
  -[SKUIIncompatibleAppView layoutSubviews]
  -[SKUIIncompatibleAppView addButtonWithTitle:]
  -[SKUIIncompatibleAppView iconImage]
  -[SKUIIncompatibleAppView setIconImage:]
  -[SKUIIncompatibleAppView removeButtonTarget:action:forControlEvents:]


SKUIEditorTemplateViewElement : SKUIViewElement
 @property  NSNumber *contentId

  // instance methods
  -[SKUIEditorTemplateViewElement .cxx_destruct]
  -[SKUIEditorTemplateViewElement contentId]
  -[SKUIEditorTemplateViewElement initWithDOMElement:parent:elementFactory:]


SKUIQuicklinksPageComponent : SKUIPageComponent <SSMetricsEventFieldProvider>
 @property  NSArray *links
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIQuicklinksPageComponent .cxx_destruct]
  -[SKUIQuicklinksPageComponent title]
  -[SKUIQuicklinksPageComponent componentType]
  -[SKUIQuicklinksPageComponent links]
  -[SKUIQuicklinksPageComponent valueForMetricsField:]
  -[SKUIQuicklinksPageComponent initWithCustomPageContext:]
  -[SKUIQuicklinksPageComponent initWithFeaturedContentContext:kind:]
  -[SKUIQuicklinksPageComponent metricsElementName]
  -[SKUIQuicklinksPageComponent _setLinksWithLinksArray:context:]


SKUIViewElementPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate>
 @property  double defaultVerticalInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIViewElementPageSection .cxx_destruct]
  -[SKUIViewElementPageSection preferredContentSize]
  -[SKUIViewElementPageSection previewingContext:viewControllerForLocation:]
  -[SKUIViewElementPageSection artworkRequest:didLoadImage:]
  -[SKUIViewElementPageSection initWithPageComponent:]
  -[SKUIViewElementPageSection _reloadViewElementProperties]
  -[SKUIViewElementPageSection applyUpdateType:]
  -[SKUIViewElementPageSection backgroundColorForIndexPath:]
  -[SKUIViewElementPageSection collectionViewWillApplyLayoutAttributes:]
  -[SKUIViewElementPageSection sectionContentInset]
  -[SKUIViewElementPageSection willAppearInContext:]
  -[SKUIViewElementPageSection cellForIndexPath:]
  -[SKUIViewElementPageSection cellSizeForIndexPath:]
  -[SKUIViewElementPageSection entityProvider:didInvalidateWithContext:]
  -[SKUIViewElementPageSection numberOfCells]
  -[SKUIViewElementPageSection prefetchResourcesWithReason:]
  -[SKUIViewElementPageSection updateCellWithIndexPath:itemState:animated:]
  -[SKUIViewElementPageSection reloadCellWithIndexPath:reason:]
  -[SKUIViewElementPageSection pinningContentInsetForItemAtIndexPath:]
  -[SKUIViewElementPageSection addImpressionsForIndexPath:toSession:]
  -[SKUIViewElementPageSection collectionViewWillDisplayCellForItemAtIndexPath:]
  -[SKUIViewElementPageSection collectionViewDidEndDisplayingCellForItemAtIndexPath:]
  -[SKUIViewElementPageSection collectionViewDidSelectItemAtIndexPath:]
  -[SKUIViewElementPageSection expandEditorialForLabelElement:indexPath:]
  -[SKUIViewElementPageSection collectionViewShouldHighlightItemAtIndexPath:]
  -[SKUIViewElementPageSection collectionViewShouldSelectItemAtIndexPath:]
  -[SKUIViewElementPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIViewElementPageSection contentInsetAdjustmentForCollectionView:]
  -[SKUIViewElementPageSection getModalSourceViewForViewElement:completionBlock:]
  -[SKUIViewElementPageSection defaultItemPinningStyle]
  -[SKUIViewElementPageSection _requestCellLayout]
  -[SKUIViewElementPageSection _showsImageReflection]
  -[SKUIViewElementPageSection _stretchesToFitCollectionViewBounds]
  -[SKUIViewElementPageSection defaultVerticalInset]


SKUIJSModalDocumentController : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIJSModalDocumentController>
 @property  SKUIModalDocumentController *modalDocumentController
 @property  NSArray *documents

  // instance methods
  -[SKUIJSModalDocumentController .cxx_destruct]
  -[SKUIJSModalDocumentController popDocument]
  -[SKUIJSModalDocumentController popToDocument:]
  -[SKUIJSModalDocumentController documents]
  -[SKUIJSModalDocumentController pushDocument::]
  -[SKUIJSModalDocumentController replaceDocument:::]
  -[SKUIJSModalDocumentController initWithAppContext:modalDocumentController:]
  -[SKUIJSModalDocumentController modalDocumentController]
  -[SKUIJSModalDocumentController _adjustedOptionsWithOptions:]


SKUIQuicklinksPageSection : SKUIStorePageSection <SKUIQuicklinksViewControllerDelegate>
 @property  SKUIQuicklinksPageComponent *pageComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIQuicklinksPageSection dealloc]
  -[SKUIQuicklinksPageSection .cxx_destruct]
  -[SKUIQuicklinksPageSection initWithPageComponent:]
  -[SKUIQuicklinksPageSection willAppearInContext:]
  -[SKUIQuicklinksPageSection cellForIndexPath:]
  -[SKUIQuicklinksPageSection cellSizeForIndexPath:]
  -[SKUIQuicklinksPageSection numberOfCells]
  -[SKUIQuicklinksPageSection willTransitionToSize:withTransitionCoordinator:]
  -[SKUIQuicklinksPageSection _quicklinksViewController]
  -[SKUIQuicklinksPageSection quicklinksViewController:didSelectLink:atIndex:]


SKUIProductPageProductInfo : NSObject /usr/lib/libc++.1.dylib
 @property  long long numberOfEntries

  // instance methods
  -[SKUIProductPageProductInfo .cxx_destruct]
  -[SKUIProductPageProductInfo enumerateEntriesWithBlock:]
  -[SKUIProductPageProductInfo initWithInfoSectionDictionaries:]
  -[SKUIProductPageProductInfo numberOfEntries]


_SKUIVideoPreviewNotificationObserver : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_SKUIVideoPreviewNotificationObserver dealloc]
  -[_SKUIVideoPreviewNotificationObserver .cxx_destruct]
  -[_SKUIVideoPreviewNotificationObserver initWithObservers:]


SKUIContextActionsPresentationSource : NSObject /usr/lib/libc++.1.dylib
 @property  UIViewController *viewController
 @property  UIView *sourceView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceRect
 @property  UIBarButtonItem *barButtonItem

  // instance methods
  -[SKUIContextActionsPresentationSource .cxx_destruct]
  -[SKUIContextActionsPresentationSource setViewController:]
  -[SKUIContextActionsPresentationSource viewController]
  -[SKUIContextActionsPresentationSource sourceView]
  -[SKUIContextActionsPresentationSource sourceRect]
  -[SKUIContextActionsPresentationSource barButtonItem]
  -[SKUIContextActionsPresentationSource setBarButtonItem:]
  -[SKUIContextActionsPresentationSource setSourceView:]
  -[SKUIContextActionsPresentationSource initWithViewController:]
  -[SKUIContextActionsPresentationSource setSourceRect:]
  -[SKUIContextActionsPresentationSource presentViewController:permittedArrowDirections:animated:]


SKUICounterTimeView : UIView /usr/lib/libobjc.A.dylib
 @property  NSDate *endDate
 @property  UIColor *textColor
 @property  UIFont *valueFont
 @property  unsigned long visibleFields

  // instance methods
  -[SKUICounterTimeView .cxx_destruct]
  -[SKUICounterTimeView endDate]
  -[SKUICounterTimeView setEndDate:]
  -[SKUICounterTimeView setBackgroundColor:]
  -[SKUICounterTimeView setTextColor:]
  -[SKUICounterTimeView sizeThatFits:]
  -[SKUICounterTimeView layoutSubviews]
  -[SKUICounterTimeView textColor]
  -[SKUICounterTimeView initWithClientContext:]
  -[SKUICounterTimeView setVisibleFields:]
  -[SKUICounterTimeView visibleFields]
  -[SKUICounterTimeView setValueFont:]
  -[SKUICounterTimeView reloadTimeValue]
  -[SKUICounterTimeView _setValuesUsingTimestamp:]
  -[SKUICounterTimeView _allFieldViews]
  -[SKUICounterTimeView _visibleFieldViews]
  -[SKUICounterTimeView _fieldSpacingForFieldCount:fieldWidth:totalWidth:]
  -[SKUICounterTimeView valueFont]


_SKUICounterTimeFieldView : UIView /usr/lib/libobjc.A.dylib
 @property  UILabel *labelLabel
 @property  UILabel *valueLabel
 @property  unsigned long visibilityField

  // instance methods
  -[_SKUICounterTimeFieldView .cxx_destruct]
  -[_SKUICounterTimeFieldView setBackgroundColor:]
  -[_SKUICounterTimeFieldView initWithFrame:]
  -[_SKUICounterTimeFieldView sizeThatFits:]
  -[_SKUICounterTimeFieldView layoutSubviews]
  -[_SKUICounterTimeFieldView valueLabel]
  -[_SKUICounterTimeFieldView labelLabel]
  -[_SKUICounterTimeFieldView setVisibilityField:]
  -[_SKUICounterTimeFieldView visibilityField]


SKUIImageGridViewElement : SKUIViewElement
 @property  long long columnCount
 @property  {UIEdgeInsets=dddd} contentInset
 @property  {CGSize=dd} size

  // instance methods
  -[SKUIImageGridViewElement size]
  -[SKUIImageGridViewElement columnCount]
  -[SKUIImageGridViewElement contentInset]
  -[SKUIImageGridViewElement initWithDOMElement:parent:elementFactory:]


SKUIScrollingTabBarControllerItemContext : NSObject /usr/lib/libc++.1.dylib <SKUINavigationStackObserver>
 @property  SKUIViewControllerContainerCollectionViewCell *collectionViewCell
 @property  <SKUIScrollingTabBarControllerItemContextDelegate> *delegate
 @property  unsigned long lastSelectedPageIndex
 @property  UIScrollView *nestedPagingScrollView
 @property  double nestedPagingScrollViewContentWidth
 @property  UIViewController *viewController
 @property  BOOL viewControllerIsNavigationController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIScrollingTabBarControllerItemContext init]
  -[SKUIScrollingTabBarControllerItemContext dealloc]
  -[SKUIScrollingTabBarControllerItemContext delegate]
  -[SKUIScrollingTabBarControllerItemContext setDelegate:]
  -[SKUIScrollingTabBarControllerItemContext .cxx_destruct]
  -[SKUIScrollingTabBarControllerItemContext observeValueForKeyPath:ofObject:change:context:]
  -[SKUIScrollingTabBarControllerItemContext viewController]
  -[SKUIScrollingTabBarControllerItemContext initWithViewController:]
  -[SKUIScrollingTabBarControllerItemContext nestedPagingScrollView]
  -[SKUIScrollingTabBarControllerItemContext collectionViewCell]
  -[SKUIScrollingTabBarControllerItemContext setCollectionViewCell:]
  -[SKUIScrollingTabBarControllerItemContext viewControllerIsNavigationController]
  -[SKUIScrollingTabBarControllerItemContext applyNewContentInsetDescriptor:]
  -[SKUIScrollingTabBarControllerItemContext prepareViewControllerForDisplayWithSize:]
  -[SKUIScrollingTabBarControllerItemContext notifyOfUpdatedAppearanceStatus:]
  -[SKUIScrollingTabBarControllerItemContext nestedPagingScrollViewContentWidth]
  -[SKUIScrollingTabBarControllerItemContext viewControllerInNestedPagingScrollViewAtPageIndex:]
  -[SKUIScrollingTabBarControllerItemContext setLastSelectedPageIndex:]
  -[SKUIScrollingTabBarControllerItemContext lastSelectedPageIndex]
  -[SKUIScrollingTabBarControllerItemContext prepareViewControllerForTearDown]
  -[SKUIScrollingTabBarControllerItemContext updateNestedPagingScrollViewContentOffset:]
  -[SKUIScrollingTabBarControllerItemContext updateForPossibleNestedPagingScrollViewChange]
  -[SKUIScrollingTabBarControllerItemContext _applyNewContentInset:withOldContentInset:toContentScrollView:]
  -[SKUIScrollingTabBarControllerItemContext observedNavigationStackDidChange:]
  -[SKUIScrollingTabBarControllerItemContext _notifyDelegateOfUpdatedContentWidthInObservedNestedPagingScrollView]
  -[SKUIScrollingTabBarControllerItemContext _nestedPagedScrollingConformingViewControllerForcingViewLoading:]
  -[SKUIScrollingTabBarControllerItemContext _updateAppliedContentInsetsAdjustment]
  -[SKUIScrollingTabBarControllerItemContext _appearanceStatusObserver]
  -[SKUIScrollingTabBarControllerItemContext _prepareViewControllerForDisplayWithViewFrame:updateContentOffset:contentOffset:]
  -[SKUIScrollingTabBarControllerItemContext _prepareViewControllerForTearDown]


SKUIViewReuseCollectionViewCell : SKUICollectionViewCell
 @property  {UIEdgeInsets=dddd} contentInset
 @property  NSArray *allExistingViews

  // instance methods
  -[SKUIViewReuseCollectionViewCell dealloc]
  -[SKUIViewReuseCollectionViewCell .cxx_destruct]
  -[SKUIViewReuseCollectionViewCell setBackgroundColor:]
  -[SKUIViewReuseCollectionViewCell initWithFrame:]
  -[SKUIViewReuseCollectionViewCell setContentInset:]
  -[SKUIViewReuseCollectionViewCell contentInset]
  -[SKUIViewReuseCollectionViewCell applyLayoutAttributes:]
  -[SKUIViewReuseCollectionViewCell modifyUsingBlock:]
  -[SKUIViewReuseCollectionViewCell allExistingViews]
  -[SKUIViewReuseCollectionViewCell registerClass:forViewWithReuseIdentifier:]
  -[SKUIViewReuseCollectionViewCell enumerateExistingViewsForReuseIdentifier:usingBlock:]
  -[SKUIViewReuseCollectionViewCell textPropertiesForView:]
  -[SKUIViewReuseCollectionViewCell existingViewForIndex:]
  -[SKUIViewReuseCollectionViewCell existingViewsForReuseIdentifier:]


SKUIQuicklinkCollectionViewCell : SKUICollectionViewCell
  // instance methods
  -[SKUIQuicklinkCollectionViewCell dealloc]
  -[SKUIQuicklinkCollectionViewCell .cxx_destruct]
  -[SKUIQuicklinkCollectionViewCell layoutSubviews]
  -[SKUIQuicklinkCollectionViewCell hitTest:withEvent:]
  -[SKUIQuicklinkCollectionViewCell _linkButton]
  -[SKUIQuicklinkCollectionViewCell setColoringWithColorScheme:]
  -[SKUIQuicklinkCollectionViewCell _linkButtonAction:]
  -[SKUIQuicklinkCollectionViewCell configureForLink:]


SKUIProgressIndicatorViewElement : SKUIViewElement
 @property  float value

  // instance methods
  -[SKUIProgressIndicatorViewElement value]
  -[SKUIProgressIndicatorViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIProgressIndicatorViewElement applyUpdatesWithElement:]


SKUIOnboardingFooterView : UIView /usr/lib/libobjc.A.dylib
 @property  UIButton *leftButton
 @property  UIButton *rightButton
 @property  SKUIOnboardingProgressView *progressView

  // instance methods
  -[SKUIOnboardingFooterView .cxx_destruct]
  -[SKUIOnboardingFooterView sizeThatFits:]
  -[SKUIOnboardingFooterView layoutSubviews]
  -[SKUIOnboardingFooterView _newButton]
  -[SKUIOnboardingFooterView leftButton]
  -[SKUIOnboardingFooterView rightButton]
  -[SKUIOnboardingFooterView progressView]
  -[SKUIOnboardingFooterView setProgressView:]
  -[SKUIOnboardingFooterView hideLeftButtonWithAnimation:]
  -[SKUIOnboardingFooterView showLeftButtonWithTitle:animation:]
  -[SKUIOnboardingFooterView hideRightButtonWithAnimation:]
  -[SKUIOnboardingFooterView showRightButtonWithTitle:animation:]
  -[SKUIOnboardingFooterView _hideButton:withAnimation:]
  -[SKUIOnboardingFooterView _showButton:withTitle:animation:]


SKUIQuicklinksViewController : UIViewController /usr/lib/libobjc.A.dylib <UICollectionViewDataSource, UICollectionViewDelegate>
 @property  <SKUIQuicklinksViewControllerDelegate> *delegate
 @property  NSArray *indexPathsForVisibleItems
 @property  NSArray *links
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUIQuicklinksViewController dealloc]
  -[SKUIQuicklinksViewController delegate]
  -[SKUIQuicklinksViewController setDelegate:]
  -[SKUIQuicklinksViewController .cxx_destruct]
  -[SKUIQuicklinksViewController setTitle:]
  -[SKUIQuicklinksViewController loadView]
  -[SKUIQuicklinksViewController viewWillAppear:]
  -[SKUIQuicklinksViewController collectionView:numberOfItemsInSection:]
  -[SKUIQuicklinksViewController collectionView:cellForItemAtIndexPath:]
  -[SKUIQuicklinksViewController collectionView:didSelectItemAtIndexPath:]
  -[SKUIQuicklinksViewController indexPathsForVisibleItems]
  -[SKUIQuicklinksViewController _numberOfRows]
  -[SKUIQuicklinksViewController links]
  -[SKUIQuicklinksViewController setColoringWithColorScheme:]
  -[SKUIQuicklinksViewController willTransitionToSize:withTransitionCoordinator:]
  -[SKUIQuicklinksViewController setLinks:]
  -[SKUIQuicklinksViewController frameForLinkAtIndex:]


SKUIOfferView : SKUIViewReuseView <SKUIItemOfferButtonDelegate, SKUIViewElementView>
 @property  BOOL showingConfirmation
 @property  BOOL compactModeEnabled
 @property  unsigned long alignment
 @property  NSMapTable *buttonElements
 @property  NSMapTable *buyButtonDescriptorToButton
 @property  NSMapTable *notices
 @property  UIButton *hlsPlayButton
 @property  NSNumber *hlsID
 @property  NSMutableArray *metadataViews
 @property  NSMutableArray *offerButtonViews
 @property  <SKUIOfferViewDelegate> *delegate
 @property  long long metadataPosition
 @property  NSString *offerViewStateDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIOfferView prefetchResourcesForViewElement:reason:context:]
  +[SKUIOfferView preferredSizeForViewElement:context:]
  +[SKUIOfferView requestLayoutForViewElement:width:context:]
  +[SKUIOfferView sizeThatFitsWidth:viewElement:context:]
  +[SKUIOfferView _attributedStringForButton:context:]
  +[SKUIOfferView _attributedStringForLabel:context:]

  // instance methods
  -[SKUIOfferView delegate]
  -[SKUIOfferView setDelegate:]
  -[SKUIOfferView .cxx_destruct]
  -[SKUIOfferView alignment]
  -[SKUIOfferView setAlignment:]
  -[SKUIOfferView initWithFrame:]
  -[SKUIOfferView sizeThatFits:]
  -[SKUIOfferView layoutSubviews]
  -[SKUIOfferView setContentInset:]
  -[SKUIOfferView hitTest:withEvent:]
  -[SKUIOfferView reloadWithViewElement:width:context:]
  -[SKUIOfferView setImage:forArtworkRequest:context:]
  -[SKUIOfferView updateWithItemState:context:animated:]
  -[SKUIOfferView viewForElementIdentifier:]
  -[SKUIOfferView _buttonAction:]
  -[SKUIOfferView isCompactModeEnabled]
  -[SKUIOfferView _cancelConfirmationAction:]
  -[SKUIOfferView _showConfirmationAction:]
  -[SKUIOfferView itemOfferButtonDidAnimateTransition:]
  -[SKUIOfferView itemOfferButtonWillAnimateTransition:]
  -[SKUIOfferView setMetadataPosition:]
  -[SKUIOfferView metadataPosition]
  -[SKUIOfferView isShowingConfirmation]
  -[SKUIOfferView _sendWillAnimate]
  -[SKUIOfferView setShowingConfirmation:]
  -[SKUIOfferView offerButtonViews]
  -[SKUIOfferView buttonElements]
  -[SKUIOfferView buyButtonDescriptorToButton]
  -[SKUIOfferView metadataViews]
  -[SKUIOfferView setHlsID:]
  -[SKUIOfferView hlsPlayButton]
  -[SKUIOfferView setHlsPlayButton:]
  -[SKUIOfferView setNotices:]
  -[SKUIOfferView setCompactModeEnabled:]
  -[SKUIOfferView _shouldHideNoticesWithBuyButtonDescriptor:context:]
  -[SKUIOfferView setBuyButtonDescriptorToButton:]
  -[SKUIOfferView notices]
  -[SKUIOfferView hlsID]
  -[SKUIOfferView offerViewStateDescription]
  -[SKUIOfferView setButtonElements:]
  -[SKUIOfferView setMetadataViews:]
  -[SKUIOfferView setOfferButtonViews:]


SKUIStarBarViewElement : SKUIViewElement
 @property  long long numberOfRatings
 @property  long long numberOfStars
 @property  float value

  // instance methods
  -[SKUIStarBarViewElement value]
  -[SKUIStarBarViewElement numberOfRatings]
  -[SKUIStarBarViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUIStarBarViewElement applyUpdatesWithElement:]
  -[SKUIStarBarViewElement numberOfStars]


SKUIShelfPageSectionConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIViewElementLayoutContext *cellLayoutContext
 @property  <SKUIShelfPageSectionConfigurationDataSource> *dataSource
 @property  UICollectionView *existingShelfCollectionView
 @property  BOOL needsShelfCollectionViewReload
 @property  BOOL needsShelfCollectionViewLayout
 @property  unsigned long numberOfIterations
 @property  SKUIStorePageSectionContext *pageSectionContext
 @property  BOOL rendersWithParallax
 @property  BOOL rendersWithPerspective
 @property  long long sectionIndex
 @property  UICollectionView *shelfCollectionView
 @property  UIColor *shelfCollectionViewBackgroundColor
 @property  <UICollectionViewDataSource> *shelfCollectionViewDataSource
 @property  <UICollectionViewDelegate> *shelfCollectionViewDelegate
 @property  SKUIShelfLayoutData *shelfLayoutData
 @property  IKViewElementStyle *shelfViewElementStyle
 @property  BOOL topSection
 @property  BOOL wantsZoomingShelfLayout
 @property  double zoomingShelfLayoutFocusedItemHorizontalCenterOffset
 @property  double zoomingShelfLayoutInterItemSpacing
 @property  double zoomingShelfLayoutItemWidth
 @property  double zoomingShelfLayoutScaledItemWidth

  // instance methods
  -[SKUIShelfPageSectionConfiguration .cxx_destruct]
  -[SKUIShelfPageSectionConfiguration dataSource]
  -[SKUIShelfPageSectionConfiguration setDataSource:]
  -[SKUIShelfPageSectionConfiguration scrollViewDidScroll:]
  -[SKUIShelfPageSectionConfiguration numberOfIterations]
  -[SKUIShelfPageSectionConfiguration sectionIndex]
  -[SKUIShelfPageSectionConfiguration setSectionIndex:]
  -[SKUIShelfPageSectionConfiguration setShelfCollectionViewDataSource:]
  -[SKUIShelfPageSectionConfiguration setShelfCollectionViewDelegate:]
  -[SKUIShelfPageSectionConfiguration needsShelfCollectionViewReload]
  -[SKUIShelfPageSectionConfiguration setNeedsShelfCollectionViewReload:]
  -[SKUIShelfPageSectionConfiguration backgroundColorForShelfViewElement:]
  -[SKUIShelfPageSectionConfiguration cellForShelfViewElement:indexPath:]
  -[SKUIShelfPageSectionConfiguration cellSizeForShelfViewElement:indexPath:numberOfShelfItems:]
  -[SKUIShelfPageSectionConfiguration collectionViewWillApplyLayoutAttributes:]
  -[SKUIShelfPageSectionConfiguration existingShelfCollectionView]
  -[SKUIShelfPageSectionConfiguration setNeedsShelfCollectionViewLayout:]
  -[SKUIShelfPageSectionConfiguration numberOfSectionCells]
  -[SKUIShelfPageSectionConfiguration sectionContentInsetAdjustedFromValue:forShelfViewElement:withSectionIndex:]
  -[SKUIShelfPageSectionConfiguration setTopSection:]
  -[SKUIShelfPageSectionConfiguration registerReusableClassesForCollectionView:]
  -[SKUIShelfPageSectionConfiguration setCellLayoutContext:]
  -[SKUIShelfPageSectionConfiguration reloadShelfLayoutDataForShelfViewElement:withShelfItemViewElements:requestCellLayouts:numberOfShelfItems:]
  -[SKUIShelfPageSectionConfiguration setPageSectionContext:]
  -[SKUIShelfPageSectionConfiguration supportsDuplicateShelfItems]
  -[SKUIShelfPageSectionConfiguration cellForShelfItemViewElement:indexPath:]
  -[SKUIShelfPageSectionConfiguration numberOfCellsForNumberOfShelfItems:]
  -[SKUIShelfPageSectionConfiguration shelfItemsCollectionView:willApplyLayoutAttributes:forViewElement:withItemIndex:]
  -[SKUIShelfPageSectionConfiguration rendersWithParallax]
  -[SKUIShelfPageSectionConfiguration normalizedShelfItemIndexPathFromActualIndexPath:numberOfShelfItems:]
  -[SKUIShelfPageSectionConfiguration rendersWithPerspective]
  -[SKUIShelfPageSectionConfiguration setRendersWithPerspective:]
  -[SKUIShelfPageSectionConfiguration setRendersWithParallax:]
  -[SKUIShelfPageSectionConfiguration setShelfViewElementStyle:]
  -[SKUIShelfPageSectionConfiguration setShelfCollectionViewBackgroundColor:]
  -[SKUIShelfPageSectionConfiguration reloadLockupTypeForShelfViewElement:]
  -[SKUIShelfPageSectionConfiguration effectiveViewElementForShelfItemViewElement:]
  -[SKUIShelfPageSectionConfiguration actualIndexPathOfShelfItemClosestToVisibleBoundsForNormalizedIndexPath:numberOfShelfItems:]
  -[SKUIShelfPageSectionConfiguration prefetchResourcesForShelfItemViewElement:reason:]
  -[SKUIShelfPageSectionConfiguration shelfLayoutData]
  -[SKUIShelfPageSectionConfiguration lockupTypeForLockup:]
  -[SKUIShelfPageSectionConfiguration isTopSection]
  -[SKUIShelfPageSectionConfiguration shelfCollectionView]
  -[SKUIShelfPageSectionConfiguration _dequeueCellForLockup:collectionView:indexPath:]
  -[SKUIShelfPageSectionConfiguration pageSectionContext]
  -[SKUIShelfPageSectionConfiguration cellLayoutContext]
  -[SKUIShelfPageSectionConfiguration wantsZoomingShelfLayout]
  -[SKUIShelfPageSectionConfiguration zoomingShelfLayoutScaledItemWidth]
  -[SKUIShelfPageSectionConfiguration zoomingShelfLayoutItemWidth]
  -[SKUIShelfPageSectionConfiguration _styledShelfCollectionViewLayoutForExistingLayout:]
  -[SKUIShelfPageSectionConfiguration _updateShelfLayoutDataContentInset]
  -[SKUIShelfPageSectionConfiguration _perspectiveHeightForContentSize:]
  -[SKUIShelfPageSectionConfiguration _reloadShelfLayoutDataWithNumberOfShelfItems:]
  -[SKUIShelfPageSectionConfiguration _cellClassForEffectiveShelfItemViewElement:]
  -[SKUIShelfPageSectionConfiguration _columnSpacingForShelfItemViewElements:]
  -[SKUIShelfPageSectionConfiguration _shelfItemViewElementAtIndex:]
  -[SKUIShelfPageSectionConfiguration requestCellLayoutForViewElement:withColumnWidth:]
  -[SKUIShelfPageSectionConfiguration _lockupCellClassWithLockup:]
  -[SKUIShelfPageSectionConfiguration needsShelfCollectionViewLayout]
  -[SKUIShelfPageSectionConfiguration shelfCollectionViewBackgroundColor]
  -[SKUIShelfPageSectionConfiguration shelfCollectionViewDataSource]
  -[SKUIShelfPageSectionConfiguration shelfCollectionViewDelegate]
  -[SKUIShelfPageSectionConfiguration shelfViewElementStyle]
  -[SKUIShelfPageSectionConfiguration zoomingShelfLayoutFocusedItemHorizontalCenterOffset]
  -[SKUIShelfPageSectionConfiguration zoomingShelfLayoutInterItemSpacing]


SKUILaunchErrorViewController : UIViewController /usr/lib/libobjc.A.dylib

SKUIBrowseHeaderPageComponent : SKUIPageComponent
  // instance methods
  -[SKUIBrowseHeaderPageComponent componentType]


SKUIStorePageItemPinningLayoutInformation : NSObject /usr/lib/libc++.1.dylib
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} availablePinningFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} layoutAttributesFrame
 @property  double afterPinningLocationYAdditions
 @property  double beforePinningLocationYAdditions

  // instance methods
  -[SKUIStorePageItemPinningLayoutInformation availablePinningFrame]
  -[SKUIStorePageItemPinningLayoutInformation setAvailablePinningFrame:]
  -[SKUIStorePageItemPinningLayoutInformation setLayoutAttributesFrame:]
  -[SKUIStorePageItemPinningLayoutInformation setAfterPinningLocationYAdditions:]
  -[SKUIStorePageItemPinningLayoutInformation setBeforePinningLocationYAdditions:]
  -[SKUIStorePageItemPinningLayoutInformation layoutAttributesFrame]
  -[SKUIStorePageItemPinningLayoutInformation afterPinningLocationYAdditions]
  -[SKUIStorePageItemPinningLayoutInformation beforePinningLocationYAdditions]


SKUIJSFakeXMLHTTPRequest : IKJSObject /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore <SKUIJSFakeXMLHTTPRequest>
 @property  NSDictionary *metrics
 @property  unsigned int readyState
 @property  id response
 @property  NSString *responseText
 @property  unsigned int responseType
 @property  IKJSXMLDocument *responseXML
 @property  unsigned int status
 @property  NSString *statusText

  // instance methods
  -[SKUIJSFakeXMLHTTPRequest .cxx_destruct]
  -[SKUIJSFakeXMLHTTPRequest status]
  -[SKUIJSFakeXMLHTTPRequest metrics]
  -[SKUIJSFakeXMLHTTPRequest response]
  -[SKUIJSFakeXMLHTTPRequest responseType]
  -[SKUIJSFakeXMLHTTPRequest readyState]
  -[SKUIJSFakeXMLHTTPRequest statusText]
  -[SKUIJSFakeXMLHTTPRequest responseText]
  -[SKUIJSFakeXMLHTTPRequest responseXML]
  -[SKUIJSFakeXMLHTTPRequest getResponseHeader:]
  -[SKUIJSFakeXMLHTTPRequest getAllResponseHeaders]
  -[SKUIJSFakeXMLHTTPRequest initWithAppContext:data:URLResponse:performanceMetrics:]


SKUICountdownViewController : UIViewController /usr/lib/libobjc.A.dylib <SKUIArtworkRequestDelegate>
 @property  SKUIResourceLoader *artworkLoader
 @property  SKUIClientContext *clientContext
 @property  SKUICountdownComponent *countdownComponent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUICountdownViewController .cxx_destruct]
  -[SKUICountdownViewController loadView]
  -[SKUICountdownViewController viewWillAppear:]
  -[SKUICountdownViewController viewDidDisappear:]
  -[SKUICountdownViewController clientContext]
  -[SKUICountdownViewController setClientContext:]
  -[SKUICountdownViewController artworkRequest:didLoadImage:]
  -[SKUICountdownViewController artworkLoader]
  -[SKUICountdownViewController initWithCountdownComponent:artworkLoader:]
  -[SKUICountdownViewController countdownComponent]


SKUIDonationConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIClientContext *clientContext
 @property  NSArray *allCharities
 @property  NSURL *donationPurchaseURL
 @property  NSURL *donationValidationURL

  // instance methods
  -[SKUIDonationConfiguration .cxx_destruct]
  -[SKUIDonationConfiguration addObserver:]
  -[SKUIDonationConfiguration removeObserver:]
  -[SKUIDonationConfiguration clientContext]
  -[SKUIDonationConfiguration initWithOperationQueue:clientContext:]
  -[SKUIDonationConfiguration loadConfigurationWithCompletionBlock:]
  -[SKUIDonationConfiguration _finishLoadWithResponse:error:block:]
  -[SKUIDonationConfiguration _setLogoImage:forCharity:]
  -[SKUIDonationConfiguration charityForIdentifier:]
  -[SKUIDonationConfiguration loadLogoForCharity:]
  -[SKUIDonationConfiguration logoImageForCharity:]
  -[SKUIDonationConfiguration allCharities]
  -[SKUIDonationConfiguration donationValidationURL]
  -[SKUIDonationConfiguration donationPurchaseURL]


SKUICarouselPageComponent : SKUIPageComponent <SSMetricsEventFieldProvider>
 @property  NSArray *carouselItems
 @property  SKUICarouselViewElement *viewElement
 @property  double cycleInterval
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKUICarouselPageComponent .cxx_destruct]
  -[SKUICarouselPageComponent componentType]
  -[SKUICarouselPageComponent valueForMetricsField:]
  -[SKUICarouselPageComponent initWithViewElement:]
  -[SKUICarouselPageComponent initWithFeaturedContentContext:kind:]
  -[SKUICarouselPageComponent enumerateMissingItemIdentifiersFromIndex:usingBlock:]
  -[SKUICarouselPageComponent isMissingItemData]
  -[SKUICarouselPageComponent metricsElementName]
  -[SKUICarouselPageComponent updateWithMissingItems:]
  -[SKUICarouselPageComponent carouselItems]
  -[SKUICarouselPageComponent cycleInterval]


SKUIStateRestorationContext : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIClientContext *clientContext

  // class methods
  +[SKUIStateRestorationContext sharedContext]
  +[SKUIStateRestorationContext setSharedContext:]

  // instance methods
  -[SKUIStateRestorationContext .cxx_destruct]
  -[SKUIStateRestorationContext clientContext]
  -[SKUIStateRestorationContext setClientContext:]


SKUIReloadConfigurationOperation : NSOperation /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
 @property  SSURLBag *URLBag
 @property  @? outputBlock

  // class methods
  +[SKUIReloadConfigurationOperation cachePath]

  // instance methods
  -[SKUIReloadConfigurationOperation init]
  -[SKUIReloadConfigurationOperation .cxx_destruct]
  -[SKUIReloadConfigurationOperation main]
  -[SKUIReloadConfigurationOperation setOutputBlock:]
  -[SKUIReloadConfigurationOperation outputBlock]
  -[SKUIReloadConfigurationOperation URLBag]
  -[SKUIReloadConfigurationOperation setURLBag:]


SKUIMetricsController : NSObject /usr/lib/libc++.1.dylib
 @property  SKUIMetricsImpressionSession *activeImpressionsSession
 @property  double flushInterval
 @property  SSMetricsConfiguration *globalConfiguration
 @property  SSMetricsConfiguration *pageConfiguration
 @property  NSNumber *accountIdentifier
 @property  NSString *applicationIdentifier
 @property  NSString *hostApplicationIdentifier
 @property  NSString *pageContext
 @property  NSString *pageURL
 @property  NSString *topic
 @property  NSString *userAgent
 @property  NSString *windowOrientation

  // class methods
  +[SKUIMetricsController flushImmediately]

  // instance methods
  -[SKUIMetricsController dealloc]
  -[SKUIMetricsController .cxx_destruct]
  -[SKUIMetricsController applicationIdentifier]
  -[SKUIMetricsController setApplicationIdentifier:]
  -[SKUIMetricsController topic]
  -[SKUIMetricsController accountIdentifier]
  -[SKUIMetricsController userAgent]
  -[SKUIMetricsController setUserAgent:]
  -[SKUIMetricsController setTopic:]
  -[SKUIMetricsController setPageURL:]
  -[SKUIMetricsController pageURL]
  -[SKUIMetricsController globalConfiguration]
  -[SKUIMetricsController recordEvent:]
  -[SKUIMetricsController flushInterval]
  -[SKUIMetricsController compoundStringWithElements:]
  -[SKUIMetricsController tokenStringWithElements:]
  -[SKUIMetricsController initWithGlobalConfiguration:]
  -[SKUIMetricsController locationWithPosition:type:fieldData:]
  -[SKUIMetricsController setPageConfiguration:]
  -[SKUIMetricsController hostApplicationIdentifier]
  -[SKUIMetricsController setHostApplicationIdentifier:]
  -[SKUIMetricsController pageContext]
  -[SKUIMetricsController setPageContext:]
  -[SKUIMetricsController setWindowOrientation:]
  -[SKUIMetricsController windowOrientation]
  -[SKUIMetricsController performActionForItem:offer:clientContext:completionBlock:]
  -[SKUIMetricsController performActionForSoftwareItem:offer:clientContext:completionBlock:]
  -[SKUIMetricsController performActionForItem:clientContext:]
  -[SKUIMetricsController activeImpressionsSession]
  -[SKUIMetricsController pingURLs:withClientContext:]
  -[SKUIMetricsController itemOfferClickEventWithItem:locationPosition:]
  -[SKUIMetricsController locationWithPageComponent:]
  -[SKUIMetricsController canRecordEventWithType:]
  -[SKUIMetricsController flushImmediately]
  -[SKUIMetricsController closeImpressionsSession]
  -[SKUIMetricsController _recordActiveImpressions]
  -[SKUIMetricsController _insertEvent:]
  -[SKUIMetricsController clickEventWithItem:locationPosition:]
  -[SKUIMetricsController performActionForItem:]
  -[SKUIMetricsController performActionForItem:offer:clientContext:]
  -[SKUIMetricsController pingURLs:]
  -[SKUIMetricsController recordBuyConfirmedEventsForItems:purchaseResponses:]
  -[SKUIMetricsController _waitUntilRecordingComplete]
  -[SKUIMetricsController pageConfiguration]


SKUIMetricsImpressionSession : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *impressionIdentifiers
 @property  NSString *impressionsString
 @property  NSArray *impressionableViewElements

  // instance methods
  -[SKUIMetricsImpressionSession init]
  -[SKUIMetricsImpressionSession .cxx_destruct]
  -[SKUIMetricsImpressionSession impressionIdentifiers]
  -[SKUIMetricsImpressionSession impressionableViewElements]
  -[SKUIMetricsImpressionSession impressionsString]
  -[SKUIMetricsImpressionSession beginActiveImpressionForViewElement:]
  -[SKUIMetricsImpressionSession endAllPendingActiveImpression]
  -[SKUIMetricsImpressionSession endActiveImpressionForViewElement:]
  -[SKUIMetricsImpressionSession addItemViewElement:]
  -[SKUIMetricsImpressionSession addItemIdentifier:]
  -[SKUIMetricsImpressionSession _getTimerForViewElement:]
  -[SKUIMetricsImpressionSession _clearTimerForViewElement:]
  -[SKUIMetricsImpressionSession _setTimer:forViewElement:]
  -[SKUIMetricsImpressionSession _allViewElementsInTimerMap]


SKUIMediaSocialSaveProfilePhotoOperation : SSVComplexOperation /System/Library/Frameworks/UIKit.framework/UIKit
  // instance methods
  -[SKUIMediaSocialSaveProfilePhotoOperation .cxx_destruct]
  -[SKUIMediaSocialSaveProfilePhotoOperation main]
  -[SKUIMediaSocialSaveProfilePhotoOperation setPhoto:]
  -[SKUIMediaSocialSaveProfilePhotoOperation setOutputBlock:]
  -[SKUIMediaSocialSaveProfilePhotoOperation outputBlock]
  -[SKUIMediaSocialSaveProfilePhotoOperation initWithClientContext:]
  -[SKUIMediaSocialSaveProfilePhotoOperation _requestWithError:]
  -[SKUIMediaSocialSaveProfilePhotoOperation _photoUploadWithResponseDictionary:]


SKUIStarRatingControlView : UIControl /usr/lib/libobjc.A.dylib <SKUIViewElementView>
 @property  SKUIStarRatingControl *control
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIStarRatingControlView prefetchResourcesForViewElement:reason:context:]
  +[SKUIStarRatingControlView preferredSizeForViewElement:context:]
  +[SKUIStarRatingControlView requestLayoutForViewElement:width:context:]
  +[SKUIStarRatingControlView sizeThatFitsWidth:viewElement:context:]

  // instance methods
  -[SKUIStarRatingControlView dealloc]
  -[SKUIStarRatingControlView setEnabled:]
  -[SKUIStarRatingControlView .cxx_destruct]
  -[SKUIStarRatingControlView initWithFrame:]
  -[SKUIStarRatingControlView sizeThatFits:]
  -[SKUIStarRatingControlView pointInside:withEvent:]
  -[SKUIStarRatingControlView setContentInset:]
  -[SKUIStarRatingControlView setControl:]
  -[SKUIStarRatingControlView control]
  -[SKUIStarRatingControlView reloadWithViewElement:width:context:]
  -[SKUIStarRatingControlView setImage:forArtworkRequest:context:]
  -[SKUIStarRatingControlView updateWithItemState:context:animated:]
  -[SKUIStarRatingControlView viewForElementIdentifier:]
  -[SKUIStarRatingControlView didRating:]


SKUIWeakReference : NSObject /usr/lib/libc++.1.dylib
 @property  NSObject *object

  // instance methods
  -[SKUIWeakReference object]
  -[SKUIWeakReference setObject:]
  -[SKUIWeakReference .cxx_destruct]


SKUINavigationController : SUNavigationController /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
  // instance methods
  -[SKUINavigationController pushViewController:animated:]
  -[SKUINavigationController popToRootViewControllerAnimated:]
  -[SKUINavigationController popViewControllerAnimated:]
  -[SKUINavigationController setViewControllers:animated:]
  -[SKUINavigationController didShowViewController:animated:]
  -[SKUINavigationController childViewControllerForStatusBarStyle]
  -[SKUINavigationController childViewControllerForStatusBarHidden]
  -[SKUINavigationController attachPalette:isPinned:]
  -[SKUINavigationController popToViewController:animated:]
  -[SKUINavigationController _topViewControllerPrefersNavigationBarBackgroundViewHidden]
  -[SKUINavigationController _scheduleConfigurationOfNavigationBar]
  -[SKUINavigationController _configureNavigationBarForViewController:shouldIgnoreTransitionCoordinator:]
  -[SKUINavigationController _accessibilityButtonBackgroundDefaultTintColor]
  -[SKUINavigationController _configureNavigationBar:withTintColor:tintAdjustmentMode:titleTextTintColor:shouldTintTitleText:accessibilityButtonBackgroundTintColor:]
  -[SKUINavigationController _setNavigationPalette:hidesPaletteShadow:]
  -[SKUINavigationController _viewControllerNeedsNavigationBarAppearanceUpdate:]


SKUIVerticalInfoListCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUIVerticalInfoListCollectionViewCell prefetchResourcesForViewElement:reason:context:]
  +[SKUIVerticalInfoListCollectionViewCell preferredSizeForViewElement:context:]
  +[SKUIVerticalInfoListCollectionViewCell requestLayoutForViewElement:width:context:]
  +[SKUIVerticalInfoListCollectionViewCell sizeThatFitsWidth:viewElement:context:]
  +[SKUIVerticalInfoListCollectionViewCell _attributedStringForButton:context:]
  +[SKUIVerticalInfoListCollectionViewCell _attributedStringForLabel:context:]

  // instance methods
  -[SKUIVerticalInfoListCollectionViewCell .cxx_destruct]
  -[SKUIVerticalInfoListCollectionViewCell initWithFrame:]
  -[SKUIVerticalInfoListCollectionViewCell layoutSubviews]
  -[SKUIVerticalInfoListCollectionViewCell reloadWithViewElement:width:context:]
  -[SKUIVerticalInfoListCollectionViewCell setImage:forArtworkRequest:context:]
  -[SKUIVerticalInfoListCollectionViewCell updateWithItemState:context:animated:]
  -[SKUIVerticalInfoListCollectionViewCell viewForElementIdentifier:]
  -[SKUIVerticalInfoListCollectionViewCell _buttonAction:]
  -[SKUIVerticalInfoListCollectionViewCell _imageTapAction:]
  -[SKUIVerticalInfoListCollectionViewCell reloadWithViewElements:width:context:]


SKUIMetricsFlushTimer : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[SKUIMetricsFlushTimer sharedTimer]

  // instance methods
  -[SKUIMetricsFlushTimer init]
  -[SKUIMetricsFlushTimer dealloc]
  -[SKUIMetricsFlushTimer .cxx_destruct]
  -[SKUIMetricsFlushTimer _applicationDidEnterBackgroundNotification:]
  -[SKUIMetricsFlushTimer _applicationWillEnterForegroundNotification:]
  -[SKUIMetricsFlushTimer addMetricsController:]
  -[SKUIMetricsFlushTimer removeMetricsController:]
  -[SKUIMetricsFlushTimer flushAllMetricsControllers]
  -[SKUIMetricsFlushTimer reloadFlushInterval]
  -[SKUIMetricsFlushTimer _performFlush]
  -[SKUIMetricsFlushTimer _cancelFlushTimer]


SKUILabelViewElement : SKUIViewElement <SKUILinkHandler>
 @property  long long labelViewStyle
 @property  <SKUILinkHandler> *linkDelegate
 @property  NSString *moreButtonTitle
 @property  long long numberOfLines
 @property  SKUIViewElementText *text
 @property  NSArray *badges
 @property  NSArray *trailingBadges
 @property  long long badgePlacement
 @property  BOOL containsLinks
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKUILabelViewElement shouldParseChildDOMElements]

  // instance methods
  -[SKUILabelViewElement dealloc]
  -[SKUILabelViewElement .cxx_destruct]
  -[SKUILabelViewElement text]
  -[SKUILabelViewElement numberOfLines]
  -[SKUILabelViewElement badgePlacement]
  -[SKUILabelViewElement badges]
  -[SKUILabelViewElement initWithDOMElement:parent:elementFactory:]
  -[SKUILabelViewElement applyUpdatesWithElement:]
  -[SKUILabelViewElement pageComponentType]
  -[SKUILabelViewElement labelViewStyle]
  -[SKUILabelViewElement uniquingMapKey]
  -[SKUILabelViewElement moreButtonTitle]
  -[SKUILabelViewElement containsLinks]
  -[SKUILabelViewElement setContainsLinks:]
  -[SKUILabelViewElement linkDelegate]
  -[SKUILabelViewElement setLinkDelegate:]
  -[SKUILabelViewElement trailingBadges]
  -[SKUILabelViewElement linkTapped:range:]
  -[SKUILabelViewElement _walkDOM:parent:elementFactory:]
  -[SKUILabelViewElement _createText:]
  -[SKUILabelViewElement _stringFromNumberElement:]
  -[SKUILabelViewElement _stringFromDateElement:]
  -[SKUILabelViewElement _stringFromDurationElement:]


SKUIURLConnectionRequest : SSURLConnectionRequest /System/Library/Frameworks/UIKit.framework/UIKit
  // instance methods
  -[SKUIURLConnectionRequest startWithConnectionResponseBlock:]


SKUIViewControllerContainerCollectionView : UICollectionView /usr/lib/libobjc.A.dylib
  // instance methods
  -[SKUIViewControllerContainerCollectionView dealloc]
  -[SKUIViewControllerContainerCollectionView observeValueForKeyPath:ofObject:change:context:]
  -[SKUIViewControllerContainerCollectionView gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[SKUIViewControllerContainerCollectionView gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:]
  -[SKUIViewControllerContainerCollectionView _endDynamicHysteresisIncrease]
  -[SKUIViewControllerContainerCollectionView _beginDynamicHysteresisIncreaseWithCompetingScrollView:]
  -[SKUIViewControllerContainerCollectionView _updateStateForDynamicHysteresisIncrease]


UIResponder(SKUIExtensions)
	// instance methods
	-[UIResponder(SKUIExtensions) _SKUIView]

UIView(SKUIExtensions)
	// instance methods
	-[UIView(SKUIExtensions) _SKUIView]
	-[UIView(SKUIExtensions) defaultPresentationPosition]
	-[UIView(SKUIExtensions) skui_apparentBackgroundColor]

UIViewController(SKUIExtensions)
	// instance methods
	-[UIViewController(SKUIExtensions) _SKUIView]
	-[UIViewController(SKUIExtensions) SKUIStackedBar]
	-[UIViewController(SKUIExtensions) registerForPreviewingFromSourceView:handler:]
	-[UIViewController(SKUIExtensions) unregisterForPreviewing:]
	-[UIViewController(SKUIExtensions) SKUIStackedBarSplit]
	-[UIViewController(SKUIExtensions) setSKUIStackedBarSplit:]
	-[UIViewController(SKUIExtensions) setNeedsNestedPagingScrollViewUpdate]
	-[UIViewController(SKUIExtensions) scrollingTabBarController]
	-[UIViewController(SKUIExtensions) scrollingSegmentedController]
	-[UIViewController(SKUIExtensions) setNeedsScrollingSegmentContentScrollViewUpdate]
	-[UIViewController(SKUIExtensions) SKUIPinnedHeaderView]
	-[UIViewController(SKUIExtensions) setNeedsNavigationBarAppearanceUpdate]

UILabel(SKUITrendingSearchLabel)
	// class methods
	+[UILabel(SKUITrendingSearchLabel) SKUITrending_defaultTitleFont]
	+[UILabel(SKUITrendingSearchLabel) SKUITrending_defaultTitleColor]
	+[UILabel(SKUITrendingSearchLabel) SKUITrending_titleLabelWithElement:]
	+[UILabel(SKUITrendingSearchLabel) SKUITrending_defaultLabelWithText:]

UIControl(advertising)
	// instance methods
	-[UIControl(advertising) adPrivacyData]
	-[UIControl(advertising) setAdPrivacyData:]

UIButton(SKUITrendingSearchButtons)
	// class methods
	+[UIButton(SKUITrendingSearchButtons) SKUITrending_searchButtonWithElement:]
	+[UIButton(SKUITrendingSearchButtons) SKUITrending_defaultButtonFont]
	+[UIButton(SKUITrendingSearchButtons) SKUITrending_searchButtonWithTitle:]

	// instance methods
	-[UIButton(SKUITrendingSearchButtons) SKUITrending_applyConfigurationFromElement:]

UIApplication(SKUIMedusaAdditions)
	// instance methods
	-[UIApplication(SKUIMedusaAdditions) SKUI_isFullscreen]
	-[UIApplication(SKUIMedusaAdditions) SKUI_isMedusaActive]

SSUpdatableAssetController(SKUIExternalResourceManagerAdditions)
	// instance methods
	-[SSUpdatableAssetController(SKUIExternalResourceManagerAdditions) imageForResourceName:]

SSUpdatableAssetManifest(SKUIExternalResourceManagerAdditions)
	// class methods
	+[SSUpdatableAssetManifest(SKUIExternalResourceManagerAdditions) _scaleDefinedByPath:]

	// instance methods
	-[SSUpdatableAssetManifest(SKUIExternalResourceManagerAdditions) imageForResourceName:]

UIActivityItemProvider(SKUIExtensions)
	// class methods
	+[UIActivityItemProvider(SKUIExtensions) activityTypeShouldProvideImage:]

IKViewElement(SKUIEntityProviderListViewElement)
	// instance methods
	-[IKViewElement(SKUIEntityProviderListViewElement) entityProviderList]

UIColor(SKUIOpaqueTest)
	// instance methods
	-[UIColor(SKUIOpaqueTest) skui_isOpaque]

NSObject(_SKUIDynamicGridSizeCacheKey)
	// instance methods
	-[NSObject(_SKUIDynamicGridSizeCacheKey) __isSKUIDynamicGridSizeCacheKey]

NSDictionary(SKUIExtensions)
	// class methods
	+[NSDictionary(SKUIExtensions) sk_dictionaryWithSize:]

UIInterfaceAction(SKUIContextActions)
	// class methods
	+[UIInterfaceAction(SKUIContextActions) actionWithTitle:resource:handler:]

UIImage(SKUIExtensions)
	// class methods
	+[UIImage(SKUIExtensions) singlePointImageWithColor:]

UIInterfaceActionGroupView(SKUIAdditions)
	// instance methods
	-[UIInterfaceActionGroupView(SKUIAdditions) newActionSeparatorView]

_UINavigationControllerPalette(rdar27259889)
	// instance methods
	-[_UINavigationControllerPalette(rdar27259889) resetBackgroundConstraints]
	-[_UINavigationControllerPalette(rdar27259889) SKUI_beginHidingPaletteShadow]
	-[_UINavigationControllerPalette(rdar27259889) SKUI_endHidingPaletteShadow]

01 00 0b00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationController 
01 00 0c00 /System/Library/PrivateFrameworks/AuthKitUI.framework/AuthKitUI: AKAppleIDAuthenticationInAppContext 
01 00 0b00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKUsernameFormatter 
01 00 0900 /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon: ASDJobManager 
01 00 0900 /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon: ASDJobManagerOptions 
01 00 0900 /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon: ASDPurchase 
01 00 0900 /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon: ASDPurchaseRequest 
01 00 0900 /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon: ASDPurchaseRequestOptions 
01 00 0900 /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon: ASDPurchaseResponse 
01 00 0900 /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon: ASDSoftwareUpdatesStore 
01 00 0700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 0700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0800 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerViewController 
01 00 0300 /System/Library/PrivateFrameworks/BookLibrary.framework/BookLibrary: BLDownloadQueue 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CARenderer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0a00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPLRUDictionary 
01 00 0100 /System/Library/PrivateFrameworks/CoreRecognition.framework/CoreRecognition: CRCodeRedeemerController 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKAppContext 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKAppDataStorage 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKAppDocument 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKAppMenuBarDocument 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKColor 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKDOMDocument 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKDOMFeatureFactory 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKJSApplication 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKJSEntityValueProvider 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKJSITunesStore 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKJSNavigationDocument 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKJSObject 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKTextParser 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKViewElement 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKViewElementFactory 
01 00 1200 /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit: IKViewElementStyle 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISBiometricStore 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISClient 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISDevice 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISDialog 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISDialogOperation 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISLoadURLBagOperation 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISNetworkObserver 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISOpenURLOperation 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISOpenURLRequest 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISOperation 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISOperationQueue 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISProcessPropertyListOperation 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISPropertyListProvider 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISProtocolDataProvider 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISStoreURLOperation 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISURLBagCache 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISURLOperation 
01 00 1500 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSManagedValue 
01 00 1500 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSValue 
01 00 0500 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPImage 
01 00 0500 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPLinkMetadata 
01 00 0500 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPVideo 
01 00 0500 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPiTunesMediaSoftwareMetadata 
01 00 1700 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: NSLayoutManager 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1c00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: NSStringDrawingContext 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextContainer 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextStorage 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCache 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLProtocol 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 0d00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLResponse 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1300 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: RemovableSoftwareLookupTable 
01 00 1900 /System/Library/Frameworks/StoreKit.framework/StoreKit: SKComposeReviewViewController 
01 00 1900 /System/Library/Frameworks/StoreKit.framework/StoreKit: SKStarRatingAlertController 
01 00 1900 /System/Library/Frameworks/StoreKit.framework/StoreKit: SKStarRatingControl 
01 00 1900 /System/Library/Frameworks/StoreKit.framework/StoreKit: SKStorePageRequest 
01 00 1900 /System/Library/Frameworks/StoreKit.framework/StoreKit: SKStoreProductViewController 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSAccountStore 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSAppPurchaseHistoryDatabase 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSAppPurchaseHistoryDatabaseSchema 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSAppPurchaseHistoryEntry 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSApplicationUtil 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSAuthenticateRequest 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSAuthenticationContext 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSDevice 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSDictionaryResponse 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSDownload 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSDownloadManager 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSDownloadManagerOptions 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSDownloadManifestRequest 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSDownloadMetadata 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSFamilyCircleRequest 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSLogConfig 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSLookupItem 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSLookupItemArtwork 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSLookupRequest 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMetricsAccountEvent 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMetricsBaseEvent 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMetricsClickEvent 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMetricsConfiguration 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMetricsController 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMetricsEventController 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMetricsEventLocation 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMetricsEventTable 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMetricsImpressionsEvent 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMetricsMediaEvent 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMetricsPageEvent 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMetricsPurchaseEvent 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMetricsTimingDefaults 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMutableAuthenticationContext 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSMutableURLRequestProperties 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSPurchase 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSPurchaseRequest 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSPurchaseResponse 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSRedeemCodesRequest 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSRestrictions 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSSQLiteComparisonPredicate 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSSQLiteContainsPredicate 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSSQLiteQuery 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSSQLiteQueryDescriptor 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSScriptURLHandler 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSSoftwareLibrary 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSTonePurchase 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSURLBag 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSURLBagContext 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSURLConnectionRequest 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSURLRequestProperties 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSURLSessionManager 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSUpdatableAssetController 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSUpdatableAssetManifest 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVComplexOperation 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVFairPlaySAPSession 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVGratisRequestBody 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVLoadURLOperation 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVMediaSocialAdminPermissionsCoordinator 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVPlatformContext 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVPlatformRequestOperation 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVRedeemCodeMetadata 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVSAPSignaturePolicy 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVSecureKeyDeliveryRequestOperation 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVSubscriptionStatusCoordinator 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVURLBagInterpreter 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVURLDataConsumer 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVURLProtocolConsumer 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSWeakReference 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSWishlist 
01 00 1a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSWishlistItemEntity 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUAccountViewController 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUAudioPlayerSessionManager 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUBarButtonItem 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUClientInterface 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUDialogManager 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUGradient 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SULoadingView 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUNavigationBar 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUNavigationContainerViewController 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUNavigationController 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUNavigationItem 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUPlaceholderViewController 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUPreviewOverlayViewController 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUPurchaseManager 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUScriptInterface 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUScriptObject 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUSearchFieldConfiguration 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUSection 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUStorePageViewController 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUStructuredPage 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUTextContentView 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUViewController 
01 00 1400 /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI: SUViewControllerFactory 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivity 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityItemProvider 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationRotationFollowingController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationRotationFollowingWindow 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionReusableView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayout 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayoutInvalidationContext 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayout 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayoutAttributes 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayoutInvalidationContext 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDatePicker 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDynamicAnimator 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGradient 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImagePickerController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInterfaceAction 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInterfaceActionGroup 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInterfaceActionGroupView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboard 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UILocalizedIndexedCollation 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMoreListController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMoreNavigationController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationButton 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationItem 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPageControl 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPageViewController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPasteboard 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPickerView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPopoverBackgroundView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPopoverController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPresentationController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewInteraction 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIRefreshControl 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIResponder 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchBar 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISegmentedControl 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISlider 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISplitViewController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringTimingParameters 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIToolbar 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0200 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropViewSettings 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICollectionViewCompositionLayout 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContentUnavailableView 
01 00 1b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UINavigationControllerPalette 
