|| __DATA_CONST.__const _MCMMigrationLastBuildInfoKey
|| __DATA_CONST.__const _MCMMigrationTypeACLMigration
|| __DATA_CONST.__const _MCMMigrationTypeBundleMigration
|| __DATA_CONST.__const _MCMMigrationTypeCodeSigningMigration
|| __DATA_CONST.__const _MCMMigrationTypeDaemonContainerCleaning
|| __DATA_CONST.__const _MCMMigrationTypeGroupIdMigration
|| __DATA_CONST.__const _MCMUserMigrationTypeSubdirectoryMigration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MCMGlobalConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MCMMigrationStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MCMPOSIXUser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MCMGlobalConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MCMMigrationStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MCMPOSIXUser
|| __TEXT.__text __containermanagerd_main
|| __TEXT.__text _containermanager_copy_global_configuration
|| __TEXT.__text _containermanager_set_global_configuration
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopRun
__ CoreFoundation: _CFStringCreateWithFormatAndArguments
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: __CFPrefsSetDirectModeEnabled
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileProtectionComplete
__ Foundation: _NSFileProtectionCompleteUnlessOpen
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionCompleteUntilUserAuthentication
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSFileProtectionWriteOnly
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_METACLASS_$_NSString
__ Foundation: __NSDefaultFileSystemEncoding
__ MobileKeyBag: _MKBGetDeviceLockState
__ MobileKeyBag: _kMobileKeyBagLockStatusNotifyToken
__ SoftLinking: __sl_dlopen
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _CONTAINER_NOTIFY_USER_INVALIDATED
__ libSystem.B.dylib: _CONTAINER_PERSONA_PRIMARY
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: _SANDBOX_CHECK_NO_REPORT
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_data_destructor_vm_deallocate
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_mach_recv
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_crash
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_type_array
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _abort_with_reason
__ libSystem.B.dylib: _acl_add_flag_np
__ libSystem.B.dylib: _acl_add_perm
__ libSystem.B.dylib: _acl_create_entry
__ libSystem.B.dylib: _acl_delete_perm
__ libSystem.B.dylib: _acl_free
__ libSystem.B.dylib: _acl_get_entry
__ libSystem.B.dylib: _acl_get_file
__ libSystem.B.dylib: _acl_get_flagset_np
__ libSystem.B.dylib: _acl_get_permset
__ libSystem.B.dylib: _acl_get_tag_type
__ libSystem.B.dylib: _acl_init
__ libSystem.B.dylib: _acl_set_file
__ libSystem.B.dylib: _acl_set_flagset_np
__ libSystem.B.dylib: _acl_set_permset
__ libSystem.B.dylib: _acl_set_qualifier
__ libSystem.B.dylib: _acl_set_tag_type
__ libSystem.B.dylib: _acl_to_text
__ libSystem.B.dylib: _asprintf
__ libSystem.B.dylib: _bootstrap_check_in
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _chmod
__ libSystem.B.dylib: _chown
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _closedir
__ libSystem.B.dylib: _container_audit_token_copy_codesign_hash
__ libSystem.B.dylib: _container_audit_token_copy_codesign_identifier
__ libSystem.B.dylib: _container_audit_token_copy_entitlement
__ libSystem.B.dylib: _container_audit_token_get_codesign_status
__ libSystem.B.dylib: _container_audit_token_get_pid
__ libSystem.B.dylib: _container_audit_token_get_platform
__ libSystem.B.dylib: _container_class_for_each_normalized_class
__ libSystem.B.dylib: _container_class_normalized
__ libSystem.B.dylib: _container_class_supports_data_subdirectory
__ libSystem.B.dylib: _container_class_supports_randomized_path
__ libSystem.B.dylib: _container_client_copy_decoded_from_xpc_object
__ libSystem.B.dylib: _container_client_copy_encoded_xpc_object
__ libSystem.B.dylib: _container_client_copy_entitlement
__ libSystem.B.dylib: _container_client_create_from_audit_token
__ libSystem.B.dylib: _container_client_get_audit_token
__ libSystem.B.dylib: _container_client_get_codesign_identifier
__ libSystem.B.dylib: _container_client_get_euid
__ libSystem.B.dylib: _container_client_get_persona_unique_string
__ libSystem.B.dylib: _container_client_get_pid
__ libSystem.B.dylib: _container_client_get_platform
__ libSystem.B.dylib: _container_client_initializer
__ libSystem.B.dylib: _container_client_is_alive
__ libSystem.B.dylib: _container_client_is_sandboxed
__ libSystem.B.dylib: _container_client_is_signed
__ libSystem.B.dylib: _container_client_is_test_client
__ libSystem.B.dylib: _container_codesign_copy_current_identifier
__ libSystem.B.dylib: _container_codesign_get_self_audit_token
__ libSystem.B.dylib: _container_copy_unlocalized_description
__ libSystem.B.dylib: _container_error_copy_unlocalized_description
__ libSystem.B.dylib: _container_error_create
__ libSystem.B.dylib: _container_error_free
__ libSystem.B.dylib: _container_error_get_category
__ libSystem.B.dylib: _container_error_get_path
__ libSystem.B.dylib: _container_error_get_posix_errno
__ libSystem.B.dylib: _container_error_get_type
__ libSystem.B.dylib: _container_free_array_of_containers
__ libSystem.B.dylib: _container_free_client
__ libSystem.B.dylib: _container_free_object
__ libSystem.B.dylib: _container_frozenset_create
__ libSystem.B.dylib: _container_frozenset_destroy
__ libSystem.B.dylib: _container_fs_path_at
__ libSystem.B.dylib: _container_get_class
__ libSystem.B.dylib: _container_get_error_description
__ libSystem.B.dylib: _container_get_identifier
__ libSystem.B.dylib: _container_get_persona_unique_string
__ libSystem.B.dylib: _container_get_uid
__ libSystem.B.dylib: _container_get_unique_path_component
__ libSystem.B.dylib: _container_internal_get_first_boot_uuid
__ libSystem.B.dylib: _container_is_new
__ libSystem.B.dylib: _container_is_transient
__ libSystem.B.dylib: _container_link_copy_container_a
__ libSystem.B.dylib: _container_link_copy_container_b
__ libSystem.B.dylib: _container_link_create_internal
__ libSystem.B.dylib: _container_link_free
__ libSystem.B.dylib: _container_link_get_attributes
__ libSystem.B.dylib: _container_link_is_implicit
__ libSystem.B.dylib: _container_log_handle_for_category
__ libSystem.B.dylib: _container_object_create
__ libSystem.B.dylib: _container_object_get_class
__ libSystem.B.dylib: _container_object_get_info
__ libSystem.B.dylib: _container_object_get_path
__ libSystem.B.dylib: _container_object_get_uuid
__ libSystem.B.dylib: _container_object_set_links
__ libSystem.B.dylib: _container_object_set_path
__ libSystem.B.dylib: _container_paths_copy_container_from_path
__ libSystem.B.dylib: _container_perform_with_client_context
__ libSystem.B.dylib: _container_query_count_results
__ libSystem.B.dylib: _container_query_create
__ libSystem.B.dylib: _container_query_free
__ libSystem.B.dylib: _container_query_get_last_error
__ libSystem.B.dylib: _container_query_iterate_results_sync
__ libSystem.B.dylib: _container_query_operation_set_flags
__ libSystem.B.dylib: _container_query_set_class
__ libSystem.B.dylib: _container_query_set_identifiers
__ libSystem.B.dylib: _container_query_set_include_other_owners
__ libSystem.B.dylib: _container_realpath
__ libSystem.B.dylib: _container_sandbox_issue_custom_extension
__ libSystem.B.dylib: _container_set_info_value
__ libSystem.B.dylib: _container_xpc_decode_container_object
__ libSystem.B.dylib: _container_xpc_decode_create_container_object_array
__ libSystem.B.dylib: _container_xpc_decode_create_link
__ libSystem.B.dylib: _container_xpc_encode_container_as_object
__ libSystem.B.dylib: _container_xpc_encode_container_metadata_as_object
__ libSystem.B.dylib: _container_xpc_encode_container_object
__ libSystem.B.dylib: _container_xpc_encode_error
__ libSystem.B.dylib: _container_xpc_encode_link_as_object
__ libSystem.B.dylib: _container_xpc_send_sync_message
__ libSystem.B.dylib: _container_xpc_set_use_shared_connection
__ libSystem.B.dylib: _copyfile
__ libSystem.B.dylib: _ctime
__ libSystem.B.dylib: _dirfd
__ libSystem.B.dylib: _dirstat_np
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_and_wait
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_async_and_wait
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_data_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_main
__ libSystem.B.dylib: _dispatch_mig_server
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_workloop_create
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_get_active_platform
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fchflags
__ libSystem.B.dylib: _fchmod
__ libSystem.B.dylib: _fchmodx_np
__ libSystem.B.dylib: _fchown
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fflagstostr
__ libSystem.B.dylib: _fgetxattr
__ libSystem.B.dylib: _filesec_free
__ libSystem.B.dylib: _filesec_get_property
__ libSystem.B.dylib: _filesec_init
__ libSystem.B.dylib: _filesec_set_property
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fremovexattr
__ libSystem.B.dylib: _fsctl
__ libSystem.B.dylib: _fsetxattr
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _fstatfs
__ libSystem.B.dylib: _fstatx_np
__ libSystem.B.dylib: _fts_close
__ libSystem.B.dylib: _fts_open
__ libSystem.B.dylib: _fts_read
__ libSystem.B.dylib: _getattrlist
__ libSystem.B.dylib: _getegid
__ libSystem.B.dylib: _geteuid
__ libSystem.B.dylib: _getopt_long_only
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _getpwnam_r
__ libSystem.B.dylib: _getpwuid_r
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _getxattr
__ libSystem.B.dylib: _host_get_multiuser_config_flags
__ libSystem.B.dylib: _kpersona_info
__ libSystem.B.dylib: _lchflags
__ libSystem.B.dylib: _lchmod
__ libSystem.B.dylib: _lchown
__ libSystem.B.dylib: _lstat
__ libSystem.B.dylib: _mach_error_string
__ libSystem.B.dylib: _mach_host_self
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_vm_allocate
__ libSystem.B.dylib: _mbr_identifier_to_uuid
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memorystatus_control
__ libSystem.B.dylib: _memset_s
__ libSystem.B.dylib: _mig_deallocate
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _mkdtemp
__ libSystem.B.dylib: _mkpath_np
__ libSystem.B.dylib: _mkstemp
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _open_dprotected_np
__ libSystem.B.dylib: _opendir
__ libSystem.B.dylib: _optarg
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _os_variant_uses_ephemeral_storage
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _readdir
__ libSystem.B.dylib: _readlink
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _reallocf
__ libSystem.B.dylib: _removefile
__ libSystem.B.dylib: _removefile_state_alloc
__ libSystem.B.dylib: _removefile_state_free
__ libSystem.B.dylib: _removefile_state_get
__ libSystem.B.dylib: _removefile_state_set
__ libSystem.B.dylib: _rename
__ libSystem.B.dylib: _renamex_np
__ libSystem.B.dylib: _rindex
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _sandbox_container_path_for_audit_token
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_release
__ libSystem.B.dylib: _sandbox_set_container_path_for_audit_token
__ libSystem.B.dylib: _setiopolicy_np
__ libSystem.B.dylib: _setxattr
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _statfs
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strndup
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _strstr
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: _symlink
__ libSystem.B.dylib: _sysconf
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _umask
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _vm_page_size
__ libSystem.B.dylib: _vm_read
__ libSystem.B.dylib: _voucher_get_current_persona
__ libSystem.B.dylib: _voucher_get_current_persona_originator_info
__ libSystem.B.dylib: _voucher_get_current_persona_proximate_info
__ libSystem.B.dylib: _vproc_swap_string
__ libSystem.B.dylib: _write
__ libSystem.B.dylib: _writev
__ libSystem.B.dylib: _xpc_array_append_value
__ libSystem.B.dylib: _xpc_array_apply
__ libSystem.B.dylib: _xpc_array_create
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_get_audit_token
__ libSystem.B.dylib: _xpc_connection_get_euid
__ libSystem.B.dylib: _xpc_connection_get_pid
__ libSystem.B.dylib: _xpc_connection_is_extension
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_barrier
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_copy_description
__ libSystem.B.dylib: _xpc_data_create_with_dispatch_data
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_array
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_dictionary
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_remote_connection
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_get_uuid
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_handoff_reply
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_null_create
__ libSystem.B.dylib: _xpc_string_create
__ libSystem.B.dylib: _xpc_transaction_begin
__ libSystem.B.dylib: _xpc_transaction_end
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ libbsm.0.dylib: _audit_token_to_asid
__ libbsm.0.dylib: _audit_token_to_au32
__ libbsm.0.dylib: _audit_token_to_auid
__ libbsm.0.dylib: _audit_token_to_pid
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libsandbox.1.dylib: _sandbox_set_user_state_item_with_persona
__ libsandbox.1.dylib: _sandbox_user_state_iterate_items
__ libsqlite3.dylib: __sqlite3_db_copy_compact
__ libsqlite3.dylib: _sqlite3_bind_blob64
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_extended_errcode
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_free
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_step
MCMTestLocks : NSObject
 @property  NSObject<OS_dispatch_queue> *stateQueue
 @property  BOOL enabled

  // class methods
  +[MCMTestLocks sharedInstance]

  // instance methods
  -[MCMTestLocks releaseLock:]
  -[MCMTestLocks acquireLock:]
  -[MCMTestLocks .cxx_destruct]
  -[MCMTestLocks setEnabled:]
  -[MCMTestLocks _stateQueue_releaseLock:]
  -[MCMTestLocks _stateQueue_updateCountForLock:byCount:]
  -[MCMTestLocks _stateQueue_acquireLock:]
  -[MCMTestLocks enabled]
  -[MCMTestLocks setStateQueue:]
  -[MCMTestLocks stateQueue]
  -[MCMTestLocks releaseAllLocks]
  -[MCMTestLocks waitOnLock:]
  -[MCMTestLocks init]


MCMCommandLinkRemove : MCMCommand <MCMParametersWithLink, MCMParametersLinkRemove>
 @property  MCMResolvedLink *link
 @property  unsigned long attributes

  // class methods
  +[MCMCommandLinkRemove command]
  +[MCMCommandLinkRemove incomingMessageClass]

  // instance methods
  -[MCMCommandLinkRemove preflightClientAllowed]
  -[MCMCommandLinkRemove link]
  -[MCMCommandLinkRemove attributes]
  -[MCMCommandLinkRemove initWithMessage:context:reply:]
  -[MCMCommandLinkRemove execute]
  -[MCMCommandLinkRemove .cxx_destruct]


MCMCommandOperationDeleteItem : NSObject
 @property  <MCMMetadata> *metadata
 @property  BOOL removeCodesignInfo
 @property  NSURL *manifestURL

  // instance methods
  -[MCMCommandOperationDeleteItem .cxx_destruct]
  -[MCMCommandOperationDeleteItem metadata]
  -[MCMCommandOperationDeleteItem isEqual:]
  -[MCMCommandOperationDeleteItem manifestURL]
  -[MCMCommandOperationDeleteItem setManifestURL:]
  -[MCMCommandOperationDeleteItem initWithMetadata:removeCodesignInfo:manifestURL:]
  -[MCMCommandOperationDeleteItem removeCodesignInfo]


MCMCommandOperationDelete : MCMCommand <MCMParametersWithConcreteContainersArray, MCMParametersOperationDelete>
 @property  NSArray *containerIdentities
 @property  BOOL removeAllCodeSignInfo
 @property  MCMXPCMessageOperationDelete *message
 @property  NSMutableDictionary *referenceCounts
 @property  BOOL runFromManifests
 @property  @? onError
 @property  NSArray *concreteContainerIdentities
 @property  BOOL traverseLinks
 @property  BOOL waitForDiskSpaceReclaim

  // class methods
  +[MCMCommandOperationDelete command]
  +[MCMCommandOperationDelete _materializeContainerIdentityFromManifestAtURL:userIdentityCache:error:]
  +[MCMCommandOperationDelete commandForOperationDeleteWithContainerIdentities:removeAllCodeSignInfo:context:resultPromise:onError:]
  +[MCMCommandOperationDelete _materializeContainerIdentityFromManifestPlistV1:userIdentityCache:error:]
  +[MCMCommandOperationDelete _materializeContainerIdentityFromManifestPlist:userIdentityCache:error:]
  +[MCMCommandOperationDelete incomingMessageClass]
  +[MCMCommandOperationDelete commandForOperationDeleteFromManifestsRemoveAllCodeSignInfo:context:resultPromise:onError:]

  // instance methods
  -[MCMCommandOperationDelete preflightClientAllowed]
  -[MCMCommandOperationDelete initWithMessage:context:reply:]
  -[MCMCommandOperationDelete execute]
  -[MCMCommandOperationDelete .cxx_destruct]
  -[MCMCommandOperationDelete message]
  -[MCMCommandOperationDelete setOnError:]
  -[MCMCommandOperationDelete onError]
  -[MCMCommandOperationDelete concreteContainerIdentities]
  -[MCMCommandOperationDelete traverseLinks]
  -[MCMCommandOperationDelete waitForDiskSpaceReclaim]
  -[MCMCommandOperationDelete initWithContainerIdentities:traverseLinks:waitForDiskSpaceReclaim:removeAllCodeSignInfo:runFromManifests:context:resultPromise:onError:]
  -[MCMCommandOperationDelete _containersToDeleteRecursivelyStartingWithContainerIdentities:error:]
  -[MCMCommandOperationDelete _containerIdentitiesToDeleteTransitivelyFromMetadata:]
  -[MCMCommandOperationDelete _deleteItems:directDelete:error:]
  -[MCMCommandOperationDelete _removeLinksTargetingItems:]
  -[MCMCommandOperationDelete _replyFromRelayToDaemonWithContainerIdentities:]
  -[MCMCommandOperationDelete _preflightReferenceCountsForContainerClass:]
  -[MCMCommandOperationDelete _preflightReferenceCountAfterRemovingRefererenceToIdentifier:containerClass:]
  -[MCMCommandOperationDelete _groupContainersToDeleteWhenReconcilingRemovalOfContainer:]
  -[MCMCommandOperationDelete _setManifestURLsForItems:]
  -[MCMCommandOperationDelete _writeDeleteManifestsForItems:error:]
  -[MCMCommandOperationDelete _writeDeleteManifestForItem:error:]
  -[MCMCommandOperationDelete _urlForDeleteManifestWithContainerIdentity:]
  -[MCMCommandOperationDelete _removeDeleteManifestIfExistsForContainerIdentity:error:]
  -[MCMCommandOperationDelete _stableFileNameForDataOperationPlistWithContainerIdentity:]
  -[MCMCommandOperationDelete containerIdentities]
  -[MCMCommandOperationDelete removeAllCodeSignInfo]
  -[MCMCommandOperationDelete referenceCounts]
  -[MCMCommandOperationDelete runFromManifests]


MCMUserIdentityCache : NSObject <MCMUserIdentityCache>
 @property  BOOL cacheInvalid
 @property  NSDictionary *lock_bundleToDataSeparatedIdentitiesMap
 @property  NSDictionary *lock_personaUniqueStringToUserIdentityMap
 @property  NSDictionary *lock_personaIDToUserIdentityMap
 @property  MCMUserIdentity *lock_userIdentityForPersonalPersona
 @property  MCMUserIdentity *lock_userIdentityForUnspecificPersona
 @property  NSMutableDictionary *lock_managedPathRegistryForUserIdentity
 @property  NSMutableDictionary *lock_libraryRepairForUserIdentity
 @property  NSHashTable *observers
 @property  NSSet *previousUserIdentities
 @property  unsigned long savedGeneration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MCMUserIdentityCache personasAreSupported]
  +[MCMUserIdentityCache defaultUserIdentity]
  +[MCMUserIdentityCache globalBundleUserIdentity]
  +[MCMUserIdentityCache globalSystemUserIdentity]
  +[MCMUserIdentityCache userIdentityWithPersonaAttributes:]
  +[MCMUserIdentityCache userIdentityWithPersonaAttributes:forceUnspecific:]
  +[MCMUserIdentityCache userIdentityWithPersonaAttributes:POSIXUser:forceUnspecific:]

  // instance methods
  -[MCMUserIdentityCache addObserver:]
  -[MCMUserIdentityCache .cxx_destruct]
  -[MCMUserIdentityCache _lock_flush]
  -[MCMUserIdentityCache removeObserver:]
  -[MCMUserIdentityCache flush]
  -[MCMUserIdentityCache init]
  -[MCMUserIdentityCache observers]
  -[MCMUserIdentityCache defaultUserIdentity]
  -[MCMUserIdentityCache globalBundleUserIdentity]
  -[MCMUserIdentityCache globalSystemUserIdentity]
  -[MCMUserIdentityCache userIdentityForPersonaUniqueString:POSIXUser:]
  -[MCMUserIdentityCache userIdentityForPersonalPersonaWithPOSIXUser:]
  -[MCMUserIdentityCache _refreshFromUserManagementIfNecessary]
  -[MCMUserIdentityCache userIdentitiesForBundleIdentifier:]
  -[MCMUserIdentityCache userIdentityForCurrentUserWithPersonaUniqueString:]
  -[MCMUserIdentityCache userIdentityForClient:error:]
  -[MCMUserIdentityCache userIdentityForPersonalPersona]
  -[MCMUserIdentityCache unspecificUserIdentity]
  -[MCMUserIdentityCache userIdentityWithPersonaID:]
  -[MCMUserIdentityCache allAccessibleUserIdentities]
  -[MCMUserIdentityCache forEachAccessibleUserIdentitySynchronouslyExecuteBlock:]
  -[MCMUserIdentityCache personaUniqueStringForCurrentContext]
  -[MCMUserIdentityCache userIdentityForCurrentContext]
  -[MCMUserIdentityCache userIdentityForLegacyMobileUser]
  -[MCMUserIdentityCache flushAndRepopulateWithUserIdentities:]
  -[MCMUserIdentityCache managedUserPathRegistryForUserIdentity:]
  -[MCMUserIdentityCache libraryRepairForUserIdentity:]
  -[MCMUserIdentityCache lock_bundleToDataSeparatedIdentitiesMap]
  -[MCMUserIdentityCache lock_personaUniqueStringToUserIdentityMap]
  -[MCMUserIdentityCache lock_personaIDToUserIdentityMap]
  -[MCMUserIdentityCache lock_userIdentityForPersonalPersona]
  -[MCMUserIdentityCache lock_userIdentityForUnspecificPersona]
  -[MCMUserIdentityCache _lock_userIdentitiesForBundleIdentifier:]
  -[MCMUserIdentityCache _lock_userIdentityForCurrentUserWithPersonaUniqueString:]
  -[MCMUserIdentityCache _lock_resync]
  -[MCMUserIdentityCache _lock_flushAndRepopulateWithUserIdentities:]
  -[MCMUserIdentityCache _lock_resync_fromUserPersonaAttributes:]
  -[MCMUserIdentityCache _notifyObserversOfChangesWithUserIdentities:]
  -[MCMUserIdentityCache lock_managedPathRegistryForUserIdentity]
  -[MCMUserIdentityCache lock_libraryRepairForUserIdentity]
  -[MCMUserIdentityCache previousUserIdentities]
  -[MCMUserIdentityCache setPreviousUserIdentities:]
  -[MCMUserIdentityCache cacheInvalid]
  -[MCMUserIdentityCache setCacheInvalid:]
  -[MCMUserIdentityCache savedGeneration]
  -[MCMUserIdentityCache setSavedGeneration:]


MCMXPCMessageWithConcreteContainersArrayBase : MCMXPCMessageBase <MCMXPCMessage, MCMParametersWithConcreteContainersArray>
 @property  NSObject<OS_xpc_object> *xpcObject
 @property  ^{container_client=*I*II{?=[8I]}iBBB@} proxy
 @property  unsigned int platform
 @property  unsigned int disposition
 @property  unsigned long command
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *concreteContainerIdentities

  // instance methods
  -[MCMXPCMessageWithConcreteContainersArrayBase .cxx_destruct]
  -[MCMXPCMessageWithConcreteContainersArrayBase initWithXPCObject:context:error:]
  -[MCMXPCMessageWithConcreteContainersArrayBase concreteContainerIdentities]


MCMCommandFetchPersonaUniqueStrings : MCMCommand
  // class methods
  +[MCMCommandFetchPersonaUniqueStrings command]
  +[MCMCommandFetchPersonaUniqueStrings incomingMessageClass]

  // instance methods
  -[MCMCommandFetchPersonaUniqueStrings preflightClientAllowed]
  -[MCMCommandFetchPersonaUniqueStrings execute]


MCMXPCMessageCrashTest : MCMXPCMessageBase <MCMParametersCrashTest>
 @property  unsigned long crashCount

  // instance methods
  -[MCMXPCMessageCrashTest initWithXPCObject:context:error:]
  -[MCMXPCMessageCrashTest crashCount]


MCMClientIdentity : NSObject <MCMAllows, NSCopying>
 @property  int posixPID
 @property  MCMPOSIXUser *posixUser
 @property  BOOL sandboxed
 @property  {?=[8I]} realAuditToken
 @property  {?=[8I]} effectiveAuditToken
 @property  MCMUserIdentity *userIdentity
 @property  BOOL kernel
 @property  unsigned int platform
 @property  NSURL *sandboxContainerURL
 @property  <MCMClientCodeSignInfo> *codeSignInfo
 @property  BOOL cached

  // class methods
  +[MCMClientIdentity anonymousPrivilegedClientIdentityWithUserIdentity:]
  +[MCMClientIdentity privilegedClientIdentityWithUserIdentity:kernel:]

  // instance methods
  -[MCMClientIdentity isSandboxed]
  -[MCMClientIdentity isAllowedToAccessInfoMetadata]
  -[MCMClientIdentity isAllowedToDelete]
  -[MCMClientIdentity isAllowedToReadReferences]
  -[MCMClientIdentity initInternal]
  -[MCMClientIdentity isKernel]
  -[MCMClientIdentity platform]
  -[MCMClientIdentity .cxx_destruct]
  -[MCMClientIdentity isAllowedToLookupGroupContainersOfClass:ownedByIdentifier:]
  -[MCMClientIdentity initWithPOSIXUser:POSIXPID:platform:userIdentity:effectiveAuditToken:realAuditToken:codeSignInfo:sandboxed:sandboxContainerURL:kernel:]
  -[MCMClientIdentity isAllowedToRegenerateDirectoryUUIDs]
  -[MCMClientIdentity userIdentity]
  -[MCMClientIdentity posixUser]
  -[MCMClientIdentity isAllowedToSetDataProtection]
  -[MCMClientIdentity codeSignInfo]
  -[MCMClientIdentity isAllowedToReplaceContainers]
  -[MCMClientIdentity isAllowedToChangeReferences]
  -[MCMClientIdentity isAllowedToWipeAnyDataContainer]
  -[MCMClientIdentity issueSandboxExtensionWithMetadata:forceIssue:error:]
  -[MCMClientIdentity shortDescription]
  -[MCMClientIdentity isAllowedToStartUserDataMigration]
  -[MCMClientIdentity createLibsystemClient]
  -[MCMClientIdentity isAllowedToLookupAllContainersOfClass:]
  -[MCMClientIdentity isAllowedToRecreateContainerStructure]
  -[MCMClientIdentity copyWithZone:]
  -[MCMClientIdentity isAllowedToRestoreContainer]
  -[MCMClientIdentity sandboxContainerURL]
  -[MCMClientIdentity isAllowedToWipePlugInDataContainerWithIdentifier:]
  -[MCMClientIdentity posixPID]
  -[MCMClientIdentity cached]
  -[MCMClientIdentity realAuditToken]
  -[MCMClientIdentity needsSandboxExtensionForContainerWithClass:identifier:]
  -[MCMClientIdentity isAllowedToLookupContainerIdentity:]
  -[MCMClientIdentity isAllowedToTest]
  -[MCMClientIdentity effectiveAuditToken]
  -[MCMClientIdentity isAllowedToAccessCodesignMapping]
  -[MCMClientIdentity isAllowedToStageSharedContent]
  -[MCMClientIdentity isAllowedToControlCaches]
  -[MCMClientIdentity isAllowedToAccessUserAssets]
  -[MCMClientIdentity clientIdentityByChangingCached:]
  -[MCMClientIdentity init]
  -[MCMClientIdentity isAllowedToStartDataMigration]


MCMXPCMessageCreateOrLookupAppGroupByAppGroupIdentifier : MCMXPCMessageBase <MCMParametersCreateOrLookupAppGroupByAppGroupIdentifier>
 @property  NSString *appGroupIdentifier

  // instance methods
  -[MCMXPCMessageCreateOrLookupAppGroupByAppGroupIdentifier .cxx_destruct]
  -[MCMXPCMessageCreateOrLookupAppGroupByAppGroupIdentifier initWithXPCObject:context:error:]
  -[MCMXPCMessageCreateOrLookupAppGroupByAppGroupIdentifier appGroupIdentifier]


MCMCommandReferencesAdd : MCMCommand <MCMParametersWithOwnersAndGroups, MCMParametersReferencesQuery>
 @property  unsigned long containerClass
 @property  NSSet *ownerIdentifiers
 @property  NSSet *groupIdentifiers
 @property  unsigned long explicitFlags
 @property  unsigned int uid
 @property  unsigned long privateFlags
 @property  BOOL createDuringReconciliation
 @property  BOOL deleteDuringReconciliation
 @property  BOOL yesReallyApplyToAll
 @property  MCMUserIdentity *userIdentity

  // class methods
  +[MCMCommandReferencesAdd command]
  +[MCMCommandReferencesAdd incomingMessageClass]

  // instance methods
  -[MCMCommandReferencesAdd uid]
  -[MCMCommandReferencesAdd preflightClientAllowed]
  -[MCMCommandReferencesAdd explicitFlags]
  -[MCMCommandReferencesAdd initWithMessage:context:reply:]
  -[MCMCommandReferencesAdd execute]
  -[MCMCommandReferencesAdd .cxx_destruct]
  -[MCMCommandReferencesAdd userIdentity]
  -[MCMCommandReferencesAdd groupIdentifiers]
  -[MCMCommandReferencesAdd containerClass]
  -[MCMCommandReferencesAdd privateFlags]
  -[MCMCommandReferencesAdd ownerIdentifiers]
  -[MCMCommandReferencesAdd createDuringReconciliation]
  -[MCMCommandReferencesAdd deleteDuringReconciliation]
  -[MCMCommandReferencesAdd yesReallyApplyToAll]
  -[MCMCommandReferencesAdd _resolveUserIdentity]


MCMXPCMessageWithGroupIdentifierBase : MCMXPCMessageWithIdentifierBase <MCMXPCMessage, MCMParametersWithGroupIdentifier>
 @property  NSObject<OS_xpc_object> *xpcObject
 @property  ^{container_client=*I*II{?=[8I]}iBBB@} proxy
 @property  unsigned int platform
 @property  unsigned int disposition
 @property  unsigned long command
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *groupIdentifier

  // instance methods
  -[MCMXPCMessageWithGroupIdentifierBase groupIdentifier]
  -[MCMXPCMessageWithGroupIdentifierBase .cxx_destruct]
  -[MCMXPCMessageWithGroupIdentifierBase initWithXPCObject:context:error:]


MCMContainerIdentityMinimal : NSObject <NSCopying>
 @property  NSString *identifier
 @property  unsigned long containerClass
 @property  MCMUserIdentity *userIdentity
 @property  unsigned int platform
 @property  unsigned int disposition

  // class methods
  +[MCMContainerIdentityMinimal minimalContainerIdentityFromPlist:userIdentityCache:error:]

  // instance methods
  -[MCMContainerIdentityMinimal identifier]
  -[MCMContainerIdentityMinimal platform]
  -[MCMContainerIdentityMinimal plist]
  -[MCMContainerIdentityMinimal initWithLibsystemContainer:defaultUserIdentity:userIdentityCache:error:]
  -[MCMContainerIdentityMinimal .cxx_destruct]
  -[MCMContainerIdentityMinimal initWithPlist:userIdentityCache:error:]
  -[MCMContainerIdentityMinimal userIdentity]
  -[MCMContainerIdentityMinimal containerClass]
  -[MCMContainerIdentityMinimal copyWithZone:]
  -[MCMContainerIdentityMinimal initWithVersion1PlistDictionary:userIdentityCache:error:]
  -[MCMContainerIdentityMinimal disposition]
  -[MCMContainerIdentityMinimal isEqual:]
  -[MCMContainerIdentityMinimal init]
  -[MCMContainerIdentityMinimal initWithUserIdentity:identifier:containerClass:platform:error:]
  -[MCMContainerIdentityMinimal minimalIdentity]
  -[MCMContainerIdentityMinimal identityBySettingPlatform:]
  -[MCMContainerIdentityMinimal isEqualToContainerIdentityForLinks:]


MCMContainerIdentity : MCMContainerIdentityMinimal
 @property  BOOL transient

  // class methods
  +[MCMContainerIdentity containerIdentityWithUserIdentity:identifier:containerClass:platform:transient:error:]
  +[MCMContainerIdentity containerIdentityWithIdentifier:containerClass:platform:error:]
  +[MCMContainerIdentity containerIdentityFromPlist:userIdentityCache:error:]
  +[MCMContainerIdentity containerIdentityWithMinimalContainerIdentity:transient:]
  +[MCMContainerIdentity containerIdentityWithUserIdentity:identifier:containerClass:platform:error:]

  // instance methods
  -[MCMContainerIdentity nontransientContainerIdentity]
  -[MCMContainerIdentity plist]
  -[MCMContainerIdentity initWithLibsystemContainer:defaultUserIdentity:userIdentityCache:error:]
  -[MCMContainerIdentity transientContainerIdentity]
  -[MCMContainerIdentity containerIdentity]
  -[MCMContainerIdentity identityByChangingTransient:]
  -[MCMContainerIdentity copyWithZone:]
  -[MCMContainerIdentity initWithVersion1PlistDictionary:userIdentityCache:error:]
  -[MCMContainerIdentity initWithUserIdentity:identifier:containerClass:platform:transient:error:]
  -[MCMContainerIdentity transient]
  -[MCMContainerIdentity isEqualToContainerIdentity:]
  -[MCMContainerIdentity isEqual:]
  -[MCMContainerIdentity init]


MCMConcreteContainerIdentity : MCMContainerIdentity
 @property  NSUUID *uuid

  // class methods
  +[MCMConcreteContainerIdentity containerIdentityWithUUID:userIdentity:identifier:containerClass:platform:transient:error:]
  +[MCMConcreteContainerIdentity containerIdentityWithUUID:userIdentity:identifier:containerClass:platform:error:]
  +[MCMConcreteContainerIdentity concreteContainerIdentityFromPlist:userIdentityCache:error:]

  // instance methods
  -[MCMConcreteContainerIdentity plist]
  -[MCMConcreteContainerIdentity createLibsystemContainerWithContainerPathIdentifier:existed:error:]
  -[MCMConcreteContainerIdentity initWithLibsystemContainer:defaultUserIdentity:userIdentityCache:error:]
  -[MCMConcreteContainerIdentity containerIdentity]
  -[MCMConcreteContainerIdentity uuid]
  -[MCMConcreteContainerIdentity .cxx_destruct]
  -[MCMConcreteContainerIdentity initWithPlist:userIdentityCache:error:]
  -[MCMConcreteContainerIdentity initWithContainerIdentity:UUID:error:]
  -[MCMConcreteContainerIdentity initWithVersion1PlistDictionary:containerIdentity:error:]
  -[MCMConcreteContainerIdentity copyWithZone:]
  -[MCMConcreteContainerIdentity initWithUUID:userIdentity:identifier:containerClass:platform:transient:error:]
  -[MCMConcreteContainerIdentity isEqual:]
  -[MCMConcreteContainerIdentity init]
  -[MCMConcreteContainerIdentity isEqualToConcreteContainerIdentity:]


MCMConcreteContainerIdentityForLibsystem : MCMConcreteContainerIdentity
 @property  NSString *containerPathIdentifier
 @property  BOOL existed

  // class methods
  +[MCMConcreteContainerIdentityForLibsystem containerIdentityWithUUID:userIdentity:identifier:containerClass:platform:containerPathIdentifier:existed:transient:error:]

  // instance methods
  -[MCMConcreteContainerIdentityForLibsystem nontransientContainerIdentity]
  -[MCMConcreteContainerIdentityForLibsystem initWithUUID:userIdentity:identifier:containerClass:platform:containerPathIdentifier:existed:transient:error:]
  -[MCMConcreteContainerIdentityForLibsystem containerPathIdentifier]
  -[MCMConcreteContainerIdentityForLibsystem initWithLibsystemContainer:defaultUserIdentity:userIdentityCache:error:]
  -[MCMConcreteContainerIdentityForLibsystem transientContainerIdentity]
  -[MCMConcreteContainerIdentityForLibsystem transientConcreteContainerIdentityForLibsystem]
  -[MCMConcreteContainerIdentityForLibsystem .cxx_destruct]
  -[MCMConcreteContainerIdentityForLibsystem identityByChangingTransient:]
  -[MCMConcreteContainerIdentityForLibsystem nontransientConcreteContainerIdentityForLibsystem]
  -[MCMConcreteContainerIdentityForLibsystem copyWithZone:]
  -[MCMConcreteContainerIdentityForLibsystem existed]
  -[MCMConcreteContainerIdentityForLibsystem identityByChangingContainerPathIdentifier:]
  -[MCMConcreteContainerIdentityForLibsystem init]
  -[MCMConcreteContainerIdentityForLibsystem createLibsystemContainerWithError:]
  -[MCMConcreteContainerIdentityForLibsystem identityByChangingUUID:]


MCMXPCMessageFlushContainerCache : MCMXPCMessageWithContainerClassBase <MCMParametersFlushContainerCache>
 @property  BOOL transient
 @property  unsigned long containerClass

  // instance methods
  -[MCMXPCMessageFlushContainerCache initWithXPCObject:context:error:]
  -[MCMXPCMessageFlushContainerCache transient]


MCMCodeSignInfo : NSObject
 @property  NSDictionary *entitlements
 @property  NSString *identifier
 @property  unsigned int platform

  // instance methods
  -[MCMCodeSignInfo identifier]
  -[MCMCodeSignInfo platform]
  -[MCMCodeSignInfo initWithAuditToken:]
  -[MCMCodeSignInfo initWithURL:error:]
  -[MCMCodeSignInfo entitlements]
  -[MCMCodeSignInfo .cxx_destruct]


MCMContainerSchemaActionMkdir : MCMContainerSchemaActionBase <MCMContainerSchemaActionHasSinglePath>
  // class methods
  +[MCMContainerSchemaActionMkdir actionIdentifier]

  // instance methods
  -[MCMContainerSchemaActionMkdir .cxx_destruct]
  -[MCMContainerSchemaActionMkdir performWithError:]
  -[MCMContainerSchemaActionMkdir initWithPathArgument:context:]


MCMCommandFlushContainerCache : MCMCommand <MCMParametersFlushContainerCache>
 @property  <MCMXPCMessage> *message
 @property  BOOL transient
 @property  unsigned long containerClass

  // class methods
  +[MCMCommandFlushContainerCache command]
  +[MCMCommandFlushContainerCache incomingMessageClass]

  // instance methods
  -[MCMCommandFlushContainerCache preflightClientAllowed]
  -[MCMCommandFlushContainerCache initWithMessage:context:reply:]
  -[MCMCommandFlushContainerCache execute]
  -[MCMCommandFlushContainerCache .cxx_destruct]
  -[MCMCommandFlushContainerCache containerClass]
  -[MCMCommandFlushContainerCache transient]
  -[MCMCommandFlushContainerCache message]


MCMCommandUserManagedAssetsPath : MCMCommand <MCMParametersUserManagedAssetsPath>
 @property  BOOL relative
 @property  BOOL createIfNecessary
 @property  MCMContainerIdentity *containerIdentity

  // class methods
  +[MCMCommandUserManagedAssetsPath command]
  +[MCMCommandUserManagedAssetsPath incomingMessageClass]

  // instance methods
  -[MCMCommandUserManagedAssetsPath preflightClientAllowed]
  -[MCMCommandUserManagedAssetsPath initWithMessage:context:reply:]
  -[MCMCommandUserManagedAssetsPath containerIdentity]
  -[MCMCommandUserManagedAssetsPath execute]
  -[MCMCommandUserManagedAssetsPath .cxx_destruct]
  -[MCMCommandUserManagedAssetsPath isRelative]
  -[MCMCommandUserManagedAssetsPath createIfNecessary]


MCMXPCMessageOperationDelete : MCMXPCMessageWithConcreteContainersArrayBase <MCMParametersOperationDelete>
 @property  BOOL traverseLinks
 @property  BOOL waitForDiskSpaceReclaim

  // instance methods
  -[MCMXPCMessageOperationDelete initWithXPCObject:context:error:]
  -[MCMXPCMessageOperationDelete traverseLinks]
  -[MCMXPCMessageOperationDelete waitForDiskSpaceReclaim]


MCMClientCodeSignIndex : NSObject <NSCopying>
  // instance methods
  -[MCMClientCodeSignIndex initWithCDHash:identifier:]
  -[MCMClientCodeSignIndex .cxx_destruct]
  -[MCMClientCodeSignIndex copyWithZone:]
  -[MCMClientCodeSignIndex isEqualToClientCodeSignIndex:]
  -[MCMClientCodeSignIndex isEqual:]


MCMClientCodeSignInfoCache : NSObject <MCMClientCodeSignInfoCache>
 @property  <MCMCache> *cache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMClientCodeSignInfoCache codeSignInfoForCDHash:identifier:error:generator:]
  -[MCMClientCodeSignInfoCache cache]
  -[MCMClientCodeSignInfoCache .cxx_destruct]
  -[MCMClientCodeSignInfoCache flush]
  -[MCMClientCodeSignInfoCache init]


MCMPOSIXUser : NSObject <NSCopying>
 @property  unsigned int UID
 @property  unsigned int primaryGID
 @property  NSURL *homeDirectoryURL
 @property  NSURL *unvalidatedHomeDirectoryURL
 @property  NSString *name
 @property  BOOL root
 @property  BOOL roleUser
 @property  BOOL useableHomeDirectory

  // class methods
  +[MCMPOSIXUser _posixUserWithPasswdPtr:]
  +[MCMPOSIXUser _getCachedUID:flush:onCacheMiss:]
  +[MCMPOSIXUser _posixUserWithUID:name:useUID:]
  +[MCMPOSIXUser posixUserWithName:]
  +[MCMPOSIXUser posixUserWithUID:]
  +[MCMPOSIXUser currentPOSIXUser]
  +[MCMPOSIXUser _isRoleUserWithUID:homeDirectoryURL:]
  +[MCMPOSIXUser nobody]
  +[MCMPOSIXUser flush]
  +[MCMPOSIXUser root]

  // instance methods
  -[MCMPOSIXUser isRoot]
  -[MCMPOSIXUser homeDirectoryURL]
  -[MCMPOSIXUser fullDescription]
  -[MCMPOSIXUser .cxx_destruct]
  -[MCMPOSIXUser isRoleUser]
  -[MCMPOSIXUser isEqualToPOSIXUser:]
  -[MCMPOSIXUser UID]
  -[MCMPOSIXUser unvalidatedHomeDirectoryURL]
  -[MCMPOSIXUser primaryGID]
  -[MCMPOSIXUser initWithUID:primaryGID:homeDirectoryURL:unvalidatedHomeDirectoryURL:name:roleUser:]
  -[MCMPOSIXUser copyWithZone:]
  -[MCMPOSIXUser name]
  -[MCMPOSIXUser hasUseableHomeDirectory]
  -[MCMPOSIXUser isEqual:]


MCMClientConnection : NSObject
 @property  <MCMContext> *context

  // class methods
  +[MCMClientConnection privilegedClientConnectionWithUserIdentity:kernel:]
  +[MCMClientConnection privilegedClientConnectionWithUserIdentity:]
  +[MCMClientConnection sharedClientConnection]

  // instance methods
  -[MCMClientConnection _containerURL:isValidForContainerClass:]
  -[MCMClientConnection initWithContext:]
  -[MCMClientConnection containerManagerSetup]
  -[MCMClientConnection clientBundleIdentifier]
  -[MCMClientConnection containerManagerCleanupWithCompletion:]
  -[MCMClientConnection .cxx_destruct]
  -[MCMClientConnection _cleanupOprhanedCodeSigningMappingData]
  -[MCMClientConnection rebootContainerManagerSetup]
  -[MCMClientConnection context]
  -[MCMClientConnection _cleanupOrphanedDataForDirectories:containerClass:]
  -[MCMClientConnection _regenerateAllSystemContainerPaths]
  -[MCMClientConnection rebootContainerManagerCleanupWithCompletion:]
  -[MCMClientConnection init]


MCMXPCMessageGetPrimordialDataContainer : MCMXPCMessageBase <MCMParametersGetPrimordialDataContainer>
 @property  BOOL useCodeSignDatabase
 @property  BOOL extension

  // instance methods
  -[MCMXPCMessageGetPrimordialDataContainer isExtension]
  -[MCMXPCMessageGetPrimordialDataContainer initWithXPCObject:context:error:]
  -[MCMXPCMessageGetPrimordialDataContainer useCodeSignDatabase]


MCMFileManager : NSObject
  // class methods
  +[MCMFileManager defaultManager]

  // instance methods
  -[MCMFileManager _validateSymlink:withStartingDepth:andEndingDepth:]
  -[MCMFileManager readDataFromURL:options:error:]
  -[MCMFileManager createTemporaryDirectoryInDirectoryURL:withNamePrefix:error:]
  -[MCMFileManager setDataProtectionClassOfItemAtURL:toClass:ifPredicate:error:]
  -[MCMFileManager _CopySystemContainerACLWithNumACEs:isDir:inheritOnly:withError:]
  -[MCMFileManager moveItemIfExistsAtURL:toURL:error:]
  -[MCMFileManager itemExistsAtURL:isDirectory:]
  -[MCMFileManager _enumeratePOSIX1eACLEntriesAtURL:error:usingBlock:]
  -[MCMFileManager itemAtURL:followSymlinks:exists:isDirectory:fsNode:error:]
  -[MCMFileManager fsSanitizedStringFromString:]
  -[MCMFileManager symbolicallyLinkURL:toSymlinkTarget:error:]
  -[MCMFileManager _CopyTopLevelSystemContainerACLWithError:]
  -[MCMFileManager copyDescriptionOfURL:]
  -[MCMFileManager printDirectoryStructureAtURL:]
  -[MCMFileManager createDirectoryAtURL:withIntermediateDirectories:mode:owner:error:]
  -[MCMFileManager setTopLevelSystemContainerACLAtURL:error:]
  -[MCMFileManager checkFileSystemAtURL:supportsPerFileKeys:error:]
  -[MCMFileManager diskUsageForURL:]
  -[MCMFileManager _traverseDirectory:error:withBlock:]
  -[MCMFileManager moveItemAtURL:toURL:error:]
  -[MCMFileManager createDirectoryAtURL:withIntermediateDirectories:mode:owner:class:error:]
  -[MCMFileManager urlsForItemsInDirectoryAtURL:error:]
  -[MCMFileManager itemExistsAtURL:]
  -[MCMFileManager dataProtectionClassOfItemAtURL:class:error:]
  -[MCMFileManager fastDiskUsageForURL:]
  -[MCMFileManager standardizeACLsAtURL:isSystemContainer:error:]
  -[MCMFileManager targetOfSymbolicLinkAtURL:error:]
  -[MCMFileManager copyItemIfExistsAtURL:toURL:error:]
  -[MCMFileManager realPathForURL:isDirectory:error:]
  -[MCMFileManager dataWritingOptionsForFileAtURL:]
  -[MCMFileManager _moveItemAtURL:toURL:failIfSrcMissing:error:]
  -[MCMFileManager _copyItemAtURL:toURL:failIfSrcMissing:error:]
  -[MCMFileManager createDirectoryAtURL:withIntermediateDirectories:mode:class:error:]
  -[MCMFileManager removeItemAtURL:error:]
  -[MCMFileManager stripACLFromURL:error:]
  -[MCMFileManager fixUserPermissionsAtURL:limitToTopLevelURL:error:]
  -[MCMFileManager readDataFromURL:options:fsNode:error:]
  -[MCMFileManager itemDoesNotExistAtURL:]
  -[MCMFileManager itemAtURL:exists:error:]
  -[MCMFileManager createDirectoryAtURL:withIntermediateDirectories:mode:owner:class:fsNode:error:]
  -[MCMFileManager standardizeACLsForSystemContainerAtURL:error:]
  -[MCMFileManager itemAtURL:exists:isDirectory:error:]
  -[MCMFileManager standardizeAllSystemContainerACLsAtURL:error:]
  -[MCMFileManager writeData:toURL:options:mode:error:]
  -[MCMFileManager copyItemAtURL:toURL:error:]
  -[MCMFileManager fsNodeOfURL:followSymlinks:error:]
  -[MCMFileManager _CreateSystemUserACEInACL:withPermissions:andFlags:withError:]
  -[MCMFileManager itemAtURL:followSymlinks:exists:isDirectory:error:]
  -[MCMFileManager removeExclusionFromBackupFromURL:error:]
  -[MCMFileManager createTemporaryDirectoryInDirectoryURL:error:]
  -[MCMFileManager checkFileSystemAtURL:isCaseSensitive:canAtomicSwap:error:]
  -[MCMFileManager _realPathWhatExistsInPath:]
  -[MCMFileManager _realPathForURL:allowNonExistentPathComponents:]
  -[MCMFileManager standardizeOwnershipAtURL:toPOSIXUser:error:]
  -[MCMFileManager createDirectoryAtURL:withIntermediateDirectories:mode:error:]
  -[MCMFileManager compareVolumeForURL:versusURL:isSameVolume:error:]
  -[MCMFileManager init]
  -[MCMFileManager realPathForURL:ifChildOfURL:]


MCMCommandDeletePluginDataContainerContent : MCMCommand <MCMParametersWithContainer>
 @property  MCMContainerIdentity *containerIdentity

  // class methods
  +[MCMCommandDeletePluginDataContainerContent command]
  +[MCMCommandDeletePluginDataContainerContent incomingMessageClass]

  // instance methods
  -[MCMCommandDeletePluginDataContainerContent preflightClientAllowed]
  -[MCMCommandDeletePluginDataContainerContent initWithMessage:context:reply:]
  -[MCMCommandDeletePluginDataContainerContent containerIdentity]
  -[MCMCommandDeletePluginDataContainerContent execute]
  -[MCMCommandDeletePluginDataContainerContent .cxx_destruct]


MCMCommandCrashTest : MCMCommand <MCMParametersCrashTest>
 @property  unsigned long crashCount

  // class methods
  +[MCMCommandCrashTest command]
  +[MCMCommandCrashTest incomingMessageClass]

  // instance methods
  -[MCMCommandCrashTest preflightClientAllowed]
  -[MCMCommandCrashTest initWithMessage:context:reply:]
  -[MCMCommandCrashTest execute]
  -[MCMCommandCrashTest crashCount]


MCMCommandInvalidateCodeSigningCache : MCMCommand
  // class methods
  +[MCMCommandInvalidateCodeSigningCache command]
  +[MCMCommandInvalidateCodeSigningCache incomingMessageClass]

  // instance methods
  -[MCMCommandInvalidateCodeSigningCache preflightClientAllowed]
  -[MCMCommandInvalidateCodeSigningCache execute]


MCMEntitlementBypassList : NSObject
 @property  NSDictionary *systemEntitlementBypassList
 @property  NSDictionary *systemGroupEntitlementBypassList

  // class methods
  +[MCMEntitlementBypassList sharedBypassList]

  // instance methods
  -[MCMEntitlementBypassList _convertArraysToSetsInNestedDictionary:]
  -[MCMEntitlementBypassList setSystemGroupEntitlementBypassList:]
  -[MCMEntitlementBypassList setSystemEntitlementBypassList:]
  -[MCMEntitlementBypassList wellknownSystemContainerForId:]
  -[MCMEntitlementBypassList containerIdIsWellknown:class:]
  -[MCMEntitlementBypassList initWithSystemContainerMapping:systemGroupContainerMapping:bypassListedContainerMapping:bypassListedCodeSignIdentifierMapping:]
  -[MCMEntitlementBypassList systemContainerIdIsWellknown:]
  -[MCMEntitlementBypassList .cxx_destruct]
  -[MCMEntitlementBypassList wellknownSystemContainers]
  -[MCMEntitlementBypassList systemGroupEntitlementBypassList]
  -[MCMEntitlementBypassList wellKnownContainerIdentifiersForSandboxPushDownCompatibilitySet]
  -[MCMEntitlementBypassList wellknownSystemGroupContainers]
  -[MCMEntitlementBypassList wellknownContainerForId:class:]
  -[MCMEntitlementBypassList wellknownSystemGroupContainerForId:]
  -[MCMEntitlementBypassList isLookupAllowedToBypassEntitlementFromCodeSignIdentifier:forContainerClass:containerIdentifier:]
  -[MCMEntitlementBypassList systemEntitlementBypassList]
  -[MCMEntitlementBypassList systemGroupContainerIdIsWellknown:]


MCMError : NSObject <NSCopying>
 @property  unsigned long type
 @property  unsigned long category
 @property  NSString *path
 @property  int POSIXerrno

  // instance methods
  -[MCMError path]
  -[MCMError initWithErrorType:category:path:POSIXerrno:]
  -[MCMError fullDescription]
  -[MCMError type]
  -[MCMError initWithErrorType:category:]
  -[MCMError category]
  -[MCMError initWithLibsystemError:]
  -[MCMError .cxx_destruct]
  -[MCMError initWithNSError:url:defaultErrorType:]
  -[MCMError initWithErrorType:]
  -[MCMError copyWithZone:]
  -[MCMError libsystemError]
  -[MCMError isEqualToMCMError:]
  -[MCMError isEqual:]
  -[MCMError init]
  -[MCMError POSIXerrno]


MCMCommandReferencesRemove : MCMCommand <MCMParametersWithOwnersAndGroups, MCMParametersReferencesQuery>
 @property  unsigned long containerClass
 @property  NSSet *ownerIdentifiers
 @property  NSSet *groupIdentifiers
 @property  unsigned long explicitFlags
 @property  unsigned int uid
 @property  unsigned long privateFlags
 @property  BOOL createDuringReconciliation
 @property  BOOL deleteDuringReconciliation
 @property  BOOL yesReallyApplyToAll
 @property  MCMUserIdentity *userIdentity

  // class methods
  +[MCMCommandReferencesRemove command]
  +[MCMCommandReferencesRemove incomingMessageClass]

  // instance methods
  -[MCMCommandReferencesRemove uid]
  -[MCMCommandReferencesRemove preflightClientAllowed]
  -[MCMCommandReferencesRemove explicitFlags]
  -[MCMCommandReferencesRemove initWithMessage:context:reply:]
  -[MCMCommandReferencesRemove execute]
  -[MCMCommandReferencesRemove .cxx_destruct]
  -[MCMCommandReferencesRemove userIdentity]
  -[MCMCommandReferencesRemove groupIdentifiers]
  -[MCMCommandReferencesRemove containerClass]
  -[MCMCommandReferencesRemove privateFlags]
  -[MCMCommandReferencesRemove ownerIdentifiers]
  -[MCMCommandReferencesRemove createDuringReconciliation]
  -[MCMCommandReferencesRemove deleteDuringReconciliation]
  -[MCMCommandReferencesRemove yesReallyApplyToAll]


MCMGlobalConfiguration : NSObject
 @property  BOOL isInternalImage
 @property  NSURL *sharedContainersDirectory
 @property  NSArray *appUserDataItemNames
 @property  NSArray *excludedFromAppUserData
 @property  MCMPOSIXUser *defaultUser
 @property  MCMPOSIXUser *currentUser
 @property  unsigned int runmode
 @property  unsigned int userContainerMode
 @property  unsigned int bundleContainerMode
 @property  unsigned int systemContainerMode
 @property  MCMPOSIXUser *bundleContainerOwner
 @property  MCMPOSIXUser *systemContainerOwner
 @property  MCMContainerClassPathCache *classPathCache
 @property  MCMManagedPathRegistry *managedPathRegistry
 @property  MCMLibraryRepair *libraryRepair
 @property  BOOL kernelUpcallEnabled

  // instance methods
  -[MCMGlobalConfiguration setIsInternalImage:]
  -[MCMGlobalConfiguration systemContainerOwner]
  -[MCMGlobalConfiguration excludedFromAppUserData]
  -[MCMGlobalConfiguration appUserDataItemNames]
  -[MCMGlobalConfiguration dispositionForContainerClass:]
  -[MCMGlobalConfiguration isInternalImage]
  -[MCMGlobalConfiguration defaultUser]
  -[MCMGlobalConfiguration isGlobalContainerClass:]
  -[MCMGlobalConfiguration dispositionForContainerClass:forUser:]
  -[MCMGlobalConfiguration kernelUpcallEnabled]
  -[MCMGlobalConfiguration isPerUserBundleContainerWithContainerClass:]
  -[MCMGlobalConfiguration libraryRepair]
  -[MCMGlobalConfiguration systemContainerMode]
  -[MCMGlobalConfiguration .cxx_destruct]
  -[MCMGlobalConfiguration isUnsupportedSystemContainerWithContainerClass:]
  -[MCMGlobalConfiguration isGlobalSystemContainerWithContainerClass:]
  -[MCMGlobalConfiguration signpostFirstContainerClass:]
  -[MCMGlobalConfiguration isUnsupportedBundleContainerWithContainerClass:]
  -[MCMGlobalConfiguration sharedContainersDirectory]
  -[MCMGlobalConfiguration managedPathRegistry]
  -[MCMGlobalConfiguration isUserBundleContainerWithContainerClass:]
  -[MCMGlobalConfiguration bundleContainerOwner]
  -[MCMGlobalConfiguration runmode]
  -[MCMGlobalConfiguration bundleContainerMode]
  -[MCMGlobalConfiguration userContainerMode]
  -[MCMGlobalConfiguration initWithRunMode:userContainerMode:bundleContainerMode:bundleContainerOwner:systemContainerMode:systemContainerOwner:defaultUser:kernelUpcallEnabled:]
  -[MCMGlobalConfiguration isGlobalBundleContainerWithContainerClass:]
  -[MCMGlobalConfiguration classPathCache]
  -[MCMGlobalConfiguration currentUser]
  -[MCMGlobalConfiguration isUserSystemContainerWithContainerClass:]


MCMManagedPathRegistry : NSObject
 @property  BOOL privileged
 @property  MCMManagedPath *containermanagerLibraryIntermediate
 @property  MCMManagedPath *containermanagerCachesIntermediate
 @property  MCMPOSIXUser *daemonUser
 @property  NSSet *paths
 @property  MCMManagedPath *home
 @property  MCMManagedPath *library
 @property  MCMManagedPath *containermanagerLibrary
 @property  MCMManagedPath *containermanagerPendingUpdates
 @property  MCMManagedPath *containermanagerReplaceOperations
 @property  MCMManagedPath *containermanagerDeleteOperations
 @property  MCMManagedPath *caches
 @property  MCMManagedPath *containermanagerCaches
 @property  MCMManagedPath *containermanagerDeathrow
 @property  MCMManagedPath *logs
 @property  MCMManagedPath *containermanagerLogs

  // instance methods
  -[MCMManagedPathRegistry paths]
  -[MCMManagedPathRegistry logs]
  -[MCMManagedPathRegistry home]
  -[MCMManagedPathRegistry managedPathForURL:]
  -[MCMManagedPathRegistry initWithDaemonUser:privileged:]
  -[MCMManagedPathRegistry library]
  -[MCMManagedPathRegistry containermanagerPendingUpdates]
  -[MCMManagedPathRegistry containermanagerCachesIntermediate]
  -[MCMManagedPathRegistry .cxx_destruct]
  -[MCMManagedPathRegistry containermanagerDeathrow]
  -[MCMManagedPathRegistry containermanagerReplaceOperations]
  -[MCMManagedPathRegistry containermanagerLibraryIntermediate]
  -[MCMManagedPathRegistry orderedPathsFromPaths:]
  -[MCMManagedPathRegistry containermanagerLogs]
  -[MCMManagedPathRegistry containermanagerLibrary]
  -[MCMManagedPathRegistry daemonUser]
  -[MCMManagedPathRegistry containermanagerCaches]
  -[MCMManagedPathRegistry _addPaths:]
  -[MCMManagedPathRegistry caches]
  -[MCMManagedPathRegistry privileged]
  -[MCMManagedPathRegistry containermanagerDeleteOperations]
  -[MCMManagedPathRegistry _initPathPropertiesWithDaemonUser:]


MCMManagedUserPathRegistry : MCMManagedPathRegistry
 @property  MCMUserIdentity *userIdentity
 @property  MCMManagedPath *userHome
 @property  MCMManagedPath *userLibrary
 @property  MCMManagedPath *containermanagerUserLibrary
 @property  MCMManagedPath *containermanagerUserPendingUpdates
 @property  MCMManagedPath *containermanagerUserReplaceOperations
 @property  MCMManagedPath *containermanagerUserDeleteOperations

  // instance methods
  -[MCMManagedUserPathRegistry containermanagerUserDeleteOperations]
  -[MCMManagedUserPathRegistry .cxx_destruct]
  -[MCMManagedUserPathRegistry userIdentity]
  -[MCMManagedUserPathRegistry containermanagerUserPendingUpdates]
  -[MCMManagedUserPathRegistry userHome]
  -[MCMManagedUserPathRegistry userLibrary]
  -[MCMManagedUserPathRegistry containermanagerUserReplaceOperations]
  -[MCMManagedUserPathRegistry containermanagerUserLibrary]
  -[MCMManagedUserPathRegistry _initPathPropertiesWithUserHomeDirectoryURL:clientUser:]
  -[MCMManagedUserPathRegistry initWithUserIdentity:daemonUser:]


MCMXPCMessageLinkExists : MCMXPCMessageBase <MCMParametersLinkExists>
 @property  MCMContainerIdentity *containerAIdentity
 @property  MCMContainerIdentity *containerBIdentity
 @property  unsigned long attributes

  // instance methods
  -[MCMXPCMessageLinkExists attributes]
  -[MCMXPCMessageLinkExists .cxx_destruct]
  -[MCMXPCMessageLinkExists initWithXPCObject:context:error:]
  -[MCMXPCMessageLinkExists disposition]
  -[MCMXPCMessageLinkExists containerAIdentity]
  -[MCMXPCMessageLinkExists containerBIdentity]


MCMFSNode : NSObject <NSCopying>
 @property  unsigned long inode
 @property  int device
 @property  long long ctime

  // instance methods
  -[MCMFSNode ctime]
  -[MCMFSNode initWithINode:device:ctime:]
  -[MCMFSNode device]
  -[MCMFSNode copyWithZone:]
  -[MCMFSNode isEqualToFSNode:]
  -[MCMFSNode inode]
  -[MCMFSNode isEqual:]
  -[MCMFSNode initWithStat:]


MCMXPCMessageRepairUserData : MCMXPCMessageBase <MCMParametersRepairUserData>
 @property  NSURL *url
 @property  char * sandboxToken

  // instance methods
  -[MCMXPCMessageRepairUserData sandboxToken]
  -[MCMXPCMessageRepairUserData dealloc]
  -[MCMXPCMessageRepairUserData .cxx_destruct]
  -[MCMXPCMessageRepairUserData url]
  -[MCMXPCMessageRepairUserData initWithXPCObject:context:error:]
  -[MCMXPCMessageRepairUserData disposition]


MCMResultPromise : NSObject <MCMResultPromise>
 @property  @? completion
 @property  <MCMResult> *result
 @property  BOOL complete
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMResultPromise completion]
  -[MCMResultPromise completeWithResult:]
  -[MCMResultPromise complete]
  -[MCMResultPromise .cxx_destruct]
  -[MCMResultPromise result]
  -[MCMResultPromise initWithCompletion:]
  -[MCMResultPromise init]


MCMResultBase : NSObject <MCMResult_XPC, MCMResult>
 @property  MCMError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMResultBase error]
  -[MCMResultBase .cxx_destruct]
  -[MCMResultBase initWithError:]
  -[MCMResultBase encodeResultOntoReply:]
  -[MCMResultBase init]


MCMCommandUserDataMigration : MCMCommand
  // class methods
  +[MCMCommandUserDataMigration command]
  +[MCMCommandUserDataMigration incomingMessageClass]

  // instance methods
  -[MCMCommandUserDataMigration preflightClientAllowed]
  -[MCMCommandUserDataMigration execute]
  -[MCMCommandUserDataMigration _setDataProtectionIfNecessaryOnContainer:]
  -[MCMCommandUserDataMigration _intendedDataProtectionClassBasedOnEntitlementsForIdentifier:]
  -[MCMCommandUserDataMigration _bundleContainerExistsForDataContainer:error:]


MCMCommandDeleteContainerContent : MCMCommand <MCMParametersWithContainer>
 @property  MCMContainerIdentity *containerIdentity

  // class methods
  +[MCMCommandDeleteContainerContent command]
  +[MCMCommandDeleteContainerContent incomingMessageClass]

  // instance methods
  -[MCMCommandDeleteContainerContent preflightClientAllowed]
  -[MCMCommandDeleteContainerContent initWithMessage:context:reply:]
  -[MCMCommandDeleteContainerContent containerIdentity]
  -[MCMCommandDeleteContainerContent execute]
  -[MCMCommandDeleteContainerContent .cxx_destruct]
  -[MCMCommandDeleteContainerContent initWithContainerIdentity:context:resultPromise:]


MCMContainerSchemaActionUnlink : MCMContainerSchemaActionBase <MCMContainerSchemaActionHasSinglePath>
  // class methods
  +[MCMContainerSchemaActionUnlink actionIdentifier]

  // instance methods
  -[MCMContainerSchemaActionUnlink .cxx_destruct]
  -[MCMContainerSchemaActionUnlink performWithError:]
  -[MCMContainerSchemaActionUnlink initWithPathArgument:context:]


MCMUserIdentitySharedCache : MCMUserIdentityCache
  // class methods
  +[MCMUserIdentitySharedCache sharedInstance]


MCMContext : NSObject <MCMContext>
 @property  MCMClientIdentity *clientIdentity
 @property  <MCMContainerCache> *containerCache
 @property  <MCMContainerFactory> *containerFactory
 @property  MCMUserIdentityCache *userIdentityCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MCMContext privileged]
  +[MCMContext privilegedWithUserIdentity:userIdentityCache:]

  // instance methods
  -[MCMContext containerCache]
  -[MCMContext clientIdentity]
  -[MCMContext .cxx_destruct]
  -[MCMContext userIdentityCache]
  -[MCMContext initWithClientIdentity:containerCache:containerFactory:userIdentityCache:]
  -[MCMContext containerFactory]


MCMXPCMessageWithKeyBase : MCMXPCMessageWithConcreteContainerBase <MCMXPCMessage, MCMParametersWithKey>
 @property  NSObject<OS_xpc_object> *xpcObject
 @property  ^{container_client=*I*II{?=[8I]}iBBB@} proxy
 @property  unsigned int platform
 @property  unsigned int disposition
 @property  unsigned long command
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *key
 @property  MCMConcreteContainerIdentity *concreteContainerIdentity

  // instance methods
  -[MCMXPCMessageWithKeyBase .cxx_destruct]
  -[MCMXPCMessageWithKeyBase key]
  -[MCMXPCMessageWithKeyBase initWithXPCObject:context:error:]


MCMContainerClassCache : NSObject <MCMContainerCacheUpdatable, MCMContainerClassCache>
 @property  NSMutableDictionary *lock_cache
 @property  NSObject<OS_dispatch_queue> *fsScanQueue
 @property  BOOL writeThroughEnabled
 @property  unsigned long containerClass
 @property  Class cacheEntryClass
 @property  MCMUserIdentityCache *userIdentityCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *targetDiskScanUUID
 @property  NSUUID *lastCompletedDiskScanUUID
 @property  MCMContainerClassPath *containerClassPath
 @property  @? concurrentWriteThroughHandler
 @property  BOOL resyncRequired

  // instance methods
  -[MCMContainerClassCache _concurrent_slowGenerateCacheEntryWithFD:URL:containerPath:]
  -[MCMContainerClassCache cacheEntryClass]
  -[MCMContainerClassCache containerClassPath]
  -[MCMContainerClassCache initWithContainerClassPath:cacheEntryClass:targetQueue:userIdentityCache:]
  -[MCMContainerClassCache lock_cache]
  -[MCMContainerClassCache _concurrent_processURL:handler:]
  -[MCMContainerClassCache setConcurrentWriteThroughHandler:]
  -[MCMContainerClassCache resyncRequired]
  -[MCMContainerClassCache enumerateCacheEntriesWithEnumerator:]
  -[MCMContainerClassCache setCacheEntry:forIdentifier:]
  -[MCMContainerClassCache targetDiskScanUUID]
  -[MCMContainerClassCache cacheEntryForIdentifier:]
  -[MCMContainerClassCache .cxx_destruct]
  -[MCMContainerClassCache userIdentityCache]
  -[MCMContainerClassCache asyncStartSynchronization]
  -[MCMContainerClassCache forceWriteThrough]
  -[MCMContainerClassCache _processURLs:handler:]
  -[MCMContainerClassCache containerClass]
  -[MCMContainerClassCache setResyncRequired:]
  -[MCMContainerClassCache setLastCompletedDiskScanUUID:]
  -[MCMContainerClassCache concurrentWriteThroughHandler]
  -[MCMContainerClassCache setCacheEntry:forIdentifier:writeThrough:]
  -[MCMContainerClassCache _concurrent_processCorruptEntry:handler:]
  -[MCMContainerClassCache _setEntry:forIdentifier:writeThrough:]
  -[MCMContainerClassCache _queue_syncWithDisk]
  -[MCMContainerClassCache writeThroughEnabled]
  -[MCMContainerClassCache _concurrent_generateCacheEntryWithURL:identifier:containerPath:schemaVersion:uuid:metadata:]
  -[MCMContainerClassCache lastCompletedDiskScanUUID]
  -[MCMContainerClassCache waitForSynchronizationToComplete]
  -[MCMContainerClassCache _processCorruptEntries:handler:]
  -[MCMContainerClassCache setWriteThroughEnabled:]
  -[MCMContainerClassCache setTargetDiskScanUUID:]
  -[MCMContainerClassCache flush]
  -[MCMContainerClassCache fsScanQueue]
  -[MCMContainerClassCache _checkExistanceOfCacheEntry:libraryRepair:]


MCMMetadataMinimal : NSObject <MCMMetadataMinimal>
 @property  MCMUserIdentityCache *userIdentityCache
 @property  MCMContainerPath *containerPath
 @property  NSNumber *schemaVersion
 @property  MCMConcreteContainerIdentityForLibsystem *containerIdentity
 @property  unsigned long containerClass
 @property  NSString *identifier
 @property  NSUUID *uuid
 @property  BOOL transient
 @property  MCMUserIdentity *userIdentity
 @property  BOOL existed
 @property  unsigned int platform
 @property  NSString *shortDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMMetadataMinimal identifier]
  -[MCMMetadataMinimal metadataByChangingContainerPath:]
  -[MCMMetadataMinimal containerPath]
  -[MCMMetadataMinimal platform]
  -[MCMMetadataMinimal initByReadingAndValidatingMetadataAtContainerPath:userIdentity:containerClass:userIdentityCache:error:]
  -[MCMMetadataMinimal _initFromMetadataInDictionary:containerPath:userIdentity:containerClass:fsNode:fileURL:userIdentityCache:error:]
  -[MCMMetadataMinimal schemaVersion]
  -[MCMMetadataMinimal _persisted]
  -[MCMMetadataMinimal containerIdentity]
  -[MCMMetadataMinimal uuid]
  -[MCMMetadataMinimal .cxx_destruct]
  -[MCMMetadataMinimal initByReadingAndValidatingMetadataAtFileURL:containerPath:userIdentity:containerClass:userIdentityCache:error:]
  -[MCMMetadataMinimal userIdentityCache]
  -[MCMMetadataMinimal userIdentity]
  -[MCMMetadataMinimal metadataByChangingSchemaVersion:]
  -[MCMMetadataMinimal containerClass]
  -[MCMMetadataMinimal _clearPersistedStatus]
  -[MCMMetadataMinimal shortDescription]
  -[MCMMetadataMinimal copyWithZone:]
  -[MCMMetadataMinimal initWithContainerIdentity:containerPath:schemaVersion:userIdentityCache:]
  -[MCMMetadataMinimal existed]
  -[MCMMetadataMinimal metadataBySettingTransient:]
  -[MCMMetadataMinimal transient]
  -[MCMMetadataMinimal createLibsystemContainerWithError:]
  -[MCMMetadataMinimal metadataByChangingUUID:]


MCMMetadata : MCMMetadataMinimal <MCMMetadata>
 @property  NSDictionary *identityLinkMap
 @property  NSURL *fileURL
 @property  NSString *userManagedAssetsDirName
 @property  NSDictionary *info
 @property  int dataProtectionClass
 @property  MCMFSNode *fsNode
 @property  NSArray *links
 @property  MCMContainerPath *containerPath
 @property  NSNumber *schemaVersion
 @property  MCMConcreteContainerIdentityForLibsystem *containerIdentity
 @property  unsigned long containerClass
 @property  NSString *identifier
 @property  NSUUID *uuid
 @property  BOOL transient
 @property  MCMUserIdentity *userIdentity
 @property  BOOL existed
 @property  unsigned int platform
 @property  NSString *shortDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMMetadata fileURL]
  -[MCMMetadata _initFromMetadataInDictionary:containerPath:userIdentity:containerClass:fsNode:fileURL:userIdentityCache:error:]
  -[MCMMetadata fsNode]
  -[MCMMetadata _persisted]
  -[MCMMetadata .cxx_destruct]
  -[MCMMetadata initByReadingAndValidatingMetadataAtFileURL:containerPath:userIdentity:containerClass:userIdentityCache:error:]
  -[MCMMetadata _writeFileURL:dictionary:options:error:]
  -[MCMMetadata initWithContainerIdentity:info:containerPath:userManagedAssetsDirName:schemaVersion:dataProtectionClass:fsNode:links:userIdentityCache:]
  -[MCMMetadata _clearPersistedStatus]
  -[MCMMetadata initWithContainerIdentity:info:containerPath:userManagedAssetsDirName:schemaVersion:dataProtectionClass:userIdentityCache:]
  -[MCMMetadata linkForContainerIdentity:]
  -[MCMMetadata metadataByChangingDataProtectionClass:]
  -[MCMMetadata shortDescription]
  -[MCMMetadata _initIdentityMap]
  -[MCMMetadata metadataByRemovingLink:attributes:updatedLink:error:]
  -[MCMMetadata copyWithZone:]
  -[MCMMetadata info]
  -[MCMMetadata metadataByReplacingLinks:]
  -[MCMMetadata metadataBySettingInfoValue:forKey:]
  -[MCMMetadata initWithContainerIdentity:containerPath:schemaVersion:userIdentityCache:]
  -[MCMMetadata dataProtectionClass]
  -[MCMMetadata metadataBySettingUserManagedAssetsDirName:]
  -[MCMMetadata links]
  -[MCMMetadata identityLinkMap]
  -[MCMMetadata userManagedAssetsDirName]
  -[MCMMetadata verifyWithError:]
  -[MCMMetadata writeMetadataToDiskWithError:]
  -[MCMMetadata createLibsystemContainerWithError:]
  -[MCMMetadata writeMetadataToFileURL:options:error:]
  -[MCMMetadata metadataByAddingLink:updatedLink:error:]


MCMContainerClassPathCache : NSObject <MCMUserIdentityCacheObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMContainerClassPathCache userIdentityCache:didInvalidateUserIdentity:]
  -[MCMContainerClassPathCache _lock_containerClassPathForUserIdentity:containerClass:typeClass:]
  -[MCMContainerClassPathCache containerClassPathWithURL:reference:]
  -[MCMContainerClassPathCache .cxx_destruct]
  -[MCMContainerClassPathCache userIdentityCache:didAddUserIdentity:]
  -[MCMContainerClassPathCache _lock_flush]
  -[MCMContainerClassPathCache containerClassPathForContainerIdentity:typeClass:]
  -[MCMContainerClassPathCache containerClassPathForUserIdentity:containerClass:typeClass:]
  -[MCMContainerClassPathCache referenceForPOSIXUser:]
  -[MCMContainerClassPathCache flush]
  -[MCMContainerClassPathCache init]


MCMCommandStageSharedContent : MCMCommand <MCMParametersStageSharedContent>
 @property  NSString *sourceRelativePath
 @property  NSString *destinationRelativePath
 @property  NSString *identifier

  // class methods
  +[MCMCommandStageSharedContent command]
  +[MCMCommandStageSharedContent incomingMessageClass]

  // instance methods
  -[MCMCommandStageSharedContent preflightClientAllowed]
  -[MCMCommandStageSharedContent identifier]
  -[MCMCommandStageSharedContent initWithMessage:context:reply:]
  -[MCMCommandStageSharedContent execute]
  -[MCMCommandStageSharedContent .cxx_destruct]
  -[MCMCommandStageSharedContent sourceRelativePath]
  -[MCMCommandStageSharedContent destinationRelativePath]


MCMXPCMessageWithOwnersAndGroupsBase : MCMXPCMessageBase <MCMXPCMessage, MCMParametersWithOwnersAndGroups>
 @property  NSObject<OS_xpc_object> *xpcObject
 @property  ^{container_client=*I*II{?=[8I]}iBBB@} proxy
 @property  unsigned int platform
 @property  unsigned int disposition
 @property  unsigned long command
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long containerClass
 @property  NSSet *ownerIdentifiers
 @property  NSSet *groupIdentifiers

  // instance methods
  -[MCMXPCMessageWithOwnersAndGroupsBase .cxx_destruct]
  -[MCMXPCMessageWithOwnersAndGroupsBase groupIdentifiers]
  -[MCMXPCMessageWithOwnersAndGroupsBase containerClass]
  -[MCMXPCMessageWithOwnersAndGroupsBase initWithXPCObject:context:error:]
  -[MCMXPCMessageWithOwnersAndGroupsBase ownerIdentifiers]


MCMResultQuery : MCMResultBase
 @property  NSArray *containers
 @property  NSArray *resolvedLinks
 @property  BOOL includePath
 @property  BOOL includeInfo
 @property  BOOL issueSandboxExtensions
 @property  MCMClientIdentity *clientIdentity
 @property  BOOL legacyPersonaPolicy
 @property  BOOL legacyExtensionPolicy

  // instance methods
  -[MCMResultQuery containers]
  -[MCMResultQuery resolvedLinks]
  -[MCMResultQuery issueSandboxExtensions]
  -[MCMResultQuery clientIdentity]
  -[MCMResultQuery legacyPersonaPolicy]
  -[MCMResultQuery .cxx_destruct]
  -[MCMResultQuery initWithContainers:clientIdentity:issueSandboxExtensions:resolvedLinks:includePath:includeInfo:legacyPersonaPolicy:legacyExtensionPolicy:]
  -[MCMResultQuery includeInfo]
  -[MCMResultQuery legacyExtensionPolicy]
  -[MCMResultQuery encodeResultOntoReply:]
  -[MCMResultQuery _compileContainerDataForIndex:container:infos:tokens:]
  -[MCMResultQuery includePath]


MCMUserIdentity : NSObject <NSCopying>
 @property  NSString *identifier
 @property  id plist
 @property  MCMPOSIXUser *posixUser
 @property  BOOL dataSeparated
 @property  BOOL noSpecificPersona
 @property  NSString *personaUniqueString
 @property  NSString *shortDescription
 @property  NSURL *homeDirectoryURL
 @property  BOOL homeDirectoryExists
 @property  int personaType
 @property  unsigned int kernelPersonaID
 @property  long long extensionHandle

  // class methods
  +[MCMUserIdentity _identifierForPOSIXUID:personaUniqueString:personaType:]
  +[MCMUserIdentity userIdentityWithPlist:cache:error:]
  +[MCMUserIdentity isUserIdentityRequiredForContainerClass:]

  // instance methods
  -[MCMUserIdentity homeDirectoryURL]
  -[MCMUserIdentity identifier]
  -[MCMUserIdentity kernelPersonaID]
  -[MCMUserIdentity plist]
  -[MCMUserIdentity dealloc]
  -[MCMUserIdentity initWithVersion2PlistDictionary:cache:error:]
  -[MCMUserIdentity .cxx_destruct]
  -[MCMUserIdentity _descriptionForPersonaType:]
  -[MCMUserIdentity setExtensionHandle:]
  -[MCMUserIdentity posixUser]
  -[MCMUserIdentity isNoSpecificPersona]
  -[MCMUserIdentity shortDescription]
  -[MCMUserIdentity isEqualToUserIdentity:]
  -[MCMUserIdentity copyWithZone:]
  -[MCMUserIdentity userIdentityWithPOSIXUser:]
  -[MCMUserIdentity personaUniqueString]
  -[MCMUserIdentity extensionHandle]
  -[MCMUserIdentity initWithPOSIXUser:homeDirectoryURL:personaUniqueString:personaType:kernelPersonaID:]
  -[MCMUserIdentity personaType]
  -[MCMUserIdentity initWithVersion1PlistDictionary:cache:error:]
  -[MCMUserIdentity isStrictlyEqualToUserIdentity:]
  -[MCMUserIdentity isDataSeparated]
  -[MCMUserIdentity isEqual:]
  -[MCMUserIdentity init]
  -[MCMUserIdentity homeDirectoryExists]
  -[MCMUserIdentity initWithPlist:cache:error:]


MCMCommandOperationReclaimDiskSpace : MCMCommand
 @property  <MCMXPCMessage> *message
 @property  <MCMReply> *handoffReply
 @property  BOOL asynchronously

  // class methods
  +[MCMCommandOperationReclaimDiskSpace command]
  +[MCMCommandOperationReclaimDiskSpace incomingMessageClass]

  // instance methods
  -[MCMCommandOperationReclaimDiskSpace preflightClientAllowed]
  -[MCMCommandOperationReclaimDiskSpace handoffReply]
  -[MCMCommandOperationReclaimDiskSpace initWithMessage:context:reply:]
  -[MCMCommandOperationReclaimDiskSpace initWithAsynchronously:context:resultPromise:]
  -[MCMCommandOperationReclaimDiskSpace execute]
  -[MCMCommandOperationReclaimDiskSpace .cxx_destruct]
  -[MCMCommandOperationReclaimDiskSpace _deleteContainersOnDeathRowWithCompletion:]
  -[MCMCommandOperationReclaimDiskSpace initWithMessage:context:reply:asyncResultPromise:]
  -[MCMCommandOperationReclaimDiskSpace asynchronously]
  -[MCMCommandOperationReclaimDiskSpace _removeItemOrMoveToTempAtURL:error:]
  -[MCMCommandOperationReclaimDiskSpace message]
  -[MCMCommandOperationReclaimDiskSpace initWithAsynchronously:context:resultPromise:handoffForReply:]


MCMClientFactory : NSObject <MCMClientFactoryWithXPC, MCMClientFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  MCMUserIdentityCache *userIdentityCache
 @property  <MCMClientCodeSignInfoCache> *clientCodeSignInfoCache
 @property  <MCMClientIdentityCache> *clientIdentityCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMClientFactory .cxx_destruct]
  -[MCMClientFactory clientIdentityWithClientConnectionContext:clientMessageContext:xpcMessage:error:]
  -[MCMClientFactory clientIdentityCache]
  -[MCMClientFactory userIdentityCache]
  -[MCMClientFactory initWithUserIdentityCache:clientCodeSignInfoCache:clientIdentityCache:]
  -[MCMClientFactory _codeSignInfoWithClient:CDHash:identifier:error:]
  -[MCMClientFactory _clientIdentityWithClient:realAuditToken:error:]
  -[MCMClientFactory _clientIdentityWithClientConnectionContext:error:]
  -[MCMClientFactory clientCodeSignInfoCache]


MCMXPCMessageStageSharedContent : MCMXPCMessageWithIdentifierBase <MCMParametersStageSharedContent>
 @property  NSString *sourceRelativePath
 @property  NSString *destinationRelativePath
 @property  NSString *identifier

  // instance methods
  -[MCMXPCMessageStageSharedContent .cxx_destruct]
  -[MCMXPCMessageStageSharedContent initWithXPCObject:context:error:]
  -[MCMXPCMessageStageSharedContent disposition]
  -[MCMXPCMessageStageSharedContent sourceRelativePath]
  -[MCMXPCMessageStageSharedContent destinationRelativePath]


MCMChildParentMapCache : NSObject <MCMSQLiteDBCodeSigningPeerageDelegate, MCMChildParentMapCache>
 @property  MCMSQLiteDB *db
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableDictionary *cache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMChildParentMapCache childBundleIdentifiersForParentIdentifier:]
  -[MCMChildParentMapCache db]
  -[MCMChildParentMapCache codeSigningDB:removeParentIdentifier:]
  -[MCMChildParentMapCache cache]
  -[MCMChildParentMapCache codeSigningDB:addChildIdentifier:forParentIdentifier:]
  -[MCMChildParentMapCache .cxx_destruct]
  -[MCMChildParentMapCache queue]
  -[MCMChildParentMapCache initWithDB:queue:]
  -[MCMChildParentMapCache parentIdentifierForChildIdentifier:]


MCMCodeSigningMapping : NSObject
 @property  MCMSQLiteDB *codeSigningMappingDB
 @property  MCMUserIdentityCache *userIdentityCache
 @property  <MCMManagedPath> *library
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <MCMChildParentMapCache> *childParentMapCache

  // class methods
  +[MCMCodeSigningMapping codeSignMappingWithError:]
  +[MCMCodeSigningMapping _moveDBIfNeededFromURL:error:]

  // instance methods
  -[MCMCodeSigningMapping identifierHasSystemContainer:]
  -[MCMCodeSigningMapping _onQueue_codeSigningEntryForIdentifier:withError:]
  -[MCMCodeSigningMapping _onQueue_copyReferenceCountSetForContainerClass:]
  -[MCMCodeSigningMapping _onQueue_removeReferenceForGroupIdentifiers:containerClass:]
  -[MCMCodeSigningMapping copyReferenceCountSetForContainerClass:]
  -[MCMCodeSigningMapping codeSigningEntryForIdentifier:withError:]
  -[MCMCodeSigningMapping dataContainerTypeForIdentifier:]
  -[MCMCodeSigningMapping library]
  -[MCMCodeSigningMapping identifiersWithError:]
  -[MCMCodeSigningMapping removeCodeSigningDictionaryForIdentifier:]
  -[MCMCodeSigningMapping _onQueue_removeAllAdvanceCopiesWithError:]
  -[MCMCodeSigningMapping setCodeSigningMappingDB:]
  -[MCMCodeSigningMapping _entitlementsFromCodeSigningEntry:]
  -[MCMCodeSigningMapping _onQueue_handleChangeFromOldGroupContainerIds:toNewGroupContainerIds:containerClass:reconcileHandler:]
  -[MCMCodeSigningMapping invalidateCodeSigningInfoForAppsWithoutDataContainer]
  -[MCMCodeSigningMapping enumerateOwnersAndGroupsWithGroupClass:error:block:]
  -[MCMCodeSigningMapping _onqueue_enumerateOwnersAndGroupsWithGroupClass:error:block:]
  -[MCMCodeSigningMapping childParentMapCache]
  -[MCMCodeSigningMapping _onQueue_identifiersWithError:]
  -[MCMCodeSigningMapping getCodeSigningInfoForIdentifier:]
  -[MCMCodeSigningMapping _onQueue_processCodeSigningInfo:identifier:options:oldEntitlements:error:reconcileHandler:]
  -[MCMCodeSigningMapping _onQueue_iterateGroupIdsWithKey:fallBackKey:forAllIdentifiersUsingBlock:]
  -[MCMCodeSigningMapping _onQueue_entitlementsForIdentifier:]
  -[MCMCodeSigningMapping performAllCodeSigningMigrationAndReconciliationWithContext:]
  -[MCMCodeSigningMapping .cxx_destruct]
  -[MCMCodeSigningMapping codeSigningMappingDB]
  -[MCMCodeSigningMapping initWithUserIdentityCache:queue:mappingDB:childParentMapCache:library:]
  -[MCMCodeSigningMapping _onQueue_addGroupIdentifier:forIdentifier:containerClass:error:reconcileHandler:]
  -[MCMCodeSigningMapping _onQueue_removeGroupIdentifier:forIdentifier:containerClass:error:reconcileHandler:]
  -[MCMCodeSigningMapping userIdentityCache]
  -[MCMCodeSigningMapping removeGroupIdentifier:forIdentifier:containerClass:error:reconcileHandler:]
  -[MCMCodeSigningMapping _onQueue_migrateCachedCodeSigningInfoFromBundleContainerToMappingWithInfo:identifier:containerClass:]
  -[MCMCodeSigningMapping _onQueue_setCodeSigningDictionaryValues:forIdentifiers:]
  -[MCMCodeSigningMapping _onQueue_migrateFromMappingFileToDBIfNecessary]
  -[MCMCodeSigningMapping _onQueue_reconcileSystemContainersWithContext:]
  -[MCMCodeSigningMapping registerKernelProvidedReferencesForIdentifier:withAppGroupContainers:systemGroupContainers:error:]
  -[MCMCodeSigningMapping addGroupIdentifier:forIdentifier:containerClass:error:reconcileHandler:]
  -[MCMCodeSigningMapping _onQueue_invalidateCodeSigningInfoForIdentifierAndItsChildren:]
  -[MCMCodeSigningMapping removeAllAdvanceCopiesWithError:]
  -[MCMCodeSigningMapping invalidateCodeSigningInfoForIdentifier:withError:]
  -[MCMCodeSigningMapping _onQueue_dataContainerTypeForIdentifier:]
  -[MCMCodeSigningMapping invalidateCodeSigningInfoForIdentifierAndItsChildren:withError:]
  -[MCMCodeSigningMapping _codeSigningInfoForCodeSigningEntry:externalRequest:]
  -[MCMCodeSigningMapping identifierHasCallerRegisteredEntitlements:]
  -[MCMCodeSigningMapping queue]
  -[MCMCodeSigningMapping _onQueue_registerKernelProvidedReferencesForIdentifier:withAppGroupContainers:systemGroupContainers:error:]
  -[MCMCodeSigningMapping migrateAppGroupIdsFromDataContainersToFile]
  -[MCMCodeSigningMapping _readCodeSigningMappingFromDiskAtURL:]
  -[MCMCodeSigningMapping _onQueue_migrateCachedCodeSigningInfoFromBundleContainersToMappingWithContainersLegacy:containerClass:]
  -[MCMCodeSigningMapping _onQueue_identifierHasCallerRegisteredEntitlements:]
  -[MCMCodeSigningMapping entitlementsForIdentifier:]
  -[MCMCodeSigningMapping groupContainerIdentifiersAssociatedWithIdentifier:containerClass:]
  -[MCMCodeSigningMapping processCallerRegisteredEntitlements:identifier:error:]
  -[MCMCodeSigningMapping _onQueue_codeSigningInfoForIdentifier:externalRequest:]
  -[MCMCodeSigningMapping _onQueue_migrateAppGroupIdsFromDataContainersToFileUsingContainers:]
  -[MCMCodeSigningMapping appGroupIdentifiersForIdentifier:]
  -[MCMCodeSigningMapping processCodeSigningInfo:identifier:options:error:]
  -[MCMCodeSigningMapping migrateCachedCodeSigningInfoFromBundleContainersToMapping]
  -[MCMCodeSigningMapping _onQueue_invalidateCodeSigningInfoForIdentifier:error:]
  -[MCMCodeSigningMapping systemGroupIdentifiersForIdentifier:]
  -[MCMCodeSigningMapping _onQueue_migrateDataFromLegacyEntitlementsFileToCodeSigningFile]


MCMContainerSchemaActionCopy : MCMContainerSchemaActionBase <MCMContainerSchemaActionHasSourceAndDestination>
  // class methods
  +[MCMContainerSchemaActionCopy actionIdentifier]

  // instance methods
  -[MCMContainerSchemaActionCopy .cxx_destruct]
  -[MCMContainerSchemaActionCopy performWithError:]
  -[MCMContainerSchemaActionCopy initWithSourcePathArgument:destinationPathArgument:context:]


MCMXPCMessageWithKeyValueBase : MCMXPCMessageWithKeyBase <MCMXPCMessage, MCMParametersWithKeyValue>
 @property  NSObject<OS_xpc_object> *xpcObject
 @property  ^{container_client=*I*II{?=[8I]}iBBB@} proxy
 @property  unsigned int platform
 @property  unsigned int disposition
 @property  unsigned long command
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  id value
 @property  NSString *key
 @property  MCMConcreteContainerIdentity *concreteContainerIdentity

  // instance methods
  -[MCMXPCMessageWithKeyValueBase .cxx_destruct]
  -[MCMXPCMessageWithKeyValueBase value]
  -[MCMXPCMessageWithKeyValueBase initWithXPCObject:context:error:]


MCMXPCMessageWithURLBase : MCMXPCMessageBase <MCMXPCMessage, MCMParametersWithURL>
 @property  NSObject<OS_xpc_object> *xpcObject
 @property  ^{container_client=*I*II{?=[8I]}iBBB@} proxy
 @property  unsigned int platform
 @property  unsigned int disposition
 @property  unsigned long command
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURL *url

  // instance methods
  -[MCMXPCMessageWithURLBase .cxx_destruct]
  -[MCMXPCMessageWithURLBase url]
  -[MCMXPCMessageWithURLBase initWithXPCObject:context:error:]


MCMCommandSetInfoValue : MCMCommand <MCMParametersWithKeyValue>
 @property  id value
 @property  NSString *key
 @property  MCMConcreteContainerIdentity *concreteContainerIdentity

  // class methods
  +[MCMCommandSetInfoValue command]
  +[MCMCommandSetInfoValue incomingMessageClass]

  // instance methods
  -[MCMCommandSetInfoValue preflightClientAllowed]
  -[MCMCommandSetInfoValue initWithMessage:context:reply:]
  -[MCMCommandSetInfoValue execute]
  -[MCMCommandSetInfoValue .cxx_destruct]
  -[MCMCommandSetInfoValue key]
  -[MCMCommandSetInfoValue value]
  -[MCMCommandSetInfoValue concreteContainerIdentity]
  -[MCMCommandSetInfoValue initWithKey:value:containerIdentity:context:resultPromise:]


MCMXPCMessageUserManagedAssetsPath : MCMXPCMessageWithContainerBase <MCMParametersUserManagedAssetsPath>
 @property  BOOL relative
 @property  BOOL createIfNecessary
 @property  MCMContainerIdentity *containerIdentity

  // instance methods
  -[MCMXPCMessageUserManagedAssetsPath initWithXPCObject:context:error:]
  -[MCMXPCMessageUserManagedAssetsPath isRelative]
  -[MCMXPCMessageUserManagedAssetsPath createIfNecessary]


MCMCommandDiskUsageForContainer : MCMCommand <MCMParametersWithConcreteContainer>
 @property  MCMConcreteContainerIdentity *concreteContainerIdentity

  // class methods
  +[MCMCommandDiskUsageForContainer command]
  +[MCMCommandDiskUsageForContainer incomingMessageClass]

  // instance methods
  -[MCMCommandDiskUsageForContainer preflightClientAllowed]
  -[MCMCommandDiskUsageForContainer initWithMessage:context:reply:]
  -[MCMCommandDiskUsageForContainer execute]
  -[MCMCommandDiskUsageForContainer .cxx_destruct]
  -[MCMCommandDiskUsageForContainer concreteContainerIdentity]


MCMContainerSchemaActionStopBackupExclude : MCMContainerSchemaActionBase <MCMContainerSchemaActionHasSinglePath>
  // class methods
  +[MCMContainerSchemaActionStopBackupExclude actionIdentifier]

  // instance methods
  -[MCMContainerSchemaActionStopBackupExclude .cxx_destruct]
  -[MCMContainerSchemaActionStopBackupExclude performWithError:]
  -[MCMContainerSchemaActionStopBackupExclude initWithPathArgument:context:]


MCMXPCMessageSetCodeSignMapping : MCMXPCMessageWithIdentifierBase <MCMParametersSetCodeSignMapping>
 @property  id info
 @property  id options
 @property  NSString *identifier

  // instance methods
  -[MCMXPCMessageSetCodeSignMapping .cxx_destruct]
  -[MCMXPCMessageSetCodeSignMapping options]
  -[MCMXPCMessageSetCodeSignMapping info]
  -[MCMXPCMessageSetCodeSignMapping initWithXPCObject:context:error:]


MCMCommandReferencesQuery : MCMCommand <MCMParametersWithOwnersAndGroups, MCMParametersReferencesQuery>
 @property  unsigned long containerClass
 @property  NSSet *ownerIdentifiers
 @property  NSSet *groupIdentifiers
 @property  unsigned long explicitFlags
 @property  unsigned int uid
 @property  unsigned long privateFlags
 @property  BOOL createDuringReconciliation
 @property  BOOL deleteDuringReconciliation
 @property  BOOL yesReallyApplyToAll
 @property  MCMUserIdentity *userIdentity

  // class methods
  +[MCMCommandReferencesQuery command]
  +[MCMCommandReferencesQuery incomingMessageClass]

  // instance methods
  -[MCMCommandReferencesQuery uid]
  -[MCMCommandReferencesQuery preflightClientAllowed]
  -[MCMCommandReferencesQuery explicitFlags]
  -[MCMCommandReferencesQuery initWithMessage:context:reply:]
  -[MCMCommandReferencesQuery execute]
  -[MCMCommandReferencesQuery .cxx_destruct]
  -[MCMCommandReferencesQuery userIdentity]
  -[MCMCommandReferencesQuery groupIdentifiers]
  -[MCMCommandReferencesQuery containerClass]
  -[MCMCommandReferencesQuery privateFlags]
  -[MCMCommandReferencesQuery ownerIdentifiers]
  -[MCMCommandReferencesQuery createDuringReconciliation]
  -[MCMCommandReferencesQuery deleteDuringReconciliation]
  -[MCMCommandReferencesQuery yesReallyApplyToAll]


MCMCommandFlushPersonaCache : MCMCommand
  // class methods
  +[MCMCommandFlushPersonaCache command]
  +[MCMCommandFlushPersonaCache incomingMessageClass]

  // instance methods
  -[MCMCommandFlushPersonaCache preflightClientAllowed]
  -[MCMCommandFlushPersonaCache execute]


MCMXPCMessageWithIdentifierBase : MCMXPCMessageBase <MCMXPCMessage, MCMParametersWithIdentifier>
 @property  NSObject<OS_xpc_object> *xpcObject
 @property  ^{container_client=*I*II{?=[8I]}iBBB@} proxy
 @property  unsigned int platform
 @property  unsigned int disposition
 @property  unsigned long command
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier

  // instance methods
  -[MCMXPCMessageWithIdentifierBase identifier]
  -[MCMXPCMessageWithIdentifierBase .cxx_destruct]
  -[MCMXPCMessageWithIdentifierBase initWithXPCObject:context:error:]


MCMXPCMessageLinkRemove : MCMXPCMessageWithLinkBase <MCMParametersLinkRemove>
 @property  unsigned long attributes

  // instance methods
  -[MCMXPCMessageLinkRemove attributes]
  -[MCMXPCMessageLinkRemove initWithXPCObject:context:error:]
  -[MCMXPCMessageLinkRemove disposition]


MCMLRUCache : NSObject <MCMCache>
 @property  unsigned long maxCount
 @property  NSMutableDictionary *storage
 @property  NSMutableOrderedSet *mruItems
 @property  NSString *name
 @property  unsigned long count
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMLRUCache maxCount]
  -[MCMLRUCache initWithName:maxCount:]
  -[MCMLRUCache removeAllObjects]
  -[MCMLRUCache storage]
  -[MCMLRUCache setObject:forKey:]
  -[MCMLRUCache .cxx_destruct]
  -[MCMLRUCache count]
  -[MCMLRUCache mruItems]
  -[MCMLRUCache name]
  -[MCMLRUCache objectForKey:]
  -[MCMLRUCache init]


MCMCommandDeleteWithUIDClassAndIdentifier : MCMCommand <MCMParametersWithContainer>
 @property  MCMCommandOperationDelete *deleteCommand
 @property  MCMContainerIdentity *containerIdentity

  // class methods
  +[MCMCommandDeleteWithUIDClassAndIdentifier command]
  +[MCMCommandDeleteWithUIDClassAndIdentifier incomingMessageClass]

  // instance methods
  -[MCMCommandDeleteWithUIDClassAndIdentifier preflightClientAllowed]
  -[MCMCommandDeleteWithUIDClassAndIdentifier initWithMessage:context:reply:]
  -[MCMCommandDeleteWithUIDClassAndIdentifier containerIdentity]
  -[MCMCommandDeleteWithUIDClassAndIdentifier execute]
  -[MCMCommandDeleteWithUIDClassAndIdentifier .cxx_destruct]
  -[MCMCommandDeleteWithUIDClassAndIdentifier deleteCommand]


MCMXPCMessageReplace : MCMXPCMessageBase <MCMParametersReplace>
 @property  MCMConcreteContainerIdentity *containerIdentityOld
 @property  MCMConcreteContainerIdentity *containerIdentityNew

  // instance methods
  -[MCMXPCMessageReplace .cxx_destruct]
  -[MCMXPCMessageReplace initWithXPCObject:context:error:]
  -[MCMXPCMessageReplace disposition]
  -[MCMXPCMessageReplace containerIdentityOld]
  -[MCMXPCMessageReplace containerIdentityNew]


MCMCommand : NSObject <MCMCommand_Internal, MCMCommand_XPC, MCMCommand>
 @property  MCMContext *context
 @property  <MCMReply> *reply
 @property  <MCMResultPromise> *resultPromise
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MCMCommand command]
  +[MCMCommand incomingMessageClass]
  +[MCMCommand relayToPrivilegedDaemonMessage:reply:context:resultPromise:]
  +[MCMCommand relayToPrivilegedDaemonMessage:reply:context:]

  // instance methods
  -[MCMCommand reply]
  -[MCMCommand preflightClientAllowed]
  -[MCMCommand resultPromise]
  -[MCMCommand initWithMessage:context:reply:]
  -[MCMCommand execute]
  -[MCMCommand .cxx_destruct]
  -[MCMCommand context]
  -[MCMCommand initWithContext:resultPromise:]
  -[MCMCommand userIdentityForContainerIdentifier:containerClass:error:]


MCMResultInfoValueForKey : MCMResultBase
 @property  id value

  // instance methods
  -[MCMResultInfoValueForKey initWithValue:]
  -[MCMResultInfoValueForKey .cxx_destruct]
  -[MCMResultInfoValueForKey setValue:]
  -[MCMResultInfoValueForKey value]
  -[MCMResultInfoValueForKey encodeResultOntoReply:]


MCMCommandAcquireSandboxExtensionWithUUID : MCMCommand <MCMParametersWithConcreteContainer>
 @property  MCMConcreteContainerIdentity *concreteContainerIdentity

  // class methods
  +[MCMCommandAcquireSandboxExtensionWithUUID command]
  +[MCMCommandAcquireSandboxExtensionWithUUID incomingMessageClass]

  // instance methods
  -[MCMCommandAcquireSandboxExtensionWithUUID preflightClientAllowed]
  -[MCMCommandAcquireSandboxExtensionWithUUID initWithMessage:context:reply:]
  -[MCMCommandAcquireSandboxExtensionWithUUID execute]
  -[MCMCommandAcquireSandboxExtensionWithUUID .cxx_destruct]
  -[MCMCommandAcquireSandboxExtensionWithUUID concreteContainerIdentity]


MCMContainerSchemaContext : NSObject
 @property  unsigned long containerClass
 @property  NSURL *homeDirectoryURL
 @property  MCMContainerPath *containerPath
 @property  unsigned short posixMode
 @property  MCMPOSIXUser *posixOwner
 @property  int dataProtectionClass
 @property  MCMLibraryRepairForUser *libraryRepair
 @property  NSString *identifier

  // class methods
  +[MCMContainerSchemaContext contextWithHomeDirectoryURL:containerPath:POSIXMode:POSIXOwner:containerClass:dataProtectionClass:libraryRepair:identifier:]

  // instance methods
  -[MCMContainerSchemaContext homeDirectoryURL]
  -[MCMContainerSchemaContext identifier]
  -[MCMContainerSchemaContext containerPath]
  -[MCMContainerSchemaContext libraryRepair]
  -[MCMContainerSchemaContext .cxx_destruct]
  -[MCMContainerSchemaContext containerClass]
  -[MCMContainerSchemaContext posixMode]
  -[MCMContainerSchemaContext dataProtectionClass]
  -[MCMContainerSchemaContext posixOwner]
  -[MCMContainerSchemaContext initWithHomeDirectoryURL:containerPath:POSIXMode:POSIXOwner:containerClass:dataProtectionClass:libraryRepair:identifier:]


MCMContainerSchemaActionBase : NSObject <MCMContainerSchemaAction>
 @property  MCMContainerSchemaContext *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MCMContainerSchemaActionBase actionIdentifier]
  +[MCMContainerSchemaActionBase actionWithName:arguments:context:error:]
  +[MCMContainerSchemaActionBase _resolveArguments:toSourcePathArgument:destPathArgument:context:]
  +[MCMContainerSchemaActionBase _resolveArguments:toPathArgument:context:]

  // instance methods
  -[MCMContainerSchemaActionBase initWithContext:]
  -[MCMContainerSchemaActionBase .cxx_destruct]
  -[MCMContainerSchemaActionBase context]
  -[MCMContainerSchemaActionBase fixAndRetryIfPermissionsErrorWithURL:error:duringBlock:]
  -[MCMContainerSchemaActionBase performWithError:]
  -[MCMContainerSchemaActionBase backupFileURL:error:]
  -[MCMContainerSchemaActionBase makedirAtURL:followTerminalSymlink:error:]


MCMCommandGetPrimordialDataContainer : MCMCommand <MCMParametersGetPrimordialDataContainer>
 @property  unsigned int platform
 @property  BOOL useCodeSignDatabase
 @property  BOOL extension

  // class methods
  +[MCMCommandGetPrimordialDataContainer command]
  +[MCMCommandGetPrimordialDataContainer incomingMessageClass]

  // instance methods
  -[MCMCommandGetPrimordialDataContainer preflightClientAllowed]
  -[MCMCommandGetPrimordialDataContainer platform]
  -[MCMCommandGetPrimordialDataContainer initWithMessage:context:reply:]
  -[MCMCommandGetPrimordialDataContainer execute]
  -[MCMCommandGetPrimordialDataContainer isExtension]
  -[MCMCommandGetPrimordialDataContainer useCodeSignDatabase]


MCMResultAcquireSandboxExtensionWithUUID : MCMResultBase
 @property  r* sandboxToken
 @property  NSURL *url
 @property  NSString *personaUniqueString

  // instance methods
  -[MCMResultAcquireSandboxExtensionWithUUID sandboxToken]
  -[MCMResultAcquireSandboxExtensionWithUUID dealloc]
  -[MCMResultAcquireSandboxExtensionWithUUID .cxx_destruct]
  -[MCMResultAcquireSandboxExtensionWithUUID personaUniqueString]
  -[MCMResultAcquireSandboxExtensionWithUUID url]
  -[MCMResultAcquireSandboxExtensionWithUUID encodeResultOntoReply:]
  -[MCMResultAcquireSandboxExtensionWithUUID initWithSandboxToken:personaUniqueString:url:]


MCMContainerSchemaActionMoveContents : MCMContainerSchemaActionBase <MCMContainerSchemaActionHasSourceAndDestination>
  // class methods
  +[MCMContainerSchemaActionMoveContents actionIdentifier]

  // instance methods
  -[MCMContainerSchemaActionMoveContents .cxx_destruct]
  -[MCMContainerSchemaActionMoveContents performWithError:]
  -[MCMContainerSchemaActionMoveContents initWithSourcePathArgument:destinationPathArgument:context:]


MCMCommandProcessRestoredContainer : MCMCommand <MCMParametersWithConcreteContainer>
 @property  MCMConcreteContainerIdentity *concreteContainerIdentity

  // class methods
  +[MCMCommandProcessRestoredContainer command]
  +[MCMCommandProcessRestoredContainer incomingMessageClass]

  // instance methods
  -[MCMCommandProcessRestoredContainer preflightClientAllowed]
  -[MCMCommandProcessRestoredContainer initWithMessage:context:reply:]
  -[MCMCommandProcessRestoredContainer execute]
  -[MCMCommandProcessRestoredContainer .cxx_destruct]
  -[MCMCommandProcessRestoredContainer concreteContainerIdentity]
  -[MCMCommandProcessRestoredContainer initWithConcreteContainerIdentity:context:resultPromise:]


MCMXPCMessageWithContainerClassBase : MCMXPCMessageBase <MCMXPCMessage, MCMParametersWithContainerClass>
 @property  NSObject<OS_xpc_object> *xpcObject
 @property  ^{container_client=*I*II{?=[8I]}iBBB@} proxy
 @property  unsigned int platform
 @property  unsigned int disposition
 @property  unsigned long command
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long containerClass

  // instance methods
  -[MCMXPCMessageWithContainerClassBase containerClass]
  -[MCMXPCMessageWithContainerClassBase initWithXPCObject:context:error:]
  -[MCMXPCMessageWithContainerClassBase disposition]


MCMResultGetCodeSignMapping : MCMResultBase
 @property  NSDictionary *info

  // instance methods
  -[MCMResultGetCodeSignMapping .cxx_destruct]
  -[MCMResultGetCodeSignMapping initWithInfo:]
  -[MCMResultGetCodeSignMapping info]
  -[MCMResultGetCodeSignMapping encodeResultOntoReply:]


MCMCommandContainerFromPath : MCMCommand <MCMParametersWithURL>
 @property  NSURL *url

  // class methods
  +[MCMCommandContainerFromPath command]
  +[MCMCommandContainerFromPath incomingMessageClass]

  // instance methods
  -[MCMCommandContainerFromPath preflightClientAllowed]
  -[MCMCommandContainerFromPath initWithMessage:context:reply:]
  -[MCMCommandContainerFromPath execute]
  -[MCMCommandContainerFromPath .cxx_destruct]
  -[MCMCommandContainerFromPath _containerFromRelayToDaemonWithURL:relativePath:error:]
  -[MCMCommandContainerFromPath url]


MCMXPCMessageWithConcreteContainerBase : MCMXPCMessageBase <MCMXPCMessage, MCMParametersWithConcreteContainer>
 @property  NSObject<OS_xpc_object> *xpcObject
 @property  ^{container_client=*I*II{?=[8I]}iBBB@} proxy
 @property  unsigned int platform
 @property  unsigned int disposition
 @property  unsigned long command
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  MCMConcreteContainerIdentity *concreteContainerIdentity

  // instance methods
  -[MCMXPCMessageWithConcreteContainerBase .cxx_destruct]
  -[MCMXPCMessageWithConcreteContainerBase initWithXPCObject:context:error:]
  -[MCMXPCMessageWithConcreteContainerBase disposition]
  -[MCMXPCMessageWithConcreteContainerBase concreteContainerIdentity]
  -[MCMXPCMessageWithConcreteContainerBase initWithConcreteContainer:context:]


MCMResultWithOwnersAndGroupsBaseFact : NSObject
 @property  unsigned long ownerIndex
 @property  unsigned long groupIndex

  // instance methods
  -[MCMResultWithOwnersAndGroupsBaseFact groupIndex]
  -[MCMResultWithOwnersAndGroupsBaseFact isEqual:]
  -[MCMResultWithOwnersAndGroupsBaseFact initWithOwnerIndex:groupIndex:]
  -[MCMResultWithOwnersAndGroupsBaseFact ownerIndex]


MCMResultWithOwnersAndGroupsBase : MCMResultBase <MCMResultWithOwnersAndGroups>
 @property  NSArray *ownerIdentifiers
 @property  NSArray *groupIdentifiers
 @property  MCMError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMResultWithOwnersAndGroupsBase .cxx_destruct]
  -[MCMResultWithOwnersAndGroupsBase groupIdentifiers]
  -[MCMResultWithOwnersAndGroupsBase encodeResultOntoReply:]
  -[MCMResultWithOwnersAndGroupsBase init]
  -[MCMResultWithOwnersAndGroupsBase ownerIdentifiers]
  -[MCMResultWithOwnersAndGroupsBase addOwner:group:]


MCMManagedPath : NSObject <MCMManagedPath>
 @property  NSURL *url
 @property  unsigned long flags
 @property  <MCMManagedPath> *parent
 @property  unsigned short mode
 @property  int dpClass
 @property  unsigned long ACLConfig
 @property  MCMPOSIXUser *owner
 @property  MCMFSNode *fsNode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMManagedPath owner]
  -[MCMManagedPath initWithURL:flags:ACLConfig:mode:dpClass:owner:parent:]
  -[MCMManagedPath dpClass]
  -[MCMManagedPath setFsNode:]
  -[MCMManagedPath fsNode]
  -[MCMManagedPath mode]
  -[MCMManagedPath .cxx_destruct]
  -[MCMManagedPath flags]
  -[MCMManagedPath isEqualToManagedPath:]
  -[MCMManagedPath copyWithZone:]
  -[MCMManagedPath url]
  -[MCMManagedPath parent]
  -[MCMManagedPath ACLConfig]
  -[MCMManagedPath isEqual:]
  -[MCMManagedPath managedPathByAppendingPathComponent:flags:ACLConfig:mode:dpClass:owner:]


MCMCommandSetTestLock : MCMCommand <MCMParametersSetTestLock>
 @property  <MCMXPCMessage> *message
 @property  unsigned long requestedLocks
 @property  BOOL enable

  // class methods
  +[MCMCommandSetTestLock command]
  +[MCMCommandSetTestLock incomingMessageClass]

  // instance methods
  -[MCMCommandSetTestLock enable]
  -[MCMCommandSetTestLock preflightClientAllowed]
  -[MCMCommandSetTestLock initWithMessage:context:reply:]
  -[MCMCommandSetTestLock execute]
  -[MCMCommandSetTestLock .cxx_destruct]
  -[MCMCommandSetTestLock message]
  -[MCMCommandSetTestLock requestedLocks]


MCMCommandLinkApply : MCMCommand <MCMParametersWithLink>
 @property  MCMResolvedLink *link

  // class methods
  +[MCMCommandLinkApply command]
  +[MCMCommandLinkApply incomingMessageClass]

  // instance methods
  -[MCMCommandLinkApply preflightClientAllowed]
  -[MCMCommandLinkApply link]
  -[MCMCommandLinkApply initWithMessage:context:reply:]
  -[MCMCommandLinkApply execute]
  -[MCMCommandLinkApply .cxx_destruct]


MCMCommandSetCodeSignMapping : MCMCommand <MCMParametersSetCodeSignMapping>
 @property  id info
 @property  id options
 @property  NSString *identifier

  // class methods
  +[MCMCommandSetCodeSignMapping command]
  +[MCMCommandSetCodeSignMapping incomingMessageClass]

  // instance methods
  -[MCMCommandSetCodeSignMapping preflightClientAllowed]
  -[MCMCommandSetCodeSignMapping identifier]
  -[MCMCommandSetCodeSignMapping initWithMessage:context:reply:]
  -[MCMCommandSetCodeSignMapping execute]
  -[MCMCommandSetCodeSignMapping .cxx_destruct]
  -[MCMCommandSetCodeSignMapping options]
  -[MCMCommandSetCodeSignMapping info]


MCMCommandDataMigration : MCMCommand
  // class methods
  +[MCMCommandDataMigration command]
  +[MCMCommandDataMigration incomingMessageClass]

  // instance methods
  -[MCMCommandDataMigration preflightClientAllowed]
  -[MCMCommandDataMigration execute]
  -[MCMCommandDataMigration _performBundleContainerOwnershipMigrationWithError:]
  -[MCMCommandDataMigration _performInternalACLMigrationWithError:]


MCMClientIdentityIndex : NSObject <NSCopying>
  // instance methods
  -[MCMClientIdentityIndex .cxx_destruct]
  -[MCMClientIdentityIndex initWithAuditToken:personaUniqueString:]
  -[MCMClientIdentityIndex isEqualToClientIdentityIndex:]
  -[MCMClientIdentityIndex copyWithZone:]
  -[MCMClientIdentityIndex isEqual:]


MCMClientIdentityCache : NSObject <MCMClientIdentityCache>
 @property  <MCMCache> *cache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMClientIdentityCache cache]
  -[MCMClientIdentityCache .cxx_destruct]
  -[MCMClientIdentityCache flush]
  -[MCMClientIdentityCache clientIdentityWithAuditToken:personaUniqueString:error:generator:]
  -[MCMClientIdentityCache init]


MCMActionArgumentBase : NSObject <MCMActionArgument>
 @property  NSString *string
 @property  NSURL *fileURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMActionArgumentBase fileURL]
  -[MCMActionArgumentBase string]
  -[MCMActionArgumentBase .cxx_destruct]
  -[MCMActionArgumentBase initWithString:]


MCMActionArgumentCommand : MCMActionArgumentBase

MCMActionArgumentRelativeDirectory : MCMActionArgumentBase
  // instance methods
  -[MCMActionArgumentRelativeDirectory fileURL]


MCMActionArgumentRelativeFile : MCMActionArgumentBase
  // instance methods
  -[MCMActionArgumentRelativeFile fileURL]


MCMActionArgumentRelativeDirectoryWithInterpolation : MCMActionArgumentBase
  // instance methods
  -[MCMActionArgumentRelativeDirectoryWithInterpolation fileURL]


MCMActionArgumentRelativeFileWithInterpolation : MCMActionArgumentBase
  // instance methods
  -[MCMActionArgumentRelativeFileWithInterpolation fileURL]


MCMLazyDescription : NSString
  // instance methods
  -[MCMLazyDescription getCharacters:range:]
  -[MCMLazyDescription length]
  -[MCMLazyDescription .cxx_destruct]
  -[MCMLazyDescription initWithDescriber:]
  -[MCMLazyDescription characterAtIndex:]
  -[MCMLazyDescription redactedDescription]


MCMCommandCreateOrLookupAppGroupByAppGroupIdentifier : MCMCommand <MCMParametersCreateOrLookupAppGroupByAppGroupIdentifier>
 @property  NSString *appGroupIdentifier

  // class methods
  +[MCMCommandCreateOrLookupAppGroupByAppGroupIdentifier command]
  +[MCMCommandCreateOrLookupAppGroupByAppGroupIdentifier incomingMessageClass]

  // instance methods
  -[MCMCommandCreateOrLookupAppGroupByAppGroupIdentifier preflightClientAllowed]
  -[MCMCommandCreateOrLookupAppGroupByAppGroupIdentifier initWithMessage:context:reply:]
  -[MCMCommandCreateOrLookupAppGroupByAppGroupIdentifier execute]
  -[MCMCommandCreateOrLookupAppGroupByAppGroupIdentifier .cxx_destruct]
  -[MCMCommandCreateOrLookupAppGroupByAppGroupIdentifier appGroupIdentifier]


MCMContainerSchemaActionSymlink : MCMContainerSchemaActionBase <MCMContainerSchemaActionHasSourceAndDestination>
  // class methods
  +[MCMContainerSchemaActionSymlink actionIdentifier]

  // instance methods
  -[MCMContainerSchemaActionSymlink .cxx_destruct]
  -[MCMContainerSchemaActionSymlink performWithError:]
  -[MCMContainerSchemaActionSymlink initWithSourcePathArgument:destinationPathArgument:context:]


MCMXPCMessageCreateOrLookupWithBundle : MCMXPCMessageBase <MCMParametersCreateOrLookupWithBundle>
 @property  BOOL createIfNecessary
 @property  BOOL transient
 @property  BOOL issueSandboxExtension
 @property  r* sandboxToken
 @property  NSURL *bundleURL
 @property  NSURL *executableURL

  // instance methods
  -[MCMXPCMessageCreateOrLookupWithBundle executableURL]
  -[MCMXPCMessageCreateOrLookupWithBundle bundleURL]
  -[MCMXPCMessageCreateOrLookupWithBundle sandboxToken]
  -[MCMXPCMessageCreateOrLookupWithBundle .cxx_destruct]
  -[MCMXPCMessageCreateOrLookupWithBundle initWithXPCObject:context:error:]
  -[MCMXPCMessageCreateOrLookupWithBundle transient]
  -[MCMXPCMessageCreateOrLookupWithBundle createIfNecessary]
  -[MCMXPCMessageCreateOrLookupWithBundle issueSandboxExtension]


MCMXPCMessageSetDataProtection : MCMXPCMessageWithContainerBase <MCMParametersSetDataProtection>
 @property  BOOL thirdParty
 @property  int dataProtectionClass
 @property  BOOL retryIfLocked
 @property  MCMContainerIdentity *containerIdentity

  // instance methods
  -[MCMXPCMessageSetDataProtection initWithXPCObject:context:error:]
  -[MCMXPCMessageSetDataProtection dataProtectionClass]
  -[MCMXPCMessageSetDataProtection isThirdParty]
  -[MCMXPCMessageSetDataProtection retryIfLocked]


MCMContainerSchemaActionMove : MCMContainerSchemaActionBase <MCMContainerSchemaActionHasSourceAndDestination>
  // class methods
  +[MCMContainerSchemaActionMove actionIdentifier]

  // instance methods
  -[MCMContainerSchemaActionMove .cxx_destruct]
  -[MCMContainerSchemaActionMove performWithError:]
  -[MCMContainerSchemaActionMove initWithSourcePathArgument:destinationPathArgument:context:]


MCMCommandDispatcher : NSObject
 @property  NSMutableDictionary *messageToCommandClassMap

  // instance methods
  -[MCMCommandDispatcher _ifNeededRelayMessage:reply:context:]
  -[MCMCommandDispatcher registerCommandClass:]
  -[MCMCommandDispatcher .cxx_destruct]
  -[MCMCommandDispatcher messageToCommandClassMap]
  -[MCMCommandDispatcher _commandClassFromXPCMessage:context:error:]
  -[MCMCommandDispatcher _messageFromCommandClass:xpcMessage:context:error:]
  -[MCMCommandDispatcher dispatchMessage:context:reply:]
  -[MCMCommandDispatcher _commandFromCommandClass:message:context:reply:error:]
  -[MCMCommandDispatcher init]


MCMDataProtectionChangeOperation : NSObject
 @property  <MCMMetadata> *dataContainerMetadata
 @property  int newDataProtectionClass
 @property  int changeType
 @property  BOOL retryIfLocked
 @property  BOOL retried
 @property  NSUUID *internalChangeID
 @property  NSObject<OS_dispatch_queue> *queue
 @property  MCMUserIdentityCache *userIdentityCache
 @property  @? retryStartBlock
 @property  @? completionBlock

  // class methods
  +[MCMDataProtectionChangeOperation dataProtectionChangeOperationWithContainerMetadata:settingClass:retryingIfLocked:changeType:queue:]
  +[MCMDataProtectionChangeOperation dataProtectionChangeOperationAtURL:queue:error:]
  +[MCMDataProtectionChangeOperation _readAndValidateDataProtectionUpdateAtURL:userIdentityCache:error:]
  +[MCMDataProtectionChangeOperation urlForProtectionOperationWithContainerIdentity:]
  +[MCMDataProtectionChangeOperation deleteUpdateFileWithContainerIdentity:error:]

  // instance methods
  -[MCMDataProtectionChangeOperation setCompletionBlock:]
  -[MCMDataProtectionChangeOperation completionBlock]
  -[MCMDataProtectionChangeOperation changeType]
  -[MCMDataProtectionChangeOperation .cxx_destruct]
  -[MCMDataProtectionChangeOperation userIdentityCache]
  -[MCMDataProtectionChangeOperation queue]
  -[MCMDataProtectionChangeOperation setChangeType:]
  -[MCMDataProtectionChangeOperation performChangeOperation]
  -[MCMDataProtectionChangeOperation writeToDiskWithError:]
  -[MCMDataProtectionChangeOperation retryIfLocked]
  -[MCMDataProtectionChangeOperation initWithContainerMetadata:newClass:retryingIfLocked:changeType:internalChangeID:queue:userIdentityCache:]
  -[MCMDataProtectionChangeOperation initWithContainerMetadata:newClass:retryingIfLocked:changeType:queue:userIdentityCache:]
  -[MCMDataProtectionChangeOperation _onQueue_writeToDiskWithError:]
  -[MCMDataProtectionChangeOperation _onQueue_stillMostCurrentUpdate]
  -[MCMDataProtectionChangeOperation _stillMostCurrentUpdate]
  -[MCMDataProtectionChangeOperation _onQueue_deleteUpdateFileWithError:]
  -[MCMDataProtectionChangeOperation _deleteUpdateFileWithError:]
  -[MCMDataProtectionChangeOperation _runChangeOperationNeedToRetry:withError:]
  -[MCMDataProtectionChangeOperation dataContainerMetadata]
  -[MCMDataProtectionChangeOperation setDataContainerMetadata:]
  -[MCMDataProtectionChangeOperation newDataProtectionClass]
  -[MCMDataProtectionChangeOperation setNewDataProtectionClass:]
  -[MCMDataProtectionChangeOperation setRetryIfLocked:]
  -[MCMDataProtectionChangeOperation retryStartBlock]
  -[MCMDataProtectionChangeOperation setRetryStartBlock:]
  -[MCMDataProtectionChangeOperation retried]
  -[MCMDataProtectionChangeOperation setRetried:]
  -[MCMDataProtectionChangeOperation internalChangeID]
  -[MCMDataProtectionChangeOperation setInternalChangeID:]


MCMDataProtectionManager : NSObject
 @property  NSObject<OS_dispatch_queue> *protectionOperationFileQueue

  // class methods
  +[MCMDataProtectionManager defaultManager]

  // instance methods
  -[MCMDataProtectionManager restartPendingDataProtectionOperationsWithError:]
  -[MCMDataProtectionManager .cxx_destruct]
  -[MCMDataProtectionManager desiredDataProtectionClassForMetadata:clientIdentity:]
  -[MCMDataProtectionManager protectionOperationFileQueue]
  -[MCMDataProtectionManager intendedDataProtectionClassBasedOnEntitlementsForIdentifier:clientIdentity:containerClass:info:]
  -[MCMDataProtectionManager setDataProtectionOnDataContainerForMetadata:isSecondOrThirdPartyApp:retryIfLocked:deferUntilNextLaunch:withCompletion:]
  -[MCMDataProtectionManager _startDataProtectionChangeOperation:withCompletion:]
  -[MCMDataProtectionManager init]


MCMCommandDeleteUserManagedAsset : MCMCommand <MCMParametersDeleteUserManagedAsset>
 @property  NSString *sourceRelativePath
 @property  MCMContainerIdentity *containerIdentity

  // class methods
  +[MCMCommandDeleteUserManagedAsset command]
  +[MCMCommandDeleteUserManagedAsset incomingMessageClass]

  // instance methods
  -[MCMCommandDeleteUserManagedAsset preflightClientAllowed]
  -[MCMCommandDeleteUserManagedAsset initWithMessage:context:reply:]
  -[MCMCommandDeleteUserManagedAsset containerIdentity]
  -[MCMCommandDeleteUserManagedAsset execute]
  -[MCMCommandDeleteUserManagedAsset .cxx_destruct]
  -[MCMCommandDeleteUserManagedAsset sourceRelativePath]


MCMGroupManager : NSObject
 @property  MCMUserIdentityCache *userIdentityCache

  // class methods
  +[MCMGroupManager defaultManager]

  // instance methods
  -[MCMGroupManager .cxx_destruct]
  -[MCMGroupManager userIdentityCache]
  -[MCMGroupManager initWithUserIdentityCache:]
  -[MCMGroupManager _cleanupUnreferencedGroupContainersForUserIdentity:containerClass:referenceCounts:context:]
  -[MCMGroupManager groupContainerIdentifiersForOwnerIdentifier:groupContainerClass:codeSignInfo:withError:]
  -[MCMGroupManager reconcileGroupContainersForContainerClass:context:]


MCMXPCMessageDeletePluginDataContainerContents : MCMXPCMessageWithContainerBase
  // instance methods
  -[MCMXPCMessageDeletePluginDataContainerContents initWithXPCObject:context:error:]
  -[MCMXPCMessageDeletePluginDataContainerContents disposition]


MCMReply : NSObject <MCMReply_Internal, MCMReply>
 @property  NSObject<OS_xpc_object> *xpcReply
 @property  NSObject<OS_dispatch_queue> *slowWorkloop
 @property  NSObject<OS_dispatch_queue> *fastWorkloop
 @property  <MCMResultPromise> *resultPromise
 @property  BOOL exitAfterSend
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMReply send]
  -[MCMReply encodeResult:]
  -[MCMReply dispatchSyncToFastWorkloopWithBlock:]
  -[MCMReply resultPromise]
  -[MCMReply slowWorkloop]
  -[MCMReply .cxx_destruct]
  -[MCMReply initWithXpcReply:slowWorkloop:fastWorkloop:resultPromise:]
  -[MCMReply fastWorkloop]
  -[MCMReply invalidate]
  -[MCMReply exitAfterSend]
  -[MCMReply handoffToSlowWorkloopforClientIdentity:withBlock:]
  -[MCMReply _send]
  -[MCMReply setExitAfterSend:]
  -[MCMReply xpcReply]


MCMXPCMessageBase : NSObject <MCMXPCMessage>
 @property  <MCMContext> *context
 @property  NSObject<OS_xpc_object> *xpcObject
 @property  ^{container_client=*I*II{?=[8I]}iBBB@} proxy
 @property  unsigned int platform
 @property  unsigned int disposition
 @property  unsigned long command
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MCMXPCMessageBase xpcMessageFromXPCObject:context:error:]
  +[MCMXPCMessageBase userIdentityForContainerIdentifier:clientIdentity:containerClass:error:]

  // instance methods
  -[MCMXPCMessageBase command]
  -[MCMXPCMessageBase proxy]
  -[MCMXPCMessageBase initWithContext:]
  -[MCMXPCMessageBase platform]
  -[MCMXPCMessageBase dealloc]
  -[MCMXPCMessageBase xpcObject]
  -[MCMXPCMessageBase .cxx_destruct]
  -[MCMXPCMessageBase initWithXPCObject:context:error:]
  -[MCMXPCMessageBase context]
  -[MCMXPCMessageBase disposition]
  -[MCMXPCMessageBase nsStringValueFromXPCObject:key:]
  -[MCMXPCMessageBase identifierFromXPCObject:elseClientIdentifier:]
  -[MCMXPCMessageBase nsUUIDValueFromXPCObject:key:]
  -[MCMXPCMessageBase nsObjectFromXPCObject:key:]
  -[MCMXPCMessageBase userIdentityFromClientPersonaUniqueString:clientIdentity:error:]
  -[MCMXPCMessageBase userIdentityFromXPCObject:key:containerClass:clientIdentity:error:]
  -[MCMXPCMessageBase containerIdentityFromXPCObject:identifierKey:classKey:transientKey:context:error:]
  -[MCMXPCMessageBase concreteContainerIdentityFromXPCObject:identifierKey:classKey:UUIDKey:personaUniqueStringKey:context:error:]


MCMCommandQuery : MCMCommand <MCMParametersQuery>
 @property  unsigned int platform
 @property  unsigned long explicitFlags
 @property  NSSet *identifiers
 @property  unsigned long containerClass
 @property  NSSet *groupIdentifiers
 @property  BOOL createIfNecessary
 @property  BOOL includeInfoInResult
 @property  BOOL includePathInResult
 @property  BOOL issueSandboxExtensions
 @property  unsigned int uid
 @property  MCMUserIdentity *userIdentity
 @property  BOOL transient
 @property  BOOL includeUnowned
 @property  BOOL expectSingleResult
 @property  BOOL includeLinks
 @property  BOOL fuzzyMatchTransient
 @property  BOOL fuzzyMatchInternalUUID
 @property  NSUUID *internalUUID
 @property  unsigned long privateFlags
 @property  BOOL legacyPersonaPolicy
 @property  BOOL legacyExtensionPolicy

  // class methods
  +[MCMCommandQuery command]
  +[MCMCommandQuery incomingMessageClass]

  // instance methods
  -[MCMCommandQuery uid]
  -[MCMCommandQuery preflightClientAllowed]
  -[MCMCommandQuery identifiers]
  -[MCMCommandQuery _queryPlanWithIdentifiers:isGroupClass:clientIdentity:error:]
  -[MCMCommandQuery internalUUID]
  -[MCMCommandQuery platform]
  -[MCMCommandQuery explicitFlags]
  -[MCMCommandQuery fuzzyMatchInternalUUID]
  -[MCMCommandQuery issueSandboxExtensions]
  -[MCMCommandQuery _resolveLinksForContainers:]
  -[MCMCommandQuery legacyPersonaPolicy]
  -[MCMCommandQuery initWithMessage:context:reply:]
  -[MCMCommandQuery execute]
  -[MCMCommandQuery _setOfUserIdentitiesForIdentifiers:isGroupClass:]
  -[MCMCommandQuery .cxx_destruct]
  -[MCMCommandQuery _executeQueryForContainerIdentity:error:]
  -[MCMCommandQuery userIdentity]
  -[MCMCommandQuery fuzzyMatchTransient]
  -[MCMCommandQuery initWithPlatform:explicitFlags:identifiers:containerClass:groupIdentifiers:internalUUID:createIfNecessary:includeInfoInResult:includePathInResult:issueSandboxExtensions:UID:userIdentity:transient:fuzzyMatchTransient:fuzzyMatchInternalUUID:includeUnowned:expectSingleResult:includeLinks:legacyPersonaPolicy:context:resultPromise:]
  -[MCMCommandQuery groupIdentifiers]
  -[MCMCommandQuery containerClass]
  -[MCMCommandQuery privateFlags]
  -[MCMCommandQuery includePathInResult]
  -[MCMCommandQuery legacyExtensionPolicy]
  -[MCMCommandQuery expectSingleResult]
  -[MCMCommandQuery _executeQueryPlan:resultContainers:error:]
  -[MCMCommandQuery includeLinks]
  -[MCMCommandQuery includeUnowned]
  -[MCMCommandQuery transient]
  -[MCMCommandQuery createIfNecessary]
  -[MCMCommandQuery _setOfUserIdentities]
  -[MCMCommandQuery includeInfoInResult]
  -[MCMCommandQuery _containerIdentifiersIncludingUnownedForContainerClass:canAccessAllContainers:error:]


MCMSystemChangeMonitor : NSObject <MCMUserIdentityCacheObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMSystemChangeMonitor userIdentityCache:didInvalidateUserIdentity:]
  -[MCMSystemChangeMonitor userIdentityCache:didAddUserIdentity:]


MCMXPCMessageQuery : MCMXPCMessageBase <MCMParametersQuery>
 @property  unsigned long explicitFlags
 @property  NSSet *identifiers
 @property  unsigned long containerClass
 @property  NSSet *groupIdentifiers
 @property  BOOL createIfNecessary
 @property  BOOL includeInfoInResult
 @property  BOOL includePathInResult
 @property  BOOL issueSandboxExtensions
 @property  unsigned int uid
 @property  MCMUserIdentity *userIdentity
 @property  BOOL transient
 @property  BOOL includeUnowned
 @property  BOOL expectSingleResult
 @property  BOOL includeLinks
 @property  BOOL fuzzyMatchTransient
 @property  BOOL fuzzyMatchInternalUUID
 @property  NSUUID *internalUUID
 @property  unsigned long privateFlags
 @property  BOOL legacyPersonaPolicy
 @property  BOOL legacyExtensionPolicy

  // instance methods
  -[MCMXPCMessageQuery uid]
  -[MCMXPCMessageQuery identifiers]
  -[MCMXPCMessageQuery internalUUID]
  -[MCMXPCMessageQuery explicitFlags]
  -[MCMXPCMessageQuery fuzzyMatchInternalUUID]
  -[MCMXPCMessageQuery issueSandboxExtensions]
  -[MCMXPCMessageQuery legacyPersonaPolicy]
  -[MCMXPCMessageQuery .cxx_destruct]
  -[MCMXPCMessageQuery userIdentity]
  -[MCMXPCMessageQuery fuzzyMatchTransient]
  -[MCMXPCMessageQuery groupIdentifiers]
  -[MCMXPCMessageQuery containerClass]
  -[MCMXPCMessageQuery privateFlags]
  -[MCMXPCMessageQuery includePathInResult]
  -[MCMXPCMessageQuery legacyExtensionPolicy]
  -[MCMXPCMessageQuery expectSingleResult]
  -[MCMXPCMessageQuery initWithXPCObject:context:error:]
  -[MCMXPCMessageQuery includeLinks]
  -[MCMXPCMessageQuery disposition]
  -[MCMXPCMessageQuery includeUnowned]
  -[MCMXPCMessageQuery transient]
  -[MCMXPCMessageQuery createIfNecessary]
  -[MCMXPCMessageQuery includeInfoInResult]


MCMXPCMessageWithContainerBase : MCMXPCMessageBase <MCMXPCMessage, MCMParametersWithContainer>
 @property  NSObject<OS_xpc_object> *xpcObject
 @property  ^{container_client=*I*II{?=[8I]}iBBB@} proxy
 @property  unsigned int platform
 @property  unsigned int disposition
 @property  unsigned long command
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  MCMContainerIdentity *containerIdentity

  // instance methods
  -[MCMXPCMessageWithContainerBase containerIdentity]
  -[MCMXPCMessageWithContainerBase .cxx_destruct]
  -[MCMXPCMessageWithContainerBase initWithXPCObject:context:error:]
  -[MCMXPCMessageWithContainerBase disposition]


MCMClientConnectionContext : NSObject <MCMClientConnectionContext>
 @property  MCMUserIdentityCache *userIdentityCache
 @property  {?=[8I]} auditToken
 @property  MCMPOSIXUser *posixUser
 @property  int pid
 @property  NSString *personaUniqueString
 @property  NSObject<OS_xpc_object> *connection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMClientConnectionContext clientConnectionContextForCurrentThread]
  -[MCMClientConnectionContext .cxx_destruct]
  -[MCMClientConnectionContext connection]
  -[MCMClientConnectionContext userIdentityCache]
  -[MCMClientConnectionContext auditToken]
  -[MCMClientConnectionContext posixUser]
  -[MCMClientConnectionContext pid]
  -[MCMClientConnectionContext copyWithZone:]
  -[MCMClientConnectionContext personaUniqueString]
  -[MCMClientConnectionContext initForCurrentThreadContextWithXPCConnection:userIdentityCache:]


MCMEntitlements : NSObject <MCMEntitlements>
 @property  NSDictionary *rawEntitlements
 @property  NSString *identifier
 @property  NSDictionary *lookup
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL privileged
 @property  BOOL proxyAllowed
 @property  BOOL testabilityAllowed
 @property  BOOL hasSystemContainer
 @property  BOOL allowed
 @property  BOOL otherIDLookup
 @property  BOOL canDelete
 @property  BOOL canManageUserManagedAssets
 @property  BOOL canControlCaches
 @property  BOOL canRepair
 @property  BOOL canStageSharedContent
 @property  BOOL canPerformDataMigration
 @property  BOOL canDeleteContainerContent
 @property  BOOL requestsNoContainer
 @property  BOOL canReadReferences
 @property  BOOL canReadWriteReferences

  // class methods
  +[MCMEntitlements appGroupIdentifiersForIdentifier:entitlements:]
  +[MCMEntitlements systemGroupIdentifiersForIdentifier:entitlements:]
  +[MCMEntitlements copyGroupEntitlementForIdentifier:entitlements:groupKey:]
  +[MCMEntitlements entitlementForGroupContainerClass:]

  // instance methods
  -[MCMEntitlements prune]
  -[MCMEntitlements isAllowedToAccessInfoMetadata]
  -[MCMEntitlements isAllowedToDelete]
  -[MCMEntitlements identifier]
  -[MCMEntitlements isAllowedToReadReferences]
  -[MCMEntitlements initForPrivilegedAnonymous]
  -[MCMEntitlements copyEntitlementsDictionaryByRemovingGroupContainerOfClass:groupIdentifier:]
  -[MCMEntitlements canDelete]
  -[MCMEntitlements lookup]
  -[MCMEntitlements isOwnerOfContainerWithClass:identifier:]
  -[MCMEntitlements canControlCaches]
  -[MCMEntitlements .cxx_destruct]
  -[MCMEntitlements canPerformDataMigration]
  -[MCMEntitlements isAllowedToLookupGroupContainersOfClass:ownedByIdentifier:]
  -[MCMEntitlements isAllowedToRegenerateDirectoryUUIDs]
  -[MCMEntitlements isAllowedToSetDataProtection]
  -[MCMEntitlements canReadWriteReferences]
  -[MCMEntitlements isAllowedToReplaceContainers]
  -[MCMEntitlements isAllowedToChangeReferences]
  -[MCMEntitlements proxyAllowed]
  -[MCMEntitlements isAllowedToWipeAnyDataContainer]
  -[MCMEntitlements rawEntitlements]
  -[MCMEntitlements lookupForContainerClass:]
  -[MCMEntitlements appGroupIdentifiers]
  -[MCMEntitlements isAllowedToStartUserDataMigration]
  -[MCMEntitlements initWithEntitlements:clientIdentifier:]
  -[MCMEntitlements canStageSharedContent]
  -[MCMEntitlements isAllowedToLookupAllContainersOfClass:]
  -[MCMEntitlements copyEntitlementsDictionaryByAddingGroupContainerOfClass:groupIdentifier:]
  -[MCMEntitlements isAllowedToRecreateContainerStructure]
  -[MCMEntitlements isAllowedToRestoreContainer]
  -[MCMEntitlements isAllowedToWipePlugInDataContainerWithIdentifier:]
  -[MCMEntitlements setRawEntitlements:]
  -[MCMEntitlements _setOfStringsFromArray:]
  -[MCMEntitlements otherIDLookup]
  -[MCMEntitlements intendedDataProtectionClass]
  -[MCMEntitlements hasSystemContainer]
  -[MCMEntitlements isAllowedToLookupContainerIdentity:]
  -[MCMEntitlements canReadReferences]
  -[MCMEntitlements requestsNoContainer]
  -[MCMEntitlements containerRequiredIdentifier]
  -[MCMEntitlements isAllowedToTest]
  -[MCMEntitlements isAllowedToAccessCodesignMapping]
  -[MCMEntitlements isAllowedToStageSharedContent]
  -[MCMEntitlements allowed]
  -[MCMEntitlements privileged]
  -[MCMEntitlements canRepair]
  -[MCMEntitlements isEntitledForLookupWithClass:identifier:]
  -[MCMEntitlements isAllowedToControlCaches]
  -[MCMEntitlements testabilityAllowed]
  -[MCMEntitlements isAllowedToAccessUserAssets]
  -[MCMEntitlements systemGroupIdentifiers]
  -[MCMEntitlements canManageUserManagedAssets]
  -[MCMEntitlements canDeleteContainerContent]
  -[MCMEntitlements isAllowedToStartDataMigration]


MCMResultOperationDelete : MCMResultWithContainersArrayBase
 @property  NSObject<OS_xpc_object> *xpcToMerge

  // instance methods
  -[MCMResultOperationDelete .cxx_destruct]
  -[MCMResultOperationDelete encodeResultOntoReply:]
  -[MCMResultOperationDelete mergeWithXPCResult:]
  -[MCMResultOperationDelete xpcToMerge]
  -[MCMResultOperationDelete setXpcToMerge:]


MCMCommandGetCodeSignMapping : MCMCommand <MCMParametersWithIdentifier>
 @property  NSString *identifier

  // class methods
  +[MCMCommandGetCodeSignMapping command]
  +[MCMCommandGetCodeSignMapping incomingMessageClass]

  // instance methods
  -[MCMCommandGetCodeSignMapping preflightClientAllowed]
  -[MCMCommandGetCodeSignMapping identifier]
  -[MCMCommandGetCodeSignMapping initWithMessage:context:reply:]
  -[MCMCommandGetCodeSignMapping execute]
  -[MCMCommandGetCodeSignMapping .cxx_destruct]


MCMResultWithContainerBase : MCMResultBase <MCMResultWithContainer>
 @property  NSUUID *uuid
 @property  NSString *containerPathIdentifier
 @property  NSString *identifier
 @property  unsigned long containerClass
 @property  MCMPOSIXUser *posixUser
 @property  NSString *personaUniqueString
 @property  char * sandboxToken
 @property  BOOL existed
 @property  NSURL *url
 @property  NSDictionary *info
 @property  NSArray *resolvedLinks
 @property  BOOL transient
 @property  MCMError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMResultWithContainerBase identifier]
  -[MCMResultWithContainerBase resolvedLinks]
  -[MCMResultWithContainerBase containerPathIdentifier]
  -[MCMResultWithContainerBase initWithContainerPath:containerIdentity:uuid:sandboxToken:includePath:]
  -[MCMResultWithContainerBase sandboxToken]
  -[MCMResultWithContainerBase dealloc]
  -[MCMResultWithContainerBase uuid]
  -[MCMResultWithContainerBase .cxx_destruct]
  -[MCMResultWithContainerBase posixUser]
  -[MCMResultWithContainerBase initWithUUID:containerPathIdentifier:identifier:containerClass:POSIXUser:personaUniqueString:sandboxToken:existed:url:info:resolvedLinks:transient:]
  -[MCMResultWithContainerBase initWithMetadata:sandboxToken:includePath:includeInfo:resolvedLinks:]
  -[MCMResultWithContainerBase containerClass]
  -[MCMResultWithContainerBase info]
  -[MCMResultWithContainerBase personaUniqueString]
  -[MCMResultWithContainerBase existed]
  -[MCMResultWithContainerBase url]
  -[MCMResultWithContainerBase encodeResultOntoReply:]
  -[MCMResultWithContainerBase transient]


MCMCommandCreateOrLookupWithBundle : MCMCommand <MCMParametersCreateOrLookupWithBundle>
 @property  BOOL createIfNecessary
 @property  BOOL transient
 @property  BOOL issueSandboxExtension
 @property  r* sandboxToken
 @property  NSURL *bundleURL
 @property  NSURL *executableURL

  // class methods
  +[MCMCommandCreateOrLookupWithBundle command]
  +[MCMCommandCreateOrLookupWithBundle incomingMessageClass]

  // instance methods
  -[MCMCommandCreateOrLookupWithBundle preflightClientAllowed]
  -[MCMCommandCreateOrLookupWithBundle executableURL]
  -[MCMCommandCreateOrLookupWithBundle bundleURL]
  -[MCMCommandCreateOrLookupWithBundle sandboxToken]
  -[MCMCommandCreateOrLookupWithBundle initWithMessage:context:reply:]
  -[MCMCommandCreateOrLookupWithBundle execute]
  -[MCMCommandCreateOrLookupWithBundle .cxx_destruct]
  -[MCMCommandCreateOrLookupWithBundle transient]
  -[MCMCommandCreateOrLookupWithBundle createIfNecessary]
  -[MCMCommandCreateOrLookupWithBundle issueSandboxExtension]


MCMXPCMessageDeleteUserManagedAsset : MCMXPCMessageWithContainerBase <MCMParametersDeleteUserManagedAsset>
 @property  NSString *sourceRelativePath
 @property  MCMContainerIdentity *containerIdentity

  // instance methods
  -[MCMXPCMessageDeleteUserManagedAsset .cxx_destruct]
  -[MCMXPCMessageDeleteUserManagedAsset initWithXPCObject:context:error:]
  -[MCMXPCMessageDeleteUserManagedAsset sourceRelativePath]


MCMResultWithContainersArrayBase : MCMResultBase <MCMResultWithContainersArray>
 @property  MCMClientIdentity *clientIdentity
 @property  BOOL skipSandboxExtensions
 @property  NSArray *containerPaths
 @property  NSArray *containerIdentities
 @property  NSArray *containers
 @property  NSArray *resolvedLinks
 @property  BOOL includePath
 @property  BOOL includeInfo
 @property  MCMError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMResultWithContainersArrayBase containers]
  -[MCMResultWithContainersArrayBase resolvedLinks]
  -[MCMResultWithContainersArrayBase clientIdentity]
  -[MCMResultWithContainersArrayBase .cxx_destruct]
  -[MCMResultWithContainersArrayBase includeInfo]
  -[MCMResultWithContainersArrayBase encodeResultOntoReply:]
  -[MCMResultWithContainersArrayBase includePath]
  -[MCMResultWithContainersArrayBase containerPaths]
  -[MCMResultWithContainersArrayBase containerIdentities]
  -[MCMResultWithContainersArrayBase initWithContainers:resolvedLinks:includePath:includeInfo:clientIdentity:skipSandboxExtensions:]
  -[MCMResultWithContainersArrayBase initWithContainerPaths:containerIdentities:includePath:clientIdentity:skipSandboxExtensions:]
  -[MCMResultWithContainersArrayBase skipSandboxExtensions]


MCMClientCodeSignInfo : NSObject <MCMClientCodeSignInfo>
 @property  NSData *cdhash
 @property  <MCMEntitlements> *entitlements
 @property  NSString *identifier
 @property  BOOL cached
 @property  BOOL isSigned
 @property  BOOL isSignatureValid
 @property  BOOL isPlatformBinary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMClientCodeSignInfo identifier]
  -[MCMClientCodeSignInfo cdhash]
  -[MCMClientCodeSignInfo entitlements]
  -[MCMClientCodeSignInfo isEqualToClientCodeSignInfo:]
  -[MCMClientCodeSignInfo .cxx_destruct]
  -[MCMClientCodeSignInfo clientCodeSignInfoByChangingCached:]
  -[MCMClientCodeSignInfo isSigned]
  -[MCMClientCodeSignInfo copyWithZone:]
  -[MCMClientCodeSignInfo cached]
  -[MCMClientCodeSignInfo isSignatureValid]
  -[MCMClientCodeSignInfo isPlatformBinary]
  -[MCMClientCodeSignInfo isEqual:]
  -[MCMClientCodeSignInfo initWithCDHash:entitlements:identifier:status:]


MCMResultFetchPersonaUniqueStrings : MCMResultBase
 @property  NSSet *personaUniqueStrings

  // instance methods
  -[MCMResultFetchPersonaUniqueStrings .cxx_destruct]
  -[MCMResultFetchPersonaUniqueStrings encodeResultOntoReply:]
  -[MCMResultFetchPersonaUniqueStrings initWithPersonaUniqueStrings:]
  -[MCMResultFetchPersonaUniqueStrings personaUniqueStrings]
  -[MCMResultFetchPersonaUniqueStrings setPersonaUniqueStrings:]


MCMMigrationStatus : NSObject
 @property  NSMutableDictionary *migrationInfo
 @property  NSURL *migrationFileURL

  // class methods
  +[MCMMigrationStatus currentBuildVersion]

  // instance methods
  -[MCMMigrationStatus setMigrationInfo:]
  -[MCMMigrationStatus hasMigrationOccurredForType:]
  -[MCMMigrationStatus setMigrationFileURL:]
  -[MCMMigrationStatus migrationInfo]
  -[MCMMigrationStatus _removeMarkerFileWithName:libraryPath:]
  -[MCMMigrationStatus writeCurrentBuildInfoToDisk]
  -[MCMMigrationStatus _readStatusFromMarkerFileWithName:andSetAsType:libraryPath:]
  -[MCMMigrationStatus .cxx_destruct]
  -[MCMMigrationStatus initForSystemMigration]
  -[MCMMigrationStatus _writeMigrationStatusToDisk]
  -[MCMMigrationStatus _iso8601DateFormatter]
  -[MCMMigrationStatus setMigrationCompleteForType:]
  -[MCMMigrationStatus _readMigrationStatusFromDisk]
  -[MCMMigrationStatus initForMobileUserMigration]
  -[MCMMigrationStatus migrationFileURL]
  -[MCMMigrationStatus isBuildUpgrade]
  -[MCMMigrationStatus _migrateFromManyMarkerFilesToOneWithLibraryPath:]
  -[MCMMigrationStatus init]


MCMContainerPath : NSObject <MCMContainerPathHasComponents>
 @property  NSString *containerRootComponent
 @property  NSString *containerDataComponent
 @property  NSURL *containerRootURL
 @property  NSURL *containerDataURL
 @property  NSURL *metadataURL
 @property  NSString *containerPathIdentifier
 @property  MCMContainerClassPath *containerClassPath
 @property  MCMPOSIXUser *rootPOSIXOwner
 @property  unsigned short rootPOSIXMode
 @property  MCMPOSIXUser *dataPOSIXOwner
 @property  unsigned short dataPOSIXMode
 @property  MCMPOSIXUser *schemaPOSIXOwner
 @property  unsigned short schemaPOSIXMode
 @property  BOOL exists
 @property  BOOL transient
 @property  MCMUserIdentity *userIdentity
 @property  unsigned long containerClass
 @property  NSURL *baseURL
 @property  NSURL *categoryURL
 @property  NSURL *classURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MCMContainerPath containerPathFromURL:containerClassPath:relativePath:]
  +[MCMContainerPath _posixOwnerForContainerSubdirectories:user:]
  +[MCMContainerPath containerPathIdentifierForCodeSignIdentifier:containerClass:]
  +[MCMContainerPath _containerClassPathClass]
  +[MCMContainerPath containerPathForContainerClassPath:containerPathIdentifier:]
  +[MCMContainerPath containerPathForUserIdentity:containerClass:containerPathIdentifier:]
  +[MCMContainerPath containerPathForContainerIdentity:containerPathIdentifier:]

  // instance methods
  -[MCMContainerPath containerPathForRealPath]
  -[MCMContainerPath containerDataComponent]
  -[MCMContainerPath exists]
  -[MCMContainerPath rootPOSIXOwner]
  -[MCMContainerPath initWithContainerClassPath:containerPathIdentifier:containerRootComponent:containerDataComponent:]
  -[MCMContainerPath categoryURL]
  -[MCMContainerPath containerClassPath]
  -[MCMContainerPath classURL]
  -[MCMContainerPath _createURLIfNecessary:mode:owner:dataProtectionClass:exists:error:]
  -[MCMContainerPath _obj1:isEqualToObj2:]
  -[MCMContainerPath createIfNecessaryWithDataProtectionClass:error:]
  -[MCMContainerPath dataPOSIXMode]
  -[MCMContainerPath isEqualToContainerPath:]
  -[MCMContainerPath containerPathIdentifier]
  -[MCMContainerPath containerRootComponent]
  -[MCMContainerPath rootPOSIXMode]
  -[MCMContainerPath dataPOSIXOwner]
  -[MCMContainerPath metadataURL]
  -[MCMContainerPath containerRootURL]
  -[MCMContainerPath setExists:]
  -[MCMContainerPath containerDataURL]
  -[MCMContainerPath createDataURLIfNecessaryWithDataProtectionClass:error:]
  -[MCMContainerPath schemaPOSIXOwner]
  -[MCMContainerPath baseURL]
  -[MCMContainerPath schemaPOSIXMode]
  -[MCMContainerPath .cxx_destruct]
  -[MCMContainerPath userIdentity]
  -[MCMContainerPath containerClass]
  -[MCMContainerPath copyWithZone:]
  -[MCMContainerPath transient]
  -[MCMContainerPath isEqual:]


MCMContainerStagingPath : MCMContainerPath
 @property  MCMContainerPath *destinationContainerPath

  // class methods
  +[MCMContainerStagingPath stagingContainerPathForDestinationContainerPath:stagingPathIdentifier:]
  +[MCMContainerStagingPath _containerClassPathClass]

  // instance methods
  -[MCMContainerStagingPath destinationContainerPath]
  -[MCMContainerStagingPath setDestinationContainerPath:]
  -[MCMContainerStagingPath .cxx_destruct]


MCMContainerTransientPath : MCMContainerPath
  // class methods
  +[MCMContainerTransientPath _containerClassPathClass]


MCMContainerDeletedPath : MCMContainerPath
  // class methods
  +[MCMContainerDeletedPath _containerClassPathClass]


MCMContainerMigrator : NSObject
 @property  MCMUserIdentityCache *userIdentityCache

  // class methods
  +[MCMContainerMigrator sharedInstance]

  // instance methods
  -[MCMContainerMigrator .cxx_destruct]
  -[MCMContainerMigrator userIdentityCache]
  -[MCMContainerMigrator initWithUserIdentityCache:]
  -[MCMContainerMigrator _performEntitlementBypassListMigrationWithError:]
  -[MCMContainerMigrator _checkIfDeviceMayNeedSystemContainerACLMigration:]
  -[MCMContainerMigrator _migrateBundleContainersWithError:]
  -[MCMContainerMigrator performSynchronousBuildUpgradeMigration:context:error:]
  -[MCMContainerMigrator setUserIdentityCache:]


MCMCommandInfoValueForKey : MCMCommand <MCMParametersWithKey>
 @property  NSString *key
 @property  MCMConcreteContainerIdentity *concreteContainerIdentity

  // class methods
  +[MCMCommandInfoValueForKey command]
  +[MCMCommandInfoValueForKey incomingMessageClass]

  // instance methods
  -[MCMCommandInfoValueForKey preflightClientAllowed]
  -[MCMCommandInfoValueForKey initWithMessage:context:reply:]
  -[MCMCommandInfoValueForKey execute]
  -[MCMCommandInfoValueForKey .cxx_destruct]
  -[MCMCommandInfoValueForKey key]
  -[MCMCommandInfoValueForKey concreteContainerIdentity]
  -[MCMCommandInfoValueForKey initWithKey:concreteContainerIdentity:context:resultPromise:]
  -[MCMCommandInfoValueForKey infoValueForKeyWithError:]


MCMResultLinkExists : MCMResultBase
 @property  BOOL exists

  // instance methods
  -[MCMResultLinkExists exists]
  -[MCMResultLinkExists encodeResultOntoReply:]
  -[MCMResultLinkExists initWithExists:]


MCMCommandSetDataProtection : MCMCommand <MCMParametersSetDataProtection>
 @property  BOOL thirdParty
 @property  int dataProtectionClass
 @property  BOOL retryIfLocked
 @property  MCMContainerIdentity *containerIdentity

  // class methods
  +[MCMCommandSetDataProtection command]
  +[MCMCommandSetDataProtection incomingMessageClass]

  // instance methods
  -[MCMCommandSetDataProtection preflightClientAllowed]
  -[MCMCommandSetDataProtection initWithMessage:context:reply:]
  -[MCMCommandSetDataProtection containerIdentity]
  -[MCMCommandSetDataProtection execute]
  -[MCMCommandSetDataProtection .cxx_destruct]
  -[MCMCommandSetDataProtection dataProtectionClass]
  -[MCMCommandSetDataProtection isThirdParty]
  -[MCMCommandSetDataProtection retryIfLocked]


MCMResultWithLinkBase : MCMResultBase <MCMResultWithLink>
 @property  MCMConcreteContainerIdentityForLibsystem *containerAIdentity
 @property  MCMConcreteContainerIdentityForLibsystem *containerBIdentity
 @property  unsigned long attributes
 @property  BOOL implied
 @property  MCMError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMResultWithLinkBase attributes]
  -[MCMResultWithLinkBase .cxx_destruct]
  -[MCMResultWithLinkBase encodeResultOntoReply:]
  -[MCMResultWithLinkBase containerAIdentity]
  -[MCMResultWithLinkBase containerBIdentity]
  -[MCMResultWithLinkBase initWithResolvedLink:]
  -[MCMResultWithLinkBase initWithContainerAIdentity:containerBIdentity:attributes:implied:]
  -[MCMResultWithLinkBase encodeLinkOntoXPCObject:]
  -[MCMResultWithLinkBase implied]


MCMApplicationTerminationAssertion : NSObject
 @property  RBSTerminationAssertion *termAssertion

  // instance methods
  -[MCMApplicationTerminationAssertion dealloc]
  -[MCMApplicationTerminationAssertion .cxx_destruct]
  -[MCMApplicationTerminationAssertion invalidate]
  -[MCMApplicationTerminationAssertion initWithBundleIdentifier:reason:]
  -[MCMApplicationTerminationAssertion termAssertion]
  -[MCMApplicationTerminationAssertion setTermAssertion:]


MCMSQLiteDB : NSObject
 @property  <MCMSQLiteDBCodeSigningPeerageDelegate> *peerageDelegate
 @property  ^{sqlite3=} db
 @property  NSURL *url

  // class methods
  +[MCMSQLiteDB openDBWithURL:error:]
  +[MCMSQLiteDB moveDBWithURL:toURL:error:]

  // instance methods
  -[MCMSQLiteDB closeDB]
  -[MCMSQLiteDB _insertCodeSigningInfo:forIdentifier:error:]
  -[MCMSQLiteDB _performSingleParameterQuery:withTextInput:error:]
  -[MCMSQLiteDB _insertCodeSigningData:forIdentifier:error:]
  -[MCMSQLiteDB setUrl:]
  -[MCMSQLiteDB setDb:]
  -[MCMSQLiteDB identifiersWithError:]
  -[MCMSQLiteDB initWithURL:error:]
  -[MCMSQLiteDB _performInsertOrUpdateQuery:withCodeSigningEntry:forIdentifier:isUpdate:error:]
  -[MCMSQLiteDB _codeSigningEntryFromStatementRow:error:]
  -[MCMSQLiteDB db]
  -[MCMSQLiteDB dealloc]
  -[MCMSQLiteDB codeSigningEntryWithIdentifier:error:]
  -[MCMSQLiteDB .cxx_destruct]
  -[MCMSQLiteDB enumerateIdentifiersAndCodeSigningInfoUsingBlock:]
  -[MCMSQLiteDB deleteAllAdvanceCopiesOfCodeSigningEntriesWithError:]
  -[MCMSQLiteDB _selectCodeSigningEntryWithIdentifier:error:]
  -[MCMSQLiteDB addCodeSigningEntry:withIdentifier:error:]
  -[MCMSQLiteDB setPeerageDelegate:]
  -[MCMSQLiteDB peerageDelegate]
  -[MCMSQLiteDB _insertChildIdentifier:forParentIdentifier:error:]
  -[MCMSQLiteDB invalidateCodeSigningWithIdentifier:error:]
  -[MCMSQLiteDB url]
  -[MCMSQLiteDB childParentMapWithError:]
  -[MCMSQLiteDB deleteCodeSigningEntryWithIdentifier:error:]
  -[MCMSQLiteDB invalidateCodeSigningForIdentifierAndAllChildren:error:]
  -[MCMSQLiteDB _performSingleParameterQuery:withTextInput:expectedChanges:error:]
  -[MCMSQLiteDB _performTwoParameterQuery:withTextInputOne:andTextInputTwo:expectedChanges:error:]
  -[MCMSQLiteDB parentIdentifierForChildIdentifier:error:]
  -[MCMSQLiteDB _sqliteExec:error:]
  -[MCMSQLiteDB _deleteCodeSigningWithIdentifier:error:]
  -[MCMSQLiteDB childIdentifiersForParentIdentifier:error:]


MCMContainerFactory : NSObject <MCMContainerFactory>
 @property  <MCMContainerCache> *cache
 @property  MCMClientIdentity *clientIdentity
 @property  MCMUserIdentityCache *userIdentityCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMContainerFactory _createContainerForContainerIdentity:error:]
  -[MCMContainerFactory clientIdentity]
  -[MCMContainerFactory upgradeContainer:clientIdentity:error:]
  -[MCMContainerFactory cache]
  -[MCMContainerFactory deleteURL:error:]
  -[MCMContainerFactory .cxx_destruct]
  -[MCMContainerFactory userIdentityCache]
  -[MCMContainerFactory isAppropriatePersonaForContainerClass:]
  -[MCMContainerFactory initWithContainerCache:clientIdentity:userIdentityCache:]
  -[MCMContainerFactory containerForContainerIdentity:createIfNecessary:updateLinks:error:]
  -[MCMContainerFactory deleteURL:reclaimSoon:error:]


MCMContainerSchema : NSObject
 @property  <MCMMetadataMinimal> *metadata
 @property  MCMContainerSchemaContext *context
 @property  NSNumber *latestSchemaVersion

  // class methods
  +[MCMContainerSchema schemaIsUpToDateForIdentifier:containerClass:currentSchemaVersion:latestSchemaVersion:]
  +[MCMContainerSchema containerSchemaWithMetadata:dataProtectionClass:libraryRepair:]

  // instance methods
  -[MCMContainerSchema .cxx_destruct]
  -[MCMContainerSchema context]
  -[MCMContainerSchema metadata]
  -[MCMContainerSchema initWithMetadata:dataProtectionClass:libraryRepair:]
  -[MCMContainerSchema writeSchemaFromVersion:toTargetVersion:error:]
  -[MCMContainerSchema writeSchemaToTargetVersion:error:]
  -[MCMContainerSchema _actionArgsAfterInterpolationOnActionArgs:replacements:]
  -[MCMContainerSchema _interpolationReplacements]
  -[MCMContainerSchema _actionsFromVersion:toTargetVersion:context:]
  -[MCMContainerSchema _executeActions:error:]
  -[MCMContainerSchema _sanityCheckPassesForBundleID:error:]
  -[MCMContainerSchema latestSchemaVersion]


MCMLibraryRepair : NSObject
 @property  MCMManagedPathRegistry *registry
 @property  BOOL pathsCreated

  // instance methods
  -[MCMLibraryRepair registry]
  -[MCMLibraryRepair fixPermissionsWithManagedPath:uid:gid:error:]
  -[MCMLibraryRepair _withEveryoneDenyDeleteACLDoBlock:]
  -[MCMLibraryRepair _fixOwnershipOnFD:FTSENT:stat:statfs:uid:gid:error:]
  -[MCMLibraryRepair _denyDeleteACLFilesecWithACLText:]
  -[MCMLibraryRepair _fixFlagsOnFD:FTSENT:stat:error:]
  -[MCMLibraryRepair .cxx_destruct]
  -[MCMLibraryRepair performGenericRepairWithError:]
  -[MCMLibraryRepair managedPathsHaveChanged]
  -[MCMLibraryRepair _fixPOSIXPermsOnFD:FTSENT:stat:error:]
  -[MCMLibraryRepair _canRepairLocally]
  -[MCMLibraryRepair _removeACLFilesec]
  -[MCMLibraryRepair initWithManagedPathRegistry:]
  -[MCMLibraryRepair createPathsIfNecessaryWithError:]
  -[MCMLibraryRepair pathsCreated]
  -[MCMLibraryRepair _managedPathsForGenericRepair]
  -[MCMLibraryRepair _fixPOSIXBitsOnFD:FTSENT:stat:error:]
  -[MCMLibraryRepair _fixACLOnFD:removeACLFilesec:denyDeleteFilesec:denyDeleteText:path:error:]
  -[MCMLibraryRepair fixAndRetryIfPermissionsErrorWithURL:error:duringBlock:]
  -[MCMLibraryRepair setPathsCreated:]


MCMLibraryRepairForUser : MCMLibraryRepair
 @property  MCMManagedUserPathRegistry *userRegistry

  // instance methods
  -[MCMLibraryRepairForUser performRepairForContainerPath:containerIdentifier:error:]
  -[MCMLibraryRepairForUser userRegistry]
  -[MCMLibraryRepairForUser .cxx_destruct]
  -[MCMLibraryRepairForUser _managedPathFromContainerClassPath:registry:]
  -[MCMLibraryRepairForUser _canRepairLocally]
  -[MCMLibraryRepairForUser fixAndRetryIfPermissionsErrorWithURL:containerPath:containerIdentifier:error:duringBlock:]
  -[MCMLibraryRepairForUser _setByAddingContainerClassPathsToSet:registry:]
  -[MCMLibraryRepairForUser fixAndRetryIfPermissionsErrorWithURL:containerRootURL:error:duringBlock:]
  -[MCMLibraryRepairForUser _managedPathsForGenericRepair]
  -[MCMLibraryRepairForUser initWithManagedUserPathRegistry:]


MCMResultWithLinksArrayBase : MCMResultBase <MCMResultWithLinksArray>
 @property  NSArray *resolvedLinks
 @property  MCMError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMResultWithLinksArrayBase resolvedLinks]
  -[MCMResultWithLinksArrayBase .cxx_destruct]
  -[MCMResultWithLinksArrayBase encodeResultOntoReply:]
  -[MCMResultWithLinksArrayBase initWithResolvedLinks:]
  -[MCMResultWithLinksArrayBase encodeLink:ontoXPCObject:]


MCMContainerCache : NSObject <MCMUserIdentityCacheObserver, MCMContainerCache>
 @property  <MCMChildParentMapCache> *childParentMapCache
 @property  NSObject<OS_dispatch_queue> *queue
 @property  Class cacheEntryClass
 @property  Class classCacheClass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  MCMUserIdentityCache *userIdentityCache

  // instance methods
  -[MCMContainerCache _sandboxSetSentinelForContainerClass:]
  -[MCMContainerCache addContainerMetadata:error:]
  -[MCMContainerCache _queue_attachSandboxWriteThroughHandlerToContainerClassCache:]
  -[MCMContainerCache cacheEntryClass]
  -[MCMContainerCache _queue_flushCacheForContainerClassPath:]
  -[MCMContainerCache userIdentityCache:didInvalidateUserIdentity:]
  -[MCMContainerCache updateLinksOnContainerCacheEntry:error:]
  -[MCMContainerCache _applyImplicitLinkOnBundleIdentity:dataIdentity:matchingIdentifier:dataContainerClass:userIdentity:]
  -[MCMContainerCache invalidateUserIdentity:]
  -[MCMContainerCache flushCacheForUserIdentity:containerClass:transient:]
  -[MCMContainerCache _concurrent_setSandboxContainerMappingForUserIdentity:identifier:containerClass:url:]
  -[MCMContainerCache _containerClassPathForUserIdentity:containerClass:transient:]
  -[MCMContainerCache _sandboxSentinelExistsForContainerClass:]
  -[MCMContainerCache childParentMapCache]
  -[MCMContainerCache classCacheForContainerIdentity:]
  -[MCMContainerCache entryForContainerIdentity:error:]
  -[MCMContainerCache .cxx_destruct]
  -[MCMContainerCache userIdentityCache:didAddUserIdentity:]
  -[MCMContainerCache userIdentityCache]
  -[MCMContainerCache setContainerClassCache:]
  -[MCMContainerCache removeContainerForUserIdentity:contentClass:identifier:transient:error:]
  -[MCMContainerCache _sandboxSentinelForContainerClass:]
  -[MCMContainerCache _queue_containerClassCacheForContainerClassPath:]
  -[MCMContainerCache _queue_invalidateUserIdentity:]
  -[MCMContainerCache initWithUserIdentityCache:childParentMapCache:classCacheClass:cacheEntryClass:error:]
  -[MCMContainerCache _checkAndRepairLinksToMetadata:recursively:]
  -[MCMContainerCache _queue_containerClassCacheForUserIdentity:containerClass:transient:]
  -[MCMContainerCache _queue_setContainerClassCache:]
  -[MCMContainerCache entriesForUserIdentities:contentClass:transient:error:]
  -[MCMContainerCache initWithUserIdentityCache:childParentMapCache:classCacheClass:cacheEntryClass:queue:]
  -[MCMContainerCache queue]
  -[MCMContainerCache _shouldApplyImplicitLinksToMetadata:]
  -[MCMContainerCache _applyImplicitLinksToMetadata:]
  -[MCMContainerCache _concurrent_shouldRegisterSandboxMappingWithUserIdentity:identifier:childParentMapCache:containerClass:]
  -[MCMContainerCache isWellKnownIdentifier:]
  -[MCMContainerCache classCacheClass]
  -[MCMContainerCache entryForContainerIdentity:classCache:error:]


MCMResultWithURLBase : MCMResultBase <MCMResultWithURL>
 @property  NSURL *url
 @property  NSString *path
 @property  r* sandboxToken
 @property  BOOL existed
 @property  MCMError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCMResultWithURLBase sandboxToken]
  -[MCMResultWithURLBase path]
  -[MCMResultWithURLBase dealloc]
  -[MCMResultWithURLBase .cxx_destruct]
  -[MCMResultWithURLBase initWithPath:existed:sandboxToken:]
  -[MCMResultWithURLBase existed]
  -[MCMResultWithURLBase url]
  -[MCMResultWithURLBase encodeResultOntoReply:]
  -[MCMResultWithURLBase initWithURL:existed:sandboxToken:]


MCMResultRelay : MCMResultBase
 @property  NSObject<OS_xpc_object> *xpcReplyFromRelay

  // instance methods
  -[MCMResultRelay .cxx_destruct]
  -[MCMResultRelay encodeResultOntoReply:]
  -[MCMResultRelay initWithXPCReplyFromRelay:]
  -[MCMResultRelay xpcReplyFromRelay]


MCMResultContainerFromPath : MCMResultWithContainerBase
 @property  NSString *relativePath

  // instance methods
  -[MCMResultContainerFromPath .cxx_destruct]
  -[MCMResultContainerFromPath initWithUUID:containerPathIdentifier:identifier:containerClass:POSIXUser:personaUniqueString:sandboxToken:existed:url:info:resolvedLinks:transient:relativePath:]
  -[MCMResultContainerFromPath encodeResultOntoReply:]
  -[MCMResultContainerFromPath relativePath]
  -[MCMResultContainerFromPath setRelativePath:]


MCMCommandGetLinks : MCMCommand <MCMParametersWithConcreteContainer>
 @property  MCMConcreteContainerIdentity *concreteContainerIdentity

  // class methods
  +[MCMCommandGetLinks command]
  +[MCMCommandGetLinks incomingMessageClass]

  // instance methods
  -[MCMCommandGetLinks preflightClientAllowed]
  -[MCMCommandGetLinks initWithMessage:context:reply:]
  -[MCMCommandGetLinks execute]
  -[MCMCommandGetLinks .cxx_destruct]
  -[MCMCommandGetLinks concreteContainerIdentity]


MCMContainerClassPath : NSObject <MCMContainerPathHasComponents, NSCopying>
 @property  NSString *categoryComponent
 @property  NSString *classComponent
 @property  unsigned long containerClass
 @property  BOOL caseSensitive
 @property  BOOL supportsDataProtection
 @property  BOOL exists
 @property  MCMPOSIXUser *posixOwner
 @property  unsigned short posixMode
 @property  MCMUserIdentity *userIdentity
 @property  NSURL *baseURL
 @property  NSURL *categoryURL
 @property  NSURL *classURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MCMContainerClassPath posixOwnerForContainerClass:user:]
  +[MCMContainerClassPath containerPathTypeClasses]
  +[MCMContainerClassPath _baseURLForUserIdentity:]
  +[MCMContainerClassPath _modeForContainerClass:]
  +[MCMContainerClassPath _categoryComponentForContainerClass:]
  +[MCMContainerClassPath containerPathForUserIdentity:containerClass:]
  +[MCMContainerClassPath _classComponentForContainerClass:]
  +[MCMContainerClassPath containerPathForContainerIdentity:]
  +[MCMContainerClassPath _baseURLForUserIdentity:containerClass:]
  +[MCMContainerClassPath _inLibraryRepairBlock_createURLIfNecessary:mode:owner:dataProtectionClass:exists:error:]

  // instance methods
  -[MCMContainerClassPath supportsDataProtection]
  -[MCMContainerClassPath exists]
  -[MCMContainerClassPath categoryURL]
  -[MCMContainerClassPath classURL]
  -[MCMContainerClassPath _obj1:isEqualToObj2:]
  -[MCMContainerClassPath isEqualToContainerClassPath:]
  -[MCMContainerClassPath initWithBaseURL:categoryComponent:classComponent:containerClass:POSIXOwner:POSIXMode:userIdentity:]
  -[MCMContainerClassPath setExists:]
  -[MCMContainerClassPath baseURL]
  -[MCMContainerClassPath _createURLIfNecessary:mode:owner:dataProtectionClass:error:]
  -[MCMContainerClassPath .cxx_destruct]
  -[MCMContainerClassPath userIdentity]
  -[MCMContainerClassPath containerClass]
  -[MCMContainerClassPath isCaseSensitive]
  -[MCMContainerClassPath categoryComponent]
  -[MCMContainerClassPath createIfNecessaryWithError:]
  -[MCMContainerClassPath posixMode]
  -[MCMContainerClassPath copyWithZone:]
  -[MCMContainerClassPath posixOwner]
  -[MCMContainerClassPath isEqual:]
  -[MCMContainerClassPath classComponent]


MCMContainerClassStagingPath : MCMContainerClassPath
  // class methods
  +[MCMContainerClassStagingPath _stagingComponent]
  +[MCMContainerClassStagingPath stagingGlobalURLWithUserIdentity:]
  +[MCMContainerClassStagingPath containerPathForUserIdentity:containerClass:]
  +[MCMContainerClassStagingPath _globalStagingComponent]
  +[MCMContainerClassStagingPath stagingURLWithUserIdentity:]


MCMContainerClassTransientPath : MCMContainerClassPath
  // class methods
  +[MCMContainerClassTransientPath transientGlobalURL]
  +[MCMContainerClassTransientPath transientGlobalBundleURL]
  +[MCMContainerClassTransientPath _globalTemporaryComponent]
  +[MCMContainerClassTransientPath containerPathForUserIdentity:containerClass:]
  +[MCMContainerClassTransientPath _temporaryComponent]
  +[MCMContainerClassTransientPath transientURLWithUserIdentity:]


MCMContainerClassBackupPath : MCMContainerClassPath
  // class methods
  +[MCMContainerClassBackupPath systemContainerBackupBaseDirectoryWithUserIdentity:]
  +[MCMContainerClassBackupPath systemGroupContainerBackupDirectoryWithUserIdentity:]
  +[MCMContainerClassBackupPath systemContainerBackupDirectoryWithUserIdentity:]


MCMContainerClassDeletedPath : MCMContainerClassPath
  // class methods
  +[MCMContainerClassDeletedPath deletedURLWithUserIdentity:]
  +[MCMContainerClassDeletedPath containerPathForUserIdentity:containerClass:]


MCMCommandRegenerateDirectoryUUID : MCMCommand <MCMParametersWithConcreteContainer>
 @property  MCMConcreteContainerIdentity *concreteContainerIdentity

  // class methods
  +[MCMCommandRegenerateDirectoryUUID command]
  +[MCMCommandRegenerateDirectoryUUID incomingMessageClass]

  // instance methods
  -[MCMCommandRegenerateDirectoryUUID preflightClientAllowed]
  -[MCMCommandRegenerateDirectoryUUID initWithMessage:context:reply:]
  -[MCMCommandRegenerateDirectoryUUID execute]
  -[MCMCommandRegenerateDirectoryUUID .cxx_destruct]
  -[MCMCommandRegenerateDirectoryUUID concreteContainerIdentity]
  -[MCMCommandRegenerateDirectoryUUID initWithConcreteContainerIdentity:context:resultPromise:]
  -[MCMCommandRegenerateDirectoryUUID regenerateDirectoryUUIDNoCacheUpdateWithMetadata:error:]


MCMCommandRecreateContainerStructure : MCMCommand <MCMParametersWithConcreteContainer>
 @property  MCMConcreteContainerIdentity *concreteContainerIdentity

  // class methods
  +[MCMCommandRecreateContainerStructure command]
  +[MCMCommandRecreateContainerStructure incomingMessageClass]

  // instance methods
  -[MCMCommandRecreateContainerStructure preflightClientAllowed]
  -[MCMCommandRecreateContainerStructure initWithMessage:context:reply:]
  -[MCMCommandRecreateContainerStructure execute]
  -[MCMCommandRecreateContainerStructure .cxx_destruct]
  -[MCMCommandRecreateContainerStructure concreteContainerIdentity]
  -[MCMCommandRecreateContainerStructure initWithConcreteContainerIdentity:context:resultPromise:]


MCMXPCMessageWithLinkBase : MCMXPCMessageBase <MCMXPCMessage, MCMParametersWithLink>
 @property  NSObject<OS_xpc_object> *xpcObject
 @property  ^{container_client=*I*II{?=[8I]}iBBB@} proxy
 @property  unsigned int platform
 @property  unsigned int disposition
 @property  unsigned long command
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  MCMResolvedLink *link

  // instance methods
  -[MCMXPCMessageWithLinkBase link]
  -[MCMXPCMessageWithLinkBase .cxx_destruct]
  -[MCMXPCMessageWithLinkBase initWithXPCObject:context:error:]
  -[MCMXPCMessageWithLinkBase disposition]


MCMCommandLinkExists : MCMCommand <MCMParametersLinkExists>
 @property  MCMContainerIdentity *containerAIdentity
 @property  MCMContainerIdentity *containerBIdentity
 @property  unsigned long attributes

  // class methods
  +[MCMCommandLinkExists command]
  +[MCMCommandLinkExists incomingMessageClass]

  // instance methods
  -[MCMCommandLinkExists preflightClientAllowed]
  -[MCMCommandLinkExists attributes]
  -[MCMCommandLinkExists initWithMessage:context:reply:]
  -[MCMCommandLinkExists execute]
  -[MCMCommandLinkExists .cxx_destruct]
  -[MCMCommandLinkExists containerAIdentity]
  -[MCMCommandLinkExists containerBIdentity]


MCMLink : NSObject <NSCopying>
 @property  MCMContainerIdentityMinimal *originContainerIdentity
 @property  MCMContainerIdentityMinimal *containerIdentity
 @property  unsigned long attributes
 @property  BOOL implied

  // class methods
  +[MCMLink linkFromPlist:originContainerIdentity:userIdentityCache:error:]

  // instance methods
  -[MCMLink attributes]
  -[MCMLink plist]
  -[MCMLink containerIdentity]
  -[MCMLink .cxx_destruct]
  -[MCMLink copyWithZone:]
  -[MCMLink isEqual:]
  -[MCMLink implied]
  -[MCMLink initWithOriginContainerIdentity:containerIdentity:attributes:implied:]
  -[MCMLink initWithLibsystemLink:defaultUserIdentity:userIdentityCache:error:]
  -[MCMLink initWithPlist:originContainerIdentity:userIdentityCache:error:]
  -[MCMLink initWithVersion1PlistDictionary:originContainerIdentity:userIdentityCache:error:]
  -[MCMLink linkByMergingWithLink:]
  -[MCMLink linkBySubtractingAttributes:]
  -[MCMLink linkInverted]
  -[MCMLink isEqualToLink:]
  -[MCMLink isFuzzyEqualToLink:]
  -[MCMLink originContainerIdentity]


MCMResolvedLink : MCMLink
 @property  MCMConcreteContainerIdentityForLibsystem *originContainerIdentityForLibsystem
 @property  MCMConcreteContainerIdentityForLibsystem *containerIdentityForLibsystem

  // instance methods
  -[MCMResolvedLink .cxx_destruct]
  -[MCMResolvedLink copyWithZone:]
  -[MCMResolvedLink initWithLibsystemLink:defaultUserIdentity:userIdentityCache:error:]
  -[MCMResolvedLink initWithOriginContainerIdentityForLibsystem:containerIdentityForLibsystem:attributes:implied:]
  -[MCMResolvedLink createLibsystemLinkWithError:]
  -[MCMResolvedLink originContainerIdentityForLibsystem]
  -[MCMResolvedLink containerIdentityForLibsystem]


MCMXPCMessageSetTestLock : MCMXPCMessageBase <MCMParametersSetTestLock>
 @property  unsigned long requestedLocks
 @property  BOOL enable

  // instance methods
  -[MCMXPCMessageSetTestLock enable]
  -[MCMXPCMessageSetTestLock initWithXPCObject:context:error:]
  -[MCMXPCMessageSetTestLock requestedLocks]


MCMCodeSigningEntry : NSObject
 @property  NSDictionary *codeSigningInfo
 @property  NSArray *childBundleIdentifiers
 @property  BOOL invalid
 @property  BOOL placeholder
 @property  BOOL advanceCopy
 @property  BOOL registeredByCaller
 @property  BOOL registeredByKernel
 @property  unsigned long dataContainerClass

  // instance methods
  -[MCMCodeSigningEntry dataContainerClass]
  -[MCMCodeSigningEntry setRegisteredByCaller:]
  -[MCMCodeSigningEntry initWithCodeSigningInfo:]
  -[MCMCodeSigningEntry isInvalid]
  -[MCMCodeSigningEntry setChildBundleIdentifiers:]
  -[MCMCodeSigningEntry setInvalid:]
  -[MCMCodeSigningEntry isRegisteredByKernel]
  -[MCMCodeSigningEntry isPlaceholder]
  -[MCMCodeSigningEntry .cxx_destruct]
  -[MCMCodeSigningEntry codeSigningInfo]
  -[MCMCodeSigningEntry setAdvanceCopy:]
  -[MCMCodeSigningEntry initWithCodeSigningInfo:andDataContainerClass:]
  -[MCMCodeSigningEntry setDataContainerClass:]
  -[MCMCodeSigningEntry childBundleIdentifiers]
  -[MCMCodeSigningEntry setCodeSigningInfo:]
  -[MCMCodeSigningEntry isRegisteredByCaller]
  -[MCMCodeSigningEntry serialize]
  -[MCMCodeSigningEntry setRegisteredByKernel:]
  -[MCMCodeSigningEntry initWithSerializedDictionary:]
  -[MCMCodeSigningEntry setPlaceholder:]
  -[MCMCodeSigningEntry isAdvanceCopy]
  -[MCMCodeSigningEntry isEqual:]


MCMContainerSchemaActionCopyContents : MCMContainerSchemaActionBase <MCMContainerSchemaActionHasSourceAndDestination>
  // class methods
  +[MCMContainerSchemaActionCopyContents actionIdentifier]

  // instance methods
  -[MCMContainerSchemaActionCopyContents .cxx_destruct]
  -[MCMContainerSchemaActionCopyContents performWithError:]
  -[MCMContainerSchemaActionCopyContents initWithSourcePathArgument:destinationPathArgument:context:]


MCMXPCMessageReferencesQuery : MCMXPCMessageWithOwnersAndGroupsBase <MCMParametersReferencesQuery>
 @property  unsigned long explicitFlags
 @property  unsigned int uid
 @property  unsigned long privateFlags
 @property  BOOL createDuringReconciliation
 @property  BOOL deleteDuringReconciliation
 @property  BOOL yesReallyApplyToAll
 @property  MCMUserIdentity *userIdentity

  // instance methods
  -[MCMXPCMessageReferencesQuery uid]
  -[MCMXPCMessageReferencesQuery explicitFlags]
  -[MCMXPCMessageReferencesQuery .cxx_destruct]
  -[MCMXPCMessageReferencesQuery userIdentity]
  -[MCMXPCMessageReferencesQuery privateFlags]
  -[MCMXPCMessageReferencesQuery initWithXPCObject:context:error:]
  -[MCMXPCMessageReferencesQuery createDuringReconciliation]
  -[MCMXPCMessageReferencesQuery deleteDuringReconciliation]
  -[MCMXPCMessageReferencesQuery yesReallyApplyToAll]


MCMCommandReplaceContainer : MCMCommand <MCMParametersReplace>
 @property  BOOL preserveOldPathIdentifier
 @property  BOOL preserveOldInternalUUID
 @property  BOOL asyncReclaim
 @property  MCMConcreteContainerIdentity *containerIdentityOld
 @property  MCMConcreteContainerIdentity *containerIdentityNew

  // class methods
  +[MCMCommandReplaceContainer command]
  +[MCMCommandReplaceContainer _readAndValidateReplaceFileAtUrl:error:]
  +[MCMCommandReplaceContainer recoverFromReplaceOperationsWithError:]
  +[MCMCommandReplaceContainer incomingMessageClass]

  // instance methods
  -[MCMCommandReplaceContainer preflightClientAllowed]
  -[MCMCommandReplaceContainer initWithMessage:context:reply:]
  -[MCMCommandReplaceContainer execute]
  -[MCMCommandReplaceContainer .cxx_destruct]
  -[MCMCommandReplaceContainer containerIdentityOld]
  -[MCMCommandReplaceContainer containerIdentityNew]
  -[MCMCommandReplaceContainer initWithConcreteContainerIdentityOld:concreteContainerIdentityNew:preserveOldPathIdentifier:preserveOldInternalUUID:asyncReclaim:context:resultPromise:]
  -[MCMCommandReplaceContainer _writeToDiskReplaceAt:old:withNew:usingStaging:toDestination:error:]
  -[MCMCommandReplaceContainer preserveOldPathIdentifier]
  -[MCMCommandReplaceContainer preserveOldInternalUUID]
  -[MCMCommandReplaceContainer asyncReclaim]


MCMResultDiskUsageForContainer : MCMResultBase
 @property  unsigned long diskUsageBytes

  // instance methods
  -[MCMResultDiskUsageForContainer encodeResultOntoReply:]
  -[MCMResultDiskUsageForContainer initWithDiskUsageBytes:]
  -[MCMResultDiskUsageForContainer diskUsageBytes]
  -[MCMResultDiskUsageForContainer setDiskUsageBytes:]


MCMCommandCompleteBackgroundTasks : MCMCommand
  // class methods
  +[MCMCommandCompleteBackgroundTasks command]
  +[MCMCommandCompleteBackgroundTasks incomingMessageClass]

  // instance methods
  -[MCMCommandCompleteBackgroundTasks preflightClientAllowed]
  -[MCMCommandCompleteBackgroundTasks execute]


MCMContainerCacheEntry : NSObject <MCMContainerCacheEntry_Internal, MCMContainerCacheEntry>
 @property  MCMFSNode *fsNode
 @property  <MCMMetadata> *metadata
 @property  NSUUID *uuid
 @property  MCMContainerPath *containerPath
 @property  NSNumber *schemaVersion
 @property  MCMUserIdentityCache *userIdentityCache
 @property  <MCMContainerCacheUpdatable> *cache
 @property  NSString *identifier
 @property  BOOL corrupt
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MCMContainerCacheEntry clearAttributesForURL:]
  +[MCMContainerCacheEntry _setSchemaVersion:forSetter:pathForErrorLog:]
  +[MCMContainerCacheEntry setSchemaVersion:forFD:]
  +[MCMContainerCacheEntry schemaVersionForURL:]
  +[MCMContainerCacheEntry UUIDForURL:]
  +[MCMContainerCacheEntry setIdentifier:forURL:]
  +[MCMContainerCacheEntry identifierForFD:]
  +[MCMContainerCacheEntry UUIDForFD:]
  +[MCMContainerCacheEntry _identifierWithGetter:pathForErrorLog:]
  +[MCMContainerCacheEntry schemaVersionForFD:]
  +[MCMContainerCacheEntry clearAttributesForFD:]
  +[MCMContainerCacheEntry setIdentifier:forFD:]
  +[MCMContainerCacheEntry _setUUID:forSetter:pathForErrorLog:]
  +[MCMContainerCacheEntry setUUID:forFD:]
  +[MCMContainerCacheEntry setUUID:forURL:]
  +[MCMContainerCacheEntry setSchemaVersion:forURL:]
  +[MCMContainerCacheEntry _schemaVersionForGetter:pathForErrorLog:]
  +[MCMContainerCacheEntry _setIdentifier:forSetter:pathForErrorLog:]
  +[MCMContainerCacheEntry identifierForURL:]
  +[MCMContainerCacheEntry _UUIDForGetter:pathForErrorLog:]

  // instance methods
  -[MCMContainerCacheEntry setCache:]
  -[MCMContainerCacheEntry identifier]
  -[MCMContainerCacheEntry setCorrupt:]
  -[MCMContainerCacheEntry containerPath]
  -[MCMContainerCacheEntry verify]
  -[MCMContainerCacheEntry fullDescription]
  -[MCMContainerCacheEntry _readMetadataForIdentifier:containerPath:error:]
  -[MCMContainerCacheEntry setContainerPath:]
  -[MCMContainerCacheEntry setFsNode:]
  -[MCMContainerCacheEntry setSchemaVersion:]
  -[MCMContainerCacheEntry schemaVersion]
  -[MCMContainerCacheEntry fsNode]
  -[MCMContainerCacheEntry containerIdentity]
  -[MCMContainerCacheEntry uuid]
  -[MCMContainerCacheEntry cache]
  -[MCMContainerCacheEntry .cxx_destruct]
  -[MCMContainerCacheEntry setUuid:]
  -[MCMContainerCacheEntry userIdentityCache]
  -[MCMContainerCacheEntry setMetadata:]
  -[MCMContainerCacheEntry initWithIdentifier:containerPath:schemaVersion:uuid:metadata:userIdentityCache:]
  -[MCMContainerCacheEntry initWithMetadata:userIdentityCache:]
  -[MCMContainerCacheEntry copyWithZone:]
  -[MCMContainerCacheEntry metadataWithError:]
  -[MCMContainerCacheEntry metadata]
  -[MCMContainerCacheEntry corrupt]
  -[MCMContainerCacheEntry isEqualToContainerCacheEntry:]
  -[MCMContainerCacheEntry metadataMinimal]
  -[MCMContainerCacheEntry isEqual:]


(MobileContainerManagerAdditions)
	// class methods
	+[(MobileContainerManagerAdditions) stringWithFileSystemRepresentation:length:]
	+[(MobileContainerManagerAdditions) stringWithFileSystemRepresentation:]

	// instance methods
	-[(MobileContainerManagerAdditions) containsDotDotPathComponents]
	-[(MobileContainerManagerAdditions) hasPrefixFromArray:]
	-[(MobileContainerManagerAdditions) stringByRedactingHomeContent:]
	-[(MobileContainerManagerAdditions) MCM_isEqualToString:caseSensitive:]

(MCMRedaction)
	// instance methods
	-[(MCMRedaction) redactedDescription]

NSProxy(MCMRedaction)
	// instance methods
	-[NSProxy(MCMRedaction) redactedDescription]

(MobileContainerManagerAdditions)
	// class methods
	+[(MobileContainerManagerAdditions) MCM_dictionaryWithContentsOfURL:options:error:]
	+[(MobileContainerManagerAdditions) MCM_dictionaryWithContentsOfURL:options:fsNode:error:]

	// instance methods
	-[(MobileContainerManagerAdditions) MCM_writeToURL:withOptions:error:]

01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0800 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0540 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
