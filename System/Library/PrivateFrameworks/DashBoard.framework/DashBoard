|| __DATA.__common _DBApp
|| __DATA.__data _OBJC_METACLASS_$__TtC9DashBoard22DBDashboardDimmingView
|| __DATA.__data _OBJC_METACLASS_$__TtC9DashBoard22DBDashboardPlatterView
|| __DATA.__objc_data _OBJC_CLASS_$_DBAnalytics
|| __DATA.__objc_data _OBJC_CLASS_$_DBAnimationSettings
|| __DATA.__objc_data _OBJC_CLASS_$_DBAnimationView
|| __DATA.__objc_data _OBJC_CLASS_$_DBAppDockButton
|| __DATA.__objc_data _OBJC_CLASS_$_DBAppDockItem
|| __DATA.__objc_data _OBJC_CLASS_$_DBAppDockViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBAppHistory
|| __DATA.__objc_data _OBJC_CLASS_$_DBAppToAppAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_DBAppToHomeAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_DBAppToHomeAnimationSettings
|| __DATA.__objc_data _OBJC_CLASS_$_DBApplicationInfo
|| __DATA.__objc_data _OBJC_CLASS_$_DBApplicationLaunchInfo
|| __DATA.__objc_data _OBJC_CLASS_$_DBApplicationSceneViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBBannerAuthority
|| __DATA.__objc_data _OBJC_CLASS_$_DBBooksLeafIcon
|| __DATA.__objc_data _OBJC_CLASS_$_DBBooksLeafIconDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_DBBuddyMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_DBCalendarLeafIcon
|| __DATA.__objc_data _OBJC_CLASS_$_DBCalendarLeafIconDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_DBColorButton
|| __DATA.__objc_data _OBJC_CLASS_$_DBComparison
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboard
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardApplicationSceneEntity
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardEntity
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardHomeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardHomescreenEntity
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardLayoutEngine
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardProxiedApplicationSceneEntity
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardRootViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardSiriEntity
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardStateProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardWorkspaceOwner
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardWorkspaceState
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardWorkspaceStateApplicationSceneChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardWorkspaceStateChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardWorkspaceStateHomescreenChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardWorkspaceStateResolution
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardWorkspaceStateResolver
|| __DATA.__objc_data _OBJC_CLASS_$_DBDashboardWorkspaceStateSiriChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_DBDateFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_DBDateFormatterToken
|| __DATA.__objc_data _OBJC_CLASS_$_DBDateRange
|| __DATA.__objc_data _OBJC_CLASS_$_DBDisclosureMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_DBDisplayManager
|| __DATA.__objc_data _OBJC_CLASS_$_DBEnvironmentConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_DBEvent
|| __DATA.__objc_data _OBJC_CLASS_$_DBFocusAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_DBFocusController
|| __DATA.__objc_data _OBJC_CLASS_$_DBFocusMovementManager
|| __DATA.__objc_data _OBJC_CLASS_$_DBFolderController
|| __DATA.__objc_data _OBJC_CLASS_$_DBFolderView
|| __DATA.__objc_data _OBJC_CLASS_$_DBFromStackedAppAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_DBFromStackedAppAnimationSettings
|| __DATA.__objc_data _OBJC_CLASS_$_DBGarageDoor
|| __DATA.__objc_data _OBJC_CLASS_$_DBHome
|| __DATA.__objc_data _OBJC_CLASS_$_DBHomeKitBoolCharacteristic
|| __DATA.__objc_data _OBJC_CLASS_$_DBHomeKitCharacteristic
|| __DATA.__objc_data _OBJC_CLASS_$_DBHomeKitCharacteristicTypes
|| __DATA.__objc_data _OBJC_CLASS_$_DBHomeKitDoorStateCharacteristic
|| __DATA.__objc_data _OBJC_CLASS_$_DBHomeKitService
|| __DATA.__objc_data _OBJC_CLASS_$_DBHomeKitServiceTypes
|| __DATA.__objc_data _OBJC_CLASS_$_DBHomeManager
|| __DATA.__objc_data _OBJC_CLASS_$_DBHomeToAppAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_DBHomeToAppAnimationSettings
|| __DATA.__objc_data _OBJC_CLASS_$_DBIconBadgeController
|| __DATA.__objc_data _OBJC_CLASS_$_DBIconDropShadowProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DBIconImageCache
|| __DATA.__objc_data _OBJC_CLASS_$_DBIconLabelBackdropView
|| __DATA.__objc_data _OBJC_CLASS_$_DBIconLayoutVehicleDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DBIconListPageControl
|| __DATA.__objc_data _OBJC_CLASS_$_DBIconListView
|| __DATA.__objc_data _OBJC_CLASS_$_DBIconManager
|| __DATA.__objc_data _OBJC_CLASS_$_DBIconModel
|| __DATA.__objc_data _OBJC_CLASS_$_DBIconModelStore
|| __DATA.__objc_data _OBJC_CLASS_$_DBIconScrollView
|| __DATA.__objc_data _OBJC_CLASS_$_DBIconView
|| __DATA.__objc_data _OBJC_CLASS_$_DBInCallWidgetAppIconButton
|| __DATA.__objc_data _OBJC_CLASS_$_DBInCallWidgetAvatarView
|| __DATA.__objc_data _OBJC_CLASS_$_DBInCallWidgetButton
|| __DATA.__objc_data _OBJC_CLASS_$_DBInCallWidgetButtonRingView
|| __DATA.__objc_data _OBJC_CLASS_$_DBInCallWidgetMultiwayTitleButton
|| __DATA.__objc_data _OBJC_CLASS_$_DBInCallWidgetViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBInstrumentCluster
|| __DATA.__objc_data _OBJC_CLASS_$_DBInstrumentClusterRootViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBInstrumentClusterURLHandler
|| __DATA.__objc_data _OBJC_CLASS_$_DBInstrumentClusterWorkspaceOwner
|| __DATA.__objc_data _OBJC_CLASS_$_DBKeybagMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_DBLayerMetadataService
|| __DATA.__objc_data _OBJC_CLASS_$_DBLayoutHelperView
|| __DATA.__objc_data _OBJC_CLASS_$_DBLeafIcon
|| __DATA.__objc_data _OBJC_CLASS_$_DBLeafIconDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_DBLocationManager
|| __DATA.__objc_data _OBJC_CLASS_$_DBLockOutController
|| __DATA.__objc_data _OBJC_CLASS_$_DBLockOutView
|| __DATA.__objc_data _OBJC_CLASS_$_DBLockOutViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBLockOutWindow
|| __DATA.__objc_data _OBJC_CLASS_$_DBMapsNavigationWidgetViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBMapsWidgetViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBMutableDashboardWorkspaceState
|| __DATA.__objc_data _OBJC_CLASS_$_DBMutableWorkspaceStateChangeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DBNavigationStateProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DBNetworkPathMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_DBNotificationView
|| __DATA.__objc_data _OBJC_CLASS_$_DBNotificationViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBNotificationWindow
|| __DATA.__objc_data _OBJC_CLASS_$_DBNowPlayingFocusHighlightButton
|| __DATA.__objc_data _OBJC_CLASS_$_DBNowPlayingIcon
|| __DATA.__objc_data _OBJC_CLASS_$_DBNowPlayingObserver
|| __DATA.__objc_data _OBJC_CLASS_$_DBNowPlayingWidgetViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBOEMIcon
|| __DATA.__objc_data _OBJC_CLASS_$_DBProcessMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_DBRootStatusBarViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBSceneUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_DBScreenshotFlasher
|| __DATA.__objc_data _OBJC_CLASS_$_DBScreenshotManager
|| __DATA.__objc_data _OBJC_CLASS_$_DBScrollButton
|| __DATA.__objc_data _OBJC_CLASS_$_DBSiriMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_DBSiriViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBSmartWidgetCalendarPrediction
|| __DATA.__objc_data _OBJC_CLASS_$_DBSmartWidgetCalendarSource
|| __DATA.__objc_data _OBJC_CLASS_$_DBSmartWidgetEngine
|| __DATA.__objc_data _OBJC_CLASS_$_DBSmartWidgetHomePrediction
|| __DATA.__objc_data _OBJC_CLASS_$_DBSmartWidgetHomeSource
|| __DATA.__objc_data _OBJC_CLASS_$_DBSmartWidgetPrediction
|| __DATA.__objc_data _OBJC_CLASS_$_DBSmartWidgetSource
|| __DATA.__objc_data _OBJC_CLASS_$_DBSmartWidgetView
|| __DATA.__objc_data _OBJC_CLASS_$_DBSmartWidgetViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBSplashScreenAlert
|| __DATA.__objc_data _OBJC_CLASS_$_DBStatusBarButton
|| __DATA.__objc_data _OBJC_CLASS_$_DBStatusBarHomeButton
|| __DATA.__objc_data _OBJC_CLASS_$_DBStatusBarHomeButtonStateManager
|| __DATA.__objc_data _OBJC_CLASS_$_DBStatusBarHostWindow
|| __DATA.__objc_data _OBJC_CLASS_$_DBStatusBarScreenResizeButton
|| __DATA.__objc_data _OBJC_CLASS_$_DBStatusBarSensorIndicatorView
|| __DATA.__objc_data _OBJC_CLASS_$_DBStatusBarStateProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DBStatusBarViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBStatusBarWindow
|| __DATA.__objc_data _OBJC_CLASS_$_DBThermalMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_DBToStackedAppAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_DBToStackedAppAnimationSettings
|| __DATA.__objc_data _OBJC_CLASS_$_DBTodayViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBTodayViewSynchronizedAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_DBTodayViewSynchronizedAnimationManager
|| __DATA.__objc_data _OBJC_CLASS_$_DBUserAlertServer
|| __DATA.__objc_data _OBJC_CLASS_$_DBUserAlertView
|| __DATA.__objc_data _OBJC_CLASS_$_DBUserAlertViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBWallpaperViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBWidgetContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBWidgetFocusRingView
|| __DATA.__objc_data _OBJC_CLASS_$_DBWidgetFocusableView
|| __DATA.__objc_data _OBJC_CLASS_$_DBWidgetSceneViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBWidgetStackViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBWidgetView
|| __DATA.__objc_data _OBJC_CLASS_$_DBWidgetViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DBWorkspace
|| __DATA.__objc_data _OBJC_CLASS_$_DBWorkspaceStateChangeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DBZipArchiver
|| __DATA.__objc_data _OBJC_CLASS_$_DashBoard
|| __DATA.__objc_data _OBJC_CLASS_$__DBAnalyticsAppInfo
|| __DATA.__objc_data _OBJC_CLASS_$__DBAnalyticsChargeInfo
|| __DATA.__objc_data _OBJC_CLASS_$__DBAnalyticsScreenInfo
|| __DATA.__objc_data _OBJC_CLASS_$__DBAnalyticsTimeAccumulator
|| __DATA.__objc_data _OBJC_CLASS_$__DBAppSwitchDosidoAnimation
|| __DATA.__objc_data _OBJC_CLASS_$__DBAppSwitchReducedMotionAnimation
|| __DATA.__objc_data _OBJC_CLASS_$__DBClusterCornerRadiusWindow
|| __DATA.__objc_data _OBJC_CLASS_$__DBCornerRadiusWindow
|| __DATA.__objc_data _OBJC_CLASS_$__DBIconListLayoutProvider
|| __DATA.__objc_data _OBJC_CLASS_$__DBLaunchAppFromHomeReducedMotionAnimation
|| __DATA.__objc_data _OBJC_CLASS_$__DBLaunchAppFromHomeScaleAnimation
|| __DATA.__objc_data _OBJC_CLASS_$__DBLaunchAppFromHomeZoomAnimation
|| __DATA.__objc_data _OBJC_CLASS_$__DBLongPressGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$__DBSuspendAppToHomeReducedMotionAnimation
|| __DATA.__objc_data _OBJC_CLASS_$__DBSuspendAppToHomeScaleAnimation
|| __DATA.__objc_data _OBJC_CLASS_$__DBSuspendAppToHomeZoomAnimation
|| __DATA.__objc_data _OBJC_CLASS_$__DBWidgetState
|| __DATA.__objc_data _OBJC_CLASS_$__DBWorkspaceStateChangeSession
|| __DATA.__objc_data _OBJC_CLASS_$__TtC9DashBoard22DBDashboardDimmingView
|| __DATA.__objc_data _OBJC_CLASS_$__TtC9DashBoard22DBDashboardPlatterView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBAnalytics
|| __DATA.__objc_data _OBJC_METACLASS_$_DBAnimationSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_DBAnimationView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBAppDockButton
|| __DATA.__objc_data _OBJC_METACLASS_$_DBAppDockItem
|| __DATA.__objc_data _OBJC_METACLASS_$_DBAppDockViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBAppHistory
|| __DATA.__objc_data _OBJC_METACLASS_$_DBAppToAppAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_DBAppToHomeAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_DBAppToHomeAnimationSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_DBApplicationInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_DBApplicationLaunchInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_DBApplicationSceneViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBBannerAuthority
|| __DATA.__objc_data _OBJC_METACLASS_$_DBBooksLeafIcon
|| __DATA.__objc_data _OBJC_METACLASS_$_DBBooksLeafIconDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_DBBuddyMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_DBCalendarLeafIcon
|| __DATA.__objc_data _OBJC_METACLASS_$_DBCalendarLeafIconDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_DBColorButton
|| __DATA.__objc_data _OBJC_METACLASS_$_DBComparison
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboard
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardApplicationSceneEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardHomeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardHomescreenEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardLayoutEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardProxiedApplicationSceneEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardRootViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardSiriEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardStateProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardWorkspaceOwner
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardWorkspaceState
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardWorkspaceStateApplicationSceneChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardWorkspaceStateChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardWorkspaceStateHomescreenChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardWorkspaceStateResolution
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardWorkspaceStateResolver
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDashboardWorkspaceStateSiriChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDateFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDateFormatterToken
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDateRange
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDisclosureMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_DBDisplayManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DBEnvironmentConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_DBEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_DBFocusAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_DBFocusController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBFocusMovementManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DBFolderController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBFolderView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBFromStackedAppAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_DBFromStackedAppAnimationSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_DBGarageDoor
|| __DATA.__objc_data _OBJC_METACLASS_$_DBHome
|| __DATA.__objc_data _OBJC_METACLASS_$_DBHomeKitBoolCharacteristic
|| __DATA.__objc_data _OBJC_METACLASS_$_DBHomeKitCharacteristic
|| __DATA.__objc_data _OBJC_METACLASS_$_DBHomeKitCharacteristicTypes
|| __DATA.__objc_data _OBJC_METACLASS_$_DBHomeKitDoorStateCharacteristic
|| __DATA.__objc_data _OBJC_METACLASS_$_DBHomeKitService
|| __DATA.__objc_data _OBJC_METACLASS_$_DBHomeKitServiceTypes
|| __DATA.__objc_data _OBJC_METACLASS_$_DBHomeManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DBHomeToAppAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_DBHomeToAppAnimationSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_DBIconBadgeController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBIconDropShadowProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DBIconImageCache
|| __DATA.__objc_data _OBJC_METACLASS_$_DBIconLabelBackdropView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBIconLayoutVehicleDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DBIconListPageControl
|| __DATA.__objc_data _OBJC_METACLASS_$_DBIconListView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBIconManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DBIconModel
|| __DATA.__objc_data _OBJC_METACLASS_$_DBIconModelStore
|| __DATA.__objc_data _OBJC_METACLASS_$_DBIconScrollView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBIconView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBInCallWidgetAppIconButton
|| __DATA.__objc_data _OBJC_METACLASS_$_DBInCallWidgetAvatarView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBInCallWidgetButton
|| __DATA.__objc_data _OBJC_METACLASS_$_DBInCallWidgetButtonRingView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBInCallWidgetMultiwayTitleButton
|| __DATA.__objc_data _OBJC_METACLASS_$_DBInCallWidgetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBInstrumentCluster
|| __DATA.__objc_data _OBJC_METACLASS_$_DBInstrumentClusterRootViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBInstrumentClusterURLHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_DBInstrumentClusterWorkspaceOwner
|| __DATA.__objc_data _OBJC_METACLASS_$_DBKeybagMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_DBLayerMetadataService
|| __DATA.__objc_data _OBJC_METACLASS_$_DBLayoutHelperView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBLeafIcon
|| __DATA.__objc_data _OBJC_METACLASS_$_DBLeafIconDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_DBLocationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DBLockOutController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBLockOutView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBLockOutViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBLockOutWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_DBMapsNavigationWidgetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBMapsWidgetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBMutableDashboardWorkspaceState
|| __DATA.__objc_data _OBJC_METACLASS_$_DBMutableWorkspaceStateChangeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DBNavigationStateProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DBNetworkPathMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_DBNotificationView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBNotificationViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBNotificationWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_DBNowPlayingFocusHighlightButton
|| __DATA.__objc_data _OBJC_METACLASS_$_DBNowPlayingIcon
|| __DATA.__objc_data _OBJC_METACLASS_$_DBNowPlayingObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_DBNowPlayingWidgetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBOEMIcon
|| __DATA.__objc_data _OBJC_METACLASS_$_DBProcessMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_DBRootStatusBarViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSceneUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_DBScreenshotFlasher
|| __DATA.__objc_data _OBJC_METACLASS_$_DBScreenshotManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DBScrollButton
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSiriMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSiriViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSmartWidgetCalendarPrediction
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSmartWidgetCalendarSource
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSmartWidgetEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSmartWidgetHomePrediction
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSmartWidgetHomeSource
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSmartWidgetPrediction
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSmartWidgetSource
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSmartWidgetView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSmartWidgetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBSplashScreenAlert
|| __DATA.__objc_data _OBJC_METACLASS_$_DBStatusBarButton
|| __DATA.__objc_data _OBJC_METACLASS_$_DBStatusBarHomeButton
|| __DATA.__objc_data _OBJC_METACLASS_$_DBStatusBarHomeButtonStateManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DBStatusBarHostWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_DBStatusBarScreenResizeButton
|| __DATA.__objc_data _OBJC_METACLASS_$_DBStatusBarSensorIndicatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBStatusBarStateProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DBStatusBarViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBStatusBarWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_DBThermalMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_DBToStackedAppAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_DBToStackedAppAnimationSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_DBTodayViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBTodayViewSynchronizedAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_DBTodayViewSynchronizedAnimationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DBUserAlertServer
|| __DATA.__objc_data _OBJC_METACLASS_$_DBUserAlertView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBUserAlertViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBWallpaperViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBWidgetContainerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBWidgetFocusRingView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBWidgetFocusableView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBWidgetSceneViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBWidgetStackViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBWidgetView
|| __DATA.__objc_data _OBJC_METACLASS_$_DBWidgetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DBWorkspace
|| __DATA.__objc_data _OBJC_METACLASS_$_DBWorkspaceStateChangeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DBZipArchiver
|| __DATA.__objc_data _OBJC_METACLASS_$_DashBoard
|| __DATA.__objc_data _OBJC_METACLASS_$__DBAnalyticsAppInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__DBAnalyticsChargeInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__DBAnalyticsScreenInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__DBAnalyticsTimeAccumulator
|| __DATA.__objc_data _OBJC_METACLASS_$__DBAppSwitchDosidoAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$__DBAppSwitchReducedMotionAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$__DBClusterCornerRadiusWindow
|| __DATA.__objc_data _OBJC_METACLASS_$__DBCornerRadiusWindow
|| __DATA.__objc_data _OBJC_METACLASS_$__DBIconListLayoutProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__DBLaunchAppFromHomeReducedMotionAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$__DBLaunchAppFromHomeScaleAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$__DBLaunchAppFromHomeZoomAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$__DBLongPressGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$__DBSuspendAppToHomeReducedMotionAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$__DBSuspendAppToHomeScaleAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$__DBSuspendAppToHomeZoomAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$__DBWidgetState
|| __DATA.__objc_data _OBJC_METACLASS_$__DBWorkspaceStateChangeSession
|| __DATA.__objc_ivar _OBJC_IVAR_$_DBDashboardWorkspaceState._baseEntity
|| __DATA.__objc_ivar _OBJC_IVAR_$_DBDashboardWorkspaceState._stackedEntity
|| __DATA.__objc_ivar _OBJC_IVAR_$_DBWorkspaceStateChangeRequest._changeItems
|| __DATA.__objc_ivar _OBJC_IVAR_$_DBWorkspaceStateChangeRequest._source
|| __DATA_CONST.__const _CARSessionServerConnectionDiedNotification
|| __DATA_CONST.__const _DBActivationSettingActions
|| __DATA_CONST.__const _DBActivationSettingAnimate
|| __DATA_CONST.__const _DBActivationSettingFailInterval
|| __DATA_CONST.__const _DBActivationSettingForTesting
|| __DATA_CONST.__const _DBActivationSettingLaunchSource
|| __DATA_CONST.__const _DBActivationSettingSuspended
|| __DATA_CONST.__const _DBActivationSettingURL
|| __DATA_CONST.__const _DBActivationSettingUnknown
|| __DATA_CONST.__const _DBActivationSettingWaitForCommit
|| __DATA_CONST.__const _DBAirPlayKeyFocusHeading
|| __DATA_CONST.__const _DBAirPlayKeyHeightPixels
|| __DATA_CONST.__const _DBAirPlayKeyOriginXPixels
|| __DATA_CONST.__const _DBAirPlayKeyOriginYPixels
|| __DATA_CONST.__const _DBAirPlayKeyWidthPixels
|| __DATA_CONST.__const _DBAlertSheetFocusAssertion
|| __DATA_CONST.__const _DBAnalyticsBatteryPercentage
|| __DATA_CONST.__const _DBAnalyticsPreviousSessionEnd
|| __DATA_CONST.__const _DBAnalyticsSessionInterruptKey
|| __DATA_CONST.__const _DBAnalyticsThermalLevel
|| __DATA_CONST.__const _DBAppFocusAssertion
|| __DATA_CONST.__const _DBApplicationDidLaunchNotificationName
|| __DATA_CONST.__const _DBBooksBundleIdentifier
|| __DATA_CONST.__const _DBCalendarBundleIdentifier
|| __DATA_CONST.__const _DBCarPlayAppBundleIdentifier
|| __DATA_CONST.__const _DBCarPlayCurrentIconStateFileNameFormat
|| __DATA_CONST.__const _DBCarPlayDesiredIconStateFileNameFormat
|| __DATA_CONST.__const _DBCarPlayWallpaperBundleIdentifier
|| __DATA_CONST.__const _DBCommandChangeMapZoomLevel
|| __DATA_CONST.__const _DBCommandFocusTransferAccessoryAcquireFocus
|| __DATA_CONST.__const _DBCommandFocusTransferAccessoryGiveFocus
|| __DATA_CONST.__const _DBCommandFocusTransferDeviceOfferFocus
|| __DATA_CONST.__const _DBConnectAnimationRequester
|| __DATA_CONST.__const _DBDashboardBundleIdentifier
|| __DATA_CONST.__const _DBDisplayLayoutElementHomeScreenIdentifier
|| __DATA_CONST.__const _DBDisplayLayoutElementNowPlayingIdentifier
|| __DATA_CONST.__const _DBDisplayLayoutElementOEMIdentifier
|| __DATA_CONST.__const _DBFilterGaussianBlurInputDither
|| __DATA_CONST.__const _DBFilterGaussianBlurInputHardEdges
|| __DATA_CONST.__const _DBFilterGaussianBlurInputNormalizeEdges
|| __DATA_CONST.__const _DBFilterGaussianBlurInputRadius
|| __DATA_CONST.__const _DBFilterGaussianBlurInputRadiusPath
|| __DATA_CONST.__const _DBFilterGaussianBlurName
|| __DATA_CONST.__const _DBFilterMultiplyColorInputColor
|| __DATA_CONST.__const _DBFilterMultiplyColorName
|| __DATA_CONST.__const _DBFilterSaturationInputAmount
|| __DATA_CONST.__const _DBFilterSaturationInputAmountPath
|| __DATA_CONST.__const _DBFilterSaturationName
|| __DATA_CONST.__const _DBHomeScreenBundleIdentifier
|| __DATA_CONST.__const _DBInCallServiceBundleIdentifier
|| __DATA_CONST.__const _DBInstrumentClusterMapsAltURLPrefix
|| __DATA_CONST.__const _DBInstrumentClusterMapsURLPrefix
|| __DATA_CONST.__const _DBLauncherFocusAssertion
|| __DATA_CONST.__const _DBLockOutFocusAssertion
|| __DATA_CONST.__const _DBMapsBundleIdentifier
|| __DATA_CONST.__const _DBMapsDashboardBundleIdentifierSuffix
|| __DATA_CONST.__const _DBMapsWidgetBundleIdentifierSuffix
|| __DATA_CONST.__const _DBMessagesBundleIdentifier
|| __DATA_CONST.__const _DBMobilePhoneBundleIdentifier
|| __DATA_CONST.__const _DBMusicBundleIdentifier
|| __DATA_CONST.__const _DBMusicNowPlayingLaunchURL
|| __DATA_CONST.__const _DBMusicUIServiceBundleIdentifier
|| __DATA_CONST.__const _DBNightModeTesterBundleIdentifier
|| __DATA_CONST.__const _DBNotificationFocusAssertion
|| __DATA_CONST.__const _DBNotificationSuspensionReasonAssistant
|| __DATA_CONST.__const _DBNotificationSuspensionReasonRecordingAlert
|| __DATA_CONST.__const _DBNowPlayingWidgetInteractionNotificationName
|| __DATA_CONST.__const _DBNowPlayingWillAppearNotification
|| __DATA_CONST.__const _DBNowPlayingWillDisappearNotification
|| __DATA_CONST.__const _DBOEMFocusAssertion
|| __DATA_CONST.__const _DBSafeAreaTesterBundleIdentifier
|| __DATA_CONST.__const _DBSettingsBundleIdentifier
|| __DATA_CONST.__const _DBSiriBundleIdentifier
|| __DATA_CONST.__const _DBSmartWidgetPredictionUpdatedNotificationName
|| __DATA_CONST.__const _DBSpringBoardBundleIdentifier
|| __DATA_CONST.__const _DBStatusBarFocusAssertion
|| __DATA_CONST.__const _DBTemplateUIHostBundleIdentifier
|| __DATA_CONST.__const _DBTodayViewSetupRequester
|| __DATA_CONST.__const _DBUIContextMaps
|| __DATA_CONST.__const _DBUIContextMapsDestination
|| __DATA_CONST.__const _DBUIContextMessages
|| __DATA_CONST.__const _DBUIContextModeCommand
|| __DATA_CONST.__const _DBUIContextNowPlaying
|| __DATA_CONST.__const _DBUIContextPhone
|| __DATA_CONST.__const _DBWebKitContentBundleIdentifier
|| __DATA_CONST.__const _kCarPlayHomeBundlePath
|| __DATA_CONST.__const _kDBAppWorkspaceIdentifier
|| __DATA_CONST.__const _kDBClusterWorkspaceIdentifier
|| __DATA_CONST.__const _kDBCornerRadiusKey
|| __DATA_CONST.__const _kDBDashboardWorkspaceIdentifier
|| __DATA_CONST.__const _kDBDisableAutomaticMallocStackLoggingDefaultsKey
|| __DATA_CONST.__const _kDBDisplayManagerWorkspaceIdentifier
|| __DATA_CONST.__const _kDBLaunchWithMallocStackLoggingDefaultsKey
|| __DATA_CONST.__const _kDBSBApplicationBadgeKey
|| __DATA_CONST.__const _kDBStartApplicationBundleIDKey
|| __DATA_CONST.__const _kHomeKitBundlePath
|| __TEXT.__const _DBDisplayLayoutElementLevelApplication
|| __TEXT.__const _DBDisplayLayoutElementLevelFullScreen
|| __TEXT.__const _DBDisplayLayoutElementLevelHomeScreen
|| __TEXT.__const _DBDisplayLayoutElementLevelOverlay
|| __TEXT.__const _DBIconListViewInsets
|| __TEXT.__const _DBIconRowSpacing
|| __TEXT.__const _DBStatusBarSensorIndicatorSize
|| __TEXT.__const _DBWideNowPlayingMinimumWidth
|| __TEXT.__const _DBWidgetSceneLoadingImageSize
|| __TEXT.__const _DashBoardVersionNumber
|| __TEXT.__const _DashBoardVersionString
|| __TEXT.__const _kCarLockOutMetrics
|| __TEXT.__const _kDBDefaultColumnCount
|| __TEXT.__const _kDBDefaultRowCount
|| __TEXT.__const _kDBLocationManagerValidCacheTime
|| __TEXT.__const _kDBMaximumColumnCount
|| __TEXT.__const _kDBMaximumRowCount
|| __TEXT.__const _kDBPageControlHeight
|| __TEXT.__const _kDBStatusBarDockShortAxisLength
|| __TEXT.__const _kDBTodayViewLandscapeMinimumAspectRatio
|| __TEXT.__const _kDBUserAlertMetrics
|| __TEXT.__text _DBAirPlayCornerMaskImageData
|| __TEXT.__text _DBCalendarIconImageWithInfo
|| __TEXT.__text _DBClusterRootSceneIdentifierForDisplayIdentity
|| __TEXT.__text _DBDashboardRootSceneIdentifierForDisplayIdentity
|| __TEXT.__text _DBDescriptionForLockOutMode
|| __TEXT.__text _DBFiveRowKeyboardKeySizeTooSmall
|| __TEXT.__text _DBGenerateUpperLeftCornerImage
|| __TEXT.__text _DBIconImageForBundleIdentifierWithInfo
|| __TEXT.__text _DBIconImageInfoForScale
|| __TEXT.__text _DBLocationAuthorized
|| __TEXT.__text _DBLogForCategory
|| __TEXT.__text _DBSystemAppMain
|| __TEXT.__text _DBUnmaskedCalendarIconImageWithInfo
|| __TEXT.__text _DBUnmaskedIconImageForBundleIdentifierWithInfo
|| __TEXT.__text _NSStringFromCharacteristicState
|| __TEXT.__text _NSStringFromDBThermalLevel
|| __TEXT.__text _NSStringFromDoorState
|| __TEXT.__text _NSStringFromHomeScreenPageType
|| __TEXT.__text _NSStringFromLockoutState
|| __TEXT.__text __pressesContainSelect
__ AssistantServices: _AFLanguageCodeDidChangeNotification
__ AssistantServices: _AFPreferencesDidChangeNotification
__ AssistantServices: _AFSiriCarPlayAnnounceEnablementTypeGetName
__ AssistantServices: _OBJC_CLASS_$_AFConnection
__ AssistantServices: _OBJC_CLASS_$_AFPreferences
__ AudioToolbox: _AudioServicesPlaySystemSoundWithCompletion
__ BackBoardServices: _BKSHIDServicesCancelButtonEventsFromSenderID
__ BackBoardServices: _BKSTouchDeliveryPolicyServerGetProxyWithErrorHandler
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDEventDeferringToken
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDEventDeliveryManager
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDEventDescriptor
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDEventDiscreteDispatchingRule
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDEventDispatchingTarget
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDEventDisplay
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDEventKeyboardDescriptor
__ BackBoardServices: _OBJC_CLASS_$_BKSMutableHIDEventDeferringPredicate
__ BackBoardServices: _OBJC_CLASS_$_BKSMutableHIDEventDeferringTarget
__ BackBoardServices: _OBJC_CLASS_$_BKSMutableHIDEventDiscreteDispatchingPredicate
__ BackBoardServices: _OBJC_CLASS_$_BKSTouchDeliveryPolicy
__ BackBoardServices: _OBJC_CLASS_$_BKSTouchDeliveryPolicyAssertion
__ BannerKit: _BNBannerKitWorkspaceIdentifier
__ BannerKit: _OBJC_CLASS_$_BNBannerController
__ BannerKit: _OBJC_CLASS_$_BNBannerHostMonitor
__ BannerKit: _OBJC_CLASS_$_BNBannerSourceApplicationStarkSceneSpecification
__ BannerKit: _OBJC_CLASS_$_BNBannerSourceLayoutDescription
__ BannerKit: _OBJC_CLASS_$_BNBannerSourceListener
__ BannerKit: _OBJC_CLASS_$_BNContentViewController
__ BannerKit: _OBJC_CLASS_$_BNPresentableIdentification
__ BaseBoard: _BSDispatchQueueAssert
__ BaseBoard: _BSDispatchQueueAssertMain
__ BaseBoard: _BSDispatchQueueCreateSerial
__ BaseBoard: _BSEqualObjects
__ BaseBoard: _BSLogAddStateCaptureBlockWithTitle
__ BaseBoard: _BSLogStateCaptureCheckPlistSizeIsPermitted
__ BaseBoard: _BSPIDForAuditToken
__ BaseBoard: _BSRectWithSize
__ BaseBoard: _BSStringFromBOOL
__ BaseBoard: _BSTimeUntilNextClockMinute
__ BaseBoard: _OBJC_CLASS_$_BSAnimationSettings
__ BaseBoard: _OBJC_CLASS_$_BSDateFormatterCache
__ BaseBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ BaseBoard: _OBJC_CLASS_$_BSProcessHandle
__ BaseBoard: __BSSafeCast
__ BaseBoardUI: _OBJC_CLASS_$_BSUIAnimationFactory
__ BaseBoardUI: _OBJC_CLASS_$_BSUIMappedImageCache
__ BiomeStreams: _OBJC_CLASS_$_BMCarPlayEvent
__ BiomeStreams: _OBJC_CLASS_$_BMStreams
__ Bom: _BOMCopierCopyWithOptions
__ Bom: _BOMCopierFree
__ Bom: _BOMCopierNew
__ Bom: _BOMCopierSetCopyFileFinishedHandler
__ Bom: _BOMCopierSetUserData
__ Bom: _BOMCopierUserData
__ CarKit: _CARNavigationOwnerRequestedNotificationName
__ CarKit: _CARSessionCarHasMainAudioNotification
__ CarKit: _CARSessionElectronicTollCollectionStateChangedNotification
__ CarKit: _CARSessionScreenBecameAvailableNotification
__ CarKit: _CARSessionScreenBecameUnavailableNotification
__ CarKit: _CARSessioniOSHasMainAudioNotification
__ CarKit: _CRCollectCarPlayDiagnostics
__ CarKit: _CRIsEnhancedIntegrationEnabledWithCertificateSerialNumber
__ CarKit: _CRPairedVehiclesDidChangeNotification
__ CarKit: _OBJC_CLASS_$_CARActiveNavigationIdentifiersObserver
__ CarKit: _OBJC_CLASS_$_CARAutomaticDNDStatus
__ CarKit: _OBJC_CLASS_$_CARObserverHashTable
__ CarKit: _OBJC_CLASS_$_CARPrototypeBoolPref
__ CarKit: _OBJC_CLASS_$_CARPrototypePref
__ CarKit: _OBJC_CLASS_$_CARSession
__ CarKit: _OBJC_CLASS_$_CARSessionConfiguration
__ CarKit: _OBJC_CLASS_$_CARSessionStatus
__ CarKit: _OBJC_CLASS_$_CRCarPlayAppDeclaration
__ CarKit: _OBJC_CLASS_$_CRCarPlayAppDenylist
__ CarKit: _OBJC_CLASS_$_CRCarPlayAppPolicyEvaluator
__ CarKit: _OBJC_CLASS_$_CRCarPlayCapabilities
__ CarKit: _OBJC_CLASS_$_CRPairedVehicleManager
__ CarKit: __CARGetMinimumScaleForScreenInfo
__ CarPlayServices: _CRSAppActivationDidChangeNewCategoryKey
__ CarPlayServices: _CRSAppActivationDidChangeNotification
__ CarPlayServices: _CRSAppActivationDidChangeOldCategoryKey
__ CarPlayServices: _CRSNewsIdentifier
__ CarPlayServices: _CRSNowPlayingIdentifier
__ CarPlayServices: _CRSOEMIdentifier
__ CarPlayServices: _OBJC_CLASS_$_CRSAppHistoryController
__ CarPlayServices: _OBJC_CLASS_$_CRSAppHistoryService
__ CarPlayServices: _OBJC_CLASS_$_CRSApplicationIcon
__ CarPlayServices: _OBJC_CLASS_$_CRSIconLayoutPage
__ CarPlayServices: _OBJC_CLASS_$_CRSIconLayoutService
__ CarPlayServices: _OBJC_CLASS_$_CRSIconLayoutState
__ CarPlayServices: _OBJC_CLASS_$_CRSInCallAssertionService
__ CarPlayServices: _OBJC_CLASS_$_CRSSessionService
__ CarPlayServices: _OBJC_CLASS_$_CRSSiriPreferences
__ CarPlayServices: _kCRSIconLayoutDisplaysOEMIcon
__ CarPlayServices: _kCRSIconLayoutHiddenIconsKey
__ CarPlayServices: _kCRSIconLayoutIconOrderKey
__ CarPlayServices: _kCRSIconLayoutOEMIconLabel
__ CarPlaySupport: _OBJC_CLASS_$_CPSMultilineLabel
__ CarPlayUI: _CPUIDescriptionForUserInterfaceStyle
__ CarPlayUI: _CPUIHighlightedImageForTransportButton
__ CarPlayUI: _CPUIImageForTransportButton
__ CarPlayUI: _OBJC_CLASS_$_CPUIBannerTransitioningDelegate
__ CarPlayUI: _OBJC_CLASS_$_CPUIMediaButton
__ CarPlayUI: _OBJC_CLASS_$_CPUINowPlayingManager
__ CarPlayUI: _OBJC_CLASS_$_CPUINowPlayingSnapshot
__ CarPlayUI: _OBJC_CLASS_$_CPUIPassthroughView
__ CarPlayUI: _OBJC_CLASS_$_CPUIProgressView
__ CarPlayUI: _OBJC_METACLASS_$_CPUIMediaButton
__ CarPlayUIServices: _CRSUIBannerRevocationReasonHomeButton
__ CarPlayUIServices: _CRSUIBannerRevocationReasonTouchOutsideDismiss
__ CarPlayUIServices: _CRSUIBannerShouldBorrowScreenKey
__ CarPlayUIServices: _CRSUIWallpaperChangedNotification
__ CarPlayUIServices: _CRSUIWallpaperSolidBlack
__ CarPlayUIServices: _OBJC_CLASS_$_CRSDashboardFocusableItem
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIApplicationSceneSettings
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIApplicationSceneSpecification
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIClusterZoomAction
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIDashboardWidgetSceneSettings
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIDashboardWidgetSceneSpecification
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIInstrumentClusterSceneSettings
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIInstrumentClusterSceneSpecification
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIMutableApplicationSceneSettings
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIMutableWallpaperSceneSettings
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIProxyApplicationSceneSettings
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIProxyApplicationSceneSpecification
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIStatusBarStyleService
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUITemplateDashboardWidgetSceneSettings
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUITemplateDashboardWidgetSceneSpecification
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUITemplateInstrumentClusterSceneSpecification
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIWallpaperPreferences
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIWallpaperSceneSettings
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIWallpaperSceneSpecification
__ Contacts: _CNContactImageDataAvailableKey
__ ContactsUI: _OBJC_CLASS_$_CNAvatarViewController
__ ContactsUI: _OBJC_CLASS_$_CNAvatarViewControllerSettings
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSSystemTimeZoneDidChangeNotification
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetBytesPerRow
__ CoreGraphics: _CGBitmapContextGetColorSpace
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGBitmapContextGetHeight
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextFillEllipseInRect
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextStrokeEllipseInRect
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceGenericGrayGamma2_2
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIFilter
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _kCIFormatBGRA8
__ CoreImage: _kCIInputImageKey
__ CoreImage: _kCIOutputImageKey
__ CoreLocation: _CLGetAccessoryTypeBitSet
__ CoreLocation: _CLLocationDistanceMax
__ CoreLocation: _OBJC_CLASS_$_CLCircularRegion
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _kCLLocationAccuracyBestForNavigation
__ CoreMedia: _kFigEndpointSiriRequestedKey_Timestamp
__ CoreServices: _LSInternalApplicationType
__ CoreServices: _LSSystemApplicationType
__ CoreServices: _OBJC_CLASS_$_LSAppLink
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ CoreServices: _OBJC_CLASS_$__LSOpenConfiguration
__ CoreWiFi: _CWFEventLinkChangeStatusKey
__ CoreWiFi: _OBJC_CLASS_$_CWFInterface
__ DoNotDisturb: _OBJC_CLASS_$_DNDStateService
__ EventKit: _EKEventStoreChangeTypeUserInfoKey
__ EventKit: _EKEventStoreChangedNotification
__ EventKit: _OBJC_CLASS_$_EKCalendarVisibilityManager
__ EventKit: _OBJC_CLASS_$_EKEvent
__ EventKit: _OBJC_CLASS_$_EKEventStore
__ Foundation: _NSClassFromString
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateIntervalFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ FrontBoard: _FBSDisplayLayoutElementLockScreenIdentifier
__ FrontBoard: _FBSDisplayLayoutElementSiriIdentifier
__ FrontBoard: _FBSOpenApplicationOptionKeyActions
__ FrontBoard: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoard: _FBSOpenApplicationOptionKeyPayloadURL
__ FrontBoard: _FBSystemAppBundleID
__ FrontBoard: _FBSystemShellInitialize
__ FrontBoard: _OBJC_CLASS_$_BSServiceConnectionEndpoint
__ FrontBoard: _OBJC_CLASS_$_BSServiceConnectionEndpointInjector
__ FrontBoard: _OBJC_CLASS_$_BSServicesConfiguration
__ FrontBoard: _OBJC_CLASS_$_FBApplicationProcessLaunchTransaction
__ FrontBoard: _OBJC_CLASS_$_FBApplicationUpdateScenesTransaction
__ FrontBoard: _OBJC_CLASS_$_FBDisplayManager
__ FrontBoard: _OBJC_CLASS_$_FBLocalSynchronousSceneClientProvider
__ FrontBoard: _OBJC_CLASS_$_FBMutableProcessExecutionContext
__ FrontBoard: _OBJC_CLASS_$_FBSApplicationDataStore
__ FrontBoard: _OBJC_CLASS_$_FBSApplicationDataStoreMonitor
__ FrontBoard: _OBJC_CLASS_$_FBSApplicationInfo
__ FrontBoard: _OBJC_CLASS_$_FBSApplicationLibrary
__ FrontBoard: _OBJC_CLASS_$_FBSApplicationLibraryConfiguration
__ FrontBoard: _OBJC_CLASS_$_FBSApplicationPlaceholder
__ FrontBoard: _OBJC_CLASS_$_FBSBundleInfo
__ FrontBoard: _OBJC_CLASS_$_FBSDisplayLayoutElement
__ FrontBoard: _OBJC_CLASS_$_FBSDisplayLayoutMonitor
__ FrontBoard: _OBJC_CLASS_$_FBSDisplayLayoutMonitorConfiguration
__ FrontBoard: _OBJC_CLASS_$_FBSDisplayLayoutPublisher
__ FrontBoard: _OBJC_CLASS_$_FBSDisplayLayoutPublisherConfiguration
__ FrontBoard: _OBJC_CLASS_$_FBSMutableSceneDefinition
__ FrontBoard: _OBJC_CLASS_$_FBSMutableSceneParameters
__ FrontBoard: _OBJC_CLASS_$_FBSOpenApplicationService
__ FrontBoard: _OBJC_CLASS_$_FBSSceneClientIdentity
__ FrontBoard: _OBJC_CLASS_$_FBSSceneIdentity
__ FrontBoard: _OBJC_CLASS_$_FBSceneManager
__ FrontBoard: _OBJC_CLASS_$_FBSystemService
__ FrontBoard: _OBJC_CLASS_$_FBSystemShell
__ FrontBoard: _OBJC_METACLASS_$_FBSApplicationInfo
__ GeoServices: _OBJC_CLASS_$_GEOCountryConfiguration
__ HMFoundation: _OBJC_CLASS_$_HMFLocationAuthorization
__ HangTracer: _HTBeginNonResponsiveTaskWithNameAndExpiration
__ HangTracer: _HTEndNonResponsiveTask
__ HomeKit: _HMCharacteristicMetadataFormatBool
__ HomeKit: _HMCharacteristicPropertyHidden
__ HomeKit: _HMCharacteristicPropertyReadable
__ HomeKit: _HMCharacteristicPropertySupportsEventNotification
__ HomeKit: _HMCharacteristicPropertyWritable
__ HomeKit: _HMCharacteristicTypeActive
__ HomeKit: _HMCharacteristicTypeAdminOnlyAccess
__ HomeKit: _HMCharacteristicTypeAirParticulateDensity
__ HomeKit: _HMCharacteristicTypeAirParticulateSize
__ HomeKit: _HMCharacteristicTypeAirQuality
__ HomeKit: _HMCharacteristicTypeAudioFeedback
__ HomeKit: _HMCharacteristicTypeBatteryLevel
__ HomeKit: _HMCharacteristicTypeBrightness
__ HomeKit: _HMCharacteristicTypeCarbonDioxideDetected
__ HomeKit: _HMCharacteristicTypeCarbonDioxideLevel
__ HomeKit: _HMCharacteristicTypeCarbonDioxidePeakLevel
__ HomeKit: _HMCharacteristicTypeCarbonMonoxideDetected
__ HomeKit: _HMCharacteristicTypeCarbonMonoxideLevel
__ HomeKit: _HMCharacteristicTypeCarbonMonoxidePeakLevel
__ HomeKit: _HMCharacteristicTypeChargingState
__ HomeKit: _HMCharacteristicTypeColorTemperature
__ HomeKit: _HMCharacteristicTypeContactState
__ HomeKit: _HMCharacteristicTypeCoolingThreshold
__ HomeKit: _HMCharacteristicTypeCurrentAirPurifierState
__ HomeKit: _HMCharacteristicTypeCurrentDoorState
__ HomeKit: _HMCharacteristicTypeCurrentFanState
__ HomeKit: _HMCharacteristicTypeCurrentHeaterCoolerState
__ HomeKit: _HMCharacteristicTypeCurrentHeatingCooling
__ HomeKit: _HMCharacteristicTypeCurrentHorizontalTilt
__ HomeKit: _HMCharacteristicTypeCurrentHumidifierDehumidifierState
__ HomeKit: _HMCharacteristicTypeCurrentLightLevel
__ HomeKit: _HMCharacteristicTypeCurrentLockMechanismState
__ HomeKit: _HMCharacteristicTypeCurrentPosition
__ HomeKit: _HMCharacteristicTypeCurrentRelativeHumidity
__ HomeKit: _HMCharacteristicTypeCurrentSecuritySystemState
__ HomeKit: _HMCharacteristicTypeCurrentSlatState
__ HomeKit: _HMCharacteristicTypeCurrentTemperature
__ HomeKit: _HMCharacteristicTypeCurrentTilt
__ HomeKit: _HMCharacteristicTypeCurrentVerticalTilt
__ HomeKit: _HMCharacteristicTypeDehumidifierThreshold
__ HomeKit: _HMCharacteristicTypeDigitalZoom
__ HomeKit: _HMCharacteristicTypeFilterChangeIndication
__ HomeKit: _HMCharacteristicTypeFilterLifeLevel
__ HomeKit: _HMCharacteristicTypeFilterResetChangeIndication
__ HomeKit: _HMCharacteristicTypeFirmwareVersion
__ HomeKit: _HMCharacteristicTypeHardwareVersion
__ HomeKit: _HMCharacteristicTypeHeatingThreshold
__ HomeKit: _HMCharacteristicTypeHoldPosition
__ HomeKit: _HMCharacteristicTypeHue
__ HomeKit: _HMCharacteristicTypeHumidifierThreshold
__ HomeKit: _HMCharacteristicTypeIdentify
__ HomeKit: _HMCharacteristicTypeImageMirroring
__ HomeKit: _HMCharacteristicTypeImageRotation
__ HomeKit: _HMCharacteristicTypeInUse
__ HomeKit: _HMCharacteristicTypeInputEvent
__ HomeKit: _HMCharacteristicTypeIsConfigured
__ HomeKit: _HMCharacteristicTypeLabelIndex
__ HomeKit: _HMCharacteristicTypeLabelNamespace
__ HomeKit: _HMCharacteristicTypeLeakDetected
__ HomeKit: _HMCharacteristicTypeLockManagementAutoSecureTimeout
__ HomeKit: _HMCharacteristicTypeLockManagementControlPoint
__ HomeKit: _HMCharacteristicTypeLockMechanismLastKnownAction
__ HomeKit: _HMCharacteristicTypeLockPhysicalControls
__ HomeKit: _HMCharacteristicTypeLogs
__ HomeKit: _HMCharacteristicTypeManufacturer
__ HomeKit: _HMCharacteristicTypeModel
__ HomeKit: _HMCharacteristicTypeMotionDetected
__ HomeKit: _HMCharacteristicTypeMute
__ HomeKit: _HMCharacteristicTypeName
__ HomeKit: _HMCharacteristicTypeNightVision
__ HomeKit: _HMCharacteristicTypeNitrogenDioxideDensity
__ HomeKit: _HMCharacteristicTypeObstructionDetected
__ HomeKit: _HMCharacteristicTypeOccupancyDetected
__ HomeKit: _HMCharacteristicTypeOpticalZoom
__ HomeKit: _HMCharacteristicTypeOutletInUse
__ HomeKit: _HMCharacteristicTypeOutputState
__ HomeKit: _HMCharacteristicTypeOzoneDensity
__ HomeKit: _HMCharacteristicTypePM10Density
__ HomeKit: _HMCharacteristicTypePM2_5Density
__ HomeKit: _HMCharacteristicTypePositionState
__ HomeKit: _HMCharacteristicTypePowerState
__ HomeKit: _HMCharacteristicTypeProgramMode
__ HomeKit: _HMCharacteristicTypeRemainingDuration
__ HomeKit: _HMCharacteristicTypeRotationDirection
__ HomeKit: _HMCharacteristicTypeRotationSpeed
__ HomeKit: _HMCharacteristicTypeSaturation
__ HomeKit: _HMCharacteristicTypeSecuritySystemAlarmType
__ HomeKit: _HMCharacteristicTypeSelectedStreamConfiguration
__ HomeKit: _HMCharacteristicTypeSerialNumber
__ HomeKit: _HMCharacteristicTypeSetDuration
__ HomeKit: _HMCharacteristicTypeSetupStreamEndpoint
__ HomeKit: _HMCharacteristicTypeSlatType
__ HomeKit: _HMCharacteristicTypeSmokeDetected
__ HomeKit: _HMCharacteristicTypeSoftwareVersion
__ HomeKit: _HMCharacteristicTypeStatusActive
__ HomeKit: _HMCharacteristicTypeStatusFault
__ HomeKit: _HMCharacteristicTypeStatusJammed
__ HomeKit: _HMCharacteristicTypeStatusLowBattery
__ HomeKit: _HMCharacteristicTypeStatusTampered
__ HomeKit: _HMCharacteristicTypeStreamingStatus
__ HomeKit: _HMCharacteristicTypeSulphurDioxideDensity
__ HomeKit: _HMCharacteristicTypeSupportedAudioStreamConfiguration
__ HomeKit: _HMCharacteristicTypeSupportedRTPConfiguration
__ HomeKit: _HMCharacteristicTypeSupportedVideoStreamConfiguration
__ HomeKit: _HMCharacteristicTypeSwingMode
__ HomeKit: _HMCharacteristicTypeTargetAirPurifierState
__ HomeKit: _HMCharacteristicTypeTargetDoorState
__ HomeKit: _HMCharacteristicTypeTargetFanState
__ HomeKit: _HMCharacteristicTypeTargetHeaterCoolerState
__ HomeKit: _HMCharacteristicTypeTargetHeatingCooling
__ HomeKit: _HMCharacteristicTypeTargetHorizontalTilt
__ HomeKit: _HMCharacteristicTypeTargetHumidifierDehumidifierState
__ HomeKit: _HMCharacteristicTypeTargetLockMechanismState
__ HomeKit: _HMCharacteristicTypeTargetPosition
__ HomeKit: _HMCharacteristicTypeTargetRelativeHumidity
__ HomeKit: _HMCharacteristicTypeTargetSecuritySystemState
__ HomeKit: _HMCharacteristicTypeTargetTemperature
__ HomeKit: _HMCharacteristicTypeTargetTilt
__ HomeKit: _HMCharacteristicTypeTargetVerticalTilt
__ HomeKit: _HMCharacteristicTypeTemperatureUnits
__ HomeKit: _HMCharacteristicTypeValveType
__ HomeKit: _HMCharacteristicTypeVersion
__ HomeKit: _HMCharacteristicTypeVolatileOrganicCompoundDensity
__ HomeKit: _HMCharacteristicTypeVolume
__ HomeKit: _HMCharacteristicTypeWaterLevel
__ HomeKit: _HMServiceTypeAccessoryInformation
__ HomeKit: _HMServiceTypeGarageDoorOpener
__ HomeKit: _OBJC_CLASS_$_HMCharacteristicBatchRequest
__ HomeKit: _OBJC_CLASS_$_HMCharacteristicWriteRequest
__ HomeKit: _OBJC_CLASS_$_HMHomeManager
__ HomeKit: _OBJC_CLASS_$_HMMutableHomeManagerConfiguration
__ IOKit: _IOHIDEventGetSenderID
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortGetRunLoopSource
__ IOKit: _IOObjectRelease
__ IOKit: _IOPSGetPercentRemaining
__ IOKit: _IORegistryEntryCreateCFProperties
__ IOKit: _IOServiceAddInterestNotification
__ IOKit: _IOServiceClose
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _IOServiceOpen
__ IOKit: _kIOMasterPortDefault
__ IconServices: _OBJC_CLASS_$_IFImage
__ IconServices: _OBJC_CLASS_$_ISIcon
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ IconServices: _kISImageDescriptorCarLauncher
__ IconServices: _kISImageDescriptorNotification
__ ImageIO: _CGImageCreateFromIOSurface
__ ImageIO: _kCGImageComponentTypeRequest
__ ImageIO: _kCGImagePreferredColorConversionMode
__ Intents: _OBJC_CLASS_$_INIntent
__ Intents: _OBJC_CLASS_$_INSendMessageIntent
__ Intents: _OBJC_CLASS_$_INStartAudioCallIntent
__ Intents: _OBJC_CLASS_$_INStartCallIntent
__ MallocStackLogging: _msl_turn_on_stack_logging
__ MaterialKit: _OBJC_CLASS_$_MTMaterialView
__ MaterialKit: _OBJC_CLASS_$_MTShadowView
__ MobileKeyBag: _MKBGetDeviceLockState
__ MobileKeyBag: _MKBGetDeviceLockStateInfo
__ MobileKeyBag: _kMKBInfoBackOff
__ MobileKeyBag: _kMKBInfoPermanentlyBlocked
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientRegisterServerRestartCallback
__ MobileWiFi: _WiFiManagerClientScheduleWithRunLoop
__ Network: _nw_path_create_evaluator_for_endpoint
__ Network: _nw_path_evaluator_copy_path
__ Network: _nw_path_get_status
__ Network: _nw_path_is_equal
__ Network: _nw_path_monitor_cancel
__ Network: _nw_path_monitor_create
__ Network: _nw_path_monitor_set_queue
__ Network: _nw_path_monitor_set_update_handler
__ Network: _nw_path_monitor_start
__ Network: _nw_path_uses_interface_type
__ Photos: _OBJC_CLASS_$_PHAssetCreationRequest
__ Photos: _OBJC_CLASS_$_PHPhotoLibrary
__ QuartzCore: _CALayerGetRenderId
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCACornerCurveCircular
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFilterColorBurnBlendMode
__ QuartzCore: _kCAFilterColorSaturate
__ QuartzCore: _kCAFilterCubic
__ QuartzCore: _kCAFilterGaussianBlur
__ QuartzCore: _kCAFilterMultiplyColor
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCAFilterPlusL
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentifier
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentity
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessMonitor
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessPredicate
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessStateDescriptor
__ RunningBoardServices: _OBJC_CLASS_$_RBSTarget
__ SetupAssistant: _BYSetupAssistantFinishedDarwinNotification
__ SetupAssistant: _BYSetupAssistantNeedsToRun
__ SiriActivation: _OBJC_CLASS_$_SiriDirectActionContext
__ SiriActivation: _OBJC_CLASS_$_SiriDirectActionSource
__ SiriActivation: _OBJC_CLASS_$_SiriDismissalOptions
__ SiriActivation: _OBJC_CLASS_$_SiriLongPressButtonSource
__ SiriActivation: _OBJC_CLASS_$_SiriTestingContext
__ SiriActivation: _OBJC_CLASS_$_SiriTestingSource
__ SiriUIActivation: _OBJC_CLASS_$_SiriPresentationViewController
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFAnimationSettings
__ SpringBoardHome: _OBJC_CLASS_$_SBCenterIconZoomAnimator
__ SpringBoardHome: _OBJC_CLASS_$_SBHCenterZoomSettings
__ SpringBoardHome: _OBJC_CLASS_$_SBHIconManager
__ SpringBoardHome: _OBJC_CLASS_$_SBHIconModel
__ SpringBoardHome: _OBJC_CLASS_$_SBHIconStateArchiver
__ SpringBoardHome: _OBJC_CLASS_$_SBIcon
__ SpringBoardHome: _OBJC_CLASS_$_SBIconListFlowLayout
__ SpringBoardHome: _OBJC_CLASS_$_SBIconListGridLayoutConfiguration
__ SpringBoardHome: _OBJC_CLASS_$_SBIconListPageControl
__ SpringBoardHome: _OBJC_CLASS_$_SBIconListView
__ SpringBoardHome: _OBJC_CLASS_$_SBIconModelPropertyListFileStore
__ SpringBoardHome: _OBJC_CLASS_$_SBIconPageIndicatorImageSetCache
__ SpringBoardHome: _OBJC_CLASS_$_SBIconScrollView
__ SpringBoardHome: _OBJC_CLASS_$_SBIconView
__ SpringBoardHome: _OBJC_CLASS_$_SBLeafIcon
__ SpringBoardHome: _OBJC_CLASS_$_SBRootFolderController
__ SpringBoardHome: _OBJC_CLASS_$_SBRootFolderView
__ SpringBoardHome: _OBJC_METACLASS_$_SBHIconManager
__ SpringBoardHome: _OBJC_METACLASS_$_SBHIconModel
__ SpringBoardHome: _OBJC_METACLASS_$_SBIconListPageControl
__ SpringBoardHome: _OBJC_METACLASS_$_SBIconListView
__ SpringBoardHome: _OBJC_METACLASS_$_SBIconModelPropertyListFileStore
__ SpringBoardHome: _OBJC_METACLASS_$_SBIconScrollView
__ SpringBoardHome: _OBJC_METACLASS_$_SBIconView
__ SpringBoardHome: _OBJC_METACLASS_$_SBLeafIcon
__ SpringBoardHome: _OBJC_METACLASS_$_SBRootFolderController
__ SpringBoardHome: _OBJC_METACLASS_$_SBRootFolderView
__ SpringBoardHome: _SBIconLocationRoot
__ SpringBoardServices: _OBJC_CLASS_$_SBSLockScreenService
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertConfigurationContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertDefinition
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertHandle
__ SpringBoardServices: _SBSGetScreenLockStatus
__ SystemStatus: _OBJC_CLASS_$_STBatteryStatusDomain
__ SystemStatus: _OBJC_CLASS_$_STCallingStatusDomain
__ SystemStatus: _OBJC_CLASS_$_STMediaStatusDomain
__ SystemStatus: _OBJC_CLASS_$_STTelephonyStatusDomain
__ SystemStatus: _OBJC_CLASS_$_STWifiStatusDomain
__ TelephonyUtilities: _OBJC_CLASS_$_TUCallCenter
__ TelephonyUtilities: _TUCallCenterCallStatusChangedNotification
__ TelephonyUtilities: _TUCallCenterConferenceParticipantsChangedNotification
__ TelephonyUtilities: _TUCallCenterVideoCallStatusChangedNotification
__ TelephonyUtilities: _TUCallIsUplinkMutedChangedNotification
__ TelephonyUtilities: _TUCallModelChangedNotification
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivityContinuationAction
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneSettings
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneSpecification
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneTransitionContext
__ UIKit: _OBJC_CLASS_$_UIApplicationStarkSceneSpecification
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIColorEffect
__ UIKit: _OBJC_CLASS_$_UIDropProposal
__ UIKit: _OBJC_CLASS_$_UIFocusContainerGuide
__ UIKit: _OBJC_CLASS_$_UIFocusMovementAction
__ UIKit: _OBJC_CLASS_$_UIFocusSystem
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIOpenURLAction
__ UIKit: _OBJC_CLASS_$_UIRootSceneWindow
__ UIKit: _OBJC_CLASS_$_UIRootWindowScenePresentationBinder
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UIStatusBar_Modern
__ UIKit: _OBJC_CLASS_$_UISwipeGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UISystemShellApplication
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIVisualEffect
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$_UIWindowScene
__ UIKit: _OBJC_CLASS_$__UIFocusLinearMovementSequence
__ UIKit: _OBJC_CLASS_$__UIFocusMovementInfo
__ UIKit: _OBJC_CLASS_$__UILegibilitySettings
__ UIKit: _OBJC_CLASS_$__UISystemGestureManager
__ UIKit: _OBJC_CLASS_$__UIViewControllerOneToOneTransitionContext
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UISystemShellApplication
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIApp
__ UIKit: _UIApplicationMain
__ UIKit: _UIApplicationSignificantTimeChangeNotification
__ UIKit: _UIBackgroundModeAudio
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIHUDWindowLevel
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIRectCenteredAboutPointScale
__ UIKit: _UIRectFill
__ UIKit: _UIRectGetCenter
__ UIKit: _UIStatusBarCarPlayDiagnosticsCompletedNotification
__ UIKit: _UIStatusBarCarPlayDiagnosticsStartedNotification
__ UIKit: _UISystemRootDirectory
__ UIKit: _UIWindowLevelNormal
__ UIKit: __UIScreenCapabilityInteractionModelsKey
__ UIKit: __UIScreenCapabilityTouchLevelsKey
__ UIKit: __UIScrollViewDidEndDraggingNotification
__ UIKit: __UIScrollViewWillBeginDraggingNotification
__ UIKit: __UIStatusBarCarPlayHorizontalLayoutKey
__ UserAlerts: _OBJC_CLASS_$_URTAlertService
__ UserNotificationsSettings: _OBJC_CLASS_$_UNNotificationSettingsCenter
__ libIOAccessoryManager.dylib: _IOAccessoryManagerConfigurePower
__ libIOAccessoryManager.dylib: _IOAccessoryManagerConfigureUSBMode
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetServiceWithPrimaryPort
__ libMemoryResourceException.dylib: _OBJC_CLASS_$_RMECacheEnumerator
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strcpy_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _kOSThermalNotificationPressureLevelName
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _mach_error_string
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _pthread_main_np
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _usleep
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initStackObject
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_isaMask
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_unknownObjectWeakDestroy
__ libswiftCore.dylib: _swift_unknownObjectWeakInit
__ libswiftCore.dylib: _swift_unknownObjectWeakLoadStrong
DBStatusBarStateProvider : NSObject <CRSSiriPreferencesObserver, DNDStateUpdateListener, UNNotificationSettingsCenterDelegate, BSInvalidatable, DBWorkspaceObserver, UIStatusBarStateProvider, UIStatusBarStyleDelegate_SpringBoardOnly>
 @property  NSTimer *timeUpdateTimer
 @property  NSHashTable *stateObservers
 @property  <DBEnvironment> *environment
 @property  NSNumber *etcStatus
 @property  NSString *activeBundleIdentifier
 @property  NSString *nowRecordingBundleIdentifier
 @property  STTelephonyStatusDomain *telephonyDomain
 @property  STTelephonyStatusDomainData *telephonyData
 @property  STBatteryStatusDomain *batteryDomain
 @property  STBatteryStatusDomainData *batteryData
 @property  STWifiStatusDomain *wifiDomain
 @property  STWifiStatusDomainData *wifiData
 @property  STMediaStatusDomain *mediaDomain
 @property  STMediaStatusDomainData *mediaData
 @property  STCallingStatusDomain *callingDomain
 @property  STCallingStatusDomainData *callingData
 @property  DNDStateService *dndStateService
 @property  NSString *activeModeSymbolName
 @property  NSString *cachedTimeString
 @property  CRSSiriPreferences *siriPreferences
 @property  long long cachedCarPlayAnnounceSetting
 @property  BOOL inCallServiceActive
 @property  DBStatusBarSensorIndicatorView *sensorIndicatorView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBStatusBarStateProvider _showIndicatorForData:]
  +[DBStatusBarStateProvider _sensorIndicatorTypeForData:]

  // instance methods
  -[DBStatusBarStateProvider statusBar:effectiveStyleOverridesForRequestedStyle:overrides:]
  -[DBStatusBarStateProvider dndStateService]
  -[DBStatusBarStateProvider _registerForNotifications]
  -[DBStatusBarStateProvider setDndStateService:]
  -[DBStatusBarStateProvider initWithEnvironment:]
  -[DBStatusBarStateProvider stateService:didReceiveDoNotDisturbStateUpdate:]
  -[DBStatusBarStateProvider callingDomain]
  -[DBStatusBarStateProvider stateObservers]
  -[DBStatusBarStateProvider _timeZoneChanged:]
  -[DBStatusBarStateProvider statusBar:willAnimateFromHeight:toHeight:duration:animation:]
  -[DBStatusBarStateProvider .cxx_destruct]
  -[DBStatusBarStateProvider setStateObservers:]
  -[DBStatusBarStateProvider overriddenRequestedStyleFromStyle:]
  -[DBStatusBarStateProvider wifiDomain]
  -[DBStatusBarStateProvider setSiriPreferences:]
  -[DBStatusBarStateProvider _localeChanged:]
  -[DBStatusBarStateProvider setTelephonyDomain:]
  -[DBStatusBarStateProvider invalidate]
  -[DBStatusBarStateProvider setCallingDomain:]
  -[DBStatusBarStateProvider setBatteryDomain:]
  -[DBStatusBarStateProvider batteryDomain]
  -[DBStatusBarStateProvider setEnvironment:]
  -[DBStatusBarStateProvider telephonyDomain]
  -[DBStatusBarStateProvider setWifiDomain:]
  -[DBStatusBarStateProvider siriPreferences]
  -[DBStatusBarStateProvider statusBar:styleForRequestedStyle:overrides:]
  -[DBStatusBarStateProvider environment]
  -[DBStatusBarStateProvider statusBar:didAnimateFromHeight:toHeight:animation:]
  -[DBStatusBarStateProvider getStatusBarData:]
  -[DBStatusBarStateProvider addStatusBarStateObserver:]
  -[DBStatusBarStateProvider activeBundleIdentifier]
  -[DBStatusBarStateProvider removeStatusBarStateObserver:]
  -[DBStatusBarStateProvider _radarItemEnabled]
  -[DBStatusBarStateProvider mediaData]
  -[DBStatusBarStateProvider setMediaData:]
  -[DBStatusBarStateProvider userNotificationSettingsCenter:didUpdateNotificationSystemSettings:]
  -[DBStatusBarStateProvider preferences:announceNotificationsInCarPlayTemporarilyDisabledChanged:]
  -[DBStatusBarStateProvider _etcChanged:]
  -[DBStatusBarStateProvider workspace:stateDidChangeFromState:toState:]
  -[DBStatusBarStateProvider _setupSystemStatusDomains]
  -[DBStatusBarStateProvider inCallServiceActive]
  -[DBStatusBarStateProvider setActiveBundleIdentifier:]
  -[DBStatusBarStateProvider setNowRecordingBundleIdentifier:]
  -[DBStatusBarStateProvider updateStatusBarData]
  -[DBStatusBarStateProvider _generateData]
  -[DBStatusBarStateProvider _resetTimeUpdateTimer]
  -[DBStatusBarStateProvider _getTimeData:]
  -[DBStatusBarStateProvider _wifiDataUpdatedWithData:]
  -[DBStatusBarStateProvider _telephonyDataUpdatedWithData:]
  -[DBStatusBarStateProvider _getTelephonyData:]
  -[DBStatusBarStateProvider _statusBarNetworkTypeForSystemStatusNetworkType:]
  -[DBStatusBarStateProvider _batteryDataUpdatedWithData:]
  -[DBStatusBarStateProvider _getBatteryData:]
  -[DBStatusBarStateProvider _updateETCStateWithSession:]
  -[DBStatusBarStateProvider _getETCData:]
  -[DBStatusBarStateProvider _focusStatusUpdated:]
  -[DBStatusBarStateProvider _getFocusData:]
  -[DBStatusBarStateProvider _radarItemVisible]
  -[DBStatusBarStateProvider _getTTRData:]
  -[DBStatusBarStateProvider _mediaDataUpdatedWithData:]
  -[DBStatusBarStateProvider _getMediaData:]
  -[DBStatusBarStateProvider _callingDataUpdatedWithData:]
  -[DBStatusBarStateProvider _isAnnounceNotificationsEnabledForSystemSettings]
  -[DBStatusBarStateProvider _fetchAnnounceNotificationsSetting]
  -[DBStatusBarStateProvider _getAnnounceNotificationsData:]
  -[DBStatusBarStateProvider sensorIndicatorView]
  -[DBStatusBarStateProvider setSensorIndicatorView:]
  -[DBStatusBarStateProvider nowRecordingBundleIdentifier]
  -[DBStatusBarStateProvider timeUpdateTimer]
  -[DBStatusBarStateProvider setTimeUpdateTimer:]
  -[DBStatusBarStateProvider etcStatus]
  -[DBStatusBarStateProvider setEtcStatus:]
  -[DBStatusBarStateProvider telephonyData]
  -[DBStatusBarStateProvider setTelephonyData:]
  -[DBStatusBarStateProvider batteryData]
  -[DBStatusBarStateProvider setBatteryData:]
  -[DBStatusBarStateProvider wifiData]
  -[DBStatusBarStateProvider setWifiData:]
  -[DBStatusBarStateProvider mediaDomain]
  -[DBStatusBarStateProvider setMediaDomain:]
  -[DBStatusBarStateProvider callingData]
  -[DBStatusBarStateProvider setCallingData:]
  -[DBStatusBarStateProvider activeModeSymbolName]
  -[DBStatusBarStateProvider setActiveModeSymbolName:]
  -[DBStatusBarStateProvider cachedTimeString]
  -[DBStatusBarStateProvider setCachedTimeString:]
  -[DBStatusBarStateProvider cachedCarPlayAnnounceSetting]
  -[DBStatusBarStateProvider setCachedCarPlayAnnounceSetting:]


DBDashboardAnimation : NSObject
 @property  DBAppDockViewController *appDockViewController
 @property  UIView *fromTransitionContainerView
 @property  UIView *fromView
 @property  NSString *toIdentifier
 @property  UIView *toTransitionContainerView
 @property  UIView *toView
 @property  UIView *rootContainerView
 @property  UIColor *rootContainerBackgroundColor

  // instance methods
  -[DBDashboardAnimation fromView]
  -[DBDashboardAnimation toView]
  -[DBDashboardAnimation initWithSettings:]
  -[DBDashboardAnimation .cxx_destruct]
  -[DBDashboardAnimation startAnimationWithCompletion:]
  -[DBDashboardAnimation rootContainerView]
  -[DBDashboardAnimation toIdentifier]
  -[DBDashboardAnimation appDockViewController]
  -[DBDashboardAnimation fromTransitionContainerView]
  -[DBDashboardAnimation toTransitionContainerView]
  -[DBDashboardAnimation rootContainerBackgroundColor]


DBEvent : NSObject
 @property  unsigned long type
 @property  id context

  // class methods
  +[DBEvent eventWithType:context:]

  // instance methods
  -[DBEvent type]
  -[DBEvent .cxx_destruct]
  -[DBEvent context]
  -[DBEvent initWithType:context:]


DBFromStackedAppAnimationSettings : DBAnimationSettings

DBFromStackedAppAnimation : DBDashboardAnimation
  // class methods
  +[DBFromStackedAppAnimation animationWithSettings:]

  // instance methods
  -[DBFromStackedAppAnimation startAnimationWithCompletion:]


DBDashboardLayoutEngine : NSObject
 @property  DBEnvironmentConfiguration *environmentConfiguration
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} mainWindowFrame
 @property  {UIEdgeInsets=dddd} rootViewControllerContentInsets
 @property  {UIEdgeInsets=dddd} homeViewControllerInsets
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} areaOfInterestWindowFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} statusBarHostSceneFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} statusBarHostWindowFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} statusBarWindowFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cornerRadiusWindowFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cornerRadiusViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} notificationWindowFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} resizeAnimationWindowFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} wallpaperFrame

  // instance methods
  -[DBDashboardLayoutEngine statusBarWindowFrame]
  -[DBDashboardLayoutEngine .cxx_destruct]
  -[DBDashboardLayoutEngine statusBarInsets]
  -[DBDashboardLayoutEngine setEnvironmentConfiguration:]
  -[DBDashboardLayoutEngine environmentConfiguration]
  -[DBDashboardLayoutEngine initWithEnvironmentConfiguration:]
  -[DBDashboardLayoutEngine rootViewControllerContentInsets]
  -[DBDashboardLayoutEngine homeViewControllerInsets]
  -[DBDashboardLayoutEngine sceneFrameForApplication:]
  -[DBDashboardLayoutEngine safeAreaInsetsForApplication:]
  -[DBDashboardLayoutEngine areaOfInterestFrameForApplication:]
  -[DBDashboardLayoutEngine statusBarHostWindowFrame]
  -[DBDashboardLayoutEngine cornerRadiusViewFrame]
  -[DBDashboardLayoutEngine notificationWindowFrame]
  -[DBDashboardLayoutEngine wallpaperFrame]
  -[DBDashboardLayoutEngine mainWindowFrame]
  -[DBDashboardLayoutEngine areaOfInterestWindowFrame]
  -[DBDashboardLayoutEngine statusBarHostSceneFrame]
  -[DBDashboardLayoutEngine cornerRadiusWindowFrame]
  -[DBDashboardLayoutEngine resizeAnimationWindowFrame]


DBLeafIconDataSource : NSObject <SBLeafIconDataSource>
 @property  NSString *identifier
 @property  DBApplicationInfo *applicationInfo
 @property  CARSessionConfiguration *sessionConfiguration
 @property  FBSApplicationDataStore *dataStore
 @property  NSString *cachedBadgeValue
 @property  NSString *uniqueIdentifier
 @property  NSString *configurationStorageIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBLeafIconDataSource dataSourceForApplicationInfo:]
  +[DBLeafIconDataSource dataSourceForOEMIconWithSessionConfiguration:]
  +[DBLeafIconDataSource dataSourceForNowPlayingIcon]

  // instance methods
  -[DBLeafIconDataSource dataStore]
  -[DBLeafIconDataSource iconSupportsUninstall:]
  -[DBLeafIconDataSource icon:imageWithInfo:]
  -[DBLeafIconDataSource setDataStore:]
  -[DBLeafIconDataSource sessionConfiguration]
  -[DBLeafIconDataSource iconCompleteUninstall:]
  -[DBLeafIconDataSource identifier]
  -[DBLeafIconDataSource iconAllowsLaunch:]
  -[DBLeafIconDataSource icon:unmaskedImageWithInfo:]
  -[DBLeafIconDataSource labelAccessoryTypeForIcon:]
  -[DBLeafIconDataSource icon:launchFromLocation:context:]
  -[DBLeafIconDataSource iconCanTruncateLabel:]
  -[DBLeafIconDataSource accessoryTypeForIcon:]
  -[DBLeafIconDataSource .cxx_destruct]
  -[DBLeafIconDataSource progressPercentForIcon:]
  -[DBLeafIconDataSource progressStateForIcon:]
  -[DBLeafIconDataSource isProgressPausedForIcon:]
  -[DBLeafIconDataSource priorityForIcon:]
  -[DBLeafIconDataSource icon:displayNameForLocation:]
  -[DBLeafIconDataSource badgeNumberOrStringForIcon:]
  -[DBLeafIconDataSource iconDisallowsLaunchForObscuredReason:]
  -[DBLeafIconDataSource setIdentifier:]
  -[DBLeafIconDataSource iconCanTightenLabel:]
  -[DBLeafIconDataSource setSessionConfiguration:]
  -[DBLeafIconDataSource formattedAccessoryStringForIcon:]
  -[DBLeafIconDataSource applicationInfo]
  -[DBLeafIconDataSource setApplicationInfo:]
  -[DBLeafIconDataSource icon:defaultImageWithInfo:]
  -[DBLeafIconDataSource _initWithIdentifier:applicationInfo:sessionConfiguration:]
  -[DBLeafIconDataSource invalidateBadgeValue]
  -[DBLeafIconDataSource _stringIsDigits:]
  -[DBLeafIconDataSource cachedBadgeValue]
  -[DBLeafIconDataSource setCachedBadgeValue:]


DBScreenshotManager : NSObject
  // instance methods
  -[DBScreenshotManager initWithWindowScene:]
  -[DBScreenshotManager .cxx_destruct]
  -[DBScreenshotManager saveScreenshotsForDisplayIdentifiers:completion:]


DBScreenshotFlasher : NSObject
 @property  UIWindowScene *windowScene

  // instance methods
  -[DBScreenshotFlasher initWithWindowScene:]
  -[DBScreenshotFlasher windowScene]
  -[DBScreenshotFlasher .cxx_destruct]
  -[DBScreenshotFlasher _tearDown]
  -[DBScreenshotFlasher _orderWindowOut:]
  -[DBScreenshotFlasher flashColor:withCompletion:]
  -[DBScreenshotFlasher _createUIWithColor:]
  -[DBScreenshotFlasher _orderWindowFrontAndThenOut:withColor:]


DBInstrumentClusterRootViewController : UIViewController <DBEnvironmentConfigurationObserving, FBSceneObserver, BSInvalidatable, DBProcessMonitorObserving, FBSceneManagerObserver>
 @property  <DBEnvironment> *environment
 @property  FBSDisplayConfiguration *displayConfiguration
 @property  <UIScenePresenter> *scenePresenter
 @property  UIView<UIScenePresentation> *sceneHostView
 @property  NSString *requester
 @property  NSString *sceneID
 @property  FBScene *scene
 @property  BOOL invalidated
 @property  NSTimer *retryTimer
 @property  double retryDelay
 @property  FBApplicationUpdateScenesTransaction *transaction
 @property  NSURL *lastClusterURL
 @property  unsigned long targetAppCrashTally
 @property  unsigned long proxyAppCrashTally
 @property  NSString *targetBundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBInstrumentClusterRootViewController retryDelay]
  -[DBInstrumentClusterRootViewController sceneManager:didCreateScene:]
  -[DBInstrumentClusterRootViewController sceneManager:didDestroyScene:]
  -[DBInstrumentClusterRootViewController setInvalidated:]
  -[DBInstrumentClusterRootViewController initWithEnvironment:]
  -[DBInstrumentClusterRootViewController setRetryDelay:]
  -[DBInstrumentClusterRootViewController targetBundleIdentifier]
  -[DBInstrumentClusterRootViewController scenePresenter]
  -[DBInstrumentClusterRootViewController setScene:]
  -[DBInstrumentClusterRootViewController displayConfiguration]
  -[DBInstrumentClusterRootViewController transaction]
  -[DBInstrumentClusterRootViewController invalidated]
  -[DBInstrumentClusterRootViewController setRequester:]
  -[DBInstrumentClusterRootViewController requester]
  -[DBInstrumentClusterRootViewController dealloc]
  -[DBInstrumentClusterRootViewController .cxx_destruct]
  -[DBInstrumentClusterRootViewController sceneID]
  -[DBInstrumentClusterRootViewController setTransaction:]
  -[DBInstrumentClusterRootViewController setDisplayConfiguration:]
  -[DBInstrumentClusterRootViewController sceneDidInvalidate:]
  -[DBInstrumentClusterRootViewController setTargetBundleIdentifier:]
  -[DBInstrumentClusterRootViewController invalidate]
  -[DBInstrumentClusterRootViewController _retryTimerFired:]
  -[DBInstrumentClusterRootViewController setEnvironment:]
  -[DBInstrumentClusterRootViewController scene]
  -[DBInstrumentClusterRootViewController environment]
  -[DBInstrumentClusterRootViewController setRetryTimer:]
  -[DBInstrumentClusterRootViewController retryTimer]
  -[DBInstrumentClusterRootViewController setScenePresenter:]
  -[DBInstrumentClusterRootViewController _bundleIdentifier]
  -[DBInstrumentClusterRootViewController _frame]
  -[DBInstrumentClusterRootViewController applicationInfo]
  -[DBInstrumentClusterRootViewController processMonitor:shouldHandleDeathOfBundleIdentifier:isCrash:]
  -[DBInstrumentClusterRootViewController processMonitor:didHandleDeathOfBundleIdentifier:]
  -[DBInstrumentClusterRootViewController updateSceneWithAnimationSettings:]
  -[DBInstrumentClusterRootViewController _updateSceneID]
  -[DBInstrumentClusterRootViewController _invalidateScene]
  -[DBInstrumentClusterRootViewController proxiedApplicationInfo]
  -[DBInstrumentClusterRootViewController foregroundSceneWithURL:]
  -[DBInstrumentClusterRootViewController backgroundScene]
  -[DBInstrumentClusterRootViewController _sceneSettingsCreateIfNecessary]
  -[DBInstrumentClusterRootViewController _performSceneUpdateForeground:]
  -[DBInstrumentClusterRootViewController _applySceneSettingsToSettings:foreground:sceneSpecification:]
  -[DBInstrumentClusterRootViewController _performSceneUpdateForeground:settings:]
  -[DBInstrumentClusterRootViewController _invalidateRetryTimer]
  -[DBInstrumentClusterRootViewController _scheduleForegroundRetry]
  -[DBInstrumentClusterRootViewController sceneHostView]
  -[DBInstrumentClusterRootViewController setSceneHostView:]
  -[DBInstrumentClusterRootViewController lastClusterURL]
  -[DBInstrumentClusterRootViewController setLastClusterURL:]
  -[DBInstrumentClusterRootViewController targetAppCrashTally]
  -[DBInstrumentClusterRootViewController setTargetAppCrashTally:]
  -[DBInstrumentClusterRootViewController proxyAppCrashTally]
  -[DBInstrumentClusterRootViewController setProxyAppCrashTally:]


DBStatusBarHostWindow : UIWindow
  // instance methods
  -[DBStatusBarHostWindow hitTest:withEvent:]


DBHomeKitBoolCharacteristic : DBHomeKitCharacteristic
 @property  BOOL boolValue

  // class methods
  +[DBHomeKitBoolCharacteristic load]
  +[DBHomeKitBoolCharacteristic characteristicFormat]

  // instance methods
  -[DBHomeKitBoolCharacteristic setBoolValue:]
  -[DBHomeKitBoolCharacteristic boolValue]
  -[DBHomeKitBoolCharacteristic formatedValue]


DBEnvironmentConfiguration : NSObject <CARSessionCommandObserving, DBAppPolicyProviding>
 @property  CRPairedVehicleManager *pairedVehicleManager
 @property  NSMutableDictionary *policyLock_appPolicyForBundleID
 @property  CARObserverHashTable *observers
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} currentViewAreaFrame
 @property  {UIEdgeInsets=dddd} currentViewAreaSafeAreaInsets
 @property  unsigned long currentViewAreaTransitionControlType
 @property  unsigned long currentStatusBarEdge
 @property  BOOL currentViewAreaSupportsFocusTransfer
 @property  NSMapTable *viewAreaToStatusBarEdgeMap
 @property  long long mapsUserInterfaceStyle
 @property  NSObject<OS_dispatch_queue> *vehicleUpdateQueue
 @property  unsigned long interactionAffordances
 @property  long long layoutJustification
 @property  BOOL screenSupportsFocus
 @property  CARSession *session
 @property  DBClusterControlChannel *clusterControlChannel
 @property  DBLayerMetadataService *layerMetadataService
 @property  DBAnalytics *analytics
 @property  FBSDisplayIdentity *displayIdentity
 @property  FBSDisplayConfiguration *displayConfiguration
 @property  FBSDisplayLayoutPublisher *displayLayoutPublisher
 @property  UIScreen *screen
 @property  double screenScale
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} currentSafeViewAreaFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} currentUnadjustedSafeViewAreaFrame
 @property  BOOL currentViewAreaSupportsUIOutsideSafeArea
 @property  UITraitCollection *traitCollection
 @property  CRVehicle *vehicle
 @property  BOOL acBackSupported
 @property  BOOL ambientBrightnessNighttime
 @property  BOOL connectedWirelessly
 @property  BOOL geoSupported
 @property  BOOL knownVehicle
 @property  NSString *vehicleID
 @property  NSString *OEMIconLabel
 @property  BOOL OEMIconVisible
 @property  BOOL pairedVehicle
 @property  BOOL rightHandDrive
 @property  long long carUserInterfaceStyle
 @property  long long nightModeUserInterfaceStyle
 @property  long long effectiveMapsUserInterfaceStyle
 @property  DBNavigationStateProvider *navigationStateProvider
 @property  DBIconBadgeController *iconBadgeController
 @property  CRCarPlayAppPolicyEvaluator *appPolicyEvaluator
 @property  DBAppHistory *appHistory
 @property  CRSUIWallpaperPreferences *wallpaperPreferences
 @property  DBIconImageCache *iconImageCache
 @property  unsigned long iconRowCount
 @property  unsigned long iconColumnCount
 @property  BOOL statusBarDriveSide
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBEnvironmentConfiguration _stringForStatusBarEdge:]

  // instance methods
  -[DBEnvironmentConfiguration displayIdentity]
  -[DBEnvironmentConfiguration analytics]
  -[DBEnvironmentConfiguration iconImageCache]
  -[DBEnvironmentConfiguration screenScale]
  -[DBEnvironmentConfiguration session]
  -[DBEnvironmentConfiguration displayConfiguration]
  -[DBEnvironmentConfiguration addObserver:]
  -[DBEnvironmentConfiguration dealloc]
  -[DBEnvironmentConfiguration screen]
  -[DBEnvironmentConfiguration _pairedVehiclesDidChange:]
  -[DBEnvironmentConfiguration traitCollection]
  -[DBEnvironmentConfiguration .cxx_destruct]
  -[DBEnvironmentConfiguration appPolicyEvaluator]
  -[DBEnvironmentConfiguration displayLayoutPublisher]
  -[DBEnvironmentConfiguration interactionAffordances]
  -[DBEnvironmentConfiguration setObservers:]
  -[DBEnvironmentConfiguration OEMIconLabel]
  -[DBEnvironmentConfiguration appHistory]
  -[DBEnvironmentConfiguration isRightHandDrive]
  -[DBEnvironmentConfiguration removeObserver:]
  -[DBEnvironmentConfiguration setIconImageCache:]
  -[DBEnvironmentConfiguration observers]
  -[DBEnvironmentConfiguration vehicle]
  -[DBEnvironmentConfiguration isConnectedWirelessly]
  -[DBEnvironmentConfiguration isGeoSupported]
  -[DBEnvironmentConfiguration currentViewAreaTransitionControlType]
  -[DBEnvironmentConfiguration setCurrentViewAreaTransitionControlType:]
  -[DBEnvironmentConfiguration session:showUIForScreenInfo:withURL:]
  -[DBEnvironmentConfiguration session:didSetViewArea:forScreenID:withDuration:transitionControlType:]
  -[DBEnvironmentConfiguration session:stopUIForScreenInfo:]
  -[DBEnvironmentConfiguration session:didUpdateNightMode:]
  -[DBEnvironmentConfiguration session:didUpdateAppearanceStyle:forScreenUUID:]
  -[DBEnvironmentConfiguration session:didUpdateMapAppearanceStyle:forScreenUUID:]
  -[DBEnvironmentConfiguration sessionDidUpdateCarCapabilities:]
  -[DBEnvironmentConfiguration pairedVehicleManager]
  -[DBEnvironmentConfiguration setPairedVehicleManager:]
  -[DBEnvironmentConfiguration layoutJustification]
  -[DBEnvironmentConfiguration policyForApplicationInfo:]
  -[DBEnvironmentConfiguration initWithDisplayConfiguration:layoutPublisher:iconBadgeController:appPolicyEvaluator:session:navigationStateProvider:]
  -[DBEnvironmentConfiguration nightModeUserInterfaceStyle]
  -[DBEnvironmentConfiguration isAmbientBrightnessNighttime]
  -[DBEnvironmentConfiguration currentSafeViewAreaFrame]
  -[DBEnvironmentConfiguration currentViewAreaSupportsUIOutsideSafeArea]
  -[DBEnvironmentConfiguration fetchEnhancedIntegrationStatusWithCompletion:]
  -[DBEnvironmentConfiguration _viewAreaFrameForViewArea:]
  -[DBEnvironmentConfiguration _safeAreaInsetsForViewArea:]
  -[DBEnvironmentConfiguration _unadjustedSafeAreaFrameForViewArea:]
  -[DBEnvironmentConfiguration iconRowCount]
  -[DBEnvironmentConfiguration iconColumnCount]
  -[DBEnvironmentConfiguration isStatusBarDriveSide]
  -[DBEnvironmentConfiguration effectiveMapsUserInterfaceStyle]
  -[DBEnvironmentConfiguration _effectiveVehicleAppearancePreference]
  -[DBEnvironmentConfiguration _prefersDarkMapsAppearance]
  -[DBEnvironmentConfiguration _sync_pairedVehicle]
  -[DBEnvironmentConfiguration _updateVehicleInfoSync:notifyPairedVehicleChange:]
  -[DBEnvironmentConfiguration _updateVehicleInfo:notifyPairedVehicleChange:]
  -[DBEnvironmentConfiguration _statusBarEdgeForViewArea:]
  -[DBEnvironmentConfiguration _computeStatusBarEdgesForViewAreas:]
  -[DBEnvironmentConfiguration screenSupportsFocus]
  -[DBEnvironmentConfiguration clusterControlChannel]
  -[DBEnvironmentConfiguration setClusterControlChannel:]
  -[DBEnvironmentConfiguration layerMetadataService]
  -[DBEnvironmentConfiguration setLayerMetadataService:]
  -[DBEnvironmentConfiguration currentViewAreaFrame]
  -[DBEnvironmentConfiguration setCurrentViewAreaFrame:]
  -[DBEnvironmentConfiguration currentUnadjustedSafeViewAreaFrame]
  -[DBEnvironmentConfiguration currentViewAreaSafeAreaInsets]
  -[DBEnvironmentConfiguration setCurrentViewAreaSafeAreaInsets:]
  -[DBEnvironmentConfiguration currentStatusBarEdge]
  -[DBEnvironmentConfiguration setCurrentStatusBarEdge:]
  -[DBEnvironmentConfiguration currentViewAreaSupportsFocusTransfer]
  -[DBEnvironmentConfiguration setCurrentViewAreaSupportsFocusTransfer:]
  -[DBEnvironmentConfiguration isACBackSupported]
  -[DBEnvironmentConfiguration isKnownVehicle]
  -[DBEnvironmentConfiguration setKnownVehicle:]
  -[DBEnvironmentConfiguration vehicleID]
  -[DBEnvironmentConfiguration setVehicleID:]
  -[DBEnvironmentConfiguration isOEMIconVisible]
  -[DBEnvironmentConfiguration isPairedVehicle]
  -[DBEnvironmentConfiguration setPairedVehicle:]
  -[DBEnvironmentConfiguration carUserInterfaceStyle]
  -[DBEnvironmentConfiguration navigationStateProvider]
  -[DBEnvironmentConfiguration iconBadgeController]
  -[DBEnvironmentConfiguration wallpaperPreferences]
  -[DBEnvironmentConfiguration policyLock_appPolicyForBundleID]
  -[DBEnvironmentConfiguration setPolicyLock_appPolicyForBundleID:]
  -[DBEnvironmentConfiguration viewAreaToStatusBarEdgeMap]
  -[DBEnvironmentConfiguration setViewAreaToStatusBarEdgeMap:]
  -[DBEnvironmentConfiguration mapsUserInterfaceStyle]
  -[DBEnvironmentConfiguration setMapsUserInterfaceStyle:]
  -[DBEnvironmentConfiguration vehicleUpdateQueue]
  -[DBEnvironmentConfiguration setVehicleUpdateQueue:]


DBIconListPageControl : SBIconListPageControl
 @property  BOOL showsButtons

  // instance methods
  -[DBIconListPageControl showsButtons]
  -[DBIconListPageControl defaultHeight]
  -[DBIconListPageControl setShowsButtons:]
  -[DBIconListPageControl _indicatorSpacing]
  -[DBIconListPageControl intrinsicContentSize]
  -[DBIconListPageControl initWithFrame:]
  -[DBIconListPageControl traitCollectionDidChange:]


DBLeafIcon : SBLeafIcon
 @property  DBApplicationInfo *applicationInfo
 @property  FBSApplicationPlaceholder *placeholder

  // class methods
  +[DBLeafIcon dataSourceClass]

  // instance methods
  -[DBLeafIcon initWithApplicationInfo:]
  -[DBLeafIcon .cxx_destruct]
  -[DBLeafIcon placeholder]
  -[DBLeafIcon setPlaceholder:]
  -[DBLeafIcon applicationInfo]
  -[DBLeafIcon isLaunchEnabled]


DBStatusBarHomeButton : DBStatusBarButton
 @property  UIImage *iconsImage
 @property  UIImage *dashboardImage
 @property  UIImageView *focusRingImageView
 @property  unsigned long displayState

  // instance methods
  -[DBStatusBarHomeButton setFocusHighlightColor:]
  -[DBStatusBarHomeButton pressesEnded:withEvent:]
  -[DBStatusBarHomeButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[DBStatusBarHomeButton .cxx_destruct]
  -[DBStatusBarHomeButton _installSelectGestureRecognizer]
  -[DBStatusBarHomeButton initWithFrame:]
  -[DBStatusBarHomeButton displayState]
  -[DBStatusBarHomeButton traitCollectionDidChange:]
  -[DBStatusBarHomeButton pressesBegan:withEvent:]
  -[DBStatusBarHomeButton setDisplayState:]
  -[DBStatusBarHomeButton _setupImagesIfNecessary]
  -[DBStatusBarHomeButton _updateDisplayState:]
  -[DBStatusBarHomeButton iconsImage]
  -[DBStatusBarHomeButton setIconsImage:]
  -[DBStatusBarHomeButton dashboardImage]
  -[DBStatusBarHomeButton setDashboardImage:]
  -[DBStatusBarHomeButton focusRingImageView]
  -[DBStatusBarHomeButton setFocusRingImageView:]


DBInCallWidgetButtonRingView : UIView
 @property  UIColor *fillColor
 @property  BOOL focusRingVisible
 @property  BOOL highlighted
 @property  BOOL selected

  // instance methods
  -[DBInCallWidgetButtonRingView setFillColor:]
  -[DBInCallWidgetButtonRingView fillColor]
  -[DBInCallWidgetButtonRingView setSelected:]
  -[DBInCallWidgetButtonRingView .cxx_destruct]
  -[DBInCallWidgetButtonRingView setHighlighted:]
  -[DBInCallWidgetButtonRingView drawRect:]
  -[DBInCallWidgetButtonRingView isHighlighted]
  -[DBInCallWidgetButtonRingView isSelected]
  -[DBInCallWidgetButtonRingView setFocusRingVisible:]
  -[DBInCallWidgetButtonRingView isFocusRingVisible]


DBInCallWidgetButton : UIButton
 @property  DBInCallWidgetButtonRingView *ringView
 @property  long long inCallButtonType

  // instance methods
  -[DBInCallWidgetButton pressesEnded:withEvent:]
  -[DBInCallWidgetButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[DBInCallWidgetButton setupConstraints]
  -[DBInCallWidgetButton pressesCancelled:withEvent:]
  -[DBInCallWidgetButton setSelected:]
  -[DBInCallWidgetButton .cxx_destruct]
  -[DBInCallWidgetButton setHighlighted:]
  -[DBInCallWidgetButton traitCollectionDidChange:]
  -[DBInCallWidgetButton pressesBegan:withEvent:]
  -[DBInCallWidgetButton ringView]
  -[DBInCallWidgetButton setRingView:]
  -[DBInCallWidgetButton initWithButtonType:]
  -[DBInCallWidgetButton inCallButtonType]


DBInCallWidgetMultiwayTitleButton : UIButton
 @property  UIView *focusView
 @property  CPSMultilineLabel *multilineTitleLabel

  // instance methods
  -[DBInCallWidgetMultiwayTitleButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[DBInCallWidgetMultiwayTitleButton setupConstraints]
  -[DBInCallWidgetMultiwayTitleButton .cxx_destruct]
  -[DBInCallWidgetMultiwayTitleButton initWithFrame:]
  -[DBInCallWidgetMultiwayTitleButton traitCollectionDidChange:]
  -[DBInCallWidgetMultiwayTitleButton focusView]
  -[DBInCallWidgetMultiwayTitleButton setFocusView:]
  -[DBInCallWidgetMultiwayTitleButton multilineTitleLabel]
  -[DBInCallWidgetMultiwayTitleButton setMultilineTitleLabel:]


DBInCallWidgetAppIconButton : UIButton
 @property  NSString *applicationBundleIdentifier

  // instance methods
  -[DBInCallWidgetAppIconButton applicationBundleIdentifier]
  -[DBInCallWidgetAppIconButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[DBInCallWidgetAppIconButton setApplicationBundleIdentifier:]
  -[DBInCallWidgetAppIconButton .cxx_destruct]
  -[DBInCallWidgetAppIconButton initWithFrame:]
  -[DBInCallWidgetAppIconButton traitCollectionDidChange:]


DBNotificationView : UIView
  // instance methods
  -[DBNotificationView hitTest:withEvent:]


DBBannerAuthority : NSObject <BNConsidering>
 @property  <BNConsideringDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBBannerAuthority shouldOverlapPresentable:withPresentable:]
  -[DBBannerAuthority shouldPresentPresentable:withPresentedPresentables:responsiblePresentable:]


DBNotificationViewController : UIViewController <BNBannerSourceListenerDelegate, BNPresentingDelegate, FBSceneObserver, BSInvalidatable, DBNotificationSuspending>
 @property  DBEnvironmentConfiguration *environmentConfiguration
 @property  id screenBorrowToken
 @property  NSString *screenBorrowingPresentableRequestID
 @property  BNBannerHostMonitor *bannerHostMonitor
 @property  BNBannerController *bannerController
 @property  BNBannerSourceListener *bannerSourceListener
 @property  BNContentViewController *bannerContentViewController
 @property  DBBannerAuthority *bannerAuthority
 @property  UITapGestureRecognizer *tapDismissGestureRecognizer
 @property  <DBNotificationViewControllerDelegate> *delegate
 @property  NSMutableSet *suspensionReasons
 @property  BOOL invalidated
 @property  FBScene *visibleNotificationScene
 @property  double notificationHeight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBNotificationViewController setInvalidated:]
  -[DBNotificationViewController bannerSourceListener:requestsPostingPresentable:options:userInfo:error:]
  -[DBNotificationViewController bannerController]
  -[DBNotificationViewController suspensionReasons]
  -[DBNotificationViewController invalidated]
  -[DBNotificationViewController delegate]
  -[DBNotificationViewController dealloc]
  -[DBNotificationViewController .cxx_destruct]
  -[DBNotificationViewController presenter:gestureRecognizer:velocityInView:]
  -[DBNotificationViewController setSuspended:forReason:]
  -[DBNotificationViewController loadView]
  -[DBNotificationViewController presenter:willDismissPresentable:withTransitionCoordinator:userInfo:]
  -[DBNotificationViewController bannerSourceListener:requestsRevokingPresentablesWithIdentification:reason:animated:userInfo:error:]
  -[DBNotificationViewController presenter:gestureRecognizer:locationForTouch:inView:]
  -[DBNotificationViewController shouldFenceAnimationsForPresentable:]
  -[DBNotificationViewController setEnvironmentConfiguration:]
  -[DBNotificationViewController _layoutManager]
  -[DBNotificationViewController panGestureRecognizerForPresenter:]
  -[DBNotificationViewController presenterRelinquishesVisibility:]
  -[DBNotificationViewController presenter:gestureRecognizer:translationInView:]
  -[DBNotificationViewController presenter:willPresentPresentable:withTransitionCoordinator:userInfo:]
  -[DBNotificationViewController invalidate]
  -[DBNotificationViewController environmentConfiguration]
  -[DBNotificationViewController presenterRequestsVisibility:]
  -[DBNotificationViewController bannerSourceListener:recommendsSuspending:forReason:revokingCurrent:error:]
  -[DBNotificationViewController presenter:willTransitionToSize:withTransitionCoordinator:]
  -[DBNotificationViewController bannerSourceListener:layoutDescriptionWithError:]
  -[DBNotificationViewController setSuspensionReasons:]
  -[DBNotificationViewController sceneSpecificationForBannerSourceListener:]
  -[DBNotificationViewController defaultTransitioningDelegateForPresenter:]
  -[DBNotificationViewController _performCancelTapGesture:]
  -[DBNotificationViewController setSuspended:cancellingCurrent:forReason:]
  -[DBNotificationViewController initWithEnvironmentConfiguration:delegate:]
  -[DBNotificationViewController visibleNotificationScene]
  -[DBNotificationViewController notificationHeight]
  -[DBNotificationViewController handleHomeEvent]
  -[DBNotificationViewController handleTransitionFromFrame:toFrame:]
  -[DBNotificationViewController _layoutDescriptionWithBounds:preferredSize:]
  -[DBNotificationViewController screenBorrowToken]
  -[DBNotificationViewController setScreenBorrowToken:]
  -[DBNotificationViewController screenBorrowingPresentableRequestID]
  -[DBNotificationViewController setScreenBorrowingPresentableRequestID:]
  -[DBNotificationViewController bannerHostMonitor]
  -[DBNotificationViewController bannerSourceListener]
  -[DBNotificationViewController bannerContentViewController]
  -[DBNotificationViewController bannerAuthority]
  -[DBNotificationViewController tapDismissGestureRecognizer]


DBSmartWidgetHomeSource : DBSmartWidgetSource <DBHomeManagerObserver, DBHomeObserver>
 @property  DBHomeManager *homeManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBSmartWidgetHomeSource sourceName]
  +[DBSmartWidgetHomeSource load]
  +[DBSmartWidgetHomeSource predictionClasses]

  // instance methods
  -[DBSmartWidgetHomeSource dealloc]
  -[DBSmartWidgetHomeSource .cxx_destruct]
  -[DBSmartWidgetHomeSource homeManager]
  -[DBSmartWidgetHomeSource initWithDelegate:resourceProvider:]
  -[DBSmartWidgetHomeSource homeManager:willRemoveHomes:]
  -[DBSmartWidgetHomeSource homeManager:didUpdateHomes:]
  -[DBSmartWidgetHomeSource home:didUpdateLastUsedServiceOfType:]
  -[DBSmartWidgetHomeSource homeDidChangeInRange:]
  -[DBSmartWidgetHomeSource homeDidEnterExtendedRange:]
  -[DBSmartWidgetHomeSource homeDidExitExtendedRange:]
  -[DBSmartWidgetHomeSource freshPredictions]


DBWorkspaceStateChangeRequest : NSObject <NSCopying, NSMutableCopying>
 @property  NSArray *changeItems
 @property  @? completionHandler

  // instance methods
  -[DBWorkspaceStateChangeRequest .cxx_destruct]
  -[DBWorkspaceStateChangeRequest copyWithZone:]
  -[DBWorkspaceStateChangeRequest mutableCopyWithZone:]
  -[DBWorkspaceStateChangeRequest setCompletionHandler:]
  -[DBWorkspaceStateChangeRequest completionHandler]
  -[DBWorkspaceStateChangeRequest _initWithRequest:]
  -[DBWorkspaceStateChangeRequest changeItems]


DBMutableWorkspaceStateChangeRequest : DBWorkspaceStateChangeRequest
  // instance methods
  -[DBMutableWorkspaceStateChangeRequest copyWithZone:]
  -[DBMutableWorkspaceStateChangeRequest mutableCopyWithZone:]
  -[DBMutableWorkspaceStateChangeRequest activateSiri]
  -[DBMutableWorkspaceStateChangeRequest addChangeItem:]
  -[DBMutableWorkspaceStateChangeRequest removeChangeItem:]
  -[DBMutableWorkspaceStateChangeRequest deactivateApplication:]
  -[DBMutableWorkspaceStateChangeRequest destroyApplication:]
  -[DBMutableWorkspaceStateChangeRequest activateApplication:]
  -[DBMutableWorkspaceStateChangeRequest activateApplication:withSettings:]
  -[DBMutableWorkspaceStateChangeRequest activateStackedApplication:]
  -[DBMutableWorkspaceStateChangeRequest activateStackedApplication:withSettings:]
  -[DBMutableWorkspaceStateChangeRequest activateSiriFloating]
  -[DBMutableWorkspaceStateChangeRequest deactivateSiri]


DBWallpaperViewController : UIViewController <FBSceneManagerObserver, FBSceneObserver, BSInvalidatable>
 @property  BOOL invalidated
 @property  <DBEnvironment> *environment
 @property  DBApplicationInfo *wallpaperAppInfo
 @property  NSString *sceneID
 @property  FBScene *scene
 @property  <UIScenePresenter> *scenePresenter
 @property  NSMutableDictionary *scenePresentersByIdentifier
 @property  UIView<UIScenePresentation> *sceneHostView
 @property  NSString *requester
 @property  DBSceneUpdate *currentSceneUpdate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBWallpaperViewController sceneManager:didCreateScene:]
  -[DBWallpaperViewController sceneManager:didDestroyScene:]
  -[DBWallpaperViewController setInvalidated:]
  -[DBWallpaperViewController initWithEnvironment:]
  -[DBWallpaperViewController scenePresenter]
  -[DBWallpaperViewController setScene:]
  -[DBWallpaperViewController sceneManager:updateForScene:appliedWithContext:]
  -[DBWallpaperViewController isInvalidated]
  -[DBWallpaperViewController setRequester:]
  -[DBWallpaperViewController setSceneID:]
  -[DBWallpaperViewController requester]
  -[DBWallpaperViewController .cxx_destruct]
  -[DBWallpaperViewController sceneID]
  -[DBWallpaperViewController viewDidLoad]
  -[DBWallpaperViewController viewDidLayoutSubviews]
  -[DBWallpaperViewController invalidate]
  -[DBWallpaperViewController setEnvironment:]
  -[DBWallpaperViewController scene]
  -[DBWallpaperViewController environment]
  -[DBWallpaperViewController setScenePresenter:]
  -[DBWallpaperViewController sceneHostView]
  -[DBWallpaperViewController setSceneHostView:]
  -[DBWallpaperViewController updateAppearanceForWallpaper]
  -[DBWallpaperViewController _sendSceneUpdate]
  -[DBWallpaperViewController wallpaperAppInfo]
  -[DBWallpaperViewController setWallpaperAppInfo:]
  -[DBWallpaperViewController scenePresentersByIdentifier]
  -[DBWallpaperViewController setScenePresentersByIdentifier:]
  -[DBWallpaperViewController currentSceneUpdate]
  -[DBWallpaperViewController setCurrentSceneUpdate:]


DBCalendarLeafIcon : DBLeafIcon
  // class methods
  +[DBCalendarLeafIcon dataSourceClass]

  // instance methods
  -[DBCalendarLeafIcon _significantTimeChange]
  -[DBCalendarLeafIcon initWithApplicationInfo:]
  -[DBCalendarLeafIcon dealloc]


DBUserAlertServer : NSObject <URTAlertServiceDelegate, BSInvalidatable>
 @property  DBEnvironmentConfiguration *environmentConfiguration
 @property  URTAlertService *service
 @property  NSMutableArray *pendingSystemViewControllers
 @property  NSMutableDictionary *pendingViewControllersForAppBundleID
 @property  <DBSystemAlertPresenting> *systemPresenter
 @property  <DBAppAlertPresenting> *appPresenter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBUserAlertServer .cxx_destruct]
  -[DBUserAlertServer service]
  -[DBUserAlertServer invalidate]
  -[DBUserAlertServer environmentConfiguration]
  -[DBUserAlertServer alertService:wantsPresentationForAlert:]
  -[DBUserAlertServer alertService:wantsDismissalForAlert:]
  -[DBUserAlertServer initWithEnvironmentConfiguration:]
  -[DBUserAlertServer alertViewControllerForBundleID:]
  -[DBUserAlertServer _presentSystemViewController:]
  -[DBUserAlertServer _dismissSystemViewController:]
  -[DBUserAlertServer _presentViewController:overApplication:]
  -[DBUserAlertServer _dismissViewController:overApplication:]
  -[DBUserAlertServer systemPresenter]
  -[DBUserAlertServer setSystemPresenter:]
  -[DBUserAlertServer appPresenter]
  -[DBUserAlertServer setAppPresenter:]
  -[DBUserAlertServer pendingSystemViewControllers]
  -[DBUserAlertServer pendingViewControllersForAppBundleID]


DBSmartWidgetHomePrediction : DBSmartWidgetPrediction <DBGarageDoorObserver>
 @property  DBGarageDoor *garageDoor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBSmartWidgetHomePrediction minValue]
  +[DBSmartWidgetHomePrediction maxValue]
  +[DBSmartWidgetHomePrediction resetImages]
  +[DBSmartWidgetHomePrediction openGarageDoor]
  +[DBSmartWidgetHomePrediction closedGarageDoor]
  +[DBSmartWidgetHomePrediction _imageNamed:onBackgroundColor:]
  +[DBSmartWidgetHomePrediction baseScore]

  // instance methods
  -[DBSmartWidgetHomePrediction subtitle]
  -[DBSmartWidgetHomePrediction .cxx_destruct]
  -[DBSmartWidgetHomePrediction actionBlock]
  -[DBSmartWidgetHomePrediction title]
  -[DBSmartWidgetHomePrediction image]
  -[DBSmartWidgetHomePrediction compositingFilter]
  -[DBSmartWidgetHomePrediction value]
  -[DBSmartWidgetHomePrediction uniqueIdentifier]
  -[DBSmartWidgetHomePrediction _iconType]
  -[DBSmartWidgetHomePrediction traitCollectionDidChange:]
  -[DBSmartWidgetHomePrediction updateWithPrediction:]
  -[DBSmartWidgetHomePrediction debugScoreText]
  -[DBSmartWidgetHomePrediction serviceDidUpdate:]
  -[DBSmartWidgetHomePrediction garageDoor:didUpdateDoorState:]
  -[DBSmartWidgetHomePrediction garageDoor:didUpdateTargetDoorState:]
  -[DBSmartWidgetHomePrediction garageDoor:didUpdateObstructionDetected:]
  -[DBSmartWidgetHomePrediction initWithGarageDoor:]
  -[DBSmartWidgetHomePrediction predictedObject]
  -[DBSmartWidgetHomePrediction showImageBorder]
  -[DBSmartWidgetHomePrediction tieBreakScore]
  -[DBSmartWidgetHomePrediction garageDoor]


_DBLongPressGestureRecognizer : UILongPressGestureRecognizer
 @property  unsigned long lastSenderID

  // instance methods
  -[_DBLongPressGestureRecognizer pressesEnded:withEvent:]
  -[_DBLongPressGestureRecognizer pressesCancelled:withEvent:]
  -[_DBLongPressGestureRecognizer pressesBegan:withEvent:]
  -[_DBLongPressGestureRecognizer lastSenderID]
  -[_DBLongPressGestureRecognizer setLastSenderID:]


_DBCornerRadiusWindow : UIWindow
  // instance methods
  -[_DBCornerRadiusWindow _ignoresHitTest]


DBDashboard : NSObject <DBEnvironmentConfigurationObserving, DBLockoutControllerDelegate, DBNotificationViewControllerDelegate, DBSystemAlertPresenting, DBWorkspaceObserver, CARSessionCommandObserving, CRSInCallAssertionServiceObserver, DBEnvironment>
 @property  UIScreen *screen
 @property  UIWindowScene *windowScene
 @property  NSHashTable *sceneObservers
 @property  NSMutableDictionary *identifierToAppScenesMap
 @property  NSMutableDictionary *identifierToForegroundAppScenesMap
 @property  NSMutableDictionary *identifierToAppInfoMap
 @property  DBEnvironmentConfiguration *environmentConfiguration
 @property  DBDashboardLayoutEngine *layoutEngine
 @property  UIWindow *mainWindow
 @property  DBWallpaperViewController *wallpaperViewController
 @property  DBDashboardRootViewController *rootViewController
 @property  DBWorkspace *workspace
 @property  DBDashboardWorkspaceOwner *workspaceOwner
 @property  DBDashboardStateProvider *dashboardStateProvider
 @property  DBStatusBarWindow *statusBarWindow
 @property  DBRootStatusBarViewController *statusBarViewController
 @property  DBStatusBarStateProvider *statusBarStateProvider
 @property  UIWindow *statusBarHostWindow
 @property  <UIScenePresenter> *statusBarScenePresenter
 @property  FBScene *statusBarHostScene
 @property  DBLockOutController *lockOutController
 @property  <BSInvalidatable> *preventPasscodeLockToken
 @property  <BSInvalidatable> *preventSpuriousScreenUndimToken
 @property  DBNotificationWindow *notificationWindow
 @property  DBNotificationViewController *notificationViewController
 @property  UIViewController *alertViewController
 @property  DBSiriViewController *siriViewController
 @property  DBFocusController *focusController
 @property  DBFocusMovementManager *focusMovementManager
 @property  SiriLongPressButtonSource *siriButtonSource
 @property  <SiriAssertion> *siriPrewarmAssertion
 @property  SiriActivityAssertion *siriButtonAssertion
 @property  SiriDirectActionSource *siriDirectActionSource
 @property  double siriPrewarmTimestamp
 @property  DBNowPlayingObserver *nowPlayingObserver
 @property  BOOL screenAvailable
 @property  BOOL showingApp
 @property  id activeCallScreenBorrowToken
 @property  BOOL pendingInCallServiceActivation
 @property  DBStatusBarHomeButtonStateManager *homeButtonStateManager
 @property  DBScreenshotManager *screenshotManager
 @property  UIWindow *resizeWindow
 @property  double currentCornerRadius
 @property  DBSplashScreenAlert *splashScreenAlert
 @property  <BSInvalidatable> *oemScreenLayoutElementAssertion
 @property  UIWindow *interestingWindow
 @property  UIView *interestingView
 @property  UIWindow *cornerRadiusWindow
 @property  UIView *cornerRadiusView
 @property  int connectedNotifyToken
 @property  RBSProcessMonitor *templateAppProcessMonitor
 @property  DBUserAlertServer *userAlertServer
 @property  NSString *activeBundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  FBSDisplayIdentity *displayIdentity
 @property  FBSDisplayConfiguration *displayConfiguration
 @property  <CRSIconLayoutVehicleDataProviding> *iconLayoutDataProvider

  // instance methods
  -[DBDashboard sceneManager:didCreateScene:]
  -[DBDashboard displayIdentity]
  -[DBDashboard sceneManager:willDestroyScene:]
  -[DBDashboard lockOutController]
  -[DBDashboard sceneManager:didDestroyScene:]
  -[DBDashboard setRootViewController:]
  -[DBDashboard sceneManager:updateForScene:preparedWithContext:]
  -[DBDashboard statusBarWindow]
  -[DBDashboard notificationViewController]
  -[DBDashboard rootViewController]
  -[DBDashboard sceneManager:updateForScene:appliedWithContext:]
  -[DBDashboard setLockOutController:]
  -[DBDashboard displayConfiguration]
  -[DBDashboard setWindowScene:]
  -[DBDashboard windowScene]
  -[DBDashboard addObserver:]
  -[DBDashboard hasActiveCall]
  -[DBDashboard dealloc]
  -[DBDashboard wallpaperViewController]
  -[DBDashboard screen]
  -[DBDashboard sceneManager:scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:]
  -[DBDashboard statusBarStateProvider]
  -[DBDashboard .cxx_destruct]
  -[DBDashboard sceneManager:scene:didReceiveActions:]
  -[DBDashboard focusWindow]
  -[DBDashboard observeValueForKeyPath:ofObject:change:context:]
  -[DBDashboard statusBarInsets]
  -[DBDashboard setEnvironmentConfiguration:]
  -[DBDashboard setWorkspace:]
  -[DBDashboard handleEvent:]
  -[DBDashboard sceneManager:updateForScene:completedWithContext:error:]
  -[DBDashboard screenshotManager]
  -[DBDashboard alertViewController]
  -[DBDashboard invalidate]
  -[DBDashboard environmentConfiguration]
  -[DBDashboard removeObserver:]
  -[DBDashboard workspace]
  -[DBDashboard setAlertViewController:]
  -[DBDashboard setScreen:]
  -[DBDashboard activeBundleIdentifier]
  -[DBDashboard _updateUserInterfaceStyle]
  -[DBDashboard systemGestureWindow]
  -[DBDashboard setStatusBarWindow:]
  -[DBDashboard session:openURL:]
  -[DBDashboard session:handleSiriRequestEvent:withPayload:]
  -[DBDashboard session:receivedUnhandledRemoteEvent:withPayload:]
  -[DBDashboard setMainWindow:]
  -[DBDashboard setStatusBarViewController:]
  -[DBDashboard statusBarViewController]
  -[DBDashboard setCurrentCornerRadius:]
  -[DBDashboard currentCornerRadius]
  -[DBDashboard _updateWallpaper]
  -[DBDashboard nowPlayingObserver]
  -[DBDashboard setNowPlayingObserver:]
  -[DBDashboard inCallAssertionServiceDidPresent:]
  -[DBDashboard inCallAssertionServiceDidDismiss:]
  -[DBDashboard inCallAssertionService:didSetBannersEnabled:]
  -[DBDashboard mainWindow]
  -[DBDashboard siriViewController]
  -[DBDashboard setSiriViewController:]
  -[DBDashboard workspace:stateDidChangeFromState:toState:]
  -[DBDashboard environmentConfiguration:viewAreaDidChangeFromViewAreaFrame:safeAreaInsets:toViewAreaFrame:safeAreaInsets:duration:transitionControlType:]
  -[DBDashboard environmentConfigurationPairedVehiclesDidChange:]
  -[DBDashboard environmentConfiguration:appearanceStyleDidChange:]
  -[DBDashboard environmentConfiguration:nightModeDidChange:]
  -[DBDashboard environmentConfiguration:mapsAppearanceStyleDidChange:]
  -[DBDashboard processMonitor:shouldHandleDeathOfBundleIdentifier:isCrash:]
  -[DBDashboard processMonitor:didHandleDeathOfBundleIdentifier:]
  -[DBDashboard alertServer:wantsSystemPresentationForViewController:]
  -[DBDashboard alertServer:wantsSystemDismissalForViewController:]
  -[DBDashboard _homeTapped:]
  -[DBDashboard _backLongPressed:]
  -[DBDashboard _pointerSelectionPressed:]
  -[DBDashboard _screenDidBecomeUnavailable:]
  -[DBDashboard _screenDidBecomeAvailable:]
  -[DBDashboard lockOutController:didChangeFromLockoutMode:toLockOutMode:animated:takeScreen:]
  -[DBDashboard willDisplayNotificationForNotificationViewController:]
  -[DBDashboard didDismissNotificationForNotificationViewController:]
  -[DBDashboard sceneIdentifierForAppInfo:]
  -[DBDashboard sceneForAppInfo:]
  -[DBDashboard sceneFrameForAppInfo:]
  -[DBDashboard sceneFrameForAppInfo:proxyAppInfo:]
  -[DBDashboard safeAreaInsetsForAppInfo:]
  -[DBDashboard safeAreaInsetsForAppInfo:proxyAppInfo:]
  -[DBDashboard applicationInfoForScene:]
  -[DBDashboard sceneInterfaceStyleForAppInfo:proxyAppInfo:]
  -[DBDashboard sceneMapInterfaceStyleForAppInfo:proxyAppInfo:]
  -[DBDashboard shouldDisableFiveRowKeyboards]
  -[DBDashboard iconLayoutDataProvider]
  -[DBDashboard initWithWindowScene:environmentConfiguration:]
  -[DBDashboard handleConnect]
  -[DBDashboard handleACHomeUp:]
  -[DBDashboard handleLongBackPress]
  -[DBDashboard _handleHomeEvent:]
  -[DBDashboard _handleOpenApplicationEvent:]
  -[DBDashboard _handleBackgroundURLDeliveryForLaunchInfo:]
  -[DBDashboard _handleTapToRadarEvent]
  -[DBDashboard _foregroundActiveScene]
  -[DBDashboard _updateDeferrals]
  -[DBDashboard _activeBundleIdentifierForScene:]
  -[DBDashboard _newResizeAnimationWindow]
  -[DBDashboard _takeSnapshotOfFrame:]
  -[DBDashboard _displayRecordingAlert]
  -[DBDashboard _notifyAccessoryIfNeededWithUIContext:]
  -[DBDashboard _sceneInterfaceStyleForScene:]
  -[DBDashboard _dashboardScene]
  -[DBDashboard _drawCorners]
  -[DBDashboard _setInitialFocusOwner]
  -[DBDashboard _isPreYukonNavAppForAppInfo:proxiedAppInfo:]
  -[DBDashboard _isStatusBarScene:]
  -[DBDashboard handleFocusMovementAction:fromScene:]
  -[DBDashboard _handleSiriPrewarmWithTimestamp:]
  -[DBDashboard _handleSiriButtonDownWithTimestamp:]
  -[DBDashboard _handleSiriButtonUpWithTimestamp:]
  -[DBDashboard _launchAppWithInfo:forURL:]
  -[DBDashboard _handleSessionURL:]
  -[DBDashboard _rectForFocusedRectDictionary:]
  -[DBDashboard _updateAppScenesViewArea]
  -[DBDashboard _updateWindowFrames]
  -[DBDashboard _updatePasscodeLockToken]
  -[DBDashboard _animateStartupToHomeScreen]
  -[DBDashboard _animateStartupToIcons]
  -[DBDashboard _animateStartupFromScaledMainWindow]
  -[DBDashboard _handleCarPlayUIReady]
  -[DBDashboard _applicationSceneForBundleID:]
  -[DBDashboard _templateAppStateUpdated:]
  -[DBDashboard _createBackgroundSceneForTemplateAppBundleID:]
  -[DBDashboard goToPageContainingBundleIdentifier:completion:]
  -[DBDashboard dashboardStateProvider]
  -[DBDashboard setDashboardStateProvider:]
  -[DBDashboard sceneObservers]
  -[DBDashboard setSceneObservers:]
  -[DBDashboard identifierToAppScenesMap]
  -[DBDashboard setIdentifierToAppScenesMap:]
  -[DBDashboard identifierToForegroundAppScenesMap]
  -[DBDashboard setIdentifierToForegroundAppScenesMap:]
  -[DBDashboard identifierToAppInfoMap]
  -[DBDashboard setIdentifierToAppInfoMap:]
  -[DBDashboard layoutEngine]
  -[DBDashboard setLayoutEngine:]
  -[DBDashboard setWallpaperViewController:]
  -[DBDashboard workspaceOwner]
  -[DBDashboard setWorkspaceOwner:]
  -[DBDashboard setStatusBarStateProvider:]
  -[DBDashboard statusBarHostWindow]
  -[DBDashboard setStatusBarHostWindow:]
  -[DBDashboard statusBarScenePresenter]
  -[DBDashboard setStatusBarScenePresenter:]
  -[DBDashboard statusBarHostScene]
  -[DBDashboard setStatusBarHostScene:]
  -[DBDashboard preventPasscodeLockToken]
  -[DBDashboard setPreventPasscodeLockToken:]
  -[DBDashboard preventSpuriousScreenUndimToken]
  -[DBDashboard setPreventSpuriousScreenUndimToken:]
  -[DBDashboard notificationWindow]
  -[DBDashboard setNotificationWindow:]
  -[DBDashboard setNotificationViewController:]
  -[DBDashboard focusController]
  -[DBDashboard setFocusController:]
  -[DBDashboard focusMovementManager]
  -[DBDashboard setFocusMovementManager:]
  -[DBDashboard siriButtonSource]
  -[DBDashboard setSiriButtonSource:]
  -[DBDashboard siriPrewarmAssertion]
  -[DBDashboard setSiriPrewarmAssertion:]
  -[DBDashboard siriButtonAssertion]
  -[DBDashboard setSiriButtonAssertion:]
  -[DBDashboard siriDirectActionSource]
  -[DBDashboard setSiriDirectActionSource:]
  -[DBDashboard siriPrewarmTimestamp]
  -[DBDashboard setSiriPrewarmTimestamp:]
  -[DBDashboard isScreenAvailable]
  -[DBDashboard setScreenAvailable:]
  -[DBDashboard showingApp]
  -[DBDashboard setShowingApp:]
  -[DBDashboard activeCallScreenBorrowToken]
  -[DBDashboard setActiveCallScreenBorrowToken:]
  -[DBDashboard pendingInCallServiceActivation]
  -[DBDashboard setPendingInCallServiceActivation:]
  -[DBDashboard homeButtonStateManager]
  -[DBDashboard setHomeButtonStateManager:]
  -[DBDashboard setScreenshotManager:]
  -[DBDashboard resizeWindow]
  -[DBDashboard setResizeWindow:]
  -[DBDashboard splashScreenAlert]
  -[DBDashboard setSplashScreenAlert:]
  -[DBDashboard oemScreenLayoutElementAssertion]
  -[DBDashboard setOemScreenLayoutElementAssertion:]
  -[DBDashboard interestingWindow]
  -[DBDashboard setInterestingWindow:]
  -[DBDashboard interestingView]
  -[DBDashboard setInterestingView:]
  -[DBDashboard cornerRadiusWindow]
  -[DBDashboard setCornerRadiusWindow:]
  -[DBDashboard cornerRadiusView]
  -[DBDashboard setCornerRadiusView:]
  -[DBDashboard connectedNotifyToken]
  -[DBDashboard setConnectedNotifyToken:]
  -[DBDashboard templateAppProcessMonitor]
  -[DBDashboard setTemplateAppProcessMonitor:]
  -[DBDashboard userAlertServer]
  -[DBDashboard setUserAlertServer:]


DBApplicationLaunchInfo : NSObject
 @property  DBApplicationInfo *application
 @property  NSDictionary *activationSettings

  // class methods
  +[DBApplicationLaunchInfo launchInfoForApplication:]
  +[DBApplicationLaunchInfo launchInfoForApplication:withActivationSettings:]

  // instance methods
  -[DBApplicationLaunchInfo application]
  -[DBApplicationLaunchInfo .cxx_destruct]
  -[DBApplicationLaunchInfo activationSettings]
  -[DBApplicationLaunchInfo initWithApplication:activationSettings:]


DBScrollButton : UIButton
 @property  UIImage *scrollImage

  // class methods
  +[DBScrollButton buttonWithDirection:]

  // instance methods
  -[DBScrollButton _updateImage]
  -[DBScrollButton canBecomeFocused]
  -[DBScrollButton .cxx_destruct]
  -[DBScrollButton setEnabled:]
  -[DBScrollButton traitCollectionDidChange:]
  -[DBScrollButton setScrollImage:]
  -[DBScrollButton scrollImage]


DBFolderView : SBRootFolderView
 @property  BOOL buttonUXEnabled
 @property  DBScrollButton *scrollLeftButton
 @property  DBScrollButton *scrollRightButton
 @property  {UIEdgeInsets=dddd} listViewInsets
 @property  NSLayoutConstraint *leadingScrollArrowLeadingConstraint
 @property  NSLayoutConstraint *trailingScrollArrowTrailingConstraint
 @property  <DBEnvironment> *environment

  // class methods
  +[DBFolderView countOfAdditionalPagesToKeepVisibleInOneDirection]
  +[DBFolderView _scrollViewClass]
  +[DBFolderView maximumPageControlHeightForInteractionAffordances:]

  // instance methods
  -[DBFolderView setButtonUXEnabled:]
  -[DBFolderView _updateScrollButtonStatesForIndex:]
  -[DBFolderView setScrollLeftButton:]
  -[DBFolderView hidesOffscreenCustomPageViews]
  -[DBFolderView internalDockPageControlVerticalMargin]
  -[DBFolderView setScrollRightButton:]
  -[DBFolderView setLeadingCustomViewVisibilityProgress:]
  -[DBFolderView shouldInstallFocusGuides]
  -[DBFolderView hitTest:withEvent:]
  -[DBFolderView orientation]
  -[DBFolderView setTrailingScrollArrowTrailingConstraint:]
  -[DBFolderView iconVisibilityHandling]
  -[DBFolderView .cxx_destruct]
  -[DBFolderView listViewInsets]
  -[DBFolderView scrollLeftButton]
  -[DBFolderView _scrollButtonPressed:]
  -[DBFolderView _listViewSideInset]
  -[DBFolderView _offsetToCenterPageControlInSpaceForPageControl]
  -[DBFolderView trailingScrollArrowTrailingConstraint]
  -[DBFolderView initWithConfiguration:]
  -[DBFolderView setListViewInsets:]
  -[DBFolderView scrollRightButton]
  -[DBFolderView pageControlAreaHeight]
  -[DBFolderView _updatePageControlToIndex:]
  -[DBFolderView _layoutSubviews]
  -[DBFolderView setEnvironment:]
  -[DBFolderView buttonUXEnabled]
  -[DBFolderView leadingScrollArrowLeadingConstraint]
  -[DBFolderView _updateIconListFrames]
  -[DBFolderView environment]
  -[DBFolderView _useParallaxOnPageControl]
  -[DBFolderView defaultPageIndex]
  -[DBFolderView _showsButtons]
  -[DBFolderView _newPageControl]
  -[DBFolderView _listViewVerticalInset]
  -[DBFolderView setLeadingScrollArrowLeadingConstraint:]


DBWidgetFocusableView : UIView
 @property  CRSDashboardFocusableItem *focusableItem
 @property  <DBWidgetFocusableViewDelegate> *delegate

  // instance methods
  -[DBWidgetFocusableView pressesEnded:withEvent:]
  -[DBWidgetFocusableView didUpdateFocusInContext:withAnimationCoordinator:]
  -[DBWidgetFocusableView pressesCancelled:withEvent:]
  -[DBWidgetFocusableView setDelegate:]
  -[DBWidgetFocusableView pressesChanged:withEvent:]
  -[DBWidgetFocusableView isUserInteractionEnabled]
  -[DBWidgetFocusableView delegate]
  -[DBWidgetFocusableView canBecomeFocused]
  -[DBWidgetFocusableView .cxx_destruct]
  -[DBWidgetFocusableView initWithFrame:]
  -[DBWidgetFocusableView pressesBegan:withEvent:]
  -[DBWidgetFocusableView _selected]
  -[DBWidgetFocusableView focusableItem]
  -[DBWidgetFocusableView setFocusableItem:]


DBWidgetSceneViewController : DBWidgetViewController <CRSUIDashboardWidgetWindowService, DBWidgetFocusableViewDelegate, FBSceneManagerObserver, FBSceneObserver, NSXPCListenerDelegate, BSInvalidatable, DBProcessMonitorObserving>
 @property  FBSDisplayConfiguration *displayConfiguration
 @property  <UIScenePresenter> *scenePresenter
 @property  UIView<UIScenePresentation> *sceneHostView
 @property  NSString *requester
 @property  unsigned long deactivationReasons
 @property  BOOL invalidated
 @property  NSTimer *retryTimer
 @property  double retryDelay
 @property  unsigned long targetAppCrashTally
 @property  unsigned long proxyAppCrashTally
 @property  FBApplicationUpdateScenesTransaction *transaction
 @property  UITapGestureRecognizer *selectTapGestureRecognizer
 @property  UITapGestureRecognizer *touchTapGestureRecognizer
 @property  NSXPCListener *listener
 @property  BKSTouchDeliveryPolicyAssertion *touchDeliveryPolicyAssertion
 @property  BKSTouchDeliveryPolicyAssertion *cancelTouchesInIsolatedViewAssertion
 @property  unsigned int widgetContextId
 @property  NSArray *focusableItemViews
 @property  DBTodayViewSynchronizedAnimationManager *animationManager
 @property  double initialTouchTimestamp
 @property  BOOL debugSnapshotLabelEnabled
 @property  UIView *touchActionView
 @property  NSMutableSet *touchActionDisabledRequesters
 @property  BOOL proxySceneContentReady
 @property  UIView *loadingView
 @property  DBApplicationInfo *applicationInfo
 @property  DBApplicationInfo *proxiedApplicationInfo
 @property  NSString *sceneID
 @property  NSXPCConnection *connection
 @property  FBScene *scene
 @property  unsigned long widgetStyle
 @property  BOOL enabled
 @property  BOOL foreground
 @property  NSString *targetBundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBWidgetSceneViewController retryDelay]
  -[DBWidgetSceneViewController sceneManager:didCreateScene:]
  -[DBWidgetSceneViewController initialTouchTimestamp]
  -[DBWidgetSceneViewController sceneManager:didDestroyScene:]
  -[DBWidgetSceneViewController _scrollViewWillBeginDragging:]
  -[DBWidgetSceneViewController setInvalidated:]
  -[DBWidgetSceneViewController setRetryDelay:]
  -[DBWidgetSceneViewController targetBundleIdentifier]
  -[DBWidgetSceneViewController scenePresenter]
  -[DBWidgetSceneViewController sceneContentStateDidChange:]
  -[DBWidgetSceneViewController setScene:]
  -[DBWidgetSceneViewController setForeground:]
  -[DBWidgetSceneViewController displayConfiguration]
  -[DBWidgetSceneViewController _scrollViewDidEndDragging:]
  -[DBWidgetSceneViewController transaction]
  -[DBWidgetSceneViewController invalidated]
  -[DBWidgetSceneViewController setRequester:]
  -[DBWidgetSceneViewController foreground]
  -[DBWidgetSceneViewController requester]
  -[DBWidgetSceneViewController viewDidAppear:]
  -[DBWidgetSceneViewController .cxx_destruct]
  -[DBWidgetSceneViewController setEnabled:]
  -[DBWidgetSceneViewController sceneID]
  -[DBWidgetSceneViewController viewDidLoad]
  -[DBWidgetSceneViewController connection]
  -[DBWidgetSceneViewController viewWillAppear:]
  -[DBWidgetSceneViewController setListener:]
  -[DBWidgetSceneViewController viewDidLayoutSubviews]
  -[DBWidgetSceneViewController setTransaction:]
  -[DBWidgetSceneViewController setDisplayConfiguration:]
  -[DBWidgetSceneViewController touchesBegan:withEvent:]
  -[DBWidgetSceneViewController sceneDidInvalidate:]
  -[DBWidgetSceneViewController preferredFocusEnvironments]
  -[DBWidgetSceneViewController setTargetBundleIdentifier:]
  -[DBWidgetSceneViewController invalidate]
  -[DBWidgetSceneViewController enabled]
  -[DBWidgetSceneViewController _retryTimerFired:]
  -[DBWidgetSceneViewController scene]
  -[DBWidgetSceneViewController listener]
  -[DBWidgetSceneViewController setInitialTouchTimestamp:]
  -[DBWidgetSceneViewController setRetryTimer:]
  -[DBWidgetSceneViewController listener:shouldAcceptNewConnection:]
  -[DBWidgetSceneViewController retryTimer]
  -[DBWidgetSceneViewController setScenePresenter:]
  -[DBWidgetSceneViewController setConnection:]
  -[DBWidgetSceneViewController _handleTapGesture:]
  -[DBWidgetSceneViewController deactivationReasons]
  -[DBWidgetSceneViewController setDeactivationReasons:]
  -[DBWidgetSceneViewController applicationInfo]
  -[DBWidgetSceneViewController loadingView]
  -[DBWidgetSceneViewController setLoadingView:]
  -[DBWidgetSceneViewController animationManager]
  -[DBWidgetSceneViewController setAnimationManager:]
  -[DBWidgetSceneViewController _uiStyle]
  -[DBWidgetSceneViewController updateContextId:]
  -[DBWidgetSceneViewController clientSetFocusableItems:]
  -[DBWidgetSceneViewController clientSetWantsLargeSize:fenceHandle:animationSettings:]
  -[DBWidgetSceneViewController clientSetContentReady]
  -[DBWidgetSceneViewController widgetStyle]
  -[DBWidgetSceneViewController setWidgetStyle:]
  -[DBWidgetSceneViewController _mapStyle]
  -[DBWidgetSceneViewController processMonitor:shouldHandleDeathOfBundleIdentifier:isCrash:]
  -[DBWidgetSceneViewController processMonitor:didHandleDeathOfBundleIdentifier:]
  -[DBWidgetSceneViewController proxiedApplicationInfo]
  -[DBWidgetSceneViewController _performSceneUpdateForeground:]
  -[DBWidgetSceneViewController _invalidateRetryTimer]
  -[DBWidgetSceneViewController _scheduleForegroundRetry]
  -[DBWidgetSceneViewController sceneHostView]
  -[DBWidgetSceneViewController setSceneHostView:]
  -[DBWidgetSceneViewController targetAppCrashTally]
  -[DBWidgetSceneViewController setTargetAppCrashTally:]
  -[DBWidgetSceneViewController proxyAppCrashTally]
  -[DBWidgetSceneViewController setProxyAppCrashTally:]
  -[DBWidgetSceneViewController focusableItem:didChangeFocused:]
  -[DBWidgetSceneViewController focusableItem:didChangePressed:]
  -[DBWidgetSceneViewController selectedFocusableItem:]
  -[DBWidgetSceneViewController initWithEnvironment:animationManager:]
  -[DBWidgetSceneViewController prepareLoadingViewAnimated:]
  -[DBWidgetSceneViewController entireWidgetFocusable]
  -[DBWidgetSceneViewController loadingIconImage]
  -[DBWidgetSceneViewController replaceLoadingViewWithView:]
  -[DBWidgetSceneViewController _postTransactionUpdateSceneSettingsForScene:]
  -[DBWidgetSceneViewController _setSceneActive:]
  -[DBWidgetSceneViewController _setTouchActionDisabled:forRequester:]
  -[DBWidgetSceneViewController _updateTouchActionDisabled]
  -[DBWidgetSceneViewController _animateLoadingViewRemovalIfNecessary]
  -[DBWidgetSceneViewController _beginTouchCancellation]
  -[DBWidgetSceneViewController _endTouchCancellation]
  -[DBWidgetSceneViewController setWidgetContextId:]
  -[DBWidgetSceneViewController linearFocusItems]
  -[DBWidgetSceneViewController connectionReady]
  -[DBWidgetSceneViewController selectTapGestureRecognizer]
  -[DBWidgetSceneViewController setSelectTapGestureRecognizer:]
  -[DBWidgetSceneViewController touchTapGestureRecognizer]
  -[DBWidgetSceneViewController setTouchTapGestureRecognizer:]
  -[DBWidgetSceneViewController touchDeliveryPolicyAssertion]
  -[DBWidgetSceneViewController setTouchDeliveryPolicyAssertion:]
  -[DBWidgetSceneViewController cancelTouchesInIsolatedViewAssertion]
  -[DBWidgetSceneViewController setCancelTouchesInIsolatedViewAssertion:]
  -[DBWidgetSceneViewController widgetContextId]
  -[DBWidgetSceneViewController focusableItemViews]
  -[DBWidgetSceneViewController setFocusableItemViews:]
  -[DBWidgetSceneViewController debugSnapshotLabelEnabled]
  -[DBWidgetSceneViewController setDebugSnapshotLabelEnabled:]
  -[DBWidgetSceneViewController touchActionView]
  -[DBWidgetSceneViewController setTouchActionView:]
  -[DBWidgetSceneViewController touchActionDisabledRequesters]
  -[DBWidgetSceneViewController setTouchActionDisabledRequesters:]
  -[DBWidgetSceneViewController proxySceneContentReady]
  -[DBWidgetSceneViewController setProxySceneContentReady:]


_DBWorkspaceStateChangeSession : NSObject <DBWorkspaceStateChangeSession>
 @property  id owner
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_DBWorkspaceStateChangeSession owner]
  -[_DBWorkspaceStateChangeSession setOwner:]
  -[_DBWorkspaceStateChangeSession _watchdogTimerFired]
  -[_DBWorkspaceStateChangeSession dealloc]
  -[_DBWorkspaceStateChangeSession .cxx_destruct]
  -[_DBWorkspaceStateChangeSession invalidate]
  -[_DBWorkspaceStateChangeSession setState:]
  -[_DBWorkspaceStateChangeSession _startWatchdogTimer]
  -[_DBWorkspaceStateChangeSession initWithStateChangeBlock:invalidationBlock:]


DBWorkspace : NSObject <BSInvalidatable>
 @property  <DBWorkspaceState> *state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBWorkspace _setState:]
  -[DBWorkspace addObserver:]
  -[DBWorkspace state]
  -[DBWorkspace .cxx_destruct]
  -[DBWorkspace initWithOwner:]
  -[DBWorkspace invalidate]
  -[DBWorkspace removeObserver:]
  -[DBWorkspace init]
  -[DBWorkspace _invalidateSession:]
  -[DBWorkspace requestStateChange:]
  -[DBWorkspace _createStateChangeSession]


DBDashboardEntity : NSObject <NSCopying>
 @property  DBDashboardWorkspaceStateChangeItem *_sr_associatedChangeItem
 @property  NSString *identifier

  // instance methods
  -[DBDashboardEntity identifier]
  -[DBDashboardEntity _initWithIdentifier:]
  -[DBDashboardEntity .cxx_destruct]
  -[DBDashboardEntity copyWithZone:]
  -[DBDashboardEntity init]
  -[DBDashboardEntity _buildDescriptionWithBuilder:]
  -[DBDashboardEntity isSiriEntity]
  -[DBDashboardEntity isHomescreenEntity]
  -[DBDashboardEntity isApplicationEntity]
  -[DBDashboardEntity isProxiedApplicationEntity]
  -[DBDashboardEntity isFullScreenEntity]
  -[DBDashboardEntity _setSR_associatedChangeItem:]
  -[DBDashboardEntity _sr_associatedChangeItem]


DBDashboardSiriEntity : DBDashboardEntity
 @property  BOOL floating

  // class methods
  +[DBDashboardSiriEntity entity]

  // instance methods
  -[DBDashboardSiriEntity isFloating]
  -[DBDashboardSiriEntity setFloating:]
  -[DBDashboardSiriEntity isSiriEntity]


DBDashboardHomescreenEntity : DBDashboardEntity
  // class methods
  +[DBDashboardHomescreenEntity entity]

  // instance methods
  -[DBDashboardHomescreenEntity isHomescreenEntity]


DBDashboardApplicationSceneEntity : DBDashboardEntity
 @property  DBApplicationInfo *applicationInfo

  // class methods
  +[DBDashboardApplicationSceneEntity applicationSceneEntityForApplicationInfo:]

  // instance methods
  -[DBDashboardApplicationSceneEntity .cxx_destruct]
  -[DBDashboardApplicationSceneEntity applicationInfo]
  -[DBDashboardApplicationSceneEntity _buildDescriptionWithBuilder:]
  -[DBDashboardApplicationSceneEntity isApplicationEntity]
  -[DBDashboardApplicationSceneEntity isFullScreenEntity]
  -[DBDashboardApplicationSceneEntity _initWithApplicationInfo:]


DBDashboardProxiedApplicationSceneEntity : DBDashboardEntity
 @property  DBApplicationInfo *applicationToProxy
 @property  DBDashboardApplicationSceneEntity *proxyEntity

  // class methods
  +[DBDashboardProxiedApplicationSceneEntity application:proxiedByEntity:]

  // instance methods
  -[DBDashboardProxiedApplicationSceneEntity .cxx_destruct]
  -[DBDashboardProxiedApplicationSceneEntity _buildDescriptionWithBuilder:]
  -[DBDashboardProxiedApplicationSceneEntity isProxiedApplicationEntity]
  -[DBDashboardProxiedApplicationSceneEntity _initWithApplication:proxiedByEntity:]
  -[DBDashboardProxiedApplicationSceneEntity applicationToProxy]
  -[DBDashboardProxiedApplicationSceneEntity proxyEntity]


DBLockOutWindow : UIWindow
  // class methods
  +[DBLockOutWindow _isSecure]


DBAppHistory : NSObject <DBAppHistoryAppDockProviding, DBWorkspaceObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *appHistory
 @property  BOOL nowPlayingIsVisible
 @property  CARObserverHashTable *observers
 @property  <DBAppPolicyProviding> *policyProvider
 @property  CRCarPlayAppPolicyEvaluator *policyEvaluator
 @property  NSArray *orderedAppHistory
 @property  NSArray *sessionAppContextURLs
 @property  NSArray *sessionEchoContextURLs
 @property  NSArray *sessionFeatureKeys
 @property  NSMutableDictionary *sessionContextOwners
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBAppHistory availableApplicationContexts]
  +[DBAppHistory applicationCategoryForURL:]
  +[DBAppHistory contextForApplicationCategory:]

  // instance methods
  -[DBAppHistory addObserver:]
  -[DBAppHistory dealloc]
  -[DBAppHistory .cxx_destruct]
  -[DBAppHistory _commonInit]
  -[DBAppHistory setObservers:]
  -[DBAppHistory appHistory]
  -[DBAppHistory setAppHistory:]
  -[DBAppHistory removeObserver:]
  -[DBAppHistory observers]
  -[DBAppHistory policyEvaluator]
  -[DBAppHistory _appInfoForBundleIdentifier:]
  -[DBAppHistory _sessionDidDisconnect]
  -[DBAppHistory isBundleIdentifierValidForDock:]
  -[DBAppHistory appDockCategoryForBundleIdentifier:]
  -[DBAppHistory orderedBundleIdentifiersMatchingDockCategory:]
  -[DBAppHistory orderedAppsMatchingDockCategory:]
  -[DBAppHistory _evaluatePolicyForBundleIdentifier:withBlock:]
  -[DBAppHistory _isNowPlayingApplicationForBundleIdentifier:]
  -[DBAppHistory _isMapsApplicationForBundleIdentifier:]
  -[DBAppHistory _preferredBundleIdentifierInCategory:]
  -[DBAppHistory _allInstalledApplicationsInCategory:]
  -[DBAppHistory workspace:stateDidChangeFromState:toState:]
  -[DBAppHistory _nowPlayingWillAppear:]
  -[DBAppHistory _nowPlayingWillDisappear:]
  -[DBAppHistory initWithPolicyEvaluator:]
  -[DBAppHistory initWithPolicyProvider:]
  -[DBAppHistory resetAppHistory]
  -[DBAppHistory nowPlayingIconTapped]
  -[DBAppHistory _sessionDidConnect:environmentConfiguration:]
  -[DBAppHistory policyForBundleIdentifier:]
  -[DBAppHistory applicationVisibleInCarPlay:withIconProvider:]
  -[DBAppHistory _evaluateUniversalLinksForURL:withIconProvider:completion:]
  -[DBAppHistory openApplicationURL:withIconProvider:activationSettings:completion:]
  -[DBAppHistory setDashboardAppOnDisconnect:]
  -[DBAppHistory applicationCategoryForBundleIdentifier:]
  -[DBAppHistory orderedAppHistory]
  -[DBAppHistory orderedAppsMatchingCategory:]
  -[DBAppHistory lastActivationTimeForApplication:]
  -[DBAppHistory lastActivationTimeForBundleIdentifier:]
  -[DBAppHistory _bundleIdentifierDidBecomeVisible:previousBundleIdentifier:]
  -[DBAppHistory _orderedAppsForBundleIdentifiers:]
  -[DBAppHistory _persistSessionUIContextOwnership]
  -[DBAppHistory sessionAppContextURLs]
  -[DBAppHistory setSessionAppContextURLs:]
  -[DBAppHistory sessionEchoContextURLs]
  -[DBAppHistory setSessionEchoContextURLs:]
  -[DBAppHistory sessionFeatureKeys]
  -[DBAppHistory setSessionFeatureKeys:]
  -[DBAppHistory sessionContextOwners]
  -[DBAppHistory setSessionContextOwners:]
  -[DBAppHistory nowPlayingIsVisible]
  -[DBAppHistory setNowPlayingIsVisible:]
  -[DBAppHistory policyProvider]
  -[DBAppHistory setPolicyProvider:]
  -[DBAppHistory applySessionAppContexts:]
  -[DBAppHistory applySessionEchoContexts:]
  -[DBAppHistory currentOwnerForContext:]
  -[DBAppHistory updateOwner:forContext:]


DBDashboardWorkspaceStateResolution : NSObject
 @property  DBDashboardWorkspaceState *state
 @property  DBDashboardEntity *activateSuspendedEntity

  // instance methods
  -[DBDashboardWorkspaceStateResolution state]
  -[DBDashboardWorkspaceStateResolution .cxx_destruct]
  -[DBDashboardWorkspaceStateResolution setState:]
  -[DBDashboardWorkspaceStateResolution changeItemForEntity:]
  -[DBDashboardWorkspaceStateResolution activateSuspendedEntity]
  -[DBDashboardWorkspaceStateResolution setActivateSuspendedEntity:]


DBDashboardWorkspaceStateResolver : NSObject
 @property  <DBAppPolicyProviding> *policyProvider

  // instance methods
  -[DBDashboardWorkspaceStateResolver .cxx_destruct]
  -[DBDashboardWorkspaceStateResolver initWithPolicyProvider:]
  -[DBDashboardWorkspaceStateResolver policyProvider]
  -[DBDashboardWorkspaceStateResolver setPolicyProvider:]
  -[DBDashboardWorkspaceStateResolver computeNewStateFromState:andRequest:]


DBToStackedAppAnimationSettings : DBAnimationSettings

DBToStackedAppAnimation : DBDashboardAnimation
  // class methods
  +[DBToStackedAppAnimation animationWithSettings:]

  // instance methods
  -[DBToStackedAppAnimation startAnimationWithCompletion:]


_DBClusterCornerRadiusWindow : UIWindow
  // instance methods
  -[_DBClusterCornerRadiusWindow _ignoresHitTest]


DBInstrumentCluster : NSObject <CARSessionCommandObserving, DBEnvironmentConfigurationObserving, DBNavigationStateObserving, DBEnvironment>
 @property  UIScreen *screen
 @property  CARScreenInfo *screenInfo
 @property  NSHashTable *sceneObservers
 @property  NSMutableDictionary *identifierToAppScenesMap
 @property  NSMutableDictionary *identifierToForegroundAppScenesMap
 @property  NSMutableDictionary *identifierToAppInfoMap
 @property  DBEnvironmentConfiguration *environmentConfiguration
 @property  DBWorkspace *workspace
 @property  DBInstrumentClusterWorkspaceOwner *workspaceOwner
 @property  UIWindow *clusterWindow
 @property  DBInstrumentClusterRootViewController *viewController
 @property  UIWindow *cornerRadiusWindow
 @property  UIView *cornerRadiusView
 @property  double currentCornerRadius
 @property  UIWindow *interestingWindow
 @property  UIView *interestingView
 @property  <BSInvalidatable> *eventDispatchAssertion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  FBSDisplayIdentity *displayIdentity
 @property  FBSDisplayConfiguration *displayConfiguration
 @property  <CRSIconLayoutVehicleDataProviding> *iconLayoutDataProvider

  // class methods
  +[DBInstrumentCluster _directionStringForDirection:]

  // instance methods
  -[DBInstrumentCluster sceneManager:didCreateScene:]
  -[DBInstrumentCluster displayIdentity]
  -[DBInstrumentCluster sceneManager:willDestroyScene:]
  -[DBInstrumentCluster sceneManager:didDestroyScene:]
  -[DBInstrumentCluster sceneManager:updateForScene:preparedWithContext:]
  -[DBInstrumentCluster sceneManager:updateForScene:appliedWithContext:]
  -[DBInstrumentCluster displayConfiguration]
  -[DBInstrumentCluster setViewController:]
  -[DBInstrumentCluster addObserver:]
  -[DBInstrumentCluster screen]
  -[DBInstrumentCluster sceneManager:scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:]
  -[DBInstrumentCluster .cxx_destruct]
  -[DBInstrumentCluster sceneManager:scene:didReceiveActions:]
  -[DBInstrumentCluster focusWindow]
  -[DBInstrumentCluster observeValueForKeyPath:ofObject:change:context:]
  -[DBInstrumentCluster setEnvironmentConfiguration:]
  -[DBInstrumentCluster setWorkspace:]
  -[DBInstrumentCluster handleEvent:]
  -[DBInstrumentCluster sceneManager:updateForScene:completedWithContext:error:]
  -[DBInstrumentCluster viewController]
  -[DBInstrumentCluster invalidate]
  -[DBInstrumentCluster environmentConfiguration]
  -[DBInstrumentCluster removeObserver:]
  -[DBInstrumentCluster workspace]
  -[DBInstrumentCluster setScreen:]
  -[DBInstrumentCluster systemGestureWindow]
  -[DBInstrumentCluster session:receivedUnhandledRemoteEvent:withPayload:]
  -[DBInstrumentCluster setCurrentCornerRadius:]
  -[DBInstrumentCluster currentCornerRadius]
  -[DBInstrumentCluster environmentConfiguration:viewAreaDidChangeFromViewAreaFrame:safeAreaInsets:toViewAreaFrame:safeAreaInsets:duration:transitionControlType:]
  -[DBInstrumentCluster environmentConfiguration:receivedShowUIWithURL:]
  -[DBInstrumentCluster stopUIReceivedForEnvironmentConfiguration:]
  -[DBInstrumentCluster environmentConfiguration:appearanceStyleDidChange:]
  -[DBInstrumentCluster environmentConfiguration:nightModeDidChange:]
  -[DBInstrumentCluster environmentConfiguration:mapsAppearanceStyleDidChange:]
  -[DBInstrumentCluster processMonitor:shouldHandleDeathOfBundleIdentifier:isCrash:]
  -[DBInstrumentCluster processMonitor:didHandleDeathOfBundleIdentifier:]
  -[DBInstrumentCluster sceneIdentifierForAppInfo:]
  -[DBInstrumentCluster sceneForAppInfo:]
  -[DBInstrumentCluster sceneFrameForAppInfo:]
  -[DBInstrumentCluster sceneFrameForAppInfo:proxyAppInfo:]
  -[DBInstrumentCluster safeAreaInsetsForAppInfo:]
  -[DBInstrumentCluster safeAreaInsetsForAppInfo:proxyAppInfo:]
  -[DBInstrumentCluster applicationInfoForScene:]
  -[DBInstrumentCluster initWithWindowScene:environmentConfiguration:]
  -[DBInstrumentCluster _foregroundActiveScene]
  -[DBInstrumentCluster _drawCorners]
  -[DBInstrumentCluster sceneObservers]
  -[DBInstrumentCluster setSceneObservers:]
  -[DBInstrumentCluster identifierToAppScenesMap]
  -[DBInstrumentCluster setIdentifierToAppScenesMap:]
  -[DBInstrumentCluster identifierToForegroundAppScenesMap]
  -[DBInstrumentCluster setIdentifierToForegroundAppScenesMap:]
  -[DBInstrumentCluster identifierToAppInfoMap]
  -[DBInstrumentCluster setIdentifierToAppInfoMap:]
  -[DBInstrumentCluster workspaceOwner]
  -[DBInstrumentCluster setWorkspaceOwner:]
  -[DBInstrumentCluster interestingWindow]
  -[DBInstrumentCluster setInterestingWindow:]
  -[DBInstrumentCluster interestingView]
  -[DBInstrumentCluster setInterestingView:]
  -[DBInstrumentCluster cornerRadiusWindow]
  -[DBInstrumentCluster setCornerRadiusWindow:]
  -[DBInstrumentCluster cornerRadiusView]
  -[DBInstrumentCluster setCornerRadiusView:]
  -[DBInstrumentCluster toggleUpInstrumentCluster]
  -[DBInstrumentCluster toggleDownInstrumentCluster]
  -[DBInstrumentCluster toggleLeftInstrumentCluster]
  -[DBInstrumentCluster toggleRightInstrumentCluster]
  -[DBInstrumentCluster pressedSelectInstrumentCluster]
  -[DBInstrumentCluster pressedACBackInstrumentCluster]
  -[DBInstrumentCluster navigationStateProvider:navigatingIdentifiersDidChange:]
  -[DBInstrumentCluster navigationStateProvider:frontmostIdentifierDidChange:]
  -[DBInstrumentCluster _systemRuleForUsage:onDisplays:]
  -[DBInstrumentCluster _clusterScene]
  -[DBInstrumentCluster installHardwareButtonSystemGestures]
  -[DBInstrumentCluster _rootViewControllerInsets]
  -[DBInstrumentCluster screenInfo]
  -[DBInstrumentCluster setScreenInfo:]
  -[DBInstrumentCluster clusterWindow]
  -[DBInstrumentCluster setClusterWindow:]
  -[DBInstrumentCluster eventDispatchAssertion]
  -[DBInstrumentCluster setEventDispatchAssertion:]


DBLockOutView : UIView
 @property  DBEnvironmentConfiguration *environmentConfiguration
 @property  UILabel *titleLabel
 @property  UIImageView *imageView
 @property  UILabel *messageLabel
 @property  UIStackView *buttonStackView
 @property  UITapGestureRecognizer *backToOEMGestureRecognizer
 @property  long long mode
 @property  <DBLockOutViewDelegate> *delegate

  // instance methods
  -[DBLockOutView setTitleLabel:]
  -[DBLockOutView setDelegate:]
  -[DBLockOutView setImageView:]
  -[DBLockOutView delegate]
  -[DBLockOutView setMessageLabel:]
  -[DBLockOutView mode]
  -[DBLockOutView .cxx_destruct]
  -[DBLockOutView layoutSubviews]
  -[DBLockOutView _titleFont]
  -[DBLockOutView setEnvironmentConfiguration:]
  -[DBLockOutView messageLabel]
  -[DBLockOutView environmentConfiguration]
  -[DBLockOutView traitCollectionDidChange:]
  -[DBLockOutView titleLabel]
  -[DBLockOutView imageView]
  -[DBLockOutView _buttonFont]
  -[DBLockOutView _buttonTapped:]
  -[DBLockOutView buttonStackView]
  -[DBLockOutView setButtonStackView:]
  -[DBLockOutView _backToOEM]
  -[DBLockOutView initWithMode:environmentConfiguration:]
  -[DBLockOutView _buttonOfType:]
  -[DBLockOutView _buttonTitleForType:]
  -[DBLockOutView backToOEMGestureRecognizer]
  -[DBLockOutView setBackToOEMGestureRecognizer:]


DBStatusBarScreenResizeButton : DBStatusBarButton
 @property  unsigned long transitionControlType

  // instance methods
  -[DBStatusBarScreenResizeButton _updateImage]
  -[DBStatusBarScreenResizeButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[DBStatusBarScreenResizeButton _updateBackgroundColor]
  -[DBStatusBarScreenResizeButton initWithFrame:]
  -[DBStatusBarScreenResizeButton traitCollectionDidChange:]
  -[DBStatusBarScreenResizeButton setTransitionControlType:]
  -[DBStatusBarScreenResizeButton transitionControlType]


DBKeybagMonitor : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  int lockStateNotificationToken
 @property  long long lockedState
 @property  double backoffInterval
 @property  BOOL permanentlyBlocked
 @property  CARObserverHashTable *observers
 @property  BOOL locked
 @property  long long currentState
 @property  BOOL blocked

  // instance methods
  -[DBKeybagMonitor isBlocked]
  -[DBKeybagMonitor isLocked]
  -[DBKeybagMonitor permanentlyBlocked]
  -[DBKeybagMonitor setCallbackQueue:]
  -[DBKeybagMonitor addObserver:]
  -[DBKeybagMonitor callbackQueue]
  -[DBKeybagMonitor dealloc]
  -[DBKeybagMonitor .cxx_destruct]
  -[DBKeybagMonitor setObservers:]
  -[DBKeybagMonitor setQueue:]
  -[DBKeybagMonitor queue]
  -[DBKeybagMonitor currentState]
  -[DBKeybagMonitor removeObserver:]
  -[DBKeybagMonitor init]
  -[DBKeybagMonitor setPermanentlyBlocked:]
  -[DBKeybagMonitor observers]
  -[DBKeybagMonitor backoffInterval]
  -[DBKeybagMonitor setBackoffInterval:]
  -[DBKeybagMonitor _handleKeybagStatusChanged]
  -[DBKeybagMonitor _queue_updateLockedState]
  -[DBKeybagMonitor lockStateNotificationToken]
  -[DBKeybagMonitor setLockStateNotificationToken:]
  -[DBKeybagMonitor lockedState]
  -[DBKeybagMonitor setLockedState:]


DBNowPlayingIcon : SBLeafIcon
  // instance methods
  -[DBNowPlayingIcon init]


DBIconDropShadowProvider : NSObject
 @property  ^{CGImage=} lightStyleShadowImage
 @property  UIImage *iconImage

  // class methods
  +[DBIconDropShadowProvider invalidate]

  // instance methods
  -[DBIconDropShadowProvider iconImage]
  -[DBIconDropShadowProvider setIconImage:]
  -[DBIconDropShadowProvider .cxx_destruct]
  -[DBIconDropShadowProvider init]
  -[DBIconDropShadowProvider imageForTraitCollection:completion:]
  -[DBIconDropShadowProvider _cleanupImages]
  -[DBIconDropShadowProvider _shadow_drawing_queue_generateLightStyleShadow]
  -[DBIconDropShadowProvider _shadow_drawing_queue_generateDarkStyleShadow]
  -[DBIconDropShadowProvider lightStyleShadowImage]
  -[DBIconDropShadowProvider setLightStyleShadowImage:]


DBAppToAppAnimation : DBDashboardAnimation
  // class methods
  +[DBAppToAppAnimation animationWithSettings:]


_DBAppSwitchDosidoAnimation : DBAppToAppAnimation
  // instance methods
  -[_DBAppSwitchDosidoAnimation startAnimationWithCompletion:]


_DBAppSwitchReducedMotionAnimation : DBAppToAppAnimation
  // instance methods
  -[_DBAppSwitchReducedMotionAnimation startAnimationWithCompletion:]


DBWidgetFocusRingView : UIView
 @property  UIBezierPath *focusPath
 @property  double cornerRadius
 @property  UIColor *ringColor

  // instance methods
  -[DBWidgetFocusRingView .cxx_destruct]
  -[DBWidgetFocusRingView layoutSubviews]
  -[DBWidgetFocusRingView drawRect:]
  -[DBWidgetFocusRingView setCornerRadius:]
  -[DBWidgetFocusRingView cornerRadius]
  -[DBWidgetFocusRingView initWithFrame:]
  -[DBWidgetFocusRingView traitCollectionDidChange:]
  -[DBWidgetFocusRingView setRingColor:]
  -[DBWidgetFocusRingView ringColor]
  -[DBWidgetFocusRingView _updateFocusRect]
  -[DBWidgetFocusRingView focusPath]
  -[DBWidgetFocusRingView setFocusPath:]


DBWidgetView : UIView <CARSessionCommandObserving>
 @property  DBEnvironmentConfiguration *environmentConfiguration
 @property  DBWidgetFocusRingView *focusRingView
 @property  _TtC9DashBoard22DBDashboardPlatterView *platterView
 @property  UIView *highContrastBackgroundColorView
 @property  MTShadowView *shadowView
 @property  UIView *contentView
 @property  <DBWidgetViewFocusEnabledProviding> *focusEnabledProvider
 @property  NSTimer *focusFadeTimer
 @property  BOOL focusFaded
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBWidgetView _wheelChangedWithEvent:]
  -[DBWidgetView contentView]
  -[DBWidgetView didUpdateFocusInContext:withAnimationCoordinator:]
  -[DBWidgetView setPlatterView:]
  -[DBWidgetView setShadowView:]
  -[DBWidgetView shadowView]
  -[DBWidgetView platterView]
  -[DBWidgetView canBecomeFocused]
  -[DBWidgetView .cxx_destruct]
  -[DBWidgetView layoutSubviews]
  -[DBWidgetView setEnvironmentConfiguration:]
  -[DBWidgetView touchesBegan:withEvent:]
  -[DBWidgetView setContentView:]
  -[DBWidgetView environmentConfiguration]
  -[DBWidgetView canBecomeFirstResponder]
  -[DBWidgetView traitCollectionDidChange:]
  -[DBWidgetView session:didUpdateNightMode:]
  -[DBWidgetView focusRingView]
  -[DBWidgetView setFocusRingView:]
  -[DBWidgetView updateAppearanceForWallpaper]
  -[DBWidgetView initWithFrame:focusEnabledProvider:environmentConfiguration:]
  -[DBWidgetView _evaluateFocusFade]
  -[DBWidgetView _startFadeTimerIfNecessary]
  -[DBWidgetView _canFade]
  -[DBWidgetView _fadeFocusRing]
  -[DBWidgetView _unfadeFocusRing]
  -[DBWidgetView highContrastBackgroundColorView]
  -[DBWidgetView setHighContrastBackgroundColorView:]
  -[DBWidgetView focusEnabledProvider]
  -[DBWidgetView setFocusEnabledProvider:]
  -[DBWidgetView focusFadeTimer]
  -[DBWidgetView setFocusFadeTimer:]
  -[DBWidgetView focusFaded]
  -[DBWidgetView setFocusFaded:]


DBWidgetViewController : UIViewController <DBWidgetViewFocusEnabledProviding>
 @property  UIView *contentView
 @property  UIView *dimmingView
 @property  NSArray *linearFocusItems
 @property  <DBEnvironment> *environment
 @property  BOOL hidden
 @property  BOOL wantsLargeSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBWidgetViewController _wallpaperChanged:]
  -[DBWidgetViewController contentView]
  -[DBWidgetViewController pressesEnded:withEvent:]
  -[DBWidgetViewController initWithEnvironment:]
  -[DBWidgetViewController dimmingView]
  -[DBWidgetViewController pressesCancelled:withEvent:]
  -[DBWidgetViewController setDimmingView:]
  -[DBWidgetViewController .cxx_destruct]
  -[DBWidgetViewController loadView]
  -[DBWidgetViewController isHidden]
  -[DBWidgetViewController setHidden:]
  -[DBWidgetViewController setContentView:]
  -[DBWidgetViewController touchesEnded:withEvent:]
  -[DBWidgetViewController environment]
  -[DBWidgetViewController pressesBegan:withEvent:]
  -[DBWidgetViewController snapshotViewAfterScreenUpdates:]
  -[DBWidgetViewController wantsLargeSize]
  -[DBWidgetViewController updateAppearanceForWallpaper]
  -[DBWidgetViewController entireWidgetFocusable]
  -[DBWidgetViewController linearFocusItems]
  -[DBWidgetViewController widgetViewTapped]
  -[DBWidgetViewController invalidateConstraints]
  -[DBWidgetViewController setWantsLargeSize:]


DBAppDockItem : NSObject
 @property  NSString *bundleIdentifier
 @property  unsigned long category
 @property  BOOL active

  // instance methods
  -[DBAppDockItem category]
  -[DBAppDockItem isActive]
  -[DBAppDockItem .cxx_destruct]
  -[DBAppDockItem bundleIdentifier]
  -[DBAppDockItem isEqual:]
  -[DBAppDockItem initWithBundleIdentifier:category:active:]
  -[DBAppDockItem isEqualToAppDockItem:]


DBInCallWidgetViewController : DBWidgetViewController <BSInvalidatable>
 @property  TUCall *currentCall
 @property  NSArray *constraints
 @property  NSArray *tallMultiwayOnlyConstraints
 @property  NSArray *tallNonMultiwayConstraints
 @property  unsigned long widgetStyle
 @property  {CGSize=dd} lastViewSize
 @property  DBInCallWidgetAvatarView *avatarButton
 @property  DBInCallWidgetAppIconButton *appIconButton
 @property  UILabel *contactNameLabel
 @property  UILabel *callTimeLabel
 @property  DBInCallWidgetMultiwayTitleButton *multiwayTitleButton
 @property  DBInCallWidgetButton *muteButton
 @property  DBInCallWidgetButton *endCallButton
 @property  UIFocusContainerGuide *topFocusContainerGuide
 @property  UIFocusContainerGuide *bottomFocusContainerGuide
 @property  UIFocusContainerGuide *multiwayLabelFocusContainerGuide
 @property  UILayoutGuide *leftButtonGuide
 @property  UILayoutGuide *midButtonGuide
 @property  UILayoutGuide *rightButtonGuide
 @property  UILayoutGuide *labelContainerGuide
 @property  UILayoutGuide *topRowGuide
 @property  UILayoutGuide *midTopRowGuide
 @property  UILayoutGuide *midBottomGuide
 @property  UILayoutGuide *bottomRowGuide
 @property  CADisplayLink *callTimeDisplayLink
 @property  BOOL invalidated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBInCallWidgetViewController _displayLinkFired:]
  -[DBInCallWidgetViewController buttonTapped:]
  -[DBInCallWidgetViewController setInvalidated:]
  -[DBInCallWidgetViewController setupConstraints]
  -[DBInCallWidgetViewController invalidated]
  -[DBInCallWidgetViewController viewDidAppear:]
  -[DBInCallWidgetViewController dealloc]
  -[DBInCallWidgetViewController setConstraints:]
  -[DBInCallWidgetViewController .cxx_destruct]
  -[DBInCallWidgetViewController viewDidLoad]
  -[DBInCallWidgetViewController viewDidLayoutSubviews]
  -[DBInCallWidgetViewController invalidate]
  -[DBInCallWidgetViewController setHidden:]
  -[DBInCallWidgetViewController constraints]
  -[DBInCallWidgetViewController appIconButton]
  -[DBInCallWidgetViewController setAppIconButton:]
  -[DBInCallWidgetViewController muteButton]
  -[DBInCallWidgetViewController setMuteButton:]
  -[DBInCallWidgetViewController widgetStyle]
  -[DBInCallWidgetViewController setWidgetStyle:]
  -[DBInCallWidgetViewController currentCall]
  -[DBInCallWidgetViewController handleCallStatusChanged]
  -[DBInCallWidgetViewController entireWidgetFocusable]
  -[DBInCallWidgetViewController linearFocusItems]
  -[DBInCallWidgetViewController widgetViewTapped]
  -[DBInCallWidgetViewController _muteStateChanged:]
  -[DBInCallWidgetViewController updateLabelsForCurrentStyle]
  -[DBInCallWidgetViewController _shouldUseMultilineTitleButton]
  -[DBInCallWidgetViewController _updateUIForCallState]
  -[DBInCallWidgetViewController _displayNameForCall:]
  -[DBInCallWidgetViewController setCurrentCall:]
  -[DBInCallWidgetViewController tallMultiwayOnlyConstraints]
  -[DBInCallWidgetViewController setTallMultiwayOnlyConstraints:]
  -[DBInCallWidgetViewController tallNonMultiwayConstraints]
  -[DBInCallWidgetViewController setTallNonMultiwayConstraints:]
  -[DBInCallWidgetViewController lastViewSize]
  -[DBInCallWidgetViewController setLastViewSize:]
  -[DBInCallWidgetViewController avatarButton]
  -[DBInCallWidgetViewController setAvatarButton:]
  -[DBInCallWidgetViewController contactNameLabel]
  -[DBInCallWidgetViewController setContactNameLabel:]
  -[DBInCallWidgetViewController callTimeLabel]
  -[DBInCallWidgetViewController setCallTimeLabel:]
  -[DBInCallWidgetViewController multiwayTitleButton]
  -[DBInCallWidgetViewController setMultiwayTitleButton:]
  -[DBInCallWidgetViewController endCallButton]
  -[DBInCallWidgetViewController setEndCallButton:]
  -[DBInCallWidgetViewController topFocusContainerGuide]
  -[DBInCallWidgetViewController setTopFocusContainerGuide:]
  -[DBInCallWidgetViewController bottomFocusContainerGuide]
  -[DBInCallWidgetViewController setBottomFocusContainerGuide:]
  -[DBInCallWidgetViewController multiwayLabelFocusContainerGuide]
  -[DBInCallWidgetViewController setMultiwayLabelFocusContainerGuide:]
  -[DBInCallWidgetViewController leftButtonGuide]
  -[DBInCallWidgetViewController setLeftButtonGuide:]
  -[DBInCallWidgetViewController midButtonGuide]
  -[DBInCallWidgetViewController setMidButtonGuide:]
  -[DBInCallWidgetViewController rightButtonGuide]
  -[DBInCallWidgetViewController setRightButtonGuide:]
  -[DBInCallWidgetViewController labelContainerGuide]
  -[DBInCallWidgetViewController setLabelContainerGuide:]
  -[DBInCallWidgetViewController topRowGuide]
  -[DBInCallWidgetViewController setTopRowGuide:]
  -[DBInCallWidgetViewController midTopRowGuide]
  -[DBInCallWidgetViewController setMidTopRowGuide:]
  -[DBInCallWidgetViewController midBottomGuide]
  -[DBInCallWidgetViewController setMidBottomGuide:]
  -[DBInCallWidgetViewController bottomRowGuide]
  -[DBInCallWidgetViewController setBottomRowGuide:]
  -[DBInCallWidgetViewController callTimeDisplayLink]
  -[DBInCallWidgetViewController setCallTimeDisplayLink:]


DBStatusBarWindow : UIWindow
 @property  BOOL rightHandDrive

  // instance methods
  -[DBStatusBarWindow setRightHandDrive:]
  -[DBStatusBarWindow isRightHandDrive]
  -[DBStatusBarWindow _canBecomeKeyWindow]
  -[DBStatusBarWindow _reversesLinearFocusWrapping]


_DBWidgetState : NSObject
 @property  UIView *view
 @property  BOOL wantsLargeSize

  // instance methods
  -[_DBWidgetState view]
  -[_DBWidgetState .cxx_destruct]
  -[_DBWidgetState setView:]
  -[_DBWidgetState wantsLargeSize]
  -[_DBWidgetState setWantsLargeSize:]


DBWidgetStackViewController : UIViewController
 @property  NSArray *currentConstraints
 @property  NSArray *widgetViewControllers
 @property  unsigned long visibleCount

  // instance methods
  -[DBWidgetStackViewController currentConstraints]
  -[DBWidgetStackViewController setCurrentConstraints:]
  -[DBWidgetStackViewController widgetViewControllers]
  -[DBWidgetStackViewController .cxx_destruct]
  -[DBWidgetStackViewController viewDidLoad]
  -[DBWidgetStackViewController visibleCount]
  -[DBWidgetStackViewController linearFocusItems]
  -[DBWidgetStackViewController setWidgetViewControllers:]
  -[DBWidgetStackViewController animateWithUpdates:completion:]
  -[DBWidgetStackViewController animateUpdateForWidgetViewController:updateBlock:completion:]
  -[DBWidgetStackViewController _reloadConstraints]
  -[DBWidgetStackViewController _setAnchorPoint:forView:]


DBSiriViewController : UIViewController <SiriPresentationControllerDelegate, SiriPresentationIntentUsageDelegate, DBDashboardWorkspaceEntityPresenting>
 @property  <DBEnvironment> *environment
 @property  SiriPresentationViewController *presentationViewController
 @property  @? presentationRequestHandler
 @property  NSString *activeIntentBundleID
 @property  NSArray *constraints
 @property  id screenBorrowToken
 @property  DBWorkspaceStateChangeRequest *pendingChangeRequest
 @property  <BSInvalidatable> *layoutElementAssertion
 @property  BOOL dismissed
 @property  NSMutableSet *touchToDismissEnabledReasons
 @property  UILongPressGestureRecognizer *touchToDismissRecognizer
 @property  BOOL paired
 @property  <SiriPresentationIntentUsageDelegate> *intentUsageDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier

  // instance methods
  -[DBSiriViewController initWithEnvironment:]
  -[DBSiriViewController isPaired]
  -[DBSiriViewController identifier]
  -[DBSiriViewController viewWillLayoutSubviews]
  -[DBSiriViewController viewDidAppear:]
  -[DBSiriViewController dealloc]
  -[DBSiriViewController setDismissed:]
  -[DBSiriViewController setConstraints:]
  -[DBSiriViewController .cxx_destruct]
  -[DBSiriViewController viewDidLoad]
  -[DBSiriViewController handleEvent:]
  -[DBSiriViewController setPaired:]
  -[DBSiriViewController setEnvironment:]
  -[DBSiriViewController environment]
  -[DBSiriViewController constraints]
  -[DBSiriViewController presentsFullScreen]
  -[DBSiriViewController presentationViewController]
  -[DBSiriViewController setPresentationViewController:]
  -[DBSiriViewController isDismissed]
  -[DBSiriViewController siriPresentation:requestsPresentationWithOptions:withHandler:]
  -[DBSiriViewController siriPresentation:requestsDismissalWithOptions:withHandler:]
  -[DBSiriViewController siriPresentation:isEnabledDidChange:]
  -[DBSiriViewController siriPresentation:requestsPunchout:withHandler:]
  -[DBSiriViewController activeIntentWithBundleId:]
  -[DBSiriViewController _updateHostedPresentationFrame]
  -[DBSiriViewController intentUsageDelegate]
  -[DBSiriViewController setIntentUsageDelegate:]
  -[DBSiriViewController _hostedPresentationFrame]
  -[DBSiriViewController screenBorrowToken]
  -[DBSiriViewController setScreenBorrowToken:]
  -[DBSiriViewController _telephonyDropTapped:]
  -[DBSiriViewController _touchedDisplayToDismiss:]
  -[DBSiriViewController presentsUnderStatusBar]
  -[DBSiriViewController presentationViewWithIdentifier:]
  -[DBSiriViewController invalidatePresentationViewForIdentifier:]
  -[DBSiriViewController foregroundSceneWithSettings:completion:]
  -[DBSiriViewController backgroundSceneWithCompletion:]
  -[DBSiriViewController activateSceneWithSettings:completion:]
  -[DBSiriViewController deactivateSceneWithReasonMask:]
  -[DBSiriViewController setTouchToDismissEnabled:forRequester:]
  -[DBSiriViewController handleTransitionToFrame:]
  -[DBSiriViewController _handleHomeEventType:]
  -[DBSiriViewController _addPresentationView]
  -[DBSiriViewController _removePresentationView]
  -[DBSiriViewController _handlePunchoutRequest:]
  -[DBSiriViewController _requestDismissalWithReason:]
  -[DBSiriViewController _handleBackgroundURLRequest:applicationInfo:]
  -[DBSiriViewController _safeDismissAnimated:completion:]
  -[DBSiriViewController _updateTouchToDismiss]
  -[DBSiriViewController activeIntentBundleID]
  -[DBSiriViewController setActiveIntentBundleID:]
  -[DBSiriViewController presentationRequestHandler]
  -[DBSiriViewController setPresentationRequestHandler:]
  -[DBSiriViewController pendingChangeRequest]
  -[DBSiriViewController setPendingChangeRequest:]
  -[DBSiriViewController layoutElementAssertion]
  -[DBSiriViewController setLayoutElementAssertion:]
  -[DBSiriViewController touchToDismissEnabledReasons]
  -[DBSiriViewController setTouchToDismissEnabledReasons:]
  -[DBSiriViewController touchToDismissRecognizer]
  -[DBSiriViewController setTouchToDismissRecognizer:]


DBHomeKitService : NSObject <HMAccessoryDelegate, DBHomeKitEntity>
 @property  BOOL lastWritten
 @property  HMService *service
 @property  NSDictionary *characteristicsByType
 @property  CARObserverHashTable *observers
 @property  NSUUID *homeUniqueIdentifier
 @property  DBHome *home
 @property  NSDictionary *characteristics
 @property  BOOL interactive
 @property  NSString *type
 @property  BOOL reachable
 @property  BOOL current
 @property  BOOL pendingWrite
 @property  BOOL pendingRead
 @property  BOOL hasError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier
 @property  NSString *name
 @property  BOOL usable
 @property  NSString *stateDescription
 @property  double distance

  // class methods
  +[DBHomeKitService load]
  +[DBHomeKitService serviceType]
  +[DBHomeKitService registerServiceClass:]
  +[DBHomeKitService registeredServiceClasses]
  +[DBHomeKitService serviceWithHome:service:]
  +[DBHomeKitService observerProtocol]

  // instance methods
  -[DBHomeKitService current]
  -[DBHomeKitService distance]
  -[DBHomeKitService home]
  -[DBHomeKitService stateDescription]
  -[DBHomeKitService interactive]
  -[DBHomeKitService type]
  -[DBHomeKitService addObserver:]
  -[DBHomeKitService setService:]
  -[DBHomeKitService .cxx_destruct]
  -[DBHomeKitService service]
  -[DBHomeKitService characteristics]
  -[DBHomeKitService setObservers:]
  -[DBHomeKitService hasError]
  -[DBHomeKitService serviceType]
  -[DBHomeKitService name]
  -[DBHomeKitService uniqueIdentifier]
  -[DBHomeKitService removeObserver:]
  -[DBHomeKitService observers]
  -[DBHomeKitService usable]
  -[DBHomeKitService accessoryDidUpdateServices:]
  -[DBHomeKitService accessoryDidUpdateReachability:]
  -[DBHomeKitService accessory:service:didUpdateValueForCharacteristic:]
  -[DBHomeKitService homeUniqueIdentifier]
  -[DBHomeKitService reachable]
  -[DBHomeKitService characteristicsByType]
  -[DBHomeKitService initWithHome:service:]
  -[DBHomeKitService characteristicForType:]
  -[DBHomeKitService characteristicForName:]
  -[DBHomeKitService pendingWrite]
  -[DBHomeKitService pendingRead]
  -[DBHomeKitService refreshCharacteristicValues]
  -[DBHomeKitService managedCharacteristics]
  -[DBHomeKitService _characteristicDidUpdate:]
  -[DBHomeKitService _tracksLastUsed]
  -[DBHomeKitService _shouldUpdateLastUsedForCharacteristic:]
  -[DBHomeKitService lastWritten]
  -[DBHomeKitService setLastWritten:]


DBDashboardWorkspaceState : NSObject <DBWorkspaceState, NSCopying, NSMutableCopying>
 @property  DBDashboardEntity *baseEntity
 @property  DBDashboardEntity *stackedEntity
 @property  NSString *activeBundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBDashboardWorkspaceState .cxx_destruct]
  -[DBDashboardWorkspaceState _initWithState:]
  -[DBDashboardWorkspaceState copyWithZone:]
  -[DBDashboardWorkspaceState mutableCopyWithZone:]
  -[DBDashboardWorkspaceState activeBundleIdentifier]
  -[DBDashboardWorkspaceState _bundleIdentifierFromEntity:]
  -[DBDashboardWorkspaceState baseEntity]
  -[DBDashboardWorkspaceState stackedEntity]


DBMutableDashboardWorkspaceState : DBDashboardWorkspaceState
 @property  DBDashboardEntity *baseEntity
 @property  DBDashboardEntity *stackedEntity

  // instance methods
  -[DBMutableDashboardWorkspaceState copyWithZone:]
  -[DBMutableDashboardWorkspaceState setBaseEntity:]
  -[DBMutableDashboardWorkspaceState setStackedEntity:]


DBDashboardStateProvider : NSObject <DBWorkspaceObserver, DBHomeViewPageChangeObserving>
 @property  DBDashboard *dashboard
 @property  CARObserverHashTable *observers
 @property  BOOL connectionReady
 @property  unsigned long lockoutState
 @property  unsigned long pageType
 @property  NSString *activeBundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBDashboardStateProvider pageType]
  -[DBDashboardStateProvider addObserver:]
  -[DBDashboardStateProvider .cxx_destruct]
  -[DBDashboardStateProvider setObservers:]
  -[DBDashboardStateProvider lockoutState]
  -[DBDashboardStateProvider removeObserver:]
  -[DBDashboardStateProvider setPageType:]
  -[DBDashboardStateProvider observers]
  -[DBDashboardStateProvider activeBundleIdentifier]
  -[DBDashboardStateProvider setLockoutState:]
  -[DBDashboardStateProvider workspace:stateDidChangeFromState:toState:]
  -[DBDashboardStateProvider setActiveBundleIdentifier:]
  -[DBDashboardStateProvider connectionReady]
  -[DBDashboardStateProvider homeViewController:didChangeToPageIndex:firstIconPageIndex:minimumPageIndex:]
  -[DBDashboardStateProvider initWithDashboard:]
  -[DBDashboardStateProvider setConnectionReady:]
  -[DBDashboardStateProvider _refreshObservations]
  -[DBDashboardStateProvider dashboard]


DBMapsWidgetViewController : DBWidgetSceneViewController
 @property  <DBWidgetSizeManaging> *widgetSizeManager
 @property  BKSAnimationFenceHandle *pendingFenceHandle
 @property  BSAnimationSettings *pendingAnimationSettings
 @property  NSArray *availableWidgetSizes

  // instance methods
  -[DBMapsWidgetViewController .cxx_destruct]
  -[DBMapsWidgetViewController sceneID]
  -[DBMapsWidgetViewController viewDidLayoutSubviews]
  -[DBMapsWidgetViewController clientSetWantsLargeSize:fenceHandle:animationSettings:]
  -[DBMapsWidgetViewController updateAppearanceForWallpaper]
  -[DBMapsWidgetViewController prepareLoadingViewAnimated:]
  -[DBMapsWidgetViewController connectionReady]
  -[DBMapsWidgetViewController setWantsLargeSize:]
  -[DBMapsWidgetViewController initWithEnvironment:animationManager:widgetSizeManager:]
  -[DBMapsWidgetViewController setAvailableWidgetSizes:]
  -[DBMapsWidgetViewController availableWidgetSizes]
  -[DBMapsWidgetViewController widgetSizeManager]
  -[DBMapsWidgetViewController setWidgetSizeManager:]
  -[DBMapsWidgetViewController pendingFenceHandle]
  -[DBMapsWidgetViewController setPendingFenceHandle:]
  -[DBMapsWidgetViewController pendingAnimationSettings]
  -[DBMapsWidgetViewController setPendingAnimationSettings:]


DBHome : NSObject <DBLocationManagerObserver, DBNetworkPathMonitorObserver, HMHomeDelegatePrivate, DBHomeKitEntity>
 @property  HMHome *home
 @property  NSDictionary *cachedGarageDoors
 @property  BOOL hasCachedGarageDoors
 @property  NSMutableSet *updatingLastUsedServiceTypes
 @property  NSMutableDictionary *lastUsedIdentifiersByServiceType
 @property  BOOL garageDoorRefreshScheduled
 @property  NSString *formattedUniqueIdentifier
 @property  DBLocationManager *locationManager
 @property  BOOL previouslyInRange
 @property  BOOL inExtendedRange
 @property  double lastLoggedDistance
 @property  DBNetworkPathMonitor *networkPathMonitor
 @property  CARObserverHashTable *observers
 @property  CLLocation *location
 @property  BOOL inRange
 @property  BOOL hasGarageDoor
 @property  NSArray *garageDoors
 @property  DBGarageDoor *lastUsedGarageDoor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uniqueIdentifier
 @property  NSString *name
 @property  BOOL usable
 @property  NSString *stateDescription
 @property  double distance

  // class methods
  +[DBHome maxDistance]

  // instance methods
  -[DBHome distance]
  -[DBHome home]
  -[DBHome stateDescription]
  -[DBHome home:didAddAccessory:]
  -[DBHome home:didRemoveAccessory:]
  -[DBHome addObserver:]
  -[DBHome dealloc]
  -[DBHome .cxx_destruct]
  -[DBHome locationManager:didUpdateLocation:]
  -[DBHome locationManager]
  -[DBHome setObservers:]
  -[DBHome networkPathMonitor]
  -[DBHome name]
  -[DBHome uniqueIdentifier]
  -[DBHome location]
  -[DBHome removeObserver:]
  -[DBHome observers]
  -[DBHome usable]
  -[DBHome home:didUpdateLocation:]
  -[DBHome homeDidUpdateHomeLocationStatus:]
  -[DBHome locationManager:didEnterRegionIdentifier:]
  -[DBHome locationManager:didExitRegionIdentifier:]
  -[DBHome networkPathMonitor:didChangeNetworkReachable:]
  -[DBHome networkPathMonitorDidChangeNetworkPath:]
  -[DBHome initWithHome:resourceProvider:]
  -[DBHome formattedUniqueIdentifier]
  -[DBHome inRange]
  -[DBHome inLocationRange]
  -[DBHome inHomeRange]
  -[DBHome hasGarageDoor]
  -[DBHome garageDoors]
  -[DBHome cachedGarageDoors]
  -[DBHome hasCachedGarageDoors]
  -[DBHome updatingLastUsedServiceTypes]
  -[DBHome _updateCachedGarageDoors]
  -[DBHome _updateLastUsedServiceOfType:]
  -[DBHome _updateInRangeIfNeeded]
  -[DBHome refreshGarageDoors]
  -[DBHome _setValue:forCharacteristic:completion:]
  -[DBHome _scheduleGarageDoorRefresh]
  -[DBHome lastUsedGarageDoor]
  -[DBHome setCachedGarageDoors:]
  -[DBHome lastUsedIdentifiersByServiceType]
  -[DBHome garageDoorRefreshScheduled]
  -[DBHome setGarageDoorRefreshScheduled:]
  -[DBHome previouslyInRange]
  -[DBHome setPreviouslyInRange:]
  -[DBHome inExtendedRange]
  -[DBHome setInExtendedRange:]
  -[DBHome lastLoggedDistance]
  -[DBHome setLastLoggedDistance:]


DBHomeKitCharacteristic : NSObject <DBHomeKitEntity>
 @property  HMCharacteristic *characteristic
 @property  {os_unfair_lock_s=I} valueLock
 @property  id cachedValue
 @property  id pendingValue
 @property  unsigned long state
 @property  unsigned long transactionId
 @property  NSError *error
 @property  id value
 @property  id formatedValue
 @property  BOOL current
 @property  BOOL pendingWrite
 @property  BOOL pendingRead
 @property  BOOL hasError
 @property  NSString *format
 @property  BOOL notifies
 @property  BOOL readable
 @property  BOOL writeable
 @property  BOOL hidden
 @property  DBHome *home
 @property  DBHomeKitService *service
 @property  NSUUID *uniqueIdentifier
 @property  NSString *name
 @property  BOOL usable
 @property  NSString *stateDescription
 @property  double distance
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBHomeKitCharacteristic load]
  +[DBHomeKitCharacteristic characteristicFormat]
  +[DBHomeKitCharacteristic registerCharacteristicClass:]
  +[DBHomeKitCharacteristic registeredCharacteristicClasses]
  +[DBHomeKitCharacteristic chacteristicWithService:characteristic:]
  +[DBHomeKitCharacteristic characteristicFormats]

  // instance methods
  -[DBHomeKitCharacteristic current]
  -[DBHomeKitCharacteristic distance]
  -[DBHomeKitCharacteristic home]
  -[DBHomeKitCharacteristic stateDescription]
  -[DBHomeKitCharacteristic error]
  -[DBHomeKitCharacteristic state]
  -[DBHomeKitCharacteristic .cxx_destruct]
  -[DBHomeKitCharacteristic hidden]
  -[DBHomeKitCharacteristic setError:]
  -[DBHomeKitCharacteristic service]
  -[DBHomeKitCharacteristic setCurrent:]
  -[DBHomeKitCharacteristic setValue:]
  -[DBHomeKitCharacteristic hasError]
  -[DBHomeKitCharacteristic value]
  -[DBHomeKitCharacteristic name]
  -[DBHomeKitCharacteristic uniqueIdentifier]
  -[DBHomeKitCharacteristic format]
  -[DBHomeKitCharacteristic setState:]
  -[DBHomeKitCharacteristic usable]
  -[DBHomeKitCharacteristic writeable]
  -[DBHomeKitCharacteristic transactionId]
  -[DBHomeKitCharacteristic setTransactionId:]
  -[DBHomeKitCharacteristic _didUpdate]
  -[DBHomeKitCharacteristic readable]
  -[DBHomeKitCharacteristic characteristic]
  -[DBHomeKitCharacteristic setCharacteristic:]
  -[DBHomeKitCharacteristic cachedValue]
  -[DBHomeKitCharacteristic setCachedValue:]
  -[DBHomeKitCharacteristic _updateValue]
  -[DBHomeKitCharacteristic pendingValue]
  -[DBHomeKitCharacteristic setPendingValue:]
  -[DBHomeKitCharacteristic formatedValue]
  -[DBHomeKitCharacteristic pendingWrite]
  -[DBHomeKitCharacteristic pendingRead]
  -[DBHomeKitCharacteristic initWithService:characteristic:]
  -[DBHomeKitCharacteristic _locked_State]
  -[DBHomeKitCharacteristic _lock_setError:]
  -[DBHomeKitCharacteristic updateValueRequiringRead:]
  -[DBHomeKitCharacteristic _readValueCompletionTransactionID:error:]
  -[DBHomeKitCharacteristic notifies]
  -[DBHomeKitCharacteristic setFormatedValue:]
  -[DBHomeKitCharacteristic valueLock]
  -[DBHomeKitCharacteristic setValueLock:]


DBBooksLeafIcon : DBLeafIcon
  // class methods
  +[DBBooksLeafIcon dataSourceClass]


DBIconScrollView : SBIconScrollView
  // instance methods
  -[DBIconScrollView touchesShouldCancelInContentView:]


DBBuddyMonitor : NSObject
 @property  CARObserverHashTable *observers
 @property  BOOL buddyFinished

  // instance methods
  -[DBBuddyMonitor addObserver:]
  -[DBBuddyMonitor dealloc]
  -[DBBuddyMonitor .cxx_destruct]
  -[DBBuddyMonitor setObservers:]
  -[DBBuddyMonitor removeObserver:]
  -[DBBuddyMonitor init]
  -[DBBuddyMonitor observers]
  -[DBBuddyMonitor setBuddyFinished:]
  -[DBBuddyMonitor _updateBuddyFinished]
  -[DBBuddyMonitor buddyFinished]


DBAnimationView : UIView
 @property  NSArray *keysToAnimate

  // instance methods
  -[DBAnimationView .cxx_destruct]
  -[DBAnimationView _shouldAnimatePropertyWithKey:]
  -[DBAnimationView keysToAnimate]
  -[DBAnimationView setKeysToAnimate:]


DBColorButton : UIButton
 @property  UIColor *carButtonColor

  // instance methods
  -[DBColorButton _externalUnfocusedBorderColor]
  -[DBColorButton .cxx_destruct]
  -[DBColorButton carButtonColor]
  -[DBColorButton setCarButtonColor:]


DBAnimationSettings : NSObject
 @property  UIView *rootContainerView
 @property  UIColor *rootContainerBackgroundColor
 @property  UIView *toView
 @property  UIView *toTransitionContainerView
 @property  UIView *fromView
 @property  UIView *fromTransitionContainerView
 @property  DBAppDockViewController *appDockViewController
 @property  NSString *toIdentifier

  // instance methods
  -[DBAnimationSettings fromView]
  -[DBAnimationSettings toView]
  -[DBAnimationSettings setToView:]
  -[DBAnimationSettings .cxx_destruct]
  -[DBAnimationSettings setFromView:]
  -[DBAnimationSettings rootContainerView]
  -[DBAnimationSettings setRootContainerView:]
  -[DBAnimationSettings toIdentifier]
  -[DBAnimationSettings setToIdentifier:]
  -[DBAnimationSettings appDockViewController]
  -[DBAnimationSettings fromTransitionContainerView]
  -[DBAnimationSettings toTransitionContainerView]
  -[DBAnimationSettings rootContainerBackgroundColor]
  -[DBAnimationSettings setRootContainerBackgroundColor:]
  -[DBAnimationSettings setToTransitionContainerView:]
  -[DBAnimationSettings setFromTransitionContainerView:]
  -[DBAnimationSettings setAppDockViewController:]


DBSmartWidgetPrediction : NSObject
 @property  CARObserverHashTable *observers
 @property  <DBSmartWidgetPredictionDelegate> *delegate
 @property  NSUUID *uniqueIdentifier
 @property  NSArray *validRanges
 @property  NSString *title
 @property  NSString *subtitle
 @property  UIImage *image
 @property  CAFilter *compositingFilter
 @property  BOOL showImageBorder
 @property  @? actionBlock
 @property  long long score
 @property  long long tieBreakScore

  // class methods
  +[DBSmartWidgetPrediction initialValidInterval]
  +[DBSmartWidgetPrediction _scoreFor:minValue:maxValue:]
  +[DBSmartWidgetPrediction isEqualClassSelector]

  // instance methods
  -[DBSmartWidgetPrediction setUniqueIdentifier:]
  -[DBSmartWidgetPrediction subtitle]
  -[DBSmartWidgetPrediction setDelegate:]
  -[DBSmartWidgetPrediction addObserver:]
  -[DBSmartWidgetPrediction compare:]
  -[DBSmartWidgetPrediction delegate]
  -[DBSmartWidgetPrediction score]
  -[DBSmartWidgetPrediction .cxx_destruct]
  -[DBSmartWidgetPrediction actionBlock]
  -[DBSmartWidgetPrediction title]
  -[DBSmartWidgetPrediction minValue]
  -[DBSmartWidgetPrediction image]
  -[DBSmartWidgetPrediction setObservers:]
  -[DBSmartWidgetPrediction compositingFilter]
  -[DBSmartWidgetPrediction uniqueIdentifier]
  -[DBSmartWidgetPrediction maxValue]
  -[DBSmartWidgetPrediction removeObserver:]
  -[DBSmartWidgetPrediction traitCollectionDidChange:]
  -[DBSmartWidgetPrediction isEqual:]
  -[DBSmartWidgetPrediction init]
  -[DBSmartWidgetPrediction observers]
  -[DBSmartWidgetPrediction predictionScore]
  -[DBSmartWidgetPrediction isEqualToPrediction:]
  -[DBSmartWidgetPrediction updateWithPrediction:]
  -[DBSmartWidgetPrediction debugScoreText]
  -[DBSmartWidgetPrediction showImageBorder]
  -[DBSmartWidgetPrediction tieBreakScore]
  -[DBSmartWidgetPrediction _defaultIsEqualClass:]
  -[DBSmartWidgetPrediction initialValidInterval]
  -[DBSmartWidgetPrediction validRanges]
  -[DBSmartWidgetPrediction _debugScoreText]
  -[DBSmartWidgetPrediction debugValidRangesText]
  -[DBSmartWidgetPrediction predictedObjectDescription]
  -[DBSmartWidgetPrediction predictionDidUpdate]
  -[DBSmartWidgetPrediction defaultValidRanges]
  -[DBSmartWidgetPrediction invalidateValidIntervals]
  -[DBSmartWidgetPrediction updateRangeIfNeeded:]
  -[DBSmartWidgetPrediction setValidRanges:]


DBTodayViewSynchronizedAnimation : NSObject
 @property  @? animationBlock
 @property  BOOL ready
 @property  id client

  // instance methods
  -[DBTodayViewSynchronizedAnimation ready]
  -[DBTodayViewSynchronizedAnimation setReady:]
  -[DBTodayViewSynchronizedAnimation .cxx_destruct]
  -[DBTodayViewSynchronizedAnimation setClient:]
  -[DBTodayViewSynchronizedAnimation client]
  -[DBTodayViewSynchronizedAnimation setAnimationBlock:]
  -[DBTodayViewSynchronizedAnimation animationBlock]


DBTodayViewSynchronizedAnimationManager : NSObject <BSInvalidatable>
 @property  NSMutableDictionary *animationsByIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBTodayViewSynchronizedAnimationManager .cxx_destruct]
  -[DBTodayViewSynchronizedAnimationManager invalidate]
  -[DBTodayViewSynchronizedAnimationManager init]
  -[DBTodayViewSynchronizedAnimationManager animationsByIdentifier]
  -[DBTodayViewSynchronizedAnimationManager setAnimationsByIdentifier:]
  -[DBTodayViewSynchronizedAnimationManager registerAnimation:client:animation:]
  -[DBTodayViewSynchronizedAnimationManager runAnimationIfPossible:client:]


DBApplicationSceneViewController : UIViewController <FBSceneManagerObserver, FBSceneObserver, DBDashboardWorkspaceEntityPresenting>
 @property  DBApplicationInfo *applicationInfo
 @property  DBApplicationInfo *proxyApplicationInfo
 @property  <DBEnvironment> *environment
 @property  NSString *sceneID
 @property  FBScene *scene
 @property  <UIScenePresenter> *scenePresenter
 @property  NSMutableDictionary *scenePresentersByIdentifier
 @property  UIView<UIScenePresentation> *sceneHostView
 @property  NSString *requester
 @property  DBSceneUpdate *currentSceneUpdate
 @property  <BSInvalidatable> *layoutElementAssertion
 @property  UIViewController *alertViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier

  // instance methods
  -[DBApplicationSceneViewController sceneManager:didCreateScene:]
  -[DBApplicationSceneViewController sceneManager:didDestroyScene:]
  -[DBApplicationSceneViewController identifier]
  -[DBApplicationSceneViewController scenePresenter]
  -[DBApplicationSceneViewController sceneContentStateDidChange:]
  -[DBApplicationSceneViewController setScene:]
  -[DBApplicationSceneViewController sceneManager:updateForScene:appliedWithContext:]
  -[DBApplicationSceneViewController setRequester:]
  -[DBApplicationSceneViewController setSceneID:]
  -[DBApplicationSceneViewController requester]
  -[DBApplicationSceneViewController dealloc]
  -[DBApplicationSceneViewController .cxx_destruct]
  -[DBApplicationSceneViewController sceneID]
  -[DBApplicationSceneViewController viewDidLoad]
  -[DBApplicationSceneViewController handleEvent:]
  -[DBApplicationSceneViewController alertViewController]
  -[DBApplicationSceneViewController setEnvironment:]
  -[DBApplicationSceneViewController scene]
  -[DBApplicationSceneViewController setAlertViewController:]
  -[DBApplicationSceneViewController environment]
  -[DBApplicationSceneViewController setScenePresenter:]
  -[DBApplicationSceneViewController presentsFullScreen]
  -[DBApplicationSceneViewController _requestDismissal]
  -[DBApplicationSceneViewController applicationInfo]
  -[DBApplicationSceneViewController setApplicationInfo:]
  -[DBApplicationSceneViewController _displayLayoutElementIdentifier]
  -[DBApplicationSceneViewController sceneHostView]
  -[DBApplicationSceneViewController setSceneHostView:]
  -[DBApplicationSceneViewController scenePresentersByIdentifier]
  -[DBApplicationSceneViewController setScenePresentersByIdentifier:]
  -[DBApplicationSceneViewController currentSceneUpdate]
  -[DBApplicationSceneViewController setCurrentSceneUpdate:]
  -[DBApplicationSceneViewController presentsUnderStatusBar]
  -[DBApplicationSceneViewController presentationViewWithIdentifier:]
  -[DBApplicationSceneViewController invalidatePresentationViewForIdentifier:]
  -[DBApplicationSceneViewController foregroundSceneWithSettings:completion:]
  -[DBApplicationSceneViewController backgroundSceneWithCompletion:]
  -[DBApplicationSceneViewController activateSceneWithSettings:completion:]
  -[DBApplicationSceneViewController deactivateSceneWithReasonMask:]
  -[DBApplicationSceneViewController layoutElementAssertion]
  -[DBApplicationSceneViewController setLayoutElementAssertion:]
  -[DBApplicationSceneViewController _initWithApplicationInfo:proxyApplicationInfo:environment:]
  -[DBApplicationSceneViewController initWithApplicationInfo:environment:]
  -[DBApplicationSceneViewController initWithApplicationInfo:proxyApplicationInfo:environment:]
  -[DBApplicationSceneViewController _addAlertSubviewIfReady]
  -[DBApplicationSceneViewController _removeAlertSubviewIfNecessary]
  -[DBApplicationSceneViewController _updateSceneUI]
  -[DBApplicationSceneViewController _requestDestroy]
  -[DBApplicationSceneViewController proxyApplicationInfo]
  -[DBApplicationSceneViewController setProxyApplicationInfo:]


DBNowPlayingWidgetViewController : DBWidgetViewController <CPUINowPlayingObserving, DBNowPlayingDelegate, MPRequestResponseControllerDelegate>
 @property  UIFocusContainerGuide *focusContainerGuide
 @property  UIFocusContainerGuide *controlsContainerGuide
 @property  UILongPressGestureRecognizer *backLongPressRecognizer
 @property  UILongPressGestureRecognizer *nextLongPressRecognizer
 @property  long long heldAction
 @property  BOOL seeking
 @property  NSTimer *spinnerTimer
 @property  UIActivityIndicatorView *spinner
 @property  DBNowPlayingObserver *nowPlayingObserver
 @property  CPUINowPlayingSnapshot *lastSnapshot
 @property  NSArray *widgetConstraints
 @property  {CGSize=dd} lastViewSize
 @property  UIButton *artworkButton
 @property  DBNowPlayingFocusHighlightButton *playTransportButton
 @property  DBNowPlayingFocusHighlightButton *nextTransportButton
 @property  DBWidgetFocusRingView *focusRingView
 @property  NSArray *layoutGuides
 @property  BOOL showArtworkBorder
 @property  DBNowPlayingFocusHighlightButton *backTransportButton
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  NSLayoutConstraint *artworkHorizontalConstraint
 @property  CPUIProgressView *progressView
 @property  MPArtworkCatalog *previousCatalog
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBNowPlayingWidgetViewController setSubtitleLabel:]
  -[DBNowPlayingWidgetViewController subtitleLabel]
  -[DBNowPlayingWidgetViewController didUpdateFocusInContext:withAnimationCoordinator:]
  -[DBNowPlayingWidgetViewController setTitleLabel:]
  -[DBNowPlayingWidgetViewController setLayoutGuides:]
  -[DBNowPlayingWidgetViewController setFocusContainerGuide:]
  -[DBNowPlayingWidgetViewController setLastSnapshot:]
  -[DBNowPlayingWidgetViewController viewDidAppear:]
  -[DBNowPlayingWidgetViewController spinner]
  -[DBNowPlayingWidgetViewController dealloc]
  -[DBNowPlayingWidgetViewController .cxx_destruct]
  -[DBNowPlayingWidgetViewController viewDidLoad]
  -[DBNowPlayingWidgetViewController setSeeking:]
  -[DBNowPlayingWidgetViewController viewDidLayoutSubviews]
  -[DBNowPlayingWidgetViewController layoutGuides]
  -[DBNowPlayingWidgetViewController focusContainerGuide]
  -[DBNowPlayingWidgetViewController progressView]
  -[DBNowPlayingWidgetViewController setProgressView:]
  -[DBNowPlayingWidgetViewController lastSnapshot]
  -[DBNowPlayingWidgetViewController traitCollectionDidChange:]
  -[DBNowPlayingWidgetViewController titleLabel]
  -[DBNowPlayingWidgetViewController setSpinner:]
  -[DBNowPlayingWidgetViewController seeking]
  -[DBNowPlayingWidgetViewController nowPlayingObserver]
  -[DBNowPlayingWidgetViewController setNowPlayingObserver:]
  -[DBNowPlayingWidgetViewController nowPlayingManager:didUpdateSnapshot:]
  -[DBNowPlayingWidgetViewController nowPlayingManager:didThrottleUpdateForBundleIdentifier:]
  -[DBNowPlayingWidgetViewController _respondToHeldAction]
  -[DBNowPlayingWidgetViewController _sendAction:withState:]
  -[DBNowPlayingWidgetViewController _sendHeldAction]
  -[DBNowPlayingWidgetViewController focusRingView]
  -[DBNowPlayingWidgetViewController setFocusRingView:]
  -[DBNowPlayingWidgetViewController updateAppearanceForWallpaper]
  -[DBNowPlayingWidgetViewController entireWidgetFocusable]
  -[DBNowPlayingWidgetViewController linearFocusItems]
  -[DBNowPlayingWidgetViewController _widgetStyle]
  -[DBNowPlayingWidgetViewController widgetViewTapped]
  -[DBNowPlayingWidgetViewController invalidateConstraints]
  -[DBNowPlayingWidgetViewController lastViewSize]
  -[DBNowPlayingWidgetViewController setLastViewSize:]
  -[DBNowPlayingWidgetViewController albumArtButtonTapped:]
  -[DBNowPlayingWidgetViewController playPauseButtonTouchDown:]
  -[DBNowPlayingWidgetViewController playPauseButtonTouchUp:]
  -[DBNowPlayingWidgetViewController _cancelHeldAction:]
  -[DBNowPlayingWidgetViewController nextButtonTouchDown:]
  -[DBNowPlayingWidgetViewController nextButtonTouchUp:]
  -[DBNowPlayingWidgetViewController backButtonTouchDown:]
  -[DBNowPlayingWidgetViewController backButtonTouchUp:]
  -[DBNowPlayingWidgetViewController backButtonLongPress:]
  -[DBNowPlayingWidgetViewController nextButtonLongPress:]
  -[DBNowPlayingWidgetViewController nowPlayingObserver:didChangeNowPlayingApplication:]
  -[DBNowPlayingWidgetViewController _imageInsetsForTransportButton:]
  -[DBNowPlayingWidgetViewController _heightForArtwork]
  -[DBNowPlayingWidgetViewController _showsProgressView]
  -[DBNowPlayingWidgetViewController _showsTextLabels]
  -[DBNowPlayingWidgetViewController _showsBackButton]
  -[DBNowPlayingWidgetViewController _setSpinnerVisible:]
  -[DBNowPlayingWidgetViewController _isFocusUI]
  -[DBNowPlayingWidgetViewController _updateButton:withType:variant:]
  -[DBNowPlayingWidgetViewController _setupTransportControls]
  -[DBNowPlayingWidgetViewController _updateAppearanceForWallpaper]
  -[DBNowPlayingWidgetViewController _shouldClearSubtitle]
  -[DBNowPlayingWidgetViewController _shouldUseSubtitleAsTitle]
  -[DBNowPlayingWidgetViewController _nowPlayingPlaceholderImage]
  -[DBNowPlayingWidgetViewController setShowArtworkBorder:]
  -[DBNowPlayingWidgetViewController _updateArtworkBorder]
  -[DBNowPlayingWidgetViewController _setNotPlaying]
  -[DBNowPlayingWidgetViewController _processArtworkForCurrentlyPlayingSong]
  -[DBNowPlayingWidgetViewController _setupPlaceholderArtwork]
  -[DBNowPlayingWidgetViewController _updateArtworkConstraints]
  -[DBNowPlayingWidgetViewController _processLabelsForCurrentlyPlayingSong]
  -[DBNowPlayingWidgetViewController _processPlaybackControlsForCurrentlyPlayingSong]
  -[DBNowPlayingWidgetViewController controlsContainerGuide]
  -[DBNowPlayingWidgetViewController setControlsContainerGuide:]
  -[DBNowPlayingWidgetViewController backLongPressRecognizer]
  -[DBNowPlayingWidgetViewController setBackLongPressRecognizer:]
  -[DBNowPlayingWidgetViewController nextLongPressRecognizer]
  -[DBNowPlayingWidgetViewController setNextLongPressRecognizer:]
  -[DBNowPlayingWidgetViewController heldAction]
  -[DBNowPlayingWidgetViewController setHeldAction:]
  -[DBNowPlayingWidgetViewController spinnerTimer]
  -[DBNowPlayingWidgetViewController setSpinnerTimer:]
  -[DBNowPlayingWidgetViewController widgetConstraints]
  -[DBNowPlayingWidgetViewController setWidgetConstraints:]
  -[DBNowPlayingWidgetViewController artworkButton]
  -[DBNowPlayingWidgetViewController setArtworkButton:]
  -[DBNowPlayingWidgetViewController playTransportButton]
  -[DBNowPlayingWidgetViewController setPlayTransportButton:]
  -[DBNowPlayingWidgetViewController nextTransportButton]
  -[DBNowPlayingWidgetViewController setNextTransportButton:]
  -[DBNowPlayingWidgetViewController showArtworkBorder]
  -[DBNowPlayingWidgetViewController backTransportButton]
  -[DBNowPlayingWidgetViewController setBackTransportButton:]
  -[DBNowPlayingWidgetViewController artworkHorizontalConstraint]
  -[DBNowPlayingWidgetViewController setArtworkHorizontalConstraint:]
  -[DBNowPlayingWidgetViewController previousCatalog]
  -[DBNowPlayingWidgetViewController setPreviousCatalog:]


DBNowPlayingFocusHighlightButton : CPUIMediaButton
  // instance methods
  -[DBNowPlayingFocusHighlightButton touchesBegan:withEvent:]
  -[DBNowPlayingFocusHighlightButton touchesEnded:withEvent:]
  -[DBNowPlayingFocusHighlightButton touchesCancelled:withEvent:]
  -[DBNowPlayingFocusHighlightButton canShowHighlight]
  -[DBNowPlayingFocusHighlightButton colorForKnobFocusLayer]
  -[DBNowPlayingFocusHighlightButton shouldUpdateButtonOpacityForKnobUnfocused]


DBStatusBarViewController : UIViewController
 @property  DBStatusBarStateProvider *stateProvider
 @property  UIStatusBar_Modern *statusBarView
 @property  DBEnvironmentConfiguration *environmentConfiguration

  // instance methods
  -[DBStatusBarViewController stateProvider]
  -[DBStatusBarViewController _createStatusBar]
  -[DBStatusBarViewController dealloc]
  -[DBStatusBarViewController .cxx_destruct]
  -[DBStatusBarViewController viewDidLoad]
  -[DBStatusBarViewController setEnvironmentConfiguration:]
  -[DBStatusBarViewController environmentConfiguration]
  -[DBStatusBarViewController statusBarView]
  -[DBStatusBarViewController setStateProvider:]
  -[DBStatusBarViewController setStatusBarView:]
  -[DBStatusBarViewController initWithStateProvider:environmentConfiguration:]
  -[DBStatusBarViewController statusBarEdgeUpdated]
  -[DBStatusBarViewController hasActivePill]


DBZipArchiver : NSObject <DBArchiving>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBZipArchiver archiveDirectory:toLocation:]
  -[DBZipArchiver unarchive:toLocation:]


DBSmartWidgetView : UIView <DBSmartWidgetPredictionObserver>
 @property  UIImageView *imageview
 @property  UILabel *titleLabel
 @property  UILabel *subTitleLabel
 @property  UILabel *scoreDebugLabel
 @property  UILabel *nextRefreshDebugLabel
 @property  UILabel *validRangesDebugLabel
 @property  DBSmartWidgetPrediction *prediction
 @property  DBSmartWidgetEngine *engine

  // instance methods
  -[DBSmartWidgetView setTitleLabel:]
  -[DBSmartWidgetView setEngine:]
  -[DBSmartWidgetView engine]
  -[DBSmartWidgetView .cxx_destruct]
  -[DBSmartWidgetView initWithFrame:]
  -[DBSmartWidgetView traitCollectionDidChange:]
  -[DBSmartWidgetView didMoveToWindow]
  -[DBSmartWidgetView titleLabel]
  -[DBSmartWidgetView prediction]
  -[DBSmartWidgetView setPrediction:]
  -[DBSmartWidgetView subTitleLabel]
  -[DBSmartWidgetView setSubTitleLabel:]
  -[DBSmartWidgetView _updateViews]
  -[DBSmartWidgetView predictionDidUpdate:]
  -[DBSmartWidgetView _updateImageBorder]
  -[DBSmartWidgetView imageview]
  -[DBSmartWidgetView setImageview:]
  -[DBSmartWidgetView scoreDebugLabel]
  -[DBSmartWidgetView setScoreDebugLabel:]
  -[DBSmartWidgetView nextRefreshDebugLabel]
  -[DBSmartWidgetView setNextRefreshDebugLabel:]
  -[DBSmartWidgetView validRangesDebugLabel]
  -[DBSmartWidgetView setValidRangesDebugLabel:]


DBFocusMovementManager : NSObject
 @property  DBEnvironmentConfiguration *environmentConfiguration

  // class methods
  +[DBFocusMovementManager isMovementAllowedForHeading:direction:isRTL:isLeftHandDrive:statusBarEdge:]
  +[DBFocusMovementManager isOEMToiOSHeadingToStatusBar:isLeftHandDrive:statusBarEdge:]
  +[DBFocusMovementManager convertRect:fromView:toScreen:]
  +[DBFocusMovementManager convertRect:toView:fromScreen:]

  // instance methods
  -[DBFocusMovementManager .cxx_destruct]
  -[DBFocusMovementManager setEnvironmentConfiguration:]
  -[DBFocusMovementManager environmentConfiguration]
  -[DBFocusMovementManager initWithEnvironmentConfiguration:]
  -[DBFocusMovementManager performHapticFeedbackForSenderID:]


DBSmartWidgetCalendarSource : DBSmartWidgetSource
 @property  EKEventStore *eventStore
 @property  EKCalendarVisibilityManager *calendarVisibilityManager

  // class methods
  +[DBSmartWidgetCalendarSource sourceName]
  +[DBSmartWidgetCalendarSource load]
  +[DBSmartWidgetCalendarSource predictionClasses]

  // instance methods
  -[DBSmartWidgetCalendarSource eventStore]
  -[DBSmartWidgetCalendarSource dealloc]
  -[DBSmartWidgetCalendarSource .cxx_destruct]
  -[DBSmartWidgetCalendarSource _eventStoreDidChange:]
  -[DBSmartWidgetCalendarSource initWithDelegate:resourceProvider:]
  -[DBSmartWidgetCalendarSource freshPredictions]
  -[DBSmartWidgetCalendarSource shouldKeepPrediction:]
  -[DBSmartWidgetCalendarSource _includeCalendar:]
  -[DBSmartWidgetCalendarSource _includeEvent:forNow:]
  -[DBSmartWidgetCalendarSource _handleAppLibraryRefresh]
  -[DBSmartWidgetCalendarSource calendarVisibilityManager]


DBSmartWidgetViewController : DBWidgetViewController <DBSmartWidgetEngineObserver, UIGestureRecognizerDelegate>
 @property  DBSmartWidgetEngine *engine
 @property  DBSmartWidgetView *widgetView
 @property  long long currentPredictionIndex
 @property  UIActivityIndicatorView *spinnerView
 @property  NSSet *recognizers
 @property  UITapGestureRecognizer *actionRecognizer
 @property  UITapGestureRecognizer *actionSelectRecognizer
 @property  UILongPressGestureRecognizer *refreshRecognizer
 @property  UISwipeGestureRecognizer *previousPredictionRecognizer
 @property  UISwipeGestureRecognizer *nextPredictionRecognizer
 @property  <DBSmartWidgetAnimating> *animationDelegate
 @property  BOOL wantsToShowPrediction
 @property  BOOL highPriority
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBSmartWidgetViewController engine]
  -[DBSmartWidgetViewController setWidgetView:]
  -[DBSmartWidgetViewController .cxx_destruct]
  -[DBSmartWidgetViewController viewDidLoad]
  -[DBSmartWidgetViewController isHighPriority]
  -[DBSmartWidgetViewController gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:]
  -[DBSmartWidgetViewController gestureRecognizer:shouldReceiveTouch:]
  -[DBSmartWidgetViewController _refresh]
  -[DBSmartWidgetViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[DBSmartWidgetViewController setRecognizers:]
  -[DBSmartWidgetViewController recognizers]
  -[DBSmartWidgetViewController widgetView]
  -[DBSmartWidgetViewController animationDelegate]
  -[DBSmartWidgetViewController setAnimationDelegate:]
  -[DBSmartWidgetViewController _performAction]
  -[DBSmartWidgetViewController spinnerView]
  -[DBSmartWidgetViewController setSpinnerView:]
  -[DBSmartWidgetViewController _previousPrediction]
  -[DBSmartWidgetViewController _nextPrediction]
  -[DBSmartWidgetViewController smartWidgetEngine:didUpdateCurrentPredictions:]
  -[DBSmartWidgetViewController smartWidgetEngineDidUpdatePredictionsFresh:]
  -[DBSmartWidgetViewController smartWidgetEngineDidStart:]
  -[DBSmartWidgetViewController smartWidgetEngineDidStop:]
  -[DBSmartWidgetViewController initWithEnvironment:engine:animationDelegate:]
  -[DBSmartWidgetViewController _updatePrediction]
  -[DBSmartWidgetViewController wantsToShowPrediction]
  -[DBSmartWidgetViewController setWantsToShowPrediction:]
  -[DBSmartWidgetViewController currentPredictionIndex]
  -[DBSmartWidgetViewController setCurrentPredictionIndex:]
  -[DBSmartWidgetViewController actionRecognizer]
  -[DBSmartWidgetViewController setActionRecognizer:]
  -[DBSmartWidgetViewController actionSelectRecognizer]
  -[DBSmartWidgetViewController setActionSelectRecognizer:]
  -[DBSmartWidgetViewController refreshRecognizer]
  -[DBSmartWidgetViewController setRefreshRecognizer:]
  -[DBSmartWidgetViewController previousPredictionRecognizer]
  -[DBSmartWidgetViewController setPreviousPredictionRecognizer:]
  -[DBSmartWidgetViewController nextPredictionRecognizer]
  -[DBSmartWidgetViewController setNextPredictionRecognizer:]


DBInstrumentClusterWorkspaceOwner : NSObject <BSInvalidatable, DBEventHandling, DBWorkspaceOwner>
 @property  DBWorkspace *workspace
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBInstrumentClusterWorkspaceOwner .cxx_destruct]
  -[DBInstrumentClusterWorkspaceOwner setWorkspace:]
  -[DBInstrumentClusterWorkspaceOwner handleEvent:]
  -[DBInstrumentClusterWorkspaceOwner invalidate]
  -[DBInstrumentClusterWorkspaceOwner workspace]
  -[DBInstrumentClusterWorkspaceOwner session:policyForRequest:]
  -[DBInstrumentClusterWorkspaceOwner session:handleStateChangeRequest:]
  -[DBInstrumentClusterWorkspaceOwner workspace:didBeginStateChangeSession:]
  -[DBInstrumentClusterWorkspaceOwner workspace:didEndStateChangeSession:]


DBSmartWidgetCalendarPrediction : DBSmartWidgetPrediction
 @property  BOOL soonestEvent
 @property  NSArray *events
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  BOOL allDay
 @property  BOOL variousEndDates

  // class methods
  +[DBSmartWidgetCalendarPrediction now]
  +[DBSmartWidgetCalendarPrediction setNow:]
  +[DBSmartWidgetCalendarPrediction minValue]
  +[DBSmartWidgetCalendarPrediction maxValue]
  +[DBSmartWidgetCalendarPrediction earliestStartDate]
  +[DBSmartWidgetCalendarPrediction latestStartDate]
  +[DBSmartWidgetCalendarPrediction baseScore]
  +[DBSmartWidgetCalendarPrediction initialValidInterval]
  +[DBSmartWidgetCalendarPrediction isEqualClassSelector]

  // instance methods
  -[DBSmartWidgetCalendarPrediction initWithEvent:]
  -[DBSmartWidgetCalendarPrediction events]
  -[DBSmartWidgetCalendarPrediction endDate]
  -[DBSmartWidgetCalendarPrediction subtitle]
  -[DBSmartWidgetCalendarPrediction .cxx_destruct]
  -[DBSmartWidgetCalendarPrediction actionBlock]
  -[DBSmartWidgetCalendarPrediction allDay]
  -[DBSmartWidgetCalendarPrediction title]
  -[DBSmartWidgetCalendarPrediction image]
  -[DBSmartWidgetCalendarPrediction value]
  -[DBSmartWidgetCalendarPrediction startDate]
  -[DBSmartWidgetCalendarPrediction addEvent:]
  -[DBSmartWidgetCalendarPrediction updateWithPrediction:]
  -[DBSmartWidgetCalendarPrediction predictedObject]
  -[DBSmartWidgetCalendarPrediction showImageBorder]
  -[DBSmartWidgetCalendarPrediction tieBreakScore]
  -[DBSmartWidgetCalendarPrediction initialValidInterval]
  -[DBSmartWidgetCalendarPrediction predictedObjectDescription]
  -[DBSmartWidgetCalendarPrediction defaultValidRanges]
  -[DBSmartWidgetCalendarPrediction updateRangeIfNeeded:]
  -[DBSmartWidgetCalendarPrediction isEqualToCalendarPrediction:]
  -[DBSmartWidgetCalendarPrediction setSoonestEvent:]
  -[DBSmartWidgetCalendarPrediction variousEndDates]
  -[DBSmartWidgetCalendarPrediction _uuidFromString:]
  -[DBSmartWidgetCalendarPrediction isSoonestEvent]


DBIconLabelBackdropView : UIView
 @property  CRSUIWallpaperPreferences *wallpaperPreferences
 @property  UIView *highlightView
 @property  _TtC9DashBoard22DBDashboardPlatterView *platterView
 @property  BOOL highlighted

  // instance methods
  -[DBIconLabelBackdropView setPlatterView:]
  -[DBIconLabelBackdropView setHighlightView:]
  -[DBIconLabelBackdropView platterView]
  -[DBIconLabelBackdropView .cxx_destruct]
  -[DBIconLabelBackdropView _updateHighlight]
  -[DBIconLabelBackdropView setHighlighted:]
  -[DBIconLabelBackdropView isHighlighted]
  -[DBIconLabelBackdropView highlightView]
  -[DBIconLabelBackdropView wallpaperPreferences]
  -[DBIconLabelBackdropView initWithWallpaperPreferences:]
  -[DBIconLabelBackdropView setWallpaperPreferences:]


DBIconView : SBIconView
 @property  DBIconDropShadowProvider *dropShadowProvider
 @property  UIView *dropShadowView
 @property  DBIconLabelBackdropView *labelLegibilityView
 @property  BOOL shadowHidden

  // class methods
  +[DBIconView maxLabelSizeForIconImageSize:]
  +[DBIconView supportsPreviewInteraction]
  +[DBIconView _labelHeight]
  +[DBIconView supportsDragInteraction]
  +[DBIconView defaultIconLocation]
  +[DBIconView allowsLabelAccessoryView]
  +[DBIconView textColorForTraitCollection:]
  +[DBIconView supportsCursorInteraction]
  +[DBIconView focusTextColorForTraitCollection:]
  +[DBIconView minimumInterIconSpacing]
  +[DBIconView maximumIconViewHeightForIconImageSize:]
  +[DBIconView _updateCharacteristicsWithTraitCollection:]
  +[DBIconView _iconLabelsRequireBackground]
  +[DBIconView labelFontForTraitCollection:]
  +[DBIconView focusColorForTraitCollection:]
  +[DBIconView setEnvironmentConfiguration:]
  +[DBIconView environmentConfiguration]

  // instance methods
  -[DBIconView _wallpaperChanged:]
  -[DBIconView setDropShadowView:]
  -[DBIconView setLabelLegibilityView:]
  -[DBIconView didUpdateFocusInContext:withAnimationCoordinator:]
  -[DBIconView configureLabelImageParametersBuilder:]
  -[DBIconView labelFont]
  -[DBIconView shadowHidden]
  -[DBIconView _updateLabel]
  -[DBIconView setShadowHidden:]
  -[DBIconView labelLegibilityView]
  -[DBIconView setLabelHidden:]
  -[DBIconView canBecomeFocused]
  -[DBIconView .cxx_destruct]
  -[DBIconView _labelBaselineOffsetFromImage]
  -[DBIconView prepareForReuse]
  -[DBIconView _frameForLabelHighlight]
  -[DBIconView initWithConfigurationOptions:listLayoutProvider:]
  -[DBIconView _configureIconImageView:]
  -[DBIconView layoutSubviews]
  -[DBIconView dropShadowView]
  -[DBIconView setDropShadowProvider:]
  -[DBIconView _refreshDropShadowWithIconImage:]
  -[DBIconView traitCollectionDidChange:]
  -[DBIconView dropShadowProvider]


DBDashboardRootViewController : UIViewController <BSInvalidatable, DBEventHandling>
 @property  <DBEnvironment> *environment
 @property  DBDashboardLayoutEngine *layoutEngine
 @property  BOOL invalidated
 @property  _TtC9DashBoard22DBDashboardDimmingView *dimmingView
 @property  UIView *backgroundView
 @property  CPUIPassthroughView *contentView
 @property  UIView *baseContainerView
 @property  UIView *stackedContainerView
 @property  UIViewController<DBDashboardWorkspaceEntityPresenting> *currentBaseViewController
 @property  UIViewController<DBDashboardWorkspaceEntityPresenting> *currentStackedViewController
 @property  CARObserverHashTable *viewStateObservers
 @property  unsigned long currentViewState
 @property  <BSInvalidatable> *homeScreenElementAssertion
 @property  NSArray *homeViewConstraints
 @property  <CRSIconLayoutVehicleDataProviding> *iconLayoutDataProvider
 @property  DBDashboardHomeViewController *homeViewController
 @property  DBAppDockViewController *appDockViewController
 @property  double contentCornerRadius
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBDashboardRootViewController contentView]
  -[DBDashboardRootViewController setInvalidated:]
  -[DBDashboardRootViewController dimmingView]
  -[DBDashboardRootViewController setDimmingView:]
  -[DBDashboardRootViewController setContentCornerRadius:]
  -[DBDashboardRootViewController invalidated]
  -[DBDashboardRootViewController viewWillLayoutSubviews]
  -[DBDashboardRootViewController .cxx_destruct]
  -[DBDashboardRootViewController viewDidLoad]
  -[DBDashboardRootViewController loadView]
  -[DBDashboardRootViewController backgroundView]
  -[DBDashboardRootViewController viewDidLayoutSubviews]
  -[DBDashboardRootViewController setBackgroundView:]
  -[DBDashboardRootViewController handleEvent:]
  -[DBDashboardRootViewController preferredFocusEnvironments]
  -[DBDashboardRootViewController invalidate]
  -[DBDashboardRootViewController setContentView:]
  -[DBDashboardRootViewController setEnvironment:]
  -[DBDashboardRootViewController traitCollectionDidChange:]
  -[DBDashboardRootViewController environment]
  -[DBDashboardRootViewController contentCornerRadius]
  -[DBDashboardRootViewController addViewStateObserver:]
  -[DBDashboardRootViewController removeViewStateObserver:]
  -[DBDashboardRootViewController viewStateObservers]
  -[DBDashboardRootViewController setViewStateObservers:]
  -[DBDashboardRootViewController appDockViewController]
  -[DBDashboardRootViewController updateAppearanceForWallpaper]
  -[DBDashboardRootViewController iconLayoutDataProvider]
  -[DBDashboardRootViewController layoutEngine]
  -[DBDashboardRootViewController setLayoutEngine:]
  -[DBDashboardRootViewController setAppDockViewController:]
  -[DBDashboardRootViewController initWithEnvironment:layoutEngine:]
  -[DBDashboardRootViewController presentBaseViewController:animated:launchSource:completion:]
  -[DBDashboardRootViewController dismissBaseViewControllerAnimated:completion:]
  -[DBDashboardRootViewController presentStackedViewController:animated:completion:]
  -[DBDashboardRootViewController dismissStackedViewControllerAnimated:completion:]
  -[DBDashboardRootViewController _updateHomeConstraints]
  -[DBDashboardRootViewController setCurrentViewState:]
  -[DBDashboardRootViewController _updateHomeScreenLayoutElementIfNeeded]
  -[DBDashboardRootViewController _presentBaseViewController:animated:launchSource:completion:]
  -[DBDashboardRootViewController _dismissViewController:andPresentBaseViewController:animated:completion:]
  -[DBDashboardRootViewController _dismissBaseViewControllerAnimated:completion:]
  -[DBDashboardRootViewController _presentStackedViewController:animated:completion:]
  -[DBDashboardRootViewController _dismissStackedViewControllerAnimated:completion:]
  -[DBDashboardRootViewController homeViewController]
  -[DBDashboardRootViewController baseContainerView]
  -[DBDashboardRootViewController setBaseContainerView:]
  -[DBDashboardRootViewController stackedContainerView]
  -[DBDashboardRootViewController setStackedContainerView:]
  -[DBDashboardRootViewController currentBaseViewController]
  -[DBDashboardRootViewController setCurrentBaseViewController:]
  -[DBDashboardRootViewController currentStackedViewController]
  -[DBDashboardRootViewController setCurrentStackedViewController:]
  -[DBDashboardRootViewController currentViewState]
  -[DBDashboardRootViewController homeScreenElementAssertion]
  -[DBDashboardRootViewController setHomeScreenElementAssertion:]
  -[DBDashboardRootViewController homeViewConstraints]
  -[DBDashboardRootViewController setHomeViewConstraints:]


DBAppToHomeAnimationSettings : DBAnimationSettings
 @property  DBIconView *iconView

  // instance methods
  -[DBAppToHomeAnimationSettings .cxx_destruct]
  -[DBAppToHomeAnimationSettings setIconView:]
  -[DBAppToHomeAnimationSettings iconView]


DBAppToHomeAnimation : DBDashboardAnimation
  // class methods
  +[DBAppToHomeAnimation animationWithSettings:]


_DBSuspendAppToHomeZoomAnimation : DBAppToHomeAnimation
 @property  DBIconView *iconView

  // instance methods
  -[_DBSuspendAppToHomeZoomAnimation initWithSettings:]
  -[_DBSuspendAppToHomeZoomAnimation .cxx_destruct]
  -[_DBSuspendAppToHomeZoomAnimation setIconView:]
  -[_DBSuspendAppToHomeZoomAnimation iconView]
  -[_DBSuspendAppToHomeZoomAnimation startAnimationWithCompletion:]


_DBSuspendAppToHomeScaleAnimation : DBAppToHomeAnimation
  // instance methods
  -[_DBSuspendAppToHomeScaleAnimation startAnimationWithCompletion:]


_DBSuspendAppToHomeReducedMotionAnimation : DBAppToHomeAnimation
  // instance methods
  -[_DBSuspendAppToHomeReducedMotionAnimation startAnimationWithCompletion:]


DBUserAlertViewController : UIViewController
 @property  DBEnvironmentConfiguration *environmentConfiguration
 @property  @? dismissHandler
 @property  URTAlert *alert

  // instance methods
  -[DBUserAlertViewController alert]
  -[DBUserAlertViewController .cxx_destruct]
  -[DBUserAlertViewController loadView]
  -[DBUserAlertViewController dismissHandler]
  -[DBUserAlertViewController environmentConfiguration]
  -[DBUserAlertViewController initWithAlert:environmentConfiguration:]


DBUserAlertView : UIView
 @property  UILabel *titleLabel
 @property  UILabel *messageLabel
 @property  UIStackView *buttonStackView
 @property  @? dismissHandler

  // instance methods
  -[DBUserAlertView setTitleLabel:]
  -[DBUserAlertView setMessageLabel:]
  -[DBUserAlertView .cxx_destruct]
  -[DBUserAlertView dismissHandler]
  -[DBUserAlertView _titleFont]
  -[DBUserAlertView messageLabel]
  -[DBUserAlertView titleLabel]
  -[DBUserAlertView _buttonFont]
  -[DBUserAlertView buttonStackView]
  -[DBUserAlertView setButtonStackView:]
  -[DBUserAlertView initWithAlert:environmentConfiguration:]
  -[DBUserAlertView _buttonWithAlertAction:]


DBStatusBarHomeButtonStateManager : NSObject <DBDashboardViewStateObserving, DBHomeViewPageChangeObserving>
 @property  <DBStatusBarButtonStateManagerDelegate> *delegate
 @property  long long currentPageIndex
 @property  unsigned long currentViewState
 @property  long long minimumPageIndex
 @property  long long firstIconPageIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBStatusBarHomeButtonStateManager setDelegate:]
  -[DBStatusBarHomeButtonStateManager delegate]
  -[DBStatusBarHomeButtonStateManager .cxx_destruct]
  -[DBStatusBarHomeButtonStateManager initWithDelegate:]
  -[DBStatusBarHomeButtonStateManager firstIconPageIndex]
  -[DBStatusBarHomeButtonStateManager setCurrentPageIndex:]
  -[DBStatusBarHomeButtonStateManager currentPageIndex]
  -[DBStatusBarHomeButtonStateManager minimumPageIndex]
  -[DBStatusBarHomeButtonStateManager homeViewController:didChangeToPageIndex:firstIconPageIndex:minimumPageIndex:]
  -[DBStatusBarHomeButtonStateManager dashboardRootViewController:didChangeToViewState:]
  -[DBStatusBarHomeButtonStateManager setCurrentViewState:]
  -[DBStatusBarHomeButtonStateManager currentViewState]
  -[DBStatusBarHomeButtonStateManager _updateHomeButtonState]
  -[DBStatusBarHomeButtonStateManager setMinimumPageIndex:]
  -[DBStatusBarHomeButtonStateManager setFirstIconPageIndex:]


DBLocationManager : NSObject <CLLocationManagerDelegate>
 @property  CLLocationManager *locationManager
 @property  NSObject<OS_dispatch_queue> *locationQueue
 @property  NSMutableSet *activeAssertions
 @property  BOOL locationActive
 @property  CLLocation *currentLocation
 @property  CLLocation *lastPostedLocation
 @property  NSMutableDictionary *monitoringRegions
 @property  CLLocation *cachedCurrentLocation
 @property  unsigned long cacheUsedCount
 @property  CARObserverHashTable *observers
 @property  NSString *bundlePath
 @property  NSBundle *bundle
 @property  NSString *bundleIdentifier
 @property  BOOL authorized
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBLocationManager homeKitLocationManager]

  // instance methods
  -[DBLocationManager authorized]
  -[DBLocationManager locationManager:didFailWithError:]
  -[DBLocationManager locationManager:didDetermineState:forRegion:]
  -[DBLocationManager bundle]
  -[DBLocationManager currentLocation]
  -[DBLocationManager setCurrentLocation:]
  -[DBLocationManager addObserver:]
  -[DBLocationManager dealloc]
  -[DBLocationManager initWithBundlePath:]
  -[DBLocationManager .cxx_destruct]
  -[DBLocationManager bundlePath]
  -[DBLocationManager locationManagerDidChangeAuthorization:]
  -[DBLocationManager initWithBundleIdentifier:]
  -[DBLocationManager _commonInit]
  -[DBLocationManager _name]
  -[DBLocationManager locationManager]
  -[DBLocationManager setObservers:]
  -[DBLocationManager bundleIdentifier]
  -[DBLocationManager setLocationManager:]
  -[DBLocationManager removeObserver:]
  -[DBLocationManager locationManager:didUpdateLocations:]
  -[DBLocationManager observers]
  -[DBLocationManager initWithLocationManager:locationQueue:]
  -[DBLocationManager _commonPostInit]
  -[DBLocationManager cachedCurrentLocation]
  -[DBLocationManager startUpdatingLocationWithIdentifier:]
  -[DBLocationManager _startUpdatingLocationNow]
  -[DBLocationManager stopUpdatingLocationWithIdentifier:]
  -[DBLocationManager _stopUpdatingLocationNow]
  -[DBLocationManager startMonitoringForRegionWithIdentifier:locationCoordinate:range:]
  -[DBLocationManager stopMonitoringForRegionWithIdentifier:]
  -[DBLocationManager _authorizeIfNeeded]
  -[DBLocationManager _updateCurrentLocation:]
  -[DBLocationManager _didEnterRegionWithIdentifier:]
  -[DBLocationManager _didExitRegionWithIDentifier:]
  -[DBLocationManager locationQueue]
  -[DBLocationManager setLocationQueue:]
  -[DBLocationManager activeAssertions]
  -[DBLocationManager setActiveAssertions:]
  -[DBLocationManager locationActive]
  -[DBLocationManager setLocationActive:]
  -[DBLocationManager lastPostedLocation]
  -[DBLocationManager setLastPostedLocation:]
  -[DBLocationManager monitoringRegions]
  -[DBLocationManager setMonitoringRegions:]
  -[DBLocationManager cacheUsedCount]
  -[DBLocationManager setCacheUsedCount:]


DBProcessMonitor : NSObject <BSInvalidatable>
 @property  CARObserverHashTable *observers
 @property  RBSProcessMonitor *processMonitor
 @property  CRCarPlayAppPolicyEvaluator *policyEvaluator
 @property  NSMapTable *handleMapTable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBProcessMonitor setProcessMonitor:]
  -[DBProcessMonitor addObserver:]
  -[DBProcessMonitor processMonitor]
  -[DBProcessMonitor .cxx_destruct]
  -[DBProcessMonitor setObservers:]
  -[DBProcessMonitor invalidate]
  -[DBProcessMonitor init]
  -[DBProcessMonitor observers]
  -[DBProcessMonitor policyEvaluator]
  -[DBProcessMonitor _startMonitoringProcess]
  -[DBProcessMonitor _handleDeathWithIdentifier:isCrash:pid:]
  -[DBProcessMonitor _appStateUpdated:processHandle:]
  -[DBProcessMonitor setPolicyEvaluator:]
  -[DBProcessMonitor handleMapTable]
  -[DBProcessMonitor setHandleMapTable:]


DBStatusBarButton : UIButton
 @property  UIColor *focusHighlightColor

  // class methods
  +[DBStatusBarButton buttonWithType:]

  // instance methods
  -[DBStatusBarButton setFocusHighlightColor:]
  -[DBStatusBarButton pressesEnded:withEvent:]
  -[DBStatusBarButton pressesCancelled:withEvent:]
  -[DBStatusBarButton .cxx_destruct]
  -[DBStatusBarButton touchesBegan:withEvent:]
  -[DBStatusBarButton touchesEnded:withEvent:]
  -[DBStatusBarButton focusHighlightColor]
  -[DBStatusBarButton pressesBegan:withEvent:]
  -[DBStatusBarButton touchesCancelled:withEvent:]


DBAppDockViewController : UIViewController <DBNavigationStateObserving, DBNowPlayingDelegate, SiriPresentationIntentUsageDelegate>
 @property  DBAppDockButton *navigationAppButton
 @property  NSArray *navigationAppButtonSizeConstraints
 @property  DBAppDockButton *audioAppButton
 @property  NSArray *audioAppButtonSizeConstraints
 @property  DBAppDockButton *otherAppButton
 @property  NSArray *otherAppButtonSizeConstraints
 @property  UIStackView *dockItemStackView
 @property  NSArray *orderedAppItems
 @property  DBNowPlayingObserver *nowPlayingObserver
 @property  <DBIconProviding> *iconProvider
 @property  DBEnvironmentConfiguration *environmentConfiguration
 @property  DBAppHistory *appHistory
 @property  <DBAppDockViewControllerDelegate> *appDockViewControllerDelegate
 @property  NSString *activeBundleIdentifier
 @property  BOOL dockEnabled
 @property  UIColor *buttonFocusHighlightColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBAppDockViewController viewWillLayoutSubviews]
  -[DBAppDockViewController dealloc]
  -[DBAppDockViewController .cxx_destruct]
  -[DBAppDockViewController viewDidLoad]
  -[DBAppDockViewController setEnvironmentConfiguration:]
  -[DBAppDockViewController preferredFocusEnvironments]
  -[DBAppDockViewController appHistory]
  -[DBAppDockViewController environmentConfiguration]
  -[DBAppDockViewController iconProvider]
  -[DBAppDockViewController activeBundleIdentifier]
  -[DBAppDockViewController setIconProvider:]
  -[DBAppDockViewController nowPlayingObserver]
  -[DBAppDockViewController setNowPlayingObserver:]
  -[DBAppDockViewController activeIntentWithBundleId:]
  -[DBAppDockViewController setActiveBundleIdentifier:]
  -[DBAppDockViewController navigationStateProvider:navigatingIdentifiersDidChange:]
  -[DBAppDockViewController nowPlayingObserver:didChangeNowPlayingApplication:]
  -[DBAppDockViewController nowPlayingObserver:didUpdatePlaybackState:inApplication:]
  -[DBAppDockViewController _refreshAppDock]
  -[DBAppDockViewController _dockButtonPressed:]
  -[DBAppDockViewController initWithAppHistory:iconProvider:environmentConfiguration:]
  -[DBAppDockViewController setDockEnabled:]
  -[DBAppDockViewController setButtonFocusHighlightColor:]
  -[DBAppDockViewController _buttonSizeConstraintsForButton:]
  -[DBAppDockViewController _updateNavigationButtonSizeConstraints]
  -[DBAppDockViewController _updateAudioButtonSizeConstraints]
  -[DBAppDockViewController _updateOtherButtonSizeConstraints]
  -[DBAppDockViewController _generateOrderedAppItems]
  -[DBAppDockViewController setActiveBundleIdentifier:animated:]
  -[DBAppDockViewController _updateNavigationBundleIdentifier:]
  -[DBAppDockViewController _updateNowPlayingBundleIdentifier:]
  -[DBAppDockViewController appDockViewControllerDelegate]
  -[DBAppDockViewController setAppDockViewControllerDelegate:]
  -[DBAppDockViewController isDockEnabled]
  -[DBAppDockViewController buttonFocusHighlightColor]
  -[DBAppDockViewController navigationAppButton]
  -[DBAppDockViewController setNavigationAppButton:]
  -[DBAppDockViewController navigationAppButtonSizeConstraints]
  -[DBAppDockViewController setNavigationAppButtonSizeConstraints:]
  -[DBAppDockViewController audioAppButton]
  -[DBAppDockViewController setAudioAppButton:]
  -[DBAppDockViewController audioAppButtonSizeConstraints]
  -[DBAppDockViewController setAudioAppButtonSizeConstraints:]
  -[DBAppDockViewController otherAppButton]
  -[DBAppDockViewController setOtherAppButton:]
  -[DBAppDockViewController otherAppButtonSizeConstraints]
  -[DBAppDockViewController setOtherAppButtonSizeConstraints:]
  -[DBAppDockViewController dockItemStackView]
  -[DBAppDockViewController setDockItemStackView:]
  -[DBAppDockViewController orderedAppItems]
  -[DBAppDockViewController setOrderedAppItems:]


DBIconListView : SBIconListView
 @property  {UIEdgeInsets=dddd} insets

  // class methods
  +[DBIconListView iconColumnsForScreenWidth:iconImageSize:statusBarEdge:]
  +[DBIconListView iconRowsForScreenHeight:iconImageSize:statusBarEdge:interactionAffordances:]

  // instance methods
  -[DBIconListView alignmentIconSize]
  -[DBIconListView setInsets:]
  -[DBIconListView insets]
  -[DBIconListView automaticallyAdjustsLayoutMetricsToFit]
  -[DBIconListView layoutSubviews]
  -[DBIconListView baseIconViewClass]
  -[DBIconListView adaptsOrientationToTraitCollection]
  -[DBIconListView usesAlternateLayout]
  -[DBIconListView layoutInsetsForOrientation:]


DBIconLayoutVehicleDataProvider : NSObject <DBIconModelApplicationDataSource, SBHIconManagerDelegate, CRSIconLayoutVehicleDataProviding>
 @property  NSString *vehicleID
 @property  NSArray *allApps
 @property  DBIconManager *iconManager
 @property  DBIconModel *iconModel
 @property  DBIconImageCache *iconImageCache
 @property  NSArray *allApplicationIcons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBIconLayoutVehicleDataProvider defaultIconState]

  // instance methods
  -[DBIconLayoutVehicleDataProvider allApps]
  -[DBIconLayoutVehicleDataProvider setIconManager:]
  -[DBIconLayoutVehicleDataProvider iconImageCache]
  -[DBIconLayoutVehicleDataProvider defaultIconStateForIconManager:]
  -[DBIconLayoutVehicleDataProvider setIconModel:]
  -[DBIconLayoutVehicleDataProvider .cxx_destruct]
  -[DBIconLayoutVehicleDataProvider iconManager]
  -[DBIconLayoutVehicleDataProvider isEditingAllowedForIconManager:]
  -[DBIconLayoutVehicleDataProvider iconManagerCanBeginIconDrags:]
  -[DBIconLayoutVehicleDataProvider setAllApps:]
  -[DBIconLayoutVehicleDataProvider iconModel]
  -[DBIconLayoutVehicleDataProvider setIconImageCache:]
  -[DBIconLayoutVehicleDataProvider interfaceOrientationForIconManager:]
  -[DBIconLayoutVehicleDataProvider iconManager:launchIconForIconView:]
  -[DBIconLayoutVehicleDataProvider iconManager:folderControllerClassForFolderClass:proposedClass:]
  -[DBIconLayoutVehicleDataProvider getApplicationIconInformationForBundleID:completion:]
  -[DBIconLayoutVehicleDataProvider resetIconState]
  -[DBIconLayoutVehicleDataProvider setIconState:]
  -[DBIconLayoutVehicleDataProvider getIconStateWithCompletion:]
  -[DBIconLayoutVehicleDataProvider vehicleID]
  -[DBIconLayoutVehicleDataProvider setVehicleID:]
  -[DBIconLayoutVehicleDataProvider allApplicationIcons]
  -[DBIconLayoutVehicleDataProvider initWithVehicleID:iconImageCache:]


DBLockOutViewController : UIViewController <DBLockOutViewDelegate>
 @property  DBEnvironmentConfiguration *environmentConfiguration
 @property  DBLockOutView *lockOutView
 @property  <DBLockOutViewControllerDelegate> *delegate
 @property  long long lockOutMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBLockOutViewController setDelegate:]
  -[DBLockOutViewController delegate]
  -[DBLockOutViewController .cxx_destruct]
  -[DBLockOutViewController setEnvironmentConfiguration:]
  -[DBLockOutViewController preferredFocusEnvironments]
  -[DBLockOutViewController environmentConfiguration]
  -[DBLockOutViewController initWithEnvironmentConfiguration:]
  -[DBLockOutViewController lockOutView:didTapButtonOfType:]
  -[DBLockOutViewController setLockOutMode:animated:completion:]
  -[DBLockOutViewController _newLockOutViewForMode:]
  -[DBLockOutViewController lockOutMode]
  -[DBLockOutViewController lockOutView]
  -[DBLockOutViewController setLockOutView:]


DBDashboardHomeViewController : UIViewController <DBIconBadgeControllerObserving, DBIconModelApplicationDataSource, FBSApplicationDataStoreObserver, FBSceneManagerObserver, SBHIconManagerDelegate, SBRootFolderControllerDelegate, UNNotificationSettingsCenterDelegate, BSInvalidatable, CRSIconLayoutVehicleDataProviding, DBEventHandling, DBIconProviding>
 @property  <DBEnvironment> *environment
 @property  DBIconImageCache *iconImageCache
 @property  FBSApplicationLibrary *library
 @property  DBIconManager *iconManager
 @property  DBIconModel *iconModel
 @property  FBSApplicationDataStoreMonitor *dataStoreMonitor
 @property  DBNowPlayingObserver *nowPlayingObserver
 @property  NSIndexPath *lastFocusedIndex
 @property  DBTodayViewController *todayViewController
 @property  CARObserverHashTable *pageObservers
 @property  unsigned long currentPageIndex
 @property  NSMutableSet *acBackDisabledReasons
 @property  DBIconBadgeController *iconBadgeController
 @property  UIView *hairlineView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *allApplicationIcons

  // instance methods
  -[DBDashboardHomeViewController setTodayViewController:]
  -[DBDashboardHomeViewController setIconManager:]
  -[DBDashboardHomeViewController _wheelChangedWithEvent:]
  -[DBDashboardHomeViewController iconImageCache]
  -[DBDashboardHomeViewController isIconVisible:]
  -[DBDashboardHomeViewController didUpdateFocusInContext:withAnimationCoordinator:]
  -[DBDashboardHomeViewController initWithEnvironment:]
  -[DBDashboardHomeViewController folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[DBDashboardHomeViewController folderControllerWillBeginScrolling:]
  -[DBDashboardHomeViewController folderController:iconListView:iconDropSessionDidUpdate:]
  -[DBDashboardHomeViewController folderController]
  -[DBDashboardHomeViewController library]
  -[DBDashboardHomeViewController defaultIconStateForIconManager:]
  -[DBDashboardHomeViewController folderController:iconListView:canHandleIconDropSession:]
  -[DBDashboardHomeViewController setLibrary:]
  -[DBDashboardHomeViewController folderControllerShouldClose:withPinchGesture:]
  -[DBDashboardHomeViewController iconManager:allowsBadgingForIcon:]
  -[DBDashboardHomeViewController setIconModel:]
  -[DBDashboardHomeViewController iconManager:configureIconView:forIcon:]
  -[DBDashboardHomeViewController folderController:draggedIconShouldDropFromListView:]
  -[DBDashboardHomeViewController .cxx_destruct]
  -[DBDashboardHomeViewController iconManager:willUseRootFolderControllerConfiguration:]
  -[DBDashboardHomeViewController viewDidLoad]
  -[DBDashboardHomeViewController folderController:canChangeCurrentPageIndexToIndex:]
  -[DBDashboardHomeViewController loadView]
  -[DBDashboardHomeViewController folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[DBDashboardHomeViewController folderController:iconListView:performIconDrop:]
  -[DBDashboardHomeViewController folderControllerShouldBeginEditing:withHaptic:]
  -[DBDashboardHomeViewController iconManager]
  -[DBDashboardHomeViewController setCurrentPageIndex:]
  -[DBDashboardHomeViewController handleEvent:]
  -[DBDashboardHomeViewController folderController:iconListView:iconDropSession:didPauseAtLocation:]
  -[DBDashboardHomeViewController folderController:iconListView:iconDropSessionDidExit:]
  -[DBDashboardHomeViewController folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[DBDashboardHomeViewController isEditingAllowedForIconManager:]
  -[DBDashboardHomeViewController preferredFocusEnvironments]
  -[DBDashboardHomeViewController folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[DBDashboardHomeViewController iconManagerCanBeginIconDrags:]
  -[DBDashboardHomeViewController invalidate]
  -[DBDashboardHomeViewController folderController:iconListView:iconDropSessionDidEnter:]
  -[DBDashboardHomeViewController folderControllerDidEndScrolling:]
  -[DBDashboardHomeViewController todayViewController]
  -[DBDashboardHomeViewController folderController:iconListView:willUseIconView:forDroppingIconDragItem:]
  -[DBDashboardHomeViewController currentPageIndex]
  -[DBDashboardHomeViewController setEnvironment:]
  -[DBDashboardHomeViewController folderControllerShouldEndEditing:]
  -[DBDashboardHomeViewController iconModel]
  -[DBDashboardHomeViewController environment]
  -[DBDashboardHomeViewController setIconImageCache:]
  -[DBDashboardHomeViewController interfaceOrientationForIconManager:]
  -[DBDashboardHomeViewController controllerClassForFolder:]
  -[DBDashboardHomeViewController folderController:iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[DBDashboardHomeViewController _linearFocusMovementSequences]
  -[DBDashboardHomeViewController iconForIdentifier:]
  -[DBDashboardHomeViewController dataStoreMonitor:didUpdateApplication:forKey:]
  -[DBDashboardHomeViewController hairlineView]
  -[DBDashboardHomeViewController iconManager:launchIconForIconView:]
  -[DBDashboardHomeViewController iconManager:folderControllerClassForFolderClass:proposedClass:]
  -[DBDashboardHomeViewController nowPlayingObserver]
  -[DBDashboardHomeViewController setNowPlayingObserver:]
  -[DBDashboardHomeViewController getApplicationIconInformationForBundleID:completion:]
  -[DBDashboardHomeViewController resetIconState]
  -[DBDashboardHomeViewController setIconState:]
  -[DBDashboardHomeViewController getIconStateWithCompletion:]
  -[DBDashboardHomeViewController iconBadgeController]
  -[DBDashboardHomeViewController _handleAppLibraryRefresh]
  -[DBDashboardHomeViewController allApplicationIcons]
  -[DBDashboardHomeViewController _backButtonTapped:]
  -[DBDashboardHomeViewController iconBadgeController:didUpdateForIdentifiers:]
  -[DBDashboardHomeViewController isIconVisibleForIdentifier:]
  -[DBDashboardHomeViewController iconCanDisplayBadge:]
  -[DBDashboardHomeViewController _setupIconModel]
  -[DBDashboardHomeViewController visibleIconViewForIdentifier:]
  -[DBDashboardHomeViewController addPageChangeObserver:]
  -[DBDashboardHomeViewController removePageChangeObserver:]
  -[DBDashboardHomeViewController setTodayViewForeground:]
  -[DBDashboardHomeViewController setTodayViewActive:]
  -[DBDashboardHomeViewController _persistCachedIconImages]
  -[DBDashboardHomeViewController _launchNowPlaying]
  -[DBDashboardHomeViewController _indexPathForFallbackIcon:]
  -[DBDashboardHomeViewController _invalidateBadgeForIdentifier:]
  -[DBDashboardHomeViewController _onDashboardPage]
  -[DBDashboardHomeViewController _preferredFocusedIcon]
  -[DBDashboardHomeViewController _iconViewForIndexpath:]
  -[DBDashboardHomeViewController _handleBackActionSupportACBack:]
  -[DBDashboardHomeViewController _isACBackEnabled]
  -[DBDashboardHomeViewController _setACBackDisabled:forRequester:]
  -[DBDashboardHomeViewController dataStoreMonitor]
  -[DBDashboardHomeViewController setDataStoreMonitor:]
  -[DBDashboardHomeViewController lastFocusedIndex]
  -[DBDashboardHomeViewController setLastFocusedIndex:]
  -[DBDashboardHomeViewController pageObservers]
  -[DBDashboardHomeViewController setPageObservers:]
  -[DBDashboardHomeViewController acBackDisabledReasons]
  -[DBDashboardHomeViewController setAcBackDisabledReasons:]
  -[DBDashboardHomeViewController setIconBadgeController:]


DBCalendarLeafIconDataSource : DBLeafIconDataSource
  // instance methods
  -[DBCalendarLeafIconDataSource icon:imageWithInfo:]
  -[DBCalendarLeafIconDataSource icon:unmaskedImageWithInfo:]
  -[DBCalendarLeafIconDataSource badgeNumberOrStringForIcon:]
  -[DBCalendarLeafIconDataSource icon:defaultImageWithInfo:]


DBNetworkPathMonitor : NSObject
 @property  BOOL networkReachable
 @property  long long networkPath
 @property  NSObject<OS_nw_path_monitor> *pathMonitor
 @property  NSObject<OS_nw_path> *currentPath
 @property  NSMutableSet *activeAssertions
 @property  BOOL networkPathMonitorActive
 @property  CARObserverHashTable *observers
 @property  NSObject<OS_dispatch_queue> *workQueue

  // instance methods
  -[DBNetworkPathMonitor pathMonitor]
  -[DBNetworkPathMonitor isNetworkReachable]
  -[DBNetworkPathMonitor networkPath]
  -[DBNetworkPathMonitor workQueue]
  -[DBNetworkPathMonitor addObserver:]
  -[DBNetworkPathMonitor dealloc]
  -[DBNetworkPathMonitor .cxx_destruct]
  -[DBNetworkPathMonitor _networkPathUpdated:]
  -[DBNetworkPathMonitor setObservers:]
  -[DBNetworkPathMonitor setPathMonitor:]
  -[DBNetworkPathMonitor removeObserver:]
  -[DBNetworkPathMonitor init]
  -[DBNetworkPathMonitor observers]
  -[DBNetworkPathMonitor currentPath]
  -[DBNetworkPathMonitor setCurrentPath:]
  -[DBNetworkPathMonitor setNetworkReachable:]
  -[DBNetworkPathMonitor networkPathMonitorActive]
  -[DBNetworkPathMonitor setNetworkPathMonitorActive:]
  -[DBNetworkPathMonitor setNetworkPath:]
  -[DBNetworkPathMonitor activeAssertions]
  -[DBNetworkPathMonitor startNetworkPathMonitorWithIdentifier:]
  -[DBNetworkPathMonitor stopNetworkPathMonitorWithIdentifier:]
  -[DBNetworkPathMonitor _startNetworkPathMonitorNow]
  -[DBNetworkPathMonitor _stopNetworkPathMonitorNow]


DBLayerMetadataService : NSObject <CRLayerPropertyService, NSXPCListenerDelegate, BSInvalidatable>
 @property  NSXPCListener *layerMetadataServiceListener
 @property  NSXPCConnection *connection
 @property  <DBLayerMetadataServiceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBLayerMetadataService setDelegate:]
  -[DBLayerMetadataService delegate]
  -[DBLayerMetadataService .cxx_destruct]
  -[DBLayerMetadataService connection]
  -[DBLayerMetadataService invalidate]
  -[DBLayerMetadataService listener:shouldAcceptNewConnection:]
  -[DBLayerMetadataService init]
  -[DBLayerMetadataService setConnection:]
  -[DBLayerMetadataService sendLayerProperties:]
  -[DBLayerMetadataService layerMetadataServiceListener]
  -[DBLayerMetadataService setLayerMetadataServiceListener:]


DBInstrumentClusterURLHandler : NSObject
  // class methods
  +[DBInstrumentClusterURLHandler isURLSupported:]
  +[DBInstrumentClusterURLHandler applySettingsForClusterURL:toSceneSettings:]
  +[DBInstrumentClusterURLHandler _correctedComponentsForURL:]
  +[DBInstrumentClusterURLHandler _isMapsClusterURL:]
  +[DBInstrumentClusterURLHandler _layoutSettingForURLValue:]
  +[DBInstrumentClusterURLHandler _clusterSettingForURLValue:]


DBNavigationStateProvider : NSObject <CARActiveNavigationIdentifiersObserving, BSInvalidatable, DBAppHistoryObserving>
 @property  CARActiveNavigationIdentifiersObserver *activeNavigationIdentifiersObserver
 @property  CARObserverHashTable *observers
 @property  NSString *mostRecentlyActivatedDashboardApp
 @property  NSString *mostRecentlyActivatedClusterApp
 @property  <DBIconProviding> *iconProvider
 @property  <DBNavigationAppInfoProviding> *infoProvider
 @property  <DBAppHistoryAppDockProviding> *appHistoryAppDockProvider
 @property  NSArray *navigatingIdentifiers
 @property  NSString *mostRecentClusterNavigatingApp
 @property  NSString *mostRecentDashboardNavigatingApp
 @property  NSString *mostRecentNavigatingApp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBNavigationStateProvider addObserver:]
  -[DBNavigationStateProvider .cxx_destruct]
  -[DBNavigationStateProvider setObservers:]
  -[DBNavigationStateProvider infoProvider]
  -[DBNavigationStateProvider invalidate]
  -[DBNavigationStateProvider iconProvider]
  -[DBNavigationStateProvider removeObserver:]
  -[DBNavigationStateProvider init]
  -[DBNavigationStateProvider observers]
  -[DBNavigationStateProvider setIconProvider:]
  -[DBNavigationStateProvider setInfoProvider:]
  -[DBNavigationStateProvider activeNavigationIdentifiersObserver:updatedActiveNavigationIdentifiers:]
  -[DBNavigationStateProvider appHistory:mostRecentNavigationAppUpdatedTo:]
  -[DBNavigationStateProvider appHistory:mostRecentOtherAppUpdatedTo:]
  -[DBNavigationStateProvider appHistory:mostRecentHomeScreenUpdatedTo:]
  -[DBNavigationStateProvider _initWithActiveNavigationIdentifiersObserver:]
  -[DBNavigationStateProvider navigatingIdentifiers]
  -[DBNavigationStateProvider mostRecentClusterNavigatingApp]
  -[DBNavigationStateProvider mostRecentDashboardNavigatingApp]
  -[DBNavigationStateProvider mostRecentNavigatingApp]
  -[DBNavigationStateProvider _updateMostRecentDockApp]
  -[DBNavigationStateProvider _updateMostRecentClusterApp]
  -[DBNavigationStateProvider appHistoryAppDockProvider]
  -[DBNavigationStateProvider setAppHistoryAppDockProvider:]
  -[DBNavigationStateProvider activeNavigationIdentifiersObserver]
  -[DBNavigationStateProvider setActiveNavigationIdentifiersObserver:]
  -[DBNavigationStateProvider mostRecentlyActivatedDashboardApp]
  -[DBNavigationStateProvider setMostRecentlyActivatedDashboardApp:]
  -[DBNavigationStateProvider mostRecentlyActivatedClusterApp]
  -[DBNavigationStateProvider setMostRecentlyActivatedClusterApp:]


DBHomeKitServiceTypes : NSObject
  // class methods
  +[DBHomeKitServiceTypes serviceTypeByName]
  +[DBHomeKitServiceTypes serviceNameByType]
  +[DBHomeKitServiceTypes serviceNameForType:]


DBSplashScreenAlert : NSObject <DBSplashScreenDismissalServer, NSXPCListenerDelegate, SBSRemoteAlertHandleObserver, BSInvalidatable>
 @property  SBSRemoteAlertHandle *alertHandle
 @property  NSXPCListener *listener
 @property  NSXPCConnection *connection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBSplashScreenAlert connect]
  -[DBSplashScreenAlert .cxx_destruct]
  -[DBSplashScreenAlert connection]
  -[DBSplashScreenAlert setListener:]
  -[DBSplashScreenAlert remoteAlertHandleDidDeactivate:]
  -[DBSplashScreenAlert remoteAlertHandle:didInvalidateWithError:]
  -[DBSplashScreenAlert remoteAlertHandleDidActivate:]
  -[DBSplashScreenAlert invalidate]
  -[DBSplashScreenAlert listener]
  -[DBSplashScreenAlert listener:shouldAcceptNewConnection:]
  -[DBSplashScreenAlert init]
  -[DBSplashScreenAlert setConnection:]
  -[DBSplashScreenAlert alertHandle]
  -[DBSplashScreenAlert setAlertHandle:]
  -[DBSplashScreenAlert _showAlertIfNecessary]


DBRootStatusBarViewController : UIViewController <CRSUIStatusBarStyleServiceDelegate, DBAppDockViewControllerDelegate, BSInvalidatable, DBStatusBarButtonStateManagerDelegate, DBWorkspaceObserver>
 @property  DBStatusBarHomeButton *homeButton
 @property  NSTimer *homeButtonTimer
 @property  double lastHomeButtonDownTime
 @property  SiriLongPressButtonSource *homeButtonSource
 @property  SiriActivityAssertion *homeButtonAssertion
 @property  DBStatusBarScreenResizeButton *screenResizeButton
 @property  DBAppDockViewController *appDockViewController
 @property  UIView *keylineView
 @property  <DBEnvironment> *environment
 @property  DBStatusBarViewController *statusBarViewController
 @property  UIVisualEffectView *darkMaterial
 @property  UIVisualEffectView *lightMaterial
 @property  UIVisualEffectView *darkSiriMaterial
 @property  UIVisualEffectView *lightSiriMaterial
 @property  UITapGestureRecognizer *backPressGestureRecognizer
 @property  NSArray *homeButtonConstraints
 @property  NSArray *resizeButtonConstraints
 @property  unsigned long currentStatusBarEdge
 @property  NSArray *activeConstraints
 @property  CRSUIStatusBarStyleService *statusBarStyleService
 @property  <BSInvalidatable> *serviceDomainActivationToken
 @property  long long contrastOverride
 @property  BOOL siriPresentationOverride
 @property  unsigned long transitionControlType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBRootStatusBarViewController viewWillLayoutSubviews]
  -[DBRootStatusBarViewController dealloc]
  -[DBRootStatusBarViewController .cxx_destruct]
  -[DBRootStatusBarViewController viewDidLoad]
  -[DBRootStatusBarViewController invalidate]
  -[DBRootStatusBarViewController setEnvironment:]
  -[DBRootStatusBarViewController traitCollectionDidChange:]
  -[DBRootStatusBarViewController environment]
  -[DBRootStatusBarViewController homeButton]
  -[DBRootStatusBarViewController setHomeButton:]
  -[DBRootStatusBarViewController activeConstraints]
  -[DBRootStatusBarViewController setActiveConstraints:]
  -[DBRootStatusBarViewController setStatusBarViewController:]
  -[DBRootStatusBarViewController statusBarViewController]
  -[DBRootStatusBarViewController _focusHighlightColor]
  -[DBRootStatusBarViewController _backgroundColorForStyle:]
  -[DBRootStatusBarViewController statusBarStyleServiceUpdatedOverride:animationSettings:]
  -[DBRootStatusBarViewController homeButtonAssertion]
  -[DBRootStatusBarViewController setHomeButtonAssertion:]
  -[DBRootStatusBarViewController workspace:stateDidChangeFromState:toState:]
  -[DBRootStatusBarViewController appDockViewController]
  -[DBRootStatusBarViewController currentStatusBarEdge]
  -[DBRootStatusBarViewController setCurrentStatusBarEdge:]
  -[DBRootStatusBarViewController updateAppearanceForWallpaper]
  -[DBRootStatusBarViewController setTransitionControlType:]
  -[DBRootStatusBarViewController transitionControlType]
  -[DBRootStatusBarViewController setAppDockViewController:]
  -[DBRootStatusBarViewController homeButtonDown:]
  -[DBRootStatusBarViewController homeButtonUp:]
  -[DBRootStatusBarViewController homeButtonCancel:]
  -[DBRootStatusBarViewController _handleBackPressGesture:]
  -[DBRootStatusBarViewController _handleLongPressActivation]
  -[DBRootStatusBarViewController _resizeButtonPressed:]
  -[DBRootStatusBarViewController appDockViewController:didSelectBundleID:]
  -[DBRootStatusBarViewController statusBarHomeButtonStateManager:didChangeToDisplayState:]
  -[DBRootStatusBarViewController initWithEnvironment:iconProvider:stateProvider:]
  -[DBRootStatusBarViewController _updateAdditionalSafeAreaInsets]
  -[DBRootStatusBarViewController _updateConstraintsForStatusBar]
  -[DBRootStatusBarViewController _updateMaterialForStyle:]
  -[DBRootStatusBarViewController _updateScreenResizeButton]
  -[DBRootStatusBarViewController homeButtonTimer]
  -[DBRootStatusBarViewController setHomeButtonTimer:]
  -[DBRootStatusBarViewController lastHomeButtonDownTime]
  -[DBRootStatusBarViewController setLastHomeButtonDownTime:]
  -[DBRootStatusBarViewController homeButtonSource]
  -[DBRootStatusBarViewController setHomeButtonSource:]
  -[DBRootStatusBarViewController screenResizeButton]
  -[DBRootStatusBarViewController setScreenResizeButton:]
  -[DBRootStatusBarViewController keylineView]
  -[DBRootStatusBarViewController setKeylineView:]
  -[DBRootStatusBarViewController darkMaterial]
  -[DBRootStatusBarViewController setDarkMaterial:]
  -[DBRootStatusBarViewController lightMaterial]
  -[DBRootStatusBarViewController setLightMaterial:]
  -[DBRootStatusBarViewController darkSiriMaterial]
  -[DBRootStatusBarViewController setDarkSiriMaterial:]
  -[DBRootStatusBarViewController lightSiriMaterial]
  -[DBRootStatusBarViewController setLightSiriMaterial:]
  -[DBRootStatusBarViewController backPressGestureRecognizer]
  -[DBRootStatusBarViewController setBackPressGestureRecognizer:]
  -[DBRootStatusBarViewController homeButtonConstraints]
  -[DBRootStatusBarViewController setHomeButtonConstraints:]
  -[DBRootStatusBarViewController resizeButtonConstraints]
  -[DBRootStatusBarViewController setResizeButtonConstraints:]
  -[DBRootStatusBarViewController statusBarStyleService]
  -[DBRootStatusBarViewController setStatusBarStyleService:]
  -[DBRootStatusBarViewController serviceDomainActivationToken]
  -[DBRootStatusBarViewController setServiceDomainActivationToken:]
  -[DBRootStatusBarViewController contrastOverride]
  -[DBRootStatusBarViewController setContrastOverride:]
  -[DBRootStatusBarViewController siriPresentationOverride]
  -[DBRootStatusBarViewController setSiriPresentationOverride:]


DBLockOutController : NSObject <DBBuddyMonitorObserver, DBDisclosureMonitorObserver, DBEnvironmentConfigurationObserving, DBKeybagMonitorObserver, DBLockOutViewControllerDelegate, DBSiriMonitorObserver, DBThermalMonitorObserver>
 @property  DBEnvironmentConfiguration *environmentConfiguration
 @property  DBDashboardStateProvider *dashboardStateProvider
 @property  DBLockOutWindow *lockOutWindow
 @property  DBLockOutViewController *lockOutViewController
 @property  DBBuddyMonitor *buddyMonitor
 @property  DBDisclosureMonitor *disclosureMonitor
 @property  DBKeybagMonitor *keybagMonitor
 @property  DBSiriMonitor *siriMonitor
 @property  DBThermalMonitor *thermalMonitor
 @property  long long lockOutMode
 @property  <DBLockoutControllerDelegate> *delegate
 @property  <BSInvalidatable> *lockOutLayoutElementAssertion
 @property  BOOL lockedOut
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBLockOutController delegate]
  -[DBLockOutController .cxx_destruct]
  -[DBLockOutController setEnvironmentConfiguration:]
  -[DBLockOutController invalidate]
  -[DBLockOutController environmentConfiguration]
  -[DBLockOutController isLockedOut]
  -[DBLockOutController keybagMonitor]
  -[DBLockOutController setKeybagMonitor:]
  -[DBLockOutController environmentConfigurationPairedVehiclesDidChange:]
  -[DBLockOutController dashboardStateProvider]
  -[DBLockOutController setDashboardStateProvider:]
  -[DBLockOutController keybagMonitorLockStateDidChange:]
  -[DBLockOutController buddyMonitorDidChangeFinished:]
  -[DBLockOutController lockOutMode]
  -[DBLockOutController disclosureMonitorDidChangeActive:]
  -[DBLockOutController lockOutViewController:didTapButtonOfType:]
  -[DBLockOutController siriMonitorDidChangeEnabled:]
  -[DBLockOutController thermalMonitorLevelDidChange:]
  -[DBLockOutController initWithWindowScene:environmentConfiguration:dashboardStateProvider:delegate:]
  -[DBLockOutController updateLockOutModeAnimated:]
  -[DBLockOutController updateLockOutModeAnimated:takeScreen:]
  -[DBLockOutController setLockOutMode:]
  -[DBLockOutController lockOutWindow]
  -[DBLockOutController setLockOutWindow:]
  -[DBLockOutController lockOutViewController]
  -[DBLockOutController setLockOutViewController:]
  -[DBLockOutController buddyMonitor]
  -[DBLockOutController setBuddyMonitor:]
  -[DBLockOutController disclosureMonitor]
  -[DBLockOutController setDisclosureMonitor:]
  -[DBLockOutController siriMonitor]
  -[DBLockOutController setSiriMonitor:]
  -[DBLockOutController thermalMonitor]
  -[DBLockOutController setThermalMonitor:]
  -[DBLockOutController lockOutLayoutElementAssertion]
  -[DBLockOutController setLockOutLayoutElementAssertion:]


DBSmartWidgetEngine : NSObject <DBDashboardStateObserver, DBSmartWidgetResourceProvider, DBSmartWidgetSourceDelegate>
 @property  <DBEnvironment> *environment
 @property  DBHomeManager *homeManager
 @property  NSArray *sources
 @property  CARObserverHashTable *observers
 @property  NSDate *lastRefreshRequest
 @property  BOOL predictionsFresh
 @property  BOOL updatesPending
 @property  NSDate *nextRefresh
 @property  NSTimer *refreshTimer
 @property  NSTimer *stoppingTimer
 @property  BOOL active
 @property  NSArray *currentPredictions
 @property  BOOL hasHighPriorityPrediction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBSmartWidgetEngine _stop]
  -[DBSmartWidgetEngine active]
  -[DBSmartWidgetEngine initWithEnvironment:]
  -[DBSmartWidgetEngine addObserver:]
  -[DBSmartWidgetEngine dealloc]
  -[DBSmartWidgetEngine sources]
  -[DBSmartWidgetEngine _start]
  -[DBSmartWidgetEngine currentPredictions]
  -[DBSmartWidgetEngine .cxx_destruct]
  -[DBSmartWidgetEngine homeManager]
  -[DBSmartWidgetEngine setObservers:]
  -[DBSmartWidgetEngine handleEvent:]
  -[DBSmartWidgetEngine setHomeManager:]
  -[DBSmartWidgetEngine setSources:]
  -[DBSmartWidgetEngine removeObserver:]
  -[DBSmartWidgetEngine environment]
  -[DBSmartWidgetEngine observers]
  -[DBSmartWidgetEngine startIfNeeded]
  -[DBSmartWidgetEngine refreshTimer]
  -[DBSmartWidgetEngine stopIfNeeded]
  -[DBSmartWidgetEngine setRefreshTimer:]
  -[DBSmartWidgetEngine dashboardStateProvider:didChangeConnectionReady:]
  -[DBSmartWidgetEngine dashboardStateProvider:didChangeLockoutState:]
  -[DBSmartWidgetEngine dashboardStateProvider:didChangeHomeScreenPageType:]
  -[DBSmartWidgetEngine dashboardStateProvider:didChangeActiveBundleIdentifier:]
  -[DBSmartWidgetEngine refreshGarageDoors]
  -[DBSmartWidgetEngine sourceDidRefresh:predictionsUpdated:]
  -[DBSmartWidgetEngine refreshPredictions]
  -[DBSmartWidgetEngine refreshDisabled]
  -[DBSmartWidgetEngine _resetCurrentPredictions]
  -[DBSmartWidgetEngine _updatePredictionsFresh]
  -[DBSmartWidgetEngine _useRangeEnd:refreshDate:]
  -[DBSmartWidgetEngine _useRangeStart:now:refreshDate:]
  -[DBSmartWidgetEngine setPredictionsFresh:]
  -[DBSmartWidgetEngine hasHighPriorityPrediction]
  -[DBSmartWidgetEngine setNextRefresh:]
  -[DBSmartWidgetEngine _sourceForPrediction:]
  -[DBSmartWidgetEngine _postUpdatedCurrentPredictionsIfNeeded]
  -[DBSmartWidgetEngine _updateWithDashboardStateProvider:]
  -[DBSmartWidgetEngine predictionsFresh]
  -[DBSmartWidgetEngine nextRefresh]
  -[DBSmartWidgetEngine lastRefreshRequest]
  -[DBSmartWidgetEngine setLastRefreshRequest:]
  -[DBSmartWidgetEngine updatesPending]
  -[DBSmartWidgetEngine setUpdatesPending:]
  -[DBSmartWidgetEngine stoppingTimer]
  -[DBSmartWidgetEngine setStoppingTimer:]


DBDisclosureMonitor : NSObject
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSHashTable *observers
 @property  BOOL markedSafe
 @property  BOOL active

  // instance methods
  -[DBDisclosureMonitor active]
  -[DBDisclosureMonitor setCallbackQueue:]
  -[DBDisclosureMonitor addObserver:]
  -[DBDisclosureMonitor callbackQueue]
  -[DBDisclosureMonitor .cxx_destruct]
  -[DBDisclosureMonitor setObservers:]
  -[DBDisclosureMonitor removeObserver:]
  -[DBDisclosureMonitor init]
  -[DBDisclosureMonitor observers]
  -[DBDisclosureMonitor turnFeaturesOff]
  -[DBDisclosureMonitor markSafe]
  -[DBDisclosureMonitor _observersDisclosureMonitorDidChange]
  -[DBDisclosureMonitor markedSafe]
  -[DBDisclosureMonitor setMarkedSafe:]


_DBIconListLayoutProvider : NSObject <SBIconListLayoutProvider>
 @property  SBIconListFlowLayout *layout

  // instance methods
  -[_DBIconListLayoutProvider initWithEnvironment:]
  -[_DBIconListLayoutProvider layout]
  -[_DBIconListLayoutProvider setLayout:]
  -[_DBIconListLayoutProvider layoutForIconLocation:]
  -[_DBIconListLayoutProvider .cxx_destruct]


DBIconManager : SBHIconManager
 @property  _DBIconListLayoutProvider *layoutProvider

  // instance methods
  -[DBIconManager layoutProvider]
  -[DBIconManager initWithEnvironment:]
  -[DBIconManager listLayoutProvider]
  -[DBIconManager .cxx_destruct]
  -[DBIconManager setLayoutProvider:]
  -[DBIconManager iconPageIndicatorImageSetCache]


DBHomeToAppAnimationSettings : DBAnimationSettings
 @property  DBIconView *iconView

  // instance methods
  -[DBHomeToAppAnimationSettings .cxx_destruct]
  -[DBHomeToAppAnimationSettings setIconView:]
  -[DBHomeToAppAnimationSettings iconView]


DBHomeToAppAnimation : DBDashboardAnimation
  // class methods
  +[DBHomeToAppAnimation animationWithSettings:]


_DBLaunchAppFromHomeZoomAnimation : DBHomeToAppAnimation
 @property  DBIconView *iconView

  // instance methods
  -[_DBLaunchAppFromHomeZoomAnimation initWithSettings:]
  -[_DBLaunchAppFromHomeZoomAnimation .cxx_destruct]
  -[_DBLaunchAppFromHomeZoomAnimation iconView]
  -[_DBLaunchAppFromHomeZoomAnimation startAnimationWithCompletion:]


_DBLaunchAppFromHomeScaleAnimation : DBHomeToAppAnimation
  // instance methods
  -[_DBLaunchAppFromHomeScaleAnimation startAnimationWithCompletion:]


_DBLaunchAppFromHomeReducedMotionAnimation : DBHomeToAppAnimation
  // instance methods
  -[_DBLaunchAppFromHomeReducedMotionAnimation startAnimationWithCompletion:]


DBIconBadgeController : NSObject <UNNotificationSettingsCenterDelegate>
 @property  UNNotificationSettingsCenter *notificationsSettingsCenter
 @property  NSDictionary *lock_badgesAllowedByIdentifier
 @property  CARObserverHashTable *observers
 @property  NSObject<OS_dispatch_queue> *badgeSettingsUpdateQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBIconBadgeController addObserver:]
  -[DBIconBadgeController .cxx_destruct]
  -[DBIconBadgeController setObservers:]
  -[DBIconBadgeController removeObserver:]
  -[DBIconBadgeController init]
  -[DBIconBadgeController observers]
  -[DBIconBadgeController userNotificationSettingsCenter:didUpdateNotificationSourceIdentifiers:]
  -[DBIconBadgeController notificationsEnabledForIdentifier:]
  -[DBIconBadgeController _badge_queue_updateNotificationSources]
  -[DBIconBadgeController notificationsSettingsCenter]
  -[DBIconBadgeController setNotificationsSettingsCenter:]
  -[DBIconBadgeController lock_badgesAllowedByIdentifier]
  -[DBIconBadgeController setLock_badgesAllowedByIdentifier:]
  -[DBIconBadgeController badgeSettingsUpdateQueue]
  -[DBIconBadgeController setBadgeSettingsUpdateQueue:]


DBSmartWidgetSource : NSObject
 @property  BOOL disabled
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSDate *lastRefresh
 @property  NSDictionary *currentPredictions
 @property  NSString *sourceName
 @property  <DBSmartWidgetSourceDelegate> *delegate
 @property  NSArray *predictions

  // class methods
  +[DBSmartWidgetSource sourceName]
  +[DBSmartWidgetSource load]
  +[DBSmartWidgetSource registerSource:]
  +[DBSmartWidgetSource predictionClasses]
  +[DBSmartWidgetSource registeredSources]

  // instance methods
  -[DBSmartWidgetSource disabled]
  -[DBSmartWidgetSource sourceName]
  -[DBSmartWidgetSource workQueue]
  -[DBSmartWidgetSource delegate]
  -[DBSmartWidgetSource setWorkQueue:]
  -[DBSmartWidgetSource currentPredictions]
  -[DBSmartWidgetSource .cxx_destruct]
  -[DBSmartWidgetSource setDisabled:]
  -[DBSmartWidgetSource handleEvent:]
  -[DBSmartWidgetSource predictions]
  -[DBSmartWidgetSource initWithDelegate:resourceProvider:]
  -[DBSmartWidgetSource freshPredictions]
  -[DBSmartWidgetSource shouldKeepPrediction:]
  -[DBSmartWidgetSource refreshPredictions]
  -[DBSmartWidgetSource refreshDisabled]
  -[DBSmartWidgetSource defaultsDisabled]
  -[DBSmartWidgetSource lastRefresh]
  -[DBSmartWidgetSource setLastRefresh:]
  -[DBSmartWidgetSource setCurrentPredictions:]


DBGarageDoor : DBHomeKitService
 @property  BOOL current
 @property  DBHomeKitDoorStateCharacteristic *doorStateCharacteristic
 @property  DBHomeKitDoorStateCharacteristic *targetDoorStateCharacteristic
 @property  DBHomeKitBoolCharacteristic *obstructionDetectedCharacteristic
 @property  long long doorState
 @property  long long targetDoorState
 @property  BOOL obstructionDetected

  // class methods
  +[DBGarageDoor load]
  +[DBGarageDoor serviceType]
  +[DBGarageDoor observerProtocol]

  // instance methods
  -[DBGarageDoor current]
  -[DBGarageDoor addObserver:]
  -[DBGarageDoor hasError]
  -[DBGarageDoor removeObserver:]
  -[DBGarageDoor pendingWrite]
  -[DBGarageDoor pendingRead]
  -[DBGarageDoor managedCharacteristics]
  -[DBGarageDoor _characteristicDidUpdate:]
  -[DBGarageDoor _tracksLastUsed]
  -[DBGarageDoor _shouldUpdateLastUsedForCharacteristic:]
  -[DBGarageDoor doorStateCharacteristic]
  -[DBGarageDoor targetDoorStateCharacteristic]
  -[DBGarageDoor obstructionDetectedCharacteristic]
  -[DBGarageDoor _doorStateForCharacteristic:]
  -[DBGarageDoor doorState]
  -[DBGarageDoor targetDoorState]
  -[DBGarageDoor setTargetDoorState:]
  -[DBGarageDoor obstructionDetected]


DBDashboardWorkspaceStateChangeItem : NSObject <DBWorkspaceStateChangeItem>
 @property  unsigned long presentationPreference
 @property  BOOL prefersAnimation
 @property  unsigned long changeType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBDashboardWorkspaceStateChangeItem changeType]
  -[DBDashboardWorkspaceStateChangeItem copyWithZone:]
  -[DBDashboardWorkspaceStateChangeItem mutableCopyWithZone:]
  -[DBDashboardWorkspaceStateChangeItem setChangeType:]
  -[DBDashboardWorkspaceStateChangeItem _init]
  -[DBDashboardWorkspaceStateChangeItem init]
  -[DBDashboardWorkspaceStateChangeItem _buildDescriptionWithBuilder:]
  -[DBDashboardWorkspaceStateChangeItem prefersAnimation]
  -[DBDashboardWorkspaceStateChangeItem _newEntityFromChangeItemWithPolicyProvider:]
  -[DBDashboardWorkspaceStateChangeItem presentationPreference]
  -[DBDashboardWorkspaceStateChangeItem setPresentationPreference:]


DBDashboardWorkspaceStateSiriChangeItem : DBDashboardWorkspaceStateChangeItem
 @property  BOOL floating

  // instance methods
  -[DBDashboardWorkspaceStateSiriChangeItem isFloating]
  -[DBDashboardWorkspaceStateSiriChangeItem init]
  -[DBDashboardWorkspaceStateSiriChangeItem setFloating:]
  -[DBDashboardWorkspaceStateSiriChangeItem prefersAnimation]
  -[DBDashboardWorkspaceStateSiriChangeItem _newEntityFromChangeItemWithPolicyProvider:]


DBDashboardWorkspaceStateHomescreenChangeItem : DBDashboardWorkspaceStateChangeItem
  // instance methods
  -[DBDashboardWorkspaceStateHomescreenChangeItem init]
  -[DBDashboardWorkspaceStateHomescreenChangeItem _newEntityFromChangeItemWithPolicyProvider:]


DBDashboardWorkspaceStateApplicationSceneChangeItem : DBDashboardWorkspaceStateChangeItem
 @property  DBApplicationInfo *application
 @property  NSDictionary *activationSettings

  // instance methods
  -[DBDashboardWorkspaceStateApplicationSceneChangeItem initWithApplication:]
  -[DBDashboardWorkspaceStateApplicationSceneChangeItem setActivationSettings:]
  -[DBDashboardWorkspaceStateApplicationSceneChangeItem application]
  -[DBDashboardWorkspaceStateApplicationSceneChangeItem .cxx_destruct]
  -[DBDashboardWorkspaceStateApplicationSceneChangeItem activationSettings]
  -[DBDashboardWorkspaceStateApplicationSceneChangeItem setApplication:]
  -[DBDashboardWorkspaceStateApplicationSceneChangeItem copyWithZone:]
  -[DBDashboardWorkspaceStateApplicationSceneChangeItem _buildDescriptionWithBuilder:]
  -[DBDashboardWorkspaceStateApplicationSceneChangeItem prefersAnimation]
  -[DBDashboardWorkspaceStateApplicationSceneChangeItem _newEntityFromChangeItemWithPolicyProvider:]


DBDateRange : NSObject
 @property  NSDate *start
 @property  NSDate *end
 @property  double startTimeIntervalSinceReferenceDate
 @property  double endTimeIntervalSinceReferenceDate
 @property  BOOL validRange
 @property  BOOL hasStart
 @property  BOOL hasEnd

  // class methods
  +[DBDateRange _validDate:]

  // instance methods
  -[DBDateRange initWithStart:end:]
  -[DBDateRange end]
  -[DBDateRange .cxx_destruct]
  -[DBDateRange setEnd:]
  -[DBDateRange setStart:]
  -[DBDateRange containsDate:]
  -[DBDateRange start]
  -[DBDateRange validRange]
  -[DBDateRange hasStart]
  -[DBDateRange hasEnd]
  -[DBDateRange startTimeIntervalSinceReferenceDate]
  -[DBDateRange endTimeIntervalSinceReferenceDate]


DBNotificationWindow : UIWindow
  // instance methods
  -[DBNotificationWindow hitTest:withEvent:]


DBFolderController : SBRootFolderController
 @property  <DBEnvironment> *environment

  // class methods
  +[DBFolderController _contentViewClass]
  +[DBFolderController listViewClass]

  // instance methods
  -[DBFolderController .cxx_destruct]
  -[DBFolderController setEnvironment:]
  -[DBFolderController environment]
  -[DBFolderController hasDock]


DBSceneUpdate : NSObject
 @property  DBApplicationInfo *applicationInfo
 @property  DBApplicationInfo *proxyApplicationInfo
 @property  <DBEnvironment> *environment
 @property  UIApplicationStarkSceneSpecification *sceneSpecification
 @property  FBApplicationUpdateScenesTransaction *transaction
 @property  NSDictionary *activationSettings
 @property  UIMutableCarPlayApplicationSceneSettings *settings
 @property  UIApplicationSceneTransitionContext *transitionContext

  // instance methods
  -[DBSceneUpdate setActivationSettings:]
  -[DBSceneUpdate transaction]
  -[DBSceneUpdate transitionContext]
  -[DBSceneUpdate sceneSpecification]
  -[DBSceneUpdate .cxx_destruct]
  -[DBSceneUpdate activationSettings]
  -[DBSceneUpdate settings]
  -[DBSceneUpdate setTransaction:]
  -[DBSceneUpdate setEnvironment:]
  -[DBSceneUpdate environment]
  -[DBSceneUpdate init]
  -[DBSceneUpdate _frame]
  -[DBSceneUpdate _safeAreaInsets]
  -[DBSceneUpdate applicationInfo]
  -[DBSceneUpdate setApplicationInfo:]
  -[DBSceneUpdate _uiStyle]
  -[DBSceneUpdate _mapStyle]
  -[DBSceneUpdate _postTransactionUpdateSceneSettingsForScene:]
  -[DBSceneUpdate initWithApplicationInfo:environment:]
  -[DBSceneUpdate proxyApplicationInfo]
  -[DBSceneUpdate setProxyApplicationInfo:]
  -[DBSceneUpdate initWithApplicationInfo:proxyApplicationInfo:environment:activationSettings:]
  -[DBSceneUpdate performUpdateWithCompletion:]
  -[DBSceneUpdate _effectiveSceneAppInfo]
  -[DBSceneUpdate setSceneSpecification:]


DBDisplayManager : NSObject <CARSessionObserving, DBNavigationAppInfoProviding, FBSceneManagerDelegate, FBSDisplayObserving>
 @property  BOOL activated
 @property  DBIconImageCache *iconImageCache
 @property  FBSceneManager *manager
 @property  NSMutableDictionary *displayToEnvironmentMap
 @property  NSMutableDictionary *displayToPresentationBinderMap
 @property  NSMutableDictionary *displayToRootSceneMap
 @property  NSMutableDictionary *displayToEndpointInjector
 @property  FBSDisplayLayoutPublisher *dashboardDisplayLayoutPublisher
 @property  DBIconBadgeController *iconBadgeController
 @property  CRCarPlayAppPolicyEvaluator *appPolicyEvaluator
 @property  CARSessionStatus *sessionStatus
 @property  NSMutableSet *pendingDisplays
 @property  NSMutableSet *navigationStateProviderRequesters
 @property  DBNavigationStateProvider *navigationStateProvider
 @property  NSMutableSet *processMonitorRequesters
 @property  DBProcessMonitor *processMonitor
 @property  NSMutableSet *layerMetadataServiceRequesters
 @property  DBLayerMetadataService *layerMetadataService
 @property  DBClusterControlChannel *clusterControlChannel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBDisplayManager sceneManager:didCreateScene:]
  -[DBDisplayManager sceneManager:willDestroyScene:]
  -[DBDisplayManager sessionDidDisconnect:]
  -[DBDisplayManager sceneManager:createDefaultTransitionContextForScene:]
  -[DBDisplayManager sceneManager:didDestroyScene:]
  -[DBDisplayManager sceneManager:updateForScene:preparedWithContext:]
  -[DBDisplayManager displayMonitor:didConnectIdentity:withConfiguration:]
  -[DBDisplayManager iconImageCache]
  -[DBDisplayManager activate]
  -[DBDisplayManager displayMonitor:didUpdateIdentity:withConfiguration:]
  -[DBDisplayManager setManager:]
  -[DBDisplayManager sessionStatus]
  -[DBDisplayManager sceneManager:updateForScene:appliedWithContext:]
  -[DBDisplayManager setProcessMonitor:]
  -[DBDisplayManager setAppPolicyEvaluator:]
  -[DBDisplayManager processMonitor]
  -[DBDisplayManager setActivated:]
  -[DBDisplayManager sceneManager:scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:]
  -[DBDisplayManager .cxx_destruct]
  -[DBDisplayManager sceneManager:scene:didReceiveActions:]
  -[DBDisplayManager appPolicyEvaluator]
  -[DBDisplayManager displayMonitor:willDisconnectIdentity:]
  -[DBDisplayManager sceneManager:updateForScene:completedWithContext:error:]
  -[DBDisplayManager manager]
  -[DBDisplayManager sessionDidConnect:]
  -[DBDisplayManager setIconImageCache:]
  -[DBDisplayManager setSessionStatus:]
  -[DBDisplayManager activated]
  -[DBDisplayManager clusterControlChannel]
  -[DBDisplayManager setClusterControlChannel:]
  -[DBDisplayManager layerMetadataService]
  -[DBDisplayManager setLayerMetadataService:]
  -[DBDisplayManager navigationStateProvider]
  -[DBDisplayManager iconBadgeController]
  -[DBDisplayManager setIconBadgeController:]
  -[DBDisplayManager bundleIdentifierSupportsDashboard:]
  -[DBDisplayManager bundleIdentifierSupportsInstrumentCluster:]
  -[DBDisplayManager bundleIdentifierIsCertificationApp:]
  -[DBDisplayManager initWithAppPolicyEvaluator:]
  -[DBDisplayManager environmentForDisplayIdentity:]
  -[DBDisplayManager enumerateEnvironmentsUsingBlock:]
  -[DBDisplayManager _setPrimaryDisplayCornerMaskImageIfNecessary]
  -[DBDisplayManager _handleConnectedDisplaysIfPossible]
  -[DBDisplayManager _setNeedsLayerMetadataService:forDisplayIdentity:]
  -[DBDisplayManager _updateLayerMetadataService]
  -[DBDisplayManager _setNeedsNavigationStateProvider:forDisplayIdentity:]
  -[DBDisplayManager _updateNavigationStateProvider]
  -[DBDisplayManager _setNeedsTemplateProcessMonitor:forDisplayIdentity:]
  -[DBDisplayManager _updateTemplateProcessMonitor]
  -[DBDisplayManager displayToEnvironmentMap]
  -[DBDisplayManager setDisplayToEnvironmentMap:]
  -[DBDisplayManager displayToPresentationBinderMap]
  -[DBDisplayManager setDisplayToPresentationBinderMap:]
  -[DBDisplayManager displayToRootSceneMap]
  -[DBDisplayManager setDisplayToRootSceneMap:]
  -[DBDisplayManager displayToEndpointInjector]
  -[DBDisplayManager setDisplayToEndpointInjector:]
  -[DBDisplayManager dashboardDisplayLayoutPublisher]
  -[DBDisplayManager setDashboardDisplayLayoutPublisher:]
  -[DBDisplayManager pendingDisplays]
  -[DBDisplayManager setPendingDisplays:]
  -[DBDisplayManager navigationStateProviderRequesters]
  -[DBDisplayManager setNavigationStateProviderRequesters:]
  -[DBDisplayManager setNavigationStateProvider:]
  -[DBDisplayManager processMonitorRequesters]
  -[DBDisplayManager setProcessMonitorRequesters:]
  -[DBDisplayManager layerMetadataServiceRequesters]
  -[DBDisplayManager setLayerMetadataServiceRequesters:]


DBStatusBarSensorIndicatorView : UIView
 @property  long long sensorIndicatorType

  // instance methods
  -[DBStatusBarSensorIndicatorView intrinsicContentSize]
  -[DBStatusBarSensorIndicatorView init]
  -[DBStatusBarSensorIndicatorView _updateColor]
  -[DBStatusBarSensorIndicatorView setSensorIndicatorType:]
  -[DBStatusBarSensorIndicatorView sensorIndicatorType]


DBSiriMonitor : NSObject
 @property  CARObserverHashTable *observers
 @property  BOOL siriEnabled

  // instance methods
  -[DBSiriMonitor addObserver:]
  -[DBSiriMonitor dealloc]
  -[DBSiriMonitor .cxx_destruct]
  -[DBSiriMonitor setObservers:]
  -[DBSiriMonitor removeObserver:]
  -[DBSiriMonitor init]
  -[DBSiriMonitor observers]
  -[DBSiriMonitor setSiriEnabled:]
  -[DBSiriMonitor siriEnabled]
  -[DBSiriMonitor handleAssistantLanguageChanged:]
  -[DBSiriMonitor handleAssistantPreferencesChanged:]
  -[DBSiriMonitor _updateSiriEnabled]


DBInCallWidgetAvatarView : UIButton
 @property  CNAvatarViewControllerSettings *avatarControllerSettings
 @property  NSString *appBundleIdentifier
 @property  CNAvatarViewController *avatarController
 @property  UIImageView *appIconView
 @property  UIImageView *focusRingView
 @property  TUCall *currentCall

  // instance methods
  -[DBInCallWidgetAvatarView appBundleIdentifier]
  -[DBInCallWidgetAvatarView appIconView]
  -[DBInCallWidgetAvatarView didUpdateFocusInContext:withAnimationCoordinator:]
  -[DBInCallWidgetAvatarView setAppIconView:]
  -[DBInCallWidgetAvatarView setupConstraints]
  -[DBInCallWidgetAvatarView .cxx_destruct]
  -[DBInCallWidgetAvatarView initWithFrame:]
  -[DBInCallWidgetAvatarView setAppBundleIdentifier:]
  -[DBInCallWidgetAvatarView traitCollectionDidChange:]
  -[DBInCallWidgetAvatarView avatarController]
  -[DBInCallWidgetAvatarView setAvatarController:]
  -[DBInCallWidgetAvatarView currentCall]
  -[DBInCallWidgetAvatarView _setupImagesIfNecessary]
  -[DBInCallWidgetAvatarView focusRingView]
  -[DBInCallWidgetAvatarView setFocusRingView:]
  -[DBInCallWidgetAvatarView setCurrentCall:]
  -[DBInCallWidgetAvatarView avatarControllerSettings]
  -[DBInCallWidgetAvatarView setAvatarControllerSettings:]


DBComparison : NSObject
  // class methods
  +[DBComparison isValue:equalTo:]


DBAppDockButton : DBStatusBarButton <SBLeafIconObserver, NSCopying>
 @property  UIImageView *iconImageView
 @property  UIImageView *iconFocusRingImageView
 @property  UIImageView *iconFocusRingUnreadImageView
 @property  <DBIconProviding> *iconProvider
 @property  DBLeafIcon *icon
 @property  UIImageView *badgeView
 @property  BOOL showBadge
 @property  NSLayoutConstraint *iconFocusRingUnreadImageViewCenterConstraint
 @property  BOOL active
 @property  NSString *bundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBAppDockButton setFocusHighlightColor:]
  -[DBAppDockButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[DBAppDockButton setIcon:]
  -[DBAppDockButton iconImageDidUpdate:]
  -[DBAppDockButton isActive]
  -[DBAppDockButton canBecomeFocused]
  -[DBAppDockButton .cxx_destruct]
  -[DBAppDockButton icon]
  -[DBAppDockButton iconAccessoriesDidUpdate:]
  -[DBAppDockButton iconImageView]
  -[DBAppDockButton setBundleIdentifier:]
  -[DBAppDockButton setActive:]
  -[DBAppDockButton badgeView]
  -[DBAppDockButton bundleIdentifier]
  -[DBAppDockButton copyWithZone:]
  -[DBAppDockButton iconProvider]
  -[DBAppDockButton setBadgeView:]
  -[DBAppDockButton traitCollectionDidChange:]
  -[DBAppDockButton initWithIconProvider:]
  -[DBAppDockButton setIconImageView:]
  -[DBAppDockButton setBadgeHidden:animated:]
  -[DBAppDockButton setIconProvider:]
  -[DBAppDockButton setShowBadge:]
  -[DBAppDockButton showBadge]
  -[DBAppDockButton _setupImagesIfNecessary]
  -[DBAppDockButton _updateCenterXConstraintConstant]
  -[DBAppDockButton _updateFocusRings]
  -[DBAppDockButton setShowBadge:animated:]
  -[DBAppDockButton _updateImageForBundleIdentifier:crossfade:]
  -[DBAppDockButton setBundleIdentifier:animated:]
  -[DBAppDockButton iconFocusRingImageView]
  -[DBAppDockButton setIconFocusRingImageView:]
  -[DBAppDockButton iconFocusRingUnreadImageView]
  -[DBAppDockButton setIconFocusRingUnreadImageView:]
  -[DBAppDockButton iconFocusRingUnreadImageViewCenterConstraint]
  -[DBAppDockButton setIconFocusRingUnreadImageViewCenterConstraint:]


DBAnalytics : NSObject <CARSessionCommandObserving, CRSSiriPreferencesObserver, DBKeybagMonitorObserver, DBNowPlayingDelegate, DBThermalMonitorObserver, BSInvalidatable, DBDashboardStateObserver, DBEnvironmentConfigurationObserving>
 @property  DBEnvironmentConfiguration *environmentConfiguration
 @property  CARAutomaticDNDStatus *dndStatus
 @property  NSOperationQueue *analyticsQueue
 @property  DBNowPlayingObserver *nowPlayingObserver
 @property  DBKeybagMonitor *keybagMonitor
 @property  DBThermalMonitor *thermalMonitor
 @property  DBEnvironmentConfiguration *configuration
 @property  CRSSiriPreferences *siriPreferences
 @property  BOOL sessionStartedEventSent
 @property  unsigned long lastHomeScreenPageType
 @property  NSString *lastActiveBundleIdentifier
 @property  NSDictionary *vehicleAnalyticsRepresentation
 @property  unsigned long sessionUnlockCount
 @property  NSMutableArray *analyticsAppInfo
 @property  NSMutableArray *analyticsScreenInfo
 @property  _DBAnalyticsChargeInfo *analyticsChargeInfo
 @property  double screenOwnershipDuration
 @property  NSDate *screenOwnershipDate
 @property  double audioOwnershipDuration
 @property  NSDate *audioOwnershipDate
 @property  NSDate *sessionStartDate
 @property  NSMutableDictionary *sessionAppLaunches
 @property  FBSDisplayLayoutMonitor *displayLayoutMonitor
 @property  NSMutableDictionary *sessionDeviceAppLaunches
 @property  NSMutableDictionary *sessionNavigationOwners
 @property  NSString *lastDashboardNavigationBundleIdentifier
 @property  NSString *lastDashboardAudioWidgetBundleIdentifier
 @property  unsigned long sessionRequestUIMapsCount
 @property  unsigned long sessionRequestUIMessagesCount
 @property  unsigned long sessionRequestUIPhoneCount
 @property  unsigned long sessionRequestUIMusicCount
 @property  unsigned long sessionRequestUIBundleIdentifierCount
 @property  unsigned long sessionShowUIMapCount
 @property  unsigned long sessionShowUITurnCardCount
 @property  NSString *startBundleIdentifier
 @property  NSString *siriHostedBundleIdentifier
 @property  BOOL accessorySupportsLocation
 @property  BOOL accessorySupportsLocationPASCDSpeed
 @property  BOOL accessorySupportsLocationGPGGA
 @property  BOOL accessorySupportsLocationGPRMC
 @property  BOOL accessorySupportsLocationDeadReckoning
 @property  BOOL accessorySupportsLocationChinaShifted
 @property  NSDate *mediaserverdDiedDate
 @property  NSDate *wifidDiedDate
 @property  NSDate *thermalTrapDate
 @property  NSDate *wifiLinkDownDate
 @property  NSString *wifiLinkDownReason
 @property  long long currentThermalLevel
 @property  long long announceEnablementType
 @property  BOOL announceMuted
 @property  long long mapsAppearanceStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DBAnalytics shouldSendAnalyticsEvents]
  +[DBAnalytics biome_CarPlayStarted:wireless:]

  // instance methods
  -[DBAnalytics analyticsQueue]
  -[DBAnalytics displayLayoutMonitor]
  -[DBAnalytics setAnalyticsQueue:]
  -[DBAnalytics setConfiguration:]
  -[DBAnalytics configuration]
  -[DBAnalytics sessionStartDate]
  -[DBAnalytics .cxx_destruct]
  -[DBAnalytics setSiriPreferences:]
  -[DBAnalytics setEnvironmentConfiguration:]
  -[DBAnalytics setDisplayLayoutMonitor:]
  -[DBAnalytics invalidate]
  -[DBAnalytics setCurrentThermalLevel:]
  -[DBAnalytics environmentConfiguration]
  -[DBAnalytics currentThermalLevel]
  -[DBAnalytics siriPreferences]
  -[DBAnalytics session:showUIForScreenInfo:withURL:]
  -[DBAnalytics session:openURL:]
  -[DBAnalytics session:didSetViewArea:forScreenID:withDuration:transitionControlType:]
  -[DBAnalytics setSessionStartDate:]
  -[DBAnalytics keybagMonitor]
  -[DBAnalytics setKeybagMonitor:]
  -[DBAnalytics nowPlayingObserver]
  -[DBAnalytics setNowPlayingObserver:]
  -[DBAnalytics preferences:carPlayAnnounceEnablementTypeChanged:]
  -[DBAnalytics preferences:announceNotificationsInCarPlayTemporarilyDisabledChanged:]
  -[DBAnalytics initWithEnvironmentConfiguration:]
  -[DBAnalytics environmentConfigurationPairedVehiclesDidChange:]
  -[DBAnalytics keybagMonitorLockStateDidChange:]
  -[DBAnalytics dashboardStateProvider:didChangeConnectionReady:]
  -[DBAnalytics dashboardStateProvider:didChangeLockoutState:]
  -[DBAnalytics dashboardStateProvider:didChangeHomeScreenPageType:]
  -[DBAnalytics dashboardStateProvider:didChangeActiveBundleIdentifier:]
  -[DBAnalytics nowPlayingObserver:didChangeNowPlayingApplication:]
  -[DBAnalytics nowPlayingObserver:didUpdatePlaybackState:inApplication:]
  -[DBAnalytics thermalMonitorLevelDidChange:]
  -[DBAnalytics thermalMonitor]
  -[DBAnalytics setThermalMonitor:]
  -[DBAnalytics _screenBecameAvailable:]
  -[DBAnalytics _screenBecameUnavailable:]
  -[DBAnalytics _dashboardSmartWidgetUpdated:]
  -[DBAnalytics _dashboardNowPlayingWidgetTapped:]
  -[DBAnalytics _applicationDidLaunch:]
  -[DBAnalytics _appStartedNavigation:]
  -[DBAnalytics _iosHasMainAudio:]
  -[DBAnalytics _carHasMainAudio:]
  -[DBAnalytics _mediaserverdConnectionDied]
  -[DBAnalytics dictionaryFromInterrupt]
  -[DBAnalytics stringFromInterruptDictionary:]
  -[DBAnalytics stringFromSessionSummary]
  -[DBAnalytics applySessionStartedStorage:]
  -[DBAnalytics userPressedTransitionControl]
  -[DBAnalytics _queue_sessionStarted]
  -[DBAnalytics _queue_sessionEnded]
  -[DBAnalytics _queue_sendAnnounceMessagesEventWithEnablementType:disabled:]
  -[DBAnalytics _isAnnounceMuted]
  -[DBAnalytics _queue_deviceDidChangeToBundleIdentifier:]
  -[DBAnalytics _queue_didChangeToBundleIdentifier:]
  -[DBAnalytics _queue_nowPlayingUpdatedToApp:isPlaying:]
  -[DBAnalytics _queue_screenViewAreaChanged:screenInfo:configuration:duration:]
  -[DBAnalytics _queue_mediaserverdConnectionDied]
  -[DBAnalytics _queue_wifidConnectionDied]
  -[DBAnalytics _queue_thermalTrapOccurred]
  -[DBAnalytics _queue_stateProviderIsReadyForAnalytics:]
  -[DBAnalytics _DBLayoutMonitor:didUpdateDisplayLayout:withContext:]
  -[DBAnalytics dashboardNavigationDidChangeToBundleIdentifier:]
  -[DBAnalytics dashboardAudioWidgetDidChangeToBundleIdentifier:]
  -[DBAnalytics siriDidPresent]
  -[DBAnalytics siriDidStartHostingBundleIdentifier:]
  -[DBAnalytics siriDidDismiss]
  -[DBAnalytics _queue_fetchLocationBits]
  -[DBAnalytics sendEvent:withParameters:]
  -[DBAnalytics _analyticsInfoPassingTest:]
  -[DBAnalytics nowPlayingAppAnalyticsInfo]
  -[DBAnalytics visibleAppsAnalyticsInfo]
  -[DBAnalytics visibleDashboardAppsAnalyticsInfo]
  -[DBAnalytics appAnalyticsInfoForApp:]
  -[DBAnalytics appAnalyticsInfoForBundleIdentifier:]
  -[DBAnalytics _queue_powerStateDidChange]
  -[DBAnalytics dndStatus]
  -[DBAnalytics setDndStatus:]
  -[DBAnalytics sessionStartedEventSent]
  -[DBAnalytics setSessionStartedEventSent:]
  -[DBAnalytics lastHomeScreenPageType]
  -[DBAnalytics setLastHomeScreenPageType:]
  -[DBAnalytics lastActiveBundleIdentifier]
  -[DBAnalytics setLastActiveBundleIdentifier:]
  -[DBAnalytics vehicleAnalyticsRepresentation]
  -[DBAnalytics setVehicleAnalyticsRepresentation:]
  -[DBAnalytics sessionUnlockCount]
  -[DBAnalytics setSessionUnlockCount:]
  -[DBAnalytics analyticsAppInfo]
  -[DBAnalytics setAnalyticsAppInfo:]
  -[DBAnalytics analyticsScreenInfo]
  -[DBAnalytics setAnalyticsScreenInfo:]
  -[DBAnalytics analyticsChargeInfo]
  -[DBAnalytics setAnalyticsChargeInfo:]
  -[DBAnalytics screenOwnershipDuration]
  -[DBAnalytics setScreenOwnershipDuration:]
  -[DBAnalytics screenOwnershipDate]
  -[DBAnalytics setScreenOwnershipDate:]
  -[DBAnalytics audioOwnershipDuration]
  -[DBAnalytics setAudioOwnershipDuration:]
  -[DBAnalytics audioOwnershipDate]
  -[DBAnalytics setAudioOwnershipDate:]
  -[DBAnalytics sessionAppLaunches]
  -[DBAnalytics setSessionAppLaunches:]
  -[DBAnalytics sessionDeviceAppLaunches]
  -[DBAnalytics setSessionDeviceAppLaunches:]
  -[DBAnalytics sessionNavigationOwners]
  -[DBAnalytics setSessionNavigationOwners:]
  -[DBAnalytics lastDashboardNavigationBundleIdentifier]
  -[DBAnalytics setLastDashboardNavigationBundleIdentifier:]
  -[DBAnalytics lastDashboardAudioWidgetBundleIdentifier]
  -[DBAnalytics setLastDashboardAudioWidgetBundleIdentifier:]
  -[DBAnalytics sessionRequestUIMapsCount]
  -[DBAnalytics setSessionRequestUIMapsCount:]
  -[DBAnalytics sessionRequestUIMessagesCount]
  -[DBAnalytics setSessionRequestUIMessagesCount:]
  -[DBAnalytics sessionRequestUIPhoneCount]
  -[DBAnalytics setSessionRequestUIPhoneCount:]
  -[DBAnalytics sessionRequestUIMusicCount]
  -[DBAnalytics setSessionRequestUIMusicCount:]
  -[DBAnalytics sessionRequestUIBundleIdentifierCount]
  -[DBAnalytics setSessionRequestUIBundleIdentifierCount:]
  -[DBAnalytics sessionShowUIMapCount]
  -[DBAnalytics setSessionShowUIMapCount:]
  -[DBAnalytics sessionShowUITurnCardCount]
  -[DBAnalytics setSessionShowUITurnCardCount:]
  -[DBAnalytics startBundleIdentifier]
  -[DBAnalytics setStartBundleIdentifier:]
  -[DBAnalytics siriHostedBundleIdentifier]
  -[DBAnalytics setSiriHostedBundleIdentifier:]
  -[DBAnalytics accessorySupportsLocation]
  -[DBAnalytics setAccessorySupportsLocation:]
  -[DBAnalytics accessorySupportsLocationPASCDSpeed]
  -[DBAnalytics setAccessorySupportsLocationPASCDSpeed:]
  -[DBAnalytics accessorySupportsLocationGPGGA]
  -[DBAnalytics setAccessorySupportsLocationGPGGA:]
  -[DBAnalytics accessorySupportsLocationGPRMC]
  -[DBAnalytics setAccessorySupportsLocationGPRMC:]
  -[DBAnalytics accessorySupportsLocationDeadReckoning]
  -[DBAnalytics setAccessorySupportsLocationDeadReckoning:]
  -[DBAnalytics accessorySupportsLocationChinaShifted]
  -[DBAnalytics setAccessorySupportsLocationChinaShifted:]
  -[DBAnalytics mediaserverdDiedDate]
  -[DBAnalytics setMediaserverdDiedDate:]
  -[DBAnalytics wifidDiedDate]
  -[DBAnalytics setWifidDiedDate:]
  -[DBAnalytics thermalTrapDate]
  -[DBAnalytics setThermalTrapDate:]
  -[DBAnalytics wifiLinkDownDate]
  -[DBAnalytics setWifiLinkDownDate:]
  -[DBAnalytics wifiLinkDownReason]
  -[DBAnalytics setWifiLinkDownReason:]
  -[DBAnalytics announceEnablementType]
  -[DBAnalytics setAnnounceEnablementType:]
  -[DBAnalytics announceMuted]
  -[DBAnalytics setAnnounceMuted:]
  -[DBAnalytics mapsAppearanceStyle]
  -[DBAnalytics setMapsAppearanceStyle:]


_DBAnalyticsAppInfo : _DBAnalyticsTimeAccumulator
 @property  DBApplicationInfo *appInfo
 @property  NSString *bundleIdentifier
 @property  unsigned long category
 @property  BOOL wasVisibleBeforeCarScreen
 @property  BOOL wasVisibleInDashboardBeforeCarScreen
 @property  BOOL wasVisibleBeforeSiri
 @property  unsigned long numberOfSiriPresentations
 @property  unsigned long dashboardWidgetType

  // instance methods
  -[_DBAnalyticsAppInfo category]
  -[_DBAnalyticsAppInfo .cxx_destruct]
  -[_DBAnalyticsAppInfo bundleIdentifier]
  -[_DBAnalyticsAppInfo appInfo]
  -[_DBAnalyticsAppInfo initWithAppInfo:policyEvaluator:]
  -[_DBAnalyticsAppInfo initWithBundleIdentifier:appDeclaration:policyEvaluator:]
  -[_DBAnalyticsAppInfo startCountingVisibleTime]
  -[_DBAnalyticsAppInfo startCountingDashboardVisibleTime]
  -[_DBAnalyticsAppInfo stopCountingVisibleTime]
  -[_DBAnalyticsAppInfo stopCountingDashboardVisibleTime]
  -[_DBAnalyticsAppInfo wasVisibleBeforeCarScreen]
  -[_DBAnalyticsAppInfo setWasVisibleBeforeCarScreen:]
  -[_DBAnalyticsAppInfo wasVisibleInDashboardBeforeCarScreen]
  -[_DBAnalyticsAppInfo setWasVisibleInDashboardBeforeCarScreen:]
  -[_DBAnalyticsAppInfo wasVisibleBeforeSiri]
  -[_DBAnalyticsAppInfo setWasVisibleBeforeSiri:]
  -[_DBAnalyticsAppInfo numberOfSiriPresentations]
  -[_DBAnalyticsAppInfo setNumberOfSiriPresentations:]
  -[_DBAnalyticsAppInfo dashboardWidgetType]
  -[_DBAnalyticsAppInfo setDashboardWidgetType:]


_DBAnalyticsScreenInfo : _DBAnalyticsTimeAccumulator
 @property  CARScreenInfo *screenInfo
 @property  NSString *analyticsPrefix
 @property  CARScreenViewArea *sessionStartViewArea
 @property  unsigned long viewAreaChangeCount
 @property  unsigned long viewAreaChangeUsingTransitionControlCount
 @property  BOOL hasTransitionControlsWithinViewAreas
 @property  NSDictionary *analytics_sessionStartedDictionaryRepresentation
 @property  NSDictionary *analytics_sessionEndedDictionaryRepresentation
 @property  unsigned long indexOfLargestViewArea

  // instance methods
  -[_DBAnalyticsScreenInfo .cxx_destruct]
  -[_DBAnalyticsScreenInfo screenInfo]
  -[_DBAnalyticsScreenInfo initWithScreenInfo:analyticsPrefix:sessionStartViewArea:]
  -[_DBAnalyticsScreenInfo analytics_sessionStartedDictionaryRepresentation]
  -[_DBAnalyticsScreenInfo analytics_sessionEndedDictionaryRepresentation]
  -[_DBAnalyticsScreenInfo _identifierForViewArea:]
  -[_DBAnalyticsScreenInfo startCountingTimeForViewArea:]
  -[_DBAnalyticsScreenInfo analyticsPrefix]
  -[_DBAnalyticsScreenInfo sessionStartViewArea]
  -[_DBAnalyticsScreenInfo viewAreaChangeCount]
  -[_DBAnalyticsScreenInfo setViewAreaChangeCount:]
  -[_DBAnalyticsScreenInfo viewAreaChangeUsingTransitionControlCount]
  -[_DBAnalyticsScreenInfo setViewAreaChangeUsingTransitionControlCount:]
  -[_DBAnalyticsScreenInfo hasTransitionControlsWithinViewAreas]
  -[_DBAnalyticsScreenInfo setHasTransitionControlsWithinViewAreas:]
  -[_DBAnalyticsScreenInfo indexOfLargestViewArea]


_DBAnalyticsTimeAccumulator : NSObject
 @property  NSMutableDictionary *dateStorage
 @property  NSMutableDictionary *accumulatedTimeStorage

  // instance methods
  -[_DBAnalyticsTimeAccumulator .cxx_destruct]
  -[_DBAnalyticsTimeAccumulator init]
  -[_DBAnalyticsTimeAccumulator isAccumulatingTimeForKey:]
  -[_DBAnalyticsTimeAccumulator isAccumulatingTimeForAnyKey]
  -[_DBAnalyticsTimeAccumulator startCountingTimeForKey:]
  -[_DBAnalyticsTimeAccumulator stopCountingTimeForAllKeys]
  -[_DBAnalyticsTimeAccumulator stopCountingTimeForKey:]
  -[_DBAnalyticsTimeAccumulator accumulatedTimeForKey:]
  -[_DBAnalyticsTimeAccumulator dateStorage]
  -[_DBAnalyticsTimeAccumulator setDateStorage:]
  -[_DBAnalyticsTimeAccumulator accumulatedTimeStorage]
  -[_DBAnalyticsTimeAccumulator setAccumulatedTimeStorage:]


_DBAnalyticsChargeInfo : _DBAnalyticsTimeAccumulator
 @property  BOOL wireless
 @property  BOOL didChargeDuringSession
 @property  NSString *current
 @property  NSString *adapterDescription
 @property  NSString *PMUConfiguration
 @property  NSString *voltage
 @property  NSString *wattage

  // instance methods
  -[_DBAnalyticsChargeInfo current]
  -[_DBAnalyticsChargeInfo .cxx_destruct]
  -[_DBAnalyticsChargeInfo setCurrent:]
  -[_DBAnalyticsChargeInfo voltage]
  -[_DBAnalyticsChargeInfo setVoltage:]
  -[_DBAnalyticsChargeInfo isWireless]
  -[_DBAnalyticsChargeInfo setWireless:]
  -[_DBAnalyticsChargeInfo didChargeDuringSession]
  -[_DBAnalyticsChargeInfo setDidChargeDuringSession:]
  -[_DBAnalyticsChargeInfo adapterDescription]
  -[_DBAnalyticsChargeInfo setAdapterDescription:]
  -[_DBAnalyticsChargeInfo PMUConfiguration]
  -[_DBAnalyticsChargeInfo setPMUConfiguration:]
  -[_DBAnalyticsChargeInfo wattage]
  -[_DBAnalyticsChargeInfo setWattage:]


DBMapsNavigationWidgetViewController : DBWidgetSceneViewController
  // instance methods
  -[DBMapsNavigationWidgetViewController sceneID]
  -[DBMapsNavigationWidgetViewController widgetStyle]
  -[DBMapsNavigationWidgetViewController prepareLoadingViewAnimated:]


DBApplicationInfo : FBSApplicationInfo
 @property  CRCarPlayAppDeclaration *carPlayDeclaration
 @property  BOOL linkedOnOrAfterYukon
 @property  BOOL presentsUnderStatusBar
 @property  BOOL presentsFullScreen
 @property  BOOL supportsDashboardNavigation
 @property  BOOL supportsInstrumentClusterNavigation
 @property  BOOL requiresBackgroundURLDelivery
 @property  BOOL hidden
 @property  BOOL carInternal
 @property  BOOL carPrototype
 @property  BOOL internal
 @property  BOOL firstParty
 @property  BOOL placeholder
 @property  BOOL installed
 @property  BOOL valid
 @property  BOOL certificationApp
 @property  NSArray *requiresFeatureFlags

  // instance methods
  -[DBApplicationInfo isFirstParty]
  -[DBApplicationInfo isInstalled]
  -[DBApplicationInfo isInternal]
  -[DBApplicationInfo isPlaceholder]
  -[DBApplicationInfo isValid]
  -[DBApplicationInfo .cxx_destruct]
  -[DBApplicationInfo carPlayDeclaration]
  -[DBApplicationInfo isHidden]
  -[DBApplicationInfo displayName]
  -[DBApplicationInfo _loadFromProxy:]
  -[DBApplicationInfo isEqual:]
  -[DBApplicationInfo presentsFullScreen]
  -[DBApplicationInfo presentsUnderStatusBar]
  -[DBApplicationInfo isLinkedOnOrAfterYukon]
  -[DBApplicationInfo supportsDashboardNavigation]
  -[DBApplicationInfo supportsInstrumentClusterNavigation]
  -[DBApplicationInfo requiresBackgroundURLDelivery]
  -[DBApplicationInfo isCarInternal]
  -[DBApplicationInfo isCarPrototype]
  -[DBApplicationInfo isCertificationApp]
  -[DBApplicationInfo requiresFeatureFlags]


DBIconModel : SBHIconModel
 @property  <DBIconModelApplicationDataSource> *carApplicationDataSource
 @property  NSArray *metadata_hiddenBundleIdentifiers
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} metadata_screenBounds
 @property  BOOL metadata_showsOEMIcon
 @property  NSString *metadata_OEMIconLabel
 @property  BOOL current_isSet
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} current_screenBounds
 @property  BOOL current_showsOEMIcon
 @property  NSString *current_OEMIconLabel
 @property  unsigned long current_statusBarEdge
 @property  unsigned long interactionAffordances
 @property  NSArray *hiddenBundleIdentifiers
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} screenBounds
 @property  {CGSize=dd} iconImageSize
 @property  <DBEnvironment> *environment
 @property  unsigned long rowCount
 @property  unsigned long columnCount
 @property  BOOL showsOEMIcon
 @property  NSString *OEMIconLabel

  // instance methods
  -[DBIconModel current_OEMIconLabel]
  -[DBIconModel iconImageSize]
  -[DBIconModel setCurrent_isSet:]
  -[DBIconModel importState:]
  -[DBIconModel rowCount]
  -[DBIconModel showsOEMIcon]
  -[DBIconModel loadAllIcons]
  -[DBIconModel isIconVisible:]
  -[DBIconModel didUnarchiveMetadata:]
  -[DBIconModel setCurrent_statusBarEdge:]
  -[DBIconModel supportsDock]
  -[DBIconModel setIconImageSize:]
  -[DBIconModel iconModelMetadata]
  -[DBIconModel carApplicationDataSource]
  -[DBIconModel setMetadata_hiddenBundleIdentifiers:]
  -[DBIconModel setMetadata_OEMIconLabel:]
  -[DBIconModel setMetadata_screenBounds:]
  -[DBIconModel columnCount]
  -[DBIconModel setCurrent_screenBounds:]
  -[DBIconModel setCarApplicationDataSource:]
  -[DBIconModel screenBounds]
  -[DBIconModel setCurrent_OEMIconLabel:]
  -[DBIconModel setInteractionAffordances:]
  -[DBIconModel .cxx_destruct]
  -[DBIconModel current_screenBounds]
  -[DBIconModel current_showsOEMIcon]
  -[DBIconModel setCurrent_showsOEMIcon:]
  -[DBIconModel analyticsIconRepresentation]
  -[DBIconModel current_statusBarEdge]
  -[DBIconModel exportIconLayoutState]
  -[DBIconModel interactionAffordances]
  -[DBIconModel exportStateForCarKit]
  -[DBIconModel metadata_showsOEMIcon]
  -[DBIconModel OEMIconLabel]
  -[DBIconModel _showInternalApps]
  -[DBIconModel initWithStore:carApplicationDataSource:]
  -[DBIconModel setMetadata_showsOEMIcon:]
  -[DBIconModel current_isSet]
  -[DBIconModel _showPrototypeApps]
  -[DBIconModel metadata_OEMIconLabel]
  -[DBIconModel metadata_hiddenBundleIdentifiers]
  -[DBIconModel setEnvironment:]
  -[DBIconModel hiddenBundleIdentifiers]
  -[DBIconModel environment]
  -[DBIconModel _importStateWithoutLayout:]
  -[DBIconModel resetCurrentIconState]
  -[DBIconModel metadata_screenBounds]


DBHomeManager : NSObject <DBHomeKitResourceProvider, HMHomeManagerDelegate>
 @property  DBLocationManager *locationManager
 @property  DBNetworkPathMonitor *networkPathMonitor
 @property  HMHomeManager *homeManager
 @property  HMFLocationAuthorization *homeLocationAuthorization
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSDictionary *homes
 @property  CARObserverHashTable *observers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBHomeManager homes]
  -[DBHomeManager homeManagerDidUpdateHomes:]
  -[DBHomeManager workQueue]
  -[DBHomeManager addObserver:]
  -[DBHomeManager setWorkQueue:]
  -[DBHomeManager dealloc]
  -[DBHomeManager .cxx_destruct]
  -[DBHomeManager homeManager]
  -[DBHomeManager locationManager]
  -[DBHomeManager setObservers:]
  -[DBHomeManager networkPathMonitor]
  -[DBHomeManager setNetworkPathMonitor:]
  -[DBHomeManager setHomeManager:]
  -[DBHomeManager setLocationManager:]
  -[DBHomeManager removeObserver:]
  -[DBHomeManager init]
  -[DBHomeManager observers]
  -[DBHomeManager setHomes:]
  -[DBHomeManager _authorizeHomeManager]
  -[DBHomeManager _setupHomeManager]
  -[DBHomeManager homeLocationAuthorization]
  -[DBHomeManager setHomeLocationAuthorization:]


DBIconModelStore : SBIconModelPropertyListFileStore
 @property  NSString *vehicleId

  // instance methods
  -[DBIconModelStore initWithVehicleId:]
  -[DBIconModelStore saveDesiredIconState:error:]
  -[DBIconModelStore .cxx_destruct]
  -[DBIconModelStore vehicleId]
  -[DBIconModelStore _iconListsByFlatteningPages:]
  -[DBIconModelStore loadCurrentIconState:]
  -[DBIconModelStore saveCurrentIconState:error:]


DBBooksLeafIconDataSource : DBLeafIconDataSource

DBDashboardWorkspaceOwner : NSObject <DBAppAlertPresenting, BSInvalidatable, DBEventHandling, DBWorkspaceOwner>
 @property  <DBEnvironment> *environment
 @property  DBWorkspace *workspace
 @property  <DBNotificationSuspending> *notificationSuspender
 @property  DBUserAlertServer *userAlertServer
 @property  NSString *activeBaseApplicationBundleID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBDashboardWorkspaceOwner .cxx_destruct]
  -[DBDashboardWorkspaceOwner setWorkspace:]
  -[DBDashboardWorkspaceOwner handleEvent:]
  -[DBDashboardWorkspaceOwner invalidate]
  -[DBDashboardWorkspaceOwner setEnvironment:]
  -[DBDashboardWorkspaceOwner workspace]
  -[DBDashboardWorkspaceOwner environment]
  -[DBDashboardWorkspaceOwner alertServer:wantsAppPresentationForViewController:bundleID:]
  -[DBDashboardWorkspaceOwner alertServer:wantsAppDismissalForViewController:bundleID:]
  -[DBDashboardWorkspaceOwner userAlertServer]
  -[DBDashboardWorkspaceOwner setUserAlertServer:]
  -[DBDashboardWorkspaceOwner session:policyForRequest:]
  -[DBDashboardWorkspaceOwner session:handleStateChangeRequest:]
  -[DBDashboardWorkspaceOwner workspace:didBeginStateChangeSession:]
  -[DBDashboardWorkspaceOwner workspace:didEndStateChangeSession:]
  -[DBDashboardWorkspaceOwner initWithStateResolver:environment:rootViewController:siriViewController:]
  -[DBDashboardWorkspaceOwner activeBaseApplicationBundleID]
  -[DBDashboardWorkspaceOwner _existingViewControllerForEntity:]
  -[DBDashboardWorkspaceOwner _newViewControllerForEntity:changeItem:completion:]
  -[DBDashboardWorkspaceOwner _updateViewControllerForEntity:changeItem:oldEntity:completion:]
  -[DBDashboardWorkspaceOwner _handleSuspendedActivationForEntity:changeItem:completion:]
  -[DBDashboardWorkspaceOwner notificationSuspender]
  -[DBDashboardWorkspaceOwner setNotificationSuspender:]


DBNowPlayingObserver : NSObject <CPUINowPlayingObserving>
 @property  DBApplicationInfo *nowPlayingApplicationInfo
 @property  BOOL playing
 @property  DBAppHistory *appHistory
 @property  <DBNowPlayingDelegate> *delegate
 @property  DBApplicationLaunchInfo *nowPlayingLaunchInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBNowPlayingObserver setDelegate:]
  -[DBNowPlayingObserver delegate]
  -[DBNowPlayingObserver .cxx_destruct]
  -[DBNowPlayingObserver isPlaying]
  -[DBNowPlayingObserver appHistory]
  -[DBNowPlayingObserver nowPlayingManager:didUpdateSnapshot:]
  -[DBNowPlayingObserver nowPlayingManager:didThrottleUpdateForBundleIdentifier:]
  -[DBNowPlayingObserver initWithAppHistory:]
  -[DBNowPlayingObserver nowPlayingLaunchInfo]
  -[DBNowPlayingObserver _isValidNowPlayingApplication:]
  -[DBNowPlayingObserver nowPlayingLaunchInfoWithSource:]
  -[DBNowPlayingObserver _nowPlayingDidChangeToBundleIdentifier:]
  -[DBNowPlayingObserver _updatePlaybackStateForBundleIdentifier:playing:]
  -[DBNowPlayingObserver nowPlayingApplicationInfo]
  -[DBNowPlayingObserver setNowPlayingApplicationInfo:]


DBFocusAssertion : NSObject
 @property  NSString *name
 @property  long long type
 @property  double priority
 @property  UIWindow *window
 @property  NSString *bundleID
 @property  int pid
 @property  FBScene *scene

  // instance methods
  -[DBFocusAssertion type]
  -[DBFocusAssertion window]
  -[DBFocusAssertion .cxx_destruct]
  -[DBFocusAssertion pid]
  -[DBFocusAssertion name]
  -[DBFocusAssertion priority]
  -[DBFocusAssertion bundleID]
  -[DBFocusAssertion scene]
  -[DBFocusAssertion initWithName:type:priority:window:application:pid:scene:]


DBFocusController : NSObject
 @property  UIScreen *screen
 @property  NSString *displayID
 @property  NSMutableArray *assertions
 @property  DBFocusAssertion *lastFocusAssertion
 @property  UIWindow *focusWindow
 @property  <BSInvalidatable> *focusDeferral

  // instance methods
  -[DBFocusController displayID]
  -[DBFocusController setDisplayID:]
  -[DBFocusController assertions]
  -[DBFocusController dealloc]
  -[DBFocusController focusDeferral]
  -[DBFocusController screen]
  -[DBFocusController .cxx_destruct]
  -[DBFocusController focusWindow]
  -[DBFocusController initWithScreen:]
  -[DBFocusController setAssertions:]
  -[DBFocusController invalidate]
  -[DBFocusController setFocusWindow:]
  -[DBFocusController setScreen:]
  -[DBFocusController takeWithPriority:reason:forWindow:bundleIdentifier:pid:scene:]
  -[DBFocusController takeWithPriority:reason:forWindow:bundleIdentifier:pid:scene:heading:focusedFrame:]
  -[DBFocusController dropReason:]
  -[DBFocusController dropReason:withHeading:focusedFrame:]
  -[DBFocusController focusedPid]
  -[DBFocusController _updateEventFocusWithHeading:focusedFrame:]
  -[DBFocusController _applyAssertion:withHeading:focusedFrame:]
  -[DBFocusController lastFocusAssertion]
  -[DBFocusController setLastFocusAssertion:]
  -[DBFocusController setFocusDeferral:]


DBThermalMonitor : NSObject
 @property  BOOL thermalBlocked
 @property  int hotToken
 @property  unsigned long hotLevel
 @property  int coldToken
 @property  unsigned long coldLevel
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSHashTable *observers
 @property  long long level

  // instance methods
  -[DBThermalMonitor setCallbackQueue:]
  -[DBThermalMonitor addObserver:]
  -[DBThermalMonitor callbackQueue]
  -[DBThermalMonitor dealloc]
  -[DBThermalMonitor .cxx_destruct]
  -[DBThermalMonitor isThermalBlocked]
  -[DBThermalMonitor setObservers:]
  -[DBThermalMonitor setQueue:]
  -[DBThermalMonitor queue]
  -[DBThermalMonitor removeObserver:]
  -[DBThermalMonitor level]
  -[DBThermalMonitor init]
  -[DBThermalMonitor observers]
  -[DBThermalMonitor _startListeningForThermalEvents]
  -[DBThermalMonitor _queue_respondToCurrentThermalCondition]
  -[DBThermalMonitor setThermalBlocked:]
  -[DBThermalMonitor hotToken]
  -[DBThermalMonitor setHotToken:]
  -[DBThermalMonitor hotLevel]
  -[DBThermalMonitor setHotLevel:]
  -[DBThermalMonitor coldToken]
  -[DBThermalMonitor setColdToken:]
  -[DBThermalMonitor coldLevel]
  -[DBThermalMonitor setColdLevel:]


DBOEMIcon : SBLeafIcon
  // instance methods
  -[DBOEMIcon initWithSessionConfiguration:]


DBDateFormatterToken : NSObject <NSCopying>
 @property  NSString *formatString
 @property  unsigned long dateStyle
 @property  unsigned long timeStyle

  // class methods
  +[DBDateFormatterToken tokenWithFormatString:]
  +[DBDateFormatterToken tokenWithDateStyle:timeStyle:]

  // instance methods
  -[DBDateFormatterToken setFormatString:]
  -[DBDateFormatterToken formatString]
  -[DBDateFormatterToken .cxx_destruct]
  -[DBDateFormatterToken copyWithZone:]
  -[DBDateFormatterToken isEqual:]
  -[DBDateFormatterToken setDateStyle:]
  -[DBDateFormatterToken setTimeStyle:]
  -[DBDateFormatterToken dateStyle]
  -[DBDateFormatterToken timeStyle]


DBDateFormatter : NSObject
  // class methods
  +[DBDateFormatter dateFormatters]
  +[DBDateFormatter dateFormatterForToken:]
  +[DBDateFormatter _dateFormatterFromToken:]
  +[DBDateFormatter dateIntervalFormatters]
  +[DBDateFormatter dateIntervalFormatterForToken:]
  +[DBDateFormatter _dateIntervalFormatterFromToken:]
  +[DBDateFormatter formattedNow]
  +[DBDateFormatter formattedDate:]
  +[DBDateFormatter formattedDateTimeStamp:]
  +[DBDateFormatter formattedTime:]
  +[DBDateFormatter formattedTimeStamp:]
  +[DBDateFormatter _formatDate:withToken:]
  +[DBDateFormatter formattedRangeStart:end:]
  +[DBDateFormatter formattedRangeDateTimeStampStart:end:]
  +[DBDateFormatter formattedRangeTimestampStart:end:]
  +[DBDateFormatter formattedRange:]
  +[DBDateFormatter formattedRangeDateTimestamp:]
  +[DBDateFormatter formattedRangeTimestamp:]
  +[DBDateFormatter _formatIntervalFromDate:toDate:withToken:]


DBIconImageCache : NSObject
  // class methods
  +[DBIconImageCache _iconImageCache]
  +[DBIconImageCache _imageKeyForBundleIdentifier:inVehicle:]

  // instance methods
  -[DBIconImageCache iconImageForBundleIdentifier:inVehicle:]
  -[DBIconImageCache setIconImage:forBundleIdentifier:inVehicle:]


DBWidgetContainerViewController : UIViewController <DBSmartWidgetAnimating, BSInvalidatable, DBWidgetSizeManaging>
 @property  <DBEnvironment> *environment
 @property  DBNowPlayingWidgetViewController *nowPlayingWidgetController
 @property  DBInCallWidgetViewController *inCallWidgetController
 @property  DBSmartWidgetViewController *smartWidgetController
 @property  DBWidgetStackViewController *primaryWidgetStackViewController
 @property  DBWidgetStackViewController *secondaryWidgetStackViewController
 @property  NSArray *sceneWidgetControllers
 @property  NSArray *currentConstraints
 @property  NSArray *landscapePortraitConstraints
 @property  NSArray *squareConstraints
 @property  DBSmartWidgetEngine *engine
 @property  NSMutableSet *smartWidgetChangeVisibilityDisabledRequesters
 @property  BOOL initialConstraintsSetup
 @property  unsigned long layoutType
 @property  BOOL smartWidgetHidden
 @property  BOOL inCallWidgetHidden
 @property  BOOL sceneWidgetsEnabled
 @property  BOOL sceneWidgetsForeground
 @property  BOOL sceneWidgetsActive
 @property  BOOL hasActiveNavigation
 @property  DBMapsWidgetViewController *mapsWidgetController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DBWidgetContainerViewController currentConstraints]
  -[DBWidgetContainerViewController setLayoutType:]
  -[DBWidgetContainerViewController setCurrentConstraints:]
  -[DBWidgetContainerViewController setEngine:]
  -[DBWidgetContainerViewController engine]
  -[DBWidgetContainerViewController dealloc]
  -[DBWidgetContainerViewController .cxx_destruct]
  -[DBWidgetContainerViewController viewDidLoad]
  -[DBWidgetContainerViewController layoutType]
  -[DBWidgetContainerViewController viewDidLayoutSubviews]
  -[DBWidgetContainerViewController _callStatusChanged:]
  -[DBWidgetContainerViewController _setupConstraints]
  -[DBWidgetContainerViewController invalidate]
  -[DBWidgetContainerViewController setEnvironment:]
  -[DBWidgetContainerViewController environment]
  -[DBWidgetContainerViewController initWithEnvironment:animationManager:]
  -[DBWidgetContainerViewController linearFocusItems]
  -[DBWidgetContainerViewController invalidateConstraints]
  -[DBWidgetContainerViewController _reloadConstraints]
  -[DBWidgetContainerViewController animateSmartWidget:completion:]
  -[DBWidgetContainerViewController requestSizeChange]
  -[DBWidgetContainerViewController setInCallWidgetHidden:]
  -[DBWidgetContainerViewController setSceneWidgetsEnabled:]
  -[DBWidgetContainerViewController setSceneWidgetsForeground:]
  -[DBWidgetContainerViewController setSceneWidgetsActive:]
  -[DBWidgetContainerViewController setSmartWidgetCanChangeVisibilityDisabled:forRequester:]
  -[DBWidgetContainerViewController landscapePortraitConstraints]
  -[DBWidgetContainerViewController squareConstraints]
  -[DBWidgetContainerViewController _canChangeSmartWidgetVisible]
  -[DBWidgetContainerViewController _smartWidgetShouldBeHidden]
  -[DBWidgetContainerViewController _updateSmartWidgetVisibleIfNecessary]
  -[DBWidgetContainerViewController _smartWidgetHiddenDefaultChanged]
  -[DBWidgetContainerViewController _updateStackViewsWithUpdates:completion:]
  -[DBWidgetContainerViewController _updateMapWidgetSizes]
  -[DBWidgetContainerViewController setLandscapePortraitConstraints:]
  -[DBWidgetContainerViewController setSquareConstraints:]
  -[DBWidgetContainerViewController isSmartWidgetHidden]
  -[DBWidgetContainerViewController setSmartWidgetHidden:]
  -[DBWidgetContainerViewController isInCallWidgetHidden]
  -[DBWidgetContainerViewController sceneWidgetsEnabled]
  -[DBWidgetContainerViewController sceneWidgetsForeground]
  -[DBWidgetContainerViewController sceneWidgetsActive]
  -[DBWidgetContainerViewController hasActiveNavigation]
  -[DBWidgetContainerViewController setHasActiveNavigation:]
  -[DBWidgetContainerViewController mapsWidgetController]
  -[DBWidgetContainerViewController nowPlayingWidgetController]
  -[DBWidgetContainerViewController inCallWidgetController]
  -[DBWidgetContainerViewController smartWidgetController]
  -[DBWidgetContainerViewController primaryWidgetStackViewController]
  -[DBWidgetContainerViewController setPrimaryWidgetStackViewController:]
  -[DBWidgetContainerViewController secondaryWidgetStackViewController]
  -[DBWidgetContainerViewController setSecondaryWidgetStackViewController:]
  -[DBWidgetContainerViewController sceneWidgetControllers]
  -[DBWidgetContainerViewController setSceneWidgetControllers:]
  -[DBWidgetContainerViewController smartWidgetChangeVisibilityDisabledRequesters]
  -[DBWidgetContainerViewController setSmartWidgetChangeVisibilityDisabledRequesters:]
  -[DBWidgetContainerViewController initialConstraintsSetup]
  -[DBWidgetContainerViewController setInitialConstraintsSetup:]


DBHomeKitDoorStateCharacteristic : DBHomeKitCharacteristic
 @property  long long doorStateValue

  // class methods
  +[DBHomeKitDoorStateCharacteristic load]
  +[DBHomeKitDoorStateCharacteristic characteristicFormat]
  +[DBHomeKitDoorStateCharacteristic characteristicFormats]
  +[DBHomeKitDoorStateCharacteristic stringForDoorState:]

  // instance methods
  -[DBHomeKitDoorStateCharacteristic formatedValue]
  -[DBHomeKitDoorStateCharacteristic doorStateValue]
  -[DBHomeKitDoorStateCharacteristic setDoorStateValue:]


DBLayoutHelperView : UIView
 @property  <DBLayoutHelperViewDelegate> *layoutDelegate

  // instance methods
  -[DBLayoutHelperView setLayoutDelegate:]
  -[DBLayoutHelperView layoutDelegate]
  -[DBLayoutHelperView .cxx_destruct]
  -[DBLayoutHelperView layoutSubviews]
  -[DBLayoutHelperView init]


DashBoard : UISystemShellApplication <CRSAppHistoryDataProviding, CRSAppHistoryServiceDelegate, CRSIconLayoutServiceDelegate, FBSystemServiceDelegate>
 @property  DBDisplayManager *displayManager
 @property  CRSSessionService *sessionService
 @property  CRSIconLayoutService *iconLayoutService
 @property  NSMutableDictionary *iconLayoutDataProviders
 @property  DBAppHistory *appHistory
 @property  CRSAppHistoryService *appHistoryService
 @property  CRCarPlayAppPolicyEvaluator *appPolicyEvaluator
 @property  <BSInvalidatable> *processLaunchWatchdogMonitoringAssertion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DashBoard _newApplicationInitializationContext]
  +[DashBoard registerAsSystemApp]
  +[DashBoard _newApplicationLibrary]

  // instance methods
  -[DashBoard application:didFinishLaunchingWithOptions:]
  -[DashBoard disablesFrontBoardImplicitWindowScenes]
  -[DashBoard runTest:options:]
  -[DashBoard systemService:handleOpenApplicationRequest:withCompletion:]
  -[DashBoard _windowForSystemAppButtonEventsForScreen:]
  -[DashBoard _keyWindowForScreen:]
  -[DashBoard systemServiceApplicationInfoProvider:]
  -[DashBoard systemService:canActivateApplication:withResult:]
  -[DashBoard setIconLayoutDataProviders:]
  -[DashBoard handleDoubleHeightStatusBarTapWithStyleOverride:]
  -[DashBoard setDisplayManager:]
  -[DashBoard getUIContextStatesWithCompletion:]
  -[DashBoard appHistoryService]
  -[DashBoard setAppPolicyEvaluator:]
  -[DashBoard iconLayoutService]
  -[DashBoard appHistoryDataProviderForService:]
  -[DashBoard dealloc]
  -[DashBoard setSessionFeatureKeys:completion:]
  -[DashBoard .cxx_destruct]
  -[DashBoard setProcessLaunchWatchdogMonitoringAssertion:]
  -[DashBoard setSessionService:]
  -[DashBoard appPolicyEvaluator]
  -[DashBoard processLaunchWatchdogMonitoringAssertion]
  -[DashBoard getSessionFeatureKeysWithCompletion:]
  -[DashBoard appHistory]
  -[DashBoard getSessionUIContextStatesWithCompletion:]
  -[DashBoard sessionService]
  -[DashBoard setAppHistory:]
  -[DashBoard _hostsSystemStatusBar]
  -[DashBoard iconLayoutDataProviders]
  -[DashBoard _runSiriTest:testOptions:]
  -[DashBoard sharedApplicationLibrary]
  -[DashBoard displayManager]
  -[DashBoard setAppHistoryService:]
  -[DashBoard _currentAppHistory]
  -[DashBoard getSessionEchoContextStatesWithCompletion:]
  -[DashBoard _currentDashboard]
  -[DashBoard iconLayoutService:dataProviderForVehicleID:]
  -[DashBoard setIconLayoutService:]
  -[DashBoard init]


DBTodayViewController : UIViewController <DBEnvironmentConfigurationObserving, DBLayoutHelperViewDelegate, DBNavigationStateObserving, BSInvalidatable, DBProcessMonitorObserving, SBHLegibility>
 @property  <DBEnvironment> *environment
 @property  DBMapsNavigationWidgetViewController *mapsNavigationWidgetController
 @property  DBWidgetContainerViewController *widgetContainerViewController
 @property  unsigned long currentLayoutType
 @property  NSArray *currentConstraints
 @property  NSArray *landscapeConstraints
 @property  NSArray *squareConstraints
 @property  NSArray *portraitConstraints
 @property  NSLayoutConstraint *landscapeContainerWidthConstraint
 @property  NSLayoutConstraint *squareContainerHeightConstraint
 @property  DBTodayViewSynchronizedAnimationManager *animationManager
 @property  NSMutableSet *sceneWidgetsDisabledRequesters
 @property  DBLayoutHelperView *layoutHelperView
 @property  NSString *navigationWidgetBundleIdentifier
 @property  unsigned long preferredFocusHeading
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UILegibilitySettings *legibilitySettings

  // class methods
  +[DBTodayViewController isEnabledAndSupportedForIconProvider:]

  // instance methods
  -[DBTodayViewController _layout]
  -[DBTodayViewController currentConstraints]
  -[DBTodayViewController initWithEnvironment:]
  -[DBTodayViewController setCurrentConstraints:]
  -[DBTodayViewController setForeground:]
  -[DBTodayViewController viewDidAppear:]
  -[DBTodayViewController .cxx_destruct]
  -[DBTodayViewController viewDidLoad]
  -[DBTodayViewController setActive:]
  -[DBTodayViewController setLegibilitySettings:]
  -[DBTodayViewController portraitConstraints]
  -[DBTodayViewController preferredFocusEnvironments]
  -[DBTodayViewController invalidate]
  -[DBTodayViewController setEnvironment:]
  -[DBTodayViewController landscapeConstraints]
  -[DBTodayViewController environment]
  -[DBTodayViewController legibilitySettings]
  -[DBTodayViewController setPortraitConstraints:]
  -[DBTodayViewController setLandscapeConstraints:]
  -[DBTodayViewController preferredFocusHeading]
  -[DBTodayViewController animationManager]
  -[DBTodayViewController setAnimationManager:]
  -[DBTodayViewController didChangeLayout:]
  -[DBTodayViewController layoutHelperView]
  -[DBTodayViewController processMonitor:shouldHandleDeathOfBundleIdentifier:isCrash:]
  -[DBTodayViewController processMonitor:didHandleDeathOfBundleIdentifier:]
  -[DBTodayViewController linearFocusItems]
  -[DBTodayViewController navigationStateProvider:navigatingIdentifiersDidChange:]
  -[DBTodayViewController navigationStateProvider:frontmostIdentifierDidChange:]
  -[DBTodayViewController setSmartWidgetCanChangeVisibilityDisabled:forRequester:]
  -[DBTodayViewController squareConstraints]
  -[DBTodayViewController setSquareConstraints:]
  -[DBTodayViewController setSceneWidgetsDisabled:forRequester:]
  -[DBTodayViewController navigationWidgetBundleIdentifier]
  -[DBTodayViewController reloadConstraints]
  -[DBTodayViewController _updateNavigationWidgetsForIdentifier:]
  -[DBTodayViewController setPreferredFocusHeading:]
  -[DBTodayViewController mapsNavigationWidgetController]
  -[DBTodayViewController setMapsNavigationWidgetController:]
  -[DBTodayViewController widgetContainerViewController]
  -[DBTodayViewController setWidgetContainerViewController:]
  -[DBTodayViewController currentLayoutType]
  -[DBTodayViewController setCurrentLayoutType:]
  -[DBTodayViewController landscapeContainerWidthConstraint]
  -[DBTodayViewController setLandscapeContainerWidthConstraint:]
  -[DBTodayViewController squareContainerHeightConstraint]
  -[DBTodayViewController setSquareContainerHeightConstraint:]
  -[DBTodayViewController sceneWidgetsDisabledRequesters]
  -[DBTodayViewController setSceneWidgetsDisabledRequesters:]
  -[DBTodayViewController setLayoutHelperView:]
  -[DBTodayViewController setNavigationWidgetBundleIdentifier:]


DBHomeKitCharacteristicTypes : NSObject
  // class methods
  +[DBHomeKitCharacteristicTypes characteristicTypeByName]
  +[DBHomeKitCharacteristicTypes characteristicNameByType]
  +[DBHomeKitCharacteristicTypes characteristicNameForType:]


_TtC9DashBoard22DBDashboardPlatterView : UIView
 @property  double platterCornerRadius

  // instance methods
  -[_TtC9DashBoard22DBDashboardPlatterView .cxx_destruct]
  -[_TtC9DashBoard22DBDashboardPlatterView initWithFrame:]
  -[_TtC9DashBoard22DBDashboardPlatterView traitCollectionDidChange:]
  -[_TtC9DashBoard22DBDashboardPlatterView initWithCoder:]
  -[_TtC9DashBoard22DBDashboardPlatterView platterCornerRadius]
  -[_TtC9DashBoard22DBDashboardPlatterView setPlatterCornerRadius:]
  -[_TtC9DashBoard22DBDashboardPlatterView initWithWallpaperPreferences:]


_TtC9DashBoard22DBDashboardDimmingView : UIView
 @property  double cornerRadius
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentFrame

  // instance methods
  -[_TtC9DashBoard22DBDashboardDimmingView contentFrame]
  -[_TtC9DashBoard22DBDashboardDimmingView setContentFrame:]
  -[_TtC9DashBoard22DBDashboardDimmingView .cxx_destruct]
  -[_TtC9DashBoard22DBDashboardDimmingView setCornerRadius:]
  -[_TtC9DashBoard22DBDashboardDimmingView cornerRadius]
  -[_TtC9DashBoard22DBDashboardDimmingView initWithFrame:]
  -[_TtC9DashBoard22DBDashboardDimmingView traitCollectionDidChange:]
  -[_TtC9DashBoard22DBDashboardDimmingView initWithCoder:]


INIntent(DBSmartWidget)
	// instance methods
	-[INIntent(DBSmartWidget) car_people]
	-[INIntent(DBSmartWidget) car_action]
	-[INIntent(DBSmartWidget) car_valid]

INSendMessageIntent(DBSmartWidget)
	// instance methods
	-[INSendMessageIntent(DBSmartWidget) car_people]
	-[INSendMessageIntent(DBSmartWidget) car_action]
	-[INSendMessageIntent(DBSmartWidget) car_valid]

INStartAudioCallIntent(DBSmartWidget)
	// instance methods
	-[INStartAudioCallIntent(DBSmartWidget) car_people]
	-[INStartAudioCallIntent(DBSmartWidget) car_action]
	-[INStartAudioCallIntent(DBSmartWidget) car_valid]

INStartCallIntent(DBSmartWidget)
	// instance methods
	-[INStartCallIntent(DBSmartWidget) car_people]
	-[INStartCallIntent(DBSmartWidget) car_action]
	-[INStartCallIntent(DBSmartWidget) car_valid]

(DBAdditions)
	// instance methods
	-[(DBAdditions) db_firstObjectPassingTest:]
	-[(DBAdditions) db_map:]
	-[(DBAdditions) db_filter:]

<DEREK BUG Categories!>(DBAdditions)
	// instance methods
	-[<DEREK BUG Categories!>(DBAdditions) db_mutatingMap:]
	-[<DEREK BUG Categories!>(DBAdditions) db_removeFirstObjectIfMatching:]
	-[<DEREK BUG Categories!>(DBAdditions) db_removeFirstObjectsIfMatching:]

SBHIconStateArchiver(DBAdditions)
	// class methods
	+[SBHIconStateArchiver(DBAdditions) carKitRepresentationFromRootArchive:iconModel:]
	+[SBHIconStateArchiver(DBAdditions) rootArchiveFromCarKitRepresentation:iconModel:]

UIColor(DBUtilities)
	// instance methods
	-[UIColor(DBUtilities) undynamicColor]

(DBAnalytics)
	// instance methods
	-[(DBAnalytics) DBSecondsToDate:]

CARSession(Analytics)
	// instance methods
	-[CARSession(Analytics) analytics_dictionaryRepresentationWithVehicle:]

FBSBundleInfo(CarPlayApp)
	// instance methods
	-[FBSBundleInfo(CarPlayApp) _iconKeyForFormat:]
	-[FBSBundleInfo(CarPlayApp) iconWithFormat:]

EKEvent(DBAdditions)
	// instance methods
	-[EKEvent(DBAdditions) db_ShortDescription]

01 00 0100 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFConnection 
01 00 0100 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFPreferences 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDEventDeferringToken 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDEventDeliveryManager 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDEventDescriptor 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDEventDiscreteDispatchingRule 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDEventDispatchingTarget 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDEventDisplay 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDEventKeyboardDescriptor 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSMutableHIDEventDeferringPredicate 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSMutableHIDEventDeferringTarget 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSMutableHIDEventDiscreteDispatchingPredicate 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSTouchDeliveryPolicy 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSTouchDeliveryPolicyAssertion 
01 00 0600 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMCarPlayEvent 
01 00 0600 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMStreams 
01 00 0400 /System/Library/PrivateFrameworks/BannerKit.framework/BannerKit: BNBannerController 
01 00 0400 /System/Library/PrivateFrameworks/BannerKit.framework/BannerKit: BNBannerHostMonitor 
01 00 0400 /System/Library/PrivateFrameworks/BannerKit.framework/BannerKit: BNBannerSourceApplicationStarkSceneSpecification 
01 00 0400 /System/Library/PrivateFrameworks/BannerKit.framework/BannerKit: BNBannerSourceLayoutDescription 
01 00 0400 /System/Library/PrivateFrameworks/BannerKit.framework/BannerKit: BNBannerSourceListener 
01 00 0400 /System/Library/PrivateFrameworks/BannerKit.framework/BannerKit: BNContentViewController 
01 00 0400 /System/Library/PrivateFrameworks/BannerKit.framework/BannerKit: BNPresentableIdentification 
01 00 3c00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSAnimationSettings 
01 00 3c00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDateFormatterCache 
01 00 3c00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDescriptionBuilder 
01 00 3c00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSProcessHandle 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSServiceConnectionEndpoint 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSServiceConnectionEndpointInjector 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSServicesConfiguration 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIAnimationFactory 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIMappedImageCache 
01 00 3b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 3b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 3b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 3b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 3b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0800 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARActiveNavigationIdentifiersObserver 
01 00 0800 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARAutomaticDNDStatus 
01 00 0800 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARObserverHashTable 
01 00 0800 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARPrototypeBoolPref 
01 00 0800 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARPrototypePref 
01 00 0800 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARSession 
01 00 0800 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARSessionConfiguration 
01 00 0800 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARSessionStatus 
01 00 3b00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 3900 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 3900 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIFilter 
01 00 3900 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 1000 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLCircularRegion 
01 00 1000 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 1000 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0e00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarViewController 
01 00 0e00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarViewControllerSettings 
01 00 0a00 /System/Library/PrivateFrameworks/CarPlaySupport.framework/CarPlaySupport: CPSMultilineLabel 
01 00 0b00 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUIBannerTransitioningDelegate 
01 00 0b00 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUIMediaButton 
01 00 0b00 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUINowPlayingManager 
01 00 0b00 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUINowPlayingSnapshot 
01 00 0b00 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUIPassthroughView 
01 00 0b00 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUIProgressView 
01 00 0800 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CRCarPlayAppDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CRCarPlayAppDenylist 
01 00 0800 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CRCarPlayAppPolicyEvaluator 
01 00 0800 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CRCarPlayCapabilities 
01 00 0800 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CRPairedVehicleManager 
01 00 0900 /System/Library/PrivateFrameworks/CarPlayServices.framework/CarPlayServices: CRSAppHistoryController 
01 00 0900 /System/Library/PrivateFrameworks/CarPlayServices.framework/CarPlayServices: CRSAppHistoryService 
01 00 0900 /System/Library/PrivateFrameworks/CarPlayServices.framework/CarPlayServices: CRSApplicationIcon 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSDashboardFocusableItem 
01 00 0900 /System/Library/PrivateFrameworks/CarPlayServices.framework/CarPlayServices: CRSIconLayoutPage 
01 00 0900 /System/Library/PrivateFrameworks/CarPlayServices.framework/CarPlayServices: CRSIconLayoutService 
01 00 0900 /System/Library/PrivateFrameworks/CarPlayServices.framework/CarPlayServices: CRSIconLayoutState 
01 00 0900 /System/Library/PrivateFrameworks/CarPlayServices.framework/CarPlayServices: CRSInCallAssertionService 
01 00 0900 /System/Library/PrivateFrameworks/CarPlayServices.framework/CarPlayServices: CRSSessionService 
01 00 0900 /System/Library/PrivateFrameworks/CarPlayServices.framework/CarPlayServices: CRSSiriPreferences 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIApplicationSceneSettings 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIApplicationSceneSpecification 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIClusterZoomAction 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIDashboardWidgetSceneSettings 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIDashboardWidgetSceneSpecification 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIInstrumentClusterSceneSettings 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIInstrumentClusterSceneSpecification 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIMutableApplicationSceneSettings 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIMutableWallpaperSceneSettings 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIProxyApplicationSceneSettings 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIProxyApplicationSceneSpecification 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIStatusBarStyleService 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUITemplateDashboardWidgetSceneSettings 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUITemplateDashboardWidgetSceneSpecification 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUITemplateInstrumentClusterSceneSpecification 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIWallpaperPreferences 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIWallpaperSceneSettings 
01 00 0c00 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIWallpaperSceneSpecification 
01 00 2f00 /System/Library/PrivateFrameworks/CoreWiFi.framework/CoreWiFi: CWFInterface 
01 00 1300 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDStateService 
01 00 1400 /System/Library/Frameworks/EventKit.framework/EventKit: EKCalendarVisibilityManager 
01 00 1400 /System/Library/Frameworks/EventKit.framework/EventKit: EKEvent 
01 00 1400 /System/Library/Frameworks/EventKit.framework/EventKit: EKEventStore 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBApplicationProcessLaunchTransaction 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBApplicationUpdateScenesTransaction 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBDisplayManager 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBLocalSynchronousSceneClientProvider 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBMutableProcessExecutionContext 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSApplicationDataStore 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSApplicationDataStoreMonitor 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSApplicationInfo 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSApplicationLibrary 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSApplicationLibraryConfiguration 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSApplicationPlaceholder 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSBundleInfo 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSDisplayLayoutElement 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSDisplayLayoutMonitor 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSDisplayLayoutMonitorConfiguration 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSDisplayLayoutPublisher 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSDisplayLayoutPublisherConfiguration 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSMutableSceneDefinition 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSMutableSceneParameters 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSOpenApplicationService 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSSceneClientIdentity 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSSceneIdentity 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSceneManager 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSystemService 
01 00 1500 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSystemShell 
01 00 1700 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOCountryConfiguration 
01 00 1900 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCharacteristicBatchRequest 
01 00 1900 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCharacteristicWriteRequest 
01 00 1800 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFLocationAuthorization 
01 00 1900 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMHomeManager 
01 00 1900 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMMutableHomeManagerConfiguration 
01 00 1a00 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: IFImage 
01 00 1b00 /System/Library/Frameworks/Intents.framework/Intents: INIntent 
01 00 1b00 /System/Library/Frameworks/Intents.framework/Intents: INSendMessageIntent 
01 00 1b00 /System/Library/Frameworks/Intents.framework/Intents: INStartAudioCallIntent 
01 00 1b00 /System/Library/Frameworks/Intents.framework/Intents: INStartCallIntent 
01 00 1a00 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISIcon 
01 00 1a00 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 1200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSAppLink 
01 00 1200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 1d00 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTMaterialView 
01 00 1d00 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTShadowView 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateIntervalFormatter 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 3600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 3800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 3500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 2000 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCreationRequest 
01 00 2000 /System/Library/Frameworks/Photos.framework/Photos: PHPhotoLibrary 
01 00 2100 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
01 00 2100 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentifier 
01 00 2100 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentity 
01 00 2100 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessMonitor 
01 00 2100 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessPredicate 
01 00 2100 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessStateDescriptor 
01 00 2100 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSTarget 
01 00 3400 /usr/lib/libMemoryResourceException.dylib: RMECacheEnumerator 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBCenterIconZoomAnimator 
01 00 2500 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFAnimationSettings 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBHCenterZoomSettings 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBHIconManager 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBHIconModel 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBHIconStateArchiver 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBIcon 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBIconListFlowLayout 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBIconListGridLayoutConfiguration 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBIconListPageControl 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBIconListView 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBIconModelPropertyListFileStore 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBIconPageIndicatorImageSetCache 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBIconScrollView 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBIconView 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBLeafIcon 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBRootFolderController 
01 00 2600 /System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome: SBRootFolderView 
01 00 2700 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSLockScreenService 
01 00 2700 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertConfigurationContext 
01 00 2700 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertDefinition 
01 00 2700 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertHandle 
01 00 2800 /System/Library/PrivateFrameworks/SystemStatus.framework/SystemStatus: STBatteryStatusDomain 
01 00 2800 /System/Library/PrivateFrameworks/SystemStatus.framework/SystemStatus: STCallingStatusDomain 
01 00 2800 /System/Library/PrivateFrameworks/SystemStatus.framework/SystemStatus: STMediaStatusDomain 
01 00 2800 /System/Library/PrivateFrameworks/SystemStatus.framework/SystemStatus: STTelephonyStatusDomain 
01 00 2800 /System/Library/PrivateFrameworks/SystemStatus.framework/SystemStatus: STWifiStatusDomain 
01 00 2300 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriDirectActionContext 
01 00 2300 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriDirectActionSource 
01 00 2300 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriDismissalOptions 
01 00 2300 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriLongPressButtonSource 
01 00 2400 /System/Library/PrivateFrameworks/SiriUIActivation.framework/SiriUIActivation: SiriPresentationViewController 
01 00 2300 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriTestingContext 
01 00 2300 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriTestingSource 
01 00 2900 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUCallCenter 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityContinuationAction 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneSettings 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneSpecification 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneTransitionContext 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationStarkSceneSpecification 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColorEffect 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropProposal 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusContainerGuide 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusMovementAction 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusSystem 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIOpenURLAction 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIRootSceneWindow 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIRootWindowScenePresentationBinder 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStatusBar_Modern 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeGestureRecognizer 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISystemShellApplication 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffect 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowScene 
01 00 2c00 /System/Library/PrivateFrameworks/UserNotificationsSettings.framework/UserNotificationsSettings: UNNotificationSettingsCenter 
01 00 2b00 /System/Library/PrivateFrameworks/UserAlerts.framework/UserAlerts: URTAlertService 
01 00 1200 /System/Library/Frameworks/CoreServices.framework/CoreServices: _LSOpenConfiguration 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFocusLinearMovementSequence 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFocusMovementInfo 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettings 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISystemGestureManager 
01 00 2a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIViewControllerOneToOneTransitionContext 
