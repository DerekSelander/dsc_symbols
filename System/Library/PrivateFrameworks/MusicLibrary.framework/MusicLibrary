|| __DATA.__objc_data _OBJC_CLASS_$_MIPAlbum
|| __DATA.__objc_data _OBJC_CLASS_$_MIPArtist
|| __DATA.__objc_data _OBJC_CLASS_$_MIPAudiobook
|| __DATA.__objc_data _OBJC_CLASS_$_MIPGenre
|| __DATA.__objc_data _OBJC_CLASS_$_MIPLibraryIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_MIPMediaItem
|| __DATA.__objc_data _OBJC_CLASS_$_MIPMovie
|| __DATA.__objc_data _OBJC_CLASS_$_MIPMultiverseIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_MIPPlaybackInfo
|| __DATA.__objc_data _OBJC_CLASS_$_MIPPlaylist
|| __DATA.__objc_data _OBJC_CLASS_$_MIPPodcast
|| __DATA.__objc_data _OBJC_CLASS_$_MIPSeries
|| __DATA.__objc_data _OBJC_CLASS_$_MIPSmartPlaylistInfo
|| __DATA.__objc_data _OBJC_CLASS_$_MIPSong
|| __DATA.__objc_data _OBJC_CLASS_$_MIPTVShow
|| __DATA.__objc_data _OBJC_CLASS_$_ML3Account
|| __DATA.__objc_data _OBJC_CLASS_$_ML3AccountCacheDatabase
|| __DATA.__objc_data _OBJC_CLASS_$_ML3AccountStore
|| __DATA.__objc_data _OBJC_CLASS_$_ML3AccountTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3AlbumArtistTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3AlbumTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ArtistTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ArtworkTokenSet
|| __DATA.__objc_data _OBJC_CLASS_$_ML3BaseLocation
|| __DATA.__objc_data _OBJC_CLASS_$_ML3BitMaskPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_ML3Booklet
|| __DATA.__objc_data _OBJC_CLASS_$_ML3BulkStatementExecutionOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ChapterTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ClientImportItem
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ClientImportResult
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ClientImportServiceSession
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ClientImportSession
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ClientImportSessionConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ML3CloudKVSTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ComposerTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ConditionalPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ContainerItem
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ContainerItemDiffMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ContainerItemDiffOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ContainerItemPerson
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ContainerItemPersonTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ContainerItemTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ContainerSeedTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ContainerTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ContainmentPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ContainsPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_ML3DatabaseBlob
|| __DATA.__objc_data _OBJC_CLASS_$_ML3DatabaseColumn
|| __DATA.__objc_data _OBJC_CLASS_$_ML3DatabaseException
|| __DATA.__objc_data _OBJC_CLASS_$_ML3DatabaseForeignKeyConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_ML3DatabaseMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_ML3DatabaseModule
|| __DATA.__objc_data _OBJC_CLASS_$_ML3DatabaseOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ML3DatabaseRecoveryOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ML3DatabaseTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ExportItem
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ExportSession
|| __DATA.__objc_data _OBJC_CLASS_$_ML3GenreTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ImportOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ItemExtraTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ItemKVSTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ItemPlaybackTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ItemSearchTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ItemStatsTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ItemStoreTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ItemTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ItemVideoTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3LyricsTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3MaintenanceTasksOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ML3MigrationAddedColumn
|| __DATA.__objc_data _OBJC_CLASS_$_ML3MigrationDirectives
|| __DATA.__objc_data _OBJC_CLASS_$_ML3MigrationMisgroupedAlbum
|| __DATA.__objc_data _OBJC_CLASS_$_ML3MigrationMisgroupedTrack
|| __DATA.__objc_data _OBJC_CLASS_$_ML3MutableDatabaseTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3PersistentIDsPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_ML3Person
|| __DATA.__objc_data _OBJC_CLASS_$_ML3PersonTable
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ProcessClient
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ProcessDownloadedAssetsOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ProtoSyncExportItem
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ProtoSyncExportSession
|| __DATA.__objc_data _OBJC_CLASS_$_ML3QuerySection
|| __DATA.__objc_data _OBJC_CLASS_$_ML3RemovePlaylistsOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ML3RemoveTracksOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ML3SearchStringPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_ML3ServiceDatabaseImport
|| __DATA.__objc_data _OBJC_CLASS_$_ML3SetValuesForPropertiesOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ML3SortMap
|| __DATA.__objc_data _OBJC_CLASS_$_ML3SpotlightMatchPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_ML3StatementAccumulator
|| __DATA.__objc_data _OBJC_CLASS_$_ML3StoreItemPlaylistData
|| __DATA.__objc_data _OBJC_CLASS_$_ML3StoreItemTrackData
|| __DATA.__objc_data _OBJC_CLASS_$_ML3StoreLink
|| __DATA.__objc_data _OBJC_CLASS_$_ML3TruthPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_ML3UpdateArtworkInterestDataOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ML3UpdateSiriIndexOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ML3UpdateSpotlightIndexOperation
|| __DATA.__objc_data _OBJC_CLASS_$_MLChapterTOC
|| __DATA.__objc_data _OBJC_CLASS_$_MLContentRating
|| __DATA.__objc_data _OBJC_CLASS_$_MLEQPreset
|| __DATA.__objc_data _OBJC_CLASS_$_MLException
|| __DATA.__objc_data _OBJC_CLASS_$_MLGeniusPlaylistController
|| __DATA.__objc_data _OBJC_CLASS_$_MLITChapterTOC
|| __DATA.__objc_data _OBJC_CLASS_$_MLMediaLibraryResourcesServiceClient
|| __DATA.__objc_data _OBJC_CLASS_$_MLMediaLibraryResourcesServiceServer
|| __DATA.__objc_data _OBJC_CLASS_$_MLMediaTypeCountedSet
|| __DATA.__objc_data _OBJC_CLASS_$_MLMovieArtist
|| __DATA.__objc_data _OBJC_CLASS_$_MLMovieProperties
|| __DATA.__objc_data _OBJC_CLASS_$_MLTrackImportChapter
|| __DATA.__objc_data _OBJC_CLASS_$_MSPMediaSyncError
|| __DATA.__objc_data _OBJC_CLASS_$_MSPMediaSyncHeader
|| __DATA.__objc_data _OBJC_CLASS_$_MSPMediaSyncOperation
|| __DATA.__objc_data _OBJC_CLASS_$_MSPMediaSyncPackage
|| __DATA.__objc_data _OBJC_CLASS_$__ML3DatabaseConnectionPoolDiagnostic
|| __DATA.__objc_data _OBJC_CLASS_$__ML3MutableDatabaseConnectionPoolDiagnostic
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPAlbum
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPArtist
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPAudiobook
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPGenre
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPLibraryIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPMediaItem
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPMovie
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPMultiverseIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPPlaybackInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPPlaylist
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPPodcast
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPSeries
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPSmartPlaylistInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPSong
|| __DATA.__objc_data _OBJC_METACLASS_$_MIPTVShow
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3Account
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3AccountCacheDatabase
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3AccountStore
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3AccountTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3AlbumArtistTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3AlbumTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ArtistTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ArtworkTokenSet
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3BaseLocation
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3BitMaskPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3Booklet
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3BulkStatementExecutionOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ChapterTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ClientImportItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ClientImportResult
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ClientImportServiceSession
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ClientImportSession
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ClientImportSessionConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3CloudKVSTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ComposerTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ConditionalPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ContainerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ContainerItemDiffMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ContainerItemDiffOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ContainerItemPerson
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ContainerItemPersonTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ContainerItemTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ContainerSeedTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ContainerTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ContainmentPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ContainsPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3DatabaseBlob
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3DatabaseColumn
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3DatabaseException
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3DatabaseForeignKeyConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3DatabaseMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3DatabaseModule
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3DatabaseOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3DatabaseRecoveryOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3DatabaseTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ExportItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ExportSession
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3GenreTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ImportOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ItemExtraTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ItemKVSTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ItemPlaybackTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ItemSearchTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ItemStatsTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ItemStoreTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ItemTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ItemVideoTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3LyricsTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3MaintenanceTasksOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3MigrationAddedColumn
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3MigrationDirectives
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3MigrationMisgroupedAlbum
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3MigrationMisgroupedTrack
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3MutableDatabaseTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3PersistentIDsPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3Person
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3PersonTable
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ProcessClient
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ProcessDownloadedAssetsOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ProtoSyncExportItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ProtoSyncExportSession
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3QuerySection
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3RemovePlaylistsOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3RemoveTracksOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3SearchStringPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3ServiceDatabaseImport
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3SetValuesForPropertiesOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3SortMap
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3SpotlightMatchPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3StatementAccumulator
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3StoreItemPlaylistData
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3StoreItemTrackData
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3StoreLink
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3TruthPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3UpdateArtworkInterestDataOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3UpdateSiriIndexOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ML3UpdateSpotlightIndexOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_MLChapterTOC
|| __DATA.__objc_data _OBJC_METACLASS_$_MLContentRating
|| __DATA.__objc_data _OBJC_METACLASS_$_MLEQPreset
|| __DATA.__objc_data _OBJC_METACLASS_$_MLException
|| __DATA.__objc_data _OBJC_METACLASS_$_MLGeniusPlaylistController
|| __DATA.__objc_data _OBJC_METACLASS_$_MLITChapterTOC
|| __DATA.__objc_data _OBJC_METACLASS_$_MLMediaLibraryResourcesServiceClient
|| __DATA.__objc_data _OBJC_METACLASS_$_MLMediaLibraryResourcesServiceServer
|| __DATA.__objc_data _OBJC_METACLASS_$_MLMediaTypeCountedSet
|| __DATA.__objc_data _OBJC_METACLASS_$_MLMovieArtist
|| __DATA.__objc_data _OBJC_METACLASS_$_MLMovieProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_MLTrackImportChapter
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPMediaSyncError
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPMediaSyncHeader
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPMediaSyncOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPMediaSyncPackage
|| __DATA.__objc_data _OBJC_METACLASS_$__ML3DatabaseConnectionPoolDiagnostic
|| __DATA.__objc_data _OBJC_METACLASS_$__ML3MutableDatabaseConnectionPoolDiagnostic
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAlbum._artist
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAlbum._artworkId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAlbum._cloudId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAlbum._compilation
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAlbum._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAlbum._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAlbum._numDiscs
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAlbum._numTracks
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAlbum._persistentId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAlbum._sortName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAlbum._storeId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAlbum._userRating
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPArtist._artworkId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPArtist._cloudUniversalLibraryId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPArtist._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPArtist._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPArtist._persistentId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPArtist._sortName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPArtist._storeId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAudiobook._album
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAudiobook._artist
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAudiobook._audioFormat
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAudiobook._composer
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAudiobook._discNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAudiobook._excludeFromShuffle
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAudiobook._genre
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAudiobook._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAudiobook._hasVideo
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAudiobook._hlsPlaylistURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAudiobook._playbackInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAudiobook._trackNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPAudiobook._userRating
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPGenre._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPGenre._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPGenre._persistentId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPGenre._storeId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPLibraryIdentifier._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPLibraryIdentifier._libraryId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPLibraryIdentifier._libraryName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._artworkId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._assetStoreItemId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._audiobook
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._bookmarkTimeMilliseconds
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._chapterMetadataUrl
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._cloudAssetAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._cloudMatchedStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._cloudPlaybackEndpointType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._cloudStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._cloudUniversalLibraryId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._comment
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._contentRating
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._contentRatingLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._copyright
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._creationDateTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._drmKey1IdCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._drmKey2IdCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._drmPlatformIdCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._drmVersionsCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._explicitContent
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._extrasUrl
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._familyAccountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._fileKind
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._fileSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._flattenedChapterData
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._grouping
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._hasChapterData
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._hasLocalAsset
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._hidden
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._inUsersCloudLibrary
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._isInUsersLibrary
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._isPreorder
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._lastPlayedDateTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._lastSkippedDateTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._libraryIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._likedState
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._likedStateChangeDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._likedStateChanged
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._longDescription
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._mediaType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._modificationDateTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._movie
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._needsReporting
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._playCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._playCountDelta
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._playbackEndpointType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._podcast
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._purchaseDateTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._purchaseHistoryId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._purchaseHistoryRedownloadParams
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._purchaseHistoryToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._releaseDateTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._rememberBookmark
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._reportingStoreItemId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._sagaId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._sagaRedownloadParams
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._secondaryArtworkId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._secondaryArtworkSourceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._shortDescription
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._skipCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._skipCountDelta
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._song
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._sortTitle
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._storeAssetFlavor
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._storeId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._storePlaylistId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._storeProtectionType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._storeXID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._storefrontId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._subscriptionStoreItemId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._title
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._tvShow
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._userDisabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMediaItem._year
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._artist
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._audioLanguage
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._audioTrackId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._audioTrackIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._extendedContentName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._flattenedChapterData
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._hasAlternateAudio
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._hasChapterData
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._hasSubtitles
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._movieInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._rental
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._rentalDuration
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._rentalPlaybackDuration
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._rentalPlaybackStartedDateTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._rentalStartedDateTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._subtitleLanguage
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._subtitleTrackIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMovie._videoQuality
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMultiverseIdentifier._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMultiverseIdentifier._cloudUniversalLibraryId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMultiverseIdentifier._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMultiverseIdentifier._libraryIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMultiverseIdentifier._mediaObjectType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMultiverseIdentifier._mediaType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMultiverseIdentifier._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMultiverseIdentifier._purchaseHistoryId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMultiverseIdentifier._sagaId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPMultiverseIdentifier._storeId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._beatsPerMinute
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._bitRate
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._codecSubType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._codecType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._dataKind
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._dataUrl
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._durationInSamples
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._eqPreset
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._gaplessEncodingDrainCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._gaplessFrameResyncCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._gaplessHeuristicCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._gaplessHeuristicDelayCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._playbackFormat
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._progressionDirection
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._relativeVolume
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._sampleRate
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._startTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._stopTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaybackInfo._volumeNormalizationEnergy
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._artworkId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._authorDisplayName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._authorHandle
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._authorStoreId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._authorStoreURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._childIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._cloudGlobalId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._cloudIsCuratorPlaylist
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._cloudIsSharingDisabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._cloudIsSubscribed
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._cloudLastUpdateTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._cloudUniversalLibraryId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._cloudVersionHash
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._creationDateTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._distinguishedKind
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._editable
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._externalVendorDisplayName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._externalVendorIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._externalVendorPlaylist
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._externalVendorTag
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._geniusSeedTrackIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._hidden
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._items
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._lastPlayedDateTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._likedState
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._minRefreshInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._modificationDateTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._owner
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._parentIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._playCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._playlistCategoryTypeMask
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._playlistDescription
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._playlistGroupingSortKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._remoteSourceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._reversedSorting
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._secondaryArtworkId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._secondaryArtworkSourceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._shared
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._smartPlaylistInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._sortType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._storeId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._subscriberCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._subscriberLikedCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._subscriberPlayCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._subscriberURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPlaylist._visible
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPodcast._artist
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPodcast._externalGuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPodcast._feedUrl
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPPodcast._series
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSeries._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSeries._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSeries._sortName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSeries._storeId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSmartPlaylistInfo._dynamic
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSmartPlaylistInfo._enabledItemsOnly
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSmartPlaylistInfo._evaluationOrder
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSmartPlaylistInfo._filtered
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSmartPlaylistInfo._genius
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSmartPlaylistInfo._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSmartPlaylistInfo._limitKind
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSmartPlaylistInfo._limitOrder
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSmartPlaylistInfo._limitValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSmartPlaylistInfo._limited
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSmartPlaylistInfo._reverseLimitOrder
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSmartPlaylistInfo._smartCriteria
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._album
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._artist
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._audioFormat
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._composer
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._discNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._excludeFromShuffle
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._geniusId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._genre
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._hasVideo
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._hlsPlaylistURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._lyrics
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._lyricsChecksum
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._playbackInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._trackNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPSong._userRating
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPTVShow._artist
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPTVShow._episodeId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPTVShow._episodeSortId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPTVShow._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPTVShow._networkName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPTVShow._seasonNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPTVShow._series
|| __DATA.__objc_ivar _OBJC_IVAR_$_MIPTVShow._videoQuality
|| __DATA.__objc_ivar _OBJC_IVAR_$_ML3Entity._library
|| __DATA.__objc_ivar _OBJC_IVAR_$_ML3Entity._persistentID
|| __DATA.__objc_ivar _OBJC_IVAR_$_ML3Query._entityClass
|| __DATA.__objc_ivar _OBJC_IVAR_$_ML3Query._library
|| __DATA.__objc_ivar _OBJC_IVAR_$_ML3Query._nonDirectAggregateQuery
|| __DATA.__objc_ivar _OBJC_IVAR_$_ML3Query._options
|| __DATA.__objc_ivar _OBJC_IVAR_$_ML3Query._orderingTerms
|| __DATA.__objc_ivar _OBJC_IVAR_$_ML3Query._predicate
|| __DATA.__objc_ivar _OBJC_IVAR_$_ML3Query._propertyToCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_ML3Query._usingSections
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncError._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncError._errorDescription
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncError._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncHeader._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncHeader._syncType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncHeader._totalPackages
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncOperation._album
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncOperation._artist
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncOperation._genre
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncOperation._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncOperation._mediaItem
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncOperation._multiverseId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncOperation._operationType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncOperation._playlist
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncOperation._series
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncPackage._error
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncPackage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncPackage._header
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncPackage._lastPackage
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncPackage._syncOperation
|| __DATA.__objc_ivar _OBJC_IVAR_$_MSPMediaSyncPackage._type
|| __DATA_CONST.__const _ML3AccountCacheErrorDomain
|| __DATA_CONST.__const _ML3AccountPropertyAltDSID
|| __DATA_CONST.__const _ML3AccountPropertyAppleID
|| __DATA_CONST.__const _ML3AccountPropertyDSID
|| __DATA_CONST.__const _ML3AlbumArtistPropertyAppData
|| __DATA_CONST.__const _ML3AlbumArtistPropertyClassicalExperienceAvailable
|| __DATA_CONST.__const _ML3AlbumArtistPropertyCloudUniversalLibraryID
|| __DATA_CONST.__const _ML3AlbumArtistPropertyName
|| __DATA_CONST.__const _ML3AlbumArtistPropertySortName
|| __DATA_CONST.__const _ML3AlbumArtistPropertyStoreID
|| __DATA_CONST.__const _ML3AlbumPropertyAlbumYear
|| __DATA_CONST.__const _ML3AlbumPropertyAllCompilations
|| __DATA_CONST.__const _ML3AlbumPropertyAppData
|| __DATA_CONST.__const _ML3AlbumPropertyArtist
|| __DATA_CONST.__const _ML3AlbumPropertyArtistPersistentID
|| __DATA_CONST.__const _ML3AlbumPropertyClassicalExperienceAvailable
|| __DATA_CONST.__const _ML3AlbumPropertyContainsClassicalWork
|| __DATA_CONST.__const _ML3AlbumPropertyDatePlayedLocal
|| __DATA_CONST.__const _ML3AlbumPropertyFeedURL
|| __DATA_CONST.__const _ML3AlbumPropertyLikedState
|| __DATA_CONST.__const _ML3AlbumPropertyName
|| __DATA_CONST.__const _ML3AlbumPropertySeasonNumber
|| __DATA_CONST.__const _ML3AlbumPropertySortName
|| __DATA_CONST.__const _ML3AlbumPropertyStoreAlbumID
|| __DATA_CONST.__const _ML3AlbumPropertyStoreCloudID
|| __DATA_CONST.__const _ML3AlbumPropertySyncID
|| __DATA_CONST.__const _ML3AlbumPropertyUserRating
|| __DATA_CONST.__const _ML3ArtistPropertyAppData
|| __DATA_CONST.__const _ML3ArtistPropertyClassicalExperienceAvailable
|| __DATA_CONST.__const _ML3ArtistPropertyName
|| __DATA_CONST.__const _ML3ArtistPropertySeriesName
|| __DATA_CONST.__const _ML3ArtistPropertySortName
|| __DATA_CONST.__const _ML3ArtistPropertySortSeriesName
|| __DATA_CONST.__const _ML3ArtistPropertyStoreID
|| __DATA_CONST.__const _ML3ArtworkConfigurationAutogenerateKey
|| __DATA_CONST.__const _ML3ArtworkConfigurationSupportedArtworkTypesKey
|| __DATA_CONST.__const _ML3ArtworkConfigurationSupportedMediaTypesKey
|| __DATA_CONST.__const _ML3ArtworkConfigurationiPadOnlyKey
|| __DATA_CONST.__const _ML3BaseLocationPropertyPath
|| __DATA_CONST.__const _ML3BookletPropertyFileSize
|| __DATA_CONST.__const _ML3BookletPropertyItemPersistentID
|| __DATA_CONST.__const _ML3BookletPropertyName
|| __DATA_CONST.__const _ML3BookletPropertyPersistentID
|| __DATA_CONST.__const _ML3BookletPropertyRedownloadParams
|| __DATA_CONST.__const _ML3BookletPropertyStoreItemID
|| __DATA_CONST.__const _ML3BundleIDMusic
|| __DATA_CONST.__const _ML3BundleIDVideos
|| __DATA_CONST.__const _ML3CollectionPropertyAlbumPersistentID
|| __DATA_CONST.__const _ML3CollectionPropertyArtistPersistentID
|| __DATA_CONST.__const _ML3CollectionPropertyCloudStatus
|| __DATA_CONST.__const _ML3CollectionPropertyGroupingKey
|| __DATA_CONST.__const _ML3CollectionPropertyRepresentativeItemPersistentID
|| __DATA_CONST.__const _ML3CollectionPropertyTrackPersistentID
|| __DATA_CONST.__const _ML3ComposerPropertyName
|| __DATA_CONST.__const _ML3ComposerPropertySortName
|| __DATA_CONST.__const _ML3ComposerPropertyStoreComposerID
|| __DATA_CONST.__const _ML3CompoundSortKeyFunctionName
|| __DATA_CONST.__const _ML3ContainerItemPersonPropertyContainerItemPersistentID
|| __DATA_CONST.__const _ML3ContainerItemPersonPropertyPersistentID
|| __DATA_CONST.__const _ML3ContainerItemPersonPropertyPersonPersistentID
|| __DATA_CONST.__const _ML3ContainerItemPropertyContainerPersistentId
|| __DATA_CONST.__const _ML3ContainerItemPropertyItemPersistentId
|| __DATA_CONST.__const _ML3ContainerItemPropertyPersistentId
|| __DATA_CONST.__const _ML3ContainerItemPropertyPosition
|| __DATA_CONST.__const _ML3ContainerPropertyAlbumFieldOrder
|| __DATA_CONST.__const _ML3ContainerPropertyArtworkToken
|| __DATA_CONST.__const _ML3ContainerPropertyCategoryTypeMask
|| __DATA_CONST.__const _ML3ContainerPropertyCloudAuthorDisplayName
|| __DATA_CONST.__const _ML3ContainerPropertyCloudAuthorHandle
|| __DATA_CONST.__const _ML3ContainerPropertyCloudAuthorStoreID
|| __DATA_CONST.__const _ML3ContainerPropertyCloudAuthorStoreURL
|| __DATA_CONST.__const _ML3ContainerPropertyCloudGlobalID
|| __DATA_CONST.__const _ML3ContainerPropertyCloudGlobalLikeCount
|| __DATA_CONST.__const _ML3ContainerPropertyCloudGlobalPlayCount
|| __DATA_CONST.__const _ML3ContainerPropertyCloudIsCuratorPlaylist
|| __DATA_CONST.__const _ML3ContainerPropertyCloudIsPublic
|| __DATA_CONST.__const _ML3ContainerPropertyCloudIsSharingDisabled
|| __DATA_CONST.__const _ML3ContainerPropertyCloudIsSubscribed
|| __DATA_CONST.__const _ML3ContainerPropertyCloudIsVisible
|| __DATA_CONST.__const _ML3ContainerPropertyCloudLastUpdateTime
|| __DATA_CONST.__const _ML3ContainerPropertyCloudMinRefreshInterval
|| __DATA_CONST.__const _ML3ContainerPropertyCloudShareURL
|| __DATA_CONST.__const _ML3ContainerPropertyCloudUniversalLibraryID
|| __DATA_CONST.__const _ML3ContainerPropertyCloudUserCount
|| __DATA_CONST.__const _ML3ContainerPropertyCloudVersionHash
|| __DATA_CONST.__const _ML3ContainerPropertyContainedMediaType
|| __DATA_CONST.__const _ML3ContainerPropertyContainerPersistentId
|| __DATA_CONST.__const _ML3ContainerPropertyContainerType
|| __DATA_CONST.__const _ML3ContainerPropertyDateCreated
|| __DATA_CONST.__const _ML3ContainerPropertyDateDownloaded
|| __DATA_CONST.__const _ML3ContainerPropertyDateModified
|| __DATA_CONST.__const _ML3ContainerPropertyDatePlayed
|| __DATA_CONST.__const _ML3ContainerPropertyDatePlayedLocal
|| __DATA_CONST.__const _ML3ContainerPropertyDescription
|| __DATA_CONST.__const _ML3ContainerPropertyDistinguishedKind
|| __DATA_CONST.__const _ML3ContainerPropertyExternalVendorContainerTag
|| __DATA_CONST.__const _ML3ContainerPropertyExternalVendorDisplayName
|| __DATA_CONST.__const _ML3ContainerPropertyExternalVendorIdentifier
|| __DATA_CONST.__const _ML3ContainerPropertyFetchableItemArtworkSourceType
|| __DATA_CONST.__const _ML3ContainerPropertyFetchableItemArtworkToken
|| __DATA_CONST.__const _ML3ContainerPropertyFilePath
|| __DATA_CONST.__const _ML3ContainerPropertyGroupingSortKey
|| __DATA_CONST.__const _ML3ContainerPropertyHasBeenShuffled
|| __DATA_CONST.__const _ML3ContainerPropertyHasCloudPlayOrder
|| __DATA_CONST.__const _ML3ContainerPropertyHasItems
|| __DATA_CONST.__const _ML3ContainerPropertyIsActiveGeniusPlaylist
|| __DATA_CONST.__const _ML3ContainerPropertyIsActiveOnTheGoPlaylist
|| __DATA_CONST.__const _ML3ContainerPropertyIsContainerTypeActiveTarget
|| __DATA_CONST.__const _ML3ContainerPropertyIsCurrentDevicePurchasesPlaylist
|| __DATA_CONST.__const _ML3ContainerPropertyIsDeletable
|| __DATA_CONST.__const _ML3ContainerPropertyIsEditable
|| __DATA_CONST.__const _ML3ContainerPropertyIsExternalVendorPlaylist
|| __DATA_CONST.__const _ML3ContainerPropertyIsFolderPlaylistOrder
|| __DATA_CONST.__const _ML3ContainerPropertyIsGeniusMix
|| __DATA_CONST.__const _ML3ContainerPropertyIsGeniusPlaylistOrder
|| __DATA_CONST.__const _ML3ContainerPropertyIsHidden
|| __DATA_CONST.__const _ML3ContainerPropertyIsITunesSyncedPlaylist
|| __DATA_CONST.__const _ML3ContainerPropertyIsIgnorableITunesPlaylist
|| __DATA_CONST.__const _ML3ContainerPropertyIsIgnoredSyncing
|| __DATA_CONST.__const _ML3ContainerPropertyIsLimitedDynamicSmartPlaylist
|| __DATA_CONST.__const _ML3ContainerPropertyIsOwner
|| __DATA_CONST.__const _ML3ContainerPropertyIsPhotosMemoriesPlaylist
|| __DATA_CONST.__const _ML3ContainerPropertyIsPlaybackHistoryPlaylist
|| __DATA_CONST.__const _ML3ContainerPropertyIsPurchasesPlaylist
|| __DATA_CONST.__const _ML3ContainerPropertyIsSaveable
|| __DATA_CONST.__const _ML3ContainerPropertyIsSmartPlaylistOrder
|| __DATA_CONST.__const _ML3ContainerPropertyIsSourceRemote
|| __DATA_CONST.__const _ML3ContainerPropertyIsUserEditable
|| __DATA_CONST.__const _ML3ContainerPropertyIsVoiceMemos
|| __DATA_CONST.__const _ML3ContainerPropertyIsWorkoutMix
|| __DATA_CONST.__const _ML3ContainerPropertyKeepLocal
|| __DATA_CONST.__const _ML3ContainerPropertyKeepLocalConstraints
|| __DATA_CONST.__const _ML3ContainerPropertyKeepLocalStatus
|| __DATA_CONST.__const _ML3ContainerPropertyKeepLocalStatusReason
|| __DATA_CONST.__const _ML3ContainerPropertyLikedState
|| __DATA_CONST.__const _ML3ContainerPropertyName
|| __DATA_CONST.__const _ML3ContainerPropertyNameOrder
|| __DATA_CONST.__const _ML3ContainerPropertyOriginalDateModified
|| __DATA_CONST.__const _ML3ContainerPropertyParentPersistentID
|| __DATA_CONST.__const _ML3ContainerPropertyPlayCountRecent
|| __DATA_CONST.__const _ML3ContainerPropertyPlayCountUser
|| __DATA_CONST.__const _ML3ContainerPropertyPlayOrder
|| __DATA_CONST.__const _ML3ContainerPropertyPlayOrderReversed
|| __DATA_CONST.__const _ML3ContainerPropertyPlaylistAttributes
|| __DATA_CONST.__const _ML3ContainerPropertyRepeatMode
|| __DATA_CONST.__const _ML3ContainerPropertySeedItemPersistentID
|| __DATA_CONST.__const _ML3ContainerPropertySeedOrder
|| __DATA_CONST.__const _ML3ContainerPropertyShouldDisplayIndex
|| __DATA_CONST.__const _ML3ContainerPropertyShuffleItems
|| __DATA_CONST.__const _ML3ContainerPropertySmartCriteria
|| __DATA_CONST.__const _ML3ContainerPropertySmartEnabledOnly
|| __DATA_CONST.__const _ML3ContainerPropertySmartEvaluationOrder
|| __DATA_CONST.__const _ML3ContainerPropertySmartIsDynamic
|| __DATA_CONST.__const _ML3ContainerPropertySmartIsFiltered
|| __DATA_CONST.__const _ML3ContainerPropertySmartIsFolder
|| __DATA_CONST.__const _ML3ContainerPropertySmartIsGenius
|| __DATA_CONST.__const _ML3ContainerPropertySmartIsLimited
|| __DATA_CONST.__const _ML3ContainerPropertySmartLimitKind
|| __DATA_CONST.__const _ML3ContainerPropertySmartLimitOrder
|| __DATA_CONST.__const _ML3ContainerPropertySmartLimitValue
|| __DATA_CONST.__const _ML3ContainerPropertySmartReverseLimitOrder
|| __DATA_CONST.__const _ML3ContainerPropertyStoreCloudID
|| __DATA_CONST.__const _ML3ContainerPropertySyncId
|| __DATA_CONST.__const _ML3ContainerPropertyWorkoutTemplateID
|| __DATA_CONST.__const _ML3DatabaseErrorDomain
|| __DATA_CONST.__const _ML3DatabaseExceptionErrorUserInfoKey
|| __DATA_CONST.__const _ML3DatabaseInsertStatementOptionColumnNamesKey
|| __DATA_CONST.__const _ML3DatabaseInsertStatementOptionDatabaseNameKey
|| __DATA_CONST.__const _ML3DatabaseInsertStatementOptionFailureOptionKey
|| __DATA_CONST.__const _ML3DatabaseInsertStatementOptionTableNameKey
|| __DATA_CONST.__const _ML3DatabaseInsertStatementOptionValuesKey
|| __DATA_CONST.__const _ML3DatabaseMetadataAudioLanguage
|| __DATA_CONST.__const _ML3DatabaseMetadataGeniusCUID
|| __DATA_CONST.__const _ML3DatabaseMetadataPrimaryContainerPersistentID
|| __DATA_CONST.__const _ML3DatabaseMetadataSubtitleLangauge
|| __DATA_CONST.__const _ML3EntityPropertyDeleted
|| __DATA_CONST.__const _ML3EntityPropertyKeepLocal
|| __DATA_CONST.__const _ML3EntityPropertyKeepLocalConstraints
|| __DATA_CONST.__const _ML3EntityPropertyKeepLocalStatus
|| __DATA_CONST.__const _ML3EntityPropertyKeepLocalStatusReason
|| __DATA_CONST.__const _ML3EntityPropertyPersistentID
|| __DATA_CONST.__const _ML3EntityPropertyRevision
|| __DATA_CONST.__const _ML3GenrePropertyGenre
|| __DATA_CONST.__const _ML3GenrePropertyStoreGenreID
|| __DATA_CONST.__const _ML3IsCurrentlyRestrictedMediaFunctionName
|| __DATA_CONST.__const _ML3LibraryNotificationIsExternalUserInfoKey
|| __DATA_CONST.__const _ML3LibrarySortMapUnicodeVersionDatabasePropertyKey
|| __DATA_CONST.__const _ML3MigrationErrorDomain
|| __DATA_CONST.__const _ML3MultiUserErrorDomain
|| __DATA_CONST.__const _ML3MusicLibraryBackgroundTasksShouldStopSuppressingChangesNotification
|| __DATA_CONST.__const _ML3MusicLibraryBackgroundTasksShouldSuppressChangesNotification
|| __DATA_CONST.__const _ML3MusicLibraryCloudLibraryAvailablityDidChangeNotification
|| __DATA_CONST.__const _ML3MusicLibraryContentsDidChangeNotification
|| __DATA_CONST.__const _ML3MusicLibraryDatabasePropertySyncLibraryID
|| __DATA_CONST.__const _ML3MusicLibraryDatabasePropertyUID
|| __DATA_CONST.__const _ML3MusicLibraryDisplayValuesDidChangeNotification
|| __DATA_CONST.__const _ML3MusicLibraryEntitiesAddedOrRemovedNotification
|| __DATA_CONST.__const _ML3MusicLibraryImportDidFinishNotification
|| __DATA_CONST.__const _ML3MusicLibraryInvisiblePropertiesDidChangeNotification
|| __DATA_CONST.__const _ML3MusicLibraryKeepLocalStateChangedNotification
|| __DATA_CONST.__const _ML3MusicLibraryNonContentsPropertiesDidChangeNotification
|| __DATA_CONST.__const _ML3MusicLibraryPathDidChangeNotification
|| __DATA_CONST.__const _ML3MusicLibrarySectionsDidChangeNotification
|| __DATA_CONST.__const _ML3MusicLibrarySyncGenerationDidChangeNotification
|| __DATA_CONST.__const _ML3MusicLibraryUIDDidChangeNotification
|| __DATA_CONST.__const _ML3MusicLibraryWillInvalidateDatabaseConnectionNotification
|| __DATA_CONST.__const _ML3PersonPropertyCloudID
|| __DATA_CONST.__const _ML3PersonPropertyHandle
|| __DATA_CONST.__const _ML3PersonPropertyImageToken
|| __DATA_CONST.__const _ML3PersonPropertyImageURL
|| __DATA_CONST.__const _ML3PersonPropertyName
|| __DATA_CONST.__const _ML3PersonPropertyPersistentID
|| __DATA_CONST.__const _ML3QueryAggregateFunctionMax
|| __DATA_CONST.__const _ML3QueryAggregateFunctionMin
|| __DATA_CONST.__const _ML3QueryAggregateFunctionTotal
|| __DATA_CONST.__const _ML3SearchStringMatchFunctionName
|| __DATA_CONST.__const _ML3SeasonDisplayNameFunctionName
|| __DATA_CONST.__const _ML3SortStringFunctionName
|| __DATA_CONST.__const _ML3SortStringWithPrefixFunctionName
|| __DATA_CONST.__const _ML3SpotlightMatchFunctionName
|| __DATA_CONST.__const _ML3StandardizedMediaTypeFunctionName
|| __DATA_CONST.__const _ML3StoreLinkPropertyURL
|| __DATA_CONST.__const _ML3SystemErrorDomain
|| __DATA_CONST.__const _ML3TrackDigestComputeFunctionName
|| __DATA_CONST.__const _ML3TrackIntegrityComputeFunctionName
|| __DATA_CONST.__const _ML3TrackIntegrityVerifyFunctionName
|| __DATA_CONST.__const _ML3TrackPropertyAlbum
|| __DATA_CONST.__const _ML3TrackPropertyAlbumArtist
|| __DATA_CONST.__const _ML3TrackPropertyAlbumArtistCloudUniversalLibraryID
|| __DATA_CONST.__const _ML3TrackPropertyAlbumArtistKeepLocal
|| __DATA_CONST.__const _ML3TrackPropertyAlbumArtistOrder
|| __DATA_CONST.__const _ML3TrackPropertyAlbumArtistOrderSection
|| __DATA_CONST.__const _ML3TrackPropertyAlbumArtistPersistentID
|| __DATA_CONST.__const _ML3TrackPropertyAlbumArtistStoreID
|| __DATA_CONST.__const _ML3TrackPropertyAlbumKeepLocal
|| __DATA_CONST.__const _ML3TrackPropertyAlbumLikedState
|| __DATA_CONST.__const _ML3TrackPropertyAlbumOrder
|| __DATA_CONST.__const _ML3TrackPropertyAlbumOrderSection
|| __DATA_CONST.__const _ML3TrackPropertyAlbumPersistentID
|| __DATA_CONST.__const _ML3TrackPropertyAlbumTitleOrder
|| __DATA_CONST.__const _ML3TrackPropertyAlbumYear
|| __DATA_CONST.__const _ML3TrackPropertyArtist
|| __DATA_CONST.__const _ML3TrackPropertyArtistKeepLocal
|| __DATA_CONST.__const _ML3TrackPropertyArtistOrder
|| __DATA_CONST.__const _ML3TrackPropertyArtistOrderSection
|| __DATA_CONST.__const _ML3TrackPropertyArtistPersistentID
|| __DATA_CONST.__const _ML3TrackPropertyArtistStoreID
|| __DATA_CONST.__const _ML3TrackPropertyArtworkToken
|| __DATA_CONST.__const _ML3TrackPropertyAssetStoreItemID
|| __DATA_CONST.__const _ML3TrackPropertyAudioCapability
|| __DATA_CONST.__const _ML3TrackPropertyAudioFormat
|| __DATA_CONST.__const _ML3TrackPropertyAudioLanguage
|| __DATA_CONST.__const _ML3TrackPropertyAudioTrackID
|| __DATA_CONST.__const _ML3TrackPropertyAudioTrackIndex
|| __DATA_CONST.__const _ML3TrackPropertyAudioTrackLocale
|| __DATA_CONST.__const _ML3TrackPropertyBPM
|| __DATA_CONST.__const _ML3TrackPropertyBaseLocationID
|| __DATA_CONST.__const _ML3TrackPropertyBaseLocationPath
|| __DATA_CONST.__const _ML3TrackPropertyBitRate
|| __DATA_CONST.__const _ML3TrackPropertyBookmarkTime
|| __DATA_CONST.__const _ML3TrackPropertyCategory
|| __DATA_CONST.__const _ML3TrackPropertyCategoryID
|| __DATA_CONST.__const _ML3TrackPropertyChapterData
|| __DATA_CONST.__const _ML3TrackPropertyChapterDataExists
|| __DATA_CONST.__const _ML3TrackPropertyChosenByAutoFill
|| __DATA_CONST.__const _ML3TrackPropertyClassicalEffectiveWork
|| __DATA_CONST.__const _ML3TrackPropertyClassicalMovement
|| __DATA_CONST.__const _ML3TrackPropertyClassicalMovementCount
|| __DATA_CONST.__const _ML3TrackPropertyClassicalMovementNumber
|| __DATA_CONST.__const _ML3TrackPropertyClassicalWork
|| __DATA_CONST.__const _ML3TrackPropertyCodecSubtype
|| __DATA_CONST.__const _ML3TrackPropertyCodecType
|| __DATA_CONST.__const _ML3TrackPropertyCollectionDescription
|| __DATA_CONST.__const _ML3TrackPropertyColorCapability
|| __DATA_CONST.__const _ML3TrackPropertyComment
|| __DATA_CONST.__const _ML3TrackPropertyComments
|| __DATA_CONST.__const _ML3TrackPropertyComposer
|| __DATA_CONST.__const _ML3TrackPropertyComposerKeepLocal
|| __DATA_CONST.__const _ML3TrackPropertyComposerOrArtist
|| __DATA_CONST.__const _ML3TrackPropertyComposerOrder
|| __DATA_CONST.__const _ML3TrackPropertyComposerOrderSection
|| __DATA_CONST.__const _ML3TrackPropertyComposerPersistentID
|| __DATA_CONST.__const _ML3TrackPropertyComputedIntegrity
|| __DATA_CONST.__const _ML3TrackPropertyContainerItemPersistentID
|| __DATA_CONST.__const _ML3TrackPropertyContainerPersistentID
|| __DATA_CONST.__const _ML3TrackPropertyContainerPhysicalOrder
|| __DATA_CONST.__const _ML3TrackPropertyContentRating
|| __DATA_CONST.__const _ML3TrackPropertyCopyright
|| __DATA_CONST.__const _ML3TrackPropertyDataKind
|| __DATA_CONST.__const _ML3TrackPropertyDataURL
|| __DATA_CONST.__const _ML3TrackPropertyDateAccessed
|| __DATA_CONST.__const _ML3TrackPropertyDateAdded
|| __DATA_CONST.__const _ML3TrackPropertyDateDownloaded
|| __DATA_CONST.__const _ML3TrackPropertyDateModified
|| __DATA_CONST.__const _ML3TrackPropertyDatePlayed
|| __DATA_CONST.__const _ML3TrackPropertyDateReleased
|| __DATA_CONST.__const _ML3TrackPropertyDateSkipped
|| __DATA_CONST.__const _ML3TrackPropertyDescription
|| __DATA_CONST.__const _ML3TrackPropertyDiscCount
|| __DATA_CONST.__const _ML3TrackPropertyDiscNumber
|| __DATA_CONST.__const _ML3TrackPropertyDisplayVersion
|| __DATA_CONST.__const _ML3TrackPropertyDownloadIdentifier
|| __DATA_CONST.__const _ML3TrackPropertyDownloadSourceContainerPid
|| __DATA_CONST.__const _ML3TrackPropertyDurationInSamples
|| __DATA_CONST.__const _ML3TrackPropertyEQPreset
|| __DATA_CONST.__const _ML3TrackPropertyEpisodeID
|| __DATA_CONST.__const _ML3TrackPropertyEpisodeSortID
|| __DATA_CONST.__const _ML3TrackPropertyEpisodeSubSortOrder
|| __DATA_CONST.__const _ML3TrackPropertyEpisodeType
|| __DATA_CONST.__const _ML3TrackPropertyEpisodeTypeDisplayName
|| __DATA_CONST.__const _ML3TrackPropertyExcludeFromShuffle
|| __DATA_CONST.__const _ML3TrackPropertyExtendedContentRating
|| __DATA_CONST.__const _ML3TrackPropertyFeedURL
|| __DATA_CONST.__const _ML3TrackPropertyFetchableItemArtworkSourceType
|| __DATA_CONST.__const _ML3TrackPropertyFetchableItemArtworkToken
|| __DATA_CONST.__const _ML3TrackPropertyFetchableItemScreenshotSourceType
|| __DATA_CONST.__const _ML3TrackPropertyFetchableItemScreenshotToken
|| __DATA_CONST.__const _ML3TrackPropertyFilePath
|| __DATA_CONST.__const _ML3TrackPropertyFormat
|| __DATA_CONST.__const _ML3TrackPropertyGaplessEncodingDelay
|| __DATA_CONST.__const _ML3TrackPropertyGaplessEncodingDrain
|| __DATA_CONST.__const _ML3TrackPropertyGaplessHeuristicInfo
|| __DATA_CONST.__const _ML3TrackPropertyGaplessLastFrameResync
|| __DATA_CONST.__const _ML3TrackPropertyGeniusChecksum
|| __DATA_CONST.__const _ML3TrackPropertyGenre
|| __DATA_CONST.__const _ML3TrackPropertyGenreID
|| __DATA_CONST.__const _ML3TrackPropertyGenreKeepLocal
|| __DATA_CONST.__const _ML3TrackPropertyGenreOrder
|| __DATA_CONST.__const _ML3TrackPropertyGenreOrderSection
|| __DATA_CONST.__const _ML3TrackPropertyGlobalID
|| __DATA_CONST.__const _ML3TrackPropertyGrouping
|| __DATA_CONST.__const _ML3TrackPropertyHLSAssetTraits
|| __DATA_CONST.__const _ML3TrackPropertyHLSAudioCapability
|| __DATA_CONST.__const _ML3TrackPropertyHLSColorCapability
|| __DATA_CONST.__const _ML3TrackPropertyHLSKeyCertificateURL
|| __DATA_CONST.__const _ML3TrackPropertyHLSKeyServerProtocol
|| __DATA_CONST.__const _ML3TrackPropertyHLSKeyServerURL
|| __DATA_CONST.__const _ML3TrackPropertyHLSOfflinePlaybackKeys
|| __DATA_CONST.__const _ML3TrackPropertyHLSPlaylistURL
|| __DATA_CONST.__const _ML3TrackPropertyHLSVideoQuality
|| __DATA_CONST.__const _ML3TrackPropertyHasAlternateAudio
|| __DATA_CONST.__const _ML3TrackPropertyHasAppleMusicDRM
|| __DATA_CONST.__const _ML3TrackPropertyHasAvailableItemArtwork
|| __DATA_CONST.__const _ML3TrackPropertyHasBeenPlayed
|| __DATA_CONST.__const _ML3TrackPropertyHasChapterData
|| __DATA_CONST.__const _ML3TrackPropertyHasHLSVideo
|| __DATA_CONST.__const _ML3TrackPropertyHasNonPurgeableAsset
|| __DATA_CONST.__const _ML3TrackPropertyHasNonPurgeableAssetOnCompanionOrGizmo
|| __DATA_CONST.__const _ML3TrackPropertyHasProtectedAsset
|| __DATA_CONST.__const _ML3TrackPropertyHasStoreRedownloadParameters
|| __DATA_CONST.__const _ML3TrackPropertyHasSubtitles
|| __DATA_CONST.__const _ML3TrackPropertyHasVideo
|| __DATA_CONST.__const _ML3TrackPropertyHidden
|| __DATA_CONST.__const _ML3TrackPropertyHomeSharingID
|| __DATA_CONST.__const _ML3TrackPropertyIncludeInShuffle
|| __DATA_CONST.__const _ML3TrackPropertyIsAlarm
|| __DATA_CONST.__const _ML3TrackPropertyIsAudibleAudioBook
|| __DATA_CONST.__const _ML3TrackPropertyIsCleanExplicit
|| __DATA_CONST.__const _ML3TrackPropertyIsCompilation
|| __DATA_CONST.__const _ML3TrackPropertyIsCurrentlyRestricted
|| __DATA_CONST.__const _ML3TrackPropertyIsDemoRental
|| __DATA_CONST.__const _ML3TrackPropertyIsDeprotected
|| __DATA_CONST.__const _ML3TrackPropertyIsExplicit
|| __DATA_CONST.__const _ML3TrackPropertyIsHD
|| __DATA_CONST.__const _ML3TrackPropertyIsITunesU
|| __DATA_CONST.__const _ML3TrackPropertyIsInMyLibrary
|| __DATA_CONST.__const _ML3TrackPropertyIsInTheCloud
|| __DATA_CONST.__const _ML3TrackPropertyIsLocal
|| __DATA_CONST.__const _ML3TrackPropertyIsMatchAudio
|| __DATA_CONST.__const _ML3TrackPropertyIsMusicShow
|| __DATA_CONST.__const _ML3TrackPropertyIsMusicVideo
|| __DATA_CONST.__const _ML3TrackPropertyIsNonLibraryOwnedSubscriptionContent
|| __DATA_CONST.__const _ML3TrackPropertyIsOTAPurchased
|| __DATA_CONST.__const _ML3TrackPropertyIsPendingSync
|| __DATA_CONST.__const _ML3TrackPropertyIsPlayable
|| __DATA_CONST.__const _ML3TrackPropertyIsPodcast
|| __DATA_CONST.__const _ML3TrackPropertyIsPremium
|| __DATA_CONST.__const _ML3TrackPropertyIsPreorder
|| __DATA_CONST.__const _ML3TrackPropertyIsRental
|| __DATA_CONST.__const _ML3TrackPropertyIsStoreRedownloadable
|| __DATA_CONST.__const _ML3TrackPropertyIsStoreRedownloadableOnCompanion
|| __DATA_CONST.__const _ML3TrackPropertyIsStreamingQuality
|| __DATA_CONST.__const _ML3TrackPropertyIsTemporaryCloudDownload
|| __DATA_CONST.__const _ML3TrackPropertyIsUserDisabled
|| __DATA_CONST.__const _ML3TrackPropertyIsVideo
|| __DATA_CONST.__const _ML3TrackPropertyKindID
|| __DATA_CONST.__const _ML3TrackPropertyLikedState
|| __DATA_CONST.__const _ML3TrackPropertyLikedStateChanged
|| __DATA_CONST.__const _ML3TrackPropertyLikedStateChangedDate
|| __DATA_CONST.__const _ML3TrackPropertyLocationFileName
|| __DATA_CONST.__const _ML3TrackPropertyLongDescription
|| __DATA_CONST.__const _ML3TrackPropertyLyrics
|| __DATA_CONST.__const _ML3TrackPropertyLyricsChecksum
|| __DATA_CONST.__const _ML3TrackPropertyLyricsPendingChecksum
|| __DATA_CONST.__const _ML3TrackPropertyMatchRedownloadParameters
|| __DATA_CONST.__const _ML3TrackPropertyMediaKind
|| __DATA_CONST.__const _ML3TrackPropertyMediaType
|| __DATA_CONST.__const _ML3TrackPropertyMovieInfo
|| __DATA_CONST.__const _ML3TrackPropertyNeedsRestore
|| __DATA_CONST.__const _ML3TrackPropertyNetworkName
|| __DATA_CONST.__const _ML3TrackPropertyPendingGeniusChecksum
|| __DATA_CONST.__const _ML3TrackPropertyPlayCountRecent
|| __DATA_CONST.__const _ML3TrackPropertyPlayCountUser
|| __DATA_CONST.__const _ML3TrackPropertyPodcastDateReleased
|| __DATA_CONST.__const _ML3TrackPropertyPodcastExternalGUID
|| __DATA_CONST.__const _ML3TrackPropertyProgressionDirection
|| __DATA_CONST.__const _ML3TrackPropertyPurchaseHistoryID
|| __DATA_CONST.__const _ML3TrackPropertyPurchaseHistoryRedownloadParameters
|| __DATA_CONST.__const _ML3TrackPropertyPurchaseHistoryToken
|| __DATA_CONST.__const _ML3TrackPropertyRatingLevel
|| __DATA_CONST.__const _ML3TrackPropertyRelativeVolume
|| __DATA_CONST.__const _ML3TrackPropertyRememberBookmarkTime
|| __DATA_CONST.__const _ML3TrackPropertyRemoteLocationID
|| __DATA_CONST.__const _ML3TrackPropertyRentalDuration
|| __DATA_CONST.__const _ML3TrackPropertyRentalExpirationDate
|| __DATA_CONST.__const _ML3TrackPropertyRentalPlaybackDuration
|| __DATA_CONST.__const _ML3TrackPropertyRentalPlaybackStartDate
|| __DATA_CONST.__const _ML3TrackPropertyRentalStartDate
|| __DATA_CONST.__const _ML3TrackPropertyRentalWindowEndDate
|| __DATA_CONST.__const _ML3TrackPropertyReportingStoreItemID
|| __DATA_CONST.__const _ML3TrackPropertySampleRate
|| __DATA_CONST.__const _ML3TrackPropertyScreenshotToken
|| __DATA_CONST.__const _ML3TrackPropertySearchAlbum
|| __DATA_CONST.__const _ML3TrackPropertySearchAlbumArtist
|| __DATA_CONST.__const _ML3TrackPropertySearchArtist
|| __DATA_CONST.__const _ML3TrackPropertySearchComposer
|| __DATA_CONST.__const _ML3TrackPropertySearchTitle
|| __DATA_CONST.__const _ML3TrackPropertySeasonDisplayName
|| __DATA_CONST.__const _ML3TrackPropertySeasonNumber
|| __DATA_CONST.__const _ML3TrackPropertySeriesDisplayName
|| __DATA_CONST.__const _ML3TrackPropertySeriesName
|| __DATA_CONST.__const _ML3TrackPropertySeriesNameOrder
|| __DATA_CONST.__const _ML3TrackPropertySeriesNameOrderSection
|| __DATA_CONST.__const _ML3TrackPropertyShowComposer
|| __DATA_CONST.__const _ML3TrackPropertyShowSortType
|| __DATA_CONST.__const _ML3TrackPropertySignificantAmountHasBeenPlayed
|| __DATA_CONST.__const _ML3TrackPropertySkipCountRecent
|| __DATA_CONST.__const _ML3TrackPropertySkipCountUser
|| __DATA_CONST.__const _ML3TrackPropertySmartPlaylistCriteriaHasArtwork
|| __DATA_CONST.__const _ML3TrackPropertySortAlbum
|| __DATA_CONST.__const _ML3TrackPropertySortAlbumArtist
|| __DATA_CONST.__const _ML3TrackPropertySortArtist
|| __DATA_CONST.__const _ML3TrackPropertySortComposer
|| __DATA_CONST.__const _ML3TrackPropertySortSeriesName
|| __DATA_CONST.__const _ML3TrackPropertySortTitle
|| __DATA_CONST.__const _ML3TrackPropertyStartTime
|| __DATA_CONST.__const _ML3TrackPropertyStopTime
|| __DATA_CONST.__const _ML3TrackPropertyStoreAccountID
|| __DATA_CONST.__const _ML3TrackPropertyStoreAdvertisementType
|| __DATA_CONST.__const _ML3TrackPropertyStoreAdvertisementUniqueID
|| __DATA_CONST.__const _ML3TrackPropertyStoreArtworkURL
|| __DATA_CONST.__const _ML3TrackPropertyStoreBookmarkMetadataEntityRevision
|| __DATA_CONST.__const _ML3TrackPropertyStoreBookmarkMetadataIdentifier
|| __DATA_CONST.__const _ML3TrackPropertyStoreBookmarkMetadataTimestamp
|| __DATA_CONST.__const _ML3TrackPropertyStoreCloudAlbumID
|| __DATA_CONST.__const _ML3TrackPropertyStoreCloudAssetAvailable
|| __DATA_CONST.__const _ML3TrackPropertyStoreCloudInMyLibrary
|| __DATA_CONST.__const _ML3TrackPropertyStoreCloudPlaybackEndpointType
|| __DATA_CONST.__const _ML3TrackPropertyStoreCloudStatus
|| __DATA_CONST.__const _ML3TrackPropertyStoreCloudUniversalLibraryID
|| __DATA_CONST.__const _ML3TrackPropertyStoreComposerID
|| __DATA_CONST.__const _ML3TrackPropertyStoreDatePurchased
|| __DATA_CONST.__const _ML3TrackPropertyStoreDownloaderAccountID
|| __DATA_CONST.__const _ML3TrackPropertyStoreExtendedPlaybackAttribute
|| __DATA_CONST.__const _ML3TrackPropertyStoreExtrasURL
|| __DATA_CONST.__const _ML3TrackPropertyStoreFamilyAccountID
|| __DATA_CONST.__const _ML3TrackPropertyStoreFlavor
|| __DATA_CONST.__const _ML3TrackPropertyStoreGenreID
|| __DATA_CONST.__const _ML3TrackPropertyStoreIsArtistUploadedContent
|| __DATA_CONST.__const _ML3TrackPropertyStoreIsMasteredForiTunes
|| __DATA_CONST.__const _ML3TrackPropertyStoreIsSubscription
|| __DATA_CONST.__const _ML3TrackPropertyStoreItemID
|| __DATA_CONST.__const _ML3TrackPropertyStoreKeyID
|| __DATA_CONST.__const _ML3TrackPropertyStoreKeyID2
|| __DATA_CONST.__const _ML3TrackPropertyStoreKeyPlatformID
|| __DATA_CONST.__const _ML3TrackPropertyStoreKeyVersions
|| __DATA_CONST.__const _ML3TrackPropertyStoreLinkID
|| __DATA_CONST.__const _ML3TrackPropertyStoreLyricsAvailable
|| __DATA_CONST.__const _ML3TrackPropertyStoreMatchedStatus
|| __DATA_CONST.__const _ML3TrackPropertyStoreNeedsReporting
|| __DATA_CONST.__const _ML3TrackPropertyStorePlaybackEndpointType
|| __DATA_CONST.__const _ML3TrackPropertyStorePlaylistID
|| __DATA_CONST.__const _ML3TrackPropertyStoreProtectionType
|| __DATA_CONST.__const _ML3TrackPropertyStoreRadioStationID
|| __DATA_CONST.__const _ML3TrackPropertyStoreRedownloadParameters
|| __DATA_CONST.__const _ML3TrackPropertyStoreRedownloadedStatus
|| __DATA_CONST.__const _ML3TrackPropertyStoreSagaID
|| __DATA_CONST.__const _ML3TrackPropertyStoreStoreKind
|| __DATA_CONST.__const _ML3TrackPropertyStoreStorefrontID
|| __DATA_CONST.__const _ML3TrackPropertyStoreSyncInMyLibrary
|| __DATA_CONST.__const _ML3TrackPropertyStoreURL
|| __DATA_CONST.__const _ML3TrackPropertyStoreXID
|| __DATA_CONST.__const _ML3TrackPropertySubscriptionStoreItemID
|| __DATA_CONST.__const _ML3TrackPropertySubtitleLanguage
|| __DATA_CONST.__const _ML3TrackPropertySubtitleTrackIndex
|| __DATA_CONST.__const _ML3TrackPropertySyncID
|| __DATA_CONST.__const _ML3TrackPropertySyncRedownloadParams
|| __DATA_CONST.__const _ML3TrackPropertyTimeSyncedLyricsAvailable
|| __DATA_CONST.__const _ML3TrackPropertyTitle
|| __DATA_CONST.__const _ML3TrackPropertyTitleOrder
|| __DATA_CONST.__const _ML3TrackPropertyTitleOrderSection
|| __DATA_CONST.__const _ML3TrackPropertyTotalSize
|| __DATA_CONST.__const _ML3TrackPropertyTotalTime
|| __DATA_CONST.__const _ML3TrackPropertyTrackCount
|| __DATA_CONST.__const _ML3TrackPropertyTrackNumber
|| __DATA_CONST.__const _ML3TrackPropertyUserAlbumRating
|| __DATA_CONST.__const _ML3TrackPropertyUserAlbumRatingIsDerived
|| __DATA_CONST.__const _ML3TrackPropertyUserRating
|| __DATA_CONST.__const _ML3TrackPropertyUserRatingIsDerived
|| __DATA_CONST.__const _ML3TrackPropertyVPPIsLicensed
|| __DATA_CONST.__const _ML3TrackPropertyVPPOrgID
|| __DATA_CONST.__const _ML3TrackPropertyVPPOrgName
|| __DATA_CONST.__const _ML3TrackPropertyVerifiedIntegrity
|| __DATA_CONST.__const _ML3TrackPropertyVersion
|| __DATA_CONST.__const _ML3TrackPropertyVideoQuality
|| __DATA_CONST.__const _ML3TrackPropertyVolumeNormalization
|| __DATA_CONST.__const _ML3TrackPropertyYear
|| __DATA_CONST.__const _MLDatabaseOperationAttributeArtworkInterestDataKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeArtworkTokenKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeBundleIDKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeDownloadSourceContainerIDKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeDownloadedAssetArtworkPathKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeDownloadedAssetEntityTypeKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeDownloadedAssetGeniusDataPathKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeDownloadedAssetLyricsPathKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeDownloadedAssetPersistentIdKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeDownloadedAssetProtectionTypeKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeDownloadedAssetTrackPathKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeDownloadedAssetTrackPropertiesKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeDownloadedAssetsListKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeEntityClassKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeEntityURLsArrayKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributePersistentIDsArrayKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributePropertiesKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeStatementsKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeTestWaitTimeInterval
|| __DATA_CONST.__const _MLDatabaseOperationAttributeTrackSourceKey
|| __DATA_CONST.__const _MLDatabaseOperationAttributeValuesKey
|| __DATA_CONST.__const _MLDatabaseOperationOptionDatabasePathKey
|| __DATA_CONST.__const _MLDatabaseOperationOptionEnqueueSerially
|| __DATA_CONST.__const _MLDatabaseOperationOptionPriorityLevelKey
|| __DATA_CONST.__const _MLDatabaseOperationOptionReadOnlyKey
|| __DATA_CONST.__const _MLDatabaseOperationOptionTransactionIdentifierKey
|| __DATA_CONST.__const _MLDatabaseQueryOptionCountKey
|| __DATA_CONST.__const _MLDatabaseQueryOptionLimitPropertyKey
|| __DATA_CONST.__const _MLDatabaseQueryOptionLimitValueKey
|| __DATA_CONST.__const _MLDatabaseQueryOptionRangeBeginKey
|| __DATA_CONST.__const _MLImportOperationOptionHSBasePlaylistIdKey
|| __DATA_CONST.__const _MLImportOperationOptionIsResetSyncKey
|| __DATA_CONST.__const _MLImportOperationOptionIsSagaEnabledKey
|| __DATA_CONST.__const _MLImportOperationOptionPreferredVideoQualityKey
|| __DATA_CONST.__const _MLImportOperationOptionStoreAccountIdKey
|| __DATA_CONST.__const _MLImportOperationOptionSyncAnchorKey
|| __DATA_CONST.__const _MLMediaLibraryDefaultsDomain
|| __DATA_CONST.__const _MLMediaLibraryDidDeleteDatabaseNotification
|| __DATA_CONST.__const _MLMediaLibraryServiceDidTerminateTransactionNotification
|| __DATA_CONST.__const _MLMediaLibraryServiceMachServiceName
|| __DATA_CONST.__const _MLMediaLibraryServiceOptionLoggingLevelKey
|| __DATA_CONST.__const _MLMediaLibraryWillDeleteDatabaseNotification
|| __DATA_CONST.__const _MLMusicDefaultsDomain
|| __DATA_CONST.__const _MLMusicLibraryErrorDomain
|| __DATA_CONST.__const _MLTerminatedTransactionIdentifierKey
|| __DATA_CONST.__const _MLUserDatabasePathDidChangeNotification
|| __DATA_CONST.__const _MLWriterErrorDomain
|| __DATA_CONST.__objc_const _OBJC_EHTYPE_$_ML3DatabaseException
|| __DATA_CONST.__objc_const _OBJC_EHTYPE_$_MLException
|| __DATA_DIRTY.__common _sRestrictionSettingsInfo
|| __DATA_DIRTY.__data _sRestrictionSettingsLock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3ActiveTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3AggregateQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3Album
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3AlbumArtist
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3AllCompoundPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3AnyCompoundPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3Artist
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3Artwork
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3ArtworkConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3Client
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3Collection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3ComparisonPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3Composer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3CompoundPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3Container
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3ContainerQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DaemonClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseCachedRow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseConnectionPool
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseDistantConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseDistantResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseFunction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseFunctionBlock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseFunctionPointer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseImport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseImportManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseNaturalStatement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabasePrivacyContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseRow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseStatement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseStatementCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseStatementRenderer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseValidation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3DatabaseValidationClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3Entity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3Genre
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3LanguageResourceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3LanguageResources
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3LibraryNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3MediaLibraryWriter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3MusicLibrary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3MusicLibraryAccountChangeObserverProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3MusicLibraryResourcesManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3MusicLibraryResourcesManagerContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3MutableDatabaseImport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3NegationPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3OrderingTerm
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3PersistentIDGenerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3Predicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3PropertyPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3Query
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3QueryResultSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3TerminationCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3Track
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ML3UnaryPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MLMediaLibraryService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MLMediaLibraryServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MLTransactionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__ML3DatabaseConnectionSubPool
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__ML3DatabaseConnectionWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3ActiveTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3AggregateQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3Album
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3AlbumArtist
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3AllCompoundPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3AnyCompoundPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3Artist
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3Artwork
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3ArtworkConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3Client
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3Collection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3ComparisonPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3Composer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3CompoundPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3Container
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3ContainerQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DaemonClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseCachedRow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseConnectionPool
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseDistantConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseDistantResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseFunction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseFunctionBlock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseFunctionPointer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseImport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseImportManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseNaturalStatement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabasePrivacyContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseRow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseStatement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseStatementCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseStatementRenderer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseValidation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3DatabaseValidationClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3Entity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3Genre
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3LanguageResourceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3LanguageResources
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3LibraryNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3MediaLibraryWriter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3MusicLibrary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3MusicLibraryAccountChangeObserverProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3MusicLibraryResourcesManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3MusicLibraryResourcesManagerContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3MutableDatabaseImport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3NegationPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3OrderingTerm
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3PersistentIDGenerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3Predicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3PropertyPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3Query
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3QueryResultSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3TerminationCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3Track
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ML3UnaryPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MLMediaLibraryService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MLMediaLibraryServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MLTransactionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__ML3DatabaseConnectionSubPool
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__ML3DatabaseConnectionWrapper
|| __TEXT.__const _ITMediaKindAnyPodcast
|| __TEXT.__const _ITMediaKindForcedIntoAudioPlaylist
|| __TEXT.__const _ITMediaKindRentalBit
|| __TEXT.__const _ITMediaKindVideoPodcast
|| __TEXT.__text _CreateSQLExtensionsOnSqliteConnection
|| __TEXT.__text _DestroySQLExtensions
|| __TEXT.__text _ITDBPlaylistLimitFromSmartPlaylistLimit
|| __TEXT.__text _ITDBTrackOrderForTrackOrder
|| __TEXT.__text _ITMediaKindForMLMediaType
|| __TEXT.__text _MIPAlbumReadFrom
|| __TEXT.__text _MIPArtistReadFrom
|| __TEXT.__text _MIPAudiobookReadFrom
|| __TEXT.__text _MIPGenreReadFrom
|| __TEXT.__text _MIPLibraryIdentifierReadFrom
|| __TEXT.__text _MIPMediaItemReadFrom
|| __TEXT.__text _MIPMovieReadFrom
|| __TEXT.__text _MIPMultiverseIdentifierReadFrom
|| __TEXT.__text _MIPPlaybackInfoReadFrom
|| __TEXT.__text _MIPPlaylistReadFrom
|| __TEXT.__text _MIPPodcastReadFrom
|| __TEXT.__text _MIPSeriesReadFrom
|| __TEXT.__text _MIPSmartPlaylistInfoReadFrom
|| __TEXT.__text _MIPSongReadFrom
|| __TEXT.__text _MIPTVShowReadFrom
|| __TEXT.__text _ML3ArtworkArtworkCacheDirectoryForEffect
|| __TEXT.__text _ML3ArtworkArtworkCacheDirectoryForSize
|| __TEXT.__text _ML3ArtworkAssetFileExtensions
|| __TEXT.__text _ML3ArtworkConfigurationArtworkTypeForString
|| __TEXT.__text _ML3ArtworkConfigurationMediaTypeForString
|| __TEXT.__text _ML3ArtworkConfigurationStringForArtworkType
|| __TEXT.__text _ML3ArtworkConfigurationStringForMediaType
|| __TEXT.__text _ML3ArtworkDevicePreferredImageFormat
|| __TEXT.__text _ML3ArtworkDeviceSupportsASTC
|| __TEXT.__text _ML3ArtworkDirectory
|| __TEXT.__text _ML3ArtworkHasOriginalArtwork
|| __TEXT.__text _ML3ArtworkIsArtworkFetchable
|| __TEXT.__text _ML3ArtworkOriginalArtworkDirectory
|| __TEXT.__text _ML3ArtworkRelativePathFromToken
|| __TEXT.__text _ML3ArtworkRootArtworkCacheDirectory
|| __TEXT.__text _ML3ArtworkSourceTypeForTrackSource
|| __TEXT.__text _ML3ArtworkTokenForArtistHeroArtwork
|| __TEXT.__text _ML3ArtworkTokenForChapterArtwork
|| __TEXT.__text _ML3BaseLocationIDFromMediaRelativePathInLibrary
|| __TEXT.__text _ML3CFAbsoluteTimeFromUInt32MacTime
|| __TEXT.__text _ML3CompoundSortKey
|| __TEXT.__text _ML3ContainerRulesIdentityImportPropertyForSource
|| __TEXT.__text _ML3ContainerRulesIdentityPropertyForSource
|| __TEXT.__text _ML3ContainerRulesRemovalSourceIdentityPropertyForSource
|| __TEXT.__text _ML3CopyDatabase
|| __TEXT.__text _ML3CopyUTF8StringFromCFString
|| __TEXT.__text _ML3CreateIntegerUUID
|| __TEXT.__text _ML3CreateNumberUUID
|| __TEXT.__text _ML3DAAPCodeForImportPropertyKey
|| __TEXT.__text _ML3DatabaseCreateCorruptionError
|| __TEXT.__text _ML3DatabaseCreateDiskIOError
|| __TEXT.__text _ML3DatabaseImportDataForDAAPFilePaths
|| __TEXT.__text _ML3DatabaseRowInt64ForColumnIndex
|| __TEXT.__text _ML3DatabaseRowIntForColumnIndex
|| __TEXT.__text _ML3DefineCol
|| __TEXT.__text _ML3DeleteAssetsAtPaths
|| __TEXT.__text _ML3DeviceIsUnlocked
|| __TEXT.__text _ML3FairPlayHardwareID
|| __TEXT.__text _ML3GetDiskUsageForPath
|| __TEXT.__text _ML3GetOldStringForKind
|| __TEXT.__text _ML3GetStringForKind
|| __TEXT.__text _ML3HasExplicitContentRestriction
|| __TEXT.__text _ML3ImportDefaultExcludeFromShuffle
|| __TEXT.__text _ML3ImportDefaultRememberBookmarkTime
|| __TEXT.__text _ML3IsCurrentlyRestrictedMedia
|| __TEXT.__text _ML3IsFirstPartyMediaApplication
|| __TEXT.__text _ML3IsMemorySQLiteDatabasePath
|| __TEXT.__text _ML3IsUIApplication
|| __TEXT.__text _ML3KindForString
|| __TEXT.__text _ML3KindsPassingTest
|| __TEXT.__text _ML3LocalizationLanguageCanonicalIdentifier
|| __TEXT.__text _ML3LocalizedSectionDictionary
|| __TEXT.__text _ML3LocalizedSortingDetailsDictionary
|| __TEXT.__text _ML3LogCopyCategoryDefaultsKey
|| __TEXT.__text _ML3LogSQLiteProfilingMessage
|| __TEXT.__text _ML3MLMediaTypeForProtocolMediaType
|| __TEXT.__text _ML3MediaAssetFileExtensions
|| __TEXT.__text _ML3MemorySQLiteDatabasePathWithName
|| __TEXT.__text _ML3MigrationArtworkCacheDirectoryAsOf1160130
|| __TEXT.__text _ML3MigrationArtworkCacheDirectoryAsOf1160160
|| __TEXT.__text _ML3MigrationArtworkCacheDirectoryAsOf1410210
|| __TEXT.__text _ML3MigrationArtworkCacheDirectoryAsOf1450060
|| __TEXT.__text _ML3MigrationArtworkCacheDirectoryAsOf1450090
|| __TEXT.__text _ML3MigrationArtworkCacheDirectoryAsOf1510030
|| __TEXT.__text _ML3MigrationArtworkCacheDirectoryAsOf1910000
|| __TEXT.__text _ML3MigrationArtworkCacheDirectoryBefore1160160
|| __TEXT.__text _ML3MigrationArtworkDirectoryAsOf1160030
|| __TEXT.__text _ML3MigrationArtworkDirectoryAsOf1160130
|| __TEXT.__text _ML3MigrationArtworkDirectoryAsOf1410060
|| __TEXT.__text _ML3MigrationArtworkOriginalsDirectoryAsOf1160160
|| __TEXT.__text _ML3MigrationArtworkOriginalsDirectoryBefore1160160
|| __TEXT.__text _ML3MigrationColumnExistsInTable
|| __TEXT.__text _ML3MigrationCreateNewAlbumForMisgroupedTracks
|| __TEXT.__text _ML3MigrationExecuteSQLArray
|| __TEXT.__text _ML3MigrationFunctionForLibraryVersion
|| __TEXT.__text _ML3MigrationGetLatestVersion
|| __TEXT.__text _ML3MigrationMigrateLibraryToCurrentVersion
|| __TEXT.__text _ML3MigrationModifyTableWithResultingSchema
|| __TEXT.__text _ML3MigrationPathFromArtworkCacheIDAsOf1160030
|| __TEXT.__text _ML3MigrationRelativePathFromArtworkComponentsAsOf1160030
|| __TEXT.__text _ML3MigrationRelativePathFromArtworkTokenAsOf1160130
|| __TEXT.__text _ML3MigrationRemoveInvalidContainerItems
|| __TEXT.__text _ML3MigrationRemoveLocationsForItemsMissingAssets
|| __TEXT.__text _ML3MigrationRemoveNonLibraryItemsFromContainers
|| __TEXT.__text _ML3MigrationStoreBookeeperDatabaseFilePathAsOf1450020
|| __TEXT.__text _ML3MigrationStoreBookeeperDatabaseFilePathsAsOf1450020
|| __TEXT.__text _ML3MigrationTemporaryPathFromPath
|| __TEXT.__text _ML3MigrationUpdateAllBestArtworkTokens
|| __TEXT.__text _ML3NonQualifiedColumnNameFromProperty
|| __TEXT.__text _ML3OfflineHLSFileExtensions
|| __TEXT.__text _ML3ProtocolMediaTypeForMLMediaType
|| __TEXT.__text _ML3RemovePathsFromPurchaseManifests
|| __TEXT.__text _ML3RepairFilePermissions
|| __TEXT.__text _ML3RestrictionInfoInitializeIfNecessary
|| __TEXT.__text _ML3RestrictionInfoUninitialize
|| __TEXT.__text _ML3RestrictionRankInfoInitialize
|| __TEXT.__text _ML3RestrictionRankInfoIsRestrictedLevel
|| __TEXT.__text _ML3SQLiteResultIsCorruption
|| __TEXT.__text _ML3SearchStringMatch
|| __TEXT.__text _ML3SeasonDisplayName
|| __TEXT.__text _ML3ShowDuplicateVideoAlert
|| __TEXT.__text _ML3SortString
|| __TEXT.__text _ML3SortStringWithPrefix
|| __TEXT.__text _ML3SpotlightMatch
|| __TEXT.__text _ML3SpotlightMatchPredicateNameForID
|| __TEXT.__text _ML3TrackDigestCompute
|| __TEXT.__text _ML3TrackIntegrityCompute
|| __TEXT.__text _ML3TrackIntegrityComputeFromTrackData
|| __TEXT.__text _ML3TrackIntegrityVerify
|| __TEXT.__text _ML3TrackRulesGetCount
|| __TEXT.__text _ML3TrackRulesGetInsertionRule
|| __TEXT.__text _ML3TrackRulesGetPropertyDatatype
|| __TEXT.__text _ML3TrackRulesGetPropertyIndex
|| __TEXT.__text _ML3TrackRulesGetPropertyKey
|| __TEXT.__text _ML3TrackRulesGetPropertyName
|| __TEXT.__text _ML3TrackRulesGetPropertyNameForKey
|| __TEXT.__text _ML3TrackRulesIdentityImportPropertyForSource
|| __TEXT.__text _ML3TrackRulesIdentityPropertyForSource
|| __TEXT.__text _ML3TrackRulesMediaTypesForSource
|| __TEXT.__text _ML3TrackRulesRemovalPropertiesForSource
|| __TEXT.__text _ML3TrackRulesRemovalSourceIdentityPropertyForSource
|| __TEXT.__text _ML3TrackRulesRemoveLocalAssetForSource
|| __TEXT.__text _ML3TrackRulesShouldPreferMaximumValue
|| __TEXT.__text _ML3TrackRulesShouldSetRemovalPropertiesOnAssetDeleteForSource
|| __TEXT.__text _ML3TruncateDatabase
|| __TEXT.__text _ML3UInt32MacTimeFromCFAbsoluteTime
|| __TEXT.__text _ML3ValidationRunInitialInsertStatements
|| __TEXT.__text _MLAllLocalizedPresetNames
|| __TEXT.__text _MLChapterDataSetASCIIValue
|| __TEXT.__text _MLChapterDataSetUTF16Value
|| __TEXT.__text _MLDescriptionFromChapterData
|| __TEXT.__text _MLEntityClassForType
|| __TEXT.__text _MLExceptionsEnabled
|| __TEXT.__text _MLExtendedRatingInfoDictionaryFromString
|| __TEXT.__text _MLExtendedRatingStringFromDictionary
|| __TEXT.__text _MLFrameworkBundle
|| __TEXT.__text _MLGetSeasonNumberForLocalizedSeasonDisplayString
|| __TEXT.__text _MLIsMediaLibraryDaemon
|| __TEXT.__text _MLLocalizedPresetNameForPresetName
|| __TEXT.__text _MLLocalizedSeasonDisplayStringForSeasonNumber
|| __TEXT.__text _MLMediaTypeByStandardizingMediaType
|| __TEXT.__text _MLMediaTypeForITMediaKind
|| __TEXT.__text _MLMobileUserHomeDirectory
|| __TEXT.__text _MLNSStringForBuiltInPreset
|| __TEXT.__text _MLParsedSmartInfoFromData
|| __TEXT.__text _MLPresetNameForLocalizedPresetName
|| __TEXT.__text _MLSQLiteExtendedResultString
|| __TEXT.__text _MLScaledVolumeAdjustmentFromITValue
|| __TEXT.__text _MLScaledVolumeNormalizationFromITValue
|| __TEXT.__text _MLServiceLockReasonDescription
|| __TEXT.__text _MLSetExceptionsEnabled
|| __TEXT.__text _MLSetSQLiteAutoTraceEnabled
|| __TEXT.__text _MLVolumeAdjustmentFromScaledValue
|| __TEXT.__text _MSPMediaSyncErrorReadFrom
|| __TEXT.__text _MSPMediaSyncHeaderReadFrom
|| __TEXT.__text _MSPMediaSyncOperationReadFrom
|| __TEXT.__text _MSPMediaSyncPackageReadFrom
|| __TEXT.__text _NSPersistentStringFromMLMediaType
|| __TEXT.__text _NSStringCreateWithUStr255
|| __TEXT.__text _NSStringCreateWithUStr255NoCopy
|| __TEXT.__text _NSStringFromITDBTrackField
|| __TEXT.__text _NSStringFromITMediaKind
|| __TEXT.__text _NSStringFromMLMediaType
|| __TEXT.__text _NSStringFromOSType
|| __TEXT.__text _SQLFunctionName_CFTimeRelativeToEndOfToday
|| __TEXT.__text _SQLFunctionName_CFTimeRelativeToStartOfToday
|| __TEXT.__text _SQLFunctionName_FindRowForRunningSum
|| __TEXT.__text _SmartPlaylistLimitFromITDBPlaylistLimit
|| __TEXT.__text _TrackOrderForDAAPSortType
|| __TEXT.__text _TrackOrderForITDBTrackOrder
|| __TEXT.__text _iPhoneSortKeyBuilderCopyGroupingKeyForString
|| __TEXT.__text _iPhoneSortKeyBuilderCopySectionSortKey
|| __TEXT.__text _iPhoneSortKeyBuilderCopyVersionData
|| __TEXT.__text _iPhoneSortKeyBuilderCreate
|| __TEXT.__text _iPhoneSortKeyBuilderCreateForCurrentDevice
|| __TEXT.__text _iPhoneSortKeyBuilderCreateFromUTF16String
|| __TEXT.__text _iPhoneSortKeyBuilderGetHeaderForSection
|| __TEXT.__text _iPhoneSortKeyBuilderGetLanguageCount
|| __TEXT.__text _iPhoneSortKeyBuilderGetLanguageIndex
|| __TEXT.__text _iPhoneSortKeyBuilderGetMaxSectionSortKeyLength
|| __TEXT.__text _iPhoneSortKeyBuilderGetSectionCountForLanguage
|| __TEXT.__text _iPhoneSortKeyBuilderGetSectionFromiPhoneSortKey
|| __TEXT.__text _iPhoneSortKeyBuilderGetUnknownSectionIndex
|| __TEXT.__text _iPhoneSortKeyBuilderInstallSqlite3_v2
|| __TEXT.__text _iPhoneSortKeyBuilderRelease
|| __TEXT.__text _iPhoneSortKeyBuilderRetain
|| __TEXT.__text _iPhoneSortKeyBuilderUninstallSqlite3
__ AVFoundation: _AVMetadataCommonKeyArtwork
__ AVFoundation: _AVMetadataCommonKeyTitle
__ AVFoundation: _AVMetadataExtraAttributeHREFKey
__ AVFoundation: _OBJC_CLASS_$_AVAssetImageGenerator
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ Accounts: _ACAccountTypeIdentifieriTunesStore
__ Accounts: _ACDAccountStoreDidChangeNotification
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppSupport: _CPCopyBundleIdentifierAndTeamFromAuditToken
__ AppSupport: _OBJC_CLASS_$_CPSearchMatcher
__ AppSupport: _kCPSearchMatcherCaseInsensitive
__ AppSupport: _kCPSearchMatcherDiacriticInsensitive
__ AppSupport: _kCPSearchMatcherPunctuationInsensitive
__ AppleMediaServices: _OBJC_CLASS_$_AMSBag
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAllocatorAllocate
__ CoreFoundation: _CFAllocatorDeallocate
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFCalendarComposeAbsoluteTime
__ CoreFoundation: _CFCalendarCreateWithIdentifier
__ CoreFoundation: _CFCalendarDecomposeAbsoluteTime
__ CoreFoundation: _CFCharacterSetGetPredefined
__ CoreFoundation: _CFCharacterSetIsCharacterMember
__ CoreFoundation: _CFDataAppendBytes
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataCreateWithBytesNoCopy
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFLocaleCopyCurrent
__ CoreFoundation: _CFLocaleCreate
__ CoreFoundation: _CFLocaleCreateCanonicalLanguageIdentifierFromString
__ CoreFoundation: _CFLocaleGetIdentifier
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetType
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringCreateWithBytesNoCopy
__ CoreFoundation: _CFStringCreateWithCharacters
__ CoreFoundation: _CFStringCreateWithCharactersNoCopy
__ CoreFoundation: _CFStringCreateWithFileSystemRepresentation
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringFindWithOptions
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetFastestEncoding
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetMaximumSizeForEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringHasPrefix
__ CoreFoundation: _CFStringReplaceAll
__ CoreFoundation: _CFStringTokenizerAdvanceToNextToken
__ CoreFoundation: _CFStringTokenizerCopyCurrentTokenAttribute
__ CoreFoundation: _CFStringTokenizerCreate
__ CoreFoundation: _CFStringTokenizerSetString
__ CoreFoundation: _CFStringTransform
__ CoreFoundation: _CFTimeZoneCopySystem
__ CoreFoundation: _CFTimeZoneGetSecondsFromGMT
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDGetUUIDBytes
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSURLCreationDateKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSData
__ CoreFoundation: _OBJC_METACLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_METACLASS_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_METACLASS_$_NSMutableDictionary
__ CoreFoundation: __NSIsNSDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAbsoluteTimeIntervalSince1904
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorMalloc
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFGregorianCalendar
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFStringTransformLatinHiragana
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGSizeZero
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreSpotlight: _CSMediaTypeHomeVideo
__ CoreSpotlight: _CSMediaTypeMovie
__ CoreSpotlight: _CSMediaTypeMusicVideo
__ CoreSpotlight: _CSMediaTypeSong
__ CoreSpotlight: _CSMediaTypeTVShow
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableIndex
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableItem
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableItemAttributeSet
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSFileCreationDate
__ Foundation: _NSFileModificationDate
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileSize
__ Foundation: _NSFileType
__ Foundation: _NSFileTypeDirectory
__ Foundation: _NSFileTypeRegular
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ ImageIO: _CGImageDestinationFinalize
__ ManagedConfiguration: _MCEffectiveSettingsChangedNotification
__ ManagedConfiguration: _MCFeatureBookstoreEroticaAllowed
__ ManagedConfiguration: _MCFeatureExplicitContentAllowed
__ ManagedConfiguration: _MCFeatureMaximumMoviesRating
__ ManagedConfiguration: _MCFeatureMaximumTVShowsRating
__ ManagedConfiguration: _MCFeatureMusicVideosAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MediaLibraryCore: _AppendNestedSearchCriteriaList
__ MediaLibraryCore: _AppendNumericSearchCriterion
__ MediaLibraryCore: _AppendSearchCriterion
__ MediaLibraryCore: _AppendUStringSearchCriterion
__ MediaLibraryCore: _AppendValueRangeSearchCriterion
__ MediaLibraryCore: _ChapterData_CopyProperty
__ MediaLibraryCore: _ChapterData_Create
__ MediaLibraryCore: _ChapterData_CreateWithFlattenedData
__ MediaLibraryCore: _ChapterData_ExportFlattenedData
__ MediaLibraryCore: _ChapterData_FindURLForTime
__ MediaLibraryCore: _ChapterData_FindURLTitleForTime
__ MediaLibraryCore: _ChapterData_GetFlags
__ MediaLibraryCore: _ChapterData_GetIndChapterTime
__ MediaLibraryCore: _ChapterData_GetNameCookieForTime
__ MediaLibraryCore: _ChapterData_GetNumChapters
__ MediaLibraryCore: _ChapterData_GetPictureCookieForTime
__ MediaLibraryCore: _ChapterData_GetURLCookieForTime
__ MediaLibraryCore: _ChapterData_NewChapter
__ MediaLibraryCore: _ChapterData_Release
__ MediaLibraryCore: _ChapterData_Retain
__ MediaLibraryCore: _ChapterData_SetProperty
__ MediaLibraryCore: _CountSearchCriteria
__ MediaLibraryCore: _DisposeSearchCriteriaList
__ MediaLibraryCore: _GetSearchCriteriaListOptions
__ MediaLibraryCore: _GetSearchCriterionInfo
__ MediaLibraryCore: _GetSearchCriterionInfoBooleanValue
__ MediaLibraryCore: _GetSearchCriterionInfoNumericValue
__ MediaLibraryCore: _GetSearchCriterionInfoValueRange
__ MediaLibraryCore: _GetValueRangeCriteriaEndValue
__ MediaLibraryCore: _GetValueRangeCriteriaStartValue
__ MediaLibraryCore: _ITImportSearchCriteriaList
__ MediaLibraryCore: _InitValueRangeCriteria
__ MediaLibraryCore: _LockSearchCriteriaList
__ MediaLibraryCore: _NewSearchCriteriaList
__ MediaLibraryCore: _UnlockSearchCriteriaList
__ MediaServices: _MSVArtworkServiceErrorDomain
__ MediaServices: _MSVAutoBugCaptureDomainMediaLibrary
__ MediaServices: _MSVAutoBugCaptureDomainMusicLibrary
__ MediaServices: _MSVBundleIDForAuditToken
__ MediaServices: _MSVCreateTemporaryFileHandle
__ MediaServices: _MSVDeviceIsAppleTV
__ MediaServices: _MSVDeviceIsWatch
__ MediaServices: _MSVDeviceIsiPad
__ MediaServices: _MSVDeviceOSIsInternalInstall
__ MediaServices: _MSVDeviceSupportsExtendedColorDisplay
__ MediaServices: _MSVDeviceSupportsMultipleLibraries
__ MediaServices: _MSVDeviceSupportsSideLoadedMediaContent
__ MediaServices: _MSVGetKernelBootTime
__ MediaServices: _MSVGetMaximumScreenScale
__ MediaServices: _MSVGetMaximumScreenSize
__ MediaServices: _MSVHomeSharingCacheDirectory
__ MediaServices: _MSVImageUtilitiesAddImageToDestination
__ MediaServices: _MSVImageUtilitiesAddJPEGToDestination
__ MediaServices: _MSVImageUtilitiesCreateDataImageDestination
__ MediaServices: _MSVImageUtilitiesMakeBoundingBoxSize
__ MediaServices: _MSVMediaLoggingDirectory
__ MediaServices: _MSVMobileHomeDirectory
__ MediaServices: _MSVProcessIsRunning
__ MediaServices: _MSVPropertyListDataClasses
__ MediaServices: _MSVTCCIdentityForCurrentProcess
__ MediaServices: _MSVUnarchivedObjectOfClasses
__ MediaServices: _OBJC_CLASS_$_MSVArtworkService
__ MediaServices: _OBJC_CLASS_$_MSVArtworkServiceConversionRequest
__ MediaServices: _OBJC_CLASS_$_MSVArtworkServiceResizeRequest
__ MediaServices: _OBJC_CLASS_$_MSVAsyncOperation
__ MediaServices: _OBJC_CLASS_$_MSVAutoBugCapture
__ MediaServices: _OBJC_CLASS_$_MSVDistributedNotificationObserver
__ MediaServices: _OBJC_CLASS_$_MSVLRUDictionary
__ MediaServices: _OBJC_CLASS_$_MSVStreamWriter
__ MediaServices: _OBJC_CLASS_$_MSVSystemDialog
__ MediaServices: _OBJC_CLASS_$_MSVSystemDialogOptions
__ MediaServices: _OBJC_CLASS_$_MSVTaskAssertion
__ MediaServices: _OBJC_CLASS_$_MSVXPCTransaction
__ MediaServices: _OBJC_METACLASS_$_MSVAsyncOperation
__ MobileKeyBag: _MKBGetDeviceLockState
__ PrivacyAccounting: _OBJC_CLASS_$_PAAccessLogger
__ PrivacyAccounting: _OBJC_CLASS_$_PAApplication
__ PrivacyAccounting: _OBJC_CLASS_$_PATCCAccess
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBDataReader
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteBareVarint
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderReadVarIntBuf
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ SoftLinking: __sl_dlopen
__ TCC: _TCCAccessPreflight
__ TCC: _TCCAccessReset
__ TCC: _kTCCServiceMediaLibrary
__ UniformTypeIdentifiers: _UTTypeAudio
__ UniformTypeIdentifiers: _UTTypePlaylist
__ UniformTypeIdentifiers: _UTTypeVideo
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_MD5_Final
__ libSystem.B.dylib: _CC_MD5_Init
__ libSystem.B.dylib: _CC_MD5_Update
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: _CC_SHA256_Final
__ libSystem.B.dylib: _CC_SHA256_Update
__ libSystem.B.dylib: _CC_SHA512_Final
__ libSystem.B.dylib: _CC_SHA512_Update
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___cxa_atexit
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___sprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_read
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _atof
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _chown
__ libSystem.B.dylib: _closedir
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fmtcheck
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getattrlist
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getpwnam
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _ldiv
__ libSystem.B.dylib: _lldiv
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_msg_destroy
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _mig_dealloc_reply_port
__ libSystem.B.dylib: _mig_get_reply_port
__ libSystem.B.dylib: _mig_put_reply_port
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _opendir
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pthread_cond_broadcast
__ libSystem.B.dylib: _pthread_cond_destroy
__ libSystem.B.dylib: _pthread_cond_init
__ libSystem.B.dylib: _pthread_cond_wait
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_rwlock_destroy
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _pthread_rwlock_rdlock
__ libSystem.B.dylib: _pthread_rwlock_unlock
__ libSystem.B.dylib: _pthread_rwlock_wrlock
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _readdir
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _setenv
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _srandom
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _unsetenv
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _vm_allocate
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _voucher_mach_msg_set
__ libSystem.B.dylib: _wmemset
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
__ libc++.1.dylib: __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IwE10do_unshiftER11__mbstate_tPcS4_RS4_
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IwE11do_encodingEv
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IwE13do_max_lengthEv
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IwE16do_always_noconvEv
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IwE5do_inER11__mbstate_tPKcS5_RS5_PwS7_RS7_
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IwE6do_outER11__mbstate_tPKwS5_RS5_PcS7_RS7_
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IwE9do_lengthER11__mbstate_tPKcS5_m
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt11logic_errorC1EPKc
__ libc++.1.dylib: __ZNSt11logic_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt11logic_errorD1Ev
__ libc++.1.dylib: __ZNSt11range_errorD1Ev
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt12out_of_rangeD1Ev
__ libc++.1.dylib: __ZNSt13runtime_errorC2EPKc
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112bad_weak_ptrD1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwm
__ libc++.1.dylib: __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6resizeEmw
__ libc++.1.dylib: __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm
__ libc++.1.dylib: __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw
__ libc++.1.dylib: __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4openEPKcj
__ libc++.1.dylib: __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE5closeEv
__ libc++.1.dylib: __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC1Ev
__ libc++.1.dylib: __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE4peekEv
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE4readEPcl
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE5seekgExNS_8ios_base7seekdirE
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEx
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count4lockEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16locale5facet16__on_zero_sharedEv
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__17codecvtIwc11__mbstate_tEC2Em
__ libc++.1.dylib: __ZNSt3__17codecvtIwc11__mbstate_tED2Ev
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__19to_stringEj
__ libc++.1.dylib: __ZNSt3__19to_stringEm
__ libc++.1.dylib: __ZNSt9exceptionD2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__112bad_weak_ptrE
__ libc++.1.dylib: __ZTINSt3__119__shared_weak_countE
__ libc++.1.dylib: __ZTINSt3__120__codecvt_utf8_utf16IwEE
__ libc++.1.dylib: __ZTISt11logic_error
__ libc++.1.dylib: __ZTISt11range_error
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTISt12out_of_range
__ libc++.1.dylib: __ZTISt18bad_variant_access
__ libc++.1.dylib: __ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv121__vmi_class_type_infoE
__ libc++.1.dylib: __ZTVNSt3__112bad_weak_ptrE
__ libc++.1.dylib: __ZTVNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVSt11range_error
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZTVSt12out_of_range
__ libc++.1.dylib: __ZTVSt18bad_variant_access
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libicucore.A.dylib: _u_errorName
__ libicucore.A.dylib: _ucol_close
__ libicucore.A.dylib: _ucol_getBound
__ libicucore.A.dylib: _ucol_getSortKey
__ libicucore.A.dylib: _ucol_getVersion
__ libicucore.A.dylib: _ucol_nextSortKeyPart
__ libicucore.A.dylib: _ucol_open
__ libicucore.A.dylib: _ucol_setAttribute
__ libicucore.A.dylib: _uiter_setString
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_ehtype_vtable
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_getName
__ libsqlite3.dylib: _sqlite3_aggregate_context
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_parameter_index
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_bind_text16
__ libsqlite3.dylib: _sqlite3_blob_bytes
__ libsqlite3.dylib: _sqlite3_blob_close
__ libsqlite3.dylib: _sqlite3_blob_open
__ libsqlite3.dylib: _sqlite3_blob_read
__ libsqlite3.dylib: _sqlite3_blob_write
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_name
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_create_function
__ libsqlite3.dylib: _sqlite3_create_function_v2
__ libsqlite3.dylib: _sqlite3_create_module
__ libsqlite3.dylib: _sqlite3_db_config
__ libsqlite3.dylib: _sqlite3_declare_vtab
__ libsqlite3.dylib: _sqlite3_errcode
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_extended_errcode
__ libsqlite3.dylib: _sqlite3_extended_result_codes
__ libsqlite3.dylib: _sqlite3_file_control
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_get_auxdata
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_next_stmt
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_result_blob
__ libsqlite3.dylib: _sqlite3_result_double
__ libsqlite3.dylib: _sqlite3_result_error
__ libsqlite3.dylib: _sqlite3_result_error_nomem
__ libsqlite3.dylib: _sqlite3_result_int
__ libsqlite3.dylib: _sqlite3_result_int64
__ libsqlite3.dylib: _sqlite3_result_null
__ libsqlite3.dylib: _sqlite3_result_text
__ libsqlite3.dylib: _sqlite3_result_value
__ libsqlite3.dylib: _sqlite3_set_authorizer
__ libsqlite3.dylib: _sqlite3_set_auxdata
__ libsqlite3.dylib: _sqlite3_sql
__ libsqlite3.dylib: _sqlite3_step
__ libsqlite3.dylib: _sqlite3_stmt_busy
__ libsqlite3.dylib: _sqlite3_stmt_readonly
__ libsqlite3.dylib: _sqlite3_user_data
__ libsqlite3.dylib: _sqlite3_value_blob
__ libsqlite3.dylib: _sqlite3_value_bytes
__ libsqlite3.dylib: _sqlite3_value_bytes16
__ libsqlite3.dylib: _sqlite3_value_double
__ libsqlite3.dylib: _sqlite3_value_int
__ libsqlite3.dylib: _sqlite3_value_int64
__ libsqlite3.dylib: _sqlite3_value_text
__ libsqlite3.dylib: _sqlite3_value_text16
__ libsqlite3.dylib: _sqlite3_value_type
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit_
ML3AccountStore : NSObject <_MSVAccountInformationProviding>
 @property  ACAccount *activeAccount
 @property  NSString *accountDSID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ML3AccountStore defaultStore]

  // instance methods
  -[ML3AccountStore accountDSID]
  -[ML3AccountStore activeAccount]
  -[ML3AccountStore _init]
  -[ML3AccountStore altDSIDForAccountWithDSID:options:error:]
  -[ML3AccountStore _accountsWithAccountTypeIdentifier:options:error:]


ML3DatabaseForeignKeyConstraint : NSObject
 @property  ML3DatabaseTable *foreignTable
 @property  NSArray *localColumns
 @property  NSArray *foreignColumns

  // instance methods
  -[ML3DatabaseForeignKeyConstraint .cxx_destruct]
  -[ML3DatabaseForeignKeyConstraint initWithForeignTable:localColumns:foreignColumns:]
  -[ML3DatabaseForeignKeyConstraint _foreignKeyClauseSQL]
  -[ML3DatabaseForeignKeyConstraint foreignTable]
  -[ML3DatabaseForeignKeyConstraint localColumns]
  -[ML3DatabaseForeignKeyConstraint foreignColumns]


ML3UpdateArtworkInterestDataOperation : ML3DatabaseOperation
  // instance methods
  -[ML3UpdateArtworkInterestDataOperation type]
  -[ML3UpdateArtworkInterestDataOperation _execute:]
  -[ML3UpdateArtworkInterestDataOperation _verifyLibraryConnectionAndAttributesProperties:]


ML3ArtworkTokenSet : NSObject
 @property  double retrievalTime
 @property  NSString *availableArtworkToken
 @property  NSString *fetchableArtworkToken
 @property  long long fetchableArtworkSourceType

  // instance methods
  -[ML3ArtworkTokenSet .cxx_destruct]
  -[ML3ArtworkTokenSet availableArtworkToken]
  -[ML3ArtworkTokenSet fetchableArtworkToken]
  -[ML3ArtworkTokenSet retrievalTime]
  -[ML3ArtworkTokenSet setRetrievalTime:]
  -[ML3ArtworkTokenSet initWithEntity:artworkType:]
  -[ML3ArtworkTokenSet fetchableArtworkSourceType]
  -[ML3ArtworkTokenSet artworkTokenForSource:]
  -[ML3ArtworkTokenSet _faultInBestTokens]
  -[ML3ArtworkTokenSet _faultInTokens]


MLEQPreset : NSObject
  // class methods
  +[MLEQPreset eqPresetForName:]
  +[MLEQPreset eqPresetForBuiltInPresetType:]

  // instance methods
  -[MLEQPreset .cxx_destruct]
  -[MLEQPreset localizedName]
  -[MLEQPreset name]
  -[MLEQPreset initWithBuiltInPresetType:]
  -[MLEQPreset builtInPresetType]
  -[MLEQPreset typeForAVController]


ML3ProcessClient : ML3Client
  // class methods
  +[ML3ProcessClient sharedProcessClient]

  // instance methods
  -[ML3ProcessClient name]
  -[ML3ProcessClient bundleID]
  -[ML3ProcessClient processID]
  -[ML3ProcessClient init]


ML3DatabaseColumn : NSObject
 @property  NSString *name
 @property  unsigned long datatype
 @property  unsigned long columnConstraints
 @property  id defaultValue

  // class methods
  +[ML3DatabaseColumn columnWithName:datatype:constraints:defaultValue:]

  // instance methods
  -[ML3DatabaseColumn defaultValue]
  -[ML3DatabaseColumn .cxx_destruct]
  -[ML3DatabaseColumn name]
  -[ML3DatabaseColumn datatype]
  -[ML3DatabaseColumn initWithName:datatype:constraints:defaultValue:]
  -[ML3DatabaseColumn _columnDefinitionSQL]
  -[ML3DatabaseColumn columnConstraints]


MIPTVShow : PBCodable <NSCopying>
 @property  BOOL hasArtist
 @property  MIPArtist *artist
 @property  BOOL hasSeries
 @property  MIPSeries *series
 @property  BOOL hasSeasonNumber
 @property  int seasonNumber
 @property  BOOL hasEpisodeId
 @property  NSString *episodeId
 @property  BOOL hasEpisodeSortId
 @property  NSString *episodeSortId
 @property  BOOL hasVideoQuality
 @property  int videoQuality
 @property  BOOL hasNetworkName
 @property  NSString *networkName

  // instance methods
  -[MIPTVShow networkName]
  -[MIPTVShow seasonNumber]
  -[MIPTVShow setVideoQuality:]
  -[MIPTVShow videoQuality]
  -[MIPTVShow hasArtist]
  -[MIPTVShow copyTo:]
  -[MIPTVShow hasSeasonNumber]
  -[MIPTVShow setHasSeasonNumber:]
  -[MIPTVShow setNetworkName:]
  -[MIPTVShow .cxx_destruct]
  -[MIPTVShow mergeFrom:]
  -[MIPTVShow artist]
  -[MIPTVShow setSeasonNumber:]
  -[MIPTVShow dictionaryRepresentation]
  -[MIPTVShow copyWithZone:]
  -[MIPTVShow setArtist:]
  -[MIPTVShow readFrom:]
  -[MIPTVShow writeTo:]
  -[MIPTVShow isEqual:]
  -[MIPTVShow series]
  -[MIPTVShow hasSeries]
  -[MIPTVShow hasEpisodeId]
  -[MIPTVShow hasEpisodeSortId]
  -[MIPTVShow setHasVideoQuality:]
  -[MIPTVShow hasVideoQuality]
  -[MIPTVShow hasNetworkName]
  -[MIPTVShow setSeries:]
  -[MIPTVShow episodeId]
  -[MIPTVShow setEpisodeId:]
  -[MIPTVShow episodeSortId]
  -[MIPTVShow setEpisodeSortId:]


MIPSong : PBCodable <NSCopying>
 @property  BOOL hasAlbum
 @property  MIPAlbum *album
 @property  BOOL hasArtist
 @property  MIPArtist *artist
 @property  BOOL hasComposer
 @property  MIPArtist *composer
 @property  BOOL hasGenre
 @property  MIPGenre *genre
 @property  BOOL hasDiscNumber
 @property  int discNumber
 @property  BOOL hasTrackNumber
 @property  int trackNumber
 @property  BOOL hasUserRating
 @property  int userRating
 @property  BOOL hasExcludeFromShuffle
 @property  BOOL excludeFromShuffle
 @property  BOOL hasGeniusId
 @property  long long geniusId
 @property  BOOL hasAudioFormat
 @property  int audioFormat
 @property  BOOL hasHasVideo
 @property  BOOL hasVideo
 @property  BOOL hasLyrics
 @property  NSString *lyrics
 @property  BOOL hasPlaybackInfo
 @property  MIPPlaybackInfo *playbackInfo
 @property  BOOL hasLyricsChecksum
 @property  int lyricsChecksum
 @property  BOOL hasHlsPlaylistURL
 @property  NSString *hlsPlaylistURL

  // instance methods
  -[MIPSong discNumber]
  -[MIPSong hasTrackNumber]
  -[MIPSong setTrackNumber:]
  -[MIPSong lyrics]
  -[MIPSong hasDiscNumber]
  -[MIPSong composer]
  -[MIPSong setGenre:]
  -[MIPSong hasGenre]
  -[MIPSong hasArtist]
  -[MIPSong trackNumber]
  -[MIPSong setComposer:]
  -[MIPSong hasLyrics]
  -[MIPSong copyTo:]
  -[MIPSong setAlbum:]
  -[MIPSong hasComposer]
  -[MIPSong setLyrics:]
  -[MIPSong .cxx_destruct]
  -[MIPSong hasAudioFormat]
  -[MIPSong playbackInfo]
  -[MIPSong hasVideo]
  -[MIPSong genre]
  -[MIPSong setDiscNumber:]
  -[MIPSong mergeFrom:]
  -[MIPSong setHasVideo:]
  -[MIPSong album]
  -[MIPSong artist]
  -[MIPSong dictionaryRepresentation]
  -[MIPSong setHasDiscNumber:]
  -[MIPSong copyWithZone:]
  -[MIPSong setArtist:]
  -[MIPSong readFrom:]
  -[MIPSong setHasTrackNumber:]
  -[MIPSong audioFormat]
  -[MIPSong writeTo:]
  -[MIPSong setHasAudioFormat:]
  -[MIPSong isEqual:]
  -[MIPSong setAudioFormat:]
  -[MIPSong hasAlbum]
  -[MIPSong userRating]
  -[MIPSong setUserRating:]
  -[MIPSong setPlaybackInfo:]
  -[MIPSong hlsPlaylistURL]
  -[MIPSong setHlsPlaylistURL:]
  -[MIPSong setHasUserRating:]
  -[MIPSong hasUserRating]
  -[MIPSong setExcludeFromShuffle:]
  -[MIPSong setHasExcludeFromShuffle:]
  -[MIPSong hasExcludeFromShuffle]
  -[MIPSong setGeniusId:]
  -[MIPSong setHasGeniusId:]
  -[MIPSong hasGeniusId]
  -[MIPSong setHasHasVideo:]
  -[MIPSong hasHasVideo]
  -[MIPSong hasPlaybackInfo]
  -[MIPSong setLyricsChecksum:]
  -[MIPSong setHasLyricsChecksum:]
  -[MIPSong hasLyricsChecksum]
  -[MIPSong hasHlsPlaylistURL]
  -[MIPSong excludeFromShuffle]
  -[MIPSong geniusId]
  -[MIPSong lyricsChecksum]


ML3ServiceDatabaseImport : ML3DatabaseImport
 @property  ML3MusicLibrary *library
 @property  ML3MediaLibraryWriter *writer
 @property  ML3Client *client

  // instance methods
  -[ML3ServiceDatabaseImport library]
  -[ML3ServiceDatabaseImport .cxx_destruct]
  -[ML3ServiceDatabaseImport client]
  -[ML3ServiceDatabaseImport writer]
  -[ML3ServiceDatabaseImport initWithDatabaseImport:library:writer:client:]


ML3MigrationDirectives : NSObject
 @property  int originalUserVersion
 @property  int currentUserVersion
 @property  BOOL needsToRecreateIndexes
 @property  BOOL needsToRecreateTriggers
 @property  BOOL needsToRemoveLocationsForItemsMissingAssets
 @property  BOOL needsToReloadStoreBookmarkMetadataIdentifiers
 @property  BOOL needsToReloadContainerMediaTypes
 @property  BOOL needsToReloadCollectionRepresentativeItems
 @property  BOOL needsAnalyze
 @property  BOOL needsToAutogenerateArtworkVariants
 @property  BOOL needsToUpdateSortMap
 @property  BOOL forceUpdateOriginals

  // instance methods
  -[ML3MigrationDirectives currentUserVersion]
  -[ML3MigrationDirectives initWithOriginalUserVersion:]
  -[ML3MigrationDirectives originalUserVersion]
  -[ML3MigrationDirectives setCurrentUserVersion:]
  -[ML3MigrationDirectives needsToRecreateIndexes]
  -[ML3MigrationDirectives setNeedsToRecreateIndexes:]
  -[ML3MigrationDirectives needsToRecreateTriggers]
  -[ML3MigrationDirectives setNeedsToRecreateTriggers:]
  -[ML3MigrationDirectives needsToRemoveLocationsForItemsMissingAssets]
  -[ML3MigrationDirectives setNeedsToRemoveLocationsForItemsMissingAssets:]
  -[ML3MigrationDirectives needsToReloadStoreBookmarkMetadataIdentifiers]
  -[ML3MigrationDirectives setNeedsToReloadStoreBookmarkMetadataIdentifiers:]
  -[ML3MigrationDirectives needsToReloadContainerMediaTypes]
  -[ML3MigrationDirectives setNeedsToReloadContainerMediaTypes:]
  -[ML3MigrationDirectives needsToReloadCollectionRepresentativeItems]
  -[ML3MigrationDirectives setNeedsToReloadCollectionRepresentativeItems:]
  -[ML3MigrationDirectives needsAnalyze]
  -[ML3MigrationDirectives setNeedsAnalyze:]
  -[ML3MigrationDirectives needsToAutogenerateArtworkVariants]
  -[ML3MigrationDirectives setNeedsToAutogenerateArtworkVariants:]
  -[ML3MigrationDirectives needsToUpdateSortMap]
  -[ML3MigrationDirectives setNeedsToUpdateSortMap:]
  -[ML3MigrationDirectives forceUpdateOriginals]
  -[ML3MigrationDirectives setForceUpdateOriginals:]


ML3ItemExtraTable : ML3DatabaseTable
  // instance methods
  -[ML3ItemExtraTable columns]
  -[ML3ItemExtraTable .cxx_destruct]
  -[ML3ItemExtraTable name]


ML3DatabaseTable : NSObject <NSCopying, NSMutableCopying>
 @property  NSString *name
 @property  NSArray *columns
 @property  NSArray *foreignKeyConstraints

  // instance methods
  -[ML3DatabaseTable columns]
  -[ML3DatabaseTable .cxx_destruct]
  -[ML3DatabaseTable copyWithZone:]
  -[ML3DatabaseTable name]
  -[ML3DatabaseTable mutableCopyWithZone:]
  -[ML3DatabaseTable columnDefinitionsSQL]
  -[ML3DatabaseTable createTableSQLWithExistenceClause:]
  -[ML3DatabaseTable _copyWithZone:concreteClass:]
  -[ML3DatabaseTable foreignKeyConstraints]


ML3MutableDatabaseTable : ML3DatabaseTable
 @property  NSString *name
 @property  NSArray *columns
 @property  NSArray *foreignKeyConstraints

  // instance methods
  -[ML3MutableDatabaseTable setColumns:]
  -[ML3MutableDatabaseTable setName:]
  -[ML3MutableDatabaseTable setForeignKeyConstraints:]


MIPLibraryIdentifier : PBCodable <NSCopying>
 @property  BOOL hasLibraryName
 @property  NSString *libraryName
 @property  BOOL hasLibraryId
 @property  long long libraryId

  // instance methods
  -[MIPLibraryIdentifier copyTo:]
  -[MIPLibraryIdentifier .cxx_destruct]
  -[MIPLibraryIdentifier mergeFrom:]
  -[MIPLibraryIdentifier dictionaryRepresentation]
  -[MIPLibraryIdentifier copyWithZone:]
  -[MIPLibraryIdentifier readFrom:]
  -[MIPLibraryIdentifier writeTo:]
  -[MIPLibraryIdentifier isEqual:]
  -[MIPLibraryIdentifier libraryId]
  -[MIPLibraryIdentifier libraryName]
  -[MIPLibraryIdentifier hasLibraryName]
  -[MIPLibraryIdentifier setLibraryId:]
  -[MIPLibraryIdentifier setHasLibraryId:]
  -[MIPLibraryIdentifier hasLibraryId]
  -[MIPLibraryIdentifier setLibraryName:]


ML3DAAPImportOperation : ML3ImportOperation
  // instance methods
  -[ML3DAAPImportOperation .cxx_construct]
  -[ML3DAAPImportOperation dealloc]
  -[ML3DAAPImportOperation .cxx_destruct]
  -[ML3DAAPImportOperation performImportOfSourceType:usingConnection:]
  -[ML3DAAPImportOperation importItemFromDAAPElement:]
  -[ML3DAAPImportOperation containerImportItemFromDAAPElement:withTrackIds:trackPersonIdentifiers:]
  -[ML3DAAPImportOperation personImportItemFromDAAPElement:]
  -[ML3DAAPImportOperation updateImportProgress:]
  -[ML3DAAPImportOperation _importDAAPPayloadFromFile:shouldProcessPlaylists:]
  -[ML3DAAPImportOperation _finishParsingWithError:]
  -[ML3DAAPImportOperation _processUpdateType:]
  -[ML3DAAPImportOperation _processTrackItemCount:]
  -[ML3DAAPImportOperation _processTrackElement:]
  -[ML3DAAPImportOperation _processDeletedTrackId:]
  -[ML3DAAPImportOperation _processContainerItemCount:]
  -[ML3DAAPImportOperation _processContainerElement:withTrackIds:trackPersonIdentifiers:]
  -[ML3DAAPImportOperation _processDeletedContainerId:]
  -[ML3DAAPImportOperation _processPersonElement:]
  -[ML3DAAPImportOperation _startImportSessionIfNeeded]


ML3DatabasePrivacyContext : NSObject <NSSecureCoding>
 @property  NSString *bundleID

  // class methods
  +[ML3DatabasePrivacyContext supportsSecureCoding]
  +[ML3DatabasePrivacyContext sharedContext]
  +[ML3DatabasePrivacyContext logDatabasePrivacyAccessWithAuditToken:]

  // instance methods
  -[ML3DatabasePrivacyContext initWithAuditToken:]
  -[ML3DatabasePrivacyContext encodeWithCoder:]
  -[ML3DatabasePrivacyContext initWithPAApplication:]
  -[ML3DatabasePrivacyContext .cxx_destruct]
  -[ML3DatabasePrivacyContext logDatabasePrivacyAccess]
  -[ML3DatabasePrivacyContext initWithClientIdentity:]
  -[ML3DatabasePrivacyContext bundleID]
  -[ML3DatabasePrivacyContext init]
  -[ML3DatabasePrivacyContext initWithCoder:]


ML3ActiveTransaction : NSObject <NSLocking>
 @property  ML3MusicLibrary *library
 @property  ML3DatabaseConnection *connection
 @property  NSUUID *identifier
 @property  ML3Client *client
 @property  double lastUsedTime
 @property  BOOL terminable
 @property  BOOL inUseByOperation
 @property  BOOL readOnly

  // instance methods
  -[ML3ActiveTransaction unlock]
  -[ML3ActiveTransaction isReadOnly]
  -[ML3ActiveTransaction setReadOnly:]
  -[ML3ActiveTransaction setLastUsedTime:]
  -[ML3ActiveTransaction identifier]
  -[ML3ActiveTransaction library]
  -[ML3ActiveTransaction .cxx_destruct]
  -[ML3ActiveTransaction connection]
  -[ML3ActiveTransaction lastUsedTime]
  -[ML3ActiveTransaction client]
  -[ML3ActiveTransaction lock]
  -[ML3ActiveTransaction init]
  -[ML3ActiveTransaction initWithLibrary:connection:client:]
  -[ML3ActiveTransaction updateLastUsed]
  -[ML3ActiveTransaction _relinquishConnection]
  -[ML3ActiveTransaction terminable]
  -[ML3ActiveTransaction setTerminable:]
  -[ML3ActiveTransaction inUseByOperation]
  -[ML3ActiveTransaction setInUseByOperation:]


ML3MusicLibraryResourcesManagerContext : NSObject
 @property  BOOL runningInDaemon
 @property  BOOL multiUserSupported
 @property  <MLMediaLibraryResourcesServiceProtocol> *resourcesService
 @property  <_MSVAccountInformationProviding> *accountInfo
 @property  <MLMediaLibraryAccountChangeObserver> *accountChangeObserver
 @property  NSString *libraryContainerIdentifier

  // class methods
  +[ML3MusicLibraryResourcesManagerContext contextForAutoupdatingSharedLibrary]
  +[ML3MusicLibraryResourcesManagerContext contextForSingleUserLibraryWithAccountInfo:]
  +[ML3MusicLibraryResourcesManagerContext contextForSingleUserLibraryWithLibraryContainerIdentifier:]
  +[ML3MusicLibraryResourcesManagerContext contextForMultiUserFrameworkLibraryWithService:]
  +[ML3MusicLibraryResourcesManagerContext contextForMultiUserDaemonLibraryWithAccountInfo:accountChangeObserver:]

  // instance methods
  -[ML3MusicLibraryResourcesManagerContext accountInfo]
  -[ML3MusicLibraryResourcesManagerContext libraryContainerIdentifier]
  -[ML3MusicLibraryResourcesManagerContext accountChangeObserver]
  -[ML3MusicLibraryResourcesManagerContext _initWithResourcesService:accountInfo:libraryContainerIdentifier:accountChangeObserver:supportsMultiUsers:runningInDaemon:]
  -[ML3MusicLibraryResourcesManagerContext .cxx_destruct]
  -[ML3MusicLibraryResourcesManagerContext isRunningInDaemon]
  -[ML3MusicLibraryResourcesManagerContext resourcesService]
  -[ML3MusicLibraryResourcesManagerContext isMultiUserSupported]


ML3DatabaseFunction : NSObject
 @property  NSString *name
 @property  int argumentCount

  // instance methods
  -[ML3DatabaseFunction .cxx_destruct]
  -[ML3DatabaseFunction registerWithConnection:]
  -[ML3DatabaseFunction setName:]
  -[ML3DatabaseFunction name]
  -[ML3DatabaseFunction setArgumentCount:]
  -[ML3DatabaseFunction initWithName:argumentCount:]
  -[ML3DatabaseFunction argumentCount]


ML3DatabaseFunctionBlock : ML3DatabaseFunction
 @property  @? block

  // instance methods
  -[ML3DatabaseFunctionBlock .cxx_destruct]
  -[ML3DatabaseFunctionBlock registerWithConnection:]
  -[ML3DatabaseFunctionBlock setBlock:]
  -[ML3DatabaseFunctionBlock block]


ML3DatabaseFunctionPointer : ML3DatabaseFunction
 @property  ^? functionPointer
 @property  ^v userData

  // instance methods
  -[ML3DatabaseFunctionPointer setFunctionPointer:]
  -[ML3DatabaseFunctionPointer userData]
  -[ML3DatabaseFunctionPointer setUserData:]
  -[ML3DatabaseFunctionPointer registerWithConnection:]
  -[ML3DatabaseFunctionPointer functionPointer]


ML3PersonTable : ML3DatabaseTable
  // instance methods
  -[ML3PersonTable columns]
  -[ML3PersonTable .cxx_destruct]
  -[ML3PersonTable name]


ML3Entity : NSObject
 @property  ML3MusicLibrary *library
 @property  long long persistentID
 @property  BOOL existsInLibrary

  // class methods
  +[ML3Entity joinClausesForProperty:]
  +[ML3Entity allProperties]
  +[ML3Entity disambiguatedSQLForProperty:]
  +[ML3Entity foreignDatabaseTableForProperty:]
  +[ML3Entity removeFromMyLibrary:deletionType:persistentIDs:count:]
  +[ML3Entity unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:]
  +[ML3Entity aggregateQueryWithUnitQuery:foreignPersistentIDProperty:]
  +[ML3Entity defaultOrderingTerms]
  +[ML3Entity deleteFromLibrary:deletionType:persistentIDs:count:]
  +[ML3Entity allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:]
  +[ML3Entity queryWithLibrary:predicate:]
  +[ML3Entity queryWithLibrary:predicate:options:]
  +[ML3Entity queryWithLibrary:predicate:orderingTerms:]
  +[ML3Entity queryWithLibrary:predicate:orderingTerms:usingSections:]
  +[ML3Entity queryWithLibrary:predicate:orderingTerms:usingSections:options:]
  +[ML3Entity setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:]
  +[ML3Entity entityFromURL:inLibrary:]
  +[ML3Entity anyInLibrary:predicate:]
  +[ML3Entity newWithDictionary:inLibrary:]
  +[ML3Entity newWithPersistentID:inLibrary:]
  +[ML3Entity revisionTrackingCode]
  +[ML3Entity insertValues:intoTable:persistentID:library:]
  +[ML3Entity insertValues:intoTable:persistentID:connection:]
  +[ML3Entity unsettableProperties]
  +[ML3Entity _shouldIncrementRevisionForType:persistentID:usingConnection:]
  +[ML3Entity incrementRevisionForRevisionTypeContentWithLibrary:deletionType:persistentIDs:]
  +[ML3Entity incrementRevisionForRevisionTypeContentWithConnection:deletionType:persistentIDs:]
  +[ML3Entity incrementRevisionForRevisionTypeContentWithConnection:deletionType:persistentIDs:count:]
  +[ML3Entity incrementRevisionWithLibrary:persistentID:deletionType:revisionType:]
  +[ML3Entity incrementRevisionWithLibrary:persistentID:deletionType:revisionType:usingConnection:]
  +[ML3Entity insertionChangesLibraryContents]
  +[ML3Entity enumeratePersistentIDsInLibrary:matchingPredicate:orderingTerms:persistentIDs:count:options:usingBlock:]
  +[ML3Entity subselectStatementForProperty:]
  +[ML3Entity subselectPropertyForProperty:]
  +[ML3Entity newSelectAllEntitiesSQLForProperties:count:predicate:]
  +[ML3Entity newSelectSQLForProperties:count:predicate:]
  +[ML3Entity entityURLScheme]
  +[ML3Entity entityFromURL:reason:]
  +[ML3Entity entityFromURL:inLibrary:verifyExistence:]
  +[ML3Entity _entityForURLComponents:inLibrary:verifyExistence:reason:]
  +[ML3Entity URLForEntityWithPersistentID:libraryUID:]
  +[ML3Entity defaultFilterPredicates]
  +[ML3Entity predicateByOptimizingPredicate:]
  +[ML3Entity predicateByOptimizingComparisonPredicate:]
  +[ML3Entity newWithDictionary:inLibrary:cachedNameOrders:]
  +[ML3Entity newWithDictionary:inLibrary:cachedNameOrders:usingConnection:]
  +[ML3Entity sectionPropertyForProperty:]
  +[ML3Entity foreignColumnForProperty:]
  +[ML3Entity foreignPropertyForProperty:entityClass:]
  +[ML3Entity propertyIsCountProperty:]
  +[ML3Entity countingQueryForBaseQuery:countProperty:forIdentifier:]
  +[ML3Entity _didChangeValueForProperties:inLibrary:]
  +[ML3Entity libraryContentsChangeForProperty:]
  +[ML3Entity assistantLibraryContentsChangeForProperty:]
  +[ML3Entity libraryDynamicChangeForProperty:]
  +[ML3Entity _deleteRowForPersistentIDs:count:library:table:usingColumn:usingConnection:]
  +[ML3Entity deleteFromLibrary:deletionType:persistentIDs:count:usingConnection:]
  +[ML3Entity extraTablesToDelete]
  +[ML3Entity extraTablesToInsert]
  +[ML3Entity persistentIDColumnForTable:]
  +[ML3Entity collectionClassesToUpdateBeforeDelete]
  +[ML3Entity predisambiguatedProperties]
  +[ML3Entity predisambiguateProperties:toDictionary:]
  +[ML3Entity _createDisambiguatedSQLForProperty:]
  +[ML3Entity disambiguatedSelectSQLForProperty:]
  +[ML3Entity indexableSQLForProperties:]
  +[ML3Entity orderingSQLForProperties:directionality:]
  +[ML3Entity enumeratePersistentIDsInLibrary:afterRevision:usingBlock:]
  +[ML3Entity predicateIncludingSystemwidePredicatesWithPredicate:library:options:]
  +[ML3Entity anyInLibrary:predicate:options:]
  +[ML3Entity queryWithLibrary:predicate:orderingProperties:]
  +[ML3Entity queryWithLibrary:predicate:orderingProperties:usingSections:]
  +[ML3Entity queryWithLibrary:predicate:orderingProperties:orderingDirectionMappings:usingSections:]
  +[ML3Entity queryWithLibrary:predicate:usingSections:]
  +[ML3Entity queryWithLibrary:predicate:orderingTerms:propertyToCount:]
  +[ML3Entity queryWithLibrary:predicate:orderingTerms:propertyToCount:options:]
  +[ML3Entity unrestrictedQueryWithLibrary:predicate:orderingTerms:]

  // instance methods
  -[ML3Entity valueForProperty:]
  -[ML3Entity library]
  -[ML3Entity setLibrary:]
  -[ML3Entity .cxx_destruct]
  -[ML3Entity setValue:forProperty:]
  -[ML3Entity copyWithZone:]
  -[ML3Entity URL]
  -[ML3Entity isEqual:]
  -[ML3Entity getValuesForProperties:]
  -[ML3Entity persistentID]
  -[ML3Entity setValues:forProperties:count:]
  -[ML3Entity initWithPersistentID:inLibrary:]
  -[ML3Entity setValues:forProperties:async:withCompletionBlock:]
  -[ML3Entity setValues:forProperties:usingConnection:]
  -[ML3Entity getValues:forProperties:count:]
  -[ML3Entity existsInLibrary]
  -[ML3Entity initWithDictionary:inLibrary:cachedNameOrders:]
  -[ML3Entity initWithDictionary:inLibrary:cachedNameOrders:usingConnection:]
  -[ML3Entity matchesPredicate:]
  -[ML3Entity setValues:forProperties:]
  -[ML3Entity setValuesForPropertiesWithDictionary:]
  -[ML3Entity didChangeValueForProperties:]
  -[ML3Entity deleteFromLibrary]
  -[ML3Entity incrementRevision]


ML3ClientImportServiceSession : NSObject
  // instance methods
  -[ML3ClientImportServiceSession begin]
  -[ML3ClientImportServiceSession dealloc]
  -[ML3ClientImportServiceSession .cxx_destruct]
  -[ML3ClientImportServiceSession finish]
  -[ML3ClientImportServiceSession initWithLibrary:connection:configuration:]
  -[ML3ClientImportServiceSession addTrack:persistentID:]
  -[ML3ClientImportServiceSession updateTrack:persistentID:]
  -[ML3ClientImportServiceSession removeTrack:persistentID:]


ML3AlbumArtistTable : ML3DatabaseTable
  // instance methods
  -[ML3AlbumArtistTable columns]
  -[ML3AlbumArtistTable .cxx_destruct]
  -[ML3AlbumArtistTable name]


ML3MusicLibrary : NSObject <ML3DatabaseConnectionDelegate, ML3DatabaseConnectionPoolDelegate, NSSecureCoding, _MSVAccountInformationProviding>
 @property  NSString *artworkDirectory
 @property  NSString *originalArtworkDirectory
 @property  NSString *rootArtworkCacheDirectory
 @property  BOOL supportsUbiquitousPlaybackPositions
 @property  NSNumber *sagaAccountID
 @property  NSNumber *sagaLastKnownActiveLockerAccountDSID
 @property  NSDate *sagaLastGeniusUpdateDate
 @property  NSDate *sagaLastItemPlayDataUploadDate
 @property  NSDate *sagaLastPlaylistPlayDataUploadDate
 @property  NSString *sagaCloudLibraryCUID
 @property  NSString *sagaCloudLibraryTroveID
 @property  long long sagaDatabaseUserVersion
 @property  long long sagaCloudAddToPlaylistBehavior
 @property  BOOL sagaNeedsFullUpdateAfterNextUpdate
 @property  BOOL sagaPrefersToMergeWithCloudLibrary
 @property  NSString *storefrontIdentifier
 @property  NSDate *sagaLastLibraryUpdateTime
 @property  NSDate *sagaLastSubscribedContainersUpdateTime
 @property  long long preferredVideoQuality
 @property  long long sagaOnDiskDatabaseRevision
 @property  NSNumber *jaliscoAccountID
 @property  NSDate *jaliscoLastGeniusUpdateDate
 @property  NSString *jaliscoLastSupportedMediaKinds
 @property  NSArray *jaliscoLastExcludedMediaKinds
 @property  BOOL jaliscoHasCloudGeniusData
 @property  BOOL jaliscoIsMusicGeniusUserEnabled
 @property  BOOL jaliscoNeedsUpdateForTokens
 @property  NSDate *jaliscoLastLibraryUpdateTime
 @property  long long jaliscoOnDiskDatabaseRevision
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  ML3LibraryNotificationManager *notificationManager
 @property  ^{iPhoneSortKeyBuilder=} sortKeyBuilder
 @property  BOOL usingSharedLibraryPath
 @property  BOOL readOnly
 @property  ML3MusicLibraryResourcesManager *resourcesManager
 @property  <ML3MusicLibraryDelegate> *delegate
 @property  ML3DatabaseConnectionPool *connectionPool
 @property  NSString *databasePath
 @property  ML3DatabasePrivacyContext *privacyContext
 @property  NSString *libraryUID
 @property  long long currentRevision
 @property  long long currentContentRevision
 @property  long long syncGenerationID
 @property  long long autoFilledTracksTotalSize
 @property  NSString *syncLibraryID
 @property  BOOL libraryEmpty
 @property  ML3Container *currentDevicePurchasesPlaylist
 @property  ML3Container *currentDevicePlaybackHistoryPlaylist
 @property  ML3Container *currentDevicePhotosMemoriesPlaylist
 @property  ML3DatabaseMetadata *databaseInfo
 @property  NSArray *localizedSectionIndexTitles
 @property  NSArray *preferredAudioTracks
 @property  NSArray *preferredSubtitleTracks
 @property  BOOL isHomeSharingLibrary
 @property  BOOL mediaRestrictionEnabled
 @property  BOOL downloadOnAddToLibrary
 @property  NSArray *libraryEntityFilterPredicates
 @property  NSArray *libraryContainerFilterPredicates
 @property  NSArray *libraryPublicEntityFilterPredicates
 @property  NSArray *libraryPublicContainerFilterPredicates
 @property  BOOL hasUserPlaylists
 @property  BOOL hasAddedToLibraryAppleMusicContent
 @property  BOOL hasUserPlaylistsContainingAppleMusicContent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *accountDSID

  // class methods
  +[ML3MusicLibrary supportsSecureCoding]
  +[ML3MusicLibrary libraryContainerRelativePath:]
  +[ML3MusicLibrary pathForResourceFileOrFolder:basePath:relativeToBase:createParentFolderIfNecessary:]
  +[ML3MusicLibrary pathForResourceFileOrFolder:]
  +[ML3MusicLibrary libraryContainerPath]
  +[ML3MusicLibrary libraryContainerPathByAppendingPathComponent:]
  +[ML3MusicLibrary pathForBaseLocationPath:]
  +[ML3MusicLibrary sectionIndexTitles]
  +[ML3MusicLibrary globalSerialQueue]
  +[ML3MusicLibrary sharedLibrary]
  +[ML3MusicLibrary allTables]
  +[ML3MusicLibrary autoupdatingSharedLibrary]
  +[ML3MusicLibrary allLibraries]
  +[ML3MusicLibrary devicePreferredImageFormat]
  +[ML3MusicLibrary deviceSupportsASTC]
  +[ML3MusicLibrary musicLibraryForUserAccount:]
  +[ML3MusicLibrary setGlobalPrivacyContextWithAuditToken:]
  +[ML3MusicLibrary _onGlobalQueue_shareableMusicLibraryWithResourcesManager:]
  +[ML3MusicLibrary registeredLibraries]
  +[ML3MusicLibrary autoupdatingSharedLibraryPath]
  +[ML3MusicLibrary setAutoupdatingSharedLibraryPath:]
  +[ML3MusicLibrary musicLibraryPerUserDSID]
  +[ML3MusicLibrary sharedLibraryDatabasePath]
  +[ML3MusicLibrary setSharedLibraryDatabasePath:]
  +[ML3MusicLibrary disableSharedLibrary]
  +[ML3MusicLibrary disableAutomaticDatabaseValidation]
  +[ML3MusicLibrary enableAutomaticDatabaseValidation]
  +[ML3MusicLibrary deviceSupportsMultipleLibraries]
  +[ML3MusicLibrary localizedSectionHeaderForSectionHeader:]
  +[ML3MusicLibrary localizedSectionIndexTitleForSectionHeader:]
  +[ML3MusicLibrary sectionIndexTitleForSectionHeader:]
  +[ML3MusicLibrary enumerateSortMapTablesUsingBlock:]
  +[ML3MusicLibrary removeOrphanedTracks]
  +[ML3MusicLibrary updateTrackIntegrityOnConnection:]
  +[ML3MusicLibrary widthLimitedSetValuesQueue]
  +[ML3MusicLibrary assistantSyncDataChangedNotificationName]
  +[ML3MusicLibrary distributedToLocalNotificationMapping]
  +[ML3MusicLibrary clearCloudAssetSharedCache]
  +[ML3MusicLibrary artworkRelativePathFromToken:]
  +[ML3MusicLibrary artworkTokenForArtistHeroURL:]
  +[ML3MusicLibrary artworkTokenForChapterWithItemPID:retrievalTime:]
  +[ML3MusicLibrary artworkSourceTypeForTrackSource:]
  +[ML3MusicLibrary storeLinkSchemaSQL]
  +[ML3MusicLibrary sortMapSchemaSQL]
  +[ML3MusicLibrary sortMapNewSchemaSQL]
  +[ML3MusicLibrary itemSchemaSQL]
  +[ML3MusicLibrary itemNewSchemaSQL]
  +[ML3MusicLibrary allSchemaSQL]
  +[ML3MusicLibrary allPragmaSQL]
  +[ML3MusicLibrary allTriggersSQL]
  +[ML3MusicLibrary indexSchemaSQL]
  +[ML3MusicLibrary itemIndexSchemaSQL]
  +[ML3MusicLibrary userVersionUsingConnection:]
  +[ML3MusicLibrary userVersionMatchesSystemUsingConnection:]
  +[ML3MusicLibrary orderingLanguageMatchesSystemUsingConnection:]
  +[ML3MusicLibrary dropIndexesUsingConnection:tableNames:]
  +[ML3MusicLibrary mediaFolderPath]
  +[ML3MusicLibrary mediaFolderPathByAppendingPathComponent:]
  +[ML3MusicLibrary allLibraryContainerPaths]
  +[ML3MusicLibrary libraryPathForContainerPath:]
  +[ML3MusicLibrary cloudAssetsSharedCacheFolderPath]
  +[ML3MusicLibrary databasePathForUnitTest:withBasePath:]
  +[ML3MusicLibrary unitTestableLibraryForTest:basePath:setupSQLFilenames:]
  +[ML3MusicLibrary jaliscoGetSortedMediaKinds:]

  // instance methods
  -[ML3MusicLibrary databasePath]
  -[ML3MusicLibrary libraryContainerRelativePath:]
  -[ML3MusicLibrary setStorefrontIdentifier:]
  -[ML3MusicLibrary pathForResourceFileOrFolder:basePath:relativeToBase:createParentFolderIfNecessary:]
  -[ML3MusicLibrary isReadOnly]
  -[ML3MusicLibrary pathForResourceFileOrFolder:]
  -[ML3MusicLibrary accountDSID]
  -[ML3MusicLibrary libraryContainerPath]
  -[ML3MusicLibrary libraryContainerPathByAppendingPathComponent:]
  -[ML3MusicLibrary pathForBaseLocationPath:]
  -[ML3MusicLibrary performDatabasePathChange:completion:]
  -[ML3MusicLibrary setReadOnly:]
  -[ML3MusicLibrary hasAddedToLibraryAppleMusicContent]
  -[ML3MusicLibrary setNotificationManager:]
  -[ML3MusicLibrary setSagaLastLibraryUpdateTime:]
  -[ML3MusicLibrary initWithPath:]
  -[ML3MusicLibrary serialQueue]
  -[ML3MusicLibrary setSagaLastPlaylistPlayDataUploadDate:]
  -[ML3MusicLibrary deleteDatabaseProperty:]
  -[ML3MusicLibrary storefrontIdentifier]
  -[ML3MusicLibrary hasUserPlaylistsContainingAppleMusicContent]
  -[ML3MusicLibrary setDelegate:]
  -[ML3MusicLibrary clearSagaLastPlaylistPlayDataUploadDate]
  -[ML3MusicLibrary setValue:forDatabaseProperty:]
  -[ML3MusicLibrary encodeWithCoder:]
  -[ML3MusicLibrary importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:]
  -[ML3MusicLibrary delegate]
  -[ML3MusicLibrary sagaLastPlaylistPlayDataUploadDate]
  -[ML3MusicLibrary emergencyDisconnectWithCompletion:]
  -[ML3MusicLibrary sagaAccountID]
  -[ML3MusicLibrary dealloc]
  -[ML3MusicLibrary notificationManager]
  -[ML3MusicLibrary currentDevicePurchasesPlaylist]
  -[ML3MusicLibrary .cxx_destruct]
  -[ML3MusicLibrary hasUserPlaylists]
  -[ML3MusicLibrary sagaLastLibraryUpdateTime]
  -[ML3MusicLibrary setSagaOnDiskDatabaseRevision:]
  -[ML3MusicLibrary valueForDatabaseProperty:]
  -[ML3MusicLibrary setPreferredVideoQuality:]
  -[ML3MusicLibrary clearSagaLastItemPlayDataUploadDate]
  -[ML3MusicLibrary isHomeSharingLibrary]
  -[ML3MusicLibrary sagaLastItemPlayDataUploadDate]
  -[ML3MusicLibrary terminateForFailureToPerformDatabasePathChange]
  -[ML3MusicLibrary setSagaDatabaseUserVersion:]
  -[ML3MusicLibrary localizedSectionIndexTitles]
  -[ML3MusicLibrary importOriginalArtworkFromImageData:withArtworkToken:artworkType:sourceType:mediaType:]
  -[ML3MusicLibrary privacyContext]
  -[ML3MusicLibrary sagaLastSubscribedContainersUpdateTime]
  -[ML3MusicLibrary isCurrentThreadInTransaction]
  -[ML3MusicLibrary syncGenerationID]
  -[ML3MusicLibrary setSagaLastItemPlayDataUploadDate:]
  -[ML3MusicLibrary sagaDatabaseUserVersion]
  -[ML3MusicLibrary setSagaAccountID:]
  -[ML3MusicLibrary sagaOnDiskDatabaseRevision]
  -[ML3MusicLibrary clearSagaCloudAccountID]
  -[ML3MusicLibrary setSagaLastSubscribedContainersUpdateTime:]
  -[ML3MusicLibrary recordPlayEventForAlbumPersistentID:]
  -[ML3MusicLibrary localizedSectionHeaderForSectionIndex:]
  -[ML3MusicLibrary setClientIdentity:]
  -[ML3MusicLibrary initWithCoder:]
  -[ML3MusicLibrary preferredVideoQuality]
  -[ML3MusicLibrary libraryUID]
  -[ML3MusicLibrary isArtworkTokenAvailable:]
  -[ML3MusicLibrary setLibraryContainerFilterPredicates:]
  -[ML3MusicLibrary setLibraryEntityFilterPredicates:]
  -[ML3MusicLibrary sectionIndexTitleIndexForSectionIndex:]
  -[ML3MusicLibrary setLibraryPublicContainerFilterPredicates:]
  -[ML3MusicLibrary setLibraryPublicEntityFilterPredicates:]
  -[ML3MusicLibrary currentContentRevision]
  -[ML3MusicLibrary recordPlayEventForContainerPersistentID:]
  -[ML3MusicLibrary currentDevicePhotosMemoriesPlaylist]
  -[ML3MusicLibrary currentDevicePlaybackHistoryPlaylist]
  -[ML3MusicLibrary currentRevision]
  -[ML3MusicLibrary preferredAudioTracks]
  -[ML3MusicLibrary performDatabaseTransactionWithBlock:]
  -[ML3MusicLibrary enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:forMediaTypes:inUsersLibrary:usingBlock:]
  -[ML3MusicLibrary enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:usingBlock:]
  -[ML3MusicLibrary preferredSubtitleTracks]
  -[ML3MusicLibrary retrieveBestArtworkTokensForEntityPersistentID:entityType:artworkType:retrievalTime:completionHandler:]
  -[ML3MusicLibrary notifyDisplayValuesPropertyDidChange]
  -[ML3MusicLibrary databaseConnectionAllowingWrites:withBlock:]
  -[ML3MusicLibrary isLibraryEmpty]
  -[ML3MusicLibrary _effectiveSettingsDidChangeNotification:]
  -[ML3MusicLibrary _libraryPathDidChangeNotification:]
  -[ML3MusicLibrary connectionWillOpenDatabase:]
  -[ML3MusicLibrary connectionDidOpenDatabase:]
  -[ML3MusicLibrary connectionWillCloseDatabase:]
  -[ML3MusicLibrary connectionDidAccessDatabase:]
  -[ML3MusicLibrary connectionDidBeginDatabaseTransaction:]
  -[ML3MusicLibrary connection:didEndDatabaseTransactionAndCommit:]
  -[ML3MusicLibrary connectionPool:createdNewConnection:]
  -[ML3MusicLibrary initWithClientIdentity:forUserAccount:]
  -[ML3MusicLibrary initWithResourcesManager:]
  -[ML3MusicLibrary initWithPath:readOnly:populateUnitTestTablesBlock:]
  -[ML3MusicLibrary initWithClientIdentity:path:]
  -[ML3MusicLibrary initWithClientIdentity:path:readOnly:populateUnitTestTablesBlock:]
  -[ML3MusicLibrary resourcesManager]
  -[ML3MusicLibrary connectionPool]
  -[ML3MusicLibrary sortKeyBuilder]
  -[ML3MusicLibrary setIsHomeSharingLibrary:]
  -[ML3MusicLibrary downloadOnAddToLibrary]
  -[ML3MusicLibrary setSyncGenerationID:]
  -[ML3MusicLibrary setSyncLibraryID:]
  -[ML3MusicLibrary syncLibraryID]
  -[ML3MusicLibrary setLibraryUID:]
  -[ML3MusicLibrary databaseInfo]
  -[ML3MusicLibrary mediaRestrictionEnabled]
  -[ML3MusicLibrary libraryEntityFilterPredicatesForEntityClass:]
  -[ML3MusicLibrary libraryEntityFilterPredicatesForContainerClass:]
  -[ML3MusicLibrary checkoutReaderConnection]
  -[ML3MusicLibrary checkoutWriterConnection]
  -[ML3MusicLibrary checkInDatabaseConnection:]
  -[ML3MusicLibrary reconnectToDatabase]
  -[ML3MusicLibrary performReadOnlyDatabaseTransactionWithBlock:]
  -[ML3MusicLibrary performAsyncDatabaseWriteTransactionWithBlock:completionBlock:]
  -[ML3MusicLibrary automaticDatabaseValidationDisabled]
  -[ML3MusicLibrary validateDatabase]
  -[ML3MusicLibrary currentDatabaseVersion]
  -[ML3MusicLibrary createIndexes]
  -[ML3MusicLibrary emptyAllTables]
  -[ML3MusicLibrary clearAllGeniusData]
  -[ML3MusicLibrary clearAllCloudKVSData]
  -[ML3MusicLibrary accountCacheDatabase]
  -[ML3MusicLibrary accessSortKeyBuilder:]
  -[ML3MusicLibrary groupingKeyForString:]
  -[ML3MusicLibrary groupingKeysForStrings:]
  -[ML3MusicLibrary unknownSectionIndex]
  -[ML3MusicLibrary notifyContentsDidChange]
  -[ML3MusicLibrary notifyAssistantContentsDidChange]
  -[ML3MusicLibrary notifyEntitiesAddedOrRemoved]
  -[ML3MusicLibrary notifyNonContentsPropertyDidChange]
  -[ML3MusicLibrary notifyInvisiblePropertyDidChange]
  -[ML3MusicLibrary notifySectionsDidChange]
  -[ML3MusicLibrary notifyCloudLibraryAvailabilityDidChange]
  -[ML3MusicLibrary notifyLibraryImportDidFinish]
  -[ML3MusicLibrary notifyKeepLocalStateDidChange]
  -[ML3MusicLibrary saveTrackMetadata]
  -[ML3MusicLibrary saveTrackMetadataSinceRevision:withGrappaID:]
  -[ML3MusicLibrary savePlaylists]
  -[ML3MusicLibrary savePlaylistsSinceRevision:withGrappaID:]
  -[ML3MusicLibrary requiresSchemaOnlyUpdatesOnConnection:]
  -[ML3MusicLibrary requiresNonSchemaUpdatesOnConnection:]
  -[ML3MusicLibrary updateSortMap]
  -[ML3MusicLibrary getChangedPersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:usingBlock:]
  -[ML3MusicLibrary persistentID:changedAfterRevision:revisionTrackingCode:]
  -[ML3MusicLibrary countOfChangedPersistentIdsAfterRevision:revisionTrackingCode:maximumRevisionType:]
  -[ML3MusicLibrary removeSource:withCompletionHandler:]
  -[ML3MusicLibrary removeSource:usingConnection:withCompletionHandler:]
  -[ML3MusicLibrary removeTracksWithPersistentIDs:fromSource:withCompletionHandler:]
  -[ML3MusicLibrary removeTracksWithPersistentIDs:fromSource:usingConnection:withCompletionHandler:]
  -[ML3MusicLibrary removePlaylistsWithPersistentIDs:fromSource:usingConnection:withCompletionHandler:]
  -[ML3MusicLibrary autoFilledTracksTotalSize]
  -[ML3MusicLibrary autoFilledTracksTotalSizeWithUrgency:]
  -[ML3MusicLibrary deleteAutoFilledTracksOfAtLeastTotalSize:urgency:respectSongMattress:]
  -[ML3MusicLibrary deleteAutoFilledTracksOfAtLeastTotalSize:]
  -[ML3MusicLibrary deleteAutoFilledTracksOfAtLeastTotalSize:urgency:]
  -[ML3MusicLibrary autogenerateSupportedSizesForAllOriginalArtworkWithConnection:completionHandler:]
  -[ML3MusicLibrary importExistingOriginalArtworkWithArtworkToken:artworkType:sourceType:mediaType:]
  -[ML3MusicLibrary importOriginalArtworkFromFileURL:withArtworkToken:artworkType:sourceType:mediaType:]
  -[ML3MusicLibrary removeArtworkAssetWithToken:]
  -[ML3MusicLibrary deleteArtworkToken:]
  -[ML3MusicLibrary migrateExistingArtworkToken:newArtworkToken:newSourceType:]
  -[ML3MusicLibrary importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:usingConnection:]
  -[ML3MusicLibrary removeArtworkTokenForEntityPersistentID:entityType:artworkType:sourceType:]
  -[ML3MusicLibrary removeArtworkTokenForEntityPersistentID:entityType:artworkType:sourceType:usingConnection:]
  -[ML3MusicLibrary updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:usingConnection:]
  -[ML3MusicLibrary updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:preserveExistingAvailableToken:usingConnection:]
  -[ML3MusicLibrary enumerateArtworkTokensForEntityPersistentID:entityType:artworkType:usingBlock:]
  -[ML3MusicLibrary cleanupArtworkWithOptions:]
  -[ML3MusicLibrary cleanupArtworkWithOptions:usingConnection:]
  -[ML3MusicLibrary removeTombstonesForDeletedItems]
  -[ML3MusicLibrary removeOrphanedTracksOnlyInCaches:]
  -[ML3MusicLibrary removeItemsWithFamilyAccountID:purchaserAccountID:downloaderAccountID:]
  -[ML3MusicLibrary migratePresignedValidity]
  -[ML3MusicLibrary hasPresignedValidity]
  -[ML3MusicLibrary verifyPresignedValidity]
  -[ML3MusicLibrary deletePresignedValidity]
  -[ML3MusicLibrary updateTrackIntegrity]
  -[ML3MusicLibrary _logDatabaseAccess]
  -[ML3MusicLibrary _insertArtworkRowWithArtworkToken:artworkType:sourceType:relativePath:]
  -[ML3MusicLibrary _insertArtworkRowWithArtworkToken:artworkType:sourceType:relativePath:usingConnection:]
  -[ML3MusicLibrary _updateBestArtworkTokensForArtworkToken:artworkType:sourceType:preserveExistingAvailableToken:usingConnection:]
  -[ML3MusicLibrary _determineAndUpdateBestArtworkTokensForEntityPersistentID:entityType:artworkType:retrievalTime:preserveExistingAvailableToken:usingConnection:]
  -[ML3MusicLibrary _allArtworkVariantDirectories]
  -[ML3MusicLibrary _deleteAllArtworkVariantsAtRelativePaths:]
  -[ML3MusicLibrary _removeOrphanedArtworkTokensUsingConnection:]
  -[ML3MusicLibrary _removeOrphanedArtworkMetadataUsingConnection:]
  -[ML3MusicLibrary _removeOrphanedArtworkAssetsUsingConnection:]
  -[ML3MusicLibrary _removeInvalidAvailableArtworkTokensUsingConnection:]
  -[ML3MusicLibrary _convertOriginalArtworkToDevicePreferredFormatFromSourceURL:toDestinationURL:completionHandler:]
  -[ML3MusicLibrary _autogenerateArtworkForRelativePath:artworkType:mediaType:completionHandler:]
  -[ML3MusicLibrary _newGeniusDBConnectionAtPath:]
  -[ML3MusicLibrary _canConfigureMediaLibraryDatabaseConnection:]
  -[ML3MusicLibrary _configureMediaLibraryDatabaseConnection:]
  -[ML3MusicLibrary _teardownMediaLibraryDatabaseConnection:]
  -[ML3MusicLibrary _clearAllRowsFromTables:]
  -[ML3MusicLibrary _prepareForAccountChange:]
  -[ML3MusicLibrary _completeAccountChangeWithPath:]
  -[ML3MusicLibrary _shouldProcessAccountChanges]
  -[ML3MusicLibrary _closeAndLockCurrentDatabaseConnections]
  -[ML3MusicLibrary _setupNotificationManager]
  -[ML3MusicLibrary _tearDownNotificationManager]
  -[ML3MusicLibrary _postClientNotificationWithDistributedName:localName:]
  -[ML3MusicLibrary libraryEntityFilterPredicates]
  -[ML3MusicLibrary libraryContainerFilterPredicates]
  -[ML3MusicLibrary libraryPublicEntityFilterPredicates]
  -[ML3MusicLibrary libraryPublicContainerFilterPredicates]
  -[ML3MusicLibrary isUsingSharedLibraryPath]
  -[ML3MusicLibrary setUsingSharedLibraryPath:]
  -[ML3MusicLibrary artistGroupingKeyForArtistName:seriesName:]
  -[ML3MusicLibrary artistForArtistName:seriesName:]
  -[ML3MusicLibrary albumForAlbumArtistPersistentID:albumName:feedURL:seasonNumber:compilation:]
  -[ML3MusicLibrary repairAlbumArtistRelationshipsWithConnection:]
  -[ML3MusicLibrary coerceValidDatabaseWithError:]
  -[ML3MusicLibrary _validateDatabaseUsingConnection:error:]
  -[ML3MusicLibrary updateSortMapOnConnection:]
  -[ML3MusicLibrary updateSortMapOnConnection:forceUpdateOriginals:]
  -[ML3MusicLibrary inTransactionUpdateSortMapOnConnection:forceUpdateOriginals:]
  -[ML3MusicLibrary inTransactionUpdateSortMapOnConnection:forceRebuild:forceUpdateOriginals:]
  -[ML3MusicLibrary inTransactionUpdateSearchMapOnConnection:]
  -[ML3MusicLibrary validateSortMapUnicodeVersionOnConnection:]
  -[ML3MusicLibrary nameOrderForString:]
  -[ML3MusicLibrary insertStringsIntoSortMap:didReSortMap:]
  -[ML3MusicLibrary insertStringsIntoSortMap:]
  -[ML3MusicLibrary insertStringIntoSortMapNoTransaction:]
  -[ML3MusicLibrary _systemUnicodeVersionData]
  -[ML3MusicLibrary coalesceMismatchedCollectionsUsingConnection:]
  -[ML3MusicLibrary _coalesceMismatchedCollectionClass:usingConnection:]
  -[ML3MusicLibrary genreForGenre:]
  -[ML3MusicLibrary composerForComposerName:]
  -[ML3MusicLibrary albumArtistForEffectiveAlbumArtistName:]
  -[ML3MusicLibrary updateSystemPlaylistNamesForCurrentLanguageUsingConnection:]
  -[ML3MusicLibrary updateOrderingLanguagesForCurrentLanguage]
  -[ML3MusicLibrary _updateSystemPlaylist:withName:usingConnection:]
  -[ML3MusicLibrary purgeableStorageSizeWithUrgency:]
  -[ML3MusicLibrary purgeableStorageSizeWithUrgency:includeAutoFilledTracks:]
  -[ML3MusicLibrary clearPurgeableStorageAmount:withUrgency:]
  -[ML3MusicLibrary clearPurgeableStorageAmount:withUrgency:includeAutoFilledTracks:]
  -[ML3MusicLibrary clearAllRemovedTracks]
  -[ML3MusicLibrary setAutoFilledTracksArePurgeable:]
  -[ML3MusicLibrary autoFilledTracksArePurgeable]
  -[ML3MusicLibrary setShouldOptimizeStorage:]
  -[ML3MusicLibrary shouldOptimizeStorage]
  -[ML3MusicLibrary setMinimumPurgeableStorage:]
  -[ML3MusicLibrary minimumPurgeableStorage]
  -[ML3MusicLibrary enumeratePurgeableAlbumTracksForUrgency:usingBlock:]
  -[ML3MusicLibrary _shouldPurgeKeepLocalTracksForUrgency:]
  -[ML3MusicLibrary _databaseFileFreeSpace]
  -[ML3MusicLibrary _cloudAssetsTotalSize]
  -[ML3MusicLibrary _artworkTotalSize]
  -[ML3MusicLibrary _shouldPurgeAllArtworkAtUrgency:]
  -[ML3MusicLibrary _purgeAllArtwork]
  -[ML3MusicLibrary _purgeableArtworkTotalSizeWithUrgency:]
  -[ML3MusicLibrary _clearPurgeableArtworkOfAmount:withUrgency:]
  -[ML3MusicLibrary _managedPurgeableTracksTotalSizeWithUrgency:]
  -[ML3MusicLibrary _managedClearPurgeableTracksOfAmount:urgency:]
  -[ML3MusicLibrary _purgeableItemsPredicateSQLWithUrgency:]
  -[ML3MusicLibrary _nonPurgeableAlbumsQuerySQLWithUrgency:]
  -[ML3MusicLibrary _purgeableAlbumsQuerySQLWithUrgency:]
  -[ML3MusicLibrary _totalSizeForAllNonCacheTracks]
  -[ML3MusicLibrary _enumeratePurgeableStreamedTracksForUrgency:usingBlock:]
  -[ML3MusicLibrary _enumeratePurgeableAlbumTracksForUrgency:usingBlock:]
  -[ML3MusicLibrary _enumeratePurgeablePodcastEpisodesForUrgency:usingBlock:]
  -[ML3MusicLibrary _purgeableTracksTotalSizeWithUrgency:includeAutoFilledTracks:]
  -[ML3MusicLibrary _enumeratePurgeableTracksForUrgency:includeAutoFilledTracks:includeCloudAssets:usingBlock:]
  -[ML3MusicLibrary _purgeableTrackPredicateWithUrgency:includeAutoFilledTracks:includeCloudAssets:]
  -[ML3MusicLibrary _allKeepLocalPlaylistTracks]
  -[ML3MusicLibrary _notInKeepLocalCollectionPredicate]
  -[ML3MusicLibrary _clearDatabaseFileFreeSpace]
  -[ML3MusicLibrary _clearAllCloudAssets]
  -[ML3MusicLibrary _clearOrphanedAssetsOfAmount:withUrgency:]
  -[ML3MusicLibrary _clearPurgeableTracksOfAmount:withUrgency:includeAutoFilledTracks:]
  -[ML3MusicLibrary _clearPurgeableTracksOfAmount:withUrgency:includeCloudAssets:includeAutoFilledTracks:]
  -[ML3MusicLibrary artworkDirectory]
  -[ML3MusicLibrary originalArtworkDirectory]
  -[ML3MusicLibrary rootArtworkCacheDirectory]
  -[ML3MusicLibrary artworkCacheDirectoryForSize:]
  -[ML3MusicLibrary artworkCacheDirectoryForEffect:]
  -[ML3MusicLibrary hasOriginalArtworkForRelativePath:]
  -[ML3MusicLibrary isArtworkFetchableForPersistentID:entityType:artworkType:artworkSourceType:]
  -[ML3MusicLibrary supportsUbiquitousPlaybackPositions]
  -[ML3MusicLibrary uppService]
  -[ML3MusicLibrary updateUbiquitousDatabaseByRemovingUbiquitousMetadataFromTrackWithPersistentID:]
  -[ML3MusicLibrary updateMusicLibraryByApplyingUbiquitousBookmarkMetadataToTrackWithPersistentID:]
  -[ML3MusicLibrary sagaLastKnownActiveLockerAccountDSID]
  -[ML3MusicLibrary setSagaLastKnownActiveLockerAccountDSID:]
  -[ML3MusicLibrary sagaLastGeniusUpdateDate]
  -[ML3MusicLibrary setSagaLastGeniusUpdateDate:]
  -[ML3MusicLibrary sagaCloudLibraryCUID]
  -[ML3MusicLibrary setSagaCloudLibraryCUID:]
  -[ML3MusicLibrary sagaCloudLibraryTroveID]
  -[ML3MusicLibrary setSagaCloudLibraryTroveID:]
  -[ML3MusicLibrary sagaCloudAddToPlaylistBehavior]
  -[ML3MusicLibrary setSagaCloudAddToPlaylistBehavior:]
  -[ML3MusicLibrary sagaNeedsFullUpdateAfterNextUpdate]
  -[ML3MusicLibrary setSagaNeedsFullUpdateAfterNextUpdate:]
  -[ML3MusicLibrary sagaPrefersToMergeWithCloudLibrary]
  -[ML3MusicLibrary setSagaPrefersToMergeWithCloudLibrary:]
  -[ML3MusicLibrary clearSagaLastGeniusUpdateDate]
  -[ML3MusicLibrary clearSagaCloudLibraryCUID]
  -[ML3MusicLibrary clearSagaCloudLibraryTroveID]
  -[ML3MusicLibrary clearSagaPrefersToMergeWithCloudLibrary]
  -[ML3MusicLibrary clearSagaCloudAddToPlaylistBehavior]
  -[ML3MusicLibrary syncIdFromMultiverseId:]
  -[ML3MusicLibrary prepareUnitTestDatabaseWithSQLFromContentsOfFile:error:]
  -[ML3MusicLibrary jaliscoAccountID]
  -[ML3MusicLibrary setJaliscoAccountID:]
  -[ML3MusicLibrary jaliscoLastGeniusUpdateDate]
  -[ML3MusicLibrary setJaliscoLastGeniusUpdateDate:]
  -[ML3MusicLibrary jaliscoLastSupportedMediaKinds]
  -[ML3MusicLibrary setJaliscoLastSupportedMediaKinds:]
  -[ML3MusicLibrary jaliscoLastExcludedMediaKinds]
  -[ML3MusicLibrary jaliscoHasCloudGeniusData]
  -[ML3MusicLibrary setJaliscoHasCloudGeniusData:]
  -[ML3MusicLibrary jaliscoIsMusicGeniusUserEnabled]
  -[ML3MusicLibrary setJaliscoIsMusicGeniusUserEnabled:]
  -[ML3MusicLibrary jaliscoNeedsUpdateForTokens]
  -[ML3MusicLibrary setJaliscoNeedsUpdateForTokens:]
  -[ML3MusicLibrary jaliscoOnDiskDatabaseRevision]
  -[ML3MusicLibrary setJaliscoOnDiskDatabaseRevision:]
  -[ML3MusicLibrary jaliscoLastLibraryUpdateTime]
  -[ML3MusicLibrary setJaliscoLastLibraryUpdateTime:]
  -[ML3MusicLibrary clearJaliscoAccountID]
  -[ML3MusicLibrary clearJaliscoLastGeniusUpdateDate]
  -[ML3MusicLibrary clearJaliscoLastExcludedMediaKinds]
  -[ML3MusicLibrary sortJaliscoLastSupportedMediaKinds]
  -[ML3MusicLibrary updateJaliscoExcludedMediaKindsWith:excludingMediaKindsInSet:]


ML3ClientImportItem : NSObject <NSSecureCoding, NSCopying>
 @property  MIPMediaItem *mediaItem
 @property  MIPMultiverseIdentifier *multiverseIdentifier

  // class methods
  +[ML3ClientImportItem supportsSecureCoding]

  // instance methods
  -[ML3ClientImportItem encodeWithCoder:]
  -[ML3ClientImportItem .cxx_destruct]
  -[ML3ClientImportItem copyWithZone:]
  -[ML3ClientImportItem initWithCoder:]
  -[ML3ClientImportItem mediaItem]
  -[ML3ClientImportItem multiverseIdentifier]
  -[ML3ClientImportItem initWithMultiverseIdentifier:mediaItem:]


ML3Track : ML3Entity
  // class methods
  +[ML3Track joinClausesForProperty:]
  +[ML3Track databaseTable]
  +[ML3Track allProperties]
  +[ML3Track initialize]
  +[ML3Track foreignDatabaseTableForProperty:]
  +[ML3Track containerQueryWithContainer:]
  +[ML3Track containerQueryWithContainer:predicate:]
  +[ML3Track containerQueryWithContainer:predicate:orderingTerms:]
  +[ML3Track removeFromMyLibrary:deletionType:persistentIDs:count:]
  +[ML3Track unlinkRedownloadableAssetsFromLibrary:persistentIDs:]
  +[ML3Track TVShowEpisodesDefaultOrderingTerms]
  +[ML3Track albumAllArtistsDefaultOrderingTerms]
  +[ML3Track defaultOrderingTerms]
  +[ML3Track albumsByAlbumArtistDefaultOrderingTerms]
  +[ML3Track albumsDefaultOrderingTerms]
  +[ML3Track deleteFromLibrary:deletionType:persistentIDs:count:]
  +[ML3Track clearLocationFromLibrary:persistentIDs:disableKeepLocal:]
  +[ML3Track podcastsDefaultOrderingTerms]
  +[ML3Track podcastsEpisodesDefaultOrderingTerms]
  +[ML3Track genresDefaultOrderingTerms]
  +[ML3Track trackWithPersistentID:visibleInLibrary:]
  +[ML3Track artistsDefaultOrderingTerms]
  +[ML3Track composersDefaultOrderingTerms]
  +[ML3Track revisionTrackingCode]
  +[ML3Track unsettableProperties]
  +[ML3Track subselectStatementForProperty:]
  +[ML3Track subselectPropertyForProperty:]
  +[ML3Track predicateByOptimizingComparisonPredicate:]
  +[ML3Track sectionPropertyForProperty:]
  +[ML3Track foreignColumnForProperty:]
  +[ML3Track libraryContentsChangeForProperty:]
  +[ML3Track assistantLibraryContentsChangeForProperty:]
  +[ML3Track libraryDynamicChangeForProperty:]
  +[ML3Track deleteFromLibrary:deletionType:persistentIDs:count:usingConnection:]
  +[ML3Track extraTablesToDelete]
  +[ML3Track extraTablesToInsert]
  +[ML3Track persistentIDColumnForTable:]
  +[ML3Track collectionClassesToUpdateBeforeDelete]
  +[ML3Track predisambiguatedProperties]
  +[ML3Track artistAllAlbumsDefaultOrderingTerms]
  +[ML3Track albumAndArtistDefaultOrderingTerms]
  +[ML3Track _writeSyncDeletesToPlistWithLibrary:forPersistentIDs:]
  +[ML3Track trackWithPersistentID:existsInLibrary:]
  +[ML3Track trackWithPersistentID:existsInLibraryWithConnection:]
  +[ML3Track populateSortOrdersOfPropertyValues:inLibrary:cachedNameOrders:]
  +[ML3Track unlinkRedownloadableAssetsFromLibrary:persistentIDs:deletedFileSize:]
  +[ML3Track unlinkRedownloadableAssetsFromLibrary:persistentIDs:deletionType:deletedFileSize:]
  +[ML3Track trackValueAreInTheCloud:]
  +[ML3Track updateAllBookmarkableStoreBookmarkMetadataIdentifiersOnConnection:]
  +[ML3Track registerBookmarkMetadataIdentifierFunctionOnConnection:]
  +[ML3Track clearLocationFromLibrary:persistentIDs:]
  +[ML3Track clearLocationFromLibrary:persistentIDs:usingConnection:]
  +[ML3Track clearLocationFromLibrary:persistentIDs:disableKeepLocal:usingConnection:]
  +[ML3Track clearPlaybackKeysFromLibrary:persistentIDs:]
  +[ML3Track enumeratePathsToDeleteFromLibrary:persistentIDs:usingBlock:]
  +[ML3Track enumeratePathsToDeleteFromLibrary:persistentIDs:usingConnection:usingBlock:]
  +[ML3Track orderingTermsForITTGTrackOrder:descending:]
  +[ML3Track _normalizedImportChapters:trackPersistentID:]
  +[ML3Track flattenedChapterDataWithImportChapters:library:trackPersistentID:]
  +[ML3Track flattenedChapterDataFromSyncInfoDictionaries:trackPersistentID:]
  +[ML3Track flattenedChapterDataFromDAAPInfoDictionary:trackPersistentID:]
  +[ML3Track importChaptersByParsingAsset:]

  // instance methods
  -[ML3Track chapterTOC]
  -[ML3Track populateLocationPropertiesWithPath:protectionType:]
  -[ML3Track populateLocationPropertiesWithPath:protectionType:completionBlock:]
  -[ML3Track multiverseIdentifier]
  -[ML3Track populateLocationPropertiesWithPath:]
  -[ML3Track needsVideoSnapshot]
  -[ML3Track createVideoSnapshotAtTime:]
  -[ML3Track initWithDictionary:inLibrary:cachedNameOrders:usingConnection:]
  -[ML3Track absoluteFilePath]
  -[ML3Track updateIntegrity]
  -[ML3Track rawIntegrity]
  -[ML3Track artworkTokenAtPlaybackTime:]
  -[ML3Track updateCollectionCloudStatus]
  -[ML3Track updateStoreBookmarkMetadataIdentifier]
  -[ML3Track populateArtworkCacheWithArtworkData:]
  -[ML3Track populateChapterDataWithImportChapters:]
  -[ML3Track populateLocationPropertiesWithPath:isProtected:]
  -[ML3Track _populateLocationPropertiesWithPath:protectionType:fromLibrary:usingConnection:]
  -[ML3Track multiverseIdentifierLibraryOnly:]
  -[ML3Track protocolItem]
  -[ML3Track protocolItemForDynamicUpdate]


MIPPodcast : PBCodable <NSCopying>
 @property  BOOL hasArtist
 @property  MIPArtist *artist
 @property  BOOL hasSeries
 @property  MIPSeries *series
 @property  BOOL hasExternalGuid
 @property  NSString *externalGuid
 @property  BOOL hasFeedUrl
 @property  NSString *feedUrl

  // instance methods
  -[MIPPodcast hasArtist]
  -[MIPPodcast copyTo:]
  -[MIPPodcast .cxx_destruct]
  -[MIPPodcast mergeFrom:]
  -[MIPPodcast artist]
  -[MIPPodcast dictionaryRepresentation]
  -[MIPPodcast copyWithZone:]
  -[MIPPodcast setArtist:]
  -[MIPPodcast readFrom:]
  -[MIPPodcast writeTo:]
  -[MIPPodcast isEqual:]
  -[MIPPodcast series]
  -[MIPPodcast feedUrl]
  -[MIPPodcast setFeedUrl:]
  -[MIPPodcast hasSeries]
  -[MIPPodcast setSeries:]
  -[MIPPodcast hasExternalGuid]
  -[MIPPodcast hasFeedUrl]
  -[MIPPodcast externalGuid]
  -[MIPPodcast setExternalGuid:]


ML3PurchaseHistoryImportOperation : ML3DAAPImportOperation
  // instance methods
  -[ML3PurchaseHistoryImportOperation main]
  -[ML3PurchaseHistoryImportOperation importSource]
  -[ML3PurchaseHistoryImportOperation importItemFromDAAPElement:]
  -[ML3PurchaseHistoryImportOperation updateImportProgress:]
  -[ML3PurchaseHistoryImportOperation _performPurchaseHistoryImportWithTransaction:]


ML3TerminationCoordinator : NSObject
 @property  BOOL isSigned

  // class methods
  +[ML3TerminationCoordinator sharedCoordinator]

  // instance methods
  -[ML3TerminationCoordinator signForReason:]
  -[ML3TerminationCoordinator dealloc]
  -[ML3TerminationCoordinator execute]
  -[ML3TerminationCoordinator .cxx_destruct]
  -[ML3TerminationCoordinator secedeForReason:]
  -[ML3TerminationCoordinator isSigned]
  -[ML3TerminationCoordinator _performTermination]
  -[ML3TerminationCoordinator isSignedForReason:]
  -[ML3TerminationCoordinator init]


ML3ContainerTable : ML3DatabaseTable
  // instance methods
  -[ML3ContainerTable columns]
  -[ML3ContainerTable .cxx_destruct]
  -[ML3ContainerTable name]


ML3Query : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *selectPersistentIDsSQL
 @property  NSString *selectCountSQL
 @property  NSString *persistentIDProperty
 @property  ML3MusicLibrary *library
 @property  Class entityClass
 @property  ML3Predicate *predicate
 @property  ML3Predicate *predicateIncludingSystemwidePredicates
 @property  NSArray *orderingTerms
 @property  NSString *propertyToCount
 @property  BOOL hasEntities
 @property  long long anyEntityPersistentID
 @property  unsigned long countOfEntities
 @property  ML3AggregateQuery *nonDirectAggregateQuery
 @property  NSString *sectionProperty
 @property  BOOL usingSections
 @property  unsigned long limit
 @property  BOOL ignoreSystemFilterPredicates
 @property  BOOL ignoreRestrictionsPredicates
 @property  long long options
 @property  BOOL filtersOnDynamicProperties

  // class methods
  +[ML3Query supportsSecureCoding]

  // instance methods
  -[ML3Query limit]
  -[ML3Query sectionProperty]
  -[ML3Query orderingTerms]
  -[ML3Query setLimit:]
  -[ML3Query setIgnoreRestrictionsPredicates:]
  -[ML3Query setIgnoreSystemFilterPredicates:]
  -[ML3Query hasRowForColumn:]
  -[ML3Query reverseQuery]
  -[ML3Query loadNamesFromLibrary:onConnection:forPredicate:loadAllNames:cancelHandler:]
  -[ML3Query lowerBoundParametersForOrderingTerms:lowerBoundPersistentID:]
  -[ML3Query propertyToCount]
  -[ML3Query library]
  -[ML3Query persistentIDProperty]
  -[ML3Query selectSQLWithColumns:groupBy:distinct:]
  -[ML3Query encodeWithCoder:]
  -[ML3Query selectSQLWithColumns:orderingTerms:limit:]
  -[ML3Query entityClass]
  -[ML3Query selectPersistentIDsSQL]
  -[ML3Query usingSections]
  -[ML3Query ignoreRestrictionsPredicates]
  -[ML3Query predicate]
  -[ML3Query enumerationDatabaseResultForSQL:onConnection:withParameters:]
  -[ML3Query .cxx_destruct]
  -[ML3Query selectSQLWithColumns:groupBy:orderingTerms:limit:]
  -[ML3Query countStatementParameters]
  -[ML3Query anyEntityPersistentID]
  -[ML3Query nonDirectAggregateQuery]
  -[ML3Query sectionsPersistentIDColumnIsDistinct]
  -[ML3Query options]
  -[ML3Query sectionsParameters]
  -[ML3Query hasEntities]
  -[ML3Query selectSectionsSQL]
  -[ML3Query filtersOnDynamicProperties]
  -[ML3Query enumeratePersistentIDsAndProperties:ordered:cancelBlock:usingBlock:]
  -[ML3Query selectSQLWithColumns:groupBy:orderingTerms:directionality:usingLowerBound:distinct:limit:]
  -[ML3Query selectSQLWithColumns:groupBy:orderingTerms:]
  -[ML3Query selectSQLWithColumns:orderingTerms:distinct:]
  -[ML3Query valueForAggregateFunction:onEntitiesForProperty:]
  -[ML3Query deleteAllEntitiesFromLibraryWithDeletionType:]
  -[ML3Query selectCountSQL]
  -[ML3Query selectSQLWithColumns:groupBy:orderingTerms:directionality:usingLowerBound:]
  -[ML3Query copyWithZone:]
  -[ML3Query enumeratePersistentIDsAndSectionsWithProperty:usingBlock:]
  -[ML3Query selectPersistentIDsSQLAndProperties:ordered:distinct:]
  -[ML3Query selectUnorderedPersistentIDsSQL]
  -[ML3Query selectSQLWithColumns:orderingTerms:]
  -[ML3Query deleteAllEntitiesFromLibraryWithDeletionType:usingConnection:]
  -[ML3Query sections]
  -[ML3Query enumeratePersistentIDsAndProperties:ordered:usingBlock:]
  -[ML3Query enumerateSectionsUsingBlock:]
  -[ML3Query countOfDistinctRowsForColumn:]
  -[ML3Query deleteAllEntitiesFromLibrary]
  -[ML3Query selectSQLWithColumns:orderingTerms:directionality:]
  -[ML3Query countOfEntities]
  -[ML3Query nameOrderPropertyForProperty:]
  -[ML3Query persistentIDParameters]
  -[ML3Query ignoreSystemFilterPredicates]
  -[ML3Query selectPersistentIDsSQLAndProperties:ordered:]
  -[ML3Query isEqual:]
  -[ML3Query initWithLibrary:entityClass:predicate:orderingTerms:usingSections:nonDirectAggregateQuery:propertyToCount:options:]
  -[ML3Query selectSQLWithColumns:groupBy:]
  -[ML3Query enumeratePersistentIDsUsingBlock:]
  -[ML3Query predicateIncludingSystemwidePredicates]
  -[ML3Query enumeratePersistentIDsAndProperties:usingBlock:]
  -[ML3Query initWithCoder:]
  -[ML3Query enumeratePersistentIDsAndProperties:ordered:sectionProperty:cancelBlock:usingBlock:]


ML3Artist : ML3Collection
  // class methods
  +[ML3Artist databaseTable]
  +[ML3Artist allProperties]
  +[ML3Artist initialize]
  +[ML3Artist defaultOrderingTerms]
  +[ML3Artist trackForeignPersistentID]
  +[ML3Artist revisionTrackingCode]
  +[ML3Artist foreignPropertyForProperty:entityClass:]
  +[ML3Artist propertyIsCountProperty:]
  +[ML3Artist countingQueryForBaseQuery:countProperty:forIdentifier:]
  +[ML3Artist predisambiguatedProperties]
  +[ML3Artist propertiesForGroupingKey]
  +[ML3Artist propertiesForGroupingUniqueCollections]
  +[ML3Artist protocolItemWithProperties:inLibrary:]

  // instance methods
  -[ML3Artist multiverseIdentifier]
  -[ML3Artist updateTrackValues:]
  -[ML3Artist protocolItem]


ML3GenreTable : ML3DatabaseTable
  // instance methods
  -[ML3GenreTable columns]
  -[ML3GenreTable .cxx_destruct]
  -[ML3GenreTable name]


MIPPlaybackInfo : PBCodable <NSCopying>
 @property  BOOL hasBitRate
 @property  int bitRate
 @property  BOOL hasCodecType
 @property  int codecType
 @property  BOOL hasCodecSubType
 @property  int codecSubType
 @property  BOOL hasDataKind
 @property  int dataKind
 @property  BOOL hasDataUrl
 @property  NSString *dataUrl
 @property  BOOL hasEqPreset
 @property  NSString *eqPreset
 @property  BOOL hasPlaybackFormat
 @property  NSString *playbackFormat
 @property  BOOL hasGaplessHeuristicCode
 @property  long long gaplessHeuristicCode
 @property  BOOL hasGaplessHeuristicDelayCode
 @property  long long gaplessHeuristicDelayCode
 @property  BOOL hasGaplessEncodingDrainCode
 @property  long long gaplessEncodingDrainCode
 @property  BOOL hasGaplessFrameResyncCode
 @property  long long gaplessFrameResyncCode
 @property  BOOL hasRelativeVolume
 @property  int relativeVolume
 @property  BOOL hasSampleRate
 @property  int sampleRate
 @property  BOOL hasStartTime
 @property  long long startTime
 @property  BOOL hasStopTime
 @property  long long stopTime
 @property  BOOL hasVolumeNormalizationEnergy
 @property  long long volumeNormalizationEnergy
 @property  BOOL hasBeatsPerMinute
 @property  int beatsPerMinute
 @property  BOOL hasProgressionDirection
 @property  int progressionDirection
 @property  BOOL hasDurationInSamples
 @property  long long durationInSamples

  // instance methods
  -[MIPPlaybackInfo hasStartTime]
  -[MIPPlaybackInfo startTime]
  -[MIPPlaybackInfo setHasStartTime:]
  -[MIPPlaybackInfo copyTo:]
  -[MIPPlaybackInfo setStartTime:]
  -[MIPPlaybackInfo sampleRate]
  -[MIPPlaybackInfo .cxx_destruct]
  -[MIPPlaybackInfo hasStopTime]
  -[MIPPlaybackInfo stopTime]
  -[MIPPlaybackInfo setRelativeVolume:]
  -[MIPPlaybackInfo mergeFrom:]
  -[MIPPlaybackInfo dictionaryRepresentation]
  -[MIPPlaybackInfo setHasStopTime:]
  -[MIPPlaybackInfo copyWithZone:]
  -[MIPPlaybackInfo setStopTime:]
  -[MIPPlaybackInfo readFrom:]
  -[MIPPlaybackInfo relativeVolume]
  -[MIPPlaybackInfo writeTo:]
  -[MIPPlaybackInfo bitRate]
  -[MIPPlaybackInfo isEqual:]
  -[MIPPlaybackInfo setSampleRate:]
  -[MIPPlaybackInfo eqPreset]
  -[MIPPlaybackInfo setHasSampleRate:]
  -[MIPPlaybackInfo hasSampleRate]
  -[MIPPlaybackInfo beatsPerMinute]
  -[MIPPlaybackInfo setBitRate:]
  -[MIPPlaybackInfo codecType]
  -[MIPPlaybackInfo setCodecType:]
  -[MIPPlaybackInfo setHasBitRate:]
  -[MIPPlaybackInfo hasBitRate]
  -[MIPPlaybackInfo setHasCodecType:]
  -[MIPPlaybackInfo hasCodecType]
  -[MIPPlaybackInfo setCodecSubType:]
  -[MIPPlaybackInfo setHasCodecSubType:]
  -[MIPPlaybackInfo hasCodecSubType]
  -[MIPPlaybackInfo setDataKind:]
  -[MIPPlaybackInfo setHasDataKind:]
  -[MIPPlaybackInfo hasDataKind]
  -[MIPPlaybackInfo hasDataUrl]
  -[MIPPlaybackInfo hasEqPreset]
  -[MIPPlaybackInfo hasPlaybackFormat]
  -[MIPPlaybackInfo setGaplessHeuristicCode:]
  -[MIPPlaybackInfo setHasGaplessHeuristicCode:]
  -[MIPPlaybackInfo hasGaplessHeuristicCode]
  -[MIPPlaybackInfo setGaplessHeuristicDelayCode:]
  -[MIPPlaybackInfo setHasGaplessHeuristicDelayCode:]
  -[MIPPlaybackInfo hasGaplessHeuristicDelayCode]
  -[MIPPlaybackInfo setGaplessEncodingDrainCode:]
  -[MIPPlaybackInfo setHasGaplessEncodingDrainCode:]
  -[MIPPlaybackInfo hasGaplessEncodingDrainCode]
  -[MIPPlaybackInfo setGaplessFrameResyncCode:]
  -[MIPPlaybackInfo setHasGaplessFrameResyncCode:]
  -[MIPPlaybackInfo hasGaplessFrameResyncCode]
  -[MIPPlaybackInfo setHasRelativeVolume:]
  -[MIPPlaybackInfo hasRelativeVolume]
  -[MIPPlaybackInfo setVolumeNormalizationEnergy:]
  -[MIPPlaybackInfo setHasVolumeNormalizationEnergy:]
  -[MIPPlaybackInfo hasVolumeNormalizationEnergy]
  -[MIPPlaybackInfo setBeatsPerMinute:]
  -[MIPPlaybackInfo setHasBeatsPerMinute:]
  -[MIPPlaybackInfo hasBeatsPerMinute]
  -[MIPPlaybackInfo setProgressionDirection:]
  -[MIPPlaybackInfo setHasProgressionDirection:]
  -[MIPPlaybackInfo hasProgressionDirection]
  -[MIPPlaybackInfo setDurationInSamples:]
  -[MIPPlaybackInfo setHasDurationInSamples:]
  -[MIPPlaybackInfo hasDurationInSamples]
  -[MIPPlaybackInfo codecSubType]
  -[MIPPlaybackInfo dataKind]
  -[MIPPlaybackInfo dataUrl]
  -[MIPPlaybackInfo setDataUrl:]
  -[MIPPlaybackInfo setEqPreset:]
  -[MIPPlaybackInfo playbackFormat]
  -[MIPPlaybackInfo setPlaybackFormat:]
  -[MIPPlaybackInfo gaplessHeuristicCode]
  -[MIPPlaybackInfo gaplessHeuristicDelayCode]
  -[MIPPlaybackInfo gaplessEncodingDrainCode]
  -[MIPPlaybackInfo gaplessFrameResyncCode]
  -[MIPPlaybackInfo volumeNormalizationEnergy]
  -[MIPPlaybackInfo progressionDirection]
  -[MIPPlaybackInfo durationInSamples]


ML3ProcessDownloadedAssetsOperation : ML3DatabaseOperation
  // instance methods
  -[ML3ProcessDownloadedAssetsOperation type]
  -[ML3ProcessDownloadedAssetsOperation _execute:]
  -[ML3ProcessDownloadedAssetsOperation initWithLibrary:writer:]
  -[ML3ProcessDownloadedAssetsOperation _processTrackAsset:forSource:withError:]
  -[ML3ProcessDownloadedAssetsOperation _processContainerAsset:forSource:withError:]
  -[ML3ProcessDownloadedAssetsOperation _processArtworkIdentifier:artworkToken:artworkType:mediaType:sourceType:]
  -[ML3ProcessDownloadedAssetsOperation _videoSnapshotTimeForMediaType:]
  -[ML3ProcessDownloadedAssetsOperation _processGeniusPlist:geniusIDString:geniusChecksum:]
  -[ML3ProcessDownloadedAssetsOperation _artworkSourceFromTrackSource:]


ML3Album : ML3Collection
  // class methods
  +[ML3Album joinClausesForProperty:]
  +[ML3Album databaseTable]
  +[ML3Album allProperties]
  +[ML3Album initialize]
  +[ML3Album defaultOrderingTerms]
  +[ML3Album trackForeignPersistentID]
  +[ML3Album revisionTrackingCode]
  +[ML3Album foreignPropertyForProperty:entityClass:]
  +[ML3Album propertyIsCountProperty:]
  +[ML3Album countingQueryForBaseQuery:countProperty:forIdentifier:]
  +[ML3Album libraryContentsChangeForProperty:]
  +[ML3Album assistantLibraryContentsChangeForProperty:]
  +[ML3Album predisambiguatedProperties]
  +[ML3Album propertiesForGroupingKey]
  +[ML3Album propertiesForGroupingUniqueCollections]
  +[ML3Album protocolItemWithProperties:inLibrary:]
  +[ML3Album _albumArtistProtocolItemWithTrackProperties:inLibrary:]

  // instance methods
  -[ML3Album multiverseIdentifier]
  -[ML3Album updateTrackValues:]
  -[ML3Album protocolItem]


ML3MusicLibrary_SortMapEntry : NSObject
  // instance methods
  -[ML3MusicLibrary_SortMapEntry .cxx_destruct]
  -[ML3MusicLibrary_SortMapEntry initWithName:nameSection:sortKey:nameOrder:dirtyFlag:]
  -[ML3MusicLibrary_SortMapEntry initWithName:nameSection:sortKey:]


ML3SortMap : NSObject
  // instance methods
  -[ML3SortMap commitUpdates]
  -[ML3SortMap .cxx_destruct]
  -[ML3SortMap insertStringsIntoSortMap:didReSortMap:]
  -[ML3SortMap initWithConnection:library:preloadNames:]
  -[ML3SortMap loadExistingSortedEntries]
  -[ML3SortMap attemptInsertStringsIntoSortMap:]
  -[ML3SortMap commitFailedInsertedStrings:]
  -[ML3SortMap _sortedNameEntriesToInsertForNames:]
  -[ML3SortMap _insertSortedNameEntriesIntoSortMap:]
  -[ML3SortMap _minSortKeyForEntry:iPhoneSortKeyBuilder:]
  -[ML3SortMap _maxSortKeyForEntry:iPhoneSortKeyBuilder:]
  -[ML3SortMap _minNameOrderForSortMapEntry:iPhoneSortKeyBuilder:]
  -[ML3SortMap _maxNameOrderForSortMapEntry:iPhoneSortKeyBuilder:]
  -[ML3SortMap _sortKeyDistance:sortKey2:offset:]
  -[ML3SortMap _sortKeyString:]
  -[ML3SortMap nameOrders]


ML3SortMapFaultingEntryArray : NSMutableArray
  // instance methods
  -[ML3SortMapFaultingEntryArray replaceObjectAtIndex:withObject:]
  -[ML3SortMapFaultingEntryArray .cxx_destruct]
  -[ML3SortMapFaultingEntryArray addObject:]
  -[ML3SortMapFaultingEntryArray count]
  -[ML3SortMapFaultingEntryArray removeObjectAtIndex:]
  -[ML3SortMapFaultingEntryArray insertObject:atIndex:]
  -[ML3SortMapFaultingEntryArray objectAtIndex:]
  -[ML3SortMapFaultingEntryArray removeLastObject]


_ML3SortMapFaultingNameOrderDictionaryEnumerator : NSEnumerator
  // instance methods
  -[_ML3SortMapFaultingNameOrderDictionaryEnumerator .cxx_destruct]
  -[_ML3SortMapFaultingNameOrderDictionaryEnumerator nextObject]
  -[_ML3SortMapFaultingNameOrderDictionaryEnumerator initWithDirtyInsertsEnumerator:connection:]


ML3SortMapFaultingNameOrderDictionary : NSMutableDictionary
  // instance methods
  -[ML3SortMapFaultingNameOrderDictionary initWithObjects:forKeys:count:]
  -[ML3SortMapFaultingNameOrderDictionary setObject:forKey:]
  -[ML3SortMapFaultingNameOrderDictionary keyEnumerator]
  -[ML3SortMapFaultingNameOrderDictionary .cxx_destruct]
  -[ML3SortMapFaultingNameOrderDictionary count]
  -[ML3SortMapFaultingNameOrderDictionary removeObjectForKey:]
  -[ML3SortMapFaultingNameOrderDictionary objectForKey:]


ML3HomeSharingImportOperation : ML3DAAPImportOperation
  // instance methods
  -[ML3HomeSharingImportOperation main]
  -[ML3HomeSharingImportOperation importSource]
  -[ML3HomeSharingImportOperation importItemFromDAAPElement:]
  -[ML3HomeSharingImportOperation containerImportItemFromDAAPElement:withTrackIds:trackPersonIdentifiers:]
  -[ML3HomeSharingImportOperation updateImportProgress:]
  -[ML3HomeSharingImportOperation _performHomeSharingImportWithTransaction:]


ML3Predicate : NSObject <NSSecureCoding, NSCopying>
  // class methods
  +[ML3Predicate supportsSecureCoding]

  // instance methods
  -[ML3Predicate databaseStatementParameters]
  -[ML3Predicate encodeWithCoder:]
  -[ML3Predicate SQLJoinClausesForClass:]
  -[ML3Predicate SQLForEntityClass:]
  -[ML3Predicate containsPropertyPredicate:matchingValue:usingComparison:]
  -[ML3Predicate isDynamicForEntityClass:]
  -[ML3Predicate appendSQLToMutableString:entityClass:]
  -[ML3Predicate spotlightPredicate]
  -[ML3Predicate copyWithZone:]
  -[ML3Predicate isEqual:]
  -[ML3Predicate initWithCoder:]
  -[ML3Predicate isTrueAlways]
  -[ML3Predicate isFalseAlways]


ML3TruthPredicate : ML3Predicate
  // class methods
  +[ML3TruthPredicate supportsSecureCoding]
  +[ML3TruthPredicate falsePredicate]
  +[ML3TruthPredicate truePredicate]

  // instance methods
  -[ML3TruthPredicate encodeWithCoder:]
  -[ML3TruthPredicate appendSQLToMutableString:entityClass:]
  -[ML3TruthPredicate isEqual:]
  -[ML3TruthPredicate initWithCoder:]
  -[ML3TruthPredicate _predicateString]
  -[ML3TruthPredicate isTrueAlways]
  -[ML3TruthPredicate isFalseAlways]


ML3UnaryPredicate : ML3Predicate
 @property  ML3Predicate *predicate

  // class methods
  +[ML3UnaryPredicate supportsSecureCoding]
  +[ML3UnaryPredicate predicateWithPredicate:]

  // instance methods
  -[ML3UnaryPredicate setPredicate:]
  -[ML3UnaryPredicate initWithPredicate:]
  -[ML3UnaryPredicate databaseStatementParameters]
  -[ML3UnaryPredicate encodeWithCoder:]
  -[ML3UnaryPredicate SQLJoinClausesForClass:]
  -[ML3UnaryPredicate predicate]
  -[ML3UnaryPredicate .cxx_destruct]
  -[ML3UnaryPredicate isEqual:]
  -[ML3UnaryPredicate initWithCoder:]


ML3NegationPredicate : ML3UnaryPredicate
  // class methods
  +[ML3NegationPredicate supportsSecureCoding]

  // instance methods
  -[ML3NegationPredicate appendSQLToMutableString:entityClass:]


ML3PropertyPredicate : ML3Predicate
 @property  NSString *property

  // class methods
  +[ML3PropertyPredicate supportsSecureCoding]
  +[ML3PropertyPredicate predicateWithProperty:]

  // instance methods
  -[ML3PropertyPredicate setProperty:]
  -[ML3PropertyPredicate property]
  -[ML3PropertyPredicate encodeWithCoder:]
  -[ML3PropertyPredicate SQLJoinClausesForClass:]
  -[ML3PropertyPredicate isDynamicForEntityClass:]
  -[ML3PropertyPredicate .cxx_destruct]
  -[ML3PropertyPredicate initWithProperty:]
  -[ML3PropertyPredicate appendSQLToMutableString:entityClass:]
  -[ML3PropertyPredicate isEqual:]
  -[ML3PropertyPredicate initWithCoder:]


ML3ContainmentPredicate : ML3PropertyPredicate
 @property  NSSet *values

  // class methods
  +[ML3ContainmentPredicate supportsSecureCoding]
  +[ML3ContainmentPredicate predicateWithProperty:values:]

  // instance methods
  -[ML3ContainmentPredicate values]
  -[ML3ContainmentPredicate databaseStatementParameters]
  -[ML3ContainmentPredicate encodeWithCoder:]
  -[ML3ContainmentPredicate setValues:]
  -[ML3ContainmentPredicate containsPropertyPredicate:matchingValue:usingComparison:]
  -[ML3ContainmentPredicate _orderedValues]
  -[ML3ContainmentPredicate .cxx_destruct]
  -[ML3ContainmentPredicate appendSQLToMutableString:entityClass:]
  -[ML3ContainmentPredicate initWithProperty:values:]
  -[ML3ContainmentPredicate isEqual:]
  -[ML3ContainmentPredicate initWithCoder:]


ML3ComparisonPredicate : ML3PropertyPredicate
 @property  id value
 @property  int comparison
 @property  BOOL caseInsensitive
 @property  NSString *treatNullAsString
 @property  NSString *transformFunction

  // class methods
  +[ML3ComparisonPredicate supportsSecureCoding]
  +[ML3ComparisonPredicate predicateWithProperty:value:comparison:caseInsensitive:]
  +[ML3ComparisonPredicate predicateWithProperty:equalToValue:]
  +[ML3ComparisonPredicate predicateWithProperty:value:comparison:transformFunction:]
  +[ML3ComparisonPredicate predicateWithProperty:equalToInteger:]
  +[ML3ComparisonPredicate predicateWithProperty:value:comparison:caseInsensitive:treatNullAsString:]
  +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]
  +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]

  // instance methods
  -[ML3ComparisonPredicate treatNullAsString]
  -[ML3ComparisonPredicate operator]
  -[ML3ComparisonPredicate databaseStatementParameters]
  -[ML3ComparisonPredicate encodeWithCoder:]
  -[ML3ComparisonPredicate containsPropertyPredicate:matchingValue:usingComparison:]
  -[ML3ComparisonPredicate .cxx_destruct]
  -[ML3ComparisonPredicate appendSQLToMutableString:entityClass:]
  -[ML3ComparisonPredicate transformFunction]
  -[ML3ComparisonPredicate initWithProperty:value:comparison:caseInsensitive:transformFunction:treatNullAsString:]
  -[ML3ComparisonPredicate comparison]
  -[ML3ComparisonPredicate value]
  -[ML3ComparisonPredicate caseInsensitive]
  -[ML3ComparisonPredicate valueToBindForOperation:]
  -[ML3ComparisonPredicate isEqual:]
  -[ML3ComparisonPredicate initWithCoder:]


ML3ContainsPredicate : ML3PropertyPredicate
 @property  id values

  // class methods
  +[ML3ContainsPredicate supportsSecureCoding]
  +[ML3ContainsPredicate predicateWithProperty:values:]
  +[ML3ContainsPredicate predicateWithProperty:valueSet:]

  // instance methods
  -[ML3ContainsPredicate values]
  -[ML3ContainsPredicate databaseStatementParameters]
  -[ML3ContainsPredicate encodeWithCoder:]
  -[ML3ContainsPredicate setValues:]
  -[ML3ContainsPredicate containsPropertyPredicate:matchingValue:usingComparison:]
  -[ML3ContainsPredicate .cxx_destruct]
  -[ML3ContainsPredicate appendSQLToMutableString:entityClass:]
  -[ML3ContainsPredicate initWithProperty:values:]
  -[ML3ContainsPredicate isEqual:]
  -[ML3ContainsPredicate initWithCoder:]


ML3PersistentIDsPredicate : ML3Predicate
 @property  BOOL shouldContain

  // class methods
  +[ML3PersistentIDsPredicate supportsSecureCoding]
  +[ML3PersistentIDsPredicate predicateWithPersistentIDs:count:shouldContain:]
  +[ML3PersistentIDsPredicate predicateWithPersistentIDs:shouldContain:]

  // instance methods
  -[ML3PersistentIDsPredicate databaseStatementParameters]
  -[ML3PersistentIDsPredicate encodeWithCoder:]
  -[ML3PersistentIDsPredicate dealloc]
  -[ML3PersistentIDsPredicate .cxx_destruct]
  -[ML3PersistentIDsPredicate appendSQLToMutableString:entityClass:]
  -[ML3PersistentIDsPredicate isEqual:]
  -[ML3PersistentIDsPredicate initWithCoder:]
  -[ML3PersistentIDsPredicate shouldContain]
  -[ML3PersistentIDsPredicate initWithPersistentIDs:shouldContain:]


ML3BitMaskPredicate : ML3PropertyPredicate
 @property  long long mask
 @property  long long value

  // class methods
  +[ML3BitMaskPredicate supportsSecureCoding]
  +[ML3BitMaskPredicate predicateWithProperty:mask:value:]

  // instance methods
  -[ML3BitMaskPredicate mask]
  -[ML3BitMaskPredicate databaseStatementParameters]
  -[ML3BitMaskPredicate initWithProperty:mask:value:]
  -[ML3BitMaskPredicate encodeWithCoder:]
  -[ML3BitMaskPredicate appendSQLToMutableString:entityClass:]
  -[ML3BitMaskPredicate setMask:]
  -[ML3BitMaskPredicate setValue:]
  -[ML3BitMaskPredicate value]
  -[ML3BitMaskPredicate isEqual:]
  -[ML3BitMaskPredicate initWithCoder:]


ML3SearchStringPredicate : ML3Predicate
 @property  NSArray *properties
 @property  NSString *searchString

  // class methods
  +[ML3SearchStringPredicate supportsSecureCoding]
  +[ML3SearchStringPredicate predicateWithConcatenatedProperties:searchString:]

  // instance methods
  -[ML3SearchStringPredicate setProperties:]
  -[ML3SearchStringPredicate properties]
  -[ML3SearchStringPredicate databaseStatementParameters]
  -[ML3SearchStringPredicate encodeWithCoder:]
  -[ML3SearchStringPredicate SQLJoinClausesForClass:]
  -[ML3SearchStringPredicate isDynamicForEntityClass:]
  -[ML3SearchStringPredicate .cxx_destruct]
  -[ML3SearchStringPredicate appendSQLToMutableString:entityClass:]
  -[ML3SearchStringPredicate searchString]
  -[ML3SearchStringPredicate setSearchString:]
  -[ML3SearchStringPredicate isEqual:]
  -[ML3SearchStringPredicate initWithCoder:]
  -[ML3SearchStringPredicate initWithConcatenatedProperties:searchString:]


ML3CompoundPredicate : ML3Predicate
 @property  NSArray *predicates
 @property  NSString *compoundOperatorJoiner

  // class methods
  +[ML3CompoundPredicate supportsSecureCoding]
  +[ML3CompoundPredicate predicateMatchingPredicates:]

  // instance methods
  -[ML3CompoundPredicate setPredicates:]
  -[ML3CompoundPredicate predicates]
  -[ML3CompoundPredicate initWithPredicates:]
  -[ML3CompoundPredicate databaseStatementParameters]
  -[ML3CompoundPredicate encodeWithCoder:]
  -[ML3CompoundPredicate SQLJoinClausesForClass:]
  -[ML3CompoundPredicate containsPropertyPredicate:matchingValue:usingComparison:]
  -[ML3CompoundPredicate isDynamicForEntityClass:]
  -[ML3CompoundPredicate .cxx_destruct]
  -[ML3CompoundPredicate appendSQLToMutableString:entityClass:]
  -[ML3CompoundPredicate spotlightPredicate]
  -[ML3CompoundPredicate isEqual:]
  -[ML3CompoundPredicate initWithCoder:]


ML3AllCompoundPredicate : ML3CompoundPredicate
  // class methods
  +[ML3AllCompoundPredicate supportsSecureCoding]
  +[ML3AllCompoundPredicate predicateByFlatteningAllCompoundPredicate:]
  +[ML3AllCompoundPredicate predicateByMergingContainmentPredicatesAllCompoundPredicate:]

  // instance methods
  -[ML3AllCompoundPredicate compoundOperatorJoiner]


ML3AnyCompoundPredicate : ML3CompoundPredicate
  // class methods
  +[ML3AnyCompoundPredicate supportsSecureCoding]

  // instance methods
  -[ML3AnyCompoundPredicate compoundOperatorJoiner]


ML3ConditionalPredicate : ML3Predicate
 @property  ML3Predicate *conditionPredicate
 @property  ML3Predicate *thenPredicate
 @property  ML3Predicate *elsePredicate

  // class methods
  +[ML3ConditionalPredicate supportsSecureCoding]
  +[ML3ConditionalPredicate predicateWithConditionPredicate:thenPredicate:elsePredicate:]

  // instance methods
  -[ML3ConditionalPredicate databaseStatementParameters]
  -[ML3ConditionalPredicate encodeWithCoder:]
  -[ML3ConditionalPredicate SQLJoinClausesForClass:]
  -[ML3ConditionalPredicate isDynamicForEntityClass:]
  -[ML3ConditionalPredicate .cxx_destruct]
  -[ML3ConditionalPredicate appendSQLToMutableString:entityClass:]
  -[ML3ConditionalPredicate spotlightPredicate]
  -[ML3ConditionalPredicate isEqual:]
  -[ML3ConditionalPredicate initWithCoder:]
  -[ML3ConditionalPredicate initWithConditionPredicate:thenPredicate:elsePredicate:]
  -[ML3ConditionalPredicate conditionPredicate]
  -[ML3ConditionalPredicate thenPredicate]
  -[ML3ConditionalPredicate elsePredicate]


ML3QuerySection : NSObject
 @property  {_NSRange=QQ} range
 @property  unsigned long sectionIndex

  // instance methods
  -[ML3QuerySection setRange:]
  -[ML3QuerySection range]
  -[ML3QuerySection isEqual:]
  -[ML3QuerySection sectionIndex]
  -[ML3QuerySection setSectionIndex:]
  -[ML3QuerySection initWithRange:sectionIndex:]


ML3Collection : ML3Entity
  // class methods
  +[ML3Collection initialize]
  +[ML3Collection trackForeignPersistentID]
  +[ML3Collection foreignPropertyForProperty:entityClass:]
  +[ML3Collection libraryContentsChangeForProperty:]
  +[ML3Collection deleteFromLibrary:deletionType:persistentIDs:count:usingConnection:]
  +[ML3Collection propertiesForGroupingKey]
  +[ML3Collection propertiesForGroupingUniqueCollections]
  +[ML3Collection artworkCacheIDProperty]
  +[ML3Collection updateRepresentativeItemPersistentIDsInLibrary:persistentIDs:usingConnection:]
  +[ML3Collection canonicalizeCollectionRepresentativeItemsInLibrary:usingConnection:]
  +[ML3Collection removeOrphanedCollectionsInLibrary:usingConnection:]
  +[ML3Collection collectionEntityClasses]
  +[ML3Collection _updateRepresentativeItemsForPersistentIDs:usingConnection:]

  // instance methods
  -[ML3Collection initWithDictionary:inLibrary:cachedNameOrders:usingConnection:]
  -[ML3Collection updateTrackValues:]
  -[ML3Collection updateRepresentativeCollectionValues:existingRepresentativePersistentID:forUpdateTrackValues:]
  -[ML3Collection updateCloudStatus]


ML3AggregateQuery : ML3Query <NSSecureCoding>
 @property  Class aggregateEntityClass
 @property  NSString *foreignPersistentIDProperty
 @property  BOOL isFastCountable

  // class methods
  +[ML3AggregateQuery supportsSecureCoding]

  // instance methods
  -[ML3AggregateQuery persistentIDProperty]
  -[ML3AggregateQuery encodeWithCoder:]
  -[ML3AggregateQuery isFastCountable]
  -[ML3AggregateQuery entityClass]
  -[ML3AggregateQuery dealloc]
  -[ML3AggregateQuery .cxx_destruct]
  -[ML3AggregateQuery setIsFastCountable:]
  -[ML3AggregateQuery sectionsPersistentIDColumnIsDistinct]
  -[ML3AggregateQuery hasEntities]
  -[ML3AggregateQuery copyWithZone:]
  -[ML3AggregateQuery initWithUnitQuery:aggregateEntityClass:foreignPersistentIDProperty:]
  -[ML3AggregateQuery foreignPersistentIDProperty]
  -[ML3AggregateQuery countOfEntities]
  -[ML3AggregateQuery selectPersistentIDsSQLAndProperties:ordered:]
  -[ML3AggregateQuery aggregateEntityClass]
  -[ML3AggregateQuery initWithCoder:]


ML3ComposerTable : ML3DatabaseTable
  // instance methods
  -[ML3ComposerTable columns]
  -[ML3ComposerTable .cxx_destruct]
  -[ML3ComposerTable name]


ML3Genre : ML3Collection
  // class methods
  +[ML3Genre joinClausesForProperty:]
  +[ML3Genre databaseTable]
  +[ML3Genre allProperties]
  +[ML3Genre initialize]
  +[ML3Genre defaultOrderingTerms]
  +[ML3Genre trackForeignPersistentID]
  +[ML3Genre revisionTrackingCode]
  +[ML3Genre foreignPropertyForProperty:entityClass:]
  +[ML3Genre propertyIsCountProperty:]
  +[ML3Genre countingQueryForBaseQuery:countProperty:forIdentifier:]
  +[ML3Genre predisambiguatedProperties]
  +[ML3Genre propertiesForGroupingKey]
  +[ML3Genre protocolItemWithProperties:inLibrary:]

  // instance methods
  -[ML3Genre multiverseIdentifier]
  -[ML3Genre updateTrackValues:]
  -[ML3Genre protocolItem]


ML3ExportItem : NSObject
 @property  long long persistentId
 @property  ML3MusicLibrary *library
 @property  Class entityClass

  // class methods
  +[ML3ExportItem allExportPropertyKeysForEntityClass:returnedCount:]

  // instance methods
  -[ML3ExportItem valueForProperty:]
  -[ML3ExportItem library]
  -[ML3ExportItem entityClass]
  -[ML3ExportItem isValid]
  -[ML3ExportItem .cxx_destruct]
  -[ML3ExportItem exportData]
  -[ML3ExportItem initWithPersistentId:entityClass:library:]
  -[ML3ExportItem initWithPersistentId:entityClass:propertyKeysToExport:numKeys:library:]
  -[ML3ExportItem initWithPersistentId:entityClass:properties:library:]
  -[ML3ExportItem charValueForProperty:]
  -[ML3ExportItem shortValueForProperty:]
  -[ML3ExportItem longValueForProperty:]
  -[ML3ExportItem longlongValueForProperty:]
  -[ML3ExportItem dataValueForProperty:]
  -[ML3ExportItem stringValueForProperty:]
  -[ML3ExportItem hasValueForProperty:]
  -[ML3ExportItem propertyKeysToExport:]
  -[ML3ExportItem _propertyNameForKey:]
  -[ML3ExportItem _propertyNamesFromKeys:numKeys:]
  -[ML3ExportItem _allExportPropertyNames]
  -[ML3ExportItem persistentId]


ML3Container : ML3Entity
 @property  ML3Predicate *smartCriteriaPredicate
 @property  BOOL limitedByCount
 @property  BOOL limitOrderingDescending
 @property  NSString *limitingProperty
 @property  NSArray *limitOrderingTerms
 @property  long long limitValue
 @property  NSArray *cloudDisplayOrderingTerms
 @property  NSArray *displayOrderingTerms

  // class methods
  +[ML3Container joinClausesForProperty:]
  +[ML3Container databaseTable]
  +[ML3Container initialize]
  +[ML3Container foreignDatabaseTableForProperty:]
  +[ML3Container defaultOrderingTerms]
  +[ML3Container updateLovedPlaylistByAddingTrackWithPersistentID:inLibrary:]
  +[ML3Container updateLovedPlaylistByRemovingTrackWithPersistentID:inLibrary:]
  +[ML3Container deleteFromLibrary:deletionType:persistentIDs:count:]
  +[ML3Container revisionTrackingCode]
  +[ML3Container defaultFilterPredicates]
  +[ML3Container sectionPropertyForProperty:]
  +[ML3Container foreignColumnForProperty:]
  +[ML3Container libraryContentsChangeForProperty:]
  +[ML3Container assistantLibraryContentsChangeForProperty:]
  +[ML3Container libraryDynamicChangeForProperty:]
  +[ML3Container extraTablesToDelete]
  +[ML3Container persistentIDColumnForTable:]
  +[ML3Container populateSortOrdersOfPropertyValues:inLibrary:cachedNameOrders:]
  +[ML3Container nextFilepathForPlaylistType:withPersistentID:inLibrary:]
  +[ML3Container smartCriteriaCanBeEvaluated:]
  +[ML3Container hasCriterionInCriteriaList:forITDBTrackField:]
  +[ML3Container predicateForCriteriaList:parentMatchedAny:]
  +[ML3Container updateBuiltInSmartPlaylistNamesForCurrentLanguageInLibrary:]
  +[ML3Container autoCreatedBuiltInSmartPlaylistsPIDs:]
  +[ML3Container deleteAutoCreatedBuiltInSmartPlaylistsPIDs:inLibrary:]
  +[ML3Container _updateContainedMediaTypeInContainerWithPersistentID:connection:itemUpdateBlock:]
  +[ML3Container _mediaTypesForTracksWithPersistentIDs:usingConnection:]
  +[ML3Container _mediaTypesForTracksInContainerWithPersistentID:connection:]
  +[ML3Container _clearContainerMediaTypeInContainerWithPersistentID:connection:]
  +[ML3Container _addMediaTypesToContainerWithPersistentID:mediaTypes:connection:]
  +[ML3Container _removeMediaTypesFromContainerWithPersistentID:mediaTypes:connection:]
  +[ML3Container populateMediaTypesOfStaticContainersInLibrary:]
  +[ML3Container _lovedPlaylistContainerPID:trackPositions:forTrackWithPersistentID:usingConnection:]
  +[ML3Container removeAnyNonLibraryItemsInPersistentIDs:fromContainersInLibrary:usingConnection:]
  +[ML3Container removeNonLibraryItemsFromContainersInLibrary:usingConnection:]
  +[ML3Container removeNonLibraryItemsFromContainer:usingConnection:]
  +[ML3Container reloadContainedMediaTypesForContainerWithPersistID:usingConnection:]
  +[ML3Container _allStaticItemContainersInLibrary:usingConnection:]
  +[ML3Container _insertNewSmartPlaylist:criteriaBlob:evaluationOrder:limited:trackOrder:distinguishedKind:inLibrary:cachedNameOrders:]
  +[ML3Container _reloadContainedMediaTypes:removedMediaTypes:addedMediaTypes:notify:incrementEntityRevision:usingLibrary:connection:forContainerPersistentID:]
  +[ML3Container trackOrderFromProtocolSortType:]
  +[ML3Container protocolSortTypeFromTrackOrder:]

  // instance methods
  -[ML3Container limitValue]
  -[ML3Container removeFirstTrack]
  -[ML3Container setTracksWithPersistentIDs:notify:]
  -[ML3Container removeTracksAtIndexes:notify:]
  -[ML3Container setValues:forProperties:async:withCompletionBlock:]
  -[ML3Container moveTrackFromIndex:toIndex:]
  -[ML3Container appendTracksWithPersistentIDs:notify:]
  -[ML3Container removeAllTracks]
  -[ML3Container multiverseIdentifier]
  -[ML3Container initWithDictionary:inLibrary:cachedNameOrders:usingConnection:]
  -[ML3Container importedCriteriaList]
  -[ML3Container smartCriteriaPredicate]
  -[ML3Container isEvaluationOrderingDescending]
  -[ML3Container isLimitedByCount]
  -[ML3Container isLimitOrderingDescending]
  -[ML3Container limitingProperty]
  -[ML3Container evaluationOrderingTerms]
  -[ML3Container limitOrderingTerms]
  -[ML3Container cloudDisplayOrderingTerms]
  -[ML3Container displayOrderingTerms]
  -[ML3Container trackPersistentIds]
  -[ML3Container childPlaylistPersistentIds]
  -[ML3Container isBuiltInSmartPlaylist]
  -[ML3Container _maxPositionForTracksUsingConnection:]
  -[ML3Container _reloadContainedMediaTypes:removedMediaTypes:addedMediaTypes:notify:incrementEntityRevision:usingConnection:]
  -[ML3Container _removeTracksAtIndexes:notify:usingConnection:]
  -[ML3Container _setContainerSeedItemPersistentIDValue:]
  -[ML3Container _supportsOrderedTrackOperations]
  -[ML3Container _setItemPersistentIDs:reloadContainedMediaTypes:removedMediaTypes:addedMediaTypes:notify:incrementEntityRevision:usingConnection:]
  -[ML3Container protocolItem]
  -[ML3Container criteriaListDescription]
  -[ML3Container _criteriaListDescription:level:]
  -[ML3Container _addUnitesForCriterionInfo:]
  -[ML3Container _booleanStringForCriteriaInfo:]
  -[ML3Container _dateStringForCriteriaInfo:]
  -[ML3Container _nonzeroStringForCriteriaInfo:]
  -[ML3Container _numericStringForCriteriaInfo:]
  -[ML3Container _convertNumericValueFromCriterionMatchKey:criteriaValue:]
  -[ML3Container _formatTime:]
  -[ML3Container _stringForCriterionBuffer:]
  -[ML3Container _stringForCriterionMatchKey:]
  -[ML3Container _stringForCriterionMatchType:]
  -[ML3Container _stringForTrackFieldCloudStatus:]
  -[ML3Container _stringForTrackFieldMediaKind:]
  -[ML3Container _stringStringForCriteriaInfo:]


ML3ContainerQuery : ML3Query
 @property  NSArray *limitedPersistentIDs
 @property  ML3Container *container
 @property  BOOL requiresSmartLimiting

  // class methods
  +[ML3ContainerQuery supportsSecureCoding]

  // instance methods
  -[ML3ContainerQuery requiresSmartLimiting]
  -[ML3ContainerQuery encodeWithCoder:]
  -[ML3ContainerQuery initWithEntityClass:container:predicate:orderingTerms:]
  -[ML3ContainerQuery selectPersistentIDsSQLAndPropertiesForResultSet:ordered:]
  -[ML3ContainerQuery enumerationDatabaseResultForSQL:onConnection:withParameters:]
  -[ML3ContainerQuery .cxx_destruct]
  -[ML3ContainerQuery container]
  -[ML3ContainerQuery hasEntities]
  -[ML3ContainerQuery valueForAggregateFunction:onEntitiesForProperty:]
  -[ML3ContainerQuery copyWithZone:]
  -[ML3ContainerQuery limitedPersistentIDs]
  -[ML3ContainerQuery countOfDistinctRowsForColumn:]
  -[ML3ContainerQuery countOfEntities]
  -[ML3ContainerQuery selectPersistentIDsSQLAndProperties:ordered:]
  -[ML3ContainerQuery initWithCoder:]


ML3ProtoSyncImportOperation : ML3ImportOperation
  // instance methods
  -[ML3ProtoSyncImportOperation .cxx_destruct]
  -[ML3ProtoSyncImportOperation main]
  -[ML3ProtoSyncImportOperation cancel]
  -[ML3ProtoSyncImportOperation importSource]
  -[ML3ProtoSyncImportOperation initWithDatabaseImport:]
  -[ML3ProtoSyncImportOperation _performImportWithTransaction:]
  -[ML3ProtoSyncImportOperation _processSyncPackage:withImportSession:]
  -[ML3ProtoSyncImportOperation _processSyncHeader:]
  -[ML3ProtoSyncImportOperation _processSyncError:]
  -[ML3ProtoSyncImportOperation _processSyncOperation:withImportSession:]
  -[ML3ProtoSyncImportOperation _processMediaItemOperation:withImportSession:]
  -[ML3ProtoSyncImportOperation _processPlaylistOperation:withImportSession:]
  -[ML3ProtoSyncImportOperation _unlinkUnavailableMediaItems]


ML3ChapterTOC : MLITChapterTOC
  // instance methods
  -[ML3ChapterTOC .cxx_destruct]
  -[ML3ChapterTOC initWithChapterDataRef:track:]


ML3ContainerItemPerson : ML3Entity
  // class methods
  +[ML3ContainerItemPerson databaseTable]
  +[ML3ContainerItemPerson allProperties]
  +[ML3ContainerItemPerson initialize]
  +[ML3ContainerItemPerson defaultOrderingTerms]
  +[ML3ContainerItemPerson revisionTrackingCode]
  +[ML3ContainerItemPerson predisambiguatedProperties]


_ML3MultiUserAccountChangeOperation : MSVAsyncOperation
 @property  NSString *databasePath
 @property  <MLMediaLibraryAccountChangeObserver> *accountChangeObserver

  // instance methods
  -[_ML3MultiUserAccountChangeOperation databasePath]
  -[_ML3MultiUserAccountChangeOperation accountChangeObserver]
  -[_ML3MultiUserAccountChangeOperation setAccountChangeObserver:]
  -[_ML3MultiUserAccountChangeOperation execute]
  -[_ML3MultiUserAccountChangeOperation .cxx_destruct]
  -[_ML3MultiUserAccountChangeOperation initWithDatabasePath:accountChangeObserver:]


MLMediaLibraryResourcesServiceClient : NSObject <MLMediaLibraryAccountChangeObserver, MLMediaLibraryResourcesServiceProtocol>
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  NSObject<OS_dispatch_queue> *calloutQueue
 @property  NSXPCConnection *xpcClientConnection
 @property  <MLMediaLibraryAccountChangeObserver> *accountChangeObserver
 @property  NSOperationQueue *accountChangeOperationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MLMediaLibraryResourcesServiceClient sharedService]

  // instance methods
  -[MLMediaLibraryResourcesServiceClient accountChangeObserver]
  -[MLMediaLibraryResourcesServiceClient calloutQueue]
  -[MLMediaLibraryResourcesServiceClient performDatabasePathChange:completion:]
  -[MLMediaLibraryResourcesServiceClient serialQueue]
  -[MLMediaLibraryResourcesServiceClient setAccountChangeObserver:]
  -[MLMediaLibraryResourcesServiceClient emergencyDisconnectWithCompletion:]
  -[MLMediaLibraryResourcesServiceClient .cxx_destruct]
  -[MLMediaLibraryResourcesServiceClient setAccountChangeOperationQueue:]
  -[MLMediaLibraryResourcesServiceClient terminateForFailureToPerformDatabasePathChange]
  -[MLMediaLibraryResourcesServiceClient accountChangeOperationQueue]
  -[MLMediaLibraryResourcesServiceClient libraryContainerPathWithError:]
  -[MLMediaLibraryResourcesServiceClient _initWithAccountChangeObserver:]
  -[MLMediaLibraryResourcesServiceClient _libraryContainerPathWithError:]
  -[MLMediaLibraryResourcesServiceClient xpcClientConnection]
  -[MLMediaLibraryResourcesServiceClient connectionWithListenerEndpoint:]
  -[MLMediaLibraryResourcesServiceClient setXpcClientConnection:]


ML3DatabaseValidation : NSObject
 @property  ML3MusicLibrary *library
 @property  <ML3DatabaseValidationDelegate> *delegate
 @property  @? completionHandler
 @property  BOOL truncateBeforeValidating

  // instance methods
  -[ML3DatabaseValidation setTruncateBeforeValidating:]
  -[ML3DatabaseValidation runValidation]
  -[ML3DatabaseValidation library]
  -[ML3DatabaseValidation setDelegate:]
  -[ML3DatabaseValidation delegate]
  -[ML3DatabaseValidation _performDatabasePreprocessingWithLibrary:error:]
  -[ML3DatabaseValidation .cxx_destruct]
  -[ML3DatabaseValidation _validateLibraryDatabaseIfNecessary:withError:]
  -[ML3DatabaseValidation initWithLibrary:delegate:completion:]
  -[ML3DatabaseValidation _performSchemaUpgradeWithLibrary:error:]
  -[ML3DatabaseValidation _logDatabasePathDirectoryAttributes]
  -[ML3DatabaseValidation _truncateDatabaseFileForLibrary:withError:]
  -[ML3DatabaseValidation truncateBeforeValidating]
  -[ML3DatabaseValidation setCompletionHandler:]
  -[ML3DatabaseValidation _internalUserAgreesToRebuildUnmigratableDatabase]
  -[ML3DatabaseValidation completionHandler]


ML3ItemStatsTable : ML3DatabaseTable
  // instance methods
  -[ML3ItemStatsTable columns]
  -[ML3ItemStatsTable .cxx_destruct]
  -[ML3ItemStatsTable name]


MIPGenre : PBCodable <NSCopying>
 @property  BOOL hasStoreId
 @property  long long storeId
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasPersistentId
 @property  long long persistentId

  // instance methods
  -[MIPGenre hasName]
  -[MIPGenre copyTo:]
  -[MIPGenre .cxx_destruct]
  -[MIPGenre mergeFrom:]
  -[MIPGenre dictionaryRepresentation]
  -[MIPGenre setName:]
  -[MIPGenre copyWithZone:]
  -[MIPGenre name]
  -[MIPGenre readFrom:]
  -[MIPGenre writeTo:]
  -[MIPGenre isEqual:]
  -[MIPGenre hasStoreId]
  -[MIPGenre storeId]
  -[MIPGenre setStoreId:]
  -[MIPGenre persistentId]
  -[MIPGenre setHasStoreId:]
  -[MIPGenre setPersistentId:]
  -[MIPGenre setHasPersistentId:]
  -[MIPGenre hasPersistentId]


ML3Composer : ML3Collection
  // class methods
  +[ML3Composer joinClausesForProperty:]
  +[ML3Composer databaseTable]
  +[ML3Composer allProperties]
  +[ML3Composer initialize]
  +[ML3Composer defaultOrderingTerms]
  +[ML3Composer trackForeignPersistentID]
  +[ML3Composer revisionTrackingCode]
  +[ML3Composer foreignPropertyForProperty:entityClass:]
  +[ML3Composer propertyIsCountProperty:]
  +[ML3Composer countingQueryForBaseQuery:countProperty:forIdentifier:]
  +[ML3Composer predisambiguatedProperties]
  +[ML3Composer propertiesForGroupingKey]
  +[ML3Composer protocolItemWithProperties:inLibrary:]

  // instance methods
  -[ML3Composer multiverseIdentifier]
  -[ML3Composer updateTrackValues:]
  -[ML3Composer protocolItem]


ML3AlbumArtist : ML3Collection
  // class methods
  +[ML3AlbumArtist databaseTable]
  +[ML3AlbumArtist allProperties]
  +[ML3AlbumArtist initialize]
  +[ML3AlbumArtist defaultOrderingTerms]
  +[ML3AlbumArtist trackForeignPersistentID]
  +[ML3AlbumArtist revisionTrackingCode]
  +[ML3AlbumArtist sectionPropertyForProperty:]
  +[ML3AlbumArtist foreignPropertyForProperty:entityClass:]
  +[ML3AlbumArtist propertyIsCountProperty:]
  +[ML3AlbumArtist countingQueryForBaseQuery:countProperty:forIdentifier:]
  +[ML3AlbumArtist deleteFromLibrary:deletionType:persistentIDs:count:usingConnection:]
  +[ML3AlbumArtist predisambiguatedProperties]
  +[ML3AlbumArtist propertiesForGroupingKey]
  +[ML3AlbumArtist propertiesForGroupingUniqueCollections]
  +[ML3AlbumArtist protocolItemWithProperties:inLibrary:]

  // instance methods
  -[ML3AlbumArtist multiverseIdentifier]
  -[ML3AlbumArtist updateTrackValues:]
  -[ML3AlbumArtist protocolItem]


ML3ContainerItemDiffMetadata : NSObject
 @property  long long persistentID
 @property  long long containerPersistentID
 @property  long long itemPersistentID
 @property  long long newPosition
 @property  long long previousPosition

  // class methods
  +[ML3ContainerItemDiffMetadata diffMetadataWithPersistentID:]
  +[ML3ContainerItemDiffMetadata diffMetadataWithPersistentID:containerPersistentID:itemPersistentID:newPosition:previousPosition:]

  // instance methods
  -[ML3ContainerItemDiffMetadata persistentID]
  -[ML3ContainerItemDiffMetadata itemPersistentID]
  -[ML3ContainerItemDiffMetadata setItemPersistentID:]
  -[ML3ContainerItemDiffMetadata setPersistentID:]
  -[ML3ContainerItemDiffMetadata containerPersistentID]
  -[ML3ContainerItemDiffMetadata setContainerPersistentID:]
  -[ML3ContainerItemDiffMetadata newPosition]
  -[ML3ContainerItemDiffMetadata setNewPosition:]
  -[ML3ContainerItemDiffMetadata previousPosition]
  -[ML3ContainerItemDiffMetadata setPreviousPosition:]


ML3ContainerItemDiffOperation : NSOperation
 @property  NSArray *containerItemsToUpdate
 @property  NSArray *containerItemsToDelete

  // instance methods
  -[ML3ContainerItemDiffOperation .cxx_destruct]
  -[ML3ContainerItemDiffOperation main]
  -[ML3ContainerItemDiffOperation initWithContainerPersistentID:updatedItemsPersistentIDs:connection:]
  -[ML3ContainerItemDiffOperation containerItemsToUpdate]
  -[ML3ContainerItemDiffOperation setContainerItemsToUpdate:]
  -[ML3ContainerItemDiffOperation containerItemsToDelete]
  -[ML3ContainerItemDiffOperation setContainerItemsToDelete:]


ML3DatabaseImportManager : NSObject
 @property  NSError *lastImportError
 @property  unsigned long operationsCount
 @property  unsigned long suspendedOperationsCount
 @property  BOOL suspended

  // instance methods
  -[ML3DatabaseImportManager isSuspended]
  -[ML3DatabaseImportManager .cxx_destruct]
  -[ML3DatabaseImportManager init]
  -[ML3DatabaseImportManager _importOperations]
  -[ML3DatabaseImportManager operationsCount]
  -[ML3DatabaseImportManager suspendedOperationsCount]
  -[ML3DatabaseImportManager performImport:fromSource:progressBlock:withCompletionHandler:]
  -[ML3DatabaseImportManager currentOperationProgressWithError:]
  -[ML3DatabaseImportManager cancelAllImportOperations]
  -[ML3DatabaseImportManager cancelImportOperationsOriginatingFromClient:]
  -[ML3DatabaseImportManager cancelImportOperationsForSource:withCompletionHandler:]
  -[ML3DatabaseImportManager suspendImportOperations]
  -[ML3DatabaseImportManager resumeSuspendedImportOperations]
  -[ML3DatabaseImportManager _suspendedImportOperations]
  -[ML3DatabaseImportManager _handleImportOperationCompleted:]
  -[ML3DatabaseImportManager _handleImportOperationCancelled:]
  -[ML3DatabaseImportManager lastImportError]
  -[ML3DatabaseImportManager setLastImportError:]


ML3StoreLink : ML3Entity
  // class methods
  +[ML3StoreLink databaseTable]
  +[ML3StoreLink revisionTrackingCode]


ML3BaseLocation : ML3Entity
  // class methods
  +[ML3BaseLocation databaseTable]
  +[ML3BaseLocation newWithDictionary:inLibrary:]
  +[ML3BaseLocation insertionChangesLibraryContents]

  // instance methods
  -[ML3BaseLocation enumerateOrphanedAssetsUsingBlock:]


ML3ChapterTable : ML3DatabaseTable
  // instance methods
  -[ML3ChapterTable columns]
  -[ML3ChapterTable .cxx_destruct]
  -[ML3ChapterTable name]


ML3ArtworkConfiguration : NSObject
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  NSDictionary *artworkConfigurationDictionary
 @property  NSMutableDictionary *supportedSizesCache
 @property  double mainScreenScale

  // class methods
  +[ML3ArtworkConfiguration systemConfiguration]

  // instance methods
  -[ML3ArtworkConfiguration setAccessQueue:]
  -[ML3ArtworkConfiguration accessQueue]
  -[ML3ArtworkConfiguration .cxx_destruct]
  -[ML3ArtworkConfiguration mainScreenScale]
  -[ML3ArtworkConfiguration initWithConfigurationDictionaries:]
  -[ML3ArtworkConfiguration supportedSizesForMediaType:artworkType:]
  -[ML3ArtworkConfiguration sizesToAutogenerateForMediaType:artworkType:]
  -[ML3ArtworkConfiguration _supportedSizeKeysForMediaType:artworkType:]
  -[ML3ArtworkConfiguration artworkConfigurationDictionary]
  -[ML3ArtworkConfiguration setArtworkConfigurationDictionary:]
  -[ML3ArtworkConfiguration supportedSizesCache]
  -[ML3ArtworkConfiguration setSupportedSizesCache:]
  -[ML3ArtworkConfiguration setMainScreenScale:]


_ML3ArtworkConfigurationMediaArtworkTypeKey : NSObject <NSCopying>
  // class methods
  +[_ML3ArtworkConfigurationMediaArtworkTypeKey keyWithMediaType:artworkType:]

  // instance methods
  -[_ML3ArtworkConfigurationMediaArtworkTypeKey copyWithZone:]
  -[_ML3ArtworkConfigurationMediaArtworkTypeKey isEqual:]


ML3DatabaseStatementCache : NSObject
 @property  unsigned long cacheSize

  // instance methods
  -[ML3DatabaseStatementCache cacheStatement:]
  -[ML3DatabaseStatementCache dealloc]
  -[ML3DatabaseStatementCache cachedStatementForSQL:]
  -[ML3DatabaseStatementCache initWithCacheSize:]
  -[ML3DatabaseStatementCache .cxx_destruct]
  -[ML3DatabaseStatementCache cacheSize]
  -[ML3DatabaseStatementCache allStatements]
  -[ML3DatabaseStatementCache clearCache]


ML3StatementCacheNode : NSObject
 @property  NSObject<NSCopying> *dictionaryKey
 @property  ML3StatementCacheNode *next

  // instance methods
  -[ML3StatementCacheNode .cxx_destruct]
  -[ML3StatementCacheNode dictionaryKey]
  -[ML3StatementCacheNode initWithDictionaryKey:]
  -[ML3StatementCacheNode setNext:]
  -[ML3StatementCacheNode setDictionaryKey:]
  -[ML3StatementCacheNode next]


ML3StatementCacheList : NSObject
 @property  ML3StatementCacheNode *firstNode
 @property  ML3StatementCacheNode *lastNode
 @property  unsigned long count

  // instance methods
  -[ML3StatementCacheList lastNode]
  -[ML3StatementCacheList promoteNodeWithDictionaryKey:]
  -[ML3StatementCacheList .cxx_destruct]
  -[ML3StatementCacheList deleteOldestNode]
  -[ML3StatementCacheList count]
  -[ML3StatementCacheList deleteAllNodes]
  -[ML3StatementCacheList firstNode]
  -[ML3StatementCacheList oldestNode]
  -[ML3StatementCacheList appendNode:]


MIPSeries : PBCodable <NSCopying>
 @property  BOOL hasStoreId
 @property  long long storeId
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasSortName
 @property  NSString *sortName

  // instance methods
  -[MIPSeries hasName]
  -[MIPSeries copyTo:]
  -[MIPSeries .cxx_destruct]
  -[MIPSeries mergeFrom:]
  -[MIPSeries dictionaryRepresentation]
  -[MIPSeries setName:]
  -[MIPSeries copyWithZone:]
  -[MIPSeries name]
  -[MIPSeries readFrom:]
  -[MIPSeries writeTo:]
  -[MIPSeries isEqual:]
  -[MIPSeries hasStoreId]
  -[MIPSeries storeId]
  -[MIPSeries sortName]
  -[MIPSeries setStoreId:]
  -[MIPSeries setHasStoreId:]
  -[MIPSeries hasSortName]
  -[MIPSeries setSortName:]


MIPPlaylist : PBCodable <NSCopying>
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasStoreId
 @property  long long storeId
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasHidden
 @property  BOOL hidden
 @property  BOOL hasSmartPlaylistInfo
 @property  MIPSmartPlaylistInfo *smartPlaylistInfo
 @property  BOOL hasSortType
 @property  int sortType
 @property  BOOL hasReversedSorting
 @property  BOOL reversedSorting
 @property  BOOL hasParentIdentifier
 @property  MIPMultiverseIdentifier *parentIdentifier
 @property  BOOL hasGeniusSeedTrackIdentifier
 @property  MIPMultiverseIdentifier *geniusSeedTrackIdentifier
 @property  BOOL hasDistinguishedKind
 @property  int distinguishedKind
 @property  BOOL hasCloudGlobalId
 @property  NSString *cloudGlobalId
 @property  BOOL hasCloudIsSubscribed
 @property  BOOL cloudIsSubscribed
 @property  BOOL hasCloudIsCuratorPlaylist
 @property  BOOL cloudIsCuratorPlaylist
 @property  BOOL hasExternalVendorIdentifier
 @property  NSString *externalVendorIdentifier
 @property  BOOL hasExternalVendorDisplayName
 @property  NSString *externalVendorDisplayName
 @property  BOOL hasExternalVendorTag
 @property  NSString *externalVendorTag
 @property  BOOL hasExternalVendorPlaylist
 @property  BOOL externalVendorPlaylist
 @property  BOOL hasCreationDateTime
 @property  long long creationDateTime
 @property  BOOL hasModificationDateTime
 @property  long long modificationDateTime
 @property  BOOL hasLastPlayedDateTime
 @property  long long lastPlayedDateTime
 @property  BOOL hasCloudIsSharingDisabled
 @property  BOOL cloudIsSharingDisabled
 @property  BOOL hasCloudVersionHash
 @property  NSString *cloudVersionHash
 @property  BOOL hasArtworkId
 @property  NSString *artworkId
 @property  BOOL hasLikedState
 @property  int likedState
 @property  BOOL hasRemoteSourceType
 @property  int remoteSourceType
 @property  BOOL hasOwner
 @property  BOOL owner
 @property  BOOL hasEditable
 @property  BOOL editable
 @property  BOOL hasPlayCount
 @property  int playCount
 @property  BOOL hasShared
 @property  BOOL shared
 @property  BOOL hasVisible
 @property  BOOL visible
 @property  BOOL hasAuthorStoreId
 @property  long long authorStoreId
 @property  BOOL hasAuthorDisplayName
 @property  NSString *authorDisplayName
 @property  BOOL hasAuthorStoreURL
 @property  NSString *authorStoreURL
 @property  BOOL hasAuthorHandle
 @property  NSString *authorHandle
 @property  BOOL hasMinRefreshInterval
 @property  long long minRefreshInterval
 @property  BOOL hasCloudLastUpdateTime
 @property  long long cloudLastUpdateTime
 @property  BOOL hasSubscriberCount
 @property  int subscriberCount
 @property  BOOL hasSubscriberPlayCount
 @property  int subscriberPlayCount
 @property  BOOL hasSubscriberLikedCount
 @property  int subscriberLikedCount
 @property  BOOL hasSubscriberURL
 @property  NSString *subscriberURL
 @property  BOOL hasPlaylistDescription
 @property  NSString *playlistDescription
 @property  BOOL hasCloudUniversalLibraryId
 @property  NSString *cloudUniversalLibraryId
 @property  BOOL hasSecondaryArtworkSourceType
 @property  int secondaryArtworkSourceType
 @property  BOOL hasSecondaryArtworkId
 @property  NSString *secondaryArtworkId
 @property  BOOL hasPlaylistCategoryTypeMask
 @property  int playlistCategoryTypeMask
 @property  BOOL hasPlaylistGroupingSortKey
 @property  NSString *playlistGroupingSortKey
 @property  NSMutableArray *childIdentifiers
 @property  NSMutableArray *items

  // class methods
  +[MIPPlaylist itemsType]
  +[MIPPlaylist childIdentifiersType]

  // instance methods
  -[MIPPlaylist hasName]
  -[MIPPlaylist setPlayCount:]
  -[MIPPlaylist owner]
  -[MIPPlaylist setOwner:]
  -[MIPPlaylist typeAsString:]
  -[MIPPlaylist parentIdentifier]
  -[MIPPlaylist setParentIdentifier:]
  -[MIPPlaylist itemsAtIndex:]
  -[MIPPlaylist setHasType:]
  -[MIPPlaylist setItems:]
  -[MIPPlaylist copyTo:]
  -[MIPPlaylist hasPlayCount]
  -[MIPPlaylist type]
  -[MIPPlaylist visible]
  -[MIPPlaylist StringAsType:]
  -[MIPPlaylist setHasOwner:]
  -[MIPPlaylist setShared:]
  -[MIPPlaylist .cxx_destruct]
  -[MIPPlaylist hidden]
  -[MIPPlaylist setHasHidden:]
  -[MIPPlaylist setVisible:]
  -[MIPPlaylist mergeFrom:]
  -[MIPPlaylist items]
  -[MIPPlaylist hasParentIdentifier]
  -[MIPPlaylist hasOwner]
  -[MIPPlaylist setType:]
  -[MIPPlaylist hasHidden]
  -[MIPPlaylist itemsCount]
  -[MIPPlaylist clearItems]
  -[MIPPlaylist dictionaryRepresentation]
  -[MIPPlaylist setName:]
  -[MIPPlaylist shared]
  -[MIPPlaylist copyWithZone:]
  -[MIPPlaylist hasType]
  -[MIPPlaylist name]
  -[MIPPlaylist setHidden:]
  -[MIPPlaylist playCount]
  -[MIPPlaylist readFrom:]
  -[MIPPlaylist writeTo:]
  -[MIPPlaylist isEqual:]
  -[MIPPlaylist setHasPlayCount:]
  -[MIPPlaylist addItems:]
  -[MIPPlaylist setEditable:]
  -[MIPPlaylist editable]
  -[MIPPlaylist setHasVisible:]
  -[MIPPlaylist hasVisible]
  -[MIPPlaylist setHasShared:]
  -[MIPPlaylist hasShared]
  -[MIPPlaylist sortType]
  -[MIPPlaylist setSortType:]
  -[MIPPlaylist setHasSortType:]
  -[MIPPlaylist hasSortType]
  -[MIPPlaylist sortTypeAsString:]
  -[MIPPlaylist StringAsSortType:]
  -[MIPPlaylist authorHandle]
  -[MIPPlaylist setAuthorHandle:]
  -[MIPPlaylist hasCloudUniversalLibraryId]
  -[MIPPlaylist hasStoreId]
  -[MIPPlaylist cloudUniversalLibraryId]
  -[MIPPlaylist setCloudVersionHash:]
  -[MIPPlaylist storeId]
  -[MIPPlaylist likedState]
  -[MIPPlaylist setLikedState:]
  -[MIPPlaylist authorDisplayName]
  -[MIPPlaylist setAuthorDisplayName:]
  -[MIPPlaylist cloudVersionHash]
  -[MIPPlaylist playlistDescription]
  -[MIPPlaylist setPlaylistDescription:]
  -[MIPPlaylist setStoreId:]
  -[MIPPlaylist setHasStoreId:]
  -[MIPPlaylist hasSmartPlaylistInfo]
  -[MIPPlaylist setReversedSorting:]
  -[MIPPlaylist setHasReversedSorting:]
  -[MIPPlaylist hasReversedSorting]
  -[MIPPlaylist hasGeniusSeedTrackIdentifier]
  -[MIPPlaylist setDistinguishedKind:]
  -[MIPPlaylist setHasDistinguishedKind:]
  -[MIPPlaylist hasDistinguishedKind]
  -[MIPPlaylist hasCloudGlobalId]
  -[MIPPlaylist setCloudIsSubscribed:]
  -[MIPPlaylist setHasCloudIsSubscribed:]
  -[MIPPlaylist hasCloudIsSubscribed]
  -[MIPPlaylist setCloudIsCuratorPlaylist:]
  -[MIPPlaylist setHasCloudIsCuratorPlaylist:]
  -[MIPPlaylist hasCloudIsCuratorPlaylist]
  -[MIPPlaylist hasExternalVendorIdentifier]
  -[MIPPlaylist hasExternalVendorDisplayName]
  -[MIPPlaylist hasExternalVendorTag]
  -[MIPPlaylist setExternalVendorPlaylist:]
  -[MIPPlaylist setHasExternalVendorPlaylist:]
  -[MIPPlaylist hasExternalVendorPlaylist]
  -[MIPPlaylist setCreationDateTime:]
  -[MIPPlaylist setHasCreationDateTime:]
  -[MIPPlaylist hasCreationDateTime]
  -[MIPPlaylist setModificationDateTime:]
  -[MIPPlaylist setHasModificationDateTime:]
  -[MIPPlaylist hasModificationDateTime]
  -[MIPPlaylist setLastPlayedDateTime:]
  -[MIPPlaylist setHasLastPlayedDateTime:]
  -[MIPPlaylist hasLastPlayedDateTime]
  -[MIPPlaylist setCloudIsSharingDisabled:]
  -[MIPPlaylist setHasCloudIsSharingDisabled:]
  -[MIPPlaylist hasCloudIsSharingDisabled]
  -[MIPPlaylist hasCloudVersionHash]
  -[MIPPlaylist hasArtworkId]
  -[MIPPlaylist setHasLikedState:]
  -[MIPPlaylist hasLikedState]
  -[MIPPlaylist setRemoteSourceType:]
  -[MIPPlaylist setHasRemoteSourceType:]
  -[MIPPlaylist hasRemoteSourceType]
  -[MIPPlaylist setHasEditable:]
  -[MIPPlaylist hasEditable]
  -[MIPPlaylist setAuthorStoreId:]
  -[MIPPlaylist setHasAuthorStoreId:]
  -[MIPPlaylist hasAuthorStoreId]
  -[MIPPlaylist hasAuthorDisplayName]
  -[MIPPlaylist hasAuthorStoreURL]
  -[MIPPlaylist hasAuthorHandle]
  -[MIPPlaylist setMinRefreshInterval:]
  -[MIPPlaylist setHasMinRefreshInterval:]
  -[MIPPlaylist hasMinRefreshInterval]
  -[MIPPlaylist setCloudLastUpdateTime:]
  -[MIPPlaylist setHasCloudLastUpdateTime:]
  -[MIPPlaylist hasCloudLastUpdateTime]
  -[MIPPlaylist setSubscriberCount:]
  -[MIPPlaylist setHasSubscriberCount:]
  -[MIPPlaylist hasSubscriberCount]
  -[MIPPlaylist setSubscriberPlayCount:]
  -[MIPPlaylist setHasSubscriberPlayCount:]
  -[MIPPlaylist hasSubscriberPlayCount]
  -[MIPPlaylist setSubscriberLikedCount:]
  -[MIPPlaylist setHasSubscriberLikedCount:]
  -[MIPPlaylist hasSubscriberLikedCount]
  -[MIPPlaylist hasSubscriberURL]
  -[MIPPlaylist hasPlaylistDescription]
  -[MIPPlaylist setSecondaryArtworkSourceType:]
  -[MIPPlaylist setHasSecondaryArtworkSourceType:]
  -[MIPPlaylist hasSecondaryArtworkSourceType]
  -[MIPPlaylist hasSecondaryArtworkId]
  -[MIPPlaylist setPlaylistCategoryTypeMask:]
  -[MIPPlaylist setHasPlaylistCategoryTypeMask:]
  -[MIPPlaylist hasPlaylistCategoryTypeMask]
  -[MIPPlaylist hasPlaylistGroupingSortKey]
  -[MIPPlaylist clearChildIdentifiers]
  -[MIPPlaylist addChildIdentifiers:]
  -[MIPPlaylist childIdentifiersCount]
  -[MIPPlaylist childIdentifiersAtIndex:]
  -[MIPPlaylist smartPlaylistInfo]
  -[MIPPlaylist setSmartPlaylistInfo:]
  -[MIPPlaylist reversedSorting]
  -[MIPPlaylist geniusSeedTrackIdentifier]
  -[MIPPlaylist setGeniusSeedTrackIdentifier:]
  -[MIPPlaylist distinguishedKind]
  -[MIPPlaylist cloudGlobalId]
  -[MIPPlaylist setCloudGlobalId:]
  -[MIPPlaylist cloudIsSubscribed]
  -[MIPPlaylist cloudIsCuratorPlaylist]
  -[MIPPlaylist externalVendorIdentifier]
  -[MIPPlaylist setExternalVendorIdentifier:]
  -[MIPPlaylist externalVendorDisplayName]
  -[MIPPlaylist setExternalVendorDisplayName:]
  -[MIPPlaylist externalVendorTag]
  -[MIPPlaylist setExternalVendorTag:]
  -[MIPPlaylist externalVendorPlaylist]
  -[MIPPlaylist creationDateTime]
  -[MIPPlaylist modificationDateTime]
  -[MIPPlaylist lastPlayedDateTime]
  -[MIPPlaylist cloudIsSharingDisabled]
  -[MIPPlaylist artworkId]
  -[MIPPlaylist setArtworkId:]
  -[MIPPlaylist remoteSourceType]
  -[MIPPlaylist authorStoreId]
  -[MIPPlaylist authorStoreURL]
  -[MIPPlaylist setAuthorStoreURL:]
  -[MIPPlaylist minRefreshInterval]
  -[MIPPlaylist cloudLastUpdateTime]
  -[MIPPlaylist subscriberCount]
  -[MIPPlaylist subscriberPlayCount]
  -[MIPPlaylist subscriberLikedCount]
  -[MIPPlaylist subscriberURL]
  -[MIPPlaylist setSubscriberURL:]
  -[MIPPlaylist setCloudUniversalLibraryId:]
  -[MIPPlaylist secondaryArtworkSourceType]
  -[MIPPlaylist secondaryArtworkId]
  -[MIPPlaylist setSecondaryArtworkId:]
  -[MIPPlaylist playlistCategoryTypeMask]
  -[MIPPlaylist playlistGroupingSortKey]
  -[MIPPlaylist setPlaylistGroupingSortKey:]
  -[MIPPlaylist childIdentifiers]
  -[MIPPlaylist setChildIdentifiers:]


MLTrackImportChapter : NSObject <NSCopying>
 @property  NSData *imageData
 @property  NSString *imageCacheKey
 @property  unsigned long startTimeInMilliseconds
 @property  NSString *title
 @property  NSURL *URL
 @property  NSString *URLTitle

  // instance methods
  -[MLTrackImportChapter compare:]
  -[MLTrackImportChapter setURL:]
  -[MLTrackImportChapter .cxx_destruct]
  -[MLTrackImportChapter title]
  -[MLTrackImportChapter imageData]
  -[MLTrackImportChapter copyWithZone:]
  -[MLTrackImportChapter URL]
  -[MLTrackImportChapter setTitle:]
  -[MLTrackImportChapter setImageData:]
  -[MLTrackImportChapter normalizeProperties]
  -[MLTrackImportChapter isEqualIgnoringTimesAndTitle:]
  -[MLTrackImportChapter startTimeInMilliseconds]
  -[MLTrackImportChapter setStartTimeInMilliseconds:]
  -[MLTrackImportChapter URLTitle]
  -[MLTrackImportChapter setURLTitle:]
  -[MLTrackImportChapter imageCacheKey]
  -[MLTrackImportChapter setImageCacheKey:]


ML3DaemonClient : ML3Client
  // class methods
  +[ML3DaemonClient sharedDaemonClient]

  // instance methods
  -[ML3DaemonClient name]
  -[ML3DaemonClient bundleID]
  -[ML3DaemonClient processID]
  -[ML3DaemonClient init]


MLMovieProperties : NSObject <NSCopying>
 @property  NSArray *castMembers
 @property  NSString *copyrightWarning
 @property  NSArray *directors
 @property  NSArray *producers
 @property  NSArray *screenwriters
 @property  NSString *studioName

  // instance methods
  -[MLMovieProperties .cxx_destruct]
  -[MLMovieProperties copyWithZone:]
  -[MLMovieProperties _setValue:forKey:]
  -[MLMovieProperties init]
  -[MLMovieProperties directors]
  -[MLMovieProperties setDirectors:]
  -[MLMovieProperties initWithMoviePropertiesDictionary:]
  -[MLMovieProperties castMembers]
  -[MLMovieProperties copyrightWarning]
  -[MLMovieProperties producers]
  -[MLMovieProperties screenwriters]
  -[MLMovieProperties setCastMembers:]
  -[MLMovieProperties setCopyrightWarning:]
  -[MLMovieProperties setProducers:]
  -[MLMovieProperties setScreenwriters:]
  -[MLMovieProperties setStudioName:]
  -[MLMovieProperties studioName]
  -[MLMovieProperties copyMoviePropertiesDictionary]
  -[MLMovieProperties _setValueCopy:forKey:]


MLMovieArtist : NSObject <NSCopying>
 @property  NSString *artistName
 @property  NSNumber *ITunesStoreIdentifier

  // instance methods
  -[MLMovieArtist setITunesStoreIdentifier:]
  -[MLMovieArtist artistName]
  -[MLMovieArtist .cxx_destruct]
  -[MLMovieArtist setArtistName:]
  -[MLMovieArtist copyWithZone:]
  -[MLMovieArtist _setValue:forKey:]
  -[MLMovieArtist init]
  -[MLMovieArtist ITunesStoreIdentifier]
  -[MLMovieArtist _setValueCopy:forKey:]
  -[MLMovieArtist initWithMovieArtistDictionary:]
  -[MLMovieArtist copyMovieArtistDictionary]


ML3MigrationAddedColumn : NSObject
 @property  NSString *columnName
 @property  NSString *foreignTableName
 @property  NSString *foreignColumnName
 @property  NSString *joinColumnName
 @property  BOOL shouldImportFromForeignTable

  // instance methods
  -[ML3MigrationAddedColumn columnName]
  -[ML3MigrationAddedColumn .cxx_destruct]
  -[ML3MigrationAddedColumn initWithName:foreignTable:foreignColumn:joinColumn:]
  -[ML3MigrationAddedColumn shouldImportFromForeignTable]
  -[ML3MigrationAddedColumn foreignTableName]
  -[ML3MigrationAddedColumn foreignColumnName]
  -[ML3MigrationAddedColumn joinColumnName]


MIPSmartPlaylistInfo : PBCodable <NSCopying>
 @property  BOOL hasDynamic
 @property  BOOL dynamic
 @property  BOOL hasFiltered
 @property  BOOL filtered
 @property  BOOL hasLimited
 @property  BOOL limited
 @property  BOOL hasLimitKind
 @property  int limitKind
 @property  BOOL hasEvaluationOrder
 @property  unsigned int evaluationOrder
 @property  BOOL hasLimitOrder
 @property  unsigned int limitOrder
 @property  BOOL hasLimitValue
 @property  unsigned int limitValue
 @property  BOOL hasEnabledItemsOnly
 @property  BOOL enabledItemsOnly
 @property  BOOL hasReverseLimitOrder
 @property  BOOL reverseLimitOrder
 @property  BOOL hasSmartCriteria
 @property  NSData *smartCriteria
 @property  BOOL hasGenius
 @property  BOOL genius

  // instance methods
  -[MIPSmartPlaylistInfo setLimitValue:]
  -[MIPSmartPlaylistInfo copyTo:]
  -[MIPSmartPlaylistInfo limitValue]
  -[MIPSmartPlaylistInfo filtered]
  -[MIPSmartPlaylistInfo .cxx_destruct]
  -[MIPSmartPlaylistInfo mergeFrom:]
  -[MIPSmartPlaylistInfo dictionaryRepresentation]
  -[MIPSmartPlaylistInfo copyWithZone:]
  -[MIPSmartPlaylistInfo readFrom:]
  -[MIPSmartPlaylistInfo setFiltered:]
  -[MIPSmartPlaylistInfo writeTo:]
  -[MIPSmartPlaylistInfo isEqual:]
  -[MIPSmartPlaylistInfo dynamic]
  -[MIPSmartPlaylistInfo setDynamic:]
  -[MIPSmartPlaylistInfo hasLimitValue]
  -[MIPSmartPlaylistInfo setHasLimitValue:]
  -[MIPSmartPlaylistInfo setHasDynamic:]
  -[MIPSmartPlaylistInfo hasDynamic]
  -[MIPSmartPlaylistInfo setHasFiltered:]
  -[MIPSmartPlaylistInfo hasFiltered]
  -[MIPSmartPlaylistInfo setLimited:]
  -[MIPSmartPlaylistInfo setHasLimited:]
  -[MIPSmartPlaylistInfo hasLimited]
  -[MIPSmartPlaylistInfo setLimitKind:]
  -[MIPSmartPlaylistInfo setHasLimitKind:]
  -[MIPSmartPlaylistInfo hasLimitKind]
  -[MIPSmartPlaylistInfo setEvaluationOrder:]
  -[MIPSmartPlaylistInfo setHasEvaluationOrder:]
  -[MIPSmartPlaylistInfo hasEvaluationOrder]
  -[MIPSmartPlaylistInfo setLimitOrder:]
  -[MIPSmartPlaylistInfo setHasLimitOrder:]
  -[MIPSmartPlaylistInfo hasLimitOrder]
  -[MIPSmartPlaylistInfo setEnabledItemsOnly:]
  -[MIPSmartPlaylistInfo setHasEnabledItemsOnly:]
  -[MIPSmartPlaylistInfo hasEnabledItemsOnly]
  -[MIPSmartPlaylistInfo setReverseLimitOrder:]
  -[MIPSmartPlaylistInfo setHasReverseLimitOrder:]
  -[MIPSmartPlaylistInfo hasReverseLimitOrder]
  -[MIPSmartPlaylistInfo hasSmartCriteria]
  -[MIPSmartPlaylistInfo setGenius:]
  -[MIPSmartPlaylistInfo setHasGenius:]
  -[MIPSmartPlaylistInfo hasGenius]
  -[MIPSmartPlaylistInfo limited]
  -[MIPSmartPlaylistInfo limitKind]
  -[MIPSmartPlaylistInfo evaluationOrder]
  -[MIPSmartPlaylistInfo limitOrder]
  -[MIPSmartPlaylistInfo enabledItemsOnly]
  -[MIPSmartPlaylistInfo reverseLimitOrder]
  -[MIPSmartPlaylistInfo smartCriteria]
  -[MIPSmartPlaylistInfo setSmartCriteria:]
  -[MIPSmartPlaylistInfo genius]


MLContentRating : NSObject <NSCopying>
 @property  NSString *ratingDescription
 @property  NSString *ratingLabel
 @property  NSNumber *ratingRank
 @property  NSString *ratingSystem

  // instance methods
  -[MLContentRating .cxx_destruct]
  -[MLContentRating ratingRank]
  -[MLContentRating copyWithZone:]
  -[MLContentRating initWithStringRepresentation:]
  -[MLContentRating _setValue:forKey:]
  -[MLContentRating ratingLabel]
  -[MLContentRating init]
  -[MLContentRating setRatingDescription:]
  -[MLContentRating ratingDescription]
  -[MLContentRating setRatingLabel:]
  -[MLContentRating setRatingRank:]
  -[MLContentRating ratingSystem]
  -[MLContentRating setRatingSystem:]
  -[MLContentRating _setValueCopy:forKey:]
  -[MLContentRating initWithContentRatingDictionary:]
  -[MLContentRating copyStringRepresentation]


MLITDBGeniusDatabase : NSObject
 @property  ML3MusicLibrary *musicLibrary

  // class methods
  +[MLITDBGeniusDatabase sharedGeniusDatabase]

  // instance methods
  -[MLITDBGeniusDatabase init]
  -[MLITDBGeniusDatabase hasGeniusDataAvailable]
  -[MLITDBGeniusDatabase hasGeniusFeatureEnabled]
  -[MLITDBGeniusDatabase musicLibrary]
  -[MLITDBGeniusDatabase performGeniusDatabaseReadWithBlock:]
  -[MLITDBGeniusDatabase _hasRowsInTable:]
  -[MLITDBGeniusDatabase _getInt32ValueInTable:column:]
  -[MLITDBGeniusDatabase _getInt64ValueInTable:column:where:limit:]
  -[MLITDBGeniusDatabase _copyBlobData:blobAllocType:table:blobColumn:where:]
  -[MLITDBGeniusDatabase _copyBlobDataAndBytesInTable:blobColumn:where:]
  -[MLITDBGeniusDatabase _readBlobIntoData:table:blobColumn:where:]
  -[MLITDBGeniusDatabase _readBlobForRowID:intoData:table:blobColumn:]
  -[MLITDBGeniusDatabase _hasAnySongs]
  -[MLITDBGeniusDatabase defaultMinTrackCount]
  -[MLITDBGeniusDatabase defaultTrackCount]
  -[MLITDBGeniusDatabase copyGeniusConfigrationDataAndBytes]
  -[MLITDBGeniusDatabase geniusConfigurationVersion]
  -[MLITDBGeniusDatabase copyGeniusMetadataDataAndBytesForGlobalID:]
  -[MLITDBGeniusDatabase copyGeniusSimilaritiesDataAndBytesForGlobalID:]
  -[MLITDBGeniusDatabase getGeniusConfigrationDataAndBytesIntoData:]
  -[MLITDBGeniusDatabase getGeniusMetadataDataAndBytesForGlobalID:intoData:]
  -[MLITDBGeniusDatabase getGeniusSimilaritiesDataAndBytesForGlobalID:intoData:]


MLGeniusPlaylistController : NSObject
  // class methods
  +[MLGeniusPlaylistController hasGeniusDataAvailable]
  +[MLGeniusPlaylistController hasGeniusFeatureEnabled]
  +[MLGeniusPlaylistController playlistControllerWithSeedTracks:error:]
  +[MLGeniusPlaylistController populateContainer:withSeedTrack:completionBlock:]
  +[MLGeniusPlaylistController geniusTracksForSeedTrack:error:]
  +[MLGeniusPlaylistController defaultMinTrackCount]
  +[MLGeniusPlaylistController defaultTrackCount]
  +[MLGeniusPlaylistController ignoreUnusedWarnings]
  +[MLGeniusPlaylistController useFakeGeniusData]

  // instance methods
  -[MLGeniusPlaylistController dealloc]
  -[MLGeniusPlaylistController .cxx_destruct]
  -[MLGeniusPlaylistController init]
  -[MLGeniusPlaylistController tracksFromClusterForCount:error:]
  -[MLGeniusPlaylistController _sharedBlobMutableData]
  -[MLGeniusPlaylistController _canIncludeTrackInGeniusContainer:]
  -[MLGeniusPlaylistController _debugGetTracksStartingAtTrackWithPersistentID:maxTracks:stride:]
  -[MLGeniusPlaylistController _onBackgroundQueue_fakePopulateContainer:withSeedTrack:error:]
  -[MLGeniusPlaylistController _onBackgroundQueue_populateContainer:seedTrack:error:]
  -[MLGeniusPlaylistController _createClusterPlaylistWithSeedTracks:error:]
  -[MLGeniusPlaylistController _onBackgroundQueue_tracksFromClusterForPlaylistItemMax:error:]


ML3ClientImportSession : NSObject <ML3ClientImportSessionXPCInterface>
 @property  NSProgress *progress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ML3ClientImportSession progress]
  -[ML3ClientImportSession .cxx_destruct]
  -[ML3ClientImportSession removeItems:]
  -[ML3ClientImportSession finish]
  -[ML3ClientImportSession start]
  -[ML3ClientImportSession _xpcClientConnection]
  -[ML3ClientImportSession cancel]
  -[ML3ClientImportSession addItems:]
  -[ML3ClientImportSession initWithConfiguration:delegate:]
  -[ML3ClientImportSession sessionFailedToAddItem:completion:]
  -[ML3ClientImportSession sessionFailedToUpdateItem:completion:]
  -[ML3ClientImportSession sessionFailedToRemoveItem:completion:]
  -[ML3ClientImportSession sessionDidUpdateProgress:]
  -[ML3ClientImportSession addItemsReturningResult:]
  -[ML3ClientImportSession updateItems:]
  -[ML3ClientImportSession updateItemsReturningResult:]
  -[ML3ClientImportSession removeItemsReturningResult:]


MIPAudiobook : PBCodable <NSCopying>
 @property  BOOL hasAlbum
 @property  MIPAlbum *album
 @property  BOOL hasArtist
 @property  MIPArtist *artist
 @property  BOOL hasComposer
 @property  MIPArtist *composer
 @property  BOOL hasGenre
 @property  MIPGenre *genre
 @property  BOOL hasDiscNumber
 @property  int discNumber
 @property  BOOL hasTrackNumber
 @property  int trackNumber
 @property  BOOL hasUserRating
 @property  int userRating
 @property  BOOL hasExcludeFromShuffle
 @property  BOOL excludeFromShuffle
 @property  BOOL hasAudioFormat
 @property  int audioFormat
 @property  BOOL hasHasVideo
 @property  BOOL hasVideo
 @property  BOOL hasPlaybackInfo
 @property  MIPPlaybackInfo *playbackInfo
 @property  BOOL hasHlsPlaylistURL
 @property  NSString *hlsPlaylistURL

  // instance methods
  -[MIPAudiobook discNumber]
  -[MIPAudiobook hasTrackNumber]
  -[MIPAudiobook setTrackNumber:]
  -[MIPAudiobook hasDiscNumber]
  -[MIPAudiobook composer]
  -[MIPAudiobook setGenre:]
  -[MIPAudiobook hasGenre]
  -[MIPAudiobook hasArtist]
  -[MIPAudiobook trackNumber]
  -[MIPAudiobook setComposer:]
  -[MIPAudiobook copyTo:]
  -[MIPAudiobook setAlbum:]
  -[MIPAudiobook hasComposer]
  -[MIPAudiobook .cxx_destruct]
  -[MIPAudiobook hasAudioFormat]
  -[MIPAudiobook playbackInfo]
  -[MIPAudiobook hasVideo]
  -[MIPAudiobook genre]
  -[MIPAudiobook setDiscNumber:]
  -[MIPAudiobook mergeFrom:]
  -[MIPAudiobook setHasVideo:]
  -[MIPAudiobook album]
  -[MIPAudiobook artist]
  -[MIPAudiobook dictionaryRepresentation]
  -[MIPAudiobook setHasDiscNumber:]
  -[MIPAudiobook copyWithZone:]
  -[MIPAudiobook setArtist:]
  -[MIPAudiobook readFrom:]
  -[MIPAudiobook setHasTrackNumber:]
  -[MIPAudiobook audioFormat]
  -[MIPAudiobook writeTo:]
  -[MIPAudiobook setHasAudioFormat:]
  -[MIPAudiobook isEqual:]
  -[MIPAudiobook setAudioFormat:]
  -[MIPAudiobook hasAlbum]
  -[MIPAudiobook userRating]
  -[MIPAudiobook setUserRating:]
  -[MIPAudiobook setPlaybackInfo:]
  -[MIPAudiobook hlsPlaylistURL]
  -[MIPAudiobook setHlsPlaylistURL:]
  -[MIPAudiobook setHasUserRating:]
  -[MIPAudiobook hasUserRating]
  -[MIPAudiobook setExcludeFromShuffle:]
  -[MIPAudiobook setHasExcludeFromShuffle:]
  -[MIPAudiobook hasExcludeFromShuffle]
  -[MIPAudiobook setHasHasVideo:]
  -[MIPAudiobook hasHasVideo]
  -[MIPAudiobook hasPlaybackInfo]
  -[MIPAudiobook hasHlsPlaylistURL]
  -[MIPAudiobook excludeFromShuffle]


MLITChapterTOC : MLChapterTOC
  // class methods
  +[MLITChapterTOC _chapterDataCookieIndexMapForProperty:ofChapterTOC:]
  +[MLITChapterTOC enumerateArtworkCacheIDsInFlattenedChapterData:usingBlock:]
  +[MLITChapterTOC enumerateChapterTimesInFlattenedChapterData:usingBlock:]

  // instance methods
  -[MLITChapterTOC dealloc]
  -[MLITChapterTOC chapterIndexForGroupIndex:groupingProperty:]
  -[MLITChapterTOC durationInMSOfGroupAtIndex:groupingProperty:]
  -[MLITChapterTOC urlPropertyOfChapterAtIndex:]
  -[MLITChapterTOC urlTitlePropertyOfChapterAtIndex:]
  -[MLITChapterTOC countOfChapters]
  -[MLITChapterTOC countOfGroupsForProperty:]
  -[MLITChapterTOC timeLocationInMSOfChapterAtIndex:]
  -[MLITChapterTOC titlePropertyOfChapterAtIndex:]
  -[MLITChapterTOC initWithChapterDataRef:totalTimeInMS:]
  -[MLITChapterTOC chapterDataRef]
  -[MLITChapterTOC _cachedCookieIndexMapForProperty:createIfNecessary:]
  -[MLITChapterTOC groupIndexForChapterIndex:groupingProperty:]
  -[MLITChapterTOC totalTimeInMS]
  -[MLITChapterTOC groupIndexAtTimeLocationInMS:groupingProperty:]
  -[MLITChapterTOC timeLocationInMSOfGroupAtIndex:groupingProperty:]
  -[MLITChapterTOC urlTitleTrimmingCharacterSet]


ML3ItemKVSTable : ML3DatabaseTable
  // instance methods
  -[ML3ItemKVSTable columns]
  -[ML3ItemKVSTable .cxx_destruct]
  -[ML3ItemKVSTable name]


MIPAlbum : PBCodable <NSCopying>
 @property  BOOL hasStoreId
 @property  long long storeId
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasSortName
 @property  NSString *sortName
 @property  BOOL hasArtist
 @property  MIPArtist *artist
 @property  BOOL hasNumTracks
 @property  int numTracks
 @property  BOOL hasNumDiscs
 @property  int numDiscs
 @property  BOOL hasArtworkId
 @property  NSString *artworkId
 @property  BOOL hasUserRating
 @property  int userRating
 @property  BOOL hasCompilation
 @property  BOOL compilation
 @property  BOOL hasPersistentId
 @property  long long persistentId
 @property  BOOL hasCloudId
 @property  NSString *cloudId

  // instance methods
  -[MIPAlbum hasName]
  -[MIPAlbum hasArtist]
  -[MIPAlbum copyTo:]
  -[MIPAlbum .cxx_destruct]
  -[MIPAlbum mergeFrom:]
  -[MIPAlbum artist]
  -[MIPAlbum dictionaryRepresentation]
  -[MIPAlbum setName:]
  -[MIPAlbum copyWithZone:]
  -[MIPAlbum name]
  -[MIPAlbum setArtist:]
  -[MIPAlbum readFrom:]
  -[MIPAlbum writeTo:]
  -[MIPAlbum isEqual:]
  -[MIPAlbum userRating]
  -[MIPAlbum setUserRating:]
  -[MIPAlbum hasStoreId]
  -[MIPAlbum setCompilation:]
  -[MIPAlbum storeId]
  -[MIPAlbum compilation]
  -[MIPAlbum sortName]
  -[MIPAlbum setStoreId:]
  -[MIPAlbum setHasUserRating:]
  -[MIPAlbum hasUserRating]
  -[MIPAlbum persistentId]
  -[MIPAlbum setHasStoreId:]
  -[MIPAlbum setPersistentId:]
  -[MIPAlbum setHasPersistentId:]
  -[MIPAlbum hasPersistentId]
  -[MIPAlbum hasSortName]
  -[MIPAlbum setSortName:]
  -[MIPAlbum hasArtworkId]
  -[MIPAlbum artworkId]
  -[MIPAlbum setArtworkId:]
  -[MIPAlbum setNumTracks:]
  -[MIPAlbum setHasNumTracks:]
  -[MIPAlbum hasNumTracks]
  -[MIPAlbum setNumDiscs:]
  -[MIPAlbum setHasNumDiscs:]
  -[MIPAlbum hasNumDiscs]
  -[MIPAlbum setHasCompilation:]
  -[MIPAlbum hasCompilation]
  -[MIPAlbum hasCloudId]
  -[MIPAlbum numTracks]
  -[MIPAlbum numDiscs]
  -[MIPAlbum cloudId]
  -[MIPAlbum setCloudId:]


ML3DatabaseModule : NSObject
 @property  NSString *name
 @property  ^{sqlite3_module=i^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?} moduleMethods
 @property  <ML3DatabaseModuleContext> *context

  // instance methods
  -[ML3DatabaseModule .cxx_destruct]
  -[ML3DatabaseModule setContext:]
  -[ML3DatabaseModule name]
  -[ML3DatabaseModule context]
  -[ML3DatabaseModule initWithName:moduleMethods:]
  -[ML3DatabaseModule moduleMethods]


MIPMovie : PBCodable <NSCopying>
 @property  BOOL hasArtist
 @property  MIPArtist *artist
 @property  BOOL hasVideoQuality
 @property  int videoQuality
 @property  BOOL hasRental
 @property  BOOL rental
 @property  BOOL hasHasChapterData
 @property  BOOL hasChapterData
 @property  BOOL hasExtendedContentName
 @property  NSString *extendedContentName
 @property  BOOL hasMovieInfo
 @property  NSString *movieInfo
 @property  BOOL hasHasAlternateAudio
 @property  BOOL hasAlternateAudio
 @property  BOOL hasHasSubtitles
 @property  BOOL hasSubtitles
 @property  BOOL hasAudioLanguage
 @property  int audioLanguage
 @property  BOOL hasAudioTrackIndex
 @property  int audioTrackIndex
 @property  BOOL hasAudioTrackId
 @property  int audioTrackId
 @property  BOOL hasSubtitleLanguage
 @property  int subtitleLanguage
 @property  BOOL hasSubtitleTrackIndex
 @property  int subtitleTrackIndex
 @property  BOOL hasRentalDuration
 @property  long long rentalDuration
 @property  BOOL hasRentalPlaybackDuration
 @property  long long rentalPlaybackDuration
 @property  BOOL hasRentalPlaybackStartedDateTime
 @property  long long rentalPlaybackStartedDateTime
 @property  BOOL hasRentalStartedDateTime
 @property  long long rentalStartedDateTime
 @property  BOOL hasFlattenedChapterData
 @property  NSData *flattenedChapterData

  // instance methods
  -[MIPMovie setVideoQuality:]
  -[MIPMovie videoQuality]
  -[MIPMovie hasArtist]
  -[MIPMovie copyTo:]
  -[MIPMovie .cxx_destruct]
  -[MIPMovie mergeFrom:]
  -[MIPMovie artist]
  -[MIPMovie dictionaryRepresentation]
  -[MIPMovie copyWithZone:]
  -[MIPMovie setArtist:]
  -[MIPMovie readFrom:]
  -[MIPMovie writeTo:]
  -[MIPMovie isEqual:]
  -[MIPMovie rentalDuration]
  -[MIPMovie setRentalDuration:]
  -[MIPMovie hasRentalDuration]
  -[MIPMovie setRental:]
  -[MIPMovie setHasVideoQuality:]
  -[MIPMovie hasVideoQuality]
  -[MIPMovie setHasRental:]
  -[MIPMovie hasRental]
  -[MIPMovie setHasChapterData:]
  -[MIPMovie setHasHasChapterData:]
  -[MIPMovie hasHasChapterData]
  -[MIPMovie hasExtendedContentName]
  -[MIPMovie hasMovieInfo]
  -[MIPMovie setHasAlternateAudio:]
  -[MIPMovie setHasHasAlternateAudio:]
  -[MIPMovie hasHasAlternateAudio]
  -[MIPMovie setHasSubtitles:]
  -[MIPMovie setHasHasSubtitles:]
  -[MIPMovie hasHasSubtitles]
  -[MIPMovie setAudioLanguage:]
  -[MIPMovie setHasAudioLanguage:]
  -[MIPMovie hasAudioLanguage]
  -[MIPMovie setAudioTrackIndex:]
  -[MIPMovie setHasAudioTrackIndex:]
  -[MIPMovie hasAudioTrackIndex]
  -[MIPMovie setAudioTrackId:]
  -[MIPMovie setHasAudioTrackId:]
  -[MIPMovie hasAudioTrackId]
  -[MIPMovie setSubtitleLanguage:]
  -[MIPMovie setHasSubtitleLanguage:]
  -[MIPMovie hasSubtitleLanguage]
  -[MIPMovie setSubtitleTrackIndex:]
  -[MIPMovie setHasSubtitleTrackIndex:]
  -[MIPMovie hasSubtitleTrackIndex]
  -[MIPMovie setHasRentalDuration:]
  -[MIPMovie setRentalPlaybackDuration:]
  -[MIPMovie setHasRentalPlaybackDuration:]
  -[MIPMovie hasRentalPlaybackDuration]
  -[MIPMovie setRentalPlaybackStartedDateTime:]
  -[MIPMovie setHasRentalPlaybackStartedDateTime:]
  -[MIPMovie hasRentalPlaybackStartedDateTime]
  -[MIPMovie setRentalStartedDateTime:]
  -[MIPMovie setHasRentalStartedDateTime:]
  -[MIPMovie hasRentalStartedDateTime]
  -[MIPMovie hasFlattenedChapterData]
  -[MIPMovie rental]
  -[MIPMovie hasChapterData]
  -[MIPMovie extendedContentName]
  -[MIPMovie setExtendedContentName:]
  -[MIPMovie movieInfo]
  -[MIPMovie setMovieInfo:]
  -[MIPMovie hasAlternateAudio]
  -[MIPMovie hasSubtitles]
  -[MIPMovie audioLanguage]
  -[MIPMovie audioTrackIndex]
  -[MIPMovie audioTrackId]
  -[MIPMovie subtitleLanguage]
  -[MIPMovie subtitleTrackIndex]
  -[MIPMovie rentalPlaybackDuration]
  -[MIPMovie rentalPlaybackStartedDateTime]
  -[MIPMovie rentalStartedDateTime]
  -[MIPMovie flattenedChapterData]
  -[MIPMovie setFlattenedChapterData:]


ML3SetValuesForPropertiesOperation : ML3DatabaseOperation
  // instance methods
  -[ML3SetValuesForPropertiesOperation type]
  -[ML3SetValuesForPropertiesOperation _execute:]
  -[ML3SetValuesForPropertiesOperation _setValues:forProperties:withEntityClass:usingPersistentID:connection:error:]


ML3DatabaseMetadata : ML3Entity
  // class methods
  +[ML3DatabaseMetadata databaseTable]
  +[ML3DatabaseMetadata allProperties]
  +[ML3DatabaseMetadata initialize]
  +[ML3DatabaseMetadata defaultOrderingTerms]
  +[ML3DatabaseMetadata predisambiguatedProperties]


ML3ItemTable : ML3DatabaseTable
  // instance methods
  -[ML3ItemTable columns]
  -[ML3ItemTable .cxx_destruct]
  -[ML3ItemTable name]


MSPMediaSyncError : PBCodable <NSCopying>
 @property  BOOL hasErrorDescription
 @property  NSString *errorDescription
 @property  BOOL hasErrorCode
 @property  int errorCode

  // instance methods
  -[MSPMediaSyncError hasErrorCode]
  -[MSPMediaSyncError setErrorCode:]
  -[MSPMediaSyncError errorDescription]
  -[MSPMediaSyncError hasErrorDescription]
  -[MSPMediaSyncError errorCode]
  -[MSPMediaSyncError copyTo:]
  -[MSPMediaSyncError .cxx_destruct]
  -[MSPMediaSyncError setErrorDescription:]
  -[MSPMediaSyncError setHasErrorCode:]
  -[MSPMediaSyncError mergeFrom:]
  -[MSPMediaSyncError dictionaryRepresentation]
  -[MSPMediaSyncError copyWithZone:]
  -[MSPMediaSyncError readFrom:]
  -[MSPMediaSyncError writeTo:]
  -[MSPMediaSyncError isEqual:]


MSPMediaSyncPackage : PBCodable <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasLastPackage
 @property  BOOL lastPackage
 @property  BOOL hasHeader
 @property  MSPMediaSyncHeader *header
 @property  BOOL hasSyncOperation
 @property  MSPMediaSyncOperation *syncOperation
 @property  BOOL hasError
 @property  MSPMediaSyncError *error

  // instance methods
  -[MSPMediaSyncPackage typeAsString:]
  -[MSPMediaSyncPackage syncOperation]
  -[MSPMediaSyncPackage setHasType:]
  -[MSPMediaSyncPackage copyTo:]
  -[MSPMediaSyncPackage type]
  -[MSPMediaSyncPackage error]
  -[MSPMediaSyncPackage StringAsType:]
  -[MSPMediaSyncPackage .cxx_destruct]
  -[MSPMediaSyncPackage setSyncOperation:]
  -[MSPMediaSyncPackage setHeader:]
  -[MSPMediaSyncPackage setError:]
  -[MSPMediaSyncPackage mergeFrom:]
  -[MSPMediaSyncPackage hasHeader]
  -[MSPMediaSyncPackage setType:]
  -[MSPMediaSyncPackage header]
  -[MSPMediaSyncPackage hasError]
  -[MSPMediaSyncPackage dictionaryRepresentation]
  -[MSPMediaSyncPackage copyWithZone:]
  -[MSPMediaSyncPackage hasType]
  -[MSPMediaSyncPackage readFrom:]
  -[MSPMediaSyncPackage writeTo:]
  -[MSPMediaSyncPackage isEqual:]
  -[MSPMediaSyncPackage lastPackage]
  -[MSPMediaSyncPackage setLastPackage:]
  -[MSPMediaSyncPackage setHasLastPackage:]
  -[MSPMediaSyncPackage hasLastPackage]
  -[MSPMediaSyncPackage hasSyncOperation]


ML3AccountTable : ML3DatabaseTable
  // instance methods
  -[ML3AccountTable columns]
  -[ML3AccountTable .cxx_destruct]
  -[ML3AccountTable name]


ML3SetCloudIDImportOperation : ML3ImportOperation
  // instance methods
  -[ML3SetCloudIDImportOperation .cxx_destruct]
  -[ML3SetCloudIDImportOperation main]
  -[ML3SetCloudIDImportOperation importSource]
  -[ML3SetCloudIDImportOperation _performImportWithTransaction:]
  -[ML3SetCloudIDImportOperation _importTracksUsingImportSession:]
  -[ML3SetCloudIDImportOperation _importPlaylistsUsingImportSession:]


ML3MigrationMisgroupedTrack : NSObject
 @property  long long persistentID
 @property  long long albumArtistPID

  // instance methods
  -[ML3MigrationMisgroupedTrack persistentID]
  -[ML3MigrationMisgroupedTrack initWithPersistentID:albumArtistPID:]
  -[ML3MigrationMisgroupedTrack albumArtistPID]


ML3MigrationMisgroupedAlbum : NSObject
 @property  long long albumPID
 @property  long long albumArtistPID
 @property  NSArray *misgroupedTracks

  // instance methods
  -[ML3MigrationMisgroupedAlbum .cxx_destruct]
  -[ML3MigrationMisgroupedAlbum albumArtistPID]
  -[ML3MigrationMisgroupedAlbum initWithAlbumPID:albumArtistPID:]
  -[ML3MigrationMisgroupedAlbum addMisgroupedTrack:]
  -[ML3MigrationMisgroupedAlbum misgroupedTracks]
  -[ML3MigrationMisgroupedAlbum albumPID]


ML3ItemStoreTable : ML3DatabaseTable
  // instance methods
  -[ML3ItemStoreTable columns]
  -[ML3ItemStoreTable .cxx_destruct]
  -[ML3ItemStoreTable name]


ML3ItemSearchTable : ML3DatabaseTable
  // instance methods
  -[ML3ItemSearchTable columns]
  -[ML3ItemSearchTable .cxx_destruct]
  -[ML3ItemSearchTable name]


ML3RemovePlaylistsOperation : ML3DatabaseOperation
  // instance methods
  -[ML3RemovePlaylistsOperation type]
  -[ML3RemovePlaylistsOperation _execute:]
  -[ML3RemovePlaylistsOperation _verifyLibraryConnectionAndAttributesProperties:]
  -[ML3RemovePlaylistsOperation _removeSource:usingTransaction:]
  -[ML3RemovePlaylistsOperation _removePlaylistsWithPersistentIDs:fromSource:usingTransaction:]
  -[ML3RemovePlaylistsOperation _removeRemotePlaylistsWithNoSourceUsingTransation:]


MSPMediaSyncHeader : PBCodable <NSCopying>
 @property  BOOL hasTotalPackages
 @property  int totalPackages
 @property  BOOL hasSyncType
 @property  int syncType

  // instance methods
  -[MSPMediaSyncHeader copyTo:]
  -[MSPMediaSyncHeader mergeFrom:]
  -[MSPMediaSyncHeader dictionaryRepresentation]
  -[MSPMediaSyncHeader copyWithZone:]
  -[MSPMediaSyncHeader readFrom:]
  -[MSPMediaSyncHeader writeTo:]
  -[MSPMediaSyncHeader isEqual:]
  -[MSPMediaSyncHeader syncType]
  -[MSPMediaSyncHeader setSyncType:]
  -[MSPMediaSyncHeader setTotalPackages:]
  -[MSPMediaSyncHeader setHasTotalPackages:]
  -[MSPMediaSyncHeader hasTotalPackages]
  -[MSPMediaSyncHeader setHasSyncType:]
  -[MSPMediaSyncHeader hasSyncType]
  -[MSPMediaSyncHeader syncTypeAsString:]
  -[MSPMediaSyncHeader StringAsSyncType:]
  -[MSPMediaSyncHeader totalPackages]


ML3StoreItemPlaylistData : NSObject
 @property  NSData *playlistsData
 @property  NSArray *parsedStorePlaylistsImportProperties
 @property  unsigned long playlistCount

  // instance methods
  -[ML3StoreItemPlaylistData .cxx_destruct]
  -[ML3StoreItemPlaylistData playlistsData]
  -[ML3StoreItemPlaylistData initWithLookupItems:]
  -[ML3StoreItemPlaylistData initWithPlaylistsData:]
  -[ML3StoreItemPlaylistData parsedStorePlaylistsImportProperties]
  -[ML3StoreItemPlaylistData playlistCount]
  -[ML3StoreItemPlaylistData _playlistPropertiesForLookupItems:]
  -[ML3StoreItemPlaylistData _playlistPropertiesFromPlaylistData:]
  -[ML3StoreItemPlaylistData _bestPlaylistArtworkImageURLFromStoreArtworkVariants:]
  -[ML3StoreItemPlaylistData _bestArtworkImageURLFromStoreArtworkVariants:cropStyle:]


ML3AlbumTable : ML3DatabaseTable
  // instance methods
  -[ML3AlbumTable columns]
  -[ML3AlbumTable .cxx_destruct]
  -[ML3AlbumTable name]


ML3Booklet : ML3Entity
  // class methods
  +[ML3Booklet databaseTable]
  +[ML3Booklet allProperties]
  +[ML3Booklet defaultOrderingTerms]
  +[ML3Booklet revisionTrackingCode]
  +[ML3Booklet predisambiguatedProperties]


ML3ImportPersistentIDGenerator : ML3PersistentIDGenerator
  // instance methods
  -[ML3ImportPersistentIDGenerator .cxx_destruct]
  -[ML3ImportPersistentIDGenerator initWithDatabaseConnection:tableName:]
  -[ML3ImportPersistentIDGenerator addIdMapping:forProperty:]
  -[ML3ImportPersistentIDGenerator nextPersistentIDForImportItem:]
  -[ML3ImportPersistentIDGenerator removePersistentIDFromIdMapping:]


MSPMediaSyncOperation : PBCodable <NSCopying>
 @property  BOOL hasOperationType
 @property  int operationType
 @property  BOOL hasMultiverseId
 @property  MIPMultiverseIdentifier *multiverseId
 @property  BOOL hasArtist
 @property  MIPArtist *artist
 @property  BOOL hasAlbum
 @property  MIPAlbum *album
 @property  BOOL hasGenre
 @property  MIPGenre *genre
 @property  BOOL hasSeries
 @property  MIPSeries *series
 @property  BOOL hasMediaItem
 @property  MIPMediaItem *mediaItem
 @property  BOOL hasPlaylist
 @property  MIPPlaylist *playlist

  // instance methods
  -[MSPMediaSyncOperation operationType]
  -[MSPMediaSyncOperation setGenre:]
  -[MSPMediaSyncOperation hasGenre]
  -[MSPMediaSyncOperation hasArtist]
  -[MSPMediaSyncOperation setOperationType:]
  -[MSPMediaSyncOperation copyTo:]
  -[MSPMediaSyncOperation setAlbum:]
  -[MSPMediaSyncOperation hasOperationType]
  -[MSPMediaSyncOperation .cxx_destruct]
  -[MSPMediaSyncOperation genre]
  -[MSPMediaSyncOperation mergeFrom:]
  -[MSPMediaSyncOperation album]
  -[MSPMediaSyncOperation artist]
  -[MSPMediaSyncOperation dictionaryRepresentation]
  -[MSPMediaSyncOperation copyWithZone:]
  -[MSPMediaSyncOperation setArtist:]
  -[MSPMediaSyncOperation readFrom:]
  -[MSPMediaSyncOperation writeTo:]
  -[MSPMediaSyncOperation isEqual:]
  -[MSPMediaSyncOperation hasAlbum]
  -[MSPMediaSyncOperation mediaItem]
  -[MSPMediaSyncOperation playlist]
  -[MSPMediaSyncOperation setPlaylist:]
  -[MSPMediaSyncOperation setMediaItem:]
  -[MSPMediaSyncOperation series]
  -[MSPMediaSyncOperation hasSeries]
  -[MSPMediaSyncOperation setSeries:]
  -[MSPMediaSyncOperation setHasOperationType:]
  -[MSPMediaSyncOperation operationTypeAsString:]
  -[MSPMediaSyncOperation StringAsOperationType:]
  -[MSPMediaSyncOperation hasMultiverseId]
  -[MSPMediaSyncOperation hasMediaItem]
  -[MSPMediaSyncOperation hasPlaylist]
  -[MSPMediaSyncOperation multiverseId]
  -[MSPMediaSyncOperation setMultiverseId:]


ML3DatabaseException : MLException
 @property  NSError *sqliteError

  // class methods
  +[ML3DatabaseException databaseExceptionWithReason:sqliteError:]

  // instance methods
  -[ML3DatabaseException .cxx_destruct]
  -[ML3DatabaseException init]
  -[ML3DatabaseException sqliteError]
  -[ML3DatabaseException raise]
  -[ML3DatabaseException initWithReason:sqliteError:]
  -[ML3DatabaseException _SQLITE_ERROR]
  -[ML3DatabaseException _SQLITE_INTERNAL]
  -[ML3DatabaseException _SQLITE_PERM]
  -[ML3DatabaseException _SQLITE_ABORT]
  -[ML3DatabaseException _SQLITE_BUSY]
  -[ML3DatabaseException _SQLITE_LOCKED]
  -[ML3DatabaseException _SQLITE_NOMEM]
  -[ML3DatabaseException _SQLITE_READONLY]
  -[ML3DatabaseException _SQLITE_INTERRUPT]
  -[ML3DatabaseException _SQLITE_IOERR]
  -[ML3DatabaseException _SQLITE_CORRUPT]
  -[ML3DatabaseException _SQLITE_NOTFOUND]
  -[ML3DatabaseException _SQLITE_FULL]
  -[ML3DatabaseException _SQLITE_CANTOPEN]
  -[ML3DatabaseException _SQLITE_PROTOCOL]
  -[ML3DatabaseException _SQLITE_EMPTY]
  -[ML3DatabaseException _SQLITE_SCHEMA]
  -[ML3DatabaseException _SQLITE_TOOBIG]
  -[ML3DatabaseException _SQLITE_CONSTRAINT]
  -[ML3DatabaseException _SQLITE_MISMATCH]
  -[ML3DatabaseException _SQLITE_MISUSE]
  -[ML3DatabaseException _SQLITE_NOLFS]
  -[ML3DatabaseException _SQLITE_AUTH]
  -[ML3DatabaseException _SQLITE_FORMAT]
  -[ML3DatabaseException _SQLITE_RANGE]
  -[ML3DatabaseException _SQLITE_NOTADB]
  -[ML3DatabaseException _SQLITE_ROW]
  -[ML3DatabaseException _SQLITE_DONE]


ML3ImportOperation : NSOperation
 @property  unsigned long importSource
 @property  ML3ServiceDatabaseImport *import
 @property  BOOL suspended
 @property  float progress
 @property  @? progressBlock
 @property  BOOL success
 @property  NSError *error
 @property  NSData *returnData

  // class methods
  +[ML3ImportOperation importOperationWithSourceType:databaseImport:]

  // instance methods
  -[ML3ImportOperation progress]
  -[ML3ImportOperation success]
  -[ML3ImportOperation setSuccess:]
  -[ML3ImportOperation progressBlock]
  -[ML3ImportOperation setProgress:]
  -[ML3ImportOperation setProgressBlock:]
  -[ML3ImportOperation isSuspended]
  -[ML3ImportOperation error]
  -[ML3ImportOperation .cxx_destruct]
  -[ML3ImportOperation setError:]
  -[ML3ImportOperation longDescription]
  -[ML3ImportOperation main]
  -[ML3ImportOperation setSuspended:]
  -[ML3ImportOperation init]
  -[ML3ImportOperation importSource]
  -[ML3ImportOperation initWithDatabaseImport:]
  -[ML3ImportOperation setReturnData:]
  -[ML3ImportOperation _writerTransactionWithBlock:]
  -[ML3ImportOperation _clientCompletionHandler]
  -[ML3ImportOperation _setClientCompletionHandler:]
  -[ML3ImportOperation import]
  -[ML3ImportOperation returnData]


ML3BookletTable : ML3DatabaseTable
  // instance methods
  -[ML3BookletTable columns]
  -[ML3BookletTable .cxx_destruct]
  -[ML3BookletTable name]


ML3DatabaseNaturalStatement : NSObject <NSSecureCoding>
 @property  NSString *sql
 @property  NSMutableArray *parameters

  // class methods
  +[ML3DatabaseNaturalStatement supportsSecureCoding]
  +[ML3DatabaseNaturalStatement naturalStatementWithSQL:parameters:]

  // instance methods
  -[ML3DatabaseNaturalStatement sql]
  -[ML3DatabaseNaturalStatement parameters]
  -[ML3DatabaseNaturalStatement encodeWithCoder:]
  -[ML3DatabaseNaturalStatement .cxx_destruct]
  -[ML3DatabaseNaturalStatement setParameters:]
  -[ML3DatabaseNaturalStatement initWithCoder:]
  -[ML3DatabaseNaturalStatement initWithSQL:parameters:]
  -[ML3DatabaseNaturalStatement setParameter:forPosition:]
  -[ML3DatabaseNaturalStatement setSql:]


MIPMultiverseIdentifier : PBCodable <NSCopying>
 @property  BOOL hasMediaObjectType
 @property  int mediaObjectType
 @property  BOOL hasMediaType
 @property  int mediaType
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasStoreId
 @property  long long storeId
 @property  BOOL hasSagaId
 @property  long long sagaId
 @property  BOOL hasPurchaseHistoryId
 @property  long long purchaseHistoryId
 @property  BOOL hasCloudUniversalLibraryId
 @property  NSString *cloudUniversalLibraryId
 @property  NSMutableArray *libraryIdentifiers

  // class methods
  +[MIPMultiverseIdentifier libraryIdentifiersType]

  // instance methods
  -[MIPMultiverseIdentifier hasName]
  -[MIPMultiverseIdentifier setMediaType:]
  -[MIPMultiverseIdentifier hasMediaType]
  -[MIPMultiverseIdentifier copyTo:]
  -[MIPMultiverseIdentifier mediaType]
  -[MIPMultiverseIdentifier .cxx_destruct]
  -[MIPMultiverseIdentifier setAccountId:]
  -[MIPMultiverseIdentifier setHasMediaType:]
  -[MIPMultiverseIdentifier mergeFrom:]
  -[MIPMultiverseIdentifier dictionaryRepresentation]
  -[MIPMultiverseIdentifier setName:]
  -[MIPMultiverseIdentifier copyWithZone:]
  -[MIPMultiverseIdentifier accountId]
  -[MIPMultiverseIdentifier name]
  -[MIPMultiverseIdentifier readFrom:]
  -[MIPMultiverseIdentifier writeTo:]
  -[MIPMultiverseIdentifier isEqual:]
  -[MIPMultiverseIdentifier mediaTypeAsString:]
  -[MIPMultiverseIdentifier StringAsMediaType:]
  -[MIPMultiverseIdentifier mediaObjectType]
  -[MIPMultiverseIdentifier hasCloudUniversalLibraryId]
  -[MIPMultiverseIdentifier sagaId]
  -[MIPMultiverseIdentifier libraryIdentifiers]
  -[MIPMultiverseIdentifier libraryIdentifiersCount]
  -[MIPMultiverseIdentifier hasSagaId]
  -[MIPMultiverseIdentifier hasStoreId]
  -[MIPMultiverseIdentifier cloudUniversalLibraryId]
  -[MIPMultiverseIdentifier storeId]
  -[MIPMultiverseIdentifier clearLibraryIdentifiers]
  -[MIPMultiverseIdentifier setStoreId:]
  -[MIPMultiverseIdentifier setLibraryIdentifiers:]
  -[MIPMultiverseIdentifier setHasStoreId:]
  -[MIPMultiverseIdentifier setCloudUniversalLibraryId:]
  -[MIPMultiverseIdentifier setMediaObjectType:]
  -[MIPMultiverseIdentifier setHasMediaObjectType:]
  -[MIPMultiverseIdentifier hasMediaObjectType]
  -[MIPMultiverseIdentifier mediaObjectTypeAsString:]
  -[MIPMultiverseIdentifier StringAsMediaObjectType:]
  -[MIPMultiverseIdentifier setHasAccountId:]
  -[MIPMultiverseIdentifier hasAccountId]
  -[MIPMultiverseIdentifier setSagaId:]
  -[MIPMultiverseIdentifier setHasSagaId:]
  -[MIPMultiverseIdentifier setPurchaseHistoryId:]
  -[MIPMultiverseIdentifier setHasPurchaseHistoryId:]
  -[MIPMultiverseIdentifier hasPurchaseHistoryId]
  -[MIPMultiverseIdentifier addLibraryIdentifiers:]
  -[MIPMultiverseIdentifier libraryIdentifiersAtIndex:]
  -[MIPMultiverseIdentifier purchaseHistoryId]


ML3QueryResultSet_BackingStore : NSObject
 @property  unsigned long count

  // instance methods
  -[ML3QueryResultSet_BackingStore .cxx_construct]
  -[ML3QueryResultSet_BackingStore .cxx_destruct]
  -[ML3QueryResultSet_BackingStore count]
  -[ML3QueryResultSet_BackingStore enumerateSectionsUsingBlock:]
  -[ML3QueryResultSet_BackingStore enumeratePersistentIDsUsingBlock:]
  -[ML3QueryResultSet_BackingStore persistentIDAtIndex:]
  -[ML3QueryResultSet_BackingStore reverseEnumerateSectionsUsingBlock:]
  -[ML3QueryResultSet_BackingStore reverseEnumeratePersistentIDsUsingBlock:]
  -[ML3QueryResultSet_BackingStore containsPersistentIDs:]
  -[ML3QueryResultSet_BackingStore backingStoreByRemovingPersistentIDs:]


ML3QueryResultSet_MutableBackingStore : ML3QueryResultSet_BackingStore

ML3QueryResultSet : NSObject <NSCopying>
 @property  ML3Query *query
 @property  unsigned long count
 @property  long long revision
 @property  long long localRevision

  // instance methods
  -[ML3QueryResultSet query]
  -[ML3QueryResultSet .cxx_destruct]
  -[ML3QueryResultSet count]
  -[ML3QueryResultSet revision]
  -[ML3QueryResultSet entityLimit]
  -[ML3QueryResultSet initWithQuery:]
  -[ML3QueryResultSet copyWithZone:]
  -[ML3QueryResultSet enumerateSectionsUsingBlock:]
  -[ML3QueryResultSet enumeratePersistentIDsUsingBlock:]
  -[ML3QueryResultSet updateToLibraryCurrentRevision]
  -[ML3QueryResultSet localRevision]
  -[ML3QueryResultSet persistentIDAtIndex:]
  -[ML3QueryResultSet _initWithQuery:supportsIncrementalUpdate:]
  -[ML3QueryResultSet _loadCurrentFullResults]
  -[ML3QueryResultSet _mergeChangesWithFromNewPIDs:changedPIDs:]
  -[ML3QueryResultSet _onQueueAddUpdateFinishedBlock:]
  -[ML3QueryResultSet _onQueueInvokeAndClearUpdateFinishedBlocksWithDidUpdateResult:]
  -[ML3QueryResultSet _updateToLibraryCurrentRevision]


ML3ContainerQueryResultSet : ML3QueryResultSet
  // instance methods
  -[ML3ContainerQueryResultSet .cxx_destruct]
  -[ML3ContainerQueryResultSet entityLimit]
  -[ML3ContainerQueryResultSet initWithQuery:]
  -[ML3ContainerQueryResultSet copyWithZone:]
  -[ML3ContainerQueryResultSet enumerateSectionsUsingBlock:]
  -[ML3ContainerQueryResultSet enumeratePersistentIDsUsingBlock:]
  -[ML3ContainerQueryResultSet persistentIDAtIndex:]
  -[ML3ContainerQueryResultSet _loadCurrentFullResults]
  -[ML3ContainerQueryResultSet _updateToLibraryCurrentRevision]
  -[ML3ContainerQueryResultSet sortedBackingStoreForDisplayOrdering]


ML3ItemVideoTable : ML3DatabaseTable
  // instance methods
  -[ML3ItemVideoTable columns]
  -[ML3ItemVideoTable .cxx_destruct]
  -[ML3ItemVideoTable name]


ML3LibraryNotificationManager : NSObject <MSVDistributedNotificationObserverDelegate>
 @property  ML3MusicLibrary *library
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ML3LibraryNotificationManager initWithLibrary:distributedAndLocalNames:]
  -[ML3LibraryNotificationManager _observerForDistributedName:]
  -[ML3LibraryNotificationManager library]
  -[ML3LibraryNotificationManager _observerForLocalName:]
  -[ML3LibraryNotificationManager enqueueLocalNotification:]
  -[ML3LibraryNotificationManager .cxx_destruct]
  -[ML3LibraryNotificationManager _postEnqueuedLocalNotifications]
  -[ML3LibraryNotificationManager addObserverForDistributedName:localName:]
  -[ML3LibraryNotificationManager observerShouldForwardDistributedNotification:]
  -[ML3LibraryNotificationManager _postEnqueuedDistributedNotifications]
  -[ML3LibraryNotificationManager removeObserverWithLocalName:]
  -[ML3LibraryNotificationManager enqueueLocalNotificationNamed:]
  -[ML3LibraryNotificationManager enqueueDistributedNotificationNamed:]
  -[ML3LibraryNotificationManager removeObserverWithDistributedName:]


ML3ArtistTable : ML3DatabaseTable
  // instance methods
  -[ML3ArtistTable columns]
  -[ML3ArtistTable .cxx_destruct]
  -[ML3ArtistTable name]


ML3OrderingTerm : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *property
 @property  int direction
 @property  NSString *collation

  // class methods
  +[ML3OrderingTerm supportsSecureCoding]
  +[ML3OrderingTerm orderingTermWithProperty:]
  +[ML3OrderingTerm orderingTermWithProperty:direction:]
  +[ML3OrderingTerm reversedTerms:]

  // instance methods
  -[ML3OrderingTerm property]
  -[ML3OrderingTerm initWithProperty:direction:]
  -[ML3OrderingTerm encodeWithCoder:]
  -[ML3OrderingTerm initWithProperty:direction:collation:]
  -[ML3OrderingTerm .cxx_destruct]
  -[ML3OrderingTerm initWithProperty:]
  -[ML3OrderingTerm appendSQLToMutableString:entityClass:]
  -[ML3OrderingTerm direction]
  -[ML3OrderingTerm copyWithZone:]
  -[ML3OrderingTerm collation]
  -[ML3OrderingTerm isEqual:]
  -[ML3OrderingTerm initWithCoder:]


ML3StoreItemTrackData : NSObject
 @property  NSData *trackData
 @property  NSArray *parsedStoreItemsImportProperties
 @property  unsigned long trackCount

  // instance methods
  -[ML3StoreItemTrackData trackCount]
  -[ML3StoreItemTrackData .cxx_destruct]
  -[ML3StoreItemTrackData trackData]
  -[ML3StoreItemTrackData initWithLookupItems:]
  -[ML3StoreItemTrackData parsedStoreItemsImportProperties]
  -[ML3StoreItemTrackData _bestPlaylistArtworkImageURLFromStoreArtworkVariants:]
  -[ML3StoreItemTrackData _bestArtworkImageURLFromStoreArtworkVariants:cropStyle:]
  -[ML3StoreItemTrackData initWithTrackData:]
  -[ML3StoreItemTrackData _storePlatformDateFormatter]
  -[ML3StoreItemTrackData _storeItemsImportPropertiesFromLookupItems:]
  -[ML3StoreItemTrackData _storeItemsImportPropertiesFromTrackData:]
  -[ML3StoreItemTrackData _parentDictForItemAlbumId:]
  -[ML3StoreItemTrackData _importDictionaryForLookupItem:parentCollectionCache:]
  -[ML3StoreItemTrackData _artworkTokenFromLookupItem:]
  -[ML3StoreItemTrackData _artworkTokenForItemWithCollectionID:itemID:]
  -[ML3StoreItemTrackData _episodeTypeFromVideoSubTypeString:]
  -[ML3StoreItemTrackData _lookupItemArtworksForArtworkDictionaries:]
  -[ML3StoreItemTrackData _songDurationFromOffersArray:]
  -[ML3StoreItemTrackData _allSongItemsFromLookupItems:]
  -[ML3StoreItemTrackData _allSongItemsFromCollectionLookupItem:]
  -[ML3StoreItemTrackData _platformMetadataItem:matchesKind:]
  -[ML3StoreItemTrackData _platformMetadataItemIsMusicKind:]
  -[ML3StoreItemTrackData _platformMetadataItemIsSongKind:]
  -[ML3StoreItemTrackData _platformMetadataItemIsMusicVideoKind:]
  -[ML3StoreItemTrackData _platformMetadataItemIsAUCKind:]
  -[ML3StoreItemTrackData _platformMetadataItemIsAUCAudioKind:]
  -[ML3StoreItemTrackData _platformMetadataItemIsAUCVideoKind:]
  -[ML3StoreItemTrackData _platformMetadataItemIsVideoKind:]
  -[ML3StoreItemTrackData _platformMetadataItemIsTVShowKind:]
  -[ML3StoreItemTrackData _platformMetadataItemIsMovieKind:]
  -[ML3StoreItemTrackData _bestAlbumArtworkImageURLFromStoreArtworkVariants:]


ML3StoreImportOperation : ML3ImportOperation
  // instance methods
  -[ML3StoreImportOperation .cxx_destruct]
  -[ML3StoreImportOperation main]
  -[ML3StoreImportOperation importSource]
  -[ML3StoreImportOperation _performImportWithTransaction:]
  -[ML3StoreImportOperation _importTracksUsingImportSession:]
  -[ML3StoreImportOperation _importPlaylistsUsingImportSession:]


ML3Client : NSObject
 @property  NSXPCConnection *connection
 @property  NSString *bundleID
 @property  int processID
 @property  BOOL daemonClient

  // class methods
  +[ML3Client daemonClient]
  +[ML3Client processClient]

  // instance methods
  -[ML3Client initWithConnection:]
  -[ML3Client .cxx_destruct]
  -[ML3Client connection]
  -[ML3Client bundleID]
  -[ML3Client processID]
  -[ML3Client init]
  -[ML3Client isDaemonClient]


ML3MediaLibraryWriter : NSObject
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  NSMutableDictionary *transactionMap
 @property  NSOperationQueue *databaseOperationQueue
 @property  NSOperationQueue *databaseOperationSerialQueue
 @property  <ML3MediaLibraryWriterDelegate> *delegate
 @property  double transactionTimeout
 @property  BOOL suspended

  // class methods
  +[ML3MediaLibraryWriter writerErrorWithCode:description:userInfo:]
  +[ML3MediaLibraryWriter writerErrorWithCode:description:]

  // instance methods
  -[ML3MediaLibraryWriter serialQueue]
  -[ML3MediaLibraryWriter setDelegate:]
  -[ML3MediaLibraryWriter isSuspended]
  -[ML3MediaLibraryWriter delegate]
  -[ML3MediaLibraryWriter dealloc]
  -[ML3MediaLibraryWriter reset]
  -[ML3MediaLibraryWriter .cxx_destruct]
  -[ML3MediaLibraryWriter setSuspended:]
  -[ML3MediaLibraryWriter init]
  -[ML3MediaLibraryWriter _watchdogTimerFired:]
  -[ML3MediaLibraryWriter setTransactionTimeout:]
  -[ML3MediaLibraryWriter beginTransactionForLibrary:withClient:options:error:]
  -[ML3MediaLibraryWriter executeUpdate:withParameters:onTransaction:error:]
  -[ML3MediaLibraryWriter executeUntrustedUpdate:withParameters:onTransaction:error:]
  -[ML3MediaLibraryWriter executeQuery:withParameters:options:onTransaction:error:]
  -[ML3MediaLibraryWriter executeUntrustedQuery:withParameters:options:onTransaction:error:]
  -[ML3MediaLibraryWriter endTransaction:shouldCommit:error:]
  -[ML3MediaLibraryWriter performDatabaseOperation:onLibrary:withAttributes:options:fromClient:completionHandler:]
  -[ML3MediaLibraryWriter cancelActiveTransactionForClient:]
  -[ML3MediaLibraryWriter cancelAllActiveTransactions]
  -[ML3MediaLibraryWriter cancelAllActiveDatabaseOperationsAndWaitUntilFinished:]
  -[ML3MediaLibraryWriter cancelAllActiveDatabaseOperationsForClient:waitUntilFinished:]
  -[ML3MediaLibraryWriter _transactionForIdentifier:]
  -[ML3MediaLibraryWriter _registerTransaction:]
  -[ML3MediaLibraryWriter _unregisterTransaction:]
  -[ML3MediaLibraryWriter _allDatabaseOperations]
  -[ML3MediaLibraryWriter _createNewTransactionForLibrary:fromClient:readOnly:]
  -[ML3MediaLibraryWriter _destroyTransaction:forceRelinquishConnection:]
  -[ML3MediaLibraryWriter _destroyTransactionForIdentifier:forceRelinquishConnection:]
  -[ML3MediaLibraryWriter _setupWatchdogTimer]
  -[ML3MediaLibraryWriter _tearDownWatchdogTimer]
  -[ML3MediaLibraryWriter _shouldWatchdogTransaction:]
  -[ML3MediaLibraryWriter transactionTimeout]
  -[ML3MediaLibraryWriter transactionMap]
  -[ML3MediaLibraryWriter databaseOperationQueue]
  -[ML3MediaLibraryWriter databaseOperationSerialQueue]


ML3ExportSession : NSData
 @property  ML3MusicLibrary *library
 @property  NSOutputStream *outputStream

  // instance methods
  -[ML3ExportSession library]
  -[ML3ExportSession end]
  -[ML3ExportSession .cxx_destruct]
  -[ML3ExportSession outputStream]
  -[ML3ExportSession begin:]
  -[ML3ExportSession initWithLibrary:outputStream:]
  -[ML3ExportSession exportTrackAdded:]
  -[ML3ExportSession exportTrackUpdated:]
  -[ML3ExportSession exportTrackDeleted:]
  -[ML3ExportSession exportPlaylistAdded:]
  -[ML3ExportSession exportPlaylistDeleted:]


MLMediaTypeCountedSet : NSObject
 @property  unsigned long count

  // instance methods
  -[MLMediaTypeCountedSet .cxx_construct]
  -[MLMediaTypeCountedSet .cxx_destruct]
  -[MLMediaTypeCountedSet count]
  -[MLMediaTypeCountedSet addMediaType:count:]
  -[MLMediaTypeCountedSet enumerateMediaTypesWithBlock:]


ML3SpotlightNameCache : NSObject
  // class methods
  +[ML3SpotlightNameCache initialize]
  +[ML3SpotlightNameCache copyFromLibrary:cancelHandler:]

  // instance methods
  -[ML3SpotlightNameCache .cxx_construct]
  -[ML3SpotlightNameCache dealloc]
  -[ML3SpotlightNameCache .cxx_destruct]
  -[ML3SpotlightNameCache _initWithLibrary:cancelHandler:]


ML3SpotlightMatchingNameCache : NSObject
  // class methods
  +[ML3SpotlightMatchingNameCache initialize]
  +[ML3SpotlightMatchingNameCache loadFromLibrary:namesMatchingString:cancelHandler:]

  // instance methods
  -[ML3SpotlightMatchingNameCache .cxx_construct]
  -[ML3SpotlightMatchingNameCache dealloc]
  -[ML3SpotlightMatchingNameCache .cxx_destruct]
  -[ML3SpotlightMatchingNameCache _initWithLibrary:matchString:cancelHandler:]


ML3SpotlightMatchPredicate : ML3Predicate
 @property  NSString *searchString

  // class methods
  +[ML3SpotlightMatchPredicate predicateWithProperties:searchString:]

  // instance methods
  -[ML3SpotlightMatchPredicate SQLJoinClausesForClass:]
  -[ML3SpotlightMatchPredicate dealloc]
  -[ML3SpotlightMatchPredicate appendSQLToMutableString:entityClass:]
  -[ML3SpotlightMatchPredicate spotlightPredicate]
  -[ML3SpotlightMatchPredicate searchString]
  -[ML3SpotlightMatchPredicate initWithSearchString:matchingProperties:]


_MLChangeObserver : NSObject <MLMediaLibraryAccountChangeObserver>
 @property  NSXPCConnection *connection
 @property  NSObject<OS_dispatch_source> *timeoutTimer
 @property  MSVTaskAssertion *taskAssertion
 @property  BOOL timedOut
 @property  NSString *bundleID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_MLChangeObserver observerWithConnection:]

  // instance methods
  -[_MLChangeObserver performDatabasePathChange:completion:]
  -[_MLChangeObserver setBundleID:]
  -[_MLChangeObserver emergencyDisconnectWithCompletion:]
  -[_MLChangeObserver dealloc]
  -[_MLChangeObserver .cxx_destruct]
  -[_MLChangeObserver connection]
  -[_MLChangeObserver hasTimedOut]
  -[_MLChangeObserver terminateForFailureToPerformDatabasePathChange]
  -[_MLChangeObserver bundleID]
  -[_MLChangeObserver setTimedOut:]
  -[_MLChangeObserver setConnection:]
  -[_MLChangeObserver timeoutTimer]
  -[_MLChangeObserver setTimeoutTimer:]
  -[_MLChangeObserver setupTaskAssertion]
  -[_MLChangeObserver tearDownTaskAssertion]
  -[_MLChangeObserver setupTimeoutTimer]
  -[_MLChangeObserver tearDownTimeoutTimer]
  -[_MLChangeObserver taskAssertion]
  -[_MLChangeObserver setTaskAssertion:]


MLMediaLibraryResourcesServiceServer : NSObject <MLMediaLibraryAccountChangeObserver, MLMediaLibraryResourcesServiceXPCProtocol, NSXPCListenerDelegate>
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *calloutQueue
 @property  NSObject<OS_dispatch_semaphore> *accountChangeSemaphore
 @property  NSXPCListener *xpcServiceListener
 @property  NSMutableSet *observers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MLMediaLibraryResourcesServiceServer sharedInstance]

  // instance methods
  -[MLMediaLibraryResourcesServiceServer _removeObserver:]
  -[MLMediaLibraryResourcesServiceServer calloutQueue]
  -[MLMediaLibraryResourcesServiceServer performDatabasePathChange:completion:]
  -[MLMediaLibraryResourcesServiceServer setAccessQueue:]
  -[MLMediaLibraryResourcesServiceServer accessQueue]
  -[MLMediaLibraryResourcesServiceServer workQueue]
  -[MLMediaLibraryResourcesServiceServer setWorkQueue:]
  -[MLMediaLibraryResourcesServiceServer emergencyDisconnectWithCompletion:]
  -[MLMediaLibraryResourcesServiceServer setCalloutQueue:]
  -[MLMediaLibraryResourcesServiceServer .cxx_destruct]
  -[MLMediaLibraryResourcesServiceServer setObservers:]
  -[MLMediaLibraryResourcesServiceServer terminateForFailureToPerformDatabasePathChange]
  -[MLMediaLibraryResourcesServiceServer _addObserver:]
  -[MLMediaLibraryResourcesServiceServer listener:shouldAcceptNewConnection:]
  -[MLMediaLibraryResourcesServiceServer observers]
  -[MLMediaLibraryResourcesServiceServer libraryContainerPathWithCompletion:]
  -[MLMediaLibraryResourcesServiceServer initWithAccountChangeObserver:]
  -[MLMediaLibraryResourcesServiceServer _blockExecutionForOnGoingAccountChangeIfNeeded]
  -[MLMediaLibraryResourcesServiceServer _unblockExecutionForFutureAccountChange]
  -[MLMediaLibraryResourcesServiceServer accountChangeSemaphore]
  -[MLMediaLibraryResourcesServiceServer setAccountChangeSemaphore:]
  -[MLMediaLibraryResourcesServiceServer xpcServiceListener]
  -[MLMediaLibraryResourcesServiceServer setXpcServiceListener:]


MLTransactionContext : NSObject <NSSecureCoding>
 @property  NSString *path
 @property  unsigned long priorityLevel
 @property  unsigned long options
 @property  ML3DatabasePrivacyContext *privacyContext

  // class methods
  +[MLTransactionContext supportsSecureCoding]

  // instance methods
  -[MLTransactionContext path]
  -[MLTransactionContext encodeWithCoder:]
  -[MLTransactionContext .cxx_destruct]
  -[MLTransactionContext options]
  -[MLTransactionContext privacyContext]
  -[MLTransactionContext initWithCoder:]
  -[MLTransactionContext priorityLevel]
  -[MLTransactionContext initWithPrivacyContext:path:priorityLevel:options:]


MLMediaLibraryServiceInterface : NSObject
  // class methods
  +[MLMediaLibraryServiceInterface serviceInterface]
  +[MLMediaLibraryServiceInterface clientInterface]


ML3PersistentIDGenerator : NSObject
  // instance methods
  -[ML3PersistentIDGenerator .cxx_destruct]
  -[ML3PersistentIDGenerator initWithDatabaseConnection:tableName:]
  -[ML3PersistentIDGenerator nextPersistentID]
  -[ML3PersistentIDGenerator _calculateNewRun]


ML3MusicLibraryResourcesManager : NSObject <NSSecureCoding, ML3MusicLibraryResourcesProviding>
 @property  _ML3BaseMusicLibraryResourcesManager *implementation
 @property  ML3MusicLibraryResourcesManagerContext *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ML3MusicLibraryResourcesManager supportsSecureCoding]
  +[ML3MusicLibraryResourcesManager sharedManager]

  // instance methods
  -[ML3MusicLibraryResourcesManager libraryContainerRelativePath:]
  -[ML3MusicLibraryResourcesManager pathForResourceFileOrFolder:basePath:relativeToBase:createParentFolderIfNecessary:]
  -[ML3MusicLibraryResourcesManager pathForResourceFileOrFolder:]
  -[ML3MusicLibraryResourcesManager libraryContainerPath]
  -[ML3MusicLibraryResourcesManager libraryContainerPathByAppendingPathComponent:]
  -[ML3MusicLibraryResourcesManager pathForBaseLocationPath:]
  -[ML3MusicLibraryResourcesManager initWithBaseResourcesManager:]
  -[ML3MusicLibraryResourcesManager initWithContext:]
  -[ML3MusicLibraryResourcesManager implementation]
  -[ML3MusicLibraryResourcesManager encodeWithCoder:]
  -[ML3MusicLibraryResourcesManager .cxx_destruct]
  -[ML3MusicLibraryResourcesManager setImplementation:]
  -[ML3MusicLibraryResourcesManager setContext:]
  -[ML3MusicLibraryResourcesManager context]
  -[ML3MusicLibraryResourcesManager initWithCoder:]


ML3MatchImportOperation : ML3DAAPImportOperation
  // instance methods
  -[ML3MatchImportOperation main]
  -[ML3MatchImportOperation importSource]
  -[ML3MatchImportOperation importItemFromDAAPElement:]
  -[ML3MatchImportOperation containerImportItemFromDAAPElement:withTrackIds:trackPersonIdentifiers:]
  -[ML3MatchImportOperation updateImportProgress:]
  -[ML3MatchImportOperation _performMatchImportWithTransaction:]


MLMediaLibraryService : NSObject <MLMediaLibraryServiceClientProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MLMediaLibraryService _setDaemonProcessInfo:]
  +[MLMediaLibraryService sharedMediaLibraryService]

  // instance methods
  -[MLMediaLibraryService serviceTerminatedTransactionWithIdentifier:error:]
  -[MLMediaLibraryService importOperationWithIdentifier:didUpdateWithProgress:]
  -[MLMediaLibraryService mediaLibraryResourcesServiceListenerEndpointWithError:]
  -[MLMediaLibraryService performMaintenanceTasksForDatabaseAtPath:withCompletionHandler:]
  -[MLMediaLibraryService executeUpdate:withParameters:onTransaction:withCompletionHandler:]
  -[MLMediaLibraryService dealloc]
  -[MLMediaLibraryService .cxx_destruct]
  -[MLMediaLibraryService updateSpotlightIndexMetadataForItemsWithIdentifiers:bundleID:withCompletion:]
  -[MLMediaLibraryService unlockDatabaseWithCompletion:]
  -[MLMediaLibraryService beginTransactionForDatabaseWithContext:completionHandler:]
  -[MLMediaLibraryService checkIntegrityOfDatabaseAtPath:repairFaults:withCompletionHandler:]
  -[MLMediaLibraryService lockDatabaseForReason:withCompletion:]
  -[MLMediaLibraryService validateDatabaseAtPath:error:]
  -[MLMediaLibraryService performImport:fromSource:withProgressBlock:completionHandler:]
  -[MLMediaLibraryService recreateDatabaseAtPath:withCompletionHandler:]
  -[MLMediaLibraryService endTransaction:shouldCommit:withCompletionHandler:]
  -[MLMediaLibraryService clientImportServiceListenerEndpointWithError:]
  -[MLMediaLibraryService performDiagnosticWithCompletionHandler:]
  -[MLMediaLibraryService setOptions:withCompletionHandler:]
  -[MLMediaLibraryService _serviceConnection]
  -[MLMediaLibraryService getLanguageResourcesWithCompletion:]
  -[MLMediaLibraryService updateSpotlightIndexForBundleID:withCompletion:]
  -[MLMediaLibraryService cancelImportOperation:completionHandler:]
  -[MLMediaLibraryService executeQuery:withParameters:options:onTransaction:withCompletionHandler:]
  -[MLMediaLibraryService performDatabaseOperation:withAttributes:options:completionHandler:]
  -[MLMediaLibraryService attemptDatabaseFileRecoveryAtPath:withCompletionHandler:]
  -[MLMediaLibraryService init]
  -[MLMediaLibraryService updateSiriIndexMetadataForAllLibrariesWithCompletion:]


ML3LyricsTable : ML3DatabaseTable
  // instance methods
  -[ML3LyricsTable columns]
  -[ML3LyricsTable .cxx_destruct]
  -[ML3LyricsTable name]


ML3ProtoSyncExportItem : ML3ExportItem

_ML3MultiUserDaemonMusicLibraryResourcesManager : _ML3BaseMusicLibraryResourcesManager <_ML3MultiUserDaemonAccountChangeOperationDelegate>
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  NSObject<OS_dispatch_queue> *calloutQueue
 @property  NSOperationQueue *accountChangeOperationQueue
 @property  <_MSVAccountInformationProviding> *accountInfo
 @property  <MLMediaLibraryAccountChangeObserver> *accountChangeObserver
 @property  NSString *currentActiveAccountDSID
 @property  ACAccountStore *accountStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager accountInfo]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager accountChangeObserver]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager _libraryContainerPathForDSID:]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager setAccountStore:]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager libraryContainerPath]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager accountStore]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager calloutQueue]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager setSerialQueue:]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager initWithAccountInfo:accountChangeObserver:]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager _tearDownNotifications]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager serialQueue]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager setAccountChangeObserver:]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager dealloc]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager setAccountInfo:]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager setCalloutQueue:]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager _processAccountChangeNotification]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager .cxx_destruct]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager setAccountChangeOperationQueue:]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager _setupNotifications]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager databasePathForDSID:]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager shouldExecuteAccountChangeOperation:reason:]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager currentActiveAccountDSID]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager accountChangeOperationQueue]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager accountChangeOperationWillStartPerformingDatabasePathChange:newDatabasePath:]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager _accountStoreDidChangeNotification:]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager _notifyClients:]
  -[_ML3MultiUserDaemonMusicLibraryResourcesManager setCurrentActiveAccountDSID:]


ML3UpdateSiriIndexOperation : ML3DatabaseOperation
 @property  NSMutableArray *donators

  // instance methods
  -[ML3UpdateSiriIndexOperation type]
  -[ML3UpdateSiriIndexOperation .cxx_destruct]
  -[ML3UpdateSiriIndexOperation _execute:]
  -[ML3UpdateSiriIndexOperation _enumerateUserIDsWithBlock:]
  -[ML3UpdateSiriIndexOperation _performFullIndexToRevision:withDatasetStream:]
  -[ML3UpdateSiriIndexOperation _performIncrementalIndexToRevision:withDatasetStream:]
  -[ML3UpdateSiriIndexOperation donators]


ML3DatabaseRecoveryOperation : NSOperation
 @property  NSString *path
 @property  NSError *error

  // instance methods
  -[ML3DatabaseRecoveryOperation path]
  -[ML3DatabaseRecoveryOperation error]
  -[ML3DatabaseRecoveryOperation .cxx_destruct]
  -[ML3DatabaseRecoveryOperation main]
  -[ML3DatabaseRecoveryOperation initWithDatabaseFilePath:]
  -[ML3DatabaseRecoveryOperation _createSQLiteErrorWithCode:description:]
  -[ML3DatabaseRecoveryOperation _lastCorruptionRestoreAttemptDate]
  -[ML3DatabaseRecoveryOperation _updateLastCorruptionRestoreAttemptDate]
  -[ML3DatabaseRecoveryOperation _recreateDatabaseWithCompletion:]


ML3VirtualTable : NSObject <ML3DatabaseModuleContext>
 @property  {shared_ptr<ML3VirtualTableDataSource>=^{ML3VirtualTableDataSource}^{__shared_weak_count}} dataSource
 @property  <ML3VirtualTableDelegate> *delegate
 @property  ML3DatabaseTable *databaseTable
 @property  ML3DatabaseConnection *connection
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ML3VirtualTable unregister]
  -[ML3VirtualTable databaseTable]
  -[ML3VirtualTable dataSource]
  -[ML3VirtualTable setDelegate:]
  -[ML3VirtualTable delegate]
  -[ML3VirtualTable .cxx_construct]
  -[ML3VirtualTable dealloc]
  -[ML3VirtualTable .cxx_destruct]
  -[ML3VirtualTable registerWithConnection:]
  -[ML3VirtualTable connection]
  -[ML3VirtualTable setDataSource:]
  -[ML3VirtualTable name]
  -[ML3VirtualTable initWithDatabaseTable:]


ML3Person : ML3Entity
  // class methods
  +[ML3Person databaseTable]
  +[ML3Person allProperties]
  +[ML3Person initialize]
  +[ML3Person defaultOrderingTerms]
  +[ML3Person revisionTrackingCode]
  +[ML3Person predisambiguatedProperties]


ML3DatabaseOperation : NSOperation
 @property  unsigned long type
 @property  ML3MusicLibrary *library
 @property  ML3Client *originatingClient
 @property  NSDictionary *options
 @property  NSDictionary *attributes
 @property  ML3ActiveTransaction *transaction
 @property  BOOL success
 @property  NSError *error

  // class methods
  +[ML3DatabaseOperation databaseOperationForType:withLibrary:writer:]

  // instance methods
  -[ML3DatabaseOperation success]
  -[ML3DatabaseOperation setSuccess:]
  -[ML3DatabaseOperation setAttributes:]
  -[ML3DatabaseOperation attributes]
  -[ML3DatabaseOperation library]
  -[ML3DatabaseOperation transaction]
  -[ML3DatabaseOperation type]
  -[ML3DatabaseOperation error]
  -[ML3DatabaseOperation .cxx_destruct]
  -[ML3DatabaseOperation setError:]
  -[ML3DatabaseOperation options]
  -[ML3DatabaseOperation setOptions:]
  -[ML3DatabaseOperation main]
  -[ML3DatabaseOperation _execute:]
  -[ML3DatabaseOperation _verifyLibraryConnectionAndAttributesProperties:]
  -[ML3DatabaseOperation initWithLibrary:writer:]
  -[ML3DatabaseOperation _operationTypeDescription]
  -[ML3DatabaseOperation originatingClient]
  -[ML3DatabaseOperation setOriginatingClient:]


ML3AlbumGroupingIdentifier : NSObject <NSCopying>
 @property  long long albumArtistPersistentID
 @property  NSData *groupingKey
 @property  NSString *feedURL
 @property  long long seasonNumber
 @property  BOOL compilation
 @property  NSData *keyValue

  // instance methods
  -[ML3AlbumGroupingIdentifier seasonNumber]
  -[ML3AlbumGroupingIdentifier .cxx_destruct]
  -[ML3AlbumGroupingIdentifier keyValue]
  -[ML3AlbumGroupingIdentifier copyWithZone:]
  -[ML3AlbumGroupingIdentifier isEqual:]
  -[ML3AlbumGroupingIdentifier albumArtistPersistentID]
  -[ML3AlbumGroupingIdentifier compilation]
  -[ML3AlbumGroupingIdentifier feedURL]
  -[ML3AlbumGroupingIdentifier initWithAlbumArtistPersistentID:groupingKey:feedURL:seasonNumber:compilation:]
  -[ML3AlbumGroupingIdentifier groupingKey]


ML3DatabaseResult : NSObject
 @property  NSString *limitProperty
 @property  long long limitValue

  // instance methods
  -[ML3DatabaseResult rows]
  -[ML3DatabaseResult setLimitProperty:]
  -[ML3DatabaseResult int64ValueForFirstRowAndColumn]
  -[ML3DatabaseResult setLimitValue:]
  -[ML3DatabaseResult columnNameIndexMap]
  -[ML3DatabaseResult limitValue]
  -[ML3DatabaseResult initWithStatement:connection:]
  -[ML3DatabaseResult limitProperty]
  -[ML3DatabaseResult .cxx_destruct]
  -[ML3DatabaseResult enumerateRowsWithBlock:]
  -[ML3DatabaseResult objectForFirstRowAndColumn]
  -[ML3DatabaseResult stringValueForFirstRowAndColumn]
  -[ML3DatabaseResult _statement]
  -[ML3DatabaseResult setLimitProperty:limitValue:]
  -[ML3DatabaseResult objectsInColumn:]
  -[ML3DatabaseResult hasAtLeastOneRow]
  -[ML3DatabaseResult init]
  -[ML3DatabaseResult indexForColumnName:]


ML3DatabaseRow : NSObject
 @property  ML3DatabaseResult *parentResult

  // instance methods
  -[ML3DatabaseRow arrayRepresentation]
  -[ML3DatabaseRow valueForColumnName:]
  -[ML3DatabaseRow intForColumnName:]
  -[ML3DatabaseRow dataForColumnIndex:]
  -[ML3DatabaseRow initWithParentResult:]
  -[ML3DatabaseRow int64ForColumnIndex:]
  -[ML3DatabaseRow stringForColumnIndex:]
  -[ML3DatabaseRow numberForColumnIndex:]
  -[ML3DatabaseRow dataForColumnName:]
  -[ML3DatabaseRow columnCount]
  -[ML3DatabaseRow stringForColumnName:]
  -[ML3DatabaseRow numberForColumnName:]
  -[ML3DatabaseRow parentResult]
  -[ML3DatabaseRow cStringForColumnIndex:]
  -[ML3DatabaseRow intForColumnIndex:]
  -[ML3DatabaseRow getBlobBytes:outLength:forColumnIndex:]
  -[ML3DatabaseRow valueForColumnIndex:]
  -[ML3DatabaseRow getBlobBytes:outLength:forColumnName:]
  -[ML3DatabaseRow doubleForColumnName:]
  -[ML3DatabaseRow int64ForColumnName:]
  -[ML3DatabaseRow doubleForColumnIndex:]
  -[ML3DatabaseRow cStringForColumnName:]
  -[ML3DatabaseRow .cxx_destruct]
  -[ML3DatabaseRow dictionaryRepresentation]
  -[ML3DatabaseRow objectForKeyedSubscript:]
  -[ML3DatabaseRow init]
  -[ML3DatabaseRow objectAtIndexedSubscript:]


ML3DatabaseStatement : NSObject
 @property  NSString *sql
 @property  ^{sqlite3_stmt=} sqliteStatement
 @property  BOOL clearBindingsAfterRunning
 @property  BOOL isExecuting

  // instance methods
  -[ML3DatabaseStatement sql]
  -[ML3DatabaseStatement step]
  -[ML3DatabaseStatement isBusy]
  -[ML3DatabaseStatement isReadOnly]
  -[ML3DatabaseStatement setIsExecuting:]
  -[ML3DatabaseStatement bindBytesNoCopy:length:forParameterAtPosition:]
  -[ML3DatabaseStatement bindBytes:length:forParameterAtPosition:]
  -[ML3DatabaseStatement initWithSQLiteStatement:SQL:]
  -[ML3DatabaseStatement dealloc]
  -[ML3DatabaseStatement reset]
  -[ML3DatabaseStatement clearBindings]
  -[ML3DatabaseStatement bindNullForParameterAtPosition:]
  -[ML3DatabaseStatement .cxx_destruct]
  -[ML3DatabaseStatement bindValue:forParameterAtPosition:]
  -[ML3DatabaseStatement bindUTF8StringNoCopy:length:forParameterAtPosition:]
  -[ML3DatabaseStatement bindDouble:forParameterAtPosition:]
  -[ML3DatabaseStatement isExecuting]
  -[ML3DatabaseStatement bindValuesInArray:]
  -[ML3DatabaseStatement sqliteStatement]
  -[ML3DatabaseStatement setClearBindingsAfterRunning:]
  -[ML3DatabaseStatement bindValuesForParameterNames:]
  -[ML3DatabaseStatement bindInt:forParameterAtPosition:]
  -[ML3DatabaseStatement bindInt64:forParameterAtPosition:]
  -[ML3DatabaseStatement bindUTF8String:forParameterAtPosition:]
  -[ML3DatabaseStatement bindUTF8StringNoCopy:forParameterAtPosition:]
  -[ML3DatabaseStatement finalizeStatement]
  -[ML3DatabaseStatement clearBindingsAfterRunning]


ML3DatabaseStatementRenderer : NSObject
  // class methods
  +[ML3DatabaseStatementRenderer defaultRenderer]

  // instance methods
  -[ML3DatabaseStatementRenderer insertStatementWithOptions:]
  -[ML3DatabaseStatementRenderer insertStatementForTableName:columnNames:]
  -[ML3DatabaseStatementRenderer savepointReleaseStatementWithName:]
  -[ML3DatabaseStatementRenderer commitTransactionStatement]
  -[ML3DatabaseStatementRenderer rollbackTranscationStatementToSavepointName:]
  -[ML3DatabaseStatementRenderer statementWithPrefix:inParameterCount:]
  -[ML3DatabaseStatementRenderer insertStatementUsingDefaultValuesForTableName:]
  -[ML3DatabaseStatementRenderer rollbackTranscationStatement]
  -[ML3DatabaseStatementRenderer beginTransactionStatementWithBehaviorType:]
  -[ML3DatabaseStatementRenderer savepointStatementWithName:]


ML3ContainerItem : ML3Entity
  // class methods
  +[ML3ContainerItem databaseTable]
  +[ML3ContainerItem initialize]
  +[ML3ContainerItem defaultOrderingTerms]
  +[ML3ContainerItem revisionTrackingCode]


ML3DatabaseImport : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *libraryPath
 @property  NSData *trackData
 @property  NSData *playlistData
 @property  NSFileHandle *fileHandle
 @property  NSString *syncAnchor
 @property  BOOL resetSync
 @property  BOOL sagaEnabled
 @property  long long storeAccountID
 @property  long long preferredVideoQuality
 @property  unsigned int homeSharingBasePlaylistID
 @property  BOOL tracksAreLibraryOwnedContent
 @property  BOOL playlistsAreLibraryOwnedContent
 @property  BOOL pendingMatch
 @property  BOOL isServerImport
 @property  NSString *syncLibraryID
 @property  BOOL suspendable
 @property  NSObject<OS_tcc_identity> *clientIdentity

  // class methods
  +[ML3DatabaseImport supportsSecureCoding]

  // instance methods
  -[ML3DatabaseImport encodeWithCoder:]
  -[ML3DatabaseImport clientIdentity]
  -[ML3DatabaseImport fileHandle]
  -[ML3DatabaseImport .cxx_destruct]
  -[ML3DatabaseImport libraryPath]
  -[ML3DatabaseImport copyWithZone:]
  -[ML3DatabaseImport syncAnchor]
  -[ML3DatabaseImport mutableCopyWithZone:]
  -[ML3DatabaseImport init]
  -[ML3DatabaseImport initWithCoder:]
  -[ML3DatabaseImport preferredVideoQuality]
  -[ML3DatabaseImport _copyWithZone:usingConcreteClass:]
  -[ML3DatabaseImport trackData]
  -[ML3DatabaseImport initWithLibraryPath:trackData:playlistData:]
  -[ML3DatabaseImport storeAccountID]
  -[ML3DatabaseImport syncLibraryID]
  -[ML3DatabaseImport initWithLibraryPath:trackData:playlistData:clientIdentity:]
  -[ML3DatabaseImport playlistData]
  -[ML3DatabaseImport isResetSync]
  -[ML3DatabaseImport isSagaEnabled]
  -[ML3DatabaseImport homeSharingBasePlaylistID]
  -[ML3DatabaseImport tracksAreLibraryOwnedContent]
  -[ML3DatabaseImport playlistsAreLibraryOwnedContent]
  -[ML3DatabaseImport isPendingMatch]
  -[ML3DatabaseImport isServerImport]
  -[ML3DatabaseImport isSuspendable]


ML3MutableDatabaseImport : ML3DatabaseImport
 @property  NSString *libraryPath
 @property  NSData *trackData
 @property  NSData *playlistData
 @property  NSFileHandle *fileHandle
 @property  NSString *syncAnchor
 @property  BOOL resetSync
 @property  BOOL sagaEnabled
 @property  long long storeAccountID
 @property  long long preferredVideoQuality
 @property  unsigned int homeSharingBasePlaylistID
 @property  BOOL tracksAreLibraryOwnedContent
 @property  BOOL playlistsAreLibraryOwnedContent
 @property  BOOL pendingMatch
 @property  BOOL isServerImport
 @property  NSString *syncLibraryID
 @property  BOOL suspendable

  // instance methods
  -[ML3MutableDatabaseImport setSyncAnchor:]
  -[ML3MutableDatabaseImport setFileHandle:]
  -[ML3MutableDatabaseImport setPreferredVideoQuality:]
  -[ML3MutableDatabaseImport setPendingMatch:]
  -[ML3MutableDatabaseImport setTracksAreLibraryOwnedContent:]
  -[ML3MutableDatabaseImport setPlaylistsAreLibraryOwnedContent:]
  -[ML3MutableDatabaseImport setStoreAccountID:]
  -[ML3MutableDatabaseImport setSyncLibraryID:]
  -[ML3MutableDatabaseImport setLibraryPath:]
  -[ML3MutableDatabaseImport setTrackData:]
  -[ML3MutableDatabaseImport setPlaylistData:]
  -[ML3MutableDatabaseImport setResetSync:]
  -[ML3MutableDatabaseImport setSagaEnabled:]
  -[ML3MutableDatabaseImport setHomeSharingBasePlaylistID:]
  -[ML3MutableDatabaseImport setIsServerImport:]
  -[ML3MutableDatabaseImport setSuspendable:]


ML3BulkStatementExecutionOperation : ML3DatabaseOperation
  // instance methods
  -[ML3BulkStatementExecutionOperation type]
  -[ML3BulkStatementExecutionOperation _execute:]
  -[ML3BulkStatementExecutionOperation _executeStatements:onConnection:withError:]


ML3MatcherAuxData : NSObject
  // instance methods
  -[ML3MatcherAuxData dealloc]
  -[ML3MatcherAuxData .cxx_destruct]


ML3ClientImportSessionConfiguration : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *libraryPath
 @property  int sourceType
 @property  unsigned long operationCount
 @property  BOOL allowAccountMerging
 @property  ML3DatabasePrivacyContext *privacyContext

  // class methods
  +[ML3ClientImportSessionConfiguration supportsSecureCoding]

  // instance methods
  -[ML3ClientImportSessionConfiguration sourceType]
  -[ML3ClientImportSessionConfiguration setSourceType:]
  -[ML3ClientImportSessionConfiguration encodeWithCoder:]
  -[ML3ClientImportSessionConfiguration operationCount]
  -[ML3ClientImportSessionConfiguration .cxx_destruct]
  -[ML3ClientImportSessionConfiguration libraryPath]
  -[ML3ClientImportSessionConfiguration copyWithZone:]
  -[ML3ClientImportSessionConfiguration privacyContext]
  -[ML3ClientImportSessionConfiguration setPrivacyContext:]
  -[ML3ClientImportSessionConfiguration init]
  -[ML3ClientImportSessionConfiguration initWithCoder:]
  -[ML3ClientImportSessionConfiguration setLibraryPath:]
  -[ML3ClientImportSessionConfiguration setOperationCount:]
  -[ML3ClientImportSessionConfiguration allowAccountMerging]
  -[ML3ClientImportSessionConfiguration setAllowAccountMerging:]


ML3DatabaseBlob : NSObject
  // instance methods
  -[ML3DatabaseBlob dealloc]
  -[ML3DatabaseBlob length]
  -[ML3DatabaseBlob init]
  -[ML3DatabaseBlob data]
  -[ML3DatabaseBlob initWithSQLiteHandle:]
  -[ML3DatabaseBlob readData:numberOfBytes:offset:]
  -[ML3DatabaseBlob writeData:numberOfBytes:offset:]


ML3CloudKVSTable : ML3DatabaseTable
  // instance methods
  -[ML3CloudKVSTable columns]
  -[ML3CloudKVSTable .cxx_destruct]
  -[ML3CloudKVSTable name]


ML3ITunesSyncImportOperation : ML3ImportOperation
  // instance methods
  -[ML3ITunesSyncImportOperation .cxx_destruct]
  -[ML3ITunesSyncImportOperation main]
  -[ML3ITunesSyncImportOperation importSource]
  -[ML3ITunesSyncImportOperation _performImportWithTransaction:]
  -[ML3ITunesSyncImportOperation _processSyncOperation:withImportSession:]
  -[ML3ITunesSyncImportOperation _performImportOfTrackData:WithTransaction:]
  -[ML3ITunesSyncImportOperation _performImportFromPlistFiles:withTransaction:]
  -[ML3ITunesSyncImportOperation _syncPlistFilesFromDirectory:]
  -[ML3ITunesSyncImportOperation _syncOperationsFromPlistFile:]
  -[ML3ITunesSyncImportOperation _processInsertTrackOperation:withImportSession:]
  -[ML3ITunesSyncImportOperation _processUpdateTrackOperation:withImportSession:]
  -[ML3ITunesSyncImportOperation _processDeleteTrackOperation:withImportSession:]
  -[ML3ITunesSyncImportOperation _processUpdateDBInfoOperation:withImportSession:]
  -[ML3ITunesSyncImportOperation _processInsertPlaylistOperation:withImportSession:]
  -[ML3ITunesSyncImportOperation _processUpdatePlaylistOperation:withImportSession:]
  -[ML3ITunesSyncImportOperation _processDeletePlaylistOperation:withImportSession:]
  -[ML3ITunesSyncImportOperation _recoverExistingAsset:forTrackId:]
  -[ML3ITunesSyncImportOperation _dbInfoValuesForStep:]
  -[ML3ITunesSyncImportOperation _processGeniusConfigPlist:]
  -[ML3ITunesSyncImportOperation _archiveSyncPlistFiles]


ML3ContainerSeedTable : ML3DatabaseTable
  // instance methods
  -[ML3ContainerSeedTable columns]
  -[ML3ContainerSeedTable .cxx_destruct]
  -[ML3ContainerSeedTable name]


MLChapterTOC : NSObject
  // instance methods
  -[MLChapterTOC chapterIndexForGroupIndex:groupingProperty:]
  -[MLChapterTOC durationInMSOfGroupAtIndex:groupingProperty:]
  -[MLChapterTOC urlPropertyOfChapterAtIndex:]
  -[MLChapterTOC urlTitlePropertyOfChapterAtIndex:]
  -[MLChapterTOC countOfChapters]
  -[MLChapterTOC countOfGroupsForProperty:]
  -[MLChapterTOC timeLocationInMSOfChapterAtIndex:]
  -[MLChapterTOC titlePropertyOfChapterAtIndex:]
  -[MLChapterTOC chapterDataRef]
  -[MLChapterTOC groupIndexForChapterIndex:groupingProperty:]
  -[MLChapterTOC groupIndexAtTimeLocationInMS:groupingProperty:]
  -[MLChapterTOC timeLocationInMSOfGroupAtIndex:groupingProperty:]
  -[MLChapterTOC hasDataForProperty:]
  -[MLChapterTOC chapterIndexAtTimeLocationInMS:]


ML3ClientImportResult : NSObject <NSSecureCoding>
 @property  BOOL success
 @property  NSDictionary *resultingDatabasePersistentIDs

  // class methods
  +[ML3ClientImportResult supportsSecureCoding]

  // instance methods
  -[ML3ClientImportResult success]
  -[ML3ClientImportResult encodeWithCoder:]
  -[ML3ClientImportResult .cxx_destruct]
  -[ML3ClientImportResult initWithCoder:]
  -[ML3ClientImportResult initWithSuccess:resultingDatabasePersistentIDs:]
  -[ML3ClientImportResult resultingDatabasePersistentIDs]


ML3MaintenanceTasksOperation : NSOperation
 @property  ML3MusicLibrary *library
 @property  NSObject<OS_xpc_object> *activity

  // instance methods
  -[ML3MaintenanceTasksOperation library]
  -[ML3MaintenanceTasksOperation .cxx_destruct]
  -[ML3MaintenanceTasksOperation activity]
  -[ML3MaintenanceTasksOperation main]
  -[ML3MaintenanceTasksOperation initWithLibrary:activity:]


ML3AccountCacheEntry : NSObject
 @property  NSString *appleID
 @property  NSString *altDSID

  // instance methods
  -[ML3AccountCacheEntry altDSID]
  -[ML3AccountCacheEntry setAltDSID:]
  -[ML3AccountCacheEntry .cxx_destruct]
  -[ML3AccountCacheEntry appleID]
  -[ML3AccountCacheEntry initWithAppleID:altDSID:]
  -[ML3AccountCacheEntry setAppleID:]


ML3AccountCacheDatabase : NSObject
  // instance methods
  -[ML3AccountCacheDatabase .cxx_destruct]
  -[ML3AccountCacheDatabase initWithLibrary:]
  -[ML3AccountCacheDatabase setAppleID:forDSID:]
  -[ML3AccountCacheDatabase setAppleID:altDSID:forDSID:]
  -[ML3AccountCacheDatabase appleIDForDSID:]
  -[ML3AccountCacheDatabase getPropertiesForDSID:appleID:altDSID:]
  -[ML3AccountCacheDatabase _cacheEntryForDSID:]
  -[ML3AccountCacheDatabase _setCacheEntry:forDSID:]


ML3MusicLibraryAccountChangeObserverProxy : NSObject <MLMediaLibraryAccountChangeObserver>
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  NSObject<OS_dispatch_queue> *calloutQueue
 @property  NSHashTable *weakObservers
 @property  NSHashTable *readonlyObservers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ML3MusicLibraryAccountChangeObserverProxy sharedProxy]

  // instance methods
  -[ML3MusicLibraryAccountChangeObserverProxy calloutQueue]
  -[ML3MusicLibraryAccountChangeObserverProxy performDatabasePathChange:completion:]
  -[ML3MusicLibraryAccountChangeObserverProxy removeAccountChangeObserver:]
  -[ML3MusicLibraryAccountChangeObserverProxy serialQueue]
  -[ML3MusicLibraryAccountChangeObserverProxy emergencyDisconnectWithCompletion:]
  -[ML3MusicLibraryAccountChangeObserverProxy addAccountChangeObserver:]
  -[ML3MusicLibraryAccountChangeObserverProxy .cxx_destruct]
  -[ML3MusicLibraryAccountChangeObserverProxy weakObservers]
  -[ML3MusicLibraryAccountChangeObserverProxy terminateForFailureToPerformDatabasePathChange]
  -[ML3MusicLibraryAccountChangeObserverProxy readonlyObservers]
  -[ML3MusicLibraryAccountChangeObserverProxy _init]


ML3DatabaseValidationClient : NSObject
  // class methods
  +[ML3DatabaseValidationClient sharedClient]

  // instance methods
  -[ML3DatabaseValidationClient validateDatabaseAtPath:]
  -[ML3DatabaseValidationClient .cxx_destruct]
  -[ML3DatabaseValidationClient _validateDatabaseForPath:usingLibrary:]
  -[ML3DatabaseValidationClient validateDatabaseForLibrary:]
  -[ML3DatabaseValidationClient _validatableDatabaseForPath:]
  -[ML3DatabaseValidationClient isValidatingDatabaseForPath:]
  -[ML3DatabaseValidationClient validateDatabaseForConnection:]
  -[ML3DatabaseValidationClient init]


_ML3ValidatableDatabase : NSObject
 @property  NSString *databasePath
 @property  unsigned long validationState
 @property  NSObject<OS_dispatch_queue> *validationSerialQueue

  // instance methods
  -[_ML3ValidatableDatabase setDatabasePath:]
  -[_ML3ValidatableDatabase databasePath]
  -[_ML3ValidatableDatabase validationState]
  -[_ML3ValidatableDatabase currentQueueIsValidationQueue]
  -[_ML3ValidatableDatabase setValidationSerialQueue:]
  -[_ML3ValidatableDatabase .cxx_destruct]
  -[_ML3ValidatableDatabase setValidationState:]
  -[_ML3ValidatableDatabase initWithDatabasePath:]
  -[_ML3ValidatableDatabase init]
  -[_ML3ValidatableDatabase validationSerialQueue]


ML3ContainerItemPersonTable : ML3DatabaseTable
  // instance methods
  -[ML3ContainerItemPersonTable columns]
  -[ML3ContainerItemPersonTable .cxx_destruct]
  -[ML3ContainerItemPersonTable name]


ML3UpdateSpotlightIndexOperation : ML3DatabaseOperation
 @property  CSSearchableIndex *index
 @property  NSString *bundleIdentifier
 @property  unsigned long bundle
 @property  unsigned long batchCount

  // instance methods
  -[ML3UpdateSpotlightIndexOperation bundle]
  -[ML3UpdateSpotlightIndexOperation setIndex:]
  -[ML3UpdateSpotlightIndexOperation index]
  -[ML3UpdateSpotlightIndexOperation type]
  -[ML3UpdateSpotlightIndexOperation setBundle:]
  -[ML3UpdateSpotlightIndexOperation .cxx_destruct]
  -[ML3UpdateSpotlightIndexOperation setBundleIdentifier:]
  -[ML3UpdateSpotlightIndexOperation bundleIdentifier]
  -[ML3UpdateSpotlightIndexOperation batchCount]
  -[ML3UpdateSpotlightIndexOperation setBatchCount:]
  -[ML3UpdateSpotlightIndexOperation _execute:]
  -[ML3UpdateSpotlightIndexOperation _verifyLibraryConnectionAndAttributesProperties:]
  -[ML3UpdateSpotlightIndexOperation _updateIndexedItemsWithIdentifiers:error:]
  -[ML3UpdateSpotlightIndexOperation _indexItemsFromLibrarySinceRevision:targetRevision:error:]
  -[ML3UpdateSpotlightIndexOperation _deleteAllIndexedItemsWithError:]
  -[ML3UpdateSpotlightIndexOperation _deleteIndexedItemsWithEntityStringIDs:error:]
  -[ML3UpdateSpotlightIndexOperation _indexTracksWithPersistentIDs:playlistsWithPersistentIDs:error:]
  -[ML3UpdateSpotlightIndexOperation _batchIndexWithTrackPersistentIDsToUpdate:playlistsPersistentIDsToUpdateSet:entityStringsToDelete:currentRevision:targetRevision:error:]
  -[ML3UpdateSpotlightIndexOperation _enumerateSearchableItemsWithPersistentIDs:entityType:error:usingBlock:]
  -[ML3UpdateSpotlightIndexOperation _createSearchableItemsWithPersistentIDs:entityType:error:]
  -[ML3UpdateSpotlightIndexOperation _createSearchableItemsForTracksWithQuery:error:]
  -[ML3UpdateSpotlightIndexOperation _createSearchableItemsForPlaylistsWithQuery:error:]
  -[ML3UpdateSpotlightIndexOperation _queryForPlaylistsContainingMusicShowsMissedByQuery:inContainerPIDs:]


_ML3MultiUserDaemonAccountChangeOperation : MSVAsyncOperation
 @property  <MLMediaLibraryAccountChangeObserver> *accountChangeObserver
 @property  NSString *initialDSID
 @property  NSString *finalDSID
 @property  <_ML3MultiUserDaemonAccountChangeOperationDelegate> *delegate

  // instance methods
  -[_ML3MultiUserDaemonAccountChangeOperation accountChangeObserver]
  -[_ML3MultiUserDaemonAccountChangeOperation setAccountChangeObserver:]
  -[_ML3MultiUserDaemonAccountChangeOperation setDelegate:]
  -[_ML3MultiUserDaemonAccountChangeOperation delegate]
  -[_ML3MultiUserDaemonAccountChangeOperation execute]
  -[_ML3MultiUserDaemonAccountChangeOperation .cxx_destruct]
  -[_ML3MultiUserDaemonAccountChangeOperation initWithInitialDSID:finalDSID:accountChangeObserver:]
  -[_ML3MultiUserDaemonAccountChangeOperation initialDSID]
  -[_ML3MultiUserDaemonAccountChangeOperation finalDSID]


ML3RemoveTracksOperation : ML3DatabaseOperation
  // instance methods
  -[ML3RemoveTracksOperation type]
  -[ML3RemoveTracksOperation _execute:]
  -[ML3RemoveTracksOperation _verifyLibraryConnectionAndAttributesProperties:]
  -[ML3RemoveTracksOperation _removeSource:usingTransaction:]
  -[ML3RemoveTracksOperation _removeTracksWithPersistentIDs:fromSource:usingTransaction:]


ML3DatabaseConnectionPool : NSObject
 @property  BOOL closed
 @property  NSString *databasePath
 @property  <ML3DatabaseConnectionPoolDelegate> *delegate
 @property  unsigned long maxReaders
 @property  unsigned long maxWriters
 @property  unsigned long connectionsJournalingMode
 @property  BOOL useDistantWriterConnections
 @property  BOOL locked
 @property  BOOL isCurrentThreadConnectionInTransaction

  // instance methods
  -[ML3DatabaseConnectionPool databasePath]
  -[ML3DatabaseConnectionPool unlock]
  -[ML3DatabaseConnectionPool isLocked]
  -[ML3DatabaseConnectionPool _generateDiagnostic]
  -[ML3DatabaseConnectionPool maxWriters]
  -[ML3DatabaseConnectionPool isClosed]
  -[ML3DatabaseConnectionPool initWithDatabasePath:maxReaders:]
  -[ML3DatabaseConnectionPool setDelegate:]
  -[ML3DatabaseConnectionPool maxReaders]
  -[ML3DatabaseConnectionPool readerConnection]
  -[ML3DatabaseConnectionPool delegate]
  -[ML3DatabaseConnectionPool _localConnectionForThread:]
  -[ML3DatabaseConnectionPool useDistantWriterConnections]
  -[ML3DatabaseConnectionPool dealloc]
  -[ML3DatabaseConnectionPool setUseDistantWriterConnections:]
  -[ML3DatabaseConnectionPool .cxx_destruct]
  -[ML3DatabaseConnectionPool lockAndCloseAllConnectionsForTermination]
  -[ML3DatabaseConnectionPool isCurrentThreadConnectionInTransaction]
  -[ML3DatabaseConnectionPool _connectionForWriting:useThreadConnection:storeThreadLocalConnection:]
  -[ML3DatabaseConnectionPool _setLocalConnection:forThread:]
  -[ML3DatabaseConnectionPool setClosed:]
  -[ML3DatabaseConnectionPool initWithDatabasePath:maxReaders:maxWriters:]
  -[ML3DatabaseConnectionPool setConnectionsJournalingMode:]
  -[ML3DatabaseConnectionPool checkInConnection:]
  -[ML3DatabaseConnectionPool _setConnection:forIdentifier:]
  -[ML3DatabaseConnectionPool connectionsJournalingMode]
  -[ML3DatabaseConnectionPool closeAllConnections]
  -[ML3DatabaseConnectionPool lock]
  -[ML3DatabaseConnectionPool _connectionForIdentifier:]
  -[ML3DatabaseConnectionPool init]
  -[ML3DatabaseConnectionPool _closeAllConnectionsAndWaitForBusyConnections:]
  -[ML3DatabaseConnectionPool writerConnection]


_ML3DatabaseConnectionWrapper : NSObject
 @property  ML3DatabaseConnection *connection
 @property  NSThread *owningThread
 @property  NSThread *borrowingThread
 @property  unsigned long useCount

  // instance methods
  -[_ML3DatabaseConnectionWrapper useCount]
  -[_ML3DatabaseConnectionWrapper setUseCount:]
  -[_ML3DatabaseConnectionWrapper initWithConnection:]
  -[_ML3DatabaseConnectionWrapper setOwningThread:]
  -[_ML3DatabaseConnectionWrapper .cxx_destruct]
  -[_ML3DatabaseConnectionWrapper owningThread]
  -[_ML3DatabaseConnectionWrapper connection]
  -[_ML3DatabaseConnectionWrapper borrowingThread]
  -[_ML3DatabaseConnectionWrapper setBorrowingThread:]
  -[_ML3DatabaseConnectionWrapper setConnection:]


_ML3DatabaseConnectionSubPool : NSObject
 @property  NSString *databasePath
 @property  unsigned long maxConcurrentConnections
 @property  BOOL useReadOnlyConnections
 @property  BOOL useDistantConnections
 @property  unsigned long connectionsJournalingMode

  // instance methods
  -[_ML3DatabaseConnectionSubPool databasePath]
  -[_ML3DatabaseConnectionSubPool handleDiagnostic:]
  -[_ML3DatabaseConnectionSubPool dealloc]
  -[_ML3DatabaseConnectionSubPool checkInConnection:returnToPool:]
  -[_ML3DatabaseConnectionSubPool .cxx_destruct]
  -[_ML3DatabaseConnectionSubPool closeConnectionsAndWaitForBusyConnections:]
  -[_ML3DatabaseConnectionSubPool useReadOnlyConnections]
  -[_ML3DatabaseConnectionSubPool initWithDatabasePath:maxConcurrentConnections:]
  -[_ML3DatabaseConnectionSubPool maxConcurrentConnections]
  -[_ML3DatabaseConnectionSubPool setConnectionsJournalingMode:]
  -[_ML3DatabaseConnectionSubPool checkInConnection:]
  -[_ML3DatabaseConnectionSubPool connectionsJournalingMode]
  -[_ML3DatabaseConnectionSubPool useDistantConnections]
  -[_ML3DatabaseConnectionSubPool setUseReadOnlyConnections:]
  -[_ML3DatabaseConnectionSubPool setUseDistantConnections:]
  -[_ML3DatabaseConnectionSubPool _handleDatabaseDeletion]
  -[_ML3DatabaseConnectionSubPool checkoutConnection:]
  -[_ML3DatabaseConnectionSubPool init]


_ML3DatabaseConnectionPoolDiagnostic : NSObject <NSMutableCopying>
 @property  NSArray *readerAvailableConnections
 @property  NSArray *readerBusyConnections
 @property  NSArray *writerAvailableConnections
 @property  NSArray *writerBusyConnections

  // instance methods
  -[_ML3DatabaseConnectionPoolDiagnostic .cxx_destruct]
  -[_ML3DatabaseConnectionPoolDiagnostic copyWithZone:]
  -[_ML3DatabaseConnectionPoolDiagnostic mutableCopyWithZone:]
  -[_ML3DatabaseConnectionPoolDiagnostic _copyWithZone:usingConcreteClass:]
  -[_ML3DatabaseConnectionPoolDiagnostic readerAvailableConnections]
  -[_ML3DatabaseConnectionPoolDiagnostic readerBusyConnections]
  -[_ML3DatabaseConnectionPoolDiagnostic writerAvailableConnections]
  -[_ML3DatabaseConnectionPoolDiagnostic writerBusyConnections]


_ML3MutableDatabaseConnectionPoolDiagnostic : _ML3DatabaseConnectionPoolDiagnostic
 @property  NSArray *readerAvailableConnections
 @property  NSArray *readerBusyConnections
 @property  NSArray *writerAvailableConnections
 @property  NSArray *writerBusyConnections

  // instance methods
  -[_ML3MutableDatabaseConnectionPoolDiagnostic setReaderAvailableConnections:]
  -[_ML3MutableDatabaseConnectionPoolDiagnostic setReaderBusyConnections:]
  -[_ML3MutableDatabaseConnectionPoolDiagnostic setWriterAvailableConnections:]
  -[_ML3MutableDatabaseConnectionPoolDiagnostic setWriterBusyConnections:]


ML3ItemPlaybackTable : ML3DatabaseTable
  // instance methods
  -[ML3ItemPlaybackTable columns]
  -[ML3ItemPlaybackTable .cxx_destruct]
  -[ML3ItemPlaybackTable name]


ML3LanguageResources : NSObject <NSSecureCoding>
 @property  NSDictionary *sectionsInfo
 @property  NSDictionary *sortingDetails
 @property  NSString *canonicalLanguageIdentifier

  // class methods
  +[ML3LanguageResources supportsSecureCoding]

  // instance methods
  -[ML3LanguageResources sectionsInfo]
  -[ML3LanguageResources encodeWithCoder:]
  -[ML3LanguageResources .cxx_destruct]
  -[ML3LanguageResources initWithSectionsInfo:sortingDetails:canonicalLanguageIdentifier:]
  -[ML3LanguageResources canonicalLanguageIdentifier]
  -[ML3LanguageResources sortingDetails]
  -[ML3LanguageResources initWithCoder:]


ML3LanguageResourceManager : NSObject
 @property  ML3LanguageResources *cachedResources
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  ML3LanguageResources *resources

  // class methods
  +[ML3LanguageResourceManager sharedResourceManager]

  // instance methods
  -[ML3LanguageResourceManager setSerialQueue:]
  -[ML3LanguageResourceManager setCachedResources:]
  -[ML3LanguageResourceManager serialQueue]
  -[ML3LanguageResourceManager resources]
  -[ML3LanguageResourceManager .cxx_destruct]
  -[ML3LanguageResourceManager invalidateCachedResources]
  -[ML3LanguageResourceManager _buildLanguageResources]
  -[ML3LanguageResourceManager cachedResources]
  -[ML3LanguageResourceManager _init]


ML3DatabaseConnection : NSObject
 @property  <ML3DatabaseConnectionDelegate> *connectionDelegate
 @property  NSString *databasePath
 @property  BOOL isOpen
 @property  ML3DatabasePrivacyContext *privacyContext
 @property  BOOL isReadOnly
 @property  unsigned long journalingMode
 @property  unsigned long protectionLevel
 @property  BOOL isInTransaction
 @property  BOOL transactionMarkedForRollBack
 @property  NSUUID *currentTransactionID
 @property  NSUUID *uniqueIdentifier
 @property  BOOL automaticCheckpointingEnabled
 @property  unsigned long checkpointStatementThreshold
 @property  BOOL logQueryPlans

  // instance methods
  -[ML3DatabaseConnection executeQuery:]
  -[ML3DatabaseConnection databasePath]
  -[ML3DatabaseConnection setProtectionLevel:]
  -[ML3DatabaseConnection isReadOnly]
  -[ML3DatabaseConnection connectionDelegate]
  -[ML3DatabaseConnection _isDeviceMediaLibraryDatabase]
  -[ML3DatabaseConnection setConnectionDelegate:]
  -[ML3DatabaseConnection registerFunctionName:argumentCount:functionPointer:]
  -[ML3DatabaseConnection _logCurrentErrorWhilePerformingStatementOperation:statementSQL:]
  -[ML3DatabaseConnection performTransactionWithBlock:usingBehaviorType:]
  -[ML3DatabaseConnection lastInsertionRowID]
  -[ML3DatabaseConnection setReadOnly:]
  -[ML3DatabaseConnection popTransactionAndCommit:]
  -[ML3DatabaseConnection _sqliteHandle]
  -[ML3DatabaseConnection executeUpdate:withParameters:error:]
  -[ML3DatabaseConnection registerFunctionName:argumentCount:functionPointer:userData:]
  -[ML3DatabaseConnection _databaseFilesAreWritable]
  -[ML3DatabaseConnection pushTransaction]
  -[ML3DatabaseConnection registerModule:]
  -[ML3DatabaseConnection popToRootTransactionAndCommit:]
  -[ML3DatabaseConnection schemaDeleteColumns:inTable:]
  -[ML3DatabaseConnection executeUpdate:]
  -[ML3DatabaseConnection _shortDescription]
  -[ML3DatabaseConnection _handleDatabaseCorruption]
  -[ML3DatabaseConnection _openWithFlags:]
  -[ML3DatabaseConnection _executeTransactionCommitBlocks:]
  -[ML3DatabaseConnection pushTransactionUsingBehaviorType:]
  -[ML3DatabaseConnection _internalLogQuery:withParameters:limitProperty:limitValue:]
  -[ML3DatabaseConnection _internalExecuteQuery:withParameters:limitProperty:limitValue:]
  -[ML3DatabaseConnection checkpointStatementThreshold]
  -[ML3DatabaseConnection removeModuleNamed:]
  -[ML3DatabaseConnection dealloc]
  -[ML3DatabaseConnection close]
  -[ML3DatabaseConnection _registeredModuleNamed:]
  -[ML3DatabaseConnection _handleConnectionErrorWhileOpening:]
  -[ML3DatabaseConnection _createDatabaseFileIfNonexistent]
  -[ML3DatabaseConnection _validatePreparedStatement:error:]
  -[ML3DatabaseConnection enqueueBlockForTransactionCommit:]
  -[ML3DatabaseConnection .cxx_destruct]
  -[ML3DatabaseConnection setCurrentTransactionID:]
  -[ML3DatabaseConnection _alterTableNamed:withNewColumnDefinitions:newColumnNames:oldColumnNames:]
  -[ML3DatabaseConnection _logDatabaseFileDebugInformation]
  -[ML3DatabaseConnection _resetUnfinalizedStatements]
  -[ML3DatabaseConnection logQueryPlans]
  -[ML3DatabaseConnection _internalBeginTransactionWithBehaviorType:]
  -[ML3DatabaseConnection setLogQueryPlans:]
  -[ML3DatabaseConnection performTransactionWithBlock:]
  -[ML3DatabaseConnection _alreadyAttemptedCorruptionRecovery]
  -[ML3DatabaseConnection open]
  -[ML3DatabaseConnection _databaseFilePaths]
  -[ML3DatabaseConnection tableExists:]
  -[ML3DatabaseConnection _databaseFileExists]
  -[ML3DatabaseConnection executeQuery:withParameters:]
  -[ML3DatabaseConnection _setOwningPool:]
  -[ML3DatabaseConnection _owningPool]
  -[ML3DatabaseConnection _handleZombieSQLiteConnection:]
  -[ML3DatabaseConnection _handleDiskIOError]
  -[ML3DatabaseConnection transactionMarkedForRollBack]
  -[ML3DatabaseConnection isInTransaction]
  -[ML3DatabaseConnection _handleBusyLockWithNumberOfRetries:]
  -[ML3DatabaseConnection currentTransactionID]
  -[ML3DatabaseConnection privacyContext]
  -[ML3DatabaseConnection schemaInsertColumnDefinition:intoTable:atIndex:]
  -[ML3DatabaseConnection journalingMode]
  -[ML3DatabaseConnection executeQuery:withParameters:limitProperty:limitValue:]
  -[ML3DatabaseConnection setTransactionLevel:]
  -[ML3DatabaseConnection uniqueIdentifier]
  -[ML3DatabaseConnection setCheckpointStatementThreshold:]
  -[ML3DatabaseConnection protectionLevel]
  -[ML3DatabaseConnection _closeAndFlushTransactionState:]
  -[ML3DatabaseConnection schemaDeleteColumn:inTable:]
  -[ML3DatabaseConnection _internalEndTransactionAndCommit:]
  -[ML3DatabaseConnection registerModuleName:moduleMethods:]
  -[ML3DatabaseConnection schemaRenameColumn:inTable:toNewColumnName:]
  -[ML3DatabaseConnection registerFunctionName:argumentCount:block:]
  -[ML3DatabaseConnection _prepareStatement:error:]
  -[ML3DatabaseConnection _finalizeAllStatements]
  -[ML3DatabaseConnection automaticCheckpointingEnabled]
  -[ML3DatabaseConnection _executeStatement:withError:]
  -[ML3DatabaseConnection _ensureConnectionIsOpen]
  -[ML3DatabaseConnection _distrustQueriesDuringBlock:]
  -[ML3DatabaseConnection isOpen]
  -[ML3DatabaseConnection _logCurrentError]
  -[ML3DatabaseConnection _logCurrentErrorWhilePerformingStatementOperation:statement:]
  -[ML3DatabaseConnection initWithDatabasePath:]
  -[ML3DatabaseConnection _createDatabaseDirectoryIfNonexistent]
  -[ML3DatabaseConnection setAutomaticCheckpointingEnabled:]
  -[ML3DatabaseConnection setPrivacyContext:]
  -[ML3DatabaseConnection _internalExecuteUpdate:withParameters:error:]
  -[ML3DatabaseConnection schemaAddColumnDefinition:toTable:]
  -[ML3DatabaseConnection setJournalingMode:]
  -[ML3DatabaseConnection openBlobInTable:column:row:readOnly:]
  -[ML3DatabaseConnection isEqual:]
  -[ML3DatabaseConnection flush]
  -[ML3DatabaseConnection _setAlreadyAttemptedCorruptionRecovery:]
  -[ML3DatabaseConnection schemaInsertColumnDefinitions:intoTable:atIndex:]
  -[ML3DatabaseConnection deleteDatabase]
  -[ML3DatabaseConnection init]
  -[ML3DatabaseConnection databasePathExists]
  -[ML3DatabaseConnection checkpointDatabase]
  -[ML3DatabaseConnection sqliteError]
  -[ML3DatabaseConnection _enumerateTableColumnNamesAndDefinitionsFromTable:usingBlock:]
  -[ML3DatabaseConnection transactionLevel]


ML3Account : ML3Entity
  // class methods
  +[ML3Account databaseTable]
  +[ML3Account allProperties]
  +[ML3Account initialize]
  +[ML3Account defaultOrderingTerms]
  +[ML3Account predisambiguatedProperties]


ML3DatabaseDistantConnection : ML3DatabaseConnection
 @property  <ML3DatabaseDistantConnectionDelegate> *distantDelegate

  // instance methods
  -[ML3DatabaseDistantConnection isReadOnly]
  -[ML3DatabaseDistantConnection setReadOnly:]
  -[ML3DatabaseDistantConnection _sqliteHandle]
  -[ML3DatabaseDistantConnection registerFunctionName:argumentCount:functionPointer:userData:]
  -[ML3DatabaseDistantConnection registerModule:]
  -[ML3DatabaseDistantConnection _openWithFlags:]
  -[ML3DatabaseDistantConnection _internalExecuteQuery:withParameters:limitProperty:limitValue:]
  -[ML3DatabaseDistantConnection dealloc]
  -[ML3DatabaseDistantConnection close]
  -[ML3DatabaseDistantConnection .cxx_destruct]
  -[ML3DatabaseDistantConnection _internalBeginTransactionWithBehaviorType:]
  -[ML3DatabaseDistantConnection shouldCacheStatements]
  -[ML3DatabaseDistantConnection _serviceTerminatedTransactionNotification:]
  -[ML3DatabaseDistantConnection currentTransactionID]
  -[ML3DatabaseDistantConnection _internalEndTransactionAndCommit:]
  -[ML3DatabaseDistantConnection _internalBeginTransactionWithBehaviorType:isRetry:]
  -[ML3DatabaseDistantConnection distantDelegate]
  -[ML3DatabaseDistantConnection registerFunctionName:argumentCount:block:]
  -[ML3DatabaseDistantConnection isOpen]
  -[ML3DatabaseDistantConnection initWithDatabasePath:]
  -[ML3DatabaseDistantConnection _internalExecuteUpdate:withParameters:error:]
  -[ML3DatabaseDistantConnection openBlobInTable:column:row:readOnly:]
  -[ML3DatabaseDistantConnection setDistantDelegate:]
  -[ML3DatabaseDistantConnection checkpointDatabase]


ML3DatabaseDistantResult : ML3DatabaseResult
 @property  ML3DatabaseDistantConnection *distantConnection
 @property  NSString *sql
 @property  NSArray *parameters

  // instance methods
  -[ML3DatabaseDistantResult sql]
  -[ML3DatabaseDistantResult parameters]
  -[ML3DatabaseDistantResult initWithStatement:]
  -[ML3DatabaseDistantResult initWithDistantConnection:sql:parameters:]
  -[ML3DatabaseDistantResult columnNameIndexMap]
  -[ML3DatabaseDistantResult distantConnection]
  -[ML3DatabaseDistantResult .cxx_destruct]
  -[ML3DatabaseDistantResult enumerateRowsWithBlock:]
  -[ML3DatabaseDistantResult _remoteEnumerateRowsWithBlock:]
  -[ML3DatabaseDistantResult _localEnumerateRowsWithBlock:]
  -[ML3DatabaseDistantResult _fetchRowsIfEmpty]
  -[ML3DatabaseDistantResult init]
  -[ML3DatabaseDistantResult indexForColumnName:]


ML3ContainerItemTable : ML3DatabaseTable
  // instance methods
  -[ML3ContainerItemTable columns]
  -[ML3ContainerItemTable .cxx_destruct]
  -[ML3ContainerItemTable name]


MIPArtist : PBCodable <NSCopying>
 @property  BOOL hasStoreId
 @property  long long storeId
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasSortName
 @property  NSString *sortName
 @property  BOOL hasArtworkId
 @property  NSString *artworkId
 @property  BOOL hasPersistentId
 @property  long long persistentId
 @property  BOOL hasCloudUniversalLibraryId
 @property  NSString *cloudUniversalLibraryId

  // instance methods
  -[MIPArtist hasName]
  -[MIPArtist copyTo:]
  -[MIPArtist .cxx_destruct]
  -[MIPArtist mergeFrom:]
  -[MIPArtist dictionaryRepresentation]
  -[MIPArtist setName:]
  -[MIPArtist copyWithZone:]
  -[MIPArtist name]
  -[MIPArtist readFrom:]
  -[MIPArtist writeTo:]
  -[MIPArtist isEqual:]
  -[MIPArtist hasCloudUniversalLibraryId]
  -[MIPArtist hasStoreId]
  -[MIPArtist cloudUniversalLibraryId]
  -[MIPArtist storeId]
  -[MIPArtist sortName]
  -[MIPArtist setStoreId:]
  -[MIPArtist persistentId]
  -[MIPArtist setHasStoreId:]
  -[MIPArtist setPersistentId:]
  -[MIPArtist setHasPersistentId:]
  -[MIPArtist hasPersistentId]
  -[MIPArtist hasSortName]
  -[MIPArtist setSortName:]
  -[MIPArtist hasArtworkId]
  -[MIPArtist artworkId]
  -[MIPArtist setArtworkId:]
  -[MIPArtist setCloudUniversalLibraryId:]


ML3SubscriptionImportOperation : ML3DAAPImportOperation
  // instance methods
  -[ML3SubscriptionImportOperation main]
  -[ML3SubscriptionImportOperation importSource]
  -[ML3SubscriptionImportOperation importItemFromDAAPElement:]
  -[ML3SubscriptionImportOperation containerImportItemFromDAAPElement:withTrackIds:trackPersonIdentifiers:]
  -[ML3SubscriptionImportOperation updateImportProgress:]
  -[ML3SubscriptionImportOperation _performDAAPImportWithTransaction:]


MLException : NSException
  // instance methods
  -[MLException raise]


ML3StatementAccumulator : NSObject
 @property  unsigned long statementThreshold
 @property  NSMutableArray *statementQueue
 @property  NSString *databasePath
 @property  ML3DatabaseConnection *connection
 @property  NSUUID *existingTransactionIdentifier
 @property  unsigned long priorityLevel

  // instance methods
  -[ML3StatementAccumulator databasePath]
  -[ML3StatementAccumulator initWithConnection:]
  -[ML3StatementAccumulator dealloc]
  -[ML3StatementAccumulator .cxx_destruct]
  -[ML3StatementAccumulator connection]
  -[ML3StatementAccumulator init]
  -[ML3StatementAccumulator setPriorityLevel:]
  -[ML3StatementAccumulator priorityLevel]
  -[ML3StatementAccumulator enqueueStatement:]
  -[ML3StatementAccumulator flushAndWait:]
  -[ML3StatementAccumulator _onQueueFlushAndWait:]
  -[ML3StatementAccumulator statementThreshold]
  -[ML3StatementAccumulator setStatementThreshold:]
  -[ML3StatementAccumulator statementQueue]
  -[ML3StatementAccumulator existingTransactionIdentifier]
  -[ML3StatementAccumulator setExistingTransactionIdentifier:]


_ML3BaseMusicLibraryResourcesManager : NSObject <ML3MusicLibraryResourcesProviding, NSSecureCoding>
 @property  NSString *libraryContainerIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_ML3BaseMusicLibraryResourcesManager supportsSecureCoding]

  // instance methods
  -[_ML3BaseMusicLibraryResourcesManager libraryContainerRelativePath:]
  -[_ML3BaseMusicLibraryResourcesManager libraryContainerIdentifier]
  -[_ML3BaseMusicLibraryResourcesManager pathForResourceFileOrFolder:basePath:relativeToBase:createParentFolderIfNecessary:]
  -[_ML3BaseMusicLibraryResourcesManager pathForResourceFileOrFolder:]
  -[_ML3BaseMusicLibraryResourcesManager _libraryContainerPathForDSID:]
  -[_ML3BaseMusicLibraryResourcesManager initWithLibraryContainerIdentifier:]
  -[_ML3BaseMusicLibraryResourcesManager libraryContainerPath]
  -[_ML3BaseMusicLibraryResourcesManager libraryContainerPathByAppendingPathComponent:]
  -[_ML3BaseMusicLibraryResourcesManager pathForBaseLocationPath:]
  -[_ML3BaseMusicLibraryResourcesManager _pathForResourceFileOrFolder:basePath:relativeToBase:isFolder:]
  -[_ML3BaseMusicLibraryResourcesManager _controlDirectoryPathWithBasePath:]
  -[_ML3BaseMusicLibraryResourcesManager _mediaResourceRequiresLibraryContainerAccess:]
  -[_ML3BaseMusicLibraryResourcesManager initWithAccountInfo:]
  -[_ML3BaseMusicLibraryResourcesManager encodeWithCoder:]
  -[_ML3BaseMusicLibraryResourcesManager .cxx_destruct]
  -[_ML3BaseMusicLibraryResourcesManager init]
  -[_ML3BaseMusicLibraryResourcesManager initWithCoder:]


_ML3MultiUserMusicLibraryResourcesManager : _ML3BaseMusicLibraryResourcesManager <MLMediaLibraryAccountChangeObserver>
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  <MLMediaLibraryResourcesServiceProtocol> *libraryResourcesServices
 @property  NSString *cachedLibraryContainerPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_ML3MultiUserMusicLibraryResourcesManager libraryContainerPath]
  -[_ML3MultiUserMusicLibraryResourcesManager performDatabasePathChange:completion:]
  -[_ML3MultiUserMusicLibraryResourcesManager setSerialQueue:]
  -[_ML3MultiUserMusicLibraryResourcesManager serialQueue]
  -[_ML3MultiUserMusicLibraryResourcesManager cachedLibraryContainerPath]
  -[_ML3MultiUserMusicLibraryResourcesManager emergencyDisconnectWithCompletion:]
  -[_ML3MultiUserMusicLibraryResourcesManager setCachedLibraryContainerPath:]
  -[_ML3MultiUserMusicLibraryResourcesManager .cxx_destruct]
  -[_ML3MultiUserMusicLibraryResourcesManager libraryResourcesServices]
  -[_ML3MultiUserMusicLibraryResourcesManager terminateForFailureToPerformDatabasePathChange]
  -[_ML3MultiUserMusicLibraryResourcesManager setLibraryResourcesServices:]
  -[_ML3MultiUserMusicLibraryResourcesManager initWithLibraryResourcesService:]


MIPMediaItem : PBCodable <NSCopying>
 @property  BOOL hasMediaType
 @property  int mediaType
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasSortTitle
 @property  NSString *sortTitle
 @property  BOOL hasReleaseDateTime
 @property  long long releaseDateTime
 @property  BOOL hasCreationDateTime
 @property  long long creationDateTime
 @property  BOOL hasModificationDateTime
 @property  long long modificationDateTime
 @property  BOOL hasFileSize
 @property  long long fileSize
 @property  BOOL hasDuration
 @property  long long duration
 @property  BOOL hasContentRating
 @property  int contentRating
 @property  BOOL hasExplicitContent
 @property  BOOL explicitContent
 @property  BOOL hasShortDescription
 @property  NSString *shortDescription
 @property  BOOL hasLongDescription
 @property  NSString *longDescription
 @property  BOOL hasCopyright
 @property  NSString *copyright
 @property  BOOL hasArtworkId
 @property  NSString *artworkId
 @property  BOOL hasYear
 @property  int year
 @property  BOOL hasContentRatingLevel
 @property  int contentRatingLevel
 @property  BOOL hasComment
 @property  NSString *comment
 @property  BOOL hasFileKind
 @property  int fileKind
 @property  BOOL hasFamilyAccountId
 @property  long long familyAccountId
 @property  BOOL hasDrmVersionsCode
 @property  int drmVersionsCode
 @property  BOOL hasDrmPlatformIdCode
 @property  long long drmPlatformIdCode
 @property  BOOL hasDrmKey1IdCode
 @property  long long drmKey1IdCode
 @property  BOOL hasDrmKey2IdCode
 @property  long long drmKey2IdCode
 @property  BOOL hasChapterMetadataUrl
 @property  NSString *chapterMetadataUrl
 @property  BOOL hasStoreAssetFlavor
 @property  NSString *storeAssetFlavor
 @property  BOOL hasExtrasUrl
 @property  NSString *extrasUrl
 @property  BOOL hasPurchaseDateTime
 @property  long long purchaseDateTime
 @property  BOOL hasCloudStatus
 @property  int cloudStatus
 @property  BOOL hasPlayCount
 @property  int playCount
 @property  BOOL hasPlayCountDelta
 @property  int playCountDelta
 @property  BOOL hasLastPlayedDateTime
 @property  long long lastPlayedDateTime
 @property  BOOL hasSkipCount
 @property  int skipCount
 @property  BOOL hasSkipCountDelta
 @property  int skipCountDelta
 @property  BOOL hasLastSkippedDateTime
 @property  long long lastSkippedDateTime
 @property  BOOL hasRememberBookmark
 @property  BOOL rememberBookmark
 @property  BOOL hasBookmarkTimeMilliseconds
 @property  long long bookmarkTimeMilliseconds
 @property  BOOL hasHidden
 @property  BOOL hidden
 @property  BOOL hasStorePlaylistId
 @property  long long storePlaylistId
 @property  BOOL hasHasLocalAsset
 @property  BOOL hasLocalAsset
 @property  BOOL hasGrouping
 @property  NSString *grouping
 @property  BOOL hasLikedState
 @property  int likedState
 @property  BOOL hasNeedsReporting
 @property  BOOL needsReporting
 @property  BOOL hasLikedStateChanged
 @property  BOOL likedStateChanged
 @property  BOOL hasIsInUsersLibrary
 @property  BOOL isInUsersLibrary
 @property  BOOL hasCloudAssetAvailable
 @property  BOOL cloudAssetAvailable
 @property  BOOL hasStoreProtectionType
 @property  int storeProtectionType
 @property  BOOL hasUserDisabled
 @property  BOOL userDisabled
 @property  BOOL hasCloudPlaybackEndpointType
 @property  int cloudPlaybackEndpointType
 @property  BOOL hasPlaybackEndpointType
 @property  int playbackEndpointType
 @property  BOOL hasCloudMatchedStatus
 @property  int cloudMatchedStatus
 @property  BOOL hasInUsersCloudLibrary
 @property  BOOL inUsersCloudLibrary
 @property  BOOL hasSecondaryArtworkSourceType
 @property  int secondaryArtworkSourceType
 @property  BOOL hasSecondaryArtworkId
 @property  NSString *secondaryArtworkId
 @property  BOOL hasHasChapterData
 @property  BOOL hasChapterData
 @property  BOOL hasFlattenedChapterData
 @property  NSData *flattenedChapterData
 @property  BOOL hasIsPreorder
 @property  BOOL isPreorder
 @property  BOOL hasLikedStateChangeDate
 @property  long long likedStateChangeDate
 @property  NSMutableArray *libraryIdentifiers
 @property  BOOL hasStoreId
 @property  long long storeId
 @property  BOOL hasStorefrontId
 @property  long long storefrontId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasPurchaseHistoryId
 @property  long long purchaseHistoryId
 @property  BOOL hasPurchaseHistoryToken
 @property  int purchaseHistoryToken
 @property  BOOL hasPurchaseHistoryRedownloadParams
 @property  NSString *purchaseHistoryRedownloadParams
 @property  BOOL hasSagaId
 @property  long long sagaId
 @property  BOOL hasSagaRedownloadParams
 @property  NSString *sagaRedownloadParams
 @property  BOOL hasStoreXID
 @property  NSString *storeXID
 @property  BOOL hasSubscriptionStoreItemId
 @property  long long subscriptionStoreItemId
 @property  BOOL hasCloudUniversalLibraryId
 @property  NSString *cloudUniversalLibraryId
 @property  BOOL hasReportingStoreItemId
 @property  long long reportingStoreItemId
 @property  BOOL hasAssetStoreItemId
 @property  long long assetStoreItemId
 @property  BOOL hasSong
 @property  MIPSong *song
 @property  BOOL hasMovie
 @property  MIPMovie *movie
 @property  BOOL hasTvShow
 @property  MIPTVShow *tvShow
 @property  BOOL hasPodcast
 @property  MIPPodcast *podcast
 @property  BOOL hasAudiobook
 @property  MIPAudiobook *audiobook

  // class methods
  +[MIPMediaItem libraryIdentifiersType]

  // instance methods
  -[MIPMediaItem setPlayCount:]
  -[MIPMediaItem setMediaType:]
  -[MIPMediaItem hasMediaType]
  -[MIPMediaItem setDuration:]
  -[MIPMediaItem fileSize]
  -[MIPMediaItem setYear:]
  -[MIPMediaItem year]
  -[MIPMediaItem setFileSize:]
  -[MIPMediaItem hasDuration]
  -[MIPMediaItem copyTo:]
  -[MIPMediaItem comment]
  -[MIPMediaItem hasPlayCount]
  -[MIPMediaItem mediaType]
  -[MIPMediaItem .cxx_destruct]
  -[MIPMediaItem hidden]
  -[MIPMediaItem setHasHidden:]
  -[MIPMediaItem setAccountId:]
  -[MIPMediaItem setHasMediaType:]
  -[MIPMediaItem duration]
  -[MIPMediaItem mergeFrom:]
  -[MIPMediaItem hasTitle]
  -[MIPMediaItem title]
  -[MIPMediaItem hasHidden]
  -[MIPMediaItem isPreorder]
  -[MIPMediaItem shortDescription]
  -[MIPMediaItem dictionaryRepresentation]
  -[MIPMediaItem copyWithZone:]
  -[MIPMediaItem accountId]
  -[MIPMediaItem grouping]
  -[MIPMediaItem setHidden:]
  -[MIPMediaItem playCount]
  -[MIPMediaItem readFrom:]
  -[MIPMediaItem longDescription]
  -[MIPMediaItem setLongDescription:]
  -[MIPMediaItem setGrouping:]
  -[MIPMediaItem setHasDuration:]
  -[MIPMediaItem writeTo:]
  -[MIPMediaItem setTitle:]
  -[MIPMediaItem isEqual:]
  -[MIPMediaItem setHasPlayCount:]
  -[MIPMediaItem setIsPreorder:]
  -[MIPMediaItem hasComment]
  -[MIPMediaItem setComment:]
  -[MIPMediaItem hasYear]
  -[MIPMediaItem setHasYear:]
  -[MIPMediaItem mediaTypeAsString:]
  -[MIPMediaItem StringAsMediaType:]
  -[MIPMediaItem contentRating]
  -[MIPMediaItem setContentRating:]
  -[MIPMediaItem hasContentRating]
  -[MIPMediaItem setHasContentRating:]
  -[MIPMediaItem setCopyright:]
  -[MIPMediaItem copyright]
  -[MIPMediaItem explicitContent]
  -[MIPMediaItem setExplicitContent:]
  -[MIPMediaItem setUserDisabled:]
  -[MIPMediaItem setHasUserDisabled:]
  -[MIPMediaItem hasUserDisabled]
  -[MIPMediaItem userDisabled]
  -[MIPMediaItem hasCloudUniversalLibraryId]
  -[MIPMediaItem sagaId]
  -[MIPMediaItem libraryIdentifiers]
  -[MIPMediaItem libraryIdentifiersCount]
  -[MIPMediaItem setPodcast:]
  -[MIPMediaItem hasSagaId]
  -[MIPMediaItem hasStoreId]
  -[MIPMediaItem cloudUniversalLibraryId]
  -[MIPMediaItem setCloudStatus:]
  -[MIPMediaItem storeId]
  -[MIPMediaItem setMovie:]
  -[MIPMediaItem setHasExplicitContent:]
  -[MIPMediaItem likedState]
  -[MIPMediaItem setLikedState:]
  -[MIPMediaItem skipCount]
  -[MIPMediaItem cloudStatus]
  -[MIPMediaItem song]
  -[MIPMediaItem setSong:]
  -[MIPMediaItem setSkipCount:]
  -[MIPMediaItem hasExplicitContent]
  -[MIPMediaItem movie]
  -[MIPMediaItem podcast]
  -[MIPMediaItem clearLibraryIdentifiers]
  -[MIPMediaItem setStoreId:]
  -[MIPMediaItem setShortDescription:]
  -[MIPMediaItem setSortTitle:]
  -[MIPMediaItem sortTitle]
  -[MIPMediaItem tvShow]
  -[MIPMediaItem audiobook]
  -[MIPMediaItem setLibraryIdentifiers:]
  -[MIPMediaItem hasStorefrontId]
  -[MIPMediaItem storefrontId]
  -[MIPMediaItem setStorefrontId:]
  -[MIPMediaItem setHasStorefrontId:]
  -[MIPMediaItem setHasStoreId:]
  -[MIPMediaItem setCreationDateTime:]
  -[MIPMediaItem setHasCreationDateTime:]
  -[MIPMediaItem hasCreationDateTime]
  -[MIPMediaItem setModificationDateTime:]
  -[MIPMediaItem setHasModificationDateTime:]
  -[MIPMediaItem hasModificationDateTime]
  -[MIPMediaItem setLastPlayedDateTime:]
  -[MIPMediaItem setHasLastPlayedDateTime:]
  -[MIPMediaItem hasLastPlayedDateTime]
  -[MIPMediaItem hasArtworkId]
  -[MIPMediaItem setHasLikedState:]
  -[MIPMediaItem hasLikedState]
  -[MIPMediaItem setSecondaryArtworkSourceType:]
  -[MIPMediaItem setHasSecondaryArtworkSourceType:]
  -[MIPMediaItem hasSecondaryArtworkSourceType]
  -[MIPMediaItem hasSecondaryArtworkId]
  -[MIPMediaItem creationDateTime]
  -[MIPMediaItem modificationDateTime]
  -[MIPMediaItem lastPlayedDateTime]
  -[MIPMediaItem artworkId]
  -[MIPMediaItem setArtworkId:]
  -[MIPMediaItem setCloudUniversalLibraryId:]
  -[MIPMediaItem secondaryArtworkSourceType]
  -[MIPMediaItem secondaryArtworkId]
  -[MIPMediaItem setSecondaryArtworkId:]
  -[MIPMediaItem setHasChapterData:]
  -[MIPMediaItem setHasHasChapterData:]
  -[MIPMediaItem hasHasChapterData]
  -[MIPMediaItem hasFlattenedChapterData]
  -[MIPMediaItem hasChapterData]
  -[MIPMediaItem flattenedChapterData]
  -[MIPMediaItem setFlattenedChapterData:]
  -[MIPMediaItem setHasAccountId:]
  -[MIPMediaItem hasAccountId]
  -[MIPMediaItem setSagaId:]
  -[MIPMediaItem setHasSagaId:]
  -[MIPMediaItem setPurchaseHistoryId:]
  -[MIPMediaItem setHasPurchaseHistoryId:]
  -[MIPMediaItem hasPurchaseHistoryId]
  -[MIPMediaItem addLibraryIdentifiers:]
  -[MIPMediaItem libraryIdentifiersAtIndex:]
  -[MIPMediaItem purchaseHistoryId]
  -[MIPMediaItem hasSortTitle]
  -[MIPMediaItem setReleaseDateTime:]
  -[MIPMediaItem setHasReleaseDateTime:]
  -[MIPMediaItem hasReleaseDateTime]
  -[MIPMediaItem setHasFileSize:]
  -[MIPMediaItem hasFileSize]
  -[MIPMediaItem hasShortDescription]
  -[MIPMediaItem hasLongDescription]
  -[MIPMediaItem hasCopyright]
  -[MIPMediaItem setContentRatingLevel:]
  -[MIPMediaItem setHasContentRatingLevel:]
  -[MIPMediaItem hasContentRatingLevel]
  -[MIPMediaItem setFileKind:]
  -[MIPMediaItem setHasFileKind:]
  -[MIPMediaItem hasFileKind]
  -[MIPMediaItem setFamilyAccountId:]
  -[MIPMediaItem setHasFamilyAccountId:]
  -[MIPMediaItem hasFamilyAccountId]
  -[MIPMediaItem setDrmVersionsCode:]
  -[MIPMediaItem setHasDrmVersionsCode:]
  -[MIPMediaItem hasDrmVersionsCode]
  -[MIPMediaItem setDrmPlatformIdCode:]
  -[MIPMediaItem setHasDrmPlatformIdCode:]
  -[MIPMediaItem hasDrmPlatformIdCode]
  -[MIPMediaItem setDrmKey1IdCode:]
  -[MIPMediaItem setHasDrmKey1IdCode:]
  -[MIPMediaItem hasDrmKey1IdCode]
  -[MIPMediaItem setDrmKey2IdCode:]
  -[MIPMediaItem setHasDrmKey2IdCode:]
  -[MIPMediaItem hasDrmKey2IdCode]
  -[MIPMediaItem hasChapterMetadataUrl]
  -[MIPMediaItem hasStoreAssetFlavor]
  -[MIPMediaItem hasExtrasUrl]
  -[MIPMediaItem setPurchaseDateTime:]
  -[MIPMediaItem setHasPurchaseDateTime:]
  -[MIPMediaItem hasPurchaseDateTime]
  -[MIPMediaItem setHasCloudStatus:]
  -[MIPMediaItem hasCloudStatus]
  -[MIPMediaItem setPlayCountDelta:]
  -[MIPMediaItem setHasPlayCountDelta:]
  -[MIPMediaItem hasPlayCountDelta]
  -[MIPMediaItem setHasSkipCount:]
  -[MIPMediaItem hasSkipCount]
  -[MIPMediaItem setSkipCountDelta:]
  -[MIPMediaItem setHasSkipCountDelta:]
  -[MIPMediaItem hasSkipCountDelta]
  -[MIPMediaItem setLastSkippedDateTime:]
  -[MIPMediaItem setHasLastSkippedDateTime:]
  -[MIPMediaItem hasLastSkippedDateTime]
  -[MIPMediaItem setRememberBookmark:]
  -[MIPMediaItem setHasRememberBookmark:]
  -[MIPMediaItem hasRememberBookmark]
  -[MIPMediaItem setBookmarkTimeMilliseconds:]
  -[MIPMediaItem setHasBookmarkTimeMilliseconds:]
  -[MIPMediaItem hasBookmarkTimeMilliseconds]
  -[MIPMediaItem setStorePlaylistId:]
  -[MIPMediaItem setHasStorePlaylistId:]
  -[MIPMediaItem hasStorePlaylistId]
  -[MIPMediaItem setHasLocalAsset:]
  -[MIPMediaItem setHasHasLocalAsset:]
  -[MIPMediaItem hasHasLocalAsset]
  -[MIPMediaItem hasGrouping]
  -[MIPMediaItem setNeedsReporting:]
  -[MIPMediaItem setHasNeedsReporting:]
  -[MIPMediaItem hasNeedsReporting]
  -[MIPMediaItem setLikedStateChanged:]
  -[MIPMediaItem setHasLikedStateChanged:]
  -[MIPMediaItem hasLikedStateChanged]
  -[MIPMediaItem setIsInUsersLibrary:]
  -[MIPMediaItem setHasIsInUsersLibrary:]
  -[MIPMediaItem hasIsInUsersLibrary]
  -[MIPMediaItem setCloudAssetAvailable:]
  -[MIPMediaItem setHasCloudAssetAvailable:]
  -[MIPMediaItem hasCloudAssetAvailable]
  -[MIPMediaItem setStoreProtectionType:]
  -[MIPMediaItem setHasStoreProtectionType:]
  -[MIPMediaItem hasStoreProtectionType]
  -[MIPMediaItem setCloudPlaybackEndpointType:]
  -[MIPMediaItem setHasCloudPlaybackEndpointType:]
  -[MIPMediaItem hasCloudPlaybackEndpointType]
  -[MIPMediaItem setPlaybackEndpointType:]
  -[MIPMediaItem setHasPlaybackEndpointType:]
  -[MIPMediaItem hasPlaybackEndpointType]
  -[MIPMediaItem setCloudMatchedStatus:]
  -[MIPMediaItem setHasCloudMatchedStatus:]
  -[MIPMediaItem hasCloudMatchedStatus]
  -[MIPMediaItem setInUsersCloudLibrary:]
  -[MIPMediaItem setHasInUsersCloudLibrary:]
  -[MIPMediaItem hasInUsersCloudLibrary]
  -[MIPMediaItem setHasIsPreorder:]
  -[MIPMediaItem hasIsPreorder]
  -[MIPMediaItem setLikedStateChangeDate:]
  -[MIPMediaItem setHasLikedStateChangeDate:]
  -[MIPMediaItem hasLikedStateChangeDate]
  -[MIPMediaItem setPurchaseHistoryToken:]
  -[MIPMediaItem setHasPurchaseHistoryToken:]
  -[MIPMediaItem hasPurchaseHistoryToken]
  -[MIPMediaItem hasPurchaseHistoryRedownloadParams]
  -[MIPMediaItem hasSagaRedownloadParams]
  -[MIPMediaItem hasStoreXID]
  -[MIPMediaItem setSubscriptionStoreItemId:]
  -[MIPMediaItem setHasSubscriptionStoreItemId:]
  -[MIPMediaItem hasSubscriptionStoreItemId]
  -[MIPMediaItem setReportingStoreItemId:]
  -[MIPMediaItem setHasReportingStoreItemId:]
  -[MIPMediaItem hasReportingStoreItemId]
  -[MIPMediaItem setAssetStoreItemId:]
  -[MIPMediaItem setHasAssetStoreItemId:]
  -[MIPMediaItem hasAssetStoreItemId]
  -[MIPMediaItem hasSong]
  -[MIPMediaItem hasMovie]
  -[MIPMediaItem hasTvShow]
  -[MIPMediaItem hasPodcast]
  -[MIPMediaItem hasAudiobook]
  -[MIPMediaItem releaseDateTime]
  -[MIPMediaItem contentRatingLevel]
  -[MIPMediaItem fileKind]
  -[MIPMediaItem familyAccountId]
  -[MIPMediaItem drmVersionsCode]
  -[MIPMediaItem drmPlatformIdCode]
  -[MIPMediaItem drmKey1IdCode]
  -[MIPMediaItem drmKey2IdCode]
  -[MIPMediaItem chapterMetadataUrl]
  -[MIPMediaItem setChapterMetadataUrl:]
  -[MIPMediaItem storeAssetFlavor]
  -[MIPMediaItem setStoreAssetFlavor:]
  -[MIPMediaItem extrasUrl]
  -[MIPMediaItem setExtrasUrl:]
  -[MIPMediaItem purchaseDateTime]
  -[MIPMediaItem playCountDelta]
  -[MIPMediaItem skipCountDelta]
  -[MIPMediaItem lastSkippedDateTime]
  -[MIPMediaItem rememberBookmark]
  -[MIPMediaItem bookmarkTimeMilliseconds]
  -[MIPMediaItem storePlaylistId]
  -[MIPMediaItem hasLocalAsset]
  -[MIPMediaItem needsReporting]
  -[MIPMediaItem likedStateChanged]
  -[MIPMediaItem isInUsersLibrary]
  -[MIPMediaItem cloudAssetAvailable]
  -[MIPMediaItem storeProtectionType]
  -[MIPMediaItem cloudPlaybackEndpointType]
  -[MIPMediaItem playbackEndpointType]
  -[MIPMediaItem cloudMatchedStatus]
  -[MIPMediaItem inUsersCloudLibrary]
  -[MIPMediaItem likedStateChangeDate]
  -[MIPMediaItem purchaseHistoryToken]
  -[MIPMediaItem purchaseHistoryRedownloadParams]
  -[MIPMediaItem setPurchaseHistoryRedownloadParams:]
  -[MIPMediaItem sagaRedownloadParams]
  -[MIPMediaItem setSagaRedownloadParams:]
  -[MIPMediaItem storeXID]
  -[MIPMediaItem setStoreXID:]
  -[MIPMediaItem subscriptionStoreItemId]
  -[MIPMediaItem reportingStoreItemId]
  -[MIPMediaItem assetStoreItemId]
  -[MIPMediaItem setTvShow:]
  -[MIPMediaItem setAudiobook:]


ML3Artwork : NSObject
 @property  ML3MusicLibrary *musicLibrary
 @property  NSString *artworkToken
 @property  long long artworkType
 @property  long long sourceType
 @property  NSString *relativePath
 @property  NSDictionary *interestDictionary
 @property  NSURL *originalFileURL

  // instance methods
  -[ML3Artwork sourceType]
  -[ML3Artwork .cxx_destruct]
  -[ML3Artwork relativePath]
  -[ML3Artwork isEqual:]
  -[ML3Artwork artworkType]
  -[ML3Artwork setInterestDictionary:]
  -[ML3Artwork interestDictionary]
  -[ML3Artwork fileURLForEffect:]
  -[ML3Artwork fileURLForSize:]
  -[ML3Artwork initWithToken:artworkType:musicLibrary:]
  -[ML3Artwork musicLibrary]
  -[ML3Artwork originalFileURL]
  -[ML3Artwork initWithToken:relativePath:artworkType:musicLibrary:]
  -[ML3Artwork _onSerialQueue_faultInProperties]
  -[ML3Artwork _interestDictionaryFromInterestData:]
  -[ML3Artwork _interestDataFromInterestDictionary:]
  -[ML3Artwork artworkToken]


ML3DatabaseCachedRow : ML3DatabaseRow
  // instance methods
  -[ML3DatabaseCachedRow arrayRepresentation]
  -[ML3DatabaseCachedRow valueForColumnName:]
  -[ML3DatabaseCachedRow intForColumnName:]
  -[ML3DatabaseCachedRow dataForColumnIndex:]
  -[ML3DatabaseCachedRow initWithParentResult:]
  -[ML3DatabaseCachedRow int64ForColumnIndex:]
  -[ML3DatabaseCachedRow stringForColumnIndex:]
  -[ML3DatabaseCachedRow numberForColumnIndex:]
  -[ML3DatabaseCachedRow dataForColumnName:]
  -[ML3DatabaseCachedRow columnCount]
  -[ML3DatabaseCachedRow stringForColumnName:]
  -[ML3DatabaseCachedRow numberForColumnName:]
  -[ML3DatabaseCachedRow cStringForColumnIndex:]
  -[ML3DatabaseCachedRow intForColumnIndex:]
  -[ML3DatabaseCachedRow getBlobBytes:outLength:forColumnIndex:]
  -[ML3DatabaseCachedRow valueForColumnIndex:]
  -[ML3DatabaseCachedRow getBlobBytes:outLength:forColumnName:]
  -[ML3DatabaseCachedRow doubleForColumnName:]
  -[ML3DatabaseCachedRow int64ForColumnName:]
  -[ML3DatabaseCachedRow doubleForColumnIndex:]
  -[ML3DatabaseCachedRow cStringForColumnName:]
  -[ML3DatabaseCachedRow .cxx_destruct]
  -[ML3DatabaseCachedRow initWithArray:]
  -[ML3DatabaseCachedRow _numberOrZeroForColumnIndex:]
  -[ML3DatabaseCachedRow dictionaryRepresentation]


ML3ProtoSyncExportSession : ML3ExportSession
  // instance methods
  -[ML3ProtoSyncExportSession end]
  -[ML3ProtoSyncExportSession .cxx_destruct]
  -[ML3ProtoSyncExportSession begin:]
  -[ML3ProtoSyncExportSession exportTrackAdded:]
  -[ML3ProtoSyncExportSession exportTrackUpdated:]
  -[ML3ProtoSyncExportSession exportTrackDeleted:]
  -[ML3ProtoSyncExportSession exportPlaylistAdded:]
  -[ML3ProtoSyncExportSession exportPlaylistDeleted:]
  -[ML3ProtoSyncExportSession initWithLibrary:outputStream:syncType:]
  -[ML3ProtoSyncExportSession _writSyncPackageToStream:]


(InsignificantCharacterFiltering)
	// instance methods
	-[(InsignificantCharacterFiltering) copyWithoutInsignificantPrefixAndCharacters]
	-[(InsignificantCharacterFiltering) _rangeWithoutInsignificantPrefix:andCharacters:]
	-[(InsignificantCharacterFiltering) _copyWithoutInsignificantPrefix:andCharacters:]
	-[(InsignificantCharacterFiltering) copyWithoutInsignificantCharacters]
	-[(InsignificantCharacterFiltering) MLSortString]
	-[(InsignificantCharacterFiltering) MLSortStringWithPrefix]
	-[(InsignificantCharacterFiltering) sanitizedString]
	-[(InsignificantCharacterFiltering) ml_matchesValue:usingComparison:]
	-[(InsignificantCharacterFiltering) ml_bindToSQLiteStatement:atPosition:]
	-[(InsignificantCharacterFiltering) ml_stringValueForSQL]

NSFileHandle(ML3Additions)
	// instance methods
	-[NSFileHandle(ML3Additions) ml_lock]
	-[NSFileHandle(ML3Additions) ml_unlock]

(ML3Comparing)
	// instance methods
	-[(ML3Comparing) ml_matchesValue:usingComparison:]
	-[(ML3Comparing) ml_bindToSQLiteStatement:atPosition:]
	-[(ML3Comparing) ml_stringValueForSQL]

NSNumber(ML3Comparing)
	// instance methods
	-[NSNumber(ML3Comparing) ml_matchesValue:usingComparison:]
	-[NSNumber(ML3Comparing) ml_bindToSQLiteStatement:atPosition:]
	-[NSNumber(ML3Comparing) ml_stringValueForSQL]

<DEREK BUG Categories!>(ML3ArtworkAdditions)
	// instance methods
	-[<DEREK BUG Categories!>(ML3ArtworkAdditions) mergeWithDictionary:]

NSError(MusicLibraryAdditions)
	// class methods
	+[NSError(MusicLibraryAdditions) ml_errorWithCode:]
	+[NSError(MusicLibraryAdditions) ml_errorWithCode:description:]

NSValue(ML3NameOrderAdditions)
	// class methods
	+[NSValue(ML3NameOrderAdditions) valueWithML3NameOrder:]

	// instance methods
	-[NSValue(ML3NameOrderAdditions) ML3NameOrderValue]

(ML3DatabaseDatatypesBridge)
	// instance methods
	-[(ML3DatabaseDatatypesBridge) ml_bindToSQLiteStatement:atPosition:]
	-[(ML3DatabaseDatatypesBridge) ml_stringValueForSQL]

(ML3DatabaseDatatypesBridge)
	// instance methods
	-[(ML3DatabaseDatatypesBridge) ml_bindToSQLiteStatement:atPosition:]
	-[(ML3DatabaseDatatypesBridge) ml_stringValueForSQL]

(ML3DatabaseDatatypesBridge)
	// instance methods
	-[(ML3DatabaseDatatypesBridge) ml_bindToSQLiteStatement:atPosition:]
	-[(ML3DatabaseDatatypesBridge) ml_stringValueForSQL]

01 00 0800 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBag 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetImageGenerator 
01 00 0b00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0a00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPSearchMatcher 
01 00 0200 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableIndex 
01 00 0200 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableItem 
01 00 0200 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableItemAttributeSet 
01 00 0500 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVArtworkService 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVArtworkServiceConversionRequest 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVArtworkServiceResizeRequest 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVAsyncOperation 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVAutoBugCapture 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVDistributedNotificationObserver 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVLRUDictionary 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVStreamWriter 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVSystemDialog 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVSystemDialogOptions 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVTaskAssertion 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVXPCTransaction 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSEnumerator 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1300 /System/Library/PrivateFrameworks/PrivacyAccounting.framework/PrivacyAccounting: PAAccessLogger 
01 00 1300 /System/Library/PrivateFrameworks/PrivacyAccounting.framework/PrivacyAccounting: PAApplication 
01 00 1300 /System/Library/PrivateFrameworks/PrivacyAccounting.framework/PrivacyAccounting: PATCCAccess 
01 00 1100 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1100 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBDataReader 
01 00 0100 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
