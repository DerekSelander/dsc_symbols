|| __DATA.__objc_data _OBJC_CLASS_$_PFLBackgroundRunner
|| __TEXT.__text _trainMLPModelForDES
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ CoreEmoji: _CEMStringContainsEmoji
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFDataCreateMutableCopy
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetMutableBytePtr
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberGetType
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFAllocatorDefault
__ CoreML: _OBJC_CLASS_$_MLBackgroundTask
__ CoreML: _OBJC_METACLASS_$_MLBackgroundTask
__ CoreNLP: _NLLanguageIdentifierGetTopLanguage
__ CoreNLP: _NLModelContainerCopySplitContainerData
__ CoreNLP: _NLModelContainerCreateWithContentsOfURL
__ CoreNLP: _NLModelContainerWriteToURL
__ CoreNLP: _NLStringEmbeddingCreateWithOptions
__ CoreNLP: _NLStringEmbeddingFillWordVectors
__ CoreNLP: _NLStringEmbeddingGetDimension
__ CoreNLP: _kNLStringEmbeddingModelLocale
__ CoreNLP: _kNLStringEmbeddingModelType
__ CoreNLP: _kNLStringEmbeddingModelTypeContextualWordEmbedding
__ DistributedEvaluation: _OBJC_CLASS_$_DESPFLEncryptor
__ DistributedEvaluation: _OBJC_CLASS_$_DESPFLNoisable
__ DistributedEvaluation: _OBJC_CLASS_$_DESRecipeEvaluationSession
__ DuetActivityScheduler: _OBJC_CLASS_$__DASActivity
__ DuetActivityScheduler: __DASActivityDurationModerate
__ DuetActivityScheduler: __DASExtensionLaunchReasonMLCompute
__ DuetActivityScheduler: __DASSchedulingPriorityBackground
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Intents: _INTypedInteractionWithInteraction
__ Intents: _OBJC_CLASS_$_INSendMessageIntent
__ LanguageModeling: _LMCreateMontrealIDsFromLMTokenIDSequence
__ LanguageModeling: _LMStreamTokenizerCreate
__ LanguageModeling: _LMStreamTokenizerPushBytes
__ Lexicon: _LXEntryCopyString
__ Lexicon: _LXEntryGetTokenID
__ Lexicon: _LXLexiconCreate
__ Lexicon: _LXLexiconEnumerateEntriesForString
__ Lexicon: _kLXLexiconLocaleKey
__ MailSupport: _OBJC_CLASS_$_MSSendMailIntent
__ Montreal: _MLPModelSampleDataBatchOfSequencesKey
__ Montreal: _MLPModelSampleDataFeatureValuesKey
__ Montreal: _MLPModelSampleDataLabelsKey
__ Montreal: _MLPModelSampleDataSequenceLabelsKey
__ Montreal: _MLPModelSampleDataSequenceValuesKey
__ Montreal: _MLPModelTrainerBatchSizeKey
__ Montreal: _MLPModelTrainerComputeLossOnEvaluationKey
__ Montreal: _MLPModelTrainerCreateWithModel
__ Montreal: _MLPModelTrainerEvaluateModel
__ Montreal: _MLPModelTrainerGradientClipMaximum
__ Montreal: _MLPModelTrainerGradientClipMinimum
__ Montreal: _MLPModelTrainerLearningRateKey
__ Montreal: _MLPModelTrainerLossValueKey
__ Montreal: _MLPModelTrainerNumberOfEpochsKey
__ Montreal: _MLPModelTrainerTrainModel
__ Montreal: _MRLNeuralNetworkEvaluateInputDataKey
__ Montreal: _MRLNeuralNetworkEvaluateOutputLabelKey
__ PrivateFederatedLearning: _OBJC_CLASS_$_PFLDiagnosticReporting
__ PrivateFederatedLearning: _PFLPrivatizeCustomNorm
__ PrivateFederatedLearning: _kPFLPrivatizeTaskIdentifierQuickTypeCNNTextClassification
__ PrivateFederatedLearning: _kPFLPrivatizeTaskIdentifierQuickTypeLM
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt13runtime_errorC1EPKc
__ libc++.1.dylib: __ZNSt13runtime_errorD1Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTISt13runtime_error
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
QuickTypeUtils : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[QuickTypeUtils initialize]
  +[QuickTypeUtils isInternalInstall]
  +[QuickTypeUtils languageForText:]
  +[QuickTypeUtils getAttachmentURLByName:attachments:error:]
  +[QuickTypeUtils removeTemporaryFile:]
  +[QuickTypeUtils messageContentForEvent:]
  +[QuickTypeUtils sourceForEvent:]


QuickTypePFLTrainingTask : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[QuickTypePFLTrainingTask initialize]
  +[QuickTypePFLTrainingTask taskFromRecipe:]
  +[QuickTypePFLTrainingTask privacyIdentifierForTask:]


QuickTypePFLLanguageModelingData : QuickTypePFLTrainingData
 @property  NSString *tokenIDMapPath

  // class methods
  +[QuickTypePFLLanguageModelingData initialize]
  +[QuickTypePFLLanguageModelingData defaultMaxSequenceLength]

  // instance methods
  -[QuickTypePFLLanguageModelingData .cxx_destruct]
  -[QuickTypePFLLanguageModelingData initWithLocale:]
  -[QuickTypePFLLanguageModelingData .cxx_construct]
  -[QuickTypePFLLanguageModelingData addResource:]
  -[QuickTypePFLLanguageModelingData addExamples:]
  -[QuickTypePFLLanguageModelingData tokenIDMapPath]
  -[QuickTypePFLLanguageModelingData setTokenIDMapPath:]
  -[QuickTypePFLLanguageModelingData loadFromCoreDuet:]
  -[QuickTypePFLLanguageModelingData getTrainingDataBatch:]
  -[QuickTypePFLLanguageModelingData getEvaluationDataPoint]


QuickTypePFLEmojiClassificationData : QuickTypePFLTrainingData
 @property  NSDictionary *labelClasses
 @property  unsigned long numOutputClasses
 @property  unsigned long embeddingDimension

  // class methods
  +[QuickTypePFLEmojiClassificationData initialize]

  // instance methods
  -[QuickTypePFLEmojiClassificationData .cxx_destruct]
  -[QuickTypePFLEmojiClassificationData initWithLocale:]
  -[QuickTypePFLEmojiClassificationData .cxx_construct]
  -[QuickTypePFLEmojiClassificationData embeddingDimension]
  -[QuickTypePFLEmojiClassificationData addResource:]
  -[QuickTypePFLEmojiClassificationData addExamples:]
  -[QuickTypePFLEmojiClassificationData loadFromCoreDuet:]
  -[QuickTypePFLEmojiClassificationData getTrainingDataBatch:]
  -[QuickTypePFLEmojiClassificationData getEvaluationDataPoint]
  -[QuickTypePFLEmojiClassificationData sampleNoneClassExample:]
  -[QuickTypePFLEmojiClassificationData numOutputClasses]
  -[QuickTypePFLEmojiClassificationData labelClasses]


QuickTypeWeightUpdates : NSObject /usr/lib/libc++.1.dylib
 @property  NSData *weightUpdates
 @property  NSNumber *l2Norm
 @property  NSNumber *maxNorm
 @property  NSString *privacyDiagnosticReport
 @property  NSString *weightUpdatesDiagnosticReport

  // instance methods
  -[QuickTypeWeightUpdates .cxx_destruct]
  -[QuickTypeWeightUpdates weightUpdates]
  -[QuickTypeWeightUpdates privacyDiagnosticReport]
  -[QuickTypeWeightUpdates weightUpdatesDiagnosticReport]
  -[QuickTypeWeightUpdates l2Norm]
  -[QuickTypeWeightUpdates maxNorm]
  -[QuickTypeWeightUpdates setWeightUpdates:]
  -[QuickTypeWeightUpdates setL2Norm:]
  -[QuickTypeWeightUpdates setMaxNorm:]
  -[QuickTypeWeightUpdates setPrivacyDiagnosticReport:]
  -[QuickTypeWeightUpdates setWeightUpdatesDiagnosticReport:]


QuickTypePFLTrainerMLP : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *privacyIdentifier
 @property  unsigned long batchSize
 @property  NSNumber *learningRate
 @property  NSNumber *gradientClipMin
 @property  NSNumber *gradientClipMax
 @property  NSNumber *clippingNorm
 @property  unsigned long normBinCount
 @property  NSNumber *initialLoss
 @property  NSNumber *trainingLoss

  // class methods
  +[QuickTypePFLTrainerMLP initialize]
  +[QuickTypePFLTrainerMLP copyToFlatBuffer:]
  +[QuickTypePFLTrainerMLP reportingStringForModelUpdates:count:]

  // instance methods
  -[QuickTypePFLTrainerMLP .cxx_destruct]
  -[QuickTypePFLTrainerMLP .cxx_construct]
  -[QuickTypePFLTrainerMLP batchSize]
  -[QuickTypePFLTrainerMLP setBatchSize:]
  -[QuickTypePFLTrainerMLP learningRate]
  -[QuickTypePFLTrainerMLP gradientClipMin]
  -[QuickTypePFLTrainerMLP gradientClipMax]
  -[QuickTypePFLTrainerMLP setGradientClipMin:]
  -[QuickTypePFLTrainerMLP setGradientClipMax:]
  -[QuickTypePFLTrainerMLP setLearningRate:]
  -[QuickTypePFLTrainerMLP trainOn:forNEpochs:]
  -[QuickTypePFLTrainerMLP initWithSeedModelPath:andPrivacyIdentifier:]
  -[QuickTypePFLTrainerMLP setClippingNorm:]
  -[QuickTypePFLTrainerMLP setNormBinCount:]
  -[QuickTypePFLTrainerMLP writeModelToURL:]
  -[QuickTypePFLTrainerMLP getWeightUpdatesAddNoise:encryptionKey:]
  -[QuickTypePFLTrainerMLP initialLoss]
  -[QuickTypePFLTrainerMLP trainingLoss]
  -[QuickTypePFLTrainerMLP clippingNorm]
  -[QuickTypePFLTrainerMLP normBinCount]
  -[QuickTypePFLTrainerMLP privacyIdentifier]


QuickTypePFLBackgroundTask : MLBackgroundTask /System/Library/PrivateFrameworks/DistributedEvaluation.framework/DistributedEvaluation
 @property  NSURL *url

  // class methods
  +[QuickTypePFLBackgroundTask supportsSecureCoding]
  +[QuickTypePFLBackgroundTask taskRunnerClass]

  // instance methods
  -[QuickTypePFLBackgroundTask encodeWithCoder:]
  -[QuickTypePFLBackgroundTask initWithCoder:]
  -[QuickTypePFLBackgroundTask initWithURL:]
  -[QuickTypePFLBackgroundTask .cxx_destruct]
  -[QuickTypePFLBackgroundTask url]
  -[QuickTypePFLBackgroundTask setUrl:]
  -[QuickTypePFLBackgroundTask activityForScheduling]


QuickTypePFLTrainingData : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableArray *sentences
 @property  unsigned long iterator
 @property  BOOL processingNewRecord
 @property  unsigned long numTrainingSamples
 @property  unsigned long maxSequenceLength

  // class methods
  +[QuickTypePFLTrainingData initialize]
  +[QuickTypePFLTrainingData defaultMaxSequenceLength]
  +[QuickTypePFLTrainingData trainingDataFor:andLocale:]

  // instance methods
  -[QuickTypePFLTrainingData init]
  -[QuickTypePFLTrainingData .cxx_destruct]
  -[QuickTypePFLTrainingData numTrainingSamples]
  -[QuickTypePFLTrainingData maxSequenceLength]
  -[QuickTypePFLTrainingData addResource:]
  -[QuickTypePFLTrainingData rewind]
  -[QuickTypePFLTrainingData iterator]
  -[QuickTypePFLTrainingData setIterator:]
  -[QuickTypePFLTrainingData sentences]
  -[QuickTypePFLTrainingData setMaxSequenceLength:]
  -[QuickTypePFLTrainingData loadFromCoreDuet:withLocale:andTokenizationBlock:]
  -[QuickTypePFLTrainingData loadFromCoreDuet:]
  -[QuickTypePFLTrainingData getTrainingDataBatch:]
  -[QuickTypePFLTrainingData getEvaluationDataPoint]
  -[QuickTypePFLTrainingData processingNewRecord]
  -[QuickTypePFLTrainingData setProcessingNewRecord:]
  -[QuickTypePFLTrainingData setSentences:]


PFLBackgroundRunner : NSObject /usr/lib/libc++.1.dylib <_DASExtensionRunner>
 @property  QuickTypePFLBackgroundTask *task
 @property  BKSProcessAssertion *assertion
 @property  _DASActivity *activity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PFLBackgroundRunner initialize]

  // instance methods
  -[PFLBackgroundRunner init]
  -[PFLBackgroundRunner .cxx_destruct]
  -[PFLBackgroundRunner stop]
  -[PFLBackgroundRunner start]
  -[PFLBackgroundRunner activity]
  -[PFLBackgroundRunner cleanup]
  -[PFLBackgroundRunner assertion]
  -[PFLBackgroundRunner setAssertion:]
  -[PFLBackgroundRunner task]
  -[PFLBackgroundRunner setTask:]
  -[PFLBackgroundRunner prepareForActivity:]


01 00 0700 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 0900 /System/Library/PrivateFrameworks/DistributedEvaluation.framework/DistributedEvaluation: DESPFLEncryptor 
01 00 0900 /System/Library/PrivateFrameworks/DistributedEvaluation.framework/DistributedEvaluation: DESPFLNoisable 
01 00 0900 /System/Library/PrivateFrameworks/DistributedEvaluation.framework/DistributedEvaluation: DESRecipeEvaluationSession 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INSendMessageIntent 
01 00 0800 /System/Library/Frameworks/CoreML.framework/CoreML: MLBackgroundTask 
01 00 0300 /System/Library/PrivateFrameworks/MailSupport.framework/MailSupport: MSSendMailIntent 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0200 /System/Library/PrivateFrameworks/PrivateFederatedLearning.framework/PrivateFederatedLearning: PFLDiagnosticReporting 
01 00 0100 /System/Library/PrivateFrameworks/DuetActivityScheduler.framework/DuetActivityScheduler: _DASActivity 
