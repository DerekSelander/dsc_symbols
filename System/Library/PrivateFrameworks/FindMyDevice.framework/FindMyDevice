|| __DATA.__data _kFMDActivationLockStateChangedNotification
|| __DATA.__data _kFMDErrorDomain
|| __DATA.__data _kFMDLogPrefsChangedDarwinNotification
|| __DATA.__data _kFMDNotBackedUpPrefDomain
|| __DATA.__data _kFMDPostWipePrefDomain
|| __DATA.__data _kFMDPrefDomain
|| __DATA.__data _kFMDPublicNotBackedUpPrefDomain
|| __DATA.__data _kFMDWatchNotBackedUpPrefDomain
|| __DATA.__data _kFMDWatchPrefDomain
|| __DATA.__objc_data _OBJC_CLASS_$_FMDAccessoryIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_FMDBAAAttestation
|| __DATA.__objc_data _OBJC_CLASS_$_FMDDeviceIdentityFactory
|| __DATA.__objc_data _OBJC_CLASS_$_FMDEmergencyCallInfoPublisher
|| __DATA.__objc_data _OBJC_CLASS_$_FMDEmergencyCallInfoPublisherConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_FMDEraseOptions
|| __DATA.__objc_data _OBJC_CLASS_$_FMDEraseProxy
|| __DATA.__objc_data _OBJC_CLASS_$_FMDFMIPAccountInfo
|| __DATA.__objc_data _OBJC_CLASS_$_FMDGenericAudioAccessory
|| __DATA.__objc_data _OBJC_CLASS_$_FMDGenericMessage
|| __DATA.__objc_data _OBJC_CLASS_$_FMDIdentitySigningRequest
|| __DATA.__objc_data _OBJC_CLASS_$_FMDLostModeInfo
|| __DATA.__objc_data _OBJC_CLASS_$_FMDVolatileMetaDataRecord
|| __DATA.__objc_data _OBJC_CLASS_$_FMNSXPCConnection
|| __DATA.__objc_data _OBJC_CLASS_$_FMNSXPCConnectionCache
|| __DATA.__objc_data _OBJC_CLASS_$_FMNSXPCConnectionConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDAccessoryIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDBAAAttestation
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDDeviceIdentityFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDEmergencyCallInfoPublisher
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDEmergencyCallInfoPublisherConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDEraseOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDEraseProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDFMIPAccountInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDGenericAudioAccessory
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDGenericMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDIdentitySigningRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDLostModeInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDVolatileMetaDataRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_FMNSXPCConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_FMNSXPCConnectionCache
|| __DATA.__objc_data _OBJC_METACLASS_$_FMNSXPCConnectionConfiguration
|| __DATA_CONST.__const _FMDFMIPManagerUnregisterErrorDomain
|| __DATA_CONST.__const _kAccessoriesChangedNotification
|| __DATA_CONST.__const _kActivationLockAllowedMayHaveChangedNotification
|| __DATA_CONST.__const _kActivationLockStateDidChangeNotification
|| __DATA_CONST.__const _kFMDAccessoryPlaySoundErrorDomain
|| __DATA_CONST.__const _kFMDFMIPAccountNameKey
|| __DATA_CONST.__const _kFMDFMIPAccountPersonIDKey
|| __DATA_CONST.__const _kFMDPlaySoundStartedDarwinNotification
|| __DATA_CONST.__const _kFMDPlaySoundStoppedDarwinNotification
|| __DATA_CONST.__const _kFMIPAppBundleIdentifier
|| __DATA_CONST.__const _kFMIPLowBatteryLocateStateDidChangeNotification
|| __DATA_CONST.__const _kFMIPStateDidChangeNotification
|| __DATA_CONST.__const _kFMWEnabledNotification
|| __DATA_CONST.__const _kFindMyDeviceEmergencyCallInfoPublisherXPCInterfaceErrorDomain
|| __DATA_CONST.__const _kFindMyDeviceIdentityXPCInterfaceErrorDomain
|| __DATA_CONST.__const _kLostModeChangedNotification
|| __DATA_CONST.__const _kStopLostModeAlarmNotification
|| __DATA_DIRTY.__common _fmdFMIPLastOperationResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDFMIPManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDFMIPSharedStateManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDFMIPManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDFMIPSharedStateManager
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ FMCoreLite: _OBJC_CLASS_$_FMFuture
__ FMCoreLite: _OBJC_CLASS_$_FMPreferencesUtil
__ FMCoreLite: _OBJC_CLASS_$_FMSharedFileContainer
__ FMCoreLite: _OBJC_CLASS_$_FMSynchronizer
__ Foundation: _NSHomeDirectoryForUser
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _geteuid
__ libSystem.B.dylib: _getpwnam
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
FMDDeviceIdentityFactory : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[FMDDeviceIdentityFactory identityForPasscodeActivationUnlockWithContext:completion:]
  -[FMDDeviceIdentityFactory baaIdentityAttestationForSigningRequest:completion:]


FMNSXPCConnectionCache : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *modsSerialQueue
 @property  NSMutableDictionary *connectionsByServiceName

  // class methods
  +[FMNSXPCConnectionCache sharedCache]

  // instance methods
  -[FMNSXPCConnectionCache init]
  -[FMNSXPCConnectionCache resumeConnectionWithConfiguration:]
  -[FMNSXPCConnectionCache modsSerialQueue]
  -[FMNSXPCConnectionCache connectionsByServiceName]
  -[FMNSXPCConnectionCache setModsSerialQueue:]
  -[FMNSXPCConnectionCache setConnectionsByServiceName:]
  -[FMNSXPCConnectionCache dealloc]
  -[FMNSXPCConnectionCache .cxx_destruct]


FMDFMIPManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *managedLostModeFileURL
 @property  NSURL *needsLocateAckLostModeFileURL
 @property  NSObject<OS_dispatch_queue> *serialQueue

  // class methods
  +[FMDFMIPManager sharedInstance]

  // instance methods
  -[FMDFMIPManager showDailyLocateReport]
  -[FMDFMIPManager isActivationLockedWithCompletion:]
  -[FMDFMIPManager _checkLostModeInSharedContainer]
  -[FMDFMIPManager getAccessoriesWithCompletion:]
  -[FMDFMIPManager stopPlayingSoundForAccessory:rampDownDuration:completion:]
  -[FMDFMIPManager disableFMIPUsingToken:inContext:]
  -[FMDFMIPManager init]
  -[FMDFMIPManager serialQueue]
  -[FMDFMIPManager lostModeInfo]
  -[FMDFMIPManager setSerialQueue:]
  -[FMDFMIPManager stopSoundMessageWithCompletion:]
  -[FMDFMIPManager fmipAccount]
  -[FMDFMIPManager markAsMissingSupportedForPairedDeviceWithUDID:withCompletion:]
  -[FMDFMIPManager markPairedDeviceWithUDID:asMissingUsingToken:withCompletion:]
  -[FMDFMIPManager playSoundWithMessage:completion:]
  -[FMDFMIPManager _updateNeedsLocateAckLostModeWithInfo:completion:]
  -[FMDFMIPManager signatureHeadersWithData:completion:]
  -[FMDFMIPManager enableLostModeWithInfo:]
  -[FMDFMIPManager .cxx_destruct]
  -[FMDFMIPManager lockdownShouldDisableDevicePairing]
  -[FMDFMIPManager newErrorForCode:message:]
  -[FMDFMIPManager enableFMIPInContext:]
  -[FMDFMIPManager isLostModeActive]
  -[FMDFMIPManager disableFMIPUsingToken:forPairedDeviceWithUDID:withCompletion:]
  -[FMDFMIPManager enableManagedLostModeWithInfo:completion:]
  -[FMDFMIPManager setManagedLostModeFileURL:]
  -[FMDFMIPManager setLowBatteryLocateEnabled:withCompletion:]
  -[FMDFMIPManager _isRunningAsMobileUser]
  -[FMDFMIPManager _forceFMWUpgradeAlertWithCompletion:]
  -[FMDFMIPManager clearData:completion:]
  -[FMDFMIPManager getNeedsLocateAckLostModeFileURL]
  -[FMDFMIPManager setNeedsLocateAckLostModeFileURL:]
  -[FMDFMIPManager _managedLostModeType]
  -[FMDFMIPManager addNotificationRequest:completion:]
  -[FMDFMIPManager disableLostMode]
  -[FMDFMIPManager lostModeIsActive]
  -[FMDFMIPManager pathsToPreserveAcrossWipe]
  -[FMDFMIPManager startPlayingSoundForAccessory:duration:rampUpDuration:channels:completion:]
  -[FMDFMIPManager lowBatteryLocateEnabledWithCompletion:]
  -[FMDFMIPManager fmipStateWithCompletion:]
  -[FMDFMIPManager soundStoppedForAccessoryIdentifier:]
  -[FMDFMIPManager initiateLostModeExitAuthForIDSDeviceID:withCompletion:]
  -[FMDFMIPManager disableBiometricIDForLostModeWithCompletion:]
  -[FMDFMIPManager userNotifiedOfActivationLockForPairedDevices:]
  -[FMDFMIPManager _initiateLostModeExitAuthForIDSDeviceID:withCompletion:]
  -[FMDFMIPManager waitForRoutableAccessory:timeout:completion:]
  -[FMDFMIPManager disableFMIPForAccount:pairedDeviceWithUDID:withCompletion:]
  -[FMDFMIPManager getManagedLostModeFileURL]
  -[FMDFMIPManager _disableFMIPUsingToken:inContext:completion:]
  -[FMDFMIPManager userDidAckManagedLostModeLocateWithCompletion:]
  -[FMDFMIPManager fmipAccountWithCompletion:]
  -[FMDFMIPManager didReceiveLostModeExitAuthToken:]
  -[FMDFMIPManager _needsAckLostModeType]
  -[FMDFMIPManager setDailyLocateReportEnabled:]
  -[FMDFMIPManager isActivationLockAllowedWithCompletion:]
  -[FMDFMIPManager _stopAlarm]
  -[FMDFMIPManager disableFMIPUsingToken:inContext:completion:]
  -[FMDFMIPManager _updateManagedLostModeWithInfo:completion:]
  -[FMDFMIPManager isActivationLockEnabledWithCompletion:]
  -[FMDFMIPManager managedLostModeFileURL]
  -[FMDFMIPManager needsLocateAckLostModeFileURL]
  -[FMDFMIPManager disableManagedLostModeWithLocatedMessage:completion:]
  -[FMDFMIPManager needsLostModeExitAuth]
  -[FMDFMIPManager userNotifiedOfActivationLockForAllPairedDevices]
  -[FMDFMIPManager lockdownShouldDisableDeviceRestore]
  -[FMDFMIPManager isManagedLostModeActive]
  -[FMDFMIPManager didChangeFMIPAccountInfo:]
  -[FMDFMIPManager activationLockVersionWithCompletion:]
  -[FMDFMIPManager initiateLostModeExitAuthWithCompletion:]
  -[FMDFMIPManager playSoundWithOptions:completion:]
  -[FMDFMIPManager enableActivationLockWithCompletion:]
  -[FMDFMIPManager deviceActivationDidSucceed]
  -[FMDFMIPManager _postWipePrefPath]
  -[FMDFMIPManager _quickFetchFMIPEnabledstate]


FMDGenericAudioAccessory : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, FMDAudioAccessory, FMDAccessory>
 @property  FMDAccessoryIdentifier *accessoryIdentifier
 @property  NSString *audioRoutingIdentifier
 @property  NSURL *audioURL
 @property  unsigned long audioSafetyStatus
 @property  BOOL playingSound
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FMDGenericAudioAccessory supportsSecureCoding]
  +[FMDGenericAudioAccessory copyAccessory:]

  // instance methods
  -[FMDGenericAudioAccessory setAudioURL:]
  -[FMDGenericAudioAccessory updateAudioAsset:]
  -[FMDGenericAudioAccessory playingSound]
  -[FMDGenericAudioAccessory accessoryIdentifier]
  -[FMDGenericAudioAccessory setAccessoryIdentifier:]
  -[FMDGenericAudioAccessory updatePlaybackChannels:]
  -[FMDGenericAudioAccessory audioSafetyStatus]
  -[FMDGenericAudioAccessory audioRoutingIdentifier]
  -[FMDGenericAudioAccessory setAudioRoutingIdentifier:]
  -[FMDGenericAudioAccessory .cxx_destruct]
  -[FMDGenericAudioAccessory encodeWithCoder:]
  -[FMDGenericAudioAccessory audioURL]
  -[FMDGenericAudioAccessory initWithCoder:]


FMNSXPCConnectionConfiguration : NSObject /usr/lib/libSystem.B.dylib <FMNSXPCConnectionConfigurable>
 @property  NSString *serviceName
 @property  NSXPCInterface *remoteInterface
 @property  NSXPCInterface *exportedInterface
 @property  unsigned long options
 @property  BOOL machService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FMNSXPCConnectionConfiguration identityConfiguration]
  +[FMNSXPCConnectionConfiguration fmipConfiguration]
  +[FMNSXPCConnectionConfiguration helperConfiguration]
  +[FMNSXPCConnectionConfiguration btDiscoveryConfiguration]
  +[FMNSXPCConnectionConfiguration emergencyCallInfoPublisherConfiguration]
  +[FMNSXPCConnectionConfiguration userNotificationConfiguration]
  +[FMNSXPCConnectionConfiguration eraseDeviceServiceConfiguration]

  // instance methods
  -[FMNSXPCConnectionConfiguration machService]
  -[FMNSXPCConnectionConfiguration remoteInterface]
  -[FMNSXPCConnectionConfiguration setExportedInterface:]
  -[FMNSXPCConnectionConfiguration .cxx_destruct]
  -[FMNSXPCConnectionConfiguration options]
  -[FMNSXPCConnectionConfiguration exportedInterface]
  -[FMNSXPCConnectionConfiguration setOptions:]
  -[FMNSXPCConnectionConfiguration setMachService:]
  -[FMNSXPCConnectionConfiguration setServiceName:]
  -[FMNSXPCConnectionConfiguration serviceName]
  -[FMNSXPCConnectionConfiguration setRemoteInterface:]


FMDGenericMessage : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  BOOL vibrate
 @property  NSString *soundName
 @property  int soundDuration

  // class methods
  +[FMDGenericMessage supportsSecureCoding]

  // instance methods
  -[FMDGenericMessage setSoundName:]
  -[FMDGenericMessage vibrate]
  -[FMDGenericMessage setVibrate:]
  -[FMDGenericMessage .cxx_destruct]
  -[FMDGenericMessage soundDuration]
  -[FMDGenericMessage setSoundDuration:]
  -[FMDGenericMessage encodeWithCoder:]
  -[FMDGenericMessage soundName]
  -[FMDGenericMessage initWithCoder:]


FMDEmergencyCallInfoPublisherConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *serverHost

  // class methods
  +[FMDEmergencyCallInfoPublisherConfiguration supportsSecureCoding]

  // instance methods
  -[FMDEmergencyCallInfoPublisherConfiguration serverHost]
  -[FMDEmergencyCallInfoPublisherConfiguration .cxx_destruct]
  -[FMDEmergencyCallInfoPublisherConfiguration setServerHost:]
  -[FMDEmergencyCallInfoPublisherConfiguration encodeWithCoder:]
  -[FMDEmergencyCallInfoPublisherConfiguration initWithCoder:]


FMDFMIPSharedStateManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *fmipSharedFileStaticURL
 @property  NSObject<OS_dispatch_queue> *stateManagerQueue

  // class methods
  +[FMDFMIPSharedStateManager sharedInstance]

  // instance methods
  -[FMDFMIPSharedStateManager init]
  -[FMDFMIPSharedStateManager fmipActive]
  -[FMDFMIPSharedStateManager .cxx_destruct]
  -[FMDFMIPSharedStateManager _writeSharedInfo:]
  -[FMDFMIPSharedStateManager _removeSharedInfo]
  -[FMDFMIPSharedStateManager lostModeType]
  -[FMDFMIPSharedStateManager _fmipSharedFileURL]
  -[FMDFMIPSharedStateManager stateManagerQueue]
  -[FMDFMIPSharedStateManager setFMiPActive:]
  -[FMDFMIPSharedStateManager recalculateLostMode]
  -[FMDFMIPSharedStateManager setFmipSharedFileStaticURL:]
  -[FMDFMIPSharedStateManager setStateManagerQueue:]
  -[FMDFMIPSharedStateManager _readSharedInfo]
  -[FMDFMIPSharedStateManager fmipSharedFileStaticURL]


FMDLostModeInfo : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned long lostModeType
 @property  BOOL lostModeEnabled
 @property  BOOL disableSlideToUnlock
 @property  NSString *message
 @property  NSString *phoneNumber
 @property  BOOL facetimeCapable
 @property  NSString *footnoteText

  // class methods
  +[FMDLostModeInfo supportsSecureCoding]

  // instance methods
  -[FMDLostModeInfo message]
  -[FMDLostModeInfo phoneNumber]
  -[FMDLostModeInfo setPhoneNumber:]
  -[FMDLostModeInfo setMessage:]
  -[FMDLostModeInfo setLostModeEnabled:]
  -[FMDLostModeInfo setFacetimeCapable:]
  -[FMDLostModeInfo setFootnoteText:]
  -[FMDLostModeInfo dealloc]
  -[FMDLostModeInfo setDisableSlideToUnlock:]
  -[FMDLostModeInfo setLostModeType:]
  -[FMDLostModeInfo lostModeEnabled]
  -[FMDLostModeInfo .cxx_destruct]
  -[FMDLostModeInfo disableSlideToUnlock]
  -[FMDLostModeInfo facetimeCapable]
  -[FMDLostModeInfo footnoteText]
  -[FMDLostModeInfo encodeWithCoder:]
  -[FMDLostModeInfo lostModeType]
  -[FMDLostModeInfo initWithCoder:]


FMNSXPCCachedConnection : NSObject /usr/lib/libSystem.B.dylib <FMNSXPCConnecting>
 @property  FMNSXPCConnection *connection
 @property  @? failureBlock
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  @? didInvalidate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FMNSXPCCachedConnection addFailureBlock:]
  -[FMNSXPCCachedConnection didInvalidate]
  -[FMNSXPCCachedConnection serialQueue]
  -[FMNSXPCCachedConnection setSerialQueue:]
  -[FMNSXPCCachedConnection initWithFMNSXPCConnection:]
  -[FMNSXPCCachedConnection .cxx_destruct]
  -[FMNSXPCCachedConnection setDidInvalidate:]
  -[FMNSXPCCachedConnection setConnection:]
  -[FMNSXPCCachedConnection remoteObjectProxy]
  -[FMNSXPCCachedConnection _invalidate]
  -[FMNSXPCCachedConnection failureBlock]
  -[FMNSXPCCachedConnection connection]
  -[FMNSXPCCachedConnection invalidate]
  -[FMNSXPCCachedConnection setFailureBlock:]


FMDEraseProxy : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[FMDEraseProxy eraseDeviceWithOptions:completion:]


FMDEmergencyCallInfoPublisher : NSObject /usr/lib/libSystem.B.dylib
 @property  FMDEmergencyCallInfoPublisherConfiguration *publisherConfig

  // instance methods
  -[FMDEmergencyCallInfoPublisher .cxx_destruct]
  -[FMDEmergencyCallInfoPublisher publishInfo:completion:]
  -[FMDEmergencyCallInfoPublisher publisherConfig]
  -[FMDEmergencyCallInfoPublisher setPublisherConfig:]
  -[FMDEmergencyCallInfoPublisher initWithConfiguration:]


FMDVolatileMetaDataRecord : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, FMDDictionaryRepresentable>
 @property  NSDictionary *dictionary
 @property  NSDictionary *dictionaryValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FMDVolatileMetaDataRecord supportsSecureCoding]

  // instance methods
  -[FMDVolatileMetaDataRecord init]
  -[FMDVolatileMetaDataRecord .cxx_destruct]
  -[FMDVolatileMetaDataRecord setDictionary:]
  -[FMDVolatileMetaDataRecord appendMetaData:]
  -[FMDVolatileMetaDataRecord dictionary]
  -[FMDVolatileMetaDataRecord encodeWithCoder:]
  -[FMDVolatileMetaDataRecord initWithDictionary:]
  -[FMDVolatileMetaDataRecord dictionaryValue]
  -[FMDVolatileMetaDataRecord initWithCoder:]


FMDAccessoryIdentifier : NSObject /usr/lib/libSystem.B.dylib <FMDCodable, NSCopying, FMDIdentifiable>
 @property  NSString *string
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL valid

  // class methods
  +[FMDAccessoryIdentifier supportsSecureCoding]

  // instance methods
  -[FMDAccessoryIdentifier copyWithZone:]
  -[FMDAccessoryIdentifier initWithAddress:]
  -[FMDAccessoryIdentifier initWithString:]
  -[FMDAccessoryIdentifier .cxx_destruct]
  -[FMDAccessoryIdentifier encodeWithFMDCoder:error:]
  -[FMDAccessoryIdentifier initWithFMDCoder:error:]
  -[FMDAccessoryIdentifier computeAccessoryIdentifierWithAddress:]
  -[FMDAccessoryIdentifier initWithDeviceVendor:deviceProductId:]
  -[FMDAccessoryIdentifier encodeWithCoder:]
  -[FMDAccessoryIdentifier isValid]
  -[FMDAccessoryIdentifier setString:]
  -[FMDAccessoryIdentifier isEqual:]
  -[FMDAccessoryIdentifier string]
  -[FMDAccessoryIdentifier initWithCoder:]
  -[FMDAccessoryIdentifier stringValue]


FMDFMIPAccountInfo : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *username
 @property  NSString *dsid
 @property  NSString *oneTimeRemoveAuthToken
 @property  NSURL *serverURL

  // class methods
  +[FMDFMIPAccountInfo supportsSecureCoding]

  // instance methods
  -[FMDFMIPAccountInfo dsid]
  -[FMDFMIPAccountInfo setUsername:]
  -[FMDFMIPAccountInfo username]
  -[FMDFMIPAccountInfo oneTimeRemoveAuthToken]
  -[FMDFMIPAccountInfo .cxx_destruct]
  -[FMDFMIPAccountInfo setOneTimeRemoveAuthToken:]
  -[FMDFMIPAccountInfo initWithUserName:dsid:oneTimeRemoveAuthToken:serverURL:]
  -[FMDFMIPAccountInfo encodeWithCoder:]
  -[FMDFMIPAccountInfo serverURL]
  -[FMDFMIPAccountInfo setDsid:]
  -[FMDFMIPAccountInfo setServerURL:]
  -[FMDFMIPAccountInfo initWithCoder:]


FMNSXPCConnection : NSObject /usr/lib/libSystem.B.dylib <FMNSXPCConnecting>
 @property  NSXPCConnection *connection
 @property  FMFuture *future
 @property  BOOL _testMockConnection
 @property  long long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FMNSXPCConnection addFailureBlock:]
  -[FMNSXPCConnection destroyXPCConnection]
  -[FMNSXPCConnection dealloc]
  -[FMNSXPCConnection .cxx_destruct]
  -[FMNSXPCConnection initWithConfiguration:exportedObject:]
  -[FMNSXPCConnection _testMockConnection]
  -[FMNSXPCConnection set_testMockConnection:]
  -[FMNSXPCConnection setConnection:]
  -[FMNSXPCConnection remoteObjectProxy]
  -[FMNSXPCConnection future]
  -[FMNSXPCConnection initWithConfiguration:]
  -[FMNSXPCConnection state]
  -[FMNSXPCConnection connection]
  -[FMNSXPCConnection invalidate]
  -[FMNSXPCConnection setFuture:]


FMDEraseOptions : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  BOOL useObliteration
 @property  BOOL brickDevice
 @property  double customDelay
 @property  double maxDelayInterval
 @property  BOOL hasBridgeCoProcessor

  // class methods
  +[FMDEraseOptions supportsSecureCoding]

  // instance methods
  -[FMDEraseOptions useObliteration]
  -[FMDEraseOptions brickDevice]
  -[FMDEraseOptions maxDelayInterval]
  -[FMDEraseOptions customDelay]
  -[FMDEraseOptions hasBridgeCoProcessor]
  -[FMDEraseOptions setUseObliteration:]
  -[FMDEraseOptions setBrickDevice:]
  -[FMDEraseOptions setCustomDelay:]
  -[FMDEraseOptions setMaxDelayInterval:]
  -[FMDEraseOptions setHasBridgeCoProcessor:]
  -[FMDEraseOptions encodeWithCoder:]
  -[FMDEraseOptions initWithCoder:]


FMDBAAAttestation : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSData *attestation
 @property  NSData *signature

  // class methods
  +[FMDBAAAttestation supportsSecureCoding]

  // instance methods
  -[FMDBAAAttestation signature]
  -[FMDBAAAttestation .cxx_destruct]
  -[FMDBAAAttestation setAttestation:]
  -[FMDBAAAttestation initWithAttestation:signature:]
  -[FMDBAAAttestation encodeWithCoder:]
  -[FMDBAAAttestation setSignature:]
  -[FMDBAAAttestation attestation]
  -[FMDBAAAttestation initWithCoder:]


FMDIdentitySigningRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSData *dataToSign
 @property  BOOL useSCRT
 @property  long long validityInMinutes

  // class methods
  +[FMDIdentitySigningRequest supportsSecureCoding]

  // instance methods
  -[FMDIdentitySigningRequest useSCRT]
  -[FMDIdentitySigningRequest .cxx_destruct]
  -[FMDIdentitySigningRequest dataToSign]
  -[FMDIdentitySigningRequest initWithData:]
  -[FMDIdentitySigningRequest setUseSCRT:]
  -[FMDIdentitySigningRequest setDataToSign:]
  -[FMDIdentitySigningRequest setValidityInMinutes:]
  -[FMDIdentitySigningRequest validityInMinutes]
  -[FMDIdentitySigningRequest encodeWithCoder:]
  -[FMDIdentitySigningRequest initWithCoder:]


(FMDVolatileMetaDataRecord)
	// instance methods
	-[(FMDVolatileMetaDataRecord) fm_dictionaryByDeeplySettingValuesForKeysWithDictionary:]

01 00 0100 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMFuture 
01 00 0100 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMPreferencesUtil 
01 00 0100 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMSharedFileContainer 
01 00 0100 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMSynchronizer 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
