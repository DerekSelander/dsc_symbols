|| __DATA.__data _kFMDActivationLockStateChangedNotification
|| __DATA.__data _kFMDErrorDomain
|| __DATA.__data _kFMDLocalActivationLockInfoChangedNotification
|| __DATA.__data _kFMDLogPrefsChangedDarwinNotification
|| __DATA.__data _kFMDNotBackedUpMagSafePrefDomain
|| __DATA.__data _kFMDNotBackedUpPrefDomain
|| __DATA.__data _kFMDOfflineFindingInfoChangedNotification
|| __DATA.__data _kFMDPostWipePrefDomain
|| __DATA.__data _kFMDPrefDomain
|| __DATA.__data _kFMDPublicNotBackedUpPrefDomain
|| __DATA.__data _kFMDWatchNotBackedUpPrefDomain
|| __DATA.__data _kFMDWatchPrefDomain
|| __DATA.__objc_data _OBJC_CLASS_$_FMDAccessoryIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_FMDAudioAccessoryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_FMDBAAAttestation
|| __DATA.__objc_data _OBJC_CLASS_$_FMDDeviceIdentityFactory
|| __DATA.__objc_data _OBJC_CLASS_$_FMDEmergencyCallInfoPublisher
|| __DATA.__objc_data _OBJC_CLASS_$_FMDEmergencyCallInfoPublisherConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_FMDEraseOptions
|| __DATA.__objc_data _OBJC_CLASS_$_FMDEraseProxy
|| __DATA.__objc_data _OBJC_CLASS_$_FMDExtAccessoryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_FMDExtHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_FMDExtVendorContext
|| __DATA.__objc_data _OBJC_CLASS_$_FMDExtensionContext
|| __DATA.__objc_data _OBJC_CLASS_$_FMDIdentitySigningRequest
|| __DATA.__objc_data _OBJC_CLASS_$_FMDVolatileMetaDataRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDAccessoryIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDAudioAccessoryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDBAAAttestation
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDDeviceIdentityFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDEmergencyCallInfoPublisher
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDEmergencyCallInfoPublisherConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDEraseOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDEraseProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDExtAccessoryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDExtHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDExtVendorContext
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDExtensionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDIdentitySigningRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDVolatileMetaDataRecord
|| __DATA_CONST.__const _FMDFMIPManagerUnregisterErrorDomain
|| __DATA_CONST.__const _FMDLostModeExitAuthCompleteNotification
|| __DATA_CONST.__const _kAccessoriesChangedNotification
|| __DATA_CONST.__const _kActivationLockAllowedMayHaveChangedNotification
|| __DATA_CONST.__const _kActivationLockStateDidChangeNotification
|| __DATA_CONST.__const _kFMDAccessoryPlaySoundErrorDomain
|| __DATA_CONST.__const _kFMDActivationLockInfoDescriptionKey
|| __DATA_CONST.__const _kFMDActivationLockInfoTitleKey
|| __DATA_CONST.__const _kFMDFMIPAccountNameKey
|| __DATA_CONST.__const _kFMDFMIPAccountPersonIDKey
|| __DATA_CONST.__const _kFMDPlaySoundStartedDarwinNotification
|| __DATA_CONST.__const _kFMDPlaySoundStoppedDarwinNotification
|| __DATA_CONST.__const _kFMDSecureLocationModeLive
|| __DATA_CONST.__const _kFMDSecureLocationModeProactive
|| __DATA_CONST.__const _kFMDSecureLocationModeProactiveShallow
|| __DATA_CONST.__const _kFMDStartupCompleteNotification
|| __DATA_CONST.__const _kFMIPAppBundleIdentifier
|| __DATA_CONST.__const _kFMIPLowBatteryLocateStateDidChangeNotification
|| __DATA_CONST.__const _kFMIPStateDidChangeNotification
|| __DATA_CONST.__const _kFMWEnabledNotification
|| __DATA_CONST.__const _kFindMyDeviceEmergencyCallInfoPublisherXPCInterfaceErrorDomain
|| __DATA_CONST.__const _kFindMyDeviceIdentityXPCInterfaceErrorDomain
|| __DATA_CONST.__const _kLostModeChangedNotification
|| __DATA_CONST.__const _kStopLostModeAlarmNotification
|| __DATA_DIRTY.__common _fmdFMIPLastOperationResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDActivationLockAuthInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDActivationLockInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDFMIPAccountInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDFMIPManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDFMIPSharedStateManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDGenericAudioAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDGenericMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDLostModeInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDPairingCheckCommandRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDPairingCheckCommandResponseInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDPairingLockRegisterRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDPairingLockRegisterResponseInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDPairingLockUpdateRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMDSecureLocationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMNSXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMNSXPCConnectionCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMNSXPCConnectionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDActivationLockAuthInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDActivationLockInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDFMIPAccountInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDFMIPManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDFMIPSharedStateManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDGenericAudioAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDGenericMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDLostModeInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDPairingCheckCommandRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDPairingCheckCommandResponseInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDPairingLockRegisterRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDPairingLockRegisterResponseInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDPairingLockUpdateRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMDSecureLocationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMNSXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMNSXPCConnectionCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMNSXPCConnectionConfiguration
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ FMCoreLite: _OBJC_CLASS_$_FMFuture
__ FMCoreLite: _OBJC_CLASS_$_FMPreferencesUtil
__ FMCoreLite: _OBJC_CLASS_$_FMSharedFileContainer
__ FMCoreLite: _OBJC_CLASS_$_FMSynchronizer
__ Foundation: _NSHomeDirectoryForUser
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _geteuid
__ libSystem.B.dylib: _getpwnam
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
FMDDeviceIdentityFactory : NSObject
  // instance methods
  -[FMDDeviceIdentityFactory identityForPasscodeActivationUnlockWithContext:completion:]
  -[FMDDeviceIdentityFactory baaIdentityAttestationForSigningRequest:completion:]


FMDExtAccessoryInfo : NSObject <NSSecureCoding>
 @property  NSString *accessoryIdentifier
 @property  NSString *accessoryType
 @property  NSString *name
 @property  NSDictionary *serialNumbers
 @property  NSString *firmwareVersion
 @property  NSString *deviceDiscoveryId
 @property  NSDictionary *additionalInfo

  // class methods
  +[FMDExtAccessoryInfo supportsSecureCoding]

  // instance methods
  -[FMDExtAccessoryInfo additionalInfo]
  -[FMDExtAccessoryInfo setAccessoryType:]
  -[FMDExtAccessoryInfo name]
  -[FMDExtAccessoryInfo accessoryType]
  -[FMDExtAccessoryInfo initWithCoder:]
  -[FMDExtAccessoryInfo setFirmwareVersion:]
  -[FMDExtAccessoryInfo firmwareVersion]
  -[FMDExtAccessoryInfo .cxx_destruct]
  -[FMDExtAccessoryInfo setName:]
  -[FMDExtAccessoryInfo deviceDiscoveryId]
  -[FMDExtAccessoryInfo accessoryIdentifier]
  -[FMDExtAccessoryInfo serialNumbers]
  -[FMDExtAccessoryInfo setSerialNumbers:]
  -[FMDExtAccessoryInfo setAccessoryIdentifier:]
  -[FMDExtAccessoryInfo setDeviceDiscoveryId:]
  -[FMDExtAccessoryInfo setAdditionalInfo:]
  -[FMDExtAccessoryInfo encodeWithCoder:]


FMNSXPCConnectionCache : NSObject
 @property  NSObject<OS_dispatch_queue> *modsSerialQueue
 @property  NSMutableDictionary *connectionsByServiceName

  // class methods
  +[FMNSXPCConnectionCache sharedCache]

  // instance methods
  -[FMNSXPCConnectionCache setConnectionsByServiceName:]
  -[FMNSXPCConnectionCache resumeConnectionWithConfiguration:]
  -[FMNSXPCConnectionCache .cxx_destruct]
  -[FMNSXPCConnectionCache init]
  -[FMNSXPCConnectionCache setModsSerialQueue:]
  -[FMNSXPCConnectionCache modsSerialQueue]
  -[FMNSXPCConnectionCache connectionsByServiceName]
  -[FMNSXPCConnectionCache dealloc]


FMDFMIPManager : NSObject
 @property  NSURL *managedLostModeFileURL
 @property  NSURL *needsLocateAckLostModeFileURL
 @property  NSObject<OS_dispatch_queue> *serialQueue

  // class methods
  +[FMDFMIPManager sharedInstance]

  // instance methods
  -[FMDFMIPManager lostModeInfo]
  -[FMDFMIPManager startLocationMonitoring:]
  -[FMDFMIPManager setSerialQueue:]
  -[FMDFMIPManager _stopAlarm]
  -[FMDFMIPManager updatePairingLockInfo:completion:]
  -[FMDFMIPManager pairingCheckWith:completion:]
  -[FMDFMIPManager _getAccessoriesWithFilter:completion:]
  -[FMDFMIPManager markAsMissingSupportedForPairedDeviceWithUDID:withCompletion:]
  -[FMDFMIPManager playSoundWithMessage:completion:]
  -[FMDFMIPManager startLocationMonitoringWithOptions:completion:]
  -[FMDFMIPManager lockdownShouldDisableDevicePairing]
  -[FMDFMIPManager disableFMIPUsingToken:inContext:completion:]
  -[FMDFMIPManager .cxx_destruct]
  -[FMDFMIPManager clearOfflineFindingInfoWithCompletion:]
  -[FMDFMIPManager stopLocationMonitoringWithContext:completion:]
  -[FMDFMIPManager getConnectedAccessoriesDiscoveryIds:]
  -[FMDFMIPManager getManagedLostModeFileURL]
  -[FMDFMIPManager addNotificationRequest:completion:]
  -[FMDFMIPManager disableFMIPForAccount:pairedDeviceWithUDID:withCompletion:]
  -[FMDFMIPManager audioAccessorySerialNumbersWithCompletion:]
  -[FMDFMIPManager stopSoundMessageWithCompletion:]
  -[FMDFMIPManager activationLockVersionWithCompletion:]
  -[FMDFMIPManager _needsAckLostModeType]
  -[FMDFMIPManager soundStoppedForAccessoryIdentifier:]
  -[FMDFMIPManager lostModeIsActive]
  -[FMDFMIPManager clearMaskedAppleIDWithCompletion:]
  -[FMDFMIPManager _isRunningAsMobileUser]
  -[FMDFMIPManager activationLockInfoWithCompletion:]
  -[FMDFMIPManager serialQueue]
  -[FMDFMIPManager pathsToPreserveAcrossWipe]
  -[FMDFMIPManager startLocationMonitoringWithContext:completion:]
  -[FMDFMIPManager _managedLostModeType]
  -[FMDFMIPManager init]
  -[FMDFMIPManager _postWipePrefPath]
  -[FMDFMIPManager userNotifiedOfActivationLockForPairedDevices:]
  -[FMDFMIPManager initiateLostModeExitAuthWithCompletion:]
  -[FMDFMIPManager isManagedLostModeActive]
  -[FMDFMIPManager setNeedsLocateAckLostModeFileURL:]
  -[FMDFMIPManager initiateLostModeExitAuthForIDSDeviceID:withCompletion:]
  -[FMDFMIPManager _forceFMWUpgradeAlertWithCompletion:]
  -[FMDFMIPManager updatedConfigReceived:completion:]
  -[FMDFMIPManager disableManagedLostModeWithLocatedMessage:completion:]
  -[FMDFMIPManager didReceiveLostModeExitAuthToken:]
  -[FMDFMIPManager deviceActivationDidSucceed]
  -[FMDFMIPManager fmipStateWithCompletion:]
  -[FMDFMIPManager _updateManagedLostModeWithInfo:completion:]
  -[FMDFMIPManager isActivationLockedWithCompletion:]
  -[FMDFMIPManager isActivationLockEnabledWithCompletion:]
  -[FMDFMIPManager activationLockInfoFromDeviceWithCompletion:]
  -[FMDFMIPManager lowBatteryLocateEnabledWithCompletion:]
  -[FMDFMIPManager _checkLostModeInSharedContainer]
  -[FMDFMIPManager fetchAPNSTokenWithCompletion:]
  -[FMDFMIPManager setManagedLostModeFileURL:]
  -[FMDFMIPManager stopLocationMonitoringWithOptions:completion:]
  -[FMDFMIPManager storeOfflineFindingInfo:completion:]
  -[FMDFMIPManager disableFMIPUsingToken:forPairedDeviceWithUDID:withCompletion:]
  -[FMDFMIPManager userNotifiedOfActivationLockForAllPairedDevices]
  -[FMDFMIPManager clearData:completion:]
  -[FMDFMIPManager showDailyLocateReport]
  -[FMDFMIPManager disableLostMode]
  -[FMDFMIPManager disableFMIPUsingToken:inContext:]
  -[FMDFMIPManager stopLocationMonitoring:]
  -[FMDFMIPManager fetchOfflineFindingInfoWithCompletion:]
  -[FMDFMIPManager fmipAccountWithCompletion:]
  -[FMDFMIPManager fetchAccessoryConfigurations:]
  -[FMDFMIPManager didChangeFMIPAccountInfo:]
  -[FMDFMIPManager isActivationLockAllowedWithCompletion:]
  -[FMDFMIPManager startPlayingSoundForAccessory:duration:rampUpDuration:channels:completion:]
  -[FMDFMIPManager updateMaskedAppleIDWith:completion:]
  -[FMDFMIPManager enableManagedLostModeWithInfo:completion:]
  -[FMDFMIPManager setDailyLocateReportEnabled:]
  -[FMDFMIPManager userDidAckManagedLostModeLocateWithCompletion:]
  -[FMDFMIPManager playSoundWithOptions:completion:]
  -[FMDFMIPManager _initiateLostModeExitAuthForIDSDeviceID:withCompletion:]
  -[FMDFMIPManager setLowBatteryLocateEnabled:withCompletion:]
  -[FMDFMIPManager newErrorForCode:message:]
  -[FMDFMIPManager needsLostModeExitAuth]
  -[FMDFMIPManager setPhoneNumber:toAccessoryWithDiscoveryId:completion:]
  -[FMDFMIPManager removeNotificationWithIdentifier:completion:]
  -[FMDFMIPManager registerDeviceForPairingLock:completion:]
  -[FMDFMIPManager getNeedsLocateAckLostModeFileURL]
  -[FMDFMIPManager stopPlayingSoundForAccessory:rampDownDuration:completion:]
  -[FMDFMIPManager waitForRoutableAccessory:timeout:completion:]
  -[FMDFMIPManager enableFMIPInContext:]
  -[FMDFMIPManager _updateNeedsLocateAckLostModeWithInfo:completion:]
  -[FMDFMIPManager signatureHeadersWithData:completion:]
  -[FMDFMIPManager isLostModeActive]
  -[FMDFMIPManager getAccessoriesWithCompletion:]
  -[FMDFMIPManager markPairedDeviceWithUDID:asMissingUsingToken:withCompletion:]
  -[FMDFMIPManager needsLocateAckLostModeFileURL]
  -[FMDFMIPManager managedLostModeFileURL]
  -[FMDFMIPManager removeAccessoryWithDiscoveryId:completion:]
  -[FMDFMIPManager disableBiometricIDForLostModeWithCompletion:]
  -[FMDFMIPManager enableActivationLockWithCompletion:]
  -[FMDFMIPManager enableLostModeWithInfo:]
  -[FMDFMIPManager _disableFMIPUsingToken:inContext:completion:]
  -[FMDFMIPManager lockdownShouldDisableDeviceRestore]
  -[FMDFMIPManager _quickFetchFMIPEnabledstate]
  -[FMDFMIPManager fmipAccount]
  -[FMDFMIPManager activationLockAuthInfoWithCompletion:]


FMDExtVendorContext : FMDExtensionContext <FMDExtAccessoryProtocol>
 @property  <FMDExtAccessoryProtocol> *accessoryProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FMDExtVendorContext setAccessoryProvider:]
  -[FMDExtVendorContext fetchAllAccessoriesInfo:withCompletion:]
  -[FMDExtVendorContext methodSignatureForSelector:]
  -[FMDExtVendorContext .cxx_destruct]
  -[FMDExtVendorContext init]
  -[FMDExtVendorContext respondsToSelector:]
  -[FMDExtVendorContext safetyAlertForAccessory:info:withCompletion:]
  -[FMDExtVendorContext accessoryProvider]
  -[FMDExtVendorContext connectionStatusForAccessory:withCompletion:]
  -[FMDExtVendorContext forwardInvocation:]
  -[FMDExtVendorContext getStyleForAccessory:info:withCompletion:]


FMDExtensionContext : NSExtensionContext
  // class methods
  +[FMDExtensionContext _extensionAuxiliaryVendorProtocol]
  +[FMDExtensionContext _extensionAuxiliaryHostProtocol]


FMDGenericAudioAccessory : NSObject <NSSecureCoding, FMDAudioAccessory, FMDAccessory>
 @property  FMDAccessoryIdentifier *accessoryIdentifier
 @property  NSString *audioRoutingIdentifier
 @property  NSURL *audioURL
 @property  FMDAudioAccessoryInfo *audioAccessoryInfo
 @property  BOOL supportsChangingListeningMode
 @property  unsigned long audioSafetyStatus
 @property  BOOL playingSound
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FMDGenericAudioAccessory supportsSecureCoding]
  +[FMDGenericAudioAccessory copyAccessory:]

  // instance methods
  -[FMDGenericAudioAccessory setAudioAccessoryInfo:]
  -[FMDGenericAudioAccessory setSupportsChangingListeningMode:]
  -[FMDGenericAudioAccessory audioAccessoryInfo]
  -[FMDGenericAudioAccessory initWithCoder:]
  -[FMDGenericAudioAccessory audioSafetyStatus]
  -[FMDGenericAudioAccessory .cxx_destruct]
  -[FMDGenericAudioAccessory audioRoutingIdentifier]
  -[FMDGenericAudioAccessory audioURL]
  -[FMDGenericAudioAccessory supportsChangingListeningMode]
  -[FMDGenericAudioAccessory initWithAccessoryId:audioRoutingIdentifier:audioURL:audioAccessoryInfo:supportsChangingListeningMode:]
  -[FMDGenericAudioAccessory accessoryIdentifier]
  -[FMDGenericAudioAccessory updatePlaybackChannels:]
  -[FMDGenericAudioAccessory setAccessoryIdentifier:]
  -[FMDGenericAudioAccessory updateAudioAsset:]
  -[FMDGenericAudioAccessory setAudioURL:]
  -[FMDGenericAudioAccessory playingSound]
  -[FMDGenericAudioAccessory setAudioRoutingIdentifier:]
  -[FMDGenericAudioAccessory encodeWithCoder:]


FMNSXPCConnectionConfiguration : NSObject <FMNSXPCConnectionConfigurable>
 @property  NSString *serviceName
 @property  NSXPCInterface *remoteInterface
 @property  NSXPCInterface *exportedInterface
 @property  unsigned long options
 @property  BOOL machService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FMNSXPCConnectionConfiguration userNotificationConfiguration]
  +[FMNSXPCConnectionConfiguration emergencyCallInfoPublisherConfiguration]
  +[FMNSXPCConnectionConfiguration helperConfiguration]
  +[FMNSXPCConnectionConfiguration identityConfiguration]
  +[FMNSXPCConnectionConfiguration eraseDeviceServiceConfiguration]
  +[FMNSXPCConnectionConfiguration btDiscoveryConfiguration]
  +[FMNSXPCConnectionConfiguration fmipConfiguration]

  // instance methods
  -[FMNSXPCConnectionConfiguration setServiceName:]
  -[FMNSXPCConnectionConfiguration serviceName]
  -[FMNSXPCConnectionConfiguration remoteInterface]
  -[FMNSXPCConnectionConfiguration options]
  -[FMNSXPCConnectionConfiguration setOptions:]
  -[FMNSXPCConnectionConfiguration .cxx_destruct]
  -[FMNSXPCConnectionConfiguration setExportedInterface:]
  -[FMNSXPCConnectionConfiguration setRemoteInterface:]
  -[FMNSXPCConnectionConfiguration machService]
  -[FMNSXPCConnectionConfiguration setMachService:]
  -[FMNSXPCConnectionConfiguration exportedInterface]


FMDGenericMessage : NSObject <NSSecureCoding>
 @property  BOOL vibrate
 @property  NSString *soundName
 @property  int soundDuration

  // class methods
  +[FMDGenericMessage supportsSecureCoding]

  // instance methods
  -[FMDGenericMessage initWithCoder:]
  -[FMDGenericMessage soundName]
  -[FMDGenericMessage .cxx_destruct]
  -[FMDGenericMessage vibrate]
  -[FMDGenericMessage setSoundName:]
  -[FMDGenericMessage encodeWithCoder:]
  -[FMDGenericMessage setVibrate:]
  -[FMDGenericMessage soundDuration]
  -[FMDGenericMessage setSoundDuration:]


FMDEmergencyCallInfoPublisherConfiguration : NSObject <NSSecureCoding>
 @property  NSString *serverHost

  // class methods
  +[FMDEmergencyCallInfoPublisherConfiguration supportsSecureCoding]

  // instance methods
  -[FMDEmergencyCallInfoPublisherConfiguration initWithCoder:]
  -[FMDEmergencyCallInfoPublisherConfiguration serverHost]
  -[FMDEmergencyCallInfoPublisherConfiguration .cxx_destruct]
  -[FMDEmergencyCallInfoPublisherConfiguration encodeWithCoder:]
  -[FMDEmergencyCallInfoPublisherConfiguration setServerHost:]


FMDFMIPSharedStateManager : NSObject
 @property  NSURL *fmipSharedFileStaticURL
 @property  NSObject<OS_dispatch_queue> *stateManagerQueue

  // class methods
  +[FMDFMIPSharedStateManager sharedInstance]

  // instance methods
  -[FMDFMIPSharedStateManager stateManagerQueue]
  -[FMDFMIPSharedStateManager setFMiPActive:]
  -[FMDFMIPSharedStateManager setStateManagerQueue:]
  -[FMDFMIPSharedStateManager .cxx_destruct]
  -[FMDFMIPSharedStateManager setFmipSharedFileStaticURL:]
  -[FMDFMIPSharedStateManager _readSharedInfo]
  -[FMDFMIPSharedStateManager init]
  -[FMDFMIPSharedStateManager fmipSharedFileStaticURL]
  -[FMDFMIPSharedStateManager recalculateLostMode]
  -[FMDFMIPSharedStateManager _fmipSharedFileURL]
  -[FMDFMIPSharedStateManager _writeSharedInfo:]
  -[FMDFMIPSharedStateManager _removeSharedInfo]
  -[FMDFMIPSharedStateManager lostModeType]
  -[FMDFMIPSharedStateManager fmipActive]


FMDPairingCheckCommandRequestInfo : NSObject <NSSecureCoding>
 @property  NSString *pairingCheckToken
 @property  NSString *authNonce
 @property  NSString *accessoryType
 @property  NSString *eraseKeyType

  // class methods
  +[FMDPairingCheckCommandRequestInfo supportsSecureCoding]

  // instance methods
  -[FMDPairingCheckCommandRequestInfo setAccessoryType:]
  -[FMDPairingCheckCommandRequestInfo accessoryType]
  -[FMDPairingCheckCommandRequestInfo initWithCoder:]
  -[FMDPairingCheckCommandRequestInfo .cxx_destruct]
  -[FMDPairingCheckCommandRequestInfo encodeWithCoder:]
  -[FMDPairingCheckCommandRequestInfo authNonce]
  -[FMDPairingCheckCommandRequestInfo pairingCheckToken]
  -[FMDPairingCheckCommandRequestInfo eraseKeyType]
  -[FMDPairingCheckCommandRequestInfo setPairingCheckToken:]
  -[FMDPairingCheckCommandRequestInfo setAuthNonce:]
  -[FMDPairingCheckCommandRequestInfo setEraseKeyType:]


FMDLostModeInfo : NSObject <NSSecureCoding>
 @property  unsigned long lostModeType
 @property  BOOL lostModeEnabled
 @property  BOOL disableSlideToUnlock
 @property  NSString *message
 @property  NSString *phoneNumber
 @property  BOOL facetimeCapable
 @property  NSString *footnoteText

  // class methods
  +[FMDLostModeInfo supportsSecureCoding]

  // instance methods
  -[FMDLostModeInfo initWithCoder:]
  -[FMDLostModeInfo setPhoneNumber:]
  -[FMDLostModeInfo .cxx_destruct]
  -[FMDLostModeInfo setMessage:]
  -[FMDLostModeInfo phoneNumber]
  -[FMDLostModeInfo message]
  -[FMDLostModeInfo lostModeType]
  -[FMDLostModeInfo dealloc]
  -[FMDLostModeInfo encodeWithCoder:]
  -[FMDLostModeInfo setLostModeEnabled:]
  -[FMDLostModeInfo setFacetimeCapable:]
  -[FMDLostModeInfo setFootnoteText:]
  -[FMDLostModeInfo setDisableSlideToUnlock:]
  -[FMDLostModeInfo setLostModeType:]
  -[FMDLostModeInfo lostModeEnabled]
  -[FMDLostModeInfo disableSlideToUnlock]
  -[FMDLostModeInfo facetimeCapable]
  -[FMDLostModeInfo footnoteText]


FMNSXPCCachedConnection : NSObject <FMNSXPCConnecting>
 @property  FMNSXPCConnection *connection
 @property  @? failureBlock
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  @? didInvalidate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FMNSXPCCachedConnection setSerialQueue:]
  -[FMNSXPCCachedConnection addFailureBlock:]
  -[FMNSXPCCachedConnection initWithFMNSXPCConnection:]
  -[FMNSXPCCachedConnection didInvalidate]
  -[FMNSXPCCachedConnection .cxx_destruct]
  -[FMNSXPCCachedConnection setFailureBlock:]
  -[FMNSXPCCachedConnection remoteObjectProxy]
  -[FMNSXPCCachedConnection setConnection:]
  -[FMNSXPCCachedConnection serialQueue]
  -[FMNSXPCCachedConnection connection]
  -[FMNSXPCCachedConnection _invalidate]
  -[FMNSXPCCachedConnection invalidate]
  -[FMNSXPCCachedConnection failureBlock]
  -[FMNSXPCCachedConnection setDidInvalidate:]


FMDEraseProxy : NSObject
  // instance methods
  -[FMDEraseProxy eraseDeviceWithOptions:completion:]


FMDEmergencyCallInfoPublisher : NSObject
 @property  FMDEmergencyCallInfoPublisherConfiguration *publisherConfig

  // instance methods
  -[FMDEmergencyCallInfoPublisher .cxx_destruct]
  -[FMDEmergencyCallInfoPublisher initWithConfiguration:]
  -[FMDEmergencyCallInfoPublisher publishInfo:completion:]
  -[FMDEmergencyCallInfoPublisher publisherConfig]
  -[FMDEmergencyCallInfoPublisher setPublisherConfig:]


FMDPairingLockRegisterRequestInfo : NSObject <NSSecureCoding>
 @property  NSString *serialNumber
 @property  NSString *accessoryType
 @property  NSString *lostModePublicKey

  // class methods
  +[FMDPairingLockRegisterRequestInfo supportsSecureCoding]

  // instance methods
  -[FMDPairingLockRegisterRequestInfo serialNumber]
  -[FMDPairingLockRegisterRequestInfo setAccessoryType:]
  -[FMDPairingLockRegisterRequestInfo setSerialNumber:]
  -[FMDPairingLockRegisterRequestInfo accessoryType]
  -[FMDPairingLockRegisterRequestInfo initWithCoder:]
  -[FMDPairingLockRegisterRequestInfo .cxx_destruct]
  -[FMDPairingLockRegisterRequestInfo encodeWithCoder:]
  -[FMDPairingLockRegisterRequestInfo lostModePublicKey]
  -[FMDPairingLockRegisterRequestInfo setLostModePublicKey:]


FMDPairingCheckCommandResponseInfo : NSObject <NSSecureCoding>
 @property  NSString *signature
 @property  NSString *serverNonce
 @property  NSString *phoneNumber
 @property  NSString *statusCode
 @property  NSString *lostModeInfo
 @property  NSString *useEraseKeyType

  // class methods
  +[FMDPairingCheckCommandResponseInfo supportsSecureCoding]

  // instance methods
  -[FMDPairingCheckCommandResponseInfo lostModeInfo]
  -[FMDPairingCheckCommandResponseInfo initWithCoder:]
  -[FMDPairingCheckCommandResponseInfo setSignature:]
  -[FMDPairingCheckCommandResponseInfo setPhoneNumber:]
  -[FMDPairingCheckCommandResponseInfo .cxx_destruct]
  -[FMDPairingCheckCommandResponseInfo phoneNumber]
  -[FMDPairingCheckCommandResponseInfo setLostModeInfo:]
  -[FMDPairingCheckCommandResponseInfo setStatusCode:]
  -[FMDPairingCheckCommandResponseInfo signature]
  -[FMDPairingCheckCommandResponseInfo statusCode]
  -[FMDPairingCheckCommandResponseInfo encodeWithCoder:]
  -[FMDPairingCheckCommandResponseInfo serverNonce]
  -[FMDPairingCheckCommandResponseInfo useEraseKeyType]
  -[FMDPairingCheckCommandResponseInfo setServerNonce:]
  -[FMDPairingCheckCommandResponseInfo setUseEraseKeyType:]


FMDVolatileMetaDataRecord : NSObject <NSSecureCoding, FMDDictionaryRepresentable>
 @property  NSDictionary *dictionary
 @property  NSDictionary *dictionaryValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FMDVolatileMetaDataRecord supportsSecureCoding]

  // instance methods
  -[FMDVolatileMetaDataRecord initWithCoder:]
  -[FMDVolatileMetaDataRecord .cxx_destruct]
  -[FMDVolatileMetaDataRecord dictionaryValue]
  -[FMDVolatileMetaDataRecord dictionary]
  -[FMDVolatileMetaDataRecord init]
  -[FMDVolatileMetaDataRecord appendMetaData:]
  -[FMDVolatileMetaDataRecord setDictionary:]
  -[FMDVolatileMetaDataRecord initWithDictionary:]
  -[FMDVolatileMetaDataRecord encodeWithCoder:]


FMDPairingLockUpdateRequestInfo : NSObject <NSSecureCoding>
 @property  NSString *pairingCheckToken
 @property  NSString *lostModePubKey
 @property  NSString *userPrivateKey
 @property  NSString *serialNumber
 @property  NSString *timeStamp

  // class methods
  +[FMDPairingLockUpdateRequestInfo supportsSecureCoding]

  // instance methods
  -[FMDPairingLockUpdateRequestInfo serialNumber]
  -[FMDPairingLockUpdateRequestInfo setSerialNumber:]
  -[FMDPairingLockUpdateRequestInfo initWithCoder:]
  -[FMDPairingLockUpdateRequestInfo .cxx_destruct]
  -[FMDPairingLockUpdateRequestInfo timeStamp]
  -[FMDPairingLockUpdateRequestInfo setTimeStamp:]
  -[FMDPairingLockUpdateRequestInfo encodeWithCoder:]
  -[FMDPairingLockUpdateRequestInfo pairingCheckToken]
  -[FMDPairingLockUpdateRequestInfo setPairingCheckToken:]
  -[FMDPairingLockUpdateRequestInfo lostModePubKey]
  -[FMDPairingLockUpdateRequestInfo userPrivateKey]
  -[FMDPairingLockUpdateRequestInfo setLostModePubKey:]
  -[FMDPairingLockUpdateRequestInfo setUserPrivateKey:]


FMDActivationLockInfo : NSObject <NSSecureCoding>
 @property  NSString *title
 @property  BOOL isActivationLocked
 @property  NSString *maskedAppleID
 @property  NSString *maskedOrganizationID
 @property  BOOL isOfflineFindingEnabled
 @property  NSDictionary *localeStrings
 @property  BOOL isRestrictedSKU
 @property  BOOL isFindMyLPEMEnabled

  // class methods
  +[FMDActivationLockInfo supportsSecureCoding]

  // instance methods
  -[FMDActivationLockInfo isOfflineFindingEnabled]
  -[FMDActivationLockInfo initWithCoder:]
  -[FMDActivationLockInfo isActivationLocked]
  -[FMDActivationLockInfo setTitle:]
  -[FMDActivationLockInfo setIsOfflineFindingEnabled:]
  -[FMDActivationLockInfo .cxx_destruct]
  -[FMDActivationLockInfo setIsFindMyLPEMEnabled:]
  -[FMDActivationLockInfo setMaskedAppleID:]
  -[FMDActivationLockInfo isFindMyLPEMEnabled]
  -[FMDActivationLockInfo setMaskedOrganizationID:]
  -[FMDActivationLockInfo setLocaleStrings:]
  -[FMDActivationLockInfo setIsActivationLocked:]
  -[FMDActivationLockInfo maskedOrganizationID]
  -[FMDActivationLockInfo title]
  -[FMDActivationLockInfo setIsRestrictedSKU:]
  -[FMDActivationLockInfo isRestrictedSKU]
  -[FMDActivationLockInfo localeStrings]
  -[FMDActivationLockInfo maskedAppleID]
  -[FMDActivationLockInfo encodeWithCoder:]


FMDAudioAccessoryInfo : NSObject <NSSecureCoding>
 @property  NSString *systemSerialNumber
 @property  NSString *leftSerialNumber
 @property  NSString *rightSerialNumber

  // class methods
  +[FMDAudioAccessoryInfo supportsSecureCoding]

  // instance methods
  -[FMDAudioAccessoryInfo initWithCoder:]
  -[FMDAudioAccessoryInfo .cxx_destruct]
  -[FMDAudioAccessoryInfo initWithSystemSerialNumber:leftSerialNumber:rightSerialNumber:]
  -[FMDAudioAccessoryInfo rightSerialNumber]
  -[FMDAudioAccessoryInfo leftSerialNumber]
  -[FMDAudioAccessoryInfo setSystemSerialNumber:]
  -[FMDAudioAccessoryInfo systemSerialNumber]
  -[FMDAudioAccessoryInfo setLeftSerialNumber:]
  -[FMDAudioAccessoryInfo setRightSerialNumber:]
  -[FMDAudioAccessoryInfo encodeWithCoder:]


FMDAccessoryIdentifier : NSObject <FMDCodable, NSCopying, FMDIdentifiable>
 @property  NSString *string
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL valid

  // class methods
  +[FMDAccessoryIdentifier supportsSecureCoding]

  // instance methods
  -[FMDAccessoryIdentifier stringValue]
  -[FMDAccessoryIdentifier initWithCoder:]
  -[FMDAccessoryIdentifier isValid]
  -[FMDAccessoryIdentifier .cxx_destruct]
  -[FMDAccessoryIdentifier initWithFMDCoder:error:]
  -[FMDAccessoryIdentifier computeAccessoryIdentifierWithAddress:]
  -[FMDAccessoryIdentifier isEqual:]
  -[FMDAccessoryIdentifier initWithString:]
  -[FMDAccessoryIdentifier string]
  -[FMDAccessoryIdentifier initWithDeviceVendor:deviceProductId:]
  -[FMDAccessoryIdentifier initWithAddress:]
  -[FMDAccessoryIdentifier setString:]
  -[FMDAccessoryIdentifier copyWithZone:]
  -[FMDAccessoryIdentifier encodeWithCoder:]
  -[FMDAccessoryIdentifier encodeWithFMDCoder:error:]


FMDActivationLockAuthInfo : NSObject <NSSecureCoding>
 @property  NSString *pet
 @property  NSString *username
 @property  BOOL isFindMyON
 @property  BOOL isActivationLockEnabled
 @property  BOOL isSignedIntoICloud
 @property  BOOL isAccountHSA2
 @property  NSString *dsid
 @property  NSString *altDsid

  // class methods
  +[FMDActivationLockAuthInfo supportsSecureCoding]

  // instance methods
  -[FMDActivationLockAuthInfo pet]
  -[FMDActivationLockAuthInfo setDsid:]
  -[FMDActivationLockAuthInfo dsid]
  -[FMDActivationLockAuthInfo initWithCoder:]
  -[FMDActivationLockAuthInfo .cxx_destruct]
  -[FMDActivationLockAuthInfo username]
  -[FMDActivationLockAuthInfo setPet:]
  -[FMDActivationLockAuthInfo altDsid]
  -[FMDActivationLockAuthInfo setUsername:]
  -[FMDActivationLockAuthInfo encodeWithCoder:]
  -[FMDActivationLockAuthInfo setIsAccountHSA2:]
  -[FMDActivationLockAuthInfo setIsSignedIntoICloud:]
  -[FMDActivationLockAuthInfo setIsFindMyON:]
  -[FMDActivationLockAuthInfo setIsActivationLockEnabled:]
  -[FMDActivationLockAuthInfo setAltDsid:]
  -[FMDActivationLockAuthInfo isAccountHSA2]
  -[FMDActivationLockAuthInfo isSignedIntoICloud]
  -[FMDActivationLockAuthInfo isFindMyON]
  -[FMDActivationLockAuthInfo isActivationLockEnabled]


FMDExtHostContext : FMDExtensionContext <FMDExtAccessoryDelegateProtocol>
 @property  <FMDExtAccessoryDelegateProtocol> *accessoryDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FMDExtHostContext methodSignatureForSelector:]
  -[FMDExtHostContext .cxx_destruct]
  -[FMDExtHostContext init]
  -[FMDExtHostContext respondsToSelector:]
  -[FMDExtHostContext setAccessoryDelegate:]
  -[FMDExtHostContext forwardInvocation:]
  -[FMDExtHostContext accessoryDelegate]


FMDFMIPAccountInfo : NSObject <NSSecureCoding>
 @property  NSString *username
 @property  NSString *dsid
 @property  NSString *oneTimeRemoveAuthToken
 @property  NSURL *serverURL

  // class methods
  +[FMDFMIPAccountInfo supportsSecureCoding]

  // instance methods
  -[FMDFMIPAccountInfo setDsid:]
  -[FMDFMIPAccountInfo dsid]
  -[FMDFMIPAccountInfo initWithCoder:]
  -[FMDFMIPAccountInfo .cxx_destruct]
  -[FMDFMIPAccountInfo serverURL]
  -[FMDFMIPAccountInfo username]
  -[FMDFMIPAccountInfo setUsername:]
  -[FMDFMIPAccountInfo setServerURL:]
  -[FMDFMIPAccountInfo encodeWithCoder:]
  -[FMDFMIPAccountInfo oneTimeRemoveAuthToken]
  -[FMDFMIPAccountInfo setOneTimeRemoveAuthToken:]
  -[FMDFMIPAccountInfo initWithUserName:dsid:oneTimeRemoveAuthToken:serverURL:]


FMDPairingLockRegisterResponseInfo : NSObject <NSSecureCoding>
 @property  NSString *serialNumber
 @property  NSString *pairingToken

  // class methods
  +[FMDPairingLockRegisterResponseInfo supportsSecureCoding]

  // instance methods
  -[FMDPairingLockRegisterResponseInfo serialNumber]
  -[FMDPairingLockRegisterResponseInfo setSerialNumber:]
  -[FMDPairingLockRegisterResponseInfo initWithCoder:]
  -[FMDPairingLockRegisterResponseInfo .cxx_destruct]
  -[FMDPairingLockRegisterResponseInfo encodeWithCoder:]
  -[FMDPairingLockRegisterResponseInfo pairingToken]
  -[FMDPairingLockRegisterResponseInfo setPairingToken:]


FMNSXPCConnection : NSObject <FMNSXPCConnecting>
 @property  NSXPCConnection *connection
 @property  FMFuture *future
 @property  BOOL _testMockConnection
 @property  long long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FMNSXPCConnection future]
  -[FMNSXPCConnection addFailureBlock:]
  -[FMNSXPCConnection .cxx_destruct]
  -[FMNSXPCConnection remoteObjectProxy]
  -[FMNSXPCConnection setConnection:]
  -[FMNSXPCConnection connection]
  -[FMNSXPCConnection setFuture:]
  -[FMNSXPCConnection state]
  -[FMNSXPCConnection set_testMockConnection:]
  -[FMNSXPCConnection initWithConfiguration:]
  -[FMNSXPCConnection destroyXPCConnection]
  -[FMNSXPCConnection dealloc]
  -[FMNSXPCConnection invalidate]
  -[FMNSXPCConnection initWithConfiguration:exportedObject:]
  -[FMNSXPCConnection _testMockConnection]


FMDEraseOptions : NSObject <NSSecureCoding>
 @property  BOOL useObliteration
 @property  BOOL brickDevice
 @property  double customDelay
 @property  double maxDelayInterval
 @property  BOOL hasBridgeCoProcessor

  // class methods
  +[FMDEraseOptions supportsSecureCoding]

  // instance methods
  -[FMDEraseOptions initWithCoder:]
  -[FMDEraseOptions encodeWithCoder:]
  -[FMDEraseOptions useObliteration]
  -[FMDEraseOptions brickDevice]
  -[FMDEraseOptions maxDelayInterval]
  -[FMDEraseOptions customDelay]
  -[FMDEraseOptions hasBridgeCoProcessor]
  -[FMDEraseOptions setUseObliteration:]
  -[FMDEraseOptions setBrickDevice:]
  -[FMDEraseOptions setCustomDelay:]
  -[FMDEraseOptions setMaxDelayInterval:]
  -[FMDEraseOptions setHasBridgeCoProcessor:]


FMDSecureLocationContext : NSObject <NSSecureCoding>
 @property  NSString *findMyId
 @property  NSString *mode

  // class methods
  +[FMDSecureLocationContext supportsSecureCoding]

  // instance methods
  -[FMDSecureLocationContext initWithCoder:]
  -[FMDSecureLocationContext .cxx_destruct]
  -[FMDSecureLocationContext findMyId]
  -[FMDSecureLocationContext setMode:]
  -[FMDSecureLocationContext mode]
  -[FMDSecureLocationContext encodeWithCoder:]
  -[FMDSecureLocationContext setFindMyId:]


FMDBAAAttestation : NSObject <NSSecureCoding>
 @property  NSData *attestation
 @property  NSData *signature

  // class methods
  +[FMDBAAAttestation supportsSecureCoding]

  // instance methods
  -[FMDBAAAttestation initWithCoder:]
  -[FMDBAAAttestation setSignature:]
  -[FMDBAAAttestation setAttestation:]
  -[FMDBAAAttestation .cxx_destruct]
  -[FMDBAAAttestation signature]
  -[FMDBAAAttestation attestation]
  -[FMDBAAAttestation encodeWithCoder:]
  -[FMDBAAAttestation initWithAttestation:signature:]


FMDIdentitySigningRequest : NSObject <NSSecureCoding>
 @property  NSData *dataToSign
 @property  BOOL useSCRT
 @property  long long validityInMinutes

  // class methods
  +[FMDIdentitySigningRequest supportsSecureCoding]

  // instance methods
  -[FMDIdentitySigningRequest initWithCoder:]
  -[FMDIdentitySigningRequest .cxx_destruct]
  -[FMDIdentitySigningRequest useSCRT]
  -[FMDIdentitySigningRequest initWithData:]
  -[FMDIdentitySigningRequest encodeWithCoder:]
  -[FMDIdentitySigningRequest setDataToSign:]
  -[FMDIdentitySigningRequest setValidityInMinutes:]
  -[FMDIdentitySigningRequest setUseSCRT:]
  -[FMDIdentitySigningRequest dataToSign]
  -[FMDIdentitySigningRequest validityInMinutes]


(FMDVolatileMetaDataRecord)
	// instance methods
	-[(FMDVolatileMetaDataRecord) fm_dictionaryByDeeplySettingValuesForKeysWithDictionary:]

01 00 0100 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMFuture 
01 00 0100 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMPreferencesUtil 
01 00 0100 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMSharedFileContainer 
01 00 0100 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMSynchronizer 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
