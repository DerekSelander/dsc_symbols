|| __DATA.__objc_data _OBJC_CLASS_$_DNDAppInfoService
|| __DATA.__objc_data _OBJC_CLASS_$_DNDAuxiliaryStateService
|| __DATA.__objc_data _OBJC_CLASS_$_DNDAvailabilityService
|| __DATA.__objc_data _OBJC_CLASS_$_DNDDevice
|| __DATA.__objc_data _OBJC_CLASS_$_DNDDiffBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_DNDMeDeviceService
|| __DATA.__objc_data _OBJC_CLASS_$_DNDModeAssertionCurrentLocationLifetime
|| __DATA.__objc_data _OBJC_CLASS_$_DNDModeAssertionExplicitRegionLifetime
|| __DATA.__objc_data _OBJC_CLASS_$_DNDModeAssertionUserRequestedLifetime
|| __DATA.__objc_data _OBJC_CLASS_$_DNDModeConfigurationAppForegroundTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_DNDModeConfigurationDrivingTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_DNDModeConfigurationGameControllerTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_DNDModeConfigurationLocationTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_DNDModeConfigurationMindfulnessTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_DNDModeConfigurationScreenActivityTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_DNDModeConfigurationSleepingTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_DNDModeConfigurationSmartTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_DNDModeConfigurationWorkoutTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_DNDModeSelectionService
|| __DATA.__objc_data _OBJC_CLASS_$_DNDMutableAppInfo
|| __DATA.__objc_data _OBJC_CLASS_$_DNDMutableApplicationConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_DNDMutableBehaviorSettings
|| __DATA.__objc_data _OBJC_CLASS_$_DNDMutableBypassSettings
|| __DATA.__objc_data _OBJC_CLASS_$_DNDMutableContact
|| __DATA.__objc_data _OBJC_CLASS_$_DNDMutableContactHandle
|| __DATA.__objc_data _OBJC_CLASS_$_DNDMutableMode
|| __DATA.__objc_data _OBJC_CLASS_$_DNDMutableModeAssertionDetails
|| __DATA.__objc_data _OBJC_CLASS_$_DNDMutableModeAssertionInvalidationDetails
|| __DATA.__objc_data _OBJC_CLASS_$_DNDMutableScheduleSettings
|| __DATA.__objc_data _OBJC_CLASS_$_DNDMutableScheduleTime
|| __DATA.__objc_data _OBJC_CLASS_$_DNDMutableScheduleTimePeriod
|| __DATA.__objc_data _OBJC_CLASS_$_DNDRemoteAvailabilityServiceConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDAppInfoService
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDAuxiliaryStateService
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDAvailabilityService
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDDiffBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDMeDeviceService
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDModeAssertionCurrentLocationLifetime
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDModeAssertionExplicitRegionLifetime
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDModeAssertionUserRequestedLifetime
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDModeConfigurationAppForegroundTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDModeConfigurationDrivingTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDModeConfigurationGameControllerTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDModeConfigurationLocationTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDModeConfigurationMindfulnessTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDModeConfigurationScreenActivityTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDModeConfigurationSleepingTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDModeConfigurationSmartTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDModeConfigurationWorkoutTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDModeSelectionService
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDMutableAppInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDMutableApplicationConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDMutableBehaviorSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDMutableBypassSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDMutableContact
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDMutableMode
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDMutableModeAssertionDetails
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDMutableModeAssertionInvalidationDetails
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDMutableScheduleSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDMutableScheduleTime
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDMutableScheduleTimePeriod
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDRemoteAvailabilityServiceConnection
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDAppInfo._applicationIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDAppInfo._cachedIconURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDAppInfo._displayName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDAppInfo._source
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDAppInfo._storeIconURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDApplicationConfiguration._allowedThreads
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDApplicationConfiguration._deniedThreads
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDApplicationConfiguration._minimumBreakthroughUrgency
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDApplicationIdentifier._bundleID
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDApplicationIdentifier._platform
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDBehaviorSettings._interruptionBehaviorSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDBypassSettings._immediateBypassCNGroupIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDBypassSettings._immediateBypassEventSourceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDBypassSettings._repeatEventSourceBehaviorEnabledSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDClientEventDetails._behavior
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDClientEventDetails._bundleIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDClientEventDetails._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDClientEventDetails._notifyAnyway
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDClientEventDetails._sender
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDClientEventDetails._threadIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDClientEventDetails._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDClientEventDetails._urgency
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDConfiguration._allowedApplicationIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDConfiguration._compatibilityVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDConfiguration._deniedApplicationIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDConfiguration._hideApplicationBadges
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDConfiguration._minimumBreakthroughUrgency
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDConfiguration._senderConfiguration
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDConfiguration._suppressionType
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDConfiguration._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDContact._contactIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDContact._emailAddresses
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDContact._firstName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDContact._lastName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDContact._middleName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDContact._nickName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDContact._organizationName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDContact._phoneNumbers
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDContactHandle._contactIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDContactHandle._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDContactHandle._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDMode._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDMode._symbolImageName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDMode._tintColorName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeAssertionDetails._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeAssertionDetails._lifetime
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeAssertionDetails._modeConfigurationModifiedDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeAssertionDetails._modeIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeAssertionDetails._reason
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeAssertionDetails._userVisibleEndDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeAssertionInvalidationDetails._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeConfiguration._automaticallyGenerated
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeConfiguration._compatibilityVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeConfiguration._configuration
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeConfiguration._created
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeConfiguration._dimsLockScreen
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeConfiguration._hasSecureData
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeConfiguration._impactsAvailability
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeConfiguration._lastModified
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeConfiguration._mode
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDModeConfiguration._triggers
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDScheduleSettings._bedtimeBehaviorEnabledSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDScheduleSettings._scheduleEnabledSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDScheduleSettings._timePeriod
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDScheduleTime._hour
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDScheduleTime._minute
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDScheduleTimePeriod._endTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDScheduleTimePeriod._startTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDScheduleTimePeriod._weekdays
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSenderConfiguration._allowedContactGroups
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSenderConfiguration._allowedContactTypes
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSenderConfiguration._allowedContacts
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSenderConfiguration._deniedContactGroups
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSenderConfiguration._deniedContactTypes
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSenderConfiguration._deniedContacts
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSenderConfiguration._phoneCallBypassSettings
|| __DATA_CONST.__const _DNDDefaultModeIdentifier
|| __DATA_CONST.__const _DNDDefaultScheduleIdentifier
|| __DATA_CONST.__const _DNDErrorDomain
|| __DATA_CONST.__const _DNDSettingsBedtimeModeIdentifier
|| __DATA_CONST.__const _DNDSystemClientIdentifier
|| __DATA_DIRTY.__common _DNDLogAuxiliaryState
|| __DATA_DIRTY.__common _DNDLogBehaviorResolution
|| __DATA_DIRTY.__common _DNDLogGlobalConfiguration
|| __DATA_DIRTY.__common _DNDLogMeDeviceService
|| __DATA_DIRTY.__common _DNDLogModeAssertion
|| __DATA_DIRTY.__common _DNDLogModeConfiguration
|| __DATA_DIRTY.__common _DNDLogModeSelection
|| __DATA_DIRTY.__common _DNDLogRemoteConnection
|| __DATA_DIRTY.__common _DNDLogSettings
|| __DATA_DIRTY.__common _DNDLogState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDAppInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDApplicationConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDApplicationIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDBehaviorSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDBypassSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDClientEventBehavior
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDClientEventDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDContact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDContactHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDEventBehaviorResolutionService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDGlobalConfigurationService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDMeDeviceState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDMode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeAssertionCalendarEventLifetime
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeAssertionDateIntervalLifetime
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeAssertionDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeAssertionInvalidation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeAssertionInvalidationDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeAssertionLifetime
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeAssertionScheduleLifetime
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeAssertionService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeAssertionSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeConfigurationScheduleTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeConfigurationService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDModeConfigurationTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDMutableClientEventDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDMutableConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDMutableModeConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDMutableSenderConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDRemoteServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDRequestDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDScheduleSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDScheduleTime
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDScheduleTimePeriod
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSenderConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSettingsService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDStateModeAssertionMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDStateService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDStateUpdate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDAppInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDApplicationConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDApplicationIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDBehaviorSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDBypassSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDClientEventBehavior
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDClientEventDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDContact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDContactHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDEventBehaviorResolutionService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDGlobalConfigurationService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDMeDeviceState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDMode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeAssertionCalendarEventLifetime
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeAssertionDateIntervalLifetime
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeAssertionDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeAssertionInvalidation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeAssertionInvalidationDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeAssertionLifetime
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeAssertionScheduleLifetime
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeAssertionService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeAssertionSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeConfigurationScheduleTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeConfigurationService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDModeConfigurationTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDMutableClientEventDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDMutableConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDMutableContactHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDMutableModeConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDMutableSenderConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDRemoteServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDRequestDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDScheduleSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDScheduleTime
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDScheduleTimePeriod
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSenderConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSettingsService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDStateModeAssertionMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDStateService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDStateUpdate
|| __TEXT.__const _DNDWeekdaysEveryday
|| __TEXT.__const _DNDWeekdaysUnset
|| __TEXT.__const _DNDWeekdaysWeekdays
|| __TEXT.__const _DNDWeekdaysWeekends
|| __TEXT.__const _DoNotDisturbVersionNumber
|| __TEXT.__const _DoNotDisturbVersionString
|| __TEXT.__const _kDefaultBedtimeBehaviorEnabledSetting
|| __TEXT.__const _kDefaultDimsLockScreenSetting
|| __TEXT.__const _kDefaultImmediateBypassEventSourceType
|| __TEXT.__const _kDefaultImmediateBypassEventSourceTypePhone
|| __TEXT.__const _kDefaultImpactsAvailabilitySetting
|| __TEXT.__const _kDefaultResolvedRepeatEventSourceBehaviorEnabledSetting
|| __TEXT.__const _kDefaultScheduleEnabledSetting
|| __TEXT.__const _kDefaultSetting
|| __TEXT.__const _kDefaultSettingCanUILock
|| __TEXT.__const _kMaximumLifetimeDuration
|| __TEXT.__text _DNDCompatibilityVersionStringify
|| __TEXT.__text _DNDCompatibilityVersionToString
|| __TEXT.__text _DNDDayForWeekdays
|| __TEXT.__text _DNDDeviceClassFromMGDeviceClass
|| __TEXT.__text _DNDEnabledSettingToString
|| __TEXT.__text _DNDEnumerateDaysOfWeekStartingOnDay
|| __TEXT.__text _DNDEventSourceTypeToString
|| __TEXT.__text _DNDIdentifierStringForWeekdays
|| __TEXT.__text _DNDInterruptionBehaviorToString
|| __TEXT.__text _DNDInterruptionSuppressionToString
|| __TEXT.__text _DNDMeDeviceStatusToString
|| __TEXT.__text _DNDModeAssertionInvalidationReasonOverrideToString
|| __TEXT.__text _DNDModeAssertionInvalidationReasonToString
|| __TEXT.__text _DNDModeAssertionReasonToString
|| __TEXT.__text _DNDModeLocalizedNameForSemanticType
|| __TEXT.__text _DNDModeLocalizedNameKeyForSemanticType
|| __TEXT.__text _DNDModeSemanticTypeToString
|| __TEXT.__text _DNDMostRestrictiveInterruptionSuppression
|| __TEXT.__text _DNDNextDay
|| __TEXT.__text _DNDPlatformForCurrentDevice
|| __TEXT.__text _DNDPreviousDay
|| __TEXT.__text _DNDRegisterLogging
|| __TEXT.__text _DNDRemoteAvailabilityServiceServerInterface
|| __TEXT.__text _DNDRemoteMonitorServerInterface
|| __TEXT.__text _DNDRemoteServiceServerInterface
|| __TEXT.__text _DNDResolutionReasonToString
|| __TEXT.__text _DNDResolvedBedtimeBehaviorEnabledSetting
|| __TEXT.__text _DNDResolvedDimsLockScreenSetting
|| __TEXT.__text _DNDResolvedHideApplicationBadgesSetting
|| __TEXT.__text _DNDResolvedImmediateBypassEventSourceType
|| __TEXT.__text _DNDResolvedImmediateBypassEventSourceTypeForDevice
|| __TEXT.__text _DNDResolvedImpactsAvailabilitySetting
|| __TEXT.__text _DNDResolvedInterruptionBehavior
|| __TEXT.__text _DNDResolvedInterruptionBehaviorSetting
|| __TEXT.__text _DNDResolvedInterruptionBehaviorSettingForDevice
|| __TEXT.__text _DNDResolvedModeAssertionInvalidationReason
|| __TEXT.__text _DNDResolvedRepeatEventSourceBehaviorEnabledSetting
|| __TEXT.__text _DNDResolvedRepeatEventSourceBehaviorEnabledSettingForDevice
|| __TEXT.__text _DNDResolvedScheduleEnabledSetting
|| __TEXT.__text _DNDStateUpdateReasonToString
|| __TEXT.__text _DNDStateUpdateSourceToString
|| __TEXT.__text _DNDStringFromBreakthroughUrgency
|| __TEXT.__text _DNDStringFromClientEventType
|| __TEXT.__text _DNDStringFromClientEventUrgency
|| __TEXT.__text _DNDStringFromConfigurationType
|| __TEXT.__text _DNDStringFromContactHandleType
|| __TEXT.__text _DNDStringFromContactType
|| __TEXT.__text _DNDStringFromDeviceCapabilities
|| __TEXT.__text _DNDStringFromDeviceClass
|| __TEXT.__text _DNDStringFromExceptionType
|| __TEXT.__text _DNDStringFromInterruptionBehaviorSetting
|| __TEXT.__text _DNDStringFromInterruptionSuppressionState
|| __TEXT.__text _DNDStringFromModeAssertionLifetimeType
|| __TEXT.__text _DNDStringFromModeAssertionScheduleLifetimeBehavior
|| __TEXT.__text _DNDStringFromResolutionBehavior
|| __TEXT.__text _DNDSystemImageNameForModeSemanticType
|| __TEXT.__text _DNDWeekdaysFromDay
|| __TEXT.__text _NSStringForDNDDay
|| __TEXT.__text _NSStringFromDNDPlatform
|| __TEXT.__text _NSStringFromDNDWeekdays
__ BaseBoard: _BSDispatchQueueAssert
__ BaseBoard: _BSDispatchQueueCreate
__ BaseBoard: _BSSystemRootDirectory
__ BaseBoard: _OBJC_CLASS_$_BSDispatchQueueAttributes
__ BaseBoard: _OBJC_CLASS_$_BSObjCProtocol
__ BaseBoard: __BSSafeCast
__ BoardServices: _OBJC_CLASS_$_BSMutableServiceInterface
__ BoardServices: _OBJC_CLASS_$_BSServiceConnection
__ BoardServices: _OBJC_CLASS_$_BSServiceConnectionEndpoint
__ BoardServices: _OBJC_CLASS_$_BSServiceQuality
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreLocation: _OBJC_CLASS_$_CLCircularRegion
__ CorePhoneNumbers: _CFPhoneNumberCreate
__ CorePhoneNumbers: _CFPhoneNumberCreateString
__ Foundation: _NSClassFromString
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
DNDScheduleTime : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  unsigned long hour
 @property  unsigned long minute

  // class methods
  +[DNDScheduleTime supportsSecureCoding]
  +[DNDScheduleTime defaultStartTime]
  +[DNDScheduleTime defaultEndTime]

  // instance methods
  -[DNDScheduleTime minute]
  -[DNDScheduleTime hour]
  -[DNDScheduleTime dateComponents]
  -[DNDScheduleTime initWithCoder:]
  -[DNDScheduleTime _initWithTime:]
  -[DNDScheduleTime _initWithHour:minute:]
  -[DNDScheduleTime init]
  -[DNDScheduleTime isEqual:]
  -[DNDScheduleTime mutableCopyWithZone:]
  -[DNDScheduleTime copyWithZone:]
  -[DNDScheduleTime encodeWithCoder:]


DNDMutableScheduleTime : DNDScheduleTime
 @property  unsigned long hour
 @property  unsigned long minute

  // instance methods
  -[DNDMutableScheduleTime setHour:]
  -[DNDMutableScheduleTime setMinute:]
  -[DNDMutableScheduleTime copyWithZone:]


DNDAuxiliaryStateService : NSObject
  // class methods
  +[DNDAuxiliaryStateService initialize]
  +[DNDAuxiliaryStateService serviceForClientIdentifier:]

  // instance methods
  -[DNDAuxiliaryStateService _initWithClientIdentifier:]
  -[DNDAuxiliaryStateService .cxx_destruct]
  -[DNDAuxiliaryStateService setScreenIsShared:screenIsMirrored:error:]


DNDSenderConfiguration : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSSet *allowedContactTypes
 @property  NSSet *deniedContactTypes
 @property  NSSet *allowedContactGroups
 @property  NSSet *deniedContactGroups
 @property  NSSet *allowedContacts
 @property  NSSet *deniedContacts
 @property  DNDBypassSettings *phoneCallBypassSettings

  // class methods
  +[DNDSenderConfiguration supportsSecureCoding]

  // instance methods
  -[DNDSenderConfiguration redactedDescription]
  -[DNDSenderConfiguration allowedContactGroups]
  -[DNDSenderConfiguration initWithCoder:]
  -[DNDSenderConfiguration deniedContactGroups]
  -[DNDSenderConfiguration .cxx_destruct]
  -[DNDSenderConfiguration deniedContacts]
  -[DNDSenderConfiguration phoneCallBypassSettings]
  -[DNDSenderConfiguration _descriptionForRedacted:]
  -[DNDSenderConfiguration init]
  -[DNDSenderConfiguration isEqual:]
  -[DNDSenderConfiguration allowedContacts]
  -[DNDSenderConfiguration _initWithAllowedContactTypes:deniedContactTypes:allowedContactGroups:deniedContactGroups:allowedContacts:deniedContacts:phoneCallBypassSettings:]
  -[DNDSenderConfiguration deniedContactTypes]
  -[DNDSenderConfiguration allowedContactTypes]
  -[DNDSenderConfiguration mutableCopyWithZone:]
  -[DNDSenderConfiguration copyWithZone:]
  -[DNDSenderConfiguration encodeWithCoder:]
  -[DNDSenderConfiguration _redactedDescriptionsForContacts:]
  -[DNDSenderConfiguration _evaluatedBypassSettings:]
  -[DNDSenderConfiguration diffAgainstObject:usingDiffBuilder:withDescription:]


DNDMutableSenderConfiguration : DNDSenderConfiguration
 @property  NSMutableSet *allowedContactTypes
 @property  NSMutableSet *deniedContactTypes
 @property  NSMutableSet *allowedContactGroups
 @property  NSMutableSet *deniedContactGroups
 @property  NSMutableSet *allowedContacts
 @property  NSMutableSet *deniedContacts
 @property  DNDBypassSettings *phoneCallBypassSettings

  // instance methods
  -[DNDMutableSenderConfiguration setPhoneCallBypassSettings:]
  -[DNDMutableSenderConfiguration setDeniedContactGroups:]
  -[DNDMutableSenderConfiguration removeAllowedContactMatchingContact:]
  -[DNDMutableSenderConfiguration setDeniedContacts:]
  -[DNDMutableSenderConfiguration setAllowedContactGroups:]
  -[DNDMutableSenderConfiguration setAllowedContacts:]
  -[DNDMutableSenderConfiguration setDeniedContactTypes:]
  -[DNDMutableSenderConfiguration setAllowedContactTypes:]
  -[DNDMutableSenderConfiguration removeDeniedContactMatchingContact:]


DNDMeDeviceService : NSObject <DNDRemoteServiceConnectionEventListener>
 @property  NSString *clientIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDMeDeviceService initialize]
  +[DNDMeDeviceService serviceForClientIdentifier:]

  // instance methods
  -[DNDMeDeviceService removeListener:]
  -[DNDMeDeviceService _initWithClientIdentifier:]
  -[DNDMeDeviceService .cxx_destruct]
  -[DNDMeDeviceService clientIdentifier]
  -[DNDMeDeviceService addListener:withCompletionHandler:]
  -[DNDMeDeviceService queryCurrentStateWithCompletionHandler:]
  -[DNDMeDeviceService _queue_registerForStateUpdatesIfRequired]
  -[DNDMeDeviceService remoteService:didReceiveUpdatedMeDeviceState:]


DNDConfiguration : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  unsigned long type
 @property  unsigned long suppressionType
 @property  NSDictionary *allowedApplicationIdentifiers
 @property  NSSet *deniedApplicationIdentifiers
 @property  DNDSenderConfiguration *senderConfiguration
 @property  unsigned long minimumBreakthroughUrgency
 @property  unsigned long hideApplicationBadges
 @property  BOOL supportedConfiguration
 @property  long long compatibilityVersion
 @property  NSDictionary *allowedApplications
 @property  NSSet *deniedApplications

  // class methods
  +[DNDConfiguration supportsSecureCoding]
  +[DNDConfiguration defaultSuppressionType]
  +[DNDConfiguration defaultMinimumBreakthroughUrgency]
  +[DNDConfiguration defaultConfigurationType]

  // instance methods
  -[DNDConfiguration log:withPrefix:]
  -[DNDConfiguration redactedDescription]
  -[DNDConfiguration deniedApplications]
  -[DNDConfiguration initWithCoder:]
  -[DNDConfiguration hideApplicationBadges]
  -[DNDConfiguration .cxx_destruct]
  -[DNDConfiguration compatibilityVersion]
  -[DNDConfiguration _descriptionForRedacted:]
  -[DNDConfiguration allowedApplications]
  -[DNDConfiguration senderConfiguration]
  -[DNDConfiguration isEqual:]
  -[DNDConfiguration type]
  -[DNDConfiguration suppressionType]
  -[DNDConfiguration mutableCopyWithZone:]
  -[DNDConfiguration minimumBreakthroughUrgency]
  -[DNDConfiguration copyWithZone:]
  -[DNDConfiguration encodeWithCoder:]
  -[DNDConfiguration exceptionForApplication:]
  -[DNDConfiguration exceptionForContactHandle:]
  -[DNDConfiguration diffAgainstObject:usingDiffBuilder:withDescription:]
  -[DNDConfiguration _initWithConfigurationType:suppressionType:allowedApplicationIdentifiers:deniedApplicationIdentifiers:senderConfiguration:minimumBreakthroughUrgency:hideApplicationBadges:compatibilityVersion:]
  -[DNDConfiguration allowedApplicationIdentifiers]
  -[DNDConfiguration deniedApplicationIdentifiers]
  -[DNDConfiguration _exceptionForApplicationIdentifier:thread:]
  -[DNDConfiguration _initWithConfigurationType:]
  -[DNDConfiguration exceptionForApplication:thread:]
  -[DNDConfiguration exceptionForApplicationIdentifier:]
  -[DNDConfiguration exceptionForApplicationIdentifier:thread:]
  -[DNDConfiguration exceptionForContact:]
  -[DNDConfiguration isSupportedConfiguration]


DNDMutableConfiguration : DNDConfiguration
 @property  unsigned long suppressionType
 @property  NSDictionary *allowedApplicationIdentifiers
 @property  NSSet *deniedApplicationIdentifiers
 @property  DNDSenderConfiguration *senderConfiguration
 @property  unsigned long minimumBreakthroughUrgency
 @property  unsigned long hideApplicationBadges
 @property  long long compatibilityVersion
 @property  NSDictionary *allowedApplications
 @property  NSSet *deniedApplications

  // class methods
  +[DNDMutableConfiguration configurationOfType:]
  +[DNDMutableConfiguration defaultConfiguration]

  // instance methods
  -[DNDMutableConfiguration setCompatibilityVersion:]
  -[DNDMutableConfiguration setMinimumBreakthroughUrgency:]
  -[DNDMutableConfiguration removeExceptionForContactGroup:]
  -[DNDMutableConfiguration setHideApplicationBadges:]
  -[DNDMutableConfiguration setExceptionOfType:forContactGroup:]
  -[DNDMutableConfiguration setDeniedApplications:]
  -[DNDMutableConfiguration _configurationForApplicationIdentifier:]
  -[DNDMutableConfiguration setAllowedApplications:]
  -[DNDMutableConfiguration removeExceptionForApplication:thread:]
  -[DNDMutableConfiguration removeExceptionForApplicationIdentifier:thread:]
  -[DNDMutableConfiguration removeExceptionForApplicationIdentifier:]
  -[DNDMutableConfiguration setDeniedApplicationIdentifiers:]
  -[DNDMutableConfiguration setSuppressionType:]
  -[DNDMutableConfiguration setExceptionOfType:forApplication:]
  -[DNDMutableConfiguration removeExceptionForApplication:]
  -[DNDMutableConfiguration setMinimumBreakthroughUrgency:forApplication:]
  -[DNDMutableConfiguration setExceptionOfType:forApplication:thread:]
  -[DNDMutableConfiguration setExceptionOfType:forApplicationIdentifier:]
  -[DNDMutableConfiguration setExceptionOfType:forApplicationIdentifier:thread:]
  -[DNDMutableConfiguration setAllowedApplicationIdentifiers:]
  -[DNDMutableConfiguration removeExceptionForContactType:]
  -[DNDMutableConfiguration removeExceptionForContact:]
  -[DNDMutableConfiguration hasSecureData]
  -[DNDMutableConfiguration setExceptionOfType:forContactType:]
  -[DNDMutableConfiguration setExceptionOfType:forContact:]
  -[DNDMutableConfiguration setMinimumBreakthroughUrgency:forApplicationIdentifier:]
  -[DNDMutableConfiguration setSenderConfiguration:]


DNDModeAssertion : NSObject <NSCopying, NSSecureCoding>
 @property  NSUUID *UUID
 @property  NSDate *startDate
 @property  DNDModeAssertionDetails *details
 @property  DNDModeAssertionSource *source

  // class methods
  +[DNDModeAssertion supportsSecureCoding]

  // instance methods
  -[DNDModeAssertion UUID]
  -[DNDModeAssertion initWithCoder:]
  -[DNDModeAssertion .cxx_destruct]
  -[DNDModeAssertion isEqual:]
  -[DNDModeAssertion details]
  -[DNDModeAssertion startDate]
  -[DNDModeAssertion copyWithZone:]
  -[DNDModeAssertion source]
  -[DNDModeAssertion encodeWithCoder:]
  -[DNDModeAssertion initWithUUID:startDate:details:source:]


DNDBehaviorSettings : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  unsigned long interruptionBehavior
 @property  unsigned long interruptionBehaviorSetting

  // class methods
  +[DNDBehaviorSettings supportsSecureCoding]

  // instance methods
  -[DNDBehaviorSettings _initWithSettings:]
  -[DNDBehaviorSettings initWithCoder:]
  -[DNDBehaviorSettings interruptionBehaviorSetting]
  -[DNDBehaviorSettings init]
  -[DNDBehaviorSettings isEqual:]
  -[DNDBehaviorSettings _initWithInterruptionBehaviorSetting:]
  -[DNDBehaviorSettings mutableCopyWithZone:]
  -[DNDBehaviorSettings copyWithZone:]
  -[DNDBehaviorSettings encodeWithCoder:]
  -[DNDBehaviorSettings interruptionBehavior]


DNDMutableBehaviorSettings : DNDBehaviorSettings
 @property  unsigned long interruptionBehavior
 @property  unsigned long interruptionBehaviorSetting

  // instance methods
  -[DNDMutableBehaviorSettings setInterruptionBehavior:]
  -[DNDMutableBehaviorSettings setInterruptionBehaviorSetting:]
  -[DNDMutableBehaviorSettings copyWithZone:]


DNDMeDeviceState : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long meDeviceStatus
 @property  NSString *meDeviceName

  // class methods
  +[DNDMeDeviceState supportsSecureCoding]

  // instance methods
  -[DNDMeDeviceState initWithCoder:]
  -[DNDMeDeviceState .cxx_destruct]
  -[DNDMeDeviceState isEqual:]
  -[DNDMeDeviceState meDeviceName]
  -[DNDMeDeviceState copyWithZone:]
  -[DNDMeDeviceState encodeWithCoder:]
  -[DNDMeDeviceState meDeviceStatus]
  -[DNDMeDeviceState initWithStatus:name:]


DNDDiffBuilder : NSObject
 @property  id object1
 @property  id object2
 @property  NSString *description
 @property  NSArray *children
 @property  BOOL hasDifferences

  // instance methods
  -[DNDDiffBuilder log:withPrefix:]
  -[DNDDiffBuilder children]
  -[DNDDiffBuilder .cxx_destruct]
  -[DNDDiffBuilder descriptionWithIndent:]
  -[DNDDiffBuilder init]
  -[DNDDiffBuilder object1]
  -[DNDDiffBuilder object2]
  -[DNDDiffBuilder hasDifferences]
  -[DNDDiffBuilder diffObject:againstObject:withDescription:]
  -[DNDDiffBuilder diffObject:againstObject:]


DNDModeAssertionDateIntervalLifetime : DNDModeAssertionLifetime
 @property  NSDateInterval *dateInterval

  // class methods
  +[DNDModeAssertionDateIntervalLifetime supportsSecureCoding]

  // instance methods
  -[DNDModeAssertionDateIntervalLifetime initWithCoder:]
  -[DNDModeAssertionDateIntervalLifetime .cxx_destruct]
  -[DNDModeAssertionDateIntervalLifetime dateInterval]
  -[DNDModeAssertionDateIntervalLifetime isEqual:]
  -[DNDModeAssertionDateIntervalLifetime initWithDateInterval:]
  -[DNDModeAssertionDateIntervalLifetime encodeWithCoder:]
  -[DNDModeAssertionDateIntervalLifetime isActiveForDate:]
  -[DNDModeAssertionDateIntervalLifetime lifetimeType]


DNDAppInfo : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  long long source
 @property  DNDApplicationIdentifier *applicationIdentifier
 @property  NSString *displayName
 @property  NSURL *storeIconURL
 @property  NSURL *cachedIconURL

  // class methods
  +[DNDAppInfo supportsSecureCoding]

  // instance methods
  -[DNDAppInfo applicationIdentifier]
  -[DNDAppInfo displayName]
  -[DNDAppInfo initWithCoder:]
  -[DNDAppInfo .cxx_destruct]
  -[DNDAppInfo isEqual:]
  -[DNDAppInfo mutableCopyWithZone:]
  -[DNDAppInfo copyWithZone:]
  -[DNDAppInfo source]
  -[DNDAppInfo encodeWithCoder:]
  -[DNDAppInfo storeIconURL]
  -[DNDAppInfo cachedIconURL]
  -[DNDAppInfo initWithSource:applicationIdentifier:displayName:storeIconURL:cachedIconURL:]
  -[DNDAppInfo _initWithAppInfo:]


DNDMutableAppInfo : DNDAppInfo
 @property  long long source
 @property  DNDApplicationIdentifier *applicationIdentifier
 @property  NSString *displayName
 @property  NSURL *storeIconURL
 @property  NSURL *cachedIconURL

  // instance methods
  -[DNDMutableAppInfo setApplicationIdentifier:]
  -[DNDMutableAppInfo setDisplayName:]
  -[DNDMutableAppInfo setSource:]
  -[DNDMutableAppInfo copyWithZone:]
  -[DNDMutableAppInfo setStoreIconURL:]
  -[DNDMutableAppInfo setCachedIconURL:]


DNDScheduleTimePeriod : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  DNDScheduleTime *startTime
 @property  DNDScheduleTime *endTime
 @property  unsigned long weekdays

  // class methods
  +[DNDScheduleTimePeriod supportsSecureCoding]

  // instance methods
  -[DNDScheduleTimePeriod initWithCoder:]
  -[DNDScheduleTimePeriod endTime]
  -[DNDScheduleTimePeriod .cxx_destruct]
  -[DNDScheduleTimePeriod init]
  -[DNDScheduleTimePeriod _initWithPeriod:]
  -[DNDScheduleTimePeriod isEqual:]
  -[DNDScheduleTimePeriod startTime]
  -[DNDScheduleTimePeriod mutableCopyWithZone:]
  -[DNDScheduleTimePeriod weekdays]
  -[DNDScheduleTimePeriod copyWithZone:]
  -[DNDScheduleTimePeriod _initWithStartTime:endTime:weekdays:]
  -[DNDScheduleTimePeriod encodeWithCoder:]


DNDMutableScheduleTimePeriod : DNDScheduleTimePeriod
 @property  DNDScheduleTime *startTime
 @property  DNDScheduleTime *endTime
 @property  unsigned long weekdays

  // instance methods
  -[DNDMutableScheduleTimePeriod setStartTime:]
  -[DNDMutableScheduleTimePeriod setEndTime:]
  -[DNDMutableScheduleTimePeriod setWeekdays:]
  -[DNDMutableScheduleTimePeriod copyWithZone:]


DNDApplicationIdentifier : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *bundleID
 @property  unsigned long platform

  // class methods
  +[DNDApplicationIdentifier supportsSecureCoding]

  // instance methods
  -[DNDApplicationIdentifier initWithBundleID:]
  -[DNDApplicationIdentifier bundleID]
  -[DNDApplicationIdentifier platform]
  -[DNDApplicationIdentifier initWithCoder:]
  -[DNDApplicationIdentifier .cxx_destruct]
  -[DNDApplicationIdentifier isEqual:]
  -[DNDApplicationIdentifier copyWithZone:]
  -[DNDApplicationIdentifier encodeWithCoder:]
  -[DNDApplicationIdentifier diffDescription]
  -[DNDApplicationIdentifier initWithBundleID:platform:]


DNDModeAssertionInvalidation : NSObject <NSCopying, NSSecureCoding>
 @property  DNDModeAssertionSource *source
 @property  DNDModeAssertionInvalidationDetails *details
 @property  unsigned long reasonOverride
 @property  DNDModeAssertion *assertion
 @property  NSDate *invalidationDate
 @property  unsigned long reason

  // class methods
  +[DNDModeAssertionInvalidation supportsSecureCoding]

  // instance methods
  -[DNDModeAssertionInvalidation assertion]
  -[DNDModeAssertionInvalidation initWithCoder:]
  -[DNDModeAssertionInvalidation .cxx_destruct]
  -[DNDModeAssertionInvalidation isEqual:]
  -[DNDModeAssertionInvalidation reasonOverride]
  -[DNDModeAssertionInvalidation reason]
  -[DNDModeAssertionInvalidation details]
  -[DNDModeAssertionInvalidation copyWithZone:]
  -[DNDModeAssertionInvalidation source]
  -[DNDModeAssertionInvalidation encodeWithCoder:]
  -[DNDModeAssertionInvalidation invalidationDate]
  -[DNDModeAssertionInvalidation initWithAssertion:invalidationDate:details:source:reason:reasonOverride:]


DNDStateUpdate : NSObject <NSCopying, NSSecureCoding>
 @property  DNDState *previousState
 @property  DNDState *state
 @property  unsigned long reason
 @property  long long source

  // class methods
  +[DNDStateUpdate supportsSecureCoding]

  // instance methods
  -[DNDStateUpdate previousState]
  -[DNDStateUpdate initWithCoder:]
  -[DNDStateUpdate .cxx_destruct]
  -[DNDStateUpdate isEqual:]
  -[DNDStateUpdate state]
  -[DNDStateUpdate reason]
  -[DNDStateUpdate copyWithZone:]
  -[DNDStateUpdate source]
  -[DNDStateUpdate encodeWithCoder:]
  -[DNDStateUpdate initWithPreviousState:state:reason:source:]


DNDDevice : NSObject <NSCopying>
 @property  unsigned long deviceClass
 @property  unsigned long deviceCapabilities

  // class methods
  +[DNDDevice currentDevice]
  +[DNDDevice deviceWithClass:deviceCapabilities:]

  // instance methods
  -[DNDDevice deviceClass]
  -[DNDDevice isEqual:]
  -[DNDDevice copyWithZone:]
  -[DNDDevice _initWithClass:deviceCapabilities:]
  -[DNDDevice deviceCapabilities]


DNDModeAssertionLifetime : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long lifetimeType

  // class methods
  +[DNDModeAssertionLifetime supportsSecureCoding]
  +[DNDModeAssertionLifetime lifetimeWithDateInterval:]
  +[DNDModeAssertionLifetime lifetimeWithDuration:]
  +[DNDModeAssertionLifetime lifetimeWithCurrentLocation]
  +[DNDModeAssertionLifetime lifetimeUntilEndOfCalendarEventWithUniqueID:occurrenceDate:]
  +[DNDModeAssertionLifetime lifetimeWithCalendarEventUniqueID:occurrenceDate:]
  +[DNDModeAssertionLifetime lifetimeMatchingScheduleWithIdentifier:]
  +[DNDModeAssertionLifetime lifetimeUntilEndOfScheduleWithIdentifier:]
  +[DNDModeAssertionLifetime lifetimeWithExplicitRegion:]
  +[DNDModeAssertionLifetime lifetimeForUserRequest]
  +[DNDModeAssertionLifetime _secureCodingLifetimeClasses]

  // instance methods
  -[DNDModeAssertionLifetime initWithCoder:]
  -[DNDModeAssertionLifetime _init]
  -[DNDModeAssertionLifetime copyWithZone:]
  -[DNDModeAssertionLifetime encodeWithCoder:]
  -[DNDModeAssertionLifetime lifetimeType]


DNDRequestDetails : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *clientIdentifier
 @property  NSUUID *auditUUID
 @property  unsigned long timestamp

  // class methods
  +[DNDRequestDetails supportsSecureCoding]
  +[DNDRequestDetails detailsRepresentingNowWithClientIdentifier:]

  // instance methods
  -[DNDRequestDetails initWithCoder:]
  -[DNDRequestDetails .cxx_destruct]
  -[DNDRequestDetails isEqual:]
  -[DNDRequestDetails clientIdentifier]
  -[DNDRequestDetails timestamp]
  -[DNDRequestDetails copyWithZone:]
  -[DNDRequestDetails auditUUID]
  -[DNDRequestDetails initWithClientIdentifier:auditUUID:timestamp:]
  -[DNDRequestDetails encodeWithCoder:]


DNDAvailabilityService : NSObject
  // class methods
  +[DNDAvailabilityService initialize]
  +[DNDAvailabilityService serviceForClientIdentifier:]

  // instance methods
  -[DNDAvailabilityService _initWithClientIdentifier:]
  -[DNDAvailabilityService .cxx_destruct]
  -[DNDAvailabilityService isLocalUserAvailableReturningError:]


DNDModeAssertionCalendarEventLifetime : DNDModeAssertionLifetime
 @property  NSString *eventUniqueID
 @property  NSDate *occurrenceDate
 @property  BOOL onlyDuringEvent

  // class methods
  +[DNDModeAssertionCalendarEventLifetime supportsSecureCoding]

  // instance methods
  -[DNDModeAssertionCalendarEventLifetime initWithCoder:]
  -[DNDModeAssertionCalendarEventLifetime .cxx_destruct]
  -[DNDModeAssertionCalendarEventLifetime isEqual:]
  -[DNDModeAssertionCalendarEventLifetime encodeWithCoder:]
  -[DNDModeAssertionCalendarEventLifetime occurrenceDate]
  -[DNDModeAssertionCalendarEventLifetime lifetimeType]
  -[DNDModeAssertionCalendarEventLifetime initWithEventUniqueID:occurrenceDate:onlyDuringEvent:]
  -[DNDModeAssertionCalendarEventLifetime eventUniqueID]
  -[DNDModeAssertionCalendarEventLifetime isOnlyDuringEvent]


DNDApplicationConfiguration : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  unsigned long minimumBreakthroughUrgency
 @property  NSSet *allowedThreads
 @property  NSSet *deniedThreads

  // class methods
  +[DNDApplicationConfiguration supportsSecureCoding]
  +[DNDApplicationConfiguration defaultConfiguration]

  // instance methods
  -[DNDApplicationConfiguration initWithCoder:]
  -[DNDApplicationConfiguration .cxx_destruct]
  -[DNDApplicationConfiguration init]
  -[DNDApplicationConfiguration isEqual:]
  -[DNDApplicationConfiguration mutableCopyWithZone:]
  -[DNDApplicationConfiguration minimumBreakthroughUrgency]
  -[DNDApplicationConfiguration copyWithZone:]
  -[DNDApplicationConfiguration encodeWithCoder:]
  -[DNDApplicationConfiguration allowedThreads]
  -[DNDApplicationConfiguration deniedThreads]
  -[DNDApplicationConfiguration diffDescription]
  -[DNDApplicationConfiguration _initWithMinimumBreakthroughUrgency:allowedThreads:deniedThreads:]


DNDMutableApplicationConfiguration : DNDApplicationConfiguration
 @property  unsigned long minimumBreakthroughUrgency
 @property  NSMutableSet *allowedThreads
 @property  NSMutableSet *deniedThreads

  // instance methods
  -[DNDMutableApplicationConfiguration setMinimumBreakthroughUrgency:]
  -[DNDMutableApplicationConfiguration setAllowedThreads:]
  -[DNDMutableApplicationConfiguration setDeniedThreads:]


DNDMode : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *symbolImageName
 @property  NSString *tintColorName
 @property  NSString *name
 @property  long long semanticType
 @property  NSString *modeIdentifier
 @property  NSUUID *identifier
 @property  BOOL placeholder
 @property  unsigned long visibility
 @property  NSURL *settingsURL
 @property  NSURL *setupURL

  // class methods
  +[DNDMode supportsSecureCoding]
  +[DNDMode defaultMode]
  +[DNDMode defaultTintColorName]
  +[DNDMode maxUIAddableModes]
  +[DNDMode placeholderModeFromMode:]

  // instance methods
  -[DNDMode setupURL]
  -[DNDMode name]
  -[DNDMode initWithCoder:]
  -[DNDMode visibility]
  -[DNDMode .cxx_destruct]
  -[DNDMode modeIdentifier]
  -[DNDMode semanticType]
  -[DNDMode tintColorName]
  -[DNDMode _name]
  -[DNDMode isEqual:]
  -[DNDMode symbolImageName]
  -[DNDMode identifier]
  -[DNDMode mutableCopyWithZone:]
  -[DNDMode copyWithZone:]
  -[DNDMode isPlaceholder]
  -[DNDMode encodeWithCoder:]
  -[DNDMode settingsURL]
  -[DNDMode initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:]
  -[DNDMode initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:visibility:identifier:]
  -[DNDMode _initWithMode:]


DNDMutableMode : DNDMode
 @property  NSString *symbolImageName
 @property  NSString *tintColorName
 @property  NSString *name

  // instance methods
  -[DNDMutableMode setName:]
  -[DNDMutableMode setTintColorName:]
  -[DNDMutableMode copyWithZone:]
  -[DNDMutableMode setSymbolImageName:]


DNDModeConfigurationService : NSObject <DNDRemoteServiceConnectionEventListener>
 @property  NSString *clientIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDModeConfigurationService initialize]
  +[DNDModeConfigurationService serviceForClientIdentifier:]

  // instance methods
  -[DNDModeConfigurationService removeListener:]
  -[DNDModeConfigurationService allowedModesForContactHandle:error:]
  -[DNDModeConfigurationService createDefaultSleepingModeConfigurationWithError:]
  -[DNDModeConfigurationService createDefaultDrivingModeConfigurationWithError:]
  -[DNDModeConfigurationService getSyncEnabledReturningError:]
  -[DNDModeConfigurationService modeConfigurationForModeIdentifier:error:]
  -[DNDModeConfigurationService remoteService:didReceiveUpdatedAvailableModeIdentifiers:]
  -[DNDModeConfigurationService _initWithClientIdentifier:]
  -[DNDModeConfigurationService .cxx_destruct]
  -[DNDModeConfigurationService publishCurrentStatusKitAvailabilityReturningError:]
  -[DNDModeConfigurationService modeConfigurationsReturningError:]
  -[DNDModeConfigurationService setSyncPreferenceEnabled:error:]
  -[DNDModeConfigurationService createModeConfigurationUsingTemplateForModeIdentifier:error:]
  -[DNDModeConfigurationService availableModesReturningError:]
  -[DNDModeConfigurationService clientIdentifier]
  -[DNDModeConfigurationService addListener:withCompletionHandler:]
  -[DNDModeConfigurationService createDefaultWorkoutModeConfigurationWithError:]
  -[DNDModeConfigurationService canRemoveModeConfigurationForModeIdentifier:]
  -[DNDModeConfigurationService getSyncAvailableReturningError:]
  -[DNDModeConfigurationService _queue_registerForUpdatesIfRequired]
  -[DNDModeConfigurationService _createDefaultModeConfigurationForIdentifier:withRequestDetails:error:]
  -[DNDModeConfigurationService removeModeConfigurationForModeIdentifier:error:]
  -[DNDModeConfigurationService syncModeConfigurationsReturningError:]
  -[DNDModeConfigurationService getSyncPreferenceEnabledReturningError:]
  -[DNDModeConfigurationService isLocalUserAvailableForContactInActiveMode:error:]
  -[DNDModeConfigurationService setModeConfiguration:error:]
  -[DNDModeConfigurationService allModesReturningError:]


DNDModeConfigurationTrigger : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL hasSecureData
 @property  long long compatibilityVersion
 @property  unsigned long enabledSetting
 @property  BOOL isEnabled

  // class methods
  +[DNDModeConfigurationTrigger supportsSecureCoding]

  // instance methods
  -[DNDModeConfigurationTrigger initWithCoder:]
  -[DNDModeConfigurationTrigger compatibilityVersion]
  -[DNDModeConfigurationTrigger init]
  -[DNDModeConfigurationTrigger isEqual:]
  -[DNDModeConfigurationTrigger isEnabled]
  -[DNDModeConfigurationTrigger hasSecureData]
  -[DNDModeConfigurationTrigger copyWithZone:]
  -[DNDModeConfigurationTrigger encodeWithCoder:]
  -[DNDModeConfigurationTrigger initWithEnabledSetting:]
  -[DNDModeConfigurationTrigger enabledSetting]


DNDModeConfigurationLocationTrigger : DNDModeConfigurationTrigger
 @property  CLCircularRegion *region
 @property  NSString *detail

  // class methods
  +[DNDModeConfigurationLocationTrigger supportsSecureCoding]

  // instance methods
  -[DNDModeConfigurationLocationTrigger region]
  -[DNDModeConfigurationLocationTrigger initWithCoder:]
  -[DNDModeConfigurationLocationTrigger .cxx_destruct]
  -[DNDModeConfigurationLocationTrigger isEqual:]
  -[DNDModeConfigurationLocationTrigger hasSecureData]
  -[DNDModeConfigurationLocationTrigger detail]
  -[DNDModeConfigurationLocationTrigger encodeWithCoder:]
  -[DNDModeConfigurationLocationTrigger initWithRegion:detail:enabledSetting:]


DNDModeConfigurationScheduleTrigger : DNDModeConfigurationTrigger
 @property  NSDate *creationDate
 @property  DNDScheduleTimePeriod *timePeriod

  // class methods
  +[DNDModeConfigurationScheduleTrigger supportsSecureCoding]
  +[DNDModeConfigurationScheduleTrigger defaultScheduleTrigger]
  +[DNDModeConfigurationScheduleTrigger triggerWithClientTrigger:creationDate:]

  // instance methods
  -[DNDModeConfigurationScheduleTrigger initWithCoder:]
  -[DNDModeConfigurationScheduleTrigger .cxx_destruct]
  -[DNDModeConfigurationScheduleTrigger isEqual:]
  -[DNDModeConfigurationScheduleTrigger timePeriod]
  -[DNDModeConfigurationScheduleTrigger isEnabled]
  -[DNDModeConfigurationScheduleTrigger creationDate]
  -[DNDModeConfigurationScheduleTrigger encodeWithCoder:]
  -[DNDModeConfigurationScheduleTrigger initWithTimePeriod:creationDate:enabledSetting:]
  -[DNDModeConfigurationScheduleTrigger initWithTimePeriod:enabledSetting:]


DNDModeConfigurationAppForegroundTrigger : DNDModeConfigurationTrigger
 @property  NSString *bundleIdentifier
 @property  DNDApplicationIdentifier *applicationIdentifier

  // class methods
  +[DNDModeConfigurationAppForegroundTrigger supportsSecureCoding]

  // instance methods
  -[DNDModeConfigurationAppForegroundTrigger applicationIdentifier]
  -[DNDModeConfigurationAppForegroundTrigger initWithCoder:]
  -[DNDModeConfigurationAppForegroundTrigger bundleIdentifier]
  -[DNDModeConfigurationAppForegroundTrigger .cxx_destruct]
  -[DNDModeConfigurationAppForegroundTrigger isEqual:]
  -[DNDModeConfigurationAppForegroundTrigger hasSecureData]
  -[DNDModeConfigurationAppForegroundTrigger encodeWithCoder:]
  -[DNDModeConfigurationAppForegroundTrigger initWithApplicationIdentifier:enabledSetting:]
  -[DNDModeConfigurationAppForegroundTrigger initWithBundleIdentifier:enabledSetting:]


DNDModeConfigurationDrivingTrigger : DNDModeConfigurationTrigger

DNDModeConfigurationGameControllerTrigger : DNDModeConfigurationTrigger

DNDModeConfigurationSleepingTrigger : DNDModeConfigurationTrigger

DNDModeConfigurationSmartTrigger : DNDModeConfigurationTrigger

DNDModeConfigurationWorkoutTrigger : DNDModeConfigurationTrigger

DNDModeConfigurationMindfulnessTrigger : DNDModeConfigurationTrigger

DNDModeConfigurationScreenActivityTrigger : DNDModeConfigurationTrigger

DNDEventBehaviorResolutionService : NSObject
  // class methods
  +[DNDEventBehaviorResolutionService initialize]
  +[DNDEventBehaviorResolutionService serviceForClientIdentifier:]

  // instance methods
  -[DNDEventBehaviorResolutionService _initWithClientIdentifier:]
  -[DNDEventBehaviorResolutionService .cxx_destruct]
  -[DNDEventBehaviorResolutionService resolveBehaviorForEventDetails:error:]


DNDContact : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *contactIdentifier
 @property  NSString *firstName
 @property  NSString *middleName
 @property  NSString *lastName
 @property  NSString *nickName
 @property  NSString *organizationName
 @property  NSSet *phoneNumbers
 @property  NSSet *emailAddresses

  // class methods
  +[DNDContact supportsSecureCoding]
  +[DNDContact normalizePhoneNumber:]

  // instance methods
  -[DNDContact organizationName]
  -[DNDContact firstName]
  -[DNDContact middleName]
  -[DNDContact redactedDescription]
  -[DNDContact initWithCoder:]
  -[DNDContact lastName]
  -[DNDContact .cxx_destruct]
  -[DNDContact _descriptionForRedacted:]
  -[DNDContact contactIdentifier]
  -[DNDContact phoneNumbers]
  -[DNDContact initWithContactIdentifier:]
  -[DNDContact isEqual:]
  -[DNDContact emailAddresses]
  -[DNDContact nickName]
  -[DNDContact mutableCopyWithZone:]
  -[DNDContact copyWithZone:]
  -[DNDContact encodeWithCoder:]
  -[DNDContact matchesContact:]
  -[DNDContact matchesContactHandle:]
  -[DNDContact diffDescription]
  -[DNDContact _initWithContactIdentifier:firstName:middleName:lastName:nickName:organizationName:phoneNumbers:emailAddresses:]
  -[DNDContact normalizedPhoneNumbers]
  -[DNDContact _redactedDescriptionsForStrings:]


DNDMutableContact : DNDContact
 @property  NSString *contactIdentifier
 @property  NSString *firstName
 @property  NSString *middleName
 @property  NSString *lastName
 @property  NSString *nickName
 @property  NSString *organizationName
 @property  NSSet *phoneNumbers
 @property  NSSet *emailAddresses

  // instance methods
  -[DNDMutableContact setEmailAddresses:]
  -[DNDMutableContact setOrganizationName:]
  -[DNDMutableContact setContactIdentifier:]
  -[DNDMutableContact setFirstName:]
  -[DNDMutableContact setNickName:]
  -[DNDMutableContact init]
  -[DNDMutableContact setLastName:]
  -[DNDMutableContact setMiddleName:]
  -[DNDMutableContact setPhoneNumbers:]


DNDClientEventBehavior : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *redactedDescription
 @property  unsigned long resolutionReason
 @property  NSUUID *activeModeUUID
 @property  DNDClientEventDetails *eventDetails
 @property  unsigned long interruptionSuppression

  // class methods
  +[DNDClientEventBehavior supportsSecureCoding]

  // instance methods
  -[DNDClientEventBehavior redactedDescription]
  -[DNDClientEventBehavior initWithCoder:]
  -[DNDClientEventBehavior initWithEventDetails:interruptionSuppression:resolutionReason:activeModeUUID:]
  -[DNDClientEventBehavior .cxx_destruct]
  -[DNDClientEventBehavior interruptionSuppression]
  -[DNDClientEventBehavior _descriptionForRedacted:]
  -[DNDClientEventBehavior isEqual:]
  -[DNDClientEventBehavior resolutionReason]
  -[DNDClientEventBehavior activeModeUUID]
  -[DNDClientEventBehavior copyWithZone:]
  -[DNDClientEventBehavior eventDetails]
  -[DNDClientEventBehavior encodeWithCoder:]


DNDState : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL willSuppressInterruptions
 @property  NSArray *activeModeAssertionMetadata
 @property  NSUUID *activeModeUUID
 @property  unsigned long suppressionState
 @property  NSArray *activeModeIdentifiers
 @property  NSString *activeModeIdentifier
 @property  DNDModeConfiguration *activeModeConfiguration
 @property  NSDate *startDate
 @property  NSDate *userVisibleTransitionDate
 @property  unsigned long userVisibleTransitionLifetimeType
 @property  BOOL active

  // class methods
  +[DNDState supportsSecureCoding]

  // instance methods
  -[DNDState initWithCoder:]
  -[DNDState isActive]
  -[DNDState .cxx_destruct]
  -[DNDState isEqual:]
  -[DNDState activeModeUUID]
  -[DNDState startDate]
  -[DNDState copyWithZone:]
  -[DNDState encodeWithCoder:]
  -[DNDState activeModeIdentifier]
  -[DNDState suppressionState]
  -[DNDState activeModeAssertionMetadata]
  -[DNDState activeModeConfiguration]
  -[DNDState userVisibleTransitionDate]
  -[DNDState userVisibleTransitionLifetimeType]
  -[DNDState initWithSuppressionState:activeModeAssertionMetadata:startDate:userVisibleTransitionDate:userVisibleTransitionLifetimeType:activeModeConfiguration:]
  -[DNDState setOverrideModeIdentifier:]
  -[DNDState activeModeIdentifiers]
  -[DNDState willSuppressInterruptions]


DNDBypassSettings : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  unsigned long immediateBypassEventSourceType
 @property  NSString *immediateBypassCNGroupIdentifier
 @property  unsigned long repeatEventSourceBehaviorEnabledSetting

  // class methods
  +[DNDBypassSettings supportsSecureCoding]

  // instance methods
  -[DNDBypassSettings _initWithSettings:]
  -[DNDBypassSettings immediateBypassEventSourceType]
  -[DNDBypassSettings initWithCoder:]
  -[DNDBypassSettings .cxx_destruct]
  -[DNDBypassSettings init]
  -[DNDBypassSettings isEqual:]
  -[DNDBypassSettings _initWithImmediateBypassEventSourceType:immediateBypassCNGroupIdentifier:repeatEventSourceBehaviorEnabledSetting:]
  -[DNDBypassSettings repeatEventSourceBehaviorEnabledSetting]
  -[DNDBypassSettings mutableCopyWithZone:]
  -[DNDBypassSettings immediateBypassCNGroupIdentifier]
  -[DNDBypassSettings copyWithZone:]
  -[DNDBypassSettings encodeWithCoder:]
  -[DNDBypassSettings diffDescription]


DNDMutableBypassSettings : DNDBypassSettings
 @property  unsigned long immediateBypassEventSourceType
 @property  NSString *immediateBypassCNGroupIdentifier
 @property  unsigned long repeatEventSourceBehaviorEnabledSetting

  // instance methods
  -[DNDMutableBypassSettings setRepeatEventSourceBehaviorEnabledSetting:]
  -[DNDMutableBypassSettings setImmediateBypassCNGroupIdentifier:]
  -[DNDMutableBypassSettings copyWithZone:]
  -[DNDMutableBypassSettings setImmediateBypassEventSourceType:]


DNDModeAssertionInvalidationDetails : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *identifier

  // class methods
  +[DNDModeAssertionInvalidationDetails supportsSecureCoding]

  // instance methods
  -[DNDModeAssertionInvalidationDetails initWithCoder:]
  -[DNDModeAssertionInvalidationDetails .cxx_destruct]
  -[DNDModeAssertionInvalidationDetails init]
  -[DNDModeAssertionInvalidationDetails isEqual:]
  -[DNDModeAssertionInvalidationDetails _initWithDetails:]
  -[DNDModeAssertionInvalidationDetails identifier]
  -[DNDModeAssertionInvalidationDetails mutableCopyWithZone:]
  -[DNDModeAssertionInvalidationDetails copyWithZone:]
  -[DNDModeAssertionInvalidationDetails _initWithIdentifier:]
  -[DNDModeAssertionInvalidationDetails encodeWithCoder:]


DNDMutableModeAssertionInvalidationDetails : DNDModeAssertionInvalidationDetails
 @property  NSString *identifier

  // instance methods
  -[DNDMutableModeAssertionInvalidationDetails setIdentifier:]
  -[DNDMutableModeAssertionInvalidationDetails copyWithZone:]


DNDStateService : NSObject <DNDRemoteServiceConnectionEventListener>
 @property  NSString *clientIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDStateService initialize]
  +[DNDStateService serviceForClientIdentifier:]

  // instance methods
  -[DNDStateService addStateUpdateListener:error:]
  -[DNDStateService remoteService:didReceiveDoNotDisturbStateUpdate:]
  -[DNDStateService _initWithClientIdentifier:]
  -[DNDStateService .cxx_destruct]
  -[DNDStateService queryCurrentStateWithError:]
  -[DNDStateService removeStateUpdateListener:]
  -[DNDStateService clientIdentifier]
  -[DNDStateService queryCurrentStateWithCompletionHandler:]
  -[DNDStateService _queue_registerForStateUpdatesIfRequired]
  -[DNDStateService addStateUpdateListener:withCompletionHandler:]
  -[DNDStateService removeStateUpdateListener:error:]


DNDClientEventDetails : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  BOOL notifyAnyway
 @property  unsigned long behavior
 @property  NSString *identifier
 @property  NSString *bundleIdentifier
 @property  unsigned long type
 @property  unsigned long urgency
 @property  DNDContactHandle *sender
 @property  NSString *threadIdentifier
 @property  BOOL shouldAlwaysInterrupt

  // class methods
  +[DNDClientEventDetails supportsSecureCoding]

  // instance methods
  -[DNDClientEventDetails redactedDescription]
  -[DNDClientEventDetails initWithCoder:]
  -[DNDClientEventDetails bundleIdentifier]
  -[DNDClientEventDetails urgency]
  -[DNDClientEventDetails .cxx_destruct]
  -[DNDClientEventDetails _descriptionForRedacted:]
  -[DNDClientEventDetails sender]
  -[DNDClientEventDetails shouldAlwaysInterrupt]
  -[DNDClientEventDetails init]
  -[DNDClientEventDetails isEqual:]
  -[DNDClientEventDetails _initWithDetails:]
  -[DNDClientEventDetails behavior]
  -[DNDClientEventDetails identifier]
  -[DNDClientEventDetails _initWithIdentifier:bundleIdentifier:type:urgency:sender:threadIdentifier:notifyAnyway:behavior:]
  -[DNDClientEventDetails notifyAnyway]
  -[DNDClientEventDetails type]
  -[DNDClientEventDetails threadIdentifier]
  -[DNDClientEventDetails mutableCopyWithZone:]
  -[DNDClientEventDetails copyWithZone:]
  -[DNDClientEventDetails encodeWithCoder:]


DNDMutableClientEventDetails : DNDClientEventDetails
 @property  BOOL notifyAnyway
 @property  unsigned long behavior
 @property  NSString *identifier
 @property  NSString *bundleIdentifier
 @property  unsigned long type
 @property  unsigned long urgency
 @property  DNDContactHandle *sender
 @property  NSString *threadIdentifier
 @property  BOOL shouldAlwaysInterrupt

  // instance methods
  -[DNDMutableClientEventDetails setSender:]
  -[DNDMutableClientEventDetails setThreadIdentifier:]
  -[DNDMutableClientEventDetails setType:]
  -[DNDMutableClientEventDetails setShouldAlwaysInterrupt:]
  -[DNDMutableClientEventDetails setUrgency:]
  -[DNDMutableClientEventDetails setBundleIdentifier:]
  -[DNDMutableClientEventDetails setBehavior:]
  -[DNDMutableClientEventDetails setIdentifier:]
  -[DNDMutableClientEventDetails setNotifyAnyway:]
  -[DNDMutableClientEventDetails copyWithZone:]


DNDRemoteAvailabilityServiceConnection : NSObject <DNDRemoteAvailabilityServiceServerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDRemoteAvailabilityServiceConnection initialize]
  +[DNDRemoteAvailabilityServiceConnection sharedInstance]

  // instance methods
  -[DNDRemoteAvailabilityServiceConnection .cxx_destruct]
  -[DNDRemoteAvailabilityServiceConnection getIsLocalUserAvailableWithRequestDetails:completionHandler:]
  -[DNDRemoteAvailabilityServiceConnection init]
  -[DNDRemoteAvailabilityServiceConnection _queue_createConnection]
  -[DNDRemoteAvailabilityServiceConnection _queue_invalidateConnection]
  -[DNDRemoteAvailabilityServiceConnection _queue_remoteTarget]


DNDModeConfiguration : NSObject <DNDDiffBuilding, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  DNDMode *mode
 @property  DNDConfiguration *configuration
 @property  NSArray *triggers
 @property  unsigned long impactsAvailability
 @property  unsigned long dimsLockScreen
 @property  unsigned long allowSmartEntry
 @property  NSDate *lastModified
 @property  NSDate *created
 @property  BOOL automaticallyGenerated
 @property  BOOL supportedConfiguration
 @property  long long compatibilityVersion
 @property  long long resolvedCompatibilityVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDModeConfiguration supportsSecureCoding]
  +[DNDModeConfiguration defaultModeConfiguration]

  // instance methods
  -[DNDModeConfiguration triggers]
  -[DNDModeConfiguration lastModified]
  -[DNDModeConfiguration initWithCoder:]
  -[DNDModeConfiguration configuration]
  -[DNDModeConfiguration .cxx_destruct]
  -[DNDModeConfiguration compatibilityVersion]
  -[DNDModeConfiguration isEqual:]
  -[DNDModeConfiguration impactsAvailability]
  -[DNDModeConfiguration dimsLockScreen]
  -[DNDModeConfiguration mutableCopyWithZone:]
  -[DNDModeConfiguration shortDescription]
  -[DNDModeConfiguration log:withMessage:]
  -[DNDModeConfiguration isAutomaticallyGenerated]
  -[DNDModeConfiguration hasSecureData]
  -[DNDModeConfiguration copyWithZone:]
  -[DNDModeConfiguration mode]
  -[DNDModeConfiguration created]
  -[DNDModeConfiguration encodeWithCoder:]
  -[DNDModeConfiguration diffAgainstObject:usingDiffBuilder:withDescription:]
  -[DNDModeConfiguration isSupportedConfiguration]
  -[DNDModeConfiguration initWithMode:configuration:triggers:]
  -[DNDModeConfiguration initWithMode:configuration:triggers:impactsAvailability:dimsLockScreen:created:lastModified:automaticallyGenerated:compatibilityVersion:]
  -[DNDModeConfiguration _containsSecureTriggers:]
  -[DNDModeConfiguration resolvedCompatibilityVersion]
  -[DNDModeConfiguration _maxTriggerCompatibilityVersion:]
  -[DNDModeConfiguration _initWithModeConfiguration:]
  -[DNDModeConfiguration allowSmartEntry]
  -[DNDModeConfiguration mergeWithModeConfiguration:]


DNDMutableModeConfiguration : DNDModeConfiguration
 @property  DNDMode *mode
 @property  DNDConfiguration *configuration
 @property  NSArray *triggers
 @property  unsigned long impactsAvailability
 @property  unsigned long dimsLockScreen
 @property  NSDate *created
 @property  NSDate *lastModified
 @property  long long compatibilityVersion
 @property  BOOL automaticallyGenerated

  // instance methods
  -[DNDMutableModeConfiguration setCompatibilityVersion:]
  -[DNDMutableModeConfiguration setTriggers:]
  -[DNDMutableModeConfiguration setAutomaticallyGenerated:]
  -[DNDMutableModeConfiguration setImpactsAvailability:]
  -[DNDMutableModeConfiguration setCreated:]
  -[DNDMutableModeConfiguration setLastModified:]
  -[DNDMutableModeConfiguration setDimsLockScreen:]
  -[DNDMutableModeConfiguration setMode:]
  -[DNDMutableModeConfiguration copyWithZone:]
  -[DNDMutableModeConfiguration setConfiguration:]


DNDModeAssertionCurrentLocationLifetime : DNDModeAssertionLifetime
  // class methods
  +[DNDModeAssertionCurrentLocationLifetime sharedInstance]
  +[DNDModeAssertionCurrentLocationLifetime supportsSecureCoding]

  // instance methods
  -[DNDModeAssertionCurrentLocationLifetime initWithCoder:]
  -[DNDModeAssertionCurrentLocationLifetime isEqual:]
  -[DNDModeAssertionCurrentLocationLifetime awakeAfterUsingCoder:]
  -[DNDModeAssertionCurrentLocationLifetime encodeWithCoder:]
  -[DNDModeAssertionCurrentLocationLifetime lifetimeType]


DNDModeAssertionExplicitRegionLifetime : DNDModeAssertionLifetime
 @property  CLCircularRegion *region

  // class methods
  +[DNDModeAssertionExplicitRegionLifetime supportsSecureCoding]

  // instance methods
  -[DNDModeAssertionExplicitRegionLifetime region]
  -[DNDModeAssertionExplicitRegionLifetime initWithCoder:]
  -[DNDModeAssertionExplicitRegionLifetime .cxx_destruct]
  -[DNDModeAssertionExplicitRegionLifetime isEqual:]
  -[DNDModeAssertionExplicitRegionLifetime initWithRegion:]
  -[DNDModeAssertionExplicitRegionLifetime encodeWithCoder:]
  -[DNDModeAssertionExplicitRegionLifetime lifetimeType]


DNDModeAssertionSource : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *clientIdentifier
 @property  NSString *deviceIdentifier

  // class methods
  +[DNDModeAssertionSource supportsSecureCoding]

  // instance methods
  -[DNDModeAssertionSource initWithCoder:]
  -[DNDModeAssertionSource .cxx_destruct]
  -[DNDModeAssertionSource isEqual:]
  -[DNDModeAssertionSource clientIdentifier]
  -[DNDModeAssertionSource deviceIdentifier]
  -[DNDModeAssertionSource copyWithZone:]
  -[DNDModeAssertionSource encodeWithCoder:]
  -[DNDModeAssertionSource initWithClientIdentifier:deviceIdentifier:]


DNDModeAssertionUserRequestedLifetime : DNDModeAssertionLifetime
  // class methods
  +[DNDModeAssertionUserRequestedLifetime supportsSecureCoding]

  // instance methods
  -[DNDModeAssertionUserRequestedLifetime initWithCoder:]
  -[DNDModeAssertionUserRequestedLifetime isEqual:]
  -[DNDModeAssertionUserRequestedLifetime encodeWithCoder:]
  -[DNDModeAssertionUserRequestedLifetime lifetimeType]


DNDScheduleSettings : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  unsigned long scheduleEnabledSetting
 @property  DNDScheduleTimePeriod *timePeriod
 @property  unsigned long bedtimeBehaviorEnabledSetting

  // class methods
  +[DNDScheduleSettings supportsSecureCoding]

  // instance methods
  -[DNDScheduleSettings scheduleEnabledSetting]
  -[DNDScheduleSettings _initWithSettings:]
  -[DNDScheduleSettings initWithCoder:]
  -[DNDScheduleSettings initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:]
  -[DNDScheduleSettings .cxx_destruct]
  -[DNDScheduleSettings bedtimeBehaviorEnabledSetting]
  -[DNDScheduleSettings init]
  -[DNDScheduleSettings isEqual:]
  -[DNDScheduleSettings timePeriod]
  -[DNDScheduleSettings mutableCopyWithZone:]
  -[DNDScheduleSettings copyWithZone:]
  -[DNDScheduleSettings encodeWithCoder:]


DNDMutableScheduleSettings : DNDScheduleSettings
 @property  unsigned long scheduleEnabledSetting
 @property  DNDScheduleTimePeriod *timePeriod
 @property  unsigned long bedtimeBehaviorEnabledSetting

  // instance methods
  -[DNDMutableScheduleSettings setScheduleEnabledSetting:]
  -[DNDMutableScheduleSettings setBedtimeBehaviorEnabledSetting:]
  -[DNDMutableScheduleSettings setTimePeriod:]
  -[DNDMutableScheduleSettings copyWithZone:]


DNDModeAssertionDetails : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  BOOL userRequested
 @property  NSDate *userVisibleEndDate
 @property  NSDate *modeConfigurationModifiedDate
 @property  NSString *identifier
 @property  NSString *modeIdentifier
 @property  DNDModeAssertionLifetime *lifetime
 @property  unsigned long reason

  // class methods
  +[DNDModeAssertionDetails supportsSecureCoding]
  +[DNDModeAssertionDetails detailsWithIdentifier:modeIdentifier:lifetime:]
  +[DNDModeAssertionDetails userRequestedAssertionDetailsWithIdentifier:modeIdentifier:lifetime:]
  +[DNDModeAssertionDetails detailsWithIdentifier:modeIdentifier:lifetime:reason:]

  // instance methods
  -[DNDModeAssertionDetails initWithCoder:]
  -[DNDModeAssertionDetails .cxx_destruct]
  -[DNDModeAssertionDetails modeIdentifier]
  -[DNDModeAssertionDetails lifetime]
  -[DNDModeAssertionDetails init]
  -[DNDModeAssertionDetails isEqual:]
  -[DNDModeAssertionDetails _initWithDetails:]
  -[DNDModeAssertionDetails identifier]
  -[DNDModeAssertionDetails reason]
  -[DNDModeAssertionDetails mutableCopyWithZone:]
  -[DNDModeAssertionDetails copyWithZone:]
  -[DNDModeAssertionDetails encodeWithCoder:]
  -[DNDModeAssertionDetails isUserRequested]
  -[DNDModeAssertionDetails _initWithIdentifier:modeIdentifier:modeConfigurationModifiedDate:lifetime:reason:userVisibleEndDate:]
  -[DNDModeAssertionDetails modeConfigurationModifiedDate]
  -[DNDModeAssertionDetails userVisibleEndDate]


DNDMutableModeAssertionDetails : DNDModeAssertionDetails
 @property  NSDate *userVisibleEndDate
 @property  NSDate *modeConfigurationModifiedDate
 @property  NSString *identifier
 @property  NSString *modeIdentifier
 @property  DNDModeAssertionLifetime *lifetime
 @property  unsigned long reason

  // instance methods
  -[DNDMutableModeAssertionDetails setModeIdentifier:]
  -[DNDMutableModeAssertionDetails setIdentifier:]
  -[DNDMutableModeAssertionDetails setReason:]
  -[DNDMutableModeAssertionDetails copyWithZone:]
  -[DNDMutableModeAssertionDetails setLifetime:]
  -[DNDMutableModeAssertionDetails setUserVisibleEndDate:]
  -[DNDMutableModeAssertionDetails setModeConfigurationModifiedDate:]


DNDModeAssertionScheduleLifetime : DNDModeAssertionLifetime
 @property  NSString *scheduleIdentifier
 @property  unsigned long behavior

  // class methods
  +[DNDModeAssertionScheduleLifetime supportsSecureCoding]

  // instance methods
  -[DNDModeAssertionScheduleLifetime initWithCoder:]
  -[DNDModeAssertionScheduleLifetime .cxx_destruct]
  -[DNDModeAssertionScheduleLifetime isEqual:]
  -[DNDModeAssertionScheduleLifetime behavior]
  -[DNDModeAssertionScheduleLifetime encodeWithCoder:]
  -[DNDModeAssertionScheduleLifetime scheduleIdentifier]
  -[DNDModeAssertionScheduleLifetime lifetimeType]
  -[DNDModeAssertionScheduleLifetime initWithScheduleIdentifier:behavior:]


DNDModeAssertionService : NSObject <DNDRemoteServiceConnectionEventListener>
 @property  NSString *clientIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDModeAssertionService initialize]
  +[DNDModeAssertionService serviceForClientIdentifier:]

  // instance methods
  -[DNDModeAssertionService addAssertionUpdateListener:error:]
  -[DNDModeAssertionService removeAssertionUpdateListener:]
  -[DNDModeAssertionService remoteService:didChangeActiveModeAssertion:invalidation:]
  -[DNDModeAssertionService _initWithClientIdentifier:]
  -[DNDModeAssertionService .cxx_destruct]
  -[DNDModeAssertionService _registerForAssertionUpdatesIfRequiredWithCompletionHandler:]
  -[DNDModeAssertionService allModeAssertionsWithError:]
  -[DNDModeAssertionService invalidateAllActiveModeAssertionsWithError:]
  -[DNDModeAssertionService latestModeAssertionInvalidationWithError:]
  -[DNDModeAssertionService invalidateActiveModeAssertionWithInvalidationDetails:reasonOverride:error:]
  -[DNDModeAssertionService clientIdentifier]
  -[DNDModeAssertionService activeModeAssertionWithError:]
  -[DNDModeAssertionService takeModeAssertionWithDetails:error:]
  -[DNDModeAssertionService _handleChangeActiveModeAssertion:invalidation:]
  -[DNDModeAssertionService removeAssertionUpdateListener:error:]
  -[DNDModeAssertionService invalidateActiveModeAssertionWithError:]
  -[DNDModeAssertionService addAssertionUpdateListener:withCompletionHandler:]


DNDContactHandle : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *contactIdentifier
 @property  unsigned long type
 @property  NSString *value

  // class methods
  +[DNDContactHandle supportsSecureCoding]

  // instance methods
  -[DNDContactHandle redactedDescription]
  -[DNDContactHandle initWithCoder:]
  -[DNDContactHandle .cxx_destruct]
  -[DNDContactHandle _descriptionForRedacted:]
  -[DNDContactHandle contactIdentifier]
  -[DNDContactHandle isEqual:]
  -[DNDContactHandle value]
  -[DNDContactHandle type]
  -[DNDContactHandle mutableCopyWithZone:]
  -[DNDContactHandle copyWithZone:]
  -[DNDContactHandle encodeWithCoder:]
  -[DNDContactHandle matchesContactHandle:]
  -[DNDContactHandle _initWithContactIdentifier:type:value:]


DNDMutableContactHandle : DNDContactHandle
 @property  NSString *contactIdentifier
 @property  unsigned long type
 @property  NSString *value

  // instance methods
  -[DNDMutableContactHandle setType:]
  -[DNDMutableContactHandle setContactIdentifier:]
  -[DNDMutableContactHandle setValue:]


DNDModeSelectionService : NSObject <DNDRemoteServiceConnectionEventListener>
 @property  NSString *clientIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDModeSelectionService initialize]
  +[DNDModeSelectionService serviceForClientIdentifier:]

  // instance methods
  -[DNDModeSelectionService removeListener:]
  -[DNDModeSelectionService modeConfigurationForModeIdentifier:error:]
  -[DNDModeSelectionService _initWithClientIdentifier:]
  -[DNDModeSelectionService .cxx_destruct]
  -[DNDModeSelectionService clientIdentifier]
  -[DNDModeSelectionService addListener:withCompletionHandler:]
  -[DNDModeSelectionService activeModeAssertionWithError:]
  -[DNDModeSelectionService _queue_registerForUpdatesIfRequired]
  -[DNDModeSelectionService remoteService:didReceiveUpdatedActiveModeAssertion:stateUpdate:]
  -[DNDModeSelectionService remoteService:didReceiveUpdatedAvailableModes:]
  -[DNDModeSelectionService remoteService:didReceiveUpdatedModes:]
  -[DNDModeSelectionService activateModeWithDetails:error:]
  -[DNDModeSelectionService invalidateModeAssertionWithUUID:error:]
  -[DNDModeSelectionService allModesWithError:]
  -[DNDModeSelectionService availableModesWithError:]


DNDGlobalConfigurationService : NSObject <DNDRemoteServiceConnectionEventListener>
 @property  NSString *clientIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDGlobalConfigurationService initialize]
  +[DNDGlobalConfigurationService serviceForClientIdentifier:]

  // instance methods
  -[DNDGlobalConfigurationService removeListener:]
  -[DNDGlobalConfigurationService getStateDumpReturningError:]
  -[DNDGlobalConfigurationService didChangeFocusStatusSharingSettingForApplicationIdentifier:]
  -[DNDGlobalConfigurationService isCloudSyncActive]
  -[DNDGlobalConfigurationService remoteService:didReceiveUpdatedPreventAutoReplySetting:]
  -[DNDGlobalConfigurationService getPhoneCallBypassSettingsReturningError:]
  -[DNDGlobalConfigurationService _initWithClientIdentifier:]
  -[DNDGlobalConfigurationService .cxx_destruct]
  -[DNDGlobalConfigurationService setPhoneCallBypassSettings:error:]
  -[DNDGlobalConfigurationService setPreventAutoReply:error:]
  -[DNDGlobalConfigurationService setCloudSyncPreferenceEnabled:error:]
  -[DNDGlobalConfigurationService getPreventAutoReplyReturningError:]
  -[DNDGlobalConfigurationService isAutoReplyPrevented]
  -[DNDGlobalConfigurationService getPairSyncStateReturningError:]
  -[DNDGlobalConfigurationService clientIdentifier]
  -[DNDGlobalConfigurationService addListener:withCompletionHandler:]
  -[DNDGlobalConfigurationService getCloudSyncStateReturningError:]
  -[DNDGlobalConfigurationService _queue_registerForUpdatesIfRequired]
  -[DNDGlobalConfigurationService remoteService:didReceiveUpdatedPhoneCallBypassSettings:]
  -[DNDGlobalConfigurationService setPairSyncPreferenceEnabled:error:]
  -[DNDGlobalConfigurationService remoteService:didReceiveUpdatedPairSyncState:]


DNDAppInfoService : NSObject
  // class methods
  +[DNDAppInfoService initialize]
  +[DNDAppInfoService serviceForClientIdentifier:]

  // instance methods
  -[DNDAppInfoService _initWithClientIdentifier:]
  -[DNDAppInfoService .cxx_destruct]
  -[DNDAppInfoService getAppInfoForBundleIdentifier:error:]
  -[DNDAppInfoService getAppInfoForBundleIdentifiers:error:]


DNDStateModeAssertionMetadata : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *clientIdentifier
 @property  NSDate *userVisibleEndDate
 @property  NSString *modeIdentifier
 @property  unsigned long lifetimeType
 @property  NSDateInterval *activeDateInterval

  // class methods
  +[DNDStateModeAssertionMetadata supportsSecureCoding]

  // instance methods
  -[DNDStateModeAssertionMetadata initWithCoder:]
  -[DNDStateModeAssertionMetadata .cxx_destruct]
  -[DNDStateModeAssertionMetadata modeIdentifier]
  -[DNDStateModeAssertionMetadata isEqual:]
  -[DNDStateModeAssertionMetadata clientIdentifier]
  -[DNDStateModeAssertionMetadata activeDateInterval]
  -[DNDStateModeAssertionMetadata copyWithZone:]
  -[DNDStateModeAssertionMetadata encodeWithCoder:]
  -[DNDStateModeAssertionMetadata lifetimeType]
  -[DNDStateModeAssertionMetadata userVisibleEndDate]
  -[DNDStateModeAssertionMetadata initWithClientIdentifier:modeIdentifier:lifetimeType:activeDateInterval:userVisibleEndDate:]


DNDRemoteServiceConnection : NSObject <DNDRemoteServiceClientProtocol, DNDRemoteServiceServerProtocol, DNDRemoteMonitorServerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDRemoteServiceConnection initialize]
  +[DNDRemoteServiceConnection sharedInstance]

  // instance methods
  -[DNDRemoteServiceConnection deliverAvailableModes:]
  -[DNDRemoteServiceConnection deliverUpdatedScheduleSettings:]
  -[DNDRemoteServiceConnection registerForGlobalConfigurationUpdatesWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection setScheduleSettings:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection didChangeFocusStatusSharingSettingForApplicationIdentifier:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection invalidateModeAssertionWithUUID:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection getAppInfoForBundleIdentifier:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection takeModeAssertionWithDetails:requestDetails:completionHandler:]
  -[DNDRemoteServiceConnection getPairSyncStateWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection getCloudSyncStateWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection setBehaviorSettings:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection registerForStateUpdatesWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection .cxx_destruct]
  -[DNDRemoteServiceConnection deliverMeDeviceState:]
  -[DNDRemoteServiceConnection setPairSyncPreferenceEnabled:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection resolveBehaviorForEventDetails:requestDetails:completionHandler:]
  -[DNDRemoteServiceConnection addEventListener:]
  -[DNDRemoteServiceConnection _monitorQueue_monitorTarget]
  -[DNDRemoteServiceConnection getModeConfigurationForModeIdentifier:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection _monitorQueue_invalidateMonitorConnection]
  -[DNDRemoteServiceConnection activateModeWithDetails:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection init]
  -[DNDRemoteServiceConnection getAllModeAssertionsWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection deliverStateUpdate:]
  -[DNDRemoteServiceConnection _queue_createConnection]
  -[DNDRemoteServiceConnection queryMeDeviceStateWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection getScheduleSettingsWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection deliverActiveModeAssertionUpdate:invalidation:clientIdentifiers:]
  -[DNDRemoteServiceConnection getUserAvailabilityInActiveModeForContactHandle:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection _setMonitorState:]
  -[DNDRemoteServiceConnection deliverUpdatedPhoneCallBypassSettings:]
  -[DNDRemoteServiceConnection getActiveModeAssertionWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection setPreventAutoReply:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection getAllModesWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection registerForSettingsUpdatesWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection removeModeConfigurationForModeIdentifier:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection publishStatusKitAvailabilityWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection registerForAssertionUpdatesWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection getStateDumpWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection deliverAllModes:]
  -[DNDRemoteServiceConnection _monitorQueue_createMonitorConnection]
  -[DNDRemoteServiceConnection getBehaviorSettingsWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection getPreventAutoReplyWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection getAvailableModesWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection setCloudSyncPreferenceEnabled:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection registerForMeDeviceStateUpdatesWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection getAppInfoForBundleIdentifiers:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection deliverUpdatedPairSyncState:]
  -[DNDRemoteServiceConnection deliverUpdatedPreventAutoReplySetting:]
  -[DNDRemoteServiceConnection getLatestModeAssertionInvalidationWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection invalidateAllActiveModeAssertionsWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection queryStateWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection syncModeConfigurationsWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection getModeConfigurationsWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection invalidateActiveModeAssertionWithDetails:reasonOverride:requestDetails:completionHandler:]
  -[DNDRemoteServiceConnection registerForModeSelectionUpdatesWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection setScreenIsShared:screenIsMirrored:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection _queue_invalidateConnection]
  -[DNDRemoteServiceConnection deliverUpdatedBehaviorSettings:]
  -[DNDRemoteServiceConnection queryStateForUpdateWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection _queue_remoteTarget]
  -[DNDRemoteServiceConnection deliverActiveModeAssertion:stateUpdate:clientIdentifiers:]
  -[DNDRemoteServiceConnection setModeConfiguration:withRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection activeModeAssertionWithRequestDetails:completionHandler:]
  -[DNDRemoteServiceConnection removeEventListener:]
  -[DNDRemoteServiceConnection getAllowedModesForContactHandle:withRequestDetails:completionHandler:]


DNDSettingsService : NSObject <DNDRemoteServiceConnectionEventListener>
 @property  NSString *clientIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSettingsService initialize]
  +[DNDSettingsService serviceForClientIdentifier:]

  // instance methods
  -[DNDSettingsService phoneCallBypassSettingsReturningError:]
  -[DNDSettingsService setBehaviorSettings:error:]
  -[DNDSettingsService setConfiguration:forModeIdentifier:error:]
  -[DNDSettingsService configurationForModeIdentifier:error:]
  -[DNDSettingsService _initWithClientIdentifier:]
  -[DNDSettingsService .cxx_destruct]
  -[DNDSettingsService setPhoneCallBypassSettings:error:]
  -[DNDSettingsService removeSettingsUpdateListener:error:]
  -[DNDSettingsService clientIdentifier]
  -[DNDSettingsService setBehaviorSettings:returningError:]
  -[DNDSettingsService addSettingsUpdateListener:error:]
  -[DNDSettingsService remoteService:didReceiveUpdatedBehaviorSettings:]
  -[DNDSettingsService setScheduleSettings:returningError:]
  -[DNDSettingsService setPhoneCallBypassSettings:returningError:]
  -[DNDSettingsService removeSettingsUpdateListener:]
  -[DNDSettingsService remoteService:didReceiveUpdatedPhoneCallBypassSettings:]
  -[DNDSettingsService setScheduleSettings:error:]
  -[DNDSettingsService addSettingsUpdateListener:withCompletionHandler:]
  -[DNDSettingsService behaviorSettingsReturningError:]
  -[DNDSettingsService _queue_registerForSettingsUpdatesIfRequired]
  -[DNDSettingsService scheduleSettingsReturningError:]
  -[DNDSettingsService remoteService:didReceiveUpdatedScheduleSettings:]


(DiffBuilding)
	// instance methods
	-[(DiffBuilding) diffAgainstObject:usingDiffBuilder:withDescription:]

(DiffBuilding)
	// instance methods
	-[(DiffBuilding) diffAgainstObject:usingDiffBuilder:withDescription:]

(DiffBuilding)
	// instance methods
	-[(DiffBuilding) diffAgainstObject:usingDiffBuilder:withDescription:]

(DoNotDisturb)
	// instance methods
	-[(DoNotDisturb) dnd_privacyObfuscatedString]

NSBundle(DoNotDisturb)
	// class methods
	+[NSBundle(DoNotDisturb) dnd_doNotDisturbLocalizationBundle]
	+[NSBundle(DoNotDisturb) dnd_locationBundle]

(DoNotDisturb)
	// class methods
	+[(DoNotDisturb) dnd_settingsURLWithModeIdentifier:]
	+[(DoNotDisturb) dnd_setupURLWithSemanticType:]
	+[(DoNotDisturb) dnd_defaultSettingsURL]
	+[(DoNotDisturb) dnd_defaultSetupURL]

01 00 0200 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDispatchQueueAttributes 
01 00 0600 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSMutableServiceInterface 
01 00 0200 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSObjCProtocol 
01 00 0600 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceConnection 
01 00 0600 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceConnectionEndpoint 
01 00 0600 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceQuality 
01 00 0300 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLCircularRegion 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
