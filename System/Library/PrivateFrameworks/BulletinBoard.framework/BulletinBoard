|| __DATA.__data _BBActionToTitleMapBlock
|| __DATA.__data _BBLogSubsystem
|| __DATA.__data _BBServerListeningForConnectionsKey
|| __DATA.__objc_data _OBJC_CLASS_$_BBDismissalDictionaryAndFeeds
|| __DATA.__objc_data _OBJC_CLASS_$_BBDismissalItem
|| __DATA.__objc_data _OBJC_CLASS_$_BBDismissalSyncBulletinMatch
|| __DATA.__objc_data _OBJC_CLASS_$_BBDismissalSyncCacheItem
|| __DATA.__objc_data _OBJC_CLASS_$_BBLaunchAction
|| __DATA.__objc_data _OBJC_CLASS_$_BBLocalDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_BBLocalDataProviderStore
|| __DATA.__objc_data _OBJC_CLASS_$_BBObserverGatewayAddBulletinRequest
|| __DATA.__objc_data _OBJC_CLASS_$_BBObserverGatewayEnumerator
|| __DATA.__objc_data _OBJC_CLASS_$_BBSectionMuteAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_BBServerConduit
|| __DATA.__objc_data _OBJC_CLASS_$_BBSyncDelayedDismissal
|| __DATA.__objc_data _OBJC_CLASS_$_BBThreadsMuteAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_BBDismissalDictionaryAndFeeds
|| __DATA.__objc_data _OBJC_METACLASS_$_BBDismissalItem
|| __DATA.__objc_data _OBJC_METACLASS_$_BBDismissalSyncBulletinMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_BBDismissalSyncCacheItem
|| __DATA.__objc_data _OBJC_METACLASS_$_BBLaunchAction
|| __DATA.__objc_data _OBJC_METACLASS_$_BBLocalDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_BBLocalDataProviderStore
|| __DATA.__objc_data _OBJC_METACLASS_$_BBObserverGatewayAddBulletinRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_BBObserverGatewayEnumerator
|| __DATA.__objc_data _OBJC_METACLASS_$_BBSectionMuteAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_BBServerConduit
|| __DATA.__objc_data _OBJC_METACLASS_$_BBSyncDelayedDismissal
|| __DATA.__objc_data _OBJC_METACLASS_$_BBThreadsMuteAssertion
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBAttachmentMetadata._URL
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBAttachmentMetadata._hiddenFromDefaultExpandedView
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBAttachmentMetadata._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBAttachmentMetadata._thumbnailGeneratorUserInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBAttachmentMetadata._thumbnailHidden
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBAttachmentMetadata._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBAttachmentMetadata._uniformType
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBDataProviderIdentity._defaultSectionInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBDataProviderIdentity._defaultSubsectionInfos
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBDataProviderIdentity._parentSectionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBDataProviderIdentity._sectionBundlePath
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBDataProviderIdentity._sectionDisplayName
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBDataProviderIdentity._sectionIcon
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBDataProviderIdentity._sectionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBDataProviderIdentity._sectionParameters
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBDataProviderIdentity._sortDescriptors
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBDataProviderIdentity._sortKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBDataProviderIdentity._subsectionDisplayNames
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBDataProviderIdentity._traits
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBDataProviderIdentity._universalSectionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBResponse._bulletinID
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBResponse._lifeAssertion
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBResponse._replyText
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBResponse._sendBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBResponse._sent
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._dataProviderIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._displayName
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._factorySectionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._icon
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._managedSectionInfoSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._parentSection
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._pathToWeeAppPluginBundle
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._sectionCategory
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._sectionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._sectionInfoSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._sectionType
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._subsectionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._subsections
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSectionInfo._suppressFromSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBServer._bulletinRequestsByID
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSyncService._pendingDismissalDictionaries
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSyncService._pendingDismissalIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSyncService._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSyncService._queuedFeed
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSyncService._queuedSectionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSyncService._queuedUniversalSectionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_BBSyncService._service
|| __DATA_CONST.__const _BBBiometricResourceStateChanged
|| __DATA_CONST.__const _BBBulletinBoardEntitlement
|| __DATA_CONST.__const _BBBulletinContentTypeCallOther
|| __DATA_CONST.__const _BBBulletinContentTypeDefault
|| __DATA_CONST.__const _BBBulletinContentTypeIncomingCall
|| __DATA_CONST.__const _BBBulletinContentTypeIntercom
|| __DATA_CONST.__const _BBBulletinContentTypeMessagingDirect
|| __DATA_CONST.__const _BBBulletinContentTypeMessagingGroup
|| __DATA_CONST.__const _BBBulletinContentTypeMissedCall
|| __DATA_CONST.__const _BBBulletinContentTypeVoicemail
|| __DATA_CONST.__const _BBDataProviderClearedBulletinsKey
|| __DATA_CONST.__const _BBDataProviderClearedInfoKey
|| __DATA_CONST.__const _BBDataProviderConnectionName
|| __DATA_CONST.__const _BBDataProviderEntitlement
|| __DATA_CONST.__const _BBObserverConnectionName
|| __DATA_CONST.__const _BBObserverEntitlement
|| __DATA_CONST.__const _BBObserverGatewayLocalName
|| __DATA_CONST.__const _BBPreferencesDomain
|| __DATA_CONST.__const _BBServerConduitConnectionName
|| __DATA_CONST.__const _BBServerConduitEntitlement
|| __DATA_CONST.__const _BBServerSectionCategoryChronologicalKey
|| __DATA_CONST.__const _BBServerSectionCategoryDefaultKey
|| __DATA_CONST.__const _BBSettingsConnectionName
|| __DATA_CONST.__const _BBSettingsEntitlement
|| __DATA_CONST.__const _BBSyncDateKey
|| __DATA_CONST.__const _BBSyncHashKey
|| __DATA_CONST.__const _BBSystemStateEntitlement
|| __DATA_CONST.__const _BBUserDefaultsDidUpdateNotification
|| __DATA_CONST.__const _kBBBulletinActivityContinuationIdentifierKey
|| __DATA_CONST.__const _kBBBulletinContextContactInfoKey
|| __DATA_CONST.__const _kBBBulletinContextLaunchImageKey
|| __DATA_CONST.__const _kBBBulletinContextNotificationActionUserResponseInfoKey
|| __DATA_CONST.__const _kBBBulletinContextUserInfoKey
|| __DATA_CONST.__const _kBBResponseContextUserResponseInfoKey
|| __DATA_CONST.__const _kBBResponseContextUserResponseInfoTypedTextKey
|| __DATA_CONST.__const _kBBSound_AlertConfigurationKey
|| __DATA_CONST.__const _kBBSound_AudioCategoryKey
|| __DATA_CONST.__const _kBBSound_MaxDurationKey
|| __DATA_CONST.__const _kBBSound_RepeatsKey
|| __DATA_CONST.__const _kBBSound_RingtoneNameKey
|| __DATA_CONST.__const _kBBSound_SoundBehaviorKey
|| __DATA_CONST.__const _kBBSound_SoundTypeKey
|| __DATA_CONST.__const _kBBSound_SystemSoundIDKey
|| __DATA_CONST.__const _kBBSound_VibrationPatternKey
|| __DATA_DIRTY.__common _BBLogBehavior
|| __DATA_DIRTY.__common _BBLogBulletinDelivery
|| __DATA_DIRTY.__common _BBLogBulletinLife
|| __DATA_DIRTY.__common _BBLogConnection
|| __DATA_DIRTY.__common _BBLogDataProvider
|| __DATA_DIRTY.__common _BBLogExpiration
|| __DATA_DIRTY.__common _BBLogGateway
|| __DATA_DIRTY.__common _BBLogGeneral
|| __DATA_DIRTY.__common _BBLogMigration
|| __DATA_DIRTY.__common _BBLogSectionUpdates
|| __DATA_DIRTY.__common _BBLogSettings
|| __DATA_DIRTY.__common _BBLogSync
|| __DATA_DIRTY.__common ___BBServerQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBAccessoryIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBActionGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBActionResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBAppearance
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBAssociationSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBAttachmentMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBAttachments
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBBiometricResource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBBulletin
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBBulletinAddUpdate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBBulletinBoardDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBBulletinModifyUpdate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBBulletinRemoveUpdate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBBulletinRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBBulletinRequestParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBBulletinTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBBulletinUpdate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBBulletinUpdateTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBCommunicationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBContact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBContent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBDataProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBDataProviderConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBDataProviderConnectionResolver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBDataProviderIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBDataProviderManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBDataProviderProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBDismissalSyncCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBGlobalSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBMaskedSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBMutableAttachmentMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBMuteAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBMuteExpirationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBObjectCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBObserverClientProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBObserverGatewayHolder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBObserverServerProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBParentSectionDataProviderFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBRemoteDataProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBRemoteDataProviderConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBRemoteDataProviderConnectionResolver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBSectionAuthorizationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBSectionIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBSectionIconVariant
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBSectionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBSectionInfoSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBSectionParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBSectionSubtypeParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBSettingsGateway
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBSound
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBSyncService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BBThumbnailSizeConstraints
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBAccessoryIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBActionGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBActionResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBAppearance
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBAssociationSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBAttachmentMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBAttachments
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBBiometricResource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBBulletin
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBBulletinAddUpdate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBBulletinBoardDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBBulletinModifyUpdate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBBulletinRemoveUpdate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBBulletinRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBBulletinRequestParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBBulletinTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBBulletinUpdate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBBulletinUpdateTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBCommunicationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBContact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBContent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBDataProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBDataProviderConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBDataProviderConnectionResolver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBDataProviderIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBDataProviderManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBDataProviderProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBDismissalSyncCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBGlobalSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBMaskedSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBMutableAttachmentMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBMuteAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBMuteExpirationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBObjectCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBObserverClientProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBObserverGatewayHolder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBObserverServerProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBParentSectionDataProviderFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBRemoteDataProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBRemoteDataProviderConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBRemoteDataProviderConnectionResolver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBSectionAuthorizationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBSectionIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBSectionIconVariant
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBSectionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBSectionInfoSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBSectionParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBSectionSubtypeParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBSettingsGateway
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBSound
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBSyncService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BBThumbnailSizeConstraints
|| __TEXT.__const _BBSectionInfoVersionNumber
|| __TEXT.__const _kBBSectionParametersDefaultMessageNumLines
|| __TEXT.__text _BBAllowPublication
|| __TEXT.__text _BBAllowedClasses
|| __TEXT.__text _BBAnnounceSettingForSpokenNotificationSetting
|| __TEXT.__text _BBDataProviderAddBulletin
|| __TEXT.__text _BBDataProviderAddBulletinForDestinations
|| __TEXT.__text _BBDataProviderAddBulletinToLockScreen
|| __TEXT.__text _BBDataProviderConnectionCheckinServerInterface
|| __TEXT.__text _BBDataProviderInvalidateBulletins
|| __TEXT.__text _BBDataProviderInvalidateBulletinsForDestinations
|| __TEXT.__text _BBDataProviderInvalidateSectionParameters
|| __TEXT.__text _BBDataProviderModifyBulletin
|| __TEXT.__text _BBDataProviderReloadDefaultSectionInfo
|| __TEXT.__text _BBDataProviderSendMessage
|| __TEXT.__text _BBDataProviderUpdateClearedInfoWithHandler
|| __TEXT.__text _BBDataProviderUpdateSectionInfoWithHandler
|| __TEXT.__text _BBDataProviderWithdrawBulletinWithPublisherBulletinID
|| __TEXT.__text _BBDataProviderWithdrawBulletinsWithRecordID
|| __TEXT.__text _BBDismissalSyncDictionaryMatchesBulletin
|| __TEXT.__text _BBDispatchSafeSync
|| __TEXT.__text _BBDisplayNotice
|| __TEXT.__text _BBEventTrackingSyncDeviceCount
|| __TEXT.__text _BBGetObserverGatewayTimeout
|| __TEXT.__text _BBHasRequiredCapabilitiesForBundle
|| __TEXT.__text _BBInitializeUserDefaultsIfNecessary
|| __TEXT.__text _BBIsInternalDevice
|| __TEXT.__text _BBIsValueAllowed
|| __TEXT.__text _BBLibraryDirectoriesForFolderNamed
|| __TEXT.__text _BBLibraryDirectoriesForFolderNamedIncludingInternal
|| __TEXT.__text _BBNoteMigrationComplete
|| __TEXT.__text _BBObserverFeedStrings
|| __TEXT.__text _BBPowerLogBulletinBoardPublishEvent
|| __TEXT.__text _BBPrepareQueueForSafeSync
|| __TEXT.__text _BBPublisherDestinationForObserverFeed
|| __TEXT.__text _BBPublisherDestinationStrings
|| __TEXT.__text _BBPushSettingsDescription
|| __TEXT.__text _BBRegisterBulletinBoardLogging
|| __TEXT.__text _BBRemoveSavedChronologicalSectionInfo
|| __TEXT.__text _BBSavedChronologicalSectionOrder
|| __TEXT.__text _BBSavedSectionInfo
|| __TEXT.__text _BBServerAllowsPublication
|| __TEXT.__text _BBServerListeningForConnections
|| __TEXT.__text _BBServerRun
|| __TEXT.__text _BBServerSetAllowsPublication
|| __TEXT.__text _BBServerSetDefaultExpirationComponents
|| __TEXT.__text _BBShouldAlwaysSpeakLockScreenNotifications
|| __TEXT.__text _BBShouldPerformMigration
|| __TEXT.__text _BBShouldSyncUseUrgentPriority
|| __TEXT.__text _BBSpokenNotificationSettingForAnnounceSetting
|| __TEXT.__text _BBStringFromBBAnnounceCarPlaySetting
|| __TEXT.__text _BBStringFromBBAnnounceSetting
|| __TEXT.__text _BBStringFromBBContentPreviewSetting
|| __TEXT.__text _BBStringFromBBOldContentPreviewSetting
|| __TEXT.__text _BBStringFromBBScheduledDeliverySetting
|| __TEXT.__text _BBStringFromBBSystemSetting
|| __TEXT.__text _BBStringFromBool
|| __TEXT.__text _BBTakeStackshot
|| __TEXT.__text _BBToneLibraryHasSettingsForAlertType
|| __TEXT.__text _RemoteDataProviderClientProxyInterface
|| __TEXT.__text _RemoteDataProviderRegistrationInterface
|| __TEXT.__text _RemoteDataProviderServerProxyInterface
|| __TEXT.__text __BBDataProviderAddBulletinForDestinations
|| __TEXT.__text __BBDataProviderGetClearedInfoWithCompletion
|| __TEXT.__text __BBDataProviderGetSectionInfoWithCompletion
|| __TEXT.__text __BBDataProviderSetClearedInfo
|| __TEXT.__text __BBDataProviderSetSectionInfo
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AssertionServices: _BKSApplicationStateProcessIDKey
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ AssistantServices: _AFPreferencesDidChangeNotification
__ AssistantServices: _OBJC_CLASS_$_AFPreferences
__ AssistantServices: _OBJC_CLASS_$_AFSiriAnnouncementRequestCapabilityManager
__ BaseBoard: _BSBundleIDForPID
__ BaseBoard: _BSEqualArrays
__ BaseBoard: _BSEqualDictionaries
__ BaseBoard: _BSEqualObjects
__ BaseBoard: _BSEqualStrings
__ BaseBoard: _BSFloatEqualToFloat
__ BaseBoard: _BSIsBeingDebugged
__ BaseBoard: _BSLogAddStateCaptureBlockWithTitle
__ BaseBoard: _BSSystemHasCapability
__ BaseBoard: _BSSystemRootDirectory
__ BaseBoard: _OBJC_CLASS_$_BSAbstractDefaultDomain
__ BaseBoard: _OBJC_CLASS_$_BSBlockSentinel
__ BaseBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ BaseBoard: _OBJC_METACLASS_$_BSAbstractDefaultDomain
__ BaseBoard: __BSHasInternalSettings
__ BaseBoard: __BSSafeCast
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$__LSOpenConfiguration
__ CrashReporterSupport: _WriteStackshotReport
__ CrashReporterSupport: _WriteStackshotReport_async
__ Foundation: _NSClassFromString
__ Foundation: _NSDefaultMallocZone
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _FBSOpenApplicationOptionKeyLaunchOrigin
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _FBSOpenApplicationOptionKeyUnlockDevice
__ FrontBoardServices: _OBJC_CLASS_$_BSServiceConnectionEndpoint
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ IDS: _IDSCopyIDForAccount
__ IDS: _IDSCopyIDForDevice
__ IDS: _IDSSendMessageOptionEnforceRemoteTimeoutsKey
__ IDS: _IDSSendMessageOptionLocalDeliveryKey
__ IDS: _IDSSendMessageOptionTimeoutKey
__ IDS: _OBJC_CLASS_$_IDSService
__ IOKit: _IOAllowPowerChange
__ IOKit: _IONotificationPortGetRunLoopSource
__ IOKit: _IORegisterForSystemPower
__ ManagedConfiguration: _MCEffectiveSettingsChangedNotification
__ ManagedConfiguration: _MCPasscodeChangedNotification
__ ManagedConfiguration: _MCUserNotificationsSettingsChangedNotification
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ ManagedConfiguration: _kMCNotificationsAlertTypeKey
__ ManagedConfiguration: _kMCNotificationsBadgesEnabledKey
__ ManagedConfiguration: _kMCNotificationsBundleIdentifierKey
__ ManagedConfiguration: _kMCNotificationsCriticalAlertEnabledKey
__ ManagedConfiguration: _kMCNotificationsGroupingTypeKey
__ ManagedConfiguration: _kMCNotificationsNotificationsEnabledKey
__ ManagedConfiguration: _kMCNotificationsPreviewTypeKey
__ ManagedConfiguration: _kMCNotificationsShowInCarPlayKey
__ ManagedConfiguration: _kMCNotificationsShowInLockScreenKey
__ ManagedConfiguration: _kMCNotificationsShowInNotificationCenterKey
__ ManagedConfiguration: _kMCNotificationsSoundsEnabledKey
__ PersistentConnection: _OBJC_CLASS_$_PCPersistentTimer
__ PowerLog: _PLLogRegisteredEvent
__ ToneLibrary: _OBJC_CLASS_$_TLAlert
__ ToneLibrary: _OBJC_CLASS_$_TLAlertConfiguration
__ ToneLibrary: _OBJC_CLASS_$_TLToneManager
__ ToneLibrary: _OBJC_CLASS_$_TLVibrationManager
__ ToneLibrary: _TLToneIdentifierNone
__ ToneLibrary: _TLVibrationIdentifierNone
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_getName
BBDismissalItem : NSObject
 @property  unsigned long feeds
 @property  NSDate *expiration

  // instance methods
  -[BBDismissalItem feeds]
  -[BBDismissalItem hasExpired]
  -[BBDismissalItem .cxx_destruct]
  -[BBDismissalItem expiration]
  -[BBDismissalItem initWithFeeds:]
  -[BBDismissalItem addFeeds:]


BBDismissalDictionaryAndFeeds : BBDismissalItem
 @property  double dismissalTimeInterval
 @property  NSString *dismissalHash

  // instance methods
  -[BBDismissalDictionaryAndFeeds .cxx_destruct]
  -[BBDismissalDictionaryAndFeeds initWithDismissalDictionary:andFeeds:]
  -[BBDismissalDictionaryAndFeeds matchDismissalDictionary:]
  -[BBDismissalDictionaryAndFeeds dismissalTimeInterval]
  -[BBDismissalDictionaryAndFeeds dismissalHash]


BBDismissalSyncBulletinMatch : NSObject
 @property  NSString *sectionID
 @property  BBDismissalItem *dismissalItem
 @property  NSString *dismissalID
 @property  unsigned long feeds

  // instance methods
  -[BBDismissalSyncBulletinMatch feeds]
  -[BBDismissalSyncBulletinMatch .cxx_destruct]
  -[BBDismissalSyncBulletinMatch setSectionID:]
  -[BBDismissalSyncBulletinMatch sectionID]
  -[BBDismissalSyncBulletinMatch initWithDismissalID:andItem:]
  -[BBDismissalSyncBulletinMatch initWithDismissalDictionaryItem:]
  -[BBDismissalSyncBulletinMatch dismissalItem]
  -[BBDismissalSyncBulletinMatch setDismissalItem:]
  -[BBDismissalSyncBulletinMatch dismissalID]
  -[BBDismissalSyncBulletinMatch setDismissalID:]
  -[BBDismissalSyncBulletinMatch setFeeds:]


BBDismissalSyncCacheItem : NSObject
 @property  NSMutableArray *dismissalDictionariesAndFeeds
 @property  NSMutableDictionary *dismissalIDToFeeds

  // instance methods
  -[BBDismissalSyncCacheItem .cxx_destruct]
  -[BBDismissalSyncCacheItem init]
  -[BBDismissalSyncCacheItem findBulletinMatch:]
  -[BBDismissalSyncCacheItem removeBulletinMatch:]
  -[BBDismissalSyncCacheItem cacheDismissalDictionaries:dismissalIDs:forFeeds:]
  -[BBDismissalSyncCacheItem purgeExpired]
  -[BBDismissalSyncCacheItem dismissalDictionariesAndFeeds]
  -[BBDismissalSyncCacheItem dismissalIDToFeeds]


BBDismissalSyncCache : NSObject
 @property  NSMutableDictionary *cache
 @property  NSDate *timeToCheck

  // instance methods
  -[BBDismissalSyncCache setCache:]
  -[BBDismissalSyncCache cacheDismissalDictionaries:dismissalIDs:inSection:forFeeds:]
  -[BBDismissalSyncCache .cxx_destruct]
  -[BBDismissalSyncCache cache]
  -[BBDismissalSyncCache init]
  -[BBDismissalSyncCache _checkCache]
  -[BBDismissalSyncCache _isTimeToCheck]
  -[BBDismissalSyncCache setTimeToCheck:]
  -[BBDismissalSyncCache findBulletinMatch:]
  -[BBDismissalSyncCache removeBulletinMatch:]
  -[BBDismissalSyncCache timeToCheck]


BBCommunicationContext : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *bundleIdentifier
 @property  NSString *associatedObjectUri
 @property  NSString *displayName
 @property  BBContact *sender
 @property  NSArray *recipients
 @property  NSURL *contentURL
 @property  NSString *imageName
 @property  BOOL systemImage
 @property  BOOL mentionsCurrentUser
 @property  BOOL notifyRecipientAnyway
 @property  BOOL replyToCurrentUser
 @property  unsigned long recipientCount

  // class methods
  +[BBCommunicationContext communicationContextWithIdentifier:bundleIdentifier:associatedObjectUri:displayName:sender:recipients:contentURL:]
  +[BBCommunicationContext supportsSecureCoding]
  +[BBCommunicationContext communicationContextWithIdentifier:bundleIdentifier:associatedObjectUri:displayName:sender:recipients:contentURL:imageName:systemImage:mentionsCurrentUser:notifyRecipientAnyway:replyToCurrentUser:recipientCount:]
  +[BBCommunicationContext communicationContextWithIdentifier:bundleIdentifier:associatedObjectUri:displayName:sender:recipients:contentURL:mentionsCurrentUser:notifyRecipientAnyway:replyToCurrentUser:recipientCount:]

  // instance methods
  -[BBCommunicationContext displayName]
  -[BBCommunicationContext notifyRecipientAnyway]
  -[BBCommunicationContext initWithCoder:]
  -[BBCommunicationContext bundleIdentifier]
  -[BBCommunicationContext .cxx_destruct]
  -[BBCommunicationContext sender]
  -[BBCommunicationContext systemImage]
  -[BBCommunicationContext recipients]
  -[BBCommunicationContext recipientCount]
  -[BBCommunicationContext isEqual:]
  -[BBCommunicationContext identifier]
  -[BBCommunicationContext mentionsCurrentUser]
  -[BBCommunicationContext imageName]
  -[BBCommunicationContext associatedObjectUri]
  -[BBCommunicationContext isReplyToCurrentUser]
  -[BBCommunicationContext copyWithZone:]
  -[BBCommunicationContext contentURL]
  -[BBCommunicationContext encodeWithCoder:]
  -[BBCommunicationContext _initWithIdentifier:bundleIdentifier:associatedObjectUri:displayName:sender:recipients:contentURL:imageName:systemImage:mentionsCurrentUser:notifyRecipientAnyway:replyToCurrentUser:recipientCount:]


BBResponse : NSObject <NSSecureCoding>
 @property  NSArray *lifeAssertions
 @property  @? sendBlock
 @property  NSString *bulletinID
 @property  long long actionType
 @property  unsigned long actionActivationMode
 @property  long long actionBehavior
 @property  NSString *buttonID
 @property  NSString *actionID
 @property  NSURL *actionLaunchURL
 @property  NSString *originID
 @property  NSString *replyText
 @property  NSDictionary *context
 @property  BSServiceConnectionEndpoint *endpoint
 @property  BOOL activated
 @property  BOOL didOpenApplication

  // class methods
  +[BBResponse supportsSecureCoding]

  // instance methods
  -[BBResponse send]
  -[BBResponse setActionType:]
  -[BBResponse initWithCoder:]
  -[BBResponse .cxx_destruct]
  -[BBResponse bulletinID]
  -[BBResponse setActivated:]
  -[BBResponse sendBlock]
  -[BBResponse actionType]
  -[BBResponse activated]
  -[BBResponse setEndpoint:]
  -[BBResponse setContext:]
  -[BBResponse setSendBlock:]
  -[BBResponse endpoint]
  -[BBResponse buttonID]
  -[BBResponse actionID]
  -[BBResponse originID]
  -[BBResponse encodeWithCoder:]
  -[BBResponse context]
  -[BBResponse setBulletinID:]
  -[BBResponse setActionActivationMode:]
  -[BBResponse setActionBehavior:]
  -[BBResponse setReplyText:]
  -[BBResponse setButtonID:]
  -[BBResponse setActionID:]
  -[BBResponse setActionLaunchURL:]
  -[BBResponse setOriginID:]
  -[BBResponse setDidOpenApplication:]
  -[BBResponse actionActivationMode]
  -[BBResponse actionBehavior]
  -[BBResponse replyText]
  -[BBResponse actionLaunchURL]
  -[BBResponse didOpenApplication]
  -[BBResponse lifeAssertions]
  -[BBResponse setLifeAssertions:]


BBBulletin : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *sectionDisplayName
 @property  BBSectionIcon *sectionIcon
 @property  BOOL showsSubtitle
 @property  unsigned long messageNumberOfLines
 @property  BOOL usesVariableLayout
 @property  BOOL orderSectionUsingRecencyDate
 @property  BOOL showsDateInFloatingLockScreenAlert
 @property  NSString *subtypeSummaryFormat
 @property  NSString *hiddenPreviewsBodyPlaceholder
 @property  NSString *missedBannerDescriptionFormat
 @property  NSString *fullUnlockActionLabel
 @property  NSString *unlockActionLabel
 @property  NSSet *alertSuppressionAppIDs
 @property  BOOL suppressesAlertsWhenAppIsActive
 @property  BOOL coalescesWhenLocked
 @property  BOOL inertWhenLocked
 @property  BOOL preservesUnlockActionCase
 @property  BOOL visuallyIndicatesWhenDateIsInFuture
 @property  NSString *fullAlternateActionLabel
 @property  NSString *alternateActionLabel
 @property  BOOL canBeSilencedByMenuButtonPress
 @property  BOOL preventLock
 @property  BOOL suppressesTitle
 @property  BOOL showsUnreadIndicatorForNoticesFeed
 @property  BOOL showsContactPhoto
 @property  BOOL playsSoundForModify
 @property  BOOL allowsAutomaticRemovalFromLockScreen
 @property  BOOL allowsAddingToLockScreenWhenUnlocked
 @property  BOOL prioritizeAtTopOfLockScreen
 @property  BOOL revealsAdditionalContentOnPresentation
 @property  BOOL shouldDismissBulletinWhenClosed
 @property  BOOL allowsPersistentBannersInCarPlay
 @property  BOOL allowsSupplementaryActionsInCarPlay
 @property  BOOL playsMediaWhenRaised
 @property  BOOL suppressDelayForForwardedBulletins
 @property  BOOL hideDismissActionInCarPlay
 @property  unsigned long subtypePriority
 @property  long long iPodOutAlertType
 @property  NSString *bannerAccessoryRemoteViewControllerClassName
 @property  NSString *bannerAccessoryRemoteServiceBundleIdentifier
 @property  NSString *secondaryContentRemoteViewControllerClassName
 @property  NSString *secondaryContentRemoteServiceBundleIdentifier
 @property  unsigned long privacySettings
 @property  BOOL suppressesMessageForPrivacy
 @property  NSString *topic
 @property  NSString *section
 @property  NSString *sectionID
 @property  NSString *sectionBundlePath
 @property  NSSet *subsectionIDs
 @property  NSString *recordID
 @property  NSString *publisherBulletinID
 @property  NSString *dismissalID
 @property  NSString *categoryID
 @property  NSString *threadID
 @property  NSArray *peopleIDs
 @property  long long sectionSubtype
 @property  NSArray *intentIDs
 @property  unsigned long counter
 @property  unsigned long interruptionLevel
 @property  float relevanceScore
 @property  NSString *header
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *message
 @property  NSString *footer
 @property  BBContent *content
 @property  BBContent *modalAlertContent
 @property  BBContent *starkBannerContent
 @property  BBCommunicationContext *communicationContext
 @property  NSString *summaryArgument
 @property  unsigned long summaryArgumentCount
 @property  BBSectionIcon *icon
 @property  BOOL hasCriticalIcon
 @property  BOOL hasSubordinateIcon
 @property  BOOL hasEventDate
 @property  NSDate *date
 @property  NSDate *endDate
 @property  NSDate *recencyDate
 @property  long long dateFormatStyle
 @property  BOOL dateIsAllDay
 @property  NSTimeZone *timeZone
 @property  BBAccessoryIcon *accessoryIconMask
 @property  BBImage *accessoryImage
 @property  BOOL clearable
 @property  BBSound *sound
 @property  BOOL turnsOnDisplay
 @property  BBAttachmentMetadata *primaryAttachment
 @property  NSArray *additionalAttachments
 @property  BOOL wantsFullscreenPresentation
 @property  BOOL ignoresQuietMode
 @property  BOOL ignoresDowntime
 @property  BOOL preemptsPresentedAlert
 @property  BOOL displaysActionsInline
 @property  NSString *unlockActionLabelOverride
 @property  BBAction *defaultAction
 @property  BBAction *alternateAction
 @property  BBAction *acknowledgeAction
 @property  BBAction *snoozeAction
 @property  BBAction *raiseAction
 @property  NSArray *buttons
 @property  NSMutableDictionary *actions
 @property  NSMutableDictionary *supplementaryActionsByLayout
 @property  NSSet *alertSuppressionContexts
 @property  BOOL expiresOnPublisherDeath
 @property  NSDictionary *context
 @property  BOOL usesExternalSync
 @property  BOOL loading
 @property  NSString *bulletinID
 @property  NSDate *lastInterruptDate
 @property  NSDate *publicationDate
 @property  NSString *bulletinVersionID
 @property  NSDate *expirationDate
 @property  unsigned long expirationEvents
 @property  BBAction *expireAction
 @property  unsigned long realertCount
 @property  NSSet *alertSuppressionAppIDs_deprecated
 @property  NSString *parentSectionID
 @property  NSString *universalSectionID
 @property  BOOL hasPrivateContent
 @property  long long contentPreviewSetting
 @property  BOOL preventAutomaticRemovalFromLockScreen
 @property  long long lockScreenPriority
 @property  long long backgroundStyle
 @property  NSString *contentType
 @property  NSString *publisherMatchID
 @property  BOOL messagingNotification
 @property  BOOL callNotification

  // class methods
  +[BBBulletin supportsSecureCoding]
  +[BBBulletin validSortDescriptorsFromSortDescriptors:]
  +[BBBulletin bulletinWithBulletin:]
  +[BBBulletin _observerAssociationSet]
  +[BBBulletin _lifeAssertionAssociationSet]
  +[BBBulletin bulletinReferenceDateFromDate:]
  +[BBBulletin vetSortDescriptor:]

  // instance methods
  -[BBBulletin threadID]
  -[BBBulletin setRealertCount:]
  -[BBBulletin setRelevanceScore:]
  -[BBBulletin setSummaryArgument:]
  -[BBBulletin setInterruptionLevel:]
  -[BBBulletin setRecordID:]
  -[BBBulletin setHeader:]
  -[BBBulletin setActions:]
  -[BBBulletin setContent:]
  -[BBBulletin defaultAction]
  -[BBBulletin setTimeZone:]
  -[BBBulletin setCounter:]
  -[BBBulletin section]
  -[BBBulletin summaryArgumentCount]
  -[BBBulletin content]
  -[BBBulletin timeZone]
  -[BBBulletin summaryArgument]
  -[BBBulletin suppressesAlertsWhenAppIsActive]
  -[BBBulletin setSummaryArgumentCount:]
  -[BBBulletin setSound:]
  -[BBBulletin setLoading:]
  -[BBBulletin showsMessagePreview]
  -[BBBulletin footer]
  -[BBBulletin setDateFormatStyle:]
  -[BBBulletin hiddenPreviewsBodyPlaceholder]
  -[BBBulletin setAlertSuppressionContexts:]
  -[BBBulletin setBackgroundStyle:]
  -[BBBulletin setFooter:]
  -[BBBulletin initWithCoder:]
  -[BBBulletin setSectionBundlePath:]
  -[BBBulletin relevanceScore]
  -[BBBulletin icon]
  -[BBBulletin header]
  -[BBBulletin setTitle:]
  -[BBBulletin showsUnreadIndicatorForNoticesFeed]
  -[BBBulletin coalescesWhenLocked]
  -[BBBulletin sound]
  -[BBBulletin setEndDate:]
  -[BBBulletin alertSuppressionAppIDs]
  -[BBBulletin setDefaultAction:]
  -[BBBulletin setIgnoresQuietMode:]
  -[BBBulletin alternateActionLabel]
  -[BBBulletin setButtons:]
  -[BBBulletin backgroundStyle]
  -[BBBulletin setCommunicationContext:]
  -[BBBulletin isLoading]
  -[BBBulletin iPodOutAlertType]
  -[BBBulletin .cxx_destruct]
  -[BBBulletin dateFormatStyle]
  -[BBBulletin bannerAccessoryRemoteViewControllerClassName]
  -[BBBulletin setSilenceAction:]
  -[BBBulletin revealsAdditionalContentOnPresentation]
  -[BBBulletin bulletinID]
  -[BBBulletin setMessage:]
  -[BBBulletin alertSuppressionContexts]
  -[BBBulletin suppressesTitle]
  -[BBBulletin recordID]
  -[BBBulletin setSubtitle:]
  -[BBBulletin actions]
  -[BBBulletin interruptionLevel]
  -[BBBulletin missedBannerDescriptionFormat]
  -[BBBulletin allowsSupplementaryActionsInCarPlay]
  -[BBBulletin messageNumberOfLines]
  -[BBBulletin setContentType:]
  -[BBBulletin setHasEventDate:]
  -[BBBulletin hasEventDate]
  -[BBBulletin setExpirationDate:]
  -[BBBulletin sectionIcon]
  -[BBBulletin setCategoryID:]
  -[BBBulletin alternateAction]
  -[BBBulletin bannerAccessoryRemoteServiceBundleIdentifier]
  -[BBBulletin preemptsPresentedAlert]
  -[BBBulletin visuallyIndicatesWhenDateIsInFuture]
  -[BBBulletin sectionBundlePath]
  -[BBBulletin init]
  -[BBBulletin secondaryContentRemoteServiceBundleIdentifier]
  -[BBBulletin setSectionID:]
  -[BBBulletin suppressDelayForForwardedBulletins]
  -[BBBulletin sectionDisplayName]
  -[BBBulletin unlockActionLabel]
  -[BBBulletin setSection:]
  -[BBBulletin setAlternateAction:]
  -[BBBulletin hideDismissActionInCarPlay]
  -[BBBulletin isEqual:]
  -[BBBulletin setContentPreviewSetting:]
  -[BBBulletin privacySettings]
  -[BBBulletin expirationEvents]
  -[BBBulletin shouldDismissBulletinWhenClosed]
  -[BBBulletin topic]
  -[BBBulletin contentType]
  -[BBBulletin prioritizeAtTopOfLockScreen]
  -[BBBulletin displaysActionsInline]
  -[BBBulletin syncHash]
  -[BBBulletin setThreadID:]
  -[BBBulletin setIcon:]
  -[BBBulletin subtitle]
  -[BBBulletin message]
  -[BBBulletin setShowsMessagePreview:]
  -[BBBulletin addObserver:]
  -[BBBulletin accessoryImage]
  -[BBBulletin subtypePriority]
  -[BBBulletin inertWhenLocked]
  -[BBBulletin title]
  -[BBBulletin realertCount]
  -[BBBulletin setDate:]
  -[BBBulletin counter]
  -[BBBulletin fullUnlockActionLabel]
  -[BBBulletin preservesUnlockActionCase]
  -[BBBulletin canBeSilencedByMenuButtonPress]
  -[BBBulletin publicationDate]
  -[BBBulletin subtypeSummaryFormat]
  -[BBBulletin usesVariableLayout]
  -[BBBulletin setDismissAction:]
  -[BBBulletin ignoresQuietMode]
  -[BBBulletin setLockScreenPriority:]
  -[BBBulletin allowsPersistentBannersInCarPlay]
  -[BBBulletin shortDescription]
  -[BBBulletin showsContactPhoto]
  -[BBBulletin intentIDs]
  -[BBBulletin setContext:]
  -[BBBulletin preventLock]
  -[BBBulletin playsMediaWhenRaised]
  -[BBBulletin dealloc]
  -[BBBulletin setPublicationDate:]
  -[BBBulletin dismissAction]
  -[BBBulletin orderSectionUsingRecencyDate]
  -[BBBulletin copyWithZone:]
  -[BBBulletin allowsAutomaticRemovalFromLockScreen]
  -[BBBulletin actionWithIdentifier:]
  -[BBBulletin secondaryContentRemoteViewControllerClassName]
  -[BBBulletin supplementaryActions]
  -[BBBulletin sectionSubtype]
  -[BBBulletin dateIsAllDay]
  -[BBBulletin recencyDate]
  -[BBBulletin modalAlertContent]
  -[BBBulletin publisherBulletinID]
  -[BBBulletin snoozeAction]
  -[BBBulletin setAccessoryImage:]
  -[BBBulletin expirationDate]
  -[BBBulletin showsDateInFloatingLockScreenAlert]
  -[BBBulletin setDisplaysActionsInline:]
  -[BBBulletin lockScreenPriority]
  -[BBBulletin endDate]
  -[BBBulletin communicationContext]
  -[BBBulletin showsSubtitle]
  -[BBBulletin setPreemptsPresentedAlert:]
  -[BBBulletin sectionID]
  -[BBBulletin contentPreviewSetting]
  -[BBBulletin encodeWithCoder:]
  -[BBBulletin allowsAddingToLockScreenWhenUnlocked]
  -[BBBulletin playsSoundForModify]
  -[BBBulletin categoryID]
  -[BBBulletin buttons]
  -[BBBulletin setExpirationEvents:]
  -[BBBulletin date]
  -[BBBulletin context]
  -[BBBulletin fullAlternateActionLabel]
  -[BBBulletin setDateIsAllDay:]
  -[BBBulletin setRecencyDate:]
  -[BBBulletin dismissalID]
  -[BBBulletin setDismissalID:]
  -[BBBulletin setBulletinID:]
  -[BBBulletin lifeAssertions]
  -[BBBulletin _fillOutCopy:withZone:]
  -[BBBulletin bulletinVersionID]
  -[BBBulletin universalSectionID]
  -[BBBulletin parentSectionID]
  -[BBBulletin subsectionIDs]
  -[BBBulletin starkBannerContent]
  -[BBBulletin hasCriticalIcon]
  -[BBBulletin hasSubordinateIcon]
  -[BBBulletin accessoryIconMask]
  -[BBBulletin clearable]
  -[BBBulletin turnsOnDisplay]
  -[BBBulletin primaryAttachment]
  -[BBBulletin additionalAttachments]
  -[BBBulletin unlockActionLabelOverride]
  -[BBBulletin wantsFullscreenPresentation]
  -[BBBulletin ignoresDowntime]
  -[BBBulletin supplementaryActionsByLayout]
  -[BBBulletin lastInterruptDate]
  -[BBBulletin usesExternalSync]
  -[BBBulletin preventAutomaticRemovalFromLockScreen]
  -[BBBulletin alertSuppressionAppIDs_deprecated]
  -[BBBulletin peopleIDs]
  -[BBBulletin _allActions]
  -[BBBulletin _actionWithID:fromActions:]
  -[BBBulletin supplementaryActionsForLayout:]
  -[BBBulletin _allSupplementaryActions]
  -[BBBulletin responseSendBlock]
  -[BBBulletin _responseForAction:]
  -[BBBulletin responseForAction:]
  -[BBBulletin acknowledgeAction]
  -[BBBulletin raiseAction]
  -[BBBulletin expireAction]
  -[BBBulletin firstValidObserver]
  -[BBBulletin _actionKeyForType:]
  -[BBBulletin setUniversalSectionID:]
  -[BBBulletin setParentSectionID:]
  -[BBBulletin setSubsectionIDs:]
  -[BBBulletin setPublisherBulletinID:]
  -[BBBulletin setPeopleIDs:]
  -[BBBulletin setSectionSubtype:]
  -[BBBulletin setIntentIDs:]
  -[BBBulletin setModalAlertContent:]
  -[BBBulletin setStarkBannerContent:]
  -[BBBulletin setHasCriticalIcon:]
  -[BBBulletin setHasSubordinateIcon:]
  -[BBBulletin setAccessoryIconMask:]
  -[BBBulletin setClearable:]
  -[BBBulletin setTurnsOnDisplay:]
  -[BBBulletin setPrimaryAttachment:]
  -[BBBulletin setAdditionalAttachments:]
  -[BBBulletin setUnlockActionLabelOverride:]
  -[BBBulletin setWantsFullscreenPresentation:]
  -[BBBulletin setIgnoresDowntime:]
  -[BBBulletin setSupplementaryActionsByLayout:]
  -[BBBulletin setLastInterruptDate:]
  -[BBBulletin setUsesExternalSync:]
  -[BBBulletin setPreventAutomaticRemovalFromLockScreen:]
  -[BBBulletin setBulletinVersionID:]
  -[BBBulletin setAlertSuppressionAppIDs_deprecated:]
  -[BBBulletin copyAssociationsForBulletin:]
  -[BBBulletin hasPrivateContent]
  -[BBBulletin setHasPrivateContent:]
  -[BBBulletin numberOfAdditionalAttachmentsOfType:]
  -[BBBulletin _safeDescription:]
  -[BBBulletin isMessagingNotification]
  -[BBBulletin isCallNotification]
  -[BBBulletin primaryAttachmentType]
  -[BBBulletin numberOfAdditionalAttachments]
  -[BBBulletin setAcknowledgeAction:]
  -[BBBulletin setExpireAction:]
  -[BBBulletin setSnoozeAction:]
  -[BBBulletin setRaiseAction:]
  -[BBBulletin silenceAction]
  -[BBBulletin responseForDefaultAction]
  -[BBBulletin responseForAcknowledgeAction]
  -[BBBulletin responseForButtonActionAtIndex:]
  -[BBBulletin responseForSnoozeAction]
  -[BBBulletin responseForRaiseAction]
  -[BBBulletin responseForExpireAction]
  -[BBBulletin actionForResponse:]
  -[BBBulletin publisherMatchID]
  -[BBBulletin safeDescription]
  -[BBBulletin expiresOnPublisherDeath]
  -[BBBulletin setExpiresOnPublisherDeath:]
  -[BBBulletin addLifeAssertion:]
  -[BBBulletin _sectionParameters]
  -[BBBulletin _sectionSubtypeParameters]
  -[BBBulletin suppressesMessageForPrivacy]


BBContent : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *message

  // class methods
  +[BBContent supportsSecureCoding]
  +[BBContent contentWithTitle:subtitle:message:]

  // instance methods
  -[BBContent initWithCoder:]
  -[BBContent setTitle:]
  -[BBContent .cxx_destruct]
  -[BBContent setMessage:]
  -[BBContent setSubtitle:]
  -[BBContent isEqual:]
  -[BBContent subtitle]
  -[BBContent message]
  -[BBContent title]
  -[BBContent copyWithZone:]
  -[BBContent isEqualToContent:]
  -[BBContent encodeWithCoder:]


BBBulletinRequest : BBBulletin
 @property  NSString *bulletinID
 @property  NSDate *lastInterruptDate
 @property  NSDate *publicationDate
 @property  NSString *universalSectionID
 @property  NSString *parentSectionID
 @property  long long contentPreviewSetting
 @property  NSDictionary *context
 @property  NSString *unlockActionLabelOverride
 @property  NSSet *alertSuppressionAppIDs_deprecated
 @property  NSString *sectionID
 @property  NSString *sectionBundlePath
 @property  NSSet *subsectionIDs
 @property  NSString *recordID
 @property  NSString *publisherBulletinID
 @property  NSString *dismissalID
 @property  NSString *categoryID
 @property  NSString *threadID
 @property  NSArray *peopleIDs
 @property  long long sectionSubtype
 @property  NSArray *intentIDs
 @property  unsigned long counter
 @property  unsigned long interruptionLevel
 @property  float relevanceScore
 @property  NSString *header
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *message
 @property  NSString *footer
 @property  BBContent *modalAlertContent
 @property  BBCommunicationContext *communicationContext
 @property  BBSectionIcon *icon
 @property  BOOL hasCriticalIcon
 @property  BOOL hasSubordinateIcon
 @property  BOOL hasEventDate
 @property  NSDate *date
 @property  NSDate *endDate
 @property  NSDate *recencyDate
 @property  long long dateFormatStyle
 @property  BOOL dateIsAllDay
 @property  NSTimeZone *timeZone
 @property  BBAccessoryIcon *accessoryIconMask
 @property  BBImage *accessoryImage
 @property  BOOL clearable
 @property  BBSound *sound
 @property  BOOL turnsOnDisplay
 @property  unsigned long realertCount
 @property  BBAttachmentMetadata *primaryAttachment
 @property  NSArray *additionalAttachments
 @property  BOOL wantsFullscreenPresentation
 @property  BOOL ignoresQuietMode
 @property  BOOL ignoresDowntime
 @property  BOOL preemptsPresentedAlert
 @property  BOOL displaysActionsInline
 @property  NSSet *alertSuppressionContexts
 @property  NSString *contentType
 @property  BBAction *defaultAction
 @property  BBAction *alternateAction
 @property  BBAction *acknowledgeAction
 @property  BBAction *dismissAction
 @property  BBAction *snoozeAction
 @property  BBAction *raiseAction
 @property  BBAction *silenceAction
 @property  NSArray *supplementaryActions
 @property  NSDate *expirationDate
 @property  unsigned long expirationEvents
 @property  BBAction *expireAction
 @property  BOOL usesExternalSync
 @property  BOOL loading
 @property  BOOL preventAutomaticRemovalFromLockScreen
 @property  long long lockScreenPriority
 @property  long long backgroundStyle
 @property  NSArray *buttons
 @property  BBContent *starkBannerContent
 @property  BOOL expiresOnPublisherDeath
 @property  NSString *summaryArgument
 @property  unsigned long summaryArgumentCount
 @property  NSString *section
 @property  BOOL showsUnreadIndicator
 @property  BOOL tentative
 @property  long long primaryAttachmentType

  // instance methods
  -[BBBulletinRequest tentative]
  -[BBBulletinRequest publish]
  -[BBBulletinRequest _updateSupplementaryAction:]
  -[BBBulletinRequest addAttachmentOfType:]
  -[BBBulletinRequest addAlertSuppressionAppID:]
  -[BBBulletinRequest setContextValue:forKey:]
  -[BBBulletinRequest setPrimaryAttachmentType:]
  -[BBBulletinRequest setSupplementaryActions:forLayout:]
  -[BBBulletinRequest setSupplementaryActions:]
  -[BBBulletinRequest expirationEvents]
  -[BBBulletinRequest replacementObjectForCoder:]
  -[BBBulletinRequest showsUnreadIndicator]
  -[BBBulletinRequest generateNewBulletinID]
  -[BBBulletinRequest setShowsUnreadIndicator:]
  -[BBBulletinRequest hasAdditionalAttachmentsModificationsRelativeTo:]
  -[BBBulletinRequest addButton:]
  -[BBBulletinRequest setUnlockActionLabel:]
  -[BBBulletinRequest hasContentModificationsRelativeTo:]
  -[BBBulletinRequest awakeAfterUsingCoder:]
  -[BBBulletinRequest setTentative:]
  -[BBBulletinRequest withdraw]
  -[BBBulletinRequest publish:]
  -[BBBulletinRequest generateBulletinID]
  -[BBBulletinRequest setExpirationEvents:]


BBDataProviderConnection : NSObject <NSXPCListenerDelegate>
 @property  NSString *serviceName
 @property  NSString *bundleID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BBDataProviderConnection initialize]

  // instance methods
  -[BBDataProviderConnection setServerProxy:]
  -[BBDataProviderConnection ping:]
  -[BBDataProviderConnection bundleID]
  -[BBDataProviderConnection addParentSectionInfo:displayName:icon:universalSectionID:]
  -[BBDataProviderConnection setServiceName:]
  -[BBDataProviderConnection serviceName]
  -[BBDataProviderConnection addDataProvider:withCompletion:]
  -[BBDataProviderConnection addDataProvider:]
  -[BBDataProviderConnection addParentSectionInfo:displayName:icon:]
  -[BBDataProviderConnection .cxx_destruct]
  -[BBDataProviderConnection _addDataProvider:withCompletionHandler:]
  -[BBDataProviderConnection removeDataProviderWithSectionID:]
  -[BBDataProviderConnection setBundleID:]
  -[BBDataProviderConnection _invalidate]
  -[BBDataProviderConnection addDataProvider:withCompletionHandler:]
  -[BBDataProviderConnection _queue_setServerProxy:]
  -[BBDataProviderConnection dealloc]
  -[BBDataProviderConnection invalidate]
  -[BBDataProviderConnection addParentSectionInfo:displayName:icon:unversalSectionID:]
  -[BBDataProviderConnection initWithServiceName:onQueue:]


BBObserver : NSObject <BBAssertionDelegate>
 @property  <BBObserverDelegate> *delegate
 @property  unsigned long observerFeed
 @property  NSString *gatewayName
 @property  unsigned long gatewayPriority
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BBObserver initialize]
  +[BBObserver gatewayWithQueue:calloutQueue:name:priority:]
  +[BBObserver observerWithQueue:calloutQueue:forGatewayName:]

  // instance methods
  -[BBObserver clearSection:]
  -[BBObserver _queue_updateAddBulletin:withReply:]
  -[BBObserver requestNoticesBulletinsForAllSections]
  -[BBObserver updateSectionParameters:forSectionID:]
  -[BBObserver _queue_updateRemoveBulletin:withReply:]
  -[BBObserver _queue_invalidate]
  -[BBObserver observerFeed]
  -[BBObserver removeSection:]
  -[BBObserver isValid]
  -[BBObserver getParametersForSectionID:withCompletion:]
  -[BBObserver updateGlobalSettings:]
  -[BBObserver _queue_serverProxy:connectionStateDidChange:]
  -[BBObserver .cxx_destruct]
  -[BBObserver noteBulletinsLoadedForSectionID:]
  -[BBObserver requestNoticesBulletinsForSectionID:]
  -[BBObserver getUniversalSectionIDForSectionID:withCompletion:]
  -[BBObserver noteServerReceivedResponseForBulletin:]
  -[BBObserver updateSectionInfo:]
  -[BBObserver clearBulletinsFromDate:toDate:inSections:]
  -[BBObserver parametersForSectionID:]
  -[BBObserver removeBulletins:inSection:fromFeed:]
  -[BBObserver sendResponse:]
  -[BBObserver setDelegate:]
  -[BBObserver getPublisherMatchIDsOfBulletinsPublishedAfterDate:withCompletion:]
  -[BBObserver _queue_updateBulletin:withReply:]
  -[BBObserver init]
  -[BBObserver gatewayName]
  -[BBObserver initWithQueue:calloutQueue:]
  -[BBObserver _queue_noteBulletinsLoadedForSectionID:]
  -[BBObserver assertionExpired:transactionID:]
  -[BBObserver getBulletinsForPublisherMatchIDs:sectionID:withCompletion:]
  -[BBObserver initWithQueue:]
  -[BBObserver initWithQueue:forGateway:]
  -[BBObserver getSectionInfoWithCompletion:]
  -[BBObserver getBulletinsWithCompletion:]
  -[BBObserver getSectionInfoForSectionIDs:withCompletion:]
  -[BBObserver _queue_updateModifyBulletin:withReply:]
  -[BBObserver gatewayPriority]
  -[BBObserver setObserverFeed:]
  -[BBObserver delegate]
  -[BBObserver requestListBulletinsForSectionID:]
  -[BBObserver updateBulletin:withReply:]
  -[BBObserver clearBulletins:inSection:]
  -[BBObserver removeBulletins:inSection:]
  -[BBObserver dealloc]
  -[BBObserver initWithQueue:calloutQueue:gatewayName:gatewayPriority:isGateway:connection:]
  -[BBObserver invalidate]
  -[BBObserver serverProxy:connectionStateDidChange:]
  -[BBObserver initWithQueue:asGateway:priority:]
  -[BBObserver _initWithQueue:calloutQueue:gatewayName:gatewayPriority:isGateway:]
  -[BBObserver getComposedImageSizeForAttachment:bulletin:withCompletion:]
  -[BBObserver sendResponse:withCompletion:]
  -[BBObserver _queue_registerBulletin:withTransactionID:]
  -[BBObserver getSectionInfoForActiveSectionsWithCompletion:]


BBServer : NSObject <BBDataProviderManagerDelegate, BBServerConduitServerInterface, BBSettingsGatewayServerInterface, NSXPCListenerDelegate, AFSiriAnnouncementRequestCapabilityObserving, BBSectionAuthorizationManagerDelegate, BBMuteExpirationManagerDelegate, BBSyncServiceDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BBServer initialize]
  +[BBServer _dataDirectoryPath]
  +[BBServer _removeSavedChronologicalSectionInfos:]
  +[BBServer writeOrderDictionary:]
  +[BBServer savedClearedSections]
  +[BBServer writeSectionInfo:]
  +[BBServer writeSectionInfo:withVersionNumber:]
  +[BBServer savedChronologicalSectionOrder]
  +[BBServer _sectionIdentifiersForWeeAppsFromSectionInfos:]
  +[BBServer removeSavedChronologicalSectionInfo:]
  +[BBServer savedOrderDictionary]
  +[BBServer _sectionIdentifiersForNonDefaultSectionCategoriesFromSectionInfos:]
  +[BBServer _sectionOrderPath]
  +[BBServer _clearedSectionsPath]
  +[BBServer savedLegacyOrderArray]
  +[BBServer pairedDeviceCount]
  +[BBServer _sectionInfoPath]
  +[BBServer _versionedSectionInfoPath]
  +[BBServer writeClearedSections:]
  +[BBServer _behaviorOverridesPath]
  +[BBServer savedSectionInfo]

  // instance methods
  -[BBServer _removeObserver:]
  -[BBServer ping:]
  -[BBServer getSectionInfoForActiveSectionsWithHandler:]
  -[BBServer syncService:sectionIdentifiersForUniversalSectionIdentifier:]
  -[BBServer _assignIDToBulletinRequest:checkAgainstBulletins:]
  -[BBServer bulletinsForPublisherMatchIDs:sectionID:]
  -[BBServer getEffectiveGlobalAnnounceSettingWithHandler:]
  -[BBServer setSectionInfo:forSectionID:withHandler:]
  -[BBServer observer:setObserverFeed:asLightsAndSirensGateway:priority:]
  -[BBServer _observerGatewaysForFeeds:]
  -[BBServer _setGlobalScheduledDeliveryShowNextSummarySetting:]
  -[BBServer getBulletinsForPublisherMatchIDs:sectionID:withHandler:]
  -[BBServer _addObserver:]
  -[BBServer publishBulletinRequest:destinations:]
  -[BBServer _setClearedInfo:forSectionID:]
  -[BBServer _observeManagedProfileChanges]
  -[BBServer deliverResponse:withCompletion:]
  -[BBServer _effectiveGlobalAnnounceCarPlaySetting]
  -[BBServer getBulletinsWithHandler:]
  -[BBServer _globalScheduledDeliveryShowNextSummarySetting]
  -[BBServer getSectionInfoForSectionIDs:withHandler:]
  -[BBServer _migrateSectionIDs:]
  -[BBServer _updateBulletinsInFeed:forDataProviderIfSectionIsEnabled:]
  -[BBServer _reloadSectionParametersForSectionID:]
  -[BBServer setEffectiveGlobalAnnounceCarPlaySetting:withHandler:]
  -[BBServer _globalAnnounceCarPlaySetting]
  -[BBServer _setAnnounceSupportedForCarPlay:]
  -[BBServer _mapForFeed:]
  -[BBServer getSectionParametersForSectionID:withHandler:]
  -[BBServer getEffectiveGlobalAnnounceCarPlaySettingWithHandler:]
  -[BBServer carBulletinIDsForSectionID:]
  -[BBServer _biometricResourceStateChanged]
  -[BBServer _bulletinIDsInSortedArray:withDateForKey:beforeCutoff:]
  -[BBServer _updateAllBulletinsForDataProviderIfSectionIsEnabled:]
  -[BBServer getSectionInfoForSectionID:withHandler:]
  -[BBServer _siriPreferencesDidChange:]
  -[BBServer setEffectiveGlobalScheduledDeliveryTimes:withHandler:]
  -[BBServer getSectionInfoWithHandler:]
  -[BBServer weeAppWithBundleID:setHiddenFromUser:]
  -[BBServer _effectiveGlobalAnnounceSetting]
  -[BBServer effectivePushSettingsForSectionInfo:]
  -[BBServer observer:handleResponse:withCompletion:]
  -[BBServer _updateAnnounceControlCenterModuleAvailability]
  -[BBServer _removeVestigialSections:]
  -[BBServer _bulletinsForSectionID:inFeeds:]
  -[BBServer _handleSystemSleep]
  -[BBServer initWithQueue:dataProviderManager:syncService:dismissalSyncCache:observerListener:conduitListener:settingsListener:]
  -[BBServer getUniversalSectionIDForSectionID:withHandler:]
  -[BBServer observer:finishedWithBulletinID:transactionID:]
  -[BBServer _unobserveManagedProfileChanges]
  -[BBServer noteOccurrenceOfEvent:]
  -[BBServer .cxx_destruct]
  -[BBServer _isAnnounceSupportedForHeadphones]
  -[BBServer bulletinIDsForSectionID:inFeed:]
  -[BBServer getPublisherMatchIDsOfBulletinsPublishedAfterDate:withHandler:]
  -[BBServer observer:clearBulletinIDs:inSection:]
  -[BBServer getEffectiveGlobalContentPreviewsSettingWithHandler:]
  -[BBServer _publishBulletinRequest:forSectionID:forDestinations:]
  -[BBServer isRunning]
  -[BBServer observer:getSectionInfoForActiveSectionsWithHandler:]
  -[BBServer _performPendingBulletinUpdatesForBulletinID:]
  -[BBServer _publishBulletinsForAllDataProviders]
  -[BBServer _handleSystemWake]
  -[BBServer _effectiveGlobalScheduledDeliveryShowNextSummarySetting]
  -[BBServer _setPairedVehiclesForCarPlay:]
  -[BBServer dataProviderForSectionID:]
  -[BBServer _addActiveSectionID:]
  -[BBServer _applicableSectionInfosForBulletin:inSection:]
  -[BBServer _pairedVehiclesForCarPlayDidChange:]
  -[BBServer _bulletinsForIDs:]
  -[BBServer _setGlobalAnnounceSetting:]
  -[BBServer _allBulletinsForSectionID:]
  -[BBServer _migrateSectionInfoIfNeeded]
  -[BBServer _assignIDToBulletinRequest:]
  -[BBServer observer:clearSection:]
  -[BBServer _expireBulletins]
  -[BBServer _openApplicationOptionsForResponse:]
  -[BBServer eligibleAnnouncementRequestTypesChanged:onPlatform:]
  -[BBServer syncService:universalSectionIdentifierForSectionIdentifier:]
  -[BBServer _addSettingsGatewayConnection:]
  -[BBServer _addBulletin:]
  -[BBServer getEffectiveSectionInfoWithHandler:]
  -[BBServer _writeClearedSections]
  -[BBServer _removeSettingsGatewayConnection:]
  -[BBServer syncService:shouldAbortDelayedDismissalForBulletin:]
  -[BBServer _sortSectionIDs:usingOrder:]
  -[BBServer _updateSectionParametersForDataProvider:]
  -[BBServer _setAnnounceSupportedForHeadphones:]
  -[BBServer _clearedInfoForSectionID:]
  -[BBServer _isAnnounceSupportedForCarPlay]
  -[BBServer _updateDataProviderForSectionInfo:sectionID:]
  -[BBServer getEffectiveGlobalScheduledDeliveryTimesWithHandler:]
  -[BBServer _globalAnnounceSetting]
  -[BBServer publishBulletin:destinations:]
  -[BBServer observer:clearBulletinsFromDate:toDate:inSections:]
  -[BBServer dpManager:sectionInfoForSectionID:]
  -[BBServer _addStateCaptureHandlers]
  -[BBServer _observersForNoticesFeed]
  -[BBServer observer:requestNoticesBulletinsForSectionID:]
  -[BBServer _sendBulletinsLoadedForSectionID:]
  -[BBServer _scheduleTimerForDate:]
  -[BBServer _clearBulletinsFromDate:toDate:forSection:]
  -[BBServer availableAnnouncementRequestTypesChanged:onPlatform:]
  -[BBServer _sendRemoveBulletin:toFeeds:shouldSync:]
  -[BBServer _handleSignificantTimeChange]
  -[BBServer _removeBulletin:shouldSync:]
  -[BBServer noteChangeOfState:newValue:]
  -[BBServer _queue_managedUserNotificationsSetttingsDidChange]
  -[BBServer _updateAnnounceSettings]
  -[BBServer _didReceiveResponseForBulletin:]
  -[BBServer _sectionInfoArrayForSectionIDs:effective:]
  -[BBServer _setGlobalScheduledDeliveryTimes:]
  -[BBServer _sendBulletinUpdate:]
  -[BBServer _resumeAllSuspendedConnectionsWithCompletionHandler:]
  -[BBServer _setSectionInfoNoteSettingsChanged:forSectionID:]
  -[BBServer getEffectiveGlobalScheduledDeliveryShowNextSummarySettingWithHandler:]
  -[BBServer sendMessageToDataProviderSectionID:name:userInfo:]
  -[BBServer _pairedDeviceCount]
  -[BBServer _setGlobalScheduledDeliverySetting:]
  -[BBServer _sendUpdateSectionInfo:]
  -[BBServer initWithQueue:]
  -[BBServer _loadSavedSectionInfo]
  -[BBServer _validateExpirationDateForBulletinRequest:]
  -[BBServer _updateGlobalSettings]
  -[BBServer _updateBulletinsInFeed:ifSectionIsEnabled:]
  -[BBServer _effectiveSectionInfoForSectionInfo:]
  -[BBServer _migrateLoadedData]
  -[BBServer _updateBulletinsInFeed:forDataProvider:enabledSectionIDs:]
  -[BBServer removeBulletinID:fromSection:inFeed:]
  -[BBServer _loadClearedSections]
  -[BBServer setEffectiveGlobalContentPreviewsSetting:withHandler:]
  -[BBServer _expireBulletinsDueToSystemEvent:]
  -[BBServer _clearBulletinIDIfPossible:rescheduleExpirationTimer:]
  -[BBServer _updateAllSectionInfos]
  -[BBServer _setGlobalContentPreviewsSetting:]
  -[BBServer _effectiveGlobalScheduledDeliverySetting]
  -[BBServer withdrawBulletinRequestsWithRecordID:forSectionID:]
  -[BBServer _loadDataProvidersAndSettings]
  -[BBServer _defaultGlobalContentPreviewSetting]
  -[BBServer _removeBulletin:rescheduleTimerIfAffected:shouldSync:]
  -[BBServer _feedsForBulletin:destinations:]
  -[BBServer _sectionIDsToMigrate]
  -[BBServer clearBulletinIDIfPossible:rescheduleExpirationTimer:]
  -[BBServer _didNotificationCenterSettingsChangeWithSectionInfo:replacingSectionInfo:]
  -[BBServer _migrateGlobalAnnounceSettingIfNeeded]
  -[BBServer _sectionInfoArray:]
  -[BBServer _removeActiveSectionID:]
  -[BBServer _expireBulletinsAndRescheduleTimerIfNecessary]
  -[BBServer _bulletinRequestsForIDs:]
  -[BBServer _sendRemoveSection:]
  -[BBServer getEffectiveGlobalAnnounceHeadphonesSettingWithHandler:]
  -[BBServer _clearBulletinIDs:forSectionID:shouldSync:]
  -[BBServer _removeSuspendedConnection:]
  -[BBServer _updateInterruptionLevelForBulletin:]
  -[BBServer _newValidatedDefaultExpirationComponentsFromComponents:]
  -[BBServer observer:getSectionInfoWithHandler:]
  -[BBServer _sendObserver:noticesBulletinsForSectionID:]
  -[BBServer _newDateCompontentsByInvertingInterestingPartsOfComponents:]
  -[BBServer _globalAnnounceHeadphonesSetting]
  -[BBServer getEffectiveSectionInfoForSectionIDs:withHandler:]
  -[BBServer dpManager:addDataProvider:withSectionInfo:]
  -[BBServer observer:setObserverFeed:attachToLightsAndSirensGateway:]
  -[BBServer _fetchAllVehiclesForCarPlay]
  -[BBServer _nextExpireBulletinsDate]
  -[BBServer _setGlobalAnnounceCarPlaySetting:]
  -[BBServer dpManager:addParentSectionFactory:]
  -[BBServer _globalScheduledDeliveryTimes]
  -[BBServer _sectionInfoForSectionID:effective:]
  -[BBServer setEffectiveGlobalAnnounceSetting:withHandler:]
  -[BBServer _sectionInfoArrayForActiveSections:]
  -[BBServer _loadSystemCapabilities]
  -[BBServer sectionIDsForUniversalSectionID:]
  -[BBServer _updateShowsMessagePreviewForBulletin:]
  -[BBServer _sinceDate]
  -[BBServer _reloadReloadSectionInfoForSectionID:]
  -[BBServer _modifyBulletin:]
  -[BBServer _sortSectionIDs:usingGuideArray:]
  -[BBServer _saveGlobalAnnounceSettingEnabledEvent]
  -[BBServer observer:getSectionInfoForSectionIDs:withHandler:]
  -[BBServer observer:removeBulletins:inSection:fromFeeds:]
  -[BBServer dealloc]
  -[BBServer didChangeEffectiveAuthorizationStatusForSectionID:]
  -[BBServer noticesBulletinIDsForSectionID:]
  -[BBServer _scheduleExpirationForBulletin:]
  -[BBServer universalSectionIDForSectionID:]
  -[BBServer _bulletinDefaultExpirationDateFromDate:]
  -[BBServer _removeSection:]
  -[BBServer listener:shouldAcceptNewConnection:]
  -[BBServer _filtersForSectionID:]
  -[BBServer _writeSectionInfo]
  -[BBServer didChangeMuteAssertionForSectionID:]
  -[BBServer _setDefaultExpirationComponents:]
  -[BBServer weeAppWithBundleID:getHiddenFromUser:]
  -[BBServer _clearSection:]
  -[BBServer _hasPairedVehiclesForCarPlay]
  -[BBServer dpManager:removeDataProviderSectionID:]
  -[BBServer updateSection:inFeed:withBulletinRequests:]
  -[BBServer _sendRemoveBulletins:toFeeds:shouldSync:]
  -[BBServer _sendAddBulletin:toFeeds:]
  -[BBServer _indexForNewDate:inBulletinIDArray:sortedAscendingByDateForKey:]
  -[BBServer noteFinishedWithBulletinID:]
  -[BBServer setEffectiveGlobalScheduledDeliveryShowNextSummarySetting:withHandler:]
  -[BBServer _effectiveGlobalScheduledDeliveryTimes]
  -[BBServer bulletinsRequestsForBulletinIDs:]
  -[BBServer _updateAllBulletinsForDataProvider:]
  -[BBServer withdrawBulletinRequestsWithPublisherBulletinID:forSectionID:]
  -[BBServer getSectionIDsWithHandler:]
  -[BBServer _dataProviderDidClearInfo:forSection:]
  -[BBServer _encodedScheduledDeliveryTimesForDeliveryTimes:]
  -[BBServer _saveUpdatedClearedInfo:forSectionID:]
  -[BBServer _sortedSectionIDs]
  -[BBServer _clearExpirationTimer]
  -[BBServer _updateSectionInfoForSectionID:handler:]
  -[BBServer _setSectionInfo:forSectionID:]
  -[BBServer _verifyBulletinRequest:forDataProvider:]
  -[BBServer _enabledSectionIDsForDataProvider:]
  -[BBServer getEffectiveSectionInfoForSectionID:withHandler:]
  -[BBServer withdrawBulletinID:]
  -[BBServer requestNoticesBulletinsForAllSections:]
  -[BBServer _globalScheduledDeliverySetting]
  -[BBServer _updateClearedInfoForSectionID:handler:]
  -[BBServer getEffectiveGlobalScheduledDeliverySettingWithHandler:]
  -[BBServer loadDataProvidersAndSettings]
  -[BBServer _effectiveGlobalAnnounceHeadphonesSetting]
  -[BBServer _updateSiriPreferences]
  -[BBServer allBulletinIDsForSectionID:]
  -[BBServer setEffectiveGlobalScheduledDeliverySetting:withHandler:]
  -[BBServer _effectiveGlobalContentPreviewsSetting]
  -[BBServer _migrateContentPreviewSettings:]
  -[BBServer _activeSectionIDs]
  -[BBServer _removeBulletins:forSectionID:shouldSync:]
  -[BBServer _storeObserver:forFeed:]
  -[BBServer _sendModifyBulletin:toFeeds:]
  -[BBServer _setGlobalAnnounceHeadphonesSetting:]
  -[BBServer _addSuspendedConnection:]
  -[BBServer _globalContentPreviewsSetting]
  -[BBServer _ensureDataDirectoryExists]
  -[BBServer _deviceSupportsFavorites]
  -[BBServer _enqueueBulletinUpdate:]
  -[BBServer setSectionInfo:forSectionID:]
  -[BBServer removeBulletinID:fromNoticesSection:]
  -[BBServer _scheduledDeliveryTimesForEncodedDeliveryTimes:]
  -[BBServer syncService:receivedDismissalDictionaries:dismissalIDs:inSection:forFeeds:]
  -[BBServer _saveUpdatedSectionInfo:forSectionID:]
  -[BBServer setEffectiveGlobalAnnounceHeadphonesSetting:withHandler:]


BBSectionInfo : NSObject <NSCopying, NSSecureCoding>
 @property  BBSectionInfoSettings *managedSectionInfoSettings
 @property  BOOL usesManagedSettings
 @property  BBSectionInfoSettings *readableSettings
 @property  BBSectionInfoSettings *writableSettings
 @property  long long authorizationStatus
 @property  NSDate *authorizationExpirationDate
 @property  BOOL allowsNotifications
 @property  NSDate *lastUserGrantedAuthorizationDate
 @property  BBMuteAssertion *muteAssertion
 @property  BOOL showsOnExternalDevices
 @property  BOOL showsCustomSettingsLink
 @property  long long contentPreviewSetting
 @property  long long spokenNotificationSetting
 @property  unsigned long alertType
 @property  unsigned long pushSettings
 @property  long long carPlaySetting
 @property  long long criticalAlertSetting
 @property  long long lockScreenSetting
 @property  long long notificationCenterSetting
 @property  long long timeSensitiveSetting
 @property  BOOL userConfiguredTimeSensitiveSetting
 @property  long long scheduledDeliverySetting
 @property  long long directMessagesSetting
 @property  BOOL userConfiguredDirectMessagesSetting
 @property  long long bulletinGroupingSetting
 @property  long long announceSetting
 @property  BOOL hideWeeApp
 @property  NSString *appName
 @property  NSString *displayName
 @property  BBSectionIcon *icon
 @property  NSArray *subsections
 @property  BBSectionInfo *parentSection
 @property  NSString *factorySectionID
 @property  NSArray *dataProviderIDs
 @property  NSDictionary *stateCapture
 @property  BOOL isModificationAllowed
 @property  NSString *sectionID
 @property  NSString *subsectionID
 @property  long long sectionType
 @property  BOOL isAppClip
 @property  long long sectionCategory
 @property  BOOL suppressFromSettings
 @property  NSString *customSettingsBundle
 @property  NSString *customSettingsDetailControllerClass
 @property  BBSectionInfoSettings *sectionInfoSettings
 @property  unsigned long suppressedSettings
 @property  NSString *pathToWeeAppPluginBundle
 @property  BOOL hasEnabledSettings
 @property  BOOL isDeliveredQuietly
 @property  BOOL isRestricted
 @property  long long subsectionPriority
 @property  unsigned long version
 @property  BOOL enabled
 @property  NSData *iconData
 @property  unsigned long bulletinCount
 @property  unsigned long notificationCenterLimit

  // class methods
  +[BBSectionInfo supportsSecureCoding]
  +[BBSectionInfo defaultSectionInfoForSection:]
  +[BBSectionInfo defaultSectionInfoForType:]

  // instance methods
  -[BBSectionInfo alertType]
  -[BBSectionInfo carPlaySetting]
  -[BBSectionInfo isRestricted]
  -[BBSectionInfo setMuteAssertion:]
  -[BBSectionInfo lockScreenSetting]
  -[BBSectionInfo directMessagesSetting]
  -[BBSectionInfo appName]
  -[BBSectionInfo setTimeSensitiveSetting:]
  -[BBSectionInfo displayName]
  -[BBSectionInfo setNotificationCenterSetting:]
  -[BBSectionInfo setBulletinGroupingSetting:]
  -[BBSectionInfo showsMessagePreview]
  -[BBSectionInfo setAlertType:]
  -[BBSectionInfo scheduledDeliverySetting]
  -[BBSectionInfo showsInLockScreen]
  -[BBSectionInfo initWithCoder:]
  -[BBSectionInfo setScheduledDeliverySetting:]
  -[BBSectionInfo icon]
  -[BBSectionInfo setLastUserGrantedAuthorizationDate:]
  -[BBSectionInfo setIsAppClip:]
  -[BBSectionInfo setCriticalAlertSetting:]
  -[BBSectionInfo setAnnounceSetting:]
  -[BBSectionInfo criticalAlertSetting]
  -[BBSectionInfo setLockScreenSetting:]
  -[BBSectionInfo isAppClip]
  -[BBSectionInfo setAuthorizationStatus:]
  -[BBSectionInfo setDirectMessagesSetting:]
  -[BBSectionInfo spokenNotificationSetting]
  -[BBSectionInfo setCarPlaySetting:]
  -[BBSectionInfo authorizationStatus]
  -[BBSectionInfo .cxx_destruct]
  -[BBSectionInfo timeSensitiveSetting]
  -[BBSectionInfo setSubsections:]
  -[BBSectionInfo initWithDefaultsForSectionType:]
  -[BBSectionInfo notificationCenterSetting]
  -[BBSectionInfo setShowsInLockScreen:]
  -[BBSectionInfo muteAssertion]
  -[BBSectionInfo lastUserGrantedAuthorizationDate]
  -[BBSectionInfo announceSetting]
  -[BBSectionInfo hasEnabledSettings]
  -[BBSectionInfo hasUserConfiguredTimeSensitiveSetting]
  -[BBSectionInfo showsOnExternalDevices]
  -[BBSectionInfo enabled]
  -[BBSectionInfo setSectionType:]
  -[BBSectionInfo init]
  -[BBSectionInfo setSectionID:]
  -[BBSectionInfo setCustomSettingsDetailControllerClass:]
  -[BBSectionInfo hasUserConfiguredDirectMessagesSetting]
  -[BBSectionInfo setVersion:]
  -[BBSectionInfo isEqual:]
  -[BBSectionInfo setContentPreviewSetting:]
  -[BBSectionInfo setCustomSettingsBundle:]
  -[BBSectionInfo showsCustomSettingsLink]
  -[BBSectionInfo iconData]
  -[BBSectionInfo replacementObjectForCoder:]
  -[BBSectionInfo setShowsOnExternalDevices:]
  -[BBSectionInfo isBulletinMutedForThreadIdentifier:]
  -[BBSectionInfo setAuthorizationExpirationDate:]
  -[BBSectionInfo setIcon:]
  -[BBSectionInfo setSpokenNotificationSetting:]
  -[BBSectionInfo setDisplayName:]
  -[BBSectionInfo setShowsMessagePreview:]
  -[BBSectionInfo authorizationExpirationDate]
  -[BBSectionInfo setAllowsNotifications:]
  -[BBSectionInfo unmuteThreadIdentifier:]
  -[BBSectionInfo setPushSettings:]
  -[BBSectionInfo setUserConfiguredDirectMessagesSetting:]
  -[BBSectionInfo unmuteSection]
  -[BBSectionInfo setShowsCustomSettingsLink:]
  -[BBSectionInfo muteThreadIdentifier:untilDate:]
  -[BBSectionInfo version]
  -[BBSectionInfo muteSectionUntilDate:]
  -[BBSectionInfo setUserConfiguredTimeSensitiveSetting:]
  -[BBSectionInfo setIsRestricted:]
  -[BBSectionInfo subsectionID]
  -[BBSectionInfo pathToWeeAppPluginBundle]
  -[BBSectionInfo suppressedSettings]
  -[BBSectionInfo subsections]
  -[BBSectionInfo awakeAfterUsingCoder:]
  -[BBSectionInfo copyWithZone:]
  -[BBSectionInfo allowsNotifications]
  -[BBSectionInfo bulletinGroupingSetting]
  -[BBSectionInfo pushSettings]
  -[BBSectionInfo setEnabled:]
  -[BBSectionInfo stateCapture]
  -[BBSectionInfo sectionID]
  -[BBSectionInfo customSettingsBundle]
  -[BBSectionInfo contentPreviewSetting]
  -[BBSectionInfo encodeWithCoder:]
  -[BBSectionInfo showsInNotificationCenter]
  -[BBSectionInfo setAppName:]
  -[BBSectionInfo sectionType]
  -[BBSectionInfo customSettingsDetailControllerClass]
  -[BBSectionInfo setShowsInNotificationCenter:]
  -[BBSectionInfo setParentSection:]
  -[BBSectionInfo parentSection]
  -[BBSectionInfo dataProviderIDs]
  -[BBSectionInfo subsectionPriority]
  -[BBSectionInfo usesManagedSettings]
  -[BBSectionInfo factorySectionID]
  -[BBSectionInfo effectiveSectionInfoWithFactoryInfo:defaultContentPreviewSetting:globalAnnounceSetting:globalScheduledDeliverySetting:hasPairedVehiclesForCarPlay:]
  -[BBSectionInfo effectiveSectionInfoWithDefaultContentPreviewSetting:globalAnnounceSetting:globalScheduledDeliverySetting:hasPairedVehiclesForCarPlay:]
  -[BBSectionInfo _subsectionForID:]
  -[BBSectionInfo queryAndUseManagedSettings]
  -[BBSectionInfo _replaceSubsection:]
  -[BBSectionInfo hideWeeApp]
  -[BBSectionInfo setHideWeeApp:]
  -[BBSectionInfo setSuppressFromSettings:]
  -[BBSectionInfo setFactorySectionID:]
  -[BBSectionInfo sectionInfoSettings]
  -[BBSectionInfo _associateDataProviderSectionInfo:]
  -[BBSectionInfo suppressFromSettings]
  -[BBSectionInfo queryAndUseManagedSettingsForSectionID:]
  -[BBSectionInfo sectionCategory]
  -[BBSectionInfo _configureWithDefaultsForSectionType:]
  -[BBSectionInfo setSuppressedSettings:]
  -[BBSectionInfo setBulletinCount:]
  -[BBSectionInfo setDataProviderIDs:]
  -[BBSectionInfo managedSectionInfoSettings]
  -[BBSectionInfo setManagedSectionInfoSettings:]
  -[BBSectionInfo _isDeliveredQuietly]
  -[BBSectionInfo deliverQuietly:changeAuthorizationStatus:]
  -[BBSectionInfo _deliverQuietly:]
  -[BBSectionInfo makeAuthorizationPermanent]
  -[BBSectionInfo _suppressedSettingsList:]
  -[BBSectionInfo setNotificationCenterLimit:]
  -[BBSectionInfo isModificationAllowed]
  -[BBSectionInfo setSubsectionID:]
  -[BBSectionInfo setIsModificationAllowed:]
  -[BBSectionInfo setSectionCategory:]
  -[BBSectionInfo setSectionInfoSettings:]
  -[BBSectionInfo setPathToWeeAppPluginBundle:]
  -[BBSectionInfo _addSubsection:]
  -[BBSectionInfo setSubsectionPriority:]
  -[BBSectionInfo _dissociateDataProviderSectionInfo:]
  -[BBSectionInfo isDeliveredQuietly]
  -[BBSectionInfo deliverQuietly:]
  -[BBSectionInfo bulletinCount]
  -[BBSectionInfo notificationCenterLimit]
  -[BBSectionInfo copyFromManagedSettings]
  -[BBSectionInfo disabledSettingForSetting:]
  -[BBSectionInfo updateWithDefaultSectionInfo:]
  -[BBSectionInfo readableSettings]
  -[BBSectionInfo writableSettings]
  -[BBSectionInfo emergencySetting]
  -[BBSectionInfo setEmergencySetting:]


BBBiometricResource : NSObject
 @property  BOOL hasPearlCapability
 @property  BOOL isPearlEnabledAndEnrolled

  // instance methods
  -[BBBiometricResource _updateHasEnrolledPearlIdentities]
  -[BBBiometricResource _unregisterForBKEnrollmentChange]
  -[BBBiometricResource hasPearlCapability]
  -[BBBiometricResource .cxx_destruct]
  -[BBBiometricResource _unregisterForBiometricUnlockAllowedChange]
  -[BBBiometricResource initWithQueue:]
  -[BBBiometricResource isPearlEnabledAndEnrolled]
  -[BBBiometricResource dealloc]
  -[BBBiometricResource _updateIsBiometricUnlockAllowed]
  -[BBBiometricResource _updateIsPasscodeSet]
  -[BBBiometricResource _registerForPasscodeChange]
  -[BBBiometricResource _registerForBKEnrollmentChange]
  -[BBBiometricResource _registerForBiometricUnlockAllowedChange]


BBObjectCache : NSObject
  // instance methods
  -[BBObjectCache .cxx_destruct]
  -[BBObjectCache init]
  -[BBObjectCache cacheObject:]


BBRemoteDataProviderConnectionResolver : NSObject <BBDataProviderConnectionCheckinServer, BBRemoteDataProviderStoreDelegate, NSXPCListenerDelegate, BBDataProviderStore>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BBRemoteDataProviderConnectionResolver xpcInterface]
  +[BBRemoteDataProviderConnectionResolver resolverWithDelegate:]

  // instance methods
  -[BBRemoteDataProviderConnectionResolver _registerForPublicationNotification]
  -[BBRemoteDataProviderConnectionResolver debugDescriptionWithChildren:]
  -[BBRemoteDataProviderConnectionResolver dataProviderStore:didAddDataProvider:performMigration:completion:]
  -[BBRemoteDataProviderConnectionResolver .cxx_destruct]
  -[BBRemoteDataProviderConnectionResolver remoteDataProviderNeedsToWakeClient:]
  -[BBRemoteDataProviderConnectionResolver dataProviderForSectionID:]
  -[BBRemoteDataProviderConnectionResolver loadAllDataProviders]
  -[BBRemoteDataProviderConnectionResolver performBlockOnDataProviders:]
  -[BBRemoteDataProviderConnectionResolver wakeService:bundleID:]
  -[BBRemoteDataProviderConnectionResolver dataProviderStore:didRemoveDataProvider:]
  -[BBRemoteDataProviderConnectionResolver initWithDelegate:]
  -[BBRemoteDataProviderConnectionResolver dataProvidersForUniversalSectionID:]
  -[BBRemoteDataProviderConnectionResolver dealloc]
  -[BBRemoteDataProviderConnectionResolver dataProviderStore:didAddParentSectionFactory:]
  -[BBRemoteDataProviderConnectionResolver listener:shouldAcceptNewConnection:]
  -[BBRemoteDataProviderConnectionResolver _registerServiceName:appBundleID:completion:]
  -[BBRemoteDataProviderConnectionResolver registerServiceName:appBundleID:completion:]
  -[BBRemoteDataProviderConnectionResolver removeDataProvider:]


BBSettingsGateway : NSObject <BBSettingsGatewayClientInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BBSettingsGateway initialize]
  +[BBSettingsGateway serverInterface]
  +[BBSettingsGateway clientInterface]

  // instance methods
  -[BBSettingsGateway sectionInfoForSectionIDs:]
  -[BBSettingsGateway getEffectiveSectionInfoForSectionID:withCompletion:]
  -[BBSettingsGateway setEffectiveGlobalSpokenNotificationSetting:]
  -[BBSettingsGateway effectiveGlobalAnnounceCarPlaySetting]
  -[BBSettingsGateway effectiveGlobalScheduledDeliveryTimes]
  -[BBSettingsGateway getEffectiveSectionInfoForSectionIDs:withCompletion:]
  -[BBSettingsGateway effectiveGlobalAnnounceSetting]
  -[BBSettingsGateway getEffectiveGlobalAnnounceHeadphonesSettingWithCompletion:]
  -[BBSettingsGateway getEffectiveGlobalScheduledDeliverySettingWithCompletion:]
  -[BBSettingsGateway allEffectiveSectionInfo]
  -[BBSettingsGateway .cxx_destruct]
  -[BBSettingsGateway allSectionInfo]
  -[BBSettingsGateway effectiveSectionInfoForSectionID:]
  -[BBSettingsGateway setEffectiveGlobalScheduledDeliveryShowNextSummarySetting:]
  -[BBSettingsGateway setEffectiveGlobalContentPreviewsSetting:]
  -[BBSettingsGateway effectiveGlobalContentPreviewsSetting]
  -[BBSettingsGateway setSectionInfo:forSectionID:withCompletion:]
  -[BBSettingsGateway sectionInfoForSectionID:]
  -[BBSettingsGateway init]
  -[BBSettingsGateway setEffectiveGlobalAnnounceCarPlaySetting:]
  -[BBSettingsGateway allSectionIDs]
  -[BBSettingsGateway getEffectiveGlobalScheduledDeliveryShowNextSummarySettingWithCompletion:]
  -[BBSettingsGateway getSectionInfoForSectionID:withCompletion:]
  -[BBSettingsGateway initWithQueue:]
  -[BBSettingsGateway setEffectiveGlobalScheduledDeliveryTimes:]
  -[BBSettingsGateway getEffectiveGlobalAnnounceSettingWithCompletion:]
  -[BBSettingsGateway effectiveGlobalScheduledDeliverySetting]
  -[BBSettingsGateway getSectionInfoWithCompletion:]
  -[BBSettingsGateway getEffectiveGlobalAnnounceCarPlaySettingWithCompletion:]
  -[BBSettingsGateway setEffectiveGlobalScheduledDeliverySetting:]
  -[BBSettingsGateway getSectionInfoForSectionIDs:withCompletion:]
  -[BBSettingsGateway getEffectiveGlobalContentPreviewsSettingWithCompletion:]
  -[BBSettingsGateway setEffectiveGlobalAnnounceSetting:]
  -[BBSettingsGateway activeSectionInfo]
  -[BBSettingsGateway dealloc]
  -[BBSettingsGateway invalidate]
  -[BBSettingsGateway effectiveGlobalSpokenNotificationSetting]
  -[BBSettingsGateway effectiveGlobalAnnounceHeadphonesSetting]
  -[BBSettingsGateway updateSectionInfoForSectionID:withHandler:]
  -[BBSettingsGateway setEffectiveGlobalAnnounceHeadphonesSetting:]
  -[BBSettingsGateway effectiveSectionInfoForSectionIDs:]
  -[BBSettingsGateway getEffectiveGlobalScheduledDeliveryTimesWithCompletion:]
  -[BBSettingsGateway effectiveGlobalScheduledDeliveryShowNextSummarySetting]
  -[BBSettingsGateway getEffectiveGlobalSpokenNotificationSettingWithCompletion:]
  -[BBSettingsGateway getSectionInfoForActiveSectionsWithCompletion:]
  -[BBSettingsGateway setSectionInfo:forSectionID:]


BBAction : NSObject <NSCopying, NSSecureCoding>
 @property  @? internalBlock
 @property  BOOL hasLaunchAction
 @property  BOOL hasPluginAction
 @property  BOOL hasRemoteViewAction
 @property  BOOL hasInteractiveAction
 @property  long long actionType
 @property  NSString *identifier
 @property  BBAppearance *appearance
 @property  BOOL authenticationRequired
 @property  BOOL shouldDismissBulletin
 @property  NSURL *launchURL
 @property  NSString *launchBundleID
 @property  BOOL launchCanBypassPinLock
 @property  unsigned long activationMode
 @property  NSString *activatePluginName
 @property  NSDictionary *activatePluginContext
 @property  NSString *remoteViewControllerClassName
 @property  NSString *remoteServiceBundleIdentifier
 @property  long long behavior
 @property  NSDictionary *behaviorParameters
 @property  BOOL canBypassPinLock

  // class methods
  +[BBAction actionWithLaunchURL:callblock:]
  +[BBAction actionWithLaunchURL:]
  +[BBAction actionWithCallblock:]
  +[BBAction supportsSecureCoding]
  +[BBAction actionWithLaunchBundleID:callblock:]
  +[BBAction action]
  +[BBAction actionWithAppearance:]
  +[BBAction actionWithLaunchBundleID:]
  +[BBAction actionWithIdentifier:]
  +[BBAction actionWithActivatePluginName:activationContext:]
  +[BBAction actionWithIdentifier:title:]

  // instance methods
  -[BBAction setCallblock:]
  -[BBAction launchURL]
  -[BBAction deliverResponse:]
  -[BBAction bundleID]
  -[BBAction setShouldDismissBulletin:]
  -[BBAction partialDescription]
  -[BBAction setLaunchCanBypassPinLock:]
  -[BBAction setActionType:]
  -[BBAction initWithCoder:]
  -[BBAction setActivatePluginContext:]
  -[BBAction appearance]
  -[BBAction behaviorParameters]
  -[BBAction hasInteractiveAction]
  -[BBAction url]
  -[BBAction remoteViewControllerClassName]
  -[BBAction initWithIdentifier:]
  -[BBAction remoteServiceBundleIdentifier]
  -[BBAction activatePluginName]
  -[BBAction setLaunchBundleID:]
  -[BBAction setInternalBlock:]
  -[BBAction .cxx_destruct]
  -[BBAction setLaunchURL:]
  -[BBAction activationMode]
  -[BBAction launchBundleID]
  -[BBAction canBypassPinLock]
  -[BBAction setActivatePluginName:]
  -[BBAction setRemoteServiceBundleIdentifier:]
  -[BBAction isAuthenticationRequired]
  -[BBAction setBehaviorParameters:]
  -[BBAction _nameForActionType:]
  -[BBAction activatePluginContext]
  -[BBAction shouldDismissBulletin]
  -[BBAction setActivationMode:]
  -[BBAction hasRemoteViewAction]
  -[BBAction setRemoteViewControllerClassName:]
  -[BBAction hasLaunchAction]
  -[BBAction init]
  -[BBAction setBehavior:]
  -[BBAction setAuthenticationRequired:]
  -[BBAction hasPluginAction]
  -[BBAction isEqual:]
  -[BBAction setAppearance:]
  -[BBAction setCanBypassPinLock:]
  -[BBAction behavior]
  -[BBAction internalBlock]
  -[BBAction replacementObjectForCoder:]
  -[BBAction identifier]
  -[BBAction launchCanBypassPinLock]
  -[BBAction actionType]
  -[BBAction setIdentifier:]
  -[BBAction awakeAfterUsingCoder:]
  -[BBAction copyWithZone:]
  -[BBAction encodeWithCoder:]


BBActionGroup : BBAction
 @property  NSArray *actions

  // class methods
  +[BBActionGroup actionGroupWithActions:]

  // instance methods
  -[BBActionGroup setActions:]
  -[BBActionGroup initWithCoder:]
  -[BBActionGroup .cxx_destruct]
  -[BBActionGroup actions]
  -[BBActionGroup isEqual:]
  -[BBActionGroup replacementObjectForCoder:]
  -[BBActionGroup awakeAfterUsingCoder:]
  -[BBActionGroup encodeWithCoder:]


BBGlobalSettings : NSObject <NSCopying, NSSecureCoding>
 @property  long long globalContentPreviewSetting
 @property  long long globalAnnounceSetting
 @property  long long globalAnnounceHeadphonesSetting
 @property  long long globalAnnounceCarPlaySetting
 @property  long long globalScheduledDeliverySetting
 @property  NSArray *globalScheduledDeliveryTimes
 @property  long long globalScheduledDeliveryShowNextSummarySetting
 @property  long long globalSpokenNotificationSetting

  // class methods
  +[BBGlobalSettings supportsSecureCoding]

  // instance methods
  -[BBGlobalSettings initWithCoder:]
  -[BBGlobalSettings setGlobalAnnounceCarPlaySetting:]
  -[BBGlobalSettings globalScheduledDeliverySetting]
  -[BBGlobalSettings setGlobalScheduledDeliveryShowNextSummarySetting:]
  -[BBGlobalSettings setGlobalScheduledDeliveryTimes:]
  -[BBGlobalSettings .cxx_destruct]
  -[BBGlobalSettings isEqual:]
  -[BBGlobalSettings globalAnnounceSetting]
  -[BBGlobalSettings globalScheduledDeliveryTimes]
  -[BBGlobalSettings globalScheduledDeliveryShowNextSummarySetting]
  -[BBGlobalSettings setGlobalAnnounceSetting:]
  -[BBGlobalSettings setGlobalScheduledDeliverySetting:]
  -[BBGlobalSettings copyWithZone:]
  -[BBGlobalSettings globalContentPreviewSetting]
  -[BBGlobalSettings setGlobalAnnounceHeadphonesSetting:]
  -[BBGlobalSettings globalAnnounceHeadphonesSetting]
  -[BBGlobalSettings globalAnnounceCarPlaySetting]
  -[BBGlobalSettings setGlobalContentPreviewSetting:]
  -[BBGlobalSettings encodeWithCoder:]
  -[BBGlobalSettings initWithContentPreviewSetting:announceSetting:announceHeadphonesSetting:announceCarPlaySetting:scheduledDeliverySetting:scheduledDeliveryTimes:scheduledDeliveryShowNextSummarySetting:]
  -[BBGlobalSettings globalSpokenNotificationSetting]


BBLaunchAction : BBAction
  // class methods
  +[BBLaunchAction launchActionWithBundleID:callblock:]
  +[BBLaunchAction launchActionWithURL:callblock:]


BBButton : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *title
 @property  BBImage *image
 @property  BBAction *action
 @property  NSString *identifier
 @property  NSData *glyphData

  // class methods
  +[BBButton supportsSecureCoding]
  +[BBButton buttonWithTitle:action:]
  +[BBButton buttonWithTitle:action:identifier:]
  +[BBButton buttonWithTitle:glyphData:action:identifier:]
  +[BBButton buttonWithTitle:image:action:identifier:]

  // instance methods
  -[BBButton initWithCoder:]
  -[BBButton setTitle:]
  -[BBButton image]
  -[BBButton .cxx_destruct]
  -[BBButton setAction:]
  -[BBButton action]
  -[BBButton isEqual:]
  -[BBButton replacementObjectForCoder:]
  -[BBButton identifier]
  -[BBButton title]
  -[BBButton setImage:]
  -[BBButton setIdentifier:]
  -[BBButton awakeAfterUsingCoder:]
  -[BBButton copyWithZone:]
  -[BBButton encodeWithCoder:]
  -[BBButton initWithTitle:image:action:identifier:]
  -[BBButton glyphData]


BBSound : NSObject <NSCopying, NSSecureCoding>
 @property  TLAlertConfiguration *alertConfiguration
 @property  NSString *audioCategory
 @property  double maxDuration
 @property  BOOL repeats
 @property  NSString *ringtoneName
 @property  long long soundType
 @property  NSDictionary *vibrationPattern
 @property  NSString *songPath
 @property  unsigned long soundBehavior
 @property  unsigned int systemSoundID
 @property  long long alertType
 @property  NSString *accountIdentifier
 @property  BOOL ignoreRingerSwitch
 @property  NSString *toneIdentifier
 @property  NSString *vibrationIdentifier

  // class methods
  +[BBSound supportsSecureCoding]

  // instance methods
  -[BBSound alertType]
  -[BBSound toneIdentifier]
  -[BBSound setVibrationPattern:]
  -[BBSound systemSoundID]
  -[BBSound setAudioCategory:]
  -[BBSound ignoreRingerSwitch]
  -[BBSound audioCategory]
  -[BBSound setSoundType:]
  -[BBSound songPath]
  -[BBSound vibrationIdentifier]
  -[BBSound isRepeating]
  -[BBSound initWithCoder:]
  -[BBSound setAlertConfiguration:]
  -[BBSound setSoundBehavior:]
  -[BBSound .cxx_destruct]
  -[BBSound soundBehavior]
  -[BBSound vibrationPattern]
  -[BBSound setSystemSoundID:]
  -[BBSound setMaxDuration:]
  -[BBSound isEqual:]
  -[BBSound setRepeats:]
  -[BBSound initWithToneAlert:accountIdentifier:]
  -[BBSound initWithToneAlertConfiguration:]
  -[BBSound soundType]
  -[BBSound initWithToneAlert:ignoreRingerSwitch:]
  -[BBSound replacementObjectForCoder:]
  -[BBSound setSongPath:]
  -[BBSound initWithToneAlert:]
  -[BBSound maxDuration]
  -[BBSound accountIdentifier]
  -[BBSound initWithToneAlert:toneIdentifier:vibrationIdentifier:ignoreRingerSwitch:]
  -[BBSound alertConfiguration]
  -[BBSound awakeAfterUsingCoder:]
  -[BBSound setRingtoneName:]
  -[BBSound initWithToneAlert:toneIdentifier:vibrationIdentifier:]
  -[BBSound initWithToneAlert:accountIdentifier:ignoreRingerSwitch:]
  -[BBSound copyWithZone:]
  -[BBSound ringtoneName]
  -[BBSound initWithToneAlert:accountIdentifier:toneIdentifier:vibrationIdentifier:ignoreRingerSwitch:]
  -[BBSound encodeWithCoder:]


BBAssertion : NSObject
 @property  <BBAssertionDelegate> *delegate

  // instance methods
  -[BBAssertion transactionID]
  -[BBAssertion .cxx_destruct]
  -[BBAssertion setDelegate:]
  -[BBAssertion identifier]
  -[BBAssertion increaseOrIgnoreTransactionID:]
  -[BBAssertion delegate]
  -[BBAssertion dealloc]
  -[BBAssertion initWithDelegate:identifier:]


BBSectionIcon : NSObject <NSCopying, NSSecureCoding>
 @property  NSSet *variants

  // class methods
  +[BBSectionIcon supportsSecureCoding]

  // instance methods
  -[BBSectionIcon variants]
  -[BBSectionIcon initWithCoder:]
  -[BBSectionIcon .cxx_destruct]
  -[BBSectionIcon isEqual:]
  -[BBSectionIcon copyWithZone:]
  -[BBSectionIcon encodeWithCoder:]
  -[BBSectionIcon _bestVariantForFormat:]
  -[BBSectionIcon setVariants:]
  -[BBSectionIcon addVariant:]


BBSectionIconVariant : NSObject <NSCopying, NSSecureCoding>
 @property  long long format
 @property  NSData *imageData
 @property  NSString *imagePath
 @property  NSString *imageName
 @property  NSString *bundlePath
 @property  NSString *applicationIdentifier
 @property  NSString *systemImageName
 @property  BOOL precomposed

  // class methods
  +[BBSectionIconVariant variantWithFormat:systemImageName:]
  +[BBSectionIconVariant variantWithFormat:imagePath:]
  +[BBSectionIconVariant supportsSecureCoding]
  +[BBSectionIconVariant variantWithFormat:imageName:inBundleAtPath:]
  +[BBSectionIconVariant variantWithFormat:applicationIdentifier:]
  +[BBSectionIconVariant variantWithFormat:imageData:]
  +[BBSectionIconVariant variantWithFormat:imageName:inBundle:]

  // instance methods
  -[BBSectionIconVariant applicationIdentifier]
  -[BBSectionIconVariant setApplicationIdentifier:]
  -[BBSectionIconVariant setPrecomposed:]
  -[BBSectionIconVariant initWithCoder:]
  -[BBSectionIconVariant imagePath]
  -[BBSectionIconVariant setImageData:]
  -[BBSectionIconVariant .cxx_destruct]
  -[BBSectionIconVariant imageData]
  -[BBSectionIconVariant bundlePath]
  -[BBSectionIconVariant systemImageName]
  -[BBSectionIconVariant setFormat:]
  -[BBSectionIconVariant _initWithFormat:imageInfo:imageInfoType:]
  -[BBSectionIconVariant isEqual:]
  -[BBSectionIconVariant format]
  -[BBSectionIconVariant isPrecomposed]
  -[BBSectionIconVariant setSystemImageName:]
  -[BBSectionIconVariant imageName]
  -[BBSectionIconVariant setImagePath:]
  -[BBSectionIconVariant setImageName:]
  -[BBSectionIconVariant copyWithZone:]
  -[BBSectionIconVariant _processImageInfo:imageInfoType:]
  -[BBSectionIconVariant setBundlePath:]
  -[BBSectionIconVariant encodeWithCoder:]
  -[BBSectionIconVariant _setImageInfo:ofType:]


BBSectionParameters : NSObject <NSSecureCoding>
 @property  NSUUID *UUID
 @property  BBSectionSubtypeParameters *defaultSubtypeParameters
 @property  NSMutableDictionary *allSubtypeParameters
 @property  NSString *displayName
 @property  BBSectionIcon *icon
 @property  BOOL showsSubtitle
 @property  BOOL usesVariableLayout
 @property  unsigned long messageNumberOfLines
 @property  BOOL orderSectionUsingRecencyDate
 @property  BOOL showsDateInFloatingLockScreenAlert

  // class methods
  +[BBSectionParameters supportsSecureCoding]

  // instance methods
  -[BBSectionParameters displayName]
  -[BBSectionParameters UUID]
  -[BBSectionParameters defaultSubtypeParameters]
  -[BBSectionParameters initWithCoder:]
  -[BBSectionParameters icon]
  -[BBSectionParameters setDefaultSubtypeParameters:]
  -[BBSectionParameters .cxx_destruct]
  -[BBSectionParameters messageNumberOfLines]
  -[BBSectionParameters allSubtypeParameters]
  -[BBSectionParameters init]
  -[BBSectionParameters parametersForSubtype:]
  -[BBSectionParameters isEqual:]
  -[BBSectionParameters setShowsDateInFloatingLockScreenAlert:]
  -[BBSectionParameters replacementObjectForCoder:]
  -[BBSectionParameters setShowsSubtitle:]
  -[BBSectionParameters setIcon:]
  -[BBSectionParameters setDisplayName:]
  -[BBSectionParameters setOrderSectionUsingRecencyDate:]
  -[BBSectionParameters setAllSubtypeParameters:]
  -[BBSectionParameters setUsesVariableLayout:]
  -[BBSectionParameters usesVariableLayout]
  -[BBSectionParameters allSubtypes]
  -[BBSectionParameters orderSectionUsingRecencyDate]
  -[BBSectionParameters showsDateInFloatingLockScreenAlert]
  -[BBSectionParameters showsSubtitle]
  -[BBSectionParameters encodeWithCoder:]
  -[BBSectionParameters setUUID:]
  -[BBSectionParameters setMessageNumberOfLines:]


BBSectionSubtypeParameters : NSObject <NSSecureCoding>
 @property  BBSectionSubtypeParameters *fallbackParameters
 @property  NSNumber *boxedSuppressesAlertsWhenAppIsActive
 @property  NSNumber *boxedCoalescesWhenLocked
 @property  NSNumber *boxedInertWhenLocked
 @property  NSNumber *boxedPreservesUnlockActionCase
 @property  NSNumber *boxedVisuallyIndicatesWhenDateIsInFuture
 @property  NSNumber *boxedCanBeSilencedByMenuButtonPress
 @property  NSNumber *boxedPreventLock
 @property  NSNumber *boxedIgnoresQuietMode
 @property  NSNumber *boxedSuppressesTitle
 @property  NSNumber *boxedSubtypePriority
 @property  NSNumber *boxedIPodOutAlertType
 @property  NSNumber *boxedShowsUnreadIndicatorForNoticesFeed
 @property  NSNumber *boxedShowsContactPhoto
 @property  NSNumber *boxedPlaysSoundForModify
 @property  NSNumber *boxedAllowsAutomaticRemovalFromLockScreen
 @property  NSNumber *boxedAllowsAddingToLockScreenWhenUnlocked
 @property  NSNumber *boxedPrioritizeAtTopOfLockScreen
 @property  NSNumber *boxedRevealsAdditionalContentOnPresentation
 @property  NSNumber *boxedPrivacySettings
 @property  NSNumber *boxedShouldDismissBulletinWhenClosed
 @property  NSNumber *boxedAllowsPersistentBannersInCarPlay
 @property  NSNumber *boxedAllowsSupplementaryActionsInCarPlay
 @property  NSNumber *boxedPlaysMediaWhenRaised
 @property  NSNumber *boxedSuppressDelayForForwardedBulletins
 @property  NSNumber *boxedHideDismissActionInCarPlay
 @property  NSString *hiddenPreviewsBodyPlaceholder
 @property  NSString *subtypeSummaryFormat
 @property  NSString *missedBannerDescriptionFormat
 @property  NSString *fullUnlockActionLabel
 @property  NSString *unlockActionLabel
 @property  NSString *fullAlternateActionLabel
 @property  NSString *alternateActionLabel
 @property  BBSectionIcon *sectionIconOverride
 @property  BOOL suppressesAlertsWhenAppIsActive
 @property  BOOL coalescesWhenLocked
 @property  BOOL inertWhenLocked
 @property  BOOL preservesUnlockActionCase
 @property  unsigned long subtypePriority
 @property  long long iPodOutAlertType
 @property  BOOL canBeSilencedByMenuButtonPress
 @property  BOOL preventLock
 @property  BOOL ignoresQuietMode
 @property  BOOL suppressesTitle
 @property  BOOL showsUnreadIndicatorForNoticesFeed
 @property  BOOL showsContactPhoto
 @property  BOOL playsSoundForModify
 @property  BOOL visuallyIndicatesWhenDateIsInFuture
 @property  NSSet *alertSuppressionAppIDs
 @property  NSString *bannerAccessoryRemoteViewControllerClassName
 @property  NSString *bannerAccessoryRemoteServiceBundleIdentifier
 @property  NSString *secondaryContentRemoteViewControllerClassName
 @property  NSString *secondaryContentRemoteServiceBundleIdentifier
 @property  BOOL allowsAutomaticRemovalFromLockScreen
 @property  BOOL allowsAddingToLockScreenWhenUnlocked
 @property  BOOL prioritizeAtTopOfLockScreen
 @property  BOOL revealsAdditionalContentOnPresentation
 @property  unsigned long privacySettings
 @property  BOOL shouldDismissBulletinWhenClosed
 @property  BOOL allowsPersistentBannersInCarPlay
 @property  BOOL allowsSupplementaryActionsInCarPlay
 @property  BOOL playsMediaWhenRaised
 @property  BOOL suppressDelayForForwardedBulletins
 @property  BOOL hideDismissActionInCarPlay
 @property  NSString *topic
 @property  BOOL preemptsPresentedAlert

  // class methods
  +[BBSectionSubtypeParameters supportsSecureCoding]

  // instance methods
  -[BBSectionSubtypeParameters boxedPreventLock]
  -[BBSectionSubtypeParameters boxedCanBeSilencedByMenuButtonPress]
  -[BBSectionSubtypeParameters setSuppressesAlertsWhenAppIsActive:]
  -[BBSectionSubtypeParameters suppressesAlertsWhenAppIsActive]
  -[BBSectionSubtypeParameters fallbackParameters]
  -[BBSectionSubtypeParameters setBoxedPreservesUnlockActionCase:]
  -[BBSectionSubtypeParameters setIPodOutAlertType:]
  -[BBSectionSubtypeParameters setBoxedIgnoresQuietMode:]
  -[BBSectionSubtypeParameters hiddenPreviewsBodyPlaceholder]
  -[BBSectionSubtypeParameters setBoxedAllowsPersistentBannersInCarPlay:]
  -[BBSectionSubtypeParameters setHiddenPreviewsBodyPlaceholder:]
  -[BBSectionSubtypeParameters initWithCoder:]
  -[BBSectionSubtypeParameters setBoxedIPodOutAlertType:]
  -[BBSectionSubtypeParameters boxedShowsUnreadIndicatorForNoticesFeed]
  -[BBSectionSubtypeParameters boxedAllowsAutomaticRemovalFromLockScreen]
  -[BBSectionSubtypeParameters showsUnreadIndicatorForNoticesFeed]
  -[BBSectionSubtypeParameters coalescesWhenLocked]
  -[BBSectionSubtypeParameters alertSuppressionAppIDs]
  -[BBSectionSubtypeParameters setSectionIconOverride:]
  -[BBSectionSubtypeParameters setIgnoresQuietMode:]
  -[BBSectionSubtypeParameters alternateActionLabel]
  -[BBSectionSubtypeParameters setPreventLock:]
  -[BBSectionSubtypeParameters setSecondaryContentRemoteViewControllerClassName:]
  -[BBSectionSubtypeParameters setBoxedSuppressesAlertsWhenAppIsActive:]
  -[BBSectionSubtypeParameters setPrivacySettings:]
  -[BBSectionSubtypeParameters boxedIgnoresQuietMode]
  -[BBSectionSubtypeParameters setBoxedShowsUnreadIndicatorForNoticesFeed:]
  -[BBSectionSubtypeParameters iPodOutAlertType]
  -[BBSectionSubtypeParameters boxedShouldDismissBulletinWhenClosed]
  -[BBSectionSubtypeParameters setBoxedPreventLock:]
  -[BBSectionSubtypeParameters .cxx_destruct]
  -[BBSectionSubtypeParameters setBannerAccessoryRemoteViewControllerClassName:]
  -[BBSectionSubtypeParameters setBoxedPrivacySettings:]
  -[BBSectionSubtypeParameters bannerAccessoryRemoteViewControllerClassName]
  -[BBSectionSubtypeParameters boxedPrioritizeAtTopOfLockScreen]
  -[BBSectionSubtypeParameters revealsAdditionalContentOnPresentation]
  -[BBSectionSubtypeParameters boxedRevealsAdditionalContentOnPresentation]
  -[BBSectionSubtypeParameters suppressesTitle]
  -[BBSectionSubtypeParameters setPrioritizeAtTopOfLockScreen:]
  -[BBSectionSubtypeParameters setCanBeSilencedByMenuButtonPress:]
  -[BBSectionSubtypeParameters setAlternateActionLabel:]
  -[BBSectionSubtypeParameters setShouldDismissBulletinWhenClosed:]
  -[BBSectionSubtypeParameters missedBannerDescriptionFormat]
  -[BBSectionSubtypeParameters allowsSupplementaryActionsInCarPlay]
  -[BBSectionSubtypeParameters setAllowsSupplementaryActionsInCarPlay:]
  -[BBSectionSubtypeParameters boxedVisuallyIndicatesWhenDateIsInFuture]
  -[BBSectionSubtypeParameters boxedCoalescesWhenLocked]
  -[BBSectionSubtypeParameters boxedHideDismissActionInCarPlay]
  -[BBSectionSubtypeParameters setMissedBannerDescriptionFormat:]
  -[BBSectionSubtypeParameters bannerAccessoryRemoteServiceBundleIdentifier]
  -[BBSectionSubtypeParameters boxedPlaysMediaWhenRaised]
  -[BBSectionSubtypeParameters preemptsPresentedAlert]
  -[BBSectionSubtypeParameters visuallyIndicatesWhenDateIsInFuture]
  -[BBSectionSubtypeParameters setBannerAccessoryRemoteServiceBundleIdentifier:]
  -[BBSectionSubtypeParameters secondaryContentRemoteServiceBundleIdentifier]
  -[BBSectionSubtypeParameters suppressDelayForForwardedBulletins]
  -[BBSectionSubtypeParameters unlockActionLabel]
  -[BBSectionSubtypeParameters hideDismissActionInCarPlay]
  -[BBSectionSubtypeParameters setAllowsAutomaticRemovalFromLockScreen:]
  -[BBSectionSubtypeParameters isEqual:]
  -[BBSectionSubtypeParameters privacySettings]
  -[BBSectionSubtypeParameters shouldDismissBulletinWhenClosed]
  -[BBSectionSubtypeParameters setSubtypeSummaryFormat:]
  -[BBSectionSubtypeParameters topic]
  -[BBSectionSubtypeParameters setBoxedHideDismissActionInCarPlay:]
  -[BBSectionSubtypeParameters setBoxedPrioritizeAtTopOfLockScreen:]
  -[BBSectionSubtypeParameters boxedAllowsSupplementaryActionsInCarPlay]
  -[BBSectionSubtypeParameters prioritizeAtTopOfLockScreen]
  -[BBSectionSubtypeParameters setSubtypePriority:]
  -[BBSectionSubtypeParameters boxedPreservesUnlockActionCase]
  -[BBSectionSubtypeParameters setSuppressDelayForForwardedBulletins:]
  -[BBSectionSubtypeParameters setShowsUnreadIndicatorForNoticesFeed:]
  -[BBSectionSubtypeParameters setTopic:]
  -[BBSectionSubtypeParameters setAllowsPersistentBannersInCarPlay:]
  -[BBSectionSubtypeParameters setBoxedVisuallyIndicatesWhenDateIsInFuture:]
  -[BBSectionSubtypeParameters setFullUnlockActionLabel:]
  -[BBSectionSubtypeParameters subtypePriority]
  -[BBSectionSubtypeParameters setBoxedSuppressDelayForForwardedBulletins:]
  -[BBSectionSubtypeParameters setBoxedInertWhenLocked:]
  -[BBSectionSubtypeParameters setSuppressesTitle:]
  -[BBSectionSubtypeParameters inertWhenLocked]
  -[BBSectionSubtypeParameters setBoxedPlaysMediaWhenRaised:]
  -[BBSectionSubtypeParameters setAllowsAddingToLockScreenWhenUnlocked:]
  -[BBSectionSubtypeParameters fullUnlockActionLabel]
  -[BBSectionSubtypeParameters setAlertSuppressionAppIDs:]
  -[BBSectionSubtypeParameters preservesUnlockActionCase]
  -[BBSectionSubtypeParameters canBeSilencedByMenuButtonPress]
  -[BBSectionSubtypeParameters subtypeSummaryFormat]
  -[BBSectionSubtypeParameters setBoxedShouldDismissBulletinWhenClosed:]
  -[BBSectionSubtypeParameters setBoxedShowsContactPhoto:]
  -[BBSectionSubtypeParameters setRevealsAdditionalContentOnPresentation:]
  -[BBSectionSubtypeParameters boxedSuppressesAlertsWhenAppIsActive]
  -[BBSectionSubtypeParameters boxedSubtypePriority]
  -[BBSectionSubtypeParameters setBoxedCanBeSilencedByMenuButtonPress:]
  -[BBSectionSubtypeParameters boxedPlaysSoundForModify]
  -[BBSectionSubtypeParameters ignoresQuietMode]
  -[BBSectionSubtypeParameters allowsPersistentBannersInCarPlay]
  -[BBSectionSubtypeParameters setInertWhenLocked:]
  -[BBSectionSubtypeParameters setBoxedPlaysSoundForModify:]
  -[BBSectionSubtypeParameters setShowsContactPhoto:]
  -[BBSectionSubtypeParameters showsContactPhoto]
  -[BBSectionSubtypeParameters setPlaysSoundForModify:]
  -[BBSectionSubtypeParameters setBoxedRevealsAdditionalContentOnPresentation:]
  -[BBSectionSubtypeParameters boxedPrivacySettings]
  -[BBSectionSubtypeParameters setBoxedAllowsAddingToLockScreenWhenUnlocked:]
  -[BBSectionSubtypeParameters setBoxedSubtypePriority:]
  -[BBSectionSubtypeParameters setUnlockActionLabel:]
  -[BBSectionSubtypeParameters setBoxedSuppressesTitle:]
  -[BBSectionSubtypeParameters setFullAlternateActionLabel:]
  -[BBSectionSubtypeParameters preventLock]
  -[BBSectionSubtypeParameters playsMediaWhenRaised]
  -[BBSectionSubtypeParameters boxedAllowsAddingToLockScreenWhenUnlocked]
  -[BBSectionSubtypeParameters setCoalescesWhenLocked:]
  -[BBSectionSubtypeParameters sectionIconOverride]
  -[BBSectionSubtypeParameters allowsAutomaticRemovalFromLockScreen]
  -[BBSectionSubtypeParameters boxedShowsContactPhoto]
  -[BBSectionSubtypeParameters boxedIPodOutAlertType]
  -[BBSectionSubtypeParameters setHideDismissActionInCarPlay:]
  -[BBSectionSubtypeParameters boxedSuppressDelayForForwardedBulletins]
  -[BBSectionSubtypeParameters boxedInertWhenLocked]
  -[BBSectionSubtypeParameters secondaryContentRemoteViewControllerClassName]
  -[BBSectionSubtypeParameters setSecondaryContentRemoteServiceBundleIdentifier:]
  -[BBSectionSubtypeParameters setPlaysMediaWhenRaised:]
  -[BBSectionSubtypeParameters setPreemptsPresentedAlert:]
  -[BBSectionSubtypeParameters setBoxedAllowsSupplementaryActionsInCarPlay:]
  -[BBSectionSubtypeParameters setPreservesUnlockActionCase:]
  -[BBSectionSubtypeParameters setVisuallyIndicatesWhenDateIsInFuture:]
  -[BBSectionSubtypeParameters encodeWithCoder:]
  -[BBSectionSubtypeParameters allowsAddingToLockScreenWhenUnlocked]
  -[BBSectionSubtypeParameters setFallbackParameters:]
  -[BBSectionSubtypeParameters playsSoundForModify]
  -[BBSectionSubtypeParameters boxedAllowsPersistentBannersInCarPlay]
  -[BBSectionSubtypeParameters initWithFallbackParameters:]
  -[BBSectionSubtypeParameters setBoxedAllowsAutomaticRemovalFromLockScreen:]
  -[BBSectionSubtypeParameters boxedSuppressesTitle]
  -[BBSectionSubtypeParameters setBoxedCoalescesWhenLocked:]
  -[BBSectionSubtypeParameters fullAlternateActionLabel]


BBBulletinBoardDefaults : BSAbstractDefaultDomain
 @property  long long globalContentPreviewSetting
 @property  long long globalAnnounceSetting
 @property  long long globalAnnounceHeadphonesSetting
 @property  long long globalAnnounceCarPlaySetting
 @property  long long globalScheduledDeliverySetting
 @property  NSArray *globalScheduledDeliveryTimes
 @property  long long globalScheduledDeliveryShowNextSummarySetting
 @property  long long globalSpokenNotificationSetting_deprecated
 @property  BOOL announceSupportedForHeadphones
 @property  BOOL announceSupportedForCarPlay
 @property  BOOL pairedVehiclesForCarPlay

  // class methods
  +[BBBulletinBoardDefaults standardDefaults]

  // instance methods
  -[BBBulletinBoardDefaults init]
  -[BBBulletinBoardDefaults _bindAndRegisterDefaults]


BBAccessoryIcon : NSObject <NSCopying, NSSecureCoding>
 @property  NSDictionary *imagesForContentSize

  // class methods
  +[BBAccessoryIcon supportsSecureCoding]

  // instance methods
  -[BBAccessoryIcon initWithCoder:]
  -[BBAccessoryIcon .cxx_destruct]
  -[BBAccessoryIcon init]
  -[BBAccessoryIcon isEqual:]
  -[BBAccessoryIcon copyWithZone:]
  -[BBAccessoryIcon encodeWithCoder:]
  -[BBAccessoryIcon imagesForContentSize]
  -[BBAccessoryIcon setImagesForContentSize:]
  -[BBAccessoryIcon addImage:forContentSizeCategory:]
  -[BBAccessoryIcon imageForContentSizeCategory:]


BBAttachmentMetadata : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSUUID *UUID
 @property  long long type
 @property  NSURL *URL
 @property  NSString *identifier
 @property  NSString *uniformType
 @property  NSDictionary *thumbnailGeneratorUserInfo
 @property  BOOL thumbnailHidden
 @property  BOOL hiddenFromDefaultExpandedView

  // class methods
  +[BBAttachmentMetadata supportsSecureCoding]

  // instance methods
  -[BBAttachmentMetadata UUID]
  -[BBAttachmentMetadata initWithCoder:]
  -[BBAttachmentMetadata .cxx_destruct]
  -[BBAttachmentMetadata thumbnailGeneratorUserInfo]
  -[BBAttachmentMetadata init]
  -[BBAttachmentMetadata isEqual:]
  -[BBAttachmentMetadata identifier]
  -[BBAttachmentMetadata URL]
  -[BBAttachmentMetadata type]
  -[BBAttachmentMetadata mutableCopyWithZone:]
  -[BBAttachmentMetadata hasContentModificationsRelativeTo:]
  -[BBAttachmentMetadata copyWithZone:]
  -[BBAttachmentMetadata encodeWithCoder:]
  -[BBAttachmentMetadata _initWithType:URL:identifier:uniformType:thumbnailGeneratorUserInfo:thumbnailHidden:hiddenFromDefaultExpandedView:]
  -[BBAttachmentMetadata uniformType]
  -[BBAttachmentMetadata thumbnailHidden]
  -[BBAttachmentMetadata hiddenFromDefaultExpandedView]


BBMutableAttachmentMetadata : BBAttachmentMetadata
 @property  long long type
 @property  NSURL *URL
 @property  NSString *identifier
 @property  NSString *uniformType
 @property  NSDictionary *thumbnailGeneratorUserInfo
 @property  BOOL thumbnailHidden
 @property  BOOL hiddenFromDefaultExpandedView

  // instance methods
  -[BBMutableAttachmentMetadata setType:]
  -[BBMutableAttachmentMetadata setURL:]
  -[BBMutableAttachmentMetadata setThumbnailGeneratorUserInfo:]
  -[BBMutableAttachmentMetadata setIdentifier:]
  -[BBMutableAttachmentMetadata copyWithZone:]
  -[BBMutableAttachmentMetadata setUniformType:]
  -[BBMutableAttachmentMetadata setThumbnailHidden:]
  -[BBMutableAttachmentMetadata setHiddenFromDefaultExpandedView:]


BBAttachments : NSObject <NSCopying, NSSecureCoding>
 @property  NSCountedSet *additionalAttachments
 @property  long long primaryType

  // class methods
  +[BBAttachments supportsSecureCoding]

  // instance methods
  -[BBAttachments initWithCoder:]
  -[BBAttachments addAttachmentOfType:]
  -[BBAttachments .cxx_destruct]
  -[BBAttachments isEqual:]
  -[BBAttachments copyWithZone:]
  -[BBAttachments encodeWithCoder:]
  -[BBAttachments additionalAttachments]
  -[BBAttachments setAdditionalAttachments:]
  -[BBAttachments primaryType]
  -[BBAttachments numberOfAdditionalAttachmentsOfType:]
  -[BBAttachments numberOfAdditionalAttachments]
  -[BBAttachments isEqualToAttachments:]
  -[BBAttachments setPrimaryType:]


BBThumbnailSizeConstraints : NSObject <NSSecureCoding>
 @property  long long constraintType
 @property  float fixedWidth
 @property  float fixedHeight
 @property  float fixedDimension
 @property  float minAspectRatio
 @property  float maxAspectRatio
 @property  float thumbnailScale

  // class methods
  +[BBThumbnailSizeConstraints supportsSecureCoding]

  // instance methods
  -[BBThumbnailSizeConstraints initWithCoder:]
  -[BBThumbnailSizeConstraints setMaxAspectRatio:]
  -[BBThumbnailSizeConstraints fixedHeight]
  -[BBThumbnailSizeConstraints maxAspectRatio]
  -[BBThumbnailSizeConstraints setFixedHeight:]
  -[BBThumbnailSizeConstraints encodeWithCoder:]
  -[BBThumbnailSizeConstraints minAspectRatio]
  -[BBThumbnailSizeConstraints setMinAspectRatio:]
  -[BBThumbnailSizeConstraints setFixedWidth:]
  -[BBThumbnailSizeConstraints fixedWidth]
  -[BBThumbnailSizeConstraints areReasonable]
  -[BBThumbnailSizeConstraints setConstraintType:]
  -[BBThumbnailSizeConstraints setFixedDimension:]
  -[BBThumbnailSizeConstraints setThumbnailScale:]
  -[BBThumbnailSizeConstraints constraintType]
  -[BBThumbnailSizeConstraints fixedDimension]
  -[BBThumbnailSizeConstraints thumbnailScale]
  -[BBThumbnailSizeConstraints sizeFromAspectRatio:]


BBAssociationSet : NSObject
  // class methods
  +[BBAssociationSet setWithStrongAssociation]
  +[BBAssociationSet setWithWeakAssociation]

  // instance methods
  -[BBAssociationSet .cxx_destruct]
  -[BBAssociationSet associatedObjectsForObject:]
  -[BBAssociationSet associateObject:withObject:]
  -[BBAssociationSet _initWithMemoryPointerFunction:]
  -[BBAssociationSet copyAssociationsForObject:toObject:]


BBRemoteDataProviderConnection : NSObject <BBRemoteDataProviderDelegate, BBDataProviderConnectionServerProxy, BBDataProviderStore>
 @property  NSString *serviceName
 @property  NSString *bundleID
 @property  BOOL isConnected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BBRemoteDataProviderConnection bundleID]
  -[BBRemoteDataProviderConnection addParentSectionFactory:]
  -[BBRemoteDataProviderConnection setServiceName:]
  -[BBRemoteDataProviderConnection serviceName]
  -[BBRemoteDataProviderConnection isConnected]
  -[BBRemoteDataProviderConnection debugDescriptionWithChildren:]
  -[BBRemoteDataProviderConnection .cxx_destruct]
  -[BBRemoteDataProviderConnection remoteDataProviderNeedsToWakeClient:]
  -[BBRemoteDataProviderConnection dataProviderForSectionID:]
  -[BBRemoteDataProviderConnection loadAllDataProviders]
  -[BBRemoteDataProviderConnection performBlockOnDataProviders:]
  -[BBRemoteDataProviderConnection addDataProviderWithSectionID:clientProxy:identity:completion:]
  -[BBRemoteDataProviderConnection _queue_removeDataProvider:]
  -[BBRemoteDataProviderConnection removeDataProviderWithSectionID:]
  -[BBRemoteDataProviderConnection setConnected:completion:]
  -[BBRemoteDataProviderConnection initWithServiceName:bundleID:delegate:]
  -[BBRemoteDataProviderConnection setBundleID:]
  -[BBRemoteDataProviderConnection dataProvidersForUniversalSectionID:]
  -[BBRemoteDataProviderConnection clientIsReady:]
  -[BBRemoteDataProviderConnection removeDataProvider:]


BBLocalDataProviderStore : NSObject <BBLocalDataProviderFactoryStore, BBDataProviderStore>
 @property  NSMutableDictionary *dataProvidersBySectionID
 @property  NSMutableDictionary *dataProvidersByUniversalSectionID
 @property  NSMutableArray *localFactories
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BBLocalDataProviderStore localDataProviderStoreWithDelegate:dataProviderQueue:]

  // instance methods
  -[BBLocalDataProviderStore addParentSectionInfo:displayName:icon:universalSectionID:]
  -[BBLocalDataProviderStore addParentSectionInfo:displayName:icon:]
  -[BBLocalDataProviderStore loadAllDataProvidersAndPerformMigration:]
  -[BBLocalDataProviderStore debugDescriptionWithChildren:]
  -[BBLocalDataProviderStore .cxx_destruct]
  -[BBLocalDataProviderStore dataProviderForSectionID:]
  -[BBLocalDataProviderStore performBlockOnDataProviders:]
  -[BBLocalDataProviderStore _queue_removeDataProvider:]
  -[BBLocalDataProviderStore removeDataProviderWithSectionID:]
  -[BBLocalDataProviderStore dataProvidersForUniversalSectionID:]
  -[BBLocalDataProviderStore removeDataProvider:]
  -[BBLocalDataProviderStore initWithDelegate:dataProviderQueue:]
  -[BBLocalDataProviderStore _loadDataProviderPluginBundle:performMigration:]
  -[BBLocalDataProviderStore _addDataProviderClass:performMigration:]
  -[BBLocalDataProviderStore _addLocalDataProviderFactoryOfClass:]
  -[BBLocalDataProviderStore _queue_addDataProvider:performMigration:]
  -[BBLocalDataProviderStore addDataProvider:performMigration:]
  -[BBLocalDataProviderStore dataProvidersBySectionID]
  -[BBLocalDataProviderStore setDataProvidersBySectionID:]
  -[BBLocalDataProviderStore dataProvidersByUniversalSectionID]
  -[BBLocalDataProviderStore setDataProvidersByUniversalSectionID:]
  -[BBLocalDataProviderStore localFactories]
  -[BBLocalDataProviderStore setLocalFactories:]


BBDataProviderConnectionResolver : NSObject <NSXPCListenerDelegate, BBDataProviderConnectionClientEndpoint>
 @property  BBDataProviderConnection *dataProviderConnection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BBDataProviderConnectionResolver xpcInterface]
  +[BBDataProviderConnectionResolver resolverForConnection:]

  // instance methods
  -[BBDataProviderConnectionResolver ping:]
  -[BBDataProviderConnectionResolver _registerForPublicationNotification]
  -[BBDataProviderConnectionResolver _queue_registerWithServer:]
  -[BBDataProviderConnectionResolver .cxx_destruct]
  -[BBDataProviderConnectionResolver initWithConnection:]
  -[BBDataProviderConnectionResolver _invalidate]
  -[BBDataProviderConnectionResolver dealloc]
  -[BBDataProviderConnectionResolver invalidate]
  -[BBDataProviderConnectionResolver setDataProviderConnection:]
  -[BBDataProviderConnectionResolver listener:shouldAcceptNewConnection:]
  -[BBDataProviderConnectionResolver dataProviderConnection]


BBParentSectionDataProviderFactory : NSObject <BBSectionIdentity, NSSecureCoding>
 @property  BBSectionInfo *sectionInfo
 @property  NSString *universalSectionIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BBParentSectionDataProviderFactory supportsSecureCoding]
  +[BBParentSectionDataProviderFactory factoryFromSectionInfo:]

  // instance methods
  -[BBParentSectionDataProviderFactory sectionIdentifier]
  -[BBParentSectionDataProviderFactory initWithCoder:]
  -[BBParentSectionDataProviderFactory .cxx_destruct]
  -[BBParentSectionDataProviderFactory sectionIcon]
  -[BBParentSectionDataProviderFactory sectionDisplayName]
  -[BBParentSectionDataProviderFactory sectionInfo]
  -[BBParentSectionDataProviderFactory universalSectionIdentifier]
  -[BBParentSectionDataProviderFactory setUniversalSectionIdentifier:]
  -[BBParentSectionDataProviderFactory setSectionInfo:]
  -[BBParentSectionDataProviderFactory encodeWithCoder:]
  -[BBParentSectionDataProviderFactory initWithSectionInfo:]
  -[BBParentSectionDataProviderFactory dataProviders]


BBSectionInfoSettings : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL showsInLockScreen
 @property  BOOL showsInNotificationCenter
 @property  BOOL showsMessagePreview
 @property  long long spokenNotificationSetting
 @property  NSDictionary *stateCapture
 @property  long long authorizationStatus
 @property  NSDate *authorizationExpirationDate
 @property  BOOL allowsNotifications
 @property  NSDate *lastUserGrantedAuthorizationDate
 @property  BOOL isAuthorizedTemporarily
 @property  BBMuteAssertion *muteAssertion
 @property  long long notificationCenterSetting
 @property  long long lockScreenSetting
 @property  BOOL showsOnExternalDevices
 @property  BOOL showsCustomSettingsLink
 @property  long long contentPreviewSetting
 @property  unsigned long alertType
 @property  unsigned long pushSettings
 @property  long long carPlaySetting
 @property  long long criticalAlertSetting
 @property  long long timeSensitiveSetting
 @property  BOOL userConfiguredTimeSensitiveSetting
 @property  long long scheduledDeliverySetting
 @property  long long directMessagesSetting
 @property  BOOL userConfiguredDirectMessagesSetting
 @property  long long bulletinGroupingSetting
 @property  long long announceSetting

  // class methods
  +[BBSectionInfoSettings supportsSecureCoding]
  +[BBSectionInfoSettings sectionInfoSettingsForManagedBundleID:]

  // instance methods
  -[BBSectionInfoSettings alertType]
  -[BBSectionInfoSettings carPlaySetting]
  -[BBSectionInfoSettings setMuteAssertion:]
  -[BBSectionInfoSettings lockScreenSetting]
  -[BBSectionInfoSettings directMessagesSetting]
  -[BBSectionInfoSettings setTimeSensitiveSetting:]
  -[BBSectionInfoSettings setNotificationCenterSetting:]
  -[BBSectionInfoSettings setBulletinGroupingSetting:]
  -[BBSectionInfoSettings showsMessagePreview]
  -[BBSectionInfoSettings setAlertType:]
  -[BBSectionInfoSettings scheduledDeliverySetting]
  -[BBSectionInfoSettings showsInLockScreen]
  -[BBSectionInfoSettings initWithCoder:]
  -[BBSectionInfoSettings setScheduledDeliverySetting:]
  -[BBSectionInfoSettings _authorizationStatusDescription]
  -[BBSectionInfoSettings setLastUserGrantedAuthorizationDate:]
  -[BBSectionInfoSettings setCriticalAlertSetting:]
  -[BBSectionInfoSettings setAnnounceSetting:]
  -[BBSectionInfoSettings criticalAlertSetting]
  -[BBSectionInfoSettings setLockScreenSetting:]
  -[BBSectionInfoSettings setAuthorizationStatus:]
  -[BBSectionInfoSettings setDirectMessagesSetting:]
  -[BBSectionInfoSettings spokenNotificationSetting]
  -[BBSectionInfoSettings isAuthorizedTemporarily]
  -[BBSectionInfoSettings setCarPlaySetting:]
  -[BBSectionInfoSettings authorizationStatus]
  -[BBSectionInfoSettings .cxx_destruct]
  -[BBSectionInfoSettings timeSensitiveSetting]
  -[BBSectionInfoSettings initWithDefaultsForSectionType:]
  -[BBSectionInfoSettings notificationCenterSetting]
  -[BBSectionInfoSettings setShowsInLockScreen:]
  -[BBSectionInfoSettings muteAssertion]
  -[BBSectionInfoSettings lastUserGrantedAuthorizationDate]
  -[BBSectionInfoSettings announceSetting]
  -[BBSectionInfoSettings hasUserConfiguredTimeSensitiveSetting]
  -[BBSectionInfoSettings showsOnExternalDevices]
  -[BBSectionInfoSettings _contentPreviewSettingDescription]
  -[BBSectionInfoSettings hasUserConfiguredDirectMessagesSetting]
  -[BBSectionInfoSettings isEqual:]
  -[BBSectionInfoSettings setContentPreviewSetting:]
  -[BBSectionInfoSettings showsCustomSettingsLink]
  -[BBSectionInfoSettings setShowsOnExternalDevices:]
  -[BBSectionInfoSettings isBulletinMutedForThreadIdentifier:]
  -[BBSectionInfoSettings setAuthorizationExpirationDate:]
  -[BBSectionInfoSettings setSpokenNotificationSetting:]
  -[BBSectionInfoSettings setShowsMessagePreview:]
  -[BBSectionInfoSettings authorizationExpirationDate]
  -[BBSectionInfoSettings setAllowsNotifications:]
  -[BBSectionInfoSettings unmuteThreadIdentifier:]
  -[BBSectionInfoSettings setPushSettings:]
  -[BBSectionInfoSettings setUserConfiguredDirectMessagesSetting:]
  -[BBSectionInfoSettings unmuteSection]
  -[BBSectionInfoSettings setShowsCustomSettingsLink:]
  -[BBSectionInfoSettings _alertTypeDescription]
  -[BBSectionInfoSettings muteThreadIdentifier:untilDate:]
  -[BBSectionInfoSettings muteSectionUntilDate:]
  -[BBSectionInfoSettings setUserConfiguredTimeSensitiveSetting:]
  -[BBSectionInfoSettings _announceSettingDescription]
  -[BBSectionInfoSettings copyWithZone:]
  -[BBSectionInfoSettings _bulletinGroupingSettingDescription]
  -[BBSectionInfoSettings allowsNotifications]
  -[BBSectionInfoSettings bulletinGroupingSetting]
  -[BBSectionInfoSettings pushSettings]
  -[BBSectionInfoSettings stateCapture]
  -[BBSectionInfoSettings contentPreviewSetting]
  -[BBSectionInfoSettings encodeWithCoder:]
  -[BBSectionInfoSettings showsInNotificationCenter]
  -[BBSectionInfoSettings setShowsInNotificationCenter:]


BBMaskedSet : NSObject
 @property  NSMutableArray *maskObjectSets

  // instance methods
  -[BBMaskedSet removeObject:]
  -[BBMaskedSet _executeUsingMask:block:]
  -[BBMaskedSet setMaskObjectSets:]
  -[BBMaskedSet .cxx_destruct]
  -[BBMaskedSet objectAtIndex:]
  -[BBMaskedSet addObject:withMask:]
  -[BBMaskedSet initWithMaskBits:]
  -[BBMaskedSet maskObjectSets]
  -[BBMaskedSet objectsForMask:]
  -[BBMaskedSet allObjects]


BBBulletinRequestParameters : NSObject <NSCopying, NSSecureCoding>
 @property  NSDate *sinceDate
 @property  NSSet *enabledSectionIDs
 @property  unsigned long publisherDestination
 @property  unsigned long maximumCount

  // class methods
  +[BBBulletinRequestParameters supportsSecureCoding]
  +[BBBulletinRequestParameters requestParametersForDestination:withSinceDate:maximumCount:enabledSectionIDs:]

  // instance methods
  -[BBBulletinRequestParameters enabledSectionIDs]
  -[BBBulletinRequestParameters initWithCoder:]
  -[BBBulletinRequestParameters setEnabledSectionIDs:]
  -[BBBulletinRequestParameters .cxx_destruct]
  -[BBBulletinRequestParameters sinceDate]
  -[BBBulletinRequestParameters publisherDestination]
  -[BBBulletinRequestParameters setSinceDate:]
  -[BBBulletinRequestParameters maximumCount]
  -[BBBulletinRequestParameters initWithDestination:sinceDate:maximumCount:enabledSectionIDs:]
  -[BBBulletinRequestParameters copyWithZone:]
  -[BBBulletinRequestParameters encodeWithCoder:]


BBDataProviderIdentity : NSObject <NSSecureCoding>
 @property  {?=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1} traits
 @property  NSString *sectionIdentifier
 @property  NSString *universalSectionIdentifier
 @property  BBSectionInfo *defaultSectionInfo
 @property  NSString *sectionDisplayName
 @property  BBSectionIcon *sectionIcon
 @property  NSArray *sortDescriptors
 @property  BBSectionParameters *sectionParameters
 @property  NSArray *defaultSubsectionInfos
 @property  NSString *sortKey
 @property  NSDictionary *subsectionDisplayNames
 @property  BOOL syncsBulletinDismissal
 @property  NSString *parentSectionIdentifier
 @property  NSDictionary *filterDisplayNames
 @property  NSString *sectionBundlePath

  // class methods
  +[BBDataProviderIdentity supportsSecureCoding]
  +[BBDataProviderIdentity identityForDataProvider:]
  +[BBDataProviderIdentity identityForRemoteDataProvider:]

  // instance methods
  -[BBDataProviderIdentity sectionParameters]
  -[BBDataProviderIdentity sectionIdentifier]
  -[BBDataProviderIdentity setSortKey:]
  -[BBDataProviderIdentity traits]
  -[BBDataProviderIdentity initWithCoder:]
  -[BBDataProviderIdentity setSectionBundlePath:]
  -[BBDataProviderIdentity parentSectionIdentifier]
  -[BBDataProviderIdentity setDefaultSectionInfo:]
  -[BBDataProviderIdentity syncsBulletinDismissal]
  -[BBDataProviderIdentity .cxx_destruct]
  -[BBDataProviderIdentity sortKey]
  -[BBDataProviderIdentity sectionIcon]
  -[BBDataProviderIdentity setSectionDisplayName:]
  -[BBDataProviderIdentity setSortDescriptors:]
  -[BBDataProviderIdentity sectionBundlePath]
  -[BBDataProviderIdentity sectionDisplayName]
  -[BBDataProviderIdentity setFilterDisplayNames:]
  -[BBDataProviderIdentity sortDescriptors]
  -[BBDataProviderIdentity subsectionDisplayNames]
  -[BBDataProviderIdentity setDefaultSubsectionInfos:]
  -[BBDataProviderIdentity initForDataProvider:forRemoteDataProvider:]
  -[BBDataProviderIdentity filterDisplayNames]
  -[BBDataProviderIdentity universalSectionIdentifier]
  -[BBDataProviderIdentity setUniversalSectionIdentifier:]
  -[BBDataProviderIdentity defaultSubsectionInfos]
  -[BBDataProviderIdentity defaultSectionInfo]
  -[BBDataProviderIdentity setSectionParameters:]
  -[BBDataProviderIdentity setSectionIdentifier:]
  -[BBDataProviderIdentity encodeWithCoder:]
  -[BBDataProviderIdentity setSubsectionDisplayNames:]
  -[BBDataProviderIdentity setParentSectionIdentifier:]
  -[BBDataProviderIdentity setSectionIcon:]


BBDataProvider : NSObject <BBSectionIdentity>
 @property  BBDataProviderIdentity *identity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BBDataProvider sectionParameters]
  -[BBDataProvider noteSectionInfoDidChange:]
  -[BBDataProvider deliverMessageWithName:userInfo:]
  -[BBDataProvider sectionIdentifier]
  -[BBDataProvider clearedInfoForBulletins:lastClearedInfo:completion:]
  -[BBDataProvider updateSectionInfoWithSectionInfo:handler:completion:]
  -[BBDataProvider reloadIdentityWithCompletion:]
  -[BBDataProvider dataProviderDidLoad]
  -[BBDataProvider parentSectionIdentifier]
  -[BBDataProvider updateClearedInfoWithClearedInfo:handler:completion:]
  -[BBDataProvider debugDescriptionWithChildren:]
  -[BBDataProvider syncsBulletinDismissal]
  -[BBDataProvider .cxx_destruct]
  -[BBDataProvider displayNameForSubsectionID:]
  -[BBDataProvider canPerformMigration]
  -[BBDataProvider clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:completion:]
  -[BBDataProvider sortKey]
  -[BBDataProvider sectionIcon]
  -[BBDataProvider sectionBundlePath]
  -[BBDataProvider sectionDisplayName]
  -[BBDataProvider sortDescriptors]
  -[BBDataProvider setIdentity:]
  -[BBDataProvider initialized]
  -[BBDataProvider identity]
  -[BBDataProvider universalSectionIdentifier]
  -[BBDataProvider defaultSubsectionInfos]
  -[BBDataProvider bulletinsWithRequestParameters:lastCleared:completion:]
  -[BBDataProvider invalidate]
  -[BBDataProvider clearedInfoForClearingAllBulletinsWithLastClearedInfo:completion:]
  -[BBDataProvider defaultSectionInfo]
  -[BBDataProvider migrateSectionInfo:oldSectionInfo:]
  -[BBDataProvider deliverResponse:forBulletinRequest:withCompletion:]
  -[BBDataProvider startWatchdog]
  -[BBDataProvider canClearBulletinsByDate]
  -[BBDataProvider canClearAllBulletins]


BBLocalDataProvider : BBDataProvider
 @property  <BBDataProvider> *dataProvider

  // class methods
  +[BBLocalDataProvider dataProviderWithPrincipalClass:serverQueue:initializationCompletion:]
  +[BBLocalDataProvider dataProviderWithDataProvider:serverQueue:]

  // instance methods
  -[BBLocalDataProvider noteSectionInfoDidChange:]
  -[BBLocalDataProvider deliverMessageWithName:userInfo:]
  -[BBLocalDataProvider clearedInfoForBulletins:lastClearedInfo:completion:]
  -[BBLocalDataProvider updateSectionInfoWithSectionInfo:handler:completion:]
  -[BBLocalDataProvider reloadIdentityWithCompletion:]
  -[BBLocalDataProvider dataProviderDidLoad]
  -[BBLocalDataProvider updateClearedInfoWithClearedInfo:handler:completion:]
  -[BBLocalDataProvider _ping]
  -[BBLocalDataProvider clearedInfoForBulletins:lastClearedInfo:]
  -[BBLocalDataProvider .cxx_destruct]
  -[BBLocalDataProvider canPerformMigration]
  -[BBLocalDataProvider clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:completion:]
  -[BBLocalDataProvider setDataProvider:]
  -[BBLocalDataProvider dealloc]
  -[BBLocalDataProvider bulletinsWithRequestParameters:lastCleared:completion:]
  -[BBLocalDataProvider invalidate]
  -[BBLocalDataProvider dataProvider]
  -[BBLocalDataProvider clearedInfoForClearingAllBulletinsWithLastClearedInfo:completion:]
  -[BBLocalDataProvider migrateSectionInfo:oldSectionInfo:]
  -[BBLocalDataProvider bulletinsWithRequestParameters:lastCleared:]
  -[BBLocalDataProvider deliverResponse:forBulletinRequest:withCompletion:]
  -[BBLocalDataProvider startWatchdog]
  -[BBLocalDataProvider initWithPrincipalClass:serverQueue:initializationCompletion:]
  -[BBLocalDataProvider initWithDataProvider:serverQueue:]
  -[BBLocalDataProvider _initWithDataProvider:sectionID:serverQueue:initializationCompletion:]
  -[BBLocalDataProvider _watchdogFired]
  -[BBLocalDataProvider _bulletinsWithRequestParameters:lastCleared:]
  -[BBLocalDataProvider _doSynchronousRemoteRequest:conditionalOn:]
  -[BBLocalDataProvider _doAsynchronousRemoteRequest:conditionalOn:completion:]


BBImage : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *data
 @property  NSString *path
 @property  NSString *name
 @property  NSString *bundlePath

  // class methods
  +[BBImage imageWithName:inBundle:]
  +[BBImage supportsSecureCoding]
  +[BBImage imageWithName:inBundlePath:]
  +[BBImage imageWithData:]

  // instance methods
  -[BBImage name]
  -[BBImage initWithCoder:]
  -[BBImage setPath:]
  -[BBImage .cxx_destruct]
  -[BBImage bundlePath]
  -[BBImage setName:]
  -[BBImage data]
  -[BBImage isEqual:]
  -[BBImage replacementObjectForCoder:]
  -[BBImage path]
  -[BBImage setData:]
  -[BBImage awakeAfterUsingCoder:]
  -[BBImage copyWithZone:]
  -[BBImage setBundlePath:]
  -[BBImage encodeWithCoder:]
  -[BBImage initWithData:path:name:bundlePath:]


BBBulletinUpdateTransaction : NSObject <NSCopying, NSSecureCoding>
 @property  BBBulletinUpdate *bulletinUpdate
 @property  unsigned long transactionID

  // class methods
  +[BBBulletinUpdateTransaction supportsSecureCoding]
  +[BBBulletinUpdateTransaction transactionWithBulletinUpdate:transactionID:]

  // instance methods
  -[BBBulletinUpdateTransaction initWithCoder:]
  -[BBBulletinUpdateTransaction transactionID]
  -[BBBulletinUpdateTransaction .cxx_destruct]
  -[BBBulletinUpdateTransaction isEqual:]
  -[BBBulletinUpdateTransaction _initWithBulletinUpdate:transactionID:]
  -[BBBulletinUpdateTransaction bulletinUpdate]
  -[BBBulletinUpdateTransaction copyWithZone:]
  -[BBBulletinUpdateTransaction encodeWithCoder:]


BBObserverGatewayEnumerator : NSObject
 @property  NSMutableSet *gatewaysPlayedLightsAndSirens
 @property  BOOL cancelled
 @property  NSArray *gateways
 @property  BBBulletin *bulletin
 @property  unsigned long feeds
 @property  double gatewayTimeout

  // instance methods
  -[BBObserverGatewayEnumerator gateways]
  -[BBObserverGatewayEnumerator feeds]
  -[BBObserverGatewayEnumerator cancelled]
  -[BBObserverGatewayEnumerator setBulletin:]
  -[BBObserverGatewayEnumerator .cxx_destruct]
  -[BBObserverGatewayEnumerator setCancelled:]
  -[BBObserverGatewayEnumerator init]
  -[BBObserverGatewayEnumerator bulletin]
  -[BBObserverGatewayEnumerator cancel]
  -[BBObserverGatewayEnumerator setFeeds:]
  -[BBObserverGatewayEnumerator setGateways:]
  -[BBObserverGatewayEnumerator setGatewayTimeout:]
  -[BBObserverGatewayEnumerator enumerateWithCompletion:]
  -[BBObserverGatewayEnumerator attemptNextGatewayInEnumerator:playLightsAndSirens:completion:]
  -[BBObserverGatewayEnumerator sendToDefaultGatewayToPlayLightsAndSirens:]
  -[BBObserverGatewayEnumerator defaultGateway]
  -[BBObserverGatewayEnumerator gatewayTimeout]
  -[BBObserverGatewayEnumerator gatewaysPlayedLightsAndSirens]
  -[BBObserverGatewayEnumerator setGatewaysPlayedLightsAndSirens:]


BBSectionAuthorizationManager : NSObject
 @property  <BBSectionAuthorizationManagerDelegate> *delegate

  // instance methods
  -[BBSectionAuthorizationManager handleChangeForSectionInfo:replacingSectionInfo:]
  -[BBSectionAuthorizationManager .cxx_destruct]
  -[BBSectionAuthorizationManager _replaceExisitingTimerForSectionID:withExpirationDate:]
  -[BBSectionAuthorizationManager setDelegate:]
  -[BBSectionAuthorizationManager initWithQueue:]
  -[BBSectionAuthorizationManager delegate]
  -[BBSectionAuthorizationManager _addNewTimerForSectionID:withExpirationDate:]
  -[BBSectionAuthorizationManager _queue_triggerDidFireForExpiryTimer:]
  -[BBSectionAuthorizationManager _cancelExisitingTimerForSectionID:]


BBObserverGatewayAddBulletinRequest : NSObject
 @property  NSString *bulletinID
 @property  NSString *sectionID
 @property  NSDate *timeout
 @property  @? timeoutHandler

  // instance methods
  -[BBObserverGatewayAddBulletinRequest .cxx_destruct]
  -[BBObserverGatewayAddBulletinRequest bulletinID]
  -[BBObserverGatewayAddBulletinRequest setTimeout:]
  -[BBObserverGatewayAddBulletinRequest setSectionID:]
  -[BBObserverGatewayAddBulletinRequest timeoutHandler]
  -[BBObserverGatewayAddBulletinRequest timeout]
  -[BBObserverGatewayAddBulletinRequest setTimeoutHandler:]
  -[BBObserverGatewayAddBulletinRequest sectionID]
  -[BBObserverGatewayAddBulletinRequest setBulletinID:]


BBObserverGatewayHolder : NSObject
 @property  BBObserverClientProxy *gateway
 @property  unsigned long gatewayPriority
 @property  unsigned long feed
 @property  NSString *name
 @property  BBMaskedSet *observerFeedSet

  // instance methods
  -[BBObserverGatewayHolder feed]
  -[BBObserverGatewayHolder gateway]
  -[BBObserverGatewayHolder name]
  -[BBObserverGatewayHolder _startTimerWithFireDate:]
  -[BBObserverGatewayHolder sendAddBulletin:playLightsAndSirens:forFeeds:withTimeout:handler:]
  -[BBObserverGatewayHolder _startNextTimer]
  -[BBObserverGatewayHolder .cxx_destruct]
  -[BBObserverGatewayHolder setGatewayPriority:]
  -[BBObserverGatewayHolder initWithQueue:name:]
  -[BBObserverGatewayHolder sendObserversAddBulletin:playLightsAndSirens:forFeeds:]
  -[BBObserverGatewayHolder setName:]
  -[BBObserverGatewayHolder observerFeedSet]
  -[BBObserverGatewayHolder _handleTimeout]
  -[BBObserverGatewayHolder sendObserver:addBulletin:playLightsAndSirens:forFeeds:withHandler:]
  -[BBObserverGatewayHolder _invalidateTimeout:]
  -[BBObserverGatewayHolder gatewayPriority]
  -[BBObserverGatewayHolder _addTimeout:forBulletinID:inSectionID:handler:]
  -[BBObserverGatewayHolder _invalidateTimer]
  -[BBObserverGatewayHolder setGateway:]
  -[BBObserverGatewayHolder dealloc]
  -[BBObserverGatewayHolder setFeed:]


BBContact : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *customHandle
 @property  long long customHandleType
 @property  NSString *customDisplayName
 @property  NSString *handle
 @property  long long handleType
 @property  NSString *serviceName
 @property  NSString *displayName
 @property  BOOL displayNameSuggested
 @property  NSString *customIdentifier
 @property  NSString *cnContactIdentifier
 @property  NSString *cnContactFullname
 @property  BOOL cnContactIdentifierSuggested

  // class methods
  +[BBContact supportsSecureCoding]
  +[BBContact contactWithHandle:handleType:serviceName:displayName:cnContactIdentifier:cnContactFullname:cnContactIdentifierSuggested:]
  +[BBContact contactWithCustomHandle:customHandleType:serviceName:customDisplayName:cnContactIdentifier:cnContactFullname:cnContactIdentifierSuggested:]
  +[BBContact contactWithHandle:handleType:serviceName:displayName:customIdentifier:cnContactIdentifier:cnContactFullname:cnContactIdentifierSuggested:]
  +[BBContact contactWithHandle:handleType:serviceName:displayName:displayNameSuggested:customIdentifier:cnContactIdentifier:cnContactFullname:cnContactIdentifierSuggested:]

  // instance methods
  -[BBContact displayName]
  -[BBContact customIdentifier]
  -[BBContact serviceName]
  -[BBContact initWithCoder:]
  -[BBContact .cxx_destruct]
  -[BBContact isDisplayNameSuggested]
  -[BBContact cnContactFullname]
  -[BBContact isCNContactIdentifierSuggested]
  -[BBContact cnContactIdentifier]
  -[BBContact isEqual:]
  -[BBContact handle]
  -[BBContact handleType]
  -[BBContact copyWithZone:]
  -[BBContact encodeWithCoder:]
  -[BBContact _initWithHandle:handleType:serviceName:displayName:displayNameSuggested:customIdentifier:cnContactIdentifier:cnContactFullname:cnContactIdentifierSuggested:]
  -[BBContact customHandle]
  -[BBContact customHandleType]
  -[BBContact customDisplayName]


BBServerConduit : NSObject <BBServerConduitClientInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BBServerConduit serverInterface]
  +[BBServerConduit clientInterface]
  +[BBServerConduit sharedConduit]

  // instance methods
  -[BBServerConduit weeAppWithBundleID:setHiddenFromUser:]
  -[BBServerConduit .cxx_destruct]
  -[BBServerConduit init]
  -[BBServerConduit sendMessageToDataProviderSectionID:name:userInfo:]
  -[BBServerConduit dealloc]
  -[BBServerConduit invalidate]
  -[BBServerConduit weeAppWithBundleID:getHiddenFromUser:]


BBAppearance : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *title
 @property  BBImage *image
 @property  long long style

  // class methods
  +[BBAppearance supportsSecureCoding]
  +[BBAppearance appearanceWithTitle:]

  // instance methods
  -[BBAppearance initWithCoder:]
  -[BBAppearance setTitle:]
  -[BBAppearance image]
  -[BBAppearance .cxx_destruct]
  -[BBAppearance setStyle:]
  -[BBAppearance isEqual:]
  -[BBAppearance replacementObjectForCoder:]
  -[BBAppearance title]
  -[BBAppearance setImage:]
  -[BBAppearance awakeAfterUsingCoder:]
  -[BBAppearance copyWithZone:]
  -[BBAppearance style]
  -[BBAppearance encodeWithCoder:]


BBMuteAssertion : NSObject <NSCopying, NSSecureCoding>
  // class methods
  +[BBMuteAssertion supportsSecureCoding]

  // instance methods
  -[BBMuteAssertion initWithCoder:]
  -[BBMuteAssertion _init]
  -[BBMuteAssertion copyWithZone:]
  -[BBMuteAssertion encodeWithCoder:]
  -[BBMuteAssertion isActiveForThreadIdentifier:]
  -[BBMuteAssertion getNextExpirationDate:wasPurged:]


BBSectionMuteAssertion : BBMuteAssertion
 @property  NSDate *expirationDate

  // class methods
  +[BBSectionMuteAssertion supportsSecureCoding]
  +[BBSectionMuteAssertion sectionMuteAssertionUntilDate:]

  // instance methods
  -[BBSectionMuteAssertion initWithCoder:]
  -[BBSectionMuteAssertion .cxx_destruct]
  -[BBSectionMuteAssertion isEqual:]
  -[BBSectionMuteAssertion copyWithZone:]
  -[BBSectionMuteAssertion expirationDate]
  -[BBSectionMuteAssertion encodeWithCoder:]
  -[BBSectionMuteAssertion isActiveForThreadIdentifier:]
  -[BBSectionMuteAssertion getNextExpirationDate:wasPurged:]
  -[BBSectionMuteAssertion _initWithExpirationDate:]


BBThreadsMuteAssertion : BBMuteAssertion
 @property  NSSet *threadIDs
 @property  NSDictionary *expirationDateByThreadID

  // class methods
  +[BBThreadsMuteAssertion supportsSecureCoding]
  +[BBThreadsMuteAssertion threadsMuteAssertion]

  // instance methods
  -[BBThreadsMuteAssertion initWithCoder:]
  -[BBThreadsMuteAssertion .cxx_destruct]
  -[BBThreadsMuteAssertion isEqual:]
  -[BBThreadsMuteAssertion _init]
  -[BBThreadsMuteAssertion copyWithZone:]
  -[BBThreadsMuteAssertion encodeWithCoder:]
  -[BBThreadsMuteAssertion setMutedUntilDate:forThreadIdentifier:]
  -[BBThreadsMuteAssertion setUnmutedForThreadIdentifier:]
  -[BBThreadsMuteAssertion isActiveForThreadIdentifier:]
  -[BBThreadsMuteAssertion getNextExpirationDate:wasPurged:]
  -[BBThreadsMuteAssertion expirationDateByThreadID]
  -[BBThreadsMuteAssertion threadIDs]


BBMuteExpirationManager : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableDictionary *timersBySectionID
 @property  <BBMuteExpirationManagerDelegate> *delegate

  // instance methods
  -[BBMuteExpirationManager cleanAndWatchExpirationsForSectionInfo:]
  -[BBMuteExpirationManager .cxx_destruct]
  -[BBMuteExpirationManager setDelegate:]
  -[BBMuteExpirationManager setQueue:]
  -[BBMuteExpirationManager initWithQueue:]
  -[BBMuteExpirationManager stopWatchingExpirationsForSectionID:]
  -[BBMuteExpirationManager scheduledExpirationDateForSectionID:]
  -[BBMuteExpirationManager setTimersBySectionID:]
  -[BBMuteExpirationManager delegate]
  -[BBMuteExpirationManager timersBySectionID]
  -[BBMuteExpirationManager queue]
  -[BBMuteExpirationManager dealloc]
  -[BBMuteExpirationManager _cancelTimerForSectionID:]
  -[BBMuteExpirationManager _queue_triggerDidFireForExpiryTimer:]


BBDataProviderProxy : NSObject <BBRemoteDataProviderClientProxy>
 @property  BBDataProviderIdentity *identity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BBDataProviderProxy setServerProxy:]
  -[BBDataProviderProxy noteSectionInfoDidChange:]
  -[BBDataProviderProxy withdrawBulletinsWithRecordID:]
  -[BBDataProviderProxy deliverMessageWithName:userInfo:]
  -[BBDataProviderProxy clearedInfoForBulletins:lastClearedInfo:completion:]
  -[BBDataProviderProxy invalidateBulletins]
  -[BBDataProviderProxy addBulletin:forDestinations:]
  -[BBDataProviderProxy withdrawBulletinWithPublisherBulletinID:]
  -[BBDataProviderProxy updateIdentity:]
  -[BBDataProviderProxy modifyBulletin:]
  -[BBDataProviderProxy dataProviderDidLoad]
  -[BBDataProviderProxy deliverBulletinActionResponse:withCompletion:]
  -[BBDataProviderProxy .cxx_destruct]
  -[BBDataProviderProxy addBulletin:interrupt:]
  -[BBDataProviderProxy clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:completion:]
  -[BBDataProviderProxy updateClearedInfoWithHandler:]
  -[BBDataProviderProxy updateSectionInfoWithHandler:]
  -[BBDataProviderProxy reloadSectionParameters]
  -[BBDataProviderProxy setIdentity:]
  -[BBDataProviderProxy initWithDataProvider:clientReplyQueue:]
  -[BBDataProviderProxy identity]
  -[BBDataProviderProxy reloadDefaultSectionInfo]
  -[BBDataProviderProxy updateSectionInfoWithHandler:completion:]
  -[BBDataProviderProxy dealloc]
  -[BBDataProviderProxy _makeServerRequest:]
  -[BBDataProviderProxy bulletinsWithRequestParameters:lastCleared:completion:]
  -[BBDataProviderProxy clearedInfoForClearingAllBulletinsWithLastClearedInfo:completion:]
  -[BBDataProviderProxy _makeClientRequest:]


BBRemoteDataProvider : BBDataProvider <BBRemoteDataProviderServerProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BBRemoteDataProvider noteSectionInfoDidChange:]
  -[BBRemoteDataProvider withdrawBulletinsWithRecordID:]
  -[BBRemoteDataProvider deliverMessageWithName:userInfo:]
  -[BBRemoteDataProvider sectionIdentifier]
  -[BBRemoteDataProvider clearedInfoForBulletins:lastClearedInfo:completion:]
  -[BBRemoteDataProvider invalidateBulletins]
  -[BBRemoteDataProvider checkResponds:forSelector:]
  -[BBRemoteDataProvider addBulletin:forDestinations:]
  -[BBRemoteDataProvider withdrawBulletinWithPublisherBulletinID:]
  -[BBRemoteDataProvider updateSectionInfoWithSectionInfo:handler:completion:]
  -[BBRemoteDataProvider modifyBulletin:]
  -[BBRemoteDataProvider reloadIdentityWithCompletion:]
  -[BBRemoteDataProvider dataProviderDidLoad]
  -[BBRemoteDataProvider updateClearedInfoWithClearedInfo:handler:completion:]
  -[BBRemoteDataProvider debugDescriptionWithChildren:]
  -[BBRemoteDataProvider .cxx_destruct]
  -[BBRemoteDataProvider reloadSectionParameters:]
  -[BBRemoteDataProvider canPerformMigration]
  -[BBRemoteDataProvider clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:completion:]
  -[BBRemoteDataProvider getClearedInfoWithCompletion:]
  -[BBRemoteDataProvider calloutToServer:]
  -[BBRemoteDataProvider setServerIsReady:]
  -[BBRemoteDataProvider reloadDefaultSectionInfo:]
  -[BBRemoteDataProvider _sendClientRequest:]
  -[BBRemoteDataProvider getSectionInfoWithCompletion:]
  -[BBRemoteDataProvider setClearedInfo:]
  -[BBRemoteDataProvider initWithSectionID:delegate:]
  -[BBRemoteDataProvider _logDoesNotRespond:]
  -[BBRemoteDataProvider dealloc]
  -[BBRemoteDataProvider bulletinsWithRequestParameters:lastCleared:completion:]
  -[BBRemoteDataProvider clearedInfoForClearingAllBulletinsWithLastClearedInfo:completion:]
  -[BBRemoteDataProvider migrateSectionInfo:oldSectionInfo:]
  -[BBRemoteDataProvider setClientProxy:completion:]
  -[BBRemoteDataProvider setSectionInfo:]
  -[BBRemoteDataProvider deliverResponse:forBulletinRequest:withCompletion:]
  -[BBRemoteDataProvider startWatchdog]


BBDataProviderManager : NSObject <BBDataProviderStoreDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BBDataProviderManager initWithDelegate:queue:]
  -[BBDataProviderManager _configureDataProvider:performMigration:]
  -[BBDataProviderManager loadAllDataProvidersAndPerformMigration:]
  -[BBDataProviderManager debugDescriptionWithChildren:]
  -[BBDataProviderManager dataProviderStore:didAddDataProvider:performMigration:completion:]
  -[BBDataProviderManager .cxx_destruct]
  -[BBDataProviderManager _configureSectionInfo:forDataProvider:]
  -[BBDataProviderManager dataProviderForSectionID:]
  -[BBDataProviderManager performBlockOnDataProviders:]
  -[BBDataProviderManager reloadIdentityForSectionID:withCompletion:]
  -[BBDataProviderManager parentSectionDataProviderFactoryForSectionID:]
  -[BBDataProviderManager dataProviderStore:didRemoveDataProvider:]
  -[BBDataProviderManager _queue_dataProvidersForUniversalSectionID:]
  -[BBDataProviderManager dealloc]
  -[BBDataProviderManager universalSectionIDForSectionID:]
  -[BBDataProviderManager dataProviderStore:didAddParentSectionFactory:]
  -[BBDataProviderManager noteSettingsChanged:forSectionID:]
  -[BBDataProviderManager localSectionIdentifiersFromDismissalSectionIdentifer:]
  -[BBDataProviderManager _queue_getSectionInfoForSectionID:]
  -[BBDataProviderManager rebuildSectionInfo:forSectionID:]


BBBulletinUpdate : NSObject <NSCopying, NSSecureCoding>
 @property  BBBulletin *bulletin
 @property  unsigned long feeds

  // class methods
  +[BBBulletinUpdate supportsSecureCoding]

  // instance methods
  -[BBBulletinUpdate feeds]
  -[BBBulletinUpdate initWithCoder:]
  -[BBBulletinUpdate .cxx_destruct]
  -[BBBulletinUpdate isEqual:]
  -[BBBulletinUpdate bulletin]
  -[BBBulletinUpdate typeDescription]
  -[BBBulletinUpdate initWithBulletin:feeds:]
  -[BBBulletinUpdate copyWithZone:]
  -[BBBulletinUpdate encodeWithCoder:]


BBBulletinAddUpdate : BBBulletinUpdate
 @property  BOOL shouldPlayLightsAndSirens

  // class methods
  +[BBBulletinAddUpdate supportsSecureCoding]
  +[BBBulletinAddUpdate updateWithBulletin:feeds:shouldPlayLightsAndSirens:]

  // instance methods
  -[BBBulletinAddUpdate initWithCoder:]
  -[BBBulletinAddUpdate isEqual:]
  -[BBBulletinAddUpdate initWithBulletin:feeds:shouldPlayLightsAndSirens:]
  -[BBBulletinAddUpdate typeDescription]
  -[BBBulletinAddUpdate shouldPlayLightsAndSirens]
  -[BBBulletinAddUpdate encodeWithCoder:]


BBBulletinModifyUpdate : BBBulletinUpdate
  // class methods
  +[BBBulletinModifyUpdate updateWithBulletin:feeds:]

  // instance methods
  -[BBBulletinModifyUpdate typeDescription]


BBBulletinRemoveUpdate : BBBulletinUpdate
 @property  BOOL shouldSync

  // class methods
  +[BBBulletinRemoveUpdate supportsSecureCoding]
  +[BBBulletinRemoveUpdate updateWithBulletin:feeds:shouldSync:]

  // instance methods
  -[BBBulletinRemoveUpdate initWithBulletin:feeds:shouldSync:]
  -[BBBulletinRemoveUpdate initWithCoder:]
  -[BBBulletinRemoveUpdate isEqual:]
  -[BBBulletinRemoveUpdate shouldSync]
  -[BBBulletinRemoveUpdate typeDescription]
  -[BBBulletinRemoveUpdate encodeWithCoder:]


BBActionResponse : NSObject <NSSecureCoding>
 @property  long long actionType
 @property  unsigned long actionActivationMode
 @property  long long actionBehavior
 @property  BOOL didOpenApplication
 @property  NSString *actionID
 @property  NSURL *actionLaunchURL
 @property  NSString *bulletinButtonID
 @property  NSString *bulletinRecordID
 @property  NSString *bulletinPublisherID
 @property  NSDictionary *bulletinContext
 @property  NSDictionary *context
 @property  NSString *originID
 @property  BSServiceConnectionEndpoint *endpoint

  // class methods
  +[BBActionResponse supportsSecureCoding]
  +[BBActionResponse actionResponseForResponse:bulletinRequest:]

  // instance methods
  -[BBActionResponse setActionType:]
  -[BBActionResponse initWithCoder:]
  -[BBActionResponse .cxx_destruct]
  -[BBActionResponse actionType]
  -[BBActionResponse setEndpoint:]
  -[BBActionResponse setContext:]
  -[BBActionResponse endpoint]
  -[BBActionResponse actionID]
  -[BBActionResponse originID]
  -[BBActionResponse encodeWithCoder:]
  -[BBActionResponse context]
  -[BBActionResponse setActionActivationMode:]
  -[BBActionResponse setActionBehavior:]
  -[BBActionResponse setActionID:]
  -[BBActionResponse setActionLaunchURL:]
  -[BBActionResponse setOriginID:]
  -[BBActionResponse setDidOpenApplication:]
  -[BBActionResponse actionActivationMode]
  -[BBActionResponse actionBehavior]
  -[BBActionResponse actionLaunchURL]
  -[BBActionResponse didOpenApplication]
  -[BBActionResponse setBulletinContext:]
  -[BBActionResponse setBulletinButtonID:]
  -[BBActionResponse setBulletinRecordID:]
  -[BBActionResponse setBulletinPublisherID:]
  -[BBActionResponse bulletinButtonID]
  -[BBActionResponse bulletinRecordID]
  -[BBActionResponse bulletinPublisherID]
  -[BBActionResponse bulletinContext]


BBSyncDelayedDismissal : NSObject
 @property  BBBulletin *bulletin
 @property  unsigned long feeds

  // instance methods
  -[BBSyncDelayedDismissal feeds]
  -[BBSyncDelayedDismissal setBulletin:]
  -[BBSyncDelayedDismissal .cxx_destruct]
  -[BBSyncDelayedDismissal bulletin]
  -[BBSyncDelayedDismissal setFeeds:]


BBSyncService : NSObject <IDSServiceDelegate>
 @property  unsigned long pairedDeviceCount
 @property  <BBSyncServiceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BBSyncService service:activeAccountsChanged:]
  -[BBSyncService service:account:incomingMessage:fromID:]
  -[BBSyncService _syncLocalDevices]
  -[BBSyncService .cxx_destruct]
  -[BBSyncService dismissalSectionIdentifiersForIncomingMessage:]
  -[BBSyncService sendPendingSyncedRemovals]
  -[BBSyncService _syncAccount]
  -[BBSyncService setDelegate:]
  -[BBSyncService _hasDestination]
  -[BBSyncService _reallyEnqueueBulletin:feeds:]
  -[BBSyncService initWithQueue:]
  -[BBSyncService sendSyncedRemovalForBulletin:feeds:]
  -[BBSyncService _syncHasDefaultPairedDevice]
  -[BBSyncService _dismissalDictionaryForBulletin:]
  -[BBSyncService delegate]
  -[BBSyncService pairedDeviceCount]
  -[BBSyncService _sendSyncMessage:]
  -[BBSyncService enqueueSyncedRemovalForBulletin:feeds:]


BBObserverServerProxy : NSObject <BBObserverClientInterface, BBObserverServerInterface>
 @property  BBObserver *observer
 @property  NSXPCConnection *connection
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_queue> *calloutQueue

  // class methods
  +[BBObserverServerProxy xpcInterface]

  // instance methods
  -[BBObserverServerProxy getSectionInfoForActiveSectionsWithHandler:]
  -[BBObserverServerProxy clearSection:]
  -[BBObserverServerProxy getBulletinsForPublisherMatchIDs:sectionID:withHandler:]
  -[BBObserverServerProxy getBulletinsWithHandler:]
  -[BBObserverServerProxy updateBulletin:withHandler:]
  -[BBObserverServerProxy getSectionInfoForSectionIDs:withHandler:]
  -[BBObserverServerProxy requestNoticesBulletinsForAllSections]
  -[BBObserverServerProxy updateSectionParameters:forSectionID:]
  -[BBObserverServerProxy calloutQueue]
  -[BBObserverServerProxy getSectionParametersForSectionID:withHandler:]
  -[BBObserverServerProxy getObserverDebugInfo:]
  -[BBObserverServerProxy removeSection:]
  -[BBObserverServerProxy getSectionInfoWithHandler:]
  -[BBObserverServerProxy isValid]
  -[BBObserverServerProxy removeBulletins:inSection:fromFeeds:]
  -[BBObserverServerProxy setCalloutQueue:]
  -[BBObserverServerProxy handleResponse:withCompletion:]
  -[BBObserverServerProxy updateGlobalSettings:]
  -[BBObserverServerProxy finishedWithBulletinID:transactionID:]
  -[BBObserverServerProxy getUniversalSectionIDForSectionID:withHandler:]
  -[BBObserverServerProxy .cxx_destruct]
  -[BBObserverServerProxy noteBulletinsLoadedForSectionID:]
  -[BBObserverServerProxy setObserverFeed:asLightsAndSirensGateway:priority:]
  -[BBObserverServerProxy clearBulletinIDs:inSection:]
  -[BBObserverServerProxy getPublisherMatchIDsOfBulletinsPublishedAfterDate:withHandler:]
  -[BBObserverServerProxy initWithObserver:connection:queue:calloutQueue:]
  -[BBObserverServerProxy requestNoticesBulletinsForSectionID:]
  -[BBObserverServerProxy noteServerReceivedResponseForBulletin:]
  -[BBObserverServerProxy updateSectionInfo:]
  -[BBObserverServerProxy clearBulletinsFromDate:toDate:inSections:]
  -[BBObserverServerProxy setConnection:]
  -[BBObserverServerProxy setQueue:]
  -[BBObserverServerProxy connection]
  -[BBObserverServerProxy established]
  -[BBObserverServerProxy observer]
  -[BBObserverServerProxy setObserverFeed:attachToLightsAndSirensGateway:]
  -[BBObserverServerProxy queue]
  -[BBObserverServerProxy setObserver:]
  -[BBObserverServerProxy dealloc]
  -[BBObserverServerProxy invalidate]


BBObserverClientProxy : NSObject <BBObserverServerInterface, BBObserverClientInterface>
 @property  BBServer *server
 @property  NSXPCConnection *connection
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_queue> *calloutQueue
 @property  NSMutableDictionary *bulletinIDsToTransaction
 @property  NSString *clientBundleIdentifier

  // class methods
  +[BBObserverClientProxy xpcInterface]

  // instance methods
  -[BBObserverClientProxy setServer:]
  -[BBObserverClientProxy getSectionInfoForActiveSectionsWithHandler:]
  -[BBObserverClientProxy clearSection:]
  -[BBObserverClientProxy getBulletinsForPublisherMatchIDs:sectionID:withHandler:]
  -[BBObserverClientProxy setClientBundleIdentifier:]
  -[BBObserverClientProxy getBulletinsWithHandler:]
  -[BBObserverClientProxy updateBulletin:withHandler:]
  -[BBObserverClientProxy getSectionInfoForSectionIDs:withHandler:]
  -[BBObserverClientProxy requestNoticesBulletinsForAllSections]
  -[BBObserverClientProxy updateSectionParameters:forSectionID:]
  -[BBObserverClientProxy calloutQueue]
  -[BBObserverClientProxy getSectionParametersForSectionID:withHandler:]
  -[BBObserverClientProxy getObserverDebugInfo:]
  -[BBObserverClientProxy removeSection:]
  -[BBObserverClientProxy getSectionInfoWithHandler:]
  -[BBObserverClientProxy removeBulletins:inSection:fromFeeds:]
  -[BBObserverClientProxy setCalloutQueue:]
  -[BBObserverClientProxy handleResponse:withCompletion:]
  -[BBObserverClientProxy updateGlobalSettings:]
  -[BBObserverClientProxy finishedWithBulletinID:transactionID:]
  -[BBObserverClientProxy getUniversalSectionIDForSectionID:withHandler:]
  -[BBObserverClientProxy .cxx_destruct]
  -[BBObserverClientProxy noteBulletinsLoadedForSectionID:]
  -[BBObserverClientProxy setObserverFeed:asLightsAndSirensGateway:priority:]
  -[BBObserverClientProxy initWithServer:connection:calloutQueue:]
  -[BBObserverClientProxy clearBulletinIDs:inSection:]
  -[BBObserverClientProxy getPublisherMatchIDsOfBulletinsPublishedAfterDate:withHandler:]
  -[BBObserverClientProxy requestNoticesBulletinsForSectionID:]
  -[BBObserverClientProxy noteServerReceivedResponseForBulletin:]
  -[BBObserverClientProxy updateSectionInfo:]
  -[BBObserverClientProxy clearBulletinsFromDate:toDate:inSections:]
  -[BBObserverClientProxy setConnection:]
  -[BBObserverClientProxy transactionBulletinIDs]
  -[BBObserverClientProxy setQueue:]
  -[BBObserverClientProxy connection]
  -[BBObserverClientProxy server]
  -[BBObserverClientProxy setBulletinIDsToTransaction:]
  -[BBObserverClientProxy setObserverFeed:attachToLightsAndSirensGateway:]
  -[BBObserverClientProxy clientBundleIdentifier]
  -[BBObserverClientProxy queue]
  -[BBObserverClientProxy bulletinIDsToTransaction]
  -[BBObserverClientProxy dealloc]
  -[BBObserverClientProxy initWithServer:connection:queue:calloutQueue:]
  -[BBObserverClientProxy currentTransactionForBulletinID:]
  -[BBObserverClientProxy incrementedTransactionIDForBulletinID:]
  -[BBObserverClientProxy removeTransaction:]


BBBulletinTransaction : NSObject
 @property  NSString *bulletinID
 @property  unsigned long transactionID

  // class methods
  +[BBBulletinTransaction transactionWithBulletinID:]

  // instance methods
  -[BBBulletinTransaction transactionID]
  -[BBBulletinTransaction .cxx_destruct]
  -[BBBulletinTransaction bulletinID]
  -[BBBulletinTransaction initWithBulletinID:]
  -[BBBulletinTransaction incrementTransactionID]


(BBObjectCache)
	// class methods
	+[(BBObjectCache) bb_objectCache]

	// instance methods
	-[(BBObjectCache) bb_objectCache]

TLAlert(BulletinBoard)
	// class methods
	+[TLAlert(BulletinBoard) bb_toneLibraryAlertTypeForSectionID:]

TLVibrationManager(BulletinBoard)
	// instance methods
	-[TLVibrationManager(BulletinBoard) bb_isVibrationEnabledForAlertConfiguration:]
	-[TLVibrationManager(BulletinBoard) bb_isVibrationEnabledForSectionInfo:]
	-[TLVibrationManager(BulletinBoard) bb_isVibrationEnabledForAlertType:topic:]
	-[TLVibrationManager(BulletinBoard) bb_vibrationIdentifierForAlertConfiguration:]

TLToneManager(BulletinBoard)
	// instance methods
	-[TLToneManager(BulletinBoard) bb_isToneEnabledForAlertConfiguration:]
	-[TLToneManager(BulletinBoard) bb_isToneEnabledForSectionInfo:]
	-[TLToneManager(BulletinBoard) bb_isToneEnabledForAlertType:topic:]
	-[TLToneManager(BulletinBoard) bb_toneIdentifierForAlertConfiguration:]

01 00 0600 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFPreferences 
01 00 0600 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFSiriAnnouncementRequestCapabilityManager 
01 00 0500 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 0700 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSAbstractDefaultDomain 
01 00 0700 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSBlockSentinel 
01 00 0700 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDescriptionBuilder 
01 00 0900 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSServiceConnectionEndpoint 
01 00 0900 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 0900 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 0a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0d00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0e00 /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection: PCPersistentTimer 
01 00 0f00 /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary: TLAlert 
01 00 0f00 /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary: TLAlertConfiguration 
01 00 0f00 /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary: TLToneManager 
01 00 0f00 /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary: TLVibrationManager 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: _LSOpenConfiguration 
