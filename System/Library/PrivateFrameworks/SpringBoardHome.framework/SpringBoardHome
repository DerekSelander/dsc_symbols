|| __DATA.__data _SBHLibrarySectionIdentifierNone
|| __DATA.__data _SBHRippleDefaultTouchHeight
|| __DATA.__data _SBHRippleHeight
|| __DATA.__data _kSBHIconAppStoreURLUserInfoKey
|| __DATA.__objc_data _OBJC_CLASS_$_SBClusteredPlaceholderIcon
|| __DATA.__objc_data _OBJC_CLASS_$_SBCrossfadeIconZoomAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBDebugIcon
|| __DATA.__objc_data _OBJC_CLASS_$_SBDefaultIconDragPreviewWindow
|| __DATA.__objc_data _OBJC_CLASS_$_SBFloatingDockIconListView
|| __DATA.__objc_data _OBJC_CLASS_$_SBFloatingDockPlatterView
|| __DATA.__objc_data _OBJC_CLASS_$_SBFolderPresentingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHAddWidgetButton
|| __DATA.__objc_data _OBJC_CLASS_$_SBHAddWidgetDetailSheetTitleView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHAddWidgetDetailsSheetPageViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHAddWidgetSheetAppCollectionViewCellConfigurator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHAddWidgetSheetGalleryCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_SBHAddWidgetSheetViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHAdjustableRootIconListLayoutProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBHBookmark
|| __DATA.__objc_data _OBJC_CLASS_$_SBHCustomIconListLayoutProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBHDebugIconViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHDoubleSidedIconImageCrossfadeView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFakeApplicationPlaceholder
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFeatherBlurNavigationBar
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFileWidgetExtensionProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFloatingDockStyleConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFocusGuideView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFocusMode
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFocusProxyView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconContentContainerTransformView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconDragAutoScrollAssistant
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconImageTransformView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconLibraryPredicateQueryEngine
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconRelativePath
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconRootTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconStateBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconTransformView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconViewContextMenuWrapperViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryMapProviderDefaultSource
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryStackView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryDismissalView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryFadeAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryIconViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryIndicatorIconDropInteractionDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryOverscrollViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryPodCategoryFolderController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryPodCategoryFolderView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryPodCrossfadeView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryPodIconZoomAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibrarySearchSimplifiedBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryZoomAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHMappedIconListLayoutProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBHMinusPageStepper
|| __DATA.__objc_data _OBJC_CLASS_$_SBHModalLibraryPresenter
|| __DATA.__objc_data _OBJC_CLASS_$_SBHPadAddSheetViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHPageManagementCellDragPreview
|| __DATA.__objc_data _OBJC_CLASS_$_SBHPageManagementCellDragPreviewDelayCleanupAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_SBHPageManagementCellViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHPageManagementCheckbox
|| __DATA.__objc_data _OBJC_CLASS_$_SBHPageManagementIcon
|| __DATA.__objc_data _OBJC_CLASS_$_SBHPageManagementIconViewScalingAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_SBHPageManagementListTapGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_SBHPeopleWidgetPersonDetailFadeAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHPeopleWidgetPersonDetailInteraction
|| __DATA.__objc_data _OBJC_CLASS_$_SBHPeopleWidgetPersonDetailInteractionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBHPeopleWidgetPersonDetailZoomAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHPortaledShadowedWidgetView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHRippleSimulation
|| __DATA.__objc_data _OBJC_CLASS_$_SBHScrollableConfiguringIconViewInteraction
|| __DATA.__objc_data _OBJC_CLASS_$_SBHShadowedWidgetView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHSidebarWidgetBootstrappingAdvisor
|| __DATA.__objc_data _OBJC_CLASS_$_SBHSimpleApplicationDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_SBHStackConfigurationApertureAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHStackConfigurationApertureView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHStackConfigurationBackgroundDimmingView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHStackConfigurationBackgroundViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHStackConfigurationFadeAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHStackConfigurationIconListView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHStackConfigurationViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHTestAppIconDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_SBHTestFakeWidgetIconDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_SBHTestWidgetIconDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_SBHTestWidgetStackIconDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_SBHTrialClientManager
|| __DATA.__objc_data _OBJC_CLASS_$_SBHViewControllerTransitionAnimatorAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetAddSheetAnimationController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetAddSheetTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetConfigurationFadeAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetConfigurationFlipAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetConfigurationTransformView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetInsertionRippleIconAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetSearchBarBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetSearchController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetWrapperBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetWrapperViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHintInteractor
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconAddAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconBetaLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconBlockedForScreenTimeExpirationLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconCloudLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconContinuityAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconDotLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconDraggingEditContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconFocusEffectPlatterView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconForceTouchAppInfoProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconLegibilityLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListLayoutBlockObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListRotationIconViewProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewAppDragContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewDominoAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewDominoPivotAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewDraggingDataPolicyHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewIconLocationTransitionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewIconSizeChangeAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewIconVisibilityAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewMultiStageAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconModelFolderCreationAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconModelMemoryStore
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconModelReadOnlyMemoryStore
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconPreviousLocationInfo
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconPreviousLocationTracker
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconRecentlyUpdatedLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconRotationContainer
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconSimpleLabelView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconStateFolderPath
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconSuggestionLabelView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconViewDroppingAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconWidgetIntroductionPopoverMaskView_Horizontal
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconWidgetIntroductionPopoverMaskView_Vertical
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconWidgetIntroductionView
|| __DATA.__objc_data _OBJC_CLASS_$_SBModalWidgetIntroductionBackgroundDescriptionView
|| __DATA.__objc_data _OBJC_CLASS_$_SBModalWidgetIntroductionHomeScreenPreview
|| __DATA.__objc_data _OBJC_CLASS_$_SBModalWidgetIntroductionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBPinchInteractionProgress
|| __DATA.__objc_data _OBJC_CLASS_$_SBRootFolderDockAnimationViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBRotatedIconListModel
|| __DATA.__objc_data _OBJC_CLASS_$_SBWorkspaceInteractionContext
|| __DATA.__objc_data _OBJC_CLASS_$__SBFloatingDockPlatterMetrics
|| __DATA.__objc_data _OBJC_CLASS_$__SBFolderControllerPageViewControllerAppearStateOverrideAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__SBHLibraryCategoryStackViewBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$__SBHLibraryPodCategoryIconListView
|| __DATA.__objc_data _OBJC_CLASS_$__SBHShadowView
|| __DATA.__objc_data _OBJC_CLASS_$__SBHStackConfigurationIconView
|| __DATA.__objc_data _OBJC_CLASS_$__SBIconListRecordedObserverCallback
|| __DATA.__objc_data _OBJC_CLASS_$__SBIconListViewDataDraggingContext
|| __DATA.__objc_data _OBJC_CLASS_$__SBIconProgressPausedTransition
|| __DATA.__objc_data _OBJC_CLASS_$__SBRootFolderDockAnimationViewControllerWindow
|| __DATA.__objc_data _OBJC_CLASS_$__SBRootFolderViewElementBorrowedAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBClusteredPlaceholderIcon
|| __DATA.__objc_data _OBJC_METACLASS_$_SBCrossfadeIconZoomAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBDebugIcon
|| __DATA.__objc_data _OBJC_METACLASS_$_SBDefaultIconDragPreviewWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFloatingDockIconListView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFloatingDockPlatterView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFolderPresentingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHAddWidgetButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHAddWidgetDetailSheetTitleView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHAddWidgetDetailsSheetPageViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHAddWidgetSheetAppCollectionViewCellConfigurator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHAddWidgetSheetGalleryCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHAddWidgetSheetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHAdjustableRootIconListLayoutProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHBookmark
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHCustomIconListLayoutProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHDebugIconViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHDoubleSidedIconImageCrossfadeView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFakeApplicationPlaceholder
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFeatherBlurNavigationBar
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFileWidgetExtensionProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFloatingDockStyleConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFocusGuideView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFocusMode
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFocusProxyView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconContentContainerTransformView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconDragAutoScrollAssistant
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconImageTransformView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconLibraryPredicateQueryEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconRelativePath
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconRootTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconStateBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconTransformView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconViewContextMenuWrapperViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryMapProviderDefaultSource
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryStackView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryDismissalView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryFadeAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryIconViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryIndicatorIconDropInteractionDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryOverscrollViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryPodCategoryFolderController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryPodCategoryFolderView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryPodCrossfadeView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryPodIconZoomAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibrarySearchSimplifiedBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryZoomAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHMappedIconListLayoutProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHMinusPageStepper
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHModalLibraryPresenter
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHPadAddSheetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHPageManagementCellDragPreview
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHPageManagementCellDragPreviewDelayCleanupAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHPageManagementCellViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHPageManagementCheckbox
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHPageManagementIcon
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHPageManagementIconViewScalingAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHPageManagementListTapGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHPeopleWidgetPersonDetailFadeAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHPeopleWidgetPersonDetailInteraction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHPeopleWidgetPersonDetailInteractionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHPeopleWidgetPersonDetailZoomAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHPortaledShadowedWidgetView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHRippleSimulation
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHScrollableConfiguringIconViewInteraction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHShadowedWidgetView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHSidebarWidgetBootstrappingAdvisor
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHSimpleApplicationDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHStackConfigurationApertureAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHStackConfigurationApertureView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHStackConfigurationBackgroundDimmingView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHStackConfigurationBackgroundViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHStackConfigurationFadeAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHStackConfigurationIconListView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHStackConfigurationViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHTestAppIconDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHTestFakeWidgetIconDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHTestWidgetIconDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHTestWidgetStackIconDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHTrialClientManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHViewControllerTransitionAnimatorAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetAddSheetAnimationController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetAddSheetTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetConfigurationFadeAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetConfigurationFlipAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetConfigurationTransformView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetInsertionRippleIconAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetSearchBarBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetSearchController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetWrapperBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetWrapperViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHintInteractor
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconAddAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconBetaLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconBlockedForScreenTimeExpirationLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconCloudLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconContinuityAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconDotLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconDraggingEditContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconFocusEffectPlatterView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconForceTouchAppInfoProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconLegibilityLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListLayoutBlockObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListRotationIconViewProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewAppDragContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewDominoAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewDominoPivotAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewDraggingDataPolicyHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewIconLocationTransitionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewIconSizeChangeAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewIconVisibilityAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewMultiStageAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconModelFolderCreationAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconModelMemoryStore
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconModelReadOnlyMemoryStore
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconPreviousLocationInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconPreviousLocationTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconRecentlyUpdatedLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconRotationContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconSimpleLabelView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconStateFolderPath
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconSuggestionLabelView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconViewDroppingAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconWidgetIntroductionPopoverMaskView_Horizontal
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconWidgetIntroductionPopoverMaskView_Vertical
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconWidgetIntroductionView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBModalWidgetIntroductionBackgroundDescriptionView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBModalWidgetIntroductionHomeScreenPreview
|| __DATA.__objc_data _OBJC_METACLASS_$_SBModalWidgetIntroductionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBPinchInteractionProgress
|| __DATA.__objc_data _OBJC_METACLASS_$_SBRootFolderDockAnimationViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBRotatedIconListModel
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWorkspaceInteractionContext
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFloatingDockPlatterMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFolderControllerPageViewControllerAppearStateOverrideAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__SBHLibraryCategoryStackViewBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBHLibraryPodCategoryIconListView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBHShadowView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBHStackConfigurationIconView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBIconListRecordedObserverCallback
|| __DATA.__objc_data _OBJC_METACLASS_$__SBIconListViewDataDraggingContext
|| __DATA.__objc_data _OBJC_METACLASS_$__SBIconProgressPausedTransition
|| __DATA.__objc_data _OBJC_METACLASS_$__SBRootFolderDockAnimationViewControllerWindow
|| __DATA.__objc_data _OBJC_METACLASS_$__SBRootFolderViewElementBorrowedAssertion
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBFloatyFolderBackgroundClipView._backgroundView
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHLibraryCategoryMap._categoryIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHLibraryCategoryMap._generatedDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHLibraryCategoryMap._loadedFromDisk
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHLibraryCategoryMap._localizedCategoryNameByCategoryIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHLibraryCategoryMap._sortedApplicationIdentifiersByCategoryIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHLibraryCategoryMap._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHighlightView._highlight
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBIconListViewCaptureOnlyBackgroundAssertion._invalidationBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBIconProgressStateTransition._fraction
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBIconProgressStateTransition._fromState
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBIconProgressStateTransition._toState
|| __DATA_CONST.__const _SBAppPopoverExtensionPointIdentifier
|| __DATA_CONST.__const _SBAvocadoPopoverExtensionPointIdentifier
|| __DATA_CONST.__const _SBCompactListsCoalesceID
|| __DATA_CONST.__const _SBFilesWidgetTransparencyEntitlementKey
|| __DATA_CONST.__const _SBFolderControllerCurrentPageIndexDidChangeNotification
|| __DATA_CONST.__const _SBFolderControllerDidEndScrollingNotification
|| __DATA_CONST.__const _SBFolderControllerWillBeginScrollingNotification
|| __DATA_CONST.__const _SBFolderViewFocusGroupIdentifier
|| __DATA_CONST.__const _SBHHiddenIconViewUserInfoKey
|| __DATA_CONST.__const _SBHIconManagerEditingStateChangedNotification
|| __DATA_CONST.__const _SBHIconManagerIconDraggingChangedNotification
|| __DATA_CONST.__const _SBHIconManagerIconModelDidChangeNotification
|| __DATA_CONST.__const _SBHIconManagerListLayoutProviderDidChangeNotification
|| __DATA_CONST.__const _SBHIconManagerRootViewControllerDidChangeNotification
|| __DATA_CONST.__const _SBHIconViewContextMenuStateControllerDidDismissAllIconForceTouchControllersNotification
|| __DATA_CONST.__const _SBHLibraryCategoryMapErrorNotificationKey
|| __DATA_CONST.__const _SBHLibraryCategoryMapNotificationKey
|| __DATA_CONST.__const _SBHLibraryCategoryMapProviderCachesWereClearedNotification
|| __DATA_CONST.__const _SBHLibraryCategoryMapProviderCategoryMapRefreshCompletedNotification
|| __DATA_CONST.__const _SBHLibraryCategoryMapSessionIDNotificationKey
|| __DATA_CONST.__const _SBHLibraryPresentationErrorDomain
|| __DATA_CONST.__const _SBHLibrarySearchControllerDidDismissSearchPPTNotification
|| __DATA_CONST.__const _SBHLibrarySearchControllerDidPresentSearchPPTNotification
|| __DATA_CONST.__const _SBHLibrarySearchControllerWillDismissSearchPPTNotification
|| __DATA_CONST.__const _SBHLibrarySearchControllerWillPresentSearchPPTNotification
|| __DATA_CONST.__const _SBHMaterialRecipeNameIconComponentDark
|| __DATA_CONST.__const _SBHMaterialRecipeNameIconComponentLight
|| __DATA_CONST.__const _SBHScrollableContainerDidScrollHiddenIconViewOutsideClippingBoundsNotification
|| __DATA_CONST.__const _SBHStackConfigurationDidDismissNotification
|| __DATA_CONST.__const _SBHStackConfigurationDidPresentNotification
|| __DATA_CONST.__const _SBHStackConfigurationWillDismissNotification
|| __DATA_CONST.__const _SBHStackConfigurationWillPresentNotification
|| __DATA_CONST.__const _SBHWidgetConfigurationDidDismissNotification
|| __DATA_CONST.__const _SBHWidgetConfigurationDidPresentNotification
|| __DATA_CONST.__const _SBHWidgetConfigurationWillDismissNotification
|| __DATA_CONST.__const _SBHWidgetConfigurationWillPresentNotification
|| __DATA_CONST.__const _SBIconIntoFolderCoalesceID
|| __DATA_CONST.__const _SBIconLocationAddWidgetSheet
|| __DATA_CONST.__const _SBIconLocationAppLibrary
|| __DATA_CONST.__const _SBIconLocationAppLibraryCategoryPod
|| __DATA_CONST.__const _SBIconLocationAppLibraryCategoryPodAdditionalItems
|| __DATA_CONST.__const _SBIconLocationAppLibraryCategoryPodExpanded
|| __DATA_CONST.__const _SBIconLocationAppLibraryCategoryPodRecents
|| __DATA_CONST.__const _SBIconLocationAppLibraryCategoryPodSuggestions
|| __DATA_CONST.__const _SBIconLocationAppLibrarySearch
|| __DATA_CONST.__const _SBIconLocationDock
|| __DATA_CONST.__const _SBIconLocationFavoriteTodayView
|| __DATA_CONST.__const _SBIconLocationFloatingDock
|| __DATA_CONST.__const _SBIconLocationFolder
|| __DATA_CONST.__const _SBIconLocationGroupAppLibrary
|| __DATA_CONST.__const _SBIconLocationGroupDock
|| __DATA_CONST.__const _SBIconLocationGroupFloatingDock
|| __DATA_CONST.__const _SBIconLocationGroupIconHierarchy
|| __DATA_CONST.__const _SBIconLocationGroupRoot
|| __DATA_CONST.__const _SBIconLocationGroupTodayView
|| __DATA_CONST.__const _SBIconLocationGroupWidgetConfiguration
|| __DATA_CONST.__const _SBIconLocationNone
|| __DATA_CONST.__const _SBIconLocationRoot
|| __DATA_CONST.__const _SBIconLocationRootWithSidebar
|| __DATA_CONST.__const _SBIconLocationRootWithWidgets
|| __DATA_CONST.__const _SBIconLocationStackConfiguration
|| __DATA_CONST.__const _SBIconLocationTodayView
|| __DATA_CONST.__const _SBIconLocationWidgetConfiguration
|| __DATA_CONST.__const _SBIconModelDidAddIconNotification
|| __DATA_CONST.__const _SBIconModelDidLayoutIconStateNotification
|| __DATA_CONST.__const _SBIconModelDidReloadIconsNotification
|| __DATA_CONST.__const _SBIconModelDidReplaceIconNotification
|| __DATA_CONST.__const _SBIconModelStoreDomain
|| __DATA_CONST.__const _SBIconModelVisibilityDidChangeNotification
|| __DATA_CONST.__const _SBIconModelWillLayoutIconStateNotification
|| __DATA_CONST.__const _SBIconModelWillReloadIconsNotification
|| __DATA_CONST.__const _SBIconModelWillRemoveIconNotification
|| __DATA_CONST.__const _SBIconViewDidAnimateContextMenuNotification
|| __DATA_CONST.__const _SBIconViewDidDismissContextMenuNotification
|| __DATA_CONST.__const _SBIconViewDidPresentContextMenuNotification
|| __DATA_CONST.__const _SBIconViewPresentationNotificationPresentedWidgetBundleIdentifierKey
|| __DATA_CONST.__const _SBIconViewRefreshAccessoryViewNotification
|| __DATA_CONST.__const _SBIconViewWillAnimateContextMenuNotification
|| __DATA_CONST.__const _SBIconViewWillDismissContextMenuNotification
|| __DATA_CONST.__const _SBIconViewWillPresentContextMenuNotification
|| __DATA_CONST.__const _SBIconZoomExpansionAnimationWillBeginNotification
|| __DATA_CONST.__const _SBInsertIconCoalesceID
|| __DATA_CONST.__const _SBLeafIconDataSourceDidChangeNotification
|| __DATA_CONST.__const _SBLeafIconDataSourceDidGenerateImageNotification
|| __DATA_CONST.__const _SBLeafIconDataSourceDidInvalidateNotification
|| __DATA_CONST.__const _SBPopoverExtensionPointName
|| __DATA_CONST.__const _SBResettingIconsCoalesceID
|| __DATA_CONST.__const _SBRestoreOverflowIconsCoalesceID
|| __DATA_CONST.__const _SBSwapIconsCoalesceID
|| __DATA_CONST.__const _SBUninstallIconCoalesceID
|| __DATA_CONST.__const _SBWebBookmarkWasUninstalledNotification
|| __DATA_CONST.__const _SHBLibraryCategoryMapProactiveResponseKey
|| __DATA_CONST.__const _SHBLibraryCategoryMapProactiveSessionIdKey
|| __DATA_CONST.__const _kSBHIconAddToHomeScreenShortcutItemType
|| __DATA_CONST.__const _kSBHIconAddToStackApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconAppStoreShortcutItemType
|| __DATA_CONST.__const _kSBHIconCancelDownloadApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconChangeWidgetSizeGroupApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconChangeWidgetSizeToExtraLargeApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconChangeWidgetSizeToLargeApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconChangeWidgetSizeToMediumApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconChangeWidgetSizeToNewsLargeTallApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconChangeWidgetSizeToSmallApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconConfigureStackApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconConfigureWidgetApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconDebugFeedbackStackApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconHideSiriSuggestionsItemApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconHideStackSuggestionApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconPauseDownloadApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconPrioritizeDownloadApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconRenameFolderApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconResumeDownloadApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconShareApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerDeleteAppApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerHideAppSuggestionApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerHideFolderContentsShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerRearrangeAppsForApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerRemoveAppApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerRemoveWidgetApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerShowAllWindowsForApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconUnreadNotificationsApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHLibraryCategoryMapProviderVersion
|| __DATA_CONST.__const _kSBIconModelIconKey
|| __DATA_CONST.__const _kSBIconModelLeafIconsToHideKey
|| __DATA_CONST.__const _kSBIconModelLeafIconsToShowKey
|| __DATA_CONST.__const _kSBIconStateAllowsExternalSuggestionsKey
|| __DATA_CONST.__const _kSBIconStateAllowsSuggestionsKey
|| __DATA_CONST.__const _kSBIconStateCustomIconElementKey
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeAppPredictions
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeBatteries
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeDateTime
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeFiles
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeKey
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeShortcutsFolder
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeShortcutsSingle
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeSiriSuggestions
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeWidget
|| __DATA_CONST.__const _kSBIconStateDock
|| __DATA_CONST.__const _kSBIconStateFavoriteTodayPageList
|| __DATA_CONST.__const _kSBIconStateFocusModeIdentifiersKey
|| __DATA_CONST.__const _kSBIconStateGridSizeClassIdentifier
|| __DATA_CONST.__const _kSBIconStateHiddenDateKey
|| __DATA_CONST.__const _kSBIconStateIconBundleIdentifier
|| __DATA_CONST.__const _kSBIconStateIconBundleVersion
|| __DATA_CONST.__const _kSBIconStateIconContainerBundleIdentifier
|| __DATA_CONST.__const _kSBIconStateIconDefaultDisplayName
|| __DATA_CONST.__const _kSBIconStateIconDisplayName
|| __DATA_CONST.__const _kSBIconStateIconLastModifiedDate
|| __DATA_CONST.__const _kSBIconStateIconListMetadata
|| __DATA_CONST.__const _kSBIconStateIconListTypeFolder
|| __DATA_CONST.__const _kSBIconStateIconListTypeKey
|| __DATA_CONST.__const _kSBIconStateIconListUniqueIdentifiers
|| __DATA_CONST.__const _kSBIconStateIconLists
|| __DATA_CONST.__const _kSBIconStateIconMatrix
|| __DATA_CONST.__const _kSBIconStateIconTypeApp
|| __DATA_CONST.__const _kSBIconStateIconTypeCustom
|| __DATA_CONST.__const _kSBIconStateIconTypeKey
|| __DATA_CONST.__const _kSBIconStateIconWebClipURL
|| __DATA_CONST.__const _kSBIconStateIgnoredList
|| __DATA_CONST.__const _kSBIconStateLeafIdentifier
|| __DATA_CONST.__const _kSBIconStateMetadataKey
|| __DATA_CONST.__const _kSBIconStateOverflowSlotCountKey
|| __DATA_CONST.__const _kSBIconStateRotatedIconOrderKey
|| __DATA_CONST.__const _kSBIconStateTodayPageList
|| __DATA_CONST.__const _kSBIconStateUniqueIdentifier
|| __DATA_CONST.__const _kSBIconStateUserSelectedCustomIconElementKey
|| __DATA_CONST.__const _kSBIconStateWidgetKindKey
|| __DATA_CONST.__const _kSBIconStateWidgetSuggestionSourceKey
|| __DATA_CONST.__const _kSBIconStateWidgetSuggestionSourceNPlus1
|| __DATA_CONST.__const _kSBIconStateWidgetSuggestionSourceOnboarding
|| __DATA_CONST.__const _kSBIconStateWidgetVersion
|| __DATA_CONST.__const _kSBLeafIconDataSourceDidGenerateImageFormatKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBCalendarIconImageProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBCenterIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBCountedMap
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBDarkeningImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBDockIconListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBDockView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatingDockView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatingDockViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderBackgroundClipView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderScrollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderContainerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderControllerAnimationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderControllerBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderIconImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderTitleTextField
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFramewiseInteractiveTransitionAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBGrabbedPlaceholderIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAddWidgetDetailSheetViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAddWidgetDetailSheetWidgetDescriptionView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAddWidgetSheetAppCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAddWidgetSheetViewControllerBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAppLibrarySettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAppLibraryVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAppPredictionsElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHApplicationDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHApplicationIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHApplicationWidgetCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHBatteriesElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHBookmarkIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCalendarApplicationIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterAcceleratedAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterAppLaunchSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterAppZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHClockApplicationIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHClockApplicationIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHClockHandsImageSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeAcceleratedAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeAppLaunchSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeAppTransitionSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCustomIconElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHDateHeaderViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHDefaultIconListLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHEditingDoneButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHEditingWidgetButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFilesElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFloatyFolderVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderCloseSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderIconVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderOpenSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHHomePullToSearchSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHHomeScreenDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHHomeScreenSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHHomeScreenUsageMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconAccessoryCountedMapImageTuple
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconAccessoryVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconAnimationRootSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconAnimationSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconApplicationShortcutListComposer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconEditingSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconGridPath
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconLabelVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconLibraryAbstractQueryEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconLibraryQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconLibraryQueryContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconLibraryQueryResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconLibrarySpotlightQueryEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconLibraryTableViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconModelDesiredIconStateUnarchiverDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconModelDisableAutosaveAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconShareSheetManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconStateArchiver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconStateUnarchiver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconStateUnarchivingSlugIconSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconTableViewDiffableDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconTableViewHeaderFooterView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconViewContextMenuStateController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconViewNonPoolingImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHInterpolationSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryAdditionalItemsIndicatorIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryAdditionalItemsIndicatorIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoriesFolderDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoriesRootFolder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryFolder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryIconViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryMap
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryMapProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryMapProviderRefreshRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryPodBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryPodIconListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryPodIconView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryIndicatorIconSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryMutableCategoryMap
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodCategoryIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodCloseSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodFadeAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodFolderController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodFolderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodIndicatorIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodOpenSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibrarySearchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryWaveCloseSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryWaveOpenSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryWaveZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLocalizedIndexedCollationStrategy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHMultiplexingManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHMultiplexingViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHMultiplexingWrapperViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHPageManagementCellView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHPeopleWidgetPersonDetailInteractionSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHProxiedApplicationPlaceholder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHRecentsDocumentExtensionProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHRecentsDocumentExtensionWrappingViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHReducedMotionFadeSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHRootFolderSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHRootFolderVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHRootSidebarController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHScaleZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHScrollableIconViewInteraction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHScrollableZoomingIconViewInteraction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSearchBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSearchTextField
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSearchVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSelectedApplicationDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSetDiff
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHShortcutsFolderElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHShortcutsSingleElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSidebarVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSimpleApplication
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSimpleApplicationPolicyMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSiriSuggestionsElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSmartStackElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSpecialAvocadoDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHStackConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHStackConfigurationInteraction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHTableViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHTableViewIconLibrary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHUnlockSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHViewControllerTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHVisualStylingView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidget
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetConfigurationInteraction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetContainerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetContainerViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetIntroductionSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetMetricsProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetStackDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetStackViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHighlightView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHomeScreenButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHomeScreenIconTransitionAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHomeScreenMaterialView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconAnimationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconBadgeView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconDragContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconDragInteraction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconDragManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconFadeAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconGridImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconImageCrossfadeView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconIndexMutableList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelImageParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelImageParametersBuilder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelViewFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLegibilityLabelView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListFlowExtendedLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListFlowLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListGridCellInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListGridLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListGridLayoutConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListModelRepairUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListPageControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewCaptureOnlyBackgroundAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewClusterAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewDefaultAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewDraggingAppPolicyHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewDraggingDestinationDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewIconVisibilityInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewLayoutMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconModelPropertyListFileStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconPageIndicatorImageSetCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconPageIndicatorImageSetResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconProgressView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconScrollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconStateUnarchiveResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconTapGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconViewContextMenuContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconViewCustomImageViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconViewDragInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconWidgetIntroductionPopoverView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBLeafIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBLiveIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBMinusCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBMutableIconLabelImageParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBNestingViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBPercentPassthroughInteractiveTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBPlaceholderIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBReversibleLayerPropertyAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderControllerDefaultTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderControllerTransitionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderDockIconListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderViewPageManagementLayoutManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderWithDock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBScaleIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSearchBackdropView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSearchGesture
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSearchScrollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBTitledHomeScreenButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBViewControllerTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBWidgetIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBXCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBFolderControllerIconImageViewControllerKeepStaticAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBFolderIconImageViewDisableUpdatesAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBFolderPageElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBHIconLibraryPrewarmAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBHIconLibraryTableView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBHLibraryCollectionOfModelThings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBHLibraryFrozenSafeAreaInsetsView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBHLibraryPodIconListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBHLibraryPodIconView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBHRecentsDocumentView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconGridWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconListModelTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconProgressFractionTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconProgressLoadingNoneStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconProgressNoneWaitingStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconProgressStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconProgressTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconProgressWaitingLoadingStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBInnerFolderIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBRootFolderDockOffscreenFractionClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBRootFolderLayoutWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBRootFolderPageTransitionHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBCalendarIconImageProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBCenterIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBCountedMap
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBDarkeningImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBDockIconListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBDockView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatingDockView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatingDockViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderBackgroundClipView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderScrollView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderContainerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderControllerAnimationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderControllerBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderIconImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderTitleTextField
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFramewiseInteractiveTransitionAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBGrabbedPlaceholderIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAddWidgetDetailSheetViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAddWidgetDetailSheetWidgetDescriptionView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAddWidgetSheetAppCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAddWidgetSheetViewControllerBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAppLibrarySettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAppLibraryVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAppPredictionsElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHApplicationDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHApplicationIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHApplicationWidgetCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHBatteriesElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHBookmarkIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCalendarApplicationIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterAcceleratedAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterAppLaunchSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterAppZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHClockApplicationIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHClockApplicationIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHClockHandsImageSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeAcceleratedAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeAppLaunchSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeAppTransitionSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCustomIconElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHDateHeaderViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHDefaultIconListLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHEditingDoneButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHEditingWidgetButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFilesElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFloatyFolderVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderCloseSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderIconVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderOpenSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHHomePullToSearchSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHHomeScreenDomain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHHomeScreenSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHHomeScreenUsageMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconAccessoryCountedMapImageTuple
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconAccessoryVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconAnimationRootSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconAnimationSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconApplicationShortcutListComposer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconEditingSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconGridPath
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconLabelVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconLibraryAbstractQueryEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconLibraryQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconLibraryQueryContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconLibraryQueryResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconLibrarySpotlightQueryEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconLibraryTableViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconModelDesiredIconStateUnarchiverDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconModelDisableAutosaveAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconShareSheetManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconStateArchiver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconStateUnarchiver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconStateUnarchivingSlugIconSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconTableViewDiffableDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconTableViewHeaderFooterView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconViewContextMenuStateController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconViewNonPoolingImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHInterpolationSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryAdditionalItemsIndicatorIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryAdditionalItemsIndicatorIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoriesFolderDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoriesRootFolder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryFolder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryIconViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryMap
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryMapProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryMapProviderRefreshRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryPodBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryPodIconListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryPodIconView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryIndicatorIconSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryMutableCategoryMap
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodCategoryIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodCloseSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodFadeAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodFolderController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodFolderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodIndicatorIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodOpenSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibrarySearchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryWaveCloseSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryWaveOpenSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryWaveZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLocalizedIndexedCollationStrategy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHMultiplexingManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHMultiplexingViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHMultiplexingWrapperViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHPageManagementCellView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHPeopleWidgetPersonDetailInteractionSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHProxiedApplicationPlaceholder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHRecentsDocumentExtensionProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHRecentsDocumentExtensionWrappingViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHReducedMotionFadeSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHRootFolderSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHRootFolderVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHRootSidebarController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHScaleZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHScrollableIconViewInteraction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHScrollableZoomingIconViewInteraction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSearchBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSearchTextField
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSearchVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSelectedApplicationDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSetDiff
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHShortcutsFolderElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHShortcutsSingleElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSidebarVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSimpleApplication
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSimpleApplicationPolicyMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSiriSuggestionsElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSmartStackElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSpecialAvocadoDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHStackConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHStackConfigurationInteraction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHTableViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHTableViewIconLibrary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHUnlockSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHViewControllerTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHVisualStylingView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidget
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetConfigurationInteraction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetContainerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetContainerViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetIntroductionSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetMetricsProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetStackDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetStackViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHighlightView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHomeScreenButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHomeScreenIconTransitionAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHomeScreenMaterialView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconAnimationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconBadgeView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconDragContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconDragInteraction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconDragManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconFadeAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconGridImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconImageCrossfadeView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconIndexMutableList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelImageParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelImageParametersBuilder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelViewFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLegibilityLabelView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListFlowExtendedLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListFlowLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListGridCellInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListGridLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListGridLayoutConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListModelRepairUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListPageControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewCaptureOnlyBackgroundAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewClusterAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewDefaultAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewDraggingAppPolicyHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewDraggingDestinationDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewIconVisibilityInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewLayoutMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconModelPropertyListFileStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconPageIndicatorImageSetCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconPageIndicatorImageSetResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconProgressView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconScrollView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconStateUnarchiveResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconTapGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconViewContextMenuContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconViewCustomImageViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconViewDragInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconWidgetIntroductionPopoverView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBLeafIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBLiveIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBMinusCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBMutableIconLabelImageParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBNestingViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBPercentPassthroughInteractiveTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBPlaceholderIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBReversibleLayerPropertyAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderControllerDefaultTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderControllerTransitionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderDockIconListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderViewPageManagementLayoutManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderWithDock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBScaleIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSearchBackdropView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSearchGesture
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSearchScrollView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBTitledHomeScreenButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBViewControllerTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBWidgetIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBXCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBFolderControllerIconImageViewControllerKeepStaticAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBFolderIconImageViewDisableUpdatesAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBFolderPageElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBHIconLibraryPrewarmAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBHIconLibraryTableView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBHLibraryCollectionOfModelThings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBHLibraryFrozenSafeAreaInsetsView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBHLibraryPodIconListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBHLibraryPodIconView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBHRecentsDocumentView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconGridWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconListModelTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconProgressFractionTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconProgressLoadingNoneStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconProgressNoneWaitingStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconProgressStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconProgressTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconProgressWaitingLoadingStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBInnerFolderIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBRootFolderDockOffscreenFractionClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBRootFolderLayoutWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBRootFolderPageTransitionHandle
|| __TEXT.__const _SBDockIndex
|| __TEXT.__const _SBFavoriteTodayListIndex
|| __TEXT.__const _SBHIconGridSizeClassAreasDefault
|| __TEXT.__const _SBHIconGridSizeClassSizesDefault
|| __TEXT.__const _SBHIconGridSizeDefault
|| __TEXT.__const _SBHIconGridSizeEmpty
|| __TEXT.__const _SBHLibraryIconViewControllerMaximumVisibleCategoryCount
|| __TEXT.__const _SBHSearchTextFieldDefaultCornerRadius
|| __TEXT.__const _SBHStackLayoutMetricsUnspecified
|| __TEXT.__const _SBIconCoordinateNotFound
|| __TEXT.__const _SBIconListPredictedVisibleColumnDefault
|| __TEXT.__const _SBIconListPredictedVisibleRowDefault
|| __TEXT.__const _SBIconListViewIconSpacingDimensionAutomatic
|| __TEXT.__const _SBIconViewDefaultContextMenuAnimationInterval
|| __TEXT.__const _SBIgnoredListIndex
|| __TEXT.__const _SBTodayListIndex
|| __TEXT.__const _SpringBoardHomeVersionNumber
|| __TEXT.__const _SpringBoardHomeVersionString
|| __TEXT.__const _kSBHAddWidgetButtonInsetPhone
|| __TEXT.__const _kSBHAddWidgetButtonMinHeight
|| __TEXT.__const _kSBHAddWidgetButtonMinPadding
|| __TEXT.__const _kSBHAddWidgetButtonWidthPad
|| __TEXT.__const _kSBHIconApplicationShortcutListComposerMaximumApplicationShortcutItems
|| __TEXT.__const _kSBHSidebarWidgetLearningAdvisorDefaultLearningCadenceEpoch
|| __TEXT.__const _kSBHSidebarWidgetLearningAdvisorDefaultLearningDuration
|| __TEXT.__const _kSPUISearchHeaderHeightGestureSpecific
|| __TEXT.__text _BCUIAvocadoSizeFromCHSWidgetFamily
|| __TEXT.__text _BCUIAvocadoSizeFromSBHIconGridSizeClass
|| __TEXT.__text _CHSFamilyMaskForSBHIconGridSizeClassMask
|| __TEXT.__text _CHSWidgetFamilyForATXStackLayoutSize
|| __TEXT.__text _CHSWidgetFamilyForSBHIconGridSizeClass
|| __TEXT.__text _SBFolderIndexPathsAreOnSamePage
|| __TEXT.__text _SBFolderRelativeIconIndex
|| __TEXT.__text _SBFolderRelativeListIndex
|| __TEXT.__text _SBFolderRelativeSubFolderPath
|| __TEXT.__text _SBHAddWidgetSheetViewIconMetricsForScale
|| __TEXT.__text _SBHAlignSizeInRectUsingBaseline
|| __TEXT.__text _SBHBundle
|| __TEXT.__text _SBHCGRectIntersectionAsPercentage
|| __TEXT.__text _SBHCalculateIconSpacing
|| __TEXT.__text _SBHCenterNormalizedFromLayerAnchorPoint
|| __TEXT.__text _SBHContainingBundleIdentifierForWidgetWithBundleIdentifier
|| __TEXT.__text _SBHContainingBundleRecordForWidgetWithBundleIdentifier
|| __TEXT.__text _SBHCurrentAddWidgetSheetStyle
|| __TEXT.__text _SBHDebugShowBorderOfView
|| __TEXT.__text _SBHDefaultIconImageContinuousCornerRadiusForIconSize
|| __TEXT.__text _SBHDirectionalEdgeInsetsByClearingEdges
|| __TEXT.__text _SBHDirectionalEdgeInsetsGetEdgeInsets
|| __TEXT.__text _SBHDirectionalEdgeInsetsInsetRect
|| __TEXT.__text _SBHDisplayCornerRadiusForScreenType
|| __TEXT.__text _SBHEdgeInsetsForTransformingRectIntoRect
|| __TEXT.__text _SBHEdgeInsetsInvert
|| __TEXT.__text _SBHEnumerateIconGridSizeClasses
|| __TEXT.__text _SBHEnumerateIconGridSizeClassesInIconGridSizeClassMask
|| __TEXT.__text _SBHEnumerateScreenTypes
|| __TEXT.__text _SBHFeatureEnabled
|| __TEXT.__text _SBHGetApplicationIconImage
|| __TEXT.__text _SBHGetScreenSpecification
|| __TEXT.__text _SBHHomeScreenMaterialViewBackdropScaleAdjustmentHandlerForCurrentDevice
|| __TEXT.__text _SBHIconDragItemWithIconAndIconView
|| __TEXT.__text _SBHIconGridDistanceBetweenGridCellIndexes
|| __TEXT.__text _SBHIconGridDistanceBetweenGridRanges
|| __TEXT.__text _SBHIconGridRangeAnchoredEdges
|| __TEXT.__text _SBHIconGridRangeBoundsGetRange
|| __TEXT.__text _SBHIconGridRangeCellIndexAboveColumn
|| __TEXT.__text _SBHIconGridRangeCellIndexBelowColumn
|| __TEXT.__text _SBHIconGridRangeCellIndexForRelativeCellIndex
|| __TEXT.__text _SBHIconGridRangeCellIndexes
|| __TEXT.__text _SBHIconGridRangeCellIndexesNotInIconGridRange
|| __TEXT.__text _SBHIconGridRangeColumnForCellIndex
|| __TEXT.__text _SBHIconGridRangeContainsCellIndex
|| __TEXT.__text _SBHIconGridRangeContainsIconGridRange
|| __TEXT.__text _SBHIconGridRangeDivide
|| __TEXT.__text _SBHIconGridRangeEnumerateCellIndexes
|| __TEXT.__text _SBHIconGridRangeEnumerateSubranges
|| __TEXT.__text _SBHIconGridRangeEqualToIconGridRange
|| __TEXT.__text _SBHIconGridRangeGetBounds
|| __TEXT.__text _SBHIconGridRangeIntersection
|| __TEXT.__text _SBHIconGridRangeMaxCellIndex
|| __TEXT.__text _SBHIconGridRangeMaxCellIndexOnRow
|| __TEXT.__text _SBHIconGridRangeMinCellIndex
|| __TEXT.__text _SBHIconGridRangeMinCellIndexOnRow
|| __TEXT.__text _SBHIconGridRangeRelativeCellIndexForCellIndex
|| __TEXT.__text _SBHIconGridRangeRelativeColumnForRelativeCellIndex
|| __TEXT.__text _SBHIconGridRangeRelativeRowForRelativeCellIndex
|| __TEXT.__text _SBHIconGridRangeRowForCellIndex
|| __TEXT.__text _SBHIconGridRangeSubrangeIncludingCellIndex
|| __TEXT.__text _SBHIconGridRangeUnion
|| __TEXT.__text _SBHIconGridSizeClassAreasLookUpArea
|| __TEXT.__text _SBHIconGridSizeClassExtraFloatsEqualToIconGridSizeClassExtraFloats
|| __TEXT.__text _SBHIconGridSizeClassExtraFloatsHash
|| __TEXT.__text _SBHIconGridSizeClassExtraFloatsLookUpExtraFloat
|| __TEXT.__text _SBHIconGridSizeClassExtraFloatsUpdateExtraFloat
|| __TEXT.__text _SBHIconGridSizeClassForCHSWidgetFamily
|| __TEXT.__text _SBHIconGridSizeClassForString
|| __TEXT.__text _SBHIconGridSizeClassIconImageInfosCalculateExtraIconImageSize
|| __TEXT.__text _SBHIconGridSizeClassIconImageInfosCalculateExtraIconImageSizeForGridSizeClass
|| __TEXT.__text _SBHIconGridSizeClassIconImageInfosEqualToIconGridSizeClassIconImageInfos
|| __TEXT.__text _SBHIconGridSizeClassIconImageInfosHash
|| __TEXT.__text _SBHIconGridSizeClassIconImageInfosLookUpImageInfo
|| __TEXT.__text _SBHIconGridSizeClassIconImageInfosUpdateImageInfo
|| __TEXT.__text _SBHIconGridSizeClassMaskForCHSFamilyMask
|| __TEXT.__text _SBHIconGridSizeClassMaskForIconGridSizeClass
|| __TEXT.__text _SBHIconGridSizeClassMaskIncludesIconGridSizeClass
|| __TEXT.__text _SBHIconGridSizeClassSizesEqualToIconGridSizeClassSizes
|| __TEXT.__text _SBHIconGridSizeClassSizesGetAreas
|| __TEXT.__text _SBHIconGridSizeClassSizesLookUpArea
|| __TEXT.__text _SBHIconGridSizeClassSizesLookUpLargestSizeClass
|| __TEXT.__text _SBHIconGridSizeClassSizesLookUpLargestSizeClassWhichTilesInGridSize
|| __TEXT.__text _SBHIconGridSizeClassSizesLookUpShortestSizeClassWithWidth
|| __TEXT.__text _SBHIconGridSizeClassSizesLookUpSize
|| __TEXT.__text _SBHIconGridSizeClassSizesLookUpSizeClass
|| __TEXT.__text _SBHIconGridSizeClassSizesLookUpTallestSizeClass
|| __TEXT.__text _SBHIconGridSizeClassSizesLookUpWidestSizeClass
|| __TEXT.__text _SBHIconGridSizeEqualToIconGridSize
|| __TEXT.__text _SBHIconGridSizeGetArea
|| __TEXT.__text _SBHIconGridSizeGetLargestDimension
|| __TEXT.__text _SBHIconGridSizeGetSmallestDimension
|| __TEXT.__text _SBHIconGridSizeIsDefault
|| __TEXT.__text _SBHIconGridSizeIsEmpty
|| __TEXT.__text _SBHIconGridSizeIsLandscape
|| __TEXT.__text _SBHIconGridSizeIsPortrait
|| __TEXT.__text _SBHIconGridSizeRotate
|| __TEXT.__text _SBHIconGridSizeRotateWithOptions
|| __TEXT.__text _SBHIconListLayoutCalculateHorizontalColumnBump
|| __TEXT.__text _SBHIconListLayoutDefaultEditingAnimationStrengthForGridSize
|| __TEXT.__text _SBHIconListLayoutEditingAnimationStrengthForGridSizeClass
|| __TEXT.__text _SBHIconListLayoutExtraIconImageSizeForGridSizeClass
|| __TEXT.__text _SBHIconListLayoutExtraIconImageSizeForGridSizeClassAndSpacing
|| __TEXT.__text _SBHIconListLayoutFolderIconGridCellSize
|| __TEXT.__text _SBHIconListLayoutFolderIconGridCellSpacing
|| __TEXT.__text _SBHIconListLayoutGridCellLayoutClusterSize
|| __TEXT.__text _SBHIconListLayoutIconAccessoryOffset
|| __TEXT.__text _SBHIconListLayoutIconAccessorySize
|| __TEXT.__text _SBHIconListLayoutIconGridSizeClassSizes
|| __TEXT.__text _SBHIconListLayoutIconImageInfoForGridSizeClass
|| __TEXT.__text _SBHIconListLayoutLabelVisualConfiguration
|| __TEXT.__text _SBHIconListLayoutLabelVisualConfigurationForContentSizeCategory
|| __TEXT.__text _SBHIconListLayoutLargestExtraIconImageSize
|| __TEXT.__text _SBHIconListLayoutListGridSize
|| __TEXT.__text _SBHIconListLayoutListIconSpacing
|| __TEXT.__text _SBHIconListLayoutListIconSpacingForListSize
|| __TEXT.__text _SBHIconListLayoutLookUpGridSizeClassWithLargestIconImageSize
|| __TEXT.__text _SBHIconListLayoutLookUpGridSizeClassWithTallestIconImageSize
|| __TEXT.__text _SBHIconListLayoutLookUpGridSizeClassWithWidestIconImageSize
|| __TEXT.__text _SBHIconListLayoutMaximumIconCount
|| __TEXT.__text _SBHIconListLayoutNonDefaultIconGridSizeClassLayoutInsets
|| __TEXT.__text _SBHIconListLayoutNonDefaultIconGridSizeClassLayoutInsetsWithIconSpacing
|| __TEXT.__text _SBHIconListLayoutPrimaryOrientationForGridCellLayoutClusterSize
|| __TEXT.__text _SBHIconListLayoutRotatedLayoutGridCellClusterSizeClass
|| __TEXT.__text _SBHIconListLayoutSupportedIconGridSizeClasses
|| __TEXT.__text _SBHIconListLayoutSupportsIconGridSizeClass
|| __TEXT.__text _SBHInterpolateEdgeInsets
|| __TEXT.__text _SBHIntersectionFloatRange
|| __TEXT.__text _SBHIsHomeButtonDevice
|| __TEXT.__text _SBHLibraryPresentationErrorForCode
|| __TEXT.__text _SBHLibraryPresentationErrorForCodeWithInfo
|| __TEXT.__text _SBHNormalizedRectFromSubRect
|| __TEXT.__text _SBHOverrideFeatureEnabled
|| __TEXT.__text _SBHPadAddWidgetSheetMetricsForScreenTypeAndInterfaceOrientation
|| __TEXT.__text _SBHPinViewWithinView
|| __TEXT.__text _SBHPointScale
|| __TEXT.__text _SBHPositionInFloatRange
|| __TEXT.__text _SBHRTLAwarePositionInFloatRange
|| __TEXT.__text _SBHScreenBounds
|| __TEXT.__text _SBHScreenSpecificationEqualToScreenSpecification
|| __TEXT.__text _SBHScreenTypeForCurrentDevice
|| __TEXT.__text _SBHScreenTypeForDeviceAndDisplayContexts
|| __TEXT.__text _SBHScreenTypeForShortString
|| __TEXT.__text _SBHScreenTypeHasHomeButton
|| __TEXT.__text _SBHScreenTypeIsPad
|| __TEXT.__text _SBHScreenTypeIsPhone
|| __TEXT.__text _SBHScreenTypeLookup
|| __TEXT.__text _SBHSearchIconImageSymbolConfiguration
|| __TEXT.__text _SBHShortStringForIconGridSizeClass
|| __TEXT.__text _SBHShortStringForScreenType
|| __TEXT.__text _SBHSizeCeiling
|| __TEXT.__text _SBHSizeGreaterThanOrEqualToSize
|| __TEXT.__text _SBHSizeScaleSizeToFill
|| __TEXT.__text _SBHSizeScaled
|| __TEXT.__text _SBHSizeScaledToFill
|| __TEXT.__text _SBHSpecialAvocadoDescriptorTypeForKind
|| __TEXT.__text _SBHStackLayoutMetricsEqualToMetrics
|| __TEXT.__text _SBHStringForGridCellInfoOptions
|| __TEXT.__text _SBHStringForIconCoordinate
|| __TEXT.__text _SBHStringForIconGridRange
|| __TEXT.__text _SBHStringForIconGridSize
|| __TEXT.__text _SBHStringForIconGridSizeClass
|| __TEXT.__text _SBHStringForIconGridSizeClassMask
|| __TEXT.__text _SBHStringForIconGridSizeClassSizes
|| __TEXT.__text _SBHStringForScreenType
|| __TEXT.__text _SBHStringFromContentVisibility
|| __TEXT.__text _SBHStringFromFloatRange
|| __TEXT.__text _SBHStringFromUIInterfaceOrientation
|| __TEXT.__text _SBHSubRectFromNormalizedRect
|| __TEXT.__text _SBHUnionFloatRange
|| __TEXT.__text _SBHWeatherWidgetTestIntent
|| __TEXT.__text _SBHWidgetViewControllerDescriptionsForSysdiagnose
|| __TEXT.__text _SBHWidgetViewControllerSysdiagnoseDescription
|| __TEXT.__text _SBHZPositionForScale
|| __TEXT.__text _SBHomeAccessibilityTintColor
|| __TEXT.__text _SBHomeAccessibilityTintLegibiliitySettings
|| __TEXT.__text _SBHomeAccessibilityTintLegibilityStyle
|| __TEXT.__text _SBIconAccessoryCountedMap
|| __TEXT.__text _SBIconApproximateLayoutPositionEqualToApproximateLayoutPosition
|| __TEXT.__text _SBIconBadgeViewCalculateAccessoryCenter
|| __TEXT.__text _SBIconCoordinateGetGridCellIndex
|| __TEXT.__text _SBIconCoordinateIsNotFound
|| __TEXT.__text _SBIconCoordinateMake
|| __TEXT.__text _SBIconCoordinateMakeWithGridCellIndex
|| __TEXT.__text _SBIconImageInfoEqualToIconImageInfo
|| __TEXT.__text _SBIconImageInfoMake
|| __TEXT.__text _SBIconIndexCompleteNodePath
|| __TEXT.__text _SBIconIndexDebugStringForNodeIdentifier
|| __TEXT.__text _SBIconLocationGroupAddLocation
|| __TEXT.__text _SBIconLocationGroupContainsLocation
|| __TEXT.__text _SBIconViewQueryingBestIconViewForIcon
|| __TEXT.__text _SBIconViewQueryingDisplayingIcon
|| __TEXT.__text _SBIconViewQueryingDisplayingIconInLocation
|| __TEXT.__text _SBIconViewQueryingDisplayingIconView
|| __TEXT.__text _SBIconViewQueryingFirstIconViewForIcon
|| __TEXT.__text _SBIconViewQueryingFirstIconViewForIconPassingTest
|| __TEXT.__text _SBIconViewQueryingHandleMethodRecursion
|| __TEXT.__text _SBIconViewQueryingIconViewForIconInLocation
|| __TEXT.__text _SBLibraryUseSectionsForQuery
|| __TEXT.__text _SBLogAppPlaceholder
|| __TEXT.__text _SBLogClock
|| __TEXT.__text _SBLogCommon
|| __TEXT.__text _SBLogContinuity
|| __TEXT.__text _SBLogFolderIconImageCache
|| __TEXT.__text _SBLogHomeScreenUsageMonitor
|| __TEXT.__text _SBLogIcon
|| __TEXT.__text _SBLogIconContextMenu
|| __TEXT.__text _SBLogIconImageCache
|| __TEXT.__text _SBLogIconLabelImageCache
|| __TEXT.__text _SBLogLibrary
|| __TEXT.__text _SBLogLibrarySearchController
|| __TEXT.__text _SBLogProactiveAppLibrary
|| __TEXT.__text _SBLogRecentsDocumentExtension
|| __TEXT.__text _SBLogSelectedApplicationDataSource
|| __TEXT.__text _SBLogTelemetrySignposts
|| __TEXT.__text _SBLogWidgetCleanup
|| __TEXT.__text _SBLogWidgetDiscoverabilityMigration
|| __TEXT.__text _SBLogWidgetIntent
|| __TEXT.__text _SBLogWidgetMultiplexing
|| __TEXT.__text _SBLogWidgets
|| __TEXT.__text _SBRootFolderPageStateIsOnHorizontalScrollingPlane
|| __TEXT.__text _SBRootFolderPageStateIsOnIconPage
|| __TEXT.__text _SBRootFolderPageStateIsOnLeadingCustomPage
|| __TEXT.__text _SBRootFolderPageStateIsOnTrailingCustomPage
|| __TEXT.__text _SBRootFolderPageStateIsSearch
|| __TEXT.__text _SBRootFolderPageStateVerticalGroupContainsRootFolderPageState
|| __TEXT.__text _SBRootFolderPageStateVerticalGroupForRootFolderPageState
|| __TEXT.__text _SBRootFolderPageStateVerticalGroupMatches
|| __TEXT.__text _SBSLibraryPodPresentationErrorCodeForErrorCode
|| __TEXT.__text _SBStringForIconListDragHitRegion
|| __TEXT.__text _SBStringForRootFolderPageState
|| __TEXT.__text _SBStringFromVisibleColumnRange
|| __TEXT.__text _SBTreeNodeContainsDescendantIndexPath
|| __TEXT.__text _SBTreeNodeGetDescendantAtIndexPath
|| __TEXT.__text _SBTreeNodeGetIndexPathForDescendantTreeNode
|| __TEXT.__text _SBTreeNodeGetRootNode
|| __TEXT.__text _SBTreeNodeInformOfAncestryChange
|| __TEXT.__text _SBTreeNodeIsDescendantOfTreeNode
|| __TEXT.__text _SBTreeNodeSetParent
|| __TEXT.__text _SBViewClassForIconLabelAccessoryType
|| __TEXT.__text _SBVisibleColumnRangeContainsIconListIndex
|| __TEXT.__text _SBVisibleColumnRangeEnumerateContainedIconListIndexes
|| __TEXT.__text _SBVisibleColumnRangeEqualToRange
|| __TEXT.__text _SBVisibleColumnRangeGetNextColumn
|| __TEXT.__text _SBVisibleColumnRangeGetPreviousColumn
|| __TEXT.__text _SBVisibleColumnRangeGetVisibleColumnsForIconListIndex
|| __TEXT.__text _SBVisibleColumnRangeIsEmpty
|| __TEXT.__text _SBVisibleColumnRangeMaxIconListIndex
|| __TEXT.__text __SBHScreenTypeLookup
|| __TEXT.__text __SBIconIsLeafIconAndNotWidgetIcon
|| __TEXT.__text __SBIconListIsColumnValidForGridSize
|| __TEXT.__text __SBIconListIsRowValidForGridSize
|| __TEXT.__text __SBScaleIconZoomAnimatorCameraPositionToScaleModelPointToTargetPoint
|| __TEXT.__text __uncachedMetricsForScreenTypeAndInterfaceOrientation
__ AppSupport: _OBJC_CLASS_$_CPMemoryPool
__ BaseBoardUI: _BSUIConstrainValueToIntervalWithRubberBand
__ BaseBoardUI: _BSUIConstrainValueWithRubberBand
__ BaseBoardUI: _OBJC_CLASS_$_BSUIAnimationFactory
__ BaseBoardUI: _OBJC_CLASS_$_BSUIFontProvider
__ BaseBoardUI: _OBJC_CLASS_$_BSUIScrollView
__ BaseBoardUI: _OBJC_METACLASS_$_BSUIScrollView
__ BatteryCenterUI: _OBJC_CLASS_$_BCUIBatteryAvocadoViewController
__ ChronoServices: _CHSWidgetFamilyMaskContainsFamily
__ ChronoServices: _CHSWidgetFamilyMaskDescription
__ ChronoServices: _CHSWidgetVisibilityKey
__ ChronoServices: _NSStringFromWidgetFamily
__ ChronoServices: _OBJC_CLASS_$_CHSAvocadoDescriptor
__ ChronoServices: _OBJC_CLASS_$_CHSAvocadoDescriptorProvider
__ ChronoServices: _OBJC_CLASS_$_CHSMutableWidgetMetricsSpecification
__ ChronoServices: _OBJC_CLASS_$_CHSWidget
__ ChronoServices: _OBJC_CLASS_$_CHSWidgetMetrics
__ ChronoServices: _OBJC_METACLASS_$_CHSAvocadoDescriptor
__ ChronoUIServices: _CHUISURLOpeningEntitlement
__ ChronoUIServices: _OBJC_CLASS_$_CHUISAvocadoHostViewController
__ ControlCenterUIKit: _OBJC_CLASS_$_CCUICAPackageDescription
__ ControlCenterUIKit: _OBJC_CLASS_$_CCUICustomContentModuleBackgroundViewController
__ ControlCenterUIKit: _OBJC_CLASS_$_CCUILabeledRoundButtonViewController
__ ControlCenterUIKit: _OBJC_METACLASS_$_CCUICustomContentModuleBackgroundViewController
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopObserverCreateWithHandler
__ CoreFoundation: _CFRunLoopObserverInvalidate
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSSystemTimeZoneDidChangeNotification
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGColorCreateGenericGray
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextSetAlpha
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextSetShadowWithColor
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathAddArc
__ CoreGraphics: _CGPathAddEllipseInRect
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectDivide
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreMaterial: _MTCGColorPerceivedLightness
__ CoreServices: _LSInternalApplicationType
__ CoreServices: _LSSystemApplicationType
__ CoreServices: _LSUserApplicationType
__ CoreServices: _OBJC_CLASS_$_LSApplicationExtensionRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleRecord
__ CoreSpotlight: _MDItemAlternateNames
__ CoreSpotlight: _MDItemDisplayName
__ CoreSpotlight: _MDItemKeywords
__ CoreSpotlight: _MDQueryResultMenuRelevance
__ CoreSpotlight: _MDQueryResultRelevance
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchQuery
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchQueryContext
__ CoreSpotlight: _OBJC_CLASS_$_CSTopHitSearchQuery
__ CoreText: _CTFontGetLanguageAwareOutsets
__ CoreText: _kCTFontGradeTrait
__ CoreText: _kCTFontUIFontDesignSoft
__ CoreText: _kCTFontUIFontDesignTrait
__ DocumentManagerCore: _DOCShouldApplicationShowRecentsPopover
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSExtensionIdentifierName
__ Foundation: _NSExtensionPointName
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSIntersectionRange
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ FrontBoardServices: _BSDateTimeCacheChangedNotification
__ FrontBoardServices: _BSDegreesToRadians
__ FrontBoardServices: _BSDispatchMain
__ FrontBoardServices: _BSDispatchQueueAssert
__ FrontBoardServices: _BSDispatchQueueAssertMain
__ FrontBoardServices: _BSDispatchQueueAssertNotMain
__ FrontBoardServices: _BSDispatchQueueCreate
__ FrontBoardServices: _BSDispatchQueueCreateSerial
__ FrontBoardServices: _BSDispatchQueueCreateSerialWithQoS
__ FrontBoardServices: _BSDispatchQueueCreateWithQualityOfService
__ FrontBoardServices: _BSEqualArrays
__ FrontBoardServices: _BSEqualObjects
__ FrontBoardServices: _BSEqualStrings
__ FrontBoardServices: _BSFloatApproximatelyEqualToFloat
__ FrontBoardServices: _BSFloatEqualToFloat
__ FrontBoardServices: _BSFloatGreaterThanFloat
__ FrontBoardServices: _BSFloatGreaterThanOrEqualToFloat
__ FrontBoardServices: _BSFloatIsOne
__ FrontBoardServices: _BSFloatIsZero
__ FrontBoardServices: _BSFloatLessThanFloat
__ FrontBoardServices: _BSFloatLessThanOrEqualToFloat
__ FrontBoardServices: _BSIntervalFractionForValue
__ FrontBoardServices: _BSIntervalMax
__ FrontBoardServices: _BSIntervalUnit
__ FrontBoardServices: _BSIntervalValueForFraction
__ FrontBoardServices: _BSLogAddStateCaptureBlockWithTitle
__ FrontBoardServices: _BSPointEqualToPoint
__ FrontBoardServices: _BSRectEqualToRect
__ FrontBoardServices: _BSRectWithSize
__ FrontBoardServices: _BSSettingFlagIsYes
__ FrontBoardServices: _BSSizeEqualToSize
__ FrontBoardServices: _BSSizeGreaterThanOrEqualToSize
__ FrontBoardServices: _BSStringFromBOOL
__ FrontBoardServices: _FBSApplicationLibraryErrorDomain
__ FrontBoardServices: _FBSInstallTypeIsCloudDemoted
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActions
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _FBSOpenApplicationOptionKeyLaunchOrigin
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _NSStringFromFBSApplicationPlaceholderProgressState
__ FrontBoardServices: _OBJC_CLASS_$_BSAnimationSettings
__ FrontBoardServices: _OBJC_CLASS_$_BSCFBundle
__ FrontBoardServices: _OBJC_CLASS_$_BSDateFormatterCache
__ FrontBoardServices: _OBJC_CLASS_$_BSDescriptionBuilder
__ FrontBoardServices: _OBJC_CLASS_$_BSDispatchQueueAttributes
__ FrontBoardServices: _OBJC_CLASS_$_BSEqualsBuilder
__ FrontBoardServices: _OBJC_CLASS_$_BSEventQueue
__ FrontBoardServices: _OBJC_CLASS_$_BSEventQueueEvent
__ FrontBoardServices: _OBJC_CLASS_$_BSHashBuilder
__ FrontBoardServices: _OBJC_CLASS_$_BSPlatform
__ FrontBoardServices: _OBJC_CLASS_$_BSSimpleAssertion
__ FrontBoardServices: _OBJC_CLASS_$_FBSApplicationLibrary
__ FrontBoardServices: _OBJC_CLASS_$_FBSApplicationLibraryConfiguration
__ FrontBoardServices: _OBJC_CLASS_$_FBSApplicationUninstallOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: __BSIsInternalInstall
__ FrontBoardServices: __BSSafeCast
__ FrontBoardServices: __bs_set_crash_log_message
__ IconServices: _OBJC_CLASS_$_IFImage
__ IconServices: _OBJC_CLASS_$_ISIcon
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ Intents: _OBJC_CLASS_$_INIntent
__ IntlPreferences: _OBJC_CLASS_$_IntlUtility
__ MaterialKit: _MTMaterialRecipeForUIBlurEffectStyle
__ MaterialKit: _OBJC_CLASS_$_MTMaterialView
__ MaterialKit: _OBJC_CLASS_$_MTShadowView
__ MaterialKit: _OBJC_CLASS_$_MTStylingProvidingSolidColorView
__ MaterialKit: _OBJC_CLASS_$_MTVisualStylingProvider
__ MetadataUtilities: ___MDQueryCreateStringByAddingBackslashEscapes
__ PeopleUIInternal: _OBJC_CLASS_$_PPLPeopleEntityMetadata
__ PeopleUIInternal: _OBJC_CLASS_$_PPLPeopleEntityViewController
__ PersistentConnection: _OBJC_CLASS_$_PCPersistentTimer
__ PrototypeTools: _OBJC_CLASS_$_PTButtonRow
__ PrototypeTools: _OBJC_CLASS_$_PTChoiceRow
__ PrototypeTools: _OBJC_CLASS_$_PTDomain
__ PrototypeTools: _OBJC_CLASS_$_PTDrillDownRow
__ PrototypeTools: _OBJC_CLASS_$_PTEditFloatRow
__ PrototypeTools: _OBJC_CLASS_$_PTModule
__ PrototypeTools: _OBJC_CLASS_$_PTRestoreDefaultSettingsRowAction
__ PrototypeTools: _OBJC_CLASS_$_PTSettings
__ PrototypeTools: _OBJC_CLASS_$_PTSliderRow
__ PrototypeTools: _OBJC_CLASS_$_PTSwitchRow
__ PrototypeTools: _OBJC_METACLASS_$_PTDomain
__ PrototypeTools: _OBJC_METACLASS_$_PTSettings
__ QuartzCore: _CAColorMatrixConcat
__ QuartzCore: _CAColorMatrixMakeColorSourceOver
__ QuartzCore: _CAColorMatrixMakeContrast
__ QuartzCore: _CAColorMatrixMakeSaturation
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CAFrameRateRangeMake
__ QuartzCore: _CATransform3DConcat
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DIsIdentity
__ QuartzCore: _CATransform3DMakeRotation
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DMakeTranslation
__ QuartzCore: _CATransform3DRotate
__ QuartzCore: _CATransform3DScale
__ QuartzCore: _CATransform3DTranslate
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABackdropLayer
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMatchMoveAnimation
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_CLASS_$_CATransformLayer
__ QuartzCore: _kCAAnimationAbsolute
__ QuartzCore: _kCAAnimationRelative
__ QuartzCore: _kCABackdropNamespaceGlobal
__ QuartzCore: _kCABackdropNamespaceOwningContext
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCAFilterBox
__ QuartzCore: _kCAFilterColorBrightness
__ QuartzCore: _kCAFilterColorBurnBlendMode
__ QuartzCore: _kCAFilterColorDodgeBlendMode
__ QuartzCore: _kCAFilterColorSaturate
__ QuartzCore: _kCAFilterInputColor
__ QuartzCore: _kCAFilterInputColorMatrix
__ QuartzCore: _kCAFilterMultiplyColor
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCAFilterPlusL
__ QuartzCore: _kCAFilterSourceAtop
__ QuartzCore: _kCAFilterVibrantColorMatrix
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTaskGetCodeSignStatus
__ SoftLinking: __sl_dlopen
__ SpringBoardFoundation: _OBJC_CLASS_$_SBC2GroupCompletion
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFAnalyticsClient
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFAnimationSettings
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFAnimationUtilities
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFDateTimeController
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFFeatherBlurView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFFluidBehaviorSettings
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFFocusIsolationView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFMappedImageCache
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFOverridableDateProvider
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFRemoteBasebandLoggingManager
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFSpringLoadedInteractionBehavior
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFSpringLoadedInteractionEffect
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFSteppedAnimationTimingFunctionCalculator
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFTodayGestureDomain
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFTouchPassThroughView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFTouchPassThroughViewController
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBHomeScreenDefaults
__ SpringBoardFoundation: _OBJC_CLASS_$_SBReusableViewMap
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFFocusIsolationView
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFSteppedAnimationTimingFunctionCalculator
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFTouchPassThroughView
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFTouchPassThroughViewController
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFView
__ SpringBoardFoundation: _SBFApplyParallaxSettingsToView
__ SpringBoardFoundation: _SBFApplyParallaxSettingsToViewWithFactor
__ SpringBoardFoundation: _SBFBoolEquals
__ SpringBoardFoundation: _SBFComposedColor
__ SpringBoardFoundation: _SBFEdgeInsetsRelativeToRectEdge
__ SpringBoardFoundation: _SBFEffectiveArtworkSubtype
__ SpringBoardFoundation: _SBFEffectiveDeviceClass
__ SpringBoardFoundation: _SBFEffectiveHomeButtonType
__ SpringBoardFoundation: _SBFEqualStrings
__ SpringBoardFoundation: _SBFFloatCeilForScale
__ SpringBoardFoundation: _SBFFloatEqualsFloat
__ SpringBoardFoundation: _SBFFloatFloorForScale
__ SpringBoardFoundation: _SBFFloatRoundForMainScreenScale
__ SpringBoardFoundation: _SBFFloatRoundForScale
__ SpringBoardFoundation: _SBFFontMetricsZero
__ SpringBoardFoundation: _SBFInterfaceOrientationMaskContainsInterfaceOrientation
__ SpringBoardFoundation: _SBFPointEqualToPointAtScale
__ SpringBoardFoundation: _SBFPreheatImageData
__ SpringBoardFoundation: _SBFRectRoundForScale
__ SpringBoardFoundation: _SBFRemoteBasebandLogCollectionEnabledText
__ SpringBoardFoundation: _SBFSafeCast
__ SpringBoardFoundation: _SBFUserAuthenticatedForFirstTimeNotification
__ SpringBoardFoundation: _SBFWindowForViewControllerTransition
__ SpringBoardFoundation: _SBStringFromAnimationUpdateMode
__ SpringBoardFoundation: __SBFLoggingMethodProem
__ SpringBoardFoundation: __SBF_Private_IsD16
__ SpringBoardFoundation: __SBF_Private_IsD17
__ SpringBoardFoundation: __SBF_Private_IsD33OrSimilarDevice
__ SpringBoardFoundation: __SBF_Private_IsD52OrSimilarDevice
__ SpringBoardFoundation: __SBF_Private_IsD52ZoomedOrSimilarDevice
__ SpringBoardFoundation: __SBF_Private_IsD53
__ SpringBoardFoundation: __SBF_Private_IsD54
__ SpringBoardFoundation: __SBF_Private_IsD63
__ SpringBoardFoundation: __SBF_Private_IsD64
__ SpringBoardFoundation: __SBF_Private_IsN84OrSimilarDevice
__ SpringBoardFoundation: __SBF_Private_IsN84ZoomedOrSimilarDevice
__ SpringBoardFoundation: _convertDampingRatioAndResponseToTensionAndFriction
__ SpringBoardServices: _OBJC_CLASS_$_SBSAppDragLocalContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationMultiwindowService
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutContactIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutCustomImageIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutItem
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutService
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutSystemIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutSystemPrivateIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutTemplateIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSDebugActiveWidgetInfo
__ SpringBoardServices: _OBJC_CLASS_$_SBSHardwareButtonService
__ SpringBoardServices: _OBJC_CLASS_$_SBSHomeScreenService
__ SpringBoardServices: _OBJC_CLASS_$_SBSMedusaApplicationShortcutService
__ SpringBoardServices: _SBDisplayMetrics
__ SpringBoardServices: _SBLogIconDragging
__ SpringBoardServices: _SBLogRootController
__ SpringBoardServices: _SBLoggingSubsystem
__ SpringBoardServices: _SBSAppDragPrivateTypeIdentifier
__ SpringBoardServices: _SBSCreateOpenApplicationService
__ SpringBoardServices: _SBSOpenApplicationLaunchOriginShortcutItem
__ SpringBoardServices: ___sb__mainScreenReferenceBounds
__ SpringBoardServices: ___sb__mainScreenScale
__ SpringBoardServices: ___sb__runningInSpringBoard
__ SpringBoardServices: _kSBSAnalyticsEventTypeLibraryPresentationSourceKey
__ SpringBoardServices: _kSBSApplicationShortcutItemTypeSendBetaFeedback
__ SpringBoardServices: _kSBSApplicationShortcutItemTypeSendBetaFeedbackUserInfoItemIDKey
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUILegibilityLabel
__ SpringBoardUIServices: _UIContentSizeCategoryClip
__ SpringBoardUIServices: _UIContentSizeCategoryIsEqualToCategory
__ SpringBoardUIServices: _UIContentSizeCategoryOneSmallerThanSizeCategory
__ StoreKit: _OBJC_CLASS_$_SKStoreProductActivityViewController
__ StoreKit: _SKStoreProductParameterITunesItemIdentifier
__ StoreKit: _SKStoreProductParameterPopoverSourceRect
__ Trial: _OBJC_CLASS_$_TRIClient
__ TrialProto: _OBJC_CLASS_$_TRINamespace
__ UIKit: _NSDirectionalEdgeInsetsZero
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSKernAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSStringFromCGAffineTransform
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStringFromDirectionalEdgeInsets
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _NSStringFromUIOffset
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutDimension
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutGroup
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutGroupCustomItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSection
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSize
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSpacing
__ UIKit: _OBJC_CLASS_$_NSDiffableDataSourceSnapshot
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIButtonConfiguration
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayoutConfiguration
__ UIKit: _OBJC_CLASS_$_UICollectionViewDiffableDataSource
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIColorEffect
__ UIKit: _OBJC_CLASS_$_UIContextMenuConfiguration
__ UIKit: _OBJC_CLASS_$_UIContextMenuInteraction
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDragInteraction
__ UIKit: _OBJC_CLASS_$_UIDragItem
__ UIKit: _OBJC_CLASS_$_UIDragPreview
__ UIKit: _OBJC_CLASS_$_UIDragPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIDragPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIDropInteraction
__ UIKit: _OBJC_CLASS_$_UIDropProposal
__ UIKit: _OBJC_CLASS_$_UIFocusGuide
__ UIKit: _OBJC_CLASS_$_UIFocusHaloEffect
__ UIKit: _OBJC_CLASS_$_UIFocusSystem
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIHandleApplicationShortcutAction
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageAsset
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIImpactFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UIInteractionProgress
__ UIKit: _OBJC_CLASS_$_UIInterpolatingMotionEffect
__ UIKit: _OBJC_CLASS_$_UIKeyCommand
__ UIKit: _OBJC_CLASS_$_UIKeyShortcutHUDService
__ UIKit: _OBJC_CLASS_$_UIKeyboardImpl
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UILocalizedIndexedCollation
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationBarAppearance
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UINavigationItem
__ UIKit: _OBJC_CLASS_$_UIOpenURLAction
__ UIKit: _OBJC_CLASS_$_UIPageControl
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPointerAppIconEffect
__ UIKit: _OBJC_CLASS_$_UIPointerHoverEffect
__ UIKit: _OBJC_CLASS_$_UIPointerInteraction
__ UIKit: _OBJC_CLASS_$_UIPointerLiftEffect
__ UIKit: _OBJC_CLASS_$_UIPointerRegion
__ UIKit: _OBJC_CLASS_$_UIPointerShape
__ UIKit: _OBJC_CLASS_$_UIPointerStyle
__ UIKit: _OBJC_CLASS_$_UIPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScribbleInteraction
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UISearchTextField
__ UIKit: _OBJC_CLASS_$_UISheetPresentationControllerDetent
__ UIKit: _OBJC_CLASS_$_UISplitViewController
__ UIKit: _OBJC_CLASS_$_UISpringLoadedInteraction
__ UIKit: _OBJC_CLASS_$_UISpringTimingParameters
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITableViewDiffableDataSource
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedDragPreview
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIVibrancyEffect
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewFloatAnimatableProperty
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWebClip
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIApplicationInfo
__ UIKit: _OBJC_CLASS_$__UIAssetManager
__ UIKit: _OBJC_CLASS_$__UIContextMenuStyle
__ UIKit: _OBJC_CLASS_$__UIGrabber
__ UIKit: _OBJC_CLASS_$__UIImpactFeedbackGeneratorConfiguration
__ UIKit: _OBJC_CLASS_$__UILegibilityImageSet
__ UIKit: _OBJC_CLASS_$__UILegibilitySettings
__ UIKit: _OBJC_CLASS_$__UILegibilityView
__ UIKit: _OBJC_CLASS_$__UIPortalView
__ UIKit: _OBJC_CLASS_$__UISheetAnimationController
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UIDragInteraction
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIImage
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UIInteractionProgress
__ UIKit: _OBJC_METACLASS_$_UINavigationBar
__ UIKit: _OBJC_METACLASS_$_UIPageControl
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UISearchController
__ UIKit: _OBJC_METACLASS_$_UISearchTextField
__ UIKit: _OBJC_METACLASS_$_UITableView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITableViewDiffableDataSource
__ UIKit: _OBJC_METACLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_METACLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$__UILegibilityView
__ UIKit: _OBJC_METACLASS_$__UISheetAnimationController
__ UIKit: _UIAccessibilityBoldTextStatusDidChangeNotification
__ UIKit: _UIAccessibilityIsBoldTextEnabled
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityReduceMotionStatusDidChangeNotification
__ UIKit: _UIAccessibilityReduceTransparencyStatusDidChangeNotification
__ UIKit: _UIAnimationDragCoefficient
__ UIKit: _UIApp
__ UIKit: _UIApplicationSignificantTimeChangeNotification
__ UIKit: _UICeilToScale
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UIContentSizeCategoryUnspecified
__ UIKit: _UIDistanceBetweenPoints
__ UIKit: _UIEdgeInsetsAdd
__ UIKit: _UIEdgeInsetsMakeWithEdges
__ UIKit: _UIEdgeInsetsMax
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFloorToScale
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontDescriptorSystemDesignRounded
__ UIKit: _UIFontDescriptorTraitsAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleLargeTitle
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightLight
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIFontWeightTrait
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIImageSymbolSizeMedium
__ UIKit: _UIKeyInputDownArrow
__ UIKit: _UIKeyInputEnd
__ UIKit: _UIKeyInputEscape
__ UIKit: _UIKeyInputHome
__ UIKit: _UIKeyInputLeftArrow
__ UIKit: _UIKeyInputRightArrow
__ UIKit: _UIKeyboardAnimationCurveUserInfoKey
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardWillChangeFrameNotification
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UIPointRoundToScale
__ UIKit: _UIPointRoundToViewScale
__ UIKit: _UIRectCenteredAboutPoint
__ UIKit: _UIRectCenteredAboutPointScale
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectCenteredIntegralRectScale
__ UIKit: _UIRectCenteredRect
__ UIKit: _UIRectCenteredXInRect
__ UIKit: _UIRectCenteredXInRectScale
__ UIKit: _UIRectCenteredYInRectScale
__ UIKit: _UIRectContainInRect
__ UIKit: _UIRectFill
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: _UIRectGetCenter
__ UIKit: _UIRectInset
__ UIKit: _UIRectInsetEdges
__ UIKit: _UIRectIntegralWithScale
__ UIKit: _UIRoundToScale
__ UIKit: _UIRoundToScreenScale
__ UIKit: _UIScrollViewDecelerationRateFast
__ UIKit: _UISizeRoundToScale
__ UIKit: _UISizeRoundToViewScale
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UITableViewIndexAppClip
__ UIKit: _UITextFieldTextDidBeginEditingNotification
__ UIKit: _UITextFieldTextDidChangeNotification
__ UIKit: _UITextFieldTextDidEndEditingNotification
__ UIKit: _UITrackingRunLoopMode
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextFromViewKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UITransitionContextToViewKey
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: _UIWebClipAppClipBundleIdentifierPrefix
__ UIKit: _UIWindowDidRotateNotification
__ UIKit: _UIWindowLevelNormal
__ UIKit: __UILegibilityViewOptionNone
__ UIKit: __UILegibilityViewOptionUsesColorFilters
__ UIKit: __UIScrollViewNotifyForScrollView
__ UIKit: __UISheetMinimumTopInset
__ UIKit: __UITraitCollectionDisplayCornerRadiusUnspecified
__ UIKit: __UIVisualAltitudeFloatAboveSuperview
__ UIKit: __UIVisualAltitudeLevelWithSuperview
__ UIKit: __UIVisualAltitudeOverlayOnSuperview
__ UIKit: __UIWindowConvertRectFromOrientationToOrientation
__ UIKitServices: _OBJC_CLASS_$_UISApplicationSupportDisplayEdgeInfo
__ UIKitServices: _OBJC_CLASS_$_UISApplicationSupportDisplayEdgeInsetsWrapper
__ UIKitServices: _UISDeviceContextDeviceClassKey
__ UIKitServices: _UISDeviceContextHomeButtonTypeKey
__ UIKitServices: _UISOpenApplicationOptionKeyTargetContentIdentifier
__ UniformTypeIdentifiers: _OBJC_CLASS_$_UTType
__ Widgets: _OBJC_CLASS_$_WGWidgetGroupViewController
__ Widgets: _WGWidgetViewControllerAddRequestBundleIdentifierKey
__ Widgets: _WGWidgetViewControllerAddRequestNotification
__ WorkflowUIServices: _OBJC_CLASS_$_WFWidgetConfigurationOptions
__ WorkflowUIServices: _OBJC_CLASS_$_WFWidgetConfigurationViewController
__ WorkflowUIServices: _WFWidgetGetDefaultColors
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logging_enabled
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGIsDeviceOfType
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atanf
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _modf
__ libSystem.B.dylib: _nexttoward
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _reallocf
__ libSystem.B.dylib: _snprintf
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SBHAddWidgetDetailSheetViewController : SBHAddWidgetSheetViewControllerBase <BSUIScrollViewDelegate, SBHAddWidgetDetailsSheetPageViewControllerDelegate, SBHWidgetSheetViewControlling>
 @property  MTMaterialView *backgroundView
 @property  MTMaterialView *magicPocketBackgroundView
 @property  UIButton *closeButton
 @property  SBHAddWidgetDetailSheetTitleView *titleView
 @property  UIStackView *widgetInfoStackView
 @property  BSUIScrollView *widgetInfoScrollView
 @property  BSUIScrollView *widgetGalleryScrollView
 @property  UIStackView *widgetGalleryStackView
 @property  SBHAddWidgetButton *addButton
 @property  UIPageControl *pageControl
 @property  SBFFluidBehaviorSettings *widgetInfoScrollViewAnimationSettings
 @property  UIView *containerView
 @property  BSUIScrollView *contentScrollView
 @property  UIStackView *contentStackView
 @property  UIView *headerView
 @property  UIView *addButtonContainerView
 @property  UIView *addButtonStackSpacerView
 @property  NSLayoutConstraint *topSpacingConstraint
 @property  NSLayoutConstraint *pageControlTopConstraint
 @property  NSLayoutConstraint *addButtonTopConstraint
 @property  NSLayoutConstraint *addButtonBottomConstraint
 @property  NSLayoutConstraint *widgetGalleryHeightConstraint
 @property  NSMutableArray *pages
 @property  BOOL scrollingInitiatedByInfoScrollView
 @property  <SBHWidgetSheetViewControllerPresenter> *presenter
 @property  SBHApplicationWidgetCollection *applicationWidgetCollection
 @property  SBHWidgetSearchController *externalSearchController
 @property  SBHAddWidgetDetailsSheetPageViewController *currentPage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SBHWidgetDragHandling> *widgetDragHandler
 @property  NSMutableDictionary *userInfo

  // instance methods
  -[SBHAddWidgetDetailSheetViewController _contentSizeCategoryDidChange:]
  -[SBHAddWidgetDetailSheetViewController updateViewConstraints]
  -[SBHAddWidgetDetailSheetViewController contentScrollView]
  -[SBHAddWidgetDetailSheetViewController pageControl]
  -[SBHAddWidgetDetailSheetViewController presenter]
  -[SBHAddWidgetDetailSheetViewController setPresenter:]
  -[SBHAddWidgetDetailSheetViewController traitCollectionDidChange:]
  -[SBHAddWidgetDetailSheetViewController pages]
  -[SBHAddWidgetDetailSheetViewController titleView]
  -[SBHAddWidgetDetailSheetViewController containerView]
  -[SBHAddWidgetDetailSheetViewController .cxx_destruct]
  -[SBHAddWidgetDetailSheetViewController addButton]
  -[SBHAddWidgetDetailSheetViewController closeButtonTapped:]
  -[SBHAddWidgetDetailSheetViewController setTitleView:]
  -[SBHAddWidgetDetailSheetViewController _createViews]
  -[SBHAddWidgetDetailSheetViewController shouldAutomaticallyForwardAppearanceMethods]
  -[SBHAddWidgetDetailSheetViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBHAddWidgetDetailSheetViewController setHeaderView:]
  -[SBHAddWidgetDetailSheetViewController _createConstraints]
  -[SBHAddWidgetDetailSheetViewController scrollViewDidScroll:]
  -[SBHAddWidgetDetailSheetViewController setContainerView:]
  -[SBHAddWidgetDetailSheetViewController viewDidLayoutSubviews]
  -[SBHAddWidgetDetailSheetViewController headerView]
  -[SBHAddWidgetDetailSheetViewController viewWillAppear:]
  -[SBHAddWidgetDetailSheetViewController _updateConstraintConstants]
  -[SBHAddWidgetDetailSheetViewController setPageControl:]
  -[SBHAddWidgetDetailSheetViewController setBackgroundView:]
  -[SBHAddWidgetDetailSheetViewController _updateLayoutMargins]
  -[SBHAddWidgetDetailSheetViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBHAddWidgetDetailSheetViewController setCloseButton:]
  -[SBHAddWidgetDetailSheetViewController userInfo]
  -[SBHAddWidgetDetailSheetViewController dealloc]
  -[SBHAddWidgetDetailSheetViewController currentPage]
  -[SBHAddWidgetDetailSheetViewController closeButton]
  -[SBHAddWidgetDetailSheetViewController pageControlChanged:]
  -[SBHAddWidgetDetailSheetViewController loadView]
  -[SBHAddWidgetDetailSheetViewController viewDidDisappear:]
  -[SBHAddWidgetDetailSheetViewController backgroundView]
  -[SBHAddWidgetDetailSheetViewController _addPage:]
  -[SBHAddWidgetDetailSheetViewController setPages:]
  -[SBHAddWidgetDetailSheetViewController setContentScrollView:]
  -[SBHAddWidgetDetailSheetViewController addButtonTapped:]
  -[SBHAddWidgetDetailSheetViewController _scrollToPageIndex:animated:]
  -[SBHAddWidgetDetailSheetViewController _newBackgroundView]
  -[SBHAddWidgetDetailSheetViewController _updateMaterialRecipeForBackgroundView:]
  -[SBHAddWidgetDetailSheetViewController applicationWidgetCollection]
  -[SBHAddWidgetDetailSheetViewController _materialViewForVisualStyling]
  -[SBHAddWidgetDetailSheetViewController _minumumWidgetGalleryScrollViewHeight]
  -[SBHAddWidgetDetailSheetViewController _updateControlsForContentOffset:animated:]
  -[SBHAddWidgetDetailSheetViewController _updateParallaxEffect]
  -[SBHAddWidgetDetailSheetViewController _updatePageViewControllerAppearanceForNormalScroll]
  -[SBHAddWidgetDetailSheetViewController _scrollMainScrollViewToMatchInfoScrollViewIfNeeded]
  -[SBHAddWidgetDetailSheetViewController _updateBackgroundRecipe]
  -[SBHAddWidgetDetailSheetViewController _pageIndexAtContentOffset:]
  -[SBHAddWidgetDetailSheetViewController _updatePageViewControllerAppearanceWithAppearedBlock:]
  -[SBHAddWidgetDetailSheetViewController widgetInfoScrollViewAnimationSettings]
  -[SBHAddWidgetDetailSheetViewController widgetInfoViews]
  -[SBHAddWidgetDetailSheetViewController _currentGalleryItem]
  -[SBHAddWidgetDetailSheetViewController _closestPageWithGalleryItem:]
  -[SBHAddWidgetDetailSheetViewController _updatePageViewControllerAppearanceForFastScrollToTargetIndex:]
  -[SBHAddWidgetDetailSheetViewController _updateStackViewForSizeCategory]
  -[SBHAddWidgetDetailSheetViewController widgetDragHandler]
  -[SBHAddWidgetDetailSheetViewController backgroundViewMatchingMaterialBeneathPageViewController:]
  -[SBHAddWidgetDetailSheetViewController configureBackgroundView:matchingMaterialBeneathPageViewController:]
  -[SBHAddWidgetDetailSheetViewController setApplicationWidgetCollection:]
  -[SBHAddWidgetDetailSheetViewController configureForGalleryItem:selectedSizeClass:]
  -[SBHAddWidgetDetailSheetViewController externalSearchController]
  -[SBHAddWidgetDetailSheetViewController setExternalSearchController:]
  -[SBHAddWidgetDetailSheetViewController magicPocketBackgroundView]
  -[SBHAddWidgetDetailSheetViewController setMagicPocketBackgroundView:]
  -[SBHAddWidgetDetailSheetViewController widgetInfoStackView]
  -[SBHAddWidgetDetailSheetViewController setWidgetInfoStackView:]
  -[SBHAddWidgetDetailSheetViewController widgetInfoScrollView]
  -[SBHAddWidgetDetailSheetViewController setWidgetInfoScrollView:]
  -[SBHAddWidgetDetailSheetViewController widgetGalleryScrollView]
  -[SBHAddWidgetDetailSheetViewController setWidgetGalleryScrollView:]
  -[SBHAddWidgetDetailSheetViewController widgetGalleryStackView]
  -[SBHAddWidgetDetailSheetViewController setWidgetGalleryStackView:]
  -[SBHAddWidgetDetailSheetViewController setAddButton:]
  -[SBHAddWidgetDetailSheetViewController setWidgetInfoScrollViewAnimationSettings:]
  -[SBHAddWidgetDetailSheetViewController contentStackView]
  -[SBHAddWidgetDetailSheetViewController setContentStackView:]
  -[SBHAddWidgetDetailSheetViewController addButtonContainerView]
  -[SBHAddWidgetDetailSheetViewController setAddButtonContainerView:]
  -[SBHAddWidgetDetailSheetViewController addButtonStackSpacerView]
  -[SBHAddWidgetDetailSheetViewController setAddButtonStackSpacerView:]
  -[SBHAddWidgetDetailSheetViewController topSpacingConstraint]
  -[SBHAddWidgetDetailSheetViewController setTopSpacingConstraint:]
  -[SBHAddWidgetDetailSheetViewController pageControlTopConstraint]
  -[SBHAddWidgetDetailSheetViewController setPageControlTopConstraint:]
  -[SBHAddWidgetDetailSheetViewController addButtonTopConstraint]
  -[SBHAddWidgetDetailSheetViewController setAddButtonTopConstraint:]
  -[SBHAddWidgetDetailSheetViewController addButtonBottomConstraint]
  -[SBHAddWidgetDetailSheetViewController setAddButtonBottomConstraint:]
  -[SBHAddWidgetDetailSheetViewController widgetGalleryHeightConstraint]
  -[SBHAddWidgetDetailSheetViewController setWidgetGalleryHeightConstraint:]
  -[SBHAddWidgetDetailSheetViewController scrollingInitiatedByInfoScrollView]
  -[SBHAddWidgetDetailSheetViewController setScrollingInitiatedByInfoScrollView:]


SBHAddWidgetDetailSheetTitleView : UIView <SBHAddWidgetSheetAppCollectionViewCellConfigurable>
 @property  UILabel *textLabel
 @property  UIImageView *imageView
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  {NSDirectionalEdgeInsets=dddd} contentInsets

  // instance methods
  -[SBHAddWidgetDetailSheetTitleView _contentSizeCategoryDidChange:]
  -[SBHAddWidgetDetailSheetTitleView imageView]
  -[SBHAddWidgetDetailSheetTitleView traitCollectionDidChange:]
  -[SBHAddWidgetDetailSheetTitleView contentInsets]
  -[SBHAddWidgetDetailSheetTitleView .cxx_destruct]
  -[SBHAddWidgetDetailSheetTitleView iconImageInfo]
  -[SBHAddWidgetDetailSheetTitleView setTextLabel:]
  -[SBHAddWidgetDetailSheetTitleView textLabel]
  -[SBHAddWidgetDetailSheetTitleView dealloc]
  -[SBHAddWidgetDetailSheetTitleView setImageView:]
  -[SBHAddWidgetDetailSheetTitleView intrinsicContentSize]
  -[SBHAddWidgetDetailSheetTitleView _textLabelFont]
  -[SBHAddWidgetDetailSheetTitleView initWithIconImageInfo:contentInsets:]
  -[SBHAddWidgetDetailSheetTitleView _textLabelNumberOfLines]
  -[SBHAddWidgetDetailSheetTitleView setAddWidgetSheetAppCollectionViewCellTitle:]
  -[SBHAddWidgetDetailSheetTitleView setAddWidgetSheetAppCollectionViewCellIconImage:]


SBHPageManagementListTapGestureRecognizer : UIGestureRecognizer
 @property  UITouch *activeTouch

  // instance methods
  -[SBHPageManagementListTapGestureRecognizer .cxx_destruct]
  -[SBHPageManagementListTapGestureRecognizer touchesBegan:withEvent:]
  -[SBHPageManagementListTapGestureRecognizer touchesMoved:withEvent:]
  -[SBHPageManagementListTapGestureRecognizer reset]
  -[SBHPageManagementListTapGestureRecognizer touchesCancelled:withEvent:]
  -[SBHPageManagementListTapGestureRecognizer setActiveTouch:]
  -[SBHPageManagementListTapGestureRecognizer activeTouch]
  -[SBHPageManagementListTapGestureRecognizer touchesEnded:withEvent:]


SBCrossfadeIconZoomAnimator : SBScaleIconZoomAnimator
 @property  SBHCrossfadeZoomSettings *settings
 @property  BOOL performsTrueCrossfade
 @property  BOOL masksCorners

  // instance methods
  -[SBCrossfadeIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBCrossfadeIconZoomAnimator performsTrueCrossfade]
  -[SBCrossfadeIconZoomAnimator _cleanupAnimation]
  -[SBCrossfadeIconZoomAnimator setMasksCorners:]
  -[SBCrossfadeIconZoomAnimator _setAnimationFraction:]
  -[SBCrossfadeIconZoomAnimator .cxx_destruct]
  -[SBCrossfadeIconZoomAnimator _cleanupZoom]
  -[SBCrossfadeIconZoomAnimator _zoomedFrame]
  -[SBCrossfadeIconZoomAnimator _zoomedIconCenter]
  -[SBCrossfadeIconZoomAnimator _numberOfSignificantAnimations]
  -[SBCrossfadeIconZoomAnimator masksCorners]
  -[SBCrossfadeIconZoomAnimator _prepareAnimation]
  -[SBCrossfadeIconZoomAnimator _delayedForRotation]
  -[SBCrossfadeIconZoomAnimator maxHomeScreenZoomScale]
  -[SBCrossfadeIconZoomAnimator _appSnapshotCornerRadiusForFraction:]
  -[SBCrossfadeIconZoomAnimator setPerformsTrueCrossfade:]
  -[SBCrossfadeIconZoomAnimator fadesHomeScreen]
  -[SBCrossfadeIconZoomAnimator _assertCrossfadeViewSizeIfNecessary]
  -[SBCrossfadeIconZoomAnimator initWithFolderController:crossfadeView:icon:]


SBHHomeScreenDomain : PTDomain
  // class methods
  +[SBHHomeScreenDomain domainGroupName]
  +[SBHHomeScreenDomain rootSettings]
  +[SBHHomeScreenDomain domainName]
  +[SBHHomeScreenDomain rootSettingsClass]


SBHHomeScreenUsageMonitor : NSObject <SBFolderObserver, SBLeafIconObserver, BSDescriptionProviding>
 @property  SBHIconModel *iconModel
 @property  SBRootFolder *rootFolder
 @property  SBFolderController *rootFolderController
 @property  BOOL delayedLayoutDidChangeNotification
 @property  unsigned long homeScreenDisappearanceReasons
 @property  BOOL currentPageIndexDidChangeWhileScrolling
 @property  SBHIconManager *iconManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHHomeScreenUsageMonitor setRootFolderController:]
  -[SBHHomeScreenUsageMonitor setRootFolder:]
  -[SBHHomeScreenUsageMonitor folder:didReplaceIcon:withIcon:]
  -[SBHHomeScreenUsageMonitor folder:didRemoveLists:atIndexes:]
  -[SBHHomeScreenUsageMonitor homeScreenDisappearanceReasons]
  -[SBHHomeScreenUsageMonitor leafIcon:didAddIconDataSource:]
  -[SBHHomeScreenUsageMonitor iconManagerDidChangeIconModel:]
  -[SBHHomeScreenUsageMonitor iconModelDidLayOut:]
  -[SBHHomeScreenUsageMonitor isContentVisible]
  -[SBHHomeScreenUsageMonitor listModelIndexForRootFolderController:]
  -[SBHHomeScreenUsageMonitor .cxx_destruct]
  -[SBHHomeScreenUsageMonitor noteCurrentPageIndexChanged:]
  -[SBHHomeScreenUsageMonitor folder:didMoveList:fromIndex:toIndex:]
  -[SBHHomeScreenUsageMonitor folder:listHiddenDidChange:]
  -[SBHHomeScreenUsageMonitor noteIconManagerContentOccludedChanged]
  -[SBHHomeScreenUsageMonitor iconModel]
  -[SBHHomeScreenUsageMonitor noteIconManagerCoverSheetTodayViewDidDisappear]
  -[SBHHomeScreenUsageMonitor iconManager]
  -[SBHHomeScreenUsageMonitor succinctDescriptionBuilder]
  -[SBHHomeScreenUsageMonitor noteLayoutChanged]
  -[SBHHomeScreenUsageMonitor leafIcon:didChangeActiveDataSource:]
  -[SBHHomeScreenUsageMonitor noteUserDislikedWidgetIconStackSuggestion:]
  -[SBHHomeScreenUsageMonitor leafIcon:didRemoveIconDataSource:]
  -[SBHHomeScreenUsageMonitor iconManagerDidChangeRootViewController:]
  -[SBHHomeScreenUsageMonitor noteWidgetDiscoverabilityDidAcceptSuggestion:]
  -[SBHHomeScreenUsageMonitor noteIconManagerRootFolderControllerViewDidDisappear]
  -[SBHHomeScreenUsageMonitor noteIconManagerOverlayTodayViewDidAppear]
  -[SBHHomeScreenUsageMonitor noteWidgetDiscoverabilityDidEnterEditingMode]
  -[SBHHomeScreenUsageMonitor noteWidgetDiscoverabilityDidRejectSuggestion:]
  -[SBHHomeScreenUsageMonitor setIconModel:]
  -[SBHHomeScreenUsageMonitor noteWidgetDiscoverabilityStarted]
  -[SBHHomeScreenUsageMonitor noteWidgetIconAdded:]
  -[SBHHomeScreenUsageMonitor iconManagerEditingDidChange:]
  -[SBHHomeScreenUsageMonitor noteWidgetIconRemoved:]
  -[SBHHomeScreenUsageMonitor descriptionBuilderWithMultilinePrefix:]
  -[SBHHomeScreenUsageMonitor notifyRootFolderControllerViewWillAppear]
  -[SBHHomeScreenUsageMonitor resetIconModel]
  -[SBHHomeScreenUsageMonitor rootFolderController]
  -[SBHHomeScreenUsageMonitor descriptionWithMultilinePrefix:]
  -[SBHHomeScreenUsageMonitor updateVisibilityReasons]
  -[SBHHomeScreenUsageMonitor setCurrentPageIndexDidChangeWhileScrolling:]
  -[SBHHomeScreenUsageMonitor setDelayedLayoutDidChangeNotification:]
  -[SBHHomeScreenUsageMonitor succinctDescription]
  -[SBHHomeScreenUsageMonitor rootFolder]
  -[SBHHomeScreenUsageMonitor addObserver:]
  -[SBHHomeScreenUsageMonitor currentPageIndexDidChangeWhileScrolling]
  -[SBHHomeScreenUsageMonitor delayedLayoutDidChangeNotification]
  -[SBHHomeScreenUsageMonitor folder:didAddIcons:removedIcons:]
  -[SBHHomeScreenUsageMonitor noteIconManagerCoverSheetTodayViewDidAppear]
  -[SBHHomeScreenUsageMonitor noteIconManagerOverlayTodayViewDidDisappear]
  -[SBHHomeScreenUsageMonitor noteIconManagerRootFolderControllerViewWillAppear]
  -[SBHHomeScreenUsageMonitor noteIconManagerTodayViewAtLocation:didScrollToRevealIcons:]
  -[SBHHomeScreenUsageMonitor dealloc]
  -[SBHHomeScreenUsageMonitor noteUserAddedWidgetIconStackSuggestion:]
  -[SBHHomeScreenUsageMonitor noteUserDislikedSiriSuggestionOnWidgetIconStackSuggestion:]
  -[SBHHomeScreenUsageMonitor noteUserTappedWidgetIcon:withURL:]
  -[SBHHomeScreenUsageMonitor removeObserver:]
  -[SBHHomeScreenUsageMonitor noteUserConfiguredIcon:]
  -[SBHHomeScreenUsageMonitor noteWidgetIconStack:changedActiveWidget:]
  -[SBHHomeScreenUsageMonitor notifyForEveryHomeScreenWidgetVisibility]
  -[SBHHomeScreenUsageMonitor initWithIconManager:]
  -[SBHHomeScreenUsageMonitor resetRootFolderController]
  -[SBHHomeScreenUsageMonitor rootFolderControllerCurrentPageIndexDidChange:]
  -[SBHHomeScreenUsageMonitor rootFolderControllerDidEndScrolling:]
  -[SBHHomeScreenUsageMonitor folder:didAddList:]
  -[SBHHomeScreenUsageMonitor setHomeScreenDisappearanceReasons:]
  -[SBHHomeScreenUsageMonitor notifyForEveryTodayViewWidgetVisibilityOnCoverSheet:]
  -[SBHHomeScreenUsageMonitor updateVisibleWidgetIcons]


SBHLibrarySearchSimplifiedBackgroundView : SBHVisualStylingView
  // class methods
  +[SBHLibrarySearchSimplifiedBackgroundView visualStyleSetNameForUserInterfaceStyle:]


SBHIconTableViewCell : UITableViewCell <SBHLegibility>
 @property  UILabel *iconNameLabel
 @property  UIView *iconViewContainerView
 @property  UIView *labelContainerView
 @property  NSArray *iconViewContainerViewConstraints
 @property  SBIconView *iconView
 @property  SBIcon *icon
 @property  NSString *iconDescription
 @property  _UILegibilitySettings *legibilitySettings

  // class methods
  +[SBHIconTableViewCell defaultTableViewCellHorizontalMargin]
  +[SBHIconTableViewCell defaultTableViewCellHeightForIconImageInfo:]
  +[SBHIconTableViewCell defaultTableViewCellSeparatorInsetsForIconImageInfo:]

  // instance methods
  -[SBHIconTableViewCell setHighlighted:]
  -[SBHIconTableViewCell icon]
  -[SBHIconTableViewCell traitCollectionDidChange:]
  -[SBHIconTableViewCell setHighlighted:animated:]
  -[SBHIconTableViewCell .cxx_destruct]
  -[SBHIconTableViewCell _updateTitleLabelFont]
  -[SBHIconTableViewCell setLegibilitySettings:]
  -[SBHIconTableViewCell prepareForReuse]
  -[SBHIconTableViewCell initWithStyle:reuseIdentifier:]
  -[SBHIconTableViewCell iconView]
  -[SBHIconTableViewCell setIconView:]
  -[SBHIconTableViewCell intrinsicContentSize]
  -[SBHIconTableViewCell legibilitySettings]
  -[SBHIconTableViewCell _updateHighlightBackgroundView]
  -[SBHIconTableViewCell _resetContent]
  -[SBHIconTableViewCell _resetIconView]
  -[SBHIconTableViewCell iconViewContainerView]
  -[SBHIconTableViewCell setIconViewContainerViewConstraints:]
  -[SBHIconTableViewCell iconViewContainerViewConstraints]
  -[SBHIconTableViewCell _updateIconNameLabelForDisplayName:labelAccessoryType:]
  -[SBHIconTableViewCell _teardownIconLabelAccessoryView]
  -[SBHIconTableViewCell iconNameLabel]
  -[SBHIconTableViewCell _setLabelAccessoryType:]
  -[SBHIconTableViewCell configureCellForIcon:]
  -[SBHIconTableViewCell iconDescription]
  -[SBHIconTableViewCell labelContainerView]


SBHRippleSimulation : NSObject
 @property  BOOL settled

  // instance methods
  -[SBHRippleSimulation clear]
  -[SBHRippleSimulation isSettled]
  -[SBHRippleSimulation setSettled:]
  -[SBHRippleSimulation step:]
  -[SBHRippleSimulation dealloc]
  -[SBHRippleSimulation convertGridToRippleCoordinate:]
  -[SBHRippleSimulation initWithRows:columns:resolution:style:]
  -[SBHRippleSimulation createRippleAtGridCoordinate:strength:]
  -[SBHRippleSimulation zPositionForGridCoordinate:]
  -[SBHRippleSimulation transformForGridCoordinate:]


SBHIconEditingSettings : PTSettings
 @property  PTOutlet *resetHomeScreenLayoutOutlet
 @property  BOOL showIndexLabels
 @property  BOOL showDragPlatterIconBorder
 @property  double editingLiftDelay
 @property  double longPressToEditDuration
 @property  BOOL waitForPause
 @property  double defaultPauseDuration
 @property  double fastEditingPauseDuration
 @property  double defaultSpringDampingRatio
 @property  double defaultSpringDuration
 @property  double clusterFastestDuration
 @property  double clusterSlowestDuration
 @property  double clusterMiddleFastDuration
 @property  double clusterMiddleSlowDuration
 @property  long long overrideAnimationType

  // class methods
  +[SBHIconEditingSettings settingsControllerModule]

  // instance methods
  -[SBHIconEditingSettings resetHomeScreenLayoutOutlet]
  -[SBHIconEditingSettings overrideAnimationType]
  -[SBHIconEditingSettings setClusterMiddleFastDuration:]
  -[SBHIconEditingSettings clusterMiddleSlowDuration]
  -[SBHIconEditingSettings setWaitForPause:]
  -[SBHIconEditingSettings .cxx_destruct]
  -[SBHIconEditingSettings setDefaultPauseDuration:]
  -[SBHIconEditingSettings setDefaultValues]
  -[SBHIconEditingSettings defaultSpringDuration]
  -[SBHIconEditingSettings showIndexLabels]
  -[SBHIconEditingSettings setShowIndexLabels:]
  -[SBHIconEditingSettings showDragPlatterIconBorder]
  -[SBHIconEditingSettings clusterSlowestDuration]
  -[SBHIconEditingSettings setClusterFastestDuration:]
  -[SBHIconEditingSettings setDefaultSpringDuration:]
  -[SBHIconEditingSettings setLongPressToEditDuration:]
  -[SBHIconEditingSettings defaultPauseDuration]
  -[SBHIconEditingSettings setResetHomeScreenLayoutOutlet:]
  -[SBHIconEditingSettings setFastEditingPauseDuration:]
  -[SBHIconEditingSettings clusterMiddleFastDuration]
  -[SBHIconEditingSettings fastEditingPauseDuration]
  -[SBHIconEditingSettings setClusterSlowestDuration:]
  -[SBHIconEditingSettings waitForPause]
  -[SBHIconEditingSettings setDefaultSpringDampingRatio:]
  -[SBHIconEditingSettings defaultSpringDampingRatio]
  -[SBHIconEditingSettings setOverrideAnimationType:]
  -[SBHIconEditingSettings setShowDragPlatterIconBorder:]
  -[SBHIconEditingSettings setEditingLiftDelay:]
  -[SBHIconEditingSettings clusterFastestDuration]
  -[SBHIconEditingSettings setClusterMiddleSlowDuration:]
  -[SBHIconEditingSettings longPressToEditDuration]
  -[SBHIconEditingSettings editingLiftDelay]


SBIconZoomAnimator : SBIconAnimator <SBIconIndexNodeObserver>
 @property  <SBIconZoomAnimationContaining> *animationContainer
 @property  SBIconListView *iconListView
 @property  SBIconListView *dockListView
 @property  NSSet *criticalIconNodeIdentifiers
 @property  double startTime
 @property  SBHIconZoomSettings *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBIconZoomAnimator _cleanupAnimation]
  -[SBIconZoomAnimator _setIconListView:]
  -[SBIconZoomAnimator enumerateIconsAndIconViewsWithHandler:]
  -[SBIconZoomAnimator cleanupZoom]
  -[SBIconZoomAnimator _invalidateAnimationForSignificantIconModelChangesForReason:]
  -[SBIconZoomAnimator iconViewForIcon:]
  -[SBIconZoomAnimator _applyLabelAlphaFraction:]
  -[SBIconZoomAnimator listIconCount]
  -[SBIconZoomAnimator _setDockListView:]
  -[SBIconZoomAnimator _setAnimationFraction:]
  -[SBIconZoomAnimator .cxx_destruct]
  -[SBIconZoomAnimator _cleanupZoom]
  -[SBIconZoomAnimator _iconModelDidReload:]
  -[SBIconZoomAnimator _numberOfSignificantAnimations]
  -[SBIconZoomAnimator _iconModelDidRelayout:]
  -[SBIconZoomAnimator _clearObservers]
  -[SBIconZoomAnimator _prepareAnimation]
  -[SBIconZoomAnimator node:didRemoveContainedNodeIdentifiers:]
  -[SBIconZoomAnimator criticalIconNodeIdentifiers]
  -[SBIconZoomAnimator iconListView]
  -[SBIconZoomAnimator dockIconCount]
  -[SBIconZoomAnimator isPastPointOfNoReturn]
  -[SBIconZoomAnimator initWithAnimationContainer:]
  -[SBIconZoomAnimator nodeDidMoveContainedNodes:]
  -[SBIconZoomAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[SBIconZoomAnimator setCriticalIconNodeIdentifiers:]
  -[SBIconZoomAnimator startTime]
  -[SBIconZoomAnimator dealloc]
  -[SBIconZoomAnimator dockListView]
  -[SBIconZoomAnimator node:didAddContainedNodeIdentifiers:]


SBIconFadeAnimator : SBIconAnimator
 @property  BOOL fadesReferenceView

  // instance methods
  -[SBIconFadeAnimator _cleanupAnimation]
  -[SBIconFadeAnimator _setAnimationFraction:]
  -[SBIconFadeAnimator .cxx_destruct]
  -[SBIconFadeAnimator _numberOfSignificantAnimations]
  -[SBIconFadeAnimator _prepareAnimation]
  -[SBIconFadeAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[SBIconFadeAnimator _applyAlphaForFraction:]
  -[SBIconFadeAnimator fadesReferenceView]
  -[SBIconFadeAnimator initWithAnimationContainer:crossfadeView:]
  -[SBIconFadeAnimator setFadesReferenceView:]


SBHFocusProxyView : UIView
 @property  UIView<SBHFocusProxyable> *proxyableView
 @property  double padding

  // instance methods
  -[SBHFocusProxyView .cxx_destruct]
  -[SBHFocusProxyView padding]
  -[SBHFocusProxyView setFrame:]
  -[SBHFocusProxyView canBecomeFocused]
  -[SBHFocusProxyView didUpdateFocusInContext:withAnimationCoordinator:]
  -[SBHFocusProxyView initWithProxyableView:]
  -[SBHFocusProxyView proxyableView]


SBWorkspaceInteractionContext : NSObject
 @property  UIInteractionProgress *interactionProgress
 @property  UIGestureRecognizer *gestureRecognizer

  // instance methods
  -[SBWorkspaceInteractionContext gestureRecognizer]
  -[SBWorkspaceInteractionContext interactionProgress]
  -[SBWorkspaceInteractionContext .cxx_destruct]
  -[SBWorkspaceInteractionContext initWithInteractionProgress:]
  -[SBWorkspaceInteractionContext initWithGestureRecognizer:]


SBFolderIconZoomAnimator : SBScaleIconZoomAnimator <SBSearchGestureObserver>
 @property  SBSearchGesture *searchGesture
 @property  BOOL isAnimatingInFloatingDock
 @property  SBHFolderZoomSettings *settings
 @property  SBFFluidBehaviorSettings *dockAnimationSettings
 @property  SBFolderIcon *targetIcon
 @property  SBIconView *targetIconView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFolderIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBFolderIconZoomAnimator searchGesture:changedPercentComplete:]
  -[SBFolderIconZoomAnimator searchGesture:startedShowing:]
  -[SBFolderIconZoomAnimator setSearchGesture:]
  -[SBFolderIconZoomAnimator searchGesture]
  -[SBFolderIconZoomAnimator _cleanupAnimation]
  -[SBFolderIconZoomAnimator setDockAnimationSettings:]
  -[SBFolderIconZoomAnimator _setupMatchMoveAnimation]
  -[SBFolderIconZoomAnimator _setAnimationFraction:]
  -[SBFolderIconZoomAnimator .cxx_destruct]
  -[SBFolderIconZoomAnimator shouldMatchMoveWithDock]
  -[SBFolderIconZoomAnimator defaultTargetIconContainerView]
  -[SBFolderIconZoomAnimator _zoomedFrame]
  -[SBFolderIconZoomAnimator targetIconView]
  -[SBFolderIconZoomAnimator _numberOfSignificantAnimations]
  -[SBFolderIconZoomAnimator _updateDockMatchMoveWithFraction:]
  -[SBFolderIconZoomAnimator setIsAnimatingInFloatingDock:]
  -[SBFolderIconZoomAnimator _prepareAnimation]
  -[SBFolderIconZoomAnimator isAnimatingInFloatingDock]
  -[SBFolderIconZoomAnimator _forceSquareZoomDimension]
  -[SBFolderIconZoomAnimator initWithAnimationContainer:innerFolderController:folderIcon:]
  -[SBFolderIconZoomAnimator _setupMatchMoveWithDock]
  -[SBFolderIconZoomAnimator _referenceFolderIconView]
  -[SBFolderIconZoomAnimator _setupMatchMoveWithDockWithTargetIconCenter:targetIconAnchor:]
  -[SBFolderIconZoomAnimator dockAnimationSettings]
  -[SBFolderIconZoomAnimator _setupCounterDockMatchMoveAnimationWithOffset:layer:additive:]


_SBInnerFolderIconZoomAnimator : SBIconZoomAnimator
 @property  SBHFolderZoomSettings *settings

  // instance methods
  -[_SBInnerFolderIconZoomAnimator _cleanupAnimation]
  -[_SBInnerFolderIconZoomAnimator _setAnimationFraction:]
  -[_SBInnerFolderIconZoomAnimator .cxx_destruct]
  -[_SBInnerFolderIconZoomAnimator _numberOfSignificantAnimations]
  -[_SBInnerFolderIconZoomAnimator _prepareAnimation]
  -[_SBInnerFolderIconZoomAnimator _applyIconCrossfadeForZoomFraction:]
  -[_SBInnerFolderIconZoomAnimator _applyIconTransformForZoomFraction:]
  -[_SBInnerFolderIconZoomAnimator _calculateZoomedOffset:scale:forIcon:withView:]
  -[_SBInnerFolderIconZoomAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[_SBInnerFolderIconZoomAnimator initWithFolderController:iconView:iconZoomScaleDimension:]


SBReversibleLayerPropertyAnimator : NSObject <CAAnimationDelegate, BSInvalidatable>
 @property  BOOL invalidated
 @property  BSAnimationSettings *currentAnimationSettings
 @property  @? completion
 @property  BOOL started
 @property  BOOL goingForward
 @property  unsigned long reversalCount
 @property  BOOL reversedWithNewSettings
 @property  unsigned long outstandingCAAnimationCompletionCount
 @property  NSString *forwardAnimationKey
 @property  NSString *forwardOffsetAnimationKey
 @property  NSMutableArray *reversalAnimationKeys
 @property  CALayer *layer
 @property  NSString *keyPath
 @property  double initialValue
 @property  double targetValue
 @property  BOOL reversed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBReversibleLayerPropertyAnimator layer]
  -[SBReversibleLayerPropertyAnimator setStarted:]
  -[SBReversibleLayerPropertyAnimator completion]
  -[SBReversibleLayerPropertyAnimator setCompletion:]
  -[SBReversibleLayerPropertyAnimator targetValue]
  -[SBReversibleLayerPropertyAnimator .cxx_destruct]
  -[SBReversibleLayerPropertyAnimator reverse]
  -[SBReversibleLayerPropertyAnimator animationDidStop:finished:]
  -[SBReversibleLayerPropertyAnimator initialValue]
  -[SBReversibleLayerPropertyAnimator setInvalidated:]
  -[SBReversibleLayerPropertyAnimator keyPath]
  -[SBReversibleLayerPropertyAnimator hasStarted]
  -[SBReversibleLayerPropertyAnimator invalidate]
  -[SBReversibleLayerPropertyAnimator invalidated]
  -[SBReversibleLayerPropertyAnimator forwardAnimationKey]
  -[SBReversibleLayerPropertyAnimator forwardOffsetAnimationKey]
  -[SBReversibleLayerPropertyAnimator reversalAnimationKeys]
  -[SBReversibleLayerPropertyAnimator _fireCompletionIfNecessary]
  -[SBReversibleLayerPropertyAnimator setCurrentAnimationSettings:]
  -[SBReversibleLayerPropertyAnimator _animateFromRelativeValue:toRelativeValue:withSettings:beginTime:]
  -[SBReversibleLayerPropertyAnimator setForwardOffsetAnimationKey:]
  -[SBReversibleLayerPropertyAnimator _animateFromValue:toValue:withSettings:beginTime:]
  -[SBReversibleLayerPropertyAnimator reversalCount]
  -[SBReversibleLayerPropertyAnimator currentAnimationSettings]
  -[SBReversibleLayerPropertyAnimator _reverseWithSettings:directionChangeSettings:headStart:]
  -[SBReversibleLayerPropertyAnimator setReversedWithNewSettings:]
  -[SBReversibleLayerPropertyAnimator hasReversedWithNewSettings]
  -[SBReversibleLayerPropertyAnimator setReversalCount:]
  -[SBReversibleLayerPropertyAnimator hasReversed]
  -[SBReversibleLayerPropertyAnimator _percentCompleteForAnimation:time:]
  -[SBReversibleLayerPropertyAnimator _animationWithSettings:]
  -[SBReversibleLayerPropertyAnimator _inputPercentCompleteForAnimation:outputPercentComplete:precision:]
  -[SBReversibleLayerPropertyAnimator isGoingForward]
  -[SBReversibleLayerPropertyAnimator _additiveAnimationForKeyPath:withSettings:beginTime:fromRelativeValue:toRelativeValue:]
  -[SBReversibleLayerPropertyAnimator outstandingCAAnimationCompletionCount]
  -[SBReversibleLayerPropertyAnimator setOutstandingCAAnimationCompletionCount:]
  -[SBReversibleLayerPropertyAnimator setForwardAnimationKey:]
  -[SBReversibleLayerPropertyAnimator _outputPercentCompleteForAnimation:inputPercentComplete:]
  -[SBReversibleLayerPropertyAnimator initWithLayer:keyPath:initialValue:targetValue:]
  -[SBReversibleLayerPropertyAnimator animateWithSettings:completion:]
  -[SBReversibleLayerPropertyAnimator reverseWithSettings:directionChangeSettings:headStart:]
  -[SBReversibleLayerPropertyAnimator setReversalAnimationKeys:]


SBHWidget : NSObject <CHSWidgetPersonality, SBLeafIconDataSource, NSCopying, NSSecureCoding, BSDescriptionProviding>
 @property  NSString *uniqueIdentifier
 @property  NSString *kind
 @property  NSString *extensionBundleIdentifier
 @property  NSString *containerBundleIdentifier
 @property  NSString *displayName
 @property  long long suggestionSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *configurationStorageIdentifier

  // class methods
  +[SBHWidget supportsSecureCoding]

  // instance methods
  -[SBHWidget copyWithSuggestionSource:]
  -[SBHWidget displayName]
  -[SBHWidget icon:displayNameForLocation:]
  -[SBHWidget uniqueIdentifier]
  -[SBHWidget initWithCoder:]
  -[SBHWidget icon:imageWithInfo:]
  -[SBHWidget priorityForIcon:]
  -[SBHWidget .cxx_destruct]
  -[SBHWidget containerBundleIdentifier]
  -[SBHWidget succinctDescriptionBuilder]
  -[SBHWidget initWithKind:extensionBundleIdentifier:containerBundleIdentifier:]
  -[SBHWidget extensionBundleIdentifier]
  -[SBHWidget descriptionBuilderWithMultilinePrefix:]
  -[SBHWidget copyWithUniqueIdentifier]
  -[SBHWidget isEqual:]
  -[SBHWidget iconSupportsConfiguration:]
  -[SBHWidget descriptionWithMultilinePrefix:]
  -[SBHWidget succinctDescription]
  -[SBHWidget matchesPersonality:]
  -[SBHWidget initWithUniqueIdentifier:kind:extensionBundleIdentifier:containerBundleIdentifier:]
  -[SBHWidget configurationStorageIdentifier]
  -[SBHWidget kind]
  -[SBHWidget initWithKind:extensionBundleIdentifier:]
  -[SBHWidget copyWithZone:]
  -[SBHWidget suggestionSource]
  -[SBHWidget encodeWithCoder:]
  -[SBHWidget resetDisplayName]


SBScaleIconZoomAnimator : SBIconZoomAnimator
 @property  SBReversibleLayerPropertyAnimator *homeScreenScaleAnimator
 @property  SBReversibleLayerPropertyAnimator *targetIconScaleXAnimator
 @property  SBReversibleLayerPropertyAnimator *targetIconScaleYAnimator
 @property  NSMutableArray *animationCompletions
 @property  <SBScaleIconZoomAnimationContaining> *animationContainer
 @property  SBIcon *targetIcon
 @property  SBIconView *referenceIconView
 @property  SBIconView *targetIconView
 @property  UIView *targetIconContainerView
 @property  UIView *defaultTargetIconContainerView
 @property  UIView *targetIconPositioningView
 @property  double zoomScale
 @property  double maxHomeScreenZoomScale
 @property  BOOL fadesHomeScreen
 @property  {CGPoint=dd} zoomScaleDimension
 @property  {CGPoint=dd} zoomedTargetIconCenter
 @property  {CGPoint=dd} targetIconCenter
 @property  SBHScaleZoomSettings *settings

  // class methods
  +[SBScaleIconZoomAnimator validateAnimationContainer:targetIcon:]

  // instance methods
  -[SBScaleIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBScaleIconZoomAnimator _cleanupAnimation]
  -[SBScaleIconZoomAnimator _homeScreenScaleForZoomFraction:]
  -[SBScaleIconZoomAnimator _configureTargetIconPositioningView:]
  -[SBScaleIconZoomAnimator animationCompletions]
  -[SBScaleIconZoomAnimator setTargetIconScaleXAnimator:]
  -[SBScaleIconZoomAnimator _targetIconScaleForZoomFraction:]
  -[SBScaleIconZoomAnimator zoomScale]
  -[SBScaleIconZoomAnimator zoomScaleDimension]
  -[SBScaleIconZoomAnimator targetIconPositioningView]
  -[SBScaleIconZoomAnimator homeScreenScaleAnimator]
  -[SBScaleIconZoomAnimator _setAnimationFraction:]
  -[SBScaleIconZoomAnimator _referenceIconImageCenter]
  -[SBScaleIconZoomAnimator .cxx_destruct]
  -[SBScaleIconZoomAnimator setHomeScreenScaleAnimator:]
  -[SBScaleIconZoomAnimator shouldMatchMoveWithDock]
  -[SBScaleIconZoomAnimator defaultTargetIconContainerView]
  -[SBScaleIconZoomAnimator _zoomedFrame]
  -[SBScaleIconZoomAnimator targetIconView]
  -[SBScaleIconZoomAnimator _zoomedIconCenter]
  -[SBScaleIconZoomAnimator setAnimationCompletions:]
  -[SBScaleIconZoomAnimator _numberOfSignificantAnimations]
  -[SBScaleIconZoomAnimator _applyIconGridFadeFraction:]
  -[SBScaleIconZoomAnimator zoomedTargetIconCenter]
  -[SBScaleIconZoomAnimator targetIconContainerView]
  -[SBScaleIconZoomAnimator referenceIconView]
  -[SBScaleIconZoomAnimator targetIconCenter]
  -[SBScaleIconZoomAnimator _prepareAnimation]
  -[SBScaleIconZoomAnimator targetIconScaleYAnimator]
  -[SBScaleIconZoomAnimator initWithAnimationContainer:targetIcon:]
  -[SBScaleIconZoomAnimator _setIconAlpha:]
  -[SBScaleIconZoomAnimator targetIconScaleXAnimator]
  -[SBScaleIconZoomAnimator targetIcon]
  -[SBScaleIconZoomAnimator _setZoomScale:]
  -[SBScaleIconZoomAnimator _zoomedVisualAltitude]
  -[SBScaleIconZoomAnimator _applyZoomFraction:]
  -[SBScaleIconZoomAnimator _applyVisualAltitudeFraction:]
  -[SBScaleIconZoomAnimator maxHomeScreenZoomScale]
  -[SBScaleIconZoomAnimator _forceSquareZoomDimension]
  -[SBScaleIconZoomAnimator setTargetIconScaleYAnimator:]
  -[SBScaleIconZoomAnimator fadesHomeScreen]


SBFloatingDockViewController : SBFTouchPassThroughViewController <SBIconListViewDragDelegate, SBIconListModelObserver, SBFolderControllerDelegate, SBFolderPresentingViewControllerDelegate, SBScaleIconZoomAnimationContaining, SBIconViewDelegate, SBIconViewProviding, SBFloatingDockViewDelegate, SBHLibraryViewControllerObserver, SBHModalLibraryPresenterContextProviding, SBHModalLibraryPresentationDelegate, SBHLibraryIndicatorIconDropInteractionContextProviding, SBUICoronaAnimationControllerParticipant, SBIconViewQuerying, SBIconLocationPresenting, BSDescriptionProviding>
 @property  SBHIconManager *iconManager
 @property  <SBIconViewProviding> *iconViewProvider
 @property  SBIconListModel *dockListModel
 @property  SBFloatingDockView *dockView
 @property  SBIconView *libraryPodIconView
 @property  SBHModalLibraryPresenter *libraryPresenter
 @property  SBFolderPresentingViewController *folderPresentingViewController
 @property  SBHomeScreenIconTransitionAnimator *currentFolderAnimator
 @property  NSMutableArray *currentExpandCompletions
 @property  NSMutableArray *currentCollapseCompletions
 @property  SBFTouchPassThroughView *scalingView
 @property  double lastDockHeight
 @property  SBHFloatingDockStyleConfiguration *underlyingPresentationStyleConfiguration
 @property  BOOL transitioningUnderlyingPresentationStyleConfiguration
 @property  SBHFloatingDockStyleConfiguration *transitionTargetUnderlyingPresentationStyleConfiguration
 @property  <SBFloatingDockViewControllerDelegate> *delegate
 @property  UIViewController<SBFloatingDockSuggestionsViewProviding> *suggestionsViewController
 @property  BOOL libraryPodIconEnabled
 @property  BOOL libraryPodIconVisible
 @property  SBHLibraryViewController *libraryViewController
 @property  UIViewController *overrideLibraryContainerViewController
 @property  BOOL editing
 @property  {CGSize=dd} maximumEditingIconSize
 @property  double contentHeight
 @property  double maximumContentHeight
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} floatingDockScreenFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} floatingDockScreenPresentationFrame
 @property  double preferredVerticalMargin
 @property  double requestedVerticalMargin
 @property  double translationFromFullyPresentedFrame
 @property  double maximumDockContinuousCornerRadius
 @property  double dockOffscreenProgress
 @property  BOOL wantsFastIconReordering
 @property  BOOL shouldIndicateImpossibleDrop
 @property  BOOL presentingFolder
 @property  SBFolderController *presentedFolderController
 @property  BOOL presentingLibraryInForeground
 @property  BOOL presentingLibrary
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHIconModel *iconModel
 @property  SBIconListView *currentIconListView
 @property  SBIconListView *dockIconListView
 @property  UIView *containerView
 @property  UIWindow *animationWindow
 @property  UIView *fallbackIconContainerView
 @property  NSArray *extraViewsContainers
 @property  NSArray *extraViews
 @property  BOOL shouldAnimateLastTwoViewsAsOne
 @property  BOOL shouldAnimateFirstTwoViewsAsOne
 @property  NSSet *presentedIconLocations

  // instance methods
  -[SBFloatingDockViewController presentLibraryAnimated:completion:]
  -[SBFloatingDockViewController folderController:didEndEditingTitle:]
  -[SBFloatingDockViewController dockView]
  -[SBFloatingDockViewController wantsFastIconReordering]
  -[SBFloatingDockViewController icon:touchMoved:]
  -[SBFloatingDockViewController scalingView]
  -[SBFloatingDockViewController iconViewForIcon:location:]
  -[SBFloatingDockViewController contentHeight]
  -[SBFloatingDockViewController iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFloatingDockViewController folderController:didBeginEditingTitle:]
  -[SBFloatingDockViewController icon:touchEnded:]
  -[SBFloatingDockViewController firstIconViewForIcon:excludingLocations:]
  -[SBFloatingDockViewController iconTouchBegan:]
  -[SBFloatingDockViewController focusEffectTypeForIconView:]
  -[SBFloatingDockViewController enumerateIconListViewsUsingBlock:]
  -[SBFloatingDockViewController customImageViewControllerForIconView:]
  -[SBFloatingDockViewController iconModelDidLayout:]
  -[SBFloatingDockViewController iconListView:iconDropSessionDidUpdate:]
  -[SBFloatingDockViewController folderController:iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBFloatingDockViewController iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBFloatingDockViewController iconListView:iconDropSessionDidExit:]
  -[SBFloatingDockViewController iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBFloatingDockViewController iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFloatingDockViewController iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFloatingDockViewController fallbackIconContainerView]
  -[SBFloatingDockViewController iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFloatingDockViewController iconViewCanBeginDrags:]
  -[SBFloatingDockViewController folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFloatingDockViewController iconListView:iconViewForDroppingIconDragItem:proposedIconView:]
  -[SBFloatingDockViewController folderController:iconListView:iconDropSessionDidEnter:]
  -[SBFloatingDockViewController iconListView:canHandleIconDropSession:]
  -[SBFloatingDockViewController traitCollectionDidChange:]
  -[SBFloatingDockViewController configureIconView:forIcon:]
  -[SBFloatingDockViewController borrowScalingView]
  -[SBFloatingDockViewController iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFloatingDockViewController iconListView:performIconDrop:]
  -[SBFloatingDockViewController presentedIconLocations]
  -[SBFloatingDockViewController iconListView:iconDropSessionDidEnter:]
  -[SBFloatingDockViewController setEditing:animated:]
  -[SBFloatingDockViewController extraViewsContainers]
  -[SBFloatingDockViewController iconTapped:]
  -[SBFloatingDockViewController iconViewProvider]
  -[SBFloatingDockViewController iconManagerDidChangeIconModel:]
  -[SBFloatingDockViewController containerView]
  -[SBFloatingDockViewController .cxx_destruct]
  -[SBFloatingDockViewController iconViewCanBecomeFocused:]
  -[SBFloatingDockViewController iconList:didRemoveIcon:]
  -[SBFloatingDockViewController iconModel]
  -[SBFloatingDockViewController viewDidLoad]
  -[SBFloatingDockViewController folderController:iconListView:iconDropSessionDidUpdate:]
  -[SBFloatingDockViewController folderController:iconListView:canHandleIconDropSession:]
  -[SBFloatingDockViewController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBFloatingDockViewController iconManager]
  -[SBFloatingDockViewController acquireUseSnapshotAsBackgroundViewAssertionForReason:]
  -[SBFloatingDockViewController succinctDescriptionBuilder]
  -[SBFloatingDockViewController setLegibilitySettings:]
  -[SBFloatingDockViewController targetIconContainerView]
  -[SBFloatingDockViewController shouldAnimateLastTwoViewsAsOne]
  -[SBFloatingDockViewController setDelegate:]
  -[SBFloatingDockViewController viewDidAppear:]
  -[SBFloatingDockViewController _sizeCategoryDidChange:]
  -[SBFloatingDockViewController isIconViewRecycled:]
  -[SBFloatingDockViewController folderController:iconListView:performIconDrop:]
  -[SBFloatingDockViewController descriptionBuilderWithMultilinePrefix:]
  -[SBFloatingDockViewController firstIconViewForIcon:options:]
  -[SBFloatingDockViewController animationWindow]
  -[SBFloatingDockViewController maximumContentHeight]
  -[SBFloatingDockViewController iconList:didAddIcon:]
  -[SBFloatingDockViewController dequeueReusableIconViewOfClass:]
  -[SBFloatingDockViewController descriptionWithMultilinePrefix:]
  -[SBFloatingDockViewController currentIconListView]
  -[SBFloatingDockViewController folderController:iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBFloatingDockViewController folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFloatingDockViewController succinctDescription]
  -[SBFloatingDockViewController setLibraryViewController:]
  -[SBFloatingDockViewController coronaAnimationController:willAnimateCoronaTransitionWithAnimator:]
  -[SBFloatingDockViewController returnScalingView]
  -[SBFloatingDockViewController setEditing:]
  -[SBFloatingDockViewController folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFloatingDockViewController controllerClassForFolder:]
  -[SBFloatingDockViewController isDisplayingIconView:inLocation:]
  -[SBFloatingDockViewController firstIconViewForIcon:inLocations:]
  -[SBFloatingDockViewController viewDidLayoutSubviews]
  -[SBFloatingDockViewController setWantsFastIconReordering:]
  -[SBFloatingDockViewController dismissLibraryAnimated:completion:]
  -[SBFloatingDockViewController isDisplayingIcon:inLocations:]
  -[SBFloatingDockViewController suggestionsViewController]
  -[SBFloatingDockViewController extraViews]
  -[SBFloatingDockViewController isEditing]
  -[SBFloatingDockViewController delegate]
  -[SBFloatingDockViewController isDisplayingIconView:]
  -[SBFloatingDockViewController folderController:canChangeCurrentPageIndexToIndex:]
  -[SBFloatingDockViewController recycleIconView:]
  -[SBFloatingDockViewController setDockView:]
  -[SBFloatingDockViewController firstIconViewForIcon:]
  -[SBFloatingDockViewController folderControllerShouldClose:withPinchGesture:]
  -[SBFloatingDockViewController folderController:iconListView:iconDropSessionDidExit:]
  -[SBFloatingDockViewController folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFloatingDockViewController folderController:draggedIconShouldDropFromListView:]
  -[SBFloatingDockViewController folderControllerWillOpen:]
  -[SBFloatingDockViewController dealloc]
  -[SBFloatingDockViewController folderControllerShouldBeginEditing:withHaptic:]
  -[SBFloatingDockViewController folderController:accessibilityTintColorForScreenRect:]
  -[SBFloatingDockViewController folderControllerDidEndScrolling:]
  -[SBFloatingDockViewController folderControllerWillBeginScrolling:]
  -[SBFloatingDockViewController enumerateDisplayedIconViewsUsingBlock:]
  -[SBFloatingDockViewController folderController:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFloatingDockViewController setSuggestionsViewController:]
  -[SBFloatingDockViewController shouldAnimateFirstTwoViewsAsOne]
  -[SBFloatingDockViewController isDisplayingIcon:inLocation:]
  -[SBFloatingDockViewController viewDidDisappear:]
  -[SBFloatingDockViewController isDisplayingIcon:]
  -[SBFloatingDockViewController isPresentingIconLocation:]
  -[SBFloatingDockViewController legibilitySettings]
  -[SBFloatingDockViewController folderControllerShouldEndEditing:]
  -[SBFloatingDockViewController folderControllerWillClose:]
  -[SBFloatingDockViewController libraryViewController]
  -[SBFloatingDockViewController dockIconListView]
  -[SBFloatingDockViewController setUnderlyingPresentationStyleConfiguration:]
  -[SBFloatingDockViewController dockListModel]
  -[SBFloatingDockViewController _backdropGroupNameForCurrentUserInterfaceStyle]
  -[SBFloatingDockViewController _backdropGroupNamespace]
  -[SBFloatingDockViewController _rebuildUserIconListView]
  -[SBFloatingDockViewController _updateLibraryPodDockAccessoryViewDisplayed]
  -[SBFloatingDockViewController setFolderPresentingViewController:]
  -[SBFloatingDockViewController setScalingView:]
  -[SBFloatingDockViewController iconEditingDidChange:]
  -[SBFloatingDockViewController iconDraggingDidChange:]
  -[SBFloatingDockViewController reduceTransparencyEnabledStateDidChange:]
  -[SBFloatingDockViewController contentHeightForFrame:]
  -[SBFloatingDockViewController translationFromFullyPresentedFrame]
  -[SBFloatingDockViewController lastDockHeight]
  -[SBFloatingDockViewController setLastDockHeight:]
  -[SBFloatingDockViewController userIconListView]
  -[SBFloatingDockViewController userIconLocation]
  -[SBFloatingDockViewController recentIconListView]
  -[SBFloatingDockViewController isLibraryPodIconEffectivelyVisible]
  -[SBFloatingDockViewController _resizeDockForChangedNumberOfIconsAnimated:]
  -[SBFloatingDockViewController isLibraryPodIconEnabled]
  -[SBFloatingDockViewController setLibraryPodIconVisible:animated:]
  -[SBFloatingDockViewController isLibraryPodIconVisible]
  -[SBFloatingDockViewController setLibraryPresenter:]
  -[SBFloatingDockViewController dockOffscreenProgress]
  -[SBFloatingDockViewController minimumVerticalMarginForFrame:]
  -[SBFloatingDockViewController maximumDockContinuousCornerRadius]
  -[SBFloatingDockViewController folderPresentingViewController]
  -[SBFloatingDockViewController presentedFolderController]
  -[SBFloatingDockViewController maximumEditingIconSize]
  -[SBFloatingDockViewController setMaximumEditingIconSize:]
  -[SBFloatingDockViewController _updateLibraryPodIconComponentVisibility]
  -[SBFloatingDockViewController enumerateVisibleIconViewsUsingBlock:]
  -[SBFloatingDockViewController dockViewWillBecomeVisible]
  -[SBFloatingDockViewController dockViewWillResignVisible]
  -[SBFloatingDockViewController dockViewDidResignVisible]
  -[SBFloatingDockViewController dockViewDidBecomeVisible]
  -[SBFloatingDockViewController suggestionsIconLocation]
  -[SBFloatingDockViewController setTransitioningUnderlyingPresentationStyleConfiguration:]
  -[SBFloatingDockViewController setTransitionTargetUnderlyingPresentationStyleConfiguration:]
  -[SBFloatingDockViewController _updateDockForStyleConfiguration:]
  -[SBFloatingDockViewController transitionTargetUnderlyingPresentationStyleConfiguration]
  -[SBFloatingDockViewController dockViewIfExists]
  -[SBFloatingDockViewController setDockListModel:]
  -[SBFloatingDockViewController _rebuildLibraryPodIcon]
  -[SBFloatingDockViewController libraryPodIconView]
  -[SBFloatingDockViewController floatingDockScreenFrame]
  -[SBFloatingDockViewController libraryPresenter]
  -[SBFloatingDockViewController underlyingPresentationStyleConfiguration]
  -[SBFloatingDockViewController _updateFolderIconBackgroundsForStyleConfiguration:]
  -[SBFloatingDockViewController _updatePresentedFolderBackgroundForStyleConfiguration:]
  -[SBFloatingDockViewController _updatePlatterShadowForStyleConfiguration:]
  -[SBFloatingDockViewController isPresentingLibrary]
  -[SBFloatingDockViewController isPresentingLibraryInForeground]
  -[SBFloatingDockViewController _backgroundEffectForPresentedFolder]
  -[SBFloatingDockViewController _rebuildAfterIconModelChange]
  -[SBFloatingDockViewController isPresentingFolder]
  -[SBFloatingDockViewController _platterEffectForPresentedFolder]
  -[SBFloatingDockViewController shouldIndicateImpossibleDrop]
  -[SBFloatingDockViewController _coalesceRequestsToResizeDockForChangedNumberOfIcons]
  -[SBFloatingDockViewController _currentFolderIconBackgroundStyle]
  -[SBFloatingDockViewController toggleLibraryPresentedAnimated:completion:]
  -[SBFloatingDockViewController _isLibraryContainedInForeground]
  -[SBFloatingDockViewController _isInAppToAppTransition]
  -[SBFloatingDockViewController _isInSwitcherTransition]
  -[SBFloatingDockViewController setLibraryPodIconVisible:]
  -[SBFloatingDockViewController _prepareLibraryViewControllerForDismissal:]
  -[SBFloatingDockViewController currentFolderAnimator]
  -[SBFloatingDockViewController currentExpandCompletions]
  -[SBFloatingDockViewController setCurrentExpandCompletions:]
  -[SBFloatingDockViewController currentCollapseCompletions]
  -[SBFloatingDockViewController setCurrentCollapseCompletions:]
  -[SBFloatingDockViewController _presentFolderForIcon:location:animated:completion:]
  -[SBFloatingDockViewController _shouldOpenFolderIcon:]
  -[SBFloatingDockViewController setCurrentFolderAnimator:]
  -[SBFloatingDockViewController dismissPresentedFolderAnimated:completion:]
  -[SBFloatingDockViewController folderControllerDidOpen:]
  -[SBFloatingDockViewController folderControllerDidClose:]
  -[SBFloatingDockViewController folderPresentationController:animationControllerForTransitionWithFolder:presenting:animated:]
  -[SBFloatingDockViewController folderPresentationController:willPerformTransitionWithFolder:presenting:withTransitionCoordinator:]
  -[SBFloatingDockViewController minimumHomeScreenScaleForFolderPresentationController:]
  -[SBFloatingDockViewController folderPresentationController:sourceViewForPresentingViewController:]
  -[SBFloatingDockViewController floatingDockViewMainPlatterDidChangeFrame:]
  -[SBFloatingDockViewController libraryViewController:dataSourceDidChange:]
  -[SBFloatingDockViewController isDefaultContainerForegroundForPresenter:]
  -[SBFloatingDockViewController containerViewControllerForPresentingInForeground:]
  -[SBFloatingDockViewController sourceContainerViewForPresenter:]
  -[SBFloatingDockViewController acquireOrderSourceContainerViewBeforeLibraryViewAssertionForReason:]
  -[SBFloatingDockViewController libraryIconViewForPresenter:]
  -[SBFloatingDockViewController libraryIconViewControllerForPresenter:]
  -[SBFloatingDockViewController modalLibraryPresenter:willPresentLibrary:]
  -[SBFloatingDockViewController modalLibraryPresenter:didPresentLibrary:]
  -[SBFloatingDockViewController modalLibraryPresenter:willDismissLibrary:]
  -[SBFloatingDockViewController modalLibraryPresenter:didPassCriticalDismissalPoint:]
  -[SBFloatingDockViewController modalLibraryPresenter:didDismissLibrary:]
  -[SBFloatingDockViewController modalLibraryPresenterShouldAllowSwipeToDismissGesture:]
  -[SBFloatingDockViewController iconModelForDroppingIntoLibraryIndicatorIconView:]
  -[SBFloatingDockViewController libraryIndicatorIconView:didAcceptDropForSession:]
  -[SBFloatingDockViewController handleSpringLoadDidActivateForLibraryIndicatorIconView:]
  -[SBFloatingDockViewController initWithIconManager:iconViewProvider:]
  -[SBFloatingDockViewController setLibraryPodIconEnabled:]
  -[SBFloatingDockViewController overrideLibraryContainerViewController]
  -[SBFloatingDockViewController setOverrideLibraryContainerViewController:]
  -[SBFloatingDockViewController preferredVerticalMargin]
  -[SBFloatingDockViewController requestedVerticalMargin]
  -[SBFloatingDockViewController setRequestedVerticalMargin:]
  -[SBFloatingDockViewController floatingDockScreenPresentationFrame]
  -[SBFloatingDockViewController layoutUserControlledIconListsWithAnimationType:forceRelayout:]
  -[SBFloatingDockViewController enumerateIconListsUsingBlock:]
  -[SBFloatingDockViewController prepareForTransitionToStyleConfiguration:fromDockVisible:toDockVisible:]
  -[SBFloatingDockViewController cleanUpAfterUnderlyingBackgroundStyleTransition]
  -[SBFloatingDockViewController setDockOffscreenProgress:]
  -[SBFloatingDockViewController _addDockGestureRecognizer:]
  -[SBFloatingDockViewController _setPaddingEdgeInsets:]
  -[SBFloatingDockViewController floatingDockSuggestionsViewControllerDidChangeNumberOfVisibleSuggestions:]
  -[SBFloatingDockViewController presentFolderForIcon:location:animated:completion:]
  -[SBFloatingDockViewController setShouldIndicateImpossibleDrop:]
  -[SBFloatingDockViewController isTransitioningUnderlyingBackgroundStyle]


SBHSidebarWidgetBootstrappingAdvisor : NSObject
 @property  BOOL shouldSidebarWidgetsBeInLearningMode
 @property  <SBHSidebarWidgetLearningDataSource> *dataSource
 @property  double learningDuration
 @property  unsigned long learningEpoch

  // instance methods
  -[SBHSidebarWidgetBootstrappingAdvisor initWithDataSource:]
  -[SBHSidebarWidgetBootstrappingAdvisor .cxx_destruct]
  -[SBHSidebarWidgetBootstrappingAdvisor dataSource]
  -[SBHSidebarWidgetBootstrappingAdvisor addObserver:]
  -[SBHSidebarWidgetBootstrappingAdvisor _notifyObservers]
  -[SBHSidebarWidgetBootstrappingAdvisor dealloc]
  -[SBHSidebarWidgetBootstrappingAdvisor removeObserver:]
  -[SBHSidebarWidgetBootstrappingAdvisor _setupSidebarWidgetsLearningCadence]
  -[SBHSidebarWidgetBootstrappingAdvisor initWithDataSource:learningDuration:learningEpoch:]
  -[SBHSidebarWidgetBootstrappingAdvisor _updateSidebarWidgetsCommenceDateIfEmpty]
  -[SBHSidebarWidgetBootstrappingAdvisor _requiresLearningCadenceForFavoriteWidgets:]
  -[SBHSidebarWidgetBootstrappingAdvisor _updateSidebarWidgetsEpoch]
  -[SBHSidebarWidgetBootstrappingAdvisor _scheduleWidgetLearningCadenceUpdateTimer:]
  -[SBHSidebarWidgetBootstrappingAdvisor learningDuration]
  -[SBHSidebarWidgetBootstrappingAdvisor _sidebarLearningPeriodTimeIsUp:]
  -[SBHSidebarWidgetBootstrappingAdvisor learningEpoch]
  -[SBHSidebarWidgetBootstrappingAdvisor noteSignificantSidebarStateChangeDidOccur]
  -[SBHSidebarWidgetBootstrappingAdvisor shouldSidebarWidgetsBeInLearningMode]
  -[SBHSidebarWidgetBootstrappingAdvisor setShouldSidebarWidgetsBeInLearningMode:]


SBCenterIconZoomAnimator : SBIconZoomAnimator <SBIconListLayoutDelegate, SBIconListModelObserver>
 @property  <SBDockOffscreenFractionModifying> *dockOffscreenFractionModifier
 @property  UIView *zoomView
 @property  {CGPoint=dd} cameraPosition
 @property  double centerRow
 @property  double centerCol
 @property  BOOL animatingIcons
 @property  SBFolderController *folderController
 @property  SBHCenterZoomSettings *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBCenterIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBCenterIconZoomAnimator _cleanupAnimation]
  -[SBCenterIconZoomAnimator _setAnimationFraction:withCenter:]
  -[SBCenterIconZoomAnimator iconList:didReplaceIcon:withIcon:]
  -[SBCenterIconZoomAnimator _calculateCentersAndCameraPosition]
  -[SBCenterIconZoomAnimator dockOffscreenFractionModifier]
  -[SBCenterIconZoomAnimator animatingIcons]
  -[SBCenterIconZoomAnimator setFraction:withCenter:]
  -[SBCenterIconZoomAnimator _updateDockForFraction:]
  -[SBCenterIconZoomAnimator _positionView:forIcon:]
  -[SBCenterIconZoomAnimator _setAnimationFraction:]
  -[SBCenterIconZoomAnimator .cxx_destruct]
  -[SBCenterIconZoomAnimator _cleanupAnimationIncludingDock:]
  -[SBCenterIconZoomAnimator zoomView]
  -[SBCenterIconZoomAnimator _calculateCenters]
  -[SBCenterIconZoomAnimator iconListView:originForIconCoordinate:metrics:proposedOrigin:]
  -[SBCenterIconZoomAnimator setDockOffscreenFractionModifier:]
  -[SBCenterIconZoomAnimator centerCol]
  -[SBCenterIconZoomAnimator _numberOfSignificantAnimations]
  -[SBCenterIconZoomAnimator cameraPosition]
  -[SBCenterIconZoomAnimator _animationFactoryForIcon:]
  -[SBCenterIconZoomAnimator _zPositionForView:center:andFraction:]
  -[SBCenterIconZoomAnimator _prepareAnimation]
  -[SBCenterIconZoomAnimator initWithFolderController:]
  -[SBCenterIconZoomAnimator iconListView:centerForIconCoordinate:metrics:proposedCenter:]
  -[SBCenterIconZoomAnimator folderController]
  -[SBCenterIconZoomAnimator centerRow]
  -[SBCenterIconZoomAnimator _iconZoomDelay]
  -[SBCenterIconZoomAnimator _animationFactoryForFolderView]
  -[SBCenterIconZoomAnimator iconList:didAddIcon:]
  -[SBCenterIconZoomAnimator _animationFactoryForDock]


SBHIconLibraryQueryResult : NSObject <NSCopying>
 @property  SBHLocalizedIndexedCollationStrategy *collationStrategy
 @property  NSDiffableDataSourceSnapshot *snapshot
 @property  BOOL nullQueryResult
 @property  SBHIconLibraryQuery *query
 @property  NSSet *icons
 @property  unsigned long sortMethodology
 @property  NSArray *sectionIndexTitles
 @property  NSArray *sectionIdentifiers
 @property  unsigned long totalNumberOfItems

  // class methods
  +[SBHIconLibraryQueryResult _hydrateSnapshot:fromIcons:query:outCollationStrategy:outIconForItemIdentifier:outSortMethodology:sortComparator:]
  +[SBHIconLibraryQueryResult nullQueryResults]

  // instance methods
  -[SBHIconLibraryQueryResult indexPathForIcon:]
  -[SBHIconLibraryQueryResult indexOfSectionIdentifier:]
  -[SBHIconLibraryQueryResult query]
  -[SBHIconLibraryQueryResult iconAtIndexPath:]
  -[SBHIconLibraryQueryResult setSnapshot:]
  -[SBHIconLibraryQueryResult icons]
  -[SBHIconLibraryQueryResult .cxx_destruct]
  -[SBHIconLibraryQueryResult sectionIdentifiers]
  -[SBHIconLibraryQueryResult isEqual:]
  -[SBHIconLibraryQueryResult indexOfSectionForSectionIndexTitleAtIndex:]
  -[SBHIconLibraryQueryResult sectionIndexTitles]
  -[SBHIconLibraryQueryResult snapshot]
  -[SBHIconLibraryQueryResult copyWithZone:]
  -[SBHIconLibraryQueryResult totalNumberOfItems]
  -[SBHIconLibraryQueryResult initWithQuery:icons:sortComparator:]
  -[SBHIconLibraryQueryResult initWithQuery:icons:snapshot:collationStrategy:iconForitemIdentifier:sortMethodology:]
  -[SBHIconLibraryQueryResult collationStrategy]
  -[SBHIconLibraryQueryResult sortMethodology]
  -[SBHIconLibraryQueryResult isEqualToQueryResult:]
  -[SBHIconLibraryQueryResult _firstExtantSectionWithCollationIndexGreaterThan:]
  -[SBHIconLibraryQueryResult sectionIdentifierForIcon:]
  -[SBHIconLibraryQueryResult itemIdentifierForIcon:]
  -[SBHIconLibraryQueryResult sectionIdentifierAtIndex:]
  -[SBHIconLibraryQueryResult iconForItemIdentifier:]
  -[SBHIconLibraryQueryResult titleForSectionIdentifier:]
  -[SBHIconLibraryQueryResult isNullQueryResult]
  -[SBHIconLibraryQueryResult titleForSectionAtIndex:]
  -[SBHIconLibraryQueryResult iconsForSectionAtIndex:]
  -[SBHIconLibraryQueryResult setCollationStrategy:]


SBHIconTableViewDiffableDataSource : UITableViewDiffableDataSource
 @property  SBHTableViewIconLibrary *iconLibrary
 @property  SBHIconLibraryQueryResult *queryResult

  // instance methods
  -[SBHIconTableViewDiffableDataSource tableView:sectionForSectionIndexTitle:atIndex:]
  -[SBHIconTableViewDiffableDataSource sectionIndexTitlesForTableView:]
  -[SBHIconTableViewDiffableDataSource applySnapshot:animatingDifferences:completion:]
  -[SBHIconTableViewDiffableDataSource .cxx_destruct]
  -[SBHIconTableViewDiffableDataSource setIconLibrary:]
  -[SBHIconTableViewDiffableDataSource queryResult]
  -[SBHIconTableViewDiffableDataSource applyQueryResult:animatingDifferences:completion:]
  -[SBHIconTableViewDiffableDataSource iconLibrary]
  -[SBHIconTableViewDiffableDataSource applyQueryResult:animatingDifferences:]


SBViewControllerTransitionContext : NSObject <SBViewControllerContextTransitioning, SBViewControllerTransitionCoordinator>
 @property  <SBHViewControllerTransitionAnimationContext> *animationContext
 @property  <SBViewControllerTransitionContextDelegate> *delegate
 @property  UIView *containerView
 @property  <UIViewControllerAnimatedTransitioning> *animator
 @property  <UIViewControllerInteractiveTransitioning> *interactor
 @property  long long presentationStyle
 @property  {CGAffineTransform=dddddd} targetTransform
 @property  BOOL isTransitioning
 @property  BOOL wantsAnimation
 @property  id userInfo
 @property  BOOL animated
 @property  BOOL interactive
 @property  BOOL transitionWasCancelled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL initiallyInteractive
 @property  BOOL isInterruptible
 @property  BOOL cancelled
 @property  double transitionDuration
 @property  double percentComplete
 @property  double completionVelocity
 @property  long long completionCurve

  // instance methods
  -[SBViewControllerTransitionContext interactor]
  -[SBViewControllerTransitionContext initiallyInteractive]
  -[SBViewControllerTransitionContext setAnimator:]
  -[SBViewControllerTransitionContext notifyWhenInteractionEndsUsingBlock:]
  -[SBViewControllerTransitionContext animateAlongsideTransition:completion:]
  -[SBViewControllerTransitionContext isInterruptible]
  -[SBViewControllerTransitionContext setInteractor:]
  -[SBViewControllerTransitionContext finalFrameForViewController:]
  -[SBViewControllerTransitionContext targetTransform]
  -[SBViewControllerTransitionContext wantsAnimation]
  -[SBViewControllerTransitionContext viewControllerForKey:]
  -[SBViewControllerTransitionContext animator]
  -[SBViewControllerTransitionContext setTargetTransform:]
  -[SBViewControllerTransitionContext viewForKey:]
  -[SBViewControllerTransitionContext completeTransition:]
  -[SBViewControllerTransitionContext animateAlongsideTransitionInView:animation:completion:]
  -[SBViewControllerTransitionContext transitionWasCancelled]
  -[SBViewControllerTransitionContext _completeTransition]
  -[SBViewControllerTransitionContext cancelTransition]
  -[SBViewControllerTransitionContext initialFrameForViewController:]
  -[SBViewControllerTransitionContext notifyWhenInteractionChangesUsingBlock:]
  -[SBViewControllerTransitionContext transitionDuration]
  -[SBViewControllerTransitionContext pauseInteractiveTransition]
  -[SBViewControllerTransitionContext setUserInfo:]
  -[SBViewControllerTransitionContext startTransition]
  -[SBViewControllerTransitionContext supportsRestarting]
  -[SBViewControllerTransitionContext isAnimated]
  -[SBViewControllerTransitionContext wasPreviousPhaseInteractive]
  -[SBViewControllerTransitionContext requiresCancellableAnimations]
  -[SBViewControllerTransitionContext _runAlongsideAnimationBlocksWithFactory:options:]
  -[SBViewControllerTransitionContext _interactorSupportsRestarting]
  -[SBViewControllerTransitionContext presentationStyle]
  -[SBViewControllerTransitionContext isInteractive]
  -[SBViewControllerTransitionContext completionCurve]
  -[SBViewControllerTransitionContext setPresentationStyle:]
  -[SBViewControllerTransitionContext updateInteractiveTransition:]
  -[SBViewControllerTransitionContext containerView]
  -[SBViewControllerTransitionContext setWantsAnimation:]
  -[SBViewControllerTransitionContext .cxx_destruct]
  -[SBViewControllerTransitionContext _completeTransitionIfPossible]
  -[SBViewControllerTransitionContext cancelInteractiveTransition]
  -[SBViewControllerTransitionContext percentComplete]
  -[SBViewControllerTransitionContext finishInteractiveTransition]
  -[SBViewControllerTransitionContext succinctDescriptionBuilder]
  -[SBViewControllerTransitionContext setDelegate:]
  -[SBViewControllerTransitionContext isCancelled]
  -[SBViewControllerTransitionContext descriptionBuilderWithMultilinePrefix:]
  -[SBViewControllerTransitionContext init]
  -[SBViewControllerTransitionContext requiresInteractiveAnimations]
  -[SBViewControllerTransitionContext setFinalFrame:forViewController:]
  -[SBViewControllerTransitionContext _acquireTransitionCompletion]
  -[SBViewControllerTransitionContext _runInteractionEndedHandlers]
  -[SBViewControllerTransitionContext descriptionWithMultilinePrefix:]
  -[SBViewControllerTransitionContext completionVelocity]
  -[SBViewControllerTransitionContext succinctDescription]
  -[SBViewControllerTransitionContext _runAlongsideAnimationBlocksInEnclosingAnimationContext]
  -[SBViewControllerTransitionContext setContainerView:]
  -[SBViewControllerTransitionContext transitionAnimationOptions]
  -[SBViewControllerTransitionContext setViewController:forKey:]
  -[SBViewControllerTransitionContext transitionAnimationFactory]
  -[SBViewControllerTransitionContext _animatorSupportsRestarting]
  -[SBViewControllerTransitionContext _animatorIsInteractive]
  -[SBViewControllerTransitionContext isTransitioning]
  -[SBViewControllerTransitionContext setInitialFrame:forViewController:]
  -[SBViewControllerTransitionContext delegate]
  -[SBViewControllerTransitionContext addTransitionContinuation:]
  -[SBViewControllerTransitionContext requiresRestartableAnimations]
  -[SBViewControllerTransitionContext restartTransition]
  -[SBViewControllerTransitionContext userInfo]
  -[SBViewControllerTransitionContext _interactiveAnimator]
  -[SBViewControllerTransitionContext transitionWasRestarted]
  -[SBViewControllerTransitionContext dealloc]
  -[SBViewControllerTransitionContext setView:forKey:]
  -[SBViewControllerTransitionContext _updateTransitionAnimationFactoryAndOptions]
  -[SBViewControllerTransitionContext _objectSupportsRestarting:]
  -[SBViewControllerTransitionContext _startInteractiveTransition]
  -[SBViewControllerTransitionContext _animatorIsReversible]
  -[SBViewControllerTransitionContext _reversibleAnimator]
  -[SBViewControllerTransitionContext setAnimationContext:]
  -[SBViewControllerTransitionContext animationContext]
  -[SBViewControllerTransitionContext supportsCancelling]


SBIconAnimationContext : NSObject
 @property  double delay
 @property  double fraction
 @property  @? completion

  // instance methods
  -[SBIconAnimationContext completion]
  -[SBIconAnimationContext setCompletion:]
  -[SBIconAnimationContext delay]
  -[SBIconAnimationContext fraction]
  -[SBIconAnimationContext setDelay:]
  -[SBIconAnimationContext .cxx_destruct]
  -[SBIconAnimationContext setFraction:]


SBIconAnimator : NSObject
 @property  <SBIconAnimationContaining> *animationContainer
 @property  UIView *referenceView
 @property  BOOL invalidated
 @property  <SBIconAnimatorDelegate> *delegate
 @property  SBHIconAnimationSettings *settings
 @property  double fraction
 @property  UIView *backgroundDarkeningView
 @property  BOOL animating
 @property  BOOL pastPointOfNoReturn

  // instance methods
  -[SBIconAnimator _cleanupAnimation]
  -[SBIconAnimator cleanup]
  -[SBIconAnimator referenceView]
  -[SBIconAnimator fraction]
  -[SBIconAnimator _setAnimationFraction:]
  -[SBIconAnimator .cxx_destruct]
  -[SBIconAnimator _numberOfSignificantAnimations]
  -[SBIconAnimator setDelegate:]
  -[SBIconAnimator setSettings:]
  -[SBIconAnimator _prepareAnimation]
  -[SBIconAnimator isAnimating]
  -[SBIconAnimator setInvalidated:]
  -[SBIconAnimator setFraction:]
  -[SBIconAnimator isPastPointOfNoReturn]
  -[SBIconAnimator initWithAnimationContainer:]
  -[SBIconAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[SBIconAnimator delegate]
  -[SBIconAnimator dealloc]
  -[SBIconAnimator invalidated]
  -[SBIconAnimator prepare]
  -[SBIconAnimator settings]
  -[SBIconAnimator animationContainer]
  -[SBIconAnimator _isDelayedForRotation]
  -[SBIconAnimator backgroundDarkeningView]
  -[SBIconAnimator centralAnimationFactory]
  -[SBIconAnimator animateToFraction:afterDelay:withCompletion:]
  -[SBIconAnimator _windowFinishedRotating]
  -[SBIconAnimator _invalidateCompletions]
  -[SBIconAnimator _animateToFractionFromContext:]
  -[SBIconAnimator _animateToFractionFromPendingContexts]
  -[SBIconAnimator setBackgroundDarkeningView:]


SBFolderController : SBNestingViewController <SBFolderControllerDelegate, SBIconListViewDragObserver, SBFolderControllerBackgroundViewDelegate, SBFolderViewDelegate, SBFolderObserver, SBIconListLayoutObserver, SBIconViewObserver, SBScaleIconZoomAnimationContaining, BSDescriptionProviding, SBIconLocationPresenting, SBIconViewQuerying, SBHVisibleContentPresenter>
 @property  BOOL active
 @property  BOOL rotating
 @property  BOOL animating
 @property  <BSInvalidatable> *statusBarAssertion
 @property  UIStatusBar *fakeStatusBar
 @property  SBFolderControllerConfiguration *configuration
 @property  BOOL addsFocusGuidesForWrapping
 @property  long long orientation
 @property  NSArray *_viewControllersToNotifyForViewObscuration
 @property  SBFolderView *folderView
 @property  SBFolderView *folderViewIfLoaded
 @property  SBFolderContainerView *folderContainerView
 @property  SBFolderController *outerFolderController
 @property  SBFolderController *innerFolderController
 @property  SBFolderControllerAnimationContext *animationContext
 @property  SBIconListPageControl *pageControl
 @property  <SBFolderControllerDelegate> *folderDelegate
 @property  SBFolder *folder
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  unsigned long allowedOrientations
 @property  <SBIconViewProviding> *iconViewProvider
 @property  id context
 @property  SBIconView *folderIconView
 @property  UIView *headerView
 @property  long long currentPageIndex
 @property  BOOL open
 @property  BOOL editing
 @property  BOOL scrolling
 @property  BOOL scrollDragging
 @property  BOOL scrollDecelerating
 @property  BOOL scrollTracking
 @property  unsigned long userInterfaceLayoutDirectionHandling
 @property  long long userInterfaceLayoutDirection
 @property  double currentScrollingOffset
 @property  _UILegibilitySettings *legibilitySettings
 @property  long long defaultPageIndex
 @property  long long minimumPageIndex
 @property  long long maximumPageIndex
 @property  long long firstIconPageIndex
 @property  long long lastIconPageIndex
 @property  UIView *contentView
 @property  NSArray *iconListViews
 @property  unsigned long iconListViewCount
 @property  SBIconListView *currentIconListView
 @property  SBIconListModel *currentIconListModel
 @property  NSString *originatingIconLocation
 @property  SBFolderController *deepestFolderController
 @property  NSIndexPath *currentIndexPath
 @property  BOOL hasDock
 @property  SBIconListView *dockListView
 @property  BOOL suspendsWallpaperAnimationWhileOpen
 @property  BOOL closesAfterDragExits
 @property  BOOL canAcceptFolderIconDrags
 @property  BOOL disablesScrollingWhileIconDragIsDropping
 @property  BOOL pageControlHidden
 @property  double pageControlAlpha
 @property  UIColor *defaultAccessibilityTintColor
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  SBIconPageIndicatorImageSetCache *iconPageIndicatorImageSetCache
 @property  BOOL overridingPageViewControllerAppearanceStateToRemainDisappeared
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHIconModel *iconModel
 @property  SBIconListView *dockIconListView
 @property  UIView *containerView
 @property  UIWindow *animationWindow
 @property  UIView *fallbackIconContainerView
 @property  NSArray *extraViewsContainers
 @property  NSArray *extraViews
 @property  BOOL shouldAnimateLastTwoViewsAsOne
 @property  BOOL shouldAnimateFirstTwoViewsAsOne
 @property  NSSet *presentedIconLocations
 @property  unsigned long contentVisibility

  // class methods
  +[SBFolderController listViewClass]
  +[SBFolderController iconLocation]
  +[SBFolderController _contentViewClass]
  +[SBFolderController configurationClass]

  // instance methods
  -[SBFolderController iconListView:iconDropSessionDidEnd:]
  -[SBFolderController folderController:willUseIconTransitionAnimator:forOperation:onViewController:animated:]
  -[SBFolderController iconViewForIcon:location:]
  -[SBFolderController iconListViewDidChangeBoundsSize:]
  -[SBFolderController firstIconViewForIcon:excludingLocations:]
  -[SBFolderController setOrientation:]
  -[SBFolderController currentIndexPath]
  -[SBFolderController pageControl]
  -[SBFolderController preferredFocusEnvironments]
  -[SBFolderController folderController:iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBFolderController setContentAlpha:]
  -[SBFolderController _depth]
  -[SBFolderController folderIconImageCache]
  -[SBFolderController fallbackIconContainerView]
  -[SBFolderController folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFolderController folder:didReplaceIcon:withIcon:]
  -[SBFolderController folderController:iconListView:iconDropSessionDidEnter:]
  -[SBFolderController borrowScalingView]
  -[SBFolderController fadeContentForMagnificationFraction:]
  -[SBFolderController iconListViewCount]
  -[SBFolderController scrollUsingDecelerationAnimationToPageIndex:withCompletionHandler:]
  -[SBFolderController setFolder:]
  -[SBFolderController presentedIconLocations]
  -[SBFolderController setEditing:animated:]
  -[SBFolderController doesPageContainIconListView:]
  -[SBFolderController setPageControlAlpha:]
  -[SBFolderController isActive]
  -[SBFolderController configuration]
  -[SBFolderController extraViewsContainers]
  -[SBFolderController iconViewProvider]
  -[SBFolderController _invalidateAllCancelTouchesAssertions]
  -[SBFolderController iconListViewForIconListModelIndex:]
  -[SBFolderController iconListView:didRemoveIconView:]
  -[SBFolderController containerView]
  -[SBFolderController iconListViews]
  -[SBFolderController isPageControlHidden]
  -[SBFolderController .cxx_destruct]
  -[SBFolderController iconListModelIndexForPageIndex:]
  -[SBFolderController firstIconPageIndex]
  -[SBFolderController statusBarAssertion]
  -[SBFolderController iconImageCache]
  -[SBFolderController iconModel]
  -[SBFolderController viewDidLoad]
  -[SBFolderController minimumHomeScreenScaleDidChange]
  -[SBFolderController folderController:iconListView:iconDropSessionDidUpdate:]
  -[SBFolderController folderController:iconListView:canHandleIconDropSession:]
  -[SBFolderController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBFolderController iconListViewAtIndex:]
  -[SBFolderController folderControllerForFolder:]
  -[SBFolderController contentView]
  -[SBFolderController succinctDescriptionBuilder]
  -[SBFolderController isRotating]
  -[SBFolderController setLegibilitySettings:]
  -[SBFolderController setRotating:]
  -[SBFolderController shouldAnimateLastTwoViewsAsOne]
  -[SBFolderController folderControllerWantsToHideStatusBar:animated:]
  -[SBFolderController statusBarEdgeInsetsForFolderController:]
  -[SBFolderController setStatusBarAssertion:]
  -[SBFolderController contentOverlayInsetsFromParentIfAvailableForFolderController:]
  -[SBFolderController viewDidAppear:]
  -[SBFolderController iconViewForIcon:location:options:]
  -[SBFolderController isOpen]
  -[SBFolderController isAnimating]
  -[SBFolderController folderController:iconListView:iconViewForDroppingIconDragItem:proposedIconView:]
  -[SBFolderController iconLocation]
  -[SBFolderController folderController:iconListView:performIconDrop:]
  -[SBFolderController setIconImageCache:]
  -[SBFolderController descriptionBuilderWithMultilinePrefix:]
  -[SBFolderController firstIconViewForIcon:options:]
  -[SBFolderController fakeStatusBarForFolderController:]
  -[SBFolderController iconListViewAtPoint:]
  -[SBFolderController animationWindow]
  -[SBFolderController fakeStatusBar]
  -[SBFolderController setCurrentPageIndex:]
  -[SBFolderController setCurrentPageIndex:animated:]
  -[SBFolderController _isValidPageIndex:]
  -[SBFolderController prepareToTearDown]
  -[SBFolderController noteUserIsInteractingWithIcons]
  -[SBFolderController setCurrentPageIndex:animated:completion:]
  -[SBFolderController contentVisibility]
  -[SBFolderController statusBarStyleRequestForFolderController:]
  -[SBFolderController descriptionWithMultilinePrefix:]
  -[SBFolderController hasDock]
  -[SBFolderController currentIconListView]
  -[SBFolderController folderController:iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBFolderController setAnimating:]
  -[SBFolderController folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFolderController currentPageIndex]
  -[SBFolderController succinctDescription]
  -[SBFolderController setOpen:]
  -[SBFolderController keyCommands]
  -[SBFolderController pageControlAlpha]
  -[SBFolderController cancelScrolling]
  -[SBFolderController setFolderIconImageCache:]
  -[SBFolderController returnScalingView]
  -[SBFolderController pageIndexForIconListViewIndex:]
  -[SBFolderController folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFolderController controllerClassForFolder:]
  -[SBFolderController _removeIconImageViewControllerKeepStaticAssertion:]
  -[SBFolderController viewWillDisappear:]
  -[SBFolderController isDisplayingIconView:inLocation:]
  -[SBFolderController folderController:willRemoveFakeStatusBar:]
  -[SBFolderController firstIconViewForIcon:inLocations:]
  -[SBFolderController folder]
  -[SBFolderController revealIcon:animated:completionHandler:]
  -[SBFolderController _allowUserInteraction]
  -[SBFolderController userInterfaceLayoutDirectionHandling]
  -[SBFolderController orientation]
  -[SBFolderController _invalidate]
  -[SBFolderController addsFocusGuidesForWrapping]
  -[SBFolderController headerView]
  -[SBFolderController initWithConfiguration:]
  -[SBFolderController unscatterAnimated:afterDelay:withCompletion:]
  -[SBFolderController iconListViewForDrag:]
  -[SBFolderController viewWillAppear:]
  -[SBFolderController isDisplayingIcon:inLocations:]
  -[SBFolderController currentIconListModel]
  -[SBFolderController extraViews]
  -[SBFolderController setPageControl:]
  -[SBFolderController minimumPageIndex]
  -[SBFolderController isEditing]
  -[SBFolderController lastIconPageIndex]
  -[SBFolderController folder:didAddIcons:removedIcons:]
  -[SBFolderController setActive:]
  -[SBFolderController isDisplayingIconView:]
  -[SBFolderController iconListView:concludeIconDrop:]
  -[SBFolderController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBFolderController folderController:willCreateInnerFolderControllerWithConfiguration:]
  -[SBFolderController folderController:canChangeCurrentPageIndexToIndex:]
  -[SBFolderController isScrolling]
  -[SBFolderController defaultPageIndex]
  -[SBFolderController nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBFolderController firstIconViewForIcon:]
  -[SBFolderController folderControllerShouldClose:withPinchGesture:]
  -[SBFolderController setPageControlHidden:]
  -[SBFolderController allowedOrientations]
  -[SBFolderController userInterfaceLayoutDirection]
  -[SBFolderController folderController:iconListView:iconDropSessionDidExit:]
  -[SBFolderController folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFolderController folderController:draggedIconShouldDropFromListView:]
  -[SBFolderController folderControllerWillOpen:]
  -[SBFolderController prepareToOpen]
  -[SBFolderController firstIconViewWithOptions:iconPassingTest:]
  -[SBFolderController maximumPageIndex]
  -[SBFolderController dealloc]
  -[SBFolderController folderControllerShouldBeginEditing:withHaptic:]
  -[SBFolderController folderController:accessibilityTintColorForScreenRect:]
  -[SBFolderController invalidate]
  -[SBFolderController pageIndexForIconListModelIndex:]
  -[SBFolderController folderControllerDidEndScrolling:]
  -[SBFolderController fadeContentForMinificationFraction:]
  -[SBFolderController iconListViewForTouch:]
  -[SBFolderController accessibilityTintColorForScreenRect:]
  -[SBFolderController iconListView:didAddIconView:]
  -[SBFolderController folderControllerWillBeginScrolling:]
  -[SBFolderController enumerateDisplayedIconViewsUsingBlock:]
  -[SBFolderController folderController:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFolderController dockListView]
  -[SBFolderController beginModifyingDockOffscreenFractionForReason:]
  -[SBFolderController listLayoutProvider]
  -[SBFolderController shouldAnimateFirstTwoViewsAsOne]
  -[SBFolderController iconListViewIndexForIconListModelIndex:]
  -[SBFolderController loadView]
  -[SBFolderController folderView]
  -[SBFolderController iconViewWillPresentContextMenu:]
  -[SBFolderController isDisplayingIcon:inLocation:]
  -[SBFolderController minimumHomeScreenScaleForFolderController:]
  -[SBFolderController setAnimationContext:]
  -[SBFolderController setContentVisibility:]
  -[SBFolderController viewDidDisappear:]
  -[SBFolderController iconView:didChangeCustomImageViewController:]
  -[SBFolderController isDisplayingIcon:]
  -[SBFolderController iconListViewIndexForPageIndex:]
  -[SBFolderController animationContext]
  -[SBFolderController isPresentingIconLocation:]
  -[SBFolderController legibilitySettings]
  -[SBFolderController folderControllerShouldEndEditing:]
  -[SBFolderController folderControllerWillClose:]
  -[SBFolderController layoutIconListsWithAnimationType:forceRelayout:]
  -[SBFolderController iconPageIndicatorImageSetCache]
  -[SBFolderController setFakeStatusBar:]
  -[SBFolderController context]
  -[SBFolderController setConfiguration:]
  -[SBFolderController _updatePresentationModeForIconViews]
  -[SBFolderController dockIconListView]
  -[SBFolderController matchMoveSourceViewForIconView:]
  -[SBFolderController prepareForAnimation:withTargetIcon:]
  -[SBFolderController setFolderDelegate:]
  -[SBFolderController setOriginatingIconLocation:]
  -[SBFolderController setFolderIconView:]
  -[SBFolderController folderControllerDidOpen:]
  -[SBFolderController folderControllerDidClose:]
  -[SBFolderController folderController:iconAnimatorForOperation:onViewController:animated:initialDelay:]
  -[SBFolderController enumerateDisplayedIconViewsWithOptions:usingBlock:]
  -[SBFolderController innerFolderController]
  -[SBFolderController originatingIconLocation]
  -[SBFolderController folderDelegate]
  -[SBFolderController iconViewDidDismissContextMenu:]
  -[SBFolderController delegateDidChange]
  -[SBFolderController parentDelegateDidChange]
  -[SBFolderController folderViewIfLoaded]
  -[SBFolderController _makeContentViewWithConfiguration:]
  -[SBFolderController _resetIconLists]
  -[SBFolderController effectiveContentVisibility]
  -[SBFolderController updateAppearanceStateForPageViewControllers:]
  -[SBFolderController _viewControllersToNotifyForViewObscuration]
  -[SBFolderController _cancelTouchesForAllCustomIconImageViewControllers]
  -[SBFolderController isOverridingPageViewControllerAppearanceStateToRemainDisappeared]
  -[SBFolderController visiblePageViewControllers]
  -[SBFolderController _handleEndEditingKeyCommand:]
  -[SBFolderController folderContainerView]
  -[SBFolderController nestingViewController:animationControllerForOperation:onViewController:animated:]
  -[SBFolderController _configureForInnerFolderController:]
  -[SBFolderController prepareToClose]
  -[SBFolderController _addFakeStatusBarView]
  -[SBFolderController _fadeHomescreenAndDockIfNecessaryForFolderOpen:]
  -[SBFolderController _compactFolder]
  -[SBFolderController _removeFakeStatusBar]
  -[SBFolderController updateContentViewOcclusionWithOverriddenHasInnerFolder:]
  -[SBFolderController updateContentViewOcclusion]
  -[SBFolderController _resetFakeStatusBarSettingsIfNecessary]
  -[SBFolderController folderIconView]
  -[SBFolderController viewWillTransitionToSize:forOperation:withTransitionCoordinator:]
  -[SBFolderController orientationDidChange:]
  -[SBFolderController _updateAssociatedControllerStateAnimated:]
  -[SBFolderController _updateFolderRequiredTrailingEmptyListCount]
  -[SBFolderController setCurrentPageIndexToListDirectlyContainingIcon:animated:completion:]
  -[SBFolderController _updateStateOfAssociatedController:animated:]
  -[SBFolderController folderViewShouldClose:withPinchGesture:]
  -[SBFolderController pageViewControllersForLeadingPageIndex:trailingPageIndex:]
  -[SBFolderController viewControllersForPageIndex:]
  -[SBFolderController _updatePresentationModeForIconView:]
  -[SBFolderController iconImageViewControllerPresentationModeForIconView:]
  -[SBFolderController effectiveContentVisibilityIfHasInnerFolder:]
  -[SBFolderController _homescreenAndDockShouldFade]
  -[SBFolderController _setHomescreenAndDockAlpha:]
  -[SBFolderController _removeFakeStatusBarAndAssertionIfExists]
  -[SBFolderController _hideStatusBarForReason:animated:]
  -[SBFolderController _resetFakeStatusBarFrameOnly]
  -[SBFolderController _resetFakeStatusBarMatchMoveAnimation]
  -[SBFolderController _unhideStatusBarForReason:]
  -[SBFolderController _cancelCloseFolderTimer]
  -[SBFolderController closesAfterDragExits]
  -[SBFolderController _closeFolderTimerFired]
  -[SBFolderController canAcceptFolderIconDrags]
  -[SBFolderController _cancelAllInteractionTimers]
  -[SBFolderController noteIconDrag:didChangeInIconListView:]
  -[SBFolderController _setCloseFolderTimerIfNecessary]
  -[SBFolderController _clearIconAnimator]
  -[SBFolderController _newAnimatorForZoomUp:]
  -[SBFolderController outerFolderController]
  -[SBFolderController _listIndexIsVisible:]
  -[SBFolderController shouldOpenFolderIcon:]
  -[SBFolderController configureInnerFolderControllerConfiguration:]
  -[SBFolderController _cancelTouchesForCustomIconImageViewController:]
  -[SBFolderController _enableTouchesOnAllCustomIconImageViewControllers]
  -[SBFolderController setCurrentPageIndexToListDirectlyContainingIcon:animated:]
  -[SBFolderController popFolderAnimated:completion:]
  -[SBFolderController _canAcceptIconDropSession:inListView:]
  -[SBFolderController nestingViewController:sourceViewForPresentingViewController:]
  -[SBFolderController _disableTouchesOnAllCustomIconImageViewControllers]
  -[SBFolderController keepIconImageViewControllersStaticInAllPagesExcluding:forReason:]
  -[SBFolderController noteIconDrag:didEnterIconListView:]
  -[SBFolderController noteIconDrag:didExitIconListView:]
  -[SBFolderController disablesScrollingWhileIconDragIsDropping]
  -[SBFolderController noteIconDragDidEnd:]
  -[SBFolderController shouldViewControllersAppearVisibleForListView:]
  -[SBFolderController _isHitTestingDisabledOnCustomIconImageViewControllers]
  -[SBFolderController _beginTrackingIconViewWithCustomImageViewController:]
  -[SBFolderController _endTrackingIconViewWithCustomImageViewController:]
  -[SBFolderController defaultAccessibilityTintColor]
  -[SBFolderController minimumHomeScreenScaleForFolderControllerBackgroundView:]
  -[SBFolderController iconListViewClassForFolderView:]
  -[SBFolderController iconLocationForFolderView:]
  -[SBFolderController folderView:canChangeCurrentPageIndexToIndex:]
  -[SBFolderController folderView:currentPageIndexWillChange:]
  -[SBFolderController folderView:currentPageIndexDidChange:]
  -[SBFolderController folderViewWillBeginDragging:]
  -[SBFolderController folderViewWillBeginScrolling:]
  -[SBFolderController folderViewWillEndDragging:]
  -[SBFolderController folderViewWillUpdatePageDuringScrolling:]
  -[SBFolderController folderViewDidScroll:]
  -[SBFolderController folderViewDidEndScrolling:]
  -[SBFolderController folderView:willAnimateScrollToPageIndex:]
  -[SBFolderController folderViewShouldBeginEditing:]
  -[SBFolderController folderViewShouldEndEditing:]
  -[SBFolderController folderView:iconListView:canHandleIconDropSession:]
  -[SBFolderController folderView:iconListView:iconDropSessionDidEnter:]
  -[SBFolderController folderView:iconListView:iconDropSessionDidUpdate:]
  -[SBFolderController folderView:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFolderController folderView:iconListView:iconDropSessionDidExit:]
  -[SBFolderController folderView:iconListView:performIconDrop:]
  -[SBFolderController folderView:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFolderController folderView:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFolderController folderView:iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBFolderController folderViewDidChangeOrientation:]
  -[SBFolderController folderView:didAddIconListView:]
  -[SBFolderController folderView:didRemoveIconListView:]
  -[SBFolderController folderView:iconListView:iconViewForDroppingIconDragItem:proposedIconView:]
  -[SBFolderController folderView:iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBFolderController folderView:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFolderController folderView:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFolderController minimumHomeScreenScaleForFolderView:]
  -[SBFolderController contentOverlayInsetsFromParentIfAvailableForFolderView:]
  -[SBFolderController folderView:accessibilityTintColorForRect:]
  -[SBFolderController iconViewDidHandleTap:]
  -[SBFolderController addViewToHierarchyForNestedViewController:]
  -[SBFolderController removeViewFromHierarchyForNestedViewController:]
  -[SBFolderController isScrollDragging]
  -[SBFolderController isScrollDecelerating]
  -[SBFolderController isScrollTracking]
  -[SBFolderController currentScrollingOffset]
  -[SBFolderController beginEditingTitle]
  -[SBFolderController scrollUsingDecelerationAnimationToDefaultPageWithCompletionHandler:]
  -[SBFolderController deepestFolderController]
  -[SBFolderController _closeFolder]
  -[SBFolderController beginOverridingPageViewControllerAppearanceStateToRemainDisappearedForReason:]
  -[SBFolderController _removePageViewControllerAppearStateOverrideAssertion:]
  -[SBFolderController suspendsWallpaperAnimationWhileOpen]
  -[SBFolderController setScrollingDisabled:forReason:]
  -[SBFolderController _updateHomescreenAndDockFade]
  -[SBFolderController _hideFakeStatusBarForReason:animated:]
  -[SBFolderController _unhideFakeStatusBarForReason:animated:]
  -[SBFolderController _iconAppearsOnCurrentPage:]
  -[SBFolderController pushFolderIcon:location:animated:completion:]
  -[SBFolderController restoreExpandedPathIdentifiers:]
  -[SBFolderController prepareToLaunchTappedIcon:completionHandler:]
  -[SBFolderController _canAnyIconViewBeVisiblySettled]
  -[SBFolderController statusBarInsetsForOrientation:]
  -[SBFolderController setDefaultAccessibilityTintColor:]


_SBFolderControllerPageViewControllerAppearStateOverrideAssertion : NSObject <BSInvalidatable, BSDescriptionProviding>
 @property  SBFolderController *folderController
 @property  BOOL invalidated
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion isInvalidated]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion .cxx_destruct]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion succinctDescriptionBuilder]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion descriptionBuilderWithMultilinePrefix:]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion folderController]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion setInvalidated:]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion descriptionWithMultilinePrefix:]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion succinctDescription]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion reason]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion dealloc]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion invalidate]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion initWithFolderController:reason:]


_SBFolderControllerIconImageViewControllerKeepStaticAssertion : NSObject <BSInvalidatable, BSDescriptionProviding>
 @property  SBFolderController *folderController
 @property  BOOL invalidated
 @property  NSIndexSet *pageIndexesToExclude
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion isInvalidated]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion pageIndexesToExclude]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion .cxx_destruct]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion succinctDescriptionBuilder]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion descriptionBuilderWithMultilinePrefix:]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion folderController]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion setInvalidated:]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion descriptionWithMultilinePrefix:]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion succinctDescription]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion initWithFolderController:pageIndexesToExclude:reason:]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion reason]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion dealloc]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion invalidate]


SBHBatteriesElement : SBHCustomIconElement
  // class methods
  +[SBHBatteriesElement elementIdentifier]

  // instance methods
  -[SBHBatteriesElement supportedGridSizeClassesForIcon:]
  -[SBHBatteriesElement displayName]
  -[SBHBatteriesElement icon:unmaskedImageWithInfo:]
  -[SBHBatteriesElement iconSupportsRasterization:]
  -[SBHBatteriesElement iconAllowsLaunch:]


SBHPageManagementIconViewScalingAttributes : NSObject
 @property  NSString *minificationFilter
 @property  BOOL shouldRasterize
 @property  double rasterizationScale
 @property  BOOL allowsEdgeAntialiasing

  // instance methods
  -[SBHPageManagementIconViewScalingAttributes shouldRasterize]
  -[SBHPageManagementIconViewScalingAttributes allowsEdgeAntialiasing]
  -[SBHPageManagementIconViewScalingAttributes .cxx_destruct]
  -[SBHPageManagementIconViewScalingAttributes rasterizationScale]
  -[SBHPageManagementIconViewScalingAttributes minificationFilter]
  -[SBHPageManagementIconViewScalingAttributes initWithMinificationFilter:shouldRasterize:rasterizationScale:allowsEdgeAntialiasing:]


SBFloatyFolderControllerConfiguration : SBFolderControllerConfiguration
 @property  unsigned long backgroundEffect
 @property  BOOL displaysMultipleIconListsInLandscapeOrientation

  // instance methods
  -[SBFloatyFolderControllerConfiguration displaysMultipleIconListsInLandscapeOrientation]
  -[SBFloatyFolderControllerConfiguration setDisplaysMultipleIconListsInLandscapeOrientation:]
  -[SBFloatyFolderControllerConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBFloatyFolderControllerConfiguration initWithConfiguration:]
  -[SBFloatyFolderControllerConfiguration setBackgroundEffect:]
  -[SBFloatyFolderControllerConfiguration backgroundEffect]


SBLiveIconImageView : SBIconImageView
  // instance methods
  -[SBLiveIconImageView isAnimationAllowed]
  -[SBLiveIconImageView prepareForReuse]
  -[SBLiveIconImageView snapshot]
  -[SBLiveIconImageView setPaused:]
  -[SBLiveIconImageView setIcon:location:animated:]
  -[SBLiveIconImageView updateAnimatingState]
  -[SBLiveIconImageView updateImageAnimated:]
  -[SBLiveIconImageView updateUnanimated]


SBHViewControllerTransition : NSObject <SBViewControllerTransitionContextDelegate, SBHViewControllerTransitionAnimationContext, BSDescriptionProviding>
 @property  SBViewControllerTransitionContext *transitionContext
 @property  long long transitionEndpoint
 @property  <SBHViewControllerTransitionDelegate> *delegate
 @property  BOOL wantsAnimation
 @property  BOOL transitioning
 @property  long long targetEndpoint
 @property  id userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHViewControllerTransition wantsAnimation]
  -[SBHViewControllerTransition setUserInfo:]
  -[SBHViewControllerTransition .cxx_destruct]
  -[SBHViewControllerTransition succinctDescriptionBuilder]
  -[SBHViewControllerTransition setDelegate:]
  -[SBHViewControllerTransition descriptionBuilderWithMultilinePrefix:]
  -[SBHViewControllerTransition transitionDidFinish:]
  -[SBHViewControllerTransition descriptionWithMultilinePrefix:]
  -[SBHViewControllerTransition succinctDescription]
  -[SBHViewControllerTransition isTransitioning]
  -[SBHViewControllerTransition delegate]
  -[SBHViewControllerTransition transitionContext]
  -[SBHViewControllerTransition userInfo]
  -[SBHViewControllerTransition setTransitionContext:]
  -[SBHViewControllerTransition transitionEndpoint]
  -[SBHViewControllerTransition progressToEndStateWithAnimation:]
  -[SBHViewControllerTransition returnToBeginningStateWithAnimation:]
  -[SBHViewControllerTransition targetEndpoint]
  -[SBHViewControllerTransition _handleDidProgressToEndState]
  -[SBHViewControllerTransition setTransitionEndpoint:]
  -[SBHViewControllerTransition _newTransitionAnimator]
  -[SBHViewControllerTransition _handleDidReturnToBeginningState]
  -[SBHViewControllerTransition transitionToEndpoint:withAnimation:]


SBNestingViewController : UIViewController <SBNestingViewControllerDelegate, SBViewControllerTransitionContextDelegate>
 @property  BOOL isTransitioning
 @property  long long currentTransitionOperation
 @property  SBViewControllerTransitionContext *currentTransition
 @property  @? clientOperationCompletion
 @property  SBNestingViewController *viewControllerCurrentlyDrivingTransition
 @property  NSHashTable *transitionObservers
 @property  SBNestingViewController *nestedViewController
 @property  SBNestingViewController *parentNestingViewController
 @property  BOOL wantsModalPresentation
 @property  <SBNestingViewControllerDelegate> *delegate
 @property  NSArray *nestedViewControllers
 @property  SBNestingViewController *deepestNestedDescendantViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBNestingViewController addTransitionObserver:]
  -[SBNestingViewController currentTransition]
  -[SBNestingViewController nestingViewController:interactionControllerForAnimationController:]
  -[SBNestingViewController .cxx_destruct]
  -[SBNestingViewController setDelegate:]
  -[SBNestingViewController viewDidAppear:]
  -[SBNestingViewController initWithNibName:bundle:]
  -[SBNestingViewController sizeForChildContentContainer:withParentContainerSize:]
  -[SBNestingViewController shouldAutomaticallyForwardAppearanceMethods]
  -[SBNestingViewController transitionDidFinish:]
  -[SBNestingViewController dismissViewControllerAnimated:completion:]
  -[SBNestingViewController viewWillDisappear:]
  -[SBNestingViewController viewWillAppear:]
  -[SBNestingViewController transitionCoordinator]
  -[SBNestingViewController wantsModalPresentation]
  -[SBNestingViewController isTransitioning]
  -[SBNestingViewController delegate]
  -[SBNestingViewController nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBNestingViewController setCurrentTransition:]
  -[SBNestingViewController removeTransitionObserver:]
  -[SBNestingViewController viewDidDisappear:]
  -[SBNestingViewController transitionWillBegin:]
  -[SBNestingViewController transitionDidBegin:]
  -[SBNestingViewController transitionWillReverse:]
  -[SBNestingViewController transitionDidReverse:]
  -[SBNestingViewController transitionWillFinish:]
  -[SBNestingViewController nestingViewController:animationControllerForOperation:onViewController:animated:]
  -[SBNestingViewController viewWillTransitionToSize:forOperation:withTransitionCoordinator:]
  -[SBNestingViewController nestedViewController]
  -[SBNestingViewController parentNestingViewController]
  -[SBNestingViewController pushNestedViewController:animated:withCompletion:]
  -[SBNestingViewController popNestedViewControllerAnimated:withCompletion:]
  -[SBNestingViewController setNestedViewControllers:withCompletion:]
  -[SBNestingViewController nestingViewController:sourceViewForPresentingViewController:]
  -[SBNestingViewController addViewToHierarchyForNestedViewController:]
  -[SBNestingViewController removeViewFromHierarchyForNestedViewController:]
  -[SBNestingViewController deepestNestedDescendantViewController]
  -[SBNestingViewController _performOperation:onViewController:animated:withCompletion:]
  -[SBNestingViewController nestedViewControllers]
  -[SBNestingViewController traverseNestedViewControllersWithBlock:]
  -[SBNestingViewController transitionObservers]
  -[SBNestingViewController currentTransitionOperation]
  -[SBNestingViewController viewControllerCurrentlyDrivingTransition]
  -[SBNestingViewController _handleWillAddChildViewController:]
  -[SBNestingViewController setParentNestingViewController:]
  -[SBNestingViewController _handleRemoveChildViewController:]
  -[SBNestingViewController frameForNestedViewController:afterOperation:withParentContainerSize:]
  -[SBNestingViewController _updateStateForTransitioningViewController:]
  -[SBNestingViewController _setFinalStateForTransitioningViewController:]
  -[SBNestingViewController setCurrentTransitionOperation:]
  -[SBNestingViewController clientOperationCompletion]
  -[SBNestingViewController setClientOperationCompletion:]
  -[SBNestingViewController nestingViewController:willPresentViewController:]
  -[SBNestingViewController _descriptionForOperation:]
  -[SBNestingViewController _shouldAddTransitioningViewControllerAfterCurrentTransitionCompletes]
  -[SBNestingViewController setNestedViewController:]
  -[SBNestingViewController _handleWillRemoveChildViewController:]
  -[SBNestingViewController _handleAddChildViewController:]
  -[SBNestingViewController addNestedViewController:]
  -[SBNestingViewController removeNestedViewController:]
  -[SBNestingViewController setTransitionObservers:]


SBIconViewCustomImageViewController : UIViewController <SBIconViewCustomImageViewControlling>
 @property  UIViewController *contentViewController
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  SBIcon *icon
 @property  <SBLeafIconDataSource> *visiblyActiveDataSource
 @property  BOOL editing
 @property  BOOL wantsEditingDisplayStyle
 @property  BOOL showingContextMenu
 @property  BOOL overlapping
 @property  BOOL dropping
 @property  BOOL userInteractionEnabled
 @property  BOOL wantsCaptureOnlyBackgroundView
 @property  @? backgroundViewProvider
 @property  @? backgroundViewConfigurator
 @property  BOOL forcesEdgeAntialiasing
 @property  double brightness
 @property  BOOL wantsLabelHidden
 @property  unsigned long userVisibilityStatus
 @property  BOOL automaticallyUpdatesVisiblySettled
 @property  unsigned long presentationMode
 @property  BOOL showsSnapshotWhenDeactivated
 @property  unsigned long imageViewAlignment
 @property  unsigned long pauseReasons
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *applicationShortcutItems
 @property  {UIEdgeInsets=dddd} minimumPreferredEdgeInsetsForContextMenu
 @property  UIView *snapshotView
 @property  {CGPoint=dd} snapshotViewCenter
 @property  UIView *springLoadingEffectTargetView
 @property  {SBIconApproximateLayoutPosition=QQ} approximateLayoutPosition
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds
 @property  double continuousCornerRadius
 @property  BOOL showsSquareCorners
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconViewCustomImageViewController setContentViewController:]
  -[SBIconViewCustomImageViewController _setupStateCapture]
  -[SBIconViewCustomImageViewController forcesEdgeAntialiasing]
  -[SBIconViewCustomImageViewController sbh_underlyingAvocadoHostViewControllers]
  -[SBIconViewCustomImageViewController continuousCornerRadius]
  -[SBIconViewCustomImageViewController .cxx_destruct]
  -[SBIconViewCustomImageViewController sourceView]
  -[SBIconViewCustomImageViewController viewDidLoad]
  -[SBIconViewCustomImageViewController contentView]
  -[SBIconViewCustomImageViewController iconImageInfo]
  -[SBIconViewCustomImageViewController visibleBounds]
  -[SBIconViewCustomImageViewController setShowsSquareCorners:]
  -[SBIconViewCustomImageViewController initWithContentViewController:]
  -[SBIconViewCustomImageViewController contentViewController]
  -[SBIconViewCustomImageViewController viewDidLayoutSubviews]
  -[SBIconViewCustomImageViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[SBIconViewCustomImageViewController setForcesEdgeAntialiasing:]
  -[SBIconViewCustomImageViewController dealloc]
  -[SBIconViewCustomImageViewController showsSquareCorners]
  -[SBIconViewCustomImageViewController _teardownStateCapture]
  -[SBIconViewCustomImageViewController setIconImageInfo:]
  -[SBIconViewCustomImageViewController _updateEdgeAntialiasing]
  -[SBIconViewCustomImageViewController sbh_isCustomIconImageViewController]


SBHLibraryCategoryMap : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSArray *categoryIdentifiers
 @property  NSDictionary *sortedApplicationIdentifiersByCategoryIdentifier
 @property  NSDictionary *localizedCategoryNameByCategoryIdentifier
 @property  NSDate *generatedDate
 @property  NSString *uniqueIdentifier
 @property  BOOL loadedFromDisk
 @property  NSDictionary *dictionaryRepresentation
 @property  NSDictionary *metadata

  // class methods
  +[SBHLibraryCategoryMap diffMap:withMap:]
  +[SBHLibraryCategoryMap supportsSecureCoding]

  // instance methods
  -[SBHLibraryCategoryMap setUniqueIdentifier:]
  -[SBHLibraryCategoryMap uniqueIdentifier]
  -[SBHLibraryCategoryMap initWithCoder:]
  -[SBHLibraryCategoryMap .cxx_destruct]
  -[SBHLibraryCategoryMap dictionaryRepresentation]
  -[SBHLibraryCategoryMap init]
  -[SBHLibraryCategoryMap isEqual:]
  -[SBHLibraryCategoryMap metadata]
  -[SBHLibraryCategoryMap categoryIdentifiers]
  -[SBHLibraryCategoryMap setMetadata:]
  -[SBHLibraryCategoryMap mutableCopyWithZone:]
  -[SBHLibraryCategoryMap copyWithZone:]
  -[SBHLibraryCategoryMap setLoadedFromDisk:]
  -[SBHLibraryCategoryMap loadedFromDisk]
  -[SBHLibraryCategoryMap encodeWithCoder:]
  -[SBHLibraryCategoryMap sortedApplicationIdentifiersForCategoryIdentifier:]
  -[SBHLibraryCategoryMap isEqualToCategoryMap:]
  -[SBHLibraryCategoryMap setCategoryIdentifiers:]
  -[SBHLibraryCategoryMap sortedApplicationIdentifiersByCategoryIdentifier]
  -[SBHLibraryCategoryMap setSortedApplicationIdentifiersByCategoryIdentifier:]
  -[SBHLibraryCategoryMap localizedCategoryNameByCategoryIdentifier]
  -[SBHLibraryCategoryMap setLocalizedCategoryNameByCategoryIdentifier:]
  -[SBHLibraryCategoryMap generatedDate]
  -[SBHLibraryCategoryMap setGeneratedDate:]
  -[SBHLibraryCategoryMap localizedCategoryNameForCategoryIdentifier:]
  -[SBHLibraryCategoryMap categoriesContainApplicationIdentifier:]
  -[SBHLibraryCategoryMap categoryIdentifiersForApplicationIdentifier:]
  -[SBHLibraryCategoryMap categoryIdentifierForProactiveCategoryIdentifier:]


SBHLibraryMutableCategoryMap : SBHLibraryCategoryMap
 @property  NSArray *categoryIdentifiers
 @property  NSDictionary *metadata

  // instance methods
  -[SBHLibraryMutableCategoryMap setSortedApplicationIdentifiers:forCategoryIdentifier:]
  -[SBHLibraryMutableCategoryMap removeCategoryIdentifier:]
  -[SBHLibraryMutableCategoryMap addCategoryIdentifier:]
  -[SBHLibraryMutableCategoryMap setLocalizedCategoryName:forCategoryIdentifier:]
  -[SBHLibraryMutableCategoryMap sortApplicationIdentifiersForCategoryIdentifier:descriptors:]
  -[SBHLibraryMutableCategoryMap addApplicationIdentifier:forCategoryIdentifier:]
  -[SBHLibraryMutableCategoryMap updateRecentlyAddedCategoryFromMap:]


SBHAppLibraryVisualConfiguration : NSObject <NSCopying, BSDescriptionProviding>
 @property  {CGSize=dd} portraitCategoryPodIconSpacing
 @property  {CGSize=dd} landscapeCategoryPodIconSpacing
 @property  {CGSize=dd} expandedCategoryPodIconSpacing
 @property  BOOL usesInsetPlatterSearchAppearance
 @property  double searchContinuousCornerRadius
 @property  SBHSearchVisualConfiguration *extendedSearchVisualConfiguration
 @property  SBHSearchVisualConfiguration *standardSearchVisualConfiguration
 @property  SBHSearchVisualConfiguration *compactSearchVisualConfiguration
 @property  SBHSearchVisualConfiguration *activeSearchVisualConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHAppLibraryVisualConfiguration setCompactSearchVisualConfiguration:]
  -[SBHAppLibraryVisualConfiguration compactSearchVisualConfiguration]
  -[SBHAppLibraryVisualConfiguration setPortraitCategoryPodIconSpacing:]
  -[SBHAppLibraryVisualConfiguration portraitCategoryPodIconSpacing]
  -[SBHAppLibraryVisualConfiguration .cxx_destruct]
  -[SBHAppLibraryVisualConfiguration extendedSearchVisualConfiguration]
  -[SBHAppLibraryVisualConfiguration succinctDescriptionBuilder]
  -[SBHAppLibraryVisualConfiguration usesInsetPlatterSearchAppearance]
  -[SBHAppLibraryVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHAppLibraryVisualConfiguration init]
  -[SBHAppLibraryVisualConfiguration isEqual:]
  -[SBHAppLibraryVisualConfiguration setStandardSearchVisualConfiguration:]
  -[SBHAppLibraryVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHAppLibraryVisualConfiguration succinctDescription]
  -[SBHAppLibraryVisualConfiguration setExtendedSearchVisualConfiguration:]
  -[SBHAppLibraryVisualConfiguration searchContinuousCornerRadius]
  -[SBHAppLibraryVisualConfiguration setActiveSearchVisualConfiguration:]
  -[SBHAppLibraryVisualConfiguration expandedCategoryPodIconSpacing]
  -[SBHAppLibraryVisualConfiguration activeSearchVisualConfiguration]
  -[SBHAppLibraryVisualConfiguration standardSearchVisualConfiguration]
  -[SBHAppLibraryVisualConfiguration setUsesInsetPlatterSearchAppearance:]
  -[SBHAppLibraryVisualConfiguration landscapeCategoryPodIconSpacing]
  -[SBHAppLibraryVisualConfiguration setSearchContinuousCornerRadius:]
  -[SBHAppLibraryVisualConfiguration copyWithZone:]
  -[SBHAppLibraryVisualConfiguration setLandscapeCategoryPodIconSpacing:]
  -[SBHAppLibraryVisualConfiguration setExpandedCategoryPodIconSpacing:]


SBHLibraryZoomAnimator : NSObject <SBHViewControllerTransitionAnimating>
  // class methods
  +[SBHLibraryZoomAnimator validateWithLibrary:context:]

  // instance methods
  -[SBHLibraryZoomAnimator _displayLinkFired:]
  -[SBHLibraryZoomAnimator .cxx_destruct]
  -[SBHLibraryZoomAnimator init]
  -[SBHLibraryZoomAnimator finalizeAnimationAtEndpoint:withContext:]
  -[SBHLibraryZoomAnimator _configureLayoutForPodViewAtIndex:forEndpoint:withContext:includeYPosition:]
  -[SBHLibraryZoomAnimator _configureAlphaForPodViewAtIndex:forEndpoint:withContext:]
  -[SBHLibraryZoomAnimator _configureScaleForPodViewAtIndex:forEndpoint:withContext:includeYTranslation:]
  -[SBHLibraryZoomAnimator _configureCategoryStackAlphaForPodViewAtIndex:forEndpoint:withContext:]
  -[SBHLibraryZoomAnimator _configureCrossfadeSourceContentForPodViewAtIndex:forEndpoint:withContext:]
  -[SBHLibraryZoomAnimator _configureCrossfadeDestinationContentForPodViewAtIndex:forEndpoint:withContext:]
  -[SBHLibraryZoomAnimator _configureSearchViewsForEndpoint:preparing:withContext:]
  -[SBHLibraryZoomAnimator _configureBackgroundViewForEndpoint:withContext:]
  -[SBHLibraryZoomAnimator _configureDockIndicatorViewsForEndpoint:preparing:withContext:]
  -[SBHLibraryZoomAnimator _targetViewHasMatchMove:]
  -[SBHLibraryZoomAnimator _removeMatchMoveFromTargetView:]
  -[SBHLibraryZoomAnimator _removePositionAdditionFromTargetView:]
  -[SBHLibraryZoomAnimator _retargetedAnimationSettingsForSettings:normalizedTier:endpoint:]
  -[SBHLibraryZoomAnimator _matchMoveTargetView:withSourceView:usingSourceFrame:targetFrame:]
  -[SBHLibraryZoomAnimator _addPositionToTargetView:matchingSourceView:initialSourceFrame:]
  -[SBHLibraryZoomAnimator _flyingPodIconViewAtIndex:]
  -[SBHLibraryZoomAnimator _targetFrameForPodView:atIndex:forEndpoint:withContext:]
  -[SBHLibraryZoomAnimator _iconImageInfoForPodViewAtIndex:]
  -[SBHLibraryZoomAnimator _setIconImageInfo:forPodViewAtIndex:]
  -[SBHLibraryZoomAnimator _sourceFrameForPodViewAtIndex:inCoordinateSpace:withContext:]
  -[SBHLibraryZoomAnimator _sourceFrameForPodViewAtIndex:inCoordinateSpace:withContext:forUnscaledPositioning:]
  -[SBHLibraryZoomAnimator prepareToAnimateFromEndpoint:withContext:]
  -[SBHLibraryZoomAnimator animateToEndpoint:withContext:completion:]
  -[SBHLibraryZoomAnimator _matchMoveTargetView:withSourceView:]


SBIconListViewLayoutMetrics : NSObject <NSCopying, BSDescriptionProviding>
 @property  unsigned long columns
 @property  unsigned long rows
 @property  unsigned long columnsUsedForLayout
 @property  long long columnOffset
 @property  {CGSize=dd} iconSpacing
 @property  {CGSize=dd} iconSize
 @property  {CGSize=dd} alignmentIconSize
 @property  {CGSize=dd} iconImageSize
 @property  double iconContentScale
 @property  {UIEdgeInsets=dddd} iconInsets
 @property  SBIconListGridCellInfo *gridCellInfo
 @property  BOOL adjustedInsetsToFit
 @property  BOOL adjustedIconContentScaleToFit
 @property  BOOL needsHorizontalColumnBumps
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewLayoutMetrics columns]
  -[SBIconListViewLayoutMetrics setColumns:]
  -[SBIconListViewLayoutMetrics iconImageSize]
  -[SBIconListViewLayoutMetrics iconInsets]
  -[SBIconListViewLayoutMetrics rows]
  -[SBIconListViewLayoutMetrics iconSize]
  -[SBIconListViewLayoutMetrics setIconContentScale:]
  -[SBIconListViewLayoutMetrics iconSpacing]
  -[SBIconListViewLayoutMetrics alignmentIconSize]
  -[SBIconListViewLayoutMetrics gridCellInfo]
  -[SBIconListViewLayoutMetrics setIconSize:]
  -[SBIconListViewLayoutMetrics setIconSpacing:]
  -[SBIconListViewLayoutMetrics iconContentScale]
  -[SBIconListViewLayoutMetrics .cxx_destruct]
  -[SBIconListViewLayoutMetrics adjustedInsetsToFit]
  -[SBIconListViewLayoutMetrics setAdjustedInsetsToFit:]
  -[SBIconListViewLayoutMetrics setColumnsUsedForLayout:]
  -[SBIconListViewLayoutMetrics setRows:]
  -[SBIconListViewLayoutMetrics succinctDescriptionBuilder]
  -[SBIconListViewLayoutMetrics setIconInsets:]
  -[SBIconListViewLayoutMetrics setNeedsHorizontalColumnBumps:]
  -[SBIconListViewLayoutMetrics descriptionBuilderWithMultilinePrefix:]
  -[SBIconListViewLayoutMetrics descriptionWithMultilinePrefix:]
  -[SBIconListViewLayoutMetrics succinctDescription]
  -[SBIconListViewLayoutMetrics needsHorizontalColumnBumps]
  -[SBIconListViewLayoutMetrics columnOffset]
  -[SBIconListViewLayoutMetrics copyWithZone:]
  -[SBIconListViewLayoutMetrics columnsUsedForLayout]
  -[SBIconListViewLayoutMetrics setAdjustedIconContentScaleToFit:]
  -[SBIconListViewLayoutMetrics setGridCellInfo:]
  -[SBIconListViewLayoutMetrics adjustedIconContentScaleToFit]
  -[SBIconListViewLayoutMetrics setAlignmentIconSize:]
  -[SBIconListViewLayoutMetrics setColumnOffset:]
  -[SBIconListViewLayoutMetrics setIconImageSize:]


SBHLibraryCategoryMapProviderDefaultSource : NSObject <SBHLibraryCategoryMapProviderSource>
 @property  <SBHLibraryCategoryMapProviderSourceDelegate> *delegate
 @property  NSString *sourceName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibraryCategoryMapProviderDefaultSource sourceName]
  -[SBHLibraryCategoryMapProviderDefaultSource .cxx_destruct]
  -[SBHLibraryCategoryMapProviderDefaultSource initWithIconModel:]
  -[SBHLibraryCategoryMapProviderDefaultSource setDelegate:]
  -[SBHLibraryCategoryMapProviderDefaultSource delegate]
  -[SBHLibraryCategoryMapProviderDefaultSource requestLibraryCategoryMapWithOptions:existingLibraryCategoryMap:forbiddenApplicationIdentifiers:sessionId:queue:completion:]
  -[SBHLibraryCategoryMapProviderDefaultSource _requestRefresh:]


SBHWidgetSearchController : UISearchController
 @property  UIView *searchBarBackgroundView
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  UIView *searchBarTextFieldBackgroundView

  // instance methods
  -[SBHWidgetSearchController _contentSizeCategoryDidChange:]
  -[SBHWidgetSearchController .cxx_destruct]
  -[SBHWidgetSearchController _textFieldFont]
  -[SBHWidgetSearchController initWithListLayoutProvider:]
  -[SBHWidgetSearchController dealloc]
  -[SBHWidgetSearchController listLayoutProvider]
  -[SBHWidgetSearchController supportedInterfaceOrientations]
  -[SBHWidgetSearchController updateSearchBarBackgroundForScrollDistance:forClient:]
  -[SBHWidgetSearchController searchBarBackgroundView]
  -[SBHWidgetSearchController _setupSearchBar]
  -[SBHWidgetSearchController _setupTextField]
  -[SBHWidgetSearchController _setupTextFieldBackground]
  -[SBHWidgetSearchController _setupBarBackground]
  -[SBHWidgetSearchController searchBarTextFieldBackgroundView]
  -[SBHWidgetSearchController updateSearchBarContentInsetsWithWidth:]
  -[SBHWidgetSearchController grabberTopSpacing]
  -[SBHWidgetSearchController setSearchBarBackgroundView:]


SBHWidgetSearchBarBackgroundView : UIView
  // instance methods
  -[SBHWidgetSearchBarBackgroundView initWithFrame:]


SBHWidgetMetricsProvider : NSObject <SBSWidgetMetricsProviding>
 @property  <SBHWidgetMetricsProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHWidgetMetricsProvider systemMetricsForFamily:]
  -[SBHWidgetMetricsProvider .cxx_destruct]
  -[SBHWidgetMetricsProvider setDelegate:]
  -[SBHWidgetMetricsProvider previewMetricsSpecificationForBundleIdentifier:]
  -[SBHWidgetMetricsProvider previewMetricsSpecificationForDeviceContext:displayContext:bundleIdentifier:]
  -[SBHWidgetMetricsProvider systemMetricsForWidget:]
  -[SBHWidgetMetricsProvider systemDefaultMetricsSpecification]
  -[SBHWidgetMetricsProvider delegate]


SBHintInteractor : NSObject <UIInteractionProgressObserver, SBViewControllerInteractiveTransitioning>
 @property  UIInteractionProgress *interactionProgress
 @property  double maxHintProgress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double completionSpeed
 @property  long long completionCurve
 @property  BOOL wantsInteractiveStart

  // instance methods
  -[SBHintInteractor cancelTransition]
  -[SBHintInteractor supportsRestarting]
  -[SBHintInteractor interactionProgress]
  -[SBHintInteractor .cxx_destruct]
  -[SBHintInteractor startInteractiveTransition:]
  -[SBHintInteractor finishInteractiveTransition]
  -[SBHintInteractor interactionProgressDidUpdate:]
  -[SBHintInteractor updateTransition:]
  -[SBHintInteractor interactionProgress:didEnd:]
  -[SBHintInteractor _updateInteractionPercentComplete:]
  -[SBHintInteractor initWithInteractionProgress:maxHintProgress:]
  -[SBHintInteractor maxHintProgress]


SBHAddWidgetSheetAppCollectionViewCellConfigurator : NSObject
 @property  SBHIconImageCache *iconImageCache

  // instance methods
  -[SBHAddWidgetSheetAppCollectionViewCellConfigurator .cxx_destruct]
  -[SBHAddWidgetSheetAppCollectionViewCellConfigurator iconImageCache]
  -[SBHAddWidgetSheetAppCollectionViewCellConfigurator configureCell:withApplicationWidgetCollection:]
  -[SBHAddWidgetSheetAppCollectionViewCellConfigurator initWithIconCache:]


SBHMappedIconListLayoutProvider : NSObject <SBIconListLayoutProvider>
 @property  <SBIconListLayoutProvider> *targetListLayoutProvider

  // instance methods
  -[SBHMappedIconListLayoutProvider .cxx_destruct]
  -[SBHMappedIconListLayoutProvider layoutForIconLocation:]
  -[SBHMappedIconListLayoutProvider targetListLayoutProvider]
  -[SBHMappedIconListLayoutProvider initWithTargetListLayoutProvider:]
  -[SBHMappedIconListLayoutProvider mapIconLocation:toIconLocation:]


SBHIconTableViewHeaderFooterView : UITableViewHeaderFooterView
 @property  NSString *title
 @property  {NSDirectionalEdgeInsets=dddd} titleLayoutMargins

  // instance methods
  -[SBHIconTableViewHeaderFooterView setTitle:]
  -[SBHIconTableViewHeaderFooterView .cxx_destruct]
  -[SBHIconTableViewHeaderFooterView prepareForReuse]
  -[SBHIconTableViewHeaderFooterView updateConfigurationUsingState:]
  -[SBHIconTableViewHeaderFooterView title]
  -[SBHIconTableViewHeaderFooterView initWithReuseIdentifier:]
  -[SBHIconTableViewHeaderFooterView titleLayoutMargins]
  -[SBHIconTableViewHeaderFooterView setTitleLayoutMargins:]


SBHSearchBar : SBFTouchPassThroughView <UITextFieldDelegate>
 @property  SBFFeatherBlurView *backgroundView
 @property  double backgroundViewBottomInsetToTextField
 @property  SBHSearchTextField *searchTextField
 @property  <SBHSearchBarDelegate> *delegate
 @property  NSString *text
 @property  UIButton *cancelButton
 @property  BOOL showsCancelButton
 @property  BOOL alignsTextFieldOnPixelBoundaries
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  SBHSearchVisualConfiguration *activeSearchConfiguration
 @property  SBHSearchVisualConfiguration *inactiveSearchConfiguration
 @property  BOOL portraitOrientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHSearchBar textFieldShouldReturn:]
  -[SBHSearchBar textFieldShouldBeginEditing:]
  -[SBHSearchBar setShowsCancelButton:]
  -[SBHSearchBar traitCollectionDidChange:]
  -[SBHSearchBar textFieldDidBeginEditing:]
  -[SBHSearchBar focusGroupIdentifier]
  -[SBHSearchBar showsCancelButton]
  -[SBHSearchBar _searchBarTextFieldDidChangeText:]
  -[SBHSearchBar cancelButton]
  -[SBHSearchBar .cxx_destruct]
  -[SBHSearchBar _updateCancelButtonFont]
  -[SBHSearchBar activeSearchConfiguration]
  -[SBHSearchBar canResignFirstResponder]
  -[SBHSearchBar layoutSubviews]
  -[SBHSearchBar isPortraitOrientation]
  -[SBHSearchBar canBecomeFirstResponder]
  -[SBHSearchBar isFirstResponder]
  -[SBHSearchBar setDelegate:]
  -[SBHSearchBar alignsTextFieldOnPixelBoundaries]
  -[SBHSearchBar becomeFirstResponder]
  -[SBHSearchBar textField:shouldChangeCharactersInRange:replacementString:]
  -[SBHSearchBar _cancelButtonTapped:]
  -[SBHSearchBar setFocusGroupIdentifier:]
  -[SBHSearchBar setShowsCancelButton:animated:]
  -[SBHSearchBar textFieldDidEndEditing:]
  -[SBHSearchBar _accessibilityBoldStatusDidChange:]
  -[SBHSearchBar setPortraitOrientation:]
  -[SBHSearchBar inactiveSearchConfiguration]
  -[SBHSearchBar resignFirstResponder]
  -[SBHSearchBar sizeThatFits:]
  -[SBHSearchBar setAlignsTextFieldOnPixelBoundaries:]
  -[SBHSearchBar setInactiveSearchConfiguration:]
  -[SBHSearchBar setListLayoutProvider:]
  -[SBHSearchBar _currentVisualConfiguration]
  -[SBHSearchBar initWithFrame:]
  -[SBHSearchBar delegate]
  -[SBHSearchBar _performHeightCalculationForVisualConfiguration:]
  -[SBHSearchBar backgroundViewBottomInsetToTextField]
  -[SBHSearchBar searchTextField]
  -[SBHSearchBar setBackgroundViewBottomInsetToTextField:]
  -[SBHSearchBar listLayoutProvider]
  -[SBHSearchBar text]
  -[SBHSearchBar setSearchTextField:]
  -[SBHSearchBar _invalidateIntrinsicContentSizeAndNotify]
  -[SBHSearchBar intrinsicContentSize]
  -[SBHSearchBar sizeThatFits:forVisualConfiguration:]
  -[SBHSearchBar backgroundView]
  -[SBHSearchBar textFieldShouldEndEditing:]


SBHLibraryPodFolderView : SBFolderView <SBIconListModelObserver, SBIconListLayoutObserver, UINavigationBarDelegate, SBHLibrarySearchControllerContentViewControllerScrollViewProvider>
 @property  BSUIScrollView *podScrollView
 @property  UINavigationBar *navigationBar
 @property  BOOL centersContentIfPossible
 @property  <UIScrollViewDelegate> *scrollViewDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <BSUIScrollViewDelegate> *librarySearchControllerScrollViewDelegate

  // class methods
  +[SBHLibraryPodFolderView defaultIconLocation]
  +[SBHLibraryPodFolderView defaultIconListViewClass]

  // instance methods
  -[SBHLibraryPodFolderView _updateIconListContainment:atIndex:]
  -[SBHLibraryPodFolderView updateAccessibilityTintColors]
  -[SBHLibraryPodFolderView iconVisibilityHandling]
  -[SBHLibraryPodFolderView _updateScrollViewContentSize]
  -[SBHLibraryPodFolderView scrollViewDelegate]
  -[SBHLibraryPodFolderView iconListViewDidChangeBoundsSize:]
  -[SBHLibraryPodFolderView _iconListViewSize]
  -[SBHLibraryPodFolderView _configureIconListView:]
  -[SBHLibraryPodFolderView _animatesRotationForAllVisibleIconListViews]
  -[SBHLibraryPodFolderView _frameForIconListAtIndex:]
  -[SBHLibraryPodFolderView _orientationDidChange:]
  -[SBHLibraryPodFolderView _configureScrollingInteraction:]
  -[SBHLibraryPodFolderView _iconSpacingForIconListView]
  -[SBHLibraryPodFolderView scrollViewDidEndScrolling:]
  -[SBHLibraryPodFolderView _updateVisibleRowRange]
  -[SBHLibraryPodFolderView centersContentIfPossible]
  -[SBHLibraryPodFolderView _layoutSubviews]
  -[SBHLibraryPodFolderView _zeroFirstListViewOriginIfNeeded]
  -[SBHLibraryPodFolderView librarySearchControllerScrollViewDelegate]
  -[SBHLibraryPodFolderView setScrollViewDelegate:]
  -[SBHLibraryPodFolderView _layoutMarginsforNavigationBar:]
  -[SBHLibraryPodFolderView _pageWidth]
  -[SBHLibraryPodFolderView scrollViewWillBeginScrolling:]
  -[SBHLibraryPodFolderView accessibilityReduceTransparencyDidChange:]
  -[SBHLibraryPodFolderView _scrollingInteractionVisibleInsets]
  -[SBHLibraryPodFolderView _iconListFrameForPageRect:atIndex:]
  -[SBHLibraryPodFolderView _enumerateScrollableIconViewsUsingBlock:]
  -[SBHLibraryPodFolderView _shouldUseScrollableIconViewInteraction]
  -[SBHLibraryPodFolderView isLibraryPodCategoryFolderView]
  -[SBHLibraryPodFolderView _layoutNavBarAndContentInsets]
  -[SBHLibraryPodFolderView setFolder:]
  -[SBHLibraryPodFolderView _scrollViewContentSize]
  -[SBHLibraryPodFolderView iconListView:didRemoveIconView:]
  -[SBHLibraryPodFolderView .cxx_destruct]
  -[SBHLibraryPodFolderView iconList:didRemoveIcon:]
  -[SBHLibraryPodFolderView _restingContentOffsetForScrollOffset:withVelocity:]
  -[SBHLibraryPodFolderView navigationBar]
  -[SBHLibraryPodFolderView iconList:didMoveIcon:]
  -[SBHLibraryPodFolderView setLegibilitySettings:]
  -[SBHLibraryPodFolderView scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBHLibraryPodFolderView iconList:didAddIcon:]
  -[SBHLibraryPodFolderView scrollViewDidScroll:]
  -[SBHLibraryPodFolderView setLibrarySearchControllerScrollViewDelegate:]
  -[SBHLibraryPodFolderView scrollViewWillBeginDragging:]
  -[SBHLibraryPodFolderView initWithConfiguration:]
  -[SBHLibraryPodFolderView didMoveToWindow]
  -[SBHLibraryPodFolderView iconListView:didAddIconView:]
  -[SBHLibraryPodFolderView podScrollView]
  -[SBHLibraryPodFolderView _positionNavBarAbuttingListView]
  -[SBHLibraryPodFolderView setCentersContentIfPossible:]
  -[SBHLibraryPodFolderView positionForBar:]


SBHLibraryPodCategoryFolderView : SBHLibraryPodFolderView
  // class methods
  +[SBHLibraryPodCategoryFolderView defaultIconListViewClass]

  // instance methods
  -[SBHLibraryPodCategoryFolderView _configureIconListView:]
  -[SBHLibraryPodCategoryFolderView _orientationDidChange:]
  -[SBHLibraryPodCategoryFolderView _iconSpacingForIconListView]
  -[SBHLibraryPodCategoryFolderView isLibraryPodCategoryFolderView]


_SBHLibraryPodIconListView : SBIconListView
  // instance methods
  -[_SBHLibraryPodIconListView baseIconViewClass]


_SBHLibraryPodIconView : SBIconView
  // class methods
  +[_SBHLibraryPodIconView supportsTapGesture]
  +[_SBHLibraryPodIconView supportsCursorInteraction]
  +[_SBHLibraryPodIconView supportsPreviewInteraction]
  +[_SBHLibraryPodIconView supportsDragInteraction]


_SBHLibraryPodCategoryIconListView : _SBHLibraryPodIconListView
  // instance methods
  -[_SBHLibraryPodCategoryIconListView baseIconViewClass]


SBIconListPageControl : UIPageControl <UIGestureRecognizerDelegate>
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  <SBIconListPageControlDelegate> *delegate
 @property  double defaultHeight
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *touchIgnoreRects
 @property  BOOL actsAsButton
 @property  BOOL effectivelyVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListPageControl hitTest:withEvent:]
  -[SBIconListPageControl touchIgnoreRects]
  -[SBIconListPageControl setButtonHighlighted:]
  -[SBIconListPageControl defaultHeight]
  -[SBIconListPageControl gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[SBIconListPageControl .cxx_destruct]
  -[SBIconListPageControl legibilitySettingsDidChange]
  -[SBIconListPageControl touchesBegan:withEvent:]
  -[SBIconListPageControl setLegibilitySettings:]
  -[SBIconListPageControl setDelegate:]
  -[SBIconListPageControl effectiveLegibilitySettings]
  -[SBIconListPageControl tapGestureDidUpdate:]
  -[SBIconListPageControl _shouldAnimatePropertyWithKey:]
  -[SBIconListPageControl setActsAsButton:]
  -[SBIconListPageControl tapGestureRecognizer]
  -[SBIconListPageControl gestureRecognizerShouldBegin:]
  -[SBIconListPageControl touchesCancelled:withEvent:]
  -[SBIconListPageControl initWithFrame:]
  -[SBIconListPageControl pageControlCurrentPageDidChange:]
  -[SBIconListPageControl delegate]
  -[SBIconListPageControl actsAsButton]
  -[SBIconListPageControl isEffectivelyVisible]
  -[SBIconListPageControl setTouchIgnoreRects:]
  -[SBIconListPageControl legibilitySettings]
  -[SBIconListPageControl touchesEnded:withEvent:]


SBHSetDiff : NSObject <NSCopying>
 @property  NSSet *additions
 @property  NSSet *deletions
 @property  NSSet *updates
 @property  NSSet *fromSet
 @property  NSSet *toSet

  // class methods
  +[SBHSetDiff diffFromSet:toSet:]

  // instance methods
  -[SBHSetDiff toSet]
  -[SBHSetDiff .cxx_destruct]
  -[SBHSetDiff isEqual:]
  -[SBHSetDiff fromSet]
  -[SBHSetDiff copyWithZone:]
  -[SBHSetDiff updates]
  -[SBHSetDiff additions]
  -[SBHSetDiff deletions]
  -[SBHSetDiff _initWithFromSet:toSet:additions:deletions:updates:]


SBHDefaultIconListLayoutProvider : NSObject <SBIconListLayoutProvider, BSDescriptionProviding>
 @property  unsigned long screenType
 @property  unsigned long layoutOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHDefaultIconListLayoutProvider currentDeviceScreenType]
  +[SBHDefaultIconListLayoutProvider defaultLayoutOptions]
  +[SBHDefaultIconListLayoutProvider extendedFloatingDockCapacityIconCount]
  +[SBHDefaultIconListLayoutProvider frameworkFallbackInstance]

  // instance methods
  -[SBHDefaultIconListLayoutProvider layoutOptions]
  -[SBHDefaultIconListLayoutProvider initWithScreenType:]
  -[SBHDefaultIconListLayoutProvider configureAppLibraryConfiguration:forScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider .cxx_destruct]
  -[SBHDefaultIconListLayoutProvider configureSupportedIconGridSizeClasses:forScreenType:iconLocation:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider configureGridSizeClassSizes:forScreenType:numberOfColumns:iconLocation:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider succinctDescriptionBuilder]
  -[SBHDefaultIconListLayoutProvider layoutForIconLocation:]
  -[SBHDefaultIconListLayoutProvider initWithScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider descriptionBuilderWithMultilinePrefix:]
  -[SBHDefaultIconListLayoutProvider init]
  -[SBHDefaultIconListLayoutProvider descriptionWithMultilinePrefix:]
  -[SBHDefaultIconListLayoutProvider configureRootFolderConfiguration:forScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider succinctDescription]
  -[SBHDefaultIconListLayoutProvider configureFolderIconConfiguration:forScreenType:numberOfRows:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider screenType]
  -[SBHDefaultIconListLayoutProvider layoutOptionsForIconLocation:]
  -[SBHDefaultIconListLayoutProvider configureIconAccessoryConfiguration:forScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider configureSidebarConfiguration:forScreenType:layoutOptions:getBottomSearchOffset:]
  -[SBHDefaultIconListLayoutProvider configureFloatyFolderConfiguration:forScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider initWithLayoutOptions:]
  -[SBHDefaultIconListLayoutProvider configureLabelConfigurations:forScreenType:]
  -[SBHDefaultIconListLayoutProvider makeLayoutForIconLocation:]
  -[SBHDefaultIconListLayoutProvider homeScreenSearchOverlayInsetsForScreenType:layoutOptions:forAppLibrary:]


SBHFilesElement : SBHCustomIconElement
  // class methods
  +[SBHFilesElement elementIdentifier]

  // instance methods
  -[SBHFilesElement supportedGridSizeClassesForIcon:]
  -[SBHFilesElement displayName]
  -[SBHFilesElement icon:imageWithInfo:]
  -[SBHFilesElement containerBundleIdentifier]
  -[SBHFilesElement iconSupportsRasterization:]
  -[SBHFilesElement iconSupportsConfiguration:]
  -[SBHFilesElement configurationStorageIdentifier]


SBSearchBackdropView : UIView <SBHProgressiveBlur>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBSearchBackdropView _recipeForStyle:]

  // instance methods
  -[SBSearchBackdropView .cxx_destruct]
  -[SBSearchBackdropView initWithFrame:style:]
  -[SBSearchBackdropView prepareForTransitionToBlurred:]
  -[SBSearchBackdropView initWithFrame:]
  -[SBSearchBackdropView setTransitionProgress:]
  -[SBSearchBackdropView completeIncrementalTransitionSuccessfully:]
  -[SBSearchBackdropView completeTransitionSuccessfully:]


SBHStackConfigurationIconListView : SBIconListView
 @property  <SBIconViewDelegate> *iconViewDelegate

  // instance methods
  -[SBHStackConfigurationIconListView baseIconViewClass]
  -[SBHStackConfigurationIconListView configureIconView:forIcon:]
  -[SBHStackConfigurationIconListView .cxx_destruct]
  -[SBHStackConfigurationIconListView sizeThatFits:]
  -[SBHStackConfigurationIconListView setIconViewDelegate:]
  -[SBHStackConfigurationIconListView iconViewDelegate]
  -[SBHStackConfigurationIconListView _setupCustomBackgroundConfigurationForIconView:]


_SBHStackConfigurationIconView : SBIconView
  // class methods
  +[_SBHStackConfigurationIconView groupNameBaseForComponentBackgroundViewOfType:]

  // instance methods
  -[_SBHStackConfigurationIconView shouldTapGestureRecognizeAlongsideDragInteractionGestures]
  -[_SBHStackConfigurationIconView customIconImageViewControllerPriority]


SBFolderTitleTextField : UITextField
 @property  BOOL allowsEditing
 @property  double fontSize
 @property  _UILegibilitySettings *legibilitySettings
 @property  BOOL showingEditUI

  // class methods
  +[SBFolderTitleTextField warmupIfNecessary]
  +[SBFolderTitleTextField _clearButtonImage]

  // instance methods
  -[SBFolderTitleTextField textRectForBounds:]
  -[SBFolderTitleTextField editingRectForBounds:]
  -[SBFolderTitleTextField clearButtonRectForBounds:]
  -[SBFolderTitleTextField pointerInteraction:styleForRegion:]
  -[SBFolderTitleTextField fontSize]
  -[SBFolderTitleTextField allowsEditing]
  -[SBFolderTitleTextField setShowsEditUI:animated:]
  -[SBFolderTitleTextField .cxx_destruct]
  -[SBFolderTitleTextField setLegibilitySettings:]
  -[SBFolderTitleTextField sizeThatFits:]
  -[SBFolderTitleTextField setFontSize:]
  -[SBFolderTitleTextField borderRectForBounds:]
  -[SBFolderTitleTextField _textRectForBounds:]
  -[SBFolderTitleTextField initWithFrame:]
  -[SBFolderTitleTextField _updateLegibility]
  -[SBFolderTitleTextField setAllowsEditing:]
  -[SBFolderTitleTextField showingEditUI]
  -[SBFolderTitleTextField canBecomeFocused]
  -[SBFolderTitleTextField pointerInteraction:regionForRequest:defaultRegion:]
  -[SBFolderTitleTextField legibilitySettings]


SBFolderBackgroundView : UIView
 @property  unsigned long currentEffect
 @property  <SBFolderBackgroundViewDelegate> *delegate
 @property  unsigned long effect
 @property  unsigned long concreteEffect

  // class methods
  +[SBFolderBackgroundView warmupIfNecessary]
  +[SBFolderBackgroundView folderBackgroundSize]
  +[SBFolderBackgroundView cornerRadiusToInsetContent]

  // instance methods
  -[SBFolderBackgroundView currentEffect]
  -[SBFolderBackgroundView setCurrentEffect:]
  -[SBFolderBackgroundView setEffect:]
  -[SBFolderBackgroundView _hasLowQualityBackground]
  -[SBFolderBackgroundView effect]
  -[SBFolderBackgroundView _setContinuousCornerRadius:]
  -[SBFolderBackgroundView .cxx_destruct]
  -[SBFolderBackgroundView layoutSubviews]
  -[SBFolderBackgroundView setDelegate:]
  -[SBFolderBackgroundView _reduceTransparencyChanged]
  -[SBFolderBackgroundView _updateCurrentEffect]
  -[SBFolderBackgroundView updateTintEffectColor]
  -[SBFolderBackgroundView concreteEffect]
  -[SBFolderBackgroundView initWithFrame:]
  -[SBFolderBackgroundView delegate]
  -[SBFolderBackgroundView _tintViewBackgroundColorAtFullAlpha]


SBIconView : UIView <UIPointerInteractionDelegate, _UISettingsKeyObserver, UIGestureRecognizerDelegate, UIDragInteractionDelegate, SBCloseBoxViewDelegate, UIContextMenuInteractionDelegate, SBSHardwareButtonEventConsuming, SBHIconViewConfigurationInteractionDelegate, SBIconViewCustomImageViewControllerObserving, SBHFocusProxyable, SBIconObserver, SBReusableView, SBIconAccessoryInfoProvider>
 @property  UIView *contentContainerView
 @property  UIDragInteraction *dragInteraction
 @property  <UIDragSession> *liftingDragSession
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  NSDate *lastTouchDownDate
 @property  UIViewPropertyAnimator *accessoryViewAnimator
 @property  BOOL overlapping
 @property  long long displayedLabelAccessoryType
 @property  UILongPressGestureRecognizer *editingModeGestureRecognizer
 @property  UIContextMenuInteraction *contextMenuInteraction
 @property  <BSInvalidatable> *homeButtonPressConsumingAssertion
 @property  BOOL lastContextMenuInteractionFailedToLoad
 @property  <SBHIconViewConfigurationInteraction> *currentConfigurationInteraction
 @property  <SBHIconViewConfigurationInteraction> *currentStackConfigurationInteraction
 @property  UIPointerInteraction *iconViewCursorInteraction
 @property  UIPointerInteraction *closeBoxCursorInteraction
 @property  UIPointerInteraction *accessoryViewCursorInteraction
 @property  UIViewPropertyAnimator *closeBoxAnimator
 @property  NSArray *fetchedApplicationShortcutItems
 @property  NSString *representedFolderIconLocation
 @property  BOOL canBeginDrags
 @property  BOOL shouldTapGestureRecognizeAlongsideDragInteractionGestures
 @property  NSString *applicationBundleIdentifierForShortcuts
 @property  NSURL *applicationBundleURLForShortcuts
 @property  NSArray *effectiveApplicationShortcutItems
 @property  {CGSize=dd} maxLabelSize
 @property  long long labelStyle
 @property  BOOL displaysIconStatusInLabel
 @property  SBIcon *icon
 @property  <SBIconViewDelegate> *delegate
 @property  <SBIconViewActionDelegate> *overrideActionDelegate
 @property  NSString *location
 @property  unsigned long configurationOptions
 @property  _UILegibilitySettings *legibilitySettings
 @property  double iconImageAlpha
 @property  double effectiveIconImageAlpha
 @property  double iconAccessoryAlpha
 @property  double iconLabelAlpha
 @property  BOOL allIconElementsButLabelHidden
 @property  NSArray *applicationShortcutItems
 @property  BOOL shouldShowLabelAccessoryView
 @property  BOOL allowsLabelAccessoryView
 @property  long long currentLabelAccessoryType
 @property  double labelAccessoryTotalWidth
 @property  BOOL labelAccessoryHidden
 @property  double baselineOffsetFromBottom
 @property  double firstLineBaseline
 @property  double lastLineBaseline
 @property  BOOL enabled
 @property  BOOL paused
 @property  BOOL editing
 @property  BOOL allowsEditingAnimation
 @property  double editingAnimationStrength
 @property  BOOL allowsCloseBox
 @property  BOOL canShowCloseBox
 @property  BOOL shouldShowCloseBox
 @property  BOOL showingContextMenu
 @property  BOOL allowsBlockedForScreenTimeExpiration
 @property  UIImage *iconImageSnapshot
 @property  UIView *iconImageSnapshotView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} iconImageFrame
 @property  {CGPoint=dd} iconImageCenter
 @property  {CGSize=dd} iconImageVisibleSize
 @property  {CGSize=dd} iconImageSize
 @property  {CGSize=dd} iconViewSize
 @property  {UIEdgeInsets=dddd} cursorHitTestPadding
 @property  BOOL isCursorActive
 @property  BOOL allowsTapWhileEditing
 @property  BOOL highlighted
 @property  BOOL allowsLabelArea
 @property  BOOL allowsPassthroughHitTesting
 @property  BOOL customIconImageViewHitTestingDisabled
 @property  BOOL labelHidden
 @property  BOOL showsSquareCorners
 @property  BOOL touchDownInIcon
 @property  BOOL grabbed
 @property  BOOL dropping
 @property  BOOL showsImageAndLabelDuringDrop
 @property  UIView *dropContainerView
 @property  BOOL refusesRecipientStatus
 @property  BOOL showsDropGlow
 @property  BOOL crossfadingImageWithView
 @property  UIView<SBIconLabelView> *labelView
 @property  UIFont *labelFont
 @property  long long currentAccessoryType
 @property  BOOL allowsAccessoryView
 @property  BOOL shouldShowAccessoryView
 @property  BOOL canShowAccessoryView
 @property  long long continuityBadgeType
 @property  <SBIconContinuityInfo> *continuityInfo
 @property  double iconContentScale
 @property  BOOL iconContentScalingEnabled
 @property  BOOL startsDragMoreQuickly
 @property  double dragInteractionLiftDelay
 @property  Class expectedIconImageViewClass
 @property  unsigned long customIconImageViewControllerPriority
 @property  UIViewController<SBIconViewCustomImageViewControlling> *customIconImageViewController
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  <SBIconListLayout> *listLayout
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  SBHIconImageCache *iconImageCache
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBFolderIcon *folderIcon
 @property  unsigned long folderBackgroundStyle
 @property  UIView *folderIconBackgroundView
 @property  BOOL folderIconFrozen
 @property  unsigned long visibleMiniIconCount
 @property  unsigned long visibleMiniIconListIndex
 @property  unsigned long firstVisibleMiniIconIndex
 @property  unsigned long centerVisibleMiniIconIndex
 @property  unsigned long lastVisibleMiniIconIndex
 @property  BOOL animatingScrolling
 @property  UIColor *accessibilityTintColor
 @property  long long progressState
 @property  BOOL allowsProgressState
 @property  BOOL supportsConfigurationCard
 @property  BOOL showingConfigurationCard
 @property  BOOL supportsStackConfigurationCard
 @property  BOOL showingStackConfigurationCard
 @property  unsigned long imageLoadingBehavior
 @property  unsigned long debugIconIndex
 @property  BOOL iconImageSizeMatchesBoundsSize
 @property  NSString *backgroundViewGroupNameBase
 @property  unsigned long userVisibilityStatus
 @property  {SBIconApproximateLayoutPosition=QQ} approximateLayoutPosition
 @property  UIView *focusProxyView
 @property  BOOL wantsFocusProxyView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL canBecomeFocused
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  UIFocusEffect *focusEffect
 @property  long long focusGroupPriority
 @property  BOOL isTransparentFocusItem
 @property  NSArray *preferredFocusEnvironments
 @property  <UIFocusEnvironment> *parentFocusEnvironment
 @property  <UIFocusItemContainer> *focusItemContainer
 @property  UIView *preferredFocusedView
 @property  NSString *focusGroupIdentifier

  // class methods
  +[SBIconView labelConfigurationForListLayout:contentSizeCategory:options:]
  +[SBIconView defaultViewClassForAccessoryType:]
  +[SBIconView draggedItemBundleIdentifiersInDrag:]
  +[SBIconView continuityBadgeTypeForNSString:]
  +[SBIconView _jitterYTranslationAnimationWithStrength:]
  +[SBIconView defaultIconImageSize]
  +[SBIconView debugContinuityBadgeType]
  +[SBIconView maxLabelSizeForListLayout:contentSizeCategory:options:]
  +[SBIconView _alwaysShowsAccessoryOfType:]
  +[SBIconView iconLiftAlpha]
  +[SBIconView supportsTapGesture]
  +[SBIconView _jitterXTranslationAnimationWithAmount:]
  +[SBIconView allowsLabelAccessoryView]
  +[SBIconView maxLabelSizeForIconImageSize:contentSizeCategory:options:]
  +[SBIconView isIconTapGestureRecognizer:]
  +[SBIconView _jitterRotationAnimationWithAmount:]
  +[SBIconView defaultIconImageCornerRadius]
  +[SBIconView defaultMaxLabelWidthDeltaForContentSizeCategory:]
  +[SBIconView defaultViewClassForLabelAccessoryType:]
  +[SBIconView defaultIconLocation]
  +[SBIconView homeScreenService]
  +[SBIconView componentBackgroundViewOfType:compatibleWithTraitCollection:initialWeighting:]
  +[SBIconView supportsCursorInteraction]
  +[SBIconView defaultLegibilitySettings]
  +[SBIconView defaultWidgetBackgroundRecipe]
  +[SBIconView _jitterYTranslationAnimationWithAmount:]
  +[SBIconView contentContainerViewClass]
  +[SBIconView _labelHeight]
  +[SBIconView maxLabelSizeForIconImageSize:]
  +[SBIconView setDebugContinuityBadgeType:]
  +[SBIconView defaultIconViewSizeForIconImageSize:configurationOptions:]
  +[SBIconView _shouldAlwaysHaveContentContainerView]
  +[SBIconView applicationShortcutService]
  +[SBIconView applicationIconMultitaskingMenu]
  +[SBIconView _closeBoxClassForType:]
  +[SBIconView dragContextForDragItem:]
  +[SBIconView _defaultDragInteractionLiftDelay]
  +[SBIconView defaultImageLoadingBehavior]
  +[SBIconView maxLabelSizeForListLayout:iconImageSize:contentSizeCategory:options:]
  +[SBIconView defaultIconViewSize]
  +[SBIconView _jitterXTranslationAnimationWithStrength:]
  +[SBIconView configureLabelImageParametersBuilder:forIcon:location:]
  +[SBIconView supportsPreviewInteraction]
  +[SBIconView applicationIconSplitViewMenu]
  +[SBIconView showsPopovers]
  +[SBIconView defaultIconImageScale]
  +[SBIconView componentBackgroundViewOfType:]
  +[SBIconView closeBoxTypeForView:]
  +[SBIconView activateShortcut:withBundleIdentifier:forIconView:]
  +[SBIconView supportsDragInteraction]
  +[SBIconView groupNameBaseForComponentBackgroundViewOfType:]
  +[SBIconView labelAccessoryViewBaseRightMargin]
  +[SBIconView defaultMaxLabelHeight]
  +[SBIconView continuityBadgeTypeForContinuityInfo:]
  +[SBIconView defaultIconImageCenterForIconImageSize:]
  +[SBIconView componentBackgroundView]
  +[SBIconView _jitterRotationAnimationWithStrength:]
  +[SBIconView labelAccessoryViewAdditionalRightMarginForType:]

  // instance methods
  -[SBIconView _updateLabelArea]
  -[SBIconView setHighlighted:]
  -[SBIconView _contentSizeCategoryDidChange:]
  -[SBIconView dragInteraction:session:willAddItems:forInteraction:]
  -[SBIconView _isShowingAccessoryView]
  -[SBIconView _createCloseBoxIfNecessary]
  -[SBIconView effectiveOverallAlpha]
  -[SBIconView _destroyAccessoryView]
  -[SBIconView labelFont]
  -[SBIconView setAllowsBlockedForScreenTimeExpiration:]
  -[SBIconView setBoundsSizeFromIconImageSize:]
  -[SBIconView _recursivelyUpdateBackdropMaskFrames]
  -[SBIconView matchingIconViewByAddingConfigurationOptions:removingConfigurationOptions:]
  -[SBIconView setFolderIcon:]
  -[SBIconView prepareToCrossfadeWithFloatyFolderView:allowFolderInteraction:]
  -[SBIconView setAllowsLabelArea:]
  -[SBIconView dragDelegate]
  -[SBIconView _frameForLabelAccessoryViewWithLabelFrame:labelImage:labelImageParameters:imageFrame:]
  -[SBIconView setAllowsPassthroughHitTesting:]
  -[SBIconView _notifyObserversSizeDidChange]
  -[SBIconView accessoryViewAnimator]
  -[SBIconView _frameForLabelHighlight]
  -[SBIconView _contextMenuConfigurationWillPresent:forInteraction:]
  -[SBIconView setDebugIconIndex:]
  -[SBIconView _fetchApplicationShortcutItemsIfAppropriate]
  -[SBIconView tintColor]
  -[SBIconView configurationOptions]
  -[SBIconView _updateLabelAccessoryView]
  -[SBIconView _invalidateHomeButtonPressConsumingAssertion]
  -[SBIconView displayedLabelFont]
  -[SBIconView setCustomIconImageViewController:]
  -[SBIconView _labelVerticalOffset]
  -[SBIconView contextMenuInteraction:previewForHighlightingMenuWithConfiguration:]
  -[SBIconView iconImageSnapshot]
  -[SBIconView overrideActionDelegate]
  -[SBIconView dragInteractionLiftDelay]
  -[SBIconView contentBoundingRectForConfigurationInteraction:]
  -[SBIconView hitTest:withEvent:]
  -[SBIconView _toggleContentContainerViewIfNecessary]
  -[SBIconView _contextMenuConfigurationDidPresent:]
  -[SBIconView dismissConfigurationCardImmediately]
  -[SBIconView _updateCustomIconImageViewController:]
  -[SBIconView configurationInteractionWillEnd:]
  -[SBIconView markAsDropping]
  -[SBIconView iconViewSizeForIconImageSize:]
  -[SBIconView representativeIconViewForModalInteractions]
  -[SBIconView _delegateTouchEnded:]
  -[SBIconView _updateAccessoryViewAnimated:]
  -[SBIconView _widgetBackgroundMaterialForDataSource:]
  -[SBIconView setOverrideActionDelegate:]
  -[SBIconView _hasPopover]
  -[SBIconView endForbiddingEditingModeWithReason:]
  -[SBIconView _updateIconImageViewAnimated:]
  -[SBIconView setHomeButtonPressConsumingAssertion:]
  -[SBIconView iconImageSnapshotView]
  -[SBIconView _setTemporarySnapshotViewForDragPreview:]
  -[SBIconView initWithConfigurationOptions:listLayoutProvider:]
  -[SBIconView contextMenuInteraction:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[SBIconView setApplicationShortcutItems:]
  -[SBIconView _removeJitter]
  -[SBIconView setIconImageAndAccessoryAlpha:]
  -[SBIconView effectiveIconAccessoryAlpha]
  -[SBIconView _applyIconEditingSettings]
  -[SBIconView _setShowingCloseBox:]
  -[SBIconView _handleMakeFullscreenKeyShortcut:]
  -[SBIconView isContextMenuInteractionActive]
  -[SBIconView pointerInteraction:styleForRegion:]
  -[SBIconView badgeString]
  -[SBIconView setOverlapping:]
  -[SBIconView iconImageSize]
  -[SBIconView isFolderIconFrozen]
  -[SBIconView dragSessionWillBegin:]
  -[SBIconView applicationBundleIdentifierForShortcuts]
  -[SBIconView currentConfigurationInteraction]
  -[SBIconView _focusEffectBoundsForFocused:withFocusOutset:]
  -[SBIconView setContinuityInfo:animated:]
  -[SBIconView setDragging:]
  -[SBIconView displayedLabelAccessoryType]
  -[SBIconView supportsConfigurationCard]
  -[SBIconView _applyEditingStateAnimated:]
  -[SBIconView isTimedOut]
  -[SBIconView iconImageSizeMatchesBoundsSize]
  -[SBIconView performAfterContextMenusDismissUsingBlock:]
  -[SBIconView customImageViewControllerWantsLabelHiddenDidChange:]
  -[SBIconView isIconContentScalingEnabled]
  -[SBIconView contextMenuInteraction:willDisplayMenuForConfiguration:animator:]
  -[SBIconView setCustomIconImageViewHitTestingDisabled:]
  -[SBIconView editingModeGestureRecognizerDidFire:]
  -[SBIconView _applyIconContentScale:]
  -[SBIconView _contextMenuInteraction:styleForMenuWithConfiguration:]
  -[SBIconView configurationInteractionDidEnd:]
  -[SBIconView shouldShowLabelAccessoryView]
  -[SBIconView configureMatchingIconView:]
  -[SBIconView setDragging:updateImmediately:]
  -[SBIconView removeAllIconAnimations]
  -[SBIconView canReceiveGrabbedIcon:]
  -[SBIconView effectiveIconLabelAlpha]
  -[SBIconView startForbiddingAccessoryWithReason:animated:]
  -[SBIconView _pointerStyleForAppIcon]
  -[SBIconView _unregisterForAddWidgetRequests]
  -[SBIconView setShowsDropGlow:animator:]
  -[SBIconView _pointerStyleForLibraryAdditionalItemsIndicatorIcon]
  -[SBIconView setLabelStyle:]
  -[SBIconView _additionalLiftScale]
  -[SBIconView _legibilitySettingsWithParameters:]
  -[SBIconView _isFolderIconFreezingSupported]
  -[SBIconView setFetchedApplicationShortcutItems:]
  -[SBIconView refusesRecipientStatus]
  -[SBIconView updateCustomIconImageViewController]
  -[SBIconView containerViewControllerForConfigurationInteraction:]
  -[SBIconView contextMenuInteraction:previewForDismissingMenuWithConfiguration:]
  -[SBIconView maxLabelSize]
  -[SBIconView _handleActivateAppExposeKeyShortcut:]
  -[SBIconView folderBackgroundStyle]
  -[SBIconView _contextMenuInteraction:previewForIconWithConfigurationOptions:highlighted:]
  -[SBIconView iconImageCenter]
  -[SBIconView _legibilitySettingsWithPrimaryColor:]
  -[SBIconView setUserInteractionEnabled:]
  -[SBIconView _updateAllComponentAlphas]
  -[SBIconView setIconAccessoryAlpha:]
  -[SBIconView folderIconImageCache]
  -[SBIconView _updateAfterManualIconImageInfoChange]
  -[SBIconView _delegateTapAllowed]
  -[SBIconView _updateCloseBoxAnimated:]
  -[SBIconView recentsDocumentExtensionProvider]
  -[SBIconView _insertIconImageView:]
  -[SBIconView folderIcon]
  -[SBIconView setFolderIconFrozen:]
  -[SBIconView _backgroundContrastDidChange:]
  -[SBIconView _recursiveNotifyInteractionTintColorDidChangeForReasons:]
  -[SBIconView focusProxyCanBecomeFocused]
  -[SBIconView newCaptureOnlyBackgroundView]
  -[SBIconView _contextMenuInteraction:overrideSuggestedActionsForConfiguration:]
  -[SBIconView _toggleGroupBlendingIfNecessary]
  -[SBIconView _applyIconAccessoryAlpha:]
  -[SBIconView setCrossfadeFraction:]
  -[SBIconView cursorHitTestPadding]
  -[SBIconView allowsAccessoryView]
  -[SBIconView _disableContentContainerView]
  -[SBIconView pointMostlyInside:withEvent:]
  -[SBIconView pointerInteraction:willEnterRegion:animator:]
  -[SBIconView _focusEffectBounds]
  -[SBIconView behaviorDelegate]
  -[SBIconView supportedIconGridSizeClasses]
  -[SBIconView setDragLifted:]
  -[SBIconView newComponentBackgroundViewOfType:]
  -[SBIconView _updateDragInteractionLiftDelay]
  -[SBIconView _updateJitter]
  -[SBIconView setAllowsCloseBox:]
  -[SBIconView _registerForAddWidgetRequestsIfNecessary]
  -[SBIconView _configureViewAsFolderIconImageView:]
  -[SBIconView _setForcingIconContentScalingEnabled:]
  -[SBIconView shouldShowCloseBox]
  -[SBIconView _labelImageParameters]
  -[SBIconView icon]
  -[SBIconView _shouldEnableGroupBlending]
  -[SBIconView popConfigurationCard]
  -[SBIconView representedFolderIconLocation]
  -[SBIconView _debugContinuity]
  -[SBIconView dragInteraction:itemsForAddingToSession:withTouchAtPoint:]
  -[SBIconView effectiveApplicationShortcutItems]
  -[SBIconView _updateBrightness]
  -[SBIconView continuityBadgeType]
  -[SBIconView purgeCachedEditingViewData]
  -[SBIconView setCrossfadeViewFadeFraction:]
  -[SBIconView startsDragMoreQuickly]
  -[SBIconView prepareForIconDrop]
  -[SBIconView _isForcingIconContentScalingEnabled]
  -[SBIconView _hideIconLabelForCustomIconImageViewController]
  -[SBIconView iconImageViewDidEndAsynchronousImageLoadForIcon:]
  -[SBIconView continuityInfo]
  -[SBIconView _handleTap]
  -[SBIconView allowsLabelArea]
  -[SBIconView setAllowsEditingAnimation:]
  -[SBIconView editingModeGestureRecognizer]
  -[SBIconView iconViewCursorInteraction]
  -[SBIconView lastTouchDownDate]
  -[SBIconView _medusaAppShortcutService]
  -[SBIconView displaysIconStatusInLabel]
  -[SBIconView effectiveListLayoutProvider]
  -[SBIconView setIconImageSizeMatchesBoundsSize:]
  -[SBIconView badgeParallaxSettings]
  -[SBIconView dragPreviewForItem:session:]
  -[SBIconView labelConfiguration]
  -[SBIconView _labelImage]
  -[SBIconView _labelBaselineOffsetFromImage]
  -[SBIconView isAnimatingScrolling]
  -[SBIconView dragSession:didEndWithOperation:]
  -[SBIconView _centerForCloseBox]
  -[SBIconView draggingStartLocation]
  -[SBIconView accessibilityTintColor]
  -[SBIconView closeBoxCursorInteraction]
  -[SBIconView _updateConfigurationForIconImageView:]
  -[SBIconView initWithConfigurationOptions:]
  -[SBIconView _dragInteraction:liftAnimationDidChangeDirection:]
  -[SBIconView addGesturesAndInteractionsIfNecessary]
  -[SBIconView _accessoryViewTapGestureChanged:]
  -[SBIconView accessorySize]
  -[SBIconView accessoryViewCursorInteraction]
  -[SBIconView presentStackConfigurationCard]
  -[SBIconView expectedIconImageViewClass]
  -[SBIconView editingAnimationStrength]
  -[SBIconView _updateCursorInteractionsEnabled]
  -[SBIconView closeBoxShouldTrack:]
  -[SBIconView isTouchDownInIcon]
  -[SBIconView isDropping]
  -[SBIconView setIcon:animated:]
  -[SBIconView focusProxyView]
  -[SBIconView isCursorActive]
  -[SBIconView currentLabelAccessoryType]
  -[SBIconView reuseDelegate]
  -[SBIconView isShowingStackConfigurationCard]
  -[SBIconView setCurrentStackConfigurationInteraction:]
  -[SBIconView configurationUIDelegate]
  -[SBIconView setIconContentScale:]
  -[SBIconView dismissStackConfigurationCardImmediately]
  -[SBIconView imageLoadingBehavior]
  -[SBIconView pressesChanged:withEvent:]
  -[SBIconView setContinuityInfo:]
  -[SBIconView iconAccessoryAlpha]
  -[SBIconView labelAccessoryTotalWidth]
  -[SBIconView setUserVisibilityStatus:]
  -[SBIconView _updateFrameToIconViewSize]
  -[SBIconView setCurrentConfigurationInteraction:]
  -[SBIconView setRefusesRecipientStatus:]
  -[SBIconView isLabelHidden]
  -[SBIconView setIconGridImageAlpha:]
  -[SBIconView canBeginDrags]
  -[SBIconView dismissConfigurationCard]
  -[SBIconView setCrossfadeCornerRadius:]
  -[SBIconView dragItems]
  -[SBIconView setFolderIconBackgroundView:]
  -[SBIconView _hideIconLabelForContextMenu]
  -[SBIconView debugIconIndex]
  -[SBIconView setEditing:animated:]
  -[SBIconView allowsCloseBox]
  -[SBIconView allowsEditingAnimation]
  -[SBIconView isShowingContextMenu]
  -[SBIconView _configureIconImageView:]
  -[SBIconView setEditingAnimationStrength:]
  -[SBIconView scrollToTopOfFirstPageAnimated:]
  -[SBIconView endForbiddingAccessoryWithReason:animated:]
  -[SBIconView matchingIconViewWithConfigurationOptions:]
  -[SBIconView setLabelHidden:]
  -[SBIconView pointerInteraction:willExitRegion:animator:]
  -[SBIconView setStartsDragMoreQuickly:]
  -[SBIconView labelImageWithParameters:]
  -[SBIconView _updateCustomIconImageViewControllerHitTesting]
  -[SBIconView shouldTapGestureRecognizeAlongsideDragInteractionGestures]
  -[SBIconView _selfOrCustomViewCanBecomeFocused]
  -[SBIconView prepareToCrossfadeImageWithView:options:]
  -[SBIconView _destroyAccessoryView:]
  -[SBIconView _closeBoxTapGestureChanged:]
  -[SBIconView _refreshAccessoryViewNotification:]
  -[SBIconView _updateLabel]
  -[SBIconView _pointerStyleForWidgetIcon]
  -[SBIconView setAccessoryViewAnimator:]
  -[SBIconView _isShowingCloseBox]
  -[SBIconView _applyOverallAlpha:]
  -[SBIconView setImageLoadingBehavior:]
  -[SBIconView _frameForImageView]
  -[SBIconView setLastContextMenuInteractionFailedToLoad:]
  -[SBIconView applicationBundleURLForShortcuts]
  -[SBIconView setCursorHitTestPadding:]
  -[SBIconView setConfigurationOptions:]
  -[SBIconView allowsTapWhileEditing]
  -[SBIconView cleanupAfterCrossfade]
  -[SBIconView isShowingConfigurationCard]
  -[SBIconView currentImageView]
  -[SBIconView _checkAndRemoveCloseBoxAfterAnimation]
  -[SBIconView homeButtonPressConsumingAssertion]
  -[SBIconView setMorphFraction:]
  -[SBIconView userVisibilityStatus]
  -[SBIconView _configureLabelAccessoryViewForType:]
  -[SBIconView _updateCloseBoxWithAnimation:]
  -[SBIconView prepareToCrossfadeImageWithView:anchorPoint:options:]
  -[SBIconView labelView]
  -[SBIconView shouldActivateApplicationShortcutItem:atIndex:]
  -[SBIconView _animateCloseBoxWithAnimation:animationBlock:]
  -[SBIconView allIconElementsButLabelHidden]
  -[SBIconView shouldShowAccessoryView]
  -[SBIconView contextMenuInteraction:configurationForMenuAtLocation:]
  -[SBIconView _centerForAccessoryView]
  -[SBIconView contextMenuInteraction]
  -[SBIconView _updateIconContentScale]
  -[SBIconView setAllowsCloseBox:withAnimation:]
  -[SBIconView _applyIconImageAlpha:]
  -[SBIconView setCloseBoxAnimator:]
  -[SBIconView visibleMiniIconCount]
  -[SBIconView _makeIconImageView]
  -[SBIconView setDisallowCursorInteraction:]
  -[SBIconView _removeUnknownSubviews]
  -[SBIconView presentConfigurationCard]
  -[SBIconView dropContainerView]
  -[SBIconView _enableContentContainerView]
  -[SBIconView allowsProgressState]
  -[SBIconView cancelDrag]
  -[SBIconView _folderIconImageView]
  -[SBIconView _automationID]
  -[SBIconView _contextMenuConfigurationWillDismiss:]
  -[SBIconView setCustomIconImageViewControllerPriority:]
  -[SBIconView tapGestureDidChange:]
  -[SBIconView isCrossfadingImageWithView]
  -[SBIconView _dragInteraction:competingGestureRecognizerShouldDelayLift:]
  -[SBIconView setLastTouchDownDate:]
  -[SBIconView centerVisibleMiniIconIndex]
  -[SBIconView _contextMenuConfigurationDidDismiss:]
  -[SBIconView progressState]
  -[SBIconView _focusEffectCenter]
  -[SBIconView iconImageViewWillBeginAsynchronousImageLoadForIcon:]
  -[SBIconView currentStackConfigurationInteraction]
  -[SBIconView _addJitter]
  -[SBIconView firstLineBaseline]
  -[SBIconView isLabelAccessoryHidden]
  -[SBIconView setLocation:animated:]
  -[SBIconView showsDropGlow]
  -[SBIconView referenceIconViewForConfigurationInteraction:]
  -[SBIconView setIconFadeFraction:]
  -[SBIconView cancelDragLift]
  -[SBIconView setIconContentScalingEnabled:]
  -[SBIconView _updateProgressAnimated:]
  -[SBIconView lastContextMenuInteractionFailedToLoad]
  -[SBIconView _updateLaunchDisabled]
  -[SBIconView dragInteraction:sessionIsRestrictedToDraggingApplication:]
  -[SBIconView folderIconBackgroundView]
  -[SBIconView setIconLabelAlpha:]
  -[SBIconView _contextMenuInteractionShouldAllowDragAfterDismiss:]
  -[SBIconView iconImageFrame]
  -[SBIconView iconContentScale]
  -[SBIconView removeDroppingAssertion:]
  -[SBIconView setupFocusEffectPlatterView]
  -[SBIconView setAllIconElementsButLabelHidden:]
  -[SBIconView _setShowingAccessoryView:]
  -[SBIconView customIconImageViewControllerPriority]
  -[SBIconView .cxx_destruct]
  -[SBIconView _applyIconLabelAlpha:]
  -[SBIconView setDisplaysIconStatusInLabel:]
  -[SBIconView iconLabelAlpha]
  -[SBIconView updateParallaxSettings]
  -[SBIconView effectiveIconImageAlpha]
  -[SBIconView dismissContextMenuWithCompletion:]
  -[SBIconView _dragInteraction:shouldDelayCompetingGestureRecognizer:]
  -[SBIconView _acquireHomeButtonPressConsumingAssertionIfNecessary]
  -[SBIconView actionDelegate]
  -[SBIconView _frameForLabel]
  -[SBIconView setTouchDownInIcon:]
  -[SBIconView isLabelTextBold]
  -[SBIconView setIconImageAlpha:]
  -[SBIconView dragSession:willEndWithOperation:]
  -[SBIconView homeScreenContentViewForConfigurationInteraction:]
  -[SBIconView setAllowsAccessoryView:]
  -[SBIconView popStackConfigurationCard]
  -[SBIconView setShowsFocusEffect:]
  -[SBIconView canShowCloseBox]
  -[SBIconView contextMenuInteraction:willEndForConfiguration:animator:]
  -[SBIconView _dragInteraction:canExcludeCompetingGestureRecognizer:]
  -[SBIconView setLabelAccessoryHidden:]
  -[SBIconView dragInteraction:previewForLiftingItem:session:]
  -[SBIconView configurationInteractionDidBegin:]
  -[SBIconView currentAccessoryType]
  -[SBIconView setPaused:forReason:]
  -[SBIconView backgroundViewGroupNameBase]
  -[SBIconView approximateLayoutPosition]
  -[SBIconView setAccessibilityTintColor:]
  -[SBIconView iconViewSize]
  -[SBIconView configurationInteractionDidCommit:]
  -[SBIconView iconImageVisibleSize]
  -[SBIconView _handleMakeSplitLeftKeyShortcut:]
  -[SBIconView labelStyle]
  -[SBIconView _shouldShowLabel]
  -[SBIconView setShowsImageAndLabelDuringDrop:]
  -[SBIconView sourceIconViewForConfigurationInteraction:]
  -[SBIconView wantsFocusProxyView]
  -[SBIconView setAllowsProgressState:]
  -[SBIconView pauseReasonsDescriptions]
  -[SBIconView _handleMakeSplitRightKeyShortcut:]
  -[SBIconView isOverlapping]
  -[SBIconView isGrabbed]
  -[SBIconView _fetchSupportedMedusaShortcutActionsIfAppropriate]
  -[SBIconView disallowCursorInteraction]
  -[SBIconView _iconImageView]
  -[SBIconView _handleAddWidgetRequest:]
  -[SBIconView supportsStackConfigurationCard]
  -[SBIconView iconImageCache]
  -[SBIconView consumeSinglePressUpForButtonKind:]
  -[SBIconView setWantsFocusProxyView:]
  -[SBIconView effectiveBrightness]
  -[SBIconView _createAccessoryViewIfNecessary]
  -[SBIconView _closeBoxType]
  -[SBIconView closeBoxAnimator]
  -[SBIconView _updateAllComponentAlphasAnimated:]
  -[SBIconView lastLineBaseline]
  -[SBIconView allowsBlockedForScreenTimeExpiration]
  -[SBIconView configurationInteractionWillBegin:]
  -[SBIconView iconInteractedWhenDisabled]
  -[SBIconView _boldTextStatusDidChange:]
  -[SBIconView _visiblyActiveDataSource]
  -[SBIconView setApproximateLayoutPosition:]
  -[SBIconView allowsLabelAccessoryView]
  -[SBIconView canShowAccessoryView]
  -[SBIconView dismissStackConfigurationCard]
  -[SBIconView startForbiddingEditingModeWithReason:]
  -[SBIconView setFrame:]
  -[SBIconView showsImageAndLabelDuringDrop]
  -[SBIconView setGrabbed:]
  -[SBIconView _shouldHaveContentContainerView]
  -[SBIconView _isCursorInteractionEnabled]
  -[SBIconView isCustomIconImageViewHitTestingDisabled]
  -[SBIconView setLiftingDragSession:]
  -[SBIconView setLabelFont:]
  -[SBIconView earlyTerminateContextMenuDismissAnimation]
  -[SBIconView _destroyIconImageView]
  -[SBIconView iconImageCornerRadius]
  -[SBIconView fetchedApplicationShortcutItems]
  -[SBIconView isDragLifted]
  -[SBIconView customIconImageViewController]
  -[SBIconView _frameForVisibleImage]
  -[SBIconView draggingLaunchActions]
  -[SBIconView draggingLaunchURL]
  -[SBIconView liftingDragSession]
  -[SBIconView performTap]
  -[SBIconView iconImageAlpha]
  -[SBIconView shortcutsDelegate]
  -[SBIconView configureForLabelAllowed:]
  -[SBIconView cleanUpAfterDropAnimation]
  -[SBIconView applicationShortcutItems]
  -[SBIconView _legibilitySettingsWithStyle:primaryColor:]
  -[SBIconView layoutSubviews]
  -[SBIconView setFolderBackgroundStyle:]
  -[SBIconView allowsPassthroughHitTesting]
  -[SBIconView configureLabelImageParametersBuilder:]
  -[SBIconView listLayout]
  -[SBIconView setLocation:]
  -[SBIconView touchesBegan:withEvent:]
  -[SBIconView succinctDescriptionBuilder]
  -[SBIconView canBecomeFirstResponder]
  -[SBIconView setLegibilitySettings:]
  -[SBIconView setBackgroundAndIconGridImageAlpha:]
  -[SBIconView isFolderIcon]
  -[SBIconView cleanupAfterFloatyFolderCrossfade]
  -[SBIconView setDelegate:]
  -[SBIconView iconAccessoriesDidUpdate:]
  -[SBIconView dragInteraction:willAnimateLiftWithAnimator:session:]
  -[SBIconView scrollToTopOfPage:animated:]
  -[SBIconView setIconImageCache:]
  -[SBIconView descriptionBuilderWithMultilinePrefix:]
  -[SBIconView isDragging]
  -[SBIconView _continuousCornerRadius]
  -[SBIconView scrollToGapOrTopIfFullOfPage:animated:]
  -[SBIconView iconImageInfo]
  -[SBIconView dragInteraction:itemsForBeginningSession:]
  -[SBIconView dragInteraction]
  -[SBIconView lastVisibleMiniIconIndex]
  -[SBIconView touchesMoved:withEvent:]
  -[SBIconView _shouldAnimatePropertyWithKey:]
  -[SBIconView setShowsSquareCorners:]
  -[SBIconView isHighlighted]
  -[SBIconView tapGestureRecognizer]
  -[SBIconView dragInteraction:previewForCancellingItem:withDefault:]
  -[SBIconView descriptionWithMultilinePrefix:]
  -[SBIconView frameForMiniIconAtIndex:]
  -[SBIconView setFloatyFolderCrossfadeFraction:]
  -[SBIconView sizeThatFits:]
  -[SBIconView gestureRecognizerShouldBegin:]
  -[SBIconView succinctDescription]
  -[SBIconView prepareForReuse]
  -[SBIconView setIcon:]
  -[SBIconView dragInteraction:session:willEndWithOperation:]
  -[SBIconView setFolderIconImageCache:]
  -[SBIconView firstVisibleMiniIconIndex]
  -[SBIconView setListLayoutProvider:]
  -[SBIconView addObserver:]
  -[SBIconView location]
  -[SBIconView setEditing:]
  -[SBIconView touchesCancelled:withEvent:]
  -[SBIconView clearIconImageInfo]
  -[SBIconView folder]
  -[SBIconView isEnabled]
  -[SBIconView gestureRecognizer:shouldReceiveTouch:]
  -[SBIconView canPerformAction:withSender:]
  -[SBIconView dragInteraction:sessionWillBegin:]
  -[SBIconView setPaused:]
  -[SBIconView dragInteraction:sessionForAddingItems:withTouchAtPoint:]
  -[SBIconView initWithFrame:]
  -[SBIconView pressesCancelled:withEvent:]
  -[SBIconView pointInside:withEvent:]
  -[SBIconView isEditing]
  -[SBIconView delegate]
  -[SBIconView iconImageDidUpdate:]
  -[SBIconView didMoveToWindow]
  -[SBIconView visibleMiniIconListIndex]
  -[SBIconView settings:changedValueForKey:]
  -[SBIconView contentSizeCategory]
  -[SBIconView visibleImageRelativeFrameForMiniIconAtIndex:]
  -[SBIconView canBecomeFocused]
  -[SBIconView dragInteraction:item:willAnimateCancelWithAnimator:]
  -[SBIconView iconLaunchEnabledDidChange:]
  -[SBIconView dealloc]
  -[SBIconView contentContainerView]
  -[SBIconView pressesEnded:withEvent:]
  -[SBIconView scrollToFirstGapAnimated:]
  -[SBIconView showsSquareCorners]
  -[SBIconView removeObserver:]
  -[SBIconView setBounds:]
  -[SBIconView listLayoutProvider]
  -[SBIconView pointerInteraction:regionForRequest:defaultRegion:]
  -[SBIconView setEnabled:]
  -[SBIconView pressesBegan:withEvent:]
  -[SBIconView dragInteraction:session:didEndWithOperation:]
  -[SBIconView intrinsicContentSize]
  -[SBIconView setIconImageInfo:]
  -[SBIconView legibilitySettings]
  -[SBIconView didUpdateFocusInContext:withAnimationCoordinator:]
  -[SBIconView isPaused]
  -[SBIconView baselineOffsetFromBottom]
  -[SBIconView touchesEnded:withEvent:]


SBIconDragInteraction : UIDragInteraction
  // class methods
  +[SBIconDragInteraction isEnabledByDefault]


SBIconTapGestureRecognizer : UITapGestureRecognizer

SBIconForceTouchAppInfoProvider : NSObject <SBIconAccessoryInfoProvider>
 @property  NSString *location
 @property  BOOL highlighted
 @property  long long continuityBadgeType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconForceTouchAppInfoProvider continuityBadgeType]
  -[SBIconForceTouchAppInfoProvider isHighlighted]
  -[SBIconForceTouchAppInfoProvider location]


SBIconViewDragInfo : NSObject <NSSecureCoding, BSDescriptionProviding>
 @property  NSString *bundleIdentifier
 @property  NSURL *launchURL
 @property  long long startLocation
 @property  NSString *activeCustomIconDataSourceUniqueIdentifier
 @property  NSArray *customIconDataSourceConfigurations
 @property  unsigned long gridSizeClass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconViewDragInfo supportsSecureCoding]

  // instance methods
  -[SBIconViewDragInfo launchURL]
  -[SBIconViewDragInfo setGridSizeClass:]
  -[SBIconViewDragInfo initWithCoder:]
  -[SBIconViewDragInfo bundleIdentifier]
  -[SBIconViewDragInfo .cxx_destruct]
  -[SBIconViewDragInfo setLaunchURL:]
  -[SBIconViewDragInfo succinctDescriptionBuilder]
  -[SBIconViewDragInfo setBundleIdentifier:]
  -[SBIconViewDragInfo descriptionBuilderWithMultilinePrefix:]
  -[SBIconViewDragInfo descriptionWithMultilinePrefix:]
  -[SBIconViewDragInfo startLocation]
  -[SBIconViewDragInfo succinctDescription]
  -[SBIconViewDragInfo setStartLocation:]
  -[SBIconViewDragInfo gridSizeClass]
  -[SBIconViewDragInfo activeCustomIconDataSourceUniqueIdentifier]
  -[SBIconViewDragInfo setActiveCustomIconDataSourceUniqueIdentifier:]
  -[SBIconViewDragInfo customIconDataSourceConfigurations]
  -[SBIconViewDragInfo setCustomIconDataSourceConfigurations:]
  -[SBIconViewDragInfo encodeWithCoder:]


SBHIconViewNonPoolingImageCache : SBHIconImageCache
  // class methods
  +[SBHIconViewNonPoolingImageCache supportsMemoryPooling]


SBHIconTransformView : SBIconView
  // class methods
  +[SBHIconTransformView layerClass]
  +[SBHIconTransformView contentContainerViewClass]


SBHIconContentContainerTransformView : SBFTouchPassThroughView
  // class methods
  +[SBHIconContentContainerTransformView layerClass]


SBIconViewDroppingAssertion : NSObject <BSInvalidatable, BSDescriptionProviding>
 @property  BOOL invalidated
 @property  SBIconView *iconView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconViewDroppingAssertion isInvalidated]
  -[SBIconViewDroppingAssertion .cxx_destruct]
  -[SBIconViewDroppingAssertion succinctDescriptionBuilder]
  -[SBIconViewDroppingAssertion descriptionBuilderWithMultilinePrefix:]
  -[SBIconViewDroppingAssertion setInvalidated:]
  -[SBIconViewDroppingAssertion descriptionWithMultilinePrefix:]
  -[SBIconViewDroppingAssertion succinctDescription]
  -[SBIconViewDroppingAssertion dealloc]
  -[SBIconViewDroppingAssertion invalidate]
  -[SBIconViewDroppingAssertion iconView]
  -[SBIconViewDroppingAssertion initWithIconView:]


SBIconViewContextMenuContext : NSObject <NSCopying>
 @property  UIContextMenuInteraction *contextMenuInteraction
 @property  SBIconView *iconView
 @property  {CGPoint=dd} location
 @property  NSUUID *identifier

  // instance methods
  -[SBIconViewContextMenuContext contextMenuInteraction]
  -[SBIconViewContextMenuContext .cxx_destruct]
  -[SBIconViewContextMenuContext setContextMenuInteraction:]
  -[SBIconViewContextMenuContext isEqual:]
  -[SBIconViewContextMenuContext identifier]
  -[SBIconViewContextMenuContext location]
  -[SBIconViewContextMenuContext copyWithZone:]
  -[SBIconViewContextMenuContext iconView]
  -[SBIconViewContextMenuContext initWithIconView:location:]
  -[SBIconViewContextMenuContext contextMenuNotificationUserInfo]


SBMutableIconLabelImageParameters : SBIconLabelImageParameters
 @property  NSString *text
 @property  {CGSize=dd} maxSize
 @property  UIFont *font
 @property  double scale
 @property  BOOL containsEmoji
 @property  BOOL canTruncate
 @property  BOOL canTighten
 @property  long long legibilityStyle
 @property  UIColor *textColor
 @property  BOOL accessibilityReduceTransparencyEnabled
 @property  NSString *contentSizeCategory
 @property  UIColor *focusHighlightColor
 @property  {UIEdgeInsets=dddd} textInsets
 @property  {UIEdgeInsets=dddd} fontLanguageInsets
 @property  BOOL colorspaceGrayscale

  // instance methods
  -[SBMutableIconLabelImageParameters setText:]
  -[SBMutableIconLabelImageParameters setLegibilityStyle:]
  -[SBMutableIconLabelImageParameters setFont:]
  -[SBMutableIconLabelImageParameters setAccessibilityReduceTransparencyEnabled:]
  -[SBMutableIconLabelImageParameters setMaxSize:]
  -[SBMutableIconLabelImageParameters setCanTruncate:]
  -[SBMutableIconLabelImageParameters setTextColor:]
  -[SBMutableIconLabelImageParameters copy]
  -[SBMutableIconLabelImageParameters setScale:]
  -[SBMutableIconLabelImageParameters setContentSizeCategory:]
  -[SBMutableIconLabelImageParameters setTextInsets:]
  -[SBMutableIconLabelImageParameters setFocusHighlightColor:]
  -[SBMutableIconLabelImageParameters setCanTighten:]
  -[SBMutableIconLabelImageParameters setColorspaceGrayscale:]
  -[SBMutableIconLabelImageParameters setContainsEmoji:]
  -[SBMutableIconLabelImageParameters setFontLanguageInsets:]


SBHLibraryPodCrossfadeView : UIView
 @property  SBIconView *podIconView
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo

  // instance methods
  -[SBHLibraryPodCrossfadeView initWithCoder:]
  -[SBHLibraryPodCrossfadeView .cxx_destruct]
  -[SBHLibraryPodCrossfadeView layoutSubviews]
  -[SBHLibraryPodCrossfadeView iconImageInfo]
  -[SBHLibraryPodCrossfadeView sizeThatFits:]
  -[SBHLibraryPodCrossfadeView initWithFrame:]
  -[SBHLibraryPodCrossfadeView intrinsicContentSize]
  -[SBHLibraryPodCrossfadeView setIconImageInfo:]
  -[SBHLibraryPodCrossfadeView initWithForegroundView:podIconView:]
  -[SBHLibraryPodCrossfadeView initWithBackgroundView:podIconView:]
  -[SBHLibraryPodCrossfadeView setPodIconViewCrossfadeFraction:]
  -[SBHLibraryPodCrossfadeView setSourceViewCrossfadeFraction:]
  -[SBHLibraryPodCrossfadeView podIconView]


SBHLibraryCategoryFolder : SBFolder
 @property  SBHLibraryCategoryIdentifier *libraryCategoryIdentifier

  // instance methods
  -[SBHLibraryCategoryFolder isLibraryCategoryFolder]
  -[SBHLibraryCategoryFolder initWithDisplayName:maxListCount:listGridSize:libraryCategoryIdentifier:]
  -[SBHLibraryCategoryFolder .cxx_destruct]
  -[SBHLibraryCategoryFolder libraryCategoryIdentifier]
  -[SBHLibraryCategoryFolder _indexPathToRevealForJiggleMode]


SBHWidgetConfigurationInteraction : NSObject <SBHViewControllerTransitionDelegate, SBHWidgetConfigurationAnimationContext, WFWidgetConfigurationViewControllerDelegate, SBHIconViewConfigurationInteraction>
 @property  SBHWidgetSettings *widgetSettings
 @property  INIntent *configuration
 @property  WFWidgetConfigurationOptions *configurationOptions
 @property  WFWidgetConfigurationViewController *configurationViewController
 @property  UIViewController *containerViewController
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceContentFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} targetContentFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentBoundingRect
 @property  UIView *homeScreenContentView
 @property  SBIconView *sourceView
 @property  SBIconView *referenceView
 @property  MTMaterialView *backgroundView
 @property  UIView *backgroundTintView
 @property  UIView *touchBlockingView
 @property  UITapGestureRecognizer *tapToPresentGesture
 @property  SBHViewControllerTransition *transition
 @property  CHSAvocadoDescriptor *widgetDescriptor
 @property  <SBHIconViewConfigurationInteractionDelegate> *delegate
 @property  <SBLeafIconDataSource> *configuredDataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *containerView
 @property  UIView *targetView

  // instance methods
  -[SBHWidgetConfigurationInteraction containerViewController]
  -[SBHWidgetConfigurationInteraction transition]
  -[SBHWidgetConfigurationInteraction setContainerViewController:]
  -[SBHWidgetConfigurationInteraction setReferenceView:]
  -[SBHWidgetConfigurationInteraction widgetSettings]
  -[SBHWidgetConfigurationInteraction configurationOptions]
  -[SBHWidgetConfigurationInteraction setTransition:]
  -[SBHWidgetConfigurationInteraction setSourceView:]
  -[SBHWidgetConfigurationInteraction referenceView]
  -[SBHWidgetConfigurationInteraction configuration]
  -[SBHWidgetConfigurationInteraction targetView]
  -[SBHWidgetConfigurationInteraction containerView]
  -[SBHWidgetConfigurationInteraction .cxx_destruct]
  -[SBHWidgetConfigurationInteraction sourceView]
  -[SBHWidgetConfigurationInteraction setDelegate:]
  -[SBHWidgetConfigurationInteraction setBackgroundView:]
  -[SBHWidgetConfigurationInteraction delegate]
  -[SBHWidgetConfigurationInteraction beginConfiguration]
  -[SBHWidgetConfigurationInteraction backgroundView]
  -[SBHWidgetConfigurationInteraction setConfiguration:]
  -[SBHWidgetConfigurationInteraction transitionWillProgressToEndState:]
  -[SBHWidgetConfigurationInteraction prepareTransition:]
  -[SBHWidgetConfigurationInteraction transitionWillReturnToBeginningState:]
  -[SBHWidgetConfigurationInteraction transitionDidProgressToEndState:]
  -[SBHWidgetConfigurationInteraction transitionDidReturnToBeginningState:]
  -[SBHWidgetConfigurationInteraction animatorForTransition:]
  -[SBHWidgetConfigurationInteraction popConfiguration]
  -[SBHWidgetConfigurationInteraction endConfiguration]
  -[SBHWidgetConfigurationInteraction endConfigurationImmediately]
  -[SBHWidgetConfigurationInteraction configurationViewController]
  -[SBHWidgetConfigurationInteraction _endConfigurationImmediately:]
  -[SBHWidgetConfigurationInteraction setConfigurationViewController:]
  -[SBHWidgetConfigurationInteraction setHomeScreenContentView:]
  -[SBHWidgetConfigurationInteraction _handleTapToPresent:]
  -[SBHWidgetConfigurationInteraction setTapToPresentGesture:]
  -[SBHWidgetConfigurationInteraction setContentBoundingRect:]
  -[SBHWidgetConfigurationInteraction _setUpMatchMoveAnimationForBackgroundView:]
  -[SBHWidgetConfigurationInteraction widgetDescriptor]
  -[SBHWidgetConfigurationInteraction setBackgroundTintView:]
  -[SBHWidgetConfigurationInteraction _handleTapToDismiss:]
  -[SBHWidgetConfigurationInteraction setTouchBlockingView:]
  -[SBHWidgetConfigurationInteraction _sourceContentFrame]
  -[SBHWidgetConfigurationInteraction setSourceContentFrame:]
  -[SBHWidgetConfigurationInteraction _targetContentFrame]
  -[SBHWidgetConfigurationInteraction setTargetContentFrame:]
  -[SBHWidgetConfigurationInteraction touchBlockingView]
  -[SBHWidgetConfigurationInteraction backgroundTintView]
  -[SBHWidgetConfigurationInteraction tapToPresentGesture]
  -[SBHWidgetConfigurationInteraction contentBoundingRect]
  -[SBHWidgetConfigurationInteraction sourceContentFrame]
  -[SBHWidgetConfigurationInteraction homeScreenContentView]
  -[SBHWidgetConfigurationInteraction targetContentFrame]
  -[SBHWidgetConfigurationInteraction widgetConfigurationViewController:didFinishWithIntent:]
  -[SBHWidgetConfigurationInteraction configuredDataSource]
  -[SBHWidgetConfigurationInteraction initWithWidgetDescriptor:gridSizeClass:intent:configuredDataSource:]
  -[SBHWidgetConfigurationInteraction widgetConfigurationViewControllerPreferredCardSizeDidChange:]


SBHIconApplicationShortcutListComposer : NSObject
  // class methods
  +[SBHIconApplicationShortcutListComposer homeScreenDefaults]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForWidgetIcon:additionalApplicationShortcutItems:widgetIconSupportsConfiguration:iconManagerAllowsEditing:widgetSettings:]
  +[SBHIconApplicationShortcutListComposer filteredApplicationShortcutItemsWithStaticApplicationShortcutItems:dynamicApplicationShortcutItems:]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForFolderIcon:iconImageCache:iconManagerAllowsEditing:removeStyle:badgeViewGenerator:]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForDownloadingApplicationWithBundleIdentifier:iconDisplayName:prioritizationIsAvailable:downloadingInformationAgent:iconManagerAllowsEditing:removeStyle:canShare:]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForBookmarkIcon:withDisplayName:iconManagerAllowsEditing:removeStyle:]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForApplicationWithBundleIdentifier:iconDisplayName:staticItems:dynamicItems:applicationItemID:numberOfDisplayItemsInSwitcher:supportsMultipleWindows:isSystemApplication:isInternalApplication:isApplicationInBeta:isApplicationHidden:iconManagerAllowsEditing:removeStyle:]
  +[SBHIconApplicationShortcutListComposer supportsMultiwindowShortcut]


SBHCalendarApplicationIcon : SBHApplicationIcon <SBCalendarIconImageProviderDelegate>
 @property  SBCalendarIconImageProvider *imageProvider

  // class methods
  +[SBHCalendarApplicationIcon canGenerateIconsInBackground]

  // instance methods
  -[SBHCalendarApplicationIcon initWithLeafIdentifier:applicationBundleID:]
  -[SBHCalendarApplicationIcon .cxx_destruct]
  -[SBHCalendarApplicationIcon _boldTextStatusDidChange:]
  -[SBHCalendarApplicationIcon localeChanged]
  -[SBHCalendarApplicationIcon calendarIconImageProviderHasChanged:]
  -[SBHCalendarApplicationIcon imageProvider]
  -[SBHCalendarApplicationIcon generateIconImageWithInfo:]
  -[SBHCalendarApplicationIcon dealloc]
  -[SBHCalendarApplicationIcon unmaskedIconImageWithInfo:]


SBHFocusGuideView : UIView
 @property  UIView *targetView

  // instance methods
  -[SBHFocusGuideView targetView]
  -[SBHFocusGuideView .cxx_destruct]
  -[SBHFocusGuideView initWithFrame:]
  -[SBHFocusGuideView setTargetView:]
  -[SBHFocusGuideView _updateTargetedView]


SBHIconLibraryQuery : NSObject <NSCopying>
 @property  NSString *searchString
 @property  NSPredicate *predicate
 @property  @? comparator
 @property  NSString *keyboardLanguageHint
 @property  UITextRange *markedTextRange
 @property  NSArray *markedTextArray

  // class methods
  +[SBHIconLibraryQuery string:matchesSearchString:]

  // instance methods
  -[SBHIconLibraryQuery markedTextArray]
  -[SBHIconLibraryQuery initWithSearchString:]
  -[SBHIconLibraryQuery markedTextRange]
  -[SBHIconLibraryQuery searchString]
  -[SBHIconLibraryQuery predicate]
  -[SBHIconLibraryQuery .cxx_destruct]
  -[SBHIconLibraryQuery _hasSearchString]
  -[SBHIconLibraryQuery prefixComparator]
  -[SBHIconLibraryQuery init]
  -[SBHIconLibraryQuery _composeComparator:andComparator:]
  -[SBHIconLibraryQuery isEqual:]
  -[SBHIconLibraryQuery keyboardLanguageHint]
  -[SBHIconLibraryQuery aToZComparator]
  -[SBHIconLibraryQuery initWithMarkedTextSearchString:markedTextRange:markedTextArray:]
  -[SBHIconLibraryQuery copyWithZone:]
  -[SBHIconLibraryQuery comparator]
  -[SBHIconLibraryQuery setKeyboardLanguageHint:]


SBIconWidgetIntroductionView : UIView
 @property  NSArray *widgetIcons

  // instance methods
  -[SBIconWidgetIntroductionView widgetIcons]
  -[SBIconWidgetIntroductionView .cxx_destruct]
  -[SBIconWidgetIntroductionView initWithWidgetIcons:]


SBIconWidgetIntroductionPopoverMaskView_Horizontal : UIView
 @property  UIImageView *leftImageView
 @property  UIImageView *centerImageView
 @property  UIImageView *rightImageView

  // instance methods
  -[SBIconWidgetIntroductionPopoverMaskView_Horizontal .cxx_destruct]
  -[SBIconWidgetIntroductionPopoverMaskView_Horizontal layoutSubviews]
  -[SBIconWidgetIntroductionPopoverMaskView_Horizontal init]
  -[SBIconWidgetIntroductionPopoverMaskView_Horizontal leftImageView]
  -[SBIconWidgetIntroductionPopoverMaskView_Horizontal centerImageView]
  -[SBIconWidgetIntroductionPopoverMaskView_Horizontal rightImageView]


SBIconWidgetIntroductionPopoverMaskView_Vertical : UIView
 @property  UIImageView *maskImageView

  // instance methods
  -[SBIconWidgetIntroductionPopoverMaskView_Vertical maskImageView]
  -[SBIconWidgetIntroductionPopoverMaskView_Vertical .cxx_destruct]
  -[SBIconWidgetIntroductionPopoverMaskView_Vertical layoutSubviews]
  -[SBIconWidgetIntroductionPopoverMaskView_Vertical init]


SBIconWidgetIntroductionPopoverView : UIView
 @property  UIView *popoverView
 @property  UIView *maskView
 @property  UILabel *textLabel
 @property  UIButton *editButton
 @property  UIButton *okButton
 @property  UIView *verticalDividerLine
 @property  <SBIconWidgetIntroductionDelegate> *delegate

  // class methods
  +[SBIconWidgetIntroductionPopoverView contentSize:]

  // instance methods
  -[SBIconWidgetIntroductionPopoverView .cxx_destruct]
  -[SBIconWidgetIntroductionPopoverView layoutSubviews]
  -[SBIconWidgetIntroductionPopoverView setDelegate:]
  -[SBIconWidgetIntroductionPopoverView maskView]
  -[SBIconWidgetIntroductionPopoverView setOkButton:]
  -[SBIconWidgetIntroductionPopoverView setEditButton:]
  -[SBIconWidgetIntroductionPopoverView okButton]
  -[SBIconWidgetIntroductionPopoverView popoverView]
  -[SBIconWidgetIntroductionPopoverView setTextLabel:]
  -[SBIconWidgetIntroductionPopoverView delegate]
  -[SBIconWidgetIntroductionPopoverView editButton]
  -[SBIconWidgetIntroductionPopoverView textLabel]
  -[SBIconWidgetIntroductionPopoverView setMaskView:]
  -[SBIconWidgetIntroductionPopoverView editButtonTapped:]
  -[SBIconWidgetIntroductionPopoverView setUpViews:]
  -[SBIconWidgetIntroductionPopoverView setUpButtonsInPopoverView:vibrantContentView:layoutGuide:vertical:]
  -[SBIconWidgetIntroductionPopoverView okButtonTapped:]
  -[SBIconWidgetIntroductionPopoverView editButtonLabelText]
  -[SBIconWidgetIntroductionPopoverView initWithDelegate:vertical:]
  -[SBIconWidgetIntroductionPopoverView setPopoverView:]
  -[SBIconWidgetIntroductionPopoverView verticalDividerLine]
  -[SBIconWidgetIntroductionPopoverView setVerticalDividerLine:]


SBHPeopleWidgetPersonDetailFadeAnimator : NSObject <SBHViewControllerTransitionAnimating>
 @property  BSAnimationSettings *animationSettings
 @property  BOOL alreadyAnimating

  // instance methods
  -[SBHPeopleWidgetPersonDetailFadeAnimator animationSettings]
  -[SBHPeopleWidgetPersonDetailFadeAnimator .cxx_destruct]
  -[SBHPeopleWidgetPersonDetailFadeAnimator init]
  -[SBHPeopleWidgetPersonDetailFadeAnimator finalizeAnimationAtEndpoint:withContext:]
  -[SBHPeopleWidgetPersonDetailFadeAnimator prepareToAnimateFromEndpoint:withContext:]
  -[SBHPeopleWidgetPersonDetailFadeAnimator animateToEndpoint:withContext:completion:]
  -[SBHPeopleWidgetPersonDetailFadeAnimator _configureForEndpoint:context:]
  -[SBHPeopleWidgetPersonDetailFadeAnimator isAlreadyAnimating]
  -[SBHPeopleWidgetPersonDetailFadeAnimator setAlreadyAnimating:]


SBIconListLayoutBlockObserver : NSObject <BSInvalidatable, SBIconListLayoutObserver>
 @property  @? didAddIconViewBlock
 @property  @? didRemoveIconViewBlock
 @property  @? boundsSizeChangeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListLayoutBlockObserver iconListViewDidChangeBoundsSize:]
  -[SBIconListLayoutBlockObserver iconListView:didRemoveIconView:]
  -[SBIconListLayoutBlockObserver .cxx_destruct]
  -[SBIconListLayoutBlockObserver invalidate]
  -[SBIconListLayoutBlockObserver iconListView:didAddIconView:]
  -[SBIconListLayoutBlockObserver didAddIconViewBlock]
  -[SBIconListLayoutBlockObserver setDidAddIconViewBlock:]
  -[SBIconListLayoutBlockObserver didRemoveIconViewBlock]
  -[SBIconListLayoutBlockObserver setDidRemoveIconViewBlock:]
  -[SBIconListLayoutBlockObserver boundsSizeChangeBlock]
  -[SBIconListLayoutBlockObserver setBoundsSizeChangeBlock:]


SBHFolderIconVisualConfiguration : NSObject <NSCopying, BSDescriptionProviding>
 @property  {CGSize=dd} gridCellSize
 @property  {CGSize=dd} gridCellSpacing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHFolderIconVisualConfiguration gridCellSize]
  -[SBHFolderIconVisualConfiguration gridCellSpacing]
  -[SBHFolderIconVisualConfiguration succinctDescriptionBuilder]
  -[SBHFolderIconVisualConfiguration setGridCellSpacing:]
  -[SBHFolderIconVisualConfiguration setGridCellSize:]
  -[SBHFolderIconVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHFolderIconVisualConfiguration init]
  -[SBHFolderIconVisualConfiguration isEqual:]
  -[SBHFolderIconVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHFolderIconVisualConfiguration succinctDescription]
  -[SBHFolderIconVisualConfiguration copyWithZone:]


SBHStackConfigurationInteraction : NSObject <SBHStackConfigurationViewControllerDelegate, SBHViewControllerTransitionDelegate, SBIconViewObserver, SBHIconViewConfigurationInteraction>
 @property  SBHStackConfiguration *configuration
 @property  SBIconView *iconView
 @property  <SBIconViewProviding> *iconViewProvider
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  SBHViewControllerTransition *transition
 @property  SBHWidgetSettings *widgetSettings
 @property  BOOL showsDoneButton
 @property  BOOL showsAddButton
 @property  UIViewController *containerViewController
 @property  SBHStackConfigurationViewController *configurationViewController
 @property  <SBLeafIconDataSource> *configuredDataSource
 @property  <SBHWidgetSheetViewControllerPresenter> *presenter
 @property  <SBHIconViewConfigurationInteractionDelegate> *delegate
 @property  <SBHStackConfigurationInteractionDelegate> *stackConfigurationDelegate
 @property  <SBHStackConfigurationViewControllerAppearanceDelegate> *appearanceDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHStackConfigurationInteraction appearanceDelegate]
  -[SBHStackConfigurationInteraction iconViewWasDiscarded:]
  -[SBHStackConfigurationInteraction containerViewController]
  -[SBHStackConfigurationInteraction iconViewWasRecycled:]
  -[SBHStackConfigurationInteraction transition]
  -[SBHStackConfigurationInteraction setContainerViewController:]
  -[SBHStackConfigurationInteraction setAppearanceDelegate:]
  -[SBHStackConfigurationInteraction widgetSettings]
  -[SBHStackConfigurationInteraction presenter]
  -[SBHStackConfigurationInteraction iconViewSizeDidChange:]
  -[SBHStackConfigurationInteraction setPresenter:]
  -[SBHStackConfigurationInteraction configuration]
  -[SBHStackConfigurationInteraction iconViewProvider]
  -[SBHStackConfigurationInteraction .cxx_destruct]
  -[SBHStackConfigurationInteraction iconViewDidBecomeWindowless:]
  -[SBHStackConfigurationInteraction setDelegate:]
  -[SBHStackConfigurationInteraction _folderExpansionAnimationWillBegin:]
  -[SBHStackConfigurationInteraction showsDoneButton]
  -[SBHStackConfigurationInteraction delegate]
  -[SBHStackConfigurationInteraction listLayoutProvider]
  -[SBHStackConfigurationInteraction beginConfiguration]
  -[SBHStackConfigurationInteraction iconView]
  -[SBHStackConfigurationInteraction setConfiguration:]
  -[SBHStackConfigurationInteraction transitionWillProgressToEndState:]
  -[SBHStackConfigurationInteraction prepareTransition:]
  -[SBHStackConfigurationInteraction transitionWillReturnToBeginningState:]
  -[SBHStackConfigurationInteraction transitionDidProgressToEndState:]
  -[SBHStackConfigurationInteraction transitionDidReturnToBeginningState:]
  -[SBHStackConfigurationInteraction animatorForTransition:]
  -[SBHStackConfigurationInteraction popConfiguration]
  -[SBHStackConfigurationInteraction endConfiguration]
  -[SBHStackConfigurationInteraction endConfigurationImmediately]
  -[SBHStackConfigurationInteraction configurationViewController]
  -[SBHStackConfigurationInteraction setConfigurationViewController:]
  -[SBHStackConfigurationInteraction _sourceContentFrame]
  -[SBHStackConfigurationInteraction configuredDataSource]
  -[SBHStackConfigurationInteraction _endConfigurationAnimated:]
  -[SBHStackConfigurationInteraction showsAddButton]
  -[SBHStackConfigurationInteraction initWithConfiguration:iconView:iconViewProvider:listLayoutProvider:showsAddButton:showsDoneButton:]
  -[SBHStackConfigurationInteraction _contentBoundingFrame]
  -[SBHStackConfigurationInteraction _handleTransitionWillProgressToEndState:]
  -[SBHStackConfigurationInteraction stackConfigurationDelegate]
  -[SBHStackConfigurationInteraction _padApertureOutsetFromWidgetWithGridSize:]
  -[SBHStackConfigurationInteraction stackConfigurationViewController:didCommitStackConfiguration:]
  -[SBHStackConfigurationInteraction stackConfigurationViewController:draggedIconForIdentifier:]
  -[SBHStackConfigurationInteraction stackConfigurationViewController:isConsumingDropSession:]
  -[SBHStackConfigurationInteraction stackConfigurationViewController:didRemoveSuggestedWidgetIcon:]
  -[SBHStackConfigurationInteraction stackConfigurationViewController:promoteSuggestedWidget:withinStack:]
  -[SBHStackConfigurationInteraction stackConfigurationViewControllerRequestsPresentAddWidgetSheet:]
  -[SBHStackConfigurationInteraction stackConfigurationViewControllerWillAnimateWidgetInsertion:]
  -[SBHStackConfigurationInteraction stackConfigurationViewControllerRequestsDismissal:]
  -[SBHStackConfigurationInteraction stackConfigurationViewController:dragPreviewForIconView:]
  -[SBHStackConfigurationInteraction setStackConfigurationDelegate:]


SBHLibraryAdditionalItemsIndicatorIconImageView : SBFolderIconImageView
  // instance methods
  -[SBHLibraryAdditionalItemsIndicatorIconImageView concreteBackgroundStyle]
  -[SBHLibraryAdditionalItemsIndicatorIconImageView hasOpaqueImage]


SBIconLabelImage : UIImage
 @property  UIImage *legibilityImage
 @property  SBIconLabelImageParameters *parameters

  // class methods
  +[SBIconLabelImage imageWithParameters:]
  +[SBIconLabelImage applyKerning:whitespaceKerning:toAttributedString:]
  +[SBIconLabelImage legibilityStrengthForLegibilityStyle:]
  +[SBIconLabelImage attributedText:fitsInRect:textRect:]
  +[SBIconLabelImage legibilityImageForIconLabelImage:parameters:pool:]
  +[SBIconLabelImage _maxLegibilityImageSizeForLabelSize:]
  +[SBIconLabelImage imageWithParameters:pool:legibilityPool:]
  +[SBIconLabelImage needsLegibilityImageForParameters:]

  // instance methods
  -[SBIconLabelImage hasBaseline]
  -[SBIconLabelImage setLegibilityImage:]
  -[SBIconLabelImage .cxx_destruct]
  -[SBIconLabelImage _initWithCGImage:scale:orientation:parameters:alignmentRectInsets:baselineOffsetFromBottom:]
  -[SBIconLabelImage legibilityImage]
  -[SBIconLabelImage parameters]
  -[SBIconLabelImage alignmentRectInsets]
  -[SBIconLabelImage baselineOffsetFromBottom]


SBHApplicationDataSource : NSObject <SBHIconModelApplicationDataSource>
 @property  FBSApplicationLibrary *appLibrary
 @property  FBSALOToken *addApplicationsObservationToken
 @property  FBSALOToken *replaceApplicationsObservationToken
 @property  FBSALOToken *updateApplicationsObservationToken
 @property  FBSALOToken *removeApplicationsObservationToken
 @property  FBSALOToken *demoteApplicationsObservationToken
 @property  FBSALOToken *addPlaceholdersObservationToken
 @property  FBSALOToken *removedPlaceholdersObservationToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHApplicationDataSource applicationWithBundleIdentifier:]
  -[SBHApplicationDataSource _didReplaceApplicationsInfo:]
  -[SBHApplicationDataSource applicationPlaceholdersForFrontBoardPlaceholders:]
  -[SBHApplicationDataSource updateApplicationsObservationToken]
  -[SBHApplicationDataSource removeIconModelApplicationDataSourceObserver:]
  -[SBHApplicationDataSource iconModel:applicationWithBundleIdentifier:]
  -[SBHApplicationDataSource _didAddPlaceholders:]
  -[SBHApplicationDataSource .cxx_destruct]
  -[SBHApplicationDataSource initWithOptions:]
  -[SBHApplicationDataSource allApplicationsForIconModel:]
  -[SBHApplicationDataSource addApplicationsObservationToken]
  -[SBHApplicationDataSource removedPlaceholdersObservationToken]
  -[SBHApplicationDataSource uninstallApplicationWithBundleIdentifier:options:completion:]
  -[SBHApplicationDataSource init]
  -[SBHApplicationDataSource addIconModelApplicationDataSourceObserver:]
  -[SBHApplicationDataSource _didAddApplicationsInfo:]
  -[SBHApplicationDataSource _didRemovePlaceholders:]
  -[SBHApplicationDataSource _didRemoveApplicationsInfo:]
  -[SBHApplicationDataSource removeApplicationsObservationToken]
  -[SBHApplicationDataSource addPlaceholdersObservationToken]
  -[SBHApplicationDataSource replaceApplicationsObservationToken]
  -[SBHApplicationDataSource applicationsForApplicationsInfo:]
  -[SBHApplicationDataSource dealloc]
  -[SBHApplicationDataSource applicationPlaceholderWithBundleIdentifier:]
  -[SBHApplicationDataSource demoteApplicationsObservationToken]
  -[SBHApplicationDataSource appLibrary]
  -[SBHApplicationDataSource uninstallApplicationWithBundleIdentifier:completion:]
  -[SBHApplicationDataSource allApplicationPlaceholdersForIconModel:]


SBHShortcutsSingleElement : SBHCustomIconElement
  // class methods
  +[SBHShortcutsSingleElement elementIdentifier]

  // instance methods
  -[SBHShortcutsSingleElement supportedGridSizeClassesForIcon:]
  -[SBHShortcutsSingleElement displayName]
  -[SBHShortcutsSingleElement icon:imageWithInfo:]
  -[SBHShortcutsSingleElement containerBundleIdentifier]
  -[SBHShortcutsSingleElement iconSupportsConfiguration:]
  -[SBHShortcutsSingleElement configurationStorageIdentifier]


SBIconLabelViewFactory : NSObject
  // class methods
  +[SBIconLabelViewFactory canUseIconSimpleLabelViewToDisplayLabelWithSettings:imageParameters:forIconView:]
  +[SBIconLabelViewFactory iconLabelViewWithSettings:imageParameters:forIconView:]
  +[SBIconLabelViewFactory canUseIconLabelView:toDisplayLabelWithSettings:imageParameters:forIconView:]


SBIconSimpleLabelView : UIImageView <SBIconLabelView>
 @property  SBIconView *iconView
 @property  UIImage *image
 @property  SBIconLabelImageParameters *imageParameters

  // instance methods
  -[SBIconSimpleLabelView imageParameters]
  -[SBIconSimpleLabelView .cxx_destruct]
  -[SBIconSimpleLabelView updateIconLabelWithSettings:imageParameters:]
  -[SBIconSimpleLabelView initWithSettings:]
  -[SBIconSimpleLabelView iconView]
  -[SBIconSimpleLabelView setIconView:]


SBIconSuggestionLabelView : UIImageView <SBIconLabelView>
 @property  SBIconView *iconView
 @property  UIImage *image
 @property  SBIconLabelImageParameters *imageParameters

  // instance methods
  -[SBIconSuggestionLabelView imageParameters]
  -[SBIconSuggestionLabelView .cxx_destruct]
  -[SBIconSuggestionLabelView updateIconLabelWithSettings:imageParameters:]
  -[SBIconSuggestionLabelView initWithSettings:]
  -[SBIconSuggestionLabelView iconView]
  -[SBIconSuggestionLabelView setIconView:]


SBIconLegibilityLabelView : _UILegibilityView <SBIconLabelView>
 @property  SBIconLabelImageParameters *imageParameters
 @property  SBIconView *iconView
 @property  UIImage *image

  // instance methods
  -[SBIconLegibilityLabelView imageParameters]
  -[SBIconLegibilityLabelView .cxx_destruct]
  -[SBIconLegibilityLabelView updateIconLabelWithSettings:imageParameters:]
  -[SBIconLegibilityLabelView initWithSettings:]
  -[SBIconLegibilityLabelView setImageParameters:]
  -[SBIconLegibilityLabelView iconView]
  -[SBIconLegibilityLabelView setIconView:]


SBHSmartStackElement : SBHCustomIconElement
  // class methods
  +[SBHSmartStackElement elementIdentifier]

  // instance methods
  -[SBHSmartStackElement supportedGridSizeClassesForIcon:]
  -[SBHSmartStackElement displayName]
  -[SBHSmartStackElement icon:imageWithInfo:]


SBHTestAppIconDescriptor : NSObject <SBHTestIconDescriptor>
 @property  NSString *bundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHTestAppIconDescriptor bundleIdentifier]
  -[SBHTestAppIconDescriptor .cxx_destruct]
  -[SBHTestAppIconDescriptor init]
  -[SBHTestAppIconDescriptor isEqual:]
  -[SBHTestAppIconDescriptor copyWithZone:]
  -[SBHTestAppIconDescriptor initWithAppIconBundleIdentifier:]
  -[SBHTestAppIconDescriptor sbh_iconDescriptorType]
  -[SBHTestAppIconDescriptor sbh_isValidWithError:]


SBHTestWidgetIconDescriptor : NSObject <SBHTestWidgetIconDescriptor>
 @property  NSString *bundleIdentifier
 @property  NSString *containerBundleIdentifier
 @property  NSString *widgetIdentifier
 @property  unsigned long sizeClass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHTestWidgetIconDescriptor widgetIconDescriptorFromDictionary:]

  // instance methods
  -[SBHTestWidgetIconDescriptor sizeClass]
  -[SBHTestWidgetIconDescriptor bundleIdentifier]
  -[SBHTestWidgetIconDescriptor .cxx_destruct]
  -[SBHTestWidgetIconDescriptor containerBundleIdentifier]
  -[SBHTestWidgetIconDescriptor init]
  -[SBHTestWidgetIconDescriptor isEqual:]
  -[SBHTestWidgetIconDescriptor copyWithZone:]
  -[SBHTestWidgetIconDescriptor sbh_iconDescriptorType]
  -[SBHTestWidgetIconDescriptor sbh_isValidWithError:]
  -[SBHTestWidgetIconDescriptor initWithBundleIdentifier:containerBundleIdentifier:widgetIdentifier:sizeClass:]
  -[SBHTestWidgetIconDescriptor widgetIdentifier]


SBHTestFakeWidgetIconDescriptor : NSObject <SBHTestWidgetIconDescriptor>
 @property  SBHCustomIconElement *element
 @property  unsigned long sizeClass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHTestFakeWidgetIconDescriptor element]
  -[SBHTestFakeWidgetIconDescriptor sizeClass]
  -[SBHTestFakeWidgetIconDescriptor .cxx_destruct]
  -[SBHTestFakeWidgetIconDescriptor init]
  -[SBHTestFakeWidgetIconDescriptor isEqual:]
  -[SBHTestFakeWidgetIconDescriptor copyWithZone:]
  -[SBHTestFakeWidgetIconDescriptor sbh_iconDescriptorType]
  -[SBHTestFakeWidgetIconDescriptor sbh_isValidWithError:]
  -[SBHTestFakeWidgetIconDescriptor initWithElement:sizeClass:]


SBHTestWidgetStackIconDescriptor : NSObject <SBHTestWidgetIconDescriptor>
 @property  NSArray *widgetIconDescriptors
 @property  unsigned long sizeClass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHTestWidgetStackIconDescriptor sizeClass]
  -[SBHTestWidgetStackIconDescriptor .cxx_destruct]
  -[SBHTestWidgetStackIconDescriptor init]
  -[SBHTestWidgetStackIconDescriptor isEqual:]
  -[SBHTestWidgetStackIconDescriptor copyWithZone:]
  -[SBHTestWidgetStackIconDescriptor sbh_iconDescriptorType]
  -[SBHTestWidgetStackIconDescriptor sbh_isValidWithError:]
  -[SBHTestWidgetStackIconDescriptor initWithWidgetIconDescriptors:]
  -[SBHTestWidgetStackIconDescriptor widgetIconDescriptors]


SBHIconRootTableViewController : UITableViewController <SBHIconRootViewProviding>
 @property  SBFolder *folder
 @property  UIView *contentView
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIViewController *deepestFolderController
 @property  BOOL editing
 @property  BOOL scrolling
 @property  BOOL scrollTracking
 @property  long long currentPageIndex
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  NSSet *presentedIconLocations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long contentVisibility

  // instance methods
  -[SBHIconRootTableViewController setIdleText:]
  -[SBHIconRootTableViewController iconViewForIcon:location:]
  -[SBHIconRootTableViewController firstIconViewForIcon:excludingLocations:]
  -[SBHIconRootTableViewController folderIconImageCache]
  -[SBHIconRootTableViewController setFolder:]
  -[SBHIconRootTableViewController presentedIconLocations]
  -[SBHIconRootTableViewController numberOfSectionsInTableView:]
  -[SBHIconRootTableViewController setEditing:animated:]
  -[SBHIconRootTableViewController tableView:numberOfRowsInSection:]
  -[SBHIconRootTableViewController .cxx_destruct]
  -[SBHIconRootTableViewController iconImageCache]
  -[SBHIconRootTableViewController tableView:didSelectRowAtIndexPath:]
  -[SBHIconRootTableViewController viewDidLoad]
  -[SBHIconRootTableViewController tableView:cellForRowAtIndexPath:]
  -[SBHIconRootTableViewController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHIconRootTableViewController contentView]
  -[SBHIconRootTableViewController setLegibilitySettings:]
  -[SBHIconRootTableViewController setIconImageCache:]
  -[SBHIconRootTableViewController setCurrentPageIndex:]
  -[SBHIconRootTableViewController noteUserIsInteractingWithIcons]
  -[SBHIconRootTableViewController setCurrentPageIndex:animated:completion:]
  -[SBHIconRootTableViewController contentVisibility]
  -[SBHIconRootTableViewController currentPageIndex]
  -[SBHIconRootTableViewController cancelScrolling]
  -[SBHIconRootTableViewController setFolderIconImageCache:]
  -[SBHIconRootTableViewController setEditing:]
  -[SBHIconRootTableViewController isDisplayingIconView:inLocation:]
  -[SBHIconRootTableViewController firstIconViewForIcon:inLocations:]
  -[SBHIconRootTableViewController folder]
  -[SBHIconRootTableViewController revealIcon:animated:completionHandler:]
  -[SBHIconRootTableViewController isDisplayingIcon:inLocations:]
  -[SBHIconRootTableViewController isEditing]
  -[SBHIconRootTableViewController isDisplayingIconView:]
  -[SBHIconRootTableViewController isScrolling]
  -[SBHIconRootTableViewController firstIconViewForIcon:]
  -[SBHIconRootTableViewController enumerateDisplayedIconViewsUsingBlock:]
  -[SBHIconRootTableViewController isDisplayingIcon:inLocation:]
  -[SBHIconRootTableViewController setContentVisibility:]
  -[SBHIconRootTableViewController isDisplayingIcon:]
  -[SBHIconRootTableViewController isPresentingIconLocation:]
  -[SBHIconRootTableViewController legibilitySettings]
  -[SBHIconRootTableViewController isScrollTracking]
  -[SBHIconRootTableViewController deepestFolderController]


SBHClockApplicationIconImageView : SBLiveIconImageView <SBDateTimeOverrideObserver>
 @property  NSString *currentNumberingSystem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHClockApplicationIconImageView initialize]
  +[SBHClockApplicationIconImageView overrideDate]
  +[SBHClockApplicationIconImageView effectiveDate]
  +[SBHClockApplicationIconImageView hoursMinutesHandColor]
  +[SBHClockApplicationIconImageView backgroundImageNameWithImageInfo:]
  +[SBHClockApplicationIconImageView makeMinutesHandLayerWithImageSet:]
  +[SBHClockApplicationIconImageView systemNumberingSystem]
  +[SBHClockApplicationIconImageView makeDotLayerWithOuterDiameter:innerDiameter:isSeconds:imageSet:]
  +[SBHClockApplicationIconImageView setOverrideDate:]
  +[SBHClockApplicationIconImageView setOverrideDateOffset:]
  +[SBHClockApplicationIconImageView makeComponentImageWithMetrics:size:actions:]
  +[SBHClockApplicationIconImageView configureHandLayer:metrics:]
  +[SBHClockApplicationIconImageView _handleTimeChange:]
  +[SBHClockApplicationIconImageView secondsHandColor]
  +[SBHClockApplicationIconImageView makeHoursHandImageWithMetrics:]
  +[SBHClockApplicationIconImageView fallbackBackgroundImageWithIconImageInfo:]
  +[SBHClockApplicationIconImageView makeHoursHandLayerWithImageSet:]
  +[SBHClockApplicationIconImageView makeImageSetForMetrics:]
  +[SBHClockApplicationIconImageView _timerFired:]
  +[SBHClockApplicationIconImageView iconImageWithImageInfo:includingMask:]
  +[SBHClockApplicationIconImageView getMetrics:forIconImageInfo:]
  +[SBHClockApplicationIconImageView imageSetForMetrics:]
  +[SBHClockApplicationIconImageView makeComponentImageWithMetrics:size:path:fillColor:options:]
  +[SBHClockApplicationIconImageView precacheDataWithIconImageInfo:]
  +[SBHClockApplicationIconImageView makeDotImageWithOuterDiameter:innerDiameter:color:isSeconds:metrics:]
  +[SBHClockApplicationIconImageView makeSecondsHandLayerWithImageSet:]
  +[SBHClockApplicationIconImageView overrideDateOffset]
  +[SBHClockApplicationIconImageView makeMinutesHandImageWithMetrics:]
  +[SBHClockApplicationIconImageView makeSecondsHandImageWithMetrics:]

  // instance methods
  -[SBHClockApplicationIconImageView controller:didChangeOverrideDateFromDate:]
  -[SBHClockApplicationIconImageView contentsImage]
  -[SBHClockApplicationIconImageView localeDidChange:]
  -[SBHClockApplicationIconImageView getMetrics:]
  -[SBHClockApplicationIconImageView .cxx_destruct]
  -[SBHClockApplicationIconImageView layoutSubviews]
  -[SBHClockApplicationIconImageView isAnimationAllowed]
  -[SBHClockApplicationIconImageView prepareForReuse]
  -[SBHClockApplicationIconImageView setCurrentNumberingSystem:]
  -[SBHClockApplicationIconImageView _updateUnanimatedWithComponents:]
  -[SBHClockApplicationIconImageView applyMetrics:]
  -[SBHClockApplicationIconImageView setPaused:]
  -[SBHClockApplicationIconImageView initWithFrame:]
  -[SBHClockApplicationIconImageView _timerFiredWithComponents:flags:]
  -[SBHClockApplicationIconImageView setIcon:location:animated:]
  -[SBHClockApplicationIconImageView updateAnimatingState]
  -[SBHClockApplicationIconImageView squareContentsImage]
  -[SBHClockApplicationIconImageView _setAnimating:]
  -[SBHClockApplicationIconImageView updateUnanimated]
  -[SBHClockApplicationIconImageView currentNumberingSystem]


SBHClockHandsImageSet : NSObject
 @property  UIImage *seconds
 @property  UIImage *minutes
 @property  UIImage *hours
 @property  UIImage *hourMinuteDot
 @property  UIImage *secondDot

  // instance methods
  -[SBHClockHandsImageSet getMetrics:]
  -[SBHClockHandsImageSet secondDot]
  -[SBHClockHandsImageSet hours]
  -[SBHClockHandsImageSet .cxx_destruct]
  -[SBHClockHandsImageSet setSeconds:]
  -[SBHClockHandsImageSet setHours:]
  -[SBHClockHandsImageSet setMinutes:]
  -[SBHClockHandsImageSet setSecondDot:]
  -[SBHClockHandsImageSet seconds]
  -[SBHClockHandsImageSet setMetrics:]
  -[SBHClockHandsImageSet setHourMinuteDot:]
  -[SBHClockHandsImageSet hourMinuteDot]
  -[SBHClockHandsImageSet minutes]


SBHDebugIconViewController : UIViewController <SBIconViewCustomImageViewControlling>
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  SBIcon *icon
 @property  <SBLeafIconDataSource> *visiblyActiveDataSource
 @property  BOOL editing
 @property  BOOL wantsEditingDisplayStyle
 @property  BOOL showingContextMenu
 @property  BOOL overlapping
 @property  BOOL dropping
 @property  BOOL userInteractionEnabled
 @property  BOOL wantsCaptureOnlyBackgroundView
 @property  @? backgroundViewProvider
 @property  @? backgroundViewConfigurator
 @property  BOOL forcesEdgeAntialiasing
 @property  double brightness
 @property  BOOL wantsLabelHidden
 @property  unsigned long userVisibilityStatus
 @property  BOOL automaticallyUpdatesVisiblySettled
 @property  unsigned long presentationMode
 @property  BOOL showsSnapshotWhenDeactivated
 @property  unsigned long imageViewAlignment
 @property  unsigned long pauseReasons
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *applicationShortcutItems
 @property  {UIEdgeInsets=dddd} minimumPreferredEdgeInsetsForContextMenu
 @property  UIView *snapshotView
 @property  {CGPoint=dd} snapshotViewCenter
 @property  UIView *springLoadingEffectTargetView
 @property  {SBIconApproximateLayoutPosition=QQ} approximateLayoutPosition
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds
 @property  double continuousCornerRadius
 @property  BOOL showsSquareCorners
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHDebugIconViewController icon]
  -[SBHDebugIconViewController continuousCornerRadius]
  -[SBHDebugIconViewController .cxx_destruct]
  -[SBHDebugIconViewController sourceView]
  -[SBHDebugIconViewController viewDidLoad]
  -[SBHDebugIconViewController iconImageInfo]
  -[SBHDebugIconViewController visibleBounds]
  -[SBHDebugIconViewController setShowsSquareCorners:]
  -[SBHDebugIconViewController initWithIcon:]
  -[SBHDebugIconViewController showsSquareCorners]
  -[SBHDebugIconViewController setIconImageInfo:]


SBPinchInteractionProgress : UIInteractionProgress <UIGestureRecognizerDelegate>
 @property  UIPinchGestureRecognizer *pinchGesture
 @property  double minPinchScale
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBPinchInteractionProgress _handlePinchGesture:]
  -[SBPinchInteractionProgress .cxx_destruct]
  -[SBPinchInteractionProgress pinchGesture]
  -[SBPinchInteractionProgress minPinchScale]
  -[SBPinchInteractionProgress _updatePinchScale:]
  -[SBPinchInteractionProgress initWithPinchGesture:minPinchScale:]


SBHAddWidgetSheetViewController : SBHAddWidgetSheetViewControllerBase <UICollectionViewDelegate, UISheetPresentationControllerDelegate, SBHAddWidgetSheetViewControllerDelegate, SBHWidgetWrapperViewControllerDelegate, SBHMainAddSheetViewControlling, SBHWidgetSheetViewControlling, SBHWidgetDragHandlerPassing, UISearchResultsUpdating, UISearchControllerDelegate>
 @property  MTMaterialView *backgroundView
 @property  UICollectionView *collectionView
 @property  SBHWidgetSearchController *searchController
 @property  NSArray *searchBarGradientMaskLayers
 @property  NSArray *filteredApplicationWidgetCollections
 @property  NSArray *galleryItems
 @property  UIButton *closeButton
 @property  NSMutableDictionary *suggestedItemsByGalleryLayoutSize
 @property  double horizontalSpacing
 @property  {NSDirectionalEdgeInsets=dddd} contentInsets
 @property  {NSDirectionalEdgeInsets=dddd} applicationsSectionInsets
 @property  double searchBarHeightAdjustment
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} keyboardFrameIntersect
 @property  SBHWidgetAddSheetTransitionContext *transitionContext
 @property  UIViewController *barSwipeViewController
 @property  SBHWidgetSearchController *externalSearchController
 @property  BOOL shouldShowGalleryOnly
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SBHWidgetDragHandling> *widgetDragHandler
 @property  NSArray *applicationWidgetCollections
 @property  <SBHWidgetSheetViewControllerPresenter> *presenter
 @property  unsigned long galleryLayoutSize
 @property  NSMutableDictionary *userInfo

  // instance methods
  -[SBHAddWidgetSheetViewController _contentSizeCategoryDidChange:]
  -[SBHAddWidgetSheetViewController willPresentSearchController:]
  -[SBHAddWidgetSheetViewController presenter]
  -[SBHAddWidgetSheetViewController setGalleryItems:]
  -[SBHAddWidgetSheetViewController collectionView:didUnhighlightItemAtIndexPath:]
  -[SBHAddWidgetSheetViewController collectionView:didSelectItemAtIndexPath:]
  -[SBHAddWidgetSheetViewController setPresenter:]
  -[SBHAddWidgetSheetViewController viewWillLayoutSubviews]
  -[SBHAddWidgetSheetViewController setContentInsets:]
  -[SBHAddWidgetSheetViewController didDismissSearchController:]
  -[SBHAddWidgetSheetViewController collectionView:didHighlightItemAtIndexPath:]
  -[SBHAddWidgetSheetViewController searchController]
  -[SBHAddWidgetSheetViewController collectionView:shouldSelectItemAtIndexPath:]
  -[SBHAddWidgetSheetViewController _keyboardWillShow:]
  -[SBHAddWidgetSheetViewController setSearchController:]
  -[SBHAddWidgetSheetViewController updateSearchResultsForSearchController:]
  -[SBHAddWidgetSheetViewController contentInsets]
  -[SBHAddWidgetSheetViewController .cxx_destruct]
  -[SBHAddWidgetSheetViewController didMoveToParentViewController:]
  -[SBHAddWidgetSheetViewController closeButtonTapped:]
  -[SBHAddWidgetSheetViewController viewDidAppear:]
  -[SBHAddWidgetSheetViewController setSearchBarGradientMaskLayers:]
  -[SBHAddWidgetSheetViewController collectionView]
  -[SBHAddWidgetSheetViewController presentationControllerWillDismiss:]
  -[SBHAddWidgetSheetViewController scrollViewDidScroll:]
  -[SBHAddWidgetSheetViewController setCollectionView:]
  -[SBHAddWidgetSheetViewController viewWillDisappear:]
  -[SBHAddWidgetSheetViewController viewDidLayoutSubviews]
  -[SBHAddWidgetSheetViewController viewWillAppear:]
  -[SBHAddWidgetSheetViewController _suggestedItems]
  -[SBHAddWidgetSheetViewController searchBarGradientMaskLayers]
  -[SBHAddWidgetSheetViewController setBackgroundView:]
  -[SBHAddWidgetSheetViewController setCloseButton:]
  -[SBHAddWidgetSheetViewController transitionContext]
  -[SBHAddWidgetSheetViewController userInfo]
  -[SBHAddWidgetSheetViewController dealloc]
  -[SBHAddWidgetSheetViewController closeButton]
  -[SBHAddWidgetSheetViewController loadView]
  -[SBHAddWidgetSheetViewController _reloadData]
  -[SBHAddWidgetSheetViewController supportedInterfaceOrientations]
  -[SBHAddWidgetSheetViewController viewDidDisappear:]
  -[SBHAddWidgetSheetViewController galleryItems]
  -[SBHAddWidgetSheetViewController setTransitionContext:]
  -[SBHAddWidgetSheetViewController backgroundView]
  -[SBHAddWidgetSheetViewController _updateCollectionViewInsets]
  -[SBHAddWidgetSheetViewController _newBackgroundView]
  -[SBHAddWidgetSheetViewController _materialViewForVisualStyling]
  -[SBHAddWidgetSheetViewController addWidgetSheetViewControllerDidCancel:]
  -[SBHAddWidgetSheetViewController addWidgetSheetViewController:didSelectWidgetIconView:]
  -[SBHAddWidgetSheetViewController widgetDragHandler]
  -[SBHAddWidgetSheetViewController backgroundViewMatchingMaterialBeneathAddWidgetSheetViewController:]
  -[SBHAddWidgetSheetViewController externalSearchController]
  -[SBHAddWidgetSheetViewController setExternalSearchController:]
  -[SBHAddWidgetSheetViewController initWithListLayoutProvider:iconViewProvider:allowedWidgets:appCellConfigurator:]
  -[SBHAddWidgetSheetViewController _makeGalleryItemsFromHomeScreenItems:]
  -[SBHAddWidgetSheetViewController _presentedGalleryViewController]
  -[SBHAddWidgetSheetViewController setSuggestedItems:forGalleryLayoutSize:]
  -[SBHAddWidgetSheetViewController _shouldAnimateChanges]
  -[SBHAddWidgetSheetViewController _refreshData:]
  -[SBHAddWidgetSheetViewController _shouldShowGallery]
  -[SBHAddWidgetSheetViewController shouldShowGalleryOnly]
  -[SBHAddWidgetSheetViewController setGalleryLayoutSize:]
  -[SBHAddWidgetSheetViewController _addWidgetSheetStyle]
  -[SBHAddWidgetSheetViewController _generateLayoutSectionForSectionIdx:width:]
  -[SBHAddWidgetSheetViewController collectionView:cellForItemAtIndexPath:itemIdentifier:]
  -[SBHAddWidgetSheetViewController _updateSearchBarContentInsets]
  -[SBHAddWidgetSheetViewController _layoutSearchBarGradientMaskLayers]
  -[SBHAddWidgetSheetViewController _backgroundTapped:]
  -[SBHAddWidgetSheetViewController _addBarSwipeView]
  -[SBHAddWidgetSheetViewController _effectiveSearchController]
  -[SBHAddWidgetSheetViewController addWidgetSheetViewControllerWillAppear:]
  -[SBHAddWidgetSheetViewController _keyboardWillDismiss:]
  -[SBHAddWidgetSheetViewController _selectFirstItem]
  -[SBHAddWidgetSheetViewController _presentGalleryCell]
  -[SBHAddWidgetSheetViewController addWidgetSheetViewControllerDidAppear:]
  -[SBHAddWidgetSheetViewController addWidgetSheetViewControllerWillDisappear:]
  -[SBHAddWidgetSheetViewController addWidgetSheetViewControllerDidDisappear:]
  -[SBHAddWidgetSheetViewController _layoutCollectionViewForScalingIfNeeded]
  -[SBHAddWidgetSheetViewController _metricsForOrientation:]
  -[SBHAddWidgetSheetViewController applicationWidgetCollectionsToUse]
  -[SBHAddWidgetSheetViewController _shouldShowSuggestionsListItem]
  -[SBHAddWidgetSheetViewController _generateSnapshotDiffedFromSnapshot:]
  -[SBHAddWidgetSheetViewController _reloadData:]
  -[SBHAddWidgetSheetViewController _sectionIndexForSection:]
  -[SBHAddWidgetSheetViewController sheetIconMetrics]
  -[SBHAddWidgetSheetViewController _presentDetailSheetForGalleryCellAtIndexPath:]
  -[SBHAddWidgetSheetViewController _applicationWidgetCollectionIndexForItemIndex:]
  -[SBHAddWidgetSheetViewController _presentDetailSheetViewControllerForApplicationWidgetCollection:]
  -[SBHAddWidgetSheetViewController setShouldShowGalleryOnly:]
  -[SBHAddWidgetSheetViewController setApplicationWidgetCollections:]
  -[SBHAddWidgetSheetViewController _presentDetailViewController:fromCell:]
  -[SBHAddWidgetSheetViewController _collectionView:updateSeparatorVisibility:forHighlightAtIndexPath:]
  -[SBHAddWidgetSheetViewController _presentDetailSheetViewControllerForApplicationWidgetCollection:configuredWithGalleryItem:selectedSizeClass:fromCell:atIndexPath:]
  -[SBHAddWidgetSheetViewController _currentPresenter]
  -[SBHAddWidgetSheetViewController _itemIndexForApplicationWidgetCollectionIndex:]
  -[SBHAddWidgetSheetViewController _clearDetailViewController]
  -[SBHAddWidgetSheetViewController _newWrapperViewControllerWithGalleryItem:sizeClass:]
  -[SBHAddWidgetSheetViewController _itemsArrayWithSizeClasses:nSmallsGroup:mediumAndSmallGroup:usesThreeColumnLayout:]
  -[SBHAddWidgetSheetViewController _podsArrayWithSizeClasses:columnCount:]
  -[SBHAddWidgetSheetViewController _isSearchVisible]
  -[SBHAddWidgetSheetViewController galleryLayoutSize]
  -[SBHAddWidgetSheetViewController _sizeClasses]
  -[SBHAddWidgetSheetViewController _collectionViewLayoutGallerySectionWithWidth:sizeClasses:]
  -[SBHAddWidgetSheetViewController _newPadCollectionViewLayoutGallerySectionWithWidth:sizeClasses:]
  -[SBHAddWidgetSheetViewController _collectionViewLayoutApplicationsSectionWithStyle:]
  -[SBHAddWidgetSheetViewController backgroundViewMatchingMaterialBeneathWrapperViewController:]
  -[SBHAddWidgetSheetViewController configureBackgroundView:matchingMaterialBeneathWrapperViewController:]
  -[SBHAddWidgetSheetViewController suggestedItemsForGalleryLayoutSize:]
  -[SBHAddWidgetSheetViewController applicationWidgetCollections]
  -[SBHAddWidgetSheetViewController setBarSwipeViewController:]
  -[SBHAddWidgetSheetViewController _makeFakeGalleryItemsFromHomeScreenItems:]
  -[SBHAddWidgetSheetViewController suggestedItemsByGalleryLayoutSize]
  -[SBHAddWidgetSheetViewController setSuggestedItemsByGalleryLayoutSize:]
  -[SBHAddWidgetSheetViewController barSwipeViewController]
  -[SBHAddWidgetSheetViewController filteredApplicationWidgetCollections]
  -[SBHAddWidgetSheetViewController setFilteredApplicationWidgetCollections:]
  -[SBHAddWidgetSheetViewController horizontalSpacing]
  -[SBHAddWidgetSheetViewController setHorizontalSpacing:]
  -[SBHAddWidgetSheetViewController applicationsSectionInsets]
  -[SBHAddWidgetSheetViewController setApplicationsSectionInsets:]
  -[SBHAddWidgetSheetViewController searchBarHeightAdjustment]
  -[SBHAddWidgetSheetViewController setSearchBarHeightAdjustment:]
  -[SBHAddWidgetSheetViewController keyboardFrameIntersect]
  -[SBHAddWidgetSheetViewController setKeyboardFrameIntersect:]


SBModalWidgetIntroductionHomeScreenPreview : NSObject
 @property  UIView *liveView
 @property  UIImage *snapshot

  // instance methods
  -[SBModalWidgetIntroductionHomeScreenPreview setSnapshot:]
  -[SBModalWidgetIntroductionHomeScreenPreview .cxx_destruct]
  -[SBModalWidgetIntroductionHomeScreenPreview snapshot]
  -[SBModalWidgetIntroductionHomeScreenPreview liveView]
  -[SBModalWidgetIntroductionHomeScreenPreview initWithPreview:withSnapshot:]
  -[SBModalWidgetIntroductionHomeScreenPreview setLiveView:]


SBModalWidgetIntroductionBackgroundDescriptionView : UIView
 @property  UIViewController *owner
 @property  UIView *backgroundView
 @property  UIView *labelContainerView
 @property  UILabel *titleLabel
 @property  UILabel *introductionTextLabel
 @property  UIImageView *homescreenPreview
 @property  UIButton *continueButton

  // instance methods
  -[SBModalWidgetIntroductionBackgroundDescriptionView titleLabel]
  -[SBModalWidgetIntroductionBackgroundDescriptionView .cxx_destruct]
  -[SBModalWidgetIntroductionBackgroundDescriptionView setTitleLabel:]
  -[SBModalWidgetIntroductionBackgroundDescriptionView setOwner:]
  -[SBModalWidgetIntroductionBackgroundDescriptionView owner]
  -[SBModalWidgetIntroductionBackgroundDescriptionView setBackgroundView:]
  -[SBModalWidgetIntroductionBackgroundDescriptionView continueButton]
  -[SBModalWidgetIntroductionBackgroundDescriptionView setContinueButton:]
  -[SBModalWidgetIntroductionBackgroundDescriptionView backgroundView]
  -[SBModalWidgetIntroductionBackgroundDescriptionView labelContainerView]
  -[SBModalWidgetIntroductionBackgroundDescriptionView initWithFrame:withOwner:]
  -[SBModalWidgetIntroductionBackgroundDescriptionView setLabelContainerView:]
  -[SBModalWidgetIntroductionBackgroundDescriptionView introductionTextLabel]
  -[SBModalWidgetIntroductionBackgroundDescriptionView setIntroductionTextLabel:]
  -[SBModalWidgetIntroductionBackgroundDescriptionView homescreenPreview]
  -[SBModalWidgetIntroductionBackgroundDescriptionView setHomescreenPreview:]


SBModalWidgetIntroductionViewController : UIViewController
 @property  NSMutableArray *dismissCompletions
 @property  SBModalWidgetIntroductionBackgroundDescriptionView *backgroundDescriptionView
 @property  UIButton *continueButton
 @property  NSLayoutConstraint *continueButtonTopAnchorConstraint
 @property  UIView *homescreenPreviewContainer
 @property  UIImageView *homescreenPreviewSnapshot
 @property  UIView *onboardingWidgetPreviewsContainer
 @property  UIView *onboardingStaticWidgetPreview
 @property  UIView *onboardingFallingWidgetPreviewTop
 @property  UIView *onboardingFallingWidgetPreviewMiddle
 @property  UIView *onboardingFallingWidgetPreviewBottom
 @property  SBModalWidgetIntroductionHomeScreenPreview *homescreenPreview
 @property  {CATransform3D=dddddddddddddddd} homeScreenPreviewSublayerTransform
 @property  {CATransform3D=dddddddddddddddd} onboardingFallingWidgetPreviewSublayerTransformTop
 @property  {CATransform3D=dddddddddddddddd} onboardingFallingWidgetPreviewSublayerTransformMiddle
 @property  {CATransform3D=dddddddddddddddd} onboardingFallingWidgetPreviewSublayerTransformBottom
 @property  {CATransform3D=dddddddddddddddd} appliedSublayerTransform
 @property  NSArray *onboardingFallingWidgetPreviews
 @property  {CGPoint=dd} onboardingFallingWidgetCenterPoint
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} onboardingFallingWidgetBounds
 @property  NSArray *onboardingStaticWidgetPreviews
 @property  {CGPoint=dd} onboardingStaticWidgetCenterPoint
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} onboardingStaticWidgetBounds

  // instance methods
  -[SBModalWidgetIntroductionViewController .cxx_destruct]
  -[SBModalWidgetIntroductionViewController viewDidLayoutSubviews]
  -[SBModalWidgetIntroductionViewController continueButton]
  -[SBModalWidgetIntroductionViewController loadView]
  -[SBModalWidgetIntroductionViewController setContinueButton:]
  -[SBModalWidgetIntroductionViewController viewDidDisappear:]
  -[SBModalWidgetIntroductionViewController continueButtonTapped:]
  -[SBModalWidgetIntroductionViewController homescreenPreview]
  -[SBModalWidgetIntroductionViewController setHomescreenPreview:]
  -[SBModalWidgetIntroductionViewController dismissCompletions]
  -[SBModalWidgetIntroductionViewController loadPreviewSnapshot]
  -[SBModalWidgetIntroductionViewController dismissPreviewAndButton]
  -[SBModalWidgetIntroductionViewController onboardingStaticWidgetPreviews]
  -[SBModalWidgetIntroductionViewController onboardingFallingWidgetPreviews]
  -[SBModalWidgetIntroductionViewController backgroundDescriptionView]
  -[SBModalWidgetIntroductionViewController addContinueButton]
  -[SBModalWidgetIntroductionViewController onboardingStaticWidgetCenterPoint]
  -[SBModalWidgetIntroductionViewController onboardingStaticWidgetBounds]
  -[SBModalWidgetIntroductionViewController onboardingFallingWidgetCenterPoint]
  -[SBModalWidgetIntroductionViewController onboardingFallingWidgetBounds]
  -[SBModalWidgetIntroductionViewController onboardingStaticWidgetPreview]
  -[SBModalWidgetIntroductionViewController onboardingFallingWidgetPreviewTop]
  -[SBModalWidgetIntroductionViewController onboardingFallingWidgetPreviewMiddle]
  -[SBModalWidgetIntroductionViewController onboardingFallingWidgetPreviewBottom]
  -[SBModalWidgetIntroductionViewController cleanUpForViewControllerDismissal]
  -[SBModalWidgetIntroductionViewController setDismissCompletions:]
  -[SBModalWidgetIntroductionViewController continueButtonTopAnchorConstraint]
  -[SBModalWidgetIntroductionViewController homescreenPreviewContainer]
  -[SBModalWidgetIntroductionViewController homeScreenPreviewSublayerTransform]
  -[SBModalWidgetIntroductionViewController setupSublayerDisplayPreviewTransformForView:withTransform:]
  -[SBModalWidgetIntroductionViewController onboardingFallingWidgetPreviewSublayerTransformTop]
  -[SBModalWidgetIntroductionViewController onboardingFallingWidgetPreviewSublayerTransformMiddle]
  -[SBModalWidgetIntroductionViewController setupSublayerDismissPreviewTransformForView:withTransform:]
  -[SBModalWidgetIntroductionViewController appendDismissCompletion:]
  -[SBModalWidgetIntroductionViewController setHomeScreenPreview:]
  -[SBModalWidgetIntroductionViewController displayPreviewAndButton]
  -[SBModalWidgetIntroductionViewController setOnboardingFallingWidgetPreviews:]
  -[SBModalWidgetIntroductionViewController setOnboardingFallingWidgetCenterPoint:]
  -[SBModalWidgetIntroductionViewController setOnboardingFallingWidgetBounds:]
  -[SBModalWidgetIntroductionViewController setOnboardingStaticWidgetPreviews:]
  -[SBModalWidgetIntroductionViewController setOnboardingStaticWidgetCenterPoint:]
  -[SBModalWidgetIntroductionViewController setOnboardingStaticWidgetBounds:]
  -[SBModalWidgetIntroductionViewController setBackgroundDescriptionView:]
  -[SBModalWidgetIntroductionViewController setContinueButtonTopAnchorConstraint:]
  -[SBModalWidgetIntroductionViewController setHomescreenPreviewContainer:]
  -[SBModalWidgetIntroductionViewController homescreenPreviewSnapshot]
  -[SBModalWidgetIntroductionViewController setHomescreenPreviewSnapshot:]
  -[SBModalWidgetIntroductionViewController onboardingWidgetPreviewsContainer]
  -[SBModalWidgetIntroductionViewController setOnboardingWidgetPreviewsContainer:]
  -[SBModalWidgetIntroductionViewController setOnboardingStaticWidgetPreview:]
  -[SBModalWidgetIntroductionViewController setOnboardingFallingWidgetPreviewTop:]
  -[SBModalWidgetIntroductionViewController setOnboardingFallingWidgetPreviewMiddle:]
  -[SBModalWidgetIntroductionViewController setOnboardingFallingWidgetPreviewBottom:]
  -[SBModalWidgetIntroductionViewController setHomeScreenPreviewSublayerTransform:]
  -[SBModalWidgetIntroductionViewController setOnboardingFallingWidgetPreviewSublayerTransformTop:]
  -[SBModalWidgetIntroductionViewController setOnboardingFallingWidgetPreviewSublayerTransformMiddle:]
  -[SBModalWidgetIntroductionViewController onboardingFallingWidgetPreviewSublayerTransformBottom]
  -[SBModalWidgetIntroductionViewController setOnboardingFallingWidgetPreviewSublayerTransformBottom:]
  -[SBModalWidgetIntroductionViewController appliedSublayerTransform]
  -[SBModalWidgetIntroductionViewController setAppliedSublayerTransform:]


SBHIconViewContextMenuWrapperViewController : UIViewController <WGWidgetViewControllerDelegate, SBHRecentsDocumentExtensionProviderDelegate>
 @property  UIViewController *contentViewController
 @property  NSString *groupNameBase
 @property  double backgroundScale
 @property  double continuousCornerRadius
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconViewContextMenuWrapperViewController setGroupNameBase:]
  -[SBHIconViewContextMenuWrapperViewController setContentViewController:]
  -[SBHIconViewContextMenuWrapperViewController continuousCornerRadius]
  -[SBHIconViewContextMenuWrapperViewController .cxx_destruct]
  -[SBHIconViewContextMenuWrapperViewController setBackgroundScale:]
  -[SBHIconViewContextMenuWrapperViewController viewDidLoad]
  -[SBHIconViewContextMenuWrapperViewController backgroundScale]
  -[SBHIconViewContextMenuWrapperViewController setContinuousCornerRadius:]
  -[SBHIconViewContextMenuWrapperViewController remoteViewControllerDidConnectForWidgetViewController:]
  -[SBHIconViewContextMenuWrapperViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[SBHIconViewContextMenuWrapperViewController groupNameBase]
  -[SBHIconViewContextMenuWrapperViewController remoteViewControllerViewDidAppearForWidgetViewController:]
  -[SBHIconViewContextMenuWrapperViewController contentViewController]
  -[SBHIconViewContextMenuWrapperViewController viewWillDisappear:]
  -[SBHIconViewContextMenuWrapperViewController viewWillAppear:]
  -[SBHIconViewContextMenuWrapperViewController _applyContinuousCornerRadius]
  -[SBHIconViewContextMenuWrapperViewController _applyPreferredContentSizeChange:]
  -[SBHIconViewContextMenuWrapperViewController recentsDocumentExtensionViewControllerRequestsDismiss:]


SBRootFolder : SBFolder
 @property  SBIconListModel *dock
 @property  SBIconListModel *todayList
 @property  SBIconListModel *favoriteTodayList
 @property  SBIconListModel *ignoredList
 @property  <SBRootFolderDelegate> *delegate
 @property  SBHIconModel *model
 @property  BOOL supportsBadging
 @property  BOOL supportsDock
 @property  BOOL supportsTodayList
 @property  BOOL supportsIgnoredList
 @property  BOOL containsWidgetIconExcludingTodayList
 @property  BOOL containsVisibleWidgetIconExcludingTodayList
 @property  BOOL containsNonDefaultSizedIconExcludingTodayList
 @property  BOOL containsVisibleNonDefaultSizedIconExcludingTodayList

  // class methods
  +[SBRootFolder isRootFolderClass]

  // instance methods
  -[SBRootFolder todayList]
  -[SBRootFolder enumerateTodayListsUsingBlock:]
  -[SBRootFolder _setFavoriteTodayList:]
  -[SBRootFolder isRootFolder]
  -[SBRootFolder enumerateTodayListIconsUsingBlock:]
  -[SBRootFolder isExtraListIndex:]
  -[SBRootFolder supportsTodayPage]
  -[SBRootFolder checkIgnoredListConsistency]
  -[SBRootFolder indexOfList:]
  -[SBRootFolder visibleIndexOfList:]
  -[SBRootFolder isIconAtIndexPathInIgnoredList:]
  -[SBRootFolder supportsDock]
  -[SBRootFolder _setTodayList:]
  -[SBRootFolder canRemoveIcons]
  -[SBRootFolder ignoredList]
  -[SBRootFolder _specialIndexOfList:]
  -[SBRootFolder containsWidgetIconExcludingTodayList]
  -[SBRootFolder containsVisibleWidgetIconExcludingTodayList]
  -[SBRootFolder nodeIdentifier]
  -[SBRootFolder removeList:]
  -[SBRootFolder supportsTodayList]
  -[SBRootFolder icons]
  -[SBRootFolder .cxx_destruct]
  -[SBRootFolder listAtIndex:]
  -[SBRootFolder delegateDidChange:]
  -[SBRootFolder isIconAtIndexPathInDock:includingDockFolders:]
  -[SBRootFolder _compactsFirstList]
  -[SBRootFolder _didExplicitlyRemoveHiddenLists:]
  -[SBRootFolder setDelegate:]
  -[SBRootFolder enumerateExtraListsUsingBlock:]
  -[SBRootFolder isIconInIgnoredList:]
  -[SBRootFolder _setDock:]
  -[SBRootFolder canBounceIcon:]
  -[SBRootFolder hiddenIndexOfList:]
  -[SBRootFolder nodeDescriptionWithPrefix:]
  -[SBRootFolder model]
  -[SBRootFolder isIconAtIndexPathInTodayList:]
  -[SBRootFolder isIconAtIndexPathInDock:]
  -[SBRootFolder delegate]
  -[SBRootFolder favoriteTodayList]
  -[SBRootFolder setModel:]
  -[SBRootFolder _setIgnoredList:]
  -[SBRootFolder containsNonDefaultSizedIconExcludingTodayList]
  -[SBRootFolder canAddIconCount:startingAtList:]
  -[SBRootFolder dock]
  -[SBRootFolder supportsIgnoredList]
  -[SBRootFolder isIconAtIndexPathInFavoriteTodayList:]
  -[SBRootFolder containsVisibleNonDefaultSizedIconExcludingTodayList]
  -[SBRootFolder supportsBadging]
  -[SBRootFolder canEditDisplayName]


SBIconListViewMultiStageAnimator : NSObject <SBIconListLayoutAnimating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewMultiStageAnimator init]
  -[SBIconListViewMultiStageAnimator iconListView:wantsAnimatedRemovalForIconViews:completionHandler:]
  -[SBIconListViewMultiStageAnimator iconListView:wantsAnimatedLayoutForIconView:withParameters:alongsideAnimationBlock:]


SBHLibraryPodFolderController : SBFolderController <SBHLibraryCategoriesFolderDataSourceObserver, UIGestureRecognizerDelegate, SBHLibraryChildViewController, SBHLibraryPodIconZoomAnimationContaining, SBHLibrarySearchControllerContentViewControllerScrollViewProvider>
 @property  UITapGestureRecognizer *tapToDismissRecognizer
 @property  ATXAppDirectoryClient *loggingClient
 @property  SBHLibraryCategoryMap *libraryCategoryMap
 @property  SBHLibraryCategoriesFolderDataSource *dataSource
 @property  <SBHLibraryPodFolderControllerDelegate> *podFolderControllerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHIconImageCache *iconImageCache
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBRootFolder *rootFolder
 @property  NSSet *presentedIconLocations
 @property  _UILegibilitySettings *legibilitySettings
 @property  SBHIconModel *iconModel
 @property  SBIconListView *currentIconListView
 @property  SBIconListView *dockIconListView
 @property  UIView *containerView
 @property  UIWindow *animationWindow
 @property  UIView *fallbackIconContainerView
 @property  NSArray *extraViewsContainers
 @property  NSArray *extraViews
 @property  BOOL shouldAnimateLastTwoViewsAsOne
 @property  BOOL shouldAnimateFirstTwoViewsAsOne
 @property  <BSUIScrollViewDelegate> *librarySearchControllerScrollViewDelegate

  // class methods
  +[SBHLibraryPodFolderController iconLocation]
  +[SBHLibraryPodFolderController _contentViewClass]
  +[SBHLibraryPodFolderController configurationClass]

  // instance methods
  -[SBHLibraryPodFolderController iconViewForIcon:location:]
  -[SBHLibraryPodFolderController contentScrollView]
  -[SBHLibraryPodFolderController firstIconViewForIcon:excludingLocations:]
  -[SBHLibraryPodFolderController setContentAlpha:]
  -[SBHLibraryPodFolderController librarySearchControllerScrollViewDelegate]
  -[SBHLibraryPodFolderController presentedIconLocations]
  -[SBHLibraryPodFolderController libraryCategoryMap]
  -[SBHLibraryPodFolderController iconListView:didRemoveIconView:]
  -[SBHLibraryPodFolderController containerView]
  -[SBHLibraryPodFolderController setLibraryCategoryMap:]
  -[SBHLibraryPodFolderController .cxx_destruct]
  -[SBHLibraryPodFolderController iconImageCache]
  -[SBHLibraryPodFolderController viewDidLoad]
  -[SBHLibraryPodFolderController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHLibraryPodFolderController iconViewForIcon:location:options:]
  -[SBHLibraryPodFolderController isOpen]
  -[SBHLibraryPodFolderController dataSource]
  -[SBHLibraryPodFolderController setIconImageCache:]
  -[SBHLibraryPodFolderController _isViewControllerVisible]
  -[SBHLibraryPodFolderController _reloadAppIcons]
  -[SBHLibraryPodFolderController setLibrarySearchControllerScrollViewDelegate:]
  -[SBHLibraryPodFolderController currentIconListView]
  -[SBHLibraryPodFolderController setListLayoutProvider:]
  -[SBHLibraryPodFolderController controllerClassForFolder:]
  -[SBHLibraryPodFolderController isDisplayingIconView:inLocation:]
  -[SBHLibraryPodFolderController firstIconViewForIcon:inLocations:]
  -[SBHLibraryPodFolderController gestureRecognizer:shouldReceiveTouch:]
  -[SBHLibraryPodFolderController initWithConfiguration:]
  -[SBHLibraryPodFolderController viewWillAppear:]
  -[SBHLibraryPodFolderController isDisplayingIcon:inLocations:]
  -[SBHLibraryPodFolderController isDisplayingIconView:]
  -[SBHLibraryPodFolderController firstIconViewForIcon:]
  -[SBHLibraryPodFolderController iconListView:didAddIconView:]
  -[SBHLibraryPodFolderController enumerateDisplayedIconViewsUsingBlock:]
  -[SBHLibraryPodFolderController listLayoutProvider]
  -[SBHLibraryPodFolderController isDisplayingIcon:inLocation:]
  -[SBHLibraryPodFolderController isDisplayingIcon:]
  -[SBHLibraryPodFolderController isPresentingIconLocation:]
  -[SBHLibraryPodFolderController handleTapGesture:]
  -[SBHLibraryPodFolderController shouldOpenFolderIcon:]
  -[SBHLibraryPodFolderController configureInnerFolderControllerConfiguration:]
  -[SBHLibraryPodFolderController pushNestedViewController:animated:withCompletion:]
  -[SBHLibraryPodFolderController iconViewDidHandleTap:]
  -[SBHLibraryPodFolderController podFolderView]
  -[SBHLibraryPodFolderController tapToDismissRecognizer]
  -[SBHLibraryPodFolderController podFolderControllerDelegate]
  -[SBHLibraryPodFolderController _ourFolderContainsFolder:]
  -[SBHLibraryPodFolderController _nestingViewControllerForPushing]
  -[SBHLibraryPodFolderController loggingClient]
  -[SBHLibraryPodFolderController enumerateViewControllersUsingBlock:]
  -[SBHLibraryPodFolderController enumerateNonSuggestionsOrRecentsViewControllersUsingBlock:]
  -[SBHLibraryPodFolderController categoriesDataSource:shouldAnimateLayoutForCategories:]
  -[SBHLibraryPodFolderController categoriesDataSourceNeedsAnimatedReload:]
  -[SBHLibraryPodFolderController folderIconViewForIcon:folderRelativeIconIndexPath:]
  -[SBHLibraryPodFolderController firstNonSuggestionsOrRecentsIconViewForIcon:]
  -[SBHLibraryPodFolderController setPodFolderControllerDelegate:]


SBHLibraryPodCategoryFolderController : SBHLibraryPodFolderController
  // class methods
  +[SBHLibraryPodCategoryFolderController iconLocation]
  +[SBHLibraryPodCategoryFolderController _contentViewClass]

  // instance methods
  -[SBHLibraryPodCategoryFolderController contentScrollView]
  -[SBHLibraryPodCategoryFolderController iconListView:didRemoveIconView:]
  -[SBHLibraryPodCategoryFolderController viewDidLoad]
  -[SBHLibraryPodCategoryFolderController viewDidAppear:]
  -[SBHLibraryPodCategoryFolderController currentIconListView]
  -[SBHLibraryPodCategoryFolderController viewWillDisappear:]
  -[SBHLibraryPodCategoryFolderController viewWillAppear:]
  -[SBHLibraryPodCategoryFolderController viewDidDisappear:]
  -[SBHLibraryPodCategoryFolderController handleTapGesture:]
  -[SBHLibraryPodCategoryFolderController _logCategoryVisibilityChangedTo:]


SBHTableViewIconLibrary : NSObject <SBHIconLibraryQueryEngineObserver>
 @property  SBHIconModel *iconModel
 @property  <SBHIconLibraryQueryEngine> *queryEngine
 @property  SBHIconLibraryQueryResult *lastQueryResults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHTableViewIconLibrary executeQuery:]
  -[SBHTableViewIconLibrary .cxx_destruct]
  -[SBHTableViewIconLibrary iconModel]
  -[SBHTableViewIconLibrary initWithIconModel:]
  -[SBHTableViewIconLibrary addObserver:]
  -[SBHTableViewIconLibrary dealloc]
  -[SBHTableViewIconLibrary removeObserver:]
  -[SBHTableViewIconLibrary initWithIconModel:queryEngine:]
  -[SBHTableViewIconLibrary executeQuery:completion:]
  -[SBHTableViewIconLibrary _dispatchQueryResult:]
  -[SBHTableViewIconLibrary engine:queryResultsWereUpdated:]
  -[SBHTableViewIconLibrary engine:failedToExecuteQuery:withError:]
  -[SBHTableViewIconLibrary queryEngine]
  -[SBHTableViewIconLibrary lastQueryResults]


SBRootFolderController : SBFolderController <SBFramewiseInteractiveTransitionAnimatorDelegate, SBViewControllerTransitionContextDelegate, SBRootFolderViewDelegate, SBSearchGestureObserver, SBHAddWidgetSheetViewControllerDelegate, UIGestureRecognizerDelegate, SBIconWidgetIntroductionDelegate, SBHWidgetSheetViewControllerPresenter, SBHStackConfigurationInteractionDelegate, SBHStackConfigurationViewControllerAppearanceDelegate, SBHWidgetDragHandling, SBRootFolderPageStateTransitioning, SBHIconRootViewProviding>
 @property  BOOL managesStatusBarWidth
 @property  SBSearchGesture *searchGesture
 @property  <BSInvalidatable> *searchGestureIconViewTouchCancellationAssertion
 @property  long long pageState
 @property  _SBRootFolderPageTransitionHandle *currentTransitionHandle
 @property  <SBRootFolderPageTransition> *searchGestureTransition
 @property  <SBRootFolderPageTransition> *implicitScrollTransition
 @property  SBHRecentsDocumentExtensionProvider *recentsDocumentExtensionProvider
 @property  SBHomeScreenDefaults *homeScreenDefaults
 @property  UIViewController<SBHMainAddSheetViewControlling> *addSheetViewController
 @property  SBHStackConfigurationViewController *stackConfigurationViewController
 @property  NSArray *editingSuggestedWidgetItems
 @property  NSArray *stackConfigurationSuggestedWidgetItems
 @property  SBRootFolderView *rootFolderView
 @property  long long leadingCustomViewPageIndex
 @property  long long sidebarPageIndex
 @property  long long trailingCustomViewPageIndex
 @property  CHSAvocadoDescriptorProvider *avocadoDescriptorProvider
 @property  <SBRootFolderControllerDelegate> *folderDelegate
 @property  SBRootFolder *folder
 @property  unsigned long dockEdge
 @property  double dockHeight
 @property  BOOL dockExternal
 @property  BOOL dockPinnedForRotation
 @property  NSSet *nonDockPresentedIconLocations
 @property  BOOL showsDoneButtonWhileEditing
 @property  unsigned long showsAddWidgetButtonWhileEditingAllowedOrientations
 @property  BOOL suppressesExtraEditingButtons
 @property  UIViewController *pullDownSearchViewController
 @property  UIViewController<SBHRootFolderCustomViewPresenting> *leadingCustomViewController
 @property  UIViewController<SBHRootFolderCustomViewPresenting> *trailingCustomViewController
 @property  UIViewController<SBHSidebarProvider> *sidebarViewController
 @property  double spotlightFirstIconRowOffset
 @property  <SBRootFolderControllerAccessoryViewControllerDelegate> *accessoryViewControllerDelegate
 @property  unsigned long presentationSource
 @property  NSArray *folderControllers
 @property  BOOL allowsAutoscrollToLeadingCustomView
 @property  BOOL leadingCustomViewVisible
 @property  BOOL leadingCustomViewTransitioning
 @property  BOOL leadingCustomViewPageHidden
 @property  BOOL pullDownSearchVisible
 @property  BOOL pullDownSearchVisibleOrTransitioningToVisible
 @property  BOOL pullDownSearchTransitioning
 @property  BOOL pullDownSearchVisibleOrTransitioning
 @property  BOOL leadingCustomPage
 @property  BOOL leadingCustomViewVisibleOrTransitionDestination
 @property  BOOL leadingCustomViewSearchVisible
 @property  BOOL leadingCustomViewSearchTransitioning
 @property  BOOL leadingCustomViewSearchVisibleOrTransitioning
 @property  BOOL anySearchVisible
 @property  BOOL anySearchVisibleOrTransitioning
 @property  UIView *searchableLeadingCustomWrapperView
 @property  UIView *searchBackdropView
 @property  double sidebarVisibilityProgress
 @property  double effectiveSidebarVisibilityProgress
 @property  BOOL sidebarVisible
 @property  BOOL sidebarEffectivelyVisible
 @property  BOOL sidebarEffectivelyAtLeastHalfVisible
 @property  BOOL sidebarPinned
 @property  BOOL sidebarVisibilityGestureActive
 @property  SBFParallaxSettings *parallaxSettings
 @property  BOOL pageManagementUIVisible
 @property  BOOL occludedByOverlay
 @property  UIViewController<SBHLegibility> *todayViewController
 @property  BOOL todayViewPageHidden
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SBHWidgetDragHandling> *widgetDragHandler
 @property  double titledButtonsAlpha
 @property  BOOL transitioningPageState
 @property  long long destinationPageState
 @property  UIView *contentView
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIViewController *deepestFolderController
 @property  BOOL editing
 @property  BOOL scrolling
 @property  BOOL scrollTracking
 @property  long long currentPageIndex
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  NSSet *presentedIconLocations
 @property  unsigned long contentVisibility

  // class methods
  +[SBRootFolderController dockIconLocation]
  +[SBRootFolderController _shouldForwardViewWillTransitionToSize]
  +[SBRootFolderController iconLocation]
  +[SBRootFolderController _contentViewClass]
  +[SBRootFolderController configurationClass]
  +[SBRootFolderController pageStateTransitionSnapshotForScrollOffset:pageWidth:pageSpacing:pages:pageCount:userInterfaceLayoutDirection:currentPageState:]

  // instance methods
  -[SBRootFolderController setSidebarVisibilityProgress:]
  -[SBRootFolderController setSidebarPinned:]
  -[SBRootFolderController folderController:didEndEditingTitle:]
  -[SBRootFolderController animationControllerForPresentedController:presentingController:sourceController:]
  -[SBRootFolderController allowsAutoscrollToLeadingCustomView]
  -[SBRootFolderController enterPageManagementUIWithCompletionHandler:]
  -[SBRootFolderController isOnLeadingCustomPage]
  -[SBRootFolderController isSidebarVisibilityGestureActive]
  -[SBRootFolderController _contentSizeCategoryDidChange:]
  -[SBRootFolderController isSidebarPinned]
  -[SBRootFolderController isDisplayingIconView:options:]
  -[SBRootFolderController destinationPageState]
  -[SBRootFolderController leadingCustomViewController]
  -[SBRootFolderController sidebarVisibilityProgress]
  -[SBRootFolderController searchGesture:changedPercentComplete:]
  -[SBRootFolderController searchGesture:startedShowing:]
  -[SBRootFolderController isOccludedByOverlay]
  -[SBRootFolderController exitPageManagementUIWithCompletionHandler:]
  -[SBRootFolderController isDockVisible]
  -[SBRootFolderController searchBackdropView]
  -[SBRootFolderController trailingCustomViewPageIndex]
  -[SBRootFolderController _doPageManagementEducation]
  -[SBRootFolderController enumeratePageStateObserversUsingBlock:]
  -[SBRootFolderController effectiveSidebarVisibilityProgress]
  -[SBRootFolderController removePageStateObserver:]
  -[SBRootFolderController isLeadingCustomViewPageHidden]
  -[SBRootFolderController setIdleText:]
  -[SBRootFolderController animationControllerForDismissedController:]
  -[SBRootFolderController isSidebarEffectivelyVisible]
  -[SBRootFolderController sidebarPageIndex]
  -[SBRootFolderController setLeadingCustomViewPageHidden:]
  -[SBRootFolderController setSearchGesture:]
  -[SBRootFolderController setOccludedByOverlay:]
  -[SBRootFolderController canShowWidgetIntroduction]
  -[SBRootFolderController iconViewForIcon:location:]
  -[SBRootFolderController setLeadingCustomViewController:]
  -[SBRootFolderController isDisplayingIcon:inLocation:options:]
  -[SBRootFolderController searchableLeadingCustomWrapperView]
  -[SBRootFolderController addPageStateObserver:]
  -[SBRootFolderController homeScreenDefaults]
  -[SBRootFolderController trailingCustomViewController]
  -[SBRootFolderController presentationSource]
  -[SBRootFolderController leadingCustomViewPageIndex]
  -[SBRootFolderController isDockPinnedForRotation]
  -[SBRootFolderController folderController:didBeginEditingTitle:]
  -[SBRootFolderController setSidebarViewController:]
  -[SBRootFolderController searchGesture]
  -[SBRootFolderController showsDoneButtonWhileEditing]
  -[SBRootFolderController sidebarViewController]
  -[SBRootFolderController dismissSpotlightAnimated:completionHandler:]
  -[SBRootFolderController isSidebarVisible]
  -[SBRootFolderController isDisplayingIcon:options:]
  -[SBRootFolderController interactionControllerForDismissal:]
  -[SBRootFolderController dockEdge]
  -[SBRootFolderController _depth]
  -[SBRootFolderController recentsDocumentExtensionProvider]
  -[SBRootFolderController parallaxSettings]
  -[SBRootFolderController presentedIconLocations]
  -[SBRootFolderController updateExtraButtonVisibilityAnimated:]
  -[SBRootFolderController avocadoDescriptorProvider]
  -[SBRootFolderController setEditing:animated:]
  -[SBRootFolderController bringWidgetIntroductionPopoverToFront]
  -[SBRootFolderController setDockEdge:]
  -[SBRootFolderController extraViewsContainers]
  -[SBRootFolderController .cxx_destruct]
  -[SBRootFolderController _dismissPageManagementIfPresented:]
  -[SBRootFolderController viewDidLoad]
  -[SBRootFolderController presenterType]
  -[SBRootFolderController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBRootFolderController suppressesExtraEditingButtons]
  -[SBRootFolderController setLegibilitySettings:]
  -[SBRootFolderController shouldAnimateLastTwoViewsAsOne]
  -[SBRootFolderController iconViewForIcon:location:options:]
  -[SBRootFolderController setPresentationSource:]
  -[SBRootFolderController isDockExternal]
  -[SBRootFolderController setSuppressesEditingStateForListView:]
  -[SBRootFolderController _reduceTransparencyChanged]
  -[SBRootFolderController descriptionBuilderWithMultilinePrefix:]
  -[SBRootFolderController firstIconViewForIcon:options:]
  -[SBRootFolderController dockHeight]
  -[SBRootFolderController setCurrentPageIndex:animated:]
  -[SBRootFolderController _presentPageManagement:]
  -[SBRootFolderController prepareToTearDown]
  -[SBRootFolderController isDisplayingEditingButtons]
  -[SBRootFolderController transitionDidFinish:]
  -[SBRootFolderController setAllowsAutoscrollToLeadingCustomView:]
  -[SBRootFolderController titledButtonsAlpha]
  -[SBRootFolderController isDisplayingIconView:inLocation:]
  -[SBRootFolderController isAnySearchVisibleOrTransitioning]
  -[SBRootFolderController setSuppressesExtraEditingButtons:]
  -[SBRootFolderController initWithConfiguration:]
  -[SBRootFolderController viewWillAppear:]
  -[SBRootFolderController extraViews]
  -[SBRootFolderController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBRootFolderController todayViewController]
  -[SBRootFolderController prepareToOpen]
  -[SBRootFolderController dealloc]
  -[SBRootFolderController enumerateDisplayedIconViewsUsingBlock:]
  -[SBRootFolderController dockListView]
  -[SBRootFolderController beginModifyingDockOffscreenFractionForReason:]
  -[SBRootFolderController shouldAnimateFirstTwoViewsAsOne]
  -[SBRootFolderController isPageManagementUIVisible]
  -[SBRootFolderController isDisplayingIcon:inLocation:]
  -[SBRootFolderController viewDidDisappear:]
  -[SBRootFolderController isDisplayingIcon:]
  -[SBRootFolderController setTitledButtonsAlpha:]
  -[SBRootFolderController isPresentingIconLocation:]
  -[SBRootFolderController pageTransitionProgress]
  -[SBRootFolderController pageState]
  -[SBRootFolderController interactionControllerForPresentation:]
  -[SBRootFolderController addWidgetSheetViewControllerDidCancel:]
  -[SBRootFolderController addWidgetSheetViewController:didSelectWidgetIconView:]
  -[SBRootFolderController widgetDragHandler]
  -[SBRootFolderController dockIconListView]
  -[SBRootFolderController searchGesture:completedShowing:]
  -[SBRootFolderController searchGesture:resetAnimated:]
  -[SBRootFolderController setFolderDelegate:]
  -[SBRootFolderController enumerateDisplayedIconViewsWithOptions:usingBlock:]
  -[SBRootFolderController transitionWillBegin:]
  -[SBRootFolderController transitionWillReverse:]
  -[SBRootFolderController transitionWillFinish:]
  -[SBRootFolderController _makeContentViewWithConfiguration:]
  -[SBRootFolderController _viewControllersToNotifyForViewObscuration]
  -[SBRootFolderController prepareToClose]
  -[SBRootFolderController viewWillTransitionToSize:forOperation:withTransitionCoordinator:]
  -[SBRootFolderController orientationDidChange:]
  -[SBRootFolderController _updateFolderRequiredTrailingEmptyListCount]
  -[SBRootFolderController viewControllersForPageIndex:]
  -[SBRootFolderController closesAfterDragExits]
  -[SBRootFolderController canAcceptFolderIconDrags]
  -[SBRootFolderController _listIndexIsVisible:]
  -[SBRootFolderController shouldOpenFolderIcon:]
  -[SBRootFolderController disablesScrollingWhileIconDragIsDropping]
  -[SBRootFolderController folderView:currentPageIndexWillChange:]
  -[SBRootFolderController folderView:currentPageIndexDidChange:]
  -[SBRootFolderController folderViewWillBeginDragging:]
  -[SBRootFolderController folderViewWillBeginScrolling:]
  -[SBRootFolderController folderViewWillEndDragging:]
  -[SBRootFolderController folderViewWillUpdatePageDuringScrolling:]
  -[SBRootFolderController folderViewDidScroll:]
  -[SBRootFolderController folderViewDidEndScrolling:]
  -[SBRootFolderController folderView:willAnimateScrollToPageIndex:]
  -[SBRootFolderController folderView:didBeginEditingTitle:]
  -[SBRootFolderController folderView:didEndEditingTitle:]
  -[SBRootFolderController suspendsWallpaperAnimationWhileOpen]
  -[SBRootFolderController statusBarInsetsForOrientation:]
  -[SBRootFolderController acceptWidgetIntroduction]
  -[SBRootFolderController rejectWidgetIntroduction]
  -[SBRootFolderController stackConfigurationViewControllerWillAppear:]
  -[SBRootFolderController stackConfigurationViewControllerDidAppear:]
  -[SBRootFolderController stackConfigurationViewControllerWillDisappear:]
  -[SBRootFolderController stackConfigurationViewControllerDidDisappear:]
  -[SBRootFolderController stackConfigurationInteraction:draggedIconForIdentifier:]
  -[SBRootFolderController stackConfigurationInteraction:isConsumingDropSession:]
  -[SBRootFolderController stackConfigurationInteraction:noteDidRemoveSuggestedWidgetIcon:]
  -[SBRootFolderController stackConfigurationInteraction:requestsPresentAddWidgetSheetFromPresenter:]
  -[SBRootFolderController stackConfigurationInteractionWillAnimateWidgetInsertion:]
  -[SBRootFolderController stackConfigurationInteraction:dragPreviewForIconView:]
  -[SBRootFolderController stackConfigurationInteraction:promoteSuggestedWidget:withinStack:]
  -[SBRootFolderController addWidgetSheetViewControllerWillAppear:]
  -[SBRootFolderController addWidgetSheetViewControllerDidAppear:]
  -[SBRootFolderController addWidgetSheetViewControllerWillDisappear:]
  -[SBRootFolderController addWidgetSheetViewControllerDidDisappear:]
  -[SBRootFolderController showsAddWidgetButtonWhileEditingAllowedOrientations]
  -[SBRootFolderController pullDownSearchViewController]
  -[SBRootFolderController _updateAddWidgetSheetIconCache]
  -[SBRootFolderController rootFolderView]
  -[SBRootFolderController setPageState:]
  -[SBRootFolderController _leadingCustomViewVisibilityProgress]
  -[SBRootFolderController _trailingCustomViewVisibilityProgress]
  -[SBRootFolderController updateViewsAfterOrientationChange]
  -[SBRootFolderController isLeadingCustomViewSearchVisible]
  -[SBRootFolderController isLeadingCustomViewVisibleOrTransitionDestination]
  -[SBRootFolderController _fetchGalleryContentForHomeScreenEditing]
  -[SBRootFolderController _internalDismissWidgetAddSheet:clearAddSheetViewController:notifyObservers:completion:]
  -[SBRootFolderController setEditingSuggestedWidgetItems:]
  -[SBRootFolderController _currentHomeScreenEditingGridSize]
  -[SBRootFolderController _defaultEditingSuggestedWidgetItemsFamilyMask]
  -[SBRootFolderController addSheetViewController]
  -[SBRootFolderController _fetchGalleryContentForGridSize:withFamilyMask:completion:]
  -[SBRootFolderController stackConfigurationViewController]
  -[SBRootFolderController _stackConfigurationGridSize]
  -[SBRootFolderController setStackConfigurationSuggestedWidgetItems:]
  -[SBRootFolderController applicationWidgetCollectionsForEditingViewController:withAllowedSizeClasses:allowingNonStackableItems:]
  -[SBRootFolderController isLeadingCustomViewVisible]
  -[SBRootFolderController setManagesStatusBarWidth:]
  -[SBRootFolderController presentWidgetEditingViewControllerFromViewController:]
  -[SBRootFolderController presentWidgetEditingViewControllerFromViewController:withAllowedSizeClasses:allowingNonStackableItems:]
  -[SBRootFolderController _isDescriptorAllowed:]
  -[SBRootFolderController _isDescriptorSupported:]
  -[SBRootFolderController _addShortcutsSpecialAvocadoToApplicationWidgetCollections:]
  -[SBRootFolderController _addSiriSuggestionsSpecialAvocadosToApplicationWidgetCollections:]
  -[SBRootFolderController _addFilesSpecialAvocadosToApplicationWidgetCollections:]
  -[SBRootFolderController _addBatteriesSpecialAvocadosToApplicationWidgetCollections:]
  -[SBRootFolderController _vendorNameForBundleIdentifier:]
  -[SBRootFolderController _insertSmartStackSpecialAvocadosAtTheTopOfApplicationWidgetCollections:]
  -[SBRootFolderController stackConfigurationSuggestedWidgetItems]
  -[SBRootFolderController editingSuggestedWidgetItems]
  -[SBRootFolderController setAddSheetViewController:]
  -[SBRootFolderController _additionalMinimumOffsetForSheetPresentation]
  -[SBRootFolderController enumerateWidgetAddSheetObserversUsingBlock:]
  -[SBRootFolderController _isVisibilityWidgetDefined:]
  -[SBRootFolderController _isDescriptorVisibleByDefault:]
  -[SBRootFolderController _shouldAddSpecialAvocadoOfType:]
  -[SBRootFolderController widgetIconForDescriptor:sizeClass:]
  -[SBRootFolderController _widgetIconForDescriptors:sizeClass:]
  -[SBRootFolderController setStackConfigurationViewController:]
  -[SBRootFolderController _fetchGalleryContentForStackConfiguration]
  -[SBRootFolderController _handleWidgetSheetViewControllerWillAppear:]
  -[SBRootFolderController _handleWidgetSheetViewControllerDidAppear:]
  -[SBRootFolderController _handleWidgetSheetViewControllerWillDisappear:]
  -[SBRootFolderController _handleWidgetSheetViewControllerDidDisappear:]
  -[SBRootFolderController _updateStatusBarHiddenForWidgetSheetViewController:visible:]
  -[SBRootFolderController isDisplayingWidgetIntroductionOnPage:]
  -[SBRootFolderController iconListViewContainsWidget:]
  -[SBRootFolderController updatePronouncedContainerViewVisibilityIfPossible:vertical:]
  -[SBRootFolderController viewControllerForPageState:]
  -[SBRootFolderController _isDockSwitchedForOrientation:]
  -[SBRootFolderController _dockLayoutReversedForInterfaceOrientation:]
  -[SBRootFolderController _dockEdgeForInterfaceOrientation:]
  -[SBRootFolderController _configureDockViewForOrientationWithoutAnimation:]
  -[SBRootFolderController _configureAppStatusBarInsetsForOrientation:]
  -[SBRootFolderController configureAppStatusBarInsets]
  -[SBRootFolderController managesStatusBarWidth]
  -[SBRootFolderController isAnySearchVisible]
  -[SBRootFolderController _configureTodayViewPageForOrientation:]
  -[SBRootFolderController _leadingCustomViewPageIsVisibleForOrientation:]
  -[SBRootFolderController _shouldUseDockAnimationWindowForRotationToInterfaceOrientation:duration:]
  -[SBRootFolderController _shouldSlideDockOutDuringRotationFromOrientation:toOrientation:]
  -[SBRootFolderController _configureDockViewForOrientationDuringAnimation:dockAnimationWindow:dockBorrowedAssertion:]
  -[SBRootFolderController _configureViewForOrientationWithoutAnimation:]
  -[SBRootFolderController _refreshGalleryContentForHomeScreenEditingIfNecessary]
  -[SBRootFolderController updateStateTransitionsDuringScrollingScrollView:pageBounceComparator:]
  -[SBRootFolderController implicitScrollTransition]
  -[SBRootFolderController isTransitioningBetweenPageStateVerticalGroups]
  -[SBRootFolderController setImplicitScrollTransition:]
  -[SBRootFolderController pageStateTransitionSnapshotForScrollOffset:]
  -[SBRootFolderController isTransitioningPageState]
  -[SBRootFolderController currentTransitionHandle]
  -[SBRootFolderController isPullDownSearchVisibleOrTransitioning]
  -[SBRootFolderController performPageStateTransitionToState:reason:animated:completionHandler:]
  -[SBRootFolderController canTransitionPageStateToState:]
  -[SBRootFolderController isAnySearchTransitioning]
  -[SBRootFolderController performDefaultPageStateTransitionToState:reason:animated:completionHandler:]
  -[SBRootFolderController beginPageStateTransitionToState:reason:animated:interactive:]
  -[SBRootFolderController isPullDownSearchVisibleOrTransitioningToVisible]
  -[SBRootFolderController isPullDownSearchVisible]
  -[SBRootFolderController isPullDownSearchTransitioning]
  -[SBRootFolderController isLeadingCustomViewSearchTransitioning]
  -[SBRootFolderController visibilityProgressTowardPageStateMatchingTest:]
  -[SBRootFolderController setCurrentTransitionHandle:]
  -[SBRootFolderController willBeginTransitionToState:animated:interactive:]
  -[SBRootFolderController _anySearchVisibilityProgress]
  -[SBRootFolderController accessoryViewControllerDelegate]
  -[SBRootFolderController defaultTransitionForTransitioningFromPageState:toPageState:animated:interactive:]
  -[SBRootFolderController _checkForImproperScrollOffsetForPageState]
  -[SBRootFolderController didContinueTransitionToState:progress:]
  -[SBRootFolderController willEndTransitionToState:successfully:]
  -[SBRootFolderController didEndTransitionFromState:toState:successfully:]
  -[SBRootFolderController setSearchGestureTransition:]
  -[SBRootFolderController _cancelTouchesForSearchGestureOnIconView:]
  -[SBRootFolderController searchGestureTransition]
  -[SBRootFolderController _invalidateSearchGestureIconViewTouchCancellationAssertion]
  -[SBRootFolderController viewControllerForTransitioningFromPageState:toPageState:]
  -[SBRootFolderController _widgetIconAnimationExtraViewsProvider]
  -[SBRootFolderController transitionContext:updateTransitionProgress:]
  -[SBRootFolderController rootFolderView:wantsToAdjustLeadingCustomContentForEdgeBounceForScrollOffset:]
  -[SBRootFolderController distanceToTopOfSpotlightIconsForRootFolderView:]
  -[SBRootFolderController maxExternalDockHeightForRootFolderView:]
  -[SBRootFolderController externalDockHeightForRootFolderView:]
  -[SBRootFolderController preferredExternalDockVerticalMarginForRootFolderView:]
  -[SBRootFolderController backgroundViewForDockForRootFolderView:]
  -[SBRootFolderController backgroundViewForEditingDoneButtonForRootFolderView:]
  -[SBRootFolderController rootFolderView:didChangeSidebarVisibilityProgress:]
  -[SBRootFolderController rootFolderView:didChangeEffectiveSidebarVisibilityProgress:]
  -[SBRootFolderController rootFolderView:didEndSidebarVisibilityTransitionWithEffectiveProgress:]
  -[SBRootFolderController rootFolderView:didOverscrollOnFirstPageByAmount:]
  -[SBRootFolderController rootFolderView:didEndOverscrollOnFirstPageWithVelocity:translation:]
  -[SBRootFolderController rootFolderView:didOverscrollOnLastPageByAmount:]
  -[SBRootFolderController rootFolderView:didEndOverscrollOnLastPageWithVelocity:translation:]
  -[SBRootFolderController rootFolderViewWantsToEndEditing:]
  -[SBRootFolderController rootFolderViewWantsWidgetEditingViewControllerPresented:]
  -[SBRootFolderController rootFolderView:willPresentPageManagementWithLayoutManager:animator:context:]
  -[SBRootFolderController rootFolderView:willDismissPageManagementUsingAnimator:context:]
  -[SBRootFolderController rootFolderView:didDismissPageManagementWithLayoutManager:context:]
  -[SBRootFolderController iconLocationForListsWithNonDefaultSizedIconsForRootFolderView:]
  -[SBRootFolderController widgetIconForGalleryItem:sizeClass:]
  -[SBRootFolderController didBeginDraggingWidgetIcon:]
  -[SBRootFolderController didEndDraggingWidgetIcon:]
  -[SBRootFolderController rootFolderViewIfLoaded]
  -[SBRootFolderController folderControllers]
  -[SBRootFolderController setPullDownSearchViewController:]
  -[SBRootFolderController spotlightFirstIconRowOffset]
  -[SBRootFolderController nonDockPresentedIconLocations]
  -[SBRootFolderController dismissWidgetEditingViewControllerIfPresentedAnimated:]
  -[SBRootFolderController dismissWidgetAddSheetIfPresentedAndClearAnimated:]
  -[SBRootFolderController iconListViewsContainWidget]
  -[SBRootFolderController addWidgetAddSheetObserver:]
  -[SBRootFolderController removeWidgetAddSheetObserverForHandle:]
  -[SBRootFolderController setParallaxDisabled:forReason:]
  -[SBRootFolderController isSidebarEffectivelyAtLeastHalfVisible]
  -[SBRootFolderController _configureAppStatusBarInsetsAnimated:]
  -[SBRootFolderController presentSpotlightAnimated:completionHandler:]
  -[SBRootFolderController isLeadingCustomViewSearchVisibleOrTransitioning]
  -[SBRootFolderController isLeadingCustomViewOrLeadingCustomViewSearchVisible]
  -[SBRootFolderController isTodayViewPageHidden]
  -[SBRootFolderController isLeadingCustomViewTransitioning]
  -[SBRootFolderController isTransitioningBetweenIconAndLeadingCustomView]
  -[SBRootFolderController isTransitioningBetweenIconPageAndLeadingCustomPage]
  -[SBRootFolderController isTransitioningBetweenIconAndTrailingCustomView]
  -[SBRootFolderController isTransitioningBetweenIconPageAndTrailingCustomPage]
  -[SBRootFolderController isTransitioningBetweenHorizontalPageStates]
  -[SBRootFolderController pageTransitionHandle:updateCurrentPageStateTransitionToProgress:]
  -[SBRootFolderController pageTransitionHandle:endPageStateTransitionSuccessfully:]
  -[SBRootFolderController _setupDebugTapGestureRecognizerForDockIconListView:]
  -[SBRootFolderController setAccessoryViewControllerDelegate:]
  -[SBRootFolderController setEffectiveSidebarVisibilityProgress:]
  -[SBRootFolderController setTodayViewPageHidden:]
  -[SBRootFolderController searchGestureIconViewTouchCancellationAssertion]
  -[SBRootFolderController setSearchGestureIconViewTouchCancellationAssertion:]
  -[SBRootFolderController setRecentsDocumentExtensionProvider:]


SBRootFolderDockAnimationViewController : UIViewController
 @property  long long forcedInterfaceOrientation

  // instance methods
  -[SBRootFolderDockAnimationViewController shouldAutorotate]
  -[SBRootFolderDockAnimationViewController supportedInterfaceOrientations]
  -[SBRootFolderDockAnimationViewController setForcedInterfaceOrientation:]
  -[SBRootFolderDockAnimationViewController forcedInterfaceOrientation]


_SBRootFolderDockAnimationViewControllerWindow : UIWindow
  // instance methods
  -[_SBRootFolderDockAnimationViewControllerWindow _shouldControlAutorotation]


SBRootFolderControllerDefaultTransitionContext : SBViewControllerTransitionContext

SBRootFolderControllerTransitionInfo : NSObject
 @property  long long sourcePageState
 @property  long long destinationPageState

  // instance methods
  -[SBRootFolderControllerTransitionInfo destinationPageState]
  -[SBRootFolderControllerTransitionInfo setSourcePageState:]
  -[SBRootFolderControllerTransitionInfo sourcePageState]
  -[SBRootFolderControllerTransitionInfo setDestinationPageState:]


_SBRootFolderPageTransitionHandle : NSObject <SBRootFolderPageTransition, BSDescriptionProviding>
 @property  NSString *reason
 @property  SBRootFolderController *folderController
 @property  long long sourcePageState
 @property  long long destinationPageState
 @property  double pageTransitionProgress
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBRootFolderPageTransitionHandle setValid:]
  -[_SBRootFolderPageTransitionHandle destinationPageState]
  -[_SBRootFolderPageTransitionHandle setSourcePageState:]
  -[_SBRootFolderPageTransitionHandle isValid]
  -[_SBRootFolderPageTransitionHandle .cxx_destruct]
  -[_SBRootFolderPageTransitionHandle succinctDescriptionBuilder]
  -[_SBRootFolderPageTransitionHandle endTransitionSuccessfully:]
  -[_SBRootFolderPageTransitionHandle setPageTransitionProgress:]
  -[_SBRootFolderPageTransitionHandle descriptionBuilderWithMultilinePrefix:]
  -[_SBRootFolderPageTransitionHandle folderController]
  -[_SBRootFolderPageTransitionHandle descriptionWithMultilinePrefix:]
  -[_SBRootFolderPageTransitionHandle succinctDescription]
  -[_SBRootFolderPageTransitionHandle initWithFolderController:destinationPageState:reason:]
  -[_SBRootFolderPageTransitionHandle reason]
  -[_SBRootFolderPageTransitionHandle sourcePageState]
  -[_SBRootFolderPageTransitionHandle setTransitionProgress:]
  -[_SBRootFolderPageTransitionHandle setDestinationPageState:]
  -[_SBRootFolderPageTransitionHandle pageTransitionProgress]


SBHAppPredictionsElement : SBHCustomIconElement
  // class methods
  +[SBHAppPredictionsElement elementIdentifier]

  // instance methods
  -[SBHAppPredictionsElement supportedGridSizeClassesForIcon:]
  -[SBHAppPredictionsElement displayName]
  -[SBHAppPredictionsElement icon:imageWithInfo:]
  -[SBHAppPredictionsElement iconShouldIgnoreOtherDataSources:]


SBHLibraryIconViewController : UIViewController <SBHLibraryCategoriesFolderDataSourceObserver, BSDescriptionProviding, SBIconViewCustomImageViewControlling>
 @property  SBHLibraryCategoriesFolderDataSource *libraryDataSource
 @property  SBHLibraryCategoryStackView *categoryStackView
 @property  UIView *dismissalView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  SBIcon *icon
 @property  <SBLeafIconDataSource> *visiblyActiveDataSource
 @property  BOOL editing
 @property  BOOL wantsEditingDisplayStyle
 @property  BOOL showingContextMenu
 @property  BOOL overlapping
 @property  BOOL dropping
 @property  BOOL userInteractionEnabled
 @property  BOOL wantsCaptureOnlyBackgroundView
 @property  @? backgroundViewProvider
 @property  @? backgroundViewConfigurator
 @property  BOOL forcesEdgeAntialiasing
 @property  double brightness
 @property  BOOL wantsLabelHidden
 @property  unsigned long userVisibilityStatus
 @property  BOOL automaticallyUpdatesVisiblySettled
 @property  unsigned long presentationMode
 @property  BOOL showsSnapshotWhenDeactivated
 @property  unsigned long imageViewAlignment
 @property  unsigned long pauseReasons
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *applicationShortcutItems
 @property  {UIEdgeInsets=dddd} minimumPreferredEdgeInsetsForContextMenu
 @property  UIView *snapshotView
 @property  {CGPoint=dd} snapshotViewCenter
 @property  UIView *springLoadingEffectTargetView
 @property  {SBIconApproximateLayoutPosition=QQ} approximateLayoutPosition
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds
 @property  double continuousCornerRadius
 @property  BOOL showsSquareCorners

  // instance methods
  -[SBHLibraryIconViewController setOverlapping:]
  -[SBHLibraryIconViewController initWithCoder:]
  -[SBHLibraryIconViewController setBrightness:]
  -[SBHLibraryIconViewController setEditing:animated:]
  -[SBHLibraryIconViewController continuousCornerRadius]
  -[SBHLibraryIconViewController .cxx_destruct]
  -[SBHLibraryIconViewController isOverlapping]
  -[SBHLibraryIconViewController sourceView]
  -[SBHLibraryIconViewController viewDidLoad]
  -[SBHLibraryIconViewController succinctDescriptionBuilder]
  -[SBHLibraryIconViewController initWithNibName:bundle:]
  -[SBHLibraryIconViewController brightness]
  -[SBHLibraryIconViewController descriptionBuilderWithMultilinePrefix:]
  -[SBHLibraryIconViewController iconImageInfo]
  -[SBHLibraryIconViewController visibleBounds]
  -[SBHLibraryIconViewController setShowsSquareCorners:]
  -[SBHLibraryIconViewController descriptionWithMultilinePrefix:]
  -[SBHLibraryIconViewController succinctDescription]
  -[SBHLibraryIconViewController setEditing:]
  -[SBHLibraryIconViewController isUserInteractionEnabled]
  -[SBHLibraryIconViewController initWithListLayoutProvider:]
  -[SBHLibraryIconViewController isEditing]
  -[SBHLibraryIconViewController springLoadingEffectTargetView]
  -[SBHLibraryIconViewController dealloc]
  -[SBHLibraryIconViewController showsSquareCorners]
  -[SBHLibraryIconViewController setIconImageInfo:]
  -[SBHLibraryIconViewController categoryStackView]
  -[SBHLibraryIconViewController setLibraryDataSource:]
  -[SBHLibraryIconViewController dismissalView]
  -[SBHLibraryIconViewController focusEffectBounds]
  -[SBHLibraryIconViewController focusEffectCenter]
  -[SBHLibraryIconViewController categoriesDataSource:shouldAnimateLayoutForCategories:]
  -[SBHLibraryIconViewController categoriesDataSourceNeedsAnimatedReload:]
  -[SBHLibraryIconViewController _reloadCategoryViewsForDataSourceChangeAnimated:]
  -[SBHLibraryIconViewController libraryDataSource]


SBHCustomIconElement : NSObject <NSCopying, SBLeafIconDataSource>
 @property  NSString *containerBundleIdentifier
 @property  NSString *displayName
 @property  long long suggestionSource
 @property  NSString *uniqueIdentifier
 @property  NSString *configurationStorageIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHCustomIconElement elementIdentifier]
  +[SBHCustomIconElement elementClassWithIdentifier:]

  // instance methods
  -[SBHCustomIconElement copyWithSuggestionSource:]
  -[SBHCustomIconElement displayName]
  -[SBHCustomIconElement icon:displayNameForLocation:]
  -[SBHCustomIconElement uniqueIdentifier]
  -[SBHCustomIconElement priorityForIcon:]
  -[SBHCustomIconElement .cxx_destruct]
  -[SBHCustomIconElement containerBundleIdentifier]
  -[SBHCustomIconElement init]
  -[SBHCustomIconElement initWithUniqueIdentifier:]
  -[SBHCustomIconElement copyWithUniqueIdentifier]
  -[SBHCustomIconElement copyWithZone:]
  -[SBHCustomIconElement suggestionSource]


SBHFeatherBlurNavigationBar : UINavigationBar
 @property  SBFFeatherBlurView *featherBlurBackgroundView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} gradientMaskFrame
 @property  double sb_minimumNavbarHeight
 @property  double sb_maximumNavbarHeight
 @property  BOOL allowsAnimatedUpdating

  // instance methods
  -[SBHFeatherBlurNavigationBar traitCollectionDidChange:]
  -[SBHFeatherBlurNavigationBar _updateLabel]
  -[SBHFeatherBlurNavigationBar .cxx_destruct]
  -[SBHFeatherBlurNavigationBar layoutSubviews]
  -[SBHFeatherBlurNavigationBar _updateAppearance]
  -[SBHFeatherBlurNavigationBar initWithFrame:]
  -[SBHFeatherBlurNavigationBar barPosition]
  -[SBHFeatherBlurNavigationBar _topMargin]
  -[SBHFeatherBlurNavigationBar sb_minimumNavbarHeight]
  -[SBHFeatherBlurNavigationBar sb_maximumNavbarHeight]
  -[SBHFeatherBlurNavigationBar gradientMaskFrame]
  -[SBHFeatherBlurNavigationBar setAllowsAnimatedUpdating:]
  -[SBHFeatherBlurNavigationBar _updateHeights]
  -[SBHFeatherBlurNavigationBar _calculateCompactNavBarFrame]
  -[SBHFeatherBlurNavigationBar _calculateFeatherBlurBackgroundViewFrame]
  -[SBHFeatherBlurNavigationBar _capturedTinyTextLabelContainerView]
  -[SBHFeatherBlurNavigationBar _capturedLargeTextLabelContainerView]
  -[SBHFeatherBlurNavigationBar featherBlurBackgroundView]
  -[SBHFeatherBlurNavigationBar setFeatherBlurBackgroundView:]
  -[SBHFeatherBlurNavigationBar allowsAnimatedUpdating]


SBFolderControllerAnimationContext : NSObject
 @property  UIScreen *screen
 @property  UIWindow *animationWindow
 @property  UIView *fallbackIconContainer

  // class methods
  +[SBFolderControllerAnimationContext contextWithScreen:animationWindow:fallbackIconContainer:]

  // instance methods
  -[SBFolderControllerAnimationContext screen]
  -[SBFolderControllerAnimationContext .cxx_destruct]
  -[SBFolderControllerAnimationContext fallbackIconContainer]
  -[SBFolderControllerAnimationContext animationWindow]
  -[SBFolderControllerAnimationContext initWithScreen:animationWindow:fallbackIconContainer:]


SBHLibraryCategory : NSObject <SBLeafIconDataSource, SBIconObserver, NSFastEnumeration>
 @property  NSString *uniqueIdentifier
 @property  NSString *configurationStorageIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHLibraryCategoryIdentifier *categoryIdentifier
 @property  long long overflowBehavior
 @property  NSString *leafIdentifier
 @property  SBHLibraryAdditionalItemsIndicatorIcon *additionalItemsIndicatorIcon
 @property  NSArray *icons
 @property  SBHLibraryCategoryFolder *compactPodFolder
 @property  SBHLibraryCategoryFolder *compactPodAdditionalItemsFolder
 @property  SBHLibraryCategoryFolder *expandedPodFolder
 @property  <SBIconDelegate> *iconDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibraryCategory setCategoryIdentifier:]
  -[SBHLibraryCategory icon:displayNameForLocation:]
  -[SBHLibraryCategory setIconDelegate:]
  -[SBHLibraryCategory uniqueIdentifier]
  -[SBHLibraryCategory priorityForIcon:]
  -[SBHLibraryCategory icons]
  -[SBHLibraryCategory .cxx_destruct]
  -[SBHLibraryCategory updateCategoryIdentifier:]
  -[SBHLibraryCategory labelAccessoryTypeForIcon:]
  -[SBHLibraryCategory _noteCategoryWillUpdate]
  -[SBHLibraryCategory iconAccessoriesDidUpdate:]
  -[SBHLibraryCategory iconSupportsUninstall:]
  -[SBHLibraryCategory init]
  -[SBHLibraryCategory isEqual:]
  -[SBHLibraryCategory isEqualToCategory:]
  -[SBHLibraryCategory expandedPodFolder]
  -[SBHLibraryCategory _localizedDisplayNameChangedTo:]
  -[SBHLibraryCategory _noteFolderDidUpdateIcons:]
  -[SBHLibraryCategory categoryIdentifier]
  -[SBHLibraryCategory addObserver:]
  -[SBHLibraryCategory iconDelegate]
  -[SBHLibraryCategory overflowBehavior]
  -[SBHLibraryCategory compactPodAdditionalItemsFolder]
  -[SBHLibraryCategory additionalItemsIndicatorIcon]
  -[SBHLibraryCategory leafIdentifier]
  -[SBHLibraryCategory updateCategoryWithIcons:]
  -[SBHLibraryCategory countByEnumeratingWithState:objects:count:]
  -[SBHLibraryCategory compactPodFolder]
  -[SBHLibraryCategory setOverflowBehavior:]
  -[SBHLibraryCategory _noteFolderWillUpdateIcons:]
  -[SBHLibraryCategory _buildDisplayedIconsForFolder:icons:]
  -[SBHLibraryCategory _noteCategoryDidUpdate]
  -[SBHLibraryCategory removeObserver:]
  -[SBHLibraryCategory _refreshAggregateIconLabelAccessoryType]


SBHIconAnimationSettings : PTSettings
 @property  SBFAnimationSettings *centralAnimationSettings

  // class methods
  +[SBHIconAnimationSettings settingsControllerModule]

  // instance methods
  -[SBHIconAnimationSettings .cxx_destruct]
  -[SBHIconAnimationSettings setDefaultValues]
  -[SBHIconAnimationSettings centralAnimationSettings]
  -[SBHIconAnimationSettings setCentralAnimationSettings:]


SBHIconZoomSettings : SBHIconAnimationSettings
 @property  BOOL labelAlphaWithZoom

  // class methods
  +[SBHIconZoomSettings settingsControllerModule]

  // instance methods
  -[SBHIconZoomSettings setDefaultValues]
  -[SBHIconZoomSettings labelAlphaWithZoom]
  -[SBHIconZoomSettings setLabelAlphaWithZoom:]


SBHCenterZoomSettings : SBHIconZoomSettings
 @property  BOOL preferCenterOfIconGrid
 @property  double centerRowCoordinate
 @property  long long distanceEffect
 @property  double firstHopIncrement
 @property  double hopIncrementAcceleration
 @property  double dockMass
 @property  BOOL zoomViewBelowIcons

  // class methods
  +[SBHCenterZoomSettings settingsControllerModule]

  // instance methods
  -[SBHCenterZoomSettings setDefaultValues]
  -[SBHCenterZoomSettings dockMass]
  -[SBHCenterZoomSettings distanceEffect]
  -[SBHCenterZoomSettings firstHopIncrement]
  -[SBHCenterZoomSettings hopIncrementAcceleration]
  -[SBHCenterZoomSettings preferCenterOfIconGrid]
  -[SBHCenterZoomSettings centerRowCoordinate]
  -[SBHCenterZoomSettings setDockMass:]
  -[SBHCenterZoomSettings setCenterRowCoordinate:]
  -[SBHCenterZoomSettings setPreferCenterOfIconGrid:]
  -[SBHCenterZoomSettings setDistanceEffect:]
  -[SBHCenterZoomSettings setFirstHopIncrement:]
  -[SBHCenterZoomSettings setHopIncrementAcceleration:]
  -[SBHCenterZoomSettings zoomViewBelowIcons]
  -[SBHCenterZoomSettings setZoomViewBelowIcons:]


SBHCenterAppZoomSettings : SBHCenterZoomSettings
 @property  double appHeadStart
 @property  SBFAnimationSettings *appZoomSettings
 @property  SBFAnimationSettings *appFadeSettings

  // class methods
  +[SBHCenterAppZoomSettings settingsControllerModule]

  // instance methods
  -[SBHCenterAppZoomSettings .cxx_destruct]
  -[SBHCenterAppZoomSettings setDefaultValues]
  -[SBHCenterAppZoomSettings appHeadStart]
  -[SBHCenterAppZoomSettings setAppHeadStart:]
  -[SBHCenterAppZoomSettings appZoomSettings]
  -[SBHCenterAppZoomSettings setAppZoomSettings:]
  -[SBHCenterAppZoomSettings appFadeSettings]
  -[SBHCenterAppZoomSettings setAppFadeSettings:]


SBHScaleZoomSettings : SBHIconZoomSettings
 @property  SBFAnimationSettings *outerFolderFadeSettings
 @property  BOOL crossfadeWithZoom
 @property  SBFAnimationSettings *crossfadeSettings
 @property  BOOL fadesIconGrid
 @property  SBFAnimationSettings *iconGridFadeSettings

  // class methods
  +[SBHScaleZoomSettings settingsControllerModule]

  // instance methods
  -[SBHScaleZoomSettings .cxx_destruct]
  -[SBHScaleZoomSettings setDefaultValues]
  -[SBHScaleZoomSettings crossfadeSettings]
  -[SBHScaleZoomSettings effectiveCrossfadeAnimationSettings]
  -[SBHScaleZoomSettings iconGridFadeSettings]
  -[SBHScaleZoomSettings fadesIconGrid]
  -[SBHScaleZoomSettings outerFolderFadeSettings]
  -[SBHScaleZoomSettings setCrossfadeWithZoom:]
  -[SBHScaleZoomSettings setFadesIconGrid:]
  -[SBHScaleZoomSettings crossfadeWithZoom]
  -[SBHScaleZoomSettings setOuterFolderFadeSettings:]
  -[SBHScaleZoomSettings setCrossfadeSettings:]
  -[SBHScaleZoomSettings setIconGridFadeSettings:]


SBHCrossfadeZoomSettings : SBHScaleZoomSettings
 @property  BOOL morphWithZoom
 @property  SBFAnimationSettings *morphSettings

  // class methods
  +[SBHCrossfadeZoomSettings settingsControllerModule]

  // instance methods
  -[SBHCrossfadeZoomSettings .cxx_destruct]
  -[SBHCrossfadeZoomSettings setDefaultValues]
  -[SBHCrossfadeZoomSettings effectiveMorphAnimationSettings]
  -[SBHCrossfadeZoomSettings setMorphWithZoom:]
  -[SBHCrossfadeZoomSettings morphWithZoom]
  -[SBHCrossfadeZoomSettings morphSettings]
  -[SBHCrossfadeZoomSettings setMorphSettings:]


SBHFolderZoomSettings : SBHScaleZoomSettings
 @property  SBFAnimationSettings *innerFolderFadeSettings

  // class methods
  +[SBHFolderZoomSettings settingsControllerModule]

  // instance methods
  -[SBHFolderZoomSettings .cxx_destruct]
  -[SBHFolderZoomSettings setDefaultValues]
  -[SBHFolderZoomSettings innerFolderFadeSettings]
  -[SBHFolderZoomSettings setInnerFolderFadeSettings:]


SBHReducedMotionFadeSettings : SBHIconAnimationSettings
  // class methods
  +[SBHReducedMotionFadeSettings settingsControllerModule]

  // instance methods
  -[SBHReducedMotionFadeSettings setDefaultValues]


SBHUnlockSettings : SBHCenterAppSuspendSettings
  // class methods
  +[SBHUnlockSettings settingsControllerModule]

  // instance methods
  -[SBHUnlockSettings setDefaultValues]


SBHCenterAppLaunchSettings : SBHCenterAppZoomSettings
  // instance methods
  -[SBHCenterAppLaunchSettings setDefaultValues]


SBHCenterAppSuspendSettings : SBHCenterAppZoomSettings
  // instance methods
  -[SBHCenterAppSuspendSettings setDefaultValues]


SBHCenterAcceleratedAppSuspendSettings : SBHCenterAppSuspendSettings
  // instance methods
  -[SBHCenterAcceleratedAppSuspendSettings setDefaultValues]


SBHCrossfadeAppTransitionSettings : SBHCrossfadeZoomSettings
 @property  SBFAnimationSettings *appSnapshotCornerRadiusSettings

  // class methods
  +[SBHCrossfadeAppTransitionSettings settingsControllerModule]

  // instance methods
  -[SBHCrossfadeAppTransitionSettings .cxx_destruct]
  -[SBHCrossfadeAppTransitionSettings setDefaultValues]
  -[SBHCrossfadeAppTransitionSettings appSnapshotCornerRadiusSettings]
  -[SBHCrossfadeAppTransitionSettings setAppSnapshotCornerRadiusSettings:]


SBHCrossfadeAppLaunchSettings : SBHCrossfadeAppTransitionSettings
  // instance methods
  -[SBHCrossfadeAppLaunchSettings setDefaultValues]


SBHCrossfadeAppSuspendSettings : SBHCrossfadeAppTransitionSettings
  // instance methods
  -[SBHCrossfadeAppSuspendSettings setDefaultValues]


SBHCrossfadeAcceleratedAppSuspendSettings : SBHCrossfadeAppSuspendSettings
  // instance methods
  -[SBHCrossfadeAcceleratedAppSuspendSettings setDefaultValues]


SBHFolderOpenSettings : SBHFolderZoomSettings
  // instance methods
  -[SBHFolderOpenSettings setDefaultValues]


SBHFolderCloseSettings : SBHFolderZoomSettings
  // instance methods
  -[SBHFolderCloseSettings setDefaultValues]


SBHLibraryPodZoomSettings : SBHFolderZoomSettings
 @property  SBFAnimationSettings *innerFolderEdgeZoomSettings
 @property  SBFAnimationSettings *innerFolderCenterZoomSettings

  // class methods
  +[SBHLibraryPodZoomSettings settingsControllerModule]
  +[SBHLibraryPodZoomSettings _defaultCentralAnimationSettings]
  +[SBHLibraryPodZoomSettings _defaultCrossfadeSettings]
  +[SBHLibraryPodZoomSettings _defaultInnerFolderZoomAnimationSettings]
  +[SBHLibraryPodZoomSettings _defaultInnerFolderZoomDelay]

  // instance methods
  -[SBHLibraryPodZoomSettings .cxx_destruct]
  -[SBHLibraryPodZoomSettings setDefaultValues]
  -[SBHLibraryPodZoomSettings innerFolderEdgeZoomSettings]
  -[SBHLibraryPodZoomSettings setInnerFolderEdgeZoomSettings:]
  -[SBHLibraryPodZoomSettings innerFolderCenterZoomSettings]
  -[SBHLibraryPodZoomSettings setInnerFolderCenterZoomSettings:]


SBHLibraryPodOpenSettings : SBHLibraryPodZoomSettings
  // instance methods
  -[SBHLibraryPodOpenSettings setDefaultValues]


SBHLibraryPodCloseSettings : SBHLibraryPodZoomSettings
  // instance methods
  -[SBHLibraryPodCloseSettings setDefaultValues]


SBHIconAnimationRootSettings : PTSettings
 @property  SBHReducedMotionFadeSettings *reducedMotionSettings
 @property  SBHUnlockSettings *unlockSettings
 @property  SBHCenterAppLaunchSettings *centerLaunchSettings
 @property  SBHCenterAppSuspendSettings *centerSuspendSettings
 @property  SBHCenterAcceleratedAppSuspendSettings *centerAcceleratedSuspendSettings
 @property  SBHCrossfadeAppLaunchSettings *crossfadeLaunchSettings
 @property  SBHCrossfadeAppSuspendSettings *crossfadeSuspendSettings
 @property  SBHCrossfadeAcceleratedAppSuspendSettings *crossfadeAcceleratedSuspendSettings
 @property  double maxAppSuspendHintProgress
 @property  double maxAppLaunchWallpaperScale
 @property  SBHFolderOpenSettings *folderOpenSettings
 @property  SBHFolderCloseSettings *folderCloseSettings
 @property  double maxFolderCloseHintProgress
 @property  SBHLibraryPodOpenSettings *libraryPodOpenSettings
 @property  SBHLibraryPodCloseSettings *libraryPodCloseSettings
 @property  SBHLibraryWaveOpenSettings *libraryWaveOpenSettings
 @property  SBHLibraryWaveCloseSettings *libraryWaveCloseSettings
 @property  SBHLibraryIndicatorIconSettings *libraryIndicatorIconSettings

  // class methods
  +[SBHIconAnimationRootSettings settingsControllerModule]

  // instance methods
  -[SBHIconAnimationRootSettings maxAppSuspendHintProgress]
  -[SBHIconAnimationRootSettings setCrossfadeLaunchSettings:]
  -[SBHIconAnimationRootSettings crossfadeAcceleratedSuspendSettings]
  -[SBHIconAnimationRootSettings maxFolderCloseHintProgress]
  -[SBHIconAnimationRootSettings centerAcceleratedSuspendSettings]
  -[SBHIconAnimationRootSettings setCenterAcceleratedSuspendSettings:]
  -[SBHIconAnimationRootSettings setMaxAppLaunchWallpaperScale:]
  -[SBHIconAnimationRootSettings setLibraryPodOpenSettings:]
  -[SBHIconAnimationRootSettings .cxx_destruct]
  -[SBHIconAnimationRootSettings setMaxFolderCloseHintProgress:]
  -[SBHIconAnimationRootSettings setDefaultValues]
  -[SBHIconAnimationRootSettings setLibraryWaveOpenSettings:]
  -[SBHIconAnimationRootSettings crossfadeLaunchSettings]
  -[SBHIconAnimationRootSettings setCenterSuspendSettings:]
  -[SBHIconAnimationRootSettings setUnlockSettings:]
  -[SBHIconAnimationRootSettings libraryWaveCloseSettings]
  -[SBHIconAnimationRootSettings centerLaunchSettings]
  -[SBHIconAnimationRootSettings reducedMotionSettings]
  -[SBHIconAnimationRootSettings maxAppLaunchWallpaperScale]
  -[SBHIconAnimationRootSettings centerSuspendSettings]
  -[SBHIconAnimationRootSettings folderCloseSettings]
  -[SBHIconAnimationRootSettings setFolderCloseSettings:]
  -[SBHIconAnimationRootSettings setLibraryWaveCloseSettings:]
  -[SBHIconAnimationRootSettings setCrossfadeAcceleratedSuspendSettings:]
  -[SBHIconAnimationRootSettings setLibraryIndicatorIconSettings:]
  -[SBHIconAnimationRootSettings folderOpenSettings]
  -[SBHIconAnimationRootSettings libraryPodCloseSettings]
  -[SBHIconAnimationRootSettings libraryIndicatorIconSettings]
  -[SBHIconAnimationRootSettings setLibraryPodCloseSettings:]
  -[SBHIconAnimationRootSettings setCenterLaunchSettings:]
  -[SBHIconAnimationRootSettings setCrossfadeSuspendSettings:]
  -[SBHIconAnimationRootSettings setReducedMotionSettings:]
  -[SBHIconAnimationRootSettings libraryPodOpenSettings]
  -[SBHIconAnimationRootSettings crossfadeSuspendSettings]
  -[SBHIconAnimationRootSettings setMaxAppSuspendHintProgress:]
  -[SBHIconAnimationRootSettings unlockSettings]
  -[SBHIconAnimationRootSettings setFolderOpenSettings:]
  -[SBHIconAnimationRootSettings libraryWaveOpenSettings]


SBHLibrarySearchController : UIViewController <SBHSearchBarDelegate, BSUIScrollViewDelegate, SBHIconLibraryTableViewControllerLayoutDelegate, UIGestureRecognizerDelegate, PTSettingsKeyObserver>
 @property  SBHSearchTextField *searchField
 @property  SBFFluidBehaviorSettings *searchAnimationSettings
 @property  BOOL scrollViewBeganScrollingFromTop
 @property  long long searchState
 @property  NSArray *contentViewGradientMaskLayers
 @property  NSArray *searchResultsGradientMaskLayers
 @property  SBHSearchBar *searchBar
 @property  unsigned long searchBarAppearance
 @property  BOOL usesPlatterAppearance
 @property  SBHIconLibraryTableViewController *searchResultsController
 @property  UIViewController<SBHLibrarySearchControllerContentViewControllerScrollViewProvider> *contentViewController
 @property  <SBHSearchResultsUpdating> *searchResultsUpdater
 @property  <SBHLibrarySearchControllerDelegate> *delegate
 @property  UIView *searchDimmingView
 @property  BOOL active
 @property  BOOL searchFieldEditing
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  BOOL forcedSearchTextFieldNoneditable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibrarySearchController searchField]
  -[SBHLibrarySearchController contentScrollView]
  -[SBHLibrarySearchController searchResultsController]
  -[SBHLibrarySearchController _edgeInsetsForChildViewController:insetsAreAbsolute:]
  -[SBHLibrarySearchController preferredContentSize]
  -[SBHLibrarySearchController fixedBottomLayoutInsetInWindowCoordinateSpaceForTableViewController:]
  -[SBHLibrarySearchController scrollViewDidEndScrolling:]
  -[SBHLibrarySearchController _willDismissSearchAnimated:]
  -[SBHLibrarySearchController initWithSearchResultsController:contentViewController:usingPlatterAppearance:]
  -[SBHLibrarySearchController setForcedSearchTextFieldNoneditable:]
  -[SBHLibrarySearchController searchBarCancelButtonClicked:]
  -[SBHLibrarySearchController viewWillLayoutSubviews]
  -[SBHLibrarySearchController ppt_setDisablePullToSearch:]
  -[SBHLibrarySearchController scrollViewWillBeginScrolling:]
  -[SBHLibrarySearchController _rubberbandingOffsetForContentOffset:]
  -[SBHLibrarySearchController _updateEffectiveSearchVisualConfiguration]
  -[SBHLibrarySearchController _layoutSearchViewsWithMode:withCompletion:]
  -[SBHLibrarySearchController isActive]
  -[SBHLibrarySearchController setScrollViewBeganScrollingFromTop:]
  -[SBHLibrarySearchController searchBar]
  -[SBHLibrarySearchController isTransitionInProgress]
  -[SBHLibrarySearchController .cxx_destruct]
  -[SBHLibrarySearchController _searchPresentationProgressForOffset:]
  -[SBHLibrarySearchController searchBarAppearance]
  -[SBHLibrarySearchController searchResultsGradientMaskLayers]
  -[SBHLibrarySearchController setSearchResultsUpdater:]
  -[SBHLibrarySearchController _layoutSearchViews]
  -[SBHLibrarySearchController viewDidLoad]
  -[SBHLibrarySearchController _willPresentSearchAnimated:]
  -[SBHLibrarySearchController _calculateSearchBarFrame:]
  -[SBHLibrarySearchController setSearchAnimationSettings:]
  -[SBHLibrarySearchController searchBarDidInvalidateIntrinsicContentSize:]
  -[SBHLibrarySearchController usesPlatterAppearance]
  -[SBHLibrarySearchController setDelegate:]
  -[SBHLibrarySearchController viewDidAppear:]
  -[SBHLibrarySearchController shouldAutomaticallyForwardAppearanceMethods]
  -[SBHLibrarySearchController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBHLibrarySearchController _bottomLayoutInsetForSearchResultsView]
  -[SBHLibrarySearchController _calculateSearchBarFrame:forExplicitVisualConfiguration:]
  -[SBHLibrarySearchController searchResultsUpdater]
  -[SBHLibrarySearchController contentViewGradientMaskLayers]
  -[SBHLibrarySearchController setSearchBarAppearance:]
  -[SBHLibrarySearchController scrollViewDidScroll:]
  -[SBHLibrarySearchController searchBarShouldEndEditing:]
  -[SBHLibrarySearchController forcedSearchTextFieldNoneditable]
  -[SBHLibrarySearchController setSearchDimmingView:]
  -[SBHLibrarySearchController beginEditingForSearchField]
  -[SBHLibrarySearchController keyCommands]
  -[SBHLibrarySearchController setListLayoutProvider:]
  -[SBHLibrarySearchController _activeSearchConfiguration]
  -[SBHLibrarySearchController contentViewController]
  -[SBHLibrarySearchController viewWillDisappear:]
  -[SBHLibrarySearchController searchBarTextDidEndEditing:]
  -[SBHLibrarySearchController searchAnimationSettings]
  -[SBHLibrarySearchController gestureRecognizer:shouldReceiveTouch:]
  -[SBHLibrarySearchController scrollViewWillBeginDragging:]
  -[SBHLibrarySearchController viewWillAppear:]
  -[SBHLibrarySearchController _performPresentation:]
  -[SBHLibrarySearchController _didPresentSearch]
  -[SBHLibrarySearchController scrollViewBeganScrollingFromTop]
  -[SBHLibrarySearchController setActive:]
  -[SBHLibrarySearchController delegate]
  -[SBHLibrarySearchController _setupSearchAnimationSettings]
  -[SBHLibrarySearchController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBHLibrarySearchController settings:changedValueForKey:]
  -[SBHLibrarySearchController searchState]
  -[SBHLibrarySearchController _dismissPresentation:]
  -[SBHLibrarySearchController searchDimmingView]
  -[SBHLibrarySearchController listLayoutProvider]
  -[SBHLibrarySearchController endEditingForSearchField]
  -[SBHLibrarySearchController searchBarShouldReturn:]
  -[SBHLibrarySearchController _inactiveSearchConfiguration]
  -[SBHLibrarySearchController _setUpFeatherMaskLayerMatchMoveAnimations]
  -[SBHLibrarySearchController searchBar:textDidChange:]
  -[SBHLibrarySearchController searchBarShouldBeginEditing:]
  -[SBHLibrarySearchController isSearchFieldEditing]
  -[SBHLibrarySearchController viewDidDisappear:]
  -[SBHLibrarySearchController _didDismissSearch]
  -[SBHLibrarySearchController resetSearchController:clearSearchResults:resetSearchBarTransformAndAlpha:]


SBHSimpleApplicationDataSource : NSObject <SBHIconModelApplicationDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHSimpleApplicationDataSource iconModel:applicationWithBundleIdentifier:]
  -[SBHSimpleApplicationDataSource allApplicationsForIconModel:]
  -[SBHSimpleApplicationDataSource allApplicationPlaceholdersForIconModel:]
  -[SBHSimpleApplicationDataSource simpleApplicationsWithEnumeratorOptions:]
  -[SBHSimpleApplicationDataSource makeApplicationWithRecord:]


SBHTrialClientManager : NSObject
 @property  TRIClient *trialClient
 @property  NSString *homeScreenNamespace

  // instance methods
  -[SBHTrialClientManager .cxx_destruct]
  -[SBHTrialClientManager init]
  -[SBHTrialClientManager trialClient]
  -[SBHTrialClientManager setTrialClient:]
  -[SBHTrialClientManager homeScreenNamespace]
  -[SBHTrialClientManager immediatelyFetchSpringBoardHomeNamespace]
  -[SBHTrialClientManager widgetDiscoverabilityGoSwitchEnabled]
  -[SBHTrialClientManager setHomeScreenNamespace:]


SBHRootFolderVisualConfiguration : NSObject <NSCopying, BSDescriptionProviding>
 @property  double idleTextVerticalOffset
 @property  double pageControlVerticalOffset
 @property  {CGSize=dd} pageControlFrameInset
 @property  {CGSize=dd} pageControlCustomPadding
 @property  double pageManagementPageCheckboxVerticalMargin
 @property  double pageManagementPageCheckboxDiameter
 @property  {CGSize=dd} pageManagementFocusModeOptionsButtonSize
 @property  double dockViewHeight
 @property  double dockBackgroundViewCornerRadius
 @property  {UIEdgeInsets=dddd} dockBackgroundViewInsets
 @property  {UIEdgeInsets=dddd} dockListViewInsets
 @property  {NSDirectionalEdgeInsets=dddd} editModeButtonContentEdgeInsets
 @property  {UIOffset=dd} editModeButtonLayoutOffset
 @property  {CGSize=dd} editModeButtonSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHRootFolderVisualConfiguration pageControlFrameInset]
  -[SBHRootFolderVisualConfiguration setEditModeButtonContentEdgeInsets:]
  -[SBHRootFolderVisualConfiguration editModeButtonSize]
  -[SBHRootFolderVisualConfiguration setPageControlFrameInset:]
  -[SBHRootFolderVisualConfiguration setDockBackgroundViewInsets:]
  -[SBHRootFolderVisualConfiguration setPageControlCustomPadding:]
  -[SBHRootFolderVisualConfiguration editModeButtonContentEdgeInsets]
  -[SBHRootFolderVisualConfiguration dockViewHeight]
  -[SBHRootFolderVisualConfiguration setPageManagementPageCheckboxVerticalMargin:]
  -[SBHRootFolderVisualConfiguration setPageManagementPageCheckboxDiameter:]
  -[SBHRootFolderVisualConfiguration pageControlCustomPadding]
  -[SBHRootFolderVisualConfiguration idleTextVerticalOffset]
  -[SBHRootFolderVisualConfiguration succinctDescriptionBuilder]
  -[SBHRootFolderVisualConfiguration pageManagementFocusModeOptionsButtonSize]
  -[SBHRootFolderVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHRootFolderVisualConfiguration setIdleTextVerticalOffset:]
  -[SBHRootFolderVisualConfiguration init]
  -[SBHRootFolderVisualConfiguration isEqual:]
  -[SBHRootFolderVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHRootFolderVisualConfiguration succinctDescription]
  -[SBHRootFolderVisualConfiguration pageManagementPageCheckboxVerticalMargin]
  -[SBHRootFolderVisualConfiguration dockBackgroundViewCornerRadius]
  -[SBHRootFolderVisualConfiguration setEditModeButtonSize:]
  -[SBHRootFolderVisualConfiguration pageManagementLayoutMetricsForLayoutConfiguration:]
  -[SBHRootFolderVisualConfiguration setDockViewHeight:]
  -[SBHRootFolderVisualConfiguration dockListViewInsets]
  -[SBHRootFolderVisualConfiguration editModeButtonLayoutOffset]
  -[SBHRootFolderVisualConfiguration setEditModeButtonLayoutOffset:]
  -[SBHRootFolderVisualConfiguration setPageManagementFocusModeOptionsButtonSize:]
  -[SBHRootFolderVisualConfiguration pageControlVerticalOffset]
  -[SBHRootFolderVisualConfiguration setDockBackgroundViewCornerRadius:]
  -[SBHRootFolderVisualConfiguration copyWithZone:]
  -[SBHRootFolderVisualConfiguration setPageManagementLayoutMetrics:forLayoutConfiguration:]
  -[SBHRootFolderVisualConfiguration setPageControlVerticalOffset:]
  -[SBHRootFolderVisualConfiguration setDockListViewInsets:]
  -[SBHRootFolderVisualConfiguration pageManagementPageCheckboxDiameter]
  -[SBHRootFolderVisualConfiguration dockBackgroundViewInsets]


SBHLocalizedIndexedCollationStrategy : NSObject <SBHLocalizedIndexedCollation>
 @property  NSArray *sectionTitles
 @property  NSArray *sectionIndexTitles
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHLocalizedIndexedCollationStrategy defaultSectionTitles]
  +[SBHLocalizedIndexedCollationStrategy dimSumCollationStrategy]
  +[SBHLocalizedIndexedCollationStrategy defaultSectionIndexTitles]
  +[SBHLocalizedIndexedCollationStrategy myCurrentCollation]
  +[SBHLocalizedIndexedCollationStrategy defaultCollationStrategy]
  +[SBHLocalizedIndexedCollationStrategy prewarm]

  // instance methods
  -[SBHLocalizedIndexedCollationStrategy .cxx_destruct]
  -[SBHLocalizedIndexedCollationStrategy isEqual:]
  -[SBHLocalizedIndexedCollationStrategy sectionIndexTitles]
  -[SBHLocalizedIndexedCollationStrategy sectionForObject:collationStringSelector:]
  -[SBHLocalizedIndexedCollationStrategy sectionTitles]
  -[SBHLocalizedIndexedCollationStrategy sortedArrayFromArray:collationStringSelector:]
  -[SBHLocalizedIndexedCollationStrategy sectionForSectionIndexTitleAtIndex:]
  -[SBHLocalizedIndexedCollationStrategy initWithAdditionalSections:]
  -[SBHLocalizedIndexedCollationStrategy appendedSectionTitles]
  -[SBHLocalizedIndexedCollationStrategy containsSection:]


SBHWidgetStackViewController : UIViewController <BSUIScrollViewDelegate, SBLeafIconObserver, PTSettingsKeyObserver, SBIconViewCustomImageViewControllerObserving, SBHWidgetContainerViewControllerDelegate, SBIconViewCustomImageViewControlling>
 @property  SBWidgetIcon *icon
 @property  <SBLeafIconDataSource> *activeWidget
 @property  BSUIScrollView *scrollView
 @property  UIView *containerView
 @property  UIView *backgroundView
 @property  UIPageControl *pageControl
 @property  NSTimer *pageControlHidingTimer
 @property  UIView *dimmingView
 @property  BOOL showStackBorderWhenShowingPageControl
 @property  BOOL flashPageControlOnNextAppearance
 @property  BOOL flashPageControlOnNextAlphaChange
 @property  NSMutableDictionary *widgetContainerViewControllers
 @property  SBHWidgetSettings *widgetSettings
 @property  SBFFluidBehaviorSettings *animationSettings
 @property  unsigned long widgetScaleAnimationCount
 @property  unsigned long backgroundAnimationCount
 @property  NSHashTable *imageUpdateDisableAssertions
 @property  <BSInvalidatable> *scrollingTouchCancellationAssertion
 @property  <BSInvalidatable> *imageUpdatesDisabledForContextMenuAssertion
 @property  SBWidgetIcon *widgetIcon
 @property  BOOL alwaysShowsAsStack
 @property  BOOL highlightsAtAnySize
 @property  BOOL forcesEdgeAntialiasing
 @property  BOOL widgetHitTestingDisabled
 @property  NSArray *widgetViewControllers
 @property  UIColor *backgroundTintingColor
 @property  <SBHWidgetStackViewControllerDataSource> *dataSource
 @property  <SBHWidgetStackViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  <SBLeafIconDataSource> *visiblyActiveDataSource
 @property  BOOL editing
 @property  BOOL wantsEditingDisplayStyle
 @property  BOOL showingContextMenu
 @property  BOOL overlapping
 @property  BOOL dropping
 @property  BOOL userInteractionEnabled
 @property  BOOL wantsCaptureOnlyBackgroundView
 @property  @? backgroundViewProvider
 @property  @? backgroundViewConfigurator
 @property  double brightness
 @property  BOOL wantsLabelHidden
 @property  unsigned long userVisibilityStatus
 @property  BOOL automaticallyUpdatesVisiblySettled
 @property  unsigned long presentationMode
 @property  BOOL showsSnapshotWhenDeactivated
 @property  unsigned long imageViewAlignment
 @property  unsigned long pauseReasons
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *applicationShortcutItems
 @property  {UIEdgeInsets=dddd} minimumPreferredEdgeInsetsForContextMenu
 @property  UIView *snapshotView
 @property  {CGPoint=dd} snapshotViewCenter
 @property  UIView *springLoadingEffectTargetView
 @property  {SBIconApproximateLayoutPosition=QQ} approximateLayoutPosition
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds
 @property  double continuousCornerRadius
 @property  BOOL showsSquareCorners

  // instance methods
  -[SBHWidgetStackViewController dimmingView]
  -[SBHWidgetStackViewController setWidgetSettings:]
  -[SBHWidgetStackViewController presentationMode]
  -[SBHWidgetStackViewController _incrementWidgetScaleAnimationCount]
  -[SBHWidgetStackViewController _alwaysShowStackBorder]
  -[SBHWidgetStackViewController setScrollView:]
  -[SBHWidgetStackViewController widgetSettings]
  -[SBHWidgetStackViewController _incrementBackgroundAnimationCount]
  -[SBHWidgetStackViewController setDimmingView:]
  -[SBHWidgetStackViewController setBackgroundViewConfigurator:]
  -[SBHWidgetStackViewController setPresentationMode:]
  -[SBHWidgetStackViewController showsSnapshotWhenDeactivated]
  -[SBHWidgetStackViewController pageControl]
  -[SBHWidgetStackViewController _setupStateCapture]
  -[SBHWidgetStackViewController setWidgetContainerViewControllers:]
  -[SBHWidgetStackViewController _handleInstalledAppsChanged:]
  -[SBHWidgetStackViewController activeWidget]
  -[SBHWidgetStackViewController setOverlapping:]
  -[SBHWidgetStackViewController setShowsSnapshotWhenDeactivated:]
  -[SBHWidgetStackViewController setAnimationSettings:]
  -[SBHWidgetStackViewController animationSettings]
  -[SBHWidgetStackViewController customImageViewControllerWantsLabelHiddenDidChange:]
  -[SBHWidgetStackViewController _updateWidgetViewEdgeAntialiasing]
  -[SBHWidgetStackViewController scrollingTouchCancellationAssertion]
  -[SBHWidgetStackViewController scrollViewDidEndScrolling:]
  -[SBHWidgetStackViewController forcesEdgeAntialiasing]
  -[SBHWidgetStackViewController isWidgetHitTestingDisabled]
  -[SBHWidgetStackViewController sourceBackgroundView:]
  -[SBHWidgetStackViewController widgetScaleAnimationCount]
  -[SBHWidgetStackViewController setUserInteractionEnabled:]
  -[SBHWidgetStackViewController sbh_underlyingAvocadoHostViewControllers]
  -[SBHWidgetStackViewController _updateBackgroundViewWithAnimationUpdateMode:]
  -[SBHWidgetStackViewController removeCustomImageViewControllerObserver:]
  -[SBHWidgetStackViewController setShowingContextMenu:]
  -[SBHWidgetStackViewController backgroundViewConfigurator]
  -[SBHWidgetStackViewController widgetViewControllers]
  -[SBHWidgetStackViewController viewWillLayoutSubviews]
  -[SBHWidgetStackViewController icon]
  -[SBHWidgetStackViewController setPageControlHidingTimer:]
  -[SBHWidgetStackViewController pauseReasons]
  -[SBHWidgetStackViewController backgroundTintingColor]
  -[SBHWidgetStackViewController cancelTouchesForCurrentEventInHostedContent]
  -[SBHWidgetStackViewController scrollView]
  -[SBHWidgetStackViewController setBrightness:]
  -[SBHWidgetStackViewController _scrollViewContentSize]
  -[SBHWidgetStackViewController _requireLayoutUponActivationForWidgetContainerViewController:]
  -[SBHWidgetStackViewController setUserVisibilityStatus:]
  -[SBHWidgetStackViewController setEditing:animated:]
  -[SBHWidgetStackViewController isShowingContextMenu]
  -[SBHWidgetStackViewController setDataSource:]
  -[SBHWidgetStackViewController _setPageControlHidden:animated:]
  -[SBHWidgetStackViewController automaticallyUpdatesVisiblySettled]
  -[SBHWidgetStackViewController _createBackgroundViewIfNecessary:]
  -[SBHWidgetStackViewController minimumPreferredEdgeInsetsForContextMenu]
  -[SBHWidgetStackViewController userVisibilityStatus]
  -[SBHWidgetStackViewController leafIcon:didAddIconDataSource:]
  -[SBHWidgetStackViewController sbh_isWidgetStackViewController]
  -[SBHWidgetStackViewController containerView]
  -[SBHWidgetStackViewController continuousCornerRadius]
  -[SBHWidgetStackViewController snapshotView]
  -[SBHWidgetStackViewController .cxx_destruct]
  -[SBHWidgetStackViewController scrollViewDidEndScrollingAnimation:]
  -[SBHWidgetStackViewController approximateLayoutPosition]
  -[SBHWidgetStackViewController isOverlapping]
  -[SBHWidgetStackViewController alwaysShowsAsStack]
  -[SBHWidgetStackViewController _updateApproximateLayoutPositionForWidgetViewControllers]
  -[SBHWidgetStackViewController setShowStackBorderWhenShowingPageControl:]
  -[SBHWidgetStackViewController sourceView]
  -[SBHWidgetStackViewController setApproximateLayoutPosition:]
  -[SBHWidgetStackViewController setAlwaysShowsAsStack:]
  -[SBHWidgetStackViewController applicationShortcutItems]
  -[SBHWidgetStackViewController _updatePauseReasonForWidgetViewControllers]
  -[SBHWidgetStackViewController pageControlHidingTimer]
  -[SBHWidgetStackViewController _createBackgroundView]
  -[SBHWidgetStackViewController _configureBackgroundViewIfNecessary]
  -[SBHWidgetStackViewController setLegibilitySettings:]
  -[SBHWidgetStackViewController addCustomImageViewControllerObserver:]
  -[SBHWidgetStackViewController backgroundAnimationCount]
  -[SBHWidgetStackViewController imageUpdatesDisabledForContextMenuAssertion]
  -[SBHWidgetStackViewController leafIcon:didChangeActiveDataSource:]
  -[SBHWidgetStackViewController setDelegate:]
  -[SBHWidgetStackViewController leafIcon:didRemoveIconDataSource:]
  -[SBHWidgetStackViewController viewDidAppear:]
  -[SBHWidgetStackViewController imageViewAlignment]
  -[SBHWidgetStackViewController _teardownBackgroundView:contactDelegate:]
  -[SBHWidgetStackViewController setImageViewAlignment:]
  -[SBHWidgetStackViewController shouldAutomaticallyForwardAppearanceMethods]
  -[SBHWidgetStackViewController evaluateBackground]
  -[SBHWidgetStackViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBHWidgetStackViewController widgetContainerViewControllers]
  -[SBHWidgetStackViewController _scrollToActiveWidgetAnimated:]
  -[SBHWidgetStackViewController dataSource]
  -[SBHWidgetStackViewController brightness]
  -[SBHWidgetStackViewController _updateVisiblySettledForWidgetViewControllers]
  -[SBHWidgetStackViewController setWidgetScaleAnimationCount:]
  -[SBHWidgetStackViewController imageUpdateDisableAssertions]
  -[SBHWidgetStackViewController _isContentViewExtendingOutsideBounds]
  -[SBHWidgetStackViewController iconImageInfo]
  -[SBHWidgetStackViewController disableImageUpdatesForReason:]
  -[SBHWidgetStackViewController visibleBounds]
  -[SBHWidgetStackViewController _decrementWidgetScaleAnimationCount]
  -[SBHWidgetStackViewController _updateWidgetViewClippingAndBackgroundView]
  -[SBHWidgetStackViewController setShowsSquareCorners:]
  -[SBHWidgetStackViewController scrollViewDidScroll:]
  -[SBHWidgetStackViewController _restingContentOffset]
  -[SBHWidgetStackViewController setContainerView:]
  -[SBHWidgetStackViewController backgroundViewProvider]
  -[SBHWidgetStackViewController setIcon:]
  -[SBHWidgetStackViewController _restartPageControlTimer]
  -[SBHWidgetStackViewController setAutomaticallyUpdatesVisiblySettled:]
  -[SBHWidgetStackViewController _updateShowsSnapshotWhenDeactivatedForWidgetViewControllers]
  -[SBHWidgetStackViewController setImageUpdateDisableAssertions:]
  -[SBHWidgetStackViewController _updatePresentationModeForWidgetViewControllers]
  -[SBHWidgetStackViewController _configureBackgroundViewIfNecessary:]
  -[SBHWidgetStackViewController setBackgroundViewProvider:]
  -[SBHWidgetStackViewController setEditing:]
  -[SBHWidgetStackViewController _disableImageUpdatesForReason:animateChangesUponInvalidation:]
  -[SBHWidgetStackViewController viewWillDisappear:]
  -[SBHWidgetStackViewController _newActiveWidgetIndexForContentOffset:]
  -[SBHWidgetStackViewController willShowContextMenuAtLocation:]
  -[SBHWidgetStackViewController isUserInteractionEnabled]
  -[SBHWidgetStackViewController _containerRequiresClippingToBoundsForWidget:]
  -[SBHWidgetStackViewController _decrementBackgroundAnimationCount]
  -[SBHWidgetStackViewController _shouldDrawSystemBackgroundMaterialForWidget:]
  -[SBHWidgetStackViewController setFlashPageControlOnNextAlphaChange:]
  -[SBHWidgetStackViewController scrollViewWillBeginDragging:]
  -[SBHWidgetStackViewController _createViewControllerForWidgetIfNecessary:usingSize:]
  -[SBHWidgetStackViewController didSelectApplicationShortcutItem:]
  -[SBHWidgetStackViewController viewWillAppear:]
  -[SBHWidgetStackViewController widgetContainerViewControllerContentViewControllerWillDeactivate:]
  -[SBHWidgetStackViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[SBHWidgetStackViewController _updateActiveWidgetIndexAndScrollViewContentOffset]
  -[SBHWidgetStackViewController setPageControl:]
  -[SBHWidgetStackViewController setBackgroundView:]
  -[SBHWidgetStackViewController _flashPageControlAnimated:]
  -[SBHWidgetStackViewController _showAdjacentWidgets]
  -[SBHWidgetStackViewController isEditing]
  -[SBHWidgetStackViewController delegate]
  -[SBHWidgetStackViewController _widgetContextMenuController]
  -[SBHWidgetStackViewController flashPageControlOnNextAlphaChange]
  -[SBHWidgetStackViewController settings:changedValueForKey:]
  -[SBHWidgetStackViewController setHighlightsAtAnySize:]
  -[SBHWidgetStackViewController setForcesEdgeAntialiasing:]
  -[SBHWidgetStackViewController _removeWidget:animated:]
  -[SBHWidgetStackViewController _updateBackgroundViewWithAnimationUpdateMode:allowingOutsetting:]
  -[SBHWidgetStackViewController setImageUpdatesDisabledForContextMenuAssertion:]
  -[SBHWidgetStackViewController _pageSize]
  -[SBHWidgetStackViewController springLoadingEffectTargetView]
  -[SBHWidgetStackViewController dealloc]
  -[SBHWidgetStackViewController initWithIcon:]
  -[SBHWidgetStackViewController _pageControlIsHorizontallyConstrained]
  -[SBHWidgetStackViewController widgetIcon]
  -[SBHWidgetStackViewController _updatePageControlWithAnimationUpdateMode:]
  -[SBHWidgetStackViewController wantsCaptureOnlyBackgroundView]
  -[SBHWidgetStackViewController _updateWidgetViewsWithAnimationUpdateMode:]
  -[SBHWidgetStackViewController showsSquareCorners]
  -[SBHWidgetStackViewController setScrollingTouchCancellationAssertion:]
  -[SBHWidgetStackViewController showStackBorderWhenShowingPageControl]
  -[SBHWidgetStackViewController loadView]
  -[SBHWidgetStackViewController _updateWidgetViewHitTesting]
  -[SBHWidgetStackViewController _updateScrollViewDelaysContentTouches]
  -[SBHWidgetStackViewController _backgroundColorForWidgetWithDistanceFromRestingContentOffset:]
  -[SBHWidgetStackViewController highlightsAtAnySize]
  -[SBHWidgetStackViewController visiblyActiveDataSource]
  -[SBHWidgetStackViewController _insetWidgetsForTrackingAppearance]
  -[SBHWidgetStackViewController setPauseReasons:]
  -[SBHWidgetStackViewController flashPageControlOnNextAppearance]
  -[SBHWidgetStackViewController _teardownStateCapture]
  -[SBHWidgetStackViewController setBackgroundAnimationCount:]
  -[SBHWidgetStackViewController _alwaysShowStackPageControl]
  -[SBHWidgetStackViewController observeValueForKeyPath:ofObject:change:context:]
  -[SBHWidgetStackViewController setActiveWidget:]
  -[SBHWidgetStackViewController viewDidDisappear:]
  -[SBHWidgetStackViewController setIconImageInfo:]
  -[SBHWidgetStackViewController _isScrollViewTracking]
  -[SBHWidgetStackViewController updateImageAnimated:]
  -[SBHWidgetStackViewController legibilitySettings]
  -[SBHWidgetStackViewController _updateAccessibilityValue]
  -[SBHWidgetStackViewController _layoutWithAnimationUpdateMode:]
  -[SBHWidgetStackViewController setFlashPageControlOnNextAppearance:]
  -[SBHWidgetStackViewController backgroundView]
  -[SBHWidgetStackViewController _canShowWhileLocked]
  -[SBHWidgetStackViewController widgetContainerViewControllerContentViewControllerDidActivate:]


SBHRootFolderSettings : PTSettings
 @property  BOOL adjustableLayoutEnabled
 @property  double portraitTopLayoutInset
 @property  double portraitBottomLayoutInset
 @property  double portraitSideLayoutInset
 @property  double landscapeTopLayoutInset
 @property  double landscapeBottomLayoutInset
 @property  double landscapeSideLayoutInset

  // class methods
  +[SBHRootFolderSettings settingsControllerModule]

  // instance methods
  -[SBHRootFolderSettings setDefaultValues]
  -[SBHRootFolderSettings setAdjustableLayoutEnabled:]
  -[SBHRootFolderSettings setPortraitTopLayoutInset:]
  -[SBHRootFolderSettings setPortraitBottomLayoutInset:]
  -[SBHRootFolderSettings setPortraitSideLayoutInset:]
  -[SBHRootFolderSettings setLandscapeTopLayoutInset:]
  -[SBHRootFolderSettings setLandscapeBottomLayoutInset:]
  -[SBHRootFolderSettings setLandscapeSideLayoutInset:]
  -[SBHRootFolderSettings isAdjustableLayoutEnabled]
  -[SBHRootFolderSettings portraitTopLayoutInset]
  -[SBHRootFolderSettings portraitBottomLayoutInset]
  -[SBHRootFolderSettings portraitSideLayoutInset]
  -[SBHRootFolderSettings landscapeTopLayoutInset]
  -[SBHRootFolderSettings landscapeBottomLayoutInset]
  -[SBHRootFolderSettings landscapeSideLayoutInset]


SBCountedMap : NSObject
  // instance methods
  -[SBCountedMap containsKey:]
  -[SBCountedMap checkoutValueForKey:creationBlock:]
  -[SBCountedMap .cxx_destruct]
  -[SBCountedMap containsValue:]
  -[SBCountedMap checkinValues:]
  -[SBCountedMap init]
  -[SBCountedMap checkinValue:]


SBHPageManagementCellDragPreview : UIView <SBIconDragPreview>
 @property  SBIconView *referenceIconView
 @property  SBIconView *iconView
 @property  BOOL delayingCleanup
 @property  unsigned long dragState
 @property  BOOL flocked
 @property  BOOL iconAllowsLabelArea
 @property  BOOL iconAllowsAccessory
 @property  BOOL iconCanShowCloseBox
 @property  double iconContentScale
 @property  BOOL iconIsEditing
 @property  SBIcon *icon
 @property  @? cleanUpHandler

  // instance methods
  -[SBHPageManagementCellDragPreview icon]
  -[SBHPageManagementCellDragPreview setIconContentScale:]
  -[SBHPageManagementCellDragPreview iconContentScale]
  -[SBHPageManagementCellDragPreview .cxx_destruct]
  -[SBHPageManagementCellDragPreview referenceIconView]
  -[SBHPageManagementCellDragPreview setIcon:]
  -[SBHPageManagementCellDragPreview setIconViewDelegate:]
  -[SBHPageManagementCellDragPreview setDragState:]
  -[SBHPageManagementCellDragPreview dragState]
  -[SBHPageManagementCellDragPreview iconView]
  -[SBHPageManagementCellDragPreview setIconView:]
  -[SBHPageManagementCellDragPreview isFlocked]
  -[SBHPageManagementCellDragPreview _pageManagementCellView]
  -[SBHPageManagementCellDragPreview _configureIconViewWithReferenceIconView:]
  -[SBHPageManagementCellDragPreview handleCleanup]
  -[SBHPageManagementCellDragPreview setDelayingCleanup:]
  -[SBHPageManagementCellDragPreview cleanUpHandler]
  -[SBHPageManagementCellDragPreview setCleanUpHandler:]
  -[SBHPageManagementCellDragPreview isDelayingCleanup]
  -[SBHPageManagementCellDragPreview setIconIsEditing:animated:]
  -[SBHPageManagementCellDragPreview updateDestinationIconLocation:allowsLabelArea:animated:]
  -[SBHPageManagementCellDragPreview draggingSourceDroppedWithOperation:]
  -[SBHPageManagementCellDragPreview draggingSourceCancelAnimationCompleted]
  -[SBHPageManagementCellDragPreview dropDestinationAnimationCompleted]
  -[SBHPageManagementCellDragPreview delayCleanUpForReason:]
  -[SBHPageManagementCellDragPreview setFlocked:]
  -[SBHPageManagementCellDragPreview iconAllowsLabelArea]
  -[SBHPageManagementCellDragPreview setIconAllowsLabelArea:]
  -[SBHPageManagementCellDragPreview iconAllowsAccessory]
  -[SBHPageManagementCellDragPreview setIconAllowsAccessory:]
  -[SBHPageManagementCellDragPreview iconCanShowCloseBox]
  -[SBHPageManagementCellDragPreview setIconCanShowCloseBox:]
  -[SBHPageManagementCellDragPreview iconIsEditing]
  -[SBHPageManagementCellDragPreview setIconIsEditing:]
  -[SBHPageManagementCellDragPreview initWithReferenceIconView:]
  -[SBHPageManagementCellDragPreview _removeDelayCleanupAssertion:]
  -[SBHPageManagementCellDragPreview setReferenceIconView:]


SBHPageManagementCellDragPreviewDelayCleanupAssertion : NSObject <BSInvalidatable, BSDescriptionProviding>
 @property  BOOL invalidated
 @property  SBHPageManagementCellDragPreview *dragPreview
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHPageManagementCellDragPreviewDelayCleanupAssertion isInvalidated]
  -[SBHPageManagementCellDragPreviewDelayCleanupAssertion .cxx_destruct]
  -[SBHPageManagementCellDragPreviewDelayCleanupAssertion succinctDescriptionBuilder]
  -[SBHPageManagementCellDragPreviewDelayCleanupAssertion descriptionBuilderWithMultilinePrefix:]
  -[SBHPageManagementCellDragPreviewDelayCleanupAssertion setInvalidated:]
  -[SBHPageManagementCellDragPreviewDelayCleanupAssertion descriptionWithMultilinePrefix:]
  -[SBHPageManagementCellDragPreviewDelayCleanupAssertion succinctDescription]
  -[SBHPageManagementCellDragPreviewDelayCleanupAssertion reason]
  -[SBHPageManagementCellDragPreviewDelayCleanupAssertion dealloc]
  -[SBHPageManagementCellDragPreviewDelayCleanupAssertion invalidate]
  -[SBHPageManagementCellDragPreviewDelayCleanupAssertion initWithDragPreview:reason:]
  -[SBHPageManagementCellDragPreviewDelayCleanupAssertion dragPreview]


SBHStackConfigurationBackgroundViewController : CCUICustomContentModuleBackgroundViewController
 @property  {CGSize=dd} apertureSize

  // instance methods
  -[SBHStackConfigurationBackgroundViewController initWithNibName:bundle:]
  -[SBHStackConfigurationBackgroundViewController loadView]
  -[SBHStackConfigurationBackgroundViewController setFooterButtons:]
  -[SBHStackConfigurationBackgroundViewController apertureSize]
  -[SBHStackConfigurationBackgroundViewController expandedContentModuleWidth]
  -[SBHStackConfigurationBackgroundViewController expandedContentModuleHeight]
  -[SBHStackConfigurationBackgroundViewController setApertureSize:]


SBFolderControllerBackgroundView : SBFFocusIsolationView
 @property  BOOL reduceTransparencyEnabled
 @property  unsigned long concreteEffect
 @property  unsigned long currentEffect
 @property  <SBFolderControllerBackgroundViewDelegate> *delegate
 @property  BOOL transitionCancelled
 @property  unsigned long effect
 @property  BOOL effectActive
 @property  BOOL expanding
 @property  BOOL frozen

  // class methods
  +[SBFolderControllerBackgroundView _tintColorForEffect:]

  // instance methods
  -[SBFolderControllerBackgroundView currentEffect]
  -[SBFolderControllerBackgroundView _isCurrentlyExpanding]
  -[SBFolderControllerBackgroundView setCurrentEffect:]
  -[SBFolderControllerBackgroundView setEffect:]
  -[SBFolderControllerBackgroundView effect]
  -[SBFolderControllerBackgroundView .cxx_destruct]
  -[SBFolderControllerBackgroundView minimumHomeScreenScale]
  -[SBFolderControllerBackgroundView layoutSubviews]
  -[SBFolderControllerBackgroundView setExpanding:]
  -[SBFolderControllerBackgroundView setDelegate:]
  -[SBFolderControllerBackgroundView setReduceTransparencyEnabled:]
  -[SBFolderControllerBackgroundView _reduceTransparencyEnabledStateChanged]
  -[SBFolderControllerBackgroundView _updateCurrentEffect]
  -[SBFolderControllerBackgroundView isTransitionCancelled]
  -[SBFolderControllerBackgroundView concreteEffect]
  -[SBFolderControllerBackgroundView initWithFrame:]
  -[SBFolderControllerBackgroundView isFrozen]
  -[SBFolderControllerBackgroundView isReduceTransparencyEnabled]
  -[SBFolderControllerBackgroundView delegate]
  -[SBFolderControllerBackgroundView currentEffectMaterialRecipeNameForHighQualityBlur:]
  -[SBFolderControllerBackgroundView isExpanding]
  -[SBFolderControllerBackgroundView setTransitionCancelled:]
  -[SBFolderControllerBackgroundView isEffectActive]
  -[SBFolderControllerBackgroundView setEffectActive:]
  -[SBFolderControllerBackgroundView setFrozen:]


SBIconGridImage : UIImage
 @property  <SBIconListLayout> *listLayout
 @property  CPMemoryPool *pool
 @property  unsigned int treatedCells
 @property  unsigned long numberOfCells
 @property  unsigned long numberOfColumns
 @property  unsigned long numberOfRows

  // class methods
  +[SBIconGridImage rectAtIndex:inLayout:maxCount:]
  +[SBIconGridImage gridImageForLayout:pool:cellImageDrawBlock:]
  +[SBIconGridImage sizeForLayout:]
  +[SBIconGridImage gridImageForLayout:cellImageDrawBlock:]
  +[SBIconGridImage numberOfRowsForNumberOfCells:inLayout:]
  +[SBIconGridImage gridImageForLayout:previousGridImage:previousGridCellIndexToUpdate:pool:cellImageDrawBlock:]

  // instance methods
  -[SBIconGridImage numberOfColumns]
  -[SBIconGridImage isIconImageTreatedAtIndex:]
  -[SBIconGridImage numberOfRows]
  -[SBIconGridImage setListLayout:]
  -[SBIconGridImage setPool:]
  -[SBIconGridImage .cxx_destruct]
  -[SBIconGridImage listLayout]
  -[SBIconGridImage setTreatedCells:]
  -[SBIconGridImage gridImageByPatchingCellAtIndex:cellImageProviderBlock:]
  -[SBIconGridImage pool]
  -[SBIconGridImage numberOfCells]
  -[SBIconGridImage iconImageAtIndex:]
  -[SBIconGridImage treatedCells]


SBHPageManagementCellViewController : UIViewController <UIGestureRecognizerDelegate, SBIconViewCustomImageViewControlling>
 @property  UIGestureRecognizer *tapGestureRecognizer
 @property  SBIconListView *listView
 @property  MTMaterialView *listBackgroundView
 @property  MTMaterialView *toggleButtonBackgroundView
 @property  SBFolder *folder
 @property  SBHPageManagementCellView *pageManagementCellView
 @property  <SBHPageManagementCellViewControllerDelegate> *delegate
 @property  BOOL scalesListView
 @property  double toggleButtonAlpha
 @property  BOOL wantsCaptureOnlyBackgroundView
 @property  @? backgroundViewProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  SBIcon *icon
 @property  <SBLeafIconDataSource> *visiblyActiveDataSource
 @property  BOOL editing
 @property  BOOL wantsEditingDisplayStyle
 @property  BOOL showingContextMenu
 @property  BOOL overlapping
 @property  BOOL dropping
 @property  BOOL userInteractionEnabled
 @property  @? backgroundViewConfigurator
 @property  BOOL forcesEdgeAntialiasing
 @property  double brightness
 @property  BOOL wantsLabelHidden
 @property  unsigned long userVisibilityStatus
 @property  BOOL automaticallyUpdatesVisiblySettled
 @property  unsigned long presentationMode
 @property  BOOL showsSnapshotWhenDeactivated
 @property  unsigned long imageViewAlignment
 @property  unsigned long pauseReasons
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *applicationShortcutItems
 @property  {UIEdgeInsets=dddd} minimumPreferredEdgeInsetsForContextMenu
 @property  UIView *snapshotView
 @property  {CGPoint=dd} snapshotViewCenter
 @property  UIView *springLoadingEffectTargetView
 @property  {SBIconApproximateLayoutPosition=QQ} approximateLayoutPosition
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds
 @property  double continuousCornerRadius
 @property  BOOL showsSquareCorners

  // instance methods
  -[SBHPageManagementCellViewController cancelGestures]
  -[SBHPageManagementCellViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[SBHPageManagementCellViewController continuousCornerRadius]
  -[SBHPageManagementCellViewController snapshotView]
  -[SBHPageManagementCellViewController .cxx_destruct]
  -[SBHPageManagementCellViewController sourceView]
  -[SBHPageManagementCellViewController setDelegate:]
  -[SBHPageManagementCellViewController iconImageInfo]
  -[SBHPageManagementCellViewController visibleBounds]
  -[SBHPageManagementCellViewController setShowsSquareCorners:]
  -[SBHPageManagementCellViewController tapGestureRecognizer]
  -[SBHPageManagementCellViewController backgroundViewProvider]
  -[SBHPageManagementCellViewController setBackgroundViewProvider:]
  -[SBHPageManagementCellViewController setEditing:]
  -[SBHPageManagementCellViewController isUserInteractionEnabled]
  -[SBHPageManagementCellViewController folder]
  -[SBHPageManagementCellViewController isEditing]
  -[SBHPageManagementCellViewController delegate]
  -[SBHPageManagementCellViewController listView]
  -[SBHPageManagementCellViewController wantsCaptureOnlyBackgroundView]
  -[SBHPageManagementCellViewController showsSquareCorners]
  -[SBHPageManagementCellViewController loadView]
  -[SBHPageManagementCellViewController setIconImageInfo:]
  -[SBHPageManagementCellViewController snapshotViewCenter]
  -[SBHPageManagementCellViewController pageManagementCellView]
  -[SBHPageManagementCellViewController setListHighlighted:]
  -[SBHPageManagementCellViewController listViewTapped:]
  -[SBHPageManagementCellViewController listBackgroundView]
  -[SBHPageManagementCellViewController toggleButtonBackgroundView]
  -[SBHPageManagementCellViewController initWithListView:listBackgroundView:toggleButtonBackgroundView:folder:metrics:toggleButtonAllowed:]
  -[SBHPageManagementCellViewController scalesListView]
  -[SBHPageManagementCellViewController setScalesListView:]
  -[SBHPageManagementCellViewController toggleButtonAlpha]
  -[SBHPageManagementCellViewController setToggleButtonAlpha:]
  -[SBHPageManagementCellViewController listHighlightView]
  -[SBHPageManagementCellViewController cleanUpListView]


SBIconLabelAccessoryView : UIView <SBIconLabelAccessoryView>
 @property  UIImage *baseImage
 @property  BOOL hasBaseline
 @property  double baselineOffsetFromBottom
 @property  {UIEdgeInsets=dddd} alignmentRectInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconLabelAccessoryView labelAccessorySystemImageName]
  +[SBIconLabelAccessoryView labelAccessorySystemImageScale]

  // instance methods
  -[SBIconLabelAccessoryView initWithCoder:]
  -[SBIconLabelAccessoryView hasBaseline]
  -[SBIconLabelAccessoryView .cxx_destruct]
  -[SBIconLabelAccessoryView setBaseImage:]
  -[SBIconLabelAccessoryView sizeThatFits:]
  -[SBIconLabelAccessoryView prepareForReuse]
  -[SBIconLabelAccessoryView alignmentRectInsets]
  -[SBIconLabelAccessoryView intrinsicContentSize]
  -[SBIconLabelAccessoryView baselineOffsetFromBottom]
  -[SBIconLabelAccessoryView baseImage]
  -[SBIconLabelAccessoryView updateWithLegibilitySettings:labelFont:]
  -[SBIconLabelAccessoryView updateWithBaseImage:legibilitySettings:]


SBIconDotLabelAccessoryView : SBIconLabelAccessoryView
  // class methods
  +[SBIconDotLabelAccessoryView _dotColor]
  +[SBIconDotLabelAccessoryView labelAccessorySystemImageName]
  +[SBIconDotLabelAccessoryView _cachedDotImage]
  +[SBIconDotLabelAccessoryView _setCachedDotImage:]
  +[SBIconDotLabelAccessoryView _vibrantColorMatrixInput]

  // instance methods
  -[SBIconDotLabelAccessoryView .cxx_destruct]
  -[SBIconDotLabelAccessoryView lastBaselineAnchor]
  -[SBIconDotLabelAccessoryView initWithFrame:]
  -[SBIconDotLabelAccessoryView firstBaselineAnchor]
  -[SBIconDotLabelAccessoryView intrinsicContentSize]
  -[SBIconDotLabelAccessoryView updateWithLegibilitySettings:labelFont:]


SBIconRecentlyUpdatedLabelAccessoryView : SBIconDotLabelAccessoryView
  // class methods
  +[SBIconRecentlyUpdatedLabelAccessoryView _dotColor]
  +[SBIconRecentlyUpdatedLabelAccessoryView _cachedDotImage]
  +[SBIconRecentlyUpdatedLabelAccessoryView _setCachedDotImage:]
  +[SBIconRecentlyUpdatedLabelAccessoryView _vibrantColorMatrixInput]


SBIconBetaLabelAccessoryView : SBIconDotLabelAccessoryView
  // class methods
  +[SBIconBetaLabelAccessoryView _dotColor]
  +[SBIconBetaLabelAccessoryView _cachedDotImage]
  +[SBIconBetaLabelAccessoryView _setCachedDotImage:]
  +[SBIconBetaLabelAccessoryView _vibrantColorMatrixInput]


SBIconLegibilityLabelAccessoryView : SBIconLabelAccessoryView
 @property  UIImageView *iconImageView

  // instance methods
  -[SBIconLegibilityLabelAccessoryView hasBaseline]
  -[SBIconLegibilityLabelAccessoryView .cxx_destruct]
  -[SBIconLegibilityLabelAccessoryView lastBaselineAnchor]
  -[SBIconLegibilityLabelAccessoryView initWithFrame:]
  -[SBIconLegibilityLabelAccessoryView firstBaselineAnchor]
  -[SBIconLegibilityLabelAccessoryView iconImageView]
  -[SBIconLegibilityLabelAccessoryView alignmentRectInsets]
  -[SBIconLegibilityLabelAccessoryView baselineOffsetFromBottom]
  -[SBIconLegibilityLabelAccessoryView updateWithLegibilitySettings:labelFont:]
  -[SBIconLegibilityLabelAccessoryView updateWithBaseImage:legibilitySettings:]


SBIconCloudLabelAccessoryView : SBIconLegibilityLabelAccessoryView
  // class methods
  +[SBIconCloudLabelAccessoryView labelAccessorySystemImageName]


SBIconBlockedForScreenTimeExpirationLabelAccessoryView : SBIconLegibilityLabelAccessoryView
  // class methods
  +[SBIconBlockedForScreenTimeExpirationLabelAccessoryView labelAccessorySystemImageName]
  +[SBIconBlockedForScreenTimeExpirationLabelAccessoryView labelAccessorySystemImageScale]


SBHLibraryCategoryPodBackgroundView : SBHVisualStylingView
  // class methods
  +[SBHLibraryCategoryPodBackgroundView visualStyleSetNameForUserInterfaceStyle:]


SBRootFolderView : SBFolderView <_UISettingsKeyObserver, SBDockViewDelegate, SBFRemoteBasebandLoggingObserver>
 @property  _SBRootFolderViewElementBorrowedAssertion *dockBorrowedAssertion
 @property  _SBRootFolderViewElementBorrowedAssertion *pageControlBorrowedAssertion
 @property  SBFTouchPassThroughView *titledButtonsContainerView
 @property  SBTitledHomeScreenButton *doneButton
 @property  SBTitledHomeScreenButton *widgetButton
 @property  BOOL sidebarSlideGestureActive
 @property  unsigned long sidebarAllowedOrientations
 @property  <SBIconListViewIconLocationTransitioning> *firstListViewIconLocationTransitionHandler
 @property  BOOL sidebarVisibleWhenScrollingBegan
 @property  double scrollingAdjustment
 @property  BOOL allowsFreeScrollingUntilScrollingEnds
 @property  SBHRootFolderSettings *folderSettings
 @property  unsigned long ignoresOverscrollOnFirstPageOrientations
 @property  unsigned long ignoresOverscrollOnLastPageOrientations
 @property  BOOL userAttemptedToOverscrollFirstPageDuringCurrentGesture
 @property  BOOL userAttemptedToOverscrollLastPageDuringCurrentGesture
 @property  UILabel *idleTextView
 @property  UIViewController<SBHRootFolderCustomViewPresenting> *leadingCustomViewController
 @property  UIViewController<SBHRootFolderCustomViewPresenting> *trailingCustomViewController
 @property  _SBRootFolderLayoutWrapperView *searchPulldownWrapperView
 @property  _SBRootFolderLayoutWrapperView *searchableLeadingCustomWrapperView
 @property  _SBRootFolderLayoutWrapperView *searchableTrailingCustomWrapperView
 @property  _SBRootFolderLayoutWrapperView *sidebarWrapperView
 @property  SBHMinusPageStepper *customPageAnimationStepper
 @property  SBDockIconListView *dockListView
 @property  <SBRootFolderViewLayoutManager> *layoutManager
 @property  <SBRootFolderViewLayoutManager> *transitioningNewSpecialLayoutManager
 @property  <SBRootFolderViewLayoutManager> *transitioningOldSpecialLayoutManager
 @property  unsigned long folderPageManagementAllowedOrientations
 @property  double leadingCustomViewPageScrollOffset
 @property  double trailingCustomViewPageScrollOffset
 @property  double maxDockHeight
 @property  long long leadingCustomViewPageIndex
 @property  long long sidebarPageIndex
 @property  long long trailingCustomViewPageIndex
 @property  BOOL hidesOffscreenCustomPageViews
 @property  BOOL shouldFadeDockOutDuringTransitionToLeadingCustomView
 @property  BOOL shouldFadePageControlOutDuringTransitionToLeadingCustomView
 @property  BOOL sidebarVisibilityGestureActive
 @property  BOOL isPageManagementUITransitioningOutOfVisible
 @property  SBHRootFolderVisualConfiguration *rootFolderVisualConfiguration
 @property  <SBRootFolderViewLayoutManager> *specialLayoutManager
 @property  <SBRootFolderViewDelegate> *delegate
 @property  SBRootFolder *folder
 @property  SBFParallaxSettings *parallaxSettings
 @property  unsigned long dockEdge
 @property  double dockHeight
 @property  BOOL dockExternal
 @property  BOOL dockPinnedForRotation
 @property  NSString *dockIconLocation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} enterEditingTouchRect
 @property  BOOL dockVisible
 @property  SBSearchGesture *searchGesture
 @property  double currentDockOffscreenFraction
 @property  SBDockView *dockView
 @property  BOOL allowsAutoscrollToLeadingCustomView
 @property  BOOL showsDoneButton
 @property  BOOL showsAddWidgetButton
 @property  double titledButtonsAlpha
 @property  UIView *leadingCustomView
 @property  UIView *sidebarView
 @property  UIView *pullDownSearchView
 @property  UIView *trailingCustomView
 @property  BOOL onLeadingCustomPage
 @property  BOOL onTrailingCustomPage
 @property  BOOL leadingCustomViewPageHidden
 @property  double sidebarVisibilityProgress
 @property  double sidebarPinned
 @property  double effectiveSidebarVisibilityProgress
 @property  BOOL sidebarEffectivelyVisible
 @property  BOOL leadingCustomViewBouncing
 @property  BOOL searchHidden
 @property  BOOL shiftsPullDownSearchForVisibility
 @property  UIView *leadingCustomViewWrapperView
 @property  SBSearchBackdropView *searchBackdropView
 @property  SBSearchBackdropView *trailingCustomBackdropView
 @property  UIView *trailingCustomSearchDimmingView
 @property  double leadingCustomViewVisibilityProgress
 @property  double trailingCustomViewVisibilityProgress
 @property  double pullDownSearchVisibilityProgress
 @property  BOOL pageManagementUIVisible
 @property  BOOL occludedByOverlay
 @property  double todayViewVisibilityProgress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBRootFolderView dockIconLocation]
  +[SBRootFolderView defaultIconLocation]
  +[SBRootFolderView sidebarVisibilityProgressAnimator]
  +[SBRootFolderView _editButtonLayoutFramesInBounds:forVisualConfiguration:withTranslationOffset:inRTL:doneButton:addWidgetButton:doneButtonFrame:addWidgetButtonFrame:]

  // instance methods
  -[SBRootFolderView setSidebarVisibilityProgress:]
  -[SBRootFolderView setSidebarPinned:]
  -[SBRootFolderView allowsAutoscrollToLeadingCustomView]
  -[SBRootFolderView enterPageManagementUIWithCompletionHandler:]
  -[SBRootFolderView isOnLeadingCustomPage]
  -[SBRootFolderView isSidebarVisibilityGestureActive]
  -[SBRootFolderView iconLocationForListsWithNonDefaultSizedIcons]
  -[SBRootFolderView _reduceMotionStatusDidChange:]
  -[SBRootFolderView isSidebarPinned]
  -[SBRootFolderView dockView]
  -[SBRootFolderView dockIconLocation]
  -[SBRootFolderView updateIconListViews]
  -[SBRootFolderView leadingCustomViewController]
  -[SBRootFolderView sidebarVisibilityProgress]
  -[SBRootFolderView isOccludedByOverlay]
  -[SBRootFolderView exitPageManagementUIWithCompletionHandler:]
  -[SBRootFolderView isDockVisible]
  -[SBRootFolderView updateAccessibilityTintColors]
  -[SBRootFolderView searchBackdropView]
  -[SBRootFolderView trailingCustomViewPageIndex]
  -[SBRootFolderView _doPageManagementEducation]
  -[SBRootFolderView isLeadingCustomViewBouncing]
  -[SBRootFolderView effectiveSidebarVisibilityProgress]
  -[SBRootFolderView borrowDockViewForReason:]
  -[SBRootFolderView isLeadingCustomViewPageHidden]
  -[SBRootFolderView setIdleText:]
  -[SBRootFolderView newDockBackgroundView]
  -[SBRootFolderView setFolderSettings:]
  -[SBRootFolderView showsAddWidgetButton]
  -[SBRootFolderView isSidebarEffectivelyVisible]
  -[SBRootFolderView sidebarPageIndex]
  -[SBRootFolderView trailingCustomViewPageScrollOffsetUsingPageWidth:]
  -[SBRootFolderView remoteBasebandLogCollectionStateDidChange:]
  -[SBRootFolderView setLeadingCustomViewPageHidden:]
  -[SBRootFolderView minimumHomeScreenScaleForDockView:]
  -[SBRootFolderView maxDockHeight]
  -[SBRootFolderView setSearchGesture:]
  -[SBRootFolderView rootWithWidgetsListLayout]
  -[SBRootFolderView setOccludedByOverlay:]
  -[SBRootFolderView shouldFadePageControlOutDuringTransitionToLeadingCustomView]
  -[SBRootFolderView specialLayoutManager]
  -[SBRootFolderView pullDownSearchVisibilityProgress]
  -[SBRootFolderView _shouldIgnoreOverscrollOnFirstPageForOrientation:]
  -[SBRootFolderView leadingCustomView]
  -[SBRootFolderView _setupTrailingCustomBackdropViewIfNecessary]
  -[SBRootFolderView shouldFadeDockOutDuringTransitionToLeadingCustomView]
  -[SBRootFolderView isPageManagementUITransitioningOutOfVisible]
  -[SBRootFolderView setTitledButtonsContainerView:]
  -[SBRootFolderView enumerateScrollViewPageViewsUsingBlock:]
  -[SBRootFolderView isSidebarSlideGestureActive]
  -[SBRootFolderView searchableLeadingCustomWrapperView]
  -[SBRootFolderView trailingCustomViewVisibilityProgress]
  -[SBRootFolderView leadingCustomViewWrapperView]
  -[SBRootFolderView _spotlightFirstIconRowOffset]
  -[SBRootFolderView setSearchHidden:]
  -[SBRootFolderView setSidebarSlideGestureActive:]
  -[SBRootFolderView setSidebarVisibilityProgress:animator:]
  -[SBRootFolderView _shouldIgnoreOverscrollOnLastPageForOrientation:]
  -[SBRootFolderView trailingCustomViewController]
  -[SBRootFolderView leadingCustomViewVisibilityProgress]
  -[SBRootFolderView leadingCustomViewPageIndex]
  -[SBRootFolderView isDockPinnedForRotation]
  -[SBRootFolderView searchGesture]
  -[SBRootFolderView iconLocationForList:]
  -[SBRootFolderView scrollableWidthForVisibleColumnRange]
  -[SBRootFolderView folderSettings]
  -[SBRootFolderView _scrollView:adjustedOffsetForOffset:translation:startPoint:locationInView:horizontalVelocity:verticalVelocity:]
  -[SBRootFolderView hitTest:withEvent:]
  -[SBRootFolderView setOrientation:]
  -[SBRootFolderView cleanUpAfterTransition]
  -[SBRootFolderView resetIconListViews]
  -[SBRootFolderView _setupStateDumper]
  -[SBRootFolderView _pageCountForPageControl]
  -[SBRootFolderView leadingCustomViewPageScrollOffset]
  -[SBRootFolderView iconScrollView:shouldSetAutoscrollContentOffset:]
  -[SBRootFolderView statusBarInsetsForDockEdge:]
  -[SBRootFolderView _updateScrollingState:]
  -[SBRootFolderView iconScrollView:shouldSetContentOffset:animated:]
  -[SBRootFolderView _adjustLeadingCustomContentForEdgeBounce]
  -[SBRootFolderView _updateParallaxSettings]
  -[SBRootFolderView _layoutSubviewsForLeadingCustomViewWithMetrics:]
  -[SBRootFolderView transitionToSize:withTransitionCoordinator:]
  -[SBRootFolderView dockEdge]
  -[SBRootFolderView searchableTrailingCustomWrapperView]
  -[SBRootFolderView _leadingCustomViewShouldBeIndicatedInPageControl]
  -[SBRootFolderView trailingCustomBackdropView]
  -[SBRootFolderView layoutManager]
  -[SBRootFolderView _trailingCustomPageCount]
  -[SBRootFolderView tearDownListViews]
  -[SBRootFolderView setContentAlpha:]
  -[SBRootFolderView _isSidebarEnabledForOrientation:]
  -[SBRootFolderView _setSidebarViewHidden:]
  -[SBRootFolderView _scrollOffsetForPageAtIndex:pageWidth:]
  -[SBRootFolderView ignoresOverscrollOnFirstPageOrientations]
  -[SBRootFolderView _updatePageControlToIndex:]
  -[SBRootFolderView folderDidChange]
  -[SBRootFolderView _layoutSubviews]
  -[SBRootFolderView _animateViewsForPullingToSearch]
  -[SBRootFolderView prepareForTransition]
  -[SBRootFolderView _leadingCustomPageCount]
  -[SBRootFolderView _createIconListViewForList:]
  -[SBRootFolderView _currentPageIndexDidChangeFromPageIndex:]
  -[SBRootFolderView newHomeScreenButtonBackgroundView]
  -[SBRootFolderView _pageWidth]
  -[SBRootFolderView _cleanupAfterExtraScrollGesturesCompleted]
  -[SBRootFolderView _shouldIgnoreOverscrollOnLastPageForCurrentOrientation]
  -[SBRootFolderView clientDidChangeDockOffScreenFraction:]
  -[SBRootFolderView setFirstListViewIconLocationTransitionHandler:]
  -[SBRootFolderView parallaxSettings]
  -[SBRootFolderView setUserAttemptedToOverscrollLastPageDuringCurrentGesture:]
  -[SBRootFolderView updateIconListIndexAndVisibility:]
  -[SBRootFolderView _updateEditingStateAnimated:]
  -[SBRootFolderView _iconListFrameForPageRect:atIndex:]
  -[SBRootFolderView getMetrics:]
  -[SBRootFolderView additionalIconListViews]
  -[SBRootFolderView isOnSidebarPage]
  -[SBRootFolderView iconScrollViewDidCancelTouchTracking:]
  -[SBRootFolderView _updateIconListLegibilitySettings]
  -[SBRootFolderView _willScrollToPageIndex:animated:]
  -[SBRootFolderView additionalScrollWidthToKeepVisibleInOneDirection]
  -[SBRootFolderView _scrollOffsetForContentAtPageIndex:]
  -[SBRootFolderView didMoveToSuperview]
  -[SBRootFolderView _sidebarScrollPanGestureRecognizerDidUpdate:]
  -[SBRootFolderView sidebarView]
  -[SBRootFolderView pageControlDidReceiveButtonTap:]
  -[SBRootFolderView setEditing:animated:]
  -[SBRootFolderView _checkSidebarVisibilityProgressAfterScroll]
  -[SBRootFolderView willMoveToWindow:]
  -[SBRootFolderView _setupTrailingCustomDimmingViewIfNecessary]
  -[SBRootFolderView currentDockOffscreenFraction]
  -[SBRootFolderView isPageIndexCustomAndRightmost:]
  -[SBRootFolderView wasSidebarVisibleWhenScrollingBegan]
  -[SBRootFolderView setPageControlAlpha:]
  -[SBRootFolderView setDockEdge:]
  -[SBRootFolderView configurePageControlToAllowEnteringPageManagement:]
  -[SBRootFolderView layoutSearchableViewsWithMetrics:]
  -[SBRootFolderView leadingCustomViewPageScrollOffsetUsingPageWidth:]
  -[SBRootFolderView rootFolderVisualConfiguration]
  -[SBRootFolderView iconListViewForIconListModelIndex:]
  -[SBRootFolderView ignoresOverscrollOnLastPageOrientations]
  -[SBRootFolderView scrollingAdjustment]
  -[SBRootFolderView .cxx_destruct]
  -[SBRootFolderView scrollViewDidEndScrollingAnimation:]
  -[SBRootFolderView _scaledBoundsForMinimumHomeScreenScale]
  -[SBRootFolderView setSpecialLayoutManager:completionHandler:]
  -[SBRootFolderView hidesOffscreenCustomPageViews]
  -[SBRootFolderView userAttemptedToOverscrollLastPageDuringCurrentGesture]
  -[SBRootFolderView minimumHomeScreenScaleDidChange]
  -[SBRootFolderView _isSidebarCollapsed]
  -[SBRootFolderView _animateViewsForScrollingToLeadingOrTrailingCustomViewWithMetrics:]
  -[SBRootFolderView isDockViewBorrowed]
  -[SBRootFolderView iconListViewAtIndex:]
  -[SBRootFolderView _updateDockOffscreenFractionWithMetrics:]
  -[SBRootFolderView setScrollingAdjustment:]
  -[SBRootFolderView _cleanUpAfterScrolling]
  -[SBRootFolderView scrollViewHeightIncludesPageControlAndDock]
  -[SBRootFolderView setLegibilitySettings:]
  -[SBRootFolderView doneButton]
  -[SBRootFolderView setDelegate:]
  -[SBRootFolderView customPageAnimationStepper]
  -[SBRootFolderView shouldEndSidebarGestureWithSidebarVisibleWithCurrentProgress:velocity:]
  -[SBRootFolderView searchPulldownWrapperView]
  -[SBRootFolderView makeTitledButtonOfClass:]
  -[SBRootFolderView scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBRootFolderView setShowsDoneButton:]
  -[SBRootFolderView isDockExternal]
  -[SBRootFolderView newDockBackgroundMaterialViewWithInitialWeighting:]
  -[SBRootFolderView isModifyingDockOffscreenFraction]
  -[SBRootFolderView setSidebarVisibleWhenScrollingBegan:]
  -[SBRootFolderView setTransitioningNewSpecialLayoutManager:]
  -[SBRootFolderView trailingCustomViewPageScrollOffset]
  -[SBRootFolderView descriptionBuilderWithMultilinePrefix:]
  -[SBRootFolderView _isSidebarEnabledForCurrentPage]
  -[SBRootFolderView setDoneButton:]
  -[SBRootFolderView titledButtonsContainerView]
  -[SBRootFolderView dockHeight]
  -[SBRootFolderView iconListViewAtPoint:]
  -[SBRootFolderView _minimumHomeScreenScale]
  -[SBRootFolderView _setupSearchBackdropViewIfNecessary]
  -[SBRootFolderView _updateSidebarViewHidden]
  -[SBRootFolderView isSearchHidden]
  -[SBRootFolderView scrollViewDidEndDragging:willDecelerate:]
  -[SBRootFolderView prepareToTearDown]
  -[SBRootFolderView firstListViewIconLocationTransitionHandler]
  -[SBRootFolderView pullDownSearchView]
  -[SBRootFolderView setNeedsLayout]
  -[SBRootFolderView elementBorrowedAssertionDidInvalidate:]
  -[SBRootFolderView setTrailingCustomViewVisibilityProgress:]
  -[SBRootFolderView shouldScrollDockDuringTransitionToLeadingCustomView]
  -[SBRootFolderView transitioningOldSpecialLayoutManager]
  -[SBRootFolderView setAllowsAutoscrollToLeadingCustomView:]
  -[SBRootFolderView externalDockPageControlVerticalMargin]
  -[SBRootFolderView layoutPageControlWithMetrics:]
  -[SBRootFolderView setTodayViewVisibilityProgress:]
  -[SBRootFolderView userAttemptedToOverscrollFirstPageDuringCurrentGesture]
  -[SBRootFolderView doneButtonTriggered:]
  -[SBRootFolderView _updateDockBackgroundViewForOcclusionByOverlay]
  -[SBRootFolderView widgetButton]
  -[SBRootFolderView trailingCustomSearchDimmingView]
  -[SBRootFolderView titledButtonsAlpha]
  -[SBRootFolderView _resetSearchScrollTrackingState]
  -[SBRootFolderView enterEditingTouchRect]
  -[SBRootFolderView setLeadingCustomViewVisibilityProgress:]
  -[SBRootFolderView returnScalingView]
  -[SBRootFolderView updateConfigurationOfPageControlToAllowEnteringPageManagement]
  -[SBRootFolderView _shouldIgnoreOverscrollOnFirstPageForCurrentOrientation]
  -[SBRootFolderView shiftsPullDownSearchForVisibility]
  -[SBRootFolderView sidebarWidthUsingPageWidth:]
  -[SBRootFolderView folderPageManagementAllowedOrientations]
  -[SBRootFolderView setPageControlBorrowedAssertion:]
  -[SBRootFolderView _isSidebarEnabledForPageIndex:]
  -[SBRootFolderView _animateViewsForPullingToSearchWithMetrics:]
  -[SBRootFolderView sidebarWrapperView]
  -[SBRootFolderView scrollViewWillBeginDragging:]
  -[SBRootFolderView showsDoneButton]
  -[SBRootFolderView _isSidebarEnabledForPageIndex:orientation:]
  -[SBRootFolderView initWithConfiguration:]
  -[SBRootFolderView _isSidebarEnabledForIconListIndex:orientation:]
  -[SBRootFolderView _layoutSubviewsForPulldownSearch]
  -[SBRootFolderView _statusBarInsetsForDockEdge:dockOffscreenPercentage:]
  -[SBRootFolderView setShowsAddWidgetButton:]
  -[SBRootFolderView noteSidebarFinishedAnimating]
  -[SBRootFolderView trailingCustomView]
  -[SBRootFolderView folder:didAddIcons:removedIcons:]
  -[SBRootFolderView noteSidebarIsAnimating]
  -[SBRootFolderView shouldScrollPageControlDuringTransitionToLeadingCustomView]
  -[SBRootFolderView _layoutSubviewsForTrailingCustomViewWithMetrics:]
  -[SBRootFolderView _scrollViewFrameForDockEdge:]
  -[SBRootFolderView accessibilityTintColorForDockView:]
  -[SBRootFolderView internalDockPageControlVerticalMargin]
  -[SBRootFolderView setShiftsPullDownSearchForVisibility:]
  -[SBRootFolderView setTransitioningOldSpecialLayoutManager:]
  -[SBRootFolderView pageControlBorrowedAssertion]
  -[SBRootFolderView shouldPinScrollingToFirstOrLastPageScrollOffsetForProposedScrollOffset:]
  -[SBRootFolderView transitioningNewSpecialLayoutManager]
  -[SBRootFolderView settings:changedValueForKey:]
  -[SBRootFolderView setWidgetButton:]
  -[SBRootFolderView _trailingCustomViewShouldBeIndicatedInPageControl]
  -[SBRootFolderView idleTextView]
  -[SBRootFolderView setAllowsFreeScrollingUntilScrollingEnds:]
  -[SBRootFolderView setSidebarEffectivelyVisible:]
  -[SBRootFolderView _cleanUpAfterOverscrollScrollGestureEnded:]
  -[SBRootFolderView widgetButtonTriggered:]
  -[SBRootFolderView getMetrics:dockEdge:]
  -[SBRootFolderView setShowsAddWidgetButton:animated:]
  -[SBRootFolderView _overscrollScrollPanGestureRecognizerDidUpdate:]
  -[SBRootFolderView layoutDockViewWithMetrics:]
  -[SBRootFolderView dealloc]
  -[SBRootFolderView isOnTrailingCustomPage]
  -[SBRootFolderView setLeadingCustomViewBouncing:]
  -[SBRootFolderView removeDockOffscreenFractionClient:]
  -[SBRootFolderView fadeContentForMinificationFraction:]
  -[SBRootFolderView sidebarVisibilityProgressForLayout]
  -[SBRootFolderView allowsFreeScrollingUntilScrollingEnds]
  -[SBRootFolderView setPullDownSearchVisibilityProgress:]
  -[SBRootFolderView sidebarViewPageScrollOffsetUsingPageWidth:]
  -[SBRootFolderView layoutSearchableViews]
  -[SBRootFolderView dockListView]
  -[SBRootFolderView beginModifyingDockOffscreenFractionForReason:]
  -[SBRootFolderView _captureInitialSearchScrollTrackingState]
  -[SBRootFolderView _layoutSubviewsForSidebarWithMetrics:]
  -[SBRootFolderView dockBorrowedAssertion]
  -[SBRootFolderView iconListViewForExtraIndex:]
  -[SBRootFolderView sidebarAllowedOrientations]
  -[SBRootFolderView todayViewVisibilityProgress]
  -[SBRootFolderView _cleanupAfterSidebarSlideGestureCompleted:]
  -[SBRootFolderView _sidebarVisibilityProgressForPanGestureRecognizer:presenting:]
  -[SBRootFolderView isPageControlBorrowed]
  -[SBRootFolderView setDockBorrowedAssertion:]
  -[SBRootFolderView _animateViewsForScrollingToLeadingOrTrailingCustomView]
  -[SBRootFolderView _shouldHideSidebarView]
  -[SBRootFolderView setSpecialLayoutManager:]
  -[SBRootFolderView isPageManagementUIVisible]
  -[SBRootFolderView _setupIdleTextPrivacyDisclosures]
  -[SBRootFolderView rootListLayout]
  -[SBRootFolderView updateDockViewOrientation]
  -[SBRootFolderView setShowsDoneButton:animated:]
  -[SBRootFolderView _prepareSidebarViewForOrientationTransition]
  -[SBRootFolderView setUserAttemptedToOverscrollFirstPageDuringCurrentGesture:]
  -[SBRootFolderView setContentVisibility:]
  -[SBRootFolderView scrollViewDidEndDecelerating:]
  -[SBRootFolderView setTitledButtonsAlpha:]
  -[SBRootFolderView _updateDockViewZOrdering]
  -[SBRootFolderView borrowPageControlForReason:]
  -[SBRootFolderView layoutIconListsWithAnimationType:forceRelayout:]
  -[SBRootFolderView _isSidebarEnabledForCurrentOrientation]
  -[SBRootFolderView _updateIconListIndexSearchableAndLeadingCustomViewsWithLayout:]


_SBRootFolderLayoutWrapperView : UIView
 @property  double statusBarHeightAdjustment
 @property  double headerOffset
 @property  {CGSize=dd} extendedSize
 @property  UIView *wrappedView

  // instance methods
  -[_SBRootFolderLayoutWrapperView _updateLayout]
  -[_SBRootFolderLayoutWrapperView setWrappedView:]
  -[_SBRootFolderLayoutWrapperView setExtendedSize:]
  -[_SBRootFolderLayoutWrapperView setStatusBarHeightAdjustment:]
  -[_SBRootFolderLayoutWrapperView headerOffset]
  -[_SBRootFolderLayoutWrapperView .cxx_destruct]
  -[_SBRootFolderLayoutWrapperView layoutSubviews]
  -[_SBRootFolderLayoutWrapperView succinctDescriptionBuilder]
  -[_SBRootFolderLayoutWrapperView descriptionBuilderWithMultilinePrefix:]
  -[_SBRootFolderLayoutWrapperView descriptionWithMultilinePrefix:]
  -[_SBRootFolderLayoutWrapperView statusBarHeightAdjustment]
  -[_SBRootFolderLayoutWrapperView extendedSize]
  -[_SBRootFolderLayoutWrapperView succinctDescription]
  -[_SBRootFolderLayoutWrapperView setHeaderOffset:]
  -[_SBRootFolderLayoutWrapperView wrappedView]


_SBRootFolderDockOffscreenFractionClient : NSObject <SBDockOffscreenFractionModifying, BSDescriptionProviding>
 @property  SBRootFolderView *folderView
 @property  double desiredOffscreenFraction
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBRootFolderDockOffscreenFractionClient .cxx_destruct]
  -[_SBRootFolderDockOffscreenFractionClient setDesiredOffscreenFraction:]
  -[_SBRootFolderDockOffscreenFractionClient succinctDescriptionBuilder]
  -[_SBRootFolderDockOffscreenFractionClient layoutIfNeededForDockOffscreenFractionChanged]
  -[_SBRootFolderDockOffscreenFractionClient descriptionBuilderWithMultilinePrefix:]
  -[_SBRootFolderDockOffscreenFractionClient descriptionWithMultilinePrefix:]
  -[_SBRootFolderDockOffscreenFractionClient setDockOffscreenFraction:]
  -[_SBRootFolderDockOffscreenFractionClient succinctDescription]
  -[_SBRootFolderDockOffscreenFractionClient reason]
  -[_SBRootFolderDockOffscreenFractionClient setFolderView:]
  -[_SBRootFolderDockOffscreenFractionClient dealloc]
  -[_SBRootFolderDockOffscreenFractionClient initWithFolderView:reason:]
  -[_SBRootFolderDockOffscreenFractionClient invalidate]
  -[_SBRootFolderDockOffscreenFractionClient desiredOffscreenFraction]
  -[_SBRootFolderDockOffscreenFractionClient folderView]


_SBRootFolderViewElementBorrowedAssertion : NSObject <BSInvalidatable, BSDescriptionProviding>
 @property  SBRootFolderView *folderView
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBRootFolderViewElementBorrowedAssertion .cxx_destruct]
  -[_SBRootFolderViewElementBorrowedAssertion succinctDescriptionBuilder]
  -[_SBRootFolderViewElementBorrowedAssertion descriptionBuilderWithMultilinePrefix:]
  -[_SBRootFolderViewElementBorrowedAssertion descriptionWithMultilinePrefix:]
  -[_SBRootFolderViewElementBorrowedAssertion succinctDescription]
  -[_SBRootFolderViewElementBorrowedAssertion reason]
  -[_SBRootFolderViewElementBorrowedAssertion setFolderView:]
  -[_SBRootFolderViewElementBorrowedAssertion dealloc]
  -[_SBRootFolderViewElementBorrowedAssertion initWithFolderView:reason:]
  -[_SBRootFolderViewElementBorrowedAssertion invalidate]
  -[_SBRootFolderViewElementBorrowedAssertion folderView]


SBHSidebarVisualConfiguration : NSObject <NSCopying, BSDescriptionProviding>
 @property  double contentWidth
 @property  double searchBarTopOffset
 @property  double firstWidgetTopOffset
 @property  BOOL contentFullscreen
 @property  {NSDirectionalEdgeInsets=dddd} insets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHSidebarVisualConfiguration firstWidgetTopOffset]
  -[SBHSidebarVisualConfiguration setInsets:]
  -[SBHSidebarVisualConfiguration setContentWidth:]
  -[SBHSidebarVisualConfiguration succinctDescriptionBuilder]
  -[SBHSidebarVisualConfiguration effectiveContentWidthWithContainerWidth:]
  -[SBHSidebarVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHSidebarVisualConfiguration init]
  -[SBHSidebarVisualConfiguration isEqual:]
  -[SBHSidebarVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHSidebarVisualConfiguration setContentFullscreen:]
  -[SBHSidebarVisualConfiguration succinctDescription]
  -[SBHSidebarVisualConfiguration searchBarTopOffset]
  -[SBHSidebarVisualConfiguration insets]
  -[SBHSidebarVisualConfiguration setSearchBarTopOffset:]
  -[SBHSidebarVisualConfiguration copyWithZone:]
  -[SBHSidebarVisualConfiguration isContentFullscreen]
  -[SBHSidebarVisualConfiguration setFirstWidgetTopOffset:]
  -[SBHSidebarVisualConfiguration contentWidth]


SBIconDragManager : NSObject <SBIconListViewDragObserver, SBHIconDragAutoScrollAssistantDelegate>
 @property  SBIconDraggingEditContext *draggingEditContext
 @property  <SBIconDragManagerDelegate> *delegate
 @property  BOOL iconDragging
 @property  BOOL trackingMultipleIconDrags
 @property  BOOL trackingMultipleItemIconDrags
 @property  BOOL trackingUserActiveIconDrags
 @property  BOOL trackingDroppingIconDrags
 @property  BOOL trackingActiveOrDroppingIconDrags
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconDragManager cancelAllDrags]
  +[SBIconDragManager enumerateMedusaPlatterDragPreviewsInDragItems:usingBlock:]
  +[SBIconDragManager enumerateAppDragContextsInDragItems:usingBlock:]

  // instance methods
  -[SBIconDragManager iconListView:iconDropSessionDidEnd:]
  -[SBIconDragManager iconView:willUsePreviewForCancelling:targetIconView:]
  -[SBIconDragManager cancelAllDrags]
  -[SBIconDragManager iconView:willAnimateDragLiftWithAnimator:session:]
  -[SBIconDragManager iconView:dragPreviewForItem:session:previewParameters:]
  -[SBIconDragManager iconView:willAddDragItems:toSession:]
  -[SBIconDragManager iconView:didEndDragSession:withOperation:]
  -[SBIconDragManager iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBIconDragManager iconView:dragLiftAnimationDidChangeDirection:]
  -[SBIconDragManager isRootFolderContentVisible]
  -[SBIconDragManager isIconDragging]
  -[SBIconDragManager iconListViewForIndexPath:]
  -[SBIconDragManager iconViewWillCancelDrag:]
  -[SBIconDragManager iconView:canAddDragItemsToSession:]
  -[SBIconDragManager iconViewWillBeginDrag:session:]
  -[SBIconDragManager iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBIconDragManager _updateDragPreviewIconViewForDropSession:inIconListView:]
  -[SBIconDragManager iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBIconDragManager iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBIconDragManager noteFolderControllerWillClose:]
  -[SBIconDragManager iconViewCanBeginDrags:]
  -[SBIconDragManager canMakeIconViewRecipient:]
  -[SBIconDragManager iconListView:iconViewForDroppingIconDragItem:proposedIconView:]
  -[SBIconDragManager _stopTrackingDragIfPossibleWithIdentifier:]
  -[SBIconDragManager leafIconsInList:matchingApplicationBundleIdentifierOfIcons:]
  -[SBIconDragManager enumerateIconDragContextsUsingBlock:]
  -[SBIconDragManager defaultIconLayoutAnimationDuration]
  -[SBIconDragManager revertActiveDragChanges]
  -[SBIconDragManager compactAndLayoutRootIconLists]
  -[SBIconDragManager removeEmptyFolders]
  -[SBIconDragManager isTrackingMultipleItemIconDrags]
  -[SBIconDragManager watchdogTimerDidFire:]
  -[SBIconDragManager isTrackingDragInUserActiveLiftPreviewOriginatingFromIconView:]
  -[SBIconDragManager setIndexPath:whenRevertingIconsWithPathPrefix:]
  -[SBIconDragManager iconDropSessionDidEnd:identifier:draggedIconIdentifiers:]
  -[SBIconDragManager performSpringLoadedInteractionForIconDragOnIconView:]
  -[SBIconDragManager cancelEditingAndAllDrags]
  -[SBIconDragManager noteDragItemWasConsumedExternallyForDropSession:]
  -[SBIconDragManager removeAllDragPlaceholders]
  -[SBIconDragManager _startTrackingDragWithIdentifier:session:]
  -[SBIconDragManager .cxx_destruct]
  -[SBIconDragManager removeDragPlaceholdersForDragWithIdentifier:placeholderPath:]
  -[SBIconDragManager isTrackingDragOfIcon:]
  -[SBIconDragManager simulateIconDropSessionWithIdentifier:didEnterWithIconIdentifiers:inIconListView:]
  -[SBIconDragManager revertLocationsForUnplacedIconsInDragWithIdentifier:]
  -[SBIconDragManager shouldBeginEditingWhenAddingDragItems]
  -[SBIconDragManager noteFolderBeganScrolling]
  -[SBIconDragManager doesIconLocationRepresentRealIconPosition:]
  -[SBIconDragManager stopTrackingDragLocationForEditingForDragWithIdentifier:]
  -[SBIconDragManager isTrackingDragMatchingPredicate:]
  -[SBIconDragManager noteIconTapped]
  -[SBIconDragManager draggedItemIdentifiersForDragDropSession:]
  -[SBIconDragManager succinctDescriptionBuilder]
  -[SBIconDragManager addAppLocalContextsFromDragItems:session:toDragWithIdentifier:]
  -[SBIconDragManager countOfTrackedDragsOriginatingFromOrDroppingIntoIconView:]
  -[SBIconDragManager isTrackingDragOriginatingFromOrDroppingIntoIconView:otherThanDragWithIdentifier:]
  -[SBIconDragManager simulateDragStartedFromIconView:]
  -[SBIconDragManager simulateIconDragWithIdentifier:didPauseAtLocation:inIconListView:]
  -[SBIconDragManager setDelegate:]
  -[SBIconDragManager firstHiddenIconIdentifierInDrag:]
  -[SBIconDragManager shouldUseGhostIconForIconView:]
  -[SBIconDragManager removeDragPlaceholdersForDragWithIdentifier:]
  -[SBIconDragManager shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBIconDragManager changeStateOfDragWithIdentifier:toState:]
  -[SBIconDragManager replaceAllBouncedIconsInContext:]
  -[SBIconDragManager informQuickActionPlatterDidFinishPresentation:]
  -[SBIconDragManager leafIconForIdentifier:]
  -[SBIconDragManager addPlatterViewToMedusaDragOffscreenWindow:]
  -[SBIconDragManager _invalidateAutoScrollAssistant]
  -[SBIconDragManager captureInitialIconStateToDragContext:]
  -[SBIconDragManager removePlatterViewFromMedusaDragOffscreenWindow:]
  -[SBIconDragManager descriptionBuilderWithMultilinePrefix:]
  -[SBIconDragManager init]
  -[SBIconDragManager resetWatchdogTimerForDragWithIdentifier:timeout:]
  -[SBIconDragManager revertLocationsForIconsInList:dragIdentifier:]
  -[SBIconDragManager removeNearestLeafIconsMatchingIcons:inList:dragContext:]
  -[SBIconDragManager replaceDragPlaceholdersWithReferencedIconsInDragWithIdentifier:]
  -[SBIconDragManager delayAfterAfterLiftPreviewToBeginEditing]
  -[SBIconDragManager simulateIconDropSessionDidEnterWithIconIdentifiers:inIconListView:]
  -[SBIconDragManager updateExistingIconPlaceholderForDragWithIdentifier:]
  -[SBIconDragManager descriptionWithMultilinePrefix:]
  -[SBIconDragManager iconDropSessionDidEnd:]
  -[SBIconDragManager succinctDescription]
  -[SBIconDragManager canAcceptDropInSession:inIconListView:]
  -[SBIconDragManager enumerateIconDragIdentifiersUsingBlock:]
  -[SBIconDragManager draggedIconForIdentifier:]
  -[SBIconDragManager rootFolder]
  -[SBIconDragManager shouldCancelDragsWhenEditingEnds]
  -[SBIconDragManager setDraggingEditContext:]
  -[SBIconDragManager compactAndLayoutRootIconListsWithDuration:]
  -[SBIconDragManager isTrackingActiveOrDroppingIconDrags]
  -[SBIconDragManager _iconViewForDragItem:inIconListView:]
  -[SBIconDragManager isTrackingDragOriginatingFromIconView:]
  -[SBIconDragManager startTrackingDragLocationForEditingFromDropSession:orDragSession:]
  -[SBIconDragManager _isTrackingDrag:]
  -[SBIconDragManager _updateDragPreviewsForEditingState:animated:]
  -[SBIconDragManager iconDragContextForDropSession:]
  -[SBIconDragManager model]
  -[SBIconDragManager isTrackingDropIntoDestinationIconView:]
  -[SBIconDragManager replaceDragPlaceholderWithReferencedIcons:]
  -[SBIconDragManager uniqueIdentifierForIconDropSession:]
  -[SBIconDragManager concludeIconDrop:]
  -[SBIconDragManager isTrackingUserActiveIconDrags]
  -[SBIconDragManager revertLocationsForIconsInAllListsForDragWithIdentifier:]
  -[SBIconDragManager isTrackingUserActiveDragOriginatingFromIconView:]
  -[SBIconDragManager _handleScaleAdjustmentForDropSession:currentListView:]
  -[SBIconDragManager isEditing]
  -[SBIconDragManager delegate]
  -[SBIconDragManager isTrackingWidgetIconDrags]
  -[SBIconDragManager isTrackingWidgetStackIconDrags]
  -[SBIconDragManager iconListView:concludeIconDrop:]
  -[SBIconDragManager revertLocationsForIcons:dragIdentifier:]
  -[SBIconDragManager draggedIconsForIdentifiers:]
  -[SBIconDragManager revertDragChangesForDragWithIdentifier:]
  -[SBIconDragManager autoScrollAssistant:triggeredAutoScrollInDirection:]
  -[SBIconDragManager iconDragContextForDragWithIdentifier:]
  -[SBIconDragManager iconView:item:willAnimateDragCancelWithAnimator:]
  -[SBIconDragManager removeEmptyFoldersInFolder:]
  -[SBIconDragManager replaceAllDragPlaceholdersWithReferencedIcons]
  -[SBIconDragManager shouldBeginEditingWhenDragBegins]
  -[SBIconDragManager watchdogDragWithIdentifier:]
  -[SBIconDragManager _replaceDraggedIconViewWithPlaceholder:]
  -[SBIconDragManager iconDropSessionDidEnter:identifier:draggedIconIdentifiers:inIconListView:]
  -[SBIconDragManager _updateAutoScrollAssistantForDropSession:]
  -[SBIconDragManager revertLocationForIcon:toPath:]
  -[SBIconDragManager _iconForDragItem:inIconListView:]
  -[SBIconDragManager shouldBeginEditingWhenLiftPreviewBegins]
  -[SBIconDragManager canHandleIconDropSession:inIconListView:]
  -[SBIconDragManager iconDropSessionWithIdentifier:draggedIconIdentifiers:didPauseAtLocation:inIconListView:]
  -[SBIconDragManager removeAllGrabbedIconViews]
  -[SBIconDragManager isTrackingDroppingIconDrags]
  -[SBIconDragManager _cleanUpAllDraggingState]
  -[SBIconDragManager _shouldPerformRippleAnimationForInsertingDragItem:toIconListView:]
  -[SBIconDragManager simulatePerformIconDropWithIdentifier:inIconListView:]
  -[SBIconDragManager _isTrackingDragWithIdentifier:]
  -[SBIconDragManager iconDropSession:didPauseAtLocation:inIconListView:]
  -[SBIconDragManager iconDropSessionDidEnter:inIconListView:]
  -[SBIconDragManager noteIconManagerEditingDidChange]
  -[SBIconDragManager iconDropSessionDidExit:fromIconListView:]
  -[SBIconDragManager iconDropSessionDidExitWithIdentifier:fromIconListView:]
  -[SBIconDragManager draggingEditContext]
  -[SBIconDragManager isTrackingMultipleIconDrags]
  -[SBIconDragManager performIconDrop:inIconListView:]
  -[SBIconDragManager iconDragContextForDragSession:]
  -[SBIconDragManager appDragLocalContextForDragItem:]
  -[SBIconDragManager removeAllDragPlaceholdersInFolder:passingTest:]
  -[SBIconDragManager swapTrackedIconWithIdentifier:withIcon:]
  -[SBIconDragManager listGridCellInfoOptions]
  -[SBIconDragManager createIconsFromDragItemsIfNecessary:withDragIdentifier:]
  -[SBIconDragManager iconIdentifierForDragItem:]
  -[SBIconDragManager performIconDrop:identifier:draggedIconIdentifiers:inIconListView:]
  -[SBIconDragManager allDragIdentifiers]
  -[SBIconDragManager _windowForDragPreviews]
  -[SBIconDragManager revertLocationForIcon:toGridPath:]
  -[SBIconDragManager doesIconViewRepresentRealIconPosition:]
  -[SBIconDragManager uniqueIdentifierForIconDragSession:]
  -[SBIconDragManager maximumAllowedIconDroppingAnimationsForListView:]
  -[SBIconDragManager isTrackingActiveDragOfIcon:]
  -[SBIconDragManager _stopTrackingDragWithIdentifier:]
  -[SBIconDragManager simulateIconDraggingEndedWithIdentifier:]
  -[SBIconDragManager iconDropSessionDidUpdate:inIconListView:]
  -[SBIconDragManager fullIndexPathForRevertingIcon:context:]
  -[SBIconDragManager iconView:session:willEndWithOperation:]
  -[SBIconDragManager layoutIconListsWithAnimationType:forceRelayout:]
  -[SBIconDragManager iconDragContextForDragItem:]
  -[SBIconDragManager iconDragContextForDragDropSession:]


SBIconDraggingEditContext : NSObject
 @property  id draggingUniqueIdentifier
 @property  {CGPoint=dd} enteredScreenLocation
 @property  BOOL enteredScreenLocationNeedsUpdate

  // instance methods
  -[SBIconDraggingEditContext .cxx_destruct]
  -[SBIconDraggingEditContext setDraggingUniqueIdentifier:]
  -[SBIconDraggingEditContext setEnteredScreenLocation:]
  -[SBIconDraggingEditContext draggingUniqueIdentifier]
  -[SBIconDraggingEditContext enteredScreenLocationNeedsUpdate]
  -[SBIconDraggingEditContext setEnteredScreenLocationNeedsUpdate:]
  -[SBIconDraggingEditContext enteredScreenLocation]


SBIconDragContext : NSObject <BSDescriptionProviding>
 @property  long long state
 @property  NSObject<OS_os_activity> *activity
 @property  BOOL userActive
 @property  BOOL hasUserDragged
 @property  SBPlaceholderIcon *iconPlaceholder
 @property  NSArray *grabbedIconViews
 @property  NSSet *createdIcons
 @property  NSSet *itemIdentifiers
 @property  NSSet *sourceIcons
 @property  BOOL hasNonDefaultSizedSourceIcons
 @property  unsigned long sourceIconGridSizeClass
 @property  BOOL hasFolderSourceIcons
 @property  NSSet *draggedIcons
 @property  NSSet *removedMatchingLeafIcons
 @property  BOOL hasNonDefaultSizedDraggedIcons
 @property  unsigned long draggedIconGridSizeClass
 @property  BOOL hasFolderDraggedIcons
 @property  NSSet *droppedIcons
 @property  SBIconView *primaryIconView
 @property  BOOL duplicatesSourceIcons
 @property  BOOL waitingForMessage
 @property  NSSet *expectedMessages
 @property  BOOL performedIconDrop
 @property  BOOL cancelled
 @property  BOOL dragItemWasConsumedExternally
 @property  SBIconView *recipientIconView
 @property  NSSet *appLocalContexts
 @property  NSDate *lastUserInteractionDate
 @property  NSTimer *watchdogTimer
 @property  {CGPoint=dd} initialTouchOffsetFromIconImageCenter
 @property  NSArray *allIconsEverBounced
 @property  BOOL notifiedDelegateForDropSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconDragContext itemIdentifiers]
  -[SBIconDragContext .cxx_destruct]
  -[SBIconDragContext setCancelled:]
  -[SBIconDragContext succinctDescriptionBuilder]
  -[SBIconDragContext setWatchdogTimer:]
  -[SBIconDragContext isCancelled]
  -[SBIconDragContext setState:]
  -[SBIconDragContext descriptionBuilderWithMultilinePrefix:]
  -[SBIconDragContext init]
  -[SBIconDragContext watchdogTimer]
  -[SBIconDragContext setItemIdentifiers:]
  -[SBIconDragContext isUserActive]
  -[SBIconDragContext descriptionWithMultilinePrefix:]
  -[SBIconDragContext activity]
  -[SBIconDragContext succinctDescription]
  -[SBIconDragContext state]
  -[SBIconDragContext dealloc]
  -[SBIconDragContext appDragLocalContextForDragItem:]
  -[SBIconDragContext primaryIconView]
  -[SBIconDragContext hasSourceIconView:]
  -[SBIconDragContext enumerateDestinationIconViewsUsingBlock:]
  -[SBIconDragContext draggedIcons]
  -[SBIconDragContext hasDestinationIconView:]
  -[SBIconDragContext hasDragItem:]
  -[SBIconDragContext setDuplicatesSourceIcons:]
  -[SBIconDragContext lastUserInteractionDate]
  -[SBIconDragContext hasUserDragged]
  -[SBIconDragContext enumerateSourceIconViewsUsingBlock:]
  -[SBIconDragContext isWaitingForMessage]
  -[SBIconDragContext expectedMessages]
  -[SBIconDragContext resetLastUserInteractionDate]
  -[SBIconDragContext setAppDragLocalContext:forDragItem:]
  -[SBIconDragContext setCreatedIcons:]
  -[SBIconDragContext iconPlaceholder]
  -[SBIconDragContext setIconPlaceholder:]
  -[SBIconDragContext grabbedIconViews]
  -[SBIconDragContext setGrabbedIconViews:]
  -[SBIconDragContext setRemovedMatchingLeafIcons:]
  -[SBIconDragContext setInitialIndexPath:forIcon:]
  -[SBIconDragContext setInitialGridPath:forIcon:]
  -[SBIconDragContext initialIndexPathForIcon:]
  -[SBIconDragContext initialGridPathForIcon:]
  -[SBIconDragContext sourceIcons]
  -[SBIconDragContext hasItemIdentifier:]
  -[SBIconDragContext swapSourceIconWithIdentifier:withIcon:]
  -[SBIconDragContext removeAllMessageExpectations]
  -[SBIconDragContext setRecipientIconView:]
  -[SBIconDragContext setDragItemWasConsumedExternally:]
  -[SBIconDragContext addMessageExpectationNamed:]
  -[SBIconDragContext setPrimaryIconView:]
  -[SBIconDragContext addSourceIcon:]
  -[SBIconDragContext addSourceIconView:]
  -[SBIconDragContext addItemIdentifier:]
  -[SBIconDragContext addGrabbedIconView:]
  -[SBIconDragContext dragPreviewForIconView:]
  -[SBIconDragContext removeMessageExpectationNamed:]
  -[SBIconDragContext performedIconDrop]
  -[SBIconDragContext dragItemWasConsumedExternally]
  -[SBIconDragContext addIconViewDroppingAssertion:forIconView:]
  -[SBIconDragContext setTargetIconView:forCancellingIconView:]
  -[SBIconDragContext targetIconViewForCancellingIconView:]
  -[SBIconDragContext clearAllDropAssertions]
  -[SBIconDragContext setDragPreview:forIconView:]
  -[SBIconDragContext setInitialTouchOffsetFromIconImageCenter:]
  -[SBIconDragContext enumerateDragPreviewsUsingBlock:]
  -[SBIconDragContext hasEnteredIconListView:]
  -[SBIconDragContext addEnteredIconListView:]
  -[SBIconDragContext notifiedDelegateForDropSession]
  -[SBIconDragContext setNotifiedDelegateForDropSession:]
  -[SBIconDragContext initialTouchOffsetFromIconImageCenter]
  -[SBIconDragContext recipientIconView]
  -[SBIconDragContext duplicatesSourceIcons]
  -[SBIconDragContext removedMatchingLeafIcons]
  -[SBIconDragContext setBouncedIcons:forListModel:]
  -[SBIconDragContext listModelEnumeratorForBouncedIcons]
  -[SBIconDragContext bouncedIconsForListModel:]
  -[SBIconDragContext allIconsEverBounced]
  -[SBIconDragContext setAdditionalMatchingIcon:forDroppedIconIdentifier:]
  -[SBIconDragContext appDragLocalContextWithIconIdentifier:]
  -[SBIconDragContext setIcon:shouldExpandAfterDropAnimationForDragItems:]
  -[SBIconDragContext setDestinationStackIconView:forIconWithIdentifier:]
  -[SBIconDragContext setDestinationFolderIconView:forIconWithIdentifier:]
  -[SBIconDragContext addDroppedIcon:]
  -[SBIconDragContext droppedIcons]
  -[SBIconDragContext addDestinationIconView:]
  -[SBIconDragContext setPerformedIconDrop:]
  -[SBIconDragContext destinationStackIconViewForIconWithIdentifier:]
  -[SBIconDragContext additionalMatchingIconForDroppedIconIdentifier:]
  -[SBIconDragContext destinationFolderIconViewForIconWithIdentifier:]
  -[SBIconDragContext addDropAnimatingDragItem:]
  -[SBIconDragContext iconToExpandAfterDropAnimationForDragItem:]
  -[SBIconDragContext isAnimatingDropForDragItem:]
  -[SBIconDragContext clearDropAssertionsForIconView:]
  -[SBIconDragContext draggedIconGridSizeClass]
  -[SBIconDragContext hasFolderDraggedIcons]
  -[SBIconDragContext hasNonDefaultSizedDraggedIcons]
  -[SBIconDragContext initialIndexPathForIconWithIdentifier:]
  -[SBIconDragContext setSourceIcons:]
  -[SBIconDragContext setDroppedIcons:]
  -[SBIconDragContext createdIcons]
  -[SBIconDragContext setLastUserInteractionDate:]
  -[SBIconDragContext _addPrepareForDropAssertionForIconView:]
  -[SBIconDragContext initialGridPathForIconWithIdentifier:]
  -[SBIconDragContext addAppLocalContext:]
  -[SBIconDragContext addSourceIcons:]
  -[SBIconDragContext addDroppedIcons:]
  -[SBIconDragContext hasNonDefaultSizedSourceIcons]
  -[SBIconDragContext sourceIconGridSizeClass]
  -[SBIconDragContext hasFolderSourceIcons]
  -[SBIconDragContext enumerateDraggedIconUsingBlock:]
  -[SBIconDragContext hasMessageExpectationNamed:]
  -[SBIconDragContext appLocalContexts]
  -[SBIconDragContext setDraggedIcons:]


SBDefaultIconDragPreviewWindow : UIWindow <SBIconDragPreviewContaining>
 @property  UIView *iconDragPreviewContainerView

  // instance methods
  -[SBDefaultIconDragPreviewWindow iconDragPreviewContainerView]


SBHIconAccessoryCountedMapImageTuple : NSObject <SBCountedMapValue>
 @property  UIImage *image
 @property  <NSCopying><NSObject> *sbh_countedMapKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconAccessoryCountedMapImageTuple image]
  -[SBHIconAccessoryCountedMapImageTuple .cxx_destruct]
  -[SBHIconAccessoryCountedMapImageTuple initWithImage:countedMapKey:hash:]
  -[SBHIconAccessoryCountedMapImageTuple isEqual:]
  -[SBHIconAccessoryCountedMapImageTuple initWithImage:countedMapKey:]
  -[SBHIconAccessoryCountedMapImageTuple sbh_countedMapKey]
  -[SBHIconAccessoryCountedMapImageTuple dealloc]
  -[SBHIconAccessoryCountedMapImageTuple copyWithZone:]


SBIconFocusEffectPlatterView : UIView
 @property  MTMaterialView *materialView
 @property  UIView *vibrantFillView

  // instance methods
  -[SBIconFocusEffectPlatterView .cxx_destruct]
  -[SBIconFocusEffectPlatterView layoutSubviews]
  -[SBIconFocusEffectPlatterView materialView]
  -[SBIconFocusEffectPlatterView initWithFrame:]
  -[SBIconFocusEffectPlatterView vibrantFillView]


SBIconProgressView : UIView
 @property  double backgroundAlpha
 @property  double foregroundAlpha
 @property  double circleRadiusFraction
 @property  double pauseRadiusFraction
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} circleBoundingRect
 @property  long long displayedState
 @property  BOOL displayingPaused
 @property  double displayedFraction
 @property  _SBIconProgressStateTransition *activeStateTransition
 @property  _SBIconProgressPausedTransition *activePausedTransition
 @property  _SBIconProgressFractionTransition *activeFractionTransition
 @property  <SBIconProgressViewDelegate> *delegate
 @property  BOOL canAnimate
 @property  BOOL hasOpaqueIconImage
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo

  // class methods
  +[SBIconProgressView _pieImagesMemoryPool]
  +[SBIconProgressView _pieImageAtFraction:]

  // instance methods
  -[SBIconProgressView setForegroundAlpha:]
  -[SBIconProgressView foregroundAlpha]
  -[SBIconProgressView backgroundAlpha]
  -[SBIconProgressView .cxx_destruct]
  -[SBIconProgressView setDelegate:]
  -[SBIconProgressView setDisplayedState:]
  -[SBIconProgressView setBackgroundAlpha:]
  -[SBIconProgressView descriptionBuilderWithMultilinePrefix:]
  -[SBIconProgressView iconImageInfo]
  -[SBIconProgressView descriptionWithMultilinePrefix:]
  -[SBIconProgressView _onDisplayLink:]
  -[SBIconProgressView initWithFrame:]
  -[SBIconProgressView delegate]
  -[SBIconProgressView displayedState]
  -[SBIconProgressView dealloc]
  -[SBIconProgressView drawRect:]
  -[SBIconProgressView setIconImageInfo:]
  -[SBIconProgressView _updateTransitionsAnimated:]
  -[SBIconProgressView _clearDisplayLink]
  -[SBIconProgressView setActivePausedTransition:]
  -[SBIconProgressView setActiveStateTransition:]
  -[SBIconProgressView _updatePausedTransitionAnimated:]
  -[SBIconProgressView _updateStateTransitionAnimated:]
  -[SBIconProgressView setActiveFractionTransition:]
  -[SBIconProgressView _updateFractionTransitionAnimated:]
  -[SBIconProgressView _hasActiveTransitions]
  -[SBIconProgressView _ensureDisplayLink]
  -[SBIconProgressView _drawPieWithCenter:]
  -[SBIconProgressView _drawOutgoingCircleWithCenter:]
  -[SBIconProgressView _drawIncomingCircleWithCenter:]
  -[SBIconProgressView _drawPauseUIWithCenter:]
  -[SBIconProgressView _circleScaleFactor]
  -[SBIconProgressView canAnimate]
  -[SBIconProgressView setState:paused:fractionLoaded:animated:]
  -[SBIconProgressView setCanAnimate:]
  -[SBIconProgressView setHasOpaqueIconImage:]
  -[SBIconProgressView circleBoundingRect]
  -[SBIconProgressView hasOpaqueIconImage]
  -[SBIconProgressView circleRadiusFraction]
  -[SBIconProgressView setCircleRadiusFraction:]
  -[SBIconProgressView pauseRadiusFraction]
  -[SBIconProgressView setPauseRadiusFraction:]
  -[SBIconProgressView displayingPaused]
  -[SBIconProgressView setDisplayingPaused:]
  -[SBIconProgressView displayedFraction]
  -[SBIconProgressView setDisplayedFraction:]
  -[SBIconProgressView activeStateTransition]
  -[SBIconProgressView activePausedTransition]
  -[SBIconProgressView activeFractionTransition]


_SBIconProgressTransition : NSObject
  // instance methods
  -[_SBIconProgressTransition isCompleteWithView:]
  -[_SBIconProgressTransition completeTransitionAndUpdateView:]
  -[_SBIconProgressTransition updateView:withElapsedTime:]


_SBIconProgressStateTransition : _SBIconProgressTransition
  // class methods
  +[_SBIconProgressStateTransition newTransitionFromState:toState:]
  +[_SBIconProgressStateTransition _classForTransitionFromState:toState:]

  // instance methods
  -[_SBIconProgressStateTransition .cxx_destruct]
  -[_SBIconProgressStateTransition isCompleteWithView:]
  -[_SBIconProgressStateTransition completeTransitionAndUpdateView:]
  -[_SBIconProgressStateTransition updateView:withElapsedTime:]
  -[_SBIconProgressStateTransition _initWithFromState:toState:]
  -[_SBIconProgressStateTransition _updateView:]


_SBIconProgressNoneWaitingStateTransition : _SBIconProgressStateTransition
  // instance methods
  -[_SBIconProgressNoneWaitingStateTransition _updateView:]


_SBIconProgressWaitingLoadingStateTransition : _SBIconProgressStateTransition
  // instance methods
  -[_SBIconProgressWaitingLoadingStateTransition _updateView:]


_SBIconProgressLoadingNoneStateTransition : _SBIconProgressStateTransition
  // instance methods
  -[_SBIconProgressLoadingNoneStateTransition _updateView:]


_SBIconProgressPausedTransition : _SBIconProgressTransition
  // class methods
  +[_SBIconProgressPausedTransition newTransitionToPaused:]

  // instance methods
  -[_SBIconProgressPausedTransition .cxx_destruct]
  -[_SBIconProgressPausedTransition isCompleteWithView:]
  -[_SBIconProgressPausedTransition completeTransitionAndUpdateView:]
  -[_SBIconProgressPausedTransition updateToPaused:]
  -[_SBIconProgressPausedTransition updateView:withElapsedTime:]
  -[_SBIconProgressPausedTransition _updateView:]
  -[_SBIconProgressPausedTransition _initToPaused:]
  -[_SBIconProgressPausedTransition _updateTimingFunction]
  -[_SBIconProgressPausedTransition _updateElapsedTimeFromFraction]


_SBIconProgressFractionTransition : _SBIconProgressTransition
  // class methods
  +[_SBIconProgressFractionTransition newTransitionToFraction:]

  // instance methods
  -[_SBIconProgressFractionTransition isCompleteWithView:]
  -[_SBIconProgressFractionTransition completeTransitionAndUpdateView:]
  -[_SBIconProgressFractionTransition updateToFraction:]
  -[_SBIconProgressFractionTransition updateView:withElapsedTime:]
  -[_SBIconProgressFractionTransition _updateView:forDisplayedFraction:]


SBHMinusPageStepper : SBFSteppedAnimationTimingFunctionCalculator
 @property  double backgroundBlurAlpha
 @property  double pageControlAlpha

  // instance methods
  -[SBHMinusPageStepper init]
  -[SBHMinusPageStepper backgroundBlurAlpha]
  -[SBHMinusPageStepper pageControlAlpha]


SBHSpecialAvocadoDescriptor : CHSAvocadoDescriptor
 @property  unsigned long type

  // class methods
  +[SBHSpecialAvocadoDescriptor supportsSecureCoding]

  // instance methods
  -[SBHSpecialAvocadoDescriptor widgetDescription]
  -[SBHSpecialAvocadoDescriptor displayName]
  -[SBHSpecialAvocadoDescriptor initWithType:]
  -[SBHSpecialAvocadoDescriptor initWithCoder:]
  -[SBHSpecialAvocadoDescriptor backgroundColor]
  -[SBHSpecialAvocadoDescriptor setType:]
  -[SBHSpecialAvocadoDescriptor .cxx_destruct]
  -[SBHSpecialAvocadoDescriptor succinctDescriptionBuilder]
  -[SBHSpecialAvocadoDescriptor descriptionBuilderWithMultilinePrefix:]
  -[SBHSpecialAvocadoDescriptor isEqual:]
  -[SBHSpecialAvocadoDescriptor _initWithType:supportedSizeClasses:]
  -[SBHSpecialAvocadoDescriptor type]
  -[SBHSpecialAvocadoDescriptor sbh_canBeAddedToStack]
  -[SBHSpecialAvocadoDescriptor initWithType:supportedSizeClasses:]
  -[SBHSpecialAvocadoDescriptor accentColor]
  -[SBHSpecialAvocadoDescriptor encodeWithCoder:]


SBHCustomIconListLayoutProvider : NSObject <SBIconListLayoutProvider>
 @property  NSDictionary *listLayouts
 @property  <SBIconListLayout> *defaultLayout

  // instance methods
  -[SBHCustomIconListLayoutProvider .cxx_destruct]
  -[SBHCustomIconListLayoutProvider layoutForIconLocation:]
  -[SBHCustomIconListLayoutProvider init]
  -[SBHCustomIconListLayoutProvider defaultLayout]
  -[SBHCustomIconListLayoutProvider initWithListLayouts:defaultLayout:]
  -[SBHCustomIconListLayoutProvider listLayouts]
  -[SBHCustomIconListLayoutProvider initWithListLayouts:]


SBHIconManager : NSObject <UIPopoverPresentationControllerDelegate, SBReusableViewMapDelegate, SBRootFolderPageStateObserver, SBNestingViewControllerDelegate, SBHIconModelDelegate, PTSettingsKeyObserver, SBRootFolderDelegate, SBIconViewObserver, SBHWidgetStackViewControllerDataSource, SBHWidgetStackViewControllerDelegate, SBHMultiplexingWrapperViewControllerDelegate, SBLeafIconObserver, CHUISAvocadoHostViewControllerDelegate, SBHWidgetMetricsProviderDelegate, CHSAvocadoDescriptorProviderObserver, SBHMultiplexingManagerDelegate, SBIconDragManagerDelegate, SBHTodayViewControllerObserver, SBHModalInteractionDelegate, SBFolderObserver, SBIconViewDelegate, SBIconViewQuerying, SBHomeScreenIconTransitionAnimatorDelegate, SBIconViewProviding, SBRootFolderControllerDelegate, SBIconLocationPresenting, SBHLibraryViewControllerObserver, SBHVisibleContentPresenter>
 @property  SBIconView *highlightedIconView
 @property  NSTimer *editingEndTimer
 @property  SBRootFolderController *rootFolderController
 @property  UIViewController<SBHIconRootViewProviding> *rootViewController
 @property  NSArray *postResetPathIdentifiers
 @property  BOOL needsRelayout
 @property  BOOL animatingFolderCreation
 @property  BOOL animatingFolderOpeningOrClosing
 @property  BOOL animatingForUnscatter
 @property  SBFolder *closingFolder
 @property  BSEventQueue *transitionEventQueue
 @property  SBHomeScreenIconTransitionAnimator *currentTransitionAnimator
 @property  SBRootFolder *rootFolder
 @property  SBWorkspaceInteractionContext *currentInteractionContext
 @property  SBHHomeScreenSettings *homeScreenSettings
 @property  SBHRootFolderSettings *rootFolderSettings
 @property  NSString *precachedContentSizeCategory
 @property  SBHomeScreenDefaults *homeScreenDefaults
 @property  UIViewController<SBHRootFolderCustomViewPresenting> *trailingCustomViewController
 @property  UIViewController<SBHSidebarProvider> *sidebarViewController
 @property  UIViewController<SBHLegibility> *leadingCustomViewController
 @property  BOOL resettingRootIconLists
 @property  BOOL canPresentOverscrollLibraryForPageTransition
 @property  BOOL canDismissOverscrollLibraryForPageTransition
 @property  SBHHomeScreenUsageMonitor *usageMonitor
 @property  <BSInvalidatable> *editingAutosaveDisableAssertion
 @property  SBIconView *currentConfiguringIconView
 @property  SBHPeopleWidgetPersonDetailInteraction *currentPersonDetailInteraction
 @property  SBFParallaxSettings *badgeParallaxSettings
 @property  ATXHomeScreenPageIconRanker *atxIconRanker
 @property  SBHWidgetIntroductionSettings *widgetIntroductionSettings
 @property  NSMutableArray *defaultWidgetsIconsRestoringRecordOriginalIndex
 @property  NSMutableArray *defaultWidgetsBumpedIconUsageRanking
 @property  NSMutableDictionary *defaultWidgetsIconsRestoringRecord
 @property  BOOL stopUpdatingDefaultWidgetsBumpedIconRecord
 @property  BOOL isVerticalWidgetIntroduction
 @property  BOOL forceShowWidgetIntroduction
 @property  unsigned long widgetIntroductionCounter
 @property  NSArray *defaultFirstPageSuggestedWidgetIcons
 @property  NSArray *defaultSecondPageSuggestedWidgetIcons
 @property  SBModalWidgetIntroductionViewController *modalIntroductionViewController
 @property  BOOL modalIntroductionViewControllerIsPrewarming
 @property  BOOL shouldDisableUserInteractionForWidgetDiscoverability
 @property  NSMutableArray *chuisOnboardingWidgetViewControllers
 @property  SBHTrialClientManager *trialClientManager
 @property  NSDictionary *originalIconStateBeforeWidgetDiscoverability
 @property  SBIconListView *currentRootIconList
 @property  SBIconListView *dockListView
 @property  SBIconListView *floatingDockListView
 @property  SBIconListView *floatingDockSuggestionsListView
 @property  SBIconListView *effectiveDockListView
 @property  SBIconView *previewInteractingIconView
 @property  SBIconLabelImageCache *iconLabelImageCache
 @property  BOOL libraryViewControllerVisible
 @property  SBHWidgetMetricsProvider *widgetMetricsProvider
 @property  NSArray *defaultFirstPageWidgetDescriptors
 @property  unsigned long defaultFirstPageWidgetSizeClass
 @property  NSArray *defaultSecondPageWidgetDescriptors
 @property  unsigned long defaultSecondPageWidgetSizeClass
 @property  BOOL internalForceShowWidgetDiscoverability
 @property  unsigned long gridCellInfoOptionsForInsertingDefaultWidgets
 @property  ATXDefaultWidgetSuggesterClient *proactiveWidgetSuggesterClient
 @property  BOOL disablesScrollingToLastIconPageForLibraryDismissal
 @property  BOOL widgetDiscoverabilityHasRun
 @property  <SBHIconManagerDelegate> *delegate
 @property  long long interfaceOrientation
 @property  SBHIconModel *iconModel
 @property  SBFolderController *openedFolderController
 @property  SBFloatingDockViewController *floatingDockViewController
 @property  UIViewController<SBHTodayViewController> *overlayTodayViewController
 @property  UIViewController<SBHTodayViewController> *overlayCoverSheetTodayViewController
 @property  SBHLibraryViewController *overlayLibraryViewController
 @property  BOOL overlayTodayViewVisible
 @property  BOOL overlayCoverSheetTodayViewVisible
 @property  BOOL overlayLibraryViewVisible
 @property  BOOL dockPinnedForRotation
 @property  BOOL showsDoneButtonWhileEditing
 @property  BOOL showsAddWidgetButtonWhileEditing
 @property  BOOL editing
 @property  BOOL editingAllowed
 @property  BOOL folderPageManagementUIVisible
 @property  SBHFocusMode *activeFocusMode
 @property  BOOL iconDragging
 @property  BOOL rootFolderContentVisible
 @property  BOOL iconContentPossiblyVisibleOverApplication
 @property  unsigned long maximumNumberOfWidgetsToMaintainPreventBackgroundAssertions
 @property  UIImpactFeedbackGenerator *iconEditingFeedbackBehavior
 @property  _UILegibilitySettings *legibilitySettings
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  unsigned long listLayoutProviderLayoutOptions
 @property  SBIcon *iconToReveal
 @property  CHSAvocadoDescriptorProvider *avocadoDescriptorProvider
 @property  BOOL allowsNestedFolders
 @property  BOOL scrolling
 @property  BOOL rootFolderScrolling
 @property  BOOL folderScrolling
 @property  BOOL trackingScroll
 @property  BOOL hasOpenFolder
 @property  SBFolder *openedFolder
 @property  BOOL canCloseFolders
 @property  BOOL hasAnimatingFolder
 @property  BOOL transitioning
 @property  BOOL performingExpandTransition
 @property  BOOL performingCancelledCollapseTransition
 @property  SBIconDragManager *iconDragManager
 @property  BOOL iconTouched
 @property  BOOL showingIconContextMenu
 @property  SBHIconShareSheetManager *iconShareSheetManager
 @property  BOOL areAnyIconShareSheetsShowing
 @property  BOOL showingPullDownSearch
 @property  BOOL showingPullDownSearchOrTransitioningToVisible
 @property  BOOL showingPullDownOrLeadingCustomViewSearch
 @property  BOOL showingSpotlightOrLeadingCustomView
 @property  BOOL showingLeadingCustomView
 @property  BOOL showingOrTransitioningToLeadingCustomView
 @property  BOOL transitioningHomeScreenState
 @property  BOOL sidebarVisible
 @property  BOOL sidebarEffectivelyVisible
 @property  BOOL sidebarVisibilityGestureActive
 @property  SBSearchGesture *searchGesture
 @property  SBIconPageIndicatorImageSetCache *iconPageIndicatorImageSetCache
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  BOOL showsBadgesInAppLibrary
 @property  NSString *statisticsSummary
 @property  BOOL usageMonitoringEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *presentedIconLocations
 @property  unsigned long contentVisibility

  // class methods
  +[SBHIconManager defaultIconLayoutAnimationDuration]
  +[SBHIconManager defaultIconLocationForListsWithNonDefaultSizedIcons]

  // instance methods
  -[SBHIconManager folderController:didEndEditingTitle:]
  -[SBHIconManager iconView:willUsePreviewForCancelling:targetIconView:]
  -[SBHIconManager setFloatingDockViewController:]
  -[SBHIconManager iconViewWasDiscarded:]
  -[SBHIconManager isSidebarVisibilityGestureActive]
  -[SBHIconManager iconLocationForListsWithNonDefaultSizedIcons]
  -[SBHIconManager noteFloatingDockWillChangeHeight]
  -[SBHIconManager iconViewWasRecycled:]
  -[SBHIconManager cancelAllDrags]
  -[SBHIconManager _iconModelDidLayout:]
  -[SBHIconManager iconView:willAnimateDragLiftWithAnimator:session:]
  -[SBHIconManager isDisplayingIconView:options:]
  -[SBHIconManager rootFolderControllerViewDidDisappear:]
  -[SBHIconManager leadingCustomViewController]
  -[SBHIconManager allowedGridSizeClassesForTodayList]
  -[SBHIconManager launchActionsForIconView:]
  -[SBHIconManager setNeedsRelayout:]
  -[SBHIconManager allowedInterfaceOrientations]
  -[SBHIconManager rootFolderPageStateProvider:willEndTransitionToState:successfully:]
  -[SBHIconManager rootFolderPageStateProvider:willBeginTransitionToState:animated:interactive:]
  -[SBHIconManager widgetIntroductionSettings]
  -[SBHIconManager icon:touchMoved:]
  -[SBHIconManager iconView:dragPreviewForItem:session:previewParameters:]
  -[SBHIconManager iconView:willAddDragItems:toSession:]
  -[SBHIconManager enumeratePageStateObserversUsingBlock:]
  -[SBHIconManager folderController:willUseIconTransitionAnimator:forOperation:onViewController:animated:]
  -[SBHIconManager rootFolderController:prepareAddSheetViewController:]
  -[SBHIconManager iconView:didEndDragSession:withOperation:]
  -[SBHIconManager setRootFolderController:]
  -[SBHIconManager removePageStateObserver:]
  -[SBHIconManager noteFloatingDockWillAnimateChangeInHeight]
  -[SBHIconManager reasonToDisallowInteractionOnIconView:]
  -[SBHIconManager listsAllowRotatedLayoutForFolderClass:]
  -[SBHIconManager isSidebarEffectivelyVisible]
  -[SBHIconManager allowedGridSizeClassesForDock]
  -[SBHIconManager updateFloatingDockMaximumEditingIconSize]
  -[SBHIconManager iconViewDisplaysLabel:]
  -[SBHIconManager externalDockHeightForRootFolderController:]
  -[SBHIconManager currentRootIconList]
  -[SBHIconManager bestLocationForIcon:]
  -[SBHIconManager _updateIconView:forCustomIconImageViewController:]
  -[SBHIconManager checkForInvalidCustomElements]
  -[SBHIconManager presentLeadingCustomViewWithCompletion:]
  -[SBHIconManager floatingDockListView]
  -[SBHIconManager iconLocationAllowsBadging:]
  -[SBHIconManager canShowWidgetIntroduction]
  -[SBHIconManager iconViewForIcon:location:]
  -[SBHIconManager setLeadingCustomViewController:]
  -[SBHIconManager _enqueueTransitionName:withHandler:]
  -[SBHIconManager showsBadgesInAppLibrary]
  -[SBHIconManager isDisplayingIcon:inLocation:options:]
  -[SBHIconManager presentTodayOverlayForIconDragManager:]
  -[SBHIconManager setEditing:fromIconView:]
  -[SBHIconManager _folderControllerForIcon:inLocation:]
  -[SBHIconManager animator:animationSettingsForOperation:childViewController:]
  -[SBHIconManager appIconImageCacheForRootFolderController:]
  -[SBHIconManager applicationWithBundleIdentifier:]
  -[SBHIconManager _addReasonToNotManageBackgroundAssertions:]
  -[SBHIconManager isIconTouched]
  -[SBHIconManager popToCurrentRootIconListWhenPossible]
  -[SBHIconManager localizedFolderNameForDefaultDisplayName:]
  -[SBHIconManager currentIconListIndex]
  -[SBHIconManager setUsageMonitoringEnabled:]
  -[SBHIconManager currentConfiguringIconView]
  -[SBHIconManager displayPronouncedContainerViewVisibility:isVertical:]
  -[SBHIconManager statisticsSummary]
  -[SBHIconManager addPageStateObserver:]
  -[SBHIconManager setTrialClientManager:]
  -[SBHIconManager isTrackingScroll]
  -[SBHIconManager homeScreenDefaults]
  -[SBHIconManager organizeAllIconsAcrossPagesWithPageCount:]
  -[SBHIconManager trailingCustomViewController]
  -[SBHIconManager isShowingSpotlightOrLeadingCustomView]
  -[SBHIconManager runDownloadingIconTest]
  -[SBHIconManager localizedDefaultFolderName]
  -[SBHIconManager _intentForWidget:ofIcon:creatingIfNecessary:]
  -[SBHIconManager forceShowWidgetIntroduction]
  -[SBHIconManager iconView:configurationWillBeginWithInteraction:]
  -[SBHIconManager additionalDragLiftScaleForIconView:]
  -[SBHIconManager isDockPinnedForRotation]
  -[SBHIconManager onboardingWidgetPreviewsForWidgetIcon:]
  -[SBHIconManager organizeAllIconsIntoFoldersWithPageCount:]
  -[SBHIconManager defaultFirstPageSuggestedWidgetIcons]
  -[SBHIconManager shouldHighlightTouchedIconView:]
  -[SBHIconManager removeAllWidgetIcons]
  -[SBHIconManager closeBoxTypeForIconView:]
  -[SBHIconManager backgroundViewForEditingDoneButtonForRootFolderController:]
  -[SBHIconManager iconView:dragLiftAnimationDidChangeDirection:]
  -[SBHIconManager allowedGridSizeClassesForDockForIconModel:]
  -[SBHIconManager _cullAvocadoBackgroundsForReason:]
  -[SBHIconManager popExpandedIconAnimated:completionHandler:]
  -[SBHIconManager setDockPinnedForRotation:]
  -[SBHIconManager maxRowCountForFavoriteTodayListForIconModel:]
  -[SBHIconManager canCloseFolders]
  -[SBHIconManager _removeTouchedIconView:]
  -[SBHIconManager todayViewControllerWillDisappear:]
  -[SBHIconManager todayViewControllerDidDisappear:]
  -[SBHIconManager rootFolder:canAddIcon:toIconList:inFolder:]
  -[SBHIconManager clearTodayLayout]
  -[SBHIconManager isPerformingCancelledCollapseTransition]
  -[SBHIconManager iconModel:didAddIcon:]
  -[SBHIconManager setOverlayCoverSheetTodayViewController:]
  -[SBHIconManager effectiveRootFolderControllerContentVisibility]
  -[SBHIconManager folderController:didBeginEditingTitle:]
  -[SBHIconManager viewMap:makeNewViewOfClass:]
  -[SBHIconManager updatePronouncedContainerViewVisibility:vertical:]
  -[SBHIconManager removeReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:]
  -[SBHIconManager allowedGridSizeClassesForTodayListForRootFolder:]
  -[SBHIconManager performAfterIconContextMenuDismissesUsingBlock:]
  -[SBHIconManager rootFolder:shouldAllowBadgingForIcon:]
  -[SBHIconManager iconModel:willRemoveIcon:]
  -[SBHIconManager _finishResetRootIconLists]
  -[SBHIconManager enumerateAppPredictionViewControllersInIconLocationGroup:withOptions:usingBlock:]
  -[SBHIconManager setListLayoutProviderLayoutOptions:]
  -[SBHIconManager windowForIconDragPreviewsForIconDragManager:]
  -[SBHIconManager isTodayViewEffectivelyVisible]
  -[SBHIconManager _ppt_forcibleCullAllAvocadoBackgroundAssertions]
  -[SBHIconManager viewMap:shouldRecycleView:]
  -[SBHIconManager iconView:homeScreenContentViewForConfigurationInteraction:]
  -[SBHIconManager isRootFolderContentVisible]
  -[SBHIconManager widgetViewControllerUsesSystemBackgroundMaterialDidChange:]
  -[SBHIconManager iconView:willUseContextMenuStyle:]
  -[SBHIconManager maxColumnCountForTodayListForIconModel:]
  -[SBHIconManager rootFolderController:willPresentWidgetEditingViewController:]
  -[SBHIconManager setModalIntroductionViewController:]
  -[SBHIconManager rootFolderController:didDismissPageManagementWithLayoutManager:context:]
  -[SBHIconManager _prepareToResetRootIconLists]
  -[SBHIconManager randomizeAllIconsAcrossPagesWithPageCount:]
  -[SBHIconManager listGridSizeForFolderClass:]
  -[SBHIconManager maxListCountForFolders]
  -[SBHIconManager rootFolder:wantsToDoPageHidingEducationWithCompletion:]
  -[SBHIconManager _isShowingPullDownSearchOrTransitioning]
  -[SBHIconManager tryScrollToIconToRevealAnimated:]
  -[SBHIconManager setSidebarViewController:]
  -[SBHIconManager accessibilityTintColorForIconView:]
  -[SBHIconManager didSaveIconState:]
  -[SBHIconManager noteIconStateChangedExternally]
  -[SBHIconManager homescreenIconImageViewMap]
  -[SBHIconManager iconToReveal]
  -[SBHIconManager iconShouldAllowCloseBoxTap:]
  -[SBHIconManager icon:touchEnded:]
  -[SBHIconManager isFolderScrolling]
  -[SBHIconManager _multiplexingViewControllerForIcon:dataSource:location:withPriority:]
  -[SBHIconManager prototypeSettingSimpleBottomSnaking]
  -[SBHIconManager iconDragManager:didEndIconDragWithUniqueIdentifier:numberOfDraggedItems:]
  -[SBHIconManager isShowingIconContextMenu]
  -[SBHIconManager setDefaultWidgetsIconsRestoringRecordOriginalIndex:]
  -[SBHIconManager widgetStackViewController:didFinishUsingBackgroundView:]
  -[SBHIconManager setPostResetPathIdentifiers:]
  -[SBHIconManager maximumNumberOfWidgetsToMaintainPreventBackgroundAssertions]
  -[SBHIconManager modalIntroductionViewControllerIsPrewarming]
  -[SBHIconManager setDefaultFirstPageWidgetSizeClass:]
  -[SBHIconManager popExpandedIconFromLocation:interactionContext:animated:completionHandler:]
  -[SBHIconManager searchGesture]
  -[SBHIconManager rootFolderPageStateProvider:didContinueTransitionToState:progress:]
  -[SBHIconManager iconShareSheetManager]
  -[SBHIconManager iconDragManager:willBeginIconDragWithUniqueIdentifier:numberOfDraggedItems:]
  -[SBHIconManager floatingDockSuggestionsListView]
  -[SBHIconManager imageViewForIconView:]
  -[SBHIconManager iconView:willRemoveIconLabelAccessoryView:]
  -[SBHIconManager _resetHomescreenIconStateTo:]
  -[SBHIconManager rootFolderContainsWidgets]
  -[SBHIconManager iconDragManager:didAddItemsToIconDragWithUniqueIdentifier:numberOfDraggedItems:]
  -[SBHIconManager pushExpandedIcon:location:animated:completionHandler:]
  -[SBHIconManager _markAvocadoHostViewControllerForDeferredCleanup:]
  -[SBHIconManager maxIconCountForDock]
  -[SBHIconManager widgetStackViewController:containerBundleIdentifierForDataSource:]
  -[SBHIconManager isAnimatingFolderCreation]
  -[SBHIconManager setOverlayTodayViewVisible:]
  -[SBHIconManager presentStatistics]
  -[SBHIconManager firstIconViewForIcon:excludingLocations:]
  -[SBHIconManager setTrailingCustomViewController:]
  -[SBHIconManager isAnimatingFolderIconTransitionForIconDragManager:]
  -[SBHIconManager showsDoneButtonWhileEditing]
  -[SBHIconManager sidebarViewController]
  -[SBHIconManager todayViewControllers]
  -[SBHIconManager setIdleModeText:]
  -[SBHIconManager reasonToDisallowTapOnIconView:]
  -[SBHIconManager supportedGridSizeClassesForIconView:]
  -[SBHIconManager supportsDockForIconModel:]
  -[SBHIconManager stopUpdatingDefaultWidgetsBumpedIconRecord]
  -[SBHIconManager rootFolderController:didChangeEffectiveSidebarVisibilityProgress:]
  -[SBHIconManager _precacheDataForRootIcons]
  -[SBHIconManager canAddIconToIgnoredList:]
  -[SBHIconManager maxListCountForFoldersForIconModel:]
  -[SBHIconManager listWithNonDefaultSizedIconsGridSizeForFolderClass:]
  -[SBHIconManager iconLocationForPrecachingImages]
  -[SBHIconManager rootIconListAtIndex:]
  -[SBHIconManager iconDragManager:canBeginDragForIconView:]
  -[SBHIconManager isOverlayLibraryViewVisible]
  -[SBHIconManager iconEditingFeedbackBehavior]
  -[SBHIconManager _iconModelDidReloadIcons:]
  -[SBHIconManager undoDefaultTVWidget]
  -[SBHIconManager modalInteractionDidEnd:]
  -[SBHIconManager hasOpenFolderInLocation:]
  -[SBHIconManager dismissFolderPageManagementUI]
  -[SBHIconManager iconDragManager:shouldDuplicateIconsInDragSession:]
  -[SBHIconManager iconView:contentBoundingRectForConfigurationInteraction:]
  -[SBHIconManager isIconDragging]
  -[SBHIconManager iconModel:maxColumnCountForListInRootFolderWithInterfaceOrientation:]
  -[SBHIconManager setCurrentInteractionContext:]
  -[SBHIconManager widgetStackViewController:isDataSourceBlockedForScreenTimeExpiration:]
  -[SBHIconManager runRemoveAndRestoreIconTest]
  -[SBHIconManager _bundleWithIdentifierHasOpenURLEntitlement:]
  -[SBHIconManager editingEndTimer]
  -[SBHIconManager rootFolderController:willUsePropertyAnimator:toTransitionToState:]
  -[SBHIconManager _compactRootListsAfterFolderCloseWithAnimation:]
  -[SBHIconManager enumerateEditableViewControllersUsingBlock:]
  -[SBHIconManager presentLibraryCategoryPodForCategoryIdentifier:animated:completion:]
  -[SBHIconManager chuisOnboardingWidgetViewControllers]
  -[SBHIconManager setDefaultFirstPageSuggestedWidgetIcons:]
  -[SBHIconManager maxIconCountForDockForRootFolder:]
  -[SBHIconManager currentTransitionAnimator]
  -[SBHIconManager noteIconViewWillZoomDown:]
  -[SBHIconManager dismissIconShareSheets]
  -[SBHIconManager displayPronouncedContainerView]
  -[SBHIconManager relayout]
  -[SBHIconManager setCurrentTransitionAnimator:]
  -[SBHIconManager setShowsDoneButtonWhileEditing:]
  -[SBHIconManager maxIconCountForDockForIconModel:]
  -[SBHIconManager setupHomeScreenForWidgetScrollPerformanceTest]
  -[SBHIconManager isOverlayCoverSheetTodayViewVisible]
  -[SBHIconManager iconTouchBegan:]
  -[SBHIconManager _cullAvocadoBackgroundsIfNeededForReason:]
  -[SBHIconManager insertIcons:intoWidgetStack:]
  -[SBHIconManager _currentFolderController]
  -[SBHIconManager iconModel:listsAllowRotatedLayoutForFolderClass:]
  -[SBHIconManager multiplexingManager:willRemoveViewController:forIdentifier:]
  -[SBHIconManager iconViewDisplaysAccessories:]
  -[SBHIconManager rootFolderControllerWillAnimateWidgetInsertionForStackConfigurationInteraction:]
  -[SBHIconManager _ensureRootFolderController]
  -[SBHIconManager iconCloseBoxTapped:]
  -[SBHIconManager isAnimatingFolderOpeningOrClosing]
  -[SBHIconManager iconLabelImageCache]
  -[SBHIconManager defaultFirstPageWidgetDescriptors]
  -[SBHIconManager clearHighlightedIcon:]
  -[SBHIconManager _shouldParallaxInIconLocation:]
  -[SBHIconManager scrollToIconListContainingIcon:animate:]
  -[SBHIconManager iconView:containerViewControllerForConfigurationInteraction:]
  -[SBHIconManager focusEffectTypeForIconView:]
  -[SBHIconManager allowsNestedFolders]
  -[SBHIconManager setShouldDisableUserInteractionForWidgetDiscoverability:]
  -[SBHIconManager libraryViewController:willDismissSearchController:]
  -[SBHIconManager rootFolderControllerViewWillAppear:]
  -[SBHIconManager isFolderPageManagementUIVisible]
  -[SBHIconManager iconModel:listWithNonDefaultSizedIconsGridSizeForFolderClass:]
  -[SBHIconManager previewInteractingIconView]
  -[SBHIconManager containerViewForPresentingContextMenuForIconView:]
  -[SBHIconManager _updateOverlayOcclusionForRootFolderController]
  -[SBHIconManager isAnimatingForUnscatter]
  -[SBHIconManager isPerformingExpandTransition]
  -[SBHIconManager tearDownAndResetRootIconLists]
  -[SBHIconManager _updateVisibleIconsViewsForAllowableCloseBoxes]
  -[SBHIconManager addApplicationPlaceholders:]
  -[SBHIconManager rootFolderForIconDragManager:]
  -[SBHIconManager dismissSpotlightAnimated:completionHandler:]
  -[SBHIconManager setGridCellInfoOptionsForInsertingDefaultWidgets:]
  -[SBHIconManager supportedMedusaShortcutActionsForIconView:]
  -[SBHIconManager rootFolderPageStateProvider:didEndTransitionFromState:toState:successfully:]
  -[SBHIconManager iconViewMap]
  -[SBHIconManager _stackConfigurationForStackIcon:]
  -[SBHIconManager defaultWidgetsIconsRestoringRecordKeyForIcon:]
  -[SBHIconManager toggleSuggestedWidgetInStackForTestRecipe]
  -[SBHIconManager iconListViewForIndexPath:]
  -[SBHIconManager gridCellInfoOptionsForInsertingDefaultWidgets]
  -[SBHIconManager setDefaultWidgetsBumpedIconUsageRanking:]
  -[SBHIconManager addDefaultWidgetsToHomeScreen]
  -[SBHIconManager resetTodayLayout]
  -[SBHIconManager userHasUsedWidget]
  -[SBHIconManager launchURLForIconView:]
  -[SBHIconManager cancelAllFolderScrolling]
  -[SBHIconManager isLibraryViewControllerVisible]
  -[SBHIconManager _endObservingLeafIconsInModel:]
  -[SBHIconManager iconViewWillCancelDrag:]
  -[SBHIconManager iconLocationForListsWithNonDefaultSizedIconsForRootFolderController:]
  -[SBHIconManager avocadoHostViewController:requestsLaunchWithAction:]
  -[SBHIconManager isSidebarVisible]
  -[SBHIconManager captureHomeScreenOnboardingSnapshot]
  -[SBHIconManager hasAnimatingFolder]
  -[SBHIconManager _scheduleAvocadoBackgroundCullingForReason:]
  -[SBHIconManager iconGridSizeClassSizes]
  -[SBHIconManager addWidgetWithIdentifier:toPage:withSizeClass:]
  -[SBHIconManager effectiveDockListView]
  -[SBHIconManager highlightIconView:]
  -[SBHIconManager bestHomeScreenLocationForIcon:]
  -[SBHIconManager isPerformingCancelledExpandTransition]
  -[SBHIconManager isDisplayingIcon:options:]
  -[SBHIconManager listLayoutProviderLayoutOptions]
  -[SBHIconManager performAfterAllIconTouchesFinishedUsingBlock:]
  -[SBHIconManager _updateAssertionsForWidgetStackViewController:]
  -[SBHIconManager _updateCaptureOnlyBackgroundViewForCustomIconImageViewController:]
  -[SBHIconManager customImageViewControllerForIconView:]
  -[SBHIconManager _reduceTransparencyStatusDidChange:]
  -[SBHIconManager iconModel:shouldRemoveIcon:]
  -[SBHIconManager setEditing:withFeedbackBehavior:]
  -[SBHIconManager _removeReasonToNotManageBackgroundAssertions:]
  -[SBHIconManager getStatistics:]
  -[SBHIconManager prototypeSettingBumpLeastUsedApps]
  -[SBHIconManager atxIconRanker]
  -[SBHIconManager iconView:canAddDragItemsToSession:]
  -[SBHIconManager activeFocusMode]
  -[SBHIconManager _shouldRespondToIconCloseBoxes]
  -[SBHIconManager hasRootViewController]
  -[SBHIconManager rootFolderSettings]
  -[SBHIconManager resetDefaultWidgetsUndoInfo]
  -[SBHIconManager _setupApplicationShortcutItemsForPresentation:]
  -[SBHIconManager isShowingPullDownSearchOrTransitioningToVisible]
  -[SBHIconManager todayViewController:contentVisibilityWillChange:]
  -[SBHIconManager _iconModelWillReloadIcons:]
  -[SBHIconManager widgetViewControllerShouldTransitionSceneToBackground:]
  -[SBHIconManager iconDragManager:dragPreviewForIconView:]
  -[SBHIconManager closingFolder]
  -[SBHIconManager _determineIfAvocadoHostViewControllerIsVisible:]
  -[SBHIconManager debuggingActiveWidgetInfo]
  -[SBHIconManager _newIntentForDataSource:inIcon:]
  -[SBHIconManager widgetIconWithWidgetExtensionIdentifiers:widgetKinds:sizeClass:]
  -[SBHIconManager addWidgetStackToCurrentPage]
  -[SBHIconManager deviceTypeSupportModalWidgetIntroduction]
  -[SBHIconManager _isShowingSearchableLeadingCustomView]
  -[SBHIconManager iconModel:iconClassForApplicationWithBundleIdentifier:proposedClass:]
  -[SBHIconManager widgetStackViewController:didActivateDataSource:fromUserInteraction:]
  -[SBHIconManager rootFolderContainsSuggestedWidget]
  -[SBHIconManager areAnyIconShareSheetsShowing]
  -[SBHIconManager externalDockIconListViewForRootFolderController:]
  -[SBHIconManager iconViewWillBeginDrag:session:]
  -[SBHIconManager invalidateOnboardingWidgetPreviewViewControllers]
  -[SBHIconManager setRootFolder:]
  -[SBHIconManager enumerateKnownIconViewsUsingBlock:]
  -[SBHIconManager editingAutosaveDisableAssertion]
  -[SBHIconManager folderController:iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBHIconManager rootFolderControllerDidSetPrototypeSettingEditAsUndo:]
  -[SBHIconManager removeAllIconAnimations]
  -[SBHIconManager removeWidgetIconsFromHomeScreen]
  -[SBHIconManager iconView:draggingStartLocationWithProposedStartLocation:]
  -[SBHIconManager rootFolder:canBounceIcon:]
  -[SBHIconManager widgetMetricsProvider]
  -[SBHIconManager setInternalForceShowWidgetDiscoverability:]
  -[SBHIconManager rootViewController]
  -[SBHIconManager iconView:iconLabelAccessoryViewOfType:]
  -[SBHIconManager folderIconImageCache]
  -[SBHIconManager presentTodayOverlay]
  -[SBHIconManager rootFolder:isGridLayoutValid:forIconList:inFolder:]
  -[SBHIconManager setActiveFocusMode:]
  -[SBHIconManager addAllEligibleIconsToIgnoredList]
  -[SBHIconManager setProactiveWidgetSuggesterClient:]
  -[SBHIconManager setShowsAddWidgetButtonWhileEditing:]
  -[SBHIconManager iconViewCanBeginDrags:]
  -[SBHIconManager _effectiveTodayViewController]
  -[SBHIconManager shouldRecycleIconView:]
  -[SBHIconManager folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBHIconManager setCurrentPersonDetailInteraction:]
  -[SBHIconManager rootFolderController:didPresentWidgetEditingViewController:]
  -[SBHIconManager folder:didReplaceIcon:withIcon:]
  -[SBHIconManager currentPersonDetailInteraction]
  -[SBHIconManager iconView:shouldActivateApplicationShortcutItem:atIndex:]
  -[SBHIconManager folderController:iconListView:iconDropSessionDidEnter:]
  -[SBHIconManager widgetStackViewControllerWidgetCountDidChange:]
  -[SBHIconManager descriptorsDidChangeForDescriptorProvider:]
  -[SBHIconManager _isShowingLeadingCustomViewSearch]
  -[SBHIconManager _makeCustomViewControllerForWidgetIcon:dataSource:location:]
  -[SBHIconManager rootFolderController:willPresentPageManagementWithLayoutManager:animator:context:]
  -[SBHIconManager configureIconView:forIcon:]
  -[SBHIconManager _dumpRootFolderForStateCapture:]
  -[SBHIconManager badgeParallaxSettings]
  -[SBHIconManager rootFolderControllerDidAcceptWidgetIntroduction:]
  -[SBHIconManager shouldDisableUserInteractionForWidgetDiscoverability]
  -[SBHIconManager isEditingAllowedForIconView:]
  -[SBHIconManager presentedIconLocations]
  -[SBHIconManager overlayTodayViewController]
  -[SBHIconManager avocadoDescriptorProvider]
  -[SBHIconManager addNewIconsToDesignatedLocations:saveIconState:]
  -[SBHIconManager iconViewShouldBeginShortcutsPresentation:]
  -[SBHIconManager _discardEndEditingTimerAndDontResetUntilReasonIsRemoved:]
  -[SBHIconManager homeScreenPreviewView]
  -[SBHIconManager nestingViewController:interactionControllerForAnimationController:]
  -[SBHIconManager rootFolderControllerDidUndoWidgetIntroduction:]
  -[SBHIconManager isShowingLeadingCustomView]
  -[SBHIconManager setOverlayCoverSheetTodayViewVisible:]
  -[SBHIconManager finishInstallingIconAnimated:]
  -[SBHIconManager updateIconViewAccessoryVisibility]
  -[SBHIconManager animateToDefaultStateWithCompletionHandler:]
  -[SBHIconManager gridCellInfoOptions]
  -[SBHIconManager disableUserInteractionForWidgetDiscoverability]
  -[SBHIconManager iconDragManagerMultiItemIconDraggingDidChange:]
  -[SBHIconManager modalIntroductionViewController]
  -[SBHIconManager iconTapped:]
  -[SBHIconManager _removeAllPreventAvocadoBackgroundAssertions:]
  -[SBHIconManager iconViewShortcutsPresentationDidCancel:]
  -[SBHIconManager isVerticalWidgetIntroduction]
  -[SBHIconManager enumerateIconViewsDisplayedInAppPredictionsInLocationGroup:withOptions:usingBlock:]
  -[SBHIconManager dismissSpotlightOrLeadingCustomViewAnimated:]
  -[SBHIconManager proactiveWidgetSuggesterClient]
  -[SBHIconManager iconView:editingModeGestureRecognizerDidFire:]
  -[SBHIconManager rootFolderController:willUseTransitionContext:toTransitionToState:]
  -[SBHIconManager iconDragManager:additionalDragLiftScaleForIconView:]
  -[SBHIconManager resetIconLayoutWithOptions:]
  -[SBHIconManager appPredictionsIconViewDisplayingIconView:options:]
  -[SBHIconManager .cxx_destruct]
  -[SBHIconManager iconViewCanBecomeFocused:]
  -[SBHIconManager dismissModalInteractions]
  -[SBHIconManager _restartEditingEndTimer]
  -[SBHIconManager openedFolder]
  -[SBHIconManager iconDragManagerIconDraggingDidChange:]
  -[SBHIconManager iconViewShortcutsPresentationWillFinish:]
  -[SBHIconManager promoteSuggestedWidget:withinStack:]
  -[SBHIconManager updateVisibleIconsToShowLeafIcons:hideLeafIcons:forceRelayout:]
  -[SBHIconManager folder:listHiddenDidChange:]
  -[SBHIconManager rootFolderController:didEndOverscrollOnFirstPageWithVelocity:translation:]
  -[SBHIconManager iconImageCache]
  -[SBHIconManager backgroundViewForDockForRootFolderController:]
  -[SBHIconManager isEditingAllowed]
  -[SBHIconManager iconModel]
  -[SBHIconManager minimumHomeScreenScaleDidChange]
  -[SBHIconManager folderController:iconListView:iconDropSessionDidUpdate:]
  -[SBHIconManager folderController:iconListView:canHandleIconDropSession:]
  -[SBHIconManager enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHIconManager _addTouchedIconView:]
  -[SBHIconManager setPrecachedContentSizeCategory:]
  -[SBHIconManager _updateWidgetMultiplexingViewController:forIconView:]
  -[SBHIconManager _beginObservingLeafIconsInModel:]
  -[SBHIconManager _shouldLibraryOverlayAllowSwipeToDismissGesture]
  -[SBHIconManager saveOriginalIconStateForWidgetDiscoverability]
  -[SBHIconManager folderControllerForFolder:]
  -[SBHIconManager _determineIfAvocadoHostViewControllerIsVisible:withinStackViewController:]
  -[SBHIconManager succinctDescriptionBuilder]
  -[SBHIconManager setRootViewController:]
  -[SBHIconManager setLegibilitySettings:]
  -[SBHIconManager widgetStackViewController:viewControllerForDataSource:]
  -[SBHIconManager isRootFolderScrolling]
  -[SBHIconManager iconView:willRemoveIconImageView:]
  -[SBHIconManager _cullAvocadoBackgroundsForTimerFired:]
  -[SBHIconManager _proposedFolderNameForGrabbedIcon:recipientIcon:]
  -[SBHIconManager presentSpotlightFromSource:animated:completionHandler:]
  -[SBHIconManager isResettingRootIconLists]
  -[SBHIconManager folderControllerWantsToHideStatusBar:animated:]
  -[SBHIconManager setEditing:forIconLocation:]
  -[SBHIconManager layoutIconListsWithAnimationType:duration:forceRelayout:]
  -[SBHIconManager setForceShowWidgetIntroduction:]
  -[SBHIconManager statusBarEdgeInsetsForFolderController:]
  -[SBHIconManager isEditingAllowedForIconLocation:]
  -[SBHIconManager setDelegate:]
  -[SBHIconManager todayViewControllerDidAppear:]
  -[SBHIconManager overlayLibraryViewController]
  -[SBHIconManager contentOverlayInsetsFromParentIfAvailableForFolderController:]
  -[SBHIconManager leafIcon:didRemoveIconDataSource:]
  -[SBHIconManager _sizeCategoryDidChange:]
  -[SBHIconManager canPresentOverscrollLibraryForPageTransition]
  -[SBHIconManager currentInteractionContext]
  -[SBHIconManager maxExternalDockHeightForRootFolderController:]
  -[SBHIconManager iconViewForIcon:location:options:]
  -[SBHIconManager defaultWidgetsIconsRestoringRecord]
  -[SBHIconManager isShowingPullDownOrLeadingCustomViewSearch]
  -[SBHIconManager replaceApplicationPlaceholderWithApplication:]
  -[SBHIconManager replaceApplicationPlaceholderWithApplication:completionHandler:]
  -[SBHIconManager addWidgetStackWithIdentifiers:toPage:withSizeClass:]
  -[SBHIconManager addWidgets:toGridPath:overflowOptions:]
  -[SBHIconManager homeScreenSettings]
  -[SBHIconManager setDefaultWidgetsIconsRestoringRecord:]
  -[SBHIconManager isOverlayTodayOrLibraryViewVisible]
  -[SBHIconManager setModalIntroductionViewControllerIsPrewarming:]
  -[SBHIconManager removeFirstWidgetFromRootFolderListAtIndex:]
  -[SBHIconManager folderController:iconListView:iconViewForDroppingIconDragItem:proposedIconView:]
  -[SBHIconManager setIconModel:]
  -[SBHIconManager isIconViewRecycled:]
  -[SBHIconManager _personDetailInteractionContextForPersonURL:iconView:]
  -[SBHIconManager _processPendingDefaultIntents]
  -[SBHIconManager folderController:iconListView:performIconDrop:]
  -[SBHIconManager setEditingAutosaveDisableAssertion:]
  -[SBHIconManager isDisplayingIcon:queryOptions:]
  -[SBHIconManager disablesScrollingToLastIconPageForLibraryDismissal]
  -[SBHIconManager rootFolderControllerForIconDragManager:]
  -[SBHIconManager stackConfigurationInteractionForIconView:]
  -[SBHIconManager descriptionBuilderWithMultilinePrefix:]
  -[SBHIconManager firstIconViewForIcon:options:]
  -[SBHIconManager enumerateAppPredictionViewControllersWithIconViewsInIconLocationGroup:withOptions:usingBlock:]
  -[SBHIconManager addIcons:intoFolderIcon:openFolderOnFinish:completion:]
  -[SBHIconManager rootFolderController:statusBarInsetsDidChange:]
  -[SBHIconManager fakeStatusBarForFolderController:]
  -[SBHIconManager viewMap:maxRecycledViewsOfClass:]
  -[SBHIconManager init]
  -[SBHIconManager _homeScreenContentViewForPersonDetailInteractionTargetingIconView:]
  -[SBHIconManager addDebugIconOfSizeClass:toPage:iconIndex:]
  -[SBHIconManager getListView:folder:relativePath:forIndexPath:]
  -[SBHIconManager iconShouldAllowTap:]
  -[SBHIconManager iconModel:maxRowCountForListInRootFolderWithInterfaceOrientation:]
  -[SBHIconManager addIconToIgnoredList:options:completion:]
  -[SBHIconManager isIconContentPossiblyVisibleOverApplication]
  -[SBHIconManager libraryViewController:didAcceptDrop:]
  -[SBHIconManager _cancelAvocadoBackgroundCulling]
  -[SBHIconManager rootFolder:shouldBounceIcon:afterInsertingIcons:forIconList:inFolder:]
  -[SBHIconManager beginStopUpdatingDefaultWidgetsBumpedIconRecord]
  -[SBHIconManager iconDragManagerCanBeginIconDrags:]
  -[SBHIconManager iconViewDisplaysCloseBox:]
  -[SBHIconManager _createAppropriateRootViewControllerForRootFolder:]
  -[SBHIconManager showsAddWidgetButtonWhileEditing]
  -[SBHIconManager isIconCurrentlyOnscreen:]
  -[SBHIconManager todayViewController:contentVisibilityDidChange:]
  -[SBHIconManager trialClientManager]
  -[SBHIconManager defaultIconStateForIconModel:]
  -[SBHIconManager rootFolderControllerDidEditWidgetIntroduction:]
  -[SBHIconManager rootFolderController]
  -[SBHIconManager addWidgetsToEachPage]
  -[SBHIconManager _handleUpdatedConfiguration:forDataSource:ofIcon:archiving:]
  -[SBHIconManager dismissTodayOverlayForIconDragManager:]
  -[SBHIconManager iconDragManager:iconDropSessionDidEnter:]
  -[SBHIconManager isIconIgnored:]
  -[SBHIconManager iconView:configurationInteractionForDataSource:]
  -[SBHIconManager dequeueReusableIconViewOfClass:]
  -[SBHIconManager rootFolderController:didChangeSidebarVisibilityProgress:]
  -[SBHIconManager listRotatedLayoutClusterGridSizeClassForIconModel:]
  -[SBHIconManager interfaceOrientation]
  -[SBHIconManager contentVisibility]
  -[SBHIconManager overlayCoverSheetTodayViewController]
  -[SBHIconManager iconModel:listGridSizeForFolderClass:]
  -[SBHIconManager presentHomeScreenIconsAnimated:]
  -[SBHIconManager statusBarStyleRequestForFolderController:]
  -[SBHIconManager rootFolderController:handleInsertionForWidgetIcon:withReferenceIconView:fromPresenter:dismissViewControllerHandler:]
  -[SBHIconManager descriptionWithMultilinePrefix:]
  -[SBHIconManager iconGridSizeClassAreas]
  -[SBHIconManager iconModel:shouldPlaceIconOnIgnoredList:]
  -[SBHIconManager libraryViewController:willPresentSearchController:]
  -[SBHIconManager setChuisOnboardingWidgetViewControllers:]
  -[SBHIconManager informUsageMonitorOfVisibleIconRectsForTodayViewController:]
  -[SBHIconManager internalForceShowWidgetDiscoverability]
  -[SBHIconManager isShowingPullDownSearch]
  -[SBHIconManager folderController:iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBHIconManager icon:canReceiveGrabbedIcon:]
  -[SBHIconManager modalInteractionWillBegin:]
  -[SBHIconManager folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBHIconManager uninstallIcon:]
  -[SBHIconManager _finishResetRootIconListsReusingPreviousControllers:]
  -[SBHIconManager usageMonitor]
  -[SBHIconManager widgetDiscoverabilityServerSideEnabled]
  -[SBHIconManager widgetInsertionRippleIconAnimatorForIcon:iconListView:withReferenceIconView:]
  -[SBHIconManager widgetStackViewController:containerApplicationNameForDataSource:]
  -[SBHIconManager setAnimatingForUnscatter:]
  -[SBHIconManager setOriginalIconStateBeforeWidgetDiscoverability:]
  -[SBHIconManager setResettingRootIconLists:]
  -[SBHIconManager dismissModalInteractionsImmediately]
  -[SBHIconManager succinctDescription]
  -[SBHIconManager iconViewShowingContextMenu]
  -[SBHIconManager _intentForDataSource:inIcon:creatingIfNecessary:]
  -[SBHIconManager resetRootIconLists]
  -[SBHIconManager enableUserInteractionForWidgetDiscoverability]
  -[SBHIconManager setMaximumNumberOfWidgetsToMaintainPreventBackgroundAssertions:]
  -[SBHIconManager clearHighlightedIcon]
  -[SBHIconManager rootFolderController:noteDidRemoveSuggestedWidgetIcon:]
  -[SBHIconManager isEditingAllowedForIconListView:]
  -[SBHIconManager removeIcon:options:completion:]
  -[SBHIconManager _configureRootFolderConfiguration:]
  -[SBHIconManager _createRootTableControllerForRootFolder:]
  -[SBHIconManager didDeleteIconState:]
  -[SBHIconManager setWidgetDiscoverabilityHasRun:]
  -[SBHIconManager rootFolder]
  -[SBHIconManager hasAnimatingFolderChanged]
  -[SBHIconManager _isShowingLeadingCustomViewSearchOrTransitioning]
  -[SBHIconManager isFloatingDockVisible]
  -[SBHIconManager replaceHomescreenWithWidgets]
  -[SBHIconManager setListLayoutProvider:]
  -[SBHIconManager rootFolderController:willDismissPageManagementUsingAnimator:context:]
  -[SBHIconManager _removeReasonToNotResetEndEditingTimer:]
  -[SBHIconManager uninstallIcon:animate:completion:]
  -[SBHIconManager defaultFirstPageWidgetSizeClass]
  -[SBHIconManager setDefaultFirstPageWidgetDescriptors:]
  -[SBHIconManager setCurrentConfiguringIconView:]
  -[SBHIconManager isShowingModalInteraction]
  -[SBHIconManager setEditing:]
  -[SBHIconManager folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBHIconManager controllerClassForFolder:]
  -[SBHIconManager defaultSecondPageSuggestedWidgetIcons]
  -[SBHIconManager iconView:shouldContinueToUseBackgroundViewForComponents:]
  -[SBHIconManager layoutIconListsWithAnimationType:]
  -[SBHIconManager parallaxSettingsForComponentsOfIconView:]
  -[SBHIconManager prototypeSettingShowModalWidgetIntroduction]
  -[SBHIconManager _closeFolderController:animated:withCompletion:]
  -[SBHIconManager rootFolderController:didDismissWidgetEditingViewController:]
  -[SBHIconManager rootFolderController:dragPreviewForIconView:]
  -[SBHIconManager prototypeSetDefaultSecondPageWidgetIcons]
  -[SBHIconManager iconDragManager:wantsAnimatedRemovalOfIcon:]
  -[SBHIconManager setAnimatingFolderCreation:]
  -[SBHIconManager setOverlayLibraryViewVisible:]
  -[SBHIconManager isDisplayingIconView:inLocation:]
  -[SBHIconManager folderController:willRemoveFakeStatusBar:]
  -[SBHIconManager _cleanupAssertionForAvocadoHostViewController:reason:]
  -[SBHIconManager columnCountForTodayList]
  -[SBHIconManager _collectAvocadoHostViewControllersForWhenTodayViewControllerIsOccluded:]
  -[SBHIconManager setStopUpdatingDefaultWidgetsBumpedIconRecord:]
  -[SBHIconManager floatingDockViewController]
  -[SBHIconManager needsRelayout]
  -[SBHIconManager firstIconViewForIcon:inLocations:]
  -[SBHIconManager highlightedIconView]
  -[SBHIconManager iconView:applicationShortcutItemsWithProposedItems:]
  -[SBHIconManager revealIcon:animated:completionHandler:]
  -[SBHIconManager isOverlayTodayViewVisible]
  -[SBHIconManager setOverlayLibraryViewController:]
  -[SBHIconManager iconViewClass]
  -[SBHIconManager _iconModelWillLayout:]
  -[SBHIconManager createNewFolderFromRecipientIcon:grabbedIcon:]
  -[SBHIconManager isIconVisiblyRepresented:]
  -[SBHIconManager _tryScrollToIconToRevealAnimated:]
  -[SBHIconManager addDefaultSecondPageWidgetsToHomeScreen:]
  -[SBHIconManager addDebugIconOfSizeClass:toPage:coordinate:]
  -[SBHIconManager multiplexingWrapperViewControllerDidChangeGridAlignment:]
  -[SBHIconManager unscatterAnimated:afterDelay:withCompletion:]
  -[SBHIconManager setAnimatingFolderOpeningOrClosing:]
  -[SBHIconManager defaultSecondPageWidgetSizeClass]
  -[SBHIconManager rootViewForIconDragManager:]
  -[SBHIconManager isDisplayingIcon:inLocations:]
  -[SBHIconManager _restartAvocadoBackgroundCullTimer]
  -[SBHIconManager uninstallIcon:animate:]
  -[SBHIconManager setDefaultSecondPageWidgetSizeClass:]
  -[SBHIconManager gridSizeClassSizesForIconModel:]
  -[SBHIconManager widgetStackViewController:didRemoveViewController:]
  -[SBHIconManager performAfterCachingWidgetIntentsUsingBlock:]
  -[SBHIconManager rootFolderController:wantsToAdjustLeadingCustomContentForEdgeBounceForScrollOffset:]
  -[SBHIconManager iconViewQueryableForIconDragManager:]
  -[SBHIconManager isShowingOrTransitioningToLeadingCustomView]
  -[SBHIconManager closeFolderAnimated:withCompletion:]
  -[SBHIconManager gridCellInfoOptionsForOrientation:]
  -[SBHIconManager hideSuggestedWidgetFromStack:]
  -[SBHIconManager iconDragManager]
  -[SBHIconManager iconDragManager:canAddDragItemsToSession:fromIconView:]
  -[SBHIconManager iconsShouldAllowCloseBoxes]
  -[SBHIconManager _loadAndSaveDefaultIntentIfNecessaryForWidget:ofIcon:viewController:]
  -[SBHIconManager addReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:]
  -[SBHIconManager rootFolderController:didOverscrollOnFirstPageByAmount:]
  -[SBHIconManager hasOpenFolder]
  -[SBHIconManager controllerClassForFolderClass:]
  -[SBHIconManager _folderDidFinishOpenClose:animated:success:]
  -[SBHIconManager setOverlayTodayViewController:]
  -[SBHIconManager _iconForDescriptor:]
  -[SBHIconManager iconModel:customInsertionIndexPathForIcon:inRootFolder:]
  -[SBHIconManager prototypeSettingShowExtraLargeTVWidget]
  -[SBHIconManager isTransitioning]
  -[SBHIconManager addDefaultFirstPageWidgetsToHomeScreen:]
  -[SBHIconManager listGridCellInfoOptionsForIconDragManager:]
  -[SBHIconManager openedFolderController]
  -[SBHIconManager transitionEventQueue]
  -[SBHIconManager intentForWidget:ofIcon:]
  -[SBHIconManager columnCountForTodayListForRootFolder:]
  -[SBHIconManager defaultWidgetsIconsRestoringRecordOriginalIndex]
  -[SBHIconManager rootFolderController:willDismissWidgetEditingViewController:]
  -[SBHIconManager precachedContentSizeCategory]
  -[SBHIconManager setHighlightedIconView:]
  -[SBHIconManager allowedGridSizeClassesForTodayListForIconModel:]
  -[SBHIconManager isEditing]
  -[SBHIconManager setCanPresentOverscrollLibraryForPageTransition:]
  -[SBHIconManager todayViewControllerDidEndScrolling:]
  -[SBHIconManager _archivedIntentForDataSource:inIcon:loadingIfNecessary:]
  -[SBHIconManager folder:didAddIcons:removedIcons:]
  -[SBHIconManager delegate]
  -[SBHIconManager isDisplayingIconView:]
  -[SBHIconManager applyOriginaliconStateForWidgetDiscoverability]
  -[SBHIconManager homescreenIconAccessoryViewMap]
  -[SBHIconManager _setupStateCaptureHandleIfNeeded]
  -[SBHIconManager endStopUpdatingDefaultWidgetsBumpedIconRecord]
  -[SBHIconManager iconModel:localizedFolderNameForDefaultDisplayName:]
  -[SBHIconManager folderController:willCreateInnerFolderControllerWithConfiguration:]
  -[SBHIconManager addSuggestedActiveWidgetToStack:]
  -[SBHIconManager rootFolderController:vendorNameForAppWithBundleIdentifiers:]
  -[SBHIconManager immediateDownloadSpringBoardHomeTrialSettingsWhenNeeded]
  -[SBHIconManager folderController:canChangeCurrentPageIndexToIndex:]
  -[SBHIconManager addFolderPresentationObserver:]
  -[SBHIconManager settings:changedValueForKey:]
  -[SBHIconManager setIsVerticalWidgetIntroduction:]
  -[SBHIconManager _containerViewControllerForPersonDetailInteractionTargetingIconView:]
  -[SBHIconManager popToCurrentRootIconList]
  -[SBHIconManager _willAnimateWidgetInsertion]
  -[SBHIconManager iconModel:launchIcon:fromLocation:context:]
  -[SBHIconManager isScrolling]
  -[SBHIconManager widgetBackgroundViewMap]
  -[SBHIconManager iconView:item:willAnimateDragCancelWithAnimator:]
  -[SBHIconManager prototypeSettingEditButtonAsUndo]
  -[SBHIconManager enumerateIconViewQueryableChildrenUsingBlock:]
  -[SBHIconManager homescreenIconLabelAccessoryViewMap]
  -[SBHIconManager iconLocationForList:inFolder:ofRootFolder:]
  -[SBHIconManager nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBHIconManager noteInterfaceOrientationChanged]
  -[SBHIconManager recycleIconView:]
  -[SBHIconManager addNewIconToDesignatedLocation:options:]
  -[SBHIconManager rootFolderControllerCanUseSeparateWindowForRotation:]
  -[SBHIconManager iconView:configurationDidUpdateWithInteraction:]
  -[SBHIconManager defaultIconLayoutAnimationDurationForIconDragManager:]
  -[SBHIconManager firstIconViewForIcon:]
  -[SBHIconManager folderControllerShouldClose:withPinchGesture:]
  -[SBHIconManager folderController:iconListView:iconDropSessionDidExit:]
  -[SBHIconManager _scrollToLastIconPageForLibraryOverlayDismissalIfNecessary]
  -[SBHIconManager widgetIconIsOnboardingWidget:]
  -[SBHIconManager canDismissOverscrollLibraryForPageTransition]
  -[SBHIconManager hideSiriSuggestionOnWidgetFromStack:]
  -[SBHIconManager folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBHIconManager folderController:draggedIconShouldDropFromListView:]
  -[SBHIconManager _removeAssertionsForNowOccludedTodayViewController:]
  -[SBHIconManager canSaveIconState:]
  -[SBHIconManager isTransitioningHomeScreenState]
  -[SBHIconManager screenSnapshotProviderForComponentsOfIconView:]
  -[SBHIconManager setCanDismissOverscrollLibraryForPageTransition:]
  -[SBHIconManager folderControllerWillOpen:]
  -[SBHIconManager _scheduleAvocadoBackgroundCullingForReason:interval:]
  -[SBHIconManager setEditingEndTimer:]
  -[SBHIconManager postResetPathIdentifiers]
  -[SBHIconManager setAtxIconRanker:]
  -[SBHIconManager libraryViewController:willLaunchIcon:fromLocation:]
  -[SBHIconManager containerBundleIdentifierForDataSource:]
  -[SBHIconManager hasRootFolderController]
  -[SBHIconManager firstIconViewWithOptions:iconPassingTest:]
  -[SBHIconManager dealloc]
  -[SBHIconManager allowedGridSizeClassesForDockForRootFolder:]
  -[SBHIconManager iconAllowsBadging:]
  -[SBHIconManager removeWidget:fromStack:]
  -[SBHIconManager folderControllerShouldBeginEditing:withHaptic:]
  -[SBHIconManager iconDragManager:didEndDragOriginatingFromIconView:userDidBeginDrag:lastUserInteractionDate:]
  -[SBHIconManager removeFolderPresentationObserver:]
  -[SBHIconManager folderController:accessibilityTintColorForScreenRect:]
  -[SBHIconManager refreshAppPredictionBadges]
  -[SBHIconManager rootFolderController:promoteSuggestedWidget:withinStack:]
  -[SBHIconManager folderControllerDidEndScrolling:]
  -[SBHIconManager _rootFolderForRootViewControllerForRootFolder:]
  -[SBHIconManager setUsageMonitor:]
  -[SBHIconManager viewControllerForPresentingViewControllers]
  -[SBHIconManager accessibilityTintColorForScreenRect:]
  -[SBHIconManager setDefaultSecondPageWidgetDescriptors:]
  -[SBHIconManager _createRootFolderControllerForRootFolder:]
  -[SBHIconManager allowsNestedFoldersForIconDragManager:]
  -[SBHIconManager iconModel:allowedGridSizeClassesForFolderClass:]
  -[SBHIconManager folderControllerWillBeginScrolling:]
  -[SBHIconManager _cleanupForClosingFolderAnimated:]
  -[SBHIconManager isUsageMonitoringEnabled]
  -[SBHIconManager replaceFolderIcon:byContainedIcon:animated:]
  -[SBHIconManager rootFolderController:didEndOverscrollOnLastPageWithVelocity:translation:]
  -[SBHIconManager enumerateDisplayedIconViewsUsingBlock:]
  -[SBHIconManager setClosingFolder:]
  -[SBHIconManager setDisablesScrollingToLastIconPageForLibraryDismissal:]
  -[SBHIconManager iconView:willRemoveIconAccessoryView:]
  -[SBHIconManager folderController:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBHIconManager iconView:labelImageWithParameters:]
  -[SBHIconManager iconDragManager:draggingStartLocationForIconView:proposedStartLocation:]
  -[SBHIconManager dockListView]
  -[SBHIconManager enumerateIconViewQueryableChildrenWithOptions:usingBlock:]
  -[SBHIconManager listLayoutProvider]
  -[SBHIconManager launchFromIconView:withActions:]
  -[SBHIconManager defaultSecondPageWidgetDescriptors]
  -[SBHIconManager rootFolderController:didOverscrollOnLastPageByAmount:]
  -[SBHIconManager multiplexingManager:shouldCacheRecentViewController:forIdentifier:]
  -[SBHIconManager setIconToReveal:revealingPrevious:]
  -[SBHIconManager animator:canAlterViewHierarchyDuringCleanupUsingBlock:]
  -[SBHIconManager dismissSpotlightOrTodayViewAnimated:]
  -[SBHIconManager _handleRemovedDataSource:ofIcon:]
  -[SBHIconManager iconDragManager:canAcceptDropInSession:inIconListView:]
  -[SBHIconManager _archiveConfiguration:forDataSource:ofIcon:]
  -[SBHIconManager defaultWidgetsBumpedIconUsageRanking]
  -[SBHIconManager dismissLibraryOverlayForIconDragManager:]
  -[SBHIconManager originalIconStateBeforeWidgetDiscoverability]
  -[SBHIconManager preferredExternalDockVerticalMarginForRootFolderController:]
  -[SBHIconManager canOpenFolderForIcon:]
  -[SBHIconManager scrollToDefaultWidgets]
  -[SBHIconManager iconView:supportsConfigurationForDataSource:]
  -[SBHIconManager multiplexingWrapperViewControllerWillChangeGridAlignment:]
  -[SBHIconManager addDebugIconOfSizeClass:toPage:coordinate:orientation:]
  -[SBHIconManager changeSizeOfWidgetIcon:toSizeClass:]
  -[SBHIconManager addWidgetSheetIconImageCache]
  -[SBHIconManager shuffleWidgetStackForTestRecipe]
  -[SBHIconManager setWidgetIntroductionCounter:]
  -[SBHIconManager _ensureWidgetIsVisibleForDebuggingWithDescriptor:sizeClass:]
  -[SBHIconManager undoDefaultWidgets:]
  -[SBHIconManager rootFolderController:noteDragItemWasConsumedExternallyForDropSession:]
  -[SBHIconManager _updateOverscrollModalLibraryForScrollToPresented:]
  -[SBHIconManager iconViewShortcutsPresentationWillBegin:]
  -[SBHIconManager isDisplayingIcon:inLocation:]
  -[SBHIconManager popModalInteraction]
  -[SBHIconManager openFolderIcon:location:animated:withCompletion:]
  -[SBHIconManager minimumHomeScreenScaleForFolderController:]
  -[SBHIconManager iconViewDelegateForExternalDragForIconDragManager:]
  -[SBHIconManager setDefaultSecondPageSuggestedWidgetIcons:]
  -[SBHIconManager setIconToReveal:]
  -[SBHIconManager iconView:configurationDidEndWithInteraction:]
  -[SBHIconManager prototypeSettingShowWidgetIntroduction]
  -[SBHIconManager setContentVisibility:]
  -[SBHIconManager widgetDiscoverabilityHasRun]
  -[SBHIconManager rootFolderController:draggedIconForStackConfigurationInteractionForIdentifier:]
  -[SBHIconManager iconView:didChangeCustomImageViewController:]
  -[SBHIconManager checkForInvalidWidgets]
  -[SBHIconManager dismissIconContextMenu]
  -[SBHIconManager isDisplayingIcon:]
  -[SBHIconManager iconView:iconAccessoryViewOfClass:]
  -[SBHIconManager moveIconToHiddenPage:]
  -[SBHIconManager recycledViewsContainerProviderForViewMap:]
  -[SBHIconManager _animateFolderIcon:open:location:animated:withCompletion:]
  -[SBHIconManager firstPageLeafIdentifiersForIconModel:]
  -[SBHIconManager iconModel:shouldAvoidPlacingIconOnFirstPage:]
  -[SBHIconManager removeWidgetDiscoverabilityContainerViewsAndPopoverWhenNeeded:]
  -[SBHIconManager isPresentingIconLocation:]
  -[SBHIconManager animateModalWidgetDiscoverabilityIntroductionWhenNeededWithPresentCompletion:dismissCompletion:]
  -[SBHIconManager setPreviewInteractingIconView:]
  -[SBHIconManager updateWidgetDiscoverabilityUserPreferencesByDeletingWidget:]
  -[SBHIconManager legibilitySettings]
  -[SBHIconManager widgetIntroductionCounter]
  -[SBHIconManager folderControllerShouldEndEditing:]
  -[SBHIconManager editingDidChangeWithFeedbackBehavior:]
  -[SBHIconManager iconView:session:willEndWithOperation:]
  -[SBHIconManager folderControllerWillClose:]
  -[SBHIconManager iconView:backgroundViewForComponentsOfType:]
  -[SBHIconManager layoutIconListsWithAnimationType:forceRelayout:]
  -[SBHIconManager _noteUserIsInteractingWithIcons]
  -[SBHIconManager iconPageIndicatorImageSetCache]
  -[SBHIconManager prewarmModalWidgetIntroductionWithCompletion:]
  -[SBHIconManager _isShowingOrTransitioningToSearchableLeadingCustomView]
  -[SBHIconManager presentLibraryOverlayForIconDragManager:]
  -[SBHIconManager setEditing:fromIconListView:]
  -[SBHIconManager distanceToTopOfSpotlightIconsForRootFolderController:]


SBHFakeApplicationPlaceholder : NSObject <SBHApplicationPlaceholder>
 @property  NSString *applicationBundleIdentifier
 @property  NSString *applicationDisplayName
 @property  double progress
 @property  BOOL active
 @property  BOOL waiting
 @property  BOOL paused
 @property  BOOL pausable
 @property  BOOL failed
 @property  BOOL cancelable
 @property  BOOL installing
 @property  BOOL downloading
 @property  BOOL prioritizable
 @property  BOOL cloudDemoted
 @property  BOOL appClip
 @property  BOOL newAppInstallFromStore
 @property  NSString *uniqueIdentifier
 @property  NSString *configurationStorageIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHFakeApplicationPlaceholder applicationDisplayName]
  -[SBHFakeApplicationPlaceholder icon:displayNameForLocation:]
  -[SBHFakeApplicationPlaceholder applicationBundleIdentifier]
  -[SBHFakeApplicationPlaceholder uniqueIdentifier]
  -[SBHFakeApplicationPlaceholder icon:imageWithInfo:]
  -[SBHFakeApplicationPlaceholder priorityForIcon:]
  -[SBHFakeApplicationPlaceholder .cxx_destruct]
  -[SBHFakeApplicationPlaceholder setApplicationBundleIdentifier:]
  -[SBHFakeApplicationPlaceholder progressPercentForIcon:]
  -[SBHFakeApplicationPlaceholder progress]
  -[SBHFakeApplicationPlaceholder setApplicationDisplayName:]
  -[SBHFakeApplicationPlaceholder setProgress:]
  -[SBHFakeApplicationPlaceholder progressStateForIcon:]


SBHLibraryOverscrollViewController : UIViewController <SBHRootFolderCustomViewPresenting>
 @property  BOOL shouldBeIndicatedInPageControl
 @property  <SBIconViewQuerying> *iconViewQueryable
 @property  <SBIconLocationPresenting> *iconLocationPresenter
 @property  <SBIconListViewQuerying> *iconListViewQueryable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long contentVisibility

  // instance methods
  -[SBHLibraryOverscrollViewController .cxx_destruct]
  -[SBHLibraryOverscrollViewController setLegibilitySettings:]
  -[SBHLibraryOverscrollViewController contentVisibility]
  -[SBHLibraryOverscrollViewController setContentVisibility:]
  -[SBHLibraryOverscrollViewController legibilitySettings]
  -[SBHLibraryOverscrollViewController shouldBeIndicatedInPageControl]


SBHTableViewController : UITableViewController
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} keyboardFrame
 @property  BOOL showNoResultsView
 @property  UIView *noResultsView

  // class methods
  +[SBHTableViewController tableViewClass]

  // instance methods
  -[SBHTableViewController _keyboardWillShow:]
  -[SBHTableViewController .cxx_destruct]
  -[SBHTableViewController viewDidLoad]
  -[SBHTableViewController keyboardFrame]
  -[SBHTableViewController headerTopOccludingInset]
  -[SBHTableViewController viewWillDisappear:]
  -[SBHTableViewController viewWillAppear:]
  -[SBHTableViewController _keyboardWillDismiss:]
  -[SBHTableViewController _resetNoResultsView]
  -[SBHTableViewController showNoResultsView]
  -[SBHTableViewController _removeAutoLayoutConstraintsForNoResultsView]
  -[SBHTableViewController _addAutoLayoutConstraintsForNoResultsView]
  -[SBHTableViewController _reloadNoResultsViewForKeyboardNotification:]
  -[SBHTableViewController _keyboardWillResize:]
  -[SBHTableViewController setNoResultsView:]
  -[SBHTableViewController setShowNoResultsView:]
  -[SBHTableViewController noResultsView]


SBHStackConfigurationApertureView : UIView
 @property  BOOL usesConcentricCorners
 @property  SBIconListView *iconListView
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  UIScrollView *contentScrollView
 @property  NSSet *backgroundViews
 @property  UIView *widgetStackMatchingBackgroundView

  // instance methods
  -[SBHStackConfigurationApertureView contentScrollView]
  -[SBHStackConfigurationApertureView traitCollectionDidChange:]
  -[SBHStackConfigurationApertureView .cxx_destruct]
  -[SBHStackConfigurationApertureView layoutSubviews]
  -[SBHStackConfigurationApertureView iconImageInfo]
  -[SBHStackConfigurationApertureView iconListView]
  -[SBHStackConfigurationApertureView initWithFrame:]
  -[SBHStackConfigurationApertureView setIconImageInfo:]
  -[SBHStackConfigurationApertureView setContentScrollView:]
  -[SBHStackConfigurationApertureView _updateFilterViewForUserInterfaceStyle:]
  -[SBHStackConfigurationApertureView usesConcentricCorners]
  -[SBHStackConfigurationApertureView setUsesConcentricCorners:]
  -[SBHStackConfigurationApertureView backgroundViews]
  -[SBHStackConfigurationApertureView widgetStackMatchingBackgroundView]
  -[SBHStackConfigurationApertureView setIconListView:]


SBRootFolderDockIconListView : SBDockIconListView

SBHMultiplexingManager : NSObject
 @property  <SBHMultiplexingManagerDelegate> *delegate
 @property  NSMutableDictionary *viewControllersForIdentifier
 @property  NSMutableDictionary *multiplexingViewControllersForIdentifier
 @property  NSMutableDictionary *cachedRecentViewControllersForIdentifier
 @property  NSMutableOrderedSet *cachedRecentViewControllerIdentifiers
 @property  unsigned long cachedRecentViewControllerCountLimit

  // instance methods
  -[SBHMultiplexingManager discardMultiplexingViewController:]
  -[SBHMultiplexingManager setCachedRecentViewControllersForIdentifier:]
  -[SBHMultiplexingManager .cxx_destruct]
  -[SBHMultiplexingManager _trimCachedRecentViewControllers]
  -[SBHMultiplexingManager succinctDescriptionBuilder]
  -[SBHMultiplexingManager cachedRecentViewControllerCountLimit]
  -[SBHMultiplexingManager discardCachedRecentViewControllersForIdentifier:]
  -[SBHMultiplexingManager setDelegate:]
  -[SBHMultiplexingManager enumerateAllViewControllersUsingBlock:]
  -[SBHMultiplexingManager descriptionBuilderWithMultilinePrefix:]
  -[SBHMultiplexingManager descriptionWithMultilinePrefix:]
  -[SBHMultiplexingManager activeMultiplexingViewControllerForIdentifier:]
  -[SBHMultiplexingManager newMultiplexingViewControllerForIdentifier:atLevel:]
  -[SBHMultiplexingManager succinctDescription]
  -[SBHMultiplexingManager viewControllersForIdentifier]
  -[SBHMultiplexingManager _cacheLastDiscardedViewController:forIdentifier:]
  -[SBHMultiplexingManager initWithDelegate:]
  -[SBHMultiplexingManager setViewControllersForIdentifier:]
  -[SBHMultiplexingManager setCachedRecentViewControllerCountLimit:]
  -[SBHMultiplexingManager delegate]
  -[SBHMultiplexingManager _activeMultiplexingViewControllerForIdentifier:]
  -[SBHMultiplexingManager validateActiveMultiplexingViewControllerForIdentifier:]
  -[SBHMultiplexingManager viewControllerForIdentifier:]
  -[SBHMultiplexingManager multiplexingViewControllersForIdentifier]
  -[SBHMultiplexingManager cachedRecentViewControllersForIdentifier]
  -[SBHMultiplexingManager cachedRecentViewControllerIdentifiers]
  -[SBHMultiplexingManager setMultiplexingViewControllersForIdentifier:]
  -[SBHMultiplexingManager setViewController:forIdentifier:]
  -[SBHMultiplexingManager setCachedRecentViewControllerIdentifiers:]
  -[SBHMultiplexingManager discardCachedRecentViewControllers]
  -[SBHMultiplexingManager activeMultiplexingViewControllerForViewController:]
  -[SBHMultiplexingManager hasViewControllerForIdentifier:]
  -[SBHMultiplexingManager _modifyViewControllersForIdentifier:reusingCacheViewControllersIfNecessary:withBlock:]


SBIconIndexMutableList : NSObject <SBIconIndexNodeObserver, NSFastEnumeration, NSCopying>
 @property  <SBIconIndexMutableListObserver> *observer
 @property  <SBIconIndexNode> *firstNode
 @property  <SBIconIndexNode> *lastNode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconIndexMutableList insertNodes:atIndexes:]
  -[SBIconIndexMutableList sortUsingSelector:]
  -[SBIconIndexMutableList moveNode:toIndex:]
  -[SBIconIndexMutableList indexOfNodePassingTest:]
  -[SBIconIndexMutableList indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBIconIndexMutableList removeNodeAtIndex:]
  -[SBIconIndexMutableList indexDescriptionWithPrefix:]
  -[SBIconIndexMutableList setNodes:]
  -[SBIconIndexMutableList .cxx_destruct]
  -[SBIconIndexMutableList insertNode:atIndex:]
  -[SBIconIndexMutableList count]
  -[SBIconIndexMutableList containsNodeIdentifier:]
  -[SBIconIndexMutableList nodesAtIndexes:]
  -[SBIconIndexMutableList removeAllNodes]
  -[SBIconIndexMutableList enumerateNodesUsingBlock:]
  -[SBIconIndexMutableList addNode:]
  -[SBIconIndexMutableList firstNode]
  -[SBIconIndexMutableList assertIndexCoherent]
  -[SBIconIndexMutableList indexOfNode:]
  -[SBIconIndexMutableList nodesAlongIndexPath:consumedIndexes:]
  -[SBIconIndexMutableList node:didRemoveContainedNodeIdentifiers:]
  -[SBIconIndexMutableList init]
  -[SBIconIndexMutableList removeNodesInArray:]
  -[SBIconIndexMutableList removeNode:]
  -[SBIconIndexMutableList removeNodesInRange:]
  -[SBIconIndexMutableList nodes]
  -[SBIconIndexMutableList nodeDidMoveContainedNodes:]
  -[SBIconIndexMutableList indexOfNodeAtIndexes:options:passingTest:]
  -[SBIconIndexMutableList indexOfNodeWithOptions:passingTest:]
  -[SBIconIndexMutableList moveNodes:toContiguousIndicesStartingAt:]
  -[SBIconIndexMutableList nodesInRange:]
  -[SBIconIndexMutableList observer]
  -[SBIconIndexMutableList indexesOfNodesPassingTest:]
  -[SBIconIndexMutableList countByEnumeratingWithState:objects:count:]
  -[SBIconIndexMutableList nodesContainingNodeIdentifier:]
  -[SBIconIndexMutableList containsNode:]
  -[SBIconIndexMutableList setObserver:]
  -[SBIconIndexMutableList removeLastNode]
  -[SBIconIndexMutableList dealloc]
  -[SBIconIndexMutableList copyWithZone:]
  -[SBIconIndexMutableList removeNodesAtIndexes:]
  -[SBIconIndexMutableList enumerateNodesAtIndexes:options:usingBlock:]
  -[SBIconIndexMutableList sortUsingComparator:]
  -[SBIconIndexMutableList containedNodeIdentifiers]
  -[SBIconIndexMutableList enumerateNodesWithOptions:usingBlock:]
  -[SBIconIndexMutableList node:didAddContainedNodeIdentifiers:]
  -[SBIconIndexMutableList nodeAtIndex:]
  -[SBIconIndexMutableList lastNode]
  -[SBIconIndexMutableList replaceNodeAtIndex:withNode:]


SBHPeopleWidgetPersonDetailInteractionContext : NSObject <NSCopying>
 @property  NSURL *personURL
 @property  SBIconView *sourceIconView
 @property  SBIconView *referenceIconView
 @property  UIViewController *containerViewController
 @property  UIView *homeScreenContentView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} homeScreenContentFrame

  // instance methods
  -[SBHPeopleWidgetPersonDetailInteractionContext containerViewController]
  -[SBHPeopleWidgetPersonDetailInteractionContext .cxx_destruct]
  -[SBHPeopleWidgetPersonDetailInteractionContext referenceIconView]
  -[SBHPeopleWidgetPersonDetailInteractionContext copyWithZone:]
  -[SBHPeopleWidgetPersonDetailInteractionContext personURL]
  -[SBHPeopleWidgetPersonDetailInteractionContext homeScreenContentView]
  -[SBHPeopleWidgetPersonDetailInteractionContext initWithPersonURL:sourceIconView:referenceIconView:containerViewController:homeScreenContentView:homeScreenContentFrame:]
  -[SBHPeopleWidgetPersonDetailInteractionContext sourceIconView]
  -[SBHPeopleWidgetPersonDetailInteractionContext homeScreenContentFrame]


SBHAddWidgetSheetGalleryCollectionViewCell : UICollectionViewCell
 @property  UIView *highlightView
 @property  SBHWidgetWrapperViewController *widgetWrapperViewController
 @property  UILabel *debugLabel

  // instance methods
  -[SBHAddWidgetSheetGalleryCollectionViewCell setHighlighted:]
  -[SBHAddWidgetSheetGalleryCollectionViewCell .cxx_destruct]
  -[SBHAddWidgetSheetGalleryCollectionViewCell layoutSubviews]
  -[SBHAddWidgetSheetGalleryCollectionViewCell setSelected:]
  -[SBHAddWidgetSheetGalleryCollectionViewCell prepareForReuse]
  -[SBHAddWidgetSheetGalleryCollectionViewCell debugLabel]
  -[SBHAddWidgetSheetGalleryCollectionViewCell initWithFrame:]
  -[SBHAddWidgetSheetGalleryCollectionViewCell setHighlightView:]
  -[SBHAddWidgetSheetGalleryCollectionViewCell highlightView]
  -[SBHAddWidgetSheetGalleryCollectionViewCell widgetWrapperViewController]
  -[SBHAddWidgetSheetGalleryCollectionViewCell setWidgetWrapperViewController:]


SBHPeopleWidgetPersonDetailInteractionSettings : PTSettings
 @property  BOOL usesCardStyle
 @property  double cardWidth
 @property  double cardHeightPortrait
 @property  double cardHeightLandscape
 @property  double cardCornerRadius
 @property  double cardStyleHomeScreenScale
 @property  double cardStyleHomeScreenAlpha
 @property  double cardStyleDarkeningTintAlpha
 @property  double fullScreenHomeScreenScale
 @property  double fullScreenHomeScreenAlpha
 @property  double fullScreenDarkeningTintAlpha
 @property  SBFFluidBehaviorSettings *zoomAnimationSettings
 @property  SBFFluidBehaviorSettings *fadeOutAnimationSettings
 @property  double percentMargin
 @property  double fractionBetweenSourceAndContainerX
 @property  double fractionBetweenSourceAndContainerY

  // class methods
  +[SBHPeopleWidgetPersonDetailInteractionSettings settingsControllerModule]

  // instance methods
  -[SBHPeopleWidgetPersonDetailInteractionSettings .cxx_destruct]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setDefaultValues]
  -[SBHPeopleWidgetPersonDetailInteractionSettings cardWidth]
  -[SBHPeopleWidgetPersonDetailInteractionSettings usesCardStyle]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setUsesCardStyle:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setCardWidth:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setCardHeightPortrait:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setCardHeightLandscape:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setCardCornerRadius:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setCardStyleHomeScreenScale:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setCardStyleHomeScreenAlpha:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setCardStyleDarkeningTintAlpha:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setFullScreenHomeScreenScale:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setFullScreenHomeScreenAlpha:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setFullScreenDarkeningTintAlpha:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings zoomAnimationSettings]
  -[SBHPeopleWidgetPersonDetailInteractionSettings fadeOutAnimationSettings]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setPercentMargin:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setFractionBetweenSourceAndContainerX:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setFractionBetweenSourceAndContainerY:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings cardHeightPortrait]
  -[SBHPeopleWidgetPersonDetailInteractionSettings cardHeightLandscape]
  -[SBHPeopleWidgetPersonDetailInteractionSettings cardCornerRadius]
  -[SBHPeopleWidgetPersonDetailInteractionSettings cardStyleHomeScreenScale]
  -[SBHPeopleWidgetPersonDetailInteractionSettings cardStyleHomeScreenAlpha]
  -[SBHPeopleWidgetPersonDetailInteractionSettings cardStyleDarkeningTintAlpha]
  -[SBHPeopleWidgetPersonDetailInteractionSettings fullScreenHomeScreenScale]
  -[SBHPeopleWidgetPersonDetailInteractionSettings fullScreenHomeScreenAlpha]
  -[SBHPeopleWidgetPersonDetailInteractionSettings fullScreenDarkeningTintAlpha]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setZoomAnimationSettings:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings setFadeOutAnimationSettings:]
  -[SBHPeopleWidgetPersonDetailInteractionSettings percentMargin]
  -[SBHPeopleWidgetPersonDetailInteractionSettings fractionBetweenSourceAndContainerX]
  -[SBHPeopleWidgetPersonDetailInteractionSettings fractionBetweenSourceAndContainerY]


SBHShadowedWidgetView : UIView
 @property  UIView *contentView
 @property  UIView *shadowView
 @property  BOOL perspectiveEnabled
 @property  double cornerRadius
 @property  {CGAffineTransform=dddddd} contentTransform
 @property  {CGAffineTransform=dddddd} shadowSupplementalTransform

  // class methods
  +[SBHShadowedWidgetView layerClass]

  // instance methods
  -[SBHShadowedWidgetView _layoutShadowView]
  -[SBHShadowedWidgetView .cxx_destruct]
  -[SBHShadowedWidgetView layoutSubviews]
  -[SBHShadowedWidgetView contentView]
  -[SBHShadowedWidgetView _updateShadowView]
  -[SBHShadowedWidgetView shadowView]
  -[SBHShadowedWidgetView setCornerRadius:]
  -[SBHShadowedWidgetView setShadowView:]
  -[SBHShadowedWidgetView cornerRadius]
  -[SBHShadowedWidgetView setContentTransform:]
  -[SBHShadowedWidgetView setContentView:]
  -[SBHShadowedWidgetView contentTransform]
  -[SBHShadowedWidgetView setShadowSupplementalTransform:]
  -[SBHShadowedWidgetView setPerspectiveEnabled:]
  -[SBHShadowedWidgetView _updateZPositions]
  -[SBHShadowedWidgetView initWithContentView:shadowView:perspectiveEnabled:]
  -[SBHShadowedWidgetView isPerspectiveEnabled]
  -[SBHShadowedWidgetView shadowSupplementalTransform]


SBHPortaledShadowedWidgetView : SBHShadowedWidgetView
 @property  _UIPortalView *contentView
 @property  _UIPortalView *shadowView
 @property  BOOL hidesSourceViews

  // instance methods
  -[SBHPortaledShadowedWidgetView initWithContentView:shadowView:perspectiveEnabled:]
  -[SBHPortaledShadowedWidgetView setHidesSourceViews:]
  -[SBHPortaledShadowedWidgetView hidesSourceViews]


SBIconPageIndicatorImageSetResult : NSObject
 @property  _UILegibilityImageSet *pageIndicatorSet
 @property  _UILegibilityImageSet *enabledPageIndicatorSet

  // instance methods
  -[SBIconPageIndicatorImageSetResult .cxx_destruct]
  -[SBIconPageIndicatorImageSetResult initWithIndicatorSet:enabledIndicatorSet:]
  -[SBIconPageIndicatorImageSetResult pageIndicatorSet]
  -[SBIconPageIndicatorImageSetResult enabledPageIndicatorSet]


SBIconPageIndicatorImageSetCache : NSObject
 @property  _UILegibilitySettings *legibilitySettings

  // instance methods
  -[SBIconPageIndicatorImageSetCache .cxx_destruct]
  -[SBIconPageIndicatorImageSetCache setLegibilitySettings:]
  -[SBIconPageIndicatorImageSetCache legibilitySettings]
  -[SBIconPageIndicatorImageSetCache _emptyPageIndicatorSet]
  -[SBIconPageIndicatorImageSetCache pageIndicatorImageSetForLegibilitySettings:]
  -[SBIconPageIndicatorImageSetCache searchIndicatorImageSetForLegibilitySettings:]
  -[SBIconPageIndicatorImageSetCache cameraIndicatorImageSetForLegibilitySettings:]


_SBHShadowView : UIView <SBHShadowViewFrameProviding>
 @property  BOOL useMaterialBasedShadow

  // class methods
  +[_SBHShadowView supportsMaterialsBasedShadow]

  // instance methods
  -[_SBHShadowView .cxx_destruct]
  -[_SBHShadowView layoutSubviews]
  -[_SBHShadowView _shouldAnimatePropertyWithKey:]
  -[_SBHShadowView initWithFrame:]
  -[_SBHShadowView frameWithContentWithFrame:]
  -[_SBHShadowView _updateShadow]
  -[_SBHShadowView useMaterialBasedShadow]
  -[_SBHShadowView setUseMaterialBasedShadow:]


SBHWidgetWrapperView : UIView
 @property  SBHShadowedWidgetView *shadowedWidgetView
 @property  UIView *shadowView
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  NSLayoutConstraint *widgetToTitleSpacingConstraint
 @property  NSLayoutConstraint *contentHeightConstraint
 @property  NSLayoutConstraint *contentWidthConstraint
 @property  BOOL titleAndSubtitleVisible
 @property  NSString *title
 @property  NSString *subtitle
 @property  SBIconView *contentView
 @property  UIView *containerView
 @property  {CGSize=dd} contentSize
 @property  double cornerRadius
 @property  BOOL hoverAnimationEnabled
 @property  {CATransform3D=dddddddddddddddd} hoverTransform
 @property  double extraSpacingBetweenWidgetAndTitle

  // instance methods
  -[SBHWidgetWrapperView _contentSizeCategoryDidChange:]
  -[SBHWidgetWrapperView titleLabel]
  -[SBHWidgetWrapperView setSubtitleLabel:]
  -[SBHWidgetWrapperView contentSize]
  -[SBHWidgetWrapperView traitCollectionDidChange:]
  -[SBHWidgetWrapperView setTitle:]
  -[SBHWidgetWrapperView containerView]
  -[SBHWidgetWrapperView contentHeightConstraint]
  -[SBHWidgetWrapperView .cxx_destruct]
  -[SBHWidgetWrapperView setTitleLabel:]
  -[SBHWidgetWrapperView contentView]
  -[SBHWidgetWrapperView setSubtitle:]
  -[SBHWidgetWrapperView _updateContentSizeConstraints]
  -[SBHWidgetWrapperView init]
  -[SBHWidgetWrapperView shadowView]
  -[SBHWidgetWrapperView setCornerRadius:]
  -[SBHWidgetWrapperView _titleLabelFont]
  -[SBHWidgetWrapperView subtitleLabel]
  -[SBHWidgetWrapperView subtitle]
  -[SBHWidgetWrapperView title]
  -[SBHWidgetWrapperView contentWidthConstraint]
  -[SBHWidgetWrapperView cornerRadius]
  -[SBHWidgetWrapperView setContentWidthConstraint:]
  -[SBHWidgetWrapperView didMoveToWindow]
  -[SBHWidgetWrapperView dealloc]
  -[SBHWidgetWrapperView setContentView:]
  -[SBHWidgetWrapperView setContentSize:]
  -[SBHWidgetWrapperView initWithTitleAndSubtitleVisible:]
  -[SBHWidgetWrapperView _subititleLabelFont]
  -[SBHWidgetWrapperView _updateHoverAnimation]
  -[SBHWidgetWrapperView shadowedWidgetView]
  -[SBHWidgetWrapperView isHoverAnimationEnabled]
  -[SBHWidgetWrapperView newPortaledShadowedWidgetView]
  -[SBHWidgetWrapperView setExtraSpacingBetweenWidgetAndTitle:]
  -[SBHWidgetWrapperView hoverTransform]
  -[SBHWidgetWrapperView setHoverAnimationEnabled:]
  -[SBHWidgetWrapperView extraSpacingBetweenWidgetAndTitle]
  -[SBHWidgetWrapperView widgetToTitleSpacingConstraint]
  -[SBHWidgetWrapperView setWidgetToTitleSpacingConstraint:]
  -[SBHWidgetWrapperView setContentHeightConstraint:]
  -[SBHWidgetWrapperView titleAndSubtitleVisible]


SBFolderView : UIView <SBIconListPageControlDelegate, UITextFieldDelegate, SBIconListLayoutDelegate, SBHScrollableIconViewContaining, SBIconScrollViewDelegate, SBFolderObserver, BSDescriptionProviding, SBIconListViewDragDelegate, SBHVisibleContentPresenter>
 @property  BOOL rotating
 @property  BOOL hasEverBeenInAWindow
 @property  BOOL addsFocusGuidesForWrapping
 @property  UIPanGestureRecognizer *scrollingDisabledGestureRecognizer
 @property  UIView *scalingView
 @property  BOOL scalingViewBorrowed
 @property  long long orientation
 @property  SBIconListPageControl *pageControl
 @property  _UILegibilitySettings *legibilitySettingsForIconListViews
 @property  BOOL parallaxEnabled
 @property  double pageControlAreaHeight
 @property  long long minimumPageIndex
 @property  long long maximumPageIndex
 @property  long long defaultPageIndex
 @property  long long firstIconPageIndex
 @property  long long lastIconPageIndex
 @property  unsigned long pageCount
 @property  unsigned long countOfAdditionalPagesToKeepVisibleInOneDirection
 @property  double additionalScrollWidthToKeepVisibleInOneDirection
 @property  {SBVisibleColumnRange=QQQQ} visibleColumnRangeExcludingAdditionalWidthKeptVisible
 @property  SBFolderTitleTextField *titleTextField
 @property  long long iconVisibilityHandling
 @property  BOOL updatesPredictedVisibleColumnWhileScrolling
 @property  double scrollableWidthForVisibleColumnRange
 @property  double minimumVisibleScrollOffset
 @property  double maximumVisibleScrollOffset
 @property  BOOL RTL
 @property  BOOL suppressesEditingStateForListViews
 @property  BOOL automaticallyCreatesIconListViews
 @property  BOOL includesHiddenIconListPages
 @property  <SBFolderViewDelegate> *delegate
 @property  SBFolder *folder
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  BOOL editing
 @property  BOOL scrolling
 @property  unsigned long allowedOrientations
 @property  long long currentPageIndex
 @property  NSArray *iconListViews
 @property  unsigned long iconListViewCount
 @property  <SBIconViewProviding> *iconViewProvider
 @property  unsigned long userInterfaceLayoutDirectionHandling
 @property  long long userInterfaceLayoutDirection
 @property  NSString *iconLocation
 @property  UIView *headerView
 @property  double headerHeight
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIScrollView *scrollView
 @property  SBIconListView *currentIconListView
 @property  SBIconListModel *currentIconListModel
 @property  BOOL pageControlHidden
 @property  double pageControlAlpha
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  SBIconPageIndicatorImageSetCache *iconPageIndicatorImageSetCache
 @property  BOOL snapsToPageBoundariesAfterScrolling
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long contentVisibility

  // class methods
  +[SBFolderView countOfAdditionalPagesToKeepVisibleInOneDirection]
  +[SBFolderView defaultIconLocation]
  +[SBFolderView defaultIconListViewClass]
  +[SBFolderView _scrollViewClass]
  +[SBFolderView _pageOffsetForOffset:behavior:pageWidth:pageSpacing:pageCount:userInterfaceLayoutDirection:fractionOfDistanceThroughPage:]
  +[SBFolderView _pageIndexForOffset:minimumPage:maximumPage:pageCount:pageWidth:pageSpacing:userInterfaceLayoutDirection:behavior:fractionOfDistanceThroughPage:]

  // instance methods
  -[SBFolderView _scrollOffsetForFirstListView]
  -[SBFolderView _isValidIconListViewIndex:]
  -[SBFolderView isParallaxEnabled]
  -[SBFolderView allIconListViews]
  -[SBFolderView _updateIconListContainment:atIndex:]
  -[SBFolderView _shouldIgnoreScrollingDidEndNotifications]
  -[SBFolderView updateIconListViews]
  -[SBFolderView _setScrollViewContentOffset:animated:]
  -[SBFolderView scrollView:contentSizeForZoomScale:withProposedSize:]
  -[SBFolderView pageCount]
  -[SBFolderView _unignoreScrollingDidEndNotifications]
  -[SBFolderView _disableUserInteractionBeforeSignificantAnimation]
  -[SBFolderView suppressesEditingStateForListViews]
  -[SBFolderView updateAccessibilityTintColors]
  -[SBFolderView listViewClass]
  -[SBFolderView _showsTitle]
  -[SBFolderView scalingView]
  -[SBFolderView iconVisibilityHandling]
  -[SBFolderView _updateIconListFrames]
  -[SBFolderView _scrollingInteractionScrollViewDidScroll:]
  -[SBFolderView enumerateScrollViewPageViewsUsingBlock:]
  -[SBFolderView _setFolderName:]
  -[SBFolderView _frameForScalingView]
  -[SBFolderView _updatePageControlCurrentPage]
  -[SBFolderView _didRemoveIconListView:]
  -[SBFolderView iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFolderView maximumVisibleScrollOffset]
  -[SBFolderView _pageSpacing]
  -[SBFolderView _hasTrailingCustomPages]
  -[SBFolderView didTransitionAnimated:]
  -[SBFolderView iconPageCount]
  -[SBFolderView isVisibleColumnRangeValid:]
  -[SBFolderView _setScrollingDisabled:forReason:]
  -[SBFolderView iconLocationForList:]
  -[SBFolderView scrollableWidthForVisibleColumnRange]
  -[SBFolderView _addScrollingCompletionBlock:]
  -[SBFolderView hitTest:withEvent:]
  -[SBFolderView setOrientation:]
  -[SBFolderView cleanUpAfterTransition]
  -[SBFolderView indexOfIconListView:]
  -[SBFolderView resetIconListViews]
  -[SBFolderView enumerateIconListViewsUsingBlock:]
  -[SBFolderView _pageCountForPageControl]
  -[SBFolderView closestIconPageIndexForPageIndex:]
  -[SBFolderView hasEverBeenInAWindow]
  -[SBFolderView _iconListViewSize]
  -[SBFolderView includesHiddenIconListPages]
  -[SBFolderView headerHeight]
  -[SBFolderView iconScrollView:shouldSetAutoscrollContentOffset:]
  -[SBFolderView _configureIconListView:]
  -[SBFolderView _setPageControlDisabled:forReason:]
  -[SBFolderView _ignoreScrollingDidEndNotifications]
  -[SBFolderView pageControl]
  -[SBFolderView _updateScrollingState:]
  -[SBFolderView countOfAdditionalPagesToKeepVisibleInOneDirection]
  -[SBFolderView updateVisibleColumnRange]
  -[SBFolderView _hasLeadingCustomPages]
  -[SBFolderView _animatesRotationForAllVisibleIconListViews]
  -[SBFolderView _addIconListViewsForModels:]
  -[SBFolderView preferredFocusEnvironments]
  -[SBFolderView visibleContainerInsets]
  -[SBFolderView iconScrollView:shouldSetContentOffset:animated:]
  -[SBFolderView _newPageControl]
  -[SBFolderView _frameForIconListAtIndex:]
  -[SBFolderView scrollingDisabledGestureDidUpdate:]
  -[SBFolderView iconListViewForPageIndex:]
  -[SBFolderView setHasEverBeenInAWindow:]
  -[SBFolderView _scrollRangeForContentAtPageIndex:pageWidth:]
  -[SBFolderView willTransitionAnimated:withSettings:]
  -[SBFolderView _updateTitleLegibilitySettings]
  -[SBFolderView _orientationDidChange:]
  -[SBFolderView _configureScrollingInteraction:]
  -[SBFolderView _updateParallaxSettings]
  -[SBFolderView iconListView:iconDropSessionDidUpdate:]
  -[SBFolderView transitionToSize:withTransitionCoordinator:]
  -[SBFolderView setScrollingDisabledGestureRecognizer:]
  -[SBFolderView canChangeCurrentPageIndexToIndex:]
  -[SBFolderView hasIconPages]
  -[SBFolderView currentScrollOffset]
  -[SBFolderView setIncludesHiddenIconListPages:]
  -[SBFolderView setAddsFocusGuidesForWrapping:]
  -[SBFolderView iconListView:animatorForRemovingIcons:proposedAnimator:]
  -[SBFolderView iconListViewAtScrollPoint:]
  -[SBFolderView visibleColumnRangeExcludingAdditionalWidthKeptVisible]
  -[SBFolderView _enableUserInteractionAfterSignificantAnimation]
  -[SBFolderView setAutomaticallyCreatesIconListViews:]
  -[SBFolderView _markListViewsAsPurged]
  -[SBFolderView _trailingCustomPageCount]
  -[SBFolderView getLeadingVisiblePageIndex:trailingVisiblePageIndex:]
  -[SBFolderView tearDownListViews]
  -[SBFolderView iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBFolderView _resetIconListViews]
  -[SBFolderView textFieldShouldReturn:]
  -[SBFolderView _didAddIconListView:]
  -[SBFolderView setContentAlpha:]
  -[SBFolderView iconListView:iconDropSessionDidExit:]
  -[SBFolderView iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBFolderView _checkIfScrollStateChanged]
  -[SBFolderView _pageIndexForOffset:behavior:fractionOfDistanceThroughPage:]
  -[SBFolderView didAddSubview:]
  -[SBFolderView firstIconListView]
  -[SBFolderView _scrollOffsetForPageAtIndex:pageWidth:]
  -[SBFolderView scrollViewDidEndScrolling:]
  -[SBFolderView _updatePageControlToIndex:]
  -[SBFolderView folder:listHiddenWillChange:]
  -[SBFolderView _removeIconListView:purge:]
  -[SBFolderView textFieldShouldBeginEditing:]
  -[SBFolderView _scrollRangeForPageAtIndex:pageWidth:]
  -[SBFolderView updatesPredictedVisibleColumnWhileScrolling]
  -[SBFolderView folderDidChange]
  -[SBFolderView folder:willRemoveLists:atIndexes:]
  -[SBFolderView iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFolderView iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFolderView _updateIconListViews:]
  -[SBFolderView _noteFolderListsDidChange:]
  -[SBFolderView _legibilitySettingsWithPrimaryColor:]
  -[SBFolderView _updateIconListViewsWithCurrentPageIndex:currentIconListModel:]
  -[SBFolderView _updateScrollingIfNeeded]
  -[SBFolderView _layoutSubviews]
  -[SBFolderView folderIconImageCache]
  -[SBFolderView _updateScalingViewFrame]
  -[SBFolderView prepareForTransition]
  -[SBFolderView _backgroundContrastDidChange:]
  -[SBFolderView pageControl:didMoveCurrentPageToPage:withScrubbing:]
  -[SBFolderView _leadingCustomPageCount]
  -[SBFolderView _createIconListViewForList:]
  -[SBFolderView _currentPageIndexDidChangeFromPageIndex:]
  -[SBFolderView snapsToPageBoundariesAfterScrolling]
  -[SBFolderView addScrollViewIsScrollingOverrideReason:]
  -[SBFolderView iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFolderView _offsetToCenterPageControlInSpaceForPageControl]
  -[SBFolderView enumerateScrollableIconViewsUsingBlock:]
  -[SBFolderView minimumVisibleScrollOffset]
  -[SBFolderView scrollingDisabledGestureRecognizer]
  -[SBFolderView _pageWidth]
  -[SBFolderView _useParallaxOnPageControl]
  -[SBFolderView locationCountsAsInsideFolder:]
  -[SBFolderView _precacheIconImages]
  -[SBFolderView iconListView:iconViewForDroppingIconDragItem:proposedIconView:]
  -[SBFolderView _interactionTintColor]
  -[SBFolderView _addIconListView:]
  -[SBFolderView iconListViewWithList:]
  -[SBFolderView iconVisibilityDescription]
  -[SBFolderView iconScrollViewWillCancelTouchTracking:]
  -[SBFolderView updateIconListIndexAndVisibility]
  -[SBFolderView _setParallaxDisabled:forReason:]
  -[SBFolderView validateVisibleColumnRange]
  -[SBFolderView pageIndexForIconListModel:]
  -[SBFolderView scrollingDirection]
  -[SBFolderView iconListView:canHandleIconDropSession:]
  -[SBFolderView _pageIndexForOffset:]
  -[SBFolderView traitCollectionDidChange:]
  -[SBFolderView removeScrollViewIsScrollingOverrideReason:]
  -[SBFolderView updateIconListIndexAndVisibility:]
  -[SBFolderView typeForPage:]
  -[SBFolderView _scrollingInteractionVisibleInsets]
  -[SBFolderView resetContentOffsetToCurrentPageAnimated:]
  -[SBFolderView userInterfaceLayoutDirectionAwareScrollingDirection]
  -[SBFolderView _updateEditingStateAnimated:]
  -[SBFolderView _setCurrentPageIndex:]
  -[SBFolderView _iconListFrameForPageRect:atIndex:]
  -[SBFolderView _scrollRangeForPageAtIndex:]
  -[SBFolderView setIconPageIndicatorImageSetCache:]
  -[SBFolderView borrowScalingView]
  -[SBFolderView _scrollOffsetForPageAtIndex:]
  -[SBFolderView automaticallyCreatesIconListViews]
  -[SBFolderView _enumerateScrollableIconViewsUsingBlock:]
  -[SBFolderView lastIconListView]
  -[SBFolderView additionalIconListViews]
  -[SBFolderView _shouldUseScrollableIconViewInteraction]
  -[SBFolderView isScalingViewBorrowed]
  -[SBFolderView iconScrollViewDidCancelTouchTracking:]
  -[SBFolderView folderWillChange:]
  -[SBFolderView scalingViewFrame]
  -[SBFolderView fadeContentForMagnificationFraction:]
  -[SBFolderView _updateIconListViewsWithCurrentIconListModel:]
  -[SBFolderView iconListViewCount]
  -[SBFolderView _updateIconListLegibilitySettings]
  -[SBFolderView _willScrollToPageIndex:animated:]
  -[SBFolderView scrollUsingDecelerationAnimationToPageIndex:withCompletionHandler:]
  -[SBFolderView iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFolderView iconListView:performIconDrop:]
  -[SBFolderView setSuppressesEditingStateForListViews:]
  -[SBFolderView additionalScrollWidthToKeepVisibleInOneDirection]
  -[SBFolderView _updateScrollingInteractionIsScrolling:]
  -[SBFolderView accessibilityTintColorForRect:tintStyle:]
  -[SBFolderView legibilitySettingsForIconListViews]
  -[SBFolderView accessibilityLegibilitySettingsForRect:tintStyle:]
  -[SBFolderView _scrollOffsetForContentAtPageIndex:]
  -[SBFolderView scrollView]
  -[SBFolderView updateVisibleColumnRangeWithTotalLists:iconVisibilityHandling:]
  -[SBFolderView clearVisibleColumnRange]
  -[SBFolderView didMoveToSuperview]
  -[SBFolderView _addIconListView:atEnd:]
  -[SBFolderView setFolder:]
  -[SBFolderView isPageTypeIcon:]
  -[SBFolderView _setCurrentPageIndex:deferringPageControlUpdate:]
  -[SBFolderView enumerateIconListViewsWithOptions:usingBlock:]
  -[SBFolderView _removeIconListView:]
  -[SBFolderView iconListViewDisplayingIconView:]
  -[SBFolderView _currentPageIndexDidChange]
  -[SBFolderView textFieldDidBeginEditing:]
  -[SBFolderView pageControlAreaHeight]
  -[SBFolderView _updatePageControlNumberOfPages]
  -[SBFolderView _titleTextField]
  -[SBFolderView _titleFontSize]
  -[SBFolderView pageControlDidReceiveButtonTap:]
  -[SBFolderView _scrollViewContentSize]
  -[SBFolderView iconListView:iconDropSessionDidEnter:]
  -[SBFolderView folder:didRemoveLists:atIndexes:]
  -[SBFolderView setEditing:animated:]
  -[SBFolderView doesPageContainIconListView:]
  -[SBFolderView willMoveToWindow:]
  -[SBFolderView setPageControlAlpha:]
  -[SBFolderView iconViewProvider]
  -[SBFolderView iconListViewForIconListModelIndex:]
  -[SBFolderView iconListViews]
  -[SBFolderView isPageControlHidden]
  -[SBFolderView .cxx_destruct]
  -[SBFolderView iconListModelIndexForPageIndex:]
  -[SBFolderView firstIconPageIndex]
  -[SBFolderView isRTL]
  -[SBFolderView scrollViewDidEndScrollingAnimation:]
  -[SBFolderView folder:didMoveList:fromIndex:toIndex:]
  -[SBFolderView folder:listHiddenDidChange:]
  -[SBFolderView iconImageCache]
  -[SBFolderView minimumHomeScreenScaleDidChange]
  -[SBFolderView layoutSubviews]
  -[SBFolderView iconListViewAtIndex:]
  -[SBFolderView succinctDescriptionBuilder]
  -[SBFolderView isRotating]
  -[SBFolderView setLegibilitySettings:]
  -[SBFolderView setRotating:]
  -[SBFolderView setDelegate:]
  -[SBFolderView _isEligibleForFocusInteraction]
  -[SBFolderView scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBFolderView iconLocation]
  -[SBFolderView setIconImageCache:]
  -[SBFolderView descriptionBuilderWithMultilinePrefix:]
  -[SBFolderView textFieldDidEndEditing:]
  -[SBFolderView iconListViewAtPoint:]
  -[SBFolderView setCurrentPageIndex:animated:]
  -[SBFolderView _isValidPageIndex:]
  -[SBFolderView scrollViewDidEndDragging:willDecelerate:]
  -[SBFolderView noteUserIsInteractingWithIcons]
  -[SBFolderView setCurrentPageIndex:animated:completion:]
  -[SBFolderView contentVisibility]
  -[SBFolderView setNeedsLayout]
  -[SBFolderView scrollViewDidScroll:]
  -[SBFolderView descriptionWithMultilinePrefix:]
  -[SBFolderView currentIconListView]
  -[SBFolderView currentPageIndex]
  -[SBFolderView succinctDescription]
  -[SBFolderView pageControlAlpha]
  -[SBFolderView cancelScrolling]
  -[SBFolderView setFolderIconImageCache:]
  -[SBFolderView returnScalingView]
  -[SBFolderView pageIndexForIconListViewIndex:]
  -[SBFolderView folder]
  -[SBFolderView userInterfaceLayoutDirectionHandling]
  -[SBFolderView orientation]
  -[SBFolderView visibleColumnRangeWithTotalLists:iconVisibilityHandling:predictedVisibleColumn:includingAdditionalColumnsKeptVisible:]
  -[SBFolderView scrollViewWillBeginDragging:]
  -[SBFolderView addsFocusGuidesForWrapping]
  -[SBFolderView headerView]
  -[SBFolderView initWithConfiguration:]
  -[SBFolderView iconListViewForDrag:]
  -[SBFolderView currentIconListModel]
  -[SBFolderView setPageControl:]
  -[SBFolderView minimumPageIndex]
  -[SBFolderView isEditing]
  -[SBFolderView lastIconPageIndex]
  -[SBFolderView delegate]
  -[SBFolderView didMoveToWindow]
  -[SBFolderView isScrolling]
  -[SBFolderView defaultPageIndex]
  -[SBFolderView setPageControlHidden:]
  -[SBFolderView allowedOrientations]
  -[SBFolderView userInterfaceLayoutDirection]
  -[SBFolderView prepareToOpen]
  -[SBFolderView maximumPageIndex]
  -[SBFolderView dealloc]
  -[SBFolderView pageIndexForIconListModelIndex:]
  -[SBFolderView fadeContentForMinificationFraction:]
  -[SBFolderView iconListViewForTouch:]
  -[SBFolderView listLayoutProvider]
  -[SBFolderView iconListViewIndexForIconListModelIndex:]
  -[SBFolderView setContentVisibility:]
  -[SBFolderView scrollViewDidEndDecelerating:]
  -[SBFolderView iconListViewIndexForPageIndex:]
  -[SBFolderView legibilitySettings]
  -[SBFolderView layoutIconListsWithAnimationType:forceRelayout:]
  -[SBFolderView iconPageIndicatorImageSetCache]
  -[SBFolderView folder:didAddList:]


SBIconScrollView : BSUIScrollView
 @property  {CGPoint=dd} lastAnimatedScrollContentOffset
 @property  <SBIconScrollViewDelegate> *delegate

  // instance methods
  -[SBIconScrollView cancelTouchTracking]
  -[SBIconScrollView _autoScrollAssistantUpdateContentOffset:]
  -[SBIconScrollView setContentOffset:]
  -[SBIconScrollView setContentOffset:animated:]
  -[SBIconScrollView _roundedProposedContentOffset:]
  -[SBIconScrollView setLastAnimatedScrollContentOffset:]
  -[SBIconScrollView _scrollsToMakeFirstResponderVisible]
  -[SBIconScrollView lastAnimatedScrollContentOffset]


SBIconLabelImageCache : NSObject <BSDescriptionProviding>
 @property  CPMemoryPool *grayPool
 @property  CPMemoryPool *colorPool
 @property  CPMemoryPool *legibilityPool
 @property  {CGSize=dd} maxLabelSize
 @property  double scale
 @property  unsigned long numberOfCachedImages
 @property  unsigned long numberOfCacheHits
 @property  unsigned long numberOfCacheMisses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconLabelImageCache maxLabelSize]
  -[SBIconLabelImageCache numberOfCachedImages]
  -[SBIconLabelImageCache labelImageForParameters:]
  -[SBIconLabelImageCache .cxx_destruct]
  -[SBIconLabelImageCache succinctDescriptionBuilder]
  -[SBIconLabelImageCache cachedLabelImageForParameters:]
  -[SBIconLabelImageCache descriptionBuilderWithMultilinePrefix:]
  -[SBIconLabelImageCache initWithMaxLabelSize:scale:]
  -[SBIconLabelImageCache descriptionWithMultilinePrefix:]
  -[SBIconLabelImageCache succinctDescription]
  -[SBIconLabelImageCache numberOfCacheHits]
  -[SBIconLabelImageCache numberOfCacheMisses]
  -[SBIconLabelImageCache generateAndStoreLabelImageForParameters:]
  -[SBIconLabelImageCache colorPool]
  -[SBIconLabelImageCache cacheLabelImageForParameters:]
  -[SBIconLabelImageCache legibilityPool]
  -[SBIconLabelImageCache scale]
  -[SBIconLabelImageCache grayPool]
  -[SBIconLabelImageCache removeLabelImageForParameters:]
  -[SBIconLabelImageCache cachedLabelImagesWithParametersPassingTest:]
  -[SBIconLabelImageCache removeLabelImagesWithParametersPassingTest:]


SBFloatyFolderView : SBFolderView <UIGestureRecognizerDelegate, PTSettingsKeyObserver, SBFolderBackgroundViewDelegate, UIScribbleInteractionDelegate>
 @property  BOOL displaysMultipleIconListsInLandscapeOrientation
 @property  BOOL displayingMultipleIconLists
 @property  BOOL convertingIconListStyle
 @property  BOOL animatingRotation
 @property  UIScribbleInteraction *titleScribbleInteraction
 @property  double cornerRadius
 @property  unsigned long backgroundEffect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFloatyFolderView countOfAdditionalPagesToKeepVisibleInOneDirection]
  +[SBFloatyFolderView defaultIconLocation]
  +[SBFloatyFolderView defaultCornerRadius]
  +[SBFloatyFolderView _scrollViewClass]

  // instance methods
  -[SBFloatyFolderView _updateIconListContainment:atIndex:]
  -[SBFloatyFolderView updateAccessibilityTintColors]
  -[SBFloatyFolderView _showsTitle]
  -[SBFloatyFolderView iconVisibilityHandling]
  -[SBFloatyFolderView _frameForScalingView]
  -[SBFloatyFolderView _didRemoveIconListView:]
  -[SBFloatyFolderView didTransitionAnimated:]
  -[SBFloatyFolderView scrollableWidthForVisibleColumnRange]
  -[SBFloatyFolderView _scrollView:adjustedOffsetForOffset:translation:startPoint:locationInView:horizontalVelocity:verticalVelocity:]
  -[SBFloatyFolderView hitTest:withEvent:]
  -[SBFloatyFolderView _updateScalingViewLocation]
  -[SBFloatyFolderView _updateScrollingState:]
  -[SBFloatyFolderView willTransitionAnimated:withSettings:]
  -[SBFloatyFolderView _orientationDidChange:]
  -[SBFloatyFolderView transitionToSize:withTransitionCoordinator:]
  -[SBFloatyFolderView _didAddIconListView:]
  -[SBFloatyFolderView setTitleScribbleInteraction:]
  -[SBFloatyFolderView enumeratePageBackgroundViewsUsingBlock:]
  -[SBFloatyFolderView isConvertingIconListStyle]
  -[SBFloatyFolderView _layoutSubviews]
  -[SBFloatyFolderView _updateScalingViewFrame]
  -[SBFloatyFolderView _convertToMultipleIconListsAnimated:]
  -[SBFloatyFolderView isAnimatingRotation]
  -[SBFloatyFolderView titleScribbleInteraction]
  -[SBFloatyFolderView visibleFolderRelativeImageCenterForIcon:]
  -[SBFloatyFolderView minimumVisibleScrollOffset]
  -[SBFloatyFolderView _handlePinchGesture:]
  -[SBFloatyFolderView locationCountsAsInsideFolder:]
  -[SBFloatyFolderView accessibilityReduceTransparencyDidChange:]
  -[SBFloatyFolderView _newPageBackgroundView]
  -[SBFloatyFolderView _iconListFrameForPageRect:atIndex:]
  -[SBFloatyFolderView borrowScalingView]
  -[SBFloatyFolderView _configureGestures]
  -[SBFloatyFolderView _handleOutsideTap:]
  -[SBFloatyFolderView _shouldUseScrollableIconViewInteraction]
  -[SBFloatyFolderView fadeContentForMagnificationFraction:]
  -[SBFloatyFolderView legibilitySettingsForIconListViews]
  -[SBFloatyFolderView _currentPageIndexDidChange]
  -[SBFloatyFolderView _titleFontSize]
  -[SBFloatyFolderView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[SBFloatyFolderView .cxx_destruct]
  -[SBFloatyFolderView displaysMultipleIconListsInLandscapeOrientation]
  -[SBFloatyFolderView setLegibilitySettings:]
  -[SBFloatyFolderView setBackgroundAlpha:]
  -[SBFloatyFolderView _setScrollViewNeedsToClipCorners:]
  -[SBFloatyFolderView descriptionBuilderWithMultilinePrefix:]
  -[SBFloatyFolderView floatyFolderConfiguration]
  -[SBFloatyFolderView isDisplayingMultipleIconLists]
  -[SBFloatyFolderView scribbleInteraction:shouldBeginAtLocation:]
  -[SBFloatyFolderView iconListViewAtPoint:]
  -[SBFloatyFolderView scrollViewDidScroll:]
  -[SBFloatyFolderView setCornerRadius:]
  -[SBFloatyFolderView returnScalingView]
  -[SBFloatyFolderView gestureRecognizer:shouldReceiveTouch:]
  -[SBFloatyFolderView _rubberBandIntervalForOverscroll]
  -[SBFloatyFolderView initWithConfiguration:]
  -[SBFloatyFolderView _tapToCloseGestureRecognizer:shouldReceiveTouch:]
  -[SBFloatyFolderView cornerRadius]
  -[SBFloatyFolderView settings:changedValueForKey:]
  -[SBFloatyFolderView _pageBackgroundFrameForPageRect:]
  -[SBFloatyFolderView accessibilityTintColorForBackgroundView:]
  -[SBFloatyFolderView setAnimatingRotation:]
  -[SBFloatyFolderView setConvertingIconListStyle:]
  -[SBFloatyFolderView setDisplayingMultipleIconLists:]
  -[SBFloatyFolderView dealloc]
  -[SBFloatyFolderView fadeContentForMinificationFraction:]
  -[SBFloatyFolderView _convertToSingleIconListAnimated:]
  -[SBFloatyFolderView _shouldConvertToMultipleIconListsInLandscapeOrientation]
  -[SBFloatyFolderView setBackgroundEffect:]
  -[SBFloatyFolderView backgroundEffect]
  -[SBFloatyFolderView _handleLongPressGesture:]


SBFloatyFolderBackgroundClipView : UIView
 @property  SBFolderBackgroundView *backgroundView
 @property  unsigned long backgroundEffect
 @property  double cornerRadius

  // instance methods
  -[SBFloatyFolderBackgroundClipView .cxx_destruct]
  -[SBFloatyFolderBackgroundClipView layoutSubviews]
  -[SBFloatyFolderBackgroundClipView setCornerRadius:]
  -[SBFloatyFolderBackgroundClipView initWithFrame:]
  -[SBFloatyFolderBackgroundClipView cornerRadius]
  -[SBFloatyFolderBackgroundClipView setBackgroundEffect:]
  -[SBFloatyFolderBackgroundClipView backgroundEffect]
  -[SBFloatyFolderBackgroundClipView backgroundView]


SBFloatyFolderScrollView : SBIconScrollView
  // instance methods
  -[SBFloatyFolderScrollView pointInside:withEvent:]


SBDockIconListView : SBIconListView
  // class methods
  +[SBDockIconListView defaultHeight]
  +[SBDockIconListView defaultFrameForOrientation:]
  +[SBDockIconListView defaultIconViewConfigurationOptions]

  // instance methods
  -[SBDockIconListView isVertical]
  -[SBDockIconListView initWithModel:layoutProvider:iconLocation:orientation:iconViewProvider:]
  -[SBDockIconListView adaptsOrientationToTraitCollection]
  -[SBDockIconListView allowsAddingIconCount:]
  -[SBDockIconListView _shouldAnimatePropertyWithKey:]


SBHIconLibraryPredicateQueryEngine : SBHIconLibraryAbstractQueryEngine
  // instance methods
  -[SBHIconLibraryPredicateQueryEngine executeQuery:]
  -[SBHIconLibraryPredicateQueryEngine .cxx_destruct]
  -[SBHIconLibraryPredicateQueryEngine _processingQueue_teardownQueryContext:]


SBHomeScreenIconTransitionAnimator : NSObject <SBIconAnimatorDelegate, SBViewControllerInteractiveAnimatedTransitioning>
 @property  SBHIconAnimationSettings *currentSettings
 @property  SBIconAnimator *iconAnimator
 @property  SBNestingViewController *childViewController
 @property  unsigned long operation
 @property  double initialDelay
 @property  unsigned long currentOperation
 @property  BOOL cancelled
 @property  BOOL restarted
 @property  <SBHomeScreenIconTransitionAnimatorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHomeScreenIconTransitionAnimator operation]
  -[SBHomeScreenIconTransitionAnimator cancelTransition:withCompletionSpeed:completionCurve:]
  -[SBHomeScreenIconTransitionAnimator supportsRestarting]
  -[SBHomeScreenIconTransitionAnimator restart]
  -[SBHomeScreenIconTransitionAnimator transitionDuration:]
  -[SBHomeScreenIconTransitionAnimator .cxx_destruct]
  -[SBHomeScreenIconTransitionAnimator percentComplete]
  -[SBHomeScreenIconTransitionAnimator animateTransition:]
  -[SBHomeScreenIconTransitionAnimator reverse]
  -[SBHomeScreenIconTransitionAnimator setDelegate:]
  -[SBHomeScreenIconTransitionAnimator isCancelled]
  -[SBHomeScreenIconTransitionAnimator finishInteractiveTransition:withCompletionSpeed:completionCurve:]
  -[SBHomeScreenIconTransitionAnimator setInitialDelay:]
  -[SBHomeScreenIconTransitionAnimator animationEnded:]
  -[SBHomeScreenIconTransitionAnimator cancel]
  -[SBHomeScreenIconTransitionAnimator childViewController]
  -[SBHomeScreenIconTransitionAnimator currentOperation]
  -[SBHomeScreenIconTransitionAnimator currentSettings]
  -[SBHomeScreenIconTransitionAnimator delegate]
  -[SBHomeScreenIconTransitionAnimator initialDelay]
  -[SBHomeScreenIconTransitionAnimator updateTransition:withPercentComplete:]
  -[SBHomeScreenIconTransitionAnimator transitionAnimationFactory:]
  -[SBHomeScreenIconTransitionAnimator iconAnimator]
  -[SBHomeScreenIconTransitionAnimator iconAnimator:canAlterViewHierarchyDuringCleanupUsingBlock:]
  -[SBHomeScreenIconTransitionAnimator initWithIconAnimator:childViewController:operation:]
  -[SBHomeScreenIconTransitionAnimator iconAnimatorWasInvalidated:]
  -[SBHomeScreenIconTransitionAnimator wasRestarted]
  -[SBHomeScreenIconTransitionAnimator completeImmediately]


SBHLibraryIndicatorIconSettings : PTSettings
 @property  double pod1Scale
 @property  double pod2Scale
 @property  double pod3Scale
 @property  SBFFluidBehaviorSettings *pod1AnimationSettings
 @property  SBFFluidBehaviorSettings *pod2AnimationSettings
 @property  SBFFluidBehaviorSettings *pod3AnimationSettings

  // class methods
  +[SBHLibraryIndicatorIconSettings settingsControllerModule]

  // instance methods
  -[SBHLibraryIndicatorIconSettings .cxx_destruct]
  -[SBHLibraryIndicatorIconSettings setDefaultValues]
  -[SBHLibraryIndicatorIconSettings pod1Scale]
  -[SBHLibraryIndicatorIconSettings pod2Scale]
  -[SBHLibraryIndicatorIconSettings setPod1Scale:]
  -[SBHLibraryIndicatorIconSettings setPod2Scale:]
  -[SBHLibraryIndicatorIconSettings setPod3Scale:]
  -[SBHLibraryIndicatorIconSettings pod1AnimationSettings]
  -[SBHLibraryIndicatorIconSettings pod2AnimationSettings]
  -[SBHLibraryIndicatorIconSettings pod3AnimationSettings]
  -[SBHLibraryIndicatorIconSettings pod3Scale]
  -[SBHLibraryIndicatorIconSettings setPod1AnimationSettings:]
  -[SBHLibraryIndicatorIconSettings setPod2AnimationSettings:]
  -[SBHLibraryIndicatorIconSettings setPod3AnimationSettings:]


SBHHomeScreenSettings : PTSettings
 @property  BOOL usesMinimumViableHomeScreen
 @property  BOOL showPopOvers
 @property  SBHIconAnimationRootSettings *iconAnimationSettings
 @property  SBHIconSettings *iconSettings
 @property  SBHFolderSettings *folderSettings
 @property  SBHRootFolderSettings *rootFolderSettings
 @property  SBHIconEditingSettings *iconEditingSettings
 @property  SBHWidgetSettings *widgetSettings
 @property  SBHAppLibrarySettings *appLibrarySettings
 @property  SBHHomePullToSearchSettings *pullToSearchSettings
 @property  SBHWidgetIntroductionSettings *widgetIntroductionSettings

  // class methods
  +[SBHHomeScreenSettings homeScreenDefaults]
  +[SBHHomeScreenSettings settingsControllerModule]

  // instance methods
  -[SBHHomeScreenSettings setWidgetSettings:]
  -[SBHHomeScreenSettings widgetIntroductionSettings]
  -[SBHHomeScreenSettings setFolderSettings:]
  -[SBHHomeScreenSettings widgetSettings]
  -[SBHHomeScreenSettings folderSettings]
  -[SBHHomeScreenSettings rootFolderSettings]
  -[SBHHomeScreenSettings .cxx_destruct]
  -[SBHHomeScreenSettings setDefaultValues]
  -[SBHHomeScreenSettings iconEditingSettings]
  -[SBHHomeScreenSettings setUsesMinimumViableHomeScreen:]
  -[SBHHomeScreenSettings showPopOvers]
  -[SBHHomeScreenSettings setWidgetIntroductionSettings:]
  -[SBHHomeScreenSettings iconSettings]
  -[SBHHomeScreenSettings setPullToSearchSettings:]
  -[SBHHomeScreenSettings usesMinimumViableHomeScreen]
  -[SBHHomeScreenSettings setAppLibrarySettings:]
  -[SBHHomeScreenSettings setShowPopOvers:]
  -[SBHHomeScreenSettings setIconAnimationSettings:]
  -[SBHHomeScreenSettings setIconSettings:]
  -[SBHHomeScreenSettings pullToSearchSettings]
  -[SBHHomeScreenSettings setRootFolderSettings:]
  -[SBHHomeScreenSettings setIconEditingSettings:]
  -[SBHHomeScreenSettings appLibrarySettings]
  -[SBHHomeScreenSettings iconAnimationSettings]


SBFolderPresentingViewController : SBNestingViewController <SBFolderControllerBackgroundViewDelegate>
 @property  <UIViewControllerAnimatedTransitioning> *currentFolderAnimator
 @property  SBFolderContainerView *view
 @property  <SBFolderPresentingViewControllerDelegate> *folderPresentationDelegate
 @property  SBFolderController *presentedFolderController
 @property  unsigned long backgroundEffect

  // instance methods
  -[SBFolderPresentingViewController nestingViewController:interactionControllerForAnimationController:]
  -[SBFolderPresentingViewController .cxx_destruct]
  -[SBFolderPresentingViewController view]
  -[SBFolderPresentingViewController nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBFolderPresentingViewController loadView]
  -[SBFolderPresentingViewController setBackgroundEffect:]
  -[SBFolderPresentingViewController backgroundEffect]
  -[SBFolderPresentingViewController _canShowWhileLocked]
  -[SBFolderPresentingViewController setFolderPresentationDelegate:]
  -[SBFolderPresentingViewController presentedFolderController]
  -[SBFolderPresentingViewController currentFolderAnimator]
  -[SBFolderPresentingViewController dismissPresentedFolderControllerAnimated:completion:]
  -[SBFolderPresentingViewController presentFolderController:animated:completion:]
  -[SBFolderPresentingViewController setCurrentFolderAnimator:]
  -[SBFolderPresentingViewController nestingViewController:animationControllerForOperation:onViewController:animated:]
  -[SBFolderPresentingViewController nestingViewController:sourceViewForPresentingViewController:]
  -[SBFolderPresentingViewController minimumHomeScreenScaleForFolderControllerBackgroundView:]
  -[SBFolderPresentingViewController folderPresentationDelegate]


SBHPadAddSheetViewController : SBHAddWidgetSheetViewControllerBase <SBHAddWidgetSheetViewControllerDelegate, SBHMainAddSheetViewControlling>
 @property  MTMaterialView *backgroundView
 @property  UISplitViewController *splitViewController
 @property  SBHAddWidgetSheetViewController *left
 @property  NSMutableDictionary *suggestedItemsByGalleryLayoutSize
 @property  SBHWidgetSearchController *widgetSearchController
 @property  NSArray *searchBarGradientMaskLayers
 @property  UIView *redBox
 @property  <SBHWidgetDragHandling> *widgetDragHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *applicationWidgetCollections
 @property  <SBHWidgetSheetViewControllerPresenter> *presenter
 @property  unsigned long galleryLayoutSize
 @property  NSMutableDictionary *userInfo

  // instance methods
  -[SBHPadAddSheetViewController _contentSizeCategoryDidChange:]
  -[SBHPadAddSheetViewController presenter]
  -[SBHPadAddSheetViewController setPresenter:]
  -[SBHPadAddSheetViewController .cxx_destruct]
  -[SBHPadAddSheetViewController viewDidLoad]
  -[SBHPadAddSheetViewController redBox]
  -[SBHPadAddSheetViewController splitViewController]
  -[SBHPadAddSheetViewController setLeft:]
  -[SBHPadAddSheetViewController left]
  -[SBHPadAddSheetViewController setSearchBarGradientMaskLayers:]
  -[SBHPadAddSheetViewController setSplitViewController:]
  -[SBHPadAddSheetViewController viewDidLayoutSubviews]
  -[SBHPadAddSheetViewController viewWillAppear:]
  -[SBHPadAddSheetViewController searchBarGradientMaskLayers]
  -[SBHPadAddSheetViewController setBackgroundView:]
  -[SBHPadAddSheetViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBHPadAddSheetViewController userInfo]
  -[SBHPadAddSheetViewController dealloc]
  -[SBHPadAddSheetViewController backgroundView]
  -[SBHPadAddSheetViewController _detailViewController]
  -[SBHPadAddSheetViewController _newBackgroundView]
  -[SBHPadAddSheetViewController addWidgetSheetViewControllerDidCancel:]
  -[SBHPadAddSheetViewController addWidgetSheetViewController:didSelectWidgetIconView:]
  -[SBHPadAddSheetViewController widgetDragHandler]
  -[SBHPadAddSheetViewController backgroundViewMatchingMaterialBeneathAddWidgetSheetViewController:]
  -[SBHPadAddSheetViewController initWithListLayoutProvider:iconViewProvider:allowedWidgets:appCellConfigurator:]
  -[SBHPadAddSheetViewController setSuggestedItems:forGalleryLayoutSize:]
  -[SBHPadAddSheetViewController setGalleryLayoutSize:]
  -[SBHPadAddSheetViewController _layoutSearchBarGradientMaskLayers]
  -[SBHPadAddSheetViewController addWidgetSheetViewControllerWillAppear:]
  -[SBHPadAddSheetViewController addWidgetSheetViewControllerDidAppear:]
  -[SBHPadAddSheetViewController addWidgetSheetViewControllerWillDisappear:]
  -[SBHPadAddSheetViewController addWidgetSheetViewControllerDidDisappear:]
  -[SBHPadAddSheetViewController _metricsForOrientation:]
  -[SBHPadAddSheetViewController setApplicationWidgetCollections:]
  -[SBHPadAddSheetViewController galleryLayoutSize]
  -[SBHPadAddSheetViewController suggestedItemsForGalleryLayoutSize:]
  -[SBHPadAddSheetViewController applicationWidgetCollections]
  -[SBHPadAddSheetViewController suggestedItemsByGalleryLayoutSize]
  -[SBHPadAddSheetViewController setSuggestedItemsByGalleryLayoutSize:]
  -[SBHPadAddSheetViewController preferredInsetsForSheetPresentationInInterfaceOrientation:]
  -[SBHPadAddSheetViewController _paddedSidebarWidthForInterfaceOrientation:]
  -[SBHPadAddSheetViewController configureViewsForInterfaceOrientation:]
  -[SBHPadAddSheetViewController _columnSpacing]
  -[SBHPadAddSheetViewController _numberOfWidgetColumnsForGalleryLayoutSize:]
  -[SBHPadAddSheetViewController _numberOfWidgetColumnsThatFitInWidth:]
  -[SBHPadAddSheetViewController _widthNeededForWidgetColumns:]
  -[SBHPadAddSheetViewController widgetSearchController]
  -[SBHPadAddSheetViewController setWidgetSearchController:]
  -[SBHPadAddSheetViewController setRedBox:]


SBFolder : NSObject <SBFolderObserver, SBTreeNode, SBIconIndexNode, SBIconIndexMutableListObserver, SBIconListModelObserver, SBIconListModelDelegate, BSDescriptionProviding>
 @property  NSString *badge
 @property  NSString *uniqueIdentifier
 @property  NSString *displayName
 @property  NSString *defaultDisplayName
 @property  SBFolderIcon *icon
 @property  BOOL cancelable
 @property  SBFolder *parentFolder
 @property  SBFolder *rootFolder
 @property  Class listModelClass
 @property  NSArray *lists
 @property  unsigned long listCount
 @property  NSArray *visibleLists
 @property  unsigned long visibleListCount
 @property  unsigned long hiddenListCount
 @property  BOOL hasMultipleVisibleLists
 @property  BOOL hasMultipleVisibleNonTrailingEmptyLists
 @property  unsigned long maxListCount
 @property  {SBHIconGridSize=SS} listGridSize
 @property  {SBHIconGridSize=SS} listWithNonDefaultSizedIconsGridSize
 @property  {SBHIconGridSizeClassSizes={SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}} iconGridSizeClassSizes
 @property  unsigned long listRotatedLayoutClusterGridSizeClass
 @property  BOOL listsAllowRotatedLayout
 @property  unsigned long listAllowedGridSizeClasses
 @property  unsigned long iconCount
 @property  unsigned long visibleIconCount
 @property  unsigned long visibleWidgetIconCount
 @property  BOOL empty
 @property  BOOL full
 @property  BOOL shouldRemoveWhenEmpty
 @property  BOOL canRemoveIcons
 @property  BOOL canEditDisplayName
 @property  BOOL hasHiddenLists
 @property  BOOL hasVisibleLists
 @property  unsigned long firstVisibleListIndex
 @property  unsigned long lastVisibleListIndex
 @property  SBIconListModel *firstList
 @property  SBIconListModel *lastList
 @property  SBIconListModel *mostRecentlyHiddenList
 @property  SBIconListModel *leastRecentlyHiddenList
 @property  unsigned long requiredTrailingEmptyListCount
 @property  unsigned long trailingEmptyListCount
 @property  NSArray *trailingEmptyLists
 @property  NSArray *icons
 @property  NSArray *iconsInLists
 @property  NSString *recursiveDescription
 @property  BOOL containsWidgetIcon
 @property  BOOL containsVisibleWidgetIcon
 @property  BOOL containsNonDefaultSizedIcon
 @property  BOOL containsVisibleNonDefaultSizedIcon
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *children
 @property  <SBTreeNode> *parent

  // class methods
  +[SBFolder isRootFolderClass]
  +[SBFolder folderNodeIdentifierForUniqueIdentifier:]
  +[SBFolder listModelMutationOptionsForFolderMutationOptions:]
  +[SBFolder isFolderNodeIdentifier:]

  // instance methods
  -[SBFolder iconsOfClass:]
  -[SBFolder addIcons:]
  -[SBFolder folder:willAddIcon:]
  -[SBFolder addIconsOfClass:toSet:]
  -[SBFolder markIconStateClean]
  -[SBFolder lastList]
  -[SBFolder removeListsAtIndexes:]
  -[SBFolder leafIcons]
  -[SBFolder firstList]
  -[SBFolder pruneEmptyFolders]
  -[SBFolder iconCount]
  -[SBFolder insertIcon:atGridPath:options:]
  -[SBFolder folderIcons]
  -[SBFolder updateGridSizeForNonDefaultSizedIconsForList:includingToBeAddedIcon:]
  -[SBFolder relativePathForIcon:listGridCellInfoOptions:]
  -[SBFolder layoutDescription]
  -[SBFolder isLibraryCategoryFolder]
  -[SBFolder ancestryDidChange]
  -[SBFolder replaceIconAtGridPath:withIcon:options:]
  -[SBFolder insertEmptyListAtIndex:]
  -[SBFolder removeAllLists]
  -[SBFolder indexPathForGridPath:]
  -[SBFolder shouldRemoveWhenEmpty]
  -[SBFolder listCount]
  -[SBFolder indexesOfListsPassingTest:]
  -[SBFolder removeListAtIndex:]
  -[SBFolder listAtIndexPath:]
  -[SBFolder listRotatedLayoutClusterGridSizeClass]
  -[SBFolder addListWithIcons:]
  -[SBFolder folderIconStateDidDirty:]
  -[SBFolder mostRecentlyHiddenList]
  -[SBFolder listAtVisibleIndex:]
  -[SBFolder indexPathForList:]
  -[SBFolder listsContainingLeafIconWithIdentifier:]
  -[SBFolder iconListHiddenWillChange:]
  -[SBFolder containsIcon:]
  -[SBFolder initWithUniqueIdentifier:displayName:maxListCount:listGridSize:iconGridSizeClassSizes:]
  -[SBFolder didRemoveFolder:]
  -[SBFolder canAddIcons:startingAtList:]
  -[SBFolder isRootFolder]
  -[SBFolder recursiveDescription]
  -[SBFolder setListWithNonDefaultSizedIconsGridSize:]
  -[SBFolder addListWithIcon:]
  -[SBFolder indexForVisibleIndex:]
  -[SBFolder enumerateListsUsingBlock:]
  -[SBFolder containsVisibleWidgetIcon]
  -[SBFolder iconListIconStateDidDirty:]
  -[SBFolder _addList:]
  -[SBFolder addIcon:options:]
  -[SBFolder allIcons]
  -[SBFolder isExtraListIndex:]
  -[SBFolder replaceIcon:withIcon:options:]
  -[SBFolder compactLists]
  -[SBFolder markIconStateDirty]
  -[SBFolder didAddFolder:]
  -[SBFolder requiredTrailingEmptyListCount]
  -[SBFolder indexPathForIcon:]
  -[SBFolder hasMultipleVisibleLists]
  -[SBFolder compactOverflowLists]
  -[SBFolder addEmptyList]
  -[SBFolder isIconStateDirty]
  -[SBFolder listModelClass]
  -[SBFolder indexOfList:]
  -[SBFolder visibleIndexOfList:]
  -[SBFolder sortedGridPaths:]
  -[SBFolder listGridSize]
  -[SBFolder _informObserversOfMovedIcon:]
  -[SBFolder indexPathForIconPassingTest:]
  -[SBFolder listsAllowRotatedLayout]
  -[SBFolder sort]
  -[SBFolder listWithIdentifier:]
  -[SBFolder iconGridSizeClassSizes]
  -[SBFolder placeIcon:atIndexPath:]
  -[SBFolder isAllowedToContainIcon:]
  -[SBFolder _createNewListWithIcon:]
  -[SBFolder canRemoveIcons]
  -[SBFolder visibleIconCount]
  -[SBFolder initWithDisplayName:maxListCount:listGridSize:]
  -[SBFolder displayName]
  -[SBFolder isFull]
  -[SBFolder changeGridSizeClassOfIconAtIndexPath:toGridSizeClass:options:listGridCellInfoOptions:]
  -[SBFolder _swapRestoreIconCount:toLocation:]
  -[SBFolder indexPathForFirstFreeSlotStartingAtList:avoidingFirstList:searchForwards:]
  -[SBFolder initWithDisplayName:maxListCount:listGridSize:iconGridSizeClassSizes:]
  -[SBFolder setDefaultDisplayName:]
  -[SBFolder isValidListIndex:]
  -[SBFolder hasHiddenLists]
  -[SBFolder containsWidgetWithExtensionBundleIdentifier:]
  -[SBFolder uniqueIdentifier]
  -[SBFolder _setLists:]
  -[SBFolder isTrailingEmptyListIndex:]
  -[SBFolder iconList:didReplaceIcon:withIcon:]
  -[SBFolder folder:didReplaceIcon:withIcon:]
  -[SBFolder icon]
  -[SBFolder iconAtGridPath:]
  -[SBFolder indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBFolder isEmpty]
  -[SBFolder _createNewListWithIdentifier:]
  -[SBFolder gridPathForLastFreeSlotStartingAtList:avoidingFirstList:listGridCellInfoOptions:]
  -[SBFolder enumerateListsForSearchingForFirstFreeSlotStartingAtList:avoidingFirstList:searchForwards:block:]
  -[SBFolder _isCoalescingContentChanges]
  -[SBFolder nodeIdentifier]
  -[SBFolder indexPathForFirstFreeSlotAvoidingFirstList:]
  -[SBFolder removeIcon:options:listGridCellInfoOptions:]
  -[SBFolder iconAtIndexPath:]
  -[SBFolder _willAddList:]
  -[SBFolder placeIcon:atIndexPath:options:]
  -[SBFolder _handleBumpedIcons:afterInsertingIconIntoListAtIndex:options:didBump:]
  -[SBFolder compactOverflowListsWithoutMovingIconsPassingTest:removeEmptyLists:]
  -[SBFolder removeList:]
  -[SBFolder listContainingIndexPath:relativeIndex:]
  -[SBFolder isValidIndexPath:]
  -[SBFolder iconListModel:isGridLayoutValid:]
  -[SBFolder _compactLists]
  -[SBFolder indexPathForIcon:includingPlaceholders:]
  -[SBFolder canAddIcon]
  -[SBFolder setListAllowedGridSizeClasses:]
  -[SBFolder hasMultipleVisibleNonTrailingEmptyLists]
  -[SBFolder iconList:willAddIcon:]
  -[SBFolder removeIcon:options:]
  -[SBFolder enumerateVisibleListsUsingBlock:]
  -[SBFolder initWithDisplayName:maxListCount:maxIconCountInLists:]
  -[SBFolder children]
  -[SBFolder iconCountWithOptions:]
  -[SBFolder icons]
  -[SBFolder .cxx_destruct]
  -[SBFolder list:didRemoveContainedNodeIdentifiers:]
  -[SBFolder indexOfListContainingIcon:]
  -[SBFolder listAtIndex:]
  -[SBFolder iconList:didRemoveIcon:]
  -[SBFolder addIcon:]
  -[SBFolder enumerateAllIconsUsingBlock:]
  -[SBFolder containsNodeIdentifier:]
  -[SBFolder listWithGreatestHiddenDateMatchingOrdering:]
  -[SBFolder _compactsFirstList]
  -[SBFolder _didExplicitlyRemoveHiddenLists:]
  -[SBFolder folderWithIdentifier:]
  -[SBFolder iconList:didMoveIcon:]
  -[SBFolder gridPathForIcon:listGridCellInfoOptions:]
  -[SBFolder isExtraList:]
  -[SBFolder iconListHiddenDidChange:]
  -[SBFolder _swapInsertIcons:atIndexPaths:]
  -[SBFolder succinctDescriptionBuilder]
  -[SBFolder _insertList:atIndex:]
  -[SBFolder compactOverflowListsWithoutMovingIconsPassingTest:]
  -[SBFolder containsVisibleNonDefaultSizedIcon]
  -[SBFolder visibleWidgetIconCount]
  -[SBFolder sortedAndBucketedGridPaths:]
  -[SBFolder indexPathsForIconsPassingTest:]
  -[SBFolder startCoalescingContentChangesWithRequestID:]
  -[SBFolder indexPathForIconWithIdentifier:]
  -[SBFolder addListWithIcons:removingHiddenListsIfNecessary:]
  -[SBFolder resolvedComponentsForIndexPath:]
  -[SBFolder _removeLists:]
  -[SBFolder indexPathForLastFreeSlotStartingAtList:avoidingFirstList:]
  -[SBFolder indexPathsForIcon:]
  -[SBFolder firstFolderWithDisplayName:]
  -[SBFolder insertIcons:atGridPath:options:]
  -[SBFolder setListRotatedLayoutClusterGridSizeClass:]
  -[SBFolder nodesAlongIndexPath:consumedIndexes:]
  -[SBFolder descriptionBuilderWithMultilinePrefix:]
  -[SBFolder trailingEmptyLists]
  -[SBFolder init]
  -[SBFolder insertIcon:atIndexPath:options:]
  -[SBFolder visibleListCount]
  -[SBFolder setBadge:]
  -[SBFolder addIcon:toListAtIndex:options:]
  -[SBFolder indexPathsForIconsWithOptions:passingTest:]
  -[SBFolder visibleLists]
  -[SBFolder enumerateAllIconsWithBaseIndexPath:options:usingBlock:]
  -[SBFolder canAddIcon:]
  -[SBFolder extraListContainsNodeIdentifier:]
  -[SBFolder iconList:didAddIcon:]
  -[SBFolder insertEmptyListRemovingLeastRecentlyHiddenListIfNecessaryAtIndex:]
  -[SBFolder gridPathsForIndexPaths:listGridCellInfoOptions:]
  -[SBFolder addIconsPassingTest:toSet:]
  -[SBFolder indexPathForFolder:]
  -[SBFolder indexOfListWithIdentifier:]
  -[SBFolder descriptionWithMultilinePrefix:]
  -[SBFolder isValidIndexPath:forInsertion:]
  -[SBFolder enumerateExtraListsUsingBlock:]
  -[SBFolder ensureTrailingEmptyLists]
  -[SBFolder gridPathForFirstFreeSlotAvoidingFirstList:listGridCellInfoOptions:]
  -[SBFolder setCancelable:]
  -[SBFolder isVisibleListIndex:]
  -[SBFolder nextVisibleListAfterIndex:]
  -[SBFolder canAddIconCount:]
  -[SBFolder _informObserversOfAddedIcons:removedIcons:]
  -[SBFolder visibleListIndexes]
  -[SBFolder setParent:]
  -[SBFolder succinctDescription]
  -[SBFolder list:didAddContainedNodeIdentifiers:]
  -[SBFolder setIcon:]
  -[SBFolder _createNewList]
  -[SBFolder stopCoalescingContentChangesForRequestID:]
  -[SBFolder rootFolder]
  -[SBFolder appendRecursiveDescriptionToString:prefixPath:]
  -[SBFolder setDisplayName:]
  -[SBFolder listAtGridPath:]
  -[SBFolder canBounceIcon:]
  -[SBFolder removeIconAtIndexPath:options:]
  -[SBFolder firstFolderWithDefaultDisplayName:]
  -[SBFolder changeGridSizeOfListAtIndex:toGridSize:options:]
  -[SBFolder iconsInLists]
  -[SBFolder swapIconAtIndexPath:withIconAtIndexPath:options:]
  -[SBFolder listDidMoveNodes:]
  -[SBFolder hiddenIndexOfList:]
  -[SBFolder gridPathForFirstFreeSlotOfRangeOfSizeClass:avoidingFirstList:listGridCellInfoOptions:]
  -[SBFolder nodeDescriptionWithPrefix:]
  -[SBFolder gridPathForLastFreeSlotAvoidingFirstList:listGridCellInfoOptions:]
  -[SBFolder addIcons:options:]
  -[SBFolder listAtRelativePath:]
  -[SBFolder replaceIcon:withIcons:options:]
  -[SBFolder parent]
  -[SBFolder changeGridSizeOfList:toGridSize:options:]
  -[SBFolder hasVisibleLists]
  -[SBFolder containsNonDefaultSizedIcon]
  -[SBFolder gridPathForFirstFreeSlotOfRangeOfSizeClass:startingAtList:avoidingFirstList:searchForwards:listGridCellInfoOptions:]
  -[SBFolder iconList:didInvalidateLayoutWithGridCellInfoOptions:]
  -[SBFolder indexPathsForApplicationIconsWithBundleIdentifier:]
  -[SBFolder addNodeObserver:]
  -[SBFolder validatedIndexPathForInsertionIndexPath:avoidingFirstList:]
  -[SBFolder setRequiredTrailingEmptyListCount:]
  -[SBFolder iconWithIdentifier:]
  -[SBFolder listAllowedGridSizeClasses]
  -[SBFolder lists]
  -[SBFolder trailingEmptyListCount]
  -[SBFolder leastRecentlyHiddenList]
  -[SBFolder nextVisibleListIndexAfterIndex:]
  -[SBFolder defaultDisplayName]
  -[SBFolder enumerateAllIconsWithOptions:usingBlock:]
  -[SBFolder folder:didAddIcons:removedIcons:]
  -[SBFolder addFolderObserver:]
  -[SBFolder precedingVisibleListIndexBeforeIndex:]
  -[SBFolder parentFolder]
  -[SBFolder indexPathForNodeIdentifier:]
  -[SBFolder isTrailingEmptyList:]
  -[SBFolder _compactContiguousOverflowListsStartingAtListIndex:withoutMovingIconsPassingTest:removeEmptyLists:]
  -[SBFolder indexPathForRelativePath:]
  -[SBFolder validatedGridPathForInsertionGridPath:avoidingFirstList:]
  -[SBFolder listWithIdentifier:inFolderWithIdentifier:]
  -[SBFolder _createNewListWithIcons:]
  -[SBFolder uniqueIdentifiersForIndexPath:]
  -[SBFolder folderContainingIndexPath:relativeIndexPath:]
  -[SBFolder indexPathForIconWithIdentifier:includingPlaceholders:]
  -[SBFolder hiddenListCount]
  -[SBFolder addIcon:options:listGridCellInfoOptions:]
  -[SBFolder removeLeastRecentlyHiddenList]
  -[SBFolder gridPathForRelativePath:]
  -[SBFolder isCancelable]
  -[SBFolder trailingVisibleEmptyListCount]
  -[SBFolder maxListCount]
  -[SBFolder lastVisibleListIndex]
  -[SBFolder insertIcon:afterIcon:options:]
  -[SBFolder addEmptyListWithIdentifier:]
  -[SBFolder objectWithUniqueIdentifier:]
  -[SBFolder visibleIndexForIndex:]
  -[SBFolder folderWithUniqueIdentifier:]
  -[SBFolder canAddIconCount:startingAtList:]
  -[SBFolder indexPathForApplicationIconWithBundleIdentifier:]
  -[SBFolder _willRemoveList:atIndex:informObservers:]
  -[SBFolder removeHiddenLists]
  -[SBFolder _informObserversOfToBeAddedIcon:]
  -[SBFolder canAddIcons:]
  -[SBFolder gridPathWithListAtIndex:gridCellIndex:listGridCellInfoOptions:]
  -[SBFolder _updateOverflowCountInList:forInsertingIcon:removingIcon:options:]
  -[SBFolder _didAddList:informObservers:]
  -[SBFolder firstFolderWithUniqueIdentifier:displayName:defaultDisplayName:]
  -[SBFolder removeFolderObserver:]
  -[SBFolder replaceIcon:withIcons:options:listGridCellInfoOptions:]
  -[SBFolder containsWidgetIcon]
  -[SBFolder listWithNonDefaultSizedIconsGridSize]
  -[SBFolder gridPathForFirstFreeSlotStartingAtList:avoidingFirstList:listGridCellInfoOptions:]
  -[SBFolder compactOverflowListsAndRemoveEmptyLists:]
  -[SBFolder moveListAtIndex:toIndex:]
  -[SBFolder enumerateListsWithOptions:usingBlock:]
  -[SBFolder iconListModel:shouldBounceIcon:afterInsertingIcons:]
  -[SBFolder insertIcons:atIndexPath:options:]
  -[SBFolder indexPathForLastFreeSlotAvoidingFirstList:]
  -[SBFolder replaceIcon:withIcon:]
  -[SBFolder resolvedComponentsForUniqueIdentifierPath:]
  -[SBFolder iconsPassingTest:]
  -[SBFolder badge]
  -[SBFolder gridPathForIndexPath:listGridCellInfoOptions:]
  -[SBFolder listsContainingIcon:]
  -[SBFolder addEmptyListRemovingLeastRecentlyHiddenListIfNecessary]
  -[SBFolder canEditDisplayName]
  -[SBFolder stopCoalescingContentChangesForRequestID:forceReload:]
  -[SBFolder firstFolderWithUniqueIdentifier:]
  -[SBFolder _indexPathToRevealForJiggleMode]
  -[SBFolder containedNodeIdentifiers]
  -[SBFolder insertIcon:beforeIcon:options:]
  -[SBFolder isAllowedToContainIcons:]
  -[SBFolder lastVisibleNonEmptyListIndex]
  -[SBFolder _didRemoveList:atIndex:informObservers:]
  -[SBFolder iconListModel:isAllowedToContainIcon:]
  -[SBFolder didExplicitlyRemoveIcon:fromList:inFolder:options:]
  -[SBFolder indexPathForFirstFreeSlotStartingAtList:avoidingFirstList:]
  -[SBFolder setListsAllowRotatedLayout:]
  -[SBFolder removeNodeObserver:]
  -[SBFolder indexPathForIconWithOptions:passingTest:]
  -[SBFolder firstVisibleListIndex]


SBWidgetIcon : SBLeafIcon
 @property  SBHWidget *activeWidget
 @property  NSArray *widgets
 @property  <SBLeafIconDataSource> *lastUserSelectedDataSource
 @property  unsigned long stackChangeReason
 @property  unsigned long iconDataSourcesExcludingSuggestionsCount
 @property  BOOL allowsSuggestions
 @property  BOOL allowsExternalSuggestions
 @property  SBHWidget *firstSuggestedWidget
 @property  <SBLeafIconDataSource> *firstSuggestedIconDataSource

  // instance methods
  -[SBWidgetIcon copyWithSuggestionSource:]
  -[SBWidgetIcon canBeAddedToMultiItemDrag]
  -[SBWidgetIcon initWithLeafIdentifier:applicationBundleID:]
  -[SBWidgetIcon initWithCHSAvocadoDescriptors:suggestionSource:]
  -[SBWidgetIcon addFirstSuggestedWidget]
  -[SBWidgetIcon addDataSourcesFromWidgetIcons:]
  -[SBWidgetIcon didAddIconDataSource:]
  -[SBWidgetIcon activeWidget]
  -[SBWidgetIcon widgets]
  -[SBWidgetIcon canReceiveGrabbedIcon]
  -[SBWidgetIcon copyWithUniqueLeafIdentifier]
  -[SBWidgetIcon setStackChangeReason:]
  -[SBWidgetIcon _fallbackBestDataSource]
  -[SBWidgetIcon supportedGridSizeClasses]
  -[SBWidgetIcon iconDataSourcesExcludingSuggestionsCount]
  -[SBWidgetIcon .cxx_destruct]
  -[SBWidgetIcon supportsStackConfiguration]
  -[SBWidgetIcon initWithCHSAvocadoDescriptors:]
  -[SBWidgetIcon supportsConfiguration]
  -[SBWidgetIcon initWithWidgetExtensionIdentifiers:widgetKinds:]
  -[SBWidgetIcon initWithCHSAvocadoDescriptor:]
  -[SBWidgetIcon descriptionBuilderWithMultilinePrefix:]
  -[SBWidgetIcon isWidgetIcon]
  -[SBWidgetIcon isEqual:]
  -[SBWidgetIcon didRemoveIconDataSource:]
  -[SBWidgetIcon initWithWidgets:]
  -[SBWidgetIcon firstSuggestedIconDataSource]
  -[SBWidgetIcon lastUserSelectedDataSource]
  -[SBWidgetIcon allowsExternalSuggestions]
  -[SBWidgetIcon canBeReceivedByIcon]
  -[SBWidgetIcon _hasDataSourceThatIgnoresAllOtherDataSources]
  -[SBWidgetIcon setLastUserSelectedDataSource:]
  -[SBWidgetIcon stackChangeReason]
  -[SBWidgetIcon setAllowsSuggestions:]
  -[SBWidgetIcon removeFirstSuggestedIconDataSource]
  -[SBWidgetIcon isWidgetStackIcon]
  -[SBWidgetIcon copyWithZone:]
  -[SBWidgetIcon firstWidgetPassingTest:]
  -[SBWidgetIcon firstSuggestedWidget]
  -[SBWidgetIcon initWithWidget:]
  -[SBWidgetIcon initWithWidgetExtensionIdentifiers:widgetKinds:widgetContainerBundleIdentifers:]
  -[SBWidgetIcon updateLabel]
  -[SBWidgetIcon setAllowsExternalSuggestions:]
  -[SBWidgetIcon setActiveWidget:]
  -[SBWidgetIcon allowsSuggestions]


SBHPageManagementCellView : UIView <SBIconListModelObserver, SBFolderObserver>
 @property  SBIconListView *listView
 @property  MTMaterialView *listBackgroundView
 @property  UIView *listHighlightView
 @property  MTMaterialView *toggleButtonBackgroundView
 @property  SBFolder *folder
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  BOOL scalesListView
 @property  SBHPageManagementCheckbox *toggleButton
 @property  BOOL listHighlighted
 @property  BOOL hasCleanedUpListView
 @property  double toggleButtonAlpha
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHPageManagementCellView .cxx_destruct]
  -[SBHPageManagementCellView folder:listHiddenDidChange:]
  -[SBHPageManagementCellView layoutSubviews]
  -[SBHPageManagementCellView iconListHiddenDidChange:]
  -[SBHPageManagementCellView iconImageInfo]
  -[SBHPageManagementCellView folder]
  -[SBHPageManagementCellView listView]
  -[SBHPageManagementCellView setIconImageInfo:]
  -[SBHPageManagementCellView toggleButton]
  -[SBHPageManagementCellView setListHighlighted:]
  -[SBHPageManagementCellView listBackgroundView]
  -[SBHPageManagementCellView toggleButtonBackgroundView]
  -[SBHPageManagementCellView initWithListView:listBackgroundView:toggleButtonBackgroundView:folder:metrics:toggleButtonAllowed:]
  -[SBHPageManagementCellView scalesListView]
  -[SBHPageManagementCellView setScalesListView:]
  -[SBHPageManagementCellView toggleButtonAlpha]
  -[SBHPageManagementCellView setToggleButtonAlpha:]
  -[SBHPageManagementCellView listHighlightView]
  -[SBHPageManagementCellView cleanUpListView]
  -[SBHPageManagementCellView _togglePageHidden:]
  -[SBHPageManagementCellView hasCleanedUpListView]
  -[SBHPageManagementCellView setHasCleanedUpListView:]
  -[SBHPageManagementCellView isListHighlighted]


SBHAddWidgetSheetViewControllerBase : UIViewController
 @property  <SBHAddWidgetSheetViewControllerDelegate> *delegate
 @property  {SBHWidgetFilteringParameters=QB} allowedWidgets
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  <SBIconViewProviding> *iconViewProvider
 @property  SBHAddWidgetSheetAppCollectionViewCellConfigurator *appCellConfigurator
 @property  MTMaterialView *externalBackgroundView

  // instance methods
  -[SBHAddWidgetSheetViewControllerBase setIconViewProvider:]
  -[SBHAddWidgetSheetViewControllerBase iconViewProvider]
  -[SBHAddWidgetSheetViewControllerBase .cxx_destruct]
  -[SBHAddWidgetSheetViewControllerBase setDelegate:]
  -[SBHAddWidgetSheetViewControllerBase setListLayoutProvider:]
  -[SBHAddWidgetSheetViewControllerBase delegate]
  -[SBHAddWidgetSheetViewControllerBase listLayoutProvider]
  -[SBHAddWidgetSheetViewControllerBase appCellConfigurator]
  -[SBHAddWidgetSheetViewControllerBase allowedWidgets]
  -[SBHAddWidgetSheetViewControllerBase externalBackgroundView]
  -[SBHAddWidgetSheetViewControllerBase initWithListLayoutProvider:iconViewProvider:allowedWidgets:appCellConfigurator:]
  -[SBHAddWidgetSheetViewControllerBase setExternalBackgroundView:]
  -[SBHAddWidgetSheetViewControllerBase initWithListLayoutProvider:iconViewProvider:allowedWidgets:appCellIconImageCache:]
  -[SBHAddWidgetSheetViewControllerBase preferredInsetsForSheetPresentationInInterfaceOrientation:]
  -[SBHAddWidgetSheetViewControllerBase setAppCellConfigurator:]


SBHWidgetIntroductionSettings : PTSettings
 @property  BOOL showWidgetIntroConvenienceControl
 @property  BOOL editButtonAsUndo
 @property  BOOL simpleBottomSnaking
 @property  BOOL bumpLeastUsedApps
 @property  BOOL showXLTVWidget
 @property  BOOL showModalWidgetIntroduction

  // class methods
  +[SBHWidgetIntroductionSettings settingsControllerModule]

  // instance methods
  -[SBHWidgetIntroductionSettings setDefaultValues]
  -[SBHWidgetIntroductionSettings setShowWidgetIntroConvenienceControl:]
  -[SBHWidgetIntroductionSettings setShowXLTVWidget:]
  -[SBHWidgetIntroductionSettings showWidgetIntroConvenienceControl]
  -[SBHWidgetIntroductionSettings editButtonAsUndo]
  -[SBHWidgetIntroductionSettings simpleBottomSnaking]
  -[SBHWidgetIntroductionSettings bumpLeastUsedApps]
  -[SBHWidgetIntroductionSettings showXLTVWidget]
  -[SBHWidgetIntroductionSettings showModalWidgetIntroduction]
  -[SBHWidgetIntroductionSettings setEditButtonAsUndo:]
  -[SBHWidgetIntroductionSettings setSimpleBottomSnaking:]
  -[SBHWidgetIntroductionSettings setBumpLeastUsedApps:]
  -[SBHWidgetIntroductionSettings setShowModalWidgetIntroduction:]


SBHIconSettings : PTSettings
 @property  BOOL suppressJitter
 @property  BOOL alwaysHitTestNearestIcon
 @property  double iconHitboxPaddingX
 @property  double iconHitboxPaddingY
 @property  SBFParallaxSettings *iconParallaxSettings
 @property  SBFParallaxSettings *badgeParallaxSettings

  // class methods
  +[SBHIconSettings settingsControllerModule]

  // instance methods
  -[SBHIconSettings badgeParallaxSettings]
  -[SBHIconSettings setIconHitboxPaddingY:]
  -[SBHIconSettings .cxx_destruct]
  -[SBHIconSettings setDefaultValues]
  -[SBHIconSettings iconHitboxPaddingX]
  -[SBHIconSettings setAlwaysHitTestNearestIcon:]
  -[SBHIconSettings setIconHitboxPaddingX:]
  -[SBHIconSettings iconParallaxSettings]
  -[SBHIconSettings setBadgeParallaxSettings:]
  -[SBHIconSettings alwaysHitTestNearestIcon]
  -[SBHIconSettings setIconParallaxSettings:]
  -[SBHIconSettings iconHitboxPaddingY]
  -[SBHIconSettings suppressJitter]
  -[SBHIconSettings setSuppressJitter:]


SBIconListViewIconSizeChangeAnimator : SBIconListViewClusterAnimator <SBIconListLayoutAnimating>
 @property  SBHIconEditingSettings *iconEditingSettings
 @property  UIView *snapshotContainerView
 @property  SBIconView *iconView
 @property  UIView *priorIconImageSnapshotView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewIconSizeChangeAnimator .cxx_destruct]
  -[SBIconListViewIconSizeChangeAnimator iconEditingSettings]
  -[SBIconListViewIconSizeChangeAnimator iconView]
  -[SBIconListViewIconSizeChangeAnimator iconListView:wantsAnimatedLayoutForIconView:withParameters:alongsideAnimationBlock:]
  -[SBIconListViewIconSizeChangeAnimator initWithIconView:priorIconImageSnapshotView:]
  -[SBIconListViewIconSizeChangeAnimator prepareAnimationForListView:]
  -[SBIconListViewIconSizeChangeAnimator priorIconImageSnapshotView]
  -[SBIconListViewIconSizeChangeAnimator setSnapshotContainerView:]
  -[SBIconListViewIconSizeChangeAnimator snapshotContainerView]


SBHLibraryPodCategoryIcon : SBLeafIcon <SBHLibraryCategoryObserver>
 @property  SBHLibraryCategory *category
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibraryPodCategoryIcon initWithCategory:]
  -[SBHLibraryPodCategoryIcon .cxx_destruct]
  -[SBHLibraryPodCategoryIcon labelAccessoryType]
  -[SBHLibraryPodCategoryIcon categoryDidUpdate:]
  -[SBHLibraryPodCategoryIcon category]
  -[SBHLibraryPodCategoryIcon isCategoryIcon]


SBHLibraryPodIconZoomAnimator : SBIconZoomAnimator <SBHLibraryViewControllerObserver>
 @property  <SBHLibraryPodIconZoomAnimationContaining> *animationContainer
 @property  SBHLibraryPodZoomSettings *settings
 @property  SBFolderIcon *targetIcon
 @property  SBIconView *targetIconView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibraryPodIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBHLibraryPodIconZoomAnimator _cleanupAnimation]
  -[SBHLibraryPodIconZoomAnimator cleanup]
  -[SBHLibraryPodIconZoomAnimator _centerOfMiniPodIconViews]
  -[SBHLibraryPodIconZoomAnimator _cleanupMiniPodIconViewsAfterCrossfade]
  -[SBHLibraryPodIconZoomAnimator _handleIconViewClippedNotification:]
  -[SBHLibraryPodIconZoomAnimator _setupFolderAndLibraryScalingViews]
  -[SBHLibraryPodIconZoomAnimator _setupMatchMoveAnimation]
  -[SBHLibraryPodIconZoomAnimator _setAnimationFraction:]
  -[SBHLibraryPodIconZoomAnimator .cxx_destruct]
  -[SBHLibraryPodIconZoomAnimator targetIconView]
  -[SBHLibraryPodIconZoomAnimator _updateLibraryAlphaForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _numberOfSignificantAnimations]
  -[SBHLibraryPodIconZoomAnimator referenceIconView]
  -[SBHLibraryPodIconZoomAnimator _updateSearchBarAlphaForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _prepareAnimation]
  -[SBHLibraryPodIconZoomAnimator _updateLibraryScaleForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _scaleForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator initWithAnimationContainer:innerFolderController:folderIcon:searchBar:libraryViewController:]
  -[SBHLibraryPodIconZoomAnimator targetIcon]
  -[SBHLibraryPodIconZoomAnimator _prepareToCrossfadeMiniPodIconViews]
  -[SBHLibraryPodIconZoomAnimator _captureVisibleAndMiniPodIconViews]
  -[SBHLibraryPodIconZoomAnimator _removeMatchMoveAnimation]
  -[SBHLibraryPodIconZoomAnimator libraryViewController:willPresentSearchController:]
  -[SBHLibraryPodIconZoomAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[SBHLibraryPodIconZoomAnimator _cancelAnimationForIconViewClippedOrObscured]
  -[SBHLibraryPodIconZoomAnimator _animateIconViewTransformsAndAlphaForZoomFraction:withAnimationSettings:delay:completion:]
  -[SBHLibraryPodIconZoomAnimator _updateFolderNavigationBarAlphaForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _returnFolderAndLibraryScalingViews]
  -[SBHLibraryPodIconZoomAnimator _updateIconCrossfadeForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _updateFolderViewFramesForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator dealloc]
  -[SBHLibraryPodIconZoomAnimator _updateVisibleIconViewsPointerAllowed:]
  -[SBHLibraryPodIconZoomAnimator _updateSearchBarForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _handleIconZoomNotification:]


SBHLibraryPodFadeAnimator : SBIconAnimator
 @property  SBHLibraryPodZoomSettings *settings

  // instance methods
  -[SBHLibraryPodFadeAnimator cleanup]
  -[SBHLibraryPodFadeAnimator _setAnimationFraction:]
  -[SBHLibraryPodFadeAnimator .cxx_destruct]
  -[SBHLibraryPodFadeAnimator _numberOfSignificantAnimations]
  -[SBHLibraryPodFadeAnimator _prepareAnimation]
  -[SBHLibraryPodFadeAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[SBHLibraryPodFadeAnimator _applyAlphaForFraction:]
  -[SBHLibraryPodFadeAnimator initWithAnimationContainer:innerFolderController:folderIcon:searchBar:]


SBHMultiplexingWrapperViewController : UIViewController <SBHMultiplexingViewControllerObserver, SBIconViewCustomImageViewControlling>
 @property  NSString *location
 @property  UIView *containerView
 @property  UIView *backgroundView
 @property  unsigned long backgroundAnimationCount
 @property  <SBHMultiplexingWrapperViewControllerDelegate> *delegate
 @property  UIViewController *multiplexingViewController
 @property  APUIAppPredictionViewController *appPredictionViewController
 @property  unsigned long component
 @property  BOOL canAlignWithGrid
 @property  BOOL gridAligned
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  SBIcon *icon
 @property  <SBLeafIconDataSource> *visiblyActiveDataSource
 @property  BOOL editing
 @property  BOOL wantsEditingDisplayStyle
 @property  BOOL showingContextMenu
 @property  BOOL overlapping
 @property  BOOL dropping
 @property  BOOL userInteractionEnabled
 @property  BOOL wantsCaptureOnlyBackgroundView
 @property  @? backgroundViewProvider
 @property  @? backgroundViewConfigurator
 @property  BOOL forcesEdgeAntialiasing
 @property  double brightness
 @property  BOOL wantsLabelHidden
 @property  unsigned long userVisibilityStatus
 @property  BOOL automaticallyUpdatesVisiblySettled
 @property  unsigned long presentationMode
 @property  BOOL showsSnapshotWhenDeactivated
 @property  unsigned long imageViewAlignment
 @property  unsigned long pauseReasons
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *applicationShortcutItems
 @property  {UIEdgeInsets=dddd} minimumPreferredEdgeInsetsForContextMenu
 @property  UIView *snapshotView
 @property  {CGPoint=dd} snapshotViewCenter
 @property  UIView *springLoadingEffectTargetView
 @property  {SBIconApproximateLayoutPosition=QQ} approximateLayoutPosition
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds
 @property  double continuousCornerRadius
 @property  BOOL showsSquareCorners

  // instance methods
  -[SBHMultiplexingWrapperViewController setBackgroundViewConfigurator:]
  -[SBHMultiplexingWrapperViewController setOverlapping:]
  -[SBHMultiplexingWrapperViewController forcesEdgeAntialiasing]
  -[SBHMultiplexingWrapperViewController setUserInteractionEnabled:]
  -[SBHMultiplexingWrapperViewController removeCustomImageViewControllerObserver:]
  -[SBHMultiplexingWrapperViewController setShowingContextMenu:]
  -[SBHMultiplexingWrapperViewController backgroundViewConfigurator]
  -[SBHMultiplexingWrapperViewController viewWillLayoutSubviews]
  -[SBHMultiplexingWrapperViewController icon]
  -[SBHMultiplexingWrapperViewController pauseReasons]
  -[SBHMultiplexingWrapperViewController setEditing:animated:]
  -[SBHMultiplexingWrapperViewController isShowingContextMenu]
  -[SBHMultiplexingWrapperViewController containerView]
  -[SBHMultiplexingWrapperViewController continuousCornerRadius]
  -[SBHMultiplexingWrapperViewController .cxx_destruct]
  -[SBHMultiplexingWrapperViewController approximateLayoutPosition]
  -[SBHMultiplexingWrapperViewController isOverlapping]
  -[SBHMultiplexingWrapperViewController sourceView]
  -[SBHMultiplexingWrapperViewController setApproximateLayoutPosition:]
  -[SBHMultiplexingWrapperViewController applicationShortcutItems]
  -[SBHMultiplexingWrapperViewController setLocation:]
  -[SBHMultiplexingWrapperViewController _configureBackgroundViewIfNecessary]
  -[SBHMultiplexingWrapperViewController setLegibilitySettings:]
  -[SBHMultiplexingWrapperViewController addCustomImageViewControllerObserver:]
  -[SBHMultiplexingWrapperViewController backgroundAnimationCount]
  -[SBHMultiplexingWrapperViewController multiplexingViewControllerDidActivate:]
  -[SBHMultiplexingWrapperViewController setDelegate:]
  -[SBHMultiplexingWrapperViewController imageViewAlignment]
  -[SBHMultiplexingWrapperViewController setImageViewAlignment:]
  -[SBHMultiplexingWrapperViewController component]
  -[SBHMultiplexingWrapperViewController iconImageInfo]
  -[SBHMultiplexingWrapperViewController visibleBounds]
  -[SBHMultiplexingWrapperViewController setShowsSquareCorners:]
  -[SBHMultiplexingWrapperViewController setContainerView:]
  -[SBHMultiplexingWrapperViewController backgroundViewProvider]
  -[SBHMultiplexingWrapperViewController setBackgroundViewProvider:]
  -[SBHMultiplexingWrapperViewController location]
  -[SBHMultiplexingWrapperViewController setEditing:]
  -[SBHMultiplexingWrapperViewController willShowContextMenuAtLocation:]
  -[SBHMultiplexingWrapperViewController isUserInteractionEnabled]
  -[SBHMultiplexingWrapperViewController didSelectApplicationShortcutItem:]
  -[SBHMultiplexingWrapperViewController viewWillAppear:]
  -[SBHMultiplexingWrapperViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[SBHMultiplexingWrapperViewController setBackgroundView:]
  -[SBHMultiplexingWrapperViewController isEditing]
  -[SBHMultiplexingWrapperViewController delegate]
  -[SBHMultiplexingWrapperViewController _widgetContextMenuController]
  -[SBHMultiplexingWrapperViewController setForcesEdgeAntialiasing:]
  -[SBHMultiplexingWrapperViewController wantsCaptureOnlyBackgroundView]
  -[SBHMultiplexingWrapperViewController showsSquareCorners]
  -[SBHMultiplexingWrapperViewController loadView]
  -[SBHMultiplexingWrapperViewController _updateWidgetViewHitTesting]
  -[SBHMultiplexingWrapperViewController visiblyActiveDataSource]
  -[SBHMultiplexingWrapperViewController setPauseReasons:]
  -[SBHMultiplexingWrapperViewController setBackgroundAnimationCount:]
  -[SBHMultiplexingWrapperViewController setIconImageInfo:]
  -[SBHMultiplexingWrapperViewController legibilitySettings]
  -[SBHMultiplexingWrapperViewController backgroundView]
  -[SBHMultiplexingWrapperViewController _canShowWhileLocked]
  -[SBHMultiplexingWrapperViewController _updateEdgeAntialiasing]
  -[SBHMultiplexingWrapperViewController wantsEditingDisplayStyle]
  -[SBHMultiplexingWrapperViewController setWantsEditingDisplayStyle:]
  -[SBHMultiplexingWrapperViewController wantsLabelHidden]
  -[SBHMultiplexingWrapperViewController isGridAligned]
  -[SBHMultiplexingWrapperViewController initWithIcon:location:multiplexingViewController:appPredictionViewController:canAlignWithGrid:]
  -[SBHMultiplexingWrapperViewController multiplexingViewController]
  -[SBHMultiplexingWrapperViewController initWithIcon:location:multiplexingViewController:component:]
  -[SBHMultiplexingWrapperViewController expectedAppPredictionViewControllerMode]
  -[SBHMultiplexingWrapperViewController _updateMultiplexingViewControllerModeAnimated:]
  -[SBHMultiplexingWrapperViewController _setBackgroundViewWeighting:]
  -[SBHMultiplexingWrapperViewController _updateApproximateWidgetPosition]
  -[SBHMultiplexingWrapperViewController canAlignWithGrid]
  -[SBHMultiplexingWrapperViewController _updateBackgroundViewWeighting]
  -[SBHMultiplexingWrapperViewController appPredictionViewController]


SBIconListViewIconVisibilityInfo : NSObject <BSDescriptionProviding, NSCopying>
 @property  BOOL normalized
 @property  NSMapTable *visibleIconRects
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewIconVisibilityInfo enumerateVisibleIconsUsingBlock:]
  -[SBIconListViewIconVisibilityInfo .cxx_destruct]
  -[SBIconListViewIconVisibilityInfo setNormalized:]
  -[SBIconListViewIconVisibilityInfo succinctDescriptionBuilder]
  -[SBIconListViewIconVisibilityInfo visibleRectForIcon:]
  -[SBIconListViewIconVisibilityInfo descriptionBuilderWithMultilinePrefix:]
  -[SBIconListViewIconVisibilityInfo isEqual:]
  -[SBIconListViewIconVisibilityInfo descriptionWithMultilinePrefix:]
  -[SBIconListViewIconVisibilityInfo visibleIconRects]
  -[SBIconListViewIconVisibilityInfo succinctDescription]
  -[SBIconListViewIconVisibilityInfo isNormalized]
  -[SBIconListViewIconVisibilityInfo setVisibleRect:forIcon:]
  -[SBIconListViewIconVisibilityInfo copyWithZone:]
  -[SBIconListViewIconVisibilityInfo addValuesFromIconVisibilityInfo:]


SBIconImageView : UIView <SBIconObserver, SBIconProgressViewDelegate, SBHIconImageCacheObserver, SBReusableView, SBCrossfadingIconImageSource, BSDescriptionProviding>
 @property  NSString *location
 @property  double overlayAlpha
 @property  SBIcon *icon
 @property  SBIconView *iconView
 @property  SBHIconImageCache *iconImageCache
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  double brightness
 @property  UIImage *displayedImage
 @property  BOOL paused
 @property  BOOL showsSquareCorners
 @property  BOOL jittering
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds
 @property  double continuousCornerRadius

  // instance methods
  -[SBIconImageView _updateProgressMask]
  -[SBIconImageView contentsImage]
  -[SBIconImageView didEndAsynchronousImageLoadForIcon:]
  -[SBIconImageView icon]
  -[SBIconImageView setBrightness:]
  -[SBIconImageView continuousCornerRadius]
  -[SBIconImageView .cxx_destruct]
  -[SBIconImageView setOverlayAlpha:]
  -[SBIconImageView _generateSquareContentsImage]
  -[SBIconImageView iconImageCache]
  -[SBIconImageView sourceView]
  -[SBIconImageView layoutSubviews]
  -[SBIconImageView setLocation:]
  -[SBIconImageView iconViewFolderIconImageCacheDidChange]
  -[SBIconImageView succinctDescriptionBuilder]
  -[SBIconImageView setProgressState:paused:percent:animated:]
  -[SBIconImageView brightness]
  -[SBIconImageView setIconImageCache:]
  -[SBIconImageView descriptionBuilderWithMultilinePrefix:]
  -[SBIconImageView iconImageInfo]
  -[SBIconImageView visibleBounds]
  -[SBIconImageView _shouldAnimatePropertyWithKey:]
  -[SBIconImageView setShowsSquareCorners:]
  -[SBIconImageView iconImageCache:didUpdateImageForIcon:]
  -[SBIconImageView descriptionWithMultilinePrefix:]
  -[SBIconImageView sizeThatFits:]
  -[SBIconImageView succinctDescription]
  -[SBIconImageView prepareForReuse]
  -[SBIconImageView _clearProgressView]
  -[SBIconImageView _updateOverlayAlpha]
  -[SBIconImageView location]
  -[SBIconImageView snapshot]
  -[SBIconImageView hasOpaqueImage]
  -[SBIconImageView clearIconImageInfo]
  -[SBIconImageView setPaused:]
  -[SBIconImageView isJittering]
  -[SBIconImageView initWithFrame:]
  -[SBIconImageView overlayAlpha]
  -[SBIconImageView iconImageDidUpdate:]
  -[SBIconImageView iconViewLegibilitySettingsDidChange]
  -[SBIconImageView setIcon:location:animated:]
  -[SBIconImageView dealloc]
  -[SBIconImageView displayedImage]
  -[SBIconImageView progressViewCanBeRemoved:]
  -[SBIconImageView showsSquareCorners]
  -[SBIconImageView setJittering:]
  -[SBIconImageView setProgressAlpha:]
  -[SBIconImageView clearCachedImages]
  -[SBIconImageView squareContentsImage]
  -[SBIconImageView iconView]
  -[SBIconImageView setIconView:]
  -[SBIconImageView intrinsicContentSize]
  -[SBIconImageView willBeginAsynchronousImageLoadForIcon:]
  -[SBIconImageView setIconImageInfo:]
  -[SBIconImageView updateImageAnimated:]
  -[SBIconImageView isPaused]


SBHApplicationIcon : SBLeafIcon
 @property  BOOL uninstalledByUser
 @property  NSString *applicationDisplayName

  // instance methods
  -[SBHApplicationIcon possibleUserTapDidCancel]
  -[SBHApplicationIcon cancelDownload]
  -[SBHApplicationIcon applicationDisplayName]
  -[SBHApplicationIcon automationID]
  -[SBHApplicationIcon prioritizeDownload]
  -[SBHApplicationIcon setUninstalledByUser:]
  -[SBHApplicationIcon initWithLeafIdentifier:applicationPlaceholder:]
  -[SBHApplicationIcon removeApplicationDataSources]
  -[SBHApplicationIcon iconImageCacheIdentifier]
  -[SBHApplicationIcon copyWithLeafIdentifier:]
  -[SBHApplicationIcon resumeDownload]
  -[SBHApplicationIcon isApplicationIcon]
  -[SBHApplicationIcon pauseDownload]
  -[SBHApplicationIcon possibleUserTapBeganWithAbsoluteTime:andContinuousTime:]
  -[SBHApplicationIcon replaceIconDataSourcesWithApplication:]
  -[SBHApplicationIcon noteExternalApplicationPlaceholderStateChange]
  -[SBHApplicationIcon removeApplicationPlaceholderDataSources]
  -[SBHApplicationIcon initWithApplication:]
  -[SBHApplicationIcon initWithApplicationPlaceholder:]
  -[SBHApplicationIcon applicationPlaceholder]
  -[SBHApplicationIcon addApplicationDataSource:]
  -[SBHApplicationIcon application]
  -[SBHApplicationIcon isUninstalledByUser]
  -[SBHApplicationIcon replaceIconDataSourcesWithApplicationPlaceholder:]
  -[SBHApplicationIcon setBadge:]
  -[SBHApplicationIcon isEqual:]
  -[SBHApplicationIcon initWithApplicationWithBundleIdentifier:]
  -[SBHApplicationIcon initWithLeafIdentifier:application:]
  -[SBHApplicationIcon copyWithZone:]


SBHSimpleApplication : NSObject <SBHApplication, SBHApplicationPlaceholder, BSDescriptionProviding>
 @property  BOOL beta
 @property  unsigned long installType
 @property  BOOL blockedForScreenTimeExpiration
 @property  long long progressState
 @property  double progressPercent
 @property  BOOL progressPaused
 @property  <SBHIconModelApplicationDataSource> *iconModelApplicationDataSource
 @property  BOOL placeholder
 @property  NSString *bundleIdentifier
 @property  NSURL *bundleURL
 @property  NSString *displayName
 @property  NSString *vendorName
 @property  NSArray *tags
 @property  BOOL hasHiddenTag
 @property  NSString *iconIdentifier
 @property  BOOL systemApplication
 @property  BOOL internalApplication
 @property  BOOL appleApplication
 @property  BOOL appClip
 @property  id badgeValue
 @property  NSString *uniqueIdentifier
 @property  NSString *configurationStorageIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *applicationBundleIdentifier
 @property  NSString *applicationDisplayName
 @property  BOOL active
 @property  BOOL waiting
 @property  BOOL paused
 @property  BOOL pausable
 @property  BOOL failed
 @property  BOOL cancelable
 @property  BOOL installing
 @property  BOOL downloading
 @property  BOOL prioritizable
 @property  BOOL cloudDemoted
 @property  BOOL newAppInstallFromStore

  // instance methods
  -[SBHSimpleApplication isInternalApplication]
  -[SBHSimpleApplication initWithApplicationInfo:]
  -[SBHSimpleApplication iconCompleteUninstall:]
  -[SBHSimpleApplication isSystemApplication]
  -[SBHSimpleApplication supportedGridSizeClassesForIcon:]
  -[SBHSimpleApplication applicationDisplayName]
  -[SBHSimpleApplication canGenerateIconsInBackgroundForIcon:]
  -[SBHSimpleApplication installType]
  -[SBHSimpleApplication displayName]
  -[SBHSimpleApplication icon:displayNameForLocation:]
  -[SBHSimpleApplication isBlockedForScreenTimeExpiration]
  -[SBHSimpleApplication applicationBundleIdentifier]
  -[SBHSimpleApplication uniqueIdentifier]
  -[SBHSimpleApplication icon:unmaskedImageWithInfo:]
  -[SBHSimpleApplication updateDeviceManagementPolicy:]
  -[SBHSimpleApplication bundleIdentifier]
  -[SBHSimpleApplication initWithApplicationRecord:]
  -[SBHSimpleApplication icon:imageWithInfo:]
  -[SBHSimpleApplication priorityForIcon:]
  -[SBHSimpleApplication setProgressPercent:]
  -[SBHSimpleApplication progressState]
  -[SBHSimpleApplication isTimedOutForIcon:]
  -[SBHSimpleApplication .cxx_destruct]
  -[SBHSimpleApplication progressPercent]
  -[SBHSimpleApplication labelAccessoryTypeForIcon:]
  -[SBHSimpleApplication succinctDescriptionBuilder]
  -[SBHSimpleApplication isProgressPausedForIcon:]
  -[SBHSimpleApplication progressPercentForIcon:]
  -[SBHSimpleApplication bundleURL]
  -[SBHSimpleApplication initWithBundleIdentifier:allowPlaceholder:]
  -[SBHSimpleApplication descriptionBuilderWithMultilinePrefix:]
  -[SBHSimpleApplication setIconModelApplicationDataSource:]
  -[SBHSimpleApplication initWithApplicationProxy:]
  -[SBHSimpleApplication descriptionWithMultilinePrefix:]
  -[SBHSimpleApplication isBeta]
  -[SBHSimpleApplication succinctDescription]
  -[SBHSimpleApplication initWithBundleIdentifier:]
  -[SBHSimpleApplication setProgressState:]
  -[SBHSimpleApplication setProgressPaused:]
  -[SBHSimpleApplication dealloc]
  -[SBHSimpleApplication progressStateForIcon:]
  -[SBHSimpleApplication iconModelApplicationDataSource]
  -[SBHSimpleApplication isPlaceholder]
  -[SBHSimpleApplication isProgressPaused]
  -[SBHSimpleApplication updateProgressState:progressPercent:progressPaused:]
  -[SBHSimpleApplication tags]


SBHSimpleApplicationPolicyMonitor : NSObject
 @property  DMFApplicationPolicyMonitor *policyMonitor

  // class methods
  +[SBHSimpleApplicationPolicyMonitor sharedInstance]

  // instance methods
  -[SBHSimpleApplicationPolicyMonitor registerApplication:]
  -[SBHSimpleApplicationPolicyMonitor unregisterApplication:]
  -[SBHSimpleApplicationPolicyMonitor .cxx_destruct]
  -[SBHSimpleApplicationPolicyMonitor policyMonitor]
  -[SBHSimpleApplicationPolicyMonitor init]
  -[SBHSimpleApplicationPolicyMonitor updateAllPolicies]


SBHRootSidebarController : UIViewController <UIGestureRecognizerDelegate, SBHSidebarProvider>
 @property  NSMutableArray *widgetViewControllerConstraints
 @property  NSLayoutConstraint *dockHeightConstraint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WGWidgetGroupViewController *widgetViewController
 @property  SBHSidebarVisualConfiguration *sidebarVisualConfiguration
 @property  unsigned long layoutInsetsIgnoredEdges
 @property  <SBHSidebarProviderDelegate> *delegate
 @property  UIViewController *avocadoViewController
 @property  _UILegibilitySettings *legibilitySettings

  // instance methods
  -[SBHRootSidebarController setAvocadoViewController:]
  -[SBHRootSidebarController avocadoViewController]
  -[SBHRootSidebarController _configureAvocadoViewController]
  -[SBHRootSidebarController sidebarVisualConfiguration]
  -[SBHRootSidebarController widgetViewControllerConstraints]
  -[SBHRootSidebarController .cxx_destruct]
  -[SBHRootSidebarController dockHeightConstraint]
  -[SBHRootSidebarController viewDidLoad]
  -[SBHRootSidebarController _configureWidgetViewController]
  -[SBHRootSidebarController setLegibilitySettings:]
  -[SBHRootSidebarController setDelegate:]
  -[SBHRootSidebarController viewDidAppear:]
  -[SBHRootSidebarController _addEditButtonForWidgetGroupViewController:]
  -[SBHRootSidebarController _setupConstraintsForViewController:]
  -[SBHRootSidebarController viewWillDisappear:]
  -[SBHRootSidebarController _updateDockHeightConstraint]
  -[SBHRootSidebarController viewWillAppear:]
  -[SBHRootSidebarController _configureLayoutMargins]
  -[SBHRootSidebarController setWidgetViewController:]
  -[SBHRootSidebarController setEditingIcons:]
  -[SBHRootSidebarController delegate]
  -[SBHRootSidebarController setSidebarVisualConfiguration:]
  -[SBHRootSidebarController setWidgetViewControllerConstraints:]
  -[SBHRootSidebarController setLayoutInsetsIgnoredEdges:]
  -[SBHRootSidebarController setDockHeightConstraint:]
  -[SBHRootSidebarController layoutInsetsIgnoredEdges]
  -[SBHRootSidebarController widgetViewController]
  -[SBHRootSidebarController viewDidDisappear:]
  -[SBHRootSidebarController legibilitySettings]
  -[SBHRootSidebarController _canShowWhileLocked]


SBHIconStateUnarchivingSlugIconSource : NSObject <SBHIconStateUnarchiverIconSource>
  // instance methods
  -[SBHIconStateUnarchivingSlugIconSource .cxx_destruct]
  -[SBHIconStateUnarchivingSlugIconSource leafIconForIdentifier:]
  -[SBHIconStateUnarchivingSlugIconSource applicationIconForBundleIdentifier:]


SBIconListGridLayoutConfiguration : NSObject <NSCopying, BSDescriptionProviding>
 @property  unsigned long numberOfPortraitColumns
 @property  unsigned long numberOfPortraitRows
 @property  unsigned long numberOfLandscapeColumns
 @property  unsigned long numberOfLandscapeRows
 @property  {SBHIconGridSizeClassSizes={SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}} iconGridSizeClassSizes
 @property  unsigned long supportedIconGridSizeClasses
 @property  {UIEdgeInsets=dddd} portraitLayoutInsets
 @property  {UIEdgeInsets=dddd} landscapeLayoutInsets
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  unsigned long rotatedLayoutClusterGridSizeClass
 @property  long long primaryOrientationForGridCellLayoutClusterSize
 @property  {CGSize=dd} listSizeForIconSpacingCalculation
 @property  SBHIconAccessoryVisualConfiguration *iconAccessoryVisualConfiguration
 @property  SBHFolderIconVisualConfiguration *folderIconVisualConfiguration
 @property  SBHFloatyFolderVisualConfiguration *floatyFolderVisualConfiguration
 @property  SBHAppLibraryVisualConfiguration *appLibraryVisualConfiguration
 @property  SBHSidebarVisualConfiguration *sidebarVisualConfiguration
 @property  SBHRootFolderVisualConfiguration *rootFolderVisualConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListGridLayoutConfiguration setRotatedLayoutClusterGridSizeClass:]
  -[SBIconListGridLayoutConfiguration landscapeLayoutInsets]
  -[SBIconListGridLayoutConfiguration iconGridSizeClassSizes]
  -[SBIconListGridLayoutConfiguration setPortraitLayoutInsets:]
  -[SBIconListGridLayoutConfiguration rotatedLayoutClusterGridSizeClass]
  -[SBIconListGridLayoutConfiguration supportedIconGridSizeClasses]
  -[SBIconListGridLayoutConfiguration setFolderIconVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration sidebarVisualConfiguration]
  -[SBIconListGridLayoutConfiguration iconImageInfoForGridSizeClass:]
  -[SBIconListGridLayoutConfiguration numberOfPortraitRows]
  -[SBIconListGridLayoutConfiguration rootFolderVisualConfiguration]
  -[SBIconListGridLayoutConfiguration setNumberOfPortraitRows:]
  -[SBIconListGridLayoutConfiguration .cxx_destruct]
  -[SBIconListGridLayoutConfiguration setIconAccessoryVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration primaryOrientationForGridCellLayoutClusterSize]
  -[SBIconListGridLayoutConfiguration setLandscapeLayoutInsets:]
  -[SBIconListGridLayoutConfiguration setFloatyFolderVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration succinctDescriptionBuilder]
  -[SBIconListGridLayoutConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBIconListGridLayoutConfiguration numberOfLandscapeRows]
  -[SBIconListGridLayoutConfiguration init]
  -[SBIconListGridLayoutConfiguration iconImageInfo]
  -[SBIconListGridLayoutConfiguration isEqual:]
  -[SBIconListGridLayoutConfiguration descriptionWithMultilinePrefix:]
  -[SBIconListGridLayoutConfiguration setNumberOfLandscapeRows:]
  -[SBIconListGridLayoutConfiguration setNumberOfPortraitColumns:]
  -[SBIconListGridLayoutConfiguration succinctDescription]
  -[SBIconListGridLayoutConfiguration setIconLabelVisualConfiguration:forContentSizeCategory:]
  -[SBIconListGridLayoutConfiguration appLibraryVisualConfiguration]
  -[SBIconListGridLayoutConfiguration setSupportedIconGridSizeClasses:]
  -[SBIconListGridLayoutConfiguration portraitLayoutInsets]
  -[SBIconListGridLayoutConfiguration setIconGridSizeClassSizes:]
  -[SBIconListGridLayoutConfiguration setIconImageInfo:forGridSizeClass:]
  -[SBIconListGridLayoutConfiguration setNumberOfLandscapeColumns:]
  -[SBIconListGridLayoutConfiguration listSizeForIconSpacingCalculation]
  -[SBIconListGridLayoutConfiguration folderIconVisualConfiguration]
  -[SBIconListGridLayoutConfiguration setPrimaryOrientationForGridCellLayoutClusterSize:]
  -[SBIconListGridLayoutConfiguration setSidebarVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration setListSizeForIconSpacingCalculation:]
  -[SBIconListGridLayoutConfiguration iconLabelVisualConfigurationForContentSizeCategory:]
  -[SBIconListGridLayoutConfiguration iconAccessoryVisualConfiguration]
  -[SBIconListGridLayoutConfiguration setEditingAnimationStrength:forGridSizeClass:]
  -[SBIconListGridLayoutConfiguration copyWithZone:]
  -[SBIconListGridLayoutConfiguration floatyFolderVisualConfiguration]
  -[SBIconListGridLayoutConfiguration setAppLibraryVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration numberOfPortraitColumns]
  -[SBIconListGridLayoutConfiguration editingAnimationStrengthForGridSizeClass:]
  -[SBIconListGridLayoutConfiguration numberOfLandscapeColumns]
  -[SBIconListGridLayoutConfiguration setIconImageInfo:]


SBHClockApplicationIcon : SBHApplicationIcon
  // class methods
  +[SBHClockApplicationIcon _shouldAnimateInLocation:]

  // instance methods
  -[SBHClockApplicationIcon iconImageViewClassForLocation:]


SBHStackConfigurationFadeAnimator : NSObject <SBHViewControllerTransitionAnimating>
 @property  BSAnimationSettings *animationSettings
 @property  BOOL alreadyAnimating
 @property  UIView *sourceSnapshotView

  // instance methods
  -[SBHStackConfigurationFadeAnimator animationSettings]
  -[SBHStackConfigurationFadeAnimator .cxx_destruct]
  -[SBHStackConfigurationFadeAnimator init]
  -[SBHStackConfigurationFadeAnimator setSourceSnapshotView:]
  -[SBHStackConfigurationFadeAnimator sourceSnapshotView]
  -[SBHStackConfigurationFadeAnimator finalizeAnimationAtEndpoint:withContext:]
  -[SBHStackConfigurationFadeAnimator prepareToAnimateFromEndpoint:withContext:]
  -[SBHStackConfigurationFadeAnimator animateToEndpoint:withContext:completion:]
  -[SBHStackConfigurationFadeAnimator isAlreadyAnimating]
  -[SBHStackConfigurationFadeAnimator setAlreadyAnimating:]
  -[SBHStackConfigurationFadeAnimator _updateSourceSnapshotViewUsingSourceIconView:withCoordinator:]
  -[SBHStackConfigurationFadeAnimator _configureForEndpoint:withCoordinator:]
  -[SBHStackConfigurationFadeAnimator _setupMatchMoveAnimationWithSourceView:targetView:]


SBHLibraryCategoriesFolderDataSource : NSObject <SBIconObserver>
 @property  SBHLibraryCategoriesRootFolder *categoriesFolder
 @property  SBHIconModel *iconModel
 @property  NSArray *categoryIdentifiers
 @property  unsigned long categoryIdentifiersCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibraryCategoriesFolderDataSource containsIcon:]
  -[SBHLibraryCategoriesFolderDataSource _regenerateCategoriesFolder]
  -[SBHLibraryCategoriesFolderDataSource .cxx_destruct]
  -[SBHLibraryCategoriesFolderDataSource initWithCategoriesFolder:]
  -[SBHLibraryCategoriesFolderDataSource iconModel]
  -[SBHLibraryCategoriesFolderDataSource categoryForIdentifier:]
  -[SBHLibraryCategoriesFolderDataSource iconAccessoriesDidUpdate:]
  -[SBHLibraryCategoriesFolderDataSource _noteDidReloadIcons:]
  -[SBHLibraryCategoriesFolderDataSource init]
  -[SBHLibraryCategoriesFolderDataSource _noteDidReplaceIcon:]
  -[SBHLibraryCategoriesFolderDataSource isEqual:]
  -[SBHLibraryCategoriesFolderDataSource addObserver:]
  -[SBHLibraryCategoriesFolderDataSource _noteWillRemoveIcon:]
  -[SBHLibraryCategoriesFolderDataSource categoryIdentifiers]
  -[SBHLibraryCategoriesFolderDataSource categoryIdentifiersCount]
  -[SBHLibraryCategoriesFolderDataSource _noteIconVisibilityDidChange:]
  -[SBHLibraryCategoriesFolderDataSource setMaximumNumberOfDisplayedCategories:]
  -[SBHLibraryCategoriesFolderDataSource reloadDataSourceUsingIcons:categoryMap:]
  -[SBHLibraryCategoriesFolderDataSource reloadData]
  -[SBHLibraryCategoriesFolderDataSource removeObserver:]
  -[SBHLibraryCategoriesFolderDataSource reloadDataWithCategoryMap:]
  -[SBHLibraryCategoriesFolderDataSource _noteDidAddIcon:]
  -[SBHLibraryCategoriesFolderDataSource categoriesFolder]
  -[SBHLibraryCategoriesFolderDataSource isEqualToDataSource:]
  -[SBHLibraryCategoriesFolderDataSource _noteWillLayoutIconState:]
  -[SBHLibraryCategoriesFolderDataSource maximumNumberOfDisplayedCategories]


SBRootFolderWithDock : SBRootFolder <SBIconIndexNodeObserver>
 @property  BOOL checkingIgnoredListConsistency
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBRootFolderWithDock allowedGridSizeClassesForTodayList]
  -[SBRootFolderWithDock allowedGridSizeClassesForDock]
  -[SBRootFolderWithDock todayList]
  -[SBRootFolderWithDock _setFavoriteTodayList:]
  -[SBRootFolderWithDock maxIconCountForDock]
  -[SBRootFolderWithDock checkIgnoredListConsistency]
  -[SBRootFolderWithDock supportsDock]
  -[SBRootFolderWithDock _setTodayList:]
  -[SBRootFolderWithDock _notifyIndexChange:identifiers:withValidationBlock:]
  -[SBRootFolderWithDock ignoredList]
  -[SBRootFolderWithDock iconList:didReplaceIcon:withIcon:]
  -[SBRootFolderWithDock supportsTodayList]
  -[SBRootFolderWithDock .cxx_destruct]
  -[SBRootFolderWithDock delegateDidChange:]
  -[SBRootFolderWithDock scheduleIgnoredListConsistencyCheck]
  -[SBRootFolderWithDock node:didRemoveContainedNodeIdentifiers:]
  -[SBRootFolderWithDock iconList:didAddIcon:]
  -[SBRootFolderWithDock nodeDidMoveContainedNodes:]
  -[SBRootFolderWithDock _setDock:]
  -[SBRootFolderWithDock isCheckingIgnoredListConsistency]
  -[SBRootFolderWithDock columnCountForTodayList]
  -[SBRootFolderWithDock setCheckingIgnoredListConsistency:]
  -[SBRootFolderWithDock _tearDownIgnoredListConsistencyCheckRunLoopObserverIfNeeded]
  -[SBRootFolderWithDock favoriteTodayList]
  -[SBRootFolderWithDock _setIgnoredList:]
  -[SBRootFolderWithDock dealloc]
  -[SBRootFolderWithDock dock]
  -[SBRootFolderWithDock supportsIgnoredList]
  -[SBRootFolderWithDock node:didAddContainedNodeIdentifiers:]


SBHStackConfigurationViewController : UIViewController <SBHStackConfigurationAnimationCoordinating, SBHScrollableIconViewContaining, SBUICoronaAnimationControllerParticipant, SBIconViewDelegate, SBLeafIconObserver, BSUIScrollViewDelegate, SBIconListModelObserver, SBIconListViewDragDelegate, SBIconDragManagerDelegate, SBHWidgetSheetViewControlling, SBHWidgetSheetViewControllerPresenter>
 @property  SBIconView *currentConfiguringIconView
 @property  SBTitledHomeScreenButton *doneButton
 @property  SBTitledHomeScreenButton *addButton
 @property  <SBHStackConfigurationViewControllerDelegate> *delegate
 @property  <SBHWidgetSheetViewControllerPresenter> *presenter
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentBoundingFrame
 @property  <SBLeafIconDataSource> *visiblyActiveDataSource
 @property  SBIconView *sourceStackIconView
 @property  SBIconListView *iconListView
 @property  SBIconView *sourceIconView
 @property  UIView *configurationView
 @property  NSSet *fadingViews
 @property  NSSet *materialViews
 @property  NSSet *widgetBackgroundViews
 @property  NSSet *apertureBackgroundViews
 @property  UIView *widgetStackMatchingBackgroundView
 @property  UIView *widgetContentContainerView
 @property  UIView *visiblyActiveDataSourceSnapshotView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHIconModel *iconModel
 @property  BOOL editing
 @property  BOOL scrolling
 @property  BOOL trackingScroll
 @property  BOOL rootFolderContentVisible
 @property  BOOL iconContentPossiblyVisibleOverApplication
 @property  BOOL overlayTodayViewVisible
 @property  BOOL overlayLibraryViewVisible
 @property  NSMutableDictionary *userInfo
 @property  double titledButtonsAlpha

  // instance methods
  -[SBHStackConfigurationViewController iconListView:iconDropSessionDidEnd:]
  -[SBHStackConfigurationViewController iconView:willAnimateDragLiftWithAnimator:session:]
  -[SBHStackConfigurationViewController iconView:dragPreviewForItem:session:previewParameters:]
  -[SBHStackConfigurationViewController iconView:didEndDragSession:withOperation:]
  -[SBHStackConfigurationViewController animationCoordinator]
  -[SBHStackConfigurationViewController iconViewDisplaysLabel:]
  -[SBHStackConfigurationViewController _shouldKeepIconImageViewControllersStatic]
  -[SBHStackConfigurationViewController currentConfiguringIconView]
  -[SBHStackConfigurationViewController iconView:configurationWillBeginWithInteraction:]
  -[SBHStackConfigurationViewController iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBHStackConfigurationViewController closeBoxTypeForIconView:]
  -[SBHStackConfigurationViewController iconView:dragLiftAnimationDidChangeDirection:]
  -[SBHStackConfigurationViewController iconView:homeScreenContentViewForConfigurationInteraction:]
  -[SBHStackConfigurationViewController iconShouldAllowCloseBoxTap:]
  -[SBHStackConfigurationViewController iconView:contentBoundingRectForConfigurationInteraction:]
  -[SBHStackConfigurationViewController iconViewDisplaysAccessories:]
  -[SBHStackConfigurationViewController iconCloseBoxTapped:]
  -[SBHStackConfigurationViewController iconView:containerViewControllerForConfigurationInteraction:]
  -[SBHStackConfigurationViewController rootFolderForIconDragManager:]
  -[SBHStackConfigurationViewController iconListViewForIndexPath:]
  -[SBHStackConfigurationViewController customImageViewControllerForIconView:]
  -[SBHStackConfigurationViewController iconView:canAddDragItemsToSession:]
  -[SBHStackConfigurationViewController iconDragManager:dragPreviewForIconView:]
  -[SBHStackConfigurationViewController iconViewWillBeginDrag:session:]
  -[SBHStackConfigurationViewController visibleContainerInsets]
  -[SBHStackConfigurationViewController presenter]
  -[SBHStackConfigurationViewController iconListView:iconDropSessionDidUpdate:]
  -[SBHStackConfigurationViewController iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBHStackConfigurationViewController iconListView:iconDropSessionDidExit:]
  -[SBHStackConfigurationViewController iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBHStackConfigurationViewController scrollViewDidEndScrolling:]
  -[SBHStackConfigurationViewController iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBHStackConfigurationViewController iconListView:iconDropSession:didPauseAtLocation:]
  -[SBHStackConfigurationViewController iconList:didReplaceIcon:withIcon:]
  -[SBHStackConfigurationViewController iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBHStackConfigurationViewController iconViewCanBeginDrags:]
  -[SBHStackConfigurationViewController setPresenter:]
  -[SBHStackConfigurationViewController enumerateScrollableIconViewsUsingBlock:]
  -[SBHStackConfigurationViewController iconListView:iconViewForDroppingIconDragItem:proposedIconView:]
  -[SBHStackConfigurationViewController iconListView:canHandleIconDropSession:]
  -[SBHStackConfigurationViewController shortcutsDelegateForIconView:]
  -[SBHStackConfigurationViewController iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBHStackConfigurationViewController iconListView:performIconDrop:]
  -[SBHStackConfigurationViewController updateExtraButtonVisibilityAnimated:]
  -[SBHStackConfigurationViewController iconListView:iconDropSessionDidEnter:]
  -[SBHStackConfigurationViewController iconTapped:]
  -[SBHStackConfigurationViewController _widgetDataSourceIsSuggestion:]
  -[SBHStackConfigurationViewController leafIcon:didAddIconDataSource:]
  -[SBHStackConfigurationViewController .cxx_destruct]
  -[SBHStackConfigurationViewController iconViewCanBecomeFocused:]
  -[SBHStackConfigurationViewController addButton]
  -[SBHStackConfigurationViewController iconList:didRemoveIcon:]
  -[SBHStackConfigurationViewController didMoveToParentViewController:]
  -[SBHStackConfigurationViewController viewDidLoad]
  -[SBHStackConfigurationViewController presenterType]
  -[SBHStackConfigurationViewController iconList:didMoveIcon:]
  -[SBHStackConfigurationViewController doneButton]
  -[SBHStackConfigurationViewController leafIcon:didChangeActiveDataSource:]
  -[SBHStackConfigurationViewController setDelegate:]
  -[SBHStackConfigurationViewController viewDidAppear:]
  -[SBHStackConfigurationViewController setScrollPosition:]
  -[SBHStackConfigurationViewController makeTitledButtonOfClass:]
  -[SBHStackConfigurationViewController keepIconImageViewControllersStaticForReason:]
  -[SBHStackConfigurationViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBHStackConfigurationViewController setSuppressesEditingStateForListView:]
  -[SBHStackConfigurationViewController stackConfigurationInteractionForIconView:]
  -[SBHStackConfigurationViewController setDoneButton:]
  -[SBHStackConfigurationViewController iconViewDisplaysCloseBox:]
  -[SBHStackConfigurationViewController _requestDismissal]
  -[SBHStackConfigurationViewController isDisplayingEditingButtons]
  -[SBHStackConfigurationViewController iconList:didAddIcon:]
  -[SBHStackConfigurationViewController iconView:configurationInteractionForDataSource:]
  -[SBHStackConfigurationViewController iconListView]
  -[SBHStackConfigurationViewController scrollViewDidScroll:]
  -[SBHStackConfigurationViewController icon:canReceiveGrabbedIcon:]
  -[SBHStackConfigurationViewController _updateLayoutForEditButtons]
  -[SBHStackConfigurationViewController widgetInsertionRippleIconAnimatorForIcon:iconListView:withReferenceIconView:]
  -[SBHStackConfigurationViewController titledButtonsAlpha]
  -[SBHStackConfigurationViewController coronaAnimationController:willAnimateCoronaTransitionWithAnimator:]
  -[SBHStackConfigurationViewController setCurrentConfiguringIconView:]
  -[SBHStackConfigurationViewController _allowUserInteraction]
  -[SBHStackConfigurationViewController viewDidLayoutSubviews]
  -[SBHStackConfigurationViewController scrollViewWillBeginDragging:]
  -[SBHStackConfigurationViewController viewWillAppear:]
  -[SBHStackConfigurationViewController rootViewForIconDragManager:]
  -[SBHStackConfigurationViewController iconViewQueryableForIconDragManager:]
  -[SBHStackConfigurationViewController isEditing]
  -[SBHStackConfigurationViewController delegate]
  -[SBHStackConfigurationViewController iconView:item:willAnimateDragCancelWithAnimator:]
  -[SBHStackConfigurationViewController iconView:configurationDidUpdateWithInteraction:]
  -[SBHStackConfigurationViewController userInfo]
  -[SBHStackConfigurationViewController loadView]
  -[SBHStackConfigurationViewController supportedInterfaceOrientations]
  -[SBHStackConfigurationViewController iconView:supportsConfigurationForDataSource:]
  -[SBHStackConfigurationViewController visiblyActiveDataSource]
  -[SBHStackConfigurationViewController iconViewDelegateForExternalDragForIconDragManager:]
  -[SBHStackConfigurationViewController iconView:configurationDidEndWithInteraction:]
  -[SBHStackConfigurationViewController viewDidDisappear:]
  -[SBHStackConfigurationViewController setTitledButtonsAlpha:]
  -[SBHStackConfigurationViewController _updatePresentationModeForIconViews]
  -[SBHStackConfigurationViewController _didTapDoneButton:]
  -[SBHStackConfigurationViewController nonEditingStatusBarHidingReason]
  -[SBHStackConfigurationViewController hidesPresenterTitledButtons]
  -[SBHStackConfigurationViewController setAddButton:]
  -[SBHStackConfigurationViewController iconAccessoryViewTapped:]
  -[SBHStackConfigurationViewController iconView:accessoryTypeWithProposedAccessoryType:]
  -[SBHStackConfigurationViewController dragItemsForIconView:]
  -[SBHStackConfigurationViewController iconView:configurationWillEndWithInteraction:]
  -[SBHStackConfigurationViewController actionDelegateForIconView:]
  -[SBHStackConfigurationViewController behaviorDelegateForIconView:]
  -[SBHStackConfigurationViewController draggingDelegateForIconView:]
  -[SBHStackConfigurationViewController reuseDelegateForIconView:]
  -[SBHStackConfigurationViewController configurationUIDelegateForIconView:]
  -[SBHStackConfigurationViewController closesAfterDragExits]
  -[SBHStackConfigurationViewController _cancelAllInteractionTimers]
  -[SBHStackConfigurationViewController noteIconDrag:didChangeInIconListView:]
  -[SBHStackConfigurationViewController _setCloseFolderTimerIfNecessary]
  -[SBHStackConfigurationViewController noteIconDrag:didEnterIconListView:]
  -[SBHStackConfigurationViewController noteIconDrag:didExitIconListView:]
  -[SBHStackConfigurationViewController noteIconDragDidEnd:]
  -[SBHStackConfigurationViewController _iconContentScale]
  -[SBHStackConfigurationViewController configurationView]
  -[SBHStackConfigurationViewController initWithConfiguration:iconView:iconViewProvider:listLayoutProvider:showsAddButton:showsDoneButton:]
  -[SBHStackConfigurationViewController setContentBoundingFrame:]
  -[SBHStackConfigurationViewController sourceStackIconView]
  -[SBHStackConfigurationViewController iconDragManager:draggedIconForIdentifier:]
  -[SBHStackConfigurationViewController iconDragManager:doesIconViewRepresentRealIconPosition:]
  -[SBHStackConfigurationViewController scrollIconToVisible:animated:completion:]
  -[SBHStackConfigurationViewController widgetStackMatchingBackgroundView]
  -[SBHStackConfigurationViewController sourceIconView]
  -[SBHStackConfigurationViewController _setupMatchMoveAnimationWithSourceView:targetView:]
  -[SBHStackConfigurationViewController fadingViews]
  -[SBHStackConfigurationViewController widgetContentContainerView]
  -[SBHStackConfigurationViewController materialViews]
  -[SBHStackConfigurationViewController visiblyActiveDataSourceSnapshotView]
  -[SBHStackConfigurationViewController contentBoundingFrame]
  -[SBHStackConfigurationViewController _setupContentViewWithContentFrame:]
  -[SBHStackConfigurationViewController _setupBackgroundInContainer:]
  -[SBHStackConfigurationViewController _setupApertureViewInContainer:]
  -[SBHStackConfigurationViewController _setupScrollViewInContainer:]
  -[SBHStackConfigurationViewController _setupIconListViewCenteredInScrollView:]
  -[SBHStackConfigurationViewController _setupPageControlInContainer:]
  -[SBHStackConfigurationViewController _setupTapToDismissGestureInView:]
  -[SBHStackConfigurationViewController _setupEditingButtons]
  -[SBHStackConfigurationViewController _setupLargeSizeLayoutAdjustmentsIfNecessary]
  -[SBHStackConfigurationViewController _stableApertureSize]
  -[SBHStackConfigurationViewController _sourceActiveWidgetIndex]
  -[SBHStackConfigurationViewController _scrollToWidgetIndex:animated:]
  -[SBHStackConfigurationViewController _widgetIndexForContentOffset:]
  -[SBHStackConfigurationViewController _scrollToWidgetIndex:animated:completion:]
  -[SBHStackConfigurationViewController _expandedPageControlOutset]
  -[SBHStackConfigurationViewController _setPageControlScale:]
  -[SBHStackConfigurationViewController _shouldUseConcentricCornersWhenExpanded]
  -[SBHStackConfigurationViewController _didToggleSmartRotate:]
  -[SBHStackConfigurationViewController _didToggleSuggestions:]
  -[SBHStackConfigurationViewController _updateButtonSubtitleForSmartRotate:animated:]
  -[SBHStackConfigurationViewController _unraveledWidgetIconForDataSource:withGridSizeClass:]
  -[SBHStackConfigurationViewController _didChangePageControlPage:]
  -[SBHStackConfigurationViewController _didTapBackgroundView:]
  -[SBHStackConfigurationViewController _didTapAddWidgetButton:]
  -[SBHStackConfigurationViewController _updateAddWidgetButtonOperabilityForDataSourceCount]
  -[SBHStackConfigurationViewController _newHomeScreenButtonBackgroundView]
  -[SBHStackConfigurationViewController _promoteWidgetIcon:]
  -[SBHStackConfigurationViewController _canAddAdditionalWidgets]
  -[SBHStackConfigurationViewController _iconListDidChangeWidgetIcons]
  -[SBHStackConfigurationViewController _updateCurrentPageControlPage]
  -[SBHStackConfigurationViewController _targetContentOffsetForWidgetIndex:]
  -[SBHStackConfigurationViewController _saveConfiguration]
  -[SBHStackConfigurationViewController _cancelCloseConfigurationTimer]
  -[SBHStackConfigurationViewController _closeConfigurationTimerFired]
  -[SBHStackConfigurationViewController _updateForWidgetIconCountChanged]
  -[SBHStackConfigurationViewController configureWithStackLayoutMetrics:]
  -[SBHStackConfigurationViewController widgetBackgroundViews]
  -[SBHStackConfigurationViewController apertureBackgroundViews]
  -[SBHStackConfigurationViewController iconShouldAllowAccessoryViewTap:]


SBHHomePullToSearchSettings : PTSettings
 @property  double pullTransitionDistance
 @property  double pullTransitionActivationThreshold
 @property  double pullGestureBeganFromTopLeeway
 @property  double fluidBehaviorDampingRatio
 @property  double fluidBehaviorResponse
 @property  double libraryFluidBehaviorDampingRatio
 @property  double libraryFluidBehaviorResponse

  // class methods
  +[SBHHomePullToSearchSettings settingsControllerModule]

  // instance methods
  -[SBHHomePullToSearchSettings libraryFluidBehaviorResponse]
  -[SBHHomePullToSearchSettings setPullGestureBeganFromTopLeeway:]
  -[SBHHomePullToSearchSettings pullGestureBeganFromTopLeeway]
  -[SBHHomePullToSearchSettings setPullTransitionActivationThreshold:]
  -[SBHHomePullToSearchSettings setLibraryFluidBehaviorDampingRatio:]
  -[SBHHomePullToSearchSettings setDefaultValues]
  -[SBHHomePullToSearchSettings setFluidBehaviorDampingRatio:]
  -[SBHHomePullToSearchSettings fluidBehaviorResponse]
  -[SBHHomePullToSearchSettings fluidBehaviorDampingRatio]
  -[SBHHomePullToSearchSettings setPullTransitionDistance:]
  -[SBHHomePullToSearchSettings setLibraryFluidBehaviorResponse:]
  -[SBHHomePullToSearchSettings pullTransitionDistance]
  -[SBHHomePullToSearchSettings libraryFluidBehaviorDampingRatio]
  -[SBHHomePullToSearchSettings setFluidBehaviorResponse:]
  -[SBHHomePullToSearchSettings pullTransitionActivationThreshold]


SBHIconShareSheetManager : NSObject <SKStoreProductActivityViewControllerDelegate>
 @property  SBHIconManager *iconManager
 @property  SBIconView *iconView
 @property  UIView *fakeSourceView
 @property  UIViewController *shareSheetViewController
 @property  BOOL areAnyAppIconShareSheetsShowing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconShareSheetManager setIconManager:]
  -[SBHIconShareSheetManager .cxx_destruct]
  -[SBHIconShareSheetManager iconManager]
  -[SBHIconShareSheetManager _appIconForceTouchControllerDidDismissNotification:]
  -[SBHIconShareSheetManager shareSheetViewController]
  -[SBHIconShareSheetManager dealloc]
  -[SBHIconShareSheetManager initWithIconManager:]
  -[SBHIconShareSheetManager iconView]
  -[SBHIconShareSheetManager setIconView:]
  -[SBHIconShareSheetManager areAnyAppIconShareSheetsShowing]
  -[SBHIconShareSheetManager dismissIconShareSheetsIfNecessaryAndCleanUp]
  -[SBHIconShareSheetManager fakeSourceView]
  -[SBHIconShareSheetManager setFakeSourceView:]
  -[SBHIconShareSheetManager setShareSheetViewController:]
  -[SBHIconShareSheetManager _iconViewFrameInScreenCoordinateSpace:]
  -[SBHIconShareSheetManager _createFakeSourceViewForIconView:]
  -[SBHIconShareSheetManager _queueShareSheetPresentation:forIconView:]
  -[SBHIconShareSheetManager _presentShareSheet:forIconView:]
  -[SBHIconShareSheetManager _shareSheetPresentationViewControllerForIconView:]
  -[SBHIconShareSheetManager productActivityViewController:didFinishWithResult:]
  -[SBHIconShareSheetManager presentShareSheetForIconView:withAppStoreItemIdentifier:]
  -[SBHIconShareSheetManager presentShareSheetForIconView:withActivityItems:]


SBHModalLibraryPresenter : NSObject <SBHModalLibraryPresentationContext, SBHViewControllerTransitionDelegate, UIGestureRecognizerDelegate, BSDescriptionProviding>
 @property  UIViewController *containerViewController
 @property  SBHLibraryViewController *libraryViewController
 @property  MTMaterialView *backgroundView
 @property  SBHViewControllerTransition *transition
 @property  unsigned long preferredTransitionStyle
 @property  UIPanGestureRecognizer *dismissPanGestureRecognizer
 @property  BOOL shouldUseTranslatingAnimationBehavior
 @property  <SBHModalLibraryPresenterContextProviding> *contextProvider
 @property  <SBHModalLibraryPresentationDelegate> *presentationDelegate
 @property  UIViewController *overrideContainerViewController
 @property  BOOL libraryContainedInForeground
 @property  BOOL presentingLibrary
 @property  UIView *containerView
 @property  UIView *libraryView
 @property  SBHSearchBar *searchBar
 @property  UIScrollView *podScrollView
 @property  SBIconListView *iconListView
 @property  UIView *sourceContainerView
 @property  SBIconView *libraryPodIconView
 @property  SBHLibraryIconViewController *libraryIconViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHModalLibraryPresenter containerViewController]
  -[SBHModalLibraryPresenter transition]
  -[SBHModalLibraryPresenter libraryView]
  -[SBHModalLibraryPresenter dismissPanGestureRecognizer]
  -[SBHModalLibraryPresenter searchBar]
  -[SBHModalLibraryPresenter containerView]
  -[SBHModalLibraryPresenter .cxx_destruct]
  -[SBHModalLibraryPresenter acquireUseSnapshotAsBackgroundViewAssertionForReason:]
  -[SBHModalLibraryPresenter succinctDescriptionBuilder]
  -[SBHModalLibraryPresenter descriptionBuilderWithMultilinePrefix:]
  -[SBHModalLibraryPresenter init]
  -[SBHModalLibraryPresenter iconListView]
  -[SBHModalLibraryPresenter descriptionWithMultilinePrefix:]
  -[SBHModalLibraryPresenter gestureRecognizerShouldBegin:]
  -[SBHModalLibraryPresenter succinctDescription]
  -[SBHModalLibraryPresenter presentationDelegate]
  -[SBHModalLibraryPresenter setBackgroundView:]
  -[SBHModalLibraryPresenter podScrollView]
  -[SBHModalLibraryPresenter setPresentationDelegate:]
  -[SBHModalLibraryPresenter backgroundView]
  -[SBHModalLibraryPresenter libraryViewController]
  -[SBHModalLibraryPresenter setContextProvider:]
  -[SBHModalLibraryPresenter initWithContainerViewController:libraryViewController:]
  -[SBHModalLibraryPresenter overrideContainerViewController]
  -[SBHModalLibraryPresenter setOverrideContainerViewController:]
  -[SBHModalLibraryPresenter libraryPodIconView]
  -[SBHModalLibraryPresenter isLibraryContainedInForeground]
  -[SBHModalLibraryPresenter isPresentingLibrary]
  -[SBHModalLibraryPresenter presentLibraryWithAnimation:completion:]
  -[SBHModalLibraryPresenter dismissLibraryWithTransition:completion:]
  -[SBHModalLibraryPresenter dismissLibraryWithAnimation:completion:]
  -[SBHModalLibraryPresenter toggleLibraryPresentedInForegroundWithAnimation:completion:]
  -[SBHModalLibraryPresenter transitionWillProgressToEndState:]
  -[SBHModalLibraryPresenter prepareTransition:]
  -[SBHModalLibraryPresenter transitionWillReturnToBeginningState:]
  -[SBHModalLibraryPresenter transitionDidProgressToEndState:]
  -[SBHModalLibraryPresenter transitionDidReturnToBeginningState:]
  -[SBHModalLibraryPresenter animatorForTransition:]
  -[SBHModalLibraryPresenter libraryIconViewController]
  -[SBHModalLibraryPresenter acquireOrderPresentationSourceContainerViewBeforeLibraryViewAssertionForReason:]
  -[SBHModalLibraryPresenter sourceContainerView]
  -[SBHModalLibraryPresenter shouldUseTranslatingAnimationBehavior]
  -[SBHModalLibraryPresenter noteWillAnimateToEndpoint:withAnimationDuration:]
  -[SBHModalLibraryPresenter _handlePanGestureRecognizerUpdated:]
  -[SBHModalLibraryPresenter contextProvider]
  -[SBHModalLibraryPresenter _fireDismissCompletionsWithResult:]
  -[SBHModalLibraryPresenter setPreferredTransitionStyle:]
  -[SBHModalLibraryPresenter dismissLibraryWithTransition:animated:completion:]
  -[SBHModalLibraryPresenter _firePresentCompletionWithResult:]
  -[SBHModalLibraryPresenter _updateBackgroundViewSnapshotted]
  -[SBHModalLibraryPresenter preferredTransitionStyle]
  -[SBHModalLibraryPresenter _updateLibraryTranslation:withVelocity:animated:]
  -[SBHModalLibraryPresenter _isPanGestureQuantityTowardDismissalDirection:]
  -[SBHModalLibraryPresenter _dismissLibraryIfNecessaryForTranslation:velocity:]
  -[SBHModalLibraryPresenter setShouldUseTranslatingAnimationBehavior:]


SBDarkeningImageView : UIImageView
 @property  double brightness

  // instance methods
  -[SBDarkeningImageView setBrightness:]
  -[SBDarkeningImageView .cxx_destruct]
  -[SBDarkeningImageView brightness]
  -[SBDarkeningImageView initWithFrame:]


SBHProxiedApplicationPlaceholder : NSObject <FBSApplicationPlaceholderObserver, SBHApplicationPlaceholder, BSInvalidatable, BSDescriptionProviding>
 @property  FBSApplicationPlaceholder *placeholderProxy
 @property  <SBHProxiedApplicationPlaceholderDelegate> *delegate
 @property  BOOL appClip
 @property  BOOL prioritizable
 @property  BOOL pausable
 @property  BOOL cancelable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *applicationBundleIdentifier
 @property  NSString *applicationDisplayName
 @property  BOOL active
 @property  BOOL waiting
 @property  BOOL paused
 @property  BOOL failed
 @property  BOOL installing
 @property  BOOL downloading
 @property  BOOL cloudDemoted
 @property  BOOL newAppInstallFromStore
 @property  NSString *uniqueIdentifier
 @property  NSString *configurationStorageIdentifier

  // class methods
  +[SBHProxiedApplicationPlaceholder backgroundQueue]

  // instance methods
  -[SBHProxiedApplicationPlaceholder iconCompleteUninstall:]
  -[SBHProxiedApplicationPlaceholder applicationDisplayName]
  -[SBHProxiedApplicationPlaceholder installType]
  -[SBHProxiedApplicationPlaceholder isPausable]
  -[SBHProxiedApplicationPlaceholder icon:launchFromLocation:context:]
  -[SBHProxiedApplicationPlaceholder icon:displayNameForLocation:]
  -[SBHProxiedApplicationPlaceholder isPrioritizable]
  -[SBHProxiedApplicationPlaceholder applicationBundleIdentifier]
  -[SBHProxiedApplicationPlaceholder uniqueIdentifier]
  -[SBHProxiedApplicationPlaceholder applicationBundleID]
  -[SBHProxiedApplicationPlaceholder icon:imageWithInfo:]
  -[SBHProxiedApplicationPlaceholder priorityForIcon:]
  -[SBHProxiedApplicationPlaceholder isActive]
  -[SBHProxiedApplicationPlaceholder isAppClip]
  -[SBHProxiedApplicationPlaceholder isFailed]
  -[SBHProxiedApplicationPlaceholder .cxx_destruct]
  -[SBHProxiedApplicationPlaceholder labelAccessoryTypeForIcon:]
  -[SBHProxiedApplicationPlaceholder iconCanTruncateLabel:]
  -[SBHProxiedApplicationPlaceholder prioritize]
  -[SBHProxiedApplicationPlaceholder succinctDescriptionBuilder]
  -[SBHProxiedApplicationPlaceholder isProgressPausedForIcon:]
  -[SBHProxiedApplicationPlaceholder setDelegate:]
  -[SBHProxiedApplicationPlaceholder iconSupportsUninstall:]
  -[SBHProxiedApplicationPlaceholder progressPercentForIcon:]
  -[SBHProxiedApplicationPlaceholder descriptionBuilderWithMultilinePrefix:]
  -[SBHProxiedApplicationPlaceholder isEqual:]
  -[SBHProxiedApplicationPlaceholder descriptionWithMultilinePrefix:]
  -[SBHProxiedApplicationPlaceholder pause]
  -[SBHProxiedApplicationPlaceholder formattedAccessoryStringForIcon:]
  -[SBHProxiedApplicationPlaceholder succinctDescription]
  -[SBHProxiedApplicationPlaceholder accessoryTypeForIcon:]
  -[SBHProxiedApplicationPlaceholder cancel]
  -[SBHProxiedApplicationPlaceholder badgeNumberOrStringForIcon:]
  -[SBHProxiedApplicationPlaceholder placeholderProgressDidUpdate:]
  -[SBHProxiedApplicationPlaceholder placeholderDidChangeSignificantly:]
  -[SBHProxiedApplicationPlaceholder delegate]
  -[SBHProxiedApplicationPlaceholder resume]
  -[SBHProxiedApplicationPlaceholder isCancelable]
  -[SBHProxiedApplicationPlaceholder isDownloading]
  -[SBHProxiedApplicationPlaceholder dealloc]
  -[SBHProxiedApplicationPlaceholder progressStateForIcon:]
  -[SBHProxiedApplicationPlaceholder invalidate]
  -[SBHProxiedApplicationPlaceholder isWaiting]
  -[SBHProxiedApplicationPlaceholder isCloudDemoted]
  -[SBHProxiedApplicationPlaceholder isDone]
  -[SBHProxiedApplicationPlaceholder isPaused]
  -[SBHProxiedApplicationPlaceholder iconCanTightenLabel:]
  -[SBHProxiedApplicationPlaceholder icon:statusDescriptionForLocation:]
  -[SBHProxiedApplicationPlaceholder initWithPlaceholderProxy:]
  -[SBHProxiedApplicationPlaceholder isNewAppInstallFromStore]
  -[SBHProxiedApplicationPlaceholder isInstalling]
  -[SBHProxiedApplicationPlaceholder placeholderProxy]
  -[SBHProxiedApplicationPlaceholder _progressChanged]
  -[SBHProxiedApplicationPlaceholder _reloadThumbnailImage]
  -[SBHProxiedApplicationPlaceholder _iconImageKeyForBundleID:info:]
  -[SBHProxiedApplicationPlaceholder _generateIconImageWithInfo:]
  -[SBHProxiedApplicationPlaceholder _generatePendingIconFormats]
  -[SBHProxiedApplicationPlaceholder _getOrGenerateIconImageWithInfo:]
  -[SBHProxiedApplicationPlaceholder isStoreDownload]


SBLeafIcon : SBIcon <NSCopying>
 @property  NSString *sbh_iconLibraryItemIdentifier
 @property  <SBLeafIconDataSource> *bestDataSource
 @property  <SBLeafIconDataSource> *fallbackBestDataSource
 @property  NSString *applicationBundleID
 @property  BOOL leafIdentifierAndApplicationBundleIDMatches
 @property  <SBLeafIconDataSource> *activeDataSource
 @property  NSArray *iconDataSources
 @property  <SBLeafIconDataSource> *firstIconDataSource
 @property  <SBLeafIconDataSource> *lastIconDataSource
 @property  unsigned long iconDataSourceCount

  // class methods
  +[SBLeafIcon formattedBadgeNumberOrString:]
  +[SBLeafIcon iconImageForDataSource:ofIcon:info:]

  // instance methods
  -[SBLeafIcon initWithLeafIdentifier:applicationBundleID:]
  -[SBLeafIcon didAddIconDataSource:]
  -[SBLeafIcon copyWithLeafIdentifier:]
  -[SBLeafIcon isTimedOut]
  -[SBLeafIcon applicationBundleID]
  -[SBLeafIcon nodeIdentifier]
  -[SBLeafIcon _fallbackBestDataSource]
  -[SBLeafIcon progressState]
  -[SBLeafIcon supportedGridSizeClasses]
  -[SBLeafIcon activeDataSource]
  -[SBLeafIcon hasObserver:]
  -[SBLeafIcon .cxx_destruct]
  -[SBLeafIcon enumerateObserversUsingBlock:]
  -[SBLeafIcon progressPercent]
  -[SBLeafIcon displayNameForLocation:]
  -[SBLeafIcon canGenerateIconsInBackground]
  -[SBLeafIcon init]
  -[SBLeafIcon labelAccessoryType]
  -[SBLeafIcon isEqual:]
  -[SBLeafIcon didRemoveIconDataSource:]
  -[SBLeafIcon supportsRasterization]
  -[SBLeafIcon setActiveDataSource:]
  -[SBLeafIcon iTunesCategoriesOrderedByRelevancy]
  -[SBLeafIcon addObserver:]
  -[SBLeafIcon badgeNumberOrString]
  -[SBLeafIcon leafIdentifier]
  -[SBLeafIcon isUninstallSupported]
  -[SBLeafIcon generateIconImageWithInfo:]
  -[SBLeafIcon dealloc]
  -[SBLeafIcon copyWithZone:]
  -[SBLeafIcon genericIconImageWithInfo:]
  -[SBLeafIcon removeObserver:]
  -[SBLeafIcon isProgressPaused]
  -[SBLeafIcon unmaskedIconImageWithInfo:]
  -[SBLeafIcon tags]
  -[SBLeafIcon sbh_iconLibraryItemIdentifier]
  -[SBLeafIcon isLeafIcon]
  -[SBLeafIcon setUninstalled]
  -[SBLeafIcon completeUninstall]
  -[SBLeafIcon isLaunchEnabled]
  -[SBLeafIcon isLaunchDisabledForObscuredReason]
  -[SBLeafIcon displayNameForObscuredDisabledLaunchForLocation:]
  -[SBLeafIcon accessoryTypeForLocation:]
  -[SBLeafIcon launchFromLocation:context:]
  -[SBLeafIcon iconDataSourceCount]
  -[SBLeafIcon iconDataSources]
  -[SBLeafIcon addIconDataSource:]
  -[SBLeafIcon firstIconDataSource]
  -[SBLeafIcon hasIconDataSource:]
  -[SBLeafIcon firstIconDataSourceWithUniqueIdentifier:]
  -[SBLeafIcon leafIdentifierAndApplicationBundleIDMatches]
  -[SBLeafIcon removeIconDataSource:]
  -[SBLeafIcon insertIconDataSources:atIndexes:]
  -[SBLeafIcon initWithUniqueLeafIdentifier]
  -[SBLeafIcon replaceIconDataSource:withIconDataSource:]
  -[SBLeafIcon folderTitleOptions]
  -[SBLeafIcon folderFallbackTitle]
  -[SBLeafIcon addIconDataSources:]
  -[SBLeafIcon firstIconDataSourcePassingTest:]
  -[SBLeafIcon iconDataSourcesOfClass:]
  -[SBLeafIcon removeIconDataSourcesPassingTest:]
  -[SBLeafIcon removeAllIconDataSources]
  -[SBLeafIcon _noteActiveDataSourceDidChangeAndReloadIcon:]
  -[SBLeafIcon _updateActiveDataSource]
  -[SBLeafIcon _bestDataSource]
  -[SBLeafIcon _noteActiveDataSourceDidChangeNotification:]
  -[SBLeafIcon _noteActiveDataSourceDidGenerateImageNotification:]
  -[SBLeafIcon didChangeActiveDataSource:]
  -[SBLeafIcon _noteDataSourceDidInvalidateNotification:]
  -[SBLeafIcon canTruncateLabel]
  -[SBLeafIcon canTightenLabel]
  -[SBLeafIcon statusDescriptionForLocation:]
  -[SBLeafIcon accessoryTextForLocation:]
  -[SBLeafIcon performCoalescedDataSourceUpdate:]
  -[SBLeafIcon selectNextActiveDataSource]
  -[SBLeafIcon insertIconDataSource:beforeIconDataSource:]
  -[SBLeafIcon removeIconDataSourcesOfClass:]
  -[SBLeafIcon lastIconDataSource]
  -[SBLeafIcon firstIconDataSourceOfClass:]


SBHWidgetSettings : PTSettings
 @property  BOOL hitTestingDisabled
 @property  unsigned long maximumWidgetsInAStack
 @property  BOOL stackAlwaysShowsBorder
 @property  BOOL stackAlwaysShowsPageControl
 @property  BOOL stackFlashesPageControlOnAppearance
 @property  BOOL showLabelsInTodayView
 @property  SBFFluidBehaviorSettings *toggleEditingOrPinnedAnimationSettings
 @property  double animatedInsertionJumpScale
 @property  double animatedInsertionImpactScale
 @property  double animatedInsertionImpactDelay
 @property  double animatedInsertionJumpDuration
 @property  double animatedInsertionJumpDampingRatio
 @property  double animatedInsertionSlamDuration
 @property  double animatedInsertionSlamDelay
 @property  double animatedInsertionSlamDampingRatio
 @property  double animatedInsertionScaleResetDuration
 @property  double animatedInsertionScaleResetDelay
 @property  double animatedInsertionScaleResetDampingRatio
 @property  double animatedInsertionPositionDuration
 @property  double animatedInsertionPositionDampingRatio
 @property  SBFFluidBehaviorSettings *dropInsertionAnimationSettings
 @property  double dropInsertionImpactScale
 @property  double dropInsertionImpactDelay
 @property  double dropInsertionSlamDuration
 @property  double dropInsertionSlamDelay
 @property  double dropInsertionSlamDampingRatio
 @property  double dropInsertionScaleResetDuration
 @property  double dropInsertionScaleResetDelay
 @property  double dropInsertionScaleResetDampingRatio
 @property  BOOL configurationBlursBackground
 @property  BOOL configurationUsesPercentVerticalMargin
 @property  double configurationPercentVerticalMargin
 @property  double configurationAbsoluteVerticalMargin
 @property  BOOL configurationScalesHomeScreenRelativeToCardPosition
 @property  double configurationHomeScreenScale
 @property  double configurationHomeScreenAlpha
 @property  BOOL configurationEqualizesMinCardToCameraDistance
 @property  double configurationPerspectiveCameraDistance
 @property  double configurationMinCardToCameraDistance
 @property  double configurationDarkeningTintAlpha
 @property  double configurationWidgetTintColorAlpha
 @property  BOOL configurationMaximizesCardHeight
 @property  BOOL configurationEnforcesMaxCardHeight
 @property  double configurationMaxCardHeight
 @property  BOOL configurationUsesSidebarAsContainer
 @property  double configurationFractionBetweenSourceAndContainerX
 @property  double configurationFractionBetweenSourceAndContainerY
 @property  double stackConfigurationZoomTransitionDuration
 @property  double stackConfigurationContentHeightRatio
 @property  double stackConfigurationNoBlurDimmingAlpha
 @property  BOOL stackConfigurationBlursBackground
 @property  BOOL stackConfigurationUsesFolderBlur
 @property  double stackConfigurationDimmingAlpha
 @property  BOOL stackConfigurationShouldScaleWidgets
 @property  double stackConfigurationMediumIconScale
 @property  double stackConfigurationLargeIconScale
 @property  double stackConfigurationExtraLargeIconScale
 @property  SBHPeopleWidgetPersonDetailInteractionSettings *personDetailInteractionSettings

  // class methods
  +[SBHWidgetSettings settingsControllerModule]

  // instance methods
  -[SBHWidgetSettings animatedInsertionScaleResetDelay]
  -[SBHWidgetSettings setDropInsertionScaleResetDelay:]
  -[SBHWidgetSettings setConfigurationDarkeningTintAlpha:]
  -[SBHWidgetSettings setToggleEditingOrPinnedAnimationSettings:]
  -[SBHWidgetSettings stackAlwaysShowsBorder]
  -[SBHWidgetSettings dropInsertionImpactDelay]
  -[SBHWidgetSettings stackConfigurationLargeIconScale]
  -[SBHWidgetSettings dropInsertionScaleResetDampingRatio]
  -[SBHWidgetSettings setStackConfigurationBlursBackground:]
  -[SBHWidgetSettings configurationDarkeningTintAlpha]
  -[SBHWidgetSettings dropInsertionSlamDampingRatio]
  -[SBHWidgetSettings animatedInsertionImpactDelay]
  -[SBHWidgetSettings configurationWidgetTintColorAlpha]
  -[SBHWidgetSettings animatedInsertionJumpDampingRatio]
  -[SBHWidgetSettings personDetailInteractionSettings]
  -[SBHWidgetSettings setMaximumWidgetsInAStack:]
  -[SBHWidgetSettings setStackConfigurationMediumIconScale:]
  -[SBHWidgetSettings configurationBlursBackground]
  -[SBHWidgetSettings configurationPerspectiveCameraDistance]
  -[SBHWidgetSettings .cxx_destruct]
  -[SBHWidgetSettings setStackFlashesPageControlOnAppearance:]
  -[SBHWidgetSettings setDefaultValues]
  -[SBHWidgetSettings setConfigurationFractionBetweenSourceAndContainerY:]
  -[SBHWidgetSettings setDropInsertionImpactDelay:]
  -[SBHWidgetSettings animatedInsertionScaleResetDampingRatio]
  -[SBHWidgetSettings setConfigurationEqualizesMinCardToCameraDistance:]
  -[SBHWidgetSettings setHitTestingDisabled:]
  -[SBHWidgetSettings setAnimatedInsertionImpactScale:]
  -[SBHWidgetSettings configurationMinCardToCameraDistance]
  -[SBHWidgetSettings dropInsertionAnimationSettings]
  -[SBHWidgetSettings stackConfigurationDimmingAlpha]
  -[SBHWidgetSettings configurationScalesHomeScreenRelativeToCardPosition]
  -[SBHWidgetSettings configurationMaximizesCardHeight]
  -[SBHWidgetSettings configurationEqualizesMinCardToCameraDistance]
  -[SBHWidgetSettings isHitTestingDisabled]
  -[SBHWidgetSettings setAnimatedInsertionSlamDuration:]
  -[SBHWidgetSettings setConfigurationPerspectiveCameraDistance:]
  -[SBHWidgetSettings setStackAlwaysShowsPageControl:]
  -[SBHWidgetSettings stackConfigurationMediumIconScale]
  -[SBHWidgetSettings configurationUsesPercentVerticalMargin]
  -[SBHWidgetSettings toggleEditingOrPinnedAnimationSettings]
  -[SBHWidgetSettings dropInsertionScaleResetDuration]
  -[SBHWidgetSettings animatedInsertionSlamDuration]
  -[SBHWidgetSettings setStackConfigurationContentHeightRatio:]
  -[SBHWidgetSettings animatedInsertionImpactScale]
  -[SBHWidgetSettings stackConfigurationUsesFolderBlur]
  -[SBHWidgetSettings setStackConfigurationZoomTransitionDuration:]
  -[SBHWidgetSettings animatedInsertionPositionDuration]
  -[SBHWidgetSettings setConfigurationHomeScreenAlpha:]
  -[SBHWidgetSettings setStackConfigurationShouldScaleWidgets:]
  -[SBHWidgetSettings animatedInsertionJumpDuration]
  -[SBHWidgetSettings animatedInsertionPositionDampingRatio]
  -[SBHWidgetSettings animatedInsertionSlamDampingRatio]
  -[SBHWidgetSettings setConfigurationUsesPercentVerticalMargin:]
  -[SBHWidgetSettings setConfigurationWidgetTintColorAlpha:]
  -[SBHWidgetSettings setAnimatedInsertionScaleResetDelay:]
  -[SBHWidgetSettings dropInsertionImpactScale]
  -[SBHWidgetSettings setStackConfigurationNoBlurDimmingAlpha:]
  -[SBHWidgetSettings setPersonDetailInteractionSettings:]
  -[SBHWidgetSettings setConfigurationFractionBetweenSourceAndContainerX:]
  -[SBHWidgetSettings setDropInsertionSlamDelay:]
  -[SBHWidgetSettings setConfigurationBlursBackground:]
  -[SBHWidgetSettings setAnimatedInsertionPositionDuration:]
  -[SBHWidgetSettings setDropInsertionSlamDuration:]
  -[SBHWidgetSettings configurationHomeScreenAlpha]
  -[SBHWidgetSettings animatedInsertionScaleResetDuration]
  -[SBHWidgetSettings configurationHomeScreenScale]
  -[SBHWidgetSettings setAnimatedInsertionJumpScale:]
  -[SBHWidgetSettings dropInsertionScaleResetDelay]
  -[SBHWidgetSettings setAnimatedInsertionScaleResetDuration:]
  -[SBHWidgetSettings maximumWidgetsInAStack]
  -[SBHWidgetSettings setConfigurationMaximizesCardHeight:]
  -[SBHWidgetSettings configurationAbsoluteVerticalMargin]
  -[SBHWidgetSettings stackAlwaysShowsPageControl]
  -[SBHWidgetSettings setStackConfigurationUsesFolderBlur:]
  -[SBHWidgetSettings stackConfigurationZoomTransitionDuration]
  -[SBHWidgetSettings configurationPercentVerticalMargin]
  -[SBHWidgetSettings setDropInsertionSlamDampingRatio:]
  -[SBHWidgetSettings configurationUsesSidebarAsContainer]
  -[SBHWidgetSettings setAnimatedInsertionPositionDampingRatio:]
  -[SBHWidgetSettings setConfigurationMaxCardHeight:]
  -[SBHWidgetSettings setAnimatedInsertionScaleResetDampingRatio:]
  -[SBHWidgetSettings setStackConfigurationLargeIconScale:]
  -[SBHWidgetSettings setConfigurationUsesSidebarAsContainer:]
  -[SBHWidgetSettings setConfigurationScalesHomeScreenRelativeToCardPosition:]
  -[SBHWidgetSettings setDropInsertionScaleResetDuration:]
  -[SBHWidgetSettings stackFlashesPageControlOnAppearance]
  -[SBHWidgetSettings setConfigurationPercentVerticalMargin:]
  -[SBHWidgetSettings animatedInsertionJumpScale]
  -[SBHWidgetSettings setStackConfigurationDimmingAlpha:]
  -[SBHWidgetSettings animatedInsertionSlamDelay]
  -[SBHWidgetSettings setAnimatedInsertionJumpDampingRatio:]
  -[SBHWidgetSettings setDropInsertionImpactScale:]
  -[SBHWidgetSettings dropInsertionSlamDelay]
  -[SBHWidgetSettings setStackConfigurationExtraLargeIconScale:]
  -[SBHWidgetSettings setDropInsertionAnimationSettings:]
  -[SBHWidgetSettings setAnimatedInsertionJumpDuration:]
  -[SBHWidgetSettings setAnimatedInsertionSlamDelay:]
  -[SBHWidgetSettings setAnimatedInsertionImpactDelay:]
  -[SBHWidgetSettings configurationMaxCardHeight]
  -[SBHWidgetSettings configurationFractionBetweenSourceAndContainerX]
  -[SBHWidgetSettings configurationEnforcesMaxCardHeight]
  -[SBHWidgetSettings stackConfigurationNoBlurDimmingAlpha]
  -[SBHWidgetSettings setAnimatedInsertionSlamDampingRatio:]
  -[SBHWidgetSettings stackConfigurationExtraLargeIconScale]
  -[SBHWidgetSettings stackConfigurationContentHeightRatio]
  -[SBHWidgetSettings dropInsertionSlamDuration]
  -[SBHWidgetSettings setStackAlwaysShowsBorder:]
  -[SBHWidgetSettings showLabelsInTodayView]
  -[SBHWidgetSettings setConfigurationHomeScreenScale:]
  -[SBHWidgetSettings stackConfigurationBlursBackground]
  -[SBHWidgetSettings stackConfigurationShouldScaleWidgets]
  -[SBHWidgetSettings configurationFractionBetweenSourceAndContainerY]
  -[SBHWidgetSettings setShowLabelsInTodayView:]
  -[SBHWidgetSettings setConfigurationEnforcesMaxCardHeight:]
  -[SBHWidgetSettings setConfigurationAbsoluteVerticalMargin:]
  -[SBHWidgetSettings setDropInsertionScaleResetDampingRatio:]
  -[SBHWidgetSettings setConfigurationMinCardToCameraDistance:]


SBFramewiseInteractiveTransitionAnimator : NSObject <SBViewControllerInteractiveAnimatedTransitioning>
 @property  <SBFramewiseInteractiveTransitionAnimatorDelegate> *delegate
 @property  BOOL presenting
 @property  double percentVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFramewiseInteractiveTransitionAnimator cancelTransition:withCompletionSpeed:completionCurve:]
  -[SBFramewiseInteractiveTransitionAnimator supportsRestarting]
  -[SBFramewiseInteractiveTransitionAnimator transitionDuration:]
  -[SBFramewiseInteractiveTransitionAnimator .cxx_destruct]
  -[SBFramewiseInteractiveTransitionAnimator percentComplete]
  -[SBFramewiseInteractiveTransitionAnimator animateTransition:]
  -[SBFramewiseInteractiveTransitionAnimator setDelegate:]
  -[SBFramewiseInteractiveTransitionAnimator finishInteractiveTransition:withCompletionSpeed:completionCurve:]
  -[SBFramewiseInteractiveTransitionAnimator percentVisible]
  -[SBFramewiseInteractiveTransitionAnimator delegate]
  -[SBFramewiseInteractiveTransitionAnimator setPresenting:]
  -[SBFramewiseInteractiveTransitionAnimator updateTransition:withPercentComplete:]
  -[SBFramewiseInteractiveTransitionAnimator isPresenting]


SBHSelectedApplicationDataSource : NSObject <LSApplicationWorkspaceObserverProtocol, SBHIconModelApplicationDataSource, BSDescriptionProviding>
 @property  LSApplicationWorkspace *workspace
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHSelectedApplicationDataSource keyPathsForObservingInstallProgress]

  // instance methods
  -[SBHSelectedApplicationDataSource applicationsDidUninstall:]
  -[SBHSelectedApplicationDataSource applicationsDidInstall:]
  -[SBHSelectedApplicationDataSource applicationWithBundleIdentifier:]
  -[SBHSelectedApplicationDataSource removeIconModelApplicationDataSourceObserver:]
  -[SBHSelectedApplicationDataSource iconModel:applicationWithBundleIdentifier:]
  -[SBHSelectedApplicationDataSource .cxx_destruct]
  -[SBHSelectedApplicationDataSource workspace]
  -[SBHSelectedApplicationDataSource allApplicationsForIconModel:]
  -[SBHSelectedApplicationDataSource succinctDescriptionBuilder]
  -[SBHSelectedApplicationDataSource uninstallApplicationWithBundleIdentifier:options:completion:]
  -[SBHSelectedApplicationDataSource descriptionBuilderWithMultilinePrefix:]
  -[SBHSelectedApplicationDataSource init]
  -[SBHSelectedApplicationDataSource descriptionWithMultilinePrefix:]
  -[SBHSelectedApplicationDataSource addIconModelApplicationDataSourceObserver:]
  -[SBHSelectedApplicationDataSource setWorkspace:]
  -[SBHSelectedApplicationDataSource succinctDescription]
  -[SBHSelectedApplicationDataSource applicationInstallsDidChange:]
  -[SBHSelectedApplicationDataSource dealloc]
  -[SBHSelectedApplicationDataSource applicationInstallsDidStart:]
  -[SBHSelectedApplicationDataSource applicationPlaceholderWithBundleIdentifier:]
  -[SBHSelectedApplicationDataSource uninstallApplicationWithBundleIdentifier:completion:]
  -[SBHSelectedApplicationDataSource observeValueForKeyPath:ofObject:change:context:]
  -[SBHSelectedApplicationDataSource allApplicationPlaceholdersForIconModel:]
  -[SBHSelectedApplicationDataSource endObservingInstallProgress:]
  -[SBHSelectedApplicationDataSource addApplicationsForBundleIdentifiers:forcePlaceholders:]
  -[SBHSelectedApplicationDataSource removeApplicationsForBundleIdentifiers:]
  -[SBHSelectedApplicationDataSource endTrackingApplicationsWithBundleIdentifiers:]
  -[SBHSelectedApplicationDataSource updateStateOfPlaceholder:withInstallState:installPhase:installProgress:]
  -[SBHSelectedApplicationDataSource beginObservingInstallProgress:]
  -[SBHSelectedApplicationDataSource updateStateOfPlaceholder:fromProgress:]
  -[SBHSelectedApplicationDataSource beginTrackingApplicationsWithBundleIdentifiers:]
  -[SBHSelectedApplicationDataSource endTrackingAllApplications]


SBHWidgetInsertionRippleIconAnimator : NSObject <SBIconViewObserver>
 @property  BOOL keepsJumpingIconAboveListViewAsLongAsPossible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHWidgetInsertionRippleIconAnimator iconViewWasDiscarded:]
  -[SBHWidgetInsertionRippleIconAnimator iconViewWasRecycled:]
  -[SBHWidgetInsertionRippleIconAnimator _displayLinkFired:]
  -[SBHWidgetInsertionRippleIconAnimator .cxx_destruct]
  -[SBHWidgetInsertionRippleIconAnimator iconViewDidBecomeWindowless:]
  -[SBHWidgetInsertionRippleIconAnimator animateWithCompletion:]
  -[SBHWidgetInsertionRippleIconAnimator initWithIconListView:widgetIcon:referenceLayout:referenceIconView:additionalIconListView:preludeBlock:]
  -[SBHWidgetInsertionRippleIconAnimator setKeepsJumpingIconAboveListViewAsLongAsPossible:]
  -[SBHWidgetInsertionRippleIconAnimator _performJumpAnimationWithCompletion:]
  -[SBHWidgetInsertionRippleIconAnimator _performWidgetIconScaleOvershootAnimation]
  -[SBHWidgetInsertionRippleIconAnimator _playImpactHapticAfterDelay:]
  -[SBHWidgetInsertionRippleIconAnimator _startRippleAnimationWithDelay:]
  -[SBHWidgetInsertionRippleIconAnimator _finishRippleAnimationEarlyForIconView:]
  -[SBHWidgetInsertionRippleIconAnimator _centerOfIconViewAssumingCenteredAnchorPoint:]
  -[SBHWidgetInsertionRippleIconAnimator _createPortalViewsForIconViewsInIconListView:dropIconListView:withPortalContainerView:widgetIconCenter:]
  -[SBHWidgetInsertionRippleIconAnimator _startRippleAnimationNow]
  -[SBHWidgetInsertionRippleIconAnimator _createPortalViewsForIconViews]
  -[SBHWidgetInsertionRippleIconAnimator _layoutRippleIconViews]
  -[SBHWidgetInsertionRippleIconAnimator _finishRippleAnimation]
  -[SBHWidgetInsertionRippleIconAnimator keepsJumpingIconAboveListViewAsLongAsPossible]
  -[SBHWidgetInsertionRippleIconAnimator _reparentPortalViewIntoIconListViewAfterDelay:]
  -[SBHWidgetInsertionRippleIconAnimator _reparentPortalViewIntoIconListViewNow]


SBDebugIcon : SBLeafIcon
  // instance methods
  -[SBDebugIcon canReceiveGrabbedIcon]
  -[SBDebugIcon canBeReceivedByIcon]
  -[SBDebugIcon isDebugIcon]


SBHIconImageCache : NSObject <SBIconObserver, BSDescriptionProviding>
 @property  CPMemoryPool *iconImagesMemoryPool
 @property  NSString *name
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  UIImage *genericImage
 @property  UIImage *overlayImage
 @property  UIImage *unmaskedOverlayImage
 @property  unsigned long poolingBypassCount
 @property  unsigned long numberOfCachedImages
 @property  unsigned long numberOfUnmaskedCachedImages
 @property  unsigned long numberOfCacheHits
 @property  unsigned long numberOfUnmaskedCacheHits
 @property  unsigned long numberOfCacheMisses
 @property  unsigned long numberOfUnmaskedCacheMisses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHIconImageCache supportsMemoryPooling]
  +[SBHIconImageCache _backgroundQueue]
  +[SBHIconImageCache unmaskedOverlayImageWithInfo:]
  +[SBHIconImageCache overlayImageWithInfo:]
  +[SBHIconImageCache genericImageWithInfo:]

  // instance methods
  -[SBHIconImageCache name]
  -[SBHIconImageCache numberOfCachedImages]
  -[SBHIconImageCache notifyObserversOfUpdateForIcon:]
  -[SBHIconImageCache _cacheKeyForIcon:]
  -[SBHIconImageCache purgeAllCachedImages]
  -[SBHIconImageCache cachedImageForIcon:]
  -[SBHIconImageCache genericImage]
  -[SBHIconImageCache .cxx_destruct]
  -[SBHIconImageCache endObservingAllIcons]
  -[SBHIconImageCache memoryMappedIconImageOfSize:scale:withDrawing:]
  -[SBHIconImageCache succinctDescriptionBuilder]
  -[SBHIconImageCache cacheImageForIcon:options:completionHandler:]
  -[SBHIconImageCache iconImagesMemoryPool]
  -[SBHIconImageCache numberOfUnmaskedCachedImages]
  -[SBHIconImageCache descriptionBuilderWithMultilinePrefix:]
  -[SBHIconImageCache cacheUnmaskedImagesForIcons:]
  -[SBHIconImageCache iconImageInfo]
  -[SBHIconImageCache poolingBypassCount]
  -[SBHIconImageCache setPoolingBypassCount:]
  -[SBHIconImageCache descriptionWithMultilinePrefix:]
  -[SBHIconImageCache cacheImagesForIcons:]
  -[SBHIconImageCache cacheImagesForIcons:options:completionHandler:]
  -[SBHIconImageCache succinctDescription]
  -[SBHIconImageCache cachedUnmaskedImageForIcon:]
  -[SBHIconImageCache addObserver:]
  -[SBHIconImageCache numberOfCacheHits]
  -[SBHIconImageCache unmaskedOverlayImage]
  -[SBHIconImageCache realImageForIcon:]
  -[SBHIconImageCache beginObservingIconIfNecessary:]
  -[SBHIconImageCache purgeCachedImagesForIcons:]
  -[SBHIconImageCache memoryMappedIconImageForIconImage:]
  -[SBHIconImageCache numberOfCacheMisses]
  -[SBHIconImageCache imageForIcon:]
  -[SBHIconImageCache iconImageDidUpdate:]
  -[SBHIconImageCache overlayImage]
  -[SBHIconImageCache pooledIconImageForMappedIconImage:]
  -[SBHIconImageCache _canPoolImage]
  -[SBHIconImageCache cacheImage:forIcon:]
  -[SBHIconImageCache initWithName:iconImageInfo:]
  -[SBHIconImageCache _iconImageOfSize:scale:failGracefully:drawing:]
  -[SBHIconImageCache removeObserver:]
  -[SBHIconImageCache unmaskedImageForIcon:]
  -[SBHIconImageCache endObservingIcon:]
  -[SBHIconImageCache _pooledIconImageForIconImage:allowingOptOut:]
  -[SBHIconImageCache numberOfUnmaskedCacheMisses]
  -[SBHIconImageCache numberOfUnmaskedCacheHits]


SBHLibraryCategoryStackView : UIView <SBHIconImageCacheObserver, BSDescriptionProviding>
 @property  unsigned long numberOfCategories
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  BOOL editing
 @property  BOOL highlighted
 @property  BOOL overlapping
 @property  NSArray *innerIcons
 @property  NSString *backdropGroupName
 @property  NSString *backdropGroupNamespace
 @property  BOOL innerIconImageInfoFrozen
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibraryCategoryStackView setHighlighted:]
  -[SBHLibraryCategoryStackView setBackdropGroupName:]
  -[SBHLibraryCategoryStackView setOverlapping:]
  -[SBHLibraryCategoryStackView traitCollectionDidChange:]
  -[SBHLibraryCategoryStackView .cxx_destruct]
  -[SBHLibraryCategoryStackView isOverlapping]
  -[SBHLibraryCategoryStackView layoutSubviews]
  -[SBHLibraryCategoryStackView succinctDescriptionBuilder]
  -[SBHLibraryCategoryStackView descriptionBuilderWithMultilinePrefix:]
  -[SBHLibraryCategoryStackView iconImageInfo]
  -[SBHLibraryCategoryStackView iconImageCache:didUpdateImageForIcon:]
  -[SBHLibraryCategoryStackView isHighlighted]
  -[SBHLibraryCategoryStackView descriptionWithMultilinePrefix:]
  -[SBHLibraryCategoryStackView backdropGroupName]
  -[SBHLibraryCategoryStackView succinctDescription]
  -[SBHLibraryCategoryStackView setEditing:]
  -[SBHLibraryCategoryStackView initWithFrame:]
  -[SBHLibraryCategoryStackView isEditing]
  -[SBHLibraryCategoryStackView numberOfCategories]
  -[SBHLibraryCategoryStackView visibleContentFrame]
  -[SBHLibraryCategoryStackView setIconImageInfo:]
  -[SBHLibraryCategoryStackView setBackdropGroupNamespace:]
  -[SBHLibraryCategoryStackView matchingCategoryStackView]
  -[SBHLibraryCategoryStackView setInnerIconImageInfoFrozen:]
  -[SBHLibraryCategoryStackView setNumberOfCategories:]
  -[SBHLibraryCategoryStackView backgroundViewForIndex:compatibleWithTraitCollection:]
  -[SBHLibraryCategoryStackView alphaForStackedViewAtIndex:]
  -[SBHLibraryCategoryStackView frameForStackedViewAtIndex:]
  -[SBHLibraryCategoryStackView setInnerIcons:animated:]
  -[SBHLibraryCategoryStackView _appendConfiguredPodBackgroundView]
  -[SBHLibraryCategoryStackView innerIcons]
  -[SBHLibraryCategoryStackView setInnerIcons:]
  -[SBHLibraryCategoryStackView backdropGroupNamespace]
  -[SBHLibraryCategoryStackView isInnerIconImageInfoFrozen]
  -[SBHLibraryCategoryStackView _scalingAnimationSettingsForStackedViewAtIndex:scale:]
  -[SBHLibraryCategoryStackView _updateIconImageViewsAnimated:]
  -[SBHLibraryCategoryStackView _reconfigurePodBackgroundViews]
  -[SBHLibraryCategoryStackView _innerIconImageInfo]
  -[SBHLibraryCategoryStackView _innerIconEdgeSpacingFraction]
  -[SBHLibraryCategoryStackView _innerIconInterSpacingFraction]
  -[SBHLibraryCategoryStackView _removeLastPodBackgroundView]
  -[SBHLibraryCategoryStackView _updateIconImageViewAtIndex:animated:]


_SBHLibraryCategoryStackViewBackgroundView : UIView
 @property  MTMaterialView *materialView
 @property  UIView *tintingView

  // instance methods
  -[_SBHLibraryCategoryStackViewBackgroundView setMaterialView:]
  -[_SBHLibraryCategoryStackViewBackgroundView _setContinuousCornerRadius:]
  -[_SBHLibraryCategoryStackViewBackgroundView .cxx_destruct]
  -[_SBHLibraryCategoryStackViewBackgroundView tintingView]
  -[_SBHLibraryCategoryStackViewBackgroundView materialView]
  -[_SBHLibraryCategoryStackViewBackgroundView setTintingView:]


SBHDateHeaderViewController : UIViewController <SBDateTimeOverrideObserver, SBHLegibility>
 @property  SBUILegibilityLabel *timeLabel
 @property  UIView *timeContainer
 @property  SBUILegibilityLabel *dateLabel
 @property  SBFDateTimeController *dateTimeController
 @property  NSLayoutConstraint *timeLeadingConstraint
 @property  <SBFDateProviding> *dateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UILegibilitySettings *legibilitySettings

  // class methods
  +[SBHDateHeaderViewController timeFontMetrics]
  +[SBHDateHeaderViewController dateFont]
  +[SBHDateHeaderViewController timeFont]
  +[SBHDateHeaderViewController _topMarginFromTimeFont]
  +[SBHDateHeaderViewController dateFontMetrics]

  // instance methods
  -[SBHDateHeaderViewController dateProvider]
  -[SBHDateHeaderViewController controller:didChangeOverrideDateFromDate:]
  -[SBHDateHeaderViewController traitCollectionDidChange:]
  -[SBHDateHeaderViewController _handleTimeZoneChange]
  -[SBHDateHeaderViewController .cxx_destruct]
  -[SBHDateHeaderViewController _updateLabels]
  -[SBHDateHeaderViewController enableUpdates]
  -[SBHDateHeaderViewController setLegibilitySettings:]
  -[SBHDateHeaderViewController _startUpdateTimer]
  -[SBHDateHeaderViewController initWithNibName:bundle:]
  -[SBHDateHeaderViewController disableUpdates]
  -[SBHDateHeaderViewController dateLabel]
  -[SBHDateHeaderViewController setDateProvider:]
  -[SBHDateHeaderViewController _stopUpdateTimer]
  -[SBHDateHeaderViewController _updateFormat]
  -[SBHDateHeaderViewController timeLabel]
  -[SBHDateHeaderViewController dateTimeController]
  -[SBHDateHeaderViewController viewWillAppear:]
  -[SBHDateHeaderViewController _cachedGlyphInsetsTimeFontForString:]
  -[SBHDateHeaderViewController dealloc]
  -[SBHDateHeaderViewController _timeLabelInsetsForTimeString:]
  -[SBHDateHeaderViewController loadView]
  -[SBHDateHeaderViewController viewDidDisappear:]
  -[SBHDateHeaderViewController legibilitySettings]
  -[SBHDateHeaderViewController _updateTimeLeadingConstraint]
  -[SBHDateHeaderViewController timeContainer]
  -[SBHDateHeaderViewController timeLeadingConstraint]


SBHPageManagementIcon : SBLeafIcon
 @property  SBIconListModel *listModel

  // instance methods
  -[SBHPageManagementIcon canBeAddedToMultiItemDrag]
  -[SBHPageManagementIcon listModel]
  -[SBHPageManagementIcon canReceiveGrabbedIcon]
  -[SBHPageManagementIcon .cxx_destruct]
  -[SBHPageManagementIcon canBeReceivedByIcon]
  -[SBHPageManagementIcon canBeAddedToSubfolder]
  -[SBHPageManagementIcon initWithListModel:]


SBHighlightView : UIView
 @property  double highlightAlpha
 @property  double highlightHeight

  // class methods
  +[SBHighlightView imageCache]
  +[SBHighlightView _highlightImageWithHeight:alpha:]

  // instance methods
  -[SBHighlightView .cxx_destruct]
  -[SBHighlightView layoutSubviews]
  -[SBHighlightView highlightAlpha]
  -[SBHighlightView initWithFrame:highlightAlpha:highlightHeight:]
  -[SBHighlightView highlightHeight]


SBHWidgetWrapperBackgroundView : UIView
 @property  UIView *underlyingBackgroundView
 @property  UIView *widgetBackgroundView

  // instance methods
  -[SBHWidgetWrapperBackgroundView .cxx_destruct]
  -[SBHWidgetWrapperBackgroundView initWithUnderlyingBackgroundView:widgetBackgroundView:]
  -[SBHWidgetWrapperBackgroundView widgetBackgroundView]
  -[SBHWidgetWrapperBackgroundView underlyingBackgroundView]


SBHIconAccessoryVisualConfiguration : NSObject <NSCopying, BSDescriptionProviding>
 @property  double fontSize
 @property  {CGSize=dd} size
 @property  {CGPoint=dd} offset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconAccessoryVisualConfiguration fontSize]
  -[SBHIconAccessoryVisualConfiguration offset]
  -[SBHIconAccessoryVisualConfiguration succinctDescriptionBuilder]
  -[SBHIconAccessoryVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHIconAccessoryVisualConfiguration init]
  -[SBHIconAccessoryVisualConfiguration setSize:]
  -[SBHIconAccessoryVisualConfiguration isEqual:]
  -[SBHIconAccessoryVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHIconAccessoryVisualConfiguration succinctDescription]
  -[SBHIconAccessoryVisualConfiguration setFontSize:]
  -[SBHIconAccessoryVisualConfiguration size]
  -[SBHIconAccessoryVisualConfiguration setOffset:]
  -[SBHIconAccessoryVisualConfiguration copyWithZone:]


SBHAddWidgetDetailsSheetPageViewController : UIViewController <SBHWidgetWrapperViewControllerDelegate>
 @property  UIView *referenceView
 @property  double scale
 @property  UILayoutGuide *layoutGuide
 @property  SBHWidgetWrapperViewController *widgetWrapperViewController
 @property  <SBHAddWidgetDetailsSheetPageViewControllerDelegate> *delegate
 @property  BOOL jumpAnimationInProgress
 @property  {CGAffineTransform=dddddd} wrapperViewTransform
 @property  <SBHWidgetDragHandling> *widgetDragHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHAddWidgetDetailsSheetPageViewController setReferenceView:]
  -[SBHAddWidgetDetailsSheetPageViewController referenceView]
  -[SBHAddWidgetDetailsSheetPageViewController .cxx_destruct]
  -[SBHAddWidgetDetailsSheetPageViewController _createViews]
  -[SBHAddWidgetDetailsSheetPageViewController setDelegate:]
  -[SBHAddWidgetDetailsSheetPageViewController layoutGuide]
  -[SBHAddWidgetDetailsSheetPageViewController _createConstraints]
  -[SBHAddWidgetDetailsSheetPageViewController viewDidLayoutSubviews]
  -[SBHAddWidgetDetailsSheetPageViewController setScale:]
  -[SBHAddWidgetDetailsSheetPageViewController delegate]
  -[SBHAddWidgetDetailsSheetPageViewController setLayoutGuide:]
  -[SBHAddWidgetDetailsSheetPageViewController scale]
  -[SBHAddWidgetDetailsSheetPageViewController loadView]
  -[SBHAddWidgetDetailsSheetPageViewController initWithWidgetWrapperViewController:]
  -[SBHAddWidgetDetailsSheetPageViewController widgetWrapperViewController]
  -[SBHAddWidgetDetailsSheetPageViewController updateParallaxEffectInReferenceView:]
  -[SBHAddWidgetDetailsSheetPageViewController widgetDragHandler]
  -[SBHAddWidgetDetailsSheetPageViewController backgroundViewMatchingMaterialBeneathWrapperViewController:]
  -[SBHAddWidgetDetailsSheetPageViewController configureBackgroundView:matchingMaterialBeneathWrapperViewController:]
  -[SBHAddWidgetDetailsSheetPageViewController _createSizeConstraintsForWrapperView:]
  -[SBHAddWidgetDetailsSheetPageViewController _updateWidgetScale]
  -[SBHAddWidgetDetailsSheetPageViewController _pauseLayer:]
  -[SBHAddWidgetDetailsSheetPageViewController _resumeLayer:]
  -[SBHAddWidgetDetailsSheetPageViewController setJumpAnimationInProgress:]
  -[SBHAddWidgetDetailsSheetPageViewController isJumpAnimationInProgress]
  -[SBHAddWidgetDetailsSheetPageViewController wrapperViewTransform]


SBHIconGridPath : NSObject <BSDescriptionProviding, NSCopying, NSCoding>
 @property  NSString *folderIdentifier
 @property  NSString *listIdentifier
 @property  unsigned long gridCellIndex
 @property  unsigned long gridCellInfoOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHIconGridPath supportsSecureCoding]

  // instance methods
  -[SBHIconGridPath listIdentifier]
  -[SBHIconGridPath initWithCoder:]
  -[SBHIconGridPath gridCellInfoOptions]
  -[SBHIconGridPath .cxx_destruct]
  -[SBHIconGridPath gridCellIndex]
  -[SBHIconGridPath succinctDescriptionBuilder]
  -[SBHIconGridPath descriptionBuilderWithMultilinePrefix:]
  -[SBHIconGridPath isEqual:]
  -[SBHIconGridPath descriptionWithMultilinePrefix:]
  -[SBHIconGridPath succinctDescription]
  -[SBHIconGridPath iconGridPathWithGridCellIndex:]
  -[SBHIconGridPath folderIdentifier]
  -[SBHIconGridPath iconGridPathWithListIdentifier:gridCellIndex:]
  -[SBHIconGridPath initWithFolderIdentifier:listIdentifier:gridCellIndex:gridCellInfoOptions:]
  -[SBHIconGridPath copyWithZone:]
  -[SBHIconGridPath encodeWithCoder:]


SBHLibraryCategoryMapProviderRefreshRequest : NSObject <NSCopying>
 @property  unsigned long options
 @property  NSString *requestReason
 @property  NSString *senderDescription
 @property  unsigned long failureCount

  // instance methods
  -[SBHLibraryCategoryMapProviderRefreshRequest accumulateFailure:forSession:]
  -[SBHLibraryCategoryMapProviderRefreshRequest initWithOptions:reason:]
  -[SBHLibraryCategoryMapProviderRefreshRequest options]
  -[SBHLibraryCategoryMapProviderRefreshRequest .cxx_destruct]
  -[SBHLibraryCategoryMapProviderRefreshRequest failureForSessionIdentifier:]
  -[SBHLibraryCategoryMapProviderRefreshRequest failureCount]
  -[SBHLibraryCategoryMapProviderRefreshRequest requestReason]
  -[SBHLibraryCategoryMapProviderRefreshRequest hasFailedSeveralTimes]
  -[SBHLibraryCategoryMapProviderRefreshRequest setSenderDescription:]
  -[SBHLibraryCategoryMapProviderRefreshRequest setRequestReason:]
  -[SBHLibraryCategoryMapProviderRefreshRequest copyWithZone:]
  -[SBHLibraryCategoryMapProviderRefreshRequest senderDescription]


SBHLibraryCategoryMapProvider : NSObject <SBHLibraryCategoryMapProviderSourceDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  SBHLibraryCategoryMap *libraryCategoryMap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHLibraryCategoryMapProvider derivedOptionsFromArrayOfRequests:]
  +[SBHLibraryCategoryMapProvider categoryMapFromURL:error:]
  +[SBHLibraryCategoryMapProvider cacheDirectory]
  +[SBHLibraryCategoryMapProvider clearCachesForReason:]
  +[SBHLibraryCategoryMapProvider baseFilePath]
  +[SBHLibraryCategoryMapProvider categoryMapCacheFilePathForVersion:source:]

  // instance methods
  -[SBHLibraryCategoryMapProvider overrideCategoryMapForTesting:]
  -[SBHLibraryCategoryMapProvider initWithSource:]
  -[SBHLibraryCategoryMapProvider unforbidApplicationIdentifier:]
  -[SBHLibraryCategoryMapProvider overrideCategoryMapForTestingAtURL:error:]
  -[SBHLibraryCategoryMapProvider _nextSessionIdentifier]
  -[SBHLibraryCategoryMapProvider _workQueue_queueUpNextRequests:runNow:]
  -[SBHLibraryCategoryMapProvider libraryCategoryMap]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserverCategoryMapWasRefreshedWithOptions:refreshedCategoryMap:]
  -[SBHLibraryCategoryMapProvider .cxx_destruct]
  -[SBHLibraryCategoryMapProvider clearOverride]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversWillRefresh:options:]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversWillReEnqueueFailedRequests:]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversFinishedRefreshSession:requests:]
  -[SBHLibraryCategoryMapProvider _workQueue_cancelAnyScheduledRefresh]
  -[SBHLibraryCategoryMapProvider forbidApplicationIdentifier:]
  -[SBHLibraryCategoryMapProvider addObserver:]
  -[SBHLibraryCategoryMapProvider requestLibraryCategoryMapRefreshWithOptions:reason:]
  -[SBHLibraryCategoryMapProvider hasCachedLibraryCategoryMapOnFileSystem]
  -[SBHLibraryCategoryMapProvider _setupClearCacheNotification]
  -[SBHLibraryCategoryMapProvider workQueue]
  -[SBHLibraryCategoryMapProvider _setupLocaleNotification]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversBeginningRefreshSession:requests:]
  -[SBHLibraryCategoryMapProvider _workQueue_updateLibraryCategoryMap:withSessionId:shouldPersist:reason:]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversWillSunsetFailedRequests:]
  -[SBHLibraryCategoryMapProvider _workQueue_performNextRequest]
  -[SBHLibraryCategoryMapProvider removeObserver:]
  -[SBHLibraryCategoryMapProvider requestLibraryCategoryMapUpdateWithRefreshOptions:source:]
  -[SBHLibraryCategoryMapProvider _workQueue_scheduleRefreshIfNotScheduled]
  -[SBHLibraryCategoryMapProvider resetForbiddenApplicationIdentifiers]
  -[SBHLibraryCategoryMapProvider _copyOfObservers]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversCategoryMapDidntNeedRefresh]
  -[SBHLibraryCategoryMapProvider _kickoffInitialHydration]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversCategoryMapRefreshFailedWithError:]


SBHLibraryIndicatorIconDropInteractionDelegate : NSObject <SBFSpringLoadedInteractionBehaviorDelegate, SBFSpringLoadedInteractionEffectDelegate, UIDropInteractionDelegate>
 @property  UIDropInteraction *dropInteraction
 @property  SBIconView *libraryIndicatorIconView
 @property  <SBHLibraryIndicatorIconDropInteractionContextProviding> *contextProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibraryIndicatorIconDropInteractionDelegate dropInteraction:item:willAnimateDropWithAnimator:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate targetViewForSpringLoadingEffectForView:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate targetItemForSpringLoadingInteractionInView:atLocation:forDropSession:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate .cxx_destruct]
  -[SBHLibraryIndicatorIconDropInteractionDelegate dropInteraction:sessionDidExit:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate dropInteraction:canHandleSession:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate dropInteraction:sessionDidUpdate:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate dropInteraction:sessionDidEnter:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate dropInteraction:performDrop:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate dropInteraction:sessionDidEnd:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate dropInteraction:concludeDrop:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate dropInteraction:previewForDroppingItem:withDefault:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate dropInteraction]
  -[SBHLibraryIndicatorIconDropInteractionDelegate _iconModel]
  -[SBHLibraryIndicatorIconDropInteractionDelegate initWithLibraryIndicatorIconView:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate setContextProvider:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate contextProvider]
  -[SBHLibraryIndicatorIconDropInteractionDelegate _handleSpringLoadedInteractionDidActivateWithContext:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate libraryIndicatorIconView]
  -[SBHLibraryIndicatorIconDropInteractionDelegate _canPerformDropForAnyItemInSession:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate _updateIndicatorIconViewForSession:isActive:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate _draggedItemIdentifiersInSession:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate _canPerformDropForDraggedIcon:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate _notifyDidPerformDropForSession:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate _canPerformDropForDragItem:]
  -[SBHLibraryIndicatorIconDropInteractionDelegate _iconIdentifierForDragItem:]


SBFolderIcon : SBIcon <SBFolderObserver, SBIconObserver, SBIconIndexNodeObserver>
 @property  SBFolder *folder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFolderIcon hasIconImage]

  // instance methods
  -[SBFolderIcon rootFolderDelegateDidChange:]
  -[SBFolderIcon canBeAddedToMultiItemDrag]
  -[SBFolderIcon _adjustForIconsAdded:removed:]
  -[SBFolderIcon iconImageViewClassForLocation:]
  -[SBFolderIcon folder:didReplaceIcon:withIcon:]
  -[SBFolderIcon indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBFolderIcon nodeIdentifier]
  -[SBFolderIcon folder:didRemoveLists:atIndexes:]
  -[SBFolderIcon _containedIconAccessoriesDidUpdate:]
  -[SBFolderIcon progressState]
  -[SBFolderIcon .cxx_destruct]
  -[SBFolderIcon progressPercent]
  -[SBFolderIcon containsNodeIdentifier:]
  -[SBFolderIcon displayNameForLocation:]
  -[SBFolderIcon leafIconsWithBadgesSortedByImportance]
  -[SBFolderIcon isFolderIcon]
  -[SBFolderIcon iconAccessoriesDidUpdate:]
  -[SBFolderIcon _performDelayedIconUpdates]
  -[SBFolderIcon nodesAlongIndexPath:consumedIndexes:]
  -[SBFolderIcon node:didRemoveContainedNodeIdentifiers:]
  -[SBFolderIcon localeChanged]
  -[SBFolderIcon initWithFolder:]
  -[SBFolderIcon gridCellIndexForIconIndex:]
  -[SBFolderIcon nodeDidMoveContainedNodes:]
  -[SBFolderIcon iconAtListIndex:iconIndex:]
  -[SBFolderIcon rootFolder]
  -[SBFolderIcon invalidateUpdateIconRunLoopObserver]
  -[SBFolderIcon nodeDescriptionWithPrefix:]
  -[SBFolderIcon folder]
  -[SBFolderIcon badgeNumberOrString]
  -[SBFolderIcon noteContainedIconsAdded:removed:]
  -[SBFolderIcon addNodeObserver:]
  -[SBFolderIcon listIndexForContainedIcon:]
  -[SBFolderIcon canBeAddedToSubfolder]
  -[SBFolderIcon _updateBadgeValue]
  -[SBFolderIcon folder:didAddIcons:removedIcons:]
  -[SBFolderIcon iconImageDidUpdate:]
  -[SBFolderIcon noteContainedIcon:replacedIcon:]
  -[SBFolderIcon _updateProgress]
  -[SBFolderIcon generateIconImageWithInfo:]
  -[SBFolderIcon _containedIconLaunchEnabledDidUpdate:]
  -[SBFolderIcon iconLaunchEnabledDidChange:]
  -[SBFolderIcon dealloc]
  -[SBFolderIcon copyWithZone:]
  -[SBFolderIcon genericIconImageWithInfo:]
  -[SBFolderIcon scheduleUpdateIconRunLoopObserver]
  -[SBFolderIcon updateLabel]
  -[SBFolderIcon isProgressPaused]
  -[SBFolderIcon containedNodeIdentifiers]
  -[SBFolderIcon node:didAddContainedNodeIdentifiers:]
  -[SBFolderIcon removeNodeObserver:]
  -[SBFolderIcon _containedIconImageChanged:]
  -[SBFolderIcon folder:didAddList:]


SBHSearchTextField : UISearchTextField <UIPointerInteractionDelegate>
 @property  long long alignmentBehavior
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHSearchTextField _derivedTextAlignmentForBehavior:hasSearchText:isEditing:]
  +[SBHSearchTextField borderColorForUserInterfaceStyle:]

  // instance methods
  -[SBHSearchTextField setReturnKeyType:]
  -[SBHSearchTextField rightViewRectForBounds:]
  -[SBHSearchTextField placeholderRectForBounds:]
  -[SBHSearchTextField textRectForBounds:]
  -[SBHSearchTextField _adjustedTextOrEditingRect:forBounds:]
  -[SBHSearchTextField leftViewRectForBounds:]
  -[SBHSearchTextField editingRectForBounds:]
  -[SBHSearchTextField clearButtonRectForBounds:]
  -[SBHSearchTextField pointerInteraction:styleForRegion:]
  -[SBHSearchTextField _derivedTextAlignment]
  -[SBHSearchTextField traitCollectionDidChange:]
  -[SBHSearchTextField setFont:]
  -[SBHSearchTextField _frameForPlaceholderRectForBounds:alignment:isRTL:willOverflow:]
  -[SBHSearchTextField alignmentBehavior]
  -[SBHSearchTextField updateStyleForPlaceholderView]
  -[SBHSearchTextField _setContinuousCornerRadius:]
  -[SBHSearchTextField _didBeginEditing:]
  -[SBHSearchTextField .cxx_destruct]
  -[SBHSearchTextField _calculateTextRectForBounds:alignment:isRTL:]
  -[SBHSearchTextField updateStyleForLeftView]
  -[SBHSearchTextField layoutSubviews]
  -[SBHSearchTextField updateStyleForRightView]
  -[SBHSearchTextField _calculateHeightWithFont]
  -[SBHSearchTextField _didEndEditing:]
  -[SBHSearchTextField _textDidChange:]
  -[SBHSearchTextField updateBorderVisualStyling]
  -[SBHSearchTextField _calculateEditingRectForBounds:alignment:isRTL:]
  -[SBHSearchTextField _derivedTextAlignmentIfEditing:]
  -[SBHSearchTextField updateVisualStyling]
  -[SBHSearchTextField sizeThatFits:]
  -[SBHSearchTextField _updateTextAlignmentForEditing:animated:]
  -[SBHSearchTextField _shouldSendContentChangedNotificationsIfOnlyMarkedTextChanged]
  -[SBHSearchTextField initWithFrame:]
  -[SBHSearchTextField updateStyleForClearButton]
  -[SBHSearchTextField _dynamicUserInterfaceTraitDidChange]
  -[SBHSearchTextField _hasSearchText]
  -[SBHSearchTextField setAlignmentBehavior:animated:]
  -[SBHSearchTextField pointerInteraction:regionForRequest:defaultRegion:]
  -[SBHSearchTextField _calculatePlaceholderRectForBounds:alignment:isRTL:]
  -[SBHSearchTextField _frameForLeftViewWithinBounds:alignment:]
  -[SBHSearchTextField _frameForRightViewWithinBounds:alignment:]
  -[SBHSearchTextField intrinsicContentSize]
  -[SBHSearchTextField setAlignmentBehavior:]


SBIconListViewDominoAnimator : NSObject <SBIconListLayoutAnimating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewDominoAnimator reset]
  -[SBIconListViewDominoAnimator iconListView:wantsAnimatedRemovalForIconViews:completionHandler:]
  -[SBIconListViewDominoAnimator iconListView:wantsAnimatedLayoutForIconView:withParameters:alongsideAnimationBlock:]


SBHLibraryPodIndicatorIcon : SBIcon
  // instance methods
  -[SBHLibraryPodIndicatorIcon canBeAddedToMultiItemDrag]
  -[SBHLibraryPodIndicatorIcon canReceiveGrabbedIcon]
  -[SBHLibraryPodIndicatorIcon isLibraryPodIcon]


SBHLibraryViewController : SBNestingViewController <UISearchBarDelegate, SBHLibrarySearchControllerDelegate, SBHLibraryCategoryMapProviderObserver, SBHIconLibraryTableViewControllerObserver, SBIconViewProviding, SBIconViewDelegate, SBNestingViewControllerDelegate, SBHLibraryPodFolderControllerDelegate, SBFolderControllerDelegate, SBHLibraryProvider, SBFOverlayObserving, SBHVisibleContentPresenter>
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  BSEventQueue *transitionEventQueue
 @property  SBHomeScreenIconTransitionAnimator *currentTransitionAnimator
 @property  NSMutableArray *currentExpandCompletions
 @property  NSMutableArray *currentCollapseCompletions
 @property  SBHLibrarySearchController *containerViewController
 @property  SBHIconLibraryTableViewController *iconTableViewController
 @property  SBHLibraryPodFolderController *podFolderViewController
 @property  SBRootFolder *categoriesRootFolder
 @property  SBHLibraryCategoryMap *libraryCategoryMap
 @property  <SBIconViewDelegate> *iconViewDelegate
 @property  SBHLibraryCategoryMapProvider *categoryMapProvider
 @property  BOOL presentingFolder
 @property  BOOL presentingSearch
 @property  UIViewController *barSwipeViewController
 @property  UIView *externalBackgroundView
 @property  BOOL allowsBadging
 @property  BOOL suppressesEditingStateForListViews
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHIconModel *iconModel
 @property  <SBIconViewProviding> *iconViewProvider
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  SBHIconImageCache *iconImageCache
 @property  <SBHomeScreenIconTransitionAnimatorDelegate> *homeScreenIconTransitionAnimatorDelegate
 @property  SBFolderController *folderController
 @property  UIView *searchDimmingView
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSSet *presentedIconLocations
 @property  unsigned long contentVisibility

  // class methods
  +[SBHLibraryViewController _updateCategoryMap:withCategoryDataFrom:]

  // instance methods
  -[SBHLibraryViewController iconViewWasDiscarded:]
  -[SBHLibraryViewController containerViewController]
  -[SBHLibraryViewController iconViewWasRecycled:]
  -[SBHLibraryViewController isDisplayingIconView:options:]
  -[SBHLibraryViewController suppressesEditingStateForListViews]
  -[SBHLibraryViewController folderController:willUseIconTransitionAnimator:forOperation:onViewController:animated:]
  -[SBHLibraryViewController overlayControllerDidBeginChangingPresentationProgress:]
  -[SBHLibraryViewController setIconViewProvider:]
  -[SBHLibraryViewController iconViewForIcon:location:]
  -[SBHLibraryViewController _enqueueTransitionName:withHandler:]
  -[SBHLibraryViewController isDisplayingIcon:inLocation:options:]
  -[SBHLibraryViewController overlayController:visibilityDidChange:]
  -[SBHLibraryViewController contentScrollView]
  -[SBHLibraryViewController closeBoxTypeForIconView:]
  -[SBHLibraryViewController iconShouldAllowCloseBoxTap:]
  -[SBHLibraryViewController firstIconViewForIcon:excludingLocations:]
  -[SBHLibraryViewController currentTransitionAnimator]
  -[SBHLibraryViewController noteIconViewWillZoomDown:]
  -[SBHLibraryViewController setCurrentTransitionAnimator:]
  -[SBHLibraryViewController iconViewDisplaysAccessories:]
  -[SBHLibraryViewController iconCloseBoxTapped:]
  -[SBHLibraryViewController focusEffectTypeForIconView:]
  -[SBHLibraryViewController willPresentSearchController:]
  -[SBHLibraryViewController isDisplayingIcon:options:]
  -[SBHLibraryViewController customImageViewControllerForIconView:]
  -[SBHLibraryViewController iconView:canAddDragItemsToSession:]
  -[SBHLibraryViewController iconModelDidLayout:]
  -[SBHLibraryViewController folderController:iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBHLibraryViewController folderIconImageCache]
  -[SBHLibraryViewController iconViewCanBeginDrags:]
  -[SBHLibraryViewController folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBHLibraryViewController viewWillLayoutSubviews]
  -[SBHLibraryViewController categoryMapProvider]
  -[SBHLibraryViewController folderController:iconListView:iconDropSessionDidEnter:]
  -[SBHLibraryViewController didDismissSearchController:]
  -[SBHLibraryViewController _enumerateObservers:]
  -[SBHLibraryViewController configureIconView:forIcon:]
  -[SBHLibraryViewController willDismissSearchController:]
  -[SBHLibraryViewController _updateEditingStateAnimated:]
  -[SBHLibraryViewController shortcutsDelegateForIconView:]
  -[SBHLibraryViewController setSuppressesEditingStateForListViews:]
  -[SBHLibraryViewController presentedIconLocations]
  -[SBHLibraryViewController iconViewShouldBeginShortcutsPresentation:]
  -[SBHLibraryViewController setEditing:animated:]
  -[SBHLibraryViewController iconTapped:]
  -[SBHLibraryViewController iconViewProvider]
  -[SBHLibraryViewController libraryCategoryMap]
  -[SBHLibraryViewController iconView:editingModeGestureRecognizerDidFire:]
  -[SBHLibraryViewController .cxx_destruct]
  -[SBHLibraryViewController iconViewCanBecomeFocused:]
  -[SBHLibraryViewController iconImageCache]
  -[SBHLibraryViewController iconModel]
  -[SBHLibraryViewController viewDidLoad]
  -[SBHLibraryViewController folderController:iconListView:iconDropSessionDidUpdate:]
  -[SBHLibraryViewController didPresentSearchController:]
  -[SBHLibraryViewController folderController:iconListView:canHandleIconDropSession:]
  -[SBHLibraryViewController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHLibraryViewController setLegibilitySettings:]
  -[SBHLibraryViewController overrideTraitCollectionForChildViewController:]
  -[SBHLibraryViewController viewDidAppear:]
  -[SBHLibraryViewController iconViewForIcon:location:options:]
  -[SBHLibraryViewController setIconModel:]
  -[SBHLibraryViewController isIconViewRecycled:]
  -[SBHLibraryViewController folderController:iconListView:performIconDrop:]
  -[SBHLibraryViewController setIconImageCache:]
  -[SBHLibraryViewController firstIconViewForIcon:options:]
  -[SBHLibraryViewController init]
  -[SBHLibraryViewController folderController]
  -[SBHLibraryViewController iconShouldAllowTap:]
  -[SBHLibraryViewController iconViewDisplaysCloseBox:]
  -[SBHLibraryViewController dequeueReusableIconViewOfClass:]
  -[SBHLibraryViewController contentVisibility]
  -[SBHLibraryViewController folderController:iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBHLibraryViewController folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBHLibraryViewController setSearchDimmingView:]
  -[SBHLibraryViewController setListLayoutProvider:]
  -[SBHLibraryViewController addObserver:]
  -[SBHLibraryViewController folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBHLibraryViewController controllerClassForFolder:]
  -[SBHLibraryViewController viewWillDisappear:]
  -[SBHLibraryViewController isDisplayingIconView:inLocation:]
  -[SBHLibraryViewController firstIconViewForIcon:inLocations:]
  -[SBHLibraryViewController viewWillAppear:]
  -[SBHLibraryViewController isDisplayingIcon:inLocations:]
  -[SBHLibraryViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[SBHLibraryViewController overlayController:didChangePresentationProgress:newPresentationProgress:fromLeading:]
  -[SBHLibraryViewController transitionEventQueue]
  -[SBHLibraryViewController isDisplayingIconView:]
  -[SBHLibraryViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBHLibraryViewController folderController:canChangeCurrentPageIndexToIndex:]
  -[SBHLibraryViewController enumerateIconViewQueryableChildrenUsingBlock:]
  -[SBHLibraryViewController nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBHLibraryViewController recycleIconView:]
  -[SBHLibraryViewController firstIconViewForIcon:]
  -[SBHLibraryViewController folderControllerShouldClose:withPinchGesture:]
  -[SBHLibraryViewController folderController:iconListView:iconDropSessionDidExit:]
  -[SBHLibraryViewController setIconViewDelegate:]
  -[SBHLibraryViewController folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBHLibraryViewController folderController:draggedIconShouldDropFromListView:]
  -[SBHLibraryViewController dealloc]
  -[SBHLibraryViewController folderControllerShouldBeginEditing:withHaptic:]
  -[SBHLibraryViewController folderControllerDidEndScrolling:]
  -[SBHLibraryViewController searchDimmingView]
  -[SBHLibraryViewController folderControllerWillBeginScrolling:]
  -[SBHLibraryViewController enumerateDisplayedIconViewsUsingBlock:]
  -[SBHLibraryViewController folderController:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBHLibraryViewController iconView:labelImageWithParameters:]
  -[SBHLibraryViewController removeObserver:]
  -[SBHLibraryViewController enumerateIconViewQueryableChildrenWithOptions:usingBlock:]
  -[SBHLibraryViewController listLayoutProvider]
  -[SBHLibraryViewController acquireLibrarySearchPrewarmAssertionForReason:]
  -[SBHLibraryViewController loadView]
  -[SBHLibraryViewController iconViewDelegate]
  -[SBHLibraryViewController isDisplayingIcon:inLocation:]
  -[SBHLibraryViewController setContentVisibility:]
  -[SBHLibraryViewController viewDidDisappear:]
  -[SBHLibraryViewController isDisplayingIcon:]
  -[SBHLibraryViewController isPresentingIconLocation:]
  -[SBHLibraryViewController legibilitySettings]
  -[SBHLibraryViewController folderControllerShouldEndEditing:]
  -[SBHLibraryViewController layoutIconListsWithAnimationType:forceRelayout:]
  -[SBHLibraryViewController externalBackgroundView]
  -[SBHLibraryViewController podFolderViewController]
  -[SBHLibraryViewController isPresentingFolder]
  -[SBHLibraryViewController currentExpandCompletions]
  -[SBHLibraryViewController setCurrentExpandCompletions:]
  -[SBHLibraryViewController currentCollapseCompletions]
  -[SBHLibraryViewController setCurrentCollapseCompletions:]
  -[SBHLibraryViewController iconViewComponentBackgroundViewTypeForIconView:]
  -[SBHLibraryViewController draggingDelegateForIconView:]
  -[SBHLibraryViewController nestingViewController:animationControllerForOperation:onViewController:animated:]
  -[SBHLibraryViewController pushNestedViewController:animated:withCompletion:]
  -[SBHLibraryViewController popNestedViewControllerAnimated:withCompletion:]
  -[SBHLibraryViewController isPresentingSearch]
  -[SBHLibraryViewController _addBarSwipeView]
  -[SBHLibraryViewController setExternalBackgroundView:]
  -[SBHLibraryViewController setBarSwipeViewController:]
  -[SBHLibraryViewController barSwipeViewController]
  -[SBHLibraryViewController libraryPodFolderControllerRequestsDismissal:]
  -[SBHLibraryViewController enumerateViewControllersUsingBlock:]
  -[SBHLibraryViewController libraryPodFolderController:willLayoutDisplayedCategories:]
  -[SBHLibraryViewController firstNonSuggestionsOrRecentsIconViewForIcon:]
  -[SBHLibraryViewController presentPodWithCategoryIdentifier:animated:completion:]
  -[SBHLibraryViewController categoriesRootFolder]
  -[SBHLibraryViewController dismissSearch]
  -[SBHLibraryViewController libraryCategoryMapProvider:categoryMapWasRefreshed:libraryCategoryMap:]
  -[SBHLibraryViewController _canPerformDropForAnyItemInSession:]
  -[SBHLibraryViewController _draggedItemIdentifiersInSession:]
  -[SBHLibraryViewController _canPerformDropForDraggedIcon:]
  -[SBHLibraryViewController _iconIdentifierForDragItem:]
  -[SBHLibraryViewController _setupIconTableViewController:]
  -[SBHLibraryViewController initWithCategoryMapProvider:]
  -[SBHLibraryViewController _enumerateAllViewControllersUsingBlock:]
  -[SBHLibraryViewController invalidateSearchControllerAppLaunchResetTimer]
  -[SBHLibraryViewController _enqueueAppLibraryUpdate]
  -[SBHLibraryViewController _notifyObserversWillPresent]
  -[SBHLibraryViewController _notifyObserversDidPresent]
  -[SBHLibraryViewController _notifyObserversWillDismiss]
  -[SBHLibraryViewController _dismissExpandedPods:completion:]
  -[SBHLibraryViewController _flushPendingLibraryCategoryMapUpdateIfNeeded]
  -[SBHLibraryViewController _notifyObserversDidDismiss]
  -[SBHLibraryViewController _invalidateLibraryViewControllerDismissalTimer]
  -[SBHLibraryViewController presentPodWithCategory:animated:completion:]
  -[SBHLibraryViewController _updateViewControllerLegibility:]
  -[SBHLibraryViewController _rebuildIconCache]
  -[SBHLibraryViewController _scrollIconViewToVisible:animated:]
  -[SBHLibraryViewController _iconLocationForCategoryIdentifier:]
  -[SBHLibraryViewController _notifyObserversRequestDismissal]
  -[SBHLibraryViewController _notifyObserversWillPresentFolderController:]
  -[SBHLibraryViewController _wrappedCompletionBlockForNestedTransitionWithCompletion:]
  -[SBHLibraryViewController _notifyObserversWillDismissFolderController:]
  -[SBHLibraryViewController homeScreenIconTransitionAnimatorDelegate]
  -[SBHLibraryViewController _notifyObserversDidDismissFolderController:]
  -[SBHLibraryViewController _notifyObserversOfAppLaunchOfIcon:fromLocation:]
  -[SBHLibraryViewController _customImageViewControllerForCategoryPodIconView:usingInternalCache:]
  -[SBHLibraryViewController _iconViewControllerForCategoryIdentifier:]
  -[SBHLibraryViewController _createIconViewControllerForCategoryIdentifier:]
  -[SBHLibraryViewController _startLibraryViewControllerDismissalTimer:]
  -[SBHLibraryViewController _updateViewControllerLegibility:legibilitySettings:]
  -[SBHLibraryViewController allowsBadging]
  -[SBHLibraryViewController _installCategoryMap:]
  -[SBHLibraryViewController _updateLibraryCategoryMap:]
  -[SBHLibraryViewController _notifyObserversDataSourceDidChange]
  -[SBHLibraryViewController _notifyObserversWillPresentSearchController:]
  -[SBHLibraryViewController _notifyObserversDidPresentSearchController:]
  -[SBHLibraryViewController _notifyObserversWillDismissSearchController:]
  -[SBHLibraryViewController _notifyObserversDidDismissSearchController:]
  -[SBHLibraryViewController _additionalItemsIndicatorIconViewForFolderController:]
  -[SBHLibraryViewController _precacheIconViewControllersForCategories:]
  -[SBHLibraryViewController _startAppLaunchResetTimer:]
  -[SBHLibraryViewController _dismissLibraryViewControllerForReason:sessionIdentifier:]
  -[SBHLibraryViewController _dismissSearchIfNotInUseForReason:sessionIdentifier:]
  -[SBHLibraryViewController _updateDragPreviewIconViewsForDropSession:inIconListView:]
  -[SBHLibraryViewController _notifyObserversOfAcceptedDrop:]
  -[SBHLibraryViewController _destinationFolderIconViewForDragItem:folderRelativeIconIndexPath:]
  -[SBHLibraryViewController libraryTableViewControllerDidAppear:]
  -[SBHLibraryViewController libraryTableViewControllerWillDisappear:]
  -[SBHLibraryViewController libraryTableViewControllerDidLaunchIcon:]
  -[SBHLibraryViewController setHomeScreenIconTransitionAnimatorDelegate:]
  -[SBHLibraryViewController _expandPodAtIndex:animated:completion:]
  -[SBHLibraryViewController setAllowsBadging:]
  -[SBHLibraryViewController forcedSearchTextFieldNoneditable:]
  -[SBHLibraryViewController noteInstalledApplicationsDidChange]
  -[SBHLibraryViewController iconTableViewController]


_SBHLibraryFrozenSafeAreaInsetsView : SBFFocusIsolationView
  // instance methods
  -[_SBHLibraryFrozenSafeAreaInsetsView _safeAreaInsetsForFrame:inSuperview:]


_SBHLibraryCollectionOfModelThings : NSObject
 @property  <SBIconViewProviding> *iconViewProvider
 @property  SBHIconModel *iconModel
 @property  SBRootFolder *rootFolder
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  SBHIconImageCache *iconImageCache
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHLibraryCategoryMapProvider *categoryMapProvider

  // instance methods
  -[_SBHLibraryCollectionOfModelThings folderIconImageCache]
  -[_SBHLibraryCollectionOfModelThings categoryMapProvider]
  -[_SBHLibraryCollectionOfModelThings iconViewProvider]
  -[_SBHLibraryCollectionOfModelThings .cxx_destruct]
  -[_SBHLibraryCollectionOfModelThings iconImageCache]
  -[_SBHLibraryCollectionOfModelThings iconModel]
  -[_SBHLibraryCollectionOfModelThings isEqual:]
  -[_SBHLibraryCollectionOfModelThings rootFolder]
  -[_SBHLibraryCollectionOfModelThings examineModelValidityWithError:]
  -[_SBHLibraryCollectionOfModelThings initWithIconViewProvider:iconModel:rootFolder:listLayoutProvider:iconImageCache:folderIconImageCache:categoryMapProvider:]
  -[_SBHLibraryCollectionOfModelThings listLayoutProvider]


_SBFolderPageElement : NSObject
 @property  SBIconGridImage *gridImage
 @property  BOOL gridImagePossible
 @property  unsigned long visibleRow
 @property  unsigned long pageIndex
 @property  SBFolderIcon *folderIcon

  // instance methods
  -[_SBFolderPageElement setFolderIcon:]
  -[_SBFolderPageElement folderIcon]
  -[_SBFolderPageElement pageIndex]
  -[_SBFolderPageElement setGridImage:]
  -[_SBFolderPageElement .cxx_destruct]
  -[_SBFolderPageElement firstVisibleRowForGap]
  -[_SBFolderPageElement setPageIndex:]
  -[_SBFolderPageElement firstVisibleMiniIconIndex]
  -[_SBFolderPageElement setGridImagePossible:]
  -[_SBFolderPageElement gridImage]
  -[_SBFolderPageElement isGridImagePossible]
  -[_SBFolderPageElement setVisibleRow:]
  -[_SBFolderPageElement visibleRow]


_SBIconGridWrapperView : UIImageView
 @property  _SBFolderPageElement *element
 @property  SBFolderIconImageView *folderIconImageView

  // instance methods
  -[_SBIconGridWrapperView element]
  -[_SBIconGridWrapperView .cxx_destruct]
  -[_SBIconGridWrapperView setElement:]
  -[_SBIconGridWrapperView reposition]
  -[_SBIconGridWrapperView setFolderIconImageView:]
  -[_SBIconGridWrapperView positionAtRow:]
  -[_SBIconGridWrapperView folderIconImageView]


SBFolderIconImageView : SBIconImageView <SBFolderIconObserver, SBFolderIconImageCacheObserver>
 @property  unsigned long concreteBackgroundStyle
 @property  unsigned long currentBackgroundStyle
 @property  unsigned long backgroundStyle
 @property  unsigned long currentPageIndex
 @property  BOOL animating
 @property  double iconGridImageAlpha
 @property  UIView *backgroundView
 @property  BOOL hasCustomBackgroundView
 @property  BOOL pageGridHidden
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFolderIconImageView prepareToCrossfadeWithFloatyFolderView:allowFolderInteraction:]
  -[SBFolderIconImageView _setupGridViewsInDefaultConfiguration]
  -[SBFolderIconImageView hasCustomBackgroundView]
  -[SBFolderIconImageView contentsImage]
  -[SBFolderIconImageView setBackgroundStyle:]
  -[SBFolderIconImageView iconGridImageAlpha]
  -[SBFolderIconImageView setIconGridImageAlpha:]
  -[SBFolderIconImageView scrollToTopOfFirstPageAnimated:]
  -[SBFolderIconImageView _showRightMinigrid]
  -[SBFolderIconImageView _iconGridImageClass]
  -[SBFolderIconImageView backgroundStyle]
  -[SBFolderIconImageView visibleMiniIconCount]
  -[SBFolderIconImageView centerVisibleMiniIconIndex]
  -[SBFolderIconImageView .cxx_destruct]
  -[SBFolderIconImageView _generateSquareContentsImage]
  -[SBFolderIconImageView setBackgroundScale:]
  -[SBFolderIconImageView layoutSubviews]
  -[SBFolderIconImageView iconViewFolderIconImageCacheDidChange]
  -[SBFolderIconImageView setCurrentBackgroundStyle:]
  -[SBFolderIconImageView setBackgroundAndIconGridImageAlpha:]
  -[SBFolderIconImageView cleanupAfterFloatyFolderCrossfade]
  -[SBFolderIconImageView fulfillGridImageForPageElement:]
  -[SBFolderIconImageView isAnimating]
  -[SBFolderIconImageView concreteBackgroundStyle]
  -[SBFolderIconImageView scrollToTopOfPage:animated:]
  -[SBFolderIconImageView descriptionBuilderWithMultilinePrefix:]
  -[SBFolderIconImageView scrollToGapOrTopIfFullOfPage:animated:]
  -[SBFolderIconImageView disableImageUpdatesForReason:]
  -[SBFolderIconImageView lastVisibleMiniIconIndex]
  -[SBFolderIconImageView frameForMiniIconAtIndex:]
  -[SBFolderIconImageView setFloatyFolderCrossfadeFraction:]
  -[SBFolderIconImageView currentPageIndex]
  -[SBFolderIconImageView frameForMiniIconAtIndexPath:]
  -[SBFolderIconImageView prepareForReuse]
  -[SBFolderIconImageView _interiorGridSize]
  -[SBFolderIconImageView firstVisibleMiniIconIndex]
  -[SBFolderIconImageView snapshot]
  -[SBFolderIconImageView _updateCurrentBackgroundStyle]
  -[SBFolderIconImageView _setPageElements:]
  -[SBFolderIconImageView setPageGridHidden:]
  -[SBFolderIconImageView initWithFrame:]
  -[SBFolderIconImageView _updateAccessibilityBackgroundContrast]
  -[SBFolderIconImageView _performScrollingDirection:targetPageIndex:targetPageScrollRow:newLeftElement:newRightElement:animated:]
  -[SBFolderIconImageView setBackgroundView:]
  -[SBFolderIconImageView _updateRasterization]
  -[SBFolderIconImageView iconViewLegibilitySettingsDidChange]
  -[SBFolderIconImageView visibleMiniIconListIndex]
  -[SBFolderIconImageView visibleImageRelativeFrameForMiniIconAtIndex:]
  -[SBFolderIconImageView representedListLayout]
  -[SBFolderIconImageView setIcon:location:animated:]
  -[SBFolderIconImageView _showLeftMinigrid]
  -[SBFolderIconImageView invalidateImageUpdatesAssertion:]
  -[SBFolderIconImageView folderIconImageCache:didUpdateImagesForFolderIcon:]
  -[SBFolderIconImageView currentBackgroundStyle]
  -[SBFolderIconImageView dealloc]
  -[SBFolderIconImageView _folderIcon]
  -[SBFolderIconImageView scrollToFirstGapAnimated:]
  -[SBFolderIconImageView isPageGridHidden]
  -[SBFolderIconImageView _folderIconImageCache]
  -[SBFolderIconImageView _currentPageElement]
  -[SBFolderIconImageView setIconView:]
  -[SBFolderIconImageView _setAnimating:]
  -[SBFolderIconImageView updateImageAnimated:]
  -[SBFolderIconImageView backgroundView]


_SBFolderIconImageViewDisableUpdatesAssertion : NSObject <BSInvalidatable, BSDescriptionProviding>
 @property  SBFolderIconImageView *folderIconImageView
 @property  NSString *reason
 @property  BOOL invalidated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBFolderIconImageViewDisableUpdatesAssertion isInvalidated]
  -[_SBFolderIconImageViewDisableUpdatesAssertion .cxx_destruct]
  -[_SBFolderIconImageViewDisableUpdatesAssertion succinctDescriptionBuilder]
  -[_SBFolderIconImageViewDisableUpdatesAssertion descriptionBuilderWithMultilinePrefix:]
  -[_SBFolderIconImageViewDisableUpdatesAssertion setInvalidated:]
  -[_SBFolderIconImageViewDisableUpdatesAssertion descriptionWithMultilinePrefix:]
  -[_SBFolderIconImageViewDisableUpdatesAssertion succinctDescription]
  -[_SBFolderIconImageViewDisableUpdatesAssertion reason]
  -[_SBFolderIconImageViewDisableUpdatesAssertion dealloc]
  -[_SBFolderIconImageViewDisableUpdatesAssertion invalidate]
  -[_SBFolderIconImageViewDisableUpdatesAssertion folderIconImageView]
  -[_SBFolderIconImageViewDisableUpdatesAssertion initWithFolderIconImageView:reason:]


SBHLibraryWaveZoomSettings : SBHIconZoomSettings
 @property  double interPodWaveDelay
 @property  double upperPodRelativeCrossfadeDuration
 @property  double upperPodRelativeStackAlphaDuration
 @property  double relativeBackgroundDuration
 @property  double relativeSearchDuration
 @property  double searchScale
 @property  double podRelativeFadeDelay
 @property  SBFAnimationSettings *podFadeSettings
 @property  PTPointSettings *zEffectControlPoint1Settings
 @property  PTPointSettings *zEffectControlPoint2Settings
 @property  SBHInterpolationSettings *retargetedMassSettings
 @property  SBHInterpolationSettings *retargetedStiffnessSettings
 @property  SBHInterpolationSettings *retargetedInitialVelocitySettings
 @property  SBHInterpolationSettings *retargetedBasicDurationSettings

  // class methods
  +[SBHLibraryWaveZoomSettings settingsControllerModule]

  // instance methods
  -[SBHLibraryWaveZoomSettings .cxx_destruct]
  -[SBHLibraryWaveZoomSettings setDefaultValues]
  -[SBHLibraryWaveZoomSettings podFadeSettings]
  -[SBHLibraryWaveZoomSettings interPodWaveDelay]
  -[SBHLibraryWaveZoomSettings zEffectControlPoint1Settings]
  -[SBHLibraryWaveZoomSettings zEffectControlPoint2Settings]
  -[SBHLibraryWaveZoomSettings upperPodRelativeCrossfadeDuration]
  -[SBHLibraryWaveZoomSettings upperPodRelativeStackAlphaDuration]
  -[SBHLibraryWaveZoomSettings podRelativeFadeDelay]
  -[SBHLibraryWaveZoomSettings relativeSearchDuration]
  -[SBHLibraryWaveZoomSettings relativeBackgroundDuration]
  -[SBHLibraryWaveZoomSettings retargetedMassSettings]
  -[SBHLibraryWaveZoomSettings retargetedStiffnessSettings]
  -[SBHLibraryWaveZoomSettings retargetedInitialVelocitySettings]
  -[SBHLibraryWaveZoomSettings retargetedBasicDurationSettings]
  -[SBHLibraryWaveZoomSettings searchScale]
  -[SBHLibraryWaveZoomSettings setInterPodWaveDelay:]
  -[SBHLibraryWaveZoomSettings setSearchScale:]
  -[SBHLibraryWaveZoomSettings setUpperPodRelativeCrossfadeDuration:]
  -[SBHLibraryWaveZoomSettings setUpperPodRelativeStackAlphaDuration:]
  -[SBHLibraryWaveZoomSettings setRelativeBackgroundDuration:]
  -[SBHLibraryWaveZoomSettings setRelativeSearchDuration:]
  -[SBHLibraryWaveZoomSettings setPodRelativeFadeDelay:]
  -[SBHLibraryWaveZoomSettings setPodFadeSettings:]
  -[SBHLibraryWaveZoomSettings setZEffectControlPoint1Settings:]
  -[SBHLibraryWaveZoomSettings setZEffectControlPoint2Settings:]
  -[SBHLibraryWaveZoomSettings setRetargetedMassSettings:]
  -[SBHLibraryWaveZoomSettings setRetargetedStiffnessSettings:]
  -[SBHLibraryWaveZoomSettings setRetargetedInitialVelocitySettings:]
  -[SBHLibraryWaveZoomSettings setRetargetedBasicDurationSettings:]


SBHLibraryWaveOpenSettings : SBHLibraryWaveZoomSettings
  // instance methods
  -[SBHLibraryWaveOpenSettings setDefaultValues]


SBHLibraryWaveCloseSettings : SBHLibraryWaveZoomSettings
  // instance methods
  -[SBHLibraryWaveCloseSettings setDefaultValues]


SBIconListViewDominoPivotAnimator : NSObject <SBIconListLayoutAnimating>
 @property  unsigned long pivotIconIndex
 @property  SBIcon *pivotIcon
 @property  <SBIconListViewDominoPivotAnimatorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewDominoPivotAnimator .cxx_destruct]
  -[SBIconListViewDominoPivotAnimator setDelegate:]
  -[SBIconListViewDominoPivotAnimator iconListView:wantsAnimatedRemovalForIconViews:completionHandler:]
  -[SBIconListViewDominoPivotAnimator delegate]
  -[SBIconListViewDominoPivotAnimator iconListView:wantsAnimatedLayoutForIconView:withParameters:alongsideAnimationBlock:]
  -[SBIconListViewDominoPivotAnimator pivotIconIndex]
  -[SBIconListViewDominoPivotAnimator pivotIcon]
  -[SBIconListViewDominoPivotAnimator setPivotIconIndex:]
  -[SBIconListViewDominoPivotAnimator initWithPivotIcon:]


SBHWidgetConfigurationFlipAnimator : NSObject <SBIconViewObserver, SBHViewControllerTransitionAnimating>
 @property  SBHWidgetSettings *widgetSettings
 @property  SBFTouchPassThroughView *matchMoveView
 @property  SBHWidgetConfigurationTransformView *sourceContainerView
 @property  UIView *targetSuperview
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceContentFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} targetContentFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} homeScreenContentFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceContentFrameInMatchMoveViewSpace
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} targetContentFrameInMatchMoveViewSpace
 @property  long long currentEndpoint
 @property  double startingFlipFraction
 @property  double endingFlipFraction
 @property  double startingRotationAngle
 @property  double endingRotationAngle
 @property  UIViewFloatAnimatableProperty *flipAnimatableProperty
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHWidgetConfigurationFlipAnimator iconViewWasDiscarded:]
  -[SBHWidgetConfigurationFlipAnimator iconViewWasRecycled:]
  -[SBHWidgetConfigurationFlipAnimator widgetSettings]
  -[SBHWidgetConfigurationFlipAnimator setMatchMoveView:]
  -[SBHWidgetConfigurationFlipAnimator .cxx_destruct]
  -[SBHWidgetConfigurationFlipAnimator iconViewDidBecomeWindowless:]
  -[SBHWidgetConfigurationFlipAnimator init]
  -[SBHWidgetConfigurationFlipAnimator dealloc]
  -[SBHWidgetConfigurationFlipAnimator matchMoveView]
  -[SBHWidgetConfigurationFlipAnimator finalizeAnimationAtEndpoint:withContext:]
  -[SBHWidgetConfigurationFlipAnimator sourceContainerView]
  -[SBHWidgetConfigurationFlipAnimator prepareToAnimateFromEndpoint:withContext:]
  -[SBHWidgetConfigurationFlipAnimator animateToEndpoint:withContext:completion:]
  -[SBHWidgetConfigurationFlipAnimator setSourceContentFrame:]
  -[SBHWidgetConfigurationFlipAnimator setTargetContentFrame:]
  -[SBHWidgetConfigurationFlipAnimator sourceContentFrame]
  -[SBHWidgetConfigurationFlipAnimator targetContentFrame]
  -[SBHWidgetConfigurationFlipAnimator homeScreenContentFrame]
  -[SBHWidgetConfigurationFlipAnimator flipAnimatableProperty]
  -[SBHWidgetConfigurationFlipAnimator setHomeScreenContentFrame:]
  -[SBHWidgetConfigurationFlipAnimator setTargetContentFrameInMatchMoveViewSpace:]
  -[SBHWidgetConfigurationFlipAnimator setSourceContentFrameInMatchMoveViewSpace:]
  -[SBHWidgetConfigurationFlipAnimator setSourceContainerView:]
  -[SBHWidgetConfigurationFlipAnimator setTargetSuperview:]
  -[SBHWidgetConfigurationFlipAnimator setFlipAnimatableProperty:]
  -[SBHWidgetConfigurationFlipAnimator endingFlipFraction]
  -[SBHWidgetConfigurationFlipAnimator startingFlipFraction]
  -[SBHWidgetConfigurationFlipAnimator startingRotationAngle]
  -[SBHWidgetConfigurationFlipAnimator endingRotationAngle]
  -[SBHWidgetConfigurationFlipAnimator setStartingFlipFraction:]
  -[SBHWidgetConfigurationFlipAnimator setEndingFlipFraction:]
  -[SBHWidgetConfigurationFlipAnimator setStartingRotationAngle:]
  -[SBHWidgetConfigurationFlipAnimator setEndingRotationAngle:]
  -[SBHWidgetConfigurationFlipAnimator _configureForEndpoint:context:inMode:completion:]
  -[SBHWidgetConfigurationFlipAnimator targetSuperview]
  -[SBHWidgetConfigurationFlipAnimator currentEndpoint]
  -[SBHWidgetConfigurationFlipAnimator setCurrentEndpoint:]
  -[SBHWidgetConfigurationFlipAnimator targetContentFrameInMatchMoveViewSpace]
  -[SBHWidgetConfigurationFlipAnimator sourceContentFrameInMatchMoveViewSpace]


SBHWidgetConfigurationTransformView : SBFTouchPassThroughView
  // class methods
  +[SBHWidgetConfigurationTransformView layerClass]


_SBHIconLibraryTableView : UITableView
 @property  SBFFeatherBlurView *headerBlur

  // instance methods
  -[_SBHIconLibraryTableView setHeaderBlur:]
  -[_SBHIconLibraryTableView .cxx_destruct]
  -[_SBHIconLibraryTableView initWithFrame:style:]
  -[_SBHIconLibraryTableView layoutSubviews]
  -[_SBHIconLibraryTableView headerBlur]


SBHIconLibraryTableViewController : SBHTableViewController <SBIconObserver, SBIconViewObserver, PTSettingsKeyObserver, UITableViewDelegatePrivate, UITableViewDragDelegate, UIGestureRecognizerDelegate, SBHTableViewIconLibraryObserver, SBHScrollableIconViewContaining, SBHLibraryChildViewController, SBHSearchResultsUpdating>
 @property  SBHTableViewIconLibrary *library
 @property  SBHIconLibraryQuery *currentQuery
 @property  SBHIconTableViewDiffableDataSource *dataSource
 @property  <SBIconViewProviding> *iconViewProvider
 @property  <SBHIconLibraryTableViewControllerObserver> *observer
 @property  <SBHIconLibraryTableViewControllerLayoutDelegate> *layoutDelegate
 @property  SBHIconModel *iconModel
 @property  SBRootFolder *rootFolder
 @property  SBHLibraryCategoryMap *libraryCategoryMap
 @property  UIView *headerBlurView
 @property  BOOL disablesNullQueryExecution
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHIconImageCache *iconImageCache
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  NSSet *presentedIconLocations
 @property  _UILegibilitySettings *legibilitySettings
 @property  SBHLibrarySearchController *searchController

  // class methods
  +[SBHIconLibraryTableViewController tableViewClass]

  // instance methods
  -[SBHIconLibraryTableViewController setIconViewProvider:]
  -[SBHIconLibraryTableViewController iconViewForIcon:location:]
  -[SBHIconLibraryTableViewController firstIconViewForIcon:excludingLocations:]
  -[SBHIconLibraryTableViewController setDisablesNullQueryExecution:]
  -[SBHIconLibraryTableViewController visibleContainerInsets]
  -[SBHIconLibraryTableViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[SBHIconLibraryTableViewController setRootFolder:]
  -[SBHIconLibraryTableViewController currentQuery]
  -[SBHIconLibraryTableViewController setLayoutDelegate:]
  -[SBHIconLibraryTableViewController tableView:didEndDisplayingCell:forRowAtIndexPath:]
  -[SBHIconLibraryTableViewController _executeQuery:]
  -[SBHIconLibraryTableViewController disablesNullQueryExecution]
  -[SBHIconLibraryTableViewController initWithCoder:]
  -[SBHIconLibraryTableViewController enumerateScrollableIconViewsUsingBlock:]
  -[SBHIconLibraryTableViewController tableView:viewForHeaderInSection:]
  -[SBHIconLibraryTableViewController searchController]
  -[SBHIconLibraryTableViewController library]
  -[SBHIconLibraryTableViewController presentedIconLocations]
  -[SBHIconLibraryTableViewController _setupObservedIcons]
  -[SBHIconLibraryTableViewController iconViewWillBeginDrag:]
  -[SBHIconLibraryTableViewController searchControllerShouldReturn:]
  -[SBHIconLibraryTableViewController setSearchController:]
  -[SBHIconLibraryTableViewController tableView:shouldDrawBottomSeparatorForSection:]
  -[SBHIconLibraryTableViewController _processDragItemsForIconView:session:]
  -[SBHIconLibraryTableViewController updateSearchResultsForSearchController:]
  -[SBHIconLibraryTableViewController iconViewProvider]
  -[SBHIconLibraryTableViewController _startObservingIcon:]
  -[SBHIconLibraryTableViewController libraryCategoryMap]
  -[SBHIconLibraryTableViewController tableView:titleForHeaderInSection:]
  -[SBHIconLibraryTableViewController setLibraryCategoryMap:]
  -[SBHIconLibraryTableViewController _shouldShowNoResultsViewForQueryResult:]
  -[SBHIconLibraryTableViewController .cxx_destruct]
  -[SBHIconLibraryTableViewController headerBlurView]
  -[SBHIconLibraryTableViewController scrollViewDidEndScrollingAnimation:]
  -[SBHIconLibraryTableViewController iconImageCache]
  -[SBHIconLibraryTableViewController tableView:didSelectRowAtIndexPath:]
  -[SBHIconLibraryTableViewController iconModel]
  -[SBHIconLibraryTableViewController viewDidLoad]
  -[SBHIconLibraryTableViewController _logLaunchOfIcon:atIndexPath:]
  -[SBHIconLibraryTableViewController layoutDelegate]
  -[SBHIconLibraryTableViewController tableView:shouldHaveFullLengthBottomSeparatorForSection:]
  -[SBHIconLibraryTableViewController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHIconLibraryTableViewController _refreshIconIfVisible:]
  -[SBHIconLibraryTableViewController setLegibilitySettings:]
  -[SBHIconLibraryTableViewController iconAccessoriesDidUpdate:]
  -[SBHIconLibraryTableViewController viewDidAppear:]
  -[SBHIconLibraryTableViewController initWithNibName:bundle:]
  -[SBHIconLibraryTableViewController setIconModel:]
  -[SBHIconLibraryTableViewController dataSource]
  -[SBHIconLibraryTableViewController _handleAlphaFadeForCell:atIndexPath:]
  -[SBHIconLibraryTableViewController setIconImageCache:]
  -[SBHIconLibraryTableViewController init]
  -[SBHIconLibraryTableViewController iconViewDidEndDrag:]
  -[SBHIconLibraryTableViewController _isViewControllerVisible]
  -[SBHIconLibraryTableViewController iconLibrary:hasUpdatedQueryResult:]
  -[SBHIconLibraryTableViewController _updateShowHeadersFromQueryResult:]
  -[SBHIconLibraryTableViewController scrollViewDidEndDragging:willDecelerate:]
  -[SBHIconLibraryTableViewController _reloadAppIcons]
  -[SBHIconLibraryTableViewController _setupLibrary]
  -[SBHIconLibraryTableViewController scrollViewDidScroll:]
  -[SBHIconLibraryTableViewController _visibleIndexPaths]
  -[SBHIconLibraryTableViewController _dragSessionForIconView:]
  -[SBHIconLibraryTableViewController gestureRecognizerShouldBegin:]
  -[SBHIconLibraryTableViewController _invalidatePrewarmAssertion:]
  -[SBHIconLibraryTableViewController initWithStyle:]
  -[SBHIconLibraryTableViewController tableView:dragPreviewParametersForRowAtIndexPath:]
  -[SBHIconLibraryTableViewController _queryForCurrentSearchTextField]
  -[SBHIconLibraryTableViewController rootFolder]
  -[SBHIconLibraryTableViewController _configureCell:forIcon:]
  -[SBHIconLibraryTableViewController setListLayoutProvider:]
  -[SBHIconLibraryTableViewController headerTopOccludingInset]
  -[SBHIconLibraryTableViewController _teardownObservedIcons]
  -[SBHIconLibraryTableViewController _unobserveIcon:]
  -[SBHIconLibraryTableViewController viewWillDisappear:]
  -[SBHIconLibraryTableViewController isDisplayingIconView:inLocation:]
  -[SBHIconLibraryTableViewController _isIndexPathVisible:]
  -[SBHIconLibraryTableViewController _refreshLibrary:]
  -[SBHIconLibraryTableViewController firstIconViewForIcon:inLocations:]
  -[SBHIconLibraryTableViewController tableView:frameForSectionIndexGivenProposedFrame:]
  -[SBHIconLibraryTableViewController _handleLowQualityAlphaFade]
  -[SBHIconLibraryTableViewController scrollViewWillBeginDragging:]
  -[SBHIconLibraryTableViewController observer]
  -[SBHIconLibraryTableViewController viewWillAppear:]
  -[SBHIconLibraryTableViewController isDisplayingIcon:inLocations:]
  -[SBHIconLibraryTableViewController _indexPathForDefaultSearchResult]
  -[SBHIconLibraryTableViewController _visibleIcons]
  -[SBHIconLibraryTableViewController _iconViewForIcon:]
  -[SBHIconLibraryTableViewController isDisplayingIconView:]
  -[SBHIconLibraryTableViewController settings:changedValueForKey:]
  -[SBHIconLibraryTableViewController _reloadRowsAtIndexPaths:]
  -[SBHIconLibraryTableViewController _handleDidTapEmptyResultsArea:]
  -[SBHIconLibraryTableViewController firstIconViewForIcon:]
  -[SBHIconLibraryTableViewController setObserver:]
  -[SBHIconLibraryTableViewController _iconModelWillReload:]
  -[SBHIconLibraryTableViewController _iconViewAtIndexPath:]
  -[SBHIconLibraryTableViewController _observeIcon:]
  -[SBHIconLibraryTableViewController _reloadVisibleCells]
  -[SBHIconLibraryTableViewController _stopObservingIcon:]
  -[SBHIconLibraryTableViewController _notifyDelegatesOfAppLaunchFromSearchController:]
  -[SBHIconLibraryTableViewController _resetDragSession:]
  -[SBHIconLibraryTableViewController _mapIconView:forDragSession:]
  -[SBHIconLibraryTableViewController enumerateDisplayedIconViewsUsingBlock:]
  -[SBHIconLibraryTableViewController tableView:dragSessionWillBegin:]
  -[SBHIconLibraryTableViewController _iconFilter]
  -[SBHIconLibraryTableViewController listLayoutProvider]
  -[SBHIconLibraryTableViewController tableView:dragSessionDidEnd:]
  -[SBHIconLibraryTableViewController acquireLibrarySearchPrewarmAssertionForReason:]
  -[SBHIconLibraryTableViewController tableView:itemsForBeginningDragSession:atIndexPath:]
  -[SBHIconLibraryTableViewController _iconViewForDragSession:]
  -[SBHIconLibraryTableViewController _visibleSectionIndicies]
  -[SBHIconLibraryTableViewController _refreshIconCache]
  -[SBHIconLibraryTableViewController _teardownLibrary]
  -[SBHIconLibraryTableViewController isDisplayingIcon:inLocation:]
  -[SBHIconLibraryTableViewController tableView:contextMenuConfigurationForRowAtIndexPath:point:]
  -[SBHIconLibraryTableViewController tableView:dragSessionAllowsMoveOperation:]
  -[SBHIconLibraryTableViewController scrollViewDidEndDecelerating:]
  -[SBHIconLibraryTableViewController viewDidDisappear:]
  -[SBHIconLibraryTableViewController isDisplayingIcon:]
  -[SBHIconLibraryTableViewController _updateSectionHeaderHeight]
  -[SBHIconLibraryTableViewController _createIconView]
  -[SBHIconLibraryTableViewController isPresentingIconLocation:]
  -[SBHIconLibraryTableViewController legibilitySettings]
  -[SBHIconLibraryTableViewController _nullQuery]
  -[SBHIconLibraryTableViewController setHeaderBlurView:]


_SBHIconLibraryPrewarmAssertion : NSObject <BSInvalidatable>
 @property  NSString *reason
 @property  SBHIconLibraryTableViewController *iconLibraryTableViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBHIconLibraryPrewarmAssertion .cxx_destruct]
  -[_SBHIconLibraryPrewarmAssertion isEqual:]
  -[_SBHIconLibraryPrewarmAssertion reason]
  -[_SBHIconLibraryPrewarmAssertion dealloc]
  -[_SBHIconLibraryPrewarmAssertion invalidate]
  -[_SBHIconLibraryPrewarmAssertion initWithReason:iconLibraryTableViewController:]
  -[_SBHIconLibraryPrewarmAssertion iconLibraryTableViewController]


SBHLibraryFadeAnimator : NSObject <SBHViewControllerTransitionAnimating>
 @property  BSAnimationSettings *animationSettings
 @property  BOOL alreadyAnimating

  // instance methods
  -[SBHLibraryFadeAnimator animationSettings]
  -[SBHLibraryFadeAnimator .cxx_destruct]
  -[SBHLibraryFadeAnimator init]
  -[SBHLibraryFadeAnimator finalizeAnimationAtEndpoint:withContext:]
  -[SBHLibraryFadeAnimator prepareToAnimateFromEndpoint:withContext:]
  -[SBHLibraryFadeAnimator animateToEndpoint:withContext:completion:]
  -[SBHLibraryFadeAnimator isAlreadyAnimating]
  -[SBHLibraryFadeAnimator setAlreadyAnimating:]
  -[SBHLibraryFadeAnimator _configurePrimaryViewsForEndpoint:finalizing:withContext:]
  -[SBHLibraryFadeAnimator _configureIndicatorViewsForEndpoint:withContext:]


SBHIconLibraryQueryContext : NSObject
 @property  NSUUID *UUID
 @property  SBHIconLibraryQuery *query

  // instance methods
  -[SBHIconLibraryQueryContext initWithQuery:]
  -[SBHIconLibraryQueryContext UUID]
  -[SBHIconLibraryQueryContext query]
  -[SBHIconLibraryQueryContext objectForKeyedSubscript:]
  -[SBHIconLibraryQueryContext .cxx_destruct]
  -[SBHIconLibraryQueryContext setObject:forKeyedSubscript:]
  -[SBHIconLibraryQueryContext init]
  -[SBHIconLibraryQueryContext isEqual:]
  -[SBHIconLibraryQueryContext isEqualToQueryContext:]


SBHIconLibraryAbstractQueryEngine : NSObject <SBHIconLibraryQueryEngine>
 @property  NSObject<OS_dispatch_queue> *processingQueue
 @property  SBHIconModel *iconModel
 @property  BOOL isShutdown
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHIconLibraryAbstractQueryEngine _leafIdentifiersForBundleIdentifier:]

  // instance methods
  -[SBHIconLibraryAbstractQueryEngine executeQuery:]
  -[SBHIconLibraryAbstractQueryEngine shutdown]
  -[SBHIconLibraryAbstractQueryEngine .cxx_destruct]
  -[SBHIconLibraryAbstractQueryEngine iconModel]
  -[SBHIconLibraryAbstractQueryEngine isShutdown]
  -[SBHIconLibraryAbstractQueryEngine _iconModelDidReload:]
  -[SBHIconLibraryAbstractQueryEngine initWithIconModel:]
  -[SBHIconLibraryAbstractQueryEngine init]
  -[SBHIconLibraryAbstractQueryEngine addObserver:]
  -[SBHIconLibraryAbstractQueryEngine _setupNotifications]
  -[SBHIconLibraryAbstractQueryEngine processingQueue]
  -[SBHIconLibraryAbstractQueryEngine _iconModelWillReload:]
  -[SBHIconLibraryAbstractQueryEngine removeObserver:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_isIconModelReloading]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_teardownQueryContext:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_startNewQueryContext:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_addIcons:iconLibraryQueryContext:notifyDelegate:]
  -[SBHIconLibraryAbstractQueryEngine _iconModelNeedsIconAdded:]
  -[SBHIconLibraryAbstractQueryEngine _iconModelNeedsIconReplaced:]
  -[SBHIconLibraryAbstractQueryEngine _iconModelNeedsIconRemoved:]
  -[SBHIconLibraryAbstractQueryEngine _iconModelVisibilityDidChange:]
  -[SBHIconLibraryAbstractQueryEngine _teardownNotifications]
  -[SBHIconLibraryAbstractQueryEngine _mapBundleIdentifiersToIcons:completion:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_sortComperatorForQueryContext:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_noteQueryResultsWereUpdated:iconLibraryQueryContext:notifyDelegate:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_observerDispatchQueryResultsWereUpdated:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_teardownQueryContext:removeContext:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_isBundleIdentifierValid:iconLibraryQueryContext:]
  -[SBHIconLibraryAbstractQueryEngine _addItemsWithBundleIdentifiers:iconLibraryQueryContext:notifyDelegate:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_removeItemsWithBundleIdentifiers:iconLibraryQueryContext:notifyDelegate:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_isShutdown]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_observerDispatchError:forQuery:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_lastQueryResultForContext:]


SBHIconViewContextMenuStateController : NSObject
  // class methods
  +[SBHIconViewContextMenuStateController sharedInstance]

  // instance methods
  -[SBHIconViewContextMenuStateController areAnyIconViewContextMenusAnimating]
  -[SBHIconViewContextMenuStateController dismissAppIconForceTouchControllers:]
  -[SBHIconViewContextMenuStateController performAfterContextMenuAnimationsHaveCompleted:]
  -[SBHIconViewContextMenuStateController earlyTerminateAnyContextMenuAnimations]
  -[SBHIconViewContextMenuStateController areAnyIconViewContextMenusShowing]
  -[SBHIconViewContextMenuStateController noteFolderControllerWillClose:]
  -[SBHIconViewContextMenuStateController iconViewDidAnimateContextMenu:]
  -[SBHIconViewContextMenuStateController .cxx_destruct]
  -[SBHIconViewContextMenuStateController init]
  -[SBHIconViewContextMenuStateController registerIconView:]
  -[SBHIconViewContextMenuStateController unregisterIconView:]
  -[SBHIconViewContextMenuStateController _firePendingIconAnimationBlocks]
  -[SBHIconViewContextMenuStateController iconViewWillDismissContextMenu:]
  -[SBHIconViewContextMenuStateController containerViewDidScrollHiddenIconViewAway:]
  -[SBHIconViewContextMenuStateController iconViewWillPresentContextMenu:]
  -[SBHIconViewContextMenuStateController iconViewWillAnimateContextMenu:]


SBFloatyFolderController : SBFolderController
 @property  unsigned long backgroundEffect

  // class methods
  +[SBFloatyFolderController iconLocation]
  +[SBFloatyFolderController _contentViewClass]
  +[SBFloatyFolderController configurationClass]

  // instance methods
  -[SBFloatyFolderController presentedIconLocations]
  -[SBFloatyFolderController isDisplayingIconView:inLocation:]
  -[SBFloatyFolderController setBackgroundEffect:]
  -[SBFloatyFolderController isDisplayingIcon:inLocation:]
  -[SBFloatyFolderController backgroundEffect]
  -[SBFloatyFolderController isPresentingIconLocation:]
  -[SBFloatyFolderController folderView:didBeginEditingTitle:]
  -[SBFloatyFolderController folderView:didEndEditingTitle:]
  -[SBFloatyFolderController floatyFolderView]


SBHMultiplexingViewController : UIViewController
 @property  NSHashTable *observers
 @property  SBHMultiplexingManager *multiplexingManager
 @property  double level
 @property  NSString *identifier
 @property  UIViewController *multiplexedViewController

  // instance methods
  -[SBHMultiplexingViewController level]
  -[SBHMultiplexingViewController sbh_underlyingAvocadoHostViewControllers]
  -[SBHMultiplexingViewController multiplexedViewController]
  -[SBHMultiplexingViewController .cxx_destruct]
  -[SBHMultiplexingViewController _setUpMultiplexedViewController]
  -[SBHMultiplexingViewController setMultiplexingManager:]
  -[SBHMultiplexingViewController shouldAutomaticallyForwardAppearanceMethods]
  -[SBHMultiplexingViewController setObservers:]
  -[SBHMultiplexingViewController identifier]
  -[SBHMultiplexingViewController multiplexingManager]
  -[SBHMultiplexingViewController addObserver:]
  -[SBHMultiplexingViewController viewWillAppear:]
  -[SBHMultiplexingViewController activateWithViewController:]
  -[SBHMultiplexingViewController deactivate]
  -[SBHMultiplexingViewController observers]
  -[SBHMultiplexingViewController dealloc]
  -[SBHMultiplexingViewController initWithLevel:identifier:]
  -[SBHMultiplexingViewController removeObserver:]
  -[SBHMultiplexingViewController loadView]
  -[SBHMultiplexingViewController sbh_isMultiplexingViewController]
  -[SBHMultiplexingViewController _canShowWhileLocked]


SBHAddWidgetButton : UIButton
 @property  MTStylingProvidingSolidColorView *backgroundView
 @property  UIView *highlightView

  // instance methods
  -[SBHAddWidgetButton setHighlighted:]
  -[SBHAddWidgetButton _contentSizeCategoryDidChange:]
  -[SBHAddWidgetButton traitCollectionDidChange:]
  -[SBHAddWidgetButton .cxx_destruct]
  -[SBHAddWidgetButton layoutSubviews]
  -[SBHAddWidgetButton _titleLabelFont]
  -[SBHAddWidgetButton mt_applyVisualStyling:]
  -[SBHAddWidgetButton initWithFrame:]
  -[SBHAddWidgetButton setBackgroundView:]
  -[SBHAddWidgetButton setHighlightView:]
  -[SBHAddWidgetButton dealloc]
  -[SBHAddWidgetButton _buttonCornerRadius]
  -[SBHAddWidgetButton highlightView]
  -[SBHAddWidgetButton intrinsicContentSize]
  -[SBHAddWidgetButton backgroundView]
  -[SBHAddWidgetButton _addSymbolImage]
  -[SBHAddWidgetButton mt_removeAllVisualStyling]


SBHRecentsDocumentExtensionProvider : NSObject <_SBUIPopoverExtensionHostDelegate, SBHRecentsDocumentExtensionWrappingViewControllerDelegate>
 @property  SBHRecentsDocumentExtensionWrappingViewController *wrappingViewController
 @property  SBUIPopoverExtensionHostViewController *hostViewController
 @property  NSExtension *extension
 @property  <_SBUIPopoverExtensionRemoteInterface> *remoteService
 @property  {CGSize=dd} compactPreferredContentSize
 @property  <SBHRecentsDocumentExtensionProviderDelegate> *delegate
 @property  BOOL usesIntrinsicContentSizeBasedOnScreenSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHRecentsDocumentExtensionProvider setExtension:]
  -[SBHRecentsDocumentExtensionProvider .cxx_destruct]
  -[SBHRecentsDocumentExtensionProvider setDelegate:]
  -[SBHRecentsDocumentExtensionProvider init]
  -[SBHRecentsDocumentExtensionProvider remoteService]
  -[SBHRecentsDocumentExtensionProvider extension]
  -[SBHRecentsDocumentExtensionProvider setRemoteService:]
  -[SBHRecentsDocumentExtensionProvider delegate]
  -[SBHRecentsDocumentExtensionProvider dealloc]
  -[SBHRecentsDocumentExtensionProvider hostViewController]
  -[SBHRecentsDocumentExtensionProvider canShowRecentsDocumentExtensionProviderForBundleIdentifier:]
  -[SBHRecentsDocumentExtensionProvider setUsesIntrinsicContentSizeBasedOnScreenSize:]
  -[SBHRecentsDocumentExtensionProvider recentsDocumentViewControllerForBundleIdentifier:]
  -[SBHRecentsDocumentExtensionProvider _loadExtensionWithCompletion:]
  -[SBHRecentsDocumentExtensionProvider _teardownHostViewController]
  -[SBHRecentsDocumentExtensionProvider usesIntrinsicContentSizeBasedOnScreenSize]
  -[SBHRecentsDocumentExtensionProvider wrappingViewController]
  -[SBHRecentsDocumentExtensionProvider _loadRemoteViewControllerWithConfiguration:]
  -[SBHRecentsDocumentExtensionProvider _extensionWillExit:]
  -[SBHRecentsDocumentExtensionProvider _preferredExtensionIdentifier]
  -[SBHRecentsDocumentExtensionProvider _setupHostViewController:]
  -[SBHRecentsDocumentExtensionProvider popoverHostExtensionRequestsDismiss:]
  -[SBHRecentsDocumentExtensionProvider popoverHostExtensionDidExit:]
  -[SBHRecentsDocumentExtensionProvider recentsDocumentExtensionWrappingViewControllerHasTransparentContent:]
  -[SBHRecentsDocumentExtensionProvider _viewControllerConfiguration:]
  -[SBHRecentsDocumentExtensionProvider setWrappingViewController:]
  -[SBHRecentsDocumentExtensionProvider compactPreferredContentSize]
  -[SBHRecentsDocumentExtensionProvider setCompactPreferredContentSize:]


SBHFileWidgetExtensionProvider : SBHRecentsDocumentExtensionProvider
 @property  BOOL widgetHasTransparentBackground

  // instance methods
  -[SBHFileWidgetExtensionProvider setWidgetConfiguration:]
  -[SBHFileWidgetExtensionProvider init]
  -[SBHFileWidgetExtensionProvider _preferredExtensionIdentifier]
  -[SBHFileWidgetExtensionProvider _setupHostViewController:]
  -[SBHFileWidgetExtensionProvider recentsDocumentExtensionWrappingViewControllerHasTransparentContent:]
  -[SBHFileWidgetExtensionProvider _extensionHasTransparencyEntitlement:]
  -[SBHFileWidgetExtensionProvider widgetHasTransparentBackground]
  -[SBHFileWidgetExtensionProvider filesWidgetViewControllerWithConfiguration:]
  -[SBHFileWidgetExtensionProvider setWidgetHasTransparentBackground:]


SBIconModelReadOnlyMemoryStore : SBIconModelMemoryStore
  // instance methods
  -[SBIconModelReadOnlyMemoryStore deleteDesiredIconStateWithOptions:error:]
  -[SBIconModelReadOnlyMemoryStore saveDesiredIconState:error:]
  -[SBIconModelReadOnlyMemoryStore saveCurrentIconState:error:]
  -[SBIconModelReadOnlyMemoryStore deleteCurrentIconStateWithOptions:error:]


SBHLibraryPodFolderControllerConfiguration : SBFolderControllerConfiguration
 @property  SBHLibraryCategoriesRootFolder *categoriesFolder
 @property  SBHLibraryCategoryMapProvider *categoryMapProvider

  // instance methods
  -[SBHLibraryPodFolderControllerConfiguration categoryMapProvider]
  -[SBHLibraryPodFolderControllerConfiguration .cxx_destruct]
  -[SBHLibraryPodFolderControllerConfiguration setCategoryMapProvider:]
  -[SBHLibraryPodFolderControllerConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHLibraryPodFolderControllerConfiguration initWithConfiguration:]
  -[SBHLibraryPodFolderControllerConfiguration categoriesFolder]
  -[SBHLibraryPodFolderControllerConfiguration setCategoriesFolder:]


SBHViewControllerTransitionAnimatorAdapter : NSObject <SBViewControllerReversibleAnimatedTransitioning>
 @property  unsigned long transitionToken
 @property  <SBHViewControllerTransitionAnimating> *animator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHViewControllerTransitionAnimatorAdapter animator]
  -[SBHViewControllerTransitionAnimatorAdapter cancelTransition:withCompletionSpeed:completionCurve:]
  -[SBHViewControllerTransitionAnimatorAdapter supportsRestarting]
  -[SBHViewControllerTransitionAnimatorAdapter transitionDuration:]
  -[SBHViewControllerTransitionAnimatorAdapter .cxx_destruct]
  -[SBHViewControllerTransitionAnimatorAdapter animateTransition:]
  -[SBHViewControllerTransitionAnimatorAdapter initWithAnimator:]
  -[SBHViewControllerTransitionAnimatorAdapter transitionToken]
  -[SBHViewControllerTransitionAnimatorAdapter setTransitionToken:]


SBIconListView : UIView <SBIconObserver, PTSettingsKeyObserver, SBIconListModelObserver, SBIconViewQuerying, SBHVisibleContentPresenter, BSDescriptionProviding>
 @property  SBIconListViewIconLocationTransitionHandler *currentIconLocationTransitionHandler
 @property  <SBIconWidgetIntroductionDelegate> *widgetIntroductionDelegate
 @property  SBIconWidgetIntroductionView *pronouncedContainerView
 @property  SBIconWidgetIntroductionPopoverView *widgetIntroductionPopover
 @property  NSLayoutConstraint *widgetIntroductionPopoverTopAnchorConstraint
 @property  NSLayoutConstraint *widgetIntroductionPopoverLeadingAnchorConstraint
 @property  BOOL isWidgetIntroductionVertical
 @property  Class baseIconViewClass
 @property  unsigned long iconRowsForCurrentOrientation
 @property  unsigned long iconColumnsForCurrentOrientation
 @property  {SBHIconGridSize=SS} gridSizeForCurrentOrientation
 @property  unsigned long iconsInRowForSpacingCalculation
 @property  unsigned long iconRowsForSpacingCalculation
 @property  unsigned long maximumIconCount
 @property  <SBIconListLayoutProvider> *layoutProvider
 @property  <SBIconListLayout> *layout
 @property  long long orientation
 @property  BOOL adaptsOrientationToTraitCollection
 @property  BOOL vertical
 @property  BOOL editing
 @property  BOOL purged
 @property  BOOL layoutReversed
 @property  unsigned long automaticallyReversedLayoutOrientations
 @property  BOOL pausesIconsForScrolling
 @property  BOOL adjustsColumnPositionsForFullScreenWidth
 @property  unsigned long userInterfaceLayoutDirectionHandling
 @property  long long userInterfaceLayoutDirection
 @property  unsigned long iconViewConfigurationOptions
 @property  _UILegibilitySettings *legibilitySettings
 @property  <SBIconListLayoutDelegate> *layoutDelegate
 @property  SBIconListModel *model
 @property  <SBIconViewProviding> *iconViewProvider
 @property  NSArray *icons
 @property  NSArray *visibleIcons
 @property  BOOL empty
 @property  BOOL full
 @property  NSString *iconLocation
 @property  {CGSize=dd} alignmentIconSize
 @property  BOOL automaticallyAdjustsLayoutMetricsToFit
 @property  double horizontalIconPadding
 @property  double verticalIconPadding
 @property  {UIEdgeInsets=dddd} additionalLayoutInsets
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} iconLayoutRect
 @property  {CGSize=dd} iconSpacing
 @property  {CGSize=dd} effectiveIconSpacing
 @property  BOOL boundsSizeTracksContentSize
 @property  SBIconListViewLayoutMetrics *layoutMetrics
 @property  unsigned long gridCellInfoOptions
 @property  {_NSRange=QQ} visibleColumnRange
 @property  {_NSRange=QQ} visibleRowRange
 @property  {SBIconListPredictedVisibleColumn=Qd} predictedVisibleColumn
 @property  {SBIconListPredictedVisibleRow=Qd} predictedVisibleRow
 @property  BOOL dragSpringloadingEnabled
 @property  BOOL iconsNeedLayout
 @property  double iconContentScale
 @property  <SBIconListViewDragDelegate> *dragDelegate
 @property  NSString *iconDragTypeIdentifier
 @property  BOOL wantsFastIconReordering
 @property  BOOL occluded
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  BOOL transitioningIconLocation
 @property  BOOL alignsIconsOnPixelBoundaries
 @property  long long layoutInsetsMode
 @property  unsigned long numberOfDisplayedIconViews
 @property  BOOL visiblySettled
 @property  unsigned long iconViewUserVisibilityStatus
 @property  BOOL addsFocusGuidesForWrapping
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long contentVisibility

  // class methods
  +[SBIconListView builtInAnimatorForAnimationType:]
  +[SBIconListView rotationAnchor]
  +[SBIconListView defaultFrameForOrientation:]
  +[SBIconListView defaultIconViewConfigurationOptions]
  +[SBIconListView gridCellInfoOptionsWithInterfaceOrientation:reversedLayout:]
  +[SBIconListView layoutMetricsForParameters:listModel:]
  +[SBIconListView dominoAnimator]
  +[SBIconListView multiStageAnimator]
  +[SBIconListView defaultAnimator]
  +[SBIconListView clusterAnimator]

  // instance methods
  -[SBIconListView setVisibleColumnRange:predictedVisibleColumn:visibleRowRange:predictedVisibleRow:]
  -[SBIconListView setIconsLabelAlpha:]
  -[SBIconListView _removeCaptureOnlyBackgroundViewForRemovedIconIfNecessary:]
  -[SBIconListView isVertical]
  -[SBIconListView widgetIntroductionPopoverTopAnchorConstraint]
  -[SBIconListView setVisibleColumnRange:]
  -[SBIconListView wantsFastIconReordering]
  -[SBIconListView iconDragTypeIdentifier]
  -[SBIconListView iconCoordinateForGridCellIndex:metrics:]
  -[SBIconListView setIconViewProvider:]
  -[SBIconListView _coordinateBeforeCoordinate:rows:columns:metrics:]
  -[SBIconListView dragDelegate]
  -[SBIconListView iconViewForIcon:location:]
  -[SBIconListView visibleGridCellIndexesWithMetrics:]
  -[SBIconListView _updateEditingStateForIcons:animated:]
  -[SBIconListView iconViewForCoordinate:]
  -[SBIconListView iconGridSizeForClass:]
  -[SBIconListView layoutScale]
  -[SBIconListView automaticallyReversedLayoutOrientations]
  -[SBIconListView _getRTLAwareRowIndex:columnIndex:forGridCellIndex:iconGridSize:metrics:]
  -[SBIconListView setCurrentIconLocationTransitionHandler:]
  -[SBIconListView tintColor]
  -[SBIconListView containsIcon:]
  -[SBIconListView iconViewUserVisibilityStatus]
  -[SBIconListView firstIconViewForIcon:excludingLocations:]
  -[SBIconListView iconViewConfigurationOptions]
  -[SBIconListView fadeInIcon:]
  -[SBIconListView isLayoutReversed]
  -[SBIconListView _topSpacingForWidgetIntroductionPopoverView]
  -[SBIconListView setOrientation:]
  -[SBIconListView getLayoutMetricsParameters:]
  -[SBIconListView iconsInRowForSpacingCalculation]
  -[SBIconListView iconVisibilityInfoForRect:normalized:]
  -[SBIconListView enumerateIconsUsingBlock:]
  -[SBIconListView initWithModel:layoutProvider:iconLocation:orientation:iconViewProvider:]
  -[SBIconListView enumerateVisibleIconsUsingBlock:]
  -[SBIconListView isTransitioningIconLocation]
  -[SBIconListView didAddIconView:]
  -[SBIconListView popIconView:]
  -[SBIconListView isFull]
  -[SBIconListView iconAtCoordinate:metrics:]
  -[SBIconListView visibleRowRange]
  -[SBIconListView originForIconAtIndex:]
  -[SBIconListView centerForIcon:]
  -[SBIconListView _insertOrRemoveCaptureOnlyBackgroundViewIfNecessaryForIconView:]
  -[SBIconListView predictedVisibleColumn]
  -[SBIconListView iconCoordinateForIndex:forOrientation:]
  -[SBIconListView setWidgetIntroductionPopover:]
  -[SBIconListView rowAtPoint:]
  -[SBIconListView iconImageSize]
  -[SBIconListView rectForIconAtIndex:]
  -[SBIconListView rowAtPoint:metrics:]
  -[SBIconListView setAddsFocusGuidesForWrapping:]
  -[SBIconListView _addIconViewsForIcons:metrics:]
  -[SBIconListView layoutAndCreateIcon:]
  -[SBIconListView layoutWidgetIntroductionViews]
  -[SBIconListView setAdjustsColumnPositionsForFullScreenWidth:]
  -[SBIconListView setLayoutDelegate:]
  -[SBIconListView makeIconView]
  -[SBIconListView indexForCoordinate:forOrientation:metrics:]
  -[SBIconListView isVisiblySettled]
  -[SBIconListView centerForIconCoordinate:]
  -[SBIconListView removeAllIconAnimations]
  -[SBIconListView didAddSubview:]
  -[SBIconListView _overrideOriginForIconAtRowIndex:columnIndex:gridSize:metrics:]
  -[SBIconListView originForIconAtCoordinate:metrics:]
  -[SBIconListView removeIconView:]
  -[SBIconListView setAdditionalLayoutInsets:]
  -[SBIconListView centerForIconAtIndex:metrics:]
  -[SBIconListView visibleColumnRange]
  -[SBIconListView centerForIcon:metrics:]
  -[SBIconListView widgetIntroductionPopoverLeadingAnchorConstraint]
  -[SBIconListView setWidgetIntroductionDelegate:]
  -[SBIconListView popIcon:]
  -[SBIconListView iconAtGridCellIndex:metrics:]
  -[SBIconListView columnAtPoint:fractionOfDistanceThroughColumn:]
  -[SBIconListView adaptsOrientationToTraitCollection]
  -[SBIconListView markIcon:asNeedingAnimation:]
  -[SBIconListView folderIconImageCache]
  -[SBIconListView iconIndexForGridCellIndex:metrics:]
  -[SBIconListView _applyIconPaddingSettings]
  -[SBIconListView layoutIconsIfNeeded]
  -[SBIconListView isDragSpringloadingEnabled]
  -[SBIconListView iconList:didReplaceIcon:withIcon:]
  -[SBIconListView iconGridSizeClassForIconGridSize:]
  -[SBIconListView gridCellIndexForCoordinate:metrics:]
  -[SBIconListView layoutInsetsForOrientation:]
  -[SBIconListView iconGridSizeClassDidChange:]
  -[SBIconListView iconViewForIcon:]
  -[SBIconListView predictedVisibleRow]
  -[SBIconListView iconColumnsForCurrentOrientation]
  -[SBIconListView addLayoutObserver:]
  -[SBIconListView removedIcons]
  -[SBIconListView beginTransitionToIconLocation:reason:]
  -[SBIconListView setPurged:]
  -[SBIconListView layoutIconsIfNeeded:]
  -[SBIconListView iconCoordinateForIndex:metrics:]
  -[SBIconListView setVisibleColumnRange:predictedVisibleColumn:]
  -[SBIconListView setVisibleRowRange:predictedVisibleRow:]
  -[SBIconListView _getOverlappingRegionRect:beforeRegionRect:afterRegionRect:aboveRegionRect:belowRegionRect:forIconView:]
  -[SBIconListView enumerateIconViewsUsingBlock:]
  -[SBIconListView setIsWidgetIntroductionVertical:]
  -[SBIconListView setIconDragTypeIdentifier:]
  -[SBIconListView baseIconViewClass]
  -[SBIconListView _allowsFocusToLeaveViaHeading:]
  -[SBIconListView iconLocationTransitionHandler:setProgress:]
  -[SBIconListView configureIconView:forIcon:]
  -[SBIconListView layoutMetricsForOrientation:]
  -[SBIconListView isEmpty]
  -[SBIconListView removeShowAllIconsAssertion:]
  -[SBIconListView displayedIconViewForIcon:]
  -[SBIconListView rectForIconCoordinate:]
  -[SBIconListView removeIconViewConfigurationOption:]
  -[SBIconListView _addIconViewsForIcons:]
  -[SBIconListView removeAllIconViews]
  -[SBIconListView setDragDelegate:]
  -[SBIconListView getLayoutMetricsParameters:orientation:]
  -[SBIconListView setIconLocation:]
  -[SBIconListView cursorHitTestingInsetsForIconSpacing:]
  -[SBIconListView widgetIconsForIntroductionContainerView]
  -[SBIconListView iconLayoutRect]
  -[SBIconListView bestGridCellIndexForInsertingIcon:atCoordinate:]
  -[SBIconListView coordinateForIconAtIndex:]
  -[SBIconListView setLayoutProvider:]
  -[SBIconListView setWidgetIntroductionPopoverLeadingAnchorConstraint:]
  -[SBIconListView iconLocationTransitionHandler:completeTransition:]
  -[SBIconListView performZoomOutSpecialIconAnimationWithIcon:completionHandler:]
  -[SBIconListView columnAtPoint:metrics:fractionOfDistanceThroughColumn:]
  -[SBIconListView _allIconsVisibleColumnOrRowRange]
  -[SBIconListView numberOfDisplayedIconViews]
  -[SBIconListView _leadingSpacingForWidgetIntroductionPopoverView]
  -[SBIconListView updateReversedLayoutBasedOnOrientation]
  -[SBIconListView performSpecialIconAnimationsWithCompletionHandler:]
  -[SBIconListView setVisibleRowRange:]
  -[SBIconListView fadeInIconView:]
  -[SBIconListView continuousCornerRadiusForGridSizeClass:]
  -[SBIconListView originForIconAtCoordinate:metrics:options:]
  -[SBIconListView isOccluded]
  -[SBIconListView setIconContentScale:]
  -[SBIconListView iconImageInfoForGridSizeClass:]
  -[SBIconListView _updateVisibleIconViewsWithOldVisibleGridCellIndexes:metrics:]
  -[SBIconListView iconIndexForCoordinate:metrics:]
  -[SBIconListView ignoreNextWindowChange]
  -[SBIconListView alignsIconsOnPixelBoundaries]
  -[SBIconListView setIconViewConfigurationOptions:]
  -[SBIconListView rectForDefaultSizedCellAtCoordinate:metrics:]
  -[SBIconListView iconSpacing]
  -[SBIconListView willMoveToWindow:]
  -[SBIconListView _captureOnlyBackgroundAssertionDidInvalidate:]
  -[SBIconListView bringWidgetIntroductionPopoverToFront]
  -[SBIconListView horizontalIconPadding]
  -[SBIconListView setLayoutReversed:]
  -[SBIconListView stopAnimatingPronouncedContainerAndPopoverView]
  -[SBIconListView gridSizeForCurrentOrientation]
  -[SBIconListView alignmentIconSize]
  -[SBIconListView rectForDefaultSizedCellsOfSizeClass:startingAtCoordinate:metrics:]
  -[SBIconListView currentIconLocationTransitionHandler]
  -[SBIconListView gridRangeForIconAtIndex:]
  -[SBIconListView setPausesIconsForScrolling:]
  -[SBIconListView horizontalBumpForColumn:metrics:]
  -[SBIconListView widgetIntroductionDelegate]
  -[SBIconListView removePronouncedContainerView]
  -[SBIconListView gridCellInfo]
  -[SBIconListView originForIcon:]
  -[SBIconListView rectForCellAtIconCoordinate:metrics:options:]
  -[SBIconListView isShowingAllIcons]
  -[SBIconListView automaticallyAdjustsLayoutMetricsToFit]
  -[SBIconListView _teardownLayoutRunloopObserverIfNeeded]
  -[SBIconListView gridCellInfoOptions]
  -[SBIconListView iconRowsForSpacingCalculation]
  -[SBIconListView iconViewProvider]
  -[SBIconListView isDock]
  -[SBIconListView setPredictedVisibleRow:]
  -[SBIconListView setPredictedVisibleColumn:]
  -[SBIconListView requireAllIconsShownForReason:]
  -[SBIconListView setPronouncedContainerView:]
  -[SBIconListView setWidgetIntroductionPopoverTopAnchorConstraint:]
  -[SBIconListView centerForIconCoordinate:metrics:]
  -[SBIconListView layoutOrientation]
  -[SBIconListView layoutIconsIfNeededWithAnimationType:options:]
  -[SBIconListView setDragSpringloadingEnabled:]
  -[SBIconListView setAutomaticallyAdjustsLayoutMetricsToFit:]
  -[SBIconListView additionalLayoutInsets]
  -[SBIconListView setAlignsIconsOnPixelBoundaries:]
  -[SBIconListView setAlphaForAllIcons:]
  -[SBIconListView boundsSizeTracksContentSize]
  -[SBIconListView willRotateWithTransitionCoordinator:]
  -[SBIconListView rectForDefaultSizedCellsOfSize:startingAtCoordinate:metrics:]
  -[SBIconListView icons]
  -[SBIconListView layoutIconsIfNeededUsingAnimator:options:]
  -[SBIconListView isLayoutPausedForIconView:]
  -[SBIconListView _coordinateAfterCoordinate:rows:columns:metrics:]
  -[SBIconListView iconAtPoint:index:]
  -[SBIconListView coordinateForIcon:]
  -[SBIconListView removeLayoutObserver:]
  -[SBIconListView setIconSpacing:]
  -[SBIconListView dragHitRegionForPoint:icon:]
  -[SBIconListView startAnimatingPronouncedContainerAndPopoverView]
  -[SBIconListView addDragObserver:forDropSession:]
  -[SBIconListView rectForIcon:]
  -[SBIconListView iconContentScale]
  -[SBIconListView setUserInterfaceLayoutDirectionHandling:]
  -[SBIconListView adjustsColumnPositionsForFullScreenWidth]
  -[SBIconListView isWidgetIntroductionVertical]
  -[SBIconListView addIconViewConfigurationOption:]
  -[SBIconListView setBoundsSizeTracksContentSize:]
  -[SBIconListView layoutInsetsMode]
  -[SBIconListView .cxx_destruct]
  -[SBIconListView indexOfIcon:]
  -[SBIconListView isPurged]
  -[SBIconListView hideAllIcons]
  -[SBIconListView setAutomaticallyReversedLayoutOrientations:]
  -[SBIconListView _insertCaptureOnlyBackgroundViewForInsertingIconViewIfNecessary:]
  -[SBIconListView indexForCoordinate:forOrientation:]
  -[SBIconListView coordinateAtPoint:]
  -[SBIconListView iconsNeedLayout]
  -[SBIconListView visibleIcons]
  -[SBIconListView containsWidget]
  -[SBIconListView bestIndexForInsertingIcon:atCoordinate:]
  -[SBIconListView allowsAddingIconCount:]
  -[SBIconListView visibleIconIndexes]
  -[SBIconListView isRTL]
  -[SBIconListView _setupLayoutRunLoopObserver]
  -[SBIconListView originForIconAtCoordinate:]
  -[SBIconListView rectForIconCoordinate:metrics:]
  -[SBIconListView iconList:didRemoveIcon:]
  -[SBIconListView setIconsNeedLayout]
  -[SBIconListView layoutMetrics]
  -[SBIconListView _cleanupIconViewsForRemovedIcons:]
  -[SBIconListView addPronouncedContainerViewWithDelegate:vertical:]
  -[SBIconListView layoutIconsNow]
  -[SBIconListView setOccluded:]
  -[SBIconListView rowForIcon:]
  -[SBIconListView maximumIconCount]
  -[SBIconListView layoutAndCreateIcon:atIndex:]
  -[SBIconListView dequeueReusableIconView]
  -[SBIconListView iconRowsForCurrentOrientation]
  -[SBIconListView setVisiblySettled:]
  -[SBIconListView fractionalCoordinateAtPoint:]
  -[SBIconListView pauseLayout:forIconView:withReason:]
  -[SBIconListView pronouncedContainerView]
  -[SBIconListView verticalIconPadding]
  -[SBIconListView isDisplayingWidgetIntroduction]
  -[SBIconListView getIconStartGridCellIndex:gridSize:forGridCellIndex:metrics:]
  -[SBIconListView performSpecialIconAnimation:icon:completionHandler:]
  -[SBIconListView iconImageCache]
  -[SBIconListView performDefaultAnimatedLayoutUpdateForIconView:withParameters:]
  -[SBIconListView layoutProvider]
  -[SBIconListView pausesIconsForScrolling]
  -[SBIconListView _iconMatchingCoordinateBeginsInThatRow:metrics:]
  -[SBIconListView layoutFocusGuides]
  -[SBIconListView visibleGridCellIndexes]
  -[SBIconListView columnAtPoint:]
  -[SBIconListView updateEditingStateAnimated:]
  -[SBIconListView centerForIconAtIndex:]
  -[SBIconListView setFrame:]
  -[SBIconListView alignmentIconViewSize]
  -[SBIconListView _removeIconViewsForIcons:]
  -[SBIconListView _alignedIconPointForPoint:]
  -[SBIconListView performDefaultAnimatedRemovalForIconViews:completionHandler:]
  -[SBIconListView widgetIntroductionPopover]
  -[SBIconListView layoutDelegate]
  -[SBIconListView shouldReparentView:]
  -[SBIconListView setLayoutInsetsMode:]
  -[SBIconListView effectiveIconSpacing]
  -[SBIconListView layoutSubviews]
  -[SBIconListView iconList:didMoveIcon:]
  -[SBIconListView iconGridRangeForIndex:metrics:]
  -[SBIconListView showAllIcons]
  -[SBIconListView iconImageSizeForGridSizeClass:]
  -[SBIconListView enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBIconListView succinctDescriptionBuilder]
  -[SBIconListView setLegibilitySettings:]
  -[SBIconListView iconLocation]
  -[SBIconListView setIconImageCache:]
  -[SBIconListView descriptionBuilderWithMultilinePrefix:]
  -[SBIconListView iconList:didAddIcon:]
  -[SBIconListView contentVisibility]
  -[SBIconListView descriptionWithMultilinePrefix:]
  -[SBIconListView sizeThatFits:]
  -[SBIconListView succinctDescription]
  -[SBIconListView setFolderIconImageCache:]
  -[SBIconListView setEditing:]
  -[SBIconListView isDisplayingIconView:inLocation:]
  -[SBIconListView firstIconViewForIcon:inLocations:]
  -[SBIconListView userInterfaceLayoutDirectionHandling]
  -[SBIconListView orientation]
  -[SBIconListView setWantsFastIconReordering:]
  -[SBIconListView model]
  -[SBIconListView addsFocusGuidesForWrapping]
  -[SBIconListView isDisplayingIcon:inLocations:]
  -[SBIconListView isEditing]
  -[SBIconListView isDisplayingIconView:]
  -[SBIconListView didMoveToWindow]
  -[SBIconListView settings:changedValueForKey:]
  -[SBIconListView setModel:]
  -[SBIconListView firstIconViewForIcon:]
  -[SBIconListView userInterfaceLayoutDirection]
  -[SBIconListView dealloc]
  -[SBIconListView enumerateDisplayedIconViewsUsingBlock:]
  -[SBIconListView setBounds:]
  -[SBIconListView isDisplayingIcon:inLocation:]
  -[SBIconListView setContentVisibility:]
  -[SBIconListView intrinsicContentSize]
  -[SBIconListView isDisplayingIcon:]
  -[SBIconListView layout]
  -[SBIconListView legibilitySettings]


SBIconListRotationIconViewProvider : NSObject <SBIconViewProviding>
 @property  SBIconListView *listView

  // instance methods
  -[SBIconListRotationIconViewProvider configureIconView:forIcon:]
  -[SBIconListRotationIconViewProvider .cxx_destruct]
  -[SBIconListRotationIconViewProvider isIconViewRecycled:]
  -[SBIconListRotationIconViewProvider dequeueReusableIconViewOfClass:]
  -[SBIconListRotationIconViewProvider listView]
  -[SBIconListRotationIconViewProvider recycleIconView:]
  -[SBIconListRotationIconViewProvider initWithListView:]


SBIconListViewIconLocationTransitionHandler : NSObject <SBIconListViewIconLocationTransitioning, BSDescriptionProviding>
 @property  NSString *iconLocation
 @property  NSString *reason
 @property  SBIconListView *iconListView
 @property  double progress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewIconLocationTransitionHandler completeTransition:]
  -[SBIconListViewIconLocationTransitionHandler .cxx_destruct]
  -[SBIconListViewIconLocationTransitionHandler succinctDescriptionBuilder]
  -[SBIconListViewIconLocationTransitionHandler progress]
  -[SBIconListViewIconLocationTransitionHandler iconLocation]
  -[SBIconListViewIconLocationTransitionHandler descriptionBuilderWithMultilinePrefix:]
  -[SBIconListViewIconLocationTransitionHandler iconListView]
  -[SBIconListViewIconLocationTransitionHandler descriptionWithMultilinePrefix:]
  -[SBIconListViewIconLocationTransitionHandler succinctDescription]
  -[SBIconListViewIconLocationTransitionHandler reason]
  -[SBIconListViewIconLocationTransitionHandler setProgress:]
  -[SBIconListViewIconLocationTransitionHandler initWithIconLocation:reason:iconListView:]


SBIconListViewIconVisibilityAssertion : NSObject <BSInvalidatable, BSDescriptionProviding>
 @property  BOOL invalidated
 @property  NSString *reason
 @property  SBIconListView *listView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewIconVisibilityAssertion isInvalidated]
  -[SBIconListViewIconVisibilityAssertion .cxx_destruct]
  -[SBIconListViewIconVisibilityAssertion succinctDescriptionBuilder]
  -[SBIconListViewIconVisibilityAssertion descriptionBuilderWithMultilinePrefix:]
  -[SBIconListViewIconVisibilityAssertion setInvalidated:]
  -[SBIconListViewIconVisibilityAssertion descriptionWithMultilinePrefix:]
  -[SBIconListViewIconVisibilityAssertion succinctDescription]
  -[SBIconListViewIconVisibilityAssertion reason]
  -[SBIconListViewIconVisibilityAssertion listView]
  -[SBIconListViewIconVisibilityAssertion dealloc]
  -[SBIconListViewIconVisibilityAssertion invalidate]
  -[SBIconListViewIconVisibilityAssertion initWithListView:reason:]


SBIconListViewCaptureOnlyBackgroundAssertion : NSObject <BSInvalidatable>
 @property  SBIcon *icon
 @property  NSString *groupName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewCaptureOnlyBackgroundAssertion icon]
  -[SBIconListViewCaptureOnlyBackgroundAssertion .cxx_destruct]
  -[SBIconListViewCaptureOnlyBackgroundAssertion groupName]
  -[SBIconListViewCaptureOnlyBackgroundAssertion invalidate]
  -[SBIconListViewCaptureOnlyBackgroundAssertion initWithIcon:groupName:invalidation:]


SBHFocusMode : NSObject <SBFolderObserver>
 @property  SBFolder *folder
 @property  NSString *identifier
 @property  NSString *symbol
 @property  BOOL customizedHomeScreenPagesEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHFocusMode setFolder:]
  -[SBHFocusMode .cxx_destruct]
  -[SBHFocusMode symbol]
  -[SBHFocusMode identifier]
  -[SBHFocusMode folder]
  -[SBHFocusMode setSymbol:]
  -[SBHFocusMode folder:didAddList:]
  -[SBHFocusMode wantsListVisible:]
  -[SBHFocusMode customizedHomeScreenPagesEnabled]
  -[SBHFocusMode addToList:]
  -[SBHFocusMode initWithIdentifier:folder:]
  -[SBHFocusMode removeFromList:]


SBHFolderSettings : PTSettings
 @property  BOOL allowNestedFolders
 @property  BOOL pinchToClose
 @property  double minPinchScale
 @property  BOOL animatesPageScrubbing

  // class methods
  +[SBHFolderSettings settingsControllerModule]

  // instance methods
  -[SBHFolderSettings pinchToClose]
  -[SBHFolderSettings setDefaultValues]
  -[SBHFolderSettings setPinchToClose:]
  -[SBHFolderSettings setAnimatesPageScrubbing:]
  -[SBHFolderSettings animatesPageScrubbing]
  -[SBHFolderSettings setMinPinchScale:]
  -[SBHFolderSettings setAllowNestedFolders:]
  -[SBHFolderSettings allowNestedFolders]
  -[SBHFolderSettings minPinchScale]


SBHSiriSuggestionsElement : SBHCustomIconElement
  // class methods
  +[SBHSiriSuggestionsElement elementIdentifier]

  // instance methods
  -[SBHSiriSuggestionsElement supportedGridSizeClassesForIcon:]
  -[SBHSiriSuggestionsElement displayName]
  -[SBHSiriSuggestionsElement icon:imageWithInfo:]


SBHWidgetAddSheetTransitionContext : NSObject <UIViewControllerTransitioningDelegate>
 @property  SBHAddWidgetSheetGalleryCollectionViewCell *sourceCell
 @property  SBHWidgetAddSheetAnimationController *animationController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHWidgetAddSheetTransitionContext animationControllerForPresentedController:presentingController:sourceController:]
  -[SBHWidgetAddSheetTransitionContext animationController]
  -[SBHWidgetAddSheetTransitionContext .cxx_destruct]
  -[SBHWidgetAddSheetTransitionContext setAnimationController:]
  -[SBHWidgetAddSheetTransitionContext sourceCell]
  -[SBHWidgetAddSheetTransitionContext initWithSourceCell:]
  -[SBHWidgetAddSheetTransitionContext interruptAnimation]
  -[SBHWidgetAddSheetTransitionContext setSourceCell:]


SBHWidgetAddSheetAnimationController : _UISheetAnimationController
 @property  SBHAddWidgetSheetGalleryCollectionViewCell *sourceCell
 @property  SBHPortaledShadowedWidgetView *portaledShadowedWidgetView
 @property  {CGPoint=dd} fromPoint
 @property  UIView *matchMoveView

  // instance methods
  -[SBHWidgetAddSheetAnimationController setMatchMoveView:]
  -[SBHWidgetAddSheetAnimationController .cxx_destruct]
  -[SBHWidgetAddSheetAnimationController animateTransition:]
  -[SBHWidgetAddSheetAnimationController interruptibleAnimatorForTransition:]
  -[SBHWidgetAddSheetAnimationController portaledShadowedWidgetView]
  -[SBHWidgetAddSheetAnimationController sourceCell]
  -[SBHWidgetAddSheetAnimationController initWithSourceCell:]
  -[SBHWidgetAddSheetAnimationController interruptAnimation]
  -[SBHWidgetAddSheetAnimationController setSourceCell:]
  -[SBHWidgetAddSheetAnimationController fromPoint]
  -[SBHWidgetAddSheetAnimationController setFromPoint:]
  -[SBHWidgetAddSheetAnimationController setPortaledShadowedWidgetView:]
  -[SBHWidgetAddSheetAnimationController matchMoveView]


SBHAppLibrarySettings : PTSettings
 @property  unsigned long minimumNumberOfIconsToShowSectionHeaderInDeweySearch
 @property  double criticalDismissalThresholdDurationFactor
 @property  double minimumVelocityForSwipeToDismiss
 @property  double minimumTranslationFractionForSwipeToDismiss

  // class methods
  +[SBHAppLibrarySettings settingsControllerModule]

  // instance methods
  -[SBHAppLibrarySettings setCriticalDismissalThresholdDurationFactor:]
  -[SBHAppLibrarySettings setMinimumTranslationFractionForSwipeToDismiss:]
  -[SBHAppLibrarySettings setDefaultValues]
  -[SBHAppLibrarySettings minimumVelocityForSwipeToDismiss]
  -[SBHAppLibrarySettings criticalDismissalThresholdDurationFactor]
  -[SBHAppLibrarySettings minimumTranslationFractionForSwipeToDismiss]
  -[SBHAppLibrarySettings minimumNumberOfIconsToShowSectionHeaderInDeweySearch]
  -[SBHAppLibrarySettings setMinimumVelocityForSwipeToDismiss:]
  -[SBHAppLibrarySettings setMinimumNumberOfIconsToShowSectionHeaderInDeweySearch:]


SBHBookmark : NSObject <SBLeafIconDataSource>
 @property  UIWebClip *webClip
 @property  CPSWebClip *appClip
 @property  BOOL isAppClip
 @property  BOOL isShortcutsWebClip
 @property  BOOL isSingleStepShortcutWebClip
 @property  NSString *identifier
 @property  NSURL *launchURL
 @property  NSString *uniqueIdentifier
 @property  NSString *configurationStorageIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHBookmark iconCompleteUninstall:]
  -[SBHBookmark supportedGridSizeClassesForIcon:]
  -[SBHBookmark canGenerateIconsInBackgroundForIcon:]
  -[SBHBookmark launchURL]
  -[SBHBookmark icon:displayNameForLocation:]
  -[SBHBookmark uniqueIdentifier]
  -[SBHBookmark icon:unmaskedImageWithInfo:]
  -[SBHBookmark icon:imageWithInfo:]
  -[SBHBookmark priorityForIcon:]
  -[SBHBookmark isAppClip]
  -[SBHBookmark .cxx_destruct]
  -[SBHBookmark appClip]
  -[SBHBookmark iconSupportsUninstall:]
  -[SBHBookmark webClip]
  -[SBHBookmark identifier]
  -[SBHBookmark isUninstallSupported]
  -[SBHBookmark dealloc]
  -[SBHBookmark iTunesCategoriesOrderedByRelevancyForIcon:]
  -[SBHBookmark folderFallbackTitleForIcon:]
  -[SBHBookmark folderTitleOptionsForIcon:]
  -[SBHBookmark _deviceUnlockedForFirstTime:]
  -[SBHBookmark isShortcutsWebClip]
  -[SBHBookmark _cleanupAppClipIfNecessary]
  -[SBHBookmark initWithWebClip:]
  -[SBHBookmark isSingleStepShortcutWebClip]


SBIconListViewDefaultAnimator : NSObject <SBIconListLayoutAnimating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewDefaultAnimator .cxx_destruct]
  -[SBIconListViewDefaultAnimator init]
  -[SBIconListViewDefaultAnimator iconListView:wantsAnimatedRemovalForIconViews:completionHandler:]
  -[SBIconListViewDefaultAnimator iconListView:wantsAnimatedLayoutForIconView:withParameters:alongsideAnimationBlock:]


SBHVisualStylingView : UIView
  // class methods
  +[SBHVisualStylingView visualStyleSetNameForUserInterfaceStyle:]

  // instance methods
  -[SBHVisualStylingView traitCollectionDidChange:]
  -[SBHVisualStylingView didMoveToSuperview]
  -[SBHVisualStylingView _updateVisualStyling]
  -[SBHVisualStylingView didMoveToWindow]


SBIconListFlowLayout : SBIconListGridLayout

SBIconBadgeView : UIView <PTSettingsKeyObserver, SBIconAccessoryView>
 @property  NSString *text
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBFParallaxSettings *parallaxSettings
 @property  <SBIconListLayout> *listLayout
 @property  UITapGestureRecognizer *actionTapGestureRecognizer

  // class methods
  +[SBIconBadgeView _checkoutImageForText:font:highlighted:]
  +[SBIconBadgeView _createImageForText:font:highlighted:]
  +[SBIconBadgeView backgroundImageCache]
  +[SBIconBadgeView _textPadding]
  +[SBIconBadgeView badgeBackgroundColor]

  // instance methods
  -[SBIconBadgeView _resizeForTextImage:]
  -[SBIconBadgeView parallaxSettings]
  -[SBIconBadgeView setAccessoryBrightness:]
  -[SBIconBadgeView _clearText]
  -[SBIconBadgeView intrinsicContentSizeForTextImage:]
  -[SBIconBadgeView setListLayout:]
  -[SBIconBadgeView .cxx_destruct]
  -[SBIconBadgeView layoutSubviews]
  -[SBIconBadgeView listLayout]
  -[SBIconBadgeView _zoomInWithTextImage:animator:]
  -[SBIconBadgeView _applyParallaxSettings]
  -[SBIconBadgeView configureAnimatedForIcon:infoProvider:animator:]
  -[SBIconBadgeView init]
  -[SBIconBadgeView sizeThatFits:]
  -[SBIconBadgeView font]
  -[SBIconBadgeView prepareForReuse]
  -[SBIconBadgeView setParallaxSettings:]
  -[SBIconBadgeView badgeSize]
  -[SBIconBadgeView displayingAccessory]
  -[SBIconBadgeView _zoomOutWithAnimator:]
  -[SBIconBadgeView layoutOffset]
  -[SBIconBadgeView _checkoutBackgroundImageTuple]
  -[SBIconBadgeView settings:changedValueForKey:]
  -[SBIconBadgeView dealloc]
  -[SBIconBadgeView _layOutTextImageView:]
  -[SBIconBadgeView _configureAnimatedForText:highlighted:animator:]
  -[SBIconBadgeView accessoryCenterForIconBounds:]
  -[SBIconBadgeView text]
  -[SBIconBadgeView configureForIcon:infoProvider:]
  -[SBIconBadgeView badgeContentScale]
  -[SBIconBadgeView intrinsicContentSize]
  -[SBIconBadgeView _crossfadeToTextImage:animator:]


SBHStackConfigurationBackgroundDimmingView : UIView
 @property  SBIconListView *iconListView

  // instance methods
  -[SBHStackConfigurationBackgroundDimmingView hitTest:withEvent:]
  -[SBHStackConfigurationBackgroundDimmingView .cxx_destruct]
  -[SBHStackConfigurationBackgroundDimmingView iconListView]
  -[SBHStackConfigurationBackgroundDimmingView setIconListView:]


SBHWidgetStackDescriptor : NSObject <SBHAddWidgetSheetGalleryItem>
 @property  NSArray *smallStackDescriptors
 @property  NSArray *mediumStackDescriptors
 @property  NSArray *largeStackDescriptors
 @property  NSArray *extraLargeStackDescriptors
 @property  NSString *sbh_galleryItemIdentifier
 @property  NSString *sbh_appName
 @property  NSString *sbh_widgetName
 @property  unsigned long sbh_supportedSizeClasses
 @property  NSString *sbh_widgetDescription
 @property  BOOL sbh_canBeAddedToStack
 @property  UIColor *backgroundColor
 @property  UIColor *accentColor
 @property  UIColor *mostInterestingColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHWidgetStackDescriptor backgroundColor]
  -[SBHWidgetStackDescriptor .cxx_destruct]
  -[SBHWidgetStackDescriptor isEqual:]
  -[SBHWidgetStackDescriptor sbh_canBeAddedToStack]
  -[SBHWidgetStackDescriptor accentColor]
  -[SBHWidgetStackDescriptor sbh_supportedSizeClasses]
  -[SBHWidgetStackDescriptor sbh_widgetName]
  -[SBHWidgetStackDescriptor sbh_widgetDescription]
  -[SBHWidgetStackDescriptor mostInterestingColor]
  -[SBHWidgetStackDescriptor sbh_galleryItemIdentifier]
  -[SBHWidgetStackDescriptor initWithSmallStackDescriptors:mediumStackDescriptors:largeStackDescriptors:extraLargeStackDescriptors:]
  -[SBHWidgetStackDescriptor descriptorsForSizeClass:]
  -[SBHWidgetStackDescriptor sbh_appName]
  -[SBHWidgetStackDescriptor smallStackDescriptors]
  -[SBHWidgetStackDescriptor setSmallStackDescriptors:]
  -[SBHWidgetStackDescriptor mediumStackDescriptors]
  -[SBHWidgetStackDescriptor setMediumStackDescriptors:]
  -[SBHWidgetStackDescriptor largeStackDescriptors]
  -[SBHWidgetStackDescriptor setLargeStackDescriptors:]
  -[SBHWidgetStackDescriptor extraLargeStackDescriptors]
  -[SBHWidgetStackDescriptor setExtraLargeStackDescriptors:]


SBHStackConfigurationApertureAnimator : NSObject <SBHViewControllerTransitionAnimating>
 @property  SBHWidgetSettings *widgetSettings
 @property  BOOL alreadyAnimating
 @property  NSSet *innerWidgetBackgroundViews

  // instance methods
  -[SBHStackConfigurationApertureAnimator widgetSettings]
  -[SBHStackConfigurationApertureAnimator .cxx_destruct]
  -[SBHStackConfigurationApertureAnimator init]
  -[SBHStackConfigurationApertureAnimator finalizeAnimationAtEndpoint:withContext:]
  -[SBHStackConfigurationApertureAnimator prepareToAnimateFromEndpoint:withContext:]
  -[SBHStackConfigurationApertureAnimator animateToEndpoint:withContext:completion:]
  -[SBHStackConfigurationApertureAnimator isAlreadyAnimating]
  -[SBHStackConfigurationApertureAnimator setAlreadyAnimating:]
  -[SBHStackConfigurationApertureAnimator _setupMatchMoveAnimationWithSourceView:targetView:]
  -[SBHStackConfigurationApertureAnimator _configureForEndpoint:scroll:withCoordinator:]
  -[SBHStackConfigurationApertureAnimator _configureApertureBackgroundViewsForEndpoint:withCoordinator:]
  -[SBHStackConfigurationApertureAnimator _configureWidgetStackMatchingBackgroundViewForEndpoint:withCoordinator:]
  -[SBHStackConfigurationApertureAnimator setInnerWidgetBackgroundViews:]
  -[SBHStackConfigurationApertureAnimator _configureInnerWidgetBackgroundViewsForEndpoint:withCoordinator:]
  -[SBHStackConfigurationApertureAnimator _shouldUseCenterZoomTransitionForCoordinator:]
  -[SBHStackConfigurationApertureAnimator innerWidgetBackgroundViews]
  -[SBHStackConfigurationApertureAnimator _removeMatchMoveAnimationFromTargetView:]


SBHomeScreenButton : UIButton
 @property  UIView *backgroundView
 @property  UIImage *defaultContentImage
 @property  {UIEdgeInsets=dddd} backgroundInsets
 @property  SBHomeScreenMaterialView *materialView

  // instance methods
  -[SBHomeScreenButton setHighlighted:]
  -[SBHomeScreenButton defaultContentImage]
  -[SBHomeScreenButton .cxx_destruct]
  -[SBHomeScreenButton layoutSubviews]
  -[SBHomeScreenButton materialView]
  -[SBHomeScreenButton _shouldAnimatePropertyWithKey:]
  -[SBHomeScreenButton initWithFrame:]
  -[SBHomeScreenButton setBackgroundView:]
  -[SBHomeScreenButton backgroundInsets]
  -[SBHomeScreenButton setEnabled:]
  -[SBHomeScreenButton initWithFrame:backgroundView:]
  -[SBHomeScreenButton backgroundView]


SBCloseBoxView : SBHomeScreenButton <UIPointerInteractionDelegate>
 @property  UITapGestureRecognizer *actionTapGestureRecognizer
 @property  <SBCloseBoxViewDelegate> *delegate
 @property  <SBIconListLayout> *listLayout
 @property  {UIEdgeInsets=dddd} hitTestPadding
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBCloseBoxView pointerInteraction:styleForRegion:]
  -[SBCloseBoxView setListLayout:]
  -[SBCloseBoxView .cxx_destruct]
  -[SBCloseBoxView listLayout]
  -[SBCloseBoxView hitTestPadding]
  -[SBCloseBoxView setDelegate:]
  -[SBCloseBoxView sizeThatFits:]
  -[SBCloseBoxView shouldTrack]
  -[SBCloseBoxView pointInside:withEvent:]
  -[SBCloseBoxView delegate]
  -[SBCloseBoxView backgroundInsets]
  -[SBCloseBoxView pointerInteraction:regionForRequest:defaultRegion:]
  -[SBCloseBoxView setActionTapGestureRecognizer:]
  -[SBCloseBoxView actionTapGestureRecognizer]


SBXCloseBoxView : SBCloseBoxView
  // instance methods
  -[SBXCloseBoxView defaultContentImage]


SBMinusCloseBoxView : SBCloseBoxView
  // instance methods
  -[SBMinusCloseBoxView defaultContentImage]


SBIconContinuityAccessoryView : UIView <SBIconAccessoryView>
 @property  SBDarkeningImageView *backgroundView
 @property  SBHomeScreenMaterialView *foregroundView
 @property  long long badgeType
 @property  SBFParallaxSettings *parallaxSettings
 @property  <SBIconListLayout> *listLayout
 @property  UITapGestureRecognizer *actionTapGestureRecognizer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconContinuityAccessoryView _imageForContinuityBadgeType:highlighted:]

  // instance methods
  -[SBIconContinuityAccessoryView setLegibilityStyle:]
  -[SBIconContinuityAccessoryView setAccessoryBrightness:]
  -[SBIconContinuityAccessoryView badgeType]
  -[SBIconContinuityAccessoryView setListLayout:]
  -[SBIconContinuityAccessoryView .cxx_destruct]
  -[SBIconContinuityAccessoryView layoutSubviews]
  -[SBIconContinuityAccessoryView listLayout]
  -[SBIconContinuityAccessoryView configureAnimatedForIcon:infoProvider:animator:]
  -[SBIconContinuityAccessoryView init]
  -[SBIconContinuityAccessoryView foregroundView]
  -[SBIconContinuityAccessoryView sizeThatFits:]
  -[SBIconContinuityAccessoryView prepareForReuse]
  -[SBIconContinuityAccessoryView badgeSize]
  -[SBIconContinuityAccessoryView displayingAccessory]
  -[SBIconContinuityAccessoryView layoutOffset]
  -[SBIconContinuityAccessoryView accessoryCenterForIconBounds:]
  -[SBIconContinuityAccessoryView configureForIcon:infoProvider:]
  -[SBIconContinuityAccessoryView badgeContentScale]
  -[SBIconContinuityAccessoryView intrinsicContentSize]
  -[SBIconContinuityAccessoryView backgroundView]


SBHShortcutsFolderElement : SBHCustomIconElement
  // class methods
  +[SBHShortcutsFolderElement elementIdentifier]

  // instance methods
  -[SBHShortcutsFolderElement supportedGridSizeClassesForIcon:]
  -[SBHShortcutsFolderElement displayName]
  -[SBHShortcutsFolderElement icon:imageWithInfo:]
  -[SBHShortcutsFolderElement containerBundleIdentifier]
  -[SBHShortcutsFolderElement iconSupportsConfiguration:]
  -[SBHShortcutsFolderElement configurationStorageIdentifier]


SBHWidgetConfigurationFadeAnimator : NSObject <SBHViewControllerTransitionAnimating>
 @property  BSAnimationSettings *animationSettings
 @property  BOOL alreadyAnimating

  // instance methods
  -[SBHWidgetConfigurationFadeAnimator animationSettings]
  -[SBHWidgetConfigurationFadeAnimator .cxx_destruct]
  -[SBHWidgetConfigurationFadeAnimator init]
  -[SBHWidgetConfigurationFadeAnimator finalizeAnimationAtEndpoint:withContext:]
  -[SBHWidgetConfigurationFadeAnimator prepareToAnimateFromEndpoint:withContext:]
  -[SBHWidgetConfigurationFadeAnimator animateToEndpoint:withContext:completion:]
  -[SBHWidgetConfigurationFadeAnimator _configureForEndpoint:context:]
  -[SBHWidgetConfigurationFadeAnimator isAlreadyAnimating]
  -[SBHWidgetConfigurationFadeAnimator setAlreadyAnimating:]


SBHApplicationWidgetCollection : NSObject <BSDescriptionProviding>
 @property  NSString *displayName
 @property  SBLeafIcon *icon
 @property  NSArray *avocadoDescriptors
 @property  NSString *vendorName
 @property  NSString *collectionIdentifier
 @property  NSString *containerName
 @property  NSString *iconImageApplicationBundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHApplicationWidgetCollection vendorName]
  -[SBHApplicationWidgetCollection collectionIdentifier]
  -[SBHApplicationWidgetCollection displayName]
  -[SBHApplicationWidgetCollection icon]
  -[SBHApplicationWidgetCollection .cxx_destruct]
  -[SBHApplicationWidgetCollection succinctDescriptionBuilder]
  -[SBHApplicationWidgetCollection descriptionBuilderWithMultilinePrefix:]
  -[SBHApplicationWidgetCollection descriptionWithMultilinePrefix:]
  -[SBHApplicationWidgetCollection succinctDescription]
  -[SBHApplicationWidgetCollection containerName]
  -[SBHApplicationWidgetCollection setContainerName:]
  -[SBHApplicationWidgetCollection avocadoDescriptors]
  -[SBHApplicationWidgetCollection setAvocadoDescriptors:]
  -[SBHApplicationWidgetCollection iconImageApplicationBundleIdentifier]
  -[SBHApplicationWidgetCollection initWithIcon:galleryItems:vendorName:]
  -[SBHApplicationWidgetCollection setIconImageApplicationBundleIdentifier:]


SBHWidgetWrapperViewController : UIViewController <SBIconViewObserver, SBIconViewActionDelegate>
 @property  BOOL titleAndSubtitleVisible
 @property  SBIconView *iconView
 @property  BOOL dragging
 @property  @? defaultBackgroundViewProvider
 @property  @? defaultBackgroundViewConfigurator
 @property  {CGAffineTransform=dddddd} contentTransform
 @property  {CGSize=dd} contentSize
 @property  {CGAffineTransform=dddddd} shadowTransform
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  <SBIconViewProviding> *iconViewProvider
 @property  <SBHAddWidgetSheetGalleryItem> *galleryItem
 @property  NSArray *supportedSizeClasses
 @property  SBHWidgetWrapperView *wrapperView
 @property  unsigned long indexOfSelectedSizeClass
 @property  long long selectedSizeClass
 @property  BOOL forcesEdgeAntialiasing
 @property  <SBHWidgetWrapperViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHWidgetWrapperViewController iconTouchBegan:]
  -[SBHWidgetWrapperViewController wrapperView]
  -[SBHWidgetWrapperViewController setDragging:]
  -[SBHWidgetWrapperViewController forcesEdgeAntialiasing]
  -[SBHWidgetWrapperViewController contentSize]
  -[SBHWidgetWrapperViewController traitCollectionDidChange:]
  -[SBHWidgetWrapperViewController iconViewWillBeginDrag:]
  -[SBHWidgetWrapperViewController iconViewProvider]
  -[SBHWidgetWrapperViewController .cxx_destruct]
  -[SBHWidgetWrapperViewController supportedSizeClasses]
  -[SBHWidgetWrapperViewController setDelegate:]
  -[SBHWidgetWrapperViewController isDragging]
  -[SBHWidgetWrapperViewController iconViewDidEndDrag:]
  -[SBHWidgetWrapperViewController delegate]
  -[SBHWidgetWrapperViewController setForcesEdgeAntialiasing:]
  -[SBHWidgetWrapperViewController setContentTransform:]
  -[SBHWidgetWrapperViewController dealloc]
  -[SBHWidgetWrapperViewController listLayoutProvider]
  -[SBHWidgetWrapperViewController loadView]
  -[SBHWidgetWrapperViewController iconView]
  -[SBHWidgetWrapperViewController contentTransform]
  -[SBHWidgetWrapperViewController setContentSize:]
  -[SBHWidgetWrapperViewController iconView:didChangeCustomImageViewController:]
  -[SBHWidgetWrapperViewController initWithGalleryItem:titleAndSubtitleVisible:listLayoutProvider:iconViewProvider:]
  -[SBHWidgetWrapperViewController setSelectedSizeClass:]
  -[SBHWidgetWrapperViewController galleryItem]
  -[SBHWidgetWrapperViewController selectedSizeClass]
  -[SBHWidgetWrapperViewController titleAndSubtitleVisible]
  -[SBHWidgetWrapperViewController _updateAvocadoHostViewController]
  -[SBHWidgetWrapperViewController _removeIconViewKeepObserving:]
  -[SBHWidgetWrapperViewController setIndexOfSelectedSizeClass:]
  -[SBHWidgetWrapperViewController _widgetDragHandler]
  -[SBHWidgetWrapperViewController _configureCustomImageViewController:]
  -[SBHWidgetWrapperViewController _configureIconView:forIcon:]
  -[SBHWidgetWrapperViewController _widgetBackgroundViewProvider]
  -[SBHWidgetWrapperViewController _widgetBackgroundViewConfigurator]
  -[SBHWidgetWrapperViewController setGalleryItem:]
  -[SBHWidgetWrapperViewController shadowTransform]
  -[SBHWidgetWrapperViewController setShadowTransform:]
  -[SBHWidgetWrapperViewController indexOfSelectedSizeClass]
  -[SBHWidgetWrapperViewController setTitleAndSubtitleVisible:]
  -[SBHWidgetWrapperViewController defaultBackgroundViewProvider]
  -[SBHWidgetWrapperViewController setDefaultBackgroundViewProvider:]
  -[SBHWidgetWrapperViewController defaultBackgroundViewConfigurator]
  -[SBHWidgetWrapperViewController setDefaultBackgroundViewConfigurator:]


SBHScrollableIconViewInteraction : NSObject
 @property  <SBHScrollableIconViewContaining> *container

  // instance methods
  -[SBHScrollableIconViewInteraction initWithContainer:]
  -[SBHScrollableIconViewInteraction container]
  -[SBHScrollableIconViewInteraction .cxx_destruct]
  -[SBHScrollableIconViewInteraction isIconViewTheInteractingTargetIconView:]
  -[SBHScrollableIconViewInteraction _clippingFudgeInset]
  -[SBHScrollableIconViewInteraction handleTargetIconViewClipped:]
  -[SBHScrollableIconViewInteraction updateScrolling:]
  -[SBHScrollableIconViewInteraction clippingScrollViewDidScroll:]
  -[SBHScrollableIconViewInteraction _findInteractingIconView]


SBHScrollableZoomingIconViewInteraction : SBHScrollableIconViewInteraction
 @property  BOOL considersFolderIconTargets

  // instance methods
  -[SBHScrollableZoomingIconViewInteraction setConsidersFolderIconTargets:]
  -[SBHScrollableZoomingIconViewInteraction considersFolderIconTargets]
  -[SBHScrollableZoomingIconViewInteraction isIconViewTheInteractingTargetIconView:]
  -[SBHScrollableZoomingIconViewInteraction _clippingFudgeInset]
  -[SBHScrollableZoomingIconViewInteraction handleTargetIconViewClipped:]


SBHScrollableConfiguringIconViewInteraction : SBHScrollableIconViewInteraction
  // instance methods
  -[SBHScrollableConfiguringIconViewInteraction isIconViewTheInteractingTargetIconView:]
  -[SBHScrollableConfiguringIconViewInteraction handleTargetIconViewClipped:]


SBHPeopleWidgetPersonDetailInteraction : NSObject <SBHViewControllerTransitionDelegate, SBHPeopleWidgetPersonDetailAnimationContext, SBIconViewObserver, PPLPeopleEntityViewControllerDelegate, SBHModalInteraction>
 @property  SBHPeopleWidgetPersonDetailInteractionSettings *settings
 @property  PPLPeopleEntityViewController *personViewController
 @property  UIView *targetView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceContentFrame
 @property  double sourceContentCornerRadius
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} targetContentFrame
 @property  UIView *platterView
 @property  MTMaterialView *backgroundView
 @property  UIView *backgroundTintView
 @property  UIView *touchBlockingView
 @property  SBHViewControllerTransition *transition
 @property  SBHPeopleWidgetPersonDetailInteractionContext *interactionContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *containerView
 @property  UIView *homeScreenContentView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} homeScreenContentFrame
 @property  SBIconView *sourceView
 @property  SBIconView *referenceView
 @property  double targetContentCornerRadius
 @property  <SBHModalInteractionDelegate> *modalInteractionDelegate

  // instance methods
  -[SBHPeopleWidgetPersonDetailInteraction iconViewWasDiscarded:]
  -[SBHPeopleWidgetPersonDetailInteraction iconViewWasRecycled:]
  -[SBHPeopleWidgetPersonDetailInteraction transition]
  -[SBHPeopleWidgetPersonDetailInteraction setTransition:]
  -[SBHPeopleWidgetPersonDetailInteraction setPlatterView:]
  -[SBHPeopleWidgetPersonDetailInteraction referenceView]
  -[SBHPeopleWidgetPersonDetailInteraction targetView]
  -[SBHPeopleWidgetPersonDetailInteraction containerView]
  -[SBHPeopleWidgetPersonDetailInteraction .cxx_destruct]
  -[SBHPeopleWidgetPersonDetailInteraction sourceView]
  -[SBHPeopleWidgetPersonDetailInteraction platterView]
  -[SBHPeopleWidgetPersonDetailInteraction iconViewDidBecomeWindowless:]
  -[SBHPeopleWidgetPersonDetailInteraction setBackgroundView:]
  -[SBHPeopleWidgetPersonDetailInteraction setTargetView:]
  -[SBHPeopleWidgetPersonDetailInteraction settings]
  -[SBHPeopleWidgetPersonDetailInteraction backgroundView]
  -[SBHPeopleWidgetPersonDetailInteraction transitionWillProgressToEndState:]
  -[SBHPeopleWidgetPersonDetailInteraction prepareTransition:]
  -[SBHPeopleWidgetPersonDetailInteraction transitionWillReturnToBeginningState:]
  -[SBHPeopleWidgetPersonDetailInteraction transitionDidProgressToEndState:]
  -[SBHPeopleWidgetPersonDetailInteraction transitionDidReturnToBeginningState:]
  -[SBHPeopleWidgetPersonDetailInteraction animatorForTransition:]
  -[SBHPeopleWidgetPersonDetailInteraction _setUpMatchMoveAnimationForBackgroundView:]
  -[SBHPeopleWidgetPersonDetailInteraction setBackgroundTintView:]
  -[SBHPeopleWidgetPersonDetailInteraction _handleTapToDismiss:]
  -[SBHPeopleWidgetPersonDetailInteraction setTouchBlockingView:]
  -[SBHPeopleWidgetPersonDetailInteraction _sourceContentFrame]
  -[SBHPeopleWidgetPersonDetailInteraction setSourceContentFrame:]
  -[SBHPeopleWidgetPersonDetailInteraction _targetContentFrame]
  -[SBHPeopleWidgetPersonDetailInteraction setTargetContentFrame:]
  -[SBHPeopleWidgetPersonDetailInteraction touchBlockingView]
  -[SBHPeopleWidgetPersonDetailInteraction backgroundTintView]
  -[SBHPeopleWidgetPersonDetailInteraction sourceContentFrame]
  -[SBHPeopleWidgetPersonDetailInteraction homeScreenContentView]
  -[SBHPeopleWidgetPersonDetailInteraction targetContentFrame]
  -[SBHPeopleWidgetPersonDetailInteraction targetContentCornerRadius]
  -[SBHPeopleWidgetPersonDetailInteraction initWithInteractionContext:]
  -[SBHPeopleWidgetPersonDetailInteraction setModalInteractionDelegate:]
  -[SBHPeopleWidgetPersonDetailInteraction beginInteractionAnimated:]
  -[SBHPeopleWidgetPersonDetailInteraction endInteractionAnimated:]
  -[SBHPeopleWidgetPersonDetailInteraction homeScreenContentFrame]
  -[SBHPeopleWidgetPersonDetailInteraction interactionContext]
  -[SBHPeopleWidgetPersonDetailInteraction setPersonViewController:]
  -[SBHPeopleWidgetPersonDetailInteraction setSourceContentCornerRadius:]
  -[SBHPeopleWidgetPersonDetailInteraction modalInteractionDelegate]
  -[SBHPeopleWidgetPersonDetailInteraction personViewController]
  -[SBHPeopleWidgetPersonDetailInteraction sourceContentCornerRadius]
  -[SBHPeopleWidgetPersonDetailInteraction peopleEntityViewControllerDidRequestDismissal:]


SBHWidgetContainerView : UIView
 @property  UIView *widgetView
 @property  MTMaterialView *screenTimeLockoutView
 @property  BOOL blockedForScreenTimeExpiration
 @property  unsigned long gridSizeClass
 @property  NSString *applicationName
 @property  BOOL requiresClippingToBounds

  // instance methods
  -[SBHWidgetContainerView setApplicationName:]
  -[SBHWidgetContainerView setClipsToBounds:]
  -[SBHWidgetContainerView applicationName]
  -[SBHWidgetContainerView setGridSizeClass:]
  -[SBHWidgetContainerView isBlockedForScreenTimeExpiration]
  -[SBHWidgetContainerView traitCollectionDidChange:]
  -[SBHWidgetContainerView initWithGridSizeClass:applicationName:]
  -[SBHWidgetContainerView setRequiresClippingToBounds:]
  -[SBHWidgetContainerView .cxx_destruct]
  -[SBHWidgetContainerView layoutSubviews]
  -[SBHWidgetContainerView _fontWithTextStyle:symbolicTraits:maxSizeCategory:]
  -[SBHWidgetContainerView requiresClippingToBounds]
  -[SBHWidgetContainerView screenTimeLockoutView]
  -[SBHWidgetContainerView setWidgetView:]
  -[SBHWidgetContainerView gridSizeClass]
  -[SBHWidgetContainerView setBlockedForScreenTimeExpiration:]
  -[SBHWidgetContainerView _updateScreenTimeLockoutView]
  -[SBHWidgetContainerView widgetView]


SBHWidgetContainerViewController : UIViewController <SBHMultiplexingViewControllerObserver>
 @property  UIView *deactivationSnapshotView
 @property  UIViewController *widgetViewController
 @property  unsigned long gridSizeClass
 @property  NSString *applicationName
 @property  <SBHWidgetContainerViewControllerDelegate> *delegate
 @property  BOOL paused
 @property  BOOL blockedForScreenTimeExpiration
 @property  unsigned long userVisibilityStatus
 @property  BOOL allowsEdgeAntialiasing
 @property  BOOL requiresClippingToBounds
 @property  unsigned long presentationMode
 @property  BOOL showsSnapshotWhenDeactivated
 @property  {SBIconApproximateLayoutPosition=QQ} approximateLayoutPosition
 @property  BOOL wantsSystemMaterialBackground
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHWidgetContainerViewController presentationMode]
  -[SBHWidgetContainerViewController _clearDeactivationSnapshotView]
  -[SBHWidgetContainerViewController applicationName]
  -[SBHWidgetContainerViewController setPresentationMode:]
  -[SBHWidgetContainerViewController showsSnapshotWhenDeactivated]
  -[SBHWidgetContainerViewController setAllowsEdgeAntialiasing:]
  -[SBHWidgetContainerViewController setDeactivationSnapshotView:]
  -[SBHWidgetContainerViewController setShowsSnapshotWhenDeactivated:]
  -[SBHWidgetContainerViewController isBlockedForScreenTimeExpiration]
  -[SBHWidgetContainerViewController allowsEdgeAntialiasing]
  -[SBHWidgetContainerViewController _avocadoWidget]
  -[SBHWidgetContainerViewController deactivationSnapshotView]
  -[SBHWidgetContainerViewController cancelTouchesForCurrentEventInHostedContent]
  -[SBHWidgetContainerViewController setRequiresClippingToBounds:]
  -[SBHWidgetContainerViewController setUserVisibilityStatus:]
  -[SBHWidgetContainerViewController userVisibilityStatus]
  -[SBHWidgetContainerViewController snapshotView]
  -[SBHWidgetContainerViewController .cxx_destruct]
  -[SBHWidgetContainerViewController approximateLayoutPosition]
  -[SBHWidgetContainerViewController multiplexingViewControllerWillDeactivate:]
  -[SBHWidgetContainerViewController setApproximateLayoutPosition:]
  -[SBHWidgetContainerViewController multiplexingViewControllerDidActivate:]
  -[SBHWidgetContainerViewController setDelegate:]
  -[SBHWidgetContainerViewController viewDidAppear:]
  -[SBHWidgetContainerViewController _updateWidgetVisibility]
  -[SBHWidgetContainerViewController wantsSystemMaterialBackground]
  -[SBHWidgetContainerViewController requiresClippingToBounds]
  -[SBHWidgetContainerViewController _avocadoViewController]
  -[SBHWidgetContainerViewController initWithWidgetViewController:gridSizeClass:applicationName:]
  -[SBHWidgetContainerViewController gridSizeClass]
  -[SBHWidgetContainerViewController widgetContainerView]
  -[SBHWidgetContainerViewController viewWillDisappear:]
  -[SBHWidgetContainerViewController viewWillAppear:]
  -[SBHWidgetContainerViewController setPaused:]
  -[SBHWidgetContainerViewController delegate]
  -[SBHWidgetContainerViewController setBlockedForScreenTimeExpiration:]
  -[SBHWidgetContainerViewController widgetContextMenuController]
  -[SBHWidgetContainerViewController _widgetExtensionBundleIdentifier]
  -[SBHWidgetContainerViewController loadView]
  -[SBHWidgetContainerViewController widgetViewController]
  -[SBHWidgetContainerViewController viewDidDisappear:]
  -[SBHWidgetContainerViewController isPaused]
  -[SBHWidgetContainerViewController _canShowWhileLocked]


SBIconAddAccessoryView : UIView <SBIconAccessoryView>
 @property  SBFParallaxSettings *parallaxSettings
 @property  <SBIconListLayout> *listLayout
 @property  UITapGestureRecognizer *actionTapGestureRecognizer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconAddAccessoryView pointerInteraction:styleForRegion:]
  -[SBIconAddAccessoryView setAccessoryBrightness:]
  -[SBIconAddAccessoryView setListLayout:]
  -[SBIconAddAccessoryView .cxx_destruct]
  -[SBIconAddAccessoryView layoutSubviews]
  -[SBIconAddAccessoryView listLayout]
  -[SBIconAddAccessoryView configureAnimatedForIcon:infoProvider:animator:]
  -[SBIconAddAccessoryView init]
  -[SBIconAddAccessoryView sizeThatFits:]
  -[SBIconAddAccessoryView prepareForReuse]
  -[SBIconAddAccessoryView displayingAccessory]
  -[SBIconAddAccessoryView pointInside:withEvent:]
  -[SBIconAddAccessoryView pointerInteraction:regionForRequest:defaultRegion:]
  -[SBIconAddAccessoryView accessoryCenterForIconBounds:]
  -[SBIconAddAccessoryView configureForIcon:infoProvider:]
  -[SBIconAddAccessoryView intrinsicContentSize]
  -[SBIconAddAccessoryView _hitTestPadding]
  -[SBIconAddAccessoryView setActionTapGestureRecognizer:]
  -[SBIconAddAccessoryView actionTapGestureRecognizer]


SBHFloatyFolderVisualConfiguration : NSObject <NSCopying, BSDescriptionProviding>
 @property  {CGSize=dd} contentBackgroundSize
 @property  double continuousCornerRadius
 @property  double titleFontSizeInPortrait
 @property  double titleFontSizeInLandscape
 @property  double titleHorizontalInset
 @property  double pageControlAreaHeight
 @property  {CGSize=dd} pageControlCustomPadding
 @property  double rubberBandIntervalForOverscroll
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHFloatyFolderVisualConfiguration titleFontSizeInPortrait]
  -[SBHFloatyFolderVisualConfiguration setRubberBandIntervalForOverscroll:]
  -[SBHFloatyFolderVisualConfiguration titleFontSizeInLandscape]
  -[SBHFloatyFolderVisualConfiguration pageControlAreaHeight]
  -[SBHFloatyFolderVisualConfiguration setPageControlCustomPadding:]
  -[SBHFloatyFolderVisualConfiguration continuousCornerRadius]
  -[SBHFloatyFolderVisualConfiguration setTitleFontSizeInAllOrientations:]
  -[SBHFloatyFolderVisualConfiguration pageControlCustomPadding]
  -[SBHFloatyFolderVisualConfiguration setContinuousCornerRadius:]
  -[SBHFloatyFolderVisualConfiguration setTitleFontSizeInPortrait:]
  -[SBHFloatyFolderVisualConfiguration succinctDescriptionBuilder]
  -[SBHFloatyFolderVisualConfiguration setTitleFontSizeInLandscape:]
  -[SBHFloatyFolderVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHFloatyFolderVisualConfiguration init]
  -[SBHFloatyFolderVisualConfiguration isEqual:]
  -[SBHFloatyFolderVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHFloatyFolderVisualConfiguration titleHorizontalInset]
  -[SBHFloatyFolderVisualConfiguration succinctDescription]
  -[SBHFloatyFolderVisualConfiguration setPageControlAreaHeight:]
  -[SBHFloatyFolderVisualConfiguration setTitleHorizontalInset:]
  -[SBHFloatyFolderVisualConfiguration contentBackgroundSize]
  -[SBHFloatyFolderVisualConfiguration rubberBandIntervalForOverscroll]
  -[SBHFloatyFolderVisualConfiguration setContentBackgroundSize:]
  -[SBHFloatyFolderVisualConfiguration copyWithZone:]


SBHIconModel : NSObject <SBFolderObserver, SBIconObserver, SBHIconModelApplicationDataSourceObserver, SBSHomeScreenServiceInstalledWebClipsObserver, SBIconDelegate, SBHIconStateUnarchiverIconSource, SBHIconStateUnarchiverDelegate, BSDescriptionProviding>
 @property  NSSet *archivedLeafIdentifiers
 @property  NSDictionary *desiredIconState
 @property  NSOrderedSet *desiredIconStateFlattened
 @property  SBRootFolder *cachedDesiredRootFolder
 @property  SBRootFolder *cachedDefaultRootFolder
 @property  BOOL layingOut
 @property  BOOL checkingModelConsistency
 @property  SBIcon *rootFolderIcon
 @property  BOOL iconStateDirty
 @property  NSTimer *autosaveTimer
 @property  SBSHomeScreenService *homeScreenService
 @property  <BSInvalidatable> *installedWebClipsObservation
 @property  long long lastLayoutStatus
 @property  unsigned long rootFolderAllowedGridSizeClasses
 @property  <SBIconModelStore> *store
 @property  <SBHIconModelApplicationDataSource> *applicationDataSource
 @property  <SBHIconModelDelegate> *delegate
 @property  SBRootFolder *rootFolder
 @property  unsigned long maxListCountForFolders
 @property  unsigned long maxIconCountForDock
 @property  BOOL supportsDock
 @property  unsigned long maxColumnCountForTodayList
 @property  unsigned long maxRowCountForFavoriteTodayList
 @property  {SBHIconGridSizeClassSizes={SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}} gridSizeClassSizes
 @property  unsigned long listRotatedLayoutClusterGridSizeClass
 @property  NSSet *visibleIconIdentifiers
 @property  NSSet *hiddenIconTags
 @property  NSSet *visibleIconTags
 @property  NSSet *leafIcons
 @property  NSSet *visibleLeafIcons
 @property  NSSet *leafIconsUniquedByApplicationBundleIdentifier
 @property  BOOL automaticallyAddsApplications
 @property  BOOL automaticallyAddsWebClips
 @property  NSSet *currentLeafIdentifiers
 @property  NSSet *leafIconIdentifiers
 @property  BOOL ignoresIconsNotInIconState
 @property  BOOL sortsIconsAlphabetically
 @property  BOOL hasDesiredIconState
 @property  NSSet *missingDesiredIconIdentifiers
 @property  NSDictionary *defaultIconState
 @property  NSSet *firstPageLeafIdentifiers
 @property  BOOL restoring
 @property  NSString *localizedDefaultFolderName
 @property  NSString *unlocalizedDefaultFolderName
 @property  BOOL automaticallyAddsApplicationPlaceholders
 @property  <SBIconModelStore> *todayListsStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHIconModel bookmarkIconClass]
  +[SBHIconModel currentLocaleDidChangeNotificationName]
  +[SBHIconModel bookmarkClass]
  +[SBHIconModel migratedIdentifierForLeafIdentifier:]
  +[SBHIconModel applicationIconClass]
  +[SBHIconModel iconClassForApplicationWithBundleIdentifier:]
  +[SBHIconModel defaultApplicationDataSource]
  +[SBHIconModel allWebClips]

  // instance methods
  -[SBHIconModel iconsOfClass:]
  -[SBHIconModel removeAllIcons]
  -[SBHIconModel layoutIfNeeded]
  -[SBHIconModel folder:willAddIcon:]
  -[SBHIconModel addIconsOfClass:toSet:]
  -[SBHIconModel markIconStateClean]
  -[SBHIconModel importIconState:]
  -[SBHIconModel allowedGridSizeClassesForTodayList]
  -[SBHIconModel addAdditionalIconMatchingIcon:]
  -[SBHIconModel leafIcons]
  -[SBHIconModel listsAllowRotatedLayoutForFolderClass:]
  -[SBHIconModel allowedGridSizeClassesForDock]
  -[SBHIconModel removeIcon:]
  -[SBHIconModel removeIcons:]
  -[SBHIconModel applicationWithBundleIdentifier:]
  -[SBHIconModel localizedFolderNameForDefaultDisplayName:]
  -[SBHIconModel localizedDefaultFolderName]
  -[SBHIconModel listRotatedLayoutClusterGridSizeClass]
  -[SBHIconModel icon:launchFromLocation:context:]
  -[SBHIconModel folderIconStateDidDirty:]
  -[SBHIconModel listGridSizeForFolderClass:]
  -[SBHIconModel maxListCountForFolders]
  -[SBHIconModel maxIconCountForDock]
  -[SBHIconModel listWithNonDefaultSizedIconsGridSizeForFolderClass:]
  -[SBHIconModel iconModelApplicationDataSource:applicationsAdded:]
  -[SBHIconModel markIconStateDirty]
  -[SBHIconModel isIconStateDirty]
  -[SBHIconModel supportsDock]
  -[SBHIconModel iconStateUnarchiver:allowedGridSizeClassesForFolderClass:]
  -[SBHIconModel didAddIcon:]
  -[SBHIconModel defaultIconState]
  -[SBHIconModel missingDesiredIconIdentifiers]
  -[SBHIconModel setRootFolderAllowedGridSizeClasses:]
  -[SBHIconModel isTrackingIcon:]
  -[SBHIconModel setForecastedLeavesOnIconModel:includingMissingIcons:]
  -[SBHIconModel widgetIcons]
  -[SBHIconModel addApplication:force:]
  -[SBHIconModel iconModelApplicationDataSource:applicationPlaceholdersRemoved:]
  -[SBHIconModel visibleLeafIcons]
  -[SBHIconModel initWithStore:]
  -[SBHIconModel checkModelConsistencyWithListGridCellInfoOptions:]
  -[SBHIconModel setVisibilityOfIconsWithVisibleTags:hiddenTags:]
  -[SBHIconModel willLayout]
  -[SBHIconModel cachedDesiredRootFolder]
  -[SBHIconModel folder:didReplaceIcon:withIcon:]
  -[SBHIconModel setCachedDefaultRootFolder:]
  -[SBHIconModel isRestoring]
  -[SBHIconModel autosaveTimerDidFire:]
  -[SBHIconModel _getLoadedIconState:error:]
  -[SBHIconModel didUnarchiveMetadata:]
  -[SBHIconModel iconWantsUninstall:]
  -[SBHIconModel iconModelMetadata]
  -[SBHIconModel removeIcon:shouldRemoveFromRootFolder:]
  -[SBHIconModel _unarchiveRootFolderWithLayoutStatus:]
  -[SBHIconModel setCheckingModelConsistency:]
  -[SBHIconModel setLayingOut:]
  -[SBHIconModel removeApplicationWithBundleIdentifier:pruneEmptyIcons:]
  -[SBHIconModel isLayingOut]
  -[SBHIconModel iconStateUnarchiver:listsAllowRotatedLayoutForFolderClass:]
  -[SBHIconModel _tearDownIconRunloopObserverIfNeeded]
  -[SBHIconModel .cxx_destruct]
  -[SBHIconModel iconStateUnarchiver:listGridSizeForFolderClass:]
  -[SBHIconModel makeFolderWithDisplayName:uniqueIdentifier:]
  -[SBHIconModel removeApplication:pruneEmptyIcons:]
  -[SBHIconModel unlocalizedDefaultFolderName]
  -[SBHIconModel addIcon:]
  -[SBHIconModel scheduleDiscardOfCachedOtherRootFolders]
  -[SBHIconModel applicationIconsForBundleIdentifier:]
  -[SBHIconModel setCachedDesiredRootFolder:]
  -[SBHIconModel modernizeRootArchive:]
  -[SBHIconModel succinctDescriptionBuilder]
  -[SBHIconModel iconArchivableStateDidChange:]
  -[SBHIconModel listRotatedLayoutClusterGridSizeClassForIconStateUnarchiver:]
  -[SBHIconModel _saveIconStateWithError:]
  -[SBHIconModel _tearDownDiscardCachedOtherRootFoldersRunloopObserverIfNeeded]
  -[SBHIconModel setIgnoresIconsNotInIconState:]
  -[SBHIconModel unarchivedRootFolderForAddingIconFromOtherIconState:]
  -[SBHIconModel addIconToDesignatedLocationBasedOnDesiredIconState:toRootFolder:options:listGridCellInfoOptions:]
  -[SBHIconModel setDelegate:]
  -[SBHIconModel addIconToDesignatedLocationBasedOnDefaultIconState:toRootFolder:options:listGridCellInfoOptions:]
  -[SBHIconModel setStore:]
  -[SBHIconModel ignoresIconsNotInIconState]
  -[SBHIconModel iconModelApplicationDataSource:applicationsUpdated:]
  -[SBHIconModel rootFolderAllowedGridSizeClasses]
  -[SBHIconModel addIcon:toDesignatedLocationInRootFolder:options:listGridCellInfoOptions:]
  -[SBHIconModel leafIconForIdentifier:]
  -[SBHIconModel homeScreenService]
  -[SBHIconModel checkModelConsistencyInRootFolder:listGridCellInfoOptions:]
  -[SBHIconModel saveIconStateIfNeeded]
  -[SBHIconModel setAutosaveTimer:]
  -[SBHIconModel setArchivedLeafIdentifiers:]
  -[SBHIconModel descriptionBuilderWithMultilinePrefix:]
  -[SBHIconModel autosaveTimer]
  -[SBHIconModel deleteIconStateWithOptions:]
  -[SBHIconModel maxRowCountForFavoriteTodayList]
  -[SBHIconModel setTodayListsStore:]
  -[SBHIconModel makeFolderWithDisplayName:]
  -[SBHIconModel init]
  -[SBHIconModel localeChanged]
  -[SBHIconModel applicationIconForBundleIdentifier:]
  -[SBHIconModel widgetIconsContainingWidgetsMatchingExtensionBundleIdentifier:kind:sizeClass:]
  -[SBHIconModel widgetIconsContainingWidgetsMatchingUniqueIdentifier:]
  -[SBHIconModel clearDesiredIconStateWithOptions:]
  -[SBHIconModel hasDesiredIconState]
  -[SBHIconModel allowedGridSizeClassesForFolderClass:]
  -[SBHIconModel bookmarkIconForWebClipIdentifier:]
  -[SBHIconModel _adjustedDesiredIndexPathInRootFolder:forIconWithIdentifier:]
  -[SBHIconModel _rootFolder:moveIconsToFirstPage:placeBumpedIconsSomewhereNice:]
  -[SBHIconModel importDesiredIconState:]
  -[SBHIconModel todayListsStore]
  -[SBHIconModel desiredIconState]
  -[SBHIconModel descriptionWithMultilinePrefix:]
  -[SBHIconModel applicationDataSource]
  -[SBHIconModel addIcon:toDesignatedLocationBasedOnOtherRootFolder:toRootFolder:options:listGridCellInfoOptions:]
  -[SBHIconModel installedWebClipsDidChange]
  -[SBHIconModel saveDesiredIconState]
  -[SBHIconModel allowedGridSizeClassesForDockForIconStateUnarchiver:]
  -[SBHIconModel automaticallyAddsWebClips]
  -[SBHIconModel hiddenIconTags]
  -[SBHIconModel succinctDescription]
  -[SBHIconModel _saveIconState]
  -[SBHIconModel clearDesiredIconStateIfPossible]
  -[SBHIconModel shouldPlaceIconOnIgnoredList:]
  -[SBHIconModel _adjustedPlatformIndexPathInRootFolder:forIcon:]
  -[SBHIconModel rootFolder]
  -[SBHIconModel desiredIndexPathForIconWithIdentifier:]
  -[SBHIconModel gridSizeClassSizesForIconStateUnarchiver:]
  -[SBHIconModel setAutomaticallyAddsWebClips:]
  -[SBHIconModel scheduleIconStateAutosave]
  -[SBHIconModel addIconToDesignatedLocationBasedOnDelegate:toRootFolder:options:listGridCellInfoOptions:]
  -[SBHIconModel iconClassForApplicationWithBundleIdentifier:]
  -[SBHIconModel maxIconCountForDockForIconStateUnarchiver:]
  -[SBHIconModel store]
  -[SBHIconModel setInstalledWebClipsObservation:]
  -[SBHIconModel setDesiredIconState:]
  -[SBHIconModel disableIconStateAutosaveForReason:]
  -[SBHIconModel _checkRemovedIcons]
  -[SBHIconModel setLastLayoutStatus:]
  -[SBHIconModel cachedDefaultRootFolder]
  -[SBHIconModel _noteRemovedIcons:]
  -[SBHIconModel updateExistingBookmarkIcon:forUpdatedWebClip:]
  -[SBHIconModel _noteApplicationIconImageChanged:]
  -[SBHIconModel loadDesiredIconState]
  -[SBHIconModel expectedIconForDisplayIdentifier:createIfNecessary:]
  -[SBHIconModel iconModelApplicationDataSource:applicationPlaceholdersAdded:]
  -[SBHIconModel leafIconIdentifiers]
  -[SBHIconModel indexPathForIconInPlatformState:]
  -[SBHIconModel checkModelConsistency]
  -[SBHIconModel setRootFolderIcon:]
  -[SBHIconModel removeIconForIdentifier:]
  -[SBHIconModel reloadIcons]
  -[SBHIconModel visibleIconIdentifiers]
  -[SBHIconModel leafIconsForIdentifiers:notFoundMarker:]
  -[SBHIconModel shouldAvoidPlacingIconOnFirstPage:]
  -[SBHIconModel removeApplication:]
  -[SBHIconModel setAutomaticallyAddsApplicationPlaceholders:]
  -[SBHIconModel gridSizeClassSizes]
  -[SBHIconModel folder:didAddIcons:removedIcons:]
  -[SBHIconModel setIconStateDirty:]
  -[SBHIconModel delegate]
  -[SBHIconModel enumerateApplicationIconsForBundleIdentifier:usingBlock:]
  -[SBHIconModel _shouldSkipAddingIcon:toRootFolder:]
  -[SBHIconModel leafIconsUniquedByApplicationBundleIdentifier]
  -[SBHIconModel maxRowCountForListInRootFolderWithInterfaceOrientation:]
  -[SBHIconModel loadAllIcons]
  -[SBHIconModel iconModelApplicationDataSource:applicationsRemoved:]
  -[SBHIconModel maxColumnCountForTodayList]
  -[SBHIconModel indexPathInRootFolder:forNewIcon:isDesignatedLocation:replaceExistingIconAtIndexPath:]
  -[SBHIconModel archivedLeafIdentifiers]
  -[SBHIconModel lastLayoutStatus]
  -[SBHIconModel indexPathForNewIcon:isDesignatedLocation:replaceExistingIconAtIndexPath:]
  -[SBHIconModel addIconToDesignatedLocation:options:listGridCellInfoOptions:]
  -[SBHIconModel addBookmarkIconForWebClip:]
  -[SBHIconModel _saveIconState:error:]
  -[SBHIconModel _setUpIconRunLoopObserver]
  -[SBHIconModel automaticallyAddsApplicationPlaceholders]
  -[SBHIconModel removeApplicationWithBundleIdentifier:]
  -[SBHIconModel setLeafIconsByIdentifier:]
  -[SBHIconModel removeApplicationIconsForBundleIdentifier:]
  -[SBHIconModel dealloc]
  -[SBHIconModel discardCachedOtherRootFolders]
  -[SBHIconModel desiredIconStateFlattened]
  -[SBHIconModel expectedIconForDisplayIdentifier:]
  -[SBHIconModel automaticallyAddsApplications]
  -[SBHIconModel isIconVisible:]
  -[SBHIconModel setRestoring:]
  -[SBHIconModel setSortsIconsAlphabetically:]
  -[SBHIconModel deleteIconState]
  -[SBHIconModel clearDesiredIconState]
  -[SBHIconModel maxColumnCountForListInRootFolderWithInterfaceOrientation:]
  -[SBHIconModel addApplication:]
  -[SBHIconModel firstPageLeafIdentifiers]
  -[SBHIconModel visibleIconTags]
  -[SBHIconModel iconState]
  -[SBHIconModel adjustIconsToShow:iconsToHide:afterChangeToVisibleIconTags:hiddenIconTags:]
  -[SBHIconModel setAutomaticallyAddsApplications:]
  -[SBHIconModel rootFolderIcon]
  -[SBHIconModel desiredFolderCreationActionsForInsertingNewIcon:]
  -[SBHIconModel _removeIconStateAutosaveDisableAssertion:]
  -[SBHIconModel allowedGridSizeClassesForTodayListForIconStateUnarchiver:]
  -[SBHIconModel _adjustedIndexPathInRootFolder:withinIconState:forIconWithIdentifier:]
  -[SBHIconModel enumerateLeafIconsUsingBlock:]
  -[SBHIconModel currentLeafIdentifiers]
  -[SBHIconModel shouldAvoidCreatingIconForApplication:]
  -[SBHIconModel removeApplicationPlaceholder:]
  -[SBHIconModel initWithStore:applicationDataSource:]
  -[SBHIconModel sortsIconsAlphabetically]
  -[SBHIconModel layout]
  -[SBHIconModel isCheckingModelConsistency]
  -[SBHIconModel leafIconsForIdentifiers:]
  -[SBHIconModel installedWebClipsObservation]
  -[SBHIconModel folder:didAddList:]
  -[SBHIconModel addApplicationPlaceholder:]
  -[SBHIconModel iconStateUnarchiver:listWithNonDefaultSizedIconsGridSizeForFolderClass:]
  -[SBHIconModel maxListCountForFoldersForIconStateUnarchiver:]
  -[SBHIconModel setDesiredIconStateFlattened:]


SBIconModelFolderCreationAction : NSObject <BSDescriptionProviding>
 @property  SBFolder *folder
 @property  NSIndexPath *indexPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconModelFolderCreationAction .cxx_destruct]
  -[SBIconModelFolderCreationAction succinctDescriptionBuilder]
  -[SBIconModelFolderCreationAction descriptionBuilderWithMultilinePrefix:]
  -[SBIconModelFolderCreationAction indexPath]
  -[SBIconModelFolderCreationAction descriptionWithMultilinePrefix:]
  -[SBIconModelFolderCreationAction succinctDescription]
  -[SBIconModelFolderCreationAction folder]
  -[SBIconModelFolderCreationAction initWithFolder:indexPath:]


SBHIconModelDisableAutosaveAssertion : NSObject <BSInvalidatable, BSDescriptionProviding>
 @property  BOOL invalidated
 @property  SBHIconModel *iconModel
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconModelDisableAutosaveAssertion isInvalidated]
  -[SBHIconModelDisableAutosaveAssertion .cxx_destruct]
  -[SBHIconModelDisableAutosaveAssertion iconModel]
  -[SBHIconModelDisableAutosaveAssertion succinctDescriptionBuilder]
  -[SBHIconModelDisableAutosaveAssertion descriptionBuilderWithMultilinePrefix:]
  -[SBHIconModelDisableAutosaveAssertion setInvalidated:]
  -[SBHIconModelDisableAutosaveAssertion descriptionWithMultilinePrefix:]
  -[SBHIconModelDisableAutosaveAssertion succinctDescription]
  -[SBHIconModelDisableAutosaveAssertion reason]
  -[SBHIconModelDisableAutosaveAssertion dealloc]
  -[SBHIconModelDisableAutosaveAssertion invalidate]
  -[SBHIconModelDisableAutosaveAssertion initWithIconModel:reason:]


SBHIconModelDesiredIconStateUnarchiverDelegate : NSObject <SBHIconStateUnarchiverDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconModelDesiredIconStateUnarchiverDelegate iconStateUnarchiver:listGridSizeForFolderClass:]
  -[SBHIconModelDesiredIconStateUnarchiverDelegate gridSizeClassSizesForIconStateUnarchiver:]
  -[SBHIconModelDesiredIconStateUnarchiverDelegate maxIconCountForDockForIconStateUnarchiver:]
  -[SBHIconModelDesiredIconStateUnarchiverDelegate iconModel:allowedGridSizeClassesForFolderClass:]
  -[SBHIconModelDesiredIconStateUnarchiverDelegate maxListCountForFoldersForIconStateUnarchiver:]


SBIconListViewClusterAnimator : NSObject <SBIconListLayoutAnimating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewClusterAnimator .cxx_destruct]
  -[SBIconListViewClusterAnimator init]
  -[SBIconListViewClusterAnimator iconListView:wantsAnimatedRemovalForIconViews:completionHandler:]
  -[SBIconListViewClusterAnimator iconListView:wantsAnimatedLayoutForIconView:withParameters:alongsideAnimationBlock:]
  -[SBIconListViewClusterAnimator setRemovalDirection:forIcon:]


SBHLibraryAdditionalItemsIndicatorIcon : SBFolderIcon
 @property  SBHLibraryCategory *category

  // instance methods
  -[SBHLibraryAdditionalItemsIndicatorIcon iconImageViewClassForLocation:]
  -[SBHLibraryAdditionalItemsIndicatorIcon initWithCategory:]
  -[SBHLibraryAdditionalItemsIndicatorIcon .cxx_destruct]
  -[SBHLibraryAdditionalItemsIndicatorIcon category]
  -[SBHLibraryAdditionalItemsIndicatorIcon isAdditionalItemsIndicatorIcon]


SBPercentPassthroughInteractiveTransition : NSObject <SBViewControllerInteractiveTransitioning>
 @property  double completionSpeed
 @property  long long completionCurve
 @property  BOOL wantsInteractiveStart
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBPercentPassthroughInteractiveTransition cancelTransition]
  -[SBPercentPassthroughInteractiveTransition completionSpeed]
  -[SBPercentPassthroughInteractiveTransition supportsRestarting]
  -[SBPercentPassthroughInteractiveTransition completionCurve]
  -[SBPercentPassthroughInteractiveTransition setCompletionCurve:]
  -[SBPercentPassthroughInteractiveTransition .cxx_destruct]
  -[SBPercentPassthroughInteractiveTransition startInteractiveTransition:]
  -[SBPercentPassthroughInteractiveTransition setCompletionSpeed:]
  -[SBPercentPassthroughInteractiveTransition finishInteractiveTransition]
  -[SBPercentPassthroughInteractiveTransition init]
  -[SBPercentPassthroughInteractiveTransition updateTransition:]


SBIconListFlowExtendedLayout : SBIconListFlowLayout
  // instance methods
  -[SBIconListFlowExtendedLayout iconSpacingForOrientation:]


SBHSearchVisualConfiguration : NSObject <NSCopying, BSDescriptionProviding>
 @property  double textFieldWidth
 @property  {UIEdgeInsets=dddd} textFieldPortraitLayoutInsets
 @property  {UIEdgeInsets=dddd} textFieldLandscapeLayoutInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHSearchVisualConfiguration textFieldLandscapeLayoutInsets]
  -[SBHSearchVisualConfiguration setTextFieldPortraitLayoutInsets:]
  -[SBHSearchVisualConfiguration succinctDescriptionBuilder]
  -[SBHSearchVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHSearchVisualConfiguration init]
  -[SBHSearchVisualConfiguration isEqual:]
  -[SBHSearchVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHSearchVisualConfiguration succinctDescription]
  -[SBHSearchVisualConfiguration setTextFieldWidth:]
  -[SBHSearchVisualConfiguration textFieldPortraitLayoutInsets]
  -[SBHSearchVisualConfiguration setTextFieldLandscapeLayoutInsets:]
  -[SBHSearchVisualConfiguration copyWithZone:]
  -[SBHSearchVisualConfiguration textFieldWidth]


SBHFloatingDockStyleConfiguration : NSObject <NSCopying>
 @property  unsigned long backgroundEffect
 @property  unsigned long platterEffect
 @property  unsigned long folderIconBackgroundStyle
 @property  BOOL wantsPlatterShadow

  // class methods
  +[SBHFloatingDockStyleConfiguration defaultConfiguration]

  // instance methods
  -[SBHFloatingDockStyleConfiguration init]
  -[SBHFloatingDockStyleConfiguration copyWithZone:]
  -[SBHFloatingDockStyleConfiguration backgroundEffect]
  -[SBHFloatingDockStyleConfiguration platterEffect]
  -[SBHFloatingDockStyleConfiguration folderIconBackgroundStyle]
  -[SBHFloatingDockStyleConfiguration wantsPlatterShadow]
  -[SBHFloatingDockStyleConfiguration initWithBackgroundEffect:platterEffect:wantsPlatterShadow:folderIconBackgroundStyle:]
  -[SBHFloatingDockStyleConfiguration configurationWithWantsPlatterShadow:]


SBHLibraryDismissalView : UIView
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  double brightness

  // class methods
  +[SBHLibraryDismissalView layerClass]

  // instance methods
  -[SBHLibraryDismissalView layer]
  -[SBHLibraryDismissalView setBrightness:]
  -[SBHLibraryDismissalView layoutSubviews]
  -[SBHLibraryDismissalView brightness]
  -[SBHLibraryDismissalView iconImageInfo]
  -[SBHLibraryDismissalView initWithFrame:]
  -[SBHLibraryDismissalView setIconImageInfo:]


SBFloatingDockIconListView : SBDockIconListView
  // instance methods
  -[SBFloatingDockIconListView configureIconView:forIcon:]


SBRootFolderViewPageManagementLayoutManager : NSObject <SBFolderObserver, SBIconViewProviding, SBIconViewDelegate, SBIconViewActionDelegate, SBIconListViewDragDelegate, SBHPageManagementCellViewControllerDelegate, SBIconListViewDominoPivotAnimatorDelegate, SBIconDragManagerDelegate, SBIconListModelObserver, UIScrollViewDelegate, SBRootFolderViewLayoutManager>
 @property  UIImageView *focusModeSymbolView
 @property  SBTitledHomeScreenButton *doneButton
 @property  SBTitledHomeScreenButton *focusModeOptionsButton
 @property  SBIconListView *rootListView
 @property  SBRootFolder *pageManagementRootFolder
 @property  UIScrollView *pageManagementScrollView
 @property  unsigned long transitionCount
 @property  unsigned long activeTransitionCount
 @property  <UIViewImplicitlyAnimating> *latestActiveTransitionAnimator
 @property  long long layoutAction
 @property  long long layoutConfiguration
 @property  UITapGestureRecognizer *backgroundTapGestureRecognizer
 @property  <SBDockOffscreenFractionModifying> *dockOffscreenAssertion
 @property  <BSInvalidatable> *pageControlBorrowedAssertion
 @property  SBIconDragManager *iconDragManager
 @property  BOOL allowsPageHiding
 @property  UIViewController *alertPresentationViewController
 @property  BOOL allowsEditing
 @property  SBHFocusMode *activeFocusMode
 @property  NSURL *completionURL
 @property  BOOL isTrackingActiveOrDroppingIconDrags
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHIconModel *iconModel
 @property  BOOL editing
 @property  BOOL scrolling
 @property  BOOL trackingScroll
 @property  BOOL rootFolderContentVisible
 @property  BOOL iconContentPossiblyVisibleOverApplication
 @property  BOOL overlayTodayViewVisible
 @property  BOOL overlayLibraryViewVisible
 @property  SBRootFolderView *rootFolderView
 @property  id userInfo

  // instance methods
  -[SBRootFolderViewPageManagementLayoutManager iconView:willAnimateDragLiftWithAnimator:session:]
  -[SBRootFolderViewPageManagementLayoutManager iconView:dragPreviewForItem:session:previewParameters:]
  -[SBRootFolderViewPageManagementLayoutManager iconView:didEndDragSession:withOperation:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBRootFolderViewPageManagementLayoutManager closeBoxTypeForIconView:]
  -[SBRootFolderViewPageManagementLayoutManager iconView:dragLiftAnimationDidChangeDirection:]
  -[SBRootFolderViewPageManagementLayoutManager iconShouldAllowCloseBoxTap:]
  -[SBRootFolderViewPageManagementLayoutManager iconCloseBoxTapped:]
  -[SBRootFolderViewPageManagementLayoutManager rootFolderForIconDragManager:]
  -[SBRootFolderViewPageManagementLayoutManager iconListViewForIndexPath:]
  -[SBRootFolderViewPageManagementLayoutManager customImageViewControllerForIconView:]
  -[SBRootFolderViewPageManagementLayoutManager iconView:canAddDragItemsToSession:]
  -[SBRootFolderViewPageManagementLayoutManager activeFocusMode]
  -[SBRootFolderViewPageManagementLayoutManager iconDragManager:dragPreviewForIconView:]
  -[SBRootFolderViewPageManagementLayoutManager iconViewWillBeginDrag:session:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:iconDropSessionDidUpdate:]
  -[SBRootFolderViewPageManagementLayoutManager setUserInfo:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:iconDropSessionDidExit:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:iconDropSession:didPauseAtLocation:]
  -[SBRootFolderViewPageManagementLayoutManager setActiveFocusMode:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBRootFolderViewPageManagementLayoutManager iconViewCanBeginDrags:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:iconViewForDroppingIconDragItem:proposedIconView:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:canHandleIconDropSession:]
  -[SBRootFolderViewPageManagementLayoutManager configureIconView:forIcon:]
  -[SBRootFolderViewPageManagementLayoutManager allowsEditing]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:performIconDrop:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:iconDropSessionDidEnter:]
  -[SBRootFolderViewPageManagementLayoutManager .cxx_destruct]
  -[SBRootFolderViewPageManagementLayoutManager iconViewCanBecomeFocused:]
  -[SBRootFolderViewPageManagementLayoutManager iconList:didRemoveIcon:]
  -[SBRootFolderViewPageManagementLayoutManager folder:listHiddenDidChange:]
  -[SBRootFolderViewPageManagementLayoutManager iconList:didMoveIcon:]
  -[SBRootFolderViewPageManagementLayoutManager doneButton]
  -[SBRootFolderViewPageManagementLayoutManager isIconViewRecycled:]
  -[SBRootFolderViewPageManagementLayoutManager setDoneButton:]
  -[SBRootFolderViewPageManagementLayoutManager init]
  -[SBRootFolderViewPageManagementLayoutManager dequeueReusableIconViewOfClass:]
  -[SBRootFolderViewPageManagementLayoutManager alertPresentationViewController]
  -[SBRootFolderViewPageManagementLayoutManager isTrackingActiveOrDroppingIconDrags]
  -[SBRootFolderViewPageManagementLayoutManager setPageControlBorrowedAssertion:]
  -[SBRootFolderViewPageManagementLayoutManager scrollViewWillBeginDragging:]
  -[SBRootFolderViewPageManagementLayoutManager rootViewForIconDragManager:]
  -[SBRootFolderViewPageManagementLayoutManager iconViewQueryableForIconDragManager:]
  -[SBRootFolderViewPageManagementLayoutManager iconDragManager]
  -[SBRootFolderViewPageManagementLayoutManager setAllowsEditing:]
  -[SBRootFolderViewPageManagementLayoutManager isEditing]
  -[SBRootFolderViewPageManagementLayoutManager pageControlBorrowedAssertion]
  -[SBRootFolderViewPageManagementLayoutManager iconView:item:willAnimateDragCancelWithAnimator:]
  -[SBRootFolderViewPageManagementLayoutManager recycleIconView:]
  -[SBRootFolderViewPageManagementLayoutManager userInfo]
  -[SBRootFolderViewPageManagementLayoutManager setAlertPresentationViewController:]
  -[SBRootFolderViewPageManagementLayoutManager dragItemsForIconView:]
  -[SBRootFolderViewPageManagementLayoutManager rootFolderView]
  -[SBRootFolderViewPageManagementLayoutManager pageManagementCellViewControllerCanReceiveTap:]
  -[SBRootFolderViewPageManagementLayoutManager pageManagementCellViewControllerShouldSuppressHighlight:]
  -[SBRootFolderViewPageManagementLayoutManager pageManagementCellViewControllerDidReceiveTap:]
  -[SBRootFolderViewPageManagementLayoutManager backgroundViewForSnapshotForPageManagementCellViewController:]
  -[SBRootFolderViewPageManagementLayoutManager setRootFolderView:]
  -[SBRootFolderViewPageManagementLayoutManager transitionToActive:inFolderView:usingAnimator:]
  -[SBRootFolderViewPageManagementLayoutManager iconDragManager:doesIconViewRepresentRealIconPosition:]
  -[SBRootFolderViewPageManagementLayoutManager dominoPivotAnimator:didLayOutIconView:]
  -[SBRootFolderViewPageManagementLayoutManager layoutConfiguration]
  -[SBRootFolderViewPageManagementLayoutManager setAllowsPageHiding:]
  -[SBRootFolderViewPageManagementLayoutManager pageManagementScrollView]
  -[SBRootFolderViewPageManagementLayoutManager rootListView]
  -[SBRootFolderViewPageManagementLayoutManager focusModeSymbolView]
  -[SBRootFolderViewPageManagementLayoutManager focusModeOptionsButton]
  -[SBRootFolderViewPageManagementLayoutManager backgroundTapGestureRecognizer]
  -[SBRootFolderViewPageManagementLayoutManager activeTransitionCount]
  -[SBRootFolderViewPageManagementLayoutManager setPageManagementScrollView:]
  -[SBRootFolderViewPageManagementLayoutManager makeRootListViewInFolderView:animated:]
  -[SBRootFolderViewPageManagementLayoutManager backgroundTapped:]
  -[SBRootFolderViewPageManagementLayoutManager layoutScrollViewAndRootListViewInFolderView:]
  -[SBRootFolderViewPageManagementLayoutManager updateSidebarVisibilityInFolderView:transitioningToActive:]
  -[SBRootFolderViewPageManagementLayoutManager setFocusModeSymbolView:]
  -[SBRootFolderViewPageManagementLayoutManager focusModeOptionsButtonTapped:]
  -[SBRootFolderViewPageManagementLayoutManager setFocusModeOptionsButton:]
  -[SBRootFolderViewPageManagementLayoutManager layoutFooterViewsInFolderView:]
  -[SBRootFolderViewPageManagementLayoutManager dockOffscreenAssertion]
  -[SBRootFolderViewPageManagementLayoutManager setDockOffscreenAssertion:]
  -[SBRootFolderViewPageManagementLayoutManager layoutHeaderViewsInFolderView:]
  -[SBRootFolderViewPageManagementLayoutManager turnOffIconViewRazterizationForNormalSizeListViews]
  -[SBRootFolderViewPageManagementLayoutManager cleanUpViewsInFolderView:]
  -[SBRootFolderViewPageManagementLayoutManager transitionCount]
  -[SBRootFolderViewPageManagementLayoutManager setTransitionCount:]
  -[SBRootFolderViewPageManagementLayoutManager setActiveTransitionCount:]
  -[SBRootFolderViewPageManagementLayoutManager setLatestActiveTransitionAnimator:]
  -[SBRootFolderViewPageManagementLayoutManager makeMaterialViewsVisible]
  -[SBRootFolderViewPageManagementLayoutManager setLayoutAction:]
  -[SBRootFolderViewPageManagementLayoutManager folderListIndexToAnimateOutForList:inFolder:avoidingList:]
  -[SBRootFolderViewPageManagementLayoutManager _updateCloseBoxVisibilityWithAnimation:]
  -[SBRootFolderViewPageManagementLayoutManager rasterizeIconViewsForImprovedLegibilityInScaledDownListViews]
  -[SBRootFolderViewPageManagementLayoutManager _canRasterizeIconView:]
  -[SBRootFolderViewPageManagementLayoutManager allowsPageHiding]
  -[SBRootFolderViewPageManagementLayoutManager setLayoutConfiguration:]
  -[SBRootFolderViewPageManagementLayoutManager newCellBackgroundMaterialViewInFolderView:initialWeighting:]
  -[SBRootFolderViewPageManagementLayoutManager setRootListView:]
  -[SBRootFolderViewPageManagementLayoutManager setPageManagementRootFolder:]
  -[SBRootFolderViewPageManagementLayoutManager setCompletionURL:]
  -[SBRootFolderViewPageManagementLayoutManager _allowsCloseBoxForIconView:]
  -[SBRootFolderViewPageManagementLayoutManager pageContainsBookmarkIcons:]
  -[SBRootFolderViewPageManagementLayoutManager _removePageIcon:]
  -[SBRootFolderViewPageManagementLayoutManager presentSecondPageDeleteConfirmationAlertBookmarksFoundForIconView:completion:]
  -[SBRootFolderViewPageManagementLayoutManager presentPageDeleteConfirmationAlertForIconView:completion:]
  -[SBRootFolderViewPageManagementLayoutManager pageManagementRootFolder]
  -[SBRootFolderViewPageManagementLayoutManager latestActiveTransitionAnimator]
  -[SBRootFolderViewPageManagementLayoutManager layoutAction]
  -[SBRootFolderViewPageManagementLayoutManager completionURL]
  -[SBRootFolderViewPageManagementLayoutManager setBackgroundTapGestureRecognizer:]


SBIconImageCrossfadeView : SBFTouchPassThroughView
 @property  UIView *containerView
 @property  <SBCrossfadingIconImageSource> *iconImageSource
 @property  UIView *iconImageView
 @property  UIView *crossfadeView
 @property  UIView *backgroundView
 @property  UIView *crossfadeContainerView
 @property  double morphFraction
 @property  BOOL masksCorners
 @property  BOOL performsTrueCrossfade
 @property  {CGPoint=dd} stretchAnchorPoint
 @property  unsigned long crossfadeStyle

  // class methods
  +[SBIconImageCrossfadeView _containerViewClass]

  // instance methods
  -[SBIconImageCrossfadeView performsTrueCrossfade]
  -[SBIconImageCrossfadeView morphFraction]
  -[SBIconImageCrossfadeView cleanup]
  -[SBIconImageCrossfadeView setCrossfadeFraction:]
  -[SBIconImageCrossfadeView setCrossfadeViewFadeFraction:]
  -[SBIconImageCrossfadeView setMorphFraction:]
  -[SBIconImageCrossfadeView setMasksCorners:]
  -[SBIconImageCrossfadeView crossfadeContainerView]
  -[SBIconImageCrossfadeView containerView]
  -[SBIconImageCrossfadeView .cxx_destruct]
  -[SBIconImageCrossfadeView crossfadeView]
  -[SBIconImageCrossfadeView layoutSubviews]
  -[SBIconImageCrossfadeView masksCorners]
  -[SBIconImageCrossfadeView _applyCornerRadius:]
  -[SBIconImageCrossfadeView setPerformsTrueCrossfade:]
  -[SBIconImageCrossfadeView setStretchAnchorPoint:]
  -[SBIconImageCrossfadeView crossfadeStyle]
  -[SBIconImageCrossfadeView _setCornerRadiusEnabled:]
  -[SBIconImageCrossfadeView _applyCrossfadeScaleX:scaleY:]
  -[SBIconImageCrossfadeView iconImageView]
  -[SBIconImageCrossfadeView setCrossfadeStyle:]
  -[SBIconImageCrossfadeView prepareGeometry]
  -[SBIconImageCrossfadeView iconImageSource]
  -[SBIconImageCrossfadeView stretchAnchorPoint]
  -[SBIconImageCrossfadeView setAppSnapshotCornerRadius:]
  -[SBIconImageCrossfadeView _updateCornerMask]
  -[SBIconImageCrossfadeView setSourceFadeFraction:]
  -[SBIconImageCrossfadeView backgroundView]
  -[SBIconImageCrossfadeView initWithSource:crossfadeView:]


SBIconListGridCellInfo : NSObject <NSCopying, BSDescriptionProviding>
 @property  {SBHIconGridSize=SS} gridSize
 @property  unsigned long numberOfUsedRows
 @property  unsigned long numberOfUsedColumns
 @property  {SBHIconGridSize=SS} usedGridSize
 @property  BOOL layoutOutOfBounds
 @property  unsigned long firstEmptyGridCellIndex
 @property  unsigned long lastUsedGridCellIndex
 @property  unsigned long firstTrailingEmptyGridCellIndex
 @property  NSString *layoutDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListGridCellInfo layoutDescription]
  -[SBIconListGridCellInfo numberOfUsedColumns]
  -[SBIconListGridCellInfo setGridSize:]
  -[SBIconListGridCellInfo gridSize]
  -[SBIconListGridCellInfo approximateLayoutPositionForGridCellIndex:]
  -[SBIconListGridCellInfo gridSizeForGridCellIndex:]
  -[SBIconListGridCellInfo usedGridSize]
  -[SBIconListGridCellInfo gridCellIndexForCoordinate:]
  -[SBIconListGridCellInfo numberOfUsedGridCellsInColumn:]
  -[SBIconListGridCellInfo lastUsedGridCellIndex]
  -[SBIconListGridCellInfo addEmptyRows:]
  -[SBIconListGridCellInfo indexOfFirstGridCellRangeOfSize:inGridCellIndexRange:passingTest:]
  -[SBIconListGridCellInfo setFirstTrailingEmptyGridCellIndex:]
  -[SBIconListGridCellInfo coordinateForGridCellIndex:]
  -[SBIconListGridCellInfo succinctDescriptionBuilder]
  -[SBIconListGridCellInfo setIconIndex:forGridCellIndex:]
  -[SBIconListGridCellInfo indexOfOutOfBoundsIconInRange:]
  -[SBIconListGridCellInfo clearAllIconAndGridCellIndexes]
  -[SBIconListGridCellInfo descriptionBuilderWithMultilinePrefix:]
  -[SBIconListGridCellInfo numberOfUsedGridCellsInRow:columnRange:]
  -[SBIconListGridCellInfo init]
  -[SBIconListGridCellInfo descriptionWithMultilinePrefix:]
  -[SBIconListGridCellInfo gridCellIndexForIconIndex:]
  -[SBIconListGridCellInfo maxGridCellIndexForIconIndex:]
  -[SBIconListGridCellInfo getUniqueIconIndexes:inGridRange:]
  -[SBIconListGridCellInfo addEmptyColumns:]
  -[SBIconListGridCellInfo succinctDescription]
  -[SBIconListGridCellInfo gridRangeForGridCellIndex:]
  -[SBIconListGridCellInfo indexOfFirstGridCellRangeOfSize:inGridRange:passingTest:]
  -[SBIconListGridCellInfo iconIndexForGridCellIndex:]
  -[SBIconListGridCellInfo firstTrailingEmptyGridCellIndex]
  -[SBIconListGridCellInfo indexOfFirstEmptyGridCellRangeOfSize:]
  -[SBIconListGridCellInfo numberOfUsedGridCellsInRow:]
  -[SBIconListGridCellInfo setFirstEmptyGridCellIndex:]
  -[SBIconListGridCellInfo numberOfUsedRows]
  -[SBIconListGridCellInfo dealloc]
  -[SBIconListGridCellInfo approximateLayoutPositionForCoordinate:]
  -[SBIconListGridCellInfo copyWithZone:]
  -[SBIconListGridCellInfo setLastUsedGridCellIndex:]
  -[SBIconListGridCellInfo iconIndexForCoordinate:]
  -[SBIconListGridCellInfo setIconIndexes:inGridRange:]
  -[SBIconListGridCellInfo isLayoutOutOfBounds]
  -[SBIconListGridCellInfo firstEmptyGridCellIndex]
  -[SBIconListGridCellInfo getIconIndexes:inGridRange:]
  -[SBIconListGridCellInfo isOutOfBoundsAtIconIndex:]
  -[SBIconListGridCellInfo setGridCellIndex:forIconIndex:]
  -[SBIconListGridCellInfo numberOfUsedGridCellsInColumn:rowRange:]
  -[SBIconListGridCellInfo countOfIconsOfSize:]


SBIconStateUnarchiveResult : NSObject <SBIconStateUnarchiveContext, BSDescriptionProviding>
 @property  SBRootFolder *rootFolder
 @property  NSDictionary *metadata
 @property  BOOL valid
 @property  BOOL dirty
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconStateUnarchiveResult isDirty]
  -[SBIconStateUnarchiveResult _setMetadata:]
  -[SBIconStateUnarchiveResult _pushFolder:]
  -[SBIconStateUnarchiveResult _noteWidgetUniqueIdentifierWasUnarchived:]
  -[SBIconStateUnarchiveResult isValid]
  -[SBIconStateUnarchiveResult _currentFolder]
  -[SBIconStateUnarchiveResult _noteExitedNode]
  -[SBIconStateUnarchiveResult .cxx_destruct]
  -[SBIconStateUnarchiveResult succinctDescriptionBuilder]
  -[SBIconStateUnarchiveResult descriptionBuilderWithMultilinePrefix:]
  -[SBIconStateUnarchiveResult descriptionWithMultilinePrefix:]
  -[SBIconStateUnarchiveResult _noteSignificantDeviation]
  -[SBIconStateUnarchiveResult succinctDescription]
  -[SBIconStateUnarchiveResult rootFolder]
  -[SBIconStateUnarchiveResult metadata]
  -[SBIconStateUnarchiveResult _noteNodeIdentifierWasUnarchived:]
  -[SBIconStateUnarchiveResult _isNodeIdentifierAlreadyUnarchived:]
  -[SBIconStateUnarchiveResult _noteRepresentationIsCorrupted]
  -[SBIconStateUnarchiveResult _popFolder]
  -[SBIconStateUnarchiveResult _setRootFolder:]
  -[SBIconStateUnarchiveResult _currentParseDepth]
  -[SBIconStateUnarchiveResult _noteEnteredNode]
  -[SBIconStateUnarchiveResult _isWidgetUniqueIdentifierAlreadyUnarchived:]


SBHIconStateArchiver : NSObject
  // class methods
  +[SBHIconStateArchiver unarchiveRootFolderFromArchive:withIconSource:]
  +[SBHIconStateArchiver _representationForApplicationIcon:inModel:]
  +[SBHIconStateArchiver _widgetDataSourceIsSuggestion:]
  +[SBHIconStateArchiver _representationForCustomIcon:inModel:]
  +[SBHIconStateArchiver _representationForIcon:inModel:]
  +[SBHIconStateArchiver modernizeRootArchive:]
  +[SBHIconStateArchiver _representationForList:inModel:]
  +[SBHIconStateArchiver _nodeAtPath:inNode:]
  +[SBHIconStateArchiver leafIdentifiersFromArchive:]
  +[SBHIconStateArchiver folderPathForLeafIdentifier:inArchive:iconSource:]
  +[SBHIconStateArchiver indexPathForLeafIdentifier:inArchive:]
  +[SBHIconStateArchiver _metadataForList:inModel:]
  +[SBHIconStateArchiver _pathForNode:toIdentifier:]
  +[SBHIconStateArchiver _representationForFolder:inModel:]
  +[SBHIconStateArchiver _folderTypeForFolder:]
  +[SBHIconStateArchiver leafIdentifiersInListAtIndexPath:inArchive:]
  +[SBHIconStateArchiver _iconContainsMultipleRepresentations:]
  +[SBHIconStateArchiver _representationForNode:inModel:]
  +[SBHIconStateArchiver iconStateRepresentationForFolder:inModel:]
  +[SBHIconStateArchiver _representationsForIcon:inModel:]
  +[SBHIconStateArchiver archiveRootFolderInModel:metadata:]
  +[SBHIconStateArchiver _addValuesForCustomIconElement:toRepresentation:]
  +[SBHIconStateArchiver _addLeafNodesForNode:toSet:]


SBHIconStateUnarchiver : NSObject
 @property  id archive
 @property  BOOL postNewsWidgetMigration
 @property  SBHIconModel *iconModel
 @property  <SBHIconStateUnarchiverIconSource> *iconSource
 @property  <SBHIconStateUnarchiverDelegate> *delegate
 @property  BOOL removesEmptyFolders

  // class methods
  +[SBHIconStateUnarchiver _getFolderDisplayName:defaultDisplayName:uniqueIdentifier:forRepresentation:iconSource:]

  // instance methods
  -[SBHIconStateUnarchiver _allowedGridSizeClassesForFolderClass:]
  -[SBHIconStateUnarchiver iconSource]
  -[SBHIconStateUnarchiver _listFromRepresentation:listGridSize:listWithNonDefaultSizedIconsGridSize:gridSizeClassSizes:listRotatedLayoutClusterGridSizeClass:listAllowedGridSizeClasses:listAddOptions:identifier:context:overflow:]
  -[SBHIconStateUnarchiver _canAddIconDataSource:toIcon:]
  -[SBHIconStateUnarchiver unarchive]
  -[SBHIconStateUnarchiver _listWithIcons:listGridSize:listWithNonDefaultSizedIconsGridSize:gridSizeClassSizes:listRotatedLayoutClusterGridSizeClass:listAllowedGridSizeClasses:listAddOptions:identifier:folder:overflow:]
  -[SBHIconStateUnarchiver _nodeFromRepresentation:context:]
  -[SBHIconStateUnarchiver .cxx_destruct]
  -[SBHIconStateUnarchiver _maxListCountForFolders]
  -[SBHIconStateUnarchiver iconModel]
  -[SBHIconStateUnarchiver postNewsWidgetMigration]
  -[SBHIconStateUnarchiver _getFolderDisplayName:defaultDisplayName:uniqueIdentifier:forRepresentation:]
  -[SBHIconStateUnarchiver removesEmptyFolders]
  -[SBHIconStateUnarchiver initWithArchive:]
  -[SBHIconStateUnarchiver setDelegate:]
  -[SBHIconStateUnarchiver effectiveDelegate]
  -[SBHIconStateUnarchiver setIconModel:]
  -[SBHIconStateUnarchiver _gridSizeClassSizes]
  -[SBHIconStateUnarchiver init]
  -[SBHIconStateUnarchiver _listWithNonDefaultSizedIconsGridSizeForFolderClass:]
  -[SBHIconStateUnarchiver archive]
  -[SBHIconStateUnarchiver _allowedGridSizeClassesForDock]
  -[SBHIconStateUnarchiver setRemovesEmptyFolders:]
  -[SBHIconStateUnarchiver _customIconElementFromRepresentation:context:]
  -[SBHIconStateUnarchiver initWithArchive:iconModel:]
  -[SBHIconStateUnarchiver _suggestionSourceFromRepresentation:]
  -[SBHIconStateUnarchiver _applicationIconFromRepresentation:context:]
  -[SBHIconStateUnarchiver _widgetIconFromRepresentation:context:]
  -[SBHIconStateUnarchiver _iconFromRepresentation:withContext:]
  -[SBHIconStateUnarchiver delegate]
  -[SBHIconStateUnarchiver _allowedGridSizeClassesForTodayList]
  -[SBHIconStateUnarchiver _folderFromRepresentation:withContext:]
  -[SBHIconStateUnarchiver _listGridSizeForFolderClass:]
  -[SBHIconStateUnarchiver _maxIconCountForDock]
  -[SBHIconStateUnarchiver setIconSource:]
  -[SBHIconStateUnarchiver _newFolderIconForFolder:]
  -[SBHIconStateUnarchiver _listRotatedLayoutClusterGridSizeClass]
  -[SBHIconStateUnarchiver _folderClassForFolderType:context:]
  -[SBHIconStateUnarchiver _listsAllowRotatedLayoutForFolderClass:]


SBIconStateFolderPath : NSObject
 @property  unsigned long count

  // instance methods
  -[SBIconStateFolderPath .cxx_destruct]
  -[SBIconStateFolderPath count]
  -[SBIconStateFolderPath init]
  -[SBIconStateFolderPath enumerateFoldersUsingBlock:]
  -[SBIconStateFolderPath addFolderWithName:defaultName:uniqueIdentifier:indexPath:]
  -[SBIconStateFolderPath folderDefaultNameAtIndex:]
  -[SBIconStateFolderPath folderUniqueIdentifierAtIndex:]
  -[SBIconStateFolderPath folderIndexPathAtIndex:]
  -[SBIconStateFolderPath folderNameAtIndex:]


SBHIconStateBuilder : NSObject
  // class methods
  +[SBHIconStateBuilder iconStateFolderWithName:iconLists:]
  +[SBHIconStateBuilder iconStateByReplacingTodayListsInIconState:withTodayListsFromIconState:]
  +[SBHIconStateBuilder iconStateWithIconLists:dock:]
  +[SBHIconStateBuilder iconStateWithIconLists:]


SBHIconRelativePath : NSObject <BSDescriptionProviding, NSCopying, NSCoding>
 @property  NSString *folderIdentifier
 @property  NSString *listIdentifier
 @property  NSArray *priorIconIdentifiers
 @property  NSArray *subsequentIconIdentifiers
 @property  unsigned long gridCellInfoOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHIconRelativePath supportsSecureCoding]

  // instance methods
  -[SBHIconRelativePath listIdentifier]
  -[SBHIconRelativePath initWithCoder:]
  -[SBHIconRelativePath gridCellInfoOptions]
  -[SBHIconRelativePath .cxx_destruct]
  -[SBHIconRelativePath succinctDescriptionBuilder]
  -[SBHIconRelativePath descriptionBuilderWithMultilinePrefix:]
  -[SBHIconRelativePath isEqual:]
  -[SBHIconRelativePath descriptionWithMultilinePrefix:]
  -[SBHIconRelativePath succinctDescription]
  -[SBHIconRelativePath folderIdentifier]
  -[SBHIconRelativePath copyWithZone:]
  -[SBHIconRelativePath encodeWithCoder:]
  -[SBHIconRelativePath initWithFolderIdentifier:listIdentifier:priorIconIdentifiers:subsequentIconIdentifiers:gridCellInfoOptions:]
  -[SBHIconRelativePath subsequentIconIdentifiers]
  -[SBHIconRelativePath priorIconIdentifiers]
  -[SBHIconRelativePath iconRelativePathWithFolderIdentifier:listIdentifier:]


SBFolderControllerConfiguration : NSObject <NSCopying, BSDescriptionProviding>
 @property  SBFolder *folder
 @property  long long orientation
 @property  unsigned long allowedOrientations
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  <SBIconViewProviding> *iconViewProvider
 @property  <SBNestingViewControllerDelegate> *delegate
 @property  <SBFolderControllerDelegate> *folderDelegate
 @property  _UILegibilitySettings *legibilitySettings
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  SBIconPageIndicatorImageSetCache *iconPageIndicatorImageSetCache
 @property  SBFolderControllerAnimationContext *animationContext
 @property  UIView *headerView
 @property  double headerHeight
 @property  NSString *originatingIconLocation
 @property  unsigned long userInterfaceLayoutDirectionHandling
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} initialViewFrame
 @property  BOOL snapsToPageBoundariesAfterScrolling
 @property  BOOL addsFocusGuidesForWrapping
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFolderControllerConfiguration setIconViewProvider:]
  -[SBFolderControllerConfiguration setOrientation:]
  -[SBFolderControllerConfiguration headerHeight]
  -[SBFolderControllerConfiguration setAddsFocusGuidesForWrapping:]
  -[SBFolderControllerConfiguration folderIconImageCache]
  -[SBFolderControllerConfiguration snapsToPageBoundariesAfterScrolling]
  -[SBFolderControllerConfiguration setIconPageIndicatorImageSetCache:]
  -[SBFolderControllerConfiguration setFolder:]
  -[SBFolderControllerConfiguration iconViewProvider]
  -[SBFolderControllerConfiguration setUserInterfaceLayoutDirectionHandling:]
  -[SBFolderControllerConfiguration .cxx_destruct]
  -[SBFolderControllerConfiguration iconImageCache]
  -[SBFolderControllerConfiguration succinctDescriptionBuilder]
  -[SBFolderControllerConfiguration setLegibilitySettings:]
  -[SBFolderControllerConfiguration setDelegate:]
  -[SBFolderControllerConfiguration setHeaderView:]
  -[SBFolderControllerConfiguration setIconImageCache:]
  -[SBFolderControllerConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBFolderControllerConfiguration init]
  -[SBFolderControllerConfiguration descriptionWithMultilinePrefix:]
  -[SBFolderControllerConfiguration succinctDescription]
  -[SBFolderControllerConfiguration setFolderIconImageCache:]
  -[SBFolderControllerConfiguration setListLayoutProvider:]
  -[SBFolderControllerConfiguration folder]
  -[SBFolderControllerConfiguration userInterfaceLayoutDirectionHandling]
  -[SBFolderControllerConfiguration orientation]
  -[SBFolderControllerConfiguration addsFocusGuidesForWrapping]
  -[SBFolderControllerConfiguration headerView]
  -[SBFolderControllerConfiguration initWithConfiguration:]
  -[SBFolderControllerConfiguration delegate]
  -[SBFolderControllerConfiguration allowedOrientations]
  -[SBFolderControllerConfiguration setHeaderHeight:]
  -[SBFolderControllerConfiguration copyWithZone:]
  -[SBFolderControllerConfiguration listLayoutProvider]
  -[SBFolderControllerConfiguration setAnimationContext:]
  -[SBFolderControllerConfiguration animationContext]
  -[SBFolderControllerConfiguration legibilitySettings]
  -[SBFolderControllerConfiguration iconPageIndicatorImageSetCache]
  -[SBFolderControllerConfiguration setFolderDelegate:]
  -[SBFolderControllerConfiguration setOriginatingIconLocation:]
  -[SBFolderControllerConfiguration originatingIconLocation]
  -[SBFolderControllerConfiguration folderDelegate]
  -[SBFolderControllerConfiguration setAllowedOrientations:]
  -[SBFolderControllerConfiguration initialViewFrame]
  -[SBFolderControllerConfiguration setInitialViewFrame:]
  -[SBFolderControllerConfiguration setSnapsToPageBoundariesAfterScrolling:]


SBHomeScreenMaterialView : UIView
 @property  BOOL highlighted
 @property  double brightness
 @property  UIView *backgroundView
 @property  {UIEdgeInsets=dddd} backgroundInsets
 @property  UIImage *foregroundImage

  // class methods
  +[SBHomeScreenMaterialView colorBurnContentImageForImage:]

  // instance methods
  -[SBHomeScreenMaterialView setHighlighted:]
  -[SBHomeScreenMaterialView setLegibilityStyle:]
  -[SBHomeScreenMaterialView setBrightness:]
  -[SBHomeScreenMaterialView .cxx_destruct]
  -[SBHomeScreenMaterialView layoutSubviews]
  -[SBHomeScreenMaterialView setBackgroundInsets:]
  -[SBHomeScreenMaterialView setForegroundImage:]
  -[SBHomeScreenMaterialView foregroundImage]
  -[SBHomeScreenMaterialView brightness]
  -[SBHomeScreenMaterialView _addHighlightViewIfNecessary]
  -[SBHomeScreenMaterialView isHighlighted]
  -[SBHomeScreenMaterialView initWithFrame:]
  -[SBHomeScreenMaterialView initWithFrame:backgroundView:foregroundImage:]
  -[SBHomeScreenMaterialView backgroundInsets]
  -[SBHomeScreenMaterialView backgroundView]


SBHPeopleWidgetPersonDetailZoomAnimator : NSObject <SBHViewControllerTransitionAnimating>
 @property  SBHPeopleWidgetPersonDetailInteractionSettings *settings
 @property  SBFTouchPassThroughView *matchMoveView
 @property  SBFTouchPassThroughView *sourceContainerView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceContentFrameInMatchMoveViewSpace
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} targetContentFrameInMatchMoveViewSpace
 @property  long long currentEndpoint

  // instance methods
  -[SBHPeopleWidgetPersonDetailZoomAnimator setMatchMoveView:]
  -[SBHPeopleWidgetPersonDetailZoomAnimator .cxx_destruct]
  -[SBHPeopleWidgetPersonDetailZoomAnimator init]
  -[SBHPeopleWidgetPersonDetailZoomAnimator matchMoveView]
  -[SBHPeopleWidgetPersonDetailZoomAnimator settings]
  -[SBHPeopleWidgetPersonDetailZoomAnimator finalizeAnimationAtEndpoint:withContext:]
  -[SBHPeopleWidgetPersonDetailZoomAnimator sourceContainerView]
  -[SBHPeopleWidgetPersonDetailZoomAnimator prepareToAnimateFromEndpoint:withContext:]
  -[SBHPeopleWidgetPersonDetailZoomAnimator animateToEndpoint:withContext:completion:]
  -[SBHPeopleWidgetPersonDetailZoomAnimator setTargetContentFrameInMatchMoveViewSpace:]
  -[SBHPeopleWidgetPersonDetailZoomAnimator setSourceContentFrameInMatchMoveViewSpace:]
  -[SBHPeopleWidgetPersonDetailZoomAnimator setSourceContainerView:]
  -[SBHPeopleWidgetPersonDetailZoomAnimator _configureForEndpoint:context:inMode:completion:]
  -[SBHPeopleWidgetPersonDetailZoomAnimator currentEndpoint]
  -[SBHPeopleWidgetPersonDetailZoomAnimator setCurrentEndpoint:]
  -[SBHPeopleWidgetPersonDetailZoomAnimator targetContentFrameInMatchMoveViewSpace]
  -[SBHPeopleWidgetPersonDetailZoomAnimator sourceContentFrameInMatchMoveViewSpace]


SBIconLabelImageParametersBuilder : NSObject
 @property  NSString *text
 @property  SBIcon *icon
 @property  SBIconView *iconView
 @property  Class iconViewClass
 @property  NSString *iconLocation
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  {CGSize=dd} iconImageSize
 @property  _UILegibilitySettings *legibilitySettings
 @property  BOOL accessibilityReduceTransparencyEnabled
 @property  NSString *contentSizeCategory
 @property  UIColor *focusHighlightColor
 @property  double scale
 @property  long long labelAccessoryType
 @property  UIFont *font
 @property  UIColor *textColor
 @property  {UIEdgeInsets=dddd} textInsets
 @property  NSString *overrideText

  // class methods
  +[SBIconLabelImageParametersBuilder _fontSizeParameterForContentSizeCategory:]
  +[SBIconLabelImageParametersBuilder defaultFontForContentSizeCategory:languageInsets:]
  +[SBIconLabelImageParametersBuilder insetsForFont:]
  +[SBIconLabelImageParametersBuilder _normalFontSizeForSizeParameter:]

  // instance methods
  -[SBIconLabelImageParametersBuilder iconImageSize]
  -[SBIconLabelImageParametersBuilder setText:]
  -[SBIconLabelImageParametersBuilder icon]
  -[SBIconLabelImageParametersBuilder setFont:]
  -[SBIconLabelImageParametersBuilder setAccessibilityReduceTransparencyEnabled:]
  -[SBIconLabelImageParametersBuilder .cxx_destruct]
  -[SBIconLabelImageParametersBuilder textColor]
  -[SBIconLabelImageParametersBuilder listLayout]
  -[SBIconLabelImageParametersBuilder setLegibilitySettings:]
  -[SBIconLabelImageParametersBuilder iconLocation]
  -[SBIconLabelImageParametersBuilder init]
  -[SBIconLabelImageParametersBuilder labelAccessoryType]
  -[SBIconLabelImageParametersBuilder setTextColor:]
  -[SBIconLabelImageParametersBuilder font]
  -[SBIconLabelImageParametersBuilder setIcon:]
  -[SBIconLabelImageParametersBuilder _fontWithLanguageInsets:]
  -[SBIconLabelImageParametersBuilder setListLayoutProvider:]
  -[SBIconLabelImageParametersBuilder _maxSize]
  -[SBIconLabelImageParametersBuilder buildParameters]
  -[SBIconLabelImageParametersBuilder iconViewClass]
  -[SBIconLabelImageParametersBuilder _canTightenLabel]
  -[SBIconLabelImageParametersBuilder focusHighlightColor]
  -[SBIconLabelImageParametersBuilder textInsets]
  -[SBIconLabelImageParametersBuilder setScale:]
  -[SBIconLabelImageParametersBuilder setContentSizeCategory:]
  -[SBIconLabelImageParametersBuilder contentSizeCategory]
  -[SBIconLabelImageParametersBuilder setTextInsets:]
  -[SBIconLabelImageParametersBuilder setIconViewClass:]
  -[SBIconLabelImageParametersBuilder setFocusHighlightColor:]
  -[SBIconLabelImageParametersBuilder _canTruncateLabel]
  -[SBIconLabelImageParametersBuilder overrideText]
  -[SBIconLabelImageParametersBuilder scale]
  -[SBIconLabelImageParametersBuilder listLayoutProvider]
  -[SBIconLabelImageParametersBuilder _hasValidInputs]
  -[SBIconLabelImageParametersBuilder text]
  -[SBIconLabelImageParametersBuilder iconView]
  -[SBIconLabelImageParametersBuilder setIconView:]
  -[SBIconLabelImageParametersBuilder setIcon:forLocation:]
  -[SBIconLabelImageParametersBuilder isAccessibilityReduceTransparencyEnabled]
  -[SBIconLabelImageParametersBuilder legibilitySettings]
  -[SBIconLabelImageParametersBuilder setLabelAccessoryType:]
  -[SBIconLabelImageParametersBuilder setOverrideText:]


SBIcon : NSObject <SBHIconCollationSupport, SBHUniquelyIdentifiable, SBIconIndexNode, BSDescriptionProviding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  id overrideBadgeNumberOrString
 @property  NSArray *iTunesCategoriesOrderedByRelevancy
 @property  <SBIconDelegate> *delegate
 @property  BOOL shouldWarmUp
 @property  BOOL canGenerateIconsInBackground
 @property  NSString *iconImageCacheIdentifier
 @property  NSString *displayName
 @property  BOOL canTruncateLabel
 @property  BOOL canTightenLabel
 @property  NSArray *tags
 @property  long long badgeValue
 @property  id badgeNumberOrString
 @property  long long labelAccessoryType
 @property  BOOL launchEnabled
 @property  BOOL launchDisabledForObscuredReason
 @property  BOOL supportsStackConfiguration
 @property  BOOL supportsRasterization
 @property  long long progressState
 @property  double progressPercent
 @property  BOOL progressPaused
 @property  BOOL shouldAnimateProgress
 @property  BOOL uninstalled
 @property  BOOL uninstallSupported
 @property  NSString *uninstallAlertTitle
 @property  NSString *uninstallAlertBody
 @property  NSString *uninstallAlertConfirmTitle
 @property  NSString *uninstallAlertCancelTitle
 @property  BOOL timedOut
 @property  NSArray *folderTitleOptions
 @property  NSString *folderFallbackTitle
 @property  BOOL canReceiveGrabbedIcon
 @property  BOOL canBeReceivedByIcon
 @property  BOOL canBeAddedToMultiItemDrag
 @property  NSString *automationID
 @property  BOOL canBeAddedToSubfolder
 @property  unsigned long gridSizeClass
 @property  unsigned long supportedGridSizeClasses
 @property  NSUserActivity *draggingUserActivity
 @property  NSString *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIcon canGenerateIconsInBackground]
  +[SBIcon genericIconImageWithInfo:]
  +[SBIcon iconImageFromUnmaskedImage:info:]
  +[SBIcon hasIconImage]
  +[SBIcon forcesBackgroundIconGeneration]

  // instance methods
  -[SBIcon possibleUserTapDidCancel]
  -[SBIcon canBeAddedToMultiItemDrag]
  -[SBIcon automationID]
  -[SBIcon iconImageCacheIdentifier]
  -[SBIcon displayName]
  -[SBIcon isApplicationIcon]
  -[SBIcon possibleUserTapBeganWithAbsoluteTime:andContinuousTime:]
  -[SBIcon setGridSizeClass:]
  -[SBIcon isTimedOut]
  -[SBIcon iconImageViewClassForLocation:]
  -[SBIcon applicationPlaceholder]
  -[SBIcon application]
  -[SBIcon uniqueIdentifier]
  -[SBIcon applicationBundleID]
  -[SBIcon indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBIcon nodeIdentifier]
  -[SBIcon badgeValue]
  -[SBIcon canReceiveGrabbedIcon]
  -[SBIcon progressState]
  -[SBIcon supportedGridSizeClasses]
  -[SBIcon hasObserver:]
  -[SBIcon .cxx_destruct]
  -[SBIcon enumerateObserversUsingBlock:]
  -[SBIcon progressPercent]
  -[SBIcon supportsStackConfiguration]
  -[SBIcon containsNodeIdentifier:]
  -[SBIcon displayNameForLocation:]
  -[SBIcon succinctDescriptionBuilder]
  -[SBIcon isFolderIcon]
  -[SBIcon setDelegate:]
  -[SBIcon canGenerateIconsInBackground]
  -[SBIcon iconImageWithInfo:]
  -[SBIcon nodesAlongIndexPath:consumedIndexes:]
  -[SBIcon descriptionBuilderWithMultilinePrefix:]
  -[SBIcon isWidgetIcon]
  -[SBIcon localeChanged]
  -[SBIcon labelAccessoryType]
  -[SBIcon setBadge:]
  -[SBIcon descriptionWithMultilinePrefix:]
  -[SBIcon supportsRasterization]
  -[SBIcon succinctDescription]
  -[SBIcon iTunesCategoriesOrderedByRelevancy]
  -[SBIcon gridSizeClass]
  -[SBIcon addObserver:]
  -[SBIcon nodeDescriptionWithPrefix:]
  -[SBIcon isUninstalled]
  -[SBIcon folder]
  -[SBIcon badgeNumberOrString]
  -[SBIcon addNodeObserver:]
  -[SBIcon canBeReceivedByIcon]
  -[SBIcon leafIdentifier]
  -[SBIcon canBeAddedToSubfolder]
  -[SBIcon delegate]
  -[SBIcon isUninstallSupported]
  -[SBIcon generateIconImageWithInfo:]
  -[SBIcon isWidgetStackIcon]
  -[SBIcon copyWithZone:]
  -[SBIcon isAdditionalItemsIndicatorIcon]
  -[SBIcon isPlaceholder]
  -[SBIcon genericIconImageWithInfo:]
  -[SBIcon removeObserver:]
  -[SBIcon reloadIconImage]
  -[SBIcon isCategoryIcon]
  -[SBIcon isProgressPaused]
  -[SBIcon containedNodeIdentifiers]
  -[SBIcon unmaskedIconImageWithInfo:]
  -[SBIcon removeNodeObserver:]
  -[SBIcon tags]
  -[SBIcon _sbhIconLibraryCollationString]
  -[SBIcon isLeafIcon]
  -[SBIcon isBookmarkIcon]
  -[SBIcon setUninstalled]
  -[SBIcon completeUninstall]
  -[SBIcon isLaunchEnabled]
  -[SBIcon isLaunchDisabledForObscuredReason]
  -[SBIcon displayNameForObscuredDisabledLaunchForLocation:]
  -[SBIcon accessoryTypeForLocation:]
  -[SBIcon launchFromLocation:context:]
  -[SBIcon shouldAnimateProgress]
  -[SBIcon isAppClipIcon]
  -[SBIcon iconLibraryQueryingFilterStrings]
  -[SBIcon iconLibraryQueryingAlphaSortString]
  -[SBIcon localizedCompareDisplayNames:]
  -[SBIcon _sbhIconLibraryOverrideCollationSectionTitle]
  -[SBIcon isGrabbedIconPlaceholder]
  -[SBIcon folderTitleOptions]
  -[SBIcon folderFallbackTitle]
  -[SBIcon isDebugIcon]
  -[SBIcon noteBadgeDidChange]
  -[SBIcon archivableStateDidChange]
  -[SBIcon _notifyAccessoriesDidUpdate]
  -[SBIcon hasApplication]
  -[SBIcon hasApplicationPlaceholder]
  -[SBIcon uninstallAlertCancelTitle]
  -[SBIcon _notifyLaunchEnabledDidChange]
  -[SBIcon canTruncateLabel]
  -[SBIcon canTightenLabel]
  -[SBIcon statusDescriptionForLocation:]
  -[SBIcon overrideBadgeNumberOrString]
  -[SBIcon accessoryTextForLocation:]
  -[SBIcon representedSceneIdentifier]
  -[SBIcon isLibraryPodIcon]
  -[SBIcon parentFolderIcon]
  -[SBIcon _notifyImageDidUpdate]
  -[SBIcon isGridSizeClassAllowed:]
  -[SBIcon shouldWarmUp]
  -[SBIcon setOverrideBadgeNumberOrString:]
  -[SBIcon uninstallAlertTitle]
  -[SBIcon uninstallAlertBody]
  -[SBIcon uninstallAlertConfirmTitle]
  -[SBIcon draggingUserActivity]
  -[SBIcon setIconImageCacheIdentifier:]
  -[SBIcon isClusteredIconPlaceholder]


SBFolderContainerView : SBFTouchPassThroughView
 @property  SBFolderView *folderView
 @property  SBFolderContainerView *childFolderContainerView
 @property  UIView *backgroundView
 @property  double statusBarHeight

  // instance methods
  -[SBFolderContainerView setChildFolderContainerView:]
  -[SBFolderContainerView setStatusBarHeight:]
  -[SBFolderContainerView .cxx_destruct]
  -[SBFolderContainerView layoutSubviews]
  -[SBFolderContainerView statusBarHeight]
  -[SBFolderContainerView initWithFrame:]
  -[SBFolderContainerView setBackgroundView:]
  -[SBFolderContainerView initWithFolderView:]
  -[SBFolderContainerView folderView]
  -[SBFolderContainerView childFolderContainerView]
  -[SBFolderContainerView backgroundView]
  -[SBFolderContainerView _frameForFolderView:]


SBRootFolderControllerConfiguration : SBFolderControllerConfiguration
 @property  BOOL forSnapshot
 @property  BOOL dockExternal
 @property  BOOL dockPinnedForRotation
 @property  BOOL showsDoneButtonWhileEditing
 @property  unsigned long showsAddWidgetButtonWhileEditingAllowedOrientations
 @property  UIViewController *pullDownSearchViewController
 @property  UIViewController<SBHRootFolderCustomViewPresenting> *leadingCustomViewController
 @property  UIViewController<SBHRootFolderCustomViewPresenting> *trailingCustomViewController
 @property  UIViewController<SBHSidebarProvider> *sidebarViewController
 @property  BOOL sidebarVisible
 @property  BOOL sidebarPinned
 @property  unsigned long sidebarAllowedOrientations
 @property  unsigned long ignoresOverscrollOnFirstPageOrientations
 @property  unsigned long ignoresOverscrollOnLastPageOrientations
 @property  unsigned long folderPageManagementAllowedOrientations
 @property  CHSAvocadoDescriptorProvider *avocadoDescriptorProvider
 @property  UIViewController<SBHLegibility> *todayViewController

  // instance methods
  -[SBRootFolderControllerConfiguration setSidebarPinned:]
  -[SBRootFolderControllerConfiguration setTodayViewController:]
  -[SBRootFolderControllerConfiguration isSidebarPinned]
  -[SBRootFolderControllerConfiguration leadingCustomViewController]
  -[SBRootFolderControllerConfiguration setLeadingCustomViewController:]
  -[SBRootFolderControllerConfiguration trailingCustomViewController]
  -[SBRootFolderControllerConfiguration isDockPinnedForRotation]
  -[SBRootFolderControllerConfiguration setDockPinnedForRotation:]
  -[SBRootFolderControllerConfiguration setSidebarViewController:]
  -[SBRootFolderControllerConfiguration setTrailingCustomViewController:]
  -[SBRootFolderControllerConfiguration showsDoneButtonWhileEditing]
  -[SBRootFolderControllerConfiguration sidebarViewController]
  -[SBRootFolderControllerConfiguration setShowsDoneButtonWhileEditing:]
  -[SBRootFolderControllerConfiguration isSidebarVisible]
  -[SBRootFolderControllerConfiguration ignoresOverscrollOnFirstPageOrientations]
  -[SBRootFolderControllerConfiguration avocadoDescriptorProvider]
  -[SBRootFolderControllerConfiguration ignoresOverscrollOnLastPageOrientations]
  -[SBRootFolderControllerConfiguration .cxx_destruct]
  -[SBRootFolderControllerConfiguration isDockExternal]
  -[SBRootFolderControllerConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBRootFolderControllerConfiguration init]
  -[SBRootFolderControllerConfiguration folderPageManagementAllowedOrientations]
  -[SBRootFolderControllerConfiguration initWithConfiguration:]
  -[SBRootFolderControllerConfiguration todayViewController]
  -[SBRootFolderControllerConfiguration sidebarAllowedOrientations]
  -[SBRootFolderControllerConfiguration showsAddWidgetButtonWhileEditingAllowedOrientations]
  -[SBRootFolderControllerConfiguration pullDownSearchViewController]
  -[SBRootFolderControllerConfiguration setPullDownSearchViewController:]
  -[SBRootFolderControllerConfiguration isForSnapshot]
  -[SBRootFolderControllerConfiguration setAvocadoDescriptorProvider:]
  -[SBRootFolderControllerConfiguration setDockExternal:]
  -[SBRootFolderControllerConfiguration setForSnapshot:]
  -[SBRootFolderControllerConfiguration setShowsAddWidgetButtonWhileEditingAllowedOrientations:]
  -[SBRootFolderControllerConfiguration setSidebarVisible:]
  -[SBRootFolderControllerConfiguration setSidebarAllowedOrientations:]
  -[SBRootFolderControllerConfiguration setIgnoresOverscrollOnFirstPageOrientations:]
  -[SBRootFolderControllerConfiguration setIgnoresOverscrollOnLastPageOrientations:]
  -[SBRootFolderControllerConfiguration setFolderPageManagementAllowedOrientations:]


SBHIconLabelVisualConfiguration : NSObject <NSCopying, BSDescriptionProviding>
 @property  double fontSize
 @property  double baselineOffsetFromImage
 @property  double height
 @property  double extraWidth
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconLabelVisualConfiguration fontSize]
  -[SBHIconLabelVisualConfiguration extraWidth]
  -[SBHIconLabelVisualConfiguration succinctDescriptionBuilder]
  -[SBHIconLabelVisualConfiguration baselineOffsetFromImage]
  -[SBHIconLabelVisualConfiguration setBaselineOffsetFromImage:]
  -[SBHIconLabelVisualConfiguration setHeight:]
  -[SBHIconLabelVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHIconLabelVisualConfiguration init]
  -[SBHIconLabelVisualConfiguration height]
  -[SBHIconLabelVisualConfiguration isEqual:]
  -[SBHIconLabelVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHIconLabelVisualConfiguration succinctDescription]
  -[SBHIconLabelVisualConfiguration setFontSize:]
  -[SBHIconLabelVisualConfiguration setExtraWidth:]
  -[SBHIconLabelVisualConfiguration copyWithZone:]


SBTitledHomeScreenButton : SBHomeScreenButton <UIPointerInteractionDelegate>
 @property  long long type
 @property  {SBTitledHomeScreenButtonMetrics=dddddd} metrics
 @property  NSString *content
 @property  {CGSize=dd} preferredContentFittingSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBTitledHomeScreenButton setContent:]
  -[SBTitledHomeScreenButton content]
  -[SBTitledHomeScreenButton pointerInteraction:styleForRegion:]
  -[SBTitledHomeScreenButton defaultContentImage]
  -[SBTitledHomeScreenButton setType:]
  -[SBTitledHomeScreenButton .cxx_destruct]
  -[SBTitledHomeScreenButton sizeThatFits:]
  -[SBTitledHomeScreenButton setMetrics:]
  -[SBTitledHomeScreenButton metrics]
  -[SBTitledHomeScreenButton type]
  -[SBTitledHomeScreenButton pointerInteraction:regionForRequest:defaultRegion:]
  -[SBTitledHomeScreenButton setPreferredContentFittingSize:]
  -[SBTitledHomeScreenButton initWithFrame:backgroundView:type:content:]
  -[SBTitledHomeScreenButton preferredContentFittingSize]
  -[SBTitledHomeScreenButton contentImageWithTitle:]


SBHEditingDoneButton : SBTitledHomeScreenButton
  // instance methods
  -[SBHEditingDoneButton initWithFrame:backgroundView:]


SBHEditingWidgetButton : SBTitledHomeScreenButton
  // instance methods
  -[SBHEditingWidgetButton initWithFrame:backgroundView:]


SBHDoubleSidedIconImageCrossfadeView : SBIconImageCrossfadeView
  // class methods
  +[SBHDoubleSidedIconImageCrossfadeView layerClass]
  +[SBHDoubleSidedIconImageCrossfadeView _containerViewClass]

  // instance methods
  -[SBHDoubleSidedIconImageCrossfadeView _applyCornerRadiusToCrossfadeView]
  -[SBHDoubleSidedIconImageCrossfadeView _applyCornerRadiusToBackgroundView]
  -[SBHDoubleSidedIconImageCrossfadeView cleanup]
  -[SBHDoubleSidedIconImageCrossfadeView layoutSubviews]
  -[SBHDoubleSidedIconImageCrossfadeView _applyCornerRadiusToIconImageView]
  -[SBHDoubleSidedIconImageCrossfadeView _applyCornerRadius:]
  -[SBHDoubleSidedIconImageCrossfadeView _applyCornerRadiusToViews]
  -[SBHDoubleSidedIconImageCrossfadeView _setCornerRadiusEnabled:]
  -[SBHDoubleSidedIconImageCrossfadeView _applyCrossfadeScaleX:scaleY:]
  -[SBHDoubleSidedIconImageCrossfadeView prepareGeometry]


SBHIconImageTransformView : UIView
  // class methods
  +[SBHIconImageTransformView layerClass]


SBIconListModelRepairUtilities : NSObject
  // class methods
  +[SBIconListModelRepairUtilities _maxGridCellIndexWithIconCount:gridCellInfo:]
  +[SBIconListModelRepairUtilities repairModelByEliminatingGapsInIcons:avoidingIcons:gridSize:gridSizeClassSizes:iconLayoutBehavior:]
  +[SBIconListModelRepairUtilities _findAndRepairEmptyRows:avoidingIcons:gridCellInfo:]
  +[SBIconListModelRepairUtilities _firstIconOfSizeClass:withIcons:inRange:]
  +[SBIconListModelRepairUtilities _findAndRepairWidgetSizedGaps:widgetGridSizeClass:widgetGridSize:iconLayoutBehavior:gridCellInfo:]
  +[SBIconListModelRepairUtilities _findAndRepairSingleIconGaps:gridCellInfo:]


SBHLibraryCategoriesRootFolder : SBRootFolder
 @property  BOOL supportsBadging

  // instance methods
  -[SBHLibraryCategoriesRootFolder enumerateAllIconsWithBaseIndexPath:options:usingBlock:]
  -[SBHLibraryCategoriesRootFolder setSupportsBadging:]
  -[SBHLibraryCategoriesRootFolder supportsBadging]


SBCalendarIconImageProvider : NSObject <SBDateTimeOverrideObserver>
 @property  <SBCalendarIconImageProviderDelegate> *delegate
 @property  SBFDateTimeController *dateTimeController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBCalendarIconImageProvider setSignificantTimeChangeNotificationName:]
  +[SBCalendarIconImageProvider significantTimeChangeNotificationName]

  // instance methods
  -[SBCalendarIconImageProvider controller:didChangeOverrideDateFromDate:]
  -[SBCalendarIconImageProvider _startListeningForSignificantTimeChanges]
  -[SBCalendarIconImageProvider .cxx_destruct]
  -[SBCalendarIconImageProvider setDelegate:]
  -[SBCalendarIconImageProvider iconImageWithInfo:]
  -[SBCalendarIconImageProvider init]
  -[SBCalendarIconImageProvider localeChanged]
  -[SBCalendarIconImageProvider _stopListeningForSignificantTimeChanges]
  -[SBCalendarIconImageProvider dateTimeController]
  -[SBCalendarIconImageProvider initWithDateTimeController:]
  -[SBCalendarIconImageProvider preparedISIcon]
  -[SBCalendarIconImageProvider delegate]
  -[SBCalendarIconImageProvider dealloc]
  -[SBCalendarIconImageProvider reloadIconImage]
  -[SBCalendarIconImageProvider unmaskedIconImageWithInfo:]


SBIconListGridLayout : NSObject <SBIconListLayout, BSDescriptionProviding>
 @property  SBIconListGridLayoutConfiguration *layoutConfiguration
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  unsigned long rotatedLayoutClusterGridSizeClass
 @property  long long primaryOrientationForGridCellLayoutClusterSize
 @property  SBHIconAccessoryVisualConfiguration *iconAccessoryVisualConfiguration
 @property  SBHFolderIconVisualConfiguration *folderIconVisualConfiguration
 @property  SBHFloatyFolderVisualConfiguration *floatyFolderVisualConfiguration
 @property  SBHSidebarVisualConfiguration *sidebarVisualConfiguration
 @property  SBHAppLibraryVisualConfiguration *appLibraryVisualConfiguration
 @property  SBHRootFolderVisualConfiguration *rootFolderVisualConfiguration
 @property  {SBHIconGridSizeClassSizes={SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}} iconGridSizeClassSizes
 @property  unsigned long supportedIconGridSizeClasses
 @property  BOOL usesAlternateLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListGridLayout iconGridSizeClassSizes]
  -[SBIconListGridLayout rotatedLayoutClusterGridSizeClass]
  -[SBIconListGridLayout layoutInsetsForOrientation:]
  -[SBIconListGridLayout supportedIconGridSizeClasses]
  -[SBIconListGridLayout sidebarVisualConfiguration]
  -[SBIconListGridLayout iconImageInfoForGridSizeClass:]
  -[SBIconListGridLayout rootFolderVisualConfiguration]
  -[SBIconListGridLayout .cxx_destruct]
  -[SBIconListGridLayout primaryOrientationForGridCellLayoutClusterSize]
  -[SBIconListGridLayout succinctDescriptionBuilder]
  -[SBIconListGridLayout descriptionBuilderWithMultilinePrefix:]
  -[SBIconListGridLayout init]
  -[SBIconListGridLayout iconImageInfo]
  -[SBIconListGridLayout isEqual:]
  -[SBIconListGridLayout descriptionWithMultilinePrefix:]
  -[SBIconListGridLayout succinctDescription]
  -[SBIconListGridLayout appLibraryVisualConfiguration]
  -[SBIconListGridLayout folderIconVisualConfiguration]
  -[SBIconListGridLayout iconAccessoryVisualConfiguration]
  -[SBIconListGridLayout floatyFolderVisualConfiguration]
  -[SBIconListGridLayout editingAnimationStrengthForGridSizeClass:]
  -[SBIconListGridLayout numberOfColumnsForOrientation:]
  -[SBIconListGridLayout numberOfRowsForOrientation:]
  -[SBIconListGridLayout labelVisualConfigurationForContentSizeCategory:options:]
  -[SBIconListGridLayout initWithLayoutConfiguration:]
  -[SBIconListGridLayout labelFontForContentSizeCategory:options:]
  -[SBIconListGridLayout usesAlternateLayout]
  -[SBIconListGridLayout noteIcons:didDropAtCoordinate:inList:]
  -[SBIconListGridLayout accessoryFontForContentSizeCategory:options:]
  -[SBIconListGridLayout layoutConfiguration]
  -[SBIconListGridLayout accessoryBoldFont]
  -[SBIconListGridLayout accessoryFont]


SBHAddWidgetSheetAppCollectionViewCell : UICollectionViewCell <SBHAddWidgetSheetAppCollectionViewCellConfigurable>
 @property  UILabel *detailTextLabel
 @property  UIStackView *horizontalStackView
 @property  UIStackView *verticalStackView
 @property  UIView *separatorView
 @property  NSLayoutConstraint *iconHeightConstraint
 @property  NSLayoutConstraint *iconWidthConstraint
 @property  NSLayoutConstraint *leadingConstraint
 @property  NSLayoutConstraint *trailingConstraint
 @property  NSLayoutConstraint *topConstraint
 @property  NSLayoutConstraint *bottomConstraint
 @property  NSLayoutConstraint *separatorLeadingConstraint
 @property  BOOL textLabelHasVisualStyling
 @property  BOOL imageViewHasVisualStyling
 @property  unsigned long addWidgetSheetStyle
 @property  BOOL separatorVisible
 @property  BOOL separatorAlignedToLabels
 @property  {NSDirectionalEdgeInsets=dddd} contentInsets
 @property  double contentHorizontalSpacing
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  NSString *detailText
 @property  UILabel *textLabel
 @property  UIImageView *imageView
 @property  BOOL imageViewRequiresVisualStyling
 @property  MTVisualStylingProvider *visualStylingProvider

  // instance methods
  -[SBHAddWidgetSheetAppCollectionViewCell setHighlighted:]
  -[SBHAddWidgetSheetAppCollectionViewCell _contentSizeCategoryDidChange:]
  -[SBHAddWidgetSheetAppCollectionViewCell imageView]
  -[SBHAddWidgetSheetAppCollectionViewCell setContentInsets:]
  -[SBHAddWidgetSheetAppCollectionViewCell traitCollectionDidChange:]
  -[SBHAddWidgetSheetAppCollectionViewCell setBottomConstraint:]
  -[SBHAddWidgetSheetAppCollectionViewCell detailText]
  -[SBHAddWidgetSheetAppCollectionViewCell contentInsets]
  -[SBHAddWidgetSheetAppCollectionViewCell .cxx_destruct]
  -[SBHAddWidgetSheetAppCollectionViewCell setTopConstraint:]
  -[SBHAddWidgetSheetAppCollectionViewCell setDetailText:]
  -[SBHAddWidgetSheetAppCollectionViewCell setTrailingConstraint:]
  -[SBHAddWidgetSheetAppCollectionViewCell topConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell verticalStackView]
  -[SBHAddWidgetSheetAppCollectionViewCell iconImageInfo]
  -[SBHAddWidgetSheetAppCollectionViewCell setSeparatorVisible:]
  -[SBHAddWidgetSheetAppCollectionViewCell setSeparatorView:]
  -[SBHAddWidgetSheetAppCollectionViewCell prepareForReuse]
  -[SBHAddWidgetSheetAppCollectionViewCell setVisualStylingProvider:]
  -[SBHAddWidgetSheetAppCollectionViewCell setLeadingConstraint:]
  -[SBHAddWidgetSheetAppCollectionViewCell initWithFrame:]
  -[SBHAddWidgetSheetAppCollectionViewCell iconWidthConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell setTextLabel:]
  -[SBHAddWidgetSheetAppCollectionViewCell iconHeightConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell setIconHeightConstraint:]
  -[SBHAddWidgetSheetAppCollectionViewCell setIconWidthConstraint:]
  -[SBHAddWidgetSheetAppCollectionViewCell leadingConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell textLabel]
  -[SBHAddWidgetSheetAppCollectionViewCell dealloc]
  -[SBHAddWidgetSheetAppCollectionViewCell trailingConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell detailTextLabel]
  -[SBHAddWidgetSheetAppCollectionViewCell separatorView]
  -[SBHAddWidgetSheetAppCollectionViewCell setImageView:]
  -[SBHAddWidgetSheetAppCollectionViewCell visualStylingProvider]
  -[SBHAddWidgetSheetAppCollectionViewCell setIconImageInfo:]
  -[SBHAddWidgetSheetAppCollectionViewCell bottomConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell didUpdateFocusInContext:withAnimationCoordinator:]
  -[SBHAddWidgetSheetAppCollectionViewCell _textLabelFont]
  -[SBHAddWidgetSheetAppCollectionViewCell _detailTextLabelFont]
  -[SBHAddWidgetSheetAppCollectionViewCell _textLabelNumberOfLines]
  -[SBHAddWidgetSheetAppCollectionViewCell setAddWidgetSheetAppCollectionViewCellTitle:]
  -[SBHAddWidgetSheetAppCollectionViewCell setAddWidgetSheetAppCollectionViewCellIconImage:]
  -[SBHAddWidgetSheetAppCollectionViewCell setAddWidgetSheetStyle:]
  -[SBHAddWidgetSheetAppCollectionViewCell setSeparatorAlignedToLabels:]
  -[SBHAddWidgetSheetAppCollectionViewCell setContentHorizontalSpacing:]
  -[SBHAddWidgetSheetAppCollectionViewCell setImageViewRequiresVisualStyling:]
  -[SBHAddWidgetSheetAppCollectionViewCell _updateSeparatorLeadingConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell _updateAppearanceForFocus]
  -[SBHAddWidgetSheetAppCollectionViewCell _updateTableViewStyle]
  -[SBHAddWidgetSheetAppCollectionViewCell setTextLabelHasVisualStyling:]
  -[SBHAddWidgetSheetAppCollectionViewCell imageViewRequiresVisualStyling]
  -[SBHAddWidgetSheetAppCollectionViewCell setImageViewHasVisualStyling:]
  -[SBHAddWidgetSheetAppCollectionViewCell _updateVisualStylingForTextLabel]
  -[SBHAddWidgetSheetAppCollectionViewCell _updateVisualStylingForImageView]
  -[SBHAddWidgetSheetAppCollectionViewCell _uiHIFontStyle]
  -[SBHAddWidgetSheetAppCollectionViewCell contentHorizontalSpacing]
  -[SBHAddWidgetSheetAppCollectionViewCell addWidgetSheetStyle]
  -[SBHAddWidgetSheetAppCollectionViewCell isSeparatorVisible]
  -[SBHAddWidgetSheetAppCollectionViewCell isSeparatorAlignedToLabels]
  -[SBHAddWidgetSheetAppCollectionViewCell setDetailTextLabel:]
  -[SBHAddWidgetSheetAppCollectionViewCell horizontalStackView]
  -[SBHAddWidgetSheetAppCollectionViewCell setHorizontalStackView:]
  -[SBHAddWidgetSheetAppCollectionViewCell setVerticalStackView:]
  -[SBHAddWidgetSheetAppCollectionViewCell separatorLeadingConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell setSeparatorLeadingConstraint:]
  -[SBHAddWidgetSheetAppCollectionViewCell textLabelHasVisualStyling]
  -[SBHAddWidgetSheetAppCollectionViewCell imageViewHasVisualStyling]


SBHStackConfiguration : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL allowsSuggestions
 @property  BOOL allowsExternalSuggestions
 @property  NSArray *dataSources
 @property  unsigned long sizeClass

  // class methods
  +[SBHStackConfiguration supportsSecureCoding]

  // instance methods
  -[SBHStackConfiguration sizeClass]
  -[SBHStackConfiguration initWithCoder:]
  -[SBHStackConfiguration .cxx_destruct]
  -[SBHStackConfiguration setSizeClass:]
  -[SBHStackConfiguration allowsExternalSuggestions]
  -[SBHStackConfiguration setAllowsSuggestions:]
  -[SBHStackConfiguration copyWithZone:]
  -[SBHStackConfiguration dataSources]
  -[SBHStackConfiguration setDataSources:]
  -[SBHStackConfiguration setAllowsExternalSuggestions:]
  -[SBHStackConfiguration encodeWithCoder:]
  -[SBHStackConfiguration allowsSuggestions]


_SBIconListModelTransaction : NSObject
 @property  NSString *requestID

  // instance methods
  -[_SBIconListModelTransaction requestID]
  -[_SBIconListModelTransaction commitChangesToObservers:forNode:]
  -[_SBIconListModelTransaction removeNodeIdentifiers:]
  -[_SBIconListModelTransaction .cxx_destruct]
  -[_SBIconListModelTransaction succinctDescriptionBuilder]
  -[_SBIconListModelTransaction descriptionBuilderWithMultilinePrefix:]
  -[_SBIconListModelTransaction descriptionWithMultilinePrefix:]
  -[_SBIconListModelTransaction succinctDescription]
  -[_SBIconListModelTransaction addNodeIdentifiers:]
  -[_SBIconListModelTransaction initWithRequestID:]


SBIconListModel : NSObject <SBIconIndexMutableListObserver, SBIconListModelObserver, SBTreeNode, SBIconIndexNode, NSFastEnumeration>
 @property  NSDate *hiddenDate
 @property  _SBIconListModelTransaction *activeTransaction
 @property  unsigned long activeTransactionCount
 @property  SBFolder *folder
 @property  {SBHIconGridSize=SS} gridSize
 @property  unsigned long numberOfIcons
 @property  unsigned long numberOfNonPlaceholderIcons
 @property  unsigned long maxNumberOfIcons
 @property  {SBHIconGridSizeClassSizes={SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}} iconGridSizeClassSizes
 @property  unsigned long allowedGridSizeClasses
 @property  unsigned long rotatedLayoutClusterGridSizeClass
 @property  BOOL allowsRotatedLayout
 @property  unsigned long iconLayoutBehavior
 @property  unsigned long numberOfUsedRows
 @property  unsigned long numberOfUsedColumns
 @property  NSArray *icons
 @property  SBIcon *firstIcon
 @property  SBIcon *lastIcon
 @property  <SBIconListModelDelegate> *delegate
 @property  unsigned long numberOfUsedSlots
 @property  BOOL hiddenByUser
 @property  BOOL hidden
 @property  NSSet *focusModeIdentifiers
 @property  unsigned long overflowSlotCount
 @property  BOOL layoutReversibleWhenRotated
 @property  unsigned long layoutInvalidations
 @property  NSString *layoutDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *children
 @property  <SBTreeNode> *parent
 @property  NSString *uniqueIdentifier

  // class methods
  +[SBIconListModel layOutIcons:atIndexes:inGridCellInfo:startingAtGridCellIndex:gridSize:gridSizeClassSizes:iconLayoutBehavior:referenceIconOrder:options:numberOfUsedRows:numberOfUsedColumns:]
  +[SBIconListModel iconGridCellInfoForIcons:gridSize:cellClusterSize:cellClusterReferenceGridSize:gridSizeClassSizes:iconLayoutBehavior:options:]
  +[SBIconListModel iconGridCellInfoForIcons:gridSize:gridSizeClassSizes:iconLayoutBehavior:referenceIconOrder:options:]
  +[SBIconListModel isListModelNodeIdentifier:]
  +[SBIconListModel listModelNodeIdentifierForUniqueIdentifier:]
  +[SBIconListModel applyIconLayoutFromGridCellInfo:inGridRange:iconOrder:toGridCellInfo:inGridRange:iconOrder:]
  +[SBIconListModel allowsRotatedLayoutByDefault]
  +[SBIconListModel movedIconsWithOriginalOrder:newOrder:]
  +[SBIconListModel supportsRotatedLayout]

  // instance methods
  -[SBIconListModel iconsOfClass:]
  -[SBIconListModel removeAllIcons]
  -[SBIconListModel addIcons:]
  -[SBIconListModel addIconsOfClass:toSet:]
  -[SBIconListModel markIconStateClean]
  -[SBIconListModel bestGridCellIndexForInsertingIcon:afterIconAtGridCellIndex:gridCellInfo:]
  -[SBIconListModel removeIcon:]
  -[SBIconListModel removeIcons:]
  -[SBIconListModel layoutDescription]
  -[SBIconListModel setIconLayoutBehavior:]
  -[SBIconListModel ancestryDidChange]
  -[SBIconListModel iconsInGridColumn:gridCellInfo:]
  -[SBIconListModel hiddenDate]
  -[SBIconListModel initWithFolder:gridSize:gridSizeClassSizes:]
  -[SBIconListModel allowsAddingIcon:]
  -[SBIconListModel _unclusterIcons:ofSizeClass:gridCellInfoOptions:]
  -[SBIconListModel gridCellInfoForGridSize:cellClusterSize:cellClusterReferenceGridSize:options:]
  -[SBIconListModel bestGridCellIndexForInsertingIcon:aboveIconAtGridCellIndex:gridCellInfo:]
  -[SBIconListModel directlyContainsIconsPassingTest:]
  -[SBIconListModel setRotatedLayoutClusterGridSizeClass:]
  -[SBIconListModel iconListIconStateDidDirty:]
  -[SBIconListModel addIcon:options:]
  -[SBIconListModel enumerateIconsWithOptions:usingBlock:]
  -[SBIconListModel directlyContainedIconsPassingTest:]
  -[SBIconListModel replaceIcon:withIcon:options:]
  -[SBIconListModel numberOfUsedColumns]
  -[SBIconListModel willAddIcon:atIndex:]
  -[SBIconListModel isHiddenByUser]
  -[SBIconListModel markIconStateDirty]
  -[SBIconListModel _iconAtIndex:]
  -[SBIconListModel overflowSlotCount]
  -[SBIconListModel _moveDefaultSizedIconsOfCountIntoContiguousLeadingNonDefaultSizedIcons:]
  -[SBIconListModel isIconStateDirty]
  -[SBIconListModel setGridSize:]
  -[SBIconListModel enumerateIconsUsingBlock:]
  -[SBIconListModel firstFreeSlotIndex]
  -[SBIconListModel sortUsingSelector:]
  -[SBIconListModel gridCellIndexForIcon:gridCellInfo:]
  -[SBIconListModel _notifyListObserversDidRemoveIcon:]
  -[SBIconListModel numberOfNonPlaceholderIcons]
  -[SBIconListModel iconGridSizeClassSizes]
  -[SBIconListModel isAllowedToContainIcon:]
  -[SBIconListModel didAddIcon:]
  -[SBIconListModel insertIcon:atIndex:]
  -[SBIconListModel gridSize]
  -[SBIconListModel indexesOfDirectlyContainedIconsPassingTest:]
  -[SBIconListModel updateParentNodeForIconIfNecessary:]
  -[SBIconListModel isFull]
  -[SBIconListModel _notifyListObserver:didAddIcons:didRemoveIcons:movedIcons:didReplaceIcon:withIcon:]
  -[SBIconListModel _updateRotatedIconsUsingBlock:]
  -[SBIconListModel rotatedLayoutClusterGridSizeClass]
  -[SBIconListModel uniqueIdentifier]
  -[SBIconListModel _moveContainedIconWithinAffectedQuadsIfNecessary:toGridCellIndex:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel _notifyListObserversDidAddIcons:didRemoveIcons:movedIcons:]
  -[SBIconListModel _notifyListObserversDidReplaceIcon:withIcon:]
  -[SBIconListModel firstFreeGridCellIndexOfRangeOfSize:gridCellInfoOptions:]
  -[SBIconListModel gridCellIndexBelowIconAtIndex:gridCellInfo:]
  -[SBIconListModel setHidden:byUser:hiddenDate:]
  -[SBIconListModel setHiddenDate:]
  -[SBIconListModel _makeRotatedIconsListModelWithIcons:]
  -[SBIconListModel moveContainedIcon:aboveIcon:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBIconListModel isEmpty]
  -[SBIconListModel directlyContainedIconWithIdentifier:]
  -[SBIconListModel nodeIdentifier]
  -[SBIconListModel allowsAddingIcons:]
  -[SBIconListModel removeIcons:options:]
  -[SBIconListModel iconsInGridColumnRange:gridCellInfo:]
  -[SBIconListModel removeIconFromOtherPositionsInHierarchy:]
  -[SBIconListModel setAllowedGridSizeClasses:]
  -[SBIconListModel iconList:willAddIcon:]
  -[SBIconListModel removeIcon:options:]
  -[SBIconListModel numberOfIcons]
  -[SBIconListModel _updateModelByRepairingGapsIfNecessaryAvoidingIcons:]
  -[SBIconListModel children]
  -[SBIconListModel isGridLayoutValid:]
  -[SBIconListModel insertIcons:atIndex:options:]
  -[SBIconListModel performChangesByClusteringForSizeClass:behavior:withGridCellInfoOptions:block:]
  -[SBIconListModel _rotatedList:didRecordObserverCallback:]
  -[SBIconListModel firstFreeGridCellIndexOfRangeOfSizeClass:gridCellInfoOptions:]
  -[SBIconListModel icons]
  -[SBIconListModel .cxx_destruct]
  -[SBIconListModel _notifyListObserversUsingRecordedCallback:]
  -[SBIconListModel allowedGridSizeClasses]
  -[SBIconListModel allowsAddingIconCount:]
  -[SBIconListModel list:didRemoveContainedNodeIdentifiers:]
  -[SBIconListModel repairModelByEliminatingGapsInIcons:avoidingIcons:]
  -[SBIconListModel prependIcon:options:]
  -[SBIconListModel setAllowsRotatedLayout:]
  -[SBIconListModel addIcon:]
  -[SBIconListModel lastIcon]
  -[SBIconListModel moveContainedIcon:toIndex:options:]
  -[SBIconListModel isHidden]
  -[SBIconListModel containsNodeIdentifier:]
  -[SBIconListModel _moveIcon:byClusteringForSizeClass:toGridCellIndex:gridCellInfoOptions:]
  -[SBIconListModel directlyContainsIconWithIdentifier:]
  -[SBIconListModel didRemoveIcon:]
  -[SBIconListModel insertIcon:atCoordinate:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel allowedGapsLayoutDescription]
  -[SBIconListModel layoutInvalidations]
  -[SBIconListModel iconsInRange:]
  -[SBIconListModel bestGridCellIndexForInsertingIcon:atGridCellIndex:gridCellInfo:]
  -[SBIconListModel _beginDelayingForwardingObserverCallbacksFromRotatedListWithOptions:]
  -[SBIconListModel performChangesByPreservingOrderOfDefaultSizedIcons:]
  -[SBIconListModel succinctDescriptionBuilder]
  -[SBIconListModel parentNodeForChildren]
  -[SBIconListModel _notifyListObservers:]
  -[SBIconListModel setDelegate:]
  -[SBIconListModel iconsAtIndexes:]
  -[SBIconListModel setActiveTransaction:]
  -[SBIconListModel rotatedGridSizeWithOptions:]
  -[SBIconListModel enumerateFolderIconsUsingBlock:]
  -[SBIconListModel bestGridCellIndexForInsertingIcon:atGridCellIndex:]
  -[SBIconListModel allowedIconsForIcons:]
  -[SBIconListModel _notifyListObserversDidAddIcons:didRemoveIcons:movedIcons:didReplaceIcon:withIcon:]
  -[SBIconListModel isValidGridCellIndex:gridCellInfo:]
  -[SBIconListModel isEmptyIgnoringPlaceholders]
  -[SBIconListModel _canClusterIconsUsingSizeClass:]
  -[SBIconListModel _clusterIconsForSizeClass:behavior:gridCellInfoProvider:]
  -[SBIconListModel layoutDescriptionWithOptions:]
  -[SBIconListModel bestGridCellIndexForInsertingIcon:belowIconAtGridCellIndex:gridCellInfo:]
  -[SBIconListModel lastDirectlyContainedLeafIconWithApplicationBundleIdentifier:]
  -[SBIconListModel isValidGridRange:gridCellInfo:]
  -[SBIconListModel setIconOrderFromGridCellInfo:referenceIconOrder:]
  -[SBIconListModel indexForIcon:]
  -[SBIconListModel nodesAlongIndexPath:consumedIndexes:]
  -[SBIconListModel _targetListForGridCellInfoOptions:]
  -[SBIconListModel gridCellIndexAboveIconAtIndex:gridCellInfo:]
  -[SBIconListModel iconsForGridRange:gridCellInfoOptions:]
  -[SBIconListModel indexOfDirectlyContainedIconPassingTest:]
  -[SBIconListModel descriptionBuilderWithMultilinePrefix:]
  -[SBIconListModel _unclusterIcons:ofSizeClass:baseGridCellInfoOptions:gridCellInfoProvider:]
  -[SBIconListModel init]
  -[SBIconListModel _moveAllNonDefaultSizedIconsToBeginning]
  -[SBIconListModel directlyContainsLeafIconWithIdentifier:]
  -[SBIconListModel largestClusteringSizeClassWithOptions:]
  -[SBIconListModel iconGridCellInfoBySimulatingInsertionOfIcons:ignoringPlaceholders:gridCellInfoOptions:iconOrder:]
  -[SBIconListModel addIconsPassingTest:toSet:]
  -[SBIconListModel firstIcon]
  -[SBIconListModel descriptionWithMultilinePrefix:]
  -[SBIconListModel allowsRotatedLayout]
  -[SBIconListModel placeIcon:atIndex:]
  -[SBIconListModel iconAtGridCellIndex:gridCellInfoOptions:]
  -[SBIconListModel iconsAtGridCellIndexes:gridCellInfo:]
  -[SBIconListModel setParent:]
  -[SBIconListModel _setRotatedIcons:]
  -[SBIconListModel _notifyListObserversDidAddIcon:]
  -[SBIconListModel succinctDescription]
  -[SBIconListModel iconAtGridCellIndex:gridCellInfo:]
  -[SBIconListModel list:didAddContainedNodeIdentifiers:]
  -[SBIconListModel _rotatedIconsIfApplicable]
  -[SBIconListModel updateForFocusModeActivated:wantsListVisible:]
  -[SBIconListModel _ensureRotatedIcons]
  -[SBIconListModel addListObserver:]
  -[SBIconListModel isGridLayoutValidWithOptions:]
  -[SBIconListModel _reorderedIconsWithClusterSizeClass:forRotationWithReorderingInfo:gridCellInfoOptions:]
  -[SBIconListModel canBounceIcon:]
  -[SBIconListModel setIconOrderFromGridCellInfo:]
  -[SBIconListModel allowsAddingIcons:ignoringPlaceholders:]
  -[SBIconListModel listDidMoveNodes:]
  -[SBIconListModel clearParentNodeForIconIfNecessary:]
  -[SBIconListModel placeIcon:atIndex:options:bumpedIcons:]
  -[SBIconListModel nodeDescriptionWithPrefix:]
  -[SBIconListModel activeTransactionCount]
  -[SBIconListModel addIcons:options:]
  -[SBIconListModel folder]
  -[SBIconListModel gridSizeForGridSizeClass:]
  -[SBIconListModel bestGridCellIndexForInsertingIcon:gridCellInfoOptions:]
  -[SBIconListModel _moveContainedIconLargerThanQuadsIfNecessary:toGridCellIndex:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel iconAtCoordinate:gridCellInfo:]
  -[SBIconListModel directlyContainedIconPassingTest:]
  -[SBIconListModel replaceIcon:withIcons:options:]
  -[SBIconListModel setIcons:]
  -[SBIconListModel parent]
  -[SBIconListModel changeGridSize:options:]
  -[SBIconListModel bestGridCellIndexForInsertingIcon:gridCellInfo:]
  -[SBIconListModel isLayoutReversibleWhenRotated]
  -[SBIconListModel _clusterIconsForSizeClass:behavior:gridCellInfoOptions:]
  -[SBIconListModel numberOfFreeSlots]
  -[SBIconListModel _notifyListObserversWillAddIcon:]
  -[SBIconListModel _notifyListObserversDidMoveIcon:]
  -[SBIconListModel isFullIncludingPlaceholders]
  -[SBIconListModel bestGridCellIndexForInsertingIcon:afterIconAtGridCellIndex:gridCellInfoOptions:]
  -[SBIconListModel addNodeObserver:]
  -[SBIconListModel _coalesceChangesWithRequestID:changeBlock:]
  -[SBIconListModel _updateModelByRepairingGapsIfNecessary]
  -[SBIconListModel activeTransaction]
  -[SBIconListModel changeGridSizeClassOfContainedIcon:toGridSizeClass:gridCellInfoOptions:]
  -[SBIconListModel gridRangeForIcon:gridCellInfoOptions:]
  -[SBIconListModel countByEnumeratingWithState:objects:count:]
  -[SBIconListModel _iconIndexForMovingIcon:toGridCellIndex:gridCellInfo:]
  -[SBIconListModel numberOfUsedSlots]
  -[SBIconListModel gridCellIndexAboveIconAtIndex:options:]
  -[SBIconListModel bestGridCellIndexForInsertingIcon:atGridCellIndex:gridCellInfoOptions:]
  -[SBIconListModel removeIconAtIndex:options:]
  -[SBIconListModel allowsAddingIcon:ignoringPlaceholders:]
  -[SBIconListModel setOverflowSlotCount:]
  -[SBIconListModel delegate]
  -[SBIconListModel allowedIconsForByReplacingContentsWithIcons:]
  -[SBIconListModel bestGridCellIndexForInsertingIcon:belowIconAtGridCellIndex:gridCellInfoOptions:]
  -[SBIconListModel containsWidgetIconWithExtensionBundleIdentifier:]
  -[SBIconListModel gridCellInfoForGridSize:options:]
  -[SBIconListModel gridCellIndexForIconIndex:gridCellInfo:]
  -[SBIconListModel removeIconAtIndex:]
  -[SBIconListModel isValidGridRange:options:]
  -[SBIconListModel isValidGridCellIndex:options:]
  -[SBIconListModel initWithUniqueIdentifier:folder:gridSize:gridSizeClassSizes:]
  -[SBIconListModel firstFreeGridCellIndexWithOptions:]
  -[SBIconListModel _rotatedIcons]
  -[SBIconListModel coordinateForGridCellIndex:gridCellInfo:]
  -[SBIconListModel indexForIconWithIdentifier:]
  -[SBIconListModel removeIcon:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel bestGridCellIndexForInsertingIcon:aboveIconAtGridCellIndex:gridCellInfoOptions:]
  -[SBIconListModel insertIcon:relativeToIcon:positionDelta:options:]
  -[SBIconListModel _endDelayingForwardingObserverCallbacksFromRotatedList]
  -[SBIconListModel _rotatedIconListModel]
  -[SBIconListModel directlyContainsNonDefaultSizeClassIcon]
  -[SBIconListModel gridCellIndexBelowIconAtIndex:options:]
  -[SBIconListModel removeIconFromOtherPositionsInHierarchy:forInsertingAtIndex:removeIfAlreadyContained:]
  -[SBIconListModel numberOfUsedRows]
  -[SBIconListModel _validateIconsInArray:matchArray:]
  -[SBIconListModel moveContainedIcon:beforeIcon:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel iconAtIndex:]
  -[SBIconListModel insertIcon:afterIcon:options:]
  -[SBIconListModel objectWithUniqueIdentifier:]
  -[SBIconListModel iconAtCoordinate:gridCellInfoOptions:]
  -[SBIconListModel moveContainedIcon:afterIcon:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel setActiveTransactionCount:]
  -[SBIconListModel gridSizeWithOptions:]
  -[SBIconListModel gridRangeForIcon:gridCellInfo:]
  -[SBIconListModel rangeOfDirectlyContainedIconsInRange:passingTest:]
  -[SBIconListModel isGridLayoutValid]
  -[SBIconListModel directlyContainsIconOfClass:]
  -[SBIconListModel swapContainedIcon:withContainedIcon:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel iconsInGridRow:gridCellInfo:]
  -[SBIconListModel _rotatedIconsFromList:gridCellInfoOptions:]
  -[SBIconListModel replaceIcon:withIcon:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel removeListObserver:]
  -[SBIconListModel removeLastIcon]
  -[SBIconListModel reversedOrderLayoutDescription]
  -[SBIconListModel setFocusModeIdentifiers:]
  -[SBIconListModel gridCellInfoWithOptions:]
  -[SBIconListModel gridCellIndexForCoordinate:gridCellInfoOptions:]
  -[SBIconListModel focusModeIdentifiers]
  -[SBIconListModel performChangesByPreservingPositionsOfIconsLargerThanSizeClass:block:]
  -[SBIconListModel insertIconWhilePreservingQuads:toGridCellIndex:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel rotatedGridCellInfoOptions:]
  -[SBIconListModel iconsThatAreAllowedToBeContainedInIcons:]
  -[SBIconListModel insertIcon:atIndex:options:]
  -[SBIconListModel directlyContainsIcon:]
  -[SBIconListModel _invalidateLayoutWithGridCellInfoOptions:mutationOptions:]
  -[SBIconListModel _checkAndRemoveBouncedIconsAfterChangeToIcons:ignoringTrailingIconCheck:options:]
  -[SBIconListModel allowedIconsForIcons:ignoringPlaceholders:]
  -[SBIconListModel iconsWithGridCellInfoOptions:]
  -[SBIconListModel iconLayoutBehavior]
  -[SBIconListModel moveContainedIcon:toGridCellIndex:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel _reorderIconsAfterUnclusteringWithClusterSizeClass:forRotationWithReorderingInfo:gridCellInfoOptions:]
  -[SBIconListModel countOfDirectlyContainedIconsPassingTest:]
  -[SBIconListModel getIconGridRange:forGridCellIndex:gridCellInfo:]
  -[SBIconListModel sortUsingComparator:]
  -[SBIconListModel setHidden:byUser:]
  -[SBIconListModel iconsForGridRange:gridCellInfo:]
  -[SBIconListModel containedNodeIdentifiers]
  -[SBIconListModel insertIcon:beforeIcon:options:]
  -[SBIconListModel rotatedLayoutDescription]
  -[SBIconListModel isAllowedToContainIcons:]
  -[SBIconListModel insertIcon:atGridCellIndex:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel moveContainedIcon:belowIcon:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel setLayoutReversibleWhenRotated:]
  -[SBIconListModel addIcon:gridCellInfoOptions:mutationOptions:]
  -[SBIconListModel setIcons:gridCellInfoOptions:]
  -[SBIconListModel gridCellIndexForCoordinate:gridCellInfo:]
  -[SBIconListModel removeNodeObserver:]
  -[SBIconListModel initWithFolder:maxIconCount:]
  -[SBIconListModel setHidden:]
  -[SBIconListModel coordinateForGridCellIndex:gridCellInfoOptions:]
  -[SBIconListModel gridCellIndexForIcon:gridCellInfoOptions:]
  -[SBIconListModel _rotationReorderingInfoWithClusterSizeClass:gridCellInfoOptions:]
  -[SBIconListModel _reorderIconsWithClusterSizeClass:forRotationWithReorderingInfo:gridCellInfoOptions:]
  -[SBIconListModel gridCellIndexForIconIndex:gridCellInfoOptions:]
  -[SBIconListModel maxNumberOfIcons]


SBRotatedIconListModel : SBIconListModel
 @property  SBIconListModel *unrotatedIconListModel

  // class methods
  +[SBRotatedIconListModel supportsRotatedLayout]

  // instance methods
  -[SBRotatedIconListModel updateParentNodeForIconIfNecessary:]
  -[SBRotatedIconListModel .cxx_destruct]
  -[SBRotatedIconListModel _notifyListObserversDidAddIcons:didRemoveIcons:movedIcons:didReplaceIcon:withIcon:]
  -[SBRotatedIconListModel unrotatedIconListModel]
  -[SBRotatedIconListModel clearParentNodeForIconIfNecessary:]
  -[SBRotatedIconListModel setUnrotatedIconListModel:]


_SBIconListRecordedObserverCallback : NSObject <BSDescriptionProviding>
 @property  NSArray *addedIcons
 @property  NSArray *removedIcons
 @property  NSArray *movedIcons
 @property  SBIcon *replacedIcon
 @property  SBIcon *replacementIcon
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBIconListRecordedObserverCallback removedIcons]
  -[_SBIconListRecordedObserverCallback .cxx_destruct]
  -[_SBIconListRecordedObserverCallback succinctDescriptionBuilder]
  -[_SBIconListRecordedObserverCallback descriptionBuilderWithMultilinePrefix:]
  -[_SBIconListRecordedObserverCallback descriptionWithMultilinePrefix:]
  -[_SBIconListRecordedObserverCallback succinctDescription]
  -[_SBIconListRecordedObserverCallback addedIcons]
  -[_SBIconListRecordedObserverCallback movedIcons]
  -[_SBIconListRecordedObserverCallback replacedIcon]
  -[_SBIconListRecordedObserverCallback replacementIcon]
  -[_SBIconListRecordedObserverCallback setAddedIcons:]
  -[_SBIconListRecordedObserverCallback setRemovedIcons:]
  -[_SBIconListRecordedObserverCallback setMovedIcons:]
  -[_SBIconListRecordedObserverCallback setReplacedIcon:]
  -[_SBIconListRecordedObserverCallback setReplacementIcon:]


SBHBookmarkIcon : SBLeafIcon
 @property  SBHBookmark *bookmark
 @property  UIWebClip *webClip
 @property  CPSWebClip *appClip
 @property  NSURL *launchURL

  // instance methods
  -[SBHBookmarkIcon launchURL]
  -[SBHBookmarkIcon canBeAddedToMultiItemDrag]
  -[SBHBookmarkIcon bookmark]
  -[SBHBookmarkIcon .cxx_destruct]
  -[SBHBookmarkIcon setBookmark:]
  -[SBHBookmarkIcon appClip]
  -[SBHBookmarkIcon webClip]
  -[SBHBookmarkIcon canBeAddedToSubfolder]
  -[SBHBookmarkIcon initWithBookmark:]
  -[SBHBookmarkIcon copyWithZone:]
  -[SBHBookmarkIcon isBookmarkIcon]
  -[SBHBookmarkIcon isAppClipIcon]
  -[SBHBookmarkIcon _sbhIconLibraryOverrideCollationSectionTitle]
  -[SBHBookmarkIcon uninstallAlertTitle]
  -[SBHBookmarkIcon uninstallAlertBody]
  -[SBHBookmarkIcon draggingUserActivity]


SBHLibraryCategoryIdentifier : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *localizedDisplayName
 @property  NSString *localizedDisplayNameKey
 @property  unsigned long predictionCategoryID
 @property  unsigned long predictionCategoryIndex

  // class methods
  +[SBHLibraryCategoryIdentifier supportsSecureCoding]
  +[SBHLibraryCategoryIdentifier categoryWithLocalizedDisplayName:categoryID:categoryIndex:]

  // instance methods
  -[SBHLibraryCategoryIdentifier predictionCategoryID]
  -[SBHLibraryCategoryIdentifier initWithCoder:]
  -[SBHLibraryCategoryIdentifier initWithPredictionCategoryID:localizedDisplayNameKey:]
  -[SBHLibraryCategoryIdentifier localizedDisplayName]
  -[SBHLibraryCategoryIdentifier .cxx_destruct]
  -[SBHLibraryCategoryIdentifier predictionCategoryIndex]
  -[SBHLibraryCategoryIdentifier succinctDescriptionBuilder]
  -[SBHLibraryCategoryIdentifier descriptionBuilderWithMultilinePrefix:]
  -[SBHLibraryCategoryIdentifier isEqual:]
  -[SBHLibraryCategoryIdentifier descriptionWithMultilinePrefix:]
  -[SBHLibraryCategoryIdentifier succinctDescription]
  -[SBHLibraryCategoryIdentifier localizedDisplayNameKey]
  -[SBHLibraryCategoryIdentifier isEqualToCategoryIdentifier:]
  -[SBHLibraryCategoryIdentifier initWithPredictionCategory:categoryIndex:]
  -[SBHLibraryCategoryIdentifier copyWithZone:]
  -[SBHLibraryCategoryIdentifier initWithPredictionCategoryID:categoryIndex:localizedDisplayName:localizedDisplayNameKey:]
  -[SBHLibraryCategoryIdentifier encodeWithCoder:]


SBDockView : UIView <SBUICoronaAnimationControllerParticipant>
 @property  UIColor *accessibilityBackgroundColor
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIView *backgroundView
 @property  unsigned long dockEdge
 @property  double dockHeight
 @property  double dockHeightPadding
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} dockListViewFrame
 @property  SBDockIconListView *dockListView
 @property  double dockListOffset
 @property  <SBDockViewDelegate> *delegate
 @property  BOOL dockInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBDockView dockEdge]
  -[SBDockView _backgroundContrastDidChange:]
  -[SBDockView traitCollectionDidChange:]
  -[SBDockView willMoveToWindow:]
  -[SBDockView setDockEdge:]
  -[SBDockView .cxx_destruct]
  -[SBDockView _dockOverhangInsets]
  -[SBDockView _layoutScale]
  -[SBDockView minimumHomeScreenScaleDidChange]
  -[SBDockView layoutSubviews]
  -[SBDockView traitCollection]
  -[SBDockView setLegibilitySettings:]
  -[SBDockView setDelegate:]
  -[SBDockView dockListViewFrame]
  -[SBDockView accessibilityBackgroundColor]
  -[SBDockView setBackgroundAlpha:]
  -[SBDockView dockHeight]
  -[SBDockView _minimumHomeScreenScale]
  -[SBDockView _listLayout]
  -[SBDockView isDockInset]
  -[SBDockView coronaAnimationController:willAnimateCoronaTransitionWithAnimator:]
  -[SBDockView dockListOffset]
  -[SBDockView _updateCornerRadii]
  -[SBDockView setBackgroundView:]
  -[SBDockView delegate]
  -[SBDockView didMoveToWindow]
  -[SBDockView dealloc]
  -[SBDockView _visualConfiguration]
  -[SBDockView getDockViewMetrics:]
  -[SBDockView dockListView]
  -[SBDockView initWithDockListView:forSnapshot:]
  -[SBDockView dockHeightPadding]
  -[SBDockView setDockListOffset:]
  -[SBDockView legibilitySettings]
  -[SBDockView updateAccessibilityTintColor]
  -[SBDockView backgroundView]


SBHAddWidgetDetailSheetWidgetDescriptionView : UIView
 @property  UILabel *titleLabel
 @property  UILabel *descriptionLabel

  // instance methods
  -[SBHAddWidgetDetailSheetWidgetDescriptionView _contentSizeCategoryDidChange:]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView titleLabel]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView traitCollectionDidChange:]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView .cxx_destruct]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView setTitleLabel:]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView _createConstraints]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView descriptionLabel]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView _titleLabelFont]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView dealloc]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView setDescriptionLabel:]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView initWithTitle:subtitle:]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView _descriptionLabelFont]


SBSearchScrollView : UIScrollView
 @property  <SBSearchScrollViewDelegate> *searchDelegate

  // instance methods
  -[SBSearchScrollView gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[SBSearchScrollView .cxx_destruct]
  -[SBSearchScrollView gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:]
  -[SBSearchScrollView gestureRecognizerShouldBegin:]
  -[SBSearchScrollView setSearchDelegate:]
  -[SBSearchScrollView searchDelegate]


SBSearchGesture : NSObject <UIScrollViewDelegate, SBSearchScrollViewDelegate, BSDescriptionProviding>
 @property  <SBSearchGestureDelegate> *delegate
 @property  UIView *targetView
 @property  BOOL animatingResetOrReveal
 @property  BOOL showingSearch
 @property  BOOL tracking
 @property  BOOL dragging
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBSearchGesture searchHeaderHeight]

  // instance methods
  -[SBSearchGesture targetView]
  -[SBSearchGesture .cxx_destruct]
  -[SBSearchGesture scrollViewDidEndScrollingAnimation:]
  -[SBSearchGesture succinctDescriptionBuilder]
  -[SBSearchGesture scrollViewDidScrollToTop:]
  -[SBSearchGesture requireGestureRecognizerToFail:]
  -[SBSearchGesture setDelegate:]
  -[SBSearchGesture _isShowingSearch]
  -[SBSearchGesture _updateForFinalContentOffset]
  -[SBSearchGesture _updateForScrollingEnded]
  -[SBSearchGesture scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBSearchGesture _updateScrollingEnabled]
  -[SBSearchGesture resetAnimated:]
  -[SBSearchGesture descriptionBuilderWithMultilinePrefix:]
  -[SBSearchGesture isDragging]
  -[SBSearchGesture init]
  -[SBSearchGesture setDisabled:forReason:]
  -[SBSearchGesture scrollViewDidEndDragging:willDecelerate:]
  -[SBSearchGesture scrollViewDidScroll:]
  -[SBSearchGesture descriptionWithMultilinePrefix:]
  -[SBSearchGesture isTracking]
  -[SBSearchGesture succinctDescription]
  -[SBSearchGesture addObserver:]
  -[SBSearchGesture scrollViewWillBeginDragging:]
  -[SBSearchGesture delegate]
  -[SBSearchGesture locationInView:]
  -[SBSearchGesture _notifyThatGestureEndedWithShowingIfNeeded:]
  -[SBSearchGesture isAnimatingResetOrReveal]
  -[SBSearchGesture removeObserver:]
  -[SBSearchGesture isShowingSearch]
  -[SBSearchGesture revealAnimated:]
  -[SBSearchGesture _notifyThaWeStartedShowingOrHiding]
  -[SBSearchGesture searchScrollViewShouldRecognize:]
  -[SBSearchGesture setTargetView:]
  -[SBSearchGesture scrollViewDidEndDecelerating:]
  -[SBSearchGesture updateForRotation]


_SBHRecentsDocumentView : SBFView
  // instance methods
  -[_SBHRecentsDocumentView systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:]


SBHRecentsDocumentExtensionWrappingViewController : UIViewController <SBHRecentsDocumentExtensionViewControlling>
 @property  <SBHRecentsDocumentExtensionWrappingViewControllerDelegate> *delegate
 @property  BOOL usesIntrinsicContentSizeBasedOnScreenSize
 @property  _UIRemoteViewController *wrappedRemoteViewController
 @property  BOOL transparent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHRecentsDocumentExtensionWrappingViewController cancelTouchesForCurrentEventInHostedContent]
  -[SBHRecentsDocumentExtensionWrappingViewController .cxx_destruct]
  -[SBHRecentsDocumentExtensionWrappingViewController setDelegate:]
  -[SBHRecentsDocumentExtensionWrappingViewController isTransparent]
  -[SBHRecentsDocumentExtensionWrappingViewController shouldAutomaticallyForwardAppearanceMethods]
  -[SBHRecentsDocumentExtensionWrappingViewController init]
  -[SBHRecentsDocumentExtensionWrappingViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[SBHRecentsDocumentExtensionWrappingViewController setPreferredContentSize:]
  -[SBHRecentsDocumentExtensionWrappingViewController delegate]
  -[SBHRecentsDocumentExtensionWrappingViewController dealloc]
  -[SBHRecentsDocumentExtensionWrappingViewController loadView]
  -[SBHRecentsDocumentExtensionWrappingViewController _canShowWhileLocked]
  -[SBHRecentsDocumentExtensionWrappingViewController setUsesIntrinsicContentSizeBasedOnScreenSize:]
  -[SBHRecentsDocumentExtensionWrappingViewController usesIntrinsicContentSizeBasedOnScreenSize]
  -[SBHRecentsDocumentExtensionWrappingViewController wrapRemoteViewController:]
  -[SBHRecentsDocumentExtensionWrappingViewController _updateViewIntrinsicContentSize:]
  -[SBHRecentsDocumentExtensionWrappingViewController wrappedRemoteViewController]


SBIconLabelImageParameters : NSObject <NSCopying, NSMutableCopying>
 @property  NSString *text
 @property  {CGSize=dd} maxSize
 @property  UIFont *font
 @property  double scale
 @property  BOOL canTruncate
 @property  BOOL canTighten
 @property  BOOL containsEmoji
 @property  long long legibilityStyle
 @property  UIColor *textColor
 @property  BOOL accessibilityReduceTransparencyEnabled
 @property  NSString *contentSizeCategory
 @property  UIColor *focusHighlightColor
 @property  {UIEdgeInsets=dddd} textInsets
 @property  {UIEdgeInsets=dddd} fontLanguageInsets
 @property  BOOL colorspaceGrayscale

  // instance methods
  -[SBIconLabelImageParameters maxSize]
  -[SBIconLabelImageParameters legibilityStyle]
  -[SBIconLabelImageParameters .cxx_destruct]
  -[SBIconLabelImageParameters textColor]
  -[SBIconLabelImageParameters canTruncate]
  -[SBIconLabelImageParameters init]
  -[SBIconLabelImageParameters isEqual:]
  -[SBIconLabelImageParameters font]
  -[SBIconLabelImageParameters initWithParameters:]
  -[SBIconLabelImageParameters focusHighlightColor]
  -[SBIconLabelImageParameters textInsets]
  -[SBIconLabelImageParameters contentSizeCategory]
  -[SBIconLabelImageParameters mutableCopyWithZone:]
  -[SBIconLabelImageParameters canTighten]
  -[SBIconLabelImageParameters _noteNeedsHashRecalculation]
  -[SBIconLabelImageParameters containsEmoji]
  -[SBIconLabelImageParameters copyWithZone:]
  -[SBIconLabelImageParameters scale]
  -[SBIconLabelImageParameters text]
  -[SBIconLabelImageParameters isColorspaceGrayscale]
  -[SBIconLabelImageParameters isAccessibilityReduceTransparencyEnabled]
  -[SBIconLabelImageParameters fontLanguageInsets]


SBHIconLibrarySpotlightQueryEngine : SBHIconLibraryAbstractQueryEngine
  // instance methods
  -[SBHIconLibrarySpotlightQueryEngine executeQuery:]
  -[SBHIconLibrarySpotlightQueryEngine .cxx_destruct]
  -[SBHIconLibrarySpotlightQueryEngine dealloc]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_teardownQueryContext:]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_sortComperatorForQueryContext:]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_noteQueryResultsWereUpdated:iconLibraryQueryContext:notifyDelegate:]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_isBundleIdentifierValid:iconLibraryQueryContext:]
  -[SBHIconLibrarySpotlightQueryEngine _teardownCSSearchQuery:]
  -[SBHIconLibrarySpotlightQueryEngine _searchQueryForIconLibraryQuery:]
  -[SBHIconLibrarySpotlightQueryEngine _relevancyQueryForLibraryQuery:]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_markBundleIdentifiers:iconLibraryQueryContext:]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_unmarkBundleIdentifiers:iconLibraryQueryContext:]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_updateQueryRelevancyScores:iconLibraryQueryContext:]


SBHAdjustableRootIconListLayoutProvider : SBHDefaultIconListLayoutProvider
  // instance methods
  -[SBHAdjustableRootIconListLayoutProvider layoutForIconLocation:]


SBHIconDragAutoScrollAssistant : NSObject
 @property  <SBHIconDragAutoScrollAssistantDelegate> *delegate
 @property  UIView *referenceView
 @property  <UIDropSession> *activeDropSession

  // instance methods
  -[SBHIconDragAutoScrollAssistant setReferenceView:]
  -[SBHIconDragAutoScrollAssistant referenceView]
  -[SBHIconDragAutoScrollAssistant _displayLinkFired:]
  -[SBHIconDragAutoScrollAssistant .cxx_destruct]
  -[SBHIconDragAutoScrollAssistant setDelegate:]
  -[SBHIconDragAutoScrollAssistant _currentLocation]
  -[SBHIconDragAutoScrollAssistant delegate]
  -[SBHIconDragAutoScrollAssistant dealloc]
  -[SBHIconDragAutoScrollAssistant invalidate]
  -[SBHIconDragAutoScrollAssistant initWithDelegate:referenceView:]
  -[SBHIconDragAutoScrollAssistant setActiveDropSession:]
  -[SBHIconDragAutoScrollAssistant _autoScrollDirectionForLocation:]
  -[SBHIconDragAutoScrollAssistant activeDropSession]


SBIconRotationContainer : UIView
 @property  SBIconView *startView
 @property  SBIconView *endView
 @property  <SBIconViewProviding> *iconViewProvider
 @property  SBIcon *startIcon
 @property  SBIcon *endIcon
 @property  {SBIconCoordinate=qq} coordinate
 @property  NSString *location
 @property  long long transitionAnimation
 @property  BOOL offscreen

  // instance methods
  -[SBIconRotationContainer setIconViewProvider:]
  -[SBIconRotationContainer iconViewProvider]
  -[SBIconRotationContainer coordinate]
  -[SBIconRotationContainer endView]
  -[SBIconRotationContainer .cxx_destruct]
  -[SBIconRotationContainer layoutSubviews]
  -[SBIconRotationContainer endIcon]
  -[SBIconRotationContainer location]
  -[SBIconRotationContainer initWithFrame:startIcon:endIcon:iconViewProvider:coordinate:location:transitionAnimation:offscreen:]
  -[SBIconRotationContainer prepareToTransition]
  -[SBIconRotationContainer startIcon]
  -[SBIconRotationContainer performTransition]
  -[SBIconRotationContainer concludeTransition]
  -[SBIconRotationContainer addIconViewForIcon:configurationOptions:]
  -[SBIconRotationContainer _configureViewIfNecessary:forShowingSnapshotWhenDeactivated:]
  -[SBIconRotationContainer transitionAnimation]
  -[SBIconRotationContainer startView]
  -[SBIconRotationContainer isOffscreen]


SBIconPreviousLocationTracker : NSObject
 @property  SBHIconModel *iconModel

  // instance methods
  -[SBIconPreviousLocationTracker .cxx_destruct]
  -[SBIconPreviousLocationTracker iconModel]
  -[SBIconPreviousLocationTracker setIconModel:]
  -[SBIconPreviousLocationTracker captureLocationInfoForIcon:inModel:]
  -[SBIconPreviousLocationTracker previousLocationInfoForIcon:]


SBIconPreviousLocationInfo : NSObject
 @property  SBFolder *folder
 @property  NSString *folderName

  // instance methods
  -[SBIconPreviousLocationInfo setFolder:]
  -[SBIconPreviousLocationInfo .cxx_destruct]
  -[SBIconPreviousLocationInfo folder]
  -[SBIconPreviousLocationInfo folderName]
  -[SBIconPreviousLocationInfo setFolderName:]


SBFloatingDockView : SBFTouchPassThroughView
 @property  SBFloatingDockPlatterView *mainPlatterView
 @property  UIView *dividerView
 @property  UIView *touchReceivingView
 @property  double iconContentScale
 @property  <SBFloatingDockViewDelegate> *delegate
 @property  double maximumDockContinuousCornerRadius
 @property  {CGSize=dd} maximumIconSize
 @property  double maximumPlatterHeight
 @property  double maximumInterIconSpacing
 @property  SBDockIconListView *userIconListView
 @property  SBDockIconListView *recentIconListView
 @property  SBIconView *accessoryIconView
 @property  BOOL accessoryIconViewVisible
 @property  UIView *backgroundView
 @property  {UIEdgeInsets=dddd} paddingEdgeInsets
 @property  double platterVerticalMargin
 @property  unsigned long minimumUserIconSpaces
 @property  BOOL editing
 @property  {CGSize=dd} maximumEditingIconSize
 @property  double contentHeight
 @property  double interIconSpacing
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} platterFrame
 @property  BOOL hasPlatterShadow
 @property  {UIEdgeInsets=dddd} platterShadowOutsets

  // class methods
  +[SBFloatingDockView _referenceInterIconSpacingWithIconImageInfo:]
  +[SBFloatingDockView maximumInterIconSpacingWithIconImageInfo:]
  +[SBFloatingDockView maximumDockContinuousCornerRadiusWithIconImageInfo:]
  +[SBFloatingDockView maximumIconSizeWithIconImageInfo:]
  +[SBFloatingDockView maximumPlatterHeightWithIconImageInfo:]
  +[SBFloatingDockView contentHeightForBounds:mainPlatterViewFrame:]
  +[SBFloatingDockView getMetrics:forBounds:numberOfUserIcons:numberOfRecentIcons:displayAccessoryIconView:paddingEdgeInsets:referenceIconSize:maximumIconSize:referenceInterIconSpacing:maximumInterIconSpacing:platterVerticalMargin:editing:]
  +[SBFloatingDockView minimumPlatterMargin]

  // instance methods
  -[SBFloatingDockView contentHeight]
  -[SBFloatingDockView bounce]
  -[SBFloatingDockView setIconContentScale:]
  -[SBFloatingDockView setEditing:animated:]
  -[SBFloatingDockView iconContentScale]
  -[SBFloatingDockView .cxx_destruct]
  -[SBFloatingDockView layoutSubviews]
  -[SBFloatingDockView setDelegate:]
  -[SBFloatingDockView setEditing:]
  -[SBFloatingDockView initWithFrame:]
  -[SBFloatingDockView pointInside:withEvent:]
  -[SBFloatingDockView setBackgroundView:]
  -[SBFloatingDockView isEditing]
  -[SBFloatingDockView delegate]
  -[SBFloatingDockView _dynamicUserInterfaceTraitDidChange]
  -[SBFloatingDockView backgroundView]
  -[SBFloatingDockView _iconImageInfo]
  -[SBFloatingDockView mainPlatterView]
  -[SBFloatingDockView setRecentIconListView:]
  -[SBFloatingDockView userIconListView]
  -[SBFloatingDockView recentIconListView]
  -[SBFloatingDockView setAccessoryIconView:]
  -[SBFloatingDockView contentHeightForBounds:]
  -[SBFloatingDockView interIconSpacing]
  -[SBFloatingDockView platterVerticalMargin]
  -[SBFloatingDockView setPlatterVerticalMargin:]
  -[SBFloatingDockView platterShadowOutsetsForBounds:]
  -[SBFloatingDockView maximumDockContinuousCornerRadius]
  -[SBFloatingDockView maximumEditingIconSize]
  -[SBFloatingDockView setMaximumEditingIconSize:]
  -[SBFloatingDockView platterFrame]
  -[SBFloatingDockView setPaddingEdgeInsets:]
  -[SBFloatingDockView setUserIconListView:]
  -[SBFloatingDockView accessoryIconView]
  -[SBFloatingDockView setAccessoryIconViewVisible:]
  -[SBFloatingDockView setHasPlatterShadow:]
  -[SBFloatingDockView setMinimumUserIconSpaces:]
  -[SBFloatingDockView updateDividerVisualStyling]
  -[SBFloatingDockView maximumPlatterHeight]
  -[SBFloatingDockView _shouldDisplayAccessoryIconView]
  -[SBFloatingDockView getMetrics:forBounds:]
  -[SBFloatingDockView _referenceIconSize]
  -[SBFloatingDockView maximumIconSize]
  -[SBFloatingDockView _referenceInterIconSpacing]
  -[SBFloatingDockView maximumInterIconSpacing]
  -[SBFloatingDockView minimumUserIconSpaces]
  -[SBFloatingDockView dividerView]
  -[SBFloatingDockView hasPlatterShadow]
  -[SBFloatingDockView platterShadowOutsets]
  -[SBFloatingDockView iconContentScaleForNumberOfUserIcons:]
  -[SBFloatingDockView setMainPlatterView:]
  -[SBFloatingDockView isAccessoryIconViewVisible]
  -[SBFloatingDockView paddingEdgeInsets]
  -[SBFloatingDockView setDividerView:]
  -[SBFloatingDockView touchReceivingView]
  -[SBFloatingDockView setTouchReceivingView:]


SBFolderIconImageCache : NSObject <SBFolderIconObserver, SBFolderObserver, SBHIconImageCacheObserver, SBFolderIconGridCellImageProvider>
 @property  CPMemoryPool *pool
 @property  CPMemoryPool *miniGridImagePool
 @property  <SBIconListLayout> *listLayout
 @property  SBHIconImageCache *iconImageCache
 @property  unsigned long numberOfCachedImages
 @property  unsigned long numberOfCacheHits
 @property  unsigned long numberOfCacheMisses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFolderIconImageCache gridCellImageOfSize:forIconImage:]
  +[SBFolderIconImageCache drawTreatmentForIcon:inRect:]
  +[SBFolderIconImageCache imageForPageAtIndex:inFolderIcon:listLayout:gridCellImageProvider:pool:]
  +[SBFolderIconImageCache gridCellImageOfSize:forIcon:iconImageInfo:]
  +[SBFolderIconImageCache needsTreatmentForIcon:]

  // instance methods
  -[SBFolderIconImageCache numberOfCachedImages]
  -[SBFolderIconImageCache folder:didReplaceIcon:withIcon:]
  -[SBFolderIconImageCache cacheGridCellImagesForIcons:]
  -[SBFolderIconImageCache informObserversOfUpdateForFolderIcon:]
  -[SBFolderIconImageCache folder:didRemoveLists:atIndexes:]
  -[SBFolderIconImageCache genericMiniGridImage]
  -[SBFolderIconImageCache .cxx_destruct]
  -[SBFolderIconImageCache folder:didMoveList:fromIndex:toIndex:]
  -[SBFolderIconImageCache iconImageCache]
  -[SBFolderIconImageCache listLayout]
  -[SBFolderIconImageCache initWithListLayout:]
  -[SBFolderIconImageCache setIconImageCache:]
  -[SBFolderIconImageCache init]
  -[SBFolderIconImageCache imageForPageAtIndex:inFolderIcon:]
  -[SBFolderIconImageCache iconImageCache:didUpdateImageForIcon:]
  -[SBFolderIconImageCache updateCachedImagesForFolderIcon:afterChangeToContainedForIcon:imageUpdated:treatmentsOnly:]
  -[SBFolderIconImageCache miniGridImagePool]
  -[SBFolderIconImageCache folder:didMoveIcon:]
  -[SBFolderIconImageCache pool]
  -[SBFolderIconImageCache rebuildImagesForFolderIcon:]
  -[SBFolderIconImageCache numberOfCacheHits]
  -[SBFolderIconImageCache folderIcon:containedIconAccessoriesDidUpdate:]
  -[SBFolderIconImageCache removeObserver:forFolderIcon:]
  -[SBFolderIconImageCache numberOfCacheMisses]
  -[SBFolderIconImageCache folder:didAddIcons:removedIcons:]
  -[SBFolderIconImageCache folderIcon:containedIconImageDidUpdate:]
  -[SBFolderIconImageCache gridCellImageOfSize:forIcon:iconImageInfo:]
  -[SBFolderIconImageCache gridCellImageForIcon:]
  -[SBFolderIconImageCache folderIcon:containedIconLaunchEnabledDidChange:]
  -[SBFolderIconImageCache folder:didAddList:]
  -[SBFolderIconImageCache addObserver:forFolderIcon:]


SBIconModelPropertyListFileStore : NSObject <SBIconModelStore, BSDescriptionProviding>
 @property  NSURL *currentIconStateURL
 @property  NSURL *desiredIconStateURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconModelPropertyListFileStore .cxx_destruct]
  -[SBIconModelPropertyListFileStore succinctDescriptionBuilder]
  -[SBIconModelPropertyListFileStore descriptionBuilderWithMultilinePrefix:]
  -[SBIconModelPropertyListFileStore init]
  -[SBIconModelPropertyListFileStore descriptionWithMultilinePrefix:]
  -[SBIconModelPropertyListFileStore succinctDescription]
  -[SBIconModelPropertyListFileStore deleteDesiredIconStateWithOptions:error:]
  -[SBIconModelPropertyListFileStore loadDesiredIconState:]
  -[SBIconModelPropertyListFileStore loadCurrentIconState:]
  -[SBIconModelPropertyListFileStore saveDesiredIconState:error:]
  -[SBIconModelPropertyListFileStore saveCurrentIconState:error:]
  -[SBIconModelPropertyListFileStore deleteCurrentIconStateWithOptions:error:]
  -[SBIconModelPropertyListFileStore initWithIconStateURL:desiredIconStateURL:]
  -[SBIconModelPropertyListFileStore _save:url:error:]
  -[SBIconModelPropertyListFileStore _delete:options:error:]
  -[SBIconModelPropertyListFileStore _load:error:]
  -[SBIconModelPropertyListFileStore currentIconStateURL]
  -[SBIconModelPropertyListFileStore desiredIconStateURL]


SBHPageManagementCheckbox : UIButton
 @property  double checkboxDiameter
 @property  UIView *backgroundView
 @property  UIView *highlightView
 @property  CALayer *deselectedMask
 @property  UIImageView *customImageView

  // instance methods
  -[SBHPageManagementCheckbox setHighlighted:]
  -[SBHPageManagementCheckbox setSelected:animated:]
  -[SBHPageManagementCheckbox .cxx_destruct]
  -[SBHPageManagementCheckbox layoutSubviews]
  -[SBHPageManagementCheckbox setSelected:]
  -[SBHPageManagementCheckbox sizeThatFits:]
  -[SBHPageManagementCheckbox initWithFrame:]
  -[SBHPageManagementCheckbox _dynamicUserInterfaceTraitDidChange]
  -[SBHPageManagementCheckbox customImageView]
  -[SBHPageManagementCheckbox highlightView]
  -[SBHPageManagementCheckbox intrinsicContentSize]
  -[SBHPageManagementCheckbox backgroundView]
  -[SBHPageManagementCheckbox initWithFrame:checkboxDiameter:backgroundView:]
  -[SBHPageManagementCheckbox effectiveHighlightAlpha]
  -[SBHPageManagementCheckbox updateDeselectedMaskState]
  -[SBHPageManagementCheckbox effectiveImageAlpha]
  -[SBHPageManagementCheckbox checkboxDiameter]
  -[SBHPageManagementCheckbox deselectedMask]


SBHInterpolationSettings : PTSettings
 @property  double lowerBoundFactor
 @property  double upperBoundFactor

  // class methods
  +[SBHInterpolationSettings settingsControllerModule]

  // instance methods
  -[SBHInterpolationSettings setDefaultValues]
  -[SBHInterpolationSettings lowerBoundFactor]
  -[SBHInterpolationSettings upperBoundFactor]
  -[SBHInterpolationSettings setLowerBoundFactor:]
  -[SBHInterpolationSettings setUpperBoundFactor:]


SBHLibraryCategoryIconViewController : UIViewController <SBFolderObserver, SBHLibraryCategoryObserver, SBIconViewQuerying, SBIconViewCustomImageViewControlling, SBHLegibility>
 @property  SBHLibraryCategory *category
 @property  SBFolder *folder
 @property  NSString *location
 @property  <SBIconViewProviding> *iconViewProvider
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  SBHIconImageCache *iconImageCache
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBIconListView *iconListView
 @property  UIView *backgroundView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  SBIcon *icon
 @property  <SBLeafIconDataSource> *visiblyActiveDataSource
 @property  BOOL editing
 @property  BOOL wantsEditingDisplayStyle
 @property  BOOL showingContextMenu
 @property  BOOL overlapping
 @property  BOOL dropping
 @property  BOOL userInteractionEnabled
 @property  BOOL wantsCaptureOnlyBackgroundView
 @property  @? backgroundViewProvider
 @property  @? backgroundViewConfigurator
 @property  BOOL forcesEdgeAntialiasing
 @property  double brightness
 @property  BOOL wantsLabelHidden
 @property  unsigned long userVisibilityStatus
 @property  BOOL automaticallyUpdatesVisiblySettled
 @property  unsigned long presentationMode
 @property  BOOL showsSnapshotWhenDeactivated
 @property  unsigned long imageViewAlignment
 @property  unsigned long pauseReasons
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *applicationShortcutItems
 @property  {UIEdgeInsets=dddd} minimumPreferredEdgeInsetsForContextMenu
 @property  UIView *snapshotView
 @property  {CGPoint=dd} snapshotViewCenter
 @property  UIView *springLoadingEffectTargetView
 @property  {SBIconApproximateLayoutPosition=QQ} approximateLayoutPosition
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds
 @property  double continuousCornerRadius
 @property  BOOL showsSquareCorners

  // instance methods
  -[SBHLibraryCategoryIconViewController setIconViewProvider:]
  -[SBHLibraryCategoryIconViewController iconViewForIcon:location:]
  -[SBHLibraryCategoryIconViewController firstIconViewForIcon:excludingLocations:]
  -[SBHLibraryCategoryIconViewController folderIconImageCache]
  -[SBHLibraryCategoryIconViewController pauseReasons]
  -[SBHLibraryCategoryIconViewController presentedIconLocations]
  -[SBHLibraryCategoryIconViewController folder:didRemoveLists:atIndexes:]
  -[SBHLibraryCategoryIconViewController setEditing:animated:]
  -[SBHLibraryCategoryIconViewController iconViewProvider]
  -[SBHLibraryCategoryIconViewController continuousCornerRadius]
  -[SBHLibraryCategoryIconViewController .cxx_destruct]
  -[SBHLibraryCategoryIconViewController iconImageCache]
  -[SBHLibraryCategoryIconViewController sourceView]
  -[SBHLibraryCategoryIconViewController viewDidLoad]
  -[SBHLibraryCategoryIconViewController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHLibraryCategoryIconViewController setLegibilitySettings:]
  -[SBHLibraryCategoryIconViewController setIconImageCache:]
  -[SBHLibraryCategoryIconViewController iconImageInfo]
  -[SBHLibraryCategoryIconViewController visibleBounds]
  -[SBHLibraryCategoryIconViewController setShowsSquareCorners:]
  -[SBHLibraryCategoryIconViewController iconListView]
  -[SBHLibraryCategoryIconViewController setFolderIconImageCache:]
  -[SBHLibraryCategoryIconViewController setListLayoutProvider:]
  -[SBHLibraryCategoryIconViewController location]
  -[SBHLibraryCategoryIconViewController setEditing:]
  -[SBHLibraryCategoryIconViewController isDisplayingIconView:inLocation:]
  -[SBHLibraryCategoryIconViewController firstIconViewForIcon:inLocations:]
  -[SBHLibraryCategoryIconViewController folder]
  -[SBHLibraryCategoryIconViewController isDisplayingIcon:inLocations:]
  -[SBHLibraryCategoryIconViewController isEditing]
  -[SBHLibraryCategoryIconViewController isDisplayingIconView:]
  -[SBHLibraryCategoryIconViewController firstIconViewForIcon:]
  -[SBHLibraryCategoryIconViewController categoryDidUpdate:]
  -[SBHLibraryCategoryIconViewController category]
  -[SBHLibraryCategoryIconViewController enumerateDisplayedIconViewsUsingBlock:]
  -[SBHLibraryCategoryIconViewController showsSquareCorners]
  -[SBHLibraryCategoryIconViewController listLayoutProvider]
  -[SBHLibraryCategoryIconViewController isDisplayingIcon:inLocation:]
  -[SBHLibraryCategoryIconViewController setPauseReasons:]
  -[SBHLibraryCategoryIconViewController isDisplayingIcon:]
  -[SBHLibraryCategoryIconViewController setIconImageInfo:]
  -[SBHLibraryCategoryIconViewController isPresentingIconLocation:]
  -[SBHLibraryCategoryIconViewController legibilitySettings]
  -[SBHLibraryCategoryIconViewController backgroundView]
  -[SBHLibraryCategoryIconViewController folder:didAddList:]
  -[SBHLibraryCategoryIconViewController categoryWillUpdate:]
  -[SBHLibraryCategoryIconViewController updateCategory:location:]
  -[SBHLibraryCategoryIconViewController updateFolder:location:]


SBHLibraryCategoryPodIconListView : SBIconListView
  // instance methods
  -[SBHLibraryCategoryPodIconListView baseIconViewClass]
  -[SBHLibraryCategoryPodIconListView configureIconView:forIcon:]


SBHLibraryCategoryPodIconView : SBIconView
  // instance methods
  -[SBHLibraryCategoryPodIconView representedFolderIconLocation]
  -[SBHLibraryCategoryPodIconView isUserInteractionEnabled]


SBPlaceholderIcon : SBIcon
 @property  SBIcon *referencedIcon
 @property  NSArray *referencedIcons

  // class methods
  +[SBPlaceholderIcon grabbedIconPlaceholderForIcon:]
  +[SBPlaceholderIcon grabbedIconPlaceholderForIcons:]
  +[SBPlaceholderIcon placeholderForIcon:]
  +[SBPlaceholderIcon placeholderNodeIdentifierForIcon:]
  +[SBPlaceholderIcon placeholderNodeIdentifierForIconNodeIdentifier:]
  +[SBPlaceholderIcon hasIconImage]
  +[SBPlaceholderIcon clusteredIconPlaceholderForIcons:]

  // instance methods
  -[SBPlaceholderIcon automationID]
  -[SBPlaceholderIcon nodeIdentifier]
  -[SBPlaceholderIcon canReceiveGrabbedIcon]
  -[SBPlaceholderIcon .cxx_destruct]
  -[SBPlaceholderIcon folder]
  -[SBPlaceholderIcon isUninstallSupported]
  -[SBPlaceholderIcon generateIconImageWithInfo:]
  -[SBPlaceholderIcon isPlaceholder]
  -[SBPlaceholderIcon genericIconImageWithInfo:]
  -[SBPlaceholderIcon referencedIcons]
  -[SBPlaceholderIcon referencedIcon]
  -[SBPlaceholderIcon referencesIcon:]
  -[SBPlaceholderIcon referencesIconWithIdentifier:]
  -[SBPlaceholderIcon updateReferencedIcons:]
  -[SBPlaceholderIcon _initWithNodeIdentifier:icon:]
  -[SBPlaceholderIcon _initWithNodeIdentifier:icons:]
  -[SBPlaceholderIcon gridCellImage]


SBGrabbedPlaceholderIcon : SBPlaceholderIcon
  // instance methods
  -[SBGrabbedPlaceholderIcon isGrabbedIconPlaceholder]


SBClusteredPlaceholderIcon : SBPlaceholderIcon
  // instance methods
  -[SBClusteredPlaceholderIcon isClusteredIconPlaceholder]


SBIconModelMemoryStore : NSObject <SBIconModelStore>
 @property  NSDictionary *currentState
 @property  NSDictionary *desiredState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconModelMemoryStore .cxx_destruct]
  -[SBIconModelMemoryStore init]
  -[SBIconModelMemoryStore currentState]
  -[SBIconModelMemoryStore deleteDesiredIconStateWithOptions:error:]
  -[SBIconModelMemoryStore loadDesiredIconState:]
  -[SBIconModelMemoryStore loadCurrentIconState:]
  -[SBIconModelMemoryStore setCurrentState:]
  -[SBIconModelMemoryStore saveDesiredIconState:error:]
  -[SBIconModelMemoryStore saveCurrentIconState:error:]
  -[SBIconModelMemoryStore deleteCurrentIconStateWithOptions:error:]
  -[SBIconModelMemoryStore setDesiredState:]
  -[SBIconModelMemoryStore initWithCurrentState:desiredState:]
  -[SBIconModelMemoryStore desiredState]


_SBFloatingDockPlatterMetrics : NSObject
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  double continuousCornerRadius
 @property  double shadowRadius
 @property  double shadowYOffset

  // instance methods
  -[_SBFloatingDockPlatterMetrics continuousCornerRadius]
  -[_SBFloatingDockPlatterMetrics shadowRadius]
  -[_SBFloatingDockPlatterMetrics shadowYOffset]
  -[_SBFloatingDockPlatterMetrics bounds]
  -[_SBFloatingDockPlatterMetrics initWithBounds:continuousCornerRadius:shadowRadius:shadowYOffset:]


SBFloatingDockPlatterView : UIView
 @property  UIImageView *shadowView
 @property  _SBFloatingDockPlatterMetrics *metrics
 @property  double referenceHeight
 @property  double maximumContinuousCornerRadius
 @property  NSString *backdropGroupName
 @property  NSString *backdropGroupNamespace
 @property  BOOL hasShadow
 @property  {UIEdgeInsets=dddd} shadowOutsets
 @property  UIView *backgroundView

  // class methods
  +[SBFloatingDockPlatterView borderColorForUserInterfaceStyle:]

  // instance methods
  -[SBFloatingDockPlatterView setBackdropGroupName:]
  -[SBFloatingDockPlatterView initWithCoder:]
  -[SBFloatingDockPlatterView setHasShadow:]
  -[SBFloatingDockPlatterView .cxx_destruct]
  -[SBFloatingDockPlatterView hasShadow]
  -[SBFloatingDockPlatterView layoutSubviews]
  -[SBFloatingDockPlatterView updateBorderVisualStyling]
  -[SBFloatingDockPlatterView shadowView]
  -[SBFloatingDockPlatterView shadowOutsets]
  -[SBFloatingDockPlatterView setMetrics:]
  -[SBFloatingDockPlatterView backdropGroupName]
  -[SBFloatingDockPlatterView setShadowView:]
  -[SBFloatingDockPlatterView referenceHeight]
  -[SBFloatingDockPlatterView metrics]
  -[SBFloatingDockPlatterView initWithFrame:]
  -[SBFloatingDockPlatterView setBackgroundView:]
  -[SBFloatingDockPlatterView setReferenceHeight:]
  -[SBFloatingDockPlatterView _dynamicUserInterfaceTraitDidChange]
  -[SBFloatingDockPlatterView backgroundView]
  -[SBFloatingDockPlatterView setBackdropGroupNamespace:]
  -[SBFloatingDockPlatterView backdropGroupNamespace]
  -[SBFloatingDockPlatterView setMaximumContinuousCornerRadius:]
  -[SBFloatingDockPlatterView shadowOutsetsForBounds:]
  -[SBFloatingDockPlatterView _maxShadowViewAlpha]
  -[SBFloatingDockPlatterView _shadowOutsetsForMetrics:]
  -[SBFloatingDockPlatterView _metricsForBounds:]
  -[SBFloatingDockPlatterView _shadowInsetsForMetrics:]
  -[SBFloatingDockPlatterView _shadowImageViewForMetrics:]
  -[SBFloatingDockPlatterView maximumContinuousCornerRadius]
  -[SBFloatingDockPlatterView _shadowImageForMetrics:]


SBIconListViewDraggingDestinationDelegate : NSObject <SBFSpringLoadedInteractionBehaviorDelegate, SBFSpringLoadedInteractionEffectDelegate, BSDescriptionProviding, UIDropInteractionDelegate>
 @property  UIDropInteraction *dropInteraction
 @property  unsigned long currentDragType
 @property  <SBIconListViewDraggingPolicyHandling> *currentPolicyHandler
 @property  unsigned long currentSpringLoadedDragType
 @property  <SBIconListViewDraggingPolicyHandling> *springLoadingPolicyHandler
 @property  BOOL waitingForConcludeDrag
 @property  SBIconListView *iconListView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:item:willAnimateDropWithAnimator:]
  -[SBIconListViewDraggingDestinationDelegate initWithIconListView:]
  -[SBIconListViewDraggingDestinationDelegate _dropInteraction:customSpringAnimationBehaviorForDroppingItem:]
  -[SBIconListViewDraggingDestinationDelegate _resetSpringLoadingPolicyHandler]
  -[SBIconListViewDraggingDestinationDelegate uniqueIdentifierForDropSession:]
  -[SBIconListViewDraggingDestinationDelegate setCurrentDragType:]
  -[SBIconListViewDraggingDestinationDelegate targetViewForSpringLoadingEffectForView:]
  -[SBIconListViewDraggingDestinationDelegate targetItemForSpringLoadingInteractionInView:atLocation:forDropSession:]
  -[SBIconListViewDraggingDestinationDelegate addDragObserver:forDropSession:]
  -[SBIconListViewDraggingDestinationDelegate .cxx_destruct]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:sessionDidExit:]
  -[SBIconListViewDraggingDestinationDelegate unmarkDropSessionAsWaitingForConcludeDrop:]
  -[SBIconListViewDraggingDestinationDelegate succinctDescriptionBuilder]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:canHandleSession:]
  -[SBIconListViewDraggingDestinationDelegate dragTypeForDropSession:]
  -[SBIconListViewDraggingDestinationDelegate updateSpringLoadedPolicyHandlerForDropSession:]
  -[SBIconListViewDraggingDestinationDelegate descriptionBuilderWithMultilinePrefix:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:sessionDidUpdate:]
  -[SBIconListViewDraggingDestinationDelegate iconListView]
  -[SBIconListViewDraggingDestinationDelegate descriptionWithMultilinePrefix:]
  -[SBIconListViewDraggingDestinationDelegate enumerateDragObserversForDropSession:usingBlock:]
  -[SBIconListViewDraggingDestinationDelegate succinctDescription]
  -[SBIconListViewDraggingDestinationDelegate removeAllDragObserversForDropSession:]
  -[SBIconListViewDraggingDestinationDelegate setSpringLoadingPolicyHandler:]
  -[SBIconListViewDraggingDestinationDelegate currentDragType]
  -[SBIconListViewDraggingDestinationDelegate setCurrentSpringLoadedDragType:]
  -[SBIconListViewDraggingDestinationDelegate currentSpringLoadedDragType]
  -[SBIconListViewDraggingDestinationDelegate updateCurrentPolicyHandlerForDropSession:]
  -[SBIconListViewDraggingDestinationDelegate isWaitingForConcludeDrag]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:sessionDidEnter:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:performDrop:]
  -[SBIconListViewDraggingDestinationDelegate setCurrentPolicyHandler:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:sessionDidEnd:]
  -[SBIconListViewDraggingDestinationDelegate markDropSessionAsWaitingForConcludeDrop:]
  -[SBIconListViewDraggingDestinationDelegate springLoadingPolicyHandler]
  -[SBIconListViewDraggingDestinationDelegate setWaitingForConcludeDrag:]
  -[SBIconListViewDraggingDestinationDelegate _handleSpringloadAndComplete:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:concludeDrop:]
  -[SBIconListViewDraggingDestinationDelegate isDropSessionWaitingForConcludeDrop:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:previewForDroppingItem:withDefault:]
  -[SBIconListViewDraggingDestinationDelegate currentPolicyHandler]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction]
  -[SBIconListViewDraggingDestinationDelegate springLoadedInteractionDidFinish]


SBIconListViewDraggingDataPolicyHandler : NSObject <LSOpenResourceOperationDelegate, SBIconListViewDraggingPolicyHandling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewDraggingDataPolicyHandler openResourceOperation:didFailWithError:]
  -[SBIconListViewDraggingDataPolicyHandler openResourceOperation:didFinishCopyingResource:]
  -[SBIconListViewDraggingDataPolicyHandler .cxx_destruct]
  -[SBIconListViewDraggingDataPolicyHandler dropInteraction:canHandleSession:]
  -[SBIconListViewDraggingDataPolicyHandler init]
  -[SBIconListViewDraggingDataPolicyHandler dragHitRegionForDropSession:iconListView:point:icon:]
  -[SBIconListViewDraggingDataPolicyHandler allowsSpringLoadForSession:onIconView:]
  -[SBIconListViewDraggingDataPolicyHandler handleSpringLoadOnIconView:]
  -[SBIconListViewDraggingDataPolicyHandler _removeAnySourceURLForOperation:]
  -[SBIconListViewDraggingDataPolicyHandler _currentDraggingIconViewInView:forLocation:]
  -[SBIconListViewDraggingDataPolicyHandler _bestSupportedUTIForDragItem:supportedTypes:]


_SBIconListViewDataDraggingContext : NSObject <BSDescriptionProviding>
 @property  SBIconView *iconView
 @property  NSString *bestAvailableUTI
 @property  BOOL allowsMoveOperation
 @property  long long fileOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBIconListViewDataDraggingContext .cxx_destruct]
  -[_SBIconListViewDataDraggingContext succinctDescriptionBuilder]
  -[_SBIconListViewDataDraggingContext descriptionBuilderWithMultilinePrefix:]
  -[_SBIconListViewDataDraggingContext descriptionWithMultilinePrefix:]
  -[_SBIconListViewDataDraggingContext succinctDescription]
  -[_SBIconListViewDataDraggingContext allowsMoveOperation]
  -[_SBIconListViewDataDraggingContext iconView]
  -[_SBIconListViewDataDraggingContext initWithIconView:bestUTI:allowsMoveOperation:fileOptions:]
  -[_SBIconListViewDataDraggingContext bestAvailableUTI]
  -[_SBIconListViewDataDraggingContext fileOptions]


SBIconListViewAppDragContext : NSObject
 @property  NSTimer *pauseTimer
 @property  {CGPoint=dd} pausePoint
 @property  BOOL hasPaused

  // instance methods
  -[SBIconListViewAppDragContext .cxx_destruct]
  -[SBIconListViewAppDragContext pauseTimer]
  -[SBIconListViewAppDragContext setPauseTimer:]
  -[SBIconListViewAppDragContext pausePoint]
  -[SBIconListViewAppDragContext setPausePoint:]
  -[SBIconListViewAppDragContext hasPaused]
  -[SBIconListViewAppDragContext setHasPaused:]


SBIconListViewDraggingAppPolicyHandler : NSObject <SBIconListViewDraggingPolicyHandling>
 @property  SBIconListViewDraggingDestinationDelegate *draggingDestinationDelegate
 @property  SBHIconEditingSettings *iconEditingSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:item:willAnimateDropWithAnimator:]
  -[SBIconListViewDraggingAppPolicyHandler _dropInteraction:customSpringAnimationBehaviorForDroppingItem:]
  -[SBIconListViewDraggingAppPolicyHandler .cxx_destruct]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:sessionDidExit:]
  -[SBIconListViewDraggingAppPolicyHandler iconEditingSettings]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:canHandleSession:]
  -[SBIconListViewDraggingAppPolicyHandler init]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:sessionDidUpdate:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:sessionDidEnter:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:performDrop:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:sessionDidEnd:]
  -[SBIconListViewDraggingAppPolicyHandler setIconEditingSettings:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:previewForDroppingItem:withDefault:]
  -[SBIconListViewDraggingAppPolicyHandler setDraggingDestinationDelegate:]
  -[SBIconListViewDraggingAppPolicyHandler dragHitRegionForDropSession:iconListView:point:icon:]
  -[SBIconListViewDraggingAppPolicyHandler allowsSpringLoadForSession:onIconView:]
  -[SBIconListViewDraggingAppPolicyHandler handleSpringLoadOnIconView:]
  -[SBIconListViewDraggingAppPolicyHandler _cancelDragPauseTimerForDropSession:]
  -[SBIconListViewDraggingAppPolicyHandler draggingDestinationDelegate]
  -[SBIconListViewDraggingAppPolicyHandler _dragPauseTimerFired:]
  -[SBIconListViewDraggingAppPolicyHandler _resetDragPauseTimerForPoint:dropSession:]
  -[SBIconListViewDraggingAppPolicyHandler _iconForDragItem:]
  -[SBIconListViewDraggingAppPolicyHandler _updateDragPauseForDropSession:]
  -[SBIconListViewDraggingAppPolicyHandler _iconViewForDragItem:createIfNecessary:]
  -[SBIconListViewDraggingAppPolicyHandler _destinationFolderIconViewForDragItem:iconIndexPath:folderRelativeIconIndexPath:]
  -[SBIconListViewDraggingAppPolicyHandler _cancelDragPauseTimers]


SBSApplicationShortcutItem(SBHAdditions)
	// instance methods
	-[SBSApplicationShortcutItem(SBHAdditions) _assetManager]
	-[SBSApplicationShortcutItem(SBHAdditions) badgeView]
	-[SBSApplicationShortcutItem(SBHAdditions) setBadgeView:]
	-[SBSApplicationShortcutItem(SBHAdditions) _monogrammerForKey:style:]
	-[SBSApplicationShortcutItem(SBHAdditions) _setupAssetManagerWithApplicationBundleURL:]
	-[SBSApplicationShortcutItem(SBHAdditions) _lightMonogrammer]
	-[SBSApplicationShortcutItem(SBHAdditions) _darkMonogrammer]
	-[SBSApplicationShortcutItem(SBHAdditions) sb_buildIconImageWithApplicationBundleURL:image:systemImageName:]
	-[SBSApplicationShortcutItem(SBHAdditions) sbh_isDestructive]
	-[SBSApplicationShortcutItem(SBHAdditions) sbh_shortcutSection]
	-[SBSApplicationShortcutItem(SBHAdditions) sbh_isShortcutSpringBoardOnly]
	-[SBSApplicationShortcutItem(SBHAdditions) sbh_isShortcutDeleteOrRemove]

(SBHAdditions)
	// instance methods
	-[(SBHAdditions) sbh_map:]
	-[(SBHAdditions) sbh_diffWithSet:]

UIViewController(SBHWidgetUtilitiesInternal)
	// instance methods
	-[UIViewController(SBHWidgetUtilitiesInternal) sbh_underlyingAvocadoHostViewControllers]
	-[UIViewController(SBHWidgetUtilitiesInternal) sbh_isWidgetStackViewController]
	-[UIViewController(SBHWidgetUtilitiesInternal) sbh_isMultiplexingViewController]
	-[UIViewController(SBHWidgetUtilitiesInternal) sbh_isWidgetHostViewController]
	-[UIViewController(SBHWidgetUtilitiesInternal) sbh_isCustomIconImageViewController]
	-[UIViewController(SBHWidgetUtilitiesInternal) _sb_recursiveUpdateContentOverlayInsetsFromParentIfNecessary]

CHUISAvocadoHostViewController(SBHWidgetUtilitiesInternal)
	// instance methods
	-[CHUISAvocadoHostViewController(SBHWidgetUtilitiesInternal) sbh_underlyingAvocadoHostViewControllers]
	-[CHUISAvocadoHostViewController(SBHWidgetUtilitiesInternal) sbh_isWidgetHostViewController]

BSDescriptionBuilder(SBHWidgetUtilities)
	// instance methods
	-[BSDescriptionBuilder(SBHWidgetUtilities) sbh_appendDescriptionsForViewControllers:]

UIWindow(SafeAreaPropagation)
	// instance methods
	-[UIWindow(SafeAreaPropagation) _sb_recursiveUpdateContentOverlayInsetsFromParentIfNecessary]

LSApplicationRecord(SBHSimpleApplicationDataSource)
	// instance methods
	-[LSApplicationRecord(SBHSimpleApplicationDataSource) sbh_isValidType]

(SBHStringUtilities)
	// instance methods
	-[(SBHStringUtilities) sbh_stringByReplacingCharactersInSet:withString:]
	-[(SBHStringUtilities) sbh_stringByDeletingCharactersInSet:]

CHSAvocadoDescriptor(Sanitization)
	// instance methods
	-[CHSAvocadoDescriptor(Sanitization) backgroundColor]
	-[CHSAvocadoDescriptor(Sanitization) sbh_canBeAddedToStack]
	-[CHSAvocadoDescriptor(Sanitization) accentColor]
	-[CHSAvocadoDescriptor(Sanitization) sbh_supportedSizeClasses]
	-[CHSAvocadoDescriptor(Sanitization) sbh_widgetName]
	-[CHSAvocadoDescriptor(Sanitization) sbh_widgetDescription]
	-[CHSAvocadoDescriptor(Sanitization) mostInterestingColor]
	-[CHSAvocadoDescriptor(Sanitization) sbh_galleryItemIdentifier]
	-[CHSAvocadoDescriptor(Sanitization) sanitizedDescriptor]
	-[CHSAvocadoDescriptor(Sanitization) sbh_iconDataSource]
	-[CHSAvocadoDescriptor(Sanitization) _loadColorsBackgroundColor:accentColor:]
	-[CHSAvocadoDescriptor(Sanitization) _loadColorsFromExtensionForBundleIdentifier:backgroundColor:accentColor:]
	-[CHSAvocadoDescriptor(Sanitization) _loadColorsFromShortcutsForBundleIdentifier:backgroundColor:accentColor:]
	-[CHSAvocadoDescriptor(Sanitization) sbh_appName]

MTMaterialView(Reuse)
	// instance methods
	-[MTMaterialView(Reuse) prepareForReuse]

(SBHArrayUtilities)
	// instance methods
	-[(SBHArrayUtilities) sbh_containsObjectInArray:]
	-[(SBHArrayUtilities) sbh_containsAllObjectsInArray:]

SBSApplicationShortcutSystemIcon(SBHAdditions)
	// class methods
	+[SBSApplicationShortcutSystemIcon(SBHAdditions) sbh_defaultImage]

	// instance methods
	-[SBSApplicationShortcutSystemIcon(SBHAdditions) sbh_image]
	-[SBSApplicationShortcutSystemIcon(SBHAdditions) sbh_systemImage]

SBSApplicationShortcutSystemPrivateIcon(SBHAdditions)
	// class methods
	+[SBSApplicationShortcutSystemPrivateIcon(SBHAdditions) sbh_defaultImage]

	// instance methods
	-[SBSApplicationShortcutSystemPrivateIcon(SBHAdditions) sbh_image]
	-[SBSApplicationShortcutSystemPrivateIcon(SBHAdditions) sbh_systemImage]

NSPointerArray(SBHPointerArrayUtilities)
	// instance methods
	-[NSPointerArray(SBHPointerArrayUtilities) sbh_removePointer:]
	-[NSPointerArray(SBHPointerArrayUtilities) sbh_indexOfPointer:inRange:]
	-[NSPointerArray(SBHPointerArrayUtilities) sbh_indexOfPointer:]

UIColor(SpringBoardHome)
	// instance methods
	-[UIColor(SpringBoardHome) sb_perceivedLightness]
	-[UIColor(SpringBoardHome) sb_colorfulness]

NSNotificationCenter(SBLeafIconDataSource)
	// class methods
	+[NSNotificationCenter(SBLeafIconDataSource) sbh_defaultPPTNotificationCenter]
	+[NSNotificationCenter(SBLeafIconDataSource) sbh_leafIconDataSourceNotificationCenter]

NSIndexPath(SBIconIndex)
	// class methods
	+[NSIndexPath(SBIconIndex) indexPathWithIconIndex:listIndex:]
	+[NSIndexPath(SBIconIndex) sb_indexPathWithListIndex:]
	+[NSIndexPath(SBIconIndex) indexPathWithFolderIconIndex:folderListIndex:iconIndex:listIndex:]
	+[NSIndexPath(SBIconIndex) sb_indexPathWithFolderIconIndex:folderListIndex:listIndex:]

	// instance methods
	-[NSIndexPath(SBIconIndex) sbListIndex]
	-[NSIndexPath(SBIconIndex) sb_iconPathCount]
	-[NSIndexPath(SBIconIndex) sbIconIndex]
	-[NSIndexPath(SBIconIndex) sb_firstIconPathComponent]
	-[NSIndexPath(SBIconIndex) sb_indexPathByRemovingFirstIconPathComponent]
	-[NSIndexPath(SBIconIndex) sb_indexPathByAddingIndexPath:]
	-[NSIndexPath(SBIconIndex) sb_indexPathByRemovingLastIconIndex]
	-[NSIndexPath(SBIconIndex) sb_iconRelativePathComponents]
	-[NSIndexPath(SBIconIndex) sb_lastIconPathComponent]
	-[NSIndexPath(SBIconIndex) sb_firstListIndex]
	-[NSIndexPath(SBIconIndex) sb_firstIconIndex]
	-[NSIndexPath(SBIconIndex) sb_lastListIndex]
	-[NSIndexPath(SBIconIndex) sb_lastIconIndex]
	-[NSIndexPath(SBIconIndex) sb_indexPathByRemovingLastIconPathComponent]
	-[NSIndexPath(SBIconIndex) sb_indexPathByAddingPathComponentWithListIndex:iconIndex:]
	-[NSIndexPath(SBIconIndex) sb_isOnSameListAsIndexPath:]
	-[NSIndexPath(SBIconIndex) sb_indexPathByReplacingLastIconIndex:]
	-[NSIndexPath(SBIconIndex) sb_iconPathDescription]

UIDragItem(SBHIconDragUtilities)
	// instance methods
	-[UIDragItem(SBHIconDragUtilities) sbh_appDragLocalContext]
	-[UIDragItem(SBHIconDragUtilities) sbh_setAppDragLocalContext:]

UISApplicationSupportDisplayEdgeInfo(SBHScreenTypes)
	// class methods
	+[UISApplicationSupportDisplayEdgeInfo(SBHScreenTypes) sbh_displayEdgeInfoForScreenType:]

01 00 2200 /System/Library/PrivateFrameworks/BatteryCenterUI.framework/BatteryCenterUI: BCUIBatteryAvocadoViewController 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSAnimationSettings 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSCFBundle 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSDateFormatterCache 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSDescriptionBuilder 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSDispatchQueueAttributes 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSEqualsBuilder 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSEventQueue 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSEventQueueEvent 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSHashBuilder 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSPlatform 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSSimpleAssertion 
01 00 2000 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIAnimationFactory 
01 00 2000 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIFontProvider 
01 00 2000 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIScrollView 
01 00 1d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 1d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABackdropLayer 
01 00 1d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 1d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMatchMoveAnimation 
01 00 1d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 1d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 1d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransformLayer 
01 00 0400 /System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit: CCUICAPackageDescription 
01 00 0400 /System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit: CCUICustomContentModuleBackgroundViewController 
01 00 0400 /System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit: CCUILabeledRoundButtonViewController 
01 00 0900 /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices: CHSAvocadoDescriptor 
01 00 0900 /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices: CHSAvocadoDescriptorProvider 
01 00 0900 /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices: CHSMutableWidgetMetricsSpecification 
01 00 0900 /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices: CHSWidget 
01 00 0900 /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices: CHSWidgetMetrics 
01 00 0700 /System/Library/PrivateFrameworks/ChronoUIServices.framework/ChronoUIServices: CHUISAvocadoHostViewController 
01 00 1e00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPMemoryPool 
01 00 0600 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchQuery 
01 00 0600 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchQueryContext 
01 00 0600 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSTopHitSearchQuery 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSApplicationLibrary 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSApplicationLibraryConfiguration 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSApplicationUninstallOptions 
01 00 1600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 1300 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: IFImage 
01 00 0a00 /System/Library/Frameworks/Intents.framework/Intents: INIntent 
01 00 1300 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISIcon 
01 00 1300 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 1400 /System/Library/PrivateFrameworks/IntlPreferences.framework/IntlPreferences: IntlUtility 
01 00 1c00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationExtensionRecord 
01 00 1c00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 1c00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1c00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleRecord 
01 00 1500 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTMaterialView 
01 00 1500 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTShadowView 
01 00 1500 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTStylingProvidingSolidColorView 
01 00 1500 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTVisualStylingProvider 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutDimension 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutGroup 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutGroupCustomItem 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutItem 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSection 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSize 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSpacing 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: NSDiffableDataSourceSnapshot 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1000 /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection: PCPersistentTimer 
01 00 1900 /System/Library/PrivateFrameworks/PeopleUIInternal.framework/PeopleUIInternal: PPLPeopleEntityMetadata 
01 00 1900 /System/Library/PrivateFrameworks/PeopleUIInternal.framework/PeopleUIInternal: PPLPeopleEntityViewController 
01 00 0e00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTButtonRow 
01 00 0e00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTChoiceRow 
01 00 0e00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDomain 
01 00 0e00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDrillDownRow 
01 00 0e00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTEditFloatRow 
01 00 0e00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTModule 
01 00 0e00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTRestoreDefaultSettingsRowAction 
01 00 0e00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSettings 
01 00 0e00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSliderRow 
01 00 0e00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSwitchRow 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBC2GroupCompletion 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFAnalyticsClient 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFAnimationSettings 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFAnimationUtilities 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFDateTimeController 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFFeatherBlurView 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFFluidBehaviorSettings 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFFocusIsolationView 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFMappedImageCache 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFOverridableDateProvider 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFRemoteBasebandLoggingManager 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFSpringLoadedInteractionBehavior 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFSpringLoadedInteractionEffect 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFSteppedAnimationTimingFunctionCalculator 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFTodayGestureDomain 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFTouchPassThroughView 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFTouchPassThroughViewController 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFView 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBHomeScreenDefaults 
01 00 2300 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBReusableViewMap 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSAppDragLocalContext 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationMultiwindowService 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutContactIcon 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutCustomImageIcon 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutItem 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutService 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutSystemIcon 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutSystemPrivateIcon 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutTemplateIcon 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSDebugActiveWidgetInfo 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSHardwareButtonService 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSHomeScreenService 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSMedusaApplicationShortcutService 
01 00 2500 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUILegibilityLabel 
01 00 0b00 /System/Library/Frameworks/StoreKit.framework/StoreKit: SKStoreProductActivityViewController 
01 00 0200 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIClient 
01 00 0100 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRINamespace 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIButtonConfiguration 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayout 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayoutConfiguration 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDiffableDataSource 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIColorEffect 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuConfiguration 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuInteraction 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragInteraction 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragItem 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreview 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewParameters 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewTarget 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropInteraction 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropProposal 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusGuide 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusHaloEffect 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusSystem 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIHandleApplicationShortcutAction 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageAsset 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIImpactFeedbackGenerator 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIInteractionProgress 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIInterpolatingMotionEffect 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyCommand 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyShortcutHUDService 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardImpl 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UILocalizedIndexedCollation 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBarAppearance 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationItem 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIOpenURLAction 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPageControl 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerAppIconEffect 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerHoverEffect 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerInteraction 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerLiftEffect 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerRegion 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerShape 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerStyle 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewParameters 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewTarget 
01 00 0c00 /System/Library/PrivateFrameworks/UIKitServices.framework/UIKitServices: UISApplicationSupportDisplayEdgeInfo 
01 00 0c00 /System/Library/PrivateFrameworks/UIKitServices.framework/UIKitServices: UISApplicationSupportDisplayEdgeInsetsWrapper 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIScribbleInteraction 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchTextField 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UISheetPresentationControllerDetent 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UISplitViewController 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringLoadedInteraction 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringTimingParameters 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewDiffableDataSource 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedDragPreview 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIVibrancyEffect 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewFloatAnimatableProperty 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebClip 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0300 /System/Library/Frameworks/UniformTypeIdentifiers.framework/UniformTypeIdentifiers: UTType 
01 00 0800 /System/Library/PrivateFrameworks/WorkflowUIServices.framework/WorkflowUIServices: WFWidgetConfigurationOptions 
01 00 0800 /System/Library/PrivateFrameworks/WorkflowUIServices.framework/WorkflowUIServices: WFWidgetConfigurationViewController 
01 00 1200 /System/Library/PrivateFrameworks/Widgets.framework/Widgets: WGWidgetGroupViewController 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: _UIApplicationInfo 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: _UIAssetManager 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContextMenuStyle 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: _UIGrabber 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: _UIImpactFeedbackGeneratorConfiguration 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilityImageSet 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettings 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilityView 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: _UIPortalView 
01 00 2400 /System/Library/Frameworks/UIKit.framework/UIKit: _UISheetAnimationController 
