|| __DATA.__data _SBHLibrarySectionIdentifierNone
|| __DATA.__data _SBHRippleHeight
|| __DATA.__data _SBHRippleTouchHeight
|| __DATA.__objc_data _OBJC_CLASS_$_SBCrossfadeIconZoomAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBDefaultIconDragPreviewWindow
|| __DATA.__objc_data _OBJC_CLASS_$_SBFloatingDockIconListView
|| __DATA.__objc_data _OBJC_CLASS_$_SBFloatingDockPlatterView
|| __DATA.__objc_data _OBJC_CLASS_$_SBFolderPresentingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHAddWidgetSheetAppCollectionViewCellConfigurator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHAdjustableRootIconListLayoutProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBHClockHandsImageSet
|| __DATA.__objc_data _OBJC_CLASS_$_SBHDoubleSidedIconImageCrossfadeView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFakeDownloadingIconDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFeatherBlurNavigationBar
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFloatingDockStyleConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconContentContainerTransformView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconImageTransformView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconLibraryAbstractQueryEngine
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconLibraryPredicateQueryEngine
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconLibraryQueryContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconLibraryQueryResult
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconLibrarySpotlightQueryEngine
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconRootTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconStateBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconTransformView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryCategoriesRootFolder
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryMapProviderDefaultSource
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryPodCategoryFolderController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryPodCategoryFolderView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryPodFadeAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHLibraryPodIconZoomAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHShortcutsFolderElement
|| __DATA.__objc_data _OBJC_CLASS_$_SBHShortcutsSingleElement
|| __DATA.__objc_data _OBJC_CLASS_$_SBHSidebarWidgetBootstrappingAdvisor
|| __DATA.__objc_data _OBJC_CLASS_$_SBHStackConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SBHStackConfigurationInteraction
|| __DATA.__objc_data _OBJC_CLASS_$_SBHStackConfigurationSwitchTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_SBHStackConfigurationViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHStackConfigurationWidgetTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetConfigurationAnimatorAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetConfigurationFadeAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetConfigurationFlipAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetConfigurationTransformView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetFamilyButton
|| __DATA.__objc_data _OBJC_CLASS_$_SBHWidgetFamilySegmentedControl
|| __DATA.__objc_data _OBJC_CLASS_$_SBHintInteractor
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconBetaLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconBlockedForScreenTimeExpirationLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconCloudLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconContinuityBadgeView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconDotLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconDraggingEditContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconForceTouchAppInfoProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconLegibilityLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListLayoutBlockObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewAppDragContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewCaptureOnlyBackgroundAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewDominoAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewDominoPivotAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewDraggingDataPolicyHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewIconLocationTransitionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewIconSizeChangeAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewIconVisibilityAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewMultiStageAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconModelFolderCreationAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconPreviousLocationInfo
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconRecentlyUpdatedLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconSimpleLabelView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconSuggestionLabelView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconViewContextMenuContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconViewDroppingAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_SBPageManagementCellViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBPageManagementCheckbox
|| __DATA.__objc_data _OBJC_CLASS_$_SBPageManagementIcon
|| __DATA.__objc_data _OBJC_CLASS_$_SBPageManagementListTapGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_SBPinchInteractionProgress
|| __DATA.__objc_data _OBJC_CLASS_$_SBWorkspaceInteractionContext
|| __DATA.__objc_data _OBJC_CLASS_$__SBFloatingDockPlatterMetrics
|| __DATA.__objc_data _OBJC_CLASS_$__SBFolderControllerIconImageViewControllerKeepStaticAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__SBFolderIconImageViewDisableUpdatesAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__SBHLibraryPodCategoryIconListView
|| __DATA.__objc_data _OBJC_CLASS_$__SBHLibraryPodIconView
|| __DATA.__objc_data _OBJC_CLASS_$__SBIconListViewDataDraggingContext
|| __DATA.__objc_data _OBJC_CLASS_$__SBIconProgressPausedTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_SBCrossfadeIconZoomAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBDefaultIconDragPreviewWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFloatingDockIconListView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFloatingDockPlatterView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFolderPresentingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHAddWidgetSheetAppCollectionViewCellConfigurator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHAdjustableRootIconListLayoutProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHClockHandsImageSet
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHDoubleSidedIconImageCrossfadeView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFakeDownloadingIconDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFeatherBlurNavigationBar
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFloatingDockStyleConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconContentContainerTransformView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconImageTransformView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconLibraryAbstractQueryEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconLibraryPredicateQueryEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconLibraryQueryContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconLibraryQueryResult
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconLibrarySpotlightQueryEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconRootTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconStateBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconTransformView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoriesRootFolder
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryMapProviderDefaultSource
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryPodCategoryFolderController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryPodCategoryFolderView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryPodFadeAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHLibraryPodIconZoomAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHShortcutsFolderElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHShortcutsSingleElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHSidebarWidgetBootstrappingAdvisor
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHStackConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHStackConfigurationInteraction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHStackConfigurationSwitchTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHStackConfigurationViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHStackConfigurationWidgetTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetConfigurationAnimatorAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetConfigurationFadeAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetConfigurationFlipAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetConfigurationTransformView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetContainerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetFamilyButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHWidgetFamilySegmentedControl
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHintInteractor
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconBetaLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconBlockedForScreenTimeExpirationLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconCloudLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconContinuityBadgeView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconDotLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconDraggingEditContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconForceTouchAppInfoProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconLegibilityLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListLayoutBlockObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewAppDragContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewCaptureOnlyBackgroundAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewDominoAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewDominoPivotAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewDraggingDataPolicyHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewIconLocationTransitionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewIconSizeChangeAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewIconVisibilityAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewMultiStageAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconModelFolderCreationAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconPreviousLocationInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconRecentlyUpdatedLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconSimpleLabelView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconSuggestionLabelView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconViewContextMenuContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconViewDroppingAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBPageManagementCellViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBPageManagementCheckbox
|| __DATA.__objc_data _OBJC_METACLASS_$_SBPageManagementIcon
|| __DATA.__objc_data _OBJC_METACLASS_$_SBPageManagementListTapGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_SBPinchInteractionProgress
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWorkspaceInteractionContext
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFloatingDockPlatterMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFolderControllerIconImageViewControllerKeepStaticAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFolderIconImageViewDisableUpdatesAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__SBHLibraryPodCategoryIconListView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBHLibraryPodIconView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBIconListViewDataDraggingContext
|| __DATA.__objc_data _OBJC_METACLASS_$__SBIconProgressPausedTransition
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBFloatyFolderBackgroundClipView._backgroundView
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHLibraryCategoryMap._categoryIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHLibraryCategoryMap._generatedDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHLibraryCategoryMap._loadedFromDisk
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHLibraryCategoryMap._localizedCategoryNameByCategoryIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHLibraryCategoryMap._sortedApplicationIdentifiersByCategoryIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHLibraryCategoryMap._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHighlightView._highlight
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBIconListViewCaptureOnlyBackgroundAssertion._invalidationBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBIconProgressStateTransition._fraction
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBIconProgressStateTransition._fromState
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBIconProgressStateTransition._toState
|| __DATA_CONST.__const _SBAppPopoverExtensionPointIdentifier
|| __DATA_CONST.__const _SBAvocadoPopoverExtensionPointIdentifier
|| __DATA_CONST.__const _SBCompactListsCoalesceID
|| __DATA_CONST.__const _SBFolderControllerCurrentPageIndexDidChangeNotification
|| __DATA_CONST.__const _SBFolderControllerDidEndScrollingNotification
|| __DATA_CONST.__const _SBFolderControllerWillBeginScrollingNotification
|| __DATA_CONST.__const _SBFolderViewDidScrollHiddenIconViewOutsideFolderClippingBoundsNotification
|| __DATA_CONST.__const _SBFolderViewHiddenIconViewUserInfoKey
|| __DATA_CONST.__const _SBHIconManagerDidReplaceDownloadingIconNotification
|| __DATA_CONST.__const _SBHIconManagerEditingStateChangedNotification
|| __DATA_CONST.__const _SBHIconManagerIconDraggingChangedNotification
|| __DATA_CONST.__const _SBHIconManagerIconModelDidChangeNotification
|| __DATA_CONST.__const _SBHIconManagerListLayoutProviderDidChangeNotification
|| __DATA_CONST.__const _SBHIconManagerRootViewControllerDidChangeNotification
|| __DATA_CONST.__const _SBHIconViewContextMenuStateControllerDidDismissAllIconForceTouchControllersNotification
|| __DATA_CONST.__const _SBHLibraryCategoryMapErrorNotificationKey
|| __DATA_CONST.__const _SBHLibraryCategoryMapNotificationKey
|| __DATA_CONST.__const _SBHLibraryCategoryMapProviderCachesWereClearedNotification
|| __DATA_CONST.__const _SBHLibraryCategoryMapProviderCategoryMapRefreshCompletedNotification
|| __DATA_CONST.__const _SBHLibraryCategoryMapSessionIDNotificationKey
|| __DATA_CONST.__const _SBHLibrarySearchControllerDidDismissSearchPPTNotification
|| __DATA_CONST.__const _SBHLibrarySearchControllerDidPresentSearchPPTNotification
|| __DATA_CONST.__const _SBHLibrarySearchControllerWillDismissSearchPPTNotification
|| __DATA_CONST.__const _SBHLibrarySearchControllerWillPresentSearchPPTNotification
|| __DATA_CONST.__const _SBHLibraryViewControllerDidCollapsePodPPTNotification
|| __DATA_CONST.__const _SBHLibraryViewControllerDidExpandPodPPTNotification
|| __DATA_CONST.__const _SBHLibraryViewControllerWillCollapsePodPPTNotification
|| __DATA_CONST.__const _SBHLibraryViewControllerWillExpandPodPPTNotification
|| __DATA_CONST.__const _SBHMaterialRecipeNameIconComponentDark
|| __DATA_CONST.__const _SBHMaterialRecipeNameIconComponentLight
|| __DATA_CONST.__const _SBIconIntoFolderCoalesceID
|| __DATA_CONST.__const _SBIconLocationAddWidgetSheet
|| __DATA_CONST.__const _SBIconLocationAppLibrary
|| __DATA_CONST.__const _SBIconLocationAppLibraryCategoryPod
|| __DATA_CONST.__const _SBIconLocationAppLibraryCategoryPodAdditionalItems
|| __DATA_CONST.__const _SBIconLocationAppLibraryCategoryPodExpanded
|| __DATA_CONST.__const _SBIconLocationAppLibraryCategoryPodRecents
|| __DATA_CONST.__const _SBIconLocationAppLibraryCategoryPodSuggestions
|| __DATA_CONST.__const _SBIconLocationAppLibrarySearch
|| __DATA_CONST.__const _SBIconLocationDock
|| __DATA_CONST.__const _SBIconLocationFavoriteTodayView
|| __DATA_CONST.__const _SBIconLocationFloatingDock
|| __DATA_CONST.__const _SBIconLocationFolder
|| __DATA_CONST.__const _SBIconLocationGroupAppLibrary
|| __DATA_CONST.__const _SBIconLocationGroupDock
|| __DATA_CONST.__const _SBIconLocationGroupRoot
|| __DATA_CONST.__const _SBIconLocationGroupTodayView
|| __DATA_CONST.__const _SBIconLocationNone
|| __DATA_CONST.__const _SBIconLocationRoot
|| __DATA_CONST.__const _SBIconLocationRootWithSidebar
|| __DATA_CONST.__const _SBIconLocationTodayView
|| __DATA_CONST.__const _SBIconModelDidAddIconNotification
|| __DATA_CONST.__const _SBIconModelDidLayoutIconStateNotification
|| __DATA_CONST.__const _SBIconModelDidReloadIconsNotification
|| __DATA_CONST.__const _SBIconModelDidReplaceIconNotification
|| __DATA_CONST.__const _SBIconModelStoreDomain
|| __DATA_CONST.__const _SBIconModelVisibilityDidChangeNotification
|| __DATA_CONST.__const _SBIconModelWillLayoutIconStateNotification
|| __DATA_CONST.__const _SBIconModelWillReloadIconsNotification
|| __DATA_CONST.__const _SBIconModelWillRemoveIconNotification
|| __DATA_CONST.__const _SBIconViewDidAnimateContextMenuNotification
|| __DATA_CONST.__const _SBIconViewDidDismissContextMenuNotification
|| __DATA_CONST.__const _SBIconViewDidPresentContextMenuNotification
|| __DATA_CONST.__const _SBIconViewPresentationNotificationPresentedWidgetBundleIdentifierKey
|| __DATA_CONST.__const _SBIconViewRefreshAccessoryViewNotification
|| __DATA_CONST.__const _SBIconViewWillAnimateContextMenuNotification
|| __DATA_CONST.__const _SBIconViewWillDismissContextMenuNotification
|| __DATA_CONST.__const _SBIconViewWillPresentContextMenuNotification
|| __DATA_CONST.__const _SBIconZoomExpansionAnimationWillBeginNotification
|| __DATA_CONST.__const _SBInsertIconCoalesceID
|| __DATA_CONST.__const _SBLeafIconDataSourceDidChangeNotification
|| __DATA_CONST.__const _SBLeafIconDataSourceDidGenerateImageNotification
|| __DATA_CONST.__const _SBLeafIconDataSourceDidInvalidateNotification
|| __DATA_CONST.__const _SBPopoverExtensionPointName
|| __DATA_CONST.__const _SBResettingIconsCoalesceID
|| __DATA_CONST.__const _SBRestoreOverflowIconsCoalesceID
|| __DATA_CONST.__const _SBUninstallIconCoalesceID
|| __DATA_CONST.__const _SHBLibraryCategoryMapProactiveResponseKey
|| __DATA_CONST.__const _SHBLibraryCategoryMapProactiveSessionIdKey
|| __DATA_CONST.__const _kSBHIconAddToHomeScreenShortcutItemType
|| __DATA_CONST.__const _kSBHIconAddToStackApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconCancelDownloadApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconChangeWidgetSizeGroupApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconChangeWidgetSizeToExtraLargeApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconChangeWidgetSizeToLargeApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconChangeWidgetSizeToMediumApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconChangeWidgetSizeToSmallApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconConfigureStackApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconConfigureWidgetApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconDebugFeedbackStackApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconHideStackSuggestionApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconPauseDownloadApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconPrioritizeDownloadApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconRenameFolderApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconResumeDownloadApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconShareApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerDeleteAppApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerHideAppSuggestionApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerHideFolderContentsShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerRearrangeAppsForApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerRemoveAppApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerRemoveWidgetApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerShowAllWindowsForApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconUnreadNotificationsApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHLibraryCategoryMapProviderVersion
|| __DATA_CONST.__const _kSBIconModelIconKey
|| __DATA_CONST.__const _kSBIconModelLeafIconsToHideKey
|| __DATA_CONST.__const _kSBIconModelLeafIconsToShowKey
|| __DATA_CONST.__const _kSBIconStateAllowsExternalSuggestionsKey
|| __DATA_CONST.__const _kSBIconStateAllowsSuggestionsKey
|| __DATA_CONST.__const _kSBIconStateCustomIconElementKey
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeAppPredictions
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeBatteries
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeFiles
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeKey
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeShortcutsFolder
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeShortcutsSingle
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeSiriSuggestions
|| __DATA_CONST.__const _kSBIconStateCustomIconElementTypeWidget
|| __DATA_CONST.__const _kSBIconStateDock
|| __DATA_CONST.__const _kSBIconStateFavoriteTodayPageList
|| __DATA_CONST.__const _kSBIconStateGridSizeClassIdentifier
|| __DATA_CONST.__const _kSBIconStateHiddenDateKey
|| __DATA_CONST.__const _kSBIconStateIconBundleIdentifier
|| __DATA_CONST.__const _kSBIconStateIconBundleVersion
|| __DATA_CONST.__const _kSBIconStateIconDefaultDisplayName
|| __DATA_CONST.__const _kSBIconStateIconDisplayName
|| __DATA_CONST.__const _kSBIconStateIconLastModifiedDate
|| __DATA_CONST.__const _kSBIconStateIconListMetadata
|| __DATA_CONST.__const _kSBIconStateIconListTypeFolder
|| __DATA_CONST.__const _kSBIconStateIconListTypeKey
|| __DATA_CONST.__const _kSBIconStateIconListUniqueIdentifiers
|| __DATA_CONST.__const _kSBIconStateIconLists
|| __DATA_CONST.__const _kSBIconStateIconMatrix
|| __DATA_CONST.__const _kSBIconStateIconTypeCustom
|| __DATA_CONST.__const _kSBIconStateIconTypeKey
|| __DATA_CONST.__const _kSBIconStateIconWebClipURL
|| __DATA_CONST.__const _kSBIconStateIgnoredList
|| __DATA_CONST.__const _kSBIconStateLeafIdentifier
|| __DATA_CONST.__const _kSBIconStateMetadataKey
|| __DATA_CONST.__const _kSBIconStateOverflowSlotCountKey
|| __DATA_CONST.__const _kSBIconStateTodayPageList
|| __DATA_CONST.__const _kSBIconStateUniqueIdentifier
|| __DATA_CONST.__const _kSBIconStateUserSelectedCustomIconElementKey
|| __DATA_CONST.__const _kSBIconStateWidgetKindKey
|| __DATA_CONST.__const _kSBLeafIconDataSourceDidGenerateImageFormatKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBCenterIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBCountedMap
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBDarkeningImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBDockIconListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBDockView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBDownloadingIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatingDockView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatingDockViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderBackgroundClipView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderScrollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderContainerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderControllerAnimationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderControllerBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderIconImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderTitleTextField
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFramewiseInteractiveTransitionAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBGrabbedPlaceholderIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAddWidgetButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAddWidgetDetailSheetViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAddWidgetDetailSheetWidgetDescriptionView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAddWidgetDetailsSheetPageViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAddWidgetSheetAppCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAddWidgetSheetGalleryCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAddWidgetSheetViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAppLibrarySettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAppLibraryVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAppPredictionWrapperViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAppPredictionsElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHApplicationWidgetCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHAvocadoFileWidgetExtensionProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHBatteriesElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterAcceleratedAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterAppLaunchSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterAppZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHClockApplicationIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeAcceleratedAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeAppLaunchSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeAppTransitionSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCustomIconElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCustomIconListLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHDateHeaderViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHDefaultIconListLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHEditingDoneButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHEditingWidgetButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFeatherBlurView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFilesElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFloatyFolderVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderCloseSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderIconVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderOpenSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHHomePullToSearchSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHHomeScreenDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHHomeScreenSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHHomeScreenUsageMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconAccessoryCountedMapImageTuple
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconAccessoryVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconAnimationRootSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconAnimationSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconApplicationShortcutListComposer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconDragAutoScrollAssistant
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconEditingSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconLabelVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconLibraryQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconLibraryTableViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconModelDisableAutosaveAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconStateArchiver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconStateUnarchiver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconTableViewDiffableDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconTableViewHeaderFooterView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconTableViewListLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconTableViewListLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconViewContextMenuStateController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconViewContextMenuWrapperViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconViewNonPoolingImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryAdditionalItemsIndicatorIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoriesFolderDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryFolder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryIconViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryMap
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryMapProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryMapProviderRefreshRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryPodBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryPodIconListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryCategoryPodIconView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryMutableCategoryMap
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodCategoryIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodCloseSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodFolderController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodFolderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodOpenSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryPodZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibrarySearchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLibraryViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHLocalizedIndexedCollation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHMappedIconListLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHMinusPageStepper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHMultiplexingManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHMultiplexingViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHPortaledShadowedWidgetView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHRecentsDocumentExtensionProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHRecentsDocumentExtensionWrappingViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHReducedMotionFadeSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHRippleSimulation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHRootFolderSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHRootFolderVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHRootSidebarController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHScaleZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSearchBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSearchTextField
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSetDiff
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHShadowedWidgetView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSidebarVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSiriSuggestionsElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSmartStackElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHSpecialAvocadoDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHTableViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHTableViewIconLibrary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHUnlockSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidget
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetAddSheetAnimationController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetAddSheetTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetConfigurationInteraction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetInsertionRippleIconAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetMetricsProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetSearchBarBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetSearchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetStackDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetStackViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHWidgetWrapperViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHZAnimatableView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHighlightView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHomeScreenButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHomeScreenIconTransitionAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHomeScreenMaterialView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconAnimationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconBadgeView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconDragContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconDragInteraction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconDragManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconFadeAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconGridImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconImageCrossfadeView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconIndexMutableList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelImageParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelImageParametersBuilder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelViewFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLegibilityLabelView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListFlowExtendedLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListFlowLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListGridCellInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListGridLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListGridLayoutConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListModelRepairUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListPageControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListRotationIconViewProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewClusterAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewDefaultAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewDraggingAppPolicyHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewDraggingDestinationDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewLayoutMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconModelMemoryStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconModelPropertyListFileStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconPageIndicatorImageSetCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconPageIndicatorImageSetResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconPreviousLocationTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconProgressView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconRotationContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconScrollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconStateFolderPath
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconStateUnarchiveResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconTapGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconViewDragInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBLeafIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBLiveIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBMinusCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBMutableIconLabelImageParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBNestingViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBPageManagementCellView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBPercentPassthroughInteractiveTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBPlaceholderIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBReversibleLayerPropertyAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderControllerDefaultTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderControllerTransitionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderDockAnimationViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderDockIconListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderViewPageManagementLayoutManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderWithDock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBScaleIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSearchBackdropView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSearchGesture
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSearchScrollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBTitledHomeScreenButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBValueConvergenceAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBViewControllerTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBWidgetIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBXCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBFolderControllerPageViewControllerAppearStateOverrideAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBFolderPageElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBHIconLibraryTableView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBHLibraryCollectionOfModelThings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBHLibraryFrozenSafeAreaInsetsView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBHLibraryPodIconListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBHRecentsDocumentView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconGridWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconListModelTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconProgressFractionTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconProgressLoadingNoneStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconProgressNoneWaitingStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconProgressStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconProgressTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconProgressWaitingLoadingStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBInnerFolderIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBRootFolderDockAnimationViewControllerWindow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBRootFolderDockOffscreenFractionClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBRootFolderLayoutWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBRootFolderPageTransitionHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBValueConvergenceAnimatorEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBCenterIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBCountedMap
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBDarkeningImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBDockIconListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBDockView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBDownloadingIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatingDockView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatingDockViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderBackgroundClipView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderScrollView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderContainerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderControllerAnimationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderControllerBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderIconImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderTitleTextField
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFramewiseInteractiveTransitionAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBGrabbedPlaceholderIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAddWidgetButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAddWidgetDetailSheetViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAddWidgetDetailSheetWidgetDescriptionView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAddWidgetDetailsSheetPageViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAddWidgetSheetAppCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAddWidgetSheetGalleryCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAddWidgetSheetViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAppLibrarySettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAppLibraryVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAppPredictionWrapperViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAppPredictionsElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHApplicationWidgetCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHAvocadoFileWidgetExtensionProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHBatteriesElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterAcceleratedAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterAppLaunchSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterAppZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHClockApplicationIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeAcceleratedAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeAppLaunchSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeAppTransitionSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCustomIconElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCustomIconListLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHDateHeaderViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHDefaultIconListLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHEditingDoneButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHEditingWidgetButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFeatherBlurView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFilesElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFloatyFolderVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderCloseSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderIconVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderOpenSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHHomePullToSearchSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHHomeScreenDomain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHHomeScreenSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHHomeScreenUsageMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconAccessoryCountedMapImageTuple
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconAccessoryVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconAnimationRootSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconAnimationSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconApplicationShortcutListComposer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconDragAutoScrollAssistant
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconEditingSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconLabelVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconLibraryQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconLibraryTableViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconModelDisableAutosaveAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconStateArchiver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconStateUnarchiver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconTableViewDiffableDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconTableViewHeaderFooterView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconTableViewListLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconTableViewListLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconViewContextMenuStateController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconViewContextMenuWrapperViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconViewNonPoolingImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryAdditionalItemsIndicatorIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoriesFolderDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryFolder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryIconViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryMap
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryMapProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryMapProviderRefreshRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryPodBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryPodIconListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryCategoryPodIconView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryMutableCategoryMap
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodCategoryIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodCloseSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodFolderController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodFolderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodOpenSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryPodZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibrarySearchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLibraryViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHLocalizedIndexedCollation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHMappedIconListLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHMinusPageStepper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHMultiplexingManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHMultiplexingViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHPortaledShadowedWidgetView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHRecentsDocumentExtensionProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHRecentsDocumentExtensionWrappingViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHReducedMotionFadeSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHRippleSimulation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHRootFolderSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHRootFolderVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHRootSidebarController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHScaleZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSearchBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSearchTextField
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSetDiff
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHShadowedWidgetView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSidebarVisualConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSiriSuggestionsElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSmartStackElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHSpecialAvocadoDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHTableViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHTableViewIconLibrary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHUnlockSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidget
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetAddSheetAnimationController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetAddSheetTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetConfigurationInteraction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetInsertionRippleIconAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetMetricsProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetSearchBarBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetSearchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetStackDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetStackViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHWidgetWrapperViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHZAnimatableView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHighlightView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHomeScreenButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHomeScreenIconTransitionAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHomeScreenMaterialView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconAnimationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconBadgeView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconDragContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconDragInteraction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconDragManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconFadeAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconGridImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconImageCrossfadeView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconIndexMutableList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelImageParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelImageParametersBuilder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelViewFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLegibilityLabelView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListFlowExtendedLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListFlowLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListGridCellInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListGridLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListGridLayoutConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListModelRepairUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListPageControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListRotationIconViewProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewClusterAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewDefaultAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewDraggingAppPolicyHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewDraggingDestinationDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewLayoutMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconModelMemoryStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconModelPropertyListFileStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconPageIndicatorImageSetCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconPageIndicatorImageSetResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconPreviousLocationTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconProgressView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconRotationContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconScrollView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconStateFolderPath
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconStateUnarchiveResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconTapGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconViewDragInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBLeafIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBLiveIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBMinusCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBMutableIconLabelImageParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBNestingViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBPageManagementCellView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBPercentPassthroughInteractiveTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBPlaceholderIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBReversibleLayerPropertyAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderControllerDefaultTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderControllerTransitionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderDockAnimationViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderDockIconListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderViewPageManagementLayoutManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderWithDock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBScaleIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSearchBackdropView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSearchGesture
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSearchScrollView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBTitledHomeScreenButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBValueConvergenceAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBViewControllerTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBWidgetIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBXCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBFolderControllerPageViewControllerAppearStateOverrideAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBFolderPageElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBHIconLibraryTableView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBHLibraryCollectionOfModelThings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBHLibraryFrozenSafeAreaInsetsView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBHLibraryPodIconListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBHRecentsDocumentView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconGridWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconListModelTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconProgressFractionTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconProgressLoadingNoneStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconProgressNoneWaitingStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconProgressStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconProgressTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconProgressWaitingLoadingStateTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBInnerFolderIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBRootFolderDockAnimationViewControllerWindow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBRootFolderDockOffscreenFractionClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBRootFolderLayoutWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBRootFolderPageTransitionHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBValueConvergenceAnimatorEngine
|| __TEXT.__const _SBDockIndex
|| __TEXT.__const _SBFavoriteTodayListIndex
|| __TEXT.__const _SBHIconGridSizeClassAreasDefault
|| __TEXT.__const _SBHIconGridSizeClassSizesDefault
|| __TEXT.__const _SBHIconGridSizeDefault
|| __TEXT.__const _SBHSearchTextFieldCancelButtonMargin
|| __TEXT.__const _SBHSearchTextFieldDefaultCornerRadiusInPixels
|| __TEXT.__const _SBIconCoordinateNotFound
|| __TEXT.__const _SBIconListViewIconSpacingDimensionAutomatic
|| __TEXT.__const _SBIgnoredListIndex
|| __TEXT.__const _SBTodayListIndex
|| __TEXT.__const _SpringBoardHomeVersionNumber
|| __TEXT.__const _SpringBoardHomeVersionString
|| __TEXT.__const _kSBHAddWidgetButtonInset
|| __TEXT.__const _kSBHIconApplicationShortcutListComposerMaximumApplicationShortcutItems
|| __TEXT.__const _kSBHSidebarWidgetLearningAdvisorDefaultLearningCadenceEpoch
|| __TEXT.__const _kSBHSidebarWidgetLearningAdvisorDefaultLearningDuration
|| __TEXT.__const _kSPUISearchHeaderHeightGestureSpecific
|| __TEXT.__text _BCUIAvocadoSizeFromCHSAvocadoSizeClass
|| __TEXT.__text _BCUIAvocadoSizeFromSBHIconGridSizeClass
|| __TEXT.__text _CHSAvocadoSizeClassForATXStackLayoutSize
|| __TEXT.__text _CHSAvocadoSizeClassForSBHIconGridSizeClass
|| __TEXT.__text _CHSWidgetFamilyForSBHIconGridSizeClass
|| __TEXT.__text _ConvertSBSApplicationShortcutSystemIconTypeToUIApplicationShortcutIconType
|| __TEXT.__text _NSDictionaryFromSBHLibraryCategoryMapRefreshOptions
|| __TEXT.__text _SBCGRectEdgeFromUIRectEdge
|| __TEXT.__text _SBFolderIndexPathsAreOnSamePage
|| __TEXT.__text _SBFolderRelativeIconIndex
|| __TEXT.__text _SBFolderRelativeListIndex
|| __TEXT.__text _SBFolderRelativeSubFolderPath
|| __TEXT.__text _SBHAlignSizeInRectUsingBaseline
|| __TEXT.__text _SBHBundle
|| __TEXT.__text _SBHCGRectIntersectionAsPercentage
|| __TEXT.__text _SBHCalculateIconSpacing
|| __TEXT.__text _SBHCenterNormalizedFromLayerAnchorPoint
|| __TEXT.__text _SBHContainingBundleIdentifierForWidgetWithBundleIdentifier
|| __TEXT.__text _SBHContainingBundleProxyForWidgetWithBundleIdentifier
|| __TEXT.__text _SBHDebugShowBorderOfView
|| __TEXT.__text _SBHDirectionalEdgeInsetsByClearingEdges
|| __TEXT.__text _SBHDisplayCornerRadiusForScreenType
|| __TEXT.__text _SBHEdgeInsetsForTransformingRectIntoRect
|| __TEXT.__text _SBHEdgeInsetsInvert
|| __TEXT.__text _SBHEnumerateIconGridSizeClasses
|| __TEXT.__text _SBHEnumerateScreenTypes
|| __TEXT.__text _SBHFeatureEnabled
|| __TEXT.__text _SBHGetScreenSpecification
|| __TEXT.__text _SBHIconDragItemWithIconAndIconView
|| __TEXT.__text _SBHIconGridRangeCellIndexes
|| __TEXT.__text _SBHIconGridRangeEnumerateCellIndexes
|| __TEXT.__text _SBHIconGridRangeEqualToIconGridRange
|| __TEXT.__text _SBHIconGridSizeClassAreasLookUpArea
|| __TEXT.__text _SBHIconGridSizeClassForCHSAvocadoSizeClass
|| __TEXT.__text _SBHIconGridSizeClassForCHSWidgetFamily
|| __TEXT.__text _SBHIconGridSizeClassForString
|| __TEXT.__text _SBHIconGridSizeClassIconImageInfosEqualToIconGridSizeClassIconImageInfos
|| __TEXT.__text _SBHIconGridSizeClassIconImageInfosHash
|| __TEXT.__text _SBHIconGridSizeClassIconImageInfosLookUpImageInfo
|| __TEXT.__text _SBHIconGridSizeClassIconImageInfosUpdateImageInfo
|| __TEXT.__text _SBHIconGridSizeClassMaskForCHSFamilyMask
|| __TEXT.__text _SBHIconGridSizeClassMaskIncludesIconGridSizeClass
|| __TEXT.__text _SBHIconGridSizeClassSizesEqualToIconGridSizeClassSizes
|| __TEXT.__text _SBHIconGridSizeClassSizesGetAreas
|| __TEXT.__text _SBHIconGridSizeClassSizesLookUpArea
|| __TEXT.__text _SBHIconGridSizeClassSizesLookUpSize
|| __TEXT.__text _SBHIconGridSizeClassSizesLookUpSizeClass
|| __TEXT.__text _SBHIconGridSizeEqualToIconGridSize
|| __TEXT.__text _SBHIconGridSizeGetArea
|| __TEXT.__text _SBHIconListLayoutExtraIconImageSizeForGridSizeClass
|| __TEXT.__text _SBHIconListLayoutFolderIconGridCellSize
|| __TEXT.__text _SBHIconListLayoutFolderIconGridCellSpacing
|| __TEXT.__text _SBHIconListLayoutIconAccessoryOffset
|| __TEXT.__text _SBHIconListLayoutIconAccessorySize
|| __TEXT.__text _SBHIconListLayoutIconGridSizeClassSizes
|| __TEXT.__text _SBHIconListLayoutIconImageInfoForGridSizeClass
|| __TEXT.__text _SBHIconListLayoutLabelVisualConfiguration
|| __TEXT.__text _SBHIconListLayoutLabelVisualConfigurationForContentSizeCategory
|| __TEXT.__text _SBHIconListLayoutListGridSize
|| __TEXT.__text _SBHIconListLayoutListIconSpacing
|| __TEXT.__text _SBHIconListLayoutListIconSpacingForListSize
|| __TEXT.__text _SBHIconListLayoutMaximumIconCount
|| __TEXT.__text _SBHIconListLayoutNonDefaultIconGridSizeClassLayoutInsets
|| __TEXT.__text _SBHIconListLayoutSupportedIconGridSizeClasses
|| __TEXT.__text _SBHIconListLayoutSupportsIconGridSizeClass
|| __TEXT.__text _SBHInterpolateEdgeInsets
|| __TEXT.__text _SBHIntersectionFloatRange
|| __TEXT.__text _SBHIsHomeButtonDevice
|| __TEXT.__text _SBHItemAtIndexIsOfSize
|| __TEXT.__text _SBHLibrarySectionIdentifierForIcon
|| __TEXT.__text _SBHLibrarySectionIdentifierForSectionWithIndex
|| __TEXT.__text _SBHLibrarySortedIdentifiersForIcons
|| __TEXT.__text _SBHOverrideFeatureEnabled
|| __TEXT.__text _SBHPinViewWithinView
|| __TEXT.__text _SBHPositionInFloatRange
|| __TEXT.__text _SBHRTLAwarePositionInFloatRange
|| __TEXT.__text _SBHScreenBounds
|| __TEXT.__text _SBHScreenSpecificationEqualToScreenSpecification
|| __TEXT.__text _SBHScreenTypeForCurrentDevice
|| __TEXT.__text _SBHScreenTypeForDeviceAndDisplayContexts
|| __TEXT.__text _SBHScreenTypeForShortString
|| __TEXT.__text _SBHScreenTypeHasHomeButton
|| __TEXT.__text _SBHScreenTypeIsPad
|| __TEXT.__text _SBHScreenTypeIsPhone
|| __TEXT.__text _SBHScreenTypeLookup
|| __TEXT.__text _SBHSearchIconImageSymbolConfiguration
|| __TEXT.__text _SBHShortStringForScreenType
|| __TEXT.__text _SBHSizeCeiling
|| __TEXT.__text _SBHSizeGreaterThanOrEqualToSize
|| __TEXT.__text _SBHSizeScaleSizeToFill
|| __TEXT.__text _SBHSizeScaled
|| __TEXT.__text _SBHSizeScaledToFill
|| __TEXT.__text _SBHSpecialAvocadoDescriptorTypeForKind
|| __TEXT.__text _SBHStringForIconCoordinate
|| __TEXT.__text _SBHStringForIconGridSize
|| __TEXT.__text _SBHStringForIconGridSizeClass
|| __TEXT.__text _SBHStringForIconGridSizeClassMask
|| __TEXT.__text _SBHStringForIconGridSizeClassSizes
|| __TEXT.__text _SBHStringForScreenType
|| __TEXT.__text _SBHStringFromFloatRange
|| __TEXT.__text _SBHStringFromUIInterfaceOrientation
|| __TEXT.__text _SBHUnionFloatRange
|| __TEXT.__text _SBHZPositionForScale
|| __TEXT.__text _SBHomeAccessibilityTintColor
|| __TEXT.__text _SBHomeAccessibilityTintLegibiliitySettings
|| __TEXT.__text _SBHomeAccessibilityTintLegibilityStyle
|| __TEXT.__text _SBIconAccessoryCountedMap
|| __TEXT.__text _SBIconBadgeViewCalculateAccessoryCenter
|| __TEXT.__text _SBIconCoordinateIsNotFound
|| __TEXT.__text _SBIconCoordinateMake
|| __TEXT.__text _SBIconImageInfoEqualToIconImageInfo
|| __TEXT.__text _SBIconImageInfoMake
|| __TEXT.__text _SBIconIndexCompleteNodePath
|| __TEXT.__text _SBIconIndexDebugStringForNodeIdentifier
|| __TEXT.__text _SBIconLocationGroupAddLocation
|| __TEXT.__text _SBIconLocationGroupContainsLocation
|| __TEXT.__text _SBIconViewQueryingDisplayingIcon
|| __TEXT.__text _SBIconViewQueryingDisplayingIconInLocation
|| __TEXT.__text _SBIconViewQueryingDisplayingIconView
|| __TEXT.__text _SBIconViewQueryingFirstIconViewForIcon
|| __TEXT.__text _SBIconViewQueryingHandleMethodRecursion
|| __TEXT.__text _SBIconViewQueryingIconViewForIconInLocation
|| __TEXT.__text _SBLibrarySectionIdentifierForSectionIndexAndTitle
|| __TEXT.__text _SBLibrarySectionIndexForSectionIdentifier
|| __TEXT.__text _SBLibraryUseSectionsForQuery
|| __TEXT.__text _SBLogCommon
|| __TEXT.__text _SBLogContinuity
|| __TEXT.__text _SBLogFolderIconImageCache
|| __TEXT.__text _SBLogHomeScreenUsageMonitor
|| __TEXT.__text _SBLogIcon
|| __TEXT.__text _SBLogIconContextMenu
|| __TEXT.__text _SBLogIconImageCache
|| __TEXT.__text _SBLogIconLabelImageCache
|| __TEXT.__text _SBLogLibrary
|| __TEXT.__text _SBLogLibrarySearchController
|| __TEXT.__text _SBLogProactiveAppLibrary
|| __TEXT.__text _SBLogRecentsDocumentExtension
|| __TEXT.__text _SBRootFolderPageStateIsOnHorizontalScrollingPlane
|| __TEXT.__text _SBRootFolderPageStateIsOnIconPage
|| __TEXT.__text _SBRootFolderPageStateIsOnTodayPage
|| __TEXT.__text _SBRootFolderPageStateIsOnTrailingCustomPage
|| __TEXT.__text _SBRootFolderPageStateIsSearch
|| __TEXT.__text _SBRootFolderPageStateVerticalGroupContainsRootFolderPageState
|| __TEXT.__text _SBRootFolderPageStateVerticalGroupForRootFolderPageState
|| __TEXT.__text _SBRootFolderPageStateVerticalGroupMatches
|| __TEXT.__text _SBStringForIconListDragPlacement
|| __TEXT.__text _SBStringForRootFolderPageState
|| __TEXT.__text _SBStringFromVisibleColumnRange
|| __TEXT.__text _SBTreeNodeContainsDescendantIndexPath
|| __TEXT.__text _SBTreeNodeGetDescendantAtIndexPath
|| __TEXT.__text _SBTreeNodeGetIndexPathForDescendantTreeNode
|| __TEXT.__text _SBTreeNodeGetRootNode
|| __TEXT.__text _SBTreeNodeInformOfAncestryChange
|| __TEXT.__text _SBTreeNodeIsDescendantOfTreeNode
|| __TEXT.__text _SBTreeNodeSetParent
|| __TEXT.__text _SBViewClassForIconLabelAccessoryType
|| __TEXT.__text _SBVisibleColumnRangeContainsIconListIndex
|| __TEXT.__text _SBVisibleColumnRangeEnumerateContainedIconListIndexes
|| __TEXT.__text _SBVisibleColumnRangeEqualToRange
|| __TEXT.__text _SBVisibleColumnRangeGetNextColumn
|| __TEXT.__text _SBVisibleColumnRangeGetPreviousColumn
|| __TEXT.__text _SBVisibleColumnRangeGetVisibleColumnsForIconListIndex
|| __TEXT.__text _SBVisibleColumnRangeIsEmpty
|| __TEXT.__text _SBVisibleColumnRangeMaxIconListIndex
|| __TEXT.__text __SBCreateAddToHomeScreenApplicationShortcutItem
|| __TEXT.__text __SBCreateAddToStackApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateChangeWidgetSizeGroupApplicationShortcutItem
|| __TEXT.__text __SBCreateConfigureStackApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateConfigureWidgetApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateDebugFeedbackStackApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateDeleteAppApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateHideAppSuggestionApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateHideFolderContentsShortcutItem
|| __TEXT.__text __SBCreateHideStackSuggestionApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateRearrangeAppsApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateRemoveAppApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateRemoveWidgetApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateRenameFolderApplicationShortcutItem
|| __TEXT.__text __SBCreateShareApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateShowAllWindowsApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateTestFlightApplicationShortcutItem
|| __TEXT.__text __SBHLibraryCategoryIdentifierLocalizedDisplayNameForCategory
|| __TEXT.__text __SBHScreenTypeLookup
|| __TEXT.__text __SBIconIsLeafIconAndNotWidgetIcon
|| __TEXT.__text __SBIconListIsColumnValidForGridSize
|| __TEXT.__text __SBIconListIsRowValidForGridSize
|| __TEXT.__text __SBScaleIconZoomAnimatorCameraPositionToScaleModelPointToTargetPoint
|| __TEXT.__text __touchesContainNonIndirectTouch
|| __TEXT.__text _isDimSum
__ AppSupport: _OBJC_CLASS_$_CPMemoryPool
__ BaseBoardUI: _BSUIConstrainValueToIntervalWithRubberBand
__ BaseBoardUI: _OBJC_CLASS_$_BSUIAnimationFactory
__ BaseBoardUI: _OBJC_CLASS_$_BSUIFontProvider
__ BaseBoardUI: _OBJC_CLASS_$_BSUIScrollView
__ BaseBoardUI: _OBJC_METACLASS_$_BSUIScrollView
__ BatteryCenterUI: _OBJC_CLASS_$_BCUIBatteryAvocadoViewController
__ ChronoServices: _CHSSetMetricsSpecification
__ ChronoServices: _NSStringForAvocadoSizeClass
__ ChronoServices: _OBJC_CLASS_$_CHSAvocadoDescriptor
__ ChronoServices: _OBJC_CLASS_$_CHSAvocadoDescriptorProvider
__ ChronoServices: _OBJC_CLASS_$_CHSMutableWidgetMetricsSpecification
__ ChronoServices: _OBJC_CLASS_$_CHSWidget
__ ChronoServices: _OBJC_CLASS_$_CHSWidgetMetrics
__ ChronoServices: _OBJC_METACLASS_$_CHSAvocadoDescriptor
__ ChronoUIServices: _CHUISURLOpeningEntitlement
__ ChronoUIServices: _OBJC_CLASS_$_CHUISAvocadoHostViewController
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopObserverCreateWithHandler
__ CoreFoundation: _CFRunLoopObserverInvalidate
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSSystemTimeZoneDidChangeNotification
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGColorCreateGenericGray
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClipToMask
__ CoreGraphics: _CGContextDrawPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextSetAlpha
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextSetShadowWithColor
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathAddArc
__ CoreGraphics: _CGPathAddEllipseInRect
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectDivide
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreMaterial: _MTCGColorPerceivedLightness
__ CoreServices: _OBJC_CLASS_$_LSApplicationExtensionRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ CoreServices: _UTTypeConformsTo
__ CoreSpotlight: _MDItemAlternateNames
__ CoreSpotlight: _MDItemDisplayName
__ CoreSpotlight: _MDItemKeywords
__ CoreSpotlight: _MDQueryResultMenuRelevance
__ CoreSpotlight: _MDQueryResultRelevance
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchQuery
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchQueryContext
__ CoreSpotlight: _OBJC_CLASS_$_CSTopHitSearchQuery
__ CoreText: _CTFontGetLanguageAwareOutsets
__ CoreText: _kCTFontGradeTrait
__ CoreText: _kCTFontUIFontDesignSoft
__ CoreText: _kCTFontUIFontDesignTrait
__ DocumentManagerCore: _DOCShouldApplicationShowRecentsPopover
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSExtensionIdentifierName
__ Foundation: _NSExtensionPointName
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSIntersectionRange
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ FrontBoardServices: _BSDateTimeCacheChangedNotification
__ FrontBoardServices: _BSDispatchMain
__ FrontBoardServices: _BSDispatchQueueAssert
__ FrontBoardServices: _BSDispatchQueueAssertMain
__ FrontBoardServices: _BSDispatchQueueCreate
__ FrontBoardServices: _BSDispatchQueueCreateSerialWithQoS
__ FrontBoardServices: _BSDispatchQueueCreateWithQualityOfService
__ FrontBoardServices: _BSEqualBools
__ FrontBoardServices: _BSEqualObjects
__ FrontBoardServices: _BSEqualStrings
__ FrontBoardServices: _BSFloatCeilForScale
__ FrontBoardServices: _BSFloatEqualToFloat
__ FrontBoardServices: _BSFloatGreaterThanFloat
__ FrontBoardServices: _BSFloatGreaterThanOrEqualToFloat
__ FrontBoardServices: _BSFloatIsOne
__ FrontBoardServices: _BSFloatIsZero
__ FrontBoardServices: _BSFloatLessThanFloat
__ FrontBoardServices: _BSFloatLessThanOrEqualToFloat
__ FrontBoardServices: _BSIntervalFractionForValue
__ FrontBoardServices: _BSIntervalMax
__ FrontBoardServices: _BSIntervalUnit
__ FrontBoardServices: _BSIntervalValueForFraction
__ FrontBoardServices: _BSLogAddStateCaptureBlockWithTitle
__ FrontBoardServices: _BSPointEqualToPoint
__ FrontBoardServices: _BSRectEqualToRect
__ FrontBoardServices: _BSRectWithSize
__ FrontBoardServices: _BSRunLoopPerformAfterCACommit
__ FrontBoardServices: _BSSizeEqualToSize
__ FrontBoardServices: _BSSizeGreaterThanOrEqualToSize
__ FrontBoardServices: _BSStringFromBOOL
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActions
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _FBSOpenApplicationOptionKeyLaunchOrigin
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _OBJC_CLASS_$_BSAnimationSettings
__ FrontBoardServices: _OBJC_CLASS_$_BSCFBundle
__ FrontBoardServices: _OBJC_CLASS_$_BSDateFormatterCache
__ FrontBoardServices: _OBJC_CLASS_$_BSDescriptionBuilder
__ FrontBoardServices: _OBJC_CLASS_$_BSDispatchQueueAttributes
__ FrontBoardServices: _OBJC_CLASS_$_BSEqualsBuilder
__ FrontBoardServices: _OBJC_CLASS_$_BSEventQueue
__ FrontBoardServices: _OBJC_CLASS_$_BSEventQueueEvent
__ FrontBoardServices: _OBJC_CLASS_$_BSHashBuilder
__ FrontBoardServices: _OBJC_CLASS_$_BSPlatform
__ FrontBoardServices: _OBJC_CLASS_$_BSSimpleAssertion
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ FrontBoardServices: __BSIsInternalInstall
__ IconServices: _OBJC_CLASS_$_ISIcon
__ IconServices: _OBJC_CLASS_$_ISImage
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ Intents: _OBJC_CLASS_$_INIntent
__ IntlPreferences: _OBJC_CLASS_$_IntlUtility
__ MaterialKit: _OBJC_CLASS_$_MTMaterialView
__ MaterialKit: _OBJC_CLASS_$_MTStylingProvidingSolidColorView
__ MaterialKit: _OBJC_CLASS_$_MTVisualStylingProvider
__ MetadataUtilities: ___MDQueryCreateStringByAddingBackslashEscapes
__ PersistentConnection: _OBJC_CLASS_$_PCPersistentTimer
__ PrototypeTools: _OBJC_CLASS_$_PTButtonRow
__ PrototypeTools: _OBJC_CLASS_$_PTChoiceRow
__ PrototypeTools: _OBJC_CLASS_$_PTDomain
__ PrototypeTools: _OBJC_CLASS_$_PTDrillDownRow
__ PrototypeTools: _OBJC_CLASS_$_PTEditFloatRow
__ PrototypeTools: _OBJC_CLASS_$_PTModule
__ PrototypeTools: _OBJC_CLASS_$_PTRestoreDefaultSettingsRowAction
__ PrototypeTools: _OBJC_CLASS_$_PTSettings
__ PrototypeTools: _OBJC_CLASS_$_PTSliderRow
__ PrototypeTools: _OBJC_CLASS_$_PTSwitchRow
__ PrototypeTools: _OBJC_METACLASS_$_PTDomain
__ PrototypeTools: _OBJC_METACLASS_$_PTSettings
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DConcat
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DMakeRotation
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DMakeTranslation
__ QuartzCore: _CATransform3DRotate
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABackdropLayer
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMatchMoveAnimation
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_CLASS_$_CATransformLayer
__ QuartzCore: _kCAAnimationAbsolute
__ QuartzCore: _kCAAnimationRelative
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCAFilterColorBrightness
__ QuartzCore: _kCAFilterColorBurnBlendMode
__ QuartzCore: _kCAFilterColorDodgeBlendMode
__ QuartzCore: _kCAFilterColorInvert
__ QuartzCore: _kCAFilterColorSaturate
__ QuartzCore: _kCAFilterDestOut
__ QuartzCore: _kCAFilterDestOver
__ QuartzCore: _kCAFilterMultiplyColor
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCAFilterPlusL
__ QuartzCore: _kCAFilterSourceAtop
__ QuartzCore: _kCAFilterVibrantColorMatrix
__ QuartzCore: _kCAGradientLayerAxial
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTaskGetCodeSignStatus
__ SoftLinking: __sl_dlopen_audited
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFAnimationSettings
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFDateTimeController
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFFluidBehaviorSettings
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFMappedImageCache
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFOverridableDateProvider
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFRemoteBasebandLoggingManager
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFSpringLoadedInteractionBehavior
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFSpringLoadedInteractionEffect
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFSteppedAnimationTimingFunctionCalculator
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFTodayGestureDomain
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFTouchPassThroughView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFTouchPassThroughViewController
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBHomeScreenDefaults
__ SpringBoardFoundation: _OBJC_CLASS_$_SBReusableViewMap
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFSteppedAnimationTimingFunctionCalculator
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFTouchPassThroughView
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFTouchPassThroughViewController
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFView
__ SpringBoardFoundation: _SBFApplyParallaxSettingsToView
__ SpringBoardFoundation: _SBFApplyParallaxSettingsToViewWithFactor
__ SpringBoardFoundation: _SBFBoolEquals
__ SpringBoardFoundation: _SBFComposedColor
__ SpringBoardFoundation: _SBFEdgeInsetsRelativeToRectEdge
__ SpringBoardFoundation: _SBFEffectiveArtworkSubtype
__ SpringBoardFoundation: _SBFEffectiveDeviceClass
__ SpringBoardFoundation: _SBFEffectiveHomeButtonType
__ SpringBoardFoundation: _SBFEqualStrings
__ SpringBoardFoundation: _SBFFloatCeilForScale
__ SpringBoardFoundation: _SBFFloatEqualsFloat
__ SpringBoardFoundation: _SBFFloatFloorForScale
__ SpringBoardFoundation: _SBFFloatRoundForMainScreenScale
__ SpringBoardFoundation: _SBFFloatRoundForScale
__ SpringBoardFoundation: _SBFFontMetricsZero
__ SpringBoardFoundation: _SBFInterfaceOrientationMaskContainsInterfaceOrientation
__ SpringBoardFoundation: _SBFPointEqualToPointAtScale
__ SpringBoardFoundation: _SBFPreheatImageData
__ SpringBoardFoundation: _SBFRectRoundForScale
__ SpringBoardFoundation: _SBFRemoteBasebandLogCollectionEnabledText
__ SpringBoardFoundation: _SBFSafeCast
__ SpringBoardFoundation: __SBFLoggingMethodProem
__ SpringBoardFoundation: __SBF_Private_IsD33OrSimilarDevice
__ SpringBoardFoundation: __SBF_Private_IsN84
__ SpringBoardFoundation: _convertDampingRatioAndResponseToTensionAndFriction
__ SpringBoardServices: _OBJC_CLASS_$_SBSAppDragLocalContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationMultiwindowService
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutContactIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutCustomImageIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutItem
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutSystemIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutSystemPrivateIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutTemplateIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSHardwareButtonService
__ SpringBoardServices: _OBJC_CLASS_$_SBSHomeScreenService
__ SpringBoardServices: _SBDisplayMetrics
__ SpringBoardServices: _SBLogIconDragging
__ SpringBoardServices: _SBLogRootController
__ SpringBoardServices: _SBLogWidgets
__ SpringBoardServices: _SBLoggingSubsystem
__ SpringBoardServices: _SBSAppDragPrivateTypeIdentifier
__ SpringBoardServices: _SBSOpenApplicationLaunchOriginShortcutItem
__ SpringBoardServices: ___sb__mainScreenReferenceBounds
__ SpringBoardServices: ___sb__mainScreenScale
__ SpringBoardServices: ___sb__runningInSpringBoard
__ SpringBoardServices: _kSBSApplicationShortcutItemTypeSendBetaFeedback
__ SpringBoardServices: _kSBSApplicationShortcutItemTypeSendBetaFeedbackUserInfoItemIDKey
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUILegibilityLabel
__ SpringBoardUIServices: _UIContentSizeCategoryClip
__ SpringBoardUIServices: _UIContentSizeCategoryOneSmallerThanSizeCategory
__ StoreKit: _OBJC_CLASS_$_SKStoreProductActivityViewController
__ StoreKit: _SKStoreProductParameterITunesItemIdentifier
__ StoreKit: _SKStoreProductParameterPopoverSourceRect
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSKernAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSStringFromCGAffineTransform
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStringFromDirectionalEdgeInsets
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _NSStringFromUIOffset
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutDimension
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutGroup
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSection
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSize
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSpacing
__ UIKit: _OBJC_CLASS_$_NSDiffableDataSourceSnapshot
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayoutConfiguration
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIColorEffect
__ UIKit: _OBJC_CLASS_$_UIContextMenuConfiguration
__ UIKit: _OBJC_CLASS_$_UIContextMenuInteraction
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDragInteraction
__ UIKit: _OBJC_CLASS_$_UIDragItem
__ UIKit: _OBJC_CLASS_$_UIDragPreview
__ UIKit: _OBJC_CLASS_$_UIDragPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIDragPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIDropInteraction
__ UIKit: _OBJC_CLASS_$_UIDropProposal
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIHandleApplicationShortcutAction
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageAsset
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIImpactFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UIInteractionProgress
__ UIKit: _OBJC_CLASS_$_UIInterpolatingMotionEffect
__ UIKit: _OBJC_CLASS_$_UIKeyCommand
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UILocalizedIndexedCollation
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationBarAppearance
__ UIKit: _OBJC_CLASS_$_UINavigationItem
__ UIKit: _OBJC_CLASS_$_UIOpenURLAction
__ UIKit: _OBJC_CLASS_$_UIPageControl
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPointerAppIconEffect
__ UIKit: _OBJC_CLASS_$_UIPointerHoverEffect
__ UIKit: _OBJC_CLASS_$_UIPointerInteraction
__ UIKit: _OBJC_CLASS_$_UIPointerLiftEffect
__ UIKit: _OBJC_CLASS_$_UIPointerRegion
__ UIKit: _OBJC_CLASS_$_UIPointerShape
__ UIKit: _OBJC_CLASS_$_UIPointerStyle
__ UIKit: _OBJC_CLASS_$_UIPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScribbleInteraction
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UISearchTextField
__ UIKit: _OBJC_CLASS_$_UISpringLoadedInteraction
__ UIKit: _OBJC_CLASS_$_UISpringTimingParameters
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITableViewDiffableDataSource
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedDragPreview
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIVibrancyEffect
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewFloatAnimatableProperty
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIAssetManager
__ UIKit: _OBJC_CLASS_$__UIContextMenuStyle
__ UIKit: _OBJC_CLASS_$__UIGrabber
__ UIKit: _OBJC_CLASS_$__UIImpactFeedbackGeneratorConfiguration
__ UIKit: _OBJC_CLASS_$__UILegibilityImageSet
__ UIKit: _OBJC_CLASS_$__UILegibilitySettings
__ UIKit: _OBJC_CLASS_$__UILegibilityView
__ UIKit: _OBJC_CLASS_$__UIPortalView
__ UIKit: _OBJC_CLASS_$__UISheetAnimationController
__ UIKit: _OBJC_CLASS_$__UISheetPresentationController
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIDragInteraction
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIImage
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UIInteractionProgress
__ UIKit: _OBJC_METACLASS_$_UILocalizedIndexedCollation
__ UIKit: _OBJC_METACLASS_$_UINavigationBar
__ UIKit: _OBJC_METACLASS_$_UIPageControl
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UISearchController
__ UIKit: _OBJC_METACLASS_$_UISearchTextField
__ UIKit: _OBJC_METACLASS_$_UITableView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITableViewDiffableDataSource
__ UIKit: _OBJC_METACLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_METACLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$__UILegibilityView
__ UIKit: _OBJC_METACLASS_$__UISheetAnimationController
__ UIKit: _UIAccessibilityBoldTextStatusDidChangeNotification
__ UIKit: _UIAccessibilityIsBoldTextEnabled
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityReduceTransparencyStatusDidChangeNotification
__ UIKit: _UIAnimationDragCoefficient
__ UIKit: _UIApp
__ UIKit: _UIApplicationSignificantTimeChangeNotification
__ UIKit: _UICeilToScale
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UIContentSizeCategoryUnspecified
__ UIKit: _UIDistanceBetweenPoints
__ UIKit: _UIEdgeInsetsAdd
__ UIKit: _UIEdgeInsetsMax
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFloorToScale
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontDescriptorSystemDesignRounded
__ UIKit: _UIFontDescriptorTraitsAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightTrait
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIKeyInputEscape
__ UIKit: _UIKeyboardAnimationCurveUserInfoKey
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardWillChangeFrameNotification
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UILowPassFilteredCGFloat
__ UIKit: _UIPointRoundToScale
__ UIKit: _UIPointRoundToViewScale
__ UIKit: _UIRectCenteredAboutPoint
__ UIKit: _UIRectCenteredAboutPointScale
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectCenteredIntegralRectScale
__ UIKit: _UIRectCenteredRect
__ UIKit: _UIRectCenteredXInRect
__ UIKit: _UIRectCenteredXInRectScale
__ UIKit: _UIRectCenteredYInRect
__ UIKit: _UIRectCenteredYInRectScale
__ UIKit: _UIRectContainInRect
__ UIKit: _UIRectFill
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: _UIRectGetCenter
__ UIKit: _UIRectIntegralWithScale
__ UIKit: _UIRoundToScreenScale
__ UIKit: _UIScrollViewDecelerationRateFast
__ UIKit: _UISizeRoundToScale
__ UIKit: _UISizeRoundToViewScale
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UITableViewIndexAppClip
__ UIKit: _UITextFieldTextDidBeginEditingNotification
__ UIKit: _UITextFieldTextDidChangeNotification
__ UIKit: _UITextFieldTextDidEndEditingNotification
__ UIKit: _UITrackingRunLoopMode
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextFromViewKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UITransitionContextToViewKey
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: _UIWebClipAppClipBundleIdentifierPrefix
__ UIKit: _UIWindowDidRotateNotification
__ UIKit: _UIWindowLevelNormal
__ UIKit: __UILegibilityViewOptionNone
__ UIKit: __UILegibilityViewOptionUsesColorFilters
__ UIKit: __UIScrollViewNotifyForScrollView
__ UIKit: __UISheetMinimumTopInset
__ UIKit: __UITraitCollectionDisplayCornerRadiusUnspecified
__ UIKit: __UIVisualAltitudeFloatAboveSuperview
__ UIKit: __UIVisualAltitudeLevelWithSuperview
__ UIKit: __UIVisualAltitudeOverlayOnSuperview
__ UIKit: __UIWindowConvertRectFromOrientationToOrientation
__ UIKitServices: _OBJC_CLASS_$_UISApplicationSupportDisplayEdgeInfo
__ UIKitServices: _OBJC_CLASS_$_UISApplicationSupportDisplayEdgeInsetsWrapper
__ UIKitServices: _UISDeviceContextDeviceClassKey
__ UIKitServices: _UISDeviceContextHomeButtonTypeKey
__ UIKitServices: _UISOpenApplicationOptionKeyTargetContentIdentifier
__ Widgets: _OBJC_CLASS_$_WGWidgetGroupViewController
__ Widgets: _WGWidgetViewControllerAddRequestBundleIdentifierKey
__ Widgets: _WGWidgetViewControllerAddRequestNotification
__ WorkflowUIServices: _OBJC_CLASS_$_WFWidgetConfigurationOptions
__ WorkflowUIServices: _OBJC_CLASS_$_WFWidgetConfigurationViewController
__ WorkflowUIServices: _WFWidgetGetDefaultColors
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logging_enabled
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _atanf
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _modf
__ libSystem.B.dylib: _nexttoward
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _reallocf
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SBHAddWidgetDetailSheetViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <BSUIScrollViewDelegate, SBHWidgetWrapperViewControllerDelegate, SBHWidgetDragHandlerPassing>
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  <SBIconViewProviding> *iconViewProvider
 @property  SBHAddWidgetSheetAppCollectionViewCellConfigurator *appCellConfigurator
 @property  MTMaterialView *backgroundView
 @property  SBHAddWidgetSheetAppCollectionViewCell *headerCell
 @property  UIButton *closeButton
 @property  UIStackView *widgetInfoStackView
 @property  BSUIScrollView *widgetInfoScrollView
 @property  BSUIScrollView *scrollView
 @property  UIStackView *avocadosStackView
 @property  SBHAddWidgetButton *addButton
 @property  UIPageControl *pageControl
 @property  SBFFluidBehaviorSettings *widgetInfoScrollViewAnimationSettings
 @property  NSMutableArray *pages
 @property  <SBHAddWidgetSheetViewControllerDelegate> *delegate
 @property  SBHApplicationWidgetCollection *applicationWidgetCollection
 @property  SBHAddWidgetDetailsSheetPageViewController *currentPage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SBHWidgetDragHandling> *widgetDragHandler

  // instance methods
  -[SBHAddWidgetDetailSheetViewController headerCell]
  -[SBHAddWidgetDetailSheetViewController setListLayoutProvider:]
  -[SBHAddWidgetDetailSheetViewController backgroundView]
  -[SBHAddWidgetDetailSheetViewController setBackgroundView:]
  -[SBHAddWidgetDetailSheetViewController setCloseButton:]
  -[SBHAddWidgetDetailSheetViewController setAddButton:]
  -[SBHAddWidgetDetailSheetViewController pages]
  -[SBHAddWidgetDetailSheetViewController _scrollToPageIndex:animated:]
  -[SBHAddWidgetDetailSheetViewController _updateParallaxEffect]
  -[SBHAddWidgetDetailSheetViewController _updateBackgroundRecipe]
  -[SBHAddWidgetDetailSheetViewController applicationWidgetCollection]
  -[SBHAddWidgetDetailSheetViewController _updateControlsForContentOffset:]
  -[SBHAddWidgetDetailSheetViewController widgetInfoScrollViewAnimationSettings]
  -[SBHAddWidgetDetailSheetViewController _scrollMainScrollViewToMatchInfoScrollViewIfNeeded]
  -[SBHAddWidgetDetailSheetViewController widgetInfoViews]
  -[SBHAddWidgetDetailSheetViewController _currentGalleryItem]
  -[SBHAddWidgetDetailSheetViewController _closestPageWithGalleryItem:]
  -[SBHAddWidgetDetailSheetViewController widgetDragHandler]
  -[SBHAddWidgetDetailSheetViewController initWithListLayoutProvider:iconViewProvider:appCellConfigurator:]
  -[SBHAddWidgetDetailSheetViewController configureForGalleryItem:selectedSizeClass:]
  -[SBHAddWidgetDetailSheetViewController setApplicationWidgetCollection:]
  -[SBHAddWidgetDetailSheetViewController appCellConfigurator]
  -[SBHAddWidgetDetailSheetViewController setAppCellConfigurator:]
  -[SBHAddWidgetDetailSheetViewController setHeaderCell:]
  -[SBHAddWidgetDetailSheetViewController widgetInfoStackView]
  -[SBHAddWidgetDetailSheetViewController setWidgetInfoStackView:]
  -[SBHAddWidgetDetailSheetViewController widgetInfoScrollView]
  -[SBHAddWidgetDetailSheetViewController setWidgetInfoScrollView:]
  -[SBHAddWidgetDetailSheetViewController avocadosStackView]
  -[SBHAddWidgetDetailSheetViewController setAvocadosStackView:]
  -[SBHAddWidgetDetailSheetViewController setWidgetInfoScrollViewAnimationSettings:]
  -[SBHAddWidgetDetailSheetViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBHAddWidgetDetailSheetViewController .cxx_destruct]
  -[SBHAddWidgetDetailSheetViewController addButtonTapped:]
  -[SBHAddWidgetDetailSheetViewController setIconViewProvider:]
  -[SBHAddWidgetDetailSheetViewController _createConstraints]
  -[SBHAddWidgetDetailSheetViewController addButton]
  -[SBHAddWidgetDetailSheetViewController scrollView]
  -[SBHAddWidgetDetailSheetViewController closeButton]
  -[SBHAddWidgetDetailSheetViewController traitCollectionDidChange:]
  -[SBHAddWidgetDetailSheetViewController currentPage]
  -[SBHAddWidgetDetailSheetViewController setScrollView:]
  -[SBHAddWidgetDetailSheetViewController setPageControl:]
  -[SBHAddWidgetDetailSheetViewController listLayoutProvider]
  -[SBHAddWidgetDetailSheetViewController scrollViewDidScroll:]
  -[SBHAddWidgetDetailSheetViewController viewWillAppear:]
  -[SBHAddWidgetDetailSheetViewController closeButtonTapped:]
  -[SBHAddWidgetDetailSheetViewController setDelegate:]
  -[SBHAddWidgetDetailSheetViewController pageControlChanged:]
  -[SBHAddWidgetDetailSheetViewController pageControl]
  -[SBHAddWidgetDetailSheetViewController delegate]
  -[SBHAddWidgetDetailSheetViewController iconViewProvider]
  -[SBHAddWidgetDetailSheetViewController loadView]
  -[SBHAddWidgetDetailSheetViewController _addPage:]
  -[SBHAddWidgetDetailSheetViewController setPages:]
  -[SBHAddWidgetDetailSheetViewController _createViews]


SBCrossfadeIconZoomAnimator : SBScaleIconZoomAnimator
 @property  SBHCrossfadeZoomSettings *settings
 @property  BOOL performsTrueCrossfade
 @property  BOOL masksCorners

  // instance methods
  -[SBCrossfadeIconZoomAnimator masksCorners]
  -[SBCrossfadeIconZoomAnimator setMasksCorners:]
  -[SBCrossfadeIconZoomAnimator setPerformsTrueCrossfade:]
  -[SBCrossfadeIconZoomAnimator performsTrueCrossfade]
  -[SBCrossfadeIconZoomAnimator maxHomeScreenZoomScale]
  -[SBCrossfadeIconZoomAnimator _appSnapshotCornerRadiusForFraction:]
  -[SBCrossfadeIconZoomAnimator _delayedForRotation]
  -[SBCrossfadeIconZoomAnimator _numberOfSignificantAnimations]
  -[SBCrossfadeIconZoomAnimator .cxx_destruct]
  -[SBCrossfadeIconZoomAnimator _assertCrossfadeViewSizeIfNecessary]
  -[SBCrossfadeIconZoomAnimator fadesHomeScreen]
  -[SBCrossfadeIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBCrossfadeIconZoomAnimator _cleanupZoom]
  -[SBCrossfadeIconZoomAnimator initWithFolderController:crossfadeView:icon:]
  -[SBCrossfadeIconZoomAnimator _zoomedFrame]
  -[SBCrossfadeIconZoomAnimator _prepareAnimation]
  -[SBCrossfadeIconZoomAnimator _zoomedIconCenter]
  -[SBCrossfadeIconZoomAnimator _cleanupAnimation]
  -[SBCrossfadeIconZoomAnimator _setAnimationFraction:]


SBHHomeScreenDomain : PTDomain /System/Library/PrivateFrameworks/CoreMaterial.framework/CoreMaterial
  // class methods
  +[SBHHomeScreenDomain domainName]
  +[SBHHomeScreenDomain rootSettings]
  +[SBHHomeScreenDomain rootSettingsClass]
  +[SBHHomeScreenDomain domainGroupName]


SBHHomeScreenUsageMonitor : NSObject /usr/lib/libSystem.B.dylib <SBFolderObserver, SBLeafIconObserver, BSDescriptionProviding>
 @property  SBHIconModel *iconModel
 @property  SBRootFolder *rootFolder
 @property  SBFolderController *rootFolderController
 @property  BOOL delayedLayoutDidChangeNotification
 @property  unsigned long homeScreenDisappearanceReasons
 @property  BOOL currentPageIndexDidChangeWhileScrolling
 @property  SBHIconManager *iconManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHHomeScreenUsageMonitor rootFolder]
  -[SBHHomeScreenUsageMonitor setRootFolder:]
  -[SBHHomeScreenUsageMonitor setIconModel:]
  -[SBHHomeScreenUsageMonitor initWithIconManager:]
  -[SBHHomeScreenUsageMonitor rootFolderController]
  -[SBHHomeScreenUsageMonitor iconManager]
  -[SBHHomeScreenUsageMonitor leafIcon:didRemoveIconDataSource:]
  -[SBHHomeScreenUsageMonitor folder:didAddList:]
  -[SBHHomeScreenUsageMonitor leafIcon:didAddIconDataSource:]
  -[SBHHomeScreenUsageMonitor noteUserConfiguredIcon:]
  -[SBHHomeScreenUsageMonitor noteWidgetIconAdded:]
  -[SBHHomeScreenUsageMonitor rootFolderControllerCurrentPageIndexDidChange:]
  -[SBHHomeScreenUsageMonitor setRootFolderController:]
  -[SBHHomeScreenUsageMonitor noteUserDislikedWidgetIconStackSuggestion:]
  -[SBHHomeScreenUsageMonitor noteIconManagerRootFolderControllerViewDidDisappear]
  -[SBHHomeScreenUsageMonitor notifyForEveryHomeScreenWidgetVisibility]
  -[SBHHomeScreenUsageMonitor noteLayoutChanged]
  -[SBHHomeScreenUsageMonitor noteWidgetIconStack:changedActiveWidget:]
  -[SBHHomeScreenUsageMonitor dealloc]
  -[SBHHomeScreenUsageMonitor folder:didAddIcons:removedIcons:]
  -[SBHHomeScreenUsageMonitor .cxx_destruct]
  -[SBHHomeScreenUsageMonitor updateVisibilityReasons]
  -[SBHHomeScreenUsageMonitor resetRootFolderController]
  -[SBHHomeScreenUsageMonitor setDelayedLayoutDidChangeNotification:]
  -[SBHHomeScreenUsageMonitor delayedLayoutDidChangeNotification]
  -[SBHHomeScreenUsageMonitor succinctDescriptionBuilder]
  -[SBHHomeScreenUsageMonitor folder:didReplaceIcon:withIcon:]
  -[SBHHomeScreenUsageMonitor iconManagerDidChangeRootViewController:]
  -[SBHHomeScreenUsageMonitor iconManagerEditingDidChange:]
  -[SBHHomeScreenUsageMonitor currentPageIndexDidChangeWhileScrolling]
  -[SBHHomeScreenUsageMonitor folder:listHiddenDidChange:]
  -[SBHHomeScreenUsageMonitor resetIconModel]
  -[SBHHomeScreenUsageMonitor noteIconManagerOverlayTodayViewDidDisappear]
  -[SBHHomeScreenUsageMonitor noteCurrentPageIndexChanged:]
  -[SBHHomeScreenUsageMonitor succinctDescription]
  -[SBHHomeScreenUsageMonitor noteIconManagerCoverSheetTodayViewDidAppear]
  -[SBHHomeScreenUsageMonitor isContentVisible]
  -[SBHHomeScreenUsageMonitor rootFolderControllerDidEndScrolling:]
  -[SBHHomeScreenUsageMonitor leafIcon:didChangeActiveDataSource:]
  -[SBHHomeScreenUsageMonitor noteIconManagerRootFolderControllerViewWillAppear]
  -[SBHHomeScreenUsageMonitor setCurrentPageIndexDidChangeWhileScrolling:]
  -[SBHHomeScreenUsageMonitor noteIconManagerCoverSheetTodayViewDidDisappear]
  -[SBHHomeScreenUsageMonitor iconModel]
  -[SBHHomeScreenUsageMonitor noteIconManagerOverlayTodayViewDidAppear]
  -[SBHHomeScreenUsageMonitor setHomeScreenDisappearanceReasons:]
  -[SBHHomeScreenUsageMonitor noteIconManagerRootFolderContentOccludedChanged]
  -[SBHHomeScreenUsageMonitor removeObserver:]
  -[SBHHomeScreenUsageMonitor noteWidgetIconRemoved:]
  -[SBHHomeScreenUsageMonitor folder:didRemoveLists:atIndexes:]
  -[SBHHomeScreenUsageMonitor homeScreenDisappearanceReasons]
  -[SBHHomeScreenUsageMonitor iconManagerDidChangeIconModel:]
  -[SBHHomeScreenUsageMonitor notifyRootFolderControllerViewWillAppear]
  -[SBHHomeScreenUsageMonitor listViewIndexForRootFolderController:]
  -[SBHHomeScreenUsageMonitor addObserver:]
  -[SBHHomeScreenUsageMonitor noteUserTappedWidgetIcon:]
  -[SBHHomeScreenUsageMonitor notifyForEveryTodayViewWidgetVisibilityOnCoverSheet:]
  -[SBHHomeScreenUsageMonitor folder:didMoveList:fromIndex:toIndex:]
  -[SBHHomeScreenUsageMonitor descriptionWithMultilinePrefix:]
  -[SBHHomeScreenUsageMonitor iconModelDidLayOut:]
  -[SBHHomeScreenUsageMonitor descriptionBuilderWithMultilinePrefix:]
  -[SBHHomeScreenUsageMonitor updateVisibleWidgetIcons]


SBHIconTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBHLegibility>
 @property  UILabel *iconNameLabel
 @property  UIView *iconViewContainerView
 @property  UIView *labelContainerView
 @property  NSArray *iconViewContainerViewConstraints
 @property  NSLayoutConstraint *imageLeadingConstraint
 @property  SBIconView *iconView
 @property  SBIcon *icon
 @property  NSString *iconDescription
 @property  _UILegibilitySettings *legibilitySettings

  // class methods
  +[SBHIconTableViewCell leadingImageMarginForIconImageInfo:referenceLayout:]
  +[SBHIconTableViewCell defaultTableViewCellHeightForIconImageInfo:]
  +[SBHIconTableViewCell defaultTableViewCellSeperatorInsetForIconImageInfo:referenceLayout:]

  // instance methods
  -[SBHIconTableViewCell setIconView:]
  -[SBHIconTableViewCell initWithStyle:reuseIdentifier:]
  -[SBHIconTableViewCell iconView]
  -[SBHIconTableViewCell legibilitySettings]
  -[SBHIconTableViewCell setImageLeadingConstraint:]
  -[SBHIconTableViewCell _updateHighlightBackgroundView]
  -[SBHIconTableViewCell _resetContent]
  -[SBHIconTableViewCell _resetIconView]
  -[SBHIconTableViewCell iconViewContainerView]
  -[SBHIconTableViewCell imageLeadingConstraint]
  -[SBHIconTableViewCell setIconViewContainerViewConstraints:]
  -[SBHIconTableViewCell iconViewContainerViewConstraints]
  -[SBHIconTableViewCell _updateIconNameLabelForDisplayName:labelAccessoryType:]
  -[SBHIconTableViewCell _teardownIconLabelAccessoryView]
  -[SBHIconTableViewCell iconNameLabel]
  -[SBHIconTableViewCell _setLabelAccessoryType:]
  -[SBHIconTableViewCell iconDescription]
  -[SBHIconTableViewCell configureCellForIcon:]
  -[SBHIconTableViewCell labelContainerView]
  -[SBHIconTableViewCell .cxx_destruct]
  -[SBHIconTableViewCell icon]
  -[SBHIconTableViewCell setHighlighted:]
  -[SBHIconTableViewCell _updateTitleLabelFont]
  -[SBHIconTableViewCell prepareForReuse]
  -[SBHIconTableViewCell intrinsicContentSize]
  -[SBHIconTableViewCell setLegibilitySettings:]
  -[SBHIconTableViewCell traitCollectionDidChange:]
  -[SBHIconTableViewCell setHighlighted:animated:]


SBHRippleSimulation : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL settled

  // instance methods
  -[SBHRippleSimulation clear]
  -[SBHRippleSimulation convertGridToRippleCoordinate:]
  -[SBHRippleSimulation initWithRows:columns:]
  -[SBHRippleSimulation createRippleAtGridCoordinate:]
  -[SBHRippleSimulation zPositionForGridCoordinate:]
  -[SBHRippleSimulation transformForGridCoordinate:]
  -[SBHRippleSimulation setSettled:]
  -[SBHRippleSimulation dealloc]
  -[SBHRippleSimulation step:]
  -[SBHRippleSimulation isSettled]


SBHIconEditingSettings : PTSettings /System/Library/PrivateFrameworks/CoreMaterial.framework/CoreMaterial
 @property  PTOutlet *resetHomeScreenLayoutOutlet
 @property  BOOL showIndexLabels
 @property  BOOL showDragPlatterIconBorder
 @property  double editingLiftDelay
 @property  double longPressToEditDuration
 @property  BOOL waitForPause
 @property  double defaultPauseDuration
 @property  double fastEditingPauseDuration
 @property  double defaultSpringDampingRatio
 @property  double defaultSpringDuration
 @property  double clusterFastestDuration
 @property  double clusterSlowestDuration
 @property  double clusterMiddleFastDuration
 @property  double clusterMiddleSlowDuration
 @property  long long overrideAnimationType

  // class methods
  +[SBHIconEditingSettings settingsControllerModule]

  // instance methods
  -[SBHIconEditingSettings setDefaultValues]
  -[SBHIconEditingSettings setDefaultSpringDuration:]
  -[SBHIconEditingSettings setDefaultSpringDampingRatio:]
  -[SBHIconEditingSettings setEditingLiftDelay:]
  -[SBHIconEditingSettings .cxx_destruct]
  -[SBHIconEditingSettings fastEditingPauseDuration]
  -[SBHIconEditingSettings setWaitForPause:]
  -[SBHIconEditingSettings clusterFastestDuration]
  -[SBHIconEditingSettings defaultSpringDuration]
  -[SBHIconEditingSettings setShowIndexLabels:]
  -[SBHIconEditingSettings clusterMiddleSlowDuration]
  -[SBHIconEditingSettings setShowDragPlatterIconBorder:]
  -[SBHIconEditingSettings setFastEditingPauseDuration:]
  -[SBHIconEditingSettings setClusterFastestDuration:]
  -[SBHIconEditingSettings editingLiftDelay]
  -[SBHIconEditingSettings setClusterSlowestDuration:]
  -[SBHIconEditingSettings setClusterMiddleFastDuration:]
  -[SBHIconEditingSettings setLongPressToEditDuration:]
  -[SBHIconEditingSettings showIndexLabels]
  -[SBHIconEditingSettings resetHomeScreenLayoutOutlet]
  -[SBHIconEditingSettings setClusterMiddleSlowDuration:]
  -[SBHIconEditingSettings setOverrideAnimationType:]
  -[SBHIconEditingSettings clusterSlowestDuration]
  -[SBHIconEditingSettings defaultPauseDuration]
  -[SBHIconEditingSettings longPressToEditDuration]
  -[SBHIconEditingSettings setDefaultPauseDuration:]
  -[SBHIconEditingSettings defaultSpringDampingRatio]
  -[SBHIconEditingSettings setResetHomeScreenLayoutOutlet:]
  -[SBHIconEditingSettings waitForPause]
  -[SBHIconEditingSettings showDragPlatterIconBorder]
  -[SBHIconEditingSettings clusterMiddleFastDuration]
  -[SBHIconEditingSettings overrideAnimationType]


SBIconZoomAnimator : SBIconAnimator <SBIconIndexNodeObserver>
 @property  <SBIconZoomAnimationContaining> *animationContainer
 @property  SBIconListView *iconListView
 @property  SBIconListView *dockListView
 @property  NSSet *criticalIconNodeIdentifiers
 @property  double startTime
 @property  SBHIconZoomSettings *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconZoomAnimator isPastPointOfNoReturn]
  -[SBIconZoomAnimator _iconModelDidReload:]
  -[SBIconZoomAnimator setCriticalIconNodeIdentifiers:]
  -[SBIconZoomAnimator dealloc]
  -[SBIconZoomAnimator _numberOfSignificantAnimations]
  -[SBIconZoomAnimator _invalidateAnimationForSignificantIconModelChangesForReason:]
  -[SBIconZoomAnimator .cxx_destruct]
  -[SBIconZoomAnimator _setDockListView:]
  -[SBIconZoomAnimator _applyLabelAlphaFraction:]
  -[SBIconZoomAnimator _iconModelDidRelayout:]
  -[SBIconZoomAnimator _setIconListView:]
  -[SBIconZoomAnimator criticalIconNodeIdentifiers]
  -[SBIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBIconZoomAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[SBIconZoomAnimator _cleanupZoom]
  -[SBIconZoomAnimator initWithAnimationContainer:]
  -[SBIconZoomAnimator cleanupZoom]
  -[SBIconZoomAnimator enumerateIconsAndIconViewsWithHandler:]
  -[SBIconZoomAnimator iconListView]
  -[SBIconZoomAnimator node:didRemoveContainedNodeIdentifiers:]
  -[SBIconZoomAnimator _prepareAnimation]
  -[SBIconZoomAnimator dockIconCount]
  -[SBIconZoomAnimator _cleanupAnimation]
  -[SBIconZoomAnimator dockListView]
  -[SBIconZoomAnimator listIconCount]
  -[SBIconZoomAnimator iconViewForIcon:]
  -[SBIconZoomAnimator _clearObservers]
  -[SBIconZoomAnimator startTime]
  -[SBIconZoomAnimator nodeDidMoveContainedNodes:]
  -[SBIconZoomAnimator node:didAddContainedNodeIdentifiers:]
  -[SBIconZoomAnimator _setAnimationFraction:]


SBIconFadeAnimator : SBIconAnimator
 @property  BOOL fadesReferenceView

  // instance methods
  -[SBIconFadeAnimator _numberOfSignificantAnimations]
  -[SBIconFadeAnimator .cxx_destruct]
  -[SBIconFadeAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[SBIconFadeAnimator _prepareAnimation]
  -[SBIconFadeAnimator _cleanupAnimation]
  -[SBIconFadeAnimator _applyAlphaForFraction:]
  -[SBIconFadeAnimator fadesReferenceView]
  -[SBIconFadeAnimator initWithAnimationContainer:crossfadeView:]
  -[SBIconFadeAnimator setFadesReferenceView:]
  -[SBIconFadeAnimator _setAnimationFraction:]


SBWorkspaceInteractionContext : NSObject /usr/lib/libSystem.B.dylib
 @property  UIInteractionProgress *interactionProgress
 @property  UIGestureRecognizer *gestureRecognizer

  // instance methods
  -[SBWorkspaceInteractionContext gestureRecognizer]
  -[SBWorkspaceInteractionContext .cxx_destruct]
  -[SBWorkspaceInteractionContext interactionProgress]
  -[SBWorkspaceInteractionContext initWithGestureRecognizer:]
  -[SBWorkspaceInteractionContext initWithInteractionProgress:]


SBFolderIconZoomAnimator : SBScaleIconZoomAnimator <SBSearchGestureObserver>
 @property  SBSearchGesture *searchGesture
 @property  BOOL isAnimatingInFloatingDock
 @property  SBHFolderZoomSettings *settings
 @property  SBFFluidBehaviorSettings *dockAnimationSettings
 @property  SBFolderIcon *targetIcon
 @property  SBIconView *targetIconView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFolderIconZoomAnimator dockAnimationSettings]
  -[SBFolderIconZoomAnimator setDockAnimationSettings:]
  -[SBFolderIconZoomAnimator searchGesture:startedShowing:]
  -[SBFolderIconZoomAnimator searchGesture]
  -[SBFolderIconZoomAnimator setIsAnimatingInFloatingDock:]
  -[SBFolderIconZoomAnimator _updateDockMatchMoveWithFraction:]
  -[SBFolderIconZoomAnimator _setupMatchMoveWithDock]
  -[SBFolderIconZoomAnimator _numberOfSignificantAnimations]
  -[SBFolderIconZoomAnimator _setupMatchMoveWithDockWithTargetIconCenter:targetIconAnchor:]
  -[SBFolderIconZoomAnimator .cxx_destruct]
  -[SBFolderIconZoomAnimator _forceSquareZoomDimension]
  -[SBFolderIconZoomAnimator initWithAnimationContainer:innerFolderController:folderIcon:]
  -[SBFolderIconZoomAnimator shouldMatchMoveWithDock]
  -[SBFolderIconZoomAnimator defaultTargetIconContainerView]
  -[SBFolderIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBFolderIconZoomAnimator _setupMatchMoveAnimation]
  -[SBFolderIconZoomAnimator targetIconView]
  -[SBFolderIconZoomAnimator _zoomedFrame]
  -[SBFolderIconZoomAnimator _prepareAnimation]
  -[SBFolderIconZoomAnimator _setupCounterDockMatchMoveAnimationWithOffset:layer:additive:]
  -[SBFolderIconZoomAnimator _cleanupAnimation]
  -[SBFolderIconZoomAnimator searchGesture:changedPercentComplete:]
  -[SBFolderIconZoomAnimator _referenceFolderIconView]
  -[SBFolderIconZoomAnimator isAnimatingInFloatingDock]
  -[SBFolderIconZoomAnimator setSearchGesture:]
  -[SBFolderIconZoomAnimator _setAnimationFraction:]


_SBInnerFolderIconZoomAnimator : SBIconZoomAnimator
 @property  SBHFolderZoomSettings *settings

  // instance methods
  -[_SBInnerFolderIconZoomAnimator _numberOfSignificantAnimations]
  -[_SBInnerFolderIconZoomAnimator .cxx_destruct]
  -[_SBInnerFolderIconZoomAnimator _applyIconCrossfadeForZoomFraction:]
  -[_SBInnerFolderIconZoomAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[_SBInnerFolderIconZoomAnimator _calculateZoomedOffset:scale:forIcon:withView:]
  -[_SBInnerFolderIconZoomAnimator _prepareAnimation]
  -[_SBInnerFolderIconZoomAnimator initWithFolderController:iconView:iconZoomScaleDimension:]
  -[_SBInnerFolderIconZoomAnimator _cleanupAnimation]
  -[_SBInnerFolderIconZoomAnimator _applyIconTransformForZoomFraction:]
  -[_SBInnerFolderIconZoomAnimator _setAnimationFraction:]


SBReversibleLayerPropertyAnimator : NSObject /usr/lib/libSystem.B.dylib <CAAnimationDelegate, BSInvalidatable>
 @property  BOOL invalidated
 @property  BSAnimationSettings *currentAnimationSettings
 @property  @? completion
 @property  BOOL started
 @property  BOOL goingForward
 @property  unsigned long reversalCount
 @property  BOOL reversedWithNewSettings
 @property  unsigned long outstandingCAAnimationCompletionCount
 @property  NSString *forwardAnimationKey
 @property  NSString *forwardOffsetAnimationKey
 @property  NSMutableArray *reversalAnimationKeys
 @property  CALayer *layer
 @property  NSString *keyPath
 @property  double initialValue
 @property  double targetValue
 @property  BOOL reversed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBReversibleLayerPropertyAnimator animationDidStop:finished:]
  -[SBReversibleLayerPropertyAnimator forwardAnimationKey]
  -[SBReversibleLayerPropertyAnimator hasStarted]
  -[SBReversibleLayerPropertyAnimator initWithLayer:keyPath:initialValue:targetValue:]
  -[SBReversibleLayerPropertyAnimator targetValue]
  -[SBReversibleLayerPropertyAnimator hasReversed]
  -[SBReversibleLayerPropertyAnimator setStarted:]
  -[SBReversibleLayerPropertyAnimator currentAnimationSettings]
  -[SBReversibleLayerPropertyAnimator completion]
  -[SBReversibleLayerPropertyAnimator _animateFromRelativeValue:toRelativeValue:withSettings:beginTime:]
  -[SBReversibleLayerPropertyAnimator reversalCount]
  -[SBReversibleLayerPropertyAnimator _percentCompleteForAnimation:time:]
  -[SBReversibleLayerPropertyAnimator _inputPercentCompleteForAnimation:outputPercentComplete:precision:]
  -[SBReversibleLayerPropertyAnimator setCompletion:]
  -[SBReversibleLayerPropertyAnimator _fireCompletionIfNecessary]
  -[SBReversibleLayerPropertyAnimator layer]
  -[SBReversibleLayerPropertyAnimator .cxx_destruct]
  -[SBReversibleLayerPropertyAnimator isGoingForward]
  -[SBReversibleLayerPropertyAnimator keyPath]
  -[SBReversibleLayerPropertyAnimator _animateFromValue:toValue:withSettings:beginTime:]
  -[SBReversibleLayerPropertyAnimator invalidated]
  -[SBReversibleLayerPropertyAnimator setCurrentAnimationSettings:]
  -[SBReversibleLayerPropertyAnimator forwardOffsetAnimationKey]
  -[SBReversibleLayerPropertyAnimator _reverseWithSettings:directionChangeSettings:headStart:]
  -[SBReversibleLayerPropertyAnimator _additiveAnimationForKeyPath:withSettings:beginTime:fromRelativeValue:toRelativeValue:]
  -[SBReversibleLayerPropertyAnimator setForwardOffsetAnimationKey:]
  -[SBReversibleLayerPropertyAnimator animateWithSettings:completion:]
  -[SBReversibleLayerPropertyAnimator reversalAnimationKeys]
  -[SBReversibleLayerPropertyAnimator _outputPercentCompleteForAnimation:inputPercentComplete:]
  -[SBReversibleLayerPropertyAnimator reverseWithSettings:directionChangeSettings:headStart:]
  -[SBReversibleLayerPropertyAnimator _animationWithSettings:]
  -[SBReversibleLayerPropertyAnimator reverse]
  -[SBReversibleLayerPropertyAnimator setInvalidated:]
  -[SBReversibleLayerPropertyAnimator setReversedWithNewSettings:]
  -[SBReversibleLayerPropertyAnimator setReversalCount:]
  -[SBReversibleLayerPropertyAnimator setForwardAnimationKey:]
  -[SBReversibleLayerPropertyAnimator invalidate]
  -[SBReversibleLayerPropertyAnimator hasReversedWithNewSettings]
  -[SBReversibleLayerPropertyAnimator initialValue]
  -[SBReversibleLayerPropertyAnimator setReversalAnimationKeys:]
  -[SBReversibleLayerPropertyAnimator outstandingCAAnimationCompletionCount]
  -[SBReversibleLayerPropertyAnimator setOutstandingCAAnimationCompletionCount:]


SBValueConvergenceAnimator : NSObject /usr/lib/libSystem.B.dylib
 @property  double startTime
 @property  double lastFireTime
 @property  double elapsedTime
 @property  double currentValue
 @property  double targetValue
 @property  BOOL finishesOnValueConvergence
 @property  @? convergenceFunction
 @property  @? applier
 @property  @? completion
 @property  long long frameInterval

  // instance methods
  -[SBValueConvergenceAnimator elapsedTime]
  -[SBValueConvergenceAnimator setTargetValue:]
  -[SBValueConvergenceAnimator _convergeValue]
  -[SBValueConvergenceAnimator _reset]
  -[SBValueConvergenceAnimator setStartTime:]
  -[SBValueConvergenceAnimator targetValue]
  -[SBValueConvergenceAnimator init]
  -[SBValueConvergenceAnimator completion]
  -[SBValueConvergenceAnimator setFrameInterval:]
  -[SBValueConvergenceAnimator frameInterval]
  -[SBValueConvergenceAnimator setCompletion:]
  -[SBValueConvergenceAnimator dealloc]
  -[SBValueConvergenceAnimator .cxx_destruct]
  -[SBValueConvergenceAnimator setConvergenceFunction:]
  -[SBValueConvergenceAnimator setFinishesOnValueConvergence:]
  -[SBValueConvergenceAnimator stop]
  -[SBValueConvergenceAnimator lastFireTime]
  -[SBValueConvergenceAnimator setApplier:]
  -[SBValueConvergenceAnimator finishesOnValueConvergence]
  -[SBValueConvergenceAnimator setCurrentValue:]
  -[SBValueConvergenceAnimator setConvergenceFunctionWithConstant:]
  -[SBValueConvergenceAnimator currentValue]
  -[SBValueConvergenceAnimator _invokeApplier]
  -[SBValueConvergenceAnimator convergenceFunction]
  -[SBValueConvergenceAnimator isRunning]
  -[SBValueConvergenceAnimator _invokeCompletionWithFinished:]
  -[SBValueConvergenceAnimator applier]
  -[SBValueConvergenceAnimator setLastFireTime:]
  -[SBValueConvergenceAnimator startTime]
  -[SBValueConvergenceAnimator start]


_SBValueConvergenceAnimatorEngine : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[_SBValueConvergenceAnimatorEngine sharedEngine]

  // instance methods
  -[_SBValueConvergenceAnimatorEngine _updateDisplayLink]
  -[_SBValueConvergenceAnimatorEngine _tearDownDisplayLink]
  -[_SBValueConvergenceAnimatorEngine init]
  -[_SBValueConvergenceAnimatorEngine stopAnimator:]
  -[_SBValueConvergenceAnimatorEngine _ensureDisplayLink]
  -[_SBValueConvergenceAnimatorEngine _onDisplayLink:]
  -[_SBValueConvergenceAnimatorEngine .cxx_destruct]
  -[_SBValueConvergenceAnimatorEngine updateAnimator:]
  -[_SBValueConvergenceAnimatorEngine startAnimator:]
  -[_SBValueConvergenceAnimatorEngine isRunningAnimator:]


SBHWidget : NSObject /usr/lib/libSystem.B.dylib <CHSWidgetPersonality, SBLeafIconDataSource, NSCopying, NSSecureCoding, BSDescriptionProviding>
 @property  NSString *uniqueIdentifier
 @property  NSString *kind
 @property  NSString *extensionBundleIdentifier
 @property  NSString *containerBundleIdentifier
 @property  NSString *displayName
 @property  BOOL suggestion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *configurationStorageIdentifier

  // class methods
  +[SBHWidget supportsSecureCoding]

  // instance methods
  -[SBHWidget copyWithZone:]
  -[SBHWidget extensionBundleIdentifier]
  -[SBHWidget priorityForIcon:]
  -[SBHWidget icon:imageWithInfo:]
  -[SBHWidget icon:displayNameForLocation:]
  -[SBHWidget initWithUniqueIdentifier:kind:extensionBundleIdentifier:]
  -[SBHWidget iconSupportsConfiguration:]
  -[SBHWidget configurationStorageIdentifier]
  -[SBHWidget initWithKind:extensionBundleIdentifier:]
  -[SBHWidget copyWithUniqueIdentifier]
  -[SBHWidget .cxx_destruct]
  -[SBHWidget kind]
  -[SBHWidget succinctDescriptionBuilder]
  -[SBHWidget encodeWithCoder:]
  -[SBHWidget uniqueIdentifier]
  -[SBHWidget containerBundleIdentifier]
  -[SBHWidget matchesPersonality:]
  -[SBHWidget succinctDescription]
  -[SBHWidget isEqual:]
  -[SBHWidget isSuggestion]
  -[SBHWidget displayName]
  -[SBHWidget setSuggestion:]
  -[SBHWidget descriptionWithMultilinePrefix:]
  -[SBHWidget initWithCoder:]
  -[SBHWidget descriptionBuilderWithMultilinePrefix:]


SBHStackConfigurationSwitchTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UISwitch *accessorySwitch

  // instance methods
  -[SBHStackConfigurationSwitchTableViewCell initWithStyle:reuseIdentifier:]
  -[SBHStackConfigurationSwitchTableViewCell accessorySwitch]
  -[SBHStackConfigurationSwitchTableViewCell setAccessorySwitch:]
  -[SBHStackConfigurationSwitchTableViewCell .cxx_destruct]


SBScaleIconZoomAnimator : SBIconZoomAnimator
 @property  SBReversibleLayerPropertyAnimator *homeScreenScaleAnimator
 @property  SBReversibleLayerPropertyAnimator *targetIconScaleXAnimator
 @property  SBReversibleLayerPropertyAnimator *targetIconScaleYAnimator
 @property  NSMutableArray *animationCompletions
 @property  <SBScaleIconZoomAnimationContaining> *animationContainer
 @property  SBIcon *targetIcon
 @property  SBIconView *referenceIconView
 @property  SBIconView *targetIconView
 @property  UIView *targetIconContainerView
 @property  UIView *defaultTargetIconContainerView
 @property  UIView *targetIconPositioningView
 @property  double zoomScale
 @property  double maxHomeScreenZoomScale
 @property  BOOL fadesHomeScreen
 @property  {CGPoint=dd} zoomScaleDimension
 @property  {CGPoint=dd} zoomedTargetIconCenter
 @property  {CGPoint=dd} targetIconCenter
 @property  SBHScaleZoomSettings *settings

  // class methods
  +[SBScaleIconZoomAnimator validateAnimationContainer:targetIcon:]

  // instance methods
  -[SBScaleIconZoomAnimator maxHomeScreenZoomScale]
  -[SBScaleIconZoomAnimator zoomScale]
  -[SBScaleIconZoomAnimator _homeScreenScaleForZoomFraction:]
  -[SBScaleIconZoomAnimator _applyVisualAltitudeFraction:]
  -[SBScaleIconZoomAnimator targetIcon]
  -[SBScaleIconZoomAnimator initWithAnimationContainer:targetIcon:]
  -[SBScaleIconZoomAnimator _numberOfSignificantAnimations]
  -[SBScaleIconZoomAnimator referenceIconView]
  -[SBScaleIconZoomAnimator zoomScaleDimension]
  -[SBScaleIconZoomAnimator homeScreenScaleAnimator]
  -[SBScaleIconZoomAnimator .cxx_destruct]
  -[SBScaleIconZoomAnimator hintToFraction:]
  -[SBScaleIconZoomAnimator _forceSquareZoomDimension]
  -[SBScaleIconZoomAnimator targetIconScaleXAnimator]
  -[SBScaleIconZoomAnimator setTargetIconScaleXAnimator:]
  -[SBScaleIconZoomAnimator _applyZoomFraction:]
  -[SBScaleIconZoomAnimator zoomedTargetIconCenter]
  -[SBScaleIconZoomAnimator targetIconPositioningView]
  -[SBScaleIconZoomAnimator fadesHomeScreen]
  -[SBScaleIconZoomAnimator setTargetIconScaleYAnimator:]
  -[SBScaleIconZoomAnimator shouldMatchMoveWithDock]
  -[SBScaleIconZoomAnimator defaultTargetIconContainerView]
  -[SBScaleIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBScaleIconZoomAnimator targetIconCenter]
  -[SBScaleIconZoomAnimator targetIconView]
  -[SBScaleIconZoomAnimator targetIconContainerView]
  -[SBScaleIconZoomAnimator _configureTargetIconPositioningView:]
  -[SBScaleIconZoomAnimator _applyIconGridFadeFraction:]
  -[SBScaleIconZoomAnimator _zoomedFrame]
  -[SBScaleIconZoomAnimator _prepareAnimation]
  -[SBScaleIconZoomAnimator setHomeScreenScaleAnimator:]
  -[SBScaleIconZoomAnimator animationCompletions]
  -[SBScaleIconZoomAnimator _setZoomScale:]
  -[SBScaleIconZoomAnimator _zoomedIconCenter]
  -[SBScaleIconZoomAnimator setAnimationCompletions:]
  -[SBScaleIconZoomAnimator _cleanupAnimation]
  -[SBScaleIconZoomAnimator _zoomedVisualAltitude]
  -[SBScaleIconZoomAnimator _referenceIconImageCenter]
  -[SBScaleIconZoomAnimator _targetIconScaleForZoomFraction:]
  -[SBScaleIconZoomAnimator targetIconScaleYAnimator]
  -[SBScaleIconZoomAnimator _setIconAlpha:]
  -[SBScaleIconZoomAnimator _setAnimationFraction:]


SBFloatingDockViewController : SBFTouchPassThroughViewController /System/Library/Frameworks/UIKit.framework/UIKit <SBIconListViewDragDelegate, SBIconListModelObserver, SBFolderControllerDelegate, SBFolderPresentingViewControllerDelegate, SBScaleIconZoomAnimationContaining, SBIconViewProviding, SBFloatingDockViewDelegate, SBIconViewQuerying, SBIconLocationPresenting, BSDescriptionProviding>
 @property  SBHIconManager *iconManager
 @property  <SBIconViewProviding> *iconViewProvider
 @property  SBIconListModel *dockListModel
 @property  SBFloatingDockView *dockView
 @property  SBFolderPresentingViewController *folderPresentingViewController
 @property  SBHomeScreenIconTransitionAnimator *currentFolderAnimator
 @property  NSMutableArray *currentExpandCompletions
 @property  NSMutableArray *currentCollapseCompletions
 @property  SBFTouchPassThroughView *scalingView
 @property  double lastDockHeight
 @property  SBHFloatingDockStyleConfiguration *underlyingPresentationStyleConfiguration
 @property  BOOL transitioningUnderlyingPresentationStyleConfiguration
 @property  SBHFloatingDockStyleConfiguration *transitionTargetUnderlyingPresentationStyleConfiguration
 @property  <SBFloatingDockViewControllerDelegate> *delegate
 @property  UIViewController<SBFloatingDockSuggestionsViewProviding> *suggestionsViewController
 @property  double contentHeight
 @property  double maximumContentHeight
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} floatingDockScreenFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} floatingDockScreenPresentationFrame
 @property  double preferredVerticalMargin
 @property  double requestedVerticalMargin
 @property  double translationFromFullyPresentedFrame
 @property  double maximumDockContinuousCornerRadius
 @property  double dockOffscreenProgress
 @property  BOOL wantsFastIconReordering
 @property  BOOL shouldIndicateImpossibleDrop
 @property  BOOL presentingFolder
 @property  SBFolderController *presentedFolderController
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHIconModel *iconModel
 @property  SBIconListView *currentIconListView
 @property  SBIconListView *dockIconListView
 @property  UIView *containerView
 @property  UIWindow *animationWindow
 @property  UIView *fallbackIconContainerView
 @property  NSArray *extraViewsContainers
 @property  NSArray *extraViews
 @property  BOOL shouldAnimateLastTwoViewsAsOne
 @property  BOOL shouldAnimateFirstTwoViewsAsOne
 @property  NSSet *presentedIconLocations

  // instance methods
  -[SBFloatingDockViewController configureIconView:forIcon:]
  -[SBFloatingDockViewController dockView]
  -[SBFloatingDockViewController viewDidLoad]
  -[SBFloatingDockViewController iconManager]
  -[SBFloatingDockViewController iconViewForIcon:location:]
  -[SBFloatingDockViewController recycleIconView:]
  -[SBFloatingDockViewController folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFloatingDockViewController legibilitySettings]
  -[SBFloatingDockViewController folderController:iconListView:canHandleIconDropSession:]
  -[SBFloatingDockViewController folderController:iconListView:iconDropSessionDidUpdate:]
  -[SBFloatingDockViewController wantsFastIconReordering]
  -[SBFloatingDockViewController folderController:didEndEditingTitle:]
  -[SBFloatingDockViewController isDisplayingIconView:inLocation:]
  -[SBFloatingDockViewController iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFloatingDockViewController folderController:iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBFloatingDockViewController dockIconListView]
  -[SBFloatingDockViewController fallbackIconContainerView]
  -[SBFloatingDockViewController dealloc]
  -[SBFloatingDockViewController _sizeCategoryDidChange:]
  -[SBFloatingDockViewController .cxx_destruct]
  -[SBFloatingDockViewController setUnderlyingPresentationStyleConfiguration:]
  -[SBFloatingDockViewController dockListModel]
  -[SBFloatingDockViewController _rebuildUserIconListView]
  -[SBFloatingDockViewController lastDockHeight]
  -[SBFloatingDockViewController suggestionsViewController]
  -[SBFloatingDockViewController setFolderPresentingViewController:]
  -[SBFloatingDockViewController setScalingView:]
  -[SBFloatingDockViewController iconEditingDidChange:]
  -[SBFloatingDockViewController iconDraggingDidChange:]
  -[SBFloatingDockViewController contentHeightForFrame:]
  -[SBFloatingDockViewController reduceTransparencyEnabledStateDidChange:]
  -[SBFloatingDockViewController translationFromFullyPresentedFrame]
  -[SBFloatingDockViewController setLastDockHeight:]
  -[SBFloatingDockViewController userIconListView]
  -[SBFloatingDockViewController recentIconListView]
  -[SBFloatingDockViewController dockOffscreenProgress]
  -[SBFloatingDockViewController minimumVerticalMarginForFrame:]
  -[SBFloatingDockViewController maximumDockContinuousCornerRadius]
  -[SBFloatingDockViewController folderPresentingViewController]
  -[SBFloatingDockViewController presentedFolderController]
  -[SBFloatingDockViewController enumerateVisibleIconViewsUsingBlock:]
  -[SBFloatingDockViewController dockViewWillBecomeVisible]
  -[SBFloatingDockViewController dockViewWillResignVisible]
  -[SBFloatingDockViewController dockViewDidResignVisible]
  -[SBFloatingDockViewController dockViewDidBecomeVisible]
  -[SBFloatingDockViewController userIconLocation]
  -[SBFloatingDockViewController suggestionsIconLocation]
  -[SBFloatingDockViewController _updateDockForStyleConfiguration:]
  -[SBFloatingDockViewController setTransitioningUnderlyingPresentationStyleConfiguration:]
  -[SBFloatingDockViewController setTransitionTargetUnderlyingPresentationStyleConfiguration:]
  -[SBFloatingDockViewController transitionTargetUnderlyingPresentationStyleConfiguration]
  -[SBFloatingDockViewController dockViewIfExists]
  -[SBFloatingDockViewController setDockListModel:]
  -[SBFloatingDockViewController _resizeDockForChangedNumberOfIconsAnimated:]
  -[SBFloatingDockViewController floatingDockScreenFrame]
  -[SBFloatingDockViewController maximumContentHeight]
  -[SBFloatingDockViewController underlyingPresentationStyleConfiguration]
  -[SBFloatingDockViewController _updateFolderIconBackgroundsForStyleConfiguration:]
  -[SBFloatingDockViewController _updatePresentedFolderBackgroundForStyleConfiguration:]
  -[SBFloatingDockViewController _updatePlatterShadowForStyleConfiguration:]
  -[SBFloatingDockViewController _backgroundEffectForPresentedFolder]
  -[SBFloatingDockViewController _rebuildAfterIconModelChange]
  -[SBFloatingDockViewController isPresentingFolder]
  -[SBFloatingDockViewController _platterEffectForPresentedFolder]
  -[SBFloatingDockViewController shouldIndicateImpossibleDrop]
  -[SBFloatingDockViewController _coalesceRequestsToResizeDockForChangedNumberOfIcons]
  -[SBFloatingDockViewController _currentFolderIconBackgroundStyle]
  -[SBFloatingDockViewController currentFolderAnimator]
  -[SBFloatingDockViewController currentExpandCompletions]
  -[SBFloatingDockViewController setCurrentExpandCompletions:]
  -[SBFloatingDockViewController currentCollapseCompletions]
  -[SBFloatingDockViewController setCurrentCollapseCompletions:]
  -[SBFloatingDockViewController firstIconViewForIcon:]
  -[SBFloatingDockViewController _presentFolderForIcon:location:animated:completion:]
  -[SBFloatingDockViewController _shouldOpenFolderIcon:]
  -[SBFloatingDockViewController _isInAppToAppTransition]
  -[SBFloatingDockViewController setCurrentFolderAnimator:]
  -[SBFloatingDockViewController dismissPresentedFolderAnimated:completion:]
  -[SBFloatingDockViewController folderControllerDidOpen:]
  -[SBFloatingDockViewController folderControllerDidClose:]
  -[SBFloatingDockViewController folderPresentationController:animationControllerForTransitionWithFolder:presenting:animated:]
  -[SBFloatingDockViewController setSuggestionsViewController:]
  -[SBFloatingDockViewController folderPresentationController:willPerformTransitionWithFolder:presenting:withTransitionCoordinator:]
  -[SBFloatingDockViewController minimumHomeScreenScaleForFolderPresentationController:]
  -[SBFloatingDockViewController folderPresentationController:sourceViewForPresentingViewController:]
  -[SBFloatingDockViewController floatingDockViewMainPlatterDidChangeFrame:]
  -[SBFloatingDockViewController initWithIconManager:iconViewProvider:]
  -[SBFloatingDockViewController preferredVerticalMargin]
  -[SBFloatingDockViewController requestedVerticalMargin]
  -[SBFloatingDockViewController setRequestedVerticalMargin:]
  -[SBFloatingDockViewController floatingDockScreenPresentationFrame]
  -[SBFloatingDockViewController layoutUserControlledIconLists:animationType:forceRelayout:]
  -[SBFloatingDockViewController enumerateIconListsUsingBlock:]
  -[SBFloatingDockViewController cleanUpAfterUnderlyingBackgroundStyleTransition]
  -[SBFloatingDockViewController prepareForTransitionToStyleConfiguration:fromDockVisible:toDockVisible:]
  -[SBFloatingDockViewController setDockOffscreenProgress:]
  -[SBFloatingDockViewController _addDockGestureRecognizer:]
  -[SBFloatingDockViewController _setPaddingEdgeInsets:]
  -[SBFloatingDockViewController floatingDockSuggestionsViewControllerDidChangeNumberOfVisibleSuggestions:]
  -[SBFloatingDockViewController presentFolderForIcon:location:animated:completion:]
  -[SBFloatingDockViewController setShouldIndicateImpossibleDrop:]
  -[SBFloatingDockViewController isTransitioningUnderlyingBackgroundStyle]
  -[SBFloatingDockViewController shouldAnimateLastTwoViewsAsOne]
  -[SBFloatingDockViewController succinctDescriptionBuilder]
  -[SBFloatingDockViewController folderController:draggedIconShouldDropFromListView:]
  -[SBFloatingDockViewController firstIconViewForIcon:inLocations:]
  -[SBFloatingDockViewController folderControllerWillBeginScrolling:]
  -[SBFloatingDockViewController iconListView:iconDropSessionDidUpdate:]
  -[SBFloatingDockViewController isDisplayingIcon:inLocations:]
  -[SBFloatingDockViewController folderController:iconListView:iconDropSessionDidExit:]
  -[SBFloatingDockViewController iconModelDidLayout:]
  -[SBFloatingDockViewController folderController:iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBFloatingDockViewController folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFloatingDockViewController isDisplayingIconView:]
  -[SBFloatingDockViewController iconListView:canHandleIconDropSession:]
  -[SBFloatingDockViewController setLegibilitySettings:]
  -[SBFloatingDockViewController folderControllerShouldClose:withPinchGesture:]
  -[SBFloatingDockViewController enumerateIconListViewsUsingBlock:]
  -[SBFloatingDockViewController folderControllerShouldBeginEditing:withHaptic:]
  -[SBFloatingDockViewController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBFloatingDockViewController contentHeight]
  -[SBFloatingDockViewController folderController:accessibilityTintColorForScreenRect:]
  -[SBFloatingDockViewController folderController:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFloatingDockViewController iconListView:iconDropSessionDidEnter:]
  -[SBFloatingDockViewController succinctDescription]
  -[SBFloatingDockViewController presentedIconLocations]
  -[SBFloatingDockViewController targetIconContainerView]
  -[SBFloatingDockViewController folderControllerShouldEndEditing:]
  -[SBFloatingDockViewController setDockView:]
  -[SBFloatingDockViewController enumerateDisplayedIconViewsUsingBlock:]
  -[SBFloatingDockViewController isIconViewRecycled:]
  -[SBFloatingDockViewController iconListView:performIconDrop:]
  -[SBFloatingDockViewController containerView]
  -[SBFloatingDockViewController returnScalingView]
  -[SBFloatingDockViewController folderControllerDidEndScrolling:]
  -[SBFloatingDockViewController animationWindow]
  -[SBFloatingDockViewController iconListView:iconDropSessionDidExit:]
  -[SBFloatingDockViewController folderControllerWillClose:]
  -[SBFloatingDockViewController folderController:iconListView:performIconDrop:]
  -[SBFloatingDockViewController shouldAnimateFirstTwoViewsAsOne]
  -[SBFloatingDockViewController isDisplayingIcon:inLocation:]
  -[SBFloatingDockViewController iconModel]
  -[SBFloatingDockViewController folderController:canChangeCurrentPageIndexToIndex:]
  -[SBFloatingDockViewController iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBFloatingDockViewController borrowScalingView]
  -[SBFloatingDockViewController folderControllerWillOpen:]
  -[SBFloatingDockViewController iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFloatingDockViewController folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFloatingDockViewController iconList:didAddIcon:]
  -[SBFloatingDockViewController setDelegate:]
  -[SBFloatingDockViewController dequeueReusableIconViewOfClass:]
  -[SBFloatingDockViewController iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBFloatingDockViewController iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFloatingDockViewController isDisplayingIcon:]
  -[SBFloatingDockViewController iconManagerDidChangeIconModel:]
  -[SBFloatingDockViewController firstIconViewForIcon:excludingLocations:]
  -[SBFloatingDockViewController setWantsFastIconReordering:]
  -[SBFloatingDockViewController folderController:didBeginEditingTitle:]
  -[SBFloatingDockViewController iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFloatingDockViewController viewDidLayoutSubviews]
  -[SBFloatingDockViewController iconList:didRemoveIcon:]
  -[SBFloatingDockViewController iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFloatingDockViewController controllerClassForFolder:]
  -[SBFloatingDockViewController delegate]
  -[SBFloatingDockViewController descriptionWithMultilinePrefix:]
  -[SBFloatingDockViewController folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFloatingDockViewController extraViewsContainers]
  -[SBFloatingDockViewController iconViewProvider]
  -[SBFloatingDockViewController extraViews]
  -[SBFloatingDockViewController currentIconListView]
  -[SBFloatingDockViewController descriptionBuilderWithMultilinePrefix:]
  -[SBFloatingDockViewController scalingView]
  -[SBFloatingDockViewController folderController:iconListView:iconDropSessionDidEnter:]
  -[SBFloatingDockViewController isPresentingIconLocation:]


SBHSidebarWidgetBootstrappingAdvisor : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL shouldSidebarWidgetsBeInLearningMode
 @property  <SBHSidebarWidgetLearningDataSource> *dataSource
 @property  double learningDuration
 @property  unsigned long learningEpoch

  // instance methods
  -[SBHSidebarWidgetBootstrappingAdvisor initWithDataSource:]
  -[SBHSidebarWidgetBootstrappingAdvisor dealloc]
  -[SBHSidebarWidgetBootstrappingAdvisor .cxx_destruct]
  -[SBHSidebarWidgetBootstrappingAdvisor _setupSidebarWidgetsLearningCadence]
  -[SBHSidebarWidgetBootstrappingAdvisor initWithDataSource:learningDuration:learningEpoch:]
  -[SBHSidebarWidgetBootstrappingAdvisor _updateSidebarWidgetsCommenceDateIfEmpty]
  -[SBHSidebarWidgetBootstrappingAdvisor _requiresLearningCadenceForFavoriteWidgets:]
  -[SBHSidebarWidgetBootstrappingAdvisor _updateSidebarWidgetsEpoch]
  -[SBHSidebarWidgetBootstrappingAdvisor _scheduleWidgetLearningCadenceUpdateTimer:]
  -[SBHSidebarWidgetBootstrappingAdvisor learningDuration]
  -[SBHSidebarWidgetBootstrappingAdvisor learningEpoch]
  -[SBHSidebarWidgetBootstrappingAdvisor _sidebarLearningPeriodTimeIsUp:]
  -[SBHSidebarWidgetBootstrappingAdvisor noteSignificantSidebarStateChangeDidOccur]
  -[SBHSidebarWidgetBootstrappingAdvisor shouldSidebarWidgetsBeInLearningMode]
  -[SBHSidebarWidgetBootstrappingAdvisor setShouldSidebarWidgetsBeInLearningMode:]
  -[SBHSidebarWidgetBootstrappingAdvisor dataSource]
  -[SBHSidebarWidgetBootstrappingAdvisor removeObserver:]
  -[SBHSidebarWidgetBootstrappingAdvisor addObserver:]
  -[SBHSidebarWidgetBootstrappingAdvisor _notifyObservers]


SBCenterIconZoomAnimator : SBIconZoomAnimator <SBIconListLayoutDelegate, SBIconListModelObserver>
 @property  <SBDockOffscreenFractionModifying> *dockOffscreenFractionModifier
 @property  UIView *zoomView
 @property  {CGPoint=dd} cameraPosition
 @property  double centerRow
 @property  double centerCol
 @property  BOOL animatingIcons
 @property  SBFolderController *folderController
 @property  SBHCenterZoomSettings *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBCenterIconZoomAnimator centerCol]
  -[SBCenterIconZoomAnimator setDockOffscreenFractionModifier:]
  -[SBCenterIconZoomAnimator animatingIcons]
  -[SBCenterIconZoomAnimator _numberOfSignificantAnimations]
  -[SBCenterIconZoomAnimator _updateDockForFraction:]
  -[SBCenterIconZoomAnimator .cxx_destruct]
  -[SBCenterIconZoomAnimator cameraPosition]
  -[SBCenterIconZoomAnimator _positionView:forIcon:]
  -[SBCenterIconZoomAnimator iconList:didReplaceIcon:withIcon:]
  -[SBCenterIconZoomAnimator _calculateCenters]
  -[SBCenterIconZoomAnimator _animationFactoryForIcon:]
  -[SBCenterIconZoomAnimator _animationFactoryForDock]
  -[SBCenterIconZoomAnimator _iconZoomDelay]
  -[SBCenterIconZoomAnimator _animationFactoryForFolderView]
  -[SBCenterIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBCenterIconZoomAnimator initWithFolderController:]
  -[SBCenterIconZoomAnimator setFraction:withCenter:]
  -[SBCenterIconZoomAnimator folderController]
  -[SBCenterIconZoomAnimator _calculateCentersAndCameraPosition]
  -[SBCenterIconZoomAnimator _setAnimationFraction:withCenter:]
  -[SBCenterIconZoomAnimator _prepareAnimation]
  -[SBCenterIconZoomAnimator dockOffscreenFractionModifier]
  -[SBCenterIconZoomAnimator _cleanupAnimation]
  -[SBCenterIconZoomAnimator iconList:didAddIcon:]
  -[SBCenterIconZoomAnimator iconListView:originForIconCoordinate:metrics:proposedOrigin:]
  -[SBCenterIconZoomAnimator _cleanupAnimationIncludingDock:]
  -[SBCenterIconZoomAnimator centerRow]
  -[SBCenterIconZoomAnimator _zPositionForView:center:andFraction:]
  -[SBCenterIconZoomAnimator zoomView]
  -[SBCenterIconZoomAnimator _setAnimationFraction:]


SBHIconLibraryQueryResult : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  SBHLocalizedIndexedCollation *collation
 @property  NSDiffableDataSourceSnapshot *snapshot
 @property  BOOL nullQueryResult
 @property  SBHIconLibraryQuery *query
 @property  NSSet *icons
 @property  unsigned long sortMethodology
 @property  NSArray *sectionIndexTitles
 @property  NSArray *sectionIdentifiers
 @property  unsigned long totalNumberOfItems

  // class methods
  +[SBHIconLibraryQueryResult _hydrateSnapshot:fromIcons:query:outCollation:outIconForItemIdentifier:outSortMethodology:sortComparator:]
  +[SBHIconLibraryQueryResult nullQueryResults]

  // instance methods
  -[SBHIconLibraryQueryResult copyWithZone:]
  -[SBHIconLibraryQueryResult sectionIdentifiers]
  -[SBHIconLibraryQueryResult setSnapshot:]
  -[SBHIconLibraryQueryResult iconAtIndexPath:]
  -[SBHIconLibraryQueryResult indexPathForIcon:]
  -[SBHIconLibraryQueryResult .cxx_destruct]
  -[SBHIconLibraryQueryResult query]
  -[SBHIconLibraryQueryResult icons]
  -[SBHIconLibraryQueryResult initWithQuery:icons:sortComparator:]
  -[SBHIconLibraryQueryResult sortMethodology]
  -[SBHIconLibraryQueryResult initWithQuery:icons:snapshot:collation:iconForitemIdentifier:sortMethodology:]
  -[SBHIconLibraryQueryResult isEqualToQueryResult:]
  -[SBHIconLibraryQueryResult _firstExtantSectionWithCollationIndexGreaterThan:]
  -[SBHIconLibraryQueryResult itemIdentifierForIcon:]
  -[SBHIconLibraryQueryResult sectionIdentifierForIcon:]
  -[SBHIconLibraryQueryResult sectionIdentifierAtIndex:]
  -[SBHIconLibraryQueryResult iconForItemIdentifier:]
  -[SBHIconLibraryQueryResult titleForSectionIdentifier:]
  -[SBHIconLibraryQueryResult isNullQueryResult]
  -[SBHIconLibraryQueryResult titleForSectionAtIndex:]
  -[SBHIconLibraryQueryResult iconsForSectionAtIndex:]
  -[SBHIconLibraryQueryResult snapshot]
  -[SBHIconLibraryQueryResult indexOfSectionIdentifier:]
  -[SBHIconLibraryQueryResult indexOfSectionForSectionIndexTitleAtIndex:]
  -[SBHIconLibraryQueryResult sectionIndexTitles]
  -[SBHIconLibraryQueryResult totalNumberOfItems]
  -[SBHIconLibraryQueryResult isEqual:]
  -[SBHIconLibraryQueryResult setCollation:]
  -[SBHIconLibraryQueryResult collation]


SBHIconTableViewDiffableDataSource : UITableViewDiffableDataSource /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  SBHTableViewIconLibrary *iconLibrary
 @property  SBHIconLibraryQueryResult *queryResult

  // instance methods
  -[SBHIconTableViewDiffableDataSource tableView:sectionForSectionIndexTitle:atIndex:]
  -[SBHIconTableViewDiffableDataSource sectionIndexTitlesForTableView:]
  -[SBHIconTableViewDiffableDataSource applyQueryResult:animatingDifferences:]
  -[SBHIconTableViewDiffableDataSource .cxx_destruct]
  -[SBHIconTableViewDiffableDataSource iconLibrary]
  -[SBHIconTableViewDiffableDataSource applySnapshot:animatingDifferences:completion:]
  -[SBHIconTableViewDiffableDataSource queryResult]
  -[SBHIconTableViewDiffableDataSource applyQueryResult:animatingDifferences:completion:]
  -[SBHIconTableViewDiffableDataSource setIconLibrary:]


SBViewControllerTransitionContext : NSObject /usr/lib/libSystem.B.dylib <SBViewControllerContextTransitioning, SBViewControllerTransitionCoordinator>
 @property  <SBHWidgetConfigurationAnimationContext> *widgetConfigurationAnimationContext
 @property  <SBViewControllerTransitionContextDelegate> *delegate
 @property  UIView *containerView
 @property  <UIViewControllerAnimatedTransitioning> *animator
 @property  <UIViewControllerInteractiveTransitioning> *interactor
 @property  long long presentationStyle
 @property  {CGAffineTransform=dddddd} targetTransform
 @property  BOOL isTransitioning
 @property  BOOL wantsAnimation
 @property  id userInfo
 @property  BOOL animated
 @property  BOOL interactive
 @property  BOOL transitionWasCancelled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL initiallyInteractive
 @property  BOOL isInterruptible
 @property  BOOL cancelled
 @property  double transitionDuration
 @property  double percentComplete
 @property  double completionVelocity
 @property  long long completionCurve

  // instance methods
  -[SBViewControllerTransitionContext transitionWasCancelled]
  -[SBViewControllerTransitionContext setInteractor:]
  -[SBViewControllerTransitionContext animateAlongsideTransitionInView:animation:completion:]
  -[SBViewControllerTransitionContext isCancelled]
  -[SBViewControllerTransitionContext interactor]
  -[SBViewControllerTransitionContext supportsRestarting]
  -[SBViewControllerTransitionContext transitionWasRestarted]
  -[SBViewControllerTransitionContext setAnimator:]
  -[SBViewControllerTransitionContext notifyWhenInteractionChangesUsingBlock:]
  -[SBViewControllerTransitionContext pauseInteractiveTransition]
  -[SBViewControllerTransitionContext addTransitionContinuation:]
  -[SBViewControllerTransitionContext isInteractive]
  -[SBViewControllerTransitionContext widgetConfigurationAnimationContext]
  -[SBViewControllerTransitionContext isTransitioning]
  -[SBViewControllerTransitionContext cancelTransition]
  -[SBViewControllerTransitionContext transitionDuration]
  -[SBViewControllerTransitionContext _startInteractiveTransition]
  -[SBViewControllerTransitionContext finalFrameForViewController:]
  -[SBViewControllerTransitionContext completionVelocity]
  -[SBViewControllerTransitionContext animateAlongsideTransition:completion:]
  -[SBViewControllerTransitionContext notifyWhenInteractionEndsUsingBlock:]
  -[SBViewControllerTransitionContext init]
  -[SBViewControllerTransitionContext setUserInfo:]
  -[SBViewControllerTransitionContext presentationStyle]
  -[SBViewControllerTransitionContext viewControllerForKey:]
  -[SBViewControllerTransitionContext _updateTransitionAnimationFactoryAndOptions]
  -[SBViewControllerTransitionContext _reversibleAnimator]
  -[SBViewControllerTransitionContext targetTransform]
  -[SBViewControllerTransitionContext animator]
  -[SBViewControllerTransitionContext _completeTransition]
  -[SBViewControllerTransitionContext transitionAnimationOptions]
  -[SBViewControllerTransitionContext _runInteractionEndedHandlers]
  -[SBViewControllerTransitionContext dealloc]
  -[SBViewControllerTransitionContext isAnimated]
  -[SBViewControllerTransitionContext setContainerView:]
  -[SBViewControllerTransitionContext .cxx_destruct]
  -[SBViewControllerTransitionContext initialFrameForViewController:]
  -[SBViewControllerTransitionContext _interactorSupportsRestarting]
  -[SBViewControllerTransitionContext viewForKey:]
  -[SBViewControllerTransitionContext initiallyInteractive]
  -[SBViewControllerTransitionContext updateInteractiveTransition:]
  -[SBViewControllerTransitionContext succinctDescriptionBuilder]
  -[SBViewControllerTransitionContext restartTransition]
  -[SBViewControllerTransitionContext isInterruptible]
  -[SBViewControllerTransitionContext completeTransition:]
  -[SBViewControllerTransitionContext transitionAnimationFactory]
  -[SBViewControllerTransitionContext _acquireTransitionCompletion]
  -[SBViewControllerTransitionContext wasPreviousPhaseInteractive]
  -[SBViewControllerTransitionContext completionCurve]
  -[SBViewControllerTransitionContext setTargetTransform:]
  -[SBViewControllerTransitionContext setFinalFrame:forViewController:]
  -[SBViewControllerTransitionContext setView:forKey:]
  -[SBViewControllerTransitionContext setWantsAnimation:]
  -[SBViewControllerTransitionContext _animatorIsInteractive]
  -[SBViewControllerTransitionContext userInfo]
  -[SBViewControllerTransitionContext succinctDescription]
  -[SBViewControllerTransitionContext cancelInteractiveTransition]
  -[SBViewControllerTransitionContext requiresRestartableAnimations]
  -[SBViewControllerTransitionContext containerView]
  -[SBViewControllerTransitionContext _interactiveAnimator]
  -[SBViewControllerTransitionContext setPresentationStyle:]
  -[SBViewControllerTransitionContext supportsCancelling]
  -[SBViewControllerTransitionContext setViewController:forKey:]
  -[SBViewControllerTransitionContext _objectSupportsRestarting:]
  -[SBViewControllerTransitionContext requiresCancellableAnimations]
  -[SBViewControllerTransitionContext requiresInteractiveAnimations]
  -[SBViewControllerTransitionContext _animatorIsReversible]
  -[SBViewControllerTransitionContext _runAlongsideAnimationBlocksInEnclosingAnimationContext]
  -[SBViewControllerTransitionContext setDelegate:]
  -[SBViewControllerTransitionContext _runAlongsideAnimationBlocksWithFactory:options:]
  -[SBViewControllerTransitionContext finishInteractiveTransition]
  -[SBViewControllerTransitionContext setInitialFrame:forViewController:]
  -[SBViewControllerTransitionContext delegate]
  -[SBViewControllerTransitionContext percentComplete]
  -[SBViewControllerTransitionContext descriptionWithMultilinePrefix:]
  -[SBViewControllerTransitionContext _completeTransitionIfPossible]
  -[SBViewControllerTransitionContext descriptionBuilderWithMultilinePrefix:]
  -[SBViewControllerTransitionContext startTransition]
  -[SBViewControllerTransitionContext wantsAnimation]
  -[SBViewControllerTransitionContext _animatorSupportsRestarting]


SBIconAnimationContext : NSObject /usr/lib/libSystem.B.dylib
 @property  double delay
 @property  double fraction
 @property  @? completion

  // instance methods
  -[SBIconAnimationContext setDelay:]
  -[SBIconAnimationContext delay]
  -[SBIconAnimationContext completion]
  -[SBIconAnimationContext fraction]
  -[SBIconAnimationContext setCompletion:]
  -[SBIconAnimationContext .cxx_destruct]
  -[SBIconAnimationContext setFraction:]


SBIconAnimator : NSObject /usr/lib/libSystem.B.dylib
 @property  <SBIconAnimationContaining> *animationContainer
 @property  UIView *referenceView
 @property  BOOL invalidated
 @property  <SBIconAnimatorDelegate> *delegate
 @property  SBHIconAnimationSettings *settings
 @property  double fraction
 @property  double hintFraction
 @property  SBValueConvergenceAnimator *hintAnimator
 @property  UIView *backgroundDarkeningView
 @property  BOOL animating
 @property  BOOL pastPointOfNoReturn

  // instance methods
  -[SBIconAnimator prepare]
  -[SBIconAnimator isPastPointOfNoReturn]
  -[SBIconAnimator isAnimating]
  -[SBIconAnimator setHintFraction:]
  -[SBIconAnimator setBackgroundDarkeningView:]
  -[SBIconAnimator animateToFraction:afterDelay:withCompletion:]
  -[SBIconAnimator _invalidateCompletions]
  -[SBIconAnimator fraction]
  -[SBIconAnimator backgroundDarkeningView]
  -[SBIconAnimator dealloc]
  -[SBIconAnimator _numberOfSignificantAnimations]
  -[SBIconAnimator .cxx_destruct]
  -[SBIconAnimator hintToFraction:]
  -[SBIconAnimator setFraction:]
  -[SBIconAnimator _animateToFractionFromPendingContexts]
  -[SBIconAnimator centralAnimationFactory]
  -[SBIconAnimator hintAnimator]
  -[SBIconAnimator _windowFinishedRotating]
  -[SBIconAnimator referenceView]
  -[SBIconAnimator invalidated]
  -[SBIconAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[SBIconAnimator settings]
  -[SBIconAnimator initWithAnimationContainer:]
  -[SBIconAnimator _animateToFractionFromContext:]
  -[SBIconAnimator _prepareAnimation]
  -[SBIconAnimator _isDelayedForRotation]
  -[SBIconAnimator setInvalidated:]
  -[SBIconAnimator _cleanupAnimation]
  -[SBIconAnimator setDelegate:]
  -[SBIconAnimator cleanup]
  -[SBIconAnimator setSettings:]
  -[SBIconAnimator hintFraction]
  -[SBIconAnimator delegate]
  -[SBIconAnimator setHintAnimator:]
  -[SBIconAnimator animationContainer]
  -[SBIconAnimator _setAnimationFraction:]


SBFolderController : SBNestingViewController <SBFolderControllerDelegate, SBIconListViewDragObserver, SBFolderControllerBackgroundViewDelegate, SBFolderViewDelegate, SBFolderObserver, SBIconListLayoutObserver, SBIconViewObserver, SBScaleIconZoomAnimationContaining, BSDescriptionProviding, SBIconLocationPresenting, SBIconViewQuerying>
 @property  BOOL open
 @property  BOOL active
 @property  BOOL rotating
 @property  BOOL animating
 @property  <BSInvalidatable> *statusBarAssertion
 @property  UIStatusBar *fakeStatusBar
 @property  SBFolderControllerConfiguration *configuration
 @property  long long orientation
 @property  NSArray *_viewControllersToNotifyForViewObscuration
 @property  SBFolderView *folderView
 @property  SBFolderView *folderViewIfLoaded
 @property  SBFolderContainerView *folderContainerView
 @property  SBFolderController *outerFolderController
 @property  SBFolderController *innerFolderController
 @property  SBFolderControllerAnimationContext *animationContext
 @property  SBIconListPageControl *pageControl
 @property  <SBFolderControllerDelegate> *folderDelegate
 @property  SBFolder *folder
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  unsigned long allowedOrientations
 @property  <SBIconViewProviding> *iconViewProvider
 @property  id context
 @property  SBIconView *folderIconView
 @property  UIView *headerView
 @property  long long currentPageIndex
 @property  BOOL editing
 @property  BOOL scrolling
 @property  BOOL scrollDragging
 @property  BOOL scrollDecelerating
 @property  BOOL scrollTracking
 @property  unsigned long userInterfaceLayoutDirectionHandling
 @property  long long userInterfaceLayoutDirection
 @property  double currentScrollingOffset
 @property  _UILegibilitySettings *legibilitySettings
 @property  long long defaultPageIndex
 @property  long long minimumPageIndex
 @property  long long maximumPageIndex
 @property  long long firstIconPageIndex
 @property  long long lastIconPageIndex
 @property  UIView *contentView
 @property  NSArray *iconListViews
 @property  unsigned long iconListViewCount
 @property  SBIconListView *currentIconListView
 @property  SBIconListModel *currentIconListModel
 @property  NSString *originatingIconLocation
 @property  SBFolderController *deepestFolderController
 @property  NSIndexPath *currentIndexPath
 @property  BOOL hasDock
 @property  SBIconListView *dockListView
 @property  BOOL suspendsWallpaperAnimationWhileOpen
 @property  BOOL closesAfterDragExits
 @property  BOOL canAcceptFolderIconDrags
 @property  BOOL disablesScrollingWhileIconDragIsDropping
 @property  BOOL occluded
 @property  BOOL pageControlHidden
 @property  double pageControlAlpha
 @property  UIColor *defaultAccessibilityTintColor
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  SBIconPageIndicatorImageSetCache *iconPageIndicatorImageSetCache
 @property  BOOL overridingPageViewControllerAppearanceStateToRemainDisappeared
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHIconModel *iconModel
 @property  SBIconListView *dockIconListView
 @property  UIView *containerView
 @property  UIWindow *animationWindow
 @property  UIView *fallbackIconContainerView
 @property  NSArray *extraViewsContainers
 @property  NSArray *extraViews
 @property  BOOL shouldAnimateLastTwoViewsAsOne
 @property  BOOL shouldAnimateFirstTwoViewsAsOne
 @property  NSSet *presentedIconLocations

  // class methods
  +[SBFolderController listViewClass]
  +[SBFolderController configurationClass]
  +[SBFolderController _contentViewClass]
  +[SBFolderController iconLocation]

  // instance methods
  -[SBFolderController viewDidLoad]
  -[SBFolderController context]
  -[SBFolderController iconView:didChangeCustomImageViewController:]
  -[SBFolderController revealIcon:animated:completionHandler:]
  -[SBFolderController setPageControlHidden:]
  -[SBFolderController prepareToOpen]
  -[SBFolderController currentIconListModel]
  -[SBFolderController firstIconPageIndex]
  -[SBFolderController iconViewForIcon:location:]
  -[SBFolderController folderController:willCreateInnerFolderControllerWithConfiguration:]
  -[SBFolderController _depth]
  -[SBFolderController folderController:willUseIconTransitionAnimator:forOperation:onViewController:animated:]
  -[SBFolderController isAnimating]
  -[SBFolderController iconListViews]
  -[SBFolderController iconListModelIndexForPageIndex:]
  -[SBFolderController layoutIconLists:animationType:forceRelayout:]
  -[SBFolderController hasDock]
  -[SBFolderController iconListViewIndexForPageIndex:]
  -[SBFolderController folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFolderController allowedOrientations]
  -[SBFolderController legibilitySettings]
  -[SBFolderController setIconImageCache:]
  -[SBFolderController iconListViewForDrag:]
  -[SBFolderController folderController:iconListView:canHandleIconDropSession:]
  -[SBFolderController iconListView:concludeIconDrop:]
  -[SBFolderController folderController:iconListView:iconDropSessionDidUpdate:]
  -[SBFolderController iconListView:didRemoveIconView:]
  -[SBFolderController cancelScrolling]
  -[SBFolderController isDisplayingIconView:inLocation:]
  -[SBFolderController userInterfaceLayoutDirection]
  -[SBFolderController iconListView:iconDropSessionDidEnd:]
  -[SBFolderController folderController:iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBFolderController contentOverlayInsetsFromParentIfAvailableForFolderController:]
  -[SBFolderController dockIconListView]
  -[SBFolderController folderView]
  -[SBFolderController beginModifyingDockOffscreenFractionForReason:]
  -[SBFolderController fallbackIconContainerView]
  -[SBFolderController matchMoveSourceViewForIconView:]
  -[SBFolderController dealloc]
  -[SBFolderController contentView]
  -[SBFolderController _removeFakeStatusBar]
  -[SBFolderController minimumHomeScreenScaleDidChange]
  -[SBFolderController iconListView:didAddIconView:]
  -[SBFolderController prepareForAnimation:withTargetIcon:]
  -[SBFolderController folder:didAddIcons:removedIcons:]
  -[SBFolderController iconImageCache]
  -[SBFolderController .cxx_destruct]
  -[SBFolderController minimumHomeScreenScaleForFolderController:]
  -[SBFolderController animationContext]
  -[SBFolderController pageControlAlpha]
  -[SBFolderController setFakeStatusBar:]
  -[SBFolderController setCurrentPageIndex:animated:completion:]
  -[SBFolderController setFolderDelegate:]
  -[SBFolderController firstIconViewForIcon:]
  -[SBFolderController setOriginatingIconLocation:]
  -[SBFolderController setFolderIconView:]
  -[SBFolderController doesPageContainIconListView:]
  -[SBFolderController folderControllerDidOpen:]
  -[SBFolderController userInterfaceLayoutDirectionHandling]
  -[SBFolderController setContentAlpha:]
  -[SBFolderController folderControllerDidClose:]
  -[SBFolderController folderController:iconAnimatorForOperation:onViewController:animated:initialDelay:]
  -[SBFolderController iconPageIndicatorImageSetCache]
  -[SBFolderController noteUserIsInteractingWithIcons]
  -[SBFolderController innerFolderController]
  -[SBFolderController shouldAnimateLastTwoViewsAsOne]
  -[SBFolderController fakeStatusBar]
  -[SBFolderController succinctDescriptionBuilder]
  -[SBFolderController originatingIconLocation]
  -[SBFolderController folderDelegate]
  -[SBFolderController iconViewDidDismissContextMenu:]
  -[SBFolderController delegateDidChange]
  -[SBFolderController parentDelegateDidChange]
  -[SBFolderController folderViewIfLoaded]
  -[SBFolderController _makeContentViewWithConfiguration:]
  -[SBFolderController _resetIconLists]
  -[SBFolderController folderController:draggedIconShouldDropFromListView:]
  -[SBFolderController updateAppearanceStateForPageViewControllers:]
  -[SBFolderController _viewControllersToNotifyForViewObscuration]
  -[SBFolderController folderContainerView]
  -[SBFolderController folder:didReplaceIcon:withIcon:]
  -[SBFolderController firstIconViewForIcon:inLocations:]
  -[SBFolderController pageIndexForIconListModelIndex:]
  -[SBFolderController isOpen]
  -[SBFolderController folderControllerWillBeginScrolling:]
  -[SBFolderController iconListViewAtIndex:]
  -[SBFolderController _cancelTouchesForAllCustomIconImageViewControllers]
  -[SBFolderController isOverridingPageViewControllerAppearanceStateToRemainDisappeared]
  -[SBFolderController visiblePageViewControllers]
  -[SBFolderController _handleEndEditingKeyCommand:]
  -[SBFolderController _configureForInnerFolderController:]
  -[SBFolderController prepareToClose]
  -[SBFolderController nestingViewController:animationControllerForOperation:onViewController:animated:]
  -[SBFolderController _addFakeStatusBarView]
  -[SBFolderController _fadeHomescreenAndDockIfNecessaryForFolderOpen:]
  -[SBFolderController _compactFolder]
  -[SBFolderController folderIconView]
  -[SBFolderController updateContentViewOcclusionWithOverriddenHasInnerFolder:]
  -[SBFolderController updateContentViewOcclusion]
  -[SBFolderController _resetFakeStatusBarSettingsIfNecessary]
  -[SBFolderController viewWillTransitionToSize:forOperation:withTransitionCoordinator:]
  -[SBFolderController orientationDidChange:]
  -[SBFolderController _updateAssociatedControllerStateAnimated:]
  -[SBFolderController _updateFolderRequiredTrailingEmptyListCount]
  -[SBFolderController setCurrentPageIndexToListDirectlyContainingIcon:animated:completion:]
  -[SBFolderController _updateStateOfAssociatedController:animated:]
  -[SBFolderController pageViewControllersForLeadingPageIndex:trailingPageIndex:]
  -[SBFolderController viewControllersForPageIndex:]
  -[SBFolderController _updatePresentationModeForIconViews]
  -[SBFolderController isDisplayingIcon:inLocations:]
  -[SBFolderController _updatePresentationModeForIconView:]
  -[SBFolderController iconImageViewControllerPresentationModeForIconView:]
  -[SBFolderController _updateVisiblySettledForIconViews]
  -[SBFolderController isEffectivelyOccludedIfHasInnerFolder:]
  -[SBFolderController isEffectivelyOccluded]
  -[SBFolderController _homescreenAndDockShouldFade]
  -[SBFolderController folderController:iconListView:iconDropSessionDidExit:]
  -[SBFolderController _setHomescreenAndDockAlpha:]
  -[SBFolderController _removeFakeStatusBarAndAssertionIfExists]
  -[SBFolderController _hideStatusBarForReason:animated:]
  -[SBFolderController _resetFakeStatusBarFrameOnly]
  -[SBFolderController _resetFakeStatusBarMatchMoveAnimation]
  -[SBFolderController _unhideStatusBarForReason:]
  -[SBFolderController accessibilityTintColorForScreenRect:]
  -[SBFolderController folderController:iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBFolderController currentPageIndex]
  -[SBFolderController _cancelCloseFolderTimer]
  -[SBFolderController closesAfterDragExits]
  -[SBFolderController _closeFolderTimerFired]
  -[SBFolderController canAcceptFolderIconDrags]
  -[SBFolderController _cancelAllInteractionTimers]
  -[SBFolderController noteIconDrag:didChangeInIconListView:]
  -[SBFolderController _setCloseFolderTimerIfNecessary]
  -[SBFolderController isScrollDragging]
  -[SBFolderController _clearIconAnimator]
  -[SBFolderController _newAnimatorForZoomUp:]
  -[SBFolderController outerFolderController]
  -[SBFolderController _listIndexIsVisible:]
  -[SBFolderController shouldOpenFolderIcon:]
  -[SBFolderController configureInnerFolderControllerConfiguration:]
  -[SBFolderController _cancelTouchesForCustomIconImageViewController:]
  -[SBFolderController _enableTouchesOnAllCustomIconImageViewControllers]
  -[SBFolderController folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFolderController _updateVisiblySettledForIconView:]
  -[SBFolderController _canAnyIconViewBeVisiblySettled]
  -[SBFolderController _updateVisiblySettledForIconView:visiblySettled:]
  -[SBFolderController setCurrentPageIndexToListDirectlyContainingIcon:animated:]
  -[SBFolderController popFolderAnimated:completion:]
  -[SBFolderController _canAcceptIconDropSession:inListView:]
  -[SBFolderController nestingViewController:sourceViewForPresentingViewController:]
  -[SBFolderController _disableTouchesOnAllCustomIconImageViewControllers]
  -[SBFolderController keepIconImageViewControllersStaticInAllPagesExcluding:forReason:]
  -[SBFolderController isScrollTracking]
  -[SBFolderController isDisplayingIconView:]
  -[SBFolderController noteIconDrag:didEnterIconListView:]
  -[SBFolderController noteIconDrag:didExitIconListView:]
  -[SBFolderController disablesScrollingWhileIconDragIsDropping]
  -[SBFolderController noteIconDragDidEnd:]
  -[SBFolderController shouldViewControllersAppearVisibleForListView:]
  -[SBFolderController _isHitTestingDisabledOnCustomIconImageViewControllers]
  -[SBFolderController defaultAccessibilityTintColor]
  -[SBFolderController minimumHomeScreenScaleForFolderControllerBackgroundView:]
  -[SBFolderController iconListViewClassForFolderView:]
  -[SBFolderController iconLocationForFolderView:]
  -[SBFolderController folderViewWillBeginDragging:]
  -[SBFolderController folderView:canChangeCurrentPageIndexToIndex:]
  -[SBFolderController folderView:currentPageIndexWillChange:]
  -[SBFolderController folderView:currentPageIndexDidChange:]
  -[SBFolderController folderViewWillBeginScrolling:]
  -[SBFolderController folderViewWillEndDragging:]
  -[SBFolderController folderViewWillUpdatePageDuringScrolling:]
  -[SBFolderController folderViewDidScroll:]
  -[SBFolderController folderViewDidEndScrolling:]
  -[SBFolderController folderView:willAnimateScrollToPageIndex:]
  -[SBFolderController folderViewShouldClose:withPinchGesture:]
  -[SBFolderController folderViewShouldBeginEditing:]
  -[SBFolderController folderViewShouldEndEditing:]
  -[SBFolderController folderView:iconListView:performIconDrop:]
  -[SBFolderController _invalidate]
  -[SBFolderController folderView:iconListView:canHandleIconDropSession:]
  -[SBFolderController folderView:iconListView:iconDropSessionDidEnter:]
  -[SBFolderController folderView:iconListView:iconDropSessionDidUpdate:]
  -[SBFolderController folderView:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFolderController iconViewDidHandleTap:]
  -[SBFolderController setLegibilitySettings:]
  -[SBFolderController folderView:iconListView:iconDropSessionDidExit:]
  -[SBFolderController folderView:iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBFolderController folderView:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFolderController folderViewDidChangeOrientation:]
  -[SBFolderController iconListViewIndexForIconListModelIndex:]
  -[SBFolderController folderView:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFolderController folderView:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFolderController folderView:iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBFolderController setAnimating:]
  -[SBFolderController folderView:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFolderController folderView:didAddIconListView:]
  -[SBFolderController folderView:didRemoveIconListView:]
  -[SBFolderController minimumHomeScreenScaleForFolderView:]
  -[SBFolderController folderView:accessibilityTintColorForRect:]
  -[SBFolderController contentOverlayInsetsFromParentIfAvailableForFolderView:]
  -[SBFolderController addViewToHierarchyForNestedViewController:]
  -[SBFolderController isScrollDecelerating]
  -[SBFolderController removeViewFromHierarchyForNestedViewController:]
  -[SBFolderController currentScrollingOffset]
  -[SBFolderController beginEditingTitle]
  -[SBFolderController deepestFolderController]
  -[SBFolderController beginOverridingPageViewControllerAppearanceStateToRemainDisappearedForReason:]
  -[SBFolderController suspendsWallpaperAnimationWhileOpen]
  -[SBFolderController _removePageViewControllerAppearStateOverrideAssertion:]
  -[SBFolderController _removeIconImageViewControllerKeepStaticAssertion:]
  -[SBFolderController setScrollingDisabled:forReason:]
  -[SBFolderController _updateHomescreenAndDockFade]
  -[SBFolderController _hideFakeStatusBarForReason:animated:]
  -[SBFolderController _iconAppearsOnCurrentPage:]
  -[SBFolderController pageIndexForIconListViewIndex:]
  -[SBFolderController folderControllerShouldClose:withPinchGesture:]
  -[SBFolderController _unhideFakeStatusBarForReason:animated:]
  -[SBFolderController pushFolderIcon:location:animated:completion:]
  -[SBFolderController restoreExpandedPathIdentifiers:]
  -[SBFolderController prepareToLaunchTappedIcon:completionHandler:]
  -[SBFolderController statusBarInsetsForOrientation:]
  -[SBFolderController setDefaultAccessibilityTintColor:]
  -[SBFolderController folderControllerShouldBeginEditing:withHaptic:]
  -[SBFolderController setActive:]
  -[SBFolderController prepareToTearDown]
  -[SBFolderController isActive]
  -[SBFolderController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBFolderController folderIconImageCache]
  -[SBFolderController folderController:accessibilityTintColorForScreenRect:]
  -[SBFolderController folderController:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFolderController fadeContentForMinificationFraction:]
  -[SBFolderController viewDidAppear:]
  -[SBFolderController setFolderIconImageCache:]
  -[SBFolderController succinctDescription]
  -[SBFolderController animateScrollToDefaultPageWithCompletionHandler:]
  -[SBFolderController statusBarStyleRequestForFolderController:]
  -[SBFolderController iconViewWillPresentContextMenu:]
  -[SBFolderController presentedIconLocations]
  -[SBFolderController folderControllerForFolder:]
  -[SBFolderController unscatterAnimated:afterDelay:withCompletion:]
  -[SBFolderController folderControllerShouldEndEditing:]
  -[SBFolderController isPageControlHidden]
  -[SBFolderController enumerateDisplayedIconViewsUsingBlock:]
  -[SBFolderController setRotating:]
  -[SBFolderController setPageControl:]
  -[SBFolderController setAnimationContext:]
  -[SBFolderController currentIndexPath]
  -[SBFolderController nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBFolderController containerView]
  -[SBFolderController lastIconPageIndex]
  -[SBFolderController _isValidPageIndex:]
  -[SBFolderController returnScalingView]
  -[SBFolderController folderControllerDidEndScrolling:]
  -[SBFolderController configuration]
  -[SBFolderController keyCommands]
  -[SBFolderController statusBarEdgeInsetsForFolderController:]
  -[SBFolderController animationWindow]
  -[SBFolderController folderControllerWillClose:]
  -[SBFolderController folderController:iconListView:performIconDrop:]
  -[SBFolderController setOrientation:]
  -[SBFolderController shouldAnimateFirstTwoViewsAsOne]
  -[SBFolderController folder]
  -[SBFolderController isEditing]
  -[SBFolderController folderControllerWantsToHideStatusBar:animated:]
  -[SBFolderController maximumPageIndex]
  -[SBFolderController listLayoutProvider]
  -[SBFolderController isDisplayingIcon:inLocation:]
  -[SBFolderController fakeStatusBarForFolderController:]
  -[SBFolderController iconModel]
  -[SBFolderController initWithConfiguration:]
  -[SBFolderController defaultPageIndex]
  -[SBFolderController viewWillAppear:]
  -[SBFolderController folderController:canChangeCurrentPageIndexToIndex:]
  -[SBFolderController borrowScalingView]
  -[SBFolderController setCurrentPageIndex:animated:]
  -[SBFolderController minimumPageIndex]
  -[SBFolderController folderControllerWillOpen:]
  -[SBFolderController iconListViewForIconListModelIndex:]
  -[SBFolderController setPageControlAlpha:]
  -[SBFolderController iconListViewCount]
  -[SBFolderController dockListView]
  -[SBFolderController folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFolderController iconLocation]
  -[SBFolderController folderController:willRemoveFakeStatusBar:]
  -[SBFolderController orientation]
  -[SBFolderController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBFolderController viewDidDisappear:]
  -[SBFolderController isDisplayingIcon:]
  -[SBFolderController firstIconViewForIcon:excludingLocations:]
  -[SBFolderController viewWillDisappear:]
  -[SBFolderController iconListViewDidChangeBoundsSize:]
  -[SBFolderController invalidate]
  -[SBFolderController headerView]
  -[SBFolderController controllerClassForFolder:]
  -[SBFolderController setOpen:]
  -[SBFolderController iconListViewAtPoint:]
  -[SBFolderController pageControl]
  -[SBFolderController descriptionWithMultilinePrefix:]
  -[SBFolderController iconListViewForTouch:]
  -[SBFolderController setFolder:]
  -[SBFolderController folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFolderController isRotating]
  -[SBFolderController setEditing:animated:]
  -[SBFolderController extraViewsContainers]
  -[SBFolderController _invalidateAllCancelTouchesAssertions]
  -[SBFolderController iconViewProvider]
  -[SBFolderController setCurrentPageIndex:]
  -[SBFolderController extraViews]
  -[SBFolderController setStatusBarAssertion:]
  -[SBFolderController _allowUserInteraction]
  -[SBFolderController loadView]
  -[SBFolderController isScrolling]
  -[SBFolderController currentIconListView]
  -[SBFolderController setConfiguration:]
  -[SBFolderController descriptionBuilderWithMultilinePrefix:]
  -[SBFolderController folderController:iconListView:iconDropSessionDidEnter:]
  -[SBFolderController setOccluded:]
  -[SBFolderController isOccluded]
  -[SBFolderController isPresentingIconLocation:]
  -[SBFolderController fadeContentForMagnificationFraction:]
  -[SBFolderController statusBarAssertion]


_SBFolderControllerPageViewControllerAppearStateOverrideAssertion : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable, BSDescriptionProviding>
 @property  SBFolderController *folderController
 @property  BOOL invalidated
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion dealloc]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion .cxx_destruct]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion succinctDescriptionBuilder]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion succinctDescription]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion folderController]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion isInvalidated]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion initWithFolderController:reason:]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion setInvalidated:]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion invalidate]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion reason]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion descriptionWithMultilinePrefix:]
  -[_SBFolderControllerPageViewControllerAppearStateOverrideAssertion descriptionBuilderWithMultilinePrefix:]


_SBFolderControllerIconImageViewControllerKeepStaticAssertion : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable, BSDescriptionProviding>
 @property  SBFolderController *folderController
 @property  BOOL invalidated
 @property  NSIndexSet *pageIndexesToExclude
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion dealloc]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion .cxx_destruct]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion succinctDescriptionBuilder]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion initWithFolderController:pageIndexesToExclude:reason:]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion pageIndexesToExclude]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion succinctDescription]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion folderController]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion isInvalidated]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion setInvalidated:]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion invalidate]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion reason]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion descriptionWithMultilinePrefix:]
  -[_SBFolderControllerIconImageViewControllerKeepStaticAssertion descriptionBuilderWithMultilinePrefix:]


SBHBatteriesElement : SBHCustomIconElement
  // class methods
  +[SBHBatteriesElement elementIdentifier]

  // instance methods
  -[SBHBatteriesElement iconAllowsLaunch:]
  -[SBHBatteriesElement supportedGridSizeClassesForIcon:]
  -[SBHBatteriesElement iconSupportsRasterization:]
  -[SBHBatteriesElement icon:unmaskedImageWithInfo:]
  -[SBHBatteriesElement displayName]


SBFloatyFolderControllerConfiguration : SBFolderControllerConfiguration
 @property  unsigned long backgroundEffect
 @property  BOOL displaysMultipleIconListsInLandscapeOrientation

  // instance methods
  -[SBFloatyFolderControllerConfiguration setDisplaysMultipleIconListsInLandscapeOrientation:]
  -[SBFloatyFolderControllerConfiguration backgroundEffect]
  -[SBFloatyFolderControllerConfiguration initWithConfiguration:]
  -[SBFloatyFolderControllerConfiguration setBackgroundEffect:]
  -[SBFloatyFolderControllerConfiguration displaysMultipleIconListsInLandscapeOrientation]
  -[SBFloatyFolderControllerConfiguration descriptionBuilderWithMultilinePrefix:]


SBLiveIconImageView : SBIconImageView
  // instance methods
  -[SBLiveIconImageView setIcon:location:animated:]
  -[SBLiveIconImageView updateImageAnimated:]
  -[SBLiveIconImageView prepareForReuse]
  -[SBLiveIconImageView updateUnanimated]
  -[SBLiveIconImageView snapshot]
  -[SBLiveIconImageView setPaused:]
  -[SBLiveIconImageView updateAnimatingState]
  -[SBLiveIconImageView isAnimationAllowed]


SBHStackConfigurationViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <UITableViewDataSource, UITableViewDelegate, SBHIconViewConfigurationInteractionDelegate, SBHWidgetSheetViewControlling>
 @property  SBHStackConfiguration *configuration
 @property  SBIconView *iconView
 @property  SBHWidgetConfigurationInteraction *widgetConfigurationInteraction
 @property  CHSAvocadoDescriptorProvider *descriptorProvider
 @property  <SBHStackConfigurationViewControllerAppearanceDelegate> *appearanceDelegate
 @property  <SBHStackConfigurationViewControllerDelegate> *delegate
 @property  <SBHWidgetSheetViewControllerPresenter> *presenter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHStackConfigurationViewController sourceIconViewForConfigurationInteraction:]
  -[SBHStackConfigurationViewController setIconView:]
  -[SBHStackConfigurationViewController setPresenter:]
  -[SBHStackConfigurationViewController containerViewControllerForConfigurationInteraction:]
  -[SBHStackConfigurationViewController tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:]
  -[SBHStackConfigurationViewController iconView]
  -[SBHStackConfigurationViewController configurationInteractionDidCommit:]
  -[SBHStackConfigurationViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[SBHStackConfigurationViewController configurationInteractionDidEnd:]
  -[SBHStackConfigurationViewController tableView:numberOfRowsInSection:]
  -[SBHStackConfigurationViewController _setupTableView]
  -[SBHStackConfigurationViewController tableView:canEditRowAtIndexPath:]
  -[SBHStackConfigurationViewController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[SBHStackConfigurationViewController .cxx_destruct]
  -[SBHStackConfigurationViewController setAppearanceDelegate:]
  -[SBHStackConfigurationViewController appearanceDelegate]
  -[SBHStackConfigurationViewController tableView:cellForRowAtIndexPath:]
  -[SBHStackConfigurationViewController presenter]
  -[SBHStackConfigurationViewController numberOfSectionsInTableView:]
  -[SBHStackConfigurationViewController _setupCloseButton]
  -[SBHStackConfigurationViewController widgetConfigurationInteraction]
  -[SBHStackConfigurationViewController setWidgetConfigurationInteraction:]
  -[SBHStackConfigurationViewController didToggleSmartRotation:]
  -[SBHStackConfigurationViewController descriptorProvider]
  -[SBHStackConfigurationViewController _saveConfiguration]
  -[SBHStackConfigurationViewController tableView:moveRowAtIndexPath:toIndexPath:]
  -[SBHStackConfigurationViewController tableView:editingStyleForRowAtIndexPath:]
  -[SBHStackConfigurationViewController _presentConfigurationForDataSource:]
  -[SBHStackConfigurationViewController setDescriptorProvider:]
  -[SBHStackConfigurationViewController initWithConfiguration:iconView:descriptorProvider:]
  -[SBHStackConfigurationViewController sourceViewForConfigurationInteraction:]
  -[SBHStackConfigurationViewController viewDidAppear:]
  -[SBHStackConfigurationViewController configuration]
  -[SBHStackConfigurationViewController viewWillAppear:]
  -[SBHStackConfigurationViewController closeButtonTapped:]
  -[SBHStackConfigurationViewController setDelegate:]
  -[SBHStackConfigurationViewController viewDidDisappear:]
  -[SBHStackConfigurationViewController viewWillDisappear:]
  -[SBHStackConfigurationViewController viewDidLayoutSubviews]
  -[SBHStackConfigurationViewController tableView:canMoveRowAtIndexPath:]
  -[SBHStackConfigurationViewController delegate]
  -[SBHStackConfigurationViewController loadView]
  -[SBHStackConfigurationViewController setConfiguration:]


SBNestingViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBNestingViewControllerDelegate, SBViewControllerTransitionContextDelegate>
 @property  BOOL isTransitioning
 @property  long long currentTransitionOperation
 @property  SBViewControllerTransitionContext *currentTransition
 @property  @? clientOperationCompletion
 @property  SBNestingViewController *viewControllerCurrentlyDrivingTransition
 @property  NSHashTable *transitionObservers
 @property  SBNestingViewController *nestedViewController
 @property  SBNestingViewController *parentNestingViewController
 @property  BOOL wantsModalPresentation
 @property  <SBNestingViewControllerDelegate> *delegate
 @property  NSArray *nestedViewControllers
 @property  SBNestingViewController *deepestNestedDescendantViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBNestingViewController isTransitioning]
  -[SBNestingViewController transitionDidFinish:]
  -[SBNestingViewController shouldAutomaticallyForwardAppearanceMethods]
  -[SBNestingViewController sizeForChildContentContainer:withParentContainerSize:]
  -[SBNestingViewController .cxx_destruct]
  -[SBNestingViewController transitionDidBegin:]
  -[SBNestingViewController transitionWillReverse:]
  -[SBNestingViewController transitionDidReverse:]
  -[SBNestingViewController transitionWillFinish:]
  -[SBNestingViewController nestingViewController:animationControllerForOperation:onViewController:animated:]
  -[SBNestingViewController viewWillTransitionToSize:forOperation:withTransitionCoordinator:]
  -[SBNestingViewController nestedViewController]
  -[SBNestingViewController parentNestingViewController]
  -[SBNestingViewController setCurrentTransition:]
  -[SBNestingViewController pushNestedViewController:animated:withCompletion:]
  -[SBNestingViewController popNestedViewControllerAnimated:withCompletion:]
  -[SBNestingViewController setNestedViewControllers:withCompletion:]
  -[SBNestingViewController nestingViewController:sourceViewForPresentingViewController:]
  -[SBNestingViewController nestingViewController:interactionControllerForAnimationController:]
  -[SBNestingViewController addViewToHierarchyForNestedViewController:]
  -[SBNestingViewController removeViewFromHierarchyForNestedViewController:]
  -[SBNestingViewController deepestNestedDescendantViewController]
  -[SBNestingViewController _performOperation:onViewController:animated:withCompletion:]
  -[SBNestingViewController nestedViewControllers]
  -[SBNestingViewController traverseNestedViewControllersWithBlock:]
  -[SBNestingViewController transitionObservers]
  -[SBNestingViewController currentTransitionOperation]
  -[SBNestingViewController viewControllerCurrentlyDrivingTransition]
  -[SBNestingViewController _handleWillAddChildViewController:]
  -[SBNestingViewController setParentNestingViewController:]
  -[SBNestingViewController _handleRemoveChildViewController:]
  -[SBNestingViewController frameForNestedViewController:afterOperation:withParentContainerSize:]
  -[SBNestingViewController setNestedViewController:]
  -[SBNestingViewController setCurrentTransitionOperation:]
  -[SBNestingViewController _updateStateForTransitioningViewController:]
  -[SBNestingViewController _setFinalStateForTransitioningViewController:]
  -[SBNestingViewController clientOperationCompletion]
  -[SBNestingViewController setClientOperationCompletion:]
  -[SBNestingViewController wantsModalPresentation]
  -[SBNestingViewController nestingViewController:willPresentViewController:]
  -[SBNestingViewController _descriptionForOperation:]
  -[SBNestingViewController _shouldAddTransitioningViewControllerAfterCurrentTransitionCompletes]
  -[SBNestingViewController _handleWillRemoveChildViewController:]
  -[SBNestingViewController _handleAddChildViewController:]
  -[SBNestingViewController addTransitionObserver:]
  -[SBNestingViewController removeTransitionObserver:]
  -[SBNestingViewController addNestedViewController:]
  -[SBNestingViewController removeNestedViewController:]
  -[SBNestingViewController setTransitionObservers:]
  -[SBNestingViewController initWithNibName:bundle:]
  -[SBNestingViewController viewDidAppear:]
  -[SBNestingViewController transitionCoordinator]
  -[SBNestingViewController dismissViewControllerAnimated:completion:]
  -[SBNestingViewController currentTransition]
  -[SBNestingViewController nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBNestingViewController viewWillAppear:]
  -[SBNestingViewController transitionWillBegin:]
  -[SBNestingViewController setDelegate:]
  -[SBNestingViewController viewDidDisappear:]
  -[SBNestingViewController viewWillDisappear:]
  -[SBNestingViewController delegate]


SBHLibraryCategoryMap : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSArray *categoryIdentifiers
 @property  NSDictionary *sortedApplicationIdentifiersByCategoryIdentifier
 @property  NSDictionary *localizedCategoryNameByCategoryIdentifier
 @property  NSDate *generatedDate
 @property  NSString *uniqueIdentifier
 @property  BOOL loadedFromDisk
 @property  NSDictionary *dictionaryRepresentation
 @property  NSDictionary *metadata

  // class methods
  +[SBHLibraryCategoryMap supportsSecureCoding]
  +[SBHLibraryCategoryMap diffMap:withMap:]

  // instance methods
  -[SBHLibraryCategoryMap setUniqueIdentifier:]
  -[SBHLibraryCategoryMap copyWithZone:]
  -[SBHLibraryCategoryMap setMetadata:]
  -[SBHLibraryCategoryMap init]
  -[SBHLibraryCategoryMap .cxx_destruct]
  -[SBHLibraryCategoryMap encodeWithCoder:]
  -[SBHLibraryCategoryMap uniqueIdentifier]
  -[SBHLibraryCategoryMap setGeneratedDate:]
  -[SBHLibraryCategoryMap generatedDate]
  -[SBHLibraryCategoryMap isEqualToCategoryMap:]
  -[SBHLibraryCategoryMap sortedApplicationIdentifiersForCategoryIdentifier:]
  -[SBHLibraryCategoryMap setCategoryIdentifiers:]
  -[SBHLibraryCategoryMap sortedApplicationIdentifiersByCategoryIdentifier]
  -[SBHLibraryCategoryMap setSortedApplicationIdentifiersByCategoryIdentifier:]
  -[SBHLibraryCategoryMap localizedCategoryNameByCategoryIdentifier]
  -[SBHLibraryCategoryMap setLocalizedCategoryNameByCategoryIdentifier:]
  -[SBHLibraryCategoryMap localizedCategoryNameForCategoryIdentifier:]
  -[SBHLibraryCategoryMap categoriesContainApplicationIdentifier:]
  -[SBHLibraryCategoryMap categoryIdentifiersForApplicationIdentifier:]
  -[SBHLibraryCategoryMap categoryIdentifierForProactiveCategoryIdentifier:]
  -[SBHLibraryCategoryMap categoryIdentifiers]
  -[SBHLibraryCategoryMap isEqual:]
  -[SBHLibraryCategoryMap dictionaryRepresentation]
  -[SBHLibraryCategoryMap metadata]
  -[SBHLibraryCategoryMap setLoadedFromDisk:]
  -[SBHLibraryCategoryMap mutableCopyWithZone:]
  -[SBHLibraryCategoryMap loadedFromDisk]
  -[SBHLibraryCategoryMap initWithCoder:]


SBHLibraryMutableCategoryMap : SBHLibraryCategoryMap
 @property  NSArray *categoryIdentifiers
 @property  NSDictionary *metadata

  // instance methods
  -[SBHLibraryMutableCategoryMap removeCategoryIdentifier:]
  -[SBHLibraryMutableCategoryMap addCategoryIdentifier:]
  -[SBHLibraryMutableCategoryMap setSortedApplicationIdentifiers:forCategoryIdentifier:]
  -[SBHLibraryMutableCategoryMap setLocalizedCategoryName:forCategoryIdentifier:]
  -[SBHLibraryMutableCategoryMap sortApplicationIdentifiersForCategoryIdentifier:descriptors:]
  -[SBHLibraryMutableCategoryMap addApplicationIdentifier:forCategoryIdentifier:]
  -[SBHLibraryMutableCategoryMap updateRecentlyAddedCategoryFromMap:]


SBHAppLibraryVisualConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  double searchContinuousCornerRadius
 @property  {UIEdgeInsets=dddd} appSearchTextFieldLayoutInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHAppLibraryVisualConfiguration copyWithZone:]
  -[SBHAppLibraryVisualConfiguration init]
  -[SBHAppLibraryVisualConfiguration succinctDescriptionBuilder]
  -[SBHAppLibraryVisualConfiguration appSearchTextFieldLayoutInsets]
  -[SBHAppLibraryVisualConfiguration searchContinuousCornerRadius]
  -[SBHAppLibraryVisualConfiguration setAppSearchTextFieldLayoutInsets:]
  -[SBHAppLibraryVisualConfiguration setSearchContinuousCornerRadius:]
  -[SBHAppLibraryVisualConfiguration succinctDescription]
  -[SBHAppLibraryVisualConfiguration isEqual:]
  -[SBHAppLibraryVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHAppLibraryVisualConfiguration descriptionBuilderWithMultilinePrefix:]


SBIconListViewLayoutMetrics : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  unsigned long columns
 @property  unsigned long rows
 @property  unsigned long columnsUsedForLayout
 @property  long long columnOffset
 @property  {CGSize=dd} iconSpacing
 @property  {CGSize=dd} iconSize
 @property  {CGSize=dd} alignmentIconSize
 @property  {CGSize=dd} iconImageSize
 @property  double iconContentScale
 @property  {UIEdgeInsets=dddd} iconInsets
 @property  SBIconListGridCellInfo *gridCellInfo
 @property  BOOL adjustedInsetsToFit
 @property  BOOL adjustedIconContentScaleToFit
 @property  BOOL needsHorizontalColumnBumps
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewLayoutMetrics rows]
  -[SBIconListViewLayoutMetrics columns]
  -[SBIconListViewLayoutMetrics iconSize]
  -[SBIconListViewLayoutMetrics copyWithZone:]
  -[SBIconListViewLayoutMetrics iconImageSize]
  -[SBIconListViewLayoutMetrics iconContentScale]
  -[SBIconListViewLayoutMetrics setIconContentScale:]
  -[SBIconListViewLayoutMetrics .cxx_destruct]
  -[SBIconListViewLayoutMetrics setRows:]
  -[SBIconListViewLayoutMetrics setColumns:]
  -[SBIconListViewLayoutMetrics succinctDescriptionBuilder]
  -[SBIconListViewLayoutMetrics iconInsets]
  -[SBIconListViewLayoutMetrics alignmentIconSize]
  -[SBIconListViewLayoutMetrics setColumnOffset:]
  -[SBIconListViewLayoutMetrics columnsUsedForLayout]
  -[SBIconListViewLayoutMetrics setColumnsUsedForLayout:]
  -[SBIconListViewLayoutMetrics setAlignmentIconSize:]
  -[SBIconListViewLayoutMetrics setIconImageSize:]
  -[SBIconListViewLayoutMetrics setIconInsets:]
  -[SBIconListViewLayoutMetrics setGridCellInfo:]
  -[SBIconListViewLayoutMetrics adjustedInsetsToFit]
  -[SBIconListViewLayoutMetrics setAdjustedInsetsToFit:]
  -[SBIconListViewLayoutMetrics adjustedIconContentScaleToFit]
  -[SBIconListViewLayoutMetrics setAdjustedIconContentScaleToFit:]
  -[SBIconListViewLayoutMetrics needsHorizontalColumnBumps]
  -[SBIconListViewLayoutMetrics setNeedsHorizontalColumnBumps:]
  -[SBIconListViewLayoutMetrics columnOffset]
  -[SBIconListViewLayoutMetrics succinctDescription]
  -[SBIconListViewLayoutMetrics iconSpacing]
  -[SBIconListViewLayoutMetrics setIconSpacing:]
  -[SBIconListViewLayoutMetrics gridCellInfo]
  -[SBIconListViewLayoutMetrics setIconSize:]
  -[SBIconListViewLayoutMetrics descriptionWithMultilinePrefix:]
  -[SBIconListViewLayoutMetrics descriptionBuilderWithMultilinePrefix:]


SBHLibraryCategoryMapProviderDefaultSource : NSObject /usr/lib/libSystem.B.dylib <SBHLibraryCategoryMapProviderSource>
 @property  <SBHLibraryCategoryMapProviderSourceDelegate> *delegate
 @property  NSString *sourceName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibraryCategoryMapProviderDefaultSource sourceName]
  -[SBHLibraryCategoryMapProviderDefaultSource .cxx_destruct]
  -[SBHLibraryCategoryMapProviderDefaultSource _requestRefresh:]
  -[SBHLibraryCategoryMapProviderDefaultSource requestLibraryCategoryMapWithOptions:existingLibraryCategoryMap:forbiddenApplicationIdentifiers:sessionId:queue:completion:]
  -[SBHLibraryCategoryMapProviderDefaultSource initWithIconModel:]
  -[SBHLibraryCategoryMapProviderDefaultSource setDelegate:]
  -[SBHLibraryCategoryMapProviderDefaultSource delegate]


SBHWidgetSearchController : UISearchController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UIView *searchBarBackgroundView
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  UIView *searchBarTextFieldBackgroundView

  // instance methods
  -[SBHWidgetSearchController .cxx_destruct]
  -[SBHWidgetSearchController supportedInterfaceOrientations]
  -[SBHWidgetSearchController _setupSearchBar]
  -[SBHWidgetSearchController _setupTextField]
  -[SBHWidgetSearchController _setupTextFieldBackground]
  -[SBHWidgetSearchController _setupBarBackground]
  -[SBHWidgetSearchController initWithListLayoutProvider:]
  -[SBHWidgetSearchController updateSearchBarBackgroundForScrollDistance:]
  -[SBHWidgetSearchController searchBarTextFieldBackgroundView]
  -[SBHWidgetSearchController searchBarBackgroundView]
  -[SBHWidgetSearchController setSearchBarBackgroundView:]
  -[SBHWidgetSearchController listLayoutProvider]


SBHWidgetSearchBarBackgroundView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
  // instance methods
  -[SBHWidgetSearchBarBackgroundView initWithFrame:]


SBHWidgetMetricsProvider : NSObject /usr/lib/libSystem.B.dylib <SBSWidgetMetricsProviding>
 @property  <SBHWidgetMetricsProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHWidgetMetricsProvider .cxx_destruct]
  -[SBHWidgetMetricsProvider systemDefaultMetricsSpecification]
  -[SBHWidgetMetricsProvider setDelegate:]
  -[SBHWidgetMetricsProvider delegate]
  -[SBHWidgetMetricsProvider systemMetricsForWidget:]
  -[SBHWidgetMetricsProvider previewMetricsSpecificationForBundleIdentifier:]
  -[SBHWidgetMetricsProvider previewMetricsSpecificationForDeviceContext:displayContext:bundleIdentifier:]


SBHintInteractor : NSObject /usr/lib/libSystem.B.dylib <UIInteractionProgressObserver, SBViewControllerInteractiveTransitioning>
 @property  UIInteractionProgress *interactionProgress
 @property  double maxHintProgress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double completionSpeed
 @property  long long completionCurve
 @property  BOOL wantsInteractiveStart

  // instance methods
  -[SBHintInteractor supportsRestarting]
  -[SBHintInteractor cancelTransition]
  -[SBHintInteractor updateTransition:]
  -[SBHintInteractor .cxx_destruct]
  -[SBHintInteractor interactionProgress]
  -[SBHintInteractor maxHintProgress]
  -[SBHintInteractor _updateInteractionPercentComplete:]
  -[SBHintInteractor initWithInteractionProgress:maxHintProgress:]
  -[SBHintInteractor startInteractiveTransition:]
  -[SBHintInteractor interactionProgress:didEnd:]
  -[SBHintInteractor finishInteractiveTransition]
  -[SBHintInteractor interactionProgressDidUpdate:]


SBHAddWidgetSheetAppCollectionViewCellConfigurator : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *imageCache

  // instance methods
  -[SBHAddWidgetSheetAppCollectionViewCellConfigurator configureCell:withApplicationWidgetCollection:iconImageInfo:]
  -[SBHAddWidgetSheetAppCollectionViewCellConfigurator setImageCache:]
  -[SBHAddWidgetSheetAppCollectionViewCellConfigurator .cxx_destruct]
  -[SBHAddWidgetSheetAppCollectionViewCellConfigurator imageCache]
  -[SBHAddWidgetSheetAppCollectionViewCellConfigurator _applicationCellTitleForApplicationWidgetCollection:]
  -[SBHAddWidgetSheetAppCollectionViewCellConfigurator _applicationCellIconImageForApplicationWidgetCollection:withIconImageInfo:]
  -[SBHAddWidgetSheetAppCollectionViewCellConfigurator _cacheKeyForApplicationWidgetCollection:iconImageInfo:]
  -[SBHAddWidgetSheetAppCollectionViewCellConfigurator _newIconImageForApplicationWidgetCollection:withIconImageInfo:]


SBHMappedIconListLayoutProvider : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayoutProvider>
 @property  <SBIconListLayoutProvider> *targetListLayoutProvider

  // instance methods
  -[SBHMappedIconListLayoutProvider .cxx_destruct]
  -[SBHMappedIconListLayoutProvider targetListLayoutProvider]
  -[SBHMappedIconListLayoutProvider initWithTargetListLayoutProvider:]
  -[SBHMappedIconListLayoutProvider mapIconLocation:toIconLocation:]
  -[SBHMappedIconListLayoutProvider layoutForIconLocation:]


SBHIconTableViewHeaderFooterView : UITableViewHeaderFooterView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  <SBIconListLayoutProvider> *listLayoutProvider

  // instance methods
  -[SBHIconTableViewHeaderFooterView setIconImageInfo:]
  -[SBHIconTableViewHeaderFooterView setListLayoutProvider:]
  -[SBHIconTableViewHeaderFooterView _updateFont]
  -[SBHIconTableViewHeaderFooterView iconImageInfo]
  -[SBHIconTableViewHeaderFooterView .cxx_destruct]
  -[SBHIconTableViewHeaderFooterView prepareForReuse]
  -[SBHIconTableViewHeaderFooterView initWithReuseIdentifier:]
  -[SBHIconTableViewHeaderFooterView traitCollectionDidChange:]
  -[SBHIconTableViewHeaderFooterView listLayoutProvider]
  -[SBHIconTableViewHeaderFooterView layoutSubviews]


SBHSearchBar : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <UITextFieldDelegate>
 @property  {UIEdgeInsets=dddd} searchTextFieldHorizontalEdgeInsets
 @property  double searchTextFieldBottomEdgeInset
 @property  SBHFeatherBlurView *backgroundView
 @property  SBHSearchTextField *searchTextField
 @property  <SBHSearchBarDelegate> *delegate
 @property  NSString *text
 @property  UIButton *cancelButton
 @property  BOOL showsCancelButton
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHSearchBar canResignFirstResponder]
  -[SBHSearchBar becomeFirstResponder]
  -[SBHSearchBar cancelButton]
  -[SBHSearchBar resignFirstResponder]
  -[SBHSearchBar setListLayoutProvider:]
  -[SBHSearchBar backgroundView]
  -[SBHSearchBar setShowsCancelButton:animated:]
  -[SBHSearchBar initWithFrame:]
  -[SBHSearchBar isFirstResponder]
  -[SBHSearchBar text]
  -[SBHSearchBar .cxx_destruct]
  -[SBHSearchBar canBecomeFirstResponder]
  -[SBHSearchBar intrinsicContentSize]
  -[SBHSearchBar setShowsCancelButton:]
  -[SBHSearchBar showsCancelButton]
  -[SBHSearchBar textFieldShouldBeginEditing:]
  -[SBHSearchBar textFieldShouldEndEditing:]
  -[SBHSearchBar traitCollectionDidChange:]
  -[SBHSearchBar textField:shouldChangeCharactersInRange:replacementString:]
  -[SBHSearchBar _cancelButtonWasHit:]
  -[SBHSearchBar _accessibilityBoldStatusDidChange:]
  -[SBHSearchBar _updateCancelButtonFont]
  -[SBHSearchBar _searchBarTextFieldDidChangeText:]
  -[SBHSearchBar setSearchTextFieldHorizontalEdgeInsets:]
  -[SBHSearchBar _performHeightCalculation]
  -[SBHSearchBar setSearchTextField:]
  -[SBHSearchBar searchTextFieldHorizontalEdgeInsets]
  -[SBHSearchBar searchTextFieldBottomEdgeInset]
  -[SBHSearchBar setSearchTextFieldBottomEdgeInset:]
  -[SBHSearchBar sizeThatFits:]
  -[SBHSearchBar textFieldDidBeginEditing:]
  -[SBHSearchBar textFieldShouldReturn:]
  -[SBHSearchBar listLayoutProvider]
  -[SBHSearchBar searchTextField]
  -[SBHSearchBar setDelegate:]
  -[SBHSearchBar delegate]
  -[SBHSearchBar layoutSubviews]
  -[SBHSearchBar textFieldDidEndEditing:]


SBHLibraryPodFolderView : SBFolderView <SBIconListModelObserver, SBIconListLayoutObserver, UINavigationBarDelegate, SBHLibrarySearchControllerContentViewControllerScrollViewProvider>
 @property  BSUIScrollView *podScrollView
 @property  UINavigationBar *navigationBar
 @property  BOOL centersContentIfPossible
 @property  <UIScrollViewDelegate> *scrollViewDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <BSUIScrollViewDelegate> *librarySearchControllerScrollViewDelegate

  // class methods
  +[SBHLibraryPodFolderView defaultIconListViewClass]
  +[SBHLibraryPodFolderView defaultIconLocation]

  // instance methods
  -[SBHLibraryPodFolderView iconVisibilityHandling]
  -[SBHLibraryPodFolderView didMoveToWindow]
  -[SBHLibraryPodFolderView setLibrarySearchControllerScrollViewDelegate:]
  -[SBHLibraryPodFolderView setCentersContentIfPossible:]
  -[SBHLibraryPodFolderView positionForBar:]
  -[SBHLibraryPodFolderView _shouldManageScrolledHiddenClippedIconView]
  -[SBHLibraryPodFolderView _iconListViewSize]
  -[SBHLibraryPodFolderView iconListView:didRemoveIconView:]
  -[SBHLibraryPodFolderView _zeroFirstListViewOriginIfNeeded]
  -[SBHLibraryPodFolderView iconListView:didAddIconView:]
  -[SBHLibraryPodFolderView scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBHLibraryPodFolderView updateAccessibilityTintColors]
  -[SBHLibraryPodFolderView .cxx_destruct]
  -[SBHLibraryPodFolderView _positionNavBarAbuttingListView]
  -[SBHLibraryPodFolderView setScrollViewDelegate:]
  -[SBHLibraryPodFolderView _scrollViewContentSize]
  -[SBHLibraryPodFolderView _configureIconListView:]
  -[SBHLibraryPodFolderView scrollViewDelegate]
  -[SBHLibraryPodFolderView _updateIconListContainment:atIndex:]
  -[SBHLibraryPodFolderView setLegibilitySettings:]
  -[SBHLibraryPodFolderView scrollViewDidEndScrolling:]
  -[SBHLibraryPodFolderView _findHiddenIconView]
  -[SBHLibraryPodFolderView navigationBar]
  -[SBHLibraryPodFolderView scrollViewWillBeginDragging:]
  -[SBHLibraryPodFolderView _layoutSubviews]
  -[SBHLibraryPodFolderView _updateScrollViewContentSize]
  -[SBHLibraryPodFolderView _restingContentOffsetForScrollOffset:withVelocity:]
  -[SBHLibraryPodFolderView _layoutNavBarAndContentInsets]
  -[SBHLibraryPodFolderView scrollViewDidScroll:]
  -[SBHLibraryPodFolderView initWithConfiguration:]
  -[SBHLibraryPodFolderView librarySearchControllerScrollViewDelegate]
  -[SBHLibraryPodFolderView _iconListFrameForPageRect:atIndex:]
  -[SBHLibraryPodFolderView centersContentIfPossible]
  -[SBHLibraryPodFolderView iconList:didAddIcon:]
  -[SBHLibraryPodFolderView _pageWidth]
  -[SBHLibraryPodFolderView iconListViewDidChangeBoundsSize:]
  -[SBHLibraryPodFolderView accessibilityReduceTransparencyDidChange:]
  -[SBHLibraryPodFolderView iconList:didRemoveIcon:]
  -[SBHLibraryPodFolderView podScrollView]
  -[SBHLibraryPodFolderView _frameForIconListAtIndex:]
  -[SBHLibraryPodFolderView setFolder:]
  -[SBHLibraryPodFolderView _layoutMarginsforNavigationBar:]
  -[SBHLibraryPodFolderView _updateVisibleRowRange]
  -[SBHLibraryPodFolderView iconList:didMoveIcon:]


SBHLibraryPodCategoryFolderView : SBHLibraryPodFolderView
  // class methods
  +[SBHLibraryPodCategoryFolderView defaultIconListViewClass]


_SBHLibraryPodIconListView : SBIconListView
  // instance methods
  -[_SBHLibraryPodIconListView baseIconViewClass]


_SBHLibraryPodIconView : SBIconView
  // class methods
  +[_SBHLibraryPodIconView supportsTapGesture]


_SBHLibraryPodCategoryIconListView : _SBHLibraryPodIconListView
  // instance methods
  -[_SBHLibraryPodCategoryIconListView baseIconViewClass]


SBIconListPageControl : UIPageControl /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <UIGestureRecognizerDelegate>
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  <SBIconListPageControlDelegate> *delegate
 @property  double defaultHeight
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *touchIgnoreRects
 @property  BOOL actsAsButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListPageControl touchIgnoreRects]
  -[SBIconListPageControl pageControlCurrentPageDidChange:]
  -[SBIconListPageControl tapGestureRecognizer]
  -[SBIconListPageControl _shouldAnimatePropertyWithKey:]
  -[SBIconListPageControl touchesBegan:withEvent:]
  -[SBIconListPageControl legibilitySettings]
  -[SBIconListPageControl initWithFrame:]
  -[SBIconListPageControl defaultHeight]
  -[SBIconListPageControl legibilitySettingsDidChange]
  -[SBIconListPageControl .cxx_destruct]
  -[SBIconListPageControl hitTest:withEvent:]
  -[SBIconListPageControl gestureRecognizerShouldBegin:]
  -[SBIconListPageControl setButtonHighlighted:]
  -[SBIconListPageControl setActsAsButton:]
  -[SBIconListPageControl setLegibilitySettings:]
  -[SBIconListPageControl touchesCancelled:withEvent:]
  -[SBIconListPageControl effectiveLegibilitySettings]
  -[SBIconListPageControl setDelegate:]
  -[SBIconListPageControl actsAsButton]
  -[SBIconListPageControl touchesEnded:withEvent:]
  -[SBIconListPageControl delegate]
  -[SBIconListPageControl setTouchIgnoreRects:]
  -[SBIconListPageControl tapGestureDidUpdate:]


SBHSetDiff : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSSet *additions
 @property  NSSet *deletions
 @property  NSSet *updates
 @property  NSSet *fromSet
 @property  NSSet *toSet

  // class methods
  +[SBHSetDiff diffFromSet:toSet:]

  // instance methods
  -[SBHSetDiff copyWithZone:]
  -[SBHSetDiff toSet]
  -[SBHSetDiff fromSet]
  -[SBHSetDiff .cxx_destruct]
  -[SBHSetDiff additions]
  -[SBHSetDiff deletions]
  -[SBHSetDiff _initWithFromSet:toSet:additions:deletions:updates:]
  -[SBHSetDiff isEqual:]
  -[SBHSetDiff updates]


SBHDefaultIconListLayoutProvider : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayoutProvider, BSDescriptionProviding>
 @property  unsigned long screenType
 @property  unsigned long layoutOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHDefaultIconListLayoutProvider currentDeviceScreenType]
  +[SBHDefaultIconListLayoutProvider frameworkFallbackInstance]

  // instance methods
  -[SBHDefaultIconListLayoutProvider layoutOptions]
  -[SBHDefaultIconListLayoutProvider screenType]
  -[SBHDefaultIconListLayoutProvider init]
  -[SBHDefaultIconListLayoutProvider configureLabelConfigurations:forScreenType:]
  -[SBHDefaultIconListLayoutProvider initWithScreenType:]
  -[SBHDefaultIconListLayoutProvider configureRootFolderConfiguration:forScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider configureGridSizeClassSizes:forScreenType:numberOfColumns:]
  -[SBHDefaultIconListLayoutProvider .cxx_destruct]
  -[SBHDefaultIconListLayoutProvider homeScreenSearchOverlayInsetsForScreenType:layoutOptions:forAppLibrary:]
  -[SBHDefaultIconListLayoutProvider initWithScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider succinctDescriptionBuilder]
  -[SBHDefaultIconListLayoutProvider configureFloatyFolderConfiguration:forScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider succinctDescription]
  -[SBHDefaultIconListLayoutProvider initWithLayoutOptions:]
  -[SBHDefaultIconListLayoutProvider configureSidebarConfiguration:forScreenType:layoutOptions:getBottomSearchOffset:]
  -[SBHDefaultIconListLayoutProvider configureFolderIconConfiguration:forScreenType:numberOfRows:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider configureSupportedIconGridSizeClasses:forScreenType:iconLocation:]
  -[SBHDefaultIconListLayoutProvider configureAppLibraryConfiguration:forScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider layoutForIconLocation:]
  -[SBHDefaultIconListLayoutProvider configureIconAccessoryConfiguration:forScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider descriptionWithMultilinePrefix:]
  -[SBHDefaultIconListLayoutProvider makeLayoutForIconLocation:]
  -[SBHDefaultIconListLayoutProvider descriptionBuilderWithMultilinePrefix:]


SBHFilesElement : SBHCustomIconElement
  // class methods
  +[SBHFilesElement elementIdentifier]

  // instance methods
  -[SBHFilesElement icon:imageWithInfo:]
  -[SBHFilesElement supportedGridSizeClassesForIcon:]
  -[SBHFilesElement containerBundleIdentifier]
  -[SBHFilesElement displayName]


SBSearchBackdropView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBHProgressiveBlur>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBSearchBackdropView _recipeForStyle:]

  // instance methods
  -[SBSearchBackdropView initWithFrame:style:]
  -[SBSearchBackdropView initWithFrame:]
  -[SBSearchBackdropView .cxx_destruct]
  -[SBSearchBackdropView completeTransitionSuccessfully:]
  -[SBSearchBackdropView setTransitionProgress:]
  -[SBSearchBackdropView prepareForTransitionToBlurred:]
  -[SBSearchBackdropView completeIncrementalTransitionSuccessfully:]


SBFolderTitleTextField : UITextField /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  BOOL allowsEditing
 @property  double fontSize
 @property  _UILegibilitySettings *legibilitySettings
 @property  BOOL showingEditUI

  // class methods
  +[SBFolderTitleTextField _clearButtonImage]
  +[SBFolderTitleTextField warmupIfNecessary]
  +[SBFolderTitleTextField _editBackgroundImage]

  // instance methods
  -[SBFolderTitleTextField allowsEditing]
  -[SBFolderTitleTextField clearButtonRectForBounds:]
  -[SBFolderTitleTextField _clearButtonImage]
  -[SBFolderTitleTextField editingRectForBounds:]
  -[SBFolderTitleTextField textRectForBounds:]
  -[SBFolderTitleTextField setFontSize:]
  -[SBFolderTitleTextField legibilitySettings]
  -[SBFolderTitleTextField fontSize]
  -[SBFolderTitleTextField initWithFrame:]
  -[SBFolderTitleTextField setAllowsEditing:]
  -[SBFolderTitleTextField _textRectForBounds:]
  -[SBFolderTitleTextField .cxx_destruct]
  -[SBFolderTitleTextField setShowsEditUI:animated:]
  -[SBFolderTitleTextField setLegibilitySettings:]
  -[SBFolderTitleTextField sizeThatFits:]
  -[SBFolderTitleTextField _updateLegibility]
  -[SBFolderTitleTextField pointerInteraction:regionForRequest:defaultRegion:]
  -[SBFolderTitleTextField _backgroundImage]
  -[SBFolderTitleTextField showingEditUI]


SBFolderBackgroundView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  unsigned long currentEffect
 @property  <SBFolderBackgroundViewDelegate> *delegate
 @property  unsigned long effect
 @property  unsigned long concreteEffect

  // class methods
  +[SBFolderBackgroundView folderBackgroundSize]
  +[SBFolderBackgroundView warmupIfNecessary]
  +[SBFolderBackgroundView cornerRadiusToInsetContent]

  // instance methods
  -[SBFolderBackgroundView concreteEffect]
  -[SBFolderBackgroundView initWithFrame:]
  -[SBFolderBackgroundView setEffect:]
  -[SBFolderBackgroundView _setContinuousCornerRadius:]
  -[SBFolderBackgroundView .cxx_destruct]
  -[SBFolderBackgroundView effect]
  -[SBFolderBackgroundView _tintViewBackgroundColorAtFullAlpha]
  -[SBFolderBackgroundView updateTintEffectColor]
  -[SBFolderBackgroundView currentEffect]
  -[SBFolderBackgroundView setDelegate:]
  -[SBFolderBackgroundView _updateCurrentEffect]
  -[SBFolderBackgroundView setCurrentEffect:]
  -[SBFolderBackgroundView _hasLowQualityBackground]
  -[SBFolderBackgroundView delegate]
  -[SBFolderBackgroundView layoutSubviews]
  -[SBFolderBackgroundView _reduceTransparencyChanged]


SBIconView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <UIPointerInteractionDelegate, _UISettingsKeyObserver, UIGestureRecognizerDelegate, UIDragInteractionDelegate, SBCloseBoxViewDelegate, UIContextMenuInteractionDelegate, SBSHardwareButtonEventConsuming, SBHStackConfigurationInteractionDelegate, SBIconViewCustomImageViewControllerObserving, SBIconObserver, SBReusableView, SBIconAccessoryInfoProvider>
 @property  UIView *contentContainerView
 @property  UIDragInteraction *dragInteraction
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  NSDate *lastTouchDownDate
 @property  UIViewPropertyAnimator *accessoryViewAnimator
 @property  BOOL overlapping
 @property  long long displayedLabelAccessoryType
 @property  UILongPressGestureRecognizer *editingModeGestureRecognizer
 @property  UIContextMenuInteraction *contextMenuInteraction
 @property  <BSInvalidatable> *homeButtonPressConsumingAssertion
 @property  BOOL lastContextMenuInteractionFailedToLoad
 @property  <SBHIconViewConfigurationInteraction> *currentConfigurationInteraction
 @property  <SBHIconViewConfigurationInteraction> *currentStackConfigurationInteraction
 @property  UIPointerInteraction *iconViewCursorInteraction
 @property  UIPointerInteraction *closeBoxCursorInteraction
 @property  NSString *representedFolderIconLocation
 @property  BOOL canBeginDrags
 @property  NSString *applicationBundleIdentifierForShortcuts
 @property  NSURL *applicationBundleURLForShortcuts
 @property  NSArray *effectiveApplicationShortcutItems
 @property  {CGSize=dd} maxLabelSize
 @property  long long labelStyle
 @property  SBIcon *icon
 @property  <SBIconViewDelegate> *delegate
 @property  <SBIconViewActionDelegate> *overrideActionDelegate
 @property  NSString *location
 @property  unsigned long configurationOptions
 @property  _UILegibilitySettings *legibilitySettings
 @property  double iconImageAlpha
 @property  double effectiveIconImageAlpha
 @property  double iconAccessoryAlpha
 @property  double iconLabelAlpha
 @property  BOOL allIconElementsButLabelHidden
 @property  NSArray *applicationShortcutItems
 @property  BOOL shouldShowLabelAccessoryView
 @property  BOOL allowsLabelAccessoryView
 @property  long long currentLabelAccessoryType
 @property  double labelAccessoryTotalWidth
 @property  BOOL labelAccessoryHidden
 @property  double baselineOffsetFromBottom
 @property  double firstLineBaseline
 @property  double lastLineBaseline
 @property  BOOL enabled
 @property  BOOL paused
 @property  BOOL editing
 @property  BOOL allowsEditingAnimation
 @property  BOOL allowsCloseBox
 @property  BOOL canShowCloseBox
 @property  BOOL shouldShowCloseBox
 @property  BOOL showingContextMenu
 @property  BOOL allowsBlockedForScreenTimeExpiration
 @property  UIImage *iconImageSnapshot
 @property  UIView *iconImageSnapshotView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} iconImageFrame
 @property  {CGPoint=dd} iconImageCenter
 @property  {CGSize=dd} iconImageVisibleSize
 @property  {CGSize=dd} iconImageSize
 @property  {CGSize=dd} iconViewSize
 @property  {UIEdgeInsets=dddd} cursorHitTestPadding
 @property  BOOL allowsTapWhileEditing
 @property  BOOL highlighted
 @property  BOOL allowsLabelArea
 @property  BOOL allowsPassthroughHitTesting
 @property  BOOL customIconImageViewHitTestingDisabled
 @property  BOOL labelHidden
 @property  BOOL showsSquareCorners
 @property  BOOL touchDownInIcon
 @property  BOOL grabbed
 @property  BOOL dropping
 @property  BOOL showsImageAndLabelDuringDrop
 @property  UIView *dropContainerView
 @property  BOOL refusesRecipientStatus
 @property  BOOL showsDropGlow
 @property  BOOL crossfadingImageWithView
 @property  UIView<SBIconLabelView> *labelView
 @property  UIFont *labelFont
 @property  long long currentAccessoryType
 @property  BOOL allowsAccessoryView
 @property  long long continuityBadgeType
 @property  <SBIconContinuityInfo> *continuityInfo
 @property  double iconContentScale
 @property  BOOL iconContentScalingEnabled
 @property  BOOL startsDragMoreQuickly
 @property  double dragInteractionLiftDelay
 @property  Class expectedIconImageViewClass
 @property  unsigned long customIconImageViewControllerPriority
 @property  UIViewController<SBIconViewCustomImageViewControlling> *customIconImageViewController
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  <SBIconListLayout> *listLayout
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  SBHIconImageCache *iconImageCache
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBFolderIcon *folderIcon
 @property  unsigned long folderBackgroundStyle
 @property  UIView *folderIconBackgroundView
 @property  BOOL folderIconFrozen
 @property  unsigned long visibleMiniIconCount
 @property  unsigned long visibleMiniIconListIndex
 @property  unsigned long firstVisibleMiniIconIndex
 @property  unsigned long centerVisibleMiniIconIndex
 @property  unsigned long lastVisibleMiniIconIndex
 @property  BOOL animatingScrolling
 @property  UIColor *accessibilityTintColor
 @property  long long progressState
 @property  BOOL supportsConfigurationCard
 @property  BOOL showingConfigurationCard
 @property  BOOL supportsStackConfigurationCard
 @property  unsigned long imageLoadingBehavior
 @property  unsigned long debugIconIndex
 @property  BOOL iconImageSizeMatchesBoundsSize
 @property  NSString *backgroundViewGroupNameBase
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconView allowsLabelAccessoryView]
  +[SBIconView _labelHeight]
  +[SBIconView defaultViewClassForAccessoryType:]
  +[SBIconView isIconTapGestureRecognizer:]
  +[SBIconView _shouldAlwaysHaveContentContainerView]
  +[SBIconView defaultViewClassForLabelAccessoryType:]
  +[SBIconView _alwaysShowsAccessoryOfType:]
  +[SBIconView supportsPreviewInteraction]
  +[SBIconView maxLabelSizeForIconImageSize:]
  +[SBIconView labelAccessoryViewAdditionalRightMarginForType:]
  +[SBIconView defaultMaxLabelWidthDeltaForContentSizeCategory:]
  +[SBIconView defaultIconViewSizeForIconImageSize:configurationOptions:]
  +[SBIconView maxLabelSizeForIconImageSize:contentSizeCategory:options:]
  +[SBIconView labelAccessoryViewBaseRightMargin]
  +[SBIconView continuityBadgeTypeForNSString:]
  +[SBIconView componentBackgroundViewOfType:compatibleWithTraitCollection:initialWeighting:]
  +[SBIconView _jitterYTranslationAnimation]
  +[SBIconView showsPopovers]
  +[SBIconView contentContainerViewClass]
  +[SBIconView continuityBadgeTypeForContinuityInfo:]
  +[SBIconView defaultIconImageSize]
  +[SBIconView componentBackgroundViewOfType:]
  +[SBIconView defaultIconViewSize]
  +[SBIconView defaultImageLoadingBehavior]
  +[SBIconView defaultIconImageScale]
  +[SBIconView supportsTapGesture]
  +[SBIconView draggedItemBundleIdentifiersInDrag:]
  +[SBIconView configureLabelImageParametersBuilder:forIcon:location:]
  +[SBIconView setDebugContinuityBadgeType:]
  +[SBIconView _closeBoxClassForType:]
  +[SBIconView maxLabelSizeForListLayout:iconImageSize:contentSizeCategory:options:]
  +[SBIconView closeBoxTypeForView:]
  +[SBIconView iconLiftAlpha]
  +[SBIconView groupNameBaseForComponentBackgroundViewOfType:]
  +[SBIconView defaultIconImageCornerRadius]
  +[SBIconView _jitterRotationAnimationForGridSize:]
  +[SBIconView defaultLegibilitySettings]
  +[SBIconView supportsCursorInteraction]
  +[SBIconView supportsDragInteraction]
  +[SBIconView maxLabelSizeForListLayout:contentSizeCategory:options:]
  +[SBIconView _jitterXTranslationAnimation]
  +[SBIconView defaultMaxLabelHeight]
  +[SBIconView defaultIconLocation]
  +[SBIconView labelConfigurationForListLayout:contentSizeCategory:options:]
  +[SBIconView showsWidgets]
  +[SBIconView defaultIconImageCenterForIconImageSize:]
  +[SBIconView _defaultDragInteractionLiftDelay]
  +[SBIconView debugContinuityBadgeType]
  +[SBIconView componentBackgroundView]
  +[SBIconView activateShortcut:withBundleIdentifier:forIconView:]
  +[SBIconView dragContextForDragItem:]

  // instance methods
  -[SBIconView setUserInteractionEnabled:]
  -[SBIconView pressesBegan:withEvent:]
  -[SBIconView _updateBrightness]
  -[SBIconView effectiveApplicationShortcutItems]
  -[SBIconView sourceIconViewForConfigurationInteraction:]
  -[SBIconView dragItems]
  -[SBIconView _updateCustomIconImageViewControllerHitTesting]
  -[SBIconView accessorySize]
  -[SBIconView _insertIconImageView:]
  -[SBIconView _acquireHomeButtonPressConsumingAssertionIfNecessary]
  -[SBIconView iconInteractedWhenDisabled]
  -[SBIconView setAllowsLabelArea:]
  -[SBIconView matchingIconViewWithConfigurationOptions:]
  -[SBIconView setIconImageInfo:]
  -[SBIconView allowsBlockedForScreenTimeExpiration]
  -[SBIconView _labelImageParameters]
  -[SBIconView iconImageSnapshotView]
  -[SBIconView dragSession:didEndWithOperation:]
  -[SBIconView customImageViewControllerWantsLabelHiddenDidChange:]
  -[SBIconView editingModeGestureRecognizerDidFire:]
  -[SBIconView debugIconIndex]
  -[SBIconView setRefusesRecipientStatus:]
  -[SBIconView _invalidateHomeButtonPressConsumingAssertion]
  -[SBIconView firstVisibleMiniIconIndex]
  -[SBIconView cleanupAfterCrossfade]
  -[SBIconView effectiveListLayoutProvider]
  -[SBIconView referenceIconViewForConfigurationInteraction:]
  -[SBIconView scrollToTopOfFirstPageAnimated:]
  -[SBIconView labelView]
  -[SBIconView disallowCursorInteraction]
  -[SBIconView setCustomIconImageViewControllerPriority:]
  -[SBIconView setAllowsBlockedForScreenTimeExpiration:]
  -[SBIconView _registerForAddWidgetRequestsIfNecessary]
  -[SBIconView allowsLabelAccessoryView]
  -[SBIconView addGesturesAndInteractionsIfNecessary]
  -[SBIconView visibleMiniIconCount]
  -[SBIconView _dragInteraction:competingGestureRecognizerShouldDelayLift:]
  -[SBIconView imageLoadingBehavior]
  -[SBIconView setShowsSquareCorners:]
  -[SBIconView setIconImageSizeMatchesBoundsSize:]
  -[SBIconView setIconAccessoryAlpha:]
  -[SBIconView _frameForLabel]
  -[SBIconView effectiveOverallAlpha]
  -[SBIconView setShowsImageAndLabelDuringDrop:]
  -[SBIconView _updateFrameToIconViewSize]
  -[SBIconView customIconImageViewController]
  -[SBIconView homeButtonPressConsumingAssertion]
  -[SBIconView shouldActivateApplicationShortcutItem:atIndex:]
  -[SBIconView cancelDragLift]
  -[SBIconView _applyIconLabelAlpha:]
  -[SBIconView _updateJitter]
  -[SBIconView draggingLaunchURL]
  -[SBIconView _updateConfigurationForIconImageView:]
  -[SBIconView contextMenuInteraction:willDisplayMenuForConfiguration:animator:]
  -[SBIconView lastTouchDownDate]
  -[SBIconView cursorHitTestPadding]
  -[SBIconView _makeIconImageView]
  -[SBIconView expectedIconImageViewClass]
  -[SBIconView _handleTap]
  -[SBIconView endForbiddingEditingModeWithReason:]
  -[SBIconView _isShowingCloseBox]
  -[SBIconView _isShowingAccessoryView]
  -[SBIconView _destroyAccessoryView:]
  -[SBIconView allowsPassthroughHitTesting]
  -[SBIconView configureForLabelAllowed:]
  -[SBIconView currentAccessoryType]
  -[SBIconView contextMenuInteraction:previewForDismissingMenuWithConfiguration:]
  -[SBIconView _shouldEnableGroupBlending]
  -[SBIconView effectiveIconAccessoryAlpha]
  -[SBIconView _applyAdditionalLiftScale:]
  -[SBIconView _updateCloseBoxAnimated:]
  -[SBIconView cancelDrag]
  -[SBIconView _isForcingIconContentScalingEnabled]
  -[SBIconView applicationBundleIdentifierForShortcuts]
  -[SBIconView refusesRecipientStatus]
  -[SBIconView setPaused:forReason:]
  -[SBIconView prepareToCrossfadeImageWithView:anchorPoint:options:]
  -[SBIconView scrollToTopOfPage:animated:]
  -[SBIconView cleanUpAfterDropAnimation]
  -[SBIconView labelStyle]
  -[SBIconView _createCloseBoxIfNecessary]
  -[SBIconView pointMostlyInside:withEvent:]
  -[SBIconView closeBoxShouldTrack:]
  -[SBIconView contextMenuInteraction:willEndForConfiguration:animator:]
  -[SBIconView updateCustomIconImageViewController]
  -[SBIconView setFolderIcon:]
  -[SBIconView applicationShortcutItems]
  -[SBIconView allowsTapWhileEditing]
  -[SBIconView _isCursorInteractionEnabled]
  -[SBIconView applicationBundleURLForShortcuts]
  -[SBIconView listLayout]
  -[SBIconView isAnimatingScrolling]
  -[SBIconView presentStackConfigurationCard]
  -[SBIconView markAsDropping]
  -[SBIconView actionDelegate]
  -[SBIconView _updateAllComponentAlphasAnimated:]
  -[SBIconView shortcutsDelegate]
  -[SBIconView _contextMenuInteractionShouldAllowDragAfterDismiss:]
  -[SBIconView _boldTextStatusDidChange:]
  -[SBIconView showsImageAndLabelDuringDrop]
  -[SBIconView supportsStackConfigurationCard]
  -[SBIconView tapGestureDidChange:]
  -[SBIconView labelImageWithParameters:]
  -[SBIconView setCustomIconImageViewHitTestingDisabled:]
  -[SBIconView setContextMenuInteractionPending:]
  -[SBIconView _delegateTapAllowed]
  -[SBIconView clearIconImageInfo]
  -[SBIconView setFolderBackgroundStyle:]
  -[SBIconView setFloatyFolderCrossfadeFraction:]
  -[SBIconView dragSessionWillBegin:]
  -[SBIconView newCaptureOnlyBackgroundView]
  -[SBIconView overrideActionDelegate]
  -[SBIconView _frameForLabelAccessoryViewWithLabelFrame:labelImage:labelImageParameters:imageFrame:]
  -[SBIconView _configureIconImageView:]
  -[SBIconView _unregisterForAddWidgetRequests]
  -[SBIconView _dragInteraction:shouldDelayCompetingGestureRecognizer:]
  -[SBIconView widgetConfigurationInteractionForDataSource:]
  -[SBIconView setBackgroundAndIconGridImageAlpha:]
  -[SBIconView folderIcon]
  -[SBIconView centerVisibleMiniIconIndex]
  -[SBIconView effectiveIconLabelAlpha]
  -[SBIconView isTouchDownInIcon]
  -[SBIconView setGrabbed:]
  -[SBIconView setCrossfadeFraction:]
  -[SBIconView frameForMiniIconAtIndex:]
  -[SBIconView editingModeGestureRecognizer]
  -[SBIconView currentStackConfigurationInteraction]
  -[SBIconView _dragInteraction:canExcludeCompetingGestureRecognizer:]
  -[SBIconView dragDelegate]
  -[SBIconView setHomeButtonPressConsumingAssertion:]
  -[SBIconView setLastContextMenuInteractionFailedToLoad:]
  -[SBIconView contentContainerView]
  -[SBIconView setImageLoadingBehavior:]
  -[SBIconView configureMatchingIconView:]
  -[SBIconView supportsConfigurationCard]
  -[SBIconView purgeCachedEditingViewData]
  -[SBIconView _applyIconContentScale:]
  -[SBIconView _destroyIconImageView]
  -[SBIconView iconAccessoryAlpha]
  -[SBIconView folderIconBackgroundView]
  -[SBIconView _contextMenuConfigurationDidPresent:]
  -[SBIconView didMoveToWindow]
  -[SBIconView _updateProgressAnimated:]
  -[SBIconView contextMenuInteraction:previewForHighlightingMenuWithConfiguration:]
  -[SBIconView setDragging:updateImmediately:]
  -[SBIconView contentBoundingRectForConfigurationInteraction:]
  -[SBIconView iconImageSize]
  -[SBIconView isContextMenuInteractionActive]
  -[SBIconView _updateDragInteractionLiftDelay]
  -[SBIconView _centerForCloseBox]
  -[SBIconView iconImageCornerRadius]
  -[SBIconView setListLayoutProvider:]
  -[SBIconView visibleMiniIconListIndex]
  -[SBIconView performAfterContextMenusDismissUsingBlock:]
  -[SBIconView isContextMenuInteractionPending]
  -[SBIconView updateParallaxSettings]
  -[SBIconView prepareToCrossfadeWithFloatyFolderView:allowFolderInteraction:]
  -[SBIconView dragPreviewForItem:session:]
  -[SBIconView containerViewControllerForConfigurationInteraction:]
  -[SBIconView scrollToGapOrTopIfFullOfPage:animated:]
  -[SBIconView _hasPopover]
  -[SBIconView iconImageCenter]
  -[SBIconView _toggleGroupBlendingIfNecessary]
  -[SBIconView continuityBadgeType]
  -[SBIconView setLabelFont:]
  -[SBIconView configureLabelImageParametersBuilder:]
  -[SBIconView effectiveIconImageAlpha]
  -[SBIconView _recursiveNotifyInteractionTintColorDidChangeForReasons:]
  -[SBIconView startsDragMoreQuickly]
  -[SBIconView _closeBoxType]
  -[SBIconView _notifyObserversSizeDidChange]
  -[SBIconView earlyTerminateContextMenuDismissAnimation]
  -[SBIconView presentConfigurationCard]
  -[SBIconView effectiveBrightness]
  -[SBIconView isDropping]
  -[SBIconView setAccessibilityTintColor:]
  -[SBIconView _frameForLabelHighlight]
  -[SBIconView iconImageFrame]
  -[SBIconView tapGestureRecognizer]
  -[SBIconView baselineOffsetFromBottom]
  -[SBIconView visibleImageRelativeFrameForMiniIconAtIndex:]
  -[SBIconView setTouchDownInIcon:]
  -[SBIconView setDisallowCursorInteraction:]
  -[SBIconView setAllowsEditingAnimation:]
  -[SBIconView _removeUnknownSubviews]
  -[SBIconView applicationShortcutWidgetBundleIdentifier]
  -[SBIconView _createAccessoryViewIfNecessary]
  -[SBIconView dismissConfigurationCard]
  -[SBIconView dragSession:willEndWithOperation:]
  -[SBIconView _applyIconAccessoryAlpha:]
  -[SBIconView setIcon:animated:]
  -[SBIconView settings:changedValueForKey:]
  -[SBIconView initWithConfigurationOptions:]
  -[SBIconView iconViewCursorInteraction]
  -[SBIconView _visiblyActiveDataSource]
  -[SBIconView labelAccessoryTotalWidth]
  -[SBIconView _disableContentContainerView]
  -[SBIconView performTap]
  -[SBIconView isLabelAccessoryHidden]
  -[SBIconView canBeginDrags]
  -[SBIconView _destroyAccessoryView]
  -[SBIconView setCursorHitTestPadding:]
  -[SBIconView currentConfigurationInteraction]
  -[SBIconView setLabelHidden:]
  -[SBIconView _updatePrivateMode]
  -[SBIconView currentImageView]
  -[SBIconView _applyIconEditingSettings]
  -[SBIconView _contentSizeCategoryDidChange:]
  -[SBIconView _delegateTouchEnded:]
  -[SBIconView setIconGridImageAlpha:]
  -[SBIconView setAllowsAccessoryView:]
  -[SBIconView _labelVerticalOffset]
  -[SBIconView _contextMenuInteraction:overrideSuggestedActionsForConfiguration:]
  -[SBIconView setConfigurationOptions:]
  -[SBIconView iconImageAlpha]
  -[SBIconView setLabelAccessoryHidden:]
  -[SBIconView isShowingContextMenu]
  -[SBIconView setContinuityInfo:animated:]
  -[SBIconView contextMenuInteraction:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[SBIconView isOverlapping]
  -[SBIconView setIconImageAlpha:]
  -[SBIconView _folderIconImageView]
  -[SBIconView _updateLabelArea]
  -[SBIconView setLocation:animated:]
  -[SBIconView isCrossfadingImageWithView]
  -[SBIconView iconImageSnapshot]
  -[SBIconView badgeParallaxSettings]
  -[SBIconView prepareForIconDrop]
  -[SBIconView _pointerStyleForWidgetIcon]
  -[SBIconView _updateLabel]
  -[SBIconView labelConfiguration]
  -[SBIconView scrollToFirstGapAnimated:]
  -[SBIconView configurationOptions]
  -[SBIconView configurationUIDelegate]
  -[SBIconView iconImageSizeMatchesBoundsSize]
  -[SBIconView _handleAddWidgetRequest:]
  -[SBIconView labelFont]
  -[SBIconView isTimedOut]
  -[SBIconView _updateIconImageViewAnimated:]
  -[SBIconView setBoundsSizeFromIconImageSize:]
  -[SBIconView pauseReasonsDescriptions]
  -[SBIconView isFolderIconFrozen]
  -[SBIconView shouldShowCloseBox]
  -[SBIconView lastVisibleMiniIconIndex]
  -[SBIconView _shouldAnimatePropertyWithKey:]
  -[SBIconView showsSquareCorners]
  -[SBIconView _additionalLiftScale]
  -[SBIconView iconViewSize]
  -[SBIconView customIconImageViewControllerPriority]
  -[SBIconView _applyEditingStateAnimated:]
  -[SBIconView configurationInteractionDidCommit:]
  -[SBIconView setAllowsCloseBox:]
  -[SBIconView allowsCloseBox]
  -[SBIconView isIconContentScalingEnabled]
  -[SBIconView _pointerStyleForAppIcon]
  -[SBIconView setIconLabelAlpha:]
  -[SBIconView setAllIconElementsButLabelHidden:]
  -[SBIconView dragInteraction:session:willAddItems:forInteraction:]
  -[SBIconView displayedLabelFont]
  -[SBIconView _setForcingIconContentScalingEnabled:]
  -[SBIconView touchesBegan:withEvent:]
  -[SBIconView pressesChanged:withEvent:]
  -[SBIconView _hasWidget]
  -[SBIconView setShowsDropGlow:animator:]
  -[SBIconView removeAllIconAnimations]
  -[SBIconView _configureViewAsFolderIconImageView:]
  -[SBIconView _closeBoxTapGestureChanged:]
  -[SBIconView canShowCloseBox]
  -[SBIconView setCurrentConfigurationInteraction:]
  -[SBIconView homeScreenContentViewForConfigurationInteraction:]
  -[SBIconView _frameForImageView]
  -[SBIconView _labelBaselineOffsetFromImage]
  -[SBIconView lastContextMenuInteractionFailedToLoad]
  -[SBIconView matchingIconViewByAddingConfigurationOptions:removingConfigurationOptions:]
  -[SBIconView dragInteraction:session:didEndWithOperation:]
  -[SBIconView iconLaunchEnabledDidChange:]
  -[SBIconView setIconContentScalingEnabled:]
  -[SBIconView _refreshAccessoryViewNotification:]
  -[SBIconView dismissContextMenuWithCompletion:]
  -[SBIconView iconContentScale]
  -[SBIconView removeDroppingAssertion:]
  -[SBIconView _enableContentContainerView]
  -[SBIconView consumeSinglePressUpForButtonKind:]
  -[SBIconView isCustomIconImageViewHitTestingDisabled]
  -[SBIconView _contextMenuConfigurationWillDismiss:]
  -[SBIconView displayedLabelAccessoryType]
  -[SBIconView _applyIconImageAlpha:]
  -[SBIconView progressState]
  -[SBIconView accessoryOffset]
  -[SBIconView dismissStackConfigurationCard]
  -[SBIconView iconImageVisibleSize]
  -[SBIconView _contextMenuConfigurationWillPresent:forInteraction:]
  -[SBIconView _frameForVisibleImage]
  -[SBIconView _contextMenuInteraction:styleForMenuWithConfiguration:]
  -[SBIconView setStartsDragMoreQuickly:]
  -[SBIconView shouldShowLabelAccessoryView]
  -[SBIconView iconAccessoriesDidUpdate:]
  -[SBIconView supportedIconGridSizeClasses]
  -[SBIconView setIconContentScale:]
  -[SBIconView setLabelStyle:]
  -[SBIconView accessoryViewAnimator]
  -[SBIconView allowsLabelArea]
  -[SBIconView iconLabelAlpha]
  -[SBIconView isPrivateModeEnabled]
  -[SBIconView draggingStartLocation]
  -[SBIconView accessibilityTintColor]
  -[SBIconView reuseDelegate]
  -[SBIconView _toggleContentContainerViewIfNecessary]
  -[SBIconView dragInteractionLiftDelay]
  -[SBIconView _shouldHaveContentContainerView]
  -[SBIconView setAccessoryViewAnimator:]
  -[SBIconView _updateAllComponentAlphas]
  -[SBIconView behaviorDelegate]
  -[SBIconView cleanupAfterFloatyFolderCrossfade]
  -[SBIconView dismissConfigurationCardImmediately]
  -[SBIconView pressesCancelled:withEvent:]
  -[SBIconView _dragInteraction:liftAnimationDidChangeDirection:]
  -[SBIconView _setShowingCloseBox:]
  -[SBIconView continuityInfo]
  -[SBIconView allowsEditingAnimation]
  -[SBIconView setCurrentStackConfigurationInteraction:]
  -[SBIconView startForbiddingEditingModeWithReason:]
  -[SBIconView _setShowingAccessoryView:]
  -[SBIconView _iconImageView]
  -[SBIconView configurationInteractionWillBegin:]
  -[SBIconView isLabelTextBold]
  -[SBIconView newComponentBackgroundViewOfType:]
  -[SBIconView canReceiveGrabbedIcon:]
  -[SBIconView currentLabelAccessoryType]
  -[SBIconView isShowingConfigurationCard]
  -[SBIconView setMorphFraction:]
  -[SBIconView lastLineBaseline]
  -[SBIconView setFolderIconFrozen:]
  -[SBIconView recentsDocumentExtensionProvider]
  -[SBIconView _updateAfterManualIconImageInfoChange]
  -[SBIconView _contextMenuConfigurationDidDismiss:]
  -[SBIconView legibilitySettings]
  -[SBIconView _legibilitySettingsWithParameters:]
  -[SBIconView setLastTouchDownDate:]
  -[SBIconView setApplicationShortcutItems:]
  -[SBIconView setCrossfadeCornerRadius:]
  -[SBIconView iconImageInfo]
  -[SBIconView setIconImageAndAccessoryAlpha:]
  -[SBIconView _configureLabelAccessoryViewForType:]
  -[SBIconView iconViewSizeForIconImageSize:]
  -[SBIconView representedFolderIconLocation]
  -[SBIconView _updateLabelAccessoryView]
  -[SBIconView _updateAccessoryViewWithAnimation:]
  -[SBIconView backgroundViewGroupNameBase]
  -[SBIconView contextMenuInteraction:configurationForMenuAtLocation:]
  -[SBIconView setFolderIconBackgroundView:]
  -[SBIconView _debugContinuity]
  -[SBIconView setPrivateModeEnabled:]
  -[SBIconView setIconImageCache:]
  -[SBIconView dragInteraction:session:willEndWithOperation:]
  -[SBIconView _centerForAccessoryView]
  -[SBIconView folderBackgroundStyle]
  -[SBIconView _applyOverallAlpha:]
  -[SBIconView closeBoxCursorInteraction]
  -[SBIconView _updateCursorInteractionsEnabled]
  -[SBIconView setDragging:]
  -[SBIconView allIconElementsButLabelHidden]
  -[SBIconView isFolderIcon]
  -[SBIconView prepareToCrossfadeImageWithView:options:]
  -[SBIconView setAllowsPassthroughHitTesting:]
  -[SBIconView _legibilitySettingsWithStyle:primaryColor:]
  -[SBIconView _recursivelyUpdateBackdropMaskFrames]
  -[SBIconView dropContainerView]
  -[SBIconView setContinuityInfo:]
  -[SBIconView _contextMenuInteraction:previewForIconWithConfigurationOptions:highlighted:]
  -[SBIconView allowsAccessoryView]
  -[SBIconView draggingLaunchActions]
  -[SBIconView _updateLaunchDisabled]
  -[SBIconView isGrabbed]
  -[SBIconView _updateCustomIconImageViewControllerBlur:]
  -[SBIconView contextMenuInteraction]
  -[SBIconView _isFolderIconFreezingSupported]
  -[SBIconView showsDropGlow]
  -[SBIconView _labelImage]
  -[SBIconView setCustomIconImageViewController:]
  -[SBIconView dragInteraction:willAnimateLiftWithAnimator:session:]
  -[SBIconView iconImageDidUpdate:]
  -[SBIconView isLabelHidden]
  -[SBIconView setOverlapping:]
  -[SBIconView initWithConfigurationOptions:listLayoutProvider:]
  -[SBIconView firstLineBaseline]
  -[SBIconView pressesEnded:withEvent:]
  -[SBIconView setOverrideActionDelegate:]
  -[SBIconView maxLabelSize]
  -[SBIconView setDebugIconIndex:]
  -[SBIconView configurationInteractionDidEnd:]
  -[SBIconView initWithFrame:]
  -[SBIconView _legibilitySettingsWithPrimaryColor:]
  -[SBIconView dragInteraction:itemsForAddingToSession:withTouchAtPoint:]
  -[SBIconView tintColor]
  -[SBIconView isDragging]
  -[SBIconView dealloc]
  -[SBIconView dragInteraction:sessionIsRestrictedToDraggingApplication:]
  -[SBIconView setEditing:]
  -[SBIconView dragInteraction:item:willAnimateCancelWithAnimator:]
  -[SBIconView isHighlighted]
  -[SBIconView iconImageCache]
  -[SBIconView .cxx_destruct]
  -[SBIconView dragInteraction:sessionWillBegin:]
  -[SBIconView hitTest:withEvent:]
  -[SBIconView dragInteraction:previewForLiftingItem:session:]
  -[SBIconView _automationID]
  -[SBIconView icon]
  -[SBIconView setHighlighted:]
  -[SBIconView _backgroundContrastDidChange:]
  -[SBIconView gestureRecognizerShouldBegin:]
  -[SBIconView dragInteraction:itemsForBeginningSession:]
  -[SBIconView pointerInteraction:styleForRegion:]
  -[SBIconView succinctDescriptionBuilder]
  -[SBIconView prepareForReuse]
  -[SBIconView intrinsicContentSize]
  -[SBIconView setLocation:]
  -[SBIconView setIcon:]
  -[SBIconView setLegibilitySettings:]
  -[SBIconView dragInteraction:previewForCancellingItem:withDefault:]
  -[SBIconView setPaused:]
  -[SBIconView dragInteraction:sessionForAddingItems:withTouchAtPoint:]
  -[SBIconView folderIconImageCache]
  -[SBIconView touchesCancelled:withEvent:]
  -[SBIconView isEnabled]
  -[SBIconView dragInteraction]
  -[SBIconView pointInside:withEvent:]
  -[SBIconView setFolderIconImageCache:]
  -[SBIconView succinctDescription]
  -[SBIconView sizeThatFits:]
  -[SBIconView setBounds:]
  -[SBIconView isPaused]
  -[SBIconView setFrame:]
  -[SBIconView pointerInteraction:regionForRequest:defaultRegion:]
  -[SBIconView folder]
  -[SBIconView isEditing]
  -[SBIconView listLayoutProvider]
  -[SBIconView setEnabled:]
  -[SBIconView location]
  -[SBIconView contentSizeCategory]
  -[SBIconView removeObserver:]
  -[SBIconView setDelegate:]
  -[SBIconView addObserver:]
  -[SBIconView touchesMoved:withEvent:]
  -[SBIconView touchesEnded:withEvent:]
  -[SBIconView gestureRecognizer:shouldReceiveTouch:]
  -[SBIconView delegate]
  -[SBIconView descriptionWithMultilinePrefix:]
  -[SBIconView setEditing:animated:]
  -[SBIconView layoutSubviews]
  -[SBIconView descriptionBuilderWithMultilinePrefix:]


SBIconDragInteraction : UIDragInteraction /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
  // class methods
  +[SBIconDragInteraction isEnabledByDefault]


SBIconTapGestureRecognizer : UITapGestureRecognizer /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices

SBIconForceTouchAppInfoProvider : NSObject /usr/lib/libSystem.B.dylib <SBIconAccessoryInfoProvider>
 @property  NSString *location
 @property  BOOL highlighted
 @property  long long continuityBadgeType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconForceTouchAppInfoProvider continuityBadgeType]
  -[SBIconForceTouchAppInfoProvider isHighlighted]
  -[SBIconForceTouchAppInfoProvider location]


SBIconViewDragInfo : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, BSDescriptionProviding>
 @property  NSString *bundleIdentifier
 @property  NSURL *launchURL
 @property  long long startLocation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconViewDragInfo supportsSecureCoding]

  // instance methods
  -[SBIconViewDragInfo .cxx_destruct]
  -[SBIconViewDragInfo setStartLocation:]
  -[SBIconViewDragInfo succinctDescriptionBuilder]
  -[SBIconViewDragInfo encodeWithCoder:]
  -[SBIconViewDragInfo setBundleIdentifier:]
  -[SBIconViewDragInfo succinctDescription]
  -[SBIconViewDragInfo setLaunchURL:]
  -[SBIconViewDragInfo bundleIdentifier]
  -[SBIconViewDragInfo startLocation]
  -[SBIconViewDragInfo descriptionWithMultilinePrefix:]
  -[SBIconViewDragInfo initWithCoder:]
  -[SBIconViewDragInfo descriptionBuilderWithMultilinePrefix:]
  -[SBIconViewDragInfo launchURL]


SBHIconViewNonPoolingImageCache : SBHIconImageCache
  // class methods
  +[SBHIconViewNonPoolingImageCache supportsMemoryPooling]


SBHIconTransformView : SBIconView
  // class methods
  +[SBHIconTransformView contentContainerViewClass]
  +[SBHIconTransformView layerClass]


SBHIconContentContainerTransformView : SBFTouchPassThroughView /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[SBHIconContentContainerTransformView layerClass]


SBIconViewDroppingAssertion : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable, BSDescriptionProviding>
 @property  BOOL invalidated
 @property  SBIconView *iconView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconViewDroppingAssertion iconView]
  -[SBIconViewDroppingAssertion dealloc]
  -[SBIconViewDroppingAssertion .cxx_destruct]
  -[SBIconViewDroppingAssertion succinctDescriptionBuilder]
  -[SBIconViewDroppingAssertion succinctDescription]
  -[SBIconViewDroppingAssertion initWithIconView:]
  -[SBIconViewDroppingAssertion isInvalidated]
  -[SBIconViewDroppingAssertion setInvalidated:]
  -[SBIconViewDroppingAssertion invalidate]
  -[SBIconViewDroppingAssertion descriptionWithMultilinePrefix:]
  -[SBIconViewDroppingAssertion descriptionBuilderWithMultilinePrefix:]


SBIconViewContextMenuContext : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  UIContextMenuInteraction *contextMenuInteraction
 @property  SBIconView *iconView
 @property  {CGPoint=dd} location
 @property  NSUUID *identifier
 @property  NSString *presentedWidgetBundleIdentifier

  // instance methods
  -[SBIconViewContextMenuContext copyWithZone:]
  -[SBIconViewContextMenuContext iconView]
  -[SBIconViewContextMenuContext contextMenuInteraction]
  -[SBIconViewContextMenuContext .cxx_destruct]
  -[SBIconViewContextMenuContext identifier]
  -[SBIconViewContextMenuContext initWithIconView:location:]
  -[SBIconViewContextMenuContext setPresentedWidgetBundleIdentifier:]
  -[SBIconViewContextMenuContext presentedWidgetBundleIdentifier]
  -[SBIconViewContextMenuContext contextMenuNotificationUserInfo]
  -[SBIconViewContextMenuContext isEqual:]
  -[SBIconViewContextMenuContext location]
  -[SBIconViewContextMenuContext setContextMenuInteraction:]


SBMutableIconLabelImageParameters : SBIconLabelImageParameters
 @property  NSString *text
 @property  {CGSize=dd} maxSize
 @property  UIFont *font
 @property  double scale
 @property  BOOL containsEmoji
 @property  BOOL canTruncate
 @property  BOOL canTighten
 @property  long long legibilityStyle
 @property  UIColor *textColor
 @property  BOOL accessibilityReduceTransparencyEnabled
 @property  NSString *contentSizeCategory
 @property  UIColor *focusHighlightColor
 @property  {UIEdgeInsets=dddd} textInsets
 @property  {UIEdgeInsets=dddd} fontLanguageInsets
 @property  NSString *iconLocation
 @property  BOOL colorspaceGrayscale

  // instance methods
  -[SBMutableIconLabelImageParameters setScale:]
  -[SBMutableIconLabelImageParameters setCanTruncate:]
  -[SBMutableIconLabelImageParameters setLegibilityStyle:]
  -[SBMutableIconLabelImageParameters setMaxSize:]
  -[SBMutableIconLabelImageParameters copy]
  -[SBMutableIconLabelImageParameters setCanTighten:]
  -[SBMutableIconLabelImageParameters setTextInsets:]
  -[SBMutableIconLabelImageParameters setContentSizeCategory:]
  -[SBMutableIconLabelImageParameters setTextColor:]
  -[SBMutableIconLabelImageParameters setColorspaceGrayscale:]
  -[SBMutableIconLabelImageParameters setFont:]
  -[SBMutableIconLabelImageParameters setIconLocation:]
  -[SBMutableIconLabelImageParameters setAccessibilityReduceTransparencyEnabled:]
  -[SBMutableIconLabelImageParameters setContainsEmoji:]
  -[SBMutableIconLabelImageParameters setText:]
  -[SBMutableIconLabelImageParameters setFocusHighlightColor:]
  -[SBMutableIconLabelImageParameters setFontLanguageInsets:]


SBHLibraryCategoryFolder : SBFolder
 @property  SBHLibraryCategoryIdentifier *libraryCategoryIdentifier

  // instance methods
  -[SBHLibraryCategoryFolder _indexPathToRevealForJiggleMode]
  -[SBHLibraryCategoryFolder isLibraryCategoryFolder]
  -[SBHLibraryCategoryFolder .cxx_destruct]
  -[SBHLibraryCategoryFolder libraryCategoryIdentifier]
  -[SBHLibraryCategoryFolder initWithDisplayName:maxListCount:listGridSize:libraryCategoryIdentifier:]


SBHWidgetConfigurationInteraction : NSObject /usr/lib/libSystem.B.dylib <SBViewControllerTransitionContextDelegate, SBHWidgetConfigurationAnimationContext, WFWidgetConfigurationViewControllerDelegate, SBHIconViewConfigurationInteraction>
 @property  SBHWidgetSettings *widgetSettings
 @property  INIntent *configuration
 @property  WFWidgetConfigurationOptions *configurationOptions
 @property  WFWidgetConfigurationViewController *configurationViewController
 @property  UIViewController *containerViewController
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceContentFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} targetContentFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentBoundingRect
 @property  UIView *homeScreenContentView
 @property  SBIconView *sourceView
 @property  SBIconView *referenceView
 @property  MTMaterialView *backgroundView
 @property  UIView *backgroundTintView
 @property  UIView *touchBlockingView
 @property  UITapGestureRecognizer *tapToPresentGesture
 @property  long long operation
 @property  SBViewControllerTransitionContext *transition
 @property  CHSAvocadoDescriptor *widgetDescriptor
 @property  <SBHIconViewConfigurationInteractionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL wantsAnimation
 @property  UIView *containerView
 @property  UIView *targetView

  // instance methods
  -[SBHWidgetConfigurationInteraction setTransition:]
  -[SBHWidgetConfigurationInteraction setOperation:]
  -[SBHWidgetConfigurationInteraction operation]
  -[SBHWidgetConfigurationInteraction setSourceView:]
  -[SBHWidgetConfigurationInteraction backgroundView]
  -[SBHWidgetConfigurationInteraction setBackgroundView:]
  -[SBHWidgetConfigurationInteraction configurationOptions]
  -[SBHWidgetConfigurationInteraction transitionDidFinish:]
  -[SBHWidgetConfigurationInteraction transition]
  -[SBHWidgetConfigurationInteraction sourceView]
  -[SBHWidgetConfigurationInteraction beginConfiguration]
  -[SBHWidgetConfigurationInteraction .cxx_destruct]
  -[SBHWidgetConfigurationInteraction referenceView]
  -[SBHWidgetConfigurationInteraction endConfiguration]
  -[SBHWidgetConfigurationInteraction endConfigurationImmediately]
  -[SBHWidgetConfigurationInteraction configurationViewController]
  -[SBHWidgetConfigurationInteraction touchBlockingView]
  -[SBHWidgetConfigurationInteraction setConfigurationViewController:]
  -[SBHWidgetConfigurationInteraction setHomeScreenContentView:]
  -[SBHWidgetConfigurationInteraction _handleTapToPresent:]
  -[SBHWidgetConfigurationInteraction setTapToPresentGesture:]
  -[SBHWidgetConfigurationInteraction setContentBoundingRect:]
  -[SBHWidgetConfigurationInteraction _setUpMatchMoveAnimationForBackgroundView:]
  -[SBHWidgetConfigurationInteraction widgetDescriptor]
  -[SBHWidgetConfigurationInteraction setBackgroundTintView:]
  -[SBHWidgetConfigurationInteraction _handleTapToDismiss:]
  -[SBHWidgetConfigurationInteraction setTouchBlockingView:]
  -[SBHWidgetConfigurationInteraction _sourceContentFrame]
  -[SBHWidgetConfigurationInteraction setSourceContentFrame:]
  -[SBHWidgetConfigurationInteraction _targetContentFrame]
  -[SBHWidgetConfigurationInteraction setTargetContentFrame:]
  -[SBHWidgetConfigurationInteraction _newTransitionAnimator]
  -[SBHWidgetConfigurationInteraction _endConfigurationImmediately:]
  -[SBHWidgetConfigurationInteraction _handlePresentationDidFinish]
  -[SBHWidgetConfigurationInteraction _handleDismissalDidFinish]
  -[SBHWidgetConfigurationInteraction backgroundTintView]
  -[SBHWidgetConfigurationInteraction tapToPresentGesture]
  -[SBHWidgetConfigurationInteraction contentBoundingRect]
  -[SBHWidgetConfigurationInteraction sourceContentFrame]
  -[SBHWidgetConfigurationInteraction containerView]
  -[SBHWidgetConfigurationInteraction homeScreenContentView]
  -[SBHWidgetConfigurationInteraction targetContentFrame]
  -[SBHWidgetConfigurationInteraction widgetConfigurationViewController:didFinishWithIntent:]
  -[SBHWidgetConfigurationInteraction initWithWidgetDescriptor:gridSizeClass:intent:]
  -[SBHWidgetConfigurationInteraction widgetConfigurationViewControllerPreferredCardSizeDidChange:]
  -[SBHWidgetConfigurationInteraction widgetSettings]
  -[SBHWidgetConfigurationInteraction configuration]
  -[SBHWidgetConfigurationInteraction containerViewController]
  -[SBHWidgetConfigurationInteraction setContainerViewController:]
  -[SBHWidgetConfigurationInteraction setReferenceView:]
  -[SBHWidgetConfigurationInteraction setDelegate:]
  -[SBHWidgetConfigurationInteraction targetView]
  -[SBHWidgetConfigurationInteraction delegate]
  -[SBHWidgetConfigurationInteraction setConfiguration:]
  -[SBHWidgetConfigurationInteraction wantsAnimation]


SBHIconApplicationShortcutListComposer : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBHIconApplicationShortcutListComposer supportsMultiwindowShortcut]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForApplicationWithBundleIdentifier:iconDisplayName:staticItems:dynamicItems:applicationItemID:numberOfDisplayItemsInSwitcher:supportsMultipleWindows:isSystemApplication:isInternalApplication:isApplicationInBeta:isApplicationHidden:removeStyle:]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForWidgetIcon:additionalApplicationShortcutItems:widgetIconSupportsConfiguration:iconManagerAllowsEditing:]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForDownloadingApplicationWithBundleIdentifier:iconDisplayName:prioritizationIsAvailable:downloadingInformationAgent:canShare:]
  +[SBHIconApplicationShortcutListComposer homeScreenDefaults]
  +[SBHIconApplicationShortcutListComposer filteredApplicationShortcutItemsWithStaticApplicationShortcutItems:dynamicApplicationShortcutItems:]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForBookmarkIcon:withDisplayName:removeStyle:]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForFolderIcon:iconImageCache:iconManagerAllowsEditing:removeStyle:badgeViewGenerator:]


SBHIconLibraryQuery : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *searchString
 @property  NSPredicate *predicate
 @property  @? comparator
 @property  NSString *keyboardLanguageHint
 @property  UITextRange *markedTextRange
 @property  NSArray *markedTextArray

  // class methods
  +[SBHIconLibraryQuery string:matchesSearchString:]

  // instance methods
  -[SBHIconLibraryQuery markedTextRange]
  -[SBHIconLibraryQuery comparator]
  -[SBHIconLibraryQuery copyWithZone:]
  -[SBHIconLibraryQuery searchString]
  -[SBHIconLibraryQuery init]
  -[SBHIconLibraryQuery .cxx_destruct]
  -[SBHIconLibraryQuery markedTextArray]
  -[SBHIconLibraryQuery predicate]
  -[SBHIconLibraryQuery _hasSearchString]
  -[SBHIconLibraryQuery aToZComparator]
  -[SBHIconLibraryQuery prefixComparator]
  -[SBHIconLibraryQuery _composeComparator:andComparator:]
  -[SBHIconLibraryQuery keyboardLanguageHint]
  -[SBHIconLibraryQuery initWithMarkedTextSearchString:markedTextRange:markedTextArray:]
  -[SBHIconLibraryQuery setKeyboardLanguageHint:]
  -[SBHIconLibraryQuery isEqual:]
  -[SBHIconLibraryQuery initWithSearchString:]


SBIconListLayoutBlockObserver : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable, SBIconListLayoutObserver>
 @property  @? didAddIconViewBlock
 @property  @? didRemoveIconViewBlock
 @property  @? boundsSizeChangeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListLayoutBlockObserver iconListView:didRemoveIconView:]
  -[SBIconListLayoutBlockObserver iconListView:didAddIconView:]
  -[SBIconListLayoutBlockObserver .cxx_destruct]
  -[SBIconListLayoutBlockObserver didAddIconViewBlock]
  -[SBIconListLayoutBlockObserver setDidAddIconViewBlock:]
  -[SBIconListLayoutBlockObserver boundsSizeChangeBlock]
  -[SBIconListLayoutBlockObserver didRemoveIconViewBlock]
  -[SBIconListLayoutBlockObserver setDidRemoveIconViewBlock:]
  -[SBIconListLayoutBlockObserver setBoundsSizeChangeBlock:]
  -[SBIconListLayoutBlockObserver iconListViewDidChangeBoundsSize:]
  -[SBIconListLayoutBlockObserver invalidate]


SBDownloadingIcon : SBLeafIcon
 @property  <SBDownloadingIconDataSource> *downloadingIconDataSource
 @property  BOOL uninstalledByUser
 @property  NSString *realDisplayName

  // class methods
  +[SBDownloadingIcon leafIdentifierForApplicationPlaceholderBundleID:]
  +[SBDownloadingIcon applicationPlaceholderBundleIDForDownloadingIconLeafIdentifier:]
  +[SBDownloadingIcon isDownloadingIconLeafIdentifier:]

  // instance methods
  -[SBDownloadingIcon copyWithZone:]
  -[SBDownloadingIcon .cxx_destruct]
  -[SBDownloadingIcon setDownloadingIconDataSource:]
  -[SBDownloadingIcon setUninstalledByUser:]
  -[SBDownloadingIcon downloadingIconDataSource]
  -[SBDownloadingIcon realDisplayName]
  -[SBDownloadingIcon initWithDownloadingIconDataSource:]
  -[SBDownloadingIcon reloadForStatusChange]
  -[SBDownloadingIcon uninstallAlertBody]
  -[SBDownloadingIcon cancelDownload]
  -[SBDownloadingIcon descriptionForLocation:]
  -[SBDownloadingIcon isDownloadingIcon]
  -[SBDownloadingIcon uninstalledByUser]


SBHFolderIconVisualConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  {CGSize=dd} gridCellSize
 @property  {CGSize=dd} gridCellSpacing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHFolderIconVisualConfiguration copyWithZone:]
  -[SBHFolderIconVisualConfiguration init]
  -[SBHFolderIconVisualConfiguration succinctDescriptionBuilder]
  -[SBHFolderIconVisualConfiguration gridCellSpacing]
  -[SBHFolderIconVisualConfiguration succinctDescription]
  -[SBHFolderIconVisualConfiguration isEqual:]
  -[SBHFolderIconVisualConfiguration gridCellSize]
  -[SBHFolderIconVisualConfiguration setGridCellSize:]
  -[SBHFolderIconVisualConfiguration setGridCellSpacing:]
  -[SBHFolderIconVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHFolderIconVisualConfiguration descriptionBuilderWithMultilinePrefix:]


SBHStackConfigurationInteraction : NSObject /usr/lib/libSystem.B.dylib <SBHStackConfigurationViewControllerDelegate, UIAdaptivePresentationControllerDelegate, SBHIconViewConfigurationInteraction>
 @property  SBHStackConfiguration *configuration
 @property  SBIconView *iconView
 @property  SBHStackConfigurationViewController *configurationViewController
 @property  UIViewController *containerViewController
 @property  CHSAvocadoDescriptorProvider *descriptorProvider
 @property  <SBHIconViewConfigurationInteractionDelegate> *delegate
 @property  <SBHStackConfigurationInteractionDelegate> *stackConfigurationDelegate
 @property  <SBHStackConfigurationViewControllerAppearanceDelegate> *appearanceDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHStackConfigurationInteraction setIconView:]
  -[SBHStackConfigurationInteraction iconView]
  -[SBHStackConfigurationInteraction beginConfiguration]
  -[SBHStackConfigurationInteraction .cxx_destruct]
  -[SBHStackConfigurationInteraction setAppearanceDelegate:]
  -[SBHStackConfigurationInteraction appearanceDelegate]
  -[SBHStackConfigurationInteraction stackConfigurationViewControllerViewDidDisappear:]
  -[SBHStackConfigurationInteraction stackConfigurationViewController:didCommitStackConfiguration:]
  -[SBHStackConfigurationInteraction stackConfigurationViewController:widgetConfigurationInteractionForDataSource:]
  -[SBHStackConfigurationInteraction stackConfigurationViewControllerWantsToDismiss:]
  -[SBHStackConfigurationInteraction descriptorProvider]
  -[SBHStackConfigurationInteraction stackConfigurationViewController:didCommitWidgetConfigurationInteraction:]
  -[SBHStackConfigurationInteraction setDescriptorProvider:]
  -[SBHStackConfigurationInteraction initWithConfiguration:iconView:descriptorProvider:]
  -[SBHStackConfigurationInteraction setStackConfigurationDelegate:]
  -[SBHStackConfigurationInteraction endConfiguration]
  -[SBHStackConfigurationInteraction endConfigurationImmediately]
  -[SBHStackConfigurationInteraction configurationViewController]
  -[SBHStackConfigurationInteraction setConfigurationViewController:]
  -[SBHStackConfigurationInteraction configuration]
  -[SBHStackConfigurationInteraction endConfigurationAnimated:]
  -[SBHStackConfigurationInteraction stackConfigurationDelegate]
  -[SBHStackConfigurationInteraction containerViewController]
  -[SBHStackConfigurationInteraction setContainerViewController:]
  -[SBHStackConfigurationInteraction setDelegate:]
  -[SBHStackConfigurationInteraction delegate]
  -[SBHStackConfigurationInteraction setConfiguration:]
  -[SBHStackConfigurationInteraction presentationControllerDidDismiss:]


SBIconLabelImage : UIImage /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UIImage *legibilityImage
 @property  SBIconLabelImageParameters *parameters

  // class methods
  +[SBIconLabelImage attributedText:fitsInRect:textRect:]
  +[SBIconLabelImage needsLegibilityImageForParameters:]
  +[SBIconLabelImage imageWithParameters:pool:legibilityPool:]
  +[SBIconLabelImage _maxLegibilityImageSizeForLabelSize:]
  +[SBIconLabelImage applyKerning:whitespaceKerning:toAttributedString:]
  +[SBIconLabelImage legibilityStrengthForLegibilityStyle:]
  +[SBIconLabelImage imageWithParameters:]
  +[SBIconLabelImage legibilityImageForIconLabelImage:parameters:pool:]

  // instance methods
  -[SBIconLabelImage parameters]
  -[SBIconLabelImage baselineOffsetFromBottom]
  -[SBIconLabelImage alignmentRectInsets]
  -[SBIconLabelImage .cxx_destruct]
  -[SBIconLabelImage setLegibilityImage:]
  -[SBIconLabelImage hasBaseline]
  -[SBIconLabelImage legibilityImage]
  -[SBIconLabelImage _initWithCGImage:scale:orientation:parameters:alignmentRectInsets:baselineOffsetFromBottom:]


SBHShortcutsSingleElement : SBHCustomIconElement
  // class methods
  +[SBHShortcutsSingleElement elementIdentifier]

  // instance methods
  -[SBHShortcutsSingleElement icon:imageWithInfo:]
  -[SBHShortcutsSingleElement supportedGridSizeClassesForIcon:]
  -[SBHShortcutsSingleElement iconSupportsConfiguration:]
  -[SBHShortcutsSingleElement configurationStorageIdentifier]
  -[SBHShortcutsSingleElement containerBundleIdentifier]
  -[SBHShortcutsSingleElement displayName]


SBIconLabelViewFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBIconLabelViewFactory iconLabelViewWithSettings:imageParameters:forIconView:]
  +[SBIconLabelViewFactory canUseIconSimpleLabelViewToDisplayLabelWithSettings:imageParameters:forIconView:]
  +[SBIconLabelViewFactory canUseIconLabelView:toDisplayLabelWithSettings:imageParameters:forIconView:]


SBIconSimpleLabelView : UIImageView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconLabelView>
 @property  SBIconView *iconView
 @property  UIImage *image
 @property  SBIconLabelImageParameters *imageParameters

  // instance methods
  -[SBIconSimpleLabelView setIconView:]
  -[SBIconSimpleLabelView iconView]
  -[SBIconSimpleLabelView .cxx_destruct]
  -[SBIconSimpleLabelView initWithSettings:]
  -[SBIconSimpleLabelView updateIconLabelWithSettings:imageParameters:]
  -[SBIconSimpleLabelView imageParameters]


SBIconSuggestionLabelView : UIImageView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconLabelView>
 @property  SBIconView *iconView
 @property  UIImage *image
 @property  SBIconLabelImageParameters *imageParameters

  // instance methods
  -[SBIconSuggestionLabelView setIconView:]
  -[SBIconSuggestionLabelView iconView]
  -[SBIconSuggestionLabelView .cxx_destruct]
  -[SBIconSuggestionLabelView initWithSettings:]
  -[SBIconSuggestionLabelView updateIconLabelWithSettings:imageParameters:]
  -[SBIconSuggestionLabelView imageParameters]


SBIconLegibilityLabelView : _UILegibilityView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconLabelView>
 @property  SBIconLabelImageParameters *imageParameters
 @property  SBIconView *iconView
 @property  UIImage *image

  // instance methods
  -[SBIconLegibilityLabelView setIconView:]
  -[SBIconLegibilityLabelView iconView]
  -[SBIconLegibilityLabelView .cxx_destruct]
  -[SBIconLegibilityLabelView initWithSettings:]
  -[SBIconLegibilityLabelView updateIconLabelWithSettings:imageParameters:]
  -[SBIconLegibilityLabelView setImageParameters:]
  -[SBIconLegibilityLabelView imageParameters]


SBHSmartStackElement : SBHCustomIconElement
  // class methods
  +[SBHSmartStackElement elementIdentifier]

  // instance methods
  -[SBHSmartStackElement icon:imageWithInfo:]
  -[SBHSmartStackElement supportedGridSizeClassesForIcon:]
  -[SBHSmartStackElement displayName]


SBHIconRootTableViewController : UITableViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBHIconRootViewProviding>
 @property  SBFolder *folder
 @property  UIView *contentView
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIViewController *deepestFolderController
 @property  BOOL editing
 @property  BOOL scrolling
 @property  BOOL scrollTracking
 @property  long long currentPageIndex
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  NSSet *presentedIconLocations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconRootTableViewController setIdleText:]
  -[SBHIconRootTableViewController viewDidLoad]
  -[SBHIconRootTableViewController revealIcon:animated:completionHandler:]
  -[SBHIconRootTableViewController iconViewForIcon:location:]
  -[SBHIconRootTableViewController legibilitySettings]
  -[SBHIconRootTableViewController setIconImageCache:]
  -[SBHIconRootTableViewController cancelScrolling]
  -[SBHIconRootTableViewController isDisplayingIconView:inLocation:]
  -[SBHIconRootTableViewController tableView:numberOfRowsInSection:]
  -[SBHIconRootTableViewController tableView:didSelectRowAtIndexPath:]
  -[SBHIconRootTableViewController contentView]
  -[SBHIconRootTableViewController setEditing:]
  -[SBHIconRootTableViewController iconImageCache]
  -[SBHIconRootTableViewController .cxx_destruct]
  -[SBHIconRootTableViewController setCurrentPageIndex:animated:completion:]
  -[SBHIconRootTableViewController firstIconViewForIcon:]
  -[SBHIconRootTableViewController noteUserIsInteractingWithIcons]
  -[SBHIconRootTableViewController firstIconViewForIcon:inLocations:]
  -[SBHIconRootTableViewController isDisplayingIcon:inLocations:]
  -[SBHIconRootTableViewController currentPageIndex]
  -[SBHIconRootTableViewController tableView:cellForRowAtIndexPath:]
  -[SBHIconRootTableViewController isScrollTracking]
  -[SBHIconRootTableViewController isDisplayingIconView:]
  -[SBHIconRootTableViewController setLegibilitySettings:]
  -[SBHIconRootTableViewController deepestFolderController]
  -[SBHIconRootTableViewController numberOfSectionsInTableView:]
  -[SBHIconRootTableViewController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHIconRootTableViewController folderIconImageCache]
  -[SBHIconRootTableViewController setFolderIconImageCache:]
  -[SBHIconRootTableViewController presentedIconLocations]
  -[SBHIconRootTableViewController enumerateDisplayedIconViewsUsingBlock:]
  -[SBHIconRootTableViewController folder]
  -[SBHIconRootTableViewController isEditing]
  -[SBHIconRootTableViewController isDisplayingIcon:inLocation:]
  -[SBHIconRootTableViewController isDisplayingIcon:]
  -[SBHIconRootTableViewController firstIconViewForIcon:excludingLocations:]
  -[SBHIconRootTableViewController setFolder:]
  -[SBHIconRootTableViewController setEditing:animated:]
  -[SBHIconRootTableViewController setCurrentPageIndex:]
  -[SBHIconRootTableViewController isScrolling]
  -[SBHIconRootTableViewController isPresentingIconLocation:]


SBHClockApplicationIconImageView : SBLiveIconImageView
 @property  NSString *currentNumberingSystem

  // class methods
  +[SBHClockApplicationIconImageView initialize]
  +[SBHClockApplicationIconImageView precacheDataWithIconImageInfo:]
  +[SBHClockApplicationIconImageView systemNumberingSystem]
  +[SBHClockApplicationIconImageView _timerFired:]
  +[SBHClockApplicationIconImageView secondsHandColor]
  +[SBHClockApplicationIconImageView _handleTimeChange:]
  +[SBHClockApplicationIconImageView makeMinutesHandLayerWithImageSet:]
  +[SBHClockApplicationIconImageView makeDotLayerWithOuterDiameter:innerDiameter:isSeconds:imageSet:]
  +[SBHClockApplicationIconImageView overrideDate]
  +[SBHClockApplicationIconImageView configureHandLayer:metrics:]
  +[SBHClockApplicationIconImageView overrideDateOffset]
  +[SBHClockApplicationIconImageView makeMinutesHandImageWithMetrics:]
  +[SBHClockApplicationIconImageView makeDotImageWithOuterDiameter:innerDiameter:color:isSeconds:metrics:]
  +[SBHClockApplicationIconImageView imageSetForMetrics:]
  +[SBHClockApplicationIconImageView hoursMinutesHandColor]
  +[SBHClockApplicationIconImageView setOverrideDate:]
  +[SBHClockApplicationIconImageView setOverrideDateOffset:]
  +[SBHClockApplicationIconImageView iconImageWithImageInfo:includingMask:]
  +[SBHClockApplicationIconImageView makeComponentImageWithMetrics:size:path:fillColor:options:]
  +[SBHClockApplicationIconImageView makeSecondsHandLayerWithImageSet:]
  +[SBHClockApplicationIconImageView backgroundImageName]
  +[SBHClockApplicationIconImageView makeSecondsHandImageWithMetrics:]
  +[SBHClockApplicationIconImageView makeHoursHandLayerWithImageSet:]
  +[SBHClockApplicationIconImageView getMetrics:forIconImageInfo:]
  +[SBHClockApplicationIconImageView makeImageSetForMetrics:]
  +[SBHClockApplicationIconImageView effectiveDate]
  +[SBHClockApplicationIconImageView makeHoursHandImageWithMetrics:]
  +[SBHClockApplicationIconImageView makeComponentImageWithMetrics:size:actions:]

  // instance methods
  -[SBHClockApplicationIconImageView currentNumberingSystem]
  -[SBHClockApplicationIconImageView setIcon:location:animated:]
  -[SBHClockApplicationIconImageView getMetrics:]
  -[SBHClockApplicationIconImageView _setAnimating:]
  -[SBHClockApplicationIconImageView squareContentsImage]
  -[SBHClockApplicationIconImageView initWithFrame:]
  -[SBHClockApplicationIconImageView applyMetrics:]
  -[SBHClockApplicationIconImageView _updateUnanimatedWithComponents:]
  -[SBHClockApplicationIconImageView _timerFiredWithComponents:flags:]
  -[SBHClockApplicationIconImageView .cxx_destruct]
  -[SBHClockApplicationIconImageView contentsImage]
  -[SBHClockApplicationIconImageView prepareForReuse]
  -[SBHClockApplicationIconImageView updateUnanimated]
  -[SBHClockApplicationIconImageView setJittering:]
  -[SBHClockApplicationIconImageView setPaused:]
  -[SBHClockApplicationIconImageView setCurrentNumberingSystem:]
  -[SBHClockApplicationIconImageView localeDidChange:]
  -[SBHClockApplicationIconImageView updateAnimatingState]
  -[SBHClockApplicationIconImageView isAnimationAllowed]
  -[SBHClockApplicationIconImageView layoutSubviews]


SBHClockHandsImageSet : NSObject /usr/lib/libSystem.B.dylib
 @property  UIImage *seconds
 @property  UIImage *minutes
 @property  UIImage *hours
 @property  UIImage *hourMinuteDot
 @property  UIImage *secondDot

  // instance methods
  -[SBHClockHandsImageSet hours]
  -[SBHClockHandsImageSet setMetrics:]
  -[SBHClockHandsImageSet seconds]
  -[SBHClockHandsImageSet minutes]
  -[SBHClockHandsImageSet getMetrics:]
  -[SBHClockHandsImageSet .cxx_destruct]
  -[SBHClockHandsImageSet secondDot]
  -[SBHClockHandsImageSet setHours:]
  -[SBHClockHandsImageSet setSeconds:]
  -[SBHClockHandsImageSet hourMinuteDot]
  -[SBHClockHandsImageSet setMinutes:]
  -[SBHClockHandsImageSet setHourMinuteDot:]
  -[SBHClockHandsImageSet setSecondDot:]


SBPinchInteractionProgress : UIInteractionProgress /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <UIGestureRecognizerDelegate>
 @property  UIPinchGestureRecognizer *pinchGesture
 @property  double minPinchScale
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBPinchInteractionProgress minPinchScale]
  -[SBPinchInteractionProgress _handlePinchGesture:]
  -[SBPinchInteractionProgress .cxx_destruct]
  -[SBPinchInteractionProgress _updatePinchScale:]
  -[SBPinchInteractionProgress initWithPinchGesture:minPinchScale:]
  -[SBPinchInteractionProgress pinchGesture]


SBHAddWidgetSheetViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <UICollectionViewDelegate, UICollectionViewDataSource, UISearchResultsUpdating, _UISheetPresentationControllerDelegate, SBHAddWidgetSheetViewControllerDelegate, SBHWidgetWrapperViewControllerDelegate, UISearchControllerDelegate, SBHWidgetSheetViewControlling, SBHWidgetDragHandlerPassing>
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  <SBIconViewProviding> *iconViewProvider
 @property  SBHAddWidgetSheetAppCollectionViewCellConfigurator *appCellConfigurator
 @property  MTMaterialView *backgroundView
 @property  UICollectionView *collectionView
 @property  SBHWidgetSearchController *searchController
 @property  NSArray *searchBarGradientMaskLayers
 @property  NSArray *filteredApplicationWidgetCollections
 @property  NSArray *galleryItems
 @property  UIButton *closeButton
 @property  double horizontalSpacing
 @property  {NSDirectionalEdgeInsets=dddd} contentInsets
 @property  {NSDirectionalEdgeInsets=dddd} applicationsSectionInsets
 @property  double searchBarHeightAdjustment
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} keyboardFrameIntersect
 @property  SBHWidgetAddSheetTransitionContext *transitionContext
 @property  UIViewController *barSwipeViewController
 @property  <SBHAddWidgetSheetViewControllerDelegate> *delegate
 @property  <SBHWidgetSheetViewControllerPresenter> *presenter
 @property  NSArray *suggestedItems
 @property  NSArray *applicationWidgetCollections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SBHWidgetDragHandling> *widgetDragHandler

  // instance methods
  -[SBHAddWidgetSheetViewController searchController]
  -[SBHAddWidgetSheetViewController didDismissSearchController:]
  -[SBHAddWidgetSheetViewController updateSearchResultsForSearchController:]
  -[SBHAddWidgetSheetViewController setSearchController:]
  -[SBHAddWidgetSheetViewController setPresenter:]
  -[SBHAddWidgetSheetViewController collectionView:cellForItemAtIndexPath:]
  -[SBHAddWidgetSheetViewController _keyboardWillShow:]
  -[SBHAddWidgetSheetViewController collectionView:didSelectItemAtIndexPath:]
  -[SBHAddWidgetSheetViewController setListLayoutProvider:]
  -[SBHAddWidgetSheetViewController backgroundView]
  -[SBHAddWidgetSheetViewController contentInsets]
  -[SBHAddWidgetSheetViewController setContentInsets:]
  -[SBHAddWidgetSheetViewController setBackgroundView:]
  -[SBHAddWidgetSheetViewController collectionView:numberOfItemsInSection:]
  -[SBHAddWidgetSheetViewController setCloseButton:]
  -[SBHAddWidgetSheetViewController numberOfSectionsInCollectionView:]
  -[SBHAddWidgetSheetViewController setCollectionView:]
  -[SBHAddWidgetSheetViewController addWidgetSheetViewControllerDidCancel:]
  -[SBHAddWidgetSheetViewController addWidgetSheetViewController:didSelectWidgetIconView:]
  -[SBHAddWidgetSheetViewController widgetDragHandler]
  -[SBHAddWidgetSheetViewController appCellConfigurator]
  -[SBHAddWidgetSheetViewController setAppCellConfigurator:]
  -[SBHAddWidgetSheetViewController .cxx_destruct]
  -[SBHAddWidgetSheetViewController setIconViewProvider:]
  -[SBHAddWidgetSheetViewController transitionContext]
  -[SBHAddWidgetSheetViewController presentationControllerWillDismiss:]
  -[SBHAddWidgetSheetViewController viewWillLayoutSubviews]
  -[SBHAddWidgetSheetViewController presenter]
  -[SBHAddWidgetSheetViewController supportedInterfaceOrientations]
  -[SBHAddWidgetSheetViewController collectionView]
  -[SBHAddWidgetSheetViewController setSuggestedItems:]
  -[SBHAddWidgetSheetViewController suggestedItems]
  -[SBHAddWidgetSheetViewController closeButton]
  -[SBHAddWidgetSheetViewController setTransitionContext:]
  -[SBHAddWidgetSheetViewController viewDidAppear:]
  -[SBHAddWidgetSheetViewController _makeGalleryItemsFromHomeScreenItems:]
  -[SBHAddWidgetSheetViewController _sectionIndexForSection:]
  -[SBHAddWidgetSheetViewController _sizeClasses]
  -[SBHAddWidgetSheetViewController _collectionViewLayoutGallerySectionWithWidth:sizeClasses:]
  -[SBHAddWidgetSheetViewController _collectionViewLayoutApplicationsSectionWithWidth:]
  -[SBHAddWidgetSheetViewController _updateSearchBarContentInsets]
  -[SBHAddWidgetSheetViewController _layoutSearchBarGradientMaskLayers]
  -[SBHAddWidgetSheetViewController _backgroundTapped:]
  -[SBHAddWidgetSheetViewController _addBarSwipeView]
  -[SBHAddWidgetSheetViewController _keyboardWillDismiss:]
  -[SBHAddWidgetSheetViewController addWidgetSheetViewControllerWillAppear:]
  -[SBHAddWidgetSheetViewController addWidgetSheetViewControllerDidAppear:]
  -[SBHAddWidgetSheetViewController addWidgetSheetViewControllerWillDisappear:]
  -[SBHAddWidgetSheetViewController addWidgetSheetViewControllerDidDisappear:]
  -[SBHAddWidgetSheetViewController _isSearchVisible]
  -[SBHAddWidgetSheetViewController galleryItems]
  -[SBHAddWidgetSheetViewController applicationWidgetCollectionsToUse]
  -[SBHAddWidgetSheetViewController _collectionViewGalleryCellForItemAtIndexPath:]
  -[SBHAddWidgetSheetViewController _shouldUseTableViewCellStyle]
  -[SBHAddWidgetSheetViewController _presentDetailSheetForGalleryCellAtIndexPath:]
  -[SBHAddWidgetSheetViewController _currentPresenter]
  -[SBHAddWidgetSheetViewController _presentDetailSheetViewControllerForApplicationWidgetCollection:]
  -[SBHAddWidgetSheetViewController _presentDetailSheetViewControllerForApplicationWidgetCollection:configuredWithGalleryItem:selectedSizeClass:fromCell:atIndexPath:]
  -[SBHAddWidgetSheetViewController _newWrapperViewControllerWithGalleryItem:sizeClass:]
  -[SBHAddWidgetSheetViewController listLayoutProvider]
  -[SBHAddWidgetSheetViewController setGalleryItems:]
  -[SBHAddWidgetSheetViewController _itemsArrayWithSizeClasses:nSmallsGroup:mediumAndSmallGroup:usesThreeColumnLayout:]
  -[SBHAddWidgetSheetViewController initWithListLayoutProvider:iconViewProvider:suggestedItems:]
  -[SBHAddWidgetSheetViewController scrollViewDidScroll:]
  -[SBHAddWidgetSheetViewController setBarSwipeViewController:]
  -[SBHAddWidgetSheetViewController barSwipeViewController]
  -[SBHAddWidgetSheetViewController applicationWidgetCollections]
  -[SBHAddWidgetSheetViewController setApplicationWidgetCollections:]
  -[SBHAddWidgetSheetViewController searchBarGradientMaskLayers]
  -[SBHAddWidgetSheetViewController setSearchBarGradientMaskLayers:]
  -[SBHAddWidgetSheetViewController filteredApplicationWidgetCollections]
  -[SBHAddWidgetSheetViewController horizontalSpacing]
  -[SBHAddWidgetSheetViewController setFilteredApplicationWidgetCollections:]
  -[SBHAddWidgetSheetViewController setHorizontalSpacing:]
  -[SBHAddWidgetSheetViewController applicationsSectionInsets]
  -[SBHAddWidgetSheetViewController setApplicationsSectionInsets:]
  -[SBHAddWidgetSheetViewController searchBarHeightAdjustment]
  -[SBHAddWidgetSheetViewController setSearchBarHeightAdjustment:]
  -[SBHAddWidgetSheetViewController keyboardFrameIntersect]
  -[SBHAddWidgetSheetViewController setKeyboardFrameIntersect:]
  -[SBHAddWidgetSheetViewController viewWillAppear:]
  -[SBHAddWidgetSheetViewController closeButtonTapped:]
  -[SBHAddWidgetSheetViewController setDelegate:]
  -[SBHAddWidgetSheetViewController viewDidDisappear:]
  -[SBHAddWidgetSheetViewController viewWillDisappear:]
  -[SBHAddWidgetSheetViewController viewDidLayoutSubviews]
  -[SBHAddWidgetSheetViewController delegate]
  -[SBHAddWidgetSheetViewController _updateCollectionViewInsets]
  -[SBHAddWidgetSheetViewController iconViewProvider]
  -[SBHAddWidgetSheetViewController loadView]


SBHIconViewContextMenuWrapperViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <WGWidgetViewControllerDelegate, SBHRecentsDocumentExtensionProviderDelegate>
 @property  UIViewController *contentViewController
 @property  NSString *groupNameBase
 @property  double backgroundScale
 @property  double continuousCornerRadius
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconViewContextMenuWrapperViewController viewDidLoad]
  -[SBHIconViewContextMenuWrapperViewController setContinuousCornerRadius:]
  -[SBHIconViewContextMenuWrapperViewController setBackgroundScale:]
  -[SBHIconViewContextMenuWrapperViewController continuousCornerRadius]
  -[SBHIconViewContextMenuWrapperViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[SBHIconViewContextMenuWrapperViewController .cxx_destruct]
  -[SBHIconViewContextMenuWrapperViewController groupNameBase]
  -[SBHIconViewContextMenuWrapperViewController setContentViewController:]
  -[SBHIconViewContextMenuWrapperViewController setGroupNameBase:]
  -[SBHIconViewContextMenuWrapperViewController _applyContinuousCornerRadius]
  -[SBHIconViewContextMenuWrapperViewController _applyPreferredContentSizeChange:]
  -[SBHIconViewContextMenuWrapperViewController recentsDocumentExtensionViewControllerRequestsDismiss:]
  -[SBHIconViewContextMenuWrapperViewController viewWillAppear:]
  -[SBHIconViewContextMenuWrapperViewController backgroundScale]
  -[SBHIconViewContextMenuWrapperViewController remoteViewControllerDidConnectForWidgetViewController:]
  -[SBHIconViewContextMenuWrapperViewController viewWillDisappear:]
  -[SBHIconViewContextMenuWrapperViewController remoteViewControllerViewDidAppearForWidgetViewController:]
  -[SBHIconViewContextMenuWrapperViewController contentViewController]


SBRootFolder : SBFolder
 @property  SBIconListModel *dock
 @property  SBIconListModel *todayList
 @property  SBIconListModel *favoriteTodayList
 @property  SBIconListModel *ignoredList
 @property  <SBRootFolderDelegate> *delegate
 @property  SBHIconModel *model
 @property  BOOL supportsBadging
 @property  BOOL supportsDock
 @property  BOOL supportsTodayList
 @property  BOOL supportsIgnoredList
 @property  BOOL containsWidgetIconExcludingTodayList
 @property  BOOL containsVisibleWidgetIconExcludingTodayList

  // class methods
  +[SBRootFolder isRootFolderClass]

  // instance methods
  -[SBRootFolder canAddIconCount:startingAtList:]
  -[SBRootFolder isRootFolder]
  -[SBRootFolder supportsDock]
  -[SBRootFolder indexOfList:]
  -[SBRootFolder isIconAtIndexPathInFavoriteTodayList:]
  -[SBRootFolder _compactsFirstList]
  -[SBRootFolder isIconAtIndexPathInTodayList:]
  -[SBRootFolder _setIgnoredList:]
  -[SBRootFolder dock]
  -[SBRootFolder isIconAtIndexPathInIgnoredList:]
  -[SBRootFolder removeList:]
  -[SBRootFolder _setTodayList:]
  -[SBRootFolder nodeDescriptionWithPrefix:]
  -[SBRootFolder supportsBadging]
  -[SBRootFolder _didExplicitlyRemoveHiddenLists:]
  -[SBRootFolder ignoredList]
  -[SBRootFolder todayList]
  -[SBRootFolder nodeIdentifier]
  -[SBRootFolder canRemoveIcons]
  -[SBRootFolder supportsIgnoredList]
  -[SBRootFolder _specialIndexOfList:]
  -[SBRootFolder supportsTodayList]
  -[SBRootFolder isIconAtIndexPathInDock:]
  -[SBRootFolder canBounceIcon:]
  -[SBRootFolder isValidListIndex:]
  -[SBRootFolder _setFavoriteTodayList:]
  -[SBRootFolder .cxx_destruct]
  -[SBRootFolder containsVisibleWidgetIconExcludingTodayList]
  -[SBRootFolder visibleIndexOfList:]
  -[SBRootFolder setModel:]
  -[SBRootFolder icons]
  -[SBRootFolder supportsTodayPage]
  -[SBRootFolder favoriteTodayList]
  -[SBRootFolder containsWidgetIconExcludingTodayList]
  -[SBRootFolder canEditDisplayName]
  -[SBRootFolder listAtIndex:]
  -[SBRootFolder _setDock:]
  -[SBRootFolder enumerateExtraListsUsingBlock:]
  -[SBRootFolder hiddenIndexOfList:]
  -[SBRootFolder setDelegate:]
  -[SBRootFolder model]
  -[SBRootFolder delegate]
  -[SBRootFolder folderContainingIndexPath:relativeIndexPath:]
  -[SBRootFolder isIconAtIndexPathInDock:includingDockFolders:]


SBIconListViewMultiStageAnimator : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayoutAnimating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewMultiStageAnimator init]
  -[SBIconListViewMultiStageAnimator iconListView:wantsAnimatedLayoutForIconView:withParameters:alongsideAnimationBlock:]
  -[SBIconListViewMultiStageAnimator iconListView:wantsAnimatedRemovalForIconViews:completionHandler:]


SBHLibraryPodFolderController : SBFolderController <SBHLibraryCategoriesFolderDataSourceDelegate, UIGestureRecognizerDelegate, SBHLibraryChildViewController, SBHLibraryPodIconZoomAnimationContaining, SBHLibrarySearchControllerContentViewControllerScrollViewProvider>
 @property  UITapGestureRecognizer *tapToDismissRecognizer
 @property  ATXAppDirectoryClient *loggingClient
 @property  SBHLibraryCategoryMap *libraryCategoryMap
 @property  SBHLibraryCategoriesFolderDataSource *dataSource
 @property  <SBHLibraryPodFolderControllerDelegate> *podFolderControllerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHIconImageCache *iconImageCache
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBRootFolder *rootFolder
 @property  NSSet *presentedIconLocations
 @property  _UILegibilitySettings *legibilitySettings
 @property  SBHIconModel *iconModel
 @property  SBIconListView *currentIconListView
 @property  SBIconListView *dockIconListView
 @property  UIView *containerView
 @property  UIWindow *animationWindow
 @property  UIView *fallbackIconContainerView
 @property  NSArray *extraViewsContainers
 @property  NSArray *extraViews
 @property  BOOL shouldAnimateLastTwoViewsAsOne
 @property  BOOL shouldAnimateFirstTwoViewsAsOne
 @property  <BSUIScrollViewDelegate> *librarySearchControllerScrollViewDelegate

  // class methods
  +[SBHLibraryPodFolderController configurationClass]
  +[SBHLibraryPodFolderController _contentViewClass]
  +[SBHLibraryPodFolderController iconLocation]

  // instance methods
  -[SBHLibraryPodFolderController viewDidLoad]
  -[SBHLibraryPodFolderController setListLayoutProvider:]
  -[SBHLibraryPodFolderController iconViewForIcon:location:]
  -[SBHLibraryPodFolderController setLibrarySearchControllerScrollViewDelegate:]
  -[SBHLibraryPodFolderController setIconImageCache:]
  -[SBHLibraryPodFolderController iconListView:didRemoveIconView:]
  -[SBHLibraryPodFolderController isDisplayingIconView:inLocation:]
  -[SBHLibraryPodFolderController iconListView:didAddIconView:]
  -[SBHLibraryPodFolderController iconImageCache]
  -[SBHLibraryPodFolderController .cxx_destruct]
  -[SBHLibraryPodFolderController firstIconViewForIcon:]
  -[SBHLibraryPodFolderController setContentAlpha:]
  -[SBHLibraryPodFolderController _isViewControllerVisible]
  -[SBHLibraryPodFolderController firstIconViewForIcon:inLocations:]
  -[SBHLibraryPodFolderController isOpen]
  -[SBHLibraryPodFolderController isDisplayingIcon:inLocations:]
  -[SBHLibraryPodFolderController shouldOpenFolderIcon:]
  -[SBHLibraryPodFolderController configureInnerFolderControllerConfiguration:]
  -[SBHLibraryPodFolderController pushNestedViewController:animated:withCompletion:]
  -[SBHLibraryPodFolderController isDisplayingIconView:]
  -[SBHLibraryPodFolderController iconViewDidHandleTap:]
  -[SBHLibraryPodFolderController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHLibraryPodFolderController presentedIconLocations]
  -[SBHLibraryPodFolderController enumerateDisplayedIconViewsUsingBlock:]
  -[SBHLibraryPodFolderController dataSource]
  -[SBHLibraryPodFolderController containerView]
  -[SBHLibraryPodFolderController listLayoutProvider]
  -[SBHLibraryPodFolderController isDisplayingIcon:inLocation:]
  -[SBHLibraryPodFolderController podFolderView]
  -[SBHLibraryPodFolderController _reloadAppIcons]
  -[SBHLibraryPodFolderController tapToDismissRecognizer]
  -[SBHLibraryPodFolderController podFolderControllerDelegate]
  -[SBHLibraryPodFolderController _ourFolderContainsFolder:]
  -[SBHLibraryPodFolderController _nestingViewControllerForPushing]
  -[SBHLibraryPodFolderController loggingClient]
  -[SBHLibraryPodFolderController initWithConfiguration:]
  -[SBHLibraryPodFolderController enumerateViewControllersUsingBlock:]
  -[SBHLibraryPodFolderController libraryCategoryMap]
  -[SBHLibraryPodFolderController enumerateNonSuggestionsOrRecentsViewControllersUsingBlock:]
  -[SBHLibraryPodFolderController setLibraryCategoryMap:]
  -[SBHLibraryPodFolderController categoriesDataSource:shouldAnimateLayoutForCategories:]
  -[SBHLibraryPodFolderController categoriesDataSourceNeedsAnimatedReload:]
  -[SBHLibraryPodFolderController folderIconViewForIcon:folderRelativeIconIndexPath:]
  -[SBHLibraryPodFolderController firstNonSuggestionsOrRecentsIconViewForIcon:]
  -[SBHLibraryPodFolderController setPodFolderControllerDelegate:]
  -[SBHLibraryPodFolderController librarySearchControllerScrollViewDelegate]
  -[SBHLibraryPodFolderController viewWillAppear:]
  -[SBHLibraryPodFolderController isDisplayingIcon:]
  -[SBHLibraryPodFolderController firstIconViewForIcon:excludingLocations:]
  -[SBHLibraryPodFolderController controllerClassForFolder:]
  -[SBHLibraryPodFolderController gestureRecognizer:shouldReceiveTouch:]
  -[SBHLibraryPodFolderController contentScrollView]
  -[SBHLibraryPodFolderController handleTapGesture:]
  -[SBHLibraryPodFolderController currentIconListView]
  -[SBHLibraryPodFolderController isPresentingIconLocation:]


SBHLibraryPodCategoryFolderController : SBHLibraryPodFolderController
  // class methods
  +[SBHLibraryPodCategoryFolderController _contentViewClass]
  +[SBHLibraryPodCategoryFolderController iconLocation]

  // instance methods
  -[SBHLibraryPodCategoryFolderController viewDidLoad]
  -[SBHLibraryPodCategoryFolderController iconListView:didRemoveIconView:]
  -[SBHLibraryPodCategoryFolderController viewDidAppear:]
  -[SBHLibraryPodCategoryFolderController _logCategoryVisibilityChangedTo:]
  -[SBHLibraryPodCategoryFolderController viewDidDisappear:]
  -[SBHLibraryPodCategoryFolderController contentScrollView]
  -[SBHLibraryPodCategoryFolderController handleTapGesture:]
  -[SBHLibraryPodCategoryFolderController currentIconListView]


SBHTableViewIconLibrary : NSObject /usr/lib/libSystem.B.dylib <SBHIconLibraryQueryEngineObserver>
 @property  SBHIconModel *iconModel
 @property  <SBHIconLibraryQueryEngine> *queryEngine
 @property  SBHIconLibraryQueryResult *lastQueryResults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHTableViewIconLibrary .cxx_destruct]
  -[SBHTableViewIconLibrary queryEngine]
  -[SBHTableViewIconLibrary iconModel]
  -[SBHTableViewIconLibrary initWithIconModel:queryEngine:]
  -[SBHTableViewIconLibrary executeQuery:completion:]
  -[SBHTableViewIconLibrary _dispatchQueryResult:]
  -[SBHTableViewIconLibrary engine:queryResultsWereUpdated:]
  -[SBHTableViewIconLibrary engine:failedToExecuteQuery:withError:]
  -[SBHTableViewIconLibrary lastQueryResults]
  -[SBHTableViewIconLibrary removeObserver:]
  -[SBHTableViewIconLibrary executeQuery:]
  -[SBHTableViewIconLibrary initWithIconModel:]
  -[SBHTableViewIconLibrary addObserver:]


SBRootFolderController : SBFolderController <SBFramewiseInteractiveTransitionAnimatorDelegate, SBViewControllerTransitionContextDelegate, SBRootFolderViewDelegate, SBSearchGestureObserver, SBHAddWidgetSheetViewControllerDelegate, UIGestureRecognizerDelegate, SBHWidgetSheetViewControllerPresenter, SBHStackConfigurationViewControllerAppearanceDelegate, SBHWidgetDragHandling, SBRootFolderPageStateTransitioning, SBHIconRootViewProviding>
 @property  BOOL managesStatusBarWidth
 @property  SBRootFolderView *rootFolderView
 @property  SBSearchGesture *searchGesture
 @property  <BSInvalidatable> *searchGestureIconViewTouchCancellationAssertion
 @property  long long pageState
 @property  _SBRootFolderPageTransitionHandle *currentTransitionHandle
 @property  <SBRootFolderPageTransition> *searchGestureTransition
 @property  <SBRootFolderPageTransition> *implicitScrollTransition
 @property  SBHRecentsDocumentExtensionProvider *recentsDocumentExtensionProvider
 @property  <BSInvalidatable> *iconImageViewControllerKeepStaticForPageManagementVisibleAssertion
 @property  <BSInvalidatable> *iconImageViewControllerKeepStaticForPageManagementDismissalAssertion
 @property  long long todayViewPageIndex
 @property  long long favoriteTodayViewPageIndex
 @property  long long sidebarPageIndex
 @property  long long trailingCustomViewPageIndex
 @property  CHSAvocadoDescriptorProvider *avocadoDescriptorProvider
 @property  <SBRootFolderControllerDelegate> *folderDelegate
 @property  SBRootFolder *folder
 @property  unsigned long dockEdge
 @property  double dockHeight
 @property  BOOL dockExternal
 @property  BOOL dockPinnedForRotation
 @property  NSSet *nonDockPresentedIconLocations
 @property  BOOL showsDoneButtonWhileEditing
 @property  BOOL showsAddWidgetButtonWhileEditing
 @property  BOOL suppressesExtraEditingButtons
 @property  UIViewController *pullDownSearchViewController
 @property  UIViewController<SBHLegibility> *todayViewController
 @property  UIViewController<SBHLibraryProvider> *trailingCustomViewController
 @property  UIViewController<SBHSidebarProvider> *sidebarViewController
 @property  double spotlightFirstIconRowOffset
 @property  <SBRootFolderControllerAccessoryViewControllerDelegate> *accessoryViewControllerDelegate
 @property  unsigned long presentationSource
 @property  NSArray *folderControllers
 @property  BOOL allowsAutoscrollToTodayView
 @property  BOOL todayViewVisible
 @property  BOOL favoriteTodayViewVisible
 @property  BOOL todayViewTransitioning
 @property  BOOL todayViewPageHidden
 @property  BOOL pullDownSearchVisible
 @property  BOOL pullDownSearchVisibleOrTransitioningToVisible
 @property  BOOL pullDownSearchTransitioning
 @property  BOOL pullDownSearchVisibleOrTransitioning
 @property  BOOL todayPage
 @property  BOOL todayViewVisibleOrTransitionDestination
 @property  BOOL todayViewSearchVisible
 @property  BOOL todayViewSearchTransitioning
 @property  BOOL todayViewSearchVisibleOrTransitioning
 @property  BOOL anySearchVisible
 @property  BOOL anySearchVisibleOrTransitioning
 @property  UIView *searchableTodayWrapperView
 @property  UIView *searchBackdropView
 @property  double sidebarVisibilityProgress
 @property  double effectiveSidebarVisibilityProgress
 @property  BOOL sidebarVisible
 @property  BOOL sidebarEffectivelyVisible
 @property  BOOL sidebarPinned
 @property  BOOL sidebarVisibilityGestureActive
 @property  SBFParallaxSettings *parallaxSettings
 @property  BOOL pageManagementUIVisible
 @property  BOOL occludedByOverlay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SBHWidgetDragHandling> *widgetDragHandler
 @property  double titledButtonsAlpha
 @property  BOOL transitioningPageState
 @property  long long destinationPageState
 @property  UIView *contentView
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIViewController *deepestFolderController
 @property  BOOL editing
 @property  BOOL scrolling
 @property  BOOL scrollTracking
 @property  long long currentPageIndex
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  NSSet *presentedIconLocations

  // class methods
  +[SBRootFolderController configurationClass]
  +[SBRootFolderController _contentViewClass]
  +[SBRootFolderController _shouldForwardViewWillTransitionToSize]
  +[SBRootFolderController iconLocation]
  +[SBRootFolderController dockIconLocation]
  +[SBRootFolderController pageStateTransitionSnapshotForScrollOffset:pageWidth:pageSpacing:pages:pageCount:userInterfaceLayoutDirection:currentPageState:]

  // instance methods
  -[SBRootFolderController isDisplayingIconView:options:]
  -[SBRootFolderController setIdleText:]
  -[SBRootFolderController parallaxSettings]
  -[SBRootFolderController isOccludedByOverlay]
  -[SBRootFolderController avocadoDescriptorProvider]
  -[SBRootFolderController addPageStateObserver:]
  -[SBRootFolderController isSidebarVisible]
  -[SBRootFolderController isSidebarPinned]
  -[SBRootFolderController destinationPageState]
  -[SBRootFolderController setTitledButtonsAlpha:]
  -[SBRootFolderController viewDidLoad]
  -[SBRootFolderController setOccludedByOverlay:]
  -[SBRootFolderController sidebarViewController]
  -[SBRootFolderController sidebarVisibilityProgress]
  -[SBRootFolderController trailingCustomViewController]
  -[SBRootFolderController firstIconViewForIcon:options:]
  -[SBRootFolderController setDockEdge:]
  -[SBRootFolderController dockEdge]
  -[SBRootFolderController isDisplayingIcon:options:]
  -[SBRootFolderController setTodayViewController:]
  -[SBRootFolderController showsDoneButtonWhileEditing]
  -[SBRootFolderController todayViewController]
  -[SBRootFolderController enumeratePageStateObserversUsingBlock:]
  -[SBRootFolderController searchGesture:startedShowing:]
  -[SBRootFolderController searchGesture]
  -[SBRootFolderController dockHeight]
  -[SBRootFolderController interactionControllerForDismissal:]
  -[SBRootFolderController prepareToOpen]
  -[SBRootFolderController animationControllerForDismissedController:]
  -[SBRootFolderController iconViewForIcon:location:]
  -[SBRootFolderController _depth]
  -[SBRootFolderController animationControllerForPresentedController:presentingController:sourceController:]
  -[SBRootFolderController transitionDidFinish:]
  -[SBRootFolderController recentsDocumentExtensionProvider]
  -[SBRootFolderController trailingCustomViewPageIndex]
  -[SBRootFolderController dismissSpotlightAnimated:completionHandler:]
  -[SBRootFolderController isTodayViewPageHidden]
  -[SBRootFolderController addWidgetSheetViewControllerDidCancel:]
  -[SBRootFolderController addWidgetSheetViewController:didSelectWidgetIconView:]
  -[SBRootFolderController widgetDragHandler]
  -[SBRootFolderController folderController:didEndEditingTitle:]
  -[SBRootFolderController isDisplayingIconView:inLocation:]
  -[SBRootFolderController allowsAutoscrollToTodayView]
  -[SBRootFolderController dockIconListView]
  -[SBRootFolderController beginModifyingDockOffscreenFractionForReason:]
  -[SBRootFolderController searchGesture:completedShowing:]
  -[SBRootFolderController searchGesture:resetAnimated:]
  -[SBRootFolderController isOnTodayPage]
  -[SBRootFolderController searchableTodayWrapperView]
  -[SBRootFolderController enterPageManagementUIWithCompletionHandler:]
  -[SBRootFolderController .cxx_destruct]
  -[SBRootFolderController setTodayViewPageHidden:]
  -[SBRootFolderController isDockExternal]
  -[SBRootFolderController setCurrentPageIndex:animated:completion:]
  -[SBRootFolderController setFolderDelegate:]
  -[SBRootFolderController effectiveSidebarVisibilityProgress]
  -[SBRootFolderController isSidebarEffectivelyVisible]
  -[SBRootFolderController setSidebarPinned:]
  -[SBRootFolderController shouldAnimateLastTwoViewsAsOne]
  -[SBRootFolderController transitionWillReverse:]
  -[SBRootFolderController transitionWillFinish:]
  -[SBRootFolderController _makeContentViewWithConfiguration:]
  -[SBRootFolderController _viewControllersToNotifyForViewObscuration]
  -[SBRootFolderController removePageStateObserver:]
  -[SBRootFolderController prepareToClose]
  -[SBRootFolderController viewWillTransitionToSize:forOperation:withTransitionCoordinator:]
  -[SBRootFolderController orientationDidChange:]
  -[SBRootFolderController viewControllersForPageIndex:]
  -[SBRootFolderController todayViewPageIndex]
  -[SBRootFolderController closesAfterDragExits]
  -[SBRootFolderController canAcceptFolderIconDrags]
  -[SBRootFolderController _listIndexIsVisible:]
  -[SBRootFolderController shouldOpenFolderIcon:]
  -[SBRootFolderController disablesScrollingWhileIconDragIsDropping]
  -[SBRootFolderController folderViewWillBeginDragging:]
  -[SBRootFolderController folderView:currentPageIndexWillChange:]
  -[SBRootFolderController folderView:currentPageIndexDidChange:]
  -[SBRootFolderController folderViewWillBeginScrolling:]
  -[SBRootFolderController folderViewWillEndDragging:]
  -[SBRootFolderController folderViewWillUpdatePageDuringScrolling:]
  -[SBRootFolderController folderViewDidScroll:]
  -[SBRootFolderController folderViewDidEndScrolling:]
  -[SBRootFolderController folderView:willAnimateScrollToPageIndex:]
  -[SBRootFolderController setLegibilitySettings:]
  -[SBRootFolderController titledButtonsAlpha]
  -[SBRootFolderController folderView:didBeginEditingTitle:]
  -[SBRootFolderController folderView:didEndEditingTitle:]
  -[SBRootFolderController suspendsWallpaperAnimationWhileOpen]
  -[SBRootFolderController statusBarInsetsForOrientation:]
  -[SBRootFolderController stackConfigurationViewControllerViewWillAppear:]
  -[SBRootFolderController stackConfigurationViewControllerViewDidAppear:]
  -[SBRootFolderController stackConfigurationViewControllerViewWillDisappear:]
  -[SBRootFolderController stackConfigurationViewControllerViewDidDisappear:]
  -[SBRootFolderController isSidebarVisibilityGestureActive]
  -[SBRootFolderController pageState]
  -[SBRootFolderController prepareToTearDown]
  -[SBRootFolderController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBRootFolderController togglePageManagementUIWithCompletionHandler:]
  -[SBRootFolderController presentedIconLocations]
  -[SBRootFolderController exitPageManagementUIWithCompletionHandler:]
  -[SBRootFolderController enumerateDisplayedIconViewsUsingBlock:]
  -[SBRootFolderController pageTransitionProgress]
  -[SBRootFolderController setSidebarViewController:]
  -[SBRootFolderController presenterType]
  -[SBRootFolderController setSuppressesEditingStateForListView:]
  -[SBRootFolderController setAllowsAutoscrollToTodayView:]
  -[SBRootFolderController addWidgetSheetViewControllerWillAppear:]
  -[SBRootFolderController addWidgetSheetViewControllerDidAppear:]
  -[SBRootFolderController addWidgetSheetViewControllerWillDisappear:]
  -[SBRootFolderController addWidgetSheetViewControllerDidDisappear:]
  -[SBRootFolderController shouldAnimateFirstTwoViewsAsOne]
  -[SBRootFolderController favoriteTodayViewPageIndex]
  -[SBRootFolderController addWidgetSheetViewController:widgetIconForDescriptor:sizeClass:]
  -[SBRootFolderController isDisplayingIcon:inLocation:]
  -[SBRootFolderController showsAddWidgetButtonWhileEditing]
  -[SBRootFolderController initWithConfiguration:]
  -[SBRootFolderController viewWillAppear:]
  -[SBRootFolderController pullDownSearchViewController]
  -[SBRootFolderController rootFolderView]
  -[SBRootFolderController setPageState:]
  -[SBRootFolderController _todayViewVisibilityProgress]
  -[SBRootFolderController _trailingCustomViewVisibilityProgress]
  -[SBRootFolderController updateViewsAfterOrientationChange]
  -[SBRootFolderController isTodayViewSearchVisible]
  -[SBRootFolderController isTodayViewVisibleOrTransitionDestination]
  -[SBRootFolderController isAnySearchVisibleOrTransitioning]
  -[SBRootFolderController updateExtraButtonVisibilityAnimated:]
  -[SBRootFolderController isTodayViewVisible]
  -[SBRootFolderController isFavoriteTodayViewVisible]
  -[SBRootFolderController setManagesStatusBarWidth:]
  -[SBRootFolderController presentWidgetEditingViewControllerFromViewController:]
  -[SBRootFolderController setCurrentPageIndex:animated:]
  -[SBRootFolderController _addShortcutsSpecialAvocadoToApplicationWidgetCollections:]
  -[SBRootFolderController _addSiriSuggestionsSpecialAvocadosToApplicationWidgetCollections:]
  -[SBRootFolderController _addFilesSpecialAvocadosToApplicationWidgetCollections:]
  -[SBRootFolderController _addBatteriesSpecialAvocadosToApplicationWidgetCollections:]
  -[SBRootFolderController _vendorNameForBundleIdentifier:]
  -[SBRootFolderController _additionalMinimumOffsetForSheetPresentation]
  -[SBRootFolderController _insertSmartStackSpecialAvocadosAtTheTopOfApplicationWidgetCollections:]
  -[SBRootFolderController _shouldAddSpecialAvocadoOfType:]
  -[SBRootFolderController widgetIconForDescriptor:sizeClass:]
  -[SBRootFolderController _widgetIconForDescriptors:sizeClass:]
  -[SBRootFolderController _handleWidgetSheetViewControllerWillAppear:]
  -[SBRootFolderController _handleWidgetSheetViewControllerDidAppear:]
  -[SBRootFolderController folderControllers]
  -[SBRootFolderController _handleWidgetSheetViewControllerWillDisappear:]
  -[SBRootFolderController _handleWidgetSheetViewControllerDidDisappear:]
  -[SBRootFolderController viewControllerForPageState:]
  -[SBRootFolderController _isDockSwitchedForOrientation:]
  -[SBRootFolderController _dockEdgeForInterfaceOrientation:]
  -[SBRootFolderController _dockLayoutReversedForInterfaceOrientation:]
  -[SBRootFolderController _configureDockViewForOrientationWithoutAnimation:]
  -[SBRootFolderController _configureAppStatusBarInsetsForOrientation:]
  -[SBRootFolderController configureAppStatusBarInsets]
  -[SBRootFolderController managesStatusBarWidth]
  -[SBRootFolderController isAnySearchVisible]
  -[SBRootFolderController implicitScrollTransition]
  -[SBRootFolderController _configureTodayViewPageForOrientation:]
  -[SBRootFolderController _todayViewPageIsVisibleForOrientation:]
  -[SBRootFolderController _shouldUseDockAnimationWindowForRotationToInterfaceOrientation:duration:]
  -[SBRootFolderController _configureViewForOrientationWithoutAnimation:]
  -[SBRootFolderController _shouldSlideDockOutDuringRotationFromOrientation:toOrientation:]
  -[SBRootFolderController _configureDockViewForOrientationDuringAnimation:dockAnimationWindow:]
  -[SBRootFolderController updateStateTransitionsDuringScrollingScrollView:pageBounceComparator:]
  -[SBRootFolderController setImplicitScrollTransition:]
  -[SBRootFolderController dockListView]
  -[SBRootFolderController transitionWillBegin:]
  -[SBRootFolderController searchGesture:changedPercentComplete:]
  -[SBRootFolderController isTransitiongBetweenPageStateVerticalGroups]
  -[SBRootFolderController pageStateTransitionSnapshotForScrollOffset:]
  -[SBRootFolderController isTransitioningPageState]
  -[SBRootFolderController currentTransitionHandle]
  -[SBRootFolderController isPullDownSearchVisibleOrTransitioning]
  -[SBRootFolderController canTransitionPageStateToState:]
  -[SBRootFolderController isAnySearchTransitioning]
  -[SBRootFolderController performPageStateTransitionToState:reason:animated:completionHandler:]
  -[SBRootFolderController performDefaultPageStateTransitionToState:reason:animated:completionHandler:]
  -[SBRootFolderController beginPageStateTransitionToState:reason:animated:interactive:]
  -[SBRootFolderController isPullDownSearchVisible]
  -[SBRootFolderController isPullDownSearchVisibleOrTransitioningToVisible]
  -[SBRootFolderController isPullDownSearchTransitioning]
  -[SBRootFolderController isTodayViewSearchTransitioning]
  -[SBRootFolderController visibilityProgressTowardPageStateMatchingTest:]
  -[SBRootFolderController setCurrentTransitionHandle:]
  -[SBRootFolderController willBeginTransitionToState:animated:interactive:]
  -[SBRootFolderController _anySearchVisibilityProgress]
  -[SBRootFolderController accessoryViewControllerDelegate]
  -[SBRootFolderController _checkForImproperScrollOffsetForPageState]
  -[SBRootFolderController defaultTransitionForTransitioningFromPageState:toPageState:animated:interactive:]
  -[SBRootFolderController didContinueTransitionToState:progress:]
  -[SBRootFolderController setSearchGestureTransition:]
  -[SBRootFolderController willEndTransitionToState:successfully:]
  -[SBRootFolderController didEndTransitionFromState:toState:successfully:]
  -[SBRootFolderController _cancelTouchesForSearchGestureOnIconView:]
  -[SBRootFolderController searchGestureTransition]
  -[SBRootFolderController _invalidateSearchGestureIconViewTouchCancellationAssertion]
  -[SBRootFolderController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBRootFolderController viewControllerForTransitioningFromPageState:toPageState:]
  -[SBRootFolderController presentationSource]
  -[SBRootFolderController viewDidDisappear:]
  -[SBRootFolderController _widgetIconAnimationExtraViewsProvider]
  -[SBRootFolderController transitionContext:updateTransitionProgress:]
  -[SBRootFolderController rootFolderView:wantsToAdjustTodayContentForEdgeBounceForScrollOffset:]
  -[SBRootFolderController distanceToTopOfSpotlightIconsForRootFolderView:]
  -[SBRootFolderController maxExternalDockHeightForRootFolderView:]
  -[SBRootFolderController externalDockHeightForRootFolderView:]
  -[SBRootFolderController preferredExternalDockVerticalMarginForRootFolderView:]
  -[SBRootFolderController backgroundViewForDockForRootFolderView:]
  -[SBRootFolderController backgroundViewForEditingDoneButtonForRootFolderView:]
  -[SBRootFolderController rootFolderView:didChangeSidebarVisibilityProgress:]
  -[SBRootFolderController rootFolderView:didChangeEffectiveSidebarVisibilityProgress:]
  -[SBRootFolderController rootFolderView:didEndSidebarVisibilityTransitionWithEffectiveProgress:]
  -[SBRootFolderController rootFolderView:didOverscrollOnFirstPageByAmount:]
  -[SBRootFolderController isDisplayingIcon:]
  -[SBRootFolderController rootFolderView:didEndOverscrollOnFirstPageWithVelocity:translation:]
  -[SBRootFolderController rootFolderView:didOverscrollOnLastPageByAmount:]
  -[SBRootFolderController rootFolderView:didEndOverscrollOnLastPageWithVelocity:translation:]
  -[SBRootFolderController rootFolderViewWantsToEndEditing:]
  -[SBRootFolderController rootFolderViewWantsWidgetEditingViewControllerPresented:]
  -[SBRootFolderController rootFolderView:willPresentPageManagementUsingAnimator:]
  -[SBRootFolderController rootFolderView:willDismissPageManagementUsingAnimator:]
  -[SBRootFolderController rootFolderViewDidDismissPageManagement:]
  -[SBRootFolderController rootFolderViewIfLoaded]
  -[SBRootFolderController isDisplayingIcon:inLocation:options:]
  -[SBRootFolderController widgetIconForGalleryItem:sizeClass:]
  -[SBRootFolderController didBeginDraggingWidgetIcon:]
  -[SBRootFolderController setSuppressesExtraEditingButtons:]
  -[SBRootFolderController setPullDownSearchViewController:]
  -[SBRootFolderController spotlightFirstIconRowOffset]
  -[SBRootFolderController nonDockPresentedIconLocations]
  -[SBRootFolderController setParallaxDisabled:forReason:]
  -[SBRootFolderController _configureAppStatusBarInsetsAnimated:]
  -[SBRootFolderController presentSpotlightAnimated:completionHandler:]
  -[SBRootFolderController isTodayViewSearchVisibleOrTransitioning]
  -[SBRootFolderController isTodayViewOrTodayViewSearchVisible]
  -[SBRootFolderController isTodayViewTransitioning]
  -[SBRootFolderController isTransitioningBetweenIconAndTodayView]
  -[SBRootFolderController isTransitioningBetweenIconPageAndTodayPage]
  -[SBRootFolderController isTransitioningBetweenIconAndTrailingCustomView]
  -[SBRootFolderController isTransitioningBetweenIconPageAndTrailingCustomPage]
  -[SBRootFolderController isTransitioningBetweenHorizontalPageStates]
  -[SBRootFolderController suppressesExtraEditingButtons]
  -[SBRootFolderController pageTransitionHandle:updateCurrentPageStateTransitionToProgress:]
  -[SBRootFolderController pageTransitionHandle:endPageStateTransitionSuccessfully:]
  -[SBRootFolderController _setupDebugTapGestureRecognizerForDockIconListView:]
  -[SBRootFolderController setAccessoryViewControllerDelegate:]
  -[SBRootFolderController folderController:didBeginEditingTitle:]
  -[SBRootFolderController setEffectiveSidebarVisibilityProgress:]
  -[SBRootFolderController searchGestureIconViewTouchCancellationAssertion]
  -[SBRootFolderController setSearchGestureIconViewTouchCancellationAssertion:]
  -[SBRootFolderController setRecentsDocumentExtensionProvider:]
  -[SBRootFolderController iconImageViewControllerKeepStaticForPageManagementVisibleAssertion]
  -[SBRootFolderController setIconImageViewControllerKeepStaticForPageManagementVisibleAssertion:]
  -[SBRootFolderController iconImageViewControllerKeepStaticForPageManagementDismissalAssertion]
  -[SBRootFolderController setIconImageViewControllerKeepStaticForPageManagementDismissalAssertion:]
  -[SBRootFolderController searchBackdropView]
  -[SBRootFolderController isDockPinnedForRotation]
  -[SBRootFolderController setSidebarVisibilityProgress:]
  -[SBRootFolderController setPresentationSource:]
  -[SBRootFolderController setEditing:animated:]
  -[SBRootFolderController isDockVisible]
  -[SBRootFolderController extraViewsContainers]
  -[SBRootFolderController isPageManagementUIVisible]
  -[SBRootFolderController interactionControllerForPresentation:]
  -[SBRootFolderController extraViews]
  -[SBRootFolderController setSearchGesture:]
  -[SBRootFolderController _doPageManagementEducation]
  -[SBRootFolderController descriptionBuilderWithMultilinePrefix:]
  -[SBRootFolderController isPresentingIconLocation:]
  -[SBRootFolderController sidebarPageIndex]
  -[SBRootFolderController _reduceTransparencyChanged]


SBRootFolderDockAnimationViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  long long forcedInterfaceOrientation

  // instance methods
  -[SBRootFolderDockAnimationViewController shouldAutorotate]
  -[SBRootFolderDockAnimationViewController supportedInterfaceOrientations]
  -[SBRootFolderDockAnimationViewController setForcedInterfaceOrientation:]
  -[SBRootFolderDockAnimationViewController forcedInterfaceOrientation]


_SBRootFolderDockAnimationViewControllerWindow : UIWindow /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
  // instance methods
  -[_SBRootFolderDockAnimationViewControllerWindow _shouldControlAutorotation]


SBRootFolderControllerDefaultTransitionContext : SBViewControllerTransitionContext

SBRootFolderControllerTransitionInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  long long sourcePageState
 @property  long long destinationPageState

  // instance methods
  -[SBRootFolderControllerTransitionInfo destinationPageState]
  -[SBRootFolderControllerTransitionInfo setSourcePageState:]
  -[SBRootFolderControllerTransitionInfo setDestinationPageState:]
  -[SBRootFolderControllerTransitionInfo sourcePageState]


_SBRootFolderPageTransitionHandle : NSObject /usr/lib/libSystem.B.dylib <SBRootFolderPageTransition, BSDescriptionProviding>
 @property  NSString *reason
 @property  SBRootFolderController *folderController
 @property  long long sourcePageState
 @property  long long destinationPageState
 @property  double pageTransitionProgress
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBRootFolderPageTransitionHandle destinationPageState]
  -[_SBRootFolderPageTransitionHandle setValid:]
  -[_SBRootFolderPageTransitionHandle setSourcePageState:]
  -[_SBRootFolderPageTransitionHandle .cxx_destruct]
  -[_SBRootFolderPageTransitionHandle succinctDescriptionBuilder]
  -[_SBRootFolderPageTransitionHandle isValid]
  -[_SBRootFolderPageTransitionHandle initWithFolderController:destinationPageState:reason:]
  -[_SBRootFolderPageTransitionHandle succinctDescription]
  -[_SBRootFolderPageTransitionHandle setTransitionProgress:]
  -[_SBRootFolderPageTransitionHandle folderController]
  -[_SBRootFolderPageTransitionHandle pageTransitionProgress]
  -[_SBRootFolderPageTransitionHandle endTransitionSuccessfully:]
  -[_SBRootFolderPageTransitionHandle setDestinationPageState:]
  -[_SBRootFolderPageTransitionHandle sourcePageState]
  -[_SBRootFolderPageTransitionHandle reason]
  -[_SBRootFolderPageTransitionHandle descriptionWithMultilinePrefix:]
  -[_SBRootFolderPageTransitionHandle setPageTransitionProgress:]
  -[_SBRootFolderPageTransitionHandle descriptionBuilderWithMultilinePrefix:]


SBHAppPredictionsElement : SBHCustomIconElement
  // class methods
  +[SBHAppPredictionsElement elementIdentifier]

  // instance methods
  -[SBHAppPredictionsElement icon:imageWithInfo:]
  -[SBHAppPredictionsElement supportedGridSizeClassesForIcon:]
  -[SBHAppPredictionsElement iconShouldIgnoreOtherDataSources:]
  -[SBHAppPredictionsElement displayName]


SBHCustomIconElement : NSObject /usr/lib/libSystem.B.dylib <SBLeafIconDataSource>
 @property  NSString *containerBundleIdentifier
 @property  NSString *displayName
 @property  BOOL suggestion
 @property  NSString *uniqueIdentifier
 @property  NSString *configurationStorageIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHCustomIconElement elementIdentifier]

  // instance methods
  -[SBHCustomIconElement priorityForIcon:]
  -[SBHCustomIconElement icon:displayNameForLocation:]
  -[SBHCustomIconElement init]
  -[SBHCustomIconElement initWithUniqueIdentifier:]
  -[SBHCustomIconElement copyWithUniqueIdentifier]
  -[SBHCustomIconElement .cxx_destruct]
  -[SBHCustomIconElement uniqueIdentifier]
  -[SBHCustomIconElement containerBundleIdentifier]
  -[SBHCustomIconElement isSuggestion]
  -[SBHCustomIconElement displayName]
  -[SBHCustomIconElement setSuggestion:]


SBHFeatherBlurNavigationBar : UINavigationBar /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  SBHFeatherBlurView *featherBlurBackgroundView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} gradientMaskFrame
 @property  double sb_minimumNavbarHeight
 @property  double sb_maximumNavbarHeight
 @property  BOOL allowsAnimatedUpdating

  // instance methods
  -[SBHFeatherBlurNavigationBar _updateLabel]
  -[SBHFeatherBlurNavigationBar initWithFrame:]
  -[SBHFeatherBlurNavigationBar .cxx_destruct]
  -[SBHFeatherBlurNavigationBar traitCollectionDidChange:]
  -[SBHFeatherBlurNavigationBar sb_minimumNavbarHeight]
  -[SBHFeatherBlurNavigationBar sb_maximumNavbarHeight]
  -[SBHFeatherBlurNavigationBar gradientMaskFrame]
  -[SBHFeatherBlurNavigationBar setAllowsAnimatedUpdating:]
  -[SBHFeatherBlurNavigationBar _updateHeights]
  -[SBHFeatherBlurNavigationBar _updateAppearance]
  -[SBHFeatherBlurNavigationBar _calculateCompactNavBarFrame]
  -[SBHFeatherBlurNavigationBar _calculateFeatherBlurBackgroundViewFrame]
  -[SBHFeatherBlurNavigationBar _capturedTinyTextLabelContainerView]
  -[SBHFeatherBlurNavigationBar _capturedLargeTextLabelContainerView]
  -[SBHFeatherBlurNavigationBar featherBlurBackgroundView]
  -[SBHFeatherBlurNavigationBar setFeatherBlurBackgroundView:]
  -[SBHFeatherBlurNavigationBar allowsAnimatedUpdating]
  -[SBHFeatherBlurNavigationBar layoutSubviews]
  -[SBHFeatherBlurNavigationBar barPosition]


SBFolderControllerAnimationContext : NSObject /usr/lib/libSystem.B.dylib
 @property  UIScreen *screen
 @property  UIWindow *animationWindow
 @property  UIView *fallbackIconContainer

  // class methods
  +[SBFolderControllerAnimationContext contextWithScreen:animationWindow:fallbackIconContainer:]

  // instance methods
  -[SBFolderControllerAnimationContext screen]
  -[SBFolderControllerAnimationContext .cxx_destruct]
  -[SBFolderControllerAnimationContext fallbackIconContainer]
  -[SBFolderControllerAnimationContext animationWindow]
  -[SBFolderControllerAnimationContext initWithScreen:animationWindow:fallbackIconContainer:]


SBHLibraryCategory : NSObject /usr/lib/libSystem.B.dylib <SBLeafIconDataSource, SBIconObserver, NSFastEnumeration>
 @property  NSString *uniqueIdentifier
 @property  NSString *configurationStorageIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHLibraryCategoryIdentifier *categoryIdentifier
 @property  long long overflowBehavior
 @property  NSString *leafIdentifier
 @property  SBHLibraryAdditionalItemsIndicatorIcon *additionalItemsIndicatorIcon
 @property  NSArray *icons
 @property  SBHLibraryCategoryFolder *compactPodFolder
 @property  SBHLibraryCategoryFolder *compactPodAdditionalItemsFolder
 @property  SBHLibraryCategoryFolder *expandedPodFolder
 @property  <SBIconDelegate> *iconDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibraryCategory setCategoryIdentifier:]
  -[SBHLibraryCategory priorityForIcon:]
  -[SBHLibraryCategory categoryIdentifier]
  -[SBHLibraryCategory icon:displayNameForLocation:]
  -[SBHLibraryCategory init]
  -[SBHLibraryCategory iconAccessoriesDidUpdate:]
  -[SBHLibraryCategory .cxx_destruct]
  -[SBHLibraryCategory icons]
  -[SBHLibraryCategory leafIdentifier]
  -[SBHLibraryCategory isEqualToCategory:]
  -[SBHLibraryCategory countByEnumeratingWithState:objects:count:]
  -[SBHLibraryCategory labelAccessoryTypeForIcon:]
  -[SBHLibraryCategory iconSupportsUninstall:]
  -[SBHLibraryCategory isEqual:]
  -[SBHLibraryCategory expandedPodFolder]
  -[SBHLibraryCategory overflowBehavior]
  -[SBHLibraryCategory additionalItemsIndicatorIcon]
  -[SBHLibraryCategory compactPodFolder]
  -[SBHLibraryCategory removeObserver:]
  -[SBHLibraryCategory addObserver:]
  -[SBHLibraryCategory iconDelegate]
  -[SBHLibraryCategory _localizedDisplayNameChangedTo:]
  -[SBHLibraryCategory _noteCategoryWillUpdate]
  -[SBHLibraryCategory compactPodAdditionalItemsFolder]
  -[SBHLibraryCategory _buildDisplayedIconsForFolder:icons:]
  -[SBHLibraryCategory _noteFolderWillUpdateIcons:]
  -[SBHLibraryCategory _noteFolderDidUpdateIcons:]
  -[SBHLibraryCategory _refreshAggregateIconLabelAccessoryType]
  -[SBHLibraryCategory _noteCategoryDidUpdate]
  -[SBHLibraryCategory updateCategoryWithIcons:]
  -[SBHLibraryCategory setOverflowBehavior:]
  -[SBHLibraryCategory setIconDelegate:]


SBHIconAnimationSettings : PTSettings /System/Library/PrivateFrameworks/CoreMaterial.framework/CoreMaterial
 @property  SBFAnimationSettings *centralAnimationSettings

  // class methods
  +[SBHIconAnimationSettings settingsControllerModule]

  // instance methods
  -[SBHIconAnimationSettings setDefaultValues]
  -[SBHIconAnimationSettings centralAnimationSettings]
  -[SBHIconAnimationSettings .cxx_destruct]
  -[SBHIconAnimationSettings setCentralAnimationSettings:]


SBHIconZoomSettings : SBHIconAnimationSettings
 @property  BOOL labelAlphaWithZoom

  // class methods
  +[SBHIconZoomSettings settingsControllerModule]

  // instance methods
  -[SBHIconZoomSettings setDefaultValues]
  -[SBHIconZoomSettings labelAlphaWithZoom]
  -[SBHIconZoomSettings setLabelAlphaWithZoom:]


SBHCenterZoomSettings : SBHIconZoomSettings
 @property  BOOL preferCenterOfIconGrid
 @property  double centerRowCoordinate
 @property  long long distanceEffect
 @property  double firstHopIncrement
 @property  double hopIncrementAcceleration
 @property  double dockMass
 @property  BOOL zoomViewBelowIcons

  // class methods
  +[SBHCenterZoomSettings settingsControllerModule]

  // instance methods
  -[SBHCenterZoomSettings setDefaultValues]
  -[SBHCenterZoomSettings dockMass]
  -[SBHCenterZoomSettings distanceEffect]
  -[SBHCenterZoomSettings firstHopIncrement]
  -[SBHCenterZoomSettings hopIncrementAcceleration]
  -[SBHCenterZoomSettings preferCenterOfIconGrid]
  -[SBHCenterZoomSettings centerRowCoordinate]
  -[SBHCenterZoomSettings setDockMass:]
  -[SBHCenterZoomSettings setCenterRowCoordinate:]
  -[SBHCenterZoomSettings setPreferCenterOfIconGrid:]
  -[SBHCenterZoomSettings setDistanceEffect:]
  -[SBHCenterZoomSettings setFirstHopIncrement:]
  -[SBHCenterZoomSettings setHopIncrementAcceleration:]
  -[SBHCenterZoomSettings zoomViewBelowIcons]
  -[SBHCenterZoomSettings setZoomViewBelowIcons:]


SBHCenterAppZoomSettings : SBHCenterZoomSettings
 @property  double appHeadStart
 @property  SBFAnimationSettings *appZoomSettings
 @property  SBFAnimationSettings *appFadeSettings

  // class methods
  +[SBHCenterAppZoomSettings settingsControllerModule]

  // instance methods
  -[SBHCenterAppZoomSettings setDefaultValues]
  -[SBHCenterAppZoomSettings .cxx_destruct]
  -[SBHCenterAppZoomSettings appHeadStart]
  -[SBHCenterAppZoomSettings setAppHeadStart:]
  -[SBHCenterAppZoomSettings appZoomSettings]
  -[SBHCenterAppZoomSettings setAppZoomSettings:]
  -[SBHCenterAppZoomSettings appFadeSettings]
  -[SBHCenterAppZoomSettings setAppFadeSettings:]


SBHScaleZoomSettings : SBHIconZoomSettings
 @property  SBFAnimationSettings *outerFolderFadeSettings
 @property  BOOL crossfadeWithZoom
 @property  SBFAnimationSettings *crossfadeSettings
 @property  BOOL fadesIconGrid
 @property  SBFAnimationSettings *iconGridFadeSettings

  // class methods
  +[SBHScaleZoomSettings settingsControllerModule]

  // instance methods
  -[SBHScaleZoomSettings setDefaultValues]
  -[SBHScaleZoomSettings crossfadeSettings]
  -[SBHScaleZoomSettings effectiveCrossfadeAnimationSettings]
  -[SBHScaleZoomSettings fadesIconGrid]
  -[SBHScaleZoomSettings iconGridFadeSettings]
  -[SBHScaleZoomSettings .cxx_destruct]
  -[SBHScaleZoomSettings outerFolderFadeSettings]
  -[SBHScaleZoomSettings setCrossfadeWithZoom:]
  -[SBHScaleZoomSettings setFadesIconGrid:]
  -[SBHScaleZoomSettings crossfadeWithZoom]
  -[SBHScaleZoomSettings setOuterFolderFadeSettings:]
  -[SBHScaleZoomSettings setCrossfadeSettings:]
  -[SBHScaleZoomSettings setIconGridFadeSettings:]


SBHCrossfadeZoomSettings : SBHScaleZoomSettings
 @property  BOOL morphWithZoom
 @property  SBFAnimationSettings *morphSettings

  // class methods
  +[SBHCrossfadeZoomSettings settingsControllerModule]

  // instance methods
  -[SBHCrossfadeZoomSettings setDefaultValues]
  -[SBHCrossfadeZoomSettings effectiveMorphAnimationSettings]
  -[SBHCrossfadeZoomSettings .cxx_destruct]
  -[SBHCrossfadeZoomSettings setMorphWithZoom:]
  -[SBHCrossfadeZoomSettings morphWithZoom]
  -[SBHCrossfadeZoomSettings morphSettings]
  -[SBHCrossfadeZoomSettings setMorphSettings:]


SBHFolderZoomSettings : SBHScaleZoomSettings
 @property  SBFAnimationSettings *innerFolderFadeSettings

  // class methods
  +[SBHFolderZoomSettings settingsControllerModule]

  // instance methods
  -[SBHFolderZoomSettings setDefaultValues]
  -[SBHFolderZoomSettings .cxx_destruct]
  -[SBHFolderZoomSettings innerFolderFadeSettings]
  -[SBHFolderZoomSettings setInnerFolderFadeSettings:]


SBHReducedMotionFadeSettings : SBHIconAnimationSettings
  // class methods
  +[SBHReducedMotionFadeSettings settingsControllerModule]

  // instance methods
  -[SBHReducedMotionFadeSettings setDefaultValues]


SBHUnlockSettings : SBHCenterAppSuspendSettings
  // class methods
  +[SBHUnlockSettings settingsControllerModule]

  // instance methods
  -[SBHUnlockSettings setDefaultValues]


SBHCenterAppLaunchSettings : SBHCenterAppZoomSettings
  // instance methods
  -[SBHCenterAppLaunchSettings setDefaultValues]


SBHCenterAppSuspendSettings : SBHCenterAppZoomSettings
  // instance methods
  -[SBHCenterAppSuspendSettings setDefaultValues]


SBHCenterAcceleratedAppSuspendSettings : SBHCenterAppSuspendSettings
  // instance methods
  -[SBHCenterAcceleratedAppSuspendSettings setDefaultValues]


SBHCrossfadeAppTransitionSettings : SBHCrossfadeZoomSettings
 @property  SBFAnimationSettings *appSnapshotCornerRadiusSettings

  // class methods
  +[SBHCrossfadeAppTransitionSettings settingsControllerModule]

  // instance methods
  -[SBHCrossfadeAppTransitionSettings setDefaultValues]
  -[SBHCrossfadeAppTransitionSettings appSnapshotCornerRadiusSettings]
  -[SBHCrossfadeAppTransitionSettings .cxx_destruct]
  -[SBHCrossfadeAppTransitionSettings setAppSnapshotCornerRadiusSettings:]


SBHCrossfadeAppLaunchSettings : SBHCrossfadeAppTransitionSettings
  // instance methods
  -[SBHCrossfadeAppLaunchSettings setDefaultValues]


SBHCrossfadeAppSuspendSettings : SBHCrossfadeAppTransitionSettings
  // instance methods
  -[SBHCrossfadeAppSuspendSettings setDefaultValues]


SBHCrossfadeAcceleratedAppSuspendSettings : SBHCrossfadeAppSuspendSettings
  // instance methods
  -[SBHCrossfadeAcceleratedAppSuspendSettings setDefaultValues]


SBHFolderOpenSettings : SBHFolderZoomSettings
  // instance methods
  -[SBHFolderOpenSettings setDefaultValues]


SBHFolderCloseSettings : SBHFolderZoomSettings
  // instance methods
  -[SBHFolderCloseSettings setDefaultValues]


SBHLibraryPodZoomSettings : SBHFolderZoomSettings
 @property  SBFAnimationSettings *innerFolderEdgeZoomSettings
 @property  SBFAnimationSettings *innerFolderCenterZoomSettings

  // class methods
  +[SBHLibraryPodZoomSettings settingsControllerModule]
  +[SBHLibraryPodZoomSettings _defaultCrossfadeSettings]
  +[SBHLibraryPodZoomSettings _defaultCentralAnimationSettings]
  +[SBHLibraryPodZoomSettings _defaultInnerFolderZoomAnimationSettings]
  +[SBHLibraryPodZoomSettings _defaultInnerFolderZoomDelay]

  // instance methods
  -[SBHLibraryPodZoomSettings setDefaultValues]
  -[SBHLibraryPodZoomSettings .cxx_destruct]
  -[SBHLibraryPodZoomSettings innerFolderEdgeZoomSettings]
  -[SBHLibraryPodZoomSettings setInnerFolderEdgeZoomSettings:]
  -[SBHLibraryPodZoomSettings innerFolderCenterZoomSettings]
  -[SBHLibraryPodZoomSettings setInnerFolderCenterZoomSettings:]


SBHLibraryPodOpenSettings : SBHLibraryPodZoomSettings
  // instance methods
  -[SBHLibraryPodOpenSettings setDefaultValues]


SBHLibraryPodCloseSettings : SBHLibraryPodZoomSettings
  // instance methods
  -[SBHLibraryPodCloseSettings setDefaultValues]


SBHIconAnimationRootSettings : PTSettings /System/Library/PrivateFrameworks/CoreMaterial.framework/CoreMaterial
 @property  SBHReducedMotionFadeSettings *reducedMotionSettings
 @property  SBHUnlockSettings *unlockSettings
 @property  SBHCenterAppLaunchSettings *centerLaunchSettings
 @property  SBHCenterAppSuspendSettings *centerSuspendSettings
 @property  SBHCenterAcceleratedAppSuspendSettings *centerAcceleratedSuspendSettings
 @property  SBHCrossfadeAppLaunchSettings *crossfadeLaunchSettings
 @property  SBHCrossfadeAppSuspendSettings *crossfadeSuspendSettings
 @property  SBHCrossfadeAcceleratedAppSuspendSettings *crossfadeAcceleratedSuspendSettings
 @property  double maxAppSuspendHintProgress
 @property  double maxAppLaunchWallpaperScale
 @property  SBHFolderOpenSettings *folderOpenSettings
 @property  SBHFolderCloseSettings *folderCloseSettings
 @property  double maxFolderCloseHintProgress
 @property  SBHLibraryPodOpenSettings *libraryPodOpenSettings
 @property  SBHLibraryPodCloseSettings *libraryPodCloseSettings

  // class methods
  +[SBHIconAnimationRootSettings settingsControllerModule]

  // instance methods
  -[SBHIconAnimationRootSettings setDefaultValues]
  -[SBHIconAnimationRootSettings reducedMotionSettings]
  -[SBHIconAnimationRootSettings setReducedMotionSettings:]
  -[SBHIconAnimationRootSettings setCenterAcceleratedSuspendSettings:]
  -[SBHIconAnimationRootSettings centerLaunchSettings]
  -[SBHIconAnimationRootSettings crossfadeAcceleratedSuspendSettings]
  -[SBHIconAnimationRootSettings setLibraryPodOpenSettings:]
  -[SBHIconAnimationRootSettings .cxx_destruct]
  -[SBHIconAnimationRootSettings setMaxAppLaunchWallpaperScale:]
  -[SBHIconAnimationRootSettings setCenterLaunchSettings:]
  -[SBHIconAnimationRootSettings setCrossfadeLaunchSettings:]
  -[SBHIconAnimationRootSettings setMaxFolderCloseHintProgress:]
  -[SBHIconAnimationRootSettings setFolderCloseSettings:]
  -[SBHIconAnimationRootSettings crossfadeLaunchSettings]
  -[SBHIconAnimationRootSettings setUnlockSettings:]
  -[SBHIconAnimationRootSettings maxFolderCloseHintProgress]
  -[SBHIconAnimationRootSettings maxAppSuspendHintProgress]
  -[SBHIconAnimationRootSettings setLibraryPodCloseSettings:]
  -[SBHIconAnimationRootSettings libraryPodOpenSettings]
  -[SBHIconAnimationRootSettings libraryPodCloseSettings]
  -[SBHIconAnimationRootSettings setCrossfadeAcceleratedSuspendSettings:]
  -[SBHIconAnimationRootSettings maxAppLaunchWallpaperScale]
  -[SBHIconAnimationRootSettings crossfadeSuspendSettings]
  -[SBHIconAnimationRootSettings centerAcceleratedSuspendSettings]
  -[SBHIconAnimationRootSettings setCenterSuspendSettings:]
  -[SBHIconAnimationRootSettings setCrossfadeSuspendSettings:]
  -[SBHIconAnimationRootSettings folderCloseSettings]
  -[SBHIconAnimationRootSettings setMaxAppSuspendHintProgress:]
  -[SBHIconAnimationRootSettings unlockSettings]
  -[SBHIconAnimationRootSettings setFolderOpenSettings:]
  -[SBHIconAnimationRootSettings centerSuspendSettings]
  -[SBHIconAnimationRootSettings folderOpenSettings]


SBHLibrarySearchController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBHSearchBarDelegate, BSUIScrollViewDelegate, PTSettingsKeyObserver>
 @property  SBHSearchTextField *searchField
 @property  SBFFluidBehaviorSettings *searchAnimationSettings
 @property  BOOL scrollViewBeganScrollingFromTop
 @property  long long searchState
 @property  NSArray *contentViewGradientMaskLayers
 @property  NSArray *searchResultsGradientMaskLayers
 @property  SBHSearchBar *searchBar
 @property  SBHIconLibraryTableViewController *searchResultsController
 @property  UIViewController<SBHLibrarySearchControllerContentViewControllerScrollViewProvider> *contentViewController
 @property  <SBHSearchResultsUpdating> *searchResultsUpdater
 @property  <SBHLibrarySearchControllerDelegate> *delegate
 @property  UIView *searchDimmingView
 @property  BOOL active
 @property  BOOL searchFieldEditing
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibrarySearchController searchResultsController]
  -[SBHLibrarySearchController searchBar]
  -[SBHLibrarySearchController viewDidLoad]
  -[SBHLibrarySearchController searchField]
  -[SBHLibrarySearchController setListLayoutProvider:]
  -[SBHLibrarySearchController settings:changedValueForKey:]
  -[SBHLibrarySearchController _edgeInsetsForChildViewController:insetsAreAbsolute:]
  -[SBHLibrarySearchController shouldAutomaticallyForwardAppearanceMethods]
  -[SBHLibrarySearchController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBHLibrarySearchController .cxx_destruct]
  -[SBHLibrarySearchController preferredContentSize]
  -[SBHLibrarySearchController searchBarTextDidEndEditing:]
  -[SBHLibrarySearchController setActive:animated:]
  -[SBHLibrarySearchController viewWillLayoutSubviews]
  -[SBHLibrarySearchController searchBarShouldEndEditing:]
  -[SBHLibrarySearchController setActive:]
  -[SBHLibrarySearchController isActive]
  -[SBHLibrarySearchController scrollViewWillBeginDragging:]
  -[SBHLibrarySearchController viewDidAppear:]
  -[SBHLibrarySearchController searchBarShouldReturn:]
  -[SBHLibrarySearchController _dismissPresentation:]
  -[SBHLibrarySearchController searchResultsUpdater]
  -[SBHLibrarySearchController searchBarCancelButtonClicked:]
  -[SBHLibrarySearchController setSearchResultsUpdater:]
  -[SBHLibrarySearchController searchBar:textDidChange:]
  -[SBHLibrarySearchController searchBarShouldBeginEditing:]
  -[SBHLibrarySearchController listLayoutProvider]
  -[SBHLibrarySearchController scrollViewDidScroll:]
  -[SBHLibrarySearchController viewWillAppear:]
  -[SBHLibrarySearchController setSearchDimmingView:]
  -[SBHLibrarySearchController searchState]
  -[SBHLibrarySearchController setDelegate:]
  -[SBHLibrarySearchController viewDidDisappear:]
  -[SBHLibrarySearchController viewWillDisappear:]
  -[SBHLibrarySearchController delegate]
  -[SBHLibrarySearchController _setupSearchAnimationSettings]
  -[SBHLibrarySearchController _calculateSearchBarFrame:]
  -[SBHLibrarySearchController _layoutSearchViewsWithMode:withCompletion:]
  -[SBHLibrarySearchController resetSearchController:clearSearchResults:resetSearchBarTransformAndAlpha:]
  -[SBHLibrarySearchController _performPresentation:]
  -[SBHLibrarySearchController _layoutSearchViews]
  -[SBHLibrarySearchController _rubberbandingOffsetForContentOffset:]
  -[SBHLibrarySearchController _searchPresentationProgressForOffset:]
  -[SBHLibrarySearchController _setUpFeatherMaskLayerMatchMoveAnimations]
  -[SBHLibrarySearchController _didPresentSearch]
  -[SBHLibrarySearchController contentScrollView]
  -[SBHLibrarySearchController _willPresentSearchAnimated:]
  -[SBHLibrarySearchController _willDismissSearchAnimated:]
  -[SBHLibrarySearchController _didDismissSearch]
  -[SBHLibrarySearchController isTransitionInProgress]
  -[SBHLibrarySearchController isSearchFieldEditing]
  -[SBHLibrarySearchController endEditingForSearchField]
  -[SBHLibrarySearchController initWithSearchResultsController:contentViewController:]
  -[SBHLibrarySearchController searchDimmingView]
  -[SBHLibrarySearchController searchAnimationSettings]
  -[SBHLibrarySearchController setSearchAnimationSettings:]
  -[SBHLibrarySearchController scrollViewBeganScrollingFromTop]
  -[SBHLibrarySearchController setScrollViewBeganScrollingFromTop:]
  -[SBHLibrarySearchController contentViewGradientMaskLayers]
  -[SBHLibrarySearchController searchResultsGradientMaskLayers]
  -[SBHLibrarySearchController contentViewController]


SBHRootFolderVisualConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  double idleTextVerticalOffset
 @property  double pageControlVerticalOffset
 @property  {CGSize=dd} pageControlFrameInset
 @property  {CGSize=dd} pageControlCustomPadding
 @property  double pageManagementPageCheckboxVerticalMargin
 @property  double pageManagementPageCheckboxDiameter
 @property  double dockViewHeight
 @property  double dockBackgroundViewCornerRadius
 @property  {UIEdgeInsets=dddd} dockBackgroundViewInsets
 @property  {UIEdgeInsets=dddd} dockListViewInsets
 @property  {UIEdgeInsets=dddd} editModeButtonContentEdgeInsets
 @property  {UIOffset=dd} editModeButtonLayoutOffset
 @property  {CGSize=dd} editModeButtonSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHRootFolderVisualConfiguration copyWithZone:]
  -[SBHRootFolderVisualConfiguration dockBackgroundViewInsets]
  -[SBHRootFolderVisualConfiguration idleTextVerticalOffset]
  -[SBHRootFolderVisualConfiguration init]
  -[SBHRootFolderVisualConfiguration setDockBackgroundViewCornerRadius:]
  -[SBHRootFolderVisualConfiguration setPageManagementLayoutMetrics:forLayoutConfiguration:]
  -[SBHRootFolderVisualConfiguration pageControlFrameInset]
  -[SBHRootFolderVisualConfiguration pageManagementLayoutMetricsForLayoutConfiguration:]
  -[SBHRootFolderVisualConfiguration setPageControlFrameInset:]
  -[SBHRootFolderVisualConfiguration setEditModeButtonLayoutOffset:]
  -[SBHRootFolderVisualConfiguration setDockListViewInsets:]
  -[SBHRootFolderVisualConfiguration succinctDescriptionBuilder]
  -[SBHRootFolderVisualConfiguration setDockBackgroundViewInsets:]
  -[SBHRootFolderVisualConfiguration setPageManagementPageCheckboxVerticalMargin:]
  -[SBHRootFolderVisualConfiguration dockListViewInsets]
  -[SBHRootFolderVisualConfiguration pageManagementPageCheckboxDiameter]
  -[SBHRootFolderVisualConfiguration dockViewHeight]
  -[SBHRootFolderVisualConfiguration setIdleTextVerticalOffset:]
  -[SBHRootFolderVisualConfiguration editModeButtonSize]
  -[SBHRootFolderVisualConfiguration pageControlVerticalOffset]
  -[SBHRootFolderVisualConfiguration succinctDescription]
  -[SBHRootFolderVisualConfiguration editModeButtonContentEdgeInsets]
  -[SBHRootFolderVisualConfiguration editModeButtonLayoutOffset]
  -[SBHRootFolderVisualConfiguration setEditModeButtonSize:]
  -[SBHRootFolderVisualConfiguration isEqual:]
  -[SBHRootFolderVisualConfiguration setPageManagementPageCheckboxDiameter:]
  -[SBHRootFolderVisualConfiguration setEditModeButtonContentEdgeInsets:]
  -[SBHRootFolderVisualConfiguration setDockViewHeight:]
  -[SBHRootFolderVisualConfiguration pageManagementPageCheckboxVerticalMargin]
  -[SBHRootFolderVisualConfiguration setPageControlCustomPadding:]
  -[SBHRootFolderVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHRootFolderVisualConfiguration setPageControlVerticalOffset:]
  -[SBHRootFolderVisualConfiguration dockBackgroundViewCornerRadius]
  -[SBHRootFolderVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHRootFolderVisualConfiguration pageControlCustomPadding]


SBHLocalizedIndexedCollation : UILocalizedIndexedCollation /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  NSArray *appendedSectionTitles

  // class methods
  +[SBHLocalizedIndexedCollation defaultDimSumCollation]
  +[SBHLocalizedIndexedCollation defaultCollation]

  // instance methods
  -[SBHLocalizedIndexedCollation init]
  -[SBHLocalizedIndexedCollation removeSection:]
  -[SBHLocalizedIndexedCollation addSection:]
  -[SBHLocalizedIndexedCollation .cxx_destruct]
  -[SBHLocalizedIndexedCollation sectionIndexTitles]
  -[SBHLocalizedIndexedCollation sectionTitles]
  -[SBHLocalizedIndexedCollation sectionForObject:collationStringSelector:]
  -[SBHLocalizedIndexedCollation sortedArrayFromArray:collationStringSelector:]
  -[SBHLocalizedIndexedCollation isEqual:]
  -[SBHLocalizedIndexedCollation containsSection:]
  -[SBHLocalizedIndexedCollation appendedSectionTitles]


SBHWidgetStackViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <BSUIScrollViewDelegate, SBLeafIconObserver, PTSettingsKeyObserver, SBIconViewCustomImageViewControllerObserving, SBIconViewCustomImageViewControlling>
 @property  SBWidgetIcon *icon
 @property  <SBLeafIconDataSource> *activeWidget
 @property  BSUIScrollView *scrollView
 @property  UIView *containerView
 @property  UIView *backgroundView
 @property  UIPageControl *pageControl
 @property  NSTimer *pageControlHidingTimer
 @property  UIView *dimmingView
 @property  BOOL showStackBorderWhenShowingPageControl
 @property  BOOL flashPageControlOnNextAppearance
 @property  NSMutableDictionary *widgetContainerViewControllers
 @property  SBHWidgetSettings *widgetSettings
 @property  SBFFluidBehaviorSettings *animationSettings
 @property  unsigned long widgetScaleAnimationCount
 @property  unsigned long backgroundAnimationCount
 @property  NSHashTable *imageUpdateDisableAssertions
 @property  <BSInvalidatable> *scrollingTouchCancellationAssertion
 @property  <BSInvalidatable> *imageUpdatesDisabledForContextMenuAssertion
 @property  SBWidgetIcon *widgetIcon
 @property  BOOL alwaysShowsAsStack
 @property  BOOL highlightsAtAnySize
 @property  BOOL forcesEdgeAntialiasing
 @property  NSArray *widgetViewControllers
 @property  <SBHWidgetStackViewControllerDataSource> *dataSource
 @property  <SBHWidgetStackViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  BOOL editing
 @property  <SBLeafIconDataSource> *visiblyActiveDataSource
 @property  BOOL showingContextMenu
 @property  BOOL overlapping
 @property  BOOL dropping
 @property  BOOL userInteractionEnabled
 @property  BOOL backgroundBlurEnabled
 @property  BOOL wantsCaptureOnlyBackgroundView
 @property  @? backgroundViewProvider
 @property  double brightness
 @property  BOOL wantsLabelHidden
 @property  BOOL visiblySettled
 @property  BOOL automaticallyUpdatesVisiblySettled
 @property  BOOL privateModeEnabled
 @property  unsigned long presentationMode
 @property  unsigned long imageViewAlignment
 @property  unsigned long pauseReasons
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *applicationShortcutItems
 @property  UIView *snapshotView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds
 @property  double continuousCornerRadius
 @property  BOOL showsSquareCorners

  // instance methods
  -[SBHWidgetStackViewController setUserInteractionEnabled:]
  -[SBHWidgetStackViewController dimmingView]
  -[SBHWidgetStackViewController visibleBounds]
  -[SBHWidgetStackViewController setIconImageInfo:]
  -[SBHWidgetStackViewController customImageViewControllerWantsLabelHiddenDidChange:]
  -[SBHWidgetStackViewController setShowsSquareCorners:]
  -[SBHWidgetStackViewController leafIcon:didRemoveIconDataSource:]
  -[SBHWidgetStackViewController applicationShortcutItems]
  -[SBHWidgetStackViewController brightness]
  -[SBHWidgetStackViewController continuousCornerRadius]
  -[SBHWidgetStackViewController backgroundView]
  -[SBHWidgetStackViewController leafIcon:didAddIconDataSource:]
  -[SBHWidgetStackViewController settings:changedValueForKey:]
  -[SBHWidgetStackViewController setBackgroundView:]
  -[SBHWidgetStackViewController isShowingContextMenu]
  -[SBHWidgetStackViewController isOverlapping]
  -[SBHWidgetStackViewController setDataSource:]
  -[SBHWidgetStackViewController showsSquareCorners]
  -[SBHWidgetStackViewController snapshotView]
  -[SBHWidgetStackViewController isUserInteractionEnabled]
  -[SBHWidgetStackViewController isPrivateModeEnabled]
  -[SBHWidgetStackViewController legibilitySettings]
  -[SBHWidgetStackViewController iconImageInfo]
  -[SBHWidgetStackViewController setPrivateModeEnabled:]
  -[SBHWidgetStackViewController setOverlapping:]
  -[SBHWidgetStackViewController shouldAutomaticallyForwardAppearanceMethods]
  -[SBHWidgetStackViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[SBHWidgetStackViewController sourceView]
  -[SBHWidgetStackViewController updateImageAnimated:]
  -[SBHWidgetStackViewController dealloc]
  -[SBHWidgetStackViewController setEditing:]
  -[SBHWidgetStackViewController setContainerView:]
  -[SBHWidgetStackViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBHWidgetStackViewController .cxx_destruct]
  -[SBHWidgetStackViewController icon]
  -[SBHWidgetStackViewController _scrollViewContentSize]
  -[SBHWidgetStackViewController setDimmingView:]
  -[SBHWidgetStackViewController presentationMode]
  -[SBHWidgetStackViewController scrollView]
  -[SBHWidgetStackViewController disableImageUpdatesForReason:]
  -[SBHWidgetStackViewController cancelTouchesForCurrentEventInHostedContent]
  -[SBHWidgetStackViewController setVisiblySettled:]
  -[SBHWidgetStackViewController setIcon:]
  -[SBHWidgetStackViewController setLegibilitySettings:]
  -[SBHWidgetStackViewController setPresentationMode:]
  -[SBHWidgetStackViewController viewWillLayoutSubviews]
  -[SBHWidgetStackViewController scrollViewDidEndScrolling:]
  -[SBHWidgetStackViewController _handleInstalledAppsChanged:]
  -[SBHWidgetStackViewController scrollViewWillBeginDragging:]
  -[SBHWidgetStackViewController viewDidAppear:]
  -[SBHWidgetStackViewController setScrollView:]
  -[SBHWidgetStackViewController setWidgetSettings:]
  -[SBHWidgetStackViewController _pageSize]
  -[SBHWidgetStackViewController setPauseReasons:]
  -[SBHWidgetStackViewController setBackgroundBlurEnabled:]
  -[SBHWidgetStackViewController visiblyActiveDataSource]
  -[SBHWidgetStackViewController setAutomaticallyUpdatesVisiblySettled:]
  -[SBHWidgetStackViewController wantsCaptureOnlyBackgroundView]
  -[SBHWidgetStackViewController backgroundViewProvider]
  -[SBHWidgetStackViewController willShowContextMenuAtLocation:]
  -[SBHWidgetStackViewController setShowingContextMenu:]
  -[SBHWidgetStackViewController removeCustomImageViewControllerObserver:]
  -[SBHWidgetStackViewController setBackgroundViewProvider:]
  -[SBHWidgetStackViewController addCustomImageViewControllerObserver:]
  -[SBHWidgetStackViewController imageViewAlignment]
  -[SBHWidgetStackViewController setImageViewAlignment:]
  -[SBHWidgetStackViewController leafIcon:didChangeActiveDataSource:]
  -[SBHWidgetStackViewController dataSource]
  -[SBHWidgetStackViewController setPageControl:]
  -[SBHWidgetStackViewController containerView]
  -[SBHWidgetStackViewController widgetSettings]
  -[SBHWidgetStackViewController setAnimationSettings:]
  -[SBHWidgetStackViewController isEditing]
  -[SBHWidgetStackViewController scrollViewDidScroll:]
  -[SBHWidgetStackViewController viewWillAppear:]
  -[SBHWidgetStackViewController activeWidget]
  -[SBHWidgetStackViewController animationSettings]
  -[SBHWidgetStackViewController _canShowWhileLocked]
  -[SBHWidgetStackViewController scrollViewDidEndScrollingAnimation:]
  -[SBHWidgetStackViewController setDelegate:]
  -[SBHWidgetStackViewController viewDidDisappear:]
  -[SBHWidgetStackViewController viewWillDisappear:]
  -[SBHWidgetStackViewController widgetIcon]
  -[SBHWidgetStackViewController setBrightness:]
  -[SBHWidgetStackViewController pageControl]
  -[SBHWidgetStackViewController delegate]
  -[SBHWidgetStackViewController setEditing:animated:]
  -[SBHWidgetStackViewController alwaysShowsAsStack]
  -[SBHWidgetStackViewController _updateAccessibilityValue]
  -[SBHWidgetStackViewController _layoutWithAnimationUpdateMode:]
  -[SBHWidgetStackViewController automaticallyUpdatesVisiblySettled]
  -[SBHWidgetStackViewController _flashPageControlAnimated:]
  -[SBHWidgetStackViewController _updateWidgetViewEdgeAntialiasing]
  -[SBHWidgetStackViewController highlightsAtAnySize]
  -[SBHWidgetStackViewController _updatePageControlWithAnimationUpdateMode:]
  -[SBHWidgetStackViewController _animateRemovalOfWidget:]
  -[SBHWidgetStackViewController _disableImageUpdatesForReason:animateChangesUponInvalidation:]
  -[SBHWidgetStackViewController _widgetContextMenuController]
  -[SBHWidgetStackViewController _updateWidgetViewHitTesting]
  -[SBHWidgetStackViewController _createBackgroundViewIfNecessary]
  -[SBHWidgetStackViewController _shouldDrawSystemBackgroundMaterialForWidget:]
  -[SBHWidgetStackViewController _widgetHitTestingDisabled]
  -[SBHWidgetStackViewController _updateVisiblySettledForWidgetViewControllers]
  -[SBHWidgetStackViewController _updatePresentationModeForWidgetViewControllers]
  -[SBHWidgetStackViewController _updatePrivateModeForWidgetViewControllers]
  -[SBHWidgetStackViewController _updatePauseReasonForWidgetViewControllers]
  -[SBHWidgetStackViewController didSelectApplicationShortcutItem:]
  -[SBHWidgetStackViewController _scrollToActiveWidgetAnimated:]
  -[SBHWidgetStackViewController imageUpdateDisableAssertions]
  -[SBHWidgetStackViewController _newActiveWidgetIndexForContentOffset:]
  -[SBHWidgetStackViewController _restartPageControlTimer]
  -[SBHWidgetStackViewController _setPageControlHidden:animated:]
  -[SBHWidgetStackViewController _restingContentOffset]
  -[SBHWidgetStackViewController _createViewControllerForWidgetIfNecessary:usingSize:]
  -[SBHWidgetStackViewController _updateActiveWidgetIndexAndScrollViewContentOffset]
  -[SBHWidgetStackViewController _updateWidgetViewsWithAnimationUpdateMode:]
  -[SBHWidgetStackViewController _showAdjacentWidgets]
  -[SBHWidgetStackViewController _updateBackgroundViewWithAnimationUpdateMode:]
  -[SBHWidgetStackViewController _updateWidgetViewClippingAndBackgroundView]
  -[SBHWidgetStackViewController _updateScrollViewDelaysContentTouches]
  -[SBHWidgetStackViewController _insetWidgetsForTrackingAppearance]
  -[SBHWidgetStackViewController _incrementWidgetScaleAnimationCount]
  -[SBHWidgetStackViewController _alwaysShowStackBorder]
  -[SBHWidgetStackViewController _decrementWidgetScaleAnimationCount]
  -[SBHWidgetStackViewController _incrementBackgroundAnimationCount]
  -[SBHWidgetStackViewController _decrementBackgroundAnimationCount]
  -[SBHWidgetStackViewController _alwaysShowStackPageControl]
  -[SBHWidgetStackViewController loadView]
  -[SBHWidgetStackViewController _pageControlIsHorizontallyConstrained]
  -[SBHWidgetStackViewController setShowStackBorderWhenShowingPageControl:]
  -[SBHWidgetStackViewController pageControlHidingTimer]
  -[SBHWidgetStackViewController setPageControlHidingTimer:]
  -[SBHWidgetStackViewController isBackgroundBlurEnabled]
  -[SBHWidgetStackViewController isVisiblySettled]
  -[SBHWidgetStackViewController pauseReasons]
  -[SBHWidgetStackViewController initWithIcon:]
  -[SBHWidgetStackViewController setForcesEdgeAntialiasing:]
  -[SBHWidgetStackViewController widgetViewControllers]
  -[SBHWidgetStackViewController _isScrollViewTracking]
  -[SBHWidgetStackViewController setAlwaysShowsAsStack:]
  -[SBHWidgetStackViewController setHighlightsAtAnySize:]
  -[SBHWidgetStackViewController forcesEdgeAntialiasing]
  -[SBHWidgetStackViewController setActiveWidget:]
  -[SBHWidgetStackViewController showStackBorderWhenShowingPageControl]
  -[SBHWidgetStackViewController flashPageControlOnNextAppearance]
  -[SBHWidgetStackViewController setFlashPageControlOnNextAppearance:]
  -[SBHWidgetStackViewController widgetContainerViewControllers]
  -[SBHWidgetStackViewController setWidgetContainerViewControllers:]
  -[SBHWidgetStackViewController widgetScaleAnimationCount]
  -[SBHWidgetStackViewController setWidgetScaleAnimationCount:]
  -[SBHWidgetStackViewController backgroundAnimationCount]
  -[SBHWidgetStackViewController setBackgroundAnimationCount:]
  -[SBHWidgetStackViewController setImageUpdateDisableAssertions:]
  -[SBHWidgetStackViewController scrollingTouchCancellationAssertion]
  -[SBHWidgetStackViewController setScrollingTouchCancellationAssertion:]
  -[SBHWidgetStackViewController imageUpdatesDisabledForContextMenuAssertion]
  -[SBHWidgetStackViewController setImageUpdatesDisabledForContextMenuAssertion:]


SBHRootFolderSettings : PTSettings /System/Library/PrivateFrameworks/CoreMaterial.framework/CoreMaterial
 @property  BOOL adjustableLayoutEnabled
 @property  double portraitTopLayoutInset
 @property  double portraitBottomLayoutInset
 @property  double portraitSideLayoutInset
 @property  double landscapeTopLayoutInset
 @property  double landscapeBottomLayoutInset
 @property  double landscapeSideLayoutInset

  // class methods
  +[SBHRootFolderSettings settingsControllerModule]

  // instance methods
  -[SBHRootFolderSettings setDefaultValues]
  -[SBHRootFolderSettings portraitTopLayoutInset]
  -[SBHRootFolderSettings setAdjustableLayoutEnabled:]
  -[SBHRootFolderSettings setPortraitTopLayoutInset:]
  -[SBHRootFolderSettings setPortraitBottomLayoutInset:]
  -[SBHRootFolderSettings setPortraitSideLayoutInset:]
  -[SBHRootFolderSettings setLandscapeTopLayoutInset:]
  -[SBHRootFolderSettings setLandscapeBottomLayoutInset:]
  -[SBHRootFolderSettings setLandscapeSideLayoutInset:]
  -[SBHRootFolderSettings isAdjustableLayoutEnabled]
  -[SBHRootFolderSettings portraitBottomLayoutInset]
  -[SBHRootFolderSettings portraitSideLayoutInset]
  -[SBHRootFolderSettings landscapeTopLayoutInset]
  -[SBHRootFolderSettings landscapeBottomLayoutInset]
  -[SBHRootFolderSettings landscapeSideLayoutInset]


SBCountedMap : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[SBCountedMap containsKey:]
  -[SBCountedMap init]
  -[SBCountedMap checkinValues:]
  -[SBCountedMap .cxx_destruct]
  -[SBCountedMap containsValue:]
  -[SBCountedMap checkoutValueForKey:creationBlock:]
  -[SBCountedMap checkinValue:]


SBFolderControllerBackgroundView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  BOOL reduceTransparencyEnabled
 @property  unsigned long concreteEffect
 @property  unsigned long currentEffect
 @property  <SBFolderControllerBackgroundViewDelegate> *delegate
 @property  BOOL transitionCancelled
 @property  unsigned long effect
 @property  BOOL effectActive
 @property  BOOL expanding
 @property  BOOL frozen

  // class methods
  +[SBFolderControllerBackgroundView _tintColorForEffect:]

  // instance methods
  -[SBFolderControllerBackgroundView isReduceTransparencyEnabled]
  -[SBFolderControllerBackgroundView currentEffectMaterialRecipeName]
  -[SBFolderControllerBackgroundView concreteEffect]
  -[SBFolderControllerBackgroundView minimumHomeScreenScale]
  -[SBFolderControllerBackgroundView initWithFrame:]
  -[SBFolderControllerBackgroundView setExpanding:]
  -[SBFolderControllerBackgroundView setEffect:]
  -[SBFolderControllerBackgroundView isExpanding]
  -[SBFolderControllerBackgroundView .cxx_destruct]
  -[SBFolderControllerBackgroundView effect]
  -[SBFolderControllerBackgroundView _reduceTransparencyEnabledStateChanged]
  -[SBFolderControllerBackgroundView isTransitionCancelled]
  -[SBFolderControllerBackgroundView isFrozen]
  -[SBFolderControllerBackgroundView setReduceTransparencyEnabled:]
  -[SBFolderControllerBackgroundView isEffectActive]
  -[SBFolderControllerBackgroundView currentEffect]
  -[SBFolderControllerBackgroundView _isCurrentlyExpanding]
  -[SBFolderControllerBackgroundView setEffectActive:]
  -[SBFolderControllerBackgroundView setDelegate:]
  -[SBFolderControllerBackgroundView _updateCurrentEffect]
  -[SBFolderControllerBackgroundView setCurrentEffect:]
  -[SBFolderControllerBackgroundView setTransitionCancelled:]
  -[SBFolderControllerBackgroundView setFrozen:]
  -[SBFolderControllerBackgroundView delegate]
  -[SBFolderControllerBackgroundView layoutSubviews]


SBIconGridImage : UIImage /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  <SBIconListLayout> *listLayout
 @property  CPMemoryPool *pool
 @property  unsigned int treatedCells
 @property  unsigned long numberOfCells
 @property  unsigned long numberOfColumns
 @property  unsigned long numberOfRows

  // class methods
  +[SBIconGridImage gridImageForLayout:cellImageDrawBlock:]
  +[SBIconGridImage gridImageForLayout:previousGridImage:previousGridCellIndexToUpdate:pool:cellImageDrawBlock:]
  +[SBIconGridImage sizeForLayout:]
  +[SBIconGridImage rectAtIndex:inLayout:maxCount:]
  +[SBIconGridImage gridImageForLayout:pool:cellImageDrawBlock:]
  +[SBIconGridImage numberOfRowsForNumberOfCells:inLayout:]

  // instance methods
  -[SBIconGridImage listLayout]
  -[SBIconGridImage pool]
  -[SBIconGridImage .cxx_destruct]
  -[SBIconGridImage treatedCells]
  -[SBIconGridImage gridImageByPatchingCellAtIndex:cellImageProviderBlock:]
  -[SBIconGridImage numberOfCells]
  -[SBIconGridImage numberOfRows]
  -[SBIconGridImage numberOfColumns]
  -[SBIconGridImage iconImageAtIndex:]
  -[SBIconGridImage isIconImageTreatedAtIndex:]
  -[SBIconGridImage setListLayout:]
  -[SBIconGridImage setPool:]
  -[SBIconGridImage setTreatedCells:]


SBIconLabelAccessoryView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconLabelAccessoryView>
 @property  UIImage *baseImage
 @property  BOOL hasBaseline
 @property  double baselineOffsetFromBottom
 @property  {UIEdgeInsets=dddd} alignmentRectInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconLabelAccessoryView labelAccessorySystemImageName]
  +[SBIconLabelAccessoryView labelAccessorySystemImageScale]

  // instance methods
  -[SBIconLabelAccessoryView baselineOffsetFromBottom]
  -[SBIconLabelAccessoryView updateWithLegibilitySettings:labelFont:]
  -[SBIconLabelAccessoryView alignmentRectInsets]
  -[SBIconLabelAccessoryView .cxx_destruct]
  -[SBIconLabelAccessoryView prepareForReuse]
  -[SBIconLabelAccessoryView intrinsicContentSize]
  -[SBIconLabelAccessoryView sizeThatFits:]
  -[SBIconLabelAccessoryView baseImage]
  -[SBIconLabelAccessoryView setBaseImage:]
  -[SBIconLabelAccessoryView hasBaseline]
  -[SBIconLabelAccessoryView initWithCoder:]
  -[SBIconLabelAccessoryView updateWithBaseImage:legibilitySettings:]


SBIconDotLabelAccessoryView : SBIconLabelAccessoryView
  // class methods
  +[SBIconDotLabelAccessoryView _dotColor]
  +[SBIconDotLabelAccessoryView labelAccessorySystemImageName]
  +[SBIconDotLabelAccessoryView _cachedDotImage]
  +[SBIconDotLabelAccessoryView _setCachedDotImage:]
  +[SBIconDotLabelAccessoryView _vibrantColorMatrixInput]

  // instance methods
  -[SBIconDotLabelAccessoryView initWithFrame:]
  -[SBIconDotLabelAccessoryView updateWithLegibilitySettings:labelFont:]
  -[SBIconDotLabelAccessoryView .cxx_destruct]
  -[SBIconDotLabelAccessoryView lastBaselineAnchor]
  -[SBIconDotLabelAccessoryView intrinsicContentSize]
  -[SBIconDotLabelAccessoryView firstBaselineAnchor]


SBIconRecentlyUpdatedLabelAccessoryView : SBIconDotLabelAccessoryView
  // class methods
  +[SBIconRecentlyUpdatedLabelAccessoryView _dotColor]
  +[SBIconRecentlyUpdatedLabelAccessoryView _cachedDotImage]
  +[SBIconRecentlyUpdatedLabelAccessoryView _setCachedDotImage:]
  +[SBIconRecentlyUpdatedLabelAccessoryView _vibrantColorMatrixInput]


SBIconBetaLabelAccessoryView : SBIconDotLabelAccessoryView
  // class methods
  +[SBIconBetaLabelAccessoryView _dotColor]
  +[SBIconBetaLabelAccessoryView _cachedDotImage]
  +[SBIconBetaLabelAccessoryView _setCachedDotImage:]
  +[SBIconBetaLabelAccessoryView _vibrantColorMatrixInput]


SBIconLegibilityLabelAccessoryView : SBIconLabelAccessoryView
 @property  UIImageView *iconImageView

  // instance methods
  -[SBIconLegibilityLabelAccessoryView iconImageView]
  -[SBIconLegibilityLabelAccessoryView baselineOffsetFromBottom]
  -[SBIconLegibilityLabelAccessoryView initWithFrame:]
  -[SBIconLegibilityLabelAccessoryView alignmentRectInsets]
  -[SBIconLegibilityLabelAccessoryView .cxx_destruct]
  -[SBIconLegibilityLabelAccessoryView lastBaselineAnchor]
  -[SBIconLegibilityLabelAccessoryView hasBaseline]
  -[SBIconLegibilityLabelAccessoryView firstBaselineAnchor]
  -[SBIconLegibilityLabelAccessoryView updateWithBaseImage:legibilitySettings:]
  -[SBIconLegibilityLabelAccessoryView removeInvertingFilter]
  -[SBIconLegibilityLabelAccessoryView addInvertingFilter]


SBIconCloudLabelAccessoryView : SBIconLegibilityLabelAccessoryView
  // class methods
  +[SBIconCloudLabelAccessoryView labelAccessorySystemImageName]


SBIconBlockedForScreenTimeExpirationLabelAccessoryView : SBIconLegibilityLabelAccessoryView
  // class methods
  +[SBIconBlockedForScreenTimeExpirationLabelAccessoryView labelAccessorySystemImageName]
  +[SBIconBlockedForScreenTimeExpirationLabelAccessoryView labelAccessorySystemImageScale]


SBHLibraryCategoryPodBackgroundView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
  // instance methods
  -[SBHLibraryCategoryPodBackgroundView didMoveToSuperview]
  -[SBHLibraryCategoryPodBackgroundView traitCollectionDidChange:]
  -[SBHLibraryCategoryPodBackgroundView _updateVisualStyle]


SBRootFolderView : SBFolderView <_UISettingsKeyObserver, SBDockViewDelegate, SBFRemoteBasebandLoggingObserver>
 @property  BOOL dockViewBorrowed
 @property  BOOL pageControlBorrowed
 @property  SBFTouchPassThroughView *titledButtonsContainerView
 @property  SBTitledHomeScreenButton *doneButton
 @property  SBTitledHomeScreenButton *widgetButton
 @property  BOOL sidebarSlideGestureActive
 @property  unsigned long sidebarAllowedOrientations
 @property  <SBIconListViewIconLocationTransitioning> *firstListViewIconLocationTransitionHandler
 @property  BOOL sidebarVisibleWhenScrollingBegan
 @property  double scrollingAdjustment
 @property  BOOL allowsFreeScrollingUntilScrollingEnds
 @property  SBHRootFolderSettings *folderSettings
 @property  unsigned long ignoresOverscrollOnFirstPageOrientations
 @property  unsigned long ignoresOverscrollOnLastPageOrientations
 @property  BOOL userAttemptedToOverscrollFirstPageDuringCurrentGesture
 @property  BOOL userAttemptedToOverscrollLastPageDuringCurrentGesture
 @property  UILabel *idleTextView
 @property  _SBRootFolderLayoutWrapperView *searchPulldownWrapperView
 @property  _SBRootFolderLayoutWrapperView *searchableTodayWrapperView
 @property  _SBRootFolderLayoutWrapperView *searchableTrailingCustomWrapperView
 @property  _SBRootFolderLayoutWrapperView *sidebarWrapperView
 @property  SBHMinusPageStepper *customPageAnimationStepper
 @property  SBDockIconListView *dockListView
 @property  <SBRootFolderViewLayoutManager> *layoutManager
 @property  <SBRootFolderViewLayoutManager> *specialLayoutManager
 @property  <SBRootFolderViewLayoutManager> *transitioningSpecialLayoutManager
 @property  unsigned long folderPageManagementAllowedOrientations
 @property  double todayViewPageScrollOffset
 @property  double trailingCustomViewPageScrollOffset
 @property  long long todayViewPageIndex
 @property  long long favoriteTodayViewPageIndex
 @property  long long sidebarPageIndex
 @property  long long trailingCustomViewPageIndex
 @property  BOOL hidesOffscreenCustomPageViews
 @property  BOOL shouldFadeDockOutDuringTransitionToTodayView
 @property  BOOL shouldFadePageControlOutDuringTransitionToTodayView
 @property  BOOL sidebarVisibilityGestureActive
 @property  <SBRootFolderViewDelegate> *delegate
 @property  SBRootFolder *folder
 @property  SBFParallaxSettings *parallaxSettings
 @property  unsigned long dockEdge
 @property  double dockHeight
 @property  BOOL dockExternal
 @property  BOOL dockPinnedForRotation
 @property  NSString *dockIconLocation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} enterEditingTouchRect
 @property  BOOL dockVisible
 @property  SBSearchGesture *searchGesture
 @property  double currentDockOffscreenFraction
 @property  SBDockView *dockView
 @property  BOOL allowsAutoscrollToTodayView
 @property  BOOL showsDoneButton
 @property  BOOL showsAddWidgetButton
 @property  double titledButtonsAlpha
 @property  UIView *todayView
 @property  UIView *sidebarView
 @property  UIView *pullDownSearchView
 @property  UIView *trailingCustomView
 @property  BOOL onTodayPage
 @property  BOOL onTrailingCustomPage
 @property  BOOL todayViewPageHidden
 @property  double sidebarVisibilityProgress
 @property  double sidebarPinned
 @property  double effectiveSidebarVisibilityProgress
 @property  BOOL sidebarEffectivelyVisible
 @property  BOOL todayViewBouncing
 @property  BOOL searchHidden
 @property  BOOL shiftsPullDownSearchForVisibility
 @property  UIView *todayViewWrapperView
 @property  SBSearchBackdropView *searchBackdropView
 @property  SBSearchBackdropView *trailingCustomBackdropView
 @property  UIView *trailingCustomSearchDimmingView
 @property  double todayViewVisibilityProgress
 @property  double trailingCustomViewVisibilityProgress
 @property  double pullDownSearchVisibilityProgress
 @property  BOOL pageManagementUIVisible
 @property  BOOL occludedByOverlay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBRootFolderView _editButtonLayoutFramesInBounds:forVisualConfiguration:withTranslationOffset:inRTL:doneButton:addWidgetButton:doneButtonFrame:addWidgetButtonFrame:]
  +[SBRootFolderView defaultIconLocation]
  +[SBRootFolderView sidebarVisibilityProgressAnimator]
  +[SBRootFolderView dockIconLocation]

  // instance methods
  -[SBRootFolderView setIdleText:]
  -[SBRootFolderView parallaxSettings]
  -[SBRootFolderView isOccludedByOverlay]
  -[SBRootFolderView isSidebarPinned]
  -[SBRootFolderView setTitledButtonsAlpha:]
  -[SBRootFolderView dockView]
  -[SBRootFolderView sidebarView]
  -[SBRootFolderView setOccludedByOverlay:]
  -[SBRootFolderView sidebarVisibilityProgress]
  -[SBRootFolderView _setupSearchBackdropViewIfNecessary]
  -[SBRootFolderView setDockEdge:]
  -[SBRootFolderView dockEdge]
  -[SBRootFolderView remoteBasebandLogCollectionStateDidChange:]
  -[SBRootFolderView setSidebarSlideGestureActive:]
  -[SBRootFolderView setDoneButton:]
  -[SBRootFolderView searchGesture]
  -[SBRootFolderView dockHeight]
  -[SBRootFolderView currentDockOffscreenFraction]
  -[SBRootFolderView setSidebarVisibilityProgress:animator:]
  -[SBRootFolderView doneButton]
  -[SBRootFolderView _scrollOffsetForContentAtPageIndex:]
  -[SBRootFolderView _captureInitialSearchScrollTrackingState]
  -[SBRootFolderView isSearchHidden]
  -[SBRootFolderView pullDownSearchVisibilityProgress]
  -[SBRootFolderView additionalIconListViews]
  -[SBRootFolderView getMetrics:]
  -[SBRootFolderView borrowPageControl]
  -[SBRootFolderView settings:changedValueForKey:]
  -[SBRootFolderView pullDownSearchView]
  -[SBRootFolderView ignoresOverscrollOnFirstPageOrientations]
  -[SBRootFolderView accessibilityTintColorForDockView:]
  -[SBRootFolderView layoutIconLists:animationType:forceRelayout:]
  -[SBRootFolderView wasSidebarVisibleWhenScrollingBegan]
  -[SBRootFolderView didMoveToSuperview]
  -[SBRootFolderView resetIconListViews]
  -[SBRootFolderView sidebarWidthUsingPageWidth:]
  -[SBRootFolderView sidebarAllowedOrientations]
  -[SBRootFolderView shouldFadePageControlOutDuringTransitionToTodayView]
  -[SBRootFolderView layoutDockViewWithMetrics:]
  -[SBRootFolderView searchableTrailingCustomWrapperView]
  -[SBRootFolderView isPageControlBorrowed]
  -[SBRootFolderView configurePageControlToAllowEnteringPageManagement:]
  -[SBRootFolderView _checkSidebarVisibilityProgressAfterScroll]
  -[SBRootFolderView trailingCustomViewPageIndex]
  -[SBRootFolderView cleanUpAfterTransition]
  -[SBRootFolderView _cleanupAfterSidebarSlideGestureCompleted:]
  -[SBRootFolderView layoutManager]
  -[SBRootFolderView setScrollingAdjustment:]
  -[SBRootFolderView setUserAttemptedToOverscrollLastPageDuringCurrentGesture:]
  -[SBRootFolderView _updateScrollingState:]
  -[SBRootFolderView setShowsAddWidgetButton:animated:]
  -[SBRootFolderView isTodayViewPageHidden]
  -[SBRootFolderView returnPageControl]
  -[SBRootFolderView _isSidebarCollapsed]
  -[SBRootFolderView layoutPageControlWithMetrics:]
  -[SBRootFolderView transitioningSpecialLayoutManager]
  -[SBRootFolderView _resetSearchScrollTrackingState]
  -[SBRootFolderView setTrailingCustomViewVisibilityProgress:]
  -[SBRootFolderView _prepareSidebarViewForOrientationTransition]
  -[SBRootFolderView _setupTrailingCustomDimmingViewIfNecessary]
  -[SBRootFolderView newDockBackgroundView]
  -[SBRootFolderView customPageAnimationStepper]
  -[SBRootFolderView setUserAttemptedToOverscrollFirstPageDuringCurrentGesture:]
  -[SBRootFolderView allowsAutoscrollToTodayView]
  -[SBRootFolderView setWidgetButton:]
  -[SBRootFolderView userAttemptedToOverscrollFirstPageDuringCurrentGesture]
  -[SBRootFolderView maxDockHeight]
  -[SBRootFolderView beginModifyingDockOffscreenFractionForReason:]
  -[SBRootFolderView _setupTrailingCustomBackdropViewIfNecessary]
  -[SBRootFolderView dealloc]
  -[SBRootFolderView updateIconListViews]
  -[SBRootFolderView _sidebarVisibilityProgressForPanGestureRecognizer:presenting:]
  -[SBRootFolderView isOnTodayPage]
  -[SBRootFolderView trailingCustomViewPageScrollOffset]
  -[SBRootFolderView minimumHomeScreenScaleDidChange]
  -[SBRootFolderView rootFolderVisualConfiguration]
  -[SBRootFolderView _setSidebarViewHidden:]
  -[SBRootFolderView searchableTodayWrapperView]
  -[SBRootFolderView enterPageManagementUIWithCompletionHandler:]
  -[SBRootFolderView _layoutSubviewsForTodayViewWithMetrics:]
  -[SBRootFolderView scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBRootFolderView _isSidebarEnabledForIconListIndex:orientation:]
  -[SBRootFolderView updateAccessibilityTintColors]
  -[SBRootFolderView .cxx_destruct]
  -[SBRootFolderView setTodayViewPageHidden:]
  -[SBRootFolderView iconScrollView:shouldSetContentOffset:animated:]
  -[SBRootFolderView hitTest:withEvent:]
  -[SBRootFolderView _isSidebarEnabledForCurrentOrientation]
  -[SBRootFolderView setSpecialLayoutManager:]
  -[SBRootFolderView todayViewPageScrollOffset]
  -[SBRootFolderView isDockExternal]
  -[SBRootFolderView widgetButtonTriggered:]
  -[SBRootFolderView enumerateScrollViewPageViewsUsingBlock:]
  -[SBRootFolderView folderSettings]
  -[SBRootFolderView effectiveSidebarVisibilityProgress]
  -[SBRootFolderView widgetButton]
  -[SBRootFolderView _scrollViewFrameForDockEdge:]
  -[SBRootFolderView shouldScrollDockDuringTransitionToTodayView]
  -[SBRootFolderView isSidebarEffectivelyVisible]
  -[SBRootFolderView setContentAlpha:]
  -[SBRootFolderView showsAddWidgetButton]
  -[SBRootFolderView setSidebarPinned:]
  -[SBRootFolderView _minimumHomeScreenScale]
  -[SBRootFolderView _updateParallaxSettings]
  -[SBRootFolderView _animateViewsForScrollingToTodayViewWithMetrics:]
  -[SBRootFolderView returnDockView]
  -[SBRootFolderView folderPageManagementAllowedOrientations]
  -[SBRootFolderView iconListViewAtIndex:]
  -[SBRootFolderView _isSidebarEnabledForCurrentPage]
  -[SBRootFolderView _currentPageIndexDidChangeFromPageIndex:]
  -[SBRootFolderView todayViewPageIndex]
  -[SBRootFolderView pageControlDidReceiveButtonTap:]
  -[SBRootFolderView showsDoneButton]
  -[SBRootFolderView _shouldIgnoreOverscrollOnLastPageForOrientation:]
  -[SBRootFolderView setShowsDoneButton:animated:]
  -[SBRootFolderView willMoveToWindow:]
  -[SBRootFolderView setLegibilitySettings:]
  -[SBRootFolderView borrowDockView]
  -[SBRootFolderView titledButtonsAlpha]
  -[SBRootFolderView trailingCustomViewPageScrollOffsetUsingPageWidth:]
  -[SBRootFolderView folderDidChange]
  -[SBRootFolderView setShowsDoneButton:]
  -[SBRootFolderView isSidebarVisibilityGestureActive]
  -[SBRootFolderView setSearchHidden:]
  -[SBRootFolderView scrollViewDidEndDecelerating:]
  -[SBRootFolderView prepareToTearDown]
  -[SBRootFolderView idleTextView]
  -[SBRootFolderView _statusBarInsetsForDockEdge:dockOffscreenPercentage:]
  -[SBRootFolderView statusBarInsetsForDockEdge:]
  -[SBRootFolderView scrollViewWillBeginDragging:]
  -[SBRootFolderView allowsFreeScrollingUntilScrollingEnds]
  -[SBRootFolderView rootListLayout]
  -[SBRootFolderView noteSidebarFinishedAnimating]
  -[SBRootFolderView fadeContentForMinificationFraction:]
  -[SBRootFolderView _sidebarScrollPanGestureRecognizerDidUpdate:]
  -[SBRootFolderView hidesOffscreenCustomPageViews]
  -[SBRootFolderView _pageCountForPageControl]
  -[SBRootFolderView doneButtonTriggered:]
  -[SBRootFolderView iconListViewForExtraIndex:]
  -[SBRootFolderView _shouldIgnoreOverscrollOnFirstPageForCurrentOrientation]
  -[SBRootFolderView togglePageManagementUIWithCompletionHandler:]
  -[SBRootFolderView searchPulldownWrapperView]
  -[SBRootFolderView getMetrics:dockEdge:]
  -[SBRootFolderView _layoutSubviews]
  -[SBRootFolderView specialLayoutManager]
  -[SBRootFolderView todayViewPageScrollOffsetUsingPageWidth:]
  -[SBRootFolderView firstListViewIconLocationTransitionHandler]
  -[SBRootFolderView scrollableWidthForVisibleColumnRange]
  -[SBRootFolderView exitPageManagementUIWithCompletionHandler:]
  -[SBRootFolderView _shouldIgnoreOverscrollOnLastPageForCurrentOrientation]
  -[SBRootFolderView updateDockViewOrientation]
  -[SBRootFolderView shouldPinScrollingToFirstOrLastPageScrollOffsetForProposedScrollOffset:]
  -[SBRootFolderView _createIconListViewForList:]
  -[SBRootFolderView tearDownListViews]
  -[SBRootFolderView additionalScrollWidthToKeepVisibleInOneDirection]
  -[SBRootFolderView _overscrollScrollPanGestureRecognizerDidUpdate:]
  -[SBRootFolderView removeDockOffscreenFractionClient:]
  -[SBRootFolderView ignoresOverscrollOnLastPageOrientations]
  -[SBRootFolderView updateConfigurationOfPageControlToAllowEnteringPageManagement]
  -[SBRootFolderView iconScrollViewDidCancelTouchTracking:]
  -[SBRootFolderView isPageIndexCustomAndRightmost:]
  -[SBRootFolderView _leadingCustomPageCount]
  -[SBRootFolderView shouldEndSidebarGestureWithSidebarVisibleWithCurrentProgress:velocity:]
  -[SBRootFolderView _animateViewsForScrollingToTodayView]
  -[SBRootFolderView layoutSearchableViews]
  -[SBRootFolderView _cleanUpAfterScrolling]
  -[SBRootFolderView returnScalingView]
  -[SBRootFolderView titledButtonsContainerView]
  -[SBRootFolderView minimumHomeScreenScaleForDockView:]
  -[SBRootFolderView setTodayViewBouncing:]
  -[SBRootFolderView clientDidChangeDockOffScreenFraction:]
  -[SBRootFolderView setShiftsPullDownSearchForVisibility:]
  -[SBRootFolderView setAllowsAutoscrollToTodayView:]
  -[SBRootFolderView _cleanUpAfterOverscrollScrollGestureEnded:]
  -[SBRootFolderView setSpecialLayoutManager:completionHandler:]
  -[SBRootFolderView setOrientation:]
  -[SBRootFolderView _isSidebarEnabledForOrientation:]
  -[SBRootFolderView _updateEditingStateAnimated:]
  -[SBRootFolderView favoriteTodayViewPageIndex]
  -[SBRootFolderView enterEditingTouchRect]
  -[SBRootFolderView setFolderSettings:]
  -[SBRootFolderView internalDockPageControlVerticalMargin]
  -[SBRootFolderView trailingCustomViewVisibilityProgress]
  -[SBRootFolderView initWithConfiguration:]
  -[SBRootFolderView setSidebarEffectivelyVisible:]
  -[SBRootFolderView transitionToSize:withTransitionCoordinator:]
  -[SBRootFolderView isOnTrailingCustomPage]
  -[SBRootFolderView scrollingAdjustment]
  -[SBRootFolderView trailingCustomBackdropView]
  -[SBRootFolderView trailingCustomView]
  -[SBRootFolderView _updateIconListIndexSearchableAndTodayViewsWithLayout:]
  -[SBRootFolderView iconListViewForIconListModelIndex:]
  -[SBRootFolderView _spotlightFirstIconRowOffset]
  -[SBRootFolderView _iconListFrameForPageRect:atIndex:]
  -[SBRootFolderView dockListView]
  -[SBRootFolderView _updateDockViewZOrdering]
  -[SBRootFolderView scrollViewDidEndScrollingAnimation:]
  -[SBRootFolderView sidebarViewPageScrollOffsetUsingPageWidth:]
  -[SBRootFolderView _trailingCustomPageCount]
  -[SBRootFolderView isOnSidebarPage]
  -[SBRootFolderView setPullDownSearchVisibilityProgress:]
  -[SBRootFolderView noteSidebarIsAnimating]
  -[SBRootFolderView _pageWidth]
  -[SBRootFolderView setTitledButtonsContainerView:]
  -[SBRootFolderView sidebarVisibilityProgressForLayout]
  -[SBRootFolderView prepareForTransition]
  -[SBRootFolderView setTransitioningSpecialLayoutManager:]
  -[SBRootFolderView setDelegate:]
  -[SBRootFolderView isSidebarSlideGestureActive]
  -[SBRootFolderView todayViewVisibilityProgress]
  -[SBRootFolderView makeTitledButtonOfClass:]
  -[SBRootFolderView _layoutSubviewsForPulldownSearch]
  -[SBRootFolderView newHomeScreenButtonBackgroundView]
  -[SBRootFolderView dockIconLocation]
  -[SBRootFolderView _willScrollToPageIndex:animated:]
  -[SBRootFolderView _layoutSubviewsForSidebarWithMetrics:]
  -[SBRootFolderView _shouldIgnoreOverscrollOnFirstPageForOrientation:]
  -[SBRootFolderView trailingCustomSearchDimmingView]
  -[SBRootFolderView _updateDockBackgroundViewForOcclusionByOverlay]
  -[SBRootFolderView _isSidebarEnabledForPageIndex:orientation:]
  -[SBRootFolderView _isSidebarEnabledForPageIndex:]
  -[SBRootFolderView shiftsPullDownSearchForVisibility]
  -[SBRootFolderView todayViewWrapperView]
  -[SBRootFolderView setAllowsFreeScrollingUntilScrollingEnds:]
  -[SBRootFolderView layoutSearchableViewsWithMetrics:]
  -[SBRootFolderView scrollViewHeightIncludesPageControlAndDock]
  -[SBRootFolderView iconScrollView:shouldSetAutoscrollContentOffset:]
  -[SBRootFolderView _cleanupAfterExtraScrollGesturesCompleted]
  -[SBRootFolderView _updateSidebarViewHidden]
  -[SBRootFolderView searchBackdropView]
  -[SBRootFolderView _adjustTodayContentForEdgeBounce]
  -[SBRootFolderView setDockViewBorrowed:]
  -[SBRootFolderView isTodayViewBouncing]
  -[SBRootFolderView isDockViewBorrowed]
  -[SBRootFolderView _scrollView:adjustedOffsetForOffset:translation:startPoint:locationInView:horizontalVelocity:verticalVelocity:]
  -[SBRootFolderView iconListViewAtPoint:]
  -[SBRootFolderView isDockPinnedForRotation]
  -[SBRootFolderView _setupIdleTextPrivacyDisclosures]
  -[SBRootFolderView todayView]
  -[SBRootFolderView shouldFadeDockOutDuringTransitionToTodayView]
  -[SBRootFolderView setSidebarVisibilityProgress:]
  -[SBRootFolderView _scrollOffsetForPageAtIndex:pageWidth:]
  -[SBRootFolderView setEditing:animated:]
  -[SBRootFolderView _updateIconListLegibilitySettings]
  -[SBRootFolderView isDockVisible]
  -[SBRootFolderView isPageManagementUIVisible]
  -[SBRootFolderView setSidebarVisibleWhenScrollingBegan:]
  -[SBRootFolderView setFirstListViewIconLocationTransitionHandler:]
  -[SBRootFolderView _setupStateDumper]
  -[SBRootFolderView _scaledBoundsForMinimumHomeScreenScale]
  -[SBRootFolderView shouldScrollPageControlDuringTransitionToTodayView]
  -[SBRootFolderView setSearchGesture:]
  -[SBRootFolderView userAttemptedToOverscrollLastPageDuringCurrentGesture]
  -[SBRootFolderView _doPageManagementEducation]
  -[SBRootFolderView _animateViewsForPullingToSearchWithMetrics:]
  -[SBRootFolderView setShowsAddWidgetButton:]
  -[SBRootFolderView descriptionBuilderWithMultilinePrefix:]
  -[SBRootFolderView newDockBackgroundMaterialViewWithInitialWeighting:]
  -[SBRootFolderView sidebarWrapperView]
  -[SBRootFolderView _animateViewsForPullingToSearch]
  -[SBRootFolderView updateIconListIndexAndVisibility:]
  -[SBRootFolderView _updateDockOffscreenFractionWithMetrics:]
  -[SBRootFolderView isModifyingDockOffscreenFraction]
  -[SBRootFolderView setOccluded:]
  -[SBRootFolderView setPageControlBorrowed:]
  -[SBRootFolderView sidebarPageIndex]
  -[SBRootFolderView setNeedsLayout]
  -[SBRootFolderView scrollViewDidEndDragging:willDecelerate:]
  -[SBRootFolderView setTodayViewVisibilityProgress:]
  -[SBRootFolderView iconLocationForList:]
  -[SBRootFolderView _shouldHideSidebarView]


_SBRootFolderLayoutWrapperView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  double statusBarHeightAdjustment
 @property  double headerOffset
 @property  {CGSize=dd} extendedSize
 @property  UIView *wrappedView

  // instance methods
  -[_SBRootFolderLayoutWrapperView setStatusBarHeightAdjustment:]
  -[_SBRootFolderLayoutWrapperView _updateLayout]
  -[_SBRootFolderLayoutWrapperView .cxx_destruct]
  -[_SBRootFolderLayoutWrapperView succinctDescriptionBuilder]
  -[_SBRootFolderLayoutWrapperView statusBarHeightAdjustment]
  -[_SBRootFolderLayoutWrapperView succinctDescription]
  -[_SBRootFolderLayoutWrapperView headerOffset]
  -[_SBRootFolderLayoutWrapperView setWrappedView:]
  -[_SBRootFolderLayoutWrapperView extendedSize]
  -[_SBRootFolderLayoutWrapperView setHeaderOffset:]
  -[_SBRootFolderLayoutWrapperView setExtendedSize:]
  -[_SBRootFolderLayoutWrapperView wrappedView]
  -[_SBRootFolderLayoutWrapperView descriptionWithMultilinePrefix:]
  -[_SBRootFolderLayoutWrapperView layoutSubviews]
  -[_SBRootFolderLayoutWrapperView descriptionBuilderWithMultilinePrefix:]


_SBRootFolderDockOffscreenFractionClient : NSObject /usr/lib/libSystem.B.dylib <SBDockOffscreenFractionModifying, BSDescriptionProviding>
 @property  SBRootFolderView *folderView
 @property  double desiredOffscreenFraction
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBRootFolderDockOffscreenFractionClient setFolderView:]
  -[_SBRootFolderDockOffscreenFractionClient layoutIfNeededForDockOffscreenFractionChanged]
  -[_SBRootFolderDockOffscreenFractionClient folderView]
  -[_SBRootFolderDockOffscreenFractionClient dealloc]
  -[_SBRootFolderDockOffscreenFractionClient .cxx_destruct]
  -[_SBRootFolderDockOffscreenFractionClient succinctDescriptionBuilder]
  -[_SBRootFolderDockOffscreenFractionClient succinctDescription]
  -[_SBRootFolderDockOffscreenFractionClient setDesiredOffscreenFraction:]
  -[_SBRootFolderDockOffscreenFractionClient desiredOffscreenFraction]
  -[_SBRootFolderDockOffscreenFractionClient invalidate]
  -[_SBRootFolderDockOffscreenFractionClient reason]
  -[_SBRootFolderDockOffscreenFractionClient initWithFolderView:reason:]
  -[_SBRootFolderDockOffscreenFractionClient descriptionWithMultilinePrefix:]
  -[_SBRootFolderDockOffscreenFractionClient descriptionBuilderWithMultilinePrefix:]
  -[_SBRootFolderDockOffscreenFractionClient setDockOffscreenFraction:]


SBRootFolderViewPageManagementLayoutManager : NSObject /usr/lib/libSystem.B.dylib <SBIconViewProviding, SBIconViewDelegate, SBIconListViewDragDelegate, SBPageManagementCellViewControllerDelegate, UIScrollViewDelegate, SBIconListViewDominoPivotAnimatorDelegate, SBRootFolderViewLayoutManager>
 @property  UILabel *titleLabel
 @property  SBTitledHomeScreenButton *doneButton
 @property  SBIconListView *rootListView
 @property  UIScrollView *pageManagementScrollView
 @property  <SBDockOffscreenFractionModifying> *dockOffscreenAssertion
 @property  unsigned long transitionCount
 @property  SBPageManagementIcon *draggingIcon
 @property  long long layoutAction
 @property  long long layoutConfiguration
 @property  UITapGestureRecognizer *backgroundTapGestureRecognizer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBRootFolderView *rootFolderView

  // instance methods
  -[SBRootFolderViewPageManagementLayoutManager iconView:canAddDragItemsToSession:]
  -[SBRootFolderViewPageManagementLayoutManager configureIconView:forIcon:]
  -[SBRootFolderViewPageManagementLayoutManager iconView:willAnimateDragLiftWithAnimator:session:]
  -[SBRootFolderViewPageManagementLayoutManager setDoneButton:]
  -[SBRootFolderViewPageManagementLayoutManager iconView:item:willAnimateDragCancelWithAnimator:]
  -[SBRootFolderViewPageManagementLayoutManager doneButton]
  -[SBRootFolderViewPageManagementLayoutManager layoutScrollViewAndRootListViewInFolderView:]
  -[SBRootFolderViewPageManagementLayoutManager layoutTitleLabelsInFolderView:]
  -[SBRootFolderViewPageManagementLayoutManager layoutDoneButtonInFolderView:metrics:]
  -[SBRootFolderViewPageManagementLayoutManager pageManagementScrollView]
  -[SBRootFolderViewPageManagementLayoutManager rootListView]
  -[SBRootFolderViewPageManagementLayoutManager layoutConfiguration]
  -[SBRootFolderViewPageManagementLayoutManager backgroundTapGestureRecognizer]
  -[SBRootFolderViewPageManagementLayoutManager firstNonHiddenAndValidIconListModelForFolderView:outListIndex:outPageIconListIndex:]
  -[SBRootFolderViewPageManagementLayoutManager setPageManagementScrollView:]
  -[SBRootFolderViewPageManagementLayoutManager backgroundTapped:]
  -[SBRootFolderViewPageManagementLayoutManager draggingIcon]
  -[SBRootFolderViewPageManagementLayoutManager makeRootListViewAnimated:]
  -[SBRootFolderViewPageManagementLayoutManager dockOffscreenAssertion]
  -[SBRootFolderViewPageManagementLayoutManager setDockOffscreenAssertion:]
  -[SBRootFolderViewPageManagementLayoutManager cleanUpViewsInFolderView:]
  -[SBRootFolderViewPageManagementLayoutManager transitionCount]
  -[SBRootFolderViewPageManagementLayoutManager setTransitionCount:]
  -[SBRootFolderViewPageManagementLayoutManager setLayoutAction:]
  -[SBRootFolderViewPageManagementLayoutManager folderListIndexToAnimateOutForList:inFolder:avoidingList:]
  -[SBRootFolderViewPageManagementLayoutManager newCellBackgroundMaterialViewWithInitialWeighting:]
  -[SBRootFolderViewPageManagementLayoutManager setLayoutConfiguration:]
  -[SBRootFolderViewPageManagementLayoutManager iconViewWillBeginDrag:session:]
  -[SBRootFolderViewPageManagementLayoutManager setTitleLabel:]
  -[SBRootFolderViewPageManagementLayoutManager setRootListView:]
  -[SBRootFolderViewPageManagementLayoutManager setDraggingIcon:]
  -[SBRootFolderViewPageManagementLayoutManager layoutAction]
  -[SBRootFolderViewPageManagementLayoutManager pageManagementCellViewControllerDidReceiveTap:]
  -[SBRootFolderViewPageManagementLayoutManager dominoPivotAnimator:didLayOutIconView:]
  -[SBRootFolderViewPageManagementLayoutManager recycleIconView:]
  -[SBRootFolderViewPageManagementLayoutManager setBackgroundTapGestureRecognizer:]
  -[SBRootFolderViewPageManagementLayoutManager titleLabel]
  -[SBRootFolderViewPageManagementLayoutManager iconViewCanBeginDrags:]
  -[SBRootFolderViewPageManagementLayoutManager iconView:dragPreviewForItem:session:previewParameters:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBRootFolderViewPageManagementLayoutManager .cxx_destruct]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:iconDropSessionDidUpdate:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:canHandleIconDropSession:]
  -[SBRootFolderViewPageManagementLayoutManager scrollViewWillBeginDragging:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:iconDropSessionDidEnter:]
  -[SBRootFolderViewPageManagementLayoutManager customImageViewControllerForIconView:]
  -[SBRootFolderViewPageManagementLayoutManager isIconViewRecycled:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:performIconDrop:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:iconDropSessionDidExit:]
  -[SBRootFolderViewPageManagementLayoutManager rootFolderView]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBRootFolderViewPageManagementLayoutManager doneButtonTapped:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBRootFolderViewPageManagementLayoutManager dequeueReusableIconViewOfClass:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:iconDropSession:didPauseAtLocation:]
  -[SBRootFolderViewPageManagementLayoutManager iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBRootFolderViewPageManagementLayoutManager layoutSubviews]
  -[SBRootFolderViewPageManagementLayoutManager setRootFolderView:]
  -[SBRootFolderViewPageManagementLayoutManager transitionToActive:usingAnimator:]


SBPageManagementIcon : SBLeafIcon
 @property  SBIconListModel *listModel

  // instance methods
  -[SBPageManagementIcon initWithListModel:]
  -[SBPageManagementIcon .cxx_destruct]
  -[SBPageManagementIcon listModel]


SBPageManagementCheckbox : UIButton /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  double checkboxDiameter
 @property  UIView *backgroundView
 @property  UIView *highlightView
 @property  CALayer *deselectedMask
 @property  UIImageView *customImageView

  // instance methods
  -[SBPageManagementCheckbox setSelected:animated:]
  -[SBPageManagementCheckbox backgroundView]
  -[SBPageManagementCheckbox _dynamicUserInterfaceTraitDidChange]
  -[SBPageManagementCheckbox initWithFrame:checkboxDiameter:backgroundView:]
  -[SBPageManagementCheckbox effectiveHighlightAlpha]
  -[SBPageManagementCheckbox updateDeselectedMaskState]
  -[SBPageManagementCheckbox effectiveImageAlpha]
  -[SBPageManagementCheckbox checkboxDiameter]
  -[SBPageManagementCheckbox deselectedMask]
  -[SBPageManagementCheckbox initWithFrame:]
  -[SBPageManagementCheckbox customImageView]
  -[SBPageManagementCheckbox highlightView]
  -[SBPageManagementCheckbox setSelected:]
  -[SBPageManagementCheckbox .cxx_destruct]
  -[SBPageManagementCheckbox setHighlighted:]
  -[SBPageManagementCheckbox intrinsicContentSize]
  -[SBPageManagementCheckbox sizeThatFits:]
  -[SBPageManagementCheckbox layoutSubviews]


SBPageManagementCellView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconListModelObserver, SBFolderObserver>
 @property  SBIconListView *listView
 @property  MTMaterialView *listBackgroundView
 @property  UIView *listDimmingView
 @property  UIView *listHighlightView
 @property  MTMaterialView *toggleButtonBackgroundView
 @property  SBFolder *folder
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  BOOL scalesListView
 @property  UIButton *toggleButton
 @property  BOOL listHighlighted
 @property  BOOL hasCleanedUpListView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBPageManagementCellView setIconImageInfo:]
  -[SBPageManagementCellView setScalesListView:]
  -[SBPageManagementCellView listBackgroundView]
  -[SBPageManagementCellView listDimmingView]
  -[SBPageManagementCellView initWithListView:listBackgroundView:toggleButtonBackgroundView:folder:metrics:]
  -[SBPageManagementCellView cleanUpListView]
  -[SBPageManagementCellView scalesListView]
  -[SBPageManagementCellView togglePageHidden:]
  -[SBPageManagementCellView hasCleanedUpListView]
  -[SBPageManagementCellView listHighlightView]
  -[SBPageManagementCellView setHasCleanedUpListView:]
  -[SBPageManagementCellView setListHighlighted:]
  -[SBPageManagementCellView toggleButtonBackgroundView]
  -[SBPageManagementCellView isListHighlighted]
  -[SBPageManagementCellView iconImageInfo]
  -[SBPageManagementCellView iconListHiddenDidChange:]
  -[SBPageManagementCellView listView]
  -[SBPageManagementCellView .cxx_destruct]
  -[SBPageManagementCellView folder:listHiddenDidChange:]
  -[SBPageManagementCellView folder]
  -[SBPageManagementCellView toggleButton]
  -[SBPageManagementCellView layoutSubviews]


SBPageManagementListTapGestureRecognizer : UIGestureRecognizer /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UITouch *activeTouch

  // instance methods
  -[SBPageManagementListTapGestureRecognizer touchesBegan:withEvent:]
  -[SBPageManagementListTapGestureRecognizer .cxx_destruct]
  -[SBPageManagementListTapGestureRecognizer touchesCancelled:withEvent:]
  -[SBPageManagementListTapGestureRecognizer activeTouch]
  -[SBPageManagementListTapGestureRecognizer reset]
  -[SBPageManagementListTapGestureRecognizer touchesMoved:withEvent:]
  -[SBPageManagementListTapGestureRecognizer touchesEnded:withEvent:]
  -[SBPageManagementListTapGestureRecognizer setActiveTouch:]


SBPageManagementCellViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <UIGestureRecognizerDelegate, SBIconViewCustomImageViewControlling>
 @property  UIGestureRecognizer *tapGestureRecognizer
 @property  SBIconListView *listView
 @property  MTMaterialView *listBackgroundView
 @property  UIView *listDimmingView
 @property  MTMaterialView *toggleButtonBackgroundView
 @property  SBFolder *folder
 @property  <SBPageManagementCellViewControllerDelegate> *delegate
 @property  BOOL scalesListView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  BOOL editing
 @property  SBIcon *icon
 @property  <SBLeafIconDataSource> *visiblyActiveDataSource
 @property  BOOL showingContextMenu
 @property  BOOL overlapping
 @property  BOOL dropping
 @property  BOOL userInteractionEnabled
 @property  BOOL backgroundBlurEnabled
 @property  BOOL wantsCaptureOnlyBackgroundView
 @property  @? backgroundViewProvider
 @property  double brightness
 @property  BOOL wantsLabelHidden
 @property  BOOL visiblySettled
 @property  BOOL automaticallyUpdatesVisiblySettled
 @property  BOOL privateModeEnabled
 @property  unsigned long presentationMode
 @property  unsigned long imageViewAlignment
 @property  unsigned long pauseReasons
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *applicationShortcutItems
 @property  UIView *snapshotView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds
 @property  double continuousCornerRadius
 @property  BOOL showsSquareCorners

  // instance methods
  -[SBPageManagementCellViewController visibleBounds]
  -[SBPageManagementCellViewController setIconImageInfo:]
  -[SBPageManagementCellViewController setShowsSquareCorners:]
  -[SBPageManagementCellViewController continuousCornerRadius]
  -[SBPageManagementCellViewController setScalesListView:]
  -[SBPageManagementCellViewController listBackgroundView]
  -[SBPageManagementCellViewController listDimmingView]
  -[SBPageManagementCellViewController initWithListView:listBackgroundView:toggleButtonBackgroundView:folder:metrics:]
  -[SBPageManagementCellViewController tapGestureRecognizer]
  -[SBPageManagementCellViewController cleanUpListView]
  -[SBPageManagementCellViewController cancelGestures]
  -[SBPageManagementCellViewController scalesListView]
  -[SBPageManagementCellViewController listHighlightView]
  -[SBPageManagementCellViewController setListHighlighted:]
  -[SBPageManagementCellViewController toggleButtonBackgroundView]
  -[SBPageManagementCellViewController showsSquareCorners]
  -[SBPageManagementCellViewController listViewTapped:]
  -[SBPageManagementCellViewController pageManagementView]
  -[SBPageManagementCellViewController iconImageInfo]
  -[SBPageManagementCellViewController listView]
  -[SBPageManagementCellViewController sourceView]
  -[SBPageManagementCellViewController setEditing:]
  -[SBPageManagementCellViewController .cxx_destruct]
  -[SBPageManagementCellViewController gestureRecognizerShouldBegin:]
  -[SBPageManagementCellViewController folder]
  -[SBPageManagementCellViewController isEditing]
  -[SBPageManagementCellViewController setDelegate:]
  -[SBPageManagementCellViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[SBPageManagementCellViewController delegate]
  -[SBPageManagementCellViewController loadView]


SBHSidebarVisualConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  double contentWidth
 @property  double searchBarTopOffset
 @property  BOOL contentFullscreen
 @property  {NSDirectionalEdgeInsets=dddd} insets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHSidebarVisualConfiguration copyWithZone:]
  -[SBHSidebarVisualConfiguration isContentFullscreen]
  -[SBHSidebarVisualConfiguration init]
  -[SBHSidebarVisualConfiguration searchBarTopOffset]
  -[SBHSidebarVisualConfiguration effectiveContentWidthWithContainerWidth:]
  -[SBHSidebarVisualConfiguration setContentWidth:]
  -[SBHSidebarVisualConfiguration setSearchBarTopOffset:]
  -[SBHSidebarVisualConfiguration succinctDescriptionBuilder]
  -[SBHSidebarVisualConfiguration setContentFullscreen:]
  -[SBHSidebarVisualConfiguration setInsets:]
  -[SBHSidebarVisualConfiguration insets]
  -[SBHSidebarVisualConfiguration succinctDescription]
  -[SBHSidebarVisualConfiguration isEqual:]
  -[SBHSidebarVisualConfiguration contentWidth]
  -[SBHSidebarVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHSidebarVisualConfiguration descriptionBuilderWithMultilinePrefix:]


SBIconDragManager : NSObject /usr/lib/libSystem.B.dylib <SBIconListViewDragObserver, SBHIconDragAutoScrollAssistantDelegate>
 @property  SBIconDraggingEditContext *draggingEditContext
 @property  SBHIconManager *iconManager
 @property  BOOL iconDragging
 @property  BOOL trackingMultipleIconDrags
 @property  BOOL trackingMultipleItemIconDrags
 @property  BOOL trackingUserActiveIconDrags
 @property  BOOL trackingDroppingIconDrags
 @property  BOOL trackingActiveOrDroppingIconDrags
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconDragManager cancelAllDrags]
  +[SBIconDragManager enumerateMedusaPlatterDragPreviewsInDragItems:usingBlock:]
  +[SBIconDragManager enumerateAppDragContextsInDragItems:usingBlock:]

  // instance methods
  -[SBIconDragManager iconView:canAddDragItemsToSession:]
  -[SBIconDragManager rootFolder]
  -[SBIconDragManager iconView:willAnimateDragLiftWithAnimator:session:]
  -[SBIconDragManager iconView:dragLiftAnimationDidChangeDirection:]
  -[SBIconDragManager iconView:willAddDragItems:toSession:]
  -[SBIconDragManager iconView:session:willEndWithOperation:]
  -[SBIconDragManager iconViewWillCancelDrag:]
  -[SBIconDragManager iconView:willUsePreviewForCancelling:targetIconView:]
  -[SBIconDragManager iconView:item:willAnimateDragCancelWithAnimator:]
  -[SBIconDragManager iconDropSessionDidUpdate:inIconListView:]
  -[SBIconDragManager cancelAllDrags]
  -[SBIconDragManager iconManager]
  -[SBIconDragManager canAcceptDropInSession:inIconListView:]
  -[SBIconDragManager iconDragContextForDragDropSession:]
  -[SBIconDragManager iconViewWillBeginDrag:session:]
  -[SBIconDragManager autoScrollAssistant:triggeredAutoScrollInDirection:]
  -[SBIconDragManager resetWatchdogTimerForDragWithIdentifier:timeout:]
  -[SBIconDragManager addAppLocalContextsFromDragItems:session:toDragWithIdentifier:]
  -[SBIconDragManager iconDropSessionDidExitWithIdentifier:fromIconListView:]
  -[SBIconDragManager iconViewCanBeginDrags:]
  -[SBIconDragManager init]
  -[SBIconDragManager iconView:dragPreviewForItem:session:previewParameters:]
  -[SBIconDragManager draggedItemIdentifiersForDragDropSession:]
  -[SBIconDragManager removeAllDragPlaceholders]
  -[SBIconDragManager _startTrackingDragWithIdentifier:]
  -[SBIconDragManager iconDropSessionWithIdentifier:draggedIconIdentifiers:didPauseAtLocation:inIconListView:]
  -[SBIconDragManager iconListView:concludeIconDrop:]
  -[SBIconDragManager isTrackingDroppingIconDrags]
  -[SBIconDragManager isTrackingDragInUserActiveLiftPreviewOriginatingFromIconView:]
  -[SBIconDragManager removePlatterViewFromMedusaDragOffscreenWindow:]
  -[SBIconDragManager _invalidateAutoScrollAssistant]
  -[SBIconDragManager isTrackingMultipleIconDrags]
  -[SBIconDragManager noteIconTapped]
  -[SBIconDragManager performSpringLoadedInteractionForIconDragOnIconView:]
  -[SBIconDragManager maximumAllowedIconDroppingAnimationsForListView:]
  -[SBIconDragManager _replaceDraggedIconViewWithPlaceholder:]
  -[SBIconDragManager iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBIconDragManager iconListView:iconDropSessionDidEnd:]
  -[SBIconDragManager isTrackingUserActiveDragOriginatingFromIconView:]
  -[SBIconDragManager simulatePerformIconDropWithIdentifier:inIconListView:]
  -[SBIconDragManager setIndexPath:whenRevertingIconsWithPathPrefix:]
  -[SBIconDragManager uniqueIdentifierForIconDragSession:]
  -[SBIconDragManager countOfTrackedDragsOriginatingFromOrDroppingIntoIconView:]
  -[SBIconDragManager noteFolderControllerWillClose:]
  -[SBIconDragManager .cxx_destruct]
  -[SBIconDragManager captureInitialIconStateToDragContext:]
  -[SBIconDragManager _updateDragPreviewsForEditingState:animated:]
  -[SBIconDragManager concludeIconDrop:]
  -[SBIconDragManager revertActiveDragChanges]
  -[SBIconDragManager appDragLocalContextForDragItem:]
  -[SBIconDragManager _isTrackingDragWithIdentifier:]
  -[SBIconDragManager removeDragPlaceholdersForDragWithIdentifier:]
  -[SBIconDragManager removeEmptyFolders]
  -[SBIconDragManager succinctDescriptionBuilder]
  -[SBIconDragManager isTrackingDragOriginatingFromOrDroppingIntoIconView:otherThanDragWithIdentifier:]
  -[SBIconDragManager fullIndexPathForRevertingIcon:context:]
  -[SBIconDragManager _updateDragPreviewIconViewForDropSession:inIconListView:]
  -[SBIconDragManager removeDragPlaceholdersForDragWithIdentifier:placeholderPath:]
  -[SBIconDragManager isTrackingWidgetIconDrags]
  -[SBIconDragManager delayAfterAfterLiftPreviewToBeginEditing]
  -[SBIconDragManager _stopTrackingDragIfPossibleWithIdentifier:]
  -[SBIconDragManager enumerateIconDragContextsUsingBlock:]
  -[SBIconDragManager iconDropSessionDidEnd:]
  -[SBIconDragManager _stopTrackingDragWithIdentifier:]
  -[SBIconDragManager simulateiconDropSessionDidEnterWithIconIdentifiers:inIconListView:]
  -[SBIconDragManager uniqueIdentifierForIconDropSession:]
  -[SBIconDragManager _handleScaleAdjustmentForDropSession:currentListView:]
  -[SBIconDragManager isTrackingDragOfIcon:]
  -[SBIconDragManager performIconDrop:inIconListView:]
  -[SBIconDragManager succinctDescription]
  -[SBIconDragManager firstHiddenIconIdentifierInDrag:]
  -[SBIconDragManager removeIconsWithDraggedIconIdentifiers:savingOriginsToContext:]
  -[SBIconDragManager compactAndLayoutRootIconLists]
  -[SBIconDragManager iconDropSessionDidExit:fromIconListView:]
  -[SBIconDragManager shouldBeginEditingWhenAddingDragItems]
  -[SBIconDragManager revertLocationsForIcons:dragIdentifier:]
  -[SBIconDragManager isTrackingUserActiveIconDrags]
  -[SBIconDragManager draggingEditContext]
  -[SBIconDragManager replaceDragPlaceholdersWithReferencedIconsInDragWithIdentifier:]
  -[SBIconDragManager shouldCancelDragsWhenEditingEnds]
  -[SBIconDragManager isTrackingDragMatchingPredicate:]
  -[SBIconDragManager canHandleIconDropSession:inIconListView:]
  -[SBIconDragManager informQuickActionPlatterDidFinishPresentation:]
  -[SBIconDragManager revertLocationsForUnplacedIconsInDragWithIdentifier:]
  -[SBIconDragManager revertDragChangesForDragWithIdentifier:]
  -[SBIconDragManager removeAllDragPlaceholdersInFolder:passingTest:]
  -[SBIconDragManager draggedIconForIdentifier:]
  -[SBIconDragManager iconDropSessionDidEnter:inIconListView:]
  -[SBIconDragManager simulateIconDragWithIdentifier:didPauseAtLocation:inIconListView:]
  -[SBIconDragManager allDragIdentifiers]
  -[SBIconDragManager updateExistingIconPlaceholderForDragWithIdentifier:]
  -[SBIconDragManager shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBIconDragManager iconView:didEndDragSession:withOperation:]
  -[SBIconDragManager _updateAutoScrollAssistantForDropSession:]
  -[SBIconDragManager noteFolderBeganScrolling]
  -[SBIconDragManager watchdogDragWithIdentifier:]
  -[SBIconDragManager iconDropSession:didPauseAtLocation:inIconListView:]
  -[SBIconDragManager cancelEditingAndAllDrags]
  -[SBIconDragManager simulateIconDraggingEndedWithIdentifier:]
  -[SBIconDragManager canMakeIconViewRecipient:]
  -[SBIconDragManager iconDragContextForDragWithIdentifier:]
  -[SBIconDragManager isIconDragging]
  -[SBIconDragManager setDraggingEditContext:]
  -[SBIconDragManager iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBIconDragManager setIconManager:]
  -[SBIconDragManager enumerateIconDragIdentifiersUsingBlock:]
  -[SBIconDragManager removeEmptyFoldersInFolder:]
  -[SBIconDragManager revertLocationForIcon:toPath:]
  -[SBIconDragManager watchdogTimerDidFire:]
  -[SBIconDragManager addPlatterViewToMedusaDragOffscreenWindow:]
  -[SBIconDragManager _windowForDragPreviews]
  -[SBIconDragManager draggedIconsForIdentifiers:]
  -[SBIconDragManager _iconForDragItem:inIconListView:]
  -[SBIconDragManager iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBIconDragManager swapTrackedIconWithIdentifier:withIcon:]
  -[SBIconDragManager removeAllGrabbedIconViews]
  -[SBIconDragManager iconDropSessionDidEnter:identifier:draggedIconIdentifiers:inIconListView:]
  -[SBIconDragManager model]
  -[SBIconDragManager iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBIconDragManager shouldBeginEditingWhenLiftPreviewBegins]
  -[SBIconDragManager iconDragContextForDragItem:]
  -[SBIconDragManager iconDragContextForDragSession:]
  -[SBIconDragManager iconDropSessionDidEnd:identifier:draggedIconIdentifiers:]
  -[SBIconDragManager shouldUseGhostIconForIconView:]
  -[SBIconDragManager isTrackingDragOriginatingFromIconView:]
  -[SBIconDragManager stopTrackingDragLocationForEditingForDragWithIdentifier:]
  -[SBIconDragManager iconIdentifierForDragItem:]
  -[SBIconDragManager noteIconManagerEditingDidChange]
  -[SBIconDragManager iconDragContextForDropSession:]
  -[SBIconDragManager shouldBeginEditingWhenDragBegins]
  -[SBIconDragManager _shouldPerformRippleAnimationForInsertingDragItem:toIconListView:]
  -[SBIconDragManager doesIconViewRepresentRealIconPosition:]
  -[SBIconDragManager replaceAllBouncedIconsInContext:]
  -[SBIconDragManager descriptionWithMultilinePrefix:]
  -[SBIconDragManager _iconViewForDragItem:inIconListView:]
  -[SBIconDragManager doesIconLocationRepresentRealIconPosition:]
  -[SBIconDragManager performIconDrop:identifier:draggedIconIdentifiers:inIconListView:]
  -[SBIconDragManager isTrackingDropIntoDestinationIconView:]
  -[SBIconDragManager descriptionBuilderWithMultilinePrefix:]
  -[SBIconDragManager changeStateOfDragWithIdentifier:toState:]
  -[SBIconDragManager _isTrackingDrag:]
  -[SBIconDragManager compactAndLayoutRootIconListsWithDuration:]
  -[SBIconDragManager replaceAllDragPlaceholdersWithReferencedIcons]
  -[SBIconDragManager startTrackingDragLocationForEditingFromDropSession:orDragSession:]
  -[SBIconDragManager isTrackingActiveOrDroppingIconDrags]
  -[SBIconDragManager _cleanUpAllDraggingState]
  -[SBIconDragManager replaceDragPlaceholderWithReferencedIcons:]
  -[SBIconDragManager isTrackingMultipleItemIconDrags]


SBIconDraggingEditContext : NSObject /usr/lib/libSystem.B.dylib
 @property  id draggingUniqueIdentifier
 @property  {CGPoint=dd} enteredScreenLocation
 @property  BOOL enteredScreenLocationNeedsUpdate

  // instance methods
  -[SBIconDraggingEditContext setDraggingUniqueIdentifier:]
  -[SBIconDraggingEditContext setEnteredScreenLocation:]
  -[SBIconDraggingEditContext draggingUniqueIdentifier]
  -[SBIconDraggingEditContext enteredScreenLocationNeedsUpdate]
  -[SBIconDraggingEditContext setEnteredScreenLocationNeedsUpdate:]
  -[SBIconDraggingEditContext enteredScreenLocation]
  -[SBIconDraggingEditContext .cxx_destruct]


SBIconDragContext : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  long long state
 @property  NSObject<OS_os_activity> *activity
 @property  BOOL userActive
 @property  BOOL hasUserDragged
 @property  SBPlaceholderIcon *iconPlaceholder
 @property  NSArray *grabbedIconViews
 @property  NSSet *itemIdentifiers
 @property  NSSet *sourceIcons
 @property  BOOL hasNonDefaultSizedSourceIcons
 @property  SBIconView *primaryIconView
 @property  BOOL waitingForMessage
 @property  NSSet *expectedMessages
 @property  BOOL performedIconDrop
 @property  BOOL cancelled
 @property  SBIconView *recipientIconView
 @property  NSSet *appLocalContexts
 @property  NSDate *lastUserInteractionDate
 @property  NSTimer *watchdogTimer
 @property  {CGPoint=dd} initialTouchOffsetFromIconImageCenter
 @property  BOOL notifiedDelegateForDropSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconDragContext setCancelled:]
  -[SBIconDragContext isCancelled]
  -[SBIconDragContext itemIdentifiers]
  -[SBIconDragContext activity]
  -[SBIconDragContext isUserActive]
  -[SBIconDragContext init]
  -[SBIconDragContext hasSourceIconView:]
  -[SBIconDragContext enumerateDestinationIconViewsUsingBlock:]
  -[SBIconDragContext hasDestinationIconView:]
  -[SBIconDragContext hasDragItem:]
  -[SBIconDragContext primaryIconView]
  -[SBIconDragContext lastUserInteractionDate]
  -[SBIconDragContext hasUserDragged]
  -[SBIconDragContext enumerateSourceIconViewsUsingBlock:]
  -[SBIconDragContext isWaitingForMessage]
  -[SBIconDragContext expectedMessages]
  -[SBIconDragContext resetLastUserInteractionDate]
  -[SBIconDragContext setAppDragLocalContext:forDragItem:]
  -[SBIconDragContext iconPlaceholder]
  -[SBIconDragContext setIconPlaceholder:]
  -[SBIconDragContext grabbedIconViews]
  -[SBIconDragContext setGrabbedIconViews:]
  -[SBIconDragContext setInitialIndexPath:forIcon:]
  -[SBIconDragContext initialIndexPathForIcon:]
  -[SBIconDragContext initialIndexPathForIconWithIdentifier:]
  -[SBIconDragContext hasItemIdentifier:]
  -[SBIconDragContext swapSourceIconWithIdentifier:withIcon:]
  -[SBIconDragContext removeAllMessageExpectations]
  -[SBIconDragContext setRecipientIconView:]
  -[SBIconDragContext addSourceIcon:]
  -[SBIconDragContext addMessageExpectationNamed:]
  -[SBIconDragContext setPrimaryIconView:]
  -[SBIconDragContext addSourceIconView:]
  -[SBIconDragContext addItemIdentifier:]
  -[SBIconDragContext addGrabbedIconView:]
  -[SBIconDragContext dragPreviewForIconView:]
  -[SBIconDragContext performedIconDrop]
  -[SBIconDragContext removeMessageExpectationNamed:]
  -[SBIconDragContext addIconViewDroppingAssertion:forIconView:]
  -[SBIconDragContext setTargetIconView:forCancellingIconView:]
  -[SBIconDragContext targetIconViewForCancellingIconView:]
  -[SBIconDragContext clearAllDropAssertions]
  -[SBIconDragContext setDragPreview:forIconView:]
  -[SBIconDragContext setInitialTouchOffsetFromIconImageCenter:]
  -[SBIconDragContext recipientIconView]
  -[SBIconDragContext enumerateDragPreviewsUsingBlock:]
  -[SBIconDragContext hasEnteredIconListView:]
  -[SBIconDragContext addEnteredIconListView:]
  -[SBIconDragContext notifiedDelegateForDropSession]
  -[SBIconDragContext setNotifiedDelegateForDropSession:]
  -[SBIconDragContext initialTouchOffsetFromIconImageCenter]
  -[SBIconDragContext setBouncedIcons:forListModel:]
  -[SBIconDragContext listModelEnumeratorForBouncedIcons]
  -[SBIconDragContext bouncedIconsForListModel:]
  -[SBIconDragContext setIcon:shouldExpandAfterDropAnimationForDragItems:]
  -[SBIconDragContext setDestinationStackIconView:forIconWithIdentifier:]
  -[SBIconDragContext setDestinationFolderIconView:forIconWithIdentifier:]
  -[SBIconDragContext addDestinationIconView:]
  -[SBIconDragContext setPerformedIconDrop:]
  -[SBIconDragContext addDropAnimatingDragItem:]
  -[SBIconDragContext setSourceIcons:]
  -[SBIconDragContext destinationStackIconViewForIconWithIdentifier:]
  -[SBIconDragContext destinationFolderIconViewForIconWithIdentifier:]
  -[SBIconDragContext iconToExpandAfterDropAnimationForDragItem:]
  -[SBIconDragContext isAnimatingDropForDragItem:]
  -[SBIconDragContext clearDropAssertionsForIconView:]
  -[SBIconDragContext hasNonDefaultSizedSourceIcons]
  -[SBIconDragContext setLastUserInteractionDate:]
  -[SBIconDragContext _addPrepareForDropAssertionForIconView:]
  -[SBIconDragContext addAppLocalContext:]
  -[SBIconDragContext addSourceIcons:]
  -[SBIconDragContext hasMessageExpectationNamed:]
  -[SBIconDragContext appLocalContexts]
  -[SBIconDragContext dealloc]
  -[SBIconDragContext setState:]
  -[SBIconDragContext setItemIdentifiers:]
  -[SBIconDragContext .cxx_destruct]
  -[SBIconDragContext appDragLocalContextForDragItem:]
  -[SBIconDragContext succinctDescriptionBuilder]
  -[SBIconDragContext succinctDescription]
  -[SBIconDragContext setWatchdogTimer:]
  -[SBIconDragContext watchdogTimer]
  -[SBIconDragContext state]
  -[SBIconDragContext descriptionWithMultilinePrefix:]
  -[SBIconDragContext sourceIcons]
  -[SBIconDragContext descriptionBuilderWithMultilinePrefix:]


SBDefaultIconDragPreviewWindow : UIWindow /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconDragPreviewContaining>
 @property  UIView *iconDragPreviewContainerView

  // instance methods
  -[SBDefaultIconDragPreviewWindow iconDragPreviewContainerView]


SBHIconAccessoryCountedMapImageTuple : NSObject /usr/lib/libSystem.B.dylib <SBCountedMapValue>
 @property  UIImage *image
 @property  <NSCopying><NSObject> *sbh_countedMapKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconAccessoryCountedMapImageTuple copyWithZone:]
  -[SBHIconAccessoryCountedMapImageTuple initWithImage:countedMapKey:hash:]
  -[SBHIconAccessoryCountedMapImageTuple initWithImage:countedMapKey:]
  -[SBHIconAccessoryCountedMapImageTuple dealloc]
  -[SBHIconAccessoryCountedMapImageTuple .cxx_destruct]
  -[SBHIconAccessoryCountedMapImageTuple image]
  -[SBHIconAccessoryCountedMapImageTuple isEqual:]
  -[SBHIconAccessoryCountedMapImageTuple sbh_countedMapKey]


SBIconProgressView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  double backgroundAlpha
 @property  double foregroundAlpha
 @property  double circleRadiusFraction
 @property  double pauseRadiusFraction
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} circleBoundingRect
 @property  long long displayedState
 @property  BOOL displayingPaused
 @property  double displayedFraction
 @property  _SBIconProgressStateTransition *activeStateTransition
 @property  _SBIconProgressPausedTransition *activePausedTransition
 @property  _SBIconProgressFractionTransition *activeFractionTransition
 @property  <SBIconProgressViewDelegate> *delegate
 @property  UIImage *overlayImage
 @property  BOOL canAnimate
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo

  // class methods
  +[SBIconProgressView _pieImagesMemoryPool]
  +[SBIconProgressView _pieImageAtFraction:]

  // instance methods
  -[SBIconProgressView setIconImageInfo:]
  -[SBIconProgressView overlayImage]
  -[SBIconProgressView backgroundAlpha]
  -[SBIconProgressView foregroundAlpha]
  -[SBIconProgressView setForegroundAlpha:]
  -[SBIconProgressView canAnimate]
  -[SBIconProgressView iconImageInfo]
  -[SBIconProgressView _ensureDisplayLink]
  -[SBIconProgressView initWithFrame:]
  -[SBIconProgressView setOverlayImage:]
  -[SBIconProgressView _updateTransitionsAnimated:]
  -[SBIconProgressView _clearDisplayLink]
  -[SBIconProgressView setActivePausedTransition:]
  -[SBIconProgressView setActiveStateTransition:]
  -[SBIconProgressView _updatePausedTransitionAnimated:]
  -[SBIconProgressView _updateStateTransitionAnimated:]
  -[SBIconProgressView setActiveFractionTransition:]
  -[SBIconProgressView _updateFractionTransitionAnimated:]
  -[SBIconProgressView _hasActiveTransitions]
  -[SBIconProgressView _drawPieWithCenter:]
  -[SBIconProgressView _drawOutgoingCircleWithCenter:]
  -[SBIconProgressView _drawIncomingCircleWithCenter:]
  -[SBIconProgressView setCanAnimate:]
  -[SBIconProgressView _drawPauseUIWithCenter:]
  -[SBIconProgressView _circleScaleFactor]
  -[SBIconProgressView setState:paused:fractionLoaded:animated:]
  -[SBIconProgressView circleBoundingRect]
  -[SBIconProgressView circleRadiusFraction]
  -[SBIconProgressView pauseRadiusFraction]
  -[SBIconProgressView setCircleRadiusFraction:]
  -[SBIconProgressView setPauseRadiusFraction:]
  -[SBIconProgressView displayingPaused]
  -[SBIconProgressView setDisplayingPaused:]
  -[SBIconProgressView displayedFraction]
  -[SBIconProgressView setDisplayedFraction:]
  -[SBIconProgressView activeStateTransition]
  -[SBIconProgressView activePausedTransition]
  -[SBIconProgressView activeFractionTransition]
  -[SBIconProgressView dealloc]
  -[SBIconProgressView _onDisplayLink:]
  -[SBIconProgressView .cxx_destruct]
  -[SBIconProgressView drawRect:]
  -[SBIconProgressView _maskImage]
  -[SBIconProgressView setDisplayedState:]
  -[SBIconProgressView displayedState]
  -[SBIconProgressView setDelegate:]
  -[SBIconProgressView delegate]
  -[SBIconProgressView descriptionWithMultilinePrefix:]
  -[SBIconProgressView setBackgroundAlpha:]
  -[SBIconProgressView descriptionBuilderWithMultilinePrefix:]


_SBIconProgressTransition : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[_SBIconProgressTransition isCompleteWithView:]
  -[_SBIconProgressTransition completeTransitionAndUpdateView:]
  -[_SBIconProgressTransition updateView:withElapsedTime:]


_SBIconProgressStateTransition : _SBIconProgressTransition
  // class methods
  +[_SBIconProgressStateTransition newTransitionFromState:toState:]
  +[_SBIconProgressStateTransition _classForTransitionFromState:toState:]

  // instance methods
  -[_SBIconProgressStateTransition isCompleteWithView:]
  -[_SBIconProgressStateTransition completeTransitionAndUpdateView:]
  -[_SBIconProgressStateTransition updateView:withElapsedTime:]
  -[_SBIconProgressStateTransition _initWithFromState:toState:]
  -[_SBIconProgressStateTransition _updateView:]
  -[_SBIconProgressStateTransition .cxx_destruct]


_SBIconProgressNoneWaitingStateTransition : _SBIconProgressStateTransition
  // instance methods
  -[_SBIconProgressNoneWaitingStateTransition _updateView:]


_SBIconProgressWaitingLoadingStateTransition : _SBIconProgressStateTransition
  // instance methods
  -[_SBIconProgressWaitingLoadingStateTransition _updateView:]


_SBIconProgressLoadingNoneStateTransition : _SBIconProgressStateTransition
  // instance methods
  -[_SBIconProgressLoadingNoneStateTransition _updateView:]


_SBIconProgressPausedTransition : _SBIconProgressTransition
  // class methods
  +[_SBIconProgressPausedTransition newTransitionToPaused:]

  // instance methods
  -[_SBIconProgressPausedTransition isCompleteWithView:]
  -[_SBIconProgressPausedTransition updateToPaused:]
  -[_SBIconProgressPausedTransition completeTransitionAndUpdateView:]
  -[_SBIconProgressPausedTransition updateView:withElapsedTime:]
  -[_SBIconProgressPausedTransition _updateView:]
  -[_SBIconProgressPausedTransition _initToPaused:]
  -[_SBIconProgressPausedTransition _updateTimingFunction]
  -[_SBIconProgressPausedTransition _updateElapsedTimeFromFraction]
  -[_SBIconProgressPausedTransition .cxx_destruct]


_SBIconProgressFractionTransition : _SBIconProgressTransition
  // class methods
  +[_SBIconProgressFractionTransition newTransitionToFraction:]

  // instance methods
  -[_SBIconProgressFractionTransition isCompleteWithView:]
  -[_SBIconProgressFractionTransition completeTransitionAndUpdateView:]
  -[_SBIconProgressFractionTransition updateToFraction:]
  -[_SBIconProgressFractionTransition updateView:withElapsedTime:]
  -[_SBIconProgressFractionTransition _updateView:forDisplayedFraction:]


SBHMinusPageStepper : SBFSteppedAnimationTimingFunctionCalculator /System/Library/Frameworks/UIKit.framework/UIKit
 @property  double backgroundBlurAlpha
 @property  double pageControlAlpha

  // instance methods
  -[SBHMinusPageStepper init]
  -[SBHMinusPageStepper pageControlAlpha]
  -[SBHMinusPageStepper backgroundBlurAlpha]


SBHSpecialAvocadoDescriptor : CHSAvocadoDescriptor /System/Library/Frameworks/Intents.framework/Intents
 @property  unsigned long type

  // class methods
  +[SBHSpecialAvocadoDescriptor supportsSecureCoding]

  // instance methods
  -[SBHSpecialAvocadoDescriptor accentColor]
  -[SBHSpecialAvocadoDescriptor _initWithType:supportedSizeClasses:]
  -[SBHSpecialAvocadoDescriptor initWithType:supportedSizeClasses:]
  -[SBHSpecialAvocadoDescriptor setType:]
  -[SBHSpecialAvocadoDescriptor backgroundColor]
  -[SBHSpecialAvocadoDescriptor initWithType:]
  -[SBHSpecialAvocadoDescriptor encodeWithCoder:]
  -[SBHSpecialAvocadoDescriptor type]
  -[SBHSpecialAvocadoDescriptor initWithCoder:]


SBHCustomIconListLayoutProvider : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayoutProvider>
 @property  NSDictionary *listLayouts
 @property  <SBIconListLayout> *defaultLayout

  // instance methods
  -[SBHCustomIconListLayoutProvider initWithListLayouts:]
  -[SBHCustomIconListLayoutProvider init]
  -[SBHCustomIconListLayoutProvider listLayouts]
  -[SBHCustomIconListLayoutProvider initWithListLayouts:defaultLayout:]
  -[SBHCustomIconListLayoutProvider .cxx_destruct]
  -[SBHCustomIconListLayoutProvider defaultLayout]
  -[SBHCustomIconListLayoutProvider layoutForIconLocation:]


SBHIconManager : NSObject /usr/lib/libSystem.B.dylib <UIPopoverPresentationControllerDelegate, SBReusableViewMapDelegate, SBRootFolderPageStateObserver, SBNestingViewControllerDelegate, SBHIconModelDelegate, PTSettingsKeyObserver, SBRootFolderDelegate, SBIconViewObserver, SBHWidgetStackViewControllerDataSource, SBHWidgetStackViewControllerDelegate, SBLeafIconObserver, CHUISAvocadoHostViewControllerDelegate, SBHWidgetMetricsProviderDelegate, CHSAvocadoDescriptorProviderObserver, SBHMultiplexingManagerDelegate, SBIconViewDelegate, SBIconViewQuerying, SBHomeScreenIconTransitionAnimatorDelegate, SBIconViewProviding, SBRootFolderControllerDelegate, SBIconLocationPresenting, SBHLibraryViewControllerObserver>
 @property  SBIconView *highlightedIconView
 @property  NSTimer *editingEndTimer
 @property  SBRootFolderController *rootFolderController
 @property  UIViewController<SBHIconRootViewProviding> *rootViewController
 @property  NSArray *postResetPathIdentifiers
 @property  BOOL needsRelayout
 @property  BOOL animatingFolderCreation
 @property  BOOL animatingFolderOpeningOrClosing
 @property  BOOL animatingForUnscatter
 @property  SBFolder *closingFolder
 @property  BSEventQueue *transitionEventQueue
 @property  SBHomeScreenIconTransitionAnimator *currentTransitionAnimator
 @property  SBRootFolder *rootFolder
 @property  SBWorkspaceInteractionContext *currentInteractionContext
 @property  SBHHomeScreenSettings *homeScreenSettings
 @property  SBHRootFolderSettings *rootFolderSettings
 @property  NSString *precachedContentSizeCategory
 @property  SBIconView *popoverIconView
 @property  SBHomeScreenDefaults *homeScreenDefaults
 @property  UIViewController<SBHLibraryProvider> *trailingCustomViewController
 @property  UIViewController<SBHSidebarProvider> *sidebarViewController
 @property  UIViewController<SBHLegibility> *todayViewController
 @property  BOOL resettingRootIconLists
 @property  SBHHomeScreenUsageMonitor *usageMonitor
 @property  <BSInvalidatable> *editingAutosaveDisableAssertion
 @property  SBIconView *currentConfiguringIconView
 @property  SBFParallaxSettings *badgeParallaxSettings
 @property  SBIconListView *currentRootIconList
 @property  SBIconListView *dockListView
 @property  SBIconListView *floatingDockListView
 @property  SBIconListView *floatingDockSuggestionsListView
 @property  SBIconListView *effectiveDockListView
 @property  SBIconView *previewInteractingIconView
 @property  SBIconLabelImageCache *iconLabelImageCache
 @property  BOOL libraryViewControllerVisible
 @property  SBHWidgetMetricsProvider *widgetMetricsProvider
 @property  <SBHIconManagerDelegate> *delegate
 @property  long long interfaceOrientation
 @property  SBHIconModel *iconModel
 @property  SBFolderController *openedFolderController
 @property  SBFloatingDockViewController *floatingDockViewController
 @property  SBTodayViewController *overlayTodayViewController
 @property  SBHLibraryViewController *overlayLibraryViewController
 @property  BOOL overlayTodayViewVisible
 @property  BOOL overlayCoverSheetTodayViewVisible
 @property  BOOL overlayLibraryViewVisible
 @property  BOOL dockPinnedForRotation
 @property  BOOL showsDoneButtonWhileEditing
 @property  BOOL showsAddWidgetButtonWhileEditing
 @property  BOOL editing
 @property  BOOL editingAllowed
 @property  BOOL folderPageManagementUIVisible
 @property  BOOL iconDragging
 @property  BOOL rootFolderContentVisible
 @property  BOOL iconContentPossiblyVisibleOverApplication
 @property  BOOL rootFolderContentOccluded
 @property  UIImpactFeedbackGenerator *iconEditingFeedbackBehavior
 @property  _UILegibilitySettings *legibilitySettings
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  unsigned long listLayoutProviderLayoutOptions
 @property  SBIcon *iconToReveal
 @property  CHSAvocadoDescriptorProvider *avocadoDescriptorProvider
 @property  BOOL allowsNestedFolders
 @property  BOOL scrolling
 @property  BOOL rootFolderScrolling
 @property  BOOL folderScrolling
 @property  BOOL trackingScroll
 @property  BOOL hasOpenFolder
 @property  SBFolder *openedFolder
 @property  BOOL canCloseFolders
 @property  BOOL hasAnimatingFolder
 @property  BOOL transitioning
 @property  BOOL performingExpandTransition
 @property  BOOL performingCancelledCollapseTransition
 @property  SBIconDragManager *iconDragManager
 @property  BOOL iconTouched
 @property  BOOL showingIconContextMenu
 @property  BOOL showingPullDownSearch
 @property  BOOL showingPullDownSearchOrTransitioningToVisible
 @property  BOOL showingPullDownOrTodayViewSearch
 @property  BOOL showingSpotlightOrTodayView
 @property  BOOL showingTodayView
 @property  BOOL showingOrTransitioningToTodayView
 @property  BOOL transitioningHomeScreenState
 @property  BOOL sidebarVisible
 @property  BOOL sidebarEffectivelyVisible
 @property  BOOL sidebarVisibilityGestureActive
 @property  SBSearchGesture *searchGesture
 @property  SBIconPageIndicatorImageSetCache *iconPageIndicatorImageSetCache
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  BOOL showsBadgesInAppLibrary
 @property  NSString *statisticsSummary
 @property  BOOL usageMonitoringEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *presentedIconLocations

  // class methods
  +[SBHIconManager defaultIconLayoutAnimationDuration]

  // instance methods
  -[SBHIconManager isDisplayingIconView:options:]
  -[SBHIconManager hasRootViewController]
  -[SBHIconManager iconView:canAddDragItemsToSession:]
  -[SBHIconManager avocadoDescriptorProvider]
  -[SBHIconManager addPageStateObserver:]
  -[SBHIconManager isSidebarVisible]
  -[SBHIconManager rootFolder]
  -[SBHIconManager isShowingTodayView]
  -[SBHIconManager configureIconView:forIcon:]
  -[SBHIconManager highlightIconView:]
  -[SBHIconManager localizedFolderNameForDefaultDisplayName:]
  -[SBHIconManager iconView:willAnimateDragLiftWithAnimator:session:]
  -[SBHIconManager iconView:dragLiftAnimationDidChangeDirection:]
  -[SBHIconManager rootFolder:canAddIcon:toIconList:inFolder:]
  -[SBHIconManager editingEndTimer]
  -[SBHIconManager externalDockIconListViewForRootFolderController:]
  -[SBHIconManager editingDidChangeWithFeedbackBehavior:]
  -[SBHIconManager isEditingAllowed]
  -[SBHIconManager resetTodayLayout]
  -[SBHIconManager sidebarViewController]
  -[SBHIconManager trailingCustomViewController]
  -[SBHIconManager uninstallIcon:]
  -[SBHIconManager firstIconViewForIcon:options:]
  -[SBHIconManager isFloatingDockVisible]
  -[SBHIconManager setRootFolder:]
  -[SBHIconManager currentConfiguringIconView]
  -[SBHIconManager widgetMetricsProvider]
  -[SBHIconManager iconView:draggingStartLocationWithProposedStartLocation:]
  -[SBHIconManager applicationShortcutWidgetBundleIdentifierForShortcutsWithIconView:]
  -[SBHIconManager setIconModel:]
  -[SBHIconManager iconViewWasRecycled:]
  -[SBHIconManager editingAutosaveDisableAssertion]
  -[SBHIconManager isDisplayingIcon:options:]
  -[SBHIconManager _newIntentForDataSource:inIcon:]
  -[SBHIconManager setTodayViewController:]
  -[SBHIconManager iconView:willAddDragItems:toSession:]
  -[SBHIconManager isIconCurrentlyOnscreen:]
  -[SBHIconManager showsDoneButtonWhileEditing]
  -[SBHIconManager _noteUserIsInteractingWithIcons]
  -[SBHIconManager isShowingIconContextMenu]
  -[SBHIconManager _discardEndEditingTimerAndDontResetUntilReasonIsRemoved:]
  -[SBHIconManager todayViewController]
  -[SBHIconManager iconView:session:willEndWithOperation:]
  -[SBHIconManager _enqueueTransitionName:withHandler:]
  -[SBHIconManager iconViewWillCancelDrag:]
  -[SBHIconManager _isShowingSearchableTodayView]
  -[SBHIconManager isIconIgnored:]
  -[SBHIconManager isEditingAllowedForIconView:]
  -[SBHIconManager iconView:willUsePreviewForCancelling:targetIconView:]
  -[SBHIconManager setEditing:withFeedbackBehavior:]
  -[SBHIconManager setAnimatingForUnscatter:]
  -[SBHIconManager rootIconListAtIndex:]
  -[SBHIconManager _intentForDataSource:inIcon:creatingIfNecessary:]
  -[SBHIconManager noteFloatingDockWillChangeHeight]
  -[SBHIconManager viewMap:maxRecycledViewsOfClass:]
  -[SBHIconManager closingFolder]
  -[SBHIconManager iconView:item:willAnimateDragCancelWithAnimator:]
  -[SBHIconManager _endObservingLeafIconsInModel:]
  -[SBHIconManager needsRelayout]
  -[SBHIconManager addFolderPresentationObserver:]
  -[SBHIconManager iconView:didChangeCustomImageViewController:]
  -[SBHIconManager enumeratePageStateObserversUsingBlock:]
  -[SBHIconManager setRootFolderContentOccluded:]
  -[SBHIconManager _handleRemovedDataSource:ofIcon:]
  -[SBHIconManager icon:touchEnded:]
  -[SBHIconManager revealIcon:animated:completionHandler:]
  -[SBHIconManager rootFolder:canBounceIcon:]
  -[SBHIconManager searchGesture]
  -[SBHIconManager rootFolderController]
  -[SBHIconManager setClosingFolder:]
  -[SBHIconManager supportsDockForIconModel:]
  -[SBHIconManager cancelAllDrags]
  -[SBHIconManager isRootFolderScrolling]
  -[SBHIconManager hasAnimatingFolderChanged]
  -[SBHIconManager runDownloadingIconTest]
  -[SBHIconManager _isShowingTodayViewSearchOrTransitioning]
  -[SBHIconManager avocadoHostViewController:requestsLaunchWithAction:]
  -[SBHIconManager icon:touchMoved:]
  -[SBHIconManager iconModel:listGridSizeForFolderClass:]
  -[SBHIconManager leafIcon:didRemoveIconDataSource:]
  -[SBHIconManager iconView:supportsConfigurationForDataSource:]
  -[SBHIconManager iconView:willRemoveIconAccessoryView:]
  -[SBHIconManager iconToReveal]
  -[SBHIconManager iconView:shouldActivateApplicationShortcutItem:atIndex:]
  -[SBHIconManager transitionEventQueue]
  -[SBHIconManager _compactRootListsAfterFolderCloseWithAnimation:]
  -[SBHIconManager backgroundViewForDockForRootFolderController:]
  -[SBHIconManager homescreenIconLabelAccessoryViewMap]
  -[SBHIconManager iconViewShortcutsPresentationWillFinish:]
  -[SBHIconManager rootFolderControllerWillPresentWidgetEditing:]
  -[SBHIconManager presentTodayOverlay]
  -[SBHIconManager isTransitioning]
  -[SBHIconManager isShowingOrTransitioningToTodayView]
  -[SBHIconManager viewMap:makeNewViewOfClass:]
  -[SBHIconManager setListLayoutProvider:]
  -[SBHIconManager iconViewForIcon:location:]
  -[SBHIconManager iconViewWillBeginDrag:session:]
  -[SBHIconManager addDownloadingIconsForDataSources:]
  -[SBHIconManager closeFolderAnimated:withCompletion:]
  -[SBHIconManager _proposedFolderNameForGrabbedIcon:recipientIcon:]
  -[SBHIconManager floatingDockSuggestionsListView]
  -[SBHIconManager folderController:willCreateInnerFolderControllerWithConfiguration:]
  -[SBHIconManager iconModel:maxColumnCountForListInRootFolderWithInterfaceOrientation:]
  -[SBHIconManager isShowingSpotlightOrTodayView]
  -[SBHIconManager canSaveIconState:]
  -[SBHIconManager folderController:willUseIconTransitionAnimator:forOperation:onViewController:animated:]
  -[SBHIconManager popExpandedIconAnimated:completionHandler:]
  -[SBHIconManager recycleIconView:]
  -[SBHIconManager canCloseFolders]
  -[SBHIconManager setAnimatingFolderCreation:]
  -[SBHIconManager setEditing:fromIconListView:]
  -[SBHIconManager libraryViewController:willPresentSearchController:]
  -[SBHIconManager settings:changedValueForKey:]
  -[SBHIconManager iconView:applicationShortcutItemsWithProposedItems:]
  -[SBHIconManager rootViewController]
  -[SBHIconManager _finishResetRootIconLists]
  -[SBHIconManager _precacheDataForRootIcons]
  -[SBHIconManager applicationBundleURLForShortcutsWithIconView:]
  -[SBHIconManager iconView:configurationDidUpdateWithInteraction:]
  -[SBHIconManager badgeParallaxSettings]
  -[SBHIconManager rootFolderControllerViewDidDisappear:]
  -[SBHIconManager folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBHIconManager enumerateKnownIconViewsUsingBlock:]
  -[SBHIconManager _shouldParallaxInIconLocation:]
  -[SBHIconManager enumerateIconViewQueryableChildrenUsingBlock:]
  -[SBHIconManager removeAllIconAnimations]
  -[SBHIconManager _createRootFolderControllerForRootFolder:]
  -[SBHIconManager iconViewCanBeginDrags:]
  -[SBHIconManager init]
  -[SBHIconManager moveIconToHiddenPage:]
  -[SBHIconManager performAfterIconContextMenuDismissesUsingBlock:]
  -[SBHIconManager iconView:dragPreviewForItem:session:previewParameters:]
  -[SBHIconManager replaceDownloadingIconsForDataSources:withIconsFromGenerator:]
  -[SBHIconManager iconView:contentBoundingRectForConfigurationInteraction:]
  -[SBHIconManager containerViewForPresentingContextMenuForIconView:]
  -[SBHIconManager isFolderScrolling]
  -[SBHIconManager isIconTouched]
  -[SBHIconManager setUsageMonitor:]
  -[SBHIconManager setIdleModeText:]
  -[SBHIconManager legibilitySettings]
  -[SBHIconManager iconTapped:]
  -[SBHIconManager widgetStackViewController:containerBundleIdentifierForDataSource:]
  -[SBHIconManager iconViewShouldBeginShortcutsPresentation:]
  -[SBHIconManager _archiveConfiguration:forDataSource:ofIcon:]
  -[SBHIconManager setEditingEndTimer:]
  -[SBHIconManager dismissSpotlightAnimated:completionHandler:]
  -[SBHIconManager folderController:iconListView:canHandleIconDropSession:]
  -[SBHIconManager setRootFolderController:]
  -[SBHIconManager _beginObservingLeafIconsInModel:]
  -[SBHIconManager _prepareToResetRootIconLists]
  -[SBHIconManager folderController:iconListView:iconDropSessionDidUpdate:]
  -[SBHIconManager finishInstallingIconAnimated:]
  -[SBHIconManager isShowingPullDownSearchOrTransitioningToVisible]
  -[SBHIconManager multiplexingManager:willRemoveViewController:forIdentifier:]
  -[SBHIconManager rootFolderController:didChangeSidebarVisibilityProgress:]
  -[SBHIconManager rootFolderController:willDismissPageManagementUsingAnimator:]
  -[SBHIconManager additionalDragLiftScaleForIconView:]
  -[SBHIconManager hasOpenFolderInLocation:]
  -[SBHIconManager rootFolderController:didEndOverscrollOnFirstPageWithVelocity:translation:]
  -[SBHIconManager _updateIconView:forCustomIconImageViewController:]
  -[SBHIconManager distanceToTopOfSpotlightIconsForRootFolderController:]
  -[SBHIconManager setCurrentConfiguringIconView:]
  -[SBHIconManager descriptorsDidChangeForAvocadoDescriptorProvider:]
  -[SBHIconManager folderController:didEndEditingTitle:]
  -[SBHIconManager isDisplayingIconView:inLocation:]
  -[SBHIconManager enumerateIconViewQueryableChildrenWithOptions:usingBlock:]
  -[SBHIconManager iconModel:maxRowCountForListInRootFolderWithInterfaceOrientation:]
  -[SBHIconManager runRemoveAndRestoreIconTest]
  -[SBHIconManager iconModel:willRemoveIcon:]
  -[SBHIconManager rootFolder:shouldAllowBadgingForIcon:]
  -[SBHIconManager localizedDefaultFolderName]
  -[SBHIconManager usageMonitor]
  -[SBHIconManager _cleanupForClosingFolderAnimated:]
  -[SBHIconManager _finishResetRootIconListsReusingPreviousControllers:]
  -[SBHIconManager closeBoxTypeForIconView:]
  -[SBHIconManager iconView:labelImageWithParameters:]
  -[SBHIconManager iconsShouldAllowCloseBoxes]
  -[SBHIconManager isAnimatingFolderCreation]
  -[SBHIconManager folderController:iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBHIconManager contentOverlayInsetsFromParentIfAvailableForFolderController:]
  -[SBHIconManager enumerateEditableViewControllersUsingBlock:]
  -[SBHIconManager canOpenFolders]
  -[SBHIconManager presentStatistics]
  -[SBHIconManager setPreviewInteractingIconView:]
  -[SBHIconManager dealloc]
  -[SBHIconManager _createAppropriateRootViewControllerForRootFolder:]
  -[SBHIconManager _loadAndSaveDefaultIntentAsyncForViewController:icon:widget:]
  -[SBHIconManager iconEditingFeedbackBehavior]
  -[SBHIconManager isPerformingCancelledCollapseTransition]
  -[SBHIconManager minimumHomeScreenScaleDidChange]
  -[SBHIconManager rootFolderPageStateProvider:willEndTransitionToState:successfully:]
  -[SBHIconManager _setupApplicationShortcutItemsForPresentation:]
  -[SBHIconManager setEditing:]
  -[SBHIconManager _iconModelDidReloadIcons:]
  -[SBHIconManager dismissSpotlightOrTodayViewAnimated:]
  -[SBHIconManager iconView:iconAccessoryViewOfClass:]
  -[SBHIconManager intentForWidget:ofIcon:]
  -[SBHIconManager removeReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:]
  -[SBHIconManager iconImageCache]
  -[SBHIconManager _sizeCategoryDidChange:]
  -[SBHIconManager didSaveIconState:]
  -[SBHIconManager dismissFolderPageManagementUI]
  -[SBHIconManager .cxx_destruct]
  -[SBHIconManager iconListViewForIndexPath:]
  -[SBHIconManager minimumHomeScreenScaleForFolderController:]
  -[SBHIconManager backgroundViewForEditingDoneButtonForRootFolderController:]
  -[SBHIconManager bestLocationForIcon:]
  -[SBHIconManager clearHighlightedIcon:]
  -[SBHIconManager hasOpenFolder]
  -[SBHIconManager homescreenIconImageViewMap]
  -[SBHIconManager overlayLibraryViewController]
  -[SBHIconManager iconViewDisplaysCloseBox:]
  -[SBHIconManager hideSuggestedWidgetFromStack:]
  -[SBHIconManager iconModel:shouldPlaceIconOnIgnoredList:]
  -[SBHIconManager firstIconViewForIcon:]
  -[SBHIconManager rootFolderController:willUsePropertyAnimator:toTransitionToState:]
  -[SBHIconManager _addTouchedIconView:]
  -[SBHIconManager setPopoverIconView:]
  -[SBHIconManager _restartEditingEndTimer]
  -[SBHIconManager addNewIconToDesignatedLocation:options:]
  -[SBHIconManager iconDragManager:didEndDragOriginatingFromIconView:userDidBeginDrag:lastUserInteractionDate:]
  -[SBHIconManager isSidebarEffectivelyVisible]
  -[SBHIconManager _ensureRootFolderController]
  -[SBHIconManager isTransitioningHomeScreenState]
  -[SBHIconManager isUsageMonitoringEnabled]
  -[SBHIconManager iconViewDisplaysBadges:]
  -[SBHIconManager setAnimatingFolderOpeningOrClosing:]
  -[SBHIconManager setEditing:forIconLocation:]
  -[SBHIconManager setIconToReveal:revealingPrevious:]
  -[SBHIconManager hasAnimatingFolder]
  -[SBHIconManager _intentForWidget:ofIcon:creatingIfNecessary:]
  -[SBHIconManager _reduceTransparencyStatusDidChange:]
  -[SBHIconManager isAnimatingFolderOpeningOrClosing]
  -[SBHIconManager isShowingPullDownOrTodayViewSearch]
  -[SBHIconManager rootFolderController:didEndOverscrollOnLastPageWithVelocity:translation:]
  -[SBHIconManager shouldHighlightTouchedIconView:]
  -[SBHIconManager iconPageIndicatorImageSetCache]
  -[SBHIconManager _tryScrollToIconToRevealAnimated:]
  -[SBHIconManager floatingDockViewController]
  -[SBHIconManager organizeAllIconsAcrossPagesWithPageCount:]
  -[SBHIconManager postResetPathIdentifiers]
  -[SBHIconManager allowsNestedFolders]
  -[SBHIconManager precachedContentSizeCategory]
  -[SBHIconManager _dumpRootFolderForStateCapture:]
  -[SBHIconManager _ensureWidgetIsVisibleForDebuggingWithDescriptor:sizeClass:]
  -[SBHIconManager dismissIconConfigurationUIImmediately]
  -[SBHIconManager succinctDescriptionBuilder]
  -[SBHIconManager launchActionsForIconView:]
  -[SBHIconManager relayout]
  -[SBHIconManager removeAllWidgetIcons]
  -[SBHIconManager setCurrentInteractionContext:]
  -[SBHIconManager animator:animationSettingsForOperation:childViewController:]
  -[SBHIconManager setHighlightedIconView:]
  -[SBHIconManager folderController:draggedIconShouldDropFromListView:]
  -[SBHIconManager removePageStateObserver:]
  -[SBHIconManager firstIconViewForIcon:inLocations:]
  -[SBHIconManager addIconToIgnoredList:options:completion:]
  -[SBHIconManager clearHighlightedIcon]
  -[SBHIconManager _bundleWithIdentifierHasOpenURLEntitlement:]
  -[SBHIconManager iconDragManagerIconDraggingDidChange:]
  -[SBHIconManager folderControllerWillBeginScrolling:]
  -[SBHIconManager setOverlayLibraryViewController:]
  -[SBHIconManager widgetStackViewController:didRemoveViewController:]
  -[SBHIconManager _multiplexingViewControllerForIcon:dataSource:location:withPriority:]
  -[SBHIconManager _widgetInsertionRippleIconAnimatorIcon:iconListView:withReferenceIconView:]
  -[SBHIconManager interfaceOrientation]
  -[SBHIconManager iconView:homeScreenContentViewForConfigurationInteraction:]
  -[SBHIconManager isIconVisiblyRepresented:]
  -[SBHIconManager isDisplayingIcon:inLocations:]
  -[SBHIconManager setNeedsRelayout:]
  -[SBHIconManager folderController:iconListView:iconDropSessionDidExit:]
  -[SBHIconManager shuffleWidgetStackForTestRecipe]
  -[SBHIconManager accessibilityTintColorForScreenRect:]
  -[SBHIconManager _closeFolderController:animated:withCompletion:]
  -[SBHIconManager _makeCustomViewControllerForWidgetIcon:dataSource:location:]
  -[SBHIconManager folderController:iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBHIconManager popToCurrentRootIconList]
  -[SBHIconManager rootFolderController:didOverscrollOnFirstPageByAmount:]
  -[SBHIconManager setDockPinnedForRotation:]
  -[SBHIconManager getStatistics:]
  -[SBHIconManager folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBHIconManager showsBadgesInAppLibrary]
  -[SBHIconManager _shouldRespondToIconCloseBoxes]
  -[SBHIconManager _isShowingTodayViewSearch]
  -[SBHIconManager nestingViewController:interactionControllerForAnimationController:]
  -[SBHIconManager isDisplayingIconView:]
  -[SBHIconManager currentInteractionContext]
  -[SBHIconManager _removeReasonToNotResetEndEditingTimer:]
  -[SBHIconManager icon:canReceiveGrabbedIcon:]
  -[SBHIconManager isEditingAllowedForIconListView:]
  -[SBHIconManager _removeTouchedIconView:]
  -[SBHIconManager stackConfigurationInteractionForIconView:]
  -[SBHIconManager overlayTodayViewController]
  -[SBHIconManager setLegibilitySettings:]
  -[SBHIconManager widgetStackViewController:isDataSourceBlockedForScreenTimeExpiration:]
  -[SBHIconManager currentRootIconList]
  -[SBHIconManager rootFolderController:willPresentPageManagementUsingAnimator:]
  -[SBHIconManager setRootViewController:]
  -[SBHIconManager _iconModelWillReloadIcons:]
  -[SBHIconManager folderControllerShouldClose:withPinchGesture:]
  -[SBHIconManager isOverlayTodayViewVisible]
  -[SBHIconManager viewMap:shouldRecycleView:]
  -[SBHIconManager bestHomeScreenLocationForIcon:]
  -[SBHIconManager homeScreenDefaults]
  -[SBHIconManager iconView:shouldContinueToUseBackgroundViewForComponents:]
  -[SBHIconManager isRootFolderContentVisible]
  -[SBHIconManager highlightedIconView]
  -[SBHIconManager isSidebarVisibilityGestureActive]
  -[SBHIconManager folderControllerShouldBeginEditing:withHaptic:]
  -[SBHIconManager animator:canAlterViewHierarchyDuringCleanupUsingBlock:]
  -[SBHIconManager enumerateAppPredictionViewControllersInIconLocationGroup:withOptions:usingBlock:]
  -[SBHIconManager isDisplayingIcon:queryOptions:]
  -[SBHIconManager isOverlayLibraryViewVisible]
  -[SBHIconManager maxExternalDockHeightForRootFolderController:]
  -[SBHIconManager preferredExternalDockVerticalMarginForRootFolderController:]
  -[SBHIconManager setCurrentTransitionAnimator:]
  -[SBHIconManager supportedGridSizeClassesForIconView:]
  -[SBHIconManager updateVisibleIconsToShowLeafIcons:hideLeafIcons:forceRelayout:]
  -[SBHIconManager enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHIconManager checkForInvalidWidgets]
  -[SBHIconManager iconTouchBegan:]
  -[SBHIconManager insertIcons:intoWidgetStack:]
  -[SBHIconManager isShowingIconConfigurationUI]
  -[SBHIconManager popoverIconView]
  -[SBHIconManager pushExpandedIcon:location:animated:completionHandler:]
  -[SBHIconManager setEditing:fromIconView:]
  -[SBHIconManager folderIconImageCache]
  -[SBHIconManager setPostResetPathIdentifiers:]
  -[SBHIconManager rootFolderSettings]
  -[SBHIconManager folderController:accessibilityTintColorForScreenRect:]
  -[SBHIconManager addSuggestedActiveWidgetToStack:]
  -[SBHIconManager iconModel:shouldAvoidPlacingIconOnFirstPage:]
  -[SBHIconManager listGridSizeForFolderClass:]
  -[SBHIconManager folderController:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBHIconManager viewControllerForPresentingViewControllers]
  -[SBHIconManager _processPendingDefaultIntents]
  -[SBHIconManager iconModel:launchIcon:fromLocation:context:]
  -[SBHIconManager listLayoutProviderLayoutOptions]
  -[SBHIconManager customImageViewControllerForIconView:]
  -[SBHIconManager rootFolderController:didChangeEffectiveSidebarVisibilityProgress:]
  -[SBHIconManager _createRootTableControllerForRootFolder:]
  -[SBHIconManager succinctDescription]
  -[SBHIconManager iconModel:localizedFolderNameForDefaultDisplayName:]
  -[SBHIconManager iconViewShortcutsPresentationDidCancel:]
  -[SBHIconManager removeWidget:fromStack:]
  -[SBHIconManager rootFolderPageStateProvider:willBeginTransitionToState:animated:interactive:]
  -[SBHIconManager iconViewForIcon:location:options:]
  -[SBHIconManager setEditingAutosaveDisableAssertion:]
  -[SBHIconManager statusBarStyleRequestForFolderController:]
  -[SBHIconManager _iconModelWillLayout:]
  -[SBHIconManager presentedIconLocations]
  -[SBHIconManager iconShouldAllowTap:]
  -[SBHIconManager iconView:editingModeGestureRecognizerDidFire:]
  -[SBHIconManager imageViewForIconView:]
  -[SBHIconManager rootFolderPageStateProvider:didContinueTransitionToState:progress:]
  -[SBHIconManager setOverlayLibraryViewVisible:]
  -[SBHIconManager folderControllerForFolder:]
  -[SBHIconManager setTrailingCustomViewController:]
  -[SBHIconManager unscatterAnimated:afterDelay:withCompletion:]
  -[SBHIconManager folderControllerShouldEndEditing:]
  -[SBHIconManager dismissIconConfigurationUI]
  -[SBHIconManager parallaxSettingsForComponentsOfIconView:]
  -[SBHIconManager rootFolderController:handleInsertionForWidgetIcon:withReferenceIconView:fromTodayPresenter:dismissViewControllerHandler:]
  -[SBHIconManager shouldRecycleIconView:]
  -[SBHIconManager enumerateDisplayedIconViewsUsingBlock:]
  -[SBHIconManager homescreenIconAccessoryViewMap]
  -[SBHIconManager iconViewShortcutsPresentationWillBegin:]
  -[SBHIconManager isEditingAllowedForIconLocation:]
  -[SBHIconManager isIconViewRecycled:]
  -[SBHIconManager multiplexingManager:shouldCacheRecentViewController:forIdentifier:]
  -[SBHIconManager setResettingRootIconLists:]
  -[SBHIconManager _iconModelDidLayout:]
  -[SBHIconManager didDeleteIconState:]
  -[SBHIconManager iconView:configurationDidEndWithInteraction:]
  -[SBHIconManager iconView:configurationWillBeginWithInteraction:]
  -[SBHIconManager replaceFolderIcon:byContainedIcon:animated:]
  -[SBHIconManager statisticsSummary]
  -[SBHIconManager iconAllowsBadging:]
  -[SBHIconManager isTrackingScroll]
  -[SBHIconManager nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBHIconManager floatingDockListView]
  -[SBHIconManager isShowingPullDownSearch]
  -[SBHIconManager appPredictionsIconViewDisplayingIconView:options:]
  -[SBHIconManager iconCloseBoxTapped:]
  -[SBHIconManager iconViewShowingContextMenu]
  -[SBHIconManager layoutIconListsWithAnimationType:forceRelayout:]
  -[SBHIconManager reasonToDisallowInteractionOnIconView:]
  -[SBHIconManager _isShowingPullDownSearchOrTransitioning]
  -[SBHIconManager _updateVisibleIconsViewsForAllowableCloseBoxes]
  -[SBHIconManager folderControllerDidEndScrolling:]
  -[SBHIconManager widgetStackViewController:containerApplicationNameForDataSource:]
  -[SBHIconManager iconViewClass]
  -[SBHIconManager setSidebarViewController:]
  -[SBHIconManager defaultIconStateForIconModel:]
  -[SBHIconManager _stackConfigurationForStackIcon:]
  -[SBHIconManager statusBarEdgeInsetsForFolderController:]
  -[SBHIconManager iconShouldAllowCloseBoxTap:]
  -[SBHIconManager iconView:didEndDragSession:withOperation:]
  -[SBHIconManager toggleSuggestedWidgetInStackForTestRecipe]
  -[SBHIconManager folderControllerWillClose:]
  -[SBHIconManager folderController:iconListView:performIconDrop:]
  -[SBHIconManager _isShowingOrTransitioningToSearchableTodayView]
  -[SBHIconManager _updateOverlayOcclusionForRootFolderController]
  -[SBHIconManager addWidgetWithIdentifier:toPage:withSize:]
  -[SBHIconManager externalDockHeightForRootFolderController:]
  -[SBHIconManager iconModel:customInsertionIndexPathForIcon:inRootFolder:]
  -[SBHIconManager gridSizeForIconView:]
  -[SBHIconManager iconLabelImageCache]
  -[SBHIconManager changeSizeOfWidgetIcon:toSizeClass:]
  -[SBHIconManager isEditing]
  -[SBHIconManager folderControllerWantsToHideStatusBar:animated:]
  -[SBHIconManager listLayoutProvider]
  -[SBHIconManager isDisplayingIcon:inLocation:]
  -[SBHIconManager tearDownAndResetRootIconLists]
  -[SBHIconManager uninstallIcon:animate:]
  -[SBHIconManager uninstallIcon:animate:completion:]
  -[SBHIconManager showsAddWidgetButtonWhileEditing]
  -[SBHIconManager fakeStatusBarForFolderController:]
  -[SBHIconManager _currentFolderController]
  -[SBHIconManager iconModel]
  -[SBHIconManager maxListCountForFoldersForIconModel:]
  -[SBHIconManager openFolderIcon:location:animated:withCompletion:]
  -[SBHIconManager rootFolderController:didOverscrollOnLastPageByAmount:]
  -[SBHIconManager rootFolderController:willUseTransitionContext:toTransitionToState:]
  -[SBHIconManager rootFolderPageStateProvider:didEndTransitionFromState:toState:successfully:]
  -[SBHIconManager setListLayoutProviderLayoutOptions:]
  -[SBHIconManager createNewFolderFromRecipientIcon:grabbedIcon:]
  -[SBHIconManager presentSpotlightFromSource:animated:completionHandler:]
  -[SBHIconManager _updateWidgetMultiplexingViewController:forIconView:]
  -[SBHIconManager folderController:canChangeCurrentPageIndexToIndex:]
  -[SBHIconManager isIconDragging]
  -[SBHIconManager isOverlayTodayOrLibraryViewVisible]
  -[SBHIconManager setShowsAddWidgetButtonWhileEditing:]
  -[SBHIconManager tryScrollToIconToRevealAnimated:]
  -[SBHIconManager _folderControllerForIcon:inLocation:]
  -[SBHIconManager controllerClassForFolderClass:]
  -[SBHIconManager addIcons:intoFolderIcon:openFolderOnFinish:complete:]
  -[SBHIconManager folderControllerWillOpen:]
  -[SBHIconManager rootFolderControllerDidDismissWidgetEditing:]
  -[SBHIconManager backgroundViewForComponentsOfIconView:]
  -[SBHIconManager removeIcon:options:completion:]
  -[SBHIconManager recycledViewsContainerProviderForViewMap:]
  -[SBHIconManager _animateFolderIcon:open:location:animated:withCompletion:]
  -[SBHIconManager cancelAllFolderScrolling]
  -[SBHIconManager iconViewMap]
  -[SBHIconManager dockListView]
  -[SBHIconManager addWidgetsToEachPage]
  -[SBHIconManager enumerateAppPredictionViewControllersWithIconViewsInIconLocationGroup:withOptions:usingBlock:]
  -[SBHIconManager iconModel:didAddIcon:]
  -[SBHIconManager folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBHIconManager setOverlayTodayViewVisible:]
  -[SBHIconManager setUsageMonitoringEnabled:]
  -[SBHIconManager _handleUpdatedConfiguration:forDataSource:ofIcon:archiving:]
  -[SBHIconManager folderController:willRemoveFakeStatusBar:]
  -[SBHIconManager isPerformingCancelledExpandTransition]
  -[SBHIconManager isResettingRootIconLists]
  -[SBHIconManager noteInterfaceOrientationChanged]
  -[SBHIconManager rootFolderControllerViewWillAppear:]
  -[SBHIconManager screenSnapshotProviderForComponentsOfIconView:]
  -[SBHIconManager noteFloatingDockWillAnimateChangeInHeight]
  -[SBHIconManager setShowsDoneButtonWhileEditing:]
  -[SBHIconManager maxListCountForFolders]
  -[SBHIconManager popToCurrentRootIconListWhenPossible]
  -[SBHIconManager setDelegate:]
  -[SBHIconManager dequeueReusableIconViewOfClass:]
  -[SBHIconManager iconView:configurationInteractionForDataSource:]
  -[SBHIconManager performAfterAllIconTouchesFinishedUsingBlock:]
  -[SBHIconManager previewInteractingIconView]
  -[SBHIconManager isFolderPageManagementUIVisible]
  -[SBHIconManager openedFolderController]
  -[SBHIconManager resetRootIconLists]
  -[SBHIconManager rootFolderControllerCanUseSeparateWindowForRotation:]
  -[SBHIconManager hasRootFolderController]
  -[SBHIconManager isDisplayingIcon:]
  -[SBHIconManager _folderDidFinishOpenClose:animated:success:]
  -[SBHIconManager effectiveDockListView]
  -[SBHIconManager currentTransitionAnimator]
  -[SBHIconManager firstIconViewForIcon:excludingLocations:]
  -[SBHIconManager iconView:iconLabelAccessoryViewOfType:]
  -[SBHIconManager isAnimatingForUnscatter]
  -[SBHIconManager noteIconViewWillZoomDown:]
  -[SBHIconManager iconView:willRemoveIconImageView:]
  -[SBHIconManager rootFolderController:statusBarInsetsDidChange:]
  -[SBHIconManager isDisplayingIcon:inLocation:options:]
  -[SBHIconManager activateTodayViewWithCompletion:]
  -[SBHIconManager resetIconLayoutWithOptions:]
  -[SBHIconManager folderController:didBeginEditingTitle:]
  -[SBHIconManager _setupStateCaptureHandleIfNeeded]
  -[SBHIconManager _configureRootFolderConfiguration:]
  -[SBHIconManager getListView:folder:relativePath:forIndexPath:]
  -[SBHIconManager widgetStackViewController:didActivateDataSource:fromUserInteraction:]
  -[SBHIconManager widgetStackViewController:viewControllerForDataSource:]
  -[SBHIconManager allowedInterfaceOrientations]
  -[SBHIconManager animateToDefaultStateWithCompletionHandler:]
  -[SBHIconManager addNewIconsToDesignatedLocations:saveIconState:]
  -[SBHIconManager iconView:willRemoveIconLabelAccessoryView:]
  -[SBHIconManager noteIconStateChangedExternally]
  -[SBHIconManager maxIconCountForDockForIconModel:]
  -[SBHIconManager accessibilityTintColorForIconView:]
  -[SBHIconManager controllerClassForFolder:]
  -[SBHIconManager addReasonToIgnoreUserPreferenceForAddingNewIconsToHomeScreen:]
  -[SBHIconManager firstPageLeafIdentifiersForIconModel:]
  -[SBHIconManager organizeAllIconsIntoFoldersWithPageCount:]
  -[SBHIconManager iconView:willUseContextMenuStyle:]
  -[SBHIconManager layoutIconListsWithAnimationType:]
  -[SBHIconManager libraryViewController:willDismissSearchController:]
  -[SBHIconManager setPrecachedContentSizeCategory:]
  -[SBHIconManager isDockPinnedForRotation]
  -[SBHIconManager _rootFolderForRootViewControllerForRootFolder:]
  -[SBHIconManager iconView:containerViewControllerForConfigurationInteraction:]
  -[SBHIconManager delegate]
  -[SBHIconManager isPerformingExpandTransition]
  -[SBHIconManager openedFolder]
  -[SBHIconManager removeFolderPresentationObserver:]
  -[SBHIconManager descriptionWithMultilinePrefix:]
  -[SBHIconManager setIconToReveal:]
  -[SBHIconManager setOverlayCoverSheetTodayViewVisible:]
  -[SBHIconManager folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBHIconManager isRootFolderContentOccluded]
  -[SBHIconManager isTodayViewEffectivelyVisible]
  -[SBHIconManager reasonToDisallowTapOnIconView:]
  -[SBHIconManager setOverlayTodayViewController:]
  -[SBHIconManager _effectiveTodayViewController]
  -[SBHIconManager enumerateIconViewsDisplayedInAppPredictionsInLocationGroup:withOptions:usingBlock:]
  -[SBHIconManager layoutIconListsWithAnimationType:duration:forceRelayout:]
  -[SBHIconManager libraryViewController:willLaunchIcon:fromLocation:]
  -[SBHIconManager iconLocationForPrecachingImages]
  -[SBHIconManager rootFolderController:vendorNameForAppWithBundleIdentifiers:]
  -[SBHIconManager rootFolderControllerDidDismissPageManagement:]
  -[SBHIconManager currentIconListIndex]
  -[SBHIconManager launchURLForIconView:]
  -[SBHIconManager iconDragManager]
  -[SBHIconManager isScrolling]
  -[SBHIconManager iconLocationAllowsBadging:]
  -[SBHIconManager descriptionBuilderWithMultilinePrefix:]
  -[SBHIconManager folderController:iconListView:iconDropSessionDidEnter:]
  -[SBHIconManager isOverlayCoverSheetTodayViewVisible]
  -[SBHIconManager homeScreenSettings]
  -[SBHIconManager addAllEligibleIconsToIgnoredList]
  -[SBHIconManager checkForInvalidCustomElements]
  -[SBHIconManager popExpandedIconFromLocation:interactionContext:animated:completionHandler:]
  -[SBHIconManager rootFolderController:prepareAddSheetViewController:]
  -[SBHIconManager rootFolderController:wantsToAdjustTodayContentForEdgeBounceForScrollOffset:]
  -[SBHIconManager iconGridSizeClassAreas]
  -[SBHIconManager gridSizeClassSizesForIconModel:]
  -[SBHIconManager isPresentingIconLocation:]
  -[SBHIconManager scrollToIconListContainingIcon:animate:]
  -[SBHIconManager canAddIconToIgnoredList:]
  -[SBHIconManager iconDragManagerMultiItemIconDraggingDidChange:]
  -[SBHIconManager isLibraryViewControllerVisible]
  -[SBHIconManager launchFromIconView:withActions:]
  -[SBHIconManager isIconContentPossiblyVisibleOverApplication]
  -[SBHIconManager setFloatingDockViewController:]
  -[SBHIconManager rootFolder:wantsToDoPageHidingEducationWithCompletion:]


SBHFakeDownloadingIconDataSource : NSObject /usr/lib/libSystem.B.dylib <SBDownloadingIconDataSource>
 @property  NSString *applicationBundleID
 @property  NSString *applicationDisplayName
 @property  double progress
 @property  BOOL isCloudDemoted
 @property  BOOL isPrioritizable
 @property  BOOL isPausable
 @property  BOOL isCancelable
 @property  BOOL isPaused
 @property  BOOL active
 @property  BOOL waiting
 @property  BOOL paused
 @property  BOOL pausable
 @property  BOOL failed
 @property  BOOL cancelable
 @property  BOOL installing
 @property  BOOL downloading
 @property  BOOL prioritizable
 @property  BOOL cloudDemoted
 @property  Class iconClass
 @property  NSString *uniqueIdentifier
 @property  NSString *configurationStorageIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHFakeDownloadingIconDataSource isPausable]
  -[SBHFakeDownloadingIconDataSource isCancelable]
  -[SBHFakeDownloadingIconDataSource isPrioritizable]
  -[SBHFakeDownloadingIconDataSource priorityForIcon:]
  -[SBHFakeDownloadingIconDataSource pause]
  -[SBHFakeDownloadingIconDataSource icon:imageWithInfo:]
  -[SBHFakeDownloadingIconDataSource icon:displayNameForLocation:]
  -[SBHFakeDownloadingIconDataSource isFailed]
  -[SBHFakeDownloadingIconDataSource setIsPaused:]
  -[SBHFakeDownloadingIconDataSource resume]
  -[SBHFakeDownloadingIconDataSource progressStateForIcon:]
  -[SBHFakeDownloadingIconDataSource progressPercentForIcon:]
  -[SBHFakeDownloadingIconDataSource .cxx_destruct]
  -[SBHFakeDownloadingIconDataSource setIsCloudDemoted:]
  -[SBHFakeDownloadingIconDataSource setIsPausable:]
  -[SBHFakeDownloadingIconDataSource setIsPrioritizable:]
  -[SBHFakeDownloadingIconDataSource setIsCancelable:]
  -[SBHFakeDownloadingIconDataSource prioritize]
  -[SBHFakeDownloadingIconDataSource applicationDisplayName]
  -[SBHFakeDownloadingIconDataSource isActive]
  -[SBHFakeDownloadingIconDataSource setApplicationDisplayName:]
  -[SBHFakeDownloadingIconDataSource cancel]
  -[SBHFakeDownloadingIconDataSource isPaused]
  -[SBHFakeDownloadingIconDataSource isInstalling]
  -[SBHFakeDownloadingIconDataSource isDownloading]
  -[SBHFakeDownloadingIconDataSource setProgress:]
  -[SBHFakeDownloadingIconDataSource progress]
  -[SBHFakeDownloadingIconDataSource isCloudDemoted]
  -[SBHFakeDownloadingIconDataSource setApplicationBundleID:]
  -[SBHFakeDownloadingIconDataSource applicationBundleID]
  -[SBHFakeDownloadingIconDataSource isWaiting]


SBHTableViewController : UITableViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  BOOL showNoResultsView
 @property  UIView *noResultsView

  // class methods
  +[SBHTableViewController tableViewClass]

  // instance methods
  -[SBHTableViewController viewDidLoad]
  -[SBHTableViewController _keyboardWillShow:]
  -[SBHTableViewController .cxx_destruct]
  -[SBHTableViewController noResultsView]
  -[SBHTableViewController _resetNoResultsView]
  -[SBHTableViewController showNoResultsView]
  -[SBHTableViewController _removeAutolayoutConstraintsForNoResultsFoundLabel]
  -[SBHTableViewController _calculateVerticalMultiplierForKeyboard]
  -[SBHTableViewController _addAutolayoutConstraintsForNoResultsFoundLabel]
  -[SBHTableViewController _reloadNoResultsFoundLabelForKeyboardNotification:]
  -[SBHTableViewController setNoResultsView:]
  -[SBHTableViewController setShowNoResultsView:]
  -[SBHTableViewController _keyboardWillResize:]
  -[SBHTableViewController _keyboardWillDismiss:]
  -[SBHTableViewController viewWillAppear:]
  -[SBHTableViewController viewWillDisappear:]


SBRootFolderDockIconListView : SBDockIconListView

SBHMultiplexingManager : NSObject /usr/lib/libSystem.B.dylib
 @property  <SBHMultiplexingManagerDelegate> *delegate
 @property  NSMutableDictionary *viewControllersForIdentifier
 @property  NSMutableDictionary *multiplexingViewControllersForIdentifier
 @property  NSMutableDictionary *cachedRecentViewControllersForIdentifier
 @property  NSMutableOrderedSet *cachedRecentViewControllerIdentifiers
 @property  unsigned long cachedRecentViewControllerCountLimit

  // instance methods
  -[SBHMultiplexingManager initWithDelegate:]
  -[SBHMultiplexingManager viewControllerForIdentifier:]
  -[SBHMultiplexingManager activeMultiplexingViewControllerForViewController:]
  -[SBHMultiplexingManager setCachedRecentViewControllerCountLimit:]
  -[SBHMultiplexingManager hasViewControllerForIdentifier:]
  -[SBHMultiplexingManager setViewController:forIdentifier:]
  -[SBHMultiplexingManager newMultiplexingViewControllerForIdentifier:atLevel:]
  -[SBHMultiplexingManager discardMultiplexingViewController:]
  -[SBHMultiplexingManager .cxx_destruct]
  -[SBHMultiplexingManager discardCachedRecentViewControllersForIdentifier:]
  -[SBHMultiplexingManager _cacheLastDiscardedViewController:forIdentifier:]
  -[SBHMultiplexingManager activeMultiplexingViewControllerForIdentifier:]
  -[SBHMultiplexingManager multiplexingViewControllersForIdentifier]
  -[SBHMultiplexingManager _modifyViewControllersForIdentifier:reusingCacheViewControllersIfNecessary:withBlock:]
  -[SBHMultiplexingManager _activeMultiplexingViewControllerForIdentifier:]
  -[SBHMultiplexingManager cachedRecentViewControllerCountLimit]
  -[SBHMultiplexingManager _trimCachedRecentViewControllers]
  -[SBHMultiplexingManager validateActiveMultiplexingViewControllerForIdentifier:]
  -[SBHMultiplexingManager viewControllersForIdentifier]
  -[SBHMultiplexingManager setViewControllersForIdentifier:]
  -[SBHMultiplexingManager setMultiplexingViewControllersForIdentifier:]
  -[SBHMultiplexingManager cachedRecentViewControllersForIdentifier]
  -[SBHMultiplexingManager setCachedRecentViewControllersForIdentifier:]
  -[SBHMultiplexingManager cachedRecentViewControllerIdentifiers]
  -[SBHMultiplexingManager setCachedRecentViewControllerIdentifiers:]
  -[SBHMultiplexingManager succinctDescriptionBuilder]
  -[SBHMultiplexingManager succinctDescription]
  -[SBHMultiplexingManager setDelegate:]
  -[SBHMultiplexingManager delegate]
  -[SBHMultiplexingManager descriptionWithMultilinePrefix:]
  -[SBHMultiplexingManager descriptionBuilderWithMultilinePrefix:]


SBIconIndexMutableList : NSObject /usr/lib/libSystem.B.dylib <SBIconIndexNodeObserver, NSFastEnumeration>
 @property  <SBIconIndexMutableListObserver> *observer
 @property  <SBIconIndexNode> *firstNode
 @property  <SBIconIndexNode> *lastNode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconIndexMutableList sortUsingSelector:]
  -[SBIconIndexMutableList containedNodeIdentifiers]
  -[SBIconIndexMutableList nodesAlongIndexPath:consumedIndexes:]
  -[SBIconIndexMutableList containsNodeIdentifier:]
  -[SBIconIndexMutableList sortUsingComparator:]
  -[SBIconIndexMutableList init]
  -[SBIconIndexMutableList nodesContainingNodeIdentifier:]
  -[SBIconIndexMutableList indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBIconIndexMutableList lastNode]
  -[SBIconIndexMutableList moveNode:toIndex:]
  -[SBIconIndexMutableList addNode:]
  -[SBIconIndexMutableList dealloc]
  -[SBIconIndexMutableList removeNodeAtIndex:]
  -[SBIconIndexMutableList nodeAtIndex:]
  -[SBIconIndexMutableList .cxx_destruct]
  -[SBIconIndexMutableList removeNodesAtIndexes:]
  -[SBIconIndexMutableList containsNode:]
  -[SBIconIndexMutableList nodesAtIndexes:]
  -[SBIconIndexMutableList indexesOfNodesPassingTest:]
  -[SBIconIndexMutableList indexOfNodeAtIndexes:options:passingTest:]
  -[SBIconIndexMutableList enumerateNodesUsingBlock:]
  -[SBIconIndexMutableList countByEnumeratingWithState:objects:count:]
  -[SBIconIndexMutableList removeNodesInRange:]
  -[SBIconIndexMutableList firstNode]
  -[SBIconIndexMutableList indexDescriptionWithPrefix:]
  -[SBIconIndexMutableList removeAllNodes]
  -[SBIconIndexMutableList setObserver:]
  -[SBIconIndexMutableList insertNode:atIndex:]
  -[SBIconIndexMutableList node:didRemoveContainedNodeIdentifiers:]
  -[SBIconIndexMutableList indexOfNodeWithOptions:passingTest:]
  -[SBIconIndexMutableList count]
  -[SBIconIndexMutableList removeLastNode]
  -[SBIconIndexMutableList insertNodes:atIndexes:]
  -[SBIconIndexMutableList enumerateNodesAtIndexes:options:usingBlock:]
  -[SBIconIndexMutableList removeNode:]
  -[SBIconIndexMutableList removeNodesInArray:]
  -[SBIconIndexMutableList replaceNodeAtIndex:withNode:]
  -[SBIconIndexMutableList moveNodes:toContiguousIndicesStartingAt:]
  -[SBIconIndexMutableList nodes]
  -[SBIconIndexMutableList nodesInRange:]
  -[SBIconIndexMutableList indexOfNodePassingTest:]
  -[SBIconIndexMutableList observer]
  -[SBIconIndexMutableList nodeDidMoveContainedNodes:]
  -[SBIconIndexMutableList node:didAddContainedNodeIdentifiers:]
  -[SBIconIndexMutableList enumerateNodesWithOptions:usingBlock:]
  -[SBIconIndexMutableList indexOfNode:]


SBHAddWidgetSheetGalleryCollectionViewCell : UICollectionViewCell /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UIView *highlightView
 @property  SBHWidgetWrapperViewController *widgetWrapperViewController

  // instance methods
  -[SBHAddWidgetSheetGalleryCollectionViewCell initWithFrame:]
  -[SBHAddWidgetSheetGalleryCollectionViewCell widgetWrapperViewController]
  -[SBHAddWidgetSheetGalleryCollectionViewCell highlightView]
  -[SBHAddWidgetSheetGalleryCollectionViewCell setSelected:]
  -[SBHAddWidgetSheetGalleryCollectionViewCell .cxx_destruct]
  -[SBHAddWidgetSheetGalleryCollectionViewCell setHighlighted:]
  -[SBHAddWidgetSheetGalleryCollectionViewCell prepareForReuse]
  -[SBHAddWidgetSheetGalleryCollectionViewCell setHighlightView:]
  -[SBHAddWidgetSheetGalleryCollectionViewCell setWidgetWrapperViewController:]
  -[SBHAddWidgetSheetGalleryCollectionViewCell layoutSubviews]


SBHShadowedWidgetView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UIView *contentView
 @property  UIView *shadowView
 @property  BOOL perspectiveEnabled
 @property  double cornerRadius
 @property  {CGAffineTransform=dddddd} contentTransform
 @property  {CGAffineTransform=dddddd} shadowSupplementalTransform

  // class methods
  +[SBHShadowedWidgetView layerClass]

  // instance methods
  -[SBHShadowedWidgetView setCornerRadius:]
  -[SBHShadowedWidgetView contentView]
  -[SBHShadowedWidgetView .cxx_destruct]
  -[SBHShadowedWidgetView setPerspectiveEnabled:]
  -[SBHShadowedWidgetView setShadowSupplementalTransform:]
  -[SBHShadowedWidgetView _updateZPositions]
  -[SBHShadowedWidgetView isPerspectiveEnabled]
  -[SBHShadowedWidgetView initWithContentView:shadowView:perspectiveEnabled:]
  -[SBHShadowedWidgetView shadowSupplementalTransform]
  -[SBHShadowedWidgetView contentTransform]
  -[SBHShadowedWidgetView setContentView:]
  -[SBHShadowedWidgetView shadowView]
  -[SBHShadowedWidgetView setShadowView:]
  -[SBHShadowedWidgetView cornerRadius]
  -[SBHShadowedWidgetView setContentTransform:]
  -[SBHShadowedWidgetView layoutSubviews]


SBHPortaledShadowedWidgetView : SBHShadowedWidgetView
 @property  _UIPortalView *contentView
 @property  _UIPortalView *shadowView
 @property  BOOL hidesSourceViews

  // instance methods
  -[SBHPortaledShadowedWidgetView initWithContentView:shadowView:perspectiveEnabled:]
  -[SBHPortaledShadowedWidgetView setHidesSourceViews:]
  -[SBHPortaledShadowedWidgetView hidesSourceViews]


SBIconPageIndicatorImageSetResult : NSObject /usr/lib/libSystem.B.dylib
 @property  _UILegibilityImageSet *pageIndicatorSet
 @property  _UILegibilityImageSet *enabledPageIndicatorSet

  // instance methods
  -[SBIconPageIndicatorImageSetResult .cxx_destruct]
  -[SBIconPageIndicatorImageSetResult initWithIndicatorSet:enabledIndicatorSet:]
  -[SBIconPageIndicatorImageSetResult pageIndicatorSet]
  -[SBIconPageIndicatorImageSetResult enabledPageIndicatorSet]


SBIconPageIndicatorImageSetCache : NSObject /usr/lib/libSystem.B.dylib
 @property  _UILegibilitySettings *legibilitySettings

  // instance methods
  -[SBIconPageIndicatorImageSetCache legibilitySettings]
  -[SBIconPageIndicatorImageSetCache .cxx_destruct]
  -[SBIconPageIndicatorImageSetCache _emptyPageIndicatorSet]
  -[SBIconPageIndicatorImageSetCache pageIndicatorImageSetForLegibilitySettings:]
  -[SBIconPageIndicatorImageSetCache searchIndicatorImageSetForLegibilitySettings:]
  -[SBIconPageIndicatorImageSetCache cameraIndicatorImageSetForLegibilitySettings:]
  -[SBIconPageIndicatorImageSetCache setLegibilitySettings:]


SBHZAnimatableView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
  // instance methods
  -[SBHZAnimatableView _shouldAnimatePropertyWithKey:]


SBHWidgetWrapperView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  SBHShadowedWidgetView *shadowedWidgetView
 @property  UIView *shadowView
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  NSLayoutConstraint *contentHeightConstraint
 @property  NSLayoutConstraint *contentWidthConstraint
 @property  BOOL titleAndSubtitleVisible
 @property  NSString *title
 @property  NSString *subtitle
 @property  SBIconView *contentView
 @property  UIView *containerView
 @property  {CGSize=dd} contentSize
 @property  double cornerRadius
 @property  BOOL hoverAnimationEnabled
 @property  {CATransform3D=dddddddddddddddd} hoverTransform

  // instance methods
  -[SBHWidgetWrapperView setSubtitle:]
  -[SBHWidgetWrapperView didMoveToWindow]
  -[SBHWidgetWrapperView setTitleLabel:]
  -[SBHWidgetWrapperView titleLabel]
  -[SBHWidgetWrapperView init]
  -[SBHWidgetWrapperView setCornerRadius:]
  -[SBHWidgetWrapperView contentView]
  -[SBHWidgetWrapperView .cxx_destruct]
  -[SBHWidgetWrapperView initWithTitleAndSubtitleVisible:]
  -[SBHWidgetWrapperView _updateHoverAnimation]
  -[SBHWidgetWrapperView shadowedWidgetView]
  -[SBHWidgetWrapperView isHoverAnimationEnabled]
  -[SBHWidgetWrapperView newPortaledShadowedWidgetView]
  -[SBHWidgetWrapperView hoverTransform]
  -[SBHWidgetWrapperView setHoverAnimationEnabled:]
  -[SBHWidgetWrapperView contentHeightConstraint]
  -[SBHWidgetWrapperView setContentHeightConstraint:]
  -[SBHWidgetWrapperView contentWidthConstraint]
  -[SBHWidgetWrapperView setContentWidthConstraint:]
  -[SBHWidgetWrapperView titleAndSubtitleVisible]
  -[SBHWidgetWrapperView setTitle:]
  -[SBHWidgetWrapperView title]
  -[SBHWidgetWrapperView setContentView:]
  -[SBHWidgetWrapperView contentSize]
  -[SBHWidgetWrapperView shadowView]
  -[SBHWidgetWrapperView containerView]
  -[SBHWidgetWrapperView _updateContentSizeConstraints]
  -[SBHWidgetWrapperView subtitle]
  -[SBHWidgetWrapperView setContentSize:]
  -[SBHWidgetWrapperView subtitleLabel]
  -[SBHWidgetWrapperView cornerRadius]
  -[SBHWidgetWrapperView setSubtitleLabel:]


SBFolderView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconListPageControlDelegate, UITextFieldDelegate, SBIconListLayoutDelegate, SBIconScrollViewDelegate, SBFolderObserver, BSDescriptionProviding, SBIconListViewDragDelegate>
 @property  BOOL rotating
 @property  BOOL hasEverBeenInAWindow
 @property  UIPanGestureRecognizer *scrollingDisabledGestureRecognizer
 @property  UIView *scalingView
 @property  BOOL scalingViewBorrowed
 @property  long long orientation
 @property  SBIconListPageControl *pageControl
 @property  _UILegibilitySettings *legibilitySettingsForIconListViews
 @property  BOOL parallaxEnabled
 @property  double pageControlAreaHeight
 @property  long long minimumPageIndex
 @property  long long maximumPageIndex
 @property  long long defaultPageIndex
 @property  long long firstIconPageIndex
 @property  long long lastIconPageIndex
 @property  unsigned long pageCount
 @property  unsigned long countOfAdditionalPagesToKeepVisibleInOneDirection
 @property  double additionalScrollWidthToKeepVisibleInOneDirection
 @property  SBFolderTitleTextField *titleTextField
 @property  long long iconVisibilityHandling
 @property  BOOL updatesPredictedVisibleColumnWhileScrolling
 @property  double scrollableWidthForVisibleColumnRange
 @property  double minimumVisibleScrollOffset
 @property  double maximumVisibleScrollOffset
 @property  BOOL RTL
 @property  BOOL suppressesEditingStateForListViews
 @property  BOOL automaticallyCreatesIconListViews
 @property  BOOL includesHiddenIconListPages
 @property  <SBFolderViewDelegate> *delegate
 @property  SBFolder *folder
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  BOOL editing
 @property  BOOL scrolling
 @property  unsigned long allowedOrientations
 @property  long long currentPageIndex
 @property  NSArray *iconListViews
 @property  unsigned long iconListViewCount
 @property  <SBIconViewProviding> *iconViewProvider
 @property  unsigned long userInterfaceLayoutDirectionHandling
 @property  long long userInterfaceLayoutDirection
 @property  NSString *iconLocation
 @property  UIView *headerView
 @property  double headerHeight
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIScrollView *scrollView
 @property  SBIconListView *currentIconListView
 @property  SBIconListModel *currentIconListModel
 @property  BOOL pageControlHidden
 @property  double pageControlAlpha
 @property  BOOL occluded
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  SBIconPageIndicatorImageSetCache *iconPageIndicatorImageSetCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFolderView countOfAdditionalPagesToKeepVisibleInOneDirection]
  +[SBFolderView _scrollViewClass]
  +[SBFolderView defaultIconListViewClass]
  +[SBFolderView defaultIconLocation]
  +[SBFolderView _pageOffsetForOffset:behavior:pageWidth:pageSpacing:pageCount:userInterfaceLayoutDirection:fractionOfDistanceThroughPage:]

  // instance methods
  -[SBFolderView _setCurrentPageIndex:]
  -[SBFolderView canChangeCurrentPageIndexToIndex:]
  -[SBFolderView iconVisibilityHandling]
  -[SBFolderView folder:didAddList:]
  -[SBFolderView _scrollOffsetForContentAtPageIndex:]
  -[SBFolderView setPageControlHidden:]
  -[SBFolderView prepareToOpen]
  -[SBFolderView currentIconListModel]
  -[SBFolderView _titleFontSize]
  -[SBFolderView iconPageCount]
  -[SBFolderView didMoveToWindow]
  -[SBFolderView additionalIconListViews]
  -[SBFolderView firstIconPageIndex]
  -[SBFolderView iconListViewDisplayingIconView:]
  -[SBFolderView iconListViews]
  -[SBFolderView iconListModelIndexForPageIndex:]
  -[SBFolderView layoutIconLists:animationType:forceRelayout:]
  -[SBFolderView iconListViewIndexForPageIndex:]
  -[SBFolderView didMoveToSuperview]
  -[SBFolderView resetIconListViews]
  -[SBFolderView _pageIndexForOffset:behavior:fractionOfDistanceThroughPage:]
  -[SBFolderView visibleColumnRangeWithTotalLists:columnsPerList:iconVisibilityHandling:predictedVisibleColumn:]
  -[SBFolderView allowedOrientations]
  -[SBFolderView isPageTypeIcon:]
  -[SBFolderView _updateIconListViewsWithCurrentPageIndex:currentIconListModel:]
  -[SBFolderView _pageIndexForOffset:]
  -[SBFolderView legibilitySettings]
  -[SBFolderView setIconImageCache:]
  -[SBFolderView cleanUpAfterTransition]
  -[SBFolderView _updatePageControlCurrentPage]
  -[SBFolderView _useParallaxOnPageControl]
  -[SBFolderView iconListViewForDrag:]
  -[SBFolderView _markListViewsAsPurged]
  -[SBFolderView closestIconPageIndexForPageIndex:]
  -[SBFolderView _shouldManageScrolledHiddenClippedIconView]
  -[SBFolderView updatesPredictedVisibleColumnWhileScrolling]
  -[SBFolderView _updateScrollingState:]
  -[SBFolderView _legibilitySettingsWithPrimaryColor:]
  -[SBFolderView _iconListViewSize]
  -[SBFolderView indexOfIconListView:]
  -[SBFolderView _hasLeadingCustomPages]
  -[SBFolderView cancelScrolling]
  -[SBFolderView iconListViewAtScrollPoint:]
  -[SBFolderView userInterfaceLayoutDirection]
  -[SBFolderView iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFolderView getLeadingVisiblePageIndex:trailingVisiblePageIndex:]
  -[SBFolderView willTransitionAnimated:withSettings:]
  -[SBFolderView didTransitionAnimated:]
  -[SBFolderView dealloc]
  -[SBFolderView updateIconListViews]
  -[SBFolderView _setPageControlDisabled:forReason:]
  -[SBFolderView minimumHomeScreenScaleDidChange]
  -[SBFolderView countOfAdditionalPagesToKeepVisibleInOneDirection]
  -[SBFolderView iconListViewWithList:]
  -[SBFolderView _interactionTintColor]
  -[SBFolderView setHasEverBeenInAWindow:]
  -[SBFolderView _updateScrollingIfNeeded]
  -[SBFolderView iconImageCache]
  -[SBFolderView scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBFolderView updateAccessibilityTintColors]
  -[SBFolderView .cxx_destruct]
  -[SBFolderView iconScrollView:shouldSetContentOffset:animated:]
  -[SBFolderView hitTest:withEvent:]
  -[SBFolderView _titleTextField]
  -[SBFolderView _updateHiddenIconViewForScrolling:]
  -[SBFolderView hasIconPages]
  -[SBFolderView enumerateScrollViewPageViewsUsingBlock:]
  -[SBFolderView pageControlAlpha]
  -[SBFolderView setCurrentPageIndex:animated:completion:]
  -[SBFolderView listViewClass]
  -[SBFolderView _resetIconListViews]
  -[SBFolderView doesPageContainIconListView:]
  -[SBFolderView _currentPageIndexDidChange]
  -[SBFolderView pageCount]
  -[SBFolderView _backgroundContrastDidChange:]
  -[SBFolderView removeScrollViewIsScrollingOverrideReason:]
  -[SBFolderView userInterfaceLayoutDirectionHandling]
  -[SBFolderView setContentAlpha:]
  -[SBFolderView _scrollViewContentSize]
  -[SBFolderView isParallaxEnabled]
  -[SBFolderView _updateParallaxSettings]
  -[SBFolderView _configureIconListView:]
  -[SBFolderView iconPageIndicatorImageSetCache]
  -[SBFolderView noteUserIsInteractingWithIcons]
  -[SBFolderView _handleClippingScrollViewDidScroll:]
  -[SBFolderView _orientationDidChange:]
  -[SBFolderView isScalingViewBorrowed]
  -[SBFolderView hasEverBeenInAWindow]
  -[SBFolderView succinctDescriptionBuilder]
  -[SBFolderView _didRemoveIconListView:]
  -[SBFolderView scrollView]
  -[SBFolderView pageIndexForIconListModelIndex:]
  -[SBFolderView iconListView:iconDropSessionDidUpdate:]
  -[SBFolderView iconListViewAtIndex:]
  -[SBFolderView _showsTitle]
  -[SBFolderView _currentPageIndexDidChangeFromPageIndex:]
  -[SBFolderView automaticallyCreatesIconListViews]
  -[SBFolderView pageControlDidReceiveButtonTap:]
  -[SBFolderView currentPageIndex]
  -[SBFolderView setIncludesHiddenIconListPages:]
  -[SBFolderView _updateIconListContainment:atIndex:]
  -[SBFolderView iconListView:canHandleIconDropSession:]
  -[SBFolderView pageControlAreaHeight]
  -[SBFolderView _setScrollingDisabled:forReason:]
  -[SBFolderView willMoveToWindow:]
  -[SBFolderView setLegibilitySettings:]
  -[SBFolderView _frameForScalingView]
  -[SBFolderView iconListViewIndexForIconListModelIndex:]
  -[SBFolderView locationCountsAsInsideFolder:]
  -[SBFolderView updateVisibleColumnRange]
  -[SBFolderView scrollViewDidEndScrolling:]
  -[SBFolderView _precacheIconImages]
  -[SBFolderView iconListViewForPageIndex:]
  -[SBFolderView _newPageControl]
  -[SBFolderView pageIndexForIconListViewIndex:]
  -[SBFolderView _pageSpacing]
  -[SBFolderView _findHiddenIconView]
  -[SBFolderView isRTL]
  -[SBFolderView iconListView:animatorForRemovingIcons:proposedAnimator:]
  -[SBFolderView folderDidChange]
  -[SBFolderView enumerateIconListViewsUsingBlock:]
  -[SBFolderView _offsetToCenterPageControlInSpaceForPageControl]
  -[SBFolderView textFieldShouldBeginEditing:]
  -[SBFolderView _addIconListViewsForModels:]
  -[SBFolderView isVisibleColumnRangeValid:]
  -[SBFolderView scrollViewDidEndDecelerating:]
  -[SBFolderView includesHiddenIconListPages]
  -[SBFolderView _ignoreScrollingDidEndNotifications]
  -[SBFolderView folderIconImageCache]
  -[SBFolderView _scrollRangeForPageAtIndex:]
  -[SBFolderView _unignoreScrollingDidEndNotifications]
  -[SBFolderView _updateIconListViews:]
  -[SBFolderView scrollViewWillBeginDragging:]
  -[SBFolderView _updateScalingViewFrame]
  -[SBFolderView iconScrollViewWillCancelTouchTracking:]
  -[SBFolderView fadeContentForMinificationFraction:]
  -[SBFolderView iconListView:iconDropSessionDidEnter:]
  -[SBFolderView _shouldIgnoreScrollingDidEndNotifications]
  -[SBFolderView _pageCountForPageControl]
  -[SBFolderView animatesRotationForAllVisibleIconListViews]
  -[SBFolderView setFolderIconImageCache:]
  -[SBFolderView succinctDescription]
  -[SBFolderView _layoutSubviews]
  -[SBFolderView animateScrollToDefaultPageWithCompletionHandler:]
  -[SBFolderView scrollingDirection]
  -[SBFolderView setAutomaticallyCreatesIconListViews:]
  -[SBFolderView _setFolderName:]
  -[SBFolderView _noteFolderListsDidChange:]
  -[SBFolderView scrollableWidthForVisibleColumnRange]
  -[SBFolderView setSuppressesEditingStateForListViews:]
  -[SBFolderView isPageControlHidden]
  -[SBFolderView pageControl:didMoveCurrentPageToPage:withScrubbing:]
  -[SBFolderView _isValidIconListViewIndex:]
  -[SBFolderView minimumVisibleScrollOffset]
  -[SBFolderView _createIconListViewForList:]
  -[SBFolderView allIconListViews]
  -[SBFolderView tearDownListViews]
  -[SBFolderView additionalScrollWidthToKeepVisibleInOneDirection]
  -[SBFolderView iconListView:performIconDrop:]
  -[SBFolderView _updateIconListFrames]
  -[SBFolderView setRotating:]
  -[SBFolderView maximumVisibleScrollOffset]
  -[SBFolderView setPageControl:]
  -[SBFolderView pageIndexForIconListModel:]
  -[SBFolderView _addIconListView:atEnd:]
  -[SBFolderView iconScrollViewDidCancelTouchTracking:]
  -[SBFolderView _leadingCustomPageCount]
  -[SBFolderView clearVisibleColumnRange]
  -[SBFolderView userInterfaceLayoutDirectionAwareScrollingDirection]
  -[SBFolderView textFieldDidBeginEditing:]
  -[SBFolderView lastIconPageIndex]
  -[SBFolderView _isValidPageIndex:]
  -[SBFolderView scrollingDisabledGestureDidUpdate:]
  -[SBFolderView returnScalingView]
  -[SBFolderView scalingViewFrame]
  -[SBFolderView _didAddIconListView:]
  -[SBFolderView accessibilityTintColorForRect:tintStyle:]
  -[SBFolderView _scrollOffsetForFirstListView]
  -[SBFolderView scrollView:contentSizeForZoomScale:withProposedSize:]
  -[SBFolderView textFieldShouldReturn:]
  -[SBFolderView scrollingDisabledGestureRecognizer]
  -[SBFolderView iconListView:iconDropSessionDidExit:]
  -[SBFolderView headerHeight]
  -[SBFolderView _updatePageControlToIndex:]
  -[SBFolderView setOrientation:]
  -[SBFolderView _updateEditingStateAnimated:]
  -[SBFolderView folder]
  -[SBFolderView legibilitySettingsForIconListViews]
  -[SBFolderView isEditing]
  -[SBFolderView maximumPageIndex]
  -[SBFolderView listLayoutProvider]
  -[SBFolderView scrollViewDidScroll:]
  -[SBFolderView _removeIconListView:purge:]
  -[SBFolderView initWithConfiguration:]
  -[SBFolderView defaultPageIndex]
  -[SBFolderView transitionToSize:withTransitionCoordinator:]
  -[SBFolderView iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBFolderView borrowScalingView]
  -[SBFolderView setCurrentPageIndex:animated:]
  -[SBFolderView minimumPageIndex]
  -[SBFolderView _removeIconListView:]
  -[SBFolderView firstIconListView]
  -[SBFolderView _scrollRangeForContentAtPageIndex:pageWidth:]
  -[SBFolderView iconListViewForIconListModelIndex:]
  -[SBFolderView _iconListFrameForPageRect:atIndex:]
  -[SBFolderView setPageControlAlpha:]
  -[SBFolderView iconListViewCount]
  -[SBFolderView iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFolderView _setScrollViewContentOffset:animated:]
  -[SBFolderView _setParallaxDisabled:forReason:]
  -[SBFolderView _checkIfScrollStateChanged]
  -[SBFolderView scrollViewDidEndScrollingAnimation:]
  -[SBFolderView iconLocation]
  -[SBFolderView _trailingCustomPageCount]
  -[SBFolderView _updatePageControlNumberOfPages]
  -[SBFolderView _pageWidth]
  -[SBFolderView folder:didRemoveLists:atIndexes:]
  -[SBFolderView orientation]
  -[SBFolderView _hasTrailingCustomPages]
  -[SBFolderView _setCurrentPageIndex:deferringPageControlUpdate:]
  -[SBFolderView prepareForTransition]
  -[SBFolderView setDelegate:]
  -[SBFolderView _disableUserInteractionBeforeSignificantAnimation]
  -[SBFolderView iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBFolderView iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFolderView _willScrollToPageIndex:animated:]
  -[SBFolderView _addIconListView:]
  -[SBFolderView _scrollOffsetForPageAtIndex:]
  -[SBFolderView resetContentOffsetToCurrentPageAnimated:]
  -[SBFolderView validateVisibleColumnRange]
  -[SBFolderView updateVisibleColumnRangeWithTotalLists:columnsPerList:iconVisibilityHandling:]
  -[SBFolderView lastIconListView]
  -[SBFolderView updateIconListIndexAndVisibility]
  -[SBFolderView iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFolderView suppressesEditingStateForListViews]
  -[SBFolderView headerView]
  -[SBFolderView didAddSubview:]
  -[SBFolderView iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFolderView iconScrollView:shouldSetAutoscrollContentOffset:]
  -[SBFolderView folder:didMoveList:fromIndex:toIndex:]
  -[SBFolderView iconListViewAtPoint:]
  -[SBFolderView pageControl]
  -[SBFolderView _enableUserInteractionAfterSignificantAnimation]
  -[SBFolderView setScrollingDisabledGestureRecognizer:]
  -[SBFolderView delegate]
  -[SBFolderView descriptionWithMultilinePrefix:]
  -[SBFolderView _addScrollingCompletionBlock:]
  -[SBFolderView _frameForIconListAtIndex:]
  -[SBFolderView iconListViewForTouch:]
  -[SBFolderView _updateTitleLegibilitySettings]
  -[SBFolderView setFolder:]
  -[SBFolderView isRotating]
  -[SBFolderView _scrollOffsetForPageAtIndex:pageWidth:]
  -[SBFolderView setEditing:animated:]
  -[SBFolderView _updateIconListLegibilitySettings]
  -[SBFolderView enumerateIconListViewsWithOptions:usingBlock:]
  -[SBFolderView iconViewProvider]
  -[SBFolderView layoutSubviews]
  -[SBFolderView _updateIconListViewsWithCurrentIconListModel:]
  -[SBFolderView setIconPageIndicatorImageSetCache:]
  -[SBFolderView isScrolling]
  -[SBFolderView currentIconListView]
  -[SBFolderView descriptionBuilderWithMultilinePrefix:]
  -[SBFolderView scalingView]
  -[SBFolderView accessibilityLegibilitySettingsForRect:tintStyle:]
  -[SBFolderView updateIconListIndexAndVisibility:]
  -[SBFolderView typeForPage:]
  -[SBFolderView textFieldDidEndEditing:]
  -[SBFolderView setOccluded:]
  -[SBFolderView isOccluded]
  -[SBFolderView _scrollRangeForPageAtIndex:pageWidth:]
  -[SBFolderView setNeedsLayout]
  -[SBFolderView scrollViewDidEndDragging:willDecelerate:]
  -[SBFolderView addScrollViewIsScrollingOverrideReason:]
  -[SBFolderView fadeContentForMagnificationFraction:]
  -[SBFolderView folderWillChange:]
  -[SBFolderView iconLocationForList:]


SBIconScrollView : BSUIScrollView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  {CGPoint=dd} lastAnimatedScrollContentOffset
 @property  <SBIconScrollViewDelegate> *delegate

  // instance methods
  -[SBIconScrollView _gestureRecognizer:shouldReceiveTouch:]
  -[SBIconScrollView handlePan:]
  -[SBIconScrollView setContentOffset:animated:]
  -[SBIconScrollView _roundedProposedContentOffset:]
  -[SBIconScrollView cancelTouchTracking]
  -[SBIconScrollView setContentOffset:]
  -[SBIconScrollView lastAnimatedScrollContentOffset]
  -[SBIconScrollView setLastAnimatedScrollContentOffset:]
  -[SBIconScrollView _scrollsToMakeFirstResponderVisible]
  -[SBIconScrollView _autoScrollAssistantUpdateContentOffset:]
  -[SBIconScrollView _gestureRecognizerFailed:]


SBIconLabelImageCache : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  CPMemoryPool *grayPool
 @property  CPMemoryPool *colorPool
 @property  CPMemoryPool *legibilityPool
 @property  {CGSize=dd} maxLabelSize
 @property  double scale
 @property  unsigned long numberOfCachedImages
 @property  unsigned long numberOfCacheHits
 @property  unsigned long numberOfCacheMisses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconLabelImageCache grayPool]
  -[SBIconLabelImageCache labelImageForParameters:]
  -[SBIconLabelImageCache maxLabelSize]
  -[SBIconLabelImageCache removeLabelImageForParameters:]
  -[SBIconLabelImageCache .cxx_destruct]
  -[SBIconLabelImageCache generateAndStoreLabelImageForParameters:]
  -[SBIconLabelImageCache succinctDescriptionBuilder]
  -[SBIconLabelImageCache numberOfCacheMisses]
  -[SBIconLabelImageCache numberOfCacheHits]
  -[SBIconLabelImageCache colorPool]
  -[SBIconLabelImageCache removeLabelImagesWithParametersPassingTest:]
  -[SBIconLabelImageCache succinctDescription]
  -[SBIconLabelImageCache legibilityPool]
  -[SBIconLabelImageCache numberOfCachedImages]
  -[SBIconLabelImageCache cachedLabelImagesWithParametersPassingTest:]
  -[SBIconLabelImageCache descriptionWithMultilinePrefix:]
  -[SBIconLabelImageCache cachedLabelImageForParameters:]
  -[SBIconLabelImageCache scale]
  -[SBIconLabelImageCache initWithMaxLabelSize:scale:]
  -[SBIconLabelImageCache descriptionBuilderWithMultilinePrefix:]
  -[SBIconLabelImageCache cacheLabelImageForParameters:]


SBFloatyFolderView : SBFolderView <UIGestureRecognizerDelegate, PTSettingsKeyObserver, SBFolderBackgroundViewDelegate, UIScribbleInteractionDelegate>
 @property  BOOL displaysMultipleIconListsInLandscapeOrientation
 @property  BOOL displayingMultipleIconLists
 @property  BOOL convertingIconListStyle
 @property  BOOL animatingRotation
 @property  UIScribbleInteraction *titleScribbleInteraction
 @property  double cornerRadius
 @property  unsigned long backgroundEffect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFloatyFolderView countOfAdditionalPagesToKeepVisibleInOneDirection]
  +[SBFloatyFolderView _scrollViewClass]
  +[SBFloatyFolderView defaultCornerRadius]
  +[SBFloatyFolderView defaultIconLocation]

  // instance methods
  -[SBFloatyFolderView iconVisibilityHandling]
  -[SBFloatyFolderView _titleFontSize]
  -[SBFloatyFolderView settings:changedValueForKey:]
  -[SBFloatyFolderView isAnimatingRotation]
  -[SBFloatyFolderView setDisplayingMultipleIconLists:]
  -[SBFloatyFolderView _shouldManageScrolledHiddenClippedIconView]
  -[SBFloatyFolderView _updateScrollingState:]
  -[SBFloatyFolderView _handlePinchGesture:]
  -[SBFloatyFolderView _convertToMultipleIconListsAnimated:]
  -[SBFloatyFolderView setCornerRadius:]
  -[SBFloatyFolderView titleScribbleInteraction]
  -[SBFloatyFolderView _newPageBackgroundView]
  -[SBFloatyFolderView willTransitionAnimated:withSettings:]
  -[SBFloatyFolderView didTransitionAnimated:]
  -[SBFloatyFolderView _rubberBandIntervalForOverscroll]
  -[SBFloatyFolderView dealloc]
  -[SBFloatyFolderView updateAccessibilityTintColors]
  -[SBFloatyFolderView .cxx_destruct]
  -[SBFloatyFolderView hitTest:withEvent:]
  -[SBFloatyFolderView _currentPageIndexDidChange]
  -[SBFloatyFolderView _shouldConvertToMultipleIconListsInLandscapeOrientation]
  -[SBFloatyFolderView accessibilityTintColorForBackgroundView:]
  -[SBFloatyFolderView _orientationDidChange:]
  -[SBFloatyFolderView _convertToSingleIconListAnimated:]
  -[SBFloatyFolderView _didRemoveIconListView:]
  -[SBFloatyFolderView scribbleInteraction:shouldBeginAtLocation:]
  -[SBFloatyFolderView _showsTitle]
  -[SBFloatyFolderView _updateScalingViewLocation]
  -[SBFloatyFolderView _updateIconListContainment:atIndex:]
  -[SBFloatyFolderView backgroundEffect]
  -[SBFloatyFolderView setLegibilitySettings:]
  -[SBFloatyFolderView _frameForScalingView]
  -[SBFloatyFolderView locationCountsAsInsideFolder:]
  -[SBFloatyFolderView isDisplayingMultipleIconLists]
  -[SBFloatyFolderView _updateScalingViewFrame]
  -[SBFloatyFolderView fadeContentForMinificationFraction:]
  -[SBFloatyFolderView _layoutSubviews]
  -[SBFloatyFolderView _handleOutsideTap:]
  -[SBFloatyFolderView scrollableWidthForVisibleColumnRange]
  -[SBFloatyFolderView enumeratePageBackgroundViewsUsingBlock:]
  -[SBFloatyFolderView minimumVisibleScrollOffset]
  -[SBFloatyFolderView floatyFolderConfiguration]
  -[SBFloatyFolderView setAnimatingRotation:]
  -[SBFloatyFolderView _handleLongPressGesture:]
  -[SBFloatyFolderView visibleFolderRelativeImageCenterForIcon:]
  -[SBFloatyFolderView returnScalingView]
  -[SBFloatyFolderView _didAddIconListView:]
  -[SBFloatyFolderView legibilitySettingsForIconListViews]
  -[SBFloatyFolderView _pageBackgroundFrameForPageRect:]
  -[SBFloatyFolderView scrollViewDidScroll:]
  -[SBFloatyFolderView initWithConfiguration:]
  -[SBFloatyFolderView transitionToSize:withTransitionCoordinator:]
  -[SBFloatyFolderView borrowScalingView]
  -[SBFloatyFolderView setBackgroundEffect:]
  -[SBFloatyFolderView _iconListFrameForPageRect:atIndex:]
  -[SBFloatyFolderView _configureGestures]
  -[SBFloatyFolderView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[SBFloatyFolderView isConvertingIconListStyle]
  -[SBFloatyFolderView accessibilityReduceTransparencyDidChange:]
  -[SBFloatyFolderView cornerRadius]
  -[SBFloatyFolderView _tapToCloseGestureRecognizer:shouldReceiveTouch:]
  -[SBFloatyFolderView displaysMultipleIconListsInLandscapeOrientation]
  -[SBFloatyFolderView _scrollView:adjustedOffsetForOffset:translation:startPoint:locationInView:horizontalVelocity:verticalVelocity:]
  -[SBFloatyFolderView iconListViewAtPoint:]
  -[SBFloatyFolderView gestureRecognizer:shouldReceiveTouch:]
  -[SBFloatyFolderView setBackgroundAlpha:]
  -[SBFloatyFolderView setTitleScribbleInteraction:]
  -[SBFloatyFolderView descriptionBuilderWithMultilinePrefix:]
  -[SBFloatyFolderView setConvertingIconListStyle:]
  -[SBFloatyFolderView fadeContentForMagnificationFraction:]
  -[SBFloatyFolderView _setScrollViewNeedsToClipCorners:]


SBFloatyFolderBackgroundClipView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  SBFolderBackgroundView *backgroundView
 @property  unsigned long backgroundEffect
 @property  double cornerRadius

  // instance methods
  -[SBFloatyFolderBackgroundClipView backgroundView]
  -[SBFloatyFolderBackgroundClipView initWithFrame:]
  -[SBFloatyFolderBackgroundClipView setCornerRadius:]
  -[SBFloatyFolderBackgroundClipView .cxx_destruct]
  -[SBFloatyFolderBackgroundClipView backgroundEffect]
  -[SBFloatyFolderBackgroundClipView setBackgroundEffect:]
  -[SBFloatyFolderBackgroundClipView cornerRadius]
  -[SBFloatyFolderBackgroundClipView layoutSubviews]


SBFloatyFolderScrollView : SBIconScrollView
  // instance methods
  -[SBFloatyFolderScrollView pointInside:withEvent:]


SBDockIconListView : SBIconListView
  // class methods
  +[SBDockIconListView defaultHeight]
  +[SBDockIconListView defaultIconViewConfigurationOptions]
  +[SBDockIconListView defaultFrameForOrientation:]

  // instance methods
  -[SBDockIconListView allowsAddingIconCount:]
  -[SBDockIconListView _shouldAnimatePropertyWithKey:]
  -[SBDockIconListView initWithModel:layoutProvider:iconLocation:orientation:iconViewProvider:]
  -[SBDockIconListView isVertical]
  -[SBDockIconListView adaptsOrientationToTraitCollection]


SBHIconLibraryPredicateQueryEngine : SBHIconLibraryAbstractQueryEngine
  // instance methods
  -[SBHIconLibraryPredicateQueryEngine .cxx_destruct]
  -[SBHIconLibraryPredicateQueryEngine _processingQueue_teardownQueryContext:]
  -[SBHIconLibraryPredicateQueryEngine executeQuery:]


SBHomeScreenIconTransitionAnimator : NSObject /usr/lib/libSystem.B.dylib <SBIconAnimatorDelegate, SBViewControllerInteractiveAnimatedTransitioning>
 @property  SBHIconAnimationSettings *currentSettings
 @property  SBIconAnimator *iconAnimator
 @property  SBNestingViewController *childViewController
 @property  unsigned long operation
 @property  double initialDelay
 @property  unsigned long currentOperation
 @property  BOOL cancelled
 @property  BOOL restarted
 @property  <SBHomeScreenIconTransitionAnimatorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHomeScreenIconTransitionAnimator restart]
  -[SBHomeScreenIconTransitionAnimator isCancelled]
  -[SBHomeScreenIconTransitionAnimator supportsRestarting]
  -[SBHomeScreenIconTransitionAnimator transitionDuration:]
  -[SBHomeScreenIconTransitionAnimator operation]
  -[SBHomeScreenIconTransitionAnimator updateTransition:withPercentComplete:]
  -[SBHomeScreenIconTransitionAnimator initialDelay]
  -[SBHomeScreenIconTransitionAnimator setInitialDelay:]
  -[SBHomeScreenIconTransitionAnimator animationEnded:]
  -[SBHomeScreenIconTransitionAnimator transitionAnimationFactory:]
  -[SBHomeScreenIconTransitionAnimator iconAnimatorWasInvalidated:]
  -[SBHomeScreenIconTransitionAnimator cancelTransition:withCompletionSpeed:completionCurve:]
  -[SBHomeScreenIconTransitionAnimator iconAnimator:canAlterViewHierarchyDuringCleanupUsingBlock:]
  -[SBHomeScreenIconTransitionAnimator .cxx_destruct]
  -[SBHomeScreenIconTransitionAnimator finishInteractiveTransition:withCompletionSpeed:completionCurve:]
  -[SBHomeScreenIconTransitionAnimator wasRestarted]
  -[SBHomeScreenIconTransitionAnimator animateTransition:]
  -[SBHomeScreenIconTransitionAnimator initWithIconAnimator:childViewController:operation:]
  -[SBHomeScreenIconTransitionAnimator cancel]
  -[SBHomeScreenIconTransitionAnimator childViewController]
  -[SBHomeScreenIconTransitionAnimator currentOperation]
  -[SBHomeScreenIconTransitionAnimator iconAnimator]
  -[SBHomeScreenIconTransitionAnimator completeImmediately]
  -[SBHomeScreenIconTransitionAnimator currentSettings]
  -[SBHomeScreenIconTransitionAnimator reverse]
  -[SBHomeScreenIconTransitionAnimator setDelegate:]
  -[SBHomeScreenIconTransitionAnimator delegate]
  -[SBHomeScreenIconTransitionAnimator percentComplete]


SBHHomeScreenSettings : PTSettings /System/Library/PrivateFrameworks/CoreMaterial.framework/CoreMaterial
 @property  BOOL usesMinimumViableHomeScreen
 @property  BOOL showPopOvers
 @property  SBHIconAnimationRootSettings *iconAnimationSettings
 @property  SBHIconSettings *iconSettings
 @property  SBHFolderSettings *folderSettings
 @property  SBHRootFolderSettings *rootFolderSettings
 @property  SBHIconEditingSettings *iconEditingSettings
 @property  SBHWidgetSettings *widgetSettings
 @property  SBHAppLibrarySettings *appLibrarySettings
 @property  SBHHomePullToSearchSettings *pullToSearchSettings

  // class methods
  +[SBHHomeScreenSettings homeScreenDefaults]
  +[SBHHomeScreenSettings settingsControllerModule]

  // instance methods
  -[SBHHomeScreenSettings setDefaultValues]
  -[SBHHomeScreenSettings setIconEditingSettings:]
  -[SBHHomeScreenSettings setAppLibrarySettings:]
  -[SBHHomeScreenSettings iconEditingSettings]
  -[SBHHomeScreenSettings setUsesMinimumViableHomeScreen:]
  -[SBHHomeScreenSettings .cxx_destruct]
  -[SBHHomeScreenSettings folderSettings]
  -[SBHHomeScreenSettings iconAnimationSettings]
  -[SBHHomeScreenSettings setIconAnimationSettings:]
  -[SBHHomeScreenSettings iconSettings]
  -[SBHHomeScreenSettings showPopOvers]
  -[SBHHomeScreenSettings setShowPopOvers:]
  -[SBHHomeScreenSettings rootFolderSettings]
  -[SBHHomeScreenSettings setWidgetSettings:]
  -[SBHHomeScreenSettings setPullToSearchSettings:]
  -[SBHHomeScreenSettings pullToSearchSettings]
  -[SBHHomeScreenSettings setIconSettings:]
  -[SBHHomeScreenSettings widgetSettings]
  -[SBHHomeScreenSettings setFolderSettings:]
  -[SBHHomeScreenSettings setRootFolderSettings:]
  -[SBHHomeScreenSettings appLibrarySettings]
  -[SBHHomeScreenSettings usesMinimumViableHomeScreen]


SBFolderPresentingViewController : SBNestingViewController <SBFolderControllerBackgroundViewDelegate>
 @property  <UIViewControllerAnimatedTransitioning> *currentFolderAnimator
 @property  SBFolderContainerView *view
 @property  <SBFolderPresentingViewControllerDelegate> *folderPresentationDelegate
 @property  SBFolderController *presentedFolderController
 @property  unsigned long backgroundEffect

  // instance methods
  -[SBFolderPresentingViewController .cxx_destruct]
  -[SBFolderPresentingViewController setFolderPresentationDelegate:]
  -[SBFolderPresentingViewController presentedFolderController]
  -[SBFolderPresentingViewController currentFolderAnimator]
  -[SBFolderPresentingViewController dismissPresentedFolderControllerAnimated:completion:]
  -[SBFolderPresentingViewController presentFolderController:animated:completion:]
  -[SBFolderPresentingViewController setCurrentFolderAnimator:]
  -[SBFolderPresentingViewController folderPresentationDelegate]
  -[SBFolderPresentingViewController nestingViewController:animationControllerForOperation:onViewController:animated:]
  -[SBFolderPresentingViewController nestingViewController:sourceViewForPresentingViewController:]
  -[SBFolderPresentingViewController nestingViewController:interactionControllerForAnimationController:]
  -[SBFolderPresentingViewController minimumHomeScreenScaleForFolderControllerBackgroundView:]
  -[SBFolderPresentingViewController backgroundEffect]
  -[SBFolderPresentingViewController view]
  -[SBFolderPresentingViewController nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBFolderPresentingViewController setBackgroundEffect:]
  -[SBFolderPresentingViewController _canShowWhileLocked]
  -[SBFolderPresentingViewController loadView]


SBFolder : NSObject /usr/lib/libSystem.B.dylib <SBFolderObserver, SBTreeNode, SBIconIndexNode, SBIconIndexMutableListObserver, SBIconListModelObserver, SBIconListModelIconValidator, BSDescriptionProviding>
 @property  NSString *badge
 @property  NSString *uniqueIdentifier
 @property  NSString *displayName
 @property  NSString *defaultDisplayName
 @property  BOOL open
 @property  SBFolderIcon *icon
 @property  BOOL cancelable
 @property  SBFolder *parentFolder
 @property  SBFolder *rootFolder
 @property  Class listModelClass
 @property  NSArray *lists
 @property  unsigned long listCount
 @property  NSArray *visibleLists
 @property  unsigned long visibleListCount
 @property  unsigned long hiddenListCount
 @property  BOOL hasMultipleVisibleLists
 @property  BOOL hasMultipleVisibleNonTrailingEmptyLists
 @property  unsigned long maxListCount
 @property  {SBHIconGridSize=SS} listGridSize
 @property  {SBHIconGridSizeClassSizes={SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}} iconGridSizeClassSizes
 @property  unsigned long iconCount
 @property  unsigned long visibleIconCount
 @property  unsigned long visibleWidgetIconCount
 @property  BOOL empty
 @property  BOOL full
 @property  BOOL shouldRemoveWhenEmpty
 @property  BOOL canRemoveIcons
 @property  BOOL canEditDisplayName
 @property  BOOL hasHiddenLists
 @property  BOOL hasVisibleLists
 @property  unsigned long firstVisibleListIndex
 @property  unsigned long lastVisibleListIndex
 @property  SBIconListModel *firstList
 @property  SBIconListModel *lastList
 @property  SBIconListModel *mostRecentlyHiddenList
 @property  SBIconListModel *leastRecentlyHiddenList
 @property  unsigned long requiredTrailingEmptyListCount
 @property  unsigned long trailingEmptyListCount
 @property  NSArray *trailingEmptyLists
 @property  NSArray *icons
 @property  NSArray *iconsInLists
 @property  NSString *recursiveDescription
 @property  BOOL containsWidgetIcon
 @property  BOOL containsVisibleWidgetIcon
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *children
 @property  <SBTreeNode> *parent

  // class methods
  +[SBFolder isFolderNodeIdentifier:]
  +[SBFolder isRootFolderClass]

  // instance methods
  -[SBFolder rootFolder]
  -[SBFolder isFull]
  -[SBFolder iconsOfClass:]
  -[SBFolder indexPathForFirstFreeSlotAvoidingFirstList:]
  -[SBFolder parent]
  -[SBFolder canAddIconCount:startingAtList:]
  -[SBFolder containedNodeIdentifiers]
  -[SBFolder layoutDescription]
  -[SBFolder isRootFolder]
  -[SBFolder isCancelable]
  -[SBFolder validatedIndexPathForInsertionIndexPath:avoidingFirstList:]
  -[SBFolder addListWithIcons:]
  -[SBFolder maxListCount]
  -[SBFolder firstFolderWithDefaultDisplayName:]
  -[SBFolder nodesAlongIndexPath:consumedIndexes:]
  -[SBFolder placeIcon:atIndexPath:options:]
  -[SBFolder canAddIcon]
  -[SBFolder listCount]
  -[SBFolder indexOfList:]
  -[SBFolder removeLeastRecentlyHiddenList]
  -[SBFolder replaceIcon:withIcon:]
  -[SBFolder visibleWidgetIconCount]
  -[SBFolder trailingEmptyLists]
  -[SBFolder canAddIcon:]
  -[SBFolder _handleBumpedIcons:afterInsertingIconIntoListAtIndex:options:didBump:]
  -[SBFolder trailingVisibleEmptyListCount]
  -[SBFolder listsContainingLeafIconWithIdentifier:]
  -[SBFolder compactOverflowListsWithoutMovingIconsPassingTest:]
  -[SBFolder lastList]
  -[SBFolder indexPathsForIconsPassingTest:]
  -[SBFolder _compactsFirstList]
  -[SBFolder isTrailingEmptyList:]
  -[SBFolder _indexPathToRevealForJiggleMode]
  -[SBFolder markIconStateClean]
  -[SBFolder _informObserversOfAddedIcons:removedIcons:]
  -[SBFolder _compactContiguousOverflowListsStartingAtListIndex:withoutMovingIconsPassingTest:removeEmptyLists:]
  -[SBFolder iconList:willAddIcon:]
  -[SBFolder resolvedComponentsForIndexPath:]
  -[SBFolder defaultDisplayName]
  -[SBFolder markIconStateDirty]
  -[SBFolder visibleIconCount]
  -[SBFolder isTrailingEmptyListIndex:]
  -[SBFolder addIcon:]
  -[SBFolder isExtraList:]
  -[SBFolder recursiveDescription]
  -[SBFolder lastVisibleNonEmptyListIndex]
  -[SBFolder hiddenListCount]
  -[SBFolder visibleLists]
  -[SBFolder indexPathForIconWithIdentifier:]
  -[SBFolder removeListAtIndex:]
  -[SBFolder iconWithIdentifier:]
  -[SBFolder changeGridSizeClassOfIconAtIndexPath:toGridSizeClass:options:listGridCellInfoOptions:]
  -[SBFolder firstFolderWithDisplayName:]
  -[SBFolder removeListsAtIndexes:]
  -[SBFolder iconAtIndexPath:]
  -[SBFolder addFolderObserver:]
  -[SBFolder setParent:]
  -[SBFolder isVisibleListIndex:]
  -[SBFolder isAllowedToContainIcon:]
  -[SBFolder listWithGreatestHiddenDateMatchingOrdering:]
  -[SBFolder nextVisibleListIndexAfterIndex:]
  -[SBFolder objectWithUniqueIdentifier:]
  -[SBFolder indexesOfListsPassingTest:]
  -[SBFolder indexPathForIconWithOptions:passingTest:]
  -[SBFolder leafIcons]
  -[SBFolder removeList:]
  -[SBFolder _createNewListWithIcons:]
  -[SBFolder initWithDisplayName:maxListCount:listGridSize:]
  -[SBFolder containsWidgetIcon]
  -[SBFolder _addList:]
  -[SBFolder mostRecentlyHiddenList]
  -[SBFolder pruneEmptyFolders]
  -[SBFolder insertEmptyListAtIndex:]
  -[SBFolder allIcons]
  -[SBFolder indexPathForFolder:]
  -[SBFolder listWithIdentifier:]
  -[SBFolder resolvedComponentsForUniqueIdentifierPath:]
  -[SBFolder iconsPassingTest:]
  -[SBFolder enumerateListsUsingBlock:]
  -[SBFolder indexPathForIconWithIdentifier:includingPlaceholders:]
  -[SBFolder containsNodeIdentifier:]
  -[SBFolder enumerateListsWithOptions:usingBlock:]
  -[SBFolder containsVisibleWidgetIcon]
  -[SBFolder iconCountWithOptions:]
  -[SBFolder _informObserversOfToBeAddedIcon:]
  -[SBFolder listContainingIndexPath:relativeIndex:]
  -[SBFolder isAllowedToContainIcons:]
  -[SBFolder lastVisibleListIndex]
  -[SBFolder indexPathForFirstFreeSlotStartingAtList:avoidingFirstList:searchForwards:]
  -[SBFolder nodeDescriptionWithPrefix:]
  -[SBFolder stopCoalescingContentChangesForRequestID:]
  -[SBFolder iconListIconStateDidDirty:]
  -[SBFolder _createNewListWithIcon:]
  -[SBFolder addIconsOfClass:toSet:]
  -[SBFolder precedingVisibleListIndexBeforeIndex:]
  -[SBFolder addIconsPassingTest:toSet:]
  -[SBFolder shouldRemoveWhenEmpty]
  -[SBFolder indexPathForIcon:]
  -[SBFolder didAddFolder:]
  -[SBFolder trailingEmptyListCount]
  -[SBFolder iconGridSizeClassSizes]
  -[SBFolder list:didAddContainedNodeIdentifiers:]
  -[SBFolder init]
  -[SBFolder parentFolder]
  -[SBFolder listModelClass]
  -[SBFolder _isCoalescingContentChanges]
  -[SBFolder visibleListIndexes]
  -[SBFolder _compactLists]
  -[SBFolder _removeLists:]
  -[SBFolder addEmptyListRemovingLeastRecentlyHiddenListIfNecessary]
  -[SBFolder sort]
  -[SBFolder moveListAtIndex:toIndex:]
  -[SBFolder indexPathForNodeIdentifier:]
  -[SBFolder appendRecursiveDescriptionToString:prefixPath:]
  -[SBFolder removeFolderObserver:]
  -[SBFolder _didAddList:informObservers:]
  -[SBFolder _didExplicitlyRemoveHiddenLists:]
  -[SBFolder isLibraryCategoryFolder]
  -[SBFolder indexForVisibleIndex:]
  -[SBFolder hasVisibleLists]
  -[SBFolder enumerateAllIconsWithOptions:usingBlock:]
  -[SBFolder indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBFolder folder:willAddIcon:]
  -[SBFolder addNodeObserver:]
  -[SBFolder ensureTrailingEmptyLists]
  -[SBFolder folderIconStateDidDirty:]
  -[SBFolder list:didRemoveContainedNodeIdentifiers:]
  -[SBFolder nodeIdentifier]
  -[SBFolder canRemoveIcons]
  -[SBFolder indexPathForFirstFreeSlotStartingAtList:avoidingFirstList:]
  -[SBFolder iconCount]
  -[SBFolder addIcons:]
  -[SBFolder children]
  -[SBFolder iconListModel:isAllowedToContainIcon:]
  -[SBFolder addListWithIcon:]
  -[SBFolder _createNewList]
  -[SBFolder addListWithIcons:removingHiddenListsIfNecessary:]
  -[SBFolder containsIcon:]
  -[SBFolder addEmptyList]
  -[SBFolder firstVisibleListIndex]
  -[SBFolder isIconStateDirty]
  -[SBFolder lists]
  -[SBFolder _didRemoveList:atIndex:informObservers:]
  -[SBFolder initWithDisplayName:maxListCount:maxIconCountInLists:]
  -[SBFolder canBounceIcon:]
  -[SBFolder compactOverflowLists]
  -[SBFolder canAddIconCount:]
  -[SBFolder isValidListIndex:]
  -[SBFolder leastRecentlyHiddenList]
  -[SBFolder ancestryDidChange]
  -[SBFolder iconListHiddenDidChange:]
  -[SBFolder removeAllLists]
  -[SBFolder listDidMoveNodes:]
  -[SBFolder listsContainingIcon:]
  -[SBFolder iconsInLists]
  -[SBFolder removeIconAtIndexPath:options:]
  -[SBFolder hasHiddenLists]
  -[SBFolder removeNodeObserver:]
  -[SBFolder initWithUniqueIdentifier:displayName:maxListCount:listGridSize:iconGridSizeClassSizes:]
  -[SBFolder extraListContainsNodeIdentifier:]
  -[SBFolder _informObserversOfMovedIcon:]
  -[SBFolder enumerateAllIconsWithBaseIndexPath:options:usingBlock:]
  -[SBFolder indexPathForIcon:includingPlaceholders:]
  -[SBFolder requiredTrailingEmptyListCount]
  -[SBFolder setDefaultDisplayName:]
  -[SBFolder uniqueIdentifiersForIndexPath:]
  -[SBFolder setCancelable:]
  -[SBFolder setBadge:]
  -[SBFolder folder:didAddIcons:removedIcons:]
  -[SBFolder badge]
  -[SBFolder .cxx_destruct]
  -[SBFolder visibleIndexOfList:]
  -[SBFolder canAddIcons:startingAtList:]
  -[SBFolder compactLists]
  -[SBFolder icon]
  -[SBFolder didRemoveFolder:]
  -[SBFolder iconList:didReplaceIcon:withIcon:]
  -[SBFolder enumerateAllIconsUsingBlock:]
  -[SBFolder icons]
  -[SBFolder indexPathForLastFreeSlotAvoidingFirstList:]
  -[SBFolder succinctDescriptionBuilder]
  -[SBFolder folder:didReplaceIcon:withIcon:]
  -[SBFolder isOpen]
  -[SBFolder uniqueIdentifier]
  -[SBFolder setIcon:]
  -[SBFolder visibleIndexForIndex:]
  -[SBFolder placeIcon:atIndexPath:]
  -[SBFolder setRequiredTrailingEmptyListCount:]
  -[SBFolder insertIcon:atIndexPath:options:]
  -[SBFolder initWithDisplayName:maxListCount:listGridSize:iconGridSizeClassSizes:]
  -[SBFolder canEditDisplayName]
  -[SBFolder listGridSize]
  -[SBFolder setDisplayName:]
  -[SBFolder succinctDescription]
  -[SBFolder listAtIndex:]
  -[SBFolder hasMultipleVisibleLists]
  -[SBFolder indexPathForIconPassingTest:]
  -[SBFolder indexPathForLastFreeSlotStartingAtList:avoidingFirstList:]
  -[SBFolder stopCoalescingContentChangesForRequestID:forceReload:]
  -[SBFolder indexPathsForIcon:]
  -[SBFolder _insertList:atIndex:]
  -[SBFolder visibleListCount]
  -[SBFolder canAddIcons:]
  -[SBFolder enumerateExtraListsUsingBlock:]
  -[SBFolder _setLists:]
  -[SBFolder indexPathForList:]
  -[SBFolder iconList:didAddIcon:]
  -[SBFolder hiddenIndexOfList:]
  -[SBFolder listAtVisibleIndex:]
  -[SBFolder folderIcons]
  -[SBFolder isEmpty]
  -[SBFolder hasMultipleVisibleNonTrailingEmptyLists]
  -[SBFolder changeGridSizeClassOfIconAtIndexPath:toGridSizeClass:options:listGridCellInfo:]
  -[SBFolder nextVisibleListAfterIndex:]
  -[SBFolder removeHiddenLists]
  -[SBFolder iconList:didRemoveIcon:]
  -[SBFolder displayName]
  -[SBFolder setOpen:]
  -[SBFolder insertEmptyListRemovingLeastRecentlyHiddenListIfNecessaryAtIndex:]
  -[SBFolder firstList]
  -[SBFolder startCoalescingContentChangesWithRequestID:]
  -[SBFolder descriptionWithMultilinePrefix:]
  -[SBFolder removeIcon:options:]
  -[SBFolder descriptionBuilderWithMultilinePrefix:]
  -[SBFolder folderContainingIndexPath:relativeIndexPath:]
  -[SBFolder iconList:didMoveIcon:]


SBWidgetIcon : SBLeafIcon
 @property  SBHWidget *activeWidget
 @property  NSArray *widgets
 @property  <SBLeafIconDataSource> *lastUserSelectedDataSource
 @property  unsigned long stackChangeReason
 @property  unsigned long iconDataSourcesExcludingSuggestionsCount
 @property  BOOL allowsSuggestions
 @property  BOOL allowsExternalSuggestions

  // instance methods
  -[SBWidgetIcon copyWithZone:]
  -[SBWidgetIcon isWidgetIcon]
  -[SBWidgetIcon firstWidgetPassingTest:]
  -[SBWidgetIcon setStackChangeReason:]
  -[SBWidgetIcon initWithUniqueLeafIdentifier]
  -[SBWidgetIcon copyWithUniqueLeafIdentifier]
  -[SBWidgetIcon allowsExternalSuggestions]
  -[SBWidgetIcon setAllowsExternalSuggestions:]
  -[SBWidgetIcon setLastUserSelectedDataSource:]
  -[SBWidgetIcon .cxx_destruct]
  -[SBWidgetIcon canBeAddedToMultiItemDrag]
  -[SBWidgetIcon lastUserSelectedDataSource]
  -[SBWidgetIcon _fallbackBestDataSource]
  -[SBWidgetIcon didAddIconDataSource:]
  -[SBWidgetIcon didRemoveIconDataSource:]
  -[SBWidgetIcon _hasDataSourceThatIgnoresAllOtherDataSources]
  -[SBWidgetIcon initWithWidgets:]
  -[SBWidgetIcon supportsConfiguration]
  -[SBWidgetIcon stackChangeReason]
  -[SBWidgetIcon allowsSuggestions]
  -[SBWidgetIcon setAllowsSuggestions:]
  -[SBWidgetIcon widgets]
  -[SBWidgetIcon supportsStackConfiguration]
  -[SBWidgetIcon isWidgetStackIcon]
  -[SBWidgetIcon canBeReceivedByIcon]
  -[SBWidgetIcon canReceiveGrabbedIcon]
  -[SBWidgetIcon iconDataSourcesExcludingSuggestionsCount]
  -[SBWidgetIcon supportedGridSizeClasses]
  -[SBWidgetIcon initWithLeafIdentifier:applicationBundleID:]
  -[SBWidgetIcon isEqual:]
  -[SBWidgetIcon activeWidget]
  -[SBWidgetIcon initWithCHSAvocadoDescriptor:]
  -[SBWidgetIcon initWithCHSAvocadoDescriptors:]
  -[SBWidgetIcon setActiveWidget:]
  -[SBWidgetIcon descriptionBuilderWithMultilinePrefix:]
  -[SBWidgetIcon initWithWidget:]


SBHStackConfigurationWidgetTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  <SBLeafIconDataSource> *dataSource
 @property  CHSAvocadoDescriptor *descriptor
 @property  UIStackView *horizontalStackView
 @property  UIStackView *verticalStackView
 @property  UIImageView *iconImageView
 @property  UILabel *titleLabel
 @property  UILabel *descriptionLabel

  // instance methods
  -[SBHStackConfigurationWidgetTableViewCell iconImageView]
  -[SBHStackConfigurationWidgetTableViewCell initWithStyle:reuseIdentifier:]
  -[SBHStackConfigurationWidgetTableViewCell didMoveToWindow]
  -[SBHStackConfigurationWidgetTableViewCell setDescriptor:]
  -[SBHStackConfigurationWidgetTableViewCell setTitleLabel:]
  -[SBHStackConfigurationWidgetTableViewCell setDataSource:]
  -[SBHStackConfigurationWidgetTableViewCell titleLabel]
  -[SBHStackConfigurationWidgetTableViewCell setIconImageView:]
  -[SBHStackConfigurationWidgetTableViewCell .cxx_destruct]
  -[SBHStackConfigurationWidgetTableViewCell horizontalStackView]
  -[SBHStackConfigurationWidgetTableViewCell setHorizontalStackView:]
  -[SBHStackConfigurationWidgetTableViewCell setVerticalStackView:]
  -[SBHStackConfigurationWidgetTableViewCell configureWithDataSource:icon:descriptor:]
  -[SBHStackConfigurationWidgetTableViewCell descriptor]
  -[SBHStackConfigurationWidgetTableViewCell _iconImageInfo]
  -[SBHStackConfigurationWidgetTableViewCell verticalStackView]
  -[SBHStackConfigurationWidgetTableViewCell dataSource]
  -[SBHStackConfigurationWidgetTableViewCell descriptionLabel]
  -[SBHStackConfigurationWidgetTableViewCell setDescriptionLabel:]


SBHAppPredictionWrapperViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBHMultiplexingViewControllerObserver, SBIconViewCustomImageViewControlling>
 @property  NSString *location
 @property  UIView *containerView
 @property  UIView *backgroundView
 @property  unsigned long backgroundAnimationCount
 @property  UIViewController *multiplexingViewController
 @property  APUIAppPredictionViewController *appPredictionViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  BOOL editing
 @property  SBIcon *icon
 @property  <SBLeafIconDataSource> *visiblyActiveDataSource
 @property  BOOL showingContextMenu
 @property  BOOL overlapping
 @property  BOOL dropping
 @property  BOOL userInteractionEnabled
 @property  BOOL backgroundBlurEnabled
 @property  BOOL wantsCaptureOnlyBackgroundView
 @property  @? backgroundViewProvider
 @property  double brightness
 @property  BOOL wantsLabelHidden
 @property  BOOL visiblySettled
 @property  BOOL automaticallyUpdatesVisiblySettled
 @property  BOOL privateModeEnabled
 @property  unsigned long presentationMode
 @property  unsigned long imageViewAlignment
 @property  unsigned long pauseReasons
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *applicationShortcutItems
 @property  UIView *snapshotView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds
 @property  double continuousCornerRadius
 @property  BOOL showsSquareCorners

  // instance methods
  -[SBHAppPredictionWrapperViewController setUserInteractionEnabled:]
  -[SBHAppPredictionWrapperViewController visibleBounds]
  -[SBHAppPredictionWrapperViewController setIconImageInfo:]
  -[SBHAppPredictionWrapperViewController setShowsSquareCorners:]
  -[SBHAppPredictionWrapperViewController applicationShortcutItems]
  -[SBHAppPredictionWrapperViewController continuousCornerRadius]
  -[SBHAppPredictionWrapperViewController backgroundView]
  -[SBHAppPredictionWrapperViewController setBackgroundView:]
  -[SBHAppPredictionWrapperViewController isShowingContextMenu]
  -[SBHAppPredictionWrapperViewController isOverlapping]
  -[SBHAppPredictionWrapperViewController showsSquareCorners]
  -[SBHAppPredictionWrapperViewController isUserInteractionEnabled]
  -[SBHAppPredictionWrapperViewController legibilitySettings]
  -[SBHAppPredictionWrapperViewController iconImageInfo]
  -[SBHAppPredictionWrapperViewController setOverlapping:]
  -[SBHAppPredictionWrapperViewController sourceView]
  -[SBHAppPredictionWrapperViewController initWithIcon:location:multiplexingViewController:appPredictionViewController:]
  -[SBHAppPredictionWrapperViewController setEditing:]
  -[SBHAppPredictionWrapperViewController setContainerView:]
  -[SBHAppPredictionWrapperViewController multiplexingViewController]
  -[SBHAppPredictionWrapperViewController .cxx_destruct]
  -[SBHAppPredictionWrapperViewController icon]
  -[SBHAppPredictionWrapperViewController setLocation:]
  -[SBHAppPredictionWrapperViewController expectedAppPredictionViewControllerMode]
  -[SBHAppPredictionWrapperViewController _updateAppPredictionViewControllerModeAnimated:]
  -[SBHAppPredictionWrapperViewController _setBackgroundViewWeighting:]
  -[SBHAppPredictionWrapperViewController multiplexingViewControllerDidActivate:]
  -[SBHAppPredictionWrapperViewController appPredictionViewController]
  -[SBHAppPredictionWrapperViewController setLegibilitySettings:]
  -[SBHAppPredictionWrapperViewController viewWillLayoutSubviews]
  -[SBHAppPredictionWrapperViewController setPauseReasons:]
  -[SBHAppPredictionWrapperViewController wantsLabelHidden]
  -[SBHAppPredictionWrapperViewController setBackgroundBlurEnabled:]
  -[SBHAppPredictionWrapperViewController backgroundViewProvider]
  -[SBHAppPredictionWrapperViewController willShowContextMenuAtLocation:]
  -[SBHAppPredictionWrapperViewController setShowingContextMenu:]
  -[SBHAppPredictionWrapperViewController removeCustomImageViewControllerObserver:]
  -[SBHAppPredictionWrapperViewController setBackgroundViewProvider:]
  -[SBHAppPredictionWrapperViewController addCustomImageViewControllerObserver:]
  -[SBHAppPredictionWrapperViewController imageViewAlignment]
  -[SBHAppPredictionWrapperViewController setImageViewAlignment:]
  -[SBHAppPredictionWrapperViewController containerView]
  -[SBHAppPredictionWrapperViewController isEditing]
  -[SBHAppPredictionWrapperViewController location]
  -[SBHAppPredictionWrapperViewController viewWillAppear:]
  -[SBHAppPredictionWrapperViewController _canShowWhileLocked]
  -[SBHAppPredictionWrapperViewController setEditing:animated:]
  -[SBHAppPredictionWrapperViewController _widgetContextMenuController]
  -[SBHAppPredictionWrapperViewController _updateWidgetViewHitTesting]
  -[SBHAppPredictionWrapperViewController didSelectApplicationShortcutItem:]
  -[SBHAppPredictionWrapperViewController loadView]
  -[SBHAppPredictionWrapperViewController isBackgroundBlurEnabled]
  -[SBHAppPredictionWrapperViewController pauseReasons]
  -[SBHAppPredictionWrapperViewController backgroundAnimationCount]
  -[SBHAppPredictionWrapperViewController setBackgroundAnimationCount:]


SBHIconSettings : PTSettings /System/Library/PrivateFrameworks/CoreMaterial.framework/CoreMaterial
 @property  BOOL suppressJitter
 @property  BOOL alwaysHitTestNearestIcon
 @property  double iconHitboxPaddingX
 @property  double iconHitboxPaddingY
 @property  SBFParallaxSettings *iconParallaxSettings
 @property  SBFParallaxSettings *badgeParallaxSettings

  // class methods
  +[SBHIconSettings settingsControllerModule]

  // instance methods
  -[SBHIconSettings setDefaultValues]
  -[SBHIconSettings badgeParallaxSettings]
  -[SBHIconSettings iconParallaxSettings]
  -[SBHIconSettings setBadgeParallaxSettings:]
  -[SBHIconSettings .cxx_destruct]
  -[SBHIconSettings setIconHitboxPaddingY:]
  -[SBHIconSettings setIconHitboxPaddingX:]
  -[SBHIconSettings setIconParallaxSettings:]
  -[SBHIconSettings setAlwaysHitTestNearestIcon:]
  -[SBHIconSettings suppressJitter]
  -[SBHIconSettings alwaysHitTestNearestIcon]
  -[SBHIconSettings iconHitboxPaddingX]
  -[SBHIconSettings iconHitboxPaddingY]
  -[SBHIconSettings setSuppressJitter:]


SBIconListViewIconSizeChangeAnimator : SBIconListViewClusterAnimator <SBIconListLayoutAnimating>
 @property  SBHIconEditingSettings *iconEditingSettings
 @property  UIView *snapshotContainerView
 @property  SBIconView *iconView
 @property  UIView *priorIconImageSnapshotView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewIconSizeChangeAnimator iconView]
  -[SBIconListViewIconSizeChangeAnimator iconEditingSettings]
  -[SBIconListViewIconSizeChangeAnimator initWithIconView:priorIconImageSnapshotView:]
  -[SBIconListViewIconSizeChangeAnimator prepareAnimationForListView:]
  -[SBIconListViewIconSizeChangeAnimator .cxx_destruct]
  -[SBIconListViewIconSizeChangeAnimator setSnapshotContainerView:]
  -[SBIconListViewIconSizeChangeAnimator priorIconImageSnapshotView]
  -[SBIconListViewIconSizeChangeAnimator snapshotContainerView]
  -[SBIconListViewIconSizeChangeAnimator iconListView:wantsAnimatedLayoutForIconView:withParameters:alongsideAnimationBlock:]


SBHLibraryPodCategoryIcon : SBLeafIcon <SBHLibraryCategoryObserver>
 @property  SBHLibraryCategory *category
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibraryPodCategoryIcon category]
  -[SBHLibraryPodCategoryIcon labelAccessoryType]
  -[SBHLibraryPodCategoryIcon .cxx_destruct]
  -[SBHLibraryPodCategoryIcon isCategoryIcon]
  -[SBHLibraryPodCategoryIcon initWithCategory:]
  -[SBHLibraryPodCategoryIcon categoryDidUpdate:]


SBHLibraryPodIconZoomAnimator : SBIconZoomAnimator <SBHLibraryViewControllerObserver>
 @property  <SBHLibraryPodIconZoomAnimationContaining> *animationContainer
 @property  SBHLibraryPodZoomSettings *settings
 @property  SBFolderIcon *targetIcon
 @property  SBIconView *targetIconView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibraryPodIconZoomAnimator libraryViewController:willPresentSearchController:]
  -[SBHLibraryPodIconZoomAnimator targetIcon]
  -[SBHLibraryPodIconZoomAnimator dealloc]
  -[SBHLibraryPodIconZoomAnimator _numberOfSignificantAnimations]
  -[SBHLibraryPodIconZoomAnimator referenceIconView]
  -[SBHLibraryPodIconZoomAnimator .cxx_destruct]
  -[SBHLibraryPodIconZoomAnimator _handleIconViewClippedNotification:]
  -[SBHLibraryPodIconZoomAnimator _setupFolderAndLibraryScalingViews]
  -[SBHLibraryPodIconZoomAnimator _captureVisibleAndMiniPodIconViews]
  -[SBHLibraryPodIconZoomAnimator _prepareToCrossfadeMiniPodIconViews]
  -[SBHLibraryPodIconZoomAnimator _updateIconCrossfadeForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _updateFolderNavigationBarAlphaForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _updateLibraryAlphaForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _updateFolderViewFramesForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _updateLibraryScaleForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _updateSearchBarForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _updateSearchBarAlphaForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _animateIconViewTransformsAndAlphaForZoomFraction:withAnimationSettings:delay:completion:]
  -[SBHLibraryPodIconZoomAnimator _returnFolderAndLibraryScalingViews]
  -[SBHLibraryPodIconZoomAnimator _cleanupMiniPodIconViewsAfterCrossfade]
  -[SBHLibraryPodIconZoomAnimator _removeMatchMoveAnimation]
  -[SBHLibraryPodIconZoomAnimator _scaleForZoomFraction:]
  -[SBHLibraryPodIconZoomAnimator _centerOfMiniPodIconViews]
  -[SBHLibraryPodIconZoomAnimator _cancelAnimationForIconViewClippedOrObscured]
  -[SBHLibraryPodIconZoomAnimator initWithAnimationContainer:innerFolderController:folderIcon:searchBar:libraryViewController:]
  -[SBHLibraryPodIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBHLibraryPodIconZoomAnimator _setupMatchMoveAnimation]
  -[SBHLibraryPodIconZoomAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[SBHLibraryPodIconZoomAnimator targetIconView]
  -[SBHLibraryPodIconZoomAnimator _prepareAnimation]
  -[SBHLibraryPodIconZoomAnimator _cleanupAnimation]
  -[SBHLibraryPodIconZoomAnimator cleanup]
  -[SBHLibraryPodIconZoomAnimator _setAnimationFraction:]


SBHLibraryPodFadeAnimator : SBIconAnimator
 @property  SBHLibraryPodZoomSettings *settings

  // instance methods
  -[SBHLibraryPodFadeAnimator _numberOfSignificantAnimations]
  -[SBHLibraryPodFadeAnimator .cxx_destruct]
  -[SBHLibraryPodFadeAnimator initWithAnimationContainer:innerFolderController:folderIcon:searchBar:]
  -[SBHLibraryPodFadeAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[SBHLibraryPodFadeAnimator _prepareAnimation]
  -[SBHLibraryPodFadeAnimator _applyAlphaForFraction:]
  -[SBHLibraryPodFadeAnimator cleanup]
  -[SBHLibraryPodFadeAnimator _setAnimationFraction:]


SBIconImageView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconObserver, SBIconProgressViewDelegate, SBHIconImageCacheObserver, SBReusableView, SBCrossfadingIconImageSource, BSDescriptionProviding>
 @property  NSString *location
 @property  double overlayAlpha
 @property  SBIcon *icon
 @property  SBIconView *iconView
 @property  SBHIconImageCache *iconImageCache
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  double brightness
 @property  UIImage *displayedImage
 @property  BOOL paused
 @property  BOOL showsSquareCorners
 @property  BOOL jittering
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds
 @property  double continuousCornerRadius

  // instance methods
  -[SBIconImageView visibleBounds]
  -[SBIconImageView setOverlayAlpha:]
  -[SBIconImageView setIconImageInfo:]
  -[SBIconImageView setShowsSquareCorners:]
  -[SBIconImageView iconImageCache:didUpdateImageForIcon:]
  -[SBIconImageView setIconView:]
  -[SBIconImageView _updateProgressMask]
  -[SBIconImageView setProgressState:paused:percent:animated:]
  -[SBIconImageView displayedImage]
  -[SBIconImageView _generateSquareContentsImage]
  -[SBIconImageView setIcon:location:animated:]
  -[SBIconImageView brightness]
  -[SBIconImageView overlayAlpha]
  -[SBIconImageView continuousCornerRadius]
  -[SBIconImageView progressViewCanBeRemoved:]
  -[SBIconImageView _clearProgressView]
  -[SBIconImageView isJittering]
  -[SBIconImageView iconView]
  -[SBIconImageView squareContentsImage]
  -[SBIconImageView iconViewLegibilitySettingsDidChange]
  -[SBIconImageView _shouldAnimatePropertyWithKey:]
  -[SBIconImageView showsSquareCorners]
  -[SBIconImageView iconViewFolderIconImageCacheDidChange]
  -[SBIconImageView iconImageInfo]
  -[SBIconImageView setIconImageCache:]
  -[SBIconImageView iconImageDidUpdate:]
  -[SBIconImageView initWithFrame:]
  -[SBIconImageView sourceView]
  -[SBIconImageView updateImageAnimated:]
  -[SBIconImageView dealloc]
  -[SBIconImageView clearCachedImages]
  -[SBIconImageView iconImageCache]
  -[SBIconImageView .cxx_destruct]
  -[SBIconImageView contentsImage]
  -[SBIconImageView icon]
  -[SBIconImageView succinctDescriptionBuilder]
  -[SBIconImageView prepareForReuse]
  -[SBIconImageView intrinsicContentSize]
  -[SBIconImageView setLocation:]
  -[SBIconImageView snapshot]
  -[SBIconImageView setProgressAlpha:]
  -[SBIconImageView setJittering:]
  -[SBIconImageView setPaused:]
  -[SBIconImageView succinctDescription]
  -[SBIconImageView sizeThatFits:]
  -[SBIconImageView isPaused]
  -[SBIconImageView location]
  -[SBIconImageView setBrightness:]
  -[SBIconImageView descriptionWithMultilinePrefix:]
  -[SBIconImageView layoutSubviews]
  -[SBIconImageView descriptionBuilderWithMultilinePrefix:]
  -[SBIconImageView _updateOverlayAlpha]


SBHRootSidebarController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <UIGestureRecognizerDelegate, SBHSidebarProvider>
 @property  SBHDateHeaderViewController *dateViewController
 @property  NSMutableArray *widgetViewControllerConstraints
 @property  NSLayoutConstraint *dockHeightConstraint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WGWidgetGroupViewController *widgetViewController
 @property  SBHSidebarVisualConfiguration *sidebarVisualConfiguration
 @property  unsigned long layoutInsetsIgnoredEdges
 @property  <SBHSidebarProviderDelegate> *delegate
 @property  UIViewController *avocadoViewController
 @property  _UILegibilitySettings *legibilitySettings

  // instance methods
  -[SBHRootSidebarController viewDidLoad]
  -[SBHRootSidebarController setEditingIcons:]
  -[SBHRootSidebarController legibilitySettings]
  -[SBHRootSidebarController .cxx_destruct]
  -[SBHRootSidebarController dateViewController]
  -[SBHRootSidebarController _configureAvocadoViewController]
  -[SBHRootSidebarController _updateDockHeightConstraint]
  -[SBHRootSidebarController widgetViewControllerConstraints]
  -[SBHRootSidebarController _configureWidgetViewController]
  -[SBHRootSidebarController _configureLayoutMargins]
  -[SBHRootSidebarController _addEditButtonForWidgetGroupViewController:]
  -[SBHRootSidebarController _setupConstraintsForViewController:]
  -[SBHRootSidebarController layoutInsetsIgnoredEdges]
  -[SBHRootSidebarController setWidgetViewController:]
  -[SBHRootSidebarController setLayoutInsetsIgnoredEdges:]
  -[SBHRootSidebarController setAvocadoViewController:]
  -[SBHRootSidebarController setWidgetViewControllerConstraints:]
  -[SBHRootSidebarController dockHeightConstraint]
  -[SBHRootSidebarController setDockHeightConstraint:]
  -[SBHRootSidebarController setSidebarVisualConfiguration:]
  -[SBHRootSidebarController setLegibilitySettings:]
  -[SBHRootSidebarController sidebarVisualConfiguration]
  -[SBHRootSidebarController viewDidAppear:]
  -[SBHRootSidebarController viewWillAppear:]
  -[SBHRootSidebarController _canShowWhileLocked]
  -[SBHRootSidebarController setDelegate:]
  -[SBHRootSidebarController viewDidDisappear:]
  -[SBHRootSidebarController avocadoViewController]
  -[SBHRootSidebarController viewWillDisappear:]
  -[SBHRootSidebarController delegate]
  -[SBHRootSidebarController widgetViewController]


SBHDateHeaderViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBDateTimeOverrideObserver, SBHLegibility>
 @property  SBUILegibilityLabel *timeLabel
 @property  UIView *timeContainer
 @property  SBUILegibilityLabel *dateLabel
 @property  SBFDateTimeController *dateTimeController
 @property  NSLayoutConstraint *timeLeadingConstraint
 @property  <SBFDateProviding> *dateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UILegibilitySettings *legibilitySettings

  // class methods
  +[SBHDateHeaderViewController dateFont]
  +[SBHDateHeaderViewController timeFont]
  +[SBHDateHeaderViewController _topMarginFromTimeFont]
  +[SBHDateHeaderViewController dateFontMetrics]
  +[SBHDateHeaderViewController timeFontMetrics]

  // instance methods
  -[SBHDateHeaderViewController controller:didChangeOverrideDateFromDate:]
  -[SBHDateHeaderViewController _stopUpdateTimer]
  -[SBHDateHeaderViewController dateProvider]
  -[SBHDateHeaderViewController legibilitySettings]
  -[SBHDateHeaderViewController timeLabel]
  -[SBHDateHeaderViewController dealloc]
  -[SBHDateHeaderViewController _updateFormat]
  -[SBHDateHeaderViewController _updateLabels]
  -[SBHDateHeaderViewController dateLabel]
  -[SBHDateHeaderViewController .cxx_destruct]
  -[SBHDateHeaderViewController enableUpdates]
  -[SBHDateHeaderViewController _updateTimeLeadingConstraint]
  -[SBHDateHeaderViewController setLegibilitySettings:]
  -[SBHDateHeaderViewController timeContainer]
  -[SBHDateHeaderViewController dateTimeController]
  -[SBHDateHeaderViewController timeLeadingConstraint]
  -[SBHDateHeaderViewController disableUpdates]
  -[SBHDateHeaderViewController _handleTimeZoneChange]
  -[SBHDateHeaderViewController initWithNibName:bundle:]
  -[SBHDateHeaderViewController traitCollectionDidChange:]
  -[SBHDateHeaderViewController _timeLabelInsetsForTimeString:]
  -[SBHDateHeaderViewController setDateProvider:]
  -[SBHDateHeaderViewController viewWillAppear:]
  -[SBHDateHeaderViewController viewDidDisappear:]
  -[SBHDateHeaderViewController loadView]
  -[SBHDateHeaderViewController _startUpdateTimer]
  -[SBHDateHeaderViewController _cachedGlyphInsetsTimeFontForString:]


SBIconListGridLayoutConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  unsigned long numberOfPortraitColumns
 @property  unsigned long numberOfPortraitRows
 @property  unsigned long numberOfLandscapeColumns
 @property  unsigned long numberOfLandscapeRows
 @property  {SBHIconGridSizeClassSizes={SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}} iconGridSizeClassSizes
 @property  unsigned long supportedIconGridSizeClasses
 @property  {UIEdgeInsets=dddd} portraitLayoutInsets
 @property  {UIEdgeInsets=dddd} landscapeLayoutInsets
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  {CGSize=dd} listSizeForIconSpacingCalculation
 @property  SBHIconAccessoryVisualConfiguration *iconAccessoryVisualConfiguration
 @property  SBHFolderIconVisualConfiguration *folderIconVisualConfiguration
 @property  SBHFloatyFolderVisualConfiguration *floatyFolderVisualConfiguration
 @property  SBHAppLibraryVisualConfiguration *appLibraryVisualConfiguration
 @property  SBHSidebarVisualConfiguration *sidebarVisualConfiguration
 @property  SBHRootFolderVisualConfiguration *rootFolderVisualConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListGridLayoutConfiguration setIconImageInfo:]
  -[SBIconListGridLayoutConfiguration copyWithZone:]
  -[SBIconListGridLayoutConfiguration iconImageInfoForGridSizeClass:]
  -[SBIconListGridLayoutConfiguration iconLabelVisualConfigurationForContentSizeCategory:]
  -[SBIconListGridLayoutConfiguration numberOfPortraitColumns]
  -[SBIconListGridLayoutConfiguration iconGridSizeClassSizes]
  -[SBIconListGridLayoutConfiguration init]
  -[SBIconListGridLayoutConfiguration supportedIconGridSizeClasses]
  -[SBIconListGridLayoutConfiguration iconImageInfo]
  -[SBIconListGridLayoutConfiguration setNumberOfPortraitRows:]
  -[SBIconListGridLayoutConfiguration numberOfPortraitRows]
  -[SBIconListGridLayoutConfiguration iconAccessoryVisualConfiguration]
  -[SBIconListGridLayoutConfiguration rootFolderVisualConfiguration]
  -[SBIconListGridLayoutConfiguration .cxx_destruct]
  -[SBIconListGridLayoutConfiguration setPortraitLayoutInsets:]
  -[SBIconListGridLayoutConfiguration succinctDescriptionBuilder]
  -[SBIconListGridLayoutConfiguration numberOfLandscapeColumns]
  -[SBIconListGridLayoutConfiguration setSidebarVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration folderIconVisualConfiguration]
  -[SBIconListGridLayoutConfiguration setNumberOfLandscapeColumns:]
  -[SBIconListGridLayoutConfiguration setIconLabelVisualConfiguration:forContentSizeCategory:]
  -[SBIconListGridLayoutConfiguration setSupportedIconGridSizeClasses:]
  -[SBIconListGridLayoutConfiguration setIconAccessoryVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration sidebarVisualConfiguration]
  -[SBIconListGridLayoutConfiguration listSizeForIconSpacingCalculation]
  -[SBIconListGridLayoutConfiguration succinctDescription]
  -[SBIconListGridLayoutConfiguration setListSizeForIconSpacingCalculation:]
  -[SBIconListGridLayoutConfiguration setIconImageInfo:forGridSizeClass:]
  -[SBIconListGridLayoutConfiguration setFolderIconVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration portraitLayoutInsets]
  -[SBIconListGridLayoutConfiguration isEqual:]
  -[SBIconListGridLayoutConfiguration setAppLibraryVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration numberOfLandscapeRows]
  -[SBIconListGridLayoutConfiguration appLibraryVisualConfiguration]
  -[SBIconListGridLayoutConfiguration floatyFolderVisualConfiguration]
  -[SBIconListGridLayoutConfiguration setFloatyFolderVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration landscapeLayoutInsets]
  -[SBIconListGridLayoutConfiguration setNumberOfPortraitColumns:]
  -[SBIconListGridLayoutConfiguration descriptionWithMultilinePrefix:]
  -[SBIconListGridLayoutConfiguration setLandscapeLayoutInsets:]
  -[SBIconListGridLayoutConfiguration setNumberOfLandscapeRows:]
  -[SBIconListGridLayoutConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBIconListGridLayoutConfiguration setIconGridSizeClassSizes:]


SBHLibraryCategoriesFolderDataSource : NSObject /usr/lib/libSystem.B.dylib <SBIconObserver>
 @property  SBHLibraryCategoriesRootFolder *categoriesFolder
 @property  SBHIconModel *iconModel
 @property  <SBHLibraryCategoriesFolderDataSourceDelegate> *delegate
 @property  NSArray *categoryIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHLibraryCategoriesFolderDataSource reloadData]
  -[SBHLibraryCategoriesFolderDataSource init]
  -[SBHLibraryCategoriesFolderDataSource iconAccessoriesDidUpdate:]
  -[SBHLibraryCategoriesFolderDataSource containsIcon:]
  -[SBHLibraryCategoriesFolderDataSource .cxx_destruct]
  -[SBHLibraryCategoriesFolderDataSource _noteDidAddIcon:]
  -[SBHLibraryCategoriesFolderDataSource _noteDidReplaceIcon:]
  -[SBHLibraryCategoriesFolderDataSource _noteWillRemoveIcon:]
  -[SBHLibraryCategoriesFolderDataSource _noteDidReloadIcons:]
  -[SBHLibraryCategoriesFolderDataSource _noteIconVisibilityDidChange:]
  -[SBHLibraryCategoriesFolderDataSource _noteWillLayoutIconState:]
  -[SBHLibraryCategoriesFolderDataSource reloadDataSourceUsingIcons:categoryMap:]
  -[SBHLibraryCategoriesFolderDataSource _regenerateCategoriesFolder]
  -[SBHLibraryCategoriesFolderDataSource categoryIdentifiers]
  -[SBHLibraryCategoriesFolderDataSource isEqual:]
  -[SBHLibraryCategoriesFolderDataSource categoriesFolder]
  -[SBHLibraryCategoriesFolderDataSource initWithCategoriesFolder:]
  -[SBHLibraryCategoriesFolderDataSource iconModel]
  -[SBHLibraryCategoriesFolderDataSource categoryForIdentifier:]
  -[SBHLibraryCategoriesFolderDataSource reloadDataWithCategoryMap:]
  -[SBHLibraryCategoriesFolderDataSource setDelegate:]
  -[SBHLibraryCategoriesFolderDataSource isEqualToDataSource:]
  -[SBHLibraryCategoriesFolderDataSource delegate]


SBRootFolderWithDock : SBRootFolder <SBIconIndexNodeObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBRootFolderWithDock supportsDock]
  -[SBRootFolderWithDock _setIgnoredList:]
  -[SBRootFolderWithDock dock]
  -[SBRootFolderWithDock _setTodayList:]
  -[SBRootFolderWithDock ignoredList]
  -[SBRootFolderWithDock todayList]
  -[SBRootFolderWithDock supportsIgnoredList]
  -[SBRootFolderWithDock supportsTodayList]
  -[SBRootFolderWithDock initWithUniqueIdentifier:displayName:maxListCount:listGridSize:iconGridSizeClassSizes:]
  -[SBRootFolderWithDock _setFavoriteTodayList:]
  -[SBRootFolderWithDock .cxx_destruct]
  -[SBRootFolderWithDock favoriteTodayList]
  -[SBRootFolderWithDock node:didRemoveContainedNodeIdentifiers:]
  -[SBRootFolderWithDock _setDock:]
  -[SBRootFolderWithDock nodeDidMoveContainedNodes:]
  -[SBRootFolderWithDock node:didAddContainedNodeIdentifiers:]
  -[SBRootFolderWithDock _notifyIndexChange:identifiers:withValidationBlock:]


SBHHomePullToSearchSettings : PTSettings /System/Library/PrivateFrameworks/CoreMaterial.framework/CoreMaterial
 @property  double pullTransitionDistance
 @property  double pullTransitionActivationThreshold
 @property  double pullGestureBeganFromTopLeeway
 @property  double fluidBehaviorDampingRatio
 @property  double fluidBehaviorResponse

  // class methods
  +[SBHHomePullToSearchSettings settingsControllerModule]

  // instance methods
  -[SBHHomePullToSearchSettings setDefaultValues]
  -[SBHHomePullToSearchSettings setPullTransitionDistance:]
  -[SBHHomePullToSearchSettings setPullTransitionActivationThreshold:]
  -[SBHHomePullToSearchSettings setPullGestureBeganFromTopLeeway:]
  -[SBHHomePullToSearchSettings setFluidBehaviorDampingRatio:]
  -[SBHHomePullToSearchSettings setFluidBehaviorResponse:]
  -[SBHHomePullToSearchSettings pullTransitionDistance]
  -[SBHHomePullToSearchSettings pullGestureBeganFromTopLeeway]
  -[SBHHomePullToSearchSettings pullTransitionActivationThreshold]
  -[SBHHomePullToSearchSettings fluidBehaviorDampingRatio]
  -[SBHHomePullToSearchSettings fluidBehaviorResponse]


SBDarkeningImageView : UIImageView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  double brightness

  // instance methods
  -[SBDarkeningImageView brightness]
  -[SBDarkeningImageView initWithFrame:]
  -[SBDarkeningImageView .cxx_destruct]
  -[SBDarkeningImageView setBrightness:]


SBLeafIcon : SBIcon <NSCopying>
 @property  NSString *sbh_iconLibraryItemIdentifier
 @property  <SBLeafIconDataSource> *bestDataSource
 @property  <SBLeafIconDataSource> *fallbackBestDataSource
 @property  NSString *applicationBundleID
 @property  <SBLeafIconDataSource> *activeDataSource
 @property  NSArray *iconDataSources
 @property  <SBLeafIconDataSource> *firstIconDataSource
 @property  <SBLeafIconDataSource> *lastIconDataSource
 @property  unsigned long iconDataSourceCount

  // class methods
  +[SBLeafIcon iconImageForDataSource:ofIcon:info:]
  +[SBLeafIcon formattedBadgeNumberOrString:]
  +[SBLeafIcon downloadingIconClass]

  // instance methods
  -[SBLeafIcon copyWithZone:]
  -[SBLeafIcon generateIconImageWithInfo:]
  -[SBLeafIcon isTimedOut]
  -[SBLeafIcon init]
  -[SBLeafIcon progressState]
  -[SBLeafIcon firstIconDataSource]
  -[SBLeafIcon hasIconDataSource:]
  -[SBLeafIcon nodeIdentifier]
  -[SBLeafIcon setUninstalled]
  -[SBLeafIcon completeUninstall]
  -[SBLeafIcon labelAccessoryType]
  -[SBLeafIcon insertIconDataSource:beforeIconDataSource:]
  -[SBLeafIcon insertIconDataSources:atIndexes:]
  -[SBLeafIcon replaceIconDataSource:withIconDataSource:]
  -[SBLeafIcon genericIconImageWithInfo:]
  -[SBLeafIcon dealloc]
  -[SBLeafIcon _noteActiveDataSourceDidChangeAndReloadIcon:]
  -[SBLeafIcon .cxx_destruct]
  -[SBLeafIcon isLeafIcon]
  -[SBLeafIcon sbh_iconLibraryItemIdentifier]
  -[SBLeafIcon leafIdentifier]
  -[SBLeafIcon activeDataSource]
  -[SBLeafIcon addIconDataSources:]
  -[SBLeafIcon firstIconDataSourcePassingTest:]
  -[SBLeafIcon iconDataSourcesOfClass:]
  -[SBLeafIcon _fallbackBestDataSource]
  -[SBLeafIcon didAddIconDataSource:]
  -[SBLeafIcon didRemoveIconDataSource:]
  -[SBLeafIcon copyWithLeafIdentifier:]
  -[SBLeafIcon displayNameForLocation:]
  -[SBLeafIcon _bestDataSource]
  -[SBLeafIcon _updateActiveDataSource]
  -[SBLeafIcon _noteActiveDataSourceDidChangeNotification:]
  -[SBLeafIcon didChangeActiveDataSource:]
  -[SBLeafIcon _noteActiveDataSourceDidGenerateImageNotification:]
  -[SBLeafIcon _noteDataSourceDidInvalidateNotification:]
  -[SBLeafIcon canTruncateLabel]
  -[SBLeafIcon canTightenLabel]
  -[SBLeafIcon lastIconDataSource]
  -[SBLeafIcon accessoryTextForLocation:]
  -[SBLeafIcon performCoalescedDataSourceUpdate:]
  -[SBLeafIcon selectNextActiveDataSource]
  -[SBLeafIcon removeIconDataSourcesOfClass:]
  -[SBLeafIcon firstIconDataSourceOfClass:]
  -[SBLeafIcon firstIconDataSourceWithUniqueIdentifier:]
  -[SBLeafIcon iconDataSources]
  -[SBLeafIcon setActiveDataSource:]
  -[SBLeafIcon isLaunchEnabled]
  -[SBLeafIcon isLaunchDisabledForObscuredReason]
  -[SBLeafIcon displayNameForObscuredDisabledLaunchForLocation:]
  -[SBLeafIcon accessoryTypeForLocation:]
  -[SBLeafIcon supportedGridSizeClasses]
  -[SBLeafIcon launchFromLocation:context:]
  -[SBLeafIcon isProgressPaused]
  -[SBLeafIcon initWithLeafIdentifier:applicationBundleID:]
  -[SBLeafIcon removeIconDataSource:]
  -[SBLeafIcon addIconDataSource:]
  -[SBLeafIcon isEqual:]
  -[SBLeafIcon unmaskedIconImageWithInfo:]
  -[SBLeafIcon supportsRasterization]
  -[SBLeafIcon removeObserver:]
  -[SBLeafIcon progressPercent]
  -[SBLeafIcon isUninstallSupported]
  -[SBLeafIcon addObserver:]
  -[SBLeafIcon hasObserver:]
  -[SBLeafIcon applicationBundleID]
  -[SBLeafIcon enumerateObserversUsingBlock:]
  -[SBLeafIcon badgeNumberOrString]
  -[SBLeafIcon iconDataSourceCount]


SBHWidgetSettings : PTSettings /System/Library/PrivateFrameworks/CoreMaterial.framework/CoreMaterial
 @property  BOOL hitTestingDisabled
 @property  unsigned long maximumWidgetsInAStack
 @property  BOOL stackAlwaysShowsBorder
 @property  BOOL stackAlwaysShowsPageControl
 @property  BOOL stackFlashesPageControlOnAppearance
 @property  BOOL showLabelsInTodayView
 @property  SBFFluidBehaviorSettings *toggleEditingOrPinnedAnimationSettings
 @property  double animatedInsertionJumpScale
 @property  double animatedInsertionImpactScale
 @property  double animatedInsertionImpactDelay
 @property  double animatedInsertionJumpDuration
 @property  double animatedInsertionJumpDampingRatio
 @property  double animatedInsertionSlamDuration
 @property  double animatedInsertionSlamDelay
 @property  double animatedInsertionSlamDampingRatio
 @property  double animatedInsertionScaleResetDuration
 @property  double animatedInsertionScaleResetDelay
 @property  double animatedInsertionScaleResetDampingRatio
 @property  double animatedInsertionPositionDuration
 @property  double animatedInsertionPositionDampingRatio
 @property  SBFFluidBehaviorSettings *dropInsertionAnimationSettings
 @property  double dropInsertionImpactScale
 @property  double dropInsertionImpactDelay
 @property  double dropInsertionSlamDuration
 @property  double dropInsertionSlamDelay
 @property  double dropInsertionSlamDampingRatio
 @property  double dropInsertionScaleResetDuration
 @property  double dropInsertionScaleResetDelay
 @property  double dropInsertionScaleResetDampingRatio
 @property  BOOL configurationBlursBackground
 @property  BOOL configurationUsesPercentVerticalMargin
 @property  double configurationPercentVerticalMargin
 @property  double configurationAbsoluteVerticalMargin
 @property  BOOL configurationScalesHomeScreenRelativeToCardPosition
 @property  double configurationHomeScreenScale
 @property  double configurationHomeScreenAlpha
 @property  BOOL configurationEqualizesMinCardToCameraDistance
 @property  double configurationPerspectiveCameraDistance
 @property  double configurationMinCardToCameraDistance
 @property  double configurationDarkeningTintAlpha
 @property  double configurationWidgetTintColorAlpha
 @property  BOOL configurationMaximizesCardHeight
 @property  BOOL configurationEnforcesMaxCardHeight
 @property  double configurationMaxCardHeight

  // class methods
  +[SBHWidgetSettings settingsControllerModule]

  // instance methods
  -[SBHWidgetSettings setDefaultValues]
  -[SBHWidgetSettings dropInsertionAnimationSettings]
  -[SBHWidgetSettings .cxx_destruct]
  -[SBHWidgetSettings setMaximumWidgetsInAStack:]
  -[SBHWidgetSettings setStackAlwaysShowsBorder:]
  -[SBHWidgetSettings setStackAlwaysShowsPageControl:]
  -[SBHWidgetSettings setStackFlashesPageControlOnAppearance:]
  -[SBHWidgetSettings setShowLabelsInTodayView:]
  -[SBHWidgetSettings toggleEditingOrPinnedAnimationSettings]
  -[SBHWidgetSettings setAnimatedInsertionJumpScale:]
  -[SBHWidgetSettings setAnimatedInsertionImpactScale:]
  -[SBHWidgetSettings setAnimatedInsertionImpactDelay:]
  -[SBHWidgetSettings setAnimatedInsertionSlamDelay:]
  -[SBHWidgetSettings setAnimatedInsertionJumpDuration:]
  -[SBHWidgetSettings setAnimatedInsertionJumpDampingRatio:]
  -[SBHWidgetSettings setAnimatedInsertionSlamDuration:]
  -[SBHWidgetSettings setAnimatedInsertionSlamDampingRatio:]
  -[SBHWidgetSettings setAnimatedInsertionScaleResetDuration:]
  -[SBHWidgetSettings setAnimatedInsertionScaleResetDelay:]
  -[SBHWidgetSettings setAnimatedInsertionScaleResetDampingRatio:]
  -[SBHWidgetSettings setAnimatedInsertionPositionDuration:]
  -[SBHWidgetSettings setAnimatedInsertionPositionDampingRatio:]
  -[SBHWidgetSettings setDropInsertionImpactScale:]
  -[SBHWidgetSettings setDropInsertionImpactDelay:]
  -[SBHWidgetSettings setDropInsertionSlamDuration:]
  -[SBHWidgetSettings setDropInsertionSlamDelay:]
  -[SBHWidgetSettings setDropInsertionSlamDampingRatio:]
  -[SBHWidgetSettings setDropInsertionScaleResetDuration:]
  -[SBHWidgetSettings setDropInsertionScaleResetDelay:]
  -[SBHWidgetSettings setDropInsertionScaleResetDampingRatio:]
  -[SBHWidgetSettings setConfigurationBlursBackground:]
  -[SBHWidgetSettings setConfigurationUsesPercentVerticalMargin:]
  -[SBHWidgetSettings setConfigurationPercentVerticalMargin:]
  -[SBHWidgetSettings setConfigurationAbsoluteVerticalMargin:]
  -[SBHWidgetSettings setConfigurationHomeScreenScale:]
  -[SBHWidgetSettings setConfigurationHomeScreenAlpha:]
  -[SBHWidgetSettings setConfigurationPerspectiveCameraDistance:]
  -[SBHWidgetSettings setConfigurationEqualizesMinCardToCameraDistance:]
  -[SBHWidgetSettings setConfigurationMinCardToCameraDistance:]
  -[SBHWidgetSettings setConfigurationDarkeningTintAlpha:]
  -[SBHWidgetSettings setConfigurationWidgetTintColorAlpha:]
  -[SBHWidgetSettings setConfigurationMaximizesCardHeight:]
  -[SBHWidgetSettings setConfigurationMaxCardHeight:]
  -[SBHWidgetSettings setConfigurationEnforcesMaxCardHeight:]
  -[SBHWidgetSettings showLabelsInTodayView]
  -[SBHWidgetSettings setToggleEditingOrPinnedAnimationSettings:]
  -[SBHWidgetSettings animatedInsertionJumpScale]
  -[SBHWidgetSettings animatedInsertionImpactScale]
  -[SBHWidgetSettings animatedInsertionImpactDelay]
  -[SBHWidgetSettings animatedInsertionJumpDuration]
  -[SBHWidgetSettings animatedInsertionJumpDampingRatio]
  -[SBHWidgetSettings animatedInsertionSlamDuration]
  -[SBHWidgetSettings animatedInsertionSlamDelay]
  -[SBHWidgetSettings animatedInsertionSlamDampingRatio]
  -[SBHWidgetSettings animatedInsertionScaleResetDuration]
  -[SBHWidgetSettings animatedInsertionScaleResetDelay]
  -[SBHWidgetSettings animatedInsertionPositionDuration]
  -[SBHWidgetSettings animatedInsertionScaleResetDampingRatio]
  -[SBHWidgetSettings animatedInsertionPositionDampingRatio]
  -[SBHWidgetSettings setDropInsertionAnimationSettings:]
  -[SBHWidgetSettings dropInsertionImpactScale]
  -[SBHWidgetSettings dropInsertionImpactDelay]
  -[SBHWidgetSettings dropInsertionSlamDuration]
  -[SBHWidgetSettings dropInsertionSlamDelay]
  -[SBHWidgetSettings dropInsertionSlamDampingRatio]
  -[SBHWidgetSettings dropInsertionScaleResetDuration]
  -[SBHWidgetSettings dropInsertionScaleResetDelay]
  -[SBHWidgetSettings dropInsertionScaleResetDampingRatio]
  -[SBHWidgetSettings configurationScalesHomeScreenRelativeToCardPosition]
  -[SBHWidgetSettings configurationHomeScreenScale]
  -[SBHWidgetSettings setConfigurationScalesHomeScreenRelativeToCardPosition:]
  -[SBHWidgetSettings configurationHomeScreenAlpha]
  -[SBHWidgetSettings configurationEqualizesMinCardToCameraDistance]
  -[SBHWidgetSettings configurationPerspectiveCameraDistance]
  -[SBHWidgetSettings configurationMinCardToCameraDistance]
  -[SBHWidgetSettings maximumWidgetsInAStack]
  -[SBHWidgetSettings configurationBlursBackground]
  -[SBHWidgetSettings configurationDarkeningTintAlpha]
  -[SBHWidgetSettings configurationWidgetTintColorAlpha]
  -[SBHWidgetSettings configurationMaximizesCardHeight]
  -[SBHWidgetSettings configurationUsesPercentVerticalMargin]
  -[SBHWidgetSettings configurationPercentVerticalMargin]
  -[SBHWidgetSettings configurationAbsoluteVerticalMargin]
  -[SBHWidgetSettings configurationEnforcesMaxCardHeight]
  -[SBHWidgetSettings configurationMaxCardHeight]
  -[SBHWidgetSettings setHitTestingDisabled:]
  -[SBHWidgetSettings isHitTestingDisabled]
  -[SBHWidgetSettings stackFlashesPageControlOnAppearance]
  -[SBHWidgetSettings stackAlwaysShowsBorder]
  -[SBHWidgetSettings stackAlwaysShowsPageControl]


SBFramewiseInteractiveTransitionAnimator : NSObject /usr/lib/libSystem.B.dylib <SBViewControllerInteractiveAnimatedTransitioning>
 @property  <SBFramewiseInteractiveTransitionAnimatorDelegate> *delegate
 @property  BOOL presenting
 @property  double percentVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFramewiseInteractiveTransitionAnimator supportsRestarting]
  -[SBFramewiseInteractiveTransitionAnimator transitionDuration:]
  -[SBFramewiseInteractiveTransitionAnimator updateTransition:withPercentComplete:]
  -[SBFramewiseInteractiveTransitionAnimator cancelTransition:withCompletionSpeed:completionCurve:]
  -[SBFramewiseInteractiveTransitionAnimator .cxx_destruct]
  -[SBFramewiseInteractiveTransitionAnimator finishInteractiveTransition:withCompletionSpeed:completionCurve:]
  -[SBFramewiseInteractiveTransitionAnimator animateTransition:]
  -[SBFramewiseInteractiveTransitionAnimator setPresenting:]
  -[SBFramewiseInteractiveTransitionAnimator percentVisible]
  -[SBFramewiseInteractiveTransitionAnimator setDelegate:]
  -[SBFramewiseInteractiveTransitionAnimator isPresenting]
  -[SBFramewiseInteractiveTransitionAnimator delegate]
  -[SBFramewiseInteractiveTransitionAnimator percentComplete]


SBHWidgetInsertionRippleIconAnimator : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[SBHWidgetInsertionRippleIconAnimator animateWithCompletion:]
  -[SBHWidgetInsertionRippleIconAnimator initWithIconListView:widgetIcon:referenceIconView:additionalIconListView:]
  -[SBHWidgetInsertionRippleIconAnimator .cxx_destruct]
  -[SBHWidgetInsertionRippleIconAnimator _layoutRippleIconViews]
  -[SBHWidgetInsertionRippleIconAnimator _performJumpAnimationWithCompletion:]
  -[SBHWidgetInsertionRippleIconAnimator _performWidgetIconScaleOvershootAnimation]
  -[SBHWidgetInsertionRippleIconAnimator _playImpactHapticAfterDelay:]
  -[SBHWidgetInsertionRippleIconAnimator _startRippleAnimationWithDelay:]
  -[SBHWidgetInsertionRippleIconAnimator _centerOfIconViewAssumingCenteredAnchorPoint:]
  -[SBHWidgetInsertionRippleIconAnimator _createPortalViewsForIconViewsInIconListView:dropIconListView:withPortalContainerView:widgetIconCenter:]
  -[SBHWidgetInsertionRippleIconAnimator _createPortalViewsForIconViews]
  -[SBHWidgetInsertionRippleIconAnimator _finishRippleAnimation]
  -[SBHWidgetInsertionRippleIconAnimator _reparentPortalViewIntoIconListViewAfterDelay:]
  -[SBHWidgetInsertionRippleIconAnimator _displayLinkFired:]


SBHIconImageCache : NSObject /usr/lib/libSystem.B.dylib <SBIconObserver, BSDescriptionProviding>
 @property  CPMemoryPool *iconImagesMemoryPool
 @property  NSString *name
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  UIImage *genericImage
 @property  UIImage *overlayImage
 @property  UIImage *unmaskedOverlayImage
 @property  unsigned long poolingBypassCount
 @property  unsigned long numberOfCachedImages
 @property  unsigned long numberOfUnmaskedCachedImages
 @property  unsigned long numberOfCacheHits
 @property  unsigned long numberOfUnmaskedCacheHits
 @property  unsigned long numberOfCacheMisses
 @property  unsigned long numberOfUnmaskedCacheMisses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHIconImageCache _backgroundQueue]
  +[SBHIconImageCache genericImageWithInfo:]
  +[SBHIconImageCache overlayImageWithInfo:]
  +[SBHIconImageCache unmaskedOverlayImageWithInfo:]
  +[SBHIconImageCache supportsMemoryPooling]

  // instance methods
  -[SBHIconImageCache overlayImage]
  -[SBHIconImageCache genericImage]
  -[SBHIconImageCache beginObservingIconIfNecessary:]
  -[SBHIconImageCache endObservingAllIcons]
  -[SBHIconImageCache initWithName:iconImageInfo:]
  -[SBHIconImageCache iconImageInfo]
  -[SBHIconImageCache iconImageDidUpdate:]
  -[SBHIconImageCache purgeAllCachedImages]
  -[SBHIconImageCache poolingBypassCount]
  -[SBHIconImageCache notifyObserversOfUpdateForIcon:]
  -[SBHIconImageCache imageForIcon:]
  -[SBHIconImageCache _pooledIconImageForIconImage:allowingOptOut:]
  -[SBHIconImageCache setPoolingBypassCount:]
  -[SBHIconImageCache .cxx_destruct]
  -[SBHIconImageCache cacheImageForIcon:options:completionHandler:]
  -[SBHIconImageCache name]
  -[SBHIconImageCache iconImagesMemoryPool]
  -[SBHIconImageCache succinctDescriptionBuilder]
  -[SBHIconImageCache numberOfCacheMisses]
  -[SBHIconImageCache numberOfCacheHits]
  -[SBHIconImageCache cacheImagesForIcons:options:completionHandler:]
  -[SBHIconImageCache cachedImageForIcon:]
  -[SBHIconImageCache unmaskedImageForIcon:]
  -[SBHIconImageCache memoryMappedIconImageOfSize:scale:withDrawing:]
  -[SBHIconImageCache numberOfUnmaskedCacheHits]
  -[SBHIconImageCache succinctDescription]
  -[SBHIconImageCache numberOfCachedImages]
  -[SBHIconImageCache cachedUnmaskedImageForIcon:]
  -[SBHIconImageCache removeObserver:]
  -[SBHIconImageCache _canPoolImage]
  -[SBHIconImageCache pooledIconImageForMappedIconImage:]
  -[SBHIconImageCache memoryMappedIconImageForIconImage:]
  -[SBHIconImageCache _iconImageOfSize:scale:failGracefully:drawing:]
  -[SBHIconImageCache cacheImagesForIcons:]
  -[SBHIconImageCache cacheImage:forIcon:]
  -[SBHIconImageCache addObserver:]
  -[SBHIconImageCache unmaskedOverlayImage]
  -[SBHIconImageCache purgeCachedImagesForIcons:]
  -[SBHIconImageCache numberOfUnmaskedCacheMisses]
  -[SBHIconImageCache realImageForIcon:]
  -[SBHIconImageCache descriptionWithMultilinePrefix:]
  -[SBHIconImageCache numberOfUnmaskedCachedImages]
  -[SBHIconImageCache descriptionBuilderWithMultilinePrefix:]
  -[SBHIconImageCache endObservingIcon:]
  -[SBHIconImageCache cacheUnmaskedImagesForIcons:]
  -[SBHIconImageCache _cacheKeyForIcon:]


SBHFeatherBlurView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  MTMaterialView *backgroundBlurView

  // class methods
  +[SBHFeatherBlurView matchMoveAnimationForFrame:relativeToView:]
  +[SBHFeatherBlurView configureGradientMaskForFeatherBlurRecipe:onContentView:]
  +[SBHFeatherBlurView _requiresLowQualityFeatherBlur:]
  +[SBHFeatherBlurView gradientMaskLayerInsetsForFeatherBlurRecipe:]

  // instance methods
  -[SBHFeatherBlurView .cxx_destruct]
  -[SBHFeatherBlurView intrinsicContentSize]
  -[SBHFeatherBlurView sizeThatFits:]
  -[SBHFeatherBlurView initWithRecipe:]
  -[SBHFeatherBlurView backgroundBlurView]
  -[SBHFeatherBlurView layoutSubviews]


SBHighlightView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  double highlightAlpha
 @property  double highlightHeight

  // class methods
  +[SBHighlightView imageCache]
  +[SBHighlightView _highlightImageWithHeight:alpha:]

  // instance methods
  -[SBHighlightView highlightHeight]
  -[SBHighlightView .cxx_destruct]
  -[SBHighlightView initWithFrame:highlightAlpha:highlightHeight:]
  -[SBHighlightView highlightAlpha]
  -[SBHighlightView layoutSubviews]


SBHIconAccessoryVisualConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  double fontSize
 @property  {CGSize=dd} size
 @property  {CGPoint=dd} offset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconAccessoryVisualConfiguration copyWithZone:]
  -[SBHIconAccessoryVisualConfiguration init]
  -[SBHIconAccessoryVisualConfiguration setFontSize:]
  -[SBHIconAccessoryVisualConfiguration fontSize]
  -[SBHIconAccessoryVisualConfiguration size]
  -[SBHIconAccessoryVisualConfiguration setOffset:]
  -[SBHIconAccessoryVisualConfiguration succinctDescriptionBuilder]
  -[SBHIconAccessoryVisualConfiguration succinctDescription]
  -[SBHIconAccessoryVisualConfiguration offset]
  -[SBHIconAccessoryVisualConfiguration isEqual:]
  -[SBHIconAccessoryVisualConfiguration setSize:]
  -[SBHIconAccessoryVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHIconAccessoryVisualConfiguration descriptionBuilderWithMultilinePrefix:]


SBHAddWidgetDetailsSheetPageViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBHWidgetWrapperViewControllerDelegate>
 @property  UIView *referenceView
 @property  double scale
 @property  UILayoutGuide *layoutGuide
 @property  SBHWidgetWrapperViewController *widgetWrapperViewController
 @property  <SBHWidgetDragHandlerPassing> *delegate
 @property  BOOL jumpAnimationInProgress
 @property  {CGAffineTransform=dddddd} wrapperViewTransform
 @property  <SBHWidgetDragHandling> *widgetDragHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHAddWidgetDetailsSheetPageViewController initWithWidgetWrapperViewController:]
  -[SBHAddWidgetDetailsSheetPageViewController widgetWrapperViewController]
  -[SBHAddWidgetDetailsSheetPageViewController updateParallaxEffectInReferenceView:]
  -[SBHAddWidgetDetailsSheetPageViewController widgetDragHandler]
  -[SBHAddWidgetDetailsSheetPageViewController setScale:]
  -[SBHAddWidgetDetailsSheetPageViewController .cxx_destruct]
  -[SBHAddWidgetDetailsSheetPageViewController layoutGuide]
  -[SBHAddWidgetDetailsSheetPageViewController _createConstraints]
  -[SBHAddWidgetDetailsSheetPageViewController referenceView]
  -[SBHAddWidgetDetailsSheetPageViewController setLayoutGuide:]
  -[SBHAddWidgetDetailsSheetPageViewController _createSizeConstraintsForWrapperView:]
  -[SBHAddWidgetDetailsSheetPageViewController _updateWidgetScale]
  -[SBHAddWidgetDetailsSheetPageViewController _pauseLayer:]
  -[SBHAddWidgetDetailsSheetPageViewController _resumeLayer:]
  -[SBHAddWidgetDetailsSheetPageViewController setJumpAnimationInProgress:]
  -[SBHAddWidgetDetailsSheetPageViewController isJumpAnimationInProgress]
  -[SBHAddWidgetDetailsSheetPageViewController wrapperViewTransform]
  -[SBHAddWidgetDetailsSheetPageViewController setReferenceView:]
  -[SBHAddWidgetDetailsSheetPageViewController setDelegate:]
  -[SBHAddWidgetDetailsSheetPageViewController viewDidLayoutSubviews]
  -[SBHAddWidgetDetailsSheetPageViewController delegate]
  -[SBHAddWidgetDetailsSheetPageViewController loadView]
  -[SBHAddWidgetDetailsSheetPageViewController scale]
  -[SBHAddWidgetDetailsSheetPageViewController _createViews]


SBHLibraryCategoryMapProviderRefreshRequest : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  unsigned long options
 @property  NSString *requestReason
 @property  NSString *senderDescription
 @property  unsigned long failureCount

  // instance methods
  -[SBHLibraryCategoryMapProviderRefreshRequest copyWithZone:]
  -[SBHLibraryCategoryMapProviderRefreshRequest .cxx_destruct]
  -[SBHLibraryCategoryMapProviderRefreshRequest options]
  -[SBHLibraryCategoryMapProviderRefreshRequest initWithOptions:reason:]
  -[SBHLibraryCategoryMapProviderRefreshRequest accumulateFailure:forSession:]
  -[SBHLibraryCategoryMapProviderRefreshRequest failureForSessionIdentifier:]
  -[SBHLibraryCategoryMapProviderRefreshRequest hasFailedSeveralTimes]
  -[SBHLibraryCategoryMapProviderRefreshRequest senderDescription]
  -[SBHLibraryCategoryMapProviderRefreshRequest setSenderDescription:]
  -[SBHLibraryCategoryMapProviderRefreshRequest failureCount]
  -[SBHLibraryCategoryMapProviderRefreshRequest requestReason]
  -[SBHLibraryCategoryMapProviderRefreshRequest setRequestReason:]


SBHLibraryCategoryMapProvider : NSObject /usr/lib/libSystem.B.dylib <SBHLibraryCategoryMapProviderSourceDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  SBHLibraryCategoryMap *libraryCategoryMap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHLibraryCategoryMapProvider cacheDirectory]
  +[SBHLibraryCategoryMapProvider categoryMapCacheFilePathForVersion:source:]
  +[SBHLibraryCategoryMapProvider baseFilePath]
  +[SBHLibraryCategoryMapProvider categoryMapFromURL:error:]
  +[SBHLibraryCategoryMapProvider derivedOptionsFromArrayOfRequests:]
  +[SBHLibraryCategoryMapProvider clearCachesForReason:]

  // instance methods
  -[SBHLibraryCategoryMapProvider initWithSource:]
  -[SBHLibraryCategoryMapProvider _nextSessionIdentifier]
  -[SBHLibraryCategoryMapProvider .cxx_destruct]
  -[SBHLibraryCategoryMapProvider workQueue]
  -[SBHLibraryCategoryMapProvider requestLibraryCategoryMapUpdateWithRefreshOptions:source:]
  -[SBHLibraryCategoryMapProvider _setupClearCacheNotification]
  -[SBHLibraryCategoryMapProvider _kickoffInitialHydration]
  -[SBHLibraryCategoryMapProvider _copyOfObservers]
  -[SBHLibraryCategoryMapProvider overrideCategoryMapForTesting:]
  -[SBHLibraryCategoryMapProvider _workQueue_updateLibraryCategoryMap:withSessionId:shouldPersist:reason:]
  -[SBHLibraryCategoryMapProvider requestLibraryCategoryMapRefreshWithOptions:reason:]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserverCategoryMapWasRefreshedWithOptions:refreshedCategoryMap:]
  -[SBHLibraryCategoryMapProvider _workQueue_queueUpNextRequests:runNow:]
  -[SBHLibraryCategoryMapProvider hasCachedLibraryCategoryMapOnFileSystem]
  -[SBHLibraryCategoryMapProvider _workQueue_performNextRequest]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversFinishedRefreshSession:requests:]
  -[SBHLibraryCategoryMapProvider _workQueue_scheduleRefreshIfNotScheduled]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversWillReEnqueueFailedRequests:]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversWillSunsetFailedRequests:]
  -[SBHLibraryCategoryMapProvider clearOverride]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversCategoryMapRefreshFailedWithError:]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversCategoryMapDidntNeedRefresh]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversBeginningRefreshSession:requests:]
  -[SBHLibraryCategoryMapProvider _workQueue_cancelAnyScheduledRefresh]
  -[SBHLibraryCategoryMapProvider _callbackQueue_notifyObserversWillRefresh:options:]
  -[SBHLibraryCategoryMapProvider overrideCategoryMapForTestingAtURL:error:]
  -[SBHLibraryCategoryMapProvider resetForbiddenApplicationIdentifiers]
  -[SBHLibraryCategoryMapProvider forbidApplicationIdentifier:]
  -[SBHLibraryCategoryMapProvider unforbidApplicationIdentifier:]
  -[SBHLibraryCategoryMapProvider libraryCategoryMap]
  -[SBHLibraryCategoryMapProvider removeObserver:]
  -[SBHLibraryCategoryMapProvider addObserver:]


SBFolderIcon : SBIcon <SBFolderObserver, SBIconObserver, SBIconIndexNodeObserver>
 @property  SBFolder *folder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFolderIcon hasIconImage]

  // instance methods
  -[SBFolderIcon iconImageViewClassForLocation:]
  -[SBFolderIcon rootFolder]
  -[SBFolderIcon _updateProgress]
  -[SBFolderIcon localeChanged]
  -[SBFolderIcon containedNodeIdentifiers]
  -[SBFolderIcon copyWithZone:]
  -[SBFolderIcon generateIconImageWithInfo:]
  -[SBFolderIcon folder:didAddList:]
  -[SBFolderIcon nodesAlongIndexPath:consumedIndexes:]
  -[SBFolderIcon shouldAnimateProgress]
  -[SBFolderIcon updateLabel]
  -[SBFolderIcon containsNodeIdentifier:]
  -[SBFolderIcon leafIconsWithBadgesSortedByImportance]
  -[SBFolderIcon nodeDescriptionWithPrefix:]
  -[SBFolderIcon noteContainedIcon:replacedIcon:]
  -[SBFolderIcon iconLaunchEnabledDidChange:]
  -[SBFolderIcon progressState]
  -[SBFolderIcon iconAccessoriesDidUpdate:]
  -[SBFolderIcon indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBFolderIcon addNodeObserver:]
  -[SBFolderIcon nodeIdentifier]
  -[SBFolderIcon initWithFolder:]
  -[SBFolderIcon isFolderIcon]
  -[SBFolderIcon iconImageDidUpdate:]
  -[SBFolderIcon removeNodeObserver:]
  -[SBFolderIcon rootFolderDelegateDidChange:]
  -[SBFolderIcon genericIconImageWithInfo:]
  -[SBFolderIcon dealloc]
  -[SBFolderIcon noteContainedIconsAdded:removed:]
  -[SBFolderIcon folder:didAddIcons:removedIcons:]
  -[SBFolderIcon .cxx_destruct]
  -[SBFolderIcon canBeAddedToSubfolder]
  -[SBFolderIcon canBeAddedToMultiItemDrag]
  -[SBFolderIcon folder:didReplaceIcon:withIcon:]
  -[SBFolderIcon displayNameForLocation:]
  -[SBFolderIcon _performDelayedIconUpdates]
  -[SBFolderIcon _adjustForIconsAdded:removed:]
  -[SBFolderIcon _updateBadgeValue]
  -[SBFolderIcon gridCellIndexForIconIndex:]
  -[SBFolderIcon listIndexForContainedIcon:]
  -[SBFolderIcon _containedIconImageChanged:]
  -[SBFolderIcon isProgressPaused]
  -[SBFolderIcon invalidateUpdateIconRunLoopObserver]
  -[SBFolderIcon iconAtListIndex:iconIndex:]
  -[SBFolderIcon node:didRemoveContainedNodeIdentifiers:]
  -[SBFolderIcon folder]
  -[SBFolderIcon folder:didRemoveLists:atIndexes:]
  -[SBFolderIcon progressPercent]
  -[SBFolderIcon _containedIconLaunchEnabledDidUpdate:]
  -[SBFolderIcon badgeNumberOrString]
  -[SBFolderIcon nodeDidMoveContainedNodes:]
  -[SBFolderIcon node:didAddContainedNodeIdentifiers:]
  -[SBFolderIcon _containedIconAccessoriesDidUpdate:]


SBHSearchTextField : UISearchTextField /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  long long alignmentBehavior

  // class methods
  +[SBHSearchTextField _derivedTextAlignmentForBehavior:hasSearchText:isEditing:]
  +[SBHSearchTextField borderColorForUserInterfaceStyle:]

  // instance methods
  -[SBHSearchTextField leftViewRectForBounds:]
  -[SBHSearchTextField rightViewRectForBounds:]
  -[SBHSearchTextField placeholderRectForBounds:]
  -[SBHSearchTextField clearButtonRectForBounds:]
  -[SBHSearchTextField editingRectForBounds:]
  -[SBHSearchTextField textRectForBounds:]
  -[SBHSearchTextField _dynamicUserInterfaceTraitDidChange]
  -[SBHSearchTextField initWithFrame:]
  -[SBHSearchTextField _setContinuousCornerRadius:]
  -[SBHSearchTextField .cxx_destruct]
  -[SBHSearchTextField intrinsicContentSize]
  -[SBHSearchTextField _shouldSendContentChangedNotificationsIfOnlyMarkedTextChanged]
  -[SBHSearchTextField traitCollectionDidChange:]
  -[SBHSearchTextField sizeThatFits:]
  -[SBHSearchTextField updateBorderVisualStyling]
  -[SBHSearchTextField updateVisualStyling]
  -[SBHSearchTextField _didEndEditing:]
  -[SBHSearchTextField _didBeginEditing:]
  -[SBHSearchTextField _textDidChange:]
  -[SBHSearchTextField _updateTextAlignmentForEditing:animated:]
  -[SBHSearchTextField _calculateHeightWithFont]
  -[SBHSearchTextField _hasSearchText]
  -[SBHSearchTextField _derivedTextAlignmentIfEditing:]
  -[SBHSearchTextField alignmentBehavior]
  -[SBHSearchTextField updateStyleForLeftView]
  -[SBHSearchTextField updateStyleForRightView]
  -[SBHSearchTextField updateStyleForClearButton]
  -[SBHSearchTextField updateStyleForPlaceholderView]
  -[SBHSearchTextField _derivedTextAlignment]
  -[SBHSearchTextField _calculatePlaceholderRectForBounds:alignment:isRTL:]
  -[SBHSearchTextField _calculateTextRectForBounds:alignment:isRTL:]
  -[SBHSearchTextField _calculateEditingRectForBounds:alignment:isRTL:]
  -[SBHSearchTextField _frameForLeftViewWithinBounds:alignment:]
  -[SBHSearchTextField _frameForRightViewWithinBounds:alignment:]
  -[SBHSearchTextField _frameForPlaceholderRectForBounds:alignment:isRTL:willOverflow:]
  -[SBHSearchTextField setAlignmentBehavior:]
  -[SBHSearchTextField setFont:]
  -[SBHSearchTextField _adjustedTextOrEditingRect:forBounds:]
  -[SBHSearchTextField setAlignmentBehavior:animated:]
  -[SBHSearchTextField layoutSubviews]


SBIconListViewDominoAnimator : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayoutAnimating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewDominoAnimator reset]
  -[SBIconListViewDominoAnimator iconListView:wantsAnimatedLayoutForIconView:withParameters:alongsideAnimationBlock:]
  -[SBIconListViewDominoAnimator iconListView:wantsAnimatedRemovalForIconViews:completionHandler:]


SBHLibraryViewController : SBNestingViewController <UISearchBarDelegate, SBHLibrarySearchControllerDelegate, SBHLibraryCategoryMapProviderObserver, SBHIconLibraryTableViewControllerObserver, SBIconViewProviding, SBIconViewDelegate, SBNestingViewControllerDelegate, SBHLibraryPodFolderControllerDelegate, SBFolderControllerDelegate, SBHLibraryProvider, SBHOccludable>
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  BSEventQueue *transitionEventQueue
 @property  SBHomeScreenIconTransitionAnimator *currentTransitionAnimator
 @property  NSMutableArray *currentExpandCompletions
 @property  NSMutableArray *currentCollapseCompletions
 @property  SBHSearchTextField *searchTextField
 @property  SBHLibrarySearchController *containerViewController
 @property  SBHIconLibraryTableViewController *iconTableViewController
 @property  SBHLibraryPodFolderController *podFolderViewController
 @property  SBRootFolder *categoriesRootFolder
 @property  SBHLibraryCategoryMap *libraryCategoryMap
 @property  <SBIconViewDelegate> *iconViewDelegate
 @property  SBHLibraryCategoryMapProvider *categoryMapProvider
 @property  BOOL presentingFolder
 @property  BOOL presentingSearch
 @property  BOOL allowsBadging
 @property  BOOL suppressesEditingStateForListViews
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHIconModel *iconModel
 @property  <SBIconViewProviding> *iconViewProvider
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  SBHIconImageCache *iconImageCache
 @property  <SBHomeScreenIconTransitionAnimatorDelegate> *homeScreenIconTransitionAnimatorDelegate
 @property  SBFolderController *folderController
 @property  UIView *searchDimmingView
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSSet *presentedIconLocations
 @property  BOOL occluded

  // class methods
  +[SBHLibraryViewController _updateCategoryMap:withCategoryDataFrom:]

  // instance methods
  -[SBHLibraryViewController isDisplayingIconView:options:]
  -[SBHLibraryViewController iconView:canAddDragItemsToSession:]
  -[SBHLibraryViewController configureIconView:forIcon:]
  -[SBHLibraryViewController viewDidLoad]
  -[SBHLibraryViewController didDismissSearchController:]
  -[SBHLibraryViewController firstIconViewForIcon:options:]
  -[SBHLibraryViewController setIconModel:]
  -[SBHLibraryViewController iconViewWasRecycled:]
  -[SBHLibraryViewController isDisplayingIcon:options:]
  -[SBHLibraryViewController _enqueueTransitionName:withHandler:]
  -[SBHLibraryViewController willPresentSearchController:]
  -[SBHLibraryViewController willDismissSearchController:]
  -[SBHLibraryViewController didPresentSearchController:]
  -[SBHLibraryViewController transitionEventQueue]
  -[SBHLibraryViewController setListLayoutProvider:]
  -[SBHLibraryViewController iconViewForIcon:location:]
  -[SBHLibraryViewController folderController:willUseIconTransitionAnimator:forOperation:onViewController:animated:]
  -[SBHLibraryViewController recycleIconView:]
  -[SBHLibraryViewController layoutIconLists:animationType:forceRelayout:]
  -[SBHLibraryViewController folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBHLibraryViewController enumerateIconViewQueryableChildrenUsingBlock:]
  -[SBHLibraryViewController iconViewCanBeginDrags:]
  -[SBHLibraryViewController init]
  -[SBHLibraryViewController legibilitySettings]
  -[SBHLibraryViewController iconTapped:]
  -[SBHLibraryViewController iconViewShouldBeginShortcutsPresentation:]
  -[SBHLibraryViewController setIconImageCache:]
  -[SBHLibraryViewController folderController:iconListView:canHandleIconDropSession:]
  -[SBHLibraryViewController folderController:iconListView:iconDropSessionDidUpdate:]
  -[SBHLibraryViewController isDisplayingIconView:inLocation:]
  -[SBHLibraryViewController enumerateIconViewQueryableChildrenWithOptions:usingBlock:]
  -[SBHLibraryViewController closeBoxTypeForIconView:]
  -[SBHLibraryViewController folderController:iconListView:customSpringAnimationBehaviorForDroppingItem:]
  -[SBHLibraryViewController categoriesRootFolder]
  -[SBHLibraryViewController dealloc]
  -[SBHLibraryViewController iconImageCache]
  -[SBHLibraryViewController .cxx_destruct]
  -[SBHLibraryViewController iconViewDisplaysCloseBox:]
  -[SBHLibraryViewController isPresentingFolder]
  -[SBHLibraryViewController currentExpandCompletions]
  -[SBHLibraryViewController setCurrentExpandCompletions:]
  -[SBHLibraryViewController currentCollapseCompletions]
  -[SBHLibraryViewController setCurrentCollapseCompletions:]
  -[SBHLibraryViewController firstIconViewForIcon:]
  -[SBHLibraryViewController iconViewDisplaysBadges:]
  -[SBHLibraryViewController setIconViewProvider:]
  -[SBHLibraryViewController folderController:draggedIconShouldDropFromListView:]
  -[SBHLibraryViewController firstIconViewForIcon:inLocations:]
  -[SBHLibraryViewController folderControllerWillBeginScrolling:]
  -[SBHLibraryViewController nestingViewController:animationControllerForOperation:onViewController:animated:]
  -[SBHLibraryViewController isDisplayingIcon:inLocations:]
  -[SBHLibraryViewController folderController:iconListView:iconDropSessionDidExit:]
  -[SBHLibraryViewController iconModelDidLayout:]
  -[SBHLibraryViewController folderController:iconListView:willUseIconView:forDroppingIconDragItem:]
  -[SBHLibraryViewController pushNestedViewController:animated:withCompletion:]
  -[SBHLibraryViewController popNestedViewControllerAnimated:withCompletion:]
  -[SBHLibraryViewController folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBHLibraryViewController isDisplayingIconView:]
  -[SBHLibraryViewController setLegibilitySettings:]
  -[SBHLibraryViewController folderControllerShouldClose:withPinchGesture:]
  -[SBHLibraryViewController viewSafeAreaInsetsDidChange]
  -[SBHLibraryViewController folderControllerShouldBeginEditing:withHaptic:]
  -[SBHLibraryViewController setCurrentTransitionAnimator:]
  -[SBHLibraryViewController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHLibraryViewController folderIconImageCache]
  -[SBHLibraryViewController folderController:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBHLibraryViewController viewDidAppear:]
  -[SBHLibraryViewController customImageViewControllerForIconView:]
  -[SBHLibraryViewController iconViewForIcon:location:options:]
  -[SBHLibraryViewController libraryCategoryMapProvider:categoryMapWasRefreshed:libraryCategoryMap:]
  -[SBHLibraryViewController presentedIconLocations]
  -[SBHLibraryViewController iconShouldAllowTap:]
  -[SBHLibraryViewController iconView:editingModeGestureRecognizerDidFire:]
  -[SBHLibraryViewController shortcutsDelegateForIconView:]
  -[SBHLibraryViewController folderControllerShouldEndEditing:]
  -[SBHLibraryViewController iconViewComponentBackgroundViewTypeForIconView:]
  -[SBHLibraryViewController folderController]
  -[SBHLibraryViewController draggingDelegateForIconView:]
  -[SBHLibraryViewController setSuppressesEditingStateForListViews:]
  -[SBHLibraryViewController _enqueueAppLibraryUpdate]
  -[SBHLibraryViewController _setupIconTableViewController:]
  -[SBHLibraryViewController initWithCategoryMapProvider:]
  -[SBHLibraryViewController _enumerateAllViewControllersUsingBlock:]
  -[SBHLibraryViewController invalidateSearchControllerAppLaunchResetTimer]
  -[SBHLibraryViewController _notifyObserversWillPresent]
  -[SBHLibraryViewController _notifyObserversDidPresent]
  -[SBHLibraryViewController _notifyObserversWillDismiss]
  -[SBHLibraryViewController _dismissExpandedPodsIfNecessary]
  -[SBHLibraryViewController _flushPendingLibraryCategoryMapUpdateIfNeeded]
  -[SBHLibraryViewController _notifyObserversDidDismiss]
  -[SBHLibraryViewController _invalidateLibraryViewControllerDismissalTimer]
  -[SBHLibraryViewController _updateViewControllerLegibility:]
  -[SBHLibraryViewController _rebuildIconCache]
  -[SBHLibraryViewController enumerateDisplayedIconViewsUsingBlock:]
  -[SBHLibraryViewController _scrollIconViewToVisible:animated:]
  -[SBHLibraryViewController _notifyObserversRequestDismissal]
  -[SBHLibraryViewController _wrappedCompletionBlockForNestedTransitionWithCompletion:]
  -[SBHLibraryViewController homeScreenIconTransitionAnimatorDelegate]
  -[SBHLibraryViewController _notifyObserversWillPresentFolderController:]
  -[SBHLibraryViewController iconViewDelegate]
  -[SBHLibraryViewController isIconViewRecycled:]
  -[SBHLibraryViewController _notifyObserversWillDismissFolderController:]
  -[SBHLibraryViewController _notifyObserversDidPresentFolderController:]
  -[SBHLibraryViewController _notifyObserversDidDismissFolderController:]
  -[SBHLibraryViewController _notifyObserversOfAppLaunchOfIcon:fromLocation:]
  -[SBHLibraryViewController _startLibraryViewControllerDismissalTimer:]
  -[SBHLibraryViewController _updateViewControllerLegibility:legibilitySettings:]
  -[SBHLibraryViewController allowsBadging]
  -[SBHLibraryViewController _installCategoryMap:]
  -[SBHLibraryViewController _updateLibraryCategoryMap:]
  -[SBHLibraryViewController isPresentingSearch]
  -[SBHLibraryViewController _notifyObserversWillPresentSearchController:]
  -[SBHLibraryViewController podFolderViewController]
  -[SBHLibraryViewController _notifyObserversDidPresentSearchController:]
  -[SBHLibraryViewController dismissSearch]
  -[SBHLibraryViewController _notifyObserversWillDismissSearchController:]
  -[SBHLibraryViewController _notifyObserversDidDismissSearchController:]
  -[SBHLibraryViewController _additionalItemsIndicatorIconViewForFolderController:]
  -[SBHLibraryViewController _startAppLaunchResetTimer:]
  -[SBHLibraryViewController setAllowsBadging:]
  -[SBHLibraryViewController _dismissLibraryViewControllerForReason:sessionIdentifier:]
  -[SBHLibraryViewController _dismissSearchIfNotInUseForReason:sessionIdentifier:]
  -[SBHLibraryViewController _iconIdentifierForDragItem:]
  -[SBHLibraryViewController _destinationFolderIconViewForDragItem:folderRelativeIconIndexPath:]
  -[SBHLibraryViewController libraryTableViewControllerDidAppear:]
  -[SBHLibraryViewController libraryTableViewControllerWillDisappear:]
  -[SBHLibraryViewController libraryTableViewControllerDidLaunchIcon:]
  -[SBHLibraryViewController setHomeScreenIconTransitionAnimatorDelegate:]
  -[SBHLibraryViewController noteInstalledApplicationsDidChange]
  -[SBHLibraryViewController setIconViewDelegate:]
  -[SBHLibraryViewController categoryMapProvider]
  -[SBHLibraryViewController iconTableViewController]
  -[SBHLibraryViewController nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBHLibraryViewController iconCloseBoxTapped:]
  -[SBHLibraryViewController _enumerateObservers:]
  -[SBHLibraryViewController folderControllerDidEndScrolling:]
  -[SBHLibraryViewController overrideTraitCollectionForChildViewController:]
  -[SBHLibraryViewController iconShouldAllowCloseBoxTap:]
  -[SBHLibraryViewController containerViewController]
  -[SBHLibraryViewController folderController:iconListView:performIconDrop:]
  -[SBHLibraryViewController _updateEditingStateAnimated:]
  -[SBHLibraryViewController listLayoutProvider]
  -[SBHLibraryViewController searchTextField]
  -[SBHLibraryViewController isDisplayingIcon:inLocation:]
  -[SBHLibraryViewController iconModel]
  -[SBHLibraryViewController libraryPodFolderControllerRequestsDismissal:]
  -[SBHLibraryViewController enumerateViewControllersUsingBlock:]
  -[SBHLibraryViewController libraryCategoryMap]
  -[SBHLibraryViewController firstNonSuggestionsOrRecentsIconViewForIcon:]
  -[SBHLibraryViewController viewWillAppear:]
  -[SBHLibraryViewController folderController:canChangeCurrentPageIndexToIndex:]
  -[SBHLibraryViewController setSearchDimmingView:]
  -[SBHLibraryViewController removeObserver:]
  -[SBHLibraryViewController folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBHLibraryViewController dequeueReusableIconViewOfClass:]
  -[SBHLibraryViewController viewDidDisappear:]
  -[SBHLibraryViewController isDisplayingIcon:]
  -[SBHLibraryViewController currentTransitionAnimator]
  -[SBHLibraryViewController firstIconViewForIcon:excludingLocations:]
  -[SBHLibraryViewController noteIconViewWillZoomDown:]
  -[SBHLibraryViewController isDisplayingIcon:inLocation:options:]
  -[SBHLibraryViewController viewWillDisappear:]
  -[SBHLibraryViewController addObserver:]
  -[SBHLibraryViewController suppressesEditingStateForListViews]
  -[SBHLibraryViewController viewDidLayoutSubviews]
  -[SBHLibraryViewController controllerClassForFolder:]
  -[SBHLibraryViewController contentScrollView]
  -[SBHLibraryViewController folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBHLibraryViewController searchDimmingView]
  -[SBHLibraryViewController setEditing:animated:]
  -[SBHLibraryViewController iconViewProvider]
  -[SBHLibraryViewController loadView]
  -[SBHLibraryViewController folderController:iconListView:iconDropSessionDidEnter:]
  -[SBHLibraryViewController setOccluded:]
  -[SBHLibraryViewController isOccluded]
  -[SBHLibraryViewController isPresentingIconLocation:]


_SBHLibraryFrozenSafeAreaInsetsView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
  // instance methods
  -[_SBHLibraryFrozenSafeAreaInsetsView _safeAreaInsetsForFrame:inSuperview:]


_SBHLibraryCollectionOfModelThings : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL isValid
 @property  <SBIconViewProviding> *iconViewProvider
 @property  SBHIconModel *iconModel
 @property  SBRootFolder *rootFolder
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  SBHIconImageCache *iconImageCache
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHLibraryCategoryMapProvider *categoryMapProvider

  // instance methods
  -[_SBHLibraryCollectionOfModelThings rootFolder]
  -[_SBHLibraryCollectionOfModelThings iconImageCache]
  -[_SBHLibraryCollectionOfModelThings .cxx_destruct]
  -[_SBHLibraryCollectionOfModelThings isValid]
  -[_SBHLibraryCollectionOfModelThings folderIconImageCache]
  -[_SBHLibraryCollectionOfModelThings initWithIconViewProvider:iconModel:rootFolder:listLayoutProvider:iconImageCache:folderIconImageCache:categoryMapProvider:]
  -[_SBHLibraryCollectionOfModelThings categoryMapProvider]
  -[_SBHLibraryCollectionOfModelThings isEqual:]
  -[_SBHLibraryCollectionOfModelThings listLayoutProvider]
  -[_SBHLibraryCollectionOfModelThings iconModel]
  -[_SBHLibraryCollectionOfModelThings iconViewProvider]


_SBFolderPageElement : NSObject /usr/lib/libSystem.B.dylib
 @property  SBIconGridImage *gridImage
 @property  BOOL gridImagePossible
 @property  unsigned long visibleRow
 @property  unsigned long pageIndex
 @property  SBFolderIcon *folderIcon

  // instance methods
  -[_SBFolderPageElement firstVisibleMiniIconIndex]
  -[_SBFolderPageElement setFolderIcon:]
  -[_SBFolderPageElement folderIcon]
  -[_SBFolderPageElement pageIndex]
  -[_SBFolderPageElement .cxx_destruct]
  -[_SBFolderPageElement isGridImagePossible]
  -[_SBFolderPageElement firstVisibleRowForGap]
  -[_SBFolderPageElement visibleRow]
  -[_SBFolderPageElement setPageIndex:]
  -[_SBFolderPageElement setGridImagePossible:]
  -[_SBFolderPageElement gridImage]
  -[_SBFolderPageElement setGridImage:]
  -[_SBFolderPageElement setVisibleRow:]


_SBIconGridWrapperView : UIImageView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  _SBFolderPageElement *element
 @property  SBFolderIconImageView *folderIconImageView

  // instance methods
  -[_SBIconGridWrapperView positionAtRow:]
  -[_SBIconGridWrapperView .cxx_destruct]
  -[_SBIconGridWrapperView folderIconImageView]
  -[_SBIconGridWrapperView reposition]
  -[_SBIconGridWrapperView setFolderIconImageView:]
  -[_SBIconGridWrapperView element]
  -[_SBIconGridWrapperView setElement:]


SBFolderIconImageView : SBIconImageView <SBFolderIconObserver, SBFolderIconImageCacheObserver>
 @property  unsigned long concreteBackgroundStyle
 @property  unsigned long currentBackgroundStyle
 @property  unsigned long backgroundStyle
 @property  unsigned long currentPageIndex
 @property  BOOL animating
 @property  double iconGridImageAlpha
 @property  UIView *backgroundView
 @property  BOOL hasCustomBackgroundView
 @property  BOOL pageGridHidden
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFolderIconImageView firstVisibleMiniIconIndex]
  -[SBFolderIconImageView scrollToTopOfFirstPageAnimated:]
  -[SBFolderIconImageView visibleMiniIconCount]
  -[SBFolderIconImageView _setPageElements:]
  -[SBFolderIconImageView scrollToTopOfPage:animated:]
  -[SBFolderIconImageView setBackgroundScale:]
  -[SBFolderIconImageView invalidateImageUpdatesAssertion:]
  -[SBFolderIconImageView _generateSquareContentsImage]
  -[SBFolderIconImageView setFloatyFolderCrossfadeFraction:]
  -[SBFolderIconImageView setIcon:location:animated:]
  -[SBFolderIconImageView setBackgroundAndIconGridImageAlpha:]
  -[SBFolderIconImageView centerVisibleMiniIconIndex]
  -[SBFolderIconImageView frameForMiniIconAtIndex:]
  -[SBFolderIconImageView concreteBackgroundStyle]
  -[SBFolderIconImageView visibleMiniIconListIndex]
  -[SBFolderIconImageView prepareToCrossfadeWithFloatyFolderView:allowFolderInteraction:]
  -[SBFolderIconImageView backgroundView]
  -[SBFolderIconImageView scrollToGapOrTopIfFullOfPage:animated:]
  -[SBFolderIconImageView folderIconImageCache:didUpdateImagesForFolderIcon:]
  -[SBFolderIconImageView _setAnimating:]
  -[SBFolderIconImageView visibleImageRelativeFrameForMiniIconAtIndex:]
  -[SBFolderIconImageView isAnimating]
  -[SBFolderIconImageView setBackgroundView:]
  -[SBFolderIconImageView iconViewLegibilitySettingsDidChange]
  -[SBFolderIconImageView setIconGridImageAlpha:]
  -[SBFolderIconImageView scrollToFirstGapAnimated:]
  -[SBFolderIconImageView lastVisibleMiniIconIndex]
  -[SBFolderIconImageView iconViewFolderIconImageCacheDidChange]
  -[SBFolderIconImageView setBackgroundStyle:]
  -[SBFolderIconImageView cleanupAfterFloatyFolderCrossfade]
  -[SBFolderIconImageView initWithFrame:]
  -[SBFolderIconImageView fulfillGridImageForPageElement:]
  -[SBFolderIconImageView backgroundStyle]
  -[SBFolderIconImageView updateImageAnimated:]
  -[SBFolderIconImageView dealloc]
  -[SBFolderIconImageView _iconGridImageClass]
  -[SBFolderIconImageView .cxx_destruct]
  -[SBFolderIconImageView setCurrentBackgroundStyle:]
  -[SBFolderIconImageView contentsImage]
  -[SBFolderIconImageView _interPageSpacing]
  -[SBFolderIconImageView prepareForReuse]
  -[SBFolderIconImageView disableImageUpdatesForReason:]
  -[SBFolderIconImageView _showRightMinigrid]
  -[SBFolderIconImageView currentPageIndex]
  -[SBFolderIconImageView _updateRasterization]
  -[SBFolderIconImageView snapshot]
  -[SBFolderIconImageView isPageGridHidden]
  -[SBFolderIconImageView hasCustomBackgroundView]
  -[SBFolderIconImageView iconGridImageAlpha]
  -[SBFolderIconImageView _updateCurrentBackgroundStyle]
  -[SBFolderIconImageView _folderIcon]
  -[SBFolderIconImageView _currentPageElement]
  -[SBFolderIconImageView setPageGridHidden:]
  -[SBFolderIconImageView _updateAccessibilityBackgroundContrast]
  -[SBFolderIconImageView _performScrollingDirection:targetPageIndex:targetPageScrollRow:newLeftElement:newRightElement:animated:]
  -[SBFolderIconImageView _interiorGridSizeClipRect]
  -[SBFolderIconImageView frameForMiniIconAtIndexPath:]
  -[SBFolderIconImageView _showLeftMinigrid]
  -[SBFolderIconImageView _folderIconImageCache]
  -[SBFolderIconImageView representedListLayout]
  -[SBFolderIconImageView _setupGridViewsInDefaultConfiguration]
  -[SBFolderIconImageView currentBackgroundStyle]
  -[SBFolderIconImageView layoutSubviews]
  -[SBFolderIconImageView descriptionBuilderWithMultilinePrefix:]


_SBFolderIconImageViewDisableUpdatesAssertion : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable, BSDescriptionProviding>
 @property  SBFolderIconImageView *folderIconImageView
 @property  NSString *reason
 @property  BOOL invalidated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBFolderIconImageViewDisableUpdatesAssertion dealloc]
  -[_SBFolderIconImageViewDisableUpdatesAssertion .cxx_destruct]
  -[_SBFolderIconImageViewDisableUpdatesAssertion folderIconImageView]
  -[_SBFolderIconImageViewDisableUpdatesAssertion succinctDescriptionBuilder]
  -[_SBFolderIconImageViewDisableUpdatesAssertion succinctDescription]
  -[_SBFolderIconImageViewDisableUpdatesAssertion initWithFolderIconImageView:reason:]
  -[_SBFolderIconImageViewDisableUpdatesAssertion isInvalidated]
  -[_SBFolderIconImageViewDisableUpdatesAssertion setInvalidated:]
  -[_SBFolderIconImageViewDisableUpdatesAssertion invalidate]
  -[_SBFolderIconImageViewDisableUpdatesAssertion reason]
  -[_SBFolderIconImageViewDisableUpdatesAssertion descriptionWithMultilinePrefix:]
  -[_SBFolderIconImageViewDisableUpdatesAssertion descriptionBuilderWithMultilinePrefix:]


SBIconListViewDominoPivotAnimator : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayoutAnimating>
 @property  unsigned long pivotIconIndex
 @property  SBIcon *pivotIcon
 @property  <SBIconListViewDominoPivotAnimatorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewDominoPivotAnimator initWithPivotIcon:]
  -[SBIconListViewDominoPivotAnimator pivotIcon]
  -[SBIconListViewDominoPivotAnimator .cxx_destruct]
  -[SBIconListViewDominoPivotAnimator pivotIconIndex]
  -[SBIconListViewDominoPivotAnimator setPivotIconIndex:]
  -[SBIconListViewDominoPivotAnimator iconListView:wantsAnimatedLayoutForIconView:withParameters:alongsideAnimationBlock:]
  -[SBIconListViewDominoPivotAnimator iconListView:wantsAnimatedRemovalForIconViews:completionHandler:]
  -[SBIconListViewDominoPivotAnimator setDelegate:]
  -[SBIconListViewDominoPivotAnimator delegate]


SBHWidgetConfigurationFlipAnimator : NSObject /usr/lib/libSystem.B.dylib <SBIconViewObserver, SBHWidgetConfigurationAnimating>
 @property  SBHWidgetSettings *widgetSettings
 @property  SBFTouchPassThroughView *matchMoveView
 @property  SBHWidgetConfigurationTransformView *sourceContainerView
 @property  UIView *targetSuperview
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceContentFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} targetContentFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} homeScreenContentFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceContentFrameInMatchMoveViewSpace
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} targetContentFrameInMatchMoveViewSpace
 @property  long long currentEndpoint
 @property  double startingFlipFraction
 @property  double endingFlipFraction
 @property  double startingRotationAngle
 @property  double endingRotationAngle
 @property  UIViewFloatAnimatableProperty *flipAnimatableProperty
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHWidgetConfigurationFlipAnimator iconViewWasRecycled:]
  -[SBHWidgetConfigurationFlipAnimator init]
  -[SBHWidgetConfigurationFlipAnimator dealloc]
  -[SBHWidgetConfigurationFlipAnimator .cxx_destruct]
  -[SBHWidgetConfigurationFlipAnimator setSourceContentFrame:]
  -[SBHWidgetConfigurationFlipAnimator setTargetContentFrame:]
  -[SBHWidgetConfigurationFlipAnimator finalizeAnimationAtEndpoint:withContext:]
  -[SBHWidgetConfigurationFlipAnimator flipAnimatableProperty]
  -[SBHWidgetConfigurationFlipAnimator setHomeScreenContentFrame:]
  -[SBHWidgetConfigurationFlipAnimator setMatchMoveView:]
  -[SBHWidgetConfigurationFlipAnimator setTargetContentFrameInMatchMoveViewSpace:]
  -[SBHWidgetConfigurationFlipAnimator setSourceContentFrameInMatchMoveViewSpace:]
  -[SBHWidgetConfigurationFlipAnimator setSourceContainerView:]
  -[SBHWidgetConfigurationFlipAnimator setTargetSuperview:]
  -[SBHWidgetConfigurationFlipAnimator setFlipAnimatableProperty:]
  -[SBHWidgetConfigurationFlipAnimator endingFlipFraction]
  -[SBHWidgetConfigurationFlipAnimator startingFlipFraction]
  -[SBHWidgetConfigurationFlipAnimator startingRotationAngle]
  -[SBHWidgetConfigurationFlipAnimator endingRotationAngle]
  -[SBHWidgetConfigurationFlipAnimator setStartingFlipFraction:]
  -[SBHWidgetConfigurationFlipAnimator setEndingFlipFraction:]
  -[SBHWidgetConfigurationFlipAnimator setStartingRotationAngle:]
  -[SBHWidgetConfigurationFlipAnimator setEndingRotationAngle:]
  -[SBHWidgetConfigurationFlipAnimator _configureForEndpoint:context:inMode:completion:]
  -[SBHWidgetConfigurationFlipAnimator targetSuperview]
  -[SBHWidgetConfigurationFlipAnimator matchMoveView]
  -[SBHWidgetConfigurationFlipAnimator currentEndpoint]
  -[SBHWidgetConfigurationFlipAnimator setCurrentEndpoint:]
  -[SBHWidgetConfigurationFlipAnimator targetContentFrameInMatchMoveViewSpace]
  -[SBHWidgetConfigurationFlipAnimator sourceContainerView]
  -[SBHWidgetConfigurationFlipAnimator sourceContentFrameInMatchMoveViewSpace]
  -[SBHWidgetConfigurationFlipAnimator homeScreenContentFrame]
  -[SBHWidgetConfigurationFlipAnimator prepareToAnimateFromEndpoint:withContext:]
  -[SBHWidgetConfigurationFlipAnimator animateToEndpoint:withContext:completion:]
  -[SBHWidgetConfigurationFlipAnimator sourceContentFrame]
  -[SBHWidgetConfigurationFlipAnimator targetContentFrame]
  -[SBHWidgetConfigurationFlipAnimator widgetSettings]


SBHWidgetConfigurationTransformView : SBFTouchPassThroughView /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[SBHWidgetConfigurationTransformView layerClass]


_SBHIconLibraryTableView : UITableView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  SBHFeatherBlurView *headerBlur

  // instance methods
  -[_SBHIconLibraryTableView initWithFrame:style:]
  -[_SBHIconLibraryTableView .cxx_destruct]
  -[_SBHIconLibraryTableView headerBlur]
  -[_SBHIconLibraryTableView setHeaderBlur:]
  -[_SBHIconLibraryTableView layoutSubviews]


SBHIconLibraryTableViewController : SBHTableViewController <SBIconObserver, SBIconViewObserver, PTSettingsKeyObserver, UITableViewDragDelegate, UIGestureRecognizerDelegate, SBHTableViewIconLibraryObserver, SBHLibraryChildViewController, SBHSearchResultsUpdating>
 @property  SBHTableViewIconLibrary *library
 @property  SBHIconLibraryQuery *currentQuery
 @property  SBHIconTableViewDiffableDataSource *dataSource
 @property  <SBIconViewProviding> *iconViewProvider
 @property  <SBHIconLibraryTableViewControllerObserver> *observer
 @property  SBHIconModel *iconModel
 @property  SBRootFolder *rootFolder
 @property  SBHLibraryCategoryMap *libraryCategoryMap
 @property  UIView *headerBlurView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBHIconImageCache *iconImageCache
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  NSSet *presentedIconLocations
 @property  _UILegibilitySettings *legibilitySettings
 @property  SBHLibrarySearchController *searchController

  // class methods
  +[SBHIconLibraryTableViewController tableViewClass]

  // instance methods
  -[SBHIconLibraryTableViewController rootFolder]
  -[SBHIconLibraryTableViewController viewDidLoad]
  -[SBHIconLibraryTableViewController searchController]
  -[SBHIconLibraryTableViewController setRootFolder:]
  -[SBHIconLibraryTableViewController setIconModel:]
  -[SBHIconLibraryTableViewController tableView:viewForHeaderInSection:]
  -[SBHIconLibraryTableViewController tableView:heightForHeaderInSection:]
  -[SBHIconLibraryTableViewController updateSearchResultsForSearchController:]
  -[SBHIconLibraryTableViewController setSearchController:]
  -[SBHIconLibraryTableViewController tableView:didEndDisplayingCell:forRowAtIndexPath:]
  -[SBHIconLibraryTableViewController library]
  -[SBHIconLibraryTableViewController setListLayoutProvider:]
  -[SBHIconLibraryTableViewController iconViewForIcon:location:]
  -[SBHIconLibraryTableViewController settings:changedValueForKey:]
  -[SBHIconLibraryTableViewController init]
  -[SBHIconLibraryTableViewController iconAccessoriesDidUpdate:]
  -[SBHIconLibraryTableViewController legibilitySettings]
  -[SBHIconLibraryTableViewController setIconImageCache:]
  -[SBHIconLibraryTableViewController tableView:contextMenuConfigurationForRowAtIndexPath:point:]
  -[SBHIconLibraryTableViewController currentQuery]
  -[SBHIconLibraryTableViewController isDisplayingIconView:inLocation:]
  -[SBHIconLibraryTableViewController tableView:didSelectRowAtIndexPath:]
  -[SBHIconLibraryTableViewController iconImageCache]
  -[SBHIconLibraryTableViewController _iconFilter]
  -[SBHIconLibraryTableViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[SBHIconLibraryTableViewController .cxx_destruct]
  -[SBHIconLibraryTableViewController _updateHiddenIconViewForScrolling:]
  -[SBHIconLibraryTableViewController firstIconViewForIcon:]
  -[SBHIconLibraryTableViewController gestureRecognizerShouldBegin:]
  -[SBHIconLibraryTableViewController setIconViewProvider:]
  -[SBHIconLibraryTableViewController tableView:titleForHeaderInSection:]
  -[SBHIconLibraryTableViewController _handleClippingScrollViewDidScroll:]
  -[SBHIconLibraryTableViewController _isViewControllerVisible]
  -[SBHIconLibraryTableViewController firstIconViewForIcon:inLocations:]
  -[SBHIconLibraryTableViewController isDisplayingIcon:inLocations:]
  -[SBHIconLibraryTableViewController isDisplayingIconView:]
  -[SBHIconLibraryTableViewController setLegibilitySettings:]
  -[SBHIconLibraryTableViewController iconViewWillBeginDrag:]
  -[SBHIconLibraryTableViewController iconViewDidEndDrag:]
  -[SBHIconLibraryTableViewController _findHiddenIconView]
  -[SBHIconLibraryTableViewController scrollViewDidEndDecelerating:]
  -[SBHIconLibraryTableViewController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHIconLibraryTableViewController initWithNibName:bundle:]
  -[SBHIconLibraryTableViewController traitCollectionDidChange:]
  -[SBHIconLibraryTableViewController scrollViewWillBeginDragging:]
  -[SBHIconLibraryTableViewController viewDidAppear:]
  -[SBHIconLibraryTableViewController presentedIconLocations]
  -[SBHIconLibraryTableViewController enumerateDisplayedIconViewsUsingBlock:]
  -[SBHIconLibraryTableViewController setObserver:]
  -[SBHIconLibraryTableViewController dataSource]
  -[SBHIconLibraryTableViewController _handleDidTapEmptyResultsArea:]
  -[SBHIconLibraryTableViewController _setupObservedIcons]
  -[SBHIconLibraryTableViewController _updateTableViewSeparatorsForTraitCollection]
  -[SBHIconLibraryTableViewController _reloadAppIcons:]
  -[SBHIconLibraryTableViewController _teardownObservedIcons]
  -[SBHIconLibraryTableViewController _configureCell:forIcon:]
  -[SBHIconLibraryTableViewController _handleAlphaFadeForCellAtIndexPath:]
  -[SBHIconLibraryTableViewController _updateShowHeadersFromQueryResult:]
  -[SBHIconLibraryTableViewController _reloadVisibleCells]
  -[SBHIconLibraryTableViewController _iconViewAtIndexPath:]
  -[SBHIconLibraryTableViewController _logLaunchOfIcon:atIndexPath:]
  -[SBHIconLibraryTableViewController _observeIcon:]
  -[SBHIconLibraryTableViewController _unobserveIcon:]
  -[SBHIconLibraryTableViewController _handleLowQualityAlphaFade]
  -[SBHIconLibraryTableViewController _refreshLibraryForSearchUpdate:]
  -[SBHIconLibraryTableViewController _indexPathForDefaultSearchResult]
  -[SBHIconLibraryTableViewController _isIndexPathVisible:]
  -[SBHIconLibraryTableViewController _visibleIcons]
  -[SBHIconLibraryTableViewController _visibleSectionIndicies]
  -[SBHIconLibraryTableViewController _iconViewForIcon:]
  -[SBHIconLibraryTableViewController _refreshIconIfVisible:]
  -[SBHIconLibraryTableViewController _startObservingIcon:]
  -[SBHIconLibraryTableViewController _stopObservingIcon:]
  -[SBHIconLibraryTableViewController _processDragItemsForIconView:session:]
  -[SBHIconLibraryTableViewController _iconViewForDragSession:]
  -[SBHIconLibraryTableViewController _resetDragSession:]
  -[SBHIconLibraryTableViewController _mapIconView:forDragSession:]
  -[SBHIconLibraryTableViewController _shouldShowNoResultsViewForQueryResult:]
  -[SBHIconLibraryTableViewController _createIconView]
  -[SBHIconLibraryTableViewController _visibleIndexPaths]
  -[SBHIconLibraryTableViewController _reloadRowsAtIndexPaths:]
  -[SBHIconLibraryTableViewController _notifyDelegatesOfAppLaunchFromSearchController:]
  -[SBHIconLibraryTableViewController _iconModelWillReload:]
  -[SBHIconLibraryTableViewController _refreshLibrary:]
  -[SBHIconLibraryTableViewController _dragSessionForIconView:]
  -[SBHIconLibraryTableViewController setHeaderBlurView:]
  -[SBHIconLibraryTableViewController listLayoutProvider]
  -[SBHIconLibraryTableViewController isDisplayingIcon:inLocation:]
  -[SBHIconLibraryTableViewController scrollViewDidScroll:]
  -[SBHIconLibraryTableViewController iconModel]
  -[SBHIconLibraryTableViewController libraryCategoryMap]
  -[SBHIconLibraryTableViewController setLibraryCategoryMap:]
  -[SBHIconLibraryTableViewController initWithStyle:]
  -[SBHIconLibraryTableViewController viewWillAppear:]
  -[SBHIconLibraryTableViewController iconLibrary:hasUpdatedQueryResult:]
  -[SBHIconLibraryTableViewController scrollViewDidEndScrollingAnimation:]
  -[SBHIconLibraryTableViewController viewDidDisappear:]
  -[SBHIconLibraryTableViewController isDisplayingIcon:]
  -[SBHIconLibraryTableViewController firstIconViewForIcon:excludingLocations:]
  -[SBHIconLibraryTableViewController viewWillDisappear:]
  -[SBHIconLibraryTableViewController headerBlurView]
  -[SBHIconLibraryTableViewController searchControllerShouldReturn:]
  -[SBHIconLibraryTableViewController tableView:dragSessionWillBegin:]
  -[SBHIconLibraryTableViewController iconViewProvider]
  -[SBHIconLibraryTableViewController observer]
  -[SBHIconLibraryTableViewController tableView:dragSessionDidEnd:]
  -[SBHIconLibraryTableViewController tableView:dragPreviewParametersForRowAtIndexPath:]
  -[SBHIconLibraryTableViewController tableView:itemsForBeginningDragSession:atIndexPath:]
  -[SBHIconLibraryTableViewController tableView:dragSessionAllowsMoveOperation:]
  -[SBHIconLibraryTableViewController initWithCoder:]
  -[SBHIconLibraryTableViewController isPresentingIconLocation:]
  -[SBHIconLibraryTableViewController scrollViewDidEndDragging:willDecelerate:]


SBHIconLibraryQueryContext : NSObject /usr/lib/libSystem.B.dylib
 @property  NSUUID *UUID
 @property  SBHIconLibraryQuery *query

  // instance methods
  -[SBHIconLibraryQueryContext objectForKeyedSubscript:]
  -[SBHIconLibraryQueryContext init]
  -[SBHIconLibraryQueryContext initWithQuery:]
  -[SBHIconLibraryQueryContext .cxx_destruct]
  -[SBHIconLibraryQueryContext query]
  -[SBHIconLibraryQueryContext setObject:forKeyedSubscript:]
  -[SBHIconLibraryQueryContext UUID]
  -[SBHIconLibraryQueryContext isEqual:]
  -[SBHIconLibraryQueryContext isEqualToQueryContext:]


SBHIconLibraryAbstractQueryEngine : NSObject /usr/lib/libSystem.B.dylib <SBHIconLibraryQueryEngine>
 @property  NSObject<OS_dispatch_queue> *processingQueue
 @property  SBHIconModel *iconModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHIconLibraryAbstractQueryEngine _leafIdentifiersForBundleIdentifier:]

  // instance methods
  -[SBHIconLibraryAbstractQueryEngine processingQueue]
  -[SBHIconLibraryAbstractQueryEngine init]
  -[SBHIconLibraryAbstractQueryEngine _iconModelDidReload:]
  -[SBHIconLibraryAbstractQueryEngine .cxx_destruct]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_isIconModelReloading]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_teardownQueryContext:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_startNewQueryContext:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_addIcons:iconLibraryQueryContext:notifyDelegate:]
  -[SBHIconLibraryAbstractQueryEngine _iconModelWillReload:]
  -[SBHIconLibraryAbstractQueryEngine _iconModelNeedsIconAdded:]
  -[SBHIconLibraryAbstractQueryEngine _iconModelNeedsIconReplaced:]
  -[SBHIconLibraryAbstractQueryEngine _iconModelNeedsIconRemoved:]
  -[SBHIconLibraryAbstractQueryEngine _iconModelVisibilityDidChange:]
  -[SBHIconLibraryAbstractQueryEngine _mapBundleIdentifiersToIcons:completion:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_lastQueryResultForContext:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_sortComperatorForQueryContext:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_noteQueryResultsWereUpdated:iconLibraryQueryContext:notifyDelegate:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_observerDispatchQueryResultsWereUpdated:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_teardownQueryContext:removeContext:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_isBundleIdentifierValid:iconLibraryQueryContext:]
  -[SBHIconLibraryAbstractQueryEngine _addItemsWithBundleIdentifiers:iconLibraryQueryContext:notifyDelegate:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_removeItemsWithBundleIdentifiers:iconLibraryQueryContext:notifyDelegate:]
  -[SBHIconLibraryAbstractQueryEngine _processingQueue_observerDispatchError:forQuery:]
  -[SBHIconLibraryAbstractQueryEngine iconModel]
  -[SBHIconLibraryAbstractQueryEngine removeObserver:]
  -[SBHIconLibraryAbstractQueryEngine executeQuery:]
  -[SBHIconLibraryAbstractQueryEngine initWithIconModel:]
  -[SBHIconLibraryAbstractQueryEngine addObserver:]


SBHIconViewContextMenuStateController : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBHIconViewContextMenuStateController sharedInstance]

  // instance methods
  -[SBHIconViewContextMenuStateController areAnyIconViewContextMenusShowing]
  -[SBHIconViewContextMenuStateController init]
  -[SBHIconViewContextMenuStateController noteFolderControllerWillClose:]
  -[SBHIconViewContextMenuStateController .cxx_destruct]
  -[SBHIconViewContextMenuStateController floatyFolderViewDidScrollHiddenIconViewAway:]
  -[SBHIconViewContextMenuStateController areAnyIconViewContextMenusAnimating]
  -[SBHIconViewContextMenuStateController registerIconView:]
  -[SBHIconViewContextMenuStateController _firePendingIconAnimationBlocks]
  -[SBHIconViewContextMenuStateController iconViewWillPresentContextMenu:]
  -[SBHIconViewContextMenuStateController iconViewWillDismissContextMenu:]
  -[SBHIconViewContextMenuStateController iconViewWillAnimateContextMenu:]
  -[SBHIconViewContextMenuStateController dismissAppIconForceTouchControllers:]
  -[SBHIconViewContextMenuStateController earlyTerminateAnyContextMenuAnimations]
  -[SBHIconViewContextMenuStateController performAfterContextMenuAnimationsHaveCompleted:]
  -[SBHIconViewContextMenuStateController iconViewDidAnimateContextMenu:]
  -[SBHIconViewContextMenuStateController unregisterIconView:]


SBFloatyFolderController : SBFolderController
 @property  unsigned long backgroundEffect

  // class methods
  +[SBFloatyFolderController configurationClass]
  +[SBFloatyFolderController _contentViewClass]
  +[SBFloatyFolderController iconLocation]

  // instance methods
  -[SBFloatyFolderController isDisplayingIconView:inLocation:]
  -[SBFloatyFolderController backgroundEffect]
  -[SBFloatyFolderController folderView:didBeginEditingTitle:]
  -[SBFloatyFolderController folderView:didEndEditingTitle:]
  -[SBFloatyFolderController presentedIconLocations]
  -[SBFloatyFolderController floatyFolderView]
  -[SBFloatyFolderController isDisplayingIcon:inLocation:]
  -[SBFloatyFolderController setBackgroundEffect:]
  -[SBFloatyFolderController isPresentingIconLocation:]


SBHMultiplexingViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  NSHashTable *observers
 @property  SBHMultiplexingManager *multiplexingManager
 @property  double level
 @property  NSString *identifier
 @property  UIViewController *multiplexedViewController

  // instance methods
  -[SBHMultiplexingViewController level]
  -[SBHMultiplexingViewController setObservers:]
  -[SBHMultiplexingViewController shouldAutomaticallyForwardAppearanceMethods]
  -[SBHMultiplexingViewController dealloc]
  -[SBHMultiplexingViewController .cxx_destruct]
  -[SBHMultiplexingViewController initWithLevel:identifier:]
  -[SBHMultiplexingViewController setMultiplexingManager:]
  -[SBHMultiplexingViewController multiplexedViewController]
  -[SBHMultiplexingViewController activateWithViewController:]
  -[SBHMultiplexingViewController deactivate]
  -[SBHMultiplexingViewController identifier]
  -[SBHMultiplexingViewController observers]
  -[SBHMultiplexingViewController multiplexingManager]
  -[SBHMultiplexingViewController _setUpMultiplexedViewController]
  -[SBHMultiplexingViewController viewWillAppear:]
  -[SBHMultiplexingViewController removeObserver:]
  -[SBHMultiplexingViewController _canShowWhileLocked]
  -[SBHMultiplexingViewController addObserver:]


SBHAddWidgetButton : UIButton /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  MTStylingProvidingSolidColorView *backgroundView
 @property  UIView *highlightView

  // instance methods
  -[SBHAddWidgetButton backgroundView]
  -[SBHAddWidgetButton setBackgroundView:]
  -[SBHAddWidgetButton initWithFrame:]
  -[SBHAddWidgetButton highlightView]
  -[SBHAddWidgetButton .cxx_destruct]
  -[SBHAddWidgetButton setHighlighted:]
  -[SBHAddWidgetButton setHighlightView:]
  -[SBHAddWidgetButton mt_removeAllVisualStyling]
  -[SBHAddWidgetButton mt_applyVisualStyling:]
  -[SBHAddWidgetButton layoutSubviews]


SBHRecentsDocumentExtensionProvider : NSObject /usr/lib/libSystem.B.dylib <_SBUIPopoverExtensionHostDelegate>
 @property  SBHRecentsDocumentExtensionWrappingViewController *wrappingViewController
 @property  SBUIPopoverExtensionHostViewController *hostViewController
 @property  NSExtension *extension
 @property  <_SBUIPopoverExtensionRemoteInterface> *remoteService
 @property  <SBHRecentsDocumentExtensionProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHRecentsDocumentExtensionProvider extension]
  -[SBHRecentsDocumentExtensionProvider init]
  -[SBHRecentsDocumentExtensionProvider .cxx_destruct]
  -[SBHRecentsDocumentExtensionProvider canShowRecentsDocumentExtensionProviderForBundleIdentifier:]
  -[SBHRecentsDocumentExtensionProvider recentsDocumentViewControllerForBundleIdentifier:]
  -[SBHRecentsDocumentExtensionProvider hostViewController]
  -[SBHRecentsDocumentExtensionProvider setExtension:]
  -[SBHRecentsDocumentExtensionProvider _loadExtensionWithCompletion:]
  -[SBHRecentsDocumentExtensionProvider wrappingViewController]
  -[SBHRecentsDocumentExtensionProvider _loadRemoteViewControllerWithBundleIdentifer:]
  -[SBHRecentsDocumentExtensionProvider remoteService]
  -[SBHRecentsDocumentExtensionProvider _extensionWillExit:]
  -[SBHRecentsDocumentExtensionProvider setRemoteService:]
  -[SBHRecentsDocumentExtensionProvider _teardownHostViewController]
  -[SBHRecentsDocumentExtensionProvider _preferredExtensionIdentifier]
  -[SBHRecentsDocumentExtensionProvider _setupHostViewController:]
  -[SBHRecentsDocumentExtensionProvider popoverHostExtensionRequestsDismiss:]
  -[SBHRecentsDocumentExtensionProvider popoverHostExtensionDidExit:]
  -[SBHRecentsDocumentExtensionProvider setWrappingViewController:]
  -[SBHRecentsDocumentExtensionProvider setDelegate:]
  -[SBHRecentsDocumentExtensionProvider delegate]


SBHAvocadoFileWidgetExtensionProvider : SBHRecentsDocumentExtensionProvider
  // instance methods
  -[SBHAvocadoFileWidgetExtensionProvider _preferredExtensionIdentifier]
  -[SBHAvocadoFileWidgetExtensionProvider _setupHostViewController:]


SBHLibraryPodFolderControllerConfiguration : SBFolderControllerConfiguration
 @property  SBHLibraryCategoriesRootFolder *categoriesFolder
 @property  SBHLibraryCategoryMapProvider *categoryMapProvider

  // instance methods
  -[SBHLibraryPodFolderControllerConfiguration .cxx_destruct]
  -[SBHLibraryPodFolderControllerConfiguration setCategoryMapProvider:]
  -[SBHLibraryPodFolderControllerConfiguration categoryMapProvider]
  -[SBHLibraryPodFolderControllerConfiguration categoriesFolder]
  -[SBHLibraryPodFolderControllerConfiguration setCategoriesFolder:]
  -[SBHLibraryPodFolderControllerConfiguration initWithConfiguration:]
  -[SBHLibraryPodFolderControllerConfiguration descriptionBuilderWithMultilinePrefix:]


SBHWidgetConfigurationAnimatorAdapter : NSObject /usr/lib/libSystem.B.dylib <SBViewControllerReversibleAnimatedTransitioning>
 @property  unsigned long transitionToken
 @property  <SBHWidgetConfigurationAnimating> *animator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHWidgetConfigurationAnimatorAdapter supportsRestarting]
  -[SBHWidgetConfigurationAnimatorAdapter transitionDuration:]
  -[SBHWidgetConfigurationAnimatorAdapter initWithAnimator:]
  -[SBHWidgetConfigurationAnimatorAdapter animator]
  -[SBHWidgetConfigurationAnimatorAdapter cancelTransition:withCompletionSpeed:completionCurve:]
  -[SBHWidgetConfigurationAnimatorAdapter .cxx_destruct]
  -[SBHWidgetConfigurationAnimatorAdapter animateTransition:]
  -[SBHWidgetConfigurationAnimatorAdapter transitionToken]
  -[SBHWidgetConfigurationAnimatorAdapter setTransitionToken:]


SBIconListView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconObserver, PTSettingsKeyObserver, SBIconListModelObserver, BSDescriptionProviding>
 @property  SBIconListViewIconLocationTransitionHandler *currentIconLocationTransitionHandler
 @property  Class baseIconViewClass
 @property  unsigned long iconRowsForCurrentOrientation
 @property  unsigned long iconColumnsForCurrentOrientation
 @property  unsigned long iconsInRowForSpacingCalculation
 @property  unsigned long iconRowsForSpacingCalculation
 @property  unsigned long maximumIconCount
 @property  <SBIconListLayoutProvider> *layoutProvider
 @property  <SBIconListLayout> *layout
 @property  long long orientation
 @property  BOOL adaptsOrientationToTraitCollection
 @property  BOOL vertical
 @property  double statusBarHeight
 @property  BOOL editing
 @property  BOOL purged
 @property  BOOL layoutReversed
 @property  BOOL pausesIconsForScrolling
 @property  BOOL adjustsColumnPositionsForFullScreenWidth
 @property  unsigned long userInterfaceLayoutDirectionHandling
 @property  long long userInterfaceLayoutDirection
 @property  unsigned long iconViewConfigurationOptions
 @property  _UILegibilitySettings *legibilitySettings
 @property  <SBIconListLayoutDelegate> *layoutDelegate
 @property  SBIconListModel *model
 @property  <SBIconViewProviding> *iconViewProvider
 @property  NSArray *icons
 @property  NSArray *visibleIcons
 @property  BOOL empty
 @property  BOOL full
 @property  NSString *iconLocation
 @property  {CGSize=dd} alignmentIconSize
 @property  BOOL automaticallyAdjustsLayoutMetricsToFit
 @property  double horizontalIconPadding
 @property  double verticalIconPadding
 @property  {UIEdgeInsets=dddd} additionalLayoutInsets
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} iconLayoutRect
 @property  {CGSize=dd} iconSpacing
 @property  {CGSize=dd} effectiveIconSpacing
 @property  BOOL boundsSizeTracksContentSize
 @property  SBIconListViewLayoutMetrics *layoutMetrics
 @property  unsigned long gridCellInfoOptions
 @property  {_NSRange=QQ} visibleColumnRange
 @property  {_NSRange=QQ} visibleRowRange
 @property  {SBIconListPredictedVisibleColumn=Qd} predictedVisibleColumn
 @property  BOOL iconsNeedLayout
 @property  double iconContentScale
 @property  <SBIconListViewDragDelegate> *dragDelegate
 @property  BOOL wantsFastIconReordering
 @property  BOOL occluded
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  BOOL transitioningIconLocation
 @property  BOOL alignsIconsOnPixelBoundaries
 @property  long long layoutInsetsMode
 @property  unsigned long numberOfDisplayedIconViews
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconListView dominoAnimator]
  +[SBIconListView defaultAnimator]
  +[SBIconListView builtInAnimatorForAnimationType:]
  +[SBIconListView rotationAnchor]
  +[SBIconListView clusterAnimator]
  +[SBIconListView defaultIconViewConfigurationOptions]
  +[SBIconListView multiStageAnimator]
  +[SBIconListView layoutMetricsForParameters:listModel:]
  +[SBIconListView defaultFrameForOrientation:]

  // instance methods
  -[SBIconListView isFull]
  -[SBIconListView configureIconView:forIcon:]
  -[SBIconListView fadeInIconView:]
  -[SBIconListView layoutDelegate]
  -[SBIconListView removeAllIconViews]
  -[SBIconListView ignoreNextWindowChange]
  -[SBIconListView setAutomaticallyAdjustsLayoutMetricsToFit:]
  -[SBIconListView iconAtPoint:index:]
  -[SBIconListView enumerateIconsUsingBlock:]
  -[SBIconListView layoutScale]
  -[SBIconListView centerForIconAtIndex:]
  -[SBIconListView layoutIconsNow]
  -[SBIconListView removeIconView:]
  -[SBIconListView setVisibleColumnRange:predictedVisibleColumn:visibleRowRange:]
  -[SBIconListView fadeInIcon:]
  -[SBIconListView fractionalCoordinateAtPoint:]
  -[SBIconListView addIconViewConfigurationOption:]
  -[SBIconListView iconGridSizeForClass:]
  -[SBIconListView setAdditionalLayoutInsets:]
  -[SBIconListView boundsSizeTracksContentSize]
  -[SBIconListView makeIconView]
  -[SBIconListView popIcon:]
  -[SBIconListView setPurged:]
  -[SBIconListView setVisibleColumnRange:]
  -[SBIconListView coordinateForIcon:]
  -[SBIconListView getLayoutMetricsParameters:]
  -[SBIconListView iconImageInfoForGridSizeClass:]
  -[SBIconListView originForIconAtIndex:]
  -[SBIconListView allowsAddingIconCount:]
  -[SBIconListView addDragObserver:forDropSession:]
  -[SBIconListView alignmentIconViewSize]
  -[SBIconListView isDock]
  -[SBIconListView iconCoordinateForIndex:metrics:]
  -[SBIconListView setLayoutDelegate:]
  -[SBIconListView setAlphaForAllIcons:]
  -[SBIconListView layoutIconsIfNeeded:animationType:options:]
  -[SBIconListView rowForIcon:]
  -[SBIconListView dragDelegate]
  -[SBIconListView horizontalIconPadding]
  -[SBIconListView iconImageSize]
  -[SBIconListView iconLocationTransitionHandler:setProgress:]
  -[SBIconListView _teardownLayoutRunloopObserverIfNeeded]
  -[SBIconListView settings:changedValueForKey:]
  -[SBIconListView beginTransitionToIconLocation:reason:]
  -[SBIconListView originForIcon:]
  -[SBIconListView maximumIconCount]
  -[SBIconListView removeAllIconAnimations]
  -[SBIconListView iconContentScale]
  -[SBIconListView adjustsColumnPositionsForFullScreenWidth]
  -[SBIconListView setIconContentScale:]
  -[SBIconListView visibleGridCellIndexes]
  -[SBIconListView legibilitySettings]
  -[SBIconListView containsIcon:]
  -[SBIconListView setIconImageCache:]
  -[SBIconListView gridCellInfoOptions]
  -[SBIconListView _setupLayoutRunLoopObserver]
  -[SBIconListView dragPlacementForMovingIconOfGridSizeClass:toPoint:icon:options:]
  -[SBIconListView automaticallyAdjustsLayoutMetricsToFit]
  -[SBIconListView _removeIconViewsForIcons:]
  -[SBIconListView wantsFastIconReordering]
  -[SBIconListView layoutMetricsForOrientation:]
  -[SBIconListView rowAtPoint:metrics:]
  -[SBIconListView columnAtPoint:fractionOfDistanceThroughColumn:]
  -[SBIconListView removeLayoutObserver:]
  -[SBIconListView setPausesIconsForScrolling:]
  -[SBIconListView tintColor]
  -[SBIconListView coordinateForIconAtIndex:]
  -[SBIconListView userInterfaceLayoutDirection]
  -[SBIconListView shouldReparentView:]
  -[SBIconListView centerForIcon:]
  -[SBIconListView layoutIconsIfNeeded]
  -[SBIconListView _applyIconPaddingSettings]
  -[SBIconListView dealloc]
  -[SBIconListView iconLayoutRect]
  -[SBIconListView layoutInsetsForOrientation:]
  -[SBIconListView enumerateIconViewsUsingBlock:]
  -[SBIconListView setEditing:]
  -[SBIconListView columnAtPoint:metrics:fractionOfDistanceThroughColumn:]
  -[SBIconListView _allIconsVisibleColumnOrRowRange]
  -[SBIconListView iconAtCoordinate:metrics:]
  -[SBIconListView _iconIsGapAdjacentAtIndex:]
  -[SBIconListView isTransitioningIconLocation]
  -[SBIconListView iconImageCache]
  -[SBIconListView .cxx_destruct]
  -[SBIconListView layoutOrientation]
  -[SBIconListView centerForIconCoordinate:metrics:]
  -[SBIconListView originForIconAtCoordinate:metrics:]
  -[SBIconListView gridCellIndexForCoordinate:metrics:]
  -[SBIconListView _captureOnlyBackgroundAssertionDidInvalidate:]
  -[SBIconListView setModel:]
  -[SBIconListView performZoomOutSpecialIconAnimationWithIcon:completionHandler:]
  -[SBIconListView originForIconAtCoordinate:metrics:options:]
  -[SBIconListView displayedIconViewForIcon:]
  -[SBIconListView iconsInRowForSpacingCalculation]
  -[SBIconListView bestGridCellIndexForInsertingIcon:atCoordinate:]
  -[SBIconListView iconList:didReplaceIcon:withIcon:]
  -[SBIconListView setDragDelegate:]
  -[SBIconListView userInterfaceLayoutDirectionHandling]
  -[SBIconListView iconGridSizeClassDidChange:]
  -[SBIconListView setIconViewProvider:]
  -[SBIconListView verticalIconPadding]
  -[SBIconListView icons]
  -[SBIconListView setLayoutReversed:]
  -[SBIconListView setCurrentIconLocationTransitionHandler:]
  -[SBIconListView _updateVisibleIconViewsWithOldVisibleGridCellIndexes:metrics:]
  -[SBIconListView _removeCaptureOnlyBackgroundViewForRemovedIconIfNecessary:]
  -[SBIconListView setVisibleRowRange:]
  -[SBIconListView succinctDescriptionBuilder]
  -[SBIconListView iconImageSizeForGridSizeClass:]
  -[SBIconListView setPredictedVisibleColumn:]
  -[SBIconListView enumerateVisibleIconsUsingBlock:]
  -[SBIconListView iconsNeedLayout]
  -[SBIconListView rowAtPoint:]
  -[SBIconListView intrinsicContentSize]
  -[SBIconListView visibleRowRange]
  -[SBIconListView getLayoutMetricsParameters:orientation:]
  -[SBIconListView bestIndexForInsertingIcon:atCoordinate:]
  -[SBIconListView performDefaultAnimatedLayoutUpdateForIconView:withParameters:]
  -[SBIconListView rectForIconCoordinate:]
  -[SBIconListView layoutIconsIfNeededUsingAnimator:options:]
  -[SBIconListView isLayoutReversed]
  -[SBIconListView _updateEditingStateForIcons:animated:]
  -[SBIconListView pauseLayout:forIconView:withReason:]
  -[SBIconListView isDisplayingIconView:]
  -[SBIconListView isPurged]
  -[SBIconListView layoutProvider]
  -[SBIconListView willMoveToWindow:]
  -[SBIconListView setLegibilitySettings:]
  -[SBIconListView hideAllIcons]
  -[SBIconListView rectForIconAtIndex:]
  -[SBIconListView layoutMetrics]
  -[SBIconListView _overrideOriginForIconAtRowIndex:columnIndex:gridSize:metrics:]
  -[SBIconListView initWithModel:layoutProvider:iconLocation:orientation:iconViewProvider:]
  -[SBIconListView dequeueReusableIconView]
  -[SBIconListView iconViewForCoordinate:]
  -[SBIconListView isRTL]
  -[SBIconListView alignmentIconSize]
  -[SBIconListView baseIconViewClass]
  -[SBIconListView folderIconImageCache]
  -[SBIconListView indexOfIcon:]
  -[SBIconListView performDefaultAnimatedRemovalForIconViews:completionHandler:]
  -[SBIconListView setIconsLabelAlpha:]
  -[SBIconListView visibleColumnRange]
  -[SBIconListView layoutAndCreateIcon:atIndex:]
  -[SBIconListView iconLocationTransitionHandler:completeTransition:]
  -[SBIconListView centerForIconAtIndex:metrics:]
  -[SBIconListView removeIconViewConfigurationOption:]
  -[SBIconListView iconCoordinateForGridCellIndex:metrics:]
  -[SBIconListView effectiveIconSpacing]
  -[SBIconListView setFolderIconImageCache:]
  -[SBIconListView succinctDescription]
  -[SBIconListView sizeThatFits:]
  -[SBIconListView setBoundsSizeTracksContentSize:]
  -[SBIconListView requireAllIconsShownForReason:]
  -[SBIconListView coordinateAtPoint:]
  -[SBIconListView setBounds:]
  -[SBIconListView numberOfDisplayedIconViews]
  -[SBIconListView indexForCoordinate:forOrientation:metrics:]
  -[SBIconListView setLayoutProvider:]
  -[SBIconListView continuousCornerRadiusForGridSizeClass:]
  -[SBIconListView willRotateWithTransitionCoordinator:]
  -[SBIconListView rectForIconCoordinate:metrics:]
  -[SBIconListView setIconsNeedLayout]
  -[SBIconListView showAllIcons]
  -[SBIconListView _addIconViewsForIcons:metrics:]
  -[SBIconListView setAlignsIconsOnPixelBoundaries:]
  -[SBIconListView isShowingAllIcons]
  -[SBIconListView iconRowsForSpacingCalculation]
  -[SBIconListView setFrame:]
  -[SBIconListView removedIcons]
  -[SBIconListView markIcon:asNeedingAnimation:]
  -[SBIconListView setOrientation:]
  -[SBIconListView indexForCoordinate:forOrientation:]
  -[SBIconListView updateEditingStateAnimated:]
  -[SBIconListView _insertCaptureOnlyBackgroundViewForInsertingIconViewIfNecessary:]
  -[SBIconListView isEditing]
  -[SBIconListView performSpecialIconAnimationsWithCompletionHandler:]
  -[SBIconListView cursorHitTestingInsetsForIconSpacing:]
  -[SBIconListView isVertical]
  -[SBIconListView columnAtPoint:]
  -[SBIconListView predictedVisibleColumn]
  -[SBIconListView horizontalBumpForColumn:metrics:]
  -[SBIconListView centerForIconCoordinate:]
  -[SBIconListView layoutInsetsMode]
  -[SBIconListView alignsIconsOnPixelBoundaries]
  -[SBIconListView iconSpacing]
  -[SBIconListView iconList:didAddIcon:]
  -[SBIconListView iconLocation]
  -[SBIconListView getIconStartGridCellIndex:gridSize:forGridCellIndex:metrics:]
  -[SBIconListView iconIndexForCoordinate:metrics:]
  -[SBIconListView orientation]
  -[SBIconListView setIconSpacing:]
  -[SBIconListView _cleanupIconViewsForRemovedIcons:]
  -[SBIconListView isEmpty]
  -[SBIconListView model]
  -[SBIconListView iconViewForIcon:]
  -[SBIconListView layout]
  -[SBIconListView didAddIconView:]
  -[SBIconListView setStatusBarHeight:]
  -[SBIconListView setIconLocation:]
  -[SBIconListView layoutIconsIfNeeded:]
  -[SBIconListView setWantsFastIconReordering:]
  -[SBIconListView setAdjustsColumnPositionsForFullScreenWidth:]
  -[SBIconListView statusBarHeight]
  -[SBIconListView gridCellInfo]
  -[SBIconListView iconGridSizeClassForIconGridSize:]
  -[SBIconListView iconColumnsForCurrentOrientation]
  -[SBIconListView _addIconViewsForIcons:]
  -[SBIconListView didAddSubview:]
  -[SBIconListView isLayoutPausedForIconView:]
  -[SBIconListView iconList:didRemoveIcon:]
  -[SBIconListView setUserInterfaceLayoutDirectionHandling:]
  -[SBIconListView originForIconAtCoordinate:]
  -[SBIconListView pausesIconsForScrolling]
  -[SBIconListView iconIndexForGridCellIndex:metrics:]
  -[SBIconListView descriptionWithMultilinePrefix:]
  -[SBIconListView setIconViewConfigurationOptions:]
  -[SBIconListView visibleIcons]
  -[SBIconListView additionalLayoutInsets]
  -[SBIconListView iconCoordinateForIndex:forOrientation:]
  -[SBIconListView visibleGridCellIndexesWithMetrics:]
  -[SBIconListView popIconView:]
  -[SBIconListView currentIconLocationTransitionHandler]
  -[SBIconListView iconViewProvider]
  -[SBIconListView iconRowsForCurrentOrientation]
  -[SBIconListView setLayoutInsetsMode:]
  -[SBIconListView rectForIcon:]
  -[SBIconListView iconAtGridCellIndex:metrics:]
  -[SBIconListView _allowsFocusToLeaveViaHeading:]
  -[SBIconListView descriptionBuilderWithMultilinePrefix:]
  -[SBIconListView adaptsOrientationToTraitCollection]
  -[SBIconListView layoutAndCreateIcon:]
  -[SBIconListView removeShowAllIconsAssertion:]
  -[SBIconListView iconViewConfigurationOptions]
  -[SBIconListView addLayoutObserver:]
  -[SBIconListView centerForIcon:metrics:]
  -[SBIconListView setOccluded:]
  -[SBIconListView isOccluded]
  -[SBIconListView performSpecialIconAnimation:icon:completionHandler:]
  -[SBIconListView iconList:didMoveIcon:]


SBIconListRotationIconViewProvider : NSObject /usr/lib/libSystem.B.dylib <SBIconViewProviding>
 @property  SBIconListView *listView

  // instance methods
  -[SBIconListRotationIconViewProvider configureIconView:forIcon:]
  -[SBIconListRotationIconViewProvider recycleIconView:]
  -[SBIconListRotationIconViewProvider listView]
  -[SBIconListRotationIconViewProvider .cxx_destruct]
  -[SBIconListRotationIconViewProvider isIconViewRecycled:]
  -[SBIconListRotationIconViewProvider initWithListView:]
  -[SBIconListRotationIconViewProvider dequeueReusableIconViewOfClass:]


SBIconListViewIconLocationTransitionHandler : NSObject /usr/lib/libSystem.B.dylib <SBIconListViewIconLocationTransitioning, BSDescriptionProviding>
 @property  NSString *iconLocation
 @property  NSString *reason
 @property  SBIconListView *iconListView
 @property  double progress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewIconLocationTransitionHandler .cxx_destruct]
  -[SBIconListViewIconLocationTransitionHandler succinctDescriptionBuilder]
  -[SBIconListViewIconLocationTransitionHandler completeTransition:]
  -[SBIconListViewIconLocationTransitionHandler succinctDescription]
  -[SBIconListViewIconLocationTransitionHandler iconListView]
  -[SBIconListViewIconLocationTransitionHandler initWithIconLocation:reason:iconListView:]
  -[SBIconListViewIconLocationTransitionHandler setProgress:]
  -[SBIconListViewIconLocationTransitionHandler progress]
  -[SBIconListViewIconLocationTransitionHandler iconLocation]
  -[SBIconListViewIconLocationTransitionHandler reason]
  -[SBIconListViewIconLocationTransitionHandler descriptionWithMultilinePrefix:]
  -[SBIconListViewIconLocationTransitionHandler descriptionBuilderWithMultilinePrefix:]


SBIconListViewIconVisibilityAssertion : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable, BSDescriptionProviding>
 @property  BOOL invalidated
 @property  NSString *reason
 @property  SBIconListView *listView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewIconVisibilityAssertion listView]
  -[SBIconListViewIconVisibilityAssertion dealloc]
  -[SBIconListViewIconVisibilityAssertion .cxx_destruct]
  -[SBIconListViewIconVisibilityAssertion succinctDescriptionBuilder]
  -[SBIconListViewIconVisibilityAssertion succinctDescription]
  -[SBIconListViewIconVisibilityAssertion isInvalidated]
  -[SBIconListViewIconVisibilityAssertion initWithListView:reason:]
  -[SBIconListViewIconVisibilityAssertion setInvalidated:]
  -[SBIconListViewIconVisibilityAssertion invalidate]
  -[SBIconListViewIconVisibilityAssertion reason]
  -[SBIconListViewIconVisibilityAssertion descriptionWithMultilinePrefix:]
  -[SBIconListViewIconVisibilityAssertion descriptionBuilderWithMultilinePrefix:]


SBIconListViewCaptureOnlyBackgroundAssertion : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable>
 @property  SBIcon *icon
 @property  NSString *groupName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewCaptureOnlyBackgroundAssertion .cxx_destruct]
  -[SBIconListViewCaptureOnlyBackgroundAssertion icon]
  -[SBIconListViewCaptureOnlyBackgroundAssertion groupName]
  -[SBIconListViewCaptureOnlyBackgroundAssertion initWithIcon:groupName:invalidation:]
  -[SBIconListViewCaptureOnlyBackgroundAssertion invalidate]


SBHFolderSettings : PTSettings /System/Library/PrivateFrameworks/CoreMaterial.framework/CoreMaterial
 @property  BOOL allowNestedFolders
 @property  BOOL pinchToClose
 @property  double minPinchScale
 @property  BOOL animatesPageScrubbing

  // class methods
  +[SBHFolderSettings settingsControllerModule]

  // instance methods
  -[SBHFolderSettings setDefaultValues]
  -[SBHFolderSettings minPinchScale]
  -[SBHFolderSettings setMinPinchScale:]
  -[SBHFolderSettings setPinchToClose:]
  -[SBHFolderSettings animatesPageScrubbing]
  -[SBHFolderSettings setAnimatesPageScrubbing:]
  -[SBHFolderSettings pinchToClose]
  -[SBHFolderSettings setAllowNestedFolders:]
  -[SBHFolderSettings allowNestedFolders]


SBHSiriSuggestionsElement : SBHCustomIconElement
  // class methods
  +[SBHSiriSuggestionsElement elementIdentifier]

  // instance methods
  -[SBHSiriSuggestionsElement icon:imageWithInfo:]
  -[SBHSiriSuggestionsElement supportedGridSizeClassesForIcon:]
  -[SBHSiriSuggestionsElement displayName]


SBHWidgetAddSheetTransitionContext : NSObject /usr/lib/libSystem.B.dylib <UIViewControllerTransitioningDelegate>
 @property  SBHAddWidgetSheetGalleryCollectionViewCell *sourceCell
 @property  SBHWidgetAddSheetAnimationController *animationController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHWidgetAddSheetTransitionContext animationControllerForPresentedController:presentingController:sourceController:]
  -[SBHWidgetAddSheetTransitionContext setAnimationController:]
  -[SBHWidgetAddSheetTransitionContext .cxx_destruct]
  -[SBHWidgetAddSheetTransitionContext sourceCell]
  -[SBHWidgetAddSheetTransitionContext interruptAnimation]
  -[SBHWidgetAddSheetTransitionContext initWithSourceCell:]
  -[SBHWidgetAddSheetTransitionContext setSourceCell:]
  -[SBHWidgetAddSheetTransitionContext animationController]


SBHWidgetAddSheetAnimationController : _UISheetAnimationController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  SBHAddWidgetSheetGalleryCollectionViewCell *sourceCell
 @property  SBHPortaledShadowedWidgetView *portaledShadowedWidgetView
 @property  {CGPoint=dd} fromPoint
 @property  UIView *matchMoveView

  // instance methods
  -[SBHWidgetAddSheetAnimationController .cxx_destruct]
  -[SBHWidgetAddSheetAnimationController fromPoint]
  -[SBHWidgetAddSheetAnimationController animateTransition:]
  -[SBHWidgetAddSheetAnimationController interruptibleAnimatorForTransition:]
  -[SBHWidgetAddSheetAnimationController setMatchMoveView:]
  -[SBHWidgetAddSheetAnimationController matchMoveView]
  -[SBHWidgetAddSheetAnimationController sourceCell]
  -[SBHWidgetAddSheetAnimationController interruptAnimation]
  -[SBHWidgetAddSheetAnimationController initWithSourceCell:]
  -[SBHWidgetAddSheetAnimationController setSourceCell:]
  -[SBHWidgetAddSheetAnimationController portaledShadowedWidgetView]
  -[SBHWidgetAddSheetAnimationController setFromPoint:]
  -[SBHWidgetAddSheetAnimationController setPortaledShadowedWidgetView:]


SBHAppLibrarySettings : PTSettings /System/Library/PrivateFrameworks/CoreMaterial.framework/CoreMaterial
 @property  PTOutlet *minimumNumberOfIconsToShowSectionHeaderInDeweySearchOutlet
 @property  long long minimumNumberOfIconsToShowSectionHeaderInDeweySearch

  // class methods
  +[SBHAppLibrarySettings settingsControllerModule]

  // instance methods
  -[SBHAppLibrarySettings setDefaultValues]
  -[SBHAppLibrarySettings .cxx_destruct]
  -[SBHAppLibrarySettings minimumNumberOfIconsToShowSectionHeaderInDeweySearch]
  -[SBHAppLibrarySettings setMinimumNumberOfIconsToShowSectionHeaderInDeweySearch:]
  -[SBHAppLibrarySettings minimumNumberOfIconsToShowSectionHeaderInDeweySearchOutlet]
  -[SBHAppLibrarySettings setMinimumNumberOfIconsToShowSectionHeaderInDeweySearchOutlet:]


SBIconListViewDefaultAnimator : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayoutAnimating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewDefaultAnimator init]
  -[SBIconListViewDefaultAnimator .cxx_destruct]
  -[SBIconListViewDefaultAnimator iconListView:wantsAnimatedLayoutForIconView:withParameters:alongsideAnimationBlock:]
  -[SBIconListViewDefaultAnimator iconListView:wantsAnimatedRemovalForIconViews:completionHandler:]


SBIconListFlowLayout : SBIconListGridLayout

SBIconBadgeView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <PTSettingsKeyObserver, SBIconAccessoryView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBFParallaxSettings *parallaxSettings
 @property  <SBIconListLayout> *listLayout

  // class methods
  +[SBIconBadgeView _textPadding]
  +[SBIconBadgeView _checkoutImageForText:font:highlighted:]
  +[SBIconBadgeView _createImageForText:font:highlighted:]
  +[SBIconBadgeView backgroundImageCache]

  // instance methods
  -[SBIconBadgeView parallaxSettings]
  -[SBIconBadgeView listLayout]
  -[SBIconBadgeView displayingAccessory]
  -[SBIconBadgeView settings:changedValueForKey:]
  -[SBIconBadgeView _applyParallaxSettings]
  -[SBIconBadgeView badgeContentScale]
  -[SBIconBadgeView init]
  -[SBIconBadgeView setAccessoryBrightness:]
  -[SBIconBadgeView dealloc]
  -[SBIconBadgeView .cxx_destruct]
  -[SBIconBadgeView configureAnimatedForIcon:infoProvider:animator:]
  -[SBIconBadgeView intrinsicContentSizeForTextImage:]
  -[SBIconBadgeView prepareForReuse]
  -[SBIconBadgeView intrinsicContentSize]
  -[SBIconBadgeView _zoomOutWithAnimator:]
  -[SBIconBadgeView _zoomInWithTextImage:animator:]
  -[SBIconBadgeView setParallaxSettings:]
  -[SBIconBadgeView sizeThatFits:]
  -[SBIconBadgeView _checkoutBackgroundImageTuple]
  -[SBIconBadgeView _resizeForTextImage:]
  -[SBIconBadgeView badgeSize]
  -[SBIconBadgeView _clearText]
  -[SBIconBadgeView configureForIcon:infoProvider:]
  -[SBIconBadgeView _configureAnimatedForText:highlighted:animator:]
  -[SBIconBadgeView _layOutTextImageView:]
  -[SBIconBadgeView _crossfadeToTextImage:animator:]
  -[SBIconBadgeView accessoryCenterForIconBounds:]
  -[SBIconBadgeView setListLayout:]
  -[SBIconBadgeView layoutOffset]
  -[SBIconBadgeView font]
  -[SBIconBadgeView layoutSubviews]


SBHWidgetStackDescriptor : NSObject /usr/lib/libSystem.B.dylib <SBHAddWidgetSheetGalleryItem>
 @property  NSArray *smallStackDescriptors
 @property  NSArray *mediumStackDescriptors
 @property  NSArray *largeStackDescriptors
 @property  NSString *sbh_appName
 @property  NSString *sbh_widgetName
 @property  unsigned long sbh_supportedSizeClasses
 @property  NSString *sbh_widgetDescription
 @property  UIColor *backgroundColor
 @property  UIColor *accentColor
 @property  UIColor *mostInterestingColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHWidgetStackDescriptor sbh_widgetName]
  -[SBHWidgetStackDescriptor sbh_supportedSizeClasses]
  -[SBHWidgetStackDescriptor sbh_widgetDescription]
  -[SBHWidgetStackDescriptor mostInterestingColor]
  -[SBHWidgetStackDescriptor accentColor]
  -[SBHWidgetStackDescriptor backgroundColor]
  -[SBHWidgetStackDescriptor .cxx_destruct]
  -[SBHWidgetStackDescriptor sbh_appName]
  -[SBHWidgetStackDescriptor isEqual:]
  -[SBHWidgetStackDescriptor initWithSmallStackDescriptors:mediumStackDescriptors:largeStackDescriptors:]
  -[SBHWidgetStackDescriptor smallStackDescriptors]
  -[SBHWidgetStackDescriptor setSmallStackDescriptors:]
  -[SBHWidgetStackDescriptor mediumStackDescriptors]
  -[SBHWidgetStackDescriptor setMediumStackDescriptors:]
  -[SBHWidgetStackDescriptor largeStackDescriptors]
  -[SBHWidgetStackDescriptor setLargeStackDescriptors:]
  -[SBHWidgetStackDescriptor descriptorsForSizeClass:]


SBHomeScreenButton : UIButton /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UIView *backgroundView
 @property  SBHomeScreenMaterialView *materialView

  // class methods
  +[SBHomeScreenButton defaultContentImage]
  +[SBHomeScreenButton backgroundInsets]

  // instance methods
  -[SBHomeScreenButton backgroundView]
  -[SBHomeScreenButton initWithFrame:]
  -[SBHomeScreenButton .cxx_destruct]
  -[SBHomeScreenButton setHighlighted:]
  -[SBHomeScreenButton materialView]
  -[SBHomeScreenButton initWithFrame:backgroundView:]
  -[SBHomeScreenButton layoutSubviews]


SBCloseBoxView : SBHomeScreenButton <UIPointerInteractionDelegate>
 @property  UITapGestureRecognizer *actionTapGestureRecognizer
 @property  <SBCloseBoxViewDelegate> *delegate
 @property  <SBIconListLayout> *listLayout
 @property  {UIEdgeInsets=dddd} hitTestPadding
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBCloseBoxView backgroundInsets]

  // instance methods
  -[SBCloseBoxView listLayout]
  -[SBCloseBoxView .cxx_destruct]
  -[SBCloseBoxView pointerInteraction:styleForRegion:]
  -[SBCloseBoxView shouldTrack]
  -[SBCloseBoxView pointInside:withEvent:]
  -[SBCloseBoxView sizeThatFits:]
  -[SBCloseBoxView actionTapGestureRecognizer]
  -[SBCloseBoxView setActionTapGestureRecognizer:]
  -[SBCloseBoxView hitTestPadding]
  -[SBCloseBoxView pointerInteraction:regionForRequest:defaultRegion:]
  -[SBCloseBoxView setDelegate:]
  -[SBCloseBoxView setListLayout:]
  -[SBCloseBoxView delegate]


SBXCloseBoxView : SBCloseBoxView
  // class methods
  +[SBXCloseBoxView defaultContentImage]


SBMinusCloseBoxView : SBCloseBoxView
  // class methods
  +[SBMinusCloseBoxView defaultContentImage]


SBIconContinuityBadgeView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconAccessoryView>
 @property  SBHIconAccessoryCountedMapImageTuple *backgroundImageTuple
 @property  SBHIconAccessoryCountedMapImageTuple *foregroundImageTuple
 @property  SBDarkeningImageView *backgroundView
 @property  UIImageView *foregroundView
 @property  long long badgeType
 @property  SBFParallaxSettings *parallaxSettings
 @property  <SBIconListLayout> *listLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconContinuityBadgeView _checkoutImageForContinuityBadgeType:highlighted:]
  +[SBIconContinuityBadgeView backgroundImageCache]

  // instance methods
  -[SBIconContinuityBadgeView listLayout]
  -[SBIconContinuityBadgeView displayingAccessory]
  -[SBIconContinuityBadgeView backgroundView]
  -[SBIconContinuityBadgeView foregroundView]
  -[SBIconContinuityBadgeView badgeContentScale]
  -[SBIconContinuityBadgeView init]
  -[SBIconContinuityBadgeView badgeType]
  -[SBIconContinuityBadgeView setAccessoryBrightness:]
  -[SBIconContinuityBadgeView dealloc]
  -[SBIconContinuityBadgeView setBadgeType:]
  -[SBIconContinuityBadgeView .cxx_destruct]
  -[SBIconContinuityBadgeView configureAnimatedForIcon:infoProvider:animator:]
  -[SBIconContinuityBadgeView prepareForReuse]
  -[SBIconContinuityBadgeView intrinsicContentSize]
  -[SBIconContinuityBadgeView sizeThatFits:]
  -[SBIconContinuityBadgeView _checkoutBackgroundImageTuple]
  -[SBIconContinuityBadgeView badgeSize]
  -[SBIconContinuityBadgeView _clearIcon]
  -[SBIconContinuityBadgeView setForegroundImageTuple:]
  -[SBIconContinuityBadgeView foregroundImageTuple]
  -[SBIconContinuityBadgeView backgroundImageTuple]
  -[SBIconContinuityBadgeView configureForIcon:infoProvider:]
  -[SBIconContinuityBadgeView accessoryCenterForIconBounds:]
  -[SBIconContinuityBadgeView setListLayout:]
  -[SBIconContinuityBadgeView layoutOffset]
  -[SBIconContinuityBadgeView layoutSubviews]


SBHShortcutsFolderElement : SBHCustomIconElement
  // class methods
  +[SBHShortcutsFolderElement elementIdentifier]

  // instance methods
  -[SBHShortcutsFolderElement icon:imageWithInfo:]
  -[SBHShortcutsFolderElement supportedGridSizeClassesForIcon:]
  -[SBHShortcutsFolderElement iconSupportsConfiguration:]
  -[SBHShortcutsFolderElement configurationStorageIdentifier]
  -[SBHShortcutsFolderElement containerBundleIdentifier]
  -[SBHShortcutsFolderElement displayName]


SBHWidgetConfigurationFadeAnimator : NSObject /usr/lib/libSystem.B.dylib <SBHWidgetConfigurationAnimating>
  // instance methods
  -[SBHWidgetConfigurationFadeAnimator finalizeAnimationAtEndpoint:withContext:]
  -[SBHWidgetConfigurationFadeAnimator prepareToAnimateFromEndpoint:withContext:]
  -[SBHWidgetConfigurationFadeAnimator animateToEndpoint:withContext:completion:]
  -[SBHWidgetConfigurationFadeAnimator _configureForEndpoint:context:]


SBHApplicationWidgetCollection : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  NSString *displayName
 @property  SBLeafIcon *icon
 @property  NSArray *avocadoDescriptors
 @property  NSString *vendorName
 @property  NSString *containerName
 @property  NSString *iconImageApplicationBundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHApplicationWidgetCollection setContainerName:]
  -[SBHApplicationWidgetCollection avocadoDescriptors]
  -[SBHApplicationWidgetCollection vendorName]
  -[SBHApplicationWidgetCollection .cxx_destruct]
  -[SBHApplicationWidgetCollection icon]
  -[SBHApplicationWidgetCollection succinctDescriptionBuilder]
  -[SBHApplicationWidgetCollection iconImageApplicationBundleIdentifier]
  -[SBHApplicationWidgetCollection succinctDescription]
  -[SBHApplicationWidgetCollection containerName]
  -[SBHApplicationWidgetCollection initWithIcon:galleryItems:vendorName:]
  -[SBHApplicationWidgetCollection setIconImageApplicationBundleIdentifier:]
  -[SBHApplicationWidgetCollection setAvocadoDescriptors:]
  -[SBHApplicationWidgetCollection displayName]
  -[SBHApplicationWidgetCollection descriptionWithMultilinePrefix:]
  -[SBHApplicationWidgetCollection descriptionBuilderWithMultilinePrefix:]


SBHWidgetWrapperViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconViewObserver, SBIconViewActionDelegate>
 @property  BOOL titleAndSubtitleVisible
 @property  SBIconView *iconView
 @property  BOOL dragging
 @property  {CGAffineTransform=dddddd} contentTransform
 @property  {CGSize=dd} contentSize
 @property  {CGAffineTransform=dddddd} shadowTransform
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  <SBIconViewProviding> *iconViewProvider
 @property  <SBHAddWidgetSheetGalleryItem> *galleryItem
 @property  NSArray *supportedSizeClasses
 @property  SBHWidgetWrapperView *wrapperView
 @property  unsigned long indexOfSelectedSizeClass
 @property  long long selectedSizeClass
 @property  BOOL forcesEdgeAntialiasing
 @property  <SBHWidgetWrapperViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHWidgetWrapperViewController iconView:didChangeCustomImageViewController:]
  -[SBHWidgetWrapperViewController wrapperView]
  -[SBHWidgetWrapperViewController iconView]
  -[SBHWidgetWrapperViewController setDragging:]
  -[SBHWidgetWrapperViewController galleryItem]
  -[SBHWidgetWrapperViewController initWithGalleryItem:titleAndSubtitleVisible:listLayoutProvider:iconViewProvider:]
  -[SBHWidgetWrapperViewController setSelectedSizeClass:]
  -[SBHWidgetWrapperViewController selectedSizeClass]
  -[SBHWidgetWrapperViewController isDragging]
  -[SBHWidgetWrapperViewController dealloc]
  -[SBHWidgetWrapperViewController .cxx_destruct]
  -[SBHWidgetWrapperViewController titleAndSubtitleVisible]
  -[SBHWidgetWrapperViewController contentTransform]
  -[SBHWidgetWrapperViewController iconViewWillBeginDrag:]
  -[SBHWidgetWrapperViewController iconViewDidEndDrag:]
  -[SBHWidgetWrapperViewController supportedSizeClasses]
  -[SBHWidgetWrapperViewController iconTouchBegan:]
  -[SBHWidgetWrapperViewController contentSize]
  -[SBHWidgetWrapperViewController _removeIconView]
  -[SBHWidgetWrapperViewController listLayoutProvider]
  -[SBHWidgetWrapperViewController _updateAvocadoHostViewController]
  -[SBHWidgetWrapperViewController _widgetDragHandler]
  -[SBHWidgetWrapperViewController setIndexOfSelectedSizeClass:]
  -[SBHWidgetWrapperViewController _configureCustomImageViewController:]
  -[SBHWidgetWrapperViewController _configureIconView:forIcon:]
  -[SBHWidgetWrapperViewController setGalleryItem:]
  -[SBHWidgetWrapperViewController shadowTransform]
  -[SBHWidgetWrapperViewController setShadowTransform:]
  -[SBHWidgetWrapperViewController indexOfSelectedSizeClass]
  -[SBHWidgetWrapperViewController setTitleAndSubtitleVisible:]
  -[SBHWidgetWrapperViewController setDelegate:]
  -[SBHWidgetWrapperViewController setContentSize:]
  -[SBHWidgetWrapperViewController delegate]
  -[SBHWidgetWrapperViewController setContentTransform:]
  -[SBHWidgetWrapperViewController iconViewProvider]
  -[SBHWidgetWrapperViewController loadView]
  -[SBHWidgetWrapperViewController setForcesEdgeAntialiasing:]
  -[SBHWidgetWrapperViewController forcesEdgeAntialiasing]


SBHWidgetContainerView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UIView *widgetView
 @property  MTMaterialView *screenTimeLockoutView
 @property  BOOL blockedForScreenTimeExpiration
 @property  unsigned long gridSizeClass
 @property  NSString *applicationName

  // instance methods
  -[SBHWidgetContainerView isBlockedForScreenTimeExpiration]
  -[SBHWidgetContainerView applicationName]
  -[SBHWidgetContainerView .cxx_destruct]
  -[SBHWidgetContainerView setApplicationName:]
  -[SBHWidgetContainerView gridSizeClass]
  -[SBHWidgetContainerView _updateScreenTimeLockoutView]
  -[SBHWidgetContainerView _fontWithTextStyle:symbolicTraits:]
  -[SBHWidgetContainerView initWithGridSizeClass:applicationName:]
  -[SBHWidgetContainerView widgetView]
  -[SBHWidgetContainerView setWidgetView:]
  -[SBHWidgetContainerView screenTimeLockoutView]
  -[SBHWidgetContainerView setGridSizeClass:]
  -[SBHWidgetContainerView setBlockedForScreenTimeExpiration:]
  -[SBHWidgetContainerView layoutSubviews]


SBHWidgetContainerViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UIViewController *widgetViewController
 @property  unsigned long gridSizeClass
 @property  NSString *applicationName
 @property  BOOL paused
 @property  BOOL privateModeEnabled
 @property  BOOL blockedForScreenTimeExpiration
 @property  BOOL visiblySettled
 @property  BOOL allowsEdgeAntialiasing
 @property  unsigned long presentationMode

  // instance methods
  -[SBHWidgetContainerViewController isBlockedForScreenTimeExpiration]
  -[SBHWidgetContainerViewController snapshotView]
  -[SBHWidgetContainerViewController isPrivateModeEnabled]
  -[SBHWidgetContainerViewController setPrivateModeEnabled:]
  -[SBHWidgetContainerViewController applicationName]
  -[SBHWidgetContainerViewController .cxx_destruct]
  -[SBHWidgetContainerViewController presentationMode]
  -[SBHWidgetContainerViewController cancelTouchesForCurrentEventInHostedContent]
  -[SBHWidgetContainerViewController setVisiblySettled:]
  -[SBHWidgetContainerViewController _avocadoViewController]
  -[SBHWidgetContainerViewController setPresentationMode:]
  -[SBHWidgetContainerViewController setAllowsEdgeAntialiasing:]
  -[SBHWidgetContainerViewController setPaused:]
  -[SBHWidgetContainerViewController gridSizeClass]
  -[SBHWidgetContainerViewController allowsEdgeAntialiasing]
  -[SBHWidgetContainerViewController isPaused]
  -[SBHWidgetContainerViewController widgetContainerView]
  -[SBHWidgetContainerViewController _canShowWhileLocked]
  -[SBHWidgetContainerViewController widgetViewController]
  -[SBHWidgetContainerViewController widgetContextMenuController]
  -[SBHWidgetContainerViewController initWithWidgetViewController:gridSizeClass:applicationName:]
  -[SBHWidgetContainerViewController setBlockedForScreenTimeExpiration:]
  -[SBHWidgetContainerViewController loadView]
  -[SBHWidgetContainerViewController isVisiblySettled]


SBHFloatyFolderVisualConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  {CGSize=dd} contentBackgroundSize
 @property  double continuousCornerRadius
 @property  double titleFontSizeInPortrait
 @property  double titleFontSizeInLandscape
 @property  double titleHorizontalInset
 @property  double pageControlAreaHeight
 @property  double rubberBandIntervalForOverscroll
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHFloatyFolderVisualConfiguration copyWithZone:]
  -[SBHFloatyFolderVisualConfiguration setContinuousCornerRadius:]
  -[SBHFloatyFolderVisualConfiguration continuousCornerRadius]
  -[SBHFloatyFolderVisualConfiguration init]
  -[SBHFloatyFolderVisualConfiguration setTitleFontSizeInPortrait:]
  -[SBHFloatyFolderVisualConfiguration setContentBackgroundSize:]
  -[SBHFloatyFolderVisualConfiguration rubberBandIntervalForOverscroll]
  -[SBHFloatyFolderVisualConfiguration titleFontSizeInPortrait]
  -[SBHFloatyFolderVisualConfiguration succinctDescriptionBuilder]
  -[SBHFloatyFolderVisualConfiguration pageControlAreaHeight]
  -[SBHFloatyFolderVisualConfiguration setPageControlAreaHeight:]
  -[SBHFloatyFolderVisualConfiguration titleFontSizeInLandscape]
  -[SBHFloatyFolderVisualConfiguration succinctDescription]
  -[SBHFloatyFolderVisualConfiguration setTitleHorizontalInset:]
  -[SBHFloatyFolderVisualConfiguration titleHorizontalInset]
  -[SBHFloatyFolderVisualConfiguration isEqual:]
  -[SBHFloatyFolderVisualConfiguration setTitleFontSizeInAllOrientations:]
  -[SBHFloatyFolderVisualConfiguration contentBackgroundSize]
  -[SBHFloatyFolderVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHFloatyFolderVisualConfiguration setRubberBandIntervalForOverscroll:]
  -[SBHFloatyFolderVisualConfiguration setTitleFontSizeInLandscape:]
  -[SBHFloatyFolderVisualConfiguration descriptionBuilderWithMultilinePrefix:]


SBHIconTableViewListLayoutProvider : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayoutProvider>
 @property  <SBIconListLayoutProvider> *defaultListLayoutProvider

  // instance methods
  -[SBHIconTableViewListLayoutProvider init]
  -[SBHIconTableViewListLayoutProvider .cxx_destruct]
  -[SBHIconTableViewListLayoutProvider initWithDefaultListLayoutProvider:]
  -[SBHIconTableViewListLayoutProvider defaultListLayoutProvider]
  -[SBHIconTableViewListLayoutProvider layoutForIconLocation:]


SBHIconTableViewListLayout : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayout>
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  SBHIconAccessoryVisualConfiguration *iconAccessoryVisualConfiguration
 @property  SBHFolderIconVisualConfiguration *folderIconVisualConfiguration
 @property  SBHFloatyFolderVisualConfiguration *floatyFolderVisualConfiguration
 @property  SBHSidebarVisualConfiguration *sidebarVisualConfiguration
 @property  SBHAppLibraryVisualConfiguration *appLibraryVisualConfiguration
 @property  SBHRootFolderVisualConfiguration *rootFolderVisualConfiguration
 @property  {SBHIconGridSizeClassSizes={SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}} iconGridSizeClassSizes
 @property  unsigned long supportedIconGridSizeClasses
 @property  BOOL usesAlternateLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconTableViewListLayout iconImageInfo]
  -[SBHIconTableViewListLayout layoutInsetsForOrientation:]
  -[SBHIconTableViewListLayout numberOfColumnsForOrientation:]
  -[SBHIconTableViewListLayout numberOfRowsForOrientation:]


SBHIconModel : NSObject /usr/lib/libSystem.B.dylib <SBFolderObserver, SBIconObserver, SBIconDelegate>
 @property  NSSet *archivedLeafIdentifiers
 @property  NSDictionary *desiredIconState
 @property  NSOrderedSet *desiredIconStateFlattened
 @property  BOOL layingOut
 @property  BOOL checkingModelConsistency
 @property  SBIcon *rootFolderIcon
 @property  BOOL iconStateDirty
 @property  NSTimer *autosaveTimer
 @property  <SBIconModelStore> *store
 @property  <SBHIconModelDelegate> *delegate
 @property  SBRootFolder *rootFolder
 @property  unsigned long maxListCountForFolders
 @property  unsigned long maxIconCountForDock
 @property  BOOL supportsDock
 @property  {SBHIconGridSizeClassSizes={SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}} gridSizeClassSizes
 @property  NSSet *visibleIconIdentifiers
 @property  NSSet *hiddenIconTags
 @property  NSSet *visibleIconTags
 @property  NSSet *leafIcons
 @property  NSSet *currentLeafIdentifiers
 @property  NSSet *leafIconIdentifiers
 @property  BOOL ignoresIconsNotInIconState
 @property  BOOL sortsIconsAlphabetically
 @property  BOOL hasDesiredIconState
 @property  NSSet *missingDesiredIconIdentifiers
 @property  NSDictionary *defaultIconState
 @property  NSSet *firstPageLeafIdentifiers
 @property  BOOL restoring
 @property  NSString *localizedDefaultFolderName
 @property  NSString *unlocalizedDefaultFolderName
 @property  BOOL allowsDownloadingIcons
 @property  <SBIconModelStore> *todayListsStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHIconModel migratedIdentifierForLeafIdentifier:]

  // instance methods
  -[SBHIconModel rootFolder]
  -[SBHIconModel iconsOfClass:]
  -[SBHIconModel localizedFolderNameForDefaultDisplayName:]
  -[SBHIconModel layoutIfNeeded]
  -[SBHIconModel didAddIcon:]
  -[SBHIconModel removeAllIcons]
  -[SBHIconModel initWithStore:]
  -[SBHIconModel reloadIcons]
  -[SBHIconModel removeIcons:]
  -[SBHIconModel defaultIconState]
  -[SBHIconModel gridSizeClassSizes]
  -[SBHIconModel folder:didAddList:]
  -[SBHIconModel sortsIconsAlphabetically]
  -[SBHIconModel visibleIconIdentifiers]
  -[SBHIconModel supportsDock]
  -[SBHIconModel setStore:]
  -[SBHIconModel markIconStateClean]
  -[SBHIconModel markIconStateDirty]
  -[SBHIconModel icon:launchFromLocation:context:]
  -[SBHIconModel addIcon:]
  -[SBHIconModel archivedLeafIdentifiers]
  -[SBHIconModel modernizeRootArchive:]
  -[SBHIconModel leafIcons]
  -[SBHIconModel setIconStateDirty:]
  -[SBHIconModel addIconsOfClass:toSet:]
  -[SBHIconModel init]
  -[SBHIconModel desiredIconState]
  -[SBHIconModel maxIconCountForDock]
  -[SBHIconModel store]
  -[SBHIconModel folder:willAddIcon:]
  -[SBHIconModel folderIconStateDidDirty:]
  -[SBHIconModel setDesiredIconStateFlattened:]
  -[SBHIconModel isIconStateDirty]
  -[SBHIconModel clearDesiredIconState]
  -[SBHIconModel deleteIconStateWithOptions:]
  -[SBHIconModel leafIconIdentifiers]
  -[SBHIconModel indexPathInRootFolder:forNewIcon:isDesignatedLocation:replaceExistingIconAtIndexPath:]
  -[SBHIconModel isLayingOut]
  -[SBHIconModel localizedDefaultFolderName]
  -[SBHIconModel setRestoring:]
  -[SBHIconModel willLayout]
  -[SBHIconModel unlocalizedDefaultFolderName]
  -[SBHIconModel deleteIconState]
  -[SBHIconModel maxRowCountForListInRootFolderWithInterfaceOrientation:]
  -[SBHIconModel checkModelConsistency]
  -[SBHIconModel _shouldSkipAddingIcon:toRootFolder:]
  -[SBHIconModel desiredFolderCreationActionsForInsertingNewIcon:]
  -[SBHIconModel folder:didAddIcons:removedIcons:]
  -[SBHIconModel indexPathForIconInPlatformState:]
  -[SBHIconModel _rootFolder:moveIconsToFirstPage:placeBumpedIconsSomewhereNice:]
  -[SBHIconModel visibleIconTags]
  -[SBHIconModel .cxx_destruct]
  -[SBHIconModel clearDesiredIconStateIfPossible]
  -[SBHIconModel missingDesiredIconIdentifiers]
  -[SBHIconModel leafIconForIdentifier:]
  -[SBHIconModel setTodayListsStore:]
  -[SBHIconModel checkModelConsistencyInRootFolder:]
  -[SBHIconModel iconState]
  -[SBHIconModel leafIconsForIdentifiers:]
  -[SBHIconModel allowsDownloadingIcons]
  -[SBHIconModel autosaveTimer]
  -[SBHIconModel setArchivedLeafIdentifiers:]
  -[SBHIconModel iconModelMetadata]
  -[SBHIconModel folder:didReplaceIcon:withIcon:]
  -[SBHIconModel makeFolderWithDisplayName:]
  -[SBHIconModel adjustIconsToShow:iconsToHide:afterChangeToVisibleIconTags:hiddenIconTags:]
  -[SBHIconModel _iconState]
  -[SBHIconModel _canAddDownloadingIconForBundleID:]
  -[SBHIconModel setIgnoresIconsNotInIconState:]
  -[SBHIconModel isCheckingModelConsistency]
  -[SBHIconModel hiddenIconTags]
  -[SBHIconModel removeIcon:]
  -[SBHIconModel _adjustedDesiredIndexPathInRootFolder:forIconWithIdentifier:]
  -[SBHIconModel scheduleIconStateAutosave]
  -[SBHIconModel setDesiredIconState:]
  -[SBHIconModel addDownloadingIconWithDataSource:]
  -[SBHIconModel isRestoring]
  -[SBHIconModel setCheckingModelConsistency:]
  -[SBHIconModel desiredIndexPathForIconWithIdentifier:]
  -[SBHIconModel enumerateLeafIconsUsingBlock:]
  -[SBHIconModel widgetIcons]
  -[SBHIconModel _adjustedPlatformIndexPathInRootFolder:forIcon:]
  -[SBHIconModel setVisibilityOfIconsWithVisibleTags:hiddenTags:]
  -[SBHIconModel listGridSizeForFolderClass:]
  -[SBHIconModel shouldPlaceIconOnIgnoredList:]
  -[SBHIconModel iconArchivableStateDidChange:]
  -[SBHIconModel _adjustedIndexPathInRootFolder:withinIconState:forIconWithIdentifier:]
  -[SBHIconModel shouldAvoidPlacingIconOnFirstPage:]
  -[SBHIconModel desiredIconStateFlattened]
  -[SBHIconModel didUnarchiveMetadata:]
  -[SBHIconModel setLeafIconsByIdentifier:]
  -[SBHIconModel widgetIconsContainingWidgetsMatchingExtensionBundleIdentifier:kind:sizeClass:]
  -[SBHIconModel isIconVisible:]
  -[SBHIconModel downloadingIconForBundleIdentifier:]
  -[SBHIconModel _unarchiveRootFolder]
  -[SBHIconModel ignoresIconsNotInIconState]
  -[SBHIconModel hasDesiredIconState]
  -[SBHIconModel setRootFolderIcon:]
  -[SBHIconModel firstPageLeafIdentifiers]
  -[SBHIconModel clearDesiredIconStateWithOptions:]
  -[SBHIconModel _removeIconStateAutosaveDisableAssertion:]
  -[SBHIconModel saveIconStateIfNeeded]
  -[SBHIconModel maxListCountForFolders]
  -[SBHIconModel setDelegate:]
  -[SBHIconModel loadAllIcons]
  -[SBHIconModel addDownloadingIconForBundleID:withIdentifier:]
  -[SBHIconModel layout]
  -[SBHIconModel enumerateDownloadingIconsUsingBlock:]
  -[SBHIconModel _saveIconState]
  -[SBHIconModel rootFolderIcon]
  -[SBHIconModel saveDesiredIconState]
  -[SBHIconModel widgetIconsContainingWidgetsMatchingUniqueIdentifier:]
  -[SBHIconModel importDesiredIconState:]
  -[SBHIconModel setForecastedLeavesOnIconModel:includingMissingIcons:]
  -[SBHIconModel setLayingOut:]
  -[SBHIconModel delegate]
  -[SBHIconModel maxColumnCountForListInRootFolderWithInterfaceOrientation:]
  -[SBHIconModel indexPathForNewIcon:isDesignatedLocation:replaceExistingIconAtIndexPath:]
  -[SBHIconModel setAutosaveTimer:]
  -[SBHIconModel removeIconForIdentifier:]
  -[SBHIconModel setAllowsDownloadingIcons:]
  -[SBHIconModel todayListsStore]
  -[SBHIconModel setSortsIconsAlphabetically:]
  -[SBHIconModel disableIconStateAutosaveForReason:]
  -[SBHIconModel isTrackingIcon:]
  -[SBHIconModel currentLeafIdentifiers]


SBIconModelFolderCreationAction : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  SBFolder *folder
 @property  NSIndexPath *indexPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconModelFolderCreationAction .cxx_destruct]
  -[SBIconModelFolderCreationAction succinctDescriptionBuilder]
  -[SBIconModelFolderCreationAction succinctDescription]
  -[SBIconModelFolderCreationAction indexPath]
  -[SBIconModelFolderCreationAction folder]
  -[SBIconModelFolderCreationAction initWithFolder:indexPath:]
  -[SBIconModelFolderCreationAction descriptionWithMultilinePrefix:]
  -[SBIconModelFolderCreationAction descriptionBuilderWithMultilinePrefix:]


SBHIconModelDisableAutosaveAssertion : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable, BSDescriptionProviding>
 @property  BOOL invalidated
 @property  SBHIconModel *iconModel
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconModelDisableAutosaveAssertion dealloc]
  -[SBHIconModelDisableAutosaveAssertion .cxx_destruct]
  -[SBHIconModelDisableAutosaveAssertion succinctDescriptionBuilder]
  -[SBHIconModelDisableAutosaveAssertion succinctDescription]
  -[SBHIconModelDisableAutosaveAssertion isInvalidated]
  -[SBHIconModelDisableAutosaveAssertion iconModel]
  -[SBHIconModelDisableAutosaveAssertion setInvalidated:]
  -[SBHIconModelDisableAutosaveAssertion initWithIconModel:reason:]
  -[SBHIconModelDisableAutosaveAssertion invalidate]
  -[SBHIconModelDisableAutosaveAssertion reason]
  -[SBHIconModelDisableAutosaveAssertion descriptionWithMultilinePrefix:]
  -[SBHIconModelDisableAutosaveAssertion descriptionBuilderWithMultilinePrefix:]


SBIconListViewClusterAnimator : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayoutAnimating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewClusterAnimator init]
  -[SBIconListViewClusterAnimator .cxx_destruct]
  -[SBIconListViewClusterAnimator setRemovalDirection:forIcon:]
  -[SBIconListViewClusterAnimator iconListView:wantsAnimatedLayoutForIconView:withParameters:alongsideAnimationBlock:]
  -[SBIconListViewClusterAnimator iconListView:wantsAnimatedRemovalForIconViews:completionHandler:]


SBHLibraryAdditionalItemsIndicatorIcon : SBFolderIcon
 @property  SBHLibraryCategory *category

  // instance methods
  -[SBHLibraryAdditionalItemsIndicatorIcon category]
  -[SBHLibraryAdditionalItemsIndicatorIcon .cxx_destruct]
  -[SBHLibraryAdditionalItemsIndicatorIcon initWithCategory:]
  -[SBHLibraryAdditionalItemsIndicatorIcon isAdditionalItemsIndicatorIcon]


SBPercentPassthroughInteractiveTransition : NSObject /usr/lib/libSystem.B.dylib <SBViewControllerInteractiveTransitioning>
 @property  double completionSpeed
 @property  long long completionCurve
 @property  BOOL wantsInteractiveStart
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBPercentPassthroughInteractiveTransition supportsRestarting]
  -[SBPercentPassthroughInteractiveTransition cancelTransition]
  -[SBPercentPassthroughInteractiveTransition init]
  -[SBPercentPassthroughInteractiveTransition setCompletionCurve:]
  -[SBPercentPassthroughInteractiveTransition updateTransition:]
  -[SBPercentPassthroughInteractiveTransition .cxx_destruct]
  -[SBPercentPassthroughInteractiveTransition setCompletionSpeed:]
  -[SBPercentPassthroughInteractiveTransition completionSpeed]
  -[SBPercentPassthroughInteractiveTransition completionCurve]
  -[SBPercentPassthroughInteractiveTransition startInteractiveTransition:]
  -[SBPercentPassthroughInteractiveTransition finishInteractiveTransition]


SBIconListFlowExtendedLayout : SBIconListFlowLayout
  // instance methods
  -[SBIconListFlowExtendedLayout iconSpacingForOrientation:]


SBHFloatingDockStyleConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  unsigned long backgroundEffect
 @property  unsigned long platterEffect
 @property  unsigned long folderIconBackgroundStyle
 @property  BOOL wantsPlatterShadow

  // class methods
  +[SBHFloatingDockStyleConfiguration defaultConfiguration]

  // instance methods
  -[SBHFloatingDockStyleConfiguration copyWithZone:]
  -[SBHFloatingDockStyleConfiguration init]
  -[SBHFloatingDockStyleConfiguration platterEffect]
  -[SBHFloatingDockStyleConfiguration folderIconBackgroundStyle]
  -[SBHFloatingDockStyleConfiguration wantsPlatterShadow]
  -[SBHFloatingDockStyleConfiguration backgroundEffect]
  -[SBHFloatingDockStyleConfiguration initWithBackgroundEffect:platterEffect:wantsPlatterShadow:folderIconBackgroundStyle:]
  -[SBHFloatingDockStyleConfiguration configurationWithWantsPlatterShadow:]


SBFloatingDockIconListView : SBDockIconListView
  // instance methods
  -[SBFloatingDockIconListView configureIconView:forIcon:]


SBIconImageCrossfadeView : SBFTouchPassThroughView /System/Library/Frameworks/UIKit.framework/UIKit
 @property  UIView *containerView
 @property  <SBCrossfadingIconImageSource> *iconImageSource
 @property  UIView *iconImageView
 @property  UIView *crossfadeView
 @property  UIView *crossfadeContainerView
 @property  double morphFraction
 @property  BOOL masksCorners
 @property  BOOL performsTrueCrossfade
 @property  {CGPoint=dd} stretchAnchorPoint
 @property  unsigned long crossfadeStyle
 @property  BOOL reparentsSourceView

  // class methods
  +[SBIconImageCrossfadeView _containerViewClass]

  // instance methods
  -[SBIconImageCrossfadeView masksCorners]
  -[SBIconImageCrossfadeView setMasksCorners:]
  -[SBIconImageCrossfadeView setPerformsTrueCrossfade:]
  -[SBIconImageCrossfadeView performsTrueCrossfade]
  -[SBIconImageCrossfadeView iconImageView]
  -[SBIconImageCrossfadeView setCrossfadeFraction:]
  -[SBIconImageCrossfadeView morphFraction]
  -[SBIconImageCrossfadeView setMorphFraction:]
  -[SBIconImageCrossfadeView _applyCornerRadius:]
  -[SBIconImageCrossfadeView .cxx_destruct]
  -[SBIconImageCrossfadeView crossfadeView]
  -[SBIconImageCrossfadeView initWithSource:crossfadeView:]
  -[SBIconImageCrossfadeView prepareGeometry]
  -[SBIconImageCrossfadeView setAppSnapshotCornerRadius:]
  -[SBIconImageCrossfadeView crossfadeStyle]
  -[SBIconImageCrossfadeView setCrossfadeStyle:]
  -[SBIconImageCrossfadeView containerView]
  -[SBIconImageCrossfadeView setStretchAnchorPoint:]
  -[SBIconImageCrossfadeView iconImageSource]
  -[SBIconImageCrossfadeView stretchAnchorPoint]
  -[SBIconImageCrossfadeView cleanup]
  -[SBIconImageCrossfadeView crossfadeContainerView]
  -[SBIconImageCrossfadeView _updateCornerMask]
  -[SBIconImageCrossfadeView _setCornerRadiusEnabled:]
  -[SBIconImageCrossfadeView layoutSubviews]
  -[SBIconImageCrossfadeView _applyCrossfadeScaleX:scaleY:]
  -[SBIconImageCrossfadeView reparentsSourceView]


SBIconListGridCellInfo : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  {SBHIconGridSize=SS} gridSize
 @property  unsigned long numberOfUsedRows
 @property  unsigned long numberOfUsedColumns
 @property  BOOL layoutOutOfBounds
 @property  NSString *layoutDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListGridCellInfo layoutDescription]
  -[SBIconListGridCellInfo copyWithZone:]
  -[SBIconListGridCellInfo iconIndexForGridCellIndex:]
  -[SBIconListGridCellInfo init]
  -[SBIconListGridCellInfo numberOfUsedRows]
  -[SBIconListGridCellInfo dealloc]
  -[SBIconListGridCellInfo succinctDescriptionBuilder]
  -[SBIconListGridCellInfo gridSize]
  -[SBIconListGridCellInfo gridCellIndexForIconIndex:]
  -[SBIconListGridCellInfo succinctDescription]
  -[SBIconListGridCellInfo coordinateForGridCellIndex:]
  -[SBIconListGridCellInfo gridCellIndexForCoordinate:]
  -[SBIconListGridCellInfo clearAllIconAndGridCellIndexes]
  -[SBIconListGridCellInfo setNumberOfUsedRows:]
  -[SBIconListGridCellInfo setIconIndex:forGridCellIndex:]
  -[SBIconListGridCellInfo setGridCellIndex:forIconIndex:]
  -[SBIconListGridCellInfo addEmptyColumns:]
  -[SBIconListGridCellInfo addEmptyRows:]
  -[SBIconListGridCellInfo gridRangeForGridCellIndex:]
  -[SBIconListGridCellInfo numberOfUsedGridCellsInRow:columnRange:]
  -[SBIconListGridCellInfo numberOfUsedGridCellsInColumn:rowRange:]
  -[SBIconListGridCellInfo isOutOfBoundsAtIconIndex:]
  -[SBIconListGridCellInfo numberOfUsedGridCellsInRow:]
  -[SBIconListGridCellInfo numberOfUsedGridCellsInColumn:]
  -[SBIconListGridCellInfo maxGridCellIndexForIconIndex:]
  -[SBIconListGridCellInfo gridSizeForGridCellIndex:]
  -[SBIconListGridCellInfo isLayoutOutOfBounds]
  -[SBIconListGridCellInfo indexOfOutOfBoundsIconInRange:]
  -[SBIconListGridCellInfo setGridSize:]
  -[SBIconListGridCellInfo setNumberOfUsedColumns:]
  -[SBIconListGridCellInfo numberOfUsedColumns]
  -[SBIconListGridCellInfo descriptionWithMultilinePrefix:]
  -[SBIconListGridCellInfo descriptionBuilderWithMultilinePrefix:]


SBIconStateUnarchiveResult : NSObject /usr/lib/libSystem.B.dylib <SBIconStateUnarchiveContext, BSDescriptionProviding>
 @property  SBRootFolder *rootFolder
 @property  NSDictionary *metadata
 @property  BOOL valid
 @property  BOOL dirty
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconStateUnarchiveResult rootFolder]
  -[SBIconStateUnarchiveResult .cxx_destruct]
  -[SBIconStateUnarchiveResult succinctDescriptionBuilder]
  -[SBIconStateUnarchiveResult isValid]
  -[SBIconStateUnarchiveResult succinctDescription]
  -[SBIconStateUnarchiveResult isDirty]
  -[SBIconStateUnarchiveResult _setMetadata:]
  -[SBIconStateUnarchiveResult _popFolder]
  -[SBIconStateUnarchiveResult _noteEnteredNode]
  -[SBIconStateUnarchiveResult _noteExitedNode]
  -[SBIconStateUnarchiveResult _pushFolder:]
  -[SBIconStateUnarchiveResult _currentFolder]
  -[SBIconStateUnarchiveResult _currentParseDepth]
  -[SBIconStateUnarchiveResult _noteRepresentationIsCorrupted]
  -[SBIconStateUnarchiveResult _noteSignificantDeviation]
  -[SBIconStateUnarchiveResult _isNodeIdentifierAlreadyUnarchived:]
  -[SBIconStateUnarchiveResult _noteNodeIdentifierWasUnarchived:]
  -[SBIconStateUnarchiveResult _noteWidgetUniqueIdentifierWasUnarchived:]
  -[SBIconStateUnarchiveResult _isWidgetUniqueIdentifierAlreadyUnarchived:]
  -[SBIconStateUnarchiveResult _setRootFolder:]
  -[SBIconStateUnarchiveResult metadata]
  -[SBIconStateUnarchiveResult descriptionWithMultilinePrefix:]
  -[SBIconStateUnarchiveResult descriptionBuilderWithMultilinePrefix:]


SBHIconStateArchiver : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBHIconStateArchiver modernizeRootArchive:]
  +[SBHIconStateArchiver indexPathForLeafIdentifier:inArchive:]
  +[SBHIconStateArchiver folderPathForLeafIdentifier:inArchive:iconSource:]
  +[SBHIconStateArchiver leafIdentifiersInListAtIndexPath:inArchive:]
  +[SBHIconStateArchiver leafIdentifiersFromArchive:]
  +[SBHIconStateArchiver unarchiveRootFolderFromArchive:withIconSource:]
  +[SBHIconStateArchiver archiveRootFolderInModel:metadata:]
  +[SBHIconStateArchiver _representationForNode:inModel:]
  +[SBHIconStateArchiver _addLeafNodesForNode:toSet:]
  +[SBHIconStateArchiver _pathForNode:toIdentifier:]
  +[SBHIconStateArchiver _nodeAtPath:inNode:]
  +[SBHIconStateArchiver _representationForFolder:inModel:]
  +[SBHIconStateArchiver _representationForIcon:inModel:]
  +[SBHIconStateArchiver _representationForCustomIcon:inModel:]
  +[SBHIconStateArchiver _iconContainsMultipleRepresentations:]
  +[SBHIconStateArchiver _representationsForIcon:inModel:]
  +[SBHIconStateArchiver _folderTypeForFolder:]
  +[SBHIconStateArchiver _representationForList:inModel:]
  +[SBHIconStateArchiver _metadataForList:inModel:]
  +[SBHIconStateArchiver iconStateRepresentationForFolder:inModel:]
  +[SBHIconStateArchiver _addValuesForCustomIconElement:toRepresentation:]


SBHIconStateUnarchiver : NSObject /usr/lib/libSystem.B.dylib
 @property  id archive
 @property  SBHIconModel *iconSource
 @property  BOOL removesEmptyFolders

  // class methods
  +[SBHIconStateUnarchiver _getFolderDisplayName:defaultDisplayName:forRepresentation:iconSource:]

  // instance methods
  -[SBHIconStateUnarchiver archive]
  -[SBHIconStateUnarchiver unarchive]
  -[SBHIconStateUnarchiver initWithArchive:iconSource:]
  -[SBHIconStateUnarchiver .cxx_destruct]
  -[SBHIconStateUnarchiver setRemovesEmptyFolders:]
  -[SBHIconStateUnarchiver iconSource]
  -[SBHIconStateUnarchiver _nodeFromRepresentation:context:]
  -[SBHIconStateUnarchiver _folderFromRepresentation:withContext:]
  -[SBHIconStateUnarchiver _listFromRepresentation:listGridSize:gridSizeClassSizes:identifier:context:overflow:]
  -[SBHIconStateUnarchiver removesEmptyFolders]
  -[SBHIconStateUnarchiver _iconFromRepresentation:withContext:]
  -[SBHIconStateUnarchiver _widgetIconFromRepresentation:context:]
  -[SBHIconStateUnarchiver _newFolderIconForFolder:]
  -[SBHIconStateUnarchiver _folderClassForFolderType:context:]
  -[SBHIconStateUnarchiver _getFolderDisplayName:defaultDisplayName:forRepresentation:]
  -[SBHIconStateUnarchiver _canAddIconDataSource:toIcon:]
  -[SBHIconStateUnarchiver _customIconElementFromRepresentation:context:]


SBIconStateFolderPath : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long count

  // instance methods
  -[SBIconStateFolderPath init]
  -[SBIconStateFolderPath .cxx_destruct]
  -[SBIconStateFolderPath count]
  -[SBIconStateFolderPath enumerateFoldersUsingBlock:]
  -[SBIconStateFolderPath addFolderWithName:defaultName:indexPath:]
  -[SBIconStateFolderPath folderDefaultNameAtIndex:]
  -[SBIconStateFolderPath folderIndexPathAtIndex:]
  -[SBIconStateFolderPath folderNameAtIndex:]


SBHIconStateBuilder : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBHIconStateBuilder iconStateByReplacingTodayListsInIconState:withTodayListsFromIconState:]
  +[SBHIconStateBuilder iconStateWithIconLists:dock:]
  +[SBHIconStateBuilder iconStateWithIconLists:]
  +[SBHIconStateBuilder iconStateFolderWithName:iconLists:]


SBFolderControllerConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  SBFolder *folder
 @property  long long orientation
 @property  unsigned long allowedOrientations
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  <SBIconViewProviding> *iconViewProvider
 @property  <SBNestingViewControllerDelegate> *delegate
 @property  <SBFolderControllerDelegate> *folderDelegate
 @property  _UILegibilitySettings *legibilitySettings
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  SBIconPageIndicatorImageSetCache *iconPageIndicatorImageSetCache
 @property  SBFolderControllerAnimationContext *animationContext
 @property  UIView *headerView
 @property  double headerHeight
 @property  NSString *originatingIconLocation
 @property  unsigned long userInterfaceLayoutDirectionHandling
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} initialViewFrame
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFolderControllerConfiguration copyWithZone:]
  -[SBFolderControllerConfiguration setListLayoutProvider:]
  -[SBFolderControllerConfiguration init]
  -[SBFolderControllerConfiguration allowedOrientations]
  -[SBFolderControllerConfiguration legibilitySettings]
  -[SBFolderControllerConfiguration setIconImageCache:]
  -[SBFolderControllerConfiguration setHeaderView:]
  -[SBFolderControllerConfiguration iconImageCache]
  -[SBFolderControllerConfiguration .cxx_destruct]
  -[SBFolderControllerConfiguration animationContext]
  -[SBFolderControllerConfiguration setFolderDelegate:]
  -[SBFolderControllerConfiguration setOriginatingIconLocation:]
  -[SBFolderControllerConfiguration userInterfaceLayoutDirectionHandling]
  -[SBFolderControllerConfiguration setIconViewProvider:]
  -[SBFolderControllerConfiguration iconPageIndicatorImageSetCache]
  -[SBFolderControllerConfiguration initialViewFrame]
  -[SBFolderControllerConfiguration succinctDescriptionBuilder]
  -[SBFolderControllerConfiguration originatingIconLocation]
  -[SBFolderControllerConfiguration folderDelegate]
  -[SBFolderControllerConfiguration setHeaderHeight:]
  -[SBFolderControllerConfiguration setAllowedOrientations:]
  -[SBFolderControllerConfiguration setLegibilitySettings:]
  -[SBFolderControllerConfiguration folderIconImageCache]
  -[SBFolderControllerConfiguration setFolderIconImageCache:]
  -[SBFolderControllerConfiguration succinctDescription]
  -[SBFolderControllerConfiguration setAnimationContext:]
  -[SBFolderControllerConfiguration headerHeight]
  -[SBFolderControllerConfiguration setOrientation:]
  -[SBFolderControllerConfiguration folder]
  -[SBFolderControllerConfiguration listLayoutProvider]
  -[SBFolderControllerConfiguration initWithConfiguration:]
  -[SBFolderControllerConfiguration setInitialViewFrame:]
  -[SBFolderControllerConfiguration orientation]
  -[SBFolderControllerConfiguration setDelegate:]
  -[SBFolderControllerConfiguration headerView]
  -[SBFolderControllerConfiguration setUserInterfaceLayoutDirectionHandling:]
  -[SBFolderControllerConfiguration delegate]
  -[SBFolderControllerConfiguration descriptionWithMultilinePrefix:]
  -[SBFolderControllerConfiguration setFolder:]
  -[SBFolderControllerConfiguration iconViewProvider]
  -[SBFolderControllerConfiguration setIconPageIndicatorImageSetCache:]
  -[SBFolderControllerConfiguration descriptionBuilderWithMultilinePrefix:]


SBHomeScreenMaterialView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  BOOL highlighted
 @property  double brightness
 @property  UIView *backgroundView
 @property  {UIEdgeInsets=dddd} backgroundInsets

  // class methods
  +[SBHomeScreenMaterialView colorBurnContentImageForImage:]

  // instance methods
  -[SBHomeScreenMaterialView brightness]
  -[SBHomeScreenMaterialView backgroundView]
  -[SBHomeScreenMaterialView initWithFrame:]
  -[SBHomeScreenMaterialView setBackgroundInsets:]
  -[SBHomeScreenMaterialView isHighlighted]
  -[SBHomeScreenMaterialView .cxx_destruct]
  -[SBHomeScreenMaterialView setHighlighted:]
  -[SBHomeScreenMaterialView setLegibilityStyle:]
  -[SBHomeScreenMaterialView initWithFrame:backgroundView:foregroundImage:]
  -[SBHomeScreenMaterialView backgroundInsets]
  -[SBHomeScreenMaterialView _addHighlightViewIfNecessary]
  -[SBHomeScreenMaterialView setBrightness:]
  -[SBHomeScreenMaterialView layoutSubviews]


SBIconLabelImageParametersBuilder : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *text
 @property  SBIcon *icon
 @property  SBIconView *iconView
 @property  Class iconViewClass
 @property  NSString *iconLocation
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  {CGSize=dd} iconImageSize
 @property  _UILegibilitySettings *legibilitySettings
 @property  BOOL accessibilityReduceTransparencyEnabled
 @property  NSString *contentSizeCategory
 @property  UIColor *focusHighlightColor
 @property  double scale
 @property  long long labelAccessoryType
 @property  UIFont *font
 @property  UIColor *textColor
 @property  {UIEdgeInsets=dddd} textInsets
 @property  NSString *overrideText

  // class methods
  +[SBIconLabelImageParametersBuilder _normalFontSizeForSizeParameter:]
  +[SBIconLabelImageParametersBuilder defaultFontForContentSizeCategory:languageInsets:]
  +[SBIconLabelImageParametersBuilder insetsForFont:]
  +[SBIconLabelImageParametersBuilder _fontSizeParameterForContentSizeCategory:]

  // instance methods
  -[SBIconLabelImageParametersBuilder setIconView:]
  -[SBIconLabelImageParametersBuilder listLayout]
  -[SBIconLabelImageParametersBuilder iconImageSize]
  -[SBIconLabelImageParametersBuilder setListLayoutProvider:]
  -[SBIconLabelImageParametersBuilder iconView]
  -[SBIconLabelImageParametersBuilder init]
  -[SBIconLabelImageParametersBuilder legibilitySettings]
  -[SBIconLabelImageParametersBuilder labelAccessoryType]
  -[SBIconLabelImageParametersBuilder setScale:]
  -[SBIconLabelImageParametersBuilder text]
  -[SBIconLabelImageParametersBuilder .cxx_destruct]
  -[SBIconLabelImageParametersBuilder icon]
  -[SBIconLabelImageParametersBuilder textColor]
  -[SBIconLabelImageParametersBuilder _maxSize]
  -[SBIconLabelImageParametersBuilder focusHighlightColor]
  -[SBIconLabelImageParametersBuilder setIcon:]
  -[SBIconLabelImageParametersBuilder setLegibilitySettings:]
  -[SBIconLabelImageParametersBuilder isAccessibilityReduceTransparencyEnabled]
  -[SBIconLabelImageParametersBuilder setTextInsets:]
  -[SBIconLabelImageParametersBuilder setIcon:forLocation:]
  -[SBIconLabelImageParametersBuilder buildParameters]
  -[SBIconLabelImageParametersBuilder setLabelAccessoryType:]
  -[SBIconLabelImageParametersBuilder setOverrideText:]
  -[SBIconLabelImageParametersBuilder setContentSizeCategory:]
  -[SBIconLabelImageParametersBuilder setTextColor:]
  -[SBIconLabelImageParametersBuilder iconViewClass]
  -[SBIconLabelImageParametersBuilder listLayoutProvider]
  -[SBIconLabelImageParametersBuilder setFont:]
  -[SBIconLabelImageParametersBuilder contentSizeCategory]
  -[SBIconLabelImageParametersBuilder iconLocation]
  -[SBIconLabelImageParametersBuilder _hasValidInputs]
  -[SBIconLabelImageParametersBuilder overrideText]
  -[SBIconLabelImageParametersBuilder _fontWithLanguageInsets:]
  -[SBIconLabelImageParametersBuilder _canTruncateLabel]
  -[SBIconLabelImageParametersBuilder _canTightenLabel]
  -[SBIconLabelImageParametersBuilder setIconViewClass:]
  -[SBIconLabelImageParametersBuilder setFont:insets:]
  -[SBIconLabelImageParametersBuilder setAccessibilityReduceTransparencyEnabled:]
  -[SBIconLabelImageParametersBuilder font]
  -[SBIconLabelImageParametersBuilder textInsets]
  -[SBIconLabelImageParametersBuilder setText:]
  -[SBIconLabelImageParametersBuilder scale]
  -[SBIconLabelImageParametersBuilder setFocusHighlightColor:]


SBIcon : NSObject /usr/lib/libSystem.B.dylib <SBHIconCollationSupport, SBHUniquelyIdentifiable, SBIconIndexNode, BSDescriptionProviding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  id overrideBadgeNumberOrString
 @property  NSArray *iTunesCategoriesOrderedByRelevancy
 @property  <SBIconDelegate> *delegate
 @property  BOOL shouldWarmUp
 @property  NSString *displayName
 @property  BOOL canTruncateLabel
 @property  BOOL canTightenLabel
 @property  NSArray *tags
 @property  long long badgeValue
 @property  id badgeNumberOrString
 @property  long long labelAccessoryType
 @property  BOOL launchEnabled
 @property  BOOL launchDisabledForObscuredReason
 @property  BOOL supportsStackConfiguration
 @property  BOOL supportsRasterization
 @property  long long progressState
 @property  double progressPercent
 @property  BOOL progressPaused
 @property  BOOL shouldAnimateProgress
 @property  BOOL uninstalled
 @property  BOOL uninstallSupported
 @property  NSString *uninstallAlertTitle
 @property  NSString *uninstallAlertBody
 @property  NSString *uninstallAlertConfirmTitle
 @property  NSString *uninstallAlertCancelTitle
 @property  BOOL timedOut
 @property  NSArray *folderTitleOptions
 @property  NSString *folderFallbackTitle
 @property  BOOL canReceiveGrabbedIcon
 @property  BOOL canBeReceivedByIcon
 @property  BOOL canBeAddedToMultiItemDrag
 @property  NSString *automationID
 @property  BOOL canBeAddedToSubfolder
 @property  unsigned long gridSizeClass
 @property  unsigned long supportedGridSizeClasses
 @property  NSUserActivity *draggingUserActivity
 @property  NSString *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIcon genericIconImageWithInfo:]
  +[SBIcon canGenerateIconsInBackground]
  +[SBIcon iconImageFromUnmaskedImage:info:]
  +[SBIcon hasIconImage]
  +[SBIcon downloadingIconClass]
  +[SBIcon forcesBackgroundIconGeneration]

  // instance methods
  -[SBIcon iconImageViewClassForLocation:]
  -[SBIcon localeChanged]
  -[SBIcon containedNodeIdentifiers]
  -[SBIcon copyWithZone:]
  -[SBIcon generateIconImageWithInfo:]
  -[SBIcon automationID]
  -[SBIcon badgeValue]
  -[SBIcon nodesAlongIndexPath:consumedIndexes:]
  -[SBIcon shouldAnimateProgress]
  -[SBIcon tags]
  -[SBIcon containsNodeIdentifier:]
  -[SBIcon isTimedOut]
  -[SBIcon nodeDescriptionWithPrefix:]
  -[SBIcon progressState]
  -[SBIcon isGrabbedIconPlaceholder]
  -[SBIcon indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBIcon addNodeObserver:]
  -[SBIcon isUninstalled]
  -[SBIcon nodeIdentifier]
  -[SBIcon isFolderIcon]
  -[SBIcon removeNodeObserver:]
  -[SBIcon isWidgetIcon]
  -[SBIcon setUninstalled]
  -[SBIcon completeUninstall]
  -[SBIcon setBadge:]
  -[SBIcon labelAccessoryType]
  -[SBIcon possibleUserTapDidCancel]
  -[SBIcon genericIconImageWithInfo:]
  -[SBIcon .cxx_destruct]
  -[SBIcon isLeafIcon]
  -[SBIcon canBeAddedToSubfolder]
  -[SBIcon canBeAddedToMultiItemDrag]
  -[SBIcon _sbhIconLibraryCollationString]
  -[SBIcon leafIdentifier]
  -[SBIcon succinctDescriptionBuilder]
  -[SBIcon archivableStateDidChange]
  -[SBIcon uniqueIdentifier]
  -[SBIcon displayNameForLocation:]
  -[SBIcon reloadIconImage]
  -[SBIcon _notifyAccessoriesDidUpdate]
  -[SBIcon _notifyLaunchEnabledDidChange]
  -[SBIcon canTruncateLabel]
  -[SBIcon canTightenLabel]
  -[SBIcon overrideBadgeNumberOrString]
  -[SBIcon accessoryTextForLocation:]
  -[SBIcon representedSceneIdentifier]
  -[SBIcon isPlaceholder]
  -[SBIcon folderTitleOptions]
  -[SBIcon iTunesCategoriesOrderedByRelevancy]
  -[SBIcon succinctDescription]
  -[SBIcon isCategoryIcon]
  -[SBIcon isLaunchEnabled]
  -[SBIcon isLaunchDisabledForObscuredReason]
  -[SBIcon supportsStackConfiguration]
  -[SBIcon parentFolderIcon]
  -[SBIcon gridSizeClass]
  -[SBIcon displayNameForObscuredDisabledLaunchForLocation:]
  -[SBIcon accessoryTypeForLocation:]
  -[SBIcon isWidgetStackIcon]
  -[SBIcon canBeReceivedByIcon]
  -[SBIcon canReceiveGrabbedIcon]
  -[SBIcon supportedGridSizeClasses]
  -[SBIcon launchFromLocation:context:]
  -[SBIcon isProgressPaused]
  -[SBIcon iconImageWithInfo:]
  -[SBIcon possibleUserTapBeganWithAbsoluteTime:andContinuousTime:]
  -[SBIcon iconLibraryQueryingFilterStrings]
  -[SBIcon iconLibraryQueryingAlphaSortString]
  -[SBIcon downloadingIconDataSource]
  -[SBIcon uninstallAlertBody]
  -[SBIcon descriptionForLocation:]
  -[SBIcon isDownloadingIcon]
  -[SBIcon assumesAppInstallFinishedForFolderProgress]
  -[SBIcon folder]
  -[SBIcon unmaskedIconImageWithInfo:]
  -[SBIcon supportsRasterization]
  -[SBIcon setGridSizeClass:]
  -[SBIcon removeObserver:]
  -[SBIcon folderFallbackTitle]
  -[SBIcon _notifyImageDidUpdate]
  -[SBIcon noteBadgeDidChange]
  -[SBIcon isGridSizeClassAllowed:]
  -[SBIcon shouldWarmUp]
  -[SBIcon setOverrideBadgeNumberOrString:]
  -[SBIcon uninstallAlertTitle]
  -[SBIcon uninstallAlertConfirmTitle]
  -[SBIcon uninstallAlertCancelTitle]
  -[SBIcon draggingUserActivity]
  -[SBIcon setDelegate:]
  -[SBIcon progressPercent]
  -[SBIcon isUninstallSupported]
  -[SBIcon addObserver:]
  -[SBIcon hasObserver:]
  -[SBIcon localizedCompareDisplayNames:]
  -[SBIcon isAdditionalItemsIndicatorIcon]
  -[SBIcon displayName]
  -[SBIcon applicationBundleID]
  -[SBIcon enumerateObserversUsingBlock:]
  -[SBIcon delegate]
  -[SBIcon descriptionWithMultilinePrefix:]
  -[SBIcon badgeNumberOrString]
  -[SBIcon _sbhIconLibraryOverrideCollationSectionTitle]
  -[SBIcon descriptionBuilderWithMultilinePrefix:]


SBFolderContainerView : SBFTouchPassThroughView /System/Library/Frameworks/UIKit.framework/UIKit
 @property  SBFolderView *folderView
 @property  SBFolderContainerView *childFolderContainerView
 @property  UIView *backgroundView
 @property  double statusBarHeight

  // instance methods
  -[SBFolderContainerView backgroundView]
  -[SBFolderContainerView setBackgroundView:]
  -[SBFolderContainerView initWithFrame:]
  -[SBFolderContainerView childFolderContainerView]
  -[SBFolderContainerView folderView]
  -[SBFolderContainerView .cxx_destruct]
  -[SBFolderContainerView initWithFolderView:]
  -[SBFolderContainerView setStatusBarHeight:]
  -[SBFolderContainerView statusBarHeight]
  -[SBFolderContainerView setChildFolderContainerView:]
  -[SBFolderContainerView _frameForFolderView:]
  -[SBFolderContainerView layoutSubviews]


SBHWidgetFamilyButton : UIButton /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  NSLayoutConstraint *squareAspectRatioConstraint

  // instance methods
  -[SBHWidgetFamilyButton init]
  -[SBHWidgetFamilyButton setSelected:]
  -[SBHWidgetFamilyButton .cxx_destruct]
  -[SBHWidgetFamilyButton setHighlighted:]
  -[SBHWidgetFamilyButton _updateAspectRatioConstraint]
  -[SBHWidgetFamilyButton _updateBackgroundColorAnimated:]
  -[SBHWidgetFamilyButton _hasSingleCharacterTitle]
  -[SBHWidgetFamilyButton _drawsAsLight]
  -[SBHWidgetFamilyButton squareAspectRatioConstraint]
  -[SBHWidgetFamilyButton setSquareAspectRatioConstraint:]
  -[SBHWidgetFamilyButton setTitle:forState:]
  -[SBHWidgetFamilyButton layoutSubviews]


SBHWidgetFamilySegmentedControl : UIControl /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UIStackView *stackView
 @property  NSMutableArray *buttons
 @property  NSArray *items
 @property  long long selectedSegmentIndex

  // instance methods
  -[SBHWidgetFamilySegmentedControl initWithItems:]
  -[SBHWidgetFamilySegmentedControl setItems:]
  -[SBHWidgetFamilySegmentedControl _updateContent]
  -[SBHWidgetFamilySegmentedControl didMoveToWindow]
  -[SBHWidgetFamilySegmentedControl init]
  -[SBHWidgetFamilySegmentedControl stackView]
  -[SBHWidgetFamilySegmentedControl items]
  -[SBHWidgetFamilySegmentedControl buttons]
  -[SBHWidgetFamilySegmentedControl _buttonPressed:]
  -[SBHWidgetFamilySegmentedControl setButtons:]
  -[SBHWidgetFamilySegmentedControl .cxx_destruct]
  -[SBHWidgetFamilySegmentedControl selectedSegmentIndex]
  -[SBHWidgetFamilySegmentedControl setStackView:]
  -[SBHWidgetFamilySegmentedControl _updateSelectedStates]
  -[SBHWidgetFamilySegmentedControl _buttonForItem:]
  -[SBHWidgetFamilySegmentedControl layoutSubviews]
  -[SBHWidgetFamilySegmentedControl setSelectedSegmentIndex:]


SBRootFolderControllerConfiguration : SBFolderControllerConfiguration
 @property  BOOL forSnapshot
 @property  BOOL dockExternal
 @property  BOOL dockPinnedForRotation
 @property  BOOL showsDoneButtonWhileEditing
 @property  BOOL showsAddWidgetButtonWhileEditing
 @property  UIViewController *pullDownSearchViewController
 @property  UIViewController<SBHLegibility> *todayViewController
 @property  UIViewController<SBHLibraryProvider> *trailingCustomViewController
 @property  UIViewController<SBHSidebarProvider> *sidebarViewController
 @property  BOOL sidebarVisible
 @property  BOOL sidebarPinned
 @property  unsigned long sidebarAllowedOrientations
 @property  unsigned long ignoresOverscrollOnFirstPageOrientations
 @property  unsigned long ignoresOverscrollOnLastPageOrientations
 @property  unsigned long folderPageManagementAllowedOrientations
 @property  CHSAvocadoDescriptorProvider *avocadoDescriptorProvider

  // instance methods
  -[SBRootFolderControllerConfiguration avocadoDescriptorProvider]
  -[SBRootFolderControllerConfiguration isSidebarVisible]
  -[SBRootFolderControllerConfiguration isSidebarPinned]
  -[SBRootFolderControllerConfiguration sidebarViewController]
  -[SBRootFolderControllerConfiguration trailingCustomViewController]
  -[SBRootFolderControllerConfiguration setTodayViewController:]
  -[SBRootFolderControllerConfiguration showsDoneButtonWhileEditing]
  -[SBRootFolderControllerConfiguration todayViewController]
  -[SBRootFolderControllerConfiguration ignoresOverscrollOnFirstPageOrientations]
  -[SBRootFolderControllerConfiguration init]
  -[SBRootFolderControllerConfiguration sidebarAllowedOrientations]
  -[SBRootFolderControllerConfiguration setAvocadoDescriptorProvider:]
  -[SBRootFolderControllerConfiguration setDockExternal:]
  -[SBRootFolderControllerConfiguration .cxx_destruct]
  -[SBRootFolderControllerConfiguration isDockExternal]
  -[SBRootFolderControllerConfiguration setSidebarPinned:]
  -[SBRootFolderControllerConfiguration folderPageManagementAllowedOrientations]
  -[SBRootFolderControllerConfiguration setDockPinnedForRotation:]
  -[SBRootFolderControllerConfiguration setTrailingCustomViewController:]
  -[SBRootFolderControllerConfiguration ignoresOverscrollOnLastPageOrientations]
  -[SBRootFolderControllerConfiguration setSidebarViewController:]
  -[SBRootFolderControllerConfiguration showsAddWidgetButtonWhileEditing]
  -[SBRootFolderControllerConfiguration initWithConfiguration:]
  -[SBRootFolderControllerConfiguration pullDownSearchViewController]
  -[SBRootFolderControllerConfiguration setShowsAddWidgetButtonWhileEditing:]
  -[SBRootFolderControllerConfiguration setShowsDoneButtonWhileEditing:]
  -[SBRootFolderControllerConfiguration setForSnapshot:]
  -[SBRootFolderControllerConfiguration setSidebarVisible:]
  -[SBRootFolderControllerConfiguration setSidebarAllowedOrientations:]
  -[SBRootFolderControllerConfiguration setIgnoresOverscrollOnFirstPageOrientations:]
  -[SBRootFolderControllerConfiguration setIgnoresOverscrollOnLastPageOrientations:]
  -[SBRootFolderControllerConfiguration setFolderPageManagementAllowedOrientations:]
  -[SBRootFolderControllerConfiguration setPullDownSearchViewController:]
  -[SBRootFolderControllerConfiguration isDockPinnedForRotation]
  -[SBRootFolderControllerConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBRootFolderControllerConfiguration isForSnapshot]


SBHIconLabelVisualConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  double fontSize
 @property  double baselineOffsetFromImage
 @property  double height
 @property  double extraWidth
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconLabelVisualConfiguration setHeight:]
  -[SBHIconLabelVisualConfiguration copyWithZone:]
  -[SBHIconLabelVisualConfiguration init]
  -[SBHIconLabelVisualConfiguration setFontSize:]
  -[SBHIconLabelVisualConfiguration fontSize]
  -[SBHIconLabelVisualConfiguration setBaselineOffsetFromImage:]
  -[SBHIconLabelVisualConfiguration succinctDescriptionBuilder]
  -[SBHIconLabelVisualConfiguration extraWidth]
  -[SBHIconLabelVisualConfiguration succinctDescription]
  -[SBHIconLabelVisualConfiguration height]
  -[SBHIconLabelVisualConfiguration isEqual:]
  -[SBHIconLabelVisualConfiguration setExtraWidth:]
  -[SBHIconLabelVisualConfiguration baselineOffsetFromImage]
  -[SBHIconLabelVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHIconLabelVisualConfiguration descriptionBuilderWithMultilinePrefix:]


SBTitledHomeScreenButton : SBHomeScreenButton
 @property  {CGSize=dd} preferredContentFittingSize

  // class methods
  +[SBTitledHomeScreenButton contentImageWithTitle:]

  // instance methods
  -[SBTitledHomeScreenButton initWithFrame:]
  -[SBTitledHomeScreenButton sizeThatFits:]
  -[SBTitledHomeScreenButton initWithFrame:backgroundView:]
  -[SBTitledHomeScreenButton _preferredContentFittingSize]
  -[SBTitledHomeScreenButton preferredContentFittingSize]
  -[SBTitledHomeScreenButton setPreferredContentFittingSize:]


SBHEditingDoneButton : SBTitledHomeScreenButton
  // class methods
  +[SBHEditingDoneButton defaultContentImage]
  +[SBHEditingDoneButton defaultTitle]


SBHEditingWidgetButton : SBTitledHomeScreenButton
  // class methods
  +[SBHEditingWidgetButton defaultContentImage]


SBHDoubleSidedIconImageCrossfadeView : SBIconImageCrossfadeView
  // class methods
  +[SBHDoubleSidedIconImageCrossfadeView _containerViewClass]
  +[SBHDoubleSidedIconImageCrossfadeView layerClass]

  // instance methods
  -[SBHDoubleSidedIconImageCrossfadeView _applyCornerRadius:]
  -[SBHDoubleSidedIconImageCrossfadeView prepareGeometry]
  -[SBHDoubleSidedIconImageCrossfadeView _applyCornerRadiusToViews]
  -[SBHDoubleSidedIconImageCrossfadeView _applyCornerRadiusToIconImageView]
  -[SBHDoubleSidedIconImageCrossfadeView _applyCornerRadiusToCrossfadeView]
  -[SBHDoubleSidedIconImageCrossfadeView cleanup]
  -[SBHDoubleSidedIconImageCrossfadeView _setCornerRadiusEnabled:]
  -[SBHDoubleSidedIconImageCrossfadeView layoutSubviews]
  -[SBHDoubleSidedIconImageCrossfadeView _applyCrossfadeScaleX:scaleY:]
  -[SBHDoubleSidedIconImageCrossfadeView reparentsSourceView]


SBHIconImageTransformView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
  // class methods
  +[SBHIconImageTransformView layerClass]


SBIconListModelRepairUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBIconListModelRepairUtilities _findAndRepairEmptyRows:gridCellInfo:]
  +[SBIconListModelRepairUtilities _findAndRepairSmallWidgetGaps:smallWidgetGridSize:gridCellInfo:]
  +[SBIconListModelRepairUtilities _findAndRepairSingleIconGaps:gridCellInfo:]
  +[SBIconListModelRepairUtilities _maxGridCellIndexWithIconCount:gridCellInfo:]
  +[SBIconListModelRepairUtilities _firstIconOfSizeClass:withIcons:inRange:]
  +[SBIconListModelRepairUtilities repairModelByEliminatingGapsInIcons:gridSize:gridSizeClassSizes:]


SBHLibraryCategoriesRootFolder : SBRootFolder
 @property  BOOL supportsBadging

  // instance methods
  -[SBHLibraryCategoriesRootFolder supportsBadging]
  -[SBHLibraryCategoriesRootFolder enumerateAllIconsWithBaseIndexPath:options:usingBlock:]
  -[SBHLibraryCategoriesRootFolder setSupportsBadging:]


SBIconListGridLayout : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayout, BSDescriptionProviding>
 @property  SBIconListGridLayoutConfiguration *layoutConfiguration
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  SBHIconAccessoryVisualConfiguration *iconAccessoryVisualConfiguration
 @property  SBHFolderIconVisualConfiguration *folderIconVisualConfiguration
 @property  SBHFloatyFolderVisualConfiguration *floatyFolderVisualConfiguration
 @property  SBHSidebarVisualConfiguration *sidebarVisualConfiguration
 @property  SBHAppLibraryVisualConfiguration *appLibraryVisualConfiguration
 @property  SBHRootFolderVisualConfiguration *rootFolderVisualConfiguration
 @property  {SBHIconGridSizeClassSizes={SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}} iconGridSizeClassSizes
 @property  unsigned long supportedIconGridSizeClasses
 @property  BOOL usesAlternateLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListGridLayout iconImageInfoForGridSizeClass:]
  -[SBIconListGridLayout layoutConfiguration]
  -[SBIconListGridLayout iconGridSizeClassSizes]
  -[SBIconListGridLayout init]
  -[SBIconListGridLayout supportedIconGridSizeClasses]
  -[SBIconListGridLayout iconImageInfo]
  -[SBIconListGridLayout usesAlternateLayout]
  -[SBIconListGridLayout noteIcons:didDropAtCoordinate:inList:]
  -[SBIconListGridLayout iconAccessoryVisualConfiguration]
  -[SBIconListGridLayout layoutInsetsForOrientation:]
  -[SBIconListGridLayout rootFolderVisualConfiguration]
  -[SBIconListGridLayout .cxx_destruct]
  -[SBIconListGridLayout numberOfColumnsForOrientation:]
  -[SBIconListGridLayout numberOfRowsForOrientation:]
  -[SBIconListGridLayout labelVisualConfigurationForContentSizeCategory:options:]
  -[SBIconListGridLayout succinctDescriptionBuilder]
  -[SBIconListGridLayout folderIconVisualConfiguration]
  -[SBIconListGridLayout sidebarVisualConfiguration]
  -[SBIconListGridLayout succinctDescription]
  -[SBIconListGridLayout initWithLayoutConfiguration:]
  -[SBIconListGridLayout labelFontForContentSizeCategory:options:]
  -[SBIconListGridLayout isEqual:]
  -[SBIconListGridLayout appLibraryVisualConfiguration]
  -[SBIconListGridLayout accessoryFontForContentSizeCategory:options:]
  -[SBIconListGridLayout floatyFolderVisualConfiguration]
  -[SBIconListGridLayout accessoryBoldFont]
  -[SBIconListGridLayout accessoryFont]
  -[SBIconListGridLayout descriptionWithMultilinePrefix:]
  -[SBIconListGridLayout descriptionBuilderWithMultilinePrefix:]


SBHAddWidgetSheetAppCollectionViewCell : UICollectionViewCell /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UILabel *detailTextLabel
 @property  UIStackView *horizontalStackView
 @property  UIStackView *verticalStackView
 @property  UIView *separatorView
 @property  NSLayoutConstraint *iconHeightConstraint
 @property  NSLayoutConstraint *iconWidthConstraint
 @property  NSLayoutConstraint *leadingConstraint
 @property  NSLayoutConstraint *trailingConstraint
 @property  NSLayoutConstraint *topConstraint
 @property  NSLayoutConstraint *bottomConstraint
 @property  NSLayoutConstraint *separatorLeadingConstraint
 @property  BOOL shouldUseTableViewStyle
 @property  BOOL separatorVisible
 @property  BOOL separatorAlignedToLabels
 @property  {NSDirectionalEdgeInsets=dddd} contentInsets
 @property  double contentHorizontalSpacing
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  NSString *detailText
 @property  UILabel *textLabel
 @property  UIImageView *imageView

  // instance methods
  -[SBHAddWidgetSheetAppCollectionViewCell setIconImageInfo:]
  -[SBHAddWidgetSheetAppCollectionViewCell bottomConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell leadingConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell imageView]
  -[SBHAddWidgetSheetAppCollectionViewCell contentInsets]
  -[SBHAddWidgetSheetAppCollectionViewCell setContentInsets:]
  -[SBHAddWidgetSheetAppCollectionViewCell setBottomConstraint:]
  -[SBHAddWidgetSheetAppCollectionViewCell setSeparatorVisible:]
  -[SBHAddWidgetSheetAppCollectionViewCell iconImageInfo]
  -[SBHAddWidgetSheetAppCollectionViewCell setImageView:]
  -[SBHAddWidgetSheetAppCollectionViewCell initWithFrame:]
  -[SBHAddWidgetSheetAppCollectionViewCell setShouldUseTableViewStyle:]
  -[SBHAddWidgetSheetAppCollectionViewCell setSeparatorAlignedToLabels:]
  -[SBHAddWidgetSheetAppCollectionViewCell setContentHorizontalSpacing:]
  -[SBHAddWidgetSheetAppCollectionViewCell separatorView]
  -[SBHAddWidgetSheetAppCollectionViewCell .cxx_destruct]
  -[SBHAddWidgetSheetAppCollectionViewCell prepareForReuse]
  -[SBHAddWidgetSheetAppCollectionViewCell horizontalStackView]
  -[SBHAddWidgetSheetAppCollectionViewCell setHorizontalStackView:]
  -[SBHAddWidgetSheetAppCollectionViewCell setVerticalStackView:]
  -[SBHAddWidgetSheetAppCollectionViewCell detailText]
  -[SBHAddWidgetSheetAppCollectionViewCell setLeadingConstraint:]
  -[SBHAddWidgetSheetAppCollectionViewCell verticalStackView]
  -[SBHAddWidgetSheetAppCollectionViewCell setTextLabel:]
  -[SBHAddWidgetSheetAppCollectionViewCell setTopConstraint:]
  -[SBHAddWidgetSheetAppCollectionViewCell trailingConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell setDetailText:]
  -[SBHAddWidgetSheetAppCollectionViewCell topConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell setTrailingConstraint:]
  -[SBHAddWidgetSheetAppCollectionViewCell detailTextLabel]
  -[SBHAddWidgetSheetAppCollectionViewCell setSeparatorView:]
  -[SBHAddWidgetSheetAppCollectionViewCell textLabel]
  -[SBHAddWidgetSheetAppCollectionViewCell _updateSeparatorLeadingConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell _updateTableViewStyle]
  -[SBHAddWidgetSheetAppCollectionViewCell contentHorizontalSpacing]
  -[SBHAddWidgetSheetAppCollectionViewCell shouldUseTableViewStyle]
  -[SBHAddWidgetSheetAppCollectionViewCell isSeparatorVisible]
  -[SBHAddWidgetSheetAppCollectionViewCell isSeparatorAlignedToLabels]
  -[SBHAddWidgetSheetAppCollectionViewCell setDetailTextLabel:]
  -[SBHAddWidgetSheetAppCollectionViewCell iconHeightConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell setIconHeightConstraint:]
  -[SBHAddWidgetSheetAppCollectionViewCell iconWidthConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell setIconWidthConstraint:]
  -[SBHAddWidgetSheetAppCollectionViewCell separatorLeadingConstraint]
  -[SBHAddWidgetSheetAppCollectionViewCell setSeparatorLeadingConstraint:]


SBHStackConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  BOOL allowsSuggestions
 @property  BOOL allowsExternalSuggestions
 @property  NSArray *dataSources
 @property  unsigned long sizeClass

  // class methods
  +[SBHStackConfiguration supportsSecureCoding]

  // instance methods
  -[SBHStackConfiguration copyWithZone:]
  -[SBHStackConfiguration setSizeClass:]
  -[SBHStackConfiguration sizeClass]
  -[SBHStackConfiguration setDataSources:]
  -[SBHStackConfiguration allowsExternalSuggestions]
  -[SBHStackConfiguration setAllowsExternalSuggestions:]
  -[SBHStackConfiguration .cxx_destruct]
  -[SBHStackConfiguration dataSources]
  -[SBHStackConfiguration encodeWithCoder:]
  -[SBHStackConfiguration allowsSuggestions]
  -[SBHStackConfiguration setAllowsSuggestions:]
  -[SBHStackConfiguration initWithCoder:]


_SBIconListModelTransaction : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *requestID

  // instance methods
  -[_SBIconListModelTransaction requestID]
  -[_SBIconListModelTransaction initWithRequestID:]
  -[_SBIconListModelTransaction .cxx_destruct]
  -[_SBIconListModelTransaction addNodeIdentifiers:]
  -[_SBIconListModelTransaction removeNodeIdentifiers:]
  -[_SBIconListModelTransaction commitChangesToObservers:forNode:]


SBIconListModel : NSObject /usr/lib/libSystem.B.dylib <SBIconIndexMutableListObserver, SBTreeNode, SBIconIndexNode, NSFastEnumeration>
 @property  SBFolder *folder
 @property  {SBHIconGridSize=SS} gridSize
 @property  unsigned long numberOfIcons
 @property  unsigned long numberOfNonPlaceholderIcons
 @property  unsigned long maxNumberOfIcons
 @property  {SBHIconGridSizeClassSizes={SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}{SBHIconGridSize=SS}} iconGridSizeClassSizes
 @property  unsigned long numberOfUsedRows
 @property  unsigned long numberOfUsedColumns
 @property  NSArray *icons
 @property  SBIcon *firstIcon
 @property  SBIcon *lastIcon
 @property  <SBIconListModelIconValidator> *iconValidator
 @property  unsigned long numberOfUsedSlots
 @property  BOOL hidden
 @property  NSDate *hiddenDate
 @property  unsigned long overflowSlotCount
 @property  NSString *layoutDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *children
 @property  <SBTreeNode> *parent
 @property  NSString *uniqueIdentifier

  // class methods
  +[SBIconListModel iconGridCellInfoForIcons:gridSize:gridSizeClassSizes:options:]
  +[SBIconListModel movedIconsWithOriginalOrder:newOrder:]

  // instance methods
  -[SBIconListModel sortUsingSelector:]
  -[SBIconListModel isFull]
  -[SBIconListModel iconsOfClass:]
  -[SBIconListModel didAddIcon:]
  -[SBIconListModel parent]
  -[SBIconListModel containedNodeIdentifiers]
  -[SBIconListModel layoutDescription]
  -[SBIconListModel removeAllIcons]
  -[SBIconListModel removeIcons:]
  -[SBIconListModel enumerateIconsUsingBlock:]
  -[SBIconListModel iconAtIndex:]
  -[SBIconListModel allowsAddingIconCount:]
  -[SBIconListModel maxNumberOfIcons]
  -[SBIconListModel nodesAlongIndexPath:consumedIndexes:]
  -[SBIconListModel directlyContainsIconWithIdentifier:]
  -[SBIconListModel iconsInGridColumnRange:gridCellInfo:]
  -[SBIconListModel numberOfNonPlaceholderIcons]
  -[SBIconListModel markIconStateClean]
  -[SBIconListModel markIconStateDirty]
  -[SBIconListModel addIcon:]
  -[SBIconListModel setParent:]
  -[SBIconListModel isAllowedToContainIcon:]
  -[SBIconListModel objectWithUniqueIdentifier:]
  -[SBIconListModel initWithFolder:maxIconCount:]
  -[SBIconListModel containsNodeIdentifier:]
  -[SBIconListModel enumerateFolderIconsUsingBlock:]
  -[SBIconListModel isAllowedToContainIcons:]
  -[SBIconListModel nodeDescriptionWithPrefix:]
  -[SBIconListModel addIconsOfClass:toSet:]
  -[SBIconListModel sortUsingComparator:]
  -[SBIconListModel addIconsPassingTest:toSet:]
  -[SBIconListModel iconGridSizeClassSizes]
  -[SBIconListModel placeIcon:atIndex:options:bumpedIcons:]
  -[SBIconListModel list:didAddContainedNodeIdentifiers:]
  -[SBIconListModel init]
  -[SBIconListModel indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBIconListModel addNodeObserver:]
  -[SBIconListModel list:didRemoveContainedNodeIdentifiers:]
  -[SBIconListModel nodeIdentifier]
  -[SBIconListModel allowsAddingIcons:ignoringPlaceholders:]
  -[SBIconListModel addIcons:]
  -[SBIconListModel children]
  -[SBIconListModel numberOfUsedRows]
  -[SBIconListModel isIconStateDirty]
  -[SBIconListModel insertIcon:atIndex:options:]
  -[SBIconListModel performChangesByClusteringForSizeClass:withGridCellInfoOptions:block:]
  -[SBIconListModel removeListObserver:]
  -[SBIconListModel canBounceIcon:]
  -[SBIconListModel ancestryDidChange]
  -[SBIconListModel listDidMoveNodes:]
  -[SBIconListModel removeNodeObserver:]
  -[SBIconListModel setOverflowSlotCount:]
  -[SBIconListModel directlyContainsIcon:]
  -[SBIconListModel numberOfIcons]
  -[SBIconListModel hiddenDate]
  -[SBIconListModel allowedIconsForIcons:ignoringPlaceholders:]
  -[SBIconListModel setIcons:]
  -[SBIconListModel firstIcon]
  -[SBIconListModel isGridLayoutValid]
  -[SBIconListModel performChangesByPreservingPositionsOfIconsLargerThanSizeClass:block:]
  -[SBIconListModel .cxx_destruct]
  -[SBIconListModel iconsInGridColumn:gridCellInfo:]
  -[SBIconListModel bestGridCellIndexForInsertingIcon:atGridCellIndex:]
  -[SBIconListModel _notifyListObservers:]
  -[SBIconListModel _coalesceChangesWithRequestID:changeBlock:]
  -[SBIconListModel placeIcon:atIndex:]
  -[SBIconListModel icons]
  -[SBIconListModel _clusterIconsForSizeClass:gridCellInfoOptions:]
  -[SBIconListModel lastIcon]
  -[SBIconListModel overflowSlotCount]
  -[SBIconListModel moveContainedIcon:toGridCellIndex:gridCellInfoOptions:]
  -[SBIconListModel succinctDescriptionBuilder]
  -[SBIconListModel _moveIcon:byClusteringForSizeClass:toGridCellIndex:gridCellInfoOptions:]
  -[SBIconListModel gridSize]
  -[SBIconListModel isFullIncludingPlaceholders]
  -[SBIconListModel allowedIconsForByReplacingContentsWithIcons:]
  -[SBIconListModel uniqueIdentifier]
  -[SBIconListModel removeIconFromOtherPositionsInHierarchy:]
  -[SBIconListModel directlyContainedIconWithIdentifier:]
  -[SBIconListModel _iconIndexForMovingIcon:toGridCellIndex:gridCellInfo:]
  -[SBIconListModel removeIcon:]
  -[SBIconListModel removeIconAtIndex:]
  -[SBIconListModel allowsAddingIcon:ignoringPlaceholders:]
  -[SBIconListModel iconsInGridRow:gridCellInfo:]
  -[SBIconListModel countByEnumeratingWithState:objects:count:]
  -[SBIconListModel iconsForGridRange:gridCellInfo:]
  -[SBIconListModel reversedOrderLayoutDescription]
  -[SBIconListModel setHiddenDate:]
  -[SBIconListModel initWithUniqueIdentifier:folder:gridSize:gridSizeClassSizes:]
  -[SBIconListModel _unclusterIcons:ofSizeClass:gridCellInfoOptions:]
  -[SBIconListModel succinctDescription]
  -[SBIconListModel addListObserver:]
  -[SBIconListModel isEmptyIgnoringPlaceholders]
  -[SBIconListModel changeGridSizeClassOfContainedIcon:toGridSizeClass:gridCellInfo:]
  -[SBIconListModel _iconAtIndex:]
  -[SBIconListModel willAddIcon:atIndex:]
  -[SBIconListModel iconsThatAreAllowedToBeContainedInIcons:]
  -[SBIconListModel allowsAddingIcons:]
  -[SBIconListModel didRemoveIcon:]
  -[SBIconListModel iconValidator]
  -[SBIconListModel _updateModelByRepairingGapsIfNecessary]
  -[SBIconListModel folder]
  -[SBIconListModel indexForIcon:]
  -[SBIconListModel removeIconFromOtherPositionsInHierarchy:forInsertingAtIndex:]
  -[SBIconListModel addIcon:asDirty:]
  -[SBIconListModel setIconValidator:]
  -[SBIconListModel iconGridCellInfoBySimulatingInsertionOfIcons:ignoringPlaceholders:iconOrder:]
  -[SBIconListModel numberOfFreeSlots]
  -[SBIconListModel removeIconAtIndex:options:]
  -[SBIconListModel getIconGridRange:forGridCellIndex:gridCellInfo:]
  -[SBIconListModel directlyContainedIconPassingTest:]
  -[SBIconListModel allowedIconsForIcons:]
  -[SBIconListModel isEmpty]
  -[SBIconListModel gridCellInfoForGridSize:options:]
  -[SBIconListModel iconsAtGridCellIndexes:gridCellInfo:]
  -[SBIconListModel numberOfUsedColumns]
  -[SBIconListModel allowsAddingIcon:]
  -[SBIconListModel insertIcon:atIndex:]
  -[SBIconListModel directlyContainsLeafIconWithIdentifier:]
  -[SBIconListModel layoutDescriptionWithOptions:]
  -[SBIconListModel removeLastIcon]
  -[SBIconListModel gridCellInfoWithOptions:]
  -[SBIconListModel descriptionWithMultilinePrefix:]
  -[SBIconListModel firstFreeSlotIndex]
  -[SBIconListModel insertIcons:atIndex:options:]
  -[SBIconListModel numberOfUsedSlots]
  -[SBIconListModel setHidden:]
  -[SBIconListModel descriptionBuilderWithMultilinePrefix:]
  -[SBIconListModel _checkAndRemoveBouncedIconsAvoidingIcons:ignoringTrailingIconCheck:]
  -[SBIconListModel initWithFolder:gridSize:gridSizeClassSizes:]
  -[SBIconListModel isHidden]
  -[SBIconListModel iconsAtIndexes:]


SBHLibraryCategoryIdentifier : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *localizedDisplayName
 @property  unsigned long predictionCategoryID
 @property  unsigned long predictionCategoryIndex

  // class methods
  +[SBHLibraryCategoryIdentifier supportsSecureCoding]
  +[SBHLibraryCategoryIdentifier categoryWithLocalizedDisplayName:categoryID:]
  +[SBHLibraryCategoryIdentifier categoryWithPredictionCategory:categoryID:categoryIndex:]

  // instance methods
  -[SBHLibraryCategoryIdentifier copyWithZone:]
  -[SBHLibraryCategoryIdentifier .cxx_destruct]
  -[SBHLibraryCategoryIdentifier succinctDescriptionBuilder]
  -[SBHLibraryCategoryIdentifier encodeWithCoder:]
  -[SBHLibraryCategoryIdentifier localizedDisplayName]
  -[SBHLibraryCategoryIdentifier predictionCategoryID]
  -[SBHLibraryCategoryIdentifier initWithLocalizedDisplayName:predictionCategoryID:categoryIndex:]
  -[SBHLibraryCategoryIdentifier succinctDescription]
  -[SBHLibraryCategoryIdentifier isEqual:]
  -[SBHLibraryCategoryIdentifier predictionCategoryIndex]
  -[SBHLibraryCategoryIdentifier descriptionWithMultilinePrefix:]
  -[SBHLibraryCategoryIdentifier initWithCoder:]
  -[SBHLibraryCategoryIdentifier descriptionBuilderWithMultilinePrefix:]


SBDockView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UIColor *accessibilityBackgroundColor
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIView *backgroundView
 @property  unsigned long dockEdge
 @property  double dockHeight
 @property  double dockHeightPadding
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} dockListViewFrame
 @property  SBDockIconListView *dockListView
 @property  double dockListOffset
 @property  <SBDockViewDelegate> *delegate
 @property  BOOL dockInset

  // instance methods
  -[SBDockView setDockEdge:]
  -[SBDockView dockEdge]
  -[SBDockView dockHeight]
  -[SBDockView dockListOffset]
  -[SBDockView traitCollection]
  -[SBDockView didMoveToWindow]
  -[SBDockView backgroundView]
  -[SBDockView setBackgroundView:]
  -[SBDockView legibilitySettings]
  -[SBDockView _dockOverhangInsets]
  -[SBDockView accessibilityBackgroundColor]
  -[SBDockView dockListViewFrame]
  -[SBDockView updateAccessibilityTintColor]
  -[SBDockView dealloc]
  -[SBDockView minimumHomeScreenScaleDidChange]
  -[SBDockView _layoutScale]
  -[SBDockView .cxx_destruct]
  -[SBDockView getDockViewMetrics:]
  -[SBDockView _backgroundContrastDidChange:]
  -[SBDockView _visualConfiguration]
  -[SBDockView _minimumHomeScreenScale]
  -[SBDockView dockHeightPadding]
  -[SBDockView _updateCornerRadii]
  -[SBDockView setLegibilitySettings:]
  -[SBDockView traitCollectionDidChange:]
  -[SBDockView isDockInset]
  -[SBDockView dockListView]
  -[SBDockView setDelegate:]
  -[SBDockView delegate]
  -[SBDockView initWithDockListView:forSnapshot:]
  -[SBDockView setDockListOffset:]
  -[SBDockView setBackgroundAlpha:]
  -[SBDockView layoutSubviews]
  -[SBDockView _listLayout]


SBHAddWidgetDetailSheetWidgetDescriptionView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UILabel *titleLabel
 @property  UILabel *descriptionLabel

  // instance methods
  -[SBHAddWidgetDetailSheetWidgetDescriptionView setTitleLabel:]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView titleLabel]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView initWithTitle:subtitle:]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView .cxx_destruct]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView _createConstraints]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView descriptionLabel]
  -[SBHAddWidgetDetailSheetWidgetDescriptionView setDescriptionLabel:]


SBSearchScrollView : UIScrollView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
  // instance methods
  -[SBSearchScrollView gestureRecognizerShouldBegin:]
  -[SBSearchScrollView gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]


SBSearchGesture : NSObject /usr/lib/libSystem.B.dylib <UIScrollViewDelegate, BSDescriptionProviding>
 @property  UIView *targetView
 @property  BOOL animatingResetOrReveal
 @property  BOOL showingSearch
 @property  BOOL tracking
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBSearchGesture searchHeaderHeight]

  // instance methods
  -[SBSearchGesture scrollViewDidScrollToTop:]
  -[SBSearchGesture _updateScrollingEnabled]
  -[SBSearchGesture _updateForFinalContentOffset]
  -[SBSearchGesture init]
  -[SBSearchGesture locationInView:]
  -[SBSearchGesture setTargetView:]
  -[SBSearchGesture scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBSearchGesture .cxx_destruct]
  -[SBSearchGesture updateForRotation]
  -[SBSearchGesture resetAnimated:]
  -[SBSearchGesture succinctDescriptionBuilder]
  -[SBSearchGesture _isShowingSearch]
  -[SBSearchGesture isShowingSearch]
  -[SBSearchGesture setDisabled:forReason:]
  -[SBSearchGesture scrollViewDidEndDecelerating:]
  -[SBSearchGesture scrollViewWillBeginDragging:]
  -[SBSearchGesture succinctDescription]
  -[SBSearchGesture requireGestureRecognizerToFail:]
  -[SBSearchGesture _notifyThaWeStartedShowingOrHiding]
  -[SBSearchGesture revealAnimated:]
  -[SBSearchGesture isTracking]
  -[SBSearchGesture scrollViewDidScroll:]
  -[SBSearchGesture removeObserver:]
  -[SBSearchGesture scrollViewDidEndScrollingAnimation:]
  -[SBSearchGesture addObserver:]
  -[SBSearchGesture isAnimatingResetOrReveal]
  -[SBSearchGesture targetView]
  -[SBSearchGesture descriptionWithMultilinePrefix:]
  -[SBSearchGesture _updateForScrollingEnded]
  -[SBSearchGesture descriptionBuilderWithMultilinePrefix:]
  -[SBSearchGesture scrollViewDidEndDragging:willDecelerate:]


_SBHRecentsDocumentView : SBFView /System/Library/Frameworks/UIKit.framework/UIKit
  // instance methods
  -[_SBHRecentsDocumentView systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:]


SBHRecentsDocumentExtensionWrappingViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
  // instance methods
  -[SBHRecentsDocumentExtensionWrappingViewController init]
  -[SBHRecentsDocumentExtensionWrappingViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[SBHRecentsDocumentExtensionWrappingViewController dealloc]
  -[SBHRecentsDocumentExtensionWrappingViewController .cxx_destruct]
  -[SBHRecentsDocumentExtensionWrappingViewController cancelTouchesForCurrentEventInHostedContent]
  -[SBHRecentsDocumentExtensionWrappingViewController setPreferredContentSize:]
  -[SBHRecentsDocumentExtensionWrappingViewController wrapRemoteViewController:]
  -[SBHRecentsDocumentExtensionWrappingViewController _canShowWhileLocked]
  -[SBHRecentsDocumentExtensionWrappingViewController _updateViewIntrinsicContentSize:]
  -[SBHRecentsDocumentExtensionWrappingViewController loadView]


SBIconLabelImageParameters : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying>
 @property  NSString *text
 @property  {CGSize=dd} maxSize
 @property  UIFont *font
 @property  double scale
 @property  BOOL canTruncate
 @property  BOOL canTighten
 @property  BOOL containsEmoji
 @property  long long legibilityStyle
 @property  UIColor *textColor
 @property  BOOL accessibilityReduceTransparencyEnabled
 @property  NSString *contentSizeCategory
 @property  UIColor *focusHighlightColor
 @property  {UIEdgeInsets=dddd} textInsets
 @property  {UIEdgeInsets=dddd} fontLanguageInsets
 @property  NSString *iconLocation
 @property  BOOL colorspaceGrayscale

  // instance methods
  -[SBIconLabelImageParameters copyWithZone:]
  -[SBIconLabelImageParameters init]
  -[SBIconLabelImageParameters maxSize]
  -[SBIconLabelImageParameters text]
  -[SBIconLabelImageParameters .cxx_destruct]
  -[SBIconLabelImageParameters canTighten]
  -[SBIconLabelImageParameters textColor]
  -[SBIconLabelImageParameters focusHighlightColor]
  -[SBIconLabelImageParameters isAccessibilityReduceTransparencyEnabled]
  -[SBIconLabelImageParameters isColorspaceGrayscale]
  -[SBIconLabelImageParameters isEqual:]
  -[SBIconLabelImageParameters canTruncate]
  -[SBIconLabelImageParameters contentSizeCategory]
  -[SBIconLabelImageParameters containsEmoji]
  -[SBIconLabelImageParameters initWithParameters:]
  -[SBIconLabelImageParameters legibilityStyle]
  -[SBIconLabelImageParameters iconLocation]
  -[SBIconLabelImageParameters _noteNeedsHashRecalculation]
  -[SBIconLabelImageParameters mutableCopyWithZone:]
  -[SBIconLabelImageParameters font]
  -[SBIconLabelImageParameters textInsets]
  -[SBIconLabelImageParameters scale]
  -[SBIconLabelImageParameters fontLanguageInsets]


SBHIconLibrarySpotlightQueryEngine : SBHIconLibraryAbstractQueryEngine
  // instance methods
  -[SBHIconLibrarySpotlightQueryEngine .cxx_destruct]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_teardownQueryContext:]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_sortComperatorForQueryContext:]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_noteQueryResultsWereUpdated:iconLibraryQueryContext:notifyDelegate:]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_isBundleIdentifierValid:iconLibraryQueryContext:]
  -[SBHIconLibrarySpotlightQueryEngine executeQuery:]
  -[SBHIconLibrarySpotlightQueryEngine _searchQueryForIconLibraryQuery:]
  -[SBHIconLibrarySpotlightQueryEngine _relevancyQueryForLibraryQuery:]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_markBundleIdentifiers:iconLibraryQueryContext:]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_unmarkBundleIdentifiers:iconLibraryQueryContext:]
  -[SBHIconLibrarySpotlightQueryEngine _processingQueue_updateQueryRelevancyScores:iconLibraryQueryContext:]


SBHAdjustableRootIconListLayoutProvider : SBHDefaultIconListLayoutProvider
  // instance methods
  -[SBHAdjustableRootIconListLayoutProvider layoutForIconLocation:]


SBHIconDragAutoScrollAssistant : NSObject /usr/lib/libSystem.B.dylib
 @property  <SBHIconDragAutoScrollAssistantDelegate> *delegate
 @property  UIView *referenceView
 @property  <UIDropSession> *activeDropSession

  // instance methods
  -[SBHIconDragAutoScrollAssistant initWithDelegate:referenceView:]
  -[SBHIconDragAutoScrollAssistant setActiveDropSession:]
  -[SBHIconDragAutoScrollAssistant dealloc]
  -[SBHIconDragAutoScrollAssistant .cxx_destruct]
  -[SBHIconDragAutoScrollAssistant referenceView]
  -[SBHIconDragAutoScrollAssistant setReferenceView:]
  -[SBHIconDragAutoScrollAssistant _displayLinkFired:]
  -[SBHIconDragAutoScrollAssistant _currentLocation]
  -[SBHIconDragAutoScrollAssistant setDelegate:]
  -[SBHIconDragAutoScrollAssistant _autoScrollDirectionForLocation:]
  -[SBHIconDragAutoScrollAssistant activeDropSession]
  -[SBHIconDragAutoScrollAssistant invalidate]
  -[SBHIconDragAutoScrollAssistant delegate]


SBIconRotationContainer : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  SBIconView *startView
 @property  SBIconView *endView
 @property  <SBIconViewProviding> *iconViewProvider
 @property  SBIcon *startIcon
 @property  SBIcon *endIcon
 @property  {SBIconCoordinate=qq} coordinate
 @property  NSString *location
 @property  long long transitionAnimation
 @property  BOOL offscreen

  // instance methods
  -[SBIconRotationContainer endIcon]
  -[SBIconRotationContainer coordinate]
  -[SBIconRotationContainer .cxx_destruct]
  -[SBIconRotationContainer endView]
  -[SBIconRotationContainer setIconViewProvider:]
  -[SBIconRotationContainer startView]
  -[SBIconRotationContainer startIcon]
  -[SBIconRotationContainer initWithFrame:startIcon:endIcon:iconViewProvider:coordinate:location:transitionAnimation:offscreen:]
  -[SBIconRotationContainer prepareToTransition]
  -[SBIconRotationContainer performTransition]
  -[SBIconRotationContainer concludeTransition]
  -[SBIconRotationContainer location]
  -[SBIconRotationContainer addIconViewForIcon:configurationOptions:]
  -[SBIconRotationContainer transitionAnimation]
  -[SBIconRotationContainer isOffscreen]
  -[SBIconRotationContainer iconViewProvider]
  -[SBIconRotationContainer layoutSubviews]


SBIconPreviousLocationTracker : NSObject /usr/lib/libSystem.B.dylib
 @property  SBHIconModel *iconModel

  // instance methods
  -[SBIconPreviousLocationTracker setIconModel:]
  -[SBIconPreviousLocationTracker captureLocationInfoForIcon:inModel:]
  -[SBIconPreviousLocationTracker previousLocationInfoForIcon:]
  -[SBIconPreviousLocationTracker .cxx_destruct]
  -[SBIconPreviousLocationTracker iconModel]


SBIconPreviousLocationInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  SBFolder *folder
 @property  NSString *folderName

  // instance methods
  -[SBIconPreviousLocationInfo .cxx_destruct]
  -[SBIconPreviousLocationInfo setFolderName:]
  -[SBIconPreviousLocationInfo folder]
  -[SBIconPreviousLocationInfo folderName]
  -[SBIconPreviousLocationInfo setFolder:]


SBFloatingDockView : SBFTouchPassThroughView /System/Library/Frameworks/UIKit.framework/UIKit
 @property  SBFloatingDockPlatterView *mainPlatterView
 @property  UIView *dividerView
 @property  UIView *touchReceivingView
 @property  double iconContentScale
 @property  <SBFloatingDockViewDelegate> *delegate
 @property  double maximumDockContinuousCornerRadius
 @property  {CGSize=dd} maximumIconSize
 @property  double maximumPlatterHeight
 @property  double maximumInterIconSpacing
 @property  SBDockIconListView *userIconListView
 @property  SBDockIconListView *recentIconListView
 @property  UIView *backgroundView
 @property  {UIEdgeInsets=dddd} paddingEdgeInsets
 @property  double platterVerticalMargin
 @property  unsigned long minimumUserIconSpaces
 @property  double contentHeight
 @property  double interIconSpacing
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} platterFrame
 @property  BOOL hasPlatterShadow
 @property  {UIEdgeInsets=dddd} platterShadowOutsets

  // class methods
  +[SBFloatingDockView _referenceInterIconSpacingWithIconImageInfo:]
  +[SBFloatingDockView maximumInterIconSpacingWithIconImageInfo:]
  +[SBFloatingDockView maximumDockContinuousCornerRadiusWithIconImageInfo:]
  +[SBFloatingDockView maximumIconSizeWithIconImageInfo:]
  +[SBFloatingDockView maximumPlatterHeightWithIconImageInfo:]
  +[SBFloatingDockView contentHeightForBounds:mainPlatterViewFrame:]
  +[SBFloatingDockView getMetrics:forBounds:numberOfUserIcons:numberOfRecentIcons:paddingEdgeInsets:referenceIconSize:maximumIconSize:referenceInterIconSpacing:maximumInterIconSpacing:platterVerticalMargin:]
  +[SBFloatingDockView minimumPlatterMargin]

  // instance methods
  -[SBFloatingDockView bounce]
  -[SBFloatingDockView backgroundView]
  -[SBFloatingDockView _dynamicUserInterfaceTraitDidChange]
  -[SBFloatingDockView setBackgroundView:]
  -[SBFloatingDockView iconContentScale]
  -[SBFloatingDockView setIconContentScale:]
  -[SBFloatingDockView initWithFrame:]
  -[SBFloatingDockView .cxx_destruct]
  -[SBFloatingDockView setRecentIconListView:]
  -[SBFloatingDockView userIconListView]
  -[SBFloatingDockView recentIconListView]
  -[SBFloatingDockView contentHeightForBounds:]
  -[SBFloatingDockView interIconSpacing]
  -[SBFloatingDockView platterVerticalMargin]
  -[SBFloatingDockView setPlatterVerticalMargin:]
  -[SBFloatingDockView platterShadowOutsetsForBounds:]
  -[SBFloatingDockView maximumDockContinuousCornerRadius]
  -[SBFloatingDockView platterFrame]
  -[SBFloatingDockView setPaddingEdgeInsets:]
  -[SBFloatingDockView setUserIconListView:]
  -[SBFloatingDockView setHasPlatterShadow:]
  -[SBFloatingDockView setMinimumUserIconSpaces:]
  -[SBFloatingDockView contentHeight]
  -[SBFloatingDockView _iconImageInfo]
  -[SBFloatingDockView pointInside:withEvent:]
  -[SBFloatingDockView setDelegate:]
  -[SBFloatingDockView mainPlatterView]
  -[SBFloatingDockView updateDividerVisualStyling]
  -[SBFloatingDockView maximumPlatterHeight]
  -[SBFloatingDockView getMetrics:forBounds:]
  -[SBFloatingDockView _referenceIconSize]
  -[SBFloatingDockView maximumIconSize]
  -[SBFloatingDockView _referenceInterIconSpacing]
  -[SBFloatingDockView maximumInterIconSpacing]
  -[SBFloatingDockView minimumUserIconSpaces]
  -[SBFloatingDockView dividerView]
  -[SBFloatingDockView setDividerView:]
  -[SBFloatingDockView hasPlatterShadow]
  -[SBFloatingDockView platterShadowOutsets]
  -[SBFloatingDockView iconContentScaleForNumberOfUserIcons:]
  -[SBFloatingDockView paddingEdgeInsets]
  -[SBFloatingDockView setMainPlatterView:]
  -[SBFloatingDockView touchReceivingView]
  -[SBFloatingDockView setTouchReceivingView:]
  -[SBFloatingDockView delegate]
  -[SBFloatingDockView layoutSubviews]


SBFolderIconImageCache : NSObject /usr/lib/libSystem.B.dylib <SBFolderIconObserver, SBFolderObserver, SBHIconImageCacheObserver, SBFolderIconGridCellImageProvider>
 @property  CPMemoryPool *pool
 @property  <SBIconListLayout> *listLayout
 @property  SBHIconImageCache *iconImageCache
 @property  unsigned long numberOfCachedImages
 @property  unsigned long numberOfCacheHits
 @property  unsigned long numberOfCacheMisses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFolderIconImageCache needsTreatmentForIcon:]
  +[SBFolderIconImageCache drawTreatmentForIcon:inRect:]
  +[SBFolderIconImageCache imageForPageAtIndex:inFolderIcon:listLayout:gridCellImageProvider:pool:]
  +[SBFolderIconImageCache gridCellImageOfSize:forIcon:iconImageInfo:]
  +[SBFolderIconImageCache gridCellImageOfSize:forIconImage:]

  // instance methods
  -[SBFolderIconImageCache iconImageCache:didUpdateImageForIcon:]
  -[SBFolderIconImageCache folder:didAddList:]
  -[SBFolderIconImageCache listLayout]
  -[SBFolderIconImageCache pool]
  -[SBFolderIconImageCache init]
  -[SBFolderIconImageCache removeObserver:forFolderIcon:]
  -[SBFolderIconImageCache setIconImageCache:]
  -[SBFolderIconImageCache folderIcon:containedIconAccessoriesDidUpdate:]
  -[SBFolderIconImageCache folder:didAddIcons:removedIcons:]
  -[SBFolderIconImageCache updateCachedImagesForFolderIcon:afterChangeToContainedImageForIcon:treatmentsOnly:]
  -[SBFolderIconImageCache iconImageCache]
  -[SBFolderIconImageCache .cxx_destruct]
  -[SBFolderIconImageCache addObserver:forFolderIcon:]
  -[SBFolderIconImageCache folder:didReplaceIcon:withIcon:]
  -[SBFolderIconImageCache numberOfCacheMisses]
  -[SBFolderIconImageCache numberOfCacheHits]
  -[SBFolderIconImageCache informObserversOfUpdateForFolderIcon:]
  -[SBFolderIconImageCache folderIcon:containedIconLaunchEnabledDidChange:]
  -[SBFolderIconImageCache imageForPageAtIndex:inFolderIcon:]
  -[SBFolderIconImageCache gridCellImageForIcon:]
  -[SBFolderIconImageCache numberOfCachedImages]
  -[SBFolderIconImageCache folder:didRemoveLists:atIndexes:]
  -[SBFolderIconImageCache initWithListLayout:]
  -[SBFolderIconImageCache folderIcon:containedIconImageDidUpdate:]
  -[SBFolderIconImageCache genericMiniGridImage]
  -[SBFolderIconImageCache folder:didMoveIcon:]
  -[SBFolderIconImageCache gridCellImageOfSize:forIcon:iconImageInfo:]
  -[SBFolderIconImageCache folder:didMoveList:fromIndex:toIndex:]
  -[SBFolderIconImageCache rebuildImagesForFolderIcon:]


SBIconModelPropertyListFileStore : NSObject /usr/lib/libSystem.B.dylib <SBIconModelStore, BSDescriptionProviding>
 @property  NSURL *currentIconStateURL
 @property  NSURL *desiredIconStateURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconModelPropertyListFileStore init]
  -[SBIconModelPropertyListFileStore .cxx_destruct]
  -[SBIconModelPropertyListFileStore saveDesiredIconState:error:]
  -[SBIconModelPropertyListFileStore succinctDescriptionBuilder]
  -[SBIconModelPropertyListFileStore loadDesiredIconState:]
  -[SBIconModelPropertyListFileStore succinctDescription]
  -[SBIconModelPropertyListFileStore deleteDesiredIconStateWithOptions:error:]
  -[SBIconModelPropertyListFileStore deleteCurrentIconStateWithOptions:error:]
  -[SBIconModelPropertyListFileStore saveCurrentIconState:error:]
  -[SBIconModelPropertyListFileStore loadCurrentIconState:]
  -[SBIconModelPropertyListFileStore initWithIconStateURL:desiredIconStateURL:]
  -[SBIconModelPropertyListFileStore _save:url:error:]
  -[SBIconModelPropertyListFileStore _delete:options:error:]
  -[SBIconModelPropertyListFileStore _load:error:]
  -[SBIconModelPropertyListFileStore currentIconStateURL]
  -[SBIconModelPropertyListFileStore desiredIconStateURL]
  -[SBIconModelPropertyListFileStore descriptionWithMultilinePrefix:]
  -[SBIconModelPropertyListFileStore descriptionBuilderWithMultilinePrefix:]


SBHLibraryCategoryIconViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBFolderObserver, SBIconViewQuerying, SBIconViewCustomImageViewControlling, SBHLegibility>
 @property  SBFolder *folder
 @property  NSString *location
 @property  <SBIconViewProviding> *iconViewProvider
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  SBHIconImageCache *iconImageCache
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBIconListView *iconListView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  BOOL editing
 @property  SBIcon *icon
 @property  <SBLeafIconDataSource> *visiblyActiveDataSource
 @property  BOOL showingContextMenu
 @property  BOOL overlapping
 @property  BOOL dropping
 @property  BOOL userInteractionEnabled
 @property  BOOL backgroundBlurEnabled
 @property  BOOL wantsCaptureOnlyBackgroundView
 @property  @? backgroundViewProvider
 @property  double brightness
 @property  BOOL wantsLabelHidden
 @property  BOOL visiblySettled
 @property  BOOL automaticallyUpdatesVisiblySettled
 @property  BOOL privateModeEnabled
 @property  unsigned long presentationMode
 @property  unsigned long imageViewAlignment
 @property  unsigned long pauseReasons
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *applicationShortcutItems
 @property  UIView *snapshotView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleBounds
 @property  double continuousCornerRadius
 @property  BOOL showsSquareCorners

  // instance methods
  -[SBHLibraryCategoryIconViewController visibleBounds]
  -[SBHLibraryCategoryIconViewController setIconImageInfo:]
  -[SBHLibraryCategoryIconViewController viewDidLoad]
  -[SBHLibraryCategoryIconViewController setShowsSquareCorners:]
  -[SBHLibraryCategoryIconViewController folder:didAddList:]
  -[SBHLibraryCategoryIconViewController continuousCornerRadius]
  -[SBHLibraryCategoryIconViewController setListLayoutProvider:]
  -[SBHLibraryCategoryIconViewController iconViewForIcon:location:]
  -[SBHLibraryCategoryIconViewController showsSquareCorners]
  -[SBHLibraryCategoryIconViewController legibilitySettings]
  -[SBHLibraryCategoryIconViewController iconImageInfo]
  -[SBHLibraryCategoryIconViewController setIconImageCache:]
  -[SBHLibraryCategoryIconViewController isDisplayingIconView:inLocation:]
  -[SBHLibraryCategoryIconViewController sourceView]
  -[SBHLibraryCategoryIconViewController setEditing:]
  -[SBHLibraryCategoryIconViewController iconImageCache]
  -[SBHLibraryCategoryIconViewController .cxx_destruct]
  -[SBHLibraryCategoryIconViewController firstIconViewForIcon:]
  -[SBHLibraryCategoryIconViewController setIconViewProvider:]
  -[SBHLibraryCategoryIconViewController firstIconViewForIcon:inLocations:]
  -[SBHLibraryCategoryIconViewController isDisplayingIcon:inLocations:]
  -[SBHLibraryCategoryIconViewController isDisplayingIconView:]
  -[SBHLibraryCategoryIconViewController setLegibilitySettings:]
  -[SBHLibraryCategoryIconViewController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHLibraryCategoryIconViewController folderIconImageCache]
  -[SBHLibraryCategoryIconViewController setFolderIconImageCache:]
  -[SBHLibraryCategoryIconViewController presentedIconLocations]
  -[SBHLibraryCategoryIconViewController setPauseReasons:]
  -[SBHLibraryCategoryIconViewController enumerateDisplayedIconViewsUsingBlock:]
  -[SBHLibraryCategoryIconViewController updateFolder:location:]
  -[SBHLibraryCategoryIconViewController iconListView]
  -[SBHLibraryCategoryIconViewController folder]
  -[SBHLibraryCategoryIconViewController isEditing]
  -[SBHLibraryCategoryIconViewController listLayoutProvider]
  -[SBHLibraryCategoryIconViewController isDisplayingIcon:inLocation:]
  -[SBHLibraryCategoryIconViewController location]
  -[SBHLibraryCategoryIconViewController folder:didRemoveLists:atIndexes:]
  -[SBHLibraryCategoryIconViewController isDisplayingIcon:]
  -[SBHLibraryCategoryIconViewController firstIconViewForIcon:excludingLocations:]
  -[SBHLibraryCategoryIconViewController setEditing:animated:]
  -[SBHLibraryCategoryIconViewController iconViewProvider]
  -[SBHLibraryCategoryIconViewController pauseReasons]
  -[SBHLibraryCategoryIconViewController isPresentingIconLocation:]


SBHLibraryCategoryPodIconListView : SBIconListView
  // instance methods
  -[SBHLibraryCategoryPodIconListView baseIconViewClass]


SBHLibraryCategoryPodIconView : SBIconView
  // instance methods
  -[SBHLibraryCategoryPodIconView isUserInteractionEnabled]
  -[SBHLibraryCategoryPodIconView representedFolderIconLocation]


SBPlaceholderIcon : SBIcon
 @property  SBIcon *referencedIcon
 @property  NSArray *referencedIcons

  // class methods
  +[SBPlaceholderIcon grabbedIconPlaceholderForIcon:]
  +[SBPlaceholderIcon grabbedIconPlaceholderForIcons:]
  +[SBPlaceholderIcon placeholderForIcon:]
  +[SBPlaceholderIcon placeholderNodeIdentifierForIcon:]
  +[SBPlaceholderIcon placeholderNodeIdentifierForIconNodeIdentifier:]
  +[SBPlaceholderIcon hasIconImage]
  +[SBPlaceholderIcon clusteredIconPlaceholderForIcons:]

  // instance methods
  -[SBPlaceholderIcon generateIconImageWithInfo:]
  -[SBPlaceholderIcon automationID]
  -[SBPlaceholderIcon referencedIcons]
  -[SBPlaceholderIcon referencedIcon]
  -[SBPlaceholderIcon nodeIdentifier]
  -[SBPlaceholderIcon referencesIcon:]
  -[SBPlaceholderIcon genericIconImageWithInfo:]
  -[SBPlaceholderIcon .cxx_destruct]
  -[SBPlaceholderIcon referencesIconWithIdentifier:]
  -[SBPlaceholderIcon isPlaceholder]
  -[SBPlaceholderIcon folder]
  -[SBPlaceholderIcon isUninstallSupported]
  -[SBPlaceholderIcon _initWithNodeIdentifier:icon:]
  -[SBPlaceholderIcon _initWithNodeIdentifier:icons:]
  -[SBPlaceholderIcon gridCellImage]


SBGrabbedPlaceholderIcon : SBPlaceholderIcon
  // instance methods
  -[SBGrabbedPlaceholderIcon isGrabbedIconPlaceholder]


SBIconModelMemoryStore : NSObject /usr/lib/libSystem.B.dylib <SBIconModelStore>
 @property  NSDictionary *currentState
 @property  NSDictionary *desiredState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconModelMemoryStore setCurrentState:]
  -[SBIconModelMemoryStore currentState]
  -[SBIconModelMemoryStore init]
  -[SBIconModelMemoryStore .cxx_destruct]
  -[SBIconModelMemoryStore saveDesiredIconState:error:]
  -[SBIconModelMemoryStore loadDesiredIconState:]
  -[SBIconModelMemoryStore deleteDesiredIconStateWithOptions:error:]
  -[SBIconModelMemoryStore deleteCurrentIconStateWithOptions:error:]
  -[SBIconModelMemoryStore saveCurrentIconState:error:]
  -[SBIconModelMemoryStore loadCurrentIconState:]
  -[SBIconModelMemoryStore setDesiredState:]
  -[SBIconModelMemoryStore desiredState]
  -[SBIconModelMemoryStore initWithCurrentState:desiredState:]


_SBFloatingDockPlatterMetrics : NSObject /usr/lib/libSystem.B.dylib
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  double continuousCornerRadius
 @property  double shadowRadius
 @property  double shadowYOffset

  // instance methods
  -[_SBFloatingDockPlatterMetrics shadowRadius]
  -[_SBFloatingDockPlatterMetrics continuousCornerRadius]
  -[_SBFloatingDockPlatterMetrics shadowYOffset]
  -[_SBFloatingDockPlatterMetrics bounds]
  -[_SBFloatingDockPlatterMetrics initWithBounds:continuousCornerRadius:shadowRadius:shadowYOffset:]


SBFloatingDockPlatterView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UIImageView *shadowView
 @property  _SBFloatingDockPlatterMetrics *metrics
 @property  double referenceHeight
 @property  double maximumContinuousCornerRadius
 @property  NSString *backdropGroupName
 @property  BOOL hasShadow
 @property  {UIEdgeInsets=dddd} shadowOutsets
 @property  UIView *backgroundView

  // class methods
  +[SBFloatingDockPlatterView borderColorForUserInterfaceStyle:]

  // instance methods
  -[SBFloatingDockPlatterView metrics]
  -[SBFloatingDockPlatterView setMetrics:]
  -[SBFloatingDockPlatterView backdropGroupName]
  -[SBFloatingDockPlatterView backgroundView]
  -[SBFloatingDockPlatterView setBackdropGroupName:]
  -[SBFloatingDockPlatterView _dynamicUserInterfaceTraitDidChange]
  -[SBFloatingDockPlatterView setBackgroundView:]
  -[SBFloatingDockPlatterView initWithFrame:]
  -[SBFloatingDockPlatterView .cxx_destruct]
  -[SBFloatingDockPlatterView hasShadow]
  -[SBFloatingDockPlatterView referenceHeight]
  -[SBFloatingDockPlatterView setHasShadow:]
  -[SBFloatingDockPlatterView shadowView]
  -[SBFloatingDockPlatterView updateBorderVisualStyling]
  -[SBFloatingDockPlatterView setShadowView:]
  -[SBFloatingDockPlatterView shadowOutsets]
  -[SBFloatingDockPlatterView setMaximumContinuousCornerRadius:]
  -[SBFloatingDockPlatterView shadowOutsetsForBounds:]
  -[SBFloatingDockPlatterView _maxShadowViewAlpha]
  -[SBFloatingDockPlatterView _shadowOutsetsForMetrics:]
  -[SBFloatingDockPlatterView _metricsForBounds:]
  -[SBFloatingDockPlatterView _shadowInsetsForMetrics:]
  -[SBFloatingDockPlatterView _shadowImageViewForMetrics:]
  -[SBFloatingDockPlatterView maximumContinuousCornerRadius]
  -[SBFloatingDockPlatterView _shadowImageForMetrics:]
  -[SBFloatingDockPlatterView setReferenceHeight:]
  -[SBFloatingDockPlatterView layoutSubviews]
  -[SBFloatingDockPlatterView initWithCoder:]


SBIconListViewDraggingDestinationDelegate : NSObject /usr/lib/libSystem.B.dylib <SBFSpringLoadedInteractionBehaviorDelegate, SBFSpringLoadedInteractionEffectDelegate, BSDescriptionProviding, UIDropInteractionDelegate>
 @property  UIDropInteraction *dropInteraction
 @property  unsigned long currentDragType
 @property  <SBIconListViewDraggingPolicyHandling> *currentPolicyHandler
 @property  unsigned long currentSpringLoadedDragType
 @property  <SBIconListViewDraggingPolicyHandling> *springLoadingPolicyHandler
 @property  BOOL waitingForConcludeDrag
 @property  SBIconListView *iconListView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconListViewDraggingDestinationDelegate dragTypeForDropSession:]

  // instance methods
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:sessionDidExit:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:sessionDidEnter:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:previewForDroppingItem:withDefault:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:item:willAnimateDropWithAnimator:]
  -[SBIconListViewDraggingDestinationDelegate setCurrentSpringLoadedDragType:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:concludeDrop:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:performDrop:]
  -[SBIconListViewDraggingDestinationDelegate addDragObserver:forDropSession:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:sessionDidEnd:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:sessionDidUpdate:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:canHandleSession:]
  -[SBIconListViewDraggingDestinationDelegate _resetSpringLoadingPolicyHandler]
  -[SBIconListViewDraggingDestinationDelegate isDropSessionWaitingForConcludeDrop:]
  -[SBIconListViewDraggingDestinationDelegate updateCurrentPolicyHandlerForDropSession:]
  -[SBIconListViewDraggingDestinationDelegate _handleSpringloadAndComplete:]
  -[SBIconListViewDraggingDestinationDelegate uniqueIdentifierForDropSession:]
  -[SBIconListViewDraggingDestinationDelegate .cxx_destruct]
  -[SBIconListViewDraggingDestinationDelegate targetViewForSpringLoadingEffectForView:]
  -[SBIconListViewDraggingDestinationDelegate isWaitingForConcludeDrag]
  -[SBIconListViewDraggingDestinationDelegate currentDragType]
  -[SBIconListViewDraggingDestinationDelegate currentPolicyHandler]
  -[SBIconListViewDraggingDestinationDelegate setSpringLoadingPolicyHandler:]
  -[SBIconListViewDraggingDestinationDelegate springLoadedInteractionDidFinish]
  -[SBIconListViewDraggingDestinationDelegate succinctDescriptionBuilder]
  -[SBIconListViewDraggingDestinationDelegate springLoadingPolicyHandler]
  -[SBIconListViewDraggingDestinationDelegate _dropInteraction:customSpringAnimationBehaviorForDroppingItem:]
  -[SBIconListViewDraggingDestinationDelegate succinctDescription]
  -[SBIconListViewDraggingDestinationDelegate unmarkDropSessionAsWaitingForConcludeDrop:]
  -[SBIconListViewDraggingDestinationDelegate enumerateDragObserversForDropSession:usingBlock:]
  -[SBIconListViewDraggingDestinationDelegate iconListView]
  -[SBIconListViewDraggingDestinationDelegate setWaitingForConcludeDrag:]
  -[SBIconListViewDraggingDestinationDelegate updateSpringLoadedPolicyHandlerForDropSession:]
  -[SBIconListViewDraggingDestinationDelegate currentSpringLoadedDragType]
  -[SBIconListViewDraggingDestinationDelegate setCurrentPolicyHandler:]
  -[SBIconListViewDraggingDestinationDelegate setCurrentDragType:]
  -[SBIconListViewDraggingDestinationDelegate initWithIconListView:]
  -[SBIconListViewDraggingDestinationDelegate markDropSessionAsWaitingForConcludeDrop:]
  -[SBIconListViewDraggingDestinationDelegate targetItemForSpringLoadingInteractionInView:atLocation:forDropSession:]
  -[SBIconListViewDraggingDestinationDelegate descriptionWithMultilinePrefix:]
  -[SBIconListViewDraggingDestinationDelegate removeAllDragObserversForDropSession:]
  -[SBIconListViewDraggingDestinationDelegate descriptionBuilderWithMultilinePrefix:]


SBIconListViewDraggingDataPolicyHandler : NSObject /usr/lib/libSystem.B.dylib <LSOpenResourceOperationDelegate, SBIconListViewDraggingPolicyHandling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewDraggingDataPolicyHandler openResourceOperation:didFinishCopyingResource:]
  -[SBIconListViewDraggingDataPolicyHandler openResourceOperation:didFailWithError:]
  -[SBIconListViewDraggingDataPolicyHandler dropInteraction:canHandleSession:]
  -[SBIconListViewDraggingDataPolicyHandler init]
  -[SBIconListViewDraggingDataPolicyHandler .cxx_destruct]
  -[SBIconListViewDraggingDataPolicyHandler dragPlacementForDropSession:iconListView:point:icon:options:]
  -[SBIconListViewDraggingDataPolicyHandler allowsSpringLoadForSession:onIconView:]
  -[SBIconListViewDraggingDataPolicyHandler handleSpringLoadOnIconView:]
  -[SBIconListViewDraggingDataPolicyHandler _removeAnySourceURLForOperation:]
  -[SBIconListViewDraggingDataPolicyHandler _currentDraggingIconViewInView:forLocation:]
  -[SBIconListViewDraggingDataPolicyHandler _bestSupportedUTIForDragItem:supportedTypes:]


_SBIconListViewDataDraggingContext : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  SBIconView *iconView
 @property  NSString *bestAvailableUTI
 @property  BOOL allowsMoveOperation
 @property  long long fileOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBIconListViewDataDraggingContext iconView]
  -[_SBIconListViewDataDraggingContext .cxx_destruct]
  -[_SBIconListViewDataDraggingContext succinctDescriptionBuilder]
  -[_SBIconListViewDataDraggingContext succinctDescription]
  -[_SBIconListViewDataDraggingContext initWithIconView:bestUTI:allowsMoveOperation:fileOptions:]
  -[_SBIconListViewDataDraggingContext bestAvailableUTI]
  -[_SBIconListViewDataDraggingContext fileOptions]
  -[_SBIconListViewDataDraggingContext descriptionWithMultilinePrefix:]
  -[_SBIconListViewDataDraggingContext descriptionBuilderWithMultilinePrefix:]
  -[_SBIconListViewDataDraggingContext allowsMoveOperation]


SBIconListViewAppDragContext : NSObject /usr/lib/libSystem.B.dylib
 @property  NSTimer *pauseTimer
 @property  {CGPoint=dd} pausePoint
 @property  BOOL hasPaused

  // instance methods
  -[SBIconListViewAppDragContext setPauseTimer:]
  -[SBIconListViewAppDragContext .cxx_destruct]
  -[SBIconListViewAppDragContext pauseTimer]
  -[SBIconListViewAppDragContext hasPaused]
  -[SBIconListViewAppDragContext pausePoint]
  -[SBIconListViewAppDragContext setPausePoint:]
  -[SBIconListViewAppDragContext setHasPaused:]


SBIconListViewDraggingAppPolicyHandler : NSObject /usr/lib/libSystem.B.dylib <SBIconListViewDraggingPolicyHandling>
 @property  SBIconListViewDraggingDestinationDelegate *draggingDestinationDelegate
 @property  SBHIconEditingSettings *iconEditingSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:sessionDidExit:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:sessionDidEnter:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:previewForDroppingItem:withDefault:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:item:willAnimateDropWithAnimator:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:performDrop:]
  -[SBIconListViewDraggingAppPolicyHandler setIconEditingSettings:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:sessionDidEnd:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:sessionDidUpdate:]
  -[SBIconListViewDraggingAppPolicyHandler iconEditingSettings]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:canHandleSession:]
  -[SBIconListViewDraggingAppPolicyHandler init]
  -[SBIconListViewDraggingAppPolicyHandler .cxx_destruct]
  -[SBIconListViewDraggingAppPolicyHandler _dropInteraction:customSpringAnimationBehaviorForDroppingItem:]
  -[SBIconListViewDraggingAppPolicyHandler setDraggingDestinationDelegate:]
  -[SBIconListViewDraggingAppPolicyHandler dragPlacementForDropSession:iconListView:point:icon:options:]
  -[SBIconListViewDraggingAppPolicyHandler allowsSpringLoadForSession:onIconView:]
  -[SBIconListViewDraggingAppPolicyHandler handleSpringLoadOnIconView:]
  -[SBIconListViewDraggingAppPolicyHandler _cancelDragPauseTimerForDropSession:]
  -[SBIconListViewDraggingAppPolicyHandler draggingDestinationDelegate]
  -[SBIconListViewDraggingAppPolicyHandler _dragPauseTimerFired:]
  -[SBIconListViewDraggingAppPolicyHandler _resetDragPauseTimerForPoint:dropSession:]
  -[SBIconListViewDraggingAppPolicyHandler _iconForDragItem:]
  -[SBIconListViewDraggingAppPolicyHandler _updateDragPauseForDropSession:]
  -[SBIconListViewDraggingAppPolicyHandler _iconViewForDragItem:createIfNecessary:]
  -[SBIconListViewDraggingAppPolicyHandler _destinationFolderIconViewForDragItem:iconIndexPath:folderRelativeIconIndexPath:]
  -[SBIconListViewDraggingAppPolicyHandler _cancelDragPauseTimers]


SBSApplicationShortcutItem(SBHAdditions)
	// instance methods
	-[SBSApplicationShortcutItem(SBHAdditions) _monogrammerForKey:style:]
	-[SBSApplicationShortcutItem(SBHAdditions) _lightMonogrammer]
	-[SBSApplicationShortcutItem(SBHAdditions) _darkMonogrammer]
	-[SBSApplicationShortcutItem(SBHAdditions) _setupAssetManagerWithApplicationBundleURL:]
	-[SBSApplicationShortcutItem(SBHAdditions) sb_buildIconImageWithApplicationBundleURL:image:systemImageName:]
	-[SBSApplicationShortcutItem(SBHAdditions) setBadgeView:]
	-[SBSApplicationShortcutItem(SBHAdditions) _assetManager]
	-[SBSApplicationShortcutItem(SBHAdditions) sbh_isDestructive]
	-[SBSApplicationShortcutItem(SBHAdditions) sbh_shortcutSection]
	-[SBSApplicationShortcutItem(SBHAdditions) sbh_isShortcutSpringBoardOnly]
	-[SBSApplicationShortcutItem(SBHAdditions) badgeView]

(SBHAdditions)
	// instance methods
	-[(SBHAdditions) sbh_map:]
	-[(SBHAdditions) sbh_diffWithSet:]

UIWindow(SafeAreaPropagation)
	// instance methods
	-[UIWindow(SafeAreaPropagation) _sb_recursiveUpdateContentOverlayInsetsFromParentIfNecessary]

UIViewController(SafeAreaPropagation)
	// instance methods
	-[UIViewController(SafeAreaPropagation) _sb_recursiveUpdateContentOverlayInsetsFromParentIfNecessary]

(SBHStringUtilities)
	// instance methods
	-[(SBHStringUtilities) sbh_stringByReplacingCharactersInSet:withString:]
	-[(SBHStringUtilities) sbh_stringByDeletingCharactersInSet:]

CHSAvocadoDescriptor(Sanitization)
	// instance methods
	-[CHSAvocadoDescriptor(Sanitization) sbh_widgetName]
	-[CHSAvocadoDescriptor(Sanitization) sbh_supportedSizeClasses]
	-[CHSAvocadoDescriptor(Sanitization) sbh_widgetDescription]
	-[CHSAvocadoDescriptor(Sanitization) mostInterestingColor]
	-[CHSAvocadoDescriptor(Sanitization) accentColor]
	-[CHSAvocadoDescriptor(Sanitization) backgroundColor]
	-[CHSAvocadoDescriptor(Sanitization) sbh_appName]
	-[CHSAvocadoDescriptor(Sanitization) sbh_iconDataSource]
	-[CHSAvocadoDescriptor(Sanitization) presenterWantsExtraLargeWidgetsHidden]
	-[CHSAvocadoDescriptor(Sanitization) _loadColorsBackgroundColor:accentColor:]
	-[CHSAvocadoDescriptor(Sanitization) _loadColorsFromExtensionForBundleIdentifier:backgroundColor:accentColor:]
	-[CHSAvocadoDescriptor(Sanitization) _loadColorsFromShortcutsForBundleIdentifier:backgroundColor:accentColor:]
	-[CHSAvocadoDescriptor(Sanitization) sanitizedDescriptor]
	-[CHSAvocadoDescriptor(Sanitization) setPresenterWantsExtraLargeWidgetsHidden:]

SBSApplicationShortcutSystemIcon(SBHAdditions)
	// class methods
	+[SBSApplicationShortcutSystemIcon(SBHAdditions) sbh_defaultImage]

	// instance methods
	-[SBSApplicationShortcutSystemIcon(SBHAdditions) sbh_image]
	-[SBSApplicationShortcutSystemIcon(SBHAdditions) sbh_systemImage]

SBSApplicationShortcutSystemPrivateIcon(SBHAdditions)
	// class methods
	+[SBSApplicationShortcutSystemPrivateIcon(SBHAdditions) sbh_defaultImage]

	// instance methods
	-[SBSApplicationShortcutSystemPrivateIcon(SBHAdditions) sbh_image]
	-[SBSApplicationShortcutSystemPrivateIcon(SBHAdditions) sbh_systemImage]

NSPointerArray(SBHPointerArrayUtilities)
	// instance methods
	-[NSPointerArray(SBHPointerArrayUtilities) sbh_removePointer:]
	-[NSPointerArray(SBHPointerArrayUtilities) sbh_indexOfPointer:inRange:]
	-[NSPointerArray(SBHPointerArrayUtilities) sbh_indexOfPointer:]

UIColor(SpringBoardHome)
	// instance methods
	-[UIColor(SpringBoardHome) sb_perceivedLightness]
	-[UIColor(SpringBoardHome) sb_colorfulness]

NSNotificationCenter(SBHPPT)
	// class methods
	+[NSNotificationCenter(SBHPPT) sbh_defaultPPTNotificationCenter]

NSIndexPath(SBIconIndex)
	// class methods
	+[NSIndexPath(SBIconIndex) indexPathWithIconIndex:listIndex:]
	+[NSIndexPath(SBIconIndex) indexPathWithFolderIconIndex:folderListIndex:iconIndex:listIndex:]

	// instance methods
	-[NSIndexPath(SBIconIndex) sb_lastIconIndex]
	-[NSIndexPath(SBIconIndex) sb_isOnSameListAsIndexPath:]
	-[NSIndexPath(SBIconIndex) sb_indexPathByReplacingLastIconIndex:]
	-[NSIndexPath(SBIconIndex) sb_indexPathByRemovingLastIconIndex]
	-[NSIndexPath(SBIconIndex) sb_indexPathByRemovingLastIconPathComponent]
	-[NSIndexPath(SBIconIndex) sb_indexPathByAddingPathComponentWithListIndex:iconIndex:]
	-[NSIndexPath(SBIconIndex) sb_firstIconPathComponent]
	-[NSIndexPath(SBIconIndex) sb_indexPathByAddingIndexPath:]
	-[NSIndexPath(SBIconIndex) sb_iconRelativePathComponents]
	-[NSIndexPath(SBIconIndex) sbListIndex]
	-[NSIndexPath(SBIconIndex) sb_iconPathCount]
	-[NSIndexPath(SBIconIndex) sbIconIndex]
	-[NSIndexPath(SBIconIndex) sb_lastIconPathComponent]
	-[NSIndexPath(SBIconIndex) sb_firstListIndex]
	-[NSIndexPath(SBIconIndex) sb_firstIconIndex]
	-[NSIndexPath(SBIconIndex) sb_lastListIndex]

UIDragItem(SBHIconDragUtilities)
	// instance methods
	-[UIDragItem(SBHIconDragUtilities) sbh_appDragLocalContext]
	-[UIDragItem(SBHIconDragUtilities) sbh_setAppDragLocalContext:]

UISApplicationSupportDisplayEdgeInfo(SBHScreenTypes)
	// class methods
	+[UISApplicationSupportDisplayEdgeInfo(SBHScreenTypes) sbh_displayEdgeInfoForScreenType:]

01 00 1d00 /System/Library/PrivateFrameworks/BatteryCenterUI.framework/BatteryCenterUI: BCUIBatteryAvocadoViewController 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSAnimationSettings 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSCFBundle 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSDateFormatterCache 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSDescriptionBuilder 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSDispatchQueueAttributes 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSEqualsBuilder 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSEventQueue 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSEventQueueEvent 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSHashBuilder 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSPlatform 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSSimpleAssertion 
01 00 1b00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIAnimationFactory 
01 00 1b00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIFontProvider 
01 00 1b00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIScrollView 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABackdropLayer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMatchMoveAnimation 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransformLayer 
01 00 0500 /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices: CHSAvocadoDescriptor 
01 00 0500 /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices: CHSAvocadoDescriptorProvider 
01 00 0500 /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices: CHSMutableWidgetMetricsSpecification 
01 00 0500 /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices: CHSWidget 
01 00 0500 /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices: CHSWidgetMetrics 
01 00 0300 /System/Library/PrivateFrameworks/ChronoUIServices.framework/ChronoUIServices: CHUISAvocadoHostViewController 
01 00 1900 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPMemoryPool 
01 00 0200 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchQuery 
01 00 0200 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchQueryContext 
01 00 0200 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSTopHitSearchQuery 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 0600 /System/Library/Frameworks/Intents.framework/Intents: INIntent 
01 00 0f00 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISIcon 
01 00 0f00 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImage 
01 00 0f00 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 1000 /System/Library/PrivateFrameworks/IntlPreferences.framework/IntlPreferences: IntlUtility 
01 00 1700 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationExtensionRecord 
01 00 1700 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 1700 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 1700 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 1100 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTMaterialView 
01 00 1100 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTStylingProvidingSolidColorView 
01 00 1100 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTVisualStylingProvider 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutDimension 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutGroup 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutItem 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSection 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSize 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSpacing 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSDiffableDataSourceSnapshot 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0c00 /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection: PCPersistentTimer 
01 00 0a00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTButtonRow 
01 00 0a00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTChoiceRow 
01 00 0a00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDomain 
01 00 0a00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDrillDownRow 
01 00 0a00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTEditFloatRow 
01 00 0a00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTModule 
01 00 0a00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTRestoreDefaultSettingsRowAction 
01 00 0a00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSettings 
01 00 0a00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSliderRow 
01 00 0a00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSwitchRow 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFAnimationSettings 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFDateTimeController 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFFluidBehaviorSettings 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFMappedImageCache 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFOverridableDateProvider 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFRemoteBasebandLoggingManager 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFSpringLoadedInteractionBehavior 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFSpringLoadedInteractionEffect 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFSteppedAnimationTimingFunctionCalculator 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFTodayGestureDomain 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFTouchPassThroughView 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFTouchPassThroughViewController 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFView 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBHomeScreenDefaults 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBReusableViewMap 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSAppDragLocalContext 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationMultiwindowService 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutContactIcon 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutCustomImageIcon 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutItem 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutSystemIcon 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutSystemPrivateIcon 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutTemplateIcon 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSHardwareButtonService 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSHomeScreenService 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUILegibilityLabel 
01 00 0700 /System/Library/Frameworks/StoreKit.framework/StoreKit: SKStoreProductActivityViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayout 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayoutConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColorEffect 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuInteraction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragInteraction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragItem 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreview 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewParameters 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewTarget 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropInteraction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropProposal 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIHandleApplicationShortcutAction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageAsset 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImpactFeedbackGenerator 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInteractionProgress 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInterpolatingMotionEffect 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyCommand 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILocalizedIndexedCollation 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBarAppearance 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationItem 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIOpenURLAction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPageControl 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerAppIconEffect 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerHoverEffect 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerInteraction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerLiftEffect 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerRegion 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerShape 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerStyle 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewParameters 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewTarget 
01 00 0800 /System/Library/PrivateFrameworks/UIKitServices.framework/UIKitServices: UISApplicationSupportDisplayEdgeInfo 
01 00 0800 /System/Library/PrivateFrameworks/UIKitServices.framework/UIKitServices: UISApplicationSupportDisplayEdgeInsetsWrapper 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScribbleInteraction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchTextField 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringLoadedInteraction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringTimingParameters 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewDiffableDataSource 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedDragPreview 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVibrancyEffect 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewFloatAnimatableProperty 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0400 /System/Library/PrivateFrameworks/WorkflowUIServices.framework/WorkflowUIServices: WFWidgetConfigurationOptions 
01 00 0400 /System/Library/PrivateFrameworks/WorkflowUIServices.framework/WorkflowUIServices: WFWidgetConfigurationViewController 
01 00 0e00 /System/Library/PrivateFrameworks/Widgets.framework/Widgets: WGWidgetGroupViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIAssetManager 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContextMenuStyle 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIGrabber 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIImpactFeedbackGeneratorConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilityImageSet 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettings 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilityView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIPortalView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISheetAnimationController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISheetPresentationController 
