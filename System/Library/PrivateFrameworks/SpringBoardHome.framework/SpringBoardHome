|| __DATA.__objc_data _OBJC_CLASS_$_SBCrossfadeIconZoomAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBDefaultIconDragPreviewWindow
|| __DATA.__objc_data _OBJC_CLASS_$_SBFloatingDockIconListView
|| __DATA.__objc_data _OBJC_CLASS_$_SBFloatingDockPlatterView
|| __DATA.__objc_data _OBJC_CLASS_$_SBFolderPresentingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHAdjustableRootIconListLayoutProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBHClockIconVisualConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SBHCustomIconListLayoutProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBHDateHeaderViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHEditingDoneButton
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFakeDownloadingIconDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFloatingDockStyleConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFloatyFolderVisualConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SBHFolderIconVisualConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconAccessoryVisualConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconLabelVisualConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconRootTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconStateBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconViewContextMenuStateController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconViewContextMenuWrapperViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHIconViewNonPoolingImageCache
|| __DATA.__objc_data _OBJC_CLASS_$_SBHMappedIconListLayoutProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBHRecentsDocumentExtensionProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBHRootSidebarController
|| __DATA.__objc_data _OBJC_CLASS_$_SBHSetDiff
|| __DATA.__objc_data _OBJC_CLASS_$_SBHSidebarVisualConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SBHSidebarWidgetBootstrappingAdvisor
|| __DATA.__objc_data _OBJC_CLASS_$_SBHintInteractor
|| __DATA.__objc_data _OBJC_CLASS_$_SBHomeScreenMaterialView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconBetaLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconBlockedForScreenTimeExpirationLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconCloudLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconContinuityBadgeView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconDotLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconDraggingEditContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconForceTouchAppInfoProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconLayoutOverrideStrategy
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconLegibilityLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListGridLayoutConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewAppDragContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewDraggingDataPolicyHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconListViewIconLocationTransitionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconModelFolderCreationAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconPreviousLocationInfo
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconRecentlyUpdatedLabelAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconRotationContainer
|| __DATA.__objc_data _OBJC_CLASS_$_SBIconViewDragInfo
|| __DATA.__objc_data _OBJC_CLASS_$_SBMinusCloseBoxView
|| __DATA.__objc_data _OBJC_CLASS_$_SBPinchInteractionProgress
|| __DATA.__objc_data _OBJC_CLASS_$_SBRootFolderDockAnimationViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBTitledHomeScreenButton
|| __DATA.__objc_data _OBJC_CLASS_$_SBWorkspaceInteractionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBXCloseBoxView
|| __DATA.__objc_data _OBJC_CLASS_$__SBFloatingDockPlatterMetrics
|| __DATA.__objc_data _OBJC_CLASS_$__SBFolderIconImageViewDisableUpdatesAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__SBHRecentsDocumentExtensionWrappingViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SBHRecentsDocumentView
|| __DATA.__objc_data _OBJC_CLASS_$__SBIconListViewDataDraggingContext
|| __DATA.__objc_data _OBJC_CLASS_$__SBIconProgressFractionTransition
|| __DATA.__objc_data _OBJC_CLASS_$__SBIconProgressLoadingNoneStateTransition
|| __DATA.__objc_data _OBJC_CLASS_$__SBIconProgressNoneWaitingStateTransition
|| __DATA.__objc_data _OBJC_CLASS_$__SBIconProgressPausedTransition
|| __DATA.__objc_data _OBJC_CLASS_$__SBIconProgressStateTransition
|| __DATA.__objc_data _OBJC_CLASS_$__SBIconProgressTransition
|| __DATA.__objc_data _OBJC_CLASS_$__SBIconProgressWaitingLoadingStateTransition
|| __DATA.__objc_data _OBJC_CLASS_$__SBRootFolderControllerSidebarAppearStateOverrideAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBCrossfadeIconZoomAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBDefaultIconDragPreviewWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFloatingDockIconListView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFloatingDockPlatterView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBFolderPresentingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHAdjustableRootIconListLayoutProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHClockIconVisualConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHCustomIconListLayoutProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHDateHeaderViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHEditingDoneButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFakeDownloadingIconDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFloatingDockStyleConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFloatyFolderVisualConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHFolderIconVisualConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconAccessoryVisualConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconLabelVisualConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconRootTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconStateBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconViewContextMenuStateController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconViewContextMenuWrapperViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHIconViewNonPoolingImageCache
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHMappedIconListLayoutProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHRecentsDocumentExtensionProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHRootSidebarController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHSetDiff
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHSidebarVisualConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHSidebarWidgetBootstrappingAdvisor
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHintInteractor
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHomeScreenMaterialView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconBetaLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconBlockedForScreenTimeExpirationLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconCloudLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconContinuityBadgeView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconDotLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconDraggingEditContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconForceTouchAppInfoProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconLayoutOverrideStrategy
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconLegibilityLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListGridLayoutConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewAppDragContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewDraggingDataPolicyHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconListViewIconLocationTransitionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconModelFolderCreationAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconPreviousLocationInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconRecentlyUpdatedLabelAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconRotationContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_SBIconViewDragInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_SBMinusCloseBoxView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBPinchInteractionProgress
|| __DATA.__objc_data _OBJC_METACLASS_$_SBRootFolderDockAnimationViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBTitledHomeScreenButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWorkspaceInteractionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBXCloseBoxView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFloatingDockPlatterMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$__SBFolderIconImageViewDisableUpdatesAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__SBHRecentsDocumentExtensionWrappingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SBHRecentsDocumentView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBIconListViewDataDraggingContext
|| __DATA.__objc_data _OBJC_METACLASS_$__SBIconProgressFractionTransition
|| __DATA.__objc_data _OBJC_METACLASS_$__SBIconProgressLoadingNoneStateTransition
|| __DATA.__objc_data _OBJC_METACLASS_$__SBIconProgressNoneWaitingStateTransition
|| __DATA.__objc_data _OBJC_METACLASS_$__SBIconProgressPausedTransition
|| __DATA.__objc_data _OBJC_METACLASS_$__SBIconProgressStateTransition
|| __DATA.__objc_data _OBJC_METACLASS_$__SBIconProgressTransition
|| __DATA.__objc_data _OBJC_METACLASS_$__SBIconProgressWaitingLoadingStateTransition
|| __DATA.__objc_data _OBJC_METACLASS_$__SBRootFolderControllerSidebarAppearStateOverrideAssertion
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBFloatyFolderBackgroundClipView._backgroundView
|| __DATA.__objc_ivar _OBJC_IVAR_$_SBHighlightView._highlight
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBIconProgressStateTransition._fraction
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBIconProgressStateTransition._fromState
|| __DATA.__objc_ivar _OBJC_IVAR_$__SBIconProgressStateTransition._toState
|| __DATA_CONST.__const _SBCompactListsCoalesceID
|| __DATA_CONST.__const _SBFloatyFolderViewDidScrollHiddenIconViewOutsideFolderClippingBoundsNotification
|| __DATA_CONST.__const _SBFolderControllerDidEndScrollingNotification
|| __DATA_CONST.__const _SBFolderControllerWillBeginScrollingNotification
|| __DATA_CONST.__const _SBFolderExpansionAnimationWillBeginNotification
|| __DATA_CONST.__const _SBHIconManagerEditingStateChangedNotification
|| __DATA_CONST.__const _SBHIconManagerIconDraggingChangedNotification
|| __DATA_CONST.__const _SBHIconManagerIconModelDidChangeNotification
|| __DATA_CONST.__const _SBHIconManagerListLayoutProviderDidChangeNotification
|| __DATA_CONST.__const _SBHMaterialRecipeNameIconComponentDark
|| __DATA_CONST.__const _SBHMaterialRecipeNameIconComponentLight
|| __DATA_CONST.__const _SBIconIntoFolderCoalesceID
|| __DATA_CONST.__const _SBIconLocationDock
|| __DATA_CONST.__const _SBIconLocationFloatingDock
|| __DATA_CONST.__const _SBIconLocationFolder
|| __DATA_CONST.__const _SBIconLocationNone
|| __DATA_CONST.__const _SBIconLocationRoot
|| __DATA_CONST.__const _SBIconLocationRootWithSidebar
|| __DATA_CONST.__const _SBIconModelDidAddIconNotification
|| __DATA_CONST.__const _SBIconModelDidLayoutIconStateNotification
|| __DATA_CONST.__const _SBIconModelDidReloadIconsNotification
|| __DATA_CONST.__const _SBIconModelDidReplaceIconNotification
|| __DATA_CONST.__const _SBIconModelStoreDomain
|| __DATA_CONST.__const _SBIconModelVisibilityDidChangeNotification
|| __DATA_CONST.__const _SBIconModelWillLayoutIconStateNotification
|| __DATA_CONST.__const _SBIconModelWillReloadIconsNotification
|| __DATA_CONST.__const _SBIconModelWillRemoveIconNotification
|| __DATA_CONST.__const _SBIconViewDidAnimateContextMenuNotification
|| __DATA_CONST.__const _SBIconViewDidDismissContextMenuNotification
|| __DATA_CONST.__const _SBIconViewPresentationNotificationPresentedWidgetBundleIdentifierKey
|| __DATA_CONST.__const _SBIconViewWillAnimateContextMenuNotification
|| __DATA_CONST.__const _SBIconViewWillDismissContextMenuNotification
|| __DATA_CONST.__const _SBIconViewWillPresentContextMenuNotification
|| __DATA_CONST.__const _SBInsertIconCoalesceID
|| __DATA_CONST.__const _SBLeafIconDataSourceDidChangeNotification
|| __DATA_CONST.__const _SBLeafIconDataSourceDidGenerateImageNotification
|| __DATA_CONST.__const _SBLeafIconDataSourceDidInvalidateNotification
|| __DATA_CONST.__const _SBPopoverExtensionPointName
|| __DATA_CONST.__const _SBRemoveIconCoalesceID
|| __DATA_CONST.__const _SBResettingIconsCoalesceID
|| __DATA_CONST.__const _SBUninstallIconCoalesceID
|| __DATA_CONST.__const _kSBHIconCancelDownloadApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconPauseDownloadApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconPrioritizeDownloadApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconRenameFolderApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconResumeDownloadApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconShareApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerDeleteAppApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerHideAppApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerRearrangeAppsForApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconTriggerShowAllWindowsForApplicationShortcutItemType
|| __DATA_CONST.__const _kSBHIconUnreadNotificationsApplicationShortcutItemType
|| __DATA_CONST.__const _kSBIconModelIconKey
|| __DATA_CONST.__const _kSBIconModelLeafIconsToHideKey
|| __DATA_CONST.__const _kSBIconModelLeafIconsToShowKey
|| __DATA_CONST.__const _kSBLeafIconDataSourceDidGenerateImageFormatKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBCenterIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBCountedMap
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBDarkeningImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBDockIconListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBDockView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBDownloadingIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatingDockView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatingDockViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderBackgroundClipView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderScrollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFloatyFolderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderContainerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderControllerAnimationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderControllerBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderIconImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderTitleTextField
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFolderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBFramewiseInteractiveTransitionAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBGrabbedPlaceholderIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterAcceleratedAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterAppLaunchSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterAppZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCenterZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHClockApplicationIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeAcceleratedAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeAppLaunchSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeAppTransitionSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHCrossfadeZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHDefaultIconListLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderCloseSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderOpenSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHFolderZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHHomeScreenDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHHomeScreenSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconAnimationRootSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconAnimationSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconApplicationShortcutListComposer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconStateArchiver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconStateUnarchiver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHIconZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHMinusPageStepper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHReducedMotionFadeSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHRootFolderSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHScaleZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHUnlockSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHighlightView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHomeScreenButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBHomeScreenIconTransitionAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconAccessoryImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconAnimationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconBadgeView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconDragContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconDragInteraction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconDragManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconFadeAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconGridImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconImageCrossfadeView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconIndexMutableList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelImageParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelImageParametersBuilder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLabelViewFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconLegibilityLabelView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListFlowLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListGridLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListPageControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListRotationIconViewProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewDraggingAppPolicyHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconListViewDraggingDestinationDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconModelMemoryStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconModelPropertyListFileStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconPageIndicatorImageSetCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconPageIndicatorImageSetResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconPreviousLocationTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconProgressView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconScrollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconSimpleLabelView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconStateFolderPath
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconStateUnarchiveResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconTapGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBLeafIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBLiveIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBMutableIconLabelImageParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBNestingViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBPercentPassthroughInteractiveTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBPlaceholderIcon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBReversibleLayerPropertyAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderControllerDefaultTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderControllerTransitionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderDockIconListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBRootFolderWithDock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBScaleIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSearchBackdropView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSearchGesture
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSearchScrollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBValueConvergenceAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBViewControllerTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBFolderPageElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconGridWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBIconListModelTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBInnerFolderIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBRootFolderDockAnimationViewControllerWindow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBRootFolderDockOffscreenFractionClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBRootFolderLayoutWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBRootFolderPageTransitionHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBValueConvergenceAnimatorEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBCenterIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBCloseBoxView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBCountedMap
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBDarkeningImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBDockIconListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBDockView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBDownloadingIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatingDockView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatingDockViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderBackgroundClipView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderScrollView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFloatyFolderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderContainerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderControllerAnimationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderControllerBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderIconImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderTitleTextField
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFolderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBFramewiseInteractiveTransitionAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBGrabbedPlaceholderIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterAcceleratedAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterAppLaunchSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterAppZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCenterZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHClockApplicationIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeAcceleratedAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeAppLaunchSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeAppSuspendSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeAppTransitionSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHCrossfadeZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHDefaultIconListLayoutProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderCloseSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderOpenSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHFolderZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHHomeScreenDomain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHHomeScreenSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconAnimationRootSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconAnimationSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconApplicationShortcutListComposer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconStateArchiver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconStateUnarchiver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHIconZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHMinusPageStepper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHReducedMotionFadeSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHRootFolderSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHScaleZoomSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHUnlockSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHighlightView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHomeScreenButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBHomeScreenIconTransitionAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconAccessoryImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconAnimationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconBadgeView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconDragContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconDragInteraction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconDragManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconFadeAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconGridImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconImageCrossfadeView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconIndexMutableList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelImageParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelImageParametersBuilder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLabelViewFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconLegibilityLabelView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListFlowLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListGridLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListPageControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListRotationIconViewProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewDraggingAppPolicyHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconListViewDraggingDestinationDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconModelMemoryStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconModelPropertyListFileStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconPageIndicatorImageSetCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconPageIndicatorImageSetResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconPreviousLocationTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconProgressView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconScrollView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconSimpleLabelView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconStateFolderPath
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconStateUnarchiveResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconTapGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBLeafIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBLiveIconImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBMutableIconLabelImageParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBNestingViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBPercentPassthroughInteractiveTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBPlaceholderIcon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBReversibleLayerPropertyAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderControllerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderControllerDefaultTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderControllerTransitionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderDockIconListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBRootFolderWithDock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBScaleIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSearchBackdropView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSearchGesture
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSearchScrollView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBValueConvergenceAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBViewControllerTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBFolderPageElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconGridWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBIconListModelTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBInnerFolderIconZoomAnimator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBRootFolderDockAnimationViewControllerWindow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBRootFolderDockOffscreenFractionClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBRootFolderLayoutWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBRootFolderPageTransitionHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBValueConvergenceAnimatorEngine
|| __TEXT.__const _SBDockIndex
|| __TEXT.__const _SBIconCoordinateNotFound
|| __TEXT.__const _SpringBoardHomeVersionNumber
|| __TEXT.__const _SpringBoardHomeVersionString
|| __TEXT.__const _kSBHIconApplicationShortcutListComposerMaximumApplicationShortcutItems
|| __TEXT.__const _kSBHSidebarWidgetLearningAdvisorDefaultLearningCadenceEpoch
|| __TEXT.__const _kSBHSidebarWidgetLearningAdvisorDefaultLearningDuration
|| __TEXT.__const _kSPUISearchHeaderHeightGestureSpecific
|| __TEXT.__text _SBCGRectEdgeFromUIRectEdge
|| __TEXT.__text _SBFolderIndexPathsAreOnSamePage
|| __TEXT.__text _SBFolderRelativeIconIndex
|| __TEXT.__text _SBFolderRelativeListIndex
|| __TEXT.__text _SBFolderRelativeSubFolderPath
|| __TEXT.__text _SBHAlignSizeInRectUsingBaseline
|| __TEXT.__text _SBHBundle
|| __TEXT.__text _SBHCenterNormalizedFromLayerAnchorPoint
|| __TEXT.__text _SBHDirectionalEdgeInsetsByClearingEdges
|| __TEXT.__text _SBHEdgeInsetsForTransformingRectIntoRect
|| __TEXT.__text _SBHEdgeInsetsInvert
|| __TEXT.__text _SBHIconListLayoutFolderIconGridCellSize
|| __TEXT.__text _SBHIconListLayoutFolderIconGridCellSpacing
|| __TEXT.__text _SBHIconListLayoutIconAccessoryOffset
|| __TEXT.__text _SBHIconListLayoutIconAccessorySize
|| __TEXT.__text _SBHInterpolateEdgeInsets
|| __TEXT.__text _SBHIntersectionFloatRange
|| __TEXT.__text _SBHInvertEdgeInsets
|| __TEXT.__text _SBHPinViewWithinView
|| __TEXT.__text _SBHPositionInFloatRange
|| __TEXT.__text _SBHRTLAwarePositionInFloatRange
|| __TEXT.__text _SBHScreenBounds
|| __TEXT.__text _SBHScreenTypeIsPad
|| __TEXT.__text _SBHScreenTypeIsPhone
|| __TEXT.__text _SBHStringForScreenType
|| __TEXT.__text _SBHStringFromFloatRange
|| __TEXT.__text _SBHUnionFloatRange
|| __TEXT.__text _SBHZPositionForScale
|| __TEXT.__text _SBHomeAccessibilityTintColor
|| __TEXT.__text _SBHomeAccessibilityTintLegibiliitySettings
|| __TEXT.__text _SBHomeAccessibilityTintLegibilityStyle
|| __TEXT.__text _SBIconAccessoryCountedMap
|| __TEXT.__text _SBIconBadgeViewCalculateAccessoryCenter
|| __TEXT.__text _SBIconCoordinateIsNotFound
|| __TEXT.__text _SBIconCoordinateMake
|| __TEXT.__text _SBIconGenerationSerialQueue
|| __TEXT.__text _SBIconIndexCompleteNodePath
|| __TEXT.__text _SBIconIndexDebugStringForNodeIdentifier
|| __TEXT.__text _SBLogCommon
|| __TEXT.__text _SBLogFolderIconImageCache
|| __TEXT.__text _SBLogIcon
|| __TEXT.__text _SBLogIconImageCache
|| __TEXT.__text _SBLogIconLabelImageCache
|| __TEXT.__text _SBLogRecentsDocumentExtension
|| __TEXT.__text _SBRootFolderPageStateIsOnHorizontalScrollingPlane
|| __TEXT.__text _SBRootFolderPageStateIsOnIconPage
|| __TEXT.__text _SBRootFolderPageStateIsOnTodayPage
|| __TEXT.__text _SBRootFolderPageStateIsSearch
|| __TEXT.__text _SBRootFolderPageStateVerticalGroupContainsRootFolderPageState
|| __TEXT.__text _SBRootFolderPageStateVerticalGroupForRootFolderPageState
|| __TEXT.__text _SBRootFolderPageStateVerticalGroupMatches
|| __TEXT.__text _SBStringForIconOrder
|| __TEXT.__text _SBStringForRootFolderPageState
|| __TEXT.__text _SBTreeNodeContainsDescendantIndexPath
|| __TEXT.__text _SBTreeNodeGetDescendantAtIndexPath
|| __TEXT.__text _SBTreeNodeGetIndexPathForDescendantTreeNode
|| __TEXT.__text _SBTreeNodeInformOfAncestryChange
|| __TEXT.__text _SBTreeNodeIsDescendantOfTreeNode
|| __TEXT.__text _SBViewClassForIconLabelAccessoryType
|| __TEXT.__text __SBCreateDeleteAppApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateHideAppApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateRearrangeAppsApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateRenameFolderApplicationShortcutItem
|| __TEXT.__text __SBCreateShareApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateShowAllWindowsApplicationShortcutItemWithLocalizedTitle
|| __TEXT.__text __SBCreateTestFlightApplicationShortcutItem
|| __TEXT.__text __SBScaleIconZoomAnimatorCameraPositionToScaleModelPointToTargetPoint
|| __TEXT.__text __touchesContainNonIndirectTouch
__ AppSupport: _OBJC_CLASS_$_CPMemoryPool
__ BaseBoardUI: _BSUIConstrainValueToIntervalWithRubberBand
__ BaseBoardUI: _OBJC_CLASS_$_BSUIAnimationFactory
__ BaseBoardUI: _OBJC_CLASS_$_BSUIScrollView
__ BaseBoardUI: _OBJC_METACLASS_$_BSUIScrollView
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopObserverCreateWithHandler
__ CoreFoundation: _CFRunLoopObserverInvalidate
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSSystemTimeZoneDidChangeNotification
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClipToMask
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextSetAlpha
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextSetShadowWithColor
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectDivide
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreServices: _UTTypeConformsTo
__ CoreText: _CTFontCreateCopyOfSystemUIFontWithGrade
__ CoreText: _CTFontCreateUIFontForLanguage
__ CoreText: _CTFontGetLanguageAwareOutsets
__ DocumentManagerCore: _DOCShouldApplicationShowRecentsPopover
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSExtensionPointName
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ FrontBoardServices: _BSDateTimeCacheChangedNotification
__ FrontBoardServices: _BSDispatchQueueCreate
__ FrontBoardServices: _BSEqualObjects
__ FrontBoardServices: _BSEqualStrings
__ FrontBoardServices: _BSFloatEqualToFloat
__ FrontBoardServices: _BSFloatGreaterThanFloat
__ FrontBoardServices: _BSFloatGreaterThanOrEqualToFloat
__ FrontBoardServices: _BSFloatIsOne
__ FrontBoardServices: _BSFloatIsZero
__ FrontBoardServices: _BSFloatLessThanFloat
__ FrontBoardServices: _BSFloatLessThanOrEqualToFloat
__ FrontBoardServices: _BSIntervalFractionForValue
__ FrontBoardServices: _BSIntervalMax
__ FrontBoardServices: _BSIntervalUnit
__ FrontBoardServices: _BSIntervalValueForFraction
__ FrontBoardServices: _BSIsInternalInstall
__ FrontBoardServices: _BSLogAddStateCaptureBlockWithTitle
__ FrontBoardServices: _BSRectWithSize
__ FrontBoardServices: _BSSizeEqualToSize
__ FrontBoardServices: _BSStringFromBOOL
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActions
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _FBSOpenApplicationOptionKeyLaunchOrigin
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _OBJC_CLASS_$_BSAnimationSettings
__ FrontBoardServices: _OBJC_CLASS_$_BSCFBundle
__ FrontBoardServices: _OBJC_CLASS_$_BSDateFormatterCache
__ FrontBoardServices: _OBJC_CLASS_$_BSDescriptionBuilder
__ FrontBoardServices: _OBJC_CLASS_$_BSDispatchQueueAttributes
__ FrontBoardServices: _OBJC_CLASS_$_BSEventQueue
__ FrontBoardServices: _OBJC_CLASS_$_BSEventQueueEvent
__ FrontBoardServices: _OBJC_CLASS_$_BSPlatform
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ IconServices: _OBJC_CLASS_$_ISIcon
__ IconServices: _OBJC_CLASS_$_ISImage
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ IntlPreferences: _OBJC_CLASS_$_IntlUtility
__ MaterialKit: _OBJC_CLASS_$_MTMaterialView
__ MaterialKit: _OBJC_CLASS_$_MTVisualStylingProvider
__ PersistentConnection: _OBJC_CLASS_$_PCPersistentTimer
__ PrototypeTools: _OBJC_CLASS_$_PTButtonRow
__ PrototypeTools: _OBJC_CLASS_$_PTChoiceRow
__ PrototypeTools: _OBJC_CLASS_$_PTDomain
__ PrototypeTools: _OBJC_CLASS_$_PTDrillDownRow
__ PrototypeTools: _OBJC_CLASS_$_PTEditFloatRow
__ PrototypeTools: _OBJC_CLASS_$_PTModule
__ PrototypeTools: _OBJC_CLASS_$_PTRestoreDefaultSettingsRowAction
__ PrototypeTools: _OBJC_CLASS_$_PTSettings
__ PrototypeTools: _OBJC_CLASS_$_PTSliderRow
__ PrototypeTools: _OBJC_CLASS_$_PTSwitchRow
__ PrototypeTools: _OBJC_METACLASS_$_PTDomain
__ PrototypeTools: _OBJC_METACLASS_$_PTSettings
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DConcat
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DMakeTranslation
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMatchMoveAnimation
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _kCAAnimationAbsolute
__ QuartzCore: _kCAAnimationRelative
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAFilterColorBurnBlendMode
__ QuartzCore: _kCAFilterColorInvert
__ QuartzCore: _kCAFilterMultiplyColor
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCAFilterSourceAtop
__ QuartzCore: _kCAFilterVibrantColorMatrix
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTaskGetCodeSignStatus
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFAnimationSettings
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFDefaultDateProvider
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFEqualsBuilder
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFFluidBehaviorSettings
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFHashBuilder
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFLegibilityDomain
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFMappedImageCache
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFSpringLoadedInteractionBehavior
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFSpringLoadedInteractionEffect
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFSteppedAnimationTimingFunctionCalculator
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFTodayGestureDomain
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFTouchPassThroughView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFTouchPassThroughViewController
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBHomeScreenDefaults
__ SpringBoardFoundation: _OBJC_CLASS_$_SBReusableViewMap
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFSteppedAnimationTimingFunctionCalculator
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFTouchPassThroughView
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFTouchPassThroughViewController
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFView
__ SpringBoardFoundation: _SBFApplyParallaxSettingsToView
__ SpringBoardFoundation: _SBFApplyParallaxSettingsToViewWithFactor
__ SpringBoardFoundation: _SBFBoolEquals
__ SpringBoardFoundation: _SBFBundle
__ SpringBoardFoundation: _SBFComposedColor
__ SpringBoardFoundation: _SBFDockMaterialRecipeNameDark
__ SpringBoardFoundation: _SBFDockMaterialRecipeNameLight
__ SpringBoardFoundation: _SBFEffectiveHomeButtonType
__ SpringBoardFoundation: _SBFEqualStrings
__ SpringBoardFoundation: _SBFFloatCeilForScale
__ SpringBoardFoundation: _SBFFloatEqualsFloat
__ SpringBoardFoundation: _SBFFloatFloorForScale
__ SpringBoardFoundation: _SBFFloatRoundForMainScreenScale
__ SpringBoardFoundation: _SBFFontMetricsZero
__ SpringBoardFoundation: _SBFInterfaceOrientationMaskContainsInterfaceOrientation
__ SpringBoardFoundation: _SBFPointEqualToPointAtScale
__ SpringBoardFoundation: _SBFPreheatImageData
__ SpringBoardFoundation: _SBFSafeCast
__ SpringBoardFoundation: _SBFSafeProtocolCast
__ SpringBoardFoundation: __SBFLoggingMethodProem
__ SpringBoardFoundation: __SBF_Private_IsN84
__ SpringBoardFoundation: _convertDampingRatioAndResponseToTensionAndFriction
__ SpringBoardServices: _OBJC_CLASS_$_SBSAppDragLocalContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationMultiwindowService
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutCustomImageIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutItem
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationShortcutSystemIcon
__ SpringBoardServices: _OBJC_CLASS_$_SBSHardwareButtonService
__ SpringBoardServices: _OBJC_CLASS_$_SBSHomeScreenService
__ SpringBoardServices: _SBLogIconDragging
__ SpringBoardServices: _SBLogRootController
__ SpringBoardServices: _SBLoggingSubsystem
__ SpringBoardServices: _SBSAppDragPrivateTypeIdentifier
__ SpringBoardServices: _SBSOpenApplicationLaunchOriginShortcutItem
__ SpringBoardServices: ___sb__mainScreenReferenceBounds
__ SpringBoardServices: ___sb__runningInSpringBoard
__ SpringBoardServices: _kSBSApplicationShortcutItemTypeSendBetaFeedback
__ SpringBoardServices: _kSBSApplicationShortcutItemTypeSendBetaFeedbackUserInfoItemIDKey
__ SpringBoardUI: _SBLogAppIconForceTouch
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUILegibilityLabel
__ SpringBoardUIServices: _UIContentSizeCategoryClip
__ SpringBoardUIServices: _UIContentSizeCategoryOneSmallerThanSizeCategory
__ StoreKit: _OBJC_CLASS_$_SKStoreProductActivityViewController
__ StoreKit: _SKStoreProductParameterITunesItemIdentifier
__ StoreKit: _SKStoreProductParameterPopoverSourceRect
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSKernAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSStringFromCGAffineTransform
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStringFromDirectionalEdgeInsets
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIColorEffect
__ UIKit: _OBJC_CLASS_$_UIContextMenuConfiguration
__ UIKit: _OBJC_CLASS_$_UIContextMenuInteraction
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDragInteraction
__ UIKit: _OBJC_CLASS_$_UIDragItem
__ UIKit: _OBJC_CLASS_$_UIDragPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIDragPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIDropInteraction
__ UIKit: _OBJC_CLASS_$_UIDropProposal
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIHandleApplicationShortcutAction
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIImpactFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UIInteractionProgress
__ UIKit: _OBJC_CLASS_$_UIInterpolatingMotionEffect
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UIPageControl
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISpringLoadedInteraction
__ UIKit: _OBJC_CLASS_$_UISpringTimingParameters
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedDragPreview
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIContextMenuStyle
__ UIKit: _OBJC_CLASS_$__UIImpactFeedbackGeneratorConfiguration
__ UIKit: _OBJC_CLASS_$__UILegibilityImageSet
__ UIKit: _OBJC_CLASS_$__UILegibilitySettings
__ UIKit: _OBJC_CLASS_$__UILegibilityView
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIDragInteraction
__ UIKit: _OBJC_METACLASS_$_UIImage
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UIInteractionProgress
__ UIKit: _OBJC_METACLASS_$_UIPageControl
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$__UILegibilityView
__ UIKit: _UIAccessibilityBoldTextStatusDidChangeNotification
__ UIKit: _UIAccessibilityIsBoldTextEnabled
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityReduceTransparencyStatusDidChangeNotification
__ UIKit: _UIApp
__ UIKit: _UIApplicationSignificantTimeChangeNotification
__ UIKit: _UICeilToScale
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategoryUnspecified
__ UIKit: _UIDistanceBetweenPoints
__ UIKit: _UIEdgeInsetsAdd
__ UIKit: _UIEdgeInsetsMax
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFloorToScale
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UILayoutFittingCompressedSize
__ UIKit: _UILowPassFilteredCGFloat
__ UIKit: _UIPointRoundToViewScale
__ UIKit: _UIRectCenteredAboutPoint
__ UIKit: _UIRectCenteredAboutPointScale
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectCenteredIntegralRectScale
__ UIKit: _UIRectCenteredXInRectScale
__ UIKit: _UIRectCenteredYInRectScale
__ UIKit: _UIRectFill
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: _UIRectGetCenter
__ UIKit: _UIRectIntegralWithScale
__ UIKit: _UIRoundToScreenScale
__ UIKit: _UISizeRoundToViewScale
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextFromViewKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UITransitionContextToViewKey
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: _UIWindowDidRotateNotification
__ UIKit: _UIWindowLevelNormal
__ UIKit: __UILegibilityViewOptionNone
__ UIKit: __UILegibilityViewOptionUsesColorFilters
__ UIKit: __UIScrollViewNotifyForScrollView
__ UIKit: __UITraitCollectionDisplayCornerRadiusUnspecified
__ UIKit: __UIVisualAltitudeFloatAboveSuperview
__ UIKit: __UIVisualAltitudeOverlayOnSuperview
__ UIKit: __UIWindowConvertRectFromOrientationToOrientation
__ UIKitServices: _UISOpenApplicationOptionKeyTargetContentIdentifier
__ Widgets: _OBJC_CLASS_$_WGWidgetDiscoveryController
__ Widgets: _WGWidgetViewControllerAddRequestBundleIdentifierKey
__ Widgets: _WGWidgetViewControllerAddRequestNotification
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logging_enabled
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___snprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _modf
__ libSystem.B.dylib: _nexttoward
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SBCrossfadeIconZoomAnimator : SBScaleIconZoomAnimator
 @property  SBHCrossfadeZoomSettings *settings
 @property  BOOL performsTrueCrossfade
 @property  BOOL masksCorners

  // instance methods
  -[SBCrossfadeIconZoomAnimator .cxx_destruct]
  -[SBCrossfadeIconZoomAnimator _assertCrossfadeViewSizeIfNecessary]
  -[SBCrossfadeIconZoomAnimator _delayedForRotation]
  -[SBCrossfadeIconZoomAnimator _prepareAnimation]
  -[SBCrossfadeIconZoomAnimator _zoomedIconCenter]
  -[SBCrossfadeIconZoomAnimator _zoomedFrame]
  -[SBCrossfadeIconZoomAnimator performsTrueCrossfade]
  -[SBCrossfadeIconZoomAnimator _setAnimationFraction:]
  -[SBCrossfadeIconZoomAnimator _appSnapshotCornerRadiusForFraction:]
  -[SBCrossfadeIconZoomAnimator _cleanupZoom]
  -[SBCrossfadeIconZoomAnimator _cleanupAnimation]
  -[SBCrossfadeIconZoomAnimator _numberOfSignificantAnimations]
  -[SBCrossfadeIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBCrossfadeIconZoomAnimator initWithFolderController:crossfadeView:icon:]
  -[SBCrossfadeIconZoomAnimator maxHomeScreenZoomScale]
  -[SBCrossfadeIconZoomAnimator fadesHomeScreen]
  -[SBCrossfadeIconZoomAnimator setPerformsTrueCrossfade:]
  -[SBCrossfadeIconZoomAnimator masksCorners]
  -[SBCrossfadeIconZoomAnimator setMasksCorners:]


SBHHomeScreenDomain : PTDomain /System/Library/PrivateFrameworks/PrototypeToolsUI.framework/PrototypeToolsUI
  // class methods
  +[SBHHomeScreenDomain domainName]
  +[SBHHomeScreenDomain rootSettings]
  +[SBHHomeScreenDomain domainGroupName]
  +[SBHHomeScreenDomain rootSettingsClass]


SBIconZoomAnimator : SBIconAnimator <SBIconIndexNodeObserver>
 @property  <SBIconZoomAnimationContaining> *animationContainer
 @property  SBIconListView *iconListView
 @property  SBIconListView *dockListView
 @property  NSSet *criticalIconNodeIdentifiers
 @property  double startTime
 @property  SBHIconZoomSettings *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconZoomAnimator dealloc]
  -[SBIconZoomAnimator .cxx_destruct]
  -[SBIconZoomAnimator startTime]
  -[SBIconZoomAnimator _prepareAnimation]
  -[SBIconZoomAnimator _setAnimationFraction:]
  -[SBIconZoomAnimator iconViewForIcon:]
  -[SBIconZoomAnimator _cleanupZoom]
  -[SBIconZoomAnimator _cleanupAnimation]
  -[SBIconZoomAnimator _numberOfSignificantAnimations]
  -[SBIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBIconZoomAnimator initWithAnimationContainer:]
  -[SBIconZoomAnimator _iconModelDidRelayout:]
  -[SBIconZoomAnimator _iconModelDidReload:]
  -[SBIconZoomAnimator _clearObservers]
  -[SBIconZoomAnimator _setIconListView:]
  -[SBIconZoomAnimator _setDockListView:]
  -[SBIconZoomAnimator _applyLabelAlphaFraction:]
  -[SBIconZoomAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[SBIconZoomAnimator _invalidateAnimationForSignificantIconModelChangesForReason:]
  -[SBIconZoomAnimator node:didAddContainedNodeIdentifiers:]
  -[SBIconZoomAnimator node:didRemoveContainedNodeIdentifiers:]
  -[SBIconZoomAnimator nodeDidMoveContainedNodes:]
  -[SBIconZoomAnimator enumerateIconsAndIconViewsWithHandler:]
  -[SBIconZoomAnimator listIconCount]
  -[SBIconZoomAnimator dockIconCount]
  -[SBIconZoomAnimator cleanupZoom]
  -[SBIconZoomAnimator isPastPointOfNoReturn]
  -[SBIconZoomAnimator criticalIconNodeIdentifiers]
  -[SBIconZoomAnimator setCriticalIconNodeIdentifiers:]
  -[SBIconZoomAnimator iconListView]
  -[SBIconZoomAnimator dockListView]


SBIconFadeAnimator : SBIconAnimator
 @property  BOOL fadesReferenceView

  // instance methods
  -[SBIconFadeAnimator .cxx_destruct]
  -[SBIconFadeAnimator _prepareAnimation]
  -[SBIconFadeAnimator _setAnimationFraction:]
  -[SBIconFadeAnimator _cleanupAnimation]
  -[SBIconFadeAnimator _numberOfSignificantAnimations]
  -[SBIconFadeAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[SBIconFadeAnimator _applyAlphaForFraction:]
  -[SBIconFadeAnimator fadesReferenceView]
  -[SBIconFadeAnimator initWithAnimationContainer:crossfadeView:]
  -[SBIconFadeAnimator setFadesReferenceView:]


SBWorkspaceInteractionContext : NSObject /usr/lib/libSystem.B.dylib
 @property  UIInteractionProgress *interactionProgress
 @property  UIGestureRecognizer *gestureRecognizer

  // instance methods
  -[SBWorkspaceInteractionContext .cxx_destruct]
  -[SBWorkspaceInteractionContext interactionProgress]
  -[SBWorkspaceInteractionContext initWithInteractionProgress:]
  -[SBWorkspaceInteractionContext gestureRecognizer]
  -[SBWorkspaceInteractionContext initWithGestureRecognizer:]


SBFolderIconZoomAnimator : SBScaleIconZoomAnimator <SBSearchGestureObserver>
 @property  SBSearchGesture *searchGesture
 @property  BOOL isAnimatingInFloatingDock
 @property  SBHFolderZoomSettings *settings
 @property  SBFFluidBehaviorSettings *dockAnimationSettings
 @property  SBFolderIcon *targetIcon
 @property  SBIconView *targetIconView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFolderIconZoomAnimator .cxx_destruct]
  -[SBFolderIconZoomAnimator _prepareAnimation]
  -[SBFolderIconZoomAnimator _zoomedFrame]
  -[SBFolderIconZoomAnimator targetIconView]
  -[SBFolderIconZoomAnimator _setAnimationFraction:]
  -[SBFolderIconZoomAnimator _cleanupAnimation]
  -[SBFolderIconZoomAnimator _numberOfSignificantAnimations]
  -[SBFolderIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBFolderIconZoomAnimator searchGesture]
  -[SBFolderIconZoomAnimator _setupMatchMoveWithDock]
  -[SBFolderIconZoomAnimator _setupCounterDockMatchMoveAnimationWithOffset:layer:additive:]
  -[SBFolderIconZoomAnimator _setupMatchMoveWithDockWithTargetIconCenter:targetIconAnchor:]
  -[SBFolderIconZoomAnimator dockAnimationSettings]
  -[SBFolderIconZoomAnimator defaultTargetIconContainerView]
  -[SBFolderIconZoomAnimator setSearchGesture:]
  -[SBFolderIconZoomAnimator _setupMatchMoveAnimation]
  -[SBFolderIconZoomAnimator shouldMatchMoveWithDock]
  -[SBFolderIconZoomAnimator _updateDockMatchMoveWithFraction:]
  -[SBFolderIconZoomAnimator searchGesture:changedPercentComplete:]
  -[SBFolderIconZoomAnimator searchGesture:startedShowing:]
  -[SBFolderIconZoomAnimator initWithAnimationContainer:innerFolderController:folderIcon:]
  -[SBFolderIconZoomAnimator _referenceFolderIconView]
  -[SBFolderIconZoomAnimator _forceSquareZoomDimension]
  -[SBFolderIconZoomAnimator isAnimatingInFloatingDock]
  -[SBFolderIconZoomAnimator setIsAnimatingInFloatingDock:]
  -[SBFolderIconZoomAnimator setDockAnimationSettings:]


_SBInnerFolderIconZoomAnimator : SBIconZoomAnimator
 @property  SBHFolderZoomSettings *settings

  // instance methods
  -[_SBInnerFolderIconZoomAnimator .cxx_destruct]
  -[_SBInnerFolderIconZoomAnimator _prepareAnimation]
  -[_SBInnerFolderIconZoomAnimator _setAnimationFraction:]
  -[_SBInnerFolderIconZoomAnimator _cleanupAnimation]
  -[_SBInnerFolderIconZoomAnimator _numberOfSignificantAnimations]
  -[_SBInnerFolderIconZoomAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[_SBInnerFolderIconZoomAnimator initWithFolderController:iconView:iconZoomScaleDimension:]
  -[_SBInnerFolderIconZoomAnimator _applyIconCrossfadeForZoomFraction:]
  -[_SBInnerFolderIconZoomAnimator _applyIconTransformForZoomFraction:]
  -[_SBInnerFolderIconZoomAnimator _calculateZoomedOffset:scale:forIcon:withView:]


SBReversibleLayerPropertyAnimator : NSObject /usr/lib/libSystem.B.dylib <CAAnimationDelegate, BSInvalidatable>
 @property  BOOL invalidated
 @property  BSAnimationSettings *currentAnimationSettings
 @property  @? completion
 @property  BOOL started
 @property  BOOL goingForward
 @property  unsigned long reversalCount
 @property  BOOL reversedWithNewSettings
 @property  unsigned long outstandingCAAnimationCompletionCount
 @property  NSString *forwardAnimationKey
 @property  NSString *forwardOffsetAnimationKey
 @property  NSMutableArray *reversalAnimationKeys
 @property  CALayer *layer
 @property  NSString *keyPath
 @property  double initialValue
 @property  double targetValue
 @property  BOOL reversed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBReversibleLayerPropertyAnimator invalidate]
  -[SBReversibleLayerPropertyAnimator .cxx_destruct]
  -[SBReversibleLayerPropertyAnimator keyPath]
  -[SBReversibleLayerPropertyAnimator setCompletion:]
  -[SBReversibleLayerPropertyAnimator completion]
  -[SBReversibleLayerPropertyAnimator hasStarted]
  -[SBReversibleLayerPropertyAnimator layer]
  -[SBReversibleLayerPropertyAnimator animationDidStop:finished:]
  -[SBReversibleLayerPropertyAnimator targetValue]
  -[SBReversibleLayerPropertyAnimator initialValue]
  -[SBReversibleLayerPropertyAnimator setStarted:]
  -[SBReversibleLayerPropertyAnimator invalidated]
  -[SBReversibleLayerPropertyAnimator setInvalidated:]
  -[SBReversibleLayerPropertyAnimator reverse]
  -[SBReversibleLayerPropertyAnimator forwardAnimationKey]
  -[SBReversibleLayerPropertyAnimator forwardOffsetAnimationKey]
  -[SBReversibleLayerPropertyAnimator reversalAnimationKeys]
  -[SBReversibleLayerPropertyAnimator _fireCompletionIfNecessary]
  -[SBReversibleLayerPropertyAnimator setCurrentAnimationSettings:]
  -[SBReversibleLayerPropertyAnimator _animateFromRelativeValue:toRelativeValue:withSettings:beginTime:]
  -[SBReversibleLayerPropertyAnimator setForwardOffsetAnimationKey:]
  -[SBReversibleLayerPropertyAnimator _animateFromValue:toValue:withSettings:beginTime:]
  -[SBReversibleLayerPropertyAnimator reversalCount]
  -[SBReversibleLayerPropertyAnimator currentAnimationSettings]
  -[SBReversibleLayerPropertyAnimator _reverseWithSettings:directionChangeSettings:headStart:]
  -[SBReversibleLayerPropertyAnimator setReversedWithNewSettings:]
  -[SBReversibleLayerPropertyAnimator hasReversedWithNewSettings]
  -[SBReversibleLayerPropertyAnimator setReversalCount:]
  -[SBReversibleLayerPropertyAnimator hasReversed]
  -[SBReversibleLayerPropertyAnimator _percentCompleteForAnimation:time:]
  -[SBReversibleLayerPropertyAnimator _animationWithSettings:]
  -[SBReversibleLayerPropertyAnimator _inputPercentCompleteForAnimation:outputPercentComplete:precision:]
  -[SBReversibleLayerPropertyAnimator isGoingForward]
  -[SBReversibleLayerPropertyAnimator _additiveAnimationForKeyPath:withSettings:beginTime:fromRelativeValue:toRelativeValue:]
  -[SBReversibleLayerPropertyAnimator outstandingCAAnimationCompletionCount]
  -[SBReversibleLayerPropertyAnimator setOutstandingCAAnimationCompletionCount:]
  -[SBReversibleLayerPropertyAnimator setForwardAnimationKey:]
  -[SBReversibleLayerPropertyAnimator _outputPercentCompleteForAnimation:inputPercentComplete:]
  -[SBReversibleLayerPropertyAnimator initWithLayer:keyPath:initialValue:targetValue:]
  -[SBReversibleLayerPropertyAnimator animateWithSettings:completion:]
  -[SBReversibleLayerPropertyAnimator reverseWithSettings:directionChangeSettings:headStart:]
  -[SBReversibleLayerPropertyAnimator setReversalAnimationKeys:]


SBValueConvergenceAnimator : NSObject /usr/lib/libSystem.B.dylib
 @property  double startTime
 @property  double lastFireTime
 @property  double elapsedTime
 @property  double currentValue
 @property  double targetValue
 @property  BOOL finishesOnValueConvergence
 @property  @? convergenceFunction
 @property  @? applier
 @property  @? completion
 @property  long long frameInterval

  // instance methods
  -[SBValueConvergenceAnimator init]
  -[SBValueConvergenceAnimator dealloc]
  -[SBValueConvergenceAnimator .cxx_destruct]
  -[SBValueConvergenceAnimator stop]
  -[SBValueConvergenceAnimator start]
  -[SBValueConvergenceAnimator isRunning]
  -[SBValueConvergenceAnimator _reset]
  -[SBValueConvergenceAnimator setCompletion:]
  -[SBValueConvergenceAnimator completion]
  -[SBValueConvergenceAnimator frameInterval]
  -[SBValueConvergenceAnimator setFrameInterval:]
  -[SBValueConvergenceAnimator startTime]
  -[SBValueConvergenceAnimator setStartTime:]
  -[SBValueConvergenceAnimator targetValue]
  -[SBValueConvergenceAnimator setTargetValue:]
  -[SBValueConvergenceAnimator elapsedTime]
  -[SBValueConvergenceAnimator currentValue]
  -[SBValueConvergenceAnimator setCurrentValue:]
  -[SBValueConvergenceAnimator setConvergenceFunctionWithConstant:]
  -[SBValueConvergenceAnimator _invokeApplier]
  -[SBValueConvergenceAnimator _invokeCompletionWithFinished:]
  -[SBValueConvergenceAnimator _convergeValue]
  -[SBValueConvergenceAnimator finishesOnValueConvergence]
  -[SBValueConvergenceAnimator setFinishesOnValueConvergence:]
  -[SBValueConvergenceAnimator convergenceFunction]
  -[SBValueConvergenceAnimator setConvergenceFunction:]
  -[SBValueConvergenceAnimator applier]
  -[SBValueConvergenceAnimator setApplier:]
  -[SBValueConvergenceAnimator lastFireTime]
  -[SBValueConvergenceAnimator setLastFireTime:]


_SBValueConvergenceAnimatorEngine : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[_SBValueConvergenceAnimatorEngine sharedEngine]

  // instance methods
  -[_SBValueConvergenceAnimatorEngine init]
  -[_SBValueConvergenceAnimatorEngine .cxx_destruct]
  -[_SBValueConvergenceAnimatorEngine _updateDisplayLink]
  -[_SBValueConvergenceAnimatorEngine _onDisplayLink:]
  -[_SBValueConvergenceAnimatorEngine updateAnimator:]
  -[_SBValueConvergenceAnimatorEngine startAnimator:]
  -[_SBValueConvergenceAnimatorEngine stopAnimator:]
  -[_SBValueConvergenceAnimatorEngine isRunningAnimator:]
  -[_SBValueConvergenceAnimatorEngine _ensureDisplayLink]
  -[_SBValueConvergenceAnimatorEngine _tearDownDisplayLink]


SBScaleIconZoomAnimator : SBIconZoomAnimator
 @property  SBReversibleLayerPropertyAnimator *homeScreenScaleAnimator
 @property  SBReversibleLayerPropertyAnimator *targetIconScaleXAnimator
 @property  SBReversibleLayerPropertyAnimator *targetIconScaleYAnimator
 @property  NSMutableArray *animationCompletions
 @property  <SBScaleIconZoomAnimationContaining> *animationContainer
 @property  SBIcon *targetIcon
 @property  SBIconView *referenceIconView
 @property  SBIconView *targetIconView
 @property  UIView *targetIconContainerView
 @property  UIView *defaultTargetIconContainerView
 @property  UIView *targetIconPositioningView
 @property  double zoomScale
 @property  double maxHomeScreenZoomScale
 @property  BOOL fadesHomeScreen
 @property  {CGPoint=dd} zoomScaleDimension
 @property  {CGPoint=dd} zoomedTargetIconCenter
 @property  {CGPoint=dd} targetIconCenter
 @property  SBHScaleZoomSettings *settings

  // class methods
  +[SBScaleIconZoomAnimator validateAnimationContainer:targetIcon:]

  // instance methods
  -[SBScaleIconZoomAnimator .cxx_destruct]
  -[SBScaleIconZoomAnimator zoomScale]
  -[SBScaleIconZoomAnimator initWithAnimationContainer:targetIcon:]
  -[SBScaleIconZoomAnimator _prepareAnimation]
  -[SBScaleIconZoomAnimator _zoomedIconCenter]
  -[SBScaleIconZoomAnimator _zoomedFrame]
  -[SBScaleIconZoomAnimator targetIconView]
  -[SBScaleIconZoomAnimator _setAnimationFraction:]
  -[SBScaleIconZoomAnimator targetIcon]
  -[SBScaleIconZoomAnimator _cleanupAnimation]
  -[SBScaleIconZoomAnimator _numberOfSignificantAnimations]
  -[SBScaleIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBScaleIconZoomAnimator maxHomeScreenZoomScale]
  -[SBScaleIconZoomAnimator fadesHomeScreen]
  -[SBScaleIconZoomAnimator referenceIconView]
  -[SBScaleIconZoomAnimator zoomScaleDimension]
  -[SBScaleIconZoomAnimator targetIconPositioningView]
  -[SBScaleIconZoomAnimator _referenceIconImageCenter]
  -[SBScaleIconZoomAnimator targetIconContainerView]
  -[SBScaleIconZoomAnimator targetIconCenter]
  -[SBScaleIconZoomAnimator zoomedTargetIconCenter]
  -[SBScaleIconZoomAnimator defaultTargetIconContainerView]
  -[SBScaleIconZoomAnimator shouldMatchMoveWithDock]
  -[SBScaleIconZoomAnimator _forceSquareZoomDimension]
  -[SBScaleIconZoomAnimator _setZoomScale:]
  -[SBScaleIconZoomAnimator _configureTargetIconPositioningView:]
  -[SBScaleIconZoomAnimator _applyZoomFraction:]
  -[SBScaleIconZoomAnimator _applyVisualAltitudeFraction:]
  -[SBScaleIconZoomAnimator _applyIconGridFadeFraction:]
  -[SBScaleIconZoomAnimator animationCompletions]
  -[SBScaleIconZoomAnimator setHomeScreenScaleAnimator:]
  -[SBScaleIconZoomAnimator setTargetIconScaleXAnimator:]
  -[SBScaleIconZoomAnimator setTargetIconScaleYAnimator:]
  -[SBScaleIconZoomAnimator _setIconAlpha:]
  -[SBScaleIconZoomAnimator hintToFraction:]
  -[SBScaleIconZoomAnimator homeScreenScaleAnimator]
  -[SBScaleIconZoomAnimator targetIconScaleXAnimator]
  -[SBScaleIconZoomAnimator targetIconScaleYAnimator]
  -[SBScaleIconZoomAnimator _homeScreenScaleForZoomFraction:]
  -[SBScaleIconZoomAnimator _targetIconScaleForZoomFraction:]
  -[SBScaleIconZoomAnimator _zoomedVisualAltitude]
  -[SBScaleIconZoomAnimator setAnimationCompletions:]


SBFloatingDockViewController : SBFTouchPassThroughViewController /System/Library/Frameworks/UIKit.framework/UIKit <SBIconListViewDragDelegate, SBIconListModelObserver, SBFolderControllerDelegate, SBFolderPresentingViewControllerDelegate, SBScaleIconZoomAnimationContaining, SBIconViewProviding, SBIconViewQuerying, SBIconLocationPresenting, BSDescriptionProviding>
 @property  SBHIconManager *iconManager
 @property  <SBIconViewProviding> *iconViewProvider
 @property  SBIconListModel *dockListModel
 @property  SBFloatingDockView *dockView
 @property  SBFolderPresentingViewController *folderPresentingViewController
 @property  SBHomeScreenIconTransitionAnimator *currentFolderAnimator
 @property  NSMutableArray *currentExpandCompletions
 @property  NSMutableArray *currentCollapseCompletions
 @property  SBFTouchPassThroughView *scalingView
 @property  double lastDockHeight
 @property  SBHFloatingDockStyleConfiguration *underlyingPresentationStyleConfiguration
 @property  BOOL transitioningUnderlyingPresentationStyleConfiguration
 @property  SBHFloatingDockStyleConfiguration *transitionTargetUnderlyingPresentationStyleConfiguration
 @property  <SBFloatingDockViewControllerDelegate> *delegate
 @property  UIViewController<SBFloatingDockSuggestionsViewProviding> *suggestionsViewController
 @property  double contentHeight
 @property  double maximumContentHeight
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} floatingDockScreenFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} floatingDockScreenPresentationFrame
 @property  double preferredVerticalMargin
 @property  double requestedVerticalMargin
 @property  double translationFromFullyPresentedFrame
 @property  double maximumDockContinuousCornerRadius
 @property  double dockOffscreenProgress
 @property  BOOL wantsFastIconReordering
 @property  BOOL shouldIndicateImpossibleDrop
 @property  BOOL presentingFolder
 @property  SBFolderController *presentedFolderController
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *containerView
 @property  UIWindow *animationWindow
 @property  UIView *fallbackIconContainerView
 @property  UIView *extraViewsContainer
 @property  NSArray *extraViews
 @property  BOOL shouldAnimateLastTwoViewsAsOne
 @property  BOOL shouldAnimateFirstTwoViewsAsOne
 @property  SBHIconModel *iconModel
 @property  SBIconListView *currentIconListView
 @property  SBIconListView *dockIconListView
 @property  NSSet *presentedIconLocations

  // instance methods
  -[SBFloatingDockViewController dealloc]
  -[SBFloatingDockViewController delegate]
  -[SBFloatingDockViewController setDelegate:]
  -[SBFloatingDockViewController .cxx_destruct]
  -[SBFloatingDockViewController succinctDescription]
  -[SBFloatingDockViewController descriptionWithMultilinePrefix:]
  -[SBFloatingDockViewController succinctDescriptionBuilder]
  -[SBFloatingDockViewController descriptionBuilderWithMultilinePrefix:]
  -[SBFloatingDockViewController containerView]
  -[SBFloatingDockViewController viewDidLoad]
  -[SBFloatingDockViewController viewDidLayoutSubviews]
  -[SBFloatingDockViewController legibilitySettings]
  -[SBFloatingDockViewController setLegibilitySettings:]
  -[SBFloatingDockViewController dockView]
  -[SBFloatingDockViewController setDockView:]
  -[SBFloatingDockViewController maximumContentHeight]
  -[SBFloatingDockViewController iconManager]
  -[SBFloatingDockViewController contentHeight]
  -[SBFloatingDockViewController animationWindow]
  -[SBFloatingDockViewController iconModel]
  -[SBFloatingDockViewController currentIconListView]
  -[SBFloatingDockViewController dockIconListView]
  -[SBFloatingDockViewController fallbackIconContainerView]
  -[SBFloatingDockViewController targetIconContainerView]
  -[SBFloatingDockViewController borrowScalingView]
  -[SBFloatingDockViewController returnScalingView]
  -[SBFloatingDockViewController setUnderlyingPresentationStyleConfiguration:]
  -[SBFloatingDockViewController dockListModel]
  -[SBFloatingDockViewController _rebuildUserIconListView]
  -[SBFloatingDockViewController suggestionsViewController]
  -[SBFloatingDockViewController setFolderPresentingViewController:]
  -[SBFloatingDockViewController setScalingView:]
  -[SBFloatingDockViewController iconManagerDidChangeIconModel:]
  -[SBFloatingDockViewController iconModelDidLayout:]
  -[SBFloatingDockViewController iconEditingDidChange:]
  -[SBFloatingDockViewController iconDraggingDidChange:]
  -[SBFloatingDockViewController reduceTransparencyEnabledStateDidChange:]
  -[SBFloatingDockViewController _sizeCategoryDidChange:]
  -[SBFloatingDockViewController contentHeightForFrame:]
  -[SBFloatingDockViewController translationFromFullyPresentedFrame]
  -[SBFloatingDockViewController lastDockHeight]
  -[SBFloatingDockViewController setLastDockHeight:]
  -[SBFloatingDockViewController userIconListView]
  -[SBFloatingDockViewController recentIconListView]
  -[SBFloatingDockViewController dockOffscreenProgress]
  -[SBFloatingDockViewController minimumVerticalMarginForFrame:]
  -[SBFloatingDockViewController maximumDockContinuousCornerRadius]
  -[SBFloatingDockViewController folderPresentingViewController]
  -[SBFloatingDockViewController presentedFolderController]
  -[SBFloatingDockViewController enumerateIconListViewsUsingBlock:]
  -[SBFloatingDockViewController enumerateVisibleIconViewsUsingBlock:]
  -[SBFloatingDockViewController dockViewWillBecomeVisible]
  -[SBFloatingDockViewController dockViewWillResignVisible]
  -[SBFloatingDockViewController dockViewDidResignVisible]
  -[SBFloatingDockViewController dockViewDidBecomeVisible]
  -[SBFloatingDockViewController userIconLocation]
  -[SBFloatingDockViewController isDisplayingIcon:inLocation:]
  -[SBFloatingDockViewController suggestionsIconLocation]
  -[SBFloatingDockViewController isDisplayingIconView:]
  -[SBFloatingDockViewController setTransitioningUnderlyingPresentationStyleConfiguration:]
  -[SBFloatingDockViewController setTransitionTargetUnderlyingPresentationStyleConfiguration:]
  -[SBFloatingDockViewController _updateDockForStyleConfiguration:]
  -[SBFloatingDockViewController transitionTargetUnderlyingPresentationStyleConfiguration]
  -[SBFloatingDockViewController iconViewForIcon:location:]
  -[SBFloatingDockViewController presentedIconLocations]
  -[SBFloatingDockViewController firstIconViewForIcon:inLocations:]
  -[SBFloatingDockViewController dockViewIfExists]
  -[SBFloatingDockViewController setDockListModel:]
  -[SBFloatingDockViewController _resizeDockForChangedNumberOfIconsAnimated:]
  -[SBFloatingDockViewController underlyingPresentationStyleConfiguration]
  -[SBFloatingDockViewController _updateFolderIconBackgroundsForStyleConfiguration:]
  -[SBFloatingDockViewController _updatePresentedFolderBackgroundForStyleConfiguration:]
  -[SBFloatingDockViewController _updatePlatterShadowForStyleConfiguration:]
  -[SBFloatingDockViewController wantsFastIconReordering]
  -[SBFloatingDockViewController setWantsFastIconReordering:]
  -[SBFloatingDockViewController _backgroundEffectForPresentedFolder]
  -[SBFloatingDockViewController _rebuildAfterIconModelChange]
  -[SBFloatingDockViewController isPresentingFolder]
  -[SBFloatingDockViewController _platterEffectForPresentedFolder]
  -[SBFloatingDockViewController shouldIndicateImpossibleDrop]
  -[SBFloatingDockViewController iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFloatingDockViewController iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFloatingDockViewController _coalesceRequestsToResizeDockForChangedNumberOfIcons]
  -[SBFloatingDockViewController isPresentingIconLocation:]
  -[SBFloatingDockViewController iconViewProvider]
  -[SBFloatingDockViewController dequeueReusableIconViewOfClass:]
  -[SBFloatingDockViewController recycleIconView:]
  -[SBFloatingDockViewController isIconViewRecycled:]
  -[SBFloatingDockViewController configureIconView:forIcon:]
  -[SBFloatingDockViewController _currentFolderIconBackgroundStyle]
  -[SBFloatingDockViewController currentFolderAnimator]
  -[SBFloatingDockViewController currentExpandCompletions]
  -[SBFloatingDockViewController setCurrentExpandCompletions:]
  -[SBFloatingDockViewController currentCollapseCompletions]
  -[SBFloatingDockViewController setCurrentCollapseCompletions:]
  -[SBFloatingDockViewController _presentFolderForIcon:location:animated:completion:]
  -[SBFloatingDockViewController _shouldOpenFolderIcon:]
  -[SBFloatingDockViewController _isInAppToAppTransition]
  -[SBFloatingDockViewController setCurrentFolderAnimator:]
  -[SBFloatingDockViewController firstIconViewForIcon:]
  -[SBFloatingDockViewController scalingView]
  -[SBFloatingDockViewController dismissPresentedFolderAnimated:completion:]
  -[SBFloatingDockViewController iconListView:canHandleIconDropSession:]
  -[SBFloatingDockViewController iconListView:iconDropSessionDidEnter:]
  -[SBFloatingDockViewController iconListView:iconDropSessionDidUpdate:]
  -[SBFloatingDockViewController iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFloatingDockViewController iconListView:iconDropSessionDidExit:]
  -[SBFloatingDockViewController iconListView:performIconDrop:]
  -[SBFloatingDockViewController iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFloatingDockViewController iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFloatingDockViewController iconList:didAddIcon:]
  -[SBFloatingDockViewController iconList:didReplaceIcon:withIcon:]
  -[SBFloatingDockViewController iconList:didRemoveIcon:]
  -[SBFloatingDockViewController iconList:didMoveIcon:]
  -[SBFloatingDockViewController controllerClassForFolder:]
  -[SBFloatingDockViewController folderController:canChangeCurrentPageIndexToIndex:]
  -[SBFloatingDockViewController folderController:draggedIconShouldDropFromListView:]
  -[SBFloatingDockViewController folderControllerShouldClose:withPinchGesture:]
  -[SBFloatingDockViewController folderControllerShouldBeginEditing:]
  -[SBFloatingDockViewController folderControllerShouldEndEditing:]
  -[SBFloatingDockViewController folderControllerWillBeginScrolling:]
  -[SBFloatingDockViewController folderControllerDidEndScrolling:]
  -[SBFloatingDockViewController folderController:iconListView:canHandleIconDropSession:]
  -[SBFloatingDockViewController folderController:iconListView:iconDropSessionDidEnter:]
  -[SBFloatingDockViewController folderController:iconListView:iconDropSessionDidUpdate:]
  -[SBFloatingDockViewController folderController:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFloatingDockViewController folderController:iconListView:iconDropSessionDidExit:]
  -[SBFloatingDockViewController folderController:iconListView:performIconDrop:]
  -[SBFloatingDockViewController folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFloatingDockViewController folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFloatingDockViewController folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFloatingDockViewController folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFloatingDockViewController folderControllerWillOpen:]
  -[SBFloatingDockViewController folderControllerDidOpen:]
  -[SBFloatingDockViewController folderControllerWillClose:]
  -[SBFloatingDockViewController folderControllerDidClose:]
  -[SBFloatingDockViewController folderController:accessibilityTintColorForScreenRect:]
  -[SBFloatingDockViewController folderPresentationController:animationControllerForTransitionWithFolder:presenting:animated:]
  -[SBFloatingDockViewController folderPresentationController:willPerformTransitionWithFolder:presenting:withTransitionCoordinator:]
  -[SBFloatingDockViewController statusBarHeightForFolderPresentationController:]
  -[SBFloatingDockViewController minimumHomeScreenScaleForFolderPresentationController:]
  -[SBFloatingDockViewController folderPresentationController:sourceViewForPresentingViewController:]
  -[SBFloatingDockViewController extraViewsContainer]
  -[SBFloatingDockViewController extraViews]
  -[SBFloatingDockViewController shouldAnimateLastTwoViewsAsOne]
  -[SBFloatingDockViewController shouldAnimateFirstTwoViewsAsOne]
  -[SBFloatingDockViewController firstIconViewForIcon:excludingLocations:]
  -[SBFloatingDockViewController isDisplayingIcon:inLocations:]
  -[SBFloatingDockViewController isDisplayingIcon:]
  -[SBFloatingDockViewController isDisplayingIconView:inLocation:]
  -[SBFloatingDockViewController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBFloatingDockViewController enumerateDisplayedIconViewsUsingBlock:]
  -[SBFloatingDockViewController initWithIconManager:iconViewProvider:]
  -[SBFloatingDockViewController setSuggestionsViewController:]
  -[SBFloatingDockViewController preferredVerticalMargin]
  -[SBFloatingDockViewController requestedVerticalMargin]
  -[SBFloatingDockViewController setRequestedVerticalMargin:]
  -[SBFloatingDockViewController floatingDockScreenFrame]
  -[SBFloatingDockViewController floatingDockScreenPresentationFrame]
  -[SBFloatingDockViewController layoutUserControlledIconLists:animationType:forceRelayout:]
  -[SBFloatingDockViewController enumerateIconListsUsingBlock:]
  -[SBFloatingDockViewController prepareForTransitionToStyleConfiguration:fromDockVisible:toDockVisible:]
  -[SBFloatingDockViewController cleanUpAfterUnderlyingBackgroundStyleTransition]
  -[SBFloatingDockViewController setDockOffscreenProgress:]
  -[SBFloatingDockViewController _addDockGestureRecognizer:]
  -[SBFloatingDockViewController _setPaddingEdgeInsets:]
  -[SBFloatingDockViewController floatingDockSuggestionsViewControllerDidChangeNumberOfVisibleSuggestions:]
  -[SBFloatingDockViewController presentFolderForIcon:location:animated:completion:]
  -[SBFloatingDockViewController setShouldIndicateImpossibleDrop:]
  -[SBFloatingDockViewController isTransitioningUnderlyingBackgroundStyle]


SBHSidebarWidgetBootstrappingAdvisor : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL shouldSidebarWidgetsBeInLearningMode
 @property  <SBHSidebarWidgetLearningDataSource> *dataSource
 @property  double learningDuration
 @property  unsigned long learningEpoch

  // instance methods
  -[SBHSidebarWidgetBootstrappingAdvisor dealloc]
  -[SBHSidebarWidgetBootstrappingAdvisor .cxx_destruct]
  -[SBHSidebarWidgetBootstrappingAdvisor addObserver:]
  -[SBHSidebarWidgetBootstrappingAdvisor removeObserver:]
  -[SBHSidebarWidgetBootstrappingAdvisor initWithDataSource:]
  -[SBHSidebarWidgetBootstrappingAdvisor dataSource]
  -[SBHSidebarWidgetBootstrappingAdvisor _notifyObservers]
  -[SBHSidebarWidgetBootstrappingAdvisor _setupSidebarWidgetsLearningCadence]
  -[SBHSidebarWidgetBootstrappingAdvisor initWithDataSource:learningDuration:learningEpoch:]
  -[SBHSidebarWidgetBootstrappingAdvisor _updateSidebarWidgetsCommenceDateIfEmpty]
  -[SBHSidebarWidgetBootstrappingAdvisor _requiresLearningCadenceForFavoriteWidgets:]
  -[SBHSidebarWidgetBootstrappingAdvisor _updateSidebarWidgetsEpoch]
  -[SBHSidebarWidgetBootstrappingAdvisor _scheduleWidgetLearningCadenceUpdateTimer:]
  -[SBHSidebarWidgetBootstrappingAdvisor learningDuration]
  -[SBHSidebarWidgetBootstrappingAdvisor _sidebarLearningPeriodTimeIsUp:]
  -[SBHSidebarWidgetBootstrappingAdvisor learningEpoch]
  -[SBHSidebarWidgetBootstrappingAdvisor noteSignificantSidebarStateChangeDidOccur]
  -[SBHSidebarWidgetBootstrappingAdvisor shouldSidebarWidgetsBeInLearningMode]
  -[SBHSidebarWidgetBootstrappingAdvisor setShouldSidebarWidgetsBeInLearningMode:]


SBCenterIconZoomAnimator : SBIconZoomAnimator <SBIconListLayoutDelegate, SBIconListModelObserver>
 @property  <SBDockOffscreenFractionModifying> *dockOffscreenFractionModifier
 @property  UIView *zoomView
 @property  {CGPoint=dd} cameraPosition
 @property  double centerRow
 @property  double centerCol
 @property  BOOL animatingIcons
 @property  SBFolderController *folderController
 @property  SBHCenterZoomSettings *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBCenterIconZoomAnimator .cxx_destruct]
  -[SBCenterIconZoomAnimator cameraPosition]
  -[SBCenterIconZoomAnimator _prepareAnimation]
  -[SBCenterIconZoomAnimator _setAnimationFraction:]
  -[SBCenterIconZoomAnimator _cleanupAnimation]
  -[SBCenterIconZoomAnimator _numberOfSignificantAnimations]
  -[SBCenterIconZoomAnimator _performAnimationToFraction:withCentralAnimationSettings:delay:alreadyAnimating:sharedCompletion:]
  -[SBCenterIconZoomAnimator iconList:didAddIcon:]
  -[SBCenterIconZoomAnimator iconList:didReplaceIcon:withIcon:]
  -[SBCenterIconZoomAnimator iconList:didRemoveIcon:]
  -[SBCenterIconZoomAnimator iconList:didMoveIcon:]
  -[SBCenterIconZoomAnimator folderController]
  -[SBCenterIconZoomAnimator _calculateCentersAndCameraPosition]
  -[SBCenterIconZoomAnimator setDockOffscreenFractionModifier:]
  -[SBCenterIconZoomAnimator _positionView:forIcon:]
  -[SBCenterIconZoomAnimator _setAnimationFraction:withCenter:]
  -[SBCenterIconZoomAnimator _zPositionForView:center:andFraction:]
  -[SBCenterIconZoomAnimator enumerateExtraViewsWithHandler:]
  -[SBCenterIconZoomAnimator _updateDockForFraction:]
  -[SBCenterIconZoomAnimator dockOffscreenFractionModifier]
  -[SBCenterIconZoomAnimator _cleanupAnimationIncludingDock:]
  -[SBCenterIconZoomAnimator _iconZoomDelay]
  -[SBCenterIconZoomAnimator _animationFactoryForIcon:]
  -[SBCenterIconZoomAnimator _animationFactoryForDock]
  -[SBCenterIconZoomAnimator _animationFactoryForFolderView]
  -[SBCenterIconZoomAnimator _calculateCenters]
  -[SBCenterIconZoomAnimator iconListView:originForIconCoordinate:proposedOrigin:]
  -[SBCenterIconZoomAnimator iconListViewIsNotDisplayingAnyIcons:]
  -[SBCenterIconZoomAnimator initWithFolderController:]
  -[SBCenterIconZoomAnimator setFraction:withCenter:]
  -[SBCenterIconZoomAnimator zoomView]
  -[SBCenterIconZoomAnimator centerRow]
  -[SBCenterIconZoomAnimator centerCol]
  -[SBCenterIconZoomAnimator animatingIcons]


SBViewControllerTransitionContext : NSObject /usr/lib/libSystem.B.dylib <SBViewControllerContextTransitioning, SBViewControllerTransitionCoordinator>
 @property  <SBViewControllerTransitionContextDelegate> *delegate
 @property  UIView *containerView
 @property  <UIViewControllerAnimatedTransitioning> *animator
 @property  <UIViewControllerInteractiveTransitioning> *interactor
 @property  long long presentationStyle
 @property  {CGAffineTransform=dddddd} targetTransform
 @property  BOOL isTransitioning
 @property  BOOL wantsAnimation
 @property  id userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL animated
 @property  BOOL interactive
 @property  BOOL transitionWasCancelled
 @property  BOOL initiallyInteractive
 @property  BOOL isInterruptible
 @property  BOOL cancelled
 @property  double transitionDuration
 @property  double percentComplete
 @property  double completionVelocity
 @property  long long completionCurve

  // instance methods
  -[SBViewControllerTransitionContext init]
  -[SBViewControllerTransitionContext dealloc]
  -[SBViewControllerTransitionContext userInfo]
  -[SBViewControllerTransitionContext delegate]
  -[SBViewControllerTransitionContext setDelegate:]
  -[SBViewControllerTransitionContext .cxx_destruct]
  -[SBViewControllerTransitionContext isCancelled]
  -[SBViewControllerTransitionContext setUserInfo:]
  -[SBViewControllerTransitionContext succinctDescription]
  -[SBViewControllerTransitionContext descriptionWithMultilinePrefix:]
  -[SBViewControllerTransitionContext succinctDescriptionBuilder]
  -[SBViewControllerTransitionContext descriptionBuilderWithMultilinePrefix:]
  -[SBViewControllerTransitionContext isInterruptible]
  -[SBViewControllerTransitionContext containerView]
  -[SBViewControllerTransitionContext setContainerView:]
  -[SBViewControllerTransitionContext animateAlongsideTransition:completion:]
  -[SBViewControllerTransitionContext setPresentationStyle:]
  -[SBViewControllerTransitionContext presentationStyle]
  -[SBViewControllerTransitionContext isInteractive]
  -[SBViewControllerTransitionContext viewControllerForKey:]
  -[SBViewControllerTransitionContext transitionWasCancelled]
  -[SBViewControllerTransitionContext completeTransition:]
  -[SBViewControllerTransitionContext cancelInteractiveTransition]
  -[SBViewControllerTransitionContext finishInteractiveTransition]
  -[SBViewControllerTransitionContext percentComplete]
  -[SBViewControllerTransitionContext updateInteractiveTransition:]
  -[SBViewControllerTransitionContext completionCurve]
  -[SBViewControllerTransitionContext setAnimator:]
  -[SBViewControllerTransitionContext isAnimated]
  -[SBViewControllerTransitionContext _completeTransition]
  -[SBViewControllerTransitionContext viewForKey:]
  -[SBViewControllerTransitionContext transitionDuration]
  -[SBViewControllerTransitionContext notifyWhenInteractionChangesUsingBlock:]
  -[SBViewControllerTransitionContext animateAlongsideTransitionInView:animation:completion:]
  -[SBViewControllerTransitionContext pauseInteractiveTransition]
  -[SBViewControllerTransitionContext finalFrameForViewController:]
  -[SBViewControllerTransitionContext notifyWhenInteractionEndsUsingBlock:]
  -[SBViewControllerTransitionContext initiallyInteractive]
  -[SBViewControllerTransitionContext animator]
  -[SBViewControllerTransitionContext targetTransform]
  -[SBViewControllerTransitionContext initialFrameForViewController:]
  -[SBViewControllerTransitionContext completionVelocity]
  -[SBViewControllerTransitionContext isTransitioning]
  -[SBViewControllerTransitionContext cancelTransition]
  -[SBViewControllerTransitionContext setTargetTransform:]
  -[SBViewControllerTransitionContext wantsAnimation]
  -[SBViewControllerTransitionContext setWantsAnimation:]
  -[SBViewControllerTransitionContext startTransition]
  -[SBViewControllerTransitionContext _animatorIsInteractive]
  -[SBViewControllerTransitionContext _interactorSupportsRestarting]
  -[SBViewControllerTransitionContext _animatorSupportsRestarting]
  -[SBViewControllerTransitionContext _startInteractiveTransition]
  -[SBViewControllerTransitionContext _updateTransitionAnimationFactoryAndOptions]
  -[SBViewControllerTransitionContext transitionAnimationFactory]
  -[SBViewControllerTransitionContext transitionAnimationOptions]
  -[SBViewControllerTransitionContext _runAlongsideAnimationBlocksWithFactory:options:]
  -[SBViewControllerTransitionContext _runAlongsideAnimationBlocksInEnclosingAnimationContext]
  -[SBViewControllerTransitionContext _interactiveAnimator]
  -[SBViewControllerTransitionContext _runInteractionEndedHandlers]
  -[SBViewControllerTransitionContext _acquireTransitionCompletion]
  -[SBViewControllerTransitionContext _completeTransitionIfPossible]
  -[SBViewControllerTransitionContext supportsCancelling]
  -[SBViewControllerTransitionContext _reversibleAnimator]
  -[SBViewControllerTransitionContext _animatorIsReversible]
  -[SBViewControllerTransitionContext supportsRestarting]
  -[SBViewControllerTransitionContext _objectSupportsRestarting:]
  -[SBViewControllerTransitionContext transitionWasRestarted]
  -[SBViewControllerTransitionContext restartTransition]
  -[SBViewControllerTransitionContext wasPreviousPhaseInteractive]
  -[SBViewControllerTransitionContext requiresCancellableAnimations]
  -[SBViewControllerTransitionContext requiresInteractiveAnimations]
  -[SBViewControllerTransitionContext requiresRestartableAnimations]
  -[SBViewControllerTransitionContext addTransitionContinuation:]
  -[SBViewControllerTransitionContext interactor]
  -[SBViewControllerTransitionContext setInteractor:]
  -[SBViewControllerTransitionContext setViewController:forKey:]
  -[SBViewControllerTransitionContext setView:forKey:]
  -[SBViewControllerTransitionContext setInitialFrame:forViewController:]
  -[SBViewControllerTransitionContext setFinalFrame:forViewController:]


SBIconAnimationContext : NSObject /usr/lib/libSystem.B.dylib
 @property  double delay
 @property  double fraction
 @property  @? completion

  // instance methods
  -[SBIconAnimationContext .cxx_destruct]
  -[SBIconAnimationContext delay]
  -[SBIconAnimationContext setDelay:]
  -[SBIconAnimationContext setCompletion:]
  -[SBIconAnimationContext completion]
  -[SBIconAnimationContext fraction]
  -[SBIconAnimationContext setFraction:]


SBIconAnimator : NSObject /usr/lib/libSystem.B.dylib
 @property  <SBIconAnimationContaining> *animationContainer
 @property  UIView *referenceView
 @property  BOOL invalidated
 @property  <SBIconAnimatorDelegate> *delegate
 @property  SBHIconAnimationSettings *settings
 @property  double fraction
 @property  double hintFraction
 @property  SBValueConvergenceAnimator *hintAnimator
 @property  UIView *backgroundDarkeningView
 @property  BOOL animating
 @property  BOOL pastPointOfNoReturn

  // instance methods
  -[SBIconAnimator dealloc]
  -[SBIconAnimator delegate]
  -[SBIconAnimator setDelegate:]
  -[SBIconAnimator .cxx_destruct]
  -[SBIconAnimator cleanup]
  -[SBIconAnimator settings]
  -[SBIconAnimator setSettings:]
  -[SBIconAnimator isAnimating]
  -[SBIconAnimator prepare]
  -[SBIconAnimator fraction]
  -[SBIconAnimator setFraction:]
  -[SBIconAnimator animationContainer]
  -[SBIconAnimator referenceView]
  -[SBIconAnimator invalidated]
  -[SBIconAnimator setInvalidated:]
  -[SBIconAnimator _isDelayedForRotation]
  -[SBIconAnimator _prepareAnimation]
  -[SBIconAnimator _setAnimationFraction:]
  -[SBIconAnimator _cleanupAnimation]
  -[SBIconAnimator _numberOfSignificantAnimations]
  -[SBIconAnimator backgroundDarkeningView]
  -[SBIconAnimator initWithAnimationContainer:]
  -[SBIconAnimator _animateToFraction:afterDelay:withSharedCompletion:]
  -[SBIconAnimator centralAnimationFactory]
  -[SBIconAnimator isPastPointOfNoReturn]
  -[SBIconAnimator animateToFraction:afterDelay:withCompletion:]
  -[SBIconAnimator hintToFraction:]
  -[SBIconAnimator _windowFinishedRotating]
  -[SBIconAnimator _invalidateCompletions]
  -[SBIconAnimator _animateToFractionFromContext:]
  -[SBIconAnimator _animateToFractionFromPendingContexts]
  -[SBIconAnimator hintFraction]
  -[SBIconAnimator setHintFraction:]
  -[SBIconAnimator hintAnimator]
  -[SBIconAnimator setHintAnimator:]
  -[SBIconAnimator setBackgroundDarkeningView:]


SBFolderController : SBNestingViewController <SBFolderControllerDelegate, SBFolderObserver, SBIconListViewDragObserver, SBFolderControllerBackgroundViewDelegate, SBFolderViewDelegate, SBScaleIconZoomAnimationContaining, BSDescriptionProviding, SBIconLocationPresenting, SBIconViewQuerying>
 @property  BOOL open
 @property  BOOL active
 @property  BOOL rotating
 @property  BOOL animating
 @property  <BSInvalidatable> *statusBarAssertion
 @property  UIStatusBar *fakeStatusBar
 @property  SBFolderControllerConfiguration *configuration
 @property  long long orientation
 @property  SBFolderView *folderView
 @property  SBFolderView *folderViewIfLoaded
 @property  SBFolderContainerView *folderContainerView
 @property  SBFolderController *outerFolderController
 @property  SBFolderController *innerFolderController
 @property  SBFolderControllerAnimationContext *animationContext
 @property  SBIconListPageControl *pageControl
 @property  <SBFolderControllerDelegate> *folderDelegate
 @property  SBFolder *folder
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  unsigned long allowedOrientations
 @property  <SBIconViewProviding> *iconViewProvider
 @property  id context
 @property  SBIconView *folderIconView
 @property  UIView *headerView
 @property  long long currentPageIndex
 @property  BOOL editing
 @property  BOOL scrolling
 @property  BOOL scrollDragging
 @property  BOOL scrollDecelerating
 @property  BOOL scrollTracking
 @property  unsigned long userInterfaceLayoutDirectionHandling
 @property  long long userInterfaceLayoutDirection
 @property  double currentScrollingOffset
 @property  _UILegibilitySettings *legibilitySettings
 @property  long long defaultPageIndex
 @property  long long minimumPageIndex
 @property  long long maximumPageIndex
 @property  long long firstIconPageIndex
 @property  long long lastIconPageIndex
 @property  UIView *contentView
 @property  NSArray *iconListViews
 @property  unsigned long iconListViewCount
 @property  SBIconListView *currentIconListView
 @property  NSString *originatingIconLocation
 @property  SBFolderController *deepestFolderController
 @property  NSIndexPath *currentIndexPath
 @property  BOOL hasDock
 @property  SBIconListView *dockListView
 @property  BOOL suspendsWallpaperAnimationWhileOpen
 @property  BOOL closesAfterDragExits
 @property  BOOL canAcceptFolderIconDrags
 @property  BOOL disablesScrollingWhileIconDragIsDropping
 @property  BOOL occluded
 @property  double statusBarHeight
 @property  SBIconLayoutOverrideStrategy *iconLayoutOverrideStrategy
 @property  BOOL pageControlHidden
 @property  double pageControlAlpha
 @property  UIColor *defaultAccessibilityTintColor
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  SBIconPageIndicatorImageSetCache *iconPageIndicatorImageSetCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *containerView
 @property  UIWindow *animationWindow
 @property  UIView *fallbackIconContainerView
 @property  UIView *extraViewsContainer
 @property  NSArray *extraViews
 @property  BOOL shouldAnimateLastTwoViewsAsOne
 @property  BOOL shouldAnimateFirstTwoViewsAsOne
 @property  SBHIconModel *iconModel
 @property  SBIconListView *dockIconListView
 @property  NSSet *presentedIconLocations

  // class methods
  +[SBFolderController _contentViewClass]
  +[SBFolderController configurationClass]
  +[SBFolderController iconLocation]
  +[SBFolderController listViewClass]

  // instance methods
  -[SBFolderController invalidate]
  -[SBFolderController _invalidate]
  -[SBFolderController .cxx_destruct]
  -[SBFolderController isActive]
  -[SBFolderController context]
  -[SBFolderController setActive:]
  -[SBFolderController orientation]
  -[SBFolderController isOpen]
  -[SBFolderController setOrientation:]
  -[SBFolderController setConfiguration:]
  -[SBFolderController configuration]
  -[SBFolderController initWithConfiguration:]
  -[SBFolderController succinctDescription]
  -[SBFolderController descriptionWithMultilinePrefix:]
  -[SBFolderController succinctDescriptionBuilder]
  -[SBFolderController descriptionBuilderWithMultilinePrefix:]
  -[SBFolderController isScrolling]
  -[SBFolderController contentView]
  -[SBFolderController loadView]
  -[SBFolderController userInterfaceLayoutDirection]
  -[SBFolderController containerView]
  -[SBFolderController viewDidLoad]
  -[SBFolderController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBFolderController isAnimating]
  -[SBFolderController headerView]
  -[SBFolderController setContentAlpha:]
  -[SBFolderController isEditing]
  -[SBFolderController statusBarHeight]
  -[SBFolderController isOccluded]
  -[SBFolderController setEditing:animated:]
  -[SBFolderController isRotating]
  -[SBFolderController currentIndexPath]
  -[SBFolderController _allowUserInteraction]
  -[SBFolderController pageControl]
  -[SBFolderController setAnimating:]
  -[SBFolderController legibilitySettings]
  -[SBFolderController setLegibilitySettings:]
  -[SBFolderController setOccluded:]
  -[SBFolderController setStatusBarHeight:]
  -[SBFolderController setPageControl:]
  -[SBFolderController animationContext]
  -[SBFolderController setAnimationContext:]
  -[SBFolderController _depth]
  -[SBFolderController setRotating:]
  -[SBFolderController currentPageIndex]
  -[SBFolderController setCurrentPageIndex:]
  -[SBFolderController setOpen:]
  -[SBFolderController folder]
  -[SBFolderController setFolder:]
  -[SBFolderController orientationDidChange:]
  -[SBFolderController allowedOrientations]
  -[SBFolderController setCurrentPageIndex:animated:]
  -[SBFolderController animationWindow]
  -[SBFolderController iconModel]
  -[SBFolderController currentIconListView]
  -[SBFolderController dockIconListView]
  -[SBFolderController dockListView]
  -[SBFolderController fallbackIconContainerView]
  -[SBFolderController matchMoveSourceViewForIconView:]
  -[SBFolderController listLayoutProvider]
  -[SBFolderController folderIconImageCache]
  -[SBFolderController iconListViews]
  -[SBFolderController prepareForAnimation:withTargetIcon:]
  -[SBFolderController borrowScalingView]
  -[SBFolderController returnScalingView]
  -[SBFolderController iconLocation]
  -[SBFolderController layoutIconLists:animationType:forceRelayout:]
  -[SBFolderController isDisplayingIcon:inLocation:]
  -[SBFolderController isDisplayingIconView:]
  -[SBFolderController iconViewForIcon:location:]
  -[SBFolderController presentedIconLocations]
  -[SBFolderController firstIconViewForIcon:inLocations:]
  -[SBFolderController setFolderIconImageCache:]
  -[SBFolderController isPresentingIconLocation:]
  -[SBFolderController iconViewProvider]
  -[SBFolderController iconPageIndicatorImageSetCache]
  -[SBFolderController setFolderDelegate:]
  -[SBFolderController setOriginatingIconLocation:]
  -[SBFolderController setFolderIconView:]
  -[SBFolderController firstIconViewForIcon:]
  -[SBFolderController accessibilityTintColorForScreenRect:]
  -[SBFolderController controllerClassForFolder:]
  -[SBFolderController folderController:canChangeCurrentPageIndexToIndex:]
  -[SBFolderController folderController:draggedIconShouldDropFromListView:]
  -[SBFolderController folderControllerShouldClose:withPinchGesture:]
  -[SBFolderController folderControllerShouldBeginEditing:]
  -[SBFolderController folderControllerShouldEndEditing:]
  -[SBFolderController folderControllerWillBeginScrolling:]
  -[SBFolderController folderControllerDidEndScrolling:]
  -[SBFolderController folderController:iconListView:canHandleIconDropSession:]
  -[SBFolderController folderController:iconListView:iconDropSessionDidEnter:]
  -[SBFolderController folderController:iconListView:iconDropSessionDidUpdate:]
  -[SBFolderController folderController:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFolderController folderController:iconListView:iconDropSessionDidExit:]
  -[SBFolderController folderController:iconListView:performIconDrop:]
  -[SBFolderController folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFolderController folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFolderController folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFolderController folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFolderController minimumHomeScreenScaleForFolderController:]
  -[SBFolderController folderControllerWillOpen:]
  -[SBFolderController folderControllerDidOpen:]
  -[SBFolderController folderControllerWillClose:]
  -[SBFolderController folderControllerDidClose:]
  -[SBFolderController contentOverlayInsetsFromParentIfAvailableForFolderController:]
  -[SBFolderController folderControllerWantsToHideStatusBar:]
  -[SBFolderController fakeStatusBarForFolderController:]
  -[SBFolderController folderController:willRemoveFakeStatusBar:]
  -[SBFolderController statusBarStyleRequestForFolderController:]
  -[SBFolderController statusBarEdgeInsetsForFolderController:]
  -[SBFolderController folderController:iconAnimatorForOperation:onViewController:animated:initialDelay:]
  -[SBFolderController folderController:willUseIconTransitionAnimator:forOperation:onViewController:animated:]
  -[SBFolderController folderController:accessibilityTintColorForScreenRect:]
  -[SBFolderController folderController:willCreateInnerFolderControllerWithConfiguration:]
  -[SBFolderController extraViewsContainer]
  -[SBFolderController extraViews]
  -[SBFolderController shouldAnimateLastTwoViewsAsOne]
  -[SBFolderController shouldAnimateFirstTwoViewsAsOne]
  -[SBFolderController firstIconViewForIcon:excludingLocations:]
  -[SBFolderController isDisplayingIcon:inLocations:]
  -[SBFolderController isDisplayingIcon:]
  -[SBFolderController isDisplayingIconView:inLocation:]
  -[SBFolderController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBFolderController enumerateDisplayedIconViewsUsingBlock:]
  -[SBFolderController innerFolderController]
  -[SBFolderController beginModifyingDockOffscreenFractionForReason:]
  -[SBFolderController hasDock]
  -[SBFolderController originatingIconLocation]
  -[SBFolderController folderDelegate]
  -[SBFolderController iconImageCache]
  -[SBFolderController defaultPageIndex]
  -[SBFolderController delegateDidChange]
  -[SBFolderController parentDelegateDidChange]
  -[SBFolderController folderViewIfLoaded]
  -[SBFolderController _makeContentViewWithConfiguration:]
  -[SBFolderController _resetIconLists]
  -[SBFolderController folderView]
  -[SBFolderController folderContainerView]
  -[SBFolderController nestingViewController:animationControllerForOperation:onViewController:animated:]
  -[SBFolderController doesPageContainIconListView:]
  -[SBFolderController _configureForInnerFolderController:]
  -[SBFolderController prepareToClose]
  -[SBFolderController _addFakeStatusBarView]
  -[SBFolderController prepareToOpen]
  -[SBFolderController _fadeHomescreenAndDockIfNecessaryForFolderOpen:]
  -[SBFolderController _compactFolder]
  -[SBFolderController _removeFakeStatusBar]
  -[SBFolderController fadeContentForMagnificationFraction:]
  -[SBFolderController updateContentViewOcclusionWithOverriddenHasInnerFolder:]
  -[SBFolderController updateContentViewOcclusion]
  -[SBFolderController _resetFakeStatusBarSettingsIfNecessary]
  -[SBFolderController nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBFolderController folderIconView]
  -[SBFolderController iconListViewIndexForPageIndex:]
  -[SBFolderController fadeContentForMinificationFraction:]
  -[SBFolderController viewWillTransitionToSize:forOperation:withTransitionCoordinator:]
  -[SBFolderController _updateAssociatedControllerStateAnimated:]
  -[SBFolderController _updateFolderRequiredTrailingEmptyListCount]
  -[SBFolderController iconLayoutOverrideStrategy]
  -[SBFolderController setIconLayoutOverrideStrategy:]
  -[SBFolderController setCurrentPageIndex:animated:completion:]
  -[SBFolderController setCurrentPageIndexToListDirectlyContainingIcon:animated:completion:]
  -[SBFolderController iconListViewCount]
  -[SBFolderController pageIndexForIconListViewIndex:]
  -[SBFolderController animateScrollToDefaultPageWithCompletionHandler:]
  -[SBFolderController minimumPageIndex]
  -[SBFolderController maximumPageIndex]
  -[SBFolderController firstIconPageIndex]
  -[SBFolderController lastIconPageIndex]
  -[SBFolderController _updateStateOfAssociatedController:animated:]
  -[SBFolderController folderControllerForFolder:]
  -[SBFolderController iconListViewAtIndex:]
  -[SBFolderController iconListViewAtPoint:]
  -[SBFolderController iconListViewForTouch:]
  -[SBFolderController iconListViewForDrag:]
  -[SBFolderController cancelScrolling]
  -[SBFolderController isEffectivelyOccludedIfHasInnerFolder:]
  -[SBFolderController isEffectivelyOccluded]
  -[SBFolderController userInterfaceLayoutDirectionHandling]
  -[SBFolderController setIconImageCache:]
  -[SBFolderController _homescreenAndDockShouldFade]
  -[SBFolderController _setHomescreenAndDockAlpha:]
  -[SBFolderController _removeFakeStatusBarAndAssertionIfExists]
  -[SBFolderController _hideStatusBarForReason:]
  -[SBFolderController _resetFakeStatusBarFrameOnly]
  -[SBFolderController _resetFakeStatusBarMatchMoveAnimation]
  -[SBFolderController _unhideStatusBarForReason:]
  -[SBFolderController isPageControlHidden]
  -[SBFolderController setPageControlHidden:]
  -[SBFolderController pageControlAlpha]
  -[SBFolderController setPageControlAlpha:]
  -[SBFolderController prepareToTearDown]
  -[SBFolderController _addEmptyListForce:]
  -[SBFolderController _cancelCloseFolderTimer]
  -[SBFolderController closesAfterDragExits]
  -[SBFolderController _closeFolderTimerFired]
  -[SBFolderController canAcceptFolderIconDrags]
  -[SBFolderController noteUserIsInteractingWithIcons]
  -[SBFolderController _cancelAllInteractionTimers]
  -[SBFolderController noteIconDrag:didChangeInIconListView:]
  -[SBFolderController _setCloseFolderTimerIfNecessary]
  -[SBFolderController _clearIconAnimator]
  -[SBFolderController _newAnimatorForZoomUp:]
  -[SBFolderController outerFolderController]
  -[SBFolderController _listIndexIsVisible:]
  -[SBFolderController shouldOpenFolderIcon:]
  -[SBFolderController configureInnerFolderControllerConfiguration:]
  -[SBFolderController setCurrentPageIndexToListDirectlyContainingIcon:animated:]
  -[SBFolderController popFolderAnimated:completion:]
  -[SBFolderController _canAcceptIconDropSession:inListView:]
  -[SBFolderController nestingViewController:sourceViewForPresentingViewController:]
  -[SBFolderController noteIconDrag:didEnterIconListView:]
  -[SBFolderController noteIconDrag:didExitIconListView:]
  -[SBFolderController disablesScrollingWhileIconDragIsDropping]
  -[SBFolderController noteIconDragDidEnd:]
  -[SBFolderController _noteFolderListsDidChange]
  -[SBFolderController defaultAccessibilityTintColor]
  -[SBFolderController folder:didAddList:]
  -[SBFolderController folder:didRemoveLists:atIndexes:]
  -[SBFolderController folder:didAddIcons:removedIcons:]
  -[SBFolderController folder:didReplaceIcon:withIcon:]
  -[SBFolderController iconListView:concludeIconDrop:]
  -[SBFolderController iconListView:iconDropSessionDidEnd:]
  -[SBFolderController minimumHomeScreenScaleForFolderControllerBackgroundView:]
  -[SBFolderController iconListViewClassForFolderView:]
  -[SBFolderController iconLocationForFolderView:]
  -[SBFolderController folderView:canChangeCurrentPageIndexToIndex:]
  -[SBFolderController folderView:currentPageIndexWillChange:]
  -[SBFolderController folderView:currentPageIndexDidChange:]
  -[SBFolderController folderViewWillBeginDragging:]
  -[SBFolderController folderViewWillBeginScrolling:]
  -[SBFolderController folderViewWillEndDragging:]
  -[SBFolderController folderViewWillUpdatePageDuringScrolling:]
  -[SBFolderController folderViewDidScroll:]
  -[SBFolderController folderViewDidEndScrolling:]
  -[SBFolderController folderView:willAnimateScrollToPageIndex:]
  -[SBFolderController folderViewShouldClose:withPinchGesture:]
  -[SBFolderController folderViewShouldBeginEditing:]
  -[SBFolderController folderViewShouldEndEditing:]
  -[SBFolderController folderView:iconListView:canHandleIconDropSession:]
  -[SBFolderController folderView:iconListView:iconDropSessionDidEnter:]
  -[SBFolderController folderView:iconListView:iconDropSessionDidUpdate:]
  -[SBFolderController folderView:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFolderController folderView:iconListView:iconDropSessionDidExit:]
  -[SBFolderController folderView:iconListView:performIconDrop:]
  -[SBFolderController folderView:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFolderController folderView:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFolderController folderView:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFolderController folderView:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFolderController folderViewDidChangeOrientation:]
  -[SBFolderController minimumHomeScreenScaleForFolderView:]
  -[SBFolderController contentOverlayInsetsFromParentIfAvailableForFolderView:]
  -[SBFolderController folderView:accessibilityTintColorForRect:]
  -[SBFolderController addViewToHierarchyForNestedViewController:]
  -[SBFolderController removeViewFromHierarchyForNestedViewController:]
  -[SBFolderController isScrollDragging]
  -[SBFolderController isScrollDecelerating]
  -[SBFolderController isScrollTracking]
  -[SBFolderController currentScrollingOffset]
  -[SBFolderController beginEditingTitle]
  -[SBFolderController deepestFolderController]
  -[SBFolderController suspendsWallpaperAnimationWhileOpen]
  -[SBFolderController setScrollingDisabled:forReason:]
  -[SBFolderController revealIcon:animated:completionHandler:]
  -[SBFolderController _updateHomescreenAndDockFade]
  -[SBFolderController _hideFakeStatusBarForReason:]
  -[SBFolderController _unhideFakeStatusBarForReason:]
  -[SBFolderController addEmptyListView]
  -[SBFolderController unscatterAnimated:afterDelay:withCompletion:]
  -[SBFolderController _iconAppearsOnCurrentPage:]
  -[SBFolderController pushFolderIcon:location:animated:completion:]
  -[SBFolderController restoreExpandedIndexPath:]
  -[SBFolderController prepareToLaunchTappedIcon:completionHandler:]
  -[SBFolderController statusBarInsetsForOrientation:]
  -[SBFolderController setDefaultAccessibilityTintColor:]
  -[SBFolderController statusBarAssertion]
  -[SBFolderController setStatusBarAssertion:]
  -[SBFolderController fakeStatusBar]
  -[SBFolderController setFakeStatusBar:]


SBFloatyFolderControllerConfiguration : SBFolderControllerConfiguration
 @property  unsigned long backgroundEffect
 @property  BOOL displaysMultipleIconListsInLandscapeOrientation

  // instance methods
  -[SBFloatyFolderControllerConfiguration initWithConfiguration:]
  -[SBFloatyFolderControllerConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBFloatyFolderControllerConfiguration backgroundEffect]
  -[SBFloatyFolderControllerConfiguration setBackgroundEffect:]
  -[SBFloatyFolderControllerConfiguration displaysMultipleIconListsInLandscapeOrientation]
  -[SBFloatyFolderControllerConfiguration setDisplaysMultipleIconListsInLandscapeOrientation:]


SBLiveIconImageView : SBIconImageView
  // instance methods
  -[SBLiveIconImageView prepareForReuse]
  -[SBLiveIconImageView snapshot]
  -[SBLiveIconImageView setPaused:]
  -[SBLiveIconImageView setIcon:location:animated:]
  -[SBLiveIconImageView updateUnanimated]
  -[SBLiveIconImageView updateAnimatingState]
  -[SBLiveIconImageView updateImageAnimated:]
  -[SBLiveIconImageView isAnimationAllowed]


SBNestingViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBNestingViewControllerDelegate, SBViewControllerTransitionContextDelegate>
 @property  BOOL isTransitioning
 @property  long long currentTransitionOperation
 @property  SBViewControllerTransitionContext *currentTransition
 @property  @? clientOperationCompletion
 @property  SBNestingViewController *viewControllerCurrentlyDrivingTransition
 @property  NSHashTable *transitionObservers
 @property  SBNestingViewController *nestedViewController
 @property  SBNestingViewController *parentNestingViewController
 @property  BOOL wantsModalPresentation
 @property  <SBNestingViewControllerDelegate> *delegate
 @property  NSArray *nestedViewControllers
 @property  SBNestingViewController *deepestNestedDescendantViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBNestingViewController delegate]
  -[SBNestingViewController setDelegate:]
  -[SBNestingViewController .cxx_destruct]
  -[SBNestingViewController transitionCoordinator]
  -[SBNestingViewController dismissViewControllerAnimated:completion:]
  -[SBNestingViewController initWithNibName:bundle:]
  -[SBNestingViewController viewWillAppear:]
  -[SBNestingViewController viewWillDisappear:]
  -[SBNestingViewController viewDidAppear:]
  -[SBNestingViewController viewDidDisappear:]
  -[SBNestingViewController transitionDidFinish:]
  -[SBNestingViewController sizeForChildContentContainer:withParentContainerSize:]
  -[SBNestingViewController transitionWillBegin:]
  -[SBNestingViewController shouldAutomaticallyForwardAppearanceMethods]
  -[SBNestingViewController isTransitioning]
  -[SBNestingViewController currentTransition]
  -[SBNestingViewController setCurrentTransition:]
  -[SBNestingViewController transitionDidBegin:]
  -[SBNestingViewController transitionWillReverse:]
  -[SBNestingViewController transitionDidReverse:]
  -[SBNestingViewController transitionWillFinish:]
  -[SBNestingViewController nestingViewController:animationControllerForOperation:onViewController:animated:]
  -[SBNestingViewController nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBNestingViewController viewWillTransitionToSize:forOperation:withTransitionCoordinator:]
  -[SBNestingViewController nestedViewController]
  -[SBNestingViewController parentNestingViewController]
  -[SBNestingViewController pushNestedViewController:animated:withCompletion:]
  -[SBNestingViewController popNestedViewControllerAnimated:withCompletion:]
  -[SBNestingViewController setNestedViewControllers:withCompletion:]
  -[SBNestingViewController nestingViewController:sourceViewForPresentingViewController:]
  -[SBNestingViewController addViewToHierarchyForNestedViewController:]
  -[SBNestingViewController removeViewFromHierarchyForNestedViewController:]
  -[SBNestingViewController deepestNestedDescendantViewController]
  -[SBNestingViewController _performOperation:onViewController:animated:withCompletion:]
  -[SBNestingViewController nestedViewControllers]
  -[SBNestingViewController traverseNestedViewControllersWithBlock:]
  -[SBNestingViewController transitionObservers]
  -[SBNestingViewController currentTransitionOperation]
  -[SBNestingViewController viewControllerCurrentlyDrivingTransition]
  -[SBNestingViewController _handleWillAddChildViewController:]
  -[SBNestingViewController setParentNestingViewController:]
  -[SBNestingViewController _handleRemoveChildViewController:]
  -[SBNestingViewController frameForNestedViewController:afterOperation:withParentContainerSize:]
  -[SBNestingViewController setNestedViewController:]
  -[SBNestingViewController nestingViewController:interactionControllerForAnimationController:]
  -[SBNestingViewController _updateStateForTransitioningViewController:]
  -[SBNestingViewController _setFinalStateForTransitioningViewController:]
  -[SBNestingViewController setCurrentTransitionOperation:]
  -[SBNestingViewController clientOperationCompletion]
  -[SBNestingViewController setClientOperationCompletion:]
  -[SBNestingViewController wantsModalPresentation]
  -[SBNestingViewController nestingViewController:willPresentViewController:]
  -[SBNestingViewController _descriptionForOperation:]
  -[SBNestingViewController _shouldAddTransitioningViewControllerAfterCurrentTransitionCompletes]
  -[SBNestingViewController _handleWillRemoveChildViewController:]
  -[SBNestingViewController _handleAddChildViewController:]
  -[SBNestingViewController addTransitionObserver:]
  -[SBNestingViewController removeTransitionObserver:]
  -[SBNestingViewController addNestedViewController:]
  -[SBNestingViewController removeNestedViewController:]
  -[SBNestingViewController setTransitionObservers:]


SBHintInteractor : NSObject /usr/lib/libSystem.B.dylib <UIInteractionProgressObserver, SBViewControllerInteractiveTransitioning>
 @property  UIInteractionProgress *interactionProgress
 @property  double maxHintProgress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double completionSpeed
 @property  long long completionCurve
 @property  BOOL wantsInteractiveStart

  // instance methods
  -[SBHintInteractor .cxx_destruct]
  -[SBHintInteractor interactionProgress]
  -[SBHintInteractor startInteractiveTransition:]
  -[SBHintInteractor finishInteractiveTransition]
  -[SBHintInteractor interactionProgressDidUpdate:]
  -[SBHintInteractor interactionProgress:didEnd:]
  -[SBHintInteractor cancelTransition]
  -[SBHintInteractor supportsRestarting]
  -[SBHintInteractor _updateInteractionPercentComplete:]
  -[SBHintInteractor updateTransition:]
  -[SBHintInteractor initWithInteractionProgress:maxHintProgress:]
  -[SBHintInteractor maxHintProgress]


SBHMappedIconListLayoutProvider : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayoutProvider>
 @property  <SBIconListLayoutProvider> *targetListLayoutProvider

  // instance methods
  -[SBHMappedIconListLayoutProvider .cxx_destruct]
  -[SBHMappedIconListLayoutProvider layoutForIconLocation:]
  -[SBHMappedIconListLayoutProvider targetListLayoutProvider]
  -[SBHMappedIconListLayoutProvider initWithTargetListLayoutProvider:]
  -[SBHMappedIconListLayoutProvider mapIconLocation:toIconLocation:]


SBIconListPageControl : UIPageControl /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  BOOL shouldShowSearchIndicator
 @property  BOOL legibilityEnabled
 @property  <SBIconListPageControlDelegate> *delegate
 @property  SBIconPageIndicatorImageSetCache *imageSetCache
 @property  double defaultHeight
 @property  double defaultIndicatorHeight
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSArray *touchIgnoreRects

  // instance methods
  -[SBIconListPageControl delegate]
  -[SBIconListPageControl setDelegate:]
  -[SBIconListPageControl .cxx_destruct]
  -[SBIconListPageControl setFrame:]
  -[SBIconListPageControl initWithFrame:]
  -[SBIconListPageControl touchesBegan:withEvent:]
  -[SBIconListPageControl touchesMoved:withEvent:]
  -[SBIconListPageControl touchesEnded:withEvent:]
  -[SBIconListPageControl hitTest:withEvent:]
  -[SBIconListPageControl defaultHeight]
  -[SBIconListPageControl _invalidateIndicators]
  -[SBIconListPageControl _indicatorViewEnabled:index:]
  -[SBIconListPageControl _transitionIndicator:toEnabled:index:]
  -[SBIconListPageControl legibilitySettings]
  -[SBIconListPageControl setLegibilitySettings:]
  -[SBIconListPageControl touchIgnoreRects]
  -[SBIconListPageControl _searchIndicatorImage:]
  -[SBIconListPageControl _iconListIndicatorImage:]
  -[SBIconListPageControl _setIndicatorImage:toEnabled:index:]
  -[SBIconListPageControl defaultIndicatorHeight]
  -[SBIconListPageControl setImageSetCache:]
  -[SBIconListPageControl shouldShowSearchIndicator]
  -[SBIconListPageControl setShouldShowSearchIndicator:]
  -[SBIconListPageControl isLegibilityEnabled]
  -[SBIconListPageControl setLegibilityEnabled:]
  -[SBIconListPageControl imageSetCache]
  -[SBIconListPageControl setTouchIgnoreRects:]


SBHSetDiff : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSSet *additions
 @property  NSSet *deletions
 @property  NSSet *updates
 @property  NSSet *fromSet
 @property  NSSet *toSet

  // class methods
  +[SBHSetDiff diffFromSet:toSet:]

  // instance methods
  -[SBHSetDiff isEqual:]
  -[SBHSetDiff copyWithZone:]
  -[SBHSetDiff .cxx_destruct]
  -[SBHSetDiff updates]
  -[SBHSetDiff deletions]
  -[SBHSetDiff _initWithFromSet:toSet:additions:deletions:updates:]
  -[SBHSetDiff fromSet]
  -[SBHSetDiff toSet]
  -[SBHSetDiff additions]


SBHDefaultIconListLayoutProvider : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayoutProvider, BSDescriptionProviding>
 @property  unsigned long screenType
 @property  unsigned long layoutOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHDefaultIconListLayoutProvider currentDeviceScreenType]
  +[SBHDefaultIconListLayoutProvider frameworkFallbackInstance]

  // instance methods
  -[SBHDefaultIconListLayoutProvider init]
  -[SBHDefaultIconListLayoutProvider .cxx_destruct]
  -[SBHDefaultIconListLayoutProvider succinctDescription]
  -[SBHDefaultIconListLayoutProvider descriptionWithMultilinePrefix:]
  -[SBHDefaultIconListLayoutProvider succinctDescriptionBuilder]
  -[SBHDefaultIconListLayoutProvider descriptionBuilderWithMultilinePrefix:]
  -[SBHDefaultIconListLayoutProvider layoutOptions]
  -[SBHDefaultIconListLayoutProvider screenType]
  -[SBHDefaultIconListLayoutProvider layoutForIconLocation:]
  -[SBHDefaultIconListLayoutProvider initWithScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider configureFloatyFolderConfiguration:forScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider configureLabelConfigurations:forScreenType:]
  -[SBHDefaultIconListLayoutProvider configureIconAccessoryConfiguration:forScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider configureFolderIconConfiguration:forScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider configureClockIconConfiguration:forScreenType:layoutOptions:]
  -[SBHDefaultIconListLayoutProvider configureSidebarConfiguration:forScreenType:]
  -[SBHDefaultIconListLayoutProvider makeLayoutForIconLocation:]
  -[SBHDefaultIconListLayoutProvider initWithScreenType:]
  -[SBHDefaultIconListLayoutProvider initWithLayoutOptions:]


SBSearchBackdropView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBUIProgressiveBlur>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBSearchBackdropView .cxx_destruct]
  -[SBSearchBackdropView initWithFrame:]
  -[SBSearchBackdropView setTransitionProgress:]
  -[SBSearchBackdropView completeTransitionSuccessfully:]
  -[SBSearchBackdropView prepareForTransitionToBlurred:]
  -[SBSearchBackdropView completeIncrementalTransitionSuccessfully:]


SBFolderTitleTextField : UITextField /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  BOOL allowsEditing
 @property  double fontSize
 @property  _UILegibilitySettings *legibilitySettings
 @property  BOOL showingEditUI

  // class methods
  +[SBFolderTitleTextField _editBackgroundImage]
  +[SBFolderTitleTextField _clearButtonImage]
  +[SBFolderTitleTextField warmupIfNecessary]

  // instance methods
  -[SBFolderTitleTextField .cxx_destruct]
  -[SBFolderTitleTextField fontSize]
  -[SBFolderTitleTextField setFontSize:]
  -[SBFolderTitleTextField initWithFrame:]
  -[SBFolderTitleTextField sizeThatFits:]
  -[SBFolderTitleTextField _backgroundImage]
  -[SBFolderTitleTextField textRectForBounds:]
  -[SBFolderTitleTextField editingRectForBounds:]
  -[SBFolderTitleTextField clearButtonRectForBounds:]
  -[SBFolderTitleTextField allowsEditing]
  -[SBFolderTitleTextField setAllowsEditing:]
  -[SBFolderTitleTextField legibilitySettings]
  -[SBFolderTitleTextField setLegibilitySettings:]
  -[SBFolderTitleTextField showingEditUI]
  -[SBFolderTitleTextField _clearButtonImage]
  -[SBFolderTitleTextField _updateLegibility]
  -[SBFolderTitleTextField _textRectForBounds:]
  -[SBFolderTitleTextField setShowsEditUI:animated:]


SBFolderBackgroundView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  unsigned long currentEffect
 @property  <SBFolderBackgroundViewDelegate> *delegate
 @property  unsigned long effect
 @property  unsigned long concreteEffect

  // class methods
  +[SBFolderBackgroundView warmupIfNecessary]
  +[SBFolderBackgroundView folderBackgroundSize]
  +[SBFolderBackgroundView cornerRadiusToInsetContent]

  // instance methods
  -[SBFolderBackgroundView delegate]
  -[SBFolderBackgroundView setDelegate:]
  -[SBFolderBackgroundView .cxx_destruct]
  -[SBFolderBackgroundView initWithFrame:]
  -[SBFolderBackgroundView setEffect:]
  -[SBFolderBackgroundView layoutSubviews]
  -[SBFolderBackgroundView _setContinuousCornerRadius:]
  -[SBFolderBackgroundView effect]
  -[SBFolderBackgroundView currentEffect]
  -[SBFolderBackgroundView setCurrentEffect:]
  -[SBFolderBackgroundView _reduceTransparencyChanged]
  -[SBFolderBackgroundView _updateCurrentEffect]
  -[SBFolderBackgroundView updateTintEffectColor]
  -[SBFolderBackgroundView concreteEffect]
  -[SBFolderBackgroundView _tintViewBackgroundColorAtFullAlpha]
  -[SBFolderBackgroundView _hasLowQualityBackground]


SBIconView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <_UISettingsKeyObserver, UIGestureRecognizerDelegate, UIDragInteractionDelegate, SBCloseBoxViewDelegate, UIContextMenuInteractionDelegate, SBSHardwareButtonEventConsuming, SBIconObserver, SBReusableView, SBIconAccessoryInfoProvider>
 @property  UIView *contentContainerView
 @property  UIDragInteraction *dragInteraction
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  NSDate *lastTouchDownDate
 @property  UIViewPropertyAnimator *accessoryViewAnimator
 @property  BOOL overlapping
 @property  long long displayedLabelAccessoryType
 @property  UILongPressGestureRecognizer *editingModeGestureRecognizer
 @property  SBFParallaxSettings *badgeParallaxSettings
 @property  UIContextMenuInteraction *contextMenuInteraction
 @property  BOOL contextMenuInteractionPending
 @property  BOOL contextMenuInteractionActive
 @property  @? contextMenuInteractionPendingCompletion
 @property  UIContextMenuConfiguration *activeContextMenuConfiguration
 @property  NSString *presentedWidgetBundleIdentifier
 @property  <BSInvalidatable> *homeButtonPressConsumingAssertion
 @property  SBIconView *activePreviewIcon
 @property  NSMapTable *pendingAnimatorCompletionsTable
 @property  NSString *representedFolderIconLocation
 @property  BOOL canBeginDrags
 @property  NSString *applicationBundleIdentifierForShortcuts
 @property  NSURL *applicationBundleURLForShortcuts
 @property  NSArray *effectiveApplicationShortcutItems
 @property  {CGSize=dd} maxLabelSize
 @property  SBIcon *icon
 @property  <SBIconViewDelegate> *delegate
 @property  NSString *location
 @property  unsigned long configurationOptions
 @property  BOOL inDock
 @property  _UILegibilitySettings *legibilitySettings
 @property  double iconImageAlpha
 @property  double effectiveIconImageAlpha
 @property  double iconAccessoryAlpha
 @property  double iconLabelAlpha
 @property  NSArray *applicationShortcutItems
 @property  BOOL shouldShowLabelAccessoryView
 @property  BOOL allowsLabelAccessoryView
 @property  long long currentLabelAccessoryType
 @property  double labelAccessoryTotalWidth
 @property  BOOL labelAccessoryHidden
 @property  double baselineOffsetFromBottom
 @property  double firstLineBaseline
 @property  double lastLineBaseline
 @property  BOOL enabled
 @property  BOOL paused
 @property  BOOL editing
 @property  BOOL allowsEditingAnimation
 @property  BOOL allowsCloseBox
 @property  BOOL canShowCloseBox
 @property  BOOL shouldShowCloseBox
 @property  BOOL showingContextMenu
 @property  BOOL allowsBlockedForScreenTimeExpiration
 @property  UIImage *iconImageSnapshot
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} iconImageFrame
 @property  {CGPoint=dd} iconImageCenter
 @property  {CGSize=dd} iconImageVisibleSize
 @property  {CGSize=dd} iconImageSize
 @property  {CGSize=dd} iconViewSize
 @property  BOOL allowsTapWhileEditing
 @property  BOOL highlighted
 @property  BOOL allowsLabelArea
 @property  BOOL allowsPassthroughHitTesting
 @property  BOOL labelHidden
 @property  BOOL showsSquareCorners
 @property  BOOL touchDownInIcon
 @property  BOOL grabbed
 @property  BOOL refusesRecipientStatus
 @property  BOOL showsDropGlow
 @property  BOOL crossfadingImageWithView
 @property  UIView<SBIconLabelView> *labelView
 @property  UIFont *labelFont
 @property  long long currentAccessoryType
 @property  long long continuityBadgeType
 @property  <SBIconContinuityInfo> *continuityInfo
 @property  double iconContentScale
 @property  BOOL iconContentScalingEnabled
 @property  BOOL startsDragMoreQuickly
 @property  double dragInteractionLiftDelay
 @property  Class expectedIconImageViewClass
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  <SBIconListLayout> *listLayout
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  SBHIconImageCache *iconImageCache
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBFolderIcon *folderIcon
 @property  unsigned long folderBackgroundStyle
 @property  UIView *folderIconBackgroundView
 @property  unsigned long visibleMiniIconCount
 @property  unsigned long visibleMiniIconListIndex
 @property  unsigned long firstVisibleMiniIconIndex
 @property  unsigned long centerVisibleMiniIconIndex
 @property  unsigned long lastVisibleMiniIconIndex
 @property  BOOL animatingScrolling
 @property  UIColor *accessibilityTintColor
 @property  long long progressState
 @property  unsigned long imageLoadingBehavior
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconView _labelHeight]
  +[SBIconView defaultIconLocation]
  +[SBIconView draggedItemBundleIdentifiersInDrag:]
  +[SBIconView defaultIconImageSize]
  +[SBIconView defaultIconViewSizeForIconImageSize:configurationOptions:]
  +[SBIconView defaultIconImageScale]
  +[SBIconView defaultIconImageCornerRadius]
  +[SBIconView defaultImageLoadingBehavior]
  +[SBIconView supportsDragInteraction]
  +[SBIconView supportsTapGesture]
  +[SBIconView supportsPreviewInteraction]
  +[SBIconView continuityBadgeTypeForContinuityInfo:]
  +[SBIconView iconLiftAlpha]
  +[SBIconView activateShortcut:withBundleIdentifier:forIconView:]
  +[SBIconView allowsLabelAccessoryView]
  +[SBIconView labelAccessoryViewBaseRightMargin]
  +[SBIconView labelAccessoryViewAdditionalRightMarginForType:]
  +[SBIconView defaultMaxLabelWidthDeltaForContentSizeCategory:]
  +[SBIconView defaultMaxLabelHeight]
  +[SBIconView maxLabelSizeForIconImageSize:]
  +[SBIconView labelConfigurationForListLayout:contentSizeCategory:options:]
  +[SBIconView maxLabelSizeForListLayout:contentSizeCategory:options:]
  +[SBIconView configureLabelImageParametersBuilder:forIcon:location:]
  +[SBIconView defaultViewClassForLabelAccessoryType:]
  +[SBIconView _alwaysShowsAccessoryOfType:]
  +[SBIconView defaultViewClassForAccessoryType:]
  +[SBIconView _jitterXTranslationAnimation]
  +[SBIconView _jitterYTranslationAnimation]
  +[SBIconView _jitterRotationAnimation]
  +[SBIconView _defaultDragInteractionLiftDelay]
  +[SBIconView componentBackgroundView]
  +[SBIconView _closeBoxClassForType:]
  +[SBIconView defaultIconViewSize]
  +[SBIconView isIconTapGestureRecognizer:]
  +[SBIconView defaultIconImageCenterForIconImageSize:]
  +[SBIconView dragContextForDragItem:]

  // instance methods
  -[SBIconView dealloc]
  -[SBIconView setEnabled:]
  -[SBIconView delegate]
  -[SBIconView setDelegate:]
  -[SBIconView .cxx_destruct]
  -[SBIconView addObserver:]
  -[SBIconView removeObserver:]
  -[SBIconView isPaused]
  -[SBIconView isEnabled]
  -[SBIconView prepareForReuse]
  -[SBIconView location]
  -[SBIconView succinctDescription]
  -[SBIconView descriptionWithMultilinePrefix:]
  -[SBIconView succinctDescriptionBuilder]
  -[SBIconView descriptionBuilderWithMultilinePrefix:]
  -[SBIconView setPaused:]
  -[SBIconView setLocation:]
  -[SBIconView contentSizeCategory]
  -[SBIconView baselineOffsetFromBottom]
  -[SBIconView setFrame:]
  -[SBIconView intrinsicContentSize]
  -[SBIconView initWithFrame:]
  -[SBIconView gestureRecognizerShouldBegin:]
  -[SBIconView gestureRecognizer:shouldReceiveTouch:]
  -[SBIconView setUserInteractionEnabled:]
  -[SBIconView sizeThatFits:]
  -[SBIconView layoutSubviews]
  -[SBIconView isHighlighted]
  -[SBIconView tintColor]
  -[SBIconView setHighlighted:]
  -[SBIconView pointInside:withEvent:]
  -[SBIconView touchesBegan:withEvent:]
  -[SBIconView touchesMoved:withEvent:]
  -[SBIconView touchesEnded:withEvent:]
  -[SBIconView touchesCancelled:withEvent:]
  -[SBIconView pressesBegan:withEvent:]
  -[SBIconView pressesChanged:withEvent:]
  -[SBIconView pressesEnded:withEvent:]
  -[SBIconView pressesCancelled:withEvent:]
  -[SBIconView icon]
  -[SBIconView isDragging]
  -[SBIconView didMoveToWindow]
  -[SBIconView setIcon:]
  -[SBIconView _shouldAnimatePropertyWithKey:]
  -[SBIconView pointMostlyInside:withEvent:]
  -[SBIconView hitTest:withEvent:]
  -[SBIconView _updateLabel]
  -[SBIconView isEditing]
  -[SBIconView setEditing:]
  -[SBIconView setEditing:animated:]
  -[SBIconView contextMenuInteraction:configurationForMenuAtLocation:]
  -[SBIconView contextMenuInteraction:previewForHighlightingMenuWithConfiguration:]
  -[SBIconView contextMenuInteraction:previewForDismissingMenuWithConfiguration:]
  -[SBIconView contextMenuInteraction:willDisplayMenuForConfiguration:animator:]
  -[SBIconView contextMenuInteraction:willEndForConfiguration:animator:]
  -[SBIconView _contextMenuInteraction:styleForMenuWithConfiguration:]
  -[SBIconView contextMenuInteraction]
  -[SBIconView setDragging:]
  -[SBIconView dragInteraction:itemsForBeginningSession:]
  -[SBIconView dragInteraction:previewForLiftingItem:session:]
  -[SBIconView dragInteraction:willAnimateLiftWithAnimator:session:]
  -[SBIconView dragInteraction:sessionWillBegin:]
  -[SBIconView dragInteraction:sessionIsRestrictedToDraggingApplication:]
  -[SBIconView dragInteraction:session:willEndWithOperation:]
  -[SBIconView dragInteraction:session:didEndWithOperation:]
  -[SBIconView dragInteraction:itemsForAddingToSession:withTouchAtPoint:]
  -[SBIconView dragInteraction:sessionForAddingItems:withTouchAtPoint:]
  -[SBIconView dragInteraction:session:willAddItems:forInteraction:]
  -[SBIconView dragInteraction:previewForCancellingItem:withDefault:]
  -[SBIconView dragInteraction:item:willAnimateCancelWithAnimator:]
  -[SBIconView _dragInteraction:liftAnimationDidChangeDirection:]
  -[SBIconView _dragInteraction:shouldDelayCompetingGestureRecognizer:]
  -[SBIconView _dragInteraction:canExcludeCompetingGestureRecognizer:]
  -[SBIconView _dragInteraction:competingGestureRecognizerShouldDelayLift:]
  -[SBIconView dragInteraction]
  -[SBIconView _contentSizeCategoryDidChange:]
  -[SBIconView legibilitySettings]
  -[SBIconView setLegibilitySettings:]
  -[SBIconView cancelDrag]
  -[SBIconView setLabelFont:]
  -[SBIconView labelFont]
  -[SBIconView labelView]
  -[SBIconView settings:changedValueForKey:]
  -[SBIconView _iconImageView]
  -[SBIconView _contextMenuInteraction:overrideSuggestedActionsForConfiguration:]
  -[SBIconView firstLineBaseline]
  -[SBIconView lastLineBaseline]
  -[SBIconView _contextMenuInteractionShouldAllowDragAfterDismiss:]
  -[SBIconView initWithConfigurationOptions:]
  -[SBIconView configurationOptions]
  -[SBIconView consumeSinglePressUpForButtonKind:]
  -[SBIconView _automationID]
  -[SBIconView folder]
  -[SBIconView tapGestureRecognizer]
  -[SBIconView contentContainerView]
  -[SBIconView progressState]
  -[SBIconView applicationShortcutWidgetBundleIdentifier]
  -[SBIconView _labelImage]
  -[SBIconView isContextMenuInteractionActive]
  -[SBIconView _updateProgressAnimated:]
  -[SBIconView listLayout]
  -[SBIconView iconImageVisibleSize]
  -[SBIconView prepareToCrossfadeImageWithView:maskCorners:trueCrossfade:anchorPoint:]
  -[SBIconView setCrossfadeFraction:]
  -[SBIconView setCrossfadeCornerRadius:]
  -[SBIconView setMorphFraction:]
  -[SBIconView setIconImageAlpha:]
  -[SBIconView cleanupAfterCrossfade]
  -[SBIconView iconImageCenter]
  -[SBIconView iconImageInfo]
  -[SBIconView setIconLabelAlpha:]
  -[SBIconView visibleMiniIconListIndex]
  -[SBIconView scrollToTopOfPage:animated:]
  -[SBIconView iconContentScale]
  -[SBIconView setIconContentScale:]
  -[SBIconView prepareToCrossfadeWithFloatyFolderView:allowFolderInteraction:]
  -[SBIconView setIconGridImageAlpha:]
  -[SBIconView isInDock]
  -[SBIconView setFloatyFolderCrossfadeFraction:]
  -[SBIconView cleanupAfterFloatyFolderCrossfade]
  -[SBIconView setAllIconElementsButLabelToHidden:]
  -[SBIconView listLayoutProvider]
  -[SBIconView folderIconImageCache]
  -[SBIconView isTimedOut]
  -[SBIconView prepareToCrossfadeImageWithView:maskCorners:trueCrossfade:]
  -[SBIconView visibleImageRelativeFrameForMiniIconAtIndex:]
  -[SBIconView matchingIconViewByAddingConfigurationOptions:removingConfigurationOptions:]
  -[SBIconView setLabelAccessoryHidden:]
  -[SBIconView setPaused:forReason:]
  -[SBIconView setFolderIconImageCache:]
  -[SBIconView isFolderIcon]
  -[SBIconView setFolderBackgroundStyle:]
  -[SBIconView setListLayoutProvider:]
  -[SBIconView iconImageCache]
  -[SBIconView scrollToGapOrTopIfFullOfPage:animated:]
  -[SBIconView scrollToFirstGapAnimated:]
  -[SBIconView scrollToTopOfFirstPageAnimated:]
  -[SBIconView setIconImageCache:]
  -[SBIconView setIconImageInfo:]
  -[SBIconView initWithConfigurationOptions:listLayoutProvider:]
  -[SBIconView configureForLabelAllowed:]
  -[SBIconView addGesturesAndInteractionsIfNecessary]
  -[SBIconView _applyParallaxSettingsToAccessoryViews]
  -[SBIconView _backgroundContrastDidChange:]
  -[SBIconView _boldTextStatusDidChange:]
  -[SBIconView _invalidateHomeButtonPressConsumingAssertion]
  -[SBIconView _unregisterForAddWidgetRequests]
  -[SBIconView effectiveListLayoutProvider]
  -[SBIconView badgeParallaxSettings]
  -[SBIconView _updateFrameToIconViewSize]
  -[SBIconView iconImageSize]
  -[SBIconView allowsLabelArea]
  -[SBIconView _updateConfigurationForIconImageView:]
  -[SBIconView setLabelHidden:]
  -[SBIconView _updateDragInteractionLiftDelay]
  -[SBIconView tapGestureDidChange:]
  -[SBIconView editingModeGestureRecognizerDidFire:]
  -[SBIconView _updateJitter]
  -[SBIconView _updateIconImageViewAnimated:]
  -[SBIconView _updateLabelAccessoryView]
  -[SBIconView _updateAccessoryViewWithAnimation:]
  -[SBIconView _updateCloseBoxAnimated:]
  -[SBIconView _updateBrightness]
  -[SBIconView _updateLaunchDisabled]
  -[SBIconView setShowsSquareCorners:]
  -[SBIconView setIcon:animated:]
  -[SBIconView _destroyAccessoryView]
  -[SBIconView _createCloseBoxIfNecessary]
  -[SBIconView allowsPassthroughHitTesting]
  -[SBIconView setAllowsLabelArea:]
  -[SBIconView setAllowsPassthroughHitTesting:]
  -[SBIconView setContinuityInfo:animated:]
  -[SBIconView isContextMenuInteractionPending]
  -[SBIconView _updateAllComponentAlphas]
  -[SBIconView setContextMenuInteractionPending:]
  -[SBIconView isContextMenuInteractionActiveOrPending]
  -[SBIconView continuityInfo]
  -[SBIconView currentImageView]
  -[SBIconView setIconAccessoryAlpha:]
  -[SBIconView effectiveIconImageAlpha]
  -[SBIconView _applyIconImageAlpha:]
  -[SBIconView isOverlapping]
  -[SBIconView isGrabbed]
  -[SBIconView effectiveIconAccessoryAlpha]
  -[SBIconView _applyIconAccessoryAlpha:]
  -[SBIconView effectiveIconLabelAlpha]
  -[SBIconView _applyIconLabelAlpha:]
  -[SBIconView effectiveOverallAlpha]
  -[SBIconView _applyOverallAlpha:]
  -[SBIconView _applyIconContentScale:]
  -[SBIconView _toggleContentContainerViewIfNecessary]
  -[SBIconView isIconContentScalingEnabled]
  -[SBIconView _shouldHaveContentContainerView]
  -[SBIconView _enableContentContainerView]
  -[SBIconView _disableContentContainerView]
  -[SBIconView _additionalLiftScale]
  -[SBIconView setIconContentScalingEnabled:]
  -[SBIconView homeButtonPressConsumingAssertion]
  -[SBIconView setHomeButtonPressConsumingAssertion:]
  -[SBIconView _handleAddWidgetRequest:]
  -[SBIconView applicationBundleIdentifierForShortcuts]
  -[SBIconView effectiveApplicationShortcutItems]
  -[SBIconView applicationBundleURLForShortcuts]
  -[SBIconView shouldActivateApplicationShortcutItem:atIndex:]
  -[SBIconView setActiveContextMenuConfiguration:]
  -[SBIconView _contextMenuInteraction:previewForIconWithConfigurationOptions:highlighted:]
  -[SBIconView setActivePreviewIcon:]
  -[SBIconView setContextMenuInteractionActive:]
  -[SBIconView activePreviewIcon]
  -[SBIconView setPresentedWidgetBundleIdentifier:]
  -[SBIconView _acquireHomeButtonPressConsumingAssertionIfNecessary]
  -[SBIconView _registerForAddWidgetRequestsIfNecessary]
  -[SBIconView activeContextMenuConfiguration]
  -[SBIconView contextMenuInteractionPendingCompletion]
  -[SBIconView setContextMenuInteractionPendingCompletion:]
  -[SBIconView addPendingAnimatorCompletionForConfiguration:block:]
  -[SBIconView pendingAnimatorCompletionForConfiguration:]
  -[SBIconView cleanupAnimatorCompletionForConfiguration:]
  -[SBIconView pendingAnimatorCompletionsTable]
  -[SBIconView applicationShortcutItems]
  -[SBIconView allowsLabelAccessoryView]
  -[SBIconView _frameForImageView]
  -[SBIconView _frameForLabel]
  -[SBIconView _frameForLabelAccessoryViewWithLabelFrame:labelImage:labelImageParameters:imageFrame:]
  -[SBIconView _centerForAccessoryView]
  -[SBIconView _centerForCloseBox]
  -[SBIconView _labelVerticalOffset]
  -[SBIconView labelConfiguration]
  -[SBIconView _labelBaselineOffsetFromImage]
  -[SBIconView accessoryOffset]
  -[SBIconView isLabelTextBold]
  -[SBIconView currentLabelAccessoryType]
  -[SBIconView configureLabelImageParametersBuilder:]
  -[SBIconView _labelImageParameters]
  -[SBIconView _legibilitySettingsWithParameters:]
  -[SBIconView allowsBlockedForScreenTimeExpiration]
  -[SBIconView _configureLabelAccessoryViewForType:]
  -[SBIconView expectedIconImageViewClass]
  -[SBIconView _makeIconImageView]
  -[SBIconView _configureIconImageView:]
  -[SBIconView newComponentBackgroundView]
  -[SBIconView _configureViewAsFolderIconImageView:]
  -[SBIconView currentAccessoryType]
  -[SBIconView accessoryViewAnimator]
  -[SBIconView setAccessoryViewAnimator:]
  -[SBIconView _isShowingAccessoryView]
  -[SBIconView _createAccessoryViewIfNecessary]
  -[SBIconView _setShowingAccessoryView:]
  -[SBIconView _destroyAccessoryView:]
  -[SBIconView effectiveBrightness]
  -[SBIconView setDragging:updateImmediately:]
  -[SBIconView iconViewSize]
  -[SBIconView setOverlapping:]
  -[SBIconView _folderIconImageView]
  -[SBIconView iconImageCornerRadius]
  -[SBIconView draggingLaunchActions]
  -[SBIconView draggingLaunchURL]
  -[SBIconView draggingStartLocation]
  -[SBIconView configureMatchingIconView:]
  -[SBIconView matchingIconViewWithConfigurationOptions:]
  -[SBIconView canBeginDrags]
  -[SBIconView dragItems]
  -[SBIconView dragPreviewForItem:session:]
  -[SBIconView _applyAdditonalLiftScale:]
  -[SBIconView hideActivatingOrDismissingPreview]
  -[SBIconView setLastTouchDownDate:]
  -[SBIconView iconInteractedWhenDisabled]
  -[SBIconView isTouchDownInIcon]
  -[SBIconView _delegateTouchEnded:]
  -[SBIconView dismissContextMenuWithCompletion:]
  -[SBIconView _applyEditingStateAnimated:]
  -[SBIconView shouldShowCloseBox]
  -[SBIconView _isShowingCloseBox]
  -[SBIconView startsDragMoreQuickly]
  -[SBIconView dragInteractionLiftDelay]
  -[SBIconView canShowCloseBox]
  -[SBIconView _closeBoxType]
  -[SBIconView _closeBoxTapGestureChanged:]
  -[SBIconView _setShowingCloseBox:]
  -[SBIconView setConfigurationOptions:]
  -[SBIconView setAllowsEditingAnimation:]
  -[SBIconView setAllowsCloseBox:]
  -[SBIconView setGrabbed:]
  -[SBIconView setImageLoadingBehavior:]
  -[SBIconView removeAllIconAnimations]
  -[SBIconView setInDock:]
  -[SBIconView setContinuityInfo:]
  -[SBIconView setStartsDragMoreQuickly:]
  -[SBIconView _removeUnknownSubviews]
  -[SBIconView folderBackgroundStyle]
  -[SBIconView allowsEditingAnimation]
  -[SBIconView allowsCloseBox]
  -[SBIconView folderIcon]
  -[SBIconView visibleMiniIconCount]
  -[SBIconView firstVisibleMiniIconIndex]
  -[SBIconView centerVisibleMiniIconIndex]
  -[SBIconView lastVisibleMiniIconIndex]
  -[SBIconView frameForMiniIconAtIndex:]
  -[SBIconView setBackgroundAndIconGridImageAlpha:]
  -[SBIconView iconImageAlpha]
  -[SBIconView iconAccessoryAlpha]
  -[SBIconView iconLabelAlpha]
  -[SBIconView isLabelHidden]
  -[SBIconView isLabelAccessoryHidden]
  -[SBIconView pauseReasonsDescriptions]
  -[SBIconView closeBoxShouldTrack:]
  -[SBIconView iconImageDidUpdate:]
  -[SBIconView iconAccessoriesDidUpdate:]
  -[SBIconView iconLaunchEnabledDidChange:]
  -[SBIconView continuityBadgeType]
  -[SBIconView showsSquareCorners]
  -[SBIconView imageLoadingBehavior]
  -[SBIconView isShowingContextMenu]
  -[SBIconView iconImageSnapshot]
  -[SBIconView iconImageFrame]
  -[SBIconView setIconImageAndAccessoryAlpha:]
  -[SBIconView earlyTerminateContextMenuDismissAnimation]
  -[SBIconView labelAccessoryTotalWidth]
  -[SBIconView _frameForVisibleImage]
  -[SBIconView maxLabelSize]
  -[SBIconView displayedLabelFont]
  -[SBIconView _legibilitySettingsWithPrimaryColor:]
  -[SBIconView _legibilitySettingsWithStyle:primaryColor:]
  -[SBIconView shouldShowLabelAccessoryView]
  -[SBIconView accessorySize]
  -[SBIconView allowsTapWhileEditing]
  -[SBIconView _recursiveNotifyInteractionTintColorDidChangeForReasons:]
  -[SBIconView _recursivelyUpdateBackdropMaskFrames]
  -[SBIconView refusesRecipientStatus]
  -[SBIconView setRefusesRecipientStatus:]
  -[SBIconView canReceiveGrabbedIcon:]
  -[SBIconView showsDropGlow]
  -[SBIconView setShowsDropGlow:animator:]
  -[SBIconView isCrossfadingImageWithView]
  -[SBIconView accessibilityTintColor]
  -[SBIconView cleanUpAfterDropAnimation]
  -[SBIconView cancelDragLift]
  -[SBIconView setTouchDownInIcon:]
  -[SBIconView setAllowsBlockedForScreenTimeExpiration:]
  -[SBIconView _delegateTapAllowed]
  -[SBIconView representedFolderIconLocation]
  -[SBIconView folderIconBackgroundView]
  -[SBIconView isAnimatingScrolling]
  -[SBIconView prepareForIconDrop]
  -[SBIconView startForbiddingEditingModeWithReason:]
  -[SBIconView endForbiddingEditingModeWithReason:]
  -[SBIconView setApplicationShortcutItems:]
  -[SBIconView lastTouchDownDate]
  -[SBIconView setFolderIcon:]
  -[SBIconView setFolderIconBackgroundView:]
  -[SBIconView setAccessibilityTintColor:]
  -[SBIconView displayedLabelAccessoryType]
  -[SBIconView editingModeGestureRecognizer]
  -[SBIconView presentedWidgetBundleIdentifier]
  -[SBIconView setPendingAnimatorCompletionsTable:]


SBIconDragInteraction : UIDragInteraction /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
  // class methods
  +[SBIconDragInteraction isEnabledByDefault]


SBIconTapGestureRecognizer : UITapGestureRecognizer /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices

SBCloseBoxView : SBHomeScreenButton
 @property  UITapGestureRecognizer *actionTapGestureRecognizer
 @property  <SBCloseBoxViewDelegate> *delegate
 @property  <SBIconListLayout> *listLayout

  // class methods
  +[SBCloseBoxView backgroundInsets]

  // instance methods
  -[SBCloseBoxView delegate]
  -[SBCloseBoxView setDelegate:]
  -[SBCloseBoxView .cxx_destruct]
  -[SBCloseBoxView sizeThatFits:]
  -[SBCloseBoxView pointInside:withEvent:]
  -[SBCloseBoxView shouldTrack]
  -[SBCloseBoxView setListLayout:]
  -[SBCloseBoxView listLayout]
  -[SBCloseBoxView actionTapGestureRecognizer]
  -[SBCloseBoxView setActionTapGestureRecognizer:]


SBXCloseBoxView : SBCloseBoxView
  // class methods
  +[SBXCloseBoxView defaultContentImage]


SBMinusCloseBoxView : SBCloseBoxView
  // class methods
  +[SBMinusCloseBoxView defaultContentImage]


SBIconForceTouchAppInfoProvider : NSObject /usr/lib/libSystem.B.dylib <SBIconAccessoryInfoProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *location
 @property  BOOL highlighted
 @property  long long continuityBadgeType

  // instance methods
  -[SBIconForceTouchAppInfoProvider location]
  -[SBIconForceTouchAppInfoProvider isHighlighted]
  -[SBIconForceTouchAppInfoProvider continuityBadgeType]


SBIconViewDragInfo : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, BSDescriptionProviding>
 @property  NSString *bundleIdentifier
 @property  NSURL *launchURL
 @property  long long startLocation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconViewDragInfo supportsSecureCoding]

  // instance methods
  -[SBIconViewDragInfo encodeWithCoder:]
  -[SBIconViewDragInfo initWithCoder:]
  -[SBIconViewDragInfo .cxx_destruct]
  -[SBIconViewDragInfo bundleIdentifier]
  -[SBIconViewDragInfo setBundleIdentifier:]
  -[SBIconViewDragInfo succinctDescription]
  -[SBIconViewDragInfo descriptionWithMultilinePrefix:]
  -[SBIconViewDragInfo succinctDescriptionBuilder]
  -[SBIconViewDragInfo descriptionBuilderWithMultilinePrefix:]
  -[SBIconViewDragInfo startLocation]
  -[SBIconViewDragInfo setStartLocation:]
  -[SBIconViewDragInfo launchURL]
  -[SBIconViewDragInfo setLaunchURL:]


SBHIconViewNonPoolingImageCache : SBHIconImageCache
  // class methods
  +[SBHIconViewNonPoolingImageCache supportsMemoryPooling]


SBMutableIconLabelImageParameters : SBIconLabelImageParameters
 @property  NSString *text
 @property  {CGSize=dd} maxSize
 @property  UIFont *font
 @property  double scale
 @property  BOOL containsEmoji
 @property  BOOL canTruncate
 @property  BOOL canTighten
 @property  long long legibilityStyle
 @property  UIColor *textColor
 @property  BOOL accessibilityReduceTransparencyEnabled
 @property  NSString *contentSizeCategory
 @property  UIColor *focusHighlightColor
 @property  {UIEdgeInsets=dddd} textInsets
 @property  {UIEdgeInsets=dddd} fontLanguageInsets
 @property  NSString *iconLocation

  // instance methods
  -[SBMutableIconLabelImageParameters copy]
  -[SBMutableIconLabelImageParameters setScale:]
  -[SBMutableIconLabelImageParameters setText:]
  -[SBMutableIconLabelImageParameters setMaxSize:]
  -[SBMutableIconLabelImageParameters setContentSizeCategory:]
  -[SBMutableIconLabelImageParameters setTextColor:]
  -[SBMutableIconLabelImageParameters setFont:]
  -[SBMutableIconLabelImageParameters setLegibilityStyle:]
  -[SBMutableIconLabelImageParameters setTextInsets:]
  -[SBMutableIconLabelImageParameters setIconLocation:]
  -[SBMutableIconLabelImageParameters setCanTruncate:]
  -[SBMutableIconLabelImageParameters setCanTighten:]
  -[SBMutableIconLabelImageParameters setContainsEmoji:]
  -[SBMutableIconLabelImageParameters setAccessibilityReduceTransparencyEnabled:]
  -[SBMutableIconLabelImageParameters setFocusHighlightColor:]
  -[SBMutableIconLabelImageParameters setFontLanguageInsets:]


SBHIconApplicationShortcutListComposer : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBHIconApplicationShortcutListComposer filteredApplicationShortcutItemsWithStaticApplicationShortcutItems:dynamicApplicationShortcutItems:]
  +[SBHIconApplicationShortcutListComposer supportsMultiwindowShortcut]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForApplicationWithBundleIdentifier:iconDisplayName:staticItems:dynamicItems:applicationItemID:numberOfDisplayItemsInSwitcher:supportsMultipleWindows:isSystemApplication:isInternalApplication:isApplicationInBeta:removeStyle:]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForBookmarkWithDisplayName:removeStyle:]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForDownloadingApplicationWithBundleIdentifier:iconDisplayName:prioritizationIsAvailable:downloadingInformationAgent:canShare:]
  +[SBHIconApplicationShortcutListComposer composedShortcutsForFolderIcon:iconImageCache:iconManagerAllowsEditing:badgeViewGenerator:]


SBDownloadingIcon : SBLeafIcon
 @property  <SBDownloadingIconDataSource> *downloadingIconDataSource
 @property  BOOL uninstalledByUser
 @property  NSString *realDisplayName

  // class methods
  +[SBDownloadingIcon leafIdentifierForApplicationPlaceholderBundleID:]
  +[SBDownloadingIcon applicationPlaceholderBundleIDForDownloadingIconLeafIdentifier:]
  +[SBDownloadingIcon isDownloadingIconLeafIdentifier:]

  // instance methods
  -[SBDownloadingIcon copyWithZone:]
  -[SBDownloadingIcon .cxx_destruct]
  -[SBDownloadingIcon cancelDownload]
  -[SBDownloadingIcon setDownloadingIconDataSource:]
  -[SBDownloadingIcon setUninstalledByUser:]
  -[SBDownloadingIcon downloadingIconDataSource]
  -[SBDownloadingIcon initWithDownloadingIconDataSource:]
  -[SBDownloadingIcon realDisplayName]
  -[SBDownloadingIcon reloadForStatusChange]
  -[SBDownloadingIcon uninstallAlertBody]
  -[SBDownloadingIcon descriptionForLocation:]
  -[SBDownloadingIcon isDownloadingIcon]
  -[SBDownloadingIcon uninstalledByUser]


SBHFolderIconVisualConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  {CGSize=dd} gridCellSize
 @property  {CGSize=dd} gridCellSpacing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHFolderIconVisualConfiguration init]
  -[SBHFolderIconVisualConfiguration copyWithZone:]
  -[SBHFolderIconVisualConfiguration succinctDescription]
  -[SBHFolderIconVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHFolderIconVisualConfiguration succinctDescriptionBuilder]
  -[SBHFolderIconVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHFolderIconVisualConfiguration gridCellSize]
  -[SBHFolderIconVisualConfiguration gridCellSpacing]
  -[SBHFolderIconVisualConfiguration setGridCellSize:]
  -[SBHFolderIconVisualConfiguration setGridCellSpacing:]


SBIconLabelImage : UIImage /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UIImage *legibilityImage
 @property  SBIconLabelImageParameters *parameters

  // class methods
  +[SBIconLabelImage applyKerning:whitespaceKerning:toAttributedString:]
  +[SBIconLabelImage attributedText:fitsInRect:textRect:]
  +[SBIconLabelImage legibilityImageForIconLabelImage:parameters:pool:]
  +[SBIconLabelImage imageWithParameters:pool:legibilityPool:]
  +[SBIconLabelImage legibilityStrengthForLegibilityStyle:]
  +[SBIconLabelImage imageWithParameters:]
  +[SBIconLabelImage _maxLegibilityImageSizeForLabelSize:]
  +[SBIconLabelImage needsLegibilityImageForParameters:]

  // instance methods
  -[SBIconLabelImage .cxx_destruct]
  -[SBIconLabelImage parameters]
  -[SBIconLabelImage hasBaseline]
  -[SBIconLabelImage baselineOffsetFromBottom]
  -[SBIconLabelImage alignmentRectInsets]
  -[SBIconLabelImage _initWithCGImage:scale:orientation:parameters:alignmentRectInsets:baselineOffsetFromBottom:]
  -[SBIconLabelImage setLegibilityImage:]
  -[SBIconLabelImage legibilityImage]


SBIconLayoutOverrideStrategy : NSObject /usr/lib/libSystem.B.dylib
 @property  {UIEdgeInsets=dddd} layoutInsets
 @property  BOOL preservesCurrentListOrigin

  // instance methods
  -[SBIconLayoutOverrideStrategy layoutInsets]
  -[SBIconLayoutOverrideStrategy initWithLayoutInsets:perservingCurrentListOrigin:]
  -[SBIconLayoutOverrideStrategy preservesCurrentListOrigin]


SBIconLabelViewFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBIconLabelViewFactory canUseIconLabelView:toDisplayLabelWithSettings:imageParameters:forIconView:]
  +[SBIconLabelViewFactory iconLabelViewWithSettings:imageParameters:forIconView:]
  +[SBIconLabelViewFactory canUseIconSimpleLabelViewToDisplayLabelWithSettings:imageParameters:forIconView:]


SBIconSimpleLabelView : UIImageView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconLabelView>
 @property  SBIconView *iconView
 @property  UIImage *image
 @property  SBIconLabelImageParameters *imageParameters

  // instance methods
  -[SBIconSimpleLabelView .cxx_destruct]
  -[SBIconSimpleLabelView initWithSettings:]
  -[SBIconSimpleLabelView imageParameters]
  -[SBIconSimpleLabelView iconView]
  -[SBIconSimpleLabelView setIconView:]
  -[SBIconSimpleLabelView updateIconLabelWithSettings:imageParameters:]


SBIconLegibilityLabelView : _UILegibilityView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconLabelView>
 @property  SBIconLabelImageParameters *imageParameters
 @property  SBIconView *iconView
 @property  UIImage *image

  // instance methods
  -[SBIconLegibilityLabelView .cxx_destruct]
  -[SBIconLegibilityLabelView initWithSettings:]
  -[SBIconLegibilityLabelView imageParameters]
  -[SBIconLegibilityLabelView setImageParameters:]
  -[SBIconLegibilityLabelView iconView]
  -[SBIconLegibilityLabelView setIconView:]
  -[SBIconLegibilityLabelView updateIconLabelWithSettings:imageParameters:]


SBHIconRootTableViewController : UITableViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBHIconRootViewProviding>
 @property  NSSet *presentedIconLocations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBFolder *folder
 @property  UIView *contentView
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIViewController *deepestFolderController
 @property  BOOL editing
 @property  BOOL scrolling
 @property  BOOL scrollTracking
 @property  long long currentPageIndex
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache

  // instance methods
  -[SBHIconRootTableViewController .cxx_destruct]
  -[SBHIconRootTableViewController isScrolling]
  -[SBHIconRootTableViewController contentView]
  -[SBHIconRootTableViewController viewDidLoad]
  -[SBHIconRootTableViewController isEditing]
  -[SBHIconRootTableViewController tableView:numberOfRowsInSection:]
  -[SBHIconRootTableViewController tableView:cellForRowAtIndexPath:]
  -[SBHIconRootTableViewController numberOfSectionsInTableView:]
  -[SBHIconRootTableViewController setEditing:]
  -[SBHIconRootTableViewController setEditing:animated:]
  -[SBHIconRootTableViewController tableView:didSelectRowAtIndexPath:]
  -[SBHIconRootTableViewController legibilitySettings]
  -[SBHIconRootTableViewController setLegibilitySettings:]
  -[SBHIconRootTableViewController currentPageIndex]
  -[SBHIconRootTableViewController setCurrentPageIndex:]
  -[SBHIconRootTableViewController folder]
  -[SBHIconRootTableViewController setFolder:]
  -[SBHIconRootTableViewController folderIconImageCache]
  -[SBHIconRootTableViewController isDisplayingIcon:inLocation:]
  -[SBHIconRootTableViewController isDisplayingIconView:]
  -[SBHIconRootTableViewController iconViewForIcon:location:]
  -[SBHIconRootTableViewController presentedIconLocations]
  -[SBHIconRootTableViewController firstIconViewForIcon:inLocations:]
  -[SBHIconRootTableViewController setFolderIconImageCache:]
  -[SBHIconRootTableViewController isPresentingIconLocation:]
  -[SBHIconRootTableViewController firstIconViewForIcon:]
  -[SBHIconRootTableViewController firstIconViewForIcon:excludingLocations:]
  -[SBHIconRootTableViewController isDisplayingIcon:inLocations:]
  -[SBHIconRootTableViewController isDisplayingIcon:]
  -[SBHIconRootTableViewController isDisplayingIconView:inLocation:]
  -[SBHIconRootTableViewController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHIconRootTableViewController enumerateDisplayedIconViewsUsingBlock:]
  -[SBHIconRootTableViewController iconImageCache]
  -[SBHIconRootTableViewController setCurrentPageIndex:animated:completion:]
  -[SBHIconRootTableViewController cancelScrolling]
  -[SBHIconRootTableViewController setIconImageCache:]
  -[SBHIconRootTableViewController noteUserIsInteractingWithIcons]
  -[SBHIconRootTableViewController isScrollTracking]
  -[SBHIconRootTableViewController deepestFolderController]
  -[SBHIconRootTableViewController revealIcon:animated:completionHandler:]
  -[SBHIconRootTableViewController setIdleText:]


SBHClockApplicationIconImageView : SBLiveIconImageView
 @property  NSString *currentNumberingSystem
 @property  SBHClockIconVisualConfiguration *visualConfiguration

  // class methods
  +[SBHClockApplicationIconImageView initialize]
  +[SBHClockApplicationIconImageView defaultConfiguration]
  +[SBHClockApplicationIconImageView _timerFired:]
  +[SBHClockApplicationIconImageView overrideDate]
  +[SBHClockApplicationIconImageView effectiveDate]
  +[SBHClockApplicationIconImageView systemNumberingSystem]
  +[SBHClockApplicationIconImageView generateProcessedMappedIconImageWithName:imageInfo:includingMask:]
  +[SBHClockApplicationIconImageView setOverrideDate:]
  +[SBHClockApplicationIconImageView _handleTimeChange:]

  // instance methods
  -[SBHClockApplicationIconImageView .cxx_destruct]
  -[SBHClockApplicationIconImageView prepareForReuse]
  -[SBHClockApplicationIconImageView setPaused:]
  -[SBHClockApplicationIconImageView initWithFrame:]
  -[SBHClockApplicationIconImageView layoutSubviews]
  -[SBHClockApplicationIconImageView contentsImage]
  -[SBHClockApplicationIconImageView backgroundImageName]
  -[SBHClockApplicationIconImageView _setAnimating:]
  -[SBHClockApplicationIconImageView localeDidChange:]
  -[SBHClockApplicationIconImageView applyConfiguration:]
  -[SBHClockApplicationIconImageView updateUnanimated]
  -[SBHClockApplicationIconImageView updateAnimatingState]
  -[SBHClockApplicationIconImageView isAnimationAllowed]
  -[SBHClockApplicationIconImageView setJittering:]
  -[SBHClockApplicationIconImageView _timerFiredWithComponents:flags:]
  -[SBHClockApplicationIconImageView _updateUnanimatedWithComponents:]
  -[SBHClockApplicationIconImageView setVisualConfiguration:]
  -[SBHClockApplicationIconImageView visualConfiguration]
  -[SBHClockApplicationIconImageView currentNumberingSystem]
  -[SBHClockApplicationIconImageView setCurrentNumberingSystem:]
  -[SBHClockApplicationIconImageView squareContentsImage]


SBPinchInteractionProgress : UIInteractionProgress /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <UIGestureRecognizerDelegate>
 @property  UIPinchGestureRecognizer *pinchGesture
 @property  double minPinchScale
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBPinchInteractionProgress .cxx_destruct]
  -[SBPinchInteractionProgress _handlePinchGesture:]
  -[SBPinchInteractionProgress pinchGesture]
  -[SBPinchInteractionProgress _updatePinchScale:]
  -[SBPinchInteractionProgress minPinchScale]
  -[SBPinchInteractionProgress initWithPinchGesture:minPinchScale:]


SBHIconViewContextMenuWrapperViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <WGWidgetViewControllerDelegate, SBHRecentsDocumentExtensionProviderDelegate>
 @property  UIViewController *contentViewController
 @property  NSString *groupNameBase
 @property  double backgroundScale
 @property  UIContextMenuInteraction *contextMenuInteraction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconViewContextMenuWrapperViewController .cxx_destruct]
  -[SBHIconViewContextMenuWrapperViewController setContentViewController:]
  -[SBHIconViewContextMenuWrapperViewController viewWillAppear:]
  -[SBHIconViewContextMenuWrapperViewController viewWillDisappear:]
  -[SBHIconViewContextMenuWrapperViewController viewDidLoad]
  -[SBHIconViewContextMenuWrapperViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[SBHIconViewContextMenuWrapperViewController contentViewController]
  -[SBHIconViewContextMenuWrapperViewController contextMenuInteraction]
  -[SBHIconViewContextMenuWrapperViewController setContextMenuInteraction:]
  -[SBHIconViewContextMenuWrapperViewController setGroupNameBase:]
  -[SBHIconViewContextMenuWrapperViewController groupNameBase]
  -[SBHIconViewContextMenuWrapperViewController backgroundScale]
  -[SBHIconViewContextMenuWrapperViewController setBackgroundScale:]
  -[SBHIconViewContextMenuWrapperViewController _applyPreferredContentSizeChange:]
  -[SBHIconViewContextMenuWrapperViewController remoteViewControllerDidConnectForWidgetViewController:]
  -[SBHIconViewContextMenuWrapperViewController remoteViewControllerViewDidAppearForWidgetViewController:]
  -[SBHIconViewContextMenuWrapperViewController recentsDocumentExtensionViewControllerRequestsDismiss:]


SBRootFolder : SBFolder
 @property  SBIconListModel *dock
 @property  <SBRootFolderDelegate> *delegate
 @property  SBHIconModel *model
 @property  BOOL supportsDock

  // class methods
  +[SBRootFolder isRootFolderClass]

  // instance methods
  -[SBRootFolder delegate]
  -[SBRootFolder setDelegate:]
  -[SBRootFolder .cxx_destruct]
  -[SBRootFolder icons]
  -[SBRootFolder model]
  -[SBRootFolder setModel:]
  -[SBRootFolder dock]
  -[SBRootFolder nodeIdentifier]
  -[SBRootFolder isRootFolder]
  -[SBRootFolder supportsDock]
  -[SBRootFolder isIconAtIndexPathInDock:includingDockFolders:]
  -[SBRootFolder nodeDescriptionWithPrefix:]
  -[SBRootFolder indexPathForFirstFreeSlotStartingAtList:avoidingFirstList:]
  -[SBRootFolder canAddIconCount:startingAtList:]
  -[SBRootFolder folderContainingIndexPath:relativeIndexPath:]
  -[SBRootFolder canRemoveIcons]
  -[SBRootFolder canEditDisplayName]
  -[SBRootFolder _listsForCompaction]
  -[SBRootFolder _setDock:]
  -[SBRootFolder isIconAtIndexPathInDock:]
  -[SBRootFolder canBounceIcon:]


SBRootFolderController : SBFolderController <SBFramewiseInteractiveTransitionAnimatorDelegate, SBViewControllerTransitionContextDelegate, SBRootFolderViewDelegate, SBSearchGestureObserver, SBRootFolderPageStateTransitioning, SBHIconRootViewProviding>
 @property  _SBRootFolderDockAnimationViewControllerWindow *dockAnimationWindow
 @property  BOOL managesStatusBarWidth
 @property  SBRootFolderView *rootFolderView
 @property  SBSearchGesture *searchGesture
 @property  long long pageState
 @property  _SBRootFolderPageTransitionHandle *currentTransitionHandle
 @property  <SBRootFolderPageTransition> *searchGestureTransition
 @property  <SBRootFolderPageTransition> *implicitScrollTransition
 @property  UIViewController *portraitHeaderViewController
 @property  long long todayViewPageIndex
 @property  long long sidebarPageIndex
 @property  <SBRootFolderControllerDelegate> *folderDelegate
 @property  SBRootFolder *folder
 @property  unsigned long dockEdge
 @property  double dockHeight
 @property  BOOL dockExternal
 @property  BOOL dockPinnedForRotation
 @property  NSSet *nonDockPresentedIconLocations
 @property  BOOL showsDoneButtonWhileEditing
 @property  UIViewController *pullDownSearchViewController
 @property  UIViewController<SBHLegibility> *todayViewController
 @property  UIViewController<SBHSidebarProvider> *sidebarViewController
 @property  double spotlightFirstIconRowOffset
 @property  <SBRootFolderControllerAccessoryViewControllerDelegate> *accessoryViewControllerDelegate
 @property  BOOL spotlightTransitioningFromBreadcrumb
 @property  NSArray *folderControllers
 @property  BOOL allowsAutoscrollToTodayView
 @property  BOOL todayViewVisible
 @property  BOOL todayViewTransitioning
 @property  BOOL todayViewPageHidden
 @property  BOOL pullDownSearchVisible
 @property  BOOL pullDownSearchTransitioning
 @property  BOOL pullDownSearchVisibleOrTransitioning
 @property  BOOL todayPage
 @property  BOOL todayViewVisibleOrTransitionDestination
 @property  BOOL todayViewSearchVisible
 @property  BOOL todayViewSearchTransitioning
 @property  BOOL todayViewSearchVisibleOrTransitioning
 @property  BOOL anySearchVisible
 @property  BOOL anySearchVisibleOrTransitioning
 @property  UIView *searchableTodayWrapperView
 @property  UIView *searchBackdropView
 @property  double sidebarVisibilityProgress
 @property  double effectiveSidebarVisibilityProgress
 @property  BOOL sidebarVisible
 @property  BOOL sidebarEffectivelyVisible
 @property  BOOL sidebarPinned
 @property  BOOL sidebarVisibilityGestureActive
 @property  SBFParallaxSettings *parallaxSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL transitioningPageState
 @property  long long destinationPageState
 @property  NSSet *presentedIconLocations
 @property  UIView *contentView
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIViewController *deepestFolderController
 @property  BOOL editing
 @property  BOOL scrolling
 @property  BOOL scrollTracking
 @property  long long currentPageIndex
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache

  // class methods
  +[SBRootFolderController _contentViewClass]
  +[SBRootFolderController _shouldForwardViewWillTransitionToSize]
  +[SBRootFolderController configurationClass]
  +[SBRootFolderController iconLocation]
  +[SBRootFolderController dockIconLocation]
  +[SBRootFolderController pageStateTransitionSnapshotForScrollOffset:pageWidth:pages:pageCount:userInterfaceLayoutDirection:currentPageState:]

  // instance methods
  -[SBRootFolderController .cxx_destruct]
  -[SBRootFolderController initWithConfiguration:]
  -[SBRootFolderController descriptionBuilderWithMultilinePrefix:]
  -[SBRootFolderController viewWillAppear:]
  -[SBRootFolderController viewWillDisappear:]
  -[SBRootFolderController viewDidLoad]
  -[SBRootFolderController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBRootFolderController animationControllerForPresentedController:presentingController:sourceController:]
  -[SBRootFolderController animationControllerForDismissedController:]
  -[SBRootFolderController interactionControllerForPresentation:]
  -[SBRootFolderController interactionControllerForDismissal:]
  -[SBRootFolderController viewDidAppear:]
  -[SBRootFolderController viewDidDisappear:]
  -[SBRootFolderController setEditing:animated:]
  -[SBRootFolderController transitionDidFinish:]
  -[SBRootFolderController transitionWillBegin:]
  -[SBRootFolderController setLegibilitySettings:]
  -[SBRootFolderController _depth]
  -[SBRootFolderController isDockVisible]
  -[SBRootFolderController orientationDidChange:]
  -[SBRootFolderController setCurrentPageIndex:animated:]
  -[SBRootFolderController sidebarViewController]
  -[SBRootFolderController dockIconListView]
  -[SBRootFolderController dockListView]
  -[SBRootFolderController searchGesture]
  -[SBRootFolderController setSearchGesture:]
  -[SBRootFolderController searchGesture:changedPercentComplete:]
  -[SBRootFolderController searchGesture:startedShowing:]
  -[SBRootFolderController searchGesture:completedShowing:]
  -[SBRootFolderController searchGesture:resetAnimated:]
  -[SBRootFolderController isDisplayingIcon:inLocation:]
  -[SBRootFolderController iconViewForIcon:location:]
  -[SBRootFolderController presentedIconLocations]
  -[SBRootFolderController isPresentingIconLocation:]
  -[SBRootFolderController setFolderDelegate:]
  -[SBRootFolderController extraViewsContainer]
  -[SBRootFolderController extraViews]
  -[SBRootFolderController shouldAnimateLastTwoViewsAsOne]
  -[SBRootFolderController shouldAnimateFirstTwoViewsAsOne]
  -[SBRootFolderController isDisplayingIcon:]
  -[SBRootFolderController isDisplayingIconView:inLocation:]
  -[SBRootFolderController enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBRootFolderController enumerateDisplayedIconViewsUsingBlock:]
  -[SBRootFolderController beginModifyingDockOffscreenFractionForReason:]
  -[SBRootFolderController transitionWillReverse:]
  -[SBRootFolderController transitionWillFinish:]
  -[SBRootFolderController _makeContentViewWithConfiguration:]
  -[SBRootFolderController prepareToClose]
  -[SBRootFolderController prepareToOpen]
  -[SBRootFolderController viewWillTransitionToSize:forOperation:withTransitionCoordinator:]
  -[SBRootFolderController setCurrentPageIndex:animated:completion:]
  -[SBRootFolderController prepareToTearDown]
  -[SBRootFolderController closesAfterDragExits]
  -[SBRootFolderController canAcceptFolderIconDrags]
  -[SBRootFolderController _listIndexIsVisible:]
  -[SBRootFolderController shouldOpenFolderIcon:]
  -[SBRootFolderController disablesScrollingWhileIconDragIsDropping]
  -[SBRootFolderController folderView:currentPageIndexWillChange:]
  -[SBRootFolderController folderView:currentPageIndexDidChange:]
  -[SBRootFolderController folderViewWillBeginDragging:]
  -[SBRootFolderController folderViewWillBeginScrolling:]
  -[SBRootFolderController folderViewWillEndDragging:]
  -[SBRootFolderController folderViewWillUpdatePageDuringScrolling:]
  -[SBRootFolderController folderViewDidScroll:]
  -[SBRootFolderController folderViewDidEndScrolling:]
  -[SBRootFolderController folderView:willAnimateScrollToPageIndex:]
  -[SBRootFolderController suspendsWallpaperAnimationWhileOpen]
  -[SBRootFolderController statusBarInsetsForOrientation:]
  -[SBRootFolderController _reduceTransparencyChanged]
  -[SBRootFolderController setIdleText:]
  -[SBRootFolderController showsDoneButtonWhileEditing]
  -[SBRootFolderController pullDownSearchViewController]
  -[SBRootFolderController todayViewController]
  -[SBRootFolderController portraitHeaderViewController]
  -[SBRootFolderController pageState]
  -[SBRootFolderController todayViewPageIndex]
  -[SBRootFolderController setPageState:]
  -[SBRootFolderController rootFolderView]
  -[SBRootFolderController _todayViewVisibilityProgress]
  -[SBRootFolderController updateViewsAfterOrientationChange]
  -[SBRootFolderController _viewControllersToNotifyForViewObscuration]
  -[SBRootFolderController isTodayViewSearchVisible]
  -[SBRootFolderController dismissSpotlightAnimated:completionHandler:]
  -[SBRootFolderController isOnTodayPage]
  -[SBRootFolderController isTodayViewVisibleOrTransitionDestination]
  -[SBRootFolderController isAnySearchVisibleOrTransitioning]
  -[SBRootFolderController doneButtonTriggered:]
  -[SBRootFolderController isDockExternal]
  -[SBRootFolderController dockEdge]
  -[SBRootFolderController setDockEdge:]
  -[SBRootFolderController dockHeight]
  -[SBRootFolderController isDockPinnedForRotation]
  -[SBRootFolderController setManagesStatusBarWidth:]
  -[SBRootFolderController viewControllerForPageState:]
  -[SBRootFolderController allowsAutoscrollToTodayView]
  -[SBRootFolderController setAllowsAutoscrollToTodayView:]
  -[SBRootFolderController searchableTodayWrapperView]
  -[SBRootFolderController searchBackdropView]
  -[SBRootFolderController parallaxSettings]
  -[SBRootFolderController sidebarPageIndex]
  -[SBRootFolderController sidebarVisibilityProgress]
  -[SBRootFolderController effectiveSidebarVisibilityProgress]
  -[SBRootFolderController setSidebarVisibilityProgress:]
  -[SBRootFolderController isSidebarEffectivelyVisible]
  -[SBRootFolderController isSidebarPinned]
  -[SBRootFolderController setSidebarPinned:]
  -[SBRootFolderController isSidebarVisibilityGestureActive]
  -[SBRootFolderController _isDockSwitchedForOrientation:]
  -[SBRootFolderController _dockLayoutReversedForInterfaceOrientation:]
  -[SBRootFolderController dockAnimationWindow]
  -[SBRootFolderController _dockEdgeForInterfaceOrientation:]
  -[SBRootFolderController _configureDockViewForOrientationWithoutAnimation:]
  -[SBRootFolderController _configureAppStatusBarInsetsForOrientation:]
  -[SBRootFolderController configureAppStatusBarInsets]
  -[SBRootFolderController managesStatusBarWidth]
  -[SBRootFolderController isAnySearchVisible]
  -[SBRootFolderController _configureTodayViewPageForOrientation:]
  -[SBRootFolderController _todayViewPageIsVisibleForOrientation:]
  -[SBRootFolderController setTodayViewPageHidden:]
  -[SBRootFolderController _shouldUseDockAnimationWindowForRotationToInterfaceOrientation:duration:]
  -[SBRootFolderController setDockAnimationWindow:]
  -[SBRootFolderController _shouldSlideDockOutDuringRotationFromOrientation:toOrientation:]
  -[SBRootFolderController _configureDockViewForOrientationDuringAnimation:]
  -[SBRootFolderController _configureViewForOrientationWithoutAnimation:]
  -[SBRootFolderController updateStateTransitionsDuringScrollingScrollView:pageBounceComparator:]
  -[SBRootFolderController implicitScrollTransition]
  -[SBRootFolderController isTransitiongBetweenPageStateVerticalGroups]
  -[SBRootFolderController setImplicitScrollTransition:]
  -[SBRootFolderController pageStateTransitionSnapshotForScrollOffset:]
  -[SBRootFolderController destinationPageState]
  -[SBRootFolderController isSidebarVisible]
  -[SBRootFolderController isTransitioningPageState]
  -[SBRootFolderController currentTransitionHandle]
  -[SBRootFolderController isPullDownSearchVisibleOrTransitioning]
  -[SBRootFolderController isTodayViewVisible]
  -[SBRootFolderController performPageStateTransitionToState:reason:animated:completionHandler:]
  -[SBRootFolderController canTransitionPageStateToState:]
  -[SBRootFolderController performDefaultPageStateTransitionToState:reason:animated:completionHandler:]
  -[SBRootFolderController beginPageStateTransitionToState:reason:animated:interactive:]
  -[SBRootFolderController isTodayViewPageHidden]
  -[SBRootFolderController pageTransitionProgress]
  -[SBRootFolderController isAnySearchTransitioning]
  -[SBRootFolderController isPullDownSearchVisible]
  -[SBRootFolderController isPullDownSearchTransitioning]
  -[SBRootFolderController isTodayViewSearchTransitioning]
  -[SBRootFolderController visibilityProgressTowardPageStateMatchingTest:]
  -[SBRootFolderController setCurrentTransitionHandle:]
  -[SBRootFolderController willBeginTransitionToState:animated:interactive:]
  -[SBRootFolderController enumeratePageStateObserversUsingBlock:]
  -[SBRootFolderController _anySearchVisibilityProgress]
  -[SBRootFolderController accessoryViewControllerDelegate]
  -[SBRootFolderController defaultTransitionForTransitioningFromPageState:toPageState:animated:interactive:]
  -[SBRootFolderController _checkForImproperScrollOffsetForPageState]
  -[SBRootFolderController didContinueTransitionToState:progress:]
  -[SBRootFolderController willEndTransitionToState:successfully:]
  -[SBRootFolderController didEndTransitionFromState:toState:successfully:]
  -[SBRootFolderController setSearchGestureTransition:]
  -[SBRootFolderController searchGestureTransition]
  -[SBRootFolderController viewControllerForTransitioningFromPageState:toPageState:]
  -[SBRootFolderController isTodayViewTransitioning]
  -[SBRootFolderController transitionContext:updateTransitionProgress:]
  -[SBRootFolderController rootFolderView:wantsToAdjustTodayContentForEdgeBounceForScrollOffset:]
  -[SBRootFolderController distanceToTopOfSpotlightIconsForRootFolderView:]
  -[SBRootFolderController maxExternalDockHeightForRootFolderView:]
  -[SBRootFolderController externalDockHeightForRootFolderView:]
  -[SBRootFolderController preferredExternalDockVerticalMarginForRootFolderView:]
  -[SBRootFolderController backgroundViewForDockForRootFolderView:]
  -[SBRootFolderController backgroundViewForEditingDoneButtonForRootFolderView:]
  -[SBRootFolderController rootFolderView:didChangeSidebarVisibilityProgress:]
  -[SBRootFolderController rootFolderView:didChangeEffectiveSidebarVisibilityProgress:]
  -[SBRootFolderController rootFolderView:didOverscrollOnFirstPageByAmount:]
  -[SBRootFolderController rootFolderView:didEndOverscrollOnFirstPageWithVelocity:]
  -[SBRootFolderController rootFolderViewIfLoaded]
  -[SBRootFolderController folderControllers]
  -[SBRootFolderController setPullDownSearchViewController:]
  -[SBRootFolderController setTodayViewController:]
  -[SBRootFolderController setSidebarViewController:]
  -[SBRootFolderController spotlightFirstIconRowOffset]
  -[SBRootFolderController nonDockPresentedIconLocations]
  -[SBRootFolderController addPageStateObserver:]
  -[SBRootFolderController removePageStateObserver:]
  -[SBRootFolderController setParallaxDisabled:forReason:]
  -[SBRootFolderController beginOverridingSidebarViewControllerAppearanceStateToRemainDisappearedForReason:]
  -[SBRootFolderController _removeSidebarViewControllerAppearStateOverrideAssertion:]
  -[SBRootFolderController _configureAppStatusBarInsetsAnimated:]
  -[SBRootFolderController presentSpotlightAnimated:completionHandler:]
  -[SBRootFolderController isTodayViewSearchVisibleOrTransitioning]
  -[SBRootFolderController isTodayViewOrTodayViewSearchVisible]
  -[SBRootFolderController isTransitioningBetweenIconAndTodayView]
  -[SBRootFolderController isTransitioningBetweenIconPageAndTodayPage]
  -[SBRootFolderController isTransitioningBetweenHorizontalPageStates]
  -[SBRootFolderController pageTransitionHandle:updateCurrentPageStateTransitionToProgress:]
  -[SBRootFolderController pageTransitionHandle:endPageStateTransitionSuccessfully:]
  -[SBRootFolderController _setupDebugTapGestureRecognizerForDockIconListView:]
  -[SBRootFolderController setAccessoryViewControllerDelegate:]
  -[SBRootFolderController isSpotlightTransitioningFromBreadcrumb]
  -[SBRootFolderController setSpotlightTransitioningFromBreadcrumb:]
  -[SBRootFolderController setEffectiveSidebarVisibilityProgress:]


SBRootFolderDockAnimationViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  long long forcedInterfaceOrientation

  // instance methods
  -[SBRootFolderDockAnimationViewController supportedInterfaceOrientations]
  -[SBRootFolderDockAnimationViewController shouldAutorotate]
  -[SBRootFolderDockAnimationViewController setForcedInterfaceOrientation:]
  -[SBRootFolderDockAnimationViewController forcedInterfaceOrientation]


_SBRootFolderDockAnimationViewControllerWindow : UIWindow /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
  // instance methods
  -[_SBRootFolderDockAnimationViewControllerWindow _shouldControlAutorotation]


SBRootFolderControllerDefaultTransitionContext : SBViewControllerTransitionContext

SBRootFolderControllerTransitionInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  long long sourcePageState
 @property  long long destinationPageState

  // instance methods
  -[SBRootFolderControllerTransitionInfo destinationPageState]
  -[SBRootFolderControllerTransitionInfo setSourcePageState:]
  -[SBRootFolderControllerTransitionInfo setDestinationPageState:]
  -[SBRootFolderControllerTransitionInfo sourcePageState]


_SBRootFolderPageTransitionHandle : NSObject /usr/lib/libSystem.B.dylib <SBRootFolderPageTransition, BSDescriptionProviding>
 @property  NSString *reason
 @property  SBRootFolderController *folderController
 @property  long long sourcePageState
 @property  long long destinationPageState
 @property  double pageTransitionProgress
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBRootFolderPageTransitionHandle isValid]
  -[_SBRootFolderPageTransitionHandle reason]
  -[_SBRootFolderPageTransitionHandle .cxx_destruct]
  -[_SBRootFolderPageTransitionHandle succinctDescription]
  -[_SBRootFolderPageTransitionHandle descriptionWithMultilinePrefix:]
  -[_SBRootFolderPageTransitionHandle succinctDescriptionBuilder]
  -[_SBRootFolderPageTransitionHandle descriptionBuilderWithMultilinePrefix:]
  -[_SBRootFolderPageTransitionHandle setTransitionProgress:]
  -[_SBRootFolderPageTransitionHandle setValid:]
  -[_SBRootFolderPageTransitionHandle folderController]
  -[_SBRootFolderPageTransitionHandle endTransitionSuccessfully:]
  -[_SBRootFolderPageTransitionHandle destinationPageState]
  -[_SBRootFolderPageTransitionHandle pageTransitionProgress]
  -[_SBRootFolderPageTransitionHandle initWithFolderController:destinationPageState:reason:]
  -[_SBRootFolderPageTransitionHandle setSourcePageState:]
  -[_SBRootFolderPageTransitionHandle setDestinationPageState:]
  -[_SBRootFolderPageTransitionHandle sourcePageState]
  -[_SBRootFolderPageTransitionHandle setPageTransitionProgress:]


_SBRootFolderControllerSidebarAppearStateOverrideAssertion : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable, BSDescriptionProviding>
 @property  SBRootFolderController *rootFolderController
 @property  BOOL invalidated
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBRootFolderControllerSidebarAppearStateOverrideAssertion dealloc]
  -[_SBRootFolderControllerSidebarAppearStateOverrideAssertion invalidate]
  -[_SBRootFolderControllerSidebarAppearStateOverrideAssertion reason]
  -[_SBRootFolderControllerSidebarAppearStateOverrideAssertion .cxx_destruct]
  -[_SBRootFolderControllerSidebarAppearStateOverrideAssertion isInvalidated]
  -[_SBRootFolderControllerSidebarAppearStateOverrideAssertion succinctDescription]
  -[_SBRootFolderControllerSidebarAppearStateOverrideAssertion descriptionWithMultilinePrefix:]
  -[_SBRootFolderControllerSidebarAppearStateOverrideAssertion succinctDescriptionBuilder]
  -[_SBRootFolderControllerSidebarAppearStateOverrideAssertion descriptionBuilderWithMultilinePrefix:]
  -[_SBRootFolderControllerSidebarAppearStateOverrideAssertion setInvalidated:]
  -[_SBRootFolderControllerSidebarAppearStateOverrideAssertion initWithRootFolderController:reason:]
  -[_SBRootFolderControllerSidebarAppearStateOverrideAssertion rootFolderController]


SBFolderControllerAnimationContext : NSObject /usr/lib/libSystem.B.dylib
 @property  UIScreen *screen
 @property  UIWindow *animationWindow
 @property  UIView *fallbackIconContainer

  // class methods
  +[SBFolderControllerAnimationContext contextWithScreen:animationWindow:fallbackIconContainer:]

  // instance methods
  -[SBFolderControllerAnimationContext .cxx_destruct]
  -[SBFolderControllerAnimationContext screen]
  -[SBFolderControllerAnimationContext animationWindow]
  -[SBFolderControllerAnimationContext fallbackIconContainer]
  -[SBFolderControllerAnimationContext initWithScreen:animationWindow:fallbackIconContainer:]


SBHIconAnimationSettings : PTSettings /System/Library/PrivateFrameworks/PrototypeToolsUI.framework/PrototypeToolsUI
 @property  SBFAnimationSettings *centralAnimationSettings

  // class methods
  +[SBHIconAnimationSettings settingsControllerModule]

  // instance methods
  -[SBHIconAnimationSettings .cxx_destruct]
  -[SBHIconAnimationSettings setDefaultValues]
  -[SBHIconAnimationSettings centralAnimationSettings]
  -[SBHIconAnimationSettings setCentralAnimationSettings:]


SBHIconZoomSettings : SBHIconAnimationSettings
 @property  BOOL labelAlphaWithZoom

  // class methods
  +[SBHIconZoomSettings settingsControllerModule]

  // instance methods
  -[SBHIconZoomSettings setDefaultValues]
  -[SBHIconZoomSettings labelAlphaWithZoom]
  -[SBHIconZoomSettings setLabelAlphaWithZoom:]


SBHCenterZoomSettings : SBHIconZoomSettings
 @property  BOOL preferCenterOfIconGrid
 @property  double centerRowCoordinate
 @property  long long distanceEffect
 @property  double firstHopIncrement
 @property  double hopIncrementAcceleration
 @property  double dockMass
 @property  BOOL zoomViewBelowIcons

  // class methods
  +[SBHCenterZoomSettings settingsControllerModule]

  // instance methods
  -[SBHCenterZoomSettings setDefaultValues]
  -[SBHCenterZoomSettings distanceEffect]
  -[SBHCenterZoomSettings firstHopIncrement]
  -[SBHCenterZoomSettings hopIncrementAcceleration]
  -[SBHCenterZoomSettings dockMass]
  -[SBHCenterZoomSettings preferCenterOfIconGrid]
  -[SBHCenterZoomSettings centerRowCoordinate]
  -[SBHCenterZoomSettings setDockMass:]
  -[SBHCenterZoomSettings setCenterRowCoordinate:]
  -[SBHCenterZoomSettings setPreferCenterOfIconGrid:]
  -[SBHCenterZoomSettings setDistanceEffect:]
  -[SBHCenterZoomSettings setFirstHopIncrement:]
  -[SBHCenterZoomSettings setHopIncrementAcceleration:]
  -[SBHCenterZoomSettings zoomViewBelowIcons]
  -[SBHCenterZoomSettings setZoomViewBelowIcons:]


SBHCenterAppZoomSettings : SBHCenterZoomSettings
 @property  double appHeadStart
 @property  SBFAnimationSettings *appZoomSettings
 @property  SBFAnimationSettings *appFadeSettings

  // class methods
  +[SBHCenterAppZoomSettings settingsControllerModule]

  // instance methods
  -[SBHCenterAppZoomSettings .cxx_destruct]
  -[SBHCenterAppZoomSettings setDefaultValues]
  -[SBHCenterAppZoomSettings appHeadStart]
  -[SBHCenterAppZoomSettings setAppHeadStart:]
  -[SBHCenterAppZoomSettings appZoomSettings]
  -[SBHCenterAppZoomSettings setAppZoomSettings:]
  -[SBHCenterAppZoomSettings appFadeSettings]
  -[SBHCenterAppZoomSettings setAppFadeSettings:]


SBHScaleZoomSettings : SBHIconZoomSettings
 @property  SBFAnimationSettings *outerFolderFadeSettings
 @property  BOOL crossfadeWithZoom
 @property  SBFAnimationSettings *crossfadeSettings
 @property  BOOL fadesIconGrid
 @property  SBFAnimationSettings *iconGridFadeSettings

  // class methods
  +[SBHScaleZoomSettings settingsControllerModule]

  // instance methods
  -[SBHScaleZoomSettings .cxx_destruct]
  -[SBHScaleZoomSettings setDefaultValues]
  -[SBHScaleZoomSettings crossfadeSettings]
  -[SBHScaleZoomSettings effectiveCrossfadeAnimationSettings]
  -[SBHScaleZoomSettings iconGridFadeSettings]
  -[SBHScaleZoomSettings fadesIconGrid]
  -[SBHScaleZoomSettings outerFolderFadeSettings]
  -[SBHScaleZoomSettings setCrossfadeWithZoom:]
  -[SBHScaleZoomSettings setFadesIconGrid:]
  -[SBHScaleZoomSettings crossfadeWithZoom]
  -[SBHScaleZoomSettings setOuterFolderFadeSettings:]
  -[SBHScaleZoomSettings setCrossfadeSettings:]
  -[SBHScaleZoomSettings setIconGridFadeSettings:]


SBHCrossfadeZoomSettings : SBHScaleZoomSettings
 @property  BOOL morphWithZoom
 @property  SBFAnimationSettings *morphSettings

  // class methods
  +[SBHCrossfadeZoomSettings settingsControllerModule]

  // instance methods
  -[SBHCrossfadeZoomSettings .cxx_destruct]
  -[SBHCrossfadeZoomSettings setDefaultValues]
  -[SBHCrossfadeZoomSettings effectiveMorphAnimationSettings]
  -[SBHCrossfadeZoomSettings setMorphWithZoom:]
  -[SBHCrossfadeZoomSettings morphWithZoom]
  -[SBHCrossfadeZoomSettings morphSettings]
  -[SBHCrossfadeZoomSettings setMorphSettings:]


SBHFolderZoomSettings : SBHScaleZoomSettings
 @property  SBFAnimationSettings *innerFolderFadeSettings

  // class methods
  +[SBHFolderZoomSettings settingsControllerModule]

  // instance methods
  -[SBHFolderZoomSettings .cxx_destruct]
  -[SBHFolderZoomSettings setDefaultValues]
  -[SBHFolderZoomSettings innerFolderFadeSettings]
  -[SBHFolderZoomSettings setInnerFolderFadeSettings:]


SBHReducedMotionFadeSettings : SBHIconAnimationSettings
  // class methods
  +[SBHReducedMotionFadeSettings settingsControllerModule]

  // instance methods
  -[SBHReducedMotionFadeSettings setDefaultValues]


SBHUnlockSettings : SBHCenterAppSuspendSettings
  // class methods
  +[SBHUnlockSettings settingsControllerModule]

  // instance methods
  -[SBHUnlockSettings setDefaultValues]


SBHCenterAppLaunchSettings : SBHCenterAppZoomSettings
  // instance methods
  -[SBHCenterAppLaunchSettings setDefaultValues]


SBHCenterAppSuspendSettings : SBHCenterAppZoomSettings
  // instance methods
  -[SBHCenterAppSuspendSettings setDefaultValues]


SBHCenterAcceleratedAppSuspendSettings : SBHCenterAppSuspendSettings
  // instance methods
  -[SBHCenterAcceleratedAppSuspendSettings setDefaultValues]


SBHCrossfadeAppTransitionSettings : SBHCrossfadeZoomSettings
 @property  SBFAnimationSettings *appSnapshotCornerRadiusSettings

  // class methods
  +[SBHCrossfadeAppTransitionSettings settingsControllerModule]

  // instance methods
  -[SBHCrossfadeAppTransitionSettings .cxx_destruct]
  -[SBHCrossfadeAppTransitionSettings setDefaultValues]
  -[SBHCrossfadeAppTransitionSettings appSnapshotCornerRadiusSettings]
  -[SBHCrossfadeAppTransitionSettings setAppSnapshotCornerRadiusSettings:]


SBHCrossfadeAppLaunchSettings : SBHCrossfadeAppTransitionSettings
  // instance methods
  -[SBHCrossfadeAppLaunchSettings setDefaultValues]


SBHCrossfadeAppSuspendSettings : SBHCrossfadeAppTransitionSettings
  // instance methods
  -[SBHCrossfadeAppSuspendSettings setDefaultValues]


SBHCrossfadeAcceleratedAppSuspendSettings : SBHCrossfadeAppSuspendSettings
  // instance methods
  -[SBHCrossfadeAcceleratedAppSuspendSettings setDefaultValues]


SBHFolderOpenSettings : SBHFolderZoomSettings
  // instance methods
  -[SBHFolderOpenSettings setDefaultValues]


SBHFolderCloseSettings : SBHFolderZoomSettings
  // instance methods
  -[SBHFolderCloseSettings setDefaultValues]


SBHIconAnimationRootSettings : PTSettings /System/Library/PrivateFrameworks/PrototypeToolsUI.framework/PrototypeToolsUI
 @property  SBHReducedMotionFadeSettings *reducedMotionSettings
 @property  SBHUnlockSettings *unlockSettings
 @property  SBHCenterAppLaunchSettings *centerLaunchSettings
 @property  SBHCenterAppSuspendSettings *centerSuspendSettings
 @property  SBHCenterAcceleratedAppSuspendSettings *centerAcceleratedSuspendSettings
 @property  SBHCrossfadeAppLaunchSettings *crossfadeLaunchSettings
 @property  SBHCrossfadeAppSuspendSettings *crossfadeSuspendSettings
 @property  SBHCrossfadeAcceleratedAppSuspendSettings *crossfadeAcceleratedSuspendSettings
 @property  double maxAppSuspendHintProgress
 @property  double maxAppLaunchWallpaperScale
 @property  SBHFolderOpenSettings *folderOpenSettings
 @property  SBHFolderCloseSettings *folderCloseSettings
 @property  double maxFolderCloseHintProgress

  // class methods
  +[SBHIconAnimationRootSettings settingsControllerModule]

  // instance methods
  -[SBHIconAnimationRootSettings .cxx_destruct]
  -[SBHIconAnimationRootSettings setDefaultValues]
  -[SBHIconAnimationRootSettings folderOpenSettings]
  -[SBHIconAnimationRootSettings folderCloseSettings]
  -[SBHIconAnimationRootSettings reducedMotionSettings]
  -[SBHIconAnimationRootSettings centerLaunchSettings]
  -[SBHIconAnimationRootSettings unlockSettings]
  -[SBHIconAnimationRootSettings setMaxAppSuspendHintProgress:]
  -[SBHIconAnimationRootSettings setMaxAppLaunchWallpaperScale:]
  -[SBHIconAnimationRootSettings setMaxFolderCloseHintProgress:]
  -[SBHIconAnimationRootSettings setReducedMotionSettings:]
  -[SBHIconAnimationRootSettings setUnlockSettings:]
  -[SBHIconAnimationRootSettings setCenterLaunchSettings:]
  -[SBHIconAnimationRootSettings centerSuspendSettings]
  -[SBHIconAnimationRootSettings setCenterSuspendSettings:]
  -[SBHIconAnimationRootSettings centerAcceleratedSuspendSettings]
  -[SBHIconAnimationRootSettings setCenterAcceleratedSuspendSettings:]
  -[SBHIconAnimationRootSettings crossfadeLaunchSettings]
  -[SBHIconAnimationRootSettings setCrossfadeLaunchSettings:]
  -[SBHIconAnimationRootSettings crossfadeSuspendSettings]
  -[SBHIconAnimationRootSettings setCrossfadeSuspendSettings:]
  -[SBHIconAnimationRootSettings crossfadeAcceleratedSuspendSettings]
  -[SBHIconAnimationRootSettings setCrossfadeAcceleratedSuspendSettings:]
  -[SBHIconAnimationRootSettings maxAppSuspendHintProgress]
  -[SBHIconAnimationRootSettings maxAppLaunchWallpaperScale]
  -[SBHIconAnimationRootSettings setFolderOpenSettings:]
  -[SBHIconAnimationRootSettings setFolderCloseSettings:]
  -[SBHIconAnimationRootSettings maxFolderCloseHintProgress]


SBHRootFolderSettings : PTSettings /System/Library/PrivateFrameworks/PrototypeToolsUI.framework/PrototypeToolsUI
 @property  BOOL adjustableLayoutEnabled
 @property  double portraitTopLayoutInset
 @property  double portraitBottomLayoutInset
 @property  double portraitSideLayoutInset
 @property  double landscapeTopLayoutInset
 @property  double landscapeBottomLayoutInset
 @property  double landscapeSideLayoutInset

  // class methods
  +[SBHRootFolderSettings settingsControllerModule]

  // instance methods
  -[SBHRootFolderSettings setDefaultValues]
  -[SBHRootFolderSettings setAdjustableLayoutEnabled:]
  -[SBHRootFolderSettings setPortraitTopLayoutInset:]
  -[SBHRootFolderSettings setPortraitBottomLayoutInset:]
  -[SBHRootFolderSettings setPortraitSideLayoutInset:]
  -[SBHRootFolderSettings setLandscapeTopLayoutInset:]
  -[SBHRootFolderSettings setLandscapeBottomLayoutInset:]
  -[SBHRootFolderSettings setLandscapeSideLayoutInset:]
  -[SBHRootFolderSettings isAdjustableLayoutEnabled]
  -[SBHRootFolderSettings portraitTopLayoutInset]
  -[SBHRootFolderSettings portraitBottomLayoutInset]
  -[SBHRootFolderSettings portraitSideLayoutInset]
  -[SBHRootFolderSettings landscapeTopLayoutInset]
  -[SBHRootFolderSettings landscapeBottomLayoutInset]
  -[SBHRootFolderSettings landscapeSideLayoutInset]


SBCountedMap : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[SBCountedMap init]
  -[SBCountedMap containsKey:]
  -[SBCountedMap .cxx_destruct]
  -[SBCountedMap containsValue:]
  -[SBCountedMap checkinValue:]
  -[SBCountedMap checkoutValueForKey:creationBlock:]
  -[SBCountedMap checkinValues:]


SBFolderControllerBackgroundView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  BOOL reduceTransparencyEnabled
 @property  unsigned long concreteEffect
 @property  unsigned long currentEffect
 @property  <SBFolderControllerBackgroundViewDelegate> *delegate
 @property  BOOL transitionCancelled
 @property  unsigned long effect
 @property  BOOL effectActive
 @property  BOOL expanding
 @property  BOOL frozen

  // class methods
  +[SBFolderControllerBackgroundView _tintColorForEffect:]

  // instance methods
  -[SBFolderControllerBackgroundView delegate]
  -[SBFolderControllerBackgroundView setDelegate:]
  -[SBFolderControllerBackgroundView .cxx_destruct]
  -[SBFolderControllerBackgroundView isFrozen]
  -[SBFolderControllerBackgroundView initWithFrame:]
  -[SBFolderControllerBackgroundView setEffect:]
  -[SBFolderControllerBackgroundView layoutSubviews]
  -[SBFolderControllerBackgroundView effect]
  -[SBFolderControllerBackgroundView setFrozen:]
  -[SBFolderControllerBackgroundView setReduceTransparencyEnabled:]
  -[SBFolderControllerBackgroundView isReduceTransparencyEnabled]
  -[SBFolderControllerBackgroundView currentEffect]
  -[SBFolderControllerBackgroundView setCurrentEffect:]
  -[SBFolderControllerBackgroundView setExpanding:]
  -[SBFolderControllerBackgroundView setTransitionCancelled:]
  -[SBFolderControllerBackgroundView setEffectActive:]
  -[SBFolderControllerBackgroundView _updateCurrentEffect]
  -[SBFolderControllerBackgroundView concreteEffect]
  -[SBFolderControllerBackgroundView _reduceTransparencyEnabledStateChanged]
  -[SBFolderControllerBackgroundView minimumHomeScreenScale]
  -[SBFolderControllerBackgroundView currentEffectMaterialRecipeName]
  -[SBFolderControllerBackgroundView isEffectActive]
  -[SBFolderControllerBackgroundView _isCurrentlyExpanding]
  -[SBFolderControllerBackgroundView isExpanding]
  -[SBFolderControllerBackgroundView isTransitionCancelled]


SBIconGridImage : UIImage /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  <SBIconListLayout> *listLayout
 @property  CPMemoryPool *pool
 @property  unsigned int treatedCells
 @property  unsigned long numberOfCells
 @property  unsigned long numberOfColumns
 @property  unsigned long numberOfRows

  // class methods
  +[SBIconGridImage sizeForLayout:]
  +[SBIconGridImage rectAtIndex:inLayout:maxCount:]
  +[SBIconGridImage gridImageForLayout:previousGridImage:previousGridCellIndexToUpdate:pool:cellImageDrawBlock:]
  +[SBIconGridImage numberOfRowsForNumberOfCells:inLayout:]
  +[SBIconGridImage gridImageForLayout:cellImageDrawBlock:]
  +[SBIconGridImage gridImageForLayout:pool:cellImageDrawBlock:]

  // instance methods
  -[SBIconGridImage .cxx_destruct]
  -[SBIconGridImage numberOfColumns]
  -[SBIconGridImage numberOfRows]
  -[SBIconGridImage numberOfCells]
  -[SBIconGridImage pool]
  -[SBIconGridImage setPool:]
  -[SBIconGridImage setListLayout:]
  -[SBIconGridImage listLayout]
  -[SBIconGridImage setTreatedCells:]
  -[SBIconGridImage gridImageByPatchingCellAtIndex:cellImageProviderBlock:]
  -[SBIconGridImage iconImageAtIndex:]
  -[SBIconGridImage isIconImageTreatedAtIndex:]
  -[SBIconGridImage treatedCells]


SBIconLabelAccessoryView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconLabelAccessoryView>
 @property  UIImage *baseImage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hasBaseline
 @property  double baselineOffsetFromBottom
 @property  {UIEdgeInsets=dddd} alignmentRectInsets

  // class methods
  +[SBIconLabelAccessoryView labelAccessorySystemImageName]
  +[SBIconLabelAccessoryView labelAccessorySystemImageScale]

  // instance methods
  -[SBIconLabelAccessoryView initWithCoder:]
  -[SBIconLabelAccessoryView .cxx_destruct]
  -[SBIconLabelAccessoryView prepareForReuse]
  -[SBIconLabelAccessoryView hasBaseline]
  -[SBIconLabelAccessoryView baselineOffsetFromBottom]
  -[SBIconLabelAccessoryView intrinsicContentSize]
  -[SBIconLabelAccessoryView sizeThatFits:]
  -[SBIconLabelAccessoryView alignmentRectInsets]
  -[SBIconLabelAccessoryView setBaseImage:]
  -[SBIconLabelAccessoryView baseImage]
  -[SBIconLabelAccessoryView updateWithLegibilitySettings:labelFont:]
  -[SBIconLabelAccessoryView updateWithBaseImage:legibilitySettings:]


SBIconDotLabelAccessoryView : SBIconLabelAccessoryView
  // class methods
  +[SBIconDotLabelAccessoryView _dotColor]
  +[SBIconDotLabelAccessoryView labelAccessorySystemImageName]
  +[SBIconDotLabelAccessoryView _vibrantColorMatrixInput]

  // instance methods
  -[SBIconDotLabelAccessoryView .cxx_destruct]
  -[SBIconDotLabelAccessoryView intrinsicContentSize]
  -[SBIconDotLabelAccessoryView initWithFrame:]
  -[SBIconDotLabelAccessoryView updateWithBaseImage:legibilitySettings:]


SBIconRecentlyUpdatedLabelAccessoryView : SBIconDotLabelAccessoryView
  // class methods
  +[SBIconRecentlyUpdatedLabelAccessoryView _dotColor]
  +[SBIconRecentlyUpdatedLabelAccessoryView _vibrantColorMatrixInput]


SBIconBetaLabelAccessoryView : SBIconDotLabelAccessoryView
  // class methods
  +[SBIconBetaLabelAccessoryView _dotColor]
  +[SBIconBetaLabelAccessoryView _vibrantColorMatrixInput]


SBIconLegibilityLabelAccessoryView : SBIconLabelAccessoryView
 @property  UIImageView *iconImageView

  // instance methods
  -[SBIconLegibilityLabelAccessoryView .cxx_destruct]
  -[SBIconLegibilityLabelAccessoryView hasBaseline]
  -[SBIconLegibilityLabelAccessoryView baselineOffsetFromBottom]
  -[SBIconLegibilityLabelAccessoryView initWithFrame:]
  -[SBIconLegibilityLabelAccessoryView alignmentRectInsets]
  -[SBIconLegibilityLabelAccessoryView iconImageView]
  -[SBIconLegibilityLabelAccessoryView updateWithBaseImage:legibilitySettings:]
  -[SBIconLegibilityLabelAccessoryView removeInvertingFilter]
  -[SBIconLegibilityLabelAccessoryView addInvertingFilter]


SBIconCloudLabelAccessoryView : SBIconLegibilityLabelAccessoryView
  // class methods
  +[SBIconCloudLabelAccessoryView labelAccessorySystemImageName]


SBIconBlockedForScreenTimeExpirationLabelAccessoryView : SBIconLegibilityLabelAccessoryView
  // class methods
  +[SBIconBlockedForScreenTimeExpirationLabelAccessoryView labelAccessorySystemImageName]
  +[SBIconBlockedForScreenTimeExpirationLabelAccessoryView labelAccessorySystemImageScale]


SBRootFolderView : SBFolderView <_UISettingsKeyObserver, SBDockViewDelegate>
 @property  BOOL dockViewBorrowed
 @property  SBTitledHomeScreenButton *doneButton
 @property  BOOL sidebarSlideGestureActive
 @property  unsigned long sidebarAllowedOrientations
 @property  <SBIconListViewIconLocationTransitioning> *firstListViewIconLocationTransitionHandler
 @property  BOOL sidebarVisibleWhenScrollingBegan
 @property  double scrollingAdjustment
 @property  BOOL allowsFreeScrollingUntilScrollingEnds
 @property  SBHRootFolderSettings *folderSettings
 @property  unsigned long ignoresOverscrollOnFirstPageOrientations
 @property  BOOL userAttemptedToOverscrollDuringCurrentGesture
 @property  double todayViewPageScrollOffset
 @property  long long todayViewPageIndex
 @property  long long sidebarPageIndex
 @property  BOOL hidesOffscreenCustomPageViews
 @property  BOOL shouldFadeDockOutDuringTransitionToTodayView
 @property  BOOL shouldFadePageControlOutDuringTransitionToTodayView
 @property  BOOL sidebarVisibilityGestureActive
 @property  <SBRootFolderViewDelegate> *delegate
 @property  SBRootFolder *folder
 @property  SBFParallaxSettings *parallaxSettings
 @property  unsigned long dockEdge
 @property  double dockHeight
 @property  BOOL dockExternal
 @property  BOOL dockPinnedForRotation
 @property  NSString *dockIconLocation
 @property  BOOL dockVisible
 @property  SBSearchGesture *searchGesture
 @property  double currentDockOffscreenFraction
 @property  SBDockView *dockView
 @property  BOOL allowsAutoscrollToTodayView
 @property  BOOL showsDoneButton
 @property  UIView *todayView
 @property  UIView *sidebarView
 @property  UIView *pullDownSearchView
 @property  UIView *portraitHeaderView
 @property  BOOL onTodayPage
 @property  BOOL todayViewPageHidden
 @property  double sidebarVisibilityProgress
 @property  double sidebarPinned
 @property  double effectiveSidebarVisibilityProgress
 @property  BOOL sidebarEffectivelyVisible
 @property  BOOL todayViewBouncing
 @property  BOOL searchHidden
 @property  BOOL shiftsPullDownSearchForVisibility
 @property  UIView *searchableTodayWrapperView
 @property  SBSearchBackdropView *searchBackdropView
 @property  double todayViewVisibilityProgress
 @property  double pullDownSearchVisibilityProgress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBRootFolderView defaultIconLocation]
  +[SBRootFolderView dockIconLocation]
  +[SBRootFolderView sidebarVisibilityProgressAnimator]

  // instance methods
  -[SBRootFolderView dealloc]
  -[SBRootFolderView setDelegate:]
  -[SBRootFolderView .cxx_destruct]
  -[SBRootFolderView setOrientation:]
  -[SBRootFolderView initWithConfiguration:]
  -[SBRootFolderView descriptionBuilderWithMultilinePrefix:]
  -[SBRootFolderView setNeedsLayout]
  -[SBRootFolderView scrollViewWillBeginDragging:]
  -[SBRootFolderView scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBRootFolderView scrollViewDidEndDragging:willDecelerate:]
  -[SBRootFolderView scrollViewDidEndDecelerating:]
  -[SBRootFolderView scrollViewDidEndScrollingAnimation:]
  -[SBRootFolderView willMoveToWindow:]
  -[SBRootFolderView hitTest:withEvent:]
  -[SBRootFolderView setContentAlpha:]
  -[SBRootFolderView setLegibilitySettings:]
  -[SBRootFolderView setDoneButton:]
  -[SBRootFolderView doneButton]
  -[SBRootFolderView prepareForTransition]
  -[SBRootFolderView dockView]
  -[SBRootFolderView settings:changedValueForKey:]
  -[SBRootFolderView _layoutSubviews]
  -[SBRootFolderView isDockVisible]
  -[SBRootFolderView showsDoneButton]
  -[SBRootFolderView setShowsDoneButton:]
  -[SBRootFolderView _pageWidth]
  -[SBRootFolderView _removeParallax]
  -[SBRootFolderView todayView]
  -[SBRootFolderView searchGesture]
  -[SBRootFolderView setSearchGesture:]
  -[SBRootFolderView returnScalingView]
  -[SBRootFolderView layoutIconLists:animationType:forceRelayout:]
  -[SBRootFolderView beginModifyingDockOffscreenFractionForReason:]
  -[SBRootFolderView updateAccessibilityTintColors]
  -[SBRootFolderView fadeContentForMinificationFraction:]
  -[SBRootFolderView iconListViewAtIndex:]
  -[SBRootFolderView iconListViewAtPoint:]
  -[SBRootFolderView prepareToTearDown]
  -[SBRootFolderView tearDownListViews]
  -[SBRootFolderView resetIconListViews]
  -[SBRootFolderView updateIconListViews]
  -[SBRootFolderView setIdleText:]
  -[SBRootFolderView todayViewPageIndex]
  -[SBRootFolderView setTodayViewVisibilityProgress:]
  -[SBRootFolderView updateIconListIndexAndVisibility:]
  -[SBRootFolderView isOnTodayPage]
  -[SBRootFolderView setShowsDoneButton:animated:]
  -[SBRootFolderView _spotlightFirstIconRowOffset]
  -[SBRootFolderView isDockExternal]
  -[SBRootFolderView dockEdge]
  -[SBRootFolderView setDockEdge:]
  -[SBRootFolderView dockHeight]
  -[SBRootFolderView isDockPinnedForRotation]
  -[SBRootFolderView dockIconLocation]
  -[SBRootFolderView allowsAutoscrollToTodayView]
  -[SBRootFolderView setAllowsAutoscrollToTodayView:]
  -[SBRootFolderView searchableTodayWrapperView]
  -[SBRootFolderView searchBackdropView]
  -[SBRootFolderView parallaxSettings]
  -[SBRootFolderView _setParallaxDisabled:forReason:]
  -[SBRootFolderView sidebarPageIndex]
  -[SBRootFolderView sidebarVisibilityProgress]
  -[SBRootFolderView effectiveSidebarVisibilityProgress]
  -[SBRootFolderView setSidebarVisibilityProgress:]
  -[SBRootFolderView isSidebarEffectivelyVisible]
  -[SBRootFolderView isSidebarPinned]
  -[SBRootFolderView setSidebarPinned:]
  -[SBRootFolderView isSidebarVisibilityGestureActive]
  -[SBRootFolderView returnDockView]
  -[SBRootFolderView statusBarInsetsForDockEdge:]
  -[SBRootFolderView setTodayViewPageHidden:]
  -[SBRootFolderView borrowDockView]
  -[SBRootFolderView todayViewPageScrollOffset]
  -[SBRootFolderView setTodayViewBouncing:]
  -[SBRootFolderView isTodayViewPageHidden]
  -[SBRootFolderView setPullDownSearchVisibilityProgress:]
  -[SBRootFolderView setShiftsPullDownSearchForVisibility:]
  -[SBRootFolderView setSearchHidden:]
  -[SBRootFolderView _updateDockViewZOrdering]
  -[SBRootFolderView sidebarAllowedOrientations]
  -[SBRootFolderView _isSidebarEnabledForOrientation:]
  -[SBRootFolderView _sidebarScrollPanGestureRecognizerDidUpdate:]
  -[SBRootFolderView ignoresOverscrollOnFirstPageOrientations]
  -[SBRootFolderView _overscrollScrollPanGestureRecognizerDidUpdate:]
  -[SBRootFolderView _configureParallax]
  -[SBRootFolderView _resetSearchScrollTrackingState]
  -[SBRootFolderView _setupStateDumper]
  -[SBRootFolderView isDockViewBorrowed]
  -[SBRootFolderView _updateSidebarViewHidden]
  -[SBRootFolderView _updateIconListLegibilitySettings]
  -[SBRootFolderView currentDockOffscreenFraction]
  -[SBRootFolderView todayViewVisibilityProgress]
  -[SBRootFolderView getMetrics:dockEdge:]
  -[SBRootFolderView shouldScrollDockDuringTransitionToTodayView]
  -[SBRootFolderView shouldFadeDockOutDuringTransitionToTodayView]
  -[SBRootFolderView effectiveStatusBarHeight]
  -[SBRootFolderView _adjustedPageControlVerticalOffsetForInternalDock:]
  -[SBRootFolderView shouldScrollPageControlDuringTransitionToTodayView]
  -[SBRootFolderView todayViewPageScrollOffsetUsingPageWidth:]
  -[SBRootFolderView sidebarVisibilityProgressForLayout]
  -[SBRootFolderView sidebarWidthUsingPageWidth:]
  -[SBRootFolderView sidebarViewPageScrollOffsetUsingPageWidth:]
  -[SBRootFolderView portraitHeaderView]
  -[SBRootFolderView _shouldHideSidebarView]
  -[SBRootFolderView maxDockHeight]
  -[SBRootFolderView additionalScrollWidthToKeepVisibleInOneDirection]
  -[SBRootFolderView _minimumHomeScreenScale]
  -[SBRootFolderView _scaledBoundsForMinimumHomeScreenScale]
  -[SBRootFolderView getMetrics:]
  -[SBRootFolderView layoutSearchableViewsWithMetrics:]
  -[SBRootFolderView _animateViewsForPullingToSearchWithMetrics:]
  -[SBRootFolderView _animateViewsForScrollingToTodayViewWithMetrics:]
  -[SBRootFolderView _layoutSubviewsForPulldownSearch]
  -[SBRootFolderView _layoutSubviewsForTodayViewWithMetrics:]
  -[SBRootFolderView _layoutSubviewsForSidebarWithMetrics:]
  -[SBRootFolderView _updateDockOffscreenFractionWithMetrics:]
  -[SBRootFolderView isModifyingDockOfScreenFraction]
  -[SBRootFolderView layoutDockViewWithMetrics:]
  -[SBRootFolderView _adjustTodayContentForEdgeBounce]
  -[SBRootFolderView layoutPortraitHeaderViewWithMetrics:]
  -[SBRootFolderView _updateIconListIndexSearchableAndTodayViewsWithLayout:]
  -[SBRootFolderView setDockViewBorrowed:]
  -[SBRootFolderView updateDockViewOrientation]
  -[SBRootFolderView _statusBarInsetsForDockEdge:dockOffscreenPercentage:]
  -[SBRootFolderView _setupSearchBackdropViewIfNecessary]
  -[SBRootFolderView folderDidChange]
  -[SBRootFolderView _animateViewsForPullingToSearch]
  -[SBRootFolderView _animateViewsForScrollingToTodayView]
  -[SBRootFolderView _updateEditingStateAnimated:]
  -[SBRootFolderView _prepareSidebarViewForOrientationTransition]
  -[SBRootFolderView cleanUpAfterTransition]
  -[SBRootFolderView _iconListFrameForPageRect:atIndex:]
  -[SBRootFolderView _isSidebarEnabledForIconListIndex:orientation:]
  -[SBRootFolderView _isSidebarCollapsed]
  -[SBRootFolderView iconLocationForListAtIndex:]
  -[SBRootFolderView additionalIconListViews]
  -[SBRootFolderView _captureInitialSearchScrollTrackingState]
  -[SBRootFolderView setScrollingAdjustment:]
  -[SBRootFolderView _cleanUpAfterScrolling]
  -[SBRootFolderView iconScrollViewDidCancelTouchTracking:]
  -[SBRootFolderView _shouldIgnoreOverscrollOnFirstPageForCurrentOrientation]
  -[SBRootFolderView _isSidebarEnabledForCurrentOrientation]
  -[SBRootFolderView _isSidebarEnabledForCurrentPage]
  -[SBRootFolderView allowsFreeScrollingUntilScrollingEnds]
  -[SBRootFolderView shouldPinScrollingToFirstIconPageScrollOffsetForProposedScrollOffset:]
  -[SBRootFolderView iconScrollView:shouldSetContentOffset:animated:]
  -[SBRootFolderView iconScrollView:shouldSetAutoscrollContentOffset:]
  -[SBRootFolderView setAllowsFreeScrollingUntilScrollingEnds:]
  -[SBRootFolderView layoutSearchableViews]
  -[SBRootFolderView hidesOffscreenCustomPageViews]
  -[SBRootFolderView _willScrollToPageIndex:animated:]
  -[SBRootFolderView _currentPageIndexDidChangeFromPageIndex:]
  -[SBRootFolderView _checkSidebarVisibilityProgressAfterScroll]
  -[SBRootFolderView _isSidebarEnabledForPageIndex:]
  -[SBRootFolderView _cleanupAfterExtraScrollGesturesCompleted]
  -[SBRootFolderView _updateScrollingState:]
  -[SBRootFolderView _cleanupAfterSidebarSlideGestureCompleted:]
  -[SBRootFolderView _cleanUpAfterOverscrollScrollGestureEnded:]
  -[SBRootFolderView isSidebarSlideGestureActive]
  -[SBRootFolderView wasSidebarVisibleWhenScrollingBegan]
  -[SBRootFolderView setSidebarSlideGestureActive:]
  -[SBRootFolderView shouldEndSidebarGestureWithSidebarVisibleWithCurrentProgress:velocity:]
  -[SBRootFolderView firstListViewIconLocationTransitionHandler]
  -[SBRootFolderView setFirstListViewIconLocationTransitionHandler:]
  -[SBRootFolderView noteSidebarIsAnimating]
  -[SBRootFolderView noteSidebarFinishedAnimating]
  -[SBRootFolderView _scrollViewFrameForDockEdge:]
  -[SBRootFolderView _scrollOffsetForPageAtIndex:pageWidth:]
  -[SBRootFolderView sidebarView]
  -[SBRootFolderView isPageIndexCustomAndRightmost:]
  -[SBRootFolderView pullDownSearchVisibilityProgress]
  -[SBRootFolderView shiftsPullDownSearchForVisibility]
  -[SBRootFolderView pullDownSearchView]
  -[SBRootFolderView shouldFadePageControlOutDuringTransitionToTodayView]
  -[SBRootFolderView layoutPageControlWithMetrics:]
  -[SBRootFolderView _setSidebarViewHidden:]
  -[SBRootFolderView setSidebarVisibleWhenScrollingBegan:]
  -[SBRootFolderView _sidebarVisibilityProgressForPanGestureRecognizer:presenting:]
  -[SBRootFolderView setUserAttemptedToOverscrollDuringCurrentGesture:]
  -[SBRootFolderView userAttemptedToOverscrollDuringCurrentGesture]
  -[SBRootFolderView _isSidebarEnabledForPageIndex:orientation:]
  -[SBRootFolderView _shouldIgnoreOverscrollOnFirstPageForOrientation:]
  -[SBRootFolderView isOnSidebarPage]
  -[SBRootFolderView minimumHomeScreenScaleForDockView:]
  -[SBRootFolderView accessibilityTintColorForDockView:]
  -[SBRootFolderView isSearchHidden]
  -[SBRootFolderView _leadingCustomPageCount]
  -[SBRootFolderView clientDidChangeDockOffScreenFraction:]
  -[SBRootFolderView removeDockOffscreenFractionClient:]
  -[SBRootFolderView scrollableWidthForVisibleColumnRange]
  -[SBRootFolderView _scrollOffsetForContentAtPageIndex:]
  -[SBRootFolderView setSidebarVisibilityProgress:animator:]
  -[SBRootFolderView setSidebarEffectivelyVisible:]
  -[SBRootFolderView isTodayViewBouncing]
  -[SBRootFolderView scrollingAdjustment]
  -[SBRootFolderView folderSettings]
  -[SBRootFolderView setFolderSettings:]


_SBRootFolderLayoutWrapperView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  double statusBarHeightAdjustment
 @property  double headerOffset
 @property  {CGSize=dd} extendedSize
 @property  UIView *wrappedView

  // instance methods
  -[_SBRootFolderLayoutWrapperView .cxx_destruct]
  -[_SBRootFolderLayoutWrapperView succinctDescription]
  -[_SBRootFolderLayoutWrapperView descriptionWithMultilinePrefix:]
  -[_SBRootFolderLayoutWrapperView succinctDescriptionBuilder]
  -[_SBRootFolderLayoutWrapperView descriptionBuilderWithMultilinePrefix:]
  -[_SBRootFolderLayoutWrapperView layoutSubviews]
  -[_SBRootFolderLayoutWrapperView _updateLayout]
  -[_SBRootFolderLayoutWrapperView wrappedView]
  -[_SBRootFolderLayoutWrapperView setWrappedView:]
  -[_SBRootFolderLayoutWrapperView setHeaderOffset:]
  -[_SBRootFolderLayoutWrapperView headerOffset]
  -[_SBRootFolderLayoutWrapperView setExtendedSize:]
  -[_SBRootFolderLayoutWrapperView setStatusBarHeightAdjustment:]
  -[_SBRootFolderLayoutWrapperView statusBarHeightAdjustment]
  -[_SBRootFolderLayoutWrapperView extendedSize]


_SBRootFolderDockOffscreenFractionClient : NSObject /usr/lib/libSystem.B.dylib <SBDockOffscreenFractionModifying, BSDescriptionProviding>
 @property  SBRootFolderView *folderView
 @property  double desiredOffscreenFraction
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBRootFolderDockOffscreenFractionClient dealloc]
  -[_SBRootFolderDockOffscreenFractionClient invalidate]
  -[_SBRootFolderDockOffscreenFractionClient reason]
  -[_SBRootFolderDockOffscreenFractionClient .cxx_destruct]
  -[_SBRootFolderDockOffscreenFractionClient succinctDescription]
  -[_SBRootFolderDockOffscreenFractionClient descriptionWithMultilinePrefix:]
  -[_SBRootFolderDockOffscreenFractionClient succinctDescriptionBuilder]
  -[_SBRootFolderDockOffscreenFractionClient descriptionBuilderWithMultilinePrefix:]
  -[_SBRootFolderDockOffscreenFractionClient setDockOffscreenFraction:]
  -[_SBRootFolderDockOffscreenFractionClient folderView]
  -[_SBRootFolderDockOffscreenFractionClient initWithFolderView:reason:]
  -[_SBRootFolderDockOffscreenFractionClient desiredOffscreenFraction]
  -[_SBRootFolderDockOffscreenFractionClient setDesiredOffscreenFraction:]
  -[_SBRootFolderDockOffscreenFractionClient setFolderView:]
  -[_SBRootFolderDockOffscreenFractionClient layoutIfNeededForDockOffscreenFractionChanged]


SBHSidebarVisualConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  double contentWidth
 @property  {NSDirectionalEdgeInsets=dddd} insets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHSidebarVisualConfiguration init]
  -[SBHSidebarVisualConfiguration copyWithZone:]
  -[SBHSidebarVisualConfiguration succinctDescription]
  -[SBHSidebarVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHSidebarVisualConfiguration succinctDescriptionBuilder]
  -[SBHSidebarVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHSidebarVisualConfiguration contentWidth]
  -[SBHSidebarVisualConfiguration insets]
  -[SBHSidebarVisualConfiguration setInsets:]
  -[SBHSidebarVisualConfiguration setContentWidth:]


SBIconDragManager : NSObject /usr/lib/libSystem.B.dylib <SBIconListViewDragObserver>
 @property  SBIconDraggingEditContext *draggingEditContext
 @property  SBHIconManager *iconManager
 @property  BOOL iconDragging
 @property  BOOL trackingMultipleIconDrags
 @property  BOOL trackingMultipleItemIconDrags
 @property  BOOL trackingUserActiveIconDrags
 @property  BOOL trackingDroppingIconDrags
 @property  BOOL trackingActiveOrDroppingIconDrags
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconDragManager cancelAllDrags]
  +[SBIconDragManager enumerateAppDragContextsInDragItems:usingBlock:]
  +[SBIconDragManager enumerateMedusaPlatterDragPreviewsInDragItems:usingBlock:]

  // instance methods
  -[SBIconDragManager init]
  -[SBIconDragManager .cxx_destruct]
  -[SBIconDragManager model]
  -[SBIconDragManager succinctDescription]
  -[SBIconDragManager descriptionWithMultilinePrefix:]
  -[SBIconDragManager succinctDescriptionBuilder]
  -[SBIconDragManager descriptionBuilderWithMultilinePrefix:]
  -[SBIconDragManager iconManager]
  -[SBIconDragManager rootFolder]
  -[SBIconDragManager isIconDragging]
  -[SBIconDragManager canHandleIconDropSession:inIconListView:]
  -[SBIconDragManager canAcceptDropInSession:inIconListView:]
  -[SBIconDragManager iconDropSessionDidEnter:inIconListView:]
  -[SBIconDragManager iconDropSessionDidUpdate:inIconListView:]
  -[SBIconDragManager iconDropSession:didPauseAtLocation:inIconListView:]
  -[SBIconDragManager iconDropSessionDidExit:fromIconListView:]
  -[SBIconDragManager performIconDrop:inIconListView:]
  -[SBIconDragManager iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBIconDragManager iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBIconDragManager shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBIconDragManager performSpringLoadedInteractionForIconDragOnIconView:]
  -[SBIconDragManager noteFolderControllerWillClose:]
  -[SBIconDragManager noteFolderBeganScrolling]
  -[SBIconDragManager iconListView:concludeIconDrop:]
  -[SBIconDragManager iconListView:iconDropSessionDidEnd:]
  -[SBIconDragManager iconView:dragPreviewForItem:session:previewParameters:]
  -[SBIconDragManager iconViewCanBeginDrags:]
  -[SBIconDragManager iconView:willAnimateDragLiftWithAnimator:session:]
  -[SBIconDragManager iconView:dragLiftAnimationDidChangeDirection:]
  -[SBIconDragManager iconView:canAddDragItemsToSession:]
  -[SBIconDragManager iconView:willAddDragItems:toSession:]
  -[SBIconDragManager iconViewWillBeginDrag:session:]
  -[SBIconDragManager iconView:session:willEndWithOperation:]
  -[SBIconDragManager iconView:didEndDragSession:withOperation:]
  -[SBIconDragManager iconViewWillCancelDrag:]
  -[SBIconDragManager iconView:willUsePreviewForCancelling:targetIconView:]
  -[SBIconDragManager iconView:item:willAnimateDragCancelWithAnimator:]
  -[SBIconDragManager enumerateIconDragContextsUsingBlock:]
  -[SBIconDragManager isTrackingDragMatchingPredicate:]
  -[SBIconDragManager enumerateIconDragIdentifiersUsingBlock:]
  -[SBIconDragManager uniqueIdentifierForIconDragSession:]
  -[SBIconDragManager uniqueIdentifierForIconDropSession:]
  -[SBIconDragManager iconDragContextForDragWithIdentifier:]
  -[SBIconDragManager iconDragContextForDropSession:]
  -[SBIconDragManager iconDragContextForDragSession:]
  -[SBIconDragManager captureInitialIconStateToDragContext:]
  -[SBIconDragManager resetWatchdogTimerForDragWithIdentifier:timeout:]
  -[SBIconDragManager stopTrackingDragLocationForEditingForDragWithIdentifier:]
  -[SBIconDragManager replaceAllDragPlaceholdersWithReferencedIcons]
  -[SBIconDragManager removeAllDragPlaceholders]
  -[SBIconDragManager removeEmptyFolders]
  -[SBIconDragManager _cleanUpAllDraggingState]
  -[SBIconDragManager compactAndLayoutRootIconLists]
  -[SBIconDragManager _stopTrackingDragWithIdentifier:]
  -[SBIconDragManager watchdogTimerDidFire:]
  -[SBIconDragManager watchdogDragWithIdentifier:]
  -[SBIconDragManager appDragLocalContextForDragItem:]
  -[SBIconDragManager draggedIconForIdentifier:]
  -[SBIconDragManager removeDragPlaceholdersForDragWithIdentifier:placeholderPath:]
  -[SBIconDragManager removeAllDragPlaceholdersInFolder:passingTest:]
  -[SBIconDragManager replaceDragPlaceholderWithReferencedIcons:]
  -[SBIconDragManager doesIconViewRepresentRealIconPosition:]
  -[SBIconDragManager removeEmptyFoldersInFolder:]
  -[SBIconDragManager draggingEditContext]
  -[SBIconDragManager setDraggingEditContext:]
  -[SBIconDragManager fullIndexPathForRevertingIcon:context:]
  -[SBIconDragManager revertLocationForIcon:toPath:]
  -[SBIconDragManager compactAndLayoutRootIconListsWithDuration:]
  -[SBIconDragManager revertDragChangesForDragWithIdentifier:]
  -[SBIconDragManager updateExistingIconPlaceholderForDragWithIdentifier:]
  -[SBIconDragManager cancelAllDrags]
  -[SBIconDragManager allDragIdentifiers]
  -[SBIconDragManager isTrackingUserActiveIconDrags]
  -[SBIconDragManager revertActiveDragChanges]
  -[SBIconDragManager doesIconLocationRepresentRealIconPosition:]
  -[SBIconDragManager shouldBeginEditingWhenLiftPreviewBegins]
  -[SBIconDragManager _windowForDragPreviews]
  -[SBIconDragManager _iconForDragItem:inIconListView:]
  -[SBIconDragManager iconIdentifierForDragItem:]
  -[SBIconDragManager draggedItemIdentifiersForDragDropSession:]
  -[SBIconDragManager _startTrackingDragWithIdentifier:]
  -[SBIconDragManager addAppLocalContextsFromDragItems:session:toDragWithIdentifier:]
  -[SBIconDragManager shouldUseGhostIconForIconView:]
  -[SBIconDragManager _replaceDraggedIconViewWithPlaceholder:]
  -[SBIconDragManager _stopTrackingDragIfPossibleWithIdentifier:]
  -[SBIconDragManager changeStateOfDragWithIdentifier:toState:]
  -[SBIconDragManager shouldBeginEditingWhenDragBegins]
  -[SBIconDragManager startTrackingDragLocationForEditingFromDropSession:orDragSession:]
  -[SBIconDragManager _updateDragPreviewsForEditingState:]
  -[SBIconDragManager shouldBeginEditingWhenAddingDragItems]
  -[SBIconDragManager addPlatterViewToMedusaDragOffscreenWindow:]
  -[SBIconDragManager firstHiddenIconIdentifierInDrag:]
  -[SBIconDragManager iconDropSessionDidEnter:identifier:draggedIconIdentifiers:inIconListView:]
  -[SBIconDragManager _updateDragPreviewIconLabelsForDropSession:inIconListView:]
  -[SBIconDragManager _handleScaleAdjustmentForDropSession:currentListView:]
  -[SBIconDragManager iconDropSessionWithIdentifier:draggedIconIdentifiers:didPauseAtLocation:inIconListView:]
  -[SBIconDragManager removeAllGrabbedIconViews]
  -[SBIconDragManager removeIconsWithDraggedIconIdentifiers:savingOriginsToContext:]
  -[SBIconDragManager canMakeIconViewRecipient:]
  -[SBIconDragManager iconDropSessionDidExitWithIdentifier:fromIconListView:]
  -[SBIconDragManager removeDragPlaceholdersForDragWithIdentifier:]
  -[SBIconDragManager replaceAllBouncedIconsInContext:]
  -[SBIconDragManager performIconDrop:identifier:draggedIconIdentifiers:inIconListView:]
  -[SBIconDragManager draggedIconsForIdentifiers:]
  -[SBIconDragManager maximumAllowedIconDroppingAnimationsForListView:]
  -[SBIconDragManager replaceDragPlaceholdersWithReferencedIconsInDragWithIdentifier:]
  -[SBIconDragManager iconDropSessionDidEnd:identifier:draggedIconIdentifiers:]
  -[SBIconDragManager _iconViewForDragItem:inIconListView:]
  -[SBIconDragManager shouldCancelDragsWhenEditingEnds]
  -[SBIconDragManager cancelEditingAndAllDrags]
  -[SBIconDragManager concludeIconDrop:]
  -[SBIconDragManager iconDropSessionDidEnd:]
  -[SBIconDragManager isTrackingMultipleIconDrags]
  -[SBIconDragManager isTrackingMultipleItemIconDrags]
  -[SBIconDragManager isTrackingDragOfIcon:]
  -[SBIconDragManager isTrackingDragOriginatingFromIconView:]
  -[SBIconDragManager isTrackingUserActiveDragOriginatingFromIconView:]
  -[SBIconDragManager isTrackingDragInUserActiveLiftPreviewOriginatingFromIconView:]
  -[SBIconDragManager isTrackingDroppingIconDrags]
  -[SBIconDragManager isTrackingActiveOrDroppingIconDrags]
  -[SBIconDragManager iconDragContextForDragDropSession:]
  -[SBIconDragManager _isTrackingDrag:]
  -[SBIconDragManager _isTrackingDragWithIdentifier:]
  -[SBIconDragManager swapTrackedIconWithIdentifier:withIcon:]
  -[SBIconDragManager setIndexPath:whenRevertingIconsWithPathPrefix:]
  -[SBIconDragManager noteIconTapped]
  -[SBIconDragManager delayAfterAfterLiftPreviewToBeginEditing]
  -[SBIconDragManager removePlatterViewFromMedusaDragOffscreenWindow:]
  -[SBIconDragManager informQuickActionPlatterDidFinishPresentation:]
  -[SBIconDragManager noteIconManagerEditingDidChange]
  -[SBIconDragManager coverSheetWillPresent:]
  -[SBIconDragManager setIconManager:]
  -[SBIconDragManager simulateiconDropSessionDidEnterWithIconIdentifiers:inIconListView:]
  -[SBIconDragManager simulateIconDragWithIdentifier:didPauseAtLocation:inIconListView:]
  -[SBIconDragManager simulatePerformIconDropWithIdentifier:inIconListView:]
  -[SBIconDragManager simulateIconDraggingEndedWithIdentifier:]


SBIconDraggingEditContext : NSObject /usr/lib/libSystem.B.dylib
 @property  id draggingUniqueIdentifier
 @property  {CGPoint=dd} enteredScreenLocation
 @property  BOOL enteredScreenLocationNeedsUpdate

  // instance methods
  -[SBIconDraggingEditContext .cxx_destruct]
  -[SBIconDraggingEditContext setDraggingUniqueIdentifier:]
  -[SBIconDraggingEditContext setEnteredScreenLocation:]
  -[SBIconDraggingEditContext draggingUniqueIdentifier]
  -[SBIconDraggingEditContext enteredScreenLocationNeedsUpdate]
  -[SBIconDraggingEditContext setEnteredScreenLocationNeedsUpdate:]
  -[SBIconDraggingEditContext enteredScreenLocation]


SBIconDragContext : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  long long state
 @property  BOOL userActive
 @property  BOOL hasUserDragged
 @property  SBPlaceholderIcon *iconPlaceholder
 @property  NSArray *grabbedIconViews
 @property  NSSet *itemIdentifiers
 @property  NSSet *sourceIcons
 @property  SBIconView *primaryIconView
 @property  BOOL waitingForMessage
 @property  NSSet *expectedMessages
 @property  BOOL performedIconDrop
 @property  BOOL cancelled
 @property  SBIconView *recipientIconView
 @property  NSSet *appLocalContexts
 @property  NSDate *lastUserInteractionDate
 @property  NSTimer *watchdogTimer
 @property  BOOL notifiedDelegateForDropSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconDragContext init]
  -[SBIconDragContext .cxx_destruct]
  -[SBIconDragContext isCancelled]
  -[SBIconDragContext state]
  -[SBIconDragContext setState:]
  -[SBIconDragContext succinctDescription]
  -[SBIconDragContext descriptionWithMultilinePrefix:]
  -[SBIconDragContext succinctDescriptionBuilder]
  -[SBIconDragContext descriptionBuilderWithMultilinePrefix:]
  -[SBIconDragContext itemIdentifiers]
  -[SBIconDragContext setCancelled:]
  -[SBIconDragContext setItemIdentifiers:]
  -[SBIconDragContext addItemIdentifier:]
  -[SBIconDragContext hasSourceIconView:]
  -[SBIconDragContext isUserActive]
  -[SBIconDragContext primaryIconView]
  -[SBIconDragContext lastUserInteractionDate]
  -[SBIconDragContext hasUserDragged]
  -[SBIconDragContext enumerateSourceIconViewsUsingBlock:]
  -[SBIconDragContext watchdogTimer]
  -[SBIconDragContext setWatchdogTimer:]
  -[SBIconDragContext isWaitingForMessage]
  -[SBIconDragContext expectedMessages]
  -[SBIconDragContext resetLastUserInteractionDate]
  -[SBIconDragContext setAppDragLocalContext:forDragItem:]
  -[SBIconDragContext appDragLocalContextForDragItem:]
  -[SBIconDragContext sourceIcons]
  -[SBIconDragContext iconPlaceholder]
  -[SBIconDragContext setIconPlaceholder:]
  -[SBIconDragContext grabbedIconViews]
  -[SBIconDragContext setGrabbedIconViews:]
  -[SBIconDragContext setInitialIndexPath:forIcon:]
  -[SBIconDragContext initialIndexPathForIcon:]
  -[SBIconDragContext initialIndexPathForIconWithIdentifier:]
  -[SBIconDragContext hasItemIdentifier:]
  -[SBIconDragContext swapSourceIconWithIdentifier:withIcon:]
  -[SBIconDragContext removeAllMessageExpectations]
  -[SBIconDragContext setRecipientIconView:]
  -[SBIconDragContext addMessageExpectationNamed:]
  -[SBIconDragContext setPrimaryIconView:]
  -[SBIconDragContext addSourceIcon:]
  -[SBIconDragContext addSourceIconView:]
  -[SBIconDragContext addGrabbedIconView:]
  -[SBIconDragContext removeMessageExpectationNamed:]
  -[SBIconDragContext performedIconDrop]
  -[SBIconDragContext setTargetIconView:forCancellingIconView:]
  -[SBIconDragContext targetIconViewForCancellingIconView:]
  -[SBIconDragContext setDragPreview:forIconView:]
  -[SBIconDragContext enumerateDragPreviewsUsingBlock:]
  -[SBIconDragContext hasEnteredIconListView:]
  -[SBIconDragContext addEnteredIconListView:]
  -[SBIconDragContext notifiedDelegateForDropSession]
  -[SBIconDragContext setNotifiedDelegateForDropSession:]
  -[SBIconDragContext recipientIconView]
  -[SBIconDragContext setBouncedIcon:forListModel:]
  -[SBIconDragContext listModelEnumeratorForBouncedIcons]
  -[SBIconDragContext bouncedIconForListModel:]
  -[SBIconDragContext setIcon:shouldExpandAfterDropAnimationForDragItems:]
  -[SBIconDragContext setDestinationFolderIconView:forIconWithIdentifier:]
  -[SBIconDragContext addDestinationIconView:]
  -[SBIconDragContext enumerateDestinationIconViewsUsingBlock:]
  -[SBIconDragContext setPerformedIconDrop:]
  -[SBIconDragContext destinationFolderIconViewForIconWithIdentifier:]
  -[SBIconDragContext addDropAnimatingDragItem:]
  -[SBIconDragContext iconToExpandAfterDropAnimationForDragItem:]
  -[SBIconDragContext isAnimatingDropForDragItem:]
  -[SBIconDragContext clearDropAssertionForIconView:]
  -[SBIconDragContext setSourceIcons:]
  -[SBIconDragContext setLastUserInteractionDate:]
  -[SBIconDragContext addAppLocalContext:]
  -[SBIconDragContext addSourceIcons:]
  -[SBIconDragContext hasMessageExpectationNamed:]
  -[SBIconDragContext appLocalContexts]


SBDefaultIconDragPreviewWindow : UIWindow /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconDragPreviewContaining>
 @property  UIView *iconDragPreviewContainerView

  // instance methods
  -[SBDefaultIconDragPreviewWindow iconDragPreviewContainerView]


SBIconAccessoryImage : UIImage /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBCountedMapValue>
 @property  NSString *countedMapKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconAccessoryImage .cxx_destruct]
  -[SBIconAccessoryImage initWithImage:]
  -[SBIconAccessoryImage countedMapKey]
  -[SBIconAccessoryImage setCountedMapKey:]


SBIconProgressView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  double backgroundAlpha
 @property  double foregroundAlpha
 @property  double circleRadiusFraction
 @property  double pauseRadiusFraction
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} circleBoundingRect
 @property  long long displayedState
 @property  BOOL displayingPaused
 @property  double displayedFraction
 @property  _SBIconProgressStateTransition *activeStateTransition
 @property  _SBIconProgressPausedTransition *activePausedTransition
 @property  _SBIconProgressFractionTransition *activeFractionTransition
 @property  <SBIconProgressViewDelegate> *delegate
 @property  UIImage *overlayImage
 @property  BOOL canAnimate
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo

  // class methods
  +[SBIconProgressView _pieImagesMemoryPool]
  +[SBIconProgressView _pieImageAtFraction:]

  // instance methods
  -[SBIconProgressView dealloc]
  -[SBIconProgressView delegate]
  -[SBIconProgressView setDelegate:]
  -[SBIconProgressView .cxx_destruct]
  -[SBIconProgressView descriptionWithMultilinePrefix:]
  -[SBIconProgressView descriptionBuilderWithMultilinePrefix:]
  -[SBIconProgressView initWithFrame:]
  -[SBIconProgressView _maskImage]
  -[SBIconProgressView drawRect:]
  -[SBIconProgressView backgroundAlpha]
  -[SBIconProgressView setBackgroundAlpha:]
  -[SBIconProgressView foregroundAlpha]
  -[SBIconProgressView setForegroundAlpha:]
  -[SBIconProgressView overlayImage]
  -[SBIconProgressView setOverlayImage:]
  -[SBIconProgressView _onDisplayLink:]
  -[SBIconProgressView iconImageInfo]
  -[SBIconProgressView _ensureDisplayLink]
  -[SBIconProgressView setIconImageInfo:]
  -[SBIconProgressView _updateTransitionsAnimated:]
  -[SBIconProgressView _clearDisplayLink]
  -[SBIconProgressView setActivePausedTransition:]
  -[SBIconProgressView setActiveStateTransition:]
  -[SBIconProgressView _updatePausedTransitionAnimated:]
  -[SBIconProgressView _updateStateTransitionAnimated:]
  -[SBIconProgressView setActiveFractionTransition:]
  -[SBIconProgressView _updateFractionTransitionAnimated:]
  -[SBIconProgressView _hasActiveTransitions]
  -[SBIconProgressView _drawPieWithCenter:]
  -[SBIconProgressView _drawOutgoingCircleWithCenter:]
  -[SBIconProgressView _drawIncomingCircleWithCenter:]
  -[SBIconProgressView _drawPauseUIWithCenter:]
  -[SBIconProgressView canAnimate]
  -[SBIconProgressView setState:paused:fractionLoaded:animated:]
  -[SBIconProgressView setCanAnimate:]
  -[SBIconProgressView circleBoundingRect]
  -[SBIconProgressView circleRadiusFraction]
  -[SBIconProgressView setCircleRadiusFraction:]
  -[SBIconProgressView pauseRadiusFraction]
  -[SBIconProgressView setPauseRadiusFraction:]
  -[SBIconProgressView displayedState]
  -[SBIconProgressView setDisplayedState:]
  -[SBIconProgressView displayingPaused]
  -[SBIconProgressView setDisplayingPaused:]
  -[SBIconProgressView displayedFraction]
  -[SBIconProgressView setDisplayedFraction:]
  -[SBIconProgressView activeStateTransition]
  -[SBIconProgressView activePausedTransition]
  -[SBIconProgressView activeFractionTransition]


_SBIconProgressTransition : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[_SBIconProgressTransition isCompleteWithView:]
  -[_SBIconProgressTransition completeTransitionAndUpdateView:]
  -[_SBIconProgressTransition updateView:withElapsedTime:]


_SBIconProgressStateTransition : _SBIconProgressTransition
  // class methods
  +[_SBIconProgressStateTransition newTransitionFromState:toState:]
  +[_SBIconProgressStateTransition _classForTransitionFromState:toState:]

  // instance methods
  -[_SBIconProgressStateTransition .cxx_destruct]
  -[_SBIconProgressStateTransition _updateView:]
  -[_SBIconProgressStateTransition isCompleteWithView:]
  -[_SBIconProgressStateTransition completeTransitionAndUpdateView:]
  -[_SBIconProgressStateTransition updateView:withElapsedTime:]
  -[_SBIconProgressStateTransition _initWithFromState:toState:]


_SBIconProgressNoneWaitingStateTransition : _SBIconProgressStateTransition
  // instance methods
  -[_SBIconProgressNoneWaitingStateTransition _updateView:]


_SBIconProgressWaitingLoadingStateTransition : _SBIconProgressStateTransition
  // instance methods
  -[_SBIconProgressWaitingLoadingStateTransition _updateView:]


_SBIconProgressLoadingNoneStateTransition : _SBIconProgressStateTransition
  // instance methods
  -[_SBIconProgressLoadingNoneStateTransition _updateView:]


_SBIconProgressPausedTransition : _SBIconProgressTransition
  // class methods
  +[_SBIconProgressPausedTransition newTransitionToPaused:]

  // instance methods
  -[_SBIconProgressPausedTransition .cxx_destruct]
  -[_SBIconProgressPausedTransition _updateView:]
  -[_SBIconProgressPausedTransition isCompleteWithView:]
  -[_SBIconProgressPausedTransition completeTransitionAndUpdateView:]
  -[_SBIconProgressPausedTransition updateToPaused:]
  -[_SBIconProgressPausedTransition updateView:withElapsedTime:]
  -[_SBIconProgressPausedTransition _initToPaused:]
  -[_SBIconProgressPausedTransition _updateTimingFunction]
  -[_SBIconProgressPausedTransition _updateElapsedTimeFromFraction]


_SBIconProgressFractionTransition : _SBIconProgressTransition
  // class methods
  +[_SBIconProgressFractionTransition newTransitionToFraction:]

  // instance methods
  -[_SBIconProgressFractionTransition isCompleteWithView:]
  -[_SBIconProgressFractionTransition completeTransitionAndUpdateView:]
  -[_SBIconProgressFractionTransition updateToFraction:]
  -[_SBIconProgressFractionTransition updateView:withElapsedTime:]
  -[_SBIconProgressFractionTransition _updateView:forDisplayedFraction:]


SBHMinusPageStepper : SBFSteppedAnimationTimingFunctionCalculator /System/Library/Frameworks/UIKit.framework/UIKit
 @property  double backgroundBlurAlpha
 @property  double pageControlAlpha

  // instance methods
  -[SBHMinusPageStepper init]
  -[SBHMinusPageStepper pageControlAlpha]
  -[SBHMinusPageStepper backgroundBlurAlpha]


SBHCustomIconListLayoutProvider : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayoutProvider>
 @property  NSDictionary *listLayouts
 @property  <SBIconListLayout> *defaultLayout

  // instance methods
  -[SBHCustomIconListLayoutProvider init]
  -[SBHCustomIconListLayoutProvider .cxx_destruct]
  -[SBHCustomIconListLayoutProvider defaultLayout]
  -[SBHCustomIconListLayoutProvider layoutForIconLocation:]
  -[SBHCustomIconListLayoutProvider initWithListLayouts:defaultLayout:]
  -[SBHCustomIconListLayoutProvider listLayouts]
  -[SBHCustomIconListLayoutProvider initWithListLayouts:]


SBHIconManager : NSObject /usr/lib/libSystem.B.dylib <UIPopoverPresentationControllerDelegate, SBReusableViewMapDelegate, SBRootFolderPageStateObserver, SBNestingViewControllerDelegate, SBHIconModelDelegate, PTSettingsKeyObserver, SBRootFolderDelegate, SBIconViewObserver, SBIconViewDelegate, SBIconViewQuerying, SBHomeScreenIconTransitionAnimatorDelegate, SBIconViewProviding, SBRootFolderControllerDelegate, SBIconLocationPresenting>
 @property  SBIconView *highlightedIconView
 @property  NSTimer *editingEndTimer
 @property  NSTimer *iconEditingFeedbackWarmTimer
 @property  SBRootFolderController *rootFolderController
 @property  UIViewController<SBHIconRootViewProviding> *rootViewController
 @property  SBIconView *previewInteractingIconView
 @property  NSIndexPath *postResetIndexPath
 @property  BOOL needsRelayout
 @property  BOOL animatingFolderCreation
 @property  BOOL animatingFolderOpeningOrClosing
 @property  BOOL animatingForUnscatter
 @property  SBFolder *closingFolder
 @property  BSEventQueue *transitionEventQueue
 @property  SBHomeScreenIconTransitionAnimator *currentTransitionAnimator
 @property  SBRootFolder *rootFolder
 @property  SBWorkspaceInteractionContext *currentInteractionContext
 @property  SBHHomeScreenSettings *homeScreenSettings
 @property  SBHRootFolderSettings *rootFolderSettings
 @property  NSString *precachedContentSizeCategory
 @property  SBIconView *popoverIconView
 @property  SBHomeScreenDefaults *homeScreenDefaults
 @property  UIViewController<SBHSidebarProvider> *sidebarViewController
 @property  BOOL resettingRootIconLists
 @property  <SBHIconManagerDelegate> *delegate
 @property  long long interfaceOrientation
 @property  SBHIconModel *iconModel
 @property  SBFolderController *openedFolderController
 @property  SBFloatingDockViewController *floatingDockViewController
 @property  BOOL dockPinnedForRotation
 @property  BOOL showsDoneButtonWhileEditing
 @property  BOOL editing
 @property  BOOL editingAllowed
 @property  BOOL iconDragging
 @property  BOOL rootFolderContentVisible
 @property  BOOL iconContentPossiblyVisibleOverApplication
 @property  UIImpactFeedbackGenerator *iconEditingFeedbackBehavior
 @property  _UILegibilitySettings *legibilitySettings
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  unsigned long listLayoutProviderLayoutOptions
 @property  SBLeafIcon *iconToReveal
 @property  BOOL allowsNestedFolders
 @property  BOOL scrolling
 @property  BOOL rootFolderScrolling
 @property  BOOL folderScrolling
 @property  BOOL trackingScroll
 @property  BOOL hasOpenFolder
 @property  SBFolder *openedFolder
 @property  BOOL canCloseFolders
 @property  BOOL hasAnimatingFolder
 @property  BOOL transitioning
 @property  BOOL performingExpandTransition
 @property  BOOL performingCancelledCollapseTransition
 @property  SBIconDragManager *iconDragManager
 @property  BOOL iconTouched
 @property  BOOL showingPullDownSearch
 @property  BOOL showingPullDownOrTodayViewSearch
 @property  BOOL showingSpotlightOrTodayView
 @property  BOOL showingTodayView
 @property  BOOL showingOrTransitioningToTodayView
 @property  BOOL transitioningHomeScreenState
 @property  BOOL sidebarVisible
 @property  BOOL sidebarEffectivelyVisible
 @property  BOOL sidebarVisibilityGestureActive
 @property  SBSearchGesture *searchGesture
 @property  SBIconPageIndicatorImageSetCache *iconPageIndicatorImageSetCache
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  NSString *statisticsSummary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *presentedIconLocations

  // class methods
  +[SBHIconManager defaultIconLayoutAnimationDuration]

  // instance methods
  -[SBHIconManager init]
  -[SBHIconManager delegate]
  -[SBHIconManager setDelegate:]
  -[SBHIconManager .cxx_destruct]
  -[SBHIconManager succinctDescription]
  -[SBHIconManager descriptionWithMultilinePrefix:]
  -[SBHIconManager succinctDescriptionBuilder]
  -[SBHIconManager descriptionBuilderWithMultilinePrefix:]
  -[SBHIconManager isScrolling]
  -[SBHIconManager interfaceOrientation]
  -[SBHIconManager setRootViewController:]
  -[SBHIconManager rootViewController]
  -[SBHIconManager isEditing]
  -[SBHIconManager setEditing:]
  -[SBHIconManager legibilitySettings]
  -[SBHIconManager setLegibilitySettings:]
  -[SBHIconManager isTransitioning]
  -[SBHIconManager settings:changedValueForKey:]
  -[SBHIconManager currentTransitionAnimator]
  -[SBHIconManager setCurrentTransitionAnimator:]
  -[SBHIconManager viewMap:makeNewViewOfClass:]
  -[SBHIconManager viewMap:maxRecycledViewsOfClass:]
  -[SBHIconManager viewMap:shouldRecycleView:]
  -[SBHIconManager recycledViewsContainerProviderForViewMap:]
  -[SBHIconManager homeScreenDefaults]
  -[SBHIconManager sidebarViewController]
  -[SBHIconManager iconModel]
  -[SBHIconManager dockListView]
  -[SBHIconManager searchGesture]
  -[SBHIconManager listLayoutProvider]
  -[SBHIconManager folderIconImageCache]
  -[SBHIconManager rootFolder]
  -[SBHIconManager _sizeCategoryDidChange:]
  -[SBHIconManager noteFloatingDockWillChangeHeight]
  -[SBHIconManager setFloatingDockViewController:]
  -[SBHIconManager layoutIconLists:animationType:forceRelayout:]
  -[SBHIconManager isDisplayingIcon:inLocation:]
  -[SBHIconManager isDisplayingIconView:]
  -[SBHIconManager iconViewForIcon:location:]
  -[SBHIconManager presentedIconLocations]
  -[SBHIconManager firstIconViewForIcon:inLocations:]
  -[SBHIconManager noteFloatingDockWillAnimateChangeInHeight]
  -[SBHIconManager isIconDragging]
  -[SBHIconManager iconDragManager]
  -[SBHIconManager isPresentingIconLocation:]
  -[SBHIconManager dequeueReusableIconViewOfClass:]
  -[SBHIconManager recycleIconView:]
  -[SBHIconManager isIconViewRecycled:]
  -[SBHIconManager configureIconView:forIcon:]
  -[SBHIconManager canCloseFolders]
  -[SBHIconManager controllerClassForFolderClass:]
  -[SBHIconManager setListLayoutProvider:]
  -[SBHIconManager iconPageIndicatorImageSetCache]
  -[SBHIconManager firstIconViewForIcon:]
  -[SBHIconManager accessibilityTintColorForScreenRect:]
  -[SBHIconManager controllerClassForFolder:]
  -[SBHIconManager folderController:canChangeCurrentPageIndexToIndex:]
  -[SBHIconManager folderController:draggedIconShouldDropFromListView:]
  -[SBHIconManager folderControllerShouldClose:withPinchGesture:]
  -[SBHIconManager folderControllerShouldBeginEditing:]
  -[SBHIconManager folderControllerShouldEndEditing:]
  -[SBHIconManager folderControllerWillBeginScrolling:]
  -[SBHIconManager folderControllerDidEndScrolling:]
  -[SBHIconManager folderController:iconListView:canHandleIconDropSession:]
  -[SBHIconManager folderController:iconListView:iconDropSessionDidEnter:]
  -[SBHIconManager folderController:iconListView:iconDropSessionDidUpdate:]
  -[SBHIconManager folderController:iconListView:iconDropSession:didPauseAtLocation:]
  -[SBHIconManager folderController:iconListView:iconDropSessionDidExit:]
  -[SBHIconManager folderController:iconListView:performIconDrop:]
  -[SBHIconManager folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBHIconManager folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBHIconManager folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBHIconManager folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBHIconManager minimumHomeScreenScaleForFolderController:]
  -[SBHIconManager folderControllerWillOpen:]
  -[SBHIconManager folderControllerWillClose:]
  -[SBHIconManager contentOverlayInsetsFromParentIfAvailableForFolderController:]
  -[SBHIconManager folderControllerWantsToHideStatusBar:]
  -[SBHIconManager fakeStatusBarForFolderController:]
  -[SBHIconManager folderController:willRemoveFakeStatusBar:]
  -[SBHIconManager statusBarStyleRequestForFolderController:]
  -[SBHIconManager statusBarEdgeInsetsForFolderController:]
  -[SBHIconManager folderController:willUseIconTransitionAnimator:forOperation:onViewController:animated:]
  -[SBHIconManager folderController:accessibilityTintColorForScreenRect:]
  -[SBHIconManager folderController:willCreateInnerFolderControllerWithConfiguration:]
  -[SBHIconManager firstIconViewForIcon:excludingLocations:]
  -[SBHIconManager isDisplayingIcon:inLocations:]
  -[SBHIconManager isDisplayingIcon:]
  -[SBHIconManager isDisplayingIconView:inLocation:]
  -[SBHIconManager enumerateDisplayedIconViewsForIcon:usingBlock:]
  -[SBHIconManager enumerateDisplayedIconViewsUsingBlock:]
  -[SBHIconManager iconImageCache]
  -[SBHIconManager nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBHIconManager folderControllerForFolder:]
  -[SBHIconManager unscatterAnimated:afterDelay:withCompletion:]
  -[SBHIconManager nestingViewController:interactionControllerForAnimationController:]
  -[SBHIconManager iconView:editingModeGestureRecognizerDidFire:]
  -[SBHIconManager additionalDragLiftScaleForIconView:]
  -[SBHIconManager iconViewShouldBeginShortcutsPresentation:]
  -[SBHIconManager containerViewForPresentingContextMenuForIconView:]
  -[SBHIconManager iconView:willUseContextMenuStyle:]
  -[SBHIconManager iconViewShortcutsPresentationDidFinish:]
  -[SBHIconManager applicationBundleURLForShortcutsWithIconView:]
  -[SBHIconManager applicationShortcutWidgetBundleIdentifierForShortcutsWithIconView:]
  -[SBHIconManager iconView:shouldActivateApplicationShortcutItem:atIndex:]
  -[SBHIconManager iconView:applicationShortcutItemsWithProposedItems:]
  -[SBHIconManager iconView:willRemoveIconLabelAccessoryView:]
  -[SBHIconManager iconView:iconLabelAccessoryViewOfType:]
  -[SBHIconManager iconView:willRemoveIconImageView:]
  -[SBHIconManager imageViewForIconView:]
  -[SBHIconManager iconView:shouldContinueToUseBackgroundViewForComponents:]
  -[SBHIconManager iconViewDisplaysBadges:]
  -[SBHIconManager iconView:parallaxSettingsForIconAccessoryView:]
  -[SBHIconManager iconView:iconAccessoryViewOfClass:]
  -[SBHIconManager iconView:willRemoveIconAccessoryView:]
  -[SBHIconManager icon:canReceiveGrabbedIcon:]
  -[SBHIconManager accessibilityTintColorForIconView:]
  -[SBHIconManager iconView:draggingStartLocationWithProposedStartLocation:]
  -[SBHIconManager launchActionsForIconView:]
  -[SBHIconManager launchURLForIconView:]
  -[SBHIconManager iconView:dragPreviewForItem:session:previewParameters:]
  -[SBHIconManager iconViewCanBeginDrags:]
  -[SBHIconManager iconView:willAnimateDragLiftWithAnimator:session:]
  -[SBHIconManager iconView:dragLiftAnimationDidChangeDirection:]
  -[SBHIconManager iconView:canAddDragItemsToSession:]
  -[SBHIconManager iconView:willAddDragItems:toSession:]
  -[SBHIconManager iconViewWillBeginDrag:session:]
  -[SBHIconManager iconView:session:willEndWithOperation:]
  -[SBHIconManager iconView:didEndDragSession:withOperation:]
  -[SBHIconManager iconViewWillCancelDrag:]
  -[SBHIconManager iconView:willUsePreviewForCancelling:targetIconView:]
  -[SBHIconManager iconView:item:willAnimateDragCancelWithAnimator:]
  -[SBHIconManager iconTouchBegan:]
  -[SBHIconManager icon:touchMoved:]
  -[SBHIconManager iconTapped:]
  -[SBHIconManager iconShouldAllowTap:]
  -[SBHIconManager iconShouldAllowCloseBoxTap:]
  -[SBHIconManager backgroundViewForComponentsOfIconView:]
  -[SBHIconManager iconViewDisplaysCloseBox:]
  -[SBHIconManager closeBoxTypeForIconView:]
  -[SBHIconManager iconCloseBoxTapped:]
  -[SBHIconManager icon:touchEnded:]
  -[SBHIconManager removeAllIconAnimations]
  -[SBHIconManager iconViewWasRecycled:]
  -[SBHIconManager iconView:labelImageWithParameters:]
  -[SBHIconManager rootFolder:canBounceIcon:]
  -[SBHIconManager showsDoneButtonWhileEditing]
  -[SBHIconManager dismissSpotlightAnimated:completionHandler:]
  -[SBHIconManager isDockPinnedForRotation]
  -[SBHIconManager isSidebarEffectivelyVisible]
  -[SBHIconManager isSidebarVisibilityGestureActive]
  -[SBHIconManager rootFolderControllerCanUseSeparateWindowForRotation:]
  -[SBHIconManager rootFolderController:statusBarInsetsDidChange:]
  -[SBHIconManager isSidebarVisible]
  -[SBHIconManager rootFolderController:wantsToAdjustTodayContentForEdgeBounceForScrollOffset:]
  -[SBHIconManager distanceToTopOfSpotlightIconsForRootFolderController:]
  -[SBHIconManager maxExternalDockHeightForRootFolderController:]
  -[SBHIconManager externalDockHeightForRootFolderController:]
  -[SBHIconManager preferredExternalDockVerticalMarginForRootFolderController:]
  -[SBHIconManager backgroundViewForDockForRootFolderController:]
  -[SBHIconManager backgroundViewForEditingDoneButtonForRootFolderController:]
  -[SBHIconManager rootFolderController:didChangeSidebarVisibilityProgress:]
  -[SBHIconManager rootFolderController:didChangeEffectiveSidebarVisibilityProgress:]
  -[SBHIconManager rootFolderController:didOverscrollOnFirstPageByAmount:]
  -[SBHIconManager rootFolderController:didEndOverscrollOnFirstPageWithVelocity:]
  -[SBHIconManager rootFolderController:willUsePropertyAnimator:toTransitionToState:]
  -[SBHIconManager rootFolderPageStateProvider:willBeginTransitionToState:animated:interactive:]
  -[SBHIconManager enumeratePageStateObserversUsingBlock:]
  -[SBHIconManager rootFolderController:willUseTransitionContext:toTransitionToState:]
  -[SBHIconManager rootFolderPageStateProvider:didContinueTransitionToState:progress:]
  -[SBHIconManager rootFolderPageStateProvider:willEndTransitionToState:successfully:]
  -[SBHIconManager rootFolderPageStateProvider:didEndTransitionFromState:toState:successfully:]
  -[SBHIconManager externalDockIconListViewForRootFolderController:]
  -[SBHIconManager setSidebarViewController:]
  -[SBHIconManager addPageStateObserver:]
  -[SBHIconManager removePageStateObserver:]
  -[SBHIconManager rootFolderController]
  -[SBHIconManager rootFolderSettings]
  -[SBHIconManager iconDragManager:didEndDragOriginatingFromIconView:userDidBeginDrag:lastUserInteractionDate:]
  -[SBHIconManager iconDragManagerIconDraggingDidChange:]
  -[SBHIconManager getListView:folder:relativePath:forIndexPath:createIfNecessary:]
  -[SBHIconManager uninstallIcon:animate:]
  -[SBHIconManager layoutIconListsWithAnimationType:]
  -[SBHIconManager cancelAllDrags]
  -[SBHIconManager isEditingAllowed]
  -[SBHIconManager isIconContentPossiblyVisibleOverApplication]
  -[SBHIconManager floatingDockViewController]
  -[SBHIconManager isRootFolderContentVisible]
  -[SBHIconManager layoutIconListsWithAnimationType:forceRelayout:]
  -[SBHIconManager iconEditingFeedbackBehavior]
  -[SBHIconManager setEditing:withFeedbackBehavior:]
  -[SBHIconManager iconDragManagerMultiItemIconDraggingDidChange:]
  -[SBHIconManager isIconCurrentlyOnscreen:]
  -[SBHIconManager isTrackingScroll]
  -[SBHIconManager createNewFolderFromRecipientIcon:grabbedIcon:]
  -[SBHIconManager addIcons:intoFolderIcon:openFolderOnFinish:complete:]
  -[SBHIconManager pushExpandedIcon:location:animated:completionHandler:]
  -[SBHIconManager allowsNestedFolders]
  -[SBHIconManager _reduceTransparencyStatusDidChange:]
  -[SBHIconManager hasRootViewController]
  -[SBHIconManager _prepareToResetRootIconLists]
  -[SBHIconManager _iconModelWillReloadIcons:]
  -[SBHIconManager _iconModelDidReloadIcons:]
  -[SBHIconManager _iconModelWillLayout:]
  -[SBHIconManager _iconModelDidLayout:]
  -[SBHIconManager setRootFolder:]
  -[SBHIconManager _rootFolderForRootViewControllerForRootFolder:]
  -[SBHIconManager _precacheImagesForRootIcons]
  -[SBHIconManager hasAnimatingFolder]
  -[SBHIconManager setNeedsRelayout:]
  -[SBHIconManager iconLocationForPrecachingImages]
  -[SBHIconManager iconViewClass]
  -[SBHIconManager setPrecachedContentSizeCategory:]
  -[SBHIconManager relayout]
  -[SBHIconManager addNewIconToDesignatedLocation:animate:scrollToList:saveIconState:]
  -[SBHIconManager _finishResetRootIconLists]
  -[SBHIconManager _finishResetRootIconListsReusingPreviousControllers:]
  -[SBHIconManager setResettingRootIconLists:]
  -[SBHIconManager hasOpenFolder]
  -[SBHIconManager openedFolderController]
  -[SBHIconManager setPostResetIndexPath:]
  -[SBHIconManager closeFolderAnimated:withCompletion:]
  -[SBHIconManager setRootFolderController:]
  -[SBHIconManager _createAppropriateRootViewControllerForRootFolder:]
  -[SBHIconManager postResetIndexPath]
  -[SBHIconManager homeScreenSettings]
  -[SBHIconManager _createRootTableControllerForRootFolder:]
  -[SBHIconManager _createRootFolderControllerForRootFolder:]
  -[SBHIconManager allowedInterfaceOrientations]
  -[SBHIconManager setShowsDoneButtonWhileEditing:]
  -[SBHIconManager setDockPinnedForRotation:]
  -[SBHIconManager _configureRootFolderConfiguration:]
  -[SBHIconManager isResettingRootIconLists]
  -[SBHIconManager openedFolder]
  -[SBHIconManager setPreviewInteractingIconView:]
  -[SBHIconManager editingEndTimer]
  -[SBHIconManager setEditingEndTimer:]
  -[SBHIconManager _restartEditingEndTimer]
  -[SBHIconManager isIconTouched]
  -[SBHIconManager reasonToDisallowTapOnIconView:]
  -[SBHIconManager canOpenFolders]
  -[SBHIconManager highlightedIconView]
  -[SBHIconManager setHighlightedIconView:]
  -[SBHIconManager effectiveDockListView]
  -[SBHIconManager floatingDockListView]
  -[SBHIconManager iconsShouldAllowCloseBoxes]
  -[SBHIconManager enumerateIconModelsUsingBlock:]
  -[SBHIconManager iconToReveal]
  -[SBHIconManager setIconToReveal:]
  -[SBHIconManager uninstallIcon:]
  -[SBHIconManager uninstallIcon:animate:completion:]
  -[SBHIconManager removeIcon:options:completion:]
  -[SBHIconManager iconListViewForIndexPath:]
  -[SBHIconManager popExpandedIconAnimated:completionHandler:]
  -[SBHIconManager setIconToReveal:revealingPrevious:]
  -[SBHIconManager _currentFolderController]
  -[SBHIconManager _tryScrollToIconToRevealAnimated:]
  -[SBHIconManager _enqueueTransitionName:withHandler:]
  -[SBHIconManager finishInstallingIconAnimated:]
  -[SBHIconManager popToCurrentRootIconList]
  -[SBHIconManager layoutIconListsWithAnimationType:duration:forceRelayout:]
  -[SBHIconManager setAnimatingForUnscatter:]
  -[SBHIconManager _ensureRootFolderController]
  -[SBHIconManager iconListViewAtIndex:inFolder:createIfNecessary:]
  -[SBHIconManager currentRootIconList]
  -[SBHIconManager addDownloadingIconsForDataSources:]
  -[SBHIconManager replaceDownloadingIconsForDataSources:withIconsFromGenerator:]
  -[SBHIconManager maxListCountForFolders]
  -[SBHIconManager maxIconCountForListInFolderClass:]
  -[SBHIconManager _updateVisibleIconsViewsForAllowableCloseBoxes]
  -[SBHIconManager hasRootFolderController]
  -[SBHIconManager isAnimatingFolderOpeningOrClosing]
  -[SBHIconManager isAnimatingFolderCreation]
  -[SBHIconManager hasAnimatingFolderChanged]
  -[SBHIconManager _proposedFolderNameForGrabbedIcon:recipientIcon:]
  -[SBHIconManager setAnimatingFolderCreation:]
  -[SBHIconManager localizedDefaultFolderName]
  -[SBHIconManager openFolderIcon:location:animated:withCompletion:]
  -[SBHIconManager popExpandedIconFromLocation:interactionContext:animated:completionHandler:]
  -[SBHIconManager setCurrentInteractionContext:]
  -[SBHIconManager isRootFolderScrolling]
  -[SBHIconManager isFolderScrolling]
  -[SBHIconManager _animateFolderIcon:open:location:animated:withCompletion:]
  -[SBHIconManager setAnimatingFolderOpeningOrClosing:]
  -[SBHIconManager _closeFolderController:animated:withCompletion:]
  -[SBHIconManager setClosingFolder:]
  -[SBHIconManager _cleanupForClosingFolderAnimated:]
  -[SBHIconManager _compactRootListsAfterFolderCloseWithAnimation:]
  -[SBHIconManager _folderDidFinishOpenClose:animated:success:]
  -[SBHIconManager replaceFolderIcon:byContainedIcon:animated:]
  -[SBHIconManager transitionEventQueue]
  -[SBHIconManager isShowingTodayView]
  -[SBHIconManager presentSpotlightFromSource:fromBreadcrumb:animated:completionHandler:]
  -[SBHIconManager isShowingOrTransitioningToTodayView]
  -[SBHIconManager _isShowingPullDownSearchOrTransitioning]
  -[SBHIconManager _isShowingTodayViewSearchOrTransitioning]
  -[SBHIconManager isShowingPullDownSearch]
  -[SBHIconManager _isShowingTodayViewSearch]
  -[SBHIconManager _isShowingSearchableTodayView]
  -[SBHIconManager _isShowingOrTransitioningToSearchableTodayView]
  -[SBHIconManager getStatistics:]
  -[SBHIconManager precachedContentSizeCategory]
  -[SBHIconManager _addTouchedIconView:]
  -[SBHIconManager shouldHighlightTouchedIconView:]
  -[SBHIconManager highlightIconView:]
  -[SBHIconManager iconEditingFeedbackWarmTimer]
  -[SBHIconManager setIconEditingFeedbackWarmTimer:]
  -[SBHIconManager _removeTouchedIconView:]
  -[SBHIconManager reasonToDisallowInteractionOnIconView:]
  -[SBHIconManager clearHighlightedIcon]
  -[SBHIconManager _shouldRespondToIconCloseBoxes]
  -[SBHIconManager _noteUserIsInteractingWithIcons]
  -[SBHIconManager iconAllowsBadging:]
  -[SBHIconManager homescreenIconImageViewMap]
  -[SBHIconManager homescreenIconAccessoryViewMap]
  -[SBHIconManager _shouldParallaxInIconLocation:]
  -[SBHIconManager homescreenIconLabelAccessoryViewMap]
  -[SBHIconManager iconLabelImageCache]
  -[SBHIconManager previewInteractingIconView]
  -[SBHIconManager _setupApplicationShortcutItemsForPresentation:]
  -[SBHIconManager iconViewMap]
  -[SBHIconManager shouldRecycleIconView:]
  -[SBHIconManager isPerformingCancelledExpandTransition]
  -[SBHIconManager enumerateIconViewQueryableChildrenUsingBlock:]
  -[SBHIconManager isDisplayingIcon:options:]
  -[SBHIconManager isFloatingDockVisible]
  -[SBHIconManager currentInteractionContext]
  -[SBHIconManager performAfterAllIconTouchesFinishedUsingBlock:]
  -[SBHIconManager noteIconStateChangedExternally]
  -[SBHIconManager localizedFolderNameForDefaultDisplayName:]
  -[SBHIconManager tearDownAndResetRootIconLists]
  -[SBHIconManager listLayoutProviderLayoutOptions]
  -[SBHIconManager maxListCountForFoldersForIconModel:]
  -[SBHIconManager iconModel:maxIconCountForListInFolderClass:]
  -[SBHIconManager maxIconCountForDockForIconModel:]
  -[SBHIconManager iconModel:maxRowCountForListInRootFolderWithInterfaceOrientation:]
  -[SBHIconManager iconModel:maxColumnCountForListInRootFolderWithInterfaceOrientation:]
  -[SBHIconManager supportsDockForIconModel:]
  -[SBHIconManager iconModel:customInsertionIndexPathForIcon:inRootFolder:]
  -[SBHIconManager iconModel:launchIcon:fromLocation:context:]
  -[SBHIconManager iconModel:localizedFolderNameForDefaultDisplayName:]
  -[SBHIconManager canSaveIconState:]
  -[SBHIconManager didSaveIconState:]
  -[SBHIconManager didDeleteIconState:]
  -[SBHIconManager defaultIconStateForIconModel:]
  -[SBHIconManager firstPageLeafIdentifiersForIconModel:]
  -[SBHIconManager iconModel:shouldAvoidPlacingIconOnFirstPage:]
  -[SBHIconManager iconModel:willRemoveIcon:]
  -[SBHIconManager rootFolder:shouldAllowBadgingForIcon:]
  -[SBHIconManager iconViewShortcutsPresentationDidCancel:]
  -[SBHIconManager animator:animationSettingsForOperation:childViewController:]
  -[SBHIconManager animator:canAlterViewHierarchyDuringCleanupUsingBlock:]
  -[SBHIconManager noteInterfaceOrientationChanged]
  -[SBHIconManager setIconModel:]
  -[SBHIconManager updateVisibleIconsToShowLeafIcons:hideLeafIcons:forceRelayout:]
  -[SBHIconManager resetRootIconLists]
  -[SBHIconManager setListLayoutProviderLayoutOptions:]
  -[SBHIconManager clearHighlightedIcon:]
  -[SBHIconManager rootIconListAtIndex:]
  -[SBHIconManager floatingDockSuggestionsListView]
  -[SBHIconManager isIconVisiblyRepresented:]
  -[SBHIconManager addNewIconsToDesignatedLocations:saveIconState:]
  -[SBHIconManager scrollToIconListContainingIcon:animate:]
  -[SBHIconManager animateToDefaultStateWithCompletionHandler:]
  -[SBHIconManager tryScrollToIconToRevealAnimated:]
  -[SBHIconManager setIdleModeText:]
  -[SBHIconManager viewControllerForPresentingViewControllers]
  -[SBHIconManager resetIconLayoutWithOptions:]
  -[SBHIconManager runDownloadingIconTest]
  -[SBHIconManager organizeAllIconsIntoFolders]
  -[SBHIconManager hasOpenFolderInLocation:]
  -[SBHIconManager currentIconListIndex]
  -[SBHIconManager popToCurrentRootIconListWhenPossible]
  -[SBHIconManager isPerformingExpandTransition]
  -[SBHIconManager isPerformingCancelledCollapseTransition]
  -[SBHIconManager cancelAllFolderScrolling]
  -[SBHIconManager activateTodayViewWithCompletion:]
  -[SBHIconManager presentSpotlightFromBreadcrumb:animated:completionHandler:]
  -[SBHIconManager dismissSpotlightOrTodayViewAnimated:]
  -[SBHIconManager isShowingPullDownOrTodayViewSearch]
  -[SBHIconManager isShowingSpotlightOrTodayView]
  -[SBHIconManager isTransitioningHomeScreenState]
  -[SBHIconManager statisticsSummary]
  -[SBHIconManager presentStatistics]
  -[SBHIconManager addFolderPresentationObserver:]
  -[SBHIconManager removeFolderPresentationObserver:]
  -[SBHIconManager isAnimatingForUnscatter]
  -[SBHIconManager needsRelayout]
  -[SBHIconManager closingFolder]
  -[SBHIconManager popoverIconView]
  -[SBHIconManager setPopoverIconView:]


SBHFakeDownloadingIconDataSource : NSObject /usr/lib/libSystem.B.dylib <SBDownloadingIconDataSource>
 @property  NSString *applicationBundleID
 @property  NSString *applicationDisplayName
 @property  double progress
 @property  BOOL isCloudDemoted
 @property  BOOL isPrioritizable
 @property  BOOL isPausable
 @property  BOOL isCancelable
 @property  BOOL isPaused
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL active
 @property  BOOL waiting
 @property  BOOL paused
 @property  BOOL pausable
 @property  BOOL failed
 @property  BOOL cancelable
 @property  BOOL installing
 @property  BOOL downloading
 @property  BOOL prioritizable
 @property  BOOL cloudDemoted
 @property  Class iconClass

  // instance methods
  -[SBHFakeDownloadingIconDataSource .cxx_destruct]
  -[SBHFakeDownloadingIconDataSource isActive]
  -[SBHFakeDownloadingIconDataSource cancel]
  -[SBHFakeDownloadingIconDataSource pause]
  -[SBHFakeDownloadingIconDataSource resume]
  -[SBHFakeDownloadingIconDataSource prioritize]
  -[SBHFakeDownloadingIconDataSource progress]
  -[SBHFakeDownloadingIconDataSource isPaused]
  -[SBHFakeDownloadingIconDataSource isPausable]
  -[SBHFakeDownloadingIconDataSource isPrioritizable]
  -[SBHFakeDownloadingIconDataSource isInstalling]
  -[SBHFakeDownloadingIconDataSource applicationBundleID]
  -[SBHFakeDownloadingIconDataSource isFailed]
  -[SBHFakeDownloadingIconDataSource setProgress:]
  -[SBHFakeDownloadingIconDataSource isDownloading]
  -[SBHFakeDownloadingIconDataSource isCancelable]
  -[SBHFakeDownloadingIconDataSource setIsPaused:]
  -[SBHFakeDownloadingIconDataSource isWaiting]
  -[SBHFakeDownloadingIconDataSource isCloudDemoted]
  -[SBHFakeDownloadingIconDataSource applicationDisplayName]
  -[SBHFakeDownloadingIconDataSource setApplicationBundleID:]
  -[SBHFakeDownloadingIconDataSource setApplicationDisplayName:]
  -[SBHFakeDownloadingIconDataSource priorityForIcon:]
  -[SBHFakeDownloadingIconDataSource icon:displayNameForLocation:]
  -[SBHFakeDownloadingIconDataSource icon:imageWithInfo:]
  -[SBHFakeDownloadingIconDataSource progressStateForIcon:]
  -[SBHFakeDownloadingIconDataSource progressPercentForIcon:]
  -[SBHFakeDownloadingIconDataSource setIsCancelable:]
  -[SBHFakeDownloadingIconDataSource setIsCloudDemoted:]
  -[SBHFakeDownloadingIconDataSource setIsPausable:]
  -[SBHFakeDownloadingIconDataSource setIsPrioritizable:]


SBRootFolderDockIconListView : SBDockIconListView
  // instance methods
  -[SBRootFolderDockIconListView originForIconAtCoordinate:numberOfIcons:]


SBIconIndexMutableList : NSObject /usr/lib/libSystem.B.dylib <SBIconIndexNodeObserver, NSFastEnumeration>
 @property  <SBIconIndexMutableListObserver> *observer
 @property  <SBIconIndexNode> *firstNode
 @property  <SBIconIndexNode> *lastNode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconIndexMutableList init]
  -[SBIconIndexMutableList dealloc]
  -[SBIconIndexMutableList count]
  -[SBIconIndexMutableList observer]
  -[SBIconIndexMutableList countByEnumeratingWithState:objects:count:]
  -[SBIconIndexMutableList .cxx_destruct]
  -[SBIconIndexMutableList sortUsingSelector:]
  -[SBIconIndexMutableList setObserver:]
  -[SBIconIndexMutableList addNode:]
  -[SBIconIndexMutableList nodes]
  -[SBIconIndexMutableList removeNode:]
  -[SBIconIndexMutableList containsNode:]
  -[SBIconIndexMutableList firstNode]
  -[SBIconIndexMutableList removeAllNodes]
  -[SBIconIndexMutableList enumerateNodesUsingBlock:]
  -[SBIconIndexMutableList lastNode]
  -[SBIconIndexMutableList node:didAddContainedNodeIdentifiers:]
  -[SBIconIndexMutableList node:didRemoveContainedNodeIdentifiers:]
  -[SBIconIndexMutableList nodeDidMoveContainedNodes:]
  -[SBIconIndexMutableList containsNodeIdentifier:]
  -[SBIconIndexMutableList indexOfNode:]
  -[SBIconIndexMutableList indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBIconIndexMutableList nodeAtIndex:]
  -[SBIconIndexMutableList nodesAlongIndexPath:consumedIndexes:]
  -[SBIconIndexMutableList containedNodeIdentifiers]
  -[SBIconIndexMutableList insertNode:atIndex:]
  -[SBIconIndexMutableList removeNodesAtIndexes:]
  -[SBIconIndexMutableList moveNodes:toContiguousIndicesStartingAt:]
  -[SBIconIndexMutableList nodesContainingNodeIdentifier:]
  -[SBIconIndexMutableList indexOfNodePassingTest:]
  -[SBIconIndexMutableList indexesOfNodesPassingTest:]
  -[SBIconIndexMutableList replaceNodeAtIndex:withNode:]
  -[SBIconIndexMutableList removeNodeAtIndex:]
  -[SBIconIndexMutableList removeLastNode]
  -[SBIconIndexMutableList moveNode:toIndex:]
  -[SBIconIndexMutableList enumerateNodesWithOptions:usingBlock:]
  -[SBIconIndexMutableList indexDescriptionWithPrefix:]


SBIconPageIndicatorImageSetResult : NSObject /usr/lib/libSystem.B.dylib
 @property  _UILegibilityImageSet *pageIndicatorSet
 @property  _UILegibilityImageSet *enabledPageIndicatorSet

  // instance methods
  -[SBIconPageIndicatorImageSetResult .cxx_destruct]
  -[SBIconPageIndicatorImageSetResult enabledPageIndicatorSet]
  -[SBIconPageIndicatorImageSetResult pageIndicatorSet]
  -[SBIconPageIndicatorImageSetResult initWithIndicatorSet:enabledIndicatorSet:]


SBIconPageIndicatorImageSetCache : NSObject /usr/lib/libSystem.B.dylib
 @property  _UILegibilitySettings *legibilitySettings

  // instance methods
  -[SBIconPageIndicatorImageSetCache .cxx_destruct]
  -[SBIconPageIndicatorImageSetCache legibilitySettings]
  -[SBIconPageIndicatorImageSetCache setLegibilitySettings:]
  -[SBIconPageIndicatorImageSetCache pageIndicatorImageSetForLegibilitySettings:]
  -[SBIconPageIndicatorImageSetCache searchIndicatorImageSetForLegibilitySettings:]
  -[SBIconPageIndicatorImageSetCache _emptyPageIndicatorSet]
  -[SBIconPageIndicatorImageSetCache cameraIndicatorImageSetForLegibilitySettings:]


SBFolderView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconListPageControlDelegate, UITextFieldDelegate, SBIconScrollViewDelegate, BSDescriptionProviding, SBIconListViewDragDelegate>
 @property  BOOL rotating
 @property  BOOL hasEverBeenInAWindow
 @property  UIPanGestureRecognizer *scrollingDisabledGestureRecognizer
 @property  UIView *scalingView
 @property  BOOL scalingViewBorrowed
 @property  long long orientation
 @property  SBIconListPageControl *pageControl
 @property  _UILegibilitySettings *legibilitySettingsForIconListViews
 @property  double pageControlAreaHeight
 @property  long long minimumPageIndex
 @property  long long maximumPageIndex
 @property  long long defaultPageIndex
 @property  long long firstIconPageIndex
 @property  long long lastIconPageIndex
 @property  unsigned long pageCount
 @property  double additionalScrollWidthToKeepVisibleInOneDirection
 @property  SBFolderTitleTextField *titleTextField
 @property  long long iconVisibilityHandling
 @property  BOOL updatesPredictedVisibleColumnWhileScrolling
 @property  double scrollableWidthForVisibleColumnRange
 @property  double minimumVisibleScrollOffset
 @property  double maximumVisibleScrollOffset
 @property  BOOL RTL
 @property  <SBFolderViewDelegate> *delegate
 @property  SBFolder *folder
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  SBIconLayoutOverrideStrategy *iconLayoutOverrideStrategy
 @property  BOOL editing
 @property  BOOL scrolling
 @property  unsigned long allowedOrientations
 @property  long long currentPageIndex
 @property  NSArray *iconListViews
 @property  unsigned long iconListViewCount
 @property  <SBIconViewProviding> *iconViewProvider
 @property  double statusBarHeight
 @property  double effectiveStatusBarHeight
 @property  unsigned long userInterfaceLayoutDirectionHandling
 @property  long long userInterfaceLayoutDirection
 @property  NSString *iconLocation
 @property  UIView *headerView
 @property  double headerHeight
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIScrollView *scrollView
 @property  SBIconListView *currentIconListView
 @property  BOOL pageControlHidden
 @property  double pageControlAlpha
 @property  BOOL occluded
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  SBIconPageIndicatorImageSetCache *iconPageIndicatorImageSetCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFolderView defaultIconLocation]
  +[SBFolderView defaultIconListViewClass]
  +[SBFolderView _pageOffsetForOffset:behavior:pageWidth:pageCount:userInterfaceLayoutDirection:fractionOfDistanceThroughPage:]
  +[SBFolderView _scrollViewClass]
  +[SBFolderView countOfAdditionalPagesToKeepVisibleInOneDirection]

  // instance methods
  -[SBFolderView dealloc]
  -[SBFolderView delegate]
  -[SBFolderView setDelegate:]
  -[SBFolderView .cxx_destruct]
  -[SBFolderView orientation]
  -[SBFolderView setOrientation:]
  -[SBFolderView initWithConfiguration:]
  -[SBFolderView succinctDescription]
  -[SBFolderView descriptionWithMultilinePrefix:]
  -[SBFolderView succinctDescriptionBuilder]
  -[SBFolderView descriptionBuilderWithMultilinePrefix:]
  -[SBFolderView isScrolling]
  -[SBFolderView isRTL]
  -[SBFolderView userInterfaceLayoutDirection]
  -[SBFolderView setNeedsLayout]
  -[SBFolderView layoutSubviews]
  -[SBFolderView scrollViewDidScroll:]
  -[SBFolderView scrollViewWillBeginDragging:]
  -[SBFolderView scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBFolderView scrollViewDidEndDragging:willDecelerate:]
  -[SBFolderView scrollViewDidEndDecelerating:]
  -[SBFolderView scrollViewDidEndScrollingAnimation:]
  -[SBFolderView _showsTitle]
  -[SBFolderView headerView]
  -[SBFolderView didMoveToSuperview]
  -[SBFolderView didMoveToWindow]
  -[SBFolderView didAddSubview:]
  -[SBFolderView willMoveToWindow:]
  -[SBFolderView hitTest:withEvent:]
  -[SBFolderView setContentAlpha:]
  -[SBFolderView isEditing]
  -[SBFolderView statusBarHeight]
  -[SBFolderView isOccluded]
  -[SBFolderView setEditing:animated:]
  -[SBFolderView isRotating]
  -[SBFolderView scrollView]
  -[SBFolderView pageCount]
  -[SBFolderView pageControl]
  -[SBFolderView legibilitySettings]
  -[SBFolderView setLegibilitySettings:]
  -[SBFolderView _orientationDidChange:]
  -[SBFolderView setOccluded:]
  -[SBFolderView setStatusBarHeight:]
  -[SBFolderView setPageControl:]
  -[SBFolderView prepareForTransition]
  -[SBFolderView textFieldShouldReturn:]
  -[SBFolderView textFieldShouldBeginEditing:]
  -[SBFolderView textFieldDidEndEditing:]
  -[SBFolderView headerHeight]
  -[SBFolderView _interactionTintColor]
  -[SBFolderView setRotating:]
  -[SBFolderView scrollView:contentSizeForZoomScale:withProposedSize:]
  -[SBFolderView _layoutSubviews]
  -[SBFolderView currentPageIndex]
  -[SBFolderView folder]
  -[SBFolderView setFolder:]
  -[SBFolderView scrollViewDidEndScrolling:]
  -[SBFolderView allowedOrientations]
  -[SBFolderView _titleFontSize]
  -[SBFolderView setCurrentPageIndex:animated:]
  -[SBFolderView _pageWidth]
  -[SBFolderView _scrollViewContentSize]
  -[SBFolderView currentIconListView]
  -[SBFolderView scalingViewFrame]
  -[SBFolderView listLayoutProvider]
  -[SBFolderView folderIconImageCache]
  -[SBFolderView iconListViews]
  -[SBFolderView borrowScalingView]
  -[SBFolderView returnScalingView]
  -[SBFolderView iconLocation]
  -[SBFolderView enumerateIconListViewsUsingBlock:]
  -[SBFolderView layoutIconLists:animationType:forceRelayout:]
  -[SBFolderView setFolderIconImageCache:]
  -[SBFolderView iconListView:previewForDroppingIconDragItem:proposedPreview:]
  -[SBFolderView iconListView:iconDragItem:willAnimateDropWithAnimator:]
  -[SBFolderView iconViewProvider]
  -[SBFolderView iconPageIndicatorImageSetCache]
  -[SBFolderView setIconPageIndicatorImageSetCache:]
  -[SBFolderView scalingView]
  -[SBFolderView iconListView:canHandleIconDropSession:]
  -[SBFolderView iconListView:iconDropSessionDidEnter:]
  -[SBFolderView iconListView:iconDropSessionDidUpdate:]
  -[SBFolderView iconListView:iconDropSession:didPauseAtLocation:]
  -[SBFolderView iconListView:iconDropSessionDidExit:]
  -[SBFolderView iconListView:performIconDrop:]
  -[SBFolderView iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:]
  -[SBFolderView iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:]
  -[SBFolderView iconImageCache]
  -[SBFolderView defaultPageIndex]
  -[SBFolderView updateAccessibilityTintColors]
  -[SBFolderView doesPageContainIconListView:]
  -[SBFolderView prepareToOpen]
  -[SBFolderView willTransitionAnimated:withSettings:]
  -[SBFolderView fadeContentForMagnificationFraction:]
  -[SBFolderView didTransitionAnimated:]
  -[SBFolderView iconListViewIndexForPageIndex:]
  -[SBFolderView fadeContentForMinificationFraction:]
  -[SBFolderView _titleTextField]
  -[SBFolderView iconLayoutOverrideStrategy]
  -[SBFolderView setIconLayoutOverrideStrategy:]
  -[SBFolderView setCurrentPageIndex:animated:completion:]
  -[SBFolderView iconListViewCount]
  -[SBFolderView pageIndexForIconListViewIndex:]
  -[SBFolderView animateScrollToDefaultPageWithCompletionHandler:]
  -[SBFolderView minimumPageIndex]
  -[SBFolderView maximumPageIndex]
  -[SBFolderView firstIconPageIndex]
  -[SBFolderView lastIconPageIndex]
  -[SBFolderView iconListViewAtIndex:]
  -[SBFolderView iconListViewAtPoint:]
  -[SBFolderView iconListViewForTouch:]
  -[SBFolderView iconListViewForDrag:]
  -[SBFolderView _setScrollingDisabled:forReason:]
  -[SBFolderView cancelScrolling]
  -[SBFolderView userInterfaceLayoutDirectionHandling]
  -[SBFolderView setIconImageCache:]
  -[SBFolderView isPageControlHidden]
  -[SBFolderView setPageControlHidden:]
  -[SBFolderView pageControlAlpha]
  -[SBFolderView setPageControlAlpha:]
  -[SBFolderView tearDownListViews]
  -[SBFolderView resetIconListViews]
  -[SBFolderView iconListViewWithList:]
  -[SBFolderView noteUserIsInteractingWithIcons]
  -[SBFolderView transitionToSize:withTransitionCoordinator:]
  -[SBFolderView listViewClass]
  -[SBFolderView updateIconListViews]
  -[SBFolderView pageControl:didReceiveTouchInDirection:]
  -[SBFolderView _backgroundContrastDidChange:]
  -[SBFolderView _legibilitySettingsWithPrimaryColor:]
  -[SBFolderView updateIconListIndexAndVisibility:]
  -[SBFolderView resetContentOffsetToCurrentPageAnimated:]
  -[SBFolderView firstIconListView]
  -[SBFolderView _updateIconListFrames]
  -[SBFolderView _updateIconListLegibilitySettings]
  -[SBFolderView legibilitySettingsForIconListViews]
  -[SBFolderView effectiveStatusBarHeight]
  -[SBFolderView pageControlAreaHeight]
  -[SBFolderView additionalScrollWidthToKeepVisibleInOneDirection]
  -[SBFolderView isScalingViewBorrowed]
  -[SBFolderView folderDidChange]
  -[SBFolderView _updateEditingStateAnimated:]
  -[SBFolderView cleanUpAfterTransition]
  -[SBFolderView _updatePageControlNumberOfPages]
  -[SBFolderView _updatePageControlToIndex:]
  -[SBFolderView _iconListFrameForPageRect:atIndex:]
  -[SBFolderView iconLocationForListAtIndex:]
  -[SBFolderView additionalIconListViews]
  -[SBFolderView _shouldIgnoreScrollingDidEndNotifications]
  -[SBFolderView iconScrollViewDidCancelTouchTracking:]
  -[SBFolderView _scrollOffsetForPageAtIndex:]
  -[SBFolderView iconScrollView:shouldSetContentOffset:animated:]
  -[SBFolderView _pageIndexForOffset:]
  -[SBFolderView iconScrollView:shouldSetAutoscrollContentOffset:]
  -[SBFolderView typeForPage:]
  -[SBFolderView _willScrollToPageIndex:animated:]
  -[SBFolderView _currentPageIndexDidChangeFromPageIndex:]
  -[SBFolderView _updateScrollingState:]
  -[SBFolderView _scrollOffsetForPageAtIndex:pageWidth:]
  -[SBFolderView addScrollViewIsScrollingOverrideReason:]
  -[SBFolderView removeScrollViewIsScrollingOverrideReason:]
  -[SBFolderView _scrollOffsetForFirstListView]
  -[SBFolderView accessibilityTintColorForRect:tintStyle:]
  -[SBFolderView _leadingCustomPageCount]
  -[SBFolderView scrollableWidthForVisibleColumnRange]
  -[SBFolderView _scrollOffsetForContentAtPageIndex:]
  -[SBFolderView _newPageControl]
  -[SBFolderView _useParallaxOnPageControl]
  -[SBFolderView _purgeListViews]
  -[SBFolderView _removeIconListView:]
  -[SBFolderView validateVisibleColumnRange]
  -[SBFolderView _createIconListViewForList:atIndex:]
  -[SBFolderView _addIconListView:]
  -[SBFolderView folderWillChange:]
  -[SBFolderView _updateScrollingIfNeeded]
  -[SBFolderView scrollingDisabledGestureRecognizer]
  -[SBFolderView scrollingDisabledGestureDidUpdate:]
  -[SBFolderView setScrollingDisabledGestureRecognizer:]
  -[SBFolderView _setCurrentPageIndex:deferringPageControlUpdate:]
  -[SBFolderView _isValidPageIndex:]
  -[SBFolderView _currentPageIndexDidChange]
  -[SBFolderView clearVisibleColumnRange]
  -[SBFolderView updateVisibleColumnRange]
  -[SBFolderView canChangeCurrentPageIndexToIndex:]
  -[SBFolderView _setCurrentPageIndex:]
  -[SBFolderView _addScrollingCompletionBlock:]
  -[SBFolderView _setScrollViewContentOffset:animated:]
  -[SBFolderView _ignoreScrollingDidEndNotifications]
  -[SBFolderView _unignoreScrollingDidEndNotifications]
  -[SBFolderView _frameForScalingView]
  -[SBFolderView _updateScalingViewFrame]
  -[SBFolderView _updatePageControlCurrentPage]
  -[SBFolderView _trailingCustomPageCount]
  -[SBFolderView _scrollRangeForPageAtIndex:pageWidth:]
  -[SBFolderView allIconListViews]
  -[SBFolderView _addIconListViewsForModels:]
  -[SBFolderView _updateIconListContainment:atIndex:]
  -[SBFolderView _pageIndexForOffset:behavior:fractionOfDistanceThroughPage:]
  -[SBFolderView _resetIconListViews]
  -[SBFolderView updateIconListIndexAndVisibility]
  -[SBFolderView minimumVisibleScrollOffset]
  -[SBFolderView maximumVisibleScrollOffset]
  -[SBFolderView hasEverBeenInAWindow]
  -[SBFolderView closestIconPageIndexForPageIndex:]
  -[SBFolderView _scrollRangeForContentAtPageIndex:pageWidth:]
  -[SBFolderView userInterfaceLayoutDirectionAwareScrollingDirection]
  -[SBFolderView iconVisibilityHandling]
  -[SBFolderView updateVisibleColumnRangeWithTotalLists:columnsPerList:iconVisibilityHandling:]
  -[SBFolderView updatesPredictedVisibleColumnWhileScrolling]
  -[SBFolderView visibleColumnRangeWithTotalLists:columnsPerList:iconVisibilityHandling:predictedVisibleColumn:]
  -[SBFolderView _checkIfScrollStateChanged]
  -[SBFolderView scrollingDirection]
  -[SBFolderView _disableUserInteractionBeforeSignificantAnimation]
  -[SBFolderView _enableUserInteractionAfterSignificantAnimation]
  -[SBFolderView _setFolderName:]
  -[SBFolderView _updateTitleLegibilitySettings]
  -[SBFolderView setHasEverBeenInAWindow:]
  -[SBFolderView iconScrollViewWillCancelTouchTracking:]
  -[SBFolderView _setPageControlDisabled:forReason:]
  -[SBFolderView locationCountsAsInsideFolder:]
  -[SBFolderView _offsetToCenterPageControlInSpaceForPageControl]
  -[SBFolderView _hasLeadingCustomPages]
  -[SBFolderView _hasTrailingCustomPages]
  -[SBFolderView _scrollRangeForPageAtIndex:]
  -[SBFolderView _isValidIconListViewIndex:]
  -[SBFolderView enumerateIconListViewsWithOptions:usingBlock:]
  -[SBFolderView lastIconListView]
  -[SBFolderView accessibilityLegibilitySettingsForRect:tintStyle:]


SBIconScrollView : BSUIScrollView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  <SBIconScrollViewDelegate> *delegate

  // instance methods
  -[SBIconScrollView setContentOffset:]
  -[SBIconScrollView setContentOffset:animated:]
  -[SBIconScrollView _autoScrollAssistantUpdateContentOffset:]
  -[SBIconScrollView cancelTouchTracking]
  -[SBIconScrollView _scrollsToMakeFirstResponderVisible]
  -[SBIconScrollView _roundedProposedContentOffset:]


SBIconLabelImageCache : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  CPMemoryPool *grayPool
 @property  CPMemoryPool *colorPool
 @property  CPMemoryPool *legibilityPool
 @property  {CGSize=dd} maxLabelSize
 @property  double scale
 @property  unsigned long numberOfCachedImages
 @property  unsigned long numberOfCacheHits
 @property  unsigned long numberOfCacheMisses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconLabelImageCache .cxx_destruct]
  -[SBIconLabelImageCache scale]
  -[SBIconLabelImageCache succinctDescription]
  -[SBIconLabelImageCache descriptionWithMultilinePrefix:]
  -[SBIconLabelImageCache succinctDescriptionBuilder]
  -[SBIconLabelImageCache descriptionBuilderWithMultilinePrefix:]
  -[SBIconLabelImageCache maxLabelSize]
  -[SBIconLabelImageCache initWithMaxLabelSize:scale:]
  -[SBIconLabelImageCache numberOfCachedImages]
  -[SBIconLabelImageCache numberOfCacheHits]
  -[SBIconLabelImageCache numberOfCacheMisses]
  -[SBIconLabelImageCache removeLabelImagesWithParametersPassingTest:]
  -[SBIconLabelImageCache labelImageForParameters:]
  -[SBIconLabelImageCache generateAndStoreLabelImageForParameters:]
  -[SBIconLabelImageCache cachedLabelImageForParameters:]
  -[SBIconLabelImageCache cacheLabelImageForParameters:]
  -[SBIconLabelImageCache removeLabelImageForParameters:]
  -[SBIconLabelImageCache cachedLabelImagesWithParametersPassingTest:]
  -[SBIconLabelImageCache grayPool]
  -[SBIconLabelImageCache colorPool]
  -[SBIconLabelImageCache legibilityPool]


SBFloatyFolderView : SBFolderView <UIGestureRecognizerDelegate, PTSettingsKeyObserver, SBFolderBackgroundViewDelegate>
 @property  BOOL displaysMultipleIconListsInLandscapeOrientation
 @property  BOOL displayingMultipleIconLists
 @property  BOOL convertingIconListStyle
 @property  BOOL animatingRotation
 @property  double cornerRadius
 @property  unsigned long backgroundEffect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFloatyFolderView defaultCornerRadius]
  +[SBFloatyFolderView defaultIconLocation]
  +[SBFloatyFolderView _scrollViewClass]
  +[SBFloatyFolderView countOfAdditionalPagesToKeepVisibleInOneDirection]

  // instance methods
  -[SBFloatyFolderView dealloc]
  -[SBFloatyFolderView .cxx_destruct]
  -[SBFloatyFolderView initWithConfiguration:]
  -[SBFloatyFolderView descriptionBuilderWithMultilinePrefix:]
  -[SBFloatyFolderView setCornerRadius:]
  -[SBFloatyFolderView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[SBFloatyFolderView gestureRecognizer:shouldReceiveTouch:]
  -[SBFloatyFolderView scrollViewDidScroll:]
  -[SBFloatyFolderView _showsTitle]
  -[SBFloatyFolderView cornerRadius]
  -[SBFloatyFolderView backgroundEffect]
  -[SBFloatyFolderView setBackgroundEffect:]
  -[SBFloatyFolderView hitTest:withEvent:]
  -[SBFloatyFolderView setBackgroundAlpha:]
  -[SBFloatyFolderView setLegibilitySettings:]
  -[SBFloatyFolderView _orientationDidChange:]
  -[SBFloatyFolderView settings:changedValueForKey:]
  -[SBFloatyFolderView _scrollView:adjustedOffsetForOffset:translation:startPoint:locationInView:horizontalVelocity:verticalVelocity:]
  -[SBFloatyFolderView _layoutSubviews]
  -[SBFloatyFolderView _handleLongPressGesture:]
  -[SBFloatyFolderView _handlePinchGesture:]
  -[SBFloatyFolderView _titleFontSize]
  -[SBFloatyFolderView isAnimatingRotation]
  -[SBFloatyFolderView visibleFolderRelativeImageCenterForIcon:]
  -[SBFloatyFolderView borrowScalingView]
  -[SBFloatyFolderView returnScalingView]
  -[SBFloatyFolderView updateAccessibilityTintColors]
  -[SBFloatyFolderView willTransitionAnimated:withSettings:]
  -[SBFloatyFolderView fadeContentForMagnificationFraction:]
  -[SBFloatyFolderView didTransitionAnimated:]
  -[SBFloatyFolderView fadeContentForMinificationFraction:]
  -[SBFloatyFolderView iconListViewAtPoint:]
  -[SBFloatyFolderView transitionToSize:withTransitionCoordinator:]
  -[SBFloatyFolderView displaysMultipleIconListsInLandscapeOrientation]
  -[SBFloatyFolderView accessibilityTintColorForBackgroundView:]
  -[SBFloatyFolderView legibilitySettingsForIconListViews]
  -[SBFloatyFolderView _iconListFrameForPageRect:atIndex:]
  -[SBFloatyFolderView _updateScrollingState:]
  -[SBFloatyFolderView scrollableWidthForVisibleColumnRange]
  -[SBFloatyFolderView _removeIconListView:]
  -[SBFloatyFolderView _addIconListView:]
  -[SBFloatyFolderView _currentPageIndexDidChange]
  -[SBFloatyFolderView _frameForScalingView]
  -[SBFloatyFolderView _updateScalingViewFrame]
  -[SBFloatyFolderView _updateIconListContainment:atIndex:]
  -[SBFloatyFolderView minimumVisibleScrollOffset]
  -[SBFloatyFolderView iconVisibilityHandling]
  -[SBFloatyFolderView locationCountsAsInsideFolder:]
  -[SBFloatyFolderView _offsetToCenterPageControlInSpaceForPageControl]
  -[SBFloatyFolderView _configureGestures]
  -[SBFloatyFolderView _shouldConvertToMultipleIconListsInLandscapeOrientation]
  -[SBFloatyFolderView _convertToMultipleIconListsAnimated:]
  -[SBFloatyFolderView accessibilityReduceTransparencyDidChange:]
  -[SBFloatyFolderView floatyFolderConfiguration]
  -[SBFloatyFolderView enumeratePageBackgroundViewsUsingBlock:]
  -[SBFloatyFolderView isDisplayingMultipleIconLists]
  -[SBFloatyFolderView _newPageBackgroundView]
  -[SBFloatyFolderView _convertToSingleIconListAnimated:]
  -[SBFloatyFolderView setAnimatingRotation:]
  -[SBFloatyFolderView isConvertingIconListStyle]
  -[SBFloatyFolderView _titleVerticalOffsetForOrientation:]
  -[SBFloatyFolderView _pageBackgroundFrameForPageRect:]
  -[SBFloatyFolderView _updateScalingViewLocation]
  -[SBFloatyFolderView setConvertingIconListStyle:]
  -[SBFloatyFolderView setDisplayingMultipleIconLists:]
  -[SBFloatyFolderView findHiddenIconView]
  -[SBFloatyFolderView _setScrollViewNeedsToClipCorners:]
  -[SBFloatyFolderView _rubberBandIntervalForOverscroll]
  -[SBFloatyFolderView _handleOutsideTap:]
  -[SBFloatyFolderView _tapToCloseGestureRecognizer:shouldReceiveTouch:]


SBFloatyFolderBackgroundClipView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  SBFolderBackgroundView *backgroundView
 @property  unsigned long backgroundEffect
 @property  double cornerRadius

  // instance methods
  -[SBFloatyFolderBackgroundClipView .cxx_destruct]
  -[SBFloatyFolderBackgroundClipView initWithFrame:]
  -[SBFloatyFolderBackgroundClipView setCornerRadius:]
  -[SBFloatyFolderBackgroundClipView backgroundView]
  -[SBFloatyFolderBackgroundClipView layoutSubviews]
  -[SBFloatyFolderBackgroundClipView cornerRadius]
  -[SBFloatyFolderBackgroundClipView backgroundEffect]
  -[SBFloatyFolderBackgroundClipView setBackgroundEffect:]


SBFloatyFolderScrollView : SBIconScrollView
  // instance methods
  -[SBFloatyFolderScrollView pointInside:withEvent:]


SBDockIconListView : SBIconListView
 @property  long long layoutStyle
 @property  BOOL vertical
 @property  {UIEdgeInsets=dddd} layoutInsets
 @property  double spacing
 @property  double effectiveSpacing
 @property  unsigned long minimumNumberOfIconsToDistributeEvenlyToEdges

  // class methods
  +[SBDockIconListView defaultHeight]
  +[SBDockIconListView defaultIconViewConfigurationOptions]
  +[SBDockIconListView defaultFrameForOrientation:]

  // instance methods
  -[SBDockIconListView spacing]
  -[SBDockIconListView isVertical]
  -[SBDockIconListView setSpacing:]
  -[SBDockIconListView intrinsicContentSize]
  -[SBDockIconListView _shouldAnimatePropertyWithKey:]
  -[SBDockIconListView setLayoutStyle:]
  -[SBDockIconListView layoutStyle]
  -[SBDockIconListView setVertical:]
  -[SBDockIconListView layoutInsets]
  -[SBDockIconListView setLayoutInsets:]
  -[SBDockIconListView initWithModel:layoutProvider:iconLocation:orientation:iconViewProvider:]
  -[SBDockIconListView allowsAddingIconCount:]
  -[SBDockIconListView setMinimumNumberOfIconsToDistributeEvenlyToEdges:]
  -[SBDockIconListView iconAtPoint:index:proposedOrder:]
  -[SBDockIconListView originForIconAtCoordinate:numberOfIcons:]
  -[SBDockIconListView effectiveSpacingForNumberOfIcons:]
  -[SBDockIconListView didAddIconView:]
  -[SBDockIconListView boundsForLayout]
  -[SBDockIconListView scaledAlignmentIconSize]
  -[SBDockIconListView minimumNumberOfIconsToDistributeEvenlyToEdges]
  -[SBDockIconListView automaticallyAdjustsLayoutMetricsToFit]
  -[SBDockIconListView adaptsOrientationToTraitCollection]
  -[SBDockIconListView _additionalHorizontalInsetToCenterIcons]
  -[SBDockIconListView _additionalVerticalInsetToCenterIcons]
  -[SBDockIconListView originForIconAtCoordinate:metrics:]
  -[SBDockIconListView effectiveSpacing]


SBHomeScreenIconTransitionAnimator : NSObject /usr/lib/libSystem.B.dylib <SBIconAnimatorDelegate, SBViewControllerInteractiveAnimatedTransitioning>
 @property  SBHIconAnimationSettings *currentSettings
 @property  SBIconAnimator *iconAnimator
 @property  SBNestingViewController *childViewController
 @property  unsigned long operation
 @property  double initialDelay
 @property  unsigned long currentOperation
 @property  BOOL cancelled
 @property  BOOL restarted
 @property  <SBHomeScreenIconTransitionAnimatorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHomeScreenIconTransitionAnimator delegate]
  -[SBHomeScreenIconTransitionAnimator setDelegate:]
  -[SBHomeScreenIconTransitionAnimator .cxx_destruct]
  -[SBHomeScreenIconTransitionAnimator cancel]
  -[SBHomeScreenIconTransitionAnimator operation]
  -[SBHomeScreenIconTransitionAnimator isCancelled]
  -[SBHomeScreenIconTransitionAnimator currentOperation]
  -[SBHomeScreenIconTransitionAnimator transitionDuration:]
  -[SBHomeScreenIconTransitionAnimator animateTransition:]
  -[SBHomeScreenIconTransitionAnimator animationEnded:]
  -[SBHomeScreenIconTransitionAnimator percentComplete]
  -[SBHomeScreenIconTransitionAnimator initialDelay]
  -[SBHomeScreenIconTransitionAnimator setInitialDelay:]
  -[SBHomeScreenIconTransitionAnimator reverse]
  -[SBHomeScreenIconTransitionAnimator restart]
  -[SBHomeScreenIconTransitionAnimator childViewController]
  -[SBHomeScreenIconTransitionAnimator currentSettings]
  -[SBHomeScreenIconTransitionAnimator iconAnimator:canAlterViewHierarchyDuringCleanupUsingBlock:]
  -[SBHomeScreenIconTransitionAnimator initWithIconAnimator:childViewController:operation:]
  -[SBHomeScreenIconTransitionAnimator updateTransition:withPercentComplete:]
  -[SBHomeScreenIconTransitionAnimator finishInteractiveTransition:withCompletionSpeed:completionCurve:]
  -[SBHomeScreenIconTransitionAnimator cancelTransition:withCompletionSpeed:completionCurve:]
  -[SBHomeScreenIconTransitionAnimator supportsRestarting]
  -[SBHomeScreenIconTransitionAnimator transitionAnimationFactory:]
  -[SBHomeScreenIconTransitionAnimator iconAnimatorWasInvalidated:]
  -[SBHomeScreenIconTransitionAnimator iconAnimator]
  -[SBHomeScreenIconTransitionAnimator wasRestarted]


SBHHomeScreenSettings : PTSettings /System/Library/PrivateFrameworks/PrototypeToolsUI.framework/PrototypeToolsUI
 @property  BOOL usesMinimumViableHomeScreen
 @property  BOOL showPopOvers
 @property  BOOL showWidgets
 @property  double defaultDragInteractionLiftDelay
 @property  SBHIconAnimationRootSettings *iconAnimationSettings
 @property  SBHIconSettings *iconSettings
 @property  SBHFolderSettings *folderSettings
 @property  SBHRootFolderSettings *rootFolderSettings

  // class methods
  +[SBHHomeScreenSettings settingsControllerModule]

  // instance methods
  -[SBHHomeScreenSettings .cxx_destruct]
  -[SBHHomeScreenSettings setDefaultValues]
  -[SBHHomeScreenSettings iconAnimationSettings]
  -[SBHHomeScreenSettings iconSettings]
  -[SBHHomeScreenSettings showWidgets]
  -[SBHHomeScreenSettings showPopOvers]
  -[SBHHomeScreenSettings rootFolderSettings]
  -[SBHHomeScreenSettings folderSettings]
  -[SBHHomeScreenSettings setFolderSettings:]
  -[SBHHomeScreenSettings usesMinimumViableHomeScreen]
  -[SBHHomeScreenSettings setUsesMinimumViableHomeScreen:]
  -[SBHHomeScreenSettings setShowPopOvers:]
  -[SBHHomeScreenSettings setShowWidgets:]
  -[SBHHomeScreenSettings setDefaultDragInteractionLiftDelay:]
  -[SBHHomeScreenSettings defaultDragInteractionLiftDelay]
  -[SBHHomeScreenSettings setIconAnimationSettings:]
  -[SBHHomeScreenSettings setIconSettings:]
  -[SBHHomeScreenSettings setRootFolderSettings:]


SBFolderPresentingViewController : SBNestingViewController <SBFolderControllerBackgroundViewDelegate>
 @property  <UIViewControllerAnimatedTransitioning> *currentFolderAnimator
 @property  SBFolderContainerView *view
 @property  <SBFolderPresentingViewControllerDelegate> *folderPresentationDelegate
 @property  SBFolderController *presentedFolderController
 @property  unsigned long backgroundEffect

  // instance methods
  -[SBFolderPresentingViewController .cxx_destruct]
  -[SBFolderPresentingViewController view]
  -[SBFolderPresentingViewController loadView]
  -[SBFolderPresentingViewController backgroundEffect]
  -[SBFolderPresentingViewController setBackgroundEffect:]
  -[SBFolderPresentingViewController setFolderPresentationDelegate:]
  -[SBFolderPresentingViewController presentedFolderController]
  -[SBFolderPresentingViewController currentFolderAnimator]
  -[SBFolderPresentingViewController dismissPresentedFolderControllerAnimated:completion:]
  -[SBFolderPresentingViewController presentFolderController:animated:completion:]
  -[SBFolderPresentingViewController setCurrentFolderAnimator:]
  -[SBFolderPresentingViewController nestingViewController:animationControllerForOperation:onViewController:animated:]
  -[SBFolderPresentingViewController nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:]
  -[SBFolderPresentingViewController nestingViewController:sourceViewForPresentingViewController:]
  -[SBFolderPresentingViewController minimumHomeScreenScaleForFolderControllerBackgroundView:]
  -[SBFolderPresentingViewController nestingViewController:interactionControllerForAnimationController:]
  -[SBFolderPresentingViewController folderPresentationDelegate]


SBFolder : NSObject /usr/lib/libSystem.B.dylib <SBIconIndexNode, SBIconIndexMutableListObserver, SBIconListModelObserver, BSDescriptionProviding>
 @property  NSString *uniqueIdentifier
 @property  NSString *displayName
 @property  NSString *defaultDisplayName
 @property  BOOL open
 @property  SBFolderIcon *icon
 @property  BOOL cancelable
 @property  SBFolder *parentFolder
 @property  SBFolder *rootFolder
 @property  Class listModelClass
 @property  NSArray *lists
 @property  unsigned long listCount
 @property  unsigned long maxListCount
 @property  unsigned long maxIconCountInLists
 @property  unsigned long maxIconCountInFirstList
 @property  BOOL empty
 @property  BOOL full
 @property  BOOL shouldRemoveWhenEmpty
 @property  BOOL canRemoveIcons
 @property  BOOL canEditDisplayName
 @property  unsigned long requiredTrailingEmptyListCount
 @property  unsigned long trailingEmptyListCount
 @property  NSArray *icons
 @property  NSArray *iconsInLists
 @property  NSString *recursiveDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFolder isFolderNodeIdentifier:]
  +[SBFolder isRootFolderClass]

  // instance methods
  -[SBFolder init]
  -[SBFolder isEmpty]
  -[SBFolder .cxx_destruct]
  -[SBFolder icons]
  -[SBFolder uniqueIdentifier]
  -[SBFolder displayName]
  -[SBFolder isOpen]
  -[SBFolder setDisplayName:]
  -[SBFolder succinctDescription]
  -[SBFolder descriptionWithMultilinePrefix:]
  -[SBFolder succinctDescriptionBuilder]
  -[SBFolder descriptionBuilderWithMultilinePrefix:]
  -[SBFolder icon]
  -[SBFolder setIcon:]
  -[SBFolder recursiveDescription]
  -[SBFolder setOpen:]
  -[SBFolder addIcon:]
  -[SBFolder sort]
  -[SBFolder parentFolder]
  -[SBFolder isFull]
  -[SBFolder nodeIdentifier]
  -[SBFolder addIcons:]
  -[SBFolder isRootFolder]
  -[SBFolder lists]
  -[SBFolder isCancelable]
  -[SBFolder setCancelable:]
  -[SBFolder addNodeObserver:]
  -[SBFolder removeNodeObserver:]
  -[SBFolder rootFolder]
  -[SBFolder iconList:didAddIcon:]
  -[SBFolder iconList:didReplaceIcon:withIcon:]
  -[SBFolder iconList:didRemoveIcon:]
  -[SBFolder iconList:didMoveIcon:]
  -[SBFolder removeFolderObserver:]
  -[SBFolder listCount]
  -[SBFolder addEmptyList]
  -[SBFolder addFolderObserver:]
  -[SBFolder setRequiredTrailingEmptyListCount:]
  -[SBFolder listsContainingIcon:]
  -[SBFolder indexOfList:]
  -[SBFolder indexPathForIcon:]
  -[SBFolder maxListCount]
  -[SBFolder compactLists]
  -[SBFolder containsNodeIdentifier:]
  -[SBFolder canAddIconCount:]
  -[SBFolder listAtIndex:]
  -[SBFolder indexPathForNodeIdentifier:]
  -[SBFolder iconAtIndexPath:]
  -[SBFolder enumerateAllIconsUsingBlock:]
  -[SBFolder nodeDescriptionWithPrefix:]
  -[SBFolder indexPathForFirstFreeSlotStartingAtList:avoidingFirstList:]
  -[SBFolder canAddIconCount:startingAtList:]
  -[SBFolder folderContainingIndexPath:relativeIndexPath:]
  -[SBFolder canRemoveIcons]
  -[SBFolder canEditDisplayName]
  -[SBFolder _listsForCompaction]
  -[SBFolder canBounceIcon:]
  -[SBFolder containsIcon:]
  -[SBFolder indexPathForIconWithIdentifier:]
  -[SBFolder removeIcon:options:]
  -[SBFolder indexPathForIconWithOptions:passingTest:]
  -[SBFolder indexPathsForIconsPassingTest:]
  -[SBFolder placeIcon:atIndexPath:]
  -[SBFolder insertIcon:atIndexPath:options:]
  -[SBFolder indexPathForIconWithIdentifier:includingPlaceholders:]
  -[SBFolder folderIcons]
  -[SBFolder enumerateAllIconsWithOptions:usingBlock:]
  -[SBFolder indexPathForFolder:]
  -[SBFolder isValidPageIndex:]
  -[SBFolder indexPathForFirstFreeSlotAvoidingFirstList:]
  -[SBFolder indexPathForIcon:includingPlaceholders:]
  -[SBFolder addListWithIcon:]
  -[SBFolder listsContainingLeafIconWithIdentifier:]
  -[SBFolder startCoalescingContentChangesWithRequestID:]
  -[SBFolder stopCoalescingContentChangesForRequestID:]
  -[SBFolder leafIcons]
  -[SBFolder initWithDisplayName:maxListCount:maxIconCountInLists:]
  -[SBFolder removeAllLists]
  -[SBFolder stopCoalescingContentChangesForRequestID:forceReload:]
  -[SBFolder allIcons]
  -[SBFolder shouldRemoveWhenEmpty]
  -[SBFolder indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBFolder nodesAlongIndexPath:consumedIndexes:]
  -[SBFolder containedNodeIdentifiers]
  -[SBFolder list:didRemoveContainedNodeIdentifiers:]
  -[SBFolder listDidMoveNodes:]
  -[SBFolder list:didAddContainedNodeIdentifiers:]
  -[SBFolder initWithUniqueIdentifier:displayName:maxListCount:maxIconCountInLists:]
  -[SBFolder _compactLists]
  -[SBFolder requiredTrailingEmptyListCount]
  -[SBFolder _removeLists:]
  -[SBFolder trailingEmptyListCount]
  -[SBFolder _didAddList:]
  -[SBFolder didAddFolder:]
  -[SBFolder _addList:]
  -[SBFolder didRemoveFolder:]
  -[SBFolder _createNewListWithIcon:]
  -[SBFolder _insertList:atIndex:]
  -[SBFolder isIconStateDirty]
  -[SBFolder markIconStateClean]
  -[SBFolder listModelClass]
  -[SBFolder removeIconAtIndexPath:options:]
  -[SBFolder addIconsOfClass:toSet:]
  -[SBFolder iconsOfClass:]
  -[SBFolder defaultDisplayName]
  -[SBFolder _isCoalescingContentChanges]
  -[SBFolder enumerateAllIconsWithBaseIndexPath:options:usingBlock:]
  -[SBFolder iconsInLists]
  -[SBFolder appendRecursiveDescriptionToString:prefixPath:]
  -[SBFolder ensureTrailingEmptyLists]
  -[SBFolder _setLists:]
  -[SBFolder insertEmptyListAtIndex:]
  -[SBFolder removeList:]
  -[SBFolder removeListAtIndex:]
  -[SBFolder replaceIcon:withIcon:]
  -[SBFolder canAddIcon]
  -[SBFolder indexPathForIconPassingTest:]
  -[SBFolder firstFolderWithDisplayName:]
  -[SBFolder firstFolderWithDefaultDisplayName:]
  -[SBFolder setDefaultDisplayName:]
  -[SBFolder maxIconCountInLists]
  -[SBFolder maxIconCountInFirstList]


SBHIconSettings : PTSettings /System/Library/PrivateFrameworks/PrototypeToolsUI.framework/PrototypeToolsUI
 @property  BOOL suppressJitter
 @property  BOOL closeBoxesEverywhere
 @property  SBFParallaxSettings *iconParallaxSettings
 @property  SBFParallaxSettings *badgeParallaxSettings

  // class methods
  +[SBHIconSettings settingsControllerModule]

  // instance methods
  -[SBHIconSettings .cxx_destruct]
  -[SBHIconSettings setDefaultValues]
  -[SBHIconSettings badgeParallaxSettings]
  -[SBHIconSettings suppressJitter]
  -[SBHIconSettings iconParallaxSettings]
  -[SBHIconSettings closeBoxesEverywhere]
  -[SBHIconSettings setSuppressJitter:]
  -[SBHIconSettings setCloseBoxesEverywhere:]
  -[SBHIconSettings setIconParallaxSettings:]
  -[SBHIconSettings setBadgeParallaxSettings:]


SBIconImageView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconObserver, SBIconProgressViewDelegate, SBHIconImageCacheObserver, SBReusableView, BSDescriptionProviding>
 @property  NSString *location
 @property  double overlayAlpha
 @property  SBIcon *icon
 @property  SBIconView *iconView
 @property  SBHIconImageCache *iconImageCache
 @property  double brightness
 @property  UIImage *displayedImage
 @property  BOOL paused
 @property  BOOL showsSquareCorners
 @property  BOOL jittering
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconImageView dealloc]
  -[SBIconImageView .cxx_destruct]
  -[SBIconImageView isPaused]
  -[SBIconImageView prepareForReuse]
  -[SBIconImageView location]
  -[SBIconImageView brightness]
  -[SBIconImageView setBrightness:]
  -[SBIconImageView snapshot]
  -[SBIconImageView succinctDescription]
  -[SBIconImageView descriptionWithMultilinePrefix:]
  -[SBIconImageView succinctDescriptionBuilder]
  -[SBIconImageView descriptionBuilderWithMultilinePrefix:]
  -[SBIconImageView setPaused:]
  -[SBIconImageView setLocation:]
  -[SBIconImageView initWithFrame:]
  -[SBIconImageView sizeThatFits:]
  -[SBIconImageView layoutSubviews]
  -[SBIconImageView visibleBounds]
  -[SBIconImageView icon]
  -[SBIconImageView _shouldAnimatePropertyWithKey:]
  -[SBIconImageView contentsImage]
  -[SBIconImageView iconView]
  -[SBIconImageView setIconView:]
  -[SBIconImageView _clearProgressView]
  -[SBIconImageView progressViewCanBeRemoved:]
  -[SBIconImageView iconImageInfo]
  -[SBIconImageView iconImageCache]
  -[SBIconImageView setIconImageCache:]
  -[SBIconImageView setIcon:location:animated:]
  -[SBIconImageView updateImageAnimated:]
  -[SBIconImageView setShowsSquareCorners:]
  -[SBIconImageView setProgressAlpha:]
  -[SBIconImageView iconViewLegibilitySettingsDidChange]
  -[SBIconImageView setJittering:]
  -[SBIconImageView iconViewFolderIconImageCacheDidChange]
  -[SBIconImageView setProgressState:paused:percent:animated:]
  -[SBIconImageView displayedImage]
  -[SBIconImageView iconImageDidUpdate:]
  -[SBIconImageView showsSquareCorners]
  -[SBIconImageView isJittering]
  -[SBIconImageView clearCachedImages]
  -[SBIconImageView squareContentsImage]
  -[SBIconImageView _updateOverlayImage]
  -[SBIconImageView _updateOverlayAlpha]
  -[SBIconImageView _updateProgressMask]
  -[SBIconImageView squareDarkeningOverlayImage]
  -[SBIconImageView darkeningOverlayImage]
  -[SBIconImageView _currentOverlayImage]
  -[SBIconImageView _iconBasicOverlayImage]
  -[SBIconImageView _iconSquareOverlayImage]
  -[SBIconImageView overlayAlpha]
  -[SBIconImageView iconImageCache:didUpdateImageForIcon:]
  -[SBIconImageView setOverlayAlpha:]
  -[SBIconImageView _generateSquareContentsImage]


SBHRootSidebarController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <UIGestureRecognizerDelegate, SBHSidebarProvider>
 @property  SBHDateHeaderViewController *dateViewController
 @property  NSMutableArray *widgetViewControllerConstraints
 @property  NSLayoutConstraint *dockHeightConstraint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UILegibilitySettings *legibilitySettings
 @property  WGWidgetGroupViewController *widgetViewController
 @property  SBHSidebarVisualConfiguration *sidebarVisualConfiguration
 @property  unsigned long layoutInsetsIgnoredEdges
 @property  <SBHSidebarProviderDelegate> *delegate

  // instance methods
  -[SBHRootSidebarController delegate]
  -[SBHRootSidebarController setDelegate:]
  -[SBHRootSidebarController .cxx_destruct]
  -[SBHRootSidebarController viewWillAppear:]
  -[SBHRootSidebarController viewDidLoad]
  -[SBHRootSidebarController viewDidDisappear:]
  -[SBHRootSidebarController legibilitySettings]
  -[SBHRootSidebarController setLegibilitySettings:]
  -[SBHRootSidebarController sidebarVisualConfiguration]
  -[SBHRootSidebarController setSidebarVisualConfiguration:]
  -[SBHRootSidebarController widgetViewController]
  -[SBHRootSidebarController setEditingIcons:]
  -[SBHRootSidebarController _configureWidgetViewController]
  -[SBHRootSidebarController _updateDockHeightConstraint]
  -[SBHRootSidebarController widgetViewControllerConstraints]
  -[SBHRootSidebarController _configureLayoutMargins]
  -[SBHRootSidebarController dateViewController]
  -[SBHRootSidebarController _addEditButton]
  -[SBHRootSidebarController layoutInsetsIgnoredEdges]
  -[SBHRootSidebarController setWidgetViewController:]
  -[SBHRootSidebarController setLayoutInsetsIgnoredEdges:]
  -[SBHRootSidebarController setWidgetViewControllerConstraints:]
  -[SBHRootSidebarController dockHeightConstraint]
  -[SBHRootSidebarController setDockHeightConstraint:]


SBHDateHeaderViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBHLegibility>
 @property  SBUILegibilityLabel *timeLabel
 @property  UIView *timeContainer
 @property  SBUILegibilityLabel *dateLabel
 @property  NSLayoutConstraint *timeLeadingConstraint
 @property  <SBFDateProviding> *dateProvider
 @property  _UILegibilitySettings *legibilitySettings

  // class methods
  +[SBHDateHeaderViewController timeFont]
  +[SBHDateHeaderViewController timeFontMetrics]
  +[SBHDateHeaderViewController dateFont]
  +[SBHDateHeaderViewController _topMarginFromTimeFont]
  +[SBHDateHeaderViewController dateFontMetrics]

  // instance methods
  -[SBHDateHeaderViewController dealloc]
  -[SBHDateHeaderViewController .cxx_destruct]
  -[SBHDateHeaderViewController disableUpdates]
  -[SBHDateHeaderViewController enableUpdates]
  -[SBHDateHeaderViewController loadView]
  -[SBHDateHeaderViewController traitCollectionDidChange:]
  -[SBHDateHeaderViewController initWithNibName:bundle:]
  -[SBHDateHeaderViewController viewWillAppear:]
  -[SBHDateHeaderViewController viewDidDisappear:]
  -[SBHDateHeaderViewController legibilitySettings]
  -[SBHDateHeaderViewController setLegibilitySettings:]
  -[SBHDateHeaderViewController dateLabel]
  -[SBHDateHeaderViewController timeLabel]
  -[SBHDateHeaderViewController _stopUpdateTimer]
  -[SBHDateHeaderViewController _startUpdateTimer]
  -[SBHDateHeaderViewController dateProvider]
  -[SBHDateHeaderViewController _updateLabels]
  -[SBHDateHeaderViewController _timeLabelInsetsForTimeString:]
  -[SBHDateHeaderViewController _cachedGlyphInsetsTimeFontForString:]
  -[SBHDateHeaderViewController setDateProvider:]
  -[SBHDateHeaderViewController _updateFormat]
  -[SBHDateHeaderViewController _handleTimeZoneChange]
  -[SBHDateHeaderViewController _updateTimeLeadingConstraint]
  -[SBHDateHeaderViewController timeContainer]
  -[SBHDateHeaderViewController timeLeadingConstraint]


SBIconListGridLayoutConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  unsigned long numberOfPortraitColumns
 @property  unsigned long numberOfPortraitRows
 @property  unsigned long numberOfLandscapeColumns
 @property  unsigned long numberOfLandscapeRows
 @property  {UIEdgeInsets=dddd} portraitLayoutInsets
 @property  {UIEdgeInsets=dddd} landscapeLayoutInsets
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  SBHIconAccessoryVisualConfiguration *iconAccessoryVisualConfiguration
 @property  SBHFolderIconVisualConfiguration *folderIconVisualConfiguration
 @property  SBHClockIconVisualConfiguration *clockIconVisualConfiguration
 @property  SBHFloatyFolderVisualConfiguration *floatyFolderVisualConfiguration
 @property  SBHSidebarVisualConfiguration *sidebarVisualConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListGridLayoutConfiguration init]
  -[SBIconListGridLayoutConfiguration copyWithZone:]
  -[SBIconListGridLayoutConfiguration .cxx_destruct]
  -[SBIconListGridLayoutConfiguration succinctDescription]
  -[SBIconListGridLayoutConfiguration descriptionWithMultilinePrefix:]
  -[SBIconListGridLayoutConfiguration succinctDescriptionBuilder]
  -[SBIconListGridLayoutConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBIconListGridLayoutConfiguration iconImageInfo]
  -[SBIconListGridLayoutConfiguration iconAccessoryVisualConfiguration]
  -[SBIconListGridLayoutConfiguration folderIconVisualConfiguration]
  -[SBIconListGridLayoutConfiguration setIconImageInfo:]
  -[SBIconListGridLayoutConfiguration floatyFolderVisualConfiguration]
  -[SBIconListGridLayoutConfiguration setNumberOfPortraitRows:]
  -[SBIconListGridLayoutConfiguration setNumberOfPortraitColumns:]
  -[SBIconListGridLayoutConfiguration setNumberOfLandscapeRows:]
  -[SBIconListGridLayoutConfiguration setNumberOfLandscapeColumns:]
  -[SBIconListGridLayoutConfiguration setPortraitLayoutInsets:]
  -[SBIconListGridLayoutConfiguration setLandscapeLayoutInsets:]
  -[SBIconListGridLayoutConfiguration clockIconVisualConfiguration]
  -[SBIconListGridLayoutConfiguration sidebarVisualConfiguration]
  -[SBIconListGridLayoutConfiguration setIconLabelVisualConfiguration:forContentSizeCategory:]
  -[SBIconListGridLayoutConfiguration setSidebarVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration iconLabelVisualConfigurationForContentSizeCategory:]
  -[SBIconListGridLayoutConfiguration numberOfPortraitColumns]
  -[SBIconListGridLayoutConfiguration numberOfPortraitRows]
  -[SBIconListGridLayoutConfiguration numberOfLandscapeColumns]
  -[SBIconListGridLayoutConfiguration numberOfLandscapeRows]
  -[SBIconListGridLayoutConfiguration portraitLayoutInsets]
  -[SBIconListGridLayoutConfiguration landscapeLayoutInsets]
  -[SBIconListGridLayoutConfiguration setIconAccessoryVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration setFolderIconVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration setClockIconVisualConfiguration:]
  -[SBIconListGridLayoutConfiguration setFloatyFolderVisualConfiguration:]


SBRootFolderWithDock : SBRootFolder <SBIconIndexNodeObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBRootFolderWithDock .cxx_destruct]
  -[SBRootFolderWithDock setIcon:]
  -[SBRootFolderWithDock dock]
  -[SBRootFolderWithDock sort]
  -[SBRootFolderWithDock node:didAddContainedNodeIdentifiers:]
  -[SBRootFolderWithDock node:didRemoveContainedNodeIdentifiers:]
  -[SBRootFolderWithDock nodeDidMoveContainedNodes:]
  -[SBRootFolderWithDock listsContainingIcon:]
  -[SBRootFolderWithDock indexOfList:]
  -[SBRootFolderWithDock supportsDock]
  -[SBRootFolderWithDock containsNodeIdentifier:]
  -[SBRootFolderWithDock listAtIndex:]
  -[SBRootFolderWithDock _setDock:]
  -[SBRootFolderWithDock isValidPageIndex:]
  -[SBRootFolderWithDock listsContainingLeafIconWithIdentifier:]
  -[SBRootFolderWithDock indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBRootFolderWithDock nodesAlongIndexPath:consumedIndexes:]
  -[SBRootFolderWithDock containedNodeIdentifiers]
  -[SBRootFolderWithDock list:didRemoveContainedNodeIdentifiers:]
  -[SBRootFolderWithDock listDidMoveNodes:]
  -[SBRootFolderWithDock list:didAddContainedNodeIdentifiers:]
  -[SBRootFolderWithDock initWithUniqueIdentifier:displayName:maxListCount:maxIconCountInLists:]
  -[SBRootFolderWithDock isIconStateDirty]
  -[SBRootFolderWithDock markIconStateClean]
  -[SBRootFolderWithDock addIconsOfClass:toSet:]
  -[SBRootFolderWithDock enumerateAllIconsWithBaseIndexPath:options:usingBlock:]
  -[SBRootFolderWithDock removeList:]
  -[SBRootFolderWithDock _notifyIndexChange:identifiers:withValidationBlock:]


SBDarkeningImageView : UIImageView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  double brightness

  // instance methods
  -[SBDarkeningImageView .cxx_destruct]
  -[SBDarkeningImageView brightness]
  -[SBDarkeningImageView setBrightness:]
  -[SBDarkeningImageView initWithFrame:]


SBLeafIcon : SBIcon <NSCopying>
 @property  NSString *applicationBundleID
 @property  NSString *masqueradeIdentifier
 @property  <SBLeafIconDataSource> *activeDataSource

  // class methods
  +[SBLeafIcon downloadingIconClass]

  // instance methods
  -[SBLeafIcon init]
  -[SBLeafIcon dealloc]
  -[SBLeafIcon isEqual:]
  -[SBLeafIcon copyWithZone:]
  -[SBLeafIcon .cxx_destruct]
  -[SBLeafIcon applicationBundleID]
  -[SBLeafIcon nodeIdentifier]
  -[SBLeafIcon activeDataSource]
  -[SBLeafIcon progressState]
  -[SBLeafIcon isTimedOut]
  -[SBLeafIcon isLaunchEnabled]
  -[SBLeafIcon isLaunchDisabledForObscuredReason]
  -[SBLeafIcon displayNameForObscuredDisabledLaunchForLocation:]
  -[SBLeafIcon labelAccessoryType]
  -[SBLeafIcon accessoryTypeForLocation:]
  -[SBLeafIcon launchFromLocation:context:]
  -[SBLeafIcon isProgressPaused]
  -[SBLeafIcon progressPercent]
  -[SBLeafIcon initWithLeafIdentifier:applicationBundleID:]
  -[SBLeafIcon _noteActiveDataSourceDidChangeAndReloadIcon:]
  -[SBLeafIcon removeIconDataSource:]
  -[SBLeafIcon addIconDataSource:]
  -[SBLeafIcon displayNameForLocation:]
  -[SBLeafIcon isLeafIcon]
  -[SBLeafIcon leafIdentifier]
  -[SBLeafIcon setUninstalled]
  -[SBLeafIcon completeUninstall]
  -[SBLeafIcon unmaskedIconImageWithInfo:]
  -[SBLeafIcon genericIconImageWithInfo:]
  -[SBLeafIcon _noteActiveDataSourceDidChangeNotification:]
  -[SBLeafIcon _noteActiveDataSourceDidGenerateImageNotification:]
  -[SBLeafIcon _noteDataSourceDidInvalidateNotification:]
  -[SBLeafIcon _updateActiveDataSource]
  -[SBLeafIcon generateIconImageWithInfo:]
  -[SBLeafIcon canTruncateLabel]
  -[SBLeafIcon canTightenLabel]
  -[SBLeafIcon badgeNumberOrString]
  -[SBLeafIcon accessoryTextForLocation:]
  -[SBLeafIcon masqueradeIdentifier]
  -[SBLeafIcon removeIconDataSourcesOfClass:]
  -[SBLeafIcon isUninstallSupported]


SBFramewiseInteractiveTransitionAnimator : NSObject /usr/lib/libSystem.B.dylib <SBViewControllerInteractiveAnimatedTransitioning>
 @property  <SBFramewiseInteractiveTransitionAnimatorDelegate> *delegate
 @property  BOOL presenting
 @property  double percentVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFramewiseInteractiveTransitionAnimator delegate]
  -[SBFramewiseInteractiveTransitionAnimator setDelegate:]
  -[SBFramewiseInteractiveTransitionAnimator .cxx_destruct]
  -[SBFramewiseInteractiveTransitionAnimator transitionDuration:]
  -[SBFramewiseInteractiveTransitionAnimator animateTransition:]
  -[SBFramewiseInteractiveTransitionAnimator percentComplete]
  -[SBFramewiseInteractiveTransitionAnimator isPresenting]
  -[SBFramewiseInteractiveTransitionAnimator setPresenting:]
  -[SBFramewiseInteractiveTransitionAnimator updateTransition:withPercentComplete:]
  -[SBFramewiseInteractiveTransitionAnimator finishInteractiveTransition:withCompletionSpeed:completionCurve:]
  -[SBFramewiseInteractiveTransitionAnimator cancelTransition:withCompletionSpeed:completionCurve:]
  -[SBFramewiseInteractiveTransitionAnimator supportsRestarting]
  -[SBFramewiseInteractiveTransitionAnimator percentVisible]


SBHIconImageCache : NSObject /usr/lib/libSystem.B.dylib <SBIconObserver, BSDescriptionProviding>
 @property  CPMemoryPool *iconImagesMemoryPool
 @property  NSString *name
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  UIImage *genericImage
 @property  UIImage *overlayImage
 @property  UIImage *unmaskedOverlayImage
 @property  unsigned long poolingBypassCount
 @property  unsigned long numberOfCachedImages
 @property  unsigned long numberOfCacheHits
 @property  unsigned long numberOfCacheMisses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHIconImageCache _backgroundQueue]
  +[SBHIconImageCache supportsMemoryPooling]
  +[SBHIconImageCache overlayImageWithInfo:]
  +[SBHIconImageCache unmaskedOverlayImageWithInfo:]
  +[SBHIconImageCache genericImageWithInfo:]

  // instance methods
  -[SBHIconImageCache name]
  -[SBHIconImageCache .cxx_destruct]
  -[SBHIconImageCache addObserver:]
  -[SBHIconImageCache removeObserver:]
  -[SBHIconImageCache succinctDescription]
  -[SBHIconImageCache descriptionWithMultilinePrefix:]
  -[SBHIconImageCache succinctDescriptionBuilder]
  -[SBHIconImageCache descriptionBuilderWithMultilinePrefix:]
  -[SBHIconImageCache overlayImage]
  -[SBHIconImageCache iconImageInfo]
  -[SBHIconImageCache initWithName:iconImageInfo:]
  -[SBHIconImageCache cacheImage:forIcon:]
  -[SBHIconImageCache iconImageDidUpdate:]
  -[SBHIconImageCache imageForIcon:]
  -[SBHIconImageCache numberOfCachedImages]
  -[SBHIconImageCache numberOfCacheHits]
  -[SBHIconImageCache numberOfCacheMisses]
  -[SBHIconImageCache purgeCachedImagesForIcons:]
  -[SBHIconImageCache purgeAllCachedImages]
  -[SBHIconImageCache cacheImagesForIcons:]
  -[SBHIconImageCache cachedImageForIcon:]
  -[SBHIconImageCache genericImage]
  -[SBHIconImageCache cacheImageForIcon:options:completionHandler:]
  -[SBHIconImageCache unmaskedImageForIcon:]
  -[SBHIconImageCache unmaskedOverlayImage]
  -[SBHIconImageCache realImageForIcon:]
  -[SBHIconImageCache _cacheKeyForIcon:]
  -[SBHIconImageCache pooledIconImageForMappedIconImage:]
  -[SBHIconImageCache beginObservingIconIfNecessary:]
  -[SBHIconImageCache cachedUnmaskedImageForIcon:]
  -[SBHIconImageCache endObservingIcon:]
  -[SBHIconImageCache endObservingAllIcons]
  -[SBHIconImageCache memoryMappedIconImageOfSize:scale:withDrawing:]
  -[SBHIconImageCache poolingBypassCount]
  -[SBHIconImageCache iconImagesMemoryPool]
  -[SBHIconImageCache _canPoolImage]
  -[SBHIconImageCache _pooledIconImageForIconImage:allowingOptOut:]
  -[SBHIconImageCache _iconImageOfSize:scale:failGracefully:drawing:]
  -[SBHIconImageCache notifyObserversOfUpdateForIcon:]
  -[SBHIconImageCache memoryMappedIconImageForIconImage:]
  -[SBHIconImageCache setPoolingBypassCount:]


SBHighlightView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  double highlightAlpha
 @property  double highlightHeight

  // class methods
  +[SBHighlightView imageCache]
  +[SBHighlightView _highlightImageWithHeight:alpha:]

  // instance methods
  -[SBHighlightView .cxx_destruct]
  -[SBHighlightView layoutSubviews]
  -[SBHighlightView initWithFrame:highlightAlpha:highlightHeight:]
  -[SBHighlightView highlightAlpha]
  -[SBHighlightView highlightHeight]


SBHIconAccessoryVisualConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  double fontSize
 @property  {CGSize=dd} size
 @property  {CGPoint=dd} offset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconAccessoryVisualConfiguration init]
  -[SBHIconAccessoryVisualConfiguration copyWithZone:]
  -[SBHIconAccessoryVisualConfiguration size]
  -[SBHIconAccessoryVisualConfiguration setOffset:]
  -[SBHIconAccessoryVisualConfiguration setSize:]
  -[SBHIconAccessoryVisualConfiguration fontSize]
  -[SBHIconAccessoryVisualConfiguration setFontSize:]
  -[SBHIconAccessoryVisualConfiguration offset]
  -[SBHIconAccessoryVisualConfiguration succinctDescription]
  -[SBHIconAccessoryVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHIconAccessoryVisualConfiguration succinctDescriptionBuilder]
  -[SBHIconAccessoryVisualConfiguration descriptionBuilderWithMultilinePrefix:]


SBFolderIcon : SBIcon <SBFolderObserver, SBIconObserver, SBIconIndexNodeObserver>
 @property  SBFolder *folder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFolderIcon hasIconImage]

  // instance methods
  -[SBFolderIcon dealloc]
  -[SBFolderIcon copyWithZone:]
  -[SBFolderIcon .cxx_destruct]
  -[SBFolderIcon children]
  -[SBFolderIcon removeChild:]
  -[SBFolderIcon _updateProgress]
  -[SBFolderIcon nodeIdentifier]
  -[SBFolderIcon folder]
  -[SBFolderIcon localeChanged]
  -[SBFolderIcon updateLabel]
  -[SBFolderIcon progressState]
  -[SBFolderIcon addNodeObserver:]
  -[SBFolderIcon removeNodeObserver:]
  -[SBFolderIcon node:didAddContainedNodeIdentifiers:]
  -[SBFolderIcon node:didRemoveContainedNodeIdentifiers:]
  -[SBFolderIcon nodeDidMoveContainedNodes:]
  -[SBFolderIcon rootFolder]
  -[SBFolderIcon isFolderIcon]
  -[SBFolderIcon containsNodeIdentifier:]
  -[SBFolderIcon folder:didAddList:]
  -[SBFolderIcon folder:didRemoveLists:atIndexes:]
  -[SBFolderIcon folder:didAddIcons:removedIcons:]
  -[SBFolderIcon folder:didReplaceIcon:withIcon:]
  -[SBFolderIcon iconImageViewClassForLocation:]
  -[SBFolderIcon isProgressPaused]
  -[SBFolderIcon progressPercent]
  -[SBFolderIcon shouldAnimateProgress]
  -[SBFolderIcon iconImageDidUpdate:]
  -[SBFolderIcon iconAccessoriesDidUpdate:]
  -[SBFolderIcon iconLaunchEnabledDidChange:]
  -[SBFolderIcon leafIconsWithBadgesSortedByImportance]
  -[SBFolderIcon displayNameForLocation:]
  -[SBFolderIcon rootFolderDelegateDidChange:]
  -[SBFolderIcon nodeDescriptionWithPrefix:]
  -[SBFolderIcon canBeAddedToMultiItemDrag]
  -[SBFolderIcon initWithFolder:]
  -[SBFolderIcon indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBFolderIcon nodesAlongIndexPath:consumedIndexes:]
  -[SBFolderIcon containedNodeIdentifiers]
  -[SBFolderIcon noteContainedIconsAdded:removed:]
  -[SBFolderIcon noteContainedIcon:replacedIcon:]
  -[SBFolderIcon genericIconImageWithInfo:]
  -[SBFolderIcon generateIconImageWithInfo:]
  -[SBFolderIcon badgeNumberOrString]
  -[SBFolderIcon _updateBadgeValue]
  -[SBFolderIcon invalidateUpdateIconRunLoopObserver]
  -[SBFolderIcon _performDelayedIconUpdates]
  -[SBFolderIcon _adjustForIconsAdded:removed:]
  -[SBFolderIcon _containedIconImageChanged:]
  -[SBFolderIcon listIndexForContainedIcon:]
  -[SBFolderIcon ancestryDidChange]
  -[SBFolderIcon _containedIconAccessoriesDidUpdate:]
  -[SBFolderIcon _containedIconLaunchEnabledDidUpdate:]
  -[SBFolderIcon gridCellIndexForIconIndex:]
  -[SBFolderIcon iconAtListIndex:iconIndex:]


_SBFolderPageElement : NSObject /usr/lib/libSystem.B.dylib
 @property  SBIconGridImage *gridImage
 @property  BOOL gridImagePossible
 @property  unsigned long visibleRow
 @property  unsigned long pageIndex
 @property  SBFolderIcon *folderIcon

  // instance methods
  -[_SBFolderPageElement .cxx_destruct]
  -[_SBFolderPageElement pageIndex]
  -[_SBFolderPageElement setPageIndex:]
  -[_SBFolderPageElement folderIcon]
  -[_SBFolderPageElement firstVisibleMiniIconIndex]
  -[_SBFolderPageElement setFolderIcon:]
  -[_SBFolderPageElement visibleRow]
  -[_SBFolderPageElement firstVisibleRowForGap]
  -[_SBFolderPageElement gridImage]
  -[_SBFolderPageElement setGridImage:]
  -[_SBFolderPageElement isGridImagePossible]
  -[_SBFolderPageElement setGridImagePossible:]
  -[_SBFolderPageElement setVisibleRow:]


_SBIconGridWrapperView : UIImageView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  _SBFolderPageElement *element
 @property  SBFolderIconImageView *folderIconImageView

  // instance methods
  -[_SBIconGridWrapperView element]
  -[_SBIconGridWrapperView .cxx_destruct]
  -[_SBIconGridWrapperView setElement:]
  -[_SBIconGridWrapperView folderIconImageView]
  -[_SBIconGridWrapperView reposition]
  -[_SBIconGridWrapperView positionAtRow:]
  -[_SBIconGridWrapperView setFolderIconImageView:]


SBFolderIconImageView : SBIconImageView <SBFolderIconObserver, SBFolderIconImageCacheObserver>
 @property  unsigned long concreteBackgroundStyle
 @property  unsigned long currentBackgroundStyle
 @property  unsigned long backgroundStyle
 @property  unsigned long currentPageIndex
 @property  BOOL animating
 @property  UIView *backgroundView
 @property  BOOL hasCustomBackgroundView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFolderIconImageView dealloc]
  -[SBFolderIconImageView .cxx_destruct]
  -[SBFolderIconImageView prepareForReuse]
  -[SBFolderIconImageView snapshot]
  -[SBFolderIconImageView descriptionBuilderWithMultilinePrefix:]
  -[SBFolderIconImageView initWithFrame:]
  -[SBFolderIconImageView backgroundView]
  -[SBFolderIconImageView layoutSubviews]
  -[SBFolderIconImageView isAnimating]
  -[SBFolderIconImageView setBackgroundView:]
  -[SBFolderIconImageView setBackgroundStyle:]
  -[SBFolderIconImageView backgroundStyle]
  -[SBFolderIconImageView contentsImage]
  -[SBFolderIconImageView _setAnimating:]
  -[SBFolderIconImageView currentPageIndex]
  -[SBFolderIconImageView _interPageSpacing]
  -[SBFolderIconImageView setBackgroundScale:]
  -[SBFolderIconImageView visibleMiniIconListIndex]
  -[SBFolderIconImageView scrollToTopOfPage:animated:]
  -[SBFolderIconImageView prepareToCrossfadeWithFloatyFolderView:allowFolderInteraction:]
  -[SBFolderIconImageView setIconGridImageAlpha:]
  -[SBFolderIconImageView setFloatyFolderCrossfadeFraction:]
  -[SBFolderIconImageView cleanupAfterFloatyFolderCrossfade]
  -[SBFolderIconImageView visibleImageRelativeFrameForMiniIconAtIndex:]
  -[SBFolderIconImageView scrollToGapOrTopIfFullOfPage:animated:]
  -[SBFolderIconImageView scrollToFirstGapAnimated:]
  -[SBFolderIconImageView scrollToTopOfFirstPageAnimated:]
  -[SBFolderIconImageView _folderIconImageCache]
  -[SBFolderIconImageView setIcon:location:animated:]
  -[SBFolderIconImageView updateImageAnimated:]
  -[SBFolderIconImageView iconViewLegibilitySettingsDidChange]
  -[SBFolderIconImageView hasCustomBackgroundView]
  -[SBFolderIconImageView iconViewFolderIconImageCacheDidChange]
  -[SBFolderIconImageView visibleMiniIconCount]
  -[SBFolderIconImageView firstVisibleMiniIconIndex]
  -[SBFolderIconImageView centerVisibleMiniIconIndex]
  -[SBFolderIconImageView lastVisibleMiniIconIndex]
  -[SBFolderIconImageView frameForMiniIconAtIndex:]
  -[SBFolderIconImageView setBackgroundAndIconGridImageAlpha:]
  -[SBFolderIconImageView disableImageUpdatesForReason:]
  -[SBFolderIconImageView _folderIcon]
  -[SBFolderIconImageView _generateSquareContentsImage]
  -[SBFolderIconImageView fulfillGridImageForPageElement:]
  -[SBFolderIconImageView _updateRasterization]
  -[SBFolderIconImageView _updateAccessibilityBackgroundContrast]
  -[SBFolderIconImageView _updateCurrentBackgroundStyle]
  -[SBFolderIconImageView _setPageElements:]
  -[SBFolderIconImageView _interiorGridSizeClipRect]
  -[SBFolderIconImageView _performScrollingDirection:targetPageIndex:targetPageScrollRow:newLeftElement:newRightElement:animated:]
  -[SBFolderIconImageView representedListLayout]
  -[SBFolderIconImageView _currentPageElement]
  -[SBFolderIconImageView frameForMiniIconAtIndexPath:]
  -[SBFolderIconImageView concreteBackgroundStyle]
  -[SBFolderIconImageView setCurrentBackgroundStyle:]
  -[SBFolderIconImageView _showLeftMinigrid]
  -[SBFolderIconImageView _showRightMinigrid]
  -[SBFolderIconImageView _iconGridImageClass]
  -[SBFolderIconImageView _setupGridViewsInDefaultConfiguration]
  -[SBFolderIconImageView folderIconImageCache:didUpdateImagesForFolderIcon:]
  -[SBFolderIconImageView invalidateImageUpdatesAssertion:]
  -[SBFolderIconImageView currentBackgroundStyle]


_SBFolderIconImageViewDisableUpdatesAssertion : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable, BSDescriptionProviding>
 @property  SBFolderIconImageView *folderIconImageView
 @property  NSString *reason
 @property  BOOL invalidated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBFolderIconImageViewDisableUpdatesAssertion dealloc]
  -[_SBFolderIconImageViewDisableUpdatesAssertion invalidate]
  -[_SBFolderIconImageViewDisableUpdatesAssertion reason]
  -[_SBFolderIconImageViewDisableUpdatesAssertion .cxx_destruct]
  -[_SBFolderIconImageViewDisableUpdatesAssertion isInvalidated]
  -[_SBFolderIconImageViewDisableUpdatesAssertion succinctDescription]
  -[_SBFolderIconImageViewDisableUpdatesAssertion descriptionWithMultilinePrefix:]
  -[_SBFolderIconImageViewDisableUpdatesAssertion succinctDescriptionBuilder]
  -[_SBFolderIconImageViewDisableUpdatesAssertion descriptionBuilderWithMultilinePrefix:]
  -[_SBFolderIconImageViewDisableUpdatesAssertion setInvalidated:]
  -[_SBFolderIconImageViewDisableUpdatesAssertion folderIconImageView]
  -[_SBFolderIconImageViewDisableUpdatesAssertion initWithFolderIconImageView:reason:]


SBHIconViewContextMenuStateController : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBHIconViewContextMenuStateController sharedInstance]

  // instance methods
  -[SBHIconViewContextMenuStateController init]
  -[SBHIconViewContextMenuStateController .cxx_destruct]
  -[SBHIconViewContextMenuStateController noteFolderControllerWillClose:]
  -[SBHIconViewContextMenuStateController registerIconView:]
  -[SBHIconViewContextMenuStateController unregisterIconView:]
  -[SBHIconViewContextMenuStateController floatyFolderViewDidScrollHiddenIconViewAway:]
  -[SBHIconViewContextMenuStateController iconViewWillPresentContextMenu:]
  -[SBHIconViewContextMenuStateController iconViewWillDismissContextMenu:]
  -[SBHIconViewContextMenuStateController iconViewWillAnimateContextMenu:]
  -[SBHIconViewContextMenuStateController iconViewDidAnimateContextMenu:]
  -[SBHIconViewContextMenuStateController dismissAppIconForceTouchControllers:]
  -[SBHIconViewContextMenuStateController areAnyIconViewContextMenusAnimating]
  -[SBHIconViewContextMenuStateController areAnyIconViewContextMenusShowing]
  -[SBHIconViewContextMenuStateController performAfterContextMenuAnimationsHaveCompleted:]
  -[SBHIconViewContextMenuStateController earlyTerminateAnyContextMenuAnimations]


SBFloatyFolderController : SBFolderController
 @property  unsigned long backgroundEffect

  // class methods
  +[SBFloatyFolderController _contentViewClass]
  +[SBFloatyFolderController configurationClass]
  +[SBFloatyFolderController iconLocation]

  // instance methods
  -[SBFloatyFolderController backgroundEffect]
  -[SBFloatyFolderController setBackgroundEffect:]
  -[SBFloatyFolderController isDisplayingIcon:inLocation:]
  -[SBFloatyFolderController presentedIconLocations]
  -[SBFloatyFolderController isPresentingIconLocation:]
  -[SBFloatyFolderController isDisplayingIconView:inLocation:]
  -[SBFloatyFolderController floatyFolderView]


_SBHRecentsDocumentView : SBFView /System/Library/Frameworks/UIKit.framework/UIKit
  // instance methods
  -[_SBHRecentsDocumentView systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:]


_SBHRecentsDocumentExtensionWrappingViewController : UIViewController /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
  // instance methods
  -[_SBHRecentsDocumentExtensionWrappingViewController init]
  -[_SBHRecentsDocumentExtensionWrappingViewController .cxx_destruct]
  -[_SBHRecentsDocumentExtensionWrappingViewController loadView]
  -[_SBHRecentsDocumentExtensionWrappingViewController setPreferredContentSize:]
  -[_SBHRecentsDocumentExtensionWrappingViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[_SBHRecentsDocumentExtensionWrappingViewController _updateViewIntrinsicContentSize:]
  -[_SBHRecentsDocumentExtensionWrappingViewController wrapRemoteViewController:]


SBHRecentsDocumentExtensionProvider : NSObject /usr/lib/libSystem.B.dylib <_SBUIPopoverExtensionHostDelegate>
 @property  _SBHRecentsDocumentExtensionWrappingViewController *wrappingViewController
 @property  SBUIPopoverExtensionHostViewController *hostViewController
 @property  NSExtension *extension
 @property  <_SBUIPopoverExtensionRemoteInterface> *remoteService
 @property  <SBHRecentsDocumentExtensionProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHRecentsDocumentExtensionProvider init]
  -[SBHRecentsDocumentExtensionProvider delegate]
  -[SBHRecentsDocumentExtensionProvider setDelegate:]
  -[SBHRecentsDocumentExtensionProvider .cxx_destruct]
  -[SBHRecentsDocumentExtensionProvider setExtension:]
  -[SBHRecentsDocumentExtensionProvider extension]
  -[SBHRecentsDocumentExtensionProvider hostViewController]
  -[SBHRecentsDocumentExtensionProvider popoverHostExtensionRequestsDismiss:]
  -[SBHRecentsDocumentExtensionProvider popoverHostExtensionDidExit:]
  -[SBHRecentsDocumentExtensionProvider remoteService]
  -[SBHRecentsDocumentExtensionProvider setRemoteService:]
  -[SBHRecentsDocumentExtensionProvider canShowRecentsDocumentExtensionProviderForBundleIdentifier:]
  -[SBHRecentsDocumentExtensionProvider recentsDocumentViewControllerForBundleIdentifier:]
  -[SBHRecentsDocumentExtensionProvider _loadExtensionWithCompletion:]
  -[SBHRecentsDocumentExtensionProvider wrappingViewController]
  -[SBHRecentsDocumentExtensionProvider _loadRemoteViewControllerWithBundleIdentifer:]
  -[SBHRecentsDocumentExtensionProvider _extensionWillExit:]
  -[SBHRecentsDocumentExtensionProvider _teardownHostViewController]
  -[SBHRecentsDocumentExtensionProvider _setupHostViewController:]
  -[SBHRecentsDocumentExtensionProvider setWrappingViewController:]


SBIconListView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconListModelObserver, BSDescriptionProviding>
 @property  SBIconListViewIconLocationTransitionHandler *currentIconLocationTransitionHandler
 @property  Class baseIconViewClass
 @property  unsigned long iconRowsForCurrentOrientation
 @property  unsigned long iconColumnsForCurrentOrientation
 @property  unsigned long iconsInRowForSpacingCalculation
 @property  unsigned long iconRowsForSpacingCalculation
 @property  unsigned long maximumIconCount
 @property  <SBIconListLayoutProvider> *layoutProvider
 @property  <SBIconListLayout> *layout
 @property  long long orientation
 @property  BOOL adaptsOrientationToTraitCollection
 @property  double statusBarHeight
 @property  BOOL editing
 @property  BOOL purged
 @property  BOOL layoutReversed
 @property  BOOL pausesIconsForScrolling
 @property  unsigned long userInterfaceLayoutDirectionHandling
 @property  long long userInterfaceLayoutDirection
 @property  unsigned long iconViewConfigurationOptions
 @property  _UILegibilitySettings *legibilitySettings
 @property  <SBIconListLayoutDelegate> *layoutDelegate
 @property  SBIconListModel *model
 @property  <SBIconViewProviding> *iconViewProvider
 @property  NSArray *icons
 @property  NSArray *visibleIcons
 @property  BOOL empty
 @property  BOOL full
 @property  unsigned long firstFreeSlotIndex
 @property  NSString *iconLocation
 @property  {CGSize=dd} alignmentIconSize
 @property  BOOL automaticallyAdjustsLayoutMetricsToFit
 @property  double horizontalIconPadding
 @property  double verticalIconPadding
 @property  {_NSRange=QQ} visibleColumnRange
 @property  {SBIconListPredictedVisibleColumn=Qd} predictedVisibleColumn
 @property  BOOL iconsNeedLayout
 @property  double iconContentScale
 @property  <SBIconListViewDragDelegate> *dragDelegate
 @property  BOOL wantsFastIconReordering
 @property  BOOL occluded
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  BOOL transitioningIconLocation
 @property  BOOL alignsIconsOnPixelBoundaries
 @property  unsigned long numberOfDisplayedIconViews
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconListView defaultIconViewConfigurationOptions]
  +[SBIconListView defaultFrameForOrientation:]
  +[SBIconListView getLayoutMetrics:forBounds:insets:orientation:numberOfColumns:numberOfRows:iconSize:iconContentScale:options:]
  +[SBIconListView rotationAnchor]

  // instance methods
  -[SBIconListView dealloc]
  -[SBIconListView isEmpty]
  -[SBIconListView .cxx_destruct]
  -[SBIconListView icons]
  -[SBIconListView orientation]
  -[SBIconListView model]
  -[SBIconListView setOrientation:]
  -[SBIconListView setBounds:]
  -[SBIconListView setModel:]
  -[SBIconListView layout]
  -[SBIconListView succinctDescription]
  -[SBIconListView descriptionWithMultilinePrefix:]
  -[SBIconListView succinctDescriptionBuilder]
  -[SBIconListView descriptionBuilderWithMultilinePrefix:]
  -[SBIconListView layoutOrientation]
  -[SBIconListView isRTL]
  -[SBIconListView setFrame:]
  -[SBIconListView userInterfaceLayoutDirection]
  -[SBIconListView _allowsFocusToLeaveViaHeading:]
  -[SBIconListView tintColor]
  -[SBIconListView didAddSubview:]
  -[SBIconListView willMoveToWindow:]
  -[SBIconListView isEditing]
  -[SBIconListView statusBarHeight]
  -[SBIconListView isOccluded]
  -[SBIconListView setEditing:]
  -[SBIconListView dragDelegate]
  -[SBIconListView setDragDelegate:]
  -[SBIconListView legibilitySettings]
  -[SBIconListView setLegibilitySettings:]
  -[SBIconListView setOccluded:]
  -[SBIconListView setStatusBarHeight:]
  -[SBIconListView isFull]
  -[SBIconListView columnAtPoint:]
  -[SBIconListView setLayoutDelegate:]
  -[SBIconListView layoutDelegate]
  -[SBIconListView isPurged]
  -[SBIconListView setPurged:]
  -[SBIconListView iconViewForIcon:]
  -[SBIconListView visibleIcons]
  -[SBIconListView iconContentScale]
  -[SBIconListView setIconContentScale:]
  -[SBIconListView folderIconImageCache]
  -[SBIconListView indexOfIcon:]
  -[SBIconListView displayedIconViewForIcon:]
  -[SBIconListView iconLocation]
  -[SBIconListView enumerateIconViewsUsingBlock:]
  -[SBIconListView setIconsNeedLayout]
  -[SBIconListView layoutIconsIfNeeded:animationType:options:]
  -[SBIconListView isDisplayingIconView:]
  -[SBIconListView initWithModel:layoutProvider:iconLocation:orientation:iconViewProvider:]
  -[SBIconListView setIconViewConfigurationOptions:]
  -[SBIconListView setFolderIconImageCache:]
  -[SBIconListView wantsFastIconReordering]
  -[SBIconListView setWantsFastIconReordering:]
  -[SBIconListView updateEditingStateAnimated:]
  -[SBIconListView removeAllIconViews]
  -[SBIconListView layoutIconsNow]
  -[SBIconListView iconViewProvider]
  -[SBIconListView configureIconView:forIcon:]
  -[SBIconListView setIconViewProvider:]
  -[SBIconListView iconList:didAddIcon:]
  -[SBIconListView iconList:didReplaceIcon:withIcon:]
  -[SBIconListView iconList:didRemoveIcon:]
  -[SBIconListView iconList:didMoveIcon:]
  -[SBIconListView centerForIcon:]
  -[SBIconListView coordinateForIcon:]
  -[SBIconListView getLayoutMetrics:]
  -[SBIconListView fractionalCoordinateAtPoint:]
  -[SBIconListView centerForIconCoordinate:]
  -[SBIconListView iconImageCache]
  -[SBIconListView userInterfaceLayoutDirectionHandling]
  -[SBIconListView setIconImageCache:]
  -[SBIconListView addDragObserver:forDropSession:]
  -[SBIconListView iconsNeedLayout]
  -[SBIconListView iconImageSize]
  -[SBIconListView removeAllIconAnimations]
  -[SBIconListView setIconLocation:]
  -[SBIconListView firstFreeSlotIndex]
  -[SBIconListView allowsAddingIconCount:]
  -[SBIconListView containsIcon:]
  -[SBIconListView setLayoutReversed:]
  -[SBIconListView ignoreNextWindowChange]
  -[SBIconListView maximumIconCount]
  -[SBIconListView layoutInsetsForOrientation:]
  -[SBIconListView layoutIconsIfNeeded:]
  -[SBIconListView showAllIcons]
  -[SBIconListView beginTransitionToIconLocation:reason:]
  -[SBIconListView isTransitioningIconLocation]
  -[SBIconListView iconViewConfigurationOptions]
  -[SBIconListView iconsInRowForSpacingCalculation]
  -[SBIconListView iconAtPoint:index:proposedOrder:]
  -[SBIconListView iconColumnsForCurrentOrientation]
  -[SBIconListView iconRowsForCurrentOrientation]
  -[SBIconListView coordinateAtPoint:]
  -[SBIconListView makeIconView]
  -[SBIconListView baseIconViewClass]
  -[SBIconListView enumerateIconsUsingBlock:]
  -[SBIconListView markIcon:asNeedingAnimation:]
  -[SBIconListView popIcon:]
  -[SBIconListView alignmentIconSize]
  -[SBIconListView hideAllIcons]
  -[SBIconListView setUserInterfaceLayoutDirectionHandling:]
  -[SBIconListView columnAtPoint:fractionOfDistanceThroughColumn:]
  -[SBIconListView setPausesIconsForScrolling:]
  -[SBIconListView setVisibleColumnRange:]
  -[SBIconListView setPredictedVisibleColumn:]
  -[SBIconListView willRotateWithTransitionCoordinator:]
  -[SBIconListView didAddIconView:]
  -[SBIconListView horizontalIconPadding]
  -[SBIconListView iconRowsForSpacingCalculation]
  -[SBIconListView verticalIconPadding]
  -[SBIconListView automaticallyAdjustsLayoutMetricsToFit]
  -[SBIconListView adaptsOrientationToTraitCollection]
  -[SBIconListView originForIconAtCoordinate:metrics:]
  -[SBIconListView _teardownLayoutRunloopObserverIfNeeded]
  -[SBIconListView removeIconView:]
  -[SBIconListView layoutProvider]
  -[SBIconListView currentIconLocationTransitionHandler]
  -[SBIconListView popIconView:]
  -[SBIconListView fadeInIconView:]
  -[SBIconListView performSpecialIconAnimation:icon:completionHandler:]
  -[SBIconListView performZoomOutSpecialIconAnimationWithIcon:completionHandler:]
  -[SBIconListView centerForIconAtIndex:]
  -[SBIconListView shouldReparentView:]
  -[SBIconListView _updateEditingStateForIcons:animated:]
  -[SBIconListView iconCoordinateForIndex:forOrientation:]
  -[SBIconListView originForIconAtCoordinate:]
  -[SBIconListView originForIconAtIndex:]
  -[SBIconListView centerForIconCoordinate:metrics:]
  -[SBIconListView removedIcons]
  -[SBIconListView _setupLayoutRunLoopObserver]
  -[SBIconListView performSpecialIconAnimationsWithCompletionHandler:]
  -[SBIconListView pausesIconsForScrolling]
  -[SBIconListView isLayoutReversed]
  -[SBIconListView visibleColumnRange]
  -[SBIconListView predictedVisibleColumn]
  -[SBIconListView centerForIconAtIndex:metrics:]
  -[SBIconListView columnAtPoint:metrics:fractionOfDistanceThroughColumn:]
  -[SBIconListView rowAtPoint:metrics:]
  -[SBIconListView indexForCoordinate:forOrientation:]
  -[SBIconListView _iconIsGapAdjacentAtIndex:]
  -[SBIconListView alignsIconsOnPixelBoundaries]
  -[SBIconListView horizontalBumpForColumn:metrics:]
  -[SBIconListView setCurrentIconLocationTransitionHandler:]
  -[SBIconListView setAlignsIconsOnPixelBoundaries:]
  -[SBIconListView alignmentIconViewSize]
  -[SBIconListView setLayoutProvider:]
  -[SBIconListView rowForIcon:]
  -[SBIconListView fadeInIcon:]
  -[SBIconListView layoutAndCreateIcon:atIndex:]
  -[SBIconListView setAlphaForAllIcons:]
  -[SBIconListView originForIcon:]
  -[SBIconListView numberOfDisplayedIconViews]
  -[SBIconListView coordinateForIconAtIndex:]
  -[SBIconListView iconAtPoint:index:]
  -[SBIconListView enumerateVisibleIconsUsingBlock:]
  -[SBIconListView isDock]
  -[SBIconListView setIconsLabelAlpha:]
  -[SBIconListView rowAtPoint:]
  -[SBIconListView iconLocationTransitionHandler:setProgress:]
  -[SBIconListView iconLocationTransitionHandler:completeTransition:]
  -[SBIconListView setIconsNeedLayout:]


SBIconListRotationIconViewProvider : NSObject /usr/lib/libSystem.B.dylib <SBIconViewProviding>
 @property  SBIconListView *listView

  // instance methods
  -[SBIconListRotationIconViewProvider .cxx_destruct]
  -[SBIconListRotationIconViewProvider listView]
  -[SBIconListRotationIconViewProvider dequeueReusableIconViewOfClass:]
  -[SBIconListRotationIconViewProvider recycleIconView:]
  -[SBIconListRotationIconViewProvider isIconViewRecycled:]
  -[SBIconListRotationIconViewProvider configureIconView:forIcon:]
  -[SBIconListRotationIconViewProvider initWithListView:]


SBIconListViewIconLocationTransitionHandler : NSObject /usr/lib/libSystem.B.dylib <SBIconListViewIconLocationTransitioning, BSDescriptionProviding>
 @property  NSString *iconLocation
 @property  NSString *reason
 @property  SBIconListView *iconListView
 @property  double progress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewIconLocationTransitionHandler reason]
  -[SBIconListViewIconLocationTransitionHandler .cxx_destruct]
  -[SBIconListViewIconLocationTransitionHandler progress]
  -[SBIconListViewIconLocationTransitionHandler succinctDescription]
  -[SBIconListViewIconLocationTransitionHandler descriptionWithMultilinePrefix:]
  -[SBIconListViewIconLocationTransitionHandler succinctDescriptionBuilder]
  -[SBIconListViewIconLocationTransitionHandler descriptionBuilderWithMultilinePrefix:]
  -[SBIconListViewIconLocationTransitionHandler setProgress:]
  -[SBIconListViewIconLocationTransitionHandler completeTransition:]
  -[SBIconListViewIconLocationTransitionHandler iconListView]
  -[SBIconListViewIconLocationTransitionHandler iconLocation]
  -[SBIconListViewIconLocationTransitionHandler initWithIconLocation:reason:iconListView:]


SBHFolderSettings : PTSettings /System/Library/PrivateFrameworks/PrototypeToolsUI.framework/PrototypeToolsUI
 @property  BOOL allowNestedFolders
 @property  BOOL pinchToClose
 @property  double minPinchScale
 @property  BOOL oneColumnAtATime
 @property  BOOL sortsIconsAlphabetically

  // class methods
  +[SBHFolderSettings settingsControllerModule]

  // instance methods
  -[SBHFolderSettings setDefaultValues]
  -[SBHFolderSettings minPinchScale]
  -[SBHFolderSettings allowNestedFolders]
  -[SBHFolderSettings oneColumnAtATime]
  -[SBHFolderSettings pinchToClose]
  -[SBHFolderSettings setAllowNestedFolders:]
  -[SBHFolderSettings setPinchToClose:]
  -[SBHFolderSettings setMinPinchScale:]
  -[SBHFolderSettings setOneColumnAtATime:]
  -[SBHFolderSettings setSortsIconsAlphabetically:]
  -[SBHFolderSettings sortsIconsAlphabetically]


SBIconListFlowLayout : SBIconListGridLayout
  // instance methods
  -[SBIconListFlowLayout iconCoordinateForIndex:forOrientation:inList:]


SBIconBadgeView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <PTSettingsKeyObserver, SBIconAccessoryView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBFParallaxSettings *parallaxSettings
 @property  <SBIconListLayout> *listLayout

  // class methods
  +[SBIconBadgeView _textOffset]
  +[SBIconBadgeView backgroundImageCache]
  +[SBIconBadgeView _checkoutImageForText:font:highlighted:]
  +[SBIconBadgeView _textPadding]
  +[SBIconBadgeView _createImageForText:font:highlighted:]

  // instance methods
  -[SBIconBadgeView init]
  -[SBIconBadgeView dealloc]
  -[SBIconBadgeView .cxx_destruct]
  -[SBIconBadgeView prepareForReuse]
  -[SBIconBadgeView badgeSize]
  -[SBIconBadgeView intrinsicContentSize]
  -[SBIconBadgeView sizeThatFits:]
  -[SBIconBadgeView layoutSubviews]
  -[SBIconBadgeView font]
  -[SBIconBadgeView settings:changedValueForKey:]
  -[SBIconBadgeView _applyParallaxSettings]
  -[SBIconBadgeView setListLayout:]
  -[SBIconBadgeView listLayout]
  -[SBIconBadgeView accessoryCenterForIconBounds:]
  -[SBIconBadgeView configureAnimatedForIcon:infoProvider:animator:]
  -[SBIconBadgeView setParallaxSettings:]
  -[SBIconBadgeView displayingAccessory]
  -[SBIconBadgeView configureForIcon:infoProvider:]
  -[SBIconBadgeView setAccessoryBrightness:]
  -[SBIconBadgeView parallaxSettings]
  -[SBIconBadgeView _clearText]
  -[SBIconBadgeView _checkoutBackgroundImage]
  -[SBIconBadgeView _configureAnimatedForText:highlighted:animator:]
  -[SBIconBadgeView _resizeForTextImage:]
  -[SBIconBadgeView layoutOffset]
  -[SBIconBadgeView intrinsicContentSizeForTextImage:]
  -[SBIconBadgeView _crossfadeToTextImage:animator:]
  -[SBIconBadgeView _zoomInWithTextImage:animator:]
  -[SBIconBadgeView _zoomOutWithAnimator:]


SBHClockIconVisualConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  {CGSize=dd} hourHandSize
 @property  {CGSize=dd} minuteHandSize
 @property  {CGSize=dd} secondHandSize
 @property  double secondHandTailLength
 @property  double hourMinuteHandCenterRadius
 @property  double secondHandCenterRadius
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHClockIconVisualConfiguration init]
  -[SBHClockIconVisualConfiguration copyWithZone:]
  -[SBHClockIconVisualConfiguration succinctDescription]
  -[SBHClockIconVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHClockIconVisualConfiguration succinctDescriptionBuilder]
  -[SBHClockIconVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHClockIconVisualConfiguration setSecondHandTailLength:]
  -[SBHClockIconVisualConfiguration setHourHandSize:]
  -[SBHClockIconVisualConfiguration setMinuteHandSize:]
  -[SBHClockIconVisualConfiguration setSecondHandSize:]
  -[SBHClockIconVisualConfiguration setHourMinuteHandCenterRadius:]
  -[SBHClockIconVisualConfiguration setSecondHandCenterRadius:]
  -[SBHClockIconVisualConfiguration hourMinuteHandCenterRadius]
  -[SBHClockIconVisualConfiguration secondHandCenterRadius]
  -[SBHClockIconVisualConfiguration hourHandSize]
  -[SBHClockIconVisualConfiguration minuteHandSize]
  -[SBHClockIconVisualConfiguration secondHandSize]
  -[SBHClockIconVisualConfiguration secondHandTailLength]


SBHomeScreenButton : UIButton /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  SBHomeScreenMaterialView *materialView

  // class methods
  +[SBHomeScreenButton backgroundInsets]
  +[SBHomeScreenButton defaultContentImage]

  // instance methods
  -[SBHomeScreenButton .cxx_destruct]
  -[SBHomeScreenButton initWithFrame:]
  -[SBHomeScreenButton layoutSubviews]
  -[SBHomeScreenButton setHighlighted:]
  -[SBHomeScreenButton materialView]
  -[SBHomeScreenButton initWithFrame:backgroundView:]


SBIconContinuityBadgeView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <SBIconAccessoryView>
 @property  SBIconAccessoryImage *backgroundImage
 @property  SBIconAccessoryImage *foregroundImage
 @property  SBDarkeningImageView *backgroundView
 @property  UIImageView *foregroundView
 @property  long long badgeType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBFParallaxSettings *parallaxSettings
 @property  <SBIconListLayout> *listLayout

  // class methods
  +[SBIconContinuityBadgeView backgroundImageCache]
  +[SBIconContinuityBadgeView _checkoutImageForContinuityBadgeType:highlighted:]

  // instance methods
  -[SBIconContinuityBadgeView init]
  -[SBIconContinuityBadgeView dealloc]
  -[SBIconContinuityBadgeView .cxx_destruct]
  -[SBIconContinuityBadgeView prepareForReuse]
  -[SBIconContinuityBadgeView badgeSize]
  -[SBIconContinuityBadgeView backgroundImage]
  -[SBIconContinuityBadgeView intrinsicContentSize]
  -[SBIconContinuityBadgeView backgroundView]
  -[SBIconContinuityBadgeView sizeThatFits:]
  -[SBIconContinuityBadgeView layoutSubviews]
  -[SBIconContinuityBadgeView foregroundView]
  -[SBIconContinuityBadgeView setBadgeType:]
  -[SBIconContinuityBadgeView badgeType]
  -[SBIconContinuityBadgeView setListLayout:]
  -[SBIconContinuityBadgeView listLayout]
  -[SBIconContinuityBadgeView accessoryCenterForIconBounds:]
  -[SBIconContinuityBadgeView configureAnimatedForIcon:infoProvider:animator:]
  -[SBIconContinuityBadgeView displayingAccessory]
  -[SBIconContinuityBadgeView configureForIcon:infoProvider:]
  -[SBIconContinuityBadgeView setAccessoryBrightness:]
  -[SBIconContinuityBadgeView _checkoutBackgroundImage]
  -[SBIconContinuityBadgeView layoutOffset]
  -[SBIconContinuityBadgeView _clearIcon]
  -[SBIconContinuityBadgeView setForegroundImage:]
  -[SBIconContinuityBadgeView foregroundImage]


SBHFloatyFolderVisualConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  {CGSize=dd} contentBackgroundSize
 @property  double continuousCornerRadius
 @property  {CGPoint=dd} contentBackgroundOffsetFromCenterInPortrait
 @property  {CGPoint=dd} contentBackgroundOffsetFromCenterInLandscape
 @property  double titleFontSizeInPortrait
 @property  double titleFontSizeInLandscape
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHFloatyFolderVisualConfiguration init]
  -[SBHFloatyFolderVisualConfiguration copyWithZone:]
  -[SBHFloatyFolderVisualConfiguration succinctDescription]
  -[SBHFloatyFolderVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHFloatyFolderVisualConfiguration succinctDescriptionBuilder]
  -[SBHFloatyFolderVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHFloatyFolderVisualConfiguration continuousCornerRadius]
  -[SBHFloatyFolderVisualConfiguration setContinuousCornerRadius:]
  -[SBHFloatyFolderVisualConfiguration setContentBackgroundSize:]
  -[SBHFloatyFolderVisualConfiguration setContentBackgroundOffsetFromCenterInLandscape:]
  -[SBHFloatyFolderVisualConfiguration setContentBackgroundOffsetFromCenterInPortrait:]
  -[SBHFloatyFolderVisualConfiguration setTitleFontSizeInAllOrientations:]
  -[SBHFloatyFolderVisualConfiguration setTitleFontSizeInPortrait:]
  -[SBHFloatyFolderVisualConfiguration setTitleFontSizeInLandscape:]
  -[SBHFloatyFolderVisualConfiguration contentBackgroundSize]
  -[SBHFloatyFolderVisualConfiguration contentBackgroundOffsetFromCenterInLandscape]
  -[SBHFloatyFolderVisualConfiguration contentBackgroundOffsetFromCenterInPortrait]
  -[SBHFloatyFolderVisualConfiguration titleFontSizeInLandscape]
  -[SBHFloatyFolderVisualConfiguration titleFontSizeInPortrait]


SBHIconModel : NSObject /usr/lib/libSystem.B.dylib <SBFolderObserver, SBIconDelegate>
 @property  NSSet *archivedLeafIdentifiers
 @property  NSDictionary *desiredIconState
 @property  NSOrderedSet *desiredIconStateFlattened
 @property  BOOL layingOut
 @property  SBIcon *rootFolderIcon
 @property  <SBIconModelStore> *store
 @property  <SBHIconModelDelegate> *delegate
 @property  SBRootFolder *rootFolder
 @property  unsigned long maxListCountForFolders
 @property  unsigned long maxIconCountForDock
 @property  BOOL supportsDock
 @property  NSSet *visibleIconIdentifiers
 @property  NSSet *hiddenIconTags
 @property  NSSet *visibleIconTags
 @property  NSSet *leafIcons
 @property  NSSet *currentLeafIdentifiers
 @property  NSSet *leafIconIdentifiers
 @property  BOOL ignoresIconsNotInIconState
 @property  BOOL sortsIconsAlphabetically
 @property  BOOL hasDesiredIconState
 @property  NSSet *missingDesiredIconIdentifiers
 @property  NSDictionary *defaultIconState
 @property  NSSet *firstPageLeafIdentifiers
 @property  BOOL restoring
 @property  NSString *localizedDefaultFolderName
 @property  NSString *unlocalizedDefaultFolderName
 @property  BOOL allowsDownloadingIcons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBHIconModel migratedIdentifierForLeafIdentifier:]

  // instance methods
  -[SBHIconModel init]
  -[SBHIconModel delegate]
  -[SBHIconModel setDelegate:]
  -[SBHIconModel .cxx_destruct]
  -[SBHIconModel initWithStore:]
  -[SBHIconModel store]
  -[SBHIconModel layout]
  -[SBHIconModel layoutIfNeeded]
  -[SBHIconModel addIcon:]
  -[SBHIconModel _iconState]
  -[SBHIconModel isRestoring]
  -[SBHIconModel setRestoring:]
  -[SBHIconModel isLayingOut]
  -[SBHIconModel rootFolder]
  -[SBHIconModel supportsDock]
  -[SBHIconModel folder:didAddList:]
  -[SBHIconModel folder:didRemoveLists:atIndexes:]
  -[SBHIconModel folder:didAddIcons:removedIcons:]
  -[SBHIconModel folder:didReplaceIcon:withIcon:]
  -[SBHIconModel desiredIndexPathForIconWithIdentifier:]
  -[SBHIconModel checkModelConsistency]
  -[SBHIconModel saveIconStateIfNeeded]
  -[SBHIconModel clearDesiredIconState]
  -[SBHIconModel leafIconForIdentifier:]
  -[SBHIconModel isIconVisible:]
  -[SBHIconModel addDownloadingIconWithDataSource:]
  -[SBHIconModel removeIconForIdentifier:]
  -[SBHIconModel downloadingIconForBundleIdentifier:]
  -[SBHIconModel removeIcon:]
  -[SBHIconModel clearDesiredIconStateIfPossible]
  -[SBHIconModel desiredFolderCreationActionsForInsertingNewIcon:]
  -[SBHIconModel indexPathForNewIcon:isDesignatedLocation:replaceExistingIconAtIndexPath:]
  -[SBHIconModel deleteIconStateWithOptions:]
  -[SBHIconModel clearDesiredIconStateWithOptions:]
  -[SBHIconModel leafIcons]
  -[SBHIconModel maxListCountForFolders]
  -[SBHIconModel maxIconCountForListInFolderClass:]
  -[SBHIconModel localizedDefaultFolderName]
  -[SBHIconModel localizedFolderNameForDefaultDisplayName:]
  -[SBHIconModel reloadIcons]
  -[SBHIconModel icon:launchFromLocation:context:]
  -[SBHIconModel addIconsOfClass:toSet:]
  -[SBHIconModel iconsOfClass:]
  -[SBHIconModel setSortsIconsAlphabetically:]
  -[SBHIconModel sortsIconsAlphabetically]
  -[SBHIconModel removeAllIcons]
  -[SBHIconModel loadAllIcons]
  -[SBHIconModel leafIdentifiersForMasqueradeIdentifier:]
  -[SBHIconModel prioritizedMasqueradeIconForIdentifier:]
  -[SBHIconModel defaultIconState]
  -[SBHIconModel indexPathInRootFolder:forNewIcon:isDesignatedLocation:replaceExistingIconAtIndexPath:]
  -[SBHIconModel _adjustedDesiredIndexPathInRootFolder:forIconWithIdentifier:]
  -[SBHIconModel _adjustedPlatformIndexPathInRootFolder:forIcon:]
  -[SBHIconModel ignoresIconsNotInIconState]
  -[SBHIconModel archivedLeafIdentifiers]
  -[SBHIconModel firstPageLeafIdentifiers]
  -[SBHIconModel shouldAvoidPlacingIconOnFirstPage:]
  -[SBHIconModel _adjustedIndexPathInRootFolder:withinIconState:forIconWithIdentifier:]
  -[SBHIconModel hasDesiredIconState]
  -[SBHIconModel currentLeafIdentifiers]
  -[SBHIconModel setDesiredIconState:]
  -[SBHIconModel setDesiredIconStateFlattened:]
  -[SBHIconModel leafIconIdentifiers]
  -[SBHIconModel enumerateMasqueradeLeafIdentifiersUsingBlock:]
  -[SBHIconModel enumerateDownloadingIconsUsingBlock:]
  -[SBHIconModel modernizeRootArchive:]
  -[SBHIconModel iconState]
  -[SBHIconModel deleteIconState]
  -[SBHIconModel didUnarchiveMetadata:]
  -[SBHIconModel checkModelConsistencyInRootFolder:]
  -[SBHIconModel iconModelMetadata]
  -[SBHIconModel _saveIconState]
  -[SBHIconModel saveDesiredIconState]
  -[SBHIconModel _rootFolder:moveIconsToFirstPage:placeBumpedIconsSomewhereNice:]
  -[SBHIconModel visibleIconIdentifiers]
  -[SBHIconModel enumerateLeafIconsUsingBlock:]
  -[SBHIconModel adjustIconsToShow:iconsToHide:afterChangeToVisibleIconTags:hiddenIconTags:]
  -[SBHIconModel setLayingOut:]
  -[SBHIconModel willLayout]
  -[SBHIconModel _unarchiveRootFolder]
  -[SBHIconModel setRootFolderIcon:]
  -[SBHIconModel setArchivedLeafIdentifiers:]
  -[SBHIconModel unlocalizedDefaultFolderName]
  -[SBHIconModel allowsDownloadingIcons]
  -[SBHIconModel _canAddDownloadingIconForBundleID:]
  -[SBHIconModel isTrackingIcon:]
  -[SBHIconModel maxIconCountForDock]
  -[SBHIconModel maxRowCountForListInRootFolderWithInterfaceOrientation:]
  -[SBHIconModel maxColumnCountForListInRootFolderWithInterfaceOrientation:]
  -[SBHIconModel leafIconsForIdentifiers:]
  -[SBHIconModel isMasqueradedLeafIdentifier:]
  -[SBHIconModel indexPathForIconInPlatformState:]
  -[SBHIconModel missingDesiredIconIdentifiers]
  -[SBHIconModel importDesiredIconState:]
  -[SBHIconModel setVisibilityOfIconsWithVisibleTags:hiddenTags:]
  -[SBHIconModel addDownloadingIconForBundleID:withIdentifier:]
  -[SBHIconModel hiddenIconTags]
  -[SBHIconModel visibleIconTags]
  -[SBHIconModel setIgnoresIconsNotInIconState:]
  -[SBHIconModel desiredIconState]
  -[SBHIconModel setAllowsDownloadingIcons:]
  -[SBHIconModel desiredIconStateFlattened]
  -[SBHIconModel rootFolderIcon]
  -[SBHIconModel setLeafIconsByIdentifier:]
  -[SBHIconModel setLeafIdentifiersForMasqueradeIdentifier:]
  -[SBHIconModel setForecastedLeavesAndMasqueradesOnIconModel:includingMissingIcons:]


SBIconModelFolderCreationAction : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  SBFolder *folder
 @property  NSIndexPath *indexPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconModelFolderCreationAction .cxx_destruct]
  -[SBIconModelFolderCreationAction indexPath]
  -[SBIconModelFolderCreationAction succinctDescription]
  -[SBIconModelFolderCreationAction descriptionWithMultilinePrefix:]
  -[SBIconModelFolderCreationAction succinctDescriptionBuilder]
  -[SBIconModelFolderCreationAction descriptionBuilderWithMultilinePrefix:]
  -[SBIconModelFolderCreationAction folder]
  -[SBIconModelFolderCreationAction initWithFolder:indexPath:]


SBPercentPassthroughInteractiveTransition : NSObject /usr/lib/libSystem.B.dylib <SBViewControllerInteractiveTransitioning>
 @property  double completionSpeed
 @property  long long completionCurve
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL wantsInteractiveStart

  // instance methods
  -[SBPercentPassthroughInteractiveTransition init]
  -[SBPercentPassthroughInteractiveTransition .cxx_destruct]
  -[SBPercentPassthroughInteractiveTransition startInteractiveTransition:]
  -[SBPercentPassthroughInteractiveTransition finishInteractiveTransition]
  -[SBPercentPassthroughInteractiveTransition completionSpeed]
  -[SBPercentPassthroughInteractiveTransition completionCurve]
  -[SBPercentPassthroughInteractiveTransition setCompletionSpeed:]
  -[SBPercentPassthroughInteractiveTransition setCompletionCurve:]
  -[SBPercentPassthroughInteractiveTransition cancelTransition]
  -[SBPercentPassthroughInteractiveTransition supportsRestarting]
  -[SBPercentPassthroughInteractiveTransition updateTransition:]


SBHFloatingDockStyleConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  unsigned long backgroundEffect
 @property  unsigned long platterEffect
 @property  unsigned long folderIconBackgroundStyle
 @property  BOOL wantsPlatterShadow

  // class methods
  +[SBHFloatingDockStyleConfiguration defaultConfiguration]

  // instance methods
  -[SBHFloatingDockStyleConfiguration init]
  -[SBHFloatingDockStyleConfiguration copyWithZone:]
  -[SBHFloatingDockStyleConfiguration backgroundEffect]
  -[SBHFloatingDockStyleConfiguration platterEffect]
  -[SBHFloatingDockStyleConfiguration folderIconBackgroundStyle]
  -[SBHFloatingDockStyleConfiguration wantsPlatterShadow]
  -[SBHFloatingDockStyleConfiguration initWithBackgroundEffect:platterEffect:wantsPlatterShadow:folderIconBackgroundStyle:]
  -[SBHFloatingDockStyleConfiguration configurationWithWantsPlatterShadow:]


SBFloatingDockIconListView : SBDockIconListView
  // instance methods
  -[SBFloatingDockIconListView configureIconView:forIcon:]
  -[SBFloatingDockIconListView iconColumnsForCurrentOrientation]


SBIconImageCrossfadeView : SBFTouchPassThroughView /System/Library/Frameworks/UIKit.framework/UIKit
 @property  UIView *containerView
 @property  SBIconImageView *iconImageView
 @property  UIView *crossfadeView
 @property  BOOL masksCorners
 @property  BOOL performsTrueCrossfade
 @property  {CGPoint=dd} stretchAnchorPoint

  // instance methods
  -[SBIconImageCrossfadeView .cxx_destruct]
  -[SBIconImageCrossfadeView cleanup]
  -[SBIconImageCrossfadeView containerView]
  -[SBIconImageCrossfadeView layoutSubviews]
  -[SBIconImageCrossfadeView iconImageView]
  -[SBIconImageCrossfadeView _updateCornerMask]
  -[SBIconImageCrossfadeView performsTrueCrossfade]
  -[SBIconImageCrossfadeView setCrossfadeFraction:]
  -[SBIconImageCrossfadeView setMorphFraction:]
  -[SBIconImageCrossfadeView setPerformsTrueCrossfade:]
  -[SBIconImageCrossfadeView masksCorners]
  -[SBIconImageCrossfadeView setMasksCorners:]
  -[SBIconImageCrossfadeView initWithImageView:crossfadeView:]
  -[SBIconImageCrossfadeView setStretchAnchorPoint:]
  -[SBIconImageCrossfadeView prepareGeometry]
  -[SBIconImageCrossfadeView setAppSnapshotCornerRadius:]
  -[SBIconImageCrossfadeView applyCornerRadius:]
  -[SBIconImageCrossfadeView setCornerRadiusEnabled:]
  -[SBIconImageCrossfadeView crossfadeView]
  -[SBIconImageCrossfadeView stretchAnchorPoint]


SBIconStateUnarchiveResult : NSObject /usr/lib/libSystem.B.dylib <SBIconStateUnarchiveContext, BSDescriptionProviding>
 @property  SBRootFolder *rootFolder
 @property  NSDictionary *metadata
 @property  BOOL valid
 @property  BOOL dirty
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconStateUnarchiveResult isValid]
  -[SBIconStateUnarchiveResult .cxx_destruct]
  -[SBIconStateUnarchiveResult metadata]
  -[SBIconStateUnarchiveResult succinctDescription]
  -[SBIconStateUnarchiveResult descriptionWithMultilinePrefix:]
  -[SBIconStateUnarchiveResult succinctDescriptionBuilder]
  -[SBIconStateUnarchiveResult descriptionBuilderWithMultilinePrefix:]
  -[SBIconStateUnarchiveResult isDirty]
  -[SBIconStateUnarchiveResult _setMetadata:]
  -[SBIconStateUnarchiveResult rootFolder]
  -[SBIconStateUnarchiveResult _noteEnteredNode]
  -[SBIconStateUnarchiveResult _noteExitedNode]
  -[SBIconStateUnarchiveResult _pushFolder:]
  -[SBIconStateUnarchiveResult _currentFolder]
  -[SBIconStateUnarchiveResult _popFolder]
  -[SBIconStateUnarchiveResult _currentParseDepth]
  -[SBIconStateUnarchiveResult _noteRepresentationIsCorrupted]
  -[SBIconStateUnarchiveResult _noteSignificantDeviation]
  -[SBIconStateUnarchiveResult _isNodeIdentifierAlreadyUnarchived:]
  -[SBIconStateUnarchiveResult _noteNodeIdentifierWasUnarchived:]
  -[SBIconStateUnarchiveResult _setRootFolder:]


SBHIconStateArchiver : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBHIconStateArchiver indexPathForLeafIdentifier:inArchive:]
  +[SBHIconStateArchiver folderPathForLeafIdentifier:inArchive:iconSource:]
  +[SBHIconStateArchiver leafIdentifiersInListAtIndexPath:inArchive:]
  +[SBHIconStateArchiver leafIdentifiersFromArchive:]
  +[SBHIconStateArchiver modernizeRootArchive:]
  +[SBHIconStateArchiver unarchiveRootFolderFromArchive:withIconSource:]
  +[SBHIconStateArchiver archiveRootFolderInModel:metadata:]
  +[SBHIconStateArchiver _representationForNode:inModel:]
  +[SBHIconStateArchiver _addLeafNodesForNode:toSet:]
  +[SBHIconStateArchiver _pathForNode:toIdentifier:]
  +[SBHIconStateArchiver _nodeAtPath:inNode:]
  +[SBHIconStateArchiver _representationForFolder:inModel:]
  +[SBHIconStateArchiver _representationForIcon:inModel:]
  +[SBHIconStateArchiver _iconContainsMultipleRepresentations:]
  +[SBHIconStateArchiver _representationsForIcon:inModel:]
  +[SBHIconStateArchiver _folderTypeForFolder:]
  +[SBHIconStateArchiver _representationForList:inModel:]
  +[SBHIconStateArchiver iconStateRepresentationForFolder:inModel:]


SBHIconStateUnarchiver : NSObject /usr/lib/libSystem.B.dylib
 @property  id archive
 @property  SBHIconModel *iconSource
 @property  BOOL removesEmptyFolders

  // class methods
  +[SBHIconStateUnarchiver _getFolderDisplayName:defaultDisplayName:forRepresentation:iconSource:]

  // instance methods
  -[SBHIconStateUnarchiver .cxx_destruct]
  -[SBHIconStateUnarchiver archive]
  -[SBHIconStateUnarchiver initWithArchive:iconSource:]
  -[SBHIconStateUnarchiver setRemovesEmptyFolders:]
  -[SBHIconStateUnarchiver unarchive]
  -[SBHIconStateUnarchiver iconSource]
  -[SBHIconStateUnarchiver _nodeFromRepresentation:context:]
  -[SBHIconStateUnarchiver _folderFromRepresentation:withContext:]
  -[SBHIconStateUnarchiver _listFromRepresentation:withMaxIconCount:identifier:context:overflow:]
  -[SBHIconStateUnarchiver _iconFromRepresentation:withContext:]
  -[SBHIconStateUnarchiver removesEmptyFolders]
  -[SBHIconStateUnarchiver _newFolderIconForFolder:]
  -[SBHIconStateUnarchiver _folderClassForFolderType:context:]
  -[SBHIconStateUnarchiver _getFolderDisplayName:defaultDisplayName:forRepresentation:]


SBIconStateFolderPath : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long count

  // instance methods
  -[SBIconStateFolderPath init]
  -[SBIconStateFolderPath count]
  -[SBIconStateFolderPath .cxx_destruct]
  -[SBIconStateFolderPath enumerateFoldersUsingBlock:]
  -[SBIconStateFolderPath addFolderWithName:defaultName:indexPath:]
  -[SBIconStateFolderPath folderDefaultNameAtIndex:]
  -[SBIconStateFolderPath folderIndexPathAtIndex:]
  -[SBIconStateFolderPath folderNameAtIndex:]


SBHIconStateBuilder : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SBHIconStateBuilder iconStateWithIconLists:dock:]
  +[SBHIconStateBuilder iconStateWithIconLists:]
  +[SBHIconStateBuilder iconStateFolderWithName:iconLists:]


SBFolderControllerConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  SBFolder *folder
 @property  long long orientation
 @property  unsigned long allowedOrientations
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  <SBIconViewProviding> *iconViewProvider
 @property  <SBNestingViewControllerDelegate> *delegate
 @property  <SBFolderControllerDelegate> *folderDelegate
 @property  _UILegibilitySettings *legibilitySettings
 @property  SBFolderIconImageCache *folderIconImageCache
 @property  SBHIconImageCache *iconImageCache
 @property  SBIconPageIndicatorImageSetCache *iconPageIndicatorImageSetCache
 @property  SBFolderControllerAnimationContext *animationContext
 @property  UIView *headerView
 @property  double headerHeight
 @property  NSString *originatingIconLocation
 @property  unsigned long userInterfaceLayoutDirectionHandling
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} initialViewFrame
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBFolderControllerConfiguration init]
  -[SBFolderControllerConfiguration copyWithZone:]
  -[SBFolderControllerConfiguration delegate]
  -[SBFolderControllerConfiguration setDelegate:]
  -[SBFolderControllerConfiguration .cxx_destruct]
  -[SBFolderControllerConfiguration orientation]
  -[SBFolderControllerConfiguration setOrientation:]
  -[SBFolderControllerConfiguration initWithConfiguration:]
  -[SBFolderControllerConfiguration succinctDescription]
  -[SBFolderControllerConfiguration descriptionWithMultilinePrefix:]
  -[SBFolderControllerConfiguration succinctDescriptionBuilder]
  -[SBFolderControllerConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBFolderControllerConfiguration headerView]
  -[SBFolderControllerConfiguration setHeaderView:]
  -[SBFolderControllerConfiguration legibilitySettings]
  -[SBFolderControllerConfiguration setLegibilitySettings:]
  -[SBFolderControllerConfiguration animationContext]
  -[SBFolderControllerConfiguration setAnimationContext:]
  -[SBFolderControllerConfiguration headerHeight]
  -[SBFolderControllerConfiguration setHeaderHeight:]
  -[SBFolderControllerConfiguration folder]
  -[SBFolderControllerConfiguration setFolder:]
  -[SBFolderControllerConfiguration allowedOrientations]
  -[SBFolderControllerConfiguration setAllowedOrientations:]
  -[SBFolderControllerConfiguration listLayoutProvider]
  -[SBFolderControllerConfiguration folderIconImageCache]
  -[SBFolderControllerConfiguration setFolderIconImageCache:]
  -[SBFolderControllerConfiguration iconViewProvider]
  -[SBFolderControllerConfiguration setListLayoutProvider:]
  -[SBFolderControllerConfiguration setIconViewProvider:]
  -[SBFolderControllerConfiguration iconPageIndicatorImageSetCache]
  -[SBFolderControllerConfiguration setIconPageIndicatorImageSetCache:]
  -[SBFolderControllerConfiguration setFolderDelegate:]
  -[SBFolderControllerConfiguration setOriginatingIconLocation:]
  -[SBFolderControllerConfiguration originatingIconLocation]
  -[SBFolderControllerConfiguration folderDelegate]
  -[SBFolderControllerConfiguration iconImageCache]
  -[SBFolderControllerConfiguration userInterfaceLayoutDirectionHandling]
  -[SBFolderControllerConfiguration setIconImageCache:]
  -[SBFolderControllerConfiguration initialViewFrame]
  -[SBFolderControllerConfiguration setUserInterfaceLayoutDirectionHandling:]
  -[SBFolderControllerConfiguration setInitialViewFrame:]


SBHomeScreenMaterialView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  BOOL highlighted
 @property  double brightness
 @property  {UIEdgeInsets=dddd} backgroundInsets

  // class methods
  +[SBHomeScreenMaterialView colorBurnContentImageForImage:]

  // instance methods
  -[SBHomeScreenMaterialView .cxx_destruct]
  -[SBHomeScreenMaterialView brightness]
  -[SBHomeScreenMaterialView setBrightness:]
  -[SBHomeScreenMaterialView initWithFrame:]
  -[SBHomeScreenMaterialView layoutSubviews]
  -[SBHomeScreenMaterialView isHighlighted]
  -[SBHomeScreenMaterialView setHighlighted:]
  -[SBHomeScreenMaterialView setLegibilityStyle:]
  -[SBHomeScreenMaterialView backgroundInsets]
  -[SBHomeScreenMaterialView initWithFrame:backgroundView:foregroundImage:]
  -[SBHomeScreenMaterialView setBackgroundInsets:]
  -[SBHomeScreenMaterialView _addHighlightViewIfNecessary]


SBIconLabelImageParametersBuilder : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *text
 @property  SBIcon *icon
 @property  SBIconView *iconView
 @property  Class iconViewClass
 @property  NSString *iconLocation
 @property  <SBIconListLayoutProvider> *listLayoutProvider
 @property  {CGSize=dd} iconImageSize
 @property  _UILegibilitySettings *legibilitySettings
 @property  BOOL accessibilityReduceTransparencyEnabled
 @property  NSString *contentSizeCategory
 @property  UIColor *focusHighlightColor
 @property  double scale
 @property  long long labelAccessoryType
 @property  UIFont *font
 @property  UIColor *textColor
 @property  {UIEdgeInsets=dddd} textInsets
 @property  NSString *overrideText

  // class methods
  +[SBIconLabelImageParametersBuilder defaultFontForContentSizeCategory:languageInsets:]
  +[SBIconLabelImageParametersBuilder insetsForFont:]
  +[SBIconLabelImageParametersBuilder _normalFontSizeForSizeParameter:]
  +[SBIconLabelImageParametersBuilder _fontSizeParameterForContentSizeCategory:]

  // instance methods
  -[SBIconLabelImageParametersBuilder init]
  -[SBIconLabelImageParametersBuilder .cxx_destruct]
  -[SBIconLabelImageParametersBuilder scale]
  -[SBIconLabelImageParametersBuilder text]
  -[SBIconLabelImageParametersBuilder setScale:]
  -[SBIconLabelImageParametersBuilder setText:]
  -[SBIconLabelImageParametersBuilder setContentSizeCategory:]
  -[SBIconLabelImageParametersBuilder contentSizeCategory]
  -[SBIconLabelImageParametersBuilder setTextColor:]
  -[SBIconLabelImageParametersBuilder setFont:]
  -[SBIconLabelImageParametersBuilder font]
  -[SBIconLabelImageParametersBuilder icon]
  -[SBIconLabelImageParametersBuilder setIcon:]
  -[SBIconLabelImageParametersBuilder textColor]
  -[SBIconLabelImageParametersBuilder legibilitySettings]
  -[SBIconLabelImageParametersBuilder setLegibilitySettings:]
  -[SBIconLabelImageParametersBuilder _maxSize]
  -[SBIconLabelImageParametersBuilder iconView]
  -[SBIconLabelImageParametersBuilder setIconView:]
  -[SBIconLabelImageParametersBuilder textInsets]
  -[SBIconLabelImageParametersBuilder setTextInsets:]
  -[SBIconLabelImageParametersBuilder listLayout]
  -[SBIconLabelImageParametersBuilder listLayoutProvider]
  -[SBIconLabelImageParametersBuilder iconLocation]
  -[SBIconLabelImageParametersBuilder setListLayoutProvider:]
  -[SBIconLabelImageParametersBuilder iconImageSize]
  -[SBIconLabelImageParametersBuilder setIcon:forLocation:]
  -[SBIconLabelImageParametersBuilder setLabelAccessoryType:]
  -[SBIconLabelImageParametersBuilder setOverrideText:]
  -[SBIconLabelImageParametersBuilder buildParameters]
  -[SBIconLabelImageParametersBuilder labelAccessoryType]
  -[SBIconLabelImageParametersBuilder setAccessibilityReduceTransparencyEnabled:]
  -[SBIconLabelImageParametersBuilder setFocusHighlightColor:]
  -[SBIconLabelImageParametersBuilder focusHighlightColor]
  -[SBIconLabelImageParametersBuilder iconViewClass]
  -[SBIconLabelImageParametersBuilder isAccessibilityReduceTransparencyEnabled]
  -[SBIconLabelImageParametersBuilder _hasValidInputs]
  -[SBIconLabelImageParametersBuilder overrideText]
  -[SBIconLabelImageParametersBuilder _fontWithLanguageInsets:]
  -[SBIconLabelImageParametersBuilder _canTruncateLabel]
  -[SBIconLabelImageParametersBuilder _canTightenLabel]
  -[SBIconLabelImageParametersBuilder setIconViewClass:]
  -[SBIconLabelImageParametersBuilder setFont:insets:]


SBIcon : NSObject /usr/lib/libSystem.B.dylib <SBTreeNode, SBIconIndexNode, BSDescriptionProviding, NSCopying>
 @property  <SBIconDelegate> *delegate
 @property  BOOL shouldWarmUp
 @property  NSString *displayName
 @property  BOOL canTruncateLabel
 @property  BOOL canTightenLabel
 @property  NSArray *tags
 @property  long long badgeValue
 @property  id badgeNumberOrString
 @property  NSString *iconCategoryDescription
 @property  NSString *iconFileSizeDescription
 @property  long long labelAccessoryType
 @property  BOOL launchEnabled
 @property  BOOL launchDisabledForObscuredReason
 @property  long long progressState
 @property  double progressPercent
 @property  BOOL progressPaused
 @property  BOOL shouldAnimateProgress
 @property  BOOL uninstalled
 @property  BOOL uninstallSupported
 @property  NSString *uninstallAlertTitle
 @property  NSString *uninstallAlertBody
 @property  NSString *uninstallAlertConfirmTitle
 @property  NSString *uninstallAlertCancelTitle
 @property  BOOL timedOut
 @property  NSArray *folderTitleOptions
 @property  NSString *folderFallbackTitle
 @property  BOOL canReceiveGrabbedIcon
 @property  BOOL canBeAddedToMultiItemDrag
 @property  NSString *automationID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *children
 @property  <SBTreeNode> *parent
 @property  NSString *uniqueIdentifier

  // class methods
  +[SBIcon downloadingIconClass]
  +[SBIcon hasIconImage]
  +[SBIcon canGenerateIconsInBackground]
  +[SBIcon iconImageFromUnmaskedImage:info:]
  +[SBIcon forcesBackgroundIconGeneration]

  // instance methods
  -[SBIcon copyWithZone:]
  -[SBIcon parent]
  -[SBIcon setParent:]
  -[SBIcon delegate]
  -[SBIcon setDelegate:]
  -[SBIcon .cxx_destruct]
  -[SBIcon addObserver:]
  -[SBIcon removeObserver:]
  -[SBIcon tags]
  -[SBIcon uniqueIdentifier]
  -[SBIcon displayName]
  -[SBIcon isPlaceholder]
  -[SBIcon setBadge:]
  -[SBIcon applicationBundleID]
  -[SBIcon succinctDescription]
  -[SBIcon descriptionWithMultilinePrefix:]
  -[SBIcon succinctDescriptionBuilder]
  -[SBIcon descriptionBuilderWithMultilinePrefix:]
  -[SBIcon children]
  -[SBIcon removeChild:]
  -[SBIcon badgeValue]
  -[SBIcon hasObserver:]
  -[SBIcon nodeIdentifier]
  -[SBIcon enumerateObserversUsingBlock:]
  -[SBIcon folder]
  -[SBIcon localeChanged]
  -[SBIcon progressState]
  -[SBIcon addNodeObserver:]
  -[SBIcon removeNodeObserver:]
  -[SBIcon isTimedOut]
  -[SBIcon isFolderIcon]
  -[SBIcon containsNodeIdentifier:]
  -[SBIcon iconImageWithInfo:]
  -[SBIcon isLaunchEnabled]
  -[SBIcon isLaunchDisabledForObscuredReason]
  -[SBIcon displayNameForObscuredDisabledLaunchForLocation:]
  -[SBIcon labelAccessoryType]
  -[SBIcon iconImageViewClassForLocation:]
  -[SBIcon accessoryTypeForLocation:]
  -[SBIcon automationID]
  -[SBIcon canReceiveGrabbedIcon]
  -[SBIcon representedSceneIdentifier]
  -[SBIcon launchFromLocation:context:]
  -[SBIcon isProgressPaused]
  -[SBIcon progressPercent]
  -[SBIcon shouldAnimateProgress]
  -[SBIcon downloadingIconDataSource]
  -[SBIcon uninstallAlertBody]
  -[SBIcon descriptionForLocation:]
  -[SBIcon isDownloadingIcon]
  -[SBIcon assumesAppInstallFinishedForFolderProgress]
  -[SBIcon displayNameForLocation:]
  -[SBIcon isLeafIcon]
  -[SBIcon leafIdentifier]
  -[SBIcon nodeDescriptionWithPrefix:]
  -[SBIcon isGrabbedIconPlaceholder]
  -[SBIcon isUninstalled]
  -[SBIcon canBeAddedToMultiItemDrag]
  -[SBIcon setUninstalled]
  -[SBIcon completeUninstall]
  -[SBIcon folderTitleOptions]
  -[SBIcon folderFallbackTitle]
  -[SBIcon possibleUserTapBeganWithAbsoluteTime:andContinuousTime:]
  -[SBIcon possibleUserTapDidCancel]
  -[SBIcon indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBIcon nodesAlongIndexPath:consumedIndexes:]
  -[SBIcon containedNodeIdentifiers]
  -[SBIcon localizedCompareDisplayNames:]
  -[SBIcon unmaskedIconImageWithInfo:]
  -[SBIcon genericIconImageWithInfo:]
  -[SBIcon _notifyAccessoriesDidUpdate]
  -[SBIcon _notifyLaunchEnabledDidChange]
  -[SBIcon reloadIconImage]
  -[SBIcon generateIconImageWithInfo:]
  -[SBIcon canTruncateLabel]
  -[SBIcon canTightenLabel]
  -[SBIcon badgeNumberOrString]
  -[SBIcon accessoryTextForLocation:]
  -[SBIcon masqueradeIdentifier]
  -[SBIcon isUninstallSupported]
  -[SBIcon ancestryDidChange]
  -[SBIcon parentFolderIcon]
  -[SBIcon _notifyImageDidUpdate]
  -[SBIcon noteBadgeDidChange]
  -[SBIcon shouldWarmUp]
  -[SBIcon uninstallAlertTitle]
  -[SBIcon uninstallAlertConfirmTitle]
  -[SBIcon uninstallAlertCancelTitle]
  -[SBIcon iconCategoryDescription]
  -[SBIcon iconSizeDescription]
  -[SBIcon iconFileSizeDescription]


SBFolderContainerView : SBFTouchPassThroughView /System/Library/Frameworks/UIKit.framework/UIKit
 @property  SBFolderView *folderView
 @property  SBFolderContainerView *childFolderContainerView
 @property  UIView *backgroundView
 @property  double statusBarHeight
 @property  SBIconLayoutOverrideStrategy *iconLayoutOverrideStrategy

  // instance methods
  -[SBFolderContainerView .cxx_destruct]
  -[SBFolderContainerView initWithFrame:]
  -[SBFolderContainerView backgroundView]
  -[SBFolderContainerView layoutSubviews]
  -[SBFolderContainerView setBackgroundView:]
  -[SBFolderContainerView statusBarHeight]
  -[SBFolderContainerView setStatusBarHeight:]
  -[SBFolderContainerView initWithFolderView:statusBarHeight:]
  -[SBFolderContainerView folderView]
  -[SBFolderContainerView setChildFolderContainerView:]
  -[SBFolderContainerView iconLayoutOverrideStrategy]
  -[SBFolderContainerView setIconLayoutOverrideStrategy:]
  -[SBFolderContainerView _frameForFolderView:]
  -[SBFolderContainerView childFolderContainerView]


SBRootFolderControllerConfiguration : SBFolderControllerConfiguration
 @property  BOOL forSnapshot
 @property  BOOL dockExternal
 @property  BOOL dockPinnedForRotation
 @property  BOOL showsDoneButtonWhileEditing
 @property  UIViewController *pullDownSearchViewController
 @property  UIViewController<SBHLegibility> *todayViewController
 @property  UIViewController<SBHSidebarProvider> *sidebarViewController
 @property  BOOL sidebarVisible
 @property  BOOL sidebarPinned
 @property  unsigned long sidebarAllowedOrientations
 @property  unsigned long ignoresOverscrollOnFirstPageOrientations
 @property  UIViewController<SBHLegibility> *portraitHeaderViewController

  // instance methods
  -[SBRootFolderControllerConfiguration init]
  -[SBRootFolderControllerConfiguration .cxx_destruct]
  -[SBRootFolderControllerConfiguration initWithConfiguration:]
  -[SBRootFolderControllerConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBRootFolderControllerConfiguration isForSnapshot]
  -[SBRootFolderControllerConfiguration setForSnapshot:]
  -[SBRootFolderControllerConfiguration sidebarViewController]
  -[SBRootFolderControllerConfiguration showsDoneButtonWhileEditing]
  -[SBRootFolderControllerConfiguration pullDownSearchViewController]
  -[SBRootFolderControllerConfiguration todayViewController]
  -[SBRootFolderControllerConfiguration portraitHeaderViewController]
  -[SBRootFolderControllerConfiguration isDockExternal]
  -[SBRootFolderControllerConfiguration isDockPinnedForRotation]
  -[SBRootFolderControllerConfiguration isSidebarPinned]
  -[SBRootFolderControllerConfiguration setSidebarPinned:]
  -[SBRootFolderControllerConfiguration isSidebarVisible]
  -[SBRootFolderControllerConfiguration setPullDownSearchViewController:]
  -[SBRootFolderControllerConfiguration setTodayViewController:]
  -[SBRootFolderControllerConfiguration setSidebarViewController:]
  -[SBRootFolderControllerConfiguration sidebarAllowedOrientations]
  -[SBRootFolderControllerConfiguration ignoresOverscrollOnFirstPageOrientations]
  -[SBRootFolderControllerConfiguration setShowsDoneButtonWhileEditing:]
  -[SBRootFolderControllerConfiguration setDockExternal:]
  -[SBRootFolderControllerConfiguration setDockPinnedForRotation:]
  -[SBRootFolderControllerConfiguration setSidebarVisible:]
  -[SBRootFolderControllerConfiguration setSidebarAllowedOrientations:]
  -[SBRootFolderControllerConfiguration setIgnoresOverscrollOnFirstPageOrientations:]
  -[SBRootFolderControllerConfiguration setPortraitHeaderViewController:]


SBHIconLabelVisualConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  double fontSize
 @property  double baselineOffsetFromImage
 @property  double height
 @property  double widthDelta
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBHIconLabelVisualConfiguration init]
  -[SBHIconLabelVisualConfiguration copyWithZone:]
  -[SBHIconLabelVisualConfiguration height]
  -[SBHIconLabelVisualConfiguration setHeight:]
  -[SBHIconLabelVisualConfiguration fontSize]
  -[SBHIconLabelVisualConfiguration setFontSize:]
  -[SBHIconLabelVisualConfiguration succinctDescription]
  -[SBHIconLabelVisualConfiguration descriptionWithMultilinePrefix:]
  -[SBHIconLabelVisualConfiguration succinctDescriptionBuilder]
  -[SBHIconLabelVisualConfiguration descriptionBuilderWithMultilinePrefix:]
  -[SBHIconLabelVisualConfiguration setBaselineOffsetFromImage:]
  -[SBHIconLabelVisualConfiguration setWidthDelta:]
  -[SBHIconLabelVisualConfiguration baselineOffsetFromImage]
  -[SBHIconLabelVisualConfiguration widthDelta]


SBTitledHomeScreenButton : SBHomeScreenButton
  // class methods
  +[SBTitledHomeScreenButton contentImageWithTitle:]

  // instance methods
  -[SBTitledHomeScreenButton initWithFrame:]
  -[SBTitledHomeScreenButton sizeThatFits:]


SBHEditingDoneButton : SBTitledHomeScreenButton
  // class methods
  +[SBHEditingDoneButton defaultTitle]
  +[SBHEditingDoneButton defaultContentImage]


SBIconListGridLayout : NSObject /usr/lib/libSystem.B.dylib <SBIconListLayout, BSDescriptionProviding>
 @property  SBIconListGridLayoutConfiguration *layoutConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long maximumIconCount
 @property  {SBIconImageInfo={CGSize=dd}dd} iconImageInfo
 @property  SBHIconAccessoryVisualConfiguration *iconAccessoryVisualConfiguration
 @property  SBHFolderIconVisualConfiguration *folderIconVisualConfiguration
 @property  SBHClockIconVisualConfiguration *clockIconVisualConfiguration
 @property  SBHFloatyFolderVisualConfiguration *floatyFolderVisualConfiguration
 @property  SBHSidebarVisualConfiguration *sidebarVisualConfiguration
 @property  BOOL usesAlternateLayout

  // instance methods
  -[SBIconListGridLayout init]
  -[SBIconListGridLayout .cxx_destruct]
  -[SBIconListGridLayout succinctDescription]
  -[SBIconListGridLayout descriptionWithMultilinePrefix:]
  -[SBIconListGridLayout succinctDescriptionBuilder]
  -[SBIconListGridLayout descriptionBuilderWithMultilinePrefix:]
  -[SBIconListGridLayout iconImageInfo]
  -[SBIconListGridLayout iconAccessoryVisualConfiguration]
  -[SBIconListGridLayout folderIconVisualConfiguration]
  -[SBIconListGridLayout floatyFolderVisualConfiguration]
  -[SBIconListGridLayout clockIconVisualConfiguration]
  -[SBIconListGridLayout sidebarVisualConfiguration]
  -[SBIconListGridLayout initWithLayoutConfiguration:]
  -[SBIconListGridLayout labelVisualConfigurationForContentSizeCategory:options:]
  -[SBIconListGridLayout labelFontForContentSizeCategory:options:]
  -[SBIconListGridLayout maximumIconCount]
  -[SBIconListGridLayout numberOfColumnsForOrientation:]
  -[SBIconListGridLayout numberOfRowsForOrientation:]
  -[SBIconListGridLayout layoutInsetsForOrientation:]
  -[SBIconListGridLayout usesAlternateLayout]
  -[SBIconListGridLayout noteIcons:didDropAtCoordinate:inList:]
  -[SBIconListGridLayout iconCoordinateForIndex:forOrientation:inList:]
  -[SBIconListGridLayout accessoryFontForContentSizeCategory:options:]
  -[SBIconListGridLayout accessoryBoldFont]
  -[SBIconListGridLayout accessoryFont]
  -[SBIconListGridLayout layoutConfiguration]


_SBIconListModelTransaction : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *requestID

  // instance methods
  -[_SBIconListModelTransaction .cxx_destruct]
  -[_SBIconListModelTransaction initWithRequestID:]
  -[_SBIconListModelTransaction requestID]
  -[_SBIconListModelTransaction addNodeIdentifiers:]
  -[_SBIconListModelTransaction removeNodeIdentifiers:]
  -[_SBIconListModelTransaction commitChangesToObservers:forNode:]


SBIconListModel : NSObject /usr/lib/libSystem.B.dylib <SBIconIndexMutableListObserver, SBTreeNode, SBIconIndexNode, NSFastEnumeration>
 @property  SBFolder *folder
 @property  unsigned long numberOfIcons
 @property  unsigned long numberOfNonPlaceholderIcons
 @property  unsigned long maxNumberOfIcons
 @property  NSArray *icons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *children
 @property  <SBTreeNode> *parent
 @property  NSString *uniqueIdentifier

  // instance methods
  -[SBIconListModel init]
  -[SBIconListModel dealloc]
  -[SBIconListModel parent]
  -[SBIconListModel countByEnumeratingWithState:objects:count:]
  -[SBIconListModel isEmpty]
  -[SBIconListModel setParent:]
  -[SBIconListModel .cxx_destruct]
  -[SBIconListModel sortUsingSelector:]
  -[SBIconListModel icons]
  -[SBIconListModel uniqueIdentifier]
  -[SBIconListModel succinctDescription]
  -[SBIconListModel descriptionWithMultilinePrefix:]
  -[SBIconListModel succinctDescriptionBuilder]
  -[SBIconListModel descriptionBuilderWithMultilinePrefix:]
  -[SBIconListModel children]
  -[SBIconListModel removeChild:]
  -[SBIconListModel setIcons:]
  -[SBIconListModel iconAtIndex:]
  -[SBIconListModel addIcon:]
  -[SBIconListModel isFull]
  -[SBIconListModel nodeIdentifier]
  -[SBIconListModel addIcons:]
  -[SBIconListModel folder]
  -[SBIconListModel addNodeObserver:]
  -[SBIconListModel removeNodeObserver:]
  -[SBIconListModel addListObserver:]
  -[SBIconListModel directlyContainsIcon:]
  -[SBIconListModel containsNodeIdentifier:]
  -[SBIconListModel numberOfIcons]
  -[SBIconListModel nodeDescriptionWithPrefix:]
  -[SBIconListModel firstFreeSlotIndex]
  -[SBIconListModel allowsAddingIconCount:]
  -[SBIconListModel canBounceIcon:]
  -[SBIconListModel removeIconAtIndex:]
  -[SBIconListModel indexForIcon:]
  -[SBIconListModel moveContainedIcons:toContiguousIndicesStartingAt:]
  -[SBIconListModel directlyContainedIconWithIdentifier:]
  -[SBIconListModel enumerateIconsUsingBlock:]
  -[SBIconListModel removeIcon:]
  -[SBIconListModel indexPathsForContainedNodeIdentifier:prefixPath:]
  -[SBIconListModel nodesAlongIndexPath:consumedIndexes:]
  -[SBIconListModel containedNodeIdentifiers]
  -[SBIconListModel list:didRemoveContainedNodeIdentifiers:]
  -[SBIconListModel listDidMoveNodes:]
  -[SBIconListModel list:didAddContainedNodeIdentifiers:]
  -[SBIconListModel numberOfNonPlaceholderIcons]
  -[SBIconListModel enumerateFolderIconsUsingBlock:]
  -[SBIconListModel removeListObserver:]
  -[SBIconListModel isIconStateDirty]
  -[SBIconListModel markIconStateClean]
  -[SBIconListModel initWithFolder:maxIconCount:]
  -[SBIconListModel placeIcon:atIndex:]
  -[SBIconListModel insertIcon:atIndex:options:]
  -[SBIconListModel maxNumberOfIcons]
  -[SBIconListModel addIconsOfClass:toSet:]
  -[SBIconListModel iconsOfClass:]
  -[SBIconListModel directlyContainsLeafIconWithIdentifier:]
  -[SBIconListModel ancestryDidChange]
  -[SBIconListModel removeAllIcons]
  -[SBIconListModel allowsAddingIcon:]
  -[SBIconListModel initWithUniqueIdentifier:folder:maxIconCount:]
  -[SBIconListModel _iconAtIndex:]
  -[SBIconListModel addIcon:asDirty:]
  -[SBIconListModel willAddIcon:]
  -[SBIconListModel _notifyListObservers:]
  -[SBIconListModel markIconStateDirty]
  -[SBIconListModel placeIcon:atIndex:notifyingObservers:]
  -[SBIconListModel isFullIncludingPlaceholders]
  -[SBIconListModel _coalesceChangesWithRequestID:changeBlock:]
  -[SBIconListModel directlyContainsIconWithIdentifier:]
  -[SBIconListModel directlyContainedIconPassingTest:]
  -[SBIconListModel insertIcon:atIndex:]
  -[SBIconListModel moveContainedIcon:toIndex:]


SBDockView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UIColor *accessibilityBackgroundColor
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIView *backgroundView
 @property  unsigned long dockEdge
 @property  double dockHeight
 @property  double dockHeightPadding
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} dockListViewFrame
 @property  SBDockIconListView *dockListView
 @property  double dockListOffset
 @property  <SBDockViewDelegate> *delegate
 @property  BOOL dockInset

  // class methods
  +[SBDockView defaultHeight]
  +[SBDockView defaultHeightPadding]

  // instance methods
  -[SBDockView dealloc]
  -[SBDockView delegate]
  -[SBDockView setDelegate:]
  -[SBDockView .cxx_destruct]
  -[SBDockView traitCollection]
  -[SBDockView traitCollectionDidChange:]
  -[SBDockView backgroundView]
  -[SBDockView layoutSubviews]
  -[SBDockView didMoveToWindow]
  -[SBDockView setBackgroundAlpha:]
  -[SBDockView setBackgroundView:]
  -[SBDockView legibilitySettings]
  -[SBDockView setLegibilitySettings:]
  -[SBDockView dockListView]
  -[SBDockView _backgroundContrastDidChange:]
  -[SBDockView dockEdge]
  -[SBDockView setDockEdge:]
  -[SBDockView dockHeight]
  -[SBDockView initWithDockListView:forSnapshot:]
  -[SBDockView _minimumHomeScreenScale]
  -[SBDockView setDockListOffset:]
  -[SBDockView updateAccessibilityTintColor]
  -[SBDockView dockHeightPadding]
  -[SBDockView isDockInset]
  -[SBDockView getDockViewMetrics:]
  -[SBDockView dockListOffset]
  -[SBDockView _updateCornerRadii]
  -[SBDockView dockListViewFrame]
  -[SBDockView accessibilityBackgroundColor]


SBSearchScrollView : UIScrollView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
  // instance methods
  -[SBSearchScrollView gestureRecognizerShouldBegin:]
  -[SBSearchScrollView gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]


SBSearchGesture : NSObject /usr/lib/libSystem.B.dylib <UIScrollViewDelegate, BSDescriptionProviding>
 @property  UIView *targetView
 @property  BOOL animatingResetOrReveal
 @property  BOOL showingSearch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBSearchGesture searchHeaderHeight]

  // instance methods
  -[SBSearchGesture init]
  -[SBSearchGesture .cxx_destruct]
  -[SBSearchGesture addObserver:]
  -[SBSearchGesture removeObserver:]
  -[SBSearchGesture succinctDescription]
  -[SBSearchGesture descriptionWithMultilinePrefix:]
  -[SBSearchGesture succinctDescriptionBuilder]
  -[SBSearchGesture descriptionBuilderWithMultilinePrefix:]
  -[SBSearchGesture scrollViewDidScroll:]
  -[SBSearchGesture scrollViewWillBeginDragging:]
  -[SBSearchGesture scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[SBSearchGesture scrollViewDidEndDragging:willDecelerate:]
  -[SBSearchGesture scrollViewDidEndDecelerating:]
  -[SBSearchGesture scrollViewDidEndScrollingAnimation:]
  -[SBSearchGesture scrollViewDidScrollToTop:]
  -[SBSearchGesture targetView]
  -[SBSearchGesture setTargetView:]
  -[SBSearchGesture requireGestureRecognizerToFail:]
  -[SBSearchGesture setDisabled:forReason:]
  -[SBSearchGesture resetAnimated:]
  -[SBSearchGesture revealAnimated:]
  -[SBSearchGesture updateForRotation]
  -[SBSearchGesture _notifyThaWeStartedShowingOrHiding]
  -[SBSearchGesture _updateForFinalContentOffset]
  -[SBSearchGesture _updateForScrollingEnded]
  -[SBSearchGesture _updateScrollingEnabled]
  -[SBSearchGesture _isShowingSearch]
  -[SBSearchGesture isShowingSearch]
  -[SBSearchGesture isAnimatingResetOrReveal]


SBIconLabelImageParameters : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying>
 @property  NSString *text
 @property  {CGSize=dd} maxSize
 @property  UIFont *font
 @property  double scale
 @property  BOOL canTruncate
 @property  BOOL canTighten
 @property  BOOL containsEmoji
 @property  long long legibilityStyle
 @property  UIColor *textColor
 @property  BOOL accessibilityReduceTransparencyEnabled
 @property  NSString *contentSizeCategory
 @property  UIColor *focusHighlightColor
 @property  {UIEdgeInsets=dddd} textInsets
 @property  {UIEdgeInsets=dddd} fontLanguageInsets
 @property  NSString *iconLocation
 @property  BOOL colorspaceGrayscale

  // instance methods
  -[SBIconLabelImageParameters init]
  -[SBIconLabelImageParameters isEqual:]
  -[SBIconLabelImageParameters copyWithZone:]
  -[SBIconLabelImageParameters mutableCopyWithZone:]
  -[SBIconLabelImageParameters .cxx_destruct]
  -[SBIconLabelImageParameters scale]
  -[SBIconLabelImageParameters initWithParameters:]
  -[SBIconLabelImageParameters text]
  -[SBIconLabelImageParameters contentSizeCategory]
  -[SBIconLabelImageParameters font]
  -[SBIconLabelImageParameters textColor]
  -[SBIconLabelImageParameters legibilityStyle]
  -[SBIconLabelImageParameters maxSize]
  -[SBIconLabelImageParameters textInsets]
  -[SBIconLabelImageParameters iconLocation]
  -[SBIconLabelImageParameters canTruncate]
  -[SBIconLabelImageParameters canTighten]
  -[SBIconLabelImageParameters fontLanguageInsets]
  -[SBIconLabelImageParameters focusHighlightColor]
  -[SBIconLabelImageParameters isColorspaceGrayscale]
  -[SBIconLabelImageParameters containsEmoji]
  -[SBIconLabelImageParameters isAccessibilityReduceTransparencyEnabled]
  -[SBIconLabelImageParameters _noteNeedsHashRecalculation]


SBHAdjustableRootIconListLayoutProvider : SBHDefaultIconListLayoutProvider
  // instance methods
  -[SBHAdjustableRootIconListLayoutProvider layoutForIconLocation:]


SBIconRotationContainer : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  SBIconView *startView
 @property  SBIconView *endView
 @property  <SBIconViewProviding> *iconViewProvider
 @property  SBIcon *startIcon
 @property  SBIcon *endIcon
 @property  {SBIconCoordinate=qq} coordinate
 @property  NSString *location
 @property  long long transitionAnimation
 @property  BOOL offscreen

  // instance methods
  -[SBIconRotationContainer .cxx_destruct]
  -[SBIconRotationContainer coordinate]
  -[SBIconRotationContainer location]
  -[SBIconRotationContainer layoutSubviews]
  -[SBIconRotationContainer endView]
  -[SBIconRotationContainer startView]
  -[SBIconRotationContainer performTransition]
  -[SBIconRotationContainer iconViewProvider]
  -[SBIconRotationContainer setIconViewProvider:]
  -[SBIconRotationContainer initWithFrame:startIcon:endIcon:iconViewProvider:coordinate:location:transitionAnimation:offscreen:]
  -[SBIconRotationContainer prepareToTransition]
  -[SBIconRotationContainer endIcon]
  -[SBIconRotationContainer concludeTransition]
  -[SBIconRotationContainer addIconViewForIcon:configurationOptions:]
  -[SBIconRotationContainer transitionAnimation]
  -[SBIconRotationContainer startIcon]
  -[SBIconRotationContainer isOffscreen]


SBIconPreviousLocationTracker : NSObject /usr/lib/libSystem.B.dylib
 @property  SBHIconModel *iconModel

  // instance methods
  -[SBIconPreviousLocationTracker .cxx_destruct]
  -[SBIconPreviousLocationTracker iconModel]
  -[SBIconPreviousLocationTracker captureLocationInfoForIcon:inModel:]
  -[SBIconPreviousLocationTracker previousLocationInfoForIcon:]
  -[SBIconPreviousLocationTracker setIconModel:]


SBIconPreviousLocationInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  SBFolder *folder
 @property  NSString *folderName

  // instance methods
  -[SBIconPreviousLocationInfo .cxx_destruct]
  -[SBIconPreviousLocationInfo folder]
  -[SBIconPreviousLocationInfo setFolder:]
  -[SBIconPreviousLocationInfo folderName]
  -[SBIconPreviousLocationInfo setFolderName:]


SBFloatingDockView : SBFTouchPassThroughView /System/Library/Frameworks/UIKit.framework/UIKit
 @property  SBFloatingDockPlatterView *mainPlatterView
 @property  UIView *dividerView
 @property  UIView *touchReceivingView
 @property  double iconContentScale
 @property  double maximumDockContinuousCornerRadius
 @property  {CGSize=dd} maximumIconSize
 @property  double maximumPlatterHeight
 @property  double maximumInterIconSpacing
 @property  SBDockIconListView *userIconListView
 @property  SBDockIconListView *recentIconListView
 @property  UIView *backgroundView
 @property  {UIEdgeInsets=dddd} paddingEdgeInsets
 @property  double platterVerticalMargin
 @property  unsigned long minimumUserIconSpaces
 @property  double contentHeight
 @property  double interIconSpacing
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} platterFrame
 @property  BOOL hasPlatterShadow
 @property  {UIEdgeInsets=dddd} platterShadowOutsets

  // class methods
  +[SBFloatingDockView _referenceInterIconSpacingWithIconImageInfo:]
  +[SBFloatingDockView maximumInterIconSpacingWithIconImageInfo:]
  +[SBFloatingDockView maximumDockContinuousCornerRadiusWithIconImageInfo:]
  +[SBFloatingDockView maximumIconSizeWithIconImageInfo:]
  +[SBFloatingDockView maximumPlatterHeightWithIconImageInfo:]
  +[SBFloatingDockView contentHeightForBounds:mainPlatterViewFrame:]
  +[SBFloatingDockView getMetrics:forBounds:numberOfUserIcons:numberOfRecentIcons:paddingEdgeInsets:referenceIconSize:maximumIconSize:referenceInterIconSpacing:maximumInterIconSpacing:platterVerticalMargin:]
  +[SBFloatingDockView minimumPlatterMargin]

  // instance methods
  -[SBFloatingDockView .cxx_destruct]
  -[SBFloatingDockView initWithFrame:]
  -[SBFloatingDockView backgroundView]
  -[SBFloatingDockView layoutSubviews]
  -[SBFloatingDockView pointInside:withEvent:]
  -[SBFloatingDockView setBackgroundView:]
  -[SBFloatingDockView _dynamicUserInterfaceTraitDidChange]
  -[SBFloatingDockView bounce]
  -[SBFloatingDockView contentHeight]
  -[SBFloatingDockView iconContentScale]
  -[SBFloatingDockView setIconContentScale:]
  -[SBFloatingDockView setRecentIconListView:]
  -[SBFloatingDockView userIconListView]
  -[SBFloatingDockView recentIconListView]
  -[SBFloatingDockView contentHeightForBounds:]
  -[SBFloatingDockView interIconSpacing]
  -[SBFloatingDockView platterVerticalMargin]
  -[SBFloatingDockView setPlatterVerticalMargin:]
  -[SBFloatingDockView platterShadowOutsetsForBounds:]
  -[SBFloatingDockView maximumDockContinuousCornerRadius]
  -[SBFloatingDockView platterFrame]
  -[SBFloatingDockView setPaddingEdgeInsets:]
  -[SBFloatingDockView setUserIconListView:]
  -[SBFloatingDockView setHasPlatterShadow:]
  -[SBFloatingDockView setMinimumUserIconSpaces:]
  -[SBFloatingDockView _iconImageInfo]
  -[SBFloatingDockView updateDividerVisualStyling]
  -[SBFloatingDockView mainPlatterView]
  -[SBFloatingDockView maximumPlatterHeight]
  -[SBFloatingDockView getMetrics:forBounds:]
  -[SBFloatingDockView _referenceIconSize]
  -[SBFloatingDockView maximumIconSize]
  -[SBFloatingDockView _referenceInterIconSpacing]
  -[SBFloatingDockView maximumInterIconSpacing]
  -[SBFloatingDockView minimumUserIconSpaces]
  -[SBFloatingDockView dividerView]
  -[SBFloatingDockView hasPlatterShadow]
  -[SBFloatingDockView platterShadowOutsets]
  -[SBFloatingDockView iconContentScaleForNumberOfUserIcons:]
  -[SBFloatingDockView paddingEdgeInsets]
  -[SBFloatingDockView setMainPlatterView:]
  -[SBFloatingDockView setDividerView:]
  -[SBFloatingDockView touchReceivingView]
  -[SBFloatingDockView setTouchReceivingView:]


SBFolderIconImageCache : NSObject /usr/lib/libSystem.B.dylib <SBFolderIconObserver, SBFolderObserver, SBHIconImageCacheObserver, SBFolderIconGridCellImageProvider>
 @property  CPMemoryPool *pool
 @property  <SBIconListLayout> *listLayout
 @property  SBHIconImageCache *iconImageCache
 @property  unsigned long numberOfCachedImages
 @property  unsigned long numberOfCacheHits
 @property  unsigned long numberOfCacheMisses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBFolderIconImageCache gridCellImageOfSize:forIcon:iconImageInfo:]
  +[SBFolderIconImageCache imageForPageAtIndex:inFolderIcon:listLayout:gridCellImageProvider:pool:]
  +[SBFolderIconImageCache drawTreatmentForIcon:inRect:]
  +[SBFolderIconImageCache gridCellImageOfSize:forIconImage:]
  +[SBFolderIconImageCache needsTreatmentForIcon:]

  // instance methods
  -[SBFolderIconImageCache init]
  -[SBFolderIconImageCache .cxx_destruct]
  -[SBFolderIconImageCache pool]
  -[SBFolderIconImageCache listLayout]
  -[SBFolderIconImageCache gridCellImageOfSize:forIcon:iconImageInfo:]
  -[SBFolderIconImageCache iconImageCache]
  -[SBFolderIconImageCache setIconImageCache:]
  -[SBFolderIconImageCache folder:didAddList:]
  -[SBFolderIconImageCache folder:didRemoveLists:atIndexes:]
  -[SBFolderIconImageCache folder:didAddIcons:removedIcons:]
  -[SBFolderIconImageCache folder:didReplaceIcon:withIcon:]
  -[SBFolderIconImageCache initWithListLayout:]
  -[SBFolderIconImageCache numberOfCachedImages]
  -[SBFolderIconImageCache numberOfCacheHits]
  -[SBFolderIconImageCache numberOfCacheMisses]
  -[SBFolderIconImageCache iconImageCache:didUpdateImageForIcon:]
  -[SBFolderIconImageCache folderIcon:containedIconImageDidUpdate:]
  -[SBFolderIconImageCache folderIcon:containedIconAccessoriesDidUpdate:]
  -[SBFolderIconImageCache folderIcon:containedIconLaunchEnabledDidChange:]
  -[SBFolderIconImageCache removeObserver:forFolderIcon:]
  -[SBFolderIconImageCache addObserver:forFolderIcon:]
  -[SBFolderIconImageCache imageForPageAtIndex:inFolderIcon:]
  -[SBFolderIconImageCache genericMiniGridImage]
  -[SBFolderIconImageCache informObserversOfUpdateForFolderIcon:]
  -[SBFolderIconImageCache gridCellImageForIcon:]
  -[SBFolderIconImageCache updateCachedImagesForFolderIcon:afterChangeToContainedImageForIcon:treatmentsOnly:]
  -[SBFolderIconImageCache rebuildImagesForFolderIcon:]


SBIconModelPropertyListFileStore : NSObject /usr/lib/libSystem.B.dylib <SBIconModelStore, BSDescriptionProviding>
 @property  NSURL *currentIconStateURL
 @property  NSURL *desiredIconStateURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconModelPropertyListFileStore init]
  -[SBIconModelPropertyListFileStore .cxx_destruct]
  -[SBIconModelPropertyListFileStore succinctDescription]
  -[SBIconModelPropertyListFileStore descriptionWithMultilinePrefix:]
  -[SBIconModelPropertyListFileStore succinctDescriptionBuilder]
  -[SBIconModelPropertyListFileStore descriptionBuilderWithMultilinePrefix:]
  -[SBIconModelPropertyListFileStore deleteDesiredIconStateWithOptions:error:]
  -[SBIconModelPropertyListFileStore loadDesiredIconState:]
  -[SBIconModelPropertyListFileStore loadCurrentIconState:]
  -[SBIconModelPropertyListFileStore deleteCurrentIconStateWithOptions:error:]
  -[SBIconModelPropertyListFileStore saveDesiredIconState:error:]
  -[SBIconModelPropertyListFileStore saveCurrentIconState:error:]
  -[SBIconModelPropertyListFileStore initWithIconStateURL:desiredIconStateURL:]
  -[SBIconModelPropertyListFileStore _save:url:error:]
  -[SBIconModelPropertyListFileStore _delete:options:error:]
  -[SBIconModelPropertyListFileStore _load:error:]
  -[SBIconModelPropertyListFileStore currentIconStateURL]
  -[SBIconModelPropertyListFileStore desiredIconStateURL]


SBPlaceholderIcon : SBIcon
 @property  SBIcon *referencedIcon
 @property  NSArray *referencedIcons

  // class methods
  +[SBPlaceholderIcon grabbedIconPlaceholderForIcon:]
  +[SBPlaceholderIcon grabbedIconPlaceholderForIcons:]
  +[SBPlaceholderIcon placeholderNodeIdentifierForIcon:]
  +[SBPlaceholderIcon placeholderNodeIdentifierForIconNodeIdentifier:]
  +[SBPlaceholderIcon hasIconImage]
  +[SBPlaceholderIcon placeholderForIcon:]

  // instance methods
  -[SBPlaceholderIcon .cxx_destruct]
  -[SBPlaceholderIcon isPlaceholder]
  -[SBPlaceholderIcon children]
  -[SBPlaceholderIcon nodeIdentifier]
  -[SBPlaceholderIcon automationID]
  -[SBPlaceholderIcon referencedIcons]
  -[SBPlaceholderIcon referencedIcon]
  -[SBPlaceholderIcon referencesIcon:]
  -[SBPlaceholderIcon referencesIconWithIdentifier:]
  -[SBPlaceholderIcon genericIconImageWithInfo:]
  -[SBPlaceholderIcon generateIconImageWithInfo:]
  -[SBPlaceholderIcon isUninstallSupported]
  -[SBPlaceholderIcon _initWithNodeIdentifier:icon:]
  -[SBPlaceholderIcon _initWithNodeIdentifier:icons:]
  -[SBPlaceholderIcon gridCellImage]


SBGrabbedPlaceholderIcon : SBPlaceholderIcon
  // instance methods
  -[SBGrabbedPlaceholderIcon isGrabbedIconPlaceholder]


SBIconModelMemoryStore : NSObject /usr/lib/libSystem.B.dylib <SBIconModelStore>
 @property  NSDictionary *currentState
 @property  NSDictionary *desiredState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconModelMemoryStore init]
  -[SBIconModelMemoryStore .cxx_destruct]
  -[SBIconModelMemoryStore currentState]
  -[SBIconModelMemoryStore setCurrentState:]
  -[SBIconModelMemoryStore deleteDesiredIconStateWithOptions:error:]
  -[SBIconModelMemoryStore loadDesiredIconState:]
  -[SBIconModelMemoryStore loadCurrentIconState:]
  -[SBIconModelMemoryStore deleteCurrentIconStateWithOptions:error:]
  -[SBIconModelMemoryStore saveDesiredIconState:error:]
  -[SBIconModelMemoryStore saveCurrentIconState:error:]
  -[SBIconModelMemoryStore setDesiredState:]
  -[SBIconModelMemoryStore initWithCurrentState:desiredState:]
  -[SBIconModelMemoryStore desiredState]


_SBFloatingDockPlatterMetrics : NSObject /usr/lib/libSystem.B.dylib
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  double continuousCornerRadius
 @property  double shadowRadius
 @property  double shadowYOffset

  // instance methods
  -[_SBFloatingDockPlatterMetrics bounds]
  -[_SBFloatingDockPlatterMetrics shadowRadius]
  -[_SBFloatingDockPlatterMetrics shadowYOffset]
  -[_SBFloatingDockPlatterMetrics continuousCornerRadius]
  -[_SBFloatingDockPlatterMetrics initWithBounds:continuousCornerRadius:shadowRadius:shadowYOffset:]


SBFloatingDockPlatterView : UIView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  UIImageView *shadowView
 @property  _SBFloatingDockPlatterMetrics *metrics
 @property  double referenceHeight
 @property  double maximumContinuousCornerRadius
 @property  NSString *backdropGroupName
 @property  BOOL hasShadow
 @property  {UIEdgeInsets=dddd} shadowOutsets
 @property  UIView *backgroundView

  // class methods
  +[SBFloatingDockPlatterView borderColorForUserInterfaceStyle:]

  // instance methods
  -[SBFloatingDockPlatterView initWithCoder:]
  -[SBFloatingDockPlatterView .cxx_destruct]
  -[SBFloatingDockPlatterView metrics]
  -[SBFloatingDockPlatterView setMetrics:]
  -[SBFloatingDockPlatterView initWithFrame:]
  -[SBFloatingDockPlatterView backgroundView]
  -[SBFloatingDockPlatterView layoutSubviews]
  -[SBFloatingDockPlatterView hasShadow]
  -[SBFloatingDockPlatterView backdropGroupName]
  -[SBFloatingDockPlatterView setBackdropGroupName:]
  -[SBFloatingDockPlatterView setBackgroundView:]
  -[SBFloatingDockPlatterView _dynamicUserInterfaceTraitDidChange]
  -[SBFloatingDockPlatterView shadowView]
  -[SBFloatingDockPlatterView setShadowView:]
  -[SBFloatingDockPlatterView setHasShadow:]
  -[SBFloatingDockPlatterView setReferenceHeight:]
  -[SBFloatingDockPlatterView referenceHeight]
  -[SBFloatingDockPlatterView setMaximumContinuousCornerRadius:]
  -[SBFloatingDockPlatterView shadowOutsets]
  -[SBFloatingDockPlatterView shadowOutsetsForBounds:]
  -[SBFloatingDockPlatterView updateBorderVisualStyling]
  -[SBFloatingDockPlatterView _maxShadowViewAlpha]
  -[SBFloatingDockPlatterView _shadowOutsetsForMetrics:]
  -[SBFloatingDockPlatterView _metricsForBounds:]
  -[SBFloatingDockPlatterView _shadowInsetsForMetrics:]
  -[SBFloatingDockPlatterView _shadowImageViewForMetrics:]
  -[SBFloatingDockPlatterView maximumContinuousCornerRadius]
  -[SBFloatingDockPlatterView _shadowImageForMetrics:]


SBIconListViewDraggingDestinationDelegate : NSObject /usr/lib/libSystem.B.dylib <SBFSpringLoadedInteractionBehaviorDelegate, SBFSpringLoadedInteractionEffectDelegate, BSDescriptionProviding, UIDropInteractionDelegate>
 @property  UIDropInteraction *dropInteraction
 @property  unsigned long currentDragType
 @property  <SBIconListViewDraggingPolicyHandling> *currentPolicyHandler
 @property  unsigned long currentSpringLoadedDragType
 @property  <SBIconListViewDraggingPolicyHandling> *springLoadingPolicyHandler
 @property  BOOL waitingForConcludeDrag
 @property  SBIconListView *iconListView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBIconListViewDraggingDestinationDelegate dragTypeForDropSession:]

  // instance methods
  -[SBIconListViewDraggingDestinationDelegate .cxx_destruct]
  -[SBIconListViewDraggingDestinationDelegate succinctDescription]
  -[SBIconListViewDraggingDestinationDelegate descriptionWithMultilinePrefix:]
  -[SBIconListViewDraggingDestinationDelegate succinctDescriptionBuilder]
  -[SBIconListViewDraggingDestinationDelegate descriptionBuilderWithMultilinePrefix:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:canHandleSession:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:sessionDidEnter:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:sessionDidUpdate:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:sessionDidExit:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:performDrop:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:concludeDrop:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:sessionDidEnd:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:previewForDroppingItem:withDefault:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction:item:willAnimateDropWithAnimator:]
  -[SBIconListViewDraggingDestinationDelegate dropInteraction]
  -[SBIconListViewDraggingDestinationDelegate targetItemForSpringLoadingInteractionInView:atLocation:forDropSession:]
  -[SBIconListViewDraggingDestinationDelegate springLoadedInteractionDidFinish]
  -[SBIconListViewDraggingDestinationDelegate targetViewForSpringLoadingEffectForView:]
  -[SBIconListViewDraggingDestinationDelegate iconListView]
  -[SBIconListViewDraggingDestinationDelegate addDragObserver:forDropSession:]
  -[SBIconListViewDraggingDestinationDelegate initWithIconListView:]
  -[SBIconListViewDraggingDestinationDelegate _handleSpringloadAndComplete:]
  -[SBIconListViewDraggingDestinationDelegate uniqueIdentifierForDropSession:]
  -[SBIconListViewDraggingDestinationDelegate currentDragType]
  -[SBIconListViewDraggingDestinationDelegate setCurrentPolicyHandler:]
  -[SBIconListViewDraggingDestinationDelegate setCurrentDragType:]
  -[SBIconListViewDraggingDestinationDelegate currentSpringLoadedDragType]
  -[SBIconListViewDraggingDestinationDelegate setSpringLoadingPolicyHandler:]
  -[SBIconListViewDraggingDestinationDelegate setCurrentSpringLoadedDragType:]
  -[SBIconListViewDraggingDestinationDelegate updateSpringLoadedPolicyHandlerForDropSession:]
  -[SBIconListViewDraggingDestinationDelegate springLoadingPolicyHandler]
  -[SBIconListViewDraggingDestinationDelegate _resetSpringLoadingPolicyHandler]
  -[SBIconListViewDraggingDestinationDelegate updateCurrentPolicyHandlerForDropSession:]
  -[SBIconListViewDraggingDestinationDelegate currentPolicyHandler]
  -[SBIconListViewDraggingDestinationDelegate setWaitingForConcludeDrag:]
  -[SBIconListViewDraggingDestinationDelegate markDropSessionAsWaitingForConcludeDrop:]
  -[SBIconListViewDraggingDestinationDelegate enumerateDragObserversForDropSession:usingBlock:]
  -[SBIconListViewDraggingDestinationDelegate removeAllDragObserversForDropSession:]
  -[SBIconListViewDraggingDestinationDelegate unmarkDropSessionAsWaitingForConcludeDrop:]
  -[SBIconListViewDraggingDestinationDelegate isDropSessionWaitingForConcludeDrop:]
  -[SBIconListViewDraggingDestinationDelegate isWaitingForConcludeDrag]


SBIconListViewDraggingDataPolicyHandler : NSObject /usr/lib/libSystem.B.dylib <LSOpenResourceOperationDelegate, SBIconListViewDraggingPolicyHandling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewDraggingDataPolicyHandler init]
  -[SBIconListViewDraggingDataPolicyHandler .cxx_destruct]
  -[SBIconListViewDraggingDataPolicyHandler openResourceOperation:didFailWithError:]
  -[SBIconListViewDraggingDataPolicyHandler openResourceOperation:didFinishCopyingResource:]
  -[SBIconListViewDraggingDataPolicyHandler dropInteraction:canHandleSession:]
  -[SBIconListViewDraggingDataPolicyHandler allowsSpringLoadForSession:onIconView:]
  -[SBIconListViewDraggingDataPolicyHandler handleSpringLoadOnIconView:]
  -[SBIconListViewDraggingDataPolicyHandler _removeAnySourceURLForOperation:]
  -[SBIconListViewDraggingDataPolicyHandler _currentDraggingIconViewInView:forLocation:]
  -[SBIconListViewDraggingDataPolicyHandler _bestSupportedUTIForDragItem:supportedTypes:]


_SBIconListViewDataDraggingContext : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  SBIconView *iconView
 @property  NSString *bestAvailableUTI
 @property  BOOL allowsMoveOperation
 @property  long long fileOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBIconListViewDataDraggingContext .cxx_destruct]
  -[_SBIconListViewDataDraggingContext succinctDescription]
  -[_SBIconListViewDataDraggingContext descriptionWithMultilinePrefix:]
  -[_SBIconListViewDataDraggingContext succinctDescriptionBuilder]
  -[_SBIconListViewDataDraggingContext descriptionBuilderWithMultilinePrefix:]
  -[_SBIconListViewDataDraggingContext allowsMoveOperation]
  -[_SBIconListViewDataDraggingContext iconView]
  -[_SBIconListViewDataDraggingContext initWithIconView:bestUTI:allowsMoveOperation:fileOptions:]
  -[_SBIconListViewDataDraggingContext bestAvailableUTI]
  -[_SBIconListViewDataDraggingContext fileOptions]


SBIconListViewAppDragContext : NSObject /usr/lib/libSystem.B.dylib
 @property  NSTimer *pauseTimer
 @property  {CGPoint=dd} pausePoint
 @property  BOOL hasPaused

  // instance methods
  -[SBIconListViewAppDragContext .cxx_destruct]
  -[SBIconListViewAppDragContext pauseTimer]
  -[SBIconListViewAppDragContext setPauseTimer:]
  -[SBIconListViewAppDragContext pausePoint]
  -[SBIconListViewAppDragContext setPausePoint:]
  -[SBIconListViewAppDragContext hasPaused]
  -[SBIconListViewAppDragContext setHasPaused:]


SBIconListViewDraggingAppPolicyHandler : NSObject /usr/lib/libSystem.B.dylib <SBIconListViewDraggingPolicyHandling>
 @property  SBIconListViewDraggingDestinationDelegate *draggingDestinationDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBIconListViewDraggingAppPolicyHandler .cxx_destruct]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:canHandleSession:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:sessionDidEnter:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:sessionDidUpdate:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:sessionDidExit:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:performDrop:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:sessionDidEnd:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:previewForDroppingItem:withDefault:]
  -[SBIconListViewDraggingAppPolicyHandler dropInteraction:item:willAnimateDropWithAnimator:]
  -[SBIconListViewDraggingAppPolicyHandler setDraggingDestinationDelegate:]
  -[SBIconListViewDraggingAppPolicyHandler allowsSpringLoadForSession:onIconView:]
  -[SBIconListViewDraggingAppPolicyHandler handleSpringLoadOnIconView:]
  -[SBIconListViewDraggingAppPolicyHandler _cancelDragPauseTimerForDropSession:]
  -[SBIconListViewDraggingAppPolicyHandler draggingDestinationDelegate]
  -[SBIconListViewDraggingAppPolicyHandler _dragPauseTimerFired:]
  -[SBIconListViewDraggingAppPolicyHandler _resetDragPauseTimerForPoint:dropSession:]
  -[SBIconListViewDraggingAppPolicyHandler _updateDragPauseForDropSession:]
  -[SBIconListViewDraggingAppPolicyHandler _iconForDragItem:]
  -[SBIconListViewDraggingAppPolicyHandler _iconViewForDragItem:]
  -[SBIconListViewDraggingAppPolicyHandler _destinationFolderIconViewForDragItem:iconIndexPath:folderRelativeIconIndexPath:]
  -[SBIconListViewDraggingAppPolicyHandler _cancelDragPauseTimers]


NSSet(SBHAdditions)
	// instance methods
	-[NSSet(SBHAdditions) sbh_diffWithSet:]
	-[NSSet(SBHAdditions) sbh_map:]

SBSApplicationShortcutItem(SBHAdditions)
	// instance methods
	-[SBSApplicationShortcutItem(SBHAdditions) sbh_isDestructive]
	-[SBSApplicationShortcutItem(SBHAdditions) sbh_isSystemShortcut]
	-[SBSApplicationShortcutItem(SBHAdditions) sbh_isShortcutSpringBoardOnly]

NSString(SBHStringUtilities)
	// instance methods
	-[NSString(SBHStringUtilities) sbh_stringByReplacingCharactersInSet:withString:]
	-[NSString(SBHStringUtilities) sbh_stringByDeletingCharactersInSet:]

NSIndexPath(SBIconIndex)
	// class methods
	+[NSIndexPath(SBIconIndex) indexPathWithIconIndex:listIndex:]
	+[NSIndexPath(SBIconIndex) indexPathWithFolderIconIndex:folderListIndex:iconIndex:listIndex:]

	// instance methods
	-[NSIndexPath(SBIconIndex) sbListIndex]
	-[NSIndexPath(SBIconIndex) sb_iconPathCount]
	-[NSIndexPath(SBIconIndex) sbIconIndex]
	-[NSIndexPath(SBIconIndex) sb_indexPathByRemovingLastIconPathComponent]
	-[NSIndexPath(SBIconIndex) sb_indexPathByAddingPathComponentWithListIndex:iconIndex:]
	-[NSIndexPath(SBIconIndex) sb_indexPathByAddingIndexPath:]
	-[NSIndexPath(SBIconIndex) sb_lastIconPathComponent]
	-[NSIndexPath(SBIconIndex) sb_iconRelativePathComponents]

UIDragItem(SBHIconDragUtilities)
	// instance methods
	-[UIDragItem(SBHIconDragUtilities) sbh_setAppDragLocalContext:]
	-[UIDragItem(SBHIconDragUtilities) sbh_appDragLocalContext]

01 00 1000 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSAnimationSettings 
01 00 1000 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSCFBundle 
01 00 1000 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSDateFormatterCache 
01 00 1000 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSDescriptionBuilder 
01 00 1000 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSDispatchQueueAttributes 
01 00 1000 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSEventQueue 
01 00 1000 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSEventQueueEvent 
01 00 1000 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSPlatform 
01 00 1b00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIAnimationFactory 
01 00 1b00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIScrollView 
01 00 1700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 1700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 1700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMatchMoveAnimation 
01 00 1700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 1900 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPMemoryPool 
01 00 1000 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 1000 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 0b00 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISIcon 
01 00 0b00 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImage 
01 00 0b00 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 0c00 /System/Library/PrivateFrameworks/IntlPreferences.framework/IntlPreferences: IntlUtility 
01 00 0d00 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTMaterialView 
01 00 0d00 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTVisualStylingProvider 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2100 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0800 /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection: PCPersistentTimer 
01 00 0600 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTButtonRow 
01 00 0600 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTChoiceRow 
01 00 0600 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDomain 
01 00 0600 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDrillDownRow 
01 00 0600 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTEditFloatRow 
01 00 0600 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTModule 
01 00 0600 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTRestoreDefaultSettingsRowAction 
01 00 0600 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSettings 
01 00 0600 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSliderRow 
01 00 0600 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSwitchRow 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFAnimationSettings 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFDefaultDateProvider 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFEqualsBuilder 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFFluidBehaviorSettings 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFHashBuilder 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFLegibilityDomain 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFMappedImageCache 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFSpringLoadedInteractionBehavior 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFSpringLoadedInteractionEffect 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFSteppedAnimationTimingFunctionCalculator 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFTodayGestureDomain 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFTouchPassThroughView 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFTouchPassThroughViewController 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFView 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBHomeScreenDefaults 
01 00 1d00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBReusableViewMap 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSAppDragLocalContext 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationMultiwindowService 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutCustomImageIcon 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutItem 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationShortcutSystemIcon 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSHardwareButtonService 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSHomeScreenService 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUILegibilityLabel 
01 00 0200 /System/Library/Frameworks/StoreKit.framework/StoreKit: SKStoreProductActivityViewController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColorEffect 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuConfiguration 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuInteraction 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragInteraction 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragItem 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewParameters 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewTarget 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropInteraction 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropProposal 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIHandleApplicationShortcutAction 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImpactFeedbackGenerator 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInteractionProgress 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInterpolatingMotionEffect 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPageControl 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewParameters 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewTarget 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringLoadedInteraction 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringTimingParameters 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedDragPreview 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0a00 /System/Library/PrivateFrameworks/Widgets.framework/Widgets: WGWidgetDiscoveryController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContextMenuStyle 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIImpactFeedbackGeneratorConfiguration 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilityImageSet 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettings 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilityView 
