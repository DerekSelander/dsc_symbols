|| __DATA.__objc_data _OBJC_CLASS_$_SOADSiteDiscovery
|| __DATA.__objc_data _OBJC_CLASS_$_SOAsynchronousBlockOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SOAsynchronousLDAPOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SOAsynchronousOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SOAuthorizationWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_SODNSSRVQuery
|| __DATA.__objc_data _OBJC_CLASS_$_SODNSSRVResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SOKerberosAgentContext
|| __DATA.__objc_data _OBJC_CLASS_$_SOKerberosAuthentication
|| __DATA.__objc_data _OBJC_CLASS_$_SOKerberosContext
|| __DATA.__objc_data _OBJC_CLASS_$_SOKerberosCredential
|| __DATA.__objc_data _OBJC_CLASS_$_SOKerberosExtensionData
|| __DATA.__objc_data _OBJC_CLASS_$_SOKerberosExtensionProcess
|| __DATA.__objc_data _OBJC_CLASS_$_SOKerberosExtensionUserData
|| __DATA.__objc_data _OBJC_CLASS_$_SOKerberosFileManager
|| __DATA.__objc_data _OBJC_CLASS_$_SOKerberosHelper
|| __DATA.__objc_data _OBJC_CLASS_$_SOKerberosPacData
|| __DATA.__objc_data _OBJC_CLASS_$_SOKerberosRealmSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SOKerberosServer
|| __DATA.__objc_data _OBJC_CLASS_$_SOKeychainHelper
|| __DATA.__objc_data _OBJC_CLASS_$_SOLDAPHelper
|| __DATA.__objc_data _OBJC_CLASS_$_SONetLogonParser
|| __DATA.__objc_data _OBJC_CLASS_$_SONetworkIdentity
|| __DATA.__objc_data _OBJC_CLASS_$_SOSiteCode
|| __DATA.__objc_data _OBJC_CLASS_$_SOSmartcard
|| __DATA.__objc_data _OBJC_CLASS_$_SOSmartcardEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_SOADSiteDiscovery
|| __DATA.__objc_data _OBJC_METACLASS_$_SOAsynchronousBlockOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SOAsynchronousLDAPOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SOAsynchronousOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SOAuthorizationWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_SODNSSRVQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_SODNSSRVResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SOKerberosAgentContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SOKerberosAuthentication
|| __DATA.__objc_data _OBJC_METACLASS_$_SOKerberosContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SOKerberosCredential
|| __DATA.__objc_data _OBJC_METACLASS_$_SOKerberosExtensionData
|| __DATA.__objc_data _OBJC_METACLASS_$_SOKerberosExtensionProcess
|| __DATA.__objc_data _OBJC_METACLASS_$_SOKerberosExtensionUserData
|| __DATA.__objc_data _OBJC_METACLASS_$_SOKerberosFileManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SOKerberosHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_SOKerberosPacData
|| __DATA.__objc_data _OBJC_METACLASS_$_SOKerberosRealmSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SOKerberosServer
|| __DATA.__objc_data _OBJC_METACLASS_$_SOKeychainHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_SOLDAPHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_SONetLogonParser
|| __DATA.__objc_data _OBJC_METACLASS_$_SONetworkIdentity
|| __DATA.__objc_data _OBJC_METACLASS_$_SOSiteCode
|| __DATA.__objc_data _OBJC_METACLASS_$_SOSmartcard
|| __DATA.__objc_data _OBJC_METACLASS_$_SOSmartcardEntry
|| __DATA_CONST.__const _kSOAppSSOKerberosBundleIDs
|| __DATA_CONST.__const _kSOHeimdalBundleIDs
|| __DATA_CONST.__const _kSOKerberosAttributeValueNoSiteCode
|| __DATA_CONST.__const _kSOKerberosNotificationADPasswordChanged
|| __DATA_CONST.__const _kSOKerberosNotificationConfigRemoved
|| __DATA_CONST.__const _kSOKerberosNotificationConnectionCompleted
|| __DATA_CONST.__const _kSOKerberosNotificationFoundExistingCredential
|| __DATA_CONST.__const _kSOKerberosNotificationGotNewCredential
|| __DATA_CONST.__const _kSOKerberosNotificationInternalNetworkAvailable
|| __DATA_CONST.__const _kSOKerberosNotificationInternalNetworkNotAvailable
|| __DATA_CONST.__const _kSOKerberosNotificationLocalPasswordSynced
|| __DATA_CONST.__const _kSOKerberosNotificationPasswordChangedWithPasswordSync
|| __DATA_CONST.__const _kSOKerberosNotificationUserSignedOut
|| __DATA_CONST.__const _kSOKerberosOperationAttributeDelayUserSetupCleared
|| __DATA_CONST.__const _kSOKerberosOperationAttributeForce
|| __DATA_CONST.__const _kSOKerberosOperationAttributeGSSCredUUID
|| __DATA_CONST.__const _kSOKerberosOperationAttributeHomeDirectory
|| __DATA_CONST.__const _kSOKerberosOperationAttributeHostName
|| __DATA_CONST.__const _kSOKerberosOperationAttributeHostSuffixLength
|| __DATA_CONST.__const _kSOKerberosOperationAttributeIsDefaultRealm
|| __DATA_CONST.__const _kSOKerberosOperationAttributeLastLoginDate
|| __DATA_CONST.__const _kSOKerberosOperationAttributeLocalPasswordChangedDate
|| __DATA_CONST.__const _kSOKerberosOperationAttributeNetworkAvailable
|| __DATA_CONST.__const _kSOKerberosOperationAttributePasswordChangedDate
|| __DATA_CONST.__const _kSOKerberosOperationAttributePasswordExpiresDate
|| __DATA_CONST.__const _kSOKerberosOperationAttributeRealm
|| __DATA_CONST.__const _kSOKerberosOperationAttributeRefresh
|| __DATA_CONST.__const _kSOKerberosOperationAttributeSiteCode
|| __DATA_CONST.__const _kSOKerberosOperationAttributeSiteCodeCache
|| __DATA_CONST.__const _kSOKerberosOperationAttributeUPN
|| __DATA_CONST.__const _kSOKerberosOperationAttributeUserCancelledLogin
|| __DATA_CONST.__const _kSOKerberosOperationAttributeUserName
|| __DATA_CONST.__const _kSOKerberosOperationAttributeVerbose
|| __DATA_CONST.__const _kSOKerberosOperationChangePassword
|| __DATA_CONST.__const _kSOKerberosOperationGetCredentialUUID
|| __DATA_CONST.__const _kSOKerberosOperationGetRealmInfo
|| __DATA_CONST.__const _kSOKerberosOperationGetSiteCode
|| __DATA_CONST.__const _kSOKerberosOperationLogin
|| __DATA_CONST.__const _kSOKerberosOperationLogout
|| __DATA_CONST.__const _kSOKerberosOperationResetKeychainChoice
|| __DATA_CONST.__const _kSOKerberosOperationResetRealm
|| __DATA_CONST.__const _kSOKerberosSuiteName
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SOKerberosHeimdalPluginSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SOKerberosSettingsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SOKerberosHeimdalPluginSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SOKerberosSettingsManager
|| __TEXT.__const _kSiteCodeCacheLazyRefreshAge
|| __TEXT.__const _kSiteCodeCacheMaxAge
|| __TEXT.__text _free_kerbvalidationinfo
|| __TEXT.__text _get_kerbvalidationinfo
|| __TEXT.__text _ndrdata_get_buffer
|| __TEXT.__text _ndrdata_get_uint16
|| __TEXT.__text _ndrdata_get_uint32
|| __TEXT.__text _ndrdata_get_uint64
|| __TEXT.__text _ndrdata_get_uint8
|| __TEXT.__text _ndrdata_init
__ AppSSOCore: _OBJC_CLASS_$_SOAuthorizationCore
__ AppSSOCore: _OBJC_CLASS_$_SOUtils
__ AppleLDAP: _LDAP_CRED_MECHANISM_DIGEST_MD5
__ AppleLDAP: _LDAP_CRED_MECHANISM_GSSAPI
__ AppleLDAP: _LDAP_MECHANISM_OPTION_GSSAPI_INITIATOR_CREDENTIAL
__ AppleLDAP: _LDAP_MECHANISM_OPTION_GSSAPI_TARGET_NAME
__ AppleLDAP: _LDAP_MECHANISM_OPTION_PASSWORD
__ AppleLDAP: _LDAP_MECHANISM_OPTION_RECORD_DN
__ AppleLDAP: _ldap_connection_add_credential
__ AppleLDAP: _ldap_connection_create_with_hostname
__ AppleLDAP: _ldap_connection_create_with_socket
__ AppleLDAP: _ldap_connection_create_with_socket_and_hostname
__ AppleLDAP: _ldap_connection_disconnect
__ AppleLDAP: _ldap_connection_query_create
__ AppleLDAP: _ldap_connection_set_disconnect_handler
__ AppleLDAP: _ldap_connection_set_source_application_by_bundle
__ AppleLDAP: _ldap_connection_set_tls
__ AppleLDAP: _ldap_connection_start
__ AppleLDAP: _ldap_operation_copy_error_string
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFUUIDCreateFromString
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _CFUUIDGetUUIDBytes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFNull
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CryptoTokenKit: _OBJC_CLASS_$_TKTokenWatcher
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ GSS: _GSSCreateCredentialFromUUID
__ GSS: _GSSCreateError
__ GSS: _GSSCreateName
__ GSS: _GSSCredentialCopyName
__ GSS: _GSSCredentialCopyUUID
__ GSS: _GSSCredentialGetLifetime
__ GSS: _GSSNameCreateDisplayString
__ GSS: ___ApplePrivate_gsskrb5_set_default_realm
__ GSS: ___gss_c_nt_hostbased_service_oid_desc
__ GSS: ___gss_c_nt_user_name_oid_desc
__ GSS: ___gss_krb5_mechanism_oid_desc
__ GSS: ___gss_krb5_nt_principal_oid_desc
__ GSS: ___gss_spnego_mechanism_oid_desc
__ GSS: _gss_aapl_change_password
__ GSS: _gss_aapl_initial_cred
__ GSS: _gss_acquire_cred
__ GSS: _gss_add_oid_set_member
__ GSS: _gss_create_empty_oid_set
__ GSS: _gss_destroy_cred
__ GSS: _gss_import_name
__ GSS: _gss_init_sec_context
__ GSS: _gss_inquire_cred
__ GSS: _gss_iter_creds
__ GSS: _gss_release_buffer
__ GSS: _gss_release_cred
__ GSS: _gss_release_name
__ GSS: _gss_release_oid_set
__ Heimdal: _HeimCredCopyAttributes
__ Heimdal: _HeimCredCopyQuery
__ Heimdal: _HeimCredCreate
__ Heimdal: _HeimCredDelete
__ Heimdal: _HeimCredDeleteQuery
__ Heimdal: _HeimCredGetUUID
__ Heimdal: _HeimCredSetAttribute
__ Heimdal: _HeimCredSetImpersonateAuditToken
__ Heimdal: _HeimCredSetImpersonateBundle
__ Heimdal: _decode_Ticket
__ Heimdal: _free_Ticket
__ Heimdal: _kHEIMAttrBundleIdentifierACL
__ Heimdal: _kHEIMAttrClientName
__ Heimdal: _kHEIMAttrData
__ Heimdal: _kHEIMAttrParentCredential
__ Heimdal: _kHEIMAttrServerName
__ Heimdal: _kHEIMAttrType
__ Heimdal: _kHEIMObjectConfiguration
__ Heimdal: _kHEIMObjectType
__ Heimdal: _kHEIMTypeConfiguration
__ Heimdal: _krb5_cc_clear_mcred
__ Heimdal: _krb5_cc_close
__ Heimdal: _krb5_cc_get_principal
__ Heimdal: _krb5_cc_resolve_by_uuid
__ Heimdal: _krb5_cc_retrieve_cred
__ Heimdal: _krb5_data_free
__ Heimdal: _krb5_data_zero
__ Heimdal: _krb5_decrypt_ticket
__ Heimdal: _krb5_free_context
__ Heimdal: _krb5_free_cred_contents
__ Heimdal: _krb5_free_creds
__ Heimdal: _krb5_free_principal
__ Heimdal: _krb5_free_ticket
__ Heimdal: _krb5_get_creds
__ Heimdal: _krb5_get_creds_opt_add_options
__ Heimdal: _krb5_get_creds_opt_alloc
__ Heimdal: _krb5_get_creds_opt_free
__ Heimdal: _krb5_get_creds_opt_set_impersonate
__ Heimdal: _krb5_get_creds_opt_set_ticket
__ Heimdal: _krb5_get_error_message
__ Heimdal: _krb5_get_init_creds_opt_alloc
__ Heimdal: _krb5_get_init_creds_opt_free
__ Heimdal: _krb5_get_init_creds_opt_set_default_flags
__ Heimdal: _krb5_get_init_creds_opt_set_forwardable
__ Heimdal: _krb5_get_init_creds_opt_set_pac_request
__ Heimdal: _krb5_get_init_creds_opt_set_win2k
__ Heimdal: _krb5_get_init_creds_password
__ Heimdal: _krb5_init_context
__ Heimdal: _krb5_make_principal
__ Heimdal: _krb5_pac_free
__ Heimdal: _krb5_pac_get_buffer
__ Heimdal: _krb5_pac_parse
__ Heimdal: _krb5_pac_verify
__ Heimdal: _krb5_parse_name
__ Heimdal: _krb5_parse_name_flags
__ Heimdal: _krb5_principal_get_realm
__ Heimdal: _krb5_ticket_get_authorization_data_type
__ LocalAuthentication: _OBJC_CLASS_$_LAContext
__ Security: _SecAccessControlCreateWithFlags
__ Security: _SecCertificateCopyNTPrincipalNames
__ Security: _SecIdentityCopyCertificate
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _kSecAttrAccessControl
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessGroupToken
__ Security: _kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly
__ Security: _kSecAttrAccount
__ Security: _kSecAttrIssuer
__ Security: _kSecAttrLabel
__ Security: _kSecAttrSerialNumber
__ Security: _kSecAttrService
__ Security: _kSecAttrTokenID
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecClassIdentity
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitOne
__ Security: _kSecMatchValidOnDate
__ Security: _kSecReturnAttributes
__ Security: _kSecReturnData
__ Security: _kSecReturnPersistentRef
__ Security: _kSecReturnRef
__ Security: _kSecUseAuthenticationContext
__ Security: _kSecUseDataProtectionKeychain
__ Security: _kSecValueData
__ Security: _kSecValuePersistentRef
__ SoftLinking: __sl_dlopen
__ SystemConfiguration: _SCDynamicStoreCopyMultiple
__ SystemConfiguration: _SCDynamicStoreCreate
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkServiceEntity
__ SystemConfiguration: _kSCCompAnyRegex
__ SystemConfiguration: _kSCDynamicStoreDomainState
__ SystemConfiguration: _kSCEntNetIPv4
__ SystemConfiguration: _kSCEntNetIPv6
__ SystemConfiguration: _kSCPropInterfaceName
__ SystemConfiguration: _kSCPropNetIPv4Router
__ SystemConfiguration: _kSCPropNetIPv6Router
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _inet_ntoa
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _ne_session_cancel
__ libSystem.B.dylib: _ne_session_create
__ libSystem.B.dylib: _ne_session_get_status
__ libSystem.B.dylib: _ne_session_release
__ libSystem.B.dylib: _ne_session_set_event_handler
__ libSystem.B.dylib: _ne_session_start
__ libSystem.B.dylib: _ne_session_status_to_string
__ libSystem.B.dylib: _nwi_ifstate_get_flags
__ libSystem.B.dylib: _nwi_ifstate_get_signature
__ libSystem.B.dylib: _nwi_ifstate_get_vpn_server
__ libSystem.B.dylib: _nwi_state_copy
__ libSystem.B.dylib: _nwi_state_get_ifstate
__ libSystem.B.dylib: _nwi_state_release
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _uuid_unparse_upper
__ libSystem.B.dylib: _xpc_array_create
__ libSystem.B.dylib: _xpc_array_set_string
__ libnetwork.dylib: __nw_parameters_configure_protocol_default_configuration
__ libnetwork.dylib: __nw_parameters_configure_protocol_disable
__ libnetwork.dylib: _nw_array_apply
__ libnetwork.dylib: _nw_connection_cancel
__ libnetwork.dylib: _nw_connection_copy_connected_remote_endpoint
__ libnetwork.dylib: _nw_connection_create
__ libnetwork.dylib: _nw_connection_get_connected_socket
__ libnetwork.dylib: _nw_connection_set_queue
__ libnetwork.dylib: _nw_connection_set_state_changed_handler
__ libnetwork.dylib: _nw_connection_start
__ libnetwork.dylib: _nw_endpoint_copy_parent_endpoint
__ libnetwork.dylib: _nw_endpoint_create_host
__ libnetwork.dylib: _nw_endpoint_create_host_with_numeric_port
__ libnetwork.dylib: _nw_endpoint_create_srv
__ libnetwork.dylib: _nw_endpoint_get_hostname
__ libnetwork.dylib: _nw_endpoint_get_port
__ libnetwork.dylib: _nw_endpoint_get_type
__ libnetwork.dylib: _nw_interface_get_name
__ libnetwork.dylib: _nw_interface_get_type
__ libnetwork.dylib: _nw_parameters_create
__ libnetwork.dylib: _nw_parameters_create_legacy_tcp_socket
__ libnetwork.dylib: _nw_parameters_create_secure_tcp
__ libnetwork.dylib: _nw_parameters_set_required_netagent_classes
__ libnetwork.dylib: _nw_parameters_set_source_application
__ libnetwork.dylib: _nw_parameters_set_source_application_by_bundle_id
__ libnetwork.dylib: _nw_parameters_set_traffic_class
__ libnetwork.dylib: _nw_path_copy_interface
__ libnetwork.dylib: _nw_path_create_evaluator_for_endpoint
__ libnetwork.dylib: _nw_path_evaluator_copy_path
__ libnetwork.dylib: _nw_path_get_status
__ libnetwork.dylib: _nw_path_get_vpn_config_id
__ libnetwork.dylib: _nw_path_is_per_app_vpn
__ libnetwork.dylib: _nw_resolver_cancel
__ libnetwork.dylib: _nw_resolver_create_with_path
__ libnetwork.dylib: _nw_resolver_set_update_handler
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SOSmartcardEntry : NSObject
 @property  NSString *upn
 @property  NSString *certName
 @property  NSString *tokenID
 @property  NSDictionary *attributes
 @property  ^{__SecIdentity=} identity
 @property  NSData *persistientRef

  // instance methods
  -[SOSmartcardEntry upn]
  -[SOSmartcardEntry tokenID]
  -[SOSmartcardEntry .cxx_destruct]
  -[SOSmartcardEntry setIdentity:]
  -[SOSmartcardEntry setAttributes:]
  -[SOSmartcardEntry identity]
  -[SOSmartcardEntry attributes]
  -[SOSmartcardEntry setUpn:]
  -[SOSmartcardEntry setTokenID:]
  -[SOSmartcardEntry certName]
  -[SOSmartcardEntry setCertName:]
  -[SOSmartcardEntry persistientRef]
  -[SOSmartcardEntry setPersistientRef:]


SOSmartcard : NSObject
  // class methods
  +[SOSmartcard searchForCachedIdentityPersistentRef:tokenID:]
  +[SOSmartcard getIdentityForPersistentRef:identityToReturn:]
  +[SOSmartcard getLocalAuthIdentityForCert:withLAContext:]
  +[SOSmartcard pollSmartcardForIdentityWithPersistentRef:tokenID:]
  +[SOSmartcard searchForCachedIdentityWithSerial:withIssuer:withTokenID:]
  +[SOSmartcard availableSmartCards]


SOKerberosSettingsManager : NSObject
  // instance methods
  -[SOKerberosSettingsManager saveKerberosValuesForProfile:]
  -[SOKerberosSettingsManager init]
  -[SOKerberosSettingsManager createKerberosSettingsCache]


SOLDAPHelper : NSObject
 @property  NSObject<OS_ldap_connection> *ldap
 @property  NSObject<OS_nw_connection> *connection
 @property  BOOL completionCalled
 @property  BOOL isConnected

  // instance methods
  -[SOLDAPHelper setIsConnected:]
  -[SOLDAPHelper disconnect]
  -[SOLDAPHelper isConnected]
  -[SOLDAPHelper ldap]
  -[SOLDAPHelper .cxx_destruct]
  -[SOLDAPHelper setConnection:]
  -[SOLDAPHelper init]
  -[SOLDAPHelper connection]
  -[SOLDAPHelper dealloc]
  -[SOLDAPHelper setLdap:]
  -[SOLDAPHelper setupLDAPconnection:andPort:andRequireTLSForLDAP:andBundleIdentifier:]
  -[SOLDAPHelper connectToLDAPWithCompletion:]
  -[SOLDAPHelper setCompletionCalled:]
  -[SOLDAPHelper completionCalled]
  -[SOLDAPHelper startLDAPWithCompletion:]
  -[SOLDAPHelper connectToLDAPServer:andPort:andBundleIdentifier:andRequireTLSForLDAP:completion:]
  -[SOLDAPHelper connectToLDAPService:requireTLSForLDAP:bundleIdentifier:inBackground:completion:]
  -[SOLDAPHelper queryforBaseDN:andScope:andAttributes:withFilter:completion:]
  -[SOLDAPHelper useDigestMD5Auth:andPassword:]
  -[SOLDAPHelper useKerberosAuth:forSPN:]


SODNSSRVResponse : NSObject
 @property  NSString *host
 @property  unsigned short port

  // instance methods
  -[SODNSSRVResponse port]
  -[SODNSSRVResponse .cxx_destruct]
  -[SODNSSRVResponse init]
  -[SODNSSRVResponse setPort:]
  -[SODNSSRVResponse setHost:]
  -[SODNSSRVResponse host]


SOKerberosServer : NSObject
 @property  NSString *host
 @property  NSString *protocol
 @property  NSString *port
 @property  NSString *path

  // class methods
  +[SOKerberosServer serverWithString:]

  // instance methods
  -[SOKerberosServer port]
  -[SOKerberosServer .cxx_destruct]
  -[SOKerberosServer path]
  -[SOKerberosServer protocol]
  -[SOKerberosServer host]
  -[SOKerberosServer initWithHost:port:protocol:path:]


SOKerberosExtensionUserData : NSObject
 @property  BOOL useKeychain
 @property  BOOL userSetKeychainChoice
 @property  BOOL useSmartCard

  // instance methods
  -[SOKerberosExtensionUserData init]
  -[SOKerberosExtensionUserData useKeychain]
  -[SOKerberosExtensionUserData setUseKeychain:]
  -[SOKerberosExtensionUserData userSetKeychainChoice]
  -[SOKerberosExtensionUserData setUserSetKeychainChoice:]
  -[SOKerberosExtensionUserData useSmartCard]
  -[SOKerberosExtensionUserData setUseSmartCard:]


SOADSiteDiscovery : NSObject
 @property  NSString *realm
 @property  NSOperationQueue *queue
 @property  SODNSSRVQuery *dns

  // instance methods
  -[SOADSiteDiscovery dns]
  -[SOADSiteDiscovery .cxx_destruct]
  -[SOADSiteDiscovery setQueue:]
  -[SOADSiteDiscovery setRealm:]
  -[SOADSiteDiscovery queue]
  -[SOADSiteDiscovery setDns:]
  -[SOADSiteDiscovery realm]
  -[SOADSiteDiscovery initWithRealm:]
  -[SOADSiteDiscovery discoverADInfoUsingSourceAppBundleIdentifier:auditTokenData:requireTLSForLDAP:withCompletion:]
  -[SOADSiteDiscovery performLDAPPingUsingSite:bundleIdentifier:auditTokenData:requireTLSForLDAP:inBackground:completion:]
  -[SOADSiteDiscovery performNetworkConnectionUsingService:orHost:port:inBackground:completion:]


SOSiteCode : NSObject <NSSecureCoding>
 @property  NSString *code
 @property  NSDate *timeStamp
 @property  NSString *networkFingerprint

  // class methods
  +[SOSiteCode supportsSecureCoding]

  // instance methods
  -[SOSiteCode age]
  -[SOSiteCode initWithCoder:]
  -[SOSiteCode .cxx_destruct]
  -[SOSiteCode code]
  -[SOSiteCode timeStamp]
  -[SOSiteCode encodeWithCoder:]
  -[SOSiteCode networkFingerprint]
  -[SOSiteCode initWithSiteCode:forNetworkFingerprint:]


SOKerberosRealmSettings : NSObject
 @property  NSMutableArray *siteCodeCache
 @property  NSUserDefaults *defaults
 @property  NSString *realm
 @property  NSString *userPrincipalName
 @property  NSString *userName
 @property  NSUUID *credentialUUID
 @property  NSData *pkinitPersistientRef
 @property  NSString *smartCardTokenID
 @property  NSDate *dateLastLogin
 @property  NSDate *datePasswordLastChanged
 @property  NSDate *datePasswordLastChangedAtLogin
 @property  NSDate *dateNextPacRefresh
 @property  NSDate *dateADPasswordCanChange
 @property  NSDate *datePasswordExpires
 @property  BOOL passwordNeverExpires
 @property  NSString *networkHomeDirectory
 @property  NSNumber *daysUntilExpiration
 @property  NSDate *dateLocalPasswordLastChanged
 @property  NSDate *dateADPasswordLastChangedWhenSynced
 @property  NSDate *dateLocalPasswordLastChangedWhenSynced
 @property  NSDate *dateExpirationNotificationSent
 @property  NSDate *dateExpirationChecked
 @property  BOOL delayUserSetupCleared
 @property  BOOL networkAvailable
 @property  BOOL userCancelledLogin
 @property  BOOL passwordChangeInProgress
 @property  NSDate *dateUserSignedOut

  // instance methods
  -[SOKerberosRealmSettings userName]
  -[SOKerberosRealmSettings setDefaults:]
  -[SOKerberosRealmSettings defaults]
  -[SOKerberosRealmSettings credentialUUID]
  -[SOKerberosRealmSettings setCredentialUUID:]
  -[SOKerberosRealmSettings save]
  -[SOKerberosRealmSettings removeAllValues]
  -[SOKerberosRealmSettings networkAvailable]
  -[SOKerberosRealmSettings .cxx_destruct]
  -[SOKerberosRealmSettings setUserName:]
  -[SOKerberosRealmSettings setRealm:]
  -[SOKerberosRealmSettings dealloc]
  -[SOKerberosRealmSettings observeValueForKeyPath:ofObject:change:context:]
  -[SOKerberosRealmSettings realm]
  -[SOKerberosRealmSettings daysUntilExpiration]
  -[SOKerberosRealmSettings initWithRealm:]
  -[SOKerberosRealmSettings realmKey:]
  -[SOKerberosRealmSettings datePasswordExpires]
  -[SOKerberosRealmSettings siteCodeCache]
  -[SOKerberosRealmSettings saveSiteCodes]
  -[SOKerberosRealmSettings loadSiteCodes]
  -[SOKerberosRealmSettings setSiteCodeCache:]
  -[SOKerberosRealmSettings userPrincipalName]
  -[SOKerberosRealmSettings setUserPrincipalName:]
  -[SOKerberosRealmSettings pkinitPersistientRef]
  -[SOKerberosRealmSettings setPkinitPersistientRef:]
  -[SOKerberosRealmSettings smartCardTokenID]
  -[SOKerberosRealmSettings setSmartCardTokenID:]
  -[SOKerberosRealmSettings dateLastLogin]
  -[SOKerberosRealmSettings setDateLastLogin:]
  -[SOKerberosRealmSettings datePasswordLastChanged]
  -[SOKerberosRealmSettings setDatePasswordLastChanged:]
  -[SOKerberosRealmSettings datePasswordLastChangedAtLogin]
  -[SOKerberosRealmSettings setDatePasswordLastChangedAtLogin:]
  -[SOKerberosRealmSettings dateNextPacRefresh]
  -[SOKerberosRealmSettings setDateNextPacRefresh:]
  -[SOKerberosRealmSettings dateADPasswordCanChange]
  -[SOKerberosRealmSettings setDateADPasswordCanChange:]
  -[SOKerberosRealmSettings dateLocalPasswordLastChanged]
  -[SOKerberosRealmSettings setDateLocalPasswordLastChanged:]
  -[SOKerberosRealmSettings dateADPasswordLastChangedWhenSynced]
  -[SOKerberosRealmSettings setDateADPasswordLastChangedWhenSynced:]
  -[SOKerberosRealmSettings dateLocalPasswordLastChangedWhenSynced]
  -[SOKerberosRealmSettings setDateLocalPasswordLastChangedWhenSynced:]
  -[SOKerberosRealmSettings setDatePasswordExpires:]
  -[SOKerberosRealmSettings passwordNeverExpires]
  -[SOKerberosRealmSettings setPasswordNeverExpires:]
  -[SOKerberosRealmSettings dateExpirationNotificationSent]
  -[SOKerberosRealmSettings setDateExpirationNotificationSent:]
  -[SOKerberosRealmSettings dateExpirationChecked]
  -[SOKerberosRealmSettings setDateExpirationChecked:]
  -[SOKerberosRealmSettings networkHomeDirectory]
  -[SOKerberosRealmSettings setNetworkHomeDirectory:]
  -[SOKerberosRealmSettings delayUserSetupCleared]
  -[SOKerberosRealmSettings setDelayUserSetupCleared:]
  -[SOKerberosRealmSettings setNetworkAvailable:]
  -[SOKerberosRealmSettings userCancelledLogin]
  -[SOKerberosRealmSettings setUserCancelledLogin:]
  -[SOKerberosRealmSettings passwordChangeInProgress]
  -[SOKerberosRealmSettings setPasswordChangeInProgress:]
  -[SOKerberosRealmSettings dateUserSignedOut]
  -[SOKerberosRealmSettings setDateUserSignedOut:]
  -[SOKerberosRealmSettings dumpSiteCodeCache]
  -[SOKerberosRealmSettings cacheSiteCode:]
  -[SOKerberosRealmSettings siteCodeForNetworkFingerprint:]


SOKeychainHelper : NSObject
  // instance methods
  -[SOKeychainHelper identityForPersistientRef:]
  -[SOKeychainHelper identityForUUIDString:]
  -[SOKeychainHelper addCredentialsToKeychainWithService:withUsername:withPassword:requireUserPresence:]
  -[SOKeychainHelper retrieveCredentialsFromKeychainWithContext:service:returnedUsername:returnedPassword:]
  -[SOKeychainHelper hasCredentialsInKeychainWithService:]
  -[SOKeychainHelper removeCredentialsFromKeychainWithService:]


SOAsynchronousBlockOperation : SOAsynchronousOperation
 @property  @? block

  // instance methods
  -[SOAsynchronousBlockOperation setBlock:]
  -[SOAsynchronousBlockOperation main]
  -[SOAsynchronousBlockOperation .cxx_destruct]
  -[SOAsynchronousBlockOperation initWithBlock:]
  -[SOAsynchronousBlockOperation block]


SOKerberosExtensionData : NSObject
 @property  NSString *cacheName
 @property  NSString *principalName
 @property  NSString *siteCode
 @property  NSString *certificateUUID
 @property  BOOL useSiteAutoDiscovery
 @property  NSArray *credentialBundleIdACL
 @property  BOOL includeManagedAppsInBundleIdACL
 @property  BOOL includeKerberosAppsInBundleIdACL
 @property  NSDictionary *domainRealmMapping
 @property  BOOL isDefaultRealm
 @property  BOOL allowPasswordChange
 @property  BOOL allowAutomaticLogin
 @property  BOOL requireUserPresence
 @property  NSString *pwChangeURL
 @property  NSNumber *pwExpireOverride
 @property  NSNumber *pwNotificationDays
 @property  BOOL pwReqComplexity
 @property  NSNumber *pwReqLength
 @property  NSNumber *pwReqMinAge
 @property  NSNumber *pwReqHistory
 @property  NSString *pwReqText
 @property  NSString *helpText
 @property  NSString *customUsernameLabel
 @property  NSNumber *replicationTime
 @property  BOOL syncLocalPassword
 @property  BOOL monitorCredentialsCache
 @property  BOOL delayUserSetup
 @property  long long credentialUseMode
 @property  BOOL requireTLSForLDAP
 @property  NSString *password
 @property  NSArray *preferredKDCs

  // instance methods
  -[SOKerberosExtensionData certificateUUID]
  -[SOKerberosExtensionData setCertificateUUID:]
  -[SOKerberosExtensionData password]
  -[SOKerberosExtensionData cacheName]
  -[SOKerberosExtensionData .cxx_destruct]
  -[SOKerberosExtensionData principalName]
  -[SOKerberosExtensionData setPrincipalName:]
  -[SOKerberosExtensionData setCacheName:]
  -[SOKerberosExtensionData initWithDictionary:]
  -[SOKerberosExtensionData setPassword:]
  -[SOKerberosExtensionData helpText]
  -[SOKerberosExtensionData isDefaultRealm]
  -[SOKerberosExtensionData domainRealmMapping]
  -[SOKerberosExtensionData setDomainRealmMapping:]
  -[SOKerberosExtensionData credentialUseMode]
  -[SOKerberosExtensionData setCredentialUseMode:]
  -[SOKerberosExtensionData useSiteAutoDiscovery]
  -[SOKerberosExtensionData siteCode]
  -[SOKerberosExtensionData setSiteCode:]
  -[SOKerberosExtensionData preferredKDCs]
  -[SOKerberosExtensionData pwReqComplexity]
  -[SOKerberosExtensionData syncLocalPassword]
  -[SOKerberosExtensionData pwNotificationDays]
  -[SOKerberosExtensionData pwExpireOverride]
  -[SOKerberosExtensionData pwChangeURL]
  -[SOKerberosExtensionData pwReqLength]
  -[SOKerberosExtensionData pwReqMinAge]
  -[SOKerberosExtensionData pwReqHistory]
  -[SOKerberosExtensionData pwReqText]
  -[SOKerberosExtensionData customUsernameLabel]
  -[SOKerberosExtensionData allowAutomaticLogin]
  -[SOKerberosExtensionData requireUserPresence]
  -[SOKerberosExtensionData monitorCredentialsCache]
  -[SOKerberosExtensionData replicationTime]
  -[SOKerberosExtensionData credentialBundleIdACL]
  -[SOKerberosExtensionData allowPasswordChange]
  -[SOKerberosExtensionData delayUserSetup]
  -[SOKerberosExtensionData requireTLSForLDAP]
  -[SOKerberosExtensionData includeManagedAppsInBundleIdACL]
  -[SOKerberosExtensionData includeKerberosAppsInBundleIdACL]
  -[SOKerberosExtensionData setUseSiteAutoDiscovery:]
  -[SOKerberosExtensionData setCredentialBundleIdACL:]
  -[SOKerberosExtensionData setIncludeManagedAppsInBundleIdACL:]
  -[SOKerberosExtensionData setIncludeKerberosAppsInBundleIdACL:]
  -[SOKerberosExtensionData setIsDefaultRealm:]
  -[SOKerberosExtensionData setAllowPasswordChange:]
  -[SOKerberosExtensionData setAllowAutomaticLogin:]
  -[SOKerberosExtensionData setRequireUserPresence:]
  -[SOKerberosExtensionData setPwChangeURL:]
  -[SOKerberosExtensionData setPwExpireOverride:]
  -[SOKerberosExtensionData setPwNotificationDays:]
  -[SOKerberosExtensionData setPwReqComplexity:]
  -[SOKerberosExtensionData setPwReqLength:]
  -[SOKerberosExtensionData setPwReqMinAge:]
  -[SOKerberosExtensionData setPwReqHistory:]
  -[SOKerberosExtensionData setPwReqText:]
  -[SOKerberosExtensionData setHelpText:]
  -[SOKerberosExtensionData setCustomUsernameLabel:]
  -[SOKerberosExtensionData setReplicationTime:]
  -[SOKerberosExtensionData setSyncLocalPassword:]
  -[SOKerberosExtensionData setMonitorCredentialsCache:]
  -[SOKerberosExtensionData setDelayUserSetup:]
  -[SOKerberosExtensionData setRequireTLSForLDAP:]
  -[SOKerberosExtensionData setPreferredKDCs:]


SOKerberosContext : NSObject
 @property  ASAuthorizationProviderExtensionAuthorizationRequest *authorizationRequest
 @property  NSObject<OS_dispatch_group> *dispatchGroup
 @property  BOOL requestStarted
 @property  BOOL requestCancelled
 @property  NSData *auditToken
 @property  BOOL isManagedApp
 @property  NSString *realm
 @property  SOKerberosExtensionData *extensionData
 @property  SOKerberosExtensionUserData *extensionUserData
 @property  NSString *hostName
 @property  NSString *servicePrincipalName
 @property  NSString *serviceName
 @property  NSString *password
 @property  NSString *changedPassword
 @property  BOOL userNameIsReadOnly
 @property  NSString *userPrincipalName
 @property  NSString *userName
 @property  NSUUID *credentialUUID
 @property  NSString *certificateTokenID
 @property  ^{__SecIdentity=} pkinitIdentity
 @property  NSData *pkinitPersistientRef
 @property  LAContext *smartCardLAContext
 @property  LAContext *keychainLAContext
 @property  BOOL useKerberosPasswordInsteadOfMDMIdentity
 @property  SOSiteCode *siteCode
 @property  NSString *cacheName
 @property  BOOL returnCredentialOnly
 @property  BOOL refreshCredential
 @property  SOKerberosRealmSettings *currentSettings
 @property  NSString *callerBundleIdentifier
 @property  NSString *impersonationBundleIdentifier
 @property  NSString *callerLocalizedName
 @property  BOOL credsCameFromKeychain
 @property  BOOL attemptedToGetCredsFromKeychain
 @property  int laContextFailureCount
 @property  BOOL forceLoginViewController
 @property  NSDate *loginTimeStamp
 @property  NSObject<OS_dispatch_group> *siteCodeGroup
 @property  SONetworkIdentity *networkIdentity
 @property  BOOL smartCardNeedsInsert
 @property  SOKerberosPacData *pacData

  // instance methods
  -[SOKerberosContext userName]
  -[SOKerberosContext auditToken]
  -[SOKerberosContext setAuditToken:]
  -[SOKerberosContext setServiceName:]
  -[SOKerberosContext waitForCompletion]
  -[SOKerberosContext serviceName]
  -[SOKerberosContext credentialUUID]
  -[SOKerberosContext setCredentialUUID:]
  -[SOKerberosContext hostName]
  -[SOKerberosContext password]
  -[SOKerberosContext cacheName]
  -[SOKerberosContext .cxx_destruct]
  -[SOKerberosContext startRequest]
  -[SOKerberosContext setDispatchGroup:]
  -[SOKerberosContext setCallerBundleIdentifier:]
  -[SOKerberosContext extensionData]
  -[SOKerberosContext setCacheName:]
  -[SOKerberosContext currentSettings]
  -[SOKerberosContext setUserName:]
  -[SOKerberosContext dispatchGroup]
  -[SOKerberosContext setRealm:]
  -[SOKerberosContext setHostName:]
  -[SOKerberosContext setAuthorizationRequest:]
  -[SOKerberosContext setPassword:]
  -[SOKerberosContext callerBundleIdentifier]
  -[SOKerberosContext pacData]
  -[SOKerberosContext completeRequestWithError:]
  -[SOKerberosContext authorizationRequest]
  -[SOKerberosContext setExtensionData:]
  -[SOKerberosContext cancelRequest:]
  -[SOKerberosContext cancelRequest]
  -[SOKerberosContext impersonationBundleIdentifier]
  -[SOKerberosContext realm]
  -[SOKerberosContext setImpersonationBundleIdentifier:]
  -[SOKerberosContext presentAuthorizationViewControllerWithCompletion:]
  -[SOKerberosContext completeRequest]
  -[SOKerberosContext siteCode]
  -[SOKerberosContext setSiteCode:]
  -[SOKerberosContext userPrincipalName]
  -[SOKerberosContext setUserPrincipalName:]
  -[SOKerberosContext pkinitPersistientRef]
  -[SOKerberosContext setPkinitPersistientRef:]
  -[SOKerberosContext requestStarted]
  -[SOKerberosContext setRequestStarted:]
  -[SOKerberosContext setRequestCancelled:]
  -[SOKerberosContext finishRequest]
  -[SOKerberosContext completeRequestWithHTTPResponse:httpBody:]
  -[SOKerberosContext initWithRequest:extensionData:]
  -[SOKerberosContext setUserPrincipalNameAfterAuth:]
  -[SOKerberosContext completeRequestWithHeaders:]
  -[SOKerberosContext completeRequestWithHTTPResponseHeaders:]
  -[SOKerberosContext completeRequestWithDoNotHandle]
  -[SOKerberosContext extensionUserData]
  -[SOKerberosContext setExtensionUserData:]
  -[SOKerberosContext servicePrincipalName]
  -[SOKerberosContext setServicePrincipalName:]
  -[SOKerberosContext changedPassword]
  -[SOKerberosContext setChangedPassword:]
  -[SOKerberosContext userNameIsReadOnly]
  -[SOKerberosContext setUserNameIsReadOnly:]
  -[SOKerberosContext certificateTokenID]
  -[SOKerberosContext setCertificateTokenID:]
  -[SOKerberosContext pkinitIdentity]
  -[SOKerberosContext setPkinitIdentity:]
  -[SOKerberosContext smartCardLAContext]
  -[SOKerberosContext setSmartCardLAContext:]
  -[SOKerberosContext keychainLAContext]
  -[SOKerberosContext setKeychainLAContext:]
  -[SOKerberosContext useKerberosPasswordInsteadOfMDMIdentity]
  -[SOKerberosContext setUseKerberosPasswordInsteadOfMDMIdentity:]
  -[SOKerberosContext returnCredentialOnly]
  -[SOKerberosContext setReturnCredentialOnly:]
  -[SOKerberosContext refreshCredential]
  -[SOKerberosContext setRefreshCredential:]
  -[SOKerberosContext callerLocalizedName]
  -[SOKerberosContext setCallerLocalizedName:]
  -[SOKerberosContext credsCameFromKeychain]
  -[SOKerberosContext setCredsCameFromKeychain:]
  -[SOKerberosContext requestCancelled]
  -[SOKerberosContext attemptedToGetCredsFromKeychain]
  -[SOKerberosContext setAttemptedToGetCredsFromKeychain:]
  -[SOKerberosContext laContextFailureCount]
  -[SOKerberosContext setLaContextFailureCount:]
  -[SOKerberosContext forceLoginViewController]
  -[SOKerberosContext setForceLoginViewController:]
  -[SOKerberosContext loginTimeStamp]
  -[SOKerberosContext setLoginTimeStamp:]
  -[SOKerberosContext siteCodeGroup]
  -[SOKerberosContext setSiteCodeGroup:]
  -[SOKerberosContext networkIdentity]
  -[SOKerberosContext setNetworkIdentity:]
  -[SOKerberosContext isManagedApp]
  -[SOKerberosContext setIsManagedApp:]
  -[SOKerberosContext smartCardNeedsInsert]
  -[SOKerberosContext setSmartCardNeedsInsert:]
  -[SOKerberosContext setPacData:]


SOAsynchronousLDAPOperation : SOAsynchronousOperation
 @property  @? completion
 @property  NSString *realm
 @property  NSString *host
 @property  unsigned short port
 @property  BOOL requireTLSForLDAP
 @property  NSString *bundleIdentifier

  // instance methods
  -[SOAsynchronousLDAPOperation completion]
  -[SOAsynchronousLDAPOperation setCompletion:]
  -[SOAsynchronousLDAPOperation bundleIdentifier]
  -[SOAsynchronousLDAPOperation main]
  -[SOAsynchronousLDAPOperation port]
  -[SOAsynchronousLDAPOperation .cxx_destruct]
  -[SOAsynchronousLDAPOperation setBundleIdentifier:]
  -[SOAsynchronousLDAPOperation setRealm:]
  -[SOAsynchronousLDAPOperation setPort:]
  -[SOAsynchronousLDAPOperation setHost:]
  -[SOAsynchronousLDAPOperation realm]
  -[SOAsynchronousLDAPOperation host]
  -[SOAsynchronousLDAPOperation initWithRealm:andHost:andPort:andBundleIdentifier:andRequireTLSForLDAP:andCompletion:]
  -[SOAsynchronousLDAPOperation requireTLSForLDAP]
  -[SOAsynchronousLDAPOperation setRequireTLSForLDAP:]


SOKerberosExtensionProcess : NSObject
 @property  NSMutableDictionary *kerberosByRealm
 @property  NSMapTable *requestContextMapping
 @property  SOKerberosHelper *kerberosHelper
 @property  SOKeychainHelper *keychainHelper

  // instance methods
  -[SOKerberosExtensionProcess .cxx_destruct]
  -[SOKerberosExtensionProcess init]
  -[SOKerberosExtensionProcess handleMigration]
  -[SOKerberosExtensionProcess beginAuthorizationWithRequest:]
  -[SOKerberosExtensionProcess cancelAuthorizationWithRequest:]
  -[SOKerberosExtensionProcess removeSettingFile:]
  -[SOKerberosExtensionProcess handleLogout:removeRealm:]
  -[SOKerberosExtensionProcess handleGetSiteCode:]
  -[SOKerberosExtensionProcess handleRemoveRealm:]
  -[SOKerberosExtensionProcess handleResetKeychainChoice:]
  -[SOKerberosExtensionProcess handleGetRealmInfo:]
  -[SOKerberosExtensionProcess requestContextMapping]
  -[SOKerberosExtensionProcess kerberosByRealm]
  -[SOKerberosExtensionProcess createContextForRequest:]
  -[SOKerberosExtensionProcess checkSourceAppACLWithContext:]
  -[SOKerberosExtensionProcess attemptKerberosWithContext:andDelegate:]
  -[SOKerberosExtensionProcess kerberosHelper]
  -[SOKerberosExtensionProcess keychainHelper]
  -[SOKerberosExtensionProcess handleLogoutWithContext:removeRealm:]
  -[SOKerberosExtensionProcess settingsForContext:includeSiteCodeCache:]
  -[SOKerberosExtensionProcess completeRequestWithToken:andContext:]
  -[SOKerberosExtensionProcess completeRequestWithHTTPResponseFromContext:]
  -[SOKerberosExtensionProcess saveValuesAfterSuccessfulAuthentication:]
  -[SOKerberosExtensionProcess handleAddKeychainCreds:]
  -[SOKerberosExtensionProcess handleKerberosOperations:andDelegate:]
  -[SOKerberosExtensionProcess destroyCredentialsWithContext:]
  -[SOKerberosExtensionProcess saveValuesAfterSuccessfulPasswordSync:]
  -[SOKerberosExtensionProcess mapKnownPasswordErrorToString:]
  -[SOKerberosExtensionProcess kerberosForRealm:]
  -[SOKerberosExtensionProcess setKerberosByRealm:]
  -[SOKerberosExtensionProcess setRequestContextMapping:]
  -[SOKerberosExtensionProcess setKerberosHelper:]
  -[SOKerberosExtensionProcess setKeychainHelper:]


SONetLogonParser : NSObject
  // class methods
  +[SONetLogonParser parseNetLoginUsingData:]


SOKerberosCredential : NSObject
 @property  NSString *name
 @property  unsigned int lifetime
 @property  NSString *uuid

  // instance methods
  -[SOKerberosCredential name]
  -[SOKerberosCredential .cxx_destruct]
  -[SOKerberosCredential setName:]
  -[SOKerberosCredential lifetime]
  -[SOKerberosCredential init]
  -[SOKerberosCredential uuid]
  -[SOKerberosCredential setUuid:]
  -[SOKerberosCredential setLifetime:]


SOKerberosHeimdalPluginSettings : NSObject <NSSecureCoding>
 @property  NSString *realm
 @property  BOOL defaultRealm
 @property  NSDictionary *domainRealmMapping
 @property  NSArray *hosts
 @property  NSArray *kdcs
 @property  long long credentialUseMode
 @property  NSString *siteCode
 @property  NSUUID *currentCredential

  // class methods
  +[SOKerberosHeimdalPluginSettings appSSOKerberosCacheName]
  +[SOKerberosHeimdalPluginSettings supportsSecureCoding]
  +[SOKerberosHeimdalPluginSettings deleteSettingsForRealm:error:]
  +[SOKerberosHeimdalPluginSettings setAppSSOKerberosCacheName:]
  +[SOKerberosHeimdalPluginSettings deleteAllSettings]
  +[SOKerberosHeimdalPluginSettings createCacheEntryWithError:]
  +[SOKerberosHeimdalPluginSettings retrieveCurrentSettingsForRealm:error:]
  +[SOKerberosHeimdalPluginSettings retrieveSetting:forRealm:]
  +[SOKerberosHeimdalPluginSettings stringWithCredentialUseMode:]
  +[SOKerberosHeimdalPluginSettings retrieveAllCurrentSettings]
  +[SOKerberosHeimdalPluginSettings createSettingCacheEntryIfNeededWithError:]
  +[SOKerberosHeimdalPluginSettings retrieveCacheEntry]
  +[SOKerberosHeimdalPluginSettings retrieveCurrentSettingsForRealm:]

  // instance methods
  -[SOKerberosHeimdalPluginSettings initWithCoder:]
  -[SOKerberosHeimdalPluginSettings setHosts:]
  -[SOKerberosHeimdalPluginSettings kdcs]
  -[SOKerberosHeimdalPluginSettings .cxx_destruct]
  -[SOKerberosHeimdalPluginSettings setCurrentCredential:]
  -[SOKerberosHeimdalPluginSettings dictionaryRepresentation]
  -[SOKerberosHeimdalPluginSettings hosts]
  -[SOKerberosHeimdalPluginSettings init]
  -[SOKerberosHeimdalPluginSettings saveWithError:]
  -[SOKerberosHeimdalPluginSettings encodeWithCoder:]
  -[SOKerberosHeimdalPluginSettings realm]
  -[SOKerberosHeimdalPluginSettings initWithRealm:]
  -[SOKerberosHeimdalPluginSettings isDefaultRealm]
  -[SOKerberosHeimdalPluginSettings setDefaultRealm:]
  -[SOKerberosHeimdalPluginSettings domainRealmMapping]
  -[SOKerberosHeimdalPluginSettings setDomainRealmMapping:]
  -[SOKerberosHeimdalPluginSettings credentialUseMode]
  -[SOKerberosHeimdalPluginSettings setCredentialUseMode:]
  -[SOKerberosHeimdalPluginSettings siteCode]
  -[SOKerberosHeimdalPluginSettings setSiteCode:]
  -[SOKerberosHeimdalPluginSettings setKdcs:]
  -[SOKerberosHeimdalPluginSettings saveSetting:data:withError:]
  -[SOKerberosHeimdalPluginSettings currentCredential]


SOKerberosAuthentication : NSObject
 @property  NSString *realm
 @property  BOOL siteDiscoveryInProgress
 @property  SOKerberosHelper *kerberosHelper
 @property  SOKeychainHelper *keychainHelper
 @property  SOADSiteDiscovery *siteDiscovery

  // class methods
  +[SOKerberosAuthentication saveValuesForPlugins:]
  +[SOKerberosAuthentication savePacValues:atLogin:]

  // instance methods
  -[SOKerberosAuthentication .cxx_destruct]
  -[SOKerberosAuthentication setRealm:]
  -[SOKerberosAuthentication realm]
  -[SOKerberosAuthentication initWithRealm:]
  -[SOKerberosAuthentication determineSiteCodeUsingContext:]
  -[SOKerberosAuthentication retrieveCachedSiteCodeFromCacheForBundleIdentifier:networkFingerprint:]
  -[SOKerberosAuthentication kerberosHelper]
  -[SOKerberosAuthentication keychainHelper]
  -[SOKerberosAuthentication attemptKerberosWithContext:returningToken:orError:]
  -[SOKerberosAuthentication setKerberosHelper:]
  -[SOKerberosAuthentication setKeychainHelper:]
  -[SOKerberosAuthentication triggerVPNIfNeededUsingRealm:bundleIdentifier:auditToken:]
  -[SOKerberosAuthentication findExistingCredentialUsingContext:returningCredential:orError:]
  -[SOKerberosAuthentication setSiteCodeUsingContext:]
  -[SOKerberosAuthentication createNewCredentialUsingContext:returningCredential:orError:]
  -[SOKerberosAuthentication refreshPacValuesWithContext:credential:atLogin:]
  -[SOKerberosAuthentication mapErrorToKnownError:]
  -[SOKerberosAuthentication _determineSiteCodeUsingDispatchGroup:bundleIdentifier:auditTokenData:networkFingerprint:requireTLSForLDAP:]
  -[SOKerberosAuthentication siteDiscoveryInProgress]
  -[SOKerberosAuthentication setSiteDiscoveryInProgress:]
  -[SOKerberosAuthentication siteDiscovery]
  -[SOKerberosAuthentication changePasswordWithContext:withError:]
  -[SOKerberosAuthentication refreshPacValuesWithContext:atLogin:error:]
  -[SOKerberosAuthentication setSiteDiscovery:]


SOKerberosPacData : NSObject
 @property  NSDate *passwordLastSet
 @property  NSDate *passwordCanChange
 @property  NSDate *passwordMustChange
 @property  BOOL passwordNeverExpires
 @property  NSString *homeDirectory
 @property  NSString *effectiveName
 @property  NSString *fullName

  // instance methods
  -[SOKerberosPacData homeDirectory]
  -[SOKerberosPacData fullName]
  -[SOKerberosPacData .cxx_destruct]
  -[SOKerberosPacData setHomeDirectory:]
  -[SOKerberosPacData setFullName:]
  -[SOKerberosPacData setEffectiveName:]
  -[SOKerberosPacData effectiveName]
  -[SOKerberosPacData passwordNeverExpires]
  -[SOKerberosPacData setPasswordNeverExpires:]
  -[SOKerberosPacData passwordMustChange]
  -[SOKerberosPacData passwordLastSet]
  -[SOKerberosPacData passwordCanChange]
  -[SOKerberosPacData convertFromFileTime:]
  -[SOKerberosPacData initWithValidationInfo:]
  -[SOKerberosPacData setPasswordLastSet:]
  -[SOKerberosPacData setPasswordCanChange:]
  -[SOKerberosPacData setPasswordMustChange:]


SONetworkIdentity : NSObject
 @property  NSString *realm
 @property  NSString *bundleIdentifier
 @property  NSString *networkFingerprint
 @property  BOOL perAppVPN
 @property  NSObject<OS_nw_path> *lastpath
 @property  NSData *auditToken

  // instance methods
  -[SONetworkIdentity auditToken]
  -[SONetworkIdentity setAuditToken:]
  -[SONetworkIdentity bundleIdentifier]
  -[SONetworkIdentity .cxx_destruct]
  -[SONetworkIdentity isPerAppVPN]
  -[SONetworkIdentity setBundleIdentifier:]
  -[SONetworkIdentity setRealm:]
  -[SONetworkIdentity realm]
  -[SONetworkIdentity networkFingerprint]
  -[SONetworkIdentity determineNetworkFingerprint]
  -[SONetworkIdentity initForRealm:bundleIdentifier:auditToken:]
  -[SONetworkIdentity evaluateVPNPath:]
  -[SONetworkIdentity setPerAppVPN:]
  -[SONetworkIdentity setNetworkFingerprint:]
  -[SONetworkIdentity getVPNServerSignature:]
  -[SONetworkIdentity setLastpath:]
  -[SONetworkIdentity getInterfaceSignature:]
  -[SONetworkIdentity getInterfaceFingerprintForDynamicInterface:]
  -[SONetworkIdentity evaluateVPNPathForHost:port:]
  -[SONetworkIdentity evaluateVPNPath]
  -[SONetworkIdentity lastpath]


SOKerberosFileManager : NSObject
  // class methods
  +[SOKerberosFileManager documentsDirectoryURLForFileName:]
  +[SOKerberosFileManager archiveDictionary:toFile:]
  +[SOKerberosFileManager loadDictionaryFromFile:]


SOKerberosHelper : NSObject
  // instance methods
  -[SOKerberosHelper destroyCredential:]
  -[SOKerberosHelper destroyCredentialForUPN:]
  -[SOKerberosHelper acquireCredentialForUUID:]
  -[SOKerberosHelper authenticate:toServer:returningToken:andError:]
  -[SOKerberosHelper createCredential:withOptions:andError:]
  -[SOKerberosHelper acquireCredentialForUPN:]
  -[SOKerberosHelper changePasswordForUPN:realm:withOldPassword:withNewPassword:withError:]
  -[SOKerberosHelper getPACForCred:pac:]
  -[SOKerberosHelper createGSSName:gname:error:]
  -[SOKerberosHelper _testForUPNForUser:]
  -[SOKerberosHelper validatePassword:forUser:]
  -[SOKerberosHelper destroyAllCredentials]
  -[SOKerberosHelper listCredentials]


SOAuthorizationWrapper : NSObject <SOAuthorizationCoreDelegate>
 @property  @? authorizationCompletion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SOAuthorizationWrapper .cxx_destruct]
  -[SOAuthorizationWrapper authorizationDidComplete:]
  -[SOAuthorizationWrapper authorization:didCompleteWithError:]
  -[SOAuthorizationWrapper init]
  -[SOAuthorizationWrapper authorization:didCompleteWithHTTPAuthorizationHeaders:]
  -[SOAuthorizationWrapper authorization:didCompleteWithHTTPResponse:httpBody:]
  -[SOAuthorizationWrapper authorizationDidNotHandle:]
  -[SOAuthorizationWrapper canPerformAuthorizationWithURL:responseCode:]
  -[SOAuthorizationWrapper authorizationDidCancel:]
  -[SOAuthorizationWrapper beginAuthorizationWithOperation:url:httpHeaders:httpBody:andCompletion:]
  -[SOAuthorizationWrapper authorizationCompletion]
  -[SOAuthorizationWrapper setAuthorizationCompletion:]


SODNSSRVQuery : NSObject
  // instance methods
  -[SODNSSRVQuery init]
  -[SODNSSRVQuery lookupSRVWithQuery:bundleIdentifier:auditTokenData:completion:]
  -[SODNSSRVQuery lookupSRVWithQuery:bundleIdentifier:auditTokenData:]
  -[SODNSSRVQuery lookupHost:port:bundleIdentifier:auditTokenData:completion:]


SOKerberosAgentContext : NSObject
 @property  SOFullProfile *profile
 @property  SOKerberosRealmSettings *settings
 @property  SOKerberosExtensionData *extensionData
 @property  SONetworkIdentity *identity
 @property  SOADSiteDiscovery *siteDiscovery
 @property  SOAuthorizationWrapper *authWrapper
 @property  SOAuthorizationWrapper *passwordSyncAuthWrapper
 @property  SOAuthorizationWrapper *passwordChangeAuthWrapper
 @property  NSOperationQueue *contextNetworkWorkQueue
 @property  NSOperationQueue *contextKerberosWorkQueue
 @property  BOOL authRequestPending
 @property  BOOL discoveryInProgress

  // instance methods
  -[SOKerberosAgentContext setProfile:]
  -[SOKerberosAgentContext initWithProfile:]
  -[SOKerberosAgentContext .cxx_destruct]
  -[SOKerberosAgentContext setSettings:]
  -[SOKerberosAgentContext extensionData]
  -[SOKerberosAgentContext setIdentity:]
  -[SOKerberosAgentContext profile]
  -[SOKerberosAgentContext identity]
  -[SOKerberosAgentContext setExtensionData:]
  -[SOKerberosAgentContext settings]
  -[SOKerberosAgentContext siteDiscovery]
  -[SOKerberosAgentContext setSiteDiscovery:]
  -[SOKerberosAgentContext authRequestPending]
  -[SOKerberosAgentContext setAuthRequestPending:]
  -[SOKerberosAgentContext contextNetworkWorkQueue]
  -[SOKerberosAgentContext contextKerberosWorkQueue]
  -[SOKerberosAgentContext authWrapper]
  -[SOKerberosAgentContext setAuthWrapper:]
  -[SOKerberosAgentContext passwordSyncAuthWrapper]
  -[SOKerberosAgentContext setPasswordSyncAuthWrapper:]
  -[SOKerberosAgentContext passwordChangeAuthWrapper]
  -[SOKerberosAgentContext setPasswordChangeAuthWrapper:]
  -[SOKerberosAgentContext discoveryInProgress]
  -[SOKerberosAgentContext setDiscoveryInProgress:]


SOAsynchronousOperation : NSOperation
 @property  unsigned long state

  // instance methods
  -[SOAsynchronousOperation isAsynchronous]
  -[SOAsynchronousOperation isFinished]
  -[SOAsynchronousOperation main]
  -[SOAsynchronousOperation isReady]
  -[SOAsynchronousOperation isExecuting]
  -[SOAsynchronousOperation setState:]
  -[SOAsynchronousOperation init]
  -[SOAsynchronousOperation state]
  -[SOAsynchronousOperation finish]
  -[SOAsynchronousOperation start]


(AppSSOKerberos)
	// class methods
	+[(AppSSOKerberos) kerberosErrorWithCode:withDescription:]
	+[(AppSSOKerberos) credentialMissing]
	+[(AppSSOKerberos) passwordChangeNotEnabled]
	+[(AppSSOKerberos) servicePrincipalNameMissing]
	+[(AppSSOKerberos) invalidKerberosOperation]
	+[(AppSSOKerberos) hostNameMissing]
	+[(AppSSOKerberos) unhandledKerberosResult]
	+[(AppSSOKerberos) sourceAppNotAllowed]

01 00 0300 /System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication: LAContext 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0c00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0400 /System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore: SOAuthorizationCore 
01 00 0400 /System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore: SOUtils 
01 00 0100 /System/Library/Frameworks/CryptoTokenKit.framework/CryptoTokenKit: TKTokenWatcher 
