|| __DATA.__data _SBUILegibilityErrorDomain
|| __DATA.__objc_data _OBJC_CLASS_$_SBBlackBackdropSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBLightPasscodeNumberPadButton
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockOverlayStyleProperties
|| __DATA.__objc_data _OBJC_CLASS_$_SBLockOverlayStylePropertiesFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SBNumberPadWithDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_SBPasscodeKeyboardAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIHandleDeviceLockSceneAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIHandleDeviceLockSceneActionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIHardwareButtonEventSceneAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIHardwareButtonEventSceneActionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIHomeScreenSilhouetteViewBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallDestroySceneAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallRequestPresentationModeAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallSceneClientSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallSceneClientSettingsDiffInspector
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallSceneSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallSceneSettingsDiffInspector
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallSceneSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallSceneTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallShowNoticeForSystemControlsAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallWindowScene
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallWindowSceneBSActionsHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallWindowSceneDeviceLockEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallWindowSceneHardwareButtonEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIInCallWindowSceneSettingsDiffAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUILoginUISceneClientSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUILoginUISceneClientSettingsDiffInspector
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUILoginUISceneSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIMutableInCallSceneClientSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIMutableInCallSceneSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIMutableLoginUISceneClientSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIMutableStarkNotificationsSceneClientSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIMutableStarkNotificationsSceneSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIRemoteAlertItemContentViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIStarkNotificationsSceneClientSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIStarkNotificationsSceneSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIStarkNotificationsSceneSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIStarkNotificationsSceneTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUISystemNotesSceneSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUISystemNotesWindowScene
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUISystemNotesWindowSceneBSActionsHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIWallpaperPreviewViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIWallpaperProgressHUD
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIWallpaperService
|| __DATA.__objc_data _OBJC_CLASS_$_SBSUIWallpaperServiceInterfaceSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_SBSearchBar
|| __DATA.__objc_data _OBJC_CLASS_$_SBSimplePasscodeEntryFieldButton
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIAlphanumericPasscodeEntryField
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIBackgroundContentActionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIBackgroundContentScene
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIBackgroundContentSceneSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIBackgroundContentTouchAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIBannerClientContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIBannerSceneClientSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIBannerSourceApplicationSceneSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIBiometricResource
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIButton
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIDependencyGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIEmergencyCallHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIEmergencyCallServiceViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIExternalPreferences
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIFaceIDCameraGlyphView
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIFaceIDCoachingView
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIInteractionForwardingView
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIKeyboardEnablementManager
|| __DATA.__objc_data _OBJC_CLASS_$_SBUILegibilityCache
|| __DATA.__objc_data _OBJC_CLASS_$_SBUILegibilityContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_SBUILegibilityDefaultEngine
|| __DATA.__objc_data _OBJC_CLASS_$_SBUILegibilityMetalEngine
|| __DATA.__objc_data _OBJC_CLASS_$_SBUILegibilitySettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBUILegibilityShadowView
|| __DATA.__objc_data _OBJC_CLASS_$_SBUILegibilityView
|| __DATA.__objc_data _OBJC_CLASS_$_SBUILockOverlayView
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIMutableBannerSceneClientSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPasscodeBiometricAuthenticationView
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPasscodeBiometricResource
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPasscodeLockViewFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPasscodeLockViewInstallTonightLongNumericKeypad
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPasscodeLockViewInstallTonightWithKeyboard
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPasscodeLockViewLongNumericKeypad
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPeriocularController
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPhoneUnlockWithWatchController
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPopoverExtensionHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPopoverExtensionRemoteViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPoseidonContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPoseidonIconView
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPowerDownViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPowerDownViewControllerFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPreciseClockTimer
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPresentableButtonEventsAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPresentableHomeAffordanceThresholdAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIPresentableWantsHomeGestureAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIProudLockContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIRemoteAlertButtonAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIRemoteAlertButtonActionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIRemoteAlertIdleTimerSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBUIShapeView
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISizeObservingView
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureAlertingAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureAnimationParameters
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureButton
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureButtonContentProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureCAPackageContentProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureContentProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureCustomContentProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureElementConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureElementPresentationSession
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureElementSourceAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureElementSourceContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureElementTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureElementUnassociatedContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureImageContentProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureLabel
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureLayoutGuide
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureSceneAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureSceneResizeAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureSceneSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureStackedContentProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBUISystemApertureTextContentProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SBWhiteBackdropSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SpringBoardUIServices
|| __DATA.__objc_data _OBJC_CLASS_$_UIResizableView
|| __DATA.__objc_data _OBJC_CLASS_$__SBSUICFUserNotificationContentExtensionContext
|| __DATA.__objc_data _OBJC_CLASS_$__SBSUICFUserNotificationContentExtensionContextHost
|| __DATA.__objc_data _OBJC_CLASS_$__SBSUICFUserNotificationContentRemoteContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SBSUIOrientedImageView
|| __DATA.__objc_data _OBJC_CLASS_$__SBSUIWallpaperGradientView
|| __DATA.__objc_data _OBJC_CLASS_$__SBUIBiometricKitInterface
|| __DATA.__objc_data _OBJC_CLASS_$__SBUIBiometricKitInterfaceOperationStateTracker
|| __DATA.__objc_data _OBJC_CLASS_$__SBUIBiometricMatchingAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__SBUIBiometricOperationAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__SBUILegibilityMetalEngineConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$__SBUIPopoverExtensionContext
|| __DATA.__objc_data _OBJC_CLASS_$__SBUIPresentableDismissalPreventionAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__SBUIPresentableGestureRecognizerPriorityAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__SBUISimulatedLockoutAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__SBUISwitcherPageServiceViewController
|| __DATA.__objc_data _OBJC_CLASS_$__SBUISystemApertureAlertingAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__SBUISystemApertureAspectFittingImageView
|| __DATA.__objc_data _OBJC_CLASS_$__SBUISystemApertureCAPackageView
|| __DATA.__objc_data _OBJC_CLASS_$__SBUISystemApertureStackView
|| __DATA.__objc_data _OBJC_CLASS_$__SBUIWallpaperInstructionView
|| __DATA.__objc_data _OBJC_CLASS_$__SBUIWidgetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBBlackBackdropSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLightPasscodeNumberPadButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockOverlayStyleProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_SBLockOverlayStylePropertiesFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SBNumberPadWithDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_SBPasscodeKeyboardAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIHandleDeviceLockSceneAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIHandleDeviceLockSceneActionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIHardwareButtonEventSceneAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIHardwareButtonEventSceneActionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIHomeScreenSilhouetteViewBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallDestroySceneAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallRequestPresentationModeAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallSceneClientSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallSceneClientSettingsDiffInspector
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallSceneSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallSceneSettingsDiffInspector
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallSceneSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallSceneTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallShowNoticeForSystemControlsAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallWindowScene
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallWindowSceneBSActionsHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallWindowSceneDeviceLockEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallWindowSceneHardwareButtonEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIInCallWindowSceneSettingsDiffAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUILoginUISceneClientSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUILoginUISceneClientSettingsDiffInspector
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUILoginUISceneSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIMutableInCallSceneClientSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIMutableInCallSceneSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIMutableLoginUISceneClientSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIMutableStarkNotificationsSceneClientSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIMutableStarkNotificationsSceneSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIRemoteAlertItemContentViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIStarkNotificationsSceneClientSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIStarkNotificationsSceneSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIStarkNotificationsSceneSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIStarkNotificationsSceneTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUISystemNotesSceneSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUISystemNotesWindowScene
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUISystemNotesWindowSceneBSActionsHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIWallpaperPreviewViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIWallpaperProgressHUD
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIWallpaperService
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSUIWallpaperServiceInterfaceSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSearchBar
|| __DATA.__objc_data _OBJC_METACLASS_$_SBSimplePasscodeEntryFieldButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIAlphanumericPasscodeEntryField
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIBackgroundContentActionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIBackgroundContentScene
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIBackgroundContentSceneSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIBackgroundContentTouchAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIBannerClientContainerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIBannerSceneClientSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIBannerSourceApplicationSceneSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIBiometricResource
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIDependencyGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIEmergencyCallHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIEmergencyCallServiceViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIExternalPreferences
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIFaceIDCameraGlyphView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIFaceIDCoachingView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIInteractionForwardingView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIKeyboardEnablementManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUILegibilityCache
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUILegibilityContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUILegibilityDefaultEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUILegibilityMetalEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUILegibilitySettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUILegibilityShadowView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUILegibilityView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUILockOverlayView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIMutableBannerSceneClientSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPasscodeBiometricAuthenticationView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPasscodeBiometricResource
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPasscodeLockViewFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPasscodeLockViewInstallTonightLongNumericKeypad
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPasscodeLockViewInstallTonightWithKeyboard
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPasscodeLockViewLongNumericKeypad
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPeriocularController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPhoneUnlockWithWatchController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPopoverExtensionHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPopoverExtensionRemoteViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPoseidonContainerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPoseidonIconView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPowerDownViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPowerDownViewControllerFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPreciseClockTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPresentableButtonEventsAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPresentableHomeAffordanceThresholdAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIPresentableWantsHomeGestureAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIProudLockContainerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIRemoteAlertButtonAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIRemoteAlertButtonActionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIRemoteAlertIdleTimerSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUIShapeView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISizeObservingView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureAlertingAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureAnimationParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureButtonContentProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureCAPackageContentProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureContentProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureCustomContentProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureElementConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureElementPresentationSession
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureElementSourceAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureElementSourceContainerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureElementTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureElementUnassociatedContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureImageContentProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureLayoutGuide
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureSceneAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureSceneResizeAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureSceneSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureStackedContentProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBUISystemApertureTextContentProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWhiteBackdropSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SpringBoardUIServices
|| __DATA.__objc_data _OBJC_METACLASS_$_UIResizableView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBSUICFUserNotificationContentExtensionContext
|| __DATA.__objc_data _OBJC_METACLASS_$__SBSUICFUserNotificationContentExtensionContextHost
|| __DATA.__objc_data _OBJC_METACLASS_$__SBSUICFUserNotificationContentRemoteContainerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SBSUIOrientedImageView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBSUIWallpaperGradientView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUIBiometricKitInterface
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUIBiometricKitInterfaceOperationStateTracker
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUIBiometricMatchingAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUIBiometricOperationAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUILegibilityMetalEngineConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUIPopoverExtensionContext
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUIPresentableDismissalPreventionAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUIPresentableGestureRecognizerPriorityAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUISimulatedLockoutAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUISwitcherPageServiceViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUISystemApertureAlertingAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUISystemApertureAspectFittingImageView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUISystemApertureCAPackageView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUISystemApertureStackView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUIWallpaperInstructionView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBUIWidgetViewController
|| __DATA_CONST.__const _SBBiometricEventMonitorHasAuthenticated
|| __DATA_CONST.__const _SBLaunchImageIngestionInfoKey
|| __DATA_CONST.__const _SBLaunchImageIngestionInfo_cacheGUIDKey
|| __DATA_CONST.__const _SBLaunchImageIngestionInfo_ingestorVersionKey
|| __DATA_CONST.__const _SBLaunchImageIngestionInfo_installInstanceIDKey
|| __DATA_CONST.__const _SBSUIInCallErrorDomain
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceBannerDismissal
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceBannerSwipeToUnfurl
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceBannerTap
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceClientVisibilityPreference
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceDeviceLock
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceDisplayWake
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceFullscreenOverlayDismissal
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceHomeButton
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceInitialPresentation
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceRotation
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceSceneDestroyed
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceSceneResize
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceSceneValidation
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceSwitcherDismissal
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceSystemGesture
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceTestRecipe
|| __DATA_CONST.__const _SBSUIInCallTransitionAnalyticsSourceWindowedAccessoryAttach
|| __DATA_CONST.__const _SBSUISystemNotesWindowSceneConnectionOptionsSceneConnectionSourceKey
|| __DATA_CONST.__const _SBSUIWindowSceneSessionRoleInCall
|| __DATA_CONST.__const _SBSUIWindowSceneSessionRoleSystemNotes
|| __DATA_CONST.__const _SBUIApplicationDragUserActivityUserInfoKeyBundleIdentifier
|| __DATA_CONST.__const _SBUIBackgroundContentSceneSessionRole
|| __DATA_CONST.__const _SBUIDragItemProviderApplicationTypeIdentifier
|| __DATA_CONST.__const _SBUIHardwareKeyboardReturnKeyPressedNotification
|| __DATA_CONST.__const _SBUILegibilityEngineShouldClearCachesNotification
|| __DATA_CONST.__const _SBUIPasscodeLockViewBiometricTransitionToPasscode
|| __DATA_CONST.__const _SBUIPasscodeLockViewBiometricTransitionToPasscodeReasonBioLockout
|| __DATA_CONST.__const _SBUIPasscodeLockViewBiometricTransitionToPasscodeReasonKey
|| __DATA_CONST.__const _SBUIPasscodeLockViewBiometricTransitionToPasscodeReasonMatchFailure
|| __DATA_CONST.__const _SBUIPasscodeLockViewBiometricTransitionToPasscodeReasonTimerExpired
|| __DATA_CONST.__const _SBUIPasscodeLockViewBiometricTransitionToPasscodeReasonUserRequested
|| __DATA_CONST.__const _SBUIRemoteAlertActivationReasonActivatingForUILock
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierAirDrop
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierCall
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierFocus
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierHotspot
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierLiveActivity
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierLiveListen
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierLock
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierNowPlaying
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierScreenMirroring
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierScreenRecording
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierStewie
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierTimer
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierTurnByTurn
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierUnknown
|| __DATA_CONST.__const _SBUISystemApertureElementIdentifierVoiceMemos
|| __DATA_CONST.__const _SBUISystemApertureElementSourceDidConnectNotification
|| __DATA_CONST.__const _SBUIWidgetIdiomNotificationCenterKey
|| __DATA_CONST.__const _SBUIWidgetIdiomNotificationCenterTodayKey
|| __DATA_CONST.__const _SBUIWidgetViewControllersKey
|| __DATA_CONST.__const _kSBUIBannerDismissalPreventionContextUserInfoWantsContextKey
|| __DATA_CONST.__const _kSBUIPasscodeEntryFieldForceOffCenterAnimationKey
|| __DATA_CONST.__const _kSBUIPasscodeEntryFieldShakeAnimationKey
|| __DATA_CONST.__const _kSBUIPresentableHandlesButtonEventsUserInfoKey
|| __DATA_CONST.__const _kSBUIPresentableShouldBypassScreenSharingUserInfoKey
|| __DATA_CONST.__const _kSBUIPresentableSystemApertureSupportingUserInfoKey
|| __DATA_CONST.__const _kSBUIPresentableWantsDismissalPreventionContextUserInfoKey
|| __DATA_CONST.__const _kSBUIPresentableWantsGestureRecognizerPriorityContextUserInfoKey
|| __DATA_CONST.__const _kSBUIPresentableWantsHomeGestureContextUserInfoKey
|| __DATA_CONST.__const _kSBUISystemApertureCustomControlsContentLayoutGuideIdentifier
|| __DATA_CONST.__const _kSBUISystemApertureElementSourceKey
|| __DATA_CONST.__const _kSBUISystemApertureLeadingAreaLayoutGuideIdentifier
|| __DATA_CONST.__const _kSBUISystemApertureLeadingConcentricContentLayoutGuideIdentifier
|| __DATA_CONST.__const _kSBUISystemApertureLegibleContentLayoutMarginsGuideIdentifier
|| __DATA_CONST.__const _kSBUISystemApertureMaximumContentSizeLayoutMarginsGuideIdentifier
|| __DATA_CONST.__const _kSBUISystemApertureMinimalAreaLayoutGuideIdentifier
|| __DATA_CONST.__const _kSBUISystemApertureMinimumContentSizeLayoutMarginsGuideIdentifier
|| __DATA_CONST.__const _kSBUISystemApertureObstructedAreaLayoutGuideIdentifier
|| __DATA_CONST.__const _kSBUISystemApertureSceneSessionRole
|| __DATA_CONST.__const _kSBUISystemApertureTrailingAreaLayoutGuideIdentifier
|| __DATA_CONST.__const _kSBUISystemApertureTrailingConcentricContentLayoutGuideIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBEmptyButtonView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBInteractionPassThroughView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBPasscodeNumberPadButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSUIWallpaperButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBSUIWallpaperPreviewView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIAppleLogoView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUICallToActionLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUILegibilityLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUILongNumericPasscodeEntryField
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUINumericPasscodeEntryFieldBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIPasscodeEntryField
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIPasscodeLockNumberPad
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIPasscodeLockViewBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIPasscodeLockViewSimpleFixedDigitKeypad
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIPasscodeLockViewWithKeyboard
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIPasscodeLockViewWithKeypad
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIPasscodePillButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIPasscodeTextField
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIPowerDownView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIProudLockIconView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIRemoteAlertServiceViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIRingViewLabelButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUISimpleFixedDigitPasscodeEntryField
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUISpotlightBarNavigationController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUISystemApertureElementSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUISystemApertureSecureWindow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBUIVibrantButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBEmptyButtonView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBInteractionPassThroughView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBPasscodeNumberPadButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSUIWallpaperButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBSUIWallpaperPreviewView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIAppleLogoView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUICallToActionLabel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUILegibilityLabel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUILongNumericPasscodeEntryField
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUINumericPasscodeEntryFieldBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIPasscodeEntryField
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIPasscodeLockNumberPad
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIPasscodeLockViewBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIPasscodeLockViewSimpleFixedDigitKeypad
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIPasscodeLockViewWithKeyboard
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIPasscodeLockViewWithKeypad
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIPasscodePillButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIPasscodeTextField
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIPowerDownView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIProudLockIconView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIRemoteAlertServiceViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIRingViewLabelButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUISimpleFixedDigitPasscodeEntryField
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUISpotlightBarNavigationController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUISystemApertureElementSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUISystemApertureSecureWindow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBUIVibrantButton
|| __TEXT.__const _SBUIModernLegibilityStrengthHigh
|| __TEXT.__const _SBUIModernLegibilityStrengthLow
|| __TEXT.__const _SBUIModernLegibilityStrengthMedium
|| __TEXT.__const _SBUIModernLegibilityStrengthNone
|| __TEXT.__text _CAFilterForSBUILegibilityShadowCompositingFilter
|| __TEXT.__text _DebugStringForSBUIFaceIDCoachingCondition
|| __TEXT.__text _NSDictionaryFromSBUILegibilityShadowSettings
|| __TEXT.__text _NSStringCoachingTextForSBUIProudLockIconViewState
|| __TEXT.__text _NSStringForSBUIProudLockIconViewState
|| __TEXT.__text _NSStringFromBiometricKitStatus
|| __TEXT.__text _NSStringFromMTLPixelFormat
|| __TEXT.__text _NSStringFromSBUIBiometricEvent
|| __TEXT.__text _NSStringFromSBUIBiometricLockoutState
|| __TEXT.__text _NSStringFromSBUIBiometricMatchMode
|| __TEXT.__text _NSStringFromSBUIPasscodeLockViewState
|| __TEXT.__text _SBFloatCeilForScale
|| __TEXT.__text _SBFloatEqualsFloat
|| __TEXT.__text _SBFloatFloorForScale
|| __TEXT.__text _SBFloatGreaterThanFloat
|| __TEXT.__text _SBFloatRoundForMainScreenScale
|| __TEXT.__text _SBFloatRoundForScale
|| __TEXT.__text _SBLayoutDefaultSideLayoutElementWidth
|| __TEXT.__text _SBLayoutSupportsSideLayoutRole
|| __TEXT.__text _SBLockOverlayStyleIsOpaque
|| __TEXT.__text _SBLogLegibility
|| __TEXT.__text _SBLogUIRemoteVC
|| __TEXT.__text _SBOffsetPointInReferenceSpaceAlongSceneSpaceDirectionForOrientation
|| __TEXT.__text _SBPhoneOnPadFallbackLaunchSize
|| __TEXT.__text _SBPointEqualToPointAtScale
|| __TEXT.__text _SBPointEqualsPoint
|| __TEXT.__text _SBPointRoundForMainScreenScale
|| __TEXT.__text _SBPointRoundForScale
|| __TEXT.__text _SBRectContainsPoint
|| __TEXT.__text _SBRectContainsPointIncludingEdges
|| __TEXT.__text _SBRectCornerRadiiForRadius
|| __TEXT.__text _SBRectEqualsRect
|| __TEXT.__text _SBRectRoundForMainScreenScale
|| __TEXT.__text _SBRectRoundForScale
|| __TEXT.__text _SBRectWithSize
|| __TEXT.__text _SBSAcquireWallpaperAnimationSuspensionAssertion
|| __TEXT.__text _SBSUIDeviceLockSourceTypeDescription
|| __TEXT.__text _SBSUIHardwareButtonEventTypeDescription
|| __TEXT.__text _SBSUIHardwareButtonEventTypeIsValid
|| __TEXT.__text _SBSUIHardwareButtonEventTypeMaskDescription
|| __TEXT.__text _SBSUIIdleTimerModeDescription
|| __TEXT.__text _SBSUIInCallWindowSceneSessionDestructionReasonDescription
|| __TEXT.__text _SBSUIMagicWallpaperSetWithOptions
|| __TEXT.__text _SBSUIRotationModeDescription
|| __TEXT.__text _SBSUIStarkNotificationsSuspensionReasonsDescription
|| __TEXT.__text _SBSUITriggerPosterSignificantEvent
|| __TEXT.__text _SBSUIWallpaperClearVideo
|| __TEXT.__text _SBSUIWallpaperGetCurrentHomeScreenImage
|| __TEXT.__text _SBSUIWallpaperGetCurrentLockScreenImage
|| __TEXT.__text _SBSUIWallpaperGetHomeScreenOverlayWithDarkForegroundColor
|| __TEXT.__text _SBSUIWallpaperGetHomeScreenOverlayWithLightForegroundColor
|| __TEXT.__text _SBSUIWallpaperGetHomeScreenPreviewWithImage
|| __TEXT.__text _SBSUIWallpaperGetLegibilitySettings
|| __TEXT.__text _SBSUIWallpaperGetLockScreenOverlayWithDarkForegroundColor
|| __TEXT.__text _SBSUIWallpaperGetLockScreenOverlayWithLightForegroundColor
|| __TEXT.__text _SBSUIWallpaperGetLockScreenPreviewWithImage
|| __TEXT.__text _SBSUIWallpaperGetOptions
|| __TEXT.__text _SBSUIWallpaperGetOverlay
|| __TEXT.__text _SBSUIWallpaperGetPreview
|| __TEXT.__text _SBSUIWallpaperGetPreviewWithImage
|| __TEXT.__text _SBSUIWallpaperGetPreviewWithImageUsingData
|| __TEXT.__text _SBSUIWallpaperModeDescription
|| __TEXT.__text _SBSUIWallpaperRestoreDefault
|| __TEXT.__text _SBSUIWallpaperSetColor
|| __TEXT.__text _SBSUIWallpaperSetColorName
|| __TEXT.__text _SBSUIWallpaperSetGradient
|| __TEXT.__text _SBSUIWallpaperSetImage
|| __TEXT.__text _SBSUIWallpaperSetImageArchive
|| __TEXT.__text _SBSUIWallpaperSetImageArchiveWithWallpaperMode
|| __TEXT.__text _SBSUIWallpaperSetImageAsWallpaperForLocations
|| __TEXT.__text _SBSUIWallpaperSetImageSurface
|| __TEXT.__text _SBSUIWallpaperSetImageSurfaceWithWallpaperMode
|| __TEXT.__text _SBSUIWallpaperSetImages
|| __TEXT.__text _SBSUIWallpaperSetImagesAndVideos
|| __TEXT.__text _SBSUIWallpaperSetImagesArchive
|| __TEXT.__text _SBSUIWallpaperSetImagesSurface
|| __TEXT.__text _SBSUIWallpaperSetOptionsForLocations
|| __TEXT.__text _SBSUIWallpaperSetVariant
|| __TEXT.__text _SBSUIWallpaperSetVideo
|| __TEXT.__text _SBSUIWallpaperSetVideoWithWallpaperMode
|| __TEXT.__text _SBSizeEqualsSize
|| __TEXT.__text _SBSizeGreaterThanOrEqualToSize
|| __TEXT.__text _SBSizeLessThanSize
|| __TEXT.__text _SBStringFromRectCornerRadii
|| __TEXT.__text _SBTransformFromOrientationToOrientation
|| __TEXT.__text _SBTransformedRectWithScale
|| __TEXT.__text _SBTransformedSizeWithScale
|| __TEXT.__text _SBUIBiometricEventIsProvidingFeedback
|| __TEXT.__text _SBUIBitsPerComponentForMTLPixelFormat
|| __TEXT.__text _SBUIBytesPerPixelForMetalPixelFormat
|| __TEXT.__text _SBUICeilingCapHeightForCoachingTextForUIContentSizeCategory
|| __TEXT.__text _SBUICoachingTextForSBUIFaceIDCoachingCondition
|| __TEXT.__text _SBUIColorSpaceFromPixelFormat
|| __TEXT.__text _SBUICommonInitialize
|| __TEXT.__text _SBUICurrentPasscodeStyleForUser
|| __TEXT.__text _SBUICurrentPreferredFontForCoachingText
|| __TEXT.__text _SBUIFaceIDCoachingConditionForBiometricEvent
|| __TEXT.__text _SBUIFaceIDCoachingConditionForSBUIProudLockIconViewState
|| __TEXT.__text _SBUIFaceIDCoachingConditionShouldBeVisible
|| __TEXT.__text _SBUIFloatFloorForMainScreenScale
|| __TEXT.__text _SBUIFloatFloorForScale
|| __TEXT.__text _SBUIGraphicsQuality
|| __TEXT.__text _SBUIIsSystemApertureEnabled
|| __TEXT.__text _SBUILegibilityImageSizeForContentSizeAndSettings
|| __TEXT.__text _SBUILegibilityImageSizeForContentSizeAndStyle
|| __TEXT.__text _SBUILegibilitySettingsAreEqual
|| __TEXT.__text _SBUILegibilityShadowCompositingFilterForCAFilterName
|| __TEXT.__text _SBUILegibilityShadowSettingsFromDictionary
|| __TEXT.__text _SBUILegibilityShadowSettingsHash
|| __TEXT.__text _SBUIMetalPixelFormatForCGImage
|| __TEXT.__text _SBUIPasscodeLockViewTransitionContextMake
|| __TEXT.__text _SBUIPasscodeScreenShouldNotWrapSubtitle
|| __TEXT.__text _SBUIProudLockContainerViewControllerConfigurationDefault
|| __TEXT.__text _SBUIProudLockContainerViewControllerConfigurationEqualToConfiguration
|| __TEXT.__text _SBUIProudLockIconViewStateForSBUIFaceIDCoachingCondition
|| __TEXT.__text _SBUIProudLockIconViewStateIsCameraCovered
|| __TEXT.__text _SBUIProudLockIconViewStateIsCoaching
|| __TEXT.__text _SBUIProudLockIconViewStateIsUpsideDown
|| __TEXT.__text _SBUIProudLockIconViewStateShowsCoachingText
|| __TEXT.__text _SBUIRemoteAlertServiceButtonEventDescription
|| __TEXT.__text _SBUIScaledFontSizeWithMaxSizeCategory
|| __TEXT.__text _SBUIStringForPhoneUnlockWithWatchErrorCode
|| __TEXT.__text _SBUIStringFromPresentableButtonEvent
|| __TEXT.__text _SBUISystemApertureCommandDescription
|| __TEXT.__text _SBUISystemApertureContentRoleDescription
|| __TEXT.__text _SBUISystemApertureControlEdgeSpacing
|| __TEXT.__text _SBUISystemApertureCustomLayoutDescription
|| __TEXT.__text _SBUISystemApertureDefaultContentSizeCategory
|| __TEXT.__text _SBUISystemApertureHorizontalItemSpacing
|| __TEXT.__text _SBUISystemApertureInterItemSpacing
|| __TEXT.__text _SBUISystemApertureLayoutModeDescription
|| __TEXT.__text _SBUISystemApertureMaximumContentSizeCategory
|| __TEXT.__text _SBUISystemApertureMinimumMicroNoticeHorizontalPaddingFromWindow
|| __TEXT.__text _SBUISystemAperturePresentationBehaviorsDescription
|| __TEXT.__text _SBUISystemApertureVerticalItemSpacing
|| __TEXT.__text _SBUIUIFontForCoachingTextForContentSizeCategory
|| __TEXT.__text _SBUIUnlockSourceShowsScanningState
|| __TEXT.__text _SBUIWindowForViewControllerTransition
|| __TEXT.__text _SBUI_LegibilitySettingsShadowHasSameShapeAsLegibilitySettings
|| __TEXT.__text _SBUI_LegibilityShadowSettingsAreEqual
|| __TEXT.__text _SBUnintegralizedRectCenteredAboutPoint
|| __TEXT.__text _UIContentSizeCategoryClip
|| __TEXT.__text _UIContentSizeCategoryIsEqualToCategory
|| __TEXT.__text _UIContentSizeCategoryIsInRange
|| __TEXT.__text _UIContentSizeCategoryOneSmallerThanSizeCategory
|| __TEXT.__text _UIImageBytesNeeded
|| __TEXT.__text _UIImageCreateFromMTLPixelFormat
|| __TEXT.__text __MTLPixeLFormatIsSingleComponent
|| __TEXT.__text __SBMainScreenScale
|| __TEXT.__text __SBSUIWallpaperSetImageWithoutCheckingMC
|| __TEXT.__text __SBSUIWallpaperSetImagesWithoutCheckingMC
|| __TEXT.__text __SBUIAXAwareLocalizedStringForKey
|| __TEXT.__text __SBUIColorInterpolatedColor
|| __TEXT.__text __SBUIInterpolatedLegibilitySettings
|| __TEXT.__text __SBUIPasscodeLocalizeStringForMesaOrPearlKey
|| __TEXT.__text __SBUIWidgetBundlePaths
|| __TEXT.__text __SBUI_Private_PeriocularPoseOutOfRangeCoachingEnabled
|| __TEXT.__text __enhanceContrastChanged
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ Accelerate: _vImageTentConvolve_ARGB8888
__ Accelerate: _vImageTentConvolve_Planar8
__ AppSupport: _OBJC_CLASS_$_CPMemoryPool
__ BackBoardServices: _BKSDisplayBrightnessGetCurrent
__ BackBoardServices: _BKSHIDEventGetBaseAttributes
__ BannerKit: _OBJC_CLASS_$_BNBannerClientContainerViewController
__ BannerKit: _OBJC_CLASS_$_BNBannerSourceApplicationSceneSpecification
__ BannerKit: _OBJC_CLASS_$_BNMutableSceneClientSettings
__ BannerKit: _OBJC_CLASS_$_BNSceneClientSettings
__ BannerKit: _OBJC_METACLASS_$_BNBannerClientContainerViewController
__ BannerKit: _OBJC_METACLASS_$_BNBannerSourceApplicationSceneSpecification
__ BannerKit: _OBJC_METACLASS_$_BNMutableSceneClientSettings
__ BannerKit: _OBJC_METACLASS_$_BNSceneClientSettings
__ BannerKit: _UIViewControllerFromPresentable
__ BaseBoard: _BSActionErrorDomain
__ BaseBoard: _BSCompareFloats
__ BaseBoard: _BSCompareIntegers
__ BaseBoard: _BSDispatchMain
__ BaseBoard: _BSDispatchQueueAssertMain
__ BaseBoard: _BSDispatchQueueCreate
__ BaseBoard: _BSEqualObjects
__ BaseBoard: _BSEqualSets
__ BaseBoard: _BSEqualStrings
__ BaseBoard: _BSFloatEqualToFloat
__ BaseBoard: _BSFloatGreaterThanFloat
__ BaseBoard: _BSFloatIsOne
__ BaseBoard: _BSFloatLessThanFloat
__ BaseBoard: _BSFloatRoundForScale
__ BaseBoard: _BSIntervalValueForFraction
__ BaseBoard: _BSMachSendRightRelease
__ BaseBoard: _BSRectWithSize
__ BaseBoard: _BSSettingFlagDescription
__ BaseBoard: _BSSettingFlagForBool
__ BaseBoard: _BSSizeEqualToSize
__ BaseBoard: _BSSizeLessThanSize
__ BaseBoard: _BSSizeRoundForScale
__ BaseBoard: _BSStringFromBOOL
__ BaseBoard: _BSTimeUntilNextClockMinute
__ BaseBoard: _OBJC_CLASS_$_BSAction
__ BaseBoard: _OBJC_CLASS_$_BSActionResponder
__ BaseBoard: _OBJC_CLASS_$_BSActionResponse
__ BaseBoard: _OBJC_CLASS_$_BSAnimationSettings
__ BaseBoard: _OBJC_CLASS_$_BSColor
__ BaseBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ BaseBoard: _OBJC_CLASS_$_BSDispatchQueueAttributes
__ BaseBoard: _OBJC_CLASS_$_BSMachPortReceiveRight
__ BaseBoard: _OBJC_CLASS_$_BSMutableSettings
__ BaseBoard: _OBJC_CLASS_$_BSMutableSpringAnimationSettings
__ BaseBoard: _OBJC_CLASS_$_BSObjCProtocol
__ BaseBoard: _OBJC_CLASS_$_BSPlatform
__ BaseBoard: _OBJC_CLASS_$_BSSettings
__ BaseBoard: _OBJC_CLASS_$_BSSimpleAssertion
__ BaseBoard: _OBJC_METACLASS_$_BSAction
__ BaseBoard: _OBJC_METACLASS_$_BSActionResponse
__ BaseBoard: _OBJC_METACLASS_$_BSSimpleAssertion
__ BaseBoard: __BSSafeCast
__ BaseBoard: __bs_set_crash_log_message
__ BaseBoardUI: _OBJC_CLASS_$_BSUIAnimationFactory
__ BaseBoardUI: _OBJC_CLASS_$_BSUICAPackageView
__ BaseBoardUI: _OBJC_CLASS_$_BSUIFontProvider
__ BaseBoardUI: _OBJC_METACLASS_$_BSUICAPackageView
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGBitmapAllocateData
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetBytesPerRow
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGBitmapContextGetHeight
__ CoreGraphics: _CGBitmapContextGetWidth
__ CoreGraphics: _CGBitmapFreeData
__ CoreGraphics: _CGBitmapGetAlignedBytesPerRow
__ CoreGraphics: _CGColorEqualToColor
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceGetType
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextGetCTM
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBaseCTM
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGImageBlockSetRelease
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetProperty
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageMaskCreate
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectDivide
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreGraphics: _kCGImagePropertyIOSurface
__ Foundation: _NSClassFromString
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSExtensionItem
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ Foundation: __NSDictionaryOfVariableBindings
__ FrontBoardServices: _OBJC_CLASS_$_BSServiceConnection
__ FrontBoardServices: _OBJC_CLASS_$_BSServiceConnectionEndpoint
__ FrontBoardServices: _OBJC_CLASS_$_BSServiceInterface
__ FrontBoardServices: _OBJC_CLASS_$_BSServiceQuality
__ FrontBoardServices: _OBJC_CLASS_$_FBSSceneClientSettings
__ FrontBoardServices: _OBJC_CLASS_$_FBSSceneSettings
__ FrontBoardServices: _OBJC_CLASS_$_FBSSceneSettingsDiffInspector
__ FrontBoardServices: _OBJC_METACLASS_$_FBSSceneSettingsDiffInspector
__ IOKit: _IOAllowPowerChange
__ IOKit: _IODeregisterForSystemPower
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IORegisterForSystemPower
__ IOKit: _IOServiceClose
__ IOSurface: _IOSurfaceCreateMachPort
__ IOSurface: _IOSurfaceCreateXPCObject
__ IOSurface: _IOSurfaceLookupFromMachPort
__ IOSurface: _IOSurfaceSetOwnership
__ IOSurface: _OBJC_CLASS_$_IOSurface
__ Intents: _OBJC_CLASS_$_INIntent
__ ManagedConfiguration: _MCEffectiveSettingsChangedNotification
__ ManagedConfiguration: _MCUnlockScreenTypeDidChangeNotification
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ Metal: _MTLCreateSystemDefaultDevice
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ MetalKit: _OBJC_CLASS_$_MTKTextureLoader
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageGaussianBlur
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageTent
__ PaperBoardUI: _OBJC_CLASS_$_PBUIBokehWallpaperView
__ PaperBoardUI: _OBJC_CLASS_$_PBUIColorWallpaperView
__ PaperBoardUI: _OBJC_CLASS_$_PBUIIrisWallpaperView
__ PaperBoardUI: _OBJC_CLASS_$_PBUIScrollableIrisWallpaperView
__ PaperBoardUI: _OBJC_CLASS_$_PBUIScrollableStaticWallpaperView
__ PaperBoardUI: _OBJC_CLASS_$_PBUIStaticWallpaperView
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperConfiguration
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperConfigurationManager
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperDefaultsDomain
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperImage
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperOptions
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperView
__ PaperBoardUI: _PBUICurrentParallaxDeviceType
__ PaperBoardUI: _PBUIMagicWallpaperOptionsDictionary
__ PaperBoardUI: _PBUIStringForWallpaperLocations
__ PaperBoardUI: _PBUIStringForWallpaperMode
__ PaperBoardUI: _PBUIStringForWallpaperType
__ PaperBoardUI: _PBUIStringForWallpaperVariant
__ PaperBoardUI: _kPBUIMagicWallpaperIdentifierKey
__ PaperBoardUI: _kPBUIMagicWallpaperPresetOptionsBokehVariantKey
__ PaperBoardUI: _kPBUIMagicWallpaperPresetOptionsKey
__ ProgressUI: _OBJC_CLASS_$_PUIProgressWindow
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CAFrameRateRangeIsEqualToRange
__ QuartzCore: _CAFrameRateRangeMake
__ QuartzCore: _CALayerGetContext
__ QuartzCore: _CALayerGetRenderId
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DIsIdentity
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABackdropLayer
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMatchMoveAnimation
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCAAnimationRelative
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFillModeBackwards
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCAFillRuleNonZero
__ QuartzCore: _kCAFilterColorSaturate
__ QuartzCore: _kCAFilterDarkenSourceOver
__ QuartzCore: _kCAFilterGaussianBlur
__ QuartzCore: _kCAFilterLightenSourceOver
__ QuartzCore: _kCAFilterMultiplyColor
__ QuartzCore: _kCAFilterNormalBlendMode
__ QuartzCore: _kCAFilterPlusL
__ QuartzCore: _kCAGradientLayerRadial
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ RunningBoardServices: _OBJC_CLASS_$_RBSDomainAttribute
__ SPOwner: _OBJC_CLASS_$_SPBeaconManager
__ Sharing: _OBJC_CLASS_$_SFAutoUnlockManager
__ SoftLinking: __sl_dlopen
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFDashBoardViewMetrics
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFFluidBehaviorSettings
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFLockScreenMetrics
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFMagnifyMode
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFMobileKeyBag
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFTouchPassThroughView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFWallpaperCoreAnalyticsLogger
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFWallpaperOptions
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFTouchPassThroughView
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFView
__ SpringBoardFoundation: _SBFCreateIOSurfaceForImage
__ SpringBoardFoundation: _SBFEffectiveArtworkSubtype
__ SpringBoardFoundation: _SBFEffectiveDeviceClass
__ SpringBoardFoundation: _SBFEffectiveHomeButtonType
__ SpringBoardFoundation: _SBFPreheatImageData
__ SpringBoardFoundation: _SBFStringForWallpaperLocations
__ SpringBoardFoundation: _SBFStringForWallpaperMode
__ SpringBoardFoundation: _SBFStringForWallpaperVariant
__ SpringBoardFoundation: _SBFTransformFromOrientationToOrientation
__ SpringBoardFoundation: _SBFWindowForViewControllerTransition
__ SpringBoardFoundation: __SBFWallpaperRegisterForExternalChangeNotification
__ SpringBoardServices: _OBJC_CLASS_$_SBSAssertion
__ SpringBoardServices: _OBJC_CLASS_$_SBSInCallPresentationRequest
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertActivationContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSSystemApertureSceneCreationRequest
__ SpringBoardServices: _OBJC_CLASS_$_SBSSystemNotesConnectAction
__ SpringBoardServices: _OBJC_CLASS_$_SBSSystemNotesCreateAction
__ SpringBoardServices: _OBJC_CLASS_$_SBSSystemNotesPresentationConfiguration
__ SpringBoardServices: _OBJC_CLASS_$_SBSSystemNotesTakeScreenshotAction
__ SpringBoardServices: _OBJC_CLASS_$_SBSWallpaperService
__ SpringBoardServices: _SBAddWallpaperAnimationSuspensionAssertion
__ SpringBoardServices: _SBClearWallpaperAsset
__ SpringBoardServices: _SBDisplayMetrics
__ SpringBoardServices: _SBGetWallpaperLegibilitySettings
__ SpringBoardServices: _SBGetWallpaperOptions
__ SpringBoardServices: _SBGetWallpaperPreview
__ SpringBoardServices: _SBGetWallpaperPreviewSurface
__ SpringBoardServices: _SBLogBanners
__ SpringBoardServices: _SBLogBiometricResource
__ SpringBoardServices: _SBLogCFUserNotifications
__ SpringBoardServices: _SBLogCommon
__ SpringBoardServices: _SBLogDashBoard
__ SpringBoardServices: _SBLogDashBoardCallToActionLabel
__ SpringBoardServices: _SBLogInCallPresentation
__ SpringBoardServices: _SBLogLockScreenBiometricFaceIDCoaching
__ SpringBoardServices: _SBLogPhoneUnlockWithWatch
__ SpringBoardServices: _SBLogSystemApertureHosting
__ SpringBoardServices: _SBLogSystemNotes
__ SpringBoardServices: _SBLogWallpaper
__ SpringBoardServices: _SBLoggingSubsystem
__ SpringBoardServices: _SBSEnableJindo
__ SpringBoardServices: _SBSInCallPresentationModeDescription
__ SpringBoardServices: _SBSIsSystemApertureAvailable
__ SpringBoardServices: _SBSSpringBoardServerPort
__ SpringBoardServices: _SBSetProceduralWallpaper
__ SpringBoardServices: _SBSetWallpaperImageForLocations
__ SpringBoardServices: _SBSetWallpaperImageSurfaceForLocations
__ SpringBoardServices: _SBSetWallpaperOptionsForLocations
__ SpringBoardServices: _SBSetWallpaperVariant
__ SpringBoardServices: ___sb__mainScreenReferenceBounds
__ SpringBoardServices: ___sb__runningInSpringBoard
__ TelephonyUI: _OBJC_CLASS_$_TPNumberPad
__ TelephonyUI: _OBJC_CLASS_$_TPNumberPadDarkStyleButton
__ TelephonyUI: _OBJC_CLASS_$_TPNumberPadLightStyleButton
__ TelephonyUI: _OBJC_CLASS_$_TPRevealingRingView
__ TelephonyUI: _OBJC_METACLASS_$_TPNumberPad
__ TelephonyUI: _OBJC_METACLASS_$_TPNumberPadDarkStyleButton
__ TelephonyUI: _OBJC_METACLASS_$_TPNumberPadLightStyleButton
__ UIKit: _NSDirectionalEdgeInsetsZero
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _OBJC_CLASS_$_NSStringDrawingContext
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIActivityContinuationAction
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneClientSettings
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneClientSettingsDiffInspector
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneSettings
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneSpecification
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneTransitionContext
__ UIKit: _OBJC_CLASS_$_UIApplicationStarkSceneSpecification
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIButtonConfiguration
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIKeyboard
__ UIKit: _OBJC_CLASS_$_UIKeyboardImpl
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UIMorphingLabel
__ UIKit: _OBJC_CLASS_$_UIMutableApplicationSceneClientSettings
__ UIKit: _OBJC_CLASS_$_UIMutableApplicationSceneSettings
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UINotificationFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UIPeripheralHost
__ UIKit: _OBJC_CLASS_$_UIPointerInteraction
__ UIKit: _OBJC_CLASS_$_UIPointerLiftEffect
__ UIKit: _OBJC_CLASS_$_UIPointerRegion
__ UIKit: _OBJC_CLASS_$_UIPointerShape
__ UIKit: _OBJC_CLASS_$_UIPointerStyle
__ UIKit: _OBJC_CLASS_$_UIScene
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$_UIWindowScene
__ UIKit: _OBJC_CLASS_$__UIActionSlider
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UIBackdropViewSettings
__ UIKit: _OBJC_CLASS_$__UIKeyboardAnimator
__ UIKit: _OBJC_CLASS_$__UIKeyboardFeedbackGenerator
__ UIKit: _OBJC_CLASS_$__UILegibilityLabel
__ UIKit: _OBJC_CLASS_$__UILegibilitySettings
__ UIKit: _OBJC_CLASS_$__UILegibilitySettingsProvider
__ UIKit: _OBJC_CLASS_$__UILegibilityView
__ UIKit: _OBJC_CLASS_$__UINotificationFeedbackGeneratorConfiguration
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_CLASS_$__UISceneConnectionOptionsContext
__ UIKit: _OBJC_CLASS_$__UIViewControllerTransitionContext
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneClientSettings
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneClientSettingsDiffInspector
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneSettings
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneSpecification
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneTransitionContext
__ UIKit: _OBJC_METACLASS_$_UIApplicationStarkSceneSpecification
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UILayoutGuide
__ UIKit: _OBJC_METACLASS_$_UIMutableApplicationSceneClientSettings
__ UIKit: _OBJC_METACLASS_$_UIMutableApplicationSceneSettings
__ UIKit: _OBJC_METACLASS_$_UINavigationBar
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIStackView
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$_UIWindowScene
__ UIKit: _OBJC_METACLASS_$__UIBackdropViewSettings
__ UIKit: _OBJC_METACLASS_$__UIKeyboardAnimator
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityReduceTransparencyStatusDidChangeNotification
__ UIKit: _UIApp
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UIContentSizeCategoryUnspecified
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFloorToScale
__ UIKit: _UIFloorToViewScale
__ UIKit: _UIFontDescriptorSystemDesignDefault
__ UIKit: _UIFontDescriptorSystemDesignRounded
__ UIKit: _UIFontDescriptorTraitsAttribute
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleHeadline2
__ UIKit: _UIFontTextStyleSubhead
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightHeavy
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIFontWeightTrait
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsPopContext
__ UIKit: _UIGraphicsPushContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIKeyboardDidHideNotification
__ UIKit: _UIKeyboardDisableAutomaticAppearance
__ UIKit: _UIKeyboardEnableAutomaticAppearance
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardWillChangeFrameNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UIPointRoundToViewScale
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectCenteredIntegralRectScale
__ UIKit: _UIRectCenteredRect
__ UIKit: _UIRectCenteredXInRect
__ UIKit: _UIRectCenteredXInRectScale
__ UIKit: _UIRectCenteredYInRectScale
__ UIKit: _UIRectFill
__ UIKit: _UIRectGetCenter
__ UIKit: _UIRectInset
__ UIKit: _UIRoundToScale
__ UIKit: _UIRoundToScreenScale
__ UIKit: _UIScreenBrightnessDidChangeNotification
__ UIKit: _UISizeRoundToViewScale
__ UIKit: _UISystemRootDirectory
__ UIKit: __UIAdaptLocalizedStringForView
__ UIKit: __UILegibilityStrengthAutomatic
__ UIKit: __UILegibilityStrengthMedium
__ UIKit: __UISceneSettingsDiffActionPerformChangesWithTransitionContext
__ libAccessibility.dylib: __AXSPearlAuthenticationHapticsEnabled
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: _APP_SANDBOX_READ
__ libSystem.B.dylib: _SANDBOX_EXTENSION_DEFAULT
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc_default_zone
__ libSystem.B.dylib: _malloc_zone_free
__ libSystem.B.dylib: _malloc_zone_memalign
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _vm_deallocate
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x5
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x11
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SBUIPasscodeBiometricAuthenticationView : SBUIInteractionForwardingView
 @property  NSString *touchIDReason
 @property  NSString *faceIDReason
 @property  NSString *faceIDReasonLine2
 @property  SBUIButton *touchIDUsePasscodeButton
 @property  SBUIPasscodePillButton *faceIDUsePasscodeButton
 @property  PKGlyphView *touchIDGlyphView
 @property  SBUIButton *emergencyCallButton
 @property  SBUIButton *cancelButton
 @property  UIButton *backgroundCancelButton
 @property  UIButton *invisibleUsePasscodeButton
 @property  UILabel *touchIDReasonLabel
 @property  UILabel *faceIDLabel
 @property  UILabel *faceIDReasonLabel
 @property  UILayoutGuide *faceIDLabelAndReasonHelperGuide
 @property  UILayoutGuide *faceIDLabelAndReasonLayoutGuide
 @property  UILayoutGuide *touchIDGlyphLayoutGuide
 @property  UILayoutGuide *cancelButtonLayoutGuide
 @property  NSLayoutConstraint *faceIDLabelFaceIDReasonBaselineConstraint
 @property  unsigned long type
 @property  <SBUIPasscodeBiometricAuthenticationViewLayoutDelegate> *layoutDelegate
 @property  <SBUIPasscodeBiometricAuthenticationViewDelegate> *delegate
 @property  NSString *unlockDestination
 @property  BOOL showsEmergencyCallButton
 @property  BOOL showsCancelButton
 @property  BOOL ancillaryButtonsVisible
 @property  BOOL faceIDUsePasscodeButtonVisible

  // instance methods
  -[SBUIPasscodeBiometricAuthenticationView setLayoutDelegate:]
  -[SBUIPasscodeBiometricAuthenticationView layoutDelegate]
  -[SBUIPasscodeBiometricAuthenticationView _updateSubviews]
  -[SBUIPasscodeBiometricAuthenticationView setCancelButton:]
  -[SBUIPasscodeBiometricAuthenticationView setDelegate:]
  -[SBUIPasscodeBiometricAuthenticationView type]
  -[SBUIPasscodeBiometricAuthenticationView delegate]
  -[SBUIPasscodeBiometricAuthenticationView cancelButton]
  -[SBUIPasscodeBiometricAuthenticationView .cxx_destruct]
  -[SBUIPasscodeBiometricAuthenticationView setShowsCancelButton:]
  -[SBUIPasscodeBiometricAuthenticationView layoutSubviews]
  -[SBUIPasscodeBiometricAuthenticationView setType:]
  -[SBUIPasscodeBiometricAuthenticationView _updateConstraints]
  -[SBUIPasscodeBiometricAuthenticationView showsCancelButton]
  -[SBUIPasscodeBiometricAuthenticationView unlockDestination]
  -[SBUIPasscodeBiometricAuthenticationView setUnlockDestination:]
  -[SBUIPasscodeBiometricAuthenticationView _noteContentSizeCategoryDidChange]
  -[SBUIPasscodeBiometricAuthenticationView _cancelButtonHit]
  -[SBUIPasscodeBiometricAuthenticationView _usePasscodeButtonHit]
  -[SBUIPasscodeBiometricAuthenticationView _emergencyCallButtonHit]
  -[SBUIPasscodeBiometricAuthenticationView initWithFrame:layoutDelegate:]
  -[SBUIPasscodeBiometricAuthenticationView _layoutAuthReasonLabel:]
  -[SBUIPasscodeBiometricAuthenticationView _updateReasonTextIfPossible]
  -[SBUIPasscodeBiometricAuthenticationView showsEmergencyCallButton]
  -[SBUIPasscodeBiometricAuthenticationView setShowsEmergencyCallButton:]
  -[SBUIPasscodeBiometricAuthenticationView setAncillaryButtonsVisible:]
  -[SBUIPasscodeBiometricAuthenticationView setAncillaryButtonsVisible:animated:]
  -[SBUIPasscodeBiometricAuthenticationView setFaceIDUsePasscodeButtonVisible:]
  -[SBUIPasscodeBiometricAuthenticationView setGlyphViewState:]
  -[SBUIPasscodeBiometricAuthenticationView setGlyphViewState:animated:completion:]
  -[SBUIPasscodeBiometricAuthenticationView _setTouchIDReason:]
  -[SBUIPasscodeBiometricAuthenticationView _setFaceIDReason:]
  -[SBUIPasscodeBiometricAuthenticationView _setFaceIDReasonLine2:]
  -[SBUIPasscodeBiometricAuthenticationView _leadingForFaceIDReason]
  -[SBUIPasscodeBiometricAuthenticationView ancillaryButtonsVisible]
  -[SBUIPasscodeBiometricAuthenticationView faceIDUsePasscodeButtonVisible]
  -[SBUIPasscodeBiometricAuthenticationView touchIDReason]
  -[SBUIPasscodeBiometricAuthenticationView faceIDReason]
  -[SBUIPasscodeBiometricAuthenticationView faceIDReasonLine2]
  -[SBUIPasscodeBiometricAuthenticationView _setFaceIDReason2:]
  -[SBUIPasscodeBiometricAuthenticationView touchIDUsePasscodeButton]
  -[SBUIPasscodeBiometricAuthenticationView setTouchIDUsePasscodeButton:]
  -[SBUIPasscodeBiometricAuthenticationView faceIDUsePasscodeButton]
  -[SBUIPasscodeBiometricAuthenticationView setFaceIDUsePasscodeButton:]
  -[SBUIPasscodeBiometricAuthenticationView touchIDGlyphView]
  -[SBUIPasscodeBiometricAuthenticationView setTouchIDGlyphView:]
  -[SBUIPasscodeBiometricAuthenticationView emergencyCallButton]
  -[SBUIPasscodeBiometricAuthenticationView setEmergencyCallButton:]
  -[SBUIPasscodeBiometricAuthenticationView backgroundCancelButton]
  -[SBUIPasscodeBiometricAuthenticationView setBackgroundCancelButton:]
  -[SBUIPasscodeBiometricAuthenticationView invisibleUsePasscodeButton]
  -[SBUIPasscodeBiometricAuthenticationView setInvisibleUsePasscodeButton:]
  -[SBUIPasscodeBiometricAuthenticationView touchIDReasonLabel]
  -[SBUIPasscodeBiometricAuthenticationView setTouchIDReasonLabel:]
  -[SBUIPasscodeBiometricAuthenticationView faceIDLabel]
  -[SBUIPasscodeBiometricAuthenticationView setFaceIDLabel:]
  -[SBUIPasscodeBiometricAuthenticationView faceIDReasonLabel]
  -[SBUIPasscodeBiometricAuthenticationView setFaceIDReasonLabel:]
  -[SBUIPasscodeBiometricAuthenticationView faceIDLabelAndReasonHelperGuide]
  -[SBUIPasscodeBiometricAuthenticationView setFaceIDLabelAndReasonHelperGuide:]
  -[SBUIPasscodeBiometricAuthenticationView faceIDLabelAndReasonLayoutGuide]
  -[SBUIPasscodeBiometricAuthenticationView setFaceIDLabelAndReasonLayoutGuide:]
  -[SBUIPasscodeBiometricAuthenticationView touchIDGlyphLayoutGuide]
  -[SBUIPasscodeBiometricAuthenticationView setTouchIDGlyphLayoutGuide:]
  -[SBUIPasscodeBiometricAuthenticationView cancelButtonLayoutGuide]
  -[SBUIPasscodeBiometricAuthenticationView setCancelButtonLayoutGuide:]
  -[SBUIPasscodeBiometricAuthenticationView faceIDLabelFaceIDReasonBaselineConstraint]
  -[SBUIPasscodeBiometricAuthenticationView setFaceIDLabelFaceIDReasonBaselineConstraint:]


SBUISystemApertureContentProvider : NSObject <SBUISystemApertureContentProviding>
 @property  <SBUISystemApertureContentViewProviding> *leadingContentViewProvider
 @property  <SBUISystemApertureContentViewProviding> *trailingContentViewProvider
 @property  <SBUISystemApertureContentViewProviding> *primaryContentViewProvider
 @property  <SBUISystemApertureContentViewProviding> *secondaryContentViewProvider
 @property  <SBUISystemApertureContentViewProviding> *actionContentViewProvider
 @property  <SBUISystemApertureContentViewProviding> *minimalContentViewProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUISystemApertureContentProvider .cxx_destruct]
  -[SBUISystemApertureContentProvider leadingContentViewProvider]
  -[SBUISystemApertureContentProvider trailingContentViewProvider]
  -[SBUISystemApertureContentProvider primaryContentViewProvider]
  -[SBUISystemApertureContentProvider secondaryContentViewProvider]
  -[SBUISystemApertureContentProvider actionContentViewProvider]
  -[SBUISystemApertureContentProvider minimalContentViewProvider]
  -[SBUISystemApertureContentProvider setLeadingContentViewProvider:]
  -[SBUISystemApertureContentProvider setTrailingContentViewProvider:]
  -[SBUISystemApertureContentProvider setPrimaryContentViewProvider:]
  -[SBUISystemApertureContentProvider setSecondaryContentViewProvider:]
  -[SBUISystemApertureContentProvider setActionContentViewProvider:]
  -[SBUISystemApertureContentProvider setMinimalContentViewProvider:]


SBUIPowerDownView : UIView <_UIActionSliderDelegate, SBUIPowerDownViewInterface>
 @property  SPBeaconManager *beaconManager
 @property  BOOL deviceSupportsFindMy
 @property  BOOL shouldPowerDownViewShowFindMyAlert
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SBUIPowerDownViewDelegate> *delegate

  // instance methods
  -[SBUIPowerDownView setBeaconManager:]
  -[SBUIPowerDownView beaconManager]
  -[SBUIPowerDownView setDelegate:]
  -[SBUIPowerDownView delegate]
  -[SBUIPowerDownView dealloc]
  -[SBUIPowerDownView .cxx_destruct]
  -[SBUIPowerDownView layoutSubviews]
  -[SBUIPowerDownView initWithFrame:]
  -[SBUIPowerDownView _idleTimerFired]
  -[SBUIPowerDownView showAnimated:completion:]
  -[SBUIPowerDownView actionSlider:didUpdateSlideWithValue:]
  -[SBUIPowerDownView actionSliderDidCompleteSlide:]
  -[SBUIPowerDownView actionSliderDidCancelSlide:]
  -[SBUIPowerDownView actionSliderDidBeginSlide:]
  -[SBUIPowerDownView initWithFrame:vibrantSettings:]
  -[SBUIPowerDownView _cancelButtonTapped]
  -[SBUIPowerDownView _didTapFindMy]
  -[SBUIPowerDownView hideAnimated:completion:]
  -[SBUIPowerDownView _createFindMyUI]
  -[SBUIPowerDownView createDimmingBackdropViewWithFrame:]
  -[SBUIPowerDownView showHideAnimationDuration]
  -[SBUIPowerDownView _willAnimateIn]
  -[SBUIPowerDownView _willAnimateOut]
  -[SBUIPowerDownView _powerDownSliderDidBeginSlide]
  -[SBUIPowerDownView _powerDownSliderDidUpdateSlideWithValue:]
  -[SBUIPowerDownView _powerDownSliderDidCompleteSlide]
  -[SBUIPowerDownView _powerDownSliderDidCancelSlide]
  -[SBUIPowerDownView _isLandscapeAspectRatio]
  -[SBUIPowerDownView _cancelAutoDismissTimer]
  -[SBUIPowerDownView _resetAutoDismissTimer]
  -[SBUIPowerDownView _updateSliderExclusionPath]
  -[SBUIPowerDownView _notifyDelegatePowerDown]
  -[SBUIPowerDownView _notifyDelegateCancelled]
  -[SBUIPowerDownView didAcknowledgeFindMyInfo]
  -[SBUIPowerDownView didSuppressFindMy]
  -[SBUIPowerDownView _animatePowerDown]
  -[SBUIPowerDownView _createActionSlider]
  -[SBUIPowerDownView _prepareViewsForAlert]
  -[SBUIPowerDownView _readIODeviceSupportsFindMy]
  -[SBUIPowerDownView _readShouldPowerDownViewShowFindMyAlert]
  -[SBUIPowerDownView deviceSupportsFindMy]
  -[SBUIPowerDownView setDeviceSupportsFindMy:]
  -[SBUIPowerDownView shouldPowerDownViewShowFindMyAlert]
  -[SBUIPowerDownView setShouldPowerDownViewShowFindMyAlert:]


SBUISystemApertureTextContentProvider : NSObject <SBUISystemApertureContentViewProviding, SBUISystemApertureContentColorStyling>
 @property  NSString *text
 @property  NSAttributedString *attributedText
 @property  long long textAlignment
 @property  UIView *providedView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIColor *contentColor

  // class methods
  +[SBUISystemApertureTextContentProvider _textColorForTextStyle:]

  // instance methods
  -[SBUISystemApertureTextContentProvider setContentColor:]
  -[SBUISystemApertureTextContentProvider text]
  -[SBUISystemApertureTextContentProvider setTextAlignment:]
  -[SBUISystemApertureTextContentProvider .cxx_destruct]
  -[SBUISystemApertureTextContentProvider setAttributedText:]
  -[SBUISystemApertureTextContentProvider attributedText]
  -[SBUISystemApertureTextContentProvider setFontWeight:]
  -[SBUISystemApertureTextContentProvider textAlignment]
  -[SBUISystemApertureTextContentProvider contentColor]
  -[SBUISystemApertureTextContentProvider setText:]
  -[SBUISystemApertureTextContentProvider providedView]
  -[SBUISystemApertureTextContentProvider initWithText:style:]
  -[SBUISystemApertureTextContentProvider initWithAttributedText:style:]
  -[SBUISystemApertureTextContentProvider _initWithText:attributedText:style:]
  -[SBUISystemApertureTextContentProvider _providedView]


_SBUIBiometricKitInterfaceOperationStateTracker : NSObject
 @property  long long state

  // instance methods
  -[_SBUIBiometricKitInterfaceOperationStateTracker initWithState:]
  -[_SBUIBiometricKitInterfaceOperationStateTracker state]
  -[_SBUIBiometricKitInterfaceOperationStateTracker init]
  -[_SBUIBiometricKitInterfaceOperationStateTracker setState:]


_SBUIBiometricKitInterface : NSObject <BKOperationDelegate, BKMatchOperationDelegate, BKMatchPearlOperationDelegate>
 @property  BOOL touchIDCapable
 @property  BOOL pearlIDCapable
 @property  <_SBUIBiometricKitInterfaceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBUIBiometricKitInterface _sendDelegateEventForFaceWUPoseEligibilityInfo:]
  -[_SBUIBiometricKitInterface matchOperation:failedWithReason:]
  -[_SBUIBiometricKitInterface operation:finishedWithReason:]
  -[_SBUIBiometricKitInterface isTouchIDCapable]
  -[_SBUIBiometricKitInterface isFingerOn]
  -[_SBUIBiometricKitInterface matchOperation:providedFaceWUPoseEligibilityInfo:]
  -[_SBUIBiometricKitInterface _setTracker:forOperation:]
  -[_SBUIBiometricKitInterface setDelegate:]
  -[_SBUIBiometricKitInterface _eventForLockoutState:]
  -[_SBUIBiometricKitInterface delegate]
  -[_SBUIBiometricKitInterface dealloc]
  -[_SBUIBiometricKitInterface .cxx_destruct]
  -[_SBUIBiometricKitInterface _sendDelegateEventForFeedback:]
  -[_SBUIBiometricKitInterface createPearlDevice]
  -[_SBUIBiometricKitInterface _sendDelegateEvent:]
  -[_SBUIBiometricKitInterface createMatchOperationsWithMode:andCredentialSet:error:]
  -[_SBUIBiometricKitInterface matchOperation:providedFaceOcclusionInfo:]
  -[_SBUIBiometricKitInterface createFaceDetectOperationsWithError:]
  -[_SBUIBiometricKitInterface hasEnrolledIdentities]
  -[_SBUIBiometricKitInterface _biometricEventForFaceDetectFeedback:]
  -[_SBUIBiometricKitInterface matchOperation:providedFeedback:]
  -[_SBUIBiometricKitInterface _createPresenceDetectOperationsForDeviceTypes:error:]
  -[_SBUIBiometricKitInterface operation:stateChanged:]
  -[_SBUIBiometricKitInterface _sendDelegateEventForFaceOcclusionInfo:]
  -[_SBUIBiometricKitInterface matchOperation:matchedWithResult:]
  -[_SBUIBiometricKitInterface lockoutState]
  -[_SBUIBiometricKitInterface createPresenceDetectOperationsWithError:]
  -[_SBUIBiometricKitInterface operation:presenceStateChanged:]
  -[_SBUIBiometricKitInterface isPeriocularMatchingEnabled]
  -[_SBUIBiometricKitInterface isPearlIDCapable]
  -[_SBUIBiometricKitInterface createFingerDetectOperationsWithError:]
  -[_SBUIBiometricKitInterface _trackerForOperation:]
  -[_SBUIBiometricKitInterface forceBioLockout]
  -[_SBUIBiometricKitInterface init]
  -[_SBUIBiometricKitInterface enableBackgroundFingerDetection:error:]


SBSUIWallpaperButton : UIButton
  // instance methods
  -[SBSUIWallpaperButton .cxx_destruct]
  -[SBSUIWallpaperButton setHighlighted:]
  -[SBSUIWallpaperButton _commonInit]
  -[SBSUIWallpaperButton initWithFrame:]
  -[SBSUIWallpaperButton init]


SBUIPasscodeLockViewBase : UIView <SBUIBiometricResourceObserver, SBFLegibilitySettingsProviderDelegate, SBUIPasscodeBiometricAuthenticationViewLayoutDelegate, SBUIPasscodeBiometricAuthenticationViewDelegate, SBUIProudLockContainerViewControllerLockStatusProvider, SBUIPoseidonContainerViewControllerLockStatusProvider, SBUIPhoneUnlockWithWatchControllerObserver, SBUIPasscodeLockView_Internal, SBUIPasscodeLockView>
 @property  BOOL shouldResetForFailedPasscodeAttempt
 @property  unsigned long statusState
 @property  NSTimer *screenBrightnessChangedTimer
 @property  UINotificationFeedbackGenerator *authenticationFeedbackBehavior
 @property  BOOL isTransitioning
 @property  {?=qqd} transitionContext
 @property  double luminosityBoost
 @property  SBUIPasscodeEntryField *_entryField
 @property  NSString *statusText
 @property  NSString *statusSubtitleText
 @property  <SBUIBiometricResource> *biometricResource
 @property  int style
 @property  <Staging_UIKBFeedbackGenerating> *keyboardFeedbackBehavior
 @property  UIView *passcodeAuthenticationView
 @property  UIView *biometricAuthenticationView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hasPasscodeSet
 @property  BOOL isBiometricLockedOut
 @property  BOOL hasBiometricAuthenticationCapabilityEnabled
 @property  SBUIProudLockContainerViewController *overrideProudLockContainerViewController
 @property  {?=BBdBddddBBBQ} proudLockConfiguration
 @property  BOOL confirmedNotInPocket
 @property  BOOL canSuggestSwipeToRetry
 @property  <SBUIPasscodeLockViewDelegate> *delegate
 @property  NSString *passcode
 @property  BOOL biometricAuthenticationAllowed
 @property  BOOL playsKeypadSounds
 @property  BOOL showsStatusField
 @property  BOOL showsEmergencyCallButton
 @property  BOOL showsCancelButton
 @property  BOOL usesBiometricPresentation
 @property  BOOL allowsAutomaticBiometricPresentationTransition
 @property  BOOL biometricPresentationAncillaryButtonsVisible
 @property  BOOL showsProudLock
 @property  UIView *poseidonContainerView
 @property  SBUIPoseidonContainerViewController *poseidonContainerViewController
 @property  long long passcodeLockViewState
 @property  UIColor *customBackgroundColor
 @property  <SBFLegibilitySettingsProvider> *backgroundLegibilitySettingsProvider
 @property  BOOL screenOn
 @property  NSString *unlockDestination
 @property  double backgroundAlpha

  // instance methods
  -[SBUIPasscodeLockViewBase _orientation]
  -[SBUIPasscodeLockViewBase hasPasscodeSet]
  -[SBUIPasscodeLockViewBase passcode]
  -[SBUIPasscodeLockViewBase resignFirstResponder]
  -[SBUIPasscodeLockViewBase isScreenOn]
  -[SBUIPasscodeLockViewBase willMoveToSuperview:]
  -[SBUIPasscodeLockViewBase canResignFirstResponder]
  -[SBUIPasscodeLockViewBase becomeFirstResponder]
  -[SBUIPasscodeLockViewBase setDelegate:]
  -[SBUIPasscodeLockViewBase setBackgroundAlpha:]
  -[SBUIPasscodeLockViewBase isBiometricLockedOut]
  -[SBUIPasscodeLockViewBase confirmedNotInPocket]
  -[SBUIPasscodeLockViewBase style]
  -[SBUIPasscodeLockViewBase delegate]
  -[SBUIPasscodeLockViewBase transitionContext]
  -[SBUIPasscodeLockViewBase setTransitionContext:]
  -[SBUIPasscodeLockViewBase dealloc]
  -[SBUIPasscodeLockViewBase reset]
  -[SBUIPasscodeLockViewBase setScreenOn:]
  -[SBUIPasscodeLockViewBase .cxx_destruct]
  -[SBUIPasscodeLockViewBase setConfirmedNotInPocket:]
  -[SBUIPasscodeLockViewBase biometricResource]
  -[SBUIPasscodeLockViewBase backgroundAlpha]
  -[SBUIPasscodeLockViewBase setShowsCancelButton:]
  -[SBUIPasscodeLockViewBase layoutSubviews]
  -[SBUIPasscodeLockViewBase setPoseidonContainerView:]
  -[SBUIPasscodeLockViewBase hasBiometricAuthenticationCapabilityEnabled]
  -[SBUIPasscodeLockViewBase isTransitioning]
  -[SBUIPasscodeLockViewBase biometricResource:observeEvent:]
  -[SBUIPasscodeLockViewBase customBackgroundColor]
  -[SBUIPasscodeLockViewBase setBiometricResource:]
  -[SBUIPasscodeLockViewBase providerLegibilitySettingsChanged:]
  -[SBUIPasscodeLockViewBase showsCancelButton]
  -[SBUIPasscodeLockViewBase canBecomeFirstResponder]
  -[SBUIPasscodeLockViewBase initWithFrame:]
  -[SBUIPasscodeLockViewBase setIsTransitioning:]
  -[SBUIPasscodeLockViewBase poseidonContainerView]
  -[SBUIPasscodeLockViewBase willMoveToWindow:]
  -[SBUIPasscodeLockViewBase setStyle:]
  -[SBUIPasscodeLockViewBase didMoveToWindow]
  -[SBUIPasscodeLockViewBase setCustomBackgroundColor:]
  -[SBUIPasscodeLockViewBase unlockDestination]
  -[SBUIPasscodeLockViewBase setUnlockDestination:]
  -[SBUIPasscodeLockViewBase _statusText]
  -[SBUIPasscodeLockViewBase isBiometricAuthenticationAllowed]
  -[SBUIPasscodeLockViewBase showsEmergencyCallButton]
  -[SBUIPasscodeLockViewBase setShowsEmergencyCallButton:]
  -[SBUIPasscodeLockViewBase _noteScreenBrightnessDidChange]
  -[SBUIPasscodeLockViewBase _advanceToPasscodeTimerFired]
  -[SBUIPasscodeLockViewBase _screenBrightnessReallyDidChange]
  -[SBUIPasscodeLockViewBase biometricResource:matchingEnabledDidChange:]
  -[SBUIPasscodeLockViewBase passcodeBiometricAuthenticationViewSideButtonsOffsetFromCenter:]
  -[SBUIPasscodeLockViewBase passcodeBiometricAuthenticationViewNumberPadAncillaryButtonOffsetFromTopOfScreen:]
  -[SBUIPasscodeLockViewBase passcodeBiometricAuthenticationViewUsePasscodeButtonHit:]
  -[SBUIPasscodeLockViewBase passcodeBiometricAuthenticationViewEmergencyCallButtonHit:]
  -[SBUIPasscodeLockViewBase passcodeBiometricAuthenticationViewCancelButtonHit:]
  -[SBUIPasscodeLockViewBase phoneUnlockWithWatchControllerAttemptSucceeded:]
  -[SBUIPasscodeLockViewBase phoneUnlockWithWatchControllerAttemptFailed:withError:]
  -[SBUIPasscodeLockViewBase resetForFailedPasscode]
  -[SBUIPasscodeLockViewBase resetForSuccess]
  -[SBUIPasscodeLockViewBase resetForScreenOff]
  -[SBUIPasscodeLockViewBase setKeypadVisible:animated:]
  -[SBUIPasscodeLockViewBase setPasscodeLockViewState:animated:]
  -[SBUIPasscodeLockViewBase resetForFailedMesaAttemptWithStatusText:andSubtitle:]
  -[SBUIPasscodeLockViewBase autofillForSuccessfulMesaAttemptWithCompletion:]
  -[SBUIPasscodeLockViewBase updateStatusText:subtitle:animated:]
  -[SBUIPasscodeLockViewBase setAllowsStatusTextUpdatingOnResignFirstResponder:]
  -[SBUIPasscodeLockViewBase becomeActiveWithAnimationSettings:]
  -[SBUIPasscodeLockViewBase supportsPoseidonCoaching]
  -[SBUIPasscodeLockViewBase setBiometricAuthenticationAllowed:]
  -[SBUIPasscodeLockViewBase playsKeypadSounds]
  -[SBUIPasscodeLockViewBase setPlaysKeypadSounds:]
  -[SBUIPasscodeLockViewBase showsStatusField]
  -[SBUIPasscodeLockViewBase setShowsStatusField:]
  -[SBUIPasscodeLockViewBase usesBiometricPresentation]
  -[SBUIPasscodeLockViewBase setUsesBiometricPresentation:]
  -[SBUIPasscodeLockViewBase allowsAutomaticBiometricPresentationTransition]
  -[SBUIPasscodeLockViewBase setAllowsAutomaticBiometricPresentationTransition:]
  -[SBUIPasscodeLockViewBase biometricPresentationAncillaryButtonsVisible]
  -[SBUIPasscodeLockViewBase setBiometricPresentationAncillaryButtonsVisible:]
  -[SBUIPasscodeLockViewBase showsProudLock]
  -[SBUIPasscodeLockViewBase setShowsProudLock:]
  -[SBUIPasscodeLockViewBase poseidonContainerViewController]
  -[SBUIPasscodeLockViewBase setPoseidonContainerViewController:]
  -[SBUIPasscodeLockViewBase passcodeLockViewState]
  -[SBUIPasscodeLockViewBase setPasscodeLockViewState:]
  -[SBUIPasscodeLockViewBase backgroundLegibilitySettingsProvider]
  -[SBUIPasscodeLockViewBase setBackgroundLegibilitySettingsProvider:]
  -[SBUIPasscodeLockViewBase noteFaceHasBeenOccluded]
  -[SBUIPasscodeLockViewBase noteBottomFaceHasBeenOccluded]
  -[SBUIPasscodeLockViewBase _overrideBiometricMatchingEnabled:forReason:]
  -[SBUIPasscodeLockViewBase _resumeBiometricMatchingAdvisory:]
  -[SBUIPasscodeLockViewBase beginTransitionToState:]
  -[SBUIPasscodeLockViewBase updateTransitionWithProgress:]
  -[SBUIPasscodeLockViewBase willEndTransitionToState:]
  -[SBUIPasscodeLockViewBase didEndTransitionToState:]
  -[SBUIPasscodeLockViewBase overrideProudLockContainerViewController]
  -[SBUIPasscodeLockViewBase setOverrideProudLockContainerViewController:]
  -[SBUIPasscodeLockViewBase proudLockConfiguration]
  -[SBUIPasscodeLockViewBase setProudLockConfiguration:]
  -[SBUIPasscodeLockViewBase canSuggestSwipeToRetry]
  -[SBUIPasscodeLockViewBase setCanSuggestSwipeToRetry:]
  -[SBUIPasscodeLockViewBase _noteDeviceHasBeenUnlockedOnceSinceBoot:]
  -[SBUIPasscodeLockViewBase _applyProudLockContainerViewControllerConfiguration]
  -[SBUIPasscodeLockViewBase _supportsProudLock]
  -[SBUIPasscodeLockViewBase _proudLockContainerViewControllerToUpdate]
  -[SBUIPasscodeLockViewBase _setPasscodeLockViewState:animated:]
  -[SBUIPasscodeLockViewBase _setAuthenticationViewTypeToFaceIDWithWatch]
  -[SBUIPasscodeLockViewBase _updateBiometricAlpha]
  -[SBUIPasscodeLockViewBase _biometricViewAlphaFromPasscodeLockViewState:]
  -[SBUIPasscodeLockViewBase _armAdvanceToPasscodeTimer]
  -[SBUIPasscodeLockViewBase _disarmAdvanceToPasscodeTimer]
  -[SBUIPasscodeLockViewBase _advanceToPasscodeForMatchFailure:]
  -[SBUIPasscodeLockViewBase willTransitionToPasscodeView]
  -[SBUIPasscodeLockViewBase updateForTransitionToPasscodeView:animated:]
  -[SBUIPasscodeLockViewBase _evaluateBiometricMatchingState]
  -[SBUIPasscodeLockViewBase _setBiometricMatchingState:]
  -[SBUIPasscodeLockViewBase _canRecognizeBiometricAuthentication]
  -[SBUIPasscodeLockViewBase _isBoundsPortraitOriented]
  -[SBUIPasscodeLockViewBase _setLegibilitySettings:]
  -[SBUIPasscodeLockViewBase _setLuminosityBoost:]
  -[SBUIPasscodeLockViewBase _luminanceBoostDidChange]
  -[SBUIPasscodeLockViewBase _sendDelegateKeypadKeyDown]
  -[SBUIPasscodeLockViewBase _sendDelegateKeypadKeyUp]
  -[SBUIPasscodeLockViewBase _updateStatusStateForLockoutIfNecessaryAnimatedly:]
  -[SBUIPasscodeLockViewBase _numberPadOffsetFromTopOfScreen:]
  -[SBUIPasscodeLockViewBase _setStatusText:]
  -[SBUIPasscodeLockViewBase setNeedsStatusTextUpdate]
  -[SBUIPasscodeLockViewBase _setStatusSubtitleText:]
  -[SBUIPasscodeLockViewBase _setSuppressTitleText:animated:]
  -[SBUIPasscodeLockViewBase updateStatusTextAnimated:]
  -[SBUIPasscodeLockViewBase _deviceSpecificTemperatureStringForTemperatureState:]
  -[SBUIPasscodeLockViewBase _statusStateForLockoutState:]
  -[SBUIPasscodeLockViewBase _setStatusState:]
  -[SBUIPasscodeLockViewBase _setStatusState:animated:]
  -[SBUIPasscodeLockViewBase _defaultStatusText]
  -[SBUIPasscodeLockViewBase _resetForFailedPasscode:]
  -[SBUIPasscodeLockViewBase _playAuthenticationFeedbackForSuccess:jiggleLock:]
  -[SBUIPasscodeLockViewBase _proudLockShowingBiometricStates]
  -[SBUIPasscodeLockViewBase _effectivelyHasProudLockShowingBiometricStates]
  -[SBUIPasscodeLockViewBase _accountingForExternallyShownProudLock]
  -[SBUIPasscodeLockViewBase _clearBrightnessChangeTimer]
  -[SBUIPasscodeLockViewBase _luminanceBoostFromLegibility]
  -[SBUIPasscodeLockViewBase _luminanceBoostFromDisplayBrightness]
  -[SBUIPasscodeLockViewBase _evaluateLuminance]
  -[SBUIPasscodeLockViewBase _resetStatusText]
  -[SBUIPasscodeLockViewBase _resetProudLockAndTitleTextForFailedBiometricAttempt]
  -[SBUIPasscodeLockViewBase _resetForFailedBiometricAttempt]
  -[SBUIPasscodeLockViewBase _handleNonPasscodeAuthenticationAndUpdateProudLock]
  -[SBUIPasscodeLockViewBase _handleBiometricAuthentication]
  -[SBUIPasscodeLockViewBase _notifyDelegatePasscodeEnteredViaMesa]
  -[SBUIPasscodeLockViewBase _updateProudLockForBioUnlockWithCompletion:]
  -[SBUIPasscodeLockViewBase _updateProudLockForBioEvent:]
  -[SBUIPasscodeLockViewBase _updateStatusTextForBioEvent:animated:]
  -[SBUIPasscodeLockViewBase _updateBiometricGlyphForBioEvent:animated:completion:]
  -[SBUIPasscodeLockViewBase _updateBiometricLayout]
  -[SBUIPasscodeLockViewBase _setStatusStateSwipeToRetryAnimated:]
  -[SBUIPasscodeLockViewBase _statusStateShouldNotUpdateForUnsupportedGlassesFeedback:]
  -[SBUIPasscodeLockViewBase _entryField]
  -[SBUIPasscodeLockViewBase _setEntryField:]
  -[SBUIPasscodeLockViewBase _luminosityBoost]
  -[SBUIPasscodeLockViewBase passcodeAuthenticationView]
  -[SBUIPasscodeLockViewBase setPasscodeAuthenticationView:]
  -[SBUIPasscodeLockViewBase biometricAuthenticationView]
  -[SBUIPasscodeLockViewBase setBiometricAuthenticationView:]
  -[SBUIPasscodeLockViewBase keyboardFeedbackBehavior]
  -[SBUIPasscodeLockViewBase setKeyboardFeedbackBehavior:]
  -[SBUIPasscodeLockViewBase shouldResetForFailedPasscodeAttempt]
  -[SBUIPasscodeLockViewBase setShouldResetForFailedPasscodeAttempt:]
  -[SBUIPasscodeLockViewBase _statusState]
  -[SBUIPasscodeLockViewBase screenBrightnessChangedTimer]
  -[SBUIPasscodeLockViewBase setScreenBrightnessChangedTimer:]
  -[SBUIPasscodeLockViewBase authenticationFeedbackBehavior]
  -[SBUIPasscodeLockViewBase setAuthenticationFeedbackBehavior:]
  -[SBUIPasscodeLockViewBase _statusSubtitleText]


SBSUIInCallWindowSceneBSActionsHandler : NSObject <_UISceneBSActionHandler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBSUIInCallWindowSceneBSActionsHandler _respondToActions:forFBSScene:inUIScene:fromTransitionContext:]


SBUISystemApertureAssertion : NSObject <SBUISAInvalidatable>
 @property  NSString *invalidationReason
 @property  NSArray *descriptionConstituents
 @property  BOOL valid
 @property  NSDate *creationDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUISystemApertureAssertion invalidateWithReason:]
  -[SBUISystemApertureAssertion dealloc]
  -[SBUISystemApertureAssertion isValid]
  -[SBUISystemApertureAssertion .cxx_destruct]
  -[SBUISystemApertureAssertion creationDate]
  -[SBUISystemApertureAssertion init]
  -[SBUISystemApertureAssertion _invalidationReason]
  -[SBUISystemApertureAssertion addInvalidationBlock:]
  -[SBUISystemApertureAssertion _descriptionConstituents]


SBSimplePasscodeEntryFieldButton : UIView
 @property  BOOL animatingUnreveal

  // instance methods
  -[SBSimplePasscodeEntryFieldButton .cxx_destruct]
  -[SBSimplePasscodeEntryFieldButton layoutSubviews]
  -[SBSimplePasscodeEntryFieldButton setRevealed:animated:]
  -[SBSimplePasscodeEntryFieldButton initWithFrame:paddingOutsideRing:useLightStyle:]
  -[SBSimplePasscodeEntryFieldButton setRevealed:animated:delay:]
  -[SBSimplePasscodeEntryFieldButton isAnimatingUnreveal]
  -[SBSimplePasscodeEntryFieldButton setAnimatingUnreveal:]


SBUISimpleFixedDigitPasscodeEntryField : SBUINumericPasscodeEntryFieldBase
  // instance methods
  -[SBUISimpleFixedDigitPasscodeEntryField _viewSize]
  -[SBUISimpleFixedDigitPasscodeEntryField reset]
  -[SBUISimpleFixedDigitPasscodeEntryField .cxx_destruct]
  -[SBUISimpleFixedDigitPasscodeEntryField _resetForFailedPasscode:]
  -[SBUISimpleFixedDigitPasscodeEntryField initWithDefaultSizeAndLightStyle:]
  -[SBUISimpleFixedDigitPasscodeEntryField _appendString:]
  -[SBUISimpleFixedDigitPasscodeEntryField _deleteLastCharacter]
  -[SBUISimpleFixedDigitPasscodeEntryField _autofillForBiometricAuthenticationWithCompletion:]
  -[SBUISimpleFixedDigitPasscodeEntryField initWithDefaultSizeAndLightStyle:numberOfDigits:]
  -[SBUISimpleFixedDigitPasscodeEntryField _hasAnyCharacters]
  -[SBUISimpleFixedDigitPasscodeEntryField _entryFieldBoundsWithXOffset:]
  -[SBUISimpleFixedDigitPasscodeEntryField _entryFieldPaddingOutsideRing]


SBUISystemApertureAlertingAction : BSAction
  // instance methods
  -[SBUISystemApertureAlertingAction invalidateWithReason:]
  -[SBUISystemApertureAlertingAction valueDescriptionForFlag:object:ofSetting:]
  -[SBUISystemApertureAlertingAction keyDescriptionForSetting:]


SBUILongNumericPasscodeEntryField : SBUINumericPasscodeEntryFieldBase
 @property  UIButton *okButton
 @property  BOOL showsOkButton
 @property  UILabel *promptLabel
 @property  BOOL showsPromptLabel

  // class methods
  +[SBUILongNumericPasscodeEntryField _shouldResetAutoAcceptWhenMaxNumbersMetInResignFirstResponder]
  +[SBUILongNumericPasscodeEntryField _usesTextFieldForFirstResponder]

  // instance methods
  -[SBUILongNumericPasscodeEntryField resignFirstResponder]
  -[SBUILongNumericPasscodeEntryField isFirstResponder]
  -[SBUILongNumericPasscodeEntryField canResignFirstResponder]
  -[SBUILongNumericPasscodeEntryField _viewSize]
  -[SBUILongNumericPasscodeEntryField becomeFirstResponder]
  -[SBUILongNumericPasscodeEntryField okButton]
  -[SBUILongNumericPasscodeEntryField hitTest:withEvent:]
  -[SBUILongNumericPasscodeEntryField textFieldShouldBeginEditing:]
  -[SBUILongNumericPasscodeEntryField .cxx_destruct]
  -[SBUILongNumericPasscodeEntryField layoutSubviews]
  -[SBUILongNumericPasscodeEntryField pointInside:withEvent:]
  -[SBUILongNumericPasscodeEntryField promptLabel]
  -[SBUILongNumericPasscodeEntryField canBecomeFirstResponder]
  -[SBUILongNumericPasscodeEntryField _handleKeyUIEvent:]
  -[SBUILongNumericPasscodeEntryField _resetForFailedPasscode:]
  -[SBUILongNumericPasscodeEntryField initWithDefaultSizeAndLightStyle:]
  -[SBUILongNumericPasscodeEntryField _autofillForBiometricAuthenticationWithCompletion:]
  -[SBUILongNumericPasscodeEntryField _okButtonHit]
  -[SBUILongNumericPasscodeEntryField setShowsOkButton:]
  -[SBUILongNumericPasscodeEntryField setShowsPromptLabel:]
  -[SBUILongNumericPasscodeEntryField _getPasscodeFieldSize:okButtonSize:]
  -[SBUILongNumericPasscodeEntryField showsOkButton]
  -[SBUILongNumericPasscodeEntryField showsPromptLabel]


SBUILegibilityContainerView : UIView
 @property  double strength
 @property  UIImage *strengthenedImage
 @property  UIImage *image
 @property  UIImage *processedImage
 @property  <SBUILegibilityEngine> *legibilityEngine
 @property  <SBUILegibilitySettings> *legibilitySettings
 @property  long long options

  // instance methods
  -[SBUILegibilityContainerView sizeToFit]
  -[SBUILegibilityContainerView _contentColor]
  -[SBUILegibilityContainerView setLegibilityEngine:]
  -[SBUILegibilityContainerView setStrength:]
  -[SBUILegibilityContainerView updateOptions:]
  -[SBUILegibilityContainerView _drawView]
  -[SBUILegibilityContainerView .cxx_destruct]
  -[SBUILegibilityContainerView _shouldAnimatePropertyWithKey:]
  -[SBUILegibilityContainerView options]
  -[SBUILegibilityContainerView _updateFilters]
  -[SBUILegibilityContainerView layoutSubviews]
  -[SBUILegibilityContainerView processedImage]
  -[SBUILegibilityContainerView applySettingsForLegibilityStyle:]
  -[SBUILegibilityContainerView image]
  -[SBUILegibilityContainerView setLegibilitySettings:]
  -[SBUILegibilityContainerView legibilityEngine]
  -[SBUILegibilityContainerView _usesColorFilters]
  -[SBUILegibilityContainerView strengthenedImage]
  -[SBUILegibilityContainerView _applyStrength]
  -[SBUILegibilityContainerView setImage:strengthenedImage:strength:]
  -[SBUILegibilityContainerView _setDrawImage:]
  -[SBUILegibilityContainerView buildDrawView]
  -[SBUILegibilityContainerView strength]
  -[SBUILegibilityContainerView setImage:]
  -[SBUILegibilityContainerView legibilitySettings]
  -[SBUILegibilityContainerView _usesSecondaryColor]


SBUILegibilityShadowView : SBUILegibilityContainerView
 @property  double strength
 @property  UIImage *strengthenedImage

  // instance methods
  -[SBUILegibilityShadowView _contentColor]
  -[SBUILegibilityShadowView _updateFilters]
  -[SBUILegibilityShadowView setImage:strengthenedImage:strength:]


SBUIPreciseClockTimer : NSObject
  // class methods
  +[SBUIPreciseClockTimer now]
  +[SBUIPreciseClockTimer sharedInstance]

  // instance methods
  -[SBUIPreciseClockTimer startMinuteUpdatesWithHandler:]
  -[SBUIPreciseClockTimer _updateDisplayLink]
  -[SBUIPreciseClockTimer dealloc]
  -[SBUIPreciseClockTimer .cxx_destruct]
  -[SBUIPreciseClockTimer _updateDisplayLinkFrameIntervalForSecondsPastMinute:]
  -[SBUIPreciseClockTimer stopMinuteUpdatesForToken:]
  -[SBUIPreciseClockTimer _onDisplayLink:]
  -[SBUIPreciseClockTimer init]
  -[SBUIPreciseClockTimer _handleTimePassed]


SBSUISystemNotesWindowScene : UIWindowScene
  // instance methods
  -[SBSUISystemNotesWindowScene takeScreenshotOfDisplays:handler:]


SBUIPowerDownViewControllerFactory : NSObject
  // class methods
  +[SBUIPowerDownViewControllerFactory newPowerDownViewController]


SBSUIInCallSceneTransitionContext : UIApplicationSceneTransitionContext
 @property  NSString *analyticsSource

  // instance methods
  -[SBSUIInCallSceneTransitionContext valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIInCallSceneTransitionContext keyDescriptionForSetting:]
  -[SBSUIInCallSceneTransitionContext analyticsSource]
  -[SBSUIInCallSceneTransitionContext setAnalyticsSource:]


SBUIPhoneUnlockWithWatchController : NSObject <SFAutoUnlockManagerDelegate, SBUIBiometricResourceObserver>
 @property  <SBUIPhoneUnlockWithWatchControllerDelegate> *delegate
 @property  long long errorCode
 @property  <SBUIBiometricResource> *biometricResource
 @property  BOOL wakeSourceIsUserAction
 @property  BOOL significantUserInteractionOccuredSinceScreenOn
 @property  BOOL liftToWakeGestureDetectedSinceScreenOn
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBUIPhoneUnlockWithWatchController sharedInstance]

  // instance methods
  -[SBUIPhoneUnlockWithWatchController setErrorCode:]
  -[SBUIPhoneUnlockWithWatchController setWakeSourceIsUserAction:]
  -[SBUIPhoneUnlockWithWatchController manager:beganAttemptWithDevice:]
  -[SBUIPhoneUnlockWithWatchController errorCode]
  -[SBUIPhoneUnlockWithWatchController completePhoneAutoUnlockWithNotification:]
  -[SBUIPhoneUnlockWithWatchController _autoUnlockManager]
  -[SBUIPhoneUnlockWithWatchController setDelegate:]
  -[SBUIPhoneUnlockWithWatchController setFaceOccludedSinceScreenOn:]
  -[SBUIPhoneUnlockWithWatchController significantUserInteractionOccuredSinceScreenOn]
  -[SBUIPhoneUnlockWithWatchController manager:failedAttemptWithError:]
  -[SBUIPhoneUnlockWithWatchController addObserver:]
  -[SBUIPhoneUnlockWithWatchController delegate]
  -[SBUIPhoneUnlockWithWatchController _sendCoreAnalyticsEventWithPayload:]
  -[SBUIPhoneUnlockWithWatchController phoneUnlockWithWatchEnabled]
  -[SBUIPhoneUnlockWithWatchController .cxx_destruct]
  -[SBUIPhoneUnlockWithWatchController biometricResource]
  -[SBUIPhoneUnlockWithWatchController setBottomFaceOccludedSinceScreenOn:]
  -[SBUIPhoneUnlockWithWatchController wakeSourceIsUserAction]
  -[SBUIPhoneUnlockWithWatchController handleScreenOff]
  -[SBUIPhoneUnlockWithWatchController phoneUnlockWithWatchSupported]
  -[SBUIPhoneUnlockWithWatchController biometricResource:observeEvent:]
  -[SBUIPhoneUnlockWithWatchController showRawErrorCodes]
  -[SBUIPhoneUnlockWithWatchController setSignificantUserInteractionOccuredSinceScreenOn:]
  -[SBUIPhoneUnlockWithWatchController _handleUnlockAttemptSucceeded]
  -[SBUIPhoneUnlockWithWatchController manager:completedUnlockWithDevice:]
  -[SBUIPhoneUnlockWithWatchController setBiometricResource:]
  -[SBUIPhoneUnlockWithWatchController liftToWakeGestureDetectedSinceScreenOn]
  -[SBUIPhoneUnlockWithWatchController _testAutoUnlockManager]
  -[SBUIPhoneUnlockWithWatchController didDetectFaceRequirementsForPAU]
  -[SBUIPhoneUnlockWithWatchController _handleUnlockAttemptFailedWithError:]
  -[SBUIPhoneUnlockWithWatchController setLiftToWakeGestureDetectedSinceScreenOn:]
  -[SBUIPhoneUnlockWithWatchController setFaceWUPoseEligibleSinceScreenOn:]
  -[SBUIPhoneUnlockWithWatchController attemptPhoneUnlockWithWatch]
  -[SBUIPhoneUnlockWithWatchController shouldPhoneCompleteAutoUnlockWithNotification]
  -[SBUIPhoneUnlockWithWatchController setTestAutoUnlockManager:]
  -[SBUIPhoneUnlockWithWatchController removeObserver:]
  -[SBUIPhoneUnlockWithWatchController init]


SBUIBannerSourceApplicationSceneSpecification : BNBannerSourceApplicationSceneSpecification
  // instance methods
  -[SBUIBannerSourceApplicationSceneSpecification clientSettingsClass]


SBUINumericPasscodeEntryFieldBase : SBUIPasscodeEntryField
 @property  unsigned long maxNumbersAllowed
 @property  BOOL allowsNewlineAcceptance
 @property  BOOL autoAcceptWhenMaxNumbersMet

  // class methods
  +[SBUINumericPasscodeEntryFieldBase _shouldResetAutoAcceptWhenMaxNumbersMetInResignFirstResponder]

  // instance methods
  -[SBUINumericPasscodeEntryFieldBase resignFirstResponder]
  -[SBUINumericPasscodeEntryFieldBase .cxx_destruct]
  -[SBUINumericPasscodeEntryFieldBase initWithDefaultSizeAndLightStyle:]
  -[SBUINumericPasscodeEntryFieldBase _appendString:]
  -[SBUINumericPasscodeEntryFieldBase _deleteLastCharacter]
  -[SBUINumericPasscodeEntryFieldBase shouldInsertPasscodeText:]
  -[SBUINumericPasscodeEntryFieldBase setAllowsNewlineAcceptance:]
  -[SBUINumericPasscodeEntryFieldBase _reallyAppendString:]
  -[SBUINumericPasscodeEntryFieldBase _hasMaxDigitsSpecified]
  -[SBUINumericPasscodeEntryFieldBase allowsNewlineAcceptance]
  -[SBUINumericPasscodeEntryFieldBase maxNumbersAllowed]
  -[SBUINumericPasscodeEntryFieldBase setMaxNumbersAllowed:]
  -[SBUINumericPasscodeEntryFieldBase autoAcceptWhenMaxNumbersMet]
  -[SBUINumericPasscodeEntryFieldBase setAutoAcceptWhenMaxNumbersMet:]


SBUIProudLockIconView : UIView
 @property  UIColor *contentColor
 @property  _UILegibilitySettings *legibilitySettings
 @property  double durationOnCameraCoveredGlyphBeforeCoaching
 @property  long long state
 @property  SBUIFaceIDCameraGlyphView *cameraCoveredView

  // instance methods
  -[SBUIProudLockIconView setContentColor:]
  -[SBUIProudLockIconView setState:animated:completion:]
  -[SBUIProudLockIconView _forEachLayerInHierarchy:perform:]
  -[SBUIProudLockIconView setOverrideSize:offset:extent:]
  -[SBUIProudLockIconView _alphaAnimationSettingsForTransitionFromViews:andState:toViews:andState:forIncomingViews:]
  -[SBUIProudLockIconView _configureShadowFromLegibilitySettings:]
  -[SBUIProudLockIconView state]
  -[SBUIProudLockIconView _faceIDCoachingView]
  -[SBUIProudLockIconView _smallLockSize]
  -[SBUIProudLockIconView _resetPearlGlyphView]
  -[SBUIProudLockIconView fileNameForCurrentDevice]
  -[SBUIProudLockIconView _practicalProudLockSize]
  -[SBUIProudLockIconView .cxx_destruct]
  -[SBUIProudLockIconView allowsAlongsideCoaching]
  -[SBUIProudLockIconView setDurationOnCameraCoveredGlyphBeforeCoaching:]
  -[SBUIProudLockIconView _lockToCoachingSpacing]
  -[SBUIProudLockIconView _transitionToState:animated:options:completion:]
  -[SBUIProudLockIconView setState:animated:]
  -[SBUIProudLockIconView _smallLockSizeForTextSize:]
  -[SBUIProudLockIconView layoutSubviews]
  -[SBUIProudLockIconView cameraCoveredView]
  -[SBUIProudLockIconView _outgoingTransformForView:fromState:]
  -[SBUIProudLockIconView _activeViewsForState:]
  -[SBUIProudLockIconView setLegibilitySettings:]
  -[SBUIProudLockIconView _incomingTransformForActiveView:forState:]
  -[SBUIProudLockIconView _defaultAnimationSettingsForTransitionFromViews:andState:toViews:andState:]
  -[SBUIProudLockIconView _resetfaceIDCoachingView]
  -[SBUIProudLockIconView setAllowsAlongsideCoaching:]
  -[SBUIProudLockIconView contentColor]
  -[SBUIProudLockIconView _resetCameraGlyphView]
  -[SBUIProudLockIconView initWithFrame:]
  -[SBUIProudLockIconView _pearlGlyphView]
  -[SBUIProudLockIconView setState:animated:options:completion:]
  -[SBUIProudLockIconView _zoomedTransform]
  -[SBUIProudLockIconView _layoutAnimationSettingsForTransitionFromViews:andState:toViews:andState:]
  -[SBUIProudLockIconView _transformForActiveView:forState:]
  -[SBUIProudLockIconView _scaleAmountForZoom]
  -[SBUIProudLockIconView legibilitySettings]
  -[SBUIProudLockIconView durationOnCameraCoveredGlyphBeforeCoaching]
  -[SBUIProudLockIconView _transformAnimationSettingsForTransitionFromViews:andState:toViews:andState:forIncomingViews:]
  -[SBUIProudLockIconView _alphaForActiveViewForState:]
  -[SBUIProudLockIconView setState:]


SBSUIHomeScreenSilhouetteViewBuilder : NSObject
 @property  SBSHomeScreenSilhouetteLayout *silhouetteLayout
 @property  {CGSize=dd} viewSize
 @property  @? rootViewBuilder
 @property  @? iconViewBuilder
 @property  @? dockViewBuilder
 @property  BOOL includesDock

  // instance methods
  -[SBSUIHomeScreenSilhouetteViewBuilder makeIconView]
  -[SBSUIHomeScreenSilhouetteViewBuilder .cxx_destruct]
  -[SBSUIHomeScreenSilhouetteViewBuilder viewSize]
  -[SBSUIHomeScreenSilhouetteViewBuilder initWithSilhouetteLayout:viewSize:]
  -[SBSUIHomeScreenSilhouetteViewBuilder buildView]
  -[SBSUIHomeScreenSilhouetteViewBuilder makeRootView]
  -[SBSUIHomeScreenSilhouetteViewBuilder makeDockView]
  -[SBSUIHomeScreenSilhouetteViewBuilder frameForNormalizedFrame:]
  -[SBSUIHomeScreenSilhouetteViewBuilder silhouetteLayout]
  -[SBSUIHomeScreenSilhouetteViewBuilder rootViewBuilder]
  -[SBSUIHomeScreenSilhouetteViewBuilder setRootViewBuilder:]
  -[SBSUIHomeScreenSilhouetteViewBuilder iconViewBuilder]
  -[SBSUIHomeScreenSilhouetteViewBuilder setIconViewBuilder:]
  -[SBSUIHomeScreenSilhouetteViewBuilder dockViewBuilder]
  -[SBSUIHomeScreenSilhouetteViewBuilder setDockViewBuilder:]
  -[SBSUIHomeScreenSilhouetteViewBuilder includesDock]
  -[SBSUIHomeScreenSilhouetteViewBuilder setIncludesDock:]


SBSUIInCallSceneSpecification : UIApplicationSceneSpecification
  // instance methods
  -[SBSUIInCallSceneSpecification uiSceneMinimumClass]
  -[SBSUIInCallSceneSpecification uiSceneSessionRole]
  -[SBSUIInCallSceneSpecification initialSettingsDiffActions]
  -[SBSUIInCallSceneSpecification initialActionHandlers]
  -[SBSUIInCallSceneSpecification settingsClass]
  -[SBSUIInCallSceneSpecification clientSettingsClass]


SBSUIInCallWindowSceneHardwareButtonEvent : NSObject
 @property  long long buttonEventType

  // instance methods
  -[SBSUIInCallWindowSceneHardwareButtonEvent initWithButtonEventType:]
  -[SBSUIInCallWindowSceneHardwareButtonEvent buttonEventType]


SBUIAlphanumericPasscodeEntryField : SBUIPasscodeEntryField
 @property  UITextInputTraits *textInputTraits

  // instance methods
  -[SBUIAlphanumericPasscodeEntryField textInputTraits]
  -[SBUIAlphanumericPasscodeEntryField _viewSize]
  -[SBUIAlphanumericPasscodeEntryField .cxx_destruct]
  -[SBUIAlphanumericPasscodeEntryField layoutSubviews]
  -[SBUIAlphanumericPasscodeEntryField _resetForFailedPasscode:]
  -[SBUIAlphanumericPasscodeEntryField initWithDefaultSizeAndLightStyle:]
  -[SBUIAlphanumericPasscodeEntryField _autofillForBiometricAuthenticationWithCompletion:]
  -[SBUIAlphanumericPasscodeEntryField notePasscodeFieldTextDidChange]


SBSUIStarkNotificationsSceneClientSettings : UIApplicationSceneClientSettings <SBSUIStarkNotificationsSceneClientSettings>
 @property  BOOL displayingNotification
 @property  BOOL shouldBorrowScreen
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBSUIStarkNotificationsSceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIStarkNotificationsSceneClientSettings keyDescriptionForSetting:]
  -[SBSUIStarkNotificationsSceneClientSettings mutableCopyWithZone:]
  -[SBSUIStarkNotificationsSceneClientSettings isDisplayingNotification]
  -[SBSUIStarkNotificationsSceneClientSettings shouldBorrowScreen]


SBSUIMutableStarkNotificationsSceneClientSettings : UIMutableApplicationSceneClientSettings <SBSUIStarkNotificationsSceneClientSettings>
 @property  BOOL displayingNotification
 @property  BOOL shouldBorrowScreen
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBSUIMutableStarkNotificationsSceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIMutableStarkNotificationsSceneClientSettings copyWithZone:]
  -[SBSUIMutableStarkNotificationsSceneClientSettings keyDescriptionForSetting:]
  -[SBSUIMutableStarkNotificationsSceneClientSettings isDisplayingNotification]
  -[SBSUIMutableStarkNotificationsSceneClientSettings shouldBorrowScreen]
  -[SBSUIMutableStarkNotificationsSceneClientSettings setDisplayingNotification:]
  -[SBSUIMutableStarkNotificationsSceneClientSettings setShouldBorrowScreen:]


SBUIVibrantButton : UIControl <_SBFVibrantView, SBUILegibility>
 @property  BOOL vibrancyAllowed
 @property  UIImage *glyphImage
 @property  NSString *title
 @property  double minimumTitleScaleFactor
 @property  long long numberOfLines
 @property  long long textAlignment
 @property  long long lineBreakMode
 @property  _SBFVibrantSettings *vibrantSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double strength
 @property  _UILegibilitySettings *legibilitySettings

  // class methods
  +[SBUIVibrantButton _labelFont]

  // instance methods
  -[SBUIVibrantButton setNumberOfLines:]
  -[SBUIVibrantButton glyphImage]
  -[SBUIVibrantButton setGlyphImage:]
  -[SBUIVibrantButton setStrength:]
  -[SBUIVibrantButton setTextAlignment:]
  -[SBUIVibrantButton .cxx_destruct]
  -[SBUIVibrantButton numberOfLines]
  -[SBUIVibrantButton setLineBreakMode:]
  -[SBUIVibrantButton setHighlighted:]
  -[SBUIVibrantButton backgroundColor]
  -[SBUIVibrantButton layoutSubviews]
  -[SBUIVibrantButton title]
  -[SBUIVibrantButton lineBreakMode]
  -[SBUIVibrantButton setBackgroundView:]
  -[SBUIVibrantButton setLegibilitySettings:]
  -[SBUIVibrantButton setBackgroundColor:]
  -[SBUIVibrantButton textAlignment]
  -[SBUIVibrantButton sizeThatFits:]
  -[SBUIVibrantButton initWithFrame:]
  -[SBUIVibrantButton strength]
  -[SBUIVibrantButton setTitle:]
  -[SBUIVibrantButton legibilitySettings]
  -[SBUIVibrantButton vibrantSettings]
  -[SBUIVibrantButton setVibrantSettings:]
  -[SBUIVibrantButton setVibrancyAllowed:]
  -[SBUIVibrantButton setMinimumTitleScaleFactor:]
  -[SBUIVibrantButton _shouldUseVibrancy]
  -[SBUIVibrantButton _setUpForCurrentVibrancy]
  -[SBUIVibrantButton _sizeThatFitsWithVibrancy]
  -[SBUIVibrantButton _sizeThatFitsWithoutVibrancy]
  -[SBUIVibrantButton _sizeThatFitsForLabelView:]
  -[SBUIVibrantButton _labelFrameForSize:baselineOffset:inRect:]
  -[SBUIVibrantButton _glyphFrameForSize:inRect:]
  -[SBUIVibrantButton _layoutVibrantSubviews]
  -[SBUIVibrantButton _layoutNonVibrantSubviews]
  -[SBUIVibrantButton _lazyGlyphLegibilityView]
  -[SBUIVibrantButton _alphaForState]
  -[SBUIVibrantButton _updateForState]
  -[SBUIVibrantButton setLegibilitySettings:textStrength:]
  -[SBUIVibrantButton minimumTitleScaleFactor]
  -[SBUIVibrantButton isVibrancyAllowed]


SBUIPasscodePillButton : UIControl
 @property  double unhighlightedAlpha
 @property  double highlightedAlpha
 @property  NSString *title
 @property  UIFont *font

  // instance methods
  -[SBUIPasscodePillButton hitTest:withEvent:]
  -[SBUIPasscodePillButton .cxx_destruct]
  -[SBUIPasscodePillButton setHighlighted:]
  -[SBUIPasscodePillButton layoutSubviews]
  -[SBUIPasscodePillButton title]
  -[SBUIPasscodePillButton font]
  -[SBUIPasscodePillButton setFont:]
  -[SBUIPasscodePillButton initWithFrame:]
  -[SBUIPasscodePillButton setTitle:]
  -[SBUIPasscodePillButton unhighlightedAlpha]
  -[SBUIPasscodePillButton setUnhighlightedAlpha:]
  -[SBUIPasscodePillButton highlightedAlpha]
  -[SBUIPasscodePillButton setHighlightedAlpha:]


SBUISystemApertureImageContentProvider : NSObject <SBUISystemApertureContentViewProviding, SBUISystemApertureContentColorStyling>
 @property  UIImage *image
 @property  UIView *providedView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIColor *contentColor

  // instance methods
  -[SBUISystemApertureImageContentProvider setContentColor:]
  -[SBUISystemApertureImageContentProvider initWithImage:]
  -[SBUISystemApertureImageContentProvider .cxx_destruct]
  -[SBUISystemApertureImageContentProvider image]
  -[SBUISystemApertureImageContentProvider contentColor]
  -[SBUISystemApertureImageContentProvider setImage:]
  -[SBUISystemApertureImageContentProvider initWithSystemImageName:]
  -[SBUISystemApertureImageContentProvider providedView]
  -[SBUISystemApertureImageContentProvider _providedView]


_SBUISystemApertureAspectFittingImageView : UIImageView
  // instance methods
  -[_SBUISystemApertureAspectFittingImageView sizeThatFits:]


SBUIRemoteAlertButtonAction : BSAction
 @property  unsigned long events

  // instance methods
  -[SBUIRemoteAlertButtonAction events]
  -[SBUIRemoteAlertButtonAction sendResponse:withCompletion:]
  -[SBUIRemoteAlertButtonAction settings:valueDescriptionForFlag:object:ofSetting:]
  -[SBUIRemoteAlertButtonAction settings:keyDescriptionForSetting:]
  -[SBUIRemoteAlertButtonAction initWithEvents:]
  -[SBUIRemoteAlertButtonAction sendResponseWithUnHandledEvents:]
  -[SBUIRemoteAlertButtonAction initWithEvents:withHandler:]


SBUIRemoteAlertButtonActionResponse : BSActionResponse
 @property  unsigned long unHandledEvents

  // instance methods
  -[SBUIRemoteAlertButtonActionResponse settings:valueDescriptionForFlag:object:ofSetting:]
  -[SBUIRemoteAlertButtonActionResponse settings:keyDescriptionForSetting:]
  -[SBUIRemoteAlertButtonActionResponse initWithUnHandledEvents:]
  -[SBUIRemoteAlertButtonActionResponse unHandledEvents]


SBSUIInCallWindowScene : UIWindowScene
 @property  unsigned long preferredHardwareButtonEventTypes
 @property  unsigned long preferredStatusBarStyleOverridesToSuppress
 @property  BOOL supportsDeviceLockEvents
 @property  BOOL idleTimerDisabled
 @property  BOOL shouldBecomeVisibleWhenWakingDisplay
 @property  BOOL callConnected
 @property  {UIEdgeInsets=dddd} expanseHUDDodgingInsets
 @property  BOOL prefersHiddenWhenDismissed
 @property  BOOL screenSharingPresentation
 @property  long long presentationMode
 @property  BOOL deviceAttachedToWindowedAccessory
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} windowedAccessoryCutoutFrameInScreen
 @property  BOOL prefersBannersHiddenFromClonedDisplay
 @property  BOOL shouldNeverBeShownWhenLaunchingFaceTime
 @property  BOOL systemControlsShouldPresentAsEmbedded
 @property  BOOL beingShownAboveCoverSheet
 @property  NSUUID *requestedPresentationConfigurationIdentifier
 @property  UIViewController<SBUISystemApertureElement> *associatedSystemApertureElement

  // instance methods
  -[SBSUIInCallWindowScene presentationMode]
  -[SBSUIInCallWindowScene initWithSession:connectionOptions:]
  -[SBSUIInCallWindowScene dealloc]
  -[SBSUIInCallWindowScene .cxx_destruct]
  -[SBSUIInCallWindowScene isIdleTimerDisabled]
  -[SBSUIInCallWindowScene preferredHardwareButtonEventTypes]
  -[SBSUIInCallWindowScene setIdleTimerDisabled:]
  -[SBSUIInCallWindowScene isScreenSharingPresentation]
  -[SBSUIInCallWindowScene _handleSourceDidConnect:]
  -[SBSUIInCallWindowScene setPreferredHardwareButtonEventTypes:]
  -[SBSUIInCallWindowScene setPreferredStatusBarStyleOverridesToSuppress:]
  -[SBSUIInCallWindowScene setShouldBecomeVisibleWhenWakingDisplay:]
  -[SBSUIInCallWindowScene setSupportsDeviceLockEvents:]
  -[SBSUIInCallWindowScene setCallConnected:]
  -[SBSUIInCallWindowScene setExpanseHUDDodgingInsets:]
  -[SBSUIInCallWindowScene setPrefersHiddenWhenDismissed:]
  -[SBSUIInCallWindowScene setShouldNeverBeShownWhenLaunchingFaceTime:]
  -[SBSUIInCallWindowScene requestTransitionToPresentationMode:]
  -[SBSUIInCallWindowScene requestTransitionToPresentationMode:isUserInitiated:]
  -[SBSUIInCallWindowScene requestTransitionToPresentationMode:isUserInitiated:analyticsSource:]
  -[SBSUIInCallWindowScene setPrefersBannersHiddenFromClonedDisplay:]
  -[SBSUIInCallWindowScene systemControlsShouldPresentAsEmbedded]
  -[SBSUIInCallWindowScene isBeingShownAboveCoverSheet]
  -[SBSUIInCallWindowScene requestedPresentationConfigurationIdentifier]
  -[SBSUIInCallWindowScene associatedSystemApertureElement]
  -[SBSUIInCallWindowScene _startObservingSystemApertureSourceConnectNotifications]
  -[SBSUIInCallWindowScene _associateWithSourceIfNeeded:]
  -[SBSUIInCallWindowScene systemApertureElementViewControllerProvider]
  -[SBSUIInCallWindowScene _handleDeviceLockAction:]
  -[SBSUIInCallWindowScene _handleHardwareButtonEventSceneActions:]
  -[SBSUIInCallWindowScene _updatePresentationMode:analyticsSource:]
  -[SBSUIInCallWindowScene _handleFrameChanged]
  -[SBSUIInCallWindowScene _setAttachedToWindowedAccessory:windowedAccessoryCutoutFrameInScreen:]
  -[SBSUIInCallWindowScene _updateValidationStateIfNeededForPresentationMode:]
  -[SBSUIInCallWindowScene preferredStatusBarStyleOverridesToSuppress]
  -[SBSUIInCallWindowScene supportsDeviceLockEvents]
  -[SBSUIInCallWindowScene shouldBecomeVisibleWhenWakingDisplay]
  -[SBSUIInCallWindowScene isCallConnected]
  -[SBSUIInCallWindowScene expanseHUDDodgingInsets]
  -[SBSUIInCallWindowScene prefersHiddenWhenDismissed]
  -[SBSUIInCallWindowScene isDeviceAttachedToWindowedAccessory]
  -[SBSUIInCallWindowScene windowedAccessoryCutoutFrameInScreen]
  -[SBSUIInCallWindowScene prefersBannersHiddenFromClonedDisplay]
  -[SBSUIInCallWindowScene shouldNeverBeShownWhenLaunchingFaceTime]


SBSUILoginUISceneClientSettingsDiffInspector : UIApplicationSceneClientSettingsDiffInspector
  // instance methods
  -[SBSUILoginUISceneClientSettingsDiffInspector observeWallpaperModeWithBlock:]
  -[SBSUILoginUISceneClientSettingsDiffInspector observeRotationModeWithBlock:]
  -[SBSUILoginUISceneClientSettingsDiffInspector observeStatusBarUserNameOverrideWithBlock:]
  -[SBSUILoginUISceneClientSettingsDiffInspector _observeOtherLoginUISetting:withBlock:]
  -[SBSUILoginUISceneClientSettingsDiffInspector observeIdleTimerModeWithBlock:]


SBUISystemApertureLayoutGuide : UILayoutGuide
 @property  NSArray *constraints

  // class methods
  +[SBUISystemApertureLayoutGuide prepareLayoutGuidesForViewControllerIfNeeded:onlyIfEmpty:]
  +[SBUISystemApertureLayoutGuide _addUnpreparedLayoutGuide:]
  +[SBUISystemApertureLayoutGuide _removeUnpreparedLayoutGuideIfNeeded:]
  +[SBUISystemApertureLayoutGuide _enumerateUnpreparedSystemApertureLayoutGuides:]
  +[SBUISystemApertureLayoutGuide _enumerateSystemApertureRootLayoutGuidesForViewController:usingBlock:]

  // instance methods
  -[SBUISystemApertureLayoutGuide setConstraints:]
  -[SBUISystemApertureLayoutGuide .cxx_destruct]
  -[SBUISystemApertureLayoutGuide constraints]
  -[SBUISystemApertureLayoutGuide prepareIfNeeded]
  -[SBUISystemApertureLayoutGuide activateConstraintsIfNeeded]
  -[SBUISystemApertureLayoutGuide constraintNeedsActivation:]
  -[SBUISystemApertureLayoutGuide _rootGuideView]
  -[SBUISystemApertureLayoutGuide _rootGuide]
  -[SBUISystemApertureLayoutGuide _activateConstraintsWithRootLayoutGuide]
  -[SBUISystemApertureLayoutGuide _createOrUpdateConstraintsIfIsRootAndInAWindow]
  -[SBUISystemApertureLayoutGuide _requiresInitialSetup]
  -[SBUISystemApertureLayoutGuide _requiresExplicitFrame]
  -[SBUISystemApertureLayoutGuide _requiresInsets]
  -[SBUISystemApertureLayoutGuide _requiresFloatableFixedSize]
  -[SBUISystemApertureLayoutGuide _createOrUpdateFixedFrameRootConstraintsWithWindow:]
  -[SBUISystemApertureLayoutGuide _createOrUpdateConcentricRootLayoutGuideWithWindow:]
  -[SBUISystemApertureLayoutGuide _createOrUpdateInsetBasedRootGuideWithWindow:]


SBUISystemApertureSceneAction : BSAction
 @property  long long command

  // instance methods
  -[SBUISystemApertureSceneAction command]
  -[SBUISystemApertureSceneAction valueDescriptionForFlag:object:ofSetting:]
  -[SBUISystemApertureSceneAction keyDescriptionForSetting:]
  -[SBUISystemApertureSceneAction initWithCommand:]


SBUISystemApertureButton : UIButton
  // instance methods
  -[SBUISystemApertureButton setHighlighted:]
  -[SBUISystemApertureButton initWithFrame:]


SBSUIInCallWindowSceneDeviceLockEvent : NSObject
 @property  long long sourceType

  // instance methods
  -[SBSUIInCallWindowSceneDeviceLockEvent sourceType]
  -[SBSUIInCallWindowSceneDeviceLockEvent initWithSourceType:]


_SBUISimulatedLockoutAssertion : BSSimpleAssertion <BSDescriptionProviding>
 @property  unsigned long lockoutState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBUISimulatedLockoutAssertion descriptionWithMultilinePrefix:]
  -[_SBUISimulatedLockoutAssertion descriptionBuilderWithMultilinePrefix:]
  -[_SBUISimulatedLockoutAssertion succinctDescription]
  -[_SBUISimulatedLockoutAssertion lockoutState]
  -[_SBUISimulatedLockoutAssertion succinctDescriptionBuilder]
  -[_SBUISimulatedLockoutAssertion initWithIdentifier:forReason:queue:invalidationBlock:]
  -[_SBUISimulatedLockoutAssertion initWithLockoutState:reason:invalidationBlock:]


SBUIRingViewLabelButton : UIControl
 @property  TPRevealingRingView *backgroundRing
 @property  UILabel *label

  // instance methods
  -[SBUIRingViewLabelButton hitTest:withEvent:]
  -[SBUIRingViewLabelButton .cxx_destruct]
  -[SBUIRingViewLabelButton setHighlighted:]
  -[SBUIRingViewLabelButton label]
  -[SBUIRingViewLabelButton initWithFrame:]
  -[SBUIRingViewLabelButton backgroundRing]


SBUISystemApertureSceneResizeAction : BSAction
 @property  SBUISystemApertureAnimationParameters *animationParameters

  // instance methods
  -[SBUISystemApertureSceneResizeAction .cxx_destruct]
  -[SBUISystemApertureSceneResizeAction initWithAnimationParameters:]
  -[SBUISystemApertureSceneResizeAction animationParameters]


SBSUIInCallRequestPresentationModeAction : BSAction
 @property  NSString *analyticsSource
 @property  long long requestedPresentationMode
 @property  BOOL userInitiated

  // instance methods
  -[SBSUIInCallRequestPresentationModeAction isUserInitiated]
  -[SBSUIInCallRequestPresentationModeAction analyticsSource]
  -[SBSUIInCallRequestPresentationModeAction initWithRequestedPresentationMode:isUserInitiated:analyticsSource:responseHandler:]
  -[SBSUIInCallRequestPresentationModeAction sendCompletionResponseWithSuccess:]
  -[SBSUIInCallRequestPresentationModeAction requestedPresentationMode]


SBUIPasscodeLockViewFactory : NSObject
  // class methods
  +[SBUIPasscodeLockViewFactory passcodeLockViewForUsersCurrentStyle]
  +[SBUIPasscodeLockViewFactory passcodeLockViewForStyle:]
  +[SBUIPasscodeLockViewFactory lightPasscodeLockViewForUsersCurrentStyle]
  +[SBUIPasscodeLockViewFactory lightPasscodeLockViewForStyle:]
  +[SBUIPasscodeLockViewFactory installTonightPasscodeLockViewForUsersCurrentStyle]
  +[SBUIPasscodeLockViewFactory _passcodeLockViewForStyle:withLightStyle:]
  +[SBUIPasscodeLockViewFactory _commonInitPasscodeView:forStyle:]
  +[SBUIPasscodeLockViewFactory setPasscodeBiometricResource:]
  +[SBUIPasscodeLockViewFactory _defaultPasscodeBiometricResource]


_SBSUICFUserNotificationContentExtensionContext : NSExtensionContext
 @property  <_SBSUICFUserNotificationContentExtensionHostInterface> *hostService

  // instance methods
  -[_SBSUICFUserNotificationContentExtensionContext .cxx_destruct]
  -[_SBSUICFUserNotificationContentExtensionContext hostService]
  -[_SBSUICFUserNotificationContentExtensionContext setHostService:]


_SBSUICFUserNotificationContentExtensionContextHost : NSExtensionContext
  // class methods
  +[_SBSUICFUserNotificationContentExtensionContextHost _allowedItemPayloadClasses]


SBUISizeObservingView : SBFView
 @property  <SBUISizeObservingViewDelegate> *delegate

  // instance methods
  -[SBUISizeObservingView setDelegate:]
  -[SBUISizeObservingView setFrame:]
  -[SBUISizeObservingView delegate]
  -[SBUISizeObservingView .cxx_destruct]
  -[SBUISizeObservingView setBounds:]


SBUISystemApertureCustomContentProvider : NSObject <SBUISystemApertureContentViewProviding, SBUISystemApertureContentColorStyling>
 @property  UIView *providedView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIColor *contentColor

  // instance methods
  -[SBUISystemApertureCustomContentProvider setContentColor:]
  -[SBUISystemApertureCustomContentProvider .cxx_destruct]
  -[SBUISystemApertureCustomContentProvider initWithView:]
  -[SBUISystemApertureCustomContentProvider contentColor]
  -[SBUISystemApertureCustomContentProvider providedView]


SBSUIHandleDeviceLockSceneAction : BSAction
 @property  long long sourceType

  // instance methods
  -[SBSUIHandleDeviceLockSceneAction sourceType]
  -[SBSUIHandleDeviceLockSceneAction valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIHandleDeviceLockSceneAction sendResponse:]
  -[SBSUIHandleDeviceLockSceneAction keyDescriptionForSetting:]
  -[SBSUIHandleDeviceLockSceneAction initWithSourceType:timeout:withResponseHandler:]


SBSUIHandleDeviceLockSceneActionResponse : BSActionResponse
 @property  long long deviceLockHandlingResult

  // instance methods
  -[SBSUIHandleDeviceLockSceneActionResponse keyDescriptionForSetting:]
  -[SBSUIHandleDeviceLockSceneActionResponse initWithDeviceLockHandlingResult:error:]
  -[SBSUIHandleDeviceLockSceneActionResponse deviceLockHandlingResult]


SBSUIWallpaperProgressHUD : UIView
  // instance methods
  -[SBSUIWallpaperProgressHUD .cxx_destruct]
  -[SBSUIWallpaperProgressHUD initWithFrame:]
  -[SBSUIWallpaperProgressHUD hide]
  -[SBSUIWallpaperProgressHUD showMessage:inView:]


SBUIPoseidonContainerViewController : UIViewController <SBUIPoseidonIconViewDelegate>
 @property  <SBUIPoseidonContainerViewControllerDelegate> *delegate
 @property  <SBUIPoseidonContainerViewControllerLockStatusProvider> *authenticationInformationProvider
 @property  _UILegibilitySettings *legibilitySettings
 @property  BOOL authenticated
 @property  BOOL bioLockout
 @property  BOOL screenOn
 @property  BOOL fingerOffSinceWake
 @property  int unlockSource
 @property  BOOL resignActive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUIPoseidonContainerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBUIPoseidonContainerViewController isScreenOn]
  -[SBUIPoseidonContainerViewController _canShowWhileLocked]
  -[SBUIPoseidonContainerViewController resignActive]
  -[SBUIPoseidonContainerViewController setDelegate:]
  -[SBUIPoseidonContainerViewController setAuthenticationInformationProvider:]
  -[SBUIPoseidonContainerViewController delegate]
  -[SBUIPoseidonContainerViewController isAuthenticated]
  -[SBUIPoseidonContainerViewController _setLocalTransformForOrientation:]
  -[SBUIPoseidonContainerViewController setScreenOn:]
  -[SBUIPoseidonContainerViewController .cxx_destruct]
  -[SBUIPoseidonContainerViewController viewDidLoad]
  -[SBUIPoseidonContainerViewController loadView]
  -[SBUIPoseidonContainerViewController fillRestToOpenWithDuration:]
  -[SBUIPoseidonContainerViewController setLegibilitySettings:]
  -[SBUIPoseidonContainerViewController resetRestToOpen]
  -[SBUIPoseidonContainerViewController _setCounterTransformForOrientation:]
  -[SBUIPoseidonContainerViewController authenticationInformationProvider]
  -[SBUIPoseidonContainerViewController initWithAuthenticationInformationProvider:]
  -[SBUIPoseidonContainerViewController setAuthenticated:]
  -[SBUIPoseidonContainerViewController legibilitySettings]
  -[SBUIPoseidonContainerViewController _updateRotation]
  -[SBUIPoseidonContainerViewController poseidonIconViewCoachingStateDidChange:]
  -[SBUIPoseidonContainerViewController setBioLockout:]
  -[SBUIPoseidonContainerViewController setResignActive:]
  -[SBUIPoseidonContainerViewController startRestToOpenCoaching:withCompletion:]
  -[SBUIPoseidonContainerViewController coachingActive]
  -[SBUIPoseidonContainerViewController showCoaching:]
  -[SBUIPoseidonContainerViewController _poseidonIconView]
  -[SBUIPoseidonContainerViewController _testPoseidonIconView]
  -[SBUIPoseidonContainerViewController setTestPoseidonIconView:]
  -[SBUIPoseidonContainerViewController isBioLockout]
  -[SBUIPoseidonContainerViewController fingerOffSinceWake]
  -[SBUIPoseidonContainerViewController setFingerOffSinceWake:]
  -[SBUIPoseidonContainerViewController unlockSource]
  -[SBUIPoseidonContainerViewController setUnlockSource:]


SBSUILoginUISceneSpecification : UIApplicationSceneSpecification
  // instance methods
  -[SBSUILoginUISceneSpecification clientSettingsClass]


SBUIBannerClientContainerViewController : BNBannerClientContainerViewController <SBUISystemApertureElementContextObserver, SBUIPresentableHomeGestureContext, SBUIPresentableDismissalPreventionContext, SBUIPresentableGestureRecognizerPriorityContext, SBUIPresentableButtonEventsContext>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL ownsHomeGesture

  // instance methods
  -[SBUIBannerClientContainerViewController viewWillLayoutSubviews]
  -[SBUIBannerClientContainerViewController .cxx_destruct]
  -[SBUIBannerClientContainerViewController _transitionCoordinator]
  -[SBUIBannerClientContainerViewController ownsHomeGesture]
  -[SBUIBannerClientContainerViewController _respondToActions:forFBSScene:inUIScene:fromTransitionContext:]
  -[SBUIBannerClientContainerViewController acquireGestureRecognizerDefaultPriorityAssertionForReason:]
  -[SBUIBannerClientContainerViewController acquireTransitionDismissalPreventionAssertionForReason:]
  -[SBUIBannerClientContainerViewController acquireAssertionForButtonEvent:reason:]
  -[SBUIBannerClientContainerViewController initWithScene:presentable:context:]
  -[SBUIBannerClientContainerViewController systemApertureElementContextPresentationDidBecomePossible:]
  -[SBUIBannerClientContainerViewController setWantsHomeGesture:]
  -[SBUIBannerClientContainerViewController isAccessibilityIgnoringSmartInvertColors]
  -[SBUIBannerClientContainerViewController _buttonEventsActionForButtonEvent:]
  -[SBUIBannerClientContainerViewController _setButtonEventAction:forButtonEvent:]
  -[SBUIBannerClientContainerViewController _removeButtonEventsActionForButtonEvent:]


SBSUIInCallDestroySceneAction : BSAction
 @property  NSString *analyticsSource
 @property  long long destructionReason

  // instance methods
  -[SBSUIInCallDestroySceneAction valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIInCallDestroySceneAction keyDescriptionForSetting:]
  -[SBSUIInCallDestroySceneAction analyticsSource]
  -[SBSUIInCallDestroySceneAction initWithDestructionReason:analyticsSource:timeout:withResponseHandler:]
  -[SBSUIInCallDestroySceneAction destructionReason]


SBUIPasscodeLockViewWithKeyboard : SBUIPasscodeLockViewBase <SBUIPasscodeEntryFieldDelegate>
 @property  UILabel *statusField
 @property  UILabel *statusSubtitleView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUIPasscodeLockViewWithKeyboard passcode]
  -[SBUIPasscodeLockViewWithKeyboard resignFirstResponder]
  -[SBUIPasscodeLockViewWithKeyboard becomeFirstResponder]
  -[SBUIPasscodeLockViewWithKeyboard dealloc]
  -[SBUIPasscodeLockViewWithKeyboard .cxx_destruct]
  -[SBUIPasscodeLockViewWithKeyboard _updateFont]
  -[SBUIPasscodeLockViewWithKeyboard layoutSubviews]
  -[SBUIPasscodeLockViewWithKeyboard traitCollectionDidChange:]
  -[SBUIPasscodeLockViewWithKeyboard setShowsEmergencyCallButton:]
  -[SBUIPasscodeLockViewWithKeyboard updateStatusText:subtitle:animated:]
  -[SBUIPasscodeLockViewWithKeyboard becomeActiveWithAnimationSettings:]
  -[SBUIPasscodeLockViewWithKeyboard setShowsStatusField:]
  -[SBUIPasscodeLockViewWithKeyboard beginTransitionToState:]
  -[SBUIPasscodeLockViewWithKeyboard didEndTransitionToState:]
  -[SBUIPasscodeLockViewWithKeyboard updateForTransitionToPasscodeView:animated:]
  -[SBUIPasscodeLockViewWithKeyboard _luminanceBoostDidChange]
  -[SBUIPasscodeLockViewWithKeyboard _hardwareReturnKeyPressed:]
  -[SBUIPasscodeLockViewWithKeyboard _keyboardDidHideNotification:]
  -[SBUIPasscodeLockViewWithKeyboard _keyboardWillShowNotification:]
  -[SBUIPasscodeLockViewWithKeyboard _keyboardWillChangeFrameNotification:]
  -[SBUIPasscodeLockViewWithKeyboard _keyboardDidRequestDismissalNotification:]
  -[SBUIPasscodeLockViewWithKeyboard _notifyDelegateThatEmergencyCallButtonWasPressed]
  -[SBUIPasscodeLockViewWithKeyboard passcodeEntryFieldDidAcceptEntry:]
  -[SBUIPasscodeLockViewWithKeyboard passcodeEntryFieldDidCancelEntry:]
  -[SBUIPasscodeLockViewWithKeyboard passcodeEntryField:shouldInsertText:]
  -[SBUIPasscodeLockViewWithKeyboard passcodeEntryFieldTextDidChange:]
  -[SBUIPasscodeLockViewWithKeyboard passcodeEntryFieldShouldShowSystemKeyboard:]
  -[SBUIPasscodeLockViewWithKeyboard initWithLightStyle:]
  -[SBUIPasscodeLockViewWithKeyboard _viewForKeyboardTracking]
  -[SBUIPasscodeLockViewWithKeyboard _setKeyboardTracksLockView:]
  -[SBUIPasscodeLockViewWithKeyboard resignActiveWithAnimationSettings:]
  -[SBUIPasscodeLockViewWithKeyboard _notifyDelegatePasscodeEntered]
  -[SBUIPasscodeLockViewWithKeyboard _notifyDelegatePasscodeCancelled]
  -[SBUIPasscodeLockViewWithKeyboard _statusTitleView]
  -[SBUIPasscodeLockViewWithKeyboard _statusSubtitleView]
  -[SBUIPasscodeLockViewWithKeyboard _alphanumericPasscodeEntryField]
  -[SBUIPasscodeLockViewWithKeyboard _newStatusField]
  -[SBUIPasscodeLockViewWithKeyboard _newStatusSubtitleView]
  -[SBUIPasscodeLockViewWithKeyboard _acceptOrCancelReturnKeyPress]
  -[SBUIPasscodeLockViewWithKeyboard _toggleForEmergencyCall]
  -[SBUIPasscodeLockViewWithKeyboard _toggleForStatusField]
  -[SBUIPasscodeLockViewWithKeyboard _layoutForMinimizationState:]
  -[SBUIPasscodeLockViewWithKeyboard _keyboardFrameForInterfaceOrientation:]
  -[SBUIPasscodeLockViewWithKeyboard _keyboardToEntryFieldOffset]
  -[SBUIPasscodeLockViewWithKeyboard _statusFieldHeightWithWidth:]
  -[SBUIPasscodeLockViewWithKeyboard _statusTitleWidth]
  -[SBUIPasscodeLockViewWithKeyboard _largeTextEmergencyButtonMaxWidth]
  -[SBUIPasscodeLockViewWithKeyboard _layoutStatusView]
  -[SBUIPasscodeLockViewWithKeyboard _updateKeyboardHeightOffsetForKeyboardNotification:]
  -[SBUIPasscodeLockViewWithKeyboard statusField]
  -[SBUIPasscodeLockViewWithKeyboard setStatusField:]
  -[SBUIPasscodeLockViewWithKeyboard statusSubtitleView]
  -[SBUIPasscodeLockViewWithKeyboard setStatusSubtitleView:]


SBPasscodeKeyboardAnimator : _UIKeyboardAnimator
 @property  BSAnimationSettings *animationSettings
 @property  <SBPasscodeKeyboardAnimatorDelegate> *delegate

  // instance methods
  -[SBPasscodeKeyboardAnimator setDelegate:]
  -[SBPasscodeKeyboardAnimator delegate]
  -[SBPasscodeKeyboardAnimator setAnimationSettings:]
  -[SBPasscodeKeyboardAnimator .cxx_destruct]
  -[SBPasscodeKeyboardAnimator animationSettings]
  -[SBPasscodeKeyboardAnimator performAnimation:afterStarted:onCompletion:]
  -[SBPasscodeKeyboardAnimator prepareForAnimationWithState:]
  -[SBPasscodeKeyboardAnimator runAnimationWithState:]
  -[SBPasscodeKeyboardAnimator completeAnimationWithState:]


SBUIPasscodeLockViewInstallTonightLongNumericKeypad : SBUIPasscodeLockViewLongNumericKeypad
  // instance methods
  -[SBUIPasscodeLockViewInstallTonightLongNumericKeypad .cxx_destruct]
  -[SBUIPasscodeLockViewInstallTonightLongNumericKeypad setShowsCancelButton:]
  -[SBUIPasscodeLockViewInstallTonightLongNumericKeypad setShowsEmergencyCallButton:]
  -[SBUIPasscodeLockViewInstallTonightLongNumericKeypad passcodeEntryFieldTextDidChange:]
  -[SBUIPasscodeLockViewInstallTonightLongNumericKeypad initWithLightStyle:]
  -[SBUIPasscodeLockViewInstallTonightLongNumericKeypad _layoutStatusView]
  -[SBUIPasscodeLockViewInstallTonightLongNumericKeypad _actionButtonHit]
  -[SBUIPasscodeLockViewInstallTonightLongNumericKeypad _setShowsEmergencyCallButton:fromCancelButton:]
  -[SBUIPasscodeLockViewInstallTonightLongNumericKeypad _setShowsCancelButton:fromEmergencyCallButton:]
  -[SBUIPasscodeLockViewInstallTonightLongNumericKeypad _configureActionButton]
  -[SBUIPasscodeLockViewInstallTonightLongNumericKeypad _sizeLabel:]
  -[SBUIPasscodeLockViewInstallTonightLongNumericKeypad _layoutActionButton]


SBUIPasscodeLockNumberPad : UIView <SBNumberPadDelegate, CAAnimationDelegate, UIPointerInteractionDelegate>
 @property  UIControl<SBUIPasscodeNumberPadButton> *downButton
 @property  double ancillaryButtonOffset
 @property  SBUIButton *emergencyCallButton
 @property  SBUIButton *backspaceButton
 @property  SBUIButton *cancelButton
 @property  UIColor *reduceTransparencyButtonColor
 @property  <SBUIPasscodeLockNumberPadDelegate> *delegate
 @property  BOOL showsBackspaceButton
 @property  BOOL showsEmergencyCallButton
 @property  BOOL showsCancelButton
 @property  NSArray *buttons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBUIPasscodeLockNumberPad _buttonForCharacter:withLightStyle:]
  +[SBUIPasscodeLockNumberPad _inputButtonCircleSize]
  +[SBUIPasscodeLockNumberPad _inputButtonCircleSpacing]

  // instance methods
  -[SBUIPasscodeLockNumberPad setDelegate:]
  -[SBUIPasscodeLockNumberPad delegate]
  -[SBUIPasscodeLockNumberPad cancelButton]
  -[SBUIPasscodeLockNumberPad .cxx_destruct]
  -[SBUIPasscodeLockNumberPad setShowsCancelButton:]
  -[SBUIPasscodeLockNumberPad buttons]
  -[SBUIPasscodeLockNumberPad showsCancelButton]
  -[SBUIPasscodeLockNumberPad pointerInteraction:styleForRegion:]
  -[SBUIPasscodeLockNumberPad pointerInteraction:regionForRequest:defaultRegion:]
  -[SBUIPasscodeLockNumberPad traitCollectionDidChange:]
  -[SBUIPasscodeLockNumberPad setVisible:animated:]
  -[SBUIPasscodeLockNumberPad downButton]
  -[SBUIPasscodeLockNumberPad _cancelButtonHit]
  -[SBUIPasscodeLockNumberPad _emergencyCallButtonHit]
  -[SBUIPasscodeLockNumberPad showsEmergencyCallButton]
  -[SBUIPasscodeLockNumberPad setShowsEmergencyCallButton:]
  -[SBUIPasscodeLockNumberPad emergencyCallButton]
  -[SBUIPasscodeLockNumberPad initWithDefaultSizeAndLightStyle:]
  -[SBUIPasscodeLockNumberPad _backspaceButtonHit]
  -[SBUIPasscodeLockNumberPad _numberPadTouchDown:forEvent:]
  -[SBUIPasscodeLockNumberPad _numberPadTouchUp:forEvent:]
  -[SBUIPasscodeLockNumberPad _numberPadTouchCancelled:forEvent:]
  -[SBUIPasscodeLockNumberPad _numberPadTouchDrag:forEvent:]
  -[SBUIPasscodeLockNumberPad setShowsBackspaceButton:]
  -[SBUIPasscodeLockNumberPad _distanceToTopOfFirstButton]
  -[SBUIPasscodeLockNumberPad setReduceTransparencyButtonColor:]
  -[SBUIPasscodeLockNumberPad _setSnapshotsDisabled:]
  -[SBUIPasscodeLockNumberPad _fontForAncillaryButton]
  -[SBUIPasscodeLockNumberPad _configureAdditionalButtons]
  -[SBUIPasscodeLockNumberPad showsBackspaceButton]
  -[SBUIPasscodeLockNumberPad ancillaryButtonOffset]
  -[SBUIPasscodeLockNumberPad setAncillaryButtonOffset:]
  -[SBUIPasscodeLockNumberPad setDownButton:]
  -[SBUIPasscodeLockNumberPad backspaceButton]
  -[SBUIPasscodeLockNumberPad reduceTransparencyButtonColor]


SBNumberPadWithDelegate : TPNumberPad
 @property  <SBNumberPadDelegate> *delegate

  // instance methods
  -[SBNumberPadWithDelegate buttonDown:]
  -[SBNumberPadWithDelegate setDelegate:]
  -[SBNumberPadWithDelegate delegate]
  -[SBNumberPadWithDelegate hitTest:withEvent:]
  -[SBNumberPadWithDelegate .cxx_destruct]
  -[SBNumberPadWithDelegate buttonUp:]
  -[SBNumberPadWithDelegate buttonCancelled:]
  -[SBNumberPadWithDelegate buttonForPoint:forEvent:]
  -[SBNumberPadWithDelegate touchAtPoint:isCloseToButton:]


SBEmptyButtonView : UIView <TPNumberPadButtonProtocol>
 @property  long long character
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBEmptyButtonView intrinsicContentSize]
  -[SBEmptyButtonView initForCharacter:]
  -[SBEmptyButtonView initForCharacter:style:]
  -[SBEmptyButtonView character]
  -[SBEmptyButtonView setCharacter:]


SBPasscodeNumberPadButton : TPNumberPadDarkStyleButton <SBUIPasscodeNumberPadButton>
 @property  UIColor *reduceTransparencyButtonColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBPasscodeNumberPadButton defaultSize]
  +[SBPasscodeNumberPadButton _characterTypeForCharacter:]
  +[SBPasscodeNumberPadButton _stringCharacterForCharacter:]
  +[SBPasscodeNumberPadButton outerCircleDiameter]
  +[SBPasscodeNumberPadButton paddingOutsideRing]
  +[SBPasscodeNumberPadButton _numberPadButtonOuterCircleDiameter]
  +[SBPasscodeNumberPadButton _shouldUseAlternativeCirlceViewAlphas]
  +[SBPasscodeNumberPadButton unhighlightedCircleViewAlpha]
  +[SBPasscodeNumberPadButton highlightedCircleViewAlpha]

  // instance methods
  -[SBPasscodeNumberPadButton .cxx_destruct]
  -[SBPasscodeNumberPadButton conformsToSBUIPasscodeNumberPadButton]
  -[SBPasscodeNumberPadButton setReduceTransparencyButtonColor:]
  -[SBPasscodeNumberPadButton reduceTransparencyButtonColor]
  -[SBPasscodeNumberPadButton initForCharacter:]
  -[SBPasscodeNumberPadButton characterType]
  -[SBPasscodeNumberPadButton stringCharacter]


SBLightPasscodeNumberPadButton : TPNumberPadLightStyleButton <SBUIPasscodeNumberPadButton>
 @property  UIColor *reduceTransparencyButtonColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBLightPasscodeNumberPadButton defaultSize]
  +[SBLightPasscodeNumberPadButton paddingOutsideRing]
  +[SBLightPasscodeNumberPadButton _numberPadButtonOuterCircleDiameter]
  +[SBLightPasscodeNumberPadButton _shouldUseAlternativeCirlceViewAlphas]
  +[SBLightPasscodeNumberPadButton unhighlightedCircleViewAlpha]
  +[SBLightPasscodeNumberPadButton highlightedCircleViewAlpha]
  +[SBLightPasscodeNumberPadButton usesTelephonyGlyphsWhereAvailable]

  // instance methods
  -[SBLightPasscodeNumberPadButton .cxx_destruct]
  -[SBLightPasscodeNumberPadButton conformsToSBUIPasscodeNumberPadButton]
  -[SBLightPasscodeNumberPadButton setReduceTransparencyButtonColor:]
  -[SBLightPasscodeNumberPadButton reduceTransparencyButtonColor]
  -[SBLightPasscodeNumberPadButton initForCharacter:]
  -[SBLightPasscodeNumberPadButton characterType]
  -[SBLightPasscodeNumberPadButton stringCharacter]


SBSUIWallpaperServiceInterfaceSpecification : NSObject
  // class methods
  +[SBSUIWallpaperServiceInterfaceSpecification interface]
  +[SBSUIWallpaperServiceInterfaceSpecification identifier]
  +[SBSUIWallpaperServiceInterfaceSpecification serviceQuality]


SBUIPasscodeLockViewWithKeypad : SBUIPasscodeLockViewBase <SBUIPasscodeLockNumberPadDelegate, SBUIPasscodeEntryFieldDelegate>
 @property  NSString *lastCharacterBeforeBackspace
 @property  UILabel *statusTitleView
 @property  UILabel *statusSubtitleView
 @property  BOOL undoInputOnTouchCancellation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUIPasscodeLockViewWithKeypad passcode]
  -[SBUIPasscodeLockViewWithKeypad _updateFonts]
  -[SBUIPasscodeLockViewWithKeypad dealloc]
  -[SBUIPasscodeLockViewWithKeypad reset]
  -[SBUIPasscodeLockViewWithKeypad .cxx_destruct]
  -[SBUIPasscodeLockViewWithKeypad setShowsCancelButton:]
  -[SBUIPasscodeLockViewWithKeypad layoutSubviews]
  -[SBUIPasscodeLockViewWithKeypad _usesLightStyle]
  -[SBUIPasscodeLockViewWithKeypad traitCollectionDidChange:]
  -[SBUIPasscodeLockViewWithKeypad init]
  -[SBUIPasscodeLockViewWithKeypad _numberPad]
  -[SBUIPasscodeLockViewWithKeypad setShowsEmergencyCallButton:]
  -[SBUIPasscodeLockViewWithKeypad resetForFailedPasscode]
  -[SBUIPasscodeLockViewWithKeypad setKeypadVisible:animated:]
  -[SBUIPasscodeLockViewWithKeypad updateStatusText:subtitle:animated:]
  -[SBUIPasscodeLockViewWithKeypad setShowsStatusField:]
  -[SBUIPasscodeLockViewWithKeypad willTransitionToPasscodeView]
  -[SBUIPasscodeLockViewWithKeypad updateForTransitionToPasscodeView:animated:]
  -[SBUIPasscodeLockViewWithKeypad passcodeEntryFieldDidAcceptEntry:]
  -[SBUIPasscodeLockViewWithKeypad passcodeEntryFieldDidCancelEntry:]
  -[SBUIPasscodeLockViewWithKeypad passcodeEntryField:shouldInsertText:]
  -[SBUIPasscodeLockViewWithKeypad passcodeEntryFieldTextDidChange:]
  -[SBUIPasscodeLockViewWithKeypad initWithLightStyle:]
  -[SBUIPasscodeLockViewWithKeypad _notifyDelegatePasscodeEntered]
  -[SBUIPasscodeLockViewWithKeypad _notifyDelegatePasscodeCancelled]
  -[SBUIPasscodeLockViewWithKeypad _statusTitleView]
  -[SBUIPasscodeLockViewWithKeypad _statusSubtitleView]
  -[SBUIPasscodeLockViewWithKeypad _newStatusSubtitleView]
  -[SBUIPasscodeLockViewWithKeypad _toggleForStatusField]
  -[SBUIPasscodeLockViewWithKeypad _statusTitleWidth]
  -[SBUIPasscodeLockViewWithKeypad _layoutStatusView]
  -[SBUIPasscodeLockViewWithKeypad statusSubtitleView]
  -[SBUIPasscodeLockViewWithKeypad setStatusSubtitleView:]
  -[SBUIPasscodeLockViewWithKeypad passcodeLockNumberPad:keyDown:]
  -[SBUIPasscodeLockViewWithKeypad passcodeLockNumberPad:keyUp:]
  -[SBUIPasscodeLockViewWithKeypad passcodeLockNumberPad:keyCancelled:]
  -[SBUIPasscodeLockViewWithKeypad passcodeLockNumberPadCancelButtonHit:]
  -[SBUIPasscodeLockViewWithKeypad passcodeLockNumberPadBackspaceButtonHit:]
  -[SBUIPasscodeLockViewWithKeypad passcodeLockNumberPadEmergencyCallButtonHit:]
  -[SBUIPasscodeLockViewWithKeypad _newEntryField]
  -[SBUIPasscodeLockViewWithKeypad _includesStatusView]
  -[SBUIPasscodeLockViewWithKeypad _setHasInput:]
  -[SBUIPasscodeLockViewWithKeypad _entryFieldBottomYDistanceFromNumberPadTopButton]
  -[SBUIPasscodeLockViewWithKeypad _statusTitleViewTitleFont]
  -[SBUIPasscodeLockViewWithKeypad _statusSubtitleViewTitleFont]
  -[SBUIPasscodeLockViewWithKeypad _newStatusTitleView]
  -[SBUIPasscodeLockViewWithKeypad _offsetForCenteringTitleAndEntryFieldFrame:withTopYvalue:bottomYvalue:]
  -[SBUIPasscodeLockViewWithKeypad _defaultEntryFieldPosition]
  -[SBUIPasscodeLockViewWithKeypad _layoutEntryField]
  -[SBUIPasscodeLockViewWithKeypad _noteStringEntered:eligibleForPlayingSounds:]
  -[SBUIPasscodeLockViewWithKeypad _noteBackspaceHit]
  -[SBUIPasscodeLockViewWithKeypad _noteKeyUp:]
  -[SBUIPasscodeLockViewWithKeypad _numericEntryFieldIfExists]
  -[SBUIPasscodeLockViewWithKeypad _undoInputOnTouchCancellation]
  -[SBUIPasscodeLockViewWithKeypad _setUndoInputOnTouchCancellation:]
  -[SBUIPasscodeLockViewWithKeypad lastCharacterBeforeBackspace]
  -[SBUIPasscodeLockViewWithKeypad setLastCharacterBeforeBackspace:]
  -[SBUIPasscodeLockViewWithKeypad statusTitleView]
  -[SBUIPasscodeLockViewWithKeypad setStatusTitleView:]


SBUIPasscodeLockViewSimpleFixedDigitKeypad : SBUIPasscodeLockViewWithKeypad
 @property  unsigned long numberOfDigits

  // instance methods
  -[SBUIPasscodeLockViewSimpleFixedDigitKeypad initWithLightStyle:]
  -[SBUIPasscodeLockViewSimpleFixedDigitKeypad _newEntryField]
  -[SBUIPasscodeLockViewSimpleFixedDigitKeypad _entryFieldBottomYDistanceFromNumberPadTopButton]
  -[SBUIPasscodeLockViewSimpleFixedDigitKeypad initWithLightStyle:numberOfDigits:]
  -[SBUIPasscodeLockViewSimpleFixedDigitKeypad numberOfDigits]


SBUIPopoverExtensionHostViewController : _UIRemoteViewController <_SBUIPopoverExtensionHostInterface>
 @property  <_SBUIPopoverExtensionHostDelegate> *delegate

  // class methods
  +[SBUIPopoverExtensionHostViewController exportedInterface]
  +[SBUIPopoverExtensionHostViewController serviceViewControllerInterface]

  // instance methods
  -[SBUIPopoverExtensionHostViewController _canShowWhileLocked]
  -[SBUIPopoverExtensionHostViewController setDelegate:]
  -[SBUIPopoverExtensionHostViewController delegate]
  -[SBUIPopoverExtensionHostViewController .cxx_destruct]
  -[SBUIPopoverExtensionHostViewController viewServiceDidTerminateWithError:]
  -[SBUIPopoverExtensionHostViewController __shouldRemoteViewControllerFenceOperations]
  -[SBUIPopoverExtensionHostViewController _extensionRequestsDismiss]


SBUIBackgroundContentTouchAction : BSAction

SBUIButton : UIButton
 @property  {UIEdgeInsets=dddd} hitAreaAdjustments

  // instance methods
  -[SBUIButton pointInside:withEvent:]
  -[SBUIButton initWithFrame:]
  -[SBUIButton hitAreaAdjustments]
  -[SBUIButton setHitAreaAdjustments:]


UIResizableView : UIView
  // instance methods
  -[UIResizableView sizeThatFits:]


SBUILockOverlayView : SBFTouchPassThroughView
 @property  <SBUILockOverlayViewDelegate> *delegate
 @property  unsigned long style
 @property  SBLockOverlayStylePropertiesFactory *underlayPropertiesFactory
 @property  _UILegibilitySettings *legibilitySettings
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UIButton *actionButton

  // instance methods
  -[SBUILockOverlayView subtitleLabel]
  -[SBUILockOverlayView setDelegate:]
  -[SBUILockOverlayView style]
  -[SBUILockOverlayView delegate]
  -[SBUILockOverlayView .cxx_destruct]
  -[SBUILockOverlayView _subtitleFont]
  -[SBUILockOverlayView layoutSubviews]
  -[SBUILockOverlayView _titleFont]
  -[SBUILockOverlayView initWithFrame:]
  -[SBUILockOverlayView initWithFrame:style:]
  -[SBUILockOverlayView legibilitySettings]
  -[SBUILockOverlayView titleLabel]
  -[SBUILockOverlayView actionButton]
  -[SBUILockOverlayView _buttonPressed]
  -[SBUILockOverlayView _legibilitySettingsForStyle:]
  -[SBUILockOverlayView _actionFont]
  -[SBUILockOverlayView _numberOfLinesForText:font:size:]
  -[SBUILockOverlayView _sizeView:forFixedWith:]
  -[SBUILockOverlayView _maxLabelWidth]
  -[SBUILockOverlayView underlayPropertiesFactory]


SBUIPasscodeBiometricResource : NSObject <SBUIBiometricResource>
 @property  BOOL hasEnrolledIdentities
 @property  BOOL hasBiometricAuthenticationCapabilityEnabled
 @property  BOOL fingerOn
 @property  BOOL fingerDetectEnabled
 @property  BOOL hasMesaSupport
 @property  BOOL hasPoseidonSupport
 @property  BOOL hasPearlSupport
 @property  BOOL pearlDetectEnabled
 @property  BOOL matchingEnabled
 @property  BOOL matchingAllowed
 @property  unsigned long biometricLockoutState
 @property  BOOL periocularMatchingEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUIPasscodeBiometricResource biometricLockoutState]
  -[SBUIPasscodeBiometricResource isFingerOn]
  -[SBUIPasscodeBiometricResource acquireFingerDetectionWantedAssertionForReason:]
  -[SBUIPasscodeBiometricResource hasMesaSupport]
  -[SBUIPasscodeBiometricResource acquireSimulatedLockoutAssertionWithLockoutState:forReason:]
  -[SBUIPasscodeBiometricResource refreshMatchMode]
  -[SBUIPasscodeBiometricResource addObserver:]
  -[SBUIPasscodeBiometricResource hasPearlSupport]
  -[SBUIPasscodeBiometricResource isMatchingAllowed]
  -[SBUIPasscodeBiometricResource isMatchingEnabled]
  -[SBUIPasscodeBiometricResource .cxx_destruct]
  -[SBUIPasscodeBiometricResource isFingerDetectEnabled]
  -[SBUIPasscodeBiometricResource acquireMatchingAssertionWithMode:reason:]
  -[SBUIPasscodeBiometricResource hasEnrolledIdentities]
  -[SBUIPasscodeBiometricResource hasPoseidonSupport]
  -[SBUIPasscodeBiometricResource acquireFaceDetectionWantedAssertionForReason:]
  -[SBUIPasscodeBiometricResource hasBiometricAuthenticationCapabilityEnabled]
  -[SBUIPasscodeBiometricResource isPearlDetectEnabled]
  -[SBUIPasscodeBiometricResource resumeMatchingAdvisory:]
  -[SBUIPasscodeBiometricResource isPeriocularMatchingEnabled]
  -[SBUIPasscodeBiometricResource resumeMatchingForAssertion:advisory:]
  -[SBUIPasscodeBiometricResource removeObserver:]
  -[SBUIPasscodeBiometricResource acquireFingerDetectionWantedAssertionForReason:HIDEventsOnly:]
  -[SBUIPasscodeBiometricResource initWithBiometricResource:overrideMatchingAssertionFactory:]


SBInteractionPassThroughView : SBFTouchPassThroughView

SBUIProudLockContainerViewController : UIViewController <SBUIProudLockContainerViewControllerOrientationProvider>
 @property  <SBUIProudLockContainerViewControllerLockStatusProvider> *authenticationInformationProvider
 @property  BOOL canShowScanningState
 @property  BOOL shouldShowScanningState
 @property  BOOL canShowCoachingCondition
 @property  BOOL canLeaveCoachingCondition
 @property  BOOL hasSeenFaceSinceScreenOn
 @property  BOOL canShowCameraCovered
 @property  @? unlockCompletion
 @property  unsigned long forceCount
 @property  {?=BBdBddddBBBQ} configuration
 @property  <SBUIProudLockContainerViewControllerDelegate> *delegate
 @property  _UILegibilitySettings *legibilitySettings
 @property  BOOL authenticated
 @property  BOOL screenOn
 @property  BOOL suppressScanningState
 @property  BOOL suppressNotLooking
 @property  UIView *cameraCoveredView
 @property  BOOL guidanceTextVisible
 @property  BOOL suppressAlongsideCoaching
 @property  BOOL isPortrait

  // instance methods
  -[SBUIProudLockContainerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBUIProudLockContainerViewController _proudLockIconView]
  -[SBUIProudLockContainerViewController setConfiguration:]
  -[SBUIProudLockContainerViewController setSuppressScanningState:]
  -[SBUIProudLockContainerViewController isScreenOn]
  -[SBUIProudLockContainerViewController _performForcedUpdate:]
  -[SBUIProudLockContainerViewController _handleBiometricEvent:]
  -[SBUIProudLockContainerViewController _canShowWhileLocked]
  -[SBUIProudLockContainerViewController canShowCoachingCondition]
  -[SBUIProudLockContainerViewController setCanShowCameraCovered:]
  -[SBUIProudLockContainerViewController _allowCoachingConditionImmediately:]
  -[SBUIProudLockContainerViewController _dontCallThis_updateCoachingCondition:animated:]
  -[SBUIProudLockContainerViewController _canTransitionToState:]
  -[SBUIProudLockContainerViewController setDelegate:]
  -[SBUIProudLockContainerViewController _setCoachingCondition:animated:force:]
  -[SBUIProudLockContainerViewController handleBiometricEvent:]
  -[SBUIProudLockContainerViewController setForceCount:]
  -[SBUIProudLockContainerViewController _clearCoachingCondition]
  -[SBUIProudLockContainerViewController setAuthenticationInformationProvider:]
  -[SBUIProudLockContainerViewController _updateIconViewStateAnimated:force:completion:]
  -[SBUIProudLockContainerViewController delegate]
  -[SBUIProudLockContainerViewController _iconViewStateForCoachingCondition:]
  -[SBUIProudLockContainerViewController configuration]
  -[SBUIProudLockContainerViewController isAuthenticated]
  -[SBUIProudLockContainerViewController _setLocalTransformForOrientation:]
  -[SBUIProudLockContainerViewController _setIconState:animated:options:force:completion:]
  -[SBUIProudLockContainerViewController _reallyAllowCameraCovered]
  -[SBUIProudLockContainerViewController reset]
  -[SBUIProudLockContainerViewController _updateLockForFaceInView]
  -[SBUIProudLockContainerViewController setScreenOn:]
  -[SBUIProudLockContainerViewController _dontCallThis_showLockIfNeededAnimated:force:completion:]
  -[SBUIProudLockContainerViewController unlockCompletion]
  -[SBUIProudLockContainerViewController .cxx_destruct]
  -[SBUIProudLockContainerViewController _isShowingCoachingCondition:]
  -[SBUIProudLockContainerViewController viewDidLoad]
  -[SBUIProudLockContainerViewController suppressNotLooking]
  -[SBUIProudLockContainerViewController viewWillAppear:]
  -[SBUIProudLockContainerViewController loadView]
  -[SBUIProudLockContainerViewController setShouldShowScanningState:]
  -[SBUIProudLockContainerViewController _setCoachingCondition:animated:]
  -[SBUIProudLockContainerViewController canLeaveCoachingCondition]
  -[SBUIProudLockContainerViewController handlePhoneUnlockWithWatchError:]
  -[SBUIProudLockContainerViewController canShowCameraCovered]
  -[SBUIProudLockContainerViewController orientationProvider]
  -[SBUIProudLockContainerViewController setCanLeaveCoachingCondition:]
  -[SBUIProudLockContainerViewController setHasSeenFaceSinceScreenOn:]
  -[SBUIProudLockContainerViewController setOrientationProvider:]
  -[SBUIProudLockContainerViewController cameraCoveredView]
  -[SBUIProudLockContainerViewController testProudLockIconView]
  -[SBUIProudLockContainerViewController _allowCoachingCondition]
  -[SBUIProudLockContainerViewController setLegibilitySettings:]
  -[SBUIProudLockContainerViewController setSuppressNotLooking:]
  -[SBUIProudLockContainerViewController suppressAlongsideCoaching]
  -[SBUIProudLockContainerViewController updateLockForBiometricMatchFailure]
  -[SBUIProudLockContainerViewController _isBiometricLockedOut]
  -[SBUIProudLockContainerViewController updateForScreenWillTurnOff]
  -[SBUIProudLockContainerViewController _startScanningStateTimer]
  -[SBUIProudLockContainerViewController _allowScanningState]
  -[SBUIProudLockContainerViewController _allowLeavingCoachingCondition]
  -[SBUIProudLockContainerViewController _setCounterTransformForOrientation:]
  -[SBUIProudLockContainerViewController _updateIconViewStateAnimated:]
  -[SBUIProudLockContainerViewController _provideFeedbackForCoachingCondition:]
  -[SBUIProudLockContainerViewController _setCoachingCondition:animated:skipScanningState:force:]
  -[SBUIProudLockContainerViewController _effectiveCoachingConditionForCondition:]
  -[SBUIProudLockContainerViewController setTestProudLockIconView:]
  -[SBUIProudLockContainerViewController canShowScanningState]
  -[SBUIProudLockContainerViewController setCanShowCoachingCondition:]
  -[SBUIProudLockContainerViewController authenticationInformationProvider]
  -[SBUIProudLockContainerViewController _effectiveCoachingConditionForCondition:orientation:]
  -[SBUIProudLockContainerViewController hasSeenFaceSinceScreenOn]
  -[SBUIProudLockContainerViewController initWithAuthenticationInformationProvider:]
  -[SBUIProudLockContainerViewController _setIconState:animated:]
  -[SBUIProudLockContainerViewController _actualIconState]
  -[SBUIProudLockContainerViewController shouldShowScanningState]
  -[SBUIProudLockContainerViewController _updateLockForMatchStarted]
  -[SBUIProudLockContainerViewController setGuidanceTextVisible:]
  -[SBUIProudLockContainerViewController suppressScanningState]
  -[SBUIProudLockContainerViewController _reallyAllowLeavingCoachingCondition]
  -[SBUIProudLockContainerViewController setAuthenticated:]
  -[SBUIProudLockContainerViewController forceCount]
  -[SBUIProudLockContainerViewController setScreenOn:fromUnlockSource:]
  -[SBUIProudLockContainerViewController setUnlockCompletion:]
  -[SBUIProudLockContainerViewController legibilitySettings]
  -[SBUIProudLockContainerViewController setCanShowScanningState:]
  -[SBUIProudLockContainerViewController isGuidanceTextVisible]
  -[SBUIProudLockContainerViewController isPortrait]
  -[SBUIProudLockContainerViewController _reallyAllowCoachingConditionAnimated:]
  -[SBUIProudLockContainerViewController _updateScanningState]
  -[SBUIProudLockContainerViewController setSuppressAlongsideCoaching:]
  -[SBUIProudLockContainerViewController _allowCameraCoveredImmediately:]
  -[SBUIProudLockContainerViewController setAuthenticated:completion:]


SBUIShapeView : UIView
  // class methods
  +[SBUIShapeView layerClass]

  // instance methods
  -[SBUIShapeView setFillColor:]
  -[SBUIShapeView setPath:]
  -[SBUIShapeView _shouldAnimatePropertyWithKey:]
  -[SBUIShapeView _shapeLayer]
  -[SBUIShapeView setFillRule:]


SBUIPowerDownViewController : UIViewController <SBUIPowerDownViewDelegate, SBUIPowerDownViewControllerInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SBUIPowerDownViewControllerDelegate> *powerDownDelegate

  // instance methods
  -[SBUIPowerDownViewController .cxx_destruct]
  -[SBUIPowerDownViewController viewWillAppear:]
  -[SBUIPowerDownViewController loadView]
  -[SBUIPowerDownViewController viewWillDisappear:]
  -[SBUIPowerDownViewController powerDownViewRequestCancel:]
  -[SBUIPowerDownViewController powerDownViewRequestPowerDown:]
  -[SBUIPowerDownViewController powerDownViewAnimateOutCompleted:]
  -[SBUIPowerDownViewController powerDownViewWillAnimateIn:]
  -[SBUIPowerDownViewController powerDownViewWillAnimateOut:]
  -[SBUIPowerDownViewController showPowerDownFindMyAlert]
  -[SBUIPowerDownViewController showPowerDownFindMyAlertWithProceed:cancelCompletion:]
  -[SBUIPowerDownViewController powerDownDelegate]
  -[SBUIPowerDownViewController setPowerDownDelegate:]
  -[SBUIPowerDownViewController _powerDownView]


SBSUILoginUISceneClientSettings : UIApplicationSceneClientSettings <SBSUILoginUISceneClientSettings>
 @property  long long idleTimerMode
 @property  NSString *statusBarUserNameOverride
 @property  long long rotationMode
 @property  unsigned long wallpaperMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBSUILoginUISceneClientSettings wallpaperMode]
  -[SBSUILoginUISceneClientSettings idleTimerMode]
  -[SBSUILoginUISceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBSUILoginUISceneClientSettings keyDescriptionForSetting:]
  -[SBSUILoginUISceneClientSettings mutableCopyWithZone:]
  -[SBSUILoginUISceneClientSettings rotationMode]
  -[SBSUILoginUISceneClientSettings statusBarUserNameOverride]


SBSUIMutableLoginUISceneClientSettings : UIMutableApplicationSceneClientSettings <SBSUILoginUISceneClientSettings>
 @property  long long idleTimerMode
 @property  NSString *statusBarUserNameOverride
 @property  long long rotationMode
 @property  unsigned long wallpaperMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBSUIMutableLoginUISceneClientSettings wallpaperMode]
  -[SBSUIMutableLoginUISceneClientSettings idleTimerMode]
  -[SBSUIMutableLoginUISceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIMutableLoginUISceneClientSettings copyWithZone:]
  -[SBSUIMutableLoginUISceneClientSettings setWallpaperMode:]
  -[SBSUIMutableLoginUISceneClientSettings keyDescriptionForSetting:]
  -[SBSUIMutableLoginUISceneClientSettings setIdleTimerMode:]
  -[SBSUIMutableLoginUISceneClientSettings rotationMode]
  -[SBSUIMutableLoginUISceneClientSettings setRotationMode:]
  -[SBSUIMutableLoginUISceneClientSettings statusBarUserNameOverride]
  -[SBSUIMutableLoginUISceneClientSettings setStatusBarUserNameOverride:]


SBUILegibilitySettings : NSObject <SBUILegibilitySettings>
 @property  UIColor *primaryColor
 @property  UIColor *secondaryColor
 @property  UIColor *shadowColor
 @property  long long style
 @property  {?=dddq} shadowSettings
 @property  double minFillHeight
 @property  double imageOutset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBUILegibilitySettings supportsSecureCoding]
  +[SBUILegibilitySettings sharedInstanceForStyle:]

  // instance methods
  -[SBUILegibilitySettings shadowColor]
  -[SBUILegibilitySettings shadowRadius]
  -[SBUILegibilitySettings encodeWithCoder:]
  -[SBUILegibilitySettings style]
  -[SBUILegibilitySettings .cxx_destruct]
  -[SBUILegibilitySettings primaryColor]
  -[SBUILegibilitySettings secondaryColor]
  -[SBUILegibilitySettings compositingFilter]
  -[SBUILegibilitySettings copyWithZone:]
  -[SBUILegibilitySettings shadowAlpha]
  -[SBUILegibilitySettings initWithStyle:]
  -[SBUILegibilitySettings isEqual:]
  -[SBUILegibilitySettings initWithCoder:]
  -[SBUILegibilitySettings initWithContentColor:]
  -[SBUILegibilitySettings initWithContentColor:contrast:]
  -[SBUILegibilitySettings initWithStyle:contentColor:]
  -[SBUILegibilitySettings initWithStyle:primaryColor:secondaryColor:shadowColor:]
  -[SBUILegibilitySettings imageOutset]
  -[SBUILegibilitySettings minFillHeight]
  -[SBUILegibilitySettings shadowSettings]
  -[SBUILegibilitySettings initWithStyle:primaryColor:secondaryColor:shadowColor:shadowSettings:]
  -[SBUILegibilitySettings initWithStyle:primaryColor:secondaryColor:shadowColor:shadowSettings:minFillHeight:]
  -[SBUILegibilitySettings _UILegibilitySettings]
  -[SBUILegibilitySettings isEqualToLegibilitySettings:]
  -[SBUILegibilitySettings _configureForStyle:contentColor:]


SBUIPopoverExtensionRemoteViewController : UIViewController <_SBUIPopoverExtensionRemoteInterface>
 @property  <_SBUIPopoverExtensionHostInterface> *hostService
 @property  UIViewController<SBUIPopoverExtension> *extensionViewController

  // class methods
  +[SBUIPopoverExtensionRemoteViewController _isSecureForRemoteViewService]
  +[SBUIPopoverExtensionRemoteViewController _exportedInterface]
  +[SBUIPopoverExtensionRemoteViewController _remoteViewControllerInterface]

  // instance methods
  -[SBUIPopoverExtensionRemoteViewController addChildViewController:]
  -[SBUIPopoverExtensionRemoteViewController _canShowWhileLocked]
  -[SBUIPopoverExtensionRemoteViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[SBUIPopoverExtensionRemoteViewController initWithNibName:bundle:]
  -[SBUIPopoverExtensionRemoteViewController viewDidAppear:]
  -[SBUIPopoverExtensionRemoteViewController dealloc]
  -[SBUIPopoverExtensionRemoteViewController .cxx_destruct]
  -[SBUIPopoverExtensionRemoteViewController viewWillAppear:]
  -[SBUIPopoverExtensionRemoteViewController viewDidDisappear:]
  -[SBUIPopoverExtensionRemoteViewController viewWillDisappear:]
  -[SBUIPopoverExtensionRemoteViewController beginRequestWithExtensionContext:]
  -[SBUIPopoverExtensionRemoteViewController _willAppearInRemoteViewController:]
  -[SBUIPopoverExtensionRemoteViewController extensionViewController]
  -[SBUIPopoverExtensionRemoteViewController setExtensionViewController:]
  -[SBUIPopoverExtensionRemoteViewController hostService]
  -[SBUIPopoverExtensionRemoteViewController setHostService:]
  -[SBUIPopoverExtensionRemoteViewController _updateForBundleIdentifier:]
  -[SBUIPopoverExtensionRemoteViewController _updateForWidgetConfiguration:]
  -[SBUIPopoverExtensionRemoteViewController _invalidateSBUIPopoverExtension]
  -[SBUIPopoverExtensionRemoteViewController popoverExtensionContext]
  -[SBUIPopoverExtensionRemoteViewController _setupChildViewController:]


SBUIPasscodeLockViewLongNumericKeypad : SBUIPasscodeLockViewWithKeypad
  // instance methods
  -[SBUIPasscodeLockViewLongNumericKeypad initWithLightStyle:]
  -[SBUIPasscodeLockViewLongNumericKeypad _newEntryField]
  -[SBUIPasscodeLockViewLongNumericKeypad _setHasInput:]
  -[SBUIPasscodeLockViewLongNumericKeypad _entryFieldBottomYDistanceFromNumberPadTopButton]
  -[SBUIPasscodeLockViewLongNumericKeypad _longNumericEntryField]


SBUIPasscodeEntryField : UIView <UITextFieldDelegate>
 @property  UITextField *textField
 @property  <SBUIPasscodeEntryFieldDelegate> *delegate
 @property  NSString *stringValue
 @property  UIColor *customBackgroundColor
 @property  UIFont *font
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBUIPasscodeEntryField _usesTextFieldForFirstResponder]

  // instance methods
  -[SBUIPasscodeEntryField resignFirstResponder]
  -[SBUIPasscodeEntryField isFirstResponder]
  -[SBUIPasscodeEntryField _viewSize]
  -[SBUIPasscodeEntryField _textField]
  -[SBUIPasscodeEntryField becomeFirstResponder]
  -[SBUIPasscodeEntryField textFieldShouldReturn:]
  -[SBUIPasscodeEntryField appendString:]
  -[SBUIPasscodeEntryField setDelegate:]
  -[SBUIPasscodeEntryField delegate]
  -[SBUIPasscodeEntryField stringValue]
  -[SBUIPasscodeEntryField reset]
  -[SBUIPasscodeEntryField textFieldShouldBeginEditing:]
  -[SBUIPasscodeEntryField .cxx_destruct]
  -[SBUIPasscodeEntryField customBackgroundColor]
  -[SBUIPasscodeEntryField sizeThatFits:]
  -[SBUIPasscodeEntryField font]
  -[SBUIPasscodeEntryField setFont:]
  -[SBUIPasscodeEntryField canBecomeFirstResponder]
  -[SBUIPasscodeEntryField setStringValue:]
  -[SBUIPasscodeEntryField setCustomBackgroundColor:]
  -[SBUIPasscodeEntryField textField:shouldChangeCharactersInRange:replacementString:]
  -[SBUIPasscodeEntryField textFieldDidResignFirstResponder:]
  -[SBUIPasscodeEntryField deleteLastCharacter]
  -[SBUIPasscodeEntryField _setLuminosityBoost:]
  -[SBUIPasscodeEntryField _resetForFailedPasscode:]
  -[SBUIPasscodeEntryField initWithDefaultSizeAndLightStyle:]
  -[SBUIPasscodeEntryField _appendString:]
  -[SBUIPasscodeEntryField _deleteLastCharacter]
  -[SBUIPasscodeEntryField _autofillForBiometricAuthenticationWithCompletion:]
  -[SBUIPasscodeEntryField _hasAnyCharacters]
  -[SBUIPasscodeEntryField shouldInsertPasscodeText:]
  -[SBUIPasscodeEntryField notePasscodeFieldTextDidChange]
  -[SBUIPasscodeEntryField _handleKeyUIEvent:source:]
  -[SBUIPasscodeEntryField notePasscodeFieldDidAcceptEntry]


_SBSUIOrientedImageView : SBFTouchPassThroughView
 @property  UIImage *portraitImage
 @property  UIImage *landscapeImage

  // instance methods
  -[_SBSUIOrientedImageView .cxx_destruct]
  -[_SBSUIOrientedImageView layoutSubviews]
  -[_SBSUIOrientedImageView initWithFrame:]
  -[_SBSUIOrientedImageView portraitImage]
  -[_SBSUIOrientedImageView setPortraitImage:]
  -[_SBSUIOrientedImageView landscapeImage]
  -[_SBSUIOrientedImageView setLandscapeImage:]


SBSUIWallpaperPreviewViewController : UIViewController <PBUILegibilitySettingsProviderDelegate, SBSUIWallpaperPreviewViewDelegate, SBFLegibilitySettingsProvider>
 @property  <SBSUIWallpaperPreviewViewControllerDelegate> *previewDelegate
 @property  UIImage *wallpaperImage
 @property  SBFWallpaperOptions *wallpaperOptions
 @property  BOOL motionEnabled
 @property  BOOL irisEnabled
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  double zoomScale
 @property  double parallaxFactor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UILegibilitySettings *legibilitySettings
 @property  <SBFLegibilitySettingsProviderDelegate> *delegate

  // instance methods
  -[SBSUIWallpaperPreviewViewController parallaxFactor]
  -[SBSUIWallpaperPreviewViewController zoomScale]
  -[SBSUIWallpaperPreviewViewController setParallaxFactor:]
  -[SBSUIWallpaperPreviewViewController cropRect]
  -[SBSUIWallpaperPreviewViewController setZoomScale:]
  -[SBSUIWallpaperPreviewViewController wallpaperImage]
  -[SBSUIWallpaperPreviewViewController setDelegate:]
  -[SBSUIWallpaperPreviewViewController delegate]
  -[SBSUIWallpaperPreviewViewController initWithImage:]
  -[SBSUIWallpaperPreviewViewController initWithNibName:bundle:]
  -[SBSUIWallpaperPreviewViewController viewDidAppear:]
  -[SBSUIWallpaperPreviewViewController dealloc]
  -[SBSUIWallpaperPreviewViewController initWithWallpaperVariant:]
  -[SBSUIWallpaperPreviewViewController .cxx_destruct]
  -[SBSUIWallpaperPreviewViewController viewWillAppear:]
  -[SBSUIWallpaperPreviewViewController loadView]
  -[SBSUIWallpaperPreviewViewController observeValueForKeyPath:ofObject:change:context:]
  -[SBSUIWallpaperPreviewViewController prefersStatusBarHidden]
  -[SBSUIWallpaperPreviewViewController viewDidDisappear:]
  -[SBSUIWallpaperPreviewViewController viewWillDisappear:]
  -[SBSUIWallpaperPreviewViewController providerLegibilitySettingsChanged:]
  -[SBSUIWallpaperPreviewViewController wallpaperOptions]
  -[SBSUIWallpaperPreviewViewController traitCollectionDidChange:]
  -[SBSUIWallpaperPreviewViewController legibilitySettings]
  -[SBSUIWallpaperPreviewViewController setCropRect:]
  -[SBSUIWallpaperPreviewViewController _dateView]
  -[SBSUIWallpaperPreviewViewController _previewView]
  -[SBSUIWallpaperPreviewViewController _parallaxFactor]
  -[SBSUIWallpaperPreviewViewController _wallpaperView]
  -[SBSUIWallpaperPreviewViewController setMotionEnabled:]
  -[SBSUIWallpaperPreviewViewController motionEnabled]
  -[SBSUIWallpaperPreviewViewController setPreviewDelegate:]
  -[SBSUIWallpaperPreviewViewController _updateDateView]
  -[SBSUIWallpaperPreviewViewController userDidTapOnIrisButton:]
  -[SBSUIWallpaperPreviewViewController userDidTapOnParallaxButton:]
  -[SBSUIWallpaperPreviewViewController userDidTapOnCancelButton:]
  -[SBSUIWallpaperPreviewViewController userDidTapOnSetButton:]
  -[SBSUIWallpaperPreviewViewController initWithProceduralWallpaper:options:]
  -[SBSUIWallpaperPreviewViewController initWithProceduralWallpaper:options:variant:disableSegmentedControl:enableButtons:disableContents:]
  -[SBSUIWallpaperPreviewViewController initWithImage:name:]
  -[SBSUIWallpaperPreviewViewController initWithImage:name:video:time:]
  -[SBSUIWallpaperPreviewViewController initWithImage:video:variant:options:disableSegmentedControl:enableButtons:disableContents:]
  -[SBSUIWallpaperPreviewViewController initWithImages:videos:variant:options:disableSegmentedControl:enableButtons:disableContents:]
  -[SBSUIWallpaperPreviewViewController initWithImages:videos:variant:options:disableSegmentedControl:enableButtons:disableContents:disableParallax:]
  -[SBSUIWallpaperPreviewViewController initWithScrollableImage:]
  -[SBSUIWallpaperPreviewViewController initWithScrollableImage:video:time:]
  -[SBSUIWallpaperPreviewViewController _wallpaperConfigurationManager]
  -[SBSUIWallpaperPreviewViewController _wallpaperTypeDescription]
  -[SBSUIWallpaperPreviewViewController _wallpaperType]
  -[SBSUIWallpaperPreviewViewController setWallpaperForLocations:]
  -[SBSUIWallpaperPreviewViewController setWallpaperForLocations:completionHandler:]
  -[SBSUIWallpaperPreviewViewController _setWallpaperForLocationsOnMainThread:completionHandler:]
  -[SBSUIWallpaperPreviewViewController setWallpaperImages:options:locations:]
  -[SBSUIWallpaperPreviewViewController setWallpaperImages:options:locations:completionHandler:]
  -[SBSUIWallpaperPreviewViewController _setWallpaperImagesOnMainThread:options:locations:completionHandler:]
  -[SBSUIWallpaperPreviewViewController setImageWallpaperForLocations:completionHandler:]
  -[SBSUIWallpaperPreviewViewController _setImageWallpaperForLocationsOnMainThread:completionHandler:]
  -[SBSUIWallpaperPreviewViewController _setProceduralWallpaperForLocationsOnMainThread:completionHandler:]
  -[SBSUIWallpaperPreviewViewController _applyHomeScreenPreview]
  -[SBSUIWallpaperPreviewViewController setIrisEnabled:]
  -[SBSUIWallpaperPreviewViewController setMotionEnabled:updateParallaxOnWallpaperView:]
  -[SBSUIWallpaperPreviewViewController _wallpaperViewWithFrame:]
  -[SBSUIWallpaperPreviewViewController _wallpaperViewWithFrame:image:video:videoURL:stillTimeInVideo:supportsCropping:variant:needsWallpaperDimming:]
  -[SBSUIWallpaperPreviewViewController _wallpaperViewWithFrame:variant:options:]
  -[SBSUIWallpaperPreviewViewController _proceduralWallpaperViewWithFrame:variant:configuration:]
  -[SBSUIWallpaperPreviewViewController _colorWallpaperViewWithFrame:variant:configuration:]
  -[SBSUIWallpaperPreviewViewController _previewViewIfLoaded]
  -[SBSUIWallpaperPreviewViewController _wallpaperViewIfLoaded]
  -[SBSUIWallpaperPreviewViewController _displaySettingWallpaperHUD]
  -[SBSUIWallpaperPreviewViewController _enableIrisOrParallaxIfEligible]
  -[SBSUIWallpaperPreviewViewController _logWallpaperChangeForLocations:]
  -[SBSUIWallpaperPreviewViewController _stopDateTimer]
  -[SBSUIWallpaperPreviewViewController _startDateTimer]
  -[SBSUIWallpaperPreviewViewController setColorSamplingEnabled:]
  -[SBSUIWallpaperPreviewViewController colorSamplingEnabled]
  -[SBSUIWallpaperPreviewViewController previewDelegate]
  -[SBSUIWallpaperPreviewViewController irisEnabled]


SBUIBackgroundContentSceneSpecification : UIApplicationSceneSpecification
  // instance methods
  -[SBUIBackgroundContentSceneSpecification uiSceneMinimumClass]
  -[SBUIBackgroundContentSceneSpecification uiSceneSessionRole]
  -[SBUIBackgroundContentSceneSpecification initialActionHandlers]


SBUIPresentableWantsHomeGestureAction : BSAction
 @property  BOOL wantsHomeGesture

  // instance methods
  -[SBUIPresentableWantsHomeGestureAction keyDescriptionForSetting:]
  -[SBUIPresentableWantsHomeGestureAction initWithWantsHomeGesture:handler:]
  -[SBUIPresentableWantsHomeGestureAction wantsHomeGesture]
  -[SBUIPresentableWantsHomeGestureAction setSuccessful:]


SBSUIInCallSceneClientSettings : UIApplicationSceneClientSettings
 @property  unsigned long preferredHardwareButtonEventTypes
 @property  unsigned long preferredStatusBarStyleOverridesToSuppress
 @property  BOOL supportsDeviceLockActions
 @property  BOOL transientOverlayHomeIndicatorAutoHidden
 @property  BOOL shouldBecomeVisibleWhenWakingDisplay
 @property  BOOL callConnected
 @property  {UIEdgeInsets=dddd} expanseHUDDodgingInsets
 @property  BOOL prefersBannersHiddenFromClonedDisplay
 @property  BOOL prefersHiddenWhenDismissed
 @property  BOOL shouldNeverBeShownWhenLaunchingFaceTime

  // instance methods
  -[SBSUIInCallSceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIInCallSceneClientSettings preferredHardwareButtonEventTypes]
  -[SBSUIInCallSceneClientSettings keyDescriptionForSetting:]
  -[SBSUIInCallSceneClientSettings mutableCopyWithZone:]
  -[SBSUIInCallSceneClientSettings homeIndicatorAutoHidden]
  -[SBSUIInCallSceneClientSettings preferredStatusBarStyleOverridesToSuppress]
  -[SBSUIInCallSceneClientSettings shouldBecomeVisibleWhenWakingDisplay]
  -[SBSUIInCallSceneClientSettings isCallConnected]
  -[SBSUIInCallSceneClientSettings expanseHUDDodgingInsets]
  -[SBSUIInCallSceneClientSettings prefersHiddenWhenDismissed]
  -[SBSUIInCallSceneClientSettings prefersBannersHiddenFromClonedDisplay]
  -[SBSUIInCallSceneClientSettings shouldNeverBeShownWhenLaunchingFaceTime]
  -[SBSUIInCallSceneClientSettings supportsDeviceLockActions]
  -[SBSUIInCallSceneClientSettings transientOverlayHomeIndicatorAutoHidden]


SBSUIMutableInCallSceneClientSettings : UIMutableApplicationSceneClientSettings
 @property  unsigned long preferredHardwareButtonEventTypes
 @property  unsigned long preferredStatusBarStyleOverridesToSuppress
 @property  BOOL supportsDeviceLockActions
 @property  BOOL transientOverlayHomeIndicatorAutoHidden
 @property  BOOL shouldBecomeVisibleWhenWakingDisplay
 @property  BOOL callConnected
 @property  {UIEdgeInsets=dddd} expanseHUDDodgingInsets
 @property  BOOL prefersBannersHiddenFromClonedDisplay
 @property  BOOL prefersHiddenWhenDismissed
 @property  BOOL shouldNeverBeShownWhenLaunchingFaceTime

  // instance methods
  -[SBSUIMutableInCallSceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIMutableInCallSceneClientSettings preferredHardwareButtonEventTypes]
  -[SBSUIMutableInCallSceneClientSettings copyWithZone:]
  -[SBSUIMutableInCallSceneClientSettings keyDescriptionForSetting:]
  -[SBSUIMutableInCallSceneClientSettings setHomeIndicatorAutoHidden:]
  -[SBSUIMutableInCallSceneClientSettings setPreferredHardwareButtonEventTypes:]
  -[SBSUIMutableInCallSceneClientSettings setPreferredStatusBarStyleOverridesToSuppress:]
  -[SBSUIMutableInCallSceneClientSettings setShouldBecomeVisibleWhenWakingDisplay:]
  -[SBSUIMutableInCallSceneClientSettings setCallConnected:]
  -[SBSUIMutableInCallSceneClientSettings setExpanseHUDDodgingInsets:]
  -[SBSUIMutableInCallSceneClientSettings setPrefersHiddenWhenDismissed:]
  -[SBSUIMutableInCallSceneClientSettings setShouldNeverBeShownWhenLaunchingFaceTime:]
  -[SBSUIMutableInCallSceneClientSettings setPrefersBannersHiddenFromClonedDisplay:]
  -[SBSUIMutableInCallSceneClientSettings preferredStatusBarStyleOverridesToSuppress]
  -[SBSUIMutableInCallSceneClientSettings shouldBecomeVisibleWhenWakingDisplay]
  -[SBSUIMutableInCallSceneClientSettings isCallConnected]
  -[SBSUIMutableInCallSceneClientSettings expanseHUDDodgingInsets]
  -[SBSUIMutableInCallSceneClientSettings prefersHiddenWhenDismissed]
  -[SBSUIMutableInCallSceneClientSettings prefersBannersHiddenFromClonedDisplay]
  -[SBSUIMutableInCallSceneClientSettings shouldNeverBeShownWhenLaunchingFaceTime]
  -[SBSUIMutableInCallSceneClientSettings supportsDeviceLockActions]
  -[SBSUIMutableInCallSceneClientSettings transientOverlayHomeIndicatorAutoHidden]
  -[SBSUIMutableInCallSceneClientSettings setSupportsDeviceLockActions:]
  -[SBSUIMutableInCallSceneClientSettings setTransientOverlayHomeIndicatorAutoHidden:]


SBUISystemApertureButtonContentProvider : NSObject <SBUISystemApertureContentViewProviding, SBUISystemApertureContentColorStyling>
 @property  UIButtonConfiguration *buttonConfiguration
 @property  UIView *providedView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIColor *contentColor

  // instance methods
  -[SBUISystemApertureButtonContentProvider setContentColor:]
  -[SBUISystemApertureButtonContentProvider .cxx_destruct]
  -[SBUISystemApertureButtonContentProvider contentColor]
  -[SBUISystemApertureButtonContentProvider buttonConfiguration]
  -[SBUISystemApertureButtonContentProvider providedView]
  -[SBUISystemApertureButtonContentProvider _providedView]
  -[SBUISystemApertureButtonContentProvider initWithDefaultTextActionConfigurationWithAction:]
  -[SBUISystemApertureButtonContentProvider initWithDefaultSymbolActionConfigurationWithAction:]
  -[SBUISystemApertureButtonContentProvider initWithButtonConfiguration:action:]
  -[SBUISystemApertureButtonContentProvider setButtonConfiguration:]


SBUIKeyboardEnablementManager : NSObject
  // class methods
  +[SBUIKeyboardEnablementManager sharedInstance]

  // instance methods
  -[SBUIKeyboardEnablementManager .cxx_destruct]
  -[SBUIKeyboardEnablementManager init]
  -[SBUIKeyboardEnablementManager disableAutomaticAppearanceForContext:]
  -[SBUIKeyboardEnablementManager enableAutomaticAppearanceForContext:]


SBUILegibilityView : UIView <SBUILegibilityResultDisplaying, SBUILegibilityEngineProviding>
 @property  double strength
 @property  UIImage *image
 @property  BOOL hidesImage
 @property  BOOL usesColorFilters
 @property  BOOL backfillTemplateResults
 @property  <SBUILegibilitySettings> *legibilitySettings
 @property  long long options
 @property  {UIEdgeInsets=dddd} hitTestEdgeInsets
 @property  NSMutableDictionary *userInfo
 @property  <SBUILegibilityEngine> *legibilityEngine
 @property  UIImage *shadowImage
 @property  UIImage *origImage
 @property  UIImage *strengthenedImage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUILegibilityView shadowImage]
  -[SBUILegibilityView setHitTestEdgeInsets:]
  -[SBUILegibilityView willMoveToSuperview:]
  -[SBUILegibilityView _updateOptions:]
  -[SBUILegibilityView drawingColor]
  -[SBUILegibilityView shadowColor]
  -[SBUILegibilityView userInfo]
  -[SBUILegibilityView updateForChangedSettings:]
  -[SBUILegibilityView origImage]
  -[SBUILegibilityView setLegibilityEngine:]
  -[SBUILegibilityView setStrength:]
  -[SBUILegibilityView updateForChangedSettings:options:]
  -[SBUILegibilityView dealloc]
  -[SBUILegibilityView _updateSettings:]
  -[SBUILegibilityView usesSecondaryColor]
  -[SBUILegibilityView .cxx_destruct]
  -[SBUILegibilityView _redrawShadowForNewContainer]
  -[SBUILegibilityView didMoveToSuperview]
  -[SBUILegibilityView backfillTemplateResults]
  -[SBUILegibilityView hitTestEdgeInsets]
  -[SBUILegibilityView options]
  -[SBUILegibilityView _updateFilters]
  -[SBUILegibilityView updateImage]
  -[SBUILegibilityView layoutSubviews]
  -[SBUILegibilityView setBackfillTemplateResults:]
  -[SBUILegibilityView updateOrigImage:shadowImage:strengthenedShadowImage:settings:engine:isTemplate:withStrength:context:]
  -[SBUILegibilityView pointInside:withEvent:]
  -[SBUILegibilityView _updateContentImageView:]
  -[SBUILegibilityView image]
  -[SBUILegibilityView setHidesImage:]
  -[SBUILegibilityView setLegibilitySettings:]
  -[SBUILegibilityView legibilityEngine]
  -[SBUILegibilityView _updateShadow]
  -[SBUILegibilityView setUsesColorFilters:]
  -[SBUILegibilityView strengthenedImage]
  -[SBUILegibilityView sizeThatFits:]
  -[SBUILegibilityView _clearShadowAndMarkNeedsNew]
  -[SBUILegibilityView hidesImage]
  -[SBUILegibilityView _cancelOperations]
  -[SBUILegibilityView initWithFrame:]
  -[SBUILegibilityView willMoveToWindow:]
  -[SBUILegibilityView _updateStrength:]
  -[SBUILegibilityView strength]
  -[SBUILegibilityView setImage:]
  -[SBUILegibilityView usesColorFilters]
  -[SBUILegibilityView didMoveToWindow]
  -[SBUILegibilityView updateForChangedSettings:options:image:strength:]
  -[SBUILegibilityView legibilitySettings]
  -[SBUILegibilityView initWithSettings:strength:image:]


SBUIPresentableHomeAffordanceThresholdAction : BSAction
  // instance methods
  -[SBUIPresentableHomeAffordanceThresholdAction initWithHandler:]
  -[SBUIPresentableHomeAffordanceThresholdAction keyDescriptionForSetting:]
  -[SBUIPresentableHomeAffordanceThresholdAction setSuccessful:]


_SBUILegibilityMetalEngineConfiguration : NSObject
 @property  MPSUnaryImageKernel *blurKernel
 @property  UIScreen *screen
 @property  <SBUILegibilitySettings> *settings
 @property  <MTLDevice> *device
 @property  <MTLCommandQueue> *commandQueue
 @property  MTKTextureLoader *textureLoader
 @property  double shadowRadius
 @property  double shadowScale
 @property  double scale
 @property  unsigned long radius

  // class methods
  +[_SBUILegibilityMetalEngineConfiguration buildDestinationTextureForDevice:size:pixelFormat:outOutputBytes:outLength:outBytesPerRow:]

  // instance methods
  -[_SBUILegibilityMetalEngineConfiguration radius]
  -[_SBUILegibilityMetalEngineConfiguration shadowRadius]
  -[_SBUILegibilityMetalEngineConfiguration dealloc]
  -[_SBUILegibilityMetalEngineConfiguration screen]
  -[_SBUILegibilityMetalEngineConfiguration .cxx_destruct]
  -[_SBUILegibilityMetalEngineConfiguration settings]
  -[_SBUILegibilityMetalEngineConfiguration device]
  -[_SBUILegibilityMetalEngineConfiguration scale]
  -[_SBUILegibilityMetalEngineConfiguration commandQueue]
  -[_SBUILegibilityMetalEngineConfiguration initWithScreen:settings:algo:]
  -[_SBUILegibilityMetalEngineConfiguration initWithScreen:settings:algo:pixelFormat:]
  -[_SBUILegibilityMetalEngineConfiguration _configureConvolutionKernel]
  -[_SBUILegibilityMetalEngineConfiguration _sourceTextureForImage:settings:outMetalOutputTextureSize:]
  -[_SBUILegibilityMetalEngineConfiguration _metalTextureOutputSizeForInputSize:]
  -[_SBUILegibilityMetalEngineConfiguration _prepareImageForConvolution:settings:]
  -[_SBUILegibilityMetalEngineConfiguration drawImageForSize:drawBlock:]
  -[_SBUILegibilityMetalEngineConfiguration drawImageForSize:scale:drawBlock:]
  -[_SBUILegibilityMetalEngineConfiguration executeBlurForImage:settings:]
  -[_SBUILegibilityMetalEngineConfiguration blurKernel]
  -[_SBUILegibilityMetalEngineConfiguration textureLoader]
  -[_SBUILegibilityMetalEngineConfiguration shadowScale]


SBUILegibilityMetalEngine : NSObject <SBUILegibilityEngine>
 @property  long long algorithm
 @property  BOOL useMinFillHeightForTemplateGeneration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUILegibilityMetalEngine algorithm]
  -[SBUILegibilityMetalEngine _teardownCaches:]
  -[SBUILegibilityMetalEngine executeLegibilityUpdateForContainer:forImage:settings:strength:engineResult:]
  -[SBUILegibilityMetalEngine .cxx_destruct]
  -[SBUILegibilityMetalEngine prewarmForSettings:maxSize:minSize:scale:]
  -[SBUILegibilityMetalEngine calculateShadowImageViewSizeForOriginalImage:shadowImage:settings:]
  -[SBUILegibilityMetalEngine applyStrength:toImage:settings:]
  -[SBUILegibilityMetalEngine setUseMinFillHeightForTemplateGeneration:]
  -[SBUILegibilityMetalEngine executeAsyncLegibilityUpdateForContainer:image:settings:strength:completion:]
  -[SBUILegibilityMetalEngine initWithEngineIdentifier:]
  -[SBUILegibilityMetalEngine useMinFillHeightForTemplateGeneration]
  -[SBUILegibilityMetalEngine initWithEngineIdentifier:algorithm:]
  -[SBUILegibilityMetalEngine _findEngineConfigurationMatchingScreen:settings:]


SBUISystemApertureElementUnassociatedContext : NSObject <SBUISystemApertureElementContext>
 @property  BOOL fallbackContext
 @property  SBUISystemApertureElementTransitionContext *transitionContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBUISystemApertureElementUnassociatedContext unassociatedContext]

  // instance methods
  -[SBUISystemApertureElementUnassociatedContext transitionContext]
  -[SBUISystemApertureElementUnassociatedContext .cxx_destruct]
  -[SBUISystemApertureElementUnassociatedContext setElementNeedsUpdate]
  -[SBUISystemApertureElementUnassociatedContext setElementNeedsUpdateWithCoordinatedAnimations:]
  -[SBUISystemApertureElementUnassociatedContext requestAlertingAssertion]
  -[SBUISystemApertureElementUnassociatedContext requestTransitionToMaximumSupportedLayoutMode]
  -[SBUISystemApertureElementUnassociatedContext requestTransitionToPreferredLayoutMode]
  -[SBUISystemApertureElementUnassociatedContext requestNegativeResponseAnimation]
  -[SBUISystemApertureElementUnassociatedContext elementWillPresentMenu]
  -[SBUISystemApertureElementUnassociatedContext elementDidDismissMenu]
  -[SBUISystemApertureElementUnassociatedContext isFallbackContext]
  -[SBUISystemApertureElementUnassociatedContext _logErrorForSelectorIfNeeded:]


_SBUIBiometricMatchingAssertion : _SBUIBiometricOperationAssertion <BSDescriptionProviding>
 @property  unsigned long matchMode
 @property  long long restartCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBUIBiometricMatchingAssertion setRestartCount:]
  -[_SBUIBiometricMatchingAssertion descriptionWithMultilinePrefix:]
  -[_SBUIBiometricMatchingAssertion descriptionBuilderWithMultilinePrefix:]
  -[_SBUIBiometricMatchingAssertion initWithMatchMode:reason:invalidationBlock:]
  -[_SBUIBiometricMatchingAssertion succinctDescription]
  -[_SBUIBiometricMatchingAssertion matchMode]
  -[_SBUIBiometricMatchingAssertion succinctDescriptionBuilder]
  -[_SBUIBiometricMatchingAssertion restartCount]
  -[_SBUIBiometricMatchingAssertion initWithIdentifier:forReason:queue:invalidationBlock:]


SBUISystemApertureElementConfiguration : NSObject <SBUISystemApertureElement>
 @property  BSMutableSettings *_storage
 @property  BOOL waitingForPostCommitHandlerToUpdateContextId
 @property  BSSettings *otherSceneClientSettingsRepresentation
 @property  BOOL shouldDeferViewSizingPreferenceUpdates
 @property  NSString *elementIdentifier
 @property  long long contentRole
 @property  long long preferredLayoutMode
 @property  long long minimumLayoutMode
 @property  long long maximumLayoutMode
 @property  long long appliedLayoutMode
 @property  UIViewController *containerViewController
 @property  UIViewController<SBUISystemApertureElement> *elementViewController
 @property  UIView<SBUISystemApertureAccessoryView> *leadingView
 @property  UIView<SBUISystemApertureAccessoryView> *trailingView
 @property  UIView<SBUISystemApertureAccessoryView> *minimalView
 @property  double preferredHeightForBottomSafeArea
 @property  {NSDirectionalEdgeInsets=dddd} preferredOutsetsFromUnsafeArea
 @property  NSValue *preferredPaddingForCompactLayout
 @property  unsigned long statusBarStyleOverridesToSuppress
 @property  {CGSize=dd} preferredCustomAspectRatio
 @property  long long preferredCustomLayout
 @property  NSString *associatedScenePersistenceIdentifier
 @property  NSString *associatedAppBundleIdentifier
 @property  NSURL *launchURL
 @property  BOOL hasMenuPresentation
 @property  unsigned long presentationBehaviors
 @property  BOOL preventsInteractiveDismissal
 @property  BOOL preventsAutomaticDismissal
 @property  UIColor *keyColor
 @property  long long activeLayoutMode
 @property  unsigned long minimalViewLayoutAxis
 @property  BOOL canRequestAlertingAssertion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUISystemApertureElementConfiguration setContainerViewController:]
  -[SBUISystemApertureElementConfiguration launchURL]
  -[SBUISystemApertureElementConfiguration statusBarStyleOverridesToSuppress]
  -[SBUISystemApertureElementConfiguration leadingView]
  -[SBUISystemApertureElementConfiguration trailingView]
  -[SBUISystemApertureElementConfiguration setLaunchURL:]
  -[SBUISystemApertureElementConfiguration elementIdentifier]
  -[SBUISystemApertureElementConfiguration .cxx_destruct]
  -[SBUISystemApertureElementConfiguration containerViewController]
  -[SBUISystemApertureElementConfiguration setStatusBarStyleOverridesToSuppress:]
  -[SBUISystemApertureElementConfiguration setTrailingView:]
  -[SBUISystemApertureElementConfiguration setLeadingView:]
  -[SBUISystemApertureElementConfiguration associatedAppBundleIdentifier]
  -[SBUISystemApertureElementConfiguration _storage]
  -[SBUISystemApertureElementConfiguration setAssociatedAppBundleIdentifier:]
  -[SBUISystemApertureElementConfiguration keyColor]
  -[SBUISystemApertureElementConfiguration setKeyColor:]
  -[SBUISystemApertureElementConfiguration preventsAutomaticDismissal]
  -[SBUISystemApertureElementConfiguration setPreventsAutomaticDismissal:]
  -[SBUISystemApertureElementConfiguration activeLayoutMode]
  -[SBUISystemApertureElementConfiguration setActiveLayoutMode:]
  -[SBUISystemApertureElementConfiguration contentRole]
  -[SBUISystemApertureElementConfiguration preferredLayoutMode]
  -[SBUISystemApertureElementConfiguration maximumLayoutMode]
  -[SBUISystemApertureElementConfiguration preferredHeightForBottomSafeArea]
  -[SBUISystemApertureElementConfiguration associatedScenePersistenceIdentifier]
  -[SBUISystemApertureElementConfiguration preventsInteractiveDismissal]
  -[SBUISystemApertureElementConfiguration minimumLayoutMode]
  -[SBUISystemApertureElementConfiguration minimalView]
  -[SBUISystemApertureElementConfiguration preferredCustomAspectRatio]
  -[SBUISystemApertureElementConfiguration preferredCustomLayout]
  -[SBUISystemApertureElementConfiguration presentationBehaviors]
  -[SBUISystemApertureElementConfiguration appliedLayoutMode]
  -[SBUISystemApertureElementConfiguration preferredOutsetsFromUnsafeArea]
  -[SBUISystemApertureElementConfiguration preferredPaddingForCompactLayout]
  -[SBUISystemApertureElementConfiguration hasMenuPresentation]
  -[SBUISystemApertureElementConfiguration setElementIdentifier:]
  -[SBUISystemApertureElementConfiguration setContentRole:]
  -[SBUISystemApertureElementConfiguration setPreferredLayoutMode:]
  -[SBUISystemApertureElementConfiguration setMinimumLayoutMode:]
  -[SBUISystemApertureElementConfiguration setMaximumLayoutMode:]
  -[SBUISystemApertureElementConfiguration setAppliedLayoutMode:]
  -[SBUISystemApertureElementConfiguration setPreferredHeightForBottomSafeArea:]
  -[SBUISystemApertureElementConfiguration setPreferredOutsetsfromUnsafeArea:]
  -[SBUISystemApertureElementConfiguration setPreferredPaddingForCompactLayout:]
  -[SBUISystemApertureElementConfiguration setAssociatedScenePersistenceIdentifier:]
  -[SBUISystemApertureElementConfiguration setPreferredCustomAspectRatio:]
  -[SBUISystemApertureElementConfiguration setPreferredCustomLayout:]
  -[SBUISystemApertureElementConfiguration setHasMenuPresentation:]
  -[SBUISystemApertureElementConfiguration setPresentationBehaviors:]
  -[SBUISystemApertureElementConfiguration setPreventsInteractiveDismissal:]
  -[SBUISystemApertureElementConfiguration otherSceneClientSettingsRepresentation]
  -[SBUISystemApertureElementConfiguration _strongElementViewController]
  -[SBUISystemApertureElementConfiguration _elementRequiresConstraintBasedLayout]
  -[SBUISystemApertureElementConfiguration _elementSupportsDynamicResizing]
  -[SBUISystemApertureElementConfiguration setShouldDeferViewSizingPreferenceUpdates:]
  -[SBUISystemApertureElementConfiguration maximumAccessoryViewSizeForLayoutMode:]
  -[SBUISystemApertureElementConfiguration _updateStorageForViewPropertiesIfNeeded]
  -[SBUISystemApertureElementConfiguration _updateStorageForViewProperties]
  -[SBUISystemApertureElementConfiguration _invalidateOtherSceneClientSettingsRepresentation]
  -[SBUISystemApertureElementConfiguration refreshViewSizingPreferences]
  -[SBUISystemApertureElementConfiguration _hasActiveCATransactionExcludingPostCommitPhase]
  -[SBUISystemApertureElementConfiguration validateConfiguration]
  -[SBUISystemApertureElementConfiguration shouldDeferViewSizingPreferenceUpdates]
  -[SBUISystemApertureElementConfiguration elementViewController]
  -[SBUISystemApertureElementConfiguration setElementViewController:]
  -[SBUISystemApertureElementConfiguration setMinimalView:]
  -[SBUISystemApertureElementConfiguration setPreferredOutsetsFromUnsafeArea:]
  -[SBUISystemApertureElementConfiguration isWaitingForPostCommitHandlerToUpdateContextId]
  -[SBUISystemApertureElementConfiguration setWaitingForPostCommitHandlerToUpdateContextId:]


SBSUIInCallShowNoticeForSystemControlsAction : BSAction

SBUIPasscodeTextField : UITextField
 @property  BOOL showsSystemKeyboard

  // instance methods
  -[SBUIPasscodeTextField resignFirstResponder]
  -[SBUIPasscodeTextField becomeFirstResponder]
  -[SBUIPasscodeTextField dealloc]
  -[SBUIPasscodeTextField _handleKeyUIEvent:]
  -[SBUIPasscodeTextField _enableAutomaticAppearance]
  -[SBUIPasscodeTextField _disableAutomaticAppearance]
  -[SBUIPasscodeTextField showsSystemKeyboard]
  -[SBUIPasscodeTextField setShowsSystemKeyboard:]


SBUIFaceIDCoachingView : UIView
 @property  NSString *labelText
 @property  UIMorphingLabel *label
 @property  unsigned long coachingCondition
 @property  NSString *currentSizeCategory
 @property  _UILegibilitySettings *legibilitySettings
 @property  double stringWidth
 @property  BOOL allowsAlongsideCoaching

  // instance methods
  -[SBUIFaceIDCoachingView setCoachingCondition:]
  -[SBUIFaceIDCoachingView _updateLabelTextForCurrentCoachingConditionAnimated:]
  -[SBUIFaceIDCoachingView _contentSizeCategoryChanged]
  -[SBUIFaceIDCoachingView setLabelText:]
  -[SBUIFaceIDCoachingView labelText]
  -[SBUIFaceIDCoachingView setLabel:]
  -[SBUIFaceIDCoachingView currentSizeCategory]
  -[SBUIFaceIDCoachingView .cxx_destruct]
  -[SBUIFaceIDCoachingView allowsAlongsideCoaching]
  -[SBUIFaceIDCoachingView _label]
  -[SBUIFaceIDCoachingView layoutSubviews]
  -[SBUIFaceIDCoachingView _resizeLabelToFirstSizeCategoryThatFits]
  -[SBUIFaceIDCoachingView setCoachingCondition:animated:delay:]
  -[SBUIFaceIDCoachingView setCurrentSizeCategory:]
  -[SBUIFaceIDCoachingView setLegibilitySettings:]
  -[SBUIFaceIDCoachingView setAllowsAlongsideCoaching:]
  -[SBUIFaceIDCoachingView coachingCondition]
  -[SBUIFaceIDCoachingView legibilitySettings]
  -[SBUIFaceIDCoachingView init]
  -[SBUIFaceIDCoachingView stringWidth]


_SBSUIWallpaperGradientView : UIView
  // class methods
  +[_SBSUIWallpaperGradientView layerClass]

  // instance methods
  -[_SBSUIWallpaperGradientView initWithFrame:]


_SBUIWallpaperInstructionView : UIView
  // instance methods
  -[_SBUIWallpaperInstructionView .cxx_destruct]
  -[_SBUIWallpaperInstructionView layoutSubviews]
  -[_SBUIWallpaperInstructionView sizeThatFits:]
  -[_SBUIWallpaperInstructionView setTintColor:]
  -[_SBUIWallpaperInstructionView initWithImage:text:font:]


SBSUIWallpaperPreviewView : UIView <PBUIIrisWallpaperPlayerDelegate>
 @property  <SBSUIWallpaperPreviewViewDelegate> *delegate
 @property  SBFLockScreenDateView *dateView
 @property  PBUIWallpaperView *wallpaperView
 @property  UIButton *irisButton
 @property  UIButton *parallaxButton
 @property  UIButton *cancelButton
 @property  UIButton *setButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBSUIWallpaperPreviewView setDateView:]
  -[SBSUIWallpaperPreviewView dateView]
  -[SBSUIWallpaperPreviewView setCancelButton:]
  -[SBSUIWallpaperPreviewView setDelegate:]
  -[SBSUIWallpaperPreviewView updateForChangedSettings:]
  -[SBSUIWallpaperPreviewView delegate]
  -[SBSUIWallpaperPreviewView cancelButton]
  -[SBSUIWallpaperPreviewView dealloc]
  -[SBSUIWallpaperPreviewView .cxx_destruct]
  -[SBSUIWallpaperPreviewView layoutSubviews]
  -[SBSUIWallpaperPreviewView _layoutDateView]
  -[SBSUIWallpaperPreviewView _userDidTapOnIrisButton:]
  -[SBSUIWallpaperPreviewView _userDidTapOnParallaxButton:]
  -[SBSUIWallpaperPreviewView _userDidTapOnCancelButton:]
  -[SBSUIWallpaperPreviewView _userDidTapOnSetButton:]
  -[SBSUIWallpaperPreviewView irisWallpaperPlayerPlaybackStateDidChange:]
  -[SBSUIWallpaperPreviewView initWithFrame:wallpaperView:disableParallax:]
  -[SBSUIWallpaperPreviewView _makeButtonWithVisualEffectBlur]
  -[SBSUIWallpaperPreviewView setIrisButton:]
  -[SBSUIWallpaperPreviewView setParallaxButton:]
  -[SBSUIWallpaperPreviewView setSetButton:]
  -[SBSUIWallpaperPreviewView setWallpaperView:]
  -[SBSUIWallpaperPreviewView shouldEnableParallax]
  -[SBSUIWallpaperPreviewView displayInstructionsForEffect:enabled:animated:]
  -[SBSUIWallpaperPreviewView _fadeOutInstructionsWithDelay:animated:completion:]
  -[SBSUIWallpaperPreviewView _layoutGradientView]
  -[SBSUIWallpaperPreviewView _layoutWallpaperView]
  -[SBSUIWallpaperPreviewView _segmentedControlInset]
  -[SBSUIWallpaperPreviewView _layoutStackedButtons]
  -[SBSUIWallpaperPreviewView _layoutIrisInstructionLabels]
  -[SBSUIWallpaperPreviewView _layoutIrisButton]
  -[SBSUIWallpaperPreviewView _layoutParallaxButton]
  -[SBSUIWallpaperPreviewView _layoutCancelButton]
  -[SBSUIWallpaperPreviewView _layoutSetButton]
  -[SBSUIWallpaperPreviewView wallpaperView]
  -[SBSUIWallpaperPreviewView irisButton]
  -[SBSUIWallpaperPreviewView parallaxButton]
  -[SBSUIWallpaperPreviewView setButton]


SBSUIInCallSceneClientSettingsDiffInspector : UIApplicationSceneClientSettingsDiffInspector
  // instance methods
  -[SBSUIInCallSceneClientSettingsDiffInspector observePrefersBannersHiddenFromClonedDisplayWithBlock:]
  -[SBSUIInCallSceneClientSettingsDiffInspector observeExpanseHUDDodgingInsetsWithBlock:]
  -[SBSUIInCallSceneClientSettingsDiffInspector observeTransientOverlayHomeIndicatorAutoHiddenWithBlock:]
  -[SBSUIInCallSceneClientSettingsDiffInspector observePreferredStatusBarStyleOverridesToSuppressWithBlock:]
  -[SBSUIInCallSceneClientSettingsDiffInspector observeCallConnectedWithBlock:]
  -[SBSUIInCallSceneClientSettingsDiffInspector observePrefersHiddenWhenDismissedWithBlock:]


SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad : SBUIPasscodeLockViewSimpleFixedDigitKeypad
  // instance methods
  -[SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad .cxx_destruct]
  -[SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad setShowsCancelButton:]
  -[SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad setShowsEmergencyCallButton:]
  -[SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad passcodeEntryFieldTextDidChange:]
  -[SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad _layoutStatusView]
  -[SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad _actionButtonHit]
  -[SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad _setShowsEmergencyCallButton:fromCancelButton:]
  -[SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad _setShowsCancelButton:fromEmergencyCallButton:]
  -[SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad _configureActionButton]
  -[SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad _sizeLabel:]
  -[SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad _layoutActionButton]
  -[SBUIPasscodeLockViewInstallTonightSimpleFixedDigitKeypad initWithLightStyle:numberOfDigits:]


SBSUIInCallWindowSceneSettingsDiffAction : NSObject <_UISceneSettingsDiffAction>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBSUIInCallWindowSceneSettingsDiffAction .cxx_destruct]
  -[SBSUIInCallWindowSceneSettingsDiffAction _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:]
  -[SBSUIInCallWindowSceneSettingsDiffAction _inCallSceneSettingsDiffInspector]


_SBUIPopoverExtensionContext : NSExtensionContext
 @property  <_SBUIPopoverExtensionHostInterface> *hostService

  // instance methods
  -[_SBUIPopoverExtensionContext .cxx_destruct]
  -[_SBUIPopoverExtensionContext hostService]
  -[_SBUIPopoverExtensionContext setHostService:]
  -[_SBUIPopoverExtensionContext requestDismiss]


_SBUIBiometricOperationAssertion : BSSimpleAssertion <BSDescriptionProviding>
 @property  NSSet *operations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBUIBiometricOperationAssertion operations]
  -[_SBUIBiometricOperationAssertion setOperations:]
  -[_SBUIBiometricOperationAssertion descriptionWithMultilinePrefix:]
  -[_SBUIBiometricOperationAssertion descriptionBuilderWithMultilinePrefix:]
  -[_SBUIBiometricOperationAssertion .cxx_destruct]
  -[_SBUIBiometricOperationAssertion succinctDescription]
  -[_SBUIBiometricOperationAssertion succinctDescriptionBuilder]
  -[_SBUIBiometricOperationAssertion initWithIdentifier:forReason:queue:invalidationBlock:]


SBUISystemApertureStackedContentProvider : NSObject <SBUISystemApertureContentViewProviding>
 @property  long long contentDistribution
 @property  long long contentAxis
 @property  double contentSpacing
 @property  UIView *providedView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUISystemApertureStackedContentProvider .cxx_destruct]
  -[SBUISystemApertureStackedContentProvider contentSpacing]
  -[SBUISystemApertureStackedContentProvider providedView]
  -[SBUISystemApertureStackedContentProvider _providedView]
  -[SBUISystemApertureStackedContentProvider initWithContentViewProviders:]
  -[SBUISystemApertureStackedContentProvider contentDistribution]
  -[SBUISystemApertureStackedContentProvider setContentDistribution:]
  -[SBUISystemApertureStackedContentProvider contentAxis]
  -[SBUISystemApertureStackedContentProvider setContentAxis:]
  -[SBUISystemApertureStackedContentProvider setContentSpacing:]


_SBUISystemApertureStackView : UIStackView
  // instance methods
  -[_SBUISystemApertureStackView sizeThatFits:]


SBUIEmergencyCallServiceViewController : UIViewController <SBUIEmergencyCallServiceInterface>
 @property  long long backgroundStyle
 @property  UIColor *tintColor

  // class methods
  +[SBUIEmergencyCallServiceViewController _exportedInterface]
  +[SBUIEmergencyCallServiceViewController _remoteViewControllerInterface]

  // instance methods
  -[SBUIEmergencyCallServiceViewController initWithNibName:bundle:]
  -[SBUIEmergencyCallServiceViewController .cxx_destruct]
  -[SBUIEmergencyCallServiceViewController tintColor]
  -[SBUIEmergencyCallServiceViewController setBackgroundStyle:]
  -[SBUIEmergencyCallServiceViewController backgroundStyle]
  -[SBUIEmergencyCallServiceViewController backgroundStyle:]
  -[SBUIEmergencyCallServiceViewController noteTintColorForBackgroundStyleChanged:]
  -[SBUIEmergencyCallServiceViewController noteViewMovedOffscreenTemporarily]


SBSUISystemNotesSceneSpecification : UIApplicationSceneSpecification
  // instance methods
  -[SBSUISystemNotesSceneSpecification uiSceneMinimumClass]
  -[SBSUISystemNotesSceneSpecification uiSceneSessionRole]
  -[SBSUISystemNotesSceneSpecification initialActionHandlers]
  -[SBSUISystemNotesSceneSpecification settingsClass]
  -[SBSUISystemNotesSceneSpecification clientSettingsClass]


SBUISystemApertureLabel : UILabel
  // instance methods
  -[SBUISystemApertureLabel performTextSwapAnimationWithText:textColor:sizeWillChangeBlock:]
  -[SBUISystemApertureLabel _animateLayer:andSetValueForKeyPath:fromValue:toValue:]
  -[SBUISystemApertureLabel _springAnimationForKeyPath:fromValue:toValue:]
  -[SBUISystemApertureLabel _sizeOfLabelWithNewText:]


SBUISystemApertureAnimationParameters : NSObject
 @property  SBFFluidBehaviorSettings *fluidBehaviorSettings
 @property  BOOL retargeted
 @property  BOOL animated
 @property  BOOL tracking
 @property  BSSettings *BSSettingsRepresentation

  // instance methods
  -[SBUISystemApertureAnimationParameters tracking]
  -[SBUISystemApertureAnimationParameters .cxx_destruct]
  -[SBUISystemApertureAnimationParameters isAnimated]
  -[SBUISystemApertureAnimationParameters _animationBehavior]
  -[SBUISystemApertureAnimationParameters initWithFluidBehaviorSettings:tracking:retargeted:]
  -[SBUISystemApertureAnimationParameters initWithBSSettingsRepresentation:]
  -[SBUISystemApertureAnimationParameters _hasSpringParameters]
  -[SBUISystemApertureAnimationParameters isRetargeted]
  -[SBUISystemApertureAnimationParameters fluidBehaviorSettings]
  -[SBUISystemApertureAnimationParameters BSSettingsRepresentation]


SBBlackBackdropSettings : _UIBackdropViewSettings
  // instance methods
  -[SBBlackBackdropSettings blurRadius]
  -[SBBlackBackdropSettings combinedTintColor]


SBWhiteBackdropSettings : _UIBackdropViewSettings
  // instance methods
  -[SBWhiteBackdropSettings blurRadius]
  -[SBWhiteBackdropSettings combinedTintColor]


SBLockOverlayStylePropertiesFactory : NSObject
 @property  unsigned long style

  // class methods
  +[SBLockOverlayStylePropertiesFactory overlayPropertiesFactoryWithStyle:]

  // instance methods
  -[SBLockOverlayStylePropertiesFactory style]
  -[SBLockOverlayStylePropertiesFactory .cxx_destruct]
  -[SBLockOverlayStylePropertiesFactory initWithStyle:]
  -[SBLockOverlayStylePropertiesFactory propertiesWithDeviceDefaultGraphicsQuality]
  -[SBLockOverlayStylePropertiesFactory propertiesWithGraphicsQuality:]
  -[SBLockOverlayStylePropertiesFactory _fetchAndCachePropsForDeviceQuality:]


SBLockOverlayStyleProperties : NSObject
 @property  double tintAlpha
 @property  UIColor *tintColor
 @property  double blurRadius
 @property  unsigned long style
 @property  long long graphicsQuality

  // instance methods
  -[SBLockOverlayStyleProperties tintAlpha]
  -[SBLockOverlayStyleProperties _configure]
  -[SBLockOverlayStyleProperties style]
  -[SBLockOverlayStyleProperties .cxx_destruct]
  -[SBLockOverlayStyleProperties tintColor]
  -[SBLockOverlayStyleProperties blurRadius]
  -[SBLockOverlayStyleProperties graphicsQuality]
  -[SBLockOverlayStyleProperties initWithStyle:quality:]
  -[SBLockOverlayStyleProperties _settingsForStyle]
  -[SBLockOverlayStyleProperties _stringForQuality]
  -[SBLockOverlayStyleProperties _stringForStyle]


SBUILegibilityDefaultEngine : NSObject <SBUILegibilityEngine>
 @property  BOOL useMinFillHeightForTemplateGeneration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBUILegibilityDefaultEngine defaultEngine]

  // instance methods
  -[SBUILegibilityDefaultEngine _teardownCaches:]
  -[SBUILegibilityDefaultEngine executeLegibilityUpdateForContainer:forImage:settings:strength:engineResult:]
  -[SBUILegibilityDefaultEngine .cxx_destruct]
  -[SBUILegibilityDefaultEngine prewarmForSettings:maxSize:minSize:scale:]
  -[SBUILegibilityDefaultEngine calculateShadowImageViewSizeForOriginalImage:shadowImage:settings:]
  -[SBUILegibilityDefaultEngine applyStrength:toImage:settings:]
  -[SBUILegibilityDefaultEngine setUseMinFillHeightForTemplateGeneration:]
  -[SBUILegibilityDefaultEngine executeAsyncLegibilityUpdateForContainer:image:settings:strength:completion:]
  -[SBUILegibilityDefaultEngine initWithEngineIdentifier:]
  -[SBUILegibilityDefaultEngine useMinFillHeightForTemplateGeneration]


SBUIBackgroundContentActionHandler : NSObject <_UISceneBSActionHandler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUIBackgroundContentActionHandler _respondToActions:forFBSScene:inUIScene:fromTransitionContext:]


SBUIAppleLogoView : UIView
 @property  float progress

  // instance methods
  -[SBUIAppleLogoView progress]
  -[SBUIAppleLogoView setProgress:]
  -[SBUIAppleLogoView .cxx_destruct]
  -[SBUIAppleLogoView layoutSubviews]
  -[SBUIAppleLogoView initWithFrame:]
  -[SBUIAppleLogoView setStatusText:]
  -[SBUIAppleLogoView initWithFrame:appearance:progressBarVisible:]
  -[SBUIAppleLogoView initWithFrame:inverted:progressBarVisible:]
  -[SBUIAppleLogoView initWithFrame:inverted:]
  -[SBUIAppleLogoView initWithFrame:useWhiteLogo:progressBarVisible:]
  -[SBUIAppleLogoView initWithFrame:useWhiteLogo:]
  -[SBUIAppleLogoView initWithFrame:progressBarVisible:]


_SBUIPresentableGestureRecognizerPriorityAssertion : NSObject <SBUIPresentableGestureRecognizerPriorityAssertion>
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBUIPresentableGestureRecognizerPriorityAssertion dealloc]
  -[_SBUIPresentableGestureRecognizerPriorityAssertion .cxx_destruct]
  -[_SBUIPresentableGestureRecognizerPriorityAssertion reason]
  -[_SBUIPresentableGestureRecognizerPriorityAssertion invalidate]
  -[_SBUIPresentableGestureRecognizerPriorityAssertion initWithReason:invalidationHandler:]


SBSUIStarkNotificationsSceneTransitionContext : UIApplicationSceneTransitionContext
 @property  BOOL dismissNotification

  // instance methods
  -[SBSUIStarkNotificationsSceneTransitionContext valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIStarkNotificationsSceneTransitionContext keyDescriptionForSetting:]
  -[SBSUIStarkNotificationsSceneTransitionContext dismissNotification]
  -[SBSUIStarkNotificationsSceneTransitionContext setDismissNotification:]


SBUIBiometricResource : NSObject <BSDescriptionProviding, SBFMobileKeyBagObserver, _SBUIBiometricKitInterfaceDelegate, SBUIBiometricResource>
 @property  SBFMobileKeyBag *keybagInterface
 @property  _SBUIBiometricKitInterface *biometricKitInterface
 @property  MCProfileConnection *profileConnection
 @property  <SBUIBiometricAuthenticationPolicy> *authenticationPolicy
 @property  SBFCredentialSet *unlockCredentialSet
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hasEnrolledIdentities
 @property  BOOL hasBiometricAuthenticationCapabilityEnabled
 @property  BOOL fingerOn
 @property  BOOL fingerDetectEnabled
 @property  BOOL hasMesaSupport
 @property  BOOL hasPoseidonSupport
 @property  BOOL hasPearlSupport
 @property  BOOL pearlDetectEnabled
 @property  BOOL matchingEnabled
 @property  BOOL matchingAllowed
 @property  unsigned long biometricLockoutState
 @property  BOOL periocularMatchingEnabled

  // class methods
  +[SBUIBiometricResource sharedInstance]

  // instance methods
  -[SBUIBiometricResource _profileSettingsChanged:]
  -[SBUIBiometricResource _reallyResumeMatchingForAssertion:advisory:]
  -[SBUIBiometricResource noteScreenDidTurnOff]
  -[SBUIBiometricResource biometricLockoutState]
  -[SBUIBiometricResource isFingerOn]
  -[SBUIBiometricResource biometricKitInterface:enrolledIdentitiesDidChange:]
  -[SBUIBiometricResource _setProfileConnection:]
  -[SBUIBiometricResource _removeFaceDetectionWantedAssertion:]
  -[SBUIBiometricResource _forceBioLockout]
  -[SBUIBiometricResource acquireFingerDetectionWantedAssertionForReason:]
  -[SBUIBiometricResource hasMesaSupport]
  -[SBUIBiometricResource descriptionWithMultilinePrefix:]
  -[SBUIBiometricResource acquireSimulatedLockoutAssertionWithLockoutState:forReason:]
  -[SBUIBiometricResource _reevaluateMatching]
  -[SBUIBiometricResource refreshMatchMode]
  -[SBUIBiometricResource addObserver:]
  -[SBUIBiometricResource descriptionBuilderWithMultilinePrefix:]
  -[SBUIBiometricResource initWithBiometricKitInterface:]
  -[SBUIBiometricResource _deactivateAllPearlAssertions]
  -[SBUIBiometricResource hasPearlSupport]
  -[SBUIBiometricResource dealloc]
  -[SBUIBiometricResource isMatchingAllowed]
  -[SBUIBiometricResource isMatchingEnabled]
  -[SBUIBiometricResource _addFaceDetectionWantedAssertion:]
  -[SBUIBiometricResource _setAuthenticated:]
  -[SBUIBiometricResource _addSimulatedLockoutAssertion:]
  -[SBUIBiometricResource .cxx_destruct]
  -[SBUIBiometricResource keybag:extendedStateDidChange:]
  -[SBUIBiometricResource isFingerDetectEnabled]
  -[SBUIBiometricResource _profileConnection]
  -[SBUIBiometricResource _clearFinishedOperationsIfNeededForAssertion:]
  -[SBUIBiometricResource _presenceDetectAllowedStateMayHaveChangedForReason:]
  -[SBUIBiometricResource acquireMatchingAssertionWithMode:reason:]
  -[SBUIBiometricResource succinctDescription]
  -[SBUIBiometricResource _reevaluateFaceDetection]
  -[SBUIBiometricResource setAuthenticationPolicy:]
  -[SBUIBiometricResource hasEnrolledIdentities]
  -[SBUIBiometricResource hasPoseidonSupport]
  -[SBUIBiometricResource acquireFaceDetectionWantedAssertionForReason:]
  -[SBUIBiometricResource _addMatchingAssertion:]
  -[SBUIBiometricResource hasBiometricAuthenticationCapabilityEnabled]
  -[SBUIBiometricResource _deactivateAssertion:]
  -[SBUIBiometricResource isPearlDetectEnabled]
  -[SBUIBiometricResource _biometricKitInterface]
  -[SBUIBiometricResource _reallySetAuthenticated:keybagState:]
  -[SBUIBiometricResource _removeFingerDetectionWantedAssertion:HIDEventsOnly:]
  -[SBUIBiometricResource resumeMatchingAdvisory:]
  -[SBUIBiometricResource _deviceWillWake]
  -[SBUIBiometricResource _removeSimulatedLockoutAssertion:]
  -[SBUIBiometricResource noteScreenWillTurnOff]
  -[SBUIBiometricResource _keybagInterface]
  -[SBUIBiometricResource _activateFingerDetectAssertion:]
  -[SBUIBiometricResource unlockCredentialSet]
  -[SBUIBiometricResource succinctDescriptionBuilder]
  -[SBUIBiometricResource _activateFaceDetectAssertion:]
  -[SBUIBiometricResource _removeMatchingAssertion:]
  -[SBUIBiometricResource isPeriocularMatchingEnabled]
  -[SBUIBiometricResource resumeMatchingForAssertion:advisory:]
  -[SBUIBiometricResource authenticationPolicy]
  -[SBUIBiometricResource _reevaluateFingerDetection]
  -[SBUIBiometricResource biometricKitInterface:handleEvent:]
  -[SBUIBiometricResource _addFingerDetectionWantedAssertion:HIDEventsOnly:]
  -[SBUIBiometricResource _updateHandlersForEvent:]
  -[SBUIBiometricResource removeObserver:]
  -[SBUIBiometricResource _setKeybagInterface:]
  -[SBUIBiometricResource _matchingAllowedStateMayHaveChangedForReason:]
  -[SBUIBiometricResource _notifyObserversOfEvent:]
  -[SBUIBiometricResource _activateMatchAssertion:]
  -[SBUIBiometricResource setUnlockCredentialSet:]
  -[SBUIBiometricResource noteScreenWillTurnOn]
  -[SBUIBiometricResource acquireFingerDetectionWantedAssertionForReason:HIDEventsOnly:]
  -[SBUIBiometricResource init]
  -[SBUIBiometricResource _setBiometricKitInterface:]


SBSUIInCallSceneSettingsDiffInspector : FBSSceneSettingsDiffInspector
  // instance methods
  -[SBSUIInCallSceneSettingsDiffInspector observeInCallPresentationModeWithBlock:]
  -[SBSUIInCallSceneSettingsDiffInspector observeAttachedToWindowedAccessoryWithBlock:]


SBUIBannerSceneClientSettings : BNSceneClientSettings <BSSettingDescriptionProvider>
 @property  NSString *transitionDismissalPreventionReason
 @property  NSString *wantsDefaultGesturePriorityReason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUIBannerSceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBUIBannerSceneClientSettings keyDescriptionForSetting:]
  -[SBUIBannerSceneClientSettings mutableCopyWithZone:]
  -[SBUIBannerSceneClientSettings transitionDismissalPreventionReason]
  -[SBUIBannerSceneClientSettings wantsDefaultGesturePriorityReason]


SBUIMutableBannerSceneClientSettings : BNMutableSceneClientSettings <BSSettingDescriptionProvider>
 @property  NSString *transitionDismissalPreventionReason
 @property  NSString *wantsDefaultGesturePriorityReason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUIMutableBannerSceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBUIMutableBannerSceneClientSettings copyWithZone:]
  -[SBUIMutableBannerSceneClientSettings keyDescriptionForSetting:]
  -[SBUIMutableBannerSceneClientSettings transitionDismissalPreventionReason]
  -[SBUIMutableBannerSceneClientSettings wantsDefaultGesturePriorityReason]
  -[SBUIMutableBannerSceneClientSettings setTransitionDismissalPreventionReason:]
  -[SBUIMutableBannerSceneClientSettings setWantsDefaultGesturePriorityReason:]


SBUIBackgroundContentScene : UIWindowScene
  // instance methods
  -[SBUIBackgroundContentScene handleTouchAction:]


SBUISystemApertureElementSourceContainerViewController : UIViewController
 @property  UIViewController<SBUISystemApertureElement> *elementViewController

  // instance methods
  -[SBUISystemApertureElementSourceContainerViewController _canShowWhileLocked]
  -[SBUISystemApertureElementSourceContainerViewController .cxx_destruct]
  -[SBUISystemApertureElementSourceContainerViewController shouldAutomaticallyForwardAppearanceMethods]
  -[SBUISystemApertureElementSourceContainerViewController _transitionCoordinator]
  -[SBUISystemApertureElementSourceContainerViewController _childViewControllerForAlwaysOnTimelines]
  -[SBUISystemApertureElementSourceContainerViewController elementViewController]
  -[SBUISystemApertureElementSourceContainerViewController setElementViewController:]


SBUISystemApertureElementPresentationSession : NSObject <BSInvalidatable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUISystemApertureElementPresentationSession .cxx_destruct]
  -[SBUISystemApertureElementPresentationSession invalidate]
  -[SBUISystemApertureElementPresentationSession _handleSourceDidConnect:]
  -[SBUISystemApertureElementPresentationSession _associateWithSourceIfNeeded:]
  -[SBUISystemApertureElementPresentationSession activateWithElementProvider:]


SBUISystemApertureElementSource : NSObject <_UISceneComponentProviding, _UISceneSettingsDiffAction, UIGestureRecognizerDelegate, SBUISystemApertureHostedElementContext>
 @property  UIWindowScene *windowScene
 @property  UIWindow *elementViewControllerWindow
 @property  UIViewController<SBUISystemApertureElement> *_elementViewController
 @property  SBUISystemApertureElementConfiguration *mutableConfiguration
 @property  BSSettings *lastKnownOtherSettings
 @property  NSHashTable *_observers
 @property  SBUISystemApertureElementTransitionContext *transitionContext
 @property  long long layoutModeAsFarAsClientsAreConcerned
 @property  BOOL elementHasMenuPresentation
 @property  NSArray *_activeConstraintsForLayoutMode
 @property  NSLayoutConstraint *_maximumLeadingViewWidthConstraint
 @property  NSLayoutConstraint *_maximumTrailingViewWidthConstraint
 @property  NSMutableArray *_pendingCoordinatedAnimations
 @property  SBUIDependencyGestureRecognizer *dependencyGestureRecognizer
 @property  _SBUISystemApertureAlertingAssertion *alertingAssertion
 @property  BOOL elementCanRequestAlertingAssertion
 @property  NSString *associatedScenePersistenceIdentifier
 @property  UIScene *_scene
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SBUISystemApertureElementProviding> *systemApertureElementProvider
 @property  UIViewController<SBUISystemApertureElement> *systemApertureElement
 @property  <SBUISystemApertureElementProviding> *systemApertureElementViewControllerProvider
 @property  long long layoutMode
 @property  BOOL presentationPossible
 @property  UIView *containerView
 @property  UIView *layoutGuideRootView
 @property  BOOL fallbackContext

  // class methods
  +[SBUISystemApertureElementSource unassociatedContext]
  +[SBUISystemApertureElementSource _addSource:]
  +[SBUISystemApertureElementSource _removeSource:]
  +[SBUISystemApertureElementSource openSources]

  // instance methods
  -[SBUISystemApertureElementSource _observers]
  -[SBUISystemApertureElementSource _sceneWillInvalidate:]
  -[SBUISystemApertureElementSource _enumerateObserversRespondingToSelector:usingBlock:]
  -[SBUISystemApertureElementSource setWindowScene:]
  -[SBUISystemApertureElementSource _sceneSettings]
  -[SBUISystemApertureElementSource descriptionWithMultilinePrefix:]
  -[SBUISystemApertureElementSource _scene]
  -[SBUISystemApertureElementSource windowScene]
  -[SBUISystemApertureElementSource addObserver:]
  -[SBUISystemApertureElementSource descriptionBuilderWithMultilinePrefix:]
  -[SBUISystemApertureElementSource transitionContext]
  -[SBUISystemApertureElementSource _setScene:]
  -[SBUISystemApertureElementSource setTransitionContext:]
  -[SBUISystemApertureElementSource dealloc]
  -[SBUISystemApertureElementSource .cxx_destruct]
  -[SBUISystemApertureElementSource layoutMode]
  -[SBUISystemApertureElementSource setContainerView:]
  -[SBUISystemApertureElementSource succinctDescription]
  -[SBUISystemApertureElementSource containerView]
  -[SBUISystemApertureElementSource containerViewController]
  -[SBUISystemApertureElementSource _contentSizeCategoryDidChange]
  -[SBUISystemApertureElementSource _sendActions:]
  -[SBUISystemApertureElementSource gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[SBUISystemApertureElementSource _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:]
  -[SBUISystemApertureElementSource mutableConfiguration]
  -[SBUISystemApertureElementSource initWithScene:]
  -[SBUISystemApertureElementSource succinctDescriptionBuilder]
  -[SBUISystemApertureElementSource _settingsDiffActionsForScene:]
  -[SBUISystemApertureElementSource removeObserver:]
  -[SBUISystemApertureElementSource init]
  -[SBUISystemApertureElementSource _FBSScene]
  -[SBUISystemApertureElementSource setElementNeedsUpdate]
  -[SBUISystemApertureElementSource setElementNeedsUpdateWithCoordinatedAnimations:]
  -[SBUISystemApertureElementSource requestAlertingAssertion]
  -[SBUISystemApertureElementSource associatedScenePersistenceIdentifier]
  -[SBUISystemApertureElementSource systemApertureElementViewController]
  -[SBUISystemApertureElementSource systemApertureElement]
  -[SBUISystemApertureElementSource systemApertureElementViewControllerProvider]
  -[SBUISystemApertureElementSource requestTransitionToMaximumSupportedLayoutMode]
  -[SBUISystemApertureElementSource requestTransitionToPreferredLayoutMode]
  -[SBUISystemApertureElementSource requestNegativeResponseAnimation]
  -[SBUISystemApertureElementSource elementWillPresentMenu]
  -[SBUISystemApertureElementSource elementDidDismissMenu]
  -[SBUISystemApertureElementSource isFallbackContext]
  -[SBUISystemApertureElementSource _elementRequiresConstraintBasedLayout]
  -[SBUISystemApertureElementSource _elementSupportsDynamicResizing]
  -[SBUISystemApertureElementSource validateConfiguration]
  -[SBUISystemApertureElementSource _elementViewController]
  -[SBUISystemApertureElementSource setSystemApertureElementViewControllerProvider:]
  -[SBUISystemApertureElementSource _handleGestureDependencyChange:]
  -[SBUISystemApertureElementSource _conformsToSystemApertureElementContextPrivate]
  -[SBUISystemApertureElementSource systemApertureElementProvider]
  -[SBUISystemApertureElementSource setSystemApertureElementProvider:]
  -[SBUISystemApertureElementSource isPresentationPossible]
  -[SBUISystemApertureElementSource layoutGuideRootView]
  -[SBUISystemApertureElementSource _conformsToSystemApertureHostedElementContext]
  -[SBUISystemApertureElementSource registerWithScene:]
  -[SBUISystemApertureElementSource unregisterFromScene]
  -[SBUISystemApertureElementSource setLastKnownOtherSettings:]
  -[SBUISystemApertureElementSource setPresentationPossible:]
  -[SBUISystemApertureElementSource _ensureElementViewControllerIsInAWindow]
  -[SBUISystemApertureElementSource _performElementUpdate]
  -[SBUISystemApertureElementSource _performElementUpdateWithActionsIfPossible:]
  -[SBUISystemApertureElementSource _performElementUpdateWithActions:]
  -[SBUISystemApertureElementSource anchorFrameForLeadingView]
  -[SBUISystemApertureElementSource anchorFrameForTrailingView]
  -[SBUISystemApertureElementSource anchorFrameForMinimalView]
  -[SBUISystemApertureElementSource _elementIsInAWindow]
  -[SBUISystemApertureElementSource _activateConstraintsForActiveLayoutModeIfNeeded:]
  -[SBUISystemApertureElementSource _activateConstraintsForLayoutMode:]
  -[SBUISystemApertureElementSource _constraintsForLayoutMode:]
  -[SBUISystemApertureElementSource _wantsCenteredCustomLayout]
  -[SBUISystemApertureElementSource _handleResizeSceneAction:]
  -[SBUISystemApertureElementSource _ensureAccessoryViewLayoutForTransitionWithAnimator:]
  -[SBUISystemApertureElementSource _handleAlertingAction:]
  -[SBUISystemApertureElementSource _ensureAccessoryView:hasLayoutFrame:]
  -[SBUISystemApertureElementSource _updateTraitCollectionForElementIfNeeded]
  -[SBUISystemApertureElementSource _updateElementCanRequestAlertingAssertion]
  -[SBUISystemApertureElementSource _sendActionForCommand:]
  -[SBUISystemApertureElementSource elementViewControllerWindow]
  -[SBUISystemApertureElementSource setElementViewControllerWindow:]
  -[SBUISystemApertureElementSource set_elementViewController:]
  -[SBUISystemApertureElementSource lastKnownOtherSettings]
  -[SBUISystemApertureElementSource set_observers:]
  -[SBUISystemApertureElementSource layoutModeAsFarAsClientsAreConcerned]
  -[SBUISystemApertureElementSource setLayoutModeAsFarAsClientsAreConcerned:]
  -[SBUISystemApertureElementSource elementHasMenuPresentation]
  -[SBUISystemApertureElementSource setElementHasMenuPresentation:]
  -[SBUISystemApertureElementSource _activeConstraintsForLayoutMode]
  -[SBUISystemApertureElementSource set_activeConstraintsForLayoutMode:]
  -[SBUISystemApertureElementSource _maximumLeadingViewWidthConstraint]
  -[SBUISystemApertureElementSource set_maximumLeadingViewWidthConstraint:]
  -[SBUISystemApertureElementSource _maximumTrailingViewWidthConstraint]
  -[SBUISystemApertureElementSource set_maximumTrailingViewWidthConstraint:]
  -[SBUISystemApertureElementSource _pendingCoordinatedAnimations]
  -[SBUISystemApertureElementSource set_pendingCoordinatedAnimations:]
  -[SBUISystemApertureElementSource dependencyGestureRecognizer]
  -[SBUISystemApertureElementSource setDependencyGestureRecognizer:]
  -[SBUISystemApertureElementSource _alertingAssertion]
  -[SBUISystemApertureElementSource _setAlertingAssertion:]
  -[SBUISystemApertureElementSource elementCanRequestAlertingAssertion]
  -[SBUISystemApertureElementSource setElementCanRequestAlertingAssertion:]


SBUISystemApertureSecureWindow : UIWindow
  // class methods
  +[SBUISystemApertureSecureWindow _isSecure]

  // instance methods
  -[SBUISystemApertureSecureWindow accessibilityIgnoresInvertColors]
  -[SBUISystemApertureSecureWindow accessibilityApplyInvertFilter]
  -[SBUISystemApertureSecureWindow _accessibilityInvertColorsIsDarkWindow]


_SBUISystemApertureAlertingAssertion : SBUISystemApertureAssertion <SBUISystemApertureAutomaticallyInvalidatable>
 @property  SBUISystemApertureElementSource *elementSource
 @property  SBUISystemApertureAlertingAction *alertingAction
 @property  BOOL valid
 @property  BOOL automaticallyInvalidatable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBUISystemApertureAlertingAssertion elementSource]
  -[_SBUISystemApertureAlertingAssertion .cxx_destruct]
  -[_SBUISystemApertureAlertingAssertion setElementSource:]
  -[_SBUISystemApertureAlertingAssertion setAutomaticallyInvalidatable:]
  -[_SBUISystemApertureAlertingAssertion addInvalidationBlock:]
  -[_SBUISystemApertureAlertingAssertion _descriptionConstituents]
  -[_SBUISystemApertureAlertingAssertion resetAutomaticInvalidationTimer]
  -[_SBUISystemApertureAlertingAssertion isAutomaticallyInvalidatable]
  -[_SBUISystemApertureAlertingAssertion initWithElementSource:]
  -[_SBUISystemApertureAlertingAssertion setAlertingAction:]
  -[_SBUISystemApertureAlertingAssertion alertingAction]


SBUISystemApertureElementTransitionContext : NSObject
 @property  <UIViewControllerTransitionCoordinator> *transitionCoordinator
 @property  long long fromLayoutMode

  // instance methods
  -[SBUISystemApertureElementTransitionContext transitionCoordinator]
  -[SBUISystemApertureElementTransitionContext .cxx_destruct]
  -[SBUISystemApertureElementTransitionContext setTransitionCoordinator:]
  -[SBUISystemApertureElementTransitionContext fromLayoutMode]
  -[SBUISystemApertureElementTransitionContext setFromLayoutMode:]


SBUISystemApertureElementSourceAnimator : NSObject <UIViewControllerAnimatedTransitioning>
 @property  SBUISystemApertureAnimationParameters *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUISystemApertureElementSourceAnimator animateTransition:]
  -[SBUISystemApertureElementSourceAnimator initWithSettings:]
  -[SBUISystemApertureElementSourceAnimator transitionDuration:]
  -[SBUISystemApertureElementSourceAnimator .cxx_destruct]
  -[SBUISystemApertureElementSourceAnimator settings]
  -[SBUISystemApertureElementSourceAnimator addPreflightAction:]
  -[SBUISystemApertureElementSourceAnimator addPostflightAction:]
  -[SBUISystemApertureElementSourceAnimator addPreAlongsideAnimation:]
  -[SBUISystemApertureElementSourceAnimator addPostAlongsideAnimation:]


SBSUIStarkNotificationsSceneSettings : UIApplicationSceneSettings <SBSUIStarkNotificationsSceneSettings>
 @property  BOOL connectedWirelessly
 @property  BOOL geoSupported
 @property  unsigned long suspensionReasons
 @property  BSServiceConnectionEndpoint *openServiceEndpoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBSUIStarkNotificationsSceneSettings suspensionReasons]
  -[SBSUIStarkNotificationsSceneSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIStarkNotificationsSceneSettings keyDescriptionForSetting:]
  -[SBSUIStarkNotificationsSceneSettings mutableCopyWithZone:]
  -[SBSUIStarkNotificationsSceneSettings isConnectedWirelessly]
  -[SBSUIStarkNotificationsSceneSettings isGeoSupported]
  -[SBSUIStarkNotificationsSceneSettings openServiceEndpoint]


SBSUIMutableStarkNotificationsSceneSettings : UIMutableApplicationSceneSettings <SBSUIStarkNotificationsSceneSettings>
 @property  BOOL connectedWirelessly
 @property  BOOL geoSupported
 @property  unsigned long suspensionReasons
 @property  BSServiceConnectionEndpoint *openServiceEndpoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBSUIMutableStarkNotificationsSceneSettings suspensionReasons]
  -[SBSUIMutableStarkNotificationsSceneSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIMutableStarkNotificationsSceneSettings copyWithZone:]
  -[SBSUIMutableStarkNotificationsSceneSettings keyDescriptionForSetting:]
  -[SBSUIMutableStarkNotificationsSceneSettings isConnectedWirelessly]
  -[SBSUIMutableStarkNotificationsSceneSettings isGeoSupported]
  -[SBSUIMutableStarkNotificationsSceneSettings openServiceEndpoint]
  -[SBSUIMutableStarkNotificationsSceneSettings setConnectedWirelessly:]
  -[SBSUIMutableStarkNotificationsSceneSettings setGeoSupported:]
  -[SBSUIMutableStarkNotificationsSceneSettings setSuspensionReasons:]
  -[SBSUIMutableStarkNotificationsSceneSettings setOpenServiceEndpoint:]


SBUIDependencyGestureRecognizer : UIGestureRecognizer <UIGestureRecognizerDelegate>
 @property  NSSet *observedControlClasses
 @property  double hysteresis
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUIDependencyGestureRecognizer _convertPoint:fromSceneReferenceCoordinatesToView:]
  -[SBUIDependencyGestureRecognizer initWithTarget:action:]
  -[SBUIDependencyGestureRecognizer .cxx_destruct]
  -[SBUIDependencyGestureRecognizer setHysteresis:]
  -[SBUIDependencyGestureRecognizer touchesMoved:withEvent:]
  -[SBUIDependencyGestureRecognizer hysteresis]
  -[SBUIDependencyGestureRecognizer touchesBegan:withEvent:]
  -[SBUIDependencyGestureRecognizer observedControlClasses]
  -[SBUIDependencyGestureRecognizer setObservedControlClasses:]
  -[SBUIDependencyGestureRecognizer _didExceedHysteresisWithTouches:]


SBUILegibilityCache : NSObject
 @property  <SBUILegibilityEngine> *engine

  // instance methods
  -[SBUILegibilityCache removeAllObjects]
  -[SBUILegibilityCache engine]
  -[SBUILegibilityCache isCachedTemplateImage:]
  -[SBUILegibilityCache cachedStrengthForImage:strength:generator:]
  -[SBUILegibilityCache .cxx_destruct]
  -[SBUILegibilityCache cacheTemplateShadowImage:settings:maxSize:]
  -[SBUILegibilityCache templateImageForSettings:matchingSize:]
  -[SBUILegibilityCache _teardownMemoryPools]
  -[SBUILegibilityCache memoryPoolForGraphicsContextType:matchingSize:scale:]
  -[SBUILegibilityCache initWithEngine:]
  -[SBUILegibilityCache containsTemplateForSettings:]


SBUISystemApertureSceneSpecification : UIApplicationSceneSpecification
  // instance methods
  -[SBUISystemApertureSceneSpecification isInternal]
  -[SBUISystemApertureSceneSpecification uiSceneSessionRole]
  -[SBUISystemApertureSceneSpecification baseSceneComponentClassDictionary]
  -[SBUISystemApertureSceneSpecification affectsAppLifecycleIfInternal]
  -[SBUISystemApertureSceneSpecification allowsConfigurationByAppDelegate]


SpringBoardUIServices : NSObject

SBUIPasscodeLockViewInstallTonightWithKeyboard : SBUIPasscodeLockViewWithKeyboard
  // instance methods
  -[SBUIPasscodeLockViewInstallTonightWithKeyboard .cxx_destruct]
  -[SBUIPasscodeLockViewInstallTonightWithKeyboard setShowsCancelButton:]
  -[SBUIPasscodeLockViewInstallTonightWithKeyboard setShowsEmergencyCallButton:]
  -[SBUIPasscodeLockViewInstallTonightWithKeyboard initWithLightStyle:]
  -[SBUIPasscodeLockViewInstallTonightWithKeyboard _layoutStatusView]
  -[SBUIPasscodeLockViewInstallTonightWithKeyboard _actionButtonHit]
  -[SBUIPasscodeLockViewInstallTonightWithKeyboard _configureActionButton]
  -[SBUIPasscodeLockViewInstallTonightWithKeyboard _layoutActionButton]


SBUIEmergencyCallHostViewController : _UIRemoteViewController <SBUIEmergencyCallHostInterface>
 @property  long long backgroundStyle
 @property  UIColor *tintColor
 @property  double blurRadius
 @property  BOOL blursSelf

  // class methods
  +[SBUIEmergencyCallHostViewController exportedInterface]
  +[SBUIEmergencyCallHostViewController serviceViewControllerInterface]
  +[SBUIEmergencyCallHostViewController requestEmergencyCallControllerWithCompletion:]

  // instance methods
  -[SBUIEmergencyCallHostViewController dismiss]
  -[SBUIEmergencyCallHostViewController .cxx_destruct]
  -[SBUIEmergencyCallHostViewController viewWillAppear:]
  -[SBUIEmergencyCallHostViewController setBlurRadius:]
  -[SBUIEmergencyCallHostViewController tintColor]
  -[SBUIEmergencyCallHostViewController blurRadius]
  -[SBUIEmergencyCallHostViewController setBackgroundStyle:]
  -[SBUIEmergencyCallHostViewController setTintColor:]
  -[SBUIEmergencyCallHostViewController backgroundStyle]
  -[SBUIEmergencyCallHostViewController setBlursSelf:]
  -[SBUIEmergencyCallHostViewController tintColorForBackgroundStyle:outBlurRadius:]
  -[SBUIEmergencyCallHostViewController _createAndAddBlurViewIfNecessary]
  -[SBUIEmergencyCallHostViewController blursSelf]


SBUICallToActionLabel : UIView <CAAnimationDelegate>
 @property  SBUILegibilityLabel *label
 @property  CAGradientLayer *gradientLayer
 @property  unsigned long state
 @property  NSTimer *animationTimer
 @property  NSMutableArray *animationCompletionBlocks
 @property  NSString *text
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUICallToActionLabel sizeToFit]
  -[SBUICallToActionLabel animationDidStart:]
  -[SBUICallToActionLabel text]
  -[SBUICallToActionLabel _preferredTextSizeChanged:]
  -[SBUICallToActionLabel gradientLayer]
  -[SBUICallToActionLabel state]
  -[SBUICallToActionLabel setLabel:]
  -[SBUICallToActionLabel .cxx_destruct]
  -[SBUICallToActionLabel animationDidStop:finished:]
  -[SBUICallToActionLabel didMoveToSuperview]
  -[SBUICallToActionLabel layoutSubviews]
  -[SBUICallToActionLabel setLegibilitySettings:]
  -[SBUICallToActionLabel sizeThatFits:]
  -[SBUICallToActionLabel label]
  -[SBUICallToActionLabel initWithFrame:]
  -[SBUICallToActionLabel baselineOffset]
  -[SBUICallToActionLabel legibilitySettings]
  -[SBUICallToActionLabel setText:]
  -[SBUICallToActionLabel setState:]
  -[SBUICallToActionLabel setVisible:animated:]
  -[SBUICallToActionLabel setGradientLayer:]
  -[SBUICallToActionLabel fadeOut]
  -[SBUICallToActionLabel fadeIn]
  -[SBUICallToActionLabel _createLabel]
  -[SBUICallToActionLabel animationTimer]
  -[SBUICallToActionLabel setAnimationTimer:]
  -[SBUICallToActionLabel _actuallyRunGradientAnimation]
  -[SBUICallToActionLabel fadeInImmediately:]
  -[SBUICallToActionLabel fadeInImmediately:completion:]
  -[SBUICallToActionLabel fadeOutWithDuration:completion:]
  -[SBUICallToActionLabel cancelFadeInTimerIfNecessary]
  -[SBUICallToActionLabel setText:forLanguage:animated:]
  -[SBUICallToActionLabel _updateLabelTextWithLanguage:]
  -[SBUICallToActionLabel _callToActionFont]
  -[SBUICallToActionLabel _fontWithTextStyle:symbolicTraits:withMaximumFontSizeCategory:]
  -[SBUICallToActionLabel _createGradientLayer]
  -[SBUICallToActionLabel _runGradientAnimation:]
  -[SBUICallToActionLabel _invalidateGradientAnimationTimer]
  -[SBUICallToActionLabel _timerTriggered]
  -[SBUICallToActionLabel _runFadeAnimationForFadingOut:duration:completion:]
  -[SBUICallToActionLabel _resetGradientAndLabelBefore:]
  -[SBUICallToActionLabel _addAnimationCompletionBlockIfNecessary:]
  -[SBUICallToActionLabel _executePostAnimationCompletionBlocks]
  -[SBUICallToActionLabel animationCompletionBlocks]
  -[SBUICallToActionLabel setAnimationCompletionBlocks:]


SBSUIInCallSceneSettings : UIApplicationSceneSettings
 @property  long long inCallPresentationMode
 @property  BOOL attachedToWindowedAccessory
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} windowedAccessoryCutoutFrameInScreen
 @property  BOOL screenSharingPresentation
 @property  BOOL systemControlsShouldPresentAsEmbedded
 @property  NSUUID *requestedPresentationConfigurationIdentifier
 @property  BOOL beingShownAboveCoverSheet

  // instance methods
  -[SBSUIInCallSceneSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIInCallSceneSettings keyDescriptionForSetting:]
  -[SBSUIInCallSceneSettings mutableCopyWithZone:]
  -[SBSUIInCallSceneSettings isScreenSharingPresentation]
  -[SBSUIInCallSceneSettings systemControlsShouldPresentAsEmbedded]
  -[SBSUIInCallSceneSettings isBeingShownAboveCoverSheet]
  -[SBSUIInCallSceneSettings requestedPresentationConfigurationIdentifier]
  -[SBSUIInCallSceneSettings windowedAccessoryCutoutFrameInScreen]
  -[SBSUIInCallSceneSettings inCallPresentationMode]
  -[SBSUIInCallSceneSettings isAttachedToWindowedAccessory]


SBSUIMutableInCallSceneSettings : UIMutableApplicationSceneSettings
 @property  long long inCallPresentationMode
 @property  BOOL attachedToWindowedAccessory
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} windowedAccessoryCutoutFrameInScreen
 @property  BOOL screenSharingPresentation
 @property  BOOL systemControlsShouldPresentAsEmbedded
 @property  NSUUID *requestedPresentationConfigurationIdentifier
 @property  BOOL beingShownAboveCoverSheet

  // instance methods
  -[SBSUIMutableInCallSceneSettings .cxx_destruct]
  -[SBSUIMutableInCallSceneSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIMutableInCallSceneSettings copyWithZone:]
  -[SBSUIMutableInCallSceneSettings keyDescriptionForSetting:]
  -[SBSUIMutableInCallSceneSettings setDeactivationReasons:]
  -[SBSUIMutableInCallSceneSettings isScreenSharingPresentation]
  -[SBSUIMutableInCallSceneSettings setScreenSharingPresentation:]
  -[SBSUIMutableInCallSceneSettings systemControlsShouldPresentAsEmbedded]
  -[SBSUIMutableInCallSceneSettings isBeingShownAboveCoverSheet]
  -[SBSUIMutableInCallSceneSettings requestedPresentationConfigurationIdentifier]
  -[SBSUIMutableInCallSceneSettings windowedAccessoryCutoutFrameInScreen]
  -[SBSUIMutableInCallSceneSettings inCallPresentationMode]
  -[SBSUIMutableInCallSceneSettings isAttachedToWindowedAccessory]
  -[SBSUIMutableInCallSceneSettings setInCallPresentationMode:]
  -[SBSUIMutableInCallSceneSettings setAttachedToWindowedAccessory:]
  -[SBSUIMutableInCallSceneSettings setWindowedAccessoryCutoutFrameInScreen:]
  -[SBSUIMutableInCallSceneSettings setSystemControlsShouldPresentAsEmbedded:]
  -[SBSUIMutableInCallSceneSettings setBeingShownAboveCoverSheet:]
  -[SBSUIMutableInCallSceneSettings setRequestedPresentationConfigurationIdentifier:]


SBUIPoseidonIconView : UIView <CAAnimationDelegate>
 @property  <SBUIPoseidonIconViewDelegate> *delegate
 @property  _UILegibilitySettings *legibilitySettings
 @property  long long state
 @property  {CGAffineTransform=dddddd} localTransform
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUIPoseidonIconView setDelegate:]
  -[SBUIPoseidonIconView delegate]
  -[SBUIPoseidonIconView state]
  -[SBUIPoseidonIconView .cxx_destruct]
  -[SBUIPoseidonIconView animationDidStop:finished:]
  -[SBUIPoseidonIconView layoutSubviews]
  -[SBUIPoseidonIconView fillRestToOpenWithDuration:]
  -[SBUIPoseidonIconView setLegibilitySettings:]
  -[SBUIPoseidonIconView _contentSizeCategoryDidChange]
  -[SBUIPoseidonIconView resetRestToOpen]
  -[SBUIPoseidonIconView initWithFrame:]
  -[SBUIPoseidonIconView legibilitySettings]
  -[SBUIPoseidonIconView setState:]
  -[SBUIPoseidonIconView _fontSize]
  -[SBUIPoseidonIconView setState:forIdleTimeout:withCompletion:]
  -[SBUIPoseidonIconView setLocalTransform:]
  -[SBUIPoseidonIconView _physicalButtonNormalizedFrame]
  -[SBUIPoseidonIconView _cancelRestToOpenProgress]
  -[SBUIPoseidonIconView _startShimmer]
  -[SBUIPoseidonIconView _startReduceMotionShimmer]
  -[SBUIPoseidonIconView _stopShimmer]
  -[SBUIPoseidonIconView _startRestToOpenIdleTimer]
  -[SBUIPoseidonIconView _cancelRestToOpenIdleTimer]
  -[SBUIPoseidonIconView localTransform]


SBSUIStarkNotificationsSceneSpecification : UIApplicationStarkSceneSpecification
  // instance methods
  -[SBSUIStarkNotificationsSceneSpecification isInternal]
  -[SBSUIStarkNotificationsSceneSpecification isUIKitManaged]
  -[SBSUIStarkNotificationsSceneSpecification settingsClass]
  -[SBSUIStarkNotificationsSceneSpecification clientSettingsClass]
  -[SBSUIStarkNotificationsSceneSpecification transitionContextClass]
  -[SBSUIStarkNotificationsSceneSpecification baseSettingsDiffActions]
  -[SBSUIStarkNotificationsSceneSpecification baseActionHandlers]


_SBUIPresentableDismissalPreventionAssertion : NSObject <SBUIPresentableDismissalPreventionAssertion>
 @property  long long dismissalSource
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SBUIPresentableDismissalPreventionAssertion _isValidBannerDismissalSource:]

  // instance methods
  -[_SBUIPresentableDismissalPreventionAssertion dealloc]
  -[_SBUIPresentableDismissalPreventionAssertion .cxx_destruct]
  -[_SBUIPresentableDismissalPreventionAssertion reason]
  -[_SBUIPresentableDismissalPreventionAssertion invalidate]
  -[_SBUIPresentableDismissalPreventionAssertion initWithDismissalSource:reason:invalidationHandler:]
  -[_SBUIPresentableDismissalPreventionAssertion dismissalSource]


SBUILegibilityLabel : UIView <SBUILegibility, SBUILegibilityEngineProviding>
 @property  NSAttributedString *attributedText
 @property  NSString *string
 @property  UIColor *textColor
 @property  UIFont *font
 @property  long long numberOfLines
 @property  BOOL adjustsFontSizeToFitWidth
 @property  double minimumScaleFactor
 @property  long long textAlignment
 @property  long long lineBreakMode
 @property  float hyphenationFactor
 @property  long long options
 @property  {UIEdgeInsets=dddd} characterOverflowInsets
 @property  double firstBaselineOffsetFromBottom
 @property  double lastBaselineOffsetFromBottom
 @property  double baselineOffset
 @property  double strength
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SBUILegibilityEngine> *legibilityEngine

  // instance methods
  -[SBUILegibilityLabel setHyphenationFactor:]
  -[SBUILegibilityLabel characterOverflowInsets]
  -[SBUILegibilityLabel _intrinsicContentSizeInvalidatedForChildView:]
  -[SBUILegibilityLabel hyphenationFactor]
  -[SBUILegibilityLabel drawingColor]
  -[SBUILegibilityLabel shadowColor]
  -[SBUILegibilityLabel setNumberOfLines:]
  -[SBUILegibilityLabel viewForLastBaselineLayout]
  -[SBUILegibilityLabel setTextColor:]
  -[SBUILegibilityLabel setFrame:]
  -[SBUILegibilityLabel string]
  -[SBUILegibilityLabel setMinimumScaleFactor:]
  -[SBUILegibilityLabel setLegibilityEngine:]
  -[SBUILegibilityLabel setStrength:]
  -[SBUILegibilityLabel setTextAlignment:]
  -[SBUILegibilityLabel usesSecondaryColor]
  -[SBUILegibilityLabel _updateLegibilityView]
  -[SBUILegibilityLabel _markOurselfDirty]
  -[SBUILegibilityLabel .cxx_destruct]
  -[SBUILegibilityLabel minimumScaleFactor]
  -[SBUILegibilityLabel setAttributedText:]
  -[SBUILegibilityLabel numberOfLines]
  -[SBUILegibilityLabel attributedText]
  -[SBUILegibilityLabel options]
  -[SBUILegibilityLabel setLineBreakMode:]
  -[SBUILegibilityLabel viewForFirstBaselineLayout]
  -[SBUILegibilityLabel layoutSubviews]
  -[SBUILegibilityLabel initWithSettings:strength:string:font:options:]
  -[SBUILegibilityLabel lineBreakMode]
  -[SBUILegibilityLabel initWithSettings:strength:string:font:]
  -[SBUILegibilityLabel adjustsFontSizeToFitWidth]
  -[SBUILegibilityLabel setLegibilitySettings:]
  -[SBUILegibilityLabel setBounds:]
  -[SBUILegibilityLabel legibilityEngine]
  -[SBUILegibilityLabel textAlignment]
  -[SBUILegibilityLabel lastBaselineOffsetFromBottom]
  -[SBUILegibilityLabel sizeThatFits:]
  -[SBUILegibilityLabel setOptions:]
  -[SBUILegibilityLabel font]
  -[SBUILegibilityLabel textColor]
  -[SBUILegibilityLabel setFont:]
  -[SBUILegibilityLabel initWithSettings:strength:]
  -[SBUILegibilityLabel intrinsicContentSize]
  -[SBUILegibilityLabel setAdjustsFontSizeToFitWidth:]
  -[SBUILegibilityLabel initWithFrame:]
  -[SBUILegibilityLabel setString:]
  -[SBUILegibilityLabel _updateLabelColor]
  -[SBUILegibilityLabel firstBaselineOffsetFromBottom]
  -[SBUILegibilityLabel _updateLabelForLegibilitySettings]
  -[SBUILegibilityLabel strength]
  -[SBUILegibilityLabel baselineOffset]
  -[SBUILegibilityLabel traitCollectionDidChange:]
  -[SBUILegibilityLabel usesColorFilters]
  -[SBUILegibilityLabel legibilitySettings]
  -[SBUILegibilityLabel initWithCoder:]


SBSUIHardwareButtonEventSceneAction : BSAction
 @property  long long buttonEventType

  // instance methods
  -[SBSUIHardwareButtonEventSceneAction valueDescriptionForFlag:object:ofSetting:]
  -[SBSUIHardwareButtonEventSceneAction sendResponse:]
  -[SBSUIHardwareButtonEventSceneAction keyDescriptionForSetting:]
  -[SBSUIHardwareButtonEventSceneAction buttonEventType]
  -[SBSUIHardwareButtonEventSceneAction initWithButtonEventType:timeout:withResponseHandler:]


SBSUIHardwareButtonEventSceneActionResponse : BSActionResponse
 @property  long long buttonEventHandlingResult

  // instance methods
  -[SBSUIHardwareButtonEventSceneActionResponse keyDescriptionForSetting:]
  -[SBSUIHardwareButtonEventSceneActionResponse initWithButtonEventHandlingResult:error:]
  -[SBSUIHardwareButtonEventSceneActionResponse buttonEventHandlingResult]


SBUIInteractionForwardingView : UIView
 @property  NSSet *ignoreAlphaSubviews

  // instance methods
  -[SBUIInteractionForwardingView hitTest:withEvent:]
  -[SBUIInteractionForwardingView .cxx_destruct]
  -[SBUIInteractionForwardingView ignoreAlphaSubviews]
  -[SBUIInteractionForwardingView setIgnoreAlphaSubviews:]
  -[SBUIInteractionForwardingView addIgnoreAlphaSubview:]
  -[SBUIInteractionForwardingView removeIgnoreAlphaSubview:]


SBUIPeriocularController : NSObject
  // class methods
  +[SBUIPeriocularController sharedInstance]

  // instance methods
  -[SBUIPeriocularController periocularEnabled]


SBSUIRemoteAlertItemContentViewController : UIViewController <SBSUIRemoteAlertItemContentServiceInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SBSUIRemoteAlertItemContentViewController _exportedInterface]
  +[SBSUIRemoteAlertItemContentViewController _remoteViewControllerInterface]

  // instance methods
  -[SBSUIRemoteAlertItemContentViewController viewDidLoad]
  -[SBSUIRemoteAlertItemContentViewController viewDidLayoutSubviews]
  -[SBSUIRemoteAlertItemContentViewController getPreferredContentSizeWithReplyBlock:]
  -[SBSUIRemoteAlertItemContentViewController invalidatePreferredContentSize]


SBUIRemoteAlertIdleTimerSettings : NSObject <NSSecureCoding>
 @property  double autoLockTimeout
 @property  BOOL disablesWarn
 @property  BOOL usesLockScreenRules

  // class methods
  +[SBUIRemoteAlertIdleTimerSettings supportsSecureCoding]

  // instance methods
  -[SBUIRemoteAlertIdleTimerSettings encodeWithCoder:]
  -[SBUIRemoteAlertIdleTimerSettings autoLockTimeout]
  -[SBUIRemoteAlertIdleTimerSettings initWithCoder:]
  -[SBUIRemoteAlertIdleTimerSettings setAutoLockTimeout:]
  -[SBUIRemoteAlertIdleTimerSettings disablesWarn]
  -[SBUIRemoteAlertIdleTimerSettings setDisablesWarn:]
  -[SBUIRemoteAlertIdleTimerSettings usesLockScreenRules]
  -[SBUIRemoteAlertIdleTimerSettings setUsesLockScreenRules:]


SBUIRemoteAlertServiceViewController : UIViewController <SBUIRemoteAlertServiceInterface_Internal, SBUIRemoteAlertServiceInterface>
  // class methods
  +[SBUIRemoteAlertServiceViewController _exportedInterface]
  +[SBUIRemoteAlertServiceViewController _remoteViewControllerInterface]

  // instance methods
  -[SBUIRemoteAlertServiceViewController setUserInfo:]
  -[SBUIRemoteAlertServiceViewController initWithNibName:bundle:]
  -[SBUIRemoteAlertServiceViewController dealloc]
  -[SBUIRemoteAlertServiceViewController preferredStatusBarStyle]
  -[SBUIRemoteAlertServiceViewController handleDoubleHeightStatusBarTap]
  -[SBUIRemoteAlertServiceViewController synchronizeAnimationsInActions:]
  -[SBUIRemoteAlertServiceViewController configureWithContext:completion:]
  -[SBUIRemoteAlertServiceViewController handleButtonActions:]
  -[SBUIRemoteAlertServiceViewController didInvalidateForRemoteAlert]
  -[SBUIRemoteAlertServiceViewController didTransitionToAttachedToWindowedAccessory:windowedAccessoryCutoutFrameInScreen:]
  -[SBUIRemoteAlertServiceViewController prepareForActivationWithContext:completion:]
  -[SBUIRemoteAlertServiceViewController noteActivatedWithPresentationMode:]
  -[SBUIRemoteAlertServiceViewController noteActivatedForActivityContinuationWithIdentifier:]
  -[SBUIRemoteAlertServiceViewController sb_becomeFirstResponder]
  -[SBUIRemoteAlertServiceViewController sb_resignFirstResponder]
  -[SBUIRemoteAlertServiceViewController sb_preserveInputViewsAnimated:]
  -[SBUIRemoteAlertServiceViewController sb_restoreInputViewsAnimated:]
  -[SBUIRemoteAlertServiceViewController sb_presentForAlertAnimated:completion:]
  -[SBUIRemoteAlertServiceViewController sb_dismissForAlertAnimated:completion:]
  -[SBUIRemoteAlertServiceViewController _selectorIsOverriden:]


SBUIPresentableButtonEventsAction : BSAction <SBUIPresentableButtonEventsAssertion>
 @property  long long presentableButtonEvent
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUIPresentableButtonEventsAction .cxx_destruct]
  -[SBUIPresentableButtonEventsAction reason]
  -[SBUIPresentableButtonEventsAction invalidate]
  -[SBUIPresentableButtonEventsAction keyDescriptionForSetting:]
  -[SBUIPresentableButtonEventsAction _expectsResponse]
  -[SBUIPresentableButtonEventsAction _descriptionBuilderWithMultilinePrefix:debug:]
  -[SBUIPresentableButtonEventsAction presentableButtonEvent]
  -[SBUIPresentableButtonEventsAction initWithButtonEvent:reason:handler:]
  -[SBUIPresentableButtonEventsAction handleButtonEvent]


SBUIExternalPreferences : NSObject
 @property  BOOL keyboardPlaysSounds

  // class methods
  +[SBUIExternalPreferences sharedInstance]

  // instance methods
  -[SBUIExternalPreferences .cxx_destruct]
  -[SBUIExternalPreferences init]
  -[SBUIExternalPreferences keyboardPlaysSounds]
  -[SBUIExternalPreferences setKeyboardPlaysSounds:]


_SBUISwitcherPageServiceViewController : UIViewController <_SBUISwitcherPageProviderInterface>
  // class methods
  +[_SBUISwitcherPageServiceViewController _exportedInterface]
  +[_SBUISwitcherPageServiceViewController _remoteViewControllerInterface]


SBUIFaceIDCameraGlyphView : SBFTouchPassThroughView
 @property  _UILegibilityView *arrowHead
 @property  _UILegibilityView *arrowTail
 @property  SBUILegibilityLabel *callToActionLabel
 @property  UIView *arrowContainer
 @property  CALayer *maskContainerLayer
 @property  CALayer *maskTopLayer
 @property  CALayer *maskLeftLayer
 @property  CALayer *maskRightLayer
 @property  UIView *localRotationView
 @property  _UILegibilitySettings *legibilitySettings
 @property  {CGAffineTransform=dddddd} localTransform
 @property  unsigned long state

  // instance methods
  -[SBUIFaceIDCameraGlyphView callToActionLabel]
  -[SBUIFaceIDCameraGlyphView state]
  -[SBUIFaceIDCameraGlyphView .cxx_destruct]
  -[SBUIFaceIDCameraGlyphView layoutSubviews]
  -[SBUIFaceIDCameraGlyphView setLegibilitySettings:]
  -[SBUIFaceIDCameraGlyphView initWithFrame:]
  -[SBUIFaceIDCameraGlyphView setCallToActionLabel:]
  -[SBUIFaceIDCameraGlyphView legibilitySettings]
  -[SBUIFaceIDCameraGlyphView setState:]
  -[SBUIFaceIDCameraGlyphView setLocalTransform:]
  -[SBUIFaceIDCameraGlyphView localTransform]
  -[SBUIFaceIDCameraGlyphView _updateCallToActionLabelFont]
  -[SBUIFaceIDCameraGlyphView _installMask]
  -[SBUIFaceIDCameraGlyphView setState:delay:]
  -[SBUIFaceIDCameraGlyphView _flyInWithText:delay:]
  -[SBUIFaceIDCameraGlyphView _fadeComponentsIn:completion:]
  -[SBUIFaceIDCameraGlyphView _fadeComponenetsOut:completion:]
  -[SBUIFaceIDCameraGlyphView _setAlpha:onComponents:completion:]
  -[SBUIFaceIDCameraGlyphView _removeAnimations]
  -[SBUIFaceIDCameraGlyphView arrowContainer]
  -[SBUIFaceIDCameraGlyphView setArrowContainer:]
  -[SBUIFaceIDCameraGlyphView arrowHead]
  -[SBUIFaceIDCameraGlyphView setArrowHead:]
  -[SBUIFaceIDCameraGlyphView arrowTail]
  -[SBUIFaceIDCameraGlyphView setArrowTail:]
  -[SBUIFaceIDCameraGlyphView maskContainerLayer]
  -[SBUIFaceIDCameraGlyphView setMaskContainerLayer:]
  -[SBUIFaceIDCameraGlyphView maskTopLayer]
  -[SBUIFaceIDCameraGlyphView setMaskTopLayer:]
  -[SBUIFaceIDCameraGlyphView maskLeftLayer]
  -[SBUIFaceIDCameraGlyphView setMaskLeftLayer:]
  -[SBUIFaceIDCameraGlyphView maskRightLayer]
  -[SBUIFaceIDCameraGlyphView setMaskRightLayer:]
  -[SBUIFaceIDCameraGlyphView localRotationView]
  -[SBUIFaceIDCameraGlyphView setLocalRotationView:]


SBSUISystemNotesWindowSceneBSActionsHandler : NSObject <_UISceneBSActionHandler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBSUISystemNotesWindowSceneBSActionsHandler _launchOptionsFromActions:forFBSScene:uiSceneSession:transitionContext:]
  -[SBSUISystemNotesWindowSceneBSActionsHandler _respondToActions:forFBSScene:inUIScene:fromTransitionContext:]


SBSearchBar : UINavigationBar
  // class methods
  +[SBSearchBar _supportsCanvasView]


SBUISpotlightBarNavigationController : UINavigationController <UINavigationControllerDelegate>
 @property  SBSearchBar *navigationBar
 @property  UIViewController<SBUISearchBarControlling> *searchBarViewController
 @property  BOOL pullingToSearch
 @property  BOOL navigationBarBottomTrailingCornerRounded
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUISpotlightBarNavigationController _canShowWhileLocked]
  -[SBUISpotlightBarNavigationController initWithRootViewController:]
  -[SBUISpotlightBarNavigationController .cxx_destruct]
  -[SBUISpotlightBarNavigationController viewWillAppear:]
  -[SBUISpotlightBarNavigationController setLegibilitySettings:]
  -[SBUISpotlightBarNavigationController viewDidDisappear:]
  -[SBUISpotlightBarNavigationController searchBarViewController]
  -[SBUISpotlightBarNavigationController legibilitySettings]
  -[SBUISpotlightBarNavigationController _statusBarHeightAdjustmentForCurrentOrientation]
  -[SBUISpotlightBarNavigationController initWithRootViewController:searchBarViewController:]
  -[SBUISpotlightBarNavigationController setNavigationBarBlurProgress:animated:]
  -[SBUISpotlightBarNavigationController isNavigationBarBottomTrailingCornerRounded]
  -[SBUISpotlightBarNavigationController setNavigationBarBottomTrailingCornerRounded:]
  -[SBUISpotlightBarNavigationController setSearchBarViewController:]
  -[SBUISpotlightBarNavigationController isPullingToSearch]
  -[SBUISpotlightBarNavigationController setPullingToSearch:]


_SBSUICFUserNotificationContentRemoteContainerViewController : UIViewController <_SBSUICFUserNotificationContentExtensionRemoteInterface>
 @property  UIViewController<SBSUIUserNotificationContentProviding> *extensionViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SBSUICFUserNotificationContentRemoteContainerViewController _isSecureForRemoteViewService]
  +[_SBSUICFUserNotificationContentRemoteContainerViewController _exportedInterface]
  +[_SBSUICFUserNotificationContentRemoteContainerViewController _remoteViewControllerInterface]

  // instance methods
  -[_SBSUICFUserNotificationContentRemoteContainerViewController addChildViewController:]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController _canShowWhileLocked]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController _updatePreferredContentSize]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController .cxx_destruct]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController viewDidLoad]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController viewWillAppear:]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController viewDidLayoutSubviews]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController viewDidDisappear:]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController invalidateWithCompletion:]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController beginRequestWithExtensionContext:]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController extensionViewController]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController setExtensionViewController:]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController configureWithCompletion:]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController userNotificationContentExtensionContext]
  -[_SBSUICFUserNotificationContentRemoteContainerViewController _trackChildViewController:]


SBSUIWallpaperService : NSObject
  // class methods
  +[SBSUIWallpaperService getWallpaperLegibilitySettingsForVariant:]
  +[SBSUIWallpaperService setWallpaperImage:adjustedImage:thumbnailData:imageHashData:wallpaperOptions:forLocations:currentWallpaperMode:]
  +[SBSUIWallpaperService setProceduralWallpaperIdentifier:options:locations:]
  +[SBSUIWallpaperService removeWallpaperVideo]
  +[SBSUIWallpaperService setWallpaperWithVideo:sandboxToken:cropRect:wallpaperMode:]
  +[SBSUIWallpaperService restoreDefaultWallpaper]
  +[SBSUIWallpaperService setWallpaperColor:darkColor:forLocations:]
  +[SBSUIWallpaperService setWallpaperGradient:forLocations:]
  +[SBSUIWallpaperService getWallpaperOptionsForVariant:]
  +[SBSUIWallpaperService _setupAndActivateServiceClientConnection]
  +[SBSUIWallpaperService _remoteTargetForServiceClientConnection:]


SBUISystemApertureCAPackageContentProvider : NSObject <SBUISystemApertureContentViewProviding>
 @property  {CGSize=dd} intrinsicPackageSize
 @property  UIView *providedView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBUISystemApertureCAPackageContentProvider initWithURL:]
  -[SBUISystemApertureCAPackageContentProvider .cxx_destruct]
  -[SBUISystemApertureCAPackageContentProvider setState:animated:]
  -[SBUISystemApertureCAPackageContentProvider intrinsicPackageSize]
  -[SBUISystemApertureCAPackageContentProvider setIntrinsicPackageSize:]
  -[SBUISystemApertureCAPackageContentProvider initWithPackageName:inBundle:]
  -[SBUISystemApertureCAPackageContentProvider publishedObjectWithName:]
  -[SBUISystemApertureCAPackageContentProvider providedView]
  -[SBUISystemApertureCAPackageContentProvider _providedView]


_SBUISystemApertureCAPackageView : BSUICAPackageView
 @property  {CGSize=dd} intrinsicPackageSize

  // instance methods
  -[_SBUISystemApertureCAPackageView intrinsicPackageSize]
  -[_SBUISystemApertureCAPackageView setIntrinsicPackageSize:]
  -[_SBUISystemApertureCAPackageView sizeThatFits:]


_SBUIWidgetViewController : UIViewController <_SBUIWidgetHost>
 @property  NSString *widgetIdentifier
 @property  <_SBUIWidgetHost> *widgetHost
 @property  {CGSize=dd} preferredViewSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBUIWidgetViewController widgetIdentifier]
  -[_SBUIWidgetViewController .cxx_destruct]
  -[_SBUIWidgetViewController setVisibleWidgetsIDs:]
  -[_SBUIWidgetViewController widgetHost]
  -[_SBUIWidgetViewController setWidgetIdentifier:]
  -[_SBUIWidgetViewController requestLaunchOfURL:]
  -[_SBUIWidgetViewController invalidatePreferredViewSize]
  -[_SBUIWidgetViewController preferredViewSize]
  -[_SBUIWidgetViewController hostWillPresent]
  -[_SBUIWidgetViewController hostDidPresent]
  -[_SBUIWidgetViewController hostWillDismiss]
  -[_SBUIWidgetViewController hostDidDismiss]
  -[_SBUIWidgetViewController setWidgetHost:]


UIColor(SBUIColorAdditions)
	// class methods
	+[UIColor(SBUIColorAdditions) sbui_systemColorNamed:]
	+[UIColor(SBUIColorAdditions) sbui_randomColor]

	// instance methods
	-[UIColor(SBUIColorAdditions) sb_isGrayscale]
	-[UIColor(SBUIColorAdditions) sb_brightness]

UITraitCollection(SBUISystemApertureStylingPrivate)
	// class methods
	+[UITraitCollection(SBUISystemApertureStylingPrivate) sbui_bestTraitCollection]
	+[UITraitCollection(SBUISystemApertureStylingPrivate) sbui_traitCollectionForElement:]

	// instance methods
	-[UITraitCollection(SBUISystemApertureStylingPrivate) sbui_preferredContentSizeCategoryAllowingTraitsForCustomLayoutMode:]
	-[UITraitCollection(SBUISystemApertureStylingPrivate) sbui_traitCollectionAllowingTraitsForCustomLayoutMode:]

UIView(SBUISystemApertureStyling)
	// class methods
	+[UIView(SBUISystemApertureStyling) SBUISA_animateWithSettings:animations:completion:]

	// instance methods
	-[UIView(SBUISystemApertureStyling) systemApertureElementContext]
	-[UIView(SBUISystemApertureStyling) SBUISA_standardInteritemPadding]
	-[UIView(SBUISystemApertureStyling) SBUISA_systemApertureObstructedAreaLayoutGuide]
	-[UIView(SBUISystemApertureStyling) sbui_systemApertureApplyMinimumAndMaximumContentSizeCategoryForCustomLayoutMode:]
	-[UIView(SBUISystemApertureStyling) SBUISA_layoutMode]
	-[UIView(SBUISystemApertureStyling) sb_setBoundsAndPositionFromFrame:]
	-[UIView(SBUISystemApertureStyling) sb_setPresentationBoundsAndPositionFromFrame:]
	-[UIView(SBUISystemApertureStyling) SBUISA_systemApertureLayoutGuideWithIdentifier:]
	-[UIView(SBUISystemApertureStyling) SBUISA_systemApertureMaximumContentSizeLayoutGuide]
	-[UIView(SBUISystemApertureStyling) SBUISA_systemApertureMinimumContentSizeLayoutGuide]
	-[UIView(SBUISystemApertureStyling) SBUISA_maximumAccessoryViewWidth]
	-[UIView(SBUISystemApertureStyling) SBUISA_systemApertureLeadingConcentricContentLayoutGuide]
	-[UIView(SBUISystemApertureStyling) SBUISA_systemApertureTrailingConcentricContentLayoutGuide]
	-[UIView(SBUISystemApertureStyling) SBUISA_systemApertureCustomControlsContentLayoutGuide]
	-[UIView(SBUISystemApertureStyling) SBUISA_systemApertureLegibleContentLayoutMarginsGuide]
	-[UIView(SBUISystemApertureStyling) SBUISA_systemApertureLeadingViewLayoutGuide]
	-[UIView(SBUISystemApertureStyling) SBUISA_systemApertureTrailingViewLayoutGuide]
	-[UIView(SBUISystemApertureStyling) SBUISA_systemApertureMinimalViewLayoutGuide]

UIButtonConfiguration(SBUISystemApertureStyling)
	// class methods
	+[UIButtonConfiguration(SBUISystemApertureStyling) sbui_systemApertureTextButtonConfiguration]
	+[UIButtonConfiguration(SBUISystemApertureStyling) sbui_systemApertureTextButtonConfigurationCompatibleWithTraitCollection:]
	+[UIButtonConfiguration(SBUISystemApertureStyling) sbui_systemApertureSymbolButtonConfiguration]
	+[UIButtonConfiguration(SBUISystemApertureStyling) _sbui_titleTextAttributesTransformerForTitleFont:]

UIButton(SBUISystemApertureStyling)
	// instance methods
	-[UIButton(SBUISystemApertureStyling) sbui_updateConfiguration]
	-[UIButton(SBUISystemApertureStyling) sbui_removePointerInteraction]

UIFont(SBUISystemApertureStyling)
	// class methods
	+[UIFont(SBUISystemApertureStyling) sbui_systemAperturePreferredFontForTextStyle:compatibleWithTraitCollection:]
	+[UIFont(SBUISystemApertureStyling) sbui_systemAperturePreferredFontForTextStyle:]
	+[UIFont(SBUISystemApertureStyling) sbui_systemAperturePreferredTextButtonFont]
	+[UIFont(SBUISystemApertureStyling) sbui_systemAperturePreferredTextButtonFontCompatibleWithTraitCollection:]

UIImageSymbolConfiguration(SBUISystemApertureStyling)
	// class methods
	+[UIImageSymbolConfiguration(SBUISystemApertureStyling) sbui_systemApertureDefaultConfiguration]
	+[UIImageSymbolConfiguration(SBUISystemApertureStyling) sbui_systemApertureControlConfiguration]

(SBUIPresentableHomeGestureContext)
	// instance methods
	-[(SBUIPresentableHomeGestureContext) systemApertureElementContext]
	-[(SBUIPresentableHomeGestureContext) presentableHomeGestureContext]
	-[(SBUIPresentableHomeGestureContext) presentableGestureRecognizerPriorityContext]
	-[(SBUIPresentableHomeGestureContext) presentableDismissalPreventionContext]
	-[(SBUIPresentableHomeGestureContext) presentableButtonEventsContext]
	-[(SBUIPresentableHomeGestureContext) systemApertureElementContextPrivate]
	-[(SBUIPresentableHomeGestureContext) systemApertureHostedElementContext]

(SBPasscodeLockEntryFieldExtras)
	// instance methods
	-[(SBPasscodeLockEntryFieldExtras) isSingleCharacterAndMemberOfSet:]
	-[(SBPasscodeLockEntryFieldExtras) isNewline]

FBSSceneSettings(SBUISystemAperture)
	// instance methods
	-[FBSSceneSettings(SBUISystemAperture) SBUISA_layoutMode]
	-[FBSSceneSettings(SBUISystemAperture) SBUISA_containerViewFrame]
	-[FBSSceneSettings(SBUISystemAperture) SBUISA_resolvedLeadingViewFrame]
	-[FBSSceneSettings(SBUISystemAperture) SBUISA_resolvedTrailingViewFrame]
	-[FBSSceneSettings(SBUISystemAperture) SBUISA_resolvedMinimalViewFrame]
	-[FBSSceneSettings(SBUISystemAperture) SBUISA_obstructedAreaLayoutFrame]
	-[FBSSceneSettings(SBUISystemAperture) SBUISA_minimalViewLayoutAxis]
	-[FBSSceneSettings(SBUISystemAperture) SBUI_systemApertureDescription]
	-[FBSSceneSettings(SBUISystemAperture) SBUI_systemApertureDescriptionOfDiffFromSettings:]

SBSSystemNotesPresentationConfiguration(UIUtilities)
	// instance methods
	-[SBSSystemNotesPresentationConfiguration(UIUtilities) _uiActivityContinuationAction]

NSItemProvider(SBUISystemDrag)
	// instance methods
	-[NSItemProvider(SBUISystemDrag) sbui_preferredApplicationBundleIdentifier]
	-[NSItemProvider(SBUISystemDrag) sbui_setPreferredApplicationBundleIdentifier:]
	-[NSItemProvider(SBUISystemDrag) sbui_requiredApplicationBundleIdentifier]
	-[NSItemProvider(SBUISystemDrag) sbui_setRequiredApplicationBundleIdentifier:]
	-[NSItemProvider(SBUISystemDrag) sbui_isIgnored]
	-[NSItemProvider(SBUISystemDrag) sbui_setIgnored:]

UIApplicationSceneTransitionContext(SBSUIInCallSceneAdditions)
	// instance methods
	-[UIApplicationSceneTransitionContext(SBSUIInCallSceneAdditions) SBSUI_inCallAnalyticsSource]
	-[UIApplicationSceneTransitionContext(SBSUIInCallSceneAdditions) SBSUI_setInCallAnalyticsSource:]

UIImage(SBUILegibilityAdditions)
	// class methods
	+[UIImage(SBUILegibilityAdditions) sbui_legibilityImageForSettings:scale:inputImage:inputSize:type:pool:]
	+[UIImage(SBUILegibilityAdditions) sbui_legibilityImageForSettings:scale:inputImage:inputSize:allowMinFillHeightHack:type:pool:]
	+[UIImage(SBUILegibilityAdditions) sbui_legibilityImageForSettings:scale:inputImage:inputSize:allowMinFillHeightHack:strength:type:pool:]

	// instance methods
	-[UIImage(SBUILegibilityAdditions) sbui_strikeImageForLegibilitySettings:strength:size:type:pool:]
	-[UIImage(SBUILegibilityAdditions) sbui_legibilityImageForSettings:scale:pool:]

BSSettings(SBUISystemAperture)
	// instance methods
	-[BSSettings(SBUISystemAperture) SBUI_systemApertureDescription]
	-[BSSettings(SBUISystemAperture) SBUI_systemApertureDescriptionOfDiffFromSettings:]
	-[BSSettings(SBUISystemAperture) SBUISA_contentRoleforSetting:]
	-[BSSettings(SBUISystemAperture) SBUISA_stringforSetting:]
	-[BSSettings(SBUISystemAperture) SBUISA_URLforSetting:]
	-[BSSettings(SBUISystemAperture) SBUISA_CGRectforSetting:]
	-[BSSettings(SBUISystemAperture) SBUISA_CGSizeforSetting:]
	-[BSSettings(SBUISystemAperture) SBUISA_layoutModeforSetting:]
	-[BSSettings(SBUISystemAperture) SBUISA_contextIdforSetting:]
	-[BSSettings(SBUISystemAperture) SBUISA_renderingIdforSetting:]
	-[BSSettings(SBUISystemAperture) SBUISA_directionalEdgeInsetsforSetting:]
	-[BSSettings(SBUISystemAperture) SBUISA_statusBarStyleOverridesForSetting:]
	-[BSSettings(SBUISystemAperture) SBUISA_customLayoutModeforSetting:]
	-[BSSettings(SBUISystemAperture) SBUISA_presentationBehaviorsForSetting:]
	-[BSSettings(SBUISystemAperture) SBUISA_UIColorForSetting:]

BSMutableSettings(SBUISystemAperture)
	// instance methods
	-[BSMutableSettings(SBUISystemAperture) SBUISA_setString:forSetting:]
	-[BSMutableSettings(SBUISystemAperture) SBUISA_setURL:forSetting:]
	-[BSMutableSettings(SBUISystemAperture) SBUISA_setCGRect:forSetting:]
	-[BSMutableSettings(SBUISystemAperture) SBUISA_setCGSize:forSetting:]
	-[BSMutableSettings(SBUISystemAperture) SBUISA_setDirectionalEdgeInsets:forSetting:]
	-[BSMutableSettings(SBUISystemAperture) SBUISA_setContextId:forSetting:]
	-[BSMutableSettings(SBUISystemAperture) SBUISA_setRenderingid:forSetting:]
	-[BSMutableSettings(SBUISystemAperture) SBUISA_setLayoutMode:forSetting:]
	-[BSMutableSettings(SBUISystemAperture) SBUISA_setContentRole:forSetting:]
	-[BSMutableSettings(SBUISystemAperture) SBUISA_setStatusBarStyleOverrides:forSetting:]
	-[BSMutableSettings(SBUISystemAperture) SBUISA_setPresentationBehaviors:forSetting:]
	-[BSMutableSettings(SBUISystemAperture) SBUISA_setUIColor:forSetting:]
	-[BSMutableSettings(SBUISystemAperture) SBUISA_setCustomLayout:forSetting:]

_UILegibilitySettings(SBUILegibilitySettingsAdditions)
	// instance methods
	-[_UILegibilitySettings(SBUILegibilitySettingsAdditions) shadowSettings]

FBSSceneClientSettings(SBUISystemAperture)
	// instance methods
	-[FBSSceneClientSettings(SBUISystemAperture) SBUI_systemApertureDescription]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUI_systemApertureDescriptionOfDiffFromSettings:]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_elementIdentifier]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_contentRole]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_preferredLayoutMode]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_minimumLayoutMode]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_maximumLayoutMode]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_appliedLayoutMode]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_associatedScenePersistenceIdentifier]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_associatedAppBundleIdentifier]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_launchURL]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_preferredLeadingViewSize]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_preferredTrailingViewSize]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_preferredMinimalViewSize]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_leadingViewRenderingId]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_trailingViewRenderingId]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_minimalViewRenderingId]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_contextId]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_customLayoutPreferredOutsetsFromUnsafeArea]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_statusBarStyleOverridesToSuppress]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_preferredCustomAspectRatio]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_preferredCustomLayout]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_hasMenuPresentation]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_presentationBehaviors]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_specifiesPreferredPaddingForCompactLayout]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_preferredPaddingForCompactLayout]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_preventsInteractiveDismissal]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_preventsAutomaticDismissal]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_leadingViewAccessibilityLabel]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_trailingViewAccessibilityLabel]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_minimalViewAccessibilityLabel]
	-[FBSSceneClientSettings(SBUISystemAperture) SBUISA_keyColor]

NSLayoutConstraint(SBUISAUtilities)
	// instance methods
	-[NSLayoutConstraint(SBUISAUtilities) SBUISA_withPriority:]

UIWindowScene(SBUISystemAperture)
	// instance methods
	-[UIWindowScene(SBUISystemAperture) SBUI_isHostedBySystemAperture]
	-[UIWindowScene(SBUISystemAperture) systemApertureElementContext]
	-[UIWindowScene(SBUISystemAperture) systemApertureElementViewControllerProvider]
	-[UIWindowScene(SBUISystemAperture) systemApertureElementContextPrivate]
	-[UIWindowScene(SBUISystemAperture) systemApertureHostedElementContext]
	-[UIWindowScene(SBUISystemAperture) systemApertureElementSource]
	-[UIWindowScene(SBUISystemAperture) setSystemApertureElementViewControllerProvider:]

UIWindow(SBUISystemApertureElementContextProviding)
	// instance methods
	-[UIWindow(SBUISystemApertureElementContextProviding) systemApertureElementContext]

UIViewController(SBUISystemApertureElementContextProviding)
	// instance methods
	-[UIViewController(SBUISystemApertureElementContextProviding) systemApertureElementContext]

UIApplication(SBSUIInCallAdditions)
	// instance methods
	-[UIApplication(SBSUIInCallAdditions) SBSUI_requestInCallSceneSessionDestruction:withReason:completion:]
	-[UIApplication(SBSUIInCallAdditions) SBSUI_requestInCallSceneSessionDestruction:withReason:analyticsSource:completion:]

01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0100 /System/Library/PrivateFrameworks/BannerKit.framework/BannerKit: BNBannerClientContainerViewController 
01 00 0100 /System/Library/PrivateFrameworks/BannerKit.framework/BannerKit: BNBannerSourceApplicationSceneSpecification 
01 00 0100 /System/Library/PrivateFrameworks/BannerKit.framework/BannerKit: BNMutableSceneClientSettings 
01 00 0100 /System/Library/PrivateFrameworks/BannerKit.framework/BannerKit: BNSceneClientSettings 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSAction 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSActionResponder 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSActionResponse 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSAnimationSettings 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSColor 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDescriptionBuilder 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDispatchQueueAttributes 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSMachPortReceiveRight 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSMutableSettings 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSMutableSpringAnimationSettings 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSObjCProtocol 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSPlatform 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSServiceConnection 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSServiceConnectionEndpoint 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSServiceInterface 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSServiceQuality 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSSettings 
01 00 1100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSSimpleAssertion 
01 00 0e00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIAnimationFactory 
01 00 0e00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUICAPackageView 
01 00 0e00 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIFontProvider 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABackdropLayer 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMatchMoveAnimation 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0200 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPMemoryPool 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSSceneClientSettings 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSSceneSettings 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSSceneSettingsDiffInspector 
01 00 0900 /System/Library/Frameworks/Intents.framework/Intents: INIntent 
01 00 0d00 /System/Library/Frameworks/IOSurface.framework/IOSurface: IOSurface 
01 00 1c00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0500 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageGaussianBlur 
01 00 0500 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageTent 
01 00 0700 /System/Library/Frameworks/MetalKit.framework/MetalKit: MTKTextureLoader 
01 00 0600 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionItem 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: NSStringDrawingContext 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0400 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIBokehWallpaperView 
01 00 0400 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIColorWallpaperView 
01 00 0400 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIIrisWallpaperView 
01 00 0400 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIScrollableIrisWallpaperView 
01 00 0400 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIScrollableStaticWallpaperView 
01 00 0400 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIStaticWallpaperView 
01 00 0400 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperConfiguration 
01 00 0400 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperConfigurationManager 
01 00 0400 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperDefaultsDomain 
01 00 0400 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperImage 
01 00 0400 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperOptions 
01 00 0400 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperView 
01 00 1d00 /System/Library/PrivateFrameworks/ProgressUI.framework/ProgressUI: PUIProgressWindow 
01 00 0a00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSDomainAttribute 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFDashBoardViewMetrics 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFFluidBehaviorSettings 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFLockScreenMetrics 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFMagnifyMode 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFMobileKeyBag 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFTouchPassThroughView 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFView 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFWallpaperCoreAnalyticsLogger 
01 00 1600 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFWallpaperOptions 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSAssertion 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSInCallPresentationRequest 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertActivationContext 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSSystemApertureSceneCreationRequest 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSSystemNotesConnectAction 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSSystemNotesCreateAction 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSSystemNotesPresentationConfiguration 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSSystemNotesTakeScreenshotAction 
01 00 1500 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSWallpaperService 
01 00 0b00 /System/Library/PrivateFrameworks/Sharing.framework/Sharing: SFAutoUnlockManager 
01 00 1800 /System/Library/PrivateFrameworks/SPOwner.framework/SPOwner: SPBeaconManager 
01 00 1b00 /System/Library/PrivateFrameworks/TelephonyUI.framework/TelephonyUI: TPNumberPad 
01 00 1b00 /System/Library/PrivateFrameworks/TelephonyUI.framework/TelephonyUI: TPNumberPadDarkStyleButton 
01 00 1b00 /System/Library/PrivateFrameworks/TelephonyUI.framework/TelephonyUI: TPNumberPadLightStyleButton 
01 00 1b00 /System/Library/PrivateFrameworks/TelephonyUI.framework/TelephonyUI: TPRevealingRingView 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityContinuationAction 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneClientSettings 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneClientSettingsDiffInspector 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneSettings 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneSpecification 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneTransitionContext 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationStarkSceneSpecification 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIButtonConfiguration 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboard 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardImpl 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIMorphingLabel 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIMutableApplicationSceneClientSettings 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIMutableApplicationSceneSettings 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UINotificationFeedbackGenerator 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIPeripheralHost 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerInteraction 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerLiftEffect 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerRegion 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerShape 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerStyle 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScene 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowScene 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: _UIActionSlider 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropViewSettings 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: _UIKeyboardAnimator 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: _UIKeyboardFeedbackGenerator 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilityLabel 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettings 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettingsProvider 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilityView 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: _UINotificationFeedbackGeneratorConfiguration 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: _UISceneConnectionOptionsContext 
01 00 2100 /System/Library/Frameworks/UIKit.framework/UIKit: _UIViewControllerTransitionContext 
