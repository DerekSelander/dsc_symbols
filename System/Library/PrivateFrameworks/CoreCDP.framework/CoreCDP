|| __DATA.__data _CDPManateeAvailabilityNotification
|| __DATA.__objc_data _OBJC_CLASS_$_CDPAuthProviderProxy
|| __DATA.__objc_data _OBJC_CLASS_$_CDPKeychainSync
|| __DATA.__objc_data _OBJC_CLASS_$_CDPLocalDevice
|| __DATA.__objc_data _OBJC_CLASS_$_CDPLocalDeviceSecretHandler
|| __DATA.__objc_data _OBJC_CLASS_$_CDPLocalDeviceSecretProxyImpl
|| __DATA.__objc_data _OBJC_CLASS_$_CDPLocalizedStringBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_CDPPCSUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CDPRecoveryController
|| __DATA.__objc_data _OBJC_CLASS_$_CDPRecoveryKeyValidatorProxyImpl
|| __DATA.__objc_data _OBJC_CLASS_$_CDPRemoteDeviceSecretValidator
|| __DATA.__objc_data _OBJC_CLASS_$_CDPStateUIProviderProxy
|| __DATA.__objc_data _OBJC_CLASS_$_CDPToolFakeUIProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CDPUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPAuthProviderProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPKeychainSync
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPLocalDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPLocalDeviceSecretHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPLocalDeviceSecretProxyImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPLocalizedStringBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPPCSUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPRecoveryController
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPRecoveryKeyValidatorProxyImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPRemoteDeviceSecretValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPStateUIProviderProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPToolFakeUIProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPUtilities
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._deviceColor
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._enclosureColor
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._hasNumericSecret
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._hasRandomSecret
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._isCurrentDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._isUsingMultipleiCSC
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._localizedName
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._machineID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._model
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._modelClass
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._modelVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._numericSecretLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._platform
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._recordDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._recordID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._recordInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._remainingAttempts
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._serialNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._simplePublicKey
|| __DATA_CONST.__const _CDPCloudDataProtectionEnabledNotification
|| __DATA_CONST.__const _CDPFMIPRecoveryKey
|| __DATA_CONST.__const _CDPIDMSPasswordResetKey
|| __DATA_CONST.__const _CDPIDMSRecordMIDKey
|| __DATA_CONST.__const _CDPManateeAvailabilityStateKey
|| __DATA_CONST.__const _CDPStateErrorDomain
|| __DATA_CONST.__const _CDP_FOLLOWUP_OFFLINE_PASSCODE
|| __DATA_CONST.__const _CDP_FOLLOWUP_RECOVERY_KEY_REGEN
|| __DATA_CONST.__const _CDP_FOLLOWUP_STATE_REPAIR
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPCircleProxyImpl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDaemonConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPFollowUpContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPFollowUpController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPManateeStateController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPProtectedCloudStorageProxyImpl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPStateController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPCircleProxyImpl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDaemonConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPFollowUpContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPFollowUpController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPManateeStateController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPProtectedCloudStorageProxyImpl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPStateController
|| __TEXT.__const _CoreCDPVersionNumber
|| __TEXT.__const _CoreCDPVersionString
|| __TEXT.__text _CDPAuthProviderExportedInterface
|| __TEXT.__text _CDPDaemonExportedInterface
|| __TEXT.__text _CDPDeviceClassToLocKey
|| __TEXT.__text _CDPLocalizedString
|| __TEXT.__text _CDPUIProviderExportedInterface
|| __TEXT.__text _CDPUnqualifiedDeviceClassToLocKey
|| __TEXT.__text __CDPLogSystem
|| __TEXT.__text __CDPSignpostCreate
|| __TEXT.__text __CDPSignpostGetNanoseconds
|| __TEXT.__text __CDPSignpostLogSystem
|| __TEXT.__text __CDPStateError
|| __TEXT.__text __CDPStateErrorWithUnderlying
|| __TEXT.__text __CDPSuffixForDeviceClass
|| __TEXT.__text __CDPSuffixForSecretType
|| __TEXT.__text __CDPSuffixForUnqualifiedDeviceClass
|| __TEXT.__text _hasFullCDPSupport
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kAccountDataclassKeychainSync
__ AuthKit: _AKAuthenticationAlternateDSIDKey
__ AuthKit: _AKAuthenticationAppleIDAuthModeKey
__ AuthKit: _AKAuthenticationCircleContinuationContextKey
__ AuthKit: _AKAuthenticationConfigurationInfoKey
__ AuthKit: _AKAuthenticationDSIDKey
__ AuthKit: _AKAuthenticationDidShowServerUIKey
__ AuthKit: _AKAuthenticationDuplexSessionKey
__ AuthKit: _AKAuthenticationIsHSA2Key
__ AuthKit: _AKAuthenticationPasswordKey
__ AuthKit: _AKAuthenticationPasswordResetTokenKey
__ AuthKit: _AKAuthenticationRawPasswordKey
__ AuthKit: _AKAuthenticationUsernameKey
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ AuthKit: _OBJC_CLASS_$_AKCircleRequestContext
__ CommonUtilities: _OBJC_CLASS_$_CUTReachability
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__
__ CoreUtils: _IsAppleInternalBuild
__ CoreUtils: _OBJC_CLASS_$_CUMessageSession
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ KeychainCircle: _OBJC_CLASS_$_KCAESGCMDuplexSession
__ KeychainCircle: _OBJC_CLASS_$_KCPairingChannelContext
__ ProtectedCloudStorage: _PCSIdentityMigrateRestoreLocalBackup
__ ProtectedCloudStorage: _PCSIdentityMigrateToStingray
__ ProtectedCloudStorage: _PCSIdentityMigrateToiCDP
__ ProtectedCloudStorage: _PCSIdentitySetCompanionCircleMember
__ ProtectedCloudStorage: _PCSIdentitySetCreate
__ ProtectedCloudStorage: _PCSIdentitySetIsICDP
__ ProtectedCloudStorage: _PCSIdentitySetIsICDPNetworkWithOptions
__ ProtectedCloudStorage: _PCSIdentitySetup
__ ProtectedCloudStorage: _PCSIdentitySynchronizeKeys
__ ProtectedCloudStorage: _kPCSSetupAuthToken
__ ProtectedCloudStorage: _kPCSSetupDSID
__ ProtectedCloudStorage: _kPCSSetupEscrowURL
__ ProtectedCloudStorage: _kPCSSetupPassword
__ ProtectedCloudStorage: _kPCSSetupUsername
__ ProtectedCloudStorage: _kPCSSetupiCloudEnvironment
__ Security: _OBJC_CLASS_$_CKKSControl
__ Security: _OBJC_CLASS_$_OTClique
__ Security: _OBJC_CLASS_$_OTConfigurationContext
__ Security: _OBJC_CLASS_$_OTOperationConfiguration
__ Security: _OBJC_CLASS_$_SFSignInAnalytics
__ Security: _OTCliqueCDPContextTypeFinishPasscodeChange
__ Security: _OTCliqueCDPContextTypeNone
__ Security: _OTCliqueCDPContextTypeRecoveryKeyGenerate
__ Security: _OTCliqueCDPContextTypeRecoveryKeyNew
__ Security: _OTCliqueCDPContextTypeRepair
__ Security: _OTCliqueCDPContextTypeSignIn
__ Security: _OTCliqueCDPContextTypeUpdatePasscode
__ Security: _OTDefaultContext
__ Security: _SOSCCThisDeviceIsInCircle
__ Security: _SOSCCThisDeviceIsInCircleNonCached
__ Security: _SecRKCopyAccountRecoveryVerifier
__ Security: _SecRKCreateRecoveryKeyString
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
CDPProtectedCloudStorageProxyImpl : NSObject /usr/lib/libSystem.B.dylib <CDPProtectedCloudStorageProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPProtectedCloudStorageProxyImpl _performPCSBlock:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentityCreateWithInfo:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentitySetupWithInfo:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentitySetIsInICDPNetwork:options:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentitySetIsInICDPLocal:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentitySetCompanionInCircle:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentityMigrateToiCDPWithInfo:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentityMigrateToStingrayWithInfo:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsSynchronizeKeysWithInfo:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsRestoreLocalBackup:error:]


CDPFollowUpContext : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned long repairType
 @property  NSString *followUpType
 @property  BOOL shouldNotify
 @property  BOOL force

  // class methods
  +[CDPFollowUpContext supportsSecureCoding]
  +[CDPFollowUpContext contextForStateRepair]
  +[CDPFollowUpContext contextWithType:]
  +[CDPFollowUpContext contextForOfflinePasscodeChange]
  +[CDPFollowUpContext contextForRecoveryKeyRepair]

  // instance methods
  -[CDPFollowUpContext encodeWithCoder:]
  -[CDPFollowUpContext initWithCoder:]
  -[CDPFollowUpContext .cxx_destruct]
  -[CDPFollowUpContext force]
  -[CDPFollowUpContext setForce:]
  -[CDPFollowUpContext setShouldNotify:]
  -[CDPFollowUpContext setFollowUpType:]
  -[CDPFollowUpContext shouldNotify]
  -[CDPFollowUpContext followUpType]
  -[CDPFollowUpContext setRepairType:]
  -[CDPFollowUpContext repairType]


CDPContext : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  <CDPAuthProviderInternal> *_authProvider
 @property  KCAESGCMDuplexSession *duplexSession
 @property  AKCircleRequestContext *resumeContext
 @property  CUMessageSession *sharingChannel
 @property  BOOL _useSecureBackupCachedPassphrase
 @property  BOOL _alwaysCreateEscrowRecord
 @property  NSString *_recoveryToken
 @property  BOOL _ignoreLockAssertErrors
 @property  BOOL idmsRecovery
 @property  BOOL idmsMasterKeyRecovery
 @property  long long type
 @property  NSDictionary *authenticationResults
 @property  NSString *appleID
 @property  NSString *password
 @property  NSString *passwordEquivToken
 @property  NSNumber *dsid
 @property  NSString *altDSID
 @property  BOOL isHSA2Account
 @property  BOOL isFederatedAccount
 @property  BOOL didUseSMSVerification
 @property  NSString *cachedLocalSecret
 @property  unsigned long cachedLocalSecretType
 @property  BOOL guestMode
 @property  NSString *findMyiPhoneUUID
 @property  BOOL supportsSkipSignIn

  // class methods
  +[CDPContext supportsSecureCoding]
  +[CDPContext _metricsQueue]
  +[CDPContext preflightContext:]

  // instance methods
  -[CDPContext init]
  -[CDPContext copyWithZone:]
  -[CDPContext type]
  -[CDPContext setType:]
  -[CDPContext encodeWithCoder:]
  -[CDPContext initWithCoder:]
  -[CDPContext password]
  -[CDPContext .cxx_destruct]
  -[CDPContext setPassword:]
  -[CDPContext dsid]
  -[CDPContext setDsid:]
  -[CDPContext altDSID]
  -[CDPContext setAltDSID:]
  -[CDPContext setAuthenticationResults:]
  -[CDPContext appleID]
  -[CDPContext setAppleID:]
  -[CDPContext guestMode]
  -[CDPContext setGuestMode:]
  -[CDPContext setSharingChannel:]
  -[CDPContext initWithAuthenticationResults:]
  -[CDPContext setPasswordEquivToken:]
  -[CDPContext setIdmsMasterKeyRecovery:]
  -[CDPContext idmsMasterKeyRecovery]
  -[CDPContext setIdmsRecovery:]
  -[CDPContext authenticationResults]
  -[CDPContext set_ignoreLockAssertErrors:]
  -[CDPContext _ignoreLockAssertErrors]
  -[CDPContext resumeContext]
  -[CDPContext isFederatedAccount]
  -[CDPContext idmsRecovery]
  -[CDPContext findMyiPhoneUUID]
  -[CDPContext passwordEquivToken]
  -[CDPContext topLevelMetric]
  -[CDPContext purgeResumeData]
  -[CDPContext desiresAllRecords]
  -[CDPContext updateWithAuthenticationResults:]
  -[CDPContext augmentWithCredentialsFromContext:]
  -[CDPContext startMetricForEventName:]
  -[CDPContext stopMetric:withAttributes:]
  -[CDPContext encodedTopLevelMetric]
  -[CDPContext cliqueConfiguration]
  -[CDPContext isHSA2Account]
  -[CDPContext setIsHSA2Account:]
  -[CDPContext setIsFederatedAccount:]
  -[CDPContext didUseSMSVerification]
  -[CDPContext setDidUseSMSVerification:]
  -[CDPContext cachedLocalSecret]
  -[CDPContext setCachedLocalSecret:]
  -[CDPContext cachedLocalSecretType]
  -[CDPContext setCachedLocalSecretType:]
  -[CDPContext setFindMyiPhoneUUID:]
  -[CDPContext supportsSkipSignIn]
  -[CDPContext setSupportsSkipSignIn:]
  -[CDPContext _authProvider]
  -[CDPContext set_authProvider:]
  -[CDPContext duplexSession]
  -[CDPContext setDuplexSession:]
  -[CDPContext setResumeContext:]
  -[CDPContext sharingChannel]
  -[CDPContext _useSecureBackupCachedPassphrase]
  -[CDPContext set_useSecureBackupCachedPassphrase:]
  -[CDPContext _alwaysCreateEscrowRecord]
  -[CDPContext set_alwaysCreateEscrowRecord:]
  -[CDPContext _recoveryToken]
  -[CDPContext set_recoveryToken:]


CDPCircleProxyImpl : NSObject /usr/lib/libSystem.B.dylib <CDPDCircleProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  CDPContext *cdpContext

  // instance methods
  -[CDPCircleProxyImpl .cxx_destruct]
  -[CDPCircleProxyImpl waitForInitialSync:]
  -[CDPCircleProxyImpl requestToJoinCircle:]
  -[CDPCircleProxyImpl pairingChannelAcceptor:]
  -[CDPCircleProxyImpl pairingChannelInitiator:]
  -[CDPCircleProxyImpl initWithContext:]
  -[CDPCircleProxyImpl contextType]
  -[CDPCircleProxyImpl cdpStatusFromOT:]
  -[CDPCircleProxyImpl _authenticatedCircleStatus:]
  -[CDPCircleProxyImpl _sos_circleStatus:]
  -[CDPCircleProxyImpl cdpStatusFromSOS:]
  -[CDPCircleProxyImpl _circleStatus:]
  -[CDPCircleProxyImpl registerCredentials]
  -[CDPCircleProxyImpl _sos_authenticatedCircleStatus:]
  -[CDPCircleProxyImpl tryRegisteringCredentials]
  -[CDPCircleProxyImpl circleStatus:]
  -[CDPCircleProxyImpl removeThisDeviceFromCircle:]
  -[CDPCircleProxyImpl _registerCredentialsOnlyIfNeeded:]
  -[CDPCircleProxyImpl canAuthenticate]
  -[CDPCircleProxyImpl _pairingChannelContext]
  -[CDPCircleProxyImpl cachedCliqueStatus:]
  -[CDPCircleProxyImpl cachedCircleStatus:]
  -[CDPCircleProxyImpl peerId]
  -[CDPCircleProxyImpl peerCount]
  -[CDPCircleProxyImpl peerDeviceNamesByPeerID]
  -[CDPCircleProxyImpl didJoinCircleAfterRecovery:]
  -[CDPCircleProxyImpl generateRecoveryKeyWithInfo:error:]
  -[CDPCircleProxyImpl generateVerifierWithRecoveryKey:error:]
  -[CDPCircleProxyImpl synchronizeCircleViews]
  -[CDPCircleProxyImpl requestToJoinCircleAfterRestore:]
  -[CDPCircleProxyImpl requestToResetCircle:]
  -[CDPCircleProxyImpl requestToResetCloudKitDataForReason:error:]
  -[CDPCircleProxyImpl viewMemberForAutofillPasswords:]
  -[CDPCircleProxyImpl anyPeerHasEnabledViewsInSet:error:]
  -[CDPCircleProxyImpl setViewsWithEnableSet:disableSet:]
  -[CDPCircleProxyImpl hasNonViewAwarePeers]
  -[CDPCircleProxyImpl removeNonViewAwarePeers:]
  -[CDPCircleProxyImpl isLastBackupMakingPeer:]
  -[CDPCircleProxyImpl registerCredentialsIfMissing]
  -[CDPCircleProxyImpl waitForUpdate]
  -[CDPCircleProxyImpl reportSuccess]
  -[CDPCircleProxyImpl reportFailure:]
  -[CDPCircleProxyImpl cdpContext]
  -[CDPCircleProxyImpl sos_circleStatus:]


CDPAccount : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CDPAccount sharedInstance]
  +[CDPAccount isICDPEnabledForDSID:checkWithServer:]
  +[CDPAccount isICDPEnabledForDSID:]

  // instance methods
  -[CDPAccount sharedAccountStore]
  -[CDPAccount authToken]
  -[CDPAccount primaryAccountSecurityLevel]
  -[CDPAccount primaryAppleAccount]
  -[CDPAccount contextForPrimaryAccount]
  -[CDPAccount primaryAccountAltDSID]
  -[CDPAccount primaryAccountDSID]
  -[CDPAccount primaryAccountUsername]
  -[CDPAccount escrowURL]
  -[CDPAccount iCloudEnv]


CDPAuthProviderProxy : NSObject /usr/lib/libSystem.B.dylib <CDPAuthProviderInternal>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CDPAuthProviderProxy proxyWithAuthProvider:]

  // instance methods
  -[CDPAuthProviderProxy .cxx_destruct]
  -[CDPAuthProviderProxy cdpContext:performSilentRecoveryTokenRenewal:]
  -[CDPAuthProviderProxy cdpContext:verifyMasterKey:completion:]


CDPStateUIProviderProxy : NSObject /usr/lib/libSystem.B.dylib <CDPStateUIProviderInternal>
 @property  <CDPStateUIProvider> *uiProvider

  // instance methods
  -[CDPStateUIProviderProxy .cxx_destruct]
  -[CDPStateUIProviderProxy setUiProvider:]
  -[CDPStateUIProviderProxy cdpContext:presentRecoveryKeyWithValidator:completion:]
  -[CDPStateUIProviderProxy cdpContext:promptForRecoveryKeyWithValidator:completion:]
  -[CDPStateUIProviderProxy cdpContext:promptForLocalSecretWithHandler:]
  -[CDPStateUIProviderProxy cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:]
  -[CDPStateUIProviderProxy cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:]
  -[CDPStateUIProviderProxy cdpContext:promptForAdoptionOfMultipleICSC:]
  -[CDPStateUIProviderProxy cdpContext:promptForInteractiveAuthenticationWithCompletion:]
  -[CDPStateUIProviderProxy cdpContext:showError:withCompletion:]
  -[CDPStateUIProviderProxy cdpContext:showError:withDefaultIndex:withCompletion:]
  -[CDPStateUIProviderProxy uiProvider]
  -[CDPStateUIProviderProxy cdpContext:beginRemoteApprovalWithValidator:completion:]
  -[CDPStateUIProviderProxy initWithUIProvider:]


CDPFollowUpController : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[CDPFollowUpController init]
  -[CDPFollowUpController dealloc]
  -[CDPFollowUpController invalidate]
  -[CDPFollowUpController .cxx_destruct]
  -[CDPFollowUpController postFollowUpWithContext:error:]
  -[CDPFollowUpController clearFollowUpWithContext:error:]


CDPPCSUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CDPPCSUtilities _pcsConfigForPrimaryAccount]
  +[CDPPCSUtilities setupDictionaryWithContext:]


CDPLocalizedStringBuilder : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CDPLocalizedStringBuilder builderForKey:]

  // instance methods
  -[CDPLocalizedStringBuilder .cxx_destruct]
  -[CDPLocalizedStringBuilder currentKey]
  -[CDPLocalizedStringBuilder localizedString]
  -[CDPLocalizedStringBuilder addDeviceClass:]
  -[CDPLocalizedStringBuilder addUnqualifiedDeviceClass:]
  -[CDPLocalizedStringBuilder addSecretType:]


CDPDevice : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding, CDPDeviceProtocol>
 @property  NSString *localizedName
 @property  NSString *model
 @property  NSString *modelVersion
 @property  NSString *modelClass
 @property  unsigned long platform
 @property  NSString *recordID
 @property  NSString *machineID
 @property  NSDate *recordDate
 @property  BOOL hasRandomSecret
 @property  BOOL hasNumericSecret
 @property  NSNumber *numericSecretLength
 @property  BOOL isUsingMultipleiCSC
 @property  unsigned long remainingAttempts
 @property  NSString *serialNumber
 @property  BOOL isCurrentDevice
 @property  unsigned long recoveryStatus
 @property  NSNumber *coolOffPeriod
 @property  NSString *deviceColor
 @property  NSString *enclosureColor
 @property  NSDictionary *recordInfo
 @property  NSData *simplePublicKey
 @property  unsigned long localSecretType
 @property  NSString *localizedDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CDPDevice supportsSecureCoding]

  // instance methods
  -[CDPDevice copyWithZone:]
  -[CDPDevice localizedDescription]
  -[CDPDevice encodeWithCoder:]
  -[CDPDevice initWithCoder:]
  -[CDPDevice .cxx_destruct]
  -[CDPDevice localizedName]
  -[CDPDevice setLocalizedDescription:]
  -[CDPDevice platform]
  -[CDPDevice model]
  -[CDPDevice setModel:]
  -[CDPDevice recordID]
  -[CDPDevice serialNumber]
  -[CDPDevice setPlatform:]
  -[CDPDevice setRecordID:]
  -[CDPDevice setModelVersion:]
  -[CDPDevice modelVersion]
  -[CDPDevice setLocalizedName:]
  -[CDPDevice deviceColor]
  -[CDPDevice enclosureColor]
  -[CDPDevice setDeviceColor:]
  -[CDPDevice setEnclosureColor:]
  -[CDPDevice setSerialNumber:]
  -[CDPDevice machineID]
  -[CDPDevice setMachineID:]
  -[CDPDevice recordDate]
  -[CDPDevice setRecordDate:]
  -[CDPDevice modelClass]
  -[CDPDevice setModelClass:]
  -[CDPDevice isCurrentDevice]
  -[CDPDevice localSecretType]
  -[CDPDevice hasRandomSecret]
  -[CDPDevice setHasRandomSecret:]
  -[CDPDevice hasNumericSecret]
  -[CDPDevice setHasNumericSecret:]
  -[CDPDevice numericSecretLength]
  -[CDPDevice setNumericSecretLength:]
  -[CDPDevice isUsingMultipleiCSC]
  -[CDPDevice setIsUsingMultipleiCSC:]
  -[CDPDevice remainingAttempts]
  -[CDPDevice setRemainingAttempts:]
  -[CDPDevice setIsCurrentDevice:]
  -[CDPDevice recoveryStatus]
  -[CDPDevice setRecoveryStatus:]
  -[CDPDevice coolOffPeriod]
  -[CDPDevice setCoolOffPeriod:]
  -[CDPDevice recordInfo]
  -[CDPDevice setRecordInfo:]
  -[CDPDevice simplePublicKey]
  -[CDPDevice setSimplePublicKey:]


CDPRemoteDeviceSecretValidator : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[CDPRemoteDeviceSecretValidator .cxx_destruct]
  -[CDPRemoteDeviceSecretValidator cancelValidationWithError:]
  -[CDPRemoteDeviceSecretValidator validateSecret:devices:type:withCompletion:]
  -[CDPRemoteDeviceSecretValidator validateRecoveryKey:withCompletion:]
  -[CDPRemoteDeviceSecretValidator approveFromAnotherDeviceWithCompletion:]
  -[CDPRemoteDeviceSecretValidator cancelApproveFromAnotherDevice]
  -[CDPRemoteDeviceSecretValidator resetAccountCDPState]
  -[CDPRemoteDeviceSecretValidator supportedEscapeOfferMaskCompletion:]
  -[CDPRemoteDeviceSecretValidator supportedEscapeOfferMask]
  -[CDPRemoteDeviceSecretValidator initWithContext:validator:]
  -[CDPRemoteDeviceSecretValidator _executeSyncOnMainThreadIfNeeded:]


CDPRecoveryKeyValidatorProxyImpl : NSObject /usr/lib/libSystem.B.dylib <CDPRecoveryKeyValidator>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPRecoveryKeyValidatorProxyImpl .cxx_destruct]
  -[CDPRecoveryKeyValidatorProxyImpl confirmRecoveryKey:completion:]
  -[CDPRecoveryKeyValidatorProxyImpl generateRecoveryKey:]
  -[CDPRecoveryKeyValidatorProxyImpl generateRecoveryKeyWithError:]
  -[CDPRecoveryKeyValidatorProxyImpl confirmRecoveryKey:error:]
  -[CDPRecoveryKeyValidatorProxyImpl initWithRemoteObject:]


CDPKeychainSync : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CDPKeychainSync isUserVisibleKeychainSyncEnabled]
  +[CDPKeychainSync setUserVisibleKeychainSyncEnabled:withCompletion:]
  +[CDPKeychainSync removeNonViewAwarePeersFromCircleWithContext:completion:]


CDPToolFakeUIProvider : NSObject /usr/lib/libSystem.B.dylib <CDPStateUIProvider>
 @property  NSString *localSecret
 @property  NSString *remoteSecret
 @property  NSString *icsc
 @property  NSString *recoveryKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPToolFakeUIProvider .cxx_destruct]
  -[CDPToolFakeUIProvider cdpContext:promptForRecoveryKeyWithValidator:completion:]
  -[CDPToolFakeUIProvider cdpContext:promptForLocalSecretWithHandler:]
  -[CDPToolFakeUIProvider cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:]
  -[CDPToolFakeUIProvider cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:]
  -[CDPToolFakeUIProvider cdpContext:promptForAdoptionOfMultipleICSC:]
  -[CDPToolFakeUIProvider cdpContext:promptForInteractiveAuthenticationWithCompletion:]
  -[CDPToolFakeUIProvider recoveryKey]
  -[CDPToolFakeUIProvider localSecret]
  -[CDPToolFakeUIProvider setLocalSecret:]
  -[CDPToolFakeUIProvider remoteSecret]
  -[CDPToolFakeUIProvider setRemoteSecret:]
  -[CDPToolFakeUIProvider icsc]
  -[CDPToolFakeUIProvider setIcsc:]
  -[CDPToolFakeUIProvider setRecoveryKey:]


CDPUtilities : NSObject /usr/lib/libSystem.B.dylib

CDPManateeStateController : NSObject /usr/lib/libSystem.B.dylib <CDPDAuthListener, CDPDCircleListener>
 @property  <CDPDCircleProxy> *circleProxy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPManateeStateController .cxx_destruct]
  -[CDPManateeStateController isManateeAvailable:]
  -[CDPManateeStateController isPrimaryAccountHSA2]
  -[CDPManateeStateController _checkSecurityEligibility:]
  -[CDPManateeStateController _didCreateCircleProxy]
  -[CDPManateeStateController reportManateeAvailable]
  -[CDPManateeStateController reportManateeUnavailable]
  -[CDPManateeStateController _sendNotification:withValue:]
  -[CDPManateeStateController securityLevelChanged:]
  -[CDPManateeStateController circleStatusChanged]
  -[CDPManateeStateController circleViewStatusChanged]
  -[CDPManateeStateController circleProxy]
  -[CDPManateeStateController setCircleProxy:]


CDPLocalDeviceSecretHandler : NSObject /usr/lib/libSystem.B.dylib
 @property  CDPContext *context

  // instance methods
  -[CDPLocalDeviceSecretHandler .cxx_destruct]
  -[CDPLocalDeviceSecretHandler context]
  -[CDPLocalDeviceSecretHandler userDidCancelWithError:]
  -[CDPLocalDeviceSecretHandler userDidEnterValidSecret:type:]
  -[CDPLocalDeviceSecretHandler initWithContext:handler:]


CDPStateController : CDPController
  // instance methods
  -[CDPStateController isManateeAvailable:]
  -[CDPStateController startCircleApplicationApprovalServer:]
  -[CDPStateController handleCloudDataProtectionStateWithCompletion:]
  -[CDPStateController repairCloudDataProtectionStateWithCompletion:]
  -[CDPStateController localSecretChangedTo:secretType:completion:]
  -[CDPStateController deleteRecoveryKey:]
  -[CDPStateController generateNewRecoveryKey:]
  -[CDPStateController attemptToEscrowPreRecord:completion:]
  -[CDPStateController handleURLActionWithInfo:completion:]
  -[CDPStateController finishOfflineLocalSecretChangeWithCompletion:]
  -[CDPStateController recoverAndSynchronizeWithSquirrel:]
  -[CDPStateController recoverWithSquirrel:]
  -[CDPStateController attemptToEscrowPreRecord:preRecordUUID:secretType:completion:]
  -[CDPStateController shouldPerformRepair:]
  -[CDPStateController deleteRecoveryKeyWithError:]
  -[CDPStateController generateRandomRecoveryKey:]
  -[CDPStateController handleURLActionWithInfo:]


CDPRecoveryController : CDPController
  // instance methods
  -[CDPRecoveryController performRecovery:]
  -[CDPRecoveryController _sanitizedRecoveryErrorWithError:]


CDPLocalDeviceSecretProxyImpl : NSObject /usr/lib/libSystem.B.dylib <CDPLocalDeviceSecretProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPLocalDeviceSecretProxyImpl hasLocalSecret]


CDPLocalDevice : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CDPLocalDevice sharedInstance]
  +[CDPLocalDevice hasLocalSecret]

  // instance methods
  -[CDPLocalDevice init]
  -[CDPLocalDevice .cxx_destruct]
  -[CDPLocalDevice hardwareModel]
  -[CDPLocalDevice deviceName]
  -[CDPLocalDevice serialNumber]
  -[CDPLocalDevice deviceClass]
  -[CDPLocalDevice osVersion]
  -[CDPLocalDevice modelVersion]
  -[CDPLocalDevice hasLocalSecret]
  -[CDPLocalDevice _currentProcessCreatesDaemonTypeProxy]
  -[CDPLocalDevice _isHomePod]
  -[CDPLocalDevice _currentProcessHasEntitlement:]
  -[CDPLocalDevice supportsSecureBackupRecovery]
  -[CDPLocalDevice marketingModel]


CDPController : NSObject /usr/lib/libSystem.B.dylib
 @property  CDPDaemonConnection *daemonConn
 @property  CDPStateUIProviderProxy *uiProviderProxy
 @property  CDPContext *context
 @property  <CDPStateUIProvider> *uiProvider
 @property  <CDPAuthProvider> *authProvider

  // instance methods
  -[CDPController init]
  -[CDPController dealloc]
  -[CDPController invalidate]
  -[CDPController .cxx_destruct]
  -[CDPController context]
  -[CDPController initWithContext:]
  -[CDPController setUiProvider:]
  -[CDPController setAuthProvider:]
  -[CDPController uiProvider]
  -[CDPController daemonConn]
  -[CDPController uiProviderProxy]
  -[CDPController authProvider]
  -[CDPController initWithXpcEndpoint:context:]
  -[CDPController setDaemonConn:]
  -[CDPController setUiProviderProxy:]


CDPDaemonConnection : NSObject /usr/lib/libSystem.B.dylib
 @property  NSXPCListenerEndpoint *daemonXPCEndpoint

  // instance methods
  -[CDPDaemonConnection init]
  -[CDPDaemonConnection .cxx_destruct]
  -[CDPDaemonConnection connection]
  -[CDPDaemonConnection daemon]
  -[CDPDaemonConnection daemonWithErrorHandler:]
  -[CDPDaemonConnection synchronousDaemonWithErrorHandler:]
  -[CDPDaemonConnection setDaemonXPCEndpoint:]
  -[CDPDaemonConnection daemonXPCEndpoint]


NSArray(CDPDeviceProtocol)
	// instance methods
	-[NSArray(CDPDeviceProtocol) prevailingLocalSecretType]

NSDictionary(CoreCDP)
	// instance methods
	-[NSDictionary(CoreCDP) cdp_sanitizedCopy]

NSError(CDP)
	// instance methods
	-[NSError(CDP) shouldDisplayToUser]

01 00 0300 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0600 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 0600 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKCircleRequestContext 
01 00 0d00 /System/Library/Frameworks/Security.framework/Security: CKKSControl 
01 00 0900 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUMessageSession 
01 00 0800 /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities: CUTReachability 
01 00 0a00 /System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle: KCAESGCMDuplexSession 
01 00 0a00 /System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle: KCPairingChannelContext 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0d00 /System/Library/Frameworks/Security.framework/Security: OTClique 
01 00 0d00 /System/Library/Frameworks/Security.framework/Security: OTConfigurationContext 
01 00 0d00 /System/Library/Frameworks/Security.framework/Security: OTOperationConfiguration 
01 00 0d00 /System/Library/Frameworks/Security.framework/Security: SFSignInAnalytics 
