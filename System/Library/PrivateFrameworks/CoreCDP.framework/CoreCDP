|| __DATA.__data _CDPManateeAvailabilityNotification
|| __DATA.__objc_data _OBJC_CLASS_$_CDPAuthProviderProxy
|| __DATA.__objc_data _OBJC_CLASS_$_CDPCABackupRecoveryReporter
|| __DATA.__objc_data _OBJC_CLASS_$_CDPCAReporter
|| __DATA.__objc_data _OBJC_CLASS_$_CDPKeychainSync
|| __DATA.__objc_data _OBJC_CLASS_$_CDPLocalDevice
|| __DATA.__objc_data _OBJC_CLASS_$_CDPLocalDeviceSecretHandler
|| __DATA.__objc_data _OBJC_CLASS_$_CDPLocalDeviceSecretProxyImpl
|| __DATA.__objc_data _OBJC_CLASS_$_CDPLocalizedStringBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_CDPRecoveryController
|| __DATA.__objc_data _OBJC_CLASS_$_CDPRecoveryFlowContext
|| __DATA.__objc_data _OBJC_CLASS_$_CDPRecoveryKeySecretValidatorProxyImpl
|| __DATA.__objc_data _OBJC_CLASS_$_CDPRecoveryKeyValidatorProxyImpl
|| __DATA.__objc_data _OBJC_CLASS_$_CDPRemoteDeviceSecretValidator
|| __DATA.__objc_data _OBJC_CLASS_$_CDPStateUIProviderProxy
|| __DATA.__objc_data _OBJC_CLASS_$_CDPTermsInfoBackupController
|| __DATA.__objc_data _OBJC_CLASS_$_CDPToolFakeUIProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPAuthProviderProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPCABackupRecoveryReporter
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPCAReporter
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPKeychainSync
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPLocalDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPLocalDeviceSecretHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPLocalDeviceSecretProxyImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPLocalizedStringBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPRecoveryController
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPRecoveryFlowContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPRecoveryKeySecretValidatorProxyImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPRecoveryKeyValidatorProxyImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPRemoteDeviceSecretValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPStateUIProviderProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPTermsInfoBackupController
|| __DATA.__objc_data _OBJC_METACLASS_$_CDPToolFakeUIProvider
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._deviceColor
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._enclosureColor
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._hasNumericSecret
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._hasRandomSecret
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._isCurrentDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._isUsingMultipleiCSC
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._localizedName
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._machineID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._model
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._modelClass
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._modelVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._numericSecretLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._platform
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._recordDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._recordID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._recordInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._remainingAttempts
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._serialNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_CDPDevice._simplePublicKey
|| __DATA_CONST.__const _CDPCloudDataProtectionEnabledNotification
|| __DATA_CONST.__const _CDPFMIPRecoveryKey
|| __DATA_CONST.__const _CDPIDMSPasswordResetKey
|| __DATA_CONST.__const _CDPIDMSRecordMIDKey
|| __DATA_CONST.__const _CDPManateeAvailabilityStateKey
|| __DATA_CONST.__const _CDPStateErrorDomain
|| __DATA_CONST.__const _CDP_FOLLOWUP_CONFIRM_EXISTING_SECRET
|| __DATA_CONST.__const _CDP_FOLLOWUP_OFFLINE_PASSCODE
|| __DATA_CONST.__const _CDP_FOLLOWUP_RECOVERY_KEY_REGEN
|| __DATA_CONST.__const _CDP_FOLLOWUP_SECURE_TERMS
|| __DATA_CONST.__const _CDP_FOLLOWUP_SETUP_BIOMETIRCS
|| __DATA_CONST.__const _CDP_FOLLOWUP_STATE_REPAIR
|| __DATA_CONST.__const _kCDPCABackupRecoveryAttemptBundleID
|| __DATA_CONST.__const _kCDPCABackupRecoveryAttemptedMethods
|| __DATA_CONST.__const _kCDPCABackupRecoveryAvailableMethods
|| __DATA_CONST.__const _kCDPCABackupRecoveryDidCancel
|| __DATA_CONST.__const _kCDPCABackupRecoveryDidFail
|| __DATA_CONST.__const _kCDPCABackupRecoveryDidReset
|| __DATA_CONST.__const _kCDPCABackupRecoveryDidSucceed
|| __DATA_CONST.__const _kCDPCABackupRecoveryDidSucceedWithoutLocalSecret
|| __DATA_CONST.__const _kCDPCABackupRecoveryEscrowDeviceCount
|| __DATA_CONST.__const _kCDPCABackupRecoveryJoinMethod
|| __DATA_CONST.__const _kCDPCABackupRecoveryResult
|| __DATA_CONST.__const _kCDPCADuration
|| __DATA_CONST.__const _kCDPCAErrorCode
|| __DATA_CONST.__const _kCDPCAErrorDomain
|| __DATA_CONST.__const _kCDPCAEventBackupRecovery
|| __DATA_CONST.__const _kCDPCAWasSuccess
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPCircleProxyImpl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPCustodianRecoveryInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPCustodianRecoveryKeyController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDaemonConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDataPrivacyController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPFollowUpContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPFollowUpController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPInheritanceTrustController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPLocalSecret
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPManateeStateController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPPCSUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPProtectedCloudStorageProxyImpl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPStateController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPUpdateDataPrivacyContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CDPUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPCircleProxyImpl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPCustodianRecoveryInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPCustodianRecoveryKeyController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDaemonConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDataPrivacyController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPFollowUpContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPFollowUpController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPInheritanceTrustController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPLocalSecret
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPManateeStateController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPPCSUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPProtectedCloudStorageProxyImpl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPStateController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPUpdateDataPrivacyContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CDPUtilities
|| __TEXT.__const _CoreCDPVersionNumber
|| __TEXT.__const _CoreCDPVersionString
|| __TEXT.__text _CDPAuthProviderExportedInterface
|| __TEXT.__text _CDPDaemonExportedInterface
|| __TEXT.__text _CDPDeviceClassToLocKey
|| __TEXT.__text _CDPLocalizedString
|| __TEXT.__text _CDPLocalizedStringInTable
|| __TEXT.__text _CDPUIProviderExportedInterface
|| __TEXT.__text _CDPUnqualifiedDeviceClassToLocKey
|| __TEXT.__text __CDPLogSystem
|| __TEXT.__text __CDPSignpostCreate
|| __TEXT.__text __CDPSignpostGetNanoseconds
|| __TEXT.__text __CDPSignpostLogSystem
|| __TEXT.__text __CDPStateError
|| __TEXT.__text __CDPStateErrorWithUnderlying
|| __TEXT.__text __CDPSuffixForDeviceClass
|| __TEXT.__text __CDPSuffixForSecretType
|| __TEXT.__text __CDPSuffixForUnqualifiedDeviceClass
__ Accounts: _ACPasswordResetTokenBackupKey
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kAccountDataclassKeychainSync
__ AuthKit: _AKAuthenticationAlternateDSIDKey
__ AuthKit: _AKAuthenticationAppleIDAuthModeKey
__ AuthKit: _AKAuthenticationCircleContinuationContextKey
__ AuthKit: _AKAuthenticationConfigurationInfoKey
__ AuthKit: _AKAuthenticationDSIDKey
__ AuthKit: _AKAuthenticationDidShowServerUIKey
__ AuthKit: _AKAuthenticationDuplexSessionKey
__ AuthKit: _AKAuthenticationInheritanceBeneficiaryIdentifierKey
__ AuthKit: _AKAuthenticationInheritanceBeneficiaryWrappedKey
__ AuthKit: _AKAuthenticationIsHSA2Key
__ AuthKit: _AKAuthenticationPasswordKey
__ AuthKit: _AKAuthenticationPasswordResetTokenKey
__ AuthKit: _AKAuthenticationRawPasswordKey
__ AuthKit: _AKAuthenticationUsernameKey
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ AuthKit: _OBJC_CLASS_$_AKCircleRequestContext
__ AuthKit: _OBJC_CLASS_$_AKInheritanceAccessKey
__ CommonUtilities: _OBJC_CLASS_$_CUTReachability
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreUtils: _OBJC_CLASS_$_CUMessageSession
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ KeychainCircle: _OBJC_CLASS_$_KCAESGCMDuplexSession
__ KeychainCircle: _OBJC_CLASS_$_KCPairingChannelContext
__ OctagonTrust: _OBJC_CLASS_$_OTCustodianRecoveryKey
__ OctagonTrust: _OBJC_CLASS_$_OTInheritanceKey
__ ProtectedCloudStorage: _PCSIdentityMigrateRestoreLocalBackup
__ ProtectedCloudStorage: _PCSIdentityMigrateToStingray
__ ProtectedCloudStorage: _PCSIdentityMigrateToiCDP
__ ProtectedCloudStorage: _PCSIdentitySetCompanionCircleMember
__ ProtectedCloudStorage: _PCSIdentitySetCreate
__ ProtectedCloudStorage: _PCSIdentitySetIsICDP
__ ProtectedCloudStorage: _PCSIdentitySetIsICDPNetworkWithOptions
__ ProtectedCloudStorage: _PCSIdentitySetup
__ ProtectedCloudStorage: _PCSIdentitySynchronizeKeys
__ ProtectedCloudStorage: _kPCSSetupAuthToken
__ ProtectedCloudStorage: _kPCSSetupDSID
__ ProtectedCloudStorage: _kPCSSetupEscrowURL
__ ProtectedCloudStorage: _kPCSSetupPassword
__ ProtectedCloudStorage: _kPCSSetupUsername
__ ProtectedCloudStorage: _kPCSSetupiCloudEnvironment
__ Security: _OBJC_CLASS_$_OTClique
__ Security: _OBJC_CLASS_$_OTConfigurationContext
__ Security: _OBJC_CLASS_$_OTOperationConfiguration
__ Security: _OTCliqueCDPContextTypeFinishPasscodeChange
__ Security: _OTCliqueCDPContextTypeNone
__ Security: _OTCliqueCDPContextTypeRecoveryKeyGenerate
__ Security: _OTCliqueCDPContextTypeRecoveryKeyNew
__ Security: _OTCliqueCDPContextTypeRepair
__ Security: _OTCliqueCDPContextTypeSignIn
__ Security: _OTCliqueCDPContextTypeUpdatePasscode
__ Security: _OTDefaultContext
__ Security: _SOSCCThisDeviceIsInCircle
__ Security: _SOSCCThisDeviceIsInCircleNonCached
__ Security: _SecRKCopyAccountRecoveryVerifier
__ Security: _SecRKCreateRecoveryKeyString
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_variant_has_internal_ui
__ libSystem.B.dylib: _puts
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
CDPProtectedCloudStorageProxyImpl : NSObject <CDPProtectedCloudStorageProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPProtectedCloudStorageProxyImpl pcsRestoreLocalBackup:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsSynchronizeKeysWithInfo:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentitySetIsInICDPNetwork:options:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentitySetIsInICDPLocal:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentityCreateWithInfo:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentitySetCompanionInCircle:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentitySetupWithInfo:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentityMigrateToiCDPWithInfo:error:]
  -[CDPProtectedCloudStorageProxyImpl pcsIdentityMigrateToStingrayWithInfo:error:]
  -[CDPProtectedCloudStorageProxyImpl _performPCSBlock:error:]


CDPFollowUpContext : NSObject <NSSecureCoding>
 @property  unsigned long repairType
 @property  NSString *followUpType
 @property  BOOL shouldNotify
 @property  BOOL force

  // class methods
  +[CDPFollowUpContext supportsSecureCoding]
  +[CDPFollowUpContext contextWithType:]
  +[CDPFollowUpContext contextForOfflinePasscodeChange]
  +[CDPFollowUpContext contextForSecureTerms]
  +[CDPFollowUpContext contextForSettingUpBiometrics]
  +[CDPFollowUpContext contextForConfirmExistingSecret]
  +[CDPFollowUpContext contextForStateRepair]
  +[CDPFollowUpContext contextForRecoveryKeyRepair]

  // instance methods
  -[CDPFollowUpContext force]
  -[CDPFollowUpContext setForce:]
  -[CDPFollowUpContext initWithCoder:]
  -[CDPFollowUpContext .cxx_destruct]
  -[CDPFollowUpContext encodeWithCoder:]
  -[CDPFollowUpContext shouldNotify]
  -[CDPFollowUpContext setShouldNotify:]
  -[CDPFollowUpContext followUpType]
  -[CDPFollowUpContext repairType]
  -[CDPFollowUpContext setRepairType:]
  -[CDPFollowUpContext setFollowUpType:]


CDPContext : NSObject <NSSecureCoding, NSCopying>
 @property  <CDPAuthProviderInternal> *_authProvider
 @property  KCAESGCMDuplexSession *duplexSession
 @property  AKCircleRequestContext *resumeContext
 @property  BOOL failSignInOnError
 @property  long long validEscrowDeviceCount
 @property  CDPCABackupRecoveryReporter *analyticsReporter
 @property  BOOL _supportsCustodianRecovery
 @property  CUMessageSession *sharingChannel
 @property  BOOL _disableAsyncSecureBackupEnrollment
 @property  BOOL _useSecureBackupCachedPassphrase
 @property  BOOL _alwaysCreateEscrowRecord
 @property  BOOL _skipEscrowFetches
 @property  NSString *_recoveryToken
 @property  BOOL _ignoreLockAssertErrors
 @property  BOOL idmsRecovery
 @property  BOOL idmsMasterKeyRecovery
 @property  BOOL mandatesRecoveryKey
 @property  BOOL isPiggybackingRecovery
 @property  BOOL isTTSURecovery
 @property  long long type
 @property  CDPCustodianRecoveryInfo *custodianRecoveryInfo
 @property  NSData *beneficiaryWrappedKeyData
 @property  NSString *bundleID
 @property  NSDictionary *authenticationResults
 @property  NSString *appleID
 @property  NSString *password
 @property  NSString *passwordEquivToken
 @property  NSNumber *dsid
 @property  NSString *altDSID
 @property  BOOL isHSA2Account
 @property  BOOL isFederatedAccount
 @property  BOOL isBeneficiaryAccount
 @property  BOOL didUseSMSVerification
 @property  BOOL isAttemptingBackupRestore
 @property  NSString *cachedLocalSecret
 @property  unsigned long cachedLocalSecretType
 @property  BOOL guestMode
 @property  NSString *findMyiPhoneUUID
 @property  BOOL supportsSkipSignIn
 @property  NSUUID *beneficiaryIdentifier

  // class methods
  +[CDPContext supportsSecureCoding]
  +[CDPContext preflightContext:]

  // instance methods
  -[CDPContext setAppleID:]
  -[CDPContext appleID]
  -[CDPContext setDsid:]
  -[CDPContext setAltDSID:]
  -[CDPContext bundleID]
  -[CDPContext dsid]
  -[CDPContext analyticsReporter]
  -[CDPContext initWithCoder:]
  -[CDPContext altDSID]
  -[CDPContext password]
  -[CDPContext setType:]
  -[CDPContext beneficiaryIdentifier]
  -[CDPContext .cxx_destruct]
  -[CDPContext setPasswordEquivToken:]
  -[CDPContext setIdmsMasterKeyRecovery:]
  -[CDPContext mandatesRecoveryKey]
  -[CDPContext setMandatesRecoveryKey:]
  -[CDPContext idmsMasterKeyRecovery]
  -[CDPContext setIdmsRecovery:]
  -[CDPContext setGuestMode:]
  -[CDPContext init]
  -[CDPContext setBeneficiaryIdentifier:]
  -[CDPContext setBundleID:]
  -[CDPContext authenticationResults]
  -[CDPContext type]
  -[CDPContext setAuthenticationResults:]
  -[CDPContext setSharingChannel:]
  -[CDPContext set_ignoreLockAssertErrors:]
  -[CDPContext setCustodianRecoveryInfo:]
  -[CDPContext initWithAuthenticationResults:]
  -[CDPContext guestMode]
  -[CDPContext setPassword:]
  -[CDPContext _ignoreLockAssertErrors]
  -[CDPContext copyWithZone:]
  -[CDPContext set_skipEscrowFetches:]
  -[CDPContext _skipEscrowFetches]
  -[CDPContext encodeWithCoder:]
  -[CDPContext resumeContext]
  -[CDPContext idmsRecovery]
  -[CDPContext isFederatedAccount]
  -[CDPContext _authProvider]
  -[CDPContext passwordEquivToken]
  -[CDPContext updateWithAuthenticationResults:]
  -[CDPContext _supportsCustodianRecovery]
  -[CDPContext sharingChannel]
  -[CDPContext custodianRecoveryInfo]
  -[CDPContext setCachedLocalSecret:]
  -[CDPContext setCachedLocalSecretType:]
  -[CDPContext set_alwaysCreateEscrowRecord:]
  -[CDPContext findMyiPhoneUUID]
  -[CDPContext setValidEscrowDeviceCount:]
  -[CDPContext desiresAllRecords]
  -[CDPContext cliqueConfiguration]
  -[CDPContext set_useSecureBackupCachedPassphrase:]
  -[CDPContext setSupportsSkipSignIn:]
  -[CDPContext augmentWithCredentialsFromContext:]
  -[CDPContext set_authProvider:]
  -[CDPContext failSignInOnError]
  -[CDPContext isHSA2Account]
  -[CDPContext _alwaysCreateEscrowRecord]
  -[CDPContext isBeneficiaryAccount]
  -[CDPContext cachedLocalSecret]
  -[CDPContext cachedLocalSecretType]
  -[CDPContext _useSecureBackupCachedPassphrase]
  -[CDPContext set_supportsCustodianRecovery:]
  -[CDPContext _disableAsyncSecureBackupEnrollment]
  -[CDPContext isPiggybackingRecovery]
  -[CDPContext duplexSession]
  -[CDPContext isTTSURecovery]
  -[CDPContext validEscrowDeviceCount]
  -[CDPContext purgeResumeData]
  -[CDPContext setIsHSA2Account:]
  -[CDPContext setIsFederatedAccount:]
  -[CDPContext setIsBeneficiaryAccount:]
  -[CDPContext didUseSMSVerification]
  -[CDPContext setDidUseSMSVerification:]
  -[CDPContext isAttemptingBackupRestore]
  -[CDPContext setIsAttemptingBackupRestore:]
  -[CDPContext setFindMyiPhoneUUID:]
  -[CDPContext supportsSkipSignIn]
  -[CDPContext setDuplexSession:]
  -[CDPContext setResumeContext:]
  -[CDPContext setFailSignInOnError:]
  -[CDPContext set_disableAsyncSecureBackupEnrollment:]
  -[CDPContext _recoveryToken]
  -[CDPContext set_recoveryToken:]
  -[CDPContext beneficiaryWrappedKeyData]
  -[CDPContext setBeneficiaryWrappedKeyData:]


CDPCircleProxyImpl : NSObject <CDPDCircleProxy>
 @property  CDPContext *cdpContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPCircleProxyImpl peerId]
  -[CDPCircleProxyImpl fetchUserControllableViewsSyncingEnabled:]
  -[CDPCircleProxyImpl registerCredentials]
  -[CDPCircleProxyImpl contextType]
  -[CDPCircleProxyImpl cdpStatusFromSOS:]
  -[CDPCircleProxyImpl generateVerifierWithRecoveryKey:error:]
  -[CDPCircleProxyImpl cachedCliqueStatus:]
  -[CDPCircleProxyImpl requestToJoinCircleAfterRestore:]
  -[CDPCircleProxyImpl registerCredentialsIfMissing]
  -[CDPCircleProxyImpl .cxx_destruct]
  -[CDPCircleProxyImpl didJoinCircleAfterRecovery:]
  -[CDPCircleProxyImpl reportFailure:]
  -[CDPCircleProxyImpl cachedSOSCircleStatus:]
  -[CDPCircleProxyImpl _sos_authenticatedCircleStatus:]
  -[CDPCircleProxyImpl combinedCircleStatus:]
  -[CDPCircleProxyImpl _pairingChannelContext]
  -[CDPCircleProxyImpl hasNonViewAwarePeers]
  -[CDPCircleProxyImpl isLastBackupMakingPeer:]
  -[CDPCircleProxyImpl _sos_circleStatus:]
  -[CDPCircleProxyImpl removeThisDeviceFromCircle:]
  -[CDPCircleProxyImpl removeNonViewAwarePeers:]
  -[CDPCircleProxyImpl nonCachedSOSCircleStatus:]
  -[CDPCircleProxyImpl recoverOctagonUsingCustodianInfo:completion:]
  -[CDPCircleProxyImpl setUserControllableViewsSyncStatus:error:]
  -[CDPCircleProxyImpl initWithContext:]
  -[CDPCircleProxyImpl tryRegisteringCredentials]
  -[CDPCircleProxyImpl _cliqueStatus:]
  -[CDPCircleProxyImpl requestToJoinCircle:]
  -[CDPCircleProxyImpl _authenticatedCliqueStatus:]
  -[CDPCircleProxyImpl initWithContext:clique:]
  -[CDPCircleProxyImpl pairingChannelAcceptor]
  -[CDPCircleProxyImpl cdpStatusFromOT:]
  -[CDPCircleProxyImpl requestToResetProtectedData:]
  -[CDPCircleProxyImpl peerDeviceNamesByPeerID]
  -[CDPCircleProxyImpl waitForInitialSync:]
  -[CDPCircleProxyImpl pairingChannelInitiator]
  -[CDPCircleProxyImpl generateRecoveryKeyWithInfo:error:]
  -[CDPCircleProxyImpl _registerCredentialsOnlyIfNeeded:]
  -[CDPCircleProxyImpl cdpContext]
  -[CDPCircleProxyImpl reportSuccess]
  -[CDPCircleProxyImpl anyPeerHasEnabledViewsInSet:error:]
  -[CDPCircleProxyImpl sos_circleStatus:]
  -[CDPCircleProxyImpl combinedCachedCircleStatus:]
  -[CDPCircleProxyImpl waitForUpdate]
  -[CDPCircleProxyImpl synchronizeCircleViews]
  -[CDPCircleProxyImpl canAuthenticate]


CDPRecoveryKeySecretValidatorProxyImpl : NSObject <CDPRemoteDeviceSecretValidatorProtocol>
 @property  unsigned long supportedEscapeOfferMask

  // instance methods
  -[CDPRecoveryKeySecretValidatorProxyImpl .cxx_destruct]
  -[CDPRecoveryKeySecretValidatorProxyImpl cancelValidationWithError:]
  -[CDPRecoveryKeySecretValidatorProxyImpl initWithRemoteObject:]
  -[CDPRecoveryKeySecretValidatorProxyImpl setSupportedEscapeOfferMask:]
  -[CDPRecoveryKeySecretValidatorProxyImpl supportedEscapeOfferMask]
  -[CDPRecoveryKeySecretValidatorProxyImpl resetAccountCDPState]
  -[CDPRecoveryKeySecretValidatorProxyImpl cancelApproveFromAnotherDevice]
  -[CDPRecoveryKeySecretValidatorProxyImpl approveFromAnotherDeviceWithCompletion:]
  -[CDPRecoveryKeySecretValidatorProxyImpl validateCustodianRecoveryInfo:withCompletion:]
  -[CDPRecoveryKeySecretValidatorProxyImpl supportedEscapeOfferMaskCompletion:]
  -[CDPRecoveryKeySecretValidatorProxyImpl validateSecret:devices:type:withCompletion:]
  -[CDPRecoveryKeySecretValidatorProxyImpl validateRecoveryKey:withCompletion:]


CDPAccount : NSObject
  // class methods
  +[CDPAccount sharedInstance]
  +[CDPAccount isICDPEnabledForDSID:checkWithServer:]
  +[CDPAccount isICDPEnabledForDSID:]

  // instance methods
  -[CDPAccount authToken]
  -[CDPAccount primaryAccountSecurityLevel]
  -[CDPAccount contextForPrimaryAccount]
  -[CDPAccount primaryAccountStashedPRK]
  -[CDPAccount primaryAccountFullName]
  -[CDPAccount primaryAccountAltDSID]
  -[CDPAccount primaryAccountIsBeneficiary]
  -[CDPAccount iCloudEnv]
  -[CDPAccount escrowURL]
  -[CDPAccount primaryAccountUsername]
  -[CDPAccount primaryAccountFirstName]
  -[CDPAccount primaryAccountDSID]
  -[CDPAccount primaryAppleAccount]


CDPAuthProviderProxy : NSObject <CDPAuthProviderInternal>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CDPAuthProviderProxy proxyWithAuthProvider:]

  // instance methods
  -[CDPAuthProviderProxy .cxx_destruct]
  -[CDPAuthProviderProxy cdpContext:performSilentRecoveryTokenRenewal:]
  -[CDPAuthProviderProxy cdpContext:verifyMasterKey:completion:]


CDPCustodianRecoveryKeyController : NSObject
  // instance methods
  -[CDPCustodianRecoveryKeyController validateRecoveryKey:withContext:completion:]
  -[CDPCustodianRecoveryKeyController deleteRecoveryKeyWithContext:forUUID:completion:]
  -[CDPCustodianRecoveryKeyController createRecoveryKeyWithContext:forUUID:completion:]


CDPUpdateDataPrivacyContext : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long statusToSet
 @property  BOOL userAcceptedDevicesToLoseAccountAccess
 @property  NSArray *devicesThatLoseAccountAccessOnEnable

  // class methods
  +[CDPUpdateDataPrivacyContext supportsSecureCoding]

  // instance methods
  -[CDPUpdateDataPrivacyContext initWithCoder:]
  -[CDPUpdateDataPrivacyContext .cxx_destruct]
  -[CDPUpdateDataPrivacyContext copyWithZone:]
  -[CDPUpdateDataPrivacyContext encodeWithCoder:]
  -[CDPUpdateDataPrivacyContext statusToSet]
  -[CDPUpdateDataPrivacyContext userAcceptedDevicesToLoseAccountAccess]
  -[CDPUpdateDataPrivacyContext setDevicesThatLoseAccountAccessOnEnable:]
  -[CDPUpdateDataPrivacyContext initWithStatusToUpdate:]
  -[CDPUpdateDataPrivacyContext setStatusToSet:]
  -[CDPUpdateDataPrivacyContext setUserAcceptedDevicesToLoseAccountAccess:]
  -[CDPUpdateDataPrivacyContext devicesThatLoseAccountAccessOnEnable]


CDPInheritanceTrustController : NSObject
  // instance methods
  -[CDPInheritanceTrustController recoverOctagonWithContext:inheritanceKey:completion:]
  -[CDPInheritanceTrustController isInheritanceAccessKeyValid:]
  -[CDPInheritanceTrustController createInheritanceKeyWithContext:completion:]
  -[CDPInheritanceTrustController deleteInheritanceAccessKeyWithContext:completion:]
  -[CDPInheritanceTrustController validateAccessKey:withContext:completion:]


CDPStateUIProviderProxy : NSObject <CDPStateUIProviderInternal>
 @property  <CDPStateUIProvider> *uiProvider

  // instance methods
  -[CDPStateUIProviderProxy uiProvider]
  -[CDPStateUIProviderProxy setUiProvider:]
  -[CDPStateUIProviderProxy .cxx_destruct]
  -[CDPStateUIProviderProxy cdpContext:presentRecoveryKeyWithValidator:completion:]
  -[CDPStateUIProviderProxy cdpContext:showError:withCompletion:]
  -[CDPStateUIProviderProxy cdpContext:promptForRecoveryKeyWithValidator:completion:]
  -[CDPStateUIProviderProxy cdpContext:promptForRecoveryKeyWithSecretValidator:completion:]
  -[CDPStateUIProviderProxy cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:]
  -[CDPStateUIProviderProxy cdpContext:promptForAdoptionOfMultipleICSC:]
  -[CDPStateUIProviderProxy cdpRecoveryFlowContext:promptForRemoteSecretWithDevices:validator:]
  -[CDPStateUIProviderProxy cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:]
  -[CDPStateUIProviderProxy cdpContext:promptForInteractiveAuthenticationWithCompletion:]
  -[CDPStateUIProviderProxy cdpContext:promptForBeneficiaryAccessKeyWithCompletion:]
  -[CDPStateUIProviderProxy cdpContext:promptForLocalSecretWithCompletion:]
  -[CDPStateUIProviderProxy cdpContext:promptForLocalSecretWithHandler:]
  -[CDPStateUIProviderProxy cdpContext:showError:withDefaultIndex:withCompletion:]
  -[CDPStateUIProviderProxy cdpContext:beginRemoteApprovalWithValidator:completion:]
  -[CDPStateUIProviderProxy initWithUIProvider:]


CDPCABackupRecoveryReporter : CDPCAReporter
 @property  unsigned long joinMethod

  // instance methods
  -[CDPCABackupRecoveryReporter initWithContext:]
  -[CDPCABackupRecoveryReporter backupRecoverySetAttemptedMethod:]
  -[CDPCABackupRecoveryReporter backupRecoveryDidSucceed]
  -[CDPCABackupRecoveryReporter joinMethod]
  -[CDPCABackupRecoveryReporter backupRecoveryDidFailWithError:]
  -[CDPCABackupRecoveryReporter backupRecoveryDidSucceedWithoutLocalSecret]
  -[CDPCABackupRecoveryReporter backupRecoveryDidCancel]
  -[CDPCABackupRecoveryReporter backupRecoveryDidReset]
  -[CDPCABackupRecoveryReporter backupRecoverySetJoinFromBundleID:]


CDPFollowUpController : NSObject
  // instance methods
  -[CDPFollowUpController .cxx_destruct]
  -[CDPFollowUpController postFollowUpWithContext:error:]
  -[CDPFollowUpController clearFollowUpWithContext:error:]
  -[CDPFollowUpController init]
  -[CDPFollowUpController dealloc]
  -[CDPFollowUpController invalidate]


CDPPCSUtilities : NSObject
  // class methods
  +[CDPPCSUtilities setupDictionaryWithContext:]
  +[CDPPCSUtilities _pcsConfigForPrimaryAccount]


CDPLocalizedStringBuilder : NSObject
  // class methods
  +[CDPLocalizedStringBuilder builderForKey:]
  +[CDPLocalizedStringBuilder builderForKey:inTable:]

  // instance methods
  -[CDPLocalizedStringBuilder .cxx_destruct]
  -[CDPLocalizedStringBuilder currentKey]
  -[CDPLocalizedStringBuilder localizedString]
  -[CDPLocalizedStringBuilder addSecretType:]
  -[CDPLocalizedStringBuilder addDeviceClass:]
  -[CDPLocalizedStringBuilder addUnqualifiedDeviceClass:]


CDPDevice : NSObject <NSCopying, NSSecureCoding, CDPDeviceProtocol>
 @property  NSString *localizedName
 @property  NSString *model
 @property  NSString *modelVersion
 @property  NSString *modelClass
 @property  unsigned long platform
 @property  NSString *recordID
 @property  NSString *machineID
 @property  NSDate *recordDate
 @property  BOOL hasRandomSecret
 @property  BOOL hasNumericSecret
 @property  NSNumber *numericSecretLength
 @property  BOOL isUsingMultipleiCSC
 @property  unsigned long remainingAttempts
 @property  NSString *serialNumber
 @property  BOOL isCurrentDevice
 @property  unsigned long recoveryStatus
 @property  NSNumber *coolOffPeriod
 @property  NSString *deviceColor
 @property  NSString *enclosureColor
 @property  NSDictionary *recordInfo
 @property  NSData *simplePublicKey
 @property  unsigned long localSecretType
 @property  NSString *localizedDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CDPDevice supportsSecureCoding]

  // instance methods
  -[CDPDevice deviceColor]
  -[CDPDevice setLocalizedDescription:]
  -[CDPDevice localizedName]
  -[CDPDevice serialNumber]
  -[CDPDevice setRecordID:]
  -[CDPDevice setSerialNumber:]
  -[CDPDevice setPlatform:]
  -[CDPDevice localizedDescription]
  -[CDPDevice platform]
  -[CDPDevice initWithCoder:]
  -[CDPDevice setLocalizedName:]
  -[CDPDevice setEnclosureColor:]
  -[CDPDevice enclosureColor]
  -[CDPDevice modelVersion]
  -[CDPDevice .cxx_destruct]
  -[CDPDevice recordID]
  -[CDPDevice setModelClass:]
  -[CDPDevice recordDate]
  -[CDPDevice setMachineID:]
  -[CDPDevice model]
  -[CDPDevice isCurrentDevice]
  -[CDPDevice setDeviceColor:]
  -[CDPDevice machineID]
  -[CDPDevice setModel:]
  -[CDPDevice setRecordDate:]
  -[CDPDevice copyWithZone:]
  -[CDPDevice setModelVersion:]
  -[CDPDevice encodeWithCoder:]
  -[CDPDevice modelClass]
  -[CDPDevice setRemainingAttempts:]
  -[CDPDevice setRecoveryStatus:]
  -[CDPDevice remainingAttempts]
  -[CDPDevice recoveryStatus]
  -[CDPDevice recordInfo]
  -[CDPDevice hasNumericSecret]
  -[CDPDevice numericSecretLength]
  -[CDPDevice hasRandomSecret]
  -[CDPDevice localSecretType]
  -[CDPDevice setCoolOffPeriod:]
  -[CDPDevice setHasRandomSecret:]
  -[CDPDevice isUsingMultipleiCSC]
  -[CDPDevice simplePublicKey]
  -[CDPDevice setHasNumericSecret:]
  -[CDPDevice setNumericSecretLength:]
  -[CDPDevice setIsUsingMultipleiCSC:]
  -[CDPDevice setIsCurrentDevice:]
  -[CDPDevice coolOffPeriod]
  -[CDPDevice setRecordInfo:]
  -[CDPDevice setSimplePublicKey:]


CDPCAReporter : NSObject
  // instance methods
  -[CDPCAReporter objectForKeyedSubscript:]
  -[CDPCAReporter .cxx_destruct]
  -[CDPCAReporter setObject:forKeyedSubscript:]
  -[CDPCAReporter initWithEvent:]
  -[CDPCAReporter sendReport]
  -[CDPCAReporter machAbsoluteTimeToTimeInterval:]


CDPRemoteDeviceSecretValidator : NSObject
  // instance methods
  -[CDPRemoteDeviceSecretValidator .cxx_destruct]
  -[CDPRemoteDeviceSecretValidator cancelValidationWithError:]
  -[CDPRemoteDeviceSecretValidator supportedEscapeOfferMask]
  -[CDPRemoteDeviceSecretValidator resetAccountCDPState]
  -[CDPRemoteDeviceSecretValidator cancelApproveFromAnotherDevice]
  -[CDPRemoteDeviceSecretValidator approveFromAnotherDeviceWithCompletion:]
  -[CDPRemoteDeviceSecretValidator validateCustodianRecoveryInfo:withCompletion:]
  -[CDPRemoteDeviceSecretValidator supportedEscapeOfferMaskCompletion:]
  -[CDPRemoteDeviceSecretValidator validateSecret:devices:type:withCompletion:]
  -[CDPRemoteDeviceSecretValidator validateRecoveryKey:withCompletion:]
  -[CDPRemoteDeviceSecretValidator initWithContext:validator:]
  -[CDPRemoteDeviceSecretValidator _executeSyncOnMainThreadIfNeeded:]


CDPLocalDeviceSecretHandler : NSObject
 @property  CDPContext *context

  // instance methods
  -[CDPLocalDeviceSecretHandler .cxx_destruct]
  -[CDPLocalDeviceSecretHandler context]
  -[CDPLocalDeviceSecretHandler userDidEnterValidSecret:type:]
  -[CDPLocalDeviceSecretHandler userDidCancelWithError:]
  -[CDPLocalDeviceSecretHandler initWithContext:handler:]


CDPRecoveryKeyValidatorProxyImpl : NSObject <CDPRecoveryKeyValidator>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPRecoveryKeyValidatorProxyImpl .cxx_destruct]
  -[CDPRecoveryKeyValidatorProxyImpl initWithRemoteObject:]
  -[CDPRecoveryKeyValidatorProxyImpl confirmRecoveryKey:completion:]
  -[CDPRecoveryKeyValidatorProxyImpl generateRecoveryKey:]
  -[CDPRecoveryKeyValidatorProxyImpl generateRecoveryKeyWithError:]
  -[CDPRecoveryKeyValidatorProxyImpl confirmRecoveryKey:error:]


CDPTermsInfoBackupController : NSObject
 @property  CDPDaemonConnection *daemonConn

  // instance methods
  -[CDPTermsInfoBackupController setDaemonConn:]
  -[CDPTermsInfoBackupController fetchTermsAcceptanceForAccount:completion:]
  -[CDPTermsInfoBackupController .cxx_destruct]
  -[CDPTermsInfoBackupController daemonConn]
  -[CDPTermsInfoBackupController init]
  -[CDPTermsInfoBackupController saveTermsAcceptance:completion:]


CDPDataPrivacyController : NSObject
  // instance methods
  -[CDPDataPrivacyController _updateDataPrivacyWithContext:completion:]
  -[CDPDataPrivacyController _logDataPrivacyStatUpdateError:completion:]
  -[CDPDataPrivacyController _checkUseConsentForContext:shouldContinue:completion:]
  -[CDPDataPrivacyController statusForDataPrivacyWithCompletion:]
  -[CDPDataPrivacyController updateDataPrivacyWithContext:shouldContinue:completion:]


CDPKeychainSync : NSObject
  // class methods
  +[CDPKeychainSync setUserVisibleKeychainSyncEnabled:withCompletion:]
  +[CDPKeychainSync isUserVisibleKeychainSyncEnabled]
  +[CDPKeychainSync removeNonViewAwarePeersFromCircleWithContext:completion:]


CDPToolFakeUIProvider : NSObject <CDPStateUIProvider>
 @property  NSString *localSecret
 @property  NSString *remoteSecret
 @property  NSString *icsc
 @property  NSString *recoveryKey
 @property  AKInheritanceAccessKey *accessKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPToolFakeUIProvider icsc]
  -[CDPToolFakeUIProvider .cxx_destruct]
  -[CDPToolFakeUIProvider accessKey]
  -[CDPToolFakeUIProvider setAccessKey:]
  -[CDPToolFakeUIProvider cdpContext:promptForRecoveryKeyWithValidator:completion:]
  -[CDPToolFakeUIProvider cdpContext:promptForRecoveryKeyWithSecretValidator:completion:]
  -[CDPToolFakeUIProvider cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:]
  -[CDPToolFakeUIProvider cdpContext:promptForAdoptionOfMultipleICSC:]
  -[CDPToolFakeUIProvider cdpRecoveryFlowContext:promptForRemoteSecretWithDevices:validator:]
  -[CDPToolFakeUIProvider cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:]
  -[CDPToolFakeUIProvider cdpContext:promptForInteractiveAuthenticationWithCompletion:]
  -[CDPToolFakeUIProvider cdpContext:promptForBeneficiaryAccessKeyWithCompletion:]
  -[CDPToolFakeUIProvider cdpContext:promptForLocalSecretWithCompletion:]
  -[CDPToolFakeUIProvider setRecoveryKey:]
  -[CDPToolFakeUIProvider recoveryKey]
  -[CDPToolFakeUIProvider setLocalSecret:]
  -[CDPToolFakeUIProvider localSecret]
  -[CDPToolFakeUIProvider remoteSecret]
  -[CDPToolFakeUIProvider setRemoteSecret:]
  -[CDPToolFakeUIProvider setIcsc:]


CDPUtilities : NSObject
  // class methods
  +[CDPUtilities hasFullCDPSupport]
  +[CDPUtilities isInternalBuild]


CDPRecoveryFlowContext : NSObject <NSSecureCoding, NSCopying>
 @property  CDPContext *context
 @property  BOOL hasPeersForRemoteApproval

  // class methods
  +[CDPRecoveryFlowContext supportsSecureCoding]

  // instance methods
  -[CDPRecoveryFlowContext initWithCoder:]
  -[CDPRecoveryFlowContext .cxx_destruct]
  -[CDPRecoveryFlowContext setContext:]
  -[CDPRecoveryFlowContext copyWithZone:]
  -[CDPRecoveryFlowContext encodeWithCoder:]
  -[CDPRecoveryFlowContext context]
  -[CDPRecoveryFlowContext hasPeersForRemoteApproval]
  -[CDPRecoveryFlowContext setHasPeersForRemoteApproval:]


CDPManateeStateController : NSObject <CDPDAuthListener, CDPDCircleListener>
 @property  <CDPDCircleProxy> *circleProxy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPManateeStateController circleViewStatusChanged]
  -[CDPManateeStateController isManateeAvailable:]
  -[CDPManateeStateController _checkSecurityEligibility:]
  -[CDPManateeStateController .cxx_destruct]
  -[CDPManateeStateController _didCreateCircleProxy]
  -[CDPManateeStateController reportManateeUnavailable]
  -[CDPManateeStateController securityLevelChanged:]
  -[CDPManateeStateController _sendNotification:withValue:]
  -[CDPManateeStateController circleProxy]
  -[CDPManateeStateController isPrimaryAccountHSA2]
  -[CDPManateeStateController circleStatusChanged]
  -[CDPManateeStateController reportManateeAvailable]
  -[CDPManateeStateController setCircleProxy:]


CDPStateController : CDPController
  // instance methods
  -[CDPStateController repairCloudDataProtectionStateWithCompletion:]
  -[CDPStateController generateNewRecoveryKey:]
  -[CDPStateController handleURLActionWithInfo:completion:]
  -[CDPStateController shouldPerformRepairWithOptionForceFetch:error:]
  -[CDPStateController isManateeAvailable:]
  -[CDPStateController verifyRecoveryKey:]
  -[CDPStateController finishCyrusFlowAfterTermsAgreementWithContext:]
  -[CDPStateController handleURLActionWithInfo:]
  -[CDPStateController deleteRecoveryKeyWithError:]
  -[CDPStateController isRecoveryKeyAvailableWithError:]
  -[CDPStateController shouldPerformRepairWithOptionForceFetch:completion:]
  -[CDPStateController startCircleApplicationApprovalServerSkipEscrowFetches:]
  -[CDPStateController isRecoveryKeyAvailableWithCompletion:]
  -[CDPStateController fetchEscrowRecordDevicesWithContext:usingCache:completion:]
  -[CDPStateController attemptToEscrowPreRecord:completion:]
  -[CDPStateController recoverWithSquirrel:]
  -[CDPStateController handleCloudDataProtectionStateWithCompletion:]
  -[CDPStateController generateRandomRecoveryKey:]
  -[CDPStateController deleteRecoveryKey:]
  -[CDPStateController recoverAndSynchronizeWithSquirrel:]
  -[CDPStateController startCircleApplicationApprovalServer:]
  -[CDPStateController attemptToEscrowPreRecord:preRecordUUID:secretType:completion:]
  -[CDPStateController localSecretChangedTo:secretType:completion:]
  -[CDPStateController finishOfflineLocalSecretChangeWithCompletion:]


CDPRecoveryController : CDPController
  // instance methods
  -[CDPRecoveryController _sanitizedRecoveryErrorWithError:]
  -[CDPRecoveryController performRecovery:]


CDPLocalDeviceSecretProxyImpl : NSObject <CDPLocalDeviceSecretProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CDPLocalDeviceSecretProxyImpl hasLocalSecret]


CDPLocalDevice : NSObject
  // class methods
  +[CDPLocalDevice sharedInstance]
  +[CDPLocalDevice hasLocalSecret]

  // instance methods
  -[CDPLocalDevice serialNumber]
  -[CDPLocalDevice hardwareModel]
  -[CDPLocalDevice osVersion]
  -[CDPLocalDevice deviceName]
  -[CDPLocalDevice modelVersion]
  -[CDPLocalDevice .cxx_destruct]
  -[CDPLocalDevice deviceClass]
  -[CDPLocalDevice init]
  -[CDPLocalDevice _isHomePod]
  -[CDPLocalDevice hasLocalSecret]
  -[CDPLocalDevice supportsSecureBackupRecovery]
  -[CDPLocalDevice marketingModel]
  -[CDPLocalDevice _currentProcessCreatesDaemonTypeProxy]
  -[CDPLocalDevice _currentProcessHasEntitlement:]


CDPController : NSObject
 @property  CDPDaemonConnection *daemonConn
 @property  CDPStateUIProviderProxy *uiProviderProxy
 @property  CDPContext *context
 @property  <CDPStateUIProvider> *uiProvider
 @property  <CDPAuthProvider> *authProvider

  // instance methods
  -[CDPController initWithXpcEndpoint:context:]
  -[CDPController uiProvider]
  -[CDPController setAuthProvider:]
  -[CDPController uiProviderProxy]
  -[CDPController setUiProvider:]
  -[CDPController setDaemonConn:]
  -[CDPController setUiProviderProxy:]
  -[CDPController .cxx_destruct]
  -[CDPController daemonConn]
  -[CDPController init]
  -[CDPController initWithContext:]
  -[CDPController authProvider]
  -[CDPController dealloc]
  -[CDPController invalidate]
  -[CDPController context]


CDPDaemonConnection : NSObject
 @property  NSXPCListenerEndpoint *daemonXPCEndpoint

  // instance methods
  -[CDPDaemonConnection daemon]
  -[CDPDaemonConnection .cxx_destruct]
  -[CDPDaemonConnection daemonXPCEndpoint]
  -[CDPDaemonConnection synchronousDaemonWithErrorHandler:]
  -[CDPDaemonConnection init]
  -[CDPDaemonConnection connection]
  -[CDPDaemonConnection setDaemonXPCEndpoint:]
  -[CDPDaemonConnection daemonWithErrorHandler:]
  -[CDPDaemonConnection dealloc]


CDPLocalSecret : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *validatedSecret
 @property  unsigned long secretType

  // class methods
  +[CDPLocalSecret supportsSecureCoding]

  // instance methods
  -[CDPLocalSecret initWithCoder:]
  -[CDPLocalSecret .cxx_destruct]
  -[CDPLocalSecret secretType]
  -[CDPLocalSecret copyWithZone:]
  -[CDPLocalSecret encodeWithCoder:]
  -[CDPLocalSecret validatedSecret]
  -[CDPLocalSecret initWithValidatedSecret:secretType:]


CDPCustodianRecoveryInfo : NSObject <NSSecureCoding, NSCopying>
 @property  NSData *wrappedRKC
 @property  NSData *wrappingKey
 @property  NSUUID *custodianUUID

  // class methods
  +[CDPCustodianRecoveryInfo supportsSecureCoding]

  // instance methods
  -[CDPCustodianRecoveryInfo initWithCoder:]
  -[CDPCustodianRecoveryInfo .cxx_destruct]
  -[CDPCustodianRecoveryInfo custodianUUID]
  -[CDPCustodianRecoveryInfo wrappedRKC]
  -[CDPCustodianRecoveryInfo initWithWrappedRKC:wrappingKey:custodianUUID:]
  -[CDPCustodianRecoveryInfo wrappingKey]
  -[CDPCustodianRecoveryInfo copyWithZone:]
  -[CDPCustodianRecoveryInfo encodeWithCoder:]


(CDPDeviceProtocol)
	// instance methods
	-[(CDPDeviceProtocol) prevailingLocalSecretType]
	-[(CDPDeviceProtocol) hasMixedSecretType]

OTInheritanceKey(CDP)
	// instance methods
	-[OTInheritanceKey(CDP) accessCode]
	-[OTInheritanceKey(CDP) initFromAccessKey:]

(CoreCDP)
	// class methods
	+[(CoreCDP) cdp_errorWithCode:userInfo:]
	+[(CoreCDP) cdp_errorWithCode:]
	+[(CoreCDP) cdp_errorWithCode:underlyingError:]

	// instance methods
	-[(CoreCDP) cdp_isCDPErrorWithCode:]
	-[(CoreCDP) shouldDisplayToUser]
	-[(CoreCDP) cdp_isLoginHardLimit]
	-[(CoreCDP) cdp_isLoginSoftLimit]

(CoreCDP)
	// instance methods
	-[(CoreCDP) cdp_sanitizedCopy]

01 00 0300 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0600 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 0600 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKCircleRequestContext 
01 00 0600 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKInheritanceAccessKey 
01 00 0900 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUMessageSession 
01 00 0800 /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities: CUTReachability 
01 00 0a00 /System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle: KCAESGCMDuplexSession 
01 00 0a00 /System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle: KCPairingChannelContext 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0e00 /System/Library/Frameworks/Security.framework/Security: OTClique 
01 00 0e00 /System/Library/Frameworks/Security.framework/Security: OTConfigurationContext 
01 00 1000 /System/Library/PrivateFrameworks/OctagonTrust.framework/OctagonTrust: OTCustodianRecoveryKey 
01 00 1000 /System/Library/PrivateFrameworks/OctagonTrust.framework/OctagonTrust: OTInheritanceKey 
01 00 0e00 /System/Library/Frameworks/Security.framework/Security: OTOperationConfiguration 
