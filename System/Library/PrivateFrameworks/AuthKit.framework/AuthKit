|| __DATA.__objc_data _OBJC_CLASS_$_AKAbsintheSigner
|| __DATA.__objc_data _OBJC_CLASS_$_AKAdaptiveService
|| __DATA.__objc_data _OBJC_CLASS_$_AKAlertHandler
|| __DATA.__objc_data _OBJC_CLASS_$_AKAppleIDAuthenticationCommandLineContext
|| __DATA.__objc_data _OBJC_CLASS_$_AKAppleIDSigningController
|| __DATA.__objc_data _OBJC_CLASS_$_AKAppleIDSigningDaemonInterface
|| __DATA.__objc_data _OBJC_CLASS_$_AKAttestationSigner
|| __DATA.__objc_data _OBJC_CLASS_$_AKAuthHandlerImpl
|| __DATA.__objc_data _OBJC_CLASS_$_AKAuthorizationAppSignInDiscovery
|| __DATA.__objc_data _OBJC_CLASS_$_AKAuthorizationContext
|| __DATA.__objc_data _OBJC_CLASS_$_AKAuthorizationLoginChoice
|| __DATA.__objc_data _OBJC_CLASS_$_AKAuthorizationNotificationHandlerInterface
|| __DATA.__objc_data _OBJC_CLASS_$_AKAuthorizationNotificationService
|| __DATA.__objc_data _OBJC_CLASS_$_AKAuthorizationPresenterHostInterface
|| __DATA.__objc_data _OBJC_CLASS_$_AKAuthorizationStateBroadcastHandlerInterface
|| __DATA.__objc_data _OBJC_CLASS_$_AKAuthorizationTVServicePresenter
|| __DATA.__objc_data _OBJC_CLASS_$_AKAuthorizationUpgradeContext
|| __DATA.__objc_data _OBJC_CLASS_$_AKAuthorizationValidator
|| __DATA.__objc_data _OBJC_CLASS_$_AKAutoBugCapture
|| __DATA.__objc_data _OBJC_CLASS_$_AKBaseFollowupManager
|| __DATA.__objc_data _OBJC_CLASS_$_AKBeneficiaryAliasSetupResult
|| __DATA.__objc_data _OBJC_CLASS_$_AKBeneficiaryManifest
|| __DATA.__objc_data _OBJC_CLASS_$_AKBundleInformation
|| __DATA.__objc_data _OBJC_CLASS_$_AKCDPFactory
|| __DATA.__objc_data _OBJC_CLASS_$_AKCarouselAlertClientConnection
|| __DATA.__objc_data _OBJC_CLASS_$_AKCarrierBundlePhoneCertificate
|| __DATA.__objc_data _OBJC_CLASS_$_AKCarrierBundleUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_AKCertificatePinning
|| __DATA.__objc_data _OBJC_CLASS_$_AKCommandLineUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_AKCoordinatedDataBlock
|| __DATA.__objc_data _OBJC_CLASS_$_AKCustodianContext
|| __DATA.__objc_data _OBJC_CLASS_$_AKCustodianController
|| __DATA.__objc_data _OBJC_CLASS_$_AKCustodianDaemonConnection
|| __DATA.__objc_data _OBJC_CLASS_$_AKCustodianDaemonInterface
|| __DATA.__objc_data _OBJC_CLASS_$_AKCustodianSetupResult
|| __DATA.__objc_data _OBJC_CLASS_$_AKDeviceListDeltaMessagePayload
|| __DATA.__objc_data _OBJC_CLASS_$_AKFLFollowUpController
|| __DATA.__objc_data _OBJC_CLASS_$_AKFollowUpController
|| __DATA.__objc_data _OBJC_CLASS_$_AKFollowUpFactoryImpl
|| __DATA.__objc_data _OBJC_CLASS_$_AKFollowUpProviderFactory
|| __DATA.__objc_data _OBJC_CLASS_$_AKFollowUpServerPayloadFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_AKFollowUpSynchronizer
|| __DATA.__objc_data _OBJC_CLASS_$_AKFuture
|| __DATA.__objc_data _OBJC_CLASS_$_AKGrandSlamResponseHandler
|| __DATA.__objc_data _OBJC_CLASS_$_AKIconContext
|| __DATA.__objc_data _OBJC_CLASS_$_AKInheritanceAccessKey
|| __DATA.__objc_data _OBJC_CLASS_$_AKInheritanceCLIContext
|| __DATA.__objc_data _OBJC_CLASS_$_AKInheritanceContext
|| __DATA.__objc_data _OBJC_CLASS_$_AKInheritanceController
|| __DATA.__objc_data _OBJC_CLASS_$_AKLAContextValidator
|| __DATA.__objc_data _OBJC_CLASS_$_AKMasterToken
|| __DATA.__objc_data _OBJC_CLASS_$_AKMediaServicesController
|| __DATA.__objc_data _OBJC_CLASS_$_AKNativeAccountRecoveryController
|| __DATA.__objc_data _OBJC_CLASS_$_AKNetworkObserver
|| __DATA.__objc_data _OBJC_CLASS_$_AKPrivateEmail
|| __DATA.__objc_data _OBJC_CLASS_$_AKPrivateEmailClientImpl
|| __DATA.__objc_data _OBJC_CLASS_$_AKPrivateEmailClientInterface
|| __DATA.__objc_data _OBJC_CLASS_$_AKPrivateEmailContext
|| __DATA.__objc_data _OBJC_CLASS_$_AKPrivateEmailController
|| __DATA.__objc_data _OBJC_CLASS_$_AKPrivateEmailDaemonInterface
|| __DATA.__objc_data _OBJC_CLASS_$_AKPrivateEmailPresenterHostInterface
|| __DATA.__objc_data _OBJC_CLASS_$_AKPrivateEmailValidator
|| __DATA.__objc_data _OBJC_CLASS_$_AKProxiedClientContext
|| __DATA.__objc_data _OBJC_CLASS_$_AKToken
|| __DATA.__objc_data _OBJC_CLASS_$_AKTrustedContactsSyncResult
|| __DATA.__objc_data _OBJC_CLASS_$_AKTrustedPhoneNumber
|| __DATA.__objc_data _OBJC_CLASS_$_AKURLBag
|| __DATA.__objc_data _OBJC_CLASS_$_AKURLDataTask
|| __DATA.__objc_data _OBJC_CLASS_$_AKURLSession
|| __DATA.__objc_data _OBJC_CLASS_$_AKUsernameFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_AKUtilities
|| __DATA.__objc_data _OBJC_CLASS_$__AKMessageForwarder
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAbsintheSigner
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAdaptiveService
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAlertHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAppleIDAuthenticationCommandLineContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAppleIDSigningController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAppleIDSigningDaemonInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAttestationSigner
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAuthHandlerImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAuthorizationAppSignInDiscovery
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAuthorizationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAuthorizationLoginChoice
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAuthorizationNotificationHandlerInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAuthorizationNotificationService
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAuthorizationPresenterHostInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAuthorizationStateBroadcastHandlerInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAuthorizationTVServicePresenter
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAuthorizationUpgradeContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAuthorizationValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_AKAutoBugCapture
|| __DATA.__objc_data _OBJC_METACLASS_$_AKBaseFollowupManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AKBeneficiaryAliasSetupResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AKBeneficiaryManifest
|| __DATA.__objc_data _OBJC_METACLASS_$_AKBundleInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_AKCDPFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_AKCarouselAlertClientConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_AKCarrierBundlePhoneCertificate
|| __DATA.__objc_data _OBJC_METACLASS_$_AKCarrierBundleUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_AKCertificatePinning
|| __DATA.__objc_data _OBJC_METACLASS_$_AKCommandLineUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_AKCoordinatedDataBlock
|| __DATA.__objc_data _OBJC_METACLASS_$_AKCustodianContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AKCustodianController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKCustodianDaemonConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_AKCustodianDaemonInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_AKCustodianSetupResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AKDeviceListDeltaMessagePayload
|| __DATA.__objc_data _OBJC_METACLASS_$_AKFLFollowUpController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKFollowUpController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKFollowUpFactoryImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_AKFollowUpProviderFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_AKFollowUpServerPayloadFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_AKFollowUpSynchronizer
|| __DATA.__objc_data _OBJC_METACLASS_$_AKFuture
|| __DATA.__objc_data _OBJC_METACLASS_$_AKGrandSlamResponseHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_AKIconContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AKInheritanceAccessKey
|| __DATA.__objc_data _OBJC_METACLASS_$_AKInheritanceCLIContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AKInheritanceContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AKInheritanceController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKLAContextValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_AKMasterToken
|| __DATA.__objc_data _OBJC_METACLASS_$_AKMediaServicesController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKNativeAccountRecoveryController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKNetworkObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_AKPrivateEmail
|| __DATA.__objc_data _OBJC_METACLASS_$_AKPrivateEmailClientImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_AKPrivateEmailClientInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_AKPrivateEmailContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AKPrivateEmailController
|| __DATA.__objc_data _OBJC_METACLASS_$_AKPrivateEmailDaemonInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_AKPrivateEmailPresenterHostInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_AKPrivateEmailValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_AKProxiedClientContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AKToken
|| __DATA.__objc_data _OBJC_METACLASS_$_AKTrustedContactsSyncResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AKTrustedPhoneNumber
|| __DATA.__objc_data _OBJC_METACLASS_$_AKURLBag
|| __DATA.__objc_data _OBJC_METACLASS_$_AKURLDataTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AKURLSession
|| __DATA.__objc_data _OBJC_METACLASS_$_AKUsernameFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_AKUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$__AKMessageForwarder
|| __DATA.__objc_ivar _OBJC_IVAR_$_AKToken._expirationDate
|| __DATA_CONST.__const _AKAAAccountClassPrimary
|| __DATA_CONST.__const _AKAbsintheErrorDomain
|| __DATA_CONST.__const _AKAccessibilityIdentifierTiburon
|| __DATA_CONST.__const _AKAccountNameHeaderKey
|| __DATA_CONST.__const _AKAccountNameTypeHeaderKey
|| __DATA_CONST.__const _AKActionButtonKey
|| __DATA_CONST.__const _AKActionCancel
|| __DATA_CONST.__const _AKActionComplete
|| __DATA_CONST.__const _AKActionContinue
|| __DATA_CONST.__const _AKActionDelete
|| __DATA_CONST.__const _AKActionHeaderKey
|| __DATA_CONST.__const _AKActionKey
|| __DATA_CONST.__const _AKActionOpen
|| __DATA_CONST.__const _AKActionRead
|| __DATA_CONST.__const _AKActionStartICSC
|| __DATA_CONST.__const _AKActionTeardown
|| __DATA_CONST.__const _AKActionValidateMK
|| __DATA_CONST.__const _AKAltDSID
|| __DATA_CONST.__const _AKAltDSIDHeaderKey
|| __DATA_CONST.__const _AKAnisetteErrorDomain
|| __DATA_CONST.__const _AKAnisetteProvisioningMachService
|| __DATA_CONST.__const _AKAppleIDAuthenticationAppProvidedContextAuthless
|| __DATA_CONST.__const _AKAppleIDAuthenticationContextReasonKeyUsername
|| __DATA_CONST.__const _AKAppleIDAuthenticationErrorDomain
|| __DATA_CONST.__const _AKAppleIDAuthenticationMachService
|| __DATA_CONST.__const _AKAppleIDEmailsDidChangeNotification
|| __DATA_CONST.__const _AKAppleIDSigningMachService
|| __DATA_CONST.__const _AKAppleManagedAccountSignInKey
|| __DATA_CONST.__const _AKAppleManagedAccountSignInSettingsKey
|| __DATA_CONST.__const _AKAttestationErrorDomain
|| __DATA_CONST.__const _AKAttestationSignerValidity
|| __DATA_CONST.__const _AKAttestationUseDeviceCheckKeychainAccess
|| __DATA_CONST.__const _AKAuthEventType_SECOND_FACTOR_PIGGYBACK_ESCAPE_FAILURE
|| __DATA_CONST.__const _AKAuthEventType_SECOND_FACTOR_PIGGYBACK_ESCAPE_SMS_SUCCESS
|| __DATA_CONST.__const _AKAuthEventType_SECOND_FACTOR_PIGGYBACK_FAILURE
|| __DATA_CONST.__const _AKAuthEventType_SECOND_FACTOR_PIGGYBACK_TRANSITION
|| __DATA_CONST.__const _AKAuthEventType_SECOND_FACTOR_SERVER_UI
|| __DATA_CONST.__const _AKAuthEventType_SRP_AUTH_FAILURE
|| __DATA_CONST.__const _AKAuthEventType_UNKNOWN
|| __DATA_CONST.__const _AKAuthMode
|| __DATA_CONST.__const _AKAuthSessionTimeoutKey
|| __DATA_CONST.__const _AKAuthTypeHeaderHSA2Value
|| __DATA_CONST.__const _AKAuthTypeHeaderKey
|| __DATA_CONST.__const _AKAuthenticationAcceptedTermsKey
|| __DATA_CONST.__const _AKAuthenticationAdditionalInfoKey
|| __DATA_CONST.__const _AKAuthenticationAlternateDSIDKey
|| __DATA_CONST.__const _AKAuthenticationAppleIDAuthModeKey
|| __DATA_CONST.__const _AKAuthenticationApplicationsListVersionKey
|| __DATA_CONST.__const _AKAuthenticationAuditLoginKey
|| __DATA_CONST.__const _AKAuthenticationCircleContinuationContextKey
|| __DATA_CONST.__const _AKAuthenticationConfigurationInfoKey
|| __DATA_CONST.__const _AKAuthenticationCustodianSessionIDKey
|| __DATA_CONST.__const _AKAuthenticationCustodianSetupTokenKey
|| __DATA_CONST.__const _AKAuthenticationDSIDKey
|| __DATA_CONST.__const _AKAuthenticationDemoAccountKey
|| __DATA_CONST.__const _AKAuthenticationDidPerformBiometricAuth
|| __DATA_CONST.__const _AKAuthenticationDidPerformInteractiveAuth
|| __DATA_CONST.__const _AKAuthenticationDidPerformPasscodeAuth
|| __DATA_CONST.__const _AKAuthenticationDidShowServerUIKey
|| __DATA_CONST.__const _AKAuthenticationDuplexSessionKey
|| __DATA_CONST.__const _AKAuthenticationFamilyNameKey
|| __DATA_CONST.__const _AKAuthenticationFirstNameKey
|| __DATA_CONST.__const _AKAuthenticationForwardingEmailKey
|| __DATA_CONST.__const _AKAuthenticationGivenNameKey
|| __DATA_CONST.__const _AKAuthenticationIDMSTokenKey
|| __DATA_CONST.__const _AKAuthenticationIdentityTokenKey
|| __DATA_CONST.__const _AKAuthenticationImageURLKey
|| __DATA_CONST.__const _AKAuthenticationInheritanceBeneficiaryIdentifierKey
|| __DATA_CONST.__const _AKAuthenticationInheritanceBeneficiarySetupTokenKey
|| __DATA_CONST.__const _AKAuthenticationInheritanceBeneficiaryWrappedKey
|| __DATA_CONST.__const _AKAuthenticationInternalTokenCK
|| __DATA_CONST.__const _AKAuthenticationIsHSA2Key
|| __DATA_CONST.__const _AKAuthenticationIsLegacyStudentKey
|| __DATA_CONST.__const _AKAuthenticationIsPasscodeResetRequiredKey
|| __DATA_CONST.__const _AKAuthenticationIsServerUIRequiredKey
|| __DATA_CONST.__const _AKAuthenticationIsUnderageKey
|| __DATA_CONST.__const _AKAuthenticationLastNameKey
|| __DATA_CONST.__const _AKAuthenticationManagedAppleIDKey
|| __DATA_CONST.__const _AKAuthenticationMasterKeyIDKey
|| __DATA_CONST.__const _AKAuthenticationModeKey
|| __DATA_CONST.__const _AKAuthenticationNewAppleIDSetupInfoKey
|| __DATA_CONST.__const _AKAuthenticationPasswordKey
|| __DATA_CONST.__const _AKAuthenticationPasswordResetTokenKey
|| __DATA_CONST.__const _AKAuthenticationPrimaryVettedEmailKey
|| __DATA_CONST.__const _AKAuthenticationRawPasswordKey
|| __DATA_CONST.__const _AKAuthenticationReachableEmailsKey
|| __DATA_CONST.__const _AKAuthenticationRememberPasswordKey
|| __DATA_CONST.__const _AKAuthenticationRepairStateKey
|| __DATA_CONST.__const _AKAuthenticationSecurityLevelKey
|| __DATA_CONST.__const _AKAuthenticationSecurityUpgradeContextHeaderFieldKey
|| __DATA_CONST.__const _AKAuthenticationSelectedAuthorizationEmailKey
|| __DATA_CONST.__const _AKAuthenticationSelectedPrivateEmailKey
|| __DATA_CONST.__const _AKAuthenticationShortLivedTokenKey
|| __DATA_CONST.__const _AKAuthenticationUsernameKey
|| __DATA_CONST.__const _AKAuthorizationAppleAccountPathString
|| __DATA_CONST.__const _AKAuthorizationAuthPathString
|| __DATA_CONST.__const _AKAuthorizationBirthdayVerifyPathString
|| __DATA_CONST.__const _AKAuthorizationCodeKey
|| __DATA_CONST.__const _AKAuthorizationCredentialOriginPassword
|| __DATA_CONST.__const _AKAuthorizationCredentialOriginUnknown
|| __DATA_CONST.__const _AKAuthorizationHostQA1String
|| __DATA_CONST.__const _AKAuthorizationHostQA2String
|| __DATA_CONST.__const _AKAuthorizationHostQA3String
|| __DATA_CONST.__const _AKAuthorizationHostString
|| __DATA_CONST.__const _AKAuthorizationMachService
|| __DATA_CONST.__const _AKAuthorizationPasswordPathString
|| __DATA_CONST.__const _AKAuthorizationRequestKey
|| __DATA_CONST.__const _AKAuthorizationSMSTriggerPathString
|| __DATA_CONST.__const _AKAuthorizationSMSVerifyCodePathString
|| __DATA_CONST.__const _AKAuthorizationScopeEmail
|| __DATA_CONST.__const _AKAuthorizationScopeFullName
|| __DATA_CONST.__const _AKAuthorizationTVServicePresenterAppIconReplyKeyImageData
|| __DATA_CONST.__const _AKAuthorizationTVServicePresenterAppIconReplyKeyImageScale
|| __DATA_CONST.__const _AKAuthorizationTVServicePresenterOptionsKeyBundleID
|| __DATA_CONST.__const _AKAuthorizationTransferStateExpired
|| __DATA_CONST.__const _AKAuthorizationTransferStateTransferred
|| __DATA_CONST.__const _AKAuthorizedScopesKey
|| __DATA_CONST.__const _AKBugCaptureSubTypeInvalidAccountSave
|| __DATA_CONST.__const _AKBugCaptureSubTypeInvalidAccountUpdate
|| __DATA_CONST.__const _AKBugCaptureSubTypeMissingAccountServices
|| __DATA_CONST.__const _AKBugCaptureSubTypePasswordPrompt
|| __DATA_CONST.__const _AKBugCaptureSubTypeSettingsRedirect
|| __DATA_CONST.__const _AKBundleIconFileKey
|| __DATA_CONST.__const _AKBundleIconNameKey
|| __DATA_CONST.__const _AKCallerBundleIDKey
|| __DATA_CONST.__const _AKCarouselAlertAlternateButtonTitleKey
|| __DATA_CONST.__const _AKCarouselAlertDefaultButtonTitleKey
|| __DATA_CONST.__const _AKCarouselAlertIdentifierKey
|| __DATA_CONST.__const _AKCarouselAlertMessageKey
|| __DATA_CONST.__const _AKCarouselAlertOtherButtonTitleKey
|| __DATA_CONST.__const _AKCarouselAlertOverWriteExistingAlertKey
|| __DATA_CONST.__const _AKCarouselAlertResponseKey
|| __DATA_CONST.__const _AKCarouselAlertServiceName
|| __DATA_CONST.__const _AKCarouselAlertSupplementViewAuthorize
|| __DATA_CONST.__const _AKCarouselAlertSupplementViewDataKey
|| __DATA_CONST.__const _AKCarouselAlertSupplementViewKey
|| __DATA_CONST.__const _AKCarouselAlertSupplementViewLocationSignIn
|| __DATA_CONST.__const _AKCarouselAlertSupplementViewSecondFactor
|| __DATA_CONST.__const _AKCarouselAlertSystemSoundIDKey
|| __DATA_CONST.__const _AKCarouselAlertTextFieldContentTypeKey
|| __DATA_CONST.__const _AKCarouselAlertTextFieldExplanationKey
|| __DATA_CONST.__const _AKCarouselAlertTextFieldInputLengthKey
|| __DATA_CONST.__const _AKCarouselAlertTextFieldInputTypeKey
|| __DATA_CONST.__const _AKCarouselAlertTextFieldIsSecureKey
|| __DATA_CONST.__const _AKCarouselAlertTextFieldValueKey
|| __DATA_CONST.__const _AKCarouselAlertTitleKey
|| __DATA_CONST.__const _AKCarrierBundleAdditionalInfoKeyPhoneCertificate
|| __DATA_CONST.__const _AKCarrierBundleResultKeyBundleLabel
|| __DATA_CONST.__const _AKCarrierBundleResultKeyInUse
|| __DATA_CONST.__const _AKCarrierBundleResultKeyIsDataPreferred
|| __DATA_CONST.__const _AKCarrierBundleResultKeyIsDefaultVoice
|| __DATA_CONST.__const _AKCarrierBundleResultKeyIsPhysicalSim
|| __DATA_CONST.__const _AKCarrierBundleResultKeyPAC
|| __DATA_CONST.__const _AKCarrierBundleResultKeyPhoneNumber
|| __DATA_CONST.__const _AKCarrierBundleResultKeySlotNumber
|| __DATA_CONST.__const _AKCellularDataAttributionAppBundleIDAuthKit
|| __DATA_CONST.__const _AKCircleClientErrorCode
|| __DATA_CONST.__const _AKCircleStepKey
|| __DATA_CONST.__const _AKClientBundleIDKey
|| __DATA_CONST.__const _AKClientInfoNameKey
|| __DATA_CONST.__const _AKContinuationDataHeaderKey
|| __DATA_CONST.__const _AKContinuationHeaderPrefixKey
|| __DATA_CONST.__const _AKContinuationRequestIdentifierKey
|| __DATA_CONST.__const _AKCustodianMachService
|| __DATA_CONST.__const _AKCustodianRecoveryTokenKey
|| __DATA_CONST.__const _AKDSIDHeaderKey
|| __DATA_CONST.__const _AKDeviceListChangedNotification
|| __DATA_CONST.__const _AKEmailVerificationCompletedNotificationKey
|| __DATA_CONST.__const _AKErrorMessageKey
|| __DATA_CONST.__const _AKErrorStatusCodeKey
|| __DATA_CONST.__const _AKExperimentalModeHeaderKey
|| __DATA_CONST.__const _AKExtensionItemContextKey
|| __DATA_CONST.__const _AKExtensionItemLocationSignInAlertKey
|| __DATA_CONST.__const _AKExtensionItemSecondFactorAlertKey
|| __DATA_CONST.__const _AKExtensionItemSecondFactorEntryAlertKey
|| __DATA_CONST.__const _AKExternalAuthTokenKey
|| __DATA_CONST.__const _AKExternalLocalAuthDataKey
|| __DATA_CONST.__const _AKFollowUpActionClear
|| __DATA_CONST.__const _AKFollowUpActionContinuation
|| __DATA_CONST.__const _AKFollowUpActionUrlKey
|| __DATA_CONST.__const _AKFollowUpAltDSIDKey
|| __DATA_CONST.__const _AKFollowUpAppleAccountRootKey
|| __DATA_CONST.__const _AKFollowUpContinuityIDMSLaunchUrlKey
|| __DATA_CONST.__const _AKFollowUpIDMSDataKey
|| __DATA_CONST.__const _AKFollowUpLegacyResetCFUIdentifier
|| __DATA_CONST.__const _AKFollowUpLocalURLKey
|| __DATA_CONST.__const _AKFollowUpPayloadIdentifierKey
|| __DATA_CONST.__const _AKFollowUpPushMessageIDKey
|| __DATA_CONST.__const _AKFollowUpPushPayloadKey
|| __DATA_CONST.__const _AKFollowUpSafariURLKey
|| __DATA_CONST.__const _AKFollowUpServerUIExtensionIdentifier
|| __DATA_CONST.__const _AKFollowUpSystemPreferenceActionKey
|| __DATA_CONST.__const _AKFollowUpTeardownSource
|| __DATA_CONST.__const _AKFollowUpURLKey
|| __DATA_CONST.__const _AKFollowUpVerifyPrimaryEmailIdentifier
|| __DATA_CONST.__const _AKHSA1ConversionSupportHeaderKey
|| __DATA_CONST.__const _AKHTTPHeaderClientInfo
|| __DATA_CONST.__const _AKHTTPMethodGet
|| __DATA_CONST.__const _AKHTTPMethodPost
|| __DATA_CONST.__const _AKHTTPMethodPut
|| __DATA_CONST.__const _AKHTTPResponseHeaderAnisetteTarget
|| __DATA_CONST.__const _AKHarvestedContinuationHeadersKey
|| __DATA_CONST.__const _AKICSCIntentHeader
|| __DATA_CONST.__const _AKICSCMachineIDHeader
|| __DATA_CONST.__const _AKICSCPasswordResetTokenHeader
|| __DATA_CONST.__const _AKICSCResponseActionKey
|| __DATA_CONST.__const _AKICSCResponseActionStartAccountRecovery
|| __DATA_CONST.__const _AKICSCResponseActionTryAgain
|| __DATA_CONST.__const _AKICSCResponseAppleIdKey
|| __DATA_CONST.__const _AKICSCResponseErrorCodeKey
|| __DATA_CONST.__const _AKICSCResponseErrorMessageKey
|| __DATA_CONST.__const _AKICSCResponseStatusFailure
|| __DATA_CONST.__const _AKICSCResponseStatusKey
|| __DATA_CONST.__const _AKICSCResponseStatusSuccess
|| __DATA_CONST.__const _AKIDMSAppleIDContinuationData
|| __DATA_CONST.__const _AKIconDataKey
|| __DATA_CONST.__const _AKIconNameKey
|| __DATA_CONST.__const _AKIconScaleKey
|| __DATA_CONST.__const _AKIconSizeKey
|| __DATA_CONST.__const _AKIdentityTokenKey
|| __DATA_CONST.__const _AKIdmsDataKey
|| __DATA_CONST.__const _AKInformationSecurityLevelKey
|| __DATA_CONST.__const _AKInformativeTextKey
|| __DATA_CONST.__const _AKInheritanceMachService
|| __DATA_CONST.__const _AKInternalBuildHeaderKey
|| __DATA_CONST.__const _AKInternalFeatureMasksHeaderKey
|| __DATA_CONST.__const _AKIsFirstPartyLoginKey
|| __DATA_CONST.__const _AKIsRapportLoginKey
|| __DATA_CONST.__const _AKIsWebLoginKey
|| __DATA_CONST.__const _AKLocalizedAppNameKey
|| __DATA_CONST.__const _AKPETHeaderKey
|| __DATA_CONST.__const _AKPakeDataKey
|| __DATA_CONST.__const _AKPasscodeIndicatorKey
|| __DATA_CONST.__const _AKPasscodeSetupURL
|| __DATA_CONST.__const _AKPasswordRequestKey
|| __DATA_CONST.__const _AKPhoneNumberAccountType
|| __DATA_CONST.__const _AKPrivateEmailAddressHeaderKey
|| __DATA_CONST.__const _AKPrivateEmailAddressKey
|| __DATA_CONST.__const _AKPrivateEmailErrorDomain
|| __DATA_CONST.__const _AKPrivateEmailIdentifierKey
|| __DATA_CONST.__const _AKPrivateEmailInitialVersion
|| __DATA_CONST.__const _AKPrivateEmailListVersionKey
|| __DATA_CONST.__const _AKPrivateEmailMachService
|| __DATA_CONST.__const _AKPropertyLegacyDSIDKey
|| __DATA_CONST.__const _AKPropertyPersonIDKey
|| __DATA_CONST.__const _AKPropertyRepairStateKey
|| __DATA_CONST.__const _AKProxiedAssociatedDomainsKey
|| __DATA_CONST.__const _AKProxiedClientAppIDKey
|| __DATA_CONST.__const _AKProxiedClientAppNameKey
|| __DATA_CONST.__const _AKProxiedClientBundleIDKey
|| __DATA_CONST.__const _AKProxiedClientServiceIDKey
|| __DATA_CONST.__const _AKProxiedClientTeamIDKey
|| __DATA_CONST.__const _AKProxiedDeviceClass
|| __DATA_CONST.__const _AKProxiedDeviceName
|| __DATA_CONST.__const _AKRecoveryIdentityTokenHeader
|| __DATA_CONST.__const _AKRecoveryKeyMandateHeader
|| __DATA_CONST.__const _AKRecoveryKeySupportHeaderKey
|| __DATA_CONST.__const _AKRecoveryMKValidationTokenHeader
|| __DATA_CONST.__const _AKRecoveryPasswordEquivTokenHeader
|| __DATA_CONST.__const _AKRecoveryURLResponseKey
|| __DATA_CONST.__const _AKRecoveryUsernameRequestParameter
|| __DATA_CONST.__const _AKRequestAuthTypeHeaderKey
|| __DATA_CONST.__const _AKRequestBodyFollowupItemsKey
|| __DATA_CONST.__const _AKRequestBodyFollowupKey
|| __DATA_CONST.__const _AKRequestBodyKey
|| __DATA_CONST.__const _AKRequestBodyPushTokenKey
|| __DATA_CONST.__const _AKRequestHeadersKey
|| __DATA_CONST.__const _AKRequestIdentifierKey
|| __DATA_CONST.__const _AKRequestURLKey
|| __DATA_CONST.__const _AKRequestedCloudPartitionHeaderKey
|| __DATA_CONST.__const _AKRequirePasswordKey
|| __DATA_CONST.__const _AKSQLErrorDomain
|| __DATA_CONST.__const _AKSecurityLevel
|| __DATA_CONST.__const _AKSecurityUpgradeContextAppleConnect
|| __DATA_CONST.__const _AKSecurityUpgradeContextApplePay
|| __DATA_CONST.__const _AKSecurityUpgradeContextGeneric
|| __DATA_CONST.__const _AKSecurityUpgradeContextKeychainSync
|| __DATA_CONST.__const _AKSecurityUpgradeContextMessages
|| __DATA_CONST.__const _AKSecurityUpgradeContextScreenTime
|| __DATA_CONST.__const _AKSecurityUpgradeContextTinker
|| __DATA_CONST.__const _AKServerResponseAcceptedTermsDeviceVersionsKey
|| __DATA_CONST.__const _AKServerResponseAcceptedTermsKey
|| __DATA_CONST.__const _AKServerResponseAcceptedTermsListKey
|| __DATA_CONST.__const _AKServerResponseAcceptedTermsPageAgreeKey
|| __DATA_CONST.__const _AKServerResponseAcceptedTermsPageDetailKey
|| __DATA_CONST.__const _AKServerResponseAcceptedTermsPagePrologueKey
|| __DATA_CONST.__const _AKServerResponseAcceptedTermsPageTitleKey
|| __DATA_CONST.__const _AKServerResponseAcceptedTermsVersionsKey
|| __DATA_CONST.__const _AKServerResponseAcceptedTermsiCloudKey
|| __DATA_CONST.__const _AKServerResponseAccountKey
|| __DATA_CONST.__const _AKServerResponseBirthdayKey
|| __DATA_CONST.__const _AKServerResponseCreateContextKey
|| __DATA_CONST.__const _AKServerResponseFirstNameKey
|| __DATA_CONST.__const _AKServerResponseHasErrorKey
|| __DATA_CONST.__const _AKServerResponseLastNameKey
|| __DATA_CONST.__const _AKServerResponseNameKey
|| __DATA_CONST.__const _AKServerResponsePasswordKey
|| __DATA_CONST.__const _AKServerResponsePersonKey
|| __DATA_CONST.__const _AKServerResponsePhoneNumberCountryCodeKey
|| __DATA_CONST.__const _AKServerResponsePhoneNumberIdentification
|| __DATA_CONST.__const _AKServerResponsePhoneNumberKey
|| __DATA_CONST.__const _AKServerResponsePhoneNumberNumberKey
|| __DATA_CONST.__const _AKServerResponsePhoneNumberPushMode
|| __DATA_CONST.__const _AKServerResponsePhoneNumberSecurityCodeKey
|| __DATA_CONST.__const _AKServerResponsePhoneNumberSecuritySMSCodeKey
|| __DATA_CONST.__const _AKServerResponsePhoneNumberVerificationKey
|| __DATA_CONST.__const _AKServerResponsePhoneNumberVerificationModeKey
|| __DATA_CONST.__const _AKServerResponsePhoneNumberVerificationModeSMSKey
|| __DATA_CONST.__const _AKServerResponsePhoneNumberWithDialCode
|| __DATA_CONST.__const _AKServerResponsePhoneObfuscatedNumber
|| __DATA_CONST.__const _AKServerResponseServiceErrorCodeKey
|| __DATA_CONST.__const _AKServerResponseServiceErrorMessageKey
|| __DATA_CONST.__const _AKServerResponseServiceErrorTitleKey
|| __DATA_CONST.__const _AKServerResponseServiceErrorsKey
|| __DATA_CONST.__const _AKServerResponseTokenKey
|| __DATA_CONST.__const _AKServerResponseTokenTypeKey
|| __DATA_CONST.__const _AKServerResponseUsernameKey
|| __DATA_CONST.__const _AKServiceNameFaceTime
|| __DATA_CONST.__const _AKServiceNameGameCenter
|| __DATA_CONST.__const _AKServiceNameiCloud
|| __DATA_CONST.__const _AKServiceNameiMessage
|| __DATA_CONST.__const _AKServiceNameiTunesStore
|| __DATA_CONST.__const _AKShouldAuthenticateExternallyKey
|| __DATA_CONST.__const _AKShouldForcePrivateEmailKey
|| __DATA_CONST.__const _AKShouldForceUIKey
|| __DATA_CONST.__const _AKShouldSkipBiometricsKey
|| __DATA_CONST.__const _AKShouldSkipUIKey
|| __DATA_CONST.__const _AKSpyglassAppURL
|| __DATA_CONST.__const _AKSpyglassURLUpgradeSecurityLevel
|| __DATA_CONST.__const _AKSubErrorStatusCodeKey
|| __DATA_CONST.__const _AKSystemGlyphEnvelopeShieldKey
|| __DATA_CONST.__const _AKSystemGlyphFaceIDKey
|| __DATA_CONST.__const _AKSystemGlyphKeyKey
|| __DATA_CONST.__const _AKSystemGlyphTouchIDKey
|| __DATA_CONST.__const _AKTestAccountHeaderKey
|| __DATA_CONST.__const _AKTransactionId
|| __DATA_CONST.__const _AKTrueValue
|| __DATA_CONST.__const _AKURLBagKeyAbsintheCert
|| __DATA_CONST.__const _AKURLBagKeyAbsintheSession
|| __DATA_CONST.__const _AKURLBagKeyAcs
|| __DATA_CONST.__const _AKURLBagKeyAppleIDAuthorizeHTMLResponse
|| __DATA_CONST.__const _AKURLBagKeyBasicAuthKey
|| __DATA_CONST.__const _AKURLBagKeyChangePassword
|| __DATA_CONST.__const _AKURLBagKeyCheckIn
|| __DATA_CONST.__const _AKURLBagKeyCircle
|| __DATA_CONST.__const _AKURLBagKeyConfigurationInfo
|| __DATA_CONST.__const _AKURLBagKeyCreateAppleID
|| __DATA_CONST.__const _AKURLBagKeyCreateChildAccount
|| __DATA_CONST.__const _AKURLBagKeyCustodianApproval
|| __DATA_CONST.__const _AKURLBagKeyCustodianDeletion
|| __DATA_CONST.__const _AKURLBagKeyCustodianDeviceUpgrade
|| __DATA_CONST.__const _AKURLBagKeyCustodianInitiation
|| __DATA_CONST.__const _AKURLBagKeyCustodianManageDataRecoveryService
|| __DATA_CONST.__const _AKURLBagKeyCustodianManageRecoveryKey
|| __DATA_CONST.__const _AKURLBagKeyCustodianPostCircle
|| __DATA_CONST.__const _AKURLBagKeyCustodianRecoveryCircle
|| __DATA_CONST.__const _AKURLBagKeyCustodianRecoveryFeedback
|| __DATA_CONST.__const _AKURLBagKeyCustodianRecoveryRequest
|| __DATA_CONST.__const _AKURLBagKeyCustodianRecoveryWrappingKey
|| __DATA_CONST.__const _AKURLBagKeyCustodianUpdateRecoveryKey
|| __DATA_CONST.__const _AKURLBagKeyDeleteAuthorizedApp
|| __DATA_CONST.__const _AKURLBagKeyDeviceList
|| __DATA_CONST.__const _AKURLBagKeyEndProvisioning
|| __DATA_CONST.__const _AKURLBagKeyEscapeHatch
|| __DATA_CONST.__const _AKURLBagKeyFetchAppInfo
|| __DATA_CONST.__const _AKURLBagKeyFetchAuthenticationMode
|| __DATA_CONST.__const _AKURLBagKeyFetchConfigData
|| __DATA_CONST.__const _AKURLBagKeyFetchFollowUps
|| __DATA_CONST.__const _AKURLBagKeyFetchPrimaryBundleID
|| __DATA_CONST.__const _AKURLBagKeyFetchUserInfo
|| __DATA_CONST.__const _AKURLBagKeyInheritanceFetchDataSelectionOptionsKey
|| __DATA_CONST.__const _AKURLBagKeyInheritanceRemoveBeneficiaryKey
|| __DATA_CONST.__const _AKURLBagKeyInheritanceSetupBeneficiaryAliasKey
|| __DATA_CONST.__const _AKURLBagKeyInheritanceSetupBeneficiaryKey
|| __DATA_CONST.__const _AKURLBagKeyInheritanceUpdateBeneficiaryKey
|| __DATA_CONST.__const _AKURLBagKeyNotificationAck
|| __DATA_CONST.__const _AKURLBagKeyPrivateEmailFetchList
|| __DATA_CONST.__const _AKURLBagKeyPrivateEmailManage
|| __DATA_CONST.__const _AKURLBagKeyPrivateEmailRegister
|| __DATA_CONST.__const _AKURLBagKeyPrivateEmailUseAddress
|| __DATA_CONST.__const _AKURLBagKeyRenewRecoveryToken
|| __DATA_CONST.__const _AKURLBagKeyRepair
|| __DATA_CONST.__const _AKURLBagKeyStartProvisioning
|| __DATA_CONST.__const _AKURLBagKeyStoreModernRecovery
|| __DATA_CONST.__const _AKURLBagKeySyncAnisette
|| __DATA_CONST.__const _AKURLBagKeyTokenUpgrade
|| __DATA_CONST.__const _AKURLBagKeyTrustedContactsDataSync
|| __DATA_CONST.__const _AKURLBagKeyTrustedDevices
|| __DATA_CONST.__const _AKURLBagKeyTrustedDevicesSummary
|| __DATA_CONST.__const _AKURLBagKeyUpgradeEligibilityCheck
|| __DATA_CONST.__const _AKURLBagKeyUpgradeUI
|| __DATA_CONST.__const _AKURLBagKeyUserVerification
|| __DATA_CONST.__const _AKURLBagKeyValidateCode
|| __DATA_CONST.__const _AKURLBagKeyValidateVettingToken
|| __DATA_CONST.__const _AKURLBagKeyiForgot
|| __DATA_CONST.__const _AKURLBagKeyiForgotContinuation
|| __DATA_CONST.__const _AKUpgradeContextKey
|| __DATA_CONST.__const _AKUpgradeFromPasswordKey
|| __DATA_CONST.__const _AKUserIdentifierKey
|| __DATA_CONST.__const _AKUserInfoChangedAltDSIDKey
|| __DATA_CONST.__const _AKUserInfoChangedAuthModeKey
|| __DATA_CONST.__const _AKUserInfoChangedNotification
|| __DATA_CONST.__const _AKUserInfoChangedRepairStateKey
|| __DATA_CONST.__const _AKUserInfoChangedSecurityLevelKey
|| __DATA_CONST.__const _AKUserInformationKey
|| __DATA_CONST.__const __AKAppleIDLoginCodeKey
|| __DATA_CONST.__const __AKAppleIDLoginCodeWasEnteredNotification
|| __DATA_CONST.__const __AKAuthenticationRequestUUIDHeaderFieldKey
|| __DATA_CONST.__const __AKBackingColorKey
|| __DATA_CONST.__const __AKBeneficiaryAccountName
|| __DATA_CONST.__const __AKBeneficiaryAltDSID
|| __DATA_CONST.__const __AKBeneficiaryIdentifierKey
|| __DATA_CONST.__const __AKBeneficiaryListVersionKey
|| __DATA_CONST.__const __AKBeneficiaryUUIDListKey
|| __DATA_CONST.__const __AKBeneficiaryUUIDsKey
|| __DATA_CONST.__const __AKBridgeUniqueDeviceIdentifierKey
|| __DATA_CONST.__const __AKClaimTokenDataKey
|| __DATA_CONST.__const __AKClaimTokenStringKey
|| __DATA_CONST.__const __AKColorKey
|| __DATA_CONST.__const __AKCoverGlassColorKey
|| __DATA_CONST.__const __AKCustodianAADataKey
|| __DATA_CONST.__const __AKCustodianAltDSIDKey
|| __DATA_CONST.__const __AKCustodianCLIMode
|| __DATA_CONST.__const __AKCustodianEmbargoEndFeedbackKey
|| __DATA_CONST.__const __AKCustodianEncryptedPRKC
|| __DATA_CONST.__const __AKCustodianEncryptedPRKCKey
|| __DATA_CONST.__const __AKCustodianErrorCodeKey
|| __DATA_CONST.__const __AKCustodianIdMSDataKey
|| __DATA_CONST.__const __AKCustodianLastDataSyncTimestampKey
|| __DATA_CONST.__const __AKCustodianListVersionKey
|| __DATA_CONST.__const __AKCustodianNotificationActionKey
|| __DATA_CONST.__const __AKCustodianOwnerAppleIDKey
|| __DATA_CONST.__const __AKCustodianOwnerCustodianAltDSID
|| __DATA_CONST.__const __AKCustodianOwnerCustodianAltDSIDKey
|| __DATA_CONST.__const __AKCustodianOwnerDeviceKey
|| __DATA_CONST.__const __AKCustodianPushTokenKey
|| __DATA_CONST.__const __AKCustodianRecoverySessionIDKey
|| __DATA_CONST.__const __AKCustodianRecoveryStepKey
|| __DATA_CONST.__const __AKCustodianRecoveryTokenKey
|| __DATA_CONST.__const __AKCustodianSetupTokenKey
|| __DATA_CONST.__const __AKCustodianTransactionIDKey
|| __DATA_CONST.__const __AKCustodianUUIDKey
|| __DATA_CONST.__const __AKCustodianUUIDListKey
|| __DATA_CONST.__const __AKCustodianUUIDsKey
|| __DATA_CONST.__const __AKCustodianWrappingKeyRKC
|| __DATA_CONST.__const __AKEnclosureColorKey
|| __DATA_CONST.__const __AKHTTPHeaderUrlSwitchKey
|| __DATA_CONST.__const __AKHousingColorKey
|| __DATA_CONST.__const __AKICSCIdentityTokenHeader
|| __DATA_CONST.__const __AKICSCPasswordEquivTokenHeaderKey
|| __DATA_CONST.__const __AKICSCURLResponseKey
|| __DATA_CONST.__const __AKLinkTypeKey
|| __DATA_CONST.__const __AKLocaleKey
|| __DATA_CONST.__const __AKMLBSerialNumberKey
|| __DATA_CONST.__const __AKModelNumberKey
|| __DATA_CONST.__const __AKProvisioningDeviceIdentifierKey
|| __DATA_CONST.__const __AKROMAddressKey
|| __DATA_CONST.__const __AKServerFriendlyDescriptionKey
|| __DATA_CONST.__const __AKUniqueDeviceIdentifierKey
|| __DATA_CONST.__const __AKUnknownValue
|| __DATA_CONST.__const __AKWrappedKeyDataKey
|| __DATA_CONST.__const __AKWrappedKeyStringKey
|| __DATA_CONST.__const __AKWrappingKeyDataKey
|| __DATA_CONST.__const __AKWrappingKeyStringKey
|| __DATA_CONST.__const _kAKAAAccountClassKey
|| __DATA_CONST.__const _kAKAAAccountPrimaryAccountKey
|| __DATA_CONST.__const _kAKAAAccountPrimaryEmailVerifiedKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAccountManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAccountRecoveryContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAnisetteData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAnisetteProvisioningClientInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAnisetteProvisioningController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAnisetteProvisioningDaemonInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAppleIDAuthenticationClientInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAppleIDAuthenticationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAppleIDAuthenticationContextManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAppleIDAuthenticationController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAppleIDAuthenticationDaemonInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAppleIDServerResourceLoadDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAppleIDSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKApplicationMetadataInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAttestationData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAuthorization
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAuthorizationClientImpl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAuthorizationClientInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAuthorizationController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAuthorizationCredential
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAuthorizationCredentialStateRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAuthorizationDaemonConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAuthorizationDaemonInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAuthorizationPresentationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAuthorizationRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAuthorizationRevokeUpgradeContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAuthorizationScopesUserSelection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKAuthorizationUserResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKCircleRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKCircleRequestPayload
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKConsentedApplication
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKCredentialRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKCredentialRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKDeveloperTeam
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKDeviceListRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKFollowUpTearDownContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKPasswordCredential
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKPasswordRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKRemoteDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKServerRequestConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AKUserInformation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__AKAnisetteProviderProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAccountManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAccountRecoveryContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAnisetteData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAnisetteProvisioningClientInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAnisetteProvisioningController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAnisetteProvisioningDaemonInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAppleIDAuthenticationClientInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAppleIDAuthenticationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAppleIDAuthenticationContextManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAppleIDAuthenticationController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAppleIDAuthenticationDaemonInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAppleIDServerResourceLoadDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAppleIDSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKApplicationMetadataInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAttestationData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAuthorization
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAuthorizationClientImpl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAuthorizationClientInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAuthorizationController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAuthorizationCredential
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAuthorizationCredentialStateRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAuthorizationDaemonConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAuthorizationDaemonInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAuthorizationPresentationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAuthorizationRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAuthorizationRevokeUpgradeContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAuthorizationScopesUserSelection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKAuthorizationUserResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKCircleRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKCircleRequestPayload
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKConsentedApplication
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKCredentialRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKCredentialRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKDeveloperTeam
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKDeviceListRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKFollowUpTearDownContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKPasswordCredential
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKPasswordRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKRemoteDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKServerRequestConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AKUserInformation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__AKAnisetteProviderProxy
|| __TEXT.__const _AKIconDefaultSize
|| __TEXT.__const _AKPrivateEmailInitialProtocolVersion
|| __TEXT.__const _AKPrivateEmailProtocolVersion2
|| __TEXT.__const _AKTiburonTimeoutIntervalForRequest
|| __TEXT.__const _AKTiburonTimeoutIntervalForResource
|| __TEXT.__const _AKTimeout
|| __TEXT.__const _AuthKitVersionNumber
|| __TEXT.__const _AuthKitVersionString
|| __TEXT.__text _AKErrorUnderlyingError
|| __TEXT.__text _AKIconURLForServiceType
|| __TEXT.__text _AKLoginCodeNotificationCreate
|| __TEXT.__text _AKLoginCodeNotificationOptionsCreate
|| __TEXT.__text _AKPrint
|| __TEXT.__text _AKPrintError
|| __TEXT.__text _AKPrintLine
|| __TEXT.__text _AKRead
|| __TEXT.__text _AKReadLine
|| __TEXT.__text _AKReadLineSecure
|| __TEXT.__text _AKSharedDevicePasscodePromptAlertMessageWithServiceType
|| __TEXT.__text _AKSignInStringFromServiceType
|| __TEXT.__text _AKStringFromServiceType
|| __TEXT.__text _AKUnregisterAllAppleIDs
|| __TEXT.__text _AKUserNotificationResponseAction
|| __TEXT.__text _AKWatchPasscodePromptAlertMessageWithServiceType
|| __TEXT.__text __AKLocalizedString
|| __TEXT.__text __AKLocalizedStringInTable
|| __TEXT.__text __AKLocalizedStringWithServiceType
|| __TEXT.__text __AKLogSystem
|| __TEXT.__text __AKLogSystemQuery
|| __TEXT.__text __AKLogUserInteraction
|| __TEXT.__text __AKMainBundle
|| __TEXT.__text __AKSignpostCreate
|| __TEXT.__text __AKSignpostGetNanoseconds
|| __TEXT.__text __AKSignpostLogSystem
|| __TEXT.__text __AKTrafficLogSubsystem
|| __TEXT.__text __AKTriageLogSystem
__ AAAFoundation: _OBJC_CLASS_$_AAFXPCSession
__ AAAFoundation: _OBJC_CLASS_$_AAFXPCSessionConfig
__ AAAFoundation: _OBJC_CLASS_$_AFUtilities
__ AAAFoundation: _OBJC_METACLASS_$_AFUtilities
__ Accounts: _ACAccountPropertyPersonaIdentifier
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACAccountTypeIdentifierAppleIDAuthentication
__ Accounts: _ACAccountTypeIdentifierGameCenter
__ Accounts: _ACAccountTypeIdentifierIDMS
__ Accounts: _ACAccountTypeIdentifierIdentityServices
__ Accounts: _ACAccountTypeIdentifieriTunesStore
__ Accounts: _ACContinuationTokenKey
__ Accounts: _ACHeartbeatTokenKey
__ Accounts: _ACPasswordResetTokenBackupKey
__ Accounts: _ACPasswordResetTokenKey
__ Accounts: _ACTokenKey
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppSupport: _CFPhoneNumberCreate
__ AppSupport: _CFPhoneNumberCreateString
__ AppSupport: _CPPhoneNumberCopyActiveCountryCode
__ AppSupport: _PNCopyBestGuessNormalizedNumberForCountry
__ AppleIDAuthSupport: _kAppleIDAuthSupportAlternateDSID
__ AppleIDAuthSupport: _kAppleIDAuthSupportCookie
__ AppleIDAuthSupport: _kAppleIDAuthSupportGsIdmsSessionKey
__ AppleIDAuthSupport: _kAppleIDAuthSupportGsIdmsToken
__ AppleIDAuthSupport: _kAppleIDAuthSupportUsername
__ CFNetwork: _NSURLAuthenticationMethodServerTrust
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLCache
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationGetResponseValue
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSGetSizeAndAlignment
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationKeyboardTypesKey
__ CoreFoundation: _kCFUserNotificationLocalizationURLKey
__ CoreFoundation: _kCFUserNotificationTextFieldTitlesKey
__ CoreFoundation: _kCFUserNotificationTextFieldValuesKey
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: __CTServerConnectionCopyEffectiveSimInfo
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: _kCTSettingMyEffectivePhoneNumber
__ DeviceIdentity: _DeviceIdentityIssueClientCertificateWithCompletion
__ DeviceIdentity: _kMAOptionsBAAKeychainAccessGroup
__ DeviceIdentity: _kMAOptionsBAAKeychainLabel
__ DeviceIdentity: _kMAOptionsBAAOIDDeviceOSInformation
__ DeviceIdentity: _kMAOptionsBAAOIDHardwareProperties
__ DeviceIdentity: _kMAOptionsBAAOIDSToInclude
__ DeviceIdentity: _kMAOptionsBAAOIDUCRTDeviceIdentifiers
__ DeviceIdentity: _kMAOptionsBAASCRTAttestation
__ DeviceIdentity: _kMAOptionsBAAValidity
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoveryOptionsErrorKey
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCondition
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtensionItem
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_CLASS_$_NSXPCListenerEndpoint
__ LocalAuthentication: _OBJC_CLASS_$_LAContext
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileKeyBag: _MKBGetDeviceLockState
__ MobileKeyBag: _MKBUserTypeDeviceMode
__ MobileKeyBag: _kMKBDeviceModeKey
__ MobileKeyBag: _kMKBDeviceModeMultiUser
__ NanoRegistry: _NRDevicePropertyColor
__ NanoRegistry: _NRDevicePropertyCurrentUserLocale
__ NanoRegistry: _NRDevicePropertyDeviceBackingColor
__ NanoRegistry: _NRDevicePropertyDeviceCoverGlassColor
__ NanoRegistry: _NRDevicePropertyDeviceHousingColor
__ NanoRegistry: _NRDevicePropertyEnclosureColor
__ NanoRegistry: _NRDevicePropertyIsAltAccount
__ NanoRegistry: _NRDevicePropertyProductType
__ NanoRegistry: _NRDevicePropertySystemBuildVersion
__ NanoRegistry: _NRDevicePropertySystemName
__ NanoRegistry: _NRDevicePropertySystemVersion
__ NanoRegistry: _NRDevicePropertyUDID
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ Security: _SOSCCThisDeviceIsInCircle
__ Security: _SecCertificateCopyData
__ Security: _SecKeyCreateSignature
__ Security: _SecPolicyCreateAppleGSService
__ Security: _SecPolicyCreateSSL
__ Security: _SecTrustEvaluate
__ Security: _SecTrustSetPolicies
__ Security: _kSecKeyAlgorithmECDSASignatureMessageX962SHA256
__ SoftLinking: __sl_dlopen
__ SpringBoardServices: _SBUserNotificationAllowInSetupKey
__ SpringBoardServices: _SBUserNotificationDismissOnLock
__ SpringBoardServices: _SBUserNotificationDontDismissOnUnlock
__ SpringBoardServices: _SBUserNotificationExtensionIdentifierKey
__ SpringBoardServices: _SBUserNotificationExtensionItemsKey
__ SpringBoardServices: _SBUserNotificationHideOnClonedDisplay
__ SpringBoardServices: _SBUserNotificationLockScreenAlertHeaderKey
__ SpringBoardServices: _SBUserNotificationLockScreenAlertMessageKey
__ SymptomDiagnosticReporter: _OBJC_CLASS_$_SDRDiagnosticReporter
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stdinp
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _container_system_path_for_identifier
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fgets
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fputc
__ libSystem.B.dylib: _fputs
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_msg_destroy
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _mig_dealloc_reply_port
__ libSystem.B.dylib: _mig_get_reply_port
__ libSystem.B.dylib: _mig_put_reply_port
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_ui
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _tcgetattr
__ libSystem.B.dylib: _tcsetattr
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _voucher_mach_msg_set
__ libcompression.dylib: _compression_encode_buffer
__ libnetwork.dylib: _nw_path_get_status
__ libnetwork.dylib: _nw_path_has_dns
__ libnetwork.dylib: _nw_path_monitor_cancel
__ libnetwork.dylib: _nw_path_monitor_create
__ libnetwork.dylib: _nw_path_monitor_set_queue
__ libnetwork.dylib: _nw_path_monitor_set_update_handler
__ libnetwork.dylib: _nw_path_monitor_start
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
AKPrivateEmailValidator : NSObject
  // class methods
  +[AKPrivateEmailValidator canPerformRequestWithAccount:error:]


AKAuthorizationRevokeUpgradeContext : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *transactionID
 @property  NSString *bundleID
 @property  NSString *teamID

  // class methods
  +[AKAuthorizationRevokeUpgradeContext supportsSecureCoding]

  // instance methods
  -[AKAuthorizationRevokeUpgradeContext teamID]
  -[AKAuthorizationRevokeUpgradeContext bundleID]
  -[AKAuthorizationRevokeUpgradeContext initWithCoder:]
  -[AKAuthorizationRevokeUpgradeContext transactionID]
  -[AKAuthorizationRevokeUpgradeContext .cxx_destruct]
  -[AKAuthorizationRevokeUpgradeContext setBundleID:]
  -[AKAuthorizationRevokeUpgradeContext copyWithZone:]
  -[AKAuthorizationRevokeUpgradeContext setTransactionID:]
  -[AKAuthorizationRevokeUpgradeContext encodeWithCoder:]
  -[AKAuthorizationRevokeUpgradeContext setTeamID:]


AKCarouselAlertClientConnection : NSObject
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSXPCConnection *xpcConnection

  // class methods
  +[AKCarouselAlertClientConnection sharedConnection]

  // instance methods
  -[AKCarouselAlertClientConnection setXpcConnection:]
  -[AKCarouselAlertClientConnection xpcConnection]
  -[AKCarouselAlertClientConnection setInternalQueue:]
  -[AKCarouselAlertClientConnection presentAlertWithDictionary:completion:]
  -[AKCarouselAlertClientConnection dismissAlert:]
  -[AKCarouselAlertClientConnection .cxx_destruct]
  -[AKCarouselAlertClientConnection init]
  -[AKCarouselAlertClientConnection connection]
  -[AKCarouselAlertClientConnection unsafe_invalidate]
  -[AKCarouselAlertClientConnection internalQueue]
  -[AKCarouselAlertClientConnection dealloc]


AKAuthorizationCredentialStateRequest : NSObject <NSSecureCoding>
 @property  NSString *teamID
 @property  NSString *clientID
 @property  NSString *altDSID
 @property  BOOL shouldIgnoreUserID
 @property  BOOL shouldIgnoreTeamID
 @property  NSString *userID

  // class methods
  +[AKAuthorizationCredentialStateRequest supportsSecureCoding]

  // instance methods
  -[AKAuthorizationCredentialStateRequest teamID]
  -[AKAuthorizationCredentialStateRequest setAltDSID:]
  -[AKAuthorizationCredentialStateRequest initWithCoder:]
  -[AKAuthorizationCredentialStateRequest userID]
  -[AKAuthorizationCredentialStateRequest shouldIgnoreUserID]
  -[AKAuthorizationCredentialStateRequest setShouldIgnoreUserID:]
  -[AKAuthorizationCredentialStateRequest shouldIgnoreTeamID]
  -[AKAuthorizationCredentialStateRequest setShouldIgnoreTeamID:]
  -[AKAuthorizationCredentialStateRequest altDSID]
  -[AKAuthorizationCredentialStateRequest setUserID:]
  -[AKAuthorizationCredentialStateRequest .cxx_destruct]
  -[AKAuthorizationCredentialStateRequest setClientID:]
  -[AKAuthorizationCredentialStateRequest encodeWithCoder:]
  -[AKAuthorizationCredentialStateRequest setTeamID:]
  -[AKAuthorizationCredentialStateRequest clientID]


AKLAContextValidator : NSObject
  // class methods
  +[AKLAContextValidator validateExternalizedContext:error:]


AKFLFollowUpController : NSObject
  // class methods
  +[AKFLFollowUpController sharedInstance]


AKCustodianDaemonInterface : NSObject
  // class methods
  +[AKCustodianDaemonInterface XPCInterface]


AKAuthorizationUpgradeContext : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *appName
 @property  NSString *appID
 @property  NSString *bundleID
 @property  NSString *serviceID
 @property  NSString *teamID
 @property  NSString *nonce
 @property  NSString *state

  // class methods
  +[AKAuthorizationUpgradeContext supportsSecureCoding]

  // instance methods
  -[AKAuthorizationUpgradeContext teamID]
  -[AKAuthorizationUpgradeContext setAppID:]
  -[AKAuthorizationUpgradeContext appName]
  -[AKAuthorizationUpgradeContext bundleID]
  -[AKAuthorizationUpgradeContext appID]
  -[AKAuthorizationUpgradeContext initWithCoder:]
  -[AKAuthorizationUpgradeContext .cxx_destruct]
  -[AKAuthorizationUpgradeContext setServiceID:]
  -[AKAuthorizationUpgradeContext serviceID]
  -[AKAuthorizationUpgradeContext setState:]
  -[AKAuthorizationUpgradeContext state]
  -[AKAuthorizationUpgradeContext setBundleID:]
  -[AKAuthorizationUpgradeContext setNonce:]
  -[AKAuthorizationUpgradeContext nonce]
  -[AKAuthorizationUpgradeContext copyWithZone:]
  -[AKAuthorizationUpgradeContext encodeWithCoder:]
  -[AKAuthorizationUpgradeContext setTeamID:]
  -[AKAuthorizationUpgradeContext setAppName:]


AKAdaptiveService : NSObject <NSXPCListenerDelegate>
 @property  @? interruptionHandler
 @property  @? invalidationHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKAdaptiveService listenerEndpoint]
  -[AKAdaptiveService _initWithInterface:object:]
  -[AKAdaptiveService initWithInterface:strongObject:]
  -[AKAdaptiveService initWithInterface:weakObject:]
  -[AKAdaptiveService .cxx_destruct]
  -[AKAdaptiveService setInvalidationHandler:]
  -[AKAdaptiveService resume]
  -[AKAdaptiveService dealloc]
  -[AKAdaptiveService listener:shouldAcceptNewConnection:]
  -[AKAdaptiveService interruptionHandler]
  -[AKAdaptiveService invalidationHandler]
  -[AKAdaptiveService setInterruptionHandler:]


_AKMessageForwarder : NSObject <AKAdaptiveServiceInterface>
  // instance methods
  -[_AKMessageForwarder initWithStrongReceiver:]
  -[_AKMessageForwarder initWithWeakReceiver:]
  -[_AKMessageForwarder initWithReceiver:strong:]
  -[_AKMessageForwarder .cxx_destruct]
  -[_AKMessageForwarder forwardingTargetForSelector:]
  -[_AKMessageForwarder activate]


AKAppleIDAuthenticationController : NSObject <AKAuthenticationController>
 @property  @? deallocHandler
 @property  <AKAppleIDAuthenticationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKAppleIDAuthenticationController sensitiveAuthenticationKeys]

  // instance methods
  -[AKAppleIDAuthenticationController initWithIdentifier:daemonXPCEndpoint:]
  -[AKAppleIDAuthenticationController _authenticationServiceConnection]
  -[AKAppleIDAuthenticationController getUserInformationForAltDSID:completion:]
  -[AKAppleIDAuthenticationController updateUserInformationForAltDSID:userInformation:completion:]
  -[AKAppleIDAuthenticationController fetchAuthModeWithContext:completion:]
  -[AKAppleIDAuthenticationController fetchDeviceMapWithContext:completion:]
  -[AKAppleIDAuthenticationController activeLoginCode:]
  -[AKAppleIDAuthenticationController warmUpVerificationSessionWithCompletion:]
  -[AKAppleIDAuthenticationController checkSecurityUpgradeEligibilityForContext:completion:]
  -[AKAppleIDAuthenticationController generateLoginCodeWithCompletion:]
  -[AKAppleIDAuthenticationController performCircleRequestWithContext:completion:]
  -[AKAppleIDAuthenticationController performCheckInForAccountWithAltDSID:completion:]
  -[AKAppleIDAuthenticationController reportSignOutForAppleID:service:completion:]
  -[AKAppleIDAuthenticationController reportSignOutForAllAppleIDsWithCompletion:]
  -[AKAppleIDAuthenticationController isDevicePasscodeProtected:]
  -[AKAppleIDAuthenticationController deleteAuthorizationDatabase:]
  -[AKAppleIDAuthenticationController updateStateWithExternalAuthenticationResponse:forContext:completion:]
  -[AKAppleIDAuthenticationController updateStateWithExternalAuthenticationResponse:forAppleID:completion:]
  -[AKAppleIDAuthenticationController getServerUILoadDelegateForAltDSID:completion:]
  -[AKAppleIDAuthenticationController synchronizeFollowUpItemsForContext:completion:]
  -[AKAppleIDAuthenticationController teardownFollowUpWithContext:completion:]
  -[AKAppleIDAuthenticationController renewRecoveryTokenWithContext:completion:]
  -[AKAppleIDAuthenticationController validateVettingToken:forAltDSID:completion:]
  -[AKAppleIDAuthenticationController deallocHandler]
  -[AKAppleIDAuthenticationController isCreateAppleIDAllowedWithCompletion:]
  -[AKAppleIDAuthenticationController fetchURLBagForAltDSID:completion:]
  -[AKAppleIDAuthenticationController forceURLBagUpdateForAltDSID:urlSwitchData:completion:]
  -[AKAppleIDAuthenticationController setDeallocHandler:]
  -[AKAppleIDAuthenticationController initWithIdentifier:]
  -[AKAppleIDAuthenticationController fetchDeviceListWithContext:error:]
  -[AKAppleIDAuthenticationController fetchAuthorizedAppListWithContext:error:]
  -[AKAppleIDAuthenticationController revokeAuthorizationForApplicationWithClientID:error:]
  -[AKAppleIDAuthenticationController validateLoginCode:forAppleID:completion:]
  -[AKAppleIDAuthenticationController synchronizeFollowUpItemsForContext:error:]
  -[AKAppleIDAuthenticationController accountNamesForAltDSID:]
  -[AKAppleIDAuthenticationController verifyMasterKey:context:completion:]
  -[AKAppleIDAuthenticationController persistMasterKeyVerifier:context:completion:]
  -[AKAppleIDAuthenticationController _urlBagFromCache:altDSID:withError:]
  -[AKAppleIDAuthenticationController .cxx_destruct]
  -[AKAppleIDAuthenticationController setConfigurationInfo:forIdentifier:forAltDSID:completion:]
  -[AKAppleIDAuthenticationController configurationInfoWithIdentifiers:forAltDSID:completion:]
  -[AKAppleIDAuthenticationController fetchUserInformationForAltDSID:completion:]
  -[AKAppleIDAuthenticationController setDelegate:]
  -[AKAppleIDAuthenticationController authenticateWithContext:completion:]
  -[AKAppleIDAuthenticationController init]
  -[AKAppleIDAuthenticationController initWithDaemonXPCEndpoint:]
  -[AKAppleIDAuthenticationController fetchDeviceListWithContext:completion:]
  -[AKAppleIDAuthenticationController delegate]
  -[AKAppleIDAuthenticationController getServerUILoadDelegateWithContext:completion:]
  -[AKAppleIDAuthenticationController dealloc]
  -[AKAppleIDAuthenticationController setAppleIDWithAltDSID:inUse:forService:]
  -[AKAppleIDAuthenticationController setAppleIDWithDSID:inUse:forService:]


AKCustodianSetupResult : NSObject <NSSecureCoding, NSCopying>
 @property  NSData *encryptedPRKC
 @property  NSString *ownerCustodianAltDSID

  // class methods
  +[AKCustodianSetupResult supportsSecureCoding]

  // instance methods
  -[AKCustodianSetupResult initWithCoder:]
  -[AKCustodianSetupResult encryptedPRKC]
  -[AKCustodianSetupResult setEncryptedPRKC:]
  -[AKCustodianSetupResult ownerCustodianAltDSID]
  -[AKCustodianSetupResult setOwnerCustodianAltDSID:]
  -[AKCustodianSetupResult .cxx_destruct]
  -[AKCustodianSetupResult copyWithZone:]
  -[AKCustodianSetupResult encodeWithCoder:]


AKURLDataTask : NSObject
 @property  NSURLRequest *request
 @property  unsigned long retryCount
 @property  NSURLSessionDataTask *underlyingTask
 @property  @? completionHandler
 @property  NSMutableData *receivedData
 @property  NSError *lastRetryError
 @property  BOOL canceledOrCompleted

  // instance methods
  -[AKURLDataTask setRequest:]
  -[AKURLDataTask setReceivedData:]
  -[AKURLDataTask receivedData]
  -[AKURLDataTask lastRetryError]
  -[AKURLDataTask setLastRetryError:]
  -[AKURLDataTask .cxx_destruct]
  -[AKURLDataTask request]
  -[AKURLDataTask setCompletionHandler:]
  -[AKURLDataTask setCanceledOrCompleted:]
  -[AKURLDataTask _completeWithError:]
  -[AKURLDataTask setRetryCount:]
  -[AKURLDataTask retryCount]
  -[AKURLDataTask canceledOrCompleted]
  -[AKURLDataTask completionHandler]
  -[AKURLDataTask underlyingTask]
  -[AKURLDataTask setUnderlyingTask:]


AKURLSession : NSObject <NSURLSessionDelegate, NSURLSessionDataDelegate>
 @property  BOOL _usesAppleIDContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKURLSession sharedCacheReliantAnisetteFreeSession]
  +[AKURLSession sharedCacheEnabledURLSession]
  +[AKURLSession removeAllCachedResponses]
  +[AKURLSession _createURLSessionUsesAppleIDContext:]
  +[AKURLSession _urlBagCache]
  +[AKURLSession sharedCacheEnabledAnisetteFreeSession]
  +[AKURLSession sharedAnisetteFreeURLSession]
  +[AKURLSession sharedURLSession]

  // instance methods
  -[AKURLSession _usesAppleIDContext]
  -[AKURLSession URLSession:didReceiveChallenge:completionHandler:]
  -[AKURLSession .cxx_destruct]
  -[AKURLSession set_usesAppleIDContext:]
  -[AKURLSession _URLSession]
  -[AKURLSession URLSession:didBecomeInvalidWithError:]
  -[AKURLSession beginAuthenticationDataTaskWithRequest:completionHandler:]
  -[AKURLSession _unsafe_completeTask:withError:]
  -[AKURLSession init]
  -[AKURLSession URLSession:dataTask:didReceiveData:]
  -[AKURLSession URLSession:task:didCompleteWithError:]
  -[AKURLSession isRecoverableError:]
  -[AKURLSession beginDataTaskWithRequest:completionHandler:]
  -[AKURLSession _unsafe_retryTaskIfPossible:]
  -[AKURLSession cancelDataTask:]
  -[AKURLSession defaultSessionObjectWithConfiguration:]


AKConsentedApplication : NSObject <NSSecureCoding>
 @property  NSArray *scopes
 @property  NSString *clientID
 @property  long long state
 @property  NSString *transferState
 @property  NSString *primaryClientID
 @property  NSString *origin

  // class methods
  +[AKConsentedApplication supportsSecureCoding]

  // instance methods
  -[AKConsentedApplication setScopes:]
  -[AKConsentedApplication scopes]
  -[AKConsentedApplication initWithCoder:]
  -[AKConsentedApplication origin]
  -[AKConsentedApplication setOrigin:]
  -[AKConsentedApplication initWithResponseInfo:]
  -[AKConsentedApplication primaryClientID]
  -[AKConsentedApplication setPrimaryClientID:]
  -[AKConsentedApplication .cxx_destruct]
  -[AKConsentedApplication setState:]
  -[AKConsentedApplication setTransferState:]
  -[AKConsentedApplication setClientID:]
  -[AKConsentedApplication state]
  -[AKConsentedApplication transferState]
  -[AKConsentedApplication encodeWithCoder:]
  -[AKConsentedApplication clientID]


AKInheritanceAccessKey : NSObject <NSSecureCoding, NSCopying>
 @property  NSUUID *beneficiaryID
 @property  NSData *wrappingKeyData
 @property  NSString *wrappingKeyString
 @property  NSData *wrappedKeyData
 @property  NSString *wrappedKeyString
 @property  NSData *claimTokenData
 @property  NSString *claimTokenString

  // class methods
  +[AKInheritanceAccessKey supportsSecureCoding]

  // instance methods
  -[AKInheritanceAccessKey initWithCoder:]
  -[AKInheritanceAccessKey claimTokenData]
  -[AKInheritanceAccessKey claimTokenString]
  -[AKInheritanceAccessKey wrappedKeyData]
  -[AKInheritanceAccessKey wrappedKeyString]
  -[AKInheritanceAccessKey wrappingKeyData]
  -[AKInheritanceAccessKey wrappingKeyString]
  -[AKInheritanceAccessKey initWithBeneficiairyIdentifier:]
  -[AKInheritanceAccessKey setWrappingKeyData:]
  -[AKInheritanceAccessKey setWrappingKeyString:]
  -[AKInheritanceAccessKey setWrappedKeyData:]
  -[AKInheritanceAccessKey setWrappedKeyString:]
  -[AKInheritanceAccessKey setClaimTokenData:]
  -[AKInheritanceAccessKey setClaimTokenString:]
  -[AKInheritanceAccessKey .cxx_destruct]
  -[AKInheritanceAccessKey beneficiaryID]
  -[AKInheritanceAccessKey isEqual:]
  -[AKInheritanceAccessKey copyWithZone:]
  -[AKInheritanceAccessKey encodeWithCoder:]


AKAuthorizationStateBroadcastHandlerInterface : NSObject
  // class methods
  +[AKAuthorizationStateBroadcastHandlerInterface XPCInterface]


AKAuthorizationTVServicePresenter : NSObject
  // instance methods
  -[AKAuthorizationTVServicePresenter _stringForType:]
  -[AKAuthorizationTVServicePresenter _filterDeprecatedType:]
  -[AKAuthorizationTVServicePresenter typeOfMessage:]
  -[AKAuthorizationTVServicePresenter buildDidTapNotificationMessage]
  -[AKAuthorizationTVServicePresenter buildFetchAppIconMessage]
  -[AKAuthorizationTVServicePresenter buildDidStartServerAuthorizationMessage]
  -[AKAuthorizationTVServicePresenter buildFetchAppIconReplyWithImageData:imageScale:]
  -[AKAuthorizationTVServicePresenter _typeFromString:]


AKAttestationData : NSObject <NSCopying, NSSecureCoding>
 @property  NSDictionary *attestationHeaders

  // class methods
  +[AKAttestationData supportsSecureCoding]

  // instance methods
  -[AKAttestationData initWithCoder:]
  -[AKAttestationData attestationHeaders]
  -[AKAttestationData setAttestationHeaders:]
  -[AKAttestationData .cxx_destruct]
  -[AKAttestationData initWithDictionary:]
  -[AKAttestationData copyWithZone:]
  -[AKAttestationData encodeWithCoder:]


AKInheritanceController : NSObject <AAFXPCSessionDelegate, AKInheritanceInterface>
 @property  AAFXPCSession *remoteService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKInheritanceController updateBeneficiaryWithInheritanceContext:completion:]
  -[AKInheritanceController .cxx_destruct]
  -[AKInheritanceController setupBeneficiaryWithInheritanceContext:completion:]
  -[AKInheritanceController init]
  -[AKInheritanceController initWithXPCSession:]
  -[AKInheritanceController remoteService]
  -[AKInheritanceController removeBeneficiaryWithInheritanceContext:completion:]
  -[AKInheritanceController setRemoteService:]
  -[AKInheritanceController _setupBeneficiaryAliasWithInheritanceContext:completion:]
  -[AKInheritanceController fetchManifestOptionsWithInheritanceContext:completion:]


AKAppleIDAuthenticationContextManager : NSObject <AKAppleIDAuthenticationClientProtocol>
 @property  <AKAppleIDAuthenticationDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKAppleIDAuthenticationContextManager unregisterContext:]
  -[AKAppleIDAuthenticationContextManager eraseAnisetteForContext:withCompletion:]
  -[AKAppleIDAuthenticationContextManager presentServerProvidedUIForContext:withConfiguration:completion:]
  -[AKAppleIDAuthenticationContextManager presentKeepUsingUIForContext:appleID:completion:]
  -[AKAppleIDAuthenticationContextManager registerContext:]
  -[AKAppleIDAuthenticationContextManager .cxx_destruct]
  -[AKAppleIDAuthenticationContextManager dismissNativeRecoveryUIForContext:completion:]
  -[AKAppleIDAuthenticationContextManager _clientSideContextForServerContext:]
  -[AKAppleIDAuthenticationContextManager setDelegate:]
  -[AKAppleIDAuthenticationContextManager provisionAnisetteForContext:withCompletion:]
  -[AKAppleIDAuthenticationContextManager dismissBasicLoginUIForContext:completion:]
  -[AKAppleIDAuthenticationContextManager dismissSecondFactorUIForContext:completion:]
  -[AKAppleIDAuthenticationContextManager shouldContinueWithAuthenticationResults:error:forContextID:completion:]
  -[AKAppleIDAuthenticationContextManager legacyAnisetteDataForContext:DSID:withCompletion:]
  -[AKAppleIDAuthenticationContextManager presentSecondFactorAlertForContext:withError:title:message:completion:]
  -[AKAppleIDAuthenticationContextManager initWithAuthenticationController:]
  -[AKAppleIDAuthenticationContextManager dismissServerProvidedUIForContext:completion:]
  -[AKAppleIDAuthenticationContextManager presentBasicLoginUIForContext:completion:]
  -[AKAppleIDAuthenticationContextManager presentNativeRecoveryUIForContext:recoveryContext:completion:]
  -[AKAppleIDAuthenticationContextManager presentLoginAlertForContext:withError:title:message:completion:]
  -[AKAppleIDAuthenticationContextManager syncAnisetteForContext:withSIMData:completion:]
  -[AKAppleIDAuthenticationContextManager delegate]
  -[AKAppleIDAuthenticationContextManager launchOutOfProcessAuthentication:surrogateID:withErrorHandler:]
  -[AKAppleIDAuthenticationContextManager fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
  -[AKAppleIDAuthenticationContextManager presentSecondFactorUIForContext:completion:]
  -[AKAppleIDAuthenticationContextManager dismissKeepUsingUIForContext:withCompletion:]
  -[AKAppleIDAuthenticationContextManager presentBiometricOrPasscodeValidationForContext:completion:]


AKDeviceListDeltaMessagePayload : NSObject
 @property  NSString *altDSID
 @property  unsigned long operation
 @property  NSString *machineID
 @property  NSArray *machineIDs
 @property  NSString *serialNumber
 @property  NSDate *timestamp

  // instance methods
  -[AKDeviceListDeltaMessagePayload operation]
  -[AKDeviceListDeltaMessagePayload serialNumber]
  -[AKDeviceListDeltaMessagePayload machineIDs]
  -[AKDeviceListDeltaMessagePayload altDSID]
  -[AKDeviceListDeltaMessagePayload .cxx_destruct]
  -[AKDeviceListDeltaMessagePayload _convertOperationToEnum:]
  -[AKDeviceListDeltaMessagePayload initWithResponseBody:]
  -[AKDeviceListDeltaMessagePayload machineID]
  -[AKDeviceListDeltaMessagePayload timestamp]


AKCustodianContext : NSObject <AKAuthenticationContext, NSSecureCoding, NSCopying>
 @property  NSString *_identityToken
 @property  NSString *_heartbeatToken
 @property  NSString *ownerAppleID
 @property  NSString *ownerCustodianAltDSID
 @property  NSUUID *custodianUUID
 @property  NSData *wrappingKeyRKC
 @property  NSString *custodianSetupToken
 @property  NSString *pushToken
 @property  NSString *recoverySessionID
 @property  NSString *custodianRecoveryToken
 @property  NSData *aaData
 @property  NSData *idmsData
 @property  NSData *encryptedPRKC
 @property  NSString *recoveryStep
 @property  BOOL ownerDevice
 @property  long long clientErrorCode
 @property  long long notificationAction
 @property  NSString *transactionID
 @property  BOOL _cliMode
 @property  NSArray *custodianUUIDs
 @property  NSArray *beneficiaryUUIDs
 @property  NSDate *lastDataSyncTimestamp
 @property  NSString *altDSID
 @property  long long serviceType
 @property  NSString *_proxiedAppName
 @property  NSDictionary *appProvidedData
 @property  NSString *appProvidedContext
 @property  AKDevice *proxiedDevice
 @property  AKDevice *companionDevice
 @property  long long authenticationMode
 @property  BOOL cliMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKCustodianContext supportsSecureCoding]

  // instance methods
  -[AKCustodianContext setCustodianRecoveryToken:]
  -[AKCustodianContext setAltDSID:]
  -[AKCustodianContext aaData]
  -[AKCustodianContext setProxiedDevice:]
  -[AKCustodianContext initWithCoder:]
  -[AKCustodianContext altDSID]
  -[AKCustodianContext setServiceType:]
  -[AKCustodianContext encryptedPRKC]
  -[AKCustodianContext setEncryptedPRKC:]
  -[AKCustodianContext ownerCustodianAltDSID]
  -[AKCustodianContext setOwnerCustodianAltDSID:]
  -[AKCustodianContext transactionID]
  -[AKCustodianContext appProvidedData]
  -[AKCustodianContext set_cliMode:]
  -[AKCustodianContext .cxx_destruct]
  -[AKCustodianContext _proxiedAppName]
  -[AKCustodianContext companionDevice]
  -[AKCustodianContext _setIdentityToken:]
  -[AKCustodianContext _heartbeatToken]
  -[AKCustodianContext _setHeartbeatToken:]
  -[AKCustodianContext ownerAppleID]
  -[AKCustodianContext setOwnerAppleID:]
  -[AKCustodianContext custodianUUID]
  -[AKCustodianContext setCustodianUUID:]
  -[AKCustodianContext wrappingKeyRKC]
  -[AKCustodianContext setWrappingKeyRKC:]
  -[AKCustodianContext custodianSetupToken]
  -[AKCustodianContext setCustodianSetupToken:]
  -[AKCustodianContext recoverySessionID]
  -[AKCustodianContext setRecoverySessionID:]
  -[AKCustodianContext setAaData:]
  -[AKCustodianContext setIdmsData:]
  -[AKCustodianContext recoveryStep]
  -[AKCustodianContext setRecoveryStep:]
  -[AKCustodianContext ownerDevice]
  -[AKCustodianContext setOwnerDevice:]
  -[AKCustodianContext clientErrorCode]
  -[AKCustodianContext setClientErrorCode:]
  -[AKCustodianContext notificationAction]
  -[AKCustodianContext setNotificationAction:]
  -[AKCustodianContext custodianUUIDs]
  -[AKCustodianContext setCustodianUUIDs:]
  -[AKCustodianContext beneficiaryUUIDs]
  -[AKCustodianContext setBeneficiaryUUIDs:]
  -[AKCustodianContext lastDataSyncTimestamp]
  -[AKCustodianContext setLastDataSyncTimestamp:]
  -[AKCustodianContext setAppProvidedData:]
  -[AKCustodianContext pushToken]
  -[AKCustodianContext setCompanionDevice:]
  -[AKCustodianContext _setProxiedAppName:]
  -[AKCustodianContext appProvidedContext]
  -[AKCustodianContext setPushToken:]
  -[AKCustodianContext custodianRecoveryToken]
  -[AKCustodianContext _identityToken]
  -[AKCustodianContext _cliMode]
  -[AKCustodianContext idmsData]
  -[AKCustodianContext setAppProvidedContext:]
  -[AKCustodianContext setAuthenticationMode:]
  -[AKCustodianContext proxiedDevice]
  -[AKCustodianContext copyWithZone:]
  -[AKCustodianContext setTransactionID:]
  -[AKCustodianContext authenticationMode]
  -[AKCustodianContext encodeWithCoder:]
  -[AKCustodianContext serviceType]


AKAuthorizationUserResponse : NSObject <NSSecureCoding>
 @property  <AKCredentialRequestProtocol> *selectedRequest
 @property  AKAuthorizationScopesUserSelection *userSelection
 @property  NSNumber *loginChoice
 @property  NSString *rawAccountPassword

  // class methods
  +[AKAuthorizationUserResponse supportsSecureCoding]

  // instance methods
  -[AKAuthorizationUserResponse initWithCoder:]
  -[AKAuthorizationUserResponse .cxx_destruct]
  -[AKAuthorizationUserResponse userSelection]
  -[AKAuthorizationUserResponse setSelectedRequest:]
  -[AKAuthorizationUserResponse setUserSelection:]
  -[AKAuthorizationUserResponse loginChoice]
  -[AKAuthorizationUserResponse setLoginChoice:]
  -[AKAuthorizationUserResponse rawAccountPassword]
  -[AKAuthorizationUserResponse setRawAccountPassword:]
  -[AKAuthorizationUserResponse selectedRequest]
  -[AKAuthorizationUserResponse encodeWithCoder:]


AKNativeAccountRecoveryController : NSObject <CDPAuthProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKNativeAccountRecoveryController postBodyForiCSCServerUIResponseWithContext:recoveryError:]
  +[AKNativeAccountRecoveryController requestForRecoveryCompletionWithContext:recoveredInfo:recoveryError:]
  +[AKNativeAccountRecoveryController shouldSendServerResponseForRecoveredInfo:withRecoveryError:]

  // instance methods
  -[AKNativeAccountRecoveryController .cxx_destruct]
  -[AKNativeAccountRecoveryController dismissNativeRecoveryUIWithCompletion:]
  -[AKNativeAccountRecoveryController _mapICSCRecoveryResultsToAuthKit:]
  -[AKNativeAccountRecoveryController cdpContext:performSilentRecoveryTokenRenewal:]
  -[AKNativeAccountRecoveryController initWithContext:uiProvider:]
  -[AKNativeAccountRecoveryController presentNativeRecoveryUIWithCompletion:]
  -[AKNativeAccountRecoveryController cdpContext:verifyMasterKey:completion:]


AKAttestationSigner : NSObject
  // class methods
  +[AKAttestationSigner sharedSigner]

  // instance methods
  -[AKAttestationSigner .cxx_destruct]
  -[AKAttestationSigner _baaSignatureForData:completion:]
  -[AKAttestationSigner _signatureForData:withReferenceKey:error:]
  -[AKAttestationSigner _attestationWithCertificates:error:]
  -[AKAttestationSigner _baaSignaturesForData:completion:]
  -[AKAttestationSigner signatureForData:options:completion:]
  -[AKAttestationSigner signaturesForData:options:completion:]
  -[AKAttestationSigner init]


AKFollowUpTearDownContext : NSObject <NSSecureCoding>
 @property  NSString *itemIdentifier
 @property  NSString *akAction
 @property  NSString *altDSID
 @property  NSString *txnid
 @property  NSString *idmsData
 @property  BOOL isContinuityPush

  // class methods
  +[AKFollowUpTearDownContext supportsSecureCoding]

  // instance methods
  -[AKFollowUpTearDownContext setAltDSID:]
  -[AKFollowUpTearDownContext setItemIdentifier:]
  -[AKFollowUpTearDownContext itemIdentifier]
  -[AKFollowUpTearDownContext initWithCoder:]
  -[AKFollowUpTearDownContext altDSID]
  -[AKFollowUpTearDownContext txnid]
  -[AKFollowUpTearDownContext .cxx_destruct]
  -[AKFollowUpTearDownContext setIdmsData:]
  -[AKFollowUpTearDownContext akAction]
  -[AKFollowUpTearDownContext setTxnid:]
  -[AKFollowUpTearDownContext setAkAction:]
  -[AKFollowUpTearDownContext isContinuityPush]
  -[AKFollowUpTearDownContext setIsContinuityPush:]
  -[AKFollowUpTearDownContext idmsData]
  -[AKFollowUpTearDownContext encodeWithCoder:]


AKAuthorizationPresenterHostInterface : NSObject
  // class methods
  +[AKAuthorizationPresenterHostInterface XPCInterface]


AKCarrierBundlePhoneCertificate : NSObject
 @property  NSString *phoneCertificate
 @property  long long slotID

  // instance methods
  -[AKCarrierBundlePhoneCertificate phoneCertificate]
  -[AKCarrierBundlePhoneCertificate .cxx_destruct]
  -[AKCarrierBundlePhoneCertificate slotID]
  -[AKCarrierBundlePhoneCertificate setSlotID:]
  -[AKCarrierBundlePhoneCertificate setPhoneCertificate:]


AKCarrierBundleUtilities : NSObject
  // class methods
  +[AKCarrierBundleUtilities sharedInstance]

  // instance methods
  -[AKCarrierBundleUtilities _formattedValueForPhoneNumber:countryCode:]
  -[AKCarrierBundleUtilities .cxx_destruct]
  -[AKCarrierBundleUtilities init]
  -[AKCarrierBundleUtilities phoneBundleInfoWithAdditionalInfo:error:]


AKFollowUpProviderFactory : NSObject
  // class methods
  +[AKFollowUpProviderFactory sharedAuthKitFollowupProvider]


AKCustodianDaemonConnection : NSObject
 @property  NSXPCListenerEndpoint *listenerEndpoint

  // instance methods
  -[AKCustodianDaemonConnection listenerEndpoint]
  -[AKCustodianDaemonConnection _connection]
  -[AKCustodianDaemonConnection initWithListenerEndpoint:]
  -[AKCustodianDaemonConnection _connectionInvalidationHandler]
  -[AKCustodianDaemonConnection synchronousRemoteObjectProxyWithErrorHandler:]
  -[AKCustodianDaemonConnection .cxx_destruct]
  -[AKCustodianDaemonConnection remoteObjectProxyWithErrorHandler:]
  -[AKCustodianDaemonConnection init]
  -[AKCustodianDaemonConnection _connectionInterruptionHandler]
  -[AKCustodianDaemonConnection dealloc]


AKCredentialRequestContext : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL _shouldForceUI
 @property  BOOL _shouldSkipBiometrics
 @property  BOOL _shouldSkipAuthorizationUI
 @property  BOOL _shouldForcePrivateEmail
 @property  BOOL _requirePassword
 @property  BOOL _isWebLogin
 @property  BOOL _isFirstPartyLogin
 @property  BOOL _isRapportLogin
 @property  BOOL _isEligibleForUpgradeFromPassword
 @property  NSString *_callerBundleID
 @property  AKAuthorizationUpgradeContext *_upgradeContext
 @property  NSString *_proxiedClientAppName
 @property  NSString *_proxiedClientBundleID
 @property  NSString *_proxiedClientServiceID
 @property  NSString *_proxiedClientTeamID
 @property  NSString *_proxiedClientAppID
 @property  NSArray *_proxiedAssociatedDomains
 @property  NSString *_proxiedDeviceName
 @property  NSString *_proxiedDeviceClass
 @property  BOOL _clientShouldAuthenticateExternally
 @property  NSString *_iconName
 @property  NSData *_iconData
 @property  NSNumber *_iconScale
 @property  NSValue *_iconSize
 @property  NSString *_informativeText
 @property  double _authSessionTimeoutInterval
 @property  NSString *_externalAuthToken
 @property  NSData *_externalLocalAuthData
 @property  NSString *_continuationRequestIdentifier
 @property  NSUUID *requestIdentifier
 @property  AKAuthorizationRequest *authorizationRequest
 @property  AKPasswordRequest *passwordRequest
 @property  NSArray *credentialRequests

  // class methods
  +[AKCredentialRequestContext supportsSecureCoding]

  // instance methods
  -[AKCredentialRequestContext requestIdentifier]
  -[AKCredentialRequestContext initWithCoder:]
  -[AKCredentialRequestContext .cxx_destruct]
  -[AKCredentialRequestContext _informativeText]
  -[AKCredentialRequestContext initWithUpgradeContext:]
  -[AKCredentialRequestContext setCredentialRequests:]
  -[AKCredentialRequestContext _isEligibleForUpgradeFromPassword]
  -[AKCredentialRequestContext _proxiedClientAppName]
  -[AKCredentialRequestContext _proxiedClientBundleID]
  -[AKCredentialRequestContext _proxiedClientServiceID]
  -[AKCredentialRequestContext _proxiedClientTeamID]
  -[AKCredentialRequestContext _proxiedClientAppID]
  -[AKCredentialRequestContext _requirePassword]
  -[AKCredentialRequestContext set_requirePassword:]
  -[AKCredentialRequestContext _shouldForceUI]
  -[AKCredentialRequestContext set_shouldForceUI:]
  -[AKCredentialRequestContext _shouldSkipBiometrics]
  -[AKCredentialRequestContext set_shouldSkipBiometrics:]
  -[AKCredentialRequestContext _shouldSkipAuthorizationUI]
  -[AKCredentialRequestContext set_shouldSkipAuthorizationUI:]
  -[AKCredentialRequestContext set_informativeText:]
  -[AKCredentialRequestContext set_iconName:]
  -[AKCredentialRequestContext set_iconData:]
  -[AKCredentialRequestContext set_iconScale:]
  -[AKCredentialRequestContext set_iconSize:]
  -[AKCredentialRequestContext _shouldForcePrivateEmail]
  -[AKCredentialRequestContext set_shouldForcePrivateEmail:]
  -[AKCredentialRequestContext set_proxiedClientAppName:]
  -[AKCredentialRequestContext set_proxiedClientBundleID:]
  -[AKCredentialRequestContext set_proxiedClientAppID:]
  -[AKCredentialRequestContext set_proxiedClientTeamID:]
  -[AKCredentialRequestContext _proxiedAssociatedDomains]
  -[AKCredentialRequestContext set_proxiedAssociatedDomains:]
  -[AKCredentialRequestContext _isWebLogin]
  -[AKCredentialRequestContext set_isWebLogin:]
  -[AKCredentialRequestContext _isFirstPartyLogin]
  -[AKCredentialRequestContext set_isFirstPartyLogin:]
  -[AKCredentialRequestContext _isRapportLogin]
  -[AKCredentialRequestContext set_isRapportLogin:]
  -[AKCredentialRequestContext _callerBundleID]
  -[AKCredentialRequestContext set_callerBundleID:]
  -[AKCredentialRequestContext _proxiedDeviceName]
  -[AKCredentialRequestContext set_proxiedDeviceName:]
  -[AKCredentialRequestContext _proxiedDeviceClass]
  -[AKCredentialRequestContext set_proxiedDeviceClass:]
  -[AKCredentialRequestContext set_proxiedClientServiceID:]
  -[AKCredentialRequestContext _upgradeContext]
  -[AKCredentialRequestContext _clientShouldAuthenticateExternally]
  -[AKCredentialRequestContext set_clientShouldAuthenticateExternally:]
  -[AKCredentialRequestContext _authSessionTimeoutInterval]
  -[AKCredentialRequestContext set_authSessionTimeoutInterval:]
  -[AKCredentialRequestContext _externalAuthToken]
  -[AKCredentialRequestContext passwordRequest]
  -[AKCredentialRequestContext setPasswordRequest:]
  -[AKCredentialRequestContext init]
  -[AKCredentialRequestContext _iconSize]
  -[AKCredentialRequestContext _iconScale]
  -[AKCredentialRequestContext _iconData]
  -[AKCredentialRequestContext _iconName]
  -[AKCredentialRequestContext set_continuationRequestIdentifier:]
  -[AKCredentialRequestContext set_externalLocalAuthData:]
  -[AKCredentialRequestContext _externalLocalAuthData]
  -[AKCredentialRequestContext set_externalAuthToken:]
  -[AKCredentialRequestContext initWithProxiedClientContext:]
  -[AKCredentialRequestContext setAuthorizationRequest:]
  -[AKCredentialRequestContext _continuationRequestIdentifier]
  -[AKCredentialRequestContext copyWithZone:]
  -[AKCredentialRequestContext authorizationRequest]
  -[AKCredentialRequestContext encodeWithCoder:]
  -[AKCredentialRequestContext credentialRequests]


AKAppleIDAuthenticationClientInterface : NSObject
  // class methods
  +[AKAppleIDAuthenticationClientInterface XPCInterface]


AKAuthorizationScopesUserSelection : NSObject <NSSecureCoding>
 @property  AKUserInformation *userInformation
 @property  BOOL makePrivateEmail

  // class methods
  +[AKAuthorizationScopesUserSelection supportsSecureCoding]

  // instance methods
  -[AKAuthorizationScopesUserSelection initWithCoder:]
  -[AKAuthorizationScopesUserSelection .cxx_destruct]
  -[AKAuthorizationScopesUserSelection setUserInformation:]
  -[AKAuthorizationScopesUserSelection makePrivateEmail]
  -[AKAuthorizationScopesUserSelection setMakePrivateEmail:]
  -[AKAuthorizationScopesUserSelection userInformation]
  -[AKAuthorizationScopesUserSelection encodeWithCoder:]


AKConfiguration : NSObject
 @property  long long shouldDisablePETs
 @property  long long shouldFakeAuthSuccess
 @property  long long shouldDisablePiggybacking
 @property  long long shouldSuppressHSA2Suggestions
 @property  long long shouldAddHSA2CreateHeader
 @property  long long shouldAllowPhoneNumberAccounts
 @property  long long shouldAllowExperimentalMode
 @property  long long shouldHideInternalBuildHeader
 @property  long long shouldAllowDemoMode
 @property  long long shouldAllowTestApplication
 @property  long long shouldEnableTestAccountMode
 @property  long long shouldSuppressModalSheetsInMacBuddy
 @property  long long shouldAlwaysShowWelcome
 @property  long long shouldAutocycleAppsInTiburon
 @property  long long shouldAutocycleAppsInWebTakeover
 @property  unsigned long lastKnownIDMSEnvironment
 @property  long long requestedCloudPartition
 @property  long long shouldBypassCustodianDeviceCheck
 @property  long long shouldEnableBeneficiaryLiveOn
 @property  unsigned long internalFeaturesMaskValue

  // class methods
  +[AKConfiguration sharedConfiguration]

  // instance methods
  -[AKConfiguration shouldSuppressHSA2Suggestions]
  -[AKConfiguration setRequestedCloudPartition:]
  -[AKConfiguration shouldAutocycleAppsInTiburon]
  -[AKConfiguration setShouldDisablePETs:]
  -[AKConfiguration shouldFakeAuthSuccess]
  -[AKConfiguration setShouldAutocycleAppsInTiburon:]
  -[AKConfiguration shouldEnableBeneficiaryLiveOn]
  -[AKConfiguration .cxx_destruct]
  -[AKConfiguration setShouldBypassCustodianDeviceCheck:]
  -[AKConfiguration setShouldAlwaysShowWelcome:]
  -[AKConfiguration requestedCloudPartition]
  -[AKConfiguration setConfigurationValue:forKey:]
  -[AKConfiguration setShouldSuppressModalSheetsInMacBuddy:]
  -[AKConfiguration shouldAllowPhoneNumberAccounts]
  -[AKConfiguration shouldDisablePETs]
  -[AKConfiguration shouldEnableTestAccountMode]
  -[AKConfiguration setShouldAddHSA2CreateHeader:]
  -[AKConfiguration shouldAlwaysShowWelcome]
  -[AKConfiguration init]
  -[AKConfiguration setShouldAutocycleAppsInWebTakeover:]
  -[AKConfiguration setShouldAllowExperimentalMode:]
  -[AKConfiguration setShouldFakeAuthSuccess:]
  -[AKConfiguration setShouldEnableTestAccountMode:]
  -[AKConfiguration setShouldDisablePiggybacking:]
  -[AKConfiguration setShouldAllowDemoMode:]
  -[AKConfiguration _validCloudPartition:]
  -[AKConfiguration shouldAllowDemoMode]
  -[AKConfiguration shouldAddHSA2CreateHeader]
  -[AKConfiguration internalFeaturesMaskValue]
  -[AKConfiguration setLastKnownIDMSEnvironment:]
  -[AKConfiguration shouldAutocycleAppsInWebTakeover]
  -[AKConfiguration setShouldAllowTestApplication:]
  -[AKConfiguration setShouldSuppressHSA2Suggestions:]
  -[AKConfiguration setShouldAllowPhoneNumberAccounts:]
  -[AKConfiguration shouldSuppressModalSheetsInMacBuddy]
  -[AKConfiguration setShouldEnableBeneficiaryLiveOn:]
  -[AKConfiguration dealloc]
  -[AKConfiguration configurationValueForKey:]
  -[AKConfiguration shouldHideInternalBuildHeader]
  -[AKConfiguration shouldAllowExperimentalMode]
  -[AKConfiguration shouldDisablePiggybacking]
  -[AKConfiguration lastKnownIDMSEnvironment]
  -[AKConfiguration setShouldHideInternalBuildHeader:]
  -[AKConfiguration shouldBypassCustodianDeviceCheck]
  -[AKConfiguration shouldAllowTestApplication]


AKAppleIDSigningController : NSObject
 @property  AKAppleIDAuthenticationController *authenticationController
 @property  BOOL shouldSendAbsintheHeader
 @property  BOOL isProxy
 @property  NSString *initialURLKey

  // instance methods
  -[AKAppleIDSigningController _connection]
  -[AKAppleIDSigningController authenticationController]
  -[AKAppleIDSigningController .cxx_destruct]
  -[AKAppleIDSigningController signaturesForData:options:completion:]
  -[AKAppleIDSigningController setIsProxy:]
  -[AKAppleIDSigningController init]
  -[AKAppleIDSigningController initWithDaemonXPCEndpoint:]
  -[AKAppleIDSigningController initialURLKey]
  -[AKAppleIDSigningController shouldSendAbsintheHeader]
  -[AKAppleIDSigningController absintheSignatureForData:completion:]
  -[AKAppleIDSigningController setInitialURLKey:]
  -[AKAppleIDSigningController setAuthenticationController:]
  -[AKAppleIDSigningController _additionalAbsintheHeadersForRequest:completion:]
  -[AKAppleIDSigningController _additionalAttestationHeadersForRequest:options:completion:]
  -[AKAppleIDSigningController signingHeadersForRequest:completion:]
  -[AKAppleIDSigningController signWithBAAHeaders:completion:]
  -[AKAppleIDSigningController isProxy]
  -[AKAppleIDSigningController dealloc]
  -[AKAppleIDSigningController setShouldSendAbsintheHeader:]
  -[AKAppleIDSigningController _connectionInvalidated]
  -[AKAppleIDSigningController _connectionInterrupted]


AKInheritanceContext : NSObject <AKAuthenticationContext, NSSecureCoding, NSCopying>
 @property  NSString *beneficiaryIdentifier
 @property  NSString *beneficiarySetupToken
 @property  AKBeneficiaryManifest *manifest
 @property  AKInheritanceAccessKey *accessKey
 @property  NSString *altDSID
 @property  long long serviceType
 @property  NSString *_proxiedAppName
 @property  NSDictionary *appProvidedData
 @property  NSString *appProvidedContext
 @property  AKDevice *proxiedDevice
 @property  AKDevice *companionDevice
 @property  long long authenticationMode
 @property  BOOL cliMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKInheritanceContext supportsSecureCoding]

  // instance methods
  -[AKInheritanceContext setAltDSID:]
  -[AKInheritanceContext setProxiedDevice:]
  -[AKInheritanceContext initWithCoder:]
  -[AKInheritanceContext altDSID]
  -[AKInheritanceContext setServiceType:]
  -[AKInheritanceContext beneficiaryIdentifier]
  -[AKInheritanceContext appProvidedData]
  -[AKInheritanceContext .cxx_destruct]
  -[AKInheritanceContext _proxiedAppName]
  -[AKInheritanceContext companionDevice]
  -[AKInheritanceContext setAppProvidedData:]
  -[AKInheritanceContext manifest]
  -[AKInheritanceContext setCompanionDevice:]
  -[AKInheritanceContext _setProxiedAppName:]
  -[AKInheritanceContext appProvidedContext]
  -[AKInheritanceContext initWithOwnerAltDSID:]
  -[AKInheritanceContext initWithAuthenticationContext:]
  -[AKInheritanceContext setBeneficiaryIdentifier:]
  -[AKInheritanceContext beneficiarySetupToken]
  -[AKInheritanceContext setBeneficiarySetupToken:]
  -[AKInheritanceContext accessKey]
  -[AKInheritanceContext setManifest:]
  -[AKInheritanceContext setAccessKey:]
  -[AKInheritanceContext setAppProvidedContext:]
  -[AKInheritanceContext setAuthenticationMode:]
  -[AKInheritanceContext proxiedDevice]
  -[AKInheritanceContext copyWithZone:]
  -[AKInheritanceContext authenticationMode]
  -[AKInheritanceContext encodeWithCoder:]
  -[AKInheritanceContext serviceType]


AKDeviceListRequestContext : NSObject <NSSecureCoding>
 @property  NSString *altDSID
 @property  BOOL includeUntrustedDevices
 @property  BOOL includeFamilyDevices
 @property  NSArray *services
 @property  NSArray *operatingSystems

  // class methods
  +[AKDeviceListRequestContext supportsSecureCoding]

  // instance methods
  -[AKDeviceListRequestContext setAltDSID:]
  -[AKDeviceListRequestContext services]
  -[AKDeviceListRequestContext setServices:]
  -[AKDeviceListRequestContext initWithCoder:]
  -[AKDeviceListRequestContext altDSID]
  -[AKDeviceListRequestContext .cxx_destruct]
  -[AKDeviceListRequestContext includeUntrustedDevices]
  -[AKDeviceListRequestContext setOperatingSystems:]
  -[AKDeviceListRequestContext setIncludeUntrustedDevices:]
  -[AKDeviceListRequestContext includeFamilyDevices]
  -[AKDeviceListRequestContext setIncludeFamilyDevices:]
  -[AKDeviceListRequestContext operatingSystems]
  -[AKDeviceListRequestContext encodeWithCoder:]


AKMediaServicesController : NSObject
  // instance methods
  -[AKMediaServicesController _artworkURLFromResult:size:updatingIconContext:]
  -[AKMediaServicesController appIconForBundleID:size:completion:]


AKAuthorizationDaemonInterface : NSObject
  // class methods
  +[AKAuthorizationDaemonInterface XPCInterface]


AKCertificatePinning : NSObject
  // class methods
  +[AKCertificatePinning isValidCertificateTrust:forHostname:]


AKAccountManager : NSObject
 @property  ACAccountType *appleIDAccountType
 @property  ACAccountStore *store
 @property  ACAccountType *authKitAccountType
 @property  ACAccountType *iCloudAccountType

  // class methods
  +[AKAccountManager sharedInstance]
  +[AKAccountManager personaIDIfCurrentPersonaIsDataSeparated]
  +[AKAccountManager stringRepresentationForService:]
  +[AKAccountManager isAccountsFrameworkAvailable]
  +[AKAccountManager performWithinPersonaForAccount:withBlock:]

  // instance methods
  -[AKAccountManager primaryAuthKitAccount]
  -[AKAccountManager securityLevelForAccount:]
  -[AKAccountManager _removeTokenForKeys:forAccount:]
  -[AKAccountManager hasPrimaryiCloudAccountForAppleID:]
  -[AKAccountManager familyNameForAccount:]
  -[AKAccountManager repairStateForAccount:]
  -[AKAccountManager setPrimaryEmailAddress:forAccount:]
  -[AKAccountManager setCanBeCustodian:forAccount:]
  -[AKAccountManager removeUnusedAndDuplicateAuthKitAccountsWithCompletion:]
  -[AKAccountManager iCloudAccountType]
  -[AKAccountManager altDSIDforPrimaryiCloudAccount]
  -[AKAccountManager setSecurityLevel:forAccount:]
  -[AKAccountManager needsRepairForAccount:]
  -[AKAccountManager setCanBeBeneficiary:forAccount:]
  -[AKAccountManager setFamilyName:forAccount:]
  -[AKAccountManager setSelectedPrivateEmail:forAccount:]
  -[AKAccountManager authKitAccountWithAppleID:]
  -[AKAccountManager canHaveBeneficiaryForAccount:]
  -[AKAccountManager .cxx_destruct]
  -[AKAccountManager transportableAuthKitAccount:]
  -[AKAccountManager beneficiaryListVersionForAccount:]
  -[AKAccountManager masterTokenForAccount:]
  -[AKAccountManager mostRecentlyUsedAuthKitAccount]
  -[AKAccountManager hasPrimaryiCloudAccountForAltDSID:]
  -[AKAccountManager userUnderAgeForAccount:]
  -[AKAccountManager setDSID:forAccount:]
  -[AKAccountManager hasMDMForAccount:]
  -[AKAccountManager hearbeatTokenForAccount:]
  -[AKAccountManager selectedAuthorizationEmailForAccount:]
  -[AKAccountManager _removeTokenKey:forAccount:]
  -[AKAccountManager setAltDSID:forAccount:]
  -[AKAccountManager setVerifiedPrimaryEmail:forAccount:]
  -[AKAccountManager setAuthorizationUsed:forAccount:]
  -[AKAccountManager setUserUnderage:forAccount:]
  -[AKAccountManager _tokenWithName:forAccount:error:]
  -[AKAccountManager removeMasterTokenForAccount:]
  -[AKAccountManager custodianListVersionForAccount:]
  -[AKAccountManager setCanHaveCustodian:forAccount:]
  -[AKAccountManager _serviceTypesForSecurityUpgrade]
  -[AKAccountManager appleIDCountryCodeForAccount:]
  -[AKAccountManager passwordResetTokenBackupForAccount:]
  -[AKAccountManager setCanHaveBeneficiary:forAccount:]
  -[AKAccountManager activeServiceNamesForAccount:]
  -[AKAccountManager continuationTokenForAccount:error:]
  -[AKAccountManager iCloudAccountForAltDSID:]
  -[AKAccountManager setStore:]
  -[AKAccountManager saveAccount:error:]
  -[AKAccountManager removeAllPasswordResetTokens]
  -[AKAccountManager setBeneficiaryListVersion:forAccount:]
  -[AKAccountManager setAuthenticationMode:forAccount:]
  -[AKAccountManager authKitAccountType]
  -[AKAccountManager init]
  -[AKAccountManager isBeneficiaryForAccount:]
  -[AKAccountManager verifiedPrimaryEmailForAccount:]
  -[AKAccountManager _serviceTypeForServiceNameString:]
  -[AKAccountManager setReachableEmailAddresses:forAccount:]
  -[AKAccountManager accountTypeForTypeIdentifier:]
  -[AKAccountManager _matchingServiceAccountForAuthKitAccount:service:]
  -[AKAccountManager demoAccountForAccount:]
  -[AKAccountManager updateSatoriWarmUpTimestampForAccount:]
  -[AKAccountManager updateVerifiedEmail:forAccountWithAltDSID:]
  -[AKAccountManager altDSIDForAccount:]
  -[AKAccountManager setDeviceTrustRevoked:forAccount:]
  -[AKAccountManager _accountTypeForServiceType:]
  -[AKAccountManager DSIDForAccount:]
  -[AKAccountManager shouldPerformSatoriWarmupVerificationForAccount:]
  -[AKAccountManager iCloudAccountForAppleID:]
  -[AKAccountManager appleIDAccountType]
  -[AKAccountManager canBeCustodianForAccount:]
  -[AKAccountManager authorizationUsedForAccount:]
  -[AKAccountManager passwordResetTokenBackupForAccount:error:]
  -[AKAccountManager phoneAsAppleIDForAccount:]
  -[AKAccountManager custodianEnabledForAccount:]
  -[AKAccountManager removeContinuationTokenForAccount:]
  -[AKAccountManager setAppleIDCountryCode:forAccount:]
  -[AKAccountManager _altDSIDForiCloudAccount:]
  -[AKAccountManager _isAccountEligibleForSecurityUpgrade:ofServiceType:]
  -[AKAccountManager store]
  -[AKAccountManager setSelectedAuthorizationEmail:forAccount:]
  -[AKAccountManager ageOfMajorityForAccount:]
  -[AKAccountManager isPrimaryiCloudAccount:]
  -[AKAccountManager passwordResetTokenForAccount:]
  -[AKAccountManager _defaultSecurityUpgradeServiceNames]
  -[AKAccountManager setRepairState:forAccount:]
  -[AKAccountManager setBeneficiary:forAccount:]
  -[AKAccountManager authKitAccountWithDSID:]
  -[AKAccountManager givenNameForAccount:]
  -[AKAccountManager setAgeOfMajority:forAccount:]
  -[AKAccountManager canHaveCustodianForAccount:]
  -[AKAccountManager primaryiCloudAccount]
  -[AKAccountManager accountsUsingService:]
  -[AKAccountManager combinedAliasesAndReachableEmailsForAccount:]
  -[AKAccountManager passwordResetTokenForAccount:error:]
  -[AKAccountManager _setUsername:forAccount:]
  -[AKAccountManager authKitAccountWithAltDSID:]
  -[AKAccountManager updateUsername:forAccountsWithAltDSID:]
  -[AKAccountManager setForwardingEmail:forAccount:]
  -[AKAccountManager isPrimaryiCloudAccountEmailVerified:]
  -[AKAccountManager setCustodianListVersion:forAccount:]
  -[AKAccountManager setAccount:inUse:byService:]
  -[AKAccountManager setAdditionalInfo:forAccount:]
  -[AKAccountManager selectedPrivateEmailForAccount:]
  -[AKAccountManager servicesUsingAccount:]
  -[AKAccountManager forwardingEmailForAccount:]
  -[AKAccountManager setGivenName:forAccount:]
  -[AKAccountManager additionalInfoForAccount:]
  -[AKAccountManager setHasMDM:forAccount:]
  -[AKAccountManager shouldUpdateAuthModeForAccount:]
  -[AKAccountManager updateAuthModeTimestampForAccount:]
  -[AKAccountManager appleIDAccountWithAltDSID:]
  -[AKAccountManager primaryEmailAddressForAccount:]
  -[AKAccountManager canBeBeneficiaryForAccount:]
  -[AKAccountManager setCustodianEnabled:forAccount:]
  -[AKAccountManager reachableEmailAddressesForAccount:]
  -[AKAccountManager appleIDAccountWithAppleID:]
  -[AKAccountManager continuationTokenForAccount:]
  -[AKAccountManager deviceTrustRevokedForAccount:]
  -[AKAccountManager formattedUsernameForAccount:]
  -[AKAccountManager allAuthKitAccounts]
  -[AKAccountManager setDemoAccount:forAccount:]
  -[AKAccountManager aliasesForAccount:]
  -[AKAccountManager setPhoneAsAppleID:forAccount:]
  -[AKAccountManager setAliases:forAccount:]
  -[AKAccountManager _aliasesForiCloudAccount:]
  -[AKAccountManager hearbeatTokenForAccount:error:]
  -[AKAccountManager authenticationModeForAccount:]
  -[AKAccountManager accountEligibleForUpdate]


AKPrivateEmailController : NSObject <AAFXPCSessionDelegate, AKPrivateEmailDaemonProtocol>
 @property  AAFXPCSession *remoteService
 @property  <AKPrivateEmailUIProvider> *uiProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKPrivateEmailController uiProvider]
  -[AKPrivateEmailController setUiProvider:]
  -[AKPrivateEmailController configureRemoteInterface:]
  -[AKPrivateEmailController .cxx_destruct]
  -[AKPrivateEmailController init]
  -[AKPrivateEmailController exportedObject]
  -[AKPrivateEmailController initWithXPCSession:]
  -[AKPrivateEmailController remoteService]
  -[AKPrivateEmailController lookupPrivateEmailForAltDSID:withKey:completion:]
  -[AKPrivateEmailController fetchPrivateEmailForAltDSID:withKey:completion:]
  -[AKPrivateEmailController registerPrivateEmailForAltDSID:withKey:completion:]
  -[AKPrivateEmailController getContextForRequestContext:completion:]
  -[AKPrivateEmailController deletePrivateEmailDatabaseWithCompletion:]
  -[AKPrivateEmailController privateEmailListVersionWithCompletion:]
  -[AKPrivateEmailController removePrivateEmailKey:completion:]
  -[AKPrivateEmailController listAllPrivateEmailsForAltDSID:completion:]
  -[AKPrivateEmailController setRemoteService:]


AKAppleIDSigningDaemonInterface : NSObject
  // class methods
  +[AKAppleIDSigningDaemonInterface XPCInterface]


AKAuthorizationLoginChoice : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *user
 @property  NSString *site
 @property  BOOL appleIDAuth
 @property  BOOL createAppleID

  // class methods
  +[AKAuthorizationLoginChoice supportsSecureCoding]

  // instance methods
  -[AKAuthorizationLoginChoice site]
  -[AKAuthorizationLoginChoice initWithCoder:]
  -[AKAuthorizationLoginChoice .cxx_destruct]
  -[AKAuthorizationLoginChoice user]
  -[AKAuthorizationLoginChoice setUser:]
  -[AKAuthorizationLoginChoice setSite:]
  -[AKAuthorizationLoginChoice initWithUser:site:]
  -[AKAuthorizationLoginChoice isAppleIDAuthorization]
  -[AKAuthorizationLoginChoice setAppleIDAuth:]
  -[AKAuthorizationLoginChoice shouldCreateAppleID]
  -[AKAuthorizationLoginChoice setCreateAppleID:]
  -[AKAuthorizationLoginChoice copyWithZone:]
  -[AKAuthorizationLoginChoice encodeWithCoder:]


AKBeneficiaryManifest : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *accessibleBundleInformation
 @property  long long manifestOptions
 @property  NSDictionary *parsableRepresentation

  // class methods
  +[AKBeneficiaryManifest supportsSecureCoding]

  // instance methods
  -[AKBeneficiaryManifest initWithCoder:]
  -[AKBeneficiaryManifest .cxx_destruct]
  -[AKBeneficiaryManifest accessibleBundleInformation]
  -[AKBeneficiaryManifest _bundleTypeFrom:]
  -[AKBeneficiaryManifest _isAllOptionsSelected]
  -[AKBeneficiaryManifest manifestOptions]
  -[AKBeneficiaryManifest initWithBundleInformation:manifestOptions:]
  -[AKBeneficiaryManifest parsableRepresentation]
  -[AKBeneficiaryManifest copyWithZone:]
  -[AKBeneficiaryManifest encodeWithCoder:]


AKAppleIDServerResourceLoadDelegate : NSObject <NSSecureCoding>
 @property  BOOL shouldSendEphemeralAuthHeader
 @property  BOOL shouldSendICSCIntentHeader
 @property  BOOL shouldSendLocalUserHasAppleIDLoginHeader
 @property  BOOL shouldSendPhoneNumber
 @property  BOOL shouldOfferSecurityUpgrade
 @property  NSString *phoneNumberCertificate
 @property  NSArray *phoneInformation
 @property  long long serviceType
 @property  NSArray *loggedInServices
 @property  NSString *passwordResetToken
 @property  NSString *continuationToken
 @property  NSString *heartbeatToken
 @property  NSString *identityToken
 @property  NSString *altDSID
 @property  NSString *initialURLRequestKey
 @property  NSString *proxyAppName
 @property  NSString *clientAppName
 @property  NSString *appProvidedContext
 @property  NSNumber *hasEmptyPasswordOverride
 @property  NSString *securityUpgradeContext
 @property  NSString *followupItems
 @property  NSString *dataCenterIdentifier
 @property  NSString *custodianRecoveryToken
 @property  AKDevice *proxiedDevice
 @property  NSString *proxiedAltDSID
 @property  NSString *proxiedIdentityToken
 @property  <AKAnisetteServiceProtocol> *anisetteDataProvider
 @property  AKAnisetteData *proxiedDeviceAnisetteData
 @property  AKAttestationData *proxiedDeviceAttestationData
 @property  BOOL cliMode
 @property  NSString *privateEmailKey
 @property  NSString *continuityIDMSData
 @property  BOOL shouldSendAbsintheHeader
 @property  NSString *bagUrlKey
 @property  BOOL shouldSendSigningHeaders
 @property  NSString *serviceToken

  // class methods
  +[AKAppleIDServerResourceLoadDelegate signalFromServerResponse:]
  +[AKAppleIDServerResourceLoadDelegate supportsSecureCoding]
  +[AKAppleIDServerResourceLoadDelegate sharedController]

  // instance methods
  -[AKAppleIDServerResourceLoadDelegate setCustodianRecoveryToken:]
  -[AKAppleIDServerResourceLoadDelegate setAltDSID:]
  -[AKAppleIDServerResourceLoadDelegate setAnisetteDataProvider:]
  -[AKAppleIDServerResourceLoadDelegate hasEmptyPasswordOverride]
  -[AKAppleIDServerResourceLoadDelegate shouldSendLocalUserHasAppleIDLoginHeader]
  -[AKAppleIDServerResourceLoadDelegate setBagUrlKey:]
  -[AKAppleIDServerResourceLoadDelegate _retrieveAndResetContinuationHeaders]
  -[AKAppleIDServerResourceLoadDelegate proxiedDeviceAnisetteData]
  -[AKAppleIDServerResourceLoadDelegate setProxiedDevice:]
  -[AKAppleIDServerResourceLoadDelegate initWithCoder:]
  -[AKAppleIDServerResourceLoadDelegate _signWithProxiedDeviceHeaders:]
  -[AKAppleIDServerResourceLoadDelegate altDSID]
  -[AKAppleIDServerResourceLoadDelegate updateWithAuthResults:]
  -[AKAppleIDServerResourceLoadDelegate proxiedIdentityToken]
  -[AKAppleIDServerResourceLoadDelegate setServiceType:]
  -[AKAppleIDServerResourceLoadDelegate setProxiedDeviceAttestationData:]
  -[AKAppleIDServerResourceLoadDelegate setShouldSendPhoneNumber:]
  -[AKAppleIDServerResourceLoadDelegate .cxx_destruct]
  -[AKAppleIDServerResourceLoadDelegate followupItems]
  -[AKAppleIDServerResourceLoadDelegate _proxiedProvisioningController]
  -[AKAppleIDServerResourceLoadDelegate isAuthenticationRequired:]
  -[AKAppleIDServerResourceLoadDelegate phoneNumberCertificate]
  -[AKAppleIDServerResourceLoadDelegate proxyAppName]
  -[AKAppleIDServerResourceLoadDelegate _signRequestWithBAAHeaders:]
  -[AKAppleIDServerResourceLoadDelegate heartbeatToken]
  -[AKAppleIDServerResourceLoadDelegate cliMode]
  -[AKAppleIDServerResourceLoadDelegate setPhoneNumberCertificate:]
  -[AKAppleIDServerResourceLoadDelegate loggedInServices]
  -[AKAppleIDServerResourceLoadDelegate setSecurityUpgradeContext:]
  -[AKAppleIDServerResourceLoadDelegate isResponseFinal:]
  -[AKAppleIDServerResourceLoadDelegate setCliMode:]
  -[AKAppleIDServerResourceLoadDelegate shouldOfferSecurityUpgrade]
  -[AKAppleIDServerResourceLoadDelegate continuationToken]
  -[AKAppleIDServerResourceLoadDelegate privateEmailKey]
  -[AKAppleIDServerResourceLoadDelegate setShouldSendLocalUserHasAppleIDLoginHeader:]
  -[AKAppleIDServerResourceLoadDelegate decorateWithContext:]
  -[AKAppleIDServerResourceLoadDelegate isResponseCompleteAndConflict:]
  -[AKAppleIDServerResourceLoadDelegate initWithAltDSID:identityToken:]
  -[AKAppleIDServerResourceLoadDelegate setProxyAppName:]
  -[AKAppleIDServerResourceLoadDelegate signRequest:withCompletionHandler:]
  -[AKAppleIDServerResourceLoadDelegate appProvidedContext]
  -[AKAppleIDServerResourceLoadDelegate shouldSendICSCIntentHeader]
  -[AKAppleIDServerResourceLoadDelegate setPrivateEmailKey:]
  -[AKAppleIDServerResourceLoadDelegate setFollowupItems:]
  -[AKAppleIDServerResourceLoadDelegate setClientAppName:]
  -[AKAppleIDServerResourceLoadDelegate passwordResetToken]
  -[AKAppleIDServerResourceLoadDelegate shouldSendAbsintheHeader]
  -[AKAppleIDServerResourceLoadDelegate custodianRecoveryToken]
  -[AKAppleIDServerResourceLoadDelegate phoneInformation]
  -[AKAppleIDServerResourceLoadDelegate setInitialURLRequestKey:]
  -[AKAppleIDServerResourceLoadDelegate signRequestWithCommonHeaders:]
  -[AKAppleIDServerResourceLoadDelegate proxiedDeviceAttestationData]
  -[AKAppleIDServerResourceLoadDelegate shouldSendSigningHeaders]
  -[AKAppleIDServerResourceLoadDelegate setLoggedInServices:]
  -[AKAppleIDServerResourceLoadDelegate setServiceToken:]
  -[AKAppleIDServerResourceLoadDelegate processResponse:]
  -[AKAppleIDServerResourceLoadDelegate continuityIDMSData]
  -[AKAppleIDServerResourceLoadDelegate setProxiedIdentityToken:]
  -[AKAppleIDServerResourceLoadDelegate setShouldSendSigningHeaders:]
  -[AKAppleIDServerResourceLoadDelegate setHeartbeatToken:]
  -[AKAppleIDServerResourceLoadDelegate _harvestContinuationHeadersFromHeaders:]
  -[AKAppleIDServerResourceLoadDelegate dataCenterIdentifier]
  -[AKAppleIDServerResourceLoadDelegate setDataCenterIdentifier:]
  -[AKAppleIDServerResourceLoadDelegate proxiedAltDSID]
  -[AKAppleIDServerResourceLoadDelegate setProxiedDeviceAnisetteData:]
  -[AKAppleIDServerResourceLoadDelegate setShouldSendEphemeralAuthHeader:]
  -[AKAppleIDServerResourceLoadDelegate decorateWithPrivateEmailContext:]
  -[AKAppleIDServerResourceLoadDelegate setShouldOfferSecurityUpgrade:]
  -[AKAppleIDServerResourceLoadDelegate setPhoneInformation:]
  -[AKAppleIDServerResourceLoadDelegate setAppProvidedContext:]
  -[AKAppleIDServerResourceLoadDelegate setContinuityIDMSData:]
  -[AKAppleIDServerResourceLoadDelegate proxiedDevice]
  -[AKAppleIDServerResourceLoadDelegate setShouldSendICSCIntentHeader:]
  -[AKAppleIDServerResourceLoadDelegate setHasEmptyPasswordOverride:]
  -[AKAppleIDServerResourceLoadDelegate signRequest:]
  -[AKAppleIDServerResourceLoadDelegate isResponseFinalForHSA2ServerFlow:]
  -[AKAppleIDServerResourceLoadDelegate shouldSendPhoneNumber]
  -[AKAppleIDServerResourceLoadDelegate setIdentityToken:]
  -[AKAppleIDServerResourceLoadDelegate serviceToken]
  -[AKAppleIDServerResourceLoadDelegate initialURLRequestKey]
  -[AKAppleIDServerResourceLoadDelegate setShouldSendAbsintheHeader:]
  -[AKAppleIDServerResourceLoadDelegate securityUpgradeContext]
  -[AKAppleIDServerResourceLoadDelegate signingController]
  -[AKAppleIDServerResourceLoadDelegate bagUrlKey]
  -[AKAppleIDServerResourceLoadDelegate clientAppName]
  -[AKAppleIDServerResourceLoadDelegate signRequestWithBasicHeaders:]
  -[AKAppleIDServerResourceLoadDelegate shouldSendEphemeralAuthHeader]
  -[AKAppleIDServerResourceLoadDelegate setPasswordResetToken:]
  -[AKAppleIDServerResourceLoadDelegate _signRequest:]
  -[AKAppleIDServerResourceLoadDelegate setProxiedAltDSID:]
  -[AKAppleIDServerResourceLoadDelegate _signWithFeatureOptInHeaders:]
  -[AKAppleIDServerResourceLoadDelegate encodeWithCoder:]
  -[AKAppleIDServerResourceLoadDelegate anisetteDataProvider]
  -[AKAppleIDServerResourceLoadDelegate _isResponseSuccessful:]
  -[AKAppleIDServerResourceLoadDelegate setContinuationToken:]
  -[AKAppleIDServerResourceLoadDelegate identityToken]
  -[AKAppleIDServerResourceLoadDelegate isResponseActionable:]
  -[AKAppleIDServerResourceLoadDelegate serviceType]


AKPrivateEmailPresenterHostInterface : NSObject
  // class methods
  +[AKPrivateEmailPresenterHostInterface XPCInterface]


AKDeveloperTeam : NSObject <NSSecureCoding>
 @property  NSString *userIdentifier
 @property  NSString *teamID
 @property  NSString *privateEmail
 @property  NSDictionary *apps

  // class methods
  +[AKDeveloperTeam supportsSecureCoding]

  // instance methods
  -[AKDeveloperTeam teamID]
  -[AKDeveloperTeam userIdentifier]
  -[AKDeveloperTeam initWithCoder:]
  -[AKDeveloperTeam setApps:]
  -[AKDeveloperTeam setUserIdentifier:]
  -[AKDeveloperTeam apps]
  -[AKDeveloperTeam initWithResponseInfo:]
  -[AKDeveloperTeam .cxx_destruct]
  -[AKDeveloperTeam privateEmail]
  -[AKDeveloperTeam setPrivateEmail:]
  -[AKDeveloperTeam encodeWithCoder:]
  -[AKDeveloperTeam setTeamID:]


AKCircleRequestPayload : NSObject <NSSecureCoding>
 @property  AKPushMessage *responseMessage
 @property  NSDictionary *responseInfo
 @property  unsigned long circleStep
 @property  NSString *serverInfo
 @property  NSData *clientInfo
 @property  long long clientErrorCode
 @property  NSString *altDSID
 @property  NSString *transactionId

  // class methods
  +[AKCircleRequestPayload supportsSecureCoding]
  +[AKCircleRequestPayload payloadWithMessage:]

  // instance methods
  -[AKCircleRequestPayload setAltDSID:]
  -[AKCircleRequestPayload initWithCoder:]
  -[AKCircleRequestPayload setTransactionId:]
  -[AKCircleRequestPayload altDSID]
  -[AKCircleRequestPayload setClientInfo:]
  -[AKCircleRequestPayload .cxx_destruct]
  -[AKCircleRequestPayload clientErrorCode]
  -[AKCircleRequestPayload setClientErrorCode:]
  -[AKCircleRequestPayload clientInfo]
  -[AKCircleRequestPayload serverInfo]
  -[AKCircleRequestPayload circleStep]
  -[AKCircleRequestPayload setCircleStep:]
  -[AKCircleRequestPayload isRequestingPayload]
  -[AKCircleRequestPayload isAcceptingPayload]
  -[AKCircleRequestPayload replyPayload]
  -[AKCircleRequestPayload responseMessage]
  -[AKCircleRequestPayload setResponseMessage:]
  -[AKCircleRequestPayload responseInfo]
  -[AKCircleRequestPayload setResponseInfo:]
  -[AKCircleRequestPayload setServerInfo:]
  -[AKCircleRequestPayload transactionId]
  -[AKCircleRequestPayload encodeWithCoder:]


AKPrivateEmailDaemonInterface : NSObject
  // class methods
  +[AKPrivateEmailDaemonInterface XPCInterface]


AKPrivateEmailContext : NSObject <NSSecureCoding>
 @property  NSString *key
 @property  NSString *altDSID
 @property  NSString *proxiedAppID
 @property  NSString *proxiedBundleIdentifier
 @property  NSString *proxiedAppName
 @property  NSString *upgradeBundleIdentifier

  // class methods
  +[AKPrivateEmailContext supportsSecureCoding]

  // instance methods
  -[AKPrivateEmailContext initWithCoder:]
  -[AKPrivateEmailContext altDSID]
  -[AKPrivateEmailContext .cxx_destruct]
  -[AKPrivateEmailContext upgradeBundleIdentifier]
  -[AKPrivateEmailContext initWithContext:bundleID:]
  -[AKPrivateEmailContext proxiedAppID]
  -[AKPrivateEmailContext proxiedAppName]
  -[AKPrivateEmailContext initWithKey:altDSID:]
  -[AKPrivateEmailContext initWithContext:client:]
  -[AKPrivateEmailContext setProxiedAppID:]
  -[AKPrivateEmailContext setProxiedAppName:]
  -[AKPrivateEmailContext initWithKey:]
  -[AKPrivateEmailContext key]
  -[AKPrivateEmailContext setProxiedBundleIdentifier:]
  -[AKPrivateEmailContext proxiedBundleIdentifier]
  -[AKPrivateEmailContext encodeWithCoder:]


AKURLBag : NSObject
 @property  NSString *altDSID
 @property  NSURL *escapeHatchURL
 @property  <AKURLBagDictionaryProvider> *bagProvider
 @property  NSURL *basicAuthURL
 @property  NSURL *startProvisioningURL
 @property  NSURL *endProvisioningURL
 @property  NSURL *syncAnisetteURL
 @property  NSURL *upgradeEligibilityCheckURL
 @property  NSURL *upgradeUIURL
 @property  NSURL *validateCodeURL
 @property  NSURL *checkInURL
 @property  NSURL *notificationAckURL
 @property  NSURL *iForgotURL
 @property  NSURL *iForgotContinuationURL
 @property  NSURL *createAppleIDURL
 @property  NSURL *deviceListURL
 @property  NSURL *trustedDevicesURL
 @property  NSURL *trustedDevicesSummaryURL
 @property  NSURL *absintheCertURL
 @property  NSURL *absintheSessionURL
 @property  NSURL *tokenUpgradeURL
 @property  NSURL *configurationInfoURL
 @property  NSURL *fetchConfigDataURL
 @property  NSURL *changePasswordURL
 @property  NSURL *validateVettingTokenURL
 @property  NSURL *renewRecoveryTokenURL
 @property  NSURL *circleURL
 @property  NSURL *fetchFollowUps
 @property  NSURL *fetchUserInfoURL
 @property  NSURL *fetchAppInfoURL
 @property  NSURL *fetchPrimaryBundleIDURL
 @property  NSURL *fetchAuthenticationModeURL
 @property  NSURL *storeModernRecoveryURL
 @property  NSURL *acsURL
 @property  NSURL *repairURL
 @property  NSURL *userVerificationURL
 @property  NSURL *appleIDAuthorizeHTMLResponseURL
 @property  NSURL *createChildAccountURL
 @property  NSURL *deleteAuthorizedAppURL
 @property  NSURL *privateEmailManageURL
 @property  NSSet *appleOwnedDomains
 @property  NSSet *appleIDAuthorizationURLs
 @property  NSDictionary *custodianCodeConfiguration
 @property  NSDictionary *inheritanceConfiguration
 @property  NSString *APSEnvironment
 @property  unsigned long IDMSEnvironment
 @property  unsigned long lastKnownIDMSEnvironment
 @property  BOOL phoneNumberSupportedConfig
 @property  BOOL inlineFlowSupportedConfig
 @property  NSString *continuationHeaderPrefix
 @property  NSArray *securityUpgradeServiceNames

  // class methods
  +[AKURLBag sharedBag]
  +[AKURLBag IDMSEnvironmentFromBag:]
  +[AKURLBag bagForAltDSID:]
  +[AKURLBag _requestEnvironmentsWithBag:]
  +[AKURLBag looksLikeiForgotURLKey:]
  +[AKURLBag _IDMSEnvironmentFromString:]
  +[AKURLBag _currentBags]
  +[AKURLBag keyForEscapeHatchURL]

  // instance methods
  -[AKURLBag acsURL]
  -[AKURLBag setAltDSID:]
  -[AKURLBag circleURL]
  -[AKURLBag fetchFollowUps]
  -[AKURLBag userVerificationURL]
  -[AKURLBag IsInlineFlowSupportedConfig]
  -[AKURLBag escapeHatchURL]
  -[AKURLBag altDSID]
  -[AKURLBag continuationHeaderPrefix]
  -[AKURLBag changePasswordURL]
  -[AKURLBag absintheSessionURL]
  -[AKURLBag fetchConfigDataURL]
  -[AKURLBag initWithAltDSID:]
  -[AKURLBag createChildAccountURL]
  -[AKURLBag .cxx_destruct]
  -[AKURLBag _fetchURLBagWithCompletion:]
  -[AKURLBag setBagProvider:]
  -[AKURLBag _configurationsFromCache:withError:]
  -[AKURLBag absintheCertURL]
  -[AKURLBag fetchAuthenticationModeURL]
  -[AKURLBag trustedDevicesURL]
  -[AKURLBag startProvisioningURL]
  -[AKURLBag isPhoneNumberSupportedConfig]
  -[AKURLBag repairURL]
  -[AKURLBag syncAnisetteURL]
  -[AKURLBag fetchAppInfoURL]
  -[AKURLBag basicAuthURL]
  -[AKURLBag appleIDAuthorizationURLs]
  -[AKURLBag deviceListURL]
  -[AKURLBag appleOwnedDomains]
  -[AKURLBag fetchPrimaryBundleIDURL]
  -[AKURLBag upgradeEligibilityCheckURL]
  -[AKURLBag requestNewURLBagIfNecessaryWithError:]
  -[AKURLBag inheritanceConfiguration]
  -[AKURLBag _requestNewURLBagIfNecessaryWithError:]
  -[AKURLBag _urlBagFromCache:withError:]
  -[AKURLBag upgradeUIURL]
  -[AKURLBag renewRecoveryTokenURL]
  -[AKURLBag storeModernRecoveryURL]
  -[AKURLBag isBaaEnabledForKey:]
  -[AKURLBag createAppleIDURL]
  -[AKURLBag iForgotContinuationURL]
  -[AKURLBag custodianCodeConfiguration]
  -[AKURLBag tokenUpgradeURL]
  -[AKURLBag bagProvider]
  -[AKURLBag securityUpgradeServiceNames]
  -[AKURLBag APSEnvironment]
  -[AKURLBag deleteAuthorizedAppURL]
  -[AKURLBag configurationAtKey:]
  -[AKURLBag endProvisioningURL]
  -[AKURLBag appleIDAuthorizeHTMLResponseURL]
  -[AKURLBag validateCodeURL]
  -[AKURLBag forceUpdateBagWithUrlSwitchData:completion:]
  -[AKURLBag _urlAtKey:]
  -[AKURLBag notificationAckURL]
  -[AKURLBag configurationInfoURL]
  -[AKURLBag validateVettingTokenURL]
  -[AKURLBag checkInURL]
  -[AKURLBag lastKnownIDMSEnvironment]
  -[AKURLBag _requestEnvironmentsWithError:]
  -[AKURLBag urlAtKey:]
  -[AKURLBag iForgotURL]
  -[AKURLBag trustedDevicesSummaryURL]
  -[AKURLBag fetchUserInfoURL]
  -[AKURLBag requestNewURLBagIfNecessaryWithCompletion:]
  -[AKURLBag privateEmailManageURL]
  -[AKURLBag IDMSEnvironment]
  -[AKURLBag configurationAtKey:fromCache:]


AKFollowUpFactoryImpl : NSObject <AKFollowUpItemFactory>
 @property  NSString *extensionIdentifier
 @property  NSString *representingBundlePath
 @property  NSString *bundleIconName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKFollowUpFactoryImpl representingBundlePath]
  -[AKFollowUpFactoryImpl setRepresentingBundlePath:]
  -[AKFollowUpFactoryImpl .cxx_destruct]
  -[AKFollowUpFactoryImpl setBundleIconName:]
  -[AKFollowUpFactoryImpl setExtensionIdentifier:]
  -[AKFollowUpFactoryImpl _itemFromPayload:pushMessageInfo:withAltDSID:]
  -[AKFollowUpFactoryImpl _actionsFromPayload:pushMessageInfo:]
  -[AKFollowUpFactoryImpl _notificationFromPayload:pushMessageInfo:]
  -[AKFollowUpFactoryImpl _actionFromInfo:pushMessageInfo:]
  -[AKFollowUpFactoryImpl actionWithTitle:andActionKey:]
  -[AKFollowUpFactoryImpl itemsForAltDSID:pushMessageInfo:fromIDMSPayload:]
  -[AKFollowUpFactoryImpl itemIdentifiersRequiringNotificationClearFromPayload:]
  -[AKFollowUpFactoryImpl IsFollowUpItemNotificationForced:]
  -[AKFollowUpFactoryImpl bundleIconName]
  -[AKFollowUpFactoryImpl _clearAction]
  -[AKFollowUpFactoryImpl extensionIdentifier]


AKAccountRecoveryContext : NSObject <NSSecureCoding>
 @property  BOOL supportsMasterKeyRecovery
 @property  BOOL mandatesRecoveryKey
 @property  NSString *encodedRecoveryIdentityToken
 @property  NSString *encodedRecoveryPET
 @property  NSURL *recoveryContinuationURL
 @property  AKAppleIDAuthenticationContext *authContext
 @property  NSString *decodedRecoveryIdentityTokenString
 @property  NSString *decodedRecoveryPETString

  // class methods
  +[AKAccountRecoveryContext supportsSecureCoding]
  +[AKAccountRecoveryContext recoveryContextWithServerInfo:]

  // instance methods
  -[AKAccountRecoveryContext setAuthContext:]
  -[AKAccountRecoveryContext authContext]
  -[AKAccountRecoveryContext initWithCoder:]
  -[AKAccountRecoveryContext isValid]
  -[AKAccountRecoveryContext .cxx_destruct]
  -[AKAccountRecoveryContext decodedRecoveryPETString]
  -[AKAccountRecoveryContext supportsMasterKeyRecovery]
  -[AKAccountRecoveryContext mandatesRecoveryKey]
  -[AKAccountRecoveryContext setMandatesRecoveryKey:]
  -[AKAccountRecoveryContext recoveryContinuationURL]
  -[AKAccountRecoveryContext decodedRecoveryIdentityTokenString]
  -[AKAccountRecoveryContext setSupportsMasterKeyRecovery:]
  -[AKAccountRecoveryContext setEncodedRecoveryIdentityToken:]
  -[AKAccountRecoveryContext setEncodedRecoveryPET:]
  -[AKAccountRecoveryContext setRecoveryContinuationURL:]
  -[AKAccountRecoveryContext encodedRecoveryIdentityToken]
  -[AKAccountRecoveryContext encodedRecoveryPET]
  -[AKAccountRecoveryContext encodeWithCoder:]


AKAuthorizationNotificationHandlerInterface : NSObject
  // class methods
  +[AKAuthorizationNotificationHandlerInterface XPCInterface]


AKCommandLineUtilities : NSObject
 @property  NSDateFormatter *dateFormatter

  // instance methods
  -[AKCommandLineUtilities dateFormatter]
  -[AKCommandLineUtilities .cxx_destruct]
  -[AKCommandLineUtilities _hostURL]
  -[AKCommandLineUtilities mutableJSONRequestForPath:]
  -[AKCommandLineUtilities jsonDictionaryForData:error:]
  -[AKCommandLineUtilities errorFromServerResponseBody:]
  -[AKCommandLineUtilities mutableJSONRequestForURL:]
  -[AKCommandLineUtilities createAndExecuteRequestForPath:requestBody:httpMethod:configuration:completion:]


AKAlertHandler : NSObject
 @property  <AKAlertHandlerUIProvider> *uiProvider

  // class methods
  +[AKAlertHandler sharedInstance]

  // instance methods
  -[AKAlertHandler uiProvider]
  -[AKAlertHandler setUiProvider:]
  -[AKAlertHandler .cxx_destruct]
  -[AKAlertHandler _openSpyglass]
  -[AKAlertHandler showAlertForError:withAuthKitAccount:withCompletion:]
  -[AKAlertHandler _showAlertForInvalidContextWithCompletion:]
  -[AKAlertHandler _showAlertForMissingAppleAccountWithCompletion:]
  -[AKAlertHandler _showAlertForAccountNotSupportedWithCompletion:]
  -[AKAlertHandler _showAlertForUnverifiedEmailWithCompletion:]
  -[AKAlertHandler _showAlertForInsufficientSecurityLevelWithError:completionHandler:]
  -[AKAlertHandler _showAlertForCannotFindServerWithCompletion:]
  -[AKAlertHandler _openPasscodeSetup]
  -[AKAlertHandler _showAlertForUnderageAccount:withCompletion:]
  -[AKAlertHandler _showAlertForPasscodeSetupWithCompletion:]
  -[AKAlertHandler notificationDictionaryWithTitle:message:defaultButton:alternateButton:]
  -[AKAlertHandler showAlert:primaryAction:altAction:]
  -[AKAlertHandler _URLWithString:byAppendingParameters:]
  -[AKAlertHandler _openUpgradeAccountSecurityLevelWithBundleID:]
  -[AKAlertHandler showAlert:primaryAction:altAction:cancelAction:]
  -[AKAlertHandler showAlertForError:withCompletion:]


AKInheritanceCLIContext : AKInheritanceContext
 @property  NSString *accessKeyString
 @property  NSString *beneficiaryFirstName
 @property  NSString *beneficiaryLastName
 @property  NSString *beneficiaryPassword
 @property  NSString *identityToken

  // class methods
  +[AKInheritanceCLIContext supportsSecureCoding]

  // instance methods
  -[AKInheritanceCLIContext initWithCoder:]
  -[AKInheritanceCLIContext .cxx_destruct]
  -[AKInheritanceCLIContext accessKeyString]
  -[AKInheritanceCLIContext setAccessKeyString:]
  -[AKInheritanceCLIContext beneficiaryPassword]
  -[AKInheritanceCLIContext setBeneficiaryPassword:]
  -[AKInheritanceCLIContext beneficiaryFirstName]
  -[AKInheritanceCLIContext setBeneficiaryFirstName:]
  -[AKInheritanceCLIContext beneficiaryLastName]
  -[AKInheritanceCLIContext setBeneficiaryLastName:]
  -[AKInheritanceCLIContext setIdentityToken:]
  -[AKInheritanceCLIContext copyWithZone:]
  -[AKInheritanceCLIContext encodeWithCoder:]
  -[AKInheritanceCLIContext identityToken]


AKGrandSlamResponseHandler : NSObject
 @property  AKAppleIDAuthenticationContext *context

  // instance methods
  -[AKGrandSlamResponseHandler .cxx_destruct]
  -[AKGrandSlamResponseHandler initWithContext:]
  -[AKGrandSlamResponseHandler _handleInvalidMasterTokenWithSubErrorCode:]
  -[AKGrandSlamResponseHandler _revokeDeviceTrust]
  -[AKGrandSlamResponseHandler handleResponseError:]
  -[AKGrandSlamResponseHandler setContext:]
  -[AKGrandSlamResponseHandler context]


AKToken : NSObject
 @property  NSString *stringValue
 @property  NSDate *expirationDate
 @property  NSString *name

  // class methods
  +[AKToken tokenWithBase64String:]
  +[AKToken tokenWithValue:lifetime:]

  // instance methods
  -[AKToken stringValue]
  -[AKToken name]
  -[AKToken setStringValue:]
  -[AKToken .cxx_destruct]
  -[AKToken setName:]
  -[AKToken expirationDate]


AKMasterToken : AKToken
 @property  NSData *sessionKey
 @property  NSData *encryptedSessionKey
 @property  NSData *externalizedVersion
 @property  NSString *externalizedVersionString

  // class methods
  +[AKMasterToken tokenWithExternalizedVersion:lifetime:]
  +[AKMasterToken tokenWithExternalizedVersionString:]

  // instance methods
  -[AKMasterToken stringValue]
  -[AKMasterToken setStringValue:]
  -[AKMasterToken .cxx_destruct]
  -[AKMasterToken init]
  -[AKMasterToken _setEncryptedSessionKey:]
  -[AKMasterToken encryptedSessionKey]
  -[AKMasterToken updateWithHTTPURLResponse:]
  -[AKMasterToken sessionKey]
  -[AKMasterToken _setSessionKey:]
  -[AKMasterToken externalizedVersion]
  -[AKMasterToken externalizedVersionString]
  -[AKMasterToken initWithAppleID:altDSID:]


AKAppleIDSession : NSObject <NSURLSessionAppleIDContext>
 @property  <AKAnisetteServiceProtocol> *anisetteDataProvider
 @property  AKDevice *pairedDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKAppleIDSession supportsSecureCoding]

  // instance methods
  -[AKAppleIDSession pairedDevice]
  -[AKAppleIDSession _handleURLSwitchingResponse:forRequest:withCompletion:]
  -[AKAppleIDSession _generateAppleIDHeadersForSessionTask:withCompletion:]
  -[AKAppleIDSession setAnisetteDataProvider:]
  -[AKAppleIDSession initWithCoder:]
  -[AKAppleIDSession _handleAnissetteURLResponse:forRequest:withCompletion:]
  -[AKAppleIDSession initWithIdentifier:]
  -[AKAppleIDSession _pairedDeviceAnisetteController]
  -[AKAppleIDSession .cxx_destruct]
  -[AKAppleIDSession _genericAppleIDHeadersDictionaryForRequest:]
  -[AKAppleIDSession setPairedDevice:]
  -[AKAppleIDSession _nativeAnisetteController]
  -[AKAppleIDSession URLSession:task:getAppleIDRequestOrHeadersForResponse:completionHandler:]
  -[AKAppleIDSession init]
  -[AKAppleIDSession URLSession:task:getAppleIDHeadersForResponse:completionHandler:]
  -[AKAppleIDSession handleResponse:forRequest:shouldRetry:]
  -[AKAppleIDSession appleIDHeadersForRequest:]
  -[AKAppleIDSession _generateAppleIDHeadersForRequest:error:]
  -[AKAppleIDSession copyWithZone:]
  -[AKAppleIDSession relevantHTTPStatusCodes]
  -[AKAppleIDSession encodeWithCoder:]
  -[AKAppleIDSession anisetteDataProvider]


AKAnisetteData : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *machineID
 @property  NSString *oneTimePassword
 @property  unsigned long routingInfo

  // class methods
  +[AKAnisetteData supportsSecureCoding]

  // instance methods
  -[AKAnisetteData initWithCoder:]
  -[AKAnisetteData .cxx_destruct]
  -[AKAnisetteData setOneTimePassword:]
  -[AKAnisetteData oneTimePassword]
  -[AKAnisetteData setMachineID:]
  -[AKAnisetteData routingInfo]
  -[AKAnisetteData machineID]
  -[AKAnisetteData setRoutingInfo:]
  -[AKAnisetteData copyWithZone:]
  -[AKAnisetteData encodeWithCoder:]


AKFuture : NSObject
 @property  BOOL resolved
 @property  double maxWait
 @property  NSDate *beginDate
 @property  NSCondition *valueCondition
 @property  NSMutableArray *internalWrapper

  // instance methods
  -[AKFuture resolved]
  -[AKFuture .cxx_destruct]
  -[AKFuture beginDate]
  -[AKFuture setResolved:]
  -[AKFuture init]
  -[AKFuture setValue:]
  -[AKFuture initWithMaxWait:description:]
  -[AKFuture valueCondition]
  -[AKFuture setValueCondition:]
  -[AKFuture internalWrapper]
  -[AKFuture setInternalWrapper:]
  -[AKFuture value]
  -[AKFuture setBeginDate:]
  -[AKFuture maxWait]
  -[AKFuture setMaxWait:]


AKAnisetteProvisioningClientInterface : NSObject
  // class methods
  +[AKAnisetteProvisioningClientInterface XPCInterface]


AKAuthorizationCredential : NSObject <AKCredential>
 @property  BOOL isLikelyRealUser
 @property  NSArray *authorizedScopes
 @property  NSData *identityToken
 @property  NSData *authorizationCode
 @property  NSString *state
 @property  AKUserInformation *userInformation
 @property  NSString *transactionID
 @property  NSString *userIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKAuthorizationCredential supportsSecureCoding]

  // instance methods
  -[AKAuthorizationCredential userIdentifier]
  -[AKAuthorizationCredential initWithCoder:]
  -[AKAuthorizationCredential transactionID]
  -[AKAuthorizationCredential .cxx_destruct]
  -[AKAuthorizationCredential init]
  -[AKAuthorizationCredential state]
  -[AKAuthorizationCredential authorizedScopes]
  -[AKAuthorizationCredential isLikelyRealUser]
  -[AKAuthorizationCredential setIsLikelyRealUser:]
  -[AKAuthorizationCredential initWithServerResponse:]
  -[AKAuthorizationCredential authorizationCode]
  -[AKAuthorizationCredential userInformation]
  -[AKAuthorizationCredential encodeWithCoder:]
  -[AKAuthorizationCredential identityToken]


AKApplicationMetadataInfo : NSObject <NSSecureCoding>
 @property  NSString *authorizedAppListVersion
 @property  NSDictionary *teams

  // class methods
  +[AKApplicationMetadataInfo supportsSecureCoding]

  // instance methods
  -[AKApplicationMetadataInfo initWithCoder:]
  -[AKApplicationMetadataInfo teams]
  -[AKApplicationMetadataInfo initWithResponseInfo:]
  -[AKApplicationMetadataInfo .cxx_destruct]
  -[AKApplicationMetadataInfo authorizedAppListVersion]
  -[AKApplicationMetadataInfo encodeWithCoder:]


AKFollowUpController : NSObject <AKFollowUpProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKFollowUpController addFollowUpItems:error:]
  -[AKFollowUpController initWithFLFollowupController:]
  -[AKFollowUpController .cxx_destruct]
  -[AKFollowUpController clearNotificationsForItem:error:]
  -[AKFollowUpController pendingFollowUpItems:]
  -[AKFollowUpController removeAllFollowUpItems:]
  -[AKFollowUpController removeFollowUpItems:error:]
  -[AKFollowUpController removeFollowUpItemsWithIdentifiers:error:]


AKTrustedPhoneNumber : NSObject
 @property  NSNumber *identifier
 @property  NSString *number
 @property  NSString *numberWithDialCode
 @property  NSString *obfuscatedNumber
 @property  NSString *pushMode

  // instance methods
  -[AKTrustedPhoneNumber number]
  -[AKTrustedPhoneNumber .cxx_destruct]
  -[AKTrustedPhoneNumber initWithJSONDictionary:]
  -[AKTrustedPhoneNumber identifier]
  -[AKTrustedPhoneNumber pushMode]
  -[AKTrustedPhoneNumber setPushMode:]
  -[AKTrustedPhoneNumber numberWithDialCode]
  -[AKTrustedPhoneNumber setNumberWithDialCode:]
  -[AKTrustedPhoneNumber obfuscatedNumber]
  -[AKTrustedPhoneNumber setObfuscatedNumber:]
  -[AKTrustedPhoneNumber setIdentifier:]
  -[AKTrustedPhoneNumber setNumber:]


AKFollowUpServerPayloadFormatter : NSObject
  // class methods
  +[AKFollowUpServerPayloadFormatter pendingAuthKitFollowUpPayload:]


AKAuthorization : NSObject <NSSecureCoding>
 @property  <AKCredentialRequestProtocol> *authorizedRequest
 @property  <AKCredential> *credential

  // class methods
  +[AKAuthorization supportsSecureCoding]

  // instance methods
  -[AKAuthorization credential]
  -[AKAuthorization initWithCoder:]
  -[AKAuthorization .cxx_destruct]
  -[AKAuthorization setCredential:]
  -[AKAuthorization authorizedRequest]
  -[AKAuthorization setAuthorizedRequest:]
  -[AKAuthorization encodeWithCoder:]


AKIconContext : NSObject <NSSecureCoding>
 @property  NSData *data
 @property  NSNumber *scale
 @property  unsigned long maskingStyle
 @property  NSString *appName

  // class methods
  +[AKIconContext supportsSecureCoding]

  // instance methods
  -[AKIconContext appName]
  -[AKIconContext initWithCoder:]
  -[AKIconContext .cxx_destruct]
  -[AKIconContext data]
  -[AKIconContext init]
  -[AKIconContext setMaskingStyle:]
  -[AKIconContext maskingStyle]
  -[AKIconContext setScale:]
  -[AKIconContext setData:]
  -[AKIconContext scale]
  -[AKIconContext encodeWithCoder:]
  -[AKIconContext setAppName:]


AKAbsintheSigner : NSObject
  // class methods
  +[AKAbsintheSigner sharedSigner]

  // instance methods
  -[AKAbsintheSigner .cxx_destruct]
  -[AKAbsintheSigner signatureForURLRequest:completionHandler:]
  -[AKAbsintheSigner _generateSignatureForRequest:completionHandler:]
  -[AKAbsintheSigner _createSigningContextWithCompletionHandler:]
  -[AKAbsintheSigner _didSigningContextExpire]
  -[AKAbsintheSigner _destroySigningContext]
  -[AKAbsintheSigner _sessionInfoFromCertificateData:]
  -[AKAbsintheSigner _establishSessionWithInfo:sessionURL:completionHandler:]
  -[AKAbsintheSigner signatureForURLRequest:]
  -[AKAbsintheSigner dealloc]


AKCoordinatedDataBlock : NSObject
  // class methods
  +[AKCoordinatedDataBlock startCoordinatingBlock:]

  // instance methods
  -[AKCoordinatedDataBlock setCompletion:]
  -[AKCoordinatedDataBlock .cxx_destruct]
  -[AKCoordinatedDataBlock _start]
  -[AKCoordinatedDataBlock initWithBlock:]
  -[AKCoordinatedDataBlock _callCompletionWithData:error:]
  -[AKCoordinatedDataBlock start]


AKCDPFactory : NSObject
  // class methods
  +[AKCDPFactory followUpRepairContext]
  +[AKCDPFactory cdpStateUIController]
  +[AKCDPFactory followUpController]
  +[AKCDPFactory stateControllerWithContext:]
  +[AKCDPFactory cdpErrorDomain]
  +[AKCDPFactory cdpIDMSRecordMIDKey]
  +[AKCDPFactory cdpAccountIsICDPEnabledForDSID:]
  +[AKCDPFactory cdpUIControllerWithPresentingViewController:]
  +[AKCDPFactory accountRecoveryControllerWithPresentingViewController:]
  +[AKCDPFactory contextWithAuthResults:]
  +[AKCDPFactory cdpIDMSRecordPRKKey]
  +[AKCDPFactory recoveryControllerWithContext:]
  +[AKCDPFactory context]


AKPasswordRequest : AKCredentialRequest

AKCircleRequestContext : NSObject <NSSecureCoding>
 @property  NSString *identityTokenValue
 @property  NSString *heartbeatTokenValue
 @property  NSString *pushToken
 @property  BOOL _notifyOfTimeout
 @property  AKCircleRequestPayload *payload
 @property  BOOL waitForReply
 @property  double waitForReplyTimeout

  // class methods
  +[AKCircleRequestContext supportsSecureCoding]

  // instance methods
  -[AKCircleRequestContext setPayload:]
  -[AKCircleRequestContext initWithCoder:]
  -[AKCircleRequestContext payload]
  -[AKCircleRequestContext .cxx_destruct]
  -[AKCircleRequestContext pushToken]
  -[AKCircleRequestContext init]
  -[AKCircleRequestContext setPushToken:]
  -[AKCircleRequestContext waitForReply]
  -[AKCircleRequestContext setWaitForReply:]
  -[AKCircleRequestContext waitForReplyTimeout]
  -[AKCircleRequestContext setWaitForReplyTimeout:]
  -[AKCircleRequestContext identityTokenValue]
  -[AKCircleRequestContext setIdentityTokenValue:]
  -[AKCircleRequestContext heartbeatTokenValue]
  -[AKCircleRequestContext setHeartbeatTokenValue:]
  -[AKCircleRequestContext _notifyOfTimeout]
  -[AKCircleRequestContext set_notifyOfTimeout:]
  -[AKCircleRequestContext encodeWithCoder:]


AKUsernameFormatter : NSObject
  // class methods
  +[AKUsernameFormatter formattedUsernameFromUsername:]


AKAuthorizationClientImpl : NSObject <AKAuthorizationClientProtocol>
 @property  <AKAuthorizationUIProvider> *uiProvider

  // instance methods
  -[AKAuthorizationClientImpl uiProvider]
  -[AKAuthorizationClientImpl setUiProvider:]
  -[AKAuthorizationClientImpl .cxx_destruct]
  -[AKAuthorizationClientImpl presentAuthorizationUIForContext:completion:]


AKAnisetteProvisioningDaemonInterface : NSObject
  // class methods
  +[AKAnisetteProvisioningDaemonInterface XPCInterface]


AKFollowUpSynchronizer : NSObject <AKAppleIDAuthenticationDelegate>
 @property  <AKFollowUpProvider> *followupProvider
 @property  AKAppleIDAuthenticationController *controller
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKFollowUpSynchronizer updateSynchronizeTimeForAccount:inStore:]
  +[AKFollowUpSynchronizer updateSynchronizeTimeNoSaveForAccount:]

  // instance methods
  -[AKFollowUpSynchronizer _authController]
  -[AKFollowUpSynchronizer setController:]
  -[AKFollowUpSynchronizer authenticationController:shouldContinueWithAuthenticationResults:error:forContext:]
  -[AKFollowUpSynchronizer controller]
  -[AKFollowUpSynchronizer .cxx_destruct]
  -[AKFollowUpSynchronizer shouldSynchronizeForAccount:]
  -[AKFollowUpSynchronizer followupProvider]
  -[AKFollowUpSynchronizer setFollowupProvider:]
  -[AKFollowUpSynchronizer synchronizeFollowUpsForAccount:inStore:error:]


AKAuthorizationPresentationContext : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *bundleID
 @property  BOOL signInAllowsPCSKeyAccess
 @property  NSString *localizedAppName
 @property  NSString *informativeText
 @property  NSString *iconName
 @property  NSData *iconData
 @property  NSNumber *iconScale
 @property  AKCredentialRequestContext *credentialRequestContext
 @property  AKUserInformation *userInformation
 @property  NSArray *loginChoices

  // class methods
  +[AKAuthorizationPresentationContext supportsSecureCoding]
  +[AKAuthorizationPresentationContext presentationContextForRequestContext:client:]

  // instance methods
  -[AKAuthorizationPresentationContext bundleID]
  -[AKAuthorizationPresentationContext localizedAppName]
  -[AKAuthorizationPresentationContext initWithCoder:]
  -[AKAuthorizationPresentationContext .cxx_destruct]
  -[AKAuthorizationPresentationContext setUserInformation:]
  -[AKAuthorizationPresentationContext iconScale]
  -[AKAuthorizationPresentationContext iconData]
  -[AKAuthorizationPresentationContext initWithContext:bundleID:]
  -[AKAuthorizationPresentationContext setBundleID:]
  -[AKAuthorizationPresentationContext initWithContext:client:]
  -[AKAuthorizationPresentationContext setLocalizedAppName:]
  -[AKAuthorizationPresentationContext loginChoices]
  -[AKAuthorizationPresentationContext _addPresenterParameters]
  -[AKAuthorizationPresentationContext _addPresentationParametersForContext:]
  -[AKAuthorizationPresentationContext initWithUsername:]
  -[AKAuthorizationPresentationContext signInAllowsPCSKeyAccess]
  -[AKAuthorizationPresentationContext setSignInAllowsPCSKeyAccess:]
  -[AKAuthorizationPresentationContext credentialRequestContext]
  -[AKAuthorizationPresentationContext setCredentialRequestContext:]
  -[AKAuthorizationPresentationContext setLoginChoices:]
  -[AKAuthorizationPresentationContext informativeText]
  -[AKAuthorizationPresentationContext userInformation]
  -[AKAuthorizationPresentationContext copyWithZone:]
  -[AKAuthorizationPresentationContext iconName]
  -[AKAuthorizationPresentationContext encodeWithCoder:]


AKNetworkObserver : NSObject
 @property  BOOL isNetworkReachable

  // class methods
  +[AKNetworkObserver sharedNetworkObserver]

  // instance methods
  -[AKNetworkObserver isNetworkReachable]
  -[AKNetworkObserver addNetworkReachableObserver:selector:]
  -[AKNetworkObserver _startPathMonitor]
  -[AKNetworkObserver .cxx_destruct]
  -[AKNetworkObserver init]
  -[AKNetworkObserver removeNetworkReachableObserver:]
  -[AKNetworkObserver _stopPathMonitor]
  -[AKNetworkObserver _networkReachabilityDidChange]
  -[AKNetworkObserver dealloc]


AKServerRequestConfiguration : NSObject <NSSecureCoding>
 @property  NSURLRequest *request
 @property  AKAppleIDServerResourceLoadDelegate *resourceLoadDelegate
 @property  unsigned long requestType
 @property  unsigned long presentationType
 @property  NSArray *whitelistedPathURLs

  // class methods
  +[AKServerRequestConfiguration supportsSecureCoding]

  // instance methods
  -[AKServerRequestConfiguration setRequest:]
  -[AKServerRequestConfiguration setPresentationType:]
  -[AKServerRequestConfiguration presentationType]
  -[AKServerRequestConfiguration initWithCoder:]
  -[AKServerRequestConfiguration setRequestType:]
  -[AKServerRequestConfiguration .cxx_destruct]
  -[AKServerRequestConfiguration setResourceLoadDelegate:]
  -[AKServerRequestConfiguration requestType]
  -[AKServerRequestConfiguration request]
  -[AKServerRequestConfiguration resourceLoadDelegate]
  -[AKServerRequestConfiguration initWithRequest:requestType:]
  -[AKServerRequestConfiguration whitelistedPathURLs]
  -[AKServerRequestConfiguration setWhitelistedPathURLs:]
  -[AKServerRequestConfiguration encodeWithCoder:]


AKBaseFollowupManager : NSObject
  // instance methods
  -[AKBaseFollowupManager teardownFollowUpWithContext:completion:]
  -[AKBaseFollowupManager .cxx_destruct]
  -[AKBaseFollowupManager initWithFollowUpFactory:provider:]
  -[AKBaseFollowupManager _alignedInsertionCandidates:withExistingItems:]
  -[AKBaseFollowupManager synchronizeFollowUpsWithServerPayload:altDSID:error:]


AKTrustedContactsSyncResult : NSObject <NSSecureCoding, NSCopying>
 @property  NSArray *orphanedCustodianUUIDs
 @property  NSString *custodianListVersion
 @property  NSArray *orphanedBeneficiaryUUIDs
 @property  NSString *beneficiaryListVersion

  // class methods
  +[AKTrustedContactsSyncResult supportsSecureCoding]

  // instance methods
  -[AKTrustedContactsSyncResult initWithCoder:]
  -[AKTrustedContactsSyncResult .cxx_destruct]
  -[AKTrustedContactsSyncResult orphanedCustodianUUIDs]
  -[AKTrustedContactsSyncResult setOrphanedCustodianUUIDs:]
  -[AKTrustedContactsSyncResult custodianListVersion]
  -[AKTrustedContactsSyncResult setCustodianListVersion:]
  -[AKTrustedContactsSyncResult orphanedBeneficiaryUUIDs]
  -[AKTrustedContactsSyncResult setOrphanedBeneficiaryUUIDs:]
  -[AKTrustedContactsSyncResult beneficiaryListVersion]
  -[AKTrustedContactsSyncResult setBeneficiaryListVersion:]
  -[AKTrustedContactsSyncResult copyWithZone:]
  -[AKTrustedContactsSyncResult encodeWithCoder:]


AKAuthorizationAppSignInDiscovery : NSObject
  // instance methods
  -[AKAuthorizationAppSignInDiscovery .cxx_destruct]
  -[AKAuthorizationAppSignInDiscovery init]
  -[AKAuthorizationAppSignInDiscovery startDiscoveryWithCompletion:]
  -[AKAuthorizationAppSignInDiscovery dealloc]


AKPasswordCredential : NSObject <AKCredential>
 @property  NSString *password
 @property  NSString *userIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKPasswordCredential supportsSecureCoding]

  // instance methods
  -[AKPasswordCredential userIdentifier]
  -[AKPasswordCredential initWithCoder:]
  -[AKPasswordCredential password]
  -[AKPasswordCredential .cxx_destruct]
  -[AKPasswordCredential initWithUser:password:]
  -[AKPasswordCredential encodeWithCoder:]


AKAuthorizationRequest : AKCredentialRequest
 @property  long long existingStatus
 @property  ACAccount *internalAuthKitAccount
 @property  BOOL _isSilentAppTransfer
 @property  BOOL _clientAuthenticatedExternallyWithPassword
 @property  NSString *_externalAuthToken
 @property  NSArray *requestedScopes
 @property  NSDictionary *appProvidedData
 @property  BOOL isEligibleForUpgradeFromPassword
 @property  NSString *state
 @property  NSString *nonce
 @property  NSString *clientID
 @property  NSString *teamID
 @property  ACAccount *authkitAccount

  // class methods
  +[AKAuthorizationRequest supportsSecureCoding]

  // instance methods
  -[AKAuthorizationRequest teamID]
  -[AKAuthorizationRequest initWithCoder:]
  -[AKAuthorizationRequest altDSID]
  -[AKAuthorizationRequest _sanitizedCopy]
  -[AKAuthorizationRequest initWithAltDSID:]
  -[AKAuthorizationRequest appProvidedData]
  -[AKAuthorizationRequest .cxx_destruct]
  -[AKAuthorizationRequest setAppProvidedData:]
  -[AKAuthorizationRequest setIsEligibleForUpgradeFromPassword:]
  -[AKAuthorizationRequest authkitAccount]
  -[AKAuthorizationRequest isEligibleForUpgradeFromPassword]
  -[AKAuthorizationRequest setState:]
  -[AKAuthorizationRequest _externalAuthToken]
  -[AKAuthorizationRequest init]
  -[AKAuthorizationRequest setClientID:]
  -[AKAuthorizationRequest state]
  -[AKAuthorizationRequest setNonce:]
  -[AKAuthorizationRequest setAuthkitAccount:]
  -[AKAuthorizationRequest _isSilentAppTransfer]
  -[AKAuthorizationRequest set_clientAuthenticatedExternallyWithPassword:]
  -[AKAuthorizationRequest internalAuthKitAccount]
  -[AKAuthorizationRequest set_isSilentAppTransfer:]
  -[AKAuthorizationRequest _clientAuthenticatedExternallyWithPassword]
  -[AKAuthorizationRequest requestedScopes]
  -[AKAuthorizationRequest existingStatus]
  -[AKAuthorizationRequest setExistingStatus:]
  -[AKAuthorizationRequest set_externalAuthToken:]
  -[AKAuthorizationRequest setRequestedScopes:]
  -[AKAuthorizationRequest nonce]
  -[AKAuthorizationRequest copyWithZone:]
  -[AKAuthorizationRequest encodeWithCoder:]
  -[AKAuthorizationRequest setTeamID:]
  -[AKAuthorizationRequest clientID]


AKAuthHandlerImpl : NSObject <AKAuthHandler>
 @property  BOOL forceSilentAuth
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKAuthHandlerImpl forceSilentAuth]
  -[AKAuthHandlerImpl reauthenticateWithContext:completionWithResults:]
  -[AKAuthHandlerImpl buildReauthenticationContextFromContext:error:]
  -[AKAuthHandlerImpl reauthenticateWithContext:completion:]
  -[AKAuthHandlerImpl setForceSilentAuth:]


AKAuthorizationDaemonConnection : NSObject
 @property  NSXPCListenerEndpoint *listenerEndpoint

  // instance methods
  -[AKAuthorizationDaemonConnection listenerEndpoint]
  -[AKAuthorizationDaemonConnection _connection]
  -[AKAuthorizationDaemonConnection _connectionInvalidationHandler]
  -[AKAuthorizationDaemonConnection synchronousRemoteObjectProxyWithErrorHandler:]
  -[AKAuthorizationDaemonConnection .cxx_destruct]
  -[AKAuthorizationDaemonConnection remoteObjectProxyWithErrorHandler:]
  -[AKAuthorizationDaemonConnection init]
  -[AKAuthorizationDaemonConnection _connectionInterruptionHandler]
  -[AKAuthorizationDaemonConnection initWithListenerEndpoint:exportedInterface:]
  -[AKAuthorizationDaemonConnection dealloc]


AKAuthorizationValidator : NSObject
  // class methods
  +[AKAuthorizationValidator canPerformAuthorizationRequest:error:]
  +[AKAuthorizationValidator canPerformPasswordRequest:error:]
  +[AKAuthorizationValidator _requirePasscodeSet]
  +[AKAuthorizationValidator canPerformCredentialRequest:error:]
  +[AKAuthorizationValidator shouldContinueWithResponse:error:]


AKCredentialRequest : NSObject <AKCredentialRequestProtocol>
 @property  NSString *userIdentifier
 @property  NSString *altDSID
 @property  NSUUID *requestIdentifier
 @property  NSUUID *transactionID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKCredentialRequest supportsSecureCoding]

  // instance methods
  -[AKCredentialRequest setRequestIdentifier:]
  -[AKCredentialRequest requestIdentifier]
  -[AKCredentialRequest userIdentifier]
  -[AKCredentialRequest initWithCoder:]
  -[AKCredentialRequest altDSID]
  -[AKCredentialRequest setUserIdentifier:]
  -[AKCredentialRequest transactionID]
  -[AKCredentialRequest .cxx_destruct]
  -[AKCredentialRequest init]
  -[AKCredentialRequest copyWithZone:]
  -[AKCredentialRequest encodeWithCoder:]


AKAuthorizationNotificationService : NSObject
  // class methods
  +[AKAuthorizationNotificationService startServiceWithNotificationHandler:]
  +[AKAuthorizationNotificationService startServiceWithStateBroadcastHandler:]
  +[AKAuthorizationNotificationService _sharedService]

  // instance methods
  -[AKAuthorizationNotificationService .cxx_destruct]
  -[AKAuthorizationNotificationService init]
  -[AKAuthorizationNotificationService initWithDaemonXPCEndpoint:]
  -[AKAuthorizationNotificationService startWithNotificationHandler:]
  -[AKAuthorizationNotificationService startWithStateBroadcastHandler:]
  -[AKAuthorizationNotificationService _configureNotificationService]
  -[AKAuthorizationNotificationService _configureStateBroadcastService]


AKUserInformation : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *givenName
 @property  NSString *familyName
 @property  NSString *forwardingEmail
 @property  NSString *previouslySelectedEmail
 @property  NSString *primaryEmailAddress
 @property  NSString *accountName
 @property  NSArray *accountAliases
 @property  NSArray *reachableEmails
 @property  NSString *authorizedApplicationsListVersion
 @property  NSString *masterKeyID
 @property  NSNumber *vettedPrimaryEmail
 @property  NSNumber *phoneAsAppleID
 @property  NSNumber *isUnderage
 @property  NSNumber *ageOfMajority
 @property  NSNumber *isLegacyStudent
 @property  NSString *appleIDCountryCode
 @property  NSNumber *hasUsedAuthorization
 @property  NSNumber *previouslyWantedPrivateEmail
 @property  NSNumber *custodianEnabled
 @property  NSNumber *canHaveCustodian
 @property  NSNumber *canBeCustodian
 @property  NSNumber *canHaveBeneficiary
 @property  NSNumber *canBeBeneficiary
 @property  NSNumber *hasMDM
 @property  unsigned long appleIDSecurityLevel
 @property  unsigned long authMode
 @property  unsigned long repairState
 @property  NSString *selectedEmail
 @property  NSDictionary *additionalInfo
 @property  NSString *privateEmailListVersion

  // class methods
  +[AKUserInformation supportsSecureCoding]

  // instance methods
  -[AKUserInformation familyName]
  -[AKUserInformation additionalInfo]
  -[AKUserInformation setAccountName:]
  -[AKUserInformation initWithCoder:]
  -[AKUserInformation setFamilyName:]
  -[AKUserInformation .cxx_destruct]
  -[AKUserInformation initWithResponseBody:]
  -[AKUserInformation hasMDM]
  -[AKUserInformation primaryEmailAddress]
  -[AKUserInformation accountName]
  -[AKUserInformation accountAliases]
  -[AKUserInformation setPrimaryEmailAddress:]
  -[AKUserInformation setGivenName:]
  -[AKUserInformation authMode]
  -[AKUserInformation masterKeyID]
  -[AKUserInformation setHasMDM:]
  -[AKUserInformation repairState]
  -[AKUserInformation setSelectedEmail:]
  -[AKUserInformation setAuthMode:]
  -[AKUserInformation setIsUnderage:]
  -[AKUserInformation setForwardingEmail:]
  -[AKUserInformation setAccountAliases:]
  -[AKUserInformation setReachableEmails:]
  -[AKUserInformation setAuthorizedApplicationsListVersion:]
  -[AKUserInformation setMasterKeyID:]
  -[AKUserInformation setVettedPrimaryEmail:]
  -[AKUserInformation setPhoneAsAppleID:]
  -[AKUserInformation setHasUsedAuthorization:]
  -[AKUserInformation setAgeOfMajority:]
  -[AKUserInformation setPreviouslySelectedEmail:]
  -[AKUserInformation selectedEmail]
  -[AKUserInformation setPreviouslyWantedPrivateEmail:]
  -[AKUserInformation setIsLegacyStudent:]
  -[AKUserInformation setAppleIDSecurityLevel:]
  -[AKUserInformation setRepairState:]
  -[AKUserInformation setCanBeCustodian:]
  -[AKUserInformation setCanHaveCustodian:]
  -[AKUserInformation setCanBeBeneficiary:]
  -[AKUserInformation setCanHaveBeneficiary:]
  -[AKUserInformation setPrivateEmailListVersion:]
  -[AKUserInformation setCustodianEnabled:]
  -[AKUserInformation setAppleIDCountryCode:]
  -[AKUserInformation forwardingEmail]
  -[AKUserInformation previouslySelectedEmail]
  -[AKUserInformation reachableEmails]
  -[AKUserInformation authorizedApplicationsListVersion]
  -[AKUserInformation vettedPrimaryEmail]
  -[AKUserInformation phoneAsAppleID]
  -[AKUserInformation ageOfMajority]
  -[AKUserInformation isLegacyStudent]
  -[AKUserInformation hasUsedAuthorization]
  -[AKUserInformation previouslyWantedPrivateEmail]
  -[AKUserInformation appleIDSecurityLevel]
  -[AKUserInformation privateEmailListVersion]
  -[AKUserInformation appleIDCountryCode]
  -[AKUserInformation custodianEnabled]
  -[AKUserInformation canHaveCustodian]
  -[AKUserInformation canBeCustodian]
  -[AKUserInformation canHaveBeneficiary]
  -[AKUserInformation canBeBeneficiary]
  -[AKUserInformation copyWithZone:]
  -[AKUserInformation isUnderage]
  -[AKUserInformation setAdditionalInfo:]
  -[AKUserInformation givenName]
  -[AKUserInformation encodeWithCoder:]


AKDevice : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *serialNumber
 @property  NSString *userChosenName
 @property  NSString *userFullName
 @property  NSString *internationalMobileEquipmentIdentity
 @property  NSString *internationalMobileEquipmentIdentity2
 @property  BOOL isBiometricAuthCapable
 @property  BOOL isFaceIDCapable
 @property  BOOL isUnlocked
 @property  BOOL isInCircle
 @property  NSString *phoneNumber
 @property  NSString *mobileEquipmentIdentifier
 @property  NSString *integratedCircuitCardIdentifier
 @property  BOOL isInternalBuild
 @property  BOOL isMultiUserMode
 @property  NSData *serializedData
 @property  NSString *serverFriendlyDescription
 @property  NSString *uniqueDeviceIdentifier
 @property  NSString *provisioningDeviceIdentifier
 @property  NSString *color
 @property  NSString *enclosureColor
 @property  NSNumber *coverGlassColor
 @property  NSNumber *housingColor
 @property  NSNumber *backingColor
 @property  NSLocale *locale
 @property  NSString *MLBSerialNumber
 @property  NSString *ROMAddress
 @property  NSString *modelNumber
 @property  unsigned long linkType
 @property  NSString *localUserUUID
 @property  BOOL isProtectedWithPasscode

  // class methods
  +[AKDevice currentDevice]
  +[AKDevice _osName]
  +[AKDevice activeIDSPeerDevice]
  +[AKDevice deviceSpecificLocalizedStringWithKey:]
  +[AKDevice _generateServerFriendlyDescriptionForPairedDevice:]
  +[AKDevice deviceSpecificLocalizedStringWithKey:inTable:]
  +[AKDevice systemContainerCacheURL]
  +[AKDevice supportsSecureCoding]
  +[AKDevice deviceWithSerializedData:]
  +[AKDevice currentDeviceAuthenticationModeForAuthContext:]
  +[AKDevice currentDeviceAuthenticationMode]
  +[AKDevice _systemVersionDictionary]
  +[AKDevice _currentDeviceAuthenticationMode]
  +[AKDevice _buildNumber]
  +[AKDevice hasUniqueDeviceIdentifier]
  +[AKDevice _osVersion]
  +[AKDevice _hardwareModel]
  +[AKDevice systemContainerURL]

  // instance methods
  -[AKDevice modelNumber]
  -[AKDevice serialNumber]
  -[AKDevice isUnlocked]
  -[AKDevice _telephonyConnection]
  -[AKDevice uniqueDeviceIdentifier]
  -[AKDevice setLocale:]
  -[AKDevice initWithCoder:]
  -[AKDevice _volumeGroupUUID]
  -[AKDevice setEnclosureColor:]
  -[AKDevice enclosureColor]
  -[AKDevice provisioningDeviceIdentifier]
  -[AKDevice internationalMobileEquipmentIdentity]
  -[AKDevice color]
  -[AKDevice .cxx_destruct]
  -[AKDevice _setShouldUpdateToValue:]
  -[AKDevice setServerFriendlyDescription:]
  -[AKDevice setProvisioningDeviceIdentifier:]
  -[AKDevice backingColor]
  -[AKDevice setMLBSerialNumber:]
  -[AKDevice serializedData]
  -[AKDevice setROMAddress:]
  -[AKDevice setColor:]
  -[AKDevice linkType]
  -[AKDevice phoneNumber]
  -[AKDevice init]
  -[AKDevice mobileEquipmentIdentifier]
  -[AKDevice isInternalBuild]
  -[AKDevice locale]
  -[AKDevice userFullName]
  -[AKDevice setModelNumber:]
  -[AKDevice setBackingColor:]
  -[AKDevice isFaceIDCapable]
  -[AKDevice isProtectedWithPasscode]
  -[AKDevice coverGlassColor]
  -[AKDevice housingColor]
  -[AKDevice internationalMobileEquipmentIdentity2]
  -[AKDevice setCoverGlassColor:]
  -[AKDevice isMultiUserMode]
  -[AKDevice isBiometricAuthCapable]
  -[AKDevice setLinkType:]
  -[AKDevice userChosenName]
  -[AKDevice isInCircle]
  -[AKDevice setUniqueDeviceIdentifier:]
  -[AKDevice dealloc]
  -[AKDevice integratedCircuitCardIdentifier]
  -[AKDevice localUserUUID]
  -[AKDevice copyWithZone:]
  -[AKDevice setHousingColor:]
  -[AKDevice serverFriendlyDescription]
  -[AKDevice encodeWithCoder:]
  -[AKDevice MLBSerialNumber]
  -[AKDevice ROMAddress]


AKUtilities : AFUtilities

AKAnisetteProvisioningController : NSObject
 @property  AKDevice *targetDevice
 @property  <AKAnisetteServiceProtocol> *anisetteDataProvider

  // instance methods
  -[AKAnisetteProvisioningController targetDevice]
  -[AKAnisetteProvisioningController setAnisetteDataProvider:]
  -[AKAnisetteProvisioningController .cxx_destruct]
  -[AKAnisetteProvisioningController eraseWithCompletion:]
  -[AKAnisetteProvisioningController provisionWithCompletion:]
  -[AKAnisetteProvisioningController setTargetDevice:]
  -[AKAnisetteProvisioningController init]
  -[AKAnisetteProvisioningController legacyAnisetteDataForDSID:withCompletion:]
  -[AKAnisetteProvisioningController initWithDaemonXPCEndpoint:]
  -[AKAnisetteProvisioningController fetchAttestationForRequest:completion:]
  -[AKAnisetteProvisioningController _anisetteServiceConnection]
  -[AKAnisetteProvisioningController syncWithSIMData:completion:]
  -[AKAnisetteProvisioningController fetchAnisetteDataAndProvisionIfNecessary:error:]
  -[AKAnisetteProvisioningController fetchAnisetteDataAndProvisionIfNecessary:withCompletion:]
  -[AKAnisetteProvisioningController anisetteDataWithCompletion:]
  -[AKAnisetteProvisioningController anisetteDataForURLRequest:error:]
  -[AKAnisetteProvisioningController anisetteDataForURLRequest:completion:]
  -[AKAnisetteProvisioningController initForDevice:provider:]
  -[AKAnisetteProvisioningController dealloc]
  -[AKAnisetteProvisioningController anisetteDataWithError:]
  -[AKAnisetteProvisioningController anisetteDataProvider]


_AKAnisetteProviderProxy : NSObject <AKAnisetteProvisioningClientProtocol>
 @property  <AKAnisetteServiceProtocol> *anisetteDataProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AKAnisetteProviderProxy eraseAnisetteForContext:withCompletion:]
  -[_AKAnisetteProviderProxy setAnisetteDataProvider:]
  -[_AKAnisetteProviderProxy .cxx_destruct]
  -[_AKAnisetteProviderProxy initWithProvider:]
  -[_AKAnisetteProviderProxy provisionAnisetteForContext:withCompletion:]
  -[_AKAnisetteProviderProxy legacyAnisetteDataForContext:DSID:withCompletion:]
  -[_AKAnisetteProviderProxy syncAnisetteForContext:withSIMData:completion:]
  -[_AKAnisetteProviderProxy fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
  -[_AKAnisetteProviderProxy anisetteDataProvider]


AKAppleIDAuthenticationCommandLineContext : AKAppleIDAuthenticationContext <AKAppleIDServerAuthenticationUIProvider>
 @property  NSString *securityCode
 @property  AKCommandLineUtilities *utility
 @property  NSString *rootPath
 @property  NSNumber *secondFactorCode
 @property  long long verificationType
 @property  NSString *phoneNumber
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSDate *birthday
 @property  BOOL termsAccepted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKAppleIDAuthenticationCommandLineContext firstName]
  -[AKAppleIDAuthenticationCommandLineContext _capabilityForUIDisplay]
  -[AKAppleIDAuthenticationCommandLineContext lastName]
  -[AKAppleIDAuthenticationCommandLineContext setPhoneNumber:]
  -[AKAppleIDAuthenticationCommandLineContext securityCode]
  -[AKAppleIDAuthenticationCommandLineContext setSecurityCode:]
  -[AKAppleIDAuthenticationCommandLineContext presentBasicLoginUIWithCompletion:]
  -[AKAppleIDAuthenticationCommandLineContext dismissBasicLoginUIWithCompletion:]
  -[AKAppleIDAuthenticationCommandLineContext presentLoginAlertWithError:title:message:completion:]
  -[AKAppleIDAuthenticationCommandLineContext presentSecondFactorUIWithCompletion:]
  -[AKAppleIDAuthenticationCommandLineContext dismissSecondFactorUIWithCompletion:]
  -[AKAppleIDAuthenticationCommandLineContext presentSecondFactorAlertWithError:title:message:completion:]
  -[AKAppleIDAuthenticationCommandLineContext .cxx_destruct]
  -[AKAppleIDAuthenticationCommandLineContext presentServerProvidedUIWithConfiguration:completion:]
  -[AKAppleIDAuthenticationCommandLineContext dismissServerProvidedUIWithCompletion:]
  -[AKAppleIDAuthenticationCommandLineContext rootPath]
  -[AKAppleIDAuthenticationCommandLineContext setFirstName:]
  -[AKAppleIDAuthenticationCommandLineContext phoneNumber]
  -[AKAppleIDAuthenticationCommandLineContext birthday]
  -[AKAppleIDAuthenticationCommandLineContext init]
  -[AKAppleIDAuthenticationCommandLineContext setLastName:]
  -[AKAppleIDAuthenticationCommandLineContext setNeedsNewAppleID:]
  -[AKAppleIDAuthenticationCommandLineContext termsAccepted]
  -[AKAppleIDAuthenticationCommandLineContext setTermsAccepted:]
  -[AKAppleIDAuthenticationCommandLineContext verificationType]
  -[AKAppleIDAuthenticationCommandLineContext setBirthday:]
  -[AKAppleIDAuthenticationCommandLineContext _rootPath]
  -[AKAppleIDAuthenticationCommandLineContext utility]
  -[AKAppleIDAuthenticationCommandLineContext initWithVerificationType:]
  -[AKAppleIDAuthenticationCommandLineContext _promptForUsername]
  -[AKAppleIDAuthenticationCommandLineContext _promptForPassword]
  -[AKAppleIDAuthenticationCommandLineContext secondFactorCode]
  -[AKAppleIDAuthenticationCommandLineContext setSecondFactorCode:]
  -[AKAppleIDAuthenticationCommandLineContext _presentServerUISecondFactorWithConfiguration:completion:]
  -[AKAppleIDAuthenticationCommandLineContext _accountDictionary]
  -[AKAppleIDAuthenticationCommandLineContext _beginDataTaskWithRequest:configuration:completion:]
  -[AKAppleIDAuthenticationCommandLineContext _parseHeaderTitleForPasscodeView:]
  -[AKAppleIDAuthenticationCommandLineContext _promptForVerificationCodeWithSecureEntry:forTrustedNumber:]
  -[AKAppleIDAuthenticationCommandLineContext _xmlUIRequestForURL:withPostbackDictionary:]
  -[AKAppleIDAuthenticationCommandLineContext _promptForPhoneNumber]
  -[AKAppleIDAuthenticationCommandLineContext _verifySecondFactorCodeWithRequest:completion:]
  -[AKAppleIDAuthenticationCommandLineContext _handleServerUIBirthdayVerificationWithResponseDictionary:configuration:completion:]
  -[AKAppleIDAuthenticationCommandLineContext _handleServerUISMSVerificationWithResponseDictionary:statusCode:configuration:completion:]
  -[AKAppleIDAuthenticationCommandLineContext _accountCreationRequestBodyFromResponseDictionary:shouldIncludePhoneNumber:shouldIncludeForSecurityCode:]
  -[AKAppleIDAuthenticationCommandLineContext _handleServerUIPasswordVerificationWithResponseDictionary:configuration:completion:]
  -[AKAppleIDAuthenticationCommandLineContext _promptUserForTermsWithResponseDictionary:]
  -[AKAppleIDAuthenticationCommandLineContext _handleServerUIPhoneVerificationWithResponseDictionary:configuration:completion:]
  -[AKAppleIDAuthenticationCommandLineContext _collectAndPostSecondFactorCodeWithRequestBody:configuration:completion:]
  -[AKAppleIDAuthenticationCommandLineContext _jsonPostbackDictionaryForCode:numberId:]
  -[AKAppleIDAuthenticationCommandLineContext _createContextDictionaryFromResponse:]
  -[AKAppleIDAuthenticationCommandLineContext _promptUserForSelectionWithTrustedNumbers:]
  -[AKAppleIDAuthenticationCommandLineContext _collectAndHandleTermsAndConditionsWithResponseDictionary:configuration:completion:]
  -[AKAppleIDAuthenticationCommandLineContext _parseTrustedPhoneNumberFromResponseDictionary:]
  -[AKAppleIDAuthenticationCommandLineContext _promptForFirstName]
  -[AKAppleIDAuthenticationCommandLineContext _promptForLastName]
  -[AKAppleIDAuthenticationCommandLineContext _promptForBirthday]
  -[AKAppleIDAuthenticationCommandLineContext _handleServerUIWithDictionary:statusCode:configuration:completion:]
  -[AKAppleIDAuthenticationCommandLineContext _handleServerUISecondFactorWithObjectModel:configuration:completion:]
  -[AKAppleIDAuthenticationCommandLineContext _xmlUIRequestForURL:withServerInfo:]


AKBeneficiaryAliasSetupResult : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *beneficiaryAltDSID
 @property  NSString *beneficiaryAccountName

  // class methods
  +[AKBeneficiaryAliasSetupResult supportsSecureCoding]

  // instance methods
  -[AKBeneficiaryAliasSetupResult initWithCoder:]
  -[AKBeneficiaryAliasSetupResult .cxx_destruct]
  -[AKBeneficiaryAliasSetupResult copyWithZone:]
  -[AKBeneficiaryAliasSetupResult beneficiaryAltDSID]
  -[AKBeneficiaryAliasSetupResult setBeneficiaryAltDSID:]
  -[AKBeneficiaryAliasSetupResult beneficiaryAccountName]
  -[AKBeneficiaryAliasSetupResult setBeneficiaryAccountName:]
  -[AKBeneficiaryAliasSetupResult encodeWithCoder:]


AKAppleIDAuthenticationContext : NSObject <AKAppleIDAuthenticationLimitedUIProvider, AKAuthenticationContext, NSSecureCoding>
 @property  NSString *generatedCode
 @property  NSNumber *latitude
 @property  NSNumber *longitude
 @property  NSString *deviceClass
 @property  NSString *deviceColor
 @property  NSString *deviceEnclosureColor
 @property  NSUUID *_identifier
 @property  unsigned long _capabilityForUIDisplay
 @property  BOOL _shouldSendIdentityTokenForRemoteUI
 @property  BOOL _shouldSendGrandSlamTokensForRemoteUI
 @property  BOOL _requiresPasswordInput
 @property  NSString *_interpolatedReason
 @property  NSString *_interpolatedReasonWithBlame
 @property  BOOL _shouldSkipInitialReachabilityCheck
 @property  unsigned long _attemptIndex
 @property  BOOL contextEligibleForSilentAuthCoercion
 @property  BOOL contextEligibleForSilentAuth
 @property  BOOL contextEligibleForBiometricOrPasscodeAuth
 @property  BOOL contextRequestingReauthForExistingService
 @property  BOOL _performUIOutOfProcess
 @property  BOOL _keepAlive
 @property  BOOL _shouldRefreshAccountAndUpdateContext
 @property  NSData *displayImageData
 @property  BOOL _forceEligibleForForegroundAuthentication
 @property  unsigned long authenticationType
 @property  BOOL shouldPromptForPasswordOnly
 @property  BOOL shouldUpdatePersistentServiceTokens
 @property  BOOL _isProxyingForApp
 @property  NSString *_proxiedAppBundleID
 @property  NSString *_passwordPromptTitle
 @property  NSString *_password
 @property  BOOL _isPasswordEditable
 @property  NSString *_shortLivedToken
 @property  NSString *_identityToken
 @property  <AKAnisetteServiceProtocol> *anisetteDataProvider
 @property  NSNumber *isAppleIDLoginEnabled
 @property  NSNumber *hasEmptyPassword
 @property  BOOL shouldRequestRecoveryPET
 @property  BOOL shouldRequestShortLivedToken
 @property  BOOL shouldRequestConfigurationInfo
 @property  BOOL supportsPiggybacking
 @property  BOOL anticipateEscrowAttempt
 @property  NSSet *desiredInternalTokens
 @property  BOOL isFirstTimeLogin
 @property  BOOL shouldSkipSettingsLaunchAlert
 @property  NSString *securityUpgradeContext
 @property  NSString *_message
 @property  NSString *_masterKey
 @property  AKAnisetteData *proxiedDeviceAnisetteData
 @property  AKAnisetteData *companionDeviceAnisetteData
 @property  BOOL shouldPreventInteractiveAuth
 @property  BOOL shouldForceInteractiveAuth
 @property  BOOL needsNewChildAccount
 @property  BOOL needsSecurityUpgradeUI
 @property  NSString *cellularDataAttributionAppBundleID
 @property  long long verifyCredentialReason
 @property  NSString *custodianRecoveryToken
 @property  NSString *callerIconBundlePath
 @property  NSString *localizedCallerName
 @property  NSString *displayString
 @property  NSString *displayTitle
 @property  NSString *username
 @property  BOOL isUsernameEditable
 @property  BOOL shouldAllowAppleIDCreation
 @property  BOOL needsCredentialRecovery
 @property  BOOL needsNewAppleID
 @property  BOOL needsPasswordChange
 @property  BOOL isTriggeredByNotification
 @property  long long serviceType
 @property  NSString *reason
 @property  NSString *defaultButtonString
 @property  long long maximumLoginAttempts
 @property  NSString *serviceIdentifier
 @property  NSArray *serviceIdentifiers
 @property  BOOL isEphemeral
 @property  NSString *DSID
 @property  NSString *altDSID
 @property  NSDictionary *httpHeadersForRemoteUI
 @property  id clientInfo
 @property  NSDictionary *appProvidedData
 @property  BOOL shouldOfferSecurityUpgrade
 @property  BOOL needsRepair
 @property  NSString *title
 @property  NSString *helpAnchor
 @property  NSString *helpBook
 @property  long long authenticationPromptStyle
 @property  NSString *cancelButtonString
 @property  NSString *alternativeButtonString
 @property  BOOL hideAlternativeButton
 @property  BOOL hideCancelButton
 @property  BOOL hideReasonString
 @property  BOOL clientShouldHandleAlternativeButtonAction
 @property  NSString *windowTitle
 @property  BOOL alwaysShowUsernameField
 @property  NSString *privacyBundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *_proxiedAppName
 @property  NSString *appProvidedContext
 @property  AKDevice *proxiedDevice
 @property  AKDevice *companionDevice
 @property  long long authenticationMode
 @property  BOOL cliMode

  // class methods
  +[AKAppleIDAuthenticationContext supportsSecureCoding]

  // instance methods
  -[AKAppleIDAuthenticationContext displayString]
  -[AKAppleIDAuthenticationContext deviceColor]
  -[AKAppleIDAuthenticationContext setCustodianRecoveryToken:]
  -[AKAppleIDAuthenticationContext _message]
  -[AKAppleIDAuthenticationContext setAltDSID:]
  -[AKAppleIDAuthenticationContext setLatitude:]
  -[AKAppleIDAuthenticationContext setDisplayString:]
  -[AKAppleIDAuthenticationContext setLongitude:]
  -[AKAppleIDAuthenticationContext setAnisetteDataProvider:]
  -[AKAppleIDAuthenticationContext _password]
  -[AKAppleIDAuthenticationContext setDSID:]
  -[AKAppleIDAuthenticationContext latitude]
  -[AKAppleIDAuthenticationContext DSID]
  -[AKAppleIDAuthenticationContext setDeviceClass:]
  -[AKAppleIDAuthenticationContext isEphemeral]
  -[AKAppleIDAuthenticationContext proxiedDeviceAnisetteData]
  -[AKAppleIDAuthenticationContext setAuthenticationType:]
  -[AKAppleIDAuthenticationContext setProxiedDevice:]
  -[AKAppleIDAuthenticationContext initWithCoder:]
  -[AKAppleIDAuthenticationContext altDSID]
  -[AKAppleIDAuthenticationContext _proxiedAppBundleID]
  -[AKAppleIDAuthenticationContext _sanitizedCopy]
  -[AKAppleIDAuthenticationContext deviceEnclosureColor]
  -[AKAppleIDAuthenticationContext isContextEligibleForSilentAuth]
  -[AKAppleIDAuthenticationContext _capabilityForUIDisplay]
  -[AKAppleIDAuthenticationContext helpAnchor]
  -[AKAppleIDAuthenticationContext setServiceIdentifier:]
  -[AKAppleIDAuthenticationContext setTitle:]
  -[AKAppleIDAuthenticationContext serviceIdentifier]
  -[AKAppleIDAuthenticationContext setServiceType:]
  -[AKAppleIDAuthenticationContext longitude]
  -[AKAppleIDAuthenticationContext displayTitle]
  -[AKAppleIDAuthenticationContext setClientInfo:]
  -[AKAppleIDAuthenticationContext appProvidedData]
  -[AKAppleIDAuthenticationContext presentBasicLoginUIWithCompletion:]
  -[AKAppleIDAuthenticationContext dismissBasicLoginUIWithCompletion:]
  -[AKAppleIDAuthenticationContext presentLoginAlertWithError:title:message:completion:]
  -[AKAppleIDAuthenticationContext presentSecondFactorUIWithCompletion:]
  -[AKAppleIDAuthenticationContext dismissSecondFactorUIWithCompletion:]
  -[AKAppleIDAuthenticationContext presentSecondFactorAlertWithError:title:message:completion:]
  -[AKAppleIDAuthenticationContext .cxx_destruct]
  -[AKAppleIDAuthenticationContext presentBiometricOrPasscodeValidationForAppleID:completion:]
  -[AKAppleIDAuthenticationContext _updateWithValuesFromContext:]
  -[AKAppleIDAuthenticationContext _proxiedAppName]
  -[AKAppleIDAuthenticationContext companionDevice]
  -[AKAppleIDAuthenticationContext _setIdentityToken:]
  -[AKAppleIDAuthenticationContext cancelButtonString]
  -[AKAppleIDAuthenticationContext defaultButtonString]
  -[AKAppleIDAuthenticationContext setAppProvidedData:]
  -[AKAppleIDAuthenticationContext setCancelButtonString:]
  -[AKAppleIDAuthenticationContext setDefaultButtonString:]
  -[AKAppleIDAuthenticationContext clientInfo]
  -[AKAppleIDAuthenticationContext deviceClass]
  -[AKAppleIDAuthenticationContext isFirstTimeLogin]
  -[AKAppleIDAuthenticationContext _setMessage:]
  -[AKAppleIDAuthenticationContext _setPassword:]
  -[AKAppleIDAuthenticationContext isUsernameEditable]
  -[AKAppleIDAuthenticationContext cliMode]
  -[AKAppleIDAuthenticationContext setCompanionDevice:]
  -[AKAppleIDAuthenticationContext username]
  -[AKAppleIDAuthenticationContext setSecurityUpgradeContext:]
  -[AKAppleIDAuthenticationContext setIsUsernameEditable:]
  -[AKAppleIDAuthenticationContext _setProxyingForApp:]
  -[AKAppleIDAuthenticationContext _setProxiedAppBundleID:]
  -[AKAppleIDAuthenticationContext _setProxiedAppName:]
  -[AKAppleIDAuthenticationContext set_passwordPromptTitle:]
  -[AKAppleIDAuthenticationContext setCliMode:]
  -[AKAppleIDAuthenticationContext _masterKey]
  -[AKAppleIDAuthenticationContext shouldOfferSecurityUpgrade]
  -[AKAppleIDAuthenticationContext init]
  -[AKAppleIDAuthenticationContext appProvidedContext]
  -[AKAppleIDAuthenticationContext authenticationType]
  -[AKAppleIDAuthenticationContext custodianRecoveryToken]
  -[AKAppleIDAuthenticationContext _identityToken]
  -[AKAppleIDAuthenticationContext setDisplayTitle:]
  -[AKAppleIDAuthenticationContext initWithContext:]
  -[AKAppleIDAuthenticationContext _identifier]
  -[AKAppleIDAuthenticationContext needsNewChildAccount]
  -[AKAppleIDAuthenticationContext needsSecurityUpgradeUI]
  -[AKAppleIDAuthenticationContext isAppleIDLoginEnabled]
  -[AKAppleIDAuthenticationContext hasEmptyPassword]
  -[AKAppleIDAuthenticationContext anticipateEscrowAttempt]
  -[AKAppleIDAuthenticationContext helpBook]
  -[AKAppleIDAuthenticationContext reason]
  -[AKAppleIDAuthenticationContext needsNewAppleID]
  -[AKAppleIDAuthenticationContext setFirstTimeLogin:]
  -[AKAppleIDAuthenticationContext setNeedsNewAppleID:]
  -[AKAppleIDAuthenticationContext needsCredentialRecovery]
  -[AKAppleIDAuthenticationContext setNeedsCredentialRecovery:]
  -[AKAppleIDAuthenticationContext setProxiedDeviceAnisetteData:]
  -[AKAppleIDAuthenticationContext title]
  -[AKAppleIDAuthenticationContext setShouldOfferSecurityUpgrade:]
  -[AKAppleIDAuthenticationContext setDeviceColor:]
  -[AKAppleIDAuthenticationContext authKitAccount:]
  -[AKAppleIDAuthenticationContext authKitAccountForSilentServiceToken:]
  -[AKAppleIDAuthenticationContext setAppProvidedContext:]
  -[AKAppleIDAuthenticationContext setAuthenticationMode:]
  -[AKAppleIDAuthenticationContext setShouldAllowAppleIDCreation:]
  -[AKAppleIDAuthenticationContext setShouldUpdatePersistentServiceTokens:]
  -[AKAppleIDAuthenticationContext proxiedDevice]
  -[AKAppleIDAuthenticationContext setReason:]
  -[AKAppleIDAuthenticationContext _keepAlive]
  -[AKAppleIDAuthenticationContext setShouldSkipSettingsLaunchAlert:]
  -[AKAppleIDAuthenticationContext setUsername:]
  -[AKAppleIDAuthenticationContext setGeneratedCode:]
  -[AKAppleIDAuthenticationContext _interpolatedReason]
  -[AKAppleIDAuthenticationContext setSupportsPiggybacking:]
  -[AKAppleIDAuthenticationContext setIsEphemeral:]
  -[AKAppleIDAuthenticationContext securityUpgradeContext]
  -[AKAppleIDAuthenticationContext _setMasterKey:]
  -[AKAppleIDAuthenticationContext _attemptIndex]
  -[AKAppleIDAuthenticationContext _shouldSkipInitialReachabilityCheck]
  -[AKAppleIDAuthenticationContext shouldPromptForPasswordOnly]
  -[AKAppleIDAuthenticationContext verifyCredentialReason]
  -[AKAppleIDAuthenticationContext _initWithIdentifier:]
  -[AKAppleIDAuthenticationContext _isVerifyCredentialReasonEligibleForBiometricOrPasscodeAuth]
  -[AKAppleIDAuthenticationContext _appendBlameIfRequiredTo:]
  -[AKAppleIDAuthenticationContext serviceIdentifiers]
  -[AKAppleIDAuthenticationContext setServiceIdentifiers:]
  -[AKAppleIDAuthenticationContext _interpolatedReasonWithBlame]
  -[AKAppleIDAuthenticationContext _secondFactorQueue]
  -[AKAppleIDAuthenticationContext _startListeningForSecondFactorCodeEntryNotification]
  -[AKAppleIDAuthenticationContext _stopListeningForSecondFactorCodeEntryNotification]
  -[AKAppleIDAuthenticationContext _localUserHasEmptyPassword]
  -[AKAppleIDAuthenticationContext isContextEligibleForSilentAuthCoercion]
  -[AKAppleIDAuthenticationContext isContextEligibleForBiometricOrPasscodeAuth]
  -[AKAppleIDAuthenticationContext isContextRequestingReauthForExistingService]
  -[AKAppleIDAuthenticationContext shouldPreventInteractiveAuth]
  -[AKAppleIDAuthenticationContext _shouldRefreshAccountAndUpdateContext]
  -[AKAppleIDAuthenticationContext setShouldPreventInteractiveAuth:]
  -[AKAppleIDAuthenticationContext setShouldForceInteractiveAuth:]
  -[AKAppleIDAuthenticationContext shouldForceInteractiveAuth]
  -[AKAppleIDAuthenticationContext _requiresPasswordInput]
  -[AKAppleIDAuthenticationContext _handleSecondFactorCodeEntry]
  -[AKAppleIDAuthenticationContext _isProxyingForApp]
  -[AKAppleIDAuthenticationContext _shouldSendIdentityTokenForRemoteUI]
  -[AKAppleIDAuthenticationContext set_shouldSendIdentityTokenForRemoteUI:]
  -[AKAppleIDAuthenticationContext _shouldSendGrandSlamTokensForRemoteUI]
  -[AKAppleIDAuthenticationContext set_shouldSendGrandSlamTokensForRemoteUI:]
  -[AKAppleIDAuthenticationContext _passwordPromptTitle]
  -[AKAppleIDAuthenticationContext _isPasswordEditable]
  -[AKAppleIDAuthenticationContext set_isPasswordEditable:]
  -[AKAppleIDAuthenticationContext _shortLivedToken]
  -[AKAppleIDAuthenticationContext _setShortLivedToken:]
  -[AKAppleIDAuthenticationContext needsRepair]
  -[AKAppleIDAuthenticationContext set_shouldSkipInitialReachabilityCheck:]
  -[AKAppleIDAuthenticationContext set_attemptIndex:]
  -[AKAppleIDAuthenticationContext companionDeviceAnisetteData]
  -[AKAppleIDAuthenticationContext setCompanionDeviceAnisetteData:]
  -[AKAppleIDAuthenticationContext _performUIOutOfProcess]
  -[AKAppleIDAuthenticationContext set_performUIOutOfProcess:]
  -[AKAppleIDAuthenticationContext set_keepAlive:]
  -[AKAppleIDAuthenticationContext _isForcedEligibleForForegroundAuthentication]
  -[AKAppleIDAuthenticationContext set_forceEligibleForForegroundAuthentication:]
  -[AKAppleIDAuthenticationContext shouldAllowAppleIDCreation]
  -[AKAppleIDAuthenticationContext needsPasswordChange]
  -[AKAppleIDAuthenticationContext setNeedsPasswordChange:]
  -[AKAppleIDAuthenticationContext isTriggeredByNotification]
  -[AKAppleIDAuthenticationContext setTriggeredByNotification:]
  -[AKAppleIDAuthenticationContext maximumLoginAttempts]
  -[AKAppleIDAuthenticationContext setMaximumLoginAttempts:]
  -[AKAppleIDAuthenticationContext setNeedsRepair:]
  -[AKAppleIDAuthenticationContext httpHeadersForRemoteUI]
  -[AKAppleIDAuthenticationContext setHttpHeadersForRemoteUI:]
  -[AKAppleIDAuthenticationContext setHelpAnchor:]
  -[AKAppleIDAuthenticationContext setHelpBook:]
  -[AKAppleIDAuthenticationContext authenticationPromptStyle]
  -[AKAppleIDAuthenticationContext setAuthenticationPromptStyle:]
  -[AKAppleIDAuthenticationContext alternativeButtonString]
  -[AKAppleIDAuthenticationContext setAlternativeButtonString:]
  -[AKAppleIDAuthenticationContext hideAlternativeButton]
  -[AKAppleIDAuthenticationContext setHideAlternativeButton:]
  -[AKAppleIDAuthenticationContext hideCancelButton]
  -[AKAppleIDAuthenticationContext setHideCancelButton:]
  -[AKAppleIDAuthenticationContext hideReasonString]
  -[AKAppleIDAuthenticationContext setHideReasonString:]
  -[AKAppleIDAuthenticationContext clientShouldHandleAlternativeButtonAction]
  -[AKAppleIDAuthenticationContext setClientShouldHandleAlternativeButtonAction:]
  -[AKAppleIDAuthenticationContext windowTitle]
  -[AKAppleIDAuthenticationContext setWindowTitle:]
  -[AKAppleIDAuthenticationContext alwaysShowUsernameField]
  -[AKAppleIDAuthenticationContext displayImageData]
  -[AKAppleIDAuthenticationContext setAlwaysShowUsernameField:]
  -[AKAppleIDAuthenticationContext privacyBundleIdentifier]
  -[AKAppleIDAuthenticationContext setPrivacyBundleIdentifier:]
  -[AKAppleIDAuthenticationContext setDisplayImageData:]
  -[AKAppleIDAuthenticationContext setShouldPromptForPasswordOnly:]
  -[AKAppleIDAuthenticationContext shouldUpdatePersistentServiceTokens]
  -[AKAppleIDAuthenticationContext setAppleIDLoginEnabled:]
  -[AKAppleIDAuthenticationContext setHasEmptyPassword:]
  -[AKAppleIDAuthenticationContext supportsPiggybacking]
  -[AKAppleIDAuthenticationContext shouldRequestRecoveryPET]
  -[AKAppleIDAuthenticationContext setShouldRequestRecoveryPET:]
  -[AKAppleIDAuthenticationContext shouldRequestShortLivedToken]
  -[AKAppleIDAuthenticationContext setShouldRequestShortLivedToken:]
  -[AKAppleIDAuthenticationContext shouldRequestConfigurationInfo]
  -[AKAppleIDAuthenticationContext setShouldRequestConfigurationInfo:]
  -[AKAppleIDAuthenticationContext setAnticipateEscrowAttempt:]
  -[AKAppleIDAuthenticationContext desiredInternalTokens]
  -[AKAppleIDAuthenticationContext setDesiredInternalTokens:]
  -[AKAppleIDAuthenticationContext shouldSkipSettingsLaunchAlert]
  -[AKAppleIDAuthenticationContext setNeedsNewChildAccount:]
  -[AKAppleIDAuthenticationContext setNeedsSecurityUpgradeUI:]
  -[AKAppleIDAuthenticationContext cellularDataAttributionAppBundleID]
  -[AKAppleIDAuthenticationContext setCellularDataAttributionAppBundleID:]
  -[AKAppleIDAuthenticationContext setVerifyCredentialReason:]
  -[AKAppleIDAuthenticationContext callerIconBundlePath]
  -[AKAppleIDAuthenticationContext setCallerIconBundlePath:]
  -[AKAppleIDAuthenticationContext localizedCallerName]
  -[AKAppleIDAuthenticationContext setLocalizedCallerName:]
  -[AKAppleIDAuthenticationContext authenticationMode]
  -[AKAppleIDAuthenticationContext encodeWithCoder:]
  -[AKAppleIDAuthenticationContext anisetteDataProvider]
  -[AKAppleIDAuthenticationContext generatedCode]
  -[AKAppleIDAuthenticationContext setDeviceEnclosureColor:]
  -[AKAppleIDAuthenticationContext serviceType]


AKAuthorizationContext : NSObject <AKAuthenticationContext, NSSecureCoding>
 @property  BOOL _hasApplicationMetaData
 @property  BOOL _clientAuthenticatedExternallyWithPassword
 @property  NSString *_externalAuthToken
 @property  NSString *teamID
 @property  NSString *clientID
 @property  AKAuthorizationRequest *request
 @property  AKAuthorizationScopesUserSelection *userSelection
 @property  NSString *realUserVerificationData
 @property  NSString *altDSID
 @property  long long serviceType
 @property  NSString *_proxiedAppName
 @property  NSDictionary *appProvidedData
 @property  NSString *appProvidedContext
 @property  AKDevice *proxiedDevice
 @property  AKDevice *companionDevice
 @property  long long authenticationMode
 @property  BOOL cliMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AKAuthorizationContext supportsSecureCoding]

  // instance methods
  -[AKAuthorizationContext teamID]
  -[AKAuthorizationContext setAltDSID:]
  -[AKAuthorizationContext setProxiedDevice:]
  -[AKAuthorizationContext initWithCoder:]
  -[AKAuthorizationContext altDSID]
  -[AKAuthorizationContext initWithRequest:]
  -[AKAuthorizationContext setServiceType:]
  -[AKAuthorizationContext appProvidedData]
  -[AKAuthorizationContext .cxx_destruct]
  -[AKAuthorizationContext _proxiedAppName]
  -[AKAuthorizationContext companionDevice]
  -[AKAuthorizationContext userSelection]
  -[AKAuthorizationContext setAppProvidedData:]
  -[AKAuthorizationContext setUserSelection:]
  -[AKAuthorizationContext setCompanionDevice:]
  -[AKAuthorizationContext _setProxiedAppName:]
  -[AKAuthorizationContext _externalAuthToken]
  -[AKAuthorizationContext appProvidedContext]
  -[AKAuthorizationContext setClientID:]
  -[AKAuthorizationContext request]
  -[AKAuthorizationContext setAppProvidedContext:]
  -[AKAuthorizationContext proxiedDevice]
  -[AKAuthorizationContext set_clientAuthenticatedExternallyWithPassword:]
  -[AKAuthorizationContext _clientAuthenticatedExternallyWithPassword]
  -[AKAuthorizationContext set_externalAuthToken:]
  -[AKAuthorizationContext encodeWithCoder:]
  -[AKAuthorizationContext setTeamID:]
  -[AKAuthorizationContext _hasApplicationMetaData]
  -[AKAuthorizationContext realUserVerificationData]
  -[AKAuthorizationContext setRealUserVerificationData:]
  -[AKAuthorizationContext clientID]
  -[AKAuthorizationContext serviceType]


AKAppleIDAuthenticationDaemonInterface : NSObject
  // class methods
  +[AKAppleIDAuthenticationDaemonInterface XPCInterface]


AKPrivateEmailClientImpl : NSObject <AKPrivateEmailClientProtocol>
 @property  <AKPrivateEmailUIProvider> *uiProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AKPrivateEmailClientImpl uiProvider]
  -[AKPrivateEmailClientImpl setUiProvider:]
  -[AKPrivateEmailClientImpl .cxx_destruct]
  -[AKPrivateEmailClientImpl presentPrivateEmailUIForContext:completion:]


AKPrivateEmailClientInterface : NSObject
  // class methods
  +[AKPrivateEmailClientInterface XPCInterface]


AKAutoBugCapture : NSObject
  // class methods
  +[AKAutoBugCapture shouldCapturePromptBugForContext:]
  +[AKAutoBugCapture triggerAutoBugCaptureWithSubType:andBundleID:userInfo:]
  +[AKAutoBugCapture userInfoFromContext:]
  +[AKAutoBugCapture userInfoFromAccount:]


AKProxiedClientContext : NSObject
 @property  NSString *teamID
 @property  NSString *bundleID
 @property  NSString *appID
 @property  NSString *appName
 @property  NSArray *associatedDomains
 @property  NSString *deviceClass
 @property  NSString *deviceName
 @property  BOOL isRapportLogin
 @property  BOOL shouldSkipAuthorizationUI

  // instance methods
  -[AKProxiedClientContext teamID]
  -[AKProxiedClientContext setAppID:]
  -[AKProxiedClientContext appName]
  -[AKProxiedClientContext bundleID]
  -[AKProxiedClientContext appID]
  -[AKProxiedClientContext setShouldSkipAuthorizationUI:]
  -[AKProxiedClientContext setDeviceClass:]
  -[AKProxiedClientContext deviceName]
  -[AKProxiedClientContext .cxx_destruct]
  -[AKProxiedClientContext deviceClass]
  -[AKProxiedClientContext setDeviceName:]
  -[AKProxiedClientContext isRapportLogin]
  -[AKProxiedClientContext shouldSkipAuthorizationUI]
  -[AKProxiedClientContext setAssociatedDomains:]
  -[AKProxiedClientContext associatedDomains]
  -[AKProxiedClientContext setBundleID:]
  -[AKProxiedClientContext setTeamID:]
  -[AKProxiedClientContext setAppName:]
  -[AKProxiedClientContext setIsRapportLogin:]


AKPrivateEmail : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *key
 @property  NSString *privateEmailAddress

  // class methods
  +[AKPrivateEmail supportsSecureCoding]

  // instance methods
  -[AKPrivateEmail initWithAddress:forKey:]
  -[AKPrivateEmail initWithCoder:]
  -[AKPrivateEmail .cxx_destruct]
  -[AKPrivateEmail key]
  -[AKPrivateEmail copyWithZone:]
  -[AKPrivateEmail encodeWithCoder:]
  -[AKPrivateEmail privateEmailAddress]


AKCustodianController : NSObject <AKCustodianDaemonProtocol>
  // instance methods
  -[AKCustodianController updateCustodianRecoveryKeyWithContext:completion:]
  -[AKCustodianController fetchCustodianRecoveryTokenWithContext:completion:]
  -[AKCustodianController finalizeCustodianSetupWithContext:completion:]
  -[AKCustodianController .cxx_destruct]
  -[AKCustodianController init]
  -[AKCustodianController sendEmbargoEndNotificationFeedbackWithContext:urlKey:completion:]
  -[AKCustodianController initWithDaemonXPCEndpoint:]
  -[AKCustodianController fetchCustodianDataRecoveryKeyWithContext:completion:]
  -[AKCustodianController fetchCustodianRecoveryCodeConfigurationWithCompletion:]
  -[AKCustodianController initiateCustodianSetupWithContext:completion:]
  -[AKCustodianController revokeCustodianWithContext:completion:]
  -[AKCustodianController dealloc]
  -[AKCustodianController performTrustedContactsDataSync:completion:]
  -[AKCustodianController startCustodianRecoveryRequestWithContext:completion:]
  -[AKCustodianController startCustodianRecoveryTransactionWithContext:completion:]


AKRemoteDevice : NSObject <NSSecureCoding>
 @property  NSString *name
 @property  NSString *serialNumber
 @property  NSString *buildNumber
 @property  NSString *operatingSystemName
 @property  NSString *operatingSystemVersion
 @property  NSString *model
 @property  NSString *colorCode
 @property  NSString *enclosureColorCode
 @property  NSString *coverGlassColorCode
 @property  NSString *housingColorCode
 @property  NSString *backingColorCode
 @property  BOOL trusted
 @property  BOOL inCircle
 @property  NSDate *lastUpdatedDate
 @property  NSString *machineId
 @property  NSDictionary *additionalInfo

  // class methods
  +[AKRemoteDevice supportsSecureCoding]

  // instance methods
  -[AKRemoteDevice serialNumber]
  -[AKRemoteDevice additionalInfo]
  -[AKRemoteDevice operatingSystemVersion]
  -[AKRemoteDevice enclosureColorCode]
  -[AKRemoteDevice coverGlassColorCode]
  -[AKRemoteDevice housingColorCode]
  -[AKRemoteDevice backingColorCode]
  -[AKRemoteDevice name]
  -[AKRemoteDevice operatingSystemName]
  -[AKRemoteDevice initWithCoder:]
  -[AKRemoteDevice .cxx_destruct]
  -[AKRemoteDevice lastUpdatedDate]
  -[AKRemoteDevice colorCode]
  -[AKRemoteDevice buildNumber]
  -[AKRemoteDevice inCircle]
  -[AKRemoteDevice machineId]
  -[AKRemoteDevice model]
  -[AKRemoteDevice trusted]
  -[AKRemoteDevice initWithInfo:]
  -[AKRemoteDevice _initWithInfo:]
  -[AKRemoteDevice encodeWithCoder:]


AKAuthorizationClientInterface : NSObject
  // class methods
  +[AKAuthorizationClientInterface XPCInterface]


AKBundleInformation : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *bundleIdentifier
 @property  NSString *bundleName
 @property  NSString *bundleDescription
 @property  unsigned long bundleType
 @property  NSDictionary *otherInfo

  // class methods
  +[AKBundleInformation supportsSecureCoding]

  // instance methods
  -[AKBundleInformation bundleType]
  -[AKBundleInformation initWithBundleIdentifier:bundleName:bundleDescription:bundleType:otherInfo:]
  -[AKBundleInformation initWithCoder:]
  -[AKBundleInformation bundleIdentifier]
  -[AKBundleInformation bundleName]
  -[AKBundleInformation .cxx_destruct]
  -[AKBundleInformation bundleDescription]
  -[AKBundleInformation otherInfo]
  -[AKBundleInformation copyWithZone:]
  -[AKBundleInformation encodeWithCoder:]


AKAuthorizationController : NSObject
 @property  <AKAuthorizationUIProvider> *uiProvider

  // class methods
  +[AKAuthorizationController canPerformAuthorization]
  +[AKAuthorizationController appleOwnedDomains]
  +[AKAuthorizationController sharedController]
  +[AKAuthorizationController shouldProcessURL:]
  +[AKAuthorizationController isURLFromAppleOwnedDomain:]

  // instance methods
  -[AKAuthorizationController uiProvider]
  -[AKAuthorizationController setUiProvider:]
  -[AKAuthorizationController establishConnectionWithNotificationHandlerEndpoint:completion:]
  -[AKAuthorizationController performAuthorizationWithContext:completion:]
  -[AKAuthorizationController storeAuthorization:forProxiedRequest:completion:]
  -[AKAuthorizationController .cxx_destruct]
  -[AKAuthorizationController _shouldOverrideProxiedBundleIDForContext:]
  -[AKAuthorizationController establishConnectionWithStateBroadcastHandlerEndpoint:completion:]
  -[AKAuthorizationController init]
  -[AKAuthorizationController getPresentationContextForRequestContext:completion:]
  -[AKAuthorizationController primaryApplicationInformationForWebServiceWithInfo:error:]
  -[AKAuthorizationController getCredentialStateForClientID:completion:]
  -[AKAuthorizationController initWithDaemonXPCEndpoint:]
  -[AKAuthorizationController continueAuthorizationWithContext:completion:]
  -[AKAuthorizationController beginAuthorizationWithContext:completion:]
  -[AKAuthorizationController _appleIDAuthorizationURLs]
  -[AKAuthorizationController cancelAuthorizationWithContext:completion:]
  -[AKAuthorizationController fetchAppleIDAuthorizeHTMLResponseTemplateWithCompletion:]
  -[AKAuthorizationController _appleOwnedDomains]
  -[AKAuthorizationController performAuthorizationWithContext:withUserProvidedInformation:completion:]
  -[AKAuthorizationController getCredentialStateForRequest:completion:]
  -[AKAuthorizationController dealloc]
  -[AKAuthorizationController continueFetchingIconForRequestContext:completion:]
  -[AKAuthorizationController revokeAuthorizationWithContext:completion:]


NSExtensionItem(AKExtensionItem)
	// class methods
	+[NSExtensionItem(AKExtensionItem) extensionItemWithAppleIDAuthenticationContext:]

	// instance methods
	-[NSExtensionItem(AKExtensionItem) ak_setContext:]
	-[NSExtensionItem(AKExtensionItem) ak_context]

NSXPCConnection(AKAdaptiveServiceShouldHandle)
	// instance methods
	-[NSXPCConnection(AKAdaptiveServiceShouldHandle) shouldHandleInvalidation]
	-[NSXPCConnection(AKAdaptiveServiceShouldHandle) setShouldHandleInvalidation:]

(AuthKit)
	// class methods
	+[(AuthKit) ak_dictionaryWithResponseData:]
	+[(AuthKit) ak_jsonDictionaryWithResponseData:]

	// instance methods
	-[(AuthKit) ak_redactedCopy]
	-[(AuthKit) ak_mapObjects:]
	-[(AuthKit) _ak_truncatedTokensCopy]
	-[(AuthKit) ak_urlQueryString]
	-[(AuthKit) ak_mapObjectsNullable:]
	-[(AuthKit) ak_toJSONString]

(AuthKit)
	// class methods
	+[(AuthKit) ak_base64EncodedJsonFromObject:]

	// instance methods
	-[(AuthKit) ak_urlEncoded]
	-[(AuthKit) ak_SHA256String]
	-[(AuthKit) ak_truncatedCopy]
	-[(AuthKit) ak_stringByZeroPaddingOccurencesOfString:]
	-[(AuthKit) ak_isEmailAddress]
	-[(AuthKit) ak_SHA256]

NSMutableURLRequest(AuthKit)
	// class methods
	+[NSMutableURLRequest(AuthKit) ak_anisetteHeadersWithData:]
	+[NSMutableURLRequest(AuthKit) ak_proxiedAnisetteHeadersWithData:]
	+[NSMutableURLRequest(AuthKit) ak_proxiedClientInfoHeadersWithDevice:]
	+[NSMutableURLRequest(AuthKit) ak_localeHeader]
	+[NSMutableURLRequest(AuthKit) ak_clientTimeHeader]
	+[NSMutableURLRequest(AuthKit) ak_timeZoneHeader]
	+[NSMutableURLRequest(AuthKit) ak_clientInfoHeader]
	+[NSMutableURLRequest(AuthKit) ak_deviceUDIDHeader]
	+[NSMutableURLRequest(AuthKit) ak_anisetteHeadersWithCompanionData:]
	+[NSMutableURLRequest(AuthKit) ak_proxiedHeadersForDevice:anisetteData:]

	// instance methods
	-[NSMutableURLRequest(AuthKit) ak_addICSCRecoveryHeaderWithIdentityToken:forAltDSID:]
	-[NSMutableURLRequest(AuthKit) ak_addRecoveryHeaderWithIdentityToken:forAltDSID:]
	-[NSMutableURLRequest(AuthKit) ak_setBodyWithParameters:]
	-[NSMutableURLRequest(AuthKit) ak_addClientTimeHeader]
	-[NSMutableURLRequest(AuthKit) ak_addDeviceUDIDHeader]
	-[NSMutableURLRequest(AuthKit) _setAuthorizationHeaderWithToken:altDSID:key:]
	-[NSMutableURLRequest(AuthKit) ak_addInternalBuildHeader]
	-[NSMutableURLRequest(AuthKit) ak_addFeatureMaskHeader]
	-[NSMutableURLRequest(AuthKit) ak_addLocalUserUUIDHashHeader]
	-[NSMutableURLRequest(AuthKit) ak_addAppleIDHeaderWithValue:]
	-[NSMutableURLRequest(AuthKit) ak_addAppleIDUserModeHeaderWithValue:]
	-[NSMutableURLRequest(AuthKit) ak_addProvisioningUDIDHeader]
	-[NSMutableURLRequest(AuthKit) ak_addProxiedDeviceUDIDHeader:]
	-[NSMutableURLRequest(AuthKit) ak_addCircleStatusHeader]
	-[NSMutableURLRequest(AuthKit) ak_addCompanionClientInfoHeader:]
	-[NSMutableURLRequest(AuthKit) ak_addProxiedClientInfoHeader:]
	-[NSMutableURLRequest(AuthKit) ak_addEphemeralAuthHeader]
	-[NSMutableURLRequest(AuthKit) ak_addCountryHeader]
	-[NSMutableURLRequest(AuthKit) ak_addProxiedAnisetteHeaders:]
	-[NSMutableURLRequest(AuthKit) ak_addProxiedAttestationHeaders:]
	-[NSMutableURLRequest(AuthKit) ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:]
	-[NSMutableURLRequest(AuthKit) ak_addProxiedAuthorizationHeaderWithIdentityToken:forAltDSID:]
	-[NSMutableURLRequest(AuthKit) ak_addAuthorizationHeaderWithServiceToken:forAltDSID:]
	-[NSMutableURLRequest(AuthKit) ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:]
	-[NSMutableURLRequest(AuthKit) ak_addAuthorizationHeaderWithCustodianRecoveryToken:forAltDSID:]
	-[NSMutableURLRequest(AuthKit) ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:]
	-[NSMutableURLRequest(AuthKit) ak_addURLSwitchingHeaderWithURLKey:altDSID:]
	-[NSMutableURLRequest(AuthKit) ak_addDataCenterHeaderWithIdentifier:]
	-[NSMutableURLRequest(AuthKit) ak_valueForEncodedHeaderWithKey:]
	-[NSMutableURLRequest(AuthKit) ak_setJSONBodyWithParameters:]
	-[NSMutableURLRequest(AuthKit) ak_addJSONRequestHeader]
	-[NSMutableURLRequest(AuthKit) ak_addAbsintheHeaderWithValue:]
	-[NSMutableURLRequest(AuthKit) ak_addLoggedInServicesHeaderForServices:]
	-[NSMutableURLRequest(AuthKit) ak_addContextHeaderForServiceType:]
	-[NSMutableURLRequest(AuthKit) ak_addContinutationKeyHeader:]
	-[NSMutableURLRequest(AuthKit) ak_addPasswordResetKeyHeader:]
	-[NSMutableURLRequest(AuthKit) ak_addSKUCountryHeader]
	-[NSMutableURLRequest(AuthKit) ak_addProxiedDeviceCountryHeader:]
	-[NSMutableURLRequest(AuthKit) ak_addLocaleHeader]
	-[NSMutableURLRequest(AuthKit) ak_addTimeZoneHeaders]
	-[NSMutableURLRequest(AuthKit) ak_addPRKRequestHeader]
	-[NSMutableURLRequest(AuthKit) ak_addProxiedDevicePRKRequestHeader]
	-[NSMutableURLRequest(AuthKit) ak_addClientApp:]
	-[NSMutableURLRequest(AuthKit) ak_addICSCIntentHeader]
	-[NSMutableURLRequest(AuthKit) ak_addLocalUserHasAppleIDLoginHeader]
	-[NSMutableURLRequest(AuthKit) ak_addDeviceROMHeader]
	-[NSMutableURLRequest(AuthKit) ak_addDeviceMLBHeader]
	-[NSMutableURLRequest(AuthKit) ak_addDeviceSerialNumberHeader]
	-[NSMutableURLRequest(AuthKit) ak_addProxiedDeviceSerialNumberHeader:]
	-[NSMutableURLRequest(AuthKit) ak_addPhoneNumberHeader]
	-[NSMutableURLRequest(AuthKit) ak_addAcceptedSLAHeaderWithVersion:]
	-[NSMutableURLRequest(AuthKit) ak_addPhoneNumberCertificateHeaderWithValue:]
	-[NSMutableURLRequest(AuthKit) ak_addPhoneInformationHeaderWithValue:]
	-[NSMutableURLRequest(AuthKit) ak_addProxyApp:]
	-[NSMutableURLRequest(AuthKit) ak_addAppProvidedContext:]
	-[NSMutableURLRequest(AuthKit) ak_addReAuthenticationHeader]
	-[NSMutableURLRequest(AuthKit) ak_addOfferSecurityUpgrade:]
	-[NSMutableURLRequest(AuthKit) ak_addProxiedDeviceICSCIntentHeader]
	-[NSMutableURLRequest(AuthKit) ak_addShowWarranty]
	-[NSMutableURLRequest(AuthKit) ak_addDeviceModel]
	-[NSMutableURLRequest(AuthKit) ak_addCFUHeader:]
	-[NSMutableURLRequest(AuthKit) ak_addDeviceConfigurationModeHeader]
	-[NSMutableURLRequest(AuthKit) ak_addDeviceConfigurationModeHeaderForAuthContext:]
	-[NSMutableURLRequest(AuthKit) ak_addRequestUUIDHeader:]
	-[NSMutableURLRequest(AuthKit) ak_addExecutionModeHeader:]
	-[NSMutableURLRequest(AuthKit) ak_addPrivateEmailKeyHeader:]
	-[NSMutableURLRequest(AuthKit) ak_addAnisetteHeaders]
	-[NSMutableURLRequest(AuthKit) ak_addClientInfoHeader]

(CGSize)
	// instance methods
	-[(CGSize) CGSizeValue]

(AuthKit)
	// instance methods
	-[(AuthKit) ak_hexString]
	-[(AuthKit) ak_compressedData:]
	-[(AuthKit) ak_SHA256Data]

(AuthKit)
	// class methods
	+[(AuthKit) ak_errorWithCode:]
	+[(AuthKit) ak_errorWithCode:userInfo:]
	+[(AuthKit) ak_errorWithCode:underlyingError:]
	+[(AuthKit) ak_wrappedAnisetteError:]

	// instance methods
	-[(AuthKit) ak_isUserCancelError]
	-[(AuthKit) ak_isUserSkippedError]
	-[(AuthKit) ak_errorByAppendingUserInfo:]
	-[(AuthKit) ak_isUserTryAgainError]
	-[(AuthKit) ak_isUserInitiatedError]
	-[(AuthKit) ak_isServiceError]
	-[(AuthKit) ak_isUnableToPromptError]
	-[(AuthKit) ak_isSurrogateAuthAlreadyInProgressError]
	-[(AuthKit) ak_isIncompatibleDevicesError]
	-[(AuthKit) ak_isAuthenticationErrorWithCode:]

NSHTTPURLResponse(AuthKit)
	// instance methods
	-[NSHTTPURLResponse(AuthKit) _ak_dataForEncodedHeaderWithKey:]
	-[NSHTTPURLResponse(AuthKit) ak_stringForEncodedHeaderWithKey:]
	-[NSHTTPURLResponse(AuthKit) ak_acceptedTermsInfo]

NSURLRequest(AuthKit)
	// instance methods
	-[NSURLRequest(AuthKit) ak_usesHTTPSScheme]

(AuthKit)
	// instance methods
	-[(AuthKit) ak_serverFriendlyString]

(AuthKit)
	// class methods
	+[(AuthKit) ak_arrayWithResponseData:]
	+[(AuthKit) ak_arrayWithJSONResponseData:]

	// instance methods
	-[(AuthKit) ak_map:]
	-[(AuthKit) ak_firstObjectMatchingFilter:]
	-[(AuthKit) ak_filter:]
	-[(AuthKit) ak_mapNullable:]

01 00 1200 /System/Library/PrivateFrameworks/AAAFoundation.framework/AAAFoundation: AAFXPCSession 
01 00 1200 /System/Library/PrivateFrameworks/AAAFoundation.framework/AAAFoundation: AAFXPCSessionConfig 
01 00 1340 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 1340 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1200 /System/Library/PrivateFrameworks/AAAFoundation.framework/AAAFoundation: AFUtilities 
01 00 0b00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0740 /System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication: LAContext 
01 00 0800 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0800 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0c00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0440 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSCondition 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionItem 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCache 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 1500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListenerEndpoint 
01 00 0300 /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/SymptomDiagnosticReporter: SDRDiagnosticReporter 
