|| __DATA.__objc_data _OBJC_CLASS_$_DKAccountProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DKBackupProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DKCloudProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DKCloudUploadViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DKConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_DKEraseFlow
|| __DATA.__objc_data _OBJC_CLASS_$_DKFindMyProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DKFindMySignOutController
|| __DATA.__objc_data _OBJC_CLASS_$_DKFollowUp
|| __DATA.__objc_data _OBJC_CLASS_$_DKIntroViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DKNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_DKNotableUserData
|| __DATA.__objc_data _OBJC_CLASS_$_DKNotableUserDataAccount
|| __DATA.__objc_data _OBJC_CLASS_$_DKNotableUserDataCardCell
|| __DATA.__objc_data _OBJC_CLASS_$_DKNotableUserDataCardPrimaryCell
|| __DATA.__objc_data _OBJC_CLASS_$_DKNotableUserDataCardView
|| __DATA.__objc_data _OBJC_CLASS_$_DKNotableUserDataCellularPlan
|| __DATA.__objc_data _OBJC_CLASS_$_DKNotableUserDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DKNotableUserDataWallet
|| __DATA.__objc_data _OBJC_CLASS_$_DKPasscodeProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DKPasscodeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DKPresenter
|| __DATA.__objc_data _OBJC_CLASS_$_DKPromptCloudUploadViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DKScreenTimePasscodeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DKSpinnerController
|| __DATA.__objc_data _OBJC_CLASS_$_DKStorageProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DKTelephonyProvider
|| __DATA.__objc_data _OBJC_CLASS_$_DKWalletProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DKAccountProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DKBackupProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DKCloudProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DKCloudUploadViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DKConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_DKEraseFlow
|| __DATA.__objc_data _OBJC_METACLASS_$_DKFindMyProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DKFindMySignOutController
|| __DATA.__objc_data _OBJC_METACLASS_$_DKFollowUp
|| __DATA.__objc_data _OBJC_METACLASS_$_DKIntroViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DKNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_DKNotableUserData
|| __DATA.__objc_data _OBJC_METACLASS_$_DKNotableUserDataAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_DKNotableUserDataCardCell
|| __DATA.__objc_data _OBJC_METACLASS_$_DKNotableUserDataCardPrimaryCell
|| __DATA.__objc_data _OBJC_METACLASS_$_DKNotableUserDataCardView
|| __DATA.__objc_data _OBJC_METACLASS_$_DKNotableUserDataCellularPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_DKNotableUserDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DKNotableUserDataWallet
|| __DATA.__objc_data _OBJC_METACLASS_$_DKPasscodeProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DKPasscodeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DKPresenter
|| __DATA.__objc_data _OBJC_METACLASS_$_DKPromptCloudUploadViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DKScreenTimePasscodeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DKSpinnerController
|| __DATA.__objc_data _OBJC_METACLASS_$_DKStorageProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DKTelephonyProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DKWalletProvider
|| __TEXT.__const _DisembarkUIVersionNumber
|| __TEXT.__const _DisembarkUIVersionString
|| __TEXT.__text __DKIsInternalInstall
|| __TEXT.__text __DKLogSystem
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppleAccount: _OBJC_CLASS_$_AAFMIPAuthenticateRequest
__ AppleAccountUI: _AAUIDeviceLocatorStateDidChangeNotification
__ AppleAccountUI: _OBJC_CLASS_$_AAUID2DEncryptionFlowContext
__ AppleAccountUI: _OBJC_CLASS_$_AAUIDeviceLocatorConfirmationUtilitiesContext
__ AppleAccountUI: _OBJC_CLASS_$_AAUIDeviceLocatorService
__ AppleAccountUI: _OBJC_CLASS_$_AAUIManateeStateValidator
__ AppleAccountUI: _OBJC_CLASS_$_AAUIProfilePictureStore
__ AppleIDSSOAuthentication: _AIDAServiceTypeCloud
__ AppleIDSSOAuthentication: _OBJC_CLASS_$_AIDAAccountManager
__ AppleIDSSOAuthentication: _OBJC_CLASS_$_AIDAMutableServiceContext
__ AppleIDSSOAuthentication: _OBJC_CLASS_$_AIDAServiceOwnersManager
__ AuthKit: _AKAppleIDAuthenticationErrorDomain
__ AuthKit: _AKAuthenticationPasswordKey
__ AuthKit: _AKAuthenticationUsernameKey
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationController
__ AuthKitUI: _OBJC_CLASS_$_AKAppleIDAuthenticationInAppContext
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreCDP: _OBJC_CLASS_$_CDPLocalSecret
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: _kCFAllocatorDefault
__ CoreGraphics: _CGRectZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreTelephony: __CTServerConnectionCreateWithIdentifier
__ CoreTelephony: __CTServerConnectionGetRadioModuleIsDead
__ Disembark: _OBJC_CLASS_$_DKInternalFollowUp
__ EmbeddedDataReset: _OBJC_CLASS_$_DDRResetOptions
__ EmbeddedDataReset: _OBJC_CLASS_$_DDRResetRequest
__ EmbeddedDataReset: _OBJC_CLASS_$_DDRResetService
__ Foundation: _NSLocalizedFileSizeDescription
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSListFormatter
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSString
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileBackup: _OBJC_CLASS_$_MBCellularAccess
__ MobileBackup: _OBJC_CLASS_$_MBManager
__ MobileBackup: _OBJC_CLASS_$_MBStartBackupOptions
__ Network: _OBJC_CLASS_$_NWPathEvaluator
__ OnBoardingKit: _OBJC_CLASS_$_OBBoldTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBLinkTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBPasscodeViewController
__ OnBoardingKit: _OBJC_CLASS_$_OBSetupAssistantProgressController
__ OnBoardingKit: _OBJC_CLASS_$_OBWelcomeController
__ OnBoardingKit: _OBJC_METACLASS_$_OBPasscodeViewController
__ OnBoardingKit: _OBJC_METACLASS_$_OBSetupAssistantProgressController
__ OnBoardingKit: _OBJC_METACLASS_$_OBWelcomeController
__ PassKit: _OBJC_CLASS_$_PKPassLibrary
__ SettingsCellularUI: _OBJC_CLASS_$_PSUICellularPlanManagerCache
__ SettingsFoundation: _OBJC_CLASS_$_SFRestrictionsPasscodeController
__ SettingsFoundation: _SFLocalizableWAPIStringKeyForKey
__ SetupAssistant: _OBJC_CLASS_$_BYBuddyDaemonCloudSyncClient
__ SpringBoardServices: _OBJC_CLASS_$_SBSHardwareButtonService
__ StorageData: _OBJC_CLASS_$_STStorageDiskMonitor
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UISceneDidDisconnectNotification
__ UIKit: _UITextContentTypePassword
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_variant_has_internal_ui
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
DKSpinnerController : UIViewController
  // instance methods
  -[DKSpinnerController viewDidLoad]
  -[DKSpinnerController cancelPressed:]


DKFindMySignOutController : OBWelcomeController <AKInlineSignInViewControllerDelegate, AKAppleIDAuthenticationDelegate, UITextFieldDelegate>
 @property  UITextField *passwordField
 @property  UIButton *forgotButton
 @property  AKAppleIDAuthenticationInAppContext *authContext
 @property  ACAccount *account
 @property  UIView *containerOutlineView
 @property  BOOL isAuthInProgress
 @property  @? completion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKFindMySignOutController setAuthContext:]
  -[DKFindMySignOutController authContext]
  -[DKFindMySignOutController completion]
  -[DKFindMySignOutController setCompletion:]
  -[DKFindMySignOutController textFieldShouldReturn:]
  -[DKFindMySignOutController setAccount:]
  -[DKFindMySignOutController account]
  -[DKFindMySignOutController .cxx_destruct]
  -[DKFindMySignOutController viewDidLoad]
  -[DKFindMySignOutController textField:shouldChangeCharactersInRange:replacementString:]
  -[DKFindMySignOutController passwordField]
  -[DKFindMySignOutController _titleForError:]
  -[DKFindMySignOutController _cancelTapped:]
  -[DKFindMySignOutController _handleFMIPAuthenticationResponse:withError:forContext:completion:]
  -[DKFindMySignOutController setPasswordField:]
  -[DKFindMySignOutController forgotButton]
  -[DKFindMySignOutController setForgotButton:]
  -[DKFindMySignOutController isAuthInProgress]
  -[DKFindMySignOutController _passwordRecoveryButtonWasTapped:]
  -[DKFindMySignOutController _turnOffTapped:]
  -[DKFindMySignOutController setContainerOutlineView:]
  -[DKFindMySignOutController containerOutlineView]
  -[DKFindMySignOutController _authenticateWithPassword:]
  -[DKFindMySignOutController setIsAuthInProgress:]
  -[DKFindMySignOutController _disableFindMy:withPassword:]
  -[DKFindMySignOutController _messageForError:]
  -[DKFindMySignOutController initWithAccount:withCompletion:]


DKAccountProvider : NSObject <AASignOutFlowControllerDelegate, AAUIRecoveryFactorControllerDelegate, AIDAAccountManagerDelegate, DKAccountProvider>
 @property  ACAccountStore *accountStore
 @property  AIDAAccountManager *accountManager
 @property  <AIDAServiceOwnerProtocol> *serviceOwnersManager
 @property  UIViewController *presentingViewController
 @property  CDPLocalSecret *cachedLocalSecret
 @property  <DKFindMyProvider> *findMyProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKAccountProvider accountStore]
  -[DKAccountProvider setAccountStore:]
  -[DKAccountProvider setAccountManager:]
  -[DKAccountProvider accountManager]
  -[DKAccountProvider .cxx_destruct]
  -[DKAccountProvider setPresentingViewController:]
  -[DKAccountProvider presentingViewController]
  -[DKAccountProvider signOutFlowController:showAlertWithTitle:message:completion:]
  -[DKAccountProvider signOutFlowController:disableFindMyDeviceForAccount:completion:]
  -[DKAccountProvider signOutFlowController:signOutAccount:completion:]
  -[DKAccountProvider accountsForAccountManager:]
  -[DKAccountProvider fetchAccounts:]
  -[DKAccountProvider setCachedLocalSecret:]
  -[DKAccountProvider cachedLocalSecret]
  -[DKAccountProvider recoveryFactorController:didFinishAddingRecoveryContactWithError:]
  -[DKAccountProvider setFindMyProvider:]
  -[DKAccountProvider setServiceOwnersManager:]
  -[DKAccountProvider _addAccountDataForAccounts:toAccountsData:completion:]
  -[DKAccountProvider serviceOwnersManager]
  -[DKAccountProvider findMyProvider]
  -[DKAccountProvider _fetchAccountDataForAccount:completion:]
  -[DKAccountProvider preparationRequiredForPrimaryAppleAccountWithCompletion:]
  -[DKAccountProvider preparePrimaryAppleAccountForSignOutWithPresentingViewController:completion:]
  -[DKAccountProvider signOutPrimaryAppleAccountWithPresentingViewController:completion:]
  -[DKAccountProvider cacheLocalDevicePasscode:passcodeType:]
  -[DKAccountProvider initWithFindMyProvider:]
  -[DKAccountProvider _verifyAndRepairManateeWithPresentingViewController:completion:]
  -[DKAccountProvider _unknownFailureAlertControllerWithCompletion:]


DKNotableUserData : NSObject
 @property  long long dataSize
 @property  NSArray *accounts
 @property  BOOL findMyEnabled
 @property  DKNotableUserDataWallet *walletData
 @property  NSArray *cellularPlans

  // instance methods
  -[DKNotableUserData setDataSize:]
  -[DKNotableUserData accounts]
  -[DKNotableUserData dataSize]
  -[DKNotableUserData .cxx_destruct]
  -[DKNotableUserData setAccounts:]
  -[DKNotableUserData walletData]
  -[DKNotableUserData setWalletData:]
  -[DKNotableUserData cellularPlans]
  -[DKNotableUserData findMyEnabled]
  -[DKNotableUserData setFindMyEnabled:]
  -[DKNotableUserData setCellularPlans:]


DKFindMyProvider : NSObject <DKFindMyProvider>
 @property  @? stateChangeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKFindMyProvider .cxx_destruct]
  -[DKFindMyProvider stateChangeBlock]
  -[DKFindMyProvider setStateChangeBlock:]
  -[DKFindMyProvider disableFindMyWithPresentingViewController:completion:]
  -[DKFindMyProvider fetchFindMyState:]
  -[DKFindMyProvider _locatorStateDidChange:]
  -[DKFindMyProvider preheatFindMyState]


DKIntroViewController : OBWelcomeController
 @property  @? beginEraseBlock
 @property  @? eraseLaterBlock
 @property  NSArray *localPaymentCards
 @property  @? hasInternetConnectivity
 @property  BOOL isBasebandDead
 @property  DKNotableUserData *notableUserData
 @property  @? fetchRestoreState
 @property  BOOL preventOpeningSafari

  // instance methods
  -[DKIntroViewController .cxx_destruct]
  -[DKIntroViewController viewDidLoad]
  -[DKIntroViewController preventOpeningSafari]
  -[DKIntroViewController init]
  -[DKIntroViewController setPreventOpeningSafari:]
  -[DKIntroViewController _continueTapped:]
  -[DKIntroViewController notableUserData]
  -[DKIntroViewController _addNotableUserDataItemsView]
  -[DKIntroViewController _notNowTapped:]
  -[DKIntroViewController _createNotableUserDataCardForAppsAndData:]
  -[DKIntroViewController _createNotableUserDataCardForAccounts:]
  -[DKIntroViewController _createNotableUserDataCardForFindMy:]
  -[DKIntroViewController _createNotableUserDataCardForWallet:]
  -[DKIntroViewController _createNotableUserDataCardForCellularPlans:]
  -[DKIntroViewController fetchRestoreState]
  -[DKIntroViewController _presentRestoreWarning:]
  -[DKIntroViewController isBasebandDead]
  -[DKIntroViewController localPaymentCards]
  -[DKIntroViewController hasInternetConnectivity]
  -[DKIntroViewController beginEraseBlock]
  -[DKIntroViewController _presentBasebandDeadWarning:]
  -[DKIntroViewController _presentLocalPaymentCardConfirmation:]
  -[DKIntroViewController _presentLocalDataWarning:]
  -[DKIntroViewController eraseLaterBlock]
  -[DKIntroViewController setBeginEraseBlock:]
  -[DKIntroViewController setEraseLaterBlock:]
  -[DKIntroViewController setLocalPaymentCards:]
  -[DKIntroViewController setHasInternetConnectivity:]
  -[DKIntroViewController setIsBasebandDead:]
  -[DKIntroViewController setNotableUserData:]
  -[DKIntroViewController setFetchRestoreState:]


DKNotableUserDataWallet : NSObject
 @property  BOOL hasCards
 @property  NSArray *localPaymentCards

  // instance methods
  -[DKNotableUserDataWallet .cxx_destruct]
  -[DKNotableUserDataWallet hasCards]
  -[DKNotableUserDataWallet localPaymentCards]
  -[DKNotableUserDataWallet setLocalPaymentCards:]
  -[DKNotableUserDataWallet initWithCards:localPaymentCards:]
  -[DKNotableUserDataWallet setHasCards:]


DKTelephonyProvider : NSObject <DKTelephonyProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKTelephonyProvider cellularPlans]


DKPasscodeProvider : NSObject <DKPasscodeProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKPasscodeProvider isDevicePasscodeSet]
  -[DKPasscodeProvider simplePasscodeType]
  -[DKPasscodeProvider unlockType]
  -[DKPasscodeProvider verifyPasscode:]
  -[DKPasscodeProvider isScreenTimePasscodeSet]
  -[DKPasscodeProvider verifyScreenTimePasscode:]


DKWalletProvider : NSObject <DKWalletProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKWalletProvider hasCards]
  -[DKWalletProvider localPaymentCards]


DKNotableUserDataCardPrimaryCell : UIView
 @property  UIView *iconView
 @property  UIStackView *labelContainer
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UIImageView *chevronImageView
 @property  UIView *separatorView
 @property  BOOL expanded
 @property  BOOL hideChevron

  // instance methods
  -[DKNotableUserDataCardPrimaryCell titleLabel]
  -[DKNotableUserDataCardPrimaryCell setSubtitleLabel:]
  -[DKNotableUserDataCardPrimaryCell _subtitleFont]
  -[DKNotableUserDataCardPrimaryCell _titleFont]
  -[DKNotableUserDataCardPrimaryCell isExpanded]
  -[DKNotableUserDataCardPrimaryCell traitCollectionDidChange:]
  -[DKNotableUserDataCardPrimaryCell .cxx_destruct]
  -[DKNotableUserDataCardPrimaryCell setTitleLabel:]
  -[DKNotableUserDataCardPrimaryCell subtitleLabel]
  -[DKNotableUserDataCardPrimaryCell setSeparatorView:]
  -[DKNotableUserDataCardPrimaryCell setExpanded:]
  -[DKNotableUserDataCardPrimaryCell chevronImageView]
  -[DKNotableUserDataCardPrimaryCell setChevronImageView:]
  -[DKNotableUserDataCardPrimaryCell hideChevron]
  -[DKNotableUserDataCardPrimaryCell separatorView]
  -[DKNotableUserDataCardPrimaryCell iconView]
  -[DKNotableUserDataCardPrimaryCell setIconView:]
  -[DKNotableUserDataCardPrimaryCell _chevronImage]
  -[DKNotableUserDataCardPrimaryCell initWithTitle:subtitle:icon:]
  -[DKNotableUserDataCardPrimaryCell setHideChevron:]
  -[DKNotableUserDataCardPrimaryCell labelContainer]
  -[DKNotableUserDataCardPrimaryCell setLabelContainer:]


DKNotableUserDataCardView : UIView
 @property  UIStackView *stackView
 @property  UIStackView *secondaryStackView
 @property  NSMutableArray *cells
 @property  BOOL expanded
 @property  NSLayoutConstraint *bottomStackViewConstraint
 @property  DKNotableUserDataCardPrimaryCell *primaryCell

  // instance methods
  -[DKNotableUserDataCardView stackView]
  -[DKNotableUserDataCardView cells]
  -[DKNotableUserDataCardView isExpanded]
  -[DKNotableUserDataCardView .cxx_destruct]
  -[DKNotableUserDataCardView setStackView:]
  -[DKNotableUserDataCardView setExpanded:]
  -[DKNotableUserDataCardView setCells:]
  -[DKNotableUserDataCardView initWithTitle:subtitle:icon:]
  -[DKNotableUserDataCardView addCardCell:]
  -[DKNotableUserDataCardView primaryCell]
  -[DKNotableUserDataCardView bottomStackViewConstraint]
  -[DKNotableUserDataCardView secondaryStackView]
  -[DKNotableUserDataCardView _toggleExpanded]
  -[DKNotableUserDataCardView setSecondaryStackView:]
  -[DKNotableUserDataCardView setBottomStackViewConstraint:]
  -[DKNotableUserDataCardView setPrimaryCell:]


DKCloudProvider : NSObject <BYClientDaemonCloudSyncProtocol, DKCloudProvider>
 @property  @? progressHandler
 @property  @? completion
 @property  NSArray *backupProviders
 @property  BYBuddyDaemonCloudSyncClient *cloudSyncClient
 @property  double timeRemaining
 @property  NSProgress *backupProgress
 @property  NSProgress *syncProgress
 @property  NSError *backupError
 @property  NSArray *syncErrors
 @property  BOOL notifiedCompletion
 @property  NSObject<OS_dispatch_queue> *progressQueue
 @property  NWPathEvaluator *pathEvaluator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKCloudProvider completion]
  -[DKCloudProvider setCompletion:]
  -[DKCloudProvider isRestoring]
  -[DKCloudProvider timeRemaining]
  -[DKCloudProvider .cxx_destruct]
  -[DKCloudProvider setProgressHandler:]
  -[DKCloudProvider init]
  -[DKCloudProvider setPathEvaluator:]
  -[DKCloudProvider pathEvaluator]
  -[DKCloudProvider setProgressQueue:]
  -[DKCloudProvider progressHandler]
  -[DKCloudProvider syncErrors]
  -[DKCloudProvider progressQueue]
  -[DKCloudProvider syncProgress:]
  -[DKCloudProvider syncCompletedWithErrors:]
  -[DKCloudProvider setTimeRemaining:]
  -[DKCloudProvider backupProgress]
  -[DKCloudProvider syncProgress]
  -[DKCloudProvider setBackupProgress:]
  -[DKCloudProvider setSyncProgress:]
  -[DKCloudProvider backupError]
  -[DKCloudProvider setBackupError:]
  -[DKCloudProvider setSyncErrors:]
  -[DKCloudProvider cloudSyncClient]
  -[DKCloudProvider setCloudSyncClient:]
  -[DKCloudProvider backupProviders]
  -[DKCloudProvider setNotifiedCompletion:]
  -[DKCloudProvider _startBackupWithProviders:allowExpensiveCellular:]
  -[DKCloudProvider _communicateProgress]
  -[DKCloudProvider _startBackupForProvider:remainingProviders:allowExpensiveCellular:]
  -[DKCloudProvider notifiedCompletion]
  -[DKCloudProvider isUploadSupportedForCurrentNetwork]
  -[DKCloudProvider hasDataToUpload:]
  -[DKCloudProvider beginUploadAllowingExpensiveCellular:progressHandler:completion:]
  -[DKCloudProvider cancelUpload]
  -[DKCloudProvider setBackupProviders:]


DKPresenter : NSObject
  // class methods
  +[DKPresenter presentUsingParentViewController:configuration:completion:]
  +[DKPresenter presentUsingParentViewController:]
  +[DKPresenter presentUsingParentViewController:completion:]
  +[DKPresenter spinnerController]
  +[DKPresenter presentInSettings]


DKBackupProvider : NSObject <MBManagerDelegate>
 @property  ACAccount *account
 @property  MBManager *manager
 @property  @? progressHandler
 @property  @? completionHandler

  // instance methods
  -[DKBackupProvider setAccount:]
  -[DKBackupProvider account]
  -[DKBackupProvider isRestoring]
  -[DKBackupProvider setManager:]
  -[DKBackupProvider manager:didUpdateProgress:estimatedTimeRemaining:]
  -[DKBackupProvider .cxx_destruct]
  -[DKBackupProvider setProgressHandler:]
  -[DKBackupProvider initWithAccount:]
  -[DKBackupProvider setCompletionHandler:]
  -[DKBackupProvider manager]
  -[DKBackupProvider progressHandler]
  -[DKBackupProvider cancel]
  -[DKBackupProvider isBackingUp]
  -[DKBackupProvider managerDidLoseConnectionToService:]
  -[DKBackupProvider completionHandler]
  -[DKBackupProvider managerDidFinishBackup:]
  -[DKBackupProvider isBackupEnabled]
  -[DKBackupProvider manager:didFailBackupWithError:]
  -[DKBackupProvider isManualBackupOnCellularAllowed]
  -[DKBackupProvider startBackupWithExpensiveCellularAllowed:progressHandler:completionHandler:]


DKNotableUserDataCellularPlan : NSObject
 @property  NSString *carrierName
 @property  NSString *phoneNumber

  // instance methods
  -[DKNotableUserDataCellularPlan setPhoneNumber:]
  -[DKNotableUserDataCellularPlan carrierName]
  -[DKNotableUserDataCellularPlan .cxx_destruct]
  -[DKNotableUserDataCellularPlan phoneNumber]
  -[DKNotableUserDataCellularPlan setCarrierName:]
  -[DKNotableUserDataCellularPlan initWithCarrierName:phoneNumber:]


DKNotableUserDataAccount : NSObject
 @property  UIImage *profilePicture
 @property  NSString *name
 @property  NSString *username

  // instance methods
  -[DKNotableUserDataAccount name]
  -[DKNotableUserDataAccount .cxx_destruct]
  -[DKNotableUserDataAccount setName:]
  -[DKNotableUserDataAccount username]
  -[DKNotableUserDataAccount setUsername:]
  -[DKNotableUserDataAccount setProfilePicture:]
  -[DKNotableUserDataAccount profilePicture]
  -[DKNotableUserDataAccount initWithProfilePicture:name:username:]


DKPasscodeViewController : OBPasscodeViewController <OBPasscodeViewControllerDelegate>
 @property  int simplePasscodeType
 @property  @? verifyPasscode
 @property  @? passcodeVerified
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKPasscodeViewController .cxx_destruct]
  -[DKPasscodeViewController init]
  -[DKPasscodeViewController completionButtonTitleForPasscodeViewController:]
  -[DKPasscodeViewController passcodeViewController:didEnterPasscode:]
  -[DKPasscodeViewController passcodeViewController:shouldEnableCompletionButtonForPasscode:]
  -[DKPasscodeViewController simplePasscodeType]
  -[DKPasscodeViewController setSimplePasscodeType:]
  -[DKPasscodeViewController verifyPasscode]
  -[DKPasscodeViewController passcodeVerified]
  -[DKPasscodeViewController setUnlockScreenType:simplePasscodeType:]
  -[DKPasscodeViewController setVerifyPasscode:]
  -[DKPasscodeViewController setPasscodeVerified:]


DKConfiguration : NSObject
 @property  BOOL allowNonInteractiveCloudUpload
 @property  BOOL upsellTradeIn
 @property  BOOL postFollowUp
 @property  BOOL skipBackup
 @property  BOOL preventOpeningSafari

  // class methods
  +[DKConfiguration defaultConfiguration]
  +[DKConfiguration setupAssistantConfiguration]

  // instance methods
  -[DKConfiguration preventOpeningSafari]
  -[DKConfiguration init]
  -[DKConfiguration setPreventOpeningSafari:]
  -[DKConfiguration setUpsellTradeIn:]
  -[DKConfiguration postFollowUp]
  -[DKConfiguration setPostFollowUp:]
  -[DKConfiguration setSkipBackup:]
  -[DKConfiguration upsellTradeIn]
  -[DKConfiguration skipBackup]
  -[DKConfiguration allowNonInteractiveCloudUpload]
  -[DKConfiguration setAllowNonInteractiveCloudUpload:]


DKNotableUserDataProvider : NSObject <DKNotableUserDataProvider>
 @property  <DKAccountProvider> *accountProvider
 @property  <DKFindMyProvider> *findMyProvider
 @property  <DKStorageProvider> *storageProvider
 @property  <DKTelephonyProvider> *telephonyProvider
 @property  <DKWalletProvider> *walletProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKNotableUserDataProvider .cxx_destruct]
  -[DKNotableUserDataProvider init]
  -[DKNotableUserDataProvider accountProvider]
  -[DKNotableUserDataProvider setAccountProvider:]
  -[DKNotableUserDataProvider telephonyProvider]
  -[DKNotableUserDataProvider storageProvider]
  -[DKNotableUserDataProvider setStorageProvider:]
  -[DKNotableUserDataProvider setFindMyProvider:]
  -[DKNotableUserDataProvider findMyProvider]
  -[DKNotableUserDataProvider walletProvider]
  -[DKNotableUserDataProvider _createWalletData]
  -[DKNotableUserDataProvider fetchNotableUserData:]
  -[DKNotableUserDataProvider setTelephonyProvider:]
  -[DKNotableUserDataProvider setWalletProvider:]
  -[DKNotableUserDataProvider initWithAccountProvider:findMyProvider:walletProvider:]


DKNavigationController : UINavigationController
  // instance methods
  -[DKNavigationController supportedInterfaceOrientations]


DKPromptCloudUploadViewController : OBWelcomeController
 @property  @? uploadThenEraseBlock
 @property  @? eraseNowBlock
 @property  @? hasInternetConnectivity
 @property  @? shouldWarnForDataUsage
 @property  @? presentNetworkSettings

  // instance methods
  -[DKPromptCloudUploadViewController .cxx_destruct]
  -[DKPromptCloudUploadViewController viewDidLoad]
  -[DKPromptCloudUploadViewController init]
  -[DKPromptCloudUploadViewController hasInternetConnectivity]
  -[DKPromptCloudUploadViewController setHasInternetConnectivity:]
  -[DKPromptCloudUploadViewController _uploadTapped:]
  -[DKPromptCloudUploadViewController _eraseTapped:]
  -[DKPromptCloudUploadViewController shouldWarnForDataUsage]
  -[DKPromptCloudUploadViewController uploadThenEraseBlock]
  -[DKPromptCloudUploadViewController presentNetworkSettings]
  -[DKPromptCloudUploadViewController eraseNowBlock]
  -[DKPromptCloudUploadViewController setUploadThenEraseBlock:]
  -[DKPromptCloudUploadViewController setEraseNowBlock:]
  -[DKPromptCloudUploadViewController setShouldWarnForDataUsage:]
  -[DKPromptCloudUploadViewController setPresentNetworkSettings:]


DKFollowUp : NSObject
  // class methods
  +[DKFollowUp clearFollowUp]
  +[DKFollowUp postFollowUp]


DKNotableUserDataCardCell : UIView
 @property  UIView *accessoryView
 @property  UIStackView *labelContainer
 @property  UILabel *titleLabel
 @property  UILabel *stateLabel
 @property  UILabel *subtitleLabel

  // instance methods
  -[DKNotableUserDataCardCell titleLabel]
  -[DKNotableUserDataCardCell setSubtitleLabel:]
  -[DKNotableUserDataCardCell _titleFont]
  -[DKNotableUserDataCardCell traitCollectionDidChange:]
  -[DKNotableUserDataCardCell .cxx_destruct]
  -[DKNotableUserDataCardCell setTitleLabel:]
  -[DKNotableUserDataCardCell subtitleLabel]
  -[DKNotableUserDataCardCell setAccessoryView:]
  -[DKNotableUserDataCardCell accessoryView]
  -[DKNotableUserDataCardCell _bodyFont]
  -[DKNotableUserDataCardCell labelContainer]
  -[DKNotableUserDataCardCell setLabelContainer:]
  -[DKNotableUserDataCardCell initWithTitle:subtitle:accessoryView:]
  -[DKNotableUserDataCardCell _stateFont]
  -[DKNotableUserDataCardCell _stateStackViewAxis]
  -[DKNotableUserDataCardCell stateLabel]
  -[DKNotableUserDataCardCell setStateLabel:]


DKScreenTimePasscodeViewController : OBPasscodeViewController <OBPasscodeViewControllerDelegate>
 @property  @? verifyPasscode
 @property  @? passcodeVerified
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKScreenTimePasscodeViewController .cxx_destruct]
  -[DKScreenTimePasscodeViewController completionButtonTitleForPasscodeViewController:]
  -[DKScreenTimePasscodeViewController passcodeViewController:didEnterPasscode:]
  -[DKScreenTimePasscodeViewController passcodeViewController:shouldEnableCompletionButtonForPasscode:]
  -[DKScreenTimePasscodeViewController initWithDeviceName:]
  -[DKScreenTimePasscodeViewController verifyPasscode]
  -[DKScreenTimePasscodeViewController passcodeVerified]
  -[DKScreenTimePasscodeViewController setVerifyPasscode:]
  -[DKScreenTimePasscodeViewController setPasscodeVerified:]


DKCloudUploadViewController : OBSetupAssistantProgressController
 @property  NSDateComponentsFormatter *durationFormatter
 @property  unsigned long uploadResult
 @property  BOOL showUploadFailureAlert
 @property  @? cancelBlock
 @property  @? skipBlock

  // instance methods
  -[DKCloudUploadViewController .cxx_destruct]
  -[DKCloudUploadViewController viewDidLoad]
  -[DKCloudUploadViewController viewDidAppear:]
  -[DKCloudUploadViewController init]
  -[DKCloudUploadViewController cancelBlock]
  -[DKCloudUploadViewController setCancelBlock:]
  -[DKCloudUploadViewController setProgress:]
  -[DKCloudUploadViewController _cancelTapped:]
  -[DKCloudUploadViewController durationFormatter]
  -[DKCloudUploadViewController setDurationFormatter:]
  -[DKCloudUploadViewController _skipTapped:]
  -[DKCloudUploadViewController showUploadFailureAlert]
  -[DKCloudUploadViewController uploadResult]
  -[DKCloudUploadViewController _showUploadFailureAlertForResult:]
  -[DKCloudUploadViewController setShowUploadFailureAlert:]
  -[DKCloudUploadViewController _timeRemainingString:]
  -[DKCloudUploadViewController setUploadResult:]
  -[DKCloudUploadViewController skipBlock]
  -[DKCloudUploadViewController uploadProgress:withTimeRemaining:]
  -[DKCloudUploadViewController uploadDidComplete:]
  -[DKCloudUploadViewController setSkipBlock:]


DKEraseFlow : NSObject <SBSHardwareButtonEventConsuming>
 @property  DKConfiguration *configuration
 @property  UINavigationController *navigationController
 @property  UIViewController *initialViewController
 @property  BOOL skipLocalDataCheck
 @property  BOOL allowExpensiveCellular
 @property  DKNotableUserData *notableUserData
 @property  NWPathEvaluator *pathEvaluator
 @property  @? cloudUploadProgressHandler
 @property  @? cloudUploadCompletion
 @property  float cloudUploadProgress
 @property  double cloudUploadTimeRemaining
 @property  unsigned long cloudUploadResult
 @property  BOOL cloudUploadInProgress
 @property  BOOL cloudUploadSucceeded
 @property  <BSInvalidatable> *homeButtonConsumer
 @property  @? completion
 @property  @? eraseDevice
 @property  @? hasInternetConnectivity
 @property  @? isBasebandDead
 @property  @? presentNetworkSettings
 @property  <DKAccountProvider> *accountProvider
 @property  <DKFindMyProvider> *findMyProvider
 @property  <DKNotableUserDataProvider> *notableUserDataProvider
 @property  <DKPasscodeProvider> *passcodeProvider
 @property  <DKCloudProvider> *cloudProvider
 @property  <DKWalletProvider> *walletProvider
 @property  NSString *deviceName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DKEraseFlow _stringForState:]

  // instance methods
  -[DKEraseFlow completion]
  -[DKEraseFlow setCompletion:]
  -[DKEraseFlow deviceName]
  -[DKEraseFlow consumeAnyPressEventForButtonKind:]
  -[DKEraseFlow configuration]
  -[DKEraseFlow .cxx_destruct]
  -[DKEraseFlow setDeviceName:]
  -[DKEraseFlow startFlow]
  -[DKEraseFlow initWithNavigationController:]
  -[DKEraseFlow setPathEvaluator:]
  -[DKEraseFlow pathEvaluator]
  -[DKEraseFlow accountProvider]
  -[DKEraseFlow state]
  -[DKEraseFlow setNavigationController:]
  -[DKEraseFlow navigationController]
  -[DKEraseFlow initWithConfiguration:]
  -[DKEraseFlow setAccountProvider:]
  -[DKEraseFlow setConfiguration:]
  -[DKEraseFlow _viewControllerForState:]
  -[DKEraseFlow setInitialViewController:]
  -[DKEraseFlow initialViewController]
  -[DKEraseFlow passcodeProvider]
  -[DKEraseFlow setPasscodeProvider:]
  -[DKEraseFlow setFindMyProvider:]
  -[DKEraseFlow findMyProvider]
  -[DKEraseFlow notableUserData]
  -[DKEraseFlow isBasebandDead]
  -[DKEraseFlow hasInternetConnectivity]
  -[DKEraseFlow setHasInternetConnectivity:]
  -[DKEraseFlow setIsBasebandDead:]
  -[DKEraseFlow setNotableUserData:]
  -[DKEraseFlow initWithNavigationController:configuration:]
  -[DKEraseFlow prepareFlow:]
  -[DKEraseFlow showFlowContainerFromParentViewController:completion:]
  -[DKEraseFlow walletProvider]
  -[DKEraseFlow setWalletProvider:]
  -[DKEraseFlow presentNetworkSettings]
  -[DKEraseFlow setPresentNetworkSettings:]
  -[DKEraseFlow notableUserDataProvider]
  -[DKEraseFlow _startNonInteractiveCloudUpload]
  -[DKEraseFlow _supportsNonInteractiveCloudUpload:]
  -[DKEraseFlow _startFlow]
  -[DKEraseFlow _hostWillTerminate]
  -[DKEraseFlow _unregisterForAnalyticsNotifications]
  -[DKEraseFlow _sendTerminatedAnalyticsEventWithState:willErase:reason:]
  -[DKEraseFlow cloudProvider]
  -[DKEraseFlow setCloudUploadProgress:]
  -[DKEraseFlow setCloudUploadTimeRemaining:]
  -[DKEraseFlow setCloudUploadProgressHandler:]
  -[DKEraseFlow setCloudUploadResult:]
  -[DKEraseFlow setCloudUploadSucceeded:]
  -[DKEraseFlow setCloudUploadCompletion:]
  -[DKEraseFlow setCloudUploadInProgress:]
  -[DKEraseFlow cloudUploadProgressHandler]
  -[DKEraseFlow cloudUploadCompletion]
  -[DKEraseFlow _registerForAnalyticsNotifications]
  -[DKEraseFlow _advanceToState:]
  -[DKEraseFlow _endFlow]
  -[DKEraseFlow _allowHomeButton]
  -[DKEraseFlow _viewControllerClassForState:]
  -[DKEraseFlow _nextStateFromState:completion:]
  -[DKEraseFlow _isHomeButtonAllowedForState:]
  -[DKEraseFlow _disallowHomeButton]
  -[DKEraseFlow isCloudUploadInProgress]
  -[DKEraseFlow cloudUploadProgress]
  -[DKEraseFlow cloudUploadTimeRemaining]
  -[DKEraseFlow cloudUploadResult]
  -[DKEraseFlow allowExpensiveCellular]
  -[DKEraseFlow _eraseDevice]
  -[DKEraseFlow _advanceFromState:]
  -[DKEraseFlow _endFlowWithReason:]
  -[DKEraseFlow setSkipLocalDataCheck:]
  -[DKEraseFlow setAllowExpensiveCellular:]
  -[DKEraseFlow _endFlowForCancellationWithReason:]
  -[DKEraseFlow cloudUploadSucceeded]
  -[DKEraseFlow skipLocalDataCheck]
  -[DKEraseFlow homeButtonConsumer]
  -[DKEraseFlow setHomeButtonConsumer:]
  -[DKEraseFlow eraseDevice]
  -[DKEraseFlow _requiresCellularPlanConfirmation]
  -[DKEraseFlow _presentEraseCellularPlanConfirmation:]
  -[DKEraseFlow _presentEraseConfirmation:]
  -[DKEraseFlow initForSetupAssistant]
  -[DKEraseFlow setEraseDevice:]
  -[DKEraseFlow setNotableUserDataProvider:]
  -[DKEraseFlow setCloudProvider:]


DKStorageProvider : NSObject <DKStorageProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKStorageProvider dataSize]


01 00 0100 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AAFMIPAuthenticateRequest 
01 00 1500 /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI: AAUID2DEncryptionFlowContext 
01 00 1500 /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI: AAUIDeviceLocatorConfirmationUtilitiesContext 
01 00 1500 /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI: AAUIDeviceLocatorService 
01 00 1500 /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI: AAUIManateeStateValidator 
01 00 1500 /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI: AAUIProfilePictureStore 
01 00 1200 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1300 /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/AppleIDSSOAuthentication: AIDAAccountManager 
01 00 1300 /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/AppleIDSSOAuthentication: AIDAMutableServiceContext 
01 00 1300 /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/AppleIDSSOAuthentication: AIDAServiceOwnersManager 
01 00 0600 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationController 
01 00 0500 /System/Library/PrivateFrameworks/AuthKitUI.framework/AuthKitUI: AKAppleIDAuthenticationInAppContext 
01 00 0e00 /System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant: BYBuddyDaemonCloudSyncClient 
01 00 1400 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPLocalSecret 
01 00 1600 /System/Library/PrivateFrameworks/EmbeddedDataReset.framework/EmbeddedDataReset: DDRResetOptions 
01 00 1600 /System/Library/PrivateFrameworks/EmbeddedDataReset.framework/EmbeddedDataReset: DDRResetRequest 
01 00 1600 /System/Library/PrivateFrameworks/EmbeddedDataReset.framework/EmbeddedDataReset: DDRResetService 
01 00 0700 /System/Library/PrivateFrameworks/Disembark.framework/Disembark: DKInternalFollowUp 
01 00 0a00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0200 /System/Library/PrivateFrameworks/MobileBackup.framework/MobileBackup: MBCellularAccess 
01 00 0200 /System/Library/PrivateFrameworks/MobileBackup.framework/MobileBackup: MBManager 
01 00 0200 /System/Library/PrivateFrameworks/MobileBackup.framework/MobileBackup: MBStartBackupOptions 
01 00 0f00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSListFormatter 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0b00 /System/Library/Frameworks/Network.framework/Network: NWPathEvaluator 
01 00 1800 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBBoldTrayButton 
01 00 1800 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBLinkTrayButton 
01 00 1800 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBPasscodeViewController 
01 00 1800 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBSetupAssistantProgressController 
01 00 1800 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBWelcomeController 
01 00 1000 /System/Library/Frameworks/PassKit.framework/PassKit: PKPassLibrary 
01 00 1100 /System/Library/PrivateFrameworks/SettingsCellularUI.framework/SettingsCellularUI: PSUICellularPlanManagerCache 
01 00 0300 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSHardwareButtonService 
01 00 0d00 /System/Library/PrivateFrameworks/SettingsFoundation.framework/SettingsFoundation: SFRestrictionsPasscodeController 
01 00 0800 /System/Library/PrivateFrameworks/StorageData.framework/StorageData: STStorageDiskMonitor 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
