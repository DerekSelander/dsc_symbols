|| __DATA.__data _SSUIRunPPTEntitlement
|| __DATA.__data _SSUIServiceIdentifier
|| __DATA.__data _SSUIShowScreenshotUIEntitlement
|| __DATA.__data _ScreenshotServicesServiceBundleIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_SSBlurView
|| __DATA.__objc_data _OBJC_CLASS_$_SSBlurringFlashView
|| __DATA.__objc_data _OBJC_CLASS_$_SSChromeHelper
|| __DATA.__objc_data _OBJC_CLASS_$_SSChromePlaceholderView
|| __DATA.__objc_data _OBJC_CLASS_$_SSChromePlaceholderViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SSDocumentUpdateAction
|| __DATA.__objc_data _OBJC_CLASS_$_SSEnvironmentDescription
|| __DATA.__objc_data _OBJC_CLASS_$_SSEnvironmentDescriptionAppleInternalOptions
|| __DATA.__objc_data _OBJC_CLASS_$_SSEnvironmentElement
|| __DATA.__objc_data _OBJC_CLASS_$_SSEnvironmentElementDocumentUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_SSEnvironmentElementMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_SSEnvironmentElementMetadataUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_SSFlashView
|| __DATA.__objc_data _OBJC_CLASS_$_SSHarvestedApplicationDocument
|| __DATA.__objc_data _OBJC_CLASS_$_SSHarvestedApplicationMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_SSHarvestedDeviceMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_SSHarvestedLocalizationMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_SSImageIdentifierAction
|| __DATA.__objc_data _OBJC_CLASS_$_SSImageIdentifierUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_SSImageSurface
|| __DATA.__objc_data _OBJC_CLASS_$_SSMainScreenSnapshotter
|| __DATA.__objc_data _OBJC_CLASS_$_SSMaterial
|| __DATA.__objc_data _OBJC_CLASS_$_SSMetadataUpdateAction
|| __DATA.__objc_data _OBJC_CLASS_$_SSOtherScreenSnapshotter
|| __DATA.__objc_data _OBJC_CLASS_$_SSPreheatAction
|| __DATA.__objc_data _OBJC_CLASS_$_SSReduceTransparencyFlashView
|| __DATA.__objc_data _OBJC_CLASS_$_SSRemoteAlertHandleProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SSScreenCaptureAbilityCheck
|| __DATA.__objc_data _OBJC_CLASS_$_SSScreenCapturerPresentationOptions
|| __DATA.__objc_data _OBJC_CLASS_$_SSScreenCapturerScreenshotOptions
|| __DATA.__objc_data _OBJC_CLASS_$_SSScreenCapturerScreenshotOptionsCollection
|| __DATA.__objc_data _OBJC_CLASS_$_SSScreenSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_SSScreenSnapshotter
|| __DATA.__objc_data _OBJC_CLASS_$_SSScreenshotAction
|| __DATA.__objc_data _OBJC_CLASS_$_SSScreenshotAssetManager
|| __DATA.__objc_data _OBJC_CLASS_$_SSScreenshotAssetManagerPhotoLibraryBackend
|| __DATA.__objc_data _OBJC_CLASS_$_SSScreenshotAssetManagerRegistrationOptions
|| __DATA.__objc_data _OBJC_CLASS_$_SSScreenshotMetadataHarvester
|| __DATA.__objc_data _OBJC_CLASS_$_SSTestingCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SSUIRunPPTServiceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSUIService
|| __DATA.__objc_data _OBJC_CLASS_$_SSUIServiceClient
|| __DATA.__objc_data _OBJC_CLASS_$_SSUIServiceOptions
|| __DATA.__objc_data _OBJC_CLASS_$_SSUIServiceOptionsAssetMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_SSUIServiceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSUIShowScreenshotServiceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSUIShowScreenshotUIWithImageServiceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SSXPCEncodableRectWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__SSSFlashSuperColorView
|| __DATA.__objc_data _OBJC_CLASS_$__SSScreenCaptureResults
|| __DATA.__objc_data _OBJC_METACLASS_$_SSBlurView
|| __DATA.__objc_data _OBJC_METACLASS_$_SSBlurringFlashView
|| __DATA.__objc_data _OBJC_METACLASS_$_SSChromeHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_SSChromePlaceholderView
|| __DATA.__objc_data _OBJC_METACLASS_$_SSChromePlaceholderViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SSDocumentUpdateAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SSEnvironmentDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_SSEnvironmentDescriptionAppleInternalOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_SSEnvironmentElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SSEnvironmentElementDocumentUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_SSEnvironmentElementMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_SSEnvironmentElementMetadataUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_SSFlashView
|| __DATA.__objc_data _OBJC_METACLASS_$_SSHarvestedApplicationDocument
|| __DATA.__objc_data _OBJC_METACLASS_$_SSHarvestedApplicationMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_SSHarvestedDeviceMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_SSHarvestedLocalizationMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_SSImageIdentifierAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SSImageIdentifierUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_SSImageSurface
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMainScreenSnapshotter
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMaterial
|| __DATA.__objc_data _OBJC_METACLASS_$_SSMetadataUpdateAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SSOtherScreenSnapshotter
|| __DATA.__objc_data _OBJC_METACLASS_$_SSPreheatAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SSReduceTransparencyFlashView
|| __DATA.__objc_data _OBJC_METACLASS_$_SSRemoteAlertHandleProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SSScreenCaptureAbilityCheck
|| __DATA.__objc_data _OBJC_METACLASS_$_SSScreenCapturerPresentationOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_SSScreenCapturerScreenshotOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_SSScreenCapturerScreenshotOptionsCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_SSScreenSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_SSScreenSnapshotter
|| __DATA.__objc_data _OBJC_METACLASS_$_SSScreenshotAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SSScreenshotAssetManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SSScreenshotAssetManagerPhotoLibraryBackend
|| __DATA.__objc_data _OBJC_METACLASS_$_SSScreenshotAssetManagerRegistrationOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_SSScreenshotMetadataHarvester
|| __DATA.__objc_data _OBJC_METACLASS_$_SSTestingCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUIRunPPTServiceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUIService
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUIServiceClient
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUIServiceOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUIServiceOptionsAssetMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUIServiceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUIShowScreenshotServiceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSUIShowScreenshotUIWithImageServiceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SSXPCEncodableRectWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__SSSFlashSuperColorView
|| __DATA.__objc_data _OBJC_METACLASS_$__SSScreenCaptureResults
|| __DATA_CONST.__const _SSAlertServiceViewControllerClassName
|| __DATA_CONST.__const _SSScreenshotsDisplayModeDidChangeToFullscreenNotificationName
|| __DATA_CONST.__const _SSScreenshotsDisplayModeDidChangeToPictureInPictureNotificationName
|| __DATA_CONST.__const _SSScreenshotsDisplayModeWillChangeToFullscreenNotificationName
|| __DATA_CONST.__const _SSScreenshotsDisplayModeWillChangeToPictureInPictureNotificationName
|| __DATA_CONST.__const _SSServiceBundleIdentifier
|| __DATA_CONST.__const _SSServiceViewControllerClassName
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSActiveInterfaceOrientationObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSApplicationScreenshotSupplementalDataCapturer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDittoHostViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSDittoRemoteConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSScreenCapturer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSScreenshotsWindow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSScreenshotsWindowRootViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSSnapshotter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSUIServiceServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SSVellumOpacityControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSActiveInterfaceOrientationObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSApplicationScreenshotSupplementalDataCapturer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDittoHostViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSDittoRemoteConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSScreenCapturer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSScreenshotsWindow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSScreenshotsWindowRootViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSSnapshotter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSUIServiceServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SSVellumOpacityControl
|| __TEXT.__const _SSCropHandleInsideTouchableDimension
|| __TEXT.__const _SSCropHandleOutsideTouchableDimension
|| __TEXT.__const _SSMinimumTouchableDimension
|| __TEXT.__const _ScreenshotServicesVersionNumber
|| __TEXT.__const _ScreenshotServicesVersionString
|| __TEXT.__text _SSApplyDebuggingCustomizationsToViewIfAppropriate
|| __TEXT.__text _SSAspectRatioFromSize
|| __TEXT.__text _SSCGImageBackedImageFromImage
|| __TEXT.__text _SSCGImageFromSSImageSurface
|| __TEXT.__text _SSEdgeInsetsEqualToEdgeInsets
|| __TEXT.__text _SSFloatEqualToFloat
|| __TEXT.__text _SSFloorPoint
|| __TEXT.__text _SSFloorRect
|| __TEXT.__text _SSFloorSize
|| __TEXT.__text _SSInsetsOfRectInRect
|| __TEXT.__text _SSLargestSizeWithinSizeWithAspectRatio
|| __TEXT.__text _SSPointEqualToPoint
|| __TEXT.__text _SSRectEdgeIsHorizontal
|| __TEXT.__text _SSRectEdgeIsVertical
|| __TEXT.__text _SSRectEqualToRect
|| __TEXT.__text _SSRectIsValid
|| __TEXT.__text _SSRectSubtractingRect
|| __TEXT.__text _SSRectWithOriginAndSize
|| __TEXT.__text _SSRemoteViewControllerDebuggingIsEnabled
|| __TEXT.__text _SSRoundRectToScale
|| __TEXT.__text _SSRoundSizeToScale
|| __TEXT.__text _SSSizeEqualToSize
|| __TEXT.__text _SSSubRectForRectWithUnitRect
|| __TEXT.__text _SSizeToFitSizeInAspectRatioOfSize
|| __TEXT.__text __SSEnableContinuousScreenCaptureForBugFiling
|| __TEXT.__text __SSEnableVellumExport
|| __TEXT.__text __SSGetAnnotationModePreference
|| __TEXT.__text __SSIsRemoteViewControllerDebuggingEnabled
|| __TEXT.__text __SSIsScreenshotManagerDebuggingEnabled
|| __TEXT.__text __SSIsViewSnapshotDebuggingEnabled
|| __TEXT.__text __SSLinksInPhotosEnabled
|| __TEXT.__text __SSNocturneEnabled
|| __TEXT.__text __SSQuickActionsEnabled
|| __TEXT.__text __SSRemoveBackgroundEnabled
|| __TEXT.__text __SSScreenshotsInQuickNoteEnabled
|| __TEXT.__text __SSSetAnnotationModePreference
|| __TEXT.__text __SSShouldHomeButtonDismiss
|| __TEXT.__text __SSShouldIgnoreAbilityCheck
|| __TEXT.__text __SSSignpostLog
|| __TEXT.__text __SSUserDefaults
|| __TEXT.__text __SSUserDefaultsBooleanForKeyWithNODefault
|| __TEXT.__text __SSUserDefaultsCGFloatForKeyWith0Default
__ AVFoundation: _AVAppleMakerNote_ARKitPhoto
__ BaseBoard: _BSDeserializeArrayOfBSXPCEncodableObjectsFromXPCDictionaryWithKey
__ BaseBoard: _BSSerializeArrayOfBSXPCEncodableObjectsToXPCDictionaryWithKey
__ BaseBoard: _BSSettingFlagForBool
__ BaseBoard: _BSSettingFlagIsYes
__ BaseBoard: _OBJC_CLASS_$_BSAction
__ BaseBoard: _OBJC_CLASS_$_BSActionResponse
__ BaseBoard: _OBJC_CLASS_$_BSMutableSettings
__ BaseBoard: _OBJC_CLASS_$_BSXPCCoder
__ BaseBoard: _OBJC_METACLASS_$_BSAction
__ CoreFoundation: _CFErrorCopyDescription
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreGraphics: _CGContextFillEllipseInRect
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectDivide
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_NSUserActivity
__ DisplayAndBrightnessSettings: _OBJC_CLASS_$_DBSDisplayZoomConfigurationController
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRect
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$__NSAttributedStringGrammarInflection
__ FrontBoardServices: _FBSDisplayLayoutElementControlCenterIdentifier
__ FrontBoardServices: _FBSDisplayLayoutElementLockScreenIdentifier
__ FrontBoardServices: _FBSDisplayLayoutElementNotificationCenterIdentifier
__ FrontBoardServices: _FBSDisplayLayoutElementSiriIdentifier
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActions
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _OBJC_CLASS_$_BSServiceQuality
__ FrontBoardServices: _OBJC_CLASS_$_FBSDisplayLayoutMonitor
__ FrontBoardServices: _OBJC_CLASS_$_FBSDisplayLayoutMonitorConfiguration
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ FrontBoardServices: _OBJC_CLASS_$_FBSSerialQueue
__ FrontBoardServices: _OBJC_CLASS_$_FBSServiceFacility
__ FrontBoardServices: _OBJC_CLASS_$_FBSServiceFacilityClient
__ FrontBoardServices: _OBJC_CLASS_$_FBSXPCMessage
__ FrontBoardServices: _OBJC_METACLASS_$_FBSServiceFacility
__ IOSurface: _IOSurfaceCreateXPCObject
__ IOSurface: _IOSurfaceLookupFromXPCObject
__ IOSurface: _IOSurfaceSetOwnership
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationAddImageFromSource
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceGetType
__ ImageIO: _kCGImagePropertyExifDictionary
__ ImageIO: _kCGImagePropertyExifMakerNote
__ ImageIO: _kCGImagePropertyMakerAppleDictionary
__ ImageIO: _kCGImagePropertyTIFFDictionary
__ ImageIO: _kCGImagePropertyTIFFImageDescription
__ Photos: _OBJC_CLASS_$_PHAdjustmentData
__ Photos: _OBJC_CLASS_$_PHAsset
__ Photos: _OBJC_CLASS_$_PHAssetChangeRequest
__ Photos: _OBJC_CLASS_$_PHAssetCreationOptions
__ Photos: _OBJC_CLASS_$_PHAssetCreationRequest
__ Photos: _OBJC_CLASS_$_PHContentEditingOutput
__ Photos: _OBJC_CLASS_$_PHImageManager
__ Photos: _OBJC_CLASS_$_PHImageRequestOptions
__ Photos: _OBJC_CLASS_$_PHPhotoLibrary
__ Photos: _PHImageDataFromImageAsScreenshot
__ Photos: _PHImageErrorKey
__ Photos: _PHImageManagerMaximumSize
__ Photos: _PHImageResultIsDegradedKey
__ QuartzCore: _OBJC_CLASS_$_CABackdropLayer
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _kCAFilterGaussianBlur
__ QuartzCore: _kCAFilterLinearDodgeBlendMode
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCAFilterPlusL
__ SoftLinking: __sl_dlopen
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertDefinition
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertHandle
__ SpringBoardServices: _SBSDisplayLayoutElementAppLibraryIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementAppLibraryOpenPodIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementAppSwitcherIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementCarPlayOEMIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementCarTemplateMapsIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementFloatingDockIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementHomeScreenIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementHomeScreenOpenFolderIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementLockScreenNavigationIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementLoginIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementNowPlayingIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementPasscodeIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementSpotlightFullscreenOverlayIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementSpotlightIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementTodayViewIdentifier
__ SpringBoardServices: _kSBSLockStateNotifyKey
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UICubicTimingParameters
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationItem
__ UIKit: _OBJC_CLASS_$_UIPeripheralHost
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScreenshotMetadataRequestAction
__ UIKit: _OBJC_CLASS_$_UISlider
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$_UIWindowScene
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIAccessibilityButtonShapesEnabled
__ UIKit: _UIAccessibilityIsBoldTextEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectCenteredYInRect
__ UIKit: _UIRoundToScale
__ UIKit: _UIScreenshotServicesWindowLevel
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: __UICreateCGImageFromIOSurfaceWithOptions
__ UIKit: __UIRenderDisplay
__ UIKit: __UIRenderingBufferCreate
__ UIKit: _kUIRenderingDestinationGamut
__ UIKit: _kUIRenderingDestinationOpaque
__ UIKit: _kUIRenderingDestinationScale
__ UIKit: _kUIRenderingEnforceSecureMode
__ UIKit: _kUIRenderingSourceOrientation
__ UIKit: _kUIRenderingSourceScreen
__ libAccessibility.dylib: __AXSNocturneAccessibilityModeEnabled
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_mach_send
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SSScreenCapturerScreenshotOptions : NSObject
 @property  UIImage *preparedImage
 @property  unsigned long externalFlashLayerRenderID
 @property  unsigned int externalFlashLayerContextID

  // instance methods
  -[SSScreenCapturerScreenshotOptions .cxx_destruct]
  -[SSScreenCapturerScreenshotOptions setPreparedImage:]
  -[SSScreenCapturerScreenshotOptions setExternalFlashLayerRenderID:]
  -[SSScreenCapturerScreenshotOptions setExternalFlashLayerContextID:]
  -[SSScreenCapturerScreenshotOptions preparedImage]
  -[SSScreenCapturerScreenshotOptions externalFlashLayerRenderID]
  -[SSScreenCapturerScreenshotOptions externalFlashLayerContextID]


SSScreenCapturerPresentationOptions : NSObject
 @property  unsigned long presentationMode

  // instance methods
  -[SSScreenCapturerPresentationOptions presentationMode]
  -[SSScreenCapturerPresentationOptions setPresentationMode:]


SSScreenshotAssetManagerRegistrationOptions : NSObject
 @property  unsigned long saveLocation
 @property  SSUIServiceOptionsAssetMetadata *assetMetadata
 @property  NSString *applicationBundleID
 @property  NSArray *harvestedMetadata
 @property  NSString *assetDescription

  // instance methods
  -[SSScreenshotAssetManagerRegistrationOptions setApplicationBundleID:]
  -[SSScreenshotAssetManagerRegistrationOptions assetDescription]
  -[SSScreenshotAssetManagerRegistrationOptions .cxx_destruct]
  -[SSScreenshotAssetManagerRegistrationOptions applicationBundleID]
  -[SSScreenshotAssetManagerRegistrationOptions assetMetadata]
  -[SSScreenshotAssetManagerRegistrationOptions setAssetMetadata:]
  -[SSScreenshotAssetManagerRegistrationOptions setSaveLocation:]
  -[SSScreenshotAssetManagerRegistrationOptions saveLocation]
  -[SSScreenshotAssetManagerRegistrationOptions harvestedMetadata]
  -[SSScreenshotAssetManagerRegistrationOptions setHarvestedMetadata:]


SSDittoHostViewController : _UIRemoteViewController <SSRemoteViewControllerServiceToHostInterface>
 @property  <SSDittoHostViewControllerDelegate> *delegate

  // class methods
  +[SSDittoHostViewController exportedInterface]
  +[SSDittoHostViewController serviceViewControllerInterface]
  +[SSDittoHostViewController __shouldHostRemoteTextEffectsWindow]

  // instance methods
  -[SSDittoHostViewController _canShowWhileLocked]
  -[SSDittoHostViewController dismiss]
  -[SSDittoHostViewController becomeFirstResponder]
  -[SSDittoHostViewController setDelegate:]
  -[SSDittoHostViewController delegate]
  -[SSDittoHostViewController .cxx_destruct]
  -[SSDittoHostViewController _serviceProxy]
  -[SSDittoHostViewController viewServiceDidTerminateWithError:]
  -[SSDittoHostViewController supportedInterfaceOrientations]
  -[SSDittoHostViewController screenshotExperienceHasDismissed]
  -[SSDittoHostViewController dismissScreenshotExperience]


SSHarvestedApplicationMetadata : NSObject <BSXPCSecureCoding, SSLoggable>
 @property  NSString *userActivityTitle
 @property  NSURL *userActivityURL
 @property  NSArray *contentRects
 @property  BOOL canGenerateDocument
 @property  NSData *jsonEncodedStringsInformation
 @property  int interfaceOrientation
 @property  NSString *appLanguage
 @property  NSString *preferredContentSizeCategory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *loggableDescription

  // class methods
  +[SSHarvestedApplicationMetadata supportsBSXPCSecureCoding]

  // instance methods
  -[SSHarvestedApplicationMetadata initWithBSXPCCoder:]
  -[SSHarvestedApplicationMetadata setInterfaceOrientation:]
  -[SSHarvestedApplicationMetadata interfaceOrientation]
  -[SSHarvestedApplicationMetadata .cxx_destruct]
  -[SSHarvestedApplicationMetadata setPreferredContentSizeCategory:]
  -[SSHarvestedApplicationMetadata encodeWithBSXPCCoder:]
  -[SSHarvestedApplicationMetadata preferredContentSizeCategory]
  -[SSHarvestedApplicationMetadata loggableDescription]
  -[SSHarvestedApplicationMetadata userActivityTitle]
  -[SSHarvestedApplicationMetadata setUserActivityTitle:]
  -[SSHarvestedApplicationMetadata userActivityURL]
  -[SSHarvestedApplicationMetadata setUserActivityURL:]
  -[SSHarvestedApplicationMetadata contentRects]
  -[SSHarvestedApplicationMetadata setContentRects:]
  -[SSHarvestedApplicationMetadata canGenerateDocument]
  -[SSHarvestedApplicationMetadata setCanGenerateDocument:]
  -[SSHarvestedApplicationMetadata jsonEncodedStringsInformation]
  -[SSHarvestedApplicationMetadata setJsonEncodedStringsInformation:]
  -[SSHarvestedApplicationMetadata appLanguage]
  -[SSHarvestedApplicationMetadata setAppLanguage:]


SSUIShowScreenshotServiceRequest : SSUIServiceRequest
 @property  SSUIServiceOptions *options

  // class methods
  +[SSUIShowScreenshotServiceRequest entitlement]
  +[SSUIShowScreenshotServiceRequest supportsBSXPCSecureCoding]

  // instance methods
  -[SSUIShowScreenshotServiceRequest initWithBSXPCCoder:]
  -[SSUIShowScreenshotServiceRequest .cxx_destruct]
  -[SSUIShowScreenshotServiceRequest options]
  -[SSUIShowScreenshotServiceRequest setOptions:]
  -[SSUIShowScreenshotServiceRequest encodeWithBSXPCCoder:]


SSApplicationScreenshotSupplementalDataCapturer : NSObject
  // class methods
  +[SSApplicationScreenshotSupplementalDataCapturer settingsForDocumentCapture:elementIdentifier:]

  // instance methods
  -[SSApplicationScreenshotSupplementalDataCapturer .cxx_destruct]
  -[SSApplicationScreenshotSupplementalDataCapturer init]
  -[SSApplicationScreenshotSupplementalDataCapturer captureMetadataForEnvironmentElement:withCompletionBlock:]
  -[SSApplicationScreenshotSupplementalDataCapturer captureDocumentForEnvironmentElement:withCompletionBlock:]
  -[SSApplicationScreenshotSupplementalDataCapturer _sendRequestForEnvironmentElement:info:completionBlock:]


SSScreenSnapshot : NSObject
 @property  UIImage *image
 @property  UIScreen *screen

  // class methods
  +[SSScreenSnapshot snapshotWithImage:fromScreen:]

  // instance methods
  -[SSScreenSnapshot screen]
  -[SSScreenSnapshot .cxx_destruct]
  -[SSScreenSnapshot image]


SSChromePlaceholderViewController : UIViewController
 @property  double contentAlpha
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} screenshotContentFrame
 @property  long long backgroundBlurEffectStyle
 @property  double cropsCornerContentPadding
 @property  double cropsCornerEdgeLength
 @property  double cropsCornerLineWidth
 @property  UIColor *cropsCornerColor

  // instance methods
  -[SSChromePlaceholderViewController _canShowWhileLocked]
  -[SSChromePlaceholderViewController .cxx_destruct]
  -[SSChromePlaceholderViewController setContentAlpha:]
  -[SSChromePlaceholderViewController viewDidLoad]
  -[SSChromePlaceholderViewController preferredStatusBarStyle]
  -[SSChromePlaceholderViewController viewDidLayoutSubviews]
  -[SSChromePlaceholderViewController _preferredStatusBarVisibility]
  -[SSChromePlaceholderViewController contentAlpha]
  -[SSChromePlaceholderViewController cropsCornerColor]
  -[SSChromePlaceholderViewController cropsCornerContentPadding]
  -[SSChromePlaceholderViewController cropsCornerEdgeLength]
  -[SSChromePlaceholderViewController cropsCornerLineWidth]
  -[SSChromePlaceholderViewController backgroundBlurEffectStyle]
  -[SSChromePlaceholderViewController screenshotContentFrame]


SSChromePlaceholderView : UIView <UINavigationBarDelegate>
 @property  double contentAlpha
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSChromePlaceholderView positionForBar:]
  -[SSChromePlaceholderView topBarHeight]
  -[SSChromePlaceholderView .cxx_destruct]
  -[SSChromePlaceholderView setContentAlpha:]
  -[SSChromePlaceholderView layoutSubviews]
  -[SSChromePlaceholderView initWithFrame:]
  -[SSChromePlaceholderView safeAreaInsetsDidChange]
  -[SSChromePlaceholderView contentAlpha]
  -[SSChromePlaceholderView _initializeBarButtonItems]
  -[SSChromePlaceholderView _updateBarButtonItemPositionsAnimated:]
  -[SSChromePlaceholderView _layoutTopBar]


SSEnvironmentDescriptionAppleInternalOptions : NSObject <BSXPCSecureCoding>
 @property  SSUIRunPPTServiceRequest *runPPTServiceRequest
 @property  RCPMovie *recapMovie
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSEnvironmentDescriptionAppleInternalOptions supportsBSXPCSecureCoding]

  // instance methods
  -[SSEnvironmentDescriptionAppleInternalOptions initWithBSXPCCoder:]
  -[SSEnvironmentDescriptionAppleInternalOptions .cxx_destruct]
  -[SSEnvironmentDescriptionAppleInternalOptions encodeWithBSXPCCoder:]
  -[SSEnvironmentDescriptionAppleInternalOptions setRecapMovie:]
  -[SSEnvironmentDescriptionAppleInternalOptions recapMovie]
  -[SSEnvironmentDescriptionAppleInternalOptions runPPTServiceRequest]
  -[SSEnvironmentDescriptionAppleInternalOptions setRunPPTServiceRequest:]


SSUIServiceRequest : NSObject <BSXPCSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSUIServiceRequest entitlement]
  +[SSUIServiceRequest supportsBSXPCSecureCoding]

  // instance methods
  -[SSUIServiceRequest initWithBSXPCCoder:]
  -[SSUIServiceRequest encodeWithBSXPCCoder:]


SSMetadataUpdateAction : BSAction

SSScreenshotMetadataHarvester : NSObject
  // class methods
  +[SSScreenshotMetadataHarvester harvestScreenshotMetadataAndRespondToAction:]
  +[SSScreenshotMetadataHarvester _crawlViewController:executingBlock:]
  +[SSScreenshotMetadataHarvester _crawlView:executingBlock:]
  +[SSScreenshotMetadataHarvester _contentRectsForMetadata]
  +[SSScreenshotMetadataHarvester _interfaceOrientationForMetadata]
  +[SSScreenshotMetadataHarvester _languageForMetadata]
  +[SSScreenshotMetadataHarvester _preferredContentSizeCategoryForMetadata]
  +[SSScreenshotMetadataHarvester _jsonEncodedStringsInformationForMetadata]
  +[SSScreenshotMetadataHarvester _axVisibleElementsInViewController:]
  +[SSScreenshotMetadataHarvester _stringInformationFromView:]
  +[SSScreenshotMetadataHarvester _grabUserActivityTitleWithCallback:]
  +[SSScreenshotMetadataHarvester screenshotServiceWithIdentifier:]
  +[SSScreenshotMetadataHarvester _applicationScreenshotServiceWithPrivateDelegate:]
  +[SSScreenshotMetadataHarvester _screenshotServiceForWindowScene:wantsPrivateDelegate:]
  +[SSScreenshotMetadataHarvester _screenshotServicesDelegateWithIdentifier:]
  +[SSScreenshotMetadataHarvester _grabPDFRepresentationForIdentifier:withCallback:]
  +[SSScreenshotMetadataHarvester canGenerateDocumentForIdentifier:]
  +[SSScreenshotMetadataHarvester sendResponseForAction:withObject:forKey:]


SSTestingCoordinator : NSObject
 @property  <SSTestingCoordinatorDelegate> *delegate

  // instance methods
  -[SSTestingCoordinator setDelegate:]
  -[SSTestingCoordinator delegate]
  -[SSTestingCoordinator .cxx_destruct]
  -[SSTestingCoordinator _delayedHandleRunPPTRequest:]
  -[SSTestingCoordinator handleRunPPTRequest:]


SSScreenSnapshotter : NSObject
 @property  UIScreen *screen

  // class methods
  +[SSScreenSnapshotter snapshotterForScreen:]

  // instance methods
  -[SSScreenSnapshotter screen]
  -[SSScreenSnapshotter .cxx_destruct]
  -[SSScreenSnapshotter initWithScreen:]
  -[SSScreenSnapshotter takeScreenshot]


SSUIRunPPTServiceRequest : SSUIServiceRequest
 @property  NSString *testName
 @property  unsigned long numberOfRequiredScreenshots

  // class methods
  +[SSUIRunPPTServiceRequest entitlement]
  +[SSUIRunPPTServiceRequest supportsBSXPCSecureCoding]

  // instance methods
  -[SSUIRunPPTServiceRequest setTestName:]
  -[SSUIRunPPTServiceRequest initWithBSXPCCoder:]
  -[SSUIRunPPTServiceRequest .cxx_destruct]
  -[SSUIRunPPTServiceRequest testName]
  -[SSUIRunPPTServiceRequest encodeWithBSXPCCoder:]
  -[SSUIRunPPTServiceRequest numberOfRequiredScreenshots]
  -[SSUIRunPPTServiceRequest setNumberOfRequiredScreenshots:]


SSImageIdentifierUpdate : NSObject <BSXPCSecureCoding, SSLoggable>
 @property  NSString *imageIdentifier
 @property  NSString *environmentDescriptionIdentifier
 @property  BOOL success
 @property  BSSettings *bsSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *loggableDescription

  // class methods
  +[SSImageIdentifierUpdate supportsBSXPCSecureCoding]

  // instance methods
  -[SSImageIdentifierUpdate success]
  -[SSImageIdentifierUpdate setSuccess:]
  -[SSImageIdentifierUpdate initWithBSXPCCoder:]
  -[SSImageIdentifierUpdate imageIdentifier]
  -[SSImageIdentifierUpdate .cxx_destruct]
  -[SSImageIdentifierUpdate encodeWithBSXPCCoder:]
  -[SSImageIdentifierUpdate bsSettings]
  -[SSImageIdentifierUpdate setImageIdentifier:]
  -[SSImageIdentifierUpdate loggableDescription]
  -[SSImageIdentifierUpdate environmentDescriptionIdentifier]
  -[SSImageIdentifierUpdate setEnvironmentDescriptionIdentifier:]


SSScreenshotAssetManagerPhotoLibraryBackend : NSObject <SSScreenshotAssetManagerBackend>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSScreenshotAssetManagerPhotoLibraryBackend imageDataFromImage:withProperties:]
  +[SSScreenshotAssetManagerPhotoLibraryBackend _gameHighlightsImageDataFromImageData:withOptions:]
  +[SSScreenshotAssetManagerPhotoLibraryBackend _gameHighlightsImageDataFromImage:withOptions:]

  // instance methods
  -[SSScreenshotAssetManagerPhotoLibraryBackend photoLibrary]
  -[SSScreenshotAssetManagerPhotoLibraryBackend .cxx_destruct]
  -[SSScreenshotAssetManagerPhotoLibraryBackend registerEntryWithImage:options:identifierHandler:]
  -[SSScreenshotAssetManagerPhotoLibraryBackend imageForPreviouslyRegisteredIdentifier:imageHandler:]
  -[SSScreenshotAssetManagerPhotoLibraryBackend updateImageData:withModificationData:forEntryWithIdentifier:registrationOptions:imageDescription:completionHandler:]
  -[SSScreenshotAssetManagerPhotoLibraryBackend saveImageToTemporaryLocation:withName:imageDescription:completionHandler:]
  -[SSScreenshotAssetManagerPhotoLibraryBackend removeEntryWithIdentifier:completionHandler:]
  -[SSScreenshotAssetManagerPhotoLibraryBackend _ARKitImageDataFromImage:]
  -[SSScreenshotAssetManagerPhotoLibraryBackend _registerEntryWithImage:options:retry:identifierHandler:]


SSScreenCaptureAbilityCheck : NSObject
 @property  BOOL isAbleToTakeScreenshots
 @property  NSString *reasonForNotBeingAbleToTakeScreenshots

  // class methods
  +[SSScreenCaptureAbilityCheck abilityCheck]

  // instance methods
  -[SSScreenCaptureAbilityCheck .cxx_destruct]
  -[SSScreenCaptureAbilityCheck isAbleToTakeScreenshots]
  -[SSScreenCaptureAbilityCheck reasonForNotBeingAbleToTakeScreenshots]
  -[SSScreenCaptureAbilityCheck setIsAbleToTakeScreenshots:]
  -[SSScreenCaptureAbilityCheck setReasonForNotBeingAbleToTakeScreenshots:]


SSUIService : NSObject
  // instance methods
  -[SSUIService .cxx_destruct]
  -[SSUIService init]
  -[SSUIService showScreenshotUIForImage:options:]
  -[SSUIService showScreenshotUI]
  -[SSUIService takeScreenshotWithOptions:]
  -[SSUIService showScreenshotUIForImage:options:withCompletion:]
  -[SSUIService _runPPTNamed:numberOfRequiredScreenshots:]


SSUIServiceOptions : NSObject <BSXPCSecureCoding, NSCopying>
 @property  unsigned long flashStyle
 @property  unsigned long saveLocation
 @property  SSUIServiceOptionsAssetMetadata *assetMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSUIServiceOptions supportsSecureCoding]
  +[SSUIServiceOptions supportsBSXPCSecureCoding]

  // instance methods
  -[SSUIServiceOptions initWithBSXPCCoder:]
  -[SSUIServiceOptions .cxx_destruct]
  -[SSUIServiceOptions copyWithZone:]
  -[SSUIServiceOptions encodeWithBSXPCCoder:]
  -[SSUIServiceOptions isEqual:]
  -[SSUIServiceOptions assetMetadata]
  -[SSUIServiceOptions setAssetMetadata:]
  -[SSUIServiceOptions setFlashStyle:]
  -[SSUIServiceOptions setSaveLocation:]
  -[SSUIServiceOptions saveLocation]
  -[SSUIServiceOptions flashStyle]


SSUIServiceOptionsAssetMetadata : NSObject <NSCopying, BSXPCSecureCoding>
 @property  NSArray *assetDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSUIServiceOptionsAssetMetadata initWithBSXPCCoder:]
  -[SSUIServiceOptionsAssetMetadata assetDescription]
  -[SSUIServiceOptionsAssetMetadata .cxx_destruct]
  -[SSUIServiceOptionsAssetMetadata copyWithZone:]
  -[SSUIServiceOptionsAssetMetadata encodeWithBSXPCCoder:]
  -[SSUIServiceOptionsAssetMetadata setAssetDescription:]


SSScreenCapturerScreenshotOptionsCollection : NSObject
  // instance methods
  -[SSScreenCapturerScreenshotOptionsCollection .cxx_destruct]
  -[SSScreenCapturerScreenshotOptionsCollection setScreenshotOptions:forScreen:]
  -[SSScreenCapturerScreenshotOptionsCollection screenshotOptionsForScreen:]


SSBlurView : UIView
 @property  double scale
 @property  double blurRadius

  // class methods
  +[SSBlurView layerClass]

  // instance methods
  -[SSBlurView _shouldAnimatePropertyWithKey:]
  -[SSBlurView setBlurRadius:]
  -[SSBlurView scale]
  -[SSBlurView blurRadius]
  -[SSBlurView initWithFrame:]
  -[SSBlurView setScale:]
  -[SSBlurView _backdropLayer]


SSScreenshotsWindow : UIWindow <SSDittoHostViewControllerDelegate, SSActiveInterfaceOrientationObserverDelegate>
 @property  <SSScreenshotsWindowDelegate> *delegate

  // class methods
  +[SSScreenshotsWindow _isSecure]

  // instance methods
  -[SSScreenshotsWindow activeInterfaceOrientationObserver:observedChangeToInterfaceOrientation:withDuration:]
  -[SSScreenshotsWindow setDelegate:]
  -[SSScreenshotsWindow _shouldAutorotateToInterfaceOrientation:]
  -[SSScreenshotsWindow remoteViewControllerOfHostViewControllerHasDismissedScreenshots:]
  -[SSScreenshotsWindow handleStatusBarChangeFromHeight:toHeight:]
  -[SSScreenshotsWindow delegate]
  -[SSScreenshotsWindow activateRemoteViewControllerIfAppropriate]
  -[SSScreenshotsWindow dealloc]
  -[SSScreenshotsWindow _dismiss]
  -[SSScreenshotsWindow .cxx_destruct]
  -[SSScreenshotsWindow remoteViewControllerDisconnectedFromHostViewController:withError:]
  -[SSScreenshotsWindow _deviceBacklightChanged:]
  -[SSScreenshotsWindow _deviceLockStateChanged:]
  -[SSScreenshotsWindow _hostViewControllerIfExists]
  -[SSScreenshotsWindow _prepareRemoteViewControllerWithCompletionHandler:]
  -[SSScreenshotsWindow _canBecomeKeyWindow]
  -[SSScreenshotsWindow init]
  -[SSScreenshotsWindow _shouldControlAutorotation]


SSChromeHelper : NSObject
  // class methods
  +[SSChromeHelper statusBarStyle]
  +[SSChromeHelper separatorView]
  +[SSChromeHelper barSeparatorColor]
  +[SSChromeHelper backgroundBlurEffectStyle]
  +[SSChromeHelper configureNavigationBarAppearance:]
  +[SSChromeHelper createFixedSpaceBarButtonItemWithWidth:]
  +[SSChromeHelper defaultBarButtonSpacing]
  +[SSChromeHelper defaultBarButtonWidth]
  +[SSChromeHelper barSeparatorSize]
  +[SSChromeHelper cropsCornerWidth]
  +[SSChromeHelper cropsCornerLength]
  +[SSChromeHelper cropsHandleOutset]
  +[SSChromeHelper availableRectForFullscreenContent:layoutBounds:bleedToBottom:topBarHeight:bottomBarHeight:userInterfaceIdiom:multipleScreenshots:]
  +[SSChromeHelper countIndicatorOffset]
  +[SSChromeHelper screenshotTopBottomMargin:]
  +[SSChromeHelper screenshotTopBottomMarginPad]
  +[SSChromeHelper screenshotTopBottomMarginPhone]
  +[SSChromeHelper widthForContentSwitcher:forView:]
  +[SSChromeHelper widthForOpacityControlInView:withContentSwitcher:]
  +[SSChromeHelper barButtonItemsLeftOfOpacitySlider]
  +[SSChromeHelper contentSwitcherPadding]
  +[SSChromeHelper statusBarVisibilityForTraitCollection:isPortrait:]


SSImageIdentifierAction : BSAction

SSHarvestedApplicationDocument : NSObject <BSXPCSecureCoding, SSLoggable>
 @property  NSData *PDFData
 @property  long long PDFPage
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} PDFVisibleRect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *loggableDescription

  // class methods
  +[SSHarvestedApplicationDocument supportsBSXPCSecureCoding]

  // instance methods
  -[SSHarvestedApplicationDocument initWithBSXPCCoder:]
  -[SSHarvestedApplicationDocument .cxx_destruct]
  -[SSHarvestedApplicationDocument encodeWithBSXPCCoder:]
  -[SSHarvestedApplicationDocument loggableDescription]
  -[SSHarvestedApplicationDocument setPDFPage:]
  -[SSHarvestedApplicationDocument PDFPage]
  -[SSHarvestedApplicationDocument PDFData]
  -[SSHarvestedApplicationDocument setPDFData:]
  -[SSHarvestedApplicationDocument PDFVisibleRect]
  -[SSHarvestedApplicationDocument setPDFVisibleRect:]


SSUIServiceClient : NSObject
  // instance methods
  -[SSUIServiceClient .cxx_destruct]
  -[SSUIServiceClient init]
  -[SSUIServiceClient sendRequest:withCompletion:]


SSFlashView : UIView
 @property  unsigned long style

  // class methods
  +[SSFlashView flashViewForStyle:]
  +[SSFlashView expectedAnimationDurationForStyle:]
  +[SSFlashView _flashViewClass]

  // instance methods
  -[SSFlashView style]
  -[SSFlashView initWithFrame:]
  -[SSFlashView setStyle:]
  -[SSFlashView flashWithCompletion:]


SSHarvestedDeviceMetadata : NSObject
 @property  NSString *buildVersion
 @property  NSString *systemLanguage
 @property  NSString *deviceClass
 @property  NSString *hardwareModel
 @property  NSNumber *mainScreenNativeScale
 @property  NSNumber *mainScreenScale
 @property  NSString *productName
 @property  NSNumber *globalUserInflectionGender
 @property  NSNumber *userInterfaceIdiom
 @property  NSNumber *isBoldTextEnabled
 @property  NSNumber *buttonShapesEnabled
 @property  NSNumber *displayZoomOption

  // instance methods
  -[SSHarvestedDeviceMetadata hardwareModel]
  -[SSHarvestedDeviceMetadata buttonShapesEnabled]
  -[SSHarvestedDeviceMetadata buildVersion]
  -[SSHarvestedDeviceMetadata deviceClass]
  -[SSHarvestedDeviceMetadata productName]
  -[SSHarvestedDeviceMetadata .cxx_destruct]
  -[SSHarvestedDeviceMetadata mainScreenScale]
  -[SSHarvestedDeviceMetadata init]
  -[SSHarvestedDeviceMetadata userInterfaceIdiom]
  -[SSHarvestedDeviceMetadata systemLanguage]
  -[SSHarvestedDeviceMetadata displayZoomOption]
  -[SSHarvestedDeviceMetadata _getHardwareModel]
  -[SSHarvestedDeviceMetadata _getProductName]
  -[SSHarvestedDeviceMetadata mainScreenNativeScale]
  -[SSHarvestedDeviceMetadata globalUserInflectionGender]
  -[SSHarvestedDeviceMetadata isBoldTextEnabled]


SSImageSurface : NSObject <BSXPCSecureCoding>
 @property  ^{__IOSurface=} backingSurface
 @property  double scale
 @property  long long orientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSImageSurface supportsBSXPCSecureCoding]

  // instance methods
  -[SSImageSurface initWithBSXPCCoder:]
  -[SSImageSurface orientation]
  -[SSImageSurface dealloc]
  -[SSImageSurface scale]
  -[SSImageSurface setOrientation:]
  -[SSImageSurface encodeWithBSXPCCoder:]
  -[SSImageSurface setScale:]
  -[SSImageSurface init]
  -[SSImageSurface setBackingSurface:]
  -[SSImageSurface backingSurface]


SSEnvironmentElement : NSObject <NSCopying, BSXPCSecureCoding, SSLoggable>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rect
 @property  NSString *bundleIdentifier
 @property  NSString *elementIdentifier
 @property  NSString *identifier
 @property  BOOL hasKeyboardFocus
 @property  BOOL supportsMetadataCapture
 @property  SSHarvestedApplicationMetadata *metadata
 @property  SSHarvestedApplicationDocument *document
 @property  BOOL isAppLauncher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *loggableDescription

  // class methods
  +[SSEnvironmentElement supportsBSXPCSecureCoding]
  +[SSEnvironmentElement _metadataIdentifierBlocklist]

  // instance methods
  -[SSEnvironmentElement document]
  -[SSEnvironmentElement identifier]
  -[SSEnvironmentElement initWithBSXPCCoder:]
  -[SSEnvironmentElement rect]
  -[SSEnvironmentElement elementIdentifier]
  -[SSEnvironmentElement .cxx_destruct]
  -[SSEnvironmentElement setMetadata:]
  -[SSEnvironmentElement bundleIdentifier]
  -[SSEnvironmentElement hasKeyboardFocus]
  -[SSEnvironmentElement copyWithZone:]
  -[SSEnvironmentElement metadata]
  -[SSEnvironmentElement encodeWithBSXPCCoder:]
  -[SSEnvironmentElement setDocument:]
  -[SSEnvironmentElement init]
  -[SSEnvironmentElement deviceMetadata]
  -[SSEnvironmentElement loggableDescription]
  -[SSEnvironmentElement initWithDisplayLayoutElement:]
  -[SSEnvironmentElement localizationMetadata]
  -[SSEnvironmentElement supportsMetadataCapture]
  -[SSEnvironmentElement isAppLauncher]


SSReduceTransparencyFlashView : SSFlashView
  // class methods
  +[SSReduceTransparencyFlashView expectedAnimationDurationForStyle:]

  // instance methods
  -[SSReduceTransparencyFlashView .cxx_destruct]
  -[SSReduceTransparencyFlashView layoutSubviews]
  -[SSReduceTransparencyFlashView initWithFrame:]
  -[SSReduceTransparencyFlashView flashWithCompletion:]


SSMainScreenSnapshotter : SSScreenSnapshotter
  // instance methods
  -[SSMainScreenSnapshotter takeScreenshot]


SSVellumOpacityControl : UIControl
 @property  double value

  // class methods
  +[SSVellumOpacityControl preferredWidth]

  // instance methods
  -[SSVellumOpacityControl .cxx_destruct]
  -[SSVellumOpacityControl tintColorDidChange]
  -[SSVellumOpacityControl layoutSubviews]
  -[SSVellumOpacityControl setValue:]
  -[SSVellumOpacityControl sizeThatFits:]
  -[SSVellumOpacityControl value]
  -[SSVellumOpacityControl intrinsicContentSize]
  -[SSVellumOpacityControl initWithFrame:]
  -[SSVellumOpacityControl addTarget:action:forControlEvents:]
  -[SSVellumOpacityControl _leftImageView]
  -[SSVellumOpacityControl _rightImageView]


SSSnapshotter : NSObject
  // instance methods
  -[SSSnapshotter captureAvailableSnapshotsWithOptionsCollection:]
  -[SSSnapshotter _screensThatAreCaptureable]
  -[SSSnapshotter _captureScreen:withScreenshotOptions:]


_SSScreenCaptureResults : NSObject
 @property  UIImage *image
 @property  NSString *failureReasonIfImageIsNil

  // instance methods
  -[_SSScreenCaptureResults .cxx_destruct]
  -[_SSScreenCaptureResults image]
  -[_SSScreenCaptureResults setImage:]
  -[_SSScreenCaptureResults failureReasonIfImageIsNil]
  -[_SSScreenCaptureResults setFailureReasonIfImageIsNil:]


SSDocumentUpdateAction : BSAction

SSEnvironmentElementDocumentUpdate : NSObject <BSXPCSecureCoding, SSLoggable>
 @property  NSString *environmentElementIdentifier
 @property  SSHarvestedApplicationDocument *document
 @property  BSSettings *bsSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *loggableDescription

  // class methods
  +[SSEnvironmentElementDocumentUpdate supportsBSXPCSecureCoding]

  // instance methods
  -[SSEnvironmentElementDocumentUpdate document]
  -[SSEnvironmentElementDocumentUpdate initWithBSXPCCoder:]
  -[SSEnvironmentElementDocumentUpdate .cxx_destruct]
  -[SSEnvironmentElementDocumentUpdate encodeWithBSXPCCoder:]
  -[SSEnvironmentElementDocumentUpdate setDocument:]
  -[SSEnvironmentElementDocumentUpdate bsSettings]
  -[SSEnvironmentElementDocumentUpdate loggableDescription]
  -[SSEnvironmentElementDocumentUpdate environmentElementIdentifier]
  -[SSEnvironmentElementDocumentUpdate setEnvironmentElementIdentifier:]


SSScreenshotAction : BSAction

SSEnvironmentDescription : NSObject <SSLoggable, BSXPCSecureCoding>
 @property  NSString *identifier
 @property  NSArray *elements
 @property  SSImageSurface *imageSurface
 @property  {CGSize=dd} imagePixelSize
 @property  double imageScale
 @property  {CGSize=dd} imagePointSize
 @property  unsigned long presentationMode
 @property  SSUIServiceOptions *serviceOptions
 @property  NSDate *date
 @property  unsigned long externalFlashLayerRenderID
 @property  unsigned int externalFlashLayerContextID
 @property  NSString *sessionIdentifier
 @property  BSSettings *bsSettings
 @property  SSEnvironmentDescriptionAppleInternalOptions *appleInternalOptions
 @property  NSString *currentApplicationBundleID
 @property  NSString *betaApplicationBundleID
 @property  NSString *betaApplicationName
 @property  BOOL canAutosaveToFiles
 @property  BOOL skipShutterSound
 @property  NSArray *harvestedMetadata
 @property  NSString *loggableDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSEnvironmentDescription supportsSecureCoding]
  +[SSEnvironmentDescription supportsBSXPCSecureCoding]

  // instance methods
  -[SSEnvironmentDescription presentationMode]
  -[SSEnvironmentDescription setSessionIdentifier:]
  -[SSEnvironmentDescription sessionIdentifier]
  -[SSEnvironmentDescription imageScale]
  -[SSEnvironmentDescription setPresentationMode:]
  -[SSEnvironmentDescription identifier]
  -[SSEnvironmentDescription elements]
  -[SSEnvironmentDescription initWithBSXPCCoder:]
  -[SSEnvironmentDescription setDate:]
  -[SSEnvironmentDescription date]
  -[SSEnvironmentDescription .cxx_destruct]
  -[SSEnvironmentDescription setImageScale:]
  -[SSEnvironmentDescription encodeWithBSXPCCoder:]
  -[SSEnvironmentDescription init]
  -[SSEnvironmentDescription bsSettings]
  -[SSEnvironmentDescription serviceOptions]
  -[SSEnvironmentDescription loggableDescription]
  -[SSEnvironmentDescription setExternalFlashLayerRenderID:]
  -[SSEnvironmentDescription setExternalFlashLayerContextID:]
  -[SSEnvironmentDescription externalFlashLayerRenderID]
  -[SSEnvironmentDescription externalFlashLayerContextID]
  -[SSEnvironmentDescription harvestedMetadata]
  -[SSEnvironmentDescription setHarvestedMetadata:]
  -[SSEnvironmentDescription takeElementsFromDisplayLayout:]
  -[SSEnvironmentDescription setDebugElements:]
  -[SSEnvironmentDescription imagePointSize]
  -[SSEnvironmentDescription currentApplicationBundleID]
  -[SSEnvironmentDescription imageSurface]
  -[SSEnvironmentDescription setImageSurface:]
  -[SSEnvironmentDescription imagePixelSize]
  -[SSEnvironmentDescription setImagePixelSize:]
  -[SSEnvironmentDescription setServiceOptions:]
  -[SSEnvironmentDescription appleInternalOptions]
  -[SSEnvironmentDescription setAppleInternalOptions:]
  -[SSEnvironmentDescription betaApplicationBundleID]
  -[SSEnvironmentDescription setBetaApplicationBundleID:]
  -[SSEnvironmentDescription betaApplicationName]
  -[SSEnvironmentDescription setBetaApplicationName:]
  -[SSEnvironmentDescription canAutosaveToFiles]
  -[SSEnvironmentDescription setCanAutosaveToFiles:]
  -[SSEnvironmentDescription skipShutterSound]
  -[SSEnvironmentDescription setSkipShutterSound:]


SSBlurringFlashView : SSFlashView
  // class methods
  +[SSBlurringFlashView expectedAnimationDurationForStyle:]

  // instance methods
  -[SSBlurringFlashView hitTest:withEvent:]
  -[SSBlurringFlashView .cxx_destruct]
  -[SSBlurringFlashView _cornerRadius]
  -[SSBlurringFlashView layoutSubviews]
  -[SSBlurringFlashView _setCornerRadius:]
  -[SSBlurringFlashView initWithFrame:]
  -[SSBlurringFlashView flashWithCompletion:]
  -[SSBlurringFlashView _blurViewRadiusAnimatorCompleted]
  -[SSBlurringFlashView _superColorViewBackgroundColorAnimatorCompleted]
  -[SSBlurringFlashView _runCompletionBlockIfAppropriate]


_SSSFlashSuperColorView : UIView
 @property  unsigned long style

  // instance methods
  -[_SSSFlashSuperColorView _updateBackgroundColor]
  -[_SSSFlashSuperColorView style]
  -[_SSSFlashSuperColorView initWithFrame:]
  -[_SSSFlashSuperColorView setStyle:]
  -[_SSSFlashSuperColorView traitCollectionDidChange:]


SSDittoRemoteConnection : NSObject
  // instance methods
  -[SSDittoRemoteConnection .cxx_destruct]
  -[SSDittoRemoteConnection init]
  -[SSDittoRemoteConnection _sendAction:]
  -[SSDittoRemoteConnection _sendAction:completion:]
  -[SSDittoRemoteConnection preheatDittoProcess]
  -[SSDittoRemoteConnection sendDittoProcessEnvironmentDescription:completion:]
  -[SSDittoRemoteConnection sendDittoProcessImageIdentifierUpdate:]
  -[SSDittoRemoteConnection sendDittoProcessMetadataUpdate:completion:]
  -[SSDittoRemoteConnection sendDittoProcessDocumentUpdate:]
  -[SSDittoRemoteConnection sendDittoProcessPreheatRequestWithPresentationMode:completion:]


SSUIServiceServer : FBSServiceFacility
 @property  <SSUIServiceServerDelegate> *delegate

  // instance methods
  -[SSUIServiceServer setDelegate:]
  -[SSUIServiceServer delegate]
  -[SSUIServiceServer _handleHasAnySSUIServiceEntitlement:]
  -[SSUIServiceServer .cxx_destruct]
  -[SSUIServiceServer noteDidReceiveMessage:withType:fromClient:]
  -[SSUIServiceServer initWithDelegate:]


SSScreenshotsWindowRootViewController : UIViewController
 @property  UIViewController *managedViewController

  // instance methods
  -[SSScreenshotsWindowRootViewController _canShowWhileLocked]
  -[SSScreenshotsWindowRootViewController managedViewController]
  -[SSScreenshotsWindowRootViewController setManagedViewController:]
  -[SSScreenshotsWindowRootViewController initWithNibName:bundle:]
  -[SSScreenshotsWindowRootViewController .cxx_destruct]
  -[SSScreenshotsWindowRootViewController viewDidLoad]
  -[SSScreenshotsWindowRootViewController getRotationContentSettings:forWindow:]
  -[SSScreenshotsWindowRootViewController supportedInterfaceOrientations]


SSScreenshotAssetManager : NSObject
  // class methods
  +[SSScreenshotAssetManager sharedAssetManager]

  // instance methods
  -[SSScreenshotAssetManager .cxx_destruct]
  -[SSScreenshotAssetManager backend]
  -[SSScreenshotAssetManager setBackend:]
  -[SSScreenshotAssetManager resetBackend]
  -[SSScreenshotAssetManager registerImageForPersistable:options:withRegistrationBlock:]
  -[SSScreenshotAssetManager imageWithPreviouslyRegisteredIdentifier:withAccessBlock:]
  -[SSScreenshotAssetManager recordEditsToPersistable:inTransition:withCompletionBlock:]
  -[SSScreenshotAssetManager recordPersistableToTemporaryLocation:withCompletionBlock:]
  -[SSScreenshotAssetManager removePersistable:deleteOptions:withCompletionBlock:]
  -[SSScreenshotAssetManager recordEditsToPersistableForPDF:withCompletionBlock:]


SSMaterial : NSObject
 @property  CAFilter *filter
 @property  UIColor *color
 @property  double colorAlpha

  // class methods
  +[SSMaterial vellumOpacitySliderValueImage]
  +[SSMaterial vellumOpacitySliderTrack]
  +[SSMaterial cropHandle]

  // instance methods
  -[SSMaterial filter]
  -[SSMaterial .cxx_destruct]
  -[SSMaterial color]
  -[SSMaterial _initWithFilterType:color:]
  -[SSMaterial colorAlpha]
  -[SSMaterial applyToView:]


SSScreenCapturer : NSObject <SSUIServiceServerDelegate, SSTestingCoordinatorDelegate, SSScreenshotsWindowDelegate>
 @property  <SSScreenCapturerDelegate> *delegate
 @property  UIWindow *screenshotsWindow

  // class methods
  +[SSScreenCapturer shouldUseScreenCapturerForScreenshots]
  +[SSScreenCapturer playScreenshotSound]
  +[SSScreenCapturer _filesAppExistsOnSystem]

  // instance methods
  -[SSScreenCapturer setDelegate:]
  -[SSScreenCapturer delegate]
  -[SSScreenCapturer dealloc]
  -[SSScreenCapturer .cxx_destruct]
  -[SSScreenCapturer takeScreenshot]
  -[SSScreenCapturer init]
  -[SSScreenCapturer takeScreenshotWithOptionsCollection:presentationOptions:]
  -[SSScreenCapturer preheatWithPresentationOptions:]
  -[SSScreenCapturer screenshotsWindow]
  -[SSScreenCapturer _betaApplicationName]
  -[SSScreenCapturer server:handleRequest:withCompletion:]
  -[SSScreenCapturer testingCoordinator:requestsTakingScreenshotForRunPPTRequest:]
  -[SSScreenCapturer screenshotWindowWasDismissed]
  -[SSScreenCapturer screenshotWindowWillBeDisplayed]
  -[SSScreenCapturer startRecap]
  -[SSScreenCapturer takeScreenshotWithPresentationOptions:]
  -[SSScreenCapturer _environmentDescriptionFromImage:]
  -[SSScreenCapturer _sendEnvironmentDescription:savingImageToPhotos:withCompletion:]
  -[SSScreenCapturer _sendEnvironmentDescription:withCompletion:]
  -[SSScreenCapturer _captureAndSendMetadataForEnvironmentElement:metadataCapture:sendCompletion:]
  -[SSScreenCapturer _captureAndSendDocumentForEnvironmentElement:]
  -[SSScreenCapturer _captureAndSendMetadataAndDocumentForEnvironmentDescription:metadataCaptureCompletion:]
  -[SSScreenCapturer _saveImageToPhotoLibrary:environmentDescription:]
  -[SSScreenCapturer _preheatAndTakeScreenshotIfPossibleWithOptionsCollection:presentationOptions:appleInternalOptions:]
  -[SSScreenCapturer _takeScreenshotWithOptionsCollection:serviceOptions:presentationOptions:appleInternalOptions:]
  -[SSScreenCapturer _screenshotWasTakenOverBetaApp]
  -[SSScreenCapturer _bundleIDForCurrentApplication]
  -[SSScreenCapturer _applicationProxyForCurrentApp]
  -[SSScreenCapturer _betaFeedbackEnabled:]
  -[SSScreenCapturer _currentDisplayLayout]
  -[SSScreenCapturer _testingCoordinator]


SSActiveInterfaceOrientationObserver : NSObject <SBUIActiveOrientationObserver>
 @property  <SSActiveInterfaceOrientationObserverDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSActiveInterfaceOrientationObserver activeInterfaceOrientationDidChangeToOrientation:willAnimateWithDuration:fromOrientation:]
  -[SSActiveInterfaceOrientationObserver stopObserving]
  -[SSActiveInterfaceOrientationObserver setDelegate:]
  -[SSActiveInterfaceOrientationObserver beginObserving]
  -[SSActiveInterfaceOrientationObserver delegate]
  -[SSActiveInterfaceOrientationObserver .cxx_destruct]
  -[SSActiveInterfaceOrientationObserver activeInterfaceOrientationWillChangeToOrientation:]
  -[SSActiveInterfaceOrientationObserver _observeActiveInterfaceOrientationChangeToOrientation:withDuration:]
  -[SSActiveInterfaceOrientationObserver _sbUIUserAgent]
  -[SSActiveInterfaceOrientationObserver _registerForActiveInterfaceOrientationChanges]
  -[SSActiveInterfaceOrientationObserver _unregisterForActiveInterfaceOrientationChanges]


SSHarvestedLocalizationMetadata : NSObject
 @property  NSString *bundleIdentifier
 @property  SSHarvestedApplicationMetadata *applicationMetadata
 @property  SSHarvestedDeviceMetadata *deviceMetadata

  // instance methods
  -[SSHarvestedLocalizationMetadata .cxx_destruct]
  -[SSHarvestedLocalizationMetadata bundleIdentifier]
  -[SSHarvestedLocalizationMetadata deviceMetadata]
  -[SSHarvestedLocalizationMetadata applicationMetadata]
  -[SSHarvestedLocalizationMetadata initFromDeviceMetadata:applicationMetadata:bundleIdentifier:]
  -[SSHarvestedLocalizationMetadata jsonEncodedString]
  -[SSHarvestedLocalizationMetadata embeddedInImageData:]
  -[SSHarvestedLocalizationMetadata propertiesForImageData:]
  -[SSHarvestedLocalizationMetadata jsonEncodedData]
  -[SSHarvestedLocalizationMetadata _runningAppInformation]


SSEnvironmentElementMetadataUpdate : NSObject <BSXPCSecureCoding, SSLoggable>
 @property  NSString *environmentElementIdentifier
 @property  SSHarvestedApplicationMetadata *metadata
 @property  BSSettings *bsSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *loggableDescription

  // class methods
  +[SSEnvironmentElementMetadataUpdate supportsBSXPCSecureCoding]

  // instance methods
  -[SSEnvironmentElementMetadataUpdate initWithBSXPCCoder:]
  -[SSEnvironmentElementMetadataUpdate .cxx_destruct]
  -[SSEnvironmentElementMetadataUpdate setMetadata:]
  -[SSEnvironmentElementMetadataUpdate metadata]
  -[SSEnvironmentElementMetadataUpdate encodeWithBSXPCCoder:]
  -[SSEnvironmentElementMetadataUpdate bsSettings]
  -[SSEnvironmentElementMetadataUpdate loggableDescription]
  -[SSEnvironmentElementMetadataUpdate environmentElementIdentifier]
  -[SSEnvironmentElementMetadataUpdate setEnvironmentElementIdentifier:]


SSOtherScreenSnapshotter : SSScreenSnapshotter
  // instance methods
  -[SSOtherScreenSnapshotter takeScreenshot]


SSPreheatAction : BSAction

SSXPCEncodableRectWrapper : NSObject <BSXPCSecureCoding, NSSecureCoding>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SSXPCEncodableRectWrapper supportsSecureCoding]
  +[SSXPCEncodableRectWrapper supportsBSXPCSecureCoding]
  +[SSXPCEncodableRectWrapper encodedRectsInDictionary:forKey:]
  +[SSXPCEncodableRectWrapper encodeRects:inDictionary:forKey:]

  // instance methods
  -[SSXPCEncodableRectWrapper initWithBSXPCCoder:]
  -[SSXPCEncodableRectWrapper encodeWithCoder:]
  -[SSXPCEncodableRectWrapper rect]
  -[SSXPCEncodableRectWrapper encodeWithBSXPCCoder:]
  -[SSXPCEncodableRectWrapper setRect:]
  -[SSXPCEncodableRectWrapper initWithCoder:]


SSUIShowScreenshotUIWithImageServiceRequest : SSUIServiceRequest
 @property  UIImage *image
 @property  SSUIServiceOptions *options

  // class methods
  +[SSUIShowScreenshotUIWithImageServiceRequest entitlement]
  +[SSUIShowScreenshotUIWithImageServiceRequest supportsBSXPCSecureCoding]

  // instance methods
  -[SSUIShowScreenshotUIWithImageServiceRequest initWithBSXPCCoder:]
  -[SSUIShowScreenshotUIWithImageServiceRequest .cxx_destruct]
  -[SSUIShowScreenshotUIWithImageServiceRequest options]
  -[SSUIShowScreenshotUIWithImageServiceRequest image]
  -[SSUIShowScreenshotUIWithImageServiceRequest setOptions:]
  -[SSUIShowScreenshotUIWithImageServiceRequest encodeWithBSXPCCoder:]
  -[SSUIShowScreenshotUIWithImageServiceRequest setImage:]


SSRemoteAlertHandleProvider : NSObject <SBSRemoteAlertHandleObserver>
 @property  BOOL isActive
 @property  <SSRemoteAlertHandleProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SSRemoteAlertHandleProvider preheat]
  -[SSRemoteAlertHandleProvider activate]
  -[SSRemoteAlertHandleProvider setDelegate:]
  -[SSRemoteAlertHandleProvider delegate]
  -[SSRemoteAlertHandleProvider isActive]
  -[SSRemoteAlertHandleProvider .cxx_destruct]
  -[SSRemoteAlertHandleProvider remoteAlertHandleDidDeactivate:]
  -[SSRemoteAlertHandleProvider prepare]
  -[SSRemoteAlertHandleProvider remoteAlertHandle:didInvalidateWithError:]
  -[SSRemoteAlertHandleProvider remoteAlertHandleDidActivate:]
  -[SSRemoteAlertHandleProvider invalidate]
  -[SSRemoteAlertHandleProvider init]
  -[SSRemoteAlertHandleProvider _callDelegate:]
  -[SSRemoteAlertHandleProvider _screenshotServicesServiceAlertDefinition]
  -[SSRemoteAlertHandleProvider screenshotServicesAlertHandle]


SSEnvironmentElementMetadata : NSObject <BSXPCSecureCoding, SSLoggable>
 @property  NSString *userActivityTitle
 @property  NSArray *rectsInElement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *loggableDescription

  // class methods
  +[SSEnvironmentElementMetadata supportsBSXPCSecureCoding]

  // instance methods
  -[SSEnvironmentElementMetadata initWithBSXPCCoder:]
  -[SSEnvironmentElementMetadata .cxx_destruct]
  -[SSEnvironmentElementMetadata encodeWithBSXPCCoder:]
  -[SSEnvironmentElementMetadata loggableDescription]
  -[SSEnvironmentElementMetadata userActivityTitle]
  -[SSEnvironmentElementMetadata setUserActivityTitle:]
  -[SSEnvironmentElementMetadata _encodableRects]
  -[SSEnvironmentElementMetadata _decodedRectsForEncodedRects:]
  -[SSEnvironmentElementMetadata rectsInElement]
  -[SSEnvironmentElementMetadata setRectsInElement:]


UIBarButtonItem(SSSAdditions)
	// class methods
	+[UIBarButtonItem(SSSAdditions) _sss_undoItemWithTarget:action:]
	+[UIBarButtonItem(SSSAdditions) _sss_redoItemWithTarget:action:]
	+[UIBarButtonItem(SSSAdditions) _sss_shareItemWithTarget:action:]
	+[UIBarButtonItem(SSSAdditions) _sss_trashItemWithTarget:action:]
	+[UIBarButtonItem(SSSAdditions) _sss_cropItemWithTarget:action:]

(SSLoggable)
	// instance methods
	-[(SSLoggable) shorterLoggableString]

UIImage(SSImageSurface)
	// class methods
	+[UIImage(SSImageSurface) ss_imageFromImageSurface:]
	+[UIImage(SSImageSurface) ss_cgImageBackedImageFromImageSurface:]

	// instance methods
	-[UIImage(SSImageSurface) ss_imageSurfaceFromImage]

NSBundle(SSSAdditions)
	// class methods
	+[NSBundle(SSSAdditions) _screenshotServicesServiceBundle]

01 00 0a00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSAction 
01 00 0a00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSActionResponse 
01 00 0a00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSMutableSettings 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSServiceQuality 
01 00 0a00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSXPCCoder 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABackdropLayer 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 0240 /System/Library/PrivateFrameworks/Settings/DisplayAndBrightnessSettings.framework/DisplayAndBrightnessSettings: DBSDisplayZoomConfigurationController 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSDisplayLayoutMonitor 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSDisplayLayoutMonitorConfiguration 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSSerialQueue 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSServiceFacility 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSServiceFacilityClient 
01 00 0c00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSXPCMessage 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1100 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: NSUserActivity 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0900 /System/Library/Frameworks/Photos.framework/Photos: PHAdjustmentData 
01 00 0900 /System/Library/Frameworks/Photos.framework/Photos: PHAsset 
01 00 0900 /System/Library/Frameworks/Photos.framework/Photos: PHAssetChangeRequest 
01 00 0900 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCreationOptions 
01 00 0900 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCreationRequest 
01 00 0900 /System/Library/Frameworks/Photos.framework/Photos: PHContentEditingOutput 
01 00 0900 /System/Library/Frameworks/Photos.framework/Photos: PHImageManager 
01 00 0900 /System/Library/Frameworks/Photos.framework/Photos: PHImageRequestOptions 
01 00 0900 /System/Library/Frameworks/Photos.framework/Photos: PHPhotoLibrary 
01 00 0d00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertDefinition 
01 00 0d00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertHandle 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICubicTimingParameters 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationItem 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPeripheralHost 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreenshotMetadataRequestAction 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISlider 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowScene 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: _NSAttributedStringGrammarInflection 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
