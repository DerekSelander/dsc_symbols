|| __DATA.__objc_data _OBJC_CLASS_$_NUAVPlayerController
|| __DATA.__objc_data _OBJC_CLASS_$_NUAVPlayerView
|| __DATA.__objc_data _OBJC_CLASS_$_NUDebugRenderView
|| __DATA.__objc_data _OBJC_CLASS_$_NUViewGeometry
|| __DATA.__objc_data _OBJC_CLASS_$_NUViewport
|| __DATA.__objc_data _OBJC_CLASS_$_NUViewportRegionPolicy
|| __DATA.__objc_data _OBJC_CLASS_$__NUAVPlayerItemObservation
|| __DATA.__objc_data _OBJC_METACLASS_$_NUAVPlayerController
|| __DATA.__objc_data _OBJC_METACLASS_$_NUAVPlayerView
|| __DATA.__objc_data _OBJC_METACLASS_$_NUDebugRenderView
|| __DATA.__objc_data _OBJC_METACLASS_$_NUViewGeometry
|| __DATA.__objc_data _OBJC_METACLASS_$_NUViewport
|| __DATA.__objc_data _OBJC_METACLASS_$_NUViewportRegionPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$__NUAVPlayerItemObservation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NUMediaView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NUMediaViewRenderer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NURenderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NUScrollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NUTileLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NUTiledImageLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__NUContainerLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__NUTiledBackfillLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__NUTiledROILayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NUMediaView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NUMediaViewRenderer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NURenderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NUScrollView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NUTileLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NUTiledImageLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__NUContainerLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__NUTiledBackfillLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__NUTiledROILayer
|| __TEXT.__const _NeutrinoKitVersionNumber
|| __TEXT.__const _NeutrinoKitVersionString
|| __TEXT.__text _NSStringFromCATransform3D
|| __TEXT.__text _NUBoundingRectForRotatedRect
|| __TEXT.__text _NUEdgeInsetsInsetRect
|| __TEXT.__text _NUFitScaleForImageRectInRect
|| __TEXT.__text _NUMaxRectInRotatedRect
|| __TEXT.__text _NUMediaTimingFunctionForUIAnimationCurve
|| __TEXT.__text _NURectCenterRectInRect
|| __TEXT.__text _NURectGetMidpoint
|| __TEXT.__text __NUViewCommonInit
|| __TEXT.__text __commonInit
|| __TEXT.__text _stringFromTransform
__ AVFAudio: _AVAudioSessionCategoryAmbient
__ AVFAudio: _AVAudioSessionCategoryPlayback
__ AVFAudio: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeErrorKey
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeNotification
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLayer
__ AVFoundation: _OBJC_CLASS_$_AVQueuePlayer
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreImage: _OBJC_CLASS_$_CIColor
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreMedia: _CMTimeAdd
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeConvertScale
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimeZero
__ CoreMotion: _OBJC_CLASS_$_CMMotionManager
__ Foundation: _NSClassFromString
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromPoint
__ Foundation: _NSStringFromRect
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSValue
__ NeutrinoCore: _NSStringFromNUPixelSize
__ NeutrinoCore: _NUAbsolutePointInRect
__ NeutrinoCore: _NUAbsoluteTime
__ NeutrinoCore: _NUAlignRectToPixelGrid
__ NeutrinoCore: _NUCGRectConvertFromRectToRect
__ NeutrinoCore: _NUCurrentlyExecutingJobNameKey
__ NeutrinoCore: _NUPixelPointToCGPoint
__ NeutrinoCore: _NUPixelPointZero
__ NeutrinoCore: _NUPixelRectFlipYOrigin
__ NeutrinoCore: _NUPixelRectFromCGRect
__ NeutrinoCore: _NUPixelRectIntersection
__ NeutrinoCore: _NUPixelRectOffset
__ NeutrinoCore: _NUPixelRectToCGRect
__ NeutrinoCore: _NUPixelSizeEqualToSize
__ NeutrinoCore: _NUPixelSizeFromCGSize
__ NeutrinoCore: _NUPixelSizeIsEmpty
__ NeutrinoCore: _NUPixelSizeToCGRect
__ NeutrinoCore: _NUPixelSizeToCGSize
__ NeutrinoCore: _NURectDenormalize
__ NeutrinoCore: _NURectFlipYOrigin
__ NeutrinoCore: _NURectNormalize
__ NeutrinoCore: _NUScaleCompare
__ NeutrinoCore: _NUScaleEqual
__ NeutrinoCore: _NUScaleInvert
__ NeutrinoCore: _NUScaleOne
__ NeutrinoCore: _NUScaleToDouble
__ NeutrinoCore: _NUScaleToFitSizeInSize
__ NeutrinoCore: _OBJC_CLASS_$_NUCoalescer
__ NeutrinoCore: _OBJC_CLASS_$_NUFitScalePolicy
__ NeutrinoCore: _OBJC_CLASS_$_NUFullExtentRegionPolicy
__ NeutrinoCore: _OBJC_CLASS_$_NUGlobalSettings
__ NeutrinoCore: _OBJC_CLASS_$_NUImagePropertiesRequest
__ NeutrinoCore: _OBJC_CLASS_$_NULivePhotoRenderClient
__ NeutrinoCore: _OBJC_CLASS_$_NULivePhotoRenderRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUObservatory
__ NeutrinoCore: _OBJC_CLASS_$_NUPlatform
__ NeutrinoCore: _OBJC_CLASS_$_NUPriority
__ NeutrinoCore: _OBJC_CLASS_$_NURegion
__ NeutrinoCore: _OBJC_CLASS_$_NURenderPipelineFilter
__ NeutrinoCore: _OBJC_CLASS_$_NURenderTransaction
__ NeutrinoCore: _OBJC_CLASS_$_NUScript
__ NeutrinoCore: _OBJC_CLASS_$_NUSurfaceRenderClient
__ NeutrinoCore: _OBJC_CLASS_$_NUSurfaceRenderRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoCompositionInstruction
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoRenderClient
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoUtilities
__ NeutrinoCore: _OBJC_CLASS_$_NUZoomFactorScalePolicy
__ NeutrinoCore: __NUAssertContinueHandler
__ NeutrinoCore: __NUAssertFailHandler
__ NeutrinoCore: __NUAssertLogger
__ NeutrinoCore: __NULogInit
__ NeutrinoCore: __NULogOnceToken
__ NeutrinoCore: __NUUILogger
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DIsIdentity
__ QuartzCore: _CATransform3DMakeRotation
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DMakeTranslation
__ QuartzCore: _CATransform3DRotate
__ QuartzCore: _CATransform3DScale
__ QuartzCore: _CATransform3DTranslate
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAScrollLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _OBJC_METACLASS_$_CAScrollLayer
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIAnimationDragCoefficient
__ UIKit: _UIEdgeInsetsZero
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _os_activity_apply
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
NUScrollView : UIScrollView
  // instance methods
  -[NUScrollView visibleRect]


_NUAVPlayerItemObservation : NSObject
 @property  AVPlayerItem *playerItem
 @property  BOOL registeredKVO

  // instance methods
  -[_NUAVPlayerItemObservation .cxx_destruct]
  -[_NUAVPlayerItemObservation playerItem]
  -[_NUAVPlayerItemObservation setPlayerItem:]
  -[_NUAVPlayerItemObservation registeredKVO]
  -[_NUAVPlayerItemObservation setRegisteredKVO:]


NUAVPlayerController : NSObject
 @property  AVPlayer *player
 @property  double updateInterval
 @property  AVAsset *videoAsset
 @property  AVVideoComposition *videoComposition
 @property  AVAudioMix *audioMix
 @property  <NUAVPlayerControllerDelegate> *delegate
 @property  BOOL loopsVideo
 @property  {?=qiIq} currentSeekTime
 @property  BOOL currentlySeeking
 @property  BOOL muted
 @property  {?=qiIq} currentTime

  // instance methods
  -[NUAVPlayerController setMuted:]
  -[NUAVPlayerController isMuted]
  -[NUAVPlayerController play]
  -[NUAVPlayerController .cxx_destruct]
  -[NUAVPlayerController setDelegate:]
  -[NUAVPlayerController setPlayer:]
  -[NUAVPlayerController init]
  -[NUAVPlayerController player]
  -[NUAVPlayerController pause]
  -[NUAVPlayerController videoAsset]
  -[NUAVPlayerController currentTime]
  -[NUAVPlayerController step:]
  -[NUAVPlayerController delegate]
  -[NUAVPlayerController setUpdateInterval:]
  -[NUAVPlayerController audioMix]
  -[NUAVPlayerController dealloc]
  -[NUAVPlayerController updateInterval]
  -[NUAVPlayerController videoComposition]
  -[NUAVPlayerController removeObserver:]
  -[NUAVPlayerController observeValueForKeyPath:ofObject:change:context:]
  -[NUAVPlayerController currentSeekTime]
  -[NUAVPlayerController _removeTimeObserver]
  -[NUAVPlayerController playerItemDidReachEnd:]
  -[NUAVPlayerController seekForward]
  -[NUAVPlayerController _setRate:]
  -[NUAVPlayerController _removePlayerItemKVO:removeFromArray:]
  -[NUAVPlayerController _removePlayerKVO]
  -[NUAVPlayerController _playerItemsWithVideoAsset:videoComposition:audioMix:loopsVideo:]
  -[NUAVPlayerController _addPlayerKVO]
  -[NUAVPlayerController _addTimeObserver]
  -[NUAVPlayerController seek:toleranceBefore:toleranceAfter:forceSeek:completionHandler:]
  -[NUAVPlayerController _loopingPlayerItemWithVideoAsset:videoComposition:audioMix:]
  -[NUAVPlayerController _playerItemWithVideoAsset:videoComposition:audioMix:]
  -[NUAVPlayerController _addPlayerItemKVO:]
  -[NUAVPlayerController loopsVideo]
  -[NUAVPlayerController _notifyPlaybackRateChange:]
  -[NUAVPlayerController _notifyPlayerStatusChange:]
  -[NUAVPlayerController _notifyExternalPlaybackChange:]
  -[NUAVPlayerController _removePlayerItemKVO:]
  -[NUAVPlayerController seek:toleranceBefore:toleranceAfter:forceSeek:]
  -[NUAVPlayerController currentlySeeking]
  -[NUAVPlayerController _effectiveTimeForTime:]
  -[NUAVPlayerController _notifyPlaybackTimeChange:]
  -[NUAVPlayerController playerItemFailedToPlayToEnd:]
  -[NUAVPlayerController prepareWithAVAsset:videoComposition:audioMix:loopsVideo:seekToTime:]
  -[NUAVPlayerController updateVideoComposition:]
  -[NUAVPlayerController updateWithVideoPrepareNodeFromVideoComposition:]
  -[NUAVPlayerController updateAudioMix:]
  -[NUAVPlayerController updateAppliesPerFrameHDRDisplayMetadata:]
  -[NUAVPlayerController setLoopsVideo:]
  -[NUAVPlayerController seekBack]
  -[NUAVPlayerController seek:toleranceBefore:toleranceAfter:]
  -[NUAVPlayerController addPlaybackRateObserver:block:]
  -[NUAVPlayerController addPlaybackTimeObserver:block:]
  -[NUAVPlayerController addPlayerStatusObserver:block:]
  -[NUAVPlayerController addExternalPlaybackObserver:block:]


NUAVPlayerView : UIView
 @property  BOOL readyForDisplay
 @property  AVPlayer *player
 @property  <NUAVPlayerViewDelegate> *delegate

  // class methods
  +[NUAVPlayerView layerClass]

  // instance methods
  -[NUAVPlayerView isReadyForDisplay]
  -[NUAVPlayerView initWithCoder:]
  -[NUAVPlayerView .cxx_destruct]
  -[NUAVPlayerView setDelegate:]
  -[NUAVPlayerView setPlayer:]
  -[NUAVPlayerView player]
  -[NUAVPlayerView initWithFrame:]
  -[NUAVPlayerView delegate]
  -[NUAVPlayerView dealloc]
  -[NUAVPlayerView dispose]
  -[NUAVPlayerView observeValueForKeyPath:ofObject:change:context:]
  -[NUAVPlayerView _setReadyForDisplay:]
  -[NUAVPlayerView _updateReadyForDisplayWithID:]


NUMediaView : UIView <NUAVPlayerControllerDelegate, NUAVPlayerViewDelegate>
 @property  {CGSize=dd} _masterSizeWithoutGeometry
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  double angle
 @property  NSArray *pipelineFilters
 @property  BOOL centerContent
 @property  BOOL loopsVideoPlayback
 @property  BOOL muted
 @property  BOOL debugEnabled
 @property  BOOL scrollUpdatesSuppressed
 @property  BOOL videoEnabled
 @property  BOOL videoPlayerVisible
 @property  <NUMediaViewDelegate> *delegate
 @property  <NUMediaPlayer> *player
 @property  NUComposition *composition
 @property  {UIEdgeInsets=dddd} edgeInsets
 @property  double zoomScale
 @property  double minimumZoomScale
 @property  double maximumZoomScale
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} imageFrame
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NUMediaView _proposedInsetsForInsets:contentSize:inFrame:centerContent:]

  // instance methods
  -[NUMediaView angle]
  -[NUMediaView scrollViewWillBeginZooming:withView:]
  -[NUMediaView setMuted:]
  -[NUMediaView _imageSize]
  -[NUMediaView isMuted]
  -[NUMediaView cropRect]
  -[NUMediaView setZoomScale:]
  -[NUMediaView setDebugEnabled:]
  -[NUMediaView initWithCoder:]
  -[NUMediaView viewForZoomingInScrollView:]
  -[NUMediaView composition]
  -[NUMediaView zoomScale]
  -[NUMediaView zoomToRect:animated:]
  -[NUMediaView .cxx_destruct]
  -[NUMediaView _updateContentInsets]
  -[NUMediaView _endTransition]
  -[NUMediaView layoutSubviews]
  -[NUMediaView isReady]
  -[NUMediaView setMaximumZoomScale:]
  -[NUMediaView setEdgeInsets:]
  -[NUMediaView setAngle:]
  -[NUMediaView setDelegate:]
  -[NUMediaView scrollViewDidZoom:]
  -[NUMediaView _setupViews]
  -[NUMediaView _renderer]
  -[NUMediaView _beginTransition]
  -[NUMediaView _scrollView]
  -[NUMediaView scrollViewDidEndZooming:withView:atScale:]
  -[NUMediaView _geometry]
  -[NUMediaView snapshotImage]
  -[NUMediaView scrollViewDidEndDragging:willDecelerate:]
  -[NUMediaView player]
  -[NUMediaView scrollViewDidScroll:]
  -[NUMediaView edgeInsets]
  -[NUMediaView minimumZoomScale]
  -[NUMediaView _imageLayer]
  -[NUMediaView imageFrame]
  -[NUMediaView scrollViewWillBeginDragging:]
  -[NUMediaView initWithFrame:]
  -[NUMediaView setMinimumZoomScale:]
  -[NUMediaView setCropRect:]
  -[NUMediaView _livePhotoView]
  -[NUMediaView delegate]
  -[NUMediaView didMoveToWindow]
  -[NUMediaView setPipelineFilters:]
  -[NUMediaView isDebugEnabled]
  -[NUMediaView setComposition:]
  -[NUMediaView maximumZoomScale]
  -[NUMediaView setZoomScale:animated:]
  -[NUMediaView scrollViewDidEndDecelerating:]
  -[NUMediaView setLoopsVideoPlayback:]
  -[NUMediaView _videoPlayerView]
  -[NUMediaView setVideoEnabled:animated:]
  -[NUMediaView loopsVideoPlayback]
  -[NUMediaView _startVideoPlayback]
  -[NUMediaView _releaseAVObjects]
  -[NUMediaView isVideoEnabled]
  -[NUMediaView _stopVideoPlayback]
  -[NUMediaView _transitionToInsets:]
  -[NUMediaView _updateRenderContent]
  -[NUMediaView _edgeInsetsForContentSize:inFrame:alwaysCenterContent:]
  -[NUMediaView waitForRender]
  -[NUMediaView _renderView]
  -[NUMediaView _didReleaseAVObjects]
  -[NUMediaView _setPipelineFilters:shouldUpdateContent:]
  -[NUMediaView setZoomScaleToFit]
  -[NUMediaView setCenterContent:]
  -[NUMediaView convertPoint:fromView:toSpace:]
  -[NUMediaView convertPoint:fromSpace:toView:]
  -[NUMediaView convertNormalizedViewRect:fromSpace:]
  -[NUMediaView convertRectFromImage:]
  -[NUMediaView convertPoint:toNormalizedYDownSourceSpaceFromView:]
  -[NUMediaView _videoPlayerController]
  -[NUMediaView installRenderingCompletionBlock:]
  -[NUMediaView pipelineFilters]
  -[NUMediaView centerContent]
  -[NUMediaView playerControllerIsReadyForPlayback:]
  -[NUMediaView playerController:didUpdateElapsedTime:duration:]
  -[NUMediaView playerControllerDidFinishPlaying:duration:]
  -[NUMediaView playerControllerFailedToPlayToEnd:error:]
  -[NUMediaView playerViewReadyForDisplayDidChange:]
  -[NUMediaView _updateRenderContentCoalesced:]
  -[NUMediaView convertPointToImage:]
  -[NUMediaView convertPointFromImage:]
  -[NUMediaView _masterSizeWithoutGeometry]
  -[NUMediaView convertViewRect:fromSpace:]
  -[NUMediaView _edgeInsetsForContentSize:inFrame:]
  -[NUMediaView isVideoPlayerVisible]
  -[NUMediaView _updateVideoPlayerAlpha:]
  -[NUMediaView _withComposition:visitRenderClient:]
  -[NUMediaView _layerRecursiveDescription]
  -[NUMediaView convertRectToImage:]
  -[NUMediaView _videoPlayerViewWithoutControls]
  -[NUMediaView _rendererDidCreateAVPlayerController:]
  -[NUMediaView _rendererDidFinishWithStatistics:]
  -[NUMediaView _rendererDidUpdateLivePhoto]
  -[NUMediaView _rendererDidStartPreparingVideo]
  -[NUMediaView _rendererDidFinishPreparingVideo]
  -[NUMediaView _livephotoPlaybackWillBegin]
  -[NUMediaView _livephotoPlaybackDidEnd]
  -[NUMediaView setVideoPlayerVisible:animated:]
  -[NUMediaView _setLayerFilters:]
  -[NUMediaView _viewRecursiveDescription]
  -[NUMediaView set_masterSizeWithoutGeometry:]
  -[NUMediaView scrollUpdatesSuppressed]
  -[NUMediaView setScrollUpdatesSuppressed:]


NUTiledImageLayer : CALayer <CALayerDelegate>
 @property  <NUPurgeableTextureImage> *_image
 @property  NUImageGeometry *_geometry
 @property  NSMutableArray *_tileLayers
 @property  <NUTextureImage> *image
 @property  NUImageGeometry *geometry
 @property  BOOL nu_contentsAreFlipped
 @property  ^{CGColor=} debugColor
 @property  {?=qq} validRegionInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NUTiledImageLayer defaultActionForKey:]

  // instance methods
  -[NUTiledImageLayer setGeometry:]
  -[NUTiledImageLayer layoutSublayers]
  -[NUTiledImageLayer _image]
  -[NUTiledImageLayer actionForLayer:forKey:]
  -[NUTiledImageLayer geometry]
  -[NUTiledImageLayer image]
  -[NUTiledImageLayer .cxx_destruct]
  -[NUTiledImageLayer _geometry]
  -[NUTiledImageLayer init]
  -[NUTiledImageLayer snapshotImage]
  -[NUTiledImageLayer setImage:]
  -[NUTiledImageLayer dealloc]
  -[NUTiledImageLayer debugColor]
  -[NUTiledImageLayer nu_contentsAreFlipped]
  -[NUTiledImageLayer set_tileLayers:]
  -[NUTiledImageLayer set_image:]
  -[NUTiledImageLayer _tileLayers]
  -[NUTiledImageLayer _updateSublayers]
  -[NUTiledImageLayer set_geometry:]
  -[NUTiledImageLayer validRegionInsets]
  -[NUTiledImageLayer setDebugColor:]
  -[NUTiledImageLayer setValidRegionInsets:]


NUTileLayer : CALayer
 @property  {?={?=qq}{?=qq}} imageRect
 @property  <NUPurgeableSurfaceImage> *image

  // instance methods
  -[NUTileLayer image]
  -[NUTileLayer .cxx_destruct]
  -[NUTileLayer imageRect]
  -[NUTileLayer dealloc]
  -[NUTileLayer initWithImage:tile:]


NUMediaViewRenderer : NSObject <NUMediaPlayer>
 @property  BOOL _videoEnabled
 @property  NSArray *previousPipelineFilters
 @property  NUComposition *composition
 @property  NUColorSpace *colorSpace
 @property  NUPixelFormat *pixelFormat
 @property  NUMediaView *mediaView
 @property  double backingScale
 @property  NSArray *pipelineFilters
 @property  BOOL zoomedToFit
 @property  double maximumZoomScale
 @property  BOOL isReady
 @property  NUAVPlayerController *nuAVPlayerController
 @property  unsigned long displayType
 @property  unsigned long computedDisplayType
 @property  {CGSize=dd} overrideZoomToFitSize
 @property  double overrideZoomScale
 @property  BOOL videoEnabled
 @property  long long playbackState
 @property  {?=qiIq} mediaDuration
 @property  {?=qiIq} currentTime
 @property  NSArray *loadedTimeRanges
 @property  double playbackRate
 @property  long long playbackMode
 @property  {?=qiIq} currentSeekTime
 @property  BOOL muted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NUMediaViewRenderer _forceUpdateForNewVideoComposition:previousComposition:newAsset:previousAsset:isPlaying:]

  // instance methods
  -[NUMediaViewRenderer setColorSpace:]
  -[NUMediaViewRenderer colorSpace]
  -[NUMediaViewRenderer setPlaybackRate:]
  -[NUMediaViewRenderer livePhotoView:didEndPlaybackWithStyle:]
  -[NUMediaViewRenderer setDisplayType:]
  -[NUMediaViewRenderer displayType]
  -[NUMediaViewRenderer playbackRate]
  -[NUMediaViewRenderer playbackState]
  -[NUMediaViewRenderer setMuted:]
  -[NUMediaViewRenderer isMuted]
  -[NUMediaViewRenderer wait]
  -[NUMediaViewRenderer play]
  -[NUMediaViewRenderer stepByCount:]
  -[NUMediaViewRenderer composition]
  -[NUMediaViewRenderer targetSize]
  -[NUMediaViewRenderer livePhotoViewDidBeginScrubbing:]
  -[NUMediaViewRenderer livePhotoViewDidEndScrubbing:]
  -[NUMediaViewRenderer .cxx_destruct]
  -[NUMediaViewRenderer pixelFormat]
  -[NUMediaViewRenderer isReady]
  -[NUMediaViewRenderer setMaximumZoomScale:]
  -[NUMediaViewRenderer mediaView]
  -[NUMediaViewRenderer setPixelFormat:]
  -[NUMediaViewRenderer loadedTimeRanges]
  -[NUMediaViewRenderer seekToTime:]
  -[NUMediaViewRenderer init]
  -[NUMediaViewRenderer playbackMode]
  -[NUMediaViewRenderer pause]
  -[NUMediaViewRenderer currentTime]
  -[NUMediaViewRenderer seekToTime:toleranceBefore:toleranceAfter:]
  -[NUMediaViewRenderer setPlaybackMode:]
  -[NUMediaViewRenderer livePhotoView:willBeginPlaybackWithStyle:]
  -[NUMediaViewRenderer setPipelineFilters:]
  -[NUMediaViewRenderer removeObserver:]
  -[NUMediaViewRenderer setComposition:]
  -[NUMediaViewRenderer maximumZoomScale]
  -[NUMediaViewRenderer endPanning]
  -[NUMediaViewRenderer mediaDuration]
  -[NUMediaViewRenderer seekToTime:exact:]
  -[NUMediaViewRenderer setVideoEnabled:animated:]
  -[NUMediaViewRenderer _releaseAVObjects]
  -[NUMediaViewRenderer isVideoEnabled]
  -[NUMediaViewRenderer _didReleaseAVObjects]
  -[NUMediaViewRenderer addPlaybackTimeObserver:]
  -[NUMediaViewRenderer currentSeekTime]
  -[NUMediaViewRenderer addPlaybackStateObserver:]
  -[NUMediaViewRenderer seekToTime:exact:forceSeek:]
  -[NUMediaViewRenderer pipelineFilters]
  -[NUMediaViewRenderer backingScale]
  -[NUMediaViewRenderer _isVideoEnabled]
  -[NUMediaViewRenderer updateComposition:]
  -[NUMediaViewRenderer setBackingScale:]
  -[NUMediaViewRenderer _notifyExternalPlaybackChange:]
  -[NUMediaViewRenderer _notifyPlaybackTimeChange:]
  -[NUMediaViewRenderer isZoomedToFit]
  -[NUMediaViewRenderer convertPoint:toImageFromView:]
  -[NUMediaViewRenderer convertPoint:fromImageToView:]
  -[NUMediaViewRenderer convertRect:toImageFromView:]
  -[NUMediaViewRenderer convertRect:fromImageToView:]
  -[NUMediaViewRenderer initWithMediaView:]
  -[NUMediaViewRenderer beginZooming]
  -[NUMediaViewRenderer endZooming]
  -[NUMediaViewRenderer beginPanning]
  -[NUMediaViewRenderer nuAVPlayerController]
  -[NUMediaViewRenderer _withComposition:visitRenderClient:]
  -[NUMediaViewRenderer _updateDisplayForMediaType:]
  -[NUMediaViewRenderer _updateImageRenderForComposition:]
  -[NUMediaViewRenderer canRenderVideoLive]
  -[NUMediaViewRenderer _updateVideoComposition:]
  -[NUMediaViewRenderer _coalesceUpdateVideoComposition:]
  -[NUMediaViewRenderer _coalesceUpdateLivePhotoComposition:]
  -[NUMediaViewRenderer _beginAnimating]
  -[NUMediaViewRenderer _endAnimating]
  -[NUMediaViewRenderer _updateBackfillLayerWithLatestRenderResponse]
  -[NUMediaViewRenderer _updateROILayerWithLatestRenderResponse]
  -[NUMediaViewRenderer _scrollBounds]
  -[NUMediaViewRenderer _backfillRenderRequestForComposition:]
  -[NUMediaViewRenderer _videoFrameImageRenderResponseHandler]
  -[NUMediaViewRenderer _zoomRenderRequestForComposition:]
  -[NUMediaViewRenderer _zoomRenderResponseHandler]
  -[NUMediaViewRenderer _backfillRenderResponseHandler]
  -[NUMediaViewRenderer _updateROILayerWithRenderResponse:]
  -[NUMediaViewRenderer _updateBackfillLayerWithRenderResponse:]
  -[NUMediaViewRenderer _updateImageLayer:withRenderResponse:]
  -[NUMediaViewRenderer _renderFinishedWithGeometry:layer:]
  -[NUMediaViewRenderer _setDisplayType:]
  -[NUMediaViewRenderer _tearDownAVPlayerController]
  -[NUMediaViewRenderer _addFullExtentConstraintsForView:]
  -[NUMediaViewRenderer _setupAVPlayerController]
  -[NUMediaViewRenderer _updateLivePhotoWithResponse:]
  -[NUMediaViewRenderer _playerStatusDidChange:]
  -[NUMediaViewRenderer _notifyPlaybackStateChange:]
  -[NUMediaViewRenderer _playbackStateFromPlayerStatus:rate:]
  -[NUMediaViewRenderer computedDisplayType]
  -[NUMediaViewRenderer pipelineFilersHaveChanged]
  -[NUMediaViewRenderer _updateVideoViewLayoutWithGeometry:]
  -[NUMediaViewRenderer overrideZoomToFitSize]
  -[NUMediaViewRenderer overrideZoomScale]
  -[NUMediaViewRenderer _targetZoomScale]
  -[NUMediaViewRenderer cacheVideoRenderFilter]
  -[NUMediaViewRenderer _scalePolicyForVideoCompositionRender]
  -[NUMediaViewRenderer _updateVideoWithResult:sourceChanged:]
  -[NUMediaViewRenderer _updateLivePhotoComposition:]
  -[NUMediaViewRenderer _livePhotoFromResponse:]
  -[NUMediaViewRenderer _zoomTargetRect]
  -[NUMediaViewRenderer _regionPolicyForZoomTargetRect:]
  -[NUMediaViewRenderer newRenderRequestForComposition:scalePolicy:regionPolicy:]
  -[NUMediaViewRenderer _lastRenderDuration]
  -[NUMediaViewRenderer _setVideoEnabled:]
  -[NUMediaViewRenderer seekToTime:toleranceBefore:toleranceAfter:forceSeek:]
  -[NUMediaViewRenderer addExternalPlaybackObserver:]
  -[NUMediaViewRenderer renderClient]
  -[NUMediaViewRenderer setOverrideZoomToFitSize:]
  -[NUMediaViewRenderer setOverrideZoomScale:]
  -[NUMediaViewRenderer previousPipelineFilters]


_NUTiledROILayer : NUTiledImageLayer

_NUTiledBackfillLayer : NUTiledImageLayer

_NUContainerLayer : CAScrollLayer

NURenderView : UIView <CAAnimationDelegate>
 @property  BOOL debugMode
 @property  NUImageGeometry *geometry
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NURenderView setGeometry:]
  -[NURenderView geometry]
  -[NURenderView initWithCoder:]
  -[NURenderView willMoveToWindow:]
  -[NURenderView .cxx_destruct]
  -[NURenderView inLiveResize]
  -[NURenderView layoutSubviews]
  -[NURenderView debugMode]
  -[NURenderView animationDidStop:finished:]
  -[NURenderView animationDidStart:]
  -[NURenderView initWithFrame:]
  -[NURenderView setDebugMode:]
  -[NURenderView _containerLayer]
  -[NURenderView _backfillLayer]
  -[NURenderView transitionToSize:offset:duration:animationCurve:completion:]
  -[NURenderView renderFrameReachedTargetSize]
  -[NURenderView _roiLayer]
  -[NURenderView convertRectToImage:]
  -[NURenderView transitionToSize:duration:animationCurve:completion:]


NUDebugRenderView : NURenderView
  // instance methods
  -[NUDebugRenderView .cxx_destruct]
  -[NUDebugRenderView setFrame:]
  -[NUDebugRenderView debugMode]
  -[NUDebugRenderView initWithFrame:]
  -[NUDebugRenderView dealloc]
  -[NUDebugRenderView setBounds:]
  -[NUDebugRenderView setDebugMode:]
  -[NUDebugRenderView _debugToggle:]
  -[NUDebugRenderView _stopDeviceMotion]
  -[NUDebugRenderView _startDeviceMotion]
  -[NUDebugRenderView _setupDeviceMotion]
  -[NUDebugRenderView _resetOrientation:]
  -[NUDebugRenderView _orientWithX:andY:]


NUViewGeometry : NSObject
 @property  double backingScale
 @property  {CGSize=dd} imageSize
 @property  {CGSize=dd} viewImageSize
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  BOOL flipped
 @property  double angle
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  {CGPoint=dd} origin
 @property  double maximumScale
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} imageBounds
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingCropRect

  // instance methods
  -[NUViewGeometry angle]
  -[NUViewGeometry cropRect]
  -[NUViewGeometry setContentInsets:]
  -[NUViewGeometry imageBounds]
  -[NUViewGeometry setImageSize:]
  -[NUViewGeometry origin]
  -[NUViewGeometry setOrigin:]
  -[NUViewGeometry isFlipped]
  -[NUViewGeometry contentInsets]
  -[NUViewGeometry setAngle:]
  -[NUViewGeometry init]
  -[NUViewGeometry imageSize]
  -[NUViewGeometry setCropRect:]
  -[NUViewGeometry maximumScale]
  -[NUViewGeometry setFlipped:]
  -[NUViewGeometry backingScale]
  -[NUViewGeometry setBackingScale:]
  -[NUViewGeometry viewImageSize]
  -[NUViewGeometry contentInsetsWithScale:]
  -[NUViewGeometry proposedBoundsForBounds:inFrame:]
  -[NUViewGeometry insetBoundsForCrop:inBounds:inFrame:]
  -[NUViewGeometry boundingCropRect]
  -[NUViewGeometry setMaximumScale:]


NUViewport : NSObject <NSCopying>
 @property  {CGSize=dd} size
 @property  double backingScaleFactor
 @property  {CGSize=dd} backingSize
 @property  {CGPoint=dd} position
 @property  {CGPoint=dd} backingPosition
 @property  {CGPoint=dd} anchorPoint

  // instance methods
  -[NUViewport setAnchorPoint:]
  -[NUViewport initWithSize:]
  -[NUViewport init]
  -[NUViewport backingSize]
  -[NUViewport size]
  -[NUViewport copyWithZone:]
  -[NUViewport setPosition:]
  -[NUViewport anchorPoint]
  -[NUViewport position]
  -[NUViewport backingScaleFactor]
  -[NUViewport initWithSize:backingScaleFactor:]
  -[NUViewport backingPosition]


NUViewportRegionPolicy : NSObject <NURegionPolicy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NUViewportRegionPolicy .cxx_destruct]
  -[NUViewportRegionPolicy init]
  -[NUViewportRegionPolicy initWithViewport:]
  -[NUViewportRegionPolicy regionForGeometry:]


CALayer(NeutrinoUIDebugging)
	// instance methods
	-[CALayer(NeutrinoUIDebugging) _nu_recursiveDescriptionWithLevel:result:]
	-[CALayer(NeutrinoUIDebugging) nu_layerRecursiveDescription]

UIView(NeutrinoAdditions)
	// class methods
	+[UIView(NeutrinoAdditions) _recurseView:filter:]

01 00 0c00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioSession 
01 00 0500 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0500 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLayer 
01 00 0500 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVQueuePlayer 
01 00 0600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 0600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAScrollLayer 
01 00 0600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0200 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIColor 
01 00 0200 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 0300 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMMotionManager 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUCoalescer 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFitScalePolicy 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFullExtentRegionPolicy 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUGlobalSettings 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImagePropertiesRequest 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NULivePhotoRenderClient 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NULivePhotoRenderRequest 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUObservatory 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUPlatform 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUPriority 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURegion 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURenderPipelineFilter 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURenderTransaction 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUScript 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUSurfaceRenderClient 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUSurfaceRenderRequest 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoCompositionInstruction 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoRenderClient 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoUtilities 
01 00 0800 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUZoomFactorScalePolicy 
01 00 0400 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0400 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 0400 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0400 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0400 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
