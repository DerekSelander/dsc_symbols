|| __DATA.__objc_data _OBJC_CLASS_$_SHListeningLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_SHListeningLayer
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFBooleanTrue
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGColorCreateSRGB
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextDrawPath
__ CoreGraphics: _CGContextGetClipBoundingBox
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGPathAddArc
__ CoreGraphics: _CGPathAddCurveToPoint
__ CoreGraphics: _CGPathAddEllipseInRect
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetWidth
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCALineCapRound
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ QuartzCore: _kCATransactionDisableActions
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIScreen
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
SHShazamButtonLayer : CALayer <CAAnimationDelegate>
 @property  CALayer *backgroundLayer
 @property  CALayer *shapeLayer
 @property  CAShapeLayer *topTransparentLayer
 @property  CAShapeLayer *bottomTransparentLayer
 @property  CAShapeLayer *topSolidLayer
 @property  CAShapeLayer *bottomSolidLayer
 @property  CAShapeLayer *topBorder
 @property  BOOL initialAnimationPerformed
 @property  <SHShazamButtonViewDelegate> *buttonDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SHShazamButtonLayer layoutSublayers]
  -[SHShazamButtonLayer initWithCoder:]
  -[SHShazamButtonLayer .cxx_destruct]
  -[SHShazamButtonLayer setBackgroundLayer:]
  -[SHShazamButtonLayer backgroundLayer]
  -[SHShazamButtonLayer init]
  -[SHShazamButtonLayer shapeLayer]
  -[SHShazamButtonLayer buttonDelegate]
  -[SHShazamButtonLayer setButtonDelegate:]
  -[SHShazamButtonLayer setShapeLayer:]
  -[SHShazamButtonLayer topBorder]
  -[SHShazamButtonLayer setTopBorder:]
  -[SHShazamButtonLayer buildView]
  -[SHShazamButtonLayer drawTransparentShape]
  -[SHShazamButtonLayer initialAnimationPerformed]
  -[SHShazamButtonLayer setInitialAnimationPerformed:]
  -[SHShazamButtonLayer performSDrawingAnimationWithDuration:delay:]
  -[SHShazamButtonLayer removeTransparentShapeWithDuration:delay:completion:]
  -[SHShazamButtonLayer drawSolidShapeWithDuration:delay:completion:]
  -[SHShazamButtonLayer drawSolidShape]
  -[SHShazamButtonLayer removeTransparentShape]
  -[SHShazamButtonLayer topSolidLayer]
  -[SHShazamButtonLayer bottomSolidLayer]
  -[SHShazamButtonLayer topTransparentLayer]
  -[SHShazamButtonLayer bottomTransparentLayer]
  -[SHShazamButtonLayer setTopTransparentLayer:]
  -[SHShazamButtonLayer setBottomTransparentLayer:]
  -[SHShazamButtonLayer topStrokePath]
  -[SHShazamButtonLayer strokeLayerWithPath:color:]
  -[SHShazamButtonLayer bottomStrokePath]
  -[SHShazamButtonLayer setTopSolidLayer:]
  -[SHShazamButtonLayer setBottomSolidLayer:]
  -[SHShazamButtonLayer topStrokeLongPath]
  -[SHShazamButtonLayer bottomStrokeLongPath]
  -[SHShazamButtonLayer performSDrawingIntroAnimation]
  -[SHShazamButtonLayer skipIntroAnimation]
  -[SHShazamButtonLayer performFadeInIntroAnimation:delay:]


SHTaggingViewAutoShadowLayer : CALayer
 @property  CALayer *autoShadowBackgroundLayer
 @property  CAShapeLayer *autoShadowOuterLayer

  // instance methods
  -[SHTaggingViewAutoShadowLayer layoutSublayers]
  -[SHTaggingViewAutoShadowLayer initWithCoder:]
  -[SHTaggingViewAutoShadowLayer .cxx_destruct]
  -[SHTaggingViewAutoShadowLayer init]
  -[SHTaggingViewAutoShadowLayer setupSublayers]
  -[SHTaggingViewAutoShadowLayer setAutoShadowBackgroundLayer:]
  -[SHTaggingViewAutoShadowLayer autoShadowBackgroundLayer]
  -[SHTaggingViewAutoShadowLayer setAutoShadowOuterLayer:]
  -[SHTaggingViewAutoShadowLayer autoShadowOuterLayer]


SHTaggingViewOuterCircleLayer : CALayer
 @property  CALayer *circleContainerLayer
 @property  CALayer *circleLayer

  // instance methods
  -[SHTaggingViewOuterCircleLayer layoutSublayers]
  -[SHTaggingViewOuterCircleLayer initWithCoder:]
  -[SHTaggingViewOuterCircleLayer .cxx_destruct]
  -[SHTaggingViewOuterCircleLayer setup]
  -[SHTaggingViewOuterCircleLayer init]
  -[SHTaggingViewOuterCircleLayer circleLayer]
  -[SHTaggingViewOuterCircleLayer setCircleLayer:]
  -[SHTaggingViewOuterCircleLayer setCircleContainerLayer:]
  -[SHTaggingViewOuterCircleLayer circleContainerLayer]


SHMaths : NSObject
  // class methods
  +[SHMaths interpolateValue:leftMin:leftMax:rightMin:rightMax:]


SHInnerCircleMaskLayer : CALayer
 @property  double innerCircleRelativeSize

  // class methods
  +[SHInnerCircleMaskLayer needsDisplayForKey:]

  // instance methods
  -[SHInnerCircleMaskLayer drawInContext:]
  -[SHInnerCircleMaskLayer initWithCoder:]
  -[SHInnerCircleMaskLayer setup]
  -[SHInnerCircleMaskLayer init]


SHTaggingViewInnerCircleLayer : CALayer
 @property  CAShapeLayer *circle
 @property  CALayer *circleContainerLayer

  // instance methods
  -[SHTaggingViewInnerCircleLayer layoutSublayers]
  -[SHTaggingViewInnerCircleLayer circle]
  -[SHTaggingViewInnerCircleLayer initWithCoder:]
  -[SHTaggingViewInnerCircleLayer .cxx_destruct]
  -[SHTaggingViewInnerCircleLayer setup]
  -[SHTaggingViewInnerCircleLayer init]
  -[SHTaggingViewInnerCircleLayer setCircleContainerLayer:]
  -[SHTaggingViewInnerCircleLayer circleContainerLayer]
  -[SHTaggingViewInnerCircleLayer setCircle:]
  -[SHTaggingViewInnerCircleLayer circlePathForRect:]


SHPalette : NSObject
  // class methods
  +[SHPalette contentsScale]
  +[SHPalette defaultPalette]
  +[SHPalette sh_colorNamed:]

  // instance methods
  -[SHPalette clearColor]
  -[SHPalette blackColor]
  -[SHPalette appTintColor]
  -[SHPalette shadowColor]
  -[SHPalette tagButtonBackgroundColor]
  -[SHPalette tagButtonTopBorderColor]
  -[SHPalette tagButtonBackgroundTransparentColor]
  -[SHPalette tagButtonShazamShapeColor]
  -[SHPalette taggingCircleColor]
  -[SHPalette R:G:B:A:]
  -[SHPalette shazamColorNearBlack]
  -[SHPalette alternateTintColor]


SHTaggingViewInnerCirclesLayer : CALayer
 @property  NSArray *innerCircleLayers
 @property  CAMediaTimingFunction *inOutSineTimingFunction
 @property  CAMediaTimingFunction *linearTimingFunction

  // instance methods
  -[SHTaggingViewInnerCirclesLayer layoutSublayers]
  -[SHTaggingViewInnerCirclesLayer initWithCoder:]
  -[SHTaggingViewInnerCirclesLayer .cxx_destruct]
  -[SHTaggingViewInnerCirclesLayer init]
  -[SHTaggingViewInnerCirclesLayer linearTimingFunction]
  -[SHTaggingViewInnerCirclesLayer setupSublayers]
  -[SHTaggingViewInnerCirclesLayer buildInnerCircleLayers]
  -[SHTaggingViewInnerCirclesLayer setInnerCircleLayers:]
  -[SHTaggingViewInnerCirclesLayer innerCircleLayers]
  -[SHTaggingViewInnerCirclesLayer addCoreAnimationToInnerCircleLayer:withStartOffset:]
  -[SHTaggingViewInnerCirclesLayer addScaleNullAnimationToInnerCircleLayer:]
  -[SHTaggingViewInnerCirclesLayer innerCircleCoreAnimation]
  -[SHTaggingViewInnerCirclesLayer innerCircleScaleNullAnimation]
  -[SHTaggingViewInnerCirclesLayer inOutSineTimingFunction]
  -[SHTaggingViewInnerCirclesLayer startTaggingAnimation]


SHListeningLayer : CALayer <SHShazamButtonViewDelegate>
 @property  <SHListeningLayerDelegate> *viewDelegate
 @property  long long state
 @property  SHShazamButtonLayer *shazamButtonLayer
 @property  CALayer *autoShadowContainerLayer
 @property  CALayer *innerCirclesContainerLayer
 @property  CALayer *innerCirclesSecondaryContainerLayer
 @property  SHTaggingViewInnerCirclesLayer *innerCirclesLayer
 @property  SHTaggingViewOuterCirclesLayer *outerCirclesLayer
 @property  SHTaggingViewAutoShadowLayer *autoShadowLayer
 @property  SHInnerCircleMaskLayer *innerCircleToShazamButtonMaskLayer
 @property  SHInnerCircleMaskLayer *innerCircleToAutoShadowMaskLayer
 @property  SHInnerCircleMaskLayer *autoShadowToShazamButtonMaskLayer

  // instance methods
  -[SHListeningLayer layoutSublayers]
  -[SHListeningLayer .cxx_destruct]
  -[SHListeningLayer viewDelegate]
  -[SHListeningLayer setState:]
  -[SHListeningLayer init]
  -[SHListeningLayer setViewDelegate:]
  -[SHListeningLayer state]
  -[SHListeningLayer startActiveListeningAnimation]
  -[SHListeningLayer buildView]
  -[SHListeningLayer buttonWillFinishDrawingShazamShape]
  -[SHListeningLayer buttonDidFinishDrawingShazamShape]
  -[SHListeningLayer shazamButtonLayer]
  -[SHListeningLayer setShazamButtonLayer:]
  -[SHListeningLayer autoShadowContainerLayer]
  -[SHListeningLayer centerLayer:inSuperLayer:withRelativeSize:]
  -[SHListeningLayer autoShadowLayer]
  -[SHListeningLayer innerCirclesContainerLayer]
  -[SHListeningLayer innerCirclesSecondaryContainerLayer]
  -[SHListeningLayer innerCirclesLayer]
  -[SHListeningLayer outerCirclesLayer]
  -[SHListeningLayer innerCircleToShazamButtonMaskLayer]
  -[SHListeningLayer innerCircleToAutoShadowMaskLayer]
  -[SHListeningLayer autoShadowToShazamButtonMaskLayer]
  -[SHListeningLayer startManualTaggingAnimation]
  -[SHListeningLayer startAutoTaggingAnimation]
  -[SHListeningLayer removeAnimationLayers]
  -[SHListeningLayer startIdleAnimation]
  -[SHListeningLayer animateToIdleStateWithCompletion:]
  -[SHListeningLayer processBassForInnerCircle:]
  -[SHListeningLayer processBassForShazamButton:]
  -[SHListeningLayer processTrebleForOuterCircles:]
  -[SHListeningLayer addInnerCirclesLayer]
  -[SHListeningLayer addOuterCirclesLayer]
  -[SHListeningLayer addInnerCirclesToShazamButtonMaskLayer]
  -[SHListeningLayer addAutoShadowLayer]
  -[SHListeningLayer addInnerCircleToAutoShadowMaskLayer]
  -[SHListeningLayer addAutoShadowToShazamButtonMaskLayer]
  -[SHListeningLayer addAutoAnimationInitialShazamButtonPulse]
  -[SHListeningLayer setInnerCirclesContainerLayer:]
  -[SHListeningLayer setInnerCirclesSecondaryContainerLayer:]
  -[SHListeningLayer setInnerCirclesLayer:]
  -[SHListeningLayer setOuterCirclesLayer:]
  -[SHListeningLayer setAutoShadowContainerLayer:]
  -[SHListeningLayer setAutoShadowLayer:]
  -[SHListeningLayer setInnerCircleToShazamButtonMaskLayer:]
  -[SHListeningLayer setInnerCircleToAutoShadowMaskLayer:]
  -[SHListeningLayer setAutoShadowToShazamButtonMaskLayer:]
  -[SHListeningLayer startPassiveListeningAnimation]
  -[SHListeningLayer stopListeningAnimations]
  -[SHListeningLayer processBass:treble:]
  -[SHListeningLayer addTouchDownAnimation]


SHTaggingViewHelperMethods : NSObject
  // class methods
  +[SHTaggingViewHelperMethods animationFromAnimation:withStartOffset:duration:]


SHTaggingViewMediaTimingFunctionProvider : NSObject
  // class methods
  +[SHTaggingViewMediaTimingFunctionProvider inOutSineMediaTimingFunction]
  +[SHTaggingViewMediaTimingFunctionProvider inOutQuartMediaTimingFunction]


SHTaggingViewOuterCirclesLayer : CALayer
 @property  NSArray *outerCircleLayers
 @property  CAMediaTimingFunction *inOutSineTimingFunction
 @property  CAMediaTimingFunction *inOutQuartTimingFunction
 @property  CAMediaTimingFunction *linearTimingFunction

  // instance methods
  -[SHTaggingViewOuterCirclesLayer layoutSublayers]
  -[SHTaggingViewOuterCirclesLayer initWithCoder:]
  -[SHTaggingViewOuterCirclesLayer .cxx_destruct]
  -[SHTaggingViewOuterCirclesLayer init]
  -[SHTaggingViewOuterCirclesLayer linearTimingFunction]
  -[SHTaggingViewOuterCirclesLayer setupSublayers]
  -[SHTaggingViewOuterCirclesLayer inOutSineTimingFunction]
  -[SHTaggingViewOuterCirclesLayer startTaggingAnimation]
  -[SHTaggingViewOuterCirclesLayer buildOuterCircleLayers]
  -[SHTaggingViewOuterCirclesLayer setOuterCircleLayers:]
  -[SHTaggingViewOuterCirclesLayer outerCircleLayers]
  -[SHTaggingViewOuterCirclesLayer addCoreAnimationToOuterCircleLayer:withStartOffset:]
  -[SHTaggingViewOuterCirclesLayer addScaleAnimationToCircleLayer:]
  -[SHTaggingViewOuterCirclesLayer scaleNullAnimation]
  -[SHTaggingViewOuterCirclesLayer outerCircleCoreSizeAnimation]
  -[SHTaggingViewOuterCirclesLayer outerCircleCoreBorderWidthAnimation]
  -[SHTaggingViewOuterCirclesLayer outerCircleCoreScaleAnimation]
  -[SHTaggingViewOuterCirclesLayer inOutQuartTimingFunction]


NSBundle(ResourcesBundle)
	// class methods
	+[NSBundle(ResourcesBundle) sh_UIBundle]

01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
