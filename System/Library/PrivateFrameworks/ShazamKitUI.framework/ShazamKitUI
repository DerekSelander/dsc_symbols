|| __DATA.__objc_data _OBJC_CLASS_$_SHListeningLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_SHListeningLayer
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFBooleanTrue
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGColorCreateSRGB
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextDrawPath
__ CoreGraphics: _CGContextGetClipBoundingBox
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGPathAddArc
__ CoreGraphics: _CGPathAddCurveToPoint
__ CoreGraphics: _CGPathAddEllipseInRect
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetWidth
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCALineCapRound
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ QuartzCore: _kCATransactionDisableActions
__ ShazamCore: _OBJC_CLASS_$_SHAnalytics
__ ShazamCore: _OBJC_CLASS_$_SHCoreError
__ ShazamCore: _SHAnalyticsActionAppleMusic
__ ShazamCore: _SHAnalyticsActionNotificationTap
__ ShazamCore: _SHAnalyticsEventMusicRecognitionResult
__ ShazamCore: _SHAnalyticsEventMusicRecognitionResultAction
__ ShazamCore: _SHAnalyticsPayloadActionKey
__ ShazamCore: _SHAnalyticsPayloadMatchKey
__ ShazamCore: _SHAnalyticsPayloadSourceKey
__ ShazamCore: _sh_log_object
__ ShazamKit: _OBJC_CLASS_$_SHError
__ ShazamKit: _OBJC_CLASS_$_SHMediaItem
__ ShazamKit: _OBJC_CLASS_$_SHMediaLibrary
__ ShazamKit: _OBJC_CLASS_$_SHMediaLibraryGroup
__ ShazamKit: _OBJC_CLASS_$_SHMediaLibraryTrack
__ ShazamKit: _OBJC_CLASS_$_SHRange
__ ShazamKit: _SHErrorDomain
__ ShazamKit: _SHMediaItemFrequencySkewRanges
__ ShazamKit: _SHMediaItemTimeRanges
__ ShazamKit: _SHMediaItemWebURL
__ ShazamKit: _SHShazamKitUIServiceInterface
__ ShazamKit: _SHShazamKitUIServiceName
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIView
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocBox
__ libswiftCore.dylib: _swift_allocError
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_getEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getKeyPath
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getOpaqueTypeConformance
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initStackObject
__ libswiftCore.dylib: _swift_initStructMetadata
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_release_n
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_storeEnumTagMultiPayload
__ libswiftCore.dylib: _swift_storeEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_updateClassMetadata2
__ libswiftCore.dylib: _swift_willThrow
__ libswift_Concurrency.dylib: _swift_continuation_await
__ libswift_Concurrency.dylib: _swift_continuation_init
__ libswift_Concurrency.dylib: _swift_continuation_throwingResume
__ libswift_Concurrency.dylib: _swift_continuation_throwingResumeWithError
__ libswift_Concurrency.dylib: _swift_task_alloc
__ libswift_Concurrency.dylib: _swift_task_create
__ libswift_Concurrency.dylib: _swift_task_dealloc
__ libswift_Concurrency.dylib: _swift_task_switch
SHPaletteLayer : CALayer
 @property  SHPalette *palette

  // instance methods
  -[SHPaletteLayer setup]
  -[SHPaletteLayer .cxx_destruct]
  -[SHPaletteLayer init]
  -[SHPaletteLayer initWithCoder:]
  -[SHPaletteLayer palette]
  -[SHPaletteLayer initWithPalette:]


SHShazamButtonLayer : SHPaletteLayer <CAAnimationDelegate>
 @property  CALayer *backgroundLayer
 @property  CALayer *shapeLayer
 @property  CAShapeLayer *topTransparentLayer
 @property  CAShapeLayer *bottomTransparentLayer
 @property  CAShapeLayer *topSolidLayer
 @property  CAShapeLayer *bottomSolidLayer
 @property  CAShapeLayer *topBorder
 @property  BOOL initialAnimationPerformed
 @property  <SHShazamButtonViewDelegate> *buttonDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SHShazamButtonLayer setup]
  -[SHShazamButtonLayer layoutSublayers]
  -[SHShazamButtonLayer .cxx_destruct]
  -[SHShazamButtonLayer setShapeLayer:]
  -[SHShazamButtonLayer shapeLayer]
  -[SHShazamButtonLayer backgroundLayer]
  -[SHShazamButtonLayer setBackgroundLayer:]
  -[SHShazamButtonLayer buttonDelegate]
  -[SHShazamButtonLayer setButtonDelegate:]
  -[SHShazamButtonLayer topBorder]
  -[SHShazamButtonLayer setTopBorder:]
  -[SHShazamButtonLayer skipIntroAnimation]
  -[SHShazamButtonLayer performSDrawingIntroAnimation]
  -[SHShazamButtonLayer performSDrawingAnimationWithDuration:delay:]
  -[SHShazamButtonLayer performFadeInIntroAnimation:delay:]
  -[SHShazamButtonLayer removeTransparentShape]
  -[SHShazamButtonLayer drawTransparentShape]
  -[SHShazamButtonLayer removeTransparentShapeWithDuration:delay:completion:]
  -[SHShazamButtonLayer drawSolidShape]
  -[SHShazamButtonLayer drawSolidShapeWithDuration:delay:completion:]
  -[SHShazamButtonLayer strokeLayerWithPath:color:]
  -[SHShazamButtonLayer topStrokeLongPath]
  -[SHShazamButtonLayer bottomStrokeLongPath]
  -[SHShazamButtonLayer topStrokePath]
  -[SHShazamButtonLayer bottomStrokePath]
  -[SHShazamButtonLayer topTransparentLayer]
  -[SHShazamButtonLayer setTopTransparentLayer:]
  -[SHShazamButtonLayer bottomTransparentLayer]
  -[SHShazamButtonLayer setBottomTransparentLayer:]
  -[SHShazamButtonLayer topSolidLayer]
  -[SHShazamButtonLayer setTopSolidLayer:]
  -[SHShazamButtonLayer bottomSolidLayer]
  -[SHShazamButtonLayer setBottomSolidLayer:]
  -[SHShazamButtonLayer initialAnimationPerformed]
  -[SHShazamButtonLayer setInitialAnimationPerformed:]


SHListeningAutoShadowLayer : SHPaletteLayer
 @property  CALayer *autoShadowBackgroundLayer
 @property  CAShapeLayer *autoShadowOuterLayer

  // instance methods
  -[SHListeningAutoShadowLayer setup]
  -[SHListeningAutoShadowLayer layoutSublayers]
  -[SHListeningAutoShadowLayer .cxx_destruct]
  -[SHListeningAutoShadowLayer autoShadowBackgroundLayer]
  -[SHListeningAutoShadowLayer setAutoShadowBackgroundLayer:]
  -[SHListeningAutoShadowLayer autoShadowOuterLayer]
  -[SHListeningAutoShadowLayer setAutoShadowOuterLayer:]


SHListeningOuterCircleLayer : SHPaletteLayer
 @property  CALayer *circleContainerLayer
 @property  CALayer *circleLayer

  // instance methods
  -[SHListeningOuterCircleLayer setup]
  -[SHListeningOuterCircleLayer layoutSublayers]
  -[SHListeningOuterCircleLayer .cxx_destruct]
  -[SHListeningOuterCircleLayer circleLayer]
  -[SHListeningOuterCircleLayer setCircleLayer:]
  -[SHListeningOuterCircleLayer circleContainerLayer]
  -[SHListeningOuterCircleLayer setCircleContainerLayer:]


SHCustomBackgroundCompatiblePalette : SHPalette
  // instance methods
  -[SHCustomBackgroundCompatiblePalette listeningButtonBackgroundColor]
  -[SHCustomBackgroundCompatiblePalette listeningCircleColor]


SHShazamKitUIServiceConnectionProvider : NSObject <SHShazamKitUIServiceConnectionProvider>
  // instance methods
  -[SHShazamKitUIServiceConnectionProvider shazamKitUIServiceConnection]


SHMaths : NSObject
  // class methods
  +[SHMaths interpolateValue:leftMin:leftMax:rightMin:rightMax:]


SHInnerCircleMaskLayer : SHPaletteLayer
 @property  double innerCircleRelativeSize

  // class methods
  +[SHInnerCircleMaskLayer needsDisplayForKey:]

  // instance methods
  -[SHInnerCircleMaskLayer drawInContext:]
  -[SHInnerCircleMaskLayer setup]


SHShazamKitUIServiceConnection : NSObject <SHShazamKitUIService>
 @property  SHShazamKitUIServiceConnectionProvider *connectionProvider
 @property  NSXPCConnection *connection
 @property  {os_unfair_lock_s=I} connectionLock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SHShazamKitUIServiceConnection connectionLock]
  -[SHShazamKitUIServiceConnection tearDownConnection]
  -[SHShazamKitUIServiceConnection dealloc]
  -[SHShazamKitUIServiceConnection .cxx_destruct]
  -[SHShazamKitUIServiceConnection connectionProvider]
  -[SHShazamKitUIServiceConnection connection]
  -[SHShazamKitUIServiceConnection initWithConnectionProvider:]
  -[SHShazamKitUIServiceConnection setConnectionLock:]
  -[SHShazamKitUIServiceConnection presentMediaItem:completionHandler:]
  -[SHShazamKitUIServiceConnection attachDefaultConnectionHandlers]


SHListeningInnerCircleLayer : SHPaletteLayer
 @property  CAShapeLayer *circle
 @property  CALayer *circleContainerLayer

  // instance methods
  -[SHListeningInnerCircleLayer setup]
  -[SHListeningInnerCircleLayer layoutSublayers]
  -[SHListeningInnerCircleLayer .cxx_destruct]
  -[SHListeningInnerCircleLayer circle]
  -[SHListeningInnerCircleLayer circleContainerLayer]
  -[SHListeningInnerCircleLayer setCircleContainerLayer:]
  -[SHListeningInnerCircleLayer circlePathForRect:]
  -[SHListeningInnerCircleLayer setCircle:]


SHPalette : NSObject
  // class methods
  +[SHPalette contentsScale]
  +[SHPalette default]
  +[SHPalette sh_colorNamed:]

  // instance methods
  -[SHPalette shadowColor]
  -[SHPalette clearColor]
  -[SHPalette blackColor]
  -[SHPalette appTintColor]
  -[SHPalette listeningButtonBackgroundColor]
  -[SHPalette listeningCircleColor]
  -[SHPalette shazamColorNearBlack]
  -[SHPalette listeningButtonTopBorderColor]
  -[SHPalette listeningButtonShazamShapeColor]
  -[SHPalette listeningButtonBackgroundTransparentColor]
  -[SHPalette alternateTintColor]
  -[SHPalette R:G:B:A:]


SHListeningInnerCirclesLayer : SHPaletteLayer
 @property  NSArray *innerCircleLayers
 @property  CAMediaTimingFunction *inOutSineTimingFunction
 @property  CAMediaTimingFunction *linearTimingFunction

  // instance methods
  -[SHListeningInnerCirclesLayer setup]
  -[SHListeningInnerCirclesLayer layoutSublayers]
  -[SHListeningInnerCirclesLayer .cxx_destruct]
  -[SHListeningInnerCirclesLayer linearTimingFunction]
  -[SHListeningInnerCirclesLayer buildInnerCircleLayers]
  -[SHListeningInnerCirclesLayer startListeningAnimation]
  -[SHListeningInnerCirclesLayer addCoreAnimationToInnerCircleLayer:withStartOffset:]
  -[SHListeningInnerCirclesLayer addScaleNullAnimationToInnerCircleLayer:]
  -[SHListeningInnerCirclesLayer innerCircleScaleNullAnimation]
  -[SHListeningInnerCirclesLayer innerCircleCoreAnimation]
  -[SHListeningInnerCirclesLayer inOutSineTimingFunction]
  -[SHListeningInnerCirclesLayer innerCircleLayers]
  -[SHListeningInnerCirclesLayer setInnerCircleLayers:]


SHListeningLayer : CALayer <SHShazamButtonViewDelegate>
 @property  <SHListeningLayerDelegate> *viewDelegate
 @property  long long state
 @property  SHShazamButtonLayer *shazamButtonLayer
 @property  CALayer *autoShadowContainerLayer
 @property  CALayer *innerCirclesContainerLayer
 @property  CALayer *innerCirclesSecondaryContainerLayer
 @property  SHListeningInnerCirclesLayer *innerCirclesLayer
 @property  SHListeningOuterCirclesLayer *outerCirclesLayer
 @property  SHListeningAutoShadowLayer *autoShadowLayer
 @property  SHInnerCircleMaskLayer *innerCircleToShazamButtonMaskLayer
 @property  SHInnerCircleMaskLayer *innerCircleToAutoShadowMaskLayer
 @property  SHInnerCircleMaskLayer *autoShadowToShazamButtonMaskLayer
 @property  SHPalette *palette
 @property  BOOL shouldPerformIntroAnimation
 @property  double bass
 @property  double treble

  // instance methods
  -[SHListeningLayer layoutSublayers]
  -[SHListeningLayer state]
  -[SHListeningLayer .cxx_destruct]
  -[SHListeningLayer setViewDelegate:]
  -[SHListeningLayer init]
  -[SHListeningLayer viewDelegate]
  -[SHListeningLayer setState:]
  -[SHListeningLayer palette]
  -[SHListeningLayer buildView]
  -[SHListeningLayer stopAllAnimations]
  -[SHListeningLayer startActiveListeningAnimation]
  -[SHListeningLayer buttonWillFinishDrawingShazamShape]
  -[SHListeningLayer buttonDidFinishDrawingShazamShape]
  -[SHListeningLayer initWithIntroAnimation:useCustomCompatibleBackground:]
  -[SHListeningLayer centerLayer:inSuperLayer:withRelativeSize:]
  -[SHListeningLayer bass]
  -[SHListeningLayer setBass:]
  -[SHListeningLayer treble]
  -[SHListeningLayer setTreble:]
  -[SHListeningLayer processBass:treble:]
  -[SHListeningLayer processBassForInnerCircle:]
  -[SHListeningLayer processTrebleForOuterCircles:]
  -[SHListeningLayer processBassForShazamButton:]
  -[SHListeningLayer startIdleAnimation]
  -[SHListeningLayer startPassiveListeningAnimation]
  -[SHListeningLayer stopListeningAnimations]
  -[SHListeningLayer stopAllAnimationsWithCompletionHandler:]
  -[SHListeningLayer addAutoAnimationInitialShazamButtonPulse]
  -[SHListeningLayer addTouchDownAnimation]
  -[SHListeningLayer animateToIdleStateWithCompletion:]
  -[SHListeningLayer addInnerCirclesLayer]
  -[SHListeningLayer addOuterCirclesLayer]
  -[SHListeningLayer addAutoShadowLayer]
  -[SHListeningLayer addInnerCirclesToShazamButtonMaskLayer]
  -[SHListeningLayer addInnerCircleToAutoShadowMaskLayer]
  -[SHListeningLayer addAutoShadowToShazamButtonMaskLayer]
  -[SHListeningLayer removeAnimationLayers]
  -[SHListeningLayer shazamButtonLayer]
  -[SHListeningLayer setShazamButtonLayer:]
  -[SHListeningLayer autoShadowContainerLayer]
  -[SHListeningLayer setAutoShadowContainerLayer:]
  -[SHListeningLayer innerCirclesContainerLayer]
  -[SHListeningLayer setInnerCirclesContainerLayer:]
  -[SHListeningLayer innerCirclesSecondaryContainerLayer]
  -[SHListeningLayer setInnerCirclesSecondaryContainerLayer:]
  -[SHListeningLayer innerCirclesLayer]
  -[SHListeningLayer setInnerCirclesLayer:]
  -[SHListeningLayer outerCirclesLayer]
  -[SHListeningLayer setOuterCirclesLayer:]
  -[SHListeningLayer autoShadowLayer]
  -[SHListeningLayer setAutoShadowLayer:]
  -[SHListeningLayer innerCircleToShazamButtonMaskLayer]
  -[SHListeningLayer setInnerCircleToShazamButtonMaskLayer:]
  -[SHListeningLayer innerCircleToAutoShadowMaskLayer]
  -[SHListeningLayer setInnerCircleToAutoShadowMaskLayer:]
  -[SHListeningLayer autoShadowToShazamButtonMaskLayer]
  -[SHListeningLayer setAutoShadowToShazamButtonMaskLayer:]
  -[SHListeningLayer shouldPerformIntroAnimation]
  -[SHListeningLayer setShouldPerformIntroAnimation:]


SHListeningViewHelperMethods : NSObject
  // class methods
  +[SHListeningViewHelperMethods animationFromAnimation:withStartOffset:duration:]


SHListeningMediaTimingFunctionProvider : NSObject
  // class methods
  +[SHListeningMediaTimingFunctionProvider inOutSineMediaTimingFunction]
  +[SHListeningMediaTimingFunctionProvider inOutQuartMediaTimingFunction]


SHListeningOuterCirclesLayer : SHPaletteLayer
 @property  NSArray *outerCircleLayers
 @property  CAMediaTimingFunction *inOutSineTimingFunction
 @property  CAMediaTimingFunction *inOutQuartTimingFunction
 @property  CAMediaTimingFunction *linearTimingFunction

  // instance methods
  -[SHListeningOuterCirclesLayer setup]
  -[SHListeningOuterCirclesLayer layoutSublayers]
  -[SHListeningOuterCirclesLayer .cxx_destruct]
  -[SHListeningOuterCirclesLayer linearTimingFunction]
  -[SHListeningOuterCirclesLayer startListeningAnimation]
  -[SHListeningOuterCirclesLayer inOutSineTimingFunction]
  -[SHListeningOuterCirclesLayer buildOuterCircleLayers]
  -[SHListeningOuterCirclesLayer addScaleAnimationToCircleLayer:]
  -[SHListeningOuterCirclesLayer addCoreAnimationToOuterCircleLayer:withStartOffset:]
  -[SHListeningOuterCirclesLayer scaleNullAnimation]
  -[SHListeningOuterCirclesLayer outerCircleCoreSizeAnimation]
  -[SHListeningOuterCirclesLayer outerCircleCoreBorderWidthAnimation]
  -[SHListeningOuterCirclesLayer outerCircleCoreScaleAnimation]
  -[SHListeningOuterCirclesLayer inOutQuartTimingFunction]
  -[SHListeningOuterCirclesLayer outerCircleLayers]
  -[SHListeningOuterCirclesLayer setOuterCircleLayers:]


_TtC11ShazamKitUIP33_518FA81EA2015F933ABF9B18421899FF6Assets : Swift._SwiftObject

_TtC11ShazamKitUI22MediaLibraryController : Swift._SwiftObject

_TtC11ShazamKitUI21MatchingFlowViewModel : Swift._SwiftObject

_TtCV11ShazamKitUI29ListeningLayerPlatformWrapper15ListeningUIView : UIView
  // instance methods
  -[_TtCV11ShazamKitUI29ListeningLayerPlatformWrapper15ListeningUIView .cxx_destruct]
  -[_TtCV11ShazamKitUI29ListeningLayerPlatformWrapper15ListeningUIView layoutSubviews]
  -[_TtCV11ShazamKitUI29ListeningLayerPlatformWrapper15ListeningUIView initWithFrame:]
  -[_TtCV11ShazamKitUI29ListeningLayerPlatformWrapper15ListeningUIView initWithCoder:]


_TtC11ShazamKitUIP33_6E20AEE7F2EA3679A6BE99805EDABA2718LocalizationBundle : Swift._SwiftObject

NSBundle(ResourcesBundle)
	// class methods
	+[NSBundle(ResourcesBundle) sh_UIBundle]

SHMediaItem(Presentation)
	// class methods
	+[SHMediaItem(Presentation) presentMediaItem:completionHandler:]
	+[SHMediaItem(Presentation) sh_uiServerConnection]

01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0b00 /System/Library/PrivateFrameworks/ShazamCore.framework/ShazamCore: SHAnalytics 
01 00 0b00 /System/Library/PrivateFrameworks/ShazamCore.framework/ShazamCore: SHCoreError 
01 00 0200 /System/Library/Frameworks/ShazamKit.framework/ShazamKit: SHError 
01 00 0200 /System/Library/Frameworks/ShazamKit.framework/ShazamKit: SHMediaItem 
01 00 0200 /System/Library/Frameworks/ShazamKit.framework/ShazamKit: SHMediaLibrary 
01 00 0200 /System/Library/Frameworks/ShazamKit.framework/ShazamKit: SHMediaLibraryGroup 
01 00 0200 /System/Library/Frameworks/ShazamKit.framework/ShazamKit: SHMediaLibraryTrack 
01 00 0200 /System/Library/Frameworks/ShazamKit.framework/ShazamKit: SHRange 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0e00 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
