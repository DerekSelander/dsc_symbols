|| __DATA.__data _VKAnimationCurveDefaultCameraSpring
|| __DATA.__data _VKAnimationCurveDefaultSpring
|| __DATA.__data _VKAnimationCurveEaseIn
|| __DATA.__data _VKAnimationCurveEaseInOut
|| __DATA.__data _VKAnimationCurveEaseOut
|| __DATA.__data _VKAnimationCurveExponentialEaseIn
|| __DATA.__data _VKAnimationCurveExponentialEaseInOut
|| __DATA.__data _VKAnimationCurveExponentialEaseOut
|| __DATA.__data _VKAnimationCurveLinear
|| __DATA.__data _VectorKitConfig_AllowNormalMnMetadata
|| __DATA.__data _VectorKitConfig_AllowOldMnMetadata
|| __DATA.__data _VectorKitConfig_AllowPedestrianMnMetadata
|| __DATA.__data _VectorKitConfig_BaseSSLPMEnabled
|| __DATA.__data _VectorKitConfig_CleanupDestroysAllocators
|| __DATA.__data _VectorKitConfig_DistanceToCurrentManeuverSimilarityThresholdInMeters
|| __DATA.__data _VectorKitConfig_ManeuverComplexityJunctionCountMin
|| __DATA.__data _VectorKitConfig_MaxNavCameraHeight
|| __DATA.__data _VectorKitConfig_MaxZoomScaleDefault
|| __DATA.__data _VectorKitConfig_MnAnimationAcceleration
|| __DATA.__data _VectorKitConfig_MnBumpBackwardDuration
|| __DATA.__data _VectorKitConfig_MnBumpBackwardFriction
|| __DATA.__data _VectorKitConfig_MnBumpForwardDuration
|| __DATA.__data _VectorKitConfig_MnBumpForwardFriction
|| __DATA.__data _VectorKitConfig_MnIntermediateLod
|| __DATA.__data _VectorKitConfig_MnMaxSnapshotMetadataTileSearchRadius
|| __DATA.__data _VectorKitConfig_MnMaxTargetPointDistance
|| __DATA.__data _VectorKitConfig_MnNearbyLodOffset
|| __DATA.__data _VectorKitConfig_MnNearbyLodOffsetCount
|| __DATA.__data _VectorKitConfig_MnResourceAgePenalty
|| __DATA.__data _VectorKitConfig_MnResourcePenalty
|| __DATA.__data _VectorKitConfig_MnStepSizeMaxDistance
|| __DATA.__data _VectorKitConfig_MnStepSizeMaxValue
|| __DATA.__data _VectorKitConfig_MnStepSizeMinDistance
|| __DATA.__data _VectorKitConfig_MnStepSizeMinValue
|| __DATA.__data _VectorKitConfig_MnStepSizePenalty
|| __DATA.__data _VectorKitConfig_MnStepSizePenaltyDeadZone
|| __DATA.__data _VectorKitConfig_MnTargetLodMaxSizes
|| __DATA.__data _VectorKitConfig_MnTargetPointHiddenLod
|| __DATA.__data _VectorKitConfig_MnTargetPointOmniLod
|| __DATA.__data _VectorKitConfig_NavCameraEnableDynamicFramerate
|| __DATA.__data _VectorKitConfig_NavCameraShouldUseStartLocationForPounce
|| __DATA.__data _kVKOuterStrokeWidthAttributeName
|| __DATA.__objc_data _OBJC_CLASS_$_MIController
|| __DATA.__objc_data _OBJC_CLASS_$_VKAlternateRouteInfo
|| __DATA.__objc_data _OBJC_CLASS_$_VKAnchorWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_VKAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_VKClientLocalizedStrings
|| __DATA.__objc_data _OBJC_CLASS_$_VKCompoundAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_VKDebugTree
|| __DATA.__objc_data _OBJC_CLASS_$_VKDebugTreeDataNode
|| __DATA.__objc_data _OBJC_CLASS_$_VKDebugTreeNode
|| __DATA.__objc_data _OBJC_CLASS_$_VKDebugTreePropertyNode
|| __DATA.__objc_data _OBJC_CLASS_$_VKDynamicAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_VKEVChargeStationRouteWaypoint
|| __DATA.__objc_data _OBJC_CLASS_$_VKFeatureMarker
|| __DATA.__objc_data _OBJC_CLASS_$_VKIconImage
|| __DATA.__objc_data _OBJC_CLASS_$_VKIconManager
|| __DATA.__objc_data _OBJC_CLASS_$_VKIconModifiers
|| __DATA.__objc_data _OBJC_CLASS_$_VKImage
|| __DATA.__objc_data _OBJC_CLASS_$_VKImageSourceKey
|| __DATA.__objc_data _OBJC_CLASS_$_VKLabelExclusionRegion
|| __DATA.__objc_data _OBJC_CLASS_$_VKLabelMarker
|| __DATA.__objc_data _OBJC_CLASS_$_VKLabelMarkerFeatureHandle
|| __DATA.__objc_data _OBJC_CLASS_$_VKLabelMarkerShield
|| __DATA.__objc_data _OBJC_CLASS_$_VKMuninJunction
|| __DATA.__objc_data _OBJC_CLASS_$_VKMuninMarker
|| __DATA.__objc_data _OBJC_CLASS_$_VKMuninRoad
|| __DATA.__objc_data _OBJC_CLASS_$_VKNavContext
|| __DATA.__objc_data _OBJC_CLASS_$_VKObjectBoundsContext
|| __DATA.__objc_data _OBJC_CLASS_$_VKOverlay
|| __DATA.__objc_data _OBJC_CLASS_$_VKPolylineGroupOverlay
|| __DATA.__objc_data _OBJC_CLASS_$_VKPolylineOverlay
|| __DATA.__objc_data _OBJC_CLASS_$_VKPuckAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_VKQuickDynamicAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_VKRouteAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_VKRouteContext
|| __DATA.__objc_data _OBJC_CLASS_$_VKRouteEtaDescription
|| __DATA.__objc_data _OBJC_CLASS_$_VKRouteInfo
|| __DATA.__objc_data _OBJC_CLASS_$_VKRouteWaypointInfo
|| __DATA.__objc_data _OBJC_CLASS_$_VKTimedAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_VKTrafficCameraFeature
|| __DATA.__objc_data _OBJC_CLASS_$_VKTrafficFeature
|| __DATA.__objc_data _OBJC_CLASS_$_VKTrafficIncidentFeature
|| __DATA.__objc_data _OBJC_CLASS_$_VKTrafficSignalFeature
|| __DATA.__objc_data _OBJC_CLASS_$_VKTransitLineMarker
|| __DATA.__objc_data _OBJC_CLASS_$_VKVectorOverlayCircle
|| __DATA.__objc_data _OBJC_CLASS_$_VKVectorOverlayData
|| __DATA.__objc_data _OBJC_CLASS_$_VKVectorOverlayPolygon
|| __DATA.__objc_data _OBJC_CLASS_$_VKVectorOverlayPolygonGroup
|| __DATA.__objc_data _OBJC_CLASS_$_VKVectorOverlayPolyline
|| __DATA.__objc_data _OBJC_CLASS_$_VKVectorOverlayPolylineGroup
|| __DATA.__objc_data _OBJC_CLASS_$_VKVenueBuildingFeatureMarker
|| __DATA.__objc_data _OBJC_CLASS_$_VKVenueFeatureMarker
|| __DATA.__objc_data _OBJC_CLASS_$_VKViewportInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_MIController
|| __DATA.__objc_data _OBJC_METACLASS_$_VKAlternateRouteInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_VKAnchorWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_VKAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_VKClientLocalizedStrings
|| __DATA.__objc_data _OBJC_METACLASS_$_VKCompoundAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_VKDebugTree
|| __DATA.__objc_data _OBJC_METACLASS_$_VKDebugTreeDataNode
|| __DATA.__objc_data _OBJC_METACLASS_$_VKDebugTreeNode
|| __DATA.__objc_data _OBJC_METACLASS_$_VKDebugTreePropertyNode
|| __DATA.__objc_data _OBJC_METACLASS_$_VKDynamicAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_VKEVChargeStationRouteWaypoint
|| __DATA.__objc_data _OBJC_METACLASS_$_VKFeatureMarker
|| __DATA.__objc_data _OBJC_METACLASS_$_VKIconImage
|| __DATA.__objc_data _OBJC_METACLASS_$_VKIconManager
|| __DATA.__objc_data _OBJC_METACLASS_$_VKIconModifiers
|| __DATA.__objc_data _OBJC_METACLASS_$_VKImageSourceKey
|| __DATA.__objc_data _OBJC_METACLASS_$_VKLabelExclusionRegion
|| __DATA.__objc_data _OBJC_METACLASS_$_VKLabelMarker
|| __DATA.__objc_data _OBJC_METACLASS_$_VKLabelMarkerFeatureHandle
|| __DATA.__objc_data _OBJC_METACLASS_$_VKLabelMarkerShield
|| __DATA.__objc_data _OBJC_METACLASS_$_VKMuninJunction
|| __DATA.__objc_data _OBJC_METACLASS_$_VKMuninMarker
|| __DATA.__objc_data _OBJC_METACLASS_$_VKMuninRoad
|| __DATA.__objc_data _OBJC_METACLASS_$_VKNavContext
|| __DATA.__objc_data _OBJC_METACLASS_$_VKObjectBoundsContext
|| __DATA.__objc_data _OBJC_METACLASS_$_VKOverlay
|| __DATA.__objc_data _OBJC_METACLASS_$_VKPolylineGroupOverlay
|| __DATA.__objc_data _OBJC_METACLASS_$_VKPolylineOverlay
|| __DATA.__objc_data _OBJC_METACLASS_$_VKPuckAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_VKQuickDynamicAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_VKRouteAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_VKRouteContext
|| __DATA.__objc_data _OBJC_METACLASS_$_VKRouteEtaDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_VKRouteInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_VKRouteWaypointInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_VKTimedAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_VKTrafficCameraFeature
|| __DATA.__objc_data _OBJC_METACLASS_$_VKTrafficFeature
|| __DATA.__objc_data _OBJC_METACLASS_$_VKTrafficIncidentFeature
|| __DATA.__objc_data _OBJC_METACLASS_$_VKTrafficSignalFeature
|| __DATA.__objc_data _OBJC_METACLASS_$_VKTransitLineMarker
|| __DATA.__objc_data _OBJC_METACLASS_$_VKVectorOverlayCircle
|| __DATA.__objc_data _OBJC_METACLASS_$_VKVectorOverlayData
|| __DATA.__objc_data _OBJC_METACLASS_$_VKVectorOverlayPolygon
|| __DATA.__objc_data _OBJC_METACLASS_$_VKVectorOverlayPolygonGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_VKVectorOverlayPolyline
|| __DATA.__objc_data _OBJC_METACLASS_$_VKVectorOverlayPolylineGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_VKVenueBuildingFeatureMarker
|| __DATA.__objc_data _OBJC_METACLASS_$_VKVenueFeatureMarker
|| __DATA.__objc_data _OBJC_METACLASS_$_VKViewportInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKAnimation._completionHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKAnimation._frequency
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKAnimation._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKAnimation._priority
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKAnimation._runner
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKAnimation._runsForever
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKAnimation._state
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKCompoundAnimation._animations
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKCompoundAnimation._groupStepHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKDynamicAnimation._dynamicStepHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKDynamicAnimation._lastTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKDynamicAnimation._resuming
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKMapSnapshotCreator._completion
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKMapSnapshotCreator._didBecomeFullyDrawn
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKMapSnapshotCreator._edgeInsets
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKMapSnapshotCreator._globeCanvas
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKMapSnapshotCreator._hasFailedTiles
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKMapSnapshotCreator._mapCanvas
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKMapSnapshotCreator._mapType
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKMapSnapshotCreator._pointsOfInterestFilter
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKOverlay._canProvideVectorGeometry
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKOverlay._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKOverlay._level
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKOverlay._replaceMapContentInRect
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKOverlay.identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKPlatform._isMac
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKPlatform._memSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKPlatform._numCPUs
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTimedAnimation._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTimedAnimation._lastTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTimedAnimation._resuming
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTimedAnimation._startTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTimedAnimation._startTimestampSet
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTimedAnimation._stepHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTimedAnimation._timingFunction
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTrafficFeature._groupIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTrafficFeature._groupItemHorizontalDisplayOrder
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTrafficFeature._groupItemVerticalDisplayOrder
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTrafficFeature._maxZoom
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTrafficFeature._minZoom
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTrafficFeature._routeOffsetInMeters
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKTrafficFeature._worldPoint
|| __DATA.__objc_ivar _OBJC_IVAR_$_VKVectorOverlayData._delegate
|| __DATA_CONST.__const _VKDisablePerformanceHUD
|| __DATA_CONST.__const _VKEnablePerformanceHUD
|| __DATA_CONST.__const _VKExpandedPerformanceHUD
|| __DATA_CONST.__const _VKMapViewDidBecomeFullyDrawnNotification
|| __DATA_CONST.__const _VKMinimalPerformanceHUD
|| __DATA_CONST.__const _VKPounceDidEndNotification
|| __DATA_CONST.__const _VKPounceWillStartNotification
|| __DATA_CONST.__const _VKShouldFlushTileCachesNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VKCameraRegionRestriction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VKCustomFeature
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VKDebugSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VKMapSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VKMapSnapshotCreator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VKMapView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VKNavigationPuck
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VKPlatform
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VKResourceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VKSceneConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VKTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VKCameraRegionRestriction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VKCustomFeature
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VKDebugSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VKImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VKMapSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VKMapSnapshotCreator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VKMapView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VKNavigationPuck
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VKPlatform
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VKResourceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VKSceneConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VKTimer
|| __TEXT.__const _VKAnnotationTrackingBehaviorDefault
|| __TEXT.__const _VKMapDisplayStyleDay
|| __TEXT.__const _VKMapDisplayStyleNight
|| __TEXT.__const _VKMapDisplayStyleRoute
|| __TEXT.__const _VKMapDisplayStyleTransit
|| __TEXT.__const _VKMapDisplayStyleTransitRoute
|| __TEXT.__text _GEOMapRectEnclosingCameraProperties
|| __TEXT.__text _GEOPDCameraPathFrameFromVKCameraFrame
|| __TEXT.__text _VKAnimationCurveForCAMediaTimingFunction
|| __TEXT.__text _VKAnimationCurveSpring
|| __TEXT.__text _VKCameraFrameFromGEOPDCameraPathFrame
|| __TEXT.__text _VKCameraPropertiesForRect
|| __TEXT.__text _VKLineDrawWithOuterStroke
|| __TEXT.__text _VKLocationCoordinate2DForVKPoint
|| __TEXT.__text _VKLocationCoordinate2DIsValid
|| __TEXT.__text _VKLocationCoordinate2DMake
|| __TEXT.__text _VKLocationCoordinate3DMake
|| __TEXT.__text _VKLockScreenLog
|| __TEXT.__text _VKPointForVKLocationCoordinate2D
|| __TEXT.__text _VKRectContainsPoint
|| __TEXT.__text _VKShieldColorsFromHexString
|| __TEXT.__text _VKSizeGroupToString
|| __TEXT.__text _VKStringForAnnotationTrackingBehavior
|| __TEXT.__text _VKTrafficIncidentSetSubtitleBlock
|| __TEXT.__text _VKTrafficIncidentSetTitleBlock
|| __TEXT.__text _VKWorldBoundsFromGEOTileKey
|| __TEXT.__text _VectorKitConfig_GetConfigStoreStringKeysForWatchSync
|| __TEXT.__text _VectorKitConfig_GetUserDefaultStringKeysForWatchSync
|| __TEXT.__text _dynamicValueAnimation
|| __TEXT.__text _dynamicValueAnimationDuration
|| __TEXT.__text _dynamicValueAnimationTimingFunction
|| __TEXT.__text _dynamicValueAnimationVelocity
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFAttributedStringCreate
__ CoreFoundation: _CFAttributedStringCreateMutable
__ CoreFoundation: _CFAttributedStringCreateMutableCopy
__ CoreFoundation: _CFAttributedStringGetLength
__ CoreFoundation: _CFAttributedStringGetString
__ CoreFoundation: _CFAttributedStringReplaceString
__ CoreFoundation: _CFAttributedStringSetAttribute
__ CoreFoundation: _CFAttributedStringSetAttributes
__ CoreFoundation: _CFCharacterSetGetPredefined
__ CoreFoundation: _CFCopyDescription
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFHash
__ CoreFoundation: _CFLocaleCreate
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetRemoveValue
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringFindCharacterFromSet
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetRangeOfComposedCharactersAtIndex
__ CoreFoundation: _CFStringLowercase
__ CoreFoundation: _CFStringUppercase
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCurrencyCode
__ CoreFoundation: _NSLocaleIdentifier
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCMessage
__ CoreFoundation: __CFXPCCreateXPCMessageWithCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetBytesPerRow
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGBitmapContextGetHeight
__ CoreGraphics: _CGBitmapContextGetWidth
__ CoreGraphics: _CGBitmapGetAlignedBytesPerRow
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorCreateCopyByMatchingToColorSpace
__ CoreGraphics: _CGColorEqualToColor
__ CoreGraphics: _CGColorGetAlpha
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorRetain
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceGetBaseColorSpace
__ CoreGraphics: _CGColorSpaceGetColorTable
__ CoreGraphics: _CGColorSpaceGetColorTableCount
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceGetName
__ CoreGraphics: _CGColorSpaceGetNumberOfComponents
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGColorSpaceRetain
__ CoreGraphics: _CGContextAddArc
__ CoreGraphics: _CGContextAddArcToPoint
__ CoreGraphics: _CGContextAddEllipseInRect
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextBeginTransparencyLayer
__ CoreGraphics: _CGContextClear
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextClipToMask
__ CoreGraphics: _CGContextClosePath
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextDrawRadialGradient
__ CoreGraphics: _CGContextEOClip
__ CoreGraphics: _CGContextEOFillPath
__ CoreGraphics: _CGContextEndTransparencyLayer
__ CoreGraphics: _CGContextFillEllipseInRect
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextGetBaseCTM
__ CoreGraphics: _CGContextGetPathBoundingBox
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextReplacePathWithStrokedPath
__ CoreGraphics: _CGContextResetClip
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextRetain
__ CoreGraphics: _CGContextRotateCTM
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetAllowsAntialiasing
__ CoreGraphics: _CGContextSetAlpha
__ CoreGraphics: _CGContextSetBaseCTM
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetFont
__ CoreGraphics: _CGContextSetFontSize
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetRGBFillColor
__ CoreGraphics: _CGContextSetRGBStrokeColor
__ CoreGraphics: _CGContextSetShadowWithColor
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextSetTextDrawingMode
__ CoreGraphics: _CGContextSetTextPosition
__ CoreGraphics: _CGContextShowGlyphsAtPositions
__ CoreGraphics: _CGContextStrokeEllipseInRect
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGContextStrokeRect
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCopyData
__ CoreGraphics: _CGDataProviderCreateDirect
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGFontCacheGetLocalCache
__ CoreGraphics: _CGFontCacheReset
__ CoreGraphics: _CGFontCopyFullName
__ CoreGraphics: _CGFontCopyGlyphNameForGlyph
__ CoreGraphics: _CGFontCreateWithDataProvider
__ CoreGraphics: _CGFontDBGetLocal
__ CoreGraphics: _CGFontDBPurgeAllFonts
__ CoreGraphics: _CGFontGetAscent
__ CoreGraphics: _CGFontGetGlyphBBoxes
__ CoreGraphics: _CGFontGetGlyphsForUnichars
__ CoreGraphics: _CGFontGetUnitsPerEm
__ CoreGraphics: _CGFontGetXHeight
__ CoreGraphics: _CGFontRelease
__ CoreGraphics: _CGFontRetain
__ CoreGraphics: _CGGradientCreateWithColorComponents
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGImageBlockGetBytesPerRow
__ CoreGraphics: _CGImageBlockGetData
__ CoreGraphics: _CGImageBlockSetGetCount
__ CoreGraphics: _CGImageBlockSetGetImageBlock
__ CoreGraphics: _CGImageBlockSetGetPixelSize
__ CoreGraphics: _CGImageBlockSetRelease
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageCreateWithPNGDataProvider
__ CoreGraphics: _CGImageGetAlphaInfo
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetBytesPerRow
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetImageProvider
__ CoreGraphics: _CGImageGetProperty
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageProviderCopyImageBlockSetWithOptions
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGImageSetProperty
__ CoreGraphics: _CGPathAddArc
__ CoreGraphics: _CGPathAddCurveToPoint
__ CoreGraphics: _CGPathAddEllipseInRect
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddPath
__ CoreGraphics: _CGPathAddQuadCurveToPoint
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateMutableCopyByTransformingPath
__ CoreGraphics: _CGPathGetBoundingBox
__ CoreGraphics: _CGPathGetCurrentPoint
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceDCIP3
__ CoreGraphics: _kCGColorSpaceDisplayP3
__ CoreGraphics: _kCGColorSpaceGenericGrayGamma2_2
__ CoreGraphics: _kCGColorSpaceGenericRGB
__ CoreGraphics: _kCGColorSpaceLinearSRGB
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreGraphics: _kCGImageBlockSingletonRequest
__ CoreGraphics: _kCGImagePropertyIOSurface
__ CoreText: _CTFontCopyCharacterSet
__ CoreText: _CTFontCopyFeaturesInternal
__ CoreText: _CTFontCopyFontDescriptor
__ CoreText: _CTFontCopyGraphicsFont
__ CoreText: _CTFontCreateCopyWithAttributes
__ CoreText: _CTFontCreateWithFontDescriptor
__ CoreText: _CTFontCreateWithGraphicsFont
__ CoreText: _CTFontDescriptorCreateCopyWithAttributes
__ CoreText: _CTFontDescriptorCreateCopyWithFeature
__ CoreText: _CTFontDescriptorCreateCopyWithVariation
__ CoreText: _CTFontDescriptorCreateWithAttributes
__ CoreText: _CTFontDescriptorCreateWithNameAndSize
__ CoreText: _CTFontDrawGlyphs
__ CoreText: _CTFontGetAdvancesForGlyphs
__ CoreText: _CTFontGetOpticalBoundsForGlyphs
__ CoreText: _CTFontGetSize
__ CoreText: _CTFontGetSymbolicTraits
__ CoreText: _CTFontRemoveFromCaches
__ CoreText: _CTFontTransformGlyphs
__ CoreText: _CTFrameDraw
__ CoreText: _CTFrameGetLineOrigins
__ CoreText: _CTFrameGetLines
__ CoreText: _CTFramesetterCreateFrame
__ CoreText: _CTFramesetterCreateWithAttributedString
__ CoreText: _CTFramesetterSuggestFrameSizeWithConstraints
__ CoreText: _CTLineCreateWithAttributedString
__ CoreText: _CTLineDraw
__ CoreText: _CTLineGetBoundsWithOptions
__ CoreText: _CTLineGetGlyphCount
__ CoreText: _CTLineGetGlyphRuns
__ CoreText: _CTLineGetImageBounds
__ CoreText: _CTLineGetStringIndexForPosition
__ CoreText: _CTLineGetStringRange
__ CoreText: _CTLineGetTypographicBounds
__ CoreText: _CTRunGetAttributes
__ CoreText: _CTRunGetGlyphCount
__ CoreText: _CTRunGetGlyphs
__ CoreText: _CTRunGetGlyphsPtr
__ CoreText: _CTRunGetPositions
__ CoreText: _CTRunGetPositionsPtr
__ CoreText: _CTRunGetStatus
__ CoreText: _CTRunGetStringIndices
__ CoreText: _kCTFontAttributeName
__ CoreText: _kCTFontFeatureSelectorIdentifierKey
__ CoreText: _kCTFontFeatureTypeIdentifierKey
__ CoreText: _kCTFontFeatureTypeSelectorsKey
__ CoreText: _kCTFontSymbolicTrait
__ CoreText: _kCTFontTraitsAttribute
__ CoreText: _kCTFontUIFontDesignCompact
__ CoreText: _kCTFontUIFontDesignCompactRounded
__ CoreText: _kCTFontUIFontDesignDefault
__ CoreText: _kCTFontUIFontDesignRounded
__ CoreText: _kCTFontUIFontDesignTrait
__ CoreText: _kCTFontWeightBlack
__ CoreText: _kCTFontWeightBold
__ CoreText: _kCTFontWeightHeavy
__ CoreText: _kCTFontWeightLight
__ CoreText: _kCTFontWeightMedium
__ CoreText: _kCTFontWeightRegular
__ CoreText: _kCTFontWeightSemibold
__ CoreText: _kCTFontWeightThin
__ CoreText: _kCTFontWeightTrait
__ CoreText: _kCTFontWeightUltraLight
__ CoreText: _kCTForegroundColorAttributeName
__ CoreText: _kCTStrokeColorAttributeName
__ CoreText: _kCTStrokeWidthAttributeName
__ CoreText: _kCTTrackingAttributeName
__ CoreVideo: _CVPixelBufferGetBaseAddress
__ CoreVideo: _CVPixelBufferGetBytesPerRow
__ CoreVideo: _CVPixelBufferGetHeight
__ CoreVideo: _CVPixelBufferGetIOSurface
__ CoreVideo: _CVPixelBufferGetPixelFormatType
__ CoreVideo: _CVPixelBufferGetWidth
__ CoreVideo: _CVPixelBufferLockBaseAddress
__ CoreVideo: _CVPixelBufferRelease
__ CoreVideo: _CVPixelBufferRetain
__ CoreVideo: _CVPixelBufferUnlockBaseAddress
__ CoreVideo: _kCVPixelBufferHeightKey
__ CoreVideo: _kCVPixelBufferIOSurfacePropertiesKey
__ CoreVideo: _kCVPixelBufferOpenGLESCompatibilityKey
__ CoreVideo: _kCVPixelBufferPixelFormatTypeKey
__ CoreVideo: _kCVPixelBufferWidthKey
__ Foundation: _NSLog
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_METACLASS_$_NSString
__ GeoServices: _GEO3DBuildingFeatureAtIndex
__ GeoServices: _GEOBearingFromCoordinateToCoordinate
__ GeoServices: _GEOBuildingFootprintBaseHeight
__ GeoServices: _GEOBuildingFootprintExtrusionHeight
__ GeoServices: _GEOBuildingFootprintFeatureAtIndex
__ GeoServices: _GEOCachesDirectory
__ GeoServices: _GEOCalculateDistance
__ GeoServices: _GEOCalculateDistanceHighPrecision
__ GeoServices: _GEOChapterTypeAsString
__ GeoServices: _GEOConfigGetArray
__ GeoServices: _GEOConfigGetBOOL
__ GeoServices: _GEOConfigGetDouble
__ GeoServices: _GEOConfigGetInteger
__ GeoServices: _GEOConfigGetUInteger
__ GeoServices: _GEOCoordinate2DForMapPoint
__ GeoServices: _GEOErrorDomain
__ GeoServices: _GEOFeatureGetLocalizedLabel
__ GeoServices: _GEOFeatureGetLocalizedLabelForNativeLabel
__ GeoServices: _GEOFeatureGetNativeLabel
__ GeoServices: _GEOFeatureGetNativeShield
__ GeoServices: _GEOFeatureRelease
__ GeoServices: _GEOFeatureRetain
__ GeoServices: _GEOFeatureStyleAttributesCompare
__ GeoServices: _GEOFeatureStyleAttributesHash
__ GeoServices: _GEOMapPointForCoordinate
__ GeoServices: _GEOMapPointInvalid
__ GeoServices: _GEOMapPointsPerMeterAtLatitude
__ GeoServices: _GEOMapRectForGEOTileKey
__ GeoServices: _GEOMapRectForMapRegion
__ GeoServices: _GEOMapRectInset
__ GeoServices: _GEOMapRectIntersectsRect
__ GeoServices: _GEOMapRectIsNull
__ GeoServices: _GEOMapRectMakeWithRadialDistance
__ GeoServices: _GEOMapRectNull
__ GeoServices: _GEOMapRectWorld
__ GeoServices: _GEOMapSizeWorld
__ GeoServices: _GEOMetersBetweenMapPoints
__ GeoServices: _GEOMetersPerDegreeAtLatitude
__ GeoServices: _GEOMultiSectionFeatureCharacteristicPoints
__ GeoServices: _GEOMultiSectionFeatureElevations
__ GeoServices: _GEOMultiSectionFeatureGetGhostPoint
__ GeoServices: _GEOMultiSectionFeaturePoints
__ GeoServices: _GEOMultiSectionFeaturePrecision
__ GeoServices: _GEOMuninFrustumFromLensModel
__ GeoServices: _GEOMuninMeshTileKeyMake
__ GeoServices: _GEOMuninMetadataTileCreate
__ GeoServices: _GEOMuninMetadataTileDestroy
__ GeoServices: _GEOPBTransitStationTransferGetPoints
__ GeoServices: _GEOPolygonFeatureGetCharacteristicPoints
__ GeoServices: _GEOPolygonFeatureGetCharacteristicPointsForSection
__ GeoServices: _GEOPolygonFeatureGetStrokeSpecifications
__ GeoServices: _GEOPolygonSelectionTileKeyMake
__ GeoServices: _GEOPolylineCoordinateInvalid
__ GeoServices: _GEOReachabilityChangedNotification
__ GeoServices: _GEORegionalResourceTileKeyMake
__ GeoServices: _GEORegionalResourcesAttributionTileType
__ GeoServices: _GEORegionalResourcesSetTileType
__ GeoServices: _GEOResourceDevResourcesPath
__ GeoServices: _GEOResourceFilterScaleForScale
__ GeoServices: _GEORoadFeatureCompareRoadNames
__ GeoServices: _GEORoadFeatureCompareShields
__ GeoServices: _GEORoadFeatureCrossings
__ GeoServices: _GEORoadFeatureMapOriginalToEvaluatedIndex
__ GeoServices: _GEOTileGetLocalizedLabel
__ GeoServices: _GEOTileGetNativeLabel
__ GeoServices: _GEOTileKeyAssertIsStandard
__ GeoServices: _GEOTileKeyEquals
__ GeoServices: _GEOTileKeyHash
__ GeoServices: _GEOTileKeyMake
__ GeoServices: _GEOTileKeyMakeEmpty
__ GeoServices: _GEOTileLoadResultOriginalLoadReason
__ GeoServices: _GEOTileLoadResultSourceKey
__ GeoServices: _GEOTileLoaderClientIdentifier
__ GeoServices: _GEOTransitLineGetSubtitleNativeLabel
__ GeoServices: _GEOTransitLineSelectionAdditionalInfoMake
__ GeoServices: _GEOTransitLineSelectionTileKeyMake
__ GeoServices: _GEOTransitLinkExtractLineInfo
__ GeoServices: _GEOTransitLinkFirstPoint
__ GeoServices: _GEOTransitLinkGetFromNodeID
__ GeoServices: _GEOTransitLinkGetLineCount
__ GeoServices: _GEOTransitLinkGetLineDirection
__ GeoServices: _GEOTransitLinkGetShouldDrawFromEndPoint
__ GeoServices: _GEOTransitLinkGetShouldDrawToEndPoint
__ GeoServices: _GEOTransitLinkGetToNodeID
__ GeoServices: _GEOTransitLinkPoints
__ GeoServices: _GEOTransitLinkRelease
__ GeoServices: _GEOTransitLinkRetain
__ GeoServices: _GEOTransitNodeFeatureGetLocalizedParentheticalLabels
__ GeoServices: _GEOTransitNodeFeatureGetNativeParentheticalLabels
__ GeoServices: _GEOTransitNodeFeatureGetStyleAttributes
__ GeoServices: _GEOTransitNodeFeatureGetSystem
__ GeoServices: _GEOTransitNodeFeatureRelease
__ GeoServices: _GEOTransitNodeFeatureRetain
__ GeoServices: _GEOTransitSystemInfoGetLocalizedLabel
__ GeoServices: _GEOTransitSystemInfoGetNativeLabel
__ GeoServices: _GEOVectorTileGetLocalizedLabelForNativeLabel
__ GeoServices: _GEOVectorTransitLineAlongLink
__ GeoServices: _GEOVectorTransitLineForTransitNodeSubtitleIndex
__ GeoServices: _OBJC_CLASS_$_GEOAlmanac
__ GeoServices: _OBJC_CLASS_$_GEOAltitudeManifest
__ GeoServices: _OBJC_CLASS_$_GEOAnalyticsPipelinePortal
__ GeoServices: _OBJC_CLASS_$_GEOComposedRouteSection
__ GeoServices: _OBJC_CLASS_$_GEOComposedRouteTransitTripSection
__ GeoServices: _OBJC_CLASS_$_GEOComposedTransitTripRouteSegment
__ GeoServices: _OBJC_CLASS_$_GEOCountryConfiguration
__ GeoServices: _OBJC_CLASS_$_GEOExperimentConfiguration
__ GeoServices: _OBJC_CLASS_$_GEOFeatureStyleAttributes
__ GeoServices: _OBJC_CLASS_$_GEOHorizontalCelestialBodyData
__ GeoServices: _OBJC_CLASS_$_GEOIdentifiedMapDataRequester
__ GeoServices: _OBJC_CLASS_$_GEOLatLng
__ GeoServices: _OBJC_CLASS_$_GEOMapItemIdentifier
__ GeoServices: _OBJC_CLASS_$_GEOMapRegion
__ GeoServices: _OBJC_CLASS_$_GEOPDFlyover
__ GeoServices: _OBJC_CLASS_$_GEOPlatform
__ GeoServices: _OBJC_CLASS_$_GEORPGroundViewImageResource
__ GeoServices: _OBJC_CLASS_$_GEORPVisibleTileSet
__ GeoServices: _OBJC_CLASS_$_GEOReachability
__ GeoServices: _OBJC_CLASS_$_GEORegionalResourceTileData
__ GeoServices: _OBJC_CLASS_$_GEORegionalResourceTileDecoder
__ GeoServices: _OBJC_CLASS_$_GEOResourceManager
__ GeoServices: _OBJC_CLASS_$_GEOResourceManifestConfiguration
__ GeoServices: _OBJC_CLASS_$_GEOResourceManifestManager
__ GeoServices: _OBJC_CLASS_$_GEORouteMatch
__ GeoServices: _OBJC_CLASS_$_GEOStyleAttributes
__ GeoServices: _OBJC_CLASS_$_GEOTileData
__ GeoServices: _OBJC_CLASS_$_GEOTileLoader
__ GeoServices: _OBJC_CLASS_$_GEOTileLoaderConfiguration
__ GeoServices: _OBJC_CLASS_$_GEOTileRequester
__ GeoServices: _OBJC_CLASS_$_GEOTileServerLocalProxy
__ GeoServices: _OBJC_CLASS_$_GEOVectorTile
__ GeoServices: _OBJC_CLASS_$_GEOVectorTileDecoder
__ GeoServices: _OBJC_CLASS_$_GEOVoltaireSimple3DTileRequester
__ GeoServices: _OBJC_IVAR_$_GEOComposedRouteSection._bounds
__ GeoServices: _OBJC_IVAR_$_GEOComposedRouteSection._overlayBounds
__ GeoServices: _OBJC_IVAR_$_GEOComposedRouteSection._pointCount
__ GeoServices: _OBJC_IVAR_$_GEOComposedRouteSection._points
__ GeoServices: _OBJC_IVAR_$_GEOComposedRouteSection._startPointIndex
__ GeoServices: _OBJC_IVAR_$_GEOComposedRouteTransitTripSection._fromNodeID
__ GeoServices: _OBJC_IVAR_$_GEOComposedRouteTransitTripSection._toNodeID
__ GeoServices: _OBJC_IVAR_$_GEOFeatureStyleAttributes.countAttrs
__ GeoServices: _OBJC_IVAR_$_GEOFeatureStyleAttributes.countExtAttrs
__ GeoServices: _OBJC_IVAR_$_GEOFeatureStyleAttributes.extAttrs
__ GeoServices: _OBJC_IVAR_$_GEOFeatureStyleAttributes.v
__ GeoServices: _OBJC_IVAR_$_GEOVectorTile._attributes
__ GeoServices: _OBJC_IVAR_$_GEOVectorTile._key
__ GeoServices: _OBJC_IVAR_$_GEOVectorTile._overlapThreeDBuildings
__ GeoServices: _OBJC_IVAR_$_GEOVectorTile._overlapThreeDBuildingsCount
__ GeoServices: _OBJC_IVAR_$_GEOVectorTile._threeDBuildings
__ GeoServices: _OBJC_IVAR_$_GEOVectorTile._threeDBuildingsCount
__ GeoServices: _OBJC_IVAR_$_GEOVectorTile._transitNodeLineIndices
__ GeoServices: _OBJC_IVAR_$_GEOVectorTile._transitShieldIndices
__ GeoServices: _OBJC_METACLASS_$_GEOTileRequester
__ GeoServices: __GEOConfigRegisterStateCaptureFunctions
__ GeoServices: __GEOMurmurHash3_128
__ GeoServices: __GEOStateCaptureLog
__ GeoServices: __ZN5zilch13ReadBitstreamC1EPKhm
__ GeoServices: __ZN5zilch18TrafficDynamicTile4FlowC1Ev
__ GeoServices: __ZN5zilch18TrafficDynamicTile6decodeERNS_13ReadBitstreamE
__ GeoServices: __ZN5zilch18TrafficDynamicTileC1Ev
__ GeoServices: __ZN5zilch18TrafficDynamicTileD1Ev
__ GeoServices: __ZN5zilch19TrafficSkeletonTile6decodeERNS_13ReadBitstreamE
__ GeoServices: __ZN5zilch19TrafficSkeletonTileC1Ev
__ GeoServices: __ZNK3geo11MapEdgeRoad11roadFeatureEv
__ GeoServices: __ZNK3geo11MapEdgeRoad8zAtPointEm
__ GeoServices: __ZNK5zilch14GeoCoordinates1xEv
__ GeoServices: __ZNK5zilch14GeoCoordinates1yEv
__ GeoServices: __ZNK5zilch18TrafficDynamicTile13incidentCountEv
__ GeoServices: __ZNK5zilch18TrafficDynamicTile21feedUpdateTimeSecondsEv
__ GeoServices: __ZNK5zilch18TrafficDynamicTile4flowEm
__ GeoServices: __ZNK5zilch18TrafficDynamicTile8incidentEm
__ GeoServices: __ZNK5zilch18TrafficDynamicTile9flowCountEv
__ GeoServices: __ZNK5zilch19TrafficSkeletonTile4sizeEv
__ GeoServices: __ZNK5zilch19TrafficSkeletonTileixEm
__ GeoServices: __ZNK5zilch8Latitude9toDegreesEv
__ GeoServices: __ZNK5zilch9Longitude9toDegreesEv
__ IOSurface: _IOSurfaceAcceleratorCreate
__ IOSurface: _IOSurfaceAcceleratorGetRunLoopSource
__ IOSurface: _IOSurfaceAcceleratorSetCustomFilter
__ IOSurface: _IOSurfaceAcceleratorTransformSurface
__ IOSurface: _IOSurfaceCreate
__ IOSurface: _IOSurfaceDecrementUseCount
__ IOSurface: _IOSurfaceGetAllocSize
__ IOSurface: _IOSurfaceGetBaseAddress
__ IOSurface: _IOSurfaceGetBytesPerElement
__ IOSurface: _IOSurfaceGetBytesPerRow
__ IOSurface: _IOSurfaceGetHeight
__ IOSurface: _IOSurfaceGetWidth
__ IOSurface: _IOSurfaceIncrementUseCount
__ IOSurface: _IOSurfaceLock
__ IOSurface: _IOSurfaceSetOwnership
__ IOSurface: _IOSurfaceUnlock
__ IOSurface: _OBJC_CLASS_$_IOSurface
__ IOSurface: _kIOSurfaceAcceleratorDitherControl
__ IOSurface: _kIOSurfaceAcceleratorForceMaxSpeedKey
__ IOSurface: _kIOSurfaceAcceleratorLockInScaler
__ IOSurface: _kIOSurfaceAcceleratorSkipAsyncCallback
__ IOSurface: _kIOSurfaceAcceleratorUseCustomFilter
__ IOSurface: _kIOSurfaceAcceleratorUseNearestFilter
__ IOSurface: _kIOSurfaceAllocSize
__ IOSurface: _kIOSurfaceBytesPerElement
__ IOSurface: _kIOSurfaceBytesPerRow
__ IOSurface: _kIOSurfaceCacheMode
__ IOSurface: _kIOSurfaceHeight
__ IOSurface: _kIOSurfaceNonPurgeable
__ IOSurface: _kIOSurfacePixelFormat
__ IOSurface: _kIOSurfaceWidth
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithDataProvider
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _CGImageSourceGetStatus
__ ImageIO: _kCGImageSourceShouldCache
__ ImageIO: _kCGImageSourceSkipMetadata
__ ImageIO: _kCGImageSourceTypeIdentifierHint
__ MediaToolbox: _FigPhotoDecompressionContainerCancelAsyncRequest
__ MediaToolbox: _FigPhotoDecompressionContainerCreateImageForIndex
__ MediaToolbox: _FigPhotoDecompressionContainerDecodeImageForIndexAsync
__ MediaToolbox: _FigPhotoDecompressionContainerGetImageCount
__ MediaToolbox: _FigPhotoDecompressionDetectContainerFormat
__ MediaToolbox: _FigPhotoDecompressionDiscardCaches
__ MediaToolbox: _FigPhotoDecompressionSessionCreate
__ MediaToolbox: _FigPhotoDecompressionSessionCreateContainer
__ MediaToolbox: _FigPhotoDecompressionSessionDiscardCachedBuffers
__ MediaToolbox: _FigPhotoDecompressionSessionReleaseHardwareResources
__ MediaToolbox: _FigPhotoSurfacePoolCreate
__ MediaToolbox: _kFigPhotoDecompressionOption_ForceHighSpeed
__ MediaToolbox: _kFigPhotoDecompressionOption_HighPriority
__ MediaToolbox: _kFigPhotoDecompressionOption_OutputPixelFormat
__ MediaToolbox: _kFigPhotoDecompressionSessionOption_SurfacePool
__ Metal: _MTLCreateSystemDefaultDevice
__ Metal: _OBJC_CLASS_$_MTLCaptureManager
__ Metal: _OBJC_CLASS_$_MTLCompileOptions
__ Metal: _OBJC_CLASS_$_MTLDepthStencilDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPassDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPipelineDescriptor
__ Metal: _OBJC_CLASS_$_MTLSamplerDescriptor
__ Metal: _OBJC_CLASS_$_MTLStencilDescriptor
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ Metal: _OBJC_CLASS_$_MTLVertexDescriptor
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterPlaceMark
__ ProtocolBuffer: _PBDataWriterRecallMark
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteFixed32Field
__ ProtocolBuffer: _PBDataWriterWriteFloatField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBHashBytes
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedFloatAdd
__ ProtocolBuffer: _PBRepeatedFloatClear
__ ProtocolBuffer: _PBRepeatedFloatCopy
__ ProtocolBuffer: _PBRepeatedFloatHash
__ ProtocolBuffer: _PBRepeatedFloatIsEqual
__ ProtocolBuffer: _PBRepeatedFloatNSArray
__ ProtocolBuffer: _PBRepeatedFloatSet
__ ProtocolBuffer: _PBRepeatedInt32Add
__ ProtocolBuffer: _PBRepeatedInt32Clear
__ ProtocolBuffer: _PBRepeatedInt32Copy
__ ProtocolBuffer: _PBRepeatedInt32Hash
__ ProtocolBuffer: _PBRepeatedInt32IsEqual
__ ProtocolBuffer: _PBRepeatedInt32NSArray
__ ProtocolBuffer: _PBRepeatedInt32Set
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _OBJC_CLASS_$_CADisplay
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAMetalLayer
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _OBJC_METACLASS_$_CAMetalLayer
__ QuartzCore: _kCAGravityCenter
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ libAccessibility.dylib: __AXSReduceMotionEnabled
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___cxa_atexit
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___isfinitef
__ libSystem.B.dylib: ___isinfd
__ libSystem.B.dylib: ___isinff
__ libSystem.B.dylib: ___isnand
__ libSystem.B.dylib: ___isnanf
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___powidf2
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___tolower
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _abort_with_reason
__ libSystem.B.dylib: _acos
__ libSystem.B.dylib: _acosf
__ libSystem.B.dylib: _asin
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _atan2f
__ libSystem.B.dylib: _atanf
__ libSystem.B.dylib: _atof
__ libSystem.B.dylib: _atoi
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _cbrt
__ libSystem.B.dylib: _cbrtf
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _cosf
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_apply
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_and_wait
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_data_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_initially_inactive
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_qos_class_floor
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_workloop_create_inactive
__ libSystem.B.dylib: _dispatch_workloop_set_qos_class_floor
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _exp2f
__ libSystem.B.dylib: _expf
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fmodf
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fseeko
__ libSystem.B.dylib: _ftello
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _hypotf
__ libSystem.B.dylib: _ldexp
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _log2
__ libSystem.B.dylib: _log2f
__ libSystem.B.dylib: _logf
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_create_zone
__ libSystem.B.dylib: _malloc_destroy_zone
__ libSystem.B.dylib: _malloc_set_zone_name
__ libSystem.B.dylib: _malloc_zone_calloc
__ libSystem.B.dylib: _malloc_zone_free
__ libSystem.B.dylib: _malloc_zone_malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _modff
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_release
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_state_remove_handler
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_ui
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _pthread_attr_destroy
__ libSystem.B.dylib: _pthread_attr_init
__ libSystem.B.dylib: _pthread_cond_broadcast
__ libSystem.B.dylib: _pthread_cond_destroy
__ libSystem.B.dylib: _pthread_cond_init
__ libSystem.B.dylib: _pthread_cond_signal
__ libSystem.B.dylib: _pthread_cond_timedwait_relative_np
__ libSystem.B.dylib: _pthread_cond_wait
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_exit
__ libSystem.B.dylib: _pthread_join
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_trylock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_destroy
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _pthread_rwlock_destroy
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _pthread_rwlock_rdlock
__ libSystem.B.dylib: _pthread_rwlock_unlock
__ libSystem.B.dylib: _pthread_rwlock_wrlock
__ libSystem.B.dylib: _pthread_set_fixedpriority_self
__ libSystem.B.dylib: _pthread_set_qos_class_self_np
__ libSystem.B.dylib: _pthread_setname_np
__ libSystem.B.dylib: _putchar
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _sinf
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _sprintf
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _strcasecmp
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _tan
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _vsnprintf
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_copy_description
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_release
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IDsE10do_unshiftER11__mbstate_tPcS4_RS4_
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IDsE11do_encodingEv
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IDsE13do_max_lengthEv
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IDsE16do_always_noconvEv
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IDsE5do_inER11__mbstate_tPKcS5_RS5_PDsS7_RS7_
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IDsE6do_outER11__mbstate_tPKDsS5_RS5_PcS7_RS7_
__ libc++.1.dylib: __ZNKSt3__120__codecvt_utf8_utf16IDsE9do_lengthER11__mbstate_tPKcS5_m
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9has_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt3__111__call_onceERVmPvPFvS2_E
__ libc++.1.dylib: __ZNSt3__112__get_sp_mutEPKv
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5eraseEmm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE3getEv
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE4peekEv
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE4readEPcl
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE5seekgENS_4fposI11__mbstate_tEE
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE5tellgEv
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC1ERS3_b
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERd
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERf
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERj
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERy
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEb
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEx
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__117__assoc_sub_state4waitEv
__ libc++.1.dylib: __ZNSt3__118condition_variable10notify_allEv
__ libc++.1.dylib: __ZNSt3__118condition_variable10notify_oneEv
__ libc++.1.dylib: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
__ libc++.1.dylib: __ZNSt3__118condition_variableD1Ev
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count4lockEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__120__throw_system_errorEiPKc
__ libc++.1.dylib: __ZNSt3__14cerrE
__ libc++.1.dylib: __ZNSt3__14coutE
__ libc++.1.dylib: __ZNSt3__14stofERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPm
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__15mutex4lockEv
__ libc++.1.dylib: __ZNSt3__15mutex6unlockEv
__ libc++.1.dylib: __ZNSt3__15mutex8try_lockEv
__ libc++.1.dylib: __ZNSt3__15mutexD1Ev
__ libc++.1.dylib: __ZNSt3__16__sortIRNS_6__lessIhhEEPhEEvT0_S5_T_
__ libc++.1.dylib: __ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_
__ libc++.1.dylib: __ZNSt3__16__sortIRNS_6__lessImmEEPmEEvT0_S5_T_
__ libc++.1.dylib: __ZNSt3__16chrono12steady_clock3nowEv
__ libc++.1.dylib: __ZNSt3__16futureIvED1Ev
__ libc++.1.dylib: __ZNSt3__16locale5facet16__on_zero_sharedEv
__ libc++.1.dylib: __ZNSt3__16localeC1ERKS0_
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__17codecvtIDsc11__mbstate_tED2Ev
__ libc++.1.dylib: __ZNSt3__17codecvtIcc11__mbstate_tE2idE
__ libc++.1.dylib: __ZNSt3__17promiseIvE10get_futureEv
__ libc++.1.dylib: __ZNSt3__17promiseIvE9set_valueEv
__ libc++.1.dylib: __ZNSt3__17promiseIvEC1Ev
__ libc++.1.dylib: __ZNSt3__17promiseIvED1Ev
__ libc++.1.dylib: __ZNSt3__18__sp_mut4lockEv
__ libc++.1.dylib: __ZNSt3__18__sp_mut6unlockEv
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__19to_stringEd
__ libc++.1.dylib: __ZNSt3__19to_stringEf
__ libc++.1.dylib: __ZNSt3__19to_stringEi
__ libc++.1.dylib: __ZNSt3__19to_stringEj
__ libc++.1.dylib: __ZNSt3__19to_stringEm
__ libc++.1.dylib: __ZNSt3__19to_stringEx
__ libc++.1.dylib: __ZNSt3__19to_stringEy
__ libc++.1.dylib: __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_
__ libc++.1.dylib: __ZSt7nothrow
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__119__shared_weak_countE
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv119__pointer_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__function_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVNSt3__114__shared_countE
__ libc++.1.dylib: __ZTVNSt3__119__shared_weak_countE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: __ZnwmRKSt9nothrow_t
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_bad_cast
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___dynamic_cast
__ libc++.1.dylib: ___gxx_personality_v0
__ libcompression.dylib: _compression_decode_buffer
__ liblzma.5.dylib: _lzma_auto_decoder
__ liblzma.5.dylib: _lzma_code
__ liblzma.5.dylib: _lzma_end
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_copyCppObjectAtomic
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libxml2.2.dylib: _xmlDocGetRootElement
__ libxml2.2.dylib: _xmlFreeDoc
__ libxml2.2.dylib: _xmlGetProp
__ libxml2.2.dylib: _xmlParseMemory
__ libxml2.2.dylib: _xmlStrncmp
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit_
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
__ libz.1.dylib: _inflateInit_
__ libz.1.dylib: _uncompress
__ vImage: _vImageBuffer_InitWithCGImage
__ vImage: _vImageConvolve_Planar8
_AnimationManagerRunner : NSObject <VKAnimationRunner>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AnimationManagerRunner animationDidResume:]
  -[_AnimationManagerRunner initWithAnimationManager:]
  -[_AnimationManagerRunner animationDidStop:]


VKSharedResources : NSObject <GEOResourceManifestTileGroupObserver>
 @property  VKInternalIconManager *iconManager
 @property  {shared_ptr<md::TextureManager>=^{TextureManager}^{__shared_weak_count}} textureManager
 @property  VKResourceManager *resourceManager
 @property  {shared_ptr<md::StylesheetVendor>=^{StylesheetVendor}^{__shared_weak_count}} stylesheetVendor
 @property  ^{Device=i{shared_ptr<ggl::Device>=^{Device}^{__shared_weak_count}}{unique_ptr<md::SharedDeviceResources device
 @property  ^{Device=^^?{DeviceVersion=II}{DeviceCapabilities=BBBBBIII{DeviceSize=III}}{DeviceAPIProperties=iidB}ii} gglDevice
 @property  {shared_ptr<md::StandardCommandBufferSelector>=^{StandardCommandBufferSelector}^{__shared_weak_count}} standardCommandBufferSelector
 @property  {shared_ptr<md::RealisticCommandBufferSelector>=^{RealisticCommandBufferSelector}^{__shared_weak_count}} realisticCommandBufferSelector
 @property  ^{AlphaAtlas=BIIIf{unique_ptr<ggl::Texture2D alphaAtlas
 @property  ^{IsoAlphaAtlas=IIf{unique_ptr<ggl::Texture2D highInflationAlphaAtlas
 @property  ^{IsoAlphaAtlas=IIf{unique_ptr<ggl::Texture2D isoAlphaAtlas
 @property  ^{DistanceAtlas=III{unique_ptr<ggl::Texture2D distanceAtlas
 @property  r^{StandardLibrary=^^?^{ResourceManager}^{RenderResource}^{ShaderLibraryDescriptor}{vector<ggl::ShaderLibrary::FunctionEntry shaderLibrary
 @property  ^{IconManager=^^?{shared_ptr<grl::ResourceProvider>=^{ResourceProvider}^{__shared_weak_count}}{read_write_lock={_opaque_pthread_rwlock_t=q[192c]}}B^{PackInfo}{read_write_lock={_opaque_pthread_rwlock_t=q[192c]}}{map<std::__1::pair<std::__1::basic_string<char> grlIconManager
 @property  {shared_ptr<grl::FontManager>=^{FontManager}^{__shared_weak_count}} grlFontManager
 @property  ^{FigPhotoDecompressionSession=} defaultDecompressionSession
 @property  BOOL snapshotterIsInService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKSharedResources iconManager]
  -[VKSharedResources resourceManifestManagerWillChangeActiveTileGroup:]
  -[VKSharedResources resourceManifestManagerDidChangeActiveTileGroup:]
  -[VKSharedResources _hasResourceUsers]
  -[VKSharedResources standardCommandBufferSelector]
  -[VKSharedResources device]
  -[VKSharedResources gglDevice]
  -[VKSharedResources .cxx_construct]
  -[VKSharedResources grlFontManager]
  -[VKSharedResources dealloc]
  -[VKSharedResources _addResourceUser]
  -[VKSharedResources .cxx_destruct]
  -[VKSharedResources _initWithDevice:standardLibrary:]
  -[VKSharedResources alphaAtlas]
  -[VKSharedResources resourceManager]
  -[VKSharedResources realisticCommandBufferSelector]
  -[VKSharedResources distanceAtlas]
  -[VKSharedResources dataOverrideManager]
  -[VKSharedResources shaderLibrary]
  -[VKSharedResources defaultDecompressionSession]
  -[VKSharedResources _removeResourceUser]
  -[VKSharedResources purgeDecompressSessionCachedBuffers]
  -[VKSharedResources setSnapshotterIsInService:]
  -[VKSharedResources purge]
  -[VKSharedResources highInflationAlphaAtlas]
  -[VKSharedResources textureManager]
  -[VKSharedResources startDecompressionSession]
  -[VKSharedResources grlIconManager]
  -[VKSharedResources isoAlphaAtlas]
  -[VKSharedResources stylesheetVendor]
  -[VKSharedResources snapshotterIsInService]


VKSharedResourcesManager : NSObject
  // class methods
  +[VKSharedResourcesManager sharedResources]
  +[VKSharedResourcesManager sharedManager]
  +[VKSharedResourcesManager addResourceUser]
  +[VKSharedResourcesManager removeResourceUser]

  // instance methods
  -[VKSharedResourcesManager init]
  -[VKSharedResourcesManager resources]
  -[VKSharedResourcesManager .cxx_construct]
  -[VKSharedResourcesManager dealloc]
  -[VKSharedResourcesManager .cxx_destruct]
  -[VKSharedResourcesManager hasResoruces]


VKSceneConfiguration : NSObject
  // instance methods
  -[VKSceneConfiguration sceneManager]
  -[VKSceneConfiguration navigationState]
  -[VKSceneConfiguration styleManager]
  -[VKSceneConfiguration setSceneManager:]
  -[VKSceneConfiguration setRampType:]
  -[VKSceneConfiguration setLineType:]
  -[VKSceneConfiguration setCurrentStepLength:]
  -[VKSceneConfiguration setCurrentManeuverType:]
  -[VKSceneConfiguration .cxx_construct]
  -[VKSceneConfiguration setCurrentIncidentType:]
  -[VKSceneConfiguration setNavigationState:]
  -[VKSceneConfiguration .cxx_destruct]
  -[VKSceneConfiguration initWithTaskContext:]
  -[VKSceneConfiguration setDistanceToDestination:]
  -[VKSceneConfiguration setStyleManager:]
  -[VKSceneConfiguration navCameraModeStyleAttribute]
  -[VKSceneConfiguration setNextManeuverRampType:]
  -[VKSceneConfiguration setNavCameraMode:]
  -[VKSceneConfiguration setRoadSpeed:]
  -[VKSceneConfiguration setDistanceToCurrentManeuver:]
  -[VKSceneConfiguration setCurrentGroupedManeuverCount:]
  -[VKSceneConfiguration setCurrentTransportationType:]
  -[VKSceneConfiguration setSearchAlongTheRoute:]
  -[VKSceneConfiguration setVehicleSpeed:]
  -[VKSceneConfiguration resetState]
  -[VKSceneConfiguration setCurrentManeuverJunctionsCount:]
  -[VKSceneConfiguration _updateStyleManager]
  -[VKSceneConfiguration setNextStepLength:]
  -[VKSceneConfiguration setNavigationDestination:]
  -[VKSceneConfiguration navCameraMode]
  -[VKSceneConfiguration navigationDestination]


VKCamera : NSObject
 @property  {?=Bddddd} frustum
 @property  r^{Matrix<double position
 @property  r^{Quaternion<double>={Matrix<double orientation
 @property  double aspectRatio
 @property  {Unit<RadianUnitDescription horizontalFieldOfView
 @property  {Unit<RadianUnitDescription verticalFieldOfView
 @property  double farClipDistance
 @property  double nearClipDistance
 @property  double ndcZNear
 @property  {VKCameraState={RigidTransform<double cameraState
 @property  double minHeight
 @property  double maxHeight
 @property  double maxHeightNoPitch
 @property  double maxPitch
 @property  {optional<double>=B(ValueUnion=[8C]d)} minDistanceToGroundRestriction
 @property  {optional<double>=B(ValueUnion=[8C]d)} maxDistanceToGroundRestriction
 @property  VKCameraRegionRestriction *regionRestriction
 @property  double terrainHeight
 @property  VKViewVolume *viewVolume
 @property  VKFootprint *footprint
 @property  {Matrix<double upVector
 @property  {Matrix<double rightVector
 @property  {Matrix<double forwardVector
 @property  {Matrix<double groundPoint
 @property  double pitch
 @property  double yaw
 @property  double tanHalfHorizFOV
 @property  double tanHalfVerticalFOV
 @property  double distanceToGroundAndFarClipPlaneIntersection
 @property  double screenHeightOfGroundAndFarClipPlaneIntersection
 @property  double fractionOfScreenAboveFarClipPlaneAtCanonicalPitch
 @property  double canonicalPitch
 @property  double horizontalOffset
 @property  r^{Matrix<double scaledViewMatrix
 @property  r^{Matrix<double scaledProjectionMatrix
 @property  r^{Matrix<double scaledViewProjectionMatrix
 @property  r^{Matrix<double unscaledViewMatrix
 @property  r^{Matrix<double unscaledProjectionMatrix

  // instance methods
  -[VKCamera annotationCoordinateTest]
  -[VKCamera detailedDescription]
  -[VKCamera groundPlaneIntersectionPoint]
  -[VKCamera pitch]
  -[VKCamera fractionOfScreenAboveFarClipPlaneAtCanonicalPitch]
  -[VKCamera setNeedsUpdate]
  -[VKCamera horizontalOffset]
  -[VKCamera setVerticalFieldOfView:]
  -[VKCamera maxPitch]
  -[VKCamera position]
  -[VKCamera viewVolume]
  -[VKCamera setPosition:]
  -[VKCamera setTerrainHeight:]
  -[VKCamera zoomAtCentrePoint]
  -[VKCamera yaw]
  -[VKCamera footprint]
  -[VKCamera groundPointFromScreenPoint:]
  -[VKCamera setHorizontalOffset:]
  -[VKCamera terrainHeight]
  -[VKCamera setMinHeight:]
  -[VKCamera scaledViewMatrix]
  -[VKCamera .cxx_construct]
  -[VKCamera distanceToGroundAndFarClipPlaneIntersection]
  -[VKCamera dealloc]
  -[VKCamera .cxx_destruct]
  -[VKCamera forwardVector]
  -[VKCamera aspectRatio]
  -[VKCamera screenPointFromGroundPoint:]
  -[VKCamera descriptionDictionaryRepresentation]
  -[VKCamera adjustClipPlanes]
  -[VKCamera scaledProjectionMatrix]
  -[VKCamera regionRestriction]
  -[VKCamera setMaxPitch:]
  -[VKCamera _setPosition:]
  -[VKCamera unscaledProjectionMatrix]
  -[VKCamera tanHalfVerticalFOV]
  -[VKCamera frustum]
  -[VKCamera maxHeight]
  -[VKCamera verticalFieldOfView]
  -[VKCamera cameraFrame]
  -[VKCamera groundPoint]
  -[VKCamera widthOfViewAtDepth:]
  -[VKCamera tanHalfHorizFOV]
  -[VKCamera setMaxDistanceToGroundRestriction:]
  -[VKCamera initWithRunLoopController:]
  -[VKCamera setMaxHeightNoPitch:]
  -[VKCamera ndcZNear]
  -[VKCamera rightVector]
  -[VKCamera maxDistanceToGroundRestriction]
  -[VKCamera horizontalFieldOfView]
  -[VKCamera setMercatorPosition:]
  -[VKCamera setCanonicalPitch:]
  -[VKCamera nearClipDistance]
  -[VKCamera canonicalPitch]
  -[VKCamera setMinDistanceToGroundRestriction:]
  -[VKCamera upVector]
  -[VKCamera setMaxHeight:]
  -[VKCamera setOrientation:]
  -[VKCamera zoomAtPoint:]
  -[VKCamera screenHeightOfGroundAndFarClipPlaneIntersection]
  -[VKCamera maxHeightNoPitch]
  -[VKCamera annotationRectTest]
  -[VKCamera setCameraState:]
  -[VKCamera setRegionRestriction:]
  -[VKCamera displayZoomLevel]
  -[VKCamera farClipDistance]
  -[VKCamera orientation]
  -[VKCamera minDistanceToGroundRestriction]
  -[VKCamera groundPointFromScreenPoint:atGroundLevel:]
  -[VKCamera setNdcZNear:]
  -[VKCamera setAspectRatio:]
  -[VKCamera setFractionOfScreenAboveFarClipPlaneAtCanonicalPitch:]
  -[VKCamera updateIfNeeded]
  -[VKCamera cameraState]
  -[VKCamera depthForViewWidth:]
  -[VKCamera minHeight]
  -[VKCamera scaledViewProjectionMatrix]
  -[VKCamera view:]
  -[VKCamera unscaledViewMatrix]
  -[VKCamera mercatorPosition]


RouteRenderLayerObserverProxy : NSObject <VKPolylineGroupOverlayObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[RouteRenderLayerObserverProxy polylineGroup:didSelectPolyline:]
  -[RouteRenderLayerObserverProxy polylineGroup:didAddPolyline:]
  -[RouteRenderLayerObserverProxy initWithPolylineGroupObserver:]
  -[RouteRenderLayerObserverProxy .cxx_construct]
  -[RouteRenderLayerObserverProxy dealloc]
  -[RouteRenderLayerObserverProxy .cxx_destruct]
  -[RouteRenderLayerObserverProxy stopObserving:]
  -[RouteRenderLayerObserverProxy polylineGroup:didRemovePolyline:]
  -[RouteRenderLayerObserverProxy polylineGroup:didFocusPolyline:]
  -[RouteRenderLayerObserverProxy startObserving:]


VKFootprint : NSObject
 @property  {Box<double boundingRect
 @property  {VKFootprintConvexHull_struct=i[6{Matrix<double convexHull
 @property  double minDepth
 @property  double maxDepth
 @property  double centerDepth
 @property  {Matrix<double furthestGroundPoint
 @property  {Matrix<double nearestGroundPoint
 @property  ^{Matrix<double cornerGroundPoints
 @property  int cornerGroundPointsCount

  // instance methods
  -[VKFootprint annotationCoordinateTest]
  -[VKFootprint centerDepth]
  -[VKFootprint minDepth]
  -[VKFootprint .cxx_construct]
  -[VKFootprint maxDepth]
  -[VKFootprint boundingRect]
  -[VKFootprint furthestGroundPoint]
  -[VKFootprint _expandedBoundingRect]
  -[VKFootprint containsGroundPoint:]
  -[VKFootprint computeFromCamera:]
  -[VKFootprint convexHull]
  -[VKFootprint cornerGroundPoints]
  -[VKFootprint annotationRectTest]
  -[VKFootprint nearestGroundPoint]
  -[VKFootprint rejectsRect:]
  -[VKFootprint cornerGroundPointsCount]


VKViewVolume : NSObject
 @property  r^{Matrix<double corners

  // instance methods
  -[VKViewVolume .cxx_construct]
  -[VKViewVolume lerpPoint:]
  -[VKViewVolume corners]
  -[VKViewVolume updateWithFrustum:matrix:]


VKMapView : CALayer /System/Library/Frameworks/ImageIO.framework/ImageIO
 @property  VKMapCanvas *mapCanvas
 @property  r^{MapEngine=^^?{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}^{Device}^{RealisticCommandBufferSelector}{_retain_ptr<_MapEngineRenderQueueSource * mapEngine
 @property  double heading
 @property  BOOL virtualParallaxEnabled
 @property  BOOL shouldLoadFallbackTiles
 @property  BOOL shouldLoadMapMargin
 @property  <VKMapViewDelegate> *mapDelegate
 @property  <VKMapViewCameraDelegate> *cameraDelegate
 @property  BOOL staysCenteredDuringPinch
 @property  BOOL staysCenteredDuringRotation
 @property  CADisplay *hostDisplay
 @property  BOOL isPitchable
 @property  BOOL pitched
 @property  BOOL fullyPitched
 @property  double minPitch
 @property  double maxPitch
 @property  BOOL canEnter3DMode
 @property  BOOL supportsGPUFrameCaptureToDestination
 @property  BOOL showingFlyover
 @property  BOOL canShowFlyover
 @property  BOOL trafficEnabled
 @property  BOOL trafficIncidentsEnabled
 @property  long long displayRate
 @property  long long navigationDisplayRate
 @property  BOOL localizeLabels
 @property  long long labelScaleFactor
 @property  int flyoverMode
 @property  int mapType
 @property  {?=CCCCB} mapDisplayStyle
 @property  float styleZOffsetScale
 @property  long long targetDisplay
 @property  {?=B} vehicleState
 @property  unsigned char emphasis
 @property  long long applicationUILayout
 @property  BOOL labelMarkerSelectionEnabled
 @property  long long shieldSize
 @property  long long navigationShieldSize
 @property  long long shieldIdiom
 @property  BOOL showsRoadLabels
 @property  BOOL showsPointLabels
 @property  BOOL showsPointsOfInterest
 @property  BOOL showsBuildings
 @property  BOOL showsVenues
 @property  BOOL loadMuninAvailability
 @property  GEOPOICategoryFilter *pointsOfInterestFilter
 @property  VKPuckAnimator *userLocationAnimator
 @property  {VKEdgeInsets=ffff} edgeInsets
 @property  {VKEdgeInsets=ffff} fullyOccludedEdgeInsets
 @property  {VKEdgeInsets=ffff} labelEdgeInsets
 @property  GEOMapRegion *mapRegion
 @property  double yaw
 @property  double presentationYaw
 @property  double pitch
 @property  double altitude
 @property  {?=ddd} centerCoordinate
 @property  BOOL gesturing
 @property  BOOL iconsShouldAlignToPixels
 @property  BOOL fullyDrawn
 @property  unsigned long sceneState
 @property  BOOL trackingCameraShouldHandleGestures
 @property  double trackingZoomScale
 @property  {?=BdBB} annotationTrackingBehavior
 @property  long long annotationTrackingHeadingAnimationDisplayRate
 @property  BOOL animatingToTrackAnnotation
 @property  BOOL canShowFlyoverAnimation
 @property  VKLabelMarker *selectedLabelMarker
 @property  NSArray *labelMarkers
 @property  VKPolylineOverlay *focusedLabelsPolyline
 @property  BOOL rendersInBackground
 @property  BOOL debugLayoutContinuously
 @property  BOOL enableDebugLabelHighlighting
 @property  NSArray *visibleTileSets
 @property  unsigned char applicationState
 @property  unsigned char displayedSearchResultsType
 @property  VKSceneConfiguration *sceneConfiguration

  // instance methods
  -[VKMapView setMapDelegate:]
  -[VKMapView annotationCoordinateTest]
  -[VKMapView isGesturing]
  -[VKMapView runAnimation:]
  -[VKMapView detailedDescription]
  -[VKMapView setGesturing:]
  -[VKMapView pitch]
  -[VKMapView virtualParallaxEnabled]
  -[VKMapView currentZoomLevelForTileSize:]
  -[VKMapView restoreViewportFromInfo:]
  -[VKMapView centerCoordinate]
  -[VKMapView attributionsForCurrentRegion]
  -[VKMapView setCameraHorizontalOffset:duration:timingFunction:]
  -[VKMapView removeOverlay:]
  -[VKMapView visibleTileSets]
  -[VKMapView fullyOccludedEdgeInsets]
  -[VKMapView mapEngine]
  -[VKMapView setTrafficEnabled:]
  -[VKMapView addOverlay:]
  -[VKMapView setContentsScale:]
  -[VKMapView isPointValidForGesturing:]
  -[VKMapView setFullyOccludedEdgeInsets:]
  -[VKMapView consoleString:]
  -[VKMapView viewportInfo]
  -[VKMapView setMapType:animated:]
  -[VKMapView trafficEnabled]
  -[VKMapView didPresent]
  -[VKMapView maxPitch]
  -[VKMapView reloadStylesheet]
  -[VKMapView mapType]
  -[VKMapView altitude]
  -[VKMapView startPanningAtPoint:]
  -[VKMapView setVehicleState:]
  -[VKMapView heading]
  -[VKMapView yaw]
  -[VKMapView edgeInsets]
  -[VKMapView setVirtualParallaxEnabled:]
  -[VKMapView setRegionRestriction:duration:timingFunction:]
  -[VKMapView rendersInBackground]
  -[VKMapView muninMarkerAtCoordinate:]
  -[VKMapView setRendersInBackground:]
  -[VKMapView panWithOffset:relativeToScreenPoint:animated:duration:completionHandler:]
  -[VKMapView isPitched]
  -[VKMapView setCanonicalSkyHeight:]
  -[VKMapView .cxx_construct]
  -[VKMapView setEdgeInsets:]
  -[VKMapView puckAnimator:updatedTargetPosition:]
  -[VKMapView dealloc]
  -[VKMapView transitLineMarkersForSelectionAtPoint:]
  -[VKMapView durationToAnimateToMapRegion:]
  -[VKMapView stopSnappingAnimations]
  -[VKMapView setShowsPointsOfInterest:]
  -[VKMapView .cxx_destruct]
  -[VKMapView wantsTimerTick]
  -[VKMapView stopPanningAtPoint:]
  -[VKMapView shouldHideOffscreenSelectedAnnotation]
  -[VKMapView selectLabelMarker:completion:]
  -[VKMapView forceFrame]
  -[VKMapView closeLoaderConnection]
  -[VKMapView flushTileLoads]
  -[VKMapView setTargetDisplay:]
  -[VKMapView openLoaderConnection]
  -[VKMapView didFinishSnapshotting]
  -[VKMapView convertPoint:toCoordinateFromLayer:]
  -[VKMapView convertCoordinate:toPointToLayer:]
  -[VKMapView setStyleZOffsetScale:]
  -[VKMapView convertCoordinate:toCameraModelPointToLayer:]
  -[VKMapView setHostDisplay:]
  -[VKMapView initShouldRasterize:inBackground:contentScale:auditToken:]
  -[VKMapView detailedDescriptionDictionaryRepresentation]
  -[VKMapView zoom:withFocusPoint:completionHandler:]
  -[VKMapView forceCameraUpdateForFrameResize]
  -[VKMapView enableViewDataLoading:]
  -[VKMapView showsRoadLabels]
  -[VKMapView setShowsRoadLabels:]
  -[VKMapView willStopPanningAtPoint:withVelocity:]
  -[VKMapView map:didEnterARMode:]
  -[VKMapView setCenterCoordinate:altitude:yaw:pitch:duration:timingCurve:completion:]
  -[VKMapView currentMarker]
  -[VKMapView convertMapPoint:toPointToLayer:]
  -[VKMapView convertPoint:toMapPointFromLayer:]
  -[VKMapView enterMuninForStorefrontView:secondaryStorefrontView:]
  -[VKMapView enterMuninForMarker:withHeading:]
  -[VKMapView selectedLabelMarker]
  -[VKMapView getSceneState]
  -[VKMapView moveToMarker:withHeading:animated:completionHandler:]
  -[VKMapView distanceFromPoint:toPoint:fromLayer:withPrecision:]
  -[VKMapView setMapDisplayStyle:]
  -[VKMapView flyoverMode]
  -[VKMapView moveToStorefrontView:animated:completionHandler:]
  -[VKMapView deselectLabelMarker]
  -[VKMapView labelMarkerForCustomFeatureAnnotation:]
  -[VKMapView addCustomFeatureDataSource:]
  -[VKMapView removeCustomFeatureDataSource:]
  -[VKMapView muninMarkerAtCoordinate:completeMarkerHandler:]
  -[VKMapView insertOverlay:belowOverlay:]
  -[VKMapView enter3DMode]
  -[VKMapView startRotatingWithFocusPoint:]
  -[VKMapView setRouteContext:]
  -[VKMapView setCurrentLocationText:]
  -[VKMapView populateDebugNode:withOptions:]
  -[VKMapView labelScaleFactor]
  -[VKMapView resumeFlyoverTourAnimation]
  -[VKMapView labelMarkers]
  -[VKMapView setCameraDelegate:]
  -[VKMapView canZoomInForTileSize:]
  -[VKMapView mapCanvas]
  -[VKMapView puckAnimator:updatedPosition:course:]
  -[VKMapView tapAtPoint:]
  -[VKMapView mapDelegate]
  -[VKMapView setSelectedFeatureId:]
  -[VKMapView deselectFeatureId]
  -[VKMapView setDisableLabels:]
  -[VKMapView selectLabelMarker:]
  -[VKMapView willEnterForeground]
  -[VKMapView updateRotationWithFocusPoint:newValue:]
  -[VKMapView _createGlobe]
  -[VKMapView currentCanvas]
  -[VKMapView buildingMarkerAtPoint:]
  -[VKMapView featureMarkerAtPoint:]
  -[VKMapView clientStyleAttributes]
  -[VKMapView _updateMapDisplayStyle]
  -[VKMapView _labelSettings]
  -[VKMapView zoomLevelAdjustmentForTileSize:]
  -[VKMapView setApplicationState:displayedSearchResultsType:]
  -[VKMapView _closeLoaderConnection:]
  -[VKMapView _createDisplayLayer]
  -[VKMapView isEffectivelyHidden]
  -[VKMapView setIsPitchable:]
  -[VKMapView setShowsVenues:]
  -[VKMapView forceLayout]
  -[VKMapView setStaysCenteredDuringRotation:]
  -[VKMapView staysCenteredDuringRotation]
  -[VKMapView setDimmingBaseMap:animated:duration:]
  -[VKMapView venueAtLocation:withMarginForError:includeNonRevealedVenues:]
  -[VKMapView stopPitchingWithFocusPoint:]
  -[VKMapView setBounds:]
  -[VKMapView applicationState]
  -[VKMapView shieldSize]
  -[VKMapView setLoadMuninMetadata:]
  -[VKMapView _postDelegateCallbackBlock:]
  -[VKMapView performStylesheetDidChange]
  -[VKMapView map:didUpdateVerticalYawTo:]
  -[VKMapView isPitchable]
  -[VKMapView zoomToLevel:withFocusPoint:]
  -[VKMapView setMapDisplayStyle:animated:duration:]
  -[VKMapView activateInternalSettings]
  -[VKMapView canShowFlyoverAnimation]
  -[VKMapView _notifyDelegateFlyoverTourLabelChanged:]
  -[VKMapView _runFlyoverTourStateChange:completion:]
  -[VKMapView showsPointsOfInterest]
  -[VKMapView sceneConfiguration]
  -[VKMapView setNavContext:]
  -[VKMapView labelMarkerForCustomFeatureAnnotation:dataSource:]
  -[VKMapView setDisableTransitLines:]
  -[VKMapView _updateBackgroundColor]
  -[VKMapView maximumZoomLevelForTileSize:]
  -[VKMapView prepareFlyoverAnimation:completion:]
  -[VKMapView setEmphasis:]
  -[VKMapView trafficIncidentsEnabled]
  -[VKMapView annotationTrackingHeadingAnimationDisplayRate]
  -[VKMapView _mapDelegateQueue]
  -[VKMapView puckAnimatorDidStop:]
  -[VKMapView isLabelMarkerSelectionEnabled]
  -[VKMapView setTrafficIncidentsEnabled:]
  -[VKMapView setPointsOfInterestFilter:]
  -[VKMapView showsPointLabels]
  -[VKMapView isShowingFlyover]
  -[VKMapView canShowFlyover]
  -[VKMapView supportsMapType:]
  -[VKMapView mapDisplayStyle]
  -[VKMapView setMapDisplayStyle:animated:]
  -[VKMapView showsBuildings]
  -[VKMapView updatePanWithTranslation:]
  -[VKMapView userLocationAnimator]
  -[VKMapView stopPinchingWithFocusPoint:]
  -[VKMapView secondaryCanvas]
  -[VKMapView styleZOffsetScale]
  -[VKMapView targetDisplay]
  -[VKMapView vehicleState]
  -[VKMapView applicationUILayout]
  -[VKMapView setApplicationUILayout:]
  -[VKMapView navigationDisplayRate]
  -[VKMapView setNavigationDisplayRate:]
  -[VKMapView hostDisplay]
  -[VKMapView debugLayoutContinuously]
  -[VKMapView setDebugLayoutContinuously:]
  -[VKMapView didReceiveFlushTileCaches]
  -[VKMapView didReceiveLocalChanged]
  -[VKMapView debugLabelString:]
  -[VKMapView shouldLoadFallbackTiles]
  -[VKMapView setShouldLoadMapMargin:]
  -[VKMapView setStaysCenteredDuringPinch:]
  -[VKMapView displayRate]
  -[VKMapView topDownMinimumZoomLevelForTileSize:]
  -[VKMapView setApplicationState:]
  -[VKMapView shouldLoadMapMargin]
  -[VKMapView navigationShieldSize]
  -[VKMapView setNavigationShieldSize:]
  -[VKMapView shieldIdiom]
  -[VKMapView setShieldIdiom:]
  -[VKMapView showsVenues]
  -[VKMapView isLoadingMuninMetadata]
  -[VKMapView worldSpaceWidthOfView]
  -[VKMapView venueAtLocation:]
  -[VKMapView onscreenImageResources]
  -[VKMapView canRotate]
  -[VKMapView setDisplayRate:]
  -[VKMapView stopTrackingAnnotation]
  -[VKMapView venueAtLocation:withMarginForError:]
  -[VKMapView _setFloorSwitcherZoomPadding:]
  -[VKMapView nearestVenueDidChange:building:]
  -[VKMapView venueCreated:building:]
  -[VKMapView setClientLocalizedStrings:]
  -[VKMapView setDesiredMapMode:]
  -[VKMapView setMapRegion:pitch:yaw:duration:timingCurve:completion:]
  -[VKMapView setCameraFramingInsets:]
  -[VKMapView enableTestStatistics]
  -[VKMapView disableTestStatistics]
  -[VKMapView resetTestStatistics]
  -[VKMapView testStatistics]
  -[VKMapView tileStatistics]
  -[VKMapView stopTracking]
  -[VKMapView pauseTracking]
  -[VKMapView setLabelExclusionRegions:]
  -[VKMapView emphasis]
  -[VKMapView enableDebugLabelHighlighting]
  -[VKMapView setLocalizeLabels:]
  -[VKMapView debugHighlightLabelAtPoint:]
  -[VKMapView labelMarkerForSelectionAtPoint:selectableLabelsOnly:]
  -[VKMapView transitionToTracking:mapMode:startLocation:startCourse:pounceCompletionHandler:]
  -[VKMapView setTrackingCameraShouldHandleGestures:]
  -[VKMapView trackingCameraShouldHandleGestures]
  -[VKMapView transitLinesDisabled]
  -[VKMapView stylesheetIsDevResource]
  -[VKMapView setExternalTrafficFeatures:areRouteTrafficFeaturesActive:]
  -[VKMapView supportsGPUFrameCaptureToDestination]
  -[VKMapView trackingZoomScale]
  -[VKMapView setTrackingZoomScale:]
  -[VKMapView focusedLabelsPolyline]
  -[VKMapView setDisableGrid:]
  -[VKMapView presentationYaw]
  -[VKMapView setFocusedLabelsPolyline:]
  -[VKMapView muninJunctionDidChange:currentRoad:localize:]
  -[VKMapView didStartLoadingData]
  -[VKMapView didFinishLoadingData]
  -[VKMapView didFinishLoadingDataWithError:]
  -[VKMapView mapDidReloadStylesheet:]
  -[VKMapView staysCenteredDuringPinch]
  -[VKMapView iconsShouldAlignToPixels]
  -[VKMapView setIconsShouldAlignToPixels:]
  -[VKMapView stopFlyoverAnimation]
  -[VKMapView willBecomeFullyDrawn]
  -[VKMapView didUpdateSceneStatus:]
  -[VKMapView labelManagerDidLayout]
  -[VKMapView selectedLabelMarkerWillDisappear:]
  -[VKMapView labelMarkerDidChangeState:]
  -[VKMapView map:canShowFlyoverDidChange:]
  -[VKMapView mapLabelsDidLayout:]
  -[VKMapView minPitch]
  -[VKMapView isAnimatingToTrackAnnotation]
  -[VKMapView mapRegion]
  -[VKMapView mapDidFinishChangingMapDisplayStyle:]
  -[VKMapView map:selectedLabelMarkerWillDisappear:]
  -[VKMapView map:labelMarkerDidChangeState:]
  -[VKMapView mapController:requestsDisplayRate:]
  -[VKMapView setDisablePolygons:]
  -[VKMapView isFullyDrawn]
  -[VKMapView setRouteLineSplitAnnotation:]
  -[VKMapView localizeLabels]
  -[VKMapView willLayoutWithTimestamp:withContext:]
  -[VKMapView setDisableBuildingFootprints:]
  -[VKMapView setDisableRasters:]
  -[VKMapView roadsDisabled]
  -[VKMapView labelsDisabled]
  -[VKMapView polygonsDisabled]
  -[VKMapView buildingFootprintsDisabled]
  -[VKMapView rastersDisabled]
  -[VKMapView gridDisabled]
  -[VKMapView pptTileStatisticsForMapType:latitude:longitude:zoom:width:height:rect:]
  -[VKMapView puckAnimator:runAnimation:]
  -[VKMapView pointsOfInterestFilter]
  -[VKMapView debugHighlightFeatureMarker:]
  -[VKMapView currentMapMode]
  -[VKMapView setDisableRoads:]
  -[VKMapView setShieldSize:]
  -[VKMapView setShouldLoadFallbackTiles:]
  -[VKMapView currentZoomLevel]
  -[VKMapView arController:didChangeTrackingState:reason:]
  -[VKMapView arController:didEncounterError:]
  -[VKMapView arController:arSessionWasInterrupted:]
  -[VKMapView arControllerSessionInterruptionEnded:]
  -[VKMapView annotationRectTest]
  -[VKMapView _forceLayoutForSuspensionSnapShot]
  -[VKMapView exitARMode]
  -[VKMapView clearScene]
  -[VKMapView setMapRegion:pitch:yaw:]
  -[VKMapView renderInContext:]
  -[VKMapView updatePinchWithFocusPoint:oldFactor:newFactor:]
  -[VKMapView setAnnotationTrackingHeadingAnimationDisplayRate:]
  -[VKMapView setLabelScaleFactor:]
  -[VKMapView isFullyPitched]
  -[VKMapView setMapType:]
  -[VKMapView stopRotatingWithFocusPoint:]
  -[VKMapView displayedFloorOrdinalForVenueBuilding:]
  -[VKMapView navigationPuck]
  -[VKMapView setCenterCoordinateDistanceRange:duration:timingFunction:]
  -[VKMapView setMapRegion:pitch:yaw:duration:completion:]
  -[VKMapView addRouteOverlay:]
  -[VKMapView goToTileX:Y:Z:tileSize:]
  -[VKMapView setLabelMarkerSelectionEnabled:]
  -[VKMapView navigationCameraReturnToPuck]
  -[VKMapView enterARModeAtCoordinate:]
  -[VKMapView updatePitchWithFocusPoint:translation:]
  -[VKMapView canEnter3DModeFlyoverForTileSize:]
  -[VKMapView supportsNightMode]
  -[VKMapView loadMuninAvailability]
  -[VKMapView setLoadMuninAvailability:]
  -[VKMapView annotationTrackingBehavior]
  -[VKMapView setAnnotationTrackingBehavior:]
  -[VKMapView displayedSearchResultsType]
  -[VKMapView setDisplayedSearchResultsType:]
  -[VKMapView removeRouteOverlay:]
  -[VKMapView addPersistentRouteOverlay:]
  -[VKMapView setRouteUserOffset:]
  -[VKMapView removePersistentRouteOverlay:]
  -[VKMapView iconForStyleAttributes:contentScale:size:transparent:]
  -[VKMapView venueWithFocus]
  -[VKMapView roadLabelTilesInScene]
  -[VKMapView startTrackingAnnotation:trackHeading:animated:duration:timingFunction:]
  -[VKMapView mapRegionBounds]
  -[VKMapView labelEdgeInsets]
  -[VKMapView setLabelEdgeInsets:]
  -[VKMapView setEdgeInsets:duration:timingFunction:completionHandler:]
  -[VKMapView venueWithID:]
  -[VKMapView venueBuildingWithFocus]
  -[VKMapView isDimmingBaseMap]
  -[VKMapView exit3DMode]
  -[VKMapView startPanningAtPoint:panAtStartPoint:]
  -[VKMapView setDimmingBaseMap:]
  -[VKMapView zoomToRevealVenueFloorplan:]
  -[VKMapView zoomToRevealVenueBuildingFloorplan:]
  -[VKMapView setDisplayedFloorOrdinal:forVenueBuilding:]
  -[VKMapView clearVenueBuildingFloorSelections]
  -[VKMapView displayedFloorIsDefaultForVenueBuilding:]
  -[VKMapView cancelPendingMove]
  -[VKMapView startPinchingWithFocusPoint:]
  -[VKMapView defaultFloorOrdinalForVenueBuilding:]
  -[VKMapView setSelectedVenuePoiFeatureId:]
  -[VKMapView deselectVenuePoiFeatureId]
  -[VKMapView setShowsBuildings:]
  -[VKMapView pauseFlyoverTourAnimation]
  -[VKMapView setARInterfaceOrientation:]
  -[VKMapView startFlyoverAnimation:animateToStart:completion:]
  -[VKMapView moveToFlyoverTourStartPosition:duration:completion:]
  -[VKMapView startFlyoverTourAnimation:animateToStart:completion:]
  -[VKMapView setFlyoverMode:]
  -[VKMapView setYaw:animated:]
  -[VKMapView minimumZoomLevelForTileSize:]
  -[VKMapView startPitchingWithFocusPoint:]
  -[VKMapView addExternalAnchor:]
  -[VKMapView removeExternalAnchor:]
  -[VKMapView setHidden:]
  -[VKMapView canZoomOutForTileSize:]
  -[VKMapView setShowsPointLabels:]
  -[VKMapView insertOverlay:aboveOverlay:]
  -[VKMapView transitLineMarkersInCurrentViewport]
  -[VKMapView selectTransitLineMarker:]
  -[VKMapView deselectTransitLineMarker]
  -[VKMapView selectedTransitLineIDs]
  -[VKMapView canEnter3DMode]
  -[VKMapView cameraDelegate]
  -[VKMapView setNeedsLayout]
  -[VKMapView updatePitchWithFocusPoint:degrees:]
  -[VKMapView didReceiveMemoryWarning]
  -[VKMapView didEnterBackground]


VKMapCanvas : VKScreenCanvas <VKMapModelDelegate, VKInteractiveMap>
 @property  <VKInteractiveMapDelegate> *delegate
 @property  BOOL trafficEnabled
 @property  VKMapModel *map
 @property  double canonicalSkyHeight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *overlays
 @property  NSArray *visibleTileSets

  // class methods
  +[VKMapCanvas supportsMapType:scale:]

  // instance methods
  -[VKMapCanvas map]
  -[VKMapCanvas annotationCoordinateTest]
  -[VKMapCanvas convertCoordinateToPoint:]
  -[VKMapCanvas detailedDescription]
  -[VKMapCanvas tileSize]
  -[VKMapCanvas featureMarkerAtScreenPoint:]
  -[VKMapCanvas attributionsForCurrentRegion]
  -[VKMapCanvas setCameraHorizontalOffset:duration:timingFunction:]
  -[VKMapCanvas removeOverlay:]
  -[VKMapCanvas visibleTileSets]
  -[VKMapCanvas setTrafficEnabled:]
  -[VKMapCanvas initWithMapEngine:inBackground:]
  -[VKMapCanvas convertMapPointToPoint:]
  -[VKMapCanvas addOverlay:]
  -[VKMapCanvas setContentsScale:]
  -[VKMapCanvas isPointValidForGesturing:]
  -[VKMapCanvas consoleString:]
  -[VKMapCanvas updateCameraForFrameResize]
  -[VKMapCanvas setMapType:animated:]
  -[VKMapCanvas trafficEnabled]
  -[VKMapCanvas convertPointToMapPoint:]
  -[VKMapCanvas updateWithTimestamp:withContext:]
  -[VKMapCanvas reloadStylesheet]
  -[VKMapCanvas transitionToTracking:mapMode:startLocation:startCourse:cameraController:pounceCompletionHandler:]
  -[VKMapCanvas overlays]
  -[VKMapCanvas setCanonicalSkyHeight:]
  -[VKMapCanvas .cxx_construct]
  -[VKMapCanvas dealloc]
  -[VKMapCanvas .cxx_destruct]
  -[VKMapCanvas shouldHideOffscreenSelectedAnnotation]
  -[VKMapCanvas mapModelDidUpdateMinMaxZoomLevel:]
  -[VKMapCanvas mapModel:labelMarkerDidChangeState:]
  -[VKMapCanvas insertOverlay:belowOverlay:]
  -[VKMapCanvas _zoomLevelForCanvasSize:]
  -[VKMapCanvas populateDebugNode:withOptions:]
  -[VKMapCanvas updateOverlays]
  -[VKMapCanvas transferStateFromCanvas:]
  -[VKMapCanvas mapModelDidReloadStylesheet:]
  -[VKMapCanvas convertCoordinateToCameraModelPoint:]
  -[VKMapCanvas mapModel:selectedLabelMarkerWillDisappear:]
  -[VKMapCanvas mapModelLabelsDidLayout:]
  -[VKMapCanvas convertPointToCoordinate:]
  -[VKMapCanvas annotationRectTest]
  -[VKMapCanvas clearScene]
  -[VKMapCanvas setMapType:]
  -[VKMapCanvas navigationPuck]
  -[VKMapCanvas goToTileX:Y:Z:tileSize:]
  -[VKMapCanvas setDelegate:]
  -[VKMapCanvas delegate]
  -[VKMapCanvas canonicalSkyHeight]
  -[VKMapCanvas insertOverlay:aboveOverlay:]
  -[VKMapCanvas debugHighlightObjectAtPoint:highlightTarget:]


VKAnimation : NSObject
 @property  long long state
 @property  BOOL running
 @property  BOOL runsForever
 @property  float frequency
 @property  BOOL hasFrequency
 @property  double duration
 @property  BOOL timed
 @property  @? completionHandler
 @property  long long priority
 @property  NSString *name

  // instance methods
  -[VKAnimation running]
  -[VKAnimation frequency]
  -[VKAnimation setFrequency:]
  -[VKAnimation initWithName:]
  -[VKAnimation pause]
  -[VKAnimation stopAnimation:]
  -[VKAnimation resume]
  -[VKAnimation runsForever]
  -[VKAnimation dealloc]
  -[VKAnimation name]
  -[VKAnimation initWithPriority:name:]
  -[VKAnimation startWithRunner:]
  -[VKAnimation setRunsForever:]
  -[VKAnimation stop]
  -[VKAnimation onTimerFired:]
  -[VKAnimation setDuration:]
  -[VKAnimation initWithPriority:]
  -[VKAnimation hasFrequency]
  -[VKAnimation priority]
  -[VKAnimation completionHandler]
  -[VKAnimation state]
  -[VKAnimation timed]
  -[VKAnimation setCompletionHandler:]
  -[VKAnimation duration]
  -[VKAnimation transferToRunner:]


VKTimedAnimation : VKAnimation
 @property  @? timingFunction
 @property  @? stepHandler

  // class methods
  +[VKTimedAnimation setDragCoefficientGetter:]

  // instance methods
  -[VKTimedAnimation timingFunction]
  -[VKTimedAnimation initWithName:]
  -[VKTimedAnimation setTimingFunction:]
  -[VKTimedAnimation pause]
  -[VKTimedAnimation init]
  -[VKTimedAnimation stopAnimation:]
  -[VKTimedAnimation resume]
  -[VKTimedAnimation stepHandler]
  -[VKTimedAnimation dealloc]
  -[VKTimedAnimation initWithDuration:name:]
  -[VKTimedAnimation onTimerFired:]
  -[VKTimedAnimation initWithDuration:]
  -[VKTimedAnimation setStepHandler:]
  -[VKTimedAnimation setDuration:]
  -[VKTimedAnimation initWithDuration:priority:name:]
  -[VKTimedAnimation timed]
  -[VKTimedAnimation duration]


VKMapModel : NSObject
 @property  int mapType
 @property  float standardMapZoomLevelTransitionZ
 @property  BOOL localizeLabels
 @property  unsigned char labelScaleFactor
 @property  <VKMapModelDelegate> *delegate
 @property  NSArray *visibleTileSets
 @property  float navigationPuckSize
 @property  BOOL disableTransitLines

  // instance methods
  -[VKMapModel tileSize]
  -[VKMapModel visibleTileSets]
  -[VKMapModel setMapType:animated:]
  -[VKMapModel setShowingOuterHaloOnLabelsDidChange:]
  -[VKMapModel reloadStylesheet]
  -[VKMapModel mapType]
  -[VKMapModel layoutWithContext:]
  -[VKMapModel setNavMapZoomLevelTransitionZFromLowerBound:]
  -[VKMapModel disableTransitLines]
  -[VKMapModel _styleManager]
  -[VKMapModel .cxx_construct]
  -[VKMapModel dealloc]
  -[VKMapModel .cxx_destruct]
  -[VKMapModel _beginMapZoomLevelTransition:]
  -[VKMapModel setStandardMapZoomLevelTransitionZ:]
  -[VKMapModel forceMapType:animated:]
  -[VKMapModel navigationPuckSize]
  -[VKMapModel initWithTarget:renderer:taskContext:logicManager:mapEngineSettings:animationRunner:]
  -[VKMapModel labelScaleFactor]
  -[VKMapModel _mapZoomLevelDidChange:]
  -[VKMapModel setNavigationPuckSize:]
  -[VKMapModel northYaw]
  -[VKMapModel setDisableTransitLines:]
  -[VKMapModel setLocalizeLabels:]
  -[VKMapModel _updateZoomLevel:]
  -[VKMapModel localizeLabels]
  -[VKMapModel performStylesheetDidReload]
  -[VKMapModel setStyleManager:forRealistic:]
  -[VKMapModel setLabelScaleFactor:]
  -[VKMapModel setMapType:]
  -[VKMapModel navigationPuck]
  -[VKMapModel setDelegate:]
  -[VKMapModel _setStyleManagerFromMapType:]
  -[VKMapModel destroyRenderer]
  -[VKMapModel delegate]
  -[VKMapModel updateMapDrawStyleWithContext:]
  -[VKMapModel standardMapZoomLevelTransitionZ]
  -[VKMapModel debugHighlightObjectAtPoint:highlightTarget:]


VKScreenCanvas : NSObject
 @property  {_retain_ptr<VKCamera * camera
 @property  ^{MapEngine=^^?{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}^{Device}^{RealisticCommandBufferSelector}{_retain_ptr<_MapEngineRenderQueueSource * mapEngine
 @property  {VKEdgeInsets=ffff} edgeInsets
 @property  {VKEdgeInsets=ffff} fullyOccludedEdgeInsets
 @property  <MDMapControllerDelegate> *mapDelegate
 @property  BOOL gesturing

  // instance methods
  -[VKScreenCanvas setMapDelegate:]
  -[VKScreenCanvas cameraController]
  -[VKScreenCanvas isGesturing]
  -[VKScreenCanvas runAnimation:]
  -[VKScreenCanvas setCameraController:]
  -[VKScreenCanvas didReceiveMemoryWarning:beAggressive:]
  -[VKScreenCanvas setGesturing:]
  -[VKScreenCanvas cameraController:requestsDisplayRate:]
  -[VKScreenCanvas tileSize]
  -[VKScreenCanvas restoreViewportFromInfo:]
  -[VKScreenCanvas featureMarkerAtScreenPoint:]
  -[VKScreenCanvas fullyOccludedEdgeInsets]
  -[VKScreenCanvas mapEngine]
  -[VKScreenCanvas initWithMapEngine:inBackground:]
  -[VKScreenCanvas setContentsScale:]
  -[VKScreenCanvas enterARSessionAtCoordinate:]
  -[VKScreenCanvas setFullyOccludedEdgeInsets:]
  -[VKScreenCanvas viewportInfo]
  -[VKScreenCanvas updateCameraForFrameResize]
  -[VKScreenCanvas setCamera:]
  -[VKScreenCanvas didPresent]
  -[VKScreenCanvas updateWithTimestamp:withContext:]
  -[VKScreenCanvas edgeInsets]
  -[VKScreenCanvas .cxx_construct]
  -[VKScreenCanvas setEdgeInsets:]
  -[VKScreenCanvas puckAnimator:updatedTargetPosition:]
  -[VKScreenCanvas dealloc]
  -[VKScreenCanvas .cxx_destruct]
  -[VKScreenCanvas wantsTimerTick]
  -[VKScreenCanvas puckAnimator:updatedPosition:course:]
  -[VKScreenCanvas exitARSession]
  -[VKScreenCanvas mapDelegate]
  -[VKScreenCanvas transferStateFromCanvas:]
  -[VKScreenCanvas camera]


VKDebugTreeNode : NSObject
 @property  VKDebugTreeNode *parent
 @property  NSString *name
 @property  NSArray *children

  // instance methods
  -[VKDebugTreeNode parent]
  -[VKDebugTreeNode children]
  -[VKDebugTreeNode dealloc]
  -[VKDebugTreeNode name]
  -[VKDebugTreeNode initWithParent:]
  -[VKDebugTreeNode isExpandable]
  -[VKDebugTreeNode setChildren:]
  -[VKDebugTreeNode propertyColumn]
  -[VKDebugTreeNode valueColumn]
  -[VKDebugTreeNode tagsColumn]
  -[VKDebugTreeNode searchNodes:withParameter:]


VKDebugTreeDataNode : VKDebugTreeNode
  // instance methods
  -[VKDebugTreeDataNode name]
  -[VKDebugTreeDataNode isExpandable]
  -[VKDebugTreeDataNode propertyColumn]
  -[VKDebugTreeDataNode valueColumn]
  -[VKDebugTreeDataNode tagsColumn]
  -[VKDebugTreeDataNode searchNodes:withParameter:]
  -[VKDebugTreeDataNode initWithDebugTreeNode:withParent:]
  -[VKDebugTreeDataNode buildChildren]
  -[VKDebugTreeDataNode propertyCount]


VKDebugTreePropertyNode : VKDebugTreeNode
  // instance methods
  -[VKDebugTreePropertyNode name]
  -[VKDebugTreePropertyNode propertyColumn]
  -[VKDebugTreePropertyNode valueColumn]
  -[VKDebugTreePropertyNode tagsColumn]
  -[VKDebugTreePropertyNode searchNodes:withParameter:]
  -[VKDebugTreePropertyNode initWithDebugTreeProperty:withParent:]
  -[VKDebugTreePropertyNode idValueForTreeValue:]


VKTransitLineMarker : NSObject
 @property  GEOMapItemIdentifier *identifier
 @property  unsigned long featureID
 @property  NSString *shieldText
 @property  NSString *shieldLocale
 @property  long long shieldType
 @property  {?=ffff} shieldColor
 @property  NSString *labelText
 @property  NSString *labelLocale
 @property  ^v transitLinkID

  // class methods
  +[VKTransitLineMarker markerWithFeature:transitLink:]

  // instance methods
  -[VKTransitLineMarker shieldColor]
  -[VKTransitLineMarker labelText]
  -[VKTransitLineMarker dealloc]
  -[VKTransitLineMarker featureID]
  -[VKTransitLineMarker initWithIdentifier:]
  -[VKTransitLineMarker shieldType]
  -[VKTransitLineMarker shieldText]
  -[VKTransitLineMarker identifier]
  -[VKTransitLineMarker initWithFeature:transitLink:]
  -[VKTransitLineMarker shieldLocale]
  -[VKTransitLineMarker labelLocale]
  -[VKTransitLineMarker transitLinkID]


ReachabilityCallbacker : NSObject
  // instance methods
  -[ReachabilityCallbacker .cxx_construct]
  -[ReachabilityCallbacker dealloc]
  -[ReachabilityCallbacker .cxx_destruct]
  -[ReachabilityCallbacker initWithListener:queue:]
  -[ReachabilityCallbacker _reachabilityChanged:]
  -[ReachabilityCallbacker clearListener]


VKCameraController : NSObject <VKCameraController>
 @property  double presentationHeading
 @property  BOOL isPitchEnabled
 @property  BOOL isRotateEnabled
 @property  BOOL staysCenteredDuringPinch
 @property  BOOL staysCenteredDuringRotation
 @property  BOOL canPitch
 @property  BOOL canRotate
 @property  {?=dd} centerCoordinate
 @property  double distanceFromCenterCoordinate
 @property  double heading
 @property  double pitch
 @property  GEOMapRegion *mapRegion
 @property  double altitude
 @property  double minPitch
 @property  double maxPitch
 @property  BOOL isPitched
 @property  BOOL isRotated
 @property  BOOL isFullyPitched
 @property  ^{MapDataAccess=} mapDataAccess
 @property  ^{AnimationRunner=} animationRunner
 @property  ^{RunLoopController=} runLoopController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCameraController isGesturing]
  -[VKCameraController detailedDescription]
  -[VKCameraController setGesturing:]
  -[VKCameraController pitch]
  -[VKCameraController currentZoomLevelForTileSize:]
  -[VKCameraController restoreViewportFromInfo:]
  -[VKCameraController centerCoordinate]
  -[VKCameraController viewportInfo]
  -[VKCameraController setCamera:]
  -[VKCameraController maxPitch]
  -[VKCameraController altitude]
  -[VKCameraController setHeading:]
  -[VKCameraController isAnimating]
  -[VKCameraController heading]
  -[VKCameraController edgeInsets]
  -[VKCameraController setCenterCoordinate:]
  -[VKCameraController topDownMinimumZoomLevel]
  -[VKCameraController setCanvas:]
  -[VKCameraController isPitched]
  -[VKCameraController isRotated]
  -[VKCameraController setEdgeInsets:]
  -[VKCameraController dealloc]
  -[VKCameraController distanceFromCenterCoordinate]
  -[VKCameraController wantsTimerTick]
  -[VKCameraController updateWithTimestamp:]
  -[VKCameraController maximumZoomLevel]
  -[VKCameraController populateDebugNode:withOptions:]
  -[VKCameraController setCameraDelegate:]
  -[VKCameraController canZoomInForTileSize:]
  -[VKCameraController canvas]
  -[VKCameraController initWithMapDataAccess:animationRunner:runLoopController:cameraDelegate:]
  -[VKCameraController zoomLevelAdjustmentForTileSize:]
  -[VKCameraController setIsPitchEnabled:]
  -[VKCameraController setStaysCenteredDuringRotation:]
  -[VKCameraController staysCenteredDuringRotation]
  -[VKCameraController isPitchEnabled]
  -[VKCameraController isRotateEnabled]
  -[VKCameraController setEdgeInsetsAnimating:]
  -[VKCameraController maximumZoomLevelForTileSize:]
  -[VKCameraController setStaysCenteredDuringPinch:]
  -[VKCameraController topDownMinimumZoomLevelForTileSize:]
  -[VKCameraController canRotate]
  -[VKCameraController canPitch]
  -[VKCameraController staysCenteredDuringPinch]
  -[VKCameraController minPitch]
  -[VKCameraController mapRegion]
  -[VKCameraController updateCameraToPositionOrientationLimits]
  -[VKCameraController beginRegionChange:]
  -[VKCameraController endRegionChange]
  -[VKCameraController currentZoomLevel]
  -[VKCameraController stylesheetDidReload]
  -[VKCameraController edgeInsetsAnimating]
  -[VKCameraController minimumZoomLevel]
  -[VKCameraController isChangingRegion]
  -[VKCameraController setDistanceFromCenterCoordinate:]
  -[VKCameraController mapDataAccess]
  -[VKCameraController animationRunner]
  -[VKCameraController runLoopController]
  -[VKCameraController checkAndResetRegionChangeCount]
  -[VKCameraController centerScreenPoint]
  -[VKCameraController scaledScreenPointForPoint:]
  -[VKCameraController cursorFromScreenPoint:]
  -[VKCameraController stylesheetDidChange]
  -[VKCameraController presentationHeading]
  -[VKCameraController centerCoordinate:andDistanceFromCenter:forMapRegion:]
  -[VKCameraController setIsRotateEnabled:]
  -[VKCameraController isFullyPitched]
  -[VKCameraController canvasDidLayout]
  -[VKCameraController minimumZoomLevelForTileSize:]
  -[VKCameraController canZoomOutForTileSize:]
  -[VKCameraController camera]
  -[VKCameraController cameraDelegate]
  -[VKCameraController setPitch:]


VKMapCameraController : VKScreenCameraController <VKGesturingCameraController>
 @property  VKMapModel *mapModel
 @property  VKMapCanvas *mapCanvas
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKMapCameraController setGesturing:]
  -[VKMapCameraController pitch]
  -[VKMapCameraController tileSize]
  -[VKMapCameraController restoreViewportFromInfo:]
  -[VKMapCameraController centerCoordinate]
  -[VKMapCameraController viewportInfo]
  -[VKMapCameraController maxPitch]
  -[VKMapCameraController altitude]
  -[VKMapCameraController heading]
  -[VKMapCameraController setMapCanvas:]
  -[VKMapCameraController yaw]
  -[VKMapCameraController setRegionRestriction:duration:timingFunction:]
  -[VKMapCameraController topDownMinimumZoomLevel]
  -[VKMapCameraController panWithOffset:relativeToScreenPoint:animated:duration:completionHandler:]
  -[VKMapCameraController isPitched]
  -[VKMapCameraController tapZoom:levels:completionHandler:]
  -[VKMapCameraController dealloc]
  -[VKMapCameraController durationToAnimateToMapRegion:]
  -[VKMapCameraController distanceFromCenterCoordinate]
  -[VKMapCameraController zoom:withFocusPoint:completionHandler:]
  -[VKMapCameraController zoom:withPoint:completionHandler:]
  -[VKMapCameraController minimumNormalizedZoomLevel]
  -[VKMapCameraController currentNormalizedZoomLevel]
  -[VKMapCameraController _animateToPosition:pitch:yaw:duration:timingCurve:forceDestination:completion:]
  -[VKMapCameraController maximumZoomLevel]
  -[VKMapCameraController enter3DMode]
  -[VKMapCameraController currentDisplayZoomLevel]
  -[VKMapCameraController mapCanvas]
  -[VKMapCameraController initWithMapDataAccess:animationRunner:runLoopController:cameraDelegate:]
  -[VKMapCameraController currentMaximumNormalizedZoomLevel]
  -[VKMapCameraController zoomLevelAdjustmentForTileSize:]
  -[VKMapCameraController maximumNormalizedZoomLevel]
  -[VKMapCameraController zoomToLevel:withFocusPoint:]
  -[VKMapCameraController zoomToLevel:withPoint:]
  -[VKMapCameraController idealPitchForNormalizedZoomLevel:]
  -[VKMapCameraController canRotate]
  -[VKMapCameraController setMapRegion:pitch:yaw:duration:timingCurve:completion:]
  -[VKMapCameraController rotateToYaw:withPoint:animated:]
  -[VKMapCameraController maxPitchForNormalizedZoomLevel:]
  -[VKMapCameraController setCenterCoordinate:altitude:yaw:pitch:duration:animationStyle:timingCurve:forceDestination:completion:]
  -[VKMapCameraController presentationYaw]
  -[VKMapCameraController minimumPitchForNormalizedZoomLevel:]
  -[VKMapCameraController minPitch]
  -[VKMapCameraController updateCameraToPositionOrientationLimits]
  -[VKMapCameraController currentZoomLevel]
  -[VKMapCameraController minimumZoomLevel]
  -[VKMapCameraController mapModel]
  -[VKMapCameraController _mercatorCenterCoordinateForMapRegion:]
  -[VKMapCameraController clampZoomLevelIfNecessary]
  -[VKMapCameraController isFullyPitched]
  -[VKMapCameraController animateRegionWithDuration:timingFunction:stepHandler:completionHandler:]
  -[VKMapCameraController currentMinimumNormalizedZoomLevel]
  -[VKMapCameraController setMapModel:]
  -[VKMapCameraController currentTopDownMinimumNormalizedZoomLevel]
  -[VKMapCameraController setCenterCoordinateDistanceRange:duration:timingFunction:]
  -[VKMapCameraController positionClampedToCameraRestriction:]
  -[VKMapCameraController startTrackingAnnotation:trackHeading:animated:duration:timingFunction:]
  -[VKMapCameraController canvasDidLayout]
  -[VKMapCameraController snapMapIfNecessary:]
  -[VKMapCameraController currentStyleZoomLevel]
  -[VKMapCameraController setCenterCoordinate3D:altitude:yaw:pitch:duration:animationStyle:timingCurve:completion:]
  -[VKMapCameraController exit3DMode]
  -[VKMapCameraController setYaw:animated:]
  -[VKMapCameraController normalizedZoomLevelAdjustmentForTileSize:]
  -[VKMapCameraController setCenterCoordinate:altitude:yaw:pitch:duration:animationStyle:timingCurve:completion:]
  -[VKMapCameraController _jumpToCenterPoint:pitchRadians:yawRadians:]
  -[VKMapCameraController updateCameraZBounds]
  -[VKMapCameraController _animateToPosition:pitch:yaw:duration:timingCurve:completion:]
  -[VKMapCameraController clampPitch:yaw:atTargetPositionZ:]
  -[VKMapCameraController canEnter3DMode]
  -[VKMapCameraController rotateToPitch:withPoint:preserveAltitude:animated:exaggerate:]


VKRouteEtaDescription : NSObject
 @property  NSString *etaText
 @property  unsigned char glyphType
 @property  GEOFeatureStyleAttributes *styleAttributes

  // instance methods
  -[VKRouteEtaDescription styleAttributes]
  -[VKRouteEtaDescription .cxx_construct]
  -[VKRouteEtaDescription dealloc]
  -[VKRouteEtaDescription .cxx_destruct]
  -[VKRouteEtaDescription etaText]
  -[VKRouteEtaDescription initWithEtaText:glyphType:]
  -[VKRouteEtaDescription initWithEtaText:etaAdvisoryStyleAttributes:]
  -[VKRouteEtaDescription isEqual:]
  -[VKRouteEtaDescription glyphType]
  -[VKRouteEtaDescription initWithEtaText:]
  -[VKRouteEtaDescription initWithEtaText:styleAttributes:]


VKStateCaptureHandler : NSObject
  // class methods
  +[VKStateCaptureHandler stateDataForDictionary:title:]

  // instance methods
  -[VKStateCaptureHandler .cxx_construct]
  -[VKStateCaptureHandler dealloc]
  -[VKStateCaptureHandler .cxx_destruct]
  -[VKStateCaptureHandler _unregisterHandlerforStateCapture]
  -[VKStateCaptureHandler _stateCapture]
  -[VKStateCaptureHandler initWithQueue:withName:withCallback:]
  -[VKStateCaptureHandler _registerHandlerforStateCapture:]


VKARCameraController : VKScreenCameraController <VKGesturingCameraController>
 @property  ^{MapEngine=^^?{shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}}^{Device}^{RealisticCommandBufferSelector}{_retain_ptr<_MapEngineRenderQueueSource * mapEngine
 @property  ^{GlobeView=^^?^{GeoServicesLoader}^{ManifestManager}^{TriggerManager}{shared_ptr<altitude::AnchorManager>=^{AnchorManager}^{__shared_weak_count}}^{DtmCacheNode}^{DtmRequestManager}^{FreezeViewNode}{shared_ptr<gdc::Camera>=^{Camera}^{__shared_weak_count}}B{basic_string<char globeView
 @property  {Unit<DegreeUnitDescription fieldOfView
 @property  BOOL overrideARFieldOfView
 @property  float heightScale
 @property  {RigidTransform<double offsetTransform
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKARCameraController pitch]
  -[VKARCameraController tileSize]
  -[VKARCameraController restoreViewportFromInfo:]
  -[VKARCameraController centerCoordinate]
  -[VKARCameraController mapEngine]
  -[VKARCameraController viewportInfo]
  -[VKARCameraController setCamera:]
  -[VKARCameraController maxPitch]
  -[VKARCameraController altitude]
  -[VKARCameraController heading]
  -[VKARCameraController topDownMinimumZoomLevel]
  -[VKARCameraController isPitched]
  -[VKARCameraController .cxx_construct]
  -[VKARCameraController dealloc]
  -[VKARCameraController distanceFromCenterCoordinate]
  -[VKARCameraController .cxx_destruct]
  -[VKARCameraController cameraPosition]
  -[VKARCameraController updateWithTimestamp:]
  -[VKARCameraController maximumZoomLevel]
  -[VKARCameraController cameraFrame]
  -[VKARCameraController globeView]
  -[VKARCameraController trasitionToARModeFromCameraFrame:withDuration:completion:]
  -[VKARCameraController updateCameraFrameFromARTransform]
  -[VKARCameraController presentationYaw]
  -[VKARCameraController minPitch]
  -[VKARCameraController mapRegion]
  -[VKARCameraController currentZoomLevel]
  -[VKARCameraController minimumZoomLevel]
  -[VKARCameraController updateGlobeFromCamera]
  -[VKARCameraController _updateBaseTransform]
  -[VKARCameraController _transformFromARCamera:]
  -[VKARCameraController _updateARContext]
  -[VKARCameraController updateWithARSession:]
  -[VKARCameraController _intersectAndResolveWorldCollision:]
  -[VKARCameraController _setupPounceAnimation:duration:completion:]
  -[VKARCameraController isFullyPitched]
  -[VKARCameraController initWithTaskContext:mapDataAccess:animationRunner:runLoopController:cameraDelegate:]
  -[VKARCameraController _fovAdjustment]
  -[VKARCameraController setCurrentZoomLevel:]
  -[VKARCameraController trasitionToARModeAtCoordinate:withDuration:completion:]
  -[VKARCameraController arCameraTransform]
  -[VKARCameraController heightScale]
  -[VKARCameraController arSessionWasInterrupted:]
  -[VKARCameraController setGlobeView:]
  -[VKARCameraController setMapEngine:]
  -[VKARCameraController overrideARFieldOfView]
  -[VKARCameraController setOverrideARFieldOfView:]
  -[VKARCameraController offsetTransform]
  -[VKARCameraController setOffsetTransform:]
  -[VKARCameraController setFieldOfView:]
  -[VKARCameraController setMaxZoomLevel:]
  -[VKARCameraController setYaw:animated:]
  -[VKARCameraController fieldOfView]


VKFeatureMarker : NSObject
 @property  r^{shared_ptr<md::FeatureMarker>=^{FeatureMarker}^{__shared_weak_count}} actualFeatureMarker
 @property  NSString *name
 @property  NSString *shortName
 @property  unsigned long featureID
 @property  unsigned long venueID
 @property  GEOFeatureStyleAttributes *styleAttributes

  // class methods
  +[VKFeatureMarker markerWithFeatureMarker:]

  // instance methods
  -[VKFeatureMarker styleAttributes]
  -[VKFeatureMarker venueID]
  -[VKFeatureMarker shortName]
  -[VKFeatureMarker .cxx_construct]
  -[VKFeatureMarker dealloc]
  -[VKFeatureMarker .cxx_destruct]
  -[VKFeatureMarker name]
  -[VKFeatureMarker featureID]
  -[VKFeatureMarker initWithFeatureMarkerPtr:]
  -[VKFeatureMarker actualFeatureMarker]


VKGlobeGestureCameraController : VKGestureCameraBehavior
  // instance methods
  -[VKGlobeGestureCameraController updatePan:lastScreenPoint:]
  -[VKGlobeGestureCameraController isPitchIncreasing]
  -[VKGlobeGestureCameraController setCameraManager:]
  -[VKGlobeGestureCameraController updatePitch:translation:]
  -[VKGlobeGestureCameraController updateRotate:atScreenPoint:]
  -[VKGlobeGestureCameraController updatePitch:degrees:]
  -[VKGlobeGestureCameraController updateZoom:oldFactor:newFactor:]
  -[VKGlobeGestureCameraController endPan:]
  -[VKGlobeGestureCameraController beginPitch:]
  -[VKGlobeGestureCameraController endZoom:]
  -[VKGlobeGestureCameraController setGlobeView:]
  -[VKGlobeGestureCameraController beginPan:]
  -[VKGlobeGestureCameraController beginZoom:]
  -[VKGlobeGestureCameraController beginRotate:]
  -[VKGlobeGestureCameraController endRotate:]
  -[VKGlobeGestureCameraController endPitch:]


VKMapImageCanvas : VKImageCanvas <VKMapModelDelegate, MDSnapshotMap>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKMapImageCanvas updateWithTimestamp:withContext:]
  -[VKMapImageCanvas dealloc]
  -[VKMapImageCanvas mapModelDidUpdateMinMaxZoomLevel:]
  -[VKMapImageCanvas mapModel:labelMarkerDidChangeState:]
  -[VKMapImageCanvas cancelTileRequests]
  -[VKMapImageCanvas mapModel:selectedLabelMarkerWillDisappear:]
  -[VKMapImageCanvas mapModelLabelsDidLayout:]
  -[VKMapImageCanvas resetCameraController]
  -[VKMapImageCanvas clearScene]
  -[VKMapImageCanvas initWithMapEngine:]
  -[VKMapImageCanvas setMapType:]


VKInternalIconManager : NSObject
  // class methods
  +[VKInternalIconManager convertSizeGroup:]
  +[VKInternalIconManager convertCalloutShape:]
  +[VKInternalIconManager convertGrlSizeGroup:]

  // instance methods
  -[VKInternalIconManager imageForStyleAttributes:withStylesheetName:contentScale:sizeGroup:modifiers:]
  -[VKInternalIconManager init]
  -[VKInternalIconManager darkVariant]
  -[VKInternalIconManager .cxx_construct]
  -[VKInternalIconManager dealloc]
  -[VKInternalIconManager .cxx_destruct]
  -[VKInternalIconManager setIsCachingAtlases:]
  -[VKInternalIconManager init:stylesheetVendor:]
  -[VKInternalIconManager imageForStyleAttributes:styleManager:contentScale:sizeGroup:modifiers:]
  -[VKInternalIconManager isCachingAtlases]
  -[VKInternalIconManager imageForName:contentScale:sizeGroup:modifiers:]
  -[VKInternalIconManager purge]
  -[VKInternalIconManager imageForIconID:contentScale:sizeGroup:modifiers:]
  -[VKInternalIconManager imageForDataID:text:contentScale:sizeGroup:modifiers:]
  -[VKInternalIconManager styleAttributeTransitSystemTypeKey]
  -[VKInternalIconManager styleAttributeTransitTypeKey]
  -[VKInternalIconManager imageForKey:value:contentScale:sizeGroup:modifiers:]
  -[VKInternalIconManager imageForImageSourceKey:]
  -[VKInternalIconManager trafficIncidentTypeKey]


VKDebugTree : NSObject
  // instance methods
  -[VKDebugTree .cxx_construct]
  -[VKDebugTree dealloc]
  -[VKDebugTree .cxx_destruct]
  -[VKDebugTree logTree]
  -[VKDebugTree setOptions:]
  -[VKDebugTree populateData:]
  -[VKDebugTree internalData]
  -[VKDebugTree _outputTree:]
  -[VKDebugTree _serializeValue:]
  -[VKDebugTree _deserializeValue:]
  -[VKDebugTree _serializeProperty:]
  -[VKDebugTree _serializeNode:]
  -[VKDebugTree _deserializeNode:]
  -[VKDebugTree _deserializeProperty:]
  -[VKDebugTree serializeTree]
  -[VKDebugTree deserializeTree:]
  -[VKDebugTree setOption:value:]
  -[VKDebugTree _populateData]
  -[VKDebugTree enableAllOptions]
  -[VKDebugTree disableAllOptions]
  -[VKDebugTree replaceInternalData:]
  -[VKDebugTree serializeZippedTree]
  -[VKDebugTree deserializeZippedTree:]
  -[VKDebugTree nodes]
  -[VKDebugTree printTree]


VKLabelExclusionRegion : NSObject <NSSecureCoding>
 @property  unsigned int type
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rect

  // class methods
  +[VKLabelExclusionRegion supportsSecureCoding]

  // instance methods
  -[VKLabelExclusionRegion rect]
  -[VKLabelExclusionRegion encodeWithCoder:]
  -[VKLabelExclusionRegion type]
  -[VKLabelExclusionRegion initWithCoder:]
  -[VKLabelExclusionRegion initWithRect:]


VKAnnotationTrackingCameraController : VKCameraController
 @property  {?=BdBB} behavior
 @property  long long headingAnimationDisplayRate
 @property  BOOL hasUserSpecifiedZoomLevel
 @property  BOOL shouldForceZoomToFit
 @property  <VKTrackableAnnotation> *annotation
 @property  BOOL trackingHeading

  // instance methods
  -[VKAnnotationTrackingCameraController setGesturing:]
  -[VKAnnotationTrackingCameraController setBehavior:]
  -[VKAnnotationTrackingCameraController annotation]
  -[VKAnnotationTrackingCameraController isAnimating]
  -[VKAnnotationTrackingCameraController behavior]
  -[VKAnnotationTrackingCameraController .cxx_construct]
  -[VKAnnotationTrackingCameraController dealloc]
  -[VKAnnotationTrackingCameraController initWithMapDataAccess:animationRunner:runLoopController:cameraDelegate:]
  -[VKAnnotationTrackingCameraController resumeAnimation]
  -[VKAnnotationTrackingCameraController isTrackingHeading]
  -[VKAnnotationTrackingCameraController observeValueForKeyPath:ofObject:change:context:]
  -[VKAnnotationTrackingCameraController stopTrackingAnnotation]
  -[VKAnnotationTrackingCameraController setHasUserSpecifiedZoomLevel:]
  -[VKAnnotationTrackingCameraController setHeadingAnimationDisplayRate:]
  -[VKAnnotationTrackingCameraController pauseAnimation]
  -[VKAnnotationTrackingCameraController startTrackingAnnotation:trackHeading:animated:duration:timingFunction:]
  -[VKAnnotationTrackingCameraController _goToAnnotationAnimated:duration:timingFunction:isInitial:]
  -[VKAnnotationTrackingCameraController _rotateToHeadingAnimated:duration:]
  -[VKAnnotationTrackingCameraController updateFramerate]
  -[VKAnnotationTrackingCameraController shouldForceZoomToFit]
  -[VKAnnotationTrackingCameraController headingAnimationDisplayRate]
  -[VKAnnotationTrackingCameraController hasUserSpecifiedZoomLevel]


VKPolylinePath : NSObject
 @property  unsigned char trafficSpeed
 @property  ^{Matrix<float points
 @property  unsigned int pointCount
 @property  {PolylineCoordinate=If} routeStart
 @property  {PolylineCoordinate=If} routeEnd
 @property  BOOL hasCompletedMapMatching
 @property  BOOL isMapMatched
 @property  GEOComposedRouteSection *section
 @property  GEOSnappedRoutePath *snappedPath
 @property  double startDistance

  // instance methods
  -[VKPolylinePath section]
  -[VKPolylinePath .cxx_construct]
  -[VKPolylinePath dealloc]
  -[VKPolylinePath .cxx_destruct]
  -[VKPolylinePath points]
  -[VKPolylinePath hasCompletedMapMatching]
  -[VKPolylinePath routeEnd]
  -[VKPolylinePath setTrafficSpeed:]
  -[VKPolylinePath trafficSpeed]
  -[VKPolylinePath startDistance]
  -[VKPolylinePath isMapMatched]
  -[VKPolylinePath initWithOverlay:section:]
  -[VKPolylinePath initWithOverlay:section:routeStartIndex:routeEndIndex:]
  -[VKPolylinePath assignTo:withSegment:]
  -[VKPolylinePath updateDistances:]
  -[VKPolylinePath setRouteStart:]
  -[VKPolylinePath setRouteEnd:]
  -[VKPolylinePath assignPoints:count:]
  -[VKPolylinePath initWithOverlay:snappedPath:]
  -[VKPolylinePath splitTrafficSegmentationAndAddTo:with:shouldSnap:]
  -[VKPolylinePath routeStart]
  -[VKPolylinePath snappedPath]
  -[VKPolylinePath setStartDistance:]
  -[VKPolylinePath pointCount]


VKTransitPolylinePath : VKPolylinePath
 @property  double vertexEqualityTolerance

  // instance methods
  -[VKTransitPolylinePath initWithOverlay:section:points:pointCount:reversePoints:transform:routeStartIndex:routeEndIndex:lineID:tileZ:vertexPrecision:]
  -[VKTransitPolylinePath vertexEqualityTolerance]
  -[VKTransitPolylinePath initWithOverlay:section:points:pointCount:reversePoints:transform:routeStartIndex:routeEndIndex:lineID:]


VKTransitStationPolylinePath : VKPolylinePath
  // instance methods
  -[VKTransitStationPolylinePath initWithOverlay:section:points:pointCount:routeStartIndex:routeEndIndex:]


VKMuninRoad : NSObject
 @property  NSString *roadName

  // instance methods
  -[VKMuninRoad dealloc]
  -[VKMuninRoad roadName]
  -[VKMuninRoad initWithMuninRoadEdge:localize:]
  -[VKMuninRoad isEqual:]
  -[VKMuninRoad initWithLocalizedName:]


VKNavigationPuck : NSObject <VKTrackableAnnotationPresentation>
 @property  <VKAnnotation> *annotation
 @property  {?=dd} presentationCoordinate
 @property  double presentationCourse
 @property  int mode
 @property  BOOL tracking
 @property  BOOL animatingToCoordinate
 @property  BOOL showCourse
 @property  BOOL stale
 @property  float scale
 @property  BOOL enabled
 @property  BOOL animatingAccuracy
 @property  double presentationAccuracy
 @property  double minimumAccuracy
 @property  {VKEdgeInsets=ffff} annotationTrackingEdgeInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKNavigationPuck runAnimation:]
  -[VKNavigationPuck mode]
  -[VKNavigationPuck annotation]
  -[VKNavigationPuck isAnimatingAccuracy]
  -[VKNavigationPuck enabled]
  -[VKNavigationPuck setAnnotation:]
  -[VKNavigationPuck presentationCoordinate]
  -[VKNavigationPuck setTracking:]
  -[VKNavigationPuck setAnimatingAccuracy:]
  -[VKNavigationPuck presentationCourse]
  -[VKNavigationPuck annotationTrackingEdgeInsets]
  -[VKNavigationPuck setPresentationCoordinate:]
  -[VKNavigationPuck destroyAnimationRunner]
  -[VKNavigationPuck setScale:]
  -[VKNavigationPuck dealloc]
  -[VKNavigationPuck presentationAccuracy]
  -[VKNavigationPuck setPresentationCourse:]
  -[VKNavigationPuck tracking]
  -[VKNavigationPuck setAnimatingToCoordinate:]
  -[VKNavigationPuck setMode:]
  -[VKNavigationPuck minimumAccuracy]
  -[VKNavigationPuck animatingToCoordinate]
  -[VKNavigationPuck puck]
  -[VKNavigationPuck setPresentationAccuracy:]
  -[VKNavigationPuck setEnabled:]
  -[VKNavigationPuck showCourse]
  -[VKNavigationPuck stale]
  -[VKNavigationPuck setStale:]
  -[VKNavigationPuck setShowCourse:]
  -[VKNavigationPuck scale]
  -[VKNavigationPuck initWithAnimationRunner:]


VKPlatform : NSObject
 @property  BOOL roadsWithSimpleLineMeshesAvailable
 @property  unsigned int tilePrefetchNumberOfScreens
 @property  BOOL supportsHiResRTT
 @property  BOOL isPad
 @property  BOOL shouldDrawWhenReady
 @property  BOOL shouldStyleLabelsInParallel
 @property  BOOL canMakeSharingThumbnails
 @property  BOOL supportsBuildingShadows
 @property  BOOL supportsBuildingStrokes
 @property  BOOL supports3DBuildingStrokes
 @property  BOOL supportsHiResBuildings
 @property  BOOL supports3DBuildings
 @property  BOOL supportsPerFragmentLighting
 @property  BOOL supportsCoastlineGlows
 @property  BOOL proceduralRoadAlpha
 @property  BOOL useCheapTrafficShader
 @property  unsigned long memorySize
 @property  unsigned char tileDecodeQueueWidth
 @property  unsigned char processingQueueWidth
 @property  BOOL lowPerformanceDevice
 @property  double routeLineSimplificationEpsilon
 @property  BOOL supportsARMode

  // class methods
  +[VKPlatform sharedPlatform]

  // instance methods
  -[VKPlatform isPad]
  -[VKPlatform init]
  -[VKPlatform lowPerformanceDevice]
  -[VKPlatform tileMaximumLimit:]
  -[VKPlatform _calculateMemSize]
  -[VKPlatform routeLineSimplificationEpsilon]
  -[VKPlatform supportsHiResBuildings]
  -[VKPlatform memorySize]
  -[VKPlatform dealloc]
  -[VKPlatform shouldStyleLabelsInParallel]
  -[VKPlatform supports3DBuildings]
  -[VKPlatform tileDecodeQueueWidth]
  -[VKPlatform supportsPerFragmentLighting]
  -[VKPlatform processingQueueWidth]
  -[VKPlatform supports3DBuildingStrokes]
  -[VKPlatform shouldDrawWhenReady]
  -[VKPlatform supportsHiResRTT]
  -[VKPlatform proceduralRoadAlpha]
  -[VKPlatform useCheapTrafficShader]
  -[VKPlatform supportsCoastlineGlows]
  -[VKPlatform _determineHardware]
  -[VKPlatform supportsBuildingShadows]
  -[VKPlatform supportsBuildingStrokes]
  -[VKPlatform roadsWithSimpleLineMeshesAvailable]
  -[VKPlatform tilePrefetchNumberOfScreens]
  -[VKPlatform supportsARMode]
  -[VKPlatform canMakeSharingThumbnails]


VKPolylineGroupOverlay : NSObject <VKRouteOverlay>
 @property  NSSet *polylines
 @property  VKPolylineOverlay *selectedPolyline
 @property  VKPolylineOverlay *focusedPolyline
 @property  GEOMapRegion *boundingMapRegion
 @property  {?=dd} coordinate
 @property  BOOL containsTransit
 @property  BOOL showTraffic
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKPolylineGroupOverlay coordinate]
  -[VKPolylineGroupOverlay dealloc]
  -[VKPolylineGroupOverlay addPolyline:]
  -[VKPolylineGroupOverlay setShowTraffic:]
  -[VKPolylineGroupOverlay boundingMapRegion]
  -[VKPolylineGroupOverlay selectedPolyline]
  -[VKPolylineGroupOverlay polylines]
  -[VKPolylineGroupOverlay removeObserver:]
  -[VKPolylineGroupOverlay showTraffic]
  -[VKPolylineGroupOverlay containsTransit]
  -[VKPolylineGroupOverlay addObserver:]
  -[VKPolylineGroupOverlay _updateBoundingMapRegion]
  -[VKPolylineGroupOverlay _updateContainsTransit]
  -[VKPolylineGroupOverlay setSelectedPolyline:]
  -[VKPolylineGroupOverlay setFocusedPolyline:]
  -[VKPolylineGroupOverlay removePolyline:]
  -[VKPolylineGroupOverlay focusedPolyline]


VKNotificationObserver : NSObject
  // instance methods
  -[VKNotificationObserver _receivedLocalChangedNotification]
  -[VKNotificationObserver .cxx_construct]
  -[VKNotificationObserver dealloc]
  -[VKNotificationObserver .cxx_destruct]
  -[VKNotificationObserver initWithTarget:taskContext:]
  -[VKNotificationObserver _receivedMemoryNotification]
  -[VKNotificationObserver _receivedFlushTileCachesNotification]


VKIconModifiers : NSObject
 @property  BOOL nightMode
 @property  BOOL transitMode
 @property  BOOL navMode
 @property  BOOL interactive
 @property  BOOL searchResult
 @property  long long zoom
 @property  unsigned long variant
 @property  unsigned long secondaryVariant
 @property  unsigned long countryCode

  // instance methods
  -[VKIconModifiers setSearchResult:]
  -[VKIconModifiers setZoom:]
  -[VKIconModifiers setInteractive:]
  -[VKIconModifiers zoom]
  -[VKIconModifiers init]
  -[VKIconModifiers setVariant:]
  -[VKIconModifiers .cxx_construct]
  -[VKIconModifiers .cxx_destruct]
  -[VKIconModifiers navMode]
  -[VKIconModifiers variant]
  -[VKIconModifiers setTransitLineColor:]
  -[VKIconModifiers countryCode]
  -[VKIconModifiers nightMode]
  -[VKIconModifiers setNightMode:]
  -[VKIconModifiers setGlyphOnly:]
  -[VKIconModifiers setNavMode:]
  -[VKIconModifiers setTransitMode:]
  -[VKIconModifiers setCountryCode:]
  -[VKIconModifiers isSearchResult]
  -[VKIconModifiers transitMode]
  -[VKIconModifiers secondaryVariant]
  -[VKIconModifiers cppModifiers]
  -[VKIconModifiers setText:]
  -[VKIconModifiers initWithModifiers:]
  -[VKIconModifiers setSecondaryVariant:]
  -[VKIconModifiers interactive]


VKIconImage : NSObject
  // instance methods
  -[VKIconImage fillColor]
  -[VKIconImage imageSize]
  -[VKIconImage glyphColor]
  -[VKIconImage .cxx_construct]
  -[VKIconImage .cxx_destruct]
  -[VKIconImage contentScale]
  -[VKIconImage init:]
  -[VKIconImage image]
  -[VKIconImage opacity]
  -[VKIconImage calloutFillColor]
  -[VKIconImage haloColor]
  -[VKIconImage calloutHaloColor]
  -[VKIconImage isBalloonShape]
  -[VKIconImage calloutShape]
  -[VKIconImage calloutTextColor]


VKIconManager : NSObject
  // class methods
  +[VKIconManager sharedManager]

  // instance methods
  -[VKIconManager imageForStyleAttributes:withStylesheetName:contentScale:sizeGroup:modifiers:]
  -[VKIconManager init]
  -[VKIconManager darkVariant]
  -[VKIconManager .cxx_construct]
  -[VKIconManager dealloc]
  -[VKIconManager .cxx_destruct]
  -[VKIconManager setIsCachingAtlases:]
  -[VKIconManager imageForStyleAttributes:styleManager:contentScale:sizeGroup:modifiers:]
  -[VKIconManager isCachingAtlases]
  -[VKIconManager imageForName:contentScale:sizeGroup:modifiers:]
  -[VKIconManager purge]
  -[VKIconManager imageForIconID:contentScale:sizeGroup:modifiers:]
  -[VKIconManager imageForDataID:text:contentScale:sizeGroup:modifiers:]
  -[VKIconManager styleAttributeTransitSystemTypeKey]
  -[VKIconManager styleAttributeTransitTypeKey]
  -[VKIconManager imageForKey:value:contentScale:sizeGroup:modifiers:]
  -[VKIconManager imageForImageSourceKey:]
  -[VKIconManager trafficIncidentTypeKey]
  -[VKIconManager _internalIconManager]


LabelNavRouteContextObserverProxy : NSObject <VKRouteContextObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LabelNavRouteContextObserverProxy initWithRouteContextChangeObserver:]
  -[LabelNavRouteContextObserverProxy .cxx_construct]
  -[LabelNavRouteContextObserverProxy dealloc]
  -[LabelNavRouteContextObserverProxy .cxx_destruct]
  -[LabelNavRouteContextObserverProxy stopObserving:]
  -[LabelNavRouteContextObserverProxy startObserving:]
  -[LabelNavRouteContextObserverProxy routeContextStateDidChange:]


VKAnchorWrapper : NSObject <VKAnchorDelegate>
 @property  <MDRenderTarget> *displayLayer
 @property  {?=dd} coordinate
 @property  BOOL followsTerrain
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKAnchorWrapper layoutWithContext:]
  -[VKAnchorWrapper coordinate]
  -[VKAnchorWrapper .cxx_construct]
  -[VKAnchorWrapper dealloc]
  -[VKAnchorWrapper .cxx_destruct]
  -[VKAnchorWrapper setFollowsTerrain:]
  -[VKAnchorWrapper pointOffsetForDistanceOffset:]
  -[VKAnchorWrapper setDisplayLayer:]
  -[VKAnchorWrapper pointInLayer:bound:]
  -[VKAnchorWrapper updateIfNeeded]
  -[VKAnchorWrapper destroyAnchor]
  -[VKAnchorWrapper _anchorWithContext:]
  -[VKAnchorWrapper _updateCachedPoint]
  -[VKAnchorWrapper anchorWorldPointDidChange:]
  -[VKAnchorWrapper followsTerrain]
  -[VKAnchorWrapper displayLayer]


VKPuckAnimator : NSObject
 @property  GEORouteMatch *lastProjectedLocation
 @property  <VKPuckAnimatorTarget> *target
 @property  <VKPuckAnimatorDelegate> *delegate
 @property  double tracePlaybackSpeedMultiplier
 @property  unsigned long behavior

  // instance methods
  -[VKPuckAnimator detailedDescription]
  -[VKPuckAnimator setBehavior:]
  -[VKPuckAnimator pause]
  -[VKPuckAnimator init]
  -[VKPuckAnimator behavior]
  -[VKPuckAnimator resume]
  -[VKPuckAnimator target]
  -[VKPuckAnimator .cxx_construct]
  -[VKPuckAnimator updateLocation:routeMatch:]
  -[VKPuckAnimator dealloc]
  -[VKPuckAnimator setTarget:]
  -[VKPuckAnimator _step]
  -[VKPuckAnimator lastProjectedLocation]
  -[VKPuckAnimator updateVehicleHeading:]
  -[VKPuckAnimator stop]
  -[VKPuckAnimator setTracePlaybackSpeedMultiplier:]
  -[VKPuckAnimator tracePlaybackSpeedMultiplier]
  -[VKPuckAnimator setDelegate:]
  -[VKPuckAnimator setLastProjectedLocation:]
  -[VKPuckAnimator delegate]
  -[VKPuckAnimator start]


VKLabelMarkerFeatureHandle : NSObject
  // instance methods
  -[VKLabelMarkerFeatureHandle styleAttributes]
  -[VKLabelMarkerFeatureHandle tileX]
  -[VKLabelMarkerFeatureHandle tileY]
  -[VKLabelMarkerFeatureHandle tileZ]
  -[VKLabelMarkerFeatureHandle .cxx_construct]
  -[VKLabelMarkerFeatureHandle dealloc]
  -[VKLabelMarkerFeatureHandle featureType]
  -[VKLabelMarkerFeatureHandle tileStyle]
  -[VKLabelMarkerFeatureHandle featureIndex]
  -[VKLabelMarkerFeatureHandle initWithLabelMarkerHandle:]
  -[VKLabelMarkerFeatureHandle actualHandle]
  -[VKLabelMarkerFeatureHandle tileVersion]


VKLabelMarkerShield : NSObject
 @property  NSString *text
 @property  NSString *locale
 @property  long long type
 @property  {?=ffff} color

  // instance methods
  -[VKLabelMarkerShield locale]
  -[VKLabelMarkerShield dealloc]
  -[VKLabelMarkerShield text]
  -[VKLabelMarkerShield color]
  -[VKLabelMarkerShield type]
  -[VKLabelMarkerShield initWithImageKey:]


VKLabelMarker : VKFeatureMarker
 @property  BOOL isDragged
 @property  NSArray *shields
 @property  NSArray *transitSystems
 @property  NSArray *dataIconImageKeys
 @property  NSArray *iconImageKeys
 @property  NSArray *imageKeys
 @property  NSArray *relatedTexts
 @property  NSArray *relatedSubTexts

  // class methods
  +[VKLabelMarker markerWithLabelMarker:]

  // instance methods
  -[VKLabelMarker venueID]
  -[VKLabelMarker _bounds]
  -[VKLabelMarker sortKey]
  -[VKLabelMarker calloutAnchorPointWithSnapToPixels:]
  -[VKLabelMarker screenCollisionBounds]
  -[VKLabelMarker isLabelHitAtScreenPoint:selectableLabelsOnly:]
  -[VKLabelMarker debugAnchorPointString]
  -[VKLabelMarker isLeafCluster]
  -[VKLabelMarker clusterContentBounds]
  -[VKLabelMarker clusterFeatureAnnotations]
  -[VKLabelMarker isClusterChild]
  -[VKLabelMarker parentClusterLabelMarker]
  -[VKLabelMarker isVisible]
  -[VKLabelMarker trafficCamera]
  -[VKLabelMarker routeInfo]
  -[VKLabelMarker shields]
  -[VKLabelMarker coordinate]
  -[VKLabelMarker locale]
  -[VKLabelMarker featureHandles]
  -[VKLabelMarker venueLevelID]
  -[VKLabelMarker .cxx_construct]
  -[VKLabelMarker text]
  -[VKLabelMarker .cxx_destruct]
  -[VKLabelMarker relatedTexts]
  -[VKLabelMarker isFlyoverTour]
  -[VKLabelMarker isSelected]
  -[VKLabelMarker isTransitLine]
  -[VKLabelMarker relatedSubTexts]
  -[VKLabelMarker countFeatureIDs]
  -[VKLabelMarker setLabelPressed:]
  -[VKLabelMarker subtext]
  -[VKLabelMarker featureType]
  -[VKLabelMarker isTransit]
  -[VKLabelMarker incident]
  -[VKLabelMarker venueComponentID]
  -[VKLabelMarker isSelectable]
  -[VKLabelMarker isRouteAnnotation]
  -[VKLabelMarker transitSystems]
  -[VKLabelMarker venueBuildingID]
  -[VKLabelMarker isRouteEta]
  -[VKLabelMarker pickedLabelBalloonBehavior]
  -[VKLabelMarker labelMarkerImpl]
  -[VKLabelMarker businessID]
  -[VKLabelMarker featureAnnotation]
  -[VKLabelMarker selectionType]
  -[VKLabelMarker mapRegion]
  -[VKLabelMarker isCluster]
  -[VKLabelMarker animationID]
  -[VKLabelMarker isOnRoute]
  -[VKLabelMarker calloutAnchorRect]
  -[VKLabelMarker isTrafficIncident]
  -[VKLabelMarker routeAnnotations]
  -[VKLabelMarker dataIconImageKeys]
  -[VKLabelMarker clusterFeatureCount]
  -[VKLabelMarker venueFloorOrdinal]
  -[VKLabelMarker hasBusinessID]
  -[VKLabelMarker imageKeys]
  -[VKLabelMarker isDragged]
  -[VKLabelMarker initWithLabelMarkerPtr:]
  -[VKLabelMarker _calloutAnchorRect:]
  -[VKLabelMarker iconImageKeys]
  -[VKLabelMarker lateralCalloutAnchorRect]
  -[VKLabelMarker setIsDragged:]
  -[VKLabelMarker isAlongSelectedTransitLine]
  -[VKLabelMarker isTextVisible]
  -[VKLabelMarker isOneWayArrow]
  -[VKLabelMarker isTrafficCamera]
  -[VKLabelMarker isRouteWaypoint]
  -[VKLabelMarker isVenueButton]
  -[VKLabelMarker isTransitAccessPoint]
  -[VKLabelMarker featureIDs]
  -[VKLabelMarker venueLookInsideFloorOrdinal]
  -[VKLabelMarker hasVenueLookInsideFloorOrdinal]
  -[VKLabelMarker venueComponentType]
  -[VKLabelMarker positionOfInterest:zoom:]
  -[VKLabelMarker featureTile]
  -[VKLabelMarker waypointInfo]
  -[VKLabelMarker setIsPickedIconDrawnExternally:]
  -[VKLabelMarker elementCount]


VKNavContext : NSObject
 @property  GEOComposedRoute *route
 @property  GEORouteMatch *routeMatch
 @property  unsigned long currentStepIndex
 @property  unsigned long groupedManeuverCount
 @property  NSArray *groupedManeuverCounts
 @property  unsigned long navigationCameraHeadingOverride

  // instance methods
  -[VKNavContext setRouteMatch:]
  -[VKNavContext clearAdditionalRoutesToFrame]
  -[VKNavContext _notifyObserversStateChanged]
  -[VKNavContext updateWithNewRoute:currentStepIndex:]
  -[VKNavContext groupedManeuverCount]
  -[VKNavContext clearPointsToFrame]
  -[VKNavContext addPointToFrame:]
  -[VKNavContext route]
  -[VKNavContext init]
  -[VKNavContext enumeratePointsToFrameUsingBlock:]
  -[VKNavContext setNavigationCameraHeadingOverride:]
  -[VKNavContext navigationCameraHeadingOverride]
  -[VKNavContext addRouteToFrame:divergenceCoord:convergenceCoord:]
  -[VKNavContext currentStepIndex]
  -[VKNavContext enumerateAdditionalRoutesToFrameUsingBlock:]
  -[VKNavContext groupedManeuverCounts]
  -[VKNavContext setGroupedManeuverCounts:]
  -[VKNavContext .cxx_construct]
  -[VKNavContext dealloc]
  -[VKNavContext .cxx_destruct]
  -[VKNavContext routeMatch]
  -[VKNavContext setCurrentStepIndex:]
  -[VKNavContext removeObserver:]
  -[VKNavContext addObserver:]


VKAlternateRouteInfo : VKRouteInfo
 @property  {PolylineCoordinate=If} divergenceCoordinate
 @property  {PolylineCoordinate=If} convergenceCoordinate
 @property  unsigned char etaComparisionToMain

  // instance methods
  -[VKAlternateRouteInfo initWithComposedRoute:etaDescription:divergenceRouteCoordinate:convergenceRouteCoordinate:]
  -[VKAlternateRouteInfo divergenceCoordinate]
  -[VKAlternateRouteInfo convergenceCoordinate]
  -[VKAlternateRouteInfo .cxx_construct]
  -[VKAlternateRouteInfo setEtaComparisionToMain:]
  -[VKAlternateRouteInfo initWithComposedRoute:etaText:divergenceRouteCoordinate:convergenceRouteCoordinate:]
  -[VKAlternateRouteInfo etaComparisionToMain]


VKMuninMarker : NSObject
 @property  r^{CollectionPoint=Q{RigidTransform<double collectionPoint
 @property  BOOL canMoveToMarker
 @property  {?=ddd} coordinate
 @property  NSDate *collectionDate
 @property  unsigned long pointId
 @property  unsigned int buildId

  // instance methods
  -[VKMuninMarker initWithCollectionPoint:]
  -[VKMuninMarker collectionPoint]
  -[VKMuninMarker canMoveToMarker]
  -[VKMuninMarker coordinate]
  -[VKMuninMarker buildId]
  -[VKMuninMarker .cxx_construct]
  -[VKMuninMarker .cxx_destruct]
  -[VKMuninMarker pointId]
  -[VKMuninMarker initWithCoordinate:]
  -[VKMuninMarker collectionDate]


VKDynamicAnimation : VKAnimation
 @property  @? dynamicStepHandler

  // instance methods
  -[VKDynamicAnimation pause]
  -[VKDynamicAnimation init]
  -[VKDynamicAnimation stopAnimation:]
  -[VKDynamicAnimation resume]
  -[VKDynamicAnimation runsForever]
  -[VKDynamicAnimation dealloc]
  -[VKDynamicAnimation dynamicStepHandler]
  -[VKDynamicAnimation setRunsForever:]
  -[VKDynamicAnimation setDynamicStepHandler:]
  -[VKDynamicAnimation onTimerFired:]


VKPIcon : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasName
 @property  NSString *name
 @property  unsigned int atlasIndex
 @property  unsigned int quadIndex
 @property  BOOL hasAnchorPointX
 @property  unsigned int anchorPointX
 @property  BOOL hasAnchorPointY
 @property  unsigned int anchorPointY
 @property  BOOL hasIconRectX
 @property  unsigned int iconRectX
 @property  BOOL hasIconRectY
 @property  unsigned int iconRectY
 @property  BOOL hasIconRectWidth
 @property  unsigned int iconRectWidth
 @property  BOOL hasIconRectHeight
 @property  unsigned int iconRectHeight
 @property  BOOL hasMatchingStyleAttributeKey
 @property  unsigned int matchingStyleAttributeKey
 @property  BOOL hasMatchingStyleAttributeValue
 @property  int matchingStyleAttributeValue
 @property  BOOL hasMatchingStyleAttributeLongValue
 @property  unsigned long matchingStyleAttributeLongValue
 @property  BOOL hasSize
 @property  int size

  // instance methods
  -[VKPIcon copyWithZone:]
  -[VKPIcon setIconRectX:]
  -[VKPIcon hasIconRectX]
  -[VKPIcon setIconRectY:]
  -[VKPIcon hasSize]
  -[VKPIcon setAnchorPointX:]
  -[VKPIcon setHasAnchorPointX:]
  -[VKPIcon hasAnchorPointX]
  -[VKPIcon setAnchorPointY:]
  -[VKPIcon setHasAnchorPointY:]
  -[VKPIcon hasAnchorPointY]
  -[VKPIcon setHasIconRectX:]
  -[VKPIcon setHasIconRectY:]
  -[VKPIcon hasIconRectY]
  -[VKPIcon setIconRectWidth:]
  -[VKPIcon setHasIconRectWidth:]
  -[VKPIcon hasIconRectWidth]
  -[VKPIcon setIconRectHeight:]
  -[VKPIcon setHasIconRectHeight:]
  -[VKPIcon hasIconRectHeight]
  -[VKPIcon atlasIndex]
  -[VKPIcon setHasSize:]
  -[VKPIcon setMatchingStyleAttributeKey:]
  -[VKPIcon setHasMatchingStyleAttributeKey:]
  -[VKPIcon hasMatchingStyleAttributeKey]
  -[VKPIcon setMatchingStyleAttributeValue:]
  -[VKPIcon setHasMatchingStyleAttributeValue:]
  -[VKPIcon setAtlasIndex:]
  -[VKPIcon hasMatchingStyleAttributeValue]
  -[VKPIcon setMatchingStyleAttributeLongValue:]
  -[VKPIcon setHasMatchingStyleAttributeLongValue:]
  -[VKPIcon hasMatchingStyleAttributeLongValue]
  -[VKPIcon setQuadIndex:]
  -[VKPIcon anchorPointX]
  -[VKPIcon anchorPointY]
  -[VKPIcon iconRectWidth]
  -[VKPIcon iconRectHeight]
  -[VKPIcon matchingStyleAttributeKey]
  -[VKPIcon matchingStyleAttributeValue]
  -[VKPIcon matchingStyleAttributeLongValue]
  -[VKPIcon dealloc]
  -[VKPIcon size]
  -[VKPIcon hasName]
  -[VKPIcon name]
  -[VKPIcon readFrom:]
  -[VKPIcon writeTo:]
  -[VKPIcon isEqual:]
  -[VKPIcon setSize:]
  -[VKPIcon copyTo:]
  -[VKPIcon dictionaryRepresentation]
  -[VKPIcon mergeFrom:]
  -[VKPIcon setName:]
  -[VKPIcon quadIndex]
  -[VKPIcon iconRectX]
  -[VKPIcon iconRectY]


VKPolygonalItemGroup : NSObject
 @property  BOOL isFixedSize
 @property  {Matrix<float centroid
 @property  float tileZoom
 @property  r^{Matrix<float origin
 @property  r^{Matrix<float maxPoint
 @property  {Matrix<float size
 @property  unsigned int cullingMask
 @property  ^{vector<std::__1::shared_ptr<ggl::PolygonBase::CompressedMeshMesh> fillMeshes
 @property  NSOrderedSet *attributeSets
 @property  r^{unordered_set<unsigned long long featureIds

  // instance methods
  -[VKPolygonalItemGroup featureIds]
  -[VKPolygonalItemGroup initWithStyleQuery:tileZoom:fixedAroundCentroid:contentScale:]
  -[VKPolygonalItemGroup fillMeshes]
  -[VKPolygonalItemGroup commitRangesToFillRenderItemBatcher:forMeshAtIndex:cullingMask:featureIdPredicate:]
  -[VKPolygonalItemGroup tileZoom]
  -[VKPolygonalItemGroup didFinishAddingData]
  -[VKPolygonalItemGroup indexForGeoFeatureAttributes:]
  -[VKPolygonalItemGroup updateCachedStyles]
  -[VKPolygonalItemGroup centroid]
  -[VKPolygonalItemGroup commitRangesToVenueWallEndCapRenderItemBatcher:forMeshAtIndex:cullingMask:]
  -[VKPolygonalItemGroup clearRouteAttributes]
  -[VKPolygonalItemGroup willAddDataWithAccessor:]
  -[VKPolygonalItemGroup maxPoint]
  -[VKPolygonalItemGroup commitRangesToHorizontalVenueWallStrokeRenderItemBatcher:forMeshAtIndex:cullingMask:]
  -[VKPolygonalItemGroup commitRangesToStrokeRenderItemBatcher:forMeshAtIndex:cullingMask:featureIdPredicate:]
  -[VKPolygonalItemGroup canAcceptPolygon:]
  -[VKPolygonalItemGroup attributeSets]
  -[VKPolygonalItemGroup maxAttributeSetsPerGroup]
  -[VKPolygonalItemGroup commitRangesToVenueWallRenderItemBatcher:forMeshAtIndex:cullingMask:]
  -[VKPolygonalItemGroup isFixedSize]
  -[VKPolygonalItemGroup commitRangesToVerticalVenueWallStrokeRenderItemBatcher:forMeshAtIndex:cullingMask:]
  -[VKPolygonalItemGroup hasFeatureId:]
  -[VKPolygonalItemGroup cullingMask]
  -[VKPolygonalItemGroup setRouteAttributes:]
  -[VKPolygonalItemGroup styleQueries:]
  -[VKPolygonalItemGroup origin]
  -[VKPolygonalItemGroup .cxx_construct]
  -[VKPolygonalItemGroup dealloc]
  -[VKPolygonalItemGroup size]
  -[VKPolygonalItemGroup .cxx_destruct]


VKRouteWaypointInfo : NSObject
 @property  GEOComposedWaypoint *waypoint
 @property  GEOStyleAttributes *styleAttributes
 @property  unsigned long legIndex
 @property  BOOL needsRestyle
 @property  unsigned char type

  // class methods
  +[VKRouteWaypointInfo newRouteWaypointForWaypoint:legIndex:]

  // instance methods
  -[VKRouteWaypointInfo styleAttributes]
  -[VKRouteWaypointInfo initWithWaypoint:legIndex:waypointType:]
  -[VKRouteWaypointInfo needsRestyle]
  -[VKRouteWaypointInfo setNeedsRestyle:]
  -[VKRouteWaypointInfo dealloc]
  -[VKRouteWaypointInfo legIndex]
  -[VKRouteWaypointInfo type]
  -[VKRouteWaypointInfo waypoint]


VKPIconPack : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  unsigned int identifier
 @property  NSMutableArray *atlas
 @property  NSMutableArray *icons

  // instance methods
  -[VKPIconPack copyWithZone:]
  -[VKPIconPack iconsCount]
  -[VKPIconPack clearIcons]
  -[VKPIconPack atlas]
  -[VKPIconPack addIcons:]
  -[VKPIconPack atlasCount]
  -[VKPIconPack clearAtlas]
  -[VKPIconPack atlasAtIndex:]
  -[VKPIconPack iconsAtIndex:]
  -[VKPIconPack setIcons:]
  -[VKPIconPack dealloc]
  -[VKPIconPack icons]
  -[VKPIconPack setIdentifier:]
  -[VKPIconPack identifier]
  -[VKPIconPack readFrom:]
  -[VKPIconPack writeTo:]
  -[VKPIconPack isEqual:]
  -[VKPIconPack copyTo:]
  -[VKPIconPack dictionaryRepresentation]
  -[VKPIconPack mergeFrom:]
  -[VKPIconPack setAtlas:]
  -[VKPIconPack addAtlas:]


VKPTextureAtlas : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  NSData *texture
 @property  unsigned int quadWidth
 @property  unsigned int quadHeight

  // instance methods
  -[VKPTextureAtlas copyWithZone:]
  -[VKPTextureAtlas texture]
  -[VKPTextureAtlas setTexture:]
  -[VKPTextureAtlas setQuadWidth:]
  -[VKPTextureAtlas quadHeight]
  -[VKPTextureAtlas setQuadHeight:]
  -[VKPTextureAtlas dealloc]
  -[VKPTextureAtlas readFrom:]
  -[VKPTextureAtlas writeTo:]
  -[VKPTextureAtlas isEqual:]
  -[VKPTextureAtlas copyTo:]
  -[VKPTextureAtlas dictionaryRepresentation]
  -[VKPTextureAtlas mergeFrom:]
  -[VKPTextureAtlas quadWidth]


VKMapGestureCameraController : VKGestureCameraBehavior
  // instance methods
  -[VKMapGestureCameraController updatePan:lastScreenPoint:]
  -[VKMapGestureCameraController isPitchIncreasing]
  -[VKMapGestureCameraController updatePitch:translation:]
  -[VKMapGestureCameraController updateRotate:atScreenPoint:]
  -[VKMapGestureCameraController updatePitch:degrees:]
  -[VKMapGestureCameraController updateZoom:oldFactor:newFactor:]
  -[VKMapGestureCameraController beginPitch:]
  -[VKMapGestureCameraController positionClampedToCameraRestriction:]
  -[VKMapGestureCameraController positionClampedToCameraRestriction:delta:]


VKRunningCurve : NSObject
  // instance methods
  -[VKRunningCurve init]
  -[VKRunningCurve appendPosition:atTime:]
  -[VKRunningCurve stateAtTime:]
  -[VKRunningCurve hasStateAtTime:]
  -[VKRunningCurve .cxx_construct]
  -[VKRunningCurve dealloc]
  -[VKRunningCurve .cxx_destruct]
  -[VKRunningCurve reset]


VKPShield : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  NSString *identifier
 @property  NSMutableArray *variants
 @property  BOOL hasGenericShieldStyleInfo
 @property  VKPGenericShieldStyleInfo *genericShieldStyleInfo

  // instance methods
  -[VKPShield variants]
  -[VKPShield copyWithZone:]
  -[VKPShield setVariants:]
  -[VKPShield setGenericShieldStyleInfo:]
  -[VKPShield addVariants:]
  -[VKPShield variantsCount]
  -[VKPShield clearVariants]
  -[VKPShield variantsAtIndex:]
  -[VKPShield hasGenericShieldStyleInfo]
  -[VKPShield genericShieldStyleInfo]
  -[VKPShield dealloc]
  -[VKPShield setIdentifier:]
  -[VKPShield identifier]
  -[VKPShield readFrom:]
  -[VKPShield writeTo:]
  -[VKPShield isEqual:]
  -[VKPShield copyTo:]
  -[VKPShield dictionaryRepresentation]
  -[VKPShield mergeFrom:]


VKTestTileRequester : GEOTileRequester /System/Library/Frameworks/MediaToolbox.framework/MediaToolbox
  // class methods
  +[VKTestTileRequester tileProviderIdentifier]

  // instance methods
  -[VKTestTileRequester start]


VKPShieldPack : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  NSMutableArray *atlas
 @property  NSMutableArray *shields

  // instance methods
  -[VKPShieldPack copyWithZone:]
  -[VKPShieldPack atlas]
  -[VKPShieldPack atlasCount]
  -[VKPShieldPack clearAtlas]
  -[VKPShieldPack atlasAtIndex:]
  -[VKPShieldPack shields]
  -[VKPShieldPack setShields:]
  -[VKPShieldPack addShields:]
  -[VKPShieldPack shieldsCount]
  -[VKPShieldPack clearShields]
  -[VKPShieldPack shieldsAtIndex:]
  -[VKPShieldPack dealloc]
  -[VKPShieldPack readFrom:]
  -[VKPShieldPack writeTo:]
  -[VKPShieldPack isEqual:]
  -[VKPShieldPack copyTo:]
  -[VKPShieldPack dictionaryRepresentation]
  -[VKPShieldPack mergeFrom:]
  -[VKPShieldPack setAtlas:]
  -[VKPShieldPack addAtlas:]


VKPShieldVariant : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasAtlasIndex
 @property  unsigned int atlasIndex
 @property  BOOL hasQuadIndex
 @property  unsigned int quadIndex
 @property  BOOL hasMinDigits
 @property  unsigned int minDigits
 @property  BOOL hasMaxDigits
 @property  unsigned int maxDigits
 @property  BOOL hasTextBaseline
 @property  float textBaseline
 @property  BOOL hasCenterOffsetX
 @property  float centerOffsetX
 @property  BOOL hasFontName
 @property  NSString *fontName
 @property  BOOL hasFontSize
 @property  float fontSize
 @property  BOOL hasFontColor
 @property  {?=fIII} fontColor
 @property  BOOL hasTextStroke
 @property  {?={?=fIII}f} textStroke
 @property  BOOL hasTextShadow
 @property  {?={?=fIII}fff{?=b1b1}} textShadow
 @property  BOOL hasNonDigitFontName
 @property  NSString *nonDigitFontName
 @property  BOOL hasNonDigitFontSize
 @property  float nonDigitFontSize
 @property  unsigned long centerPointsCount
 @property  ^f centerPoints
 @property  unsigned long layersCount
 @property  ^{?=IiifI{?=b1b1b1b1b1}} layers
 @property  BOOL hasBackgroundColor
 @property  unsigned int backgroundColor
 @property  BOOL hasBorderColor
 @property  unsigned int borderColor
 @property  BOOL hasCapWidthLeft
 @property  float capWidthLeft
 @property  BOOL hasCapWidthRight
 @property  float capWidthRight
 @property  BOOL hasPaddingLeft
 @property  float paddingLeft
 @property  BOOL hasPaddingRight
 @property  float paddingRight
 @property  BOOL hasTextMaskColor
 @property  int textMaskColor
 @property  BOOL hasLineSpacing
 @property  float lineSpacing
 @property  BOOL hasNonDigitFontColor
 @property  {?=fIII} nonDigitFontColor

  // instance methods
  -[VKPShieldVariant fontName]
  -[VKPShieldVariant setFontName:]
  -[VKPShieldVariant copyWithZone:]
  -[VKPShieldVariant setBorderColor:]
  -[VKPShieldVariant setBackgroundColor:]
  -[VKPShieldVariant layers]
  -[VKPShieldVariant setFontSize:]
  -[VKPShieldVariant atlasIndex]
  -[VKPShieldVariant setAtlasIndex:]
  -[VKPShieldVariant setQuadIndex:]
  -[VKPShieldVariant fontSize]
  -[VKPShieldVariant setNonDigitFontName:]
  -[VKPShieldVariant clearLayers]
  -[VKPShieldVariant centerPointsCount]
  -[VKPShieldVariant clearCenterPoints]
  -[VKPShieldVariant centerPointAtIndex:]
  -[VKPShieldVariant addCenterPoint:]
  -[VKPShieldVariant layersCount]
  -[VKPShieldVariant layerAtIndex:]
  -[VKPShieldVariant setHasAtlasIndex:]
  -[VKPShieldVariant hasAtlasIndex]
  -[VKPShieldVariant hasQuadIndex]
  -[VKPShieldVariant setHasQuadIndex:]
  -[VKPShieldVariant setMinDigits:]
  -[VKPShieldVariant setHasMinDigits:]
  -[VKPShieldVariant hasMinDigits]
  -[VKPShieldVariant setMaxDigits:]
  -[VKPShieldVariant setHasMaxDigits:]
  -[VKPShieldVariant hasMaxDigits]
  -[VKPShieldVariant setTextBaseline:]
  -[VKPShieldVariant setHasTextBaseline:]
  -[VKPShieldVariant hasTextBaseline]
  -[VKPShieldVariant setCenterOffsetX:]
  -[VKPShieldVariant setHasCenterOffsetX:]
  -[VKPShieldVariant hasCenterOffsetX]
  -[VKPShieldVariant hasFontName]
  -[VKPShieldVariant setHasFontSize:]
  -[VKPShieldVariant hasFontSize]
  -[VKPShieldVariant setFontColor:]
  -[VKPShieldVariant setHasFontColor:]
  -[VKPShieldVariant hasFontColor]
  -[VKPShieldVariant setTextStroke:]
  -[VKPShieldVariant setHasTextStroke:]
  -[VKPShieldVariant hasTextStroke]
  -[VKPShieldVariant setTextShadow:]
  -[VKPShieldVariant setHasTextShadow:]
  -[VKPShieldVariant hasTextShadow]
  -[VKPShieldVariant hasNonDigitFontName]
  -[VKPShieldVariant setNonDigitFontSize:]
  -[VKPShieldVariant setHasNonDigitFontSize:]
  -[VKPShieldVariant hasNonDigitFontSize]
  -[VKPShieldVariant centerPoints]
  -[VKPShieldVariant setCenterPoints:count:]
  -[VKPShieldVariant setLayers:count:]
  -[VKPShieldVariant setHasBackgroundColor:]
  -[VKPShieldVariant setHasBorderColor:]
  -[VKPShieldVariant hasBorderColor]
  -[VKPShieldVariant setCapWidthLeft:]
  -[VKPShieldVariant setHasCapWidthLeft:]
  -[VKPShieldVariant hasCapWidthLeft]
  -[VKPShieldVariant setCapWidthRight:]
  -[VKPShieldVariant setHasCapWidthRight:]
  -[VKPShieldVariant minDigits]
  -[VKPShieldVariant hasCapWidthRight]
  -[VKPShieldVariant setHasPaddingLeft:]
  -[VKPShieldVariant hasPaddingLeft]
  -[VKPShieldVariant setHasPaddingRight:]
  -[VKPShieldVariant hasPaddingRight]
  -[VKPShieldVariant textMaskColor]
  -[VKPShieldVariant setTextMaskColor:]
  -[VKPShieldVariant setHasTextMaskColor:]
  -[VKPShieldVariant hasTextMaskColor]
  -[VKPShieldVariant setHasLineSpacing:]
  -[VKPShieldVariant hasLineSpacing]
  -[VKPShieldVariant setNonDigitFontColor:]
  -[VKPShieldVariant setHasNonDigitFontColor:]
  -[VKPShieldVariant hasNonDigitFontColor]
  -[VKPShieldVariant textBaseline]
  -[VKPShieldVariant centerOffsetX]
  -[VKPShieldVariant textStroke]
  -[VKPShieldVariant textShadow]
  -[VKPShieldVariant nonDigitFontName]
  -[VKPShieldVariant nonDigitFontSize]
  -[VKPShieldVariant capWidthLeft]
  -[VKPShieldVariant capWidthRight]
  -[VKPShieldVariant nonDigitFontColor]
  -[VKPShieldVariant dealloc]
  -[VKPShieldVariant backgroundColor]
  -[VKPShieldVariant setPaddingRight:]
  -[VKPShieldVariant setPaddingLeft:]
  -[VKPShieldVariant lineSpacing]
  -[VKPShieldVariant hasBackgroundColor]
  -[VKPShieldVariant readFrom:]
  -[VKPShieldVariant borderColor]
  -[VKPShieldVariant setLineSpacing:]
  -[VKPShieldVariant paddingLeft]
  -[VKPShieldVariant writeTo:]
  -[VKPShieldVariant isEqual:]
  -[VKPShieldVariant paddingRight]
  -[VKPShieldVariant copyTo:]
  -[VKPShieldVariant dictionaryRepresentation]
  -[VKPShieldVariant mergeFrom:]
  -[VKPShieldVariant addLayer:]
  -[VKPShieldVariant quadIndex]
  -[VKPShieldVariant maxDigits]
  -[VKPShieldVariant fontColor]


VKTrafficIncidentFeature : VKTrafficFeature
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *uniqueString
 @property  long long type
 @property  BOOL isNotForDisplay
 @property  long long routeRelevance
 @property  BOOL isOnSelectedRoute
 @property  NSString *street
 @property  NSString *crossStreet
 @property  NSString *info
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSDate *lastUpdatedDate
 @property  GEOFormattedString *effectiveTimeRange
 @property  NSArray *restrictionDetails
 @property  GEOFormattedString *formattedTitle
 @property  GEOFormattedString *formattedSubtitle
 @property  long long significance

  // class methods
  +[VKTrafficIncidentFeature stringForIncidentType:]
  +[VKTrafficIncidentFeature stringForRouteRelevance:]
  +[VKTrafficIncidentFeature stringForIncidentSignificance:]
  +[VKTrafficIncidentFeature incidentTypeForGeoRouteIncident:]

  // instance methods
  -[VKTrafficIncidentFeature copyWithZone:]
  -[VKTrafficIncidentFeature street]
  -[VKTrafficIncidentFeature hasSameIdentifier:]
  -[VKTrafficIncidentFeature startDate]
  -[VKTrafficIncidentFeature uniqueString]
  -[VKTrafficIncidentFeature initWithIncidentData:worldPoint:]
  -[VKTrafficIncidentFeature significance]
  -[VKTrafficIncidentFeature info]
  -[VKTrafficIncidentFeature dealloc]
  -[VKTrafficIncidentFeature isNotForDisplay]
  -[VKTrafficIncidentFeature isOnSelectedRoute]
  -[VKTrafficIncidentFeature formattedSubtitle]
  -[VKTrafficIncidentFeature formattedTitle]
  -[VKTrafficIncidentFeature endDate]
  -[VKTrafficIncidentFeature crossStreet]
  -[VKTrafficIncidentFeature title]
  -[VKTrafficIncidentFeature type]
  -[VKTrafficIncidentFeature setRouteRelevance:]
  -[VKTrafficIncidentFeature populateDebugNode:]
  -[VKTrafficIncidentFeature effectiveTimeRange]
  -[VKTrafficIncidentFeature routeRelevance]
  -[VKTrafficIncidentFeature subtitle]
  -[VKTrafficIncidentFeature initWithRouteIncident:routeOffsetInMeters:routeRelevance:onRoute:]
  -[VKTrafficIncidentFeature setIsOnSelectedRoute:]
  -[VKTrafficIncidentFeature lastUpdatedDate]
  -[VKTrafficIncidentFeature initWithIncidentType:uniqueIdentifier:position:routeRelevance:laneType:significance:onRoute:]
  -[VKTrafficIncidentFeature restrictionDetails]


VKQuickDynamicAnimation : VKDynamicAnimation
 @property  double lastTimestamp

  // instance methods
  -[VKQuickDynamicAnimation setLastTimestamp:]
  -[VKQuickDynamicAnimation onTimerFired:]
  -[VKQuickDynamicAnimation lastTimestamp]


VKMuninCameraController : VKCameraController <VKGesturingCameraController>
 @property  BOOL virtualParallaxEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKMuninCameraController pitch]
  -[VKMuninCameraController virtualParallaxEnabled]
  -[VKMuninCameraController currentZoomLevelForTileSize:]
  -[VKMuninCameraController restoreViewportFromInfo:]
  -[VKMuninCameraController centerCoordinate]
  -[VKMuninCameraController isPathAnimationRunning]
  -[VKMuninCameraController stopAnimationsExceptBump]
  -[VKMuninCameraController viewportInfo]
  -[VKMuninCameraController setCamera:]
  -[VKMuninCameraController stopAnimations]
  -[VKMuninCameraController altitude]
  -[VKMuninCameraController heading]
  -[VKMuninCameraController setVirtualParallaxEnabled:]
  -[VKMuninCameraController moveAlongPath:tap:preloadedViews:continued:]
  -[VKMuninCameraController moveToPoint:withHeading:withPitch:animated:completionHandler:]
  -[VKMuninCameraController zoomAnimated:completion:]
  -[VKMuninCameraController .cxx_construct]
  -[VKMuninCameraController initWithTaskContext:mapDataAccess:animationRunner:runLoopController:cameraDelegate:muninSceneLogic:]
  -[VKMuninCameraController runBumpAnimation:targetPoint:completionHandler:]
  -[VKMuninCameraController .cxx_destruct]
  -[VKMuninCameraController cancelPendingMoveExceptBump]
  -[VKMuninCameraController stopPanningAtPoint:]
  -[VKMuninCameraController selectLabelMarker:completion:]
  -[VKMuninCameraController zoom:withFocusPoint:completionHandler:]
  -[VKMuninCameraController willStopPanningAtPoint:withVelocity:]
  -[VKMuninCameraController updateCurrentPointView:]
  -[VKMuninCameraController setCameraFrame:]
  -[VKMuninCameraController updateWithTimestamp:]
  -[VKMuninCameraController startRotatingWithFocusPoint:]
  -[VKMuninCameraController setCurrentSegment:]
  -[VKMuninCameraController _verticalFieldOfView:]
  -[VKMuninCameraController canZoomInForTileSize:]
  -[VKMuninCameraController tapAtPoint:]
  -[VKMuninCameraController updateRotationWithFocusPoint:newValue:]
  -[VKMuninCameraController zoomLevelAdjustmentForTileSize:]
  -[VKMuninCameraController _pitchForScreenPoint:]
  -[VKMuninCameraController stopPitchingWithFocusPoint:]
  -[VKMuninCameraController animatePath:withTarget:lookAtTarget:constantLod:prePruneData:completionHandler:]
  -[VKMuninCameraController maximumZoomLevelForTileSize:]
  -[VKMuninCameraController isAnimationsRunning]
  -[VKMuninCameraController updatePanWithTranslation:]
  -[VKMuninCameraController setWidestFieldOfView:]
  -[VKMuninCameraController stopPinchingWithFocusPoint:]
  -[VKMuninCameraController topDownMinimumZoomLevelForTileSize:]
  -[VKMuninCameraController _zoomRubberBandFov:]
  -[VKMuninCameraController screenPointWithOffset:]
  -[VKMuninCameraController updatePinchWithFocusPoint:oldFactor:newFactor:]
  -[VKMuninCameraController stopRotatingWithFocusPoint:]
  -[VKMuninCameraController isAnimationsRunningExceptBump]
  -[VKMuninCameraController _horizontalFieldOfView:]
  -[VKMuninCameraController updatePitchWithFocusPoint:translation:]
  -[VKMuninCameraController currentPoint]
  -[VKMuninCameraController _setHeading:]
  -[VKMuninCameraController setCurrentPoint:]
  -[VKMuninCameraController startPanningAtPoint:panAtStartPoint:]
  -[VKMuninCameraController pathAnimationComplete:]
  -[VKMuninCameraController cancelPendingMove]
  -[VKMuninCameraController startPinchingWithFocusPoint:]
  -[VKMuninCameraController animatePath:animator:preloadedRequiredViews:prePruneData:completionHandler:]
  -[VKMuninCameraController minimumZoomLevelForTileSize:]
  -[VKMuninCameraController setCurrentPoint:secondaryPoint:]
  -[VKMuninCameraController startPitchingWithFocusPoint:]
  -[VKMuninCameraController isBumpAnimationRunning]
  -[VKMuninCameraController zoomAnimatedWithDuration:duration:completion:]
  -[VKMuninCameraController canZoomOutForTileSize:]
  -[VKMuninCameraController setCenterCoordinate:altitude:yaw:pitch:duration:animationStyle:timingCurve:completion:]
  -[VKMuninCameraController pathAnimationPrepared:tap:preloadedViews:]
  -[VKMuninCameraController transferGestureState:]
  -[VKMuninCameraController updatePitchWithFocusPoint:degrees:]


VKRouteLineObserver : NSObject <VKRouteLineObserverProtocol>
  // instance methods
  -[VKRouteLineObserver dealloc]
  -[VKRouteLineObserver initWithTransitSupport:andRouteLine:]
  -[VKRouteLineObserver routeLineDidUpdateSections:]


VKRouteContextObserverThunk : NSObject <VKRouteContextObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKRouteContextObserverThunk .cxx_construct]
  -[VKRouteContextObserverThunk dealloc]
  -[VKRouteContextObserverThunk .cxx_destruct]
  -[VKRouteContextObserverThunk initWithRouteContext:transitSupport:]
  -[VKRouteContextObserverThunk routeContextStateDidChange:]


VKPGenericShieldStyleInfo : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasStyle
 @property  int style
 @property  BOOL hasBackgroundColor
 @property  unsigned int backgroundColor
 @property  BOOL hasBorderColor
 @property  unsigned int borderColor
 @property  BOOL hasTextColor
 @property  unsigned int textColor
 @property  BOOL hasTextStrokeSize
 @property  float textStrokeSize
 @property  BOOL hasTextStrokeColor
 @property  unsigned int textStrokeColor
 @property  unsigned long textDropShadowOffsetsCount
 @property  ^f textDropShadowOffsets
 @property  BOOL hasTextDropShadowSize
 @property  float textDropShadowSize
 @property  BOOL hasTextDropShadowColor
 @property  unsigned int textDropShadowColor

  // instance methods
  -[VKPGenericShieldStyleInfo copyWithZone:]
  -[VKPGenericShieldStyleInfo setBorderColor:]
  -[VKPGenericShieldStyleInfo setBackgroundColor:]
  -[VKPGenericShieldStyleInfo setHasStyle:]
  -[VKPGenericShieldStyleInfo setHasBackgroundColor:]
  -[VKPGenericShieldStyleInfo setHasBorderColor:]
  -[VKPGenericShieldStyleInfo hasBorderColor]
  -[VKPGenericShieldStyleInfo dealloc]
  -[VKPGenericShieldStyleInfo backgroundColor]
  -[VKPGenericShieldStyleInfo textDropShadowOffsetsCount]
  -[VKPGenericShieldStyleInfo clearTextDropShadowOffsets]
  -[VKPGenericShieldStyleInfo textDropShadowOffsetAtIndex:]
  -[VKPGenericShieldStyleInfo addTextDropShadowOffset:]
  -[VKPGenericShieldStyleInfo setHasTextColor:]
  -[VKPGenericShieldStyleInfo setTextStrokeSize:]
  -[VKPGenericShieldStyleInfo setHasTextStrokeSize:]
  -[VKPGenericShieldStyleInfo hasTextStrokeSize]
  -[VKPGenericShieldStyleInfo hasTextStrokeColor]
  -[VKPGenericShieldStyleInfo setTextStrokeColor:]
  -[VKPGenericShieldStyleInfo setHasTextStrokeColor:]
  -[VKPGenericShieldStyleInfo textDropShadowOffsets]
  -[VKPGenericShieldStyleInfo setTextDropShadowOffsets:count:]
  -[VKPGenericShieldStyleInfo setTextDropShadowSize:]
  -[VKPGenericShieldStyleInfo setHasTextDropShadowSize:]
  -[VKPGenericShieldStyleInfo hasTextDropShadowSize]
  -[VKPGenericShieldStyleInfo textDropShadowColor]
  -[VKPGenericShieldStyleInfo setTextDropShadowColor:]
  -[VKPGenericShieldStyleInfo setHasTextDropShadowColor:]
  -[VKPGenericShieldStyleInfo hasTextDropShadowColor]
  -[VKPGenericShieldStyleInfo textStrokeSize]
  -[VKPGenericShieldStyleInfo textStrokeColor]
  -[VKPGenericShieldStyleInfo textDropShadowSize]
  -[VKPGenericShieldStyleInfo textColor]
  -[VKPGenericShieldStyleInfo hasStyle]
  -[VKPGenericShieldStyleInfo hasBackgroundColor]
  -[VKPGenericShieldStyleInfo readFrom:]
  -[VKPGenericShieldStyleInfo borderColor]
  -[VKPGenericShieldStyleInfo setTextColor:]
  -[VKPGenericShieldStyleInfo writeTo:]
  -[VKPGenericShieldStyleInfo isEqual:]
  -[VKPGenericShieldStyleInfo copyTo:]
  -[VKPGenericShieldStyleInfo dictionaryRepresentation]
  -[VKPGenericShieldStyleInfo mergeFrom:]
  -[VKPGenericShieldStyleInfo hasTextColor]
  -[VKPGenericShieldStyleInfo setStyle:]
  -[VKPGenericShieldStyleInfo style]


VKRoadSignArtwork : NSObject
  // instance methods
  -[VKRoadSignArtwork addDebugRect:color:]
  -[VKRoadSignArtwork initWithFramesetter:signMetrics:textMetrics:signColoring:glyph:cgGlyph:]
  -[VKRoadSignArtwork initWithLine:signMetrics:textMetrics:signColoring:glyph:cgGlyph:]
  -[VKRoadSignArtwork generatedMetrics]
  -[VKRoadSignArtwork addDebugPoint:color:]
  -[VKRoadSignArtwork .cxx_construct]
  -[VKRoadSignArtwork dealloc]
  -[VKRoadSignArtwork .cxx_destruct]
  -[VKRoadSignArtwork localRenderBounds]
  -[VKRoadSignArtwork localCollisionBounds]
  -[VKRoadSignArtwork image]
  -[VKRoadSignArtwork offsetPixelForPixel:]
  -[VKRoadSignArtwork localSignBounds]


VKTrafficCameraFeature : VKTrafficFeature
 @property  long long type
 @property  unsigned int speedThreshold
 @property  BOOL isAboveSpeedThreshold
 @property  NSString *speedLimitText

  // class methods
  +[VKTrafficCameraFeature stringForTrafficCameraType:]

  // instance methods
  -[VKTrafficCameraFeature copyWithZone:]
  -[VKTrafficCameraFeature isSpeedLimitCamera]
  -[VKTrafficCameraFeature speedThreshold]
  -[VKTrafficCameraFeature initWithTrafficCamera:onRoute:]
  -[VKTrafficCameraFeature dealloc]
  -[VKTrafficCameraFeature setIsAboveSpeedThreshold:]
  -[VKTrafficCameraFeature speedLimitText]
  -[VKTrafficCameraFeature type]
  -[VKTrafficCameraFeature populateDebugNode:]
  -[VKTrafficCameraFeature isAboveSpeedThreshold]
  -[VKTrafficCameraFeature initWithTrafficCameraType:uniqueIdentifier:routeOffset:onRoute:]


VKRouteInfo : NSObject
 @property  GEOComposedRoute *route
 @property  VKRouteEtaDescription *etaDescription
 @property  NSArray *waypoints
 @property  BOOL hasRouteEta
 @property  BOOL hasFocus

  // instance methods
  -[VKRouteInfo route]
  -[VKRouteInfo initWithComposedRoute:etaDescription:]
  -[VKRouteInfo dealloc]
  -[VKRouteInfo initWithComposedRoute:etaText:]
  -[VKRouteInfo hasFocus]
  -[VKRouteInfo waypoints]
  -[VKRouteInfo setHasFocus:]
  -[VKRouteInfo setEtaDescription:]
  -[VKRouteInfo hasRouteEta]
  -[VKRouteInfo etaDescription]


VKRouteContext : NSObject
 @property  VKRouteInfo *routeInfo
 @property  unsigned char useType
 @property  {PolylineCoordinate=If} routeOffset
 @property  long long currentSegmentIndex
 @property  long long currentStepIndex
 @property  BOOL snappingToTransitLines
 @property  long long inspectedSegmentIndex
 @property  long long inspectedStepIndex
 @property  {?=dd} puckLocation
 @property  float puckRadius
 @property  unsigned long puckSnappedStopID
 @property  NSString *locale
 @property  NSString *accessPointEntryName
 @property  NSString *accessPointExitName
 @property  NSArray *alternateRoutes
 @property  unsigned long totalRouteCount

  // instance methods
  -[VKRouteContext setAlternateRoutes:]
  -[VKRouteContext routeInfo]
  -[VKRouteContext setLocale:]
  -[VKRouteContext alternateRoutes]
  -[VKRouteContext currentStepIndex]
  -[VKRouteContext useType]
  -[VKRouteContext locale]
  -[VKRouteContext .cxx_construct]
  -[VKRouteContext dealloc]
  -[VKRouteContext .cxx_destruct]
  -[VKRouteContext initWithRouteInfo:useType:]
  -[VKRouteContext _hashTableForObserverType:]
  -[VKRouteContext _setHasContextChangedForObserverType:withValue:]
  -[VKRouteContext forEachRouteInfo:]
  -[VKRouteContext setSnappingToTransitLines:]
  -[VKRouteContext puckLocation]
  -[VKRouteContext puckRadius]
  -[VKRouteContext setInspectedSegmentIndex:]
  -[VKRouteContext setInspectedStepIndex:]
  -[VKRouteContext initWithComposedRoute:useType:]
  -[VKRouteContext setPuckRadius:]
  -[VKRouteContext setAccessPointEntryName:]
  -[VKRouteContext setAccessPointExitName:]
  -[VKRouteContext addShareSections:shareCount:]
  -[VKRouteContext setPuckLocation:]
  -[VKRouteContext setRouteOffset:]
  -[VKRouteContext setCurrentSegmentIndex:]
  -[VKRouteContext setCurrentStepIndex:]
  -[VKRouteContext setPuckSnappedStopID:]
  -[VKRouteContext resetNotificationsForObserverType:]
  -[VKRouteContext totalRouteCount]
  -[VKRouteContext forEachSectionWithShareCount:dothis:]
  -[VKRouteContext snappingToTransitLines]
  -[VKRouteContext currentSegmentIndex]
  -[VKRouteContext accessPointEntryName]
  -[VKRouteContext accessPointExitName]
  -[VKRouteContext inspectedSegmentIndex]
  -[VKRouteContext inspectedStepIndex]
  -[VKRouteContext puckSnappedStopID]
  -[VKRouteContext routeOffset]
  -[VKRouteContext removeObserver:withType:]
  -[VKRouteContext addObserver:withType:]


VKInternedString : NSString /System/Library/Frameworks/CoreText.framework/CoreText
  // class methods
  +[VKInternedString initialize]
  +[VKInternedString stringWithString:]

  // instance methods
  -[VKInternedString copyWithZone:]
  -[VKInternedString getCharacters:range:]
  -[VKInternedString isEqualToString:]
  -[VKInternedString length]
  -[VKInternedString substringToIndex:]
  -[VKInternedString substringFromIndex:]
  -[VKInternedString characterAtIndex:]
  -[VKInternedString initWithString:]
  -[VKInternedString dealloc]
  -[VKInternedString compare:options:range:locale:]
  -[VKInternedString substringWithRange:]


VKLabelExternalTextElement : NSObject <NSSecureCoding>
  // class methods
  +[VKLabelExternalTextElement supportsSecureCoding]

  // instance methods
  -[VKLabelExternalTextElement .cxx_construct]
  -[VKLabelExternalTextElement .cxx_destruct]
  -[VKLabelExternalTextElement initWithTextElement:]
  -[VKLabelExternalTextElement encodeWithCoder:]
  -[VKLabelExternalTextElement element]
  -[VKLabelExternalTextElement initWithCoder:]


VKLabelExternalIconElement : NSObject <NSSecureCoding>
  // class methods
  +[VKLabelExternalIconElement supportsSecureCoding]

  // instance methods
  -[VKLabelExternalIconElement .cxx_construct]
  -[VKLabelExternalIconElement initWithIconElement:]
  -[VKLabelExternalIconElement encodeWithCoder:]
  -[VKLabelExternalIconElement element]
  -[VKLabelExternalIconElement initWithCoder:]


VKCustomFeature : NSObject <NSSecureCoding>
  // class methods
  +[VKCustomFeature supportsSecureCoding]
  +[VKCustomFeature muninFeatureLocationForItemCoordinate:viewPosition:groundAltitude:]

  // instance methods
  -[VKCustomFeature styleAttributes]
  -[VKCustomFeature setStyleAttributes:]
  -[VKCustomFeature venueID]
  -[VKCustomFeature setPlaceholderIconWithSize:anchorPoint:isRound:]
  -[VKCustomFeature setAnnotationText:locale:]
  -[VKCustomFeature setMinZoom:]
  -[VKCustomFeature setDataSource:]
  -[VKCustomFeature setSortKey:]
  -[VKCustomFeature init]
  -[VKCustomFeature setTextDisplayMode:]
  -[VKCustomFeature venueLevelID]
  -[VKCustomFeature .cxx_construct]
  -[VKCustomFeature .cxx_destruct]
  -[VKCustomFeature setMaxZoom:]
  -[VKCustomFeature featureID]
  -[VKCustomFeature encodeWithCoder:]
  -[VKCustomFeature venueComponentID]
  -[VKCustomFeature setText:locale:]
  -[VKCustomFeature setVenueLevelID:]
  -[VKCustomFeature feature]
  -[VKCustomFeature venueBuildingID]
  -[VKCustomFeature initWithCoordinate:]
  -[VKCustomFeature setFeatureID:]
  -[VKCustomFeature dataSource]
  -[VKCustomFeature isInjectedFeature]
  -[VKCustomFeature businessID]
  -[VKCustomFeature initWithCoordinate:elevation:]
  -[VKCustomFeature setVenueFloorOrdinal:]
  -[VKCustomFeature setVenueComponentID:]
  -[VKCustomFeature setBusinessID:]
  -[VKCustomFeature setVenueID:]
  -[VKCustomFeature venueFloorOrdinal]
  -[VKCustomFeature initWithCoder:]
  -[VKCustomFeature _initWithCoordinate:isInjected:]
  -[VKCustomFeature setVenueBuildingID:]
  -[VKCustomFeature _initInternalFeatureWithCoordinate:]


GGLImageCanvas : NSObject <MDRenderTarget>
 @property  BOOL allowAlpha
 @property  ^{RenderTarget=^^?^{ResourceManager}^{RenderResource}^^?*{RenderTargetFormat=[4i]QIi}[4^{Texture}][4^{Texture}]^{Texture}B} renderTarget
 @property  ^{RenderTarget=^^?^{ResourceManager}^{RenderResource}^^?*{RenderTargetFormat=[4i]QIi}[4^{Texture}][4^{Texture}]^{Texture}B} finalRenderTarget
 @property  ^{RenderTarget=^^?^{ResourceManager}^{RenderResource}^^?*{RenderTargetFormat=[4i]QIi}[4^{Texture}][4^{Texture}]^{Texture}B} linearRenderTarget
 @property  ^{Texture2D=^^?^{ResourceManager}^{RenderResource}^^?*iiiiIiII{shared_ptr<const ggl::Texture2DAbstract>=^{Texture2DAbstract}^{__shared_weak_count}}I{shared_ptr<const ggl::TextureDataAbstract>=^{TextureDataAbstract}^{__shared_weak_count}}BBB{shared_ptr<ggl::SamplerState>=^{SamplerState}^{__shared_weak_count}}} imageTexture
 @property  {CGSize=dd} size
 @property  double contentScale
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  <GGLRenderQueueSource> *renderSource
 @property  BOOL multiSample
 @property  BOOL supportsFramebufferFetch
 @property  r^{RenderTargetFormat=[4i]QIi} format
 @property  ^{Renderer=^^?^{Device}QQQBfQ{vector<std::__1::shared_ptr<ggl::DebugRenderer> renderer
 @property  BOOL shouldRasterize
 @property  {CGSize=dd} sizeInPixels
 @property  r^{RenderTargetFormat=[4i]QIi} linearFormat
 @property  float averageFPS
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GGLImageCanvas format]
  -[GGLImageCanvas bitmapData]
  -[GGLImageCanvas supportsFramebufferFetch]
  -[GGLImageCanvas renderer]
  -[GGLImageCanvas imageTexture]
  -[GGLImageCanvas initWithSize:scale:useMultisampling:taskContext:device:signpostId:]
  -[GGLImageCanvas .cxx_construct]
  -[GGLImageCanvas dealloc]
  -[GGLImageCanvas shouldRasterize]
  -[GGLImageCanvas size]
  -[GGLImageCanvas .cxx_destruct]
  -[GGLImageCanvas contentScale]
  -[GGLImageCanvas createRenderTarget]
  -[GGLImageCanvas allowAlpha]
  -[GGLImageCanvas setRenderSource:]
  -[GGLImageCanvas renderTarget]
  -[GGLImageCanvas hasRenderTarget]
  -[GGLImageCanvas renderSource]
  -[GGLImageCanvas finalRenderTarget]
  -[GGLImageCanvas _internalRenderTarget]
  -[GGLImageCanvas linearFormat]
  -[GGLImageCanvas destroyRenderTarget]
  -[GGLImageCanvas setBounds:]
  -[GGLImageCanvas bounds]
  -[GGLImageCanvas setAllowAlpha:]
  -[GGLImageCanvas setSize:]
  -[GGLImageCanvas finalSurface]
  -[GGLImageCanvas didDrawView]
  -[GGLImageCanvas willDrawView]
  -[GGLImageCanvas setContentScale:]
  -[GGLImageCanvas multiSample]
  -[GGLImageCanvas sizeInPixels]
  -[GGLImageCanvas linearRenderTarget]
  -[GGLImageCanvas renderWithTimestamp:completion:]


VKMapSnapshotCreator : NSObject <MapEngineDelegate, VKNotificationObserverDelegate>
 @property  {CGSize=dd} size
 @property  int mapType
 @property  {?=CCCCB} mapDisplayStyle
 @property  unsigned char emphasis
 @property  {VKEdgeInsets=ffff} edgeInsets
 @property  BOOL localizeLabels
 @property  long long labelScaleFactor
 @property  BOOL showsPointsOfInterest
 @property  GEOPOICategoryFilter *pointsOfInterestFilter
 @property  BOOL showsPointLabels
 @property  BOOL showsBuildings
 @property  BOOL showsVenues
 @property  <VKRouteOverlay> *routeOverlay
 @property  VKRouteContext *routeContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VKMapSnapshotCreator supportsSharingThumbnails]

  // instance methods
  -[VKMapSnapshotCreator didPresent]
  -[VKMapSnapshotCreator mapType]
  -[VKMapSnapshotCreator edgeInsets]
  -[VKMapSnapshotCreator .cxx_construct]
  -[VKMapSnapshotCreator setEdgeInsets:]
  -[VKMapSnapshotCreator dealloc]
  -[VKMapSnapshotCreator size]
  -[VKMapSnapshotCreator setShowsPointsOfInterest:]
  -[VKMapSnapshotCreator .cxx_destruct]
  -[VKMapSnapshotCreator wantsTimerTick]
  -[VKMapSnapshotCreator softDealloc]
  -[VKMapSnapshotCreator activeCanvas]
  -[VKMapSnapshotCreator canChangeVenueFocus]
  -[VKMapSnapshotCreator _transferSettingsFrom:to:]
  -[VKMapSnapshotCreator setClearFontCache:]
  -[VKMapSnapshotCreator lookAtX:y:z:]
  -[VKMapSnapshotCreator routeOverlay]
  -[VKMapSnapshotCreator routeContext]
  -[VKMapSnapshotCreator setMapDisplayStyle:]
  -[VKMapSnapshotCreator addCustomFeatureDataSource:]
  -[VKMapSnapshotCreator removeCustomFeatureDataSource:]
  -[VKMapSnapshotCreator setRouteContext:]
  -[VKMapSnapshotCreator setRouteOverlay:]
  -[VKMapSnapshotCreator cancelFlushingTileDecodes:]
  -[VKMapSnapshotCreator labelScaleFactor]
  -[VKMapSnapshotCreator setCenterCoordinate:altitude:yaw:pitch:]
  -[VKMapSnapshotCreator cancel]
  -[VKMapSnapshotCreator _labelSettings]
  -[VKMapSnapshotCreator setShowsVenues:]
  -[VKMapSnapshotCreator showsPointsOfInterest]
  -[VKMapSnapshotCreator setEmphasis:]
  -[VKMapSnapshotCreator setPointsOfInterestFilter:]
  -[VKMapSnapshotCreator showsPointLabels]
  -[VKMapSnapshotCreator mapDisplayStyle]
  -[VKMapSnapshotCreator showsBuildings]
  -[VKMapSnapshotCreator showsVenues]
  -[VKMapSnapshotCreator nearestVenueDidChange:building:]
  -[VKMapSnapshotCreator venueCreated:building:]
  -[VKMapSnapshotCreator setLabelExclusionRegions:]
  -[VKMapSnapshotCreator emphasis]
  -[VKMapSnapshotCreator setLocalizeLabels:]
  -[VKMapSnapshotCreator didStartLoadingData]
  -[VKMapSnapshotCreator didFinishLoadingData]
  -[VKMapSnapshotCreator didFinishLoadingDataWithError:]
  -[VKMapSnapshotCreator willBecomeFullyDrawn]
  -[VKMapSnapshotCreator didUpdateSceneStatus:]
  -[VKMapSnapshotCreator labelManagerDidLayout]
  -[VKMapSnapshotCreator selectedLabelMarkerWillDisappear:]
  -[VKMapSnapshotCreator labelMarkerDidChangeState:]
  -[VKMapSnapshotCreator localizeLabels]
  -[VKMapSnapshotCreator willLayoutWithTimestamp:withContext:]
  -[VKMapSnapshotCreator pointsOfInterestFilter]
  -[VKMapSnapshotCreator setMapRegion:pitch:yaw:]
  -[VKMapSnapshotCreator initWithSize:scale:homeQueue:signpostId:mapType:auditToken:]
  -[VKMapSnapshotCreator renderSnapshot:]
  -[VKMapSnapshotCreator setLabelScaleFactor:]
  -[VKMapSnapshotCreator setMapType:]
  -[VKMapSnapshotCreator setShowsBuildings:]
  -[VKMapSnapshotCreator setShowsPointLabels:]
  -[VKMapSnapshotCreator didReceiveMemoryWarning]


VKImageCanvas : NSObject
 @property  {shared_ptr<md::TaskContext>=^{TaskContext}^{__shared_weak_count}} taskContext
 @property  GEOMapRegion *mapRegion
 @property  double pitch
 @property  double yaw
 @property  VKCamera *camera
 @property  int mapType
 @property  {VKEdgeInsets=ffff} edgeInsets

  // instance methods
  -[VKImageCanvas pitch]
  -[VKImageCanvas updateWithTimestamp:withContext:]
  -[VKImageCanvas mapType]
  -[VKImageCanvas yaw]
  -[VKImageCanvas edgeInsets]
  -[VKImageCanvas .cxx_construct]
  -[VKImageCanvas setEdgeInsets:]
  -[VKImageCanvas dealloc]
  -[VKImageCanvas .cxx_destruct]
  -[VKImageCanvas renderSceneWithEngine:completion:]
  -[VKImageCanvas taskContext]
  -[VKImageCanvas setCenterCoordinate:altitude:yaw:pitch:]
  -[VKImageCanvas cancelTileRequests]
  -[VKImageCanvas cancelLoad]
  -[VKImageCanvas mapRegion]
  -[VKImageCanvas clearScene]
  -[VKImageCanvas setMapRegion:pitch:yaw:]
  -[VKImageCanvas initWithMapEngine:]
  -[VKImageCanvas setMapType:]
  -[VKImageCanvas didReceiveMemoryWarning:]
  -[VKImageCanvas loadScene]
  -[VKImageCanvas didLayout]
  -[VKImageCanvas camera]


_MapEngineRenderQueueSource : NSObject <GGLRenderQueueSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MapEngineRenderQueueSource isDelayedRenderQueueConsumptionSupported]
  -[_MapEngineRenderQueueSource renderQueueForTimestamp:]
  -[_MapEngineRenderQueueSource initWithEngine:]


VKRouteLine : NSObject
 @property  BOOL hasNewRoadMatches
 @property  {vector<geo::fast_shared_ptr<md::RouteLineSection sections
 @property  {Box<double bounds
 @property  VKPolylineOverlayRenderRegion *renderRegion
 @property  VKPolylineOverlay *overlay
 @property  GEOComposedRoute *composedRoute
 @property  <VKRouteLineObserverProtocol> *observer
 @property  double simplificationEpsilonPoints

  // instance methods
  -[VKRouteLine overlay]
  -[VKRouteLine .cxx_construct]
  -[VKRouteLine dealloc]
  -[VKRouteLine .cxx_destruct]
  -[VKRouteLine renderRegion]
  -[VKRouteLine _updateBounds:]
  -[VKRouteLine _updateTilesCovered:]
  -[VKRouteLine setHasNewRoadMatches:]
  -[VKRouteLine isTrafficUpToDate]
  -[VKRouteLine hasNewRoadMatches]
  -[VKRouteLine isTrafficUptoDate:]
  -[VKRouteLine inverseManeuverTransform]
  -[VKRouteLine boundsUnitsPerMeter]
  -[VKRouteLine simplificationEpsilonPoints]
  -[VKRouteLine sections]
  -[VKRouteLine bounds]
  -[VKRouteLine setObserver:]
  -[VKRouteLine initWithPolylineOverlay:]
  -[VKRouteLine setSimplificationEpsilonPoints:]
  -[VKRouteLine forEachSection:]
  -[VKRouteLine createMeshIfNecessary:]
  -[VKRouteLine maneuverPoints]
  -[VKRouteLine needsUpdateForViewingScale:]
  -[VKRouteLine maneuverTransform]
  -[VKRouteLine buildRouteLine:matchToRoads:viewUnitsPerPoint:force:]
  -[VKRouteLine generateArrowsForManeuverDisplayMode:routeLineWidth:]
  -[VKRouteLine splitRouteLineAtAnnotation:]
  -[VKRouteLine composedRoute]
  -[VKRouteLine observer]


VKImage : NSObject
  // instance methods
  -[VKImage initWithData:scale:]
  -[VKImage initWithCGImage:scale:]
  -[VKImage setAnchorPoint:]
  -[VKImage anchorPoint]
  -[VKImage textureCoordinates]
  -[VKImage .cxx_construct]
  -[VKImage dealloc]
  -[VKImage size]
  -[VKImage .cxx_destruct]
  -[VKImage collisionRect]
  -[VKImage _prepareTextureWithAtlas:]
  -[VKImage setCollisionRect:]
  -[VKImage image]
  -[VKImage initWithCGImage:scale:usedAsTextureAndImage:]
  -[VKImage setLabelingPoint:]
  -[VKImage gglTexture]
  -[VKImage initWithName:scale:resourceManager:]
  -[VKImage _prepareImage]
  -[VKImage initWithData:scale:usedAsTextureAndImage:]
  -[VKImage labelingPoint]
  -[VKImage compareTo:]
  -[VKImage prepareTextureWithAtlas:]
  -[VKImage scale]


VKClassicGlobeCanvas : VKScreenCanvas <GEOResourceManifestTileGroupObserver, VKInteractiveMap>
 @property  @? sceneDidLoadCallback
 @property  <VKInteractiveMapDelegate> *delegate
 @property  int mapType
 @property  BOOL trafficEnabled
 @property  int flyoverMode
 @property  VKGlobeCameraController *globeCameraController
 @property  VKARCameraController *arCameraController
 @property  BOOL flyoverAvailable
 @property  BOOL disableRoads
 @property  BOOL disableLabels
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *overlays
 @property  NSArray *visibleTileSets

  // class methods
  +[VKClassicGlobeCanvas supportsMapType:scale:]

  // instance methods
  -[VKClassicGlobeCanvas annotationCoordinateTest]
  -[VKClassicGlobeCanvas convertCoordinateToPoint:]
  -[VKClassicGlobeCanvas detailedDescription]
  -[VKClassicGlobeCanvas didReceiveMemoryWarning:beAggressive:]
  -[VKClassicGlobeCanvas disableLabels]
  -[VKClassicGlobeCanvas attributionsForCurrentRegion]
  -[VKClassicGlobeCanvas removeOverlay:]
  -[VKClassicGlobeCanvas visibleTileSets]
  -[VKClassicGlobeCanvas setTrafficEnabled:]
  -[VKClassicGlobeCanvas initWithMapEngine:inBackground:]
  -[VKClassicGlobeCanvas convertMapPointToPoint:]
  -[VKClassicGlobeCanvas addOverlay:]
  -[VKClassicGlobeCanvas setContentsScale:]
  -[VKClassicGlobeCanvas isPointValidForGesturing:]
  -[VKClassicGlobeCanvas enterARSessionAtCoordinate:]
  -[VKClassicGlobeCanvas resourceManifestManagerWillChangeActiveTileGroup:]
  -[VKClassicGlobeCanvas waitForLoading]
  -[VKClassicGlobeCanvas consoleString:]
  -[VKClassicGlobeCanvas viewportInfo]
  -[VKClassicGlobeCanvas updateCameraForFrameResize]
  -[VKClassicGlobeCanvas setCamera:]
  -[VKClassicGlobeCanvas setMapType:animated:]
  -[VKClassicGlobeCanvas trafficEnabled]
  -[VKClassicGlobeCanvas didPresent]
  -[VKClassicGlobeCanvas stopAnimations]
  -[VKClassicGlobeCanvas resourceManifestManagerDidChangeActiveTileGroup:]
  -[VKClassicGlobeCanvas convertPointToMapPoint:]
  -[VKClassicGlobeCanvas updateWithTimestamp:withContext:]
  -[VKClassicGlobeCanvas mapType]
  -[VKClassicGlobeCanvas transitionToTracking:mapMode:startLocation:startCourse:cameraController:pounceCompletionHandler:]
  -[VKClassicGlobeCanvas setupMapScene]
  -[VKClassicGlobeCanvas useNewRenderPath]
  -[VKClassicGlobeCanvas arCameraController]
  -[VKClassicGlobeCanvas overlays]
  -[VKClassicGlobeCanvas _styleManager]
  -[VKClassicGlobeCanvas .cxx_construct]
  -[VKClassicGlobeCanvas puckAnimator:updatedTargetPosition:]
  -[VKClassicGlobeCanvas flyoverStatistics]
  -[VKClassicGlobeCanvas dealloc]
  -[VKClassicGlobeCanvas sceneDidLoadCallback]
  -[VKClassicGlobeCanvas stopSnappingAnimations]
  -[VKClassicGlobeCanvas .cxx_destruct]
  -[VKClassicGlobeCanvas shouldHideOffscreenSelectedAnnotation]
  -[VKClassicGlobeCanvas stopLoading]
  -[VKClassicGlobeCanvas updateCameraFromGlobe]
  -[VKClassicGlobeCanvas resetFlyoverStatistics]
  -[VKClassicGlobeCanvas flyoverMode]
  -[VKClassicGlobeCanvas insertOverlay:belowOverlay:]
  -[VKClassicGlobeCanvas setSceneDidLoadCallback:]
  -[VKClassicGlobeCanvas overlayContainer]
  -[VKClassicGlobeCanvas resumeFlyoverTourAnimation]
  -[VKClassicGlobeCanvas disableRoads]
  -[VKClassicGlobeCanvas puckAnimator:updatedPosition:course:]
  -[VKClassicGlobeCanvas flyoverAvailable]
  -[VKClassicGlobeCanvas exitARSession]
  -[VKClassicGlobeCanvas _update]
  -[VKClassicGlobeCanvas setDisableLabels:]
  -[VKClassicGlobeCanvas disableFlyoverStatistics]
  -[VKClassicGlobeCanvas transferStateFromCanvas:]
  -[VKClassicGlobeCanvas prepareFlyoverAnimation:completion:]
  -[VKClassicGlobeCanvas disableTileAnalytics]
  -[VKClassicGlobeCanvas convertCoordinateToCameraModelPoint:]
  -[VKClassicGlobeCanvas convertPointToCoordinateOnSphere:]
  -[VKClassicGlobeCanvas stopFlyoverAnimation]
  -[VKClassicGlobeCanvas convertPointToCoordinate:]
  -[VKClassicGlobeCanvas setDisableRoads:]
  -[VKClassicGlobeCanvas annotationRectTest]
  -[VKClassicGlobeCanvas globeCameraController]
  -[VKClassicGlobeCanvas setMapType:]
  -[VKClassicGlobeCanvas enableTileAnalytics]
  -[VKClassicGlobeCanvas startFlyoverAnimation:animateToStart:labelChanged:stateChange:]
  -[VKClassicGlobeCanvas setDelegate:]
  -[VKClassicGlobeCanvas _reloadStylesheet]
  -[VKClassicGlobeCanvas _updateDebugSettings]
  -[VKClassicGlobeCanvas pauseFlyoverTourAnimation]
  -[VKClassicGlobeCanvas enableFlyoverStatistics]
  -[VKClassicGlobeCanvas delegate]
  -[VKClassicGlobeCanvas createFlyoverPreTourAnimation:duration:]
  -[VKClassicGlobeCanvas _centerScreenPoint]
  -[VKClassicGlobeCanvas insertOverlay:aboveOverlay:]
  -[VKClassicGlobeCanvas _setDefaultFov:]
  -[VKClassicGlobeCanvas camera]
  -[VKClassicGlobeCanvas startFlyoverTourAnimation:animateToStart:labelChanged:stateChange:]
  -[VKClassicGlobeCanvas debugHighlightObjectAtPoint:highlightTarget:]


GlobeLineContainerDelegate : NSObject <VKGlobeLineContainerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GlobeLineContainerDelegate lineContainerNeedsDisplay:]
  -[GlobeLineContainerDelegate initWithRenderer:]


VKResourceManager : NSObject
  // instance methods
  -[VKResourceManager init]
  -[VKResourceManager dataForResourceWithName:]
  -[VKResourceManager dealloc]
  -[VKResourceManager _localNameForResourceName:]
  -[VKResourceManager isDevResourceWithName:]
  -[VKResourceManager pathForResourceWithName:]


VKPolylineOverlayRenderRegion : NSObject
 @property  r^{set<std::__1::shared_ptr<md::RouteLineData> routeLineDatas
 @property  {Box<double visibleRect

  // instance methods
  -[VKPolylineOverlayRenderRegion .cxx_construct]
  -[VKPolylineOverlayRenderRegion .cxx_destruct]
  -[VKPolylineOverlayRenderRegion snappingRegion]
  -[VKPolylineOverlayRenderRegion isEquivalentToNewRegion:]
  -[VKPolylineOverlayRenderRegion routeLineDatas]
  -[VKPolylineOverlayRenderRegion visibleRect]
  -[VKPolylineOverlayRenderRegion initForVisibleRect:snappingRegion:routeLineDatas:]


VKPolylineOverlay : NSObject <VKRouteOverlay, GEOComposedRouteObserver>
 @property  double trafficTimeStamp
 @property  VKRouteLine *routeRibbon
 @property  <VKPolylineOverlayRouteRibbonObserver> *routeRibbonObserver
 @property  BOOL containsTransit
 @property  GEOComposedRoute *composedRoute
 @property  GEOComposedRouteTraffic *traffic
 @property  BOOL selected
 @property  BOOL hasFocus
 @property  BOOL showTraffic
 @property  {?=dd} coordinate
 @property  GEOMapRegion *boundingMapRegion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKPolylineOverlay coordinate]
  -[VKPolylineOverlay .cxx_construct]
  -[VKPolylineOverlay dealloc]
  -[VKPolylineOverlay setSelected:]
  -[VKPolylineOverlay traffic]
  -[VKPolylineOverlay .cxx_destruct]
  -[VKPolylineOverlay getPathsForRenderRegion:shouldSnapToRoads:verifySnapping:observer:]
  -[VKPolylineOverlay trafficTimeStamp]
  -[VKPolylineOverlay updateTraffic:]
  -[VKPolylineOverlay _setNeedsLayout]
  -[VKPolylineOverlay sectionRangeForBounds:]
  -[VKPolylineOverlay isSnappingForSceneTiles]
  -[VKPolylineOverlay routeRibbonObserver]
  -[VKPolylineOverlay setRouteRibbonObserver:]
  -[VKPolylineOverlay setShowTraffic:]
  -[VKPolylineOverlay initWithComposedRoute:traffic:]
  -[VKPolylineOverlay hasFocus]
  -[VKPolylineOverlay setHasFocus:]
  -[VKPolylineOverlay boundingMapRegion]
  -[VKPolylineOverlay routeRibbon]
  -[VKPolylineOverlay composedRoute:selectedSections:deselectedSections:]
  -[VKPolylineOverlay composedRouteUpdatedSnappedPaths:]
  -[VKPolylineOverlay composedRoute:appliedTransitRouteUpdates:]
  -[VKPolylineOverlay composedRoute:changedSelectedRideInClusteredSegment:fromIndex:toIndex:]
  -[VKPolylineOverlay clearSnappedPathsForObserver:]
  -[VKPolylineOverlay removeObserver:]
  -[VKPolylineOverlay setRouteRibbon:]
  -[VKPolylineOverlay createDebugNode]
  -[VKPolylineOverlay showTraffic]
  -[VKPolylineOverlay containsTransit]
  -[VKPolylineOverlay addObserver:]
  -[VKPolylineOverlay composedRoute]
  -[VKPolylineOverlay selected]


VKGestureCameraBehavior : NSObject <VKGesturingCameraController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKGestureCameraBehavior isGesturing]
  -[VKGestureCameraBehavior updatePan:lastScreenPoint:]
  -[VKGestureCameraBehavior updatePitch:translation:]
  -[VKGestureCameraBehavior updateRotate:atScreenPoint:]
  -[VKGestureCameraBehavior updatePitch:degrees:]
  -[VKGestureCameraBehavior updateZoom:oldFactor:newFactor:]
  -[VKGestureCameraBehavior tapZoom:levels:completionHandler:]
  -[VKGestureCameraBehavior dealloc]
  -[VKGestureCameraBehavior isPinching]
  -[VKGestureCameraBehavior isPitching]
  -[VKGestureCameraBehavior stopPanningAtPoint:]
  -[VKGestureCameraBehavior isPanning]
  -[VKGestureCameraBehavior endPan:]
  -[VKGestureCameraBehavior zoom:withFocusPoint:completionHandler:]
  -[VKGestureCameraBehavior beginPitch:]
  -[VKGestureCameraBehavior startRotatingWithFocusPoint:]
  -[VKGestureCameraBehavior tapAtPoint:]
  -[VKGestureCameraBehavior updateRotationWithFocusPoint:newValue:]
  -[VKGestureCameraBehavior stopPitchingWithFocusPoint:]
  -[VKGestureCameraBehavior updatePanWithTranslation:]
  -[VKGestureCameraBehavior stopPinchingWithFocusPoint:]
  -[VKGestureCameraBehavior endZoom:]
  -[VKGestureCameraBehavior initWithCameraController:]
  -[VKGestureCameraBehavior updatePinchWithFocusPoint:oldFactor:newFactor:]
  -[VKGestureCameraBehavior stopRotatingWithFocusPoint:]
  -[VKGestureCameraBehavior beginPan:]
  -[VKGestureCameraBehavior updatePitchWithFocusPoint:translation:]
  -[VKGestureCameraBehavior beginZoom:]
  -[VKGestureCameraBehavior beginRotate:]
  -[VKGestureCameraBehavior endRotate:]
  -[VKGestureCameraBehavior startPanningAtPoint:panAtStartPoint:]
  -[VKGestureCameraBehavior startPinchingWithFocusPoint:]
  -[VKGestureCameraBehavior isRotating]
  -[VKGestureCameraBehavior startPitchingWithFocusPoint:]
  -[VKGestureCameraBehavior endPitch:]
  -[VKGestureCameraBehavior transferGestureState:]
  -[VKGestureCameraBehavior updatePitchWithFocusPoint:degrees:]


VKGlobeLineContainer : NSObject
 @property  <VKRouteMatchedAnnotationPresentation> *routeLineSplitAnnotation
 @property  <VKGlobeLineContainerDelegate> *delegate

  // instance methods
  -[VKGlobeLineContainer update]
  -[VKGlobeLineContainer overlays]
  -[VKGlobeLineContainer addLine:]
  -[VKGlobeLineContainer .cxx_construct]
  -[VKGlobeLineContainer dealloc]
  -[VKGlobeLineContainer .cxx_destruct]
  -[VKGlobeLineContainer initWithRouteRenderLayer:]
  -[VKGlobeLineContainer addPersistentOverlay:]
  -[VKGlobeLineContainer addNonPersistentOverlay:]
  -[VKGlobeLineContainer removePersistentOverlay:]
  -[VKGlobeLineContainer removeNonPersistentOverlay:]
  -[VKGlobeLineContainer halfWidthForLine:styleZ:]
  -[VKGlobeLineContainer persistentOverlays]
  -[VKGlobeLineContainer hasPersistentOverlay:]
  -[VKGlobeLineContainer hasNonPersistentOverlay:]
  -[VKGlobeLineContainer nonPersistentOverlays]
  -[VKGlobeLineContainer clearLineSelection]
  -[VKGlobeLineContainer setSelected:selected:]
  -[VKGlobeLineContainer _addOverlay:]
  -[VKGlobeLineContainer removeLine:]
  -[VKGlobeLineContainer _removeOverlay:]
  -[VKGlobeLineContainer _recreateLinesIfNeeded]
  -[VKGlobeLineContainer _updateRouteSplit]
  -[VKGlobeLineContainer _destroyLinesIfNeeded]
  -[VKGlobeLineContainer routeLineSplitAnnotation]
  -[VKGlobeLineContainer observeValueForKeyPath:ofObject:change:context:]
  -[VKGlobeLineContainer setRouteLineSplitAnnotation:]
  -[VKGlobeLineContainer setDelegate:]
  -[VKGlobeLineContainer delegate]


VKDebugSettings : NSObject
 @property  BOOL disableOverlayTextConsole
 @property  BOOL paintMapTiles
 @property  BOOL paintSelectedMapTiles
 @property  {GEOTileSetRegion=IIIIII} selectedMapTilesToPaint
 @property  BOOL paintTiles
 @property  BOOL paintRoadBoundaries
 @property  BOOL paintRoadTiles
 @property  BOOL paintPoiTiles
 @property  BOOL paintPointTiles
 @property  BOOL paintPolygonTiles
 @property  BOOL paintLandcoverTiles
 @property  BOOL paintVenues
 @property  BOOL paintVertices
 @property  BOOL paintJunctions
 @property  BOOL paintCoastlines
 @property  BOOL paintBuildings
 @property  BOOL paintLoadReason
 @property  BOOL disableRoute
 @property  BOOL labelHighlighting
 @property  BOOL showClientStyleAttributes
 @property  BOOL transitHighlighting
 @property  BOOL labelFacingCullDisabled
 @property  BOOL labelDedupingDisabled
 @property  BOOL labelCollisionDisabled
 @property  BOOL labelCollideContinuously
 @property  BOOL labelFlipAlternatePositionsEnable
 @property  BOOL labelTileDecodeEnabled
 @property  BOOL disableBackgroundLabelLayout
 @property  BOOL enableLegacyLineLabeling
 @property  BOOL labelAllowDefaultStyle
 @property  BOOL labelUpdateMapTilesContinuously
 @property  BOOL labelStyleOverridesDisabled
 @property  BOOL labelAutoOffsetRoadText
 @property  BOOL dontMatchRouteLine
 @property  BOOL dontMapMatchToSnappedRouteLine
 @property  BOOL highlightRouteLineSnappingStatus
 @property  BOOL dontVerifyRouteToTransitSnapping
 @property  BOOL showManeuverPoints
 @property  BOOL paintRoadSigns
 @property  BOOL paintLabelBounds
 @property  BOOL paintLabelRoadFeatures
 @property  BOOL paintLabelCollisionLines
 @property  BOOL paintLabelCounts
 @property  unsigned char labelerOutputIndex
 @property  BOOL displayTextureAtlas
 @property  BOOL disableIconTextureAtlas
 @property  unsigned char textureAtlasIndex
 @property  unsigned short textureAtlasPageIndex
 @property  unsigned int POIDensityMinNeighbors
 @property  unsigned int POIDensityMaxNeighbors
 @property  BOOL paintTransitCounts
 @property  BOOL hideDirectionalArrows
 @property  BOOL hideClientPositionedFeatures
 @property  BOOL hideServerPositionedRoadFeatures
 @property  BOOL hideServerPositionedTransitFeatures
 @property  BOOL keepTooCloseServerPositionedTransitFeatures
 @property  BOOL overrideNeworkDefaultsBaseSSLPMSwitch
 @property  BOOL textlessPOIsEnabled
 @property  float textlessPOIsMinZoom
 @property  BOOL labelBaseSSLPMEnabled
 @property  BOOL labelHideLineFeatures
 @property  BOOL labelHidePointFeatures
 @property  BOOL loadGreenTraffic
 @property  BOOL useStaticTrafficFeed
 @property  BOOL showTrafficCasing
 @property  BOOL texturedTrafficCasing
 @property  BOOL prioritizeTrafficSkeleton
 @property  BOOL paintRoadsStitchedByName
 @property  BOOL realisticWireframeEnabled
 @property  BOOL altitudePauseLoading
 @property  BOOL altitudeFreezeViewNode
 @property  BOOL altitudeTexturePaging
 @property  BOOL altitudeShowTileBounds
 @property  BOOL altitudeHighResSatellite
 @property  BOOL altitudeMipmapSatellite
 @property  BOOL altitudeMipmapFlyover
 @property  BOOL altitudeMipmapObjectTree
 @property  BOOL altitudeShowNightLight
 @property  BOOL altitudePrintRenderedTilesStat
 @property  BOOL altitudeDisableC3mTextureLoading
 @property  BOOL altitudeShowTriggerBounds
 @property  BOOL disableTransitLineDrawing
 @property  BOOL disableTransitLineMerging
 @property  BOOL disableTransitLineGroupMerging
 @property  BOOL dumpTransitTileContents
 @property  BOOL dumpRouteAndPath
 @property  BOOL disableIntraLinkTransitLineCrossings
 @property  BOOL useMetalRenderer
 @property  BOOL showNavCameraDebugConsole
 @property  BOOL showNavCameraDebugConsoleAttributes
 @property  BOOL showNavCameraDebugConsoleProperties
 @property  BOOL showNavCameraDebugLegend
 @property  BOOL showNavCameraDebugOverlay
 @property  float ribbonCrispness
 @property  float altitudeLodScale
 @property  float altitudeTileQualityThreshold
 @property  float altitudeHideMeshTime
 @property  float altitudeFadeSpeed
 @property  BOOL altitudeTourSpeedup
 @property  float altitudeTourSpeedupFactor
 @property  BOOL isInstalledInLockScreen
 @property  BOOL enableLoggingInLockScreen
 @property  BOOL useBuildingShadowTexture
 @property  BOOL layoutContinuously
 @property  BOOL enableSignPostEvents
 @property  BOOL disableStylesheetAnimations
 @property  BOOL readLandmarksFromDisk
 @property  BOOL drawPerformanceHUD
 @property  BOOL expandedPerformanceHUD
 @property  BOOL trackingCameraZoomFurther
 @property  BOOL holdOntoStyleAttributes
 @property  NSMutableArray *footprintsToSuppress
 @property  BOOL suppressFootprints
 @property  int debugOverlayOffsetX
 @property  int debugOverlayOffsetY
 @property  BOOL drawDebugTransit
 @property  BOOL labelTransitLineCollisionEnabled
 @property  BOOL labelHighlightingVerboseLoggingEnabled
 @property  BOOL labelHighlightingTransitFeaturesOnly
 @property  BOOL labelOcclusionDisabled
 @property  {?=BBBff} landmark2DStrokeSettings
 @property  BOOL shouldUseTestTileLoader
 @property  BOOL constantlyChangeTileGroup
 @property  double constantlyChangeTileGroupInterval
 @property  BOOL disableRoadSignLimit
 @property  BOOL showNavLabelOverlay
 @property  BOOL enableTrafficFeatureLabelDebugging
 @property  BOOL disableRouteAnnotationLimit
 @property  BOOL enableEtaLabelDebugging
 @property  BOOL enableRouteShareSectionDebugging
 @property  BOOL enableEtaLabelRectDebugging
 @property  unsigned long etaLabelDebugScore
 @property  unsigned int etaLabelDebugOrientationMask
 @property  BOOL etaLabelsAvoidScreenEdges
 @property  BOOL enableRouteIntersectionTesting
 @property  BOOL forceEtaLabelPlacement
 @property  BOOL traceEtaDebugLog
 @property  BOOL enableARDebugConsole
 @property  BOOL enableAROmniTileLoader
 @property  BOOL arOverrideDefaults
 @property  float arVirtualPlaneHeight
 @property  float arDefaultHeight
 @property  unsigned long arSwipeGesture
 @property  unsigned long arPinchGesture
 @property  BOOL arRenderAtNativeRate
 @property  BOOL paintKeysInView
 @property  BOOL paintStandardLabelMapData
 @property  BOOL paintPolygonLayerData
 @property  BOOL paintRoadTileData
 @property  BOOL enableRoadSignArtworkDebugging
 @property  BOOL muninDebugLayer
 @property  BOOL muninGraphConnections
 @property  BOOL muninShowRigTransitionInfo
 @property  BOOL muninIgnorePlacesMetadata
 @property  BOOL muninOverrideParallax
 @property  float muninCameraPanOffset
 @property  float muninParallaxSpring
 @property  float muninParallaxDamper
 @property  float muninParallaxScale
 @property  float muninTransitionMinResolution
 @property  float muninTransitionMaxResolution
 @property  BOOL muninSlowMotion
 @property  BOOL enableMuninMiniMapRoadWidths
 @property  BOOL enableMuninMiniMapComposedEdgeRoadColoring
 @property  BOOL enableMuninMiniMapCollectionPoints
 @property  BOOL enableMuninMiniMapRoadZData
 @property  BOOL enableMuninRoadNetworkMiniMap
 @property  float muninRoadNetworkMiniMapAreaInMeters
 @property  unsigned long muninIntermediatePointStep
 @property  unsigned long muninAvailabilityOverride
 @property  BOOL overrideLod
 @property  unsigned char lodOverride
 @property  BOOL overrideIntermediateLod
 @property  unsigned char intermediateLodOverride
 @property  BOOL muninReplayLastTap
 @property  {?=ffddff} muninTapState
 @property  BOOL muninOverrideFov
 @property  float defaultFovPortrait
 @property  float maxFovPortrait
 @property  float defaultFovLandscape
 @property  float maxFovLandscape
 @property  float minFov
 @property  float minFovSpring
 @property  float maxFovSpring
 @property  BOOL forceBumpNextTap
 @property  BOOL forceBumpAll
 @property  BOOL slowMotionBump
 @property  {?=ffff} overrideAmbient
 @property  {?=ffff} overrideLight1
 @property  {?=ffff} overrideLight2
 @property  {?=ffff} overrideLight3
 @property  float overrideLight1Azimuth
 @property  float overrideLight1Altitude
 @property  float overrideLight2Azimuth
 @property  float overrideLight2Altitude
 @property  float overrideLight3Azimuth
 @property  float overrideLight3Altitude
 @property  BOOL lightingOverrideAmbient
 @property  BOOL lightingOverrideLight1
 @property  BOOL lightingOverrideLight2
 @property  BOOL lightingOverrideLight3
 @property  BOOL lightingEnableAmbient
 @property  BOOL lightingEnableLight1
 @property  BOOL lightingEnableLight2
 @property  BOOL lightingEnableLight3
 @property  BOOL lightingAccelerateTime
 @property  BOOL lightingStopTime
 @property  unsigned char lightingStoppedTimeHour
 @property  BOOL shouldUseSDFGlyphs
 @property  BOOL shouldOverrideUpscaleFactor
 @property  float sdfGlyphShaderUpscaleFactor
 @property  BOOL shouldUseSDFSuperSampling
 @property  BOOL shouldOverrideSuperSampleKernelSize
 @property  float sdfGlyphSuperSampleKernelSize
 @property  BOOL shouldFreezeLayoutCamera
 @property  BOOL decodeStyleNames
 @property  BOOL enableNavRoadSignOrientationDebugging
 @property  BOOL disableContinuousMultiSectionRoutes
 @property  BOOL showRouteLineDebugPoints
 @property  unsigned int continuousMultiSectionRouteAdditionalOverlap
 @property  BOOL slowAnimations
 @property  BOOL slowTransitions
 @property  float animationTimeMultiplier
 @property  float transitionTimeMultiplier
 @property  BOOL debugCaptureNextGPUFrame
 @property  NSString *debugGPUFrameCaptureURL
 @property  {shared_ptr<gss::StylesheetManager<gss::PropertyID> >=^{StylesheetManager<gss::PropertyID>}^{__shared_weak_count}} debugStyleManager

  // class methods
  +[VKDebugSettings sharedSettings]

  // instance methods
  -[VKDebugSettings altitudeTourSpeedup]
  -[VKDebugSettings minFov]
  -[VKDebugSettings setMinFov:]
  -[VKDebugSettings labelHighlighting]
  -[VKDebugSettings setLabelCollideContinuously:]
  -[VKDebugSettings setOverrideNeworkDefaultsBaseSSLPMSwitch:]
  -[VKDebugSettings setAltitudeTourSpeedupFactor:]
  -[VKDebugSettings setLabelFacingCullDisabled:]
  -[VKDebugSettings disableOverlayTextConsole]
  -[VKDebugSettings setMuninParallaxSpring:]
  -[VKDebugSettings setPaintRoadSigns:]
  -[VKDebugSettings hideServerPositionedRoadFeatures]
  -[VKDebugSettings enableNavRoadSignOrientationDebugging]
  -[VKDebugSettings lightingEnableLight1]
  -[VKDebugSettings enableMuninRoadNetworkMiniMap]
  -[VKDebugSettings setLabelHideLineFeatures:]
  -[VKDebugSettings altitudeFadeSpeed]
  -[VKDebugSettings constantlyChangeTileGroupInterval]
  -[VKDebugSettings setPaintPoiTiles:]
  -[VKDebugSettings setForceBumpAll:]
  -[VKDebugSettings overrideIntermediateLod]
  -[VKDebugSettings etaLabelDebugScore]
  -[VKDebugSettings setContinuousMultiSectionRouteAdditionalOverlap:]
  -[VKDebugSettings muninIntermediatePointStep]
  -[VKDebugSettings altitudeHideMeshTime]
  -[VKDebugSettings enableRouteIntersectionTesting]
  -[VKDebugSettings muninParallaxDamper]
  -[VKDebugSettings setUseStaticTrafficFeed:]
  -[VKDebugSettings setOverrideLight3:]
  -[VKDebugSettings setLightingOverrideLight2:]
  -[VKDebugSettings setRibbonCrispness:]
  -[VKDebugSettings paintPolygonLayerData]
  -[VKDebugSettings setMuninTapState:]
  -[VKDebugSettings enableMuninMiniMapRoadWidths]
  -[VKDebugSettings lightingStoppedTimeHour]
  -[VKDebugSettings loadGreenTraffic]
  -[VKDebugSettings setCustomLandmarkFromDisk:tileKey:]
  -[VKDebugSettings paintVenues]
  -[VKDebugSettings disableRoadSignLimit]
  -[VKDebugSettings labelTransitLineCollisionEnabled]
  -[VKDebugSettings arDefaultHeight]
  -[VKDebugSettings lightingOverrideLight2]
  -[VKDebugSettings setEnableMuninMiniMapComposedEdgeRoadColoring:]
  -[VKDebugSettings showNavCameraDebugConsoleProperties]
  -[VKDebugSettings init]
  -[VKDebugSettings setMuninParallaxDamper:]
  -[VKDebugSettings paintLandcoverTiles]
  -[VKDebugSettings labelTileDecodeEnabled]
  -[VKDebugSettings paintBuildings]
  -[VKDebugSettings setPaintLabelCollisionLines:]
  -[VKDebugSettings setOverrideLight3Altitude:]
  -[VKDebugSettings highlightRouteLineSnappingStatus]
  -[VKDebugSettings muninSlowMotion]
  -[VKDebugSettings setEnableNavRoadSignOrientationDebugging:]
  -[VKDebugSettings setOverrideLight1Altitude:]
  -[VKDebugSettings setLightingEnableLight3:]
  -[VKDebugSettings setDrawPerformanceHUD:]
  -[VKDebugSettings realisticWireframeEnabled]
  -[VKDebugSettings debugOverlayOffsetY]
  -[VKDebugSettings suppressFootprints]
  -[VKDebugSettings muninShowRigTransitionInfo]
  -[VKDebugSettings setLightingOverrideLight1:]
  -[VKDebugSettings setMuninParallaxScale:]
  -[VKDebugSettings setLightingEnableLight1:]
  -[VKDebugSettings setDecodeStyleNames:]
  -[VKDebugSettings setTrackingCameraZoomFurther:]
  -[VKDebugSettings nameForPerformanceGroup:]
  -[VKDebugSettings setFootprintsToSuppress:]
  -[VKDebugSettings setDisableRoadSignLimit:]
  -[VKDebugSettings setDrawDebugTransit:]
  -[VKDebugSettings setLabelHighlightingVerboseLoggingEnabled:]
  -[VKDebugSettings setLabelDedupingDisabled:]
  -[VKDebugSettings setAltitudeHideMeshTime:]
  -[VKDebugSettings disableTransitLineMerging]
  -[VKDebugSettings setSlowTransitions:]
  -[VKDebugSettings prioritizeTrafficSkeleton]
  -[VKDebugSettings expandedPerformanceHUD]
  -[VKDebugSettings landmark2DStrokeSettings]
  -[VKDebugSettings overrideLight2Altitude]
  -[VKDebugSettings setEnableAROmniTileLoader:]
  -[VKDebugSettings labelHighlightingVerboseLoggingEnabled]
  -[VKDebugSettings setLabelTileDecodeEnabled:]
  -[VKDebugSettings setMuninSlowMotion:]
  -[VKDebugSettings setLabelAutoOffsetRoadText:]
  -[VKDebugSettings setAltitudePauseLoading:]
  -[VKDebugSettings lightingAccelerateTime]
  -[VKDebugSettings setShowTrafficCasing:]
  -[VKDebugSettings disableStylesheetAnimations]
  -[VKDebugSettings drawDebugTransit]
  -[VKDebugSettings muninTransitionMaxResolution]
  -[VKDebugSettings setMaxFovPortrait:]
  -[VKDebugSettings setPaintStandardLabelMapData:]
  -[VKDebugSettings .cxx_construct]
  -[VKDebugSettings setAltitudeTileQualityThreshold:]
  -[VKDebugSettings setTextlessPOIsEnabled:]
  -[VKDebugSettings overrideLight1Altitude]
  -[VKDebugSettings dealloc]
  -[VKDebugSettings setIsInstalledInLockScreen:]
  -[VKDebugSettings setLabelerOutputIndex:]
  -[VKDebugSettings setAltitudeDisableC3mTextureLoading:]
  -[VKDebugSettings setLoadGreenTraffic:]
  -[VKDebugSettings setPaintLabelCounts:]
  -[VKDebugSettings setLightingEnableAmbient:]
  -[VKDebugSettings setDisableRouteAnnotationLimit:]
  -[VKDebugSettings setMuninOverrideFov:]
  -[VKDebugSettings setShouldUseSDFSuperSampling:]
  -[VKDebugSettings setDebugCaptureNextGPUFrame:]
  -[VKDebugSettings setLabelUpdateMapTilesContinuously:]
  -[VKDebugSettings setPaintLabelBounds:]
  -[VKDebugSettings decodeStyleNames]
  -[VKDebugSettings setOverrideLight3Azimuth:]
  -[VKDebugSettings setExpandedPerformanceHUD:]
  -[VKDebugSettings forceEtaLabelPlacement]
  -[VKDebugSettings setLabelTransitLineCollisionEnabled:]
  -[VKDebugSettings muninAvailabilityOverride]
  -[VKDebugSettings setAltitudeShowTileBounds:]
  -[VKDebugSettings shouldUseSDFGlyphs]
  -[VKDebugSettings .cxx_destruct]
  -[VKDebugSettings lightingOverrideAmbient]
  -[VKDebugSettings labelerOutputIndex]
  -[VKDebugSettings setShowClientStyleAttributes:]
  -[VKDebugSettings shouldDrawDebug]
  -[VKDebugSettings setSlowAnimations:]
  -[VKDebugSettings dumpRouteAndPath]
  -[VKDebugSettings setDisplayTextureAtlas:]
  -[VKDebugSettings setPaintVertices:]
  -[VKDebugSettings traceEtaDebugLog]
  -[VKDebugSettings setEnableMuninRoadNetworkMiniMap:]
  -[VKDebugSettings setShowNavCameraDebugConsoleAttributes:]
  -[VKDebugSettings paintPointTiles]
  -[VKDebugSettings setShouldUseSDFGlyphs:]
  -[VKDebugSettings labelAllowDefaultStyle]
  -[VKDebugSettings disableIntraLinkTransitLineCrossings]
  -[VKDebugSettings showNavCameraDebugLegend]
  -[VKDebugSettings muninCameraPanOffset]
  -[VKDebugSettings setTraceEtaDebugLog:]
  -[VKDebugSettings sdfGlyphSuperSampleKernelSize]
  -[VKDebugSettings setLabelStyleOverridesDisabled:]
  -[VKDebugSettings setShouldOverrideUpscaleFactor:]
  -[VKDebugSettings paintPolygonTiles]
  -[VKDebugSettings labelBaseSSLPMEnabled]
  -[VKDebugSettings overrideLight2Azimuth]
  -[VKDebugSettings setMuninAvailabilityOverride:]
  -[VKDebugSettings showClientStyleAttributes]
  -[VKDebugSettings setOverrideLight2Azimuth:]
  -[VKDebugSettings isPerformanceGroupShown:]
  -[VKDebugSettings intermediateLodOverride]
  -[VKDebugSettings debugOverlayOffsetX]
  -[VKDebugSettings shouldUseTestTileLoader]
  -[VKDebugSettings muninParallaxScale]
  -[VKDebugSettings setPaintVenues:]
  -[VKDebugSettings setConstantlyChangeTileGroupInterval:]
  -[VKDebugSettings labelHighlightingTransitFeaturesOnly]
  -[VKDebugSettings setArVirtualPlaneHeight:]
  -[VKDebugSettings setMuninShowRigTransitionInfo:]
  -[VKDebugSettings enableEtaLabelRectDebugging]
  -[VKDebugSettings muninTransitionMinResolution]
  -[VKDebugSettings setMuninCameraPanOffset:]
  -[VKDebugSettings setOverrideLod:]
  -[VKDebugSettings paintPoiTiles]
  -[VKDebugSettings setDontMatchRouteLine:]
  -[VKDebugSettings altitudeDisableC3mTextureLoading]
  -[VKDebugSettings setOverrideLight1Azimuth:]
  -[VKDebugSettings setAltitudeHighResSatellite:]
  -[VKDebugSettings useMetalRenderer]
  -[VKDebugSettings paintSelectedMapTiles]
  -[VKDebugSettings setPaintJunctions:]
  -[VKDebugSettings shouldFreezeLayoutCamera]
  -[VKDebugSettings muninGraphConnections]
  -[VKDebugSettings setTexturedTrafficCasing:]
  -[VKDebugSettings altitudePrintRenderedTilesStat]
  -[VKDebugSettings paintLabelCounts]
  -[VKDebugSettings setMuninReplayLastTap:]
  -[VKDebugSettings setForceBumpNextTap:]
  -[VKDebugSettings setAltitudeMipmapFlyover:]
  -[VKDebugSettings minFovSpring]
  -[VKDebugSettings altitudeMipmapFlyover]
  -[VKDebugSettings setShowNavCameraDebugConsoleProperties:]
  -[VKDebugSettings enableRouteShareSectionDebugging]
  -[VKDebugSettings overrideLight3Altitude]
  -[VKDebugSettings overrideLight3]
  -[VKDebugSettings setEtaLabelsAvoidScreenEdges:]
  -[VKDebugSettings setPaintRoadTileData:]
  -[VKDebugSettings slowTransitions]
  -[VKDebugSettings setDisableTransitLineDrawing:]
  -[VKDebugSettings setShowNavCameraDebugConsole:]
  -[VKDebugSettings setEnableMuninMiniMapRoadWidths:]
  -[VKDebugSettings paintRoadTiles]
  -[VKDebugSettings overrideLight2]
  -[VKDebugSettings setConstantlyChangeTileGroup:]
  -[VKDebugSettings showNavCameraDebugConsole]
  -[VKDebugSettings paintLoadReason]
  -[VKDebugSettings setEnableARDebugConsole:]
  -[VKDebugSettings lightingEnableLight3]
  -[VKDebugSettings setPaintSelectedMapTiles:]
  -[VKDebugSettings setPaintCoastlines:]
  -[VKDebugSettings setPaintRoadsStitchedByName:]
  -[VKDebugSettings maxFovLandscape]
  -[VKDebugSettings setDefaultFovPortrait:]
  -[VKDebugSettings setPaintMapTiles:]
  -[VKDebugSettings overrideLight1]
  -[VKDebugSettings defaultFovLandscape]
  -[VKDebugSettings setOverrideLight2Altitude:]
  -[VKDebugSettings debugGPUFrameCaptureURL]
  -[VKDebugSettings setDontVerifyRouteToTransitSnapping:]
  -[VKDebugSettings setEnableTrafficFeatureLabelDebugging:]
  -[VKDebugSettings setEnableRouteShareSectionDebugging:]
  -[VKDebugSettings enableARDebugConsole]
  -[VKDebugSettings textureAtlasPageIndex]
  -[VKDebugSettings arRenderAtNativeRate]
  -[VKDebugSettings setLightingStopTime:]
  -[VKDebugSettings overrideLight1Azimuth]
  -[VKDebugSettings holdOntoStyleAttributes]
  -[VKDebugSettings setSelectedMapTilesToPaint:]
  -[VKDebugSettings animationTimeMultiplier]
  -[VKDebugSettings setEnableRoadSignArtworkDebugging:]
  -[VKDebugSettings altitudeHighResSatellite]
  -[VKDebugSettings altitudeLodScale]
  -[VKDebugSettings setSdfGlyphShaderUpscaleFactor:]
  -[VKDebugSettings setLightingStoppedTimeHour:]
  -[VKDebugSettings setAltitudeShowTriggerBounds:]
  -[VKDebugSettings setEnableEtaLabelDebugging:]
  -[VKDebugSettings setCustomLandmarkFromDisk:tileKey:styleKey:styleValue:]
  -[VKDebugSettings useStaticTrafficFeed]
  -[VKDebugSettings setRealisticWireframeEnabled:]
  -[VKDebugSettings altitudeTexturePaging]
  -[VKDebugSettings setSdfGlyphSuperSampleKernelSize:]
  -[VKDebugSettings setShouldFreezeLayoutCamera:]
  -[VKDebugSettings setMuninIntermediatePointStep:]
  -[VKDebugSettings addTileToPaint:]
  -[VKDebugSettings showNavCameraDebugConsoleAttributes]
  -[VKDebugSettings setTextureAtlasIndex:]
  -[VKDebugSettings setHideClientPositionedFeatures:]
  -[VKDebugSettings altitudeTourSpeedupFactor]
  -[VKDebugSettings setPaintTransitCounts:]
  -[VKDebugSettings transitionTimeMultiplier]
  -[VKDebugSettings POIDensityMinNeighbors]
  -[VKDebugSettings setMuninIgnorePlacesMetadata:]
  -[VKDebugSettings altitudeTileQualityThreshold]
  -[VKDebugSettings setPaintTiles:]
  -[VKDebugSettings enableMuninMiniMapComposedEdgeRoadColoring]
  -[VKDebugSettings setPaintPolygonTiles:]
  -[VKDebugSettings ribbonCrispness]
  -[VKDebugSettings setDumpRouteAndPath:]
  -[VKDebugSettings setPaintKeysInView:]
  -[VKDebugSettings setDisableContinuousMultiSectionRoutes:]
  -[VKDebugSettings overrideNeworkDefaultsBaseSSLPMSwitch]
  -[VKDebugSettings showManeuverPoints]
  -[VKDebugSettings slowMotionBump]
  -[VKDebugSettings altitudePauseLoading]
  -[VKDebugSettings setKeepTooCloseServerPositionedTransitFeatures:]
  -[VKDebugSettings disableBackgroundLabelLayout]
  -[VKDebugSettings setShowManeuverPoints:]
  -[VKDebugSettings shouldOverrideUpscaleFactor]
  -[VKDebugSettings labelUpdateMapTilesContinuously]
  -[VKDebugSettings POIDensityMaxNeighbors]
  -[VKDebugSettings lightingEnableLight2]
  -[VKDebugSettings textlessPOIsEnabled]
  -[VKDebugSettings setDisableStylesheetAnimations:]
  -[VKDebugSettings readLandmarksFromDisk]
  -[VKDebugSettings setAltitudeShowNightLight:]
  -[VKDebugSettings setDisableRoute:]
  -[VKDebugSettings setHideServerPositionedTransitFeatures:]
  -[VKDebugSettings setPaintLoadReason:]
  -[VKDebugSettings muninIgnorePlacesMetadata]
  -[VKDebugSettings hideClientPositionedFeatures]
  -[VKDebugSettings removeTileToPaint]
  -[VKDebugSettings setMuninOverrideParallax:]
  -[VKDebugSettings continuousMultiSectionRouteAdditionalOverlap]
  -[VKDebugSettings setPOIDensityMinNeighbors:]
  -[VKDebugSettings setHighlightRouteLineSnappingStatus:]
  -[VKDebugSettings setPaintPointTiles:]
  -[VKDebugSettings keepTooCloseServerPositionedTransitFeatures]
  -[VKDebugSettings setShowNavCameraDebugOverlay:]
  -[VKDebugSettings labelCollisionDisabled]
  -[VKDebugSettings setLodOverride:]
  -[VKDebugSettings setDisableTransitLineMerging:]
  -[VKDebugSettings setPaintRoadTiles:]
  -[VKDebugSettings setEnableRouteIntersectionTesting:]
  -[VKDebugSettings setHideDirectionalArrows:]
  -[VKDebugSettings setTransitHighlighting:]
  -[VKDebugSettings selectedMapTilesToPaint]
  -[VKDebugSettings altitudeShowTriggerBounds]
  -[VKDebugSettings setShouldOverrideSuperSampleKernelSize:]
  -[VKDebugSettings observeValueForKeyPath:ofObject:change:context:]
  -[VKDebugSettings setDisableOverlayTextConsole:]
  -[VKDebugSettings setMaxFovLandscape:]
  -[VKDebugSettings setAltitudeMipmapObjectTree:]
  -[VKDebugSettings setDisableBackgroundLabelLayout:]
  -[VKDebugSettings forceBumpNextTap]
  -[VKDebugSettings setDisableIconTextureAtlas:]
  -[VKDebugSettings setUseMetalRenderer:]
  -[VKDebugSettings setArSwipeGesture:]
  -[VKDebugSettings paintCoastlines]
  -[VKDebugSettings setMinFovSpring:]
  -[VKDebugSettings paintLabelRoadFeatures]
  -[VKDebugSettings setOverrideAmbient:]
  -[VKDebugSettings setEtaLabelDebugScore:]
  -[VKDebugSettings disableContinuousMultiSectionRoutes]
  -[VKDebugSettings labelDedupingDisabled]
  -[VKDebugSettings setPaintLandcoverTiles:]
  -[VKDebugSettings altitudeMipmapObjectTree]
  -[VKDebugSettings setLabelHighlightingTransitFeaturesOnly:]
  -[VKDebugSettings paintLabelCollisionLines]
  -[VKDebugSettings muninTapState]
  -[VKDebugSettings lodOverride]
  -[VKDebugSettings sdfGlyphShaderUpscaleFactor]
  -[VKDebugSettings setShowNavCameraDebugLegend:]
  -[VKDebugSettings paintLabelBounds]
  -[VKDebugSettings muninDebugLayer]
  -[VKDebugSettings setHideServerPositionedRoadFeatures:]
  -[VKDebugSettings displayTextureAtlas]
  -[VKDebugSettings setShouldUseTestTileLoader:]
  -[VKDebugSettings enableSignPostEvents]
  -[VKDebugSettings setCustomLandmarkFromData:tileKey:texturePath:]
  -[VKDebugSettings overrideLight3Azimuth]
  -[VKDebugSettings setDefaultFovLandscape:]
  -[VKDebugSettings setTextlessPOIsMinZoom:]
  -[VKDebugSettings setUseBuildingShadowTexture:]
  -[VKDebugSettings labelOcclusionDisabled]
  -[VKDebugSettings showRouteLineDebugPoints]
  -[VKDebugSettings setEnableMuninMiniMapCollectionPoints:]
  -[VKDebugSettings labelHideLineFeatures]
  -[VKDebugSettings setEnableLoggingInLockScreen:]
  -[VKDebugSettings etaLabelsAvoidScreenEdges]
  -[VKDebugSettings setMuninTransitionMaxResolution:]
  -[VKDebugSettings setDebugGPUFrameCaptureURL:]
  -[VKDebugSettings setDebugOverlayOffsetX:]
  -[VKDebugSettings muninOverrideParallax]
  -[VKDebugSettings setLightingAccelerateTime:]
  -[VKDebugSettings setArDefaultHeight:]
  -[VKDebugSettings overrideAmbient]
  -[VKDebugSettings setAltitudePrintRenderedTilesStat:]
  -[VKDebugSettings setAltitudeLodScale:]
  -[VKDebugSettings setLabelBaseSSLPMEnabled:]
  -[VKDebugSettings setPOIDensityMaxNeighbors:]
  -[VKDebugSettings paintKeysInView]
  -[VKDebugSettings enableAROmniTileLoader]
  -[VKDebugSettings muninReplayLastTap]
  -[VKDebugSettings slowAnimations]
  -[VKDebugSettings paintMapTiles]
  -[VKDebugSettings altitudeShowNightLight]
  -[VKDebugSettings labelHidePointFeatures]
  -[VKDebugSettings labelCollideContinuously]
  -[VKDebugSettings lightingEnableAmbient]
  -[VKDebugSettings shouldOverrideSuperSampleKernelSize]
  -[VKDebugSettings forceBumpAll]
  -[VKDebugSettings dontVerifyRouteToTransitSnapping]
  -[VKDebugSettings altitudeMipmapSatellite]
  -[VKDebugSettings showPerformanceGroup:]
  -[VKDebugSettings setForceEtaLabelPlacement:]
  -[VKDebugSettings numPerformanceGroups]
  -[VKDebugSettings setReadLandmarksFromDisk:]
  -[VKDebugSettings setMuninTransitionMinResolution:]
  -[VKDebugSettings setLightingOverrideLight3:]
  -[VKDebugSettings disableRouteAnnotationLimit]
  -[VKDebugSettings setSuppressFootprints:]
  -[VKDebugSettings paintRoadTileData]
  -[VKDebugSettings lightingOverrideLight1]
  -[VKDebugSettings textureAtlasIndex]
  -[VKDebugSettings arVirtualPlaneHeight]
  -[VKDebugSettings dontMapMatchToSnappedRouteLine]
  -[VKDebugSettings enableTrafficFeatureLabelDebugging]
  -[VKDebugSettings labelFacingCullDisabled]
  -[VKDebugSettings paintStandardLabelMapData]
  -[VKDebugSettings paintTiles]
  -[VKDebugSettings setDebugStyleManager:]
  -[VKDebugSettings setPaintPolygonLayerData:]
  -[VKDebugSettings setLabelCollisionDisabled:]
  -[VKDebugSettings etaLabelDebugOrientationMask]
  -[VKDebugSettings muninOverrideFov]
  -[VKDebugSettings setOverrideLight2:]
  -[VKDebugSettings maxFovPortrait]
  -[VKDebugSettings layoutContinuously]
  -[VKDebugSettings overlaysShouldDrawDebug]
  -[VKDebugSettings enableLoggingInLockScreen]
  -[VKDebugSettings textlessPOIsMinZoom]
  -[VKDebugSettings setOverrideLight1:]
  -[VKDebugSettings setEnableLegacyLineLabeling:]
  -[VKDebugSettings setDisableTransitLineGroupMerging:]
  -[VKDebugSettings enableLegacyLineLabeling]
  -[VKDebugSettings setMuninDebugLayer:]
  -[VKDebugSettings arOverrideDefaults]
  -[VKDebugSettings setPaintBuildings:]
  -[VKDebugSettings arPinchGesture]
  -[VKDebugSettings texturedTrafficCasing]
  -[VKDebugSettings overrideLod]
  -[VKDebugSettings drawPerformanceHUD]
  -[VKDebugSettings setPaintLabelRoadFeatures:]
  -[VKDebugSettings setLabelHighlighting:]
  -[VKDebugSettings paintTransitCounts]
  -[VKDebugSettings hideDirectionalArrows]
  -[VKDebugSettings enableMuninMiniMapCollectionPoints]
  -[VKDebugSettings setLightingEnableLight2:]
  -[VKDebugSettings enableMuninMiniMapRoadZData]
  -[VKDebugSettings setLabelOcclusionDisabled:]
  -[VKDebugSettings dontMatchRouteLine]
  -[VKDebugSettings setDisableIntraLinkTransitLineCrossings:]
  -[VKDebugSettings enableEtaLabelDebugging]
  -[VKDebugSettings setLayoutContinuously:]
  -[VKDebugSettings setLandmark2DStrokeSettings:]
  -[VKDebugSettings setArPinchGesture:]
  -[VKDebugSettings muninRoadNetworkMiniMapAreaInMeters]
  -[VKDebugSettings setHoldOntoStyleAttributes:]
  -[VKDebugSettings isInstalledInLockScreen]
  -[VKDebugSettings useBuildingShadowTexture]
  -[VKDebugSettings debugCaptureNextGPUFrame]
  -[VKDebugSettings defaultFovPortrait]
  -[VKDebugSettings altitudeShowTileBounds]
  -[VKDebugSettings footprintsToSuppress]
  -[VKDebugSettings setLabelFlipAlternatePositionsEnable:]
  -[VKDebugSettings altitudeFreezeViewNode]
  -[VKDebugSettings setSlowMotionBump:]
  -[VKDebugSettings enableRoadSignArtworkDebugging]
  -[VKDebugSettings setOverrideIntermediateLod:]
  -[VKDebugSettings setAltitudeFreezeViewNode:]
  -[VKDebugSettings setAltitudeMipmapSatellite:]
  -[VKDebugSettings hidePerformanceGroup:]
  -[VKDebugSettings transitHighlighting]
  -[VKDebugSettings labelStyleOverridesDisabled]
  -[VKDebugSettings setAltitudeTourSpeedup:]
  -[VKDebugSettings setShowRouteLineDebugPoints:]
  -[VKDebugSettings paintRoadBoundaries]
  -[VKDebugSettings setMuninGraphConnections:]
  -[VKDebugSettings setIntermediateLodOverride:]
  -[VKDebugSettings setTextureAtlasPageIndex:]
  -[VKDebugSettings trackingCameraZoomFurther]
  -[VKDebugSettings shouldUseSDFSuperSampling]
  -[VKDebugSettings maxFovSpring]
  -[VKDebugSettings setEnableEtaLabelRectDebugging:]
  -[VKDebugSettings lightingOverrideLight3]
  -[VKDebugSettings paintRoadsStitchedByName]
  -[VKDebugSettings setShowNavLabelOverlay:]
  -[VKDebugSettings setDontMapMatchToSnappedRouteLine:]
  -[VKDebugSettings lightingStopTime]
  -[VKDebugSettings paintVertices]
  -[VKDebugSettings showTrafficCasing]
  -[VKDebugSettings setDebugOverlayOffsetY:]
  -[VKDebugSettings addFootprintToSuppress:]
  -[VKDebugSettings labelAutoOffsetRoadText]
  -[VKDebugSettings setPrioritizeTrafficSkeleton:]
  -[VKDebugSettings setMuninRoadNetworkMiniMapAreaInMeters:]
  -[VKDebugSettings muninParallaxSpring]
  -[VKDebugSettings setEtaLabelDebugOrientationMask:]
  -[VKDebugSettings showNavCameraDebugOverlay]
  -[VKDebugSettings setLabelAllowDefaultStyle:]
  -[VKDebugSettings paintRoadSigns]
  -[VKDebugSettings setAltitudeFadeSpeed:]
  -[VKDebugSettings setLightingOverrideAmbient:]
  -[VKDebugSettings customLandmarkObjectGroupsForKey:]
  -[VKDebugSettings setMaxFovSpring:]
  -[VKDebugSettings constantlyChangeTileGroup]
  -[VKDebugSettings setEnableMuninMiniMapRoadZData:]
  -[VKDebugSettings setDumpTransitTileContents:]
  -[VKDebugSettings labelFlipAlternatePositionsEnable]
  -[VKDebugSettings debugStyleManager]
  -[VKDebugSettings setEnableSignPostEvents:]
  -[VKDebugSettings paintJunctions]
  -[VKDebugSettings disableIconTextureAtlas]
  -[VKDebugSettings disableTransitLineDrawing]
  -[VKDebugSettings setPaintRoadBoundaries:]
  -[VKDebugSettings disableRoute]
  -[VKDebugSettings setLabelHidePointFeatures:]
  -[VKDebugSettings disableTransitLineGroupMerging]
  -[VKDebugSettings setArRenderAtNativeRate:]
  -[VKDebugSettings setAltitudeTexturePaging:]
  -[VKDebugSettings setArOverrideDefaults:]
  -[VKDebugSettings hideServerPositionedTransitFeatures]
  -[VKDebugSettings dumpTransitTileContents]
  -[VKDebugSettings clearFootprintsToSuppress]
  -[VKDebugSettings arSwipeGesture]
  -[VKDebugSettings showNavLabelOverlay]


VKRouteAnnotation : VKTrafficFeature
 @property  GEOStyleAttributes *originalStyleAttributes
 @property  GEOMiniCard *infoCard

  // instance methods
  -[VKRouteAnnotation initWithRouteAnnotation:onRoute:]
  -[VKRouteAnnotation dealloc]
  -[VKRouteAnnotation infoCard]
  -[VKRouteAnnotation populateDebugNode:]
  -[VKRouteAnnotation _originalStyleAttributes]


VKLabelNavRoad : NSObject <VKLabelNavFeature>
 @property  r^{shared_ptr<md::LabelTile>=^{LabelTile}^{__shared_weak_count}} tile
 @property  NSString *name
 @property  r* cstrName
 @property  NSString *shieldDisplayGroup
 @property  NSString *shieldGroup
 @property  ^{?=II^{?}} junctionB
 @property  VKLabelNavJunction *navJunctionA
 @property  {Matrix<float direction
 @property  BOOL isOnRoute
 @property  BOOL isStartOfRoadName
 @property  BOOL isInGuidance
 @property  BOOL isGuidanceStepStart
 @property  BOOL areLabelsDisabled
 @property  {PolylineCoordinate=If} routeOffset
 @property  float routeCrossProduct
 @property  long long intraRoadPriority
 @property  BOOL isRoadLabelUnique
 @property  BOOL isAwayFromRoute
 @property  BOOL suppressRoadSignIfShieldPresent
 @property  BOOL isRamp
 @property  BOOL isOnewayToJunction
 @property  int roadClass
 @property  unsigned char roadSignAlignment
 @property  BOOL isEtaFeature
 @property  BOOL isTrafficCameraFeature
 @property  BOOL isPicked

  // instance methods
  -[VKLabelNavRoad tile]
  -[VKLabelNavRoad length]
  -[VKLabelNavRoad direction]
  -[VKLabelNavRoad isRamp]
  -[VKLabelNavRoad .cxx_construct]
  -[VKLabelNavRoad dealloc]
  -[VKLabelNavRoad .cxx_destruct]
  -[VKLabelNavRoad isAwayFromRoute]
  -[VKLabelNavRoad navJunctionA]
  -[VKLabelNavRoad setDirection:]
  -[VKLabelNavRoad name]
  -[VKLabelNavRoad isPicked]
  -[VKLabelNavRoad junctionB]
  -[VKLabelNavRoad isInGuidance]
  -[VKLabelNavRoad hasVisibleSigns]
  -[VKLabelNavRoad hasVisibleShields]
  -[VKLabelNavRoad _updateWithNavContext:threshold:]
  -[VKLabelNavRoad _updateWithNavContext:]
  -[VKLabelNavRoad _worldRoadPoints:]
  -[VKLabelNavRoad clearRoadSign]
  -[VKLabelNavRoad _worldPointForRoadOffset:worldPoint:]
  -[VKLabelNavRoad labelWithType:]
  -[VKLabelNavRoad _findRoadOffsetForDistanceToRay:rayStart:rayVector:roadGraph:]
  -[VKLabelNavRoad clearRoadShield]
  -[VKLabelNavRoad _findLabelAnchorPoint:isShieldLabel:desiredOffsetDistance:maxOffsetDistance:minJunctionDistance:roadGraph:]
  -[VKLabelNavRoad roadSignAlignment]
  -[VKLabelNavRoad shieldDisplayGroup]
  -[VKLabelNavRoad _newLabelWithNavContext:isShieldLabel:worldPoint:alignment:artworkCache:]
  -[VKLabelNavRoad isStartOfRoadName]
  -[VKLabelNavRoad intraRoadPriority]
  -[VKLabelNavRoad isGuidanceStepStart]
  -[VKLabelNavRoad isTrafficCameraFeature]
  -[VKLabelNavRoad initWithRoadEdge:navJunctionA:routeOffset:tile:]
  -[VKLabelNavRoad prepareStyleVarsWithContext:]
  -[VKLabelNavRoad isOnewayToJunction]
  -[VKLabelNavRoad getRoadEdge:]
  -[VKLabelNavRoad matchesRoadEdge:]
  -[VKLabelNavRoad matchesRoad:]
  -[VKLabelNavRoad shieldGroup]
  -[VKLabelNavRoad createLabelWithNavContext:isShieldLabel:desiredOffsetDistance:maxOffsetDistance:minJunctionDistance:minRouteDistance:roadGraph:artworkCache:]
  -[VKLabelNavRoad appendSimplifiedWorldRoadPoints:]
  -[VKLabelNavRoad recreateRoadSignWithAlignment:navContext:artworkCache:]
  -[VKLabelNavRoad recreateRoadShieldWithNavContext:artworkCache:]
  -[VKLabelNavRoad setIsOnRoute:]
  -[VKLabelNavRoad setIsStartOfRoadName:]
  -[VKLabelNavRoad setIsInGuidance:]
  -[VKLabelNavRoad routeCrossProduct]
  -[VKLabelNavRoad setIsGuidanceStepStart:]
  -[VKLabelNavRoad setRouteCrossProduct:]
  -[VKLabelNavRoad setIntraRoadPriority:]
  -[VKLabelNavRoad areLabelsDisabled]
  -[VKLabelNavRoad setAreLabelsDisabled:]
  -[VKLabelNavRoad isRoadLabelUnique]
  -[VKLabelNavRoad setIsRoadLabelUnique:]
  -[VKLabelNavRoad suppressRoadSignIfShieldPresent]
  -[VKLabelNavRoad cstrName]
  -[VKLabelNavRoad roadClass]
  -[VKLabelNavRoad setRouteOffset:]
  -[VKLabelNavRoad hasShield]
  -[VKLabelNavRoad isOnRoute]
  -[VKLabelNavRoad layoutWithNavContext:]
  -[VKLabelNavRoad setIsPicked:]
  -[VKLabelNavRoad isEtaFeature]
  -[VKLabelNavRoad routeOffset]


LabelNavRouteLabeler : NSObject
 @property  BOOL drawRoadSigns
 @property  VKPolylineOverlay *route
 @property  NSString *currentLocationText
 @property  NSString *currentRoadName
 @property  NSString *currentShieldGroup
 @property  {PolylineCoordinate=If} routeUserOffset
 @property  r^{vector<std::__1::shared_ptr<md::NavLabel> activeSigns
 @property  BOOL needsLayout
 @property  ^{NavCurrentRoadSign=^^?{basic_string<char currentRoadSign
 @property  float currentRoadSignPixelHeight
 @property  BOOL debugDisableRoadSignLimit
 @property  BOOL debugEnableShieldsOnRouteLine
 @property  ^{VKLabelNavArtworkCache={unique_ptr<geo::Cache<unsigned long artworkCache

  // instance methods
  -[LabelNavRouteLabeler _initalizeCurrentRoadInfo]
  -[LabelNavRouteLabeler activeSigns]
  -[LabelNavRouteLabeler grabTilesFromScene:]
  -[LabelNavRouteLabeler setMaxVisibleRoadsigns:]
  -[LabelNavRouteLabeler route]
  -[LabelNavRouteLabeler setCurrentShieldGroup:]
  -[LabelNavRouteLabeler init]
  -[LabelNavRouteLabeler drawNavOverlayDebugView:navContext:]
  -[LabelNavRouteLabeler _addLabelsAtJunctions:withContext:maxLabelsToAdd:]
  -[LabelNavRouteLabeler artworkCache]
  -[LabelNavRouteLabeler setCurrentRoadName:]
  -[LabelNavRouteLabeler computeRoutePositionForPOIAtPixel:currentPosition:context:]
  -[LabelNavRouteLabeler _updateRoadsInGuidance]
  -[LabelNavRouteLabeler _createOrUpdateLabelForRoad:isShield:navContext:]
  -[LabelNavRouteLabeler debugDisableRoadSignLimit]
  -[LabelNavRouteLabeler .cxx_construct]
  -[LabelNavRouteLabeler dealloc]
  -[LabelNavRouteLabeler orientationForRoadSign:roadLabel:navContext:]
  -[LabelNavRouteLabeler isNavMode]
  -[LabelNavRouteLabeler .cxx_destruct]
  -[LabelNavRouteLabeler _tryAddRoadSignForRoad:isShield:navContext:labelCollisionEnabled:]
  -[LabelNavRouteLabeler _updateRoadStarts]
  -[LabelNavRouteLabeler clearSceneIsMemoryWarning:]
  -[LabelNavRouteLabeler setRoute:]
  -[LabelNavRouteLabeler setStyleManager:]
  -[LabelNavRouteLabeler setArtworkCache:]
  -[LabelNavRouteLabeler _updateUniqueOffRouteRoads]
  -[LabelNavRouteLabeler _refreshGuidanceRoadNames]
  -[LabelNavRouteLabeler _updatePreferredLabelPlacements]
  -[LabelNavRouteLabeler layoutWithNavContext:avoidanceRects:]
  -[LabelNavRouteLabeler setDrawRoadSigns:]
  -[LabelNavRouteLabeler debugEnableShieldsOnRouteLine]
  -[LabelNavRouteLabeler _tryAddRoadSignForJunction:navContext:labelCollisionEnabled:]
  -[LabelNavRouteLabeler _collideLabel:activeLabel:labelsToRemove:]
  -[LabelNavRouteLabeler _updateActiveRouteRange]
  -[LabelNavRouteLabeler setCurrentLocationText:]
  -[LabelNavRouteLabeler currentRoadSign]
  -[LabelNavRouteLabeler needsLayout]
  -[LabelNavRouteLabeler drawRoadSignOrientationDebugView:navContext:]
  -[LabelNavRouteLabeler currentRoadName]
  -[LabelNavRouteLabeler _tryAddLabel:navContext:labelCollisionEnabled:]
  -[LabelNavRouteLabeler createRoadSignOrientationResolver:navContext:]
  -[LabelNavRouteLabeler _reloadRouteJunctions]
  -[LabelNavRouteLabeler _addJunctionsForTile:]
  -[LabelNavRouteLabeler _updateCurrentRoadInfo]
  -[LabelNavRouteLabeler styleManagerDidStartAnimating]
  -[LabelNavRouteLabeler drawRoadSigns]
  -[LabelNavRouteLabeler currentShieldGroup]
  -[LabelNavRouteLabeler styleManagerDidChange:]
  -[LabelNavRouteLabeler styleManagerDidFinishAnimating]
  -[LabelNavRouteLabeler currentLocationText]
  -[LabelNavRouteLabeler currentRoadSignPixelHeight]
  -[LabelNavRouteLabeler resolveOrientation:road:currentOrientation:]
  -[LabelNavRouteLabeler setRouteUserOffset:]
  -[LabelNavRouteLabeler _generateCurrentRoadSignWithContext:]
  -[LabelNavRouteLabeler routeUserOffset]
  -[LabelNavRouteLabeler needsDebugDraw]
  -[LabelNavRouteLabeler debugDraw:overlayConsole:navContext:]
  -[LabelNavRouteLabeler _addLabelsForJunctions:withContext:maxLabelsToAdd:useAllJunctions:placeShieldsFrontToBack:]
  -[LabelNavRouteLabeler setDebugDisableRoadSignLimit:]
  -[LabelNavRouteLabeler _findRouteOverlappingJunctionFrom:routeJunctions:lookBackward:firstOverlap:secondOverlap:]
  -[LabelNavRouteLabeler setDebugEnableShieldsOnRouteLine:]


VKRouteRoadInfo : NSObject
 @property  NSString *name
 @property  NSString *shieldGroup
 @property  {PolylineCoordinate=If} routeOffset

  // instance methods
  -[VKRouteRoadInfo .cxx_construct]
  -[VKRouteRoadInfo dealloc]
  -[VKRouteRoadInfo name]
  -[VKRouteRoadInfo shieldGroup]
  -[VKRouteRoadInfo initWithName:shieldGroup:offset:]
  -[VKRouteRoadInfo routeOffset]


VKGuidanceStepInfo : NSObject
 @property  NSString *roadName
 @property  int routePoint

  // instance methods
  -[VKGuidanceStepInfo dealloc]
  -[VKGuidanceStepInfo roadName]
  -[VKGuidanceStepInfo routePoint]
  -[VKGuidanceStepInfo initWithRoadName:point:]


VKARGestureCameraBehavior : VKGestureCameraBehavior
  // instance methods
  -[VKARGestureCameraBehavior updatePan:lastScreenPoint:]
  -[VKARGestureCameraBehavior updateRotate:atScreenPoint:]
  -[VKARGestureCameraBehavior updateZoom:oldFactor:newFactor:]
  -[VKARGestureCameraBehavior .cxx_construct]
  -[VKARGestureCameraBehavior dealloc]
  -[VKARGestureCameraBehavior initWithARCameraController:]
  -[VKARGestureCameraBehavior beginPan:]


MDARController : NSObject <ARSessionDelegate>
 @property  <MDARControllerDelegate> *delegate
 @property  ARSession *session
 @property  unsigned long sessionInterruptedReason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MDARController isSupported]
  +[MDARController vkARTrackingStateFromARTrackingState:]
  +[MDARController vkARTrackingStateReasonFromARTrackingStateReason:]

  // instance methods
  -[MDARController pause]
  -[MDARController init]
  -[MDARController session]
  -[MDARController dealloc]
  -[MDARController run:]
  -[MDARController _avCaptureSessionWasInterrupted:]
  -[MDARController sessionWasInterrupted:]
  -[MDARController session:didFailWithError:]
  -[MDARController session:cameraDidChangeTrackingState:]
  -[MDARController sessionInterruptionEnded:]
  -[MDARController sessionInterruptedReason]
  -[MDARController setDelegate:]
  -[MDARController delegate]


VKClientLocalizedStrings : NSObject
  // instance methods
  -[VKClientLocalizedStrings getTextForKey:text:locale:]
  -[VKClientLocalizedStrings dealloc]
  -[VKClientLocalizedStrings initWithStrings:locale:]


VKMapSnapshot : NSObject <NSSecureCoding>
 @property  double scale
 @property  ^{CGImage=} image

  // class methods
  +[VKMapSnapshot supportsSecureCoding]

  // instance methods
  -[VKMapSnapshot pointForCoordinate:]
  -[VKMapSnapshot imageDataInFormat:]
  -[VKMapSnapshot dealloc]
  -[VKMapSnapshot _initWithImage:scale:camera:]
  -[VKMapSnapshot image]
  -[VKMapSnapshot encodeWithCoder:]
  -[VKMapSnapshot imageSurface]
  -[VKMapSnapshot coordinateForPoint:]
  -[VKMapSnapshot initWithCoder:]
  -[VKMapSnapshot scale]


VKVenueFeatureMarker : VKFeatureMarker
 @property  unsigned long businessID
 @property  GEOMapItemIdentifier *mapIdentifier
 @property  NSArray *buildings

  // instance methods
  -[VKVenueFeatureMarker shortName]
  -[VKVenueFeatureMarker name]
  -[VKVenueFeatureMarker businessID]
  -[VKVenueFeatureMarker buildings]
  -[VKVenueFeatureMarker initWithVenue:localize:]
  -[VKVenueFeatureMarker venueFeatureMarker]
  -[VKVenueFeatureMarker mapIdentifier]


VKCustomFeatureDataSourceObserverThunk : NSObject <VKCustomFeatureDataSourceObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCustomFeatureDataSourceObserverThunk .cxx_construct]
  -[VKCustomFeatureDataSourceObserverThunk dealloc]
  -[VKCustomFeatureDataSourceObserverThunk .cxx_destruct]
  -[VKCustomFeatureDataSourceObserverThunk dataSource:featuresDidChangeForRect:]
  -[VKCustomFeatureDataSourceObserverThunk dataSource:didChangeSceneID:]
  -[VKCustomFeatureDataSourceObserverThunk dataSource:didChangeSceneState:]
  -[VKCustomFeatureDataSourceObserverThunk clearObserver]
  -[VKCustomFeatureDataSourceObserverThunk initWithDataSource:observer:]


VKTimer : NSObject
 @property  double nextFireDate

  // instance methods
  -[VKTimer disable]
  -[VKTimer nextFireDate]
  -[VKTimer dealloc]
  -[VKTimer initWithTarget:selector:queue:]
  -[VKTimer fireAfter:]
  -[VKTimer invalidate]


VKScreenCameraController : VKCameraController <VKAnnotationTrackingCameraController, VKGesturingCameraController>
 @property  BOOL userChangedZoomSinceLastProgrammaticRegionChange
 @property  {?=dd} centerCoordinateDistanceRange
 @property  VKCameraRegionRestriction *regionRestriction
 @property  {?=BdBB} annotationTrackingBehavior
 @property  long long annotationTrackingHeadingAnimationDisplayRate
 @property  BOOL animatingToTrackAnnotation
 @property  <VKTrackableAnnotation> *trackingAnnotation
 @property  BOOL trackingHeading
 @property  BOOL isAnimatingToTrackAnnotation
 @property  BOOL isTrackingHeading
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKScreenCameraController tileSize]
  -[VKScreenCameraController setCamera:]
  -[VKScreenCameraController stopAnimations]
  -[VKScreenCameraController isAnimating]
  -[VKScreenCameraController setRegionRestriction:duration:timingFunction:]
  -[VKScreenCameraController panWithOffset:relativeToScreenPoint:animated:duration:completionHandler:]
  -[VKScreenCameraController setEdgeInsets:]
  -[VKScreenCameraController dealloc]
  -[VKScreenCameraController durationToAnimateToMapRegion:]
  -[VKScreenCameraController stopSnappingAnimations]
  -[VKScreenCameraController stopPanningAtPoint:]
  -[VKScreenCameraController regionRestriction]
  -[VKScreenCameraController zoom:withFocusPoint:completionHandler:]
  -[VKScreenCameraController enter3DMode]
  -[VKScreenCameraController startRotatingWithFocusPoint:]
  -[VKScreenCameraController tapAtPoint:]
  -[VKScreenCameraController initWithMapDataAccess:animationRunner:runLoopController:cameraDelegate:]
  -[VKScreenCameraController updateRotationWithFocusPoint:newValue:]
  -[VKScreenCameraController stopPitchingWithFocusPoint:]
  -[VKScreenCameraController centerCoordinateDistanceRange]
  -[VKScreenCameraController setCenterCoordinateDistanceRange:]
  -[VKScreenCameraController trackingAnnotation]
  -[VKScreenCameraController annotationTrackingHeadingAnimationDisplayRate]
  -[VKScreenCameraController isTrackingHeading]
  -[VKScreenCameraController updatePanWithTranslation:]
  -[VKScreenCameraController stopPinchingWithFocusPoint:]
  -[VKScreenCameraController stopTrackingAnnotation]
  -[VKScreenCameraController setMapRegion:pitch:yaw:duration:timingCurve:completion:]
  -[VKScreenCameraController isAnimatingToTrackAnnotation]
  -[VKScreenCameraController stopRegionAnimation]
  -[VKScreenCameraController userChangedZoomSinceLastProgrammaticRegionChange]
  -[VKScreenCameraController clampZoomLevelIfNecessary]
  -[VKScreenCameraController updatePinchWithFocusPoint:oldFactor:newFactor:]
  -[VKScreenCameraController setAnnotationTrackingHeadingAnimationDisplayRate:]
  -[VKScreenCameraController setRegionRestriction:]
  -[VKScreenCameraController stopRotatingWithFocusPoint:]
  -[VKScreenCameraController setCenterCoordinateDistanceRange:duration:timingFunction:]
  -[VKScreenCameraController updatePitchWithFocusPoint:translation:]
  -[VKScreenCameraController setUserChangedZoomSinceLastProgrammaticRegionChange:]
  -[VKScreenCameraController annotationTrackingBehavior]
  -[VKScreenCameraController setAnnotationTrackingBehavior:]
  -[VKScreenCameraController startTrackingAnnotation:trackHeading:animated:duration:timingFunction:]
  -[VKScreenCameraController snapMapIfNecessary:]
  -[VKScreenCameraController setCenterCoordinate3D:altitude:yaw:pitch:duration:animationStyle:timingCurve:completion:]
  -[VKScreenCameraController exit3DMode]
  -[VKScreenCameraController startPanningAtPoint:panAtStartPoint:]
  -[VKScreenCameraController startPinchingWithFocusPoint:]
  -[VKScreenCameraController setYaw:animated:]
  -[VKScreenCameraController startPitchingWithFocusPoint:]
  -[VKScreenCameraController setCenterCoordinate:altitude:yaw:pitch:duration:animationStyle:timingCurve:completion:]
  -[VKScreenCameraController canEnter3DMode]
  -[VKScreenCameraController transferGestureState:]
  -[VKScreenCameraController updatePitchWithFocusPoint:degrees:]


GRLResourceGroupObserver : NSObject <GEOResourceManifestTileGroupObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GRLResourceGroupObserver resourceManifestManagerWillChangeActiveTileGroup:]
  -[GRLResourceGroupObserver initWithResourceProvider:]


RegionalResourceObserver : NSObject
  // instance methods
  -[RegionalResourceObserver .cxx_construct]
  -[RegionalResourceObserver .cxx_destruct]
  -[RegionalResourceObserver initWithResourceProvider:]
  -[RegionalResourceObserver clearProvider]


AltTileFetcher : NSObject
  // instance methods
  -[AltTileFetcher initWithToken:]
  -[AltTileFetcher .cxx_construct]
  -[AltTileFetcher dealloc]
  -[AltTileFetcher .cxx_destruct]
  -[AltTileFetcher cancelJob:]
  -[AltTileFetcher cancelRequests]
  -[AltTileFetcher reportCorruptTile:]
  -[AltTileFetcher fetchDataForJob:]
  -[AltTileFetcher getJobForKey:]
  -[AltTileFetcher updateJobPriority:]
  -[AltTileFetcher purgeExpired:]


VKGlobeCameraController : VKScreenCameraController <VKGesturingCameraController>
 @property  ^{GlobeView=^^?^{GeoServicesLoader}^{ManifestManager}^{TriggerManager}{shared_ptr<altitude::AnchorManager>=^{AnchorManager}^{__shared_weak_count}}^{DtmCacheNode}^{DtmRequestManager}^{FreezeViewNode}{shared_ptr<gdc::Camera>=^{Camera}^{__shared_weak_count}}B{basic_string<char globeView
 @property  BOOL tourShouldResumeWhenDoneGesturing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKGlobeCameraController setGesturing:]
  -[VKGlobeCameraController pitch]
  -[VKGlobeCameraController tileSize]
  -[VKGlobeCameraController restoreViewportFromInfo:]
  -[VKGlobeCameraController centerCoordinate]
  -[VKGlobeCameraController viewportInfo]
  -[VKGlobeCameraController maxPitch]
  -[VKGlobeCameraController altitude]
  -[VKGlobeCameraController heading]
  -[VKGlobeCameraController setRegionRestriction:duration:timingFunction:]
  -[VKGlobeCameraController topDownMinimumZoomLevel]
  -[VKGlobeCameraController panWithOffset:relativeToScreenPoint:animated:duration:completionHandler:]
  -[VKGlobeCameraController isPitched]
  -[VKGlobeCameraController .cxx_construct]
  -[VKGlobeCameraController tapZoom:levels:completionHandler:]
  -[VKGlobeCameraController dealloc]
  -[VKGlobeCameraController durationToAnimateToMapRegion:]
  -[VKGlobeCameraController updateState]
  -[VKGlobeCameraController distanceFromCenterCoordinate]
  -[VKGlobeCameraController .cxx_destruct]
  -[VKGlobeCameraController cameraPosition]
  -[VKGlobeCameraController zoom:withFocusPoint:completionHandler:]
  -[VKGlobeCameraController _updateGlobeFromCamera]
  -[VKGlobeCameraController createMoveToZoomOutZoomInFrameFunction:toLatLon:]
  -[VKGlobeCameraController flyoverTourAnimation:animateToStart:labelChanged:stateChange:]
  -[VKGlobeCameraController stopFlyoverTourAnimation]
  -[VKGlobeCameraController updateCameraManager]
  -[VKGlobeCameraController maximumZoomLevel]
  -[VKGlobeCameraController enter3DMode]
  -[VKGlobeCameraController resumeFlyoverTourAnimation]
  -[VKGlobeCameraController globeView]
  -[VKGlobeCameraController setTourShouldResumeWhenDoneGesturing:]
  -[VKGlobeCameraController stopPinchingWithFocusPoint:]
  -[VKGlobeCameraController setMapRegion:pitch:yaw:duration:timingCurve:completion:]
  -[VKGlobeCameraController presentationYaw]
  -[VKGlobeCameraController minPitch]
  -[VKGlobeCameraController mapRegion]
  -[VKGlobeCameraController currentZoomLevel]
  -[VKGlobeCameraController minimumZoomLevel]
  -[VKGlobeCameraController _updateIsPitched]
  -[VKGlobeCameraController _updateCanEnter3DMode]
  -[VKGlobeCameraController pitch:translation:]
  -[VKGlobeCameraController moveTo:zoom:rotation:tilt:duration:timingCurve:completion:]
  -[VKGlobeCameraController moveToZoomOutZoomInTransition:height:useHeight:zoom:rotation:tilt:duration:timingCurve:completion:]
  -[VKGlobeCameraController earthRadiusAt:]
  -[VKGlobeCameraController moveTo:height:useHeight:zoom:rotation:tilt:duration:timingCurve:completion:]
  -[VKGlobeCameraController tiltTo:animated:exaggerate:]
  -[VKGlobeCameraController rotate:atScreenPoint:]
  -[VKGlobeCameraController zoomToDistance:distance:time:completionHandler:]
  -[VKGlobeCameraController updatePinchWithFocusPoint:oldFactor:newFactor:]
  -[VKGlobeCameraController stopGlobeAnimations]
  -[VKGlobeCameraController isFlyoverTourStarted]
  -[VKGlobeCameraController interruptFlyoverTourAnimation]
  -[VKGlobeCameraController rotateTo:animated:]
  -[VKGlobeCameraController _centerCoordinateForMapRegion:]
  -[VKGlobeCameraController geocAngleBetween:andCoordinate:]
  -[VKGlobeCameraController zoomForMapRegion:]
  -[VKGlobeCameraController widestLatitudeForMapRegion:]
  -[VKGlobeCameraController greatCircleMidPointLatitude:fromLongitude:toLongitude:]
  -[VKGlobeCameraController animateRegionWithDuration:timingFunction:cursor:stepHandler:completionHandler:]
  -[VKGlobeCameraController isFullyPitched]
  -[VKGlobeCameraController animateToRestriction:duration:timingFunction:]
  -[VKGlobeCameraController zoomToDistance:distance:time:]
  -[VKGlobeCameraController slowDownFactorFromLoadProgress]
  -[VKGlobeCameraController adjustLoadingForAnimation:progressFactor:]
  -[VKGlobeCameraController initWithTaskContext:mapDataAccess:animationRunner:runLoopController:cameraDelegate:]
  -[VKGlobeCameraController _fovAdjustment]
  -[VKGlobeCameraController setCurrentZoomLevel:]
  -[VKGlobeCameraController tourShouldResumeWhenDoneGesturing]
  -[VKGlobeCameraController setGlobeView:]
  -[VKGlobeCameraController setCenterCoordinateDistanceRange:duration:timingFunction:]
  -[VKGlobeCameraController setMinZoomLevel:]
  -[VKGlobeCameraController setMaxZoomLevel:]
  -[VKGlobeCameraController startTrackingAnnotation:trackHeading:animated:duration:timingFunction:]
  -[VKGlobeCameraController snapMapIfNecessary:]
  -[VKGlobeCameraController setCenterCoordinate3D:altitude:yaw:pitch:duration:animationStyle:timingCurve:completion:]
  -[VKGlobeCameraController exit3DMode]
  -[VKGlobeCameraController startPinchingWithFocusPoint:]
  -[VKGlobeCameraController pauseFlyoverTourAnimation]
  -[VKGlobeCameraController setYaw:animated:]
  -[VKGlobeCameraController setCenterCoordinate:altitude:yaw:pitch:duration:animationStyle:timingCurve:completion:]
  -[VKGlobeCameraController canEnter3DMode]


VKBuildingGroup : VKPolygonalItemGroup
  // instance methods
  -[VKBuildingGroup initWithStyleQuery:tileZoom:fixedAroundCentroid:contentScale:]
  -[VKBuildingGroup didFinishAddingData]
  -[VKBuildingGroup willAddDataWithAccessor:]
  -[VKBuildingGroup maxAttributeSetsPerGroup]
  -[VKBuildingGroup prepareForBuilding:forRoofStyle:scaleThreshold:]
  -[VKBuildingGroup commitRangesToPointyRoofTopRenderItemBatcher:forMeshAtIndex:cullingMask:featureIdPredicate:]
  -[VKBuildingGroup commitRangesToExtrusionFillRenderItemBatcher:forMeshAtIndex:cullingMask:featureIdPredicate:]
  -[VKBuildingGroup canConstructPointyRoofForPolygon:building:buildingModel:scaleThreshold:]
  -[VKBuildingGroup extrusionStrokeMeshVendor]
  -[VKBuildingGroup .cxx_construct]
  -[VKBuildingGroup .cxx_destruct]
  -[VKBuildingGroup pointyRoofStrokeMeshVendor]
  -[VKBuildingGroup addPointyRoofForBuilding:buildingModel:scaleThreshold:styleIndex:]
  -[VKBuildingGroup commitRangesToExtrusionStrokeRenderItemBatcher:forMeshAtIndex:cullingMask:featureIdPredicate:]
  -[VKBuildingGroup commitRangesToPointyRoofStrokeRenderItemBatcher:forMeshAtIndex:cullingMask:featureIdPredicate:]
  -[VKBuildingGroup strokeMeshes]
  -[VKBuildingGroup pointyRoofFillMeshVendor]
  -[VKBuildingGroup commitRangesToPointyRoofFillRenderItemBatcher:forMeshAtIndex:cullingMask:featureIdPredicate:]
  -[VKBuildingGroup extrusionFillMeshVendor]
  -[VKBuildingGroup fillMeshesForPointyRoofs]
  -[VKBuildingGroup updateWithStyleManager:]
  -[VKBuildingGroup styleQueriesForPointyRoofs:selected:]
  -[VKBuildingGroup addExtrusionForBuilding:index:ofTotal:]
  -[VKBuildingGroup addBuilding:index:ofTotal:accessor:triangulator:prepareExtrusion:forRoofStyle:scaleThreshold:]


MIController : NSObject
 @property  BOOL isActive

  // class methods
  +[MIController sharedController]

  // instance methods
  -[MIController init]
  -[MIController sendData:]
  -[MIController isActive]
  -[MIController activateController:]
  -[MIController handleXPCEvent:]
  -[MIController recievedData:]
  -[MIController deactivateController]
  -[MIController decodeDebugTreeData:]


VKLabelNavJunction : NSObject <VKLabelNavFeature>
 @property  r^{shared_ptr<md::LabelTile>=^{LabelTile}^{__shared_weak_count}} tile
 @property  r^{?=II^{?}} geoJunction
 @property  {Matrix<float tileCoordinate
 @property  {PolylineCoordinate=If} routeOffset
 @property  NSArray *roads
 @property  VKLabelNavRoad *outgoingRoad
 @property  VKLabelNavRoad *incomingRoad
 @property  float distanceFromPreviousShieldLabel
 @property  BOOL isOnDualCarriageway
 @property  BOOL hasSharedRouteDirection
 @property  {Matrix<float sharedRouteDirection
 @property  BOOL isOnRoute
 @property  BOOL isIntraRamp
 @property  BOOL isTileEdgeJunction
 @property  BOOL isRouteRefineJunction
 @property  BOOL isRoadTerminus
 @property  BOOL isIntersection
 @property  BOOL isMultiRoadIntersection
 @property  BOOL isAwayFromRoute
 @property  BOOL isOffRouteGraph
 @property  BOOL isOverpass
 @property  BOOL isRouteOverpass
 @property  int largestRoadClass
 @property  unsigned long depthFromRoute
 @property  VKLabelNavJunction *overpassJunction
 @property  double worldUnitsPerMeter
 @property  NSString *name
 @property  VKLabelNavRoadLabel *junctionSign
 @property  BOOL isVisible
 @property  int requiredLabelPlacement
 @property  int preferredLabelPlacement
 @property  BOOL isRamp
 @property  NSString *shieldDisplayGroup
 @property  BOOL isStartOfRoadName
 @property  BOOL isInGuidance
 @property  long long intraRoadPriority
 @property  BOOL isGuidanceStepStart
 @property  BOOL isEtaFeature
 @property  BOOL isTrafficCameraFeature
 @property  BOOL isPicked

  // instance methods
  -[VKLabelNavJunction tile]
  -[VKLabelNavJunction roads]
  -[VKLabelNavJunction isVisible]
  -[VKLabelNavJunction isRamp]
  -[VKLabelNavJunction .cxx_construct]
  -[VKLabelNavJunction dealloc]
  -[VKLabelNavJunction .cxx_destruct]
  -[VKLabelNavJunction isAwayFromRoute]
  -[VKLabelNavJunction outgoingRoad]
  -[VKLabelNavJunction incomingRoad]
  -[VKLabelNavJunction name]
  -[VKLabelNavJunction isPicked]
  -[VKLabelNavJunction findRoads]
  -[VKLabelNavJunction isOverpass]
  -[VKLabelNavJunction isInGuidance]
  -[VKLabelNavJunction _updateWithNavContext:threshold:]
  -[VKLabelNavJunction depthFromRoute]
  -[VKLabelNavJunction _updateWithNavContext:]
  -[VKLabelNavJunction isOnDualCarriageway]
  -[VKLabelNavJunction worldUnitsPerMeter]
  -[VKLabelNavJunction isMultiRoadIntersection]
  -[VKLabelNavJunction shieldDisplayGroup]
  -[VKLabelNavJunction isStartOfRoadName]
  -[VKLabelNavJunction intraRoadPriority]
  -[VKLabelNavJunction isGuidanceStepStart]
  -[VKLabelNavJunction isTrafficCameraFeature]
  -[VKLabelNavJunction prepareStyleVarsWithContext:]
  -[VKLabelNavJunction createLabelWithNavContext:isDrivingSideRight:artworkCache:]
  -[VKLabelNavJunction junctionSign]
  -[VKLabelNavJunction setDepthFromRoute:]
  -[VKLabelNavJunction evaluateCrossStreets]
  -[VKLabelNavJunction isIntraRamp]
  -[VKLabelNavJunction setIsRouteOverpass:]
  -[VKLabelNavJunction evaluateCrossStreetsUsingRouteJunction:]
  -[VKLabelNavJunction requiredLabelPlacement]
  -[VKLabelNavJunction setPreferredLabelPlacement:]
  -[VKLabelNavJunction setRouteOffset:]
  -[VKLabelNavJunction isOnRoute]
  -[VKLabelNavJunction geoJunction]
  -[VKLabelNavJunction tileCoordinate]
  -[VKLabelNavJunction isIntersection]
  -[VKLabelNavJunction _signOrientationWithDrivingSide:]
  -[VKLabelNavJunction _anchorCoordinateForSignOrientation:]
  -[VKLabelNavJunction isTileEdgeJunction]
  -[VKLabelNavJunction initWithGEOJunction:routeOffset:tile:]
  -[VKLabelNavJunction initWithRoadEdge:atA:routeOffset:tile:]
  -[VKLabelNavJunction matchesLocationForJunction:]
  -[VKLabelNavJunction isRoadTerminus]
  -[VKLabelNavJunction isOffRouteGraph]
  -[VKLabelNavJunction largestRoadClass]
  -[VKLabelNavJunction addRouteEdge:atA:]
  -[VKLabelNavJunction setSharedRouteDirection:]
  -[VKLabelNavJunction preferredLabelPlacement]
  -[VKLabelNavJunction distanceFromPreviousShieldLabel]
  -[VKLabelNavJunction setDistanceFromPreviousShieldLabel:]
  -[VKLabelNavJunction setIsOnDualCarriageway:]
  -[VKLabelNavJunction hasSharedRouteDirection]
  -[VKLabelNavJunction sharedRouteDirection]
  -[VKLabelNavJunction overpassJunction]
  -[VKLabelNavJunction setOverpassJunction:]
  -[VKLabelNavJunction isRouteOverpass]
  -[VKLabelNavJunction isRouteRefineJunction]
  -[VKLabelNavJunction setIsRouteRefineJunction:]
  -[VKLabelNavJunction layoutWithNavContext:]
  -[VKLabelNavJunction setIsPicked:]
  -[VKLabelNavJunction isEtaFeature]
  -[VKLabelNavJunction routeOffset]


VKPuckAnimatorLocationProjector : NSObject
 @property  GEORouteMatch *routeMatch
 @property  GEORouteMatch *projectedRouteMatch
 @property  {Matrix<double projectedPosition
 @property  {?=dd} projectedLocation
 @property  double projectedCourse
 @property  BOOL projectedLocationOnRoute

  // instance methods
  -[VKPuckAnimatorLocationProjector detailedDescription]
  -[VKPuckAnimatorLocationProjector setRouteMatch:]
  -[VKPuckAnimatorLocationProjector init]
  -[VKPuckAnimatorLocationProjector projectedCourse]
  -[VKPuckAnimatorLocationProjector .cxx_construct]
  -[VKPuckAnimatorLocationProjector dealloc]
  -[VKPuckAnimatorLocationProjector routeMatch]
  -[VKPuckAnimatorLocationProjector projectedPosition]
  -[VKPuckAnimatorLocationProjector projectedLocation]
  -[VKPuckAnimatorLocationProjector projectFromLocation:routeMatch:speedMultiplier:]
  -[VKPuckAnimatorLocationProjector reset]
  -[VKPuckAnimatorLocationProjector _updateCourseAndPositionFromRouteMatch]
  -[VKPuckAnimatorLocationProjector setProjectedRouteMatch:]
  -[VKPuckAnimatorLocationProjector projectedRouteMatch]
  -[VKPuckAnimatorLocationProjector projectedLocationOnRoute]


MDDisplayLayer : NSObject <GGLLayerDelegate, MDRenderTarget>
 @property  CALayer *layer
 @property  {CGSize=dd} size
 @property  double contentScale
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  <GGLRenderQueueSource> *renderSource
 @property  BOOL multiSample
 @property  BOOL supportsFramebufferFetch
 @property  r^{RenderTargetFormat=[4i]QIi} format
 @property  ^{Renderer=^^?^{Device}QQQBfQ{vector<std::__1::shared_ptr<ggl::DebugRenderer> renderer
 @property  BOOL shouldRasterize
 @property  {CGSize=dd} sizeInPixels
 @property  ^{RenderTarget=^^?^{ResourceManager}^{RenderResource}^^?*{RenderTargetFormat=[4i]QIi}[4^{Texture}][4^{Texture}]^{Texture}B} finalRenderTarget
 @property  r^{RenderTargetFormat=[4i]QIi} linearFormat
 @property  ^{RenderTarget=^^?^{ResourceManager}^{RenderResource}^^?*{RenderTargetFormat=[4i]QIi}[4^{Texture}][4^{Texture}]^{Texture}B} linearRenderTarget
 @property  float averageFPS
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MDDisplayLayer setBackgroundColor:]
  -[MDDisplayLayer didPresent]
  -[MDDisplayLayer format]
  -[MDDisplayLayer bitmapData]
  -[MDDisplayLayer supportsFramebufferFetch]
  -[MDDisplayLayer drawInContext:]
  -[MDDisplayLayer convertPoint:toLayer:]
  -[MDDisplayLayer renderer]
  -[MDDisplayLayer _renderQueueForTimestamp:prepareHandler:]
  -[MDDisplayLayer prepareTexture:]
  -[MDDisplayLayer layer]
  -[MDDisplayLayer .cxx_construct]
  -[MDDisplayLayer dealloc]
  -[MDDisplayLayer shouldRasterize]
  -[MDDisplayLayer size]
  -[MDDisplayLayer averageFPS]
  -[MDDisplayLayer .cxx_destruct]
  -[MDDisplayLayer expandedPerformanceHUD:]
  -[MDDisplayLayer contentScale]
  -[MDDisplayLayer createRenderTarget]
  -[MDDisplayLayer setOpaque:]
  -[MDDisplayLayer setRenderSource:]
  -[MDDisplayLayer hasRenderTarget]
  -[MDDisplayLayer didUpdateFrameTexture]
  -[MDDisplayLayer setNeedsDisplayOnBoundsChange:]
  -[MDDisplayLayer renderSource]
  -[MDDisplayLayer finalRenderTarget]
  -[MDDisplayLayer _didReadPixels:]
  -[MDDisplayLayer willUpdateFrameTexture]
  -[MDDisplayLayer isDelayedRenderQueueConsumptionSupported]
  -[MDDisplayLayer debugConsoleForId:]
  -[MDDisplayLayer linearFormat]
  -[MDDisplayLayer drawToTexture:withRenderQueue:]
  -[MDDisplayLayer destroyRenderTarget]
  -[MDDisplayLayer disablePerformanceHUD:]
  -[MDDisplayLayer setBounds:]
  -[MDDisplayLayer bounds]
  -[MDDisplayLayer drawToTexture:withRenderQueue:completionHandler:]
  -[MDDisplayLayer setSize:]
  -[MDDisplayLayer initWithContentScale:shouldRasterize:taskContext:device:sharedResources:signpostId:]
  -[MDDisplayLayer renderQueueForTimestamp:]
  -[MDDisplayLayer enablePerformanceHUD:]
  -[MDDisplayLayer willPresent]
  -[MDDisplayLayer setContentScale:]
  -[MDDisplayLayer multiSample]
  -[MDDisplayLayer setContentsGravity:]
  -[MDDisplayLayer sizeInPixels]
  -[MDDisplayLayer linearRenderTarget]
  -[MDDisplayLayer didReceiveMemoryWarning]
  -[MDDisplayLayer renderWithTimestamp:completion:]
  -[MDDisplayLayer didEnterBackground]


VKMercatorTerrainHeightCache : NSObject
 @property  <VKMercatorTerrainHeightProvider> *heightProvider

  // instance methods
  -[VKMercatorTerrainHeightCache .cxx_construct]
  -[VKMercatorTerrainHeightCache .cxx_destruct]
  -[VKMercatorTerrainHeightCache heightForAnchor:]
  -[VKMercatorTerrainHeightCache removeCachedValueForAnchor:]
  -[VKMercatorTerrainHeightCache invalidateRect:]
  -[VKMercatorTerrainHeightCache heightProvider]
  -[VKMercatorTerrainHeightCache setHeightProvider:]


VKVectorOverlayData : NSObject
 @property  <VKVectorOverlayDelegate> *delegate

  // instance methods
  -[VKVectorOverlayData _setDelegate:]
  -[VKVectorOverlayData _delegate]


VKVectorOverlayPolyline : NSObject
 @property  {Range<signed char>=cc} worldIndexes

  // instance methods
  -[VKVectorOverlayPolyline .cxx_construct]
  -[VKVectorOverlayPolyline .cxx_destruct]
  -[VKVectorOverlayPolyline worldIndexes]
  -[VKVectorOverlayPolyline simplifiedGeometryAtZoomLevel:]
  -[VKVectorOverlayPolyline initWithMapPoints:count:]


VKVectorOverlayPolylineGroup : VKVectorOverlayData
 @property  {shared_ptr<md::PolylineOverlayStyle>=^{PolylineOverlayStyle}^{__shared_weak_count}} style
 @property  NSArray *polylines
 @property  double lineWidth
 @property  long long lineJoin
 @property  long long lineCap
 @property  ^{CGColor=} color
 @property  double alpha
 @property  double miterLimit
 @property  double strokeStart
 @property  double strokeEnd

  // instance methods
  -[VKVectorOverlayPolylineGroup setLineWidth:]
  -[VKVectorOverlayPolylineGroup lineWidth]
  -[VKVectorOverlayPolylineGroup lineCap]
  -[VKVectorOverlayPolylineGroup .cxx_construct]
  -[VKVectorOverlayPolylineGroup dealloc]
  -[VKVectorOverlayPolylineGroup .cxx_destruct]
  -[VKVectorOverlayPolylineGroup initWithPolylines:]
  -[VKVectorOverlayPolylineGroup alpha]
  -[VKVectorOverlayPolylineGroup setLineCap:]
  -[VKVectorOverlayPolylineGroup color]
  -[VKVectorOverlayPolylineGroup lineJoin]
  -[VKVectorOverlayPolylineGroup setMiterLimit:]
  -[VKVectorOverlayPolylineGroup miterLimit]
  -[VKVectorOverlayPolylineGroup polylines]
  -[VKVectorOverlayPolylineGroup strokeEnd]
  -[VKVectorOverlayPolylineGroup setColor:]
  -[VKVectorOverlayPolylineGroup setAlpha:]
  -[VKVectorOverlayPolylineGroup _updateStyleColor]
  -[VKVectorOverlayPolylineGroup setStrokeStart:]
  -[VKVectorOverlayPolylineGroup setStrokeEnd:]
  -[VKVectorOverlayPolylineGroup setLineJoin:]
  -[VKVectorOverlayPolylineGroup strokeStart]
  -[VKVectorOverlayPolylineGroup setColorStopColors:locations:]
  -[VKVectorOverlayPolylineGroup style]


VKVectorOverlayCircle : VKVectorOverlayData
 @property  {shared_ptr<md::CircleOverlayRenderable>=^{CircleOverlayRenderable}^{__shared_weak_count}} renderable
 @property  {Box<double bounds
 @property  double lineWidth
 @property  ^{CGColor=} fillColor
 @property  ^{CGColor=} strokeColor
 @property  double alpha

  // instance methods
  -[VKVectorOverlayCircle setLineWidth:]
  -[VKVectorOverlayCircle strokeColor]
  -[VKVectorOverlayCircle lineWidth]
  -[VKVectorOverlayCircle fillColor]
  -[VKVectorOverlayCircle _bounds]
  -[VKVectorOverlayCircle .cxx_construct]
  -[VKVectorOverlayCircle dealloc]
  -[VKVectorOverlayCircle .cxx_destruct]
  -[VKVectorOverlayCircle alpha]
  -[VKVectorOverlayCircle setStrokeColor:]
  -[VKVectorOverlayCircle _renderable]
  -[VKVectorOverlayCircle initWithMapRect:lineWidth:fillColor:strokeColor:alpha:]
  -[VKVectorOverlayCircle setFillColor:]
  -[VKVectorOverlayCircle setAlpha:]
  -[VKVectorOverlayCircle _updateStyleColor]


VKVectorOverlayPolygon : NSObject
 @property  {Range<signed char>=cc} worldIndexes

  // instance methods
  -[VKVectorOverlayPolygon .cxx_construct]
  -[VKVectorOverlayPolygon .cxx_destruct]
  -[VKVectorOverlayPolygon worldIndexes]
  -[VKVectorOverlayPolygon simplifiedGeometryAtZoomLevel:]
  -[VKVectorOverlayPolygon initWithMapPoints:count:]


VKVectorOverlayPolygonGroup : VKVectorOverlayData
 @property  {shared_ptr<md::PolygonOverlayRenderable::Style>=^{Style}^{__shared_weak_count}} style
 @property  NSArray *polygons
 @property  double lineWidth
 @property  long long lineJoin
 @property  ^{CGColor=} fillColor
 @property  ^{CGColor=} strokeColor
 @property  double alpha
 @property  double miterLimit
 @property  double strokeStart
 @property  double strokeEnd

  // instance methods
  -[VKVectorOverlayPolygonGroup setLineWidth:]
  -[VKVectorOverlayPolygonGroup strokeColor]
  -[VKVectorOverlayPolygonGroup lineWidth]
  -[VKVectorOverlayPolygonGroup _style]
  -[VKVectorOverlayPolygonGroup fillColor]
  -[VKVectorOverlayPolygonGroup .cxx_construct]
  -[VKVectorOverlayPolygonGroup dealloc]
  -[VKVectorOverlayPolygonGroup .cxx_destruct]
  -[VKVectorOverlayPolygonGroup initWithPolygons:]
  -[VKVectorOverlayPolygonGroup alpha]
  -[VKVectorOverlayPolygonGroup setStrokeColor:]
  -[VKVectorOverlayPolygonGroup lineJoin]
  -[VKVectorOverlayPolygonGroup setMiterLimit:]
  -[VKVectorOverlayPolygonGroup miterLimit]
  -[VKVectorOverlayPolygonGroup polygons]
  -[VKVectorOverlayPolygonGroup strokeEnd]
  -[VKVectorOverlayPolygonGroup setFillColor:]
  -[VKVectorOverlayPolygonGroup setAlpha:]
  -[VKVectorOverlayPolygonGroup _updateStyleColor]
  -[VKVectorOverlayPolygonGroup setStrokeStart:]
  -[VKVectorOverlayPolygonGroup setStrokeEnd:]
  -[VKVectorOverlayPolygonGroup setLineJoin:]
  -[VKVectorOverlayPolygonGroup strokeStart]


VKViewportInfo : NSObject
 @property  NSDictionary *dictionaryRepresentation
 @property  {?=dd} centerCoordinate
 @property  float zoomLevel
 @property  long long tileSize
 @property  double pitch
 @property  double yaw

  // instance methods
  -[VKViewportInfo pitch]
  -[VKViewportInfo tileSize]
  -[VKViewportInfo centerCoordinate]
  -[VKViewportInfo initWithDictionaryRepresentation:]
  -[VKViewportInfo yaw]
  -[VKViewportInfo setCenterCoordinate:]
  -[VKViewportInfo setYaw:]
  -[VKViewportInfo zoomLevel]
  -[VKViewportInfo setTileSize:]
  -[VKViewportInfo setZoomLevel:]
  -[VKViewportInfo dictionaryRepresentation]
  -[VKViewportInfo setPitch:]


VKPShieldIndexVariantEntry : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasVariantType
 @property  int variantType
 @property  NSMutableArray *entries
 @property  NSMutableArray *textEntries

  // instance methods
  -[VKPShieldIndexVariantEntry copyWithZone:]
  -[VKPShieldIndexVariantEntry dealloc]
  -[VKPShieldIndexVariantEntry setEntries:]
  -[VKPShieldIndexVariantEntry setVariantType:]
  -[VKPShieldIndexVariantEntry variantType]
  -[VKPShieldIndexVariantEntry entries]
  -[VKPShieldIndexVariantEntry readFrom:]
  -[VKPShieldIndexVariantEntry writeTo:]
  -[VKPShieldIndexVariantEntry isEqual:]
  -[VKPShieldIndexVariantEntry copyTo:]
  -[VKPShieldIndexVariantEntry clearEntries]
  -[VKPShieldIndexVariantEntry dictionaryRepresentation]
  -[VKPShieldIndexVariantEntry entriesAtIndex:]
  -[VKPShieldIndexVariantEntry entriesCount]
  -[VKPShieldIndexVariantEntry setTextEntries:]
  -[VKPShieldIndexVariantEntry addTextEntries:]
  -[VKPShieldIndexVariantEntry textEntriesCount]
  -[VKPShieldIndexVariantEntry clearTextEntries]
  -[VKPShieldIndexVariantEntry textEntriesAtIndex:]
  -[VKPShieldIndexVariantEntry setHasVariantType:]
  -[VKPShieldIndexVariantEntry hasVariantType]
  -[VKPShieldIndexVariantEntry textEntries]
  -[VKPShieldIndexVariantEntry mergeFrom:]
  -[VKPShieldIndexVariantEntry addEntries:]


VKLabelNavRoadLabel : NSObject
 @property  <VKLabelNavFeature> *navFeature
 @property  r^{shared_ptr<md::NavLabel>=^{NavLabel}^{__shared_weak_count}} label
 @property  unsigned char alignment
 @property  float desiredOffsetDistance
 @property  unsigned int displayID
 @property  BOOL isShieldLabel
 @property  BOOL isRoadLabel
 @property  BOOL isJunctionLabel
 @property  BOOL isManeuverLabel
 @property  BOOL isEtaLabel
 @property  BOOL isTrafficCameraLabel
 @property  unsigned short renderOrder
 @property  {Mercator2<double>=[2d]} mercatorPoint

  // instance methods
  -[VKLabelNavRoadLabel displayID]
  -[VKLabelNavRoadLabel setDisplayID:]
  -[VKLabelNavRoadLabel .cxx_construct]
  -[VKLabelNavRoadLabel dealloc]
  -[VKLabelNavRoadLabel .cxx_destruct]
  -[VKLabelNavRoadLabel isRoadLabel]
  -[VKLabelNavRoadLabel isJunctionLabel]
  -[VKLabelNavRoadLabel alignment]
  -[VKLabelNavRoadLabel label]
  -[VKLabelNavRoadLabel setNavFeature:]
  -[VKLabelNavRoadLabel desiredOffsetDistance]
  -[VKLabelNavRoadLabel setDesiredOffsetDistance:]
  -[VKLabelNavRoadLabel initWithNavFeature:label:navLabelType:]
  -[VKLabelNavRoadLabel displayGroup]
  -[VKLabelNavRoadLabel isShieldLabel]
  -[VKLabelNavRoadLabel mercatorPoint]
  -[VKLabelNavRoadLabel navFeature]
  -[VKLabelNavRoadLabel layoutWithNavContext:]
  -[VKLabelNavRoadLabel setAlignment:]
  -[VKLabelNavRoadLabel setRenderOrder:]
  -[VKLabelNavRoadLabel renderOrder]
  -[VKLabelNavRoadLabel isManeuverLabel]
  -[VKLabelNavRoadLabel isEtaLabel]
  -[VKLabelNavRoadLabel isTrafficCameraLabel]
  -[VKLabelNavRoadLabel setMercatorPoint:]


VKLabelNavTileData : NSObject
 @property  r^{shared_ptr<md::LabelTile>=^{LabelTile}^{__shared_weak_count}} tile
 @property  BOOL oppositeCarriagewayJunctionsValid
 @property  NSMutableArray *oppositeCarriagewayJunctions

  // instance methods
  -[VKLabelNavTileData tile]
  -[VKLabelNavTileData .cxx_construct]
  -[VKLabelNavTileData dealloc]
  -[VKLabelNavTileData .cxx_destruct]
  -[VKLabelNavTileData oppositeCarriagewayJunctions]
  -[VKLabelNavTileData addJunction:]
  -[VKLabelNavTileData _findTileEdgeJunctions]
  -[VKLabelNavTileData initializeJunctionInfos]
  -[VKLabelNavTileData initWithTile:]
  -[VKLabelNavTileData junctionForGeoJunction:]
  -[VKLabelNavTileData junctionAtCoordinate:]
  -[VKLabelNavTileData findTileEdgeJunctionAtCoordinate:]
  -[VKLabelNavTileData appendNavJunctionsInWorldRect:junctions:]
  -[VKLabelNavTileData findOppositeCarriagewayJunctionsWithRouteFeatures:distanceThreshold:]
  -[VKLabelNavTileData oppositeCarriagewayJunctionsValid]
  -[VKLabelNavTileData setOppositeCarriagewayJunctionsValid:]


VKLabelNavRoadGraph : NSObject
 @property  NSMutableArray *junctions

  // instance methods
  -[VKLabelNavRoadGraph nextRoadSegmentForRoad:]
  -[VKLabelNavRoadGraph _findInterTileJunctionForJunction:]
  -[VKLabelNavRoadGraph addRouteRoadEdge:atA:isRouteRefineJunction:tile:junctionList:]
  -[VKLabelNavRoadGraph initWithJunctions:]
  -[VKLabelNavRoadGraph offRouteGraphJunctionsWithNavContext:maxJunctions:isOnRoute:]
  -[VKLabelNavRoadGraph computeRoutePositionForPOIAtPixel:currentPosition:context:]
  -[VKLabelNavRoadGraph junctionListForDepth:]
  -[VKLabelNavRoadGraph .cxx_construct]
  -[VKLabelNavRoadGraph _findOffRouteJunctions]
  -[VKLabelNavRoadGraph startingLabelLayoutWithContext:routeUserOffset:]
  -[VKLabelNavRoadGraph dealloc]
  -[VKLabelNavRoadGraph countReadyJunctionLists]
  -[VKLabelNavRoadGraph isPriorRouteCollinearWithRoad:distance:]
  -[VKLabelNavRoadGraph offRouteJunctionList]
  -[VKLabelNavRoadGraph .cxx_destruct]
  -[VKLabelNavRoadGraph routeJunctionsHaveChanged]
  -[VKLabelNavRoadGraph _junctionForRoadEdge:atA:routeOffset:tile:]
  -[VKLabelNavRoadGraph _nextIntersectionForRoad:]
  -[VKLabelNavRoadGraph collideRouteWithLabel:routeCrossProduct:context:]
  -[VKLabelNavRoadGraph setJunctions:]
  -[VKLabelNavRoadGraph unitHeading]
  -[VKLabelNavRoadGraph oppositeCarriagewayJunctions]
  -[VKLabelNavRoadGraph setTiles:]
  -[VKLabelNavRoadGraph reset]
  -[VKLabelNavRoadGraph _updateIntersectionsForDepth:]
  -[VKLabelNavRoadGraph _updateSimplifiedRoute]
  -[VKLabelNavRoadGraph _checkIfDualCarriageWayConnectorRoad:fromJunction:toJunction:checkShields:]
  -[VKLabelNavRoadGraph _transformRouteToScreenWithContext:]
  -[VKLabelNavRoadGraph prepareOppositeCarriagewayJunctions]
  -[VKLabelNavRoadGraph overpassJunctionForJunction:]
  -[VKLabelNavRoadGraph junctions]
  -[VKLabelNavRoadGraph evaluateDualCarriagewayForJunction:outputJunctionList:]
  -[VKLabelNavRoadGraph junctionForRoad:nearJunction:crossTileEdge:]


VKObjectBoundsContext : NSObject
 @property  {VKEdgeInsets=ffff} edgePadding

  // instance methods
  -[VKObjectBoundsContext .cxx_construct]
  -[VKObjectBoundsContext .cxx_destruct]
  -[VKObjectBoundsContext boundingRect]
  -[VKObjectBoundsContext edgePadding]
  -[VKObjectBoundsContext isEmpty]
  -[VKObjectBoundsContext setEdgePadding:]
  -[VKObjectBoundsContext addPoints:]


VKVenueGroup : VKPolygonGroup
 @property  int layer
 @property  unsigned long buildingId
 @property  float maximumSectionLength
 @property  ^{Texture2D=^^?^{ResourceManager}^{RenderResource}^^?*iiiiIiII{shared_ptr<const ggl::Texture2DAbstract>=^{Texture2DAbstract}^{__shared_weak_count}}I{shared_ptr<const ggl::TextureDataAbstract>=^{TextureDataAbstract}^{__shared_weak_count}}BBB{shared_ptr<ggl::SamplerState>=^{SamplerState}^{__shared_weak_count}}} wallTexture
 @property  r^{vector<std::__1::shared_ptr<ggl::VenueWall::MeshMesh> venueWallMeshes
 @property  r^{vector<std::__1::shared_ptr<ggl::VenueWall::EndCapMesh> venueWallEndMeshes
 @property  r^{vector<std::__1::shared_ptr<ggl::Venue3DStroke::HorizontalVenue3DStrokeMesh> venueWallHorizontalStrokeMeshes
 @property  r^{vector<std::__1::shared_ptr<ggl::Venue3DStroke::VerticalVenue3DStrokeMesh> venueWallVerticalStrokeMeshes

  // instance methods
  -[VKVenueGroup buildingId]
  -[VKVenueGroup didFinishAddingData]
  -[VKVenueGroup willAddDataWithAccessor:]
  -[VKVenueGroup wallTexture]
  -[VKVenueGroup venueWallMeshes]
  -[VKVenueGroup prepareToStrokeSection:key:styles:paddedCount:]
  -[VKVenueGroup venueWallHorizontalStrokeMeshes]
  -[VKVenueGroup layer]
  -[VKVenueGroup prepareToGenerateWallsForSection:styles:edges:]
  -[VKVenueGroup .cxx_construct]
  -[VKVenueGroup generateEdgeListForPolygonSection:key:]
  -[VKVenueGroup .cxx_destruct]
  -[VKVenueGroup venueWallEndMeshes]
  -[VKVenueGroup addStrokeForSection:paddedCount:key:attributes:styles:cullingMask:accessor:]
  -[VKVenueGroup prepareToGenerateWallStrokesForSection:styles:edges:]
  -[VKVenueGroup addWallsForSection:edges:attributes:styles:cullingMask:accessor:]
  -[VKVenueGroup venueWallVerticalStrokeMeshes]
  -[VKVenueGroup maximumSectionLength]
  -[VKVenueGroup verticalStrokeCountForSection:styles:edges:]
  -[VKVenueGroup addWallStrokesForSection:edges:attributes:styles:cullingMask:accessor:]
  -[VKVenueGroup bufferSizingForStrokesOnSection:styles:edges:]
  -[VKVenueGroup initWithStyleQuery:tileZoom:layer:buildingId:contentScale:]
  -[VKVenueGroup updateTextures:textureManager:]


VKGlobeAnnotationTrackingCameraController : VKAnnotationTrackingCameraController
 @property  ^{GlobeView=^^?^{GeoServicesLoader}^{ManifestManager}^{TriggerManager}{shared_ptr<altitude::AnchorManager>=^{AnchorManager}^{__shared_weak_count}}^{DtmCacheNode}^{DtmRequestManager}^{FreezeViewNode}{shared_ptr<gdc::Camera>=^{Camera}^{__shared_weak_count}}B{basic_string<char globeView
 @property  VKCameraRegionRestriction *regionRestriction

  // instance methods
  -[VKGlobeAnnotationTrackingCameraController init]
  -[VKGlobeAnnotationTrackingCameraController setEdgeInsets:]
  -[VKGlobeAnnotationTrackingCameraController dealloc]
  -[VKGlobeAnnotationTrackingCameraController regionRestriction]
  -[VKGlobeAnnotationTrackingCameraController globeView]
  -[VKGlobeAnnotationTrackingCameraController setRegionRestriction:]
  -[VKGlobeAnnotationTrackingCameraController setGlobeView:]
  -[VKGlobeAnnotationTrackingCameraController _goToAnnotationAnimated:duration:timingFunction:isInitial:]
  -[VKGlobeAnnotationTrackingCameraController _rotateToHeadingAnimated:duration:]
  -[VKGlobeAnnotationTrackingCameraController _centerCursor]
  -[VKGlobeAnnotationTrackingCameraController _effectiveEdgeInsets]
  -[VKGlobeAnnotationTrackingCameraController _nonOffsetCenterCursor]


VKMuninJunction : NSObject
 @property  NSArray *roads
 @property  NSString *name

  // instance methods
  -[VKMuninJunction roads]
  -[VKMuninJunction dealloc]
  -[VKMuninJunction name]
  -[VKMuninJunction initWithMuninJunction:localize:]


VKClusterFeatureAnnotation : NSObject <VKCustomFeatureAnnotation>
 @property  {?=dd} coordinate
 @property  double course
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKClusterFeatureAnnotation setCoordinate:]
  -[VKClusterFeatureAnnotation coordinate]
  -[VKClusterFeatureAnnotation dealloc]
  -[VKClusterFeatureAnnotation feature]
  -[VKClusterFeatureAnnotation initWithClusterNode:clusterTree:baseStyle:imageText:annotationText:annotationLocale:]


VKManifestTileGroupObserverProxy : NSObject <GEOResourceManifestTileGroupObserver, GEOExperimentConfigurationObserver>
 @property  {function<void (GEOResourceManifestManager *)>={__value_func<void (GEOResourceManifestManager *)>={type=[24C]}^{__base<void (GEOResourceManifestManager *)>}}} willChangeActiveTileGroup
 @property  {function<void (GEOResourceManifestManager * didChangeActiveTileGroup
 @property  {function<void (GEOExperimentConfiguration *)>={__value_func<void (GEOExperimentConfiguration *)>={type=[24C]}^{__base<void (GEOExperimentConfiguration *)>}}} experimentConfigurationDidChange
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKManifestTileGroupObserverProxy resourceManifestManagerWillChangeActiveTileGroup:]
  -[VKManifestTileGroupObserverProxy experimentConfigurationDidChange]
  -[VKManifestTileGroupObserverProxy resourceManifestManager:didChangeActiveTileGroup:fromOldTileGroup:]
  -[VKManifestTileGroupObserverProxy experimentConfigurationDidChange:]
  -[VKManifestTileGroupObserverProxy didChangeActiveTileGroup]
  -[VKManifestTileGroupObserverProxy .cxx_construct]
  -[VKManifestTileGroupObserverProxy dealloc]
  -[VKManifestTileGroupObserverProxy .cxx_destruct]
  -[VKManifestTileGroupObserverProxy initWithQueue:]
  -[VKManifestTileGroupObserverProxy setDidChangeActiveTileGroup:]
  -[VKManifestTileGroupObserverProxy willChangeActiveTileGroup]
  -[VKManifestTileGroupObserverProxy setExperimentConfigurationDidChange:]
  -[VKManifestTileGroupObserverProxy setWillChangeActiveTileGroup:]


VKPShieldIndex : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  NSMutableArray *entries
 @property  NSMutableArray *textEntries
 @property  NSMutableArray *variantEntries

  // instance methods
  -[VKPShieldIndex copyWithZone:]
  -[VKPShieldIndex dealloc]
  -[VKPShieldIndex setEntries:]
  -[VKPShieldIndex entries]
  -[VKPShieldIndex readFrom:]
  -[VKPShieldIndex writeTo:]
  -[VKPShieldIndex isEqual:]
  -[VKPShieldIndex copyTo:]
  -[VKPShieldIndex clearEntries]
  -[VKPShieldIndex dictionaryRepresentation]
  -[VKPShieldIndex entriesAtIndex:]
  -[VKPShieldIndex entriesCount]
  -[VKPShieldIndex setTextEntries:]
  -[VKPShieldIndex addTextEntries:]
  -[VKPShieldIndex textEntriesCount]
  -[VKPShieldIndex clearTextEntries]
  -[VKPShieldIndex textEntriesAtIndex:]
  -[VKPShieldIndex textEntries]
  -[VKPShieldIndex mergeFrom:]
  -[VKPShieldIndex setVariantEntries:]
  -[VKPShieldIndex addVariantEntries:]
  -[VKPShieldIndex variantEntriesCount]
  -[VKPShieldIndex clearVariantEntries]
  -[VKPShieldIndex variantEntriesAtIndex:]
  -[VKPShieldIndex variantEntries]
  -[VKPShieldIndex addEntries:]


VKPShieldIndexEntry : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasArtworkIdentifier
 @property  NSString *artworkIdentifier
 @property  unsigned long shieldTypesCount
 @property  ^i shieldTypes
 @property  unsigned long defaultForFeatureTypesCount
 @property  ^i defaultForFeatureTypes

  // instance methods
  -[VKPShieldIndexEntry setArtworkIdentifier:]
  -[VKPShieldIndexEntry copyWithZone:]
  -[VKPShieldIndexEntry hasArtworkIdentifier]
  -[VKPShieldIndexEntry dealloc]
  -[VKPShieldIndexEntry readFrom:]
  -[VKPShieldIndexEntry writeTo:]
  -[VKPShieldIndexEntry isEqual:]
  -[VKPShieldIndexEntry copyTo:]
  -[VKPShieldIndexEntry dictionaryRepresentation]
  -[VKPShieldIndexEntry artworkIdentifier]
  -[VKPShieldIndexEntry mergeFrom:]
  -[VKPShieldIndexEntry shieldTypesCount]
  -[VKPShieldIndexEntry clearShieldTypes]
  -[VKPShieldIndexEntry shieldTypesAtIndex:]
  -[VKPShieldIndexEntry addShieldTypes:]
  -[VKPShieldIndexEntry defaultForFeatureTypesCount]
  -[VKPShieldIndexEntry clearDefaultForFeatureTypes]
  -[VKPShieldIndexEntry defaultForFeatureTypeAtIndex:]
  -[VKPShieldIndexEntry addDefaultForFeatureType:]
  -[VKPShieldIndexEntry shieldTypes]
  -[VKPShieldIndexEntry setShieldTypes:count:]
  -[VKPShieldIndexEntry defaultForFeatureTypes]
  -[VKPShieldIndexEntry setDefaultForFeatureTypes:count:]


VKNavCameraController : VKCameraController <VKNavigationCameraController, VKGesturingCameraController, VKNavContextObserver>
 @property  VKScreenCanvas<VKInteractiveMap> *screenCanvas
 @property  VKSceneConfiguration *sceneConfiguration
 @property  double zoomScale
 @property  long long baseDisplayRate
 @property  {VKEdgeInsets=ffff} clientFramingInsets
 @property  {?=dd} centerCoordinate
 @property  double distanceFromCenterCoordinate
 @property  double heading
 @property  double pitch
 @property  GEOMapRegion *mapRegion
 @property  double altitude
 @property  double minPitch
 @property  double maxPitch
 @property  BOOL isPitched
 @property  BOOL isRotated
 @property  BOOL isFullyPitched
 @property  ^{MapDataAccess=^{World}CC@{shared_ptr<gdc::Camera>=^{Camera}^{__shared_weak_count}}} mapDataAccess
 @property  ^{AnimationRunner=^{MapEngine}} animationRunner
 @property  ^{RunLoopController=^{MapEngine}qq} runLoopController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKNavCameraController isGesturing]
  -[VKNavCameraController detailedDescription]
  -[VKNavCameraController pitch]
  -[VKNavCameraController centerCoordinate]
  -[VKNavCameraController setCamera:]
  -[VKNavCameraController stopAnimations]
  -[VKNavCameraController setZoomScale:]
  -[VKNavCameraController _setNeedsUpdate]
  -[VKNavCameraController altitude]
  -[VKNavCameraController zoomScale]
  -[VKNavCameraController navContextStateDidChange:]
  -[VKNavCameraController navContextCameraHeadingOverrideDidChange:]
  -[VKNavCameraController heading]
  -[VKNavCameraController init]
  -[VKNavCameraController topDownMinimumZoomLevel]
  -[VKNavCameraController .cxx_construct]
  -[VKNavCameraController setEdgeInsets:]
  -[VKNavCameraController puckAnimator:updatedTargetPosition:]
  -[VKNavCameraController dealloc]
  -[VKNavCameraController _canZoomOut]
  -[VKNavCameraController stopSnappingAnimations]
  -[VKNavCameraController distanceFromCenterCoordinate]
  -[VKNavCameraController .cxx_destruct]
  -[VKNavCameraController wantsTimerTick]
  -[VKNavCameraController stopPanningAtPoint:]
  -[VKNavCameraController zoom:withFocusPoint:completionHandler:]
  -[VKNavCameraController setCameraFrame:]
  -[VKNavCameraController updateWithTimestamp:]
  -[VKNavCameraController maximumZoomLevel]
  -[VKNavCameraController startRotatingWithFocusPoint:]
  -[VKNavCameraController stop]
  -[VKNavCameraController canZoomInForTileSize:]
  -[VKNavCameraController puckAnimator:updatedPosition:course:]
  -[VKNavCameraController cameraFrame]
  -[VKNavCameraController tapAtPoint:]
  -[VKNavCameraController updateRotationWithFocusPoint:newValue:]
  -[VKNavCameraController baseDisplayRate]
  -[VKNavCameraController setBaseDisplayRate:]
  -[VKNavCameraController stopPitchingWithFocusPoint:]
  -[VKNavCameraController isPitchEnabled]
  -[VKNavCameraController isRotateEnabled]
  -[VKNavCameraController setEdgeInsetsAnimating:]
  -[VKNavCameraController setClientFramingInsets:]
  -[VKNavCameraController returnToPuck]
  -[VKNavCameraController initWithTaskContext:device:mapDataAccess:animationRunner:runLoopController:cameraDelegate:]
  -[VKNavCameraController sceneConfiguration]
  -[VKNavCameraController setSceneConfiguration:]
  -[VKNavCameraController setNavContext:]
  -[VKNavCameraController updateLocation:andCourse:]
  -[VKNavCameraController puckAnimatorDidStop:]
  -[VKNavCameraController updatePanWithTranslation:]
  -[VKNavCameraController stopPinchingWithFocusPoint:]
  -[VKNavCameraController puckAnimator:runAnimation:]
  -[VKNavCameraController currentZoomLevel]
  -[VKNavCameraController stylesheetDidReload]
  -[VKNavCameraController setScreenCanvas:]
  -[VKNavCameraController startWithPounce:startLocation:startCourse:pounceCompletionHandler:]
  -[VKNavCameraController minimumZoomLevel]
  -[VKNavCameraController stylesheetDidChange]
  -[VKNavCameraController updatePinchWithFocusPoint:oldFactor:newFactor:]
  -[VKNavCameraController stopRotatingWithFocusPoint:]
  -[VKNavCameraController updatePitchWithFocusPoint:translation:]
  -[VKNavCameraController _canZoomIn]
  -[VKNavCameraController canvasDidLayout]
  -[VKNavCameraController startPanningAtPoint:panAtStartPoint:]
  -[VKNavCameraController startPinchingWithFocusPoint:]
  -[VKNavCameraController _updateZoomScaleLimts]
  -[VKNavCameraController _setNavCameraIsDetached:]
  -[VKNavCameraController _updateSceneStyles:]
  -[VKNavCameraController startPitchingWithFocusPoint:]
  -[VKNavCameraController canZoomOutForTileSize:]
  -[VKNavCameraController calculateViewableScreenRect]
  -[VKNavCameraController puckScreenPoint]
  -[VKNavCameraController animateCameraWithDuration:fromFrame:completionHandler:]
  -[VKNavCameraController updateCameraState]
  -[VKNavCameraController resetSpringsToResting]
  -[VKNavCameraController currentCameraFrame]
  -[VKNavCameraController _snapPitch]
  -[VKNavCameraController returnToTrackingWithDelay:resetZoom:]
  -[VKNavCameraController _snapHeading]
  -[VKNavCameraController _setDetached:]
  -[VKNavCameraController _updateObserverCouldZoomIn:couldZoomOut:]
  -[VKNavCameraController updateSpringsForTrackingCamera]
  -[VKNavCameraController updateSpringsForFramingCamera]
  -[VKNavCameraController _updateStyles]
  -[VKNavCameraController _updateSprings:]
  -[VKNavCameraController _hasRunningAnimation]
  -[VKNavCameraController _updateDebugOverlay]
  -[VKNavCameraController _updateDebugText]
  -[VKNavCameraController _calculateMaxPixelChangeAndUpdateCorners]
  -[VKNavCameraController cameraHeadingType]
  -[VKNavCameraController restingCameraFrame]
  -[VKNavCameraController _debugText:showNavCameraDebugConsoleAttributes:]
  -[VKNavCameraController _normalizedZoomLevelForDisplayZoomLevel:]
  -[VKNavCameraController _currentRoadSignOffset]
  -[VKNavCameraController calculateViewableScreenRectForEdgeInsets:]
  -[VKNavCameraController calculateHeading]
  -[VKNavCameraController _updateForAnimatedEdgeInsets]
  -[VKNavCameraController distanceToManeuver:]
  -[VKNavCameraController routeCoordinateAtDistance:]
  -[VKNavCameraController routeLocationAtDistance:fromManeuver:]
  -[VKNavCameraController _addAdditionalRoutePointsToFrameToList:]
  -[VKNavCameraController updatePointsToFrame]
  -[VKNavCameraController updateManeuversToFrame]
  -[VKNavCameraController minZoomHeight]
  -[VKNavCameraController maxZoomHeight]
  -[VKNavCameraController screenCanvas]
  -[VKNavCameraController minZoomScale]
  -[VKNavCameraController maxZoomScale]
  -[VKNavCameraController minCameraPitch]
  -[VKNavCameraController maxCameraPitch]
  -[VKNavCameraController clientFramingInsets]
  -[VKNavCameraController canEnter3DMode]
  -[VKNavCameraController transferGestureState:]
  -[VKNavCameraController updatePitchWithFocusPoint:degrees:]


VKCameraDelegateMediator : NSObject <VKMapViewCameraDelegate>
 @property  <VKMapViewCameraDelegate> *cameraDelegate
 @property  BOOL isChangingMapType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKCameraDelegateMediator init]
  -[VKCameraDelegateMediator mapLayerDidChangeVisibleRegion]
  -[VKCameraDelegateMediator isChangingMapType]
  -[VKCameraDelegateMediator mapLayerNavigationCameraHasStoppedPanning]
  -[VKCameraDelegateMediator mapLayerWillAnimateToLocation:]
  -[VKCameraDelegateMediator setCameraDelegate:]
  -[VKCameraDelegateMediator mapLayerPresentationForAnnotation:]
  -[VKCameraDelegateMediator mapLayerNavigationCameraDidLeaveDefaultZoom]
  -[VKCameraDelegateMediator mapLayerDidChangeRegionAnimated:]
  -[VKCameraDelegateMediator setIsChangingMapType:]
  -[VKCameraDelegateMediator mapLayerWillChangeRegionAnimated:]
  -[VKCameraDelegateMediator mapLayerCanEnter3DModeDidChange:]
  -[VKCameraDelegateMediator mapLayerNavigationCameraHasStartedPanning]
  -[VKCameraDelegateMediator mapLayerCanZoomOutDidChange:]
  -[VKCameraDelegateMediator mapLayerMuninAvailabilityDidChange:]
  -[VKCameraDelegateMediator mapLayerNavigationCameraDidReturnToDefaultZoom]
  -[VKCameraDelegateMediator mapLayerWasUnableToAnimate]
  -[VKCameraDelegateMediator mapLayerCanZoomInDidChange:]
  -[VKCameraDelegateMediator mapLayerDidFinishInitialTrackingAnimation]
  -[VKCameraDelegateMediator mapLayerDidBecomePitched:]
  -[VKCameraDelegateMediator cameraDelegate]


VKCompoundAnimation : VKAnimation
 @property  NSMutableArray *animations
 @property  @? groupStepHandler

  // instance methods
  -[VKCompoundAnimation running]
  -[VKCompoundAnimation pause]
  -[VKCompoundAnimation stopAnimation:]
  -[VKCompoundAnimation resume]
  -[VKCompoundAnimation runsForever]
  -[VKCompoundAnimation dealloc]
  -[VKCompoundAnimation startWithRunner:]
  -[VKCompoundAnimation setRunsForever:]
  -[VKCompoundAnimation groupStepHandler]
  -[VKCompoundAnimation onTimerFired:]
  -[VKCompoundAnimation setDuration:]
  -[VKCompoundAnimation animations]
  -[VKCompoundAnimation setGroupStepHandler:]
  -[VKCompoundAnimation timed]
  -[VKCompoundAnimation duration]
  -[VKCompoundAnimation initWithAnimations:]


VKStylesheetVendorResourceManifestTileGroupObserverProxy : NSObject <GEOResourceManifestTileGroupObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKStylesheetVendorResourceManifestTileGroupObserverProxy resourceManifestManagerWillChangeActiveTileGroup:]
  -[VKStylesheetVendorResourceManifestTileGroupObserverProxy resourceManifestManagerDidChangeActiveTileGroup:]
  -[VKStylesheetVendorResourceManifestTileGroupObserverProxy initWithStylesheetVendor:]
  -[VKStylesheetVendorResourceManifestTileGroupObserverProxy .cxx_construct]
  -[VKStylesheetVendorResourceManifestTileGroupObserverProxy dealloc]
  -[VKStylesheetVendorResourceManifestTileGroupObserverProxy .cxx_destruct]


VKPShieldIndexTextEntry : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasArtworkIdentifier
 @property  NSString *artworkIdentifier
 @property  BOOL hasShieldType
 @property  int shieldType
 @property  NSMutableArray *shieldTexts

  // instance methods
  -[VKPShieldIndexTextEntry setArtworkIdentifier:]
  -[VKPShieldIndexTextEntry copyWithZone:]
  -[VKPShieldIndexTextEntry setShieldTexts:]
  -[VKPShieldIndexTextEntry addShieldText:]
  -[VKPShieldIndexTextEntry shieldTextsCount]
  -[VKPShieldIndexTextEntry clearShieldTexts]
  -[VKPShieldIndexTextEntry shieldTextAtIndex:]
  -[VKPShieldIndexTextEntry shieldTexts]
  -[VKPShieldIndexTextEntry hasArtworkIdentifier]
  -[VKPShieldIndexTextEntry dealloc]
  -[VKPShieldIndexTextEntry shieldType]
  -[VKPShieldIndexTextEntry setShieldType:]
  -[VKPShieldIndexTextEntry readFrom:]
  -[VKPShieldIndexTextEntry writeTo:]
  -[VKPShieldIndexTextEntry isEqual:]
  -[VKPShieldIndexTextEntry copyTo:]
  -[VKPShieldIndexTextEntry dictionaryRepresentation]
  -[VKPShieldIndexTextEntry artworkIdentifier]
  -[VKPShieldIndexTextEntry mergeFrom:]
  -[VKPShieldIndexTextEntry setHasShieldType:]
  -[VKPShieldIndexTextEntry hasShieldType]


VKImageSourceKey : NSObject
 @property  unsigned char dataType
 @property  NSString *text
 @property  NSString *relatedText
 @property  unsigned int dataValue
 @property  {CGPoint=dd} imageCenter
 @property  NSArray *fallbackImageKeys
 @property  float contentScale
 @property  unsigned int variant
 @property  unsigned int secondaryVariant
 @property  unsigned int countryCode
 @property  unsigned int keyType
 @property  NSString *imageName
 @property  unsigned int shieldType
 @property  NSString *shieldText
 @property  NSString *shieldTextLocale
 @property  {?=ffff} transitLineColor
 @property  unsigned int iconAttributeKey
 @property  unsigned int iconAttributeValue
 @property  BOOL hasDataValue
 @property  long long sizeGroup

  // instance methods
  -[VKImageSourceKey initWithLabelImageKey:]
  -[VKImageSourceKey setImageCenter:]
  -[VKImageSourceKey _initWithKeyType:]
  -[VKImageSourceKey initWithIconName:]
  -[VKImageSourceKey initWithShieldName:text:locale:color:]
  -[VKImageSourceKey relatedText]
  -[VKImageSourceKey imageCenter]
  -[VKImageSourceKey setSizeGroup:]
  -[VKImageSourceKey initWithDataType:]
  -[VKImageSourceKey .cxx_construct]
  -[VKImageSourceKey dealloc]
  -[VKImageSourceKey text]
  -[VKImageSourceKey contentScale]
  -[VKImageSourceKey fallbackImageKeys]
  -[VKImageSourceKey shieldTextLocale]
  -[VKImageSourceKey transitLineColor]
  -[VKImageSourceKey iconAttributeKey]
  -[VKImageSourceKey iconAttributeValue]
  -[VKImageSourceKey dataType]
  -[VKImageSourceKey shieldType]
  -[VKImageSourceKey shieldText]
  -[VKImageSourceKey variant]
  -[VKImageSourceKey countryCode]
  -[VKImageSourceKey imageName]
  -[VKImageSourceKey setRelatedText:]
  -[VKImageSourceKey setDataValue:]
  -[VKImageSourceKey initWithShieldText:locale:type:color:]
  -[VKImageSourceKey initWithIconAttributeKey:attributeValue:]
  -[VKImageSourceKey hasDataValue]
  -[VKImageSourceKey setDataType:]
  -[VKImageSourceKey dataValue]
  -[VKImageSourceKey keyType]
  -[VKImageSourceKey secondaryVariant]
  -[VKImageSourceKey setFallbackImageKeys:]
  -[VKImageSourceKey setText:]
  -[VKImageSourceKey sizeGroup]


VKCameraRegionRestriction : NSObject <NSSecureCoding>
 @property  BOOL empty
 @property  GEOMapRegion *mapRegion

  // class methods
  +[VKCameraRegionRestriction supportsSecureCoding]

  // instance methods
  -[VKCameraRegionRestriction containsCoordinate:]
  -[VKCameraRegionRestriction initWithMapRegion:]
  -[VKCameraRegionRestriction .cxx_construct]
  -[VKCameraRegionRestriction dealloc]
  -[VKCameraRegionRestriction radianSingleRect:westOfDatelineRect:eastOfDatelineRect:]
  -[VKCameraRegionRestriction clampedCoordinate:]
  -[VKCameraRegionRestriction clampedPositionForOrigin:delta:]
  -[VKCameraRegionRestriction encodeWithCoder:]
  -[VKCameraRegionRestriction isEqual:]
  -[VKCameraRegionRestriction mapRegion]
  -[VKCameraRegionRestriction clampedPosition:]
  -[VKCameraRegionRestriction isEmpty]
  -[VKCameraRegionRestriction clampedPosition:usingSingleRestriction:westOfDatelineRestriction:eastOfDatelineRestriction:wrapRange:]
  -[VKCameraRegionRestriction initWithCoder:]


VKTestIdentifiedMapDataRequester : GEOTileRequester /System/Library/Frameworks/MediaToolbox.framework/MediaToolbox
  // class methods
  +[VKTestIdentifiedMapDataRequester tileProviderIdentifier]

  // instance methods
  -[VKTestIdentifiedMapDataRequester tileSetForKey:]
  -[VKTestIdentifiedMapDataRequester start]


VKPGenericShield : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  int style
 @property  NSMutableArray *variants

  // instance methods
  -[VKPGenericShield variants]
  -[VKPGenericShield copyWithZone:]
  -[VKPGenericShield addVariant:]
  -[VKPGenericShield variantAtIndex:]
  -[VKPGenericShield setVariants:]
  -[VKPGenericShield variantsCount]
  -[VKPGenericShield clearVariants]
  -[VKPGenericShield dealloc]
  -[VKPGenericShield readFrom:]
  -[VKPGenericShield writeTo:]
  -[VKPGenericShield isEqual:]
  -[VKPGenericShield copyTo:]
  -[VKPGenericShield dictionaryRepresentation]
  -[VKPGenericShield mergeFrom:]
  -[VKPGenericShield setStyle:]
  -[VKPGenericShield style]


VKGlobeImageCanvas : VKImageCanvas <MDSnapshotMap>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKGlobeImageCanvas updateWithTimestamp:withContext:]
  -[VKGlobeImageCanvas _updateViewport]
  -[VKGlobeImageCanvas _updateCameraFromGlobe]
  -[VKGlobeImageCanvas .cxx_construct]
  -[VKGlobeImageCanvas dealloc]
  -[VKGlobeImageCanvas .cxx_destruct]
  -[VKGlobeImageCanvas cancelTileRequests]
  -[VKGlobeImageCanvas initWithMapEngine:]
  -[VKGlobeImageCanvas setMapType:]
  -[VKGlobeImageCanvas didLayout]


VKPGenericShieldStylePack : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  NSMutableArray *textureAtlas
 @property  NSMutableArray *genericShields

  // instance methods
  -[VKPGenericShieldStylePack copyWithZone:]
  -[VKPGenericShieldStylePack setTextureAtlas:]
  -[VKPGenericShieldStylePack setGenericShields:]
  -[VKPGenericShieldStylePack addTextureAtlas:]
  -[VKPGenericShieldStylePack addGenericShield:]
  -[VKPGenericShieldStylePack textureAtlasCount]
  -[VKPGenericShieldStylePack clearTextureAtlas]
  -[VKPGenericShieldStylePack textureAtlasAtIndex:]
  -[VKPGenericShieldStylePack genericShieldsCount]
  -[VKPGenericShieldStylePack clearGenericShields]
  -[VKPGenericShieldStylePack genericShieldAtIndex:]
  -[VKPGenericShieldStylePack textureAtlas]
  -[VKPGenericShieldStylePack genericShields]
  -[VKPGenericShieldStylePack dealloc]
  -[VKPGenericShieldStylePack readFrom:]
  -[VKPGenericShieldStylePack writeTo:]
  -[VKPGenericShieldStylePack isEqual:]
  -[VKPGenericShieldStylePack copyTo:]
  -[VKPGenericShieldStylePack dictionaryRepresentation]
  -[VKPGenericShieldStylePack mergeFrom:]


VKTrafficFeature : NSObject <NSCopying>
 @property  {Mercator2<double>=[2d]} mercatorPoint
 @property  float minZoom
 @property  float maxZoom
 @property  int groupIdentifier
 @property  unsigned int groupItemVerticalDisplayOrder
 @property  unsigned int groupItemHorizontalDisplayOrder
 @property  unsigned char collisionPriority
 @property  double routeOffsetInMeters
 @property  BOOL shouldUpdateStyle
 @property  long long navigationState
 @property  {optional<gss::RouteLegWhen>=B(ValueUnion=[1C]C)} routeLegWhen
 @property  {vector<GEOFeatureStylePair attributes
 @property  NSString *uniqueIdentifier
 @property  long long trafficFeatureType
 @property  {PolylineCoordinate=If} routeOffset
 @property  {PolylineCoordinate=If} approachingRouteOffset
 @property  {?=dd} position
 @property  GEOFeatureStyleAttributes *styleAttributes

  // class methods
  +[VKTrafficFeature newTrafficFeatureForEnrouteNotice:onRoute:]
  +[VKTrafficFeature stringForFeatureType:]
  +[VKTrafficFeature stringForNavState:]

  // instance methods
  -[VKTrafficFeature styleAttributes]
  -[VKTrafficFeature groupIdentifier]
  -[VKTrafficFeature navigationState]
  -[VKTrafficFeature copyWithZone:]
  -[VKTrafficFeature maxZoom]
  -[VKTrafficFeature minZoom]
  -[VKTrafficFeature position]
  -[VKTrafficFeature routeOffsetInMeters]
  -[VKTrafficFeature isSignal]
  -[VKTrafficFeature initWithFeatureType:uniqueIdentifier:routeOffset:onRoute:]
  -[VKTrafficFeature .cxx_construct]
  -[VKTrafficFeature dealloc]
  -[VKTrafficFeature setNavigationState:]
  -[VKTrafficFeature .cxx_destruct]
  -[VKTrafficFeature isIncident]
  -[VKTrafficFeature attributes]
  -[VKTrafficFeature setRouteLegWhen:]
  -[VKTrafficFeature uniqueIdentifier]
  -[VKTrafficFeature isBehind]
  -[VKTrafficFeature initWithFeatureType:uniqueIdentifier:position:routeOffset:routeOffsetInMeters:]
  -[VKTrafficFeature isRouteAnnotation]
  -[VKTrafficFeature approachingRouteOffset]
  -[VKTrafficFeature updateNavigationStateForRouteUserOffset:]
  -[VKTrafficFeature trafficFeatureType]
  -[VKTrafficFeature populateDebugNode:]
  -[VKTrafficFeature shouldUpdateStyle]
  -[VKTrafficFeature setShouldUpdateStyle:]
  -[VKTrafficFeature isEqual:]
  -[VKTrafficFeature isGrouped]
  -[VKTrafficFeature isCamera]
  -[VKTrafficFeature routeLegWhen]
  -[VKTrafficFeature mercatorPoint]
  -[VKTrafficFeature collisionPriority]
  -[VKTrafficFeature groupItemVerticalDisplayOrder]
  -[VKTrafficFeature routeOffset]
  -[VKTrafficFeature isAheadButNotApproaching]
  -[VKTrafficFeature initWithEnrouteNotice:onRoute:]
  -[VKTrafficFeature groupItemHorizontalDisplayOrder]
  -[VKTrafficFeature initWithFeatureType:uniqueIdentifier:position:onRoute:]
  -[VKTrafficFeature isApproaching]


VKAttachedNavGestureCameraBehavior : VKGestureCameraBehavior <VKNavGestureCameraBehavior>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKAttachedNavGestureCameraBehavior updatePan:lastScreenPoint:]
  -[VKAttachedNavGestureCameraBehavior updatePitch:translation:]
  -[VKAttachedNavGestureCameraBehavior updateRotate:atScreenPoint:]
  -[VKAttachedNavGestureCameraBehavior _startZoomAnimationFrom:to:completionHandler:]
  -[VKAttachedNavGestureCameraBehavior updatePitch:degrees:]
  -[VKAttachedNavGestureCameraBehavior updateZoom:oldFactor:newFactor:]
  -[VKAttachedNavGestureCameraBehavior tapZoom:levels:completionHandler:]
  -[VKAttachedNavGestureCameraBehavior dealloc]
  -[VKAttachedNavGestureCameraBehavior beginZoom:]
  -[VKAttachedNavGestureCameraBehavior initWithNavCameraController:]


VKDetachedNavGestureCameraBehavior : VKGestureCameraBehavior <VKNavGestureCameraBehavior>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKDetachedNavGestureCameraBehavior updatePan:lastScreenPoint:]
  -[VKDetachedNavGestureCameraBehavior updatePitch:translation:]
  -[VKDetachedNavGestureCameraBehavior updateRotate:atScreenPoint:]
  -[VKDetachedNavGestureCameraBehavior updatePitch:degrees:]
  -[VKDetachedNavGestureCameraBehavior updateZoom:oldFactor:newFactor:]
  -[VKDetachedNavGestureCameraBehavior .cxx_construct]
  -[VKDetachedNavGestureCameraBehavior tapZoom:levels:completionHandler:]
  -[VKDetachedNavGestureCameraBehavior dealloc]
  -[VKDetachedNavGestureCameraBehavior beginPitch:]
  -[VKDetachedNavGestureCameraBehavior initWithNavCameraController:]


VKPGenericShieldVariant : PBCodable /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <NSCopying>
 @property  BOOL hasNumberOfLines
 @property  unsigned int numberOfLines
 @property  unsigned long layersCount
 @property  ^{?=IfIIi{?=b1b1b1b1b1}} layers
 @property  BOOL hasTextBaseline
 @property  float textBaseline
 @property  BOOL hasFontName
 @property  NSString *fontName
 @property  BOOL hasFontSize
 @property  float fontSize
 @property  BOOL hasLeftCapWidth
 @property  float leftCapWidth
 @property  BOOL hasRightCapWidth
 @property  float rightCapWidth
 @property  BOOL hasLineSpacing
 @property  float lineSpacing
 @property  BOOL hasLeftPadding
 @property  float leftPadding
 @property  BOOL hasRightPadding
 @property  float rightPadding

  // instance methods
  -[VKPGenericShieldVariant fontName]
  -[VKPGenericShieldVariant setFontName:]
  -[VKPGenericShieldVariant copyWithZone:]
  -[VKPGenericShieldVariant setNumberOfLines:]
  -[VKPGenericShieldVariant numberOfLines]
  -[VKPGenericShieldVariant layers]
  -[VKPGenericShieldVariant setFontSize:]
  -[VKPGenericShieldVariant fontSize]
  -[VKPGenericShieldVariant setHasNumberOfLines:]
  -[VKPGenericShieldVariant hasNumberOfLines]
  -[VKPGenericShieldVariant setLeftCapWidth:]
  -[VKPGenericShieldVariant setHasLeftCapWidth:]
  -[VKPGenericShieldVariant hasLeftCapWidth]
  -[VKPGenericShieldVariant setRightCapWidth:]
  -[VKPGenericShieldVariant setHasRightCapWidth:]
  -[VKPGenericShieldVariant hasRightCapWidth]
  -[VKPGenericShieldVariant setLeftPadding:]
  -[VKPGenericShieldVariant setHasLeftPadding:]
  -[VKPGenericShieldVariant hasLeftPadding]
  -[VKPGenericShieldVariant setRightPadding:]
  -[VKPGenericShieldVariant clearLayers]
  -[VKPGenericShieldVariant layersCount]
  -[VKPGenericShieldVariant layerAtIndex:]
  -[VKPGenericShieldVariant setHasRightPadding:]
  -[VKPGenericShieldVariant hasRightPadding]
  -[VKPGenericShieldVariant rightCapWidth]
  -[VKPGenericShieldVariant leftPadding]
  -[VKPGenericShieldVariant rightPadding]
  -[VKPGenericShieldVariant setTextBaseline:]
  -[VKPGenericShieldVariant setHasTextBaseline:]
  -[VKPGenericShieldVariant hasTextBaseline]
  -[VKPGenericShieldVariant hasFontName]
  -[VKPGenericShieldVariant setHasFontSize:]
  -[VKPGenericShieldVariant hasFontSize]
  -[VKPGenericShieldVariant setLayers:count:]
  -[VKPGenericShieldVariant setHasLineSpacing:]
  -[VKPGenericShieldVariant hasLineSpacing]
  -[VKPGenericShieldVariant textBaseline]
  -[VKPGenericShieldVariant dealloc]
  -[VKPGenericShieldVariant lineSpacing]
  -[VKPGenericShieldVariant readFrom:]
  -[VKPGenericShieldVariant leftCapWidth]
  -[VKPGenericShieldVariant setLineSpacing:]
  -[VKPGenericShieldVariant writeTo:]
  -[VKPGenericShieldVariant isEqual:]
  -[VKPGenericShieldVariant copyTo:]
  -[VKPGenericShieldVariant dictionaryRepresentation]
  -[VKPGenericShieldVariant mergeFrom:]
  -[VKPGenericShieldVariant addLayer:]


VKOverlay : NSObject <VKVectorOverlayDelegate>
 @property  {weak_ptr<md::GlobeOverlayContainer>=^{GlobeOverlayContainer}^{__shared_weak_count}} flyoverContainer
 @property  {weak_ptr<md::OverlayContainer>=^{OverlayContainer}^{__shared_weak_count}} standardContainer
 @property  ^{RunLoopController=^{MapEngine}qq} runLoopController
 @property  <VKOverlayDelegate> *delegate
 @property  BOOL canProvideVectorData
 @property  {?={?=dd}{?=dd}} replaceMapContentInRect
 @property  unsigned long level
 @property  unsigned int identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VKOverlay level]
  -[VKOverlay init]
  -[VKOverlay setReplaceMapContentInRect:]
  -[VKOverlay _updateVectorData]
  -[VKOverlay flyoverContainer]
  -[VKOverlay setNeedsDisplayInRect:level:reason:]
  -[VKOverlay setLevel:]
  -[VKOverlay .cxx_construct]
  -[VKOverlay dealloc]
  -[VKOverlay .cxx_destruct]
  -[VKOverlay canDrawKey:]
  -[VKOverlay drawKey:inContext:]
  -[VKOverlay identifier]
  -[VKOverlay vectorData]
  -[VKOverlay setStandardContainer:]
  -[VKOverlay setRunLoopController:]
  -[VKOverlay standardContainer]
  -[VKOverlay canProvideVectorData]
  -[VKOverlay runLoopController]
  -[VKOverlay setDelegate:]
  -[VKOverlay replaceMapContentInRect]
  -[VKOverlay canPossiblyDrawKey:]
  -[VKOverlay vectorOverlayNeedsDisplay:needsFullInvalidate:]
  -[VKOverlay delegate]
  -[VKOverlay setFlyoverContainer:]
  -[VKOverlay setNeedsDisplayForReason:]


VKTrafficSignalFeature : VKTrafficFeature
 @property  long long type

  // class methods
  +[VKTrafficSignalFeature stringForTrafficSignalType:]

  // instance methods
  -[VKTrafficSignalFeature type]
  -[VKTrafficSignalFeature populateDebugNode:]
  -[VKTrafficSignalFeature initWithTrafficSignalType:uniqueIdentifier:routeOffset:onRoute:]
  -[VKTrafficSignalFeature initWithTrafficSignal:onRoute:]


VKEVChargeStationRouteWaypoint : VKRouteWaypointInfo
 @property  GEOComposedRouteEVChargingStationInfo *chargeInfo
 @property  NSString *chargeTimeText

  // instance methods
  -[VKEVChargeStationRouteWaypoint chargeTimeText]
  -[VKEVChargeStationRouteWaypoint initWithWaypoint:legIndex:]
  -[VKEVChargeStationRouteWaypoint dealloc]
  -[VKEVChargeStationRouteWaypoint chargeInfo]
  -[VKEVChargeStationRouteWaypoint setChargeTimeText:]


VKPolygonGroup : VKPolygonalItemGroup
 @property  {FeatureAttributeSet={vector<gss::FeatureAttributePair styleAttributes
 @property  ^{vector<std::__1::shared_ptr<ggl::PolygonCommonStroke::MeshMesh> strokeMeshes
 @property  ^{Texture2D=^^?^{ResourceManager}^{RenderResource}^^?*iiiiIiII{shared_ptr<const ggl::Texture2DAbstract>=^{Texture2DAbstract}^{__shared_weak_count}}I{shared_ptr<const ggl::TextureDataAbstract>=^{TextureDataAbstract}^{__shared_weak_count}}BBB{shared_ptr<ggl::SamplerState>=^{SamplerState}^{__shared_weak_count}}} sourceTexture
 @property  ^{Texture2D=^^?^{ResourceManager}^{RenderResource}^^?*iiiiIiII{shared_ptr<const ggl::Texture2DAbstract>=^{Texture2DAbstract}^{__shared_weak_count}}I{shared_ptr<const ggl::TextureDataAbstract>=^{TextureDataAbstract}^{__shared_weak_count}}BBB{shared_ptr<ggl::SamplerState>=^{SamplerState}^{__shared_weak_count}}} targetTexture
 @property  ^{Texture2D=^^?^{ResourceManager}^{RenderResource}^^?*iiiiIiII{shared_ptr<const ggl::Texture2DAbstract>=^{Texture2DAbstract}^{__shared_weak_count}}I{shared_ptr<const ggl::TextureDataAbstract>=^{TextureDataAbstract}^{__shared_weak_count}}BBB{shared_ptr<ggl::SamplerState>=^{SamplerState}^{__shared_weak_count}}} sourceRoofTexture
 @property  ^{Texture2D=^^?^{ResourceManager}^{RenderResource}^^?*iiiiIiII{shared_ptr<const ggl::Texture2DAbstract>=^{Texture2DAbstract}^{__shared_weak_count}}I{shared_ptr<const ggl::TextureDataAbstract>=^{TextureDataAbstract}^{__shared_weak_count}}BBB{shared_ptr<ggl::SamplerState>=^{SamplerState}^{__shared_weak_count}}} targetRoofTexture

  // instance methods
  -[VKPolygonGroup initWithStyleQuery:tileZoom:fixedAroundCentroid:contentScale:]
  -[VKPolygonGroup styleAttributes]
  -[VKPolygonGroup didFinishAddingData]
  -[VKPolygonGroup willAddDataWithAccessor:]
  -[VKPolygonGroup prepareToStrokeSection:key:styles:paddedCount:]
  -[VKPolygonGroup sourceTexture]
  -[VKPolygonGroup prepareToFillSection:]
  -[VKPolygonGroup targetTexture]
  -[VKPolygonGroup .cxx_construct]
  -[VKPolygonGroup dealloc]
  -[VKPolygonGroup addFillForSection:precision:styleIndex:cullingMask:accessor:triangulator:]
  -[VKPolygonGroup initialStyleIndexForSection:attributes:styles:]
  -[VKPolygonGroup .cxx_destruct]
  -[VKPolygonGroup updateTexturesIfNecessary:textureManager:]
  -[VKPolygonGroup addStrokeForSection:paddedCount:key:attributes:styles:cullingMask:accessor:]
  -[VKPolygonGroup prepareForPolygon:hasNonWaterStyle:]
  -[VKPolygonGroup createStrokePointStyleList:section:outPointStyles:]
  -[VKPolygonGroup addPolygon:hasNonWaterStyle:accessor:triangulator:]
  -[VKPolygonGroup strokeMeshes]
  -[VKPolygonGroup _textureForName:textureManager:]
  -[VKPolygonGroup updateTextures:textureManager:]
  -[VKPolygonGroup sourceRoofTexture]
  -[VKPolygonGroup targetRoofTexture]
  -[VKPolygonGroup enclosePointsInBoundingBox:count:]
  -[VKPolygonGroup setNeedsTextureUpdate]
  -[VKPolygonGroup styleIndexForAttributes:edgePair:]


VKMapAnnotationTrackingCameraController : VKAnnotationTrackingCameraController
  // instance methods
  -[VKMapAnnotationTrackingCameraController _minTrackingCameraDistance:]
  -[VKMapAnnotationTrackingCameraController _zoomLevelForCameraPosition:]
  -[VKMapAnnotationTrackingCameraController setEdgeInsets:]
  -[VKMapAnnotationTrackingCameraController _goToAnnotationAnimated:duration:timingFunction:isInitial:]
  -[VKMapAnnotationTrackingCameraController _rotateToHeadingAnimated:duration:]
  -[VKMapAnnotationTrackingCameraController updateFramerate]
  -[VKMapAnnotationTrackingCameraController _effectiveEdgeInsets]


VKLabelNavRouteEta : NSObject <VKLabelNavFeature>
 @property  {Matrix<double worldPoint
 @property  VKLabelNavRoadLabel *label
 @property  BOOL selected
 @property  unsigned char etaComparisonToMain
 @property  VKRouteInfo *routeInfo
 @property  VKRouteEtaDescription *displayEtaDescription
 @property  BOOL isRepositioning
 @property  unsigned char orientation
 @property  BOOL isOnRoute
 @property  BOOL isAwayFromRoute
 @property  {PolylineCoordinate=If} routeOffset
 @property  BOOL isRamp
 @property  NSString *name
 @property  NSString *shieldDisplayGroup
 @property  BOOL isStartOfRoadName
 @property  BOOL isInGuidance
 @property  long long intraRoadPriority
 @property  BOOL isGuidanceStepStart
 @property  BOOL isEtaFeature
 @property  BOOL isTrafficCameraFeature
 @property  BOOL isPicked

  // class methods
  +[VKLabelNavRouteEta baseAttributesForEtaLabel:focused:etaComparison:transportType:additionalAttributes:]
  +[VKLabelNavRouteEta toStyleEtaComparison:]
  +[VKLabelNavRouteEta styleForNavContext:selected:focused:etaComparison:transportType:additionalAttributes:]
  +[VKLabelNavRouteEta artworkForEtaDescription:navContext:roadSignStyleGroup:mercatorPoint:orientation:isSelected:artworkCache:]

  // instance methods
  -[VKLabelNavRouteEta routeInfo]
  -[VKLabelNavRouteEta _clearLabel]
  -[VKLabelNavRouteEta etaComparisonToMain]
  -[VKLabelNavRouteEta isRepositioning]
  -[VKLabelNavRouteEta setIsRepositioning:]
  -[VKLabelNavRouteEta isRamp]
  -[VKLabelNavRouteEta .cxx_construct]
  -[VKLabelNavRouteEta dealloc]
  -[VKLabelNavRouteEta setSelected:]
  -[VKLabelNavRouteEta isAwayFromRoute]
  -[VKLabelNavRouteEta name]
  -[VKLabelNavRouteEta label]
  -[VKLabelNavRouteEta isPicked]
  -[VKLabelNavRouteEta isInGuidance]
  -[VKLabelNavRouteEta shieldDisplayGroup]
  -[VKLabelNavRouteEta isStartOfRoadName]
  -[VKLabelNavRouteEta intraRoadPriority]
  -[VKLabelNavRouteEta isGuidanceStepStart]
  -[VKLabelNavRouteEta isTrafficCameraFeature]
  -[VKLabelNavRouteEta prepareStyleVarsWithContext:]
  -[VKLabelNavRouteEta setRouteInfo:]
  -[VKLabelNavRouteEta setOrientation:]
  -[VKLabelNavRouteEta isOnRoute]
  -[VKLabelNavRouteEta worldPoint]
  -[VKLabelNavRouteEta repositionAtRouteCoord:]
  -[VKLabelNavRouteEta orientation]
  -[VKLabelNavRouteEta displayEtaDescription]
  -[VKLabelNavRouteEta updateRoadSignWithNavContext:artworkCache:]
  -[VKLabelNavRouteEta initWithRouteInfo:routeCoord:]
  -[VKLabelNavRouteEta createLabelWithNavContext:orientation:etaDescription:selected:artworkCache:]
  -[VKLabelNavRouteEta layoutWithNavContext:]
  -[VKLabelNavRouteEta setIsPicked:]
  -[VKLabelNavRouteEta isEtaFeature]
  -[VKLabelNavRouteEta routeOffset]
  -[VKLabelNavRouteEta selected]


VKVenueBuildingFeatureMarker : VKFeatureMarker
 @property  unsigned long buildingId
 @property  unsigned long businessId
 @property  NSArray *floorOrdinals
 @property  NSDictionary *shortFloorNames
 @property  NSDictionary *floorNames

  // instance methods
  -[VKVenueBuildingFeatureMarker buildingId]
  -[VKVenueBuildingFeatureMarker nearestFramingPositionToLocation:]
  -[VKVenueBuildingFeatureMarker floorNames]
  -[VKVenueBuildingFeatureMarker businessId]
  -[VKVenueBuildingFeatureMarker initWithVenueBuilding:localize:]
  -[VKVenueBuildingFeatureMarker shortFloorNames]
  -[VKVenueBuildingFeatureMarker venueBuildingFeatureMarker]
  -[VKVenueBuildingFeatureMarker floorOrdinals]


_GGLDisplayLinkTarget : NSObject
  // instance methods
  -[_GGLDisplayLinkTarget initWithCallbacker:]
  -[_GGLDisplayLinkTarget .cxx_construct]
  -[_GGLDisplayLinkTarget .cxx_destruct]
  -[_GGLDisplayLinkTarget displayLinkFired:]


MetalLayer : CAMetalLayer /System/Library/Frameworks/ImageIO.framework/ImageIO <GGLLayer>
 @property  {CGSize=dd} backingSize
 @property  BOOL sRGB
 @property  <GGLLayerDelegate> *renderDelegate
 @property  int backingFormat

  // instance methods
  -[MetalLayer layoutSublayers]
  -[MetalLayer _updateDrawable]
  -[MetalLayer sRGB]
  -[MetalLayer onTimerFired:presentAfterMinimumDuration:]
  -[MetalLayer .cxx_construct]
  -[MetalLayer .cxx_destruct]
  -[MetalLayer onTimerFired:presentAtTime:]
  -[MetalLayer _createTexture]
  -[MetalLayer backingFormat]
  -[MetalLayer renderDelegate]
  -[MetalLayer backingSize]
  -[MetalLayer setRenderDelegate:]
  -[MetalLayer _onTimerFired:withPresent:]
  -[MetalLayer onTimerFired:]
  -[MetalLayer initWithDevice:sRGB:]
  -[MetalLayer display]
  -[MetalLayer didEnterBackground]


NSMutableSet(VKFoundationUtility)
	// class methods
	+[NSMutableSet(VKFoundationUtility) _vk_newWeakSet]

(VKFoundationInterning)
	// instance methods
	-[(VKFoundationInterning) _vk_internedString]

(VKFoundationUtility)
	// class methods
	+[(VKFoundationUtility) _vk_indexForLocale:]

GEOComposedRouteSection(VKPolylineOverlay)
	// instance methods
	-[GEOComposedRouteSection(VKPolylineOverlay) pathsForRenderRegion:inOverlay:]
	-[GEOComposedRouteSection(VKPolylineOverlay) pathsForRenderRegion:inOverlay:excludedSegments:]
	-[GEOComposedRouteSection(VKPolylineOverlay) pathsForRenderRegion:inOverlay:shouldSnapToTransit:verifySnapping:]
	-[GEOComposedRouteSection(VKPolylineOverlay) vkBounds]

GEOComposedRouteTransitTripSection(RenderRegion)
	// instance methods
	-[GEOComposedRouteTransitTripSection(RenderRegion) pathsForRenderRegion:inOverlay:shouldSnapToTransit:verifySnapping:]
	-[GEOComposedRouteTransitTripSection(RenderRegion) unsnappedPathsInOverlay:]
	-[GEOComposedRouteTransitTripSection(RenderRegion) _getEndPoints:rect:result:]
	-[GEOComposedRouteTransitTripSection(RenderRegion) _validateSnappedPaths:snappedTileBounds:overlay:]

NSBundle(VKBundle)
	// class methods
	+[NSBundle(VKBundle) __vkBundle]

01 00 0900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplay 
01 00 0900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 0900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMetalLayer 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOAlmanac 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOAltitudeManifest 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOAnalyticsPipelinePortal 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOComposedRouteSection 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOComposedRouteTransitTripSection 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOComposedTransitTripRouteSegment 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOCountryConfiguration 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOExperimentConfiguration 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOFeatureStyleAttributes 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOHorizontalCelestialBodyData 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOIdentifiedMapDataRequester 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOLatLng 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOMapItemIdentifier 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOMapRegion 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOPDFlyover 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOPlatform 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEORPGroundViewImageResource 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEORPVisibleTileSet 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOReachability 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEORegionalResourceTileData 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEORegionalResourceTileDecoder 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOResourceManager 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOResourceManifestConfiguration 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOResourceManifestManager 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEORouteMatch 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOStyleAttributes 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOTileData 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOTileLoader 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOTileLoaderConfiguration 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOTileRequester 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOTileServerLocalProxy 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOVectorTile 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOVectorTileDecoder 
01 00 0c00 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOVoltaireSimple3DTileRequester 
01 00 1000 /System/Library/Frameworks/IOSurface.framework/IOSurface: IOSurface 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLCaptureManager 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLCompileOptions 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLDepthStencilDescriptor 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPassDescriptor 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPipelineDescriptor 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLSamplerDescriptor 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLStencilDescriptor 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 1200 /System/Library/Frameworks/Metal.framework/Metal: MTLVertexDescriptor 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0b00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
