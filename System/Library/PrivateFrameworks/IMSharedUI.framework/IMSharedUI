|| __DATA.__objc_data _OBJC_CLASS_$_IMAudioController
|| __DATA.__objc_data _OBJC_CLASS_$_IMAudioController_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_IMAudioPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_IMAudioSessionController
|| __DATA.__objc_data _OBJC_CLASS_$_IMAudioSessionController_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_IMChatTranscriptItemExtendedLayoutAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_IMChatTranscriptItemLayoutAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_IMChatTranscriptLayoutEngine
|| __DATA.__objc_data _OBJC_CLASS_$_IMChatTranscriptLayoutSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_IMDisplayLink
|| __DATA.__objc_data _OBJC_CLASS_$_IMDisplayLink_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_IMDynamicGradientLayer
|| __DATA.__objc_data _OBJC_CLASS_$_IMFullScreenEffect
|| __DATA.__objc_data _OBJC_CLASS_$_IMFullScreenEffectBundleManager
|| __DATA.__objc_data _OBJC_CLASS_$_IMFullScreenEffectManager
|| __DATA.__objc_data _OBJC_CLASS_$_IMFullScreenEffectPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_IMFullScreenEffectSoundPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_IMFullscreenEffectFilter
|| __DATA.__objc_data _OBJC_CLASS_$_IMInternalAVAudioPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_IMSharedUI
|| __DATA.__objc_data _OBJC_CLASS_$_IMTranscriptBubbleSizeCache
|| __DATA.__objc_data _OBJC_CLASS_$__IMTranscriptBubbleSizeCacheEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_IMAudioController
|| __DATA.__objc_data _OBJC_METACLASS_$_IMAudioController_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_IMAudioPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_IMAudioSessionController
|| __DATA.__objc_data _OBJC_METACLASS_$_IMAudioSessionController_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_IMChatTranscriptItemExtendedLayoutAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_IMChatTranscriptItemLayoutAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_IMChatTranscriptLayoutEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_IMChatTranscriptLayoutSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDisplayLink
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDisplayLink_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_IMDynamicGradientLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_IMFullScreenEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_IMFullScreenEffectBundleManager
|| __DATA.__objc_data _OBJC_METACLASS_$_IMFullScreenEffectManager
|| __DATA.__objc_data _OBJC_METACLASS_$_IMFullScreenEffectPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_IMFullScreenEffectSoundPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_IMFullscreenEffectFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_IMInternalAVAudioPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_IMSharedUI
|| __DATA.__objc_data _OBJC_METACLASS_$_IMTranscriptBubbleSizeCache
|| __DATA.__objc_data _OBJC_METACLASS_$__IMTranscriptBubbleSizeCacheEntry
|| __DATA_CONST.__const _IMAnonymizeContentAndContactsDidChangeNotification
|| __DATA_CONST.__const _IMAudioSessionControllerSessionNotificationOptionsKey
|| __DATA_CONST.__const _IMAudioSessionControllerSessionOptionsWillChangeNotification
|| __DATA_CONST.__const _IMFullscreenEffectManagerUpdatesPlaying
|| __DATA_CONST.__const _IMFullscreenEffectsBundlePath
|| __DATA_CONST.__const _IMSharedUIBundleID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMTypingIndicatorLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMTypingIndicatorLayer
|| __TEXT.__const _IMBalloonDescriptorZero
|| __TEXT.__const _IMFullScreenEffectPreferredFrameInterval
|| __TEXT.__const _IMReceiverPlaybackDelayRaise
|| __TEXT.__const _IMReceiverPlaybackDelayTap
|| __TEXT.__const _IMSharedUIVersionNumber
|| __TEXT.__const _IMSharedUIVersionString
|| __TEXT.__const _kCKThinkingDotsOpacityDefault
|| __TEXT.__text _IMAnonymizeContentAndContacts
|| __TEXT.__text _IMAttachmentLogSubtype
|| __TEXT.__text _IMBalloonDescriptorEqualsBalloonDescriptor
|| __TEXT.__text _IMSetAnonymizeContentAndContacts
|| __TEXT.__text _IMSharedUIBundle
|| __TEXT.__text _IMURLForResourceFromSharedUIBundle
|| __TEXT.__text _NSStringFromIMBalloonAttributes
|| __TEXT.__text _NSStringFromIMBalloonDescriptor
|| __TEXT.__text _NSStringFromIMBalloonShape
|| __TEXT.__text _NSStringFromIMBalloonStyle
|| __TEXT.__text _NSStringFromIMBalloonVisibleOrientation
|| __TEXT.__text _NSStringFromIMColorType
|| __TEXT.__text _NSStringFromIMRectCorner
|| __TEXT.__text _NSStringFromIMTailShape
|| __TEXT.__text _NSStringFromIMTranscriptOrientation
__ AVFoundation: _AVAudioSessionCategoryAmbient
__ AVFoundation: _AVAudioSessionCategoryPlayAndRecord
__ AVFoundation: _AVAudioSessionInterruptionNotification
__ AVFoundation: _AVAudioSessionMediaServicesWereLostNotification
__ AVFoundation: _AVAudioSessionMediaServicesWereResetNotification
__ AVFoundation: _AVAudioSessionModeDefault
__ AVFoundation: _AVAudioSessionRouteChangeNotification
__ AVFoundation: _AVAudioSessionRouteChangeReasonKey
__ AVFoundation: _AVMetadataFormatQuickTimeUserData
__ AVFoundation: _AVMetadataKeySpaceQuickTimeUserData
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeNotification
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAudioPlayer
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _OBJC_CLASS_$_AVMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ CoreEmoji: _CEMStringIsSingleEmoji
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceEqualToColorSpace
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGColorSpaceRetain
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSValue
__ IMCore: _IMFileLocationTrimFileName
__ IMCore: _IMGetAssertionFailureHandler
__ IMCore: _IMTranscriptEffectBalloonsMomentIdentifier
__ IMCore: _IMTranscriptEffectCelebrationMomentIdentifier
__ IMCore: _IMTranscriptEffectConfettiMomentIdentifier
__ IMCore: _IMTranscriptEffectEchoMomentIdentifier
__ IMCore: _IMTranscriptEffectFireworksMomentIdentifier
__ IMCore: _IMTranscriptEffectLasersMomentIdentifier
__ IMCore: _IMTranscriptEffectLoveMomentIdentifier
__ IMCore: _IMTranscriptEffectShootingStarMomentIdentifier
__ IMCore: _IMTranscriptEffectSpotlightMomentIdentifier
__ IMCore: _IMWeakLinkSymbol
__ IMCore: _OBJC_CLASS_$_IMScheduledUpdater
__ IMCore: __IMWarn
__ IMSharedUtilities: _IMMessagesLoggingSubSystem
__ IMSharedUtilities: _IMMetricsCollectorEventFSMSentWithInvocation
__ IMSharedUtilities: _OBJC_CLASS_$_IMMetricsCollector
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DMakeTranslation
__ QuartzCore: _CATransform3DTranslate
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMatchMoveAnimation
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAReplicatorLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_CLASS_$_CATransformLayer
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCAAnimationCubicPaced
__ QuartzCore: _kCAAnimationLinear
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAFilterColorMonochrome
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ ResponseKit: _OBJC_CLASS_$_RKMessageResponseManager
__ UIKit: _OBJC_CLASS_$_NSLayoutManager
__ UIKit: _OBJC_CLASS_$_NSTextContainer
__ UIKit: _OBJC_CLASS_$_NSTextStorage
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _UIApplicationDidReceiveMemoryWarningNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
IMTypingIndicatorLayer : CALayer /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities <IMTypingIndicatorLayerProtocol>
 @property  CALayer *bubbleContainer
 @property  CALayer *smallBubble
 @property  CALayer *mediumBubble
 @property  CALayer *largeBubble
 @property  CALayer *thinkingDotContainer
 @property  CALayer *thinkingDot
 @property  CAReplicatorLayer *thinkingDots
 @property  CALayer *iconImageLayer
 @property  id iconImage
 @property  UIColor *bubbleColor
 @property  UIColor *thinkingDotColor
 @property  UITraitCollection *traitCollection
 @property  double bubbleOpacity
 @property  double thinkingDotOpacity
 @property  UIColor *customBubbleColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hasDarkBackground

  // class methods
  +[IMTypingIndicatorLayer defaultSize]
  +[IMTypingIndicatorLayer largeBubbleFrame]
  +[IMTypingIndicatorLayer supportsTypingIndicatorAnimation]
  +[IMTypingIndicatorLayer iconImageFrame]
  +[IMTypingIndicatorLayer defaultThinkingDotColor]
  +[IMTypingIndicatorLayer defaultBubbleColor]
  +[IMTypingIndicatorLayer defaultThinkingDotOpacity]
  +[IMTypingIndicatorLayer defaultBubbleOpacity]
  +[IMTypingIndicatorLayer smallBubbleFrame]
  +[IMTypingIndicatorLayer mediumBubbleFrame]
  +[IMTypingIndicatorLayer thinkingDotDiameter]
  +[IMTypingIndicatorLayer thinkingDotsOffset]
  +[IMTypingIndicatorLayer iconImageTrailingSpace]
  +[IMTypingIndicatorLayer thinkingDotSpace]
  +[IMTypingIndicatorLayer smallBubbleGrowOffset]
  +[IMTypingIndicatorLayer mediumBubbleGrowOffset]
  +[IMTypingIndicatorLayer largeBubbleGrowOffset]

  // instance methods
  -[IMTypingIndicatorLayer init]
  -[IMTypingIndicatorLayer .cxx_destruct]
  -[IMTypingIndicatorLayer _setup]
  -[IMTypingIndicatorLayer traitCollection]
  -[IMTypingIndicatorLayer setTraitCollection:]
  -[IMTypingIndicatorLayer stopAnimation]
  -[IMTypingIndicatorLayer iconImage]
  -[IMTypingIndicatorLayer setIconImage:]
  -[IMTypingIndicatorLayer startPulseAnimation]
  -[IMTypingIndicatorLayer startGrowAnimation]
  -[IMTypingIndicatorLayer stopPulseAnimation]
  -[IMTypingIndicatorLayer startShrinkAnimationWithCompletionBlock:]
  -[IMTypingIndicatorLayer _updateBubbleColors]
  -[IMTypingIndicatorLayer _updateBubbleOpacity]
  -[IMTypingIndicatorLayer resolvedColor:forTraitCollection:]
  -[IMTypingIndicatorLayer thinkingDotColor]
  -[IMTypingIndicatorLayer _updateForImage]
  -[IMTypingIndicatorLayer largeBubble]
  -[IMTypingIndicatorLayer _buildIconImage]
  -[IMTypingIndicatorLayer _buildThinkingDots]
  -[IMTypingIndicatorLayer iconImageLayer]
  -[IMTypingIndicatorLayer setIconImageLayer:]
  -[IMTypingIndicatorLayer thinkingDotOpacity]
  -[IMTypingIndicatorLayer bubbleColor]
  -[IMTypingIndicatorLayer mediumBubble]
  -[IMTypingIndicatorLayer smallBubble]
  -[IMTypingIndicatorLayer bubbleOpacity]
  -[IMTypingIndicatorLayer convertedCurrentMediaTime]
  -[IMTypingIndicatorLayer _smallBubbleGrowAnimationsWithSpeed:offset:]
  -[IMTypingIndicatorLayer _mediumBubbleGrowAnimationsWithSpeed:offset:]
  -[IMTypingIndicatorLayer _largeBubbleGrowAnimationsWithSpeed:offset:]
  -[IMTypingIndicatorLayer startGrowAnimationWithCompletionBlock:]
  -[IMTypingIndicatorLayer _smallBubblePulseAnimationWithSpeed:delay:]
  -[IMTypingIndicatorLayer _mediumBubblePulseAnimationWithSpeed:delay:]
  -[IMTypingIndicatorLayer _largeBubblePulseAnimationWithSpeed:delay:]
  -[IMTypingIndicatorLayer hasDarkBackground]
  -[IMTypingIndicatorLayer setHasDarkBackground:]
  -[IMTypingIndicatorLayer setBubbleColor:]
  -[IMTypingIndicatorLayer setBubbleOpacity:]
  -[IMTypingIndicatorLayer setThinkingDotColor:]
  -[IMTypingIndicatorLayer setThinkingDotOpacity:]
  -[IMTypingIndicatorLayer customBubbleColor]
  -[IMTypingIndicatorLayer setCustomBubbleColor:]
  -[IMTypingIndicatorLayer bubbleContainer]
  -[IMTypingIndicatorLayer setBubbleContainer:]
  -[IMTypingIndicatorLayer setSmallBubble:]
  -[IMTypingIndicatorLayer setMediumBubble:]
  -[IMTypingIndicatorLayer setLargeBubble:]
  -[IMTypingIndicatorLayer thinkingDotContainer]
  -[IMTypingIndicatorLayer setThinkingDotContainer:]
  -[IMTypingIndicatorLayer thinkingDot]
  -[IMTypingIndicatorLayer setThinkingDot:]
  -[IMTypingIndicatorLayer thinkingDots]
  -[IMTypingIndicatorLayer setThinkingDots:]


IMFullScreenEffectManager : NSObject /usr/lib/libSystem.B.dylib <IMFullScreenEffectPlayerDelegate>
 @property  IMFullScreenEffectPlayer *currentEffectPlayer
 @property  NSMutableArray *effectQueue
 @property  IMScheduledUpdater *triggerUpdater
 @property  <IMFullScreenEffectManagerDelegate> *delegate
 @property  IMFullScreenEffect *currentEffect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMFullScreenEffectManager init]
  -[IMFullScreenEffectManager dealloc]
  -[IMFullScreenEffectManager delegate]
  -[IMFullScreenEffectManager setDelegate:]
  -[IMFullScreenEffectManager .cxx_destruct]
  -[IMFullScreenEffectManager beginHoldingUpdatesForKey:]
  -[IMFullScreenEffectManager endHoldingUpdatesForKey:]
  -[IMFullScreenEffectManager currentEffect]
  -[IMFullScreenEffectManager triggerNextEffect]
  -[IMFullScreenEffectManager setTriggerUpdater:]
  -[IMFullScreenEffectManager effectQueue]
  -[IMFullScreenEffectManager setEffectQueue:]
  -[IMFullScreenEffectManager triggerUpdater]
  -[IMFullScreenEffectManager isFullScreenEffectQueued:]
  -[IMFullScreenEffectManager willStartFullScreenEffect:]
  -[IMFullScreenEffectManager currentEffectPlayer]
  -[IMFullScreenEffectManager setCurrentEffectPlayer:]
  -[IMFullScreenEffectManager _stopCurrentFullscreenEffect:]
  -[IMFullScreenEffectManager stopCurrentFullscreenEffectPlayer]
  -[IMFullScreenEffectManager queueFullScreenEffectPlayer:withRepeating:]
  -[IMFullScreenEffectManager fullScreenEffectPlayerDidPrepare:]
  -[IMFullScreenEffectManager fullScreenEffectPlayerDidStart:]
  -[IMFullScreenEffectManager fullScreenEffectPlayerDidFinish:]
  -[IMFullScreenEffectManager stopAllFullscreenEffectPlayers]
  -[IMFullScreenEffectManager adjustedEffectDurationForTesting:]


IMChatTranscriptItemExtendedLayoutAttributes : IMChatTranscriptItemLayoutAttributes
 @property  long long layoutOrientation
 @property  {CGSize=dd} drawableSize
 @property  double topMargin

  // instance methods
  -[IMChatTranscriptItemExtendedLayoutAttributes copyWithZone:]
  -[IMChatTranscriptItemExtendedLayoutAttributes layoutOrientation]
  -[IMChatTranscriptItemExtendedLayoutAttributes setLayoutOrientation:]
  -[IMChatTranscriptItemExtendedLayoutAttributes setTopMargin:]
  -[IMChatTranscriptItemExtendedLayoutAttributes topMargin]
  -[IMChatTranscriptItemExtendedLayoutAttributes setDrawableSize:]
  -[IMChatTranscriptItemExtendedLayoutAttributes drawableSize]


IMTranscriptBubbleSizeCache : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *sizeCache

  // instance methods
  -[IMTranscriptBubbleSizeCache init]
  -[IMTranscriptBubbleSizeCache .cxx_destruct]
  -[IMTranscriptBubbleSizeCache flush]
  -[IMTranscriptBubbleSizeCache setSizeCache:]
  -[IMTranscriptBubbleSizeCache sizeCache]
  -[IMTranscriptBubbleSizeCache _cacheEntryForMaximumWidth:getEffectiveIndex:]
  -[IMTranscriptBubbleSizeCache _insertCacheEntry:]
  -[IMTranscriptBubbleSizeCache sizeForMaximumWidth:]
  -[IMTranscriptBubbleSizeCache setSize:forMaximumWidth:]


_IMTranscriptBubbleSizeCacheEntry : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  {CGSize=dd} size
 @property  double minimumWidth
 @property  double maximumWidth

  // instance methods
  -[_IMTranscriptBubbleSizeCacheEntry copyWithZone:]
  -[_IMTranscriptBubbleSizeCacheEntry size]
  -[_IMTranscriptBubbleSizeCacheEntry setSize:]
  -[_IMTranscriptBubbleSizeCacheEntry maximumWidth]
  -[_IMTranscriptBubbleSizeCacheEntry minimumWidth]
  -[_IMTranscriptBubbleSizeCacheEntry setMaximumWidth:]
  -[_IMTranscriptBubbleSizeCacheEntry initWithSize:maximumWidth:]


IMAudioController : NSObject /usr/lib/libSystem.B.dylib <IMAudioPlayerDelegate>
 @property  BOOL paused
 @property  IMAudioPlayer *audioPlayer
 @property  BOOL interrupted
 @property  BOOL playing
 @property  IMAudioPlayer *listenAudioPlayer
 @property  BOOL shouldUseSpeaker
 @property  BOOL shouldStopPlayingWhenSilent
 @property  BOOL shouldDuckOthers
 @property  BOOL shouldUseAVPlayer
 @property  NSURL *currentURL
 @property  double currentMediaObjectTime
 @property  double currentMediaObjectDuration
 @property  float volume
 @property  NSArray *audioURLs
 @property  <IMAudioControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMAudioController audioControllerClass]
  +[IMAudioController audioControllerWithContentsOfURLs:]

  // instance methods
  -[IMAudioController dealloc]
  -[IMAudioController delegate]
  -[IMAudioController setDelegate:]
  -[IMAudioController .cxx_destruct]
  -[IMAudioController pause]
  -[IMAudioController stop]
  -[IMAudioController isPaused]
  -[IMAudioController setPaused:]
  -[IMAudioController play]
  -[IMAudioController volume]
  -[IMAudioController setVolume:]
  -[IMAudioController isPlaying]
  -[IMAudioController interrupted]
  -[IMAudioController audioPlayer]
  -[IMAudioController setAudioPlayer:]
  -[IMAudioController prepareToPlay]
  -[IMAudioController setInterrupted:]
  -[IMAudioController setPlaying:]
  -[IMAudioController setShouldUseSpeaker:]
  -[IMAudioController playAfterDelay:]
  -[IMAudioController currentMediaObject]
  -[IMAudioController currentMediaObjectTime]
  -[IMAudioController setShouldUseAVPlayer:]
  -[IMAudioController setShouldStopPlayingWhenSilent:]
  -[IMAudioController setShouldDuckOthers:]
  -[IMAudioController audioSessionControllerOptions]
  -[IMAudioController shouldUseSpeaker]
  -[IMAudioController shouldStopPlayingWhenSilent]
  -[IMAudioController shouldDuckOthers]
  -[IMAudioController audioPlayerDidFinishPlaying:]
  -[IMAudioController shouldUseAVPlayer]
  -[IMAudioController playListenSound:]
  -[IMAudioController playListenEndSound:]
  -[IMAudioController audioPlayerCurrentTimeDidChange:]
  -[IMAudioController audioPlayerDidPrepareAudioToPlay:successfully:]
  -[IMAudioController currentMediaObjectDuration]
  -[IMAudioController audioURLs]
  -[IMAudioController initWithContentsOfURLs:]
  -[IMAudioController _notifyPlayerDidPrepareAudioURL:successfully:]
  -[IMAudioController setListenAudioPlayer:]
  -[IMAudioController _playSoundWithURL:completion:]
  -[IMAudioController addContentsOfURL:]
  -[IMAudioController addContentsOfURLs:]
  -[IMAudioController currentURL]
  -[IMAudioController listenAudioPlayer]


IMFullScreenEffectBundleManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *bundleDirectory
 @property  NSDictionary *fullScreenMomentBundles

  // class methods
  +[IMFullScreenEffectBundleManager sharedInstance]
  +[IMFullScreenEffectBundleManager __setSingleton__im:]
  +[IMFullScreenEffectBundleManager __singleton__im]
  +[IMFullScreenEffectBundleManager effectIdentifiersInPickerOrder]

  // instance methods
  -[IMFullScreenEffectBundleManager init]
  -[IMFullScreenEffectBundleManager dealloc]
  -[IMFullScreenEffectBundleManager .cxx_destruct]
  -[IMFullScreenEffectBundleManager didReceiveMemoryWarning:]
  -[IMFullScreenEffectBundleManager localizedDisplayNameForEffectWithIdentifier:]
  -[IMFullScreenEffectBundleManager loadEffectBundle:error:]
  -[IMFullScreenEffectBundleManager bundleDirectory]
  -[IMFullScreenEffectBundleManager loadAllBundlesFromPath:bundles:error:]
  -[IMFullScreenEffectBundleManager effectBundleForIdentifier:]
  -[IMFullScreenEffectBundleManager fullScreenMomentBundles]
  -[IMFullScreenEffectBundleManager fullScreenMomentForIdentifier:]
  -[IMFullScreenEffectBundleManager localizedStringForKey:fromBundleWithIdentifier:]
  -[IMFullScreenEffectBundleManager triggeredFullScreenEffectForType:]
  -[IMFullScreenEffectBundleManager hasFullScreenMomentForIdentifier:]
  -[IMFullScreenEffectBundleManager setBundleDirectory:]


IMInternalAVAudioPlayer : NSObject /usr/lib/libSystem.B.dylib <AVAudioPlayerDelegate>
 @property  long long playerType
 @property  <IMInternalAVAudioPlayerDelegate> *delegate
 @property  float volume
 @property  BOOL playing
 @property  double currentTime
 @property  double duration
 @property  double deviceCurrentTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMInternalAVAudioPlayer dealloc]
  -[IMInternalAVAudioPlayer delegate]
  -[IMInternalAVAudioPlayer setDelegate:]
  -[IMInternalAVAudioPlayer .cxx_destruct]
  -[IMInternalAVAudioPlayer pause]
  -[IMInternalAVAudioPlayer stop]
  -[IMInternalAVAudioPlayer observeValueForKeyPath:ofObject:change:context:]
  -[IMInternalAVAudioPlayer duration]
  -[IMInternalAVAudioPlayer currentTime]
  -[IMInternalAVAudioPlayer volume]
  -[IMInternalAVAudioPlayer setVolume:]
  -[IMInternalAVAudioPlayer isPlaying]
  -[IMInternalAVAudioPlayer audioPlayerDidFinishPlaying:successfully:]
  -[IMInternalAVAudioPlayer prepareToPlay]
  -[IMInternalAVAudioPlayer playAtTime:]
  -[IMInternalAVAudioPlayer deviceCurrentTime]
  -[IMInternalAVAudioPlayer initWithContentsOfURL:playerType:]
  -[IMInternalAVAudioPlayer playerType]
  -[IMInternalAVAudioPlayer _playerItemDidEndNotification:]
  -[IMInternalAVAudioPlayer _handleAVPlayerItemStateChange]
  -[IMInternalAVAudioPlayer _playAtTime:]
  -[IMInternalAVAudioPlayer _notifyPlayerDidPrepareAudioFileSuccessfully:]
  -[IMInternalAVAudioPlayer _notifyPlayerDidFinishSuccessfully:]


IMFullScreenEffect : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL triggeredByResponseKit
 @property  id triggeredByObject
 @property  NSString *identifier
 @property  Class effectViewClass
 @property  unsigned long layerCount
 @property  BOOL effectIsDark
 @property  BOOL foregroundEffect
 @property  double duration
 @property  UIColor *backgroundColor
 @property  NSArray *messageFilters
 @property  NSURL *soundEffectFileURL
 @property  BOOL shouldDrawOverNavigationBar
 @property  BOOL soundEffectHasHapticTrack
 @property  unsigned long messageOrientation
 @property  id delegate

  // class methods
  +[IMFullScreenEffect _monochromeDimmingFilterWithType:]
  +[IMFullScreenEffect bigEmojiFilter]
  +[IMFullScreenEffect tapBackFilter]
  +[IMFullScreenEffect stickerFilter]

  // instance methods
  -[IMFullScreenEffect delegate]
  -[IMFullScreenEffect setDelegate:]
  -[IMFullScreenEffect .cxx_destruct]
  -[IMFullScreenEffect identifier]
  -[IMFullScreenEffect setIdentifier:]
  -[IMFullScreenEffect duration]
  -[IMFullScreenEffect layerCount]
  -[IMFullScreenEffect backgroundColor]
  -[IMFullScreenEffect effectIsDark]
  -[IMFullScreenEffect setMessageOrientation:]
  -[IMFullScreenEffect setTriggeredByResponseKit:]
  -[IMFullScreenEffect prepareSoundEffect]
  -[IMFullScreenEffect effectViewClass]
  -[IMFullScreenEffect isForegroundEffect]
  -[IMFullScreenEffect shouldDrawOverNavigationBar]
  -[IMFullScreenEffect messageFilters]
  -[IMFullScreenEffect soundEffectFileURL]
  -[IMFullScreenEffect soundEffectHasHapticTrack]
  -[IMFullScreenEffect messageOrientation]
  -[IMFullScreenEffect triggeredByResponseKit]
  -[IMFullScreenEffect triggeredByObject]
  -[IMFullScreenEffect setTriggeredByObject:]


IMAudioController_iOS : IMAudioController
  // instance methods
  -[IMAudioController_iOS dealloc]
  -[IMAudioController_iOS applicationWillResignActive]
  -[IMAudioController_iOS audioSessionInterruption:]
  -[IMAudioController_iOS initWithContentsOfURLs:]


IMChatTranscriptLayoutSpecification : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  {CGSize=dd} layoutBoundsSize
 @property  double maximumBubbleWidth
 @property  double topMargin
 @property  double bottomMargin
 @property  double leadingMargin
 @property  double trailingMargin
 @property  double zeroVerticalItemSpacing
 @property  double smallVerticalItemSpacing
 @property  double mediumVerticalItemSpacing
 @property  double largeVerticalItemSpacing

  // instance methods
  -[IMChatTranscriptLayoutSpecification isEqual:]
  -[IMChatTranscriptLayoutSpecification copyWithZone:]
  -[IMChatTranscriptLayoutSpecification setTopMargin:]
  -[IMChatTranscriptLayoutSpecification setBottomMargin:]
  -[IMChatTranscriptLayoutSpecification topMargin]
  -[IMChatTranscriptLayoutSpecification bottomMargin]
  -[IMChatTranscriptLayoutSpecification leadingMargin]
  -[IMChatTranscriptLayoutSpecification trailingMargin]
  -[IMChatTranscriptLayoutSpecification setLeadingMargin:]
  -[IMChatTranscriptLayoutSpecification setTrailingMargin:]
  -[IMChatTranscriptLayoutSpecification layoutBoundsSize]
  -[IMChatTranscriptLayoutSpecification setLayoutBoundsSize:]
  -[IMChatTranscriptLayoutSpecification maximumBubbleWidth]
  -[IMChatTranscriptLayoutSpecification setMaximumBubbleWidth:]
  -[IMChatTranscriptLayoutSpecification zeroVerticalItemSpacing]
  -[IMChatTranscriptLayoutSpecification setZeroVerticalItemSpacing:]
  -[IMChatTranscriptLayoutSpecification smallVerticalItemSpacing]
  -[IMChatTranscriptLayoutSpecification setSmallVerticalItemSpacing:]
  -[IMChatTranscriptLayoutSpecification mediumVerticalItemSpacing]
  -[IMChatTranscriptLayoutSpecification setMediumVerticalItemSpacing:]
  -[IMChatTranscriptLayoutSpecification largeVerticalItemSpacing]
  -[IMChatTranscriptLayoutSpecification setLargeVerticalItemSpacing:]


IMDisplayLink : NSObject /usr/lib/libSystem.B.dylib
 @property  long long preferredFramesPerSecond
 @property  NSRunLoop *runLoop
 @property  NSString *runLoopMode
 @property  UIScreen *screen
 @property  id target
 @property  SEL selector
 @property  BOOL valid

  // class methods
  +[IMDisplayLink displayLinkWithTarget:selector:]
  +[IMDisplayLink _displayLinkClass]

  // instance methods
  -[IMDisplayLink dealloc]
  -[IMDisplayLink selector]
  -[IMDisplayLink invalidate]
  -[IMDisplayLink isValid]
  -[IMDisplayLink .cxx_destruct]
  -[IMDisplayLink target]
  -[IMDisplayLink runLoop]
  -[IMDisplayLink screen]
  -[IMDisplayLink initWithTarget:selector:]
  -[IMDisplayLink schedule]
  -[IMDisplayLink setScreen:]
  -[IMDisplayLink setPreferredFramesPerSecond:]
  -[IMDisplayLink preferredFramesPerSecond]
  -[IMDisplayLink setRunLoop:]
  -[IMDisplayLink runLoopMode]
  -[IMDisplayLink setRunLoopMode:]
  -[IMDisplayLink _displayLinkCallback]


IMDisplayLink_iOS : IMDisplayLink
 @property  CADisplayLink *displayLink

  // instance methods
  -[IMDisplayLink_iOS invalidate]
  -[IMDisplayLink_iOS isValid]
  -[IMDisplayLink_iOS .cxx_destruct]
  -[IMDisplayLink_iOS initWithTarget:selector:]
  -[IMDisplayLink_iOS schedule]
  -[IMDisplayLink_iOS displayLink]
  -[IMDisplayLink_iOS setDisplayLink:]


IMChatTranscriptLayoutEngine : NSObject /usr/lib/libSystem.B.dylib
 @property  {CGSize=dd} contentSize
 @property  NSArray *layoutAttributes
 @property  <IMChatTranscriptLayoutEngineDataSource> *dataSource
 @property  IMChatTranscriptLayoutSpecification *layoutSpecification

  // instance methods
  -[IMChatTranscriptLayoutEngine init]
  -[IMChatTranscriptLayoutEngine .cxx_destruct]
  -[IMChatTranscriptLayoutEngine contentSize]
  -[IMChatTranscriptLayoutEngine dataSource]
  -[IMChatTranscriptLayoutEngine setDataSource:]
  -[IMChatTranscriptLayoutEngine setContentSize:]
  -[IMChatTranscriptLayoutEngine invalidateLayout]
  -[IMChatTranscriptLayoutEngine reloadData]
  -[IMChatTranscriptLayoutEngine prepareLayout]
  -[IMChatTranscriptLayoutEngine layoutAttributesForElementsInRect:]
  -[IMChatTranscriptLayoutEngine layoutAttributesForItemAtIndexPath:]
  -[IMChatTranscriptLayoutEngine layoutAttributes]
  -[IMChatTranscriptLayoutEngine setLayoutAttributes:]
  -[IMChatTranscriptLayoutEngine _updateContentSize]
  -[IMChatTranscriptLayoutEngine _invalidateCachedItemData]
  -[IMChatTranscriptLayoutEngine _numberOfTranscriptItems]
  -[IMChatTranscriptLayoutEngine _cachedDrawableForTranscriptItem:atIndex:]
  -[IMChatTranscriptLayoutEngine _spaceForVerticalSpaceDescriptor:]
  -[IMChatTranscriptLayoutEngine _updateFrames]
  -[IMChatTranscriptLayoutEngine _buildLayoutAttributesIfNeeded]
  -[IMChatTranscriptLayoutEngine _makeDrawableForTranscriptItem:]
  -[IMChatTranscriptLayoutEngine _cachedDrawableAtIndexOrNil:]
  -[IMChatTranscriptLayoutEngine setLayoutSpecification:]
  -[IMChatTranscriptLayoutEngine drawableAtIndex:]
  -[IMChatTranscriptLayoutEngine removeItemsAtIndexPaths:insertItemsAtIndexPaths:]
  -[IMChatTranscriptLayoutEngine layoutSpecification]


IMFullscreenEffectFilter : NSObject /usr/lib/libSystem.B.dylib
 @property  long long type
 @property  unsigned long direction
 @property  NSArray *balloonFilters
 @property  NSArray *balloonBackdropFilters
 @property  CAFilter *balloonCompositingFilter
 @property  double balloonAlpha
 @property  double contentAlpha
 @property  CAFilter *textCompositingFilter
 @property  UIColor *textColor

  // instance methods
  -[IMFullscreenEffectFilter init]
  -[IMFullscreenEffectFilter type]
  -[IMFullscreenEffectFilter setType:]
  -[IMFullscreenEffectFilter .cxx_destruct]
  -[IMFullscreenEffectFilter direction]
  -[IMFullscreenEffectFilter setDirection:]
  -[IMFullscreenEffectFilter setTextColor:]
  -[IMFullscreenEffectFilter textColor]
  -[IMFullscreenEffectFilter setContentAlpha:]
  -[IMFullscreenEffectFilter contentAlpha]
  -[IMFullscreenEffectFilter balloonFilters]
  -[IMFullscreenEffectFilter textCompositingFilter]
  -[IMFullscreenEffectFilter balloonAlpha]
  -[IMFullscreenEffectFilter balloonBackdropFilters]
  -[IMFullscreenEffectFilter balloonCompositingFilter]
  -[IMFullscreenEffectFilter setBalloonFilters:]
  -[IMFullscreenEffectFilter setBalloonBackdropFilters:]
  -[IMFullscreenEffectFilter setBalloonCompositingFilter:]
  -[IMFullscreenEffectFilter setBalloonAlpha:]
  -[IMFullscreenEffectFilter setTextCompositingFilter:]


IMSharedUI : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[IMSharedUI utilities]
  +[IMSharedUI audio]
  +[IMSharedUI transcript]
  +[IMSharedUI fsm]


IMFullScreenEffectSoundPlayer : NSObject /usr/lib/libSystem.B.dylib <IMAudioControllerDelegate, IMFullScreenEffectSoundPlayer>
 @property  IMAudioController *audioController
 @property  BOOL started
 @property  NSURL *soundURL
 @property  BOOL hasHapticTrack
 @property  float currentVolume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <IMFullScreenEffectSoundPlayerDelegate> *delegate

  // instance methods
  -[IMFullScreenEffectSoundPlayer delegate]
  -[IMFullScreenEffectSoundPlayer setDelegate:]
  -[IMFullScreenEffectSoundPlayer .cxx_destruct]
  -[IMFullScreenEffectSoundPlayer started]
  -[IMFullScreenEffectSoundPlayer setStarted:]
  -[IMFullScreenEffectSoundPlayer _didStart]
  -[IMFullScreenEffectSoundPlayer soundURL]
  -[IMFullScreenEffectSoundPlayer _didPrepare]
  -[IMFullScreenEffectSoundPlayer audioController]
  -[IMFullScreenEffectSoundPlayer setAudioController:]
  -[IMFullScreenEffectSoundPlayer _supportsSoundEffects]
  -[IMFullScreenEffectSoundPlayer _audioSessionOptionsWillChange:]
  -[IMFullScreenEffectSoundPlayer _ensureAudioPlayer]
  -[IMFullScreenEffectSoundPlayer currentVolume]
  -[IMFullScreenEffectSoundPlayer setCurrentVolume:]
  -[IMFullScreenEffectSoundPlayer audioController:didChangeProgressForContentAtURL:currentTime:duration:]
  -[IMFullScreenEffectSoundPlayer audioController:didPrepareToPlayContentAtURL:successfully:]
  -[IMFullScreenEffectSoundPlayer hasHapticTrack]
  -[IMFullScreenEffectSoundPlayer _didStop]
  -[IMFullScreenEffectSoundPlayer stopPlayingSound]
  -[IMFullScreenEffectSoundPlayer initWithSoundURL:hasHapticTrack:]
  -[IMFullScreenEffectSoundPlayer prepareToPlaySound]
  -[IMFullScreenEffectSoundPlayer startPlayingSound]


IMFullScreenEffectPlayer : NSObject /usr/lib/libSystem.B.dylib <IMFullScreenEffectSoundPlayerDelegate>
 @property  NSTimer *effectTimer
 @property  IMFullScreenEffect *fullScreenEffect
 @property  IMMessagePartChatItem *messagePartChatItem
 @property  BOOL triggeredByResponseKit
 @property  <IMFullScreenEffectSoundPlayer> *soundPlayer
 @property  NSString *identifier
 @property  BOOL isFromMe
 @property  double startTime
 @property  double endTime
 @property  NSString *languageCode
 @property  BOOL wasAborted
 @property  <IMFullScreenEffectPlayerDelegate> *delegate
 @property  BOOL shouldRepeat
 @property  UIImage *messageImage
 @property  BOOL isPlaying
 @property  BOOL didPlay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IMFullScreenEffectPlayer dealloc]
  -[IMFullScreenEffectPlayer delegate]
  -[IMFullScreenEffectPlayer setDelegate:]
  -[IMFullScreenEffectPlayer .cxx_destruct]
  -[IMFullScreenEffectPlayer languageCode]
  -[IMFullScreenEffectPlayer identifier]
  -[IMFullScreenEffectPlayer setIdentifier:]
  -[IMFullScreenEffectPlayer stopTimer]
  -[IMFullScreenEffectPlayer startTime]
  -[IMFullScreenEffectPlayer endTime]
  -[IMFullScreenEffectPlayer setEndTime:]
  -[IMFullScreenEffectPlayer setStartTime:]
  -[IMFullScreenEffectPlayer isPlaying]
  -[IMFullScreenEffectPlayer startTimer]
  -[IMFullScreenEffectPlayer setLanguageCode:]
  -[IMFullScreenEffectPlayer isFromMe]
  -[IMFullScreenEffectPlayer setIsFromMe:]
  -[IMFullScreenEffectPlayer shouldRepeat]
  -[IMFullScreenEffectPlayer setShouldRepeat:]
  -[IMFullScreenEffectPlayer _didPrepare]
  -[IMFullScreenEffectPlayer setTriggeredByResponseKit:]
  -[IMFullScreenEffectPlayer setMessageImage:]
  -[IMFullScreenEffectPlayer triggeredByResponseKit]
  -[IMFullScreenEffectPlayer messagePartChatItem]
  -[IMFullScreenEffectPlayer fullScreenEffect]
  -[IMFullScreenEffectPlayer loadFullScreenEffect:]
  -[IMFullScreenEffectPlayer abortPlayingEffect]
  -[IMFullScreenEffectPlayer prepareToPlayEffect]
  -[IMFullScreenEffectPlayer startPlayingEffect]
  -[IMFullScreenEffectPlayer _shouldAddFilter:toCell:]
  -[IMFullScreenEffectPlayer addFullScreenEffectFiltersToCells:]
  -[IMFullScreenEffectPlayer removeFullScreenEffectFiltersFromCells:]
  -[IMFullScreenEffectPlayer addFullScreenEffectFilterToTriggeringCell:]
  -[IMFullScreenEffectPlayer fullScreenEffectSoundPlayerDidStopPlaying:]
  -[IMFullScreenEffectPlayer fullScreenEffectSoundPlayerDidStartPlaying:]
  -[IMFullScreenEffectPlayer fullScreenEffectSoundPlayerDidPrepare:]
  -[IMFullScreenEffectPlayer initWithIdentifier:isFromMe:]
  -[IMFullScreenEffectPlayer createSoundPlayer]
  -[IMFullScreenEffectPlayer setSoundPlayer:]
  -[IMFullScreenEffectPlayer setFullScreenEffect:]
  -[IMFullScreenEffectPlayer didSetFullScreenEffect:]
  -[IMFullScreenEffectPlayer _setFullScreenEffect:]
  -[IMFullScreenEffectPlayer setWasAborted:]
  -[IMFullScreenEffectPlayer didAbortPlaying]
  -[IMFullScreenEffectPlayer didStopPlaying]
  -[IMFullScreenEffectPlayer willStartPlaying]
  -[IMFullScreenEffectPlayer initWithMessagePartChatItem:languageCode:]
  -[IMFullScreenEffectPlayer stopPlayingEffect]
  -[IMFullScreenEffectPlayer didPlay]
  -[IMFullScreenEffectPlayer soundPlayer]
  -[IMFullScreenEffectPlayer setMessagePartChatItem:]
  -[IMFullScreenEffectPlayer messageImage]
  -[IMFullScreenEffectPlayer wasAborted]
  -[IMFullScreenEffectPlayer effectTimer]
  -[IMFullScreenEffectPlayer setEffectTimer:]


IMDynamicGradientLayer : CALayer /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities
 @property  CALayer *gradientLayer
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} gradientFrame
 @property  CATransformLayer *trackingLayer
 @property  double screenScale
 @property  ^{CGColorSpace=} colorSpace
 @property  <IMDynamicGradientReferenceView> *referenceView
 @property  NSArray *colors
 @property  ^{CGImage=} gradient

  // instance methods
  -[IMDynamicGradientLayer init]
  -[IMDynamicGradientLayer dealloc]
  -[IMDynamicGradientLayer .cxx_destruct]
  -[IMDynamicGradientLayer colorSpace]
  -[IMDynamicGradientLayer setColorSpace:]
  -[IMDynamicGradientLayer setColors:]
  -[IMDynamicGradientLayer gradientLayer]
  -[IMDynamicGradientLayer referenceView]
  -[IMDynamicGradientLayer setReferenceView:]
  -[IMDynamicGradientLayer setScreenScale:]
  -[IMDynamicGradientLayer gradient]
  -[IMDynamicGradientLayer setGradientLayer:]
  -[IMDynamicGradientLayer colors]
  -[IMDynamicGradientLayer layoutSublayers]
  -[IMDynamicGradientLayer screenScale]
  -[IMDynamicGradientLayer layerDidBecomeVisible:]
  -[IMDynamicGradientLayer setGradientFrame:]
  -[IMDynamicGradientLayer gradientFrame]
  -[IMDynamicGradientLayer setTrackingLayer:]
  -[IMDynamicGradientLayer trackingLayer]
  -[IMDynamicGradientLayer _updateAnimation]
  -[IMDynamicGradientLayer _updateGradientImage]
  -[IMDynamicGradientLayer _floorToPixels:]
  -[IMDynamicGradientLayer didMoveToWindow:]


IMChatTranscriptItemLayoutAttributes : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSIndexPath *indexPath
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  {CGSize=dd} size

  // instance methods
  -[IMChatTranscriptItemLayoutAttributes copyWithZone:]
  -[IMChatTranscriptItemLayoutAttributes .cxx_destruct]
  -[IMChatTranscriptItemLayoutAttributes size]
  -[IMChatTranscriptItemLayoutAttributes indexPath]
  -[IMChatTranscriptItemLayoutAttributes setSize:]
  -[IMChatTranscriptItemLayoutAttributes frame]
  -[IMChatTranscriptItemLayoutAttributes setFrame:]
  -[IMChatTranscriptItemLayoutAttributes setIndexPath:]


IMAudioSessionController : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL active
 @property  BOOL dirty
 @property  unsigned long options
 @property  BOOL shouldUseSpeaker
 @property  BOOL shouldStopPlayingWhenSilent
 @property  BOOL shouldDuckOthers

  // class methods
  +[IMAudioSessionController queue]
  +[IMAudioSessionController sharedInstance]
  +[IMAudioSessionController __setSingleton__im:]
  +[IMAudioSessionController __singleton__im]

  // instance methods
  -[IMAudioSessionController options]
  -[IMAudioSessionController setDirty:]
  -[IMAudioSessionController isActive]
  -[IMAudioSessionController setActive:]
  -[IMAudioSessionController setOptions:]
  -[IMAudioSessionController isDirty]
  -[IMAudioSessionController deactivate]
  -[IMAudioSessionController activateWithOptions:completion:]
  -[IMAudioSessionController shouldUseSpeaker]
  -[IMAudioSessionController shouldStopPlayingWhenSilent]
  -[IMAudioSessionController shouldDuckOthers]
  -[IMAudioSessionController setActive:options:completion:]
  -[IMAudioSessionController configureAudioSessionWithOptions:]


IMAudioSessionController_iOS : IMAudioSessionController
  // instance methods
  -[IMAudioSessionController_iOS init]
  -[IMAudioSessionController_iOS dealloc]
  -[IMAudioSessionController_iOS setActive:]
  -[IMAudioSessionController_iOS audioSessionInterruption:]
  -[IMAudioSessionController_iOS audioSessionRouteChange:]
  -[IMAudioSessionController_iOS audioSessionMediaServicesWereLost:]
  -[IMAudioSessionController_iOS audioSessionMediaServicesWereReset:]
  -[IMAudioSessionController_iOS configureAudioSessionWithOptions:]


IMAudioPlayer : NSObject /usr/lib/libSystem.B.dylib <IMInternalAVAudioPlayerDelegate>
 @property  NSURL *audioURL
 @property  IMInternalAVAudioPlayer *audioPlayer
 @property  double prevCurrentTime
 @property  @? block
 @property  IMDisplayLink *displayLink
 @property  <IMAudioPlayerDelegate> *delegate
 @property  BOOL usesAVPlayer
 @property  BOOL playing
 @property  double currentTime
 @property  double duration
 @property  float volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IMAudioPlayer audioPlayerWithContentsOfURL:shouldUseAVPlayer:]
  +[IMAudioPlayer audioPlayerWithContentsOfURL:]

  // instance methods
  -[IMAudioPlayer dealloc]
  -[IMAudioPlayer delegate]
  -[IMAudioPlayer setDelegate:]
  -[IMAudioPlayer initWithContentsOfURL:]
  -[IMAudioPlayer .cxx_destruct]
  -[IMAudioPlayer pause]
  -[IMAudioPlayer stop]
  -[IMAudioPlayer block]
  -[IMAudioPlayer duration]
  -[IMAudioPlayer stopTimer]
  -[IMAudioPlayer setBlock:]
  -[IMAudioPlayer displayLink]
  -[IMAudioPlayer setDisplayLink:]
  -[IMAudioPlayer currentTime]
  -[IMAudioPlayer volume]
  -[IMAudioPlayer setVolume:]
  -[IMAudioPlayer isPlaying]
  -[IMAudioPlayer startTimer]
  -[IMAudioPlayer audioPlayer]
  -[IMAudioPlayer setAudioPlayer:]
  -[IMAudioPlayer prepareToPlay]
  -[IMAudioPlayer audioURL]
  -[IMAudioPlayer playAfterDelay:completion:]
  -[IMAudioPlayer internalAudioPlayerDidFinishPlaying:successfully:]
  -[IMAudioPlayer usesAVPlayer]
  -[IMAudioPlayer prevCurrentTime]
  -[IMAudioPlayer setPrevCurrentTime:]
  -[IMAudioPlayer setAudioURL:]
  -[IMAudioPlayer internalAVAudioPlayerDidPrepareAudioForPlaying:successfully:]
  -[IMAudioPlayer initWithContentsOfURL:shouldUseAVPlayer:]
  -[IMAudioPlayer timerDidExpire:]


NSString(IMSharedUIAdditions)
	// class methods
	+[NSString(IMSharedUIAdditions) im_maxBigmojiCount]

	// instance methods
	-[NSString(IMSharedUIAdditions) im_shouldDisplayAsBigmoji]

UIImage(IMSharedUICompatibility)
	// instance methods
	-[UIImage(IMSharedUICompatibility) layerContentsForLayer:]

NSValue(IMBalloonDescriptor_t)
	// class methods
	+[NSValue(IMBalloonDescriptor_t) valueWithBalloonDescriptor:]

	// instance methods
	-[NSValue(IMBalloonDescriptor_t) balloonDescriptor]

NSDate(IMSharedUIAdditions)
	// instance methods
	-[NSDate(IMSharedUIAdditions) _im_createDateFormatterForTimestampFormat:]
	-[NSDate(IMSharedUIAdditions) im_isDayDifferent:]
	-[NSDate(IMSharedUIAdditions) im_dateStringWithFormat:]

NSTextStorage(IMChatTranscriptSupport)
	// class methods
	+[NSTextStorage(IMChatTranscriptSupport) createLayoutTextStorage]
	+[NSTextStorage(IMChatTranscriptSupport) defaultLayoutTextStorage]

	// instance methods
	-[NSTextStorage(IMChatTranscriptSupport) sizeForAttributedString:maxWidth:]

AVAsset(IMAttachmentUtilities)
	// instance methods
	-[AVAsset(IMAttachmentUtilities) isQTAutoloopVideo]

01 00 0100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 0100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioPlayer 
01 00 0100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 0100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataItem 
01 00 0100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 0100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMatchMoveAnimation 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAReplicatorLayer 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransformLayer 
01 00 0400 /System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities: IMMetricsCollector 
01 00 0600 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMScheduledUpdater 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: NSLayoutManager 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextContainer 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextStorage 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0900 /System/Library/PrivateFrameworks/ResponseKit.framework/ResponseKit: RKMessageResponseManager 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
