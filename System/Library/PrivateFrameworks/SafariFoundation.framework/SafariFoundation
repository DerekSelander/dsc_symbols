|| __DATA.__data _SFAutoFillHelperErrorDomain
|| __DATA.__objc_data _OBJC_CLASS_$_SFAutoFillHelperProxy
|| __DATA.__objc_data _OBJC_CLASS_$_SFAutoFillOneTimeCode
|| __DATA.__objc_data _OBJC_CLASS_$_SFAutoFillOneTimeCodeEmbeddedDomainPair
|| __DATA.__objc_data _OBJC_CLASS_$_SFDomainAssociationUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_SFExternalCredentialIdentityStore
|| __DATA.__objc_data _OBJC_CLASS_$_SFExternalCredentialIdentityStoreManager
|| __DATA.__objc_data _OBJC_CLASS_$_SFSafariCredential
|| __DATA.__objc_data _OBJC_CLASS_$_SFSharablePassword
|| __DATA.__objc_data _OBJC_CLASS_$_SFSharablePasswordReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_SFStrongPasswordGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_SFSuggestedUser
|| __DATA.__objc_data _OBJC_CLASS_$_SFSuggestedUserProvider
|| __DATA.__objc_data _OBJC_CLASS_$_TOTPGeneratorSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$__SFSharablePasswordEncryptionInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_SFAutoFillHelperProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_SFAutoFillOneTimeCode
|| __DATA.__objc_data _OBJC_METACLASS_$_SFAutoFillOneTimeCodeEmbeddedDomainPair
|| __DATA.__objc_data _OBJC_METACLASS_$_SFDomainAssociationUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_SFExternalCredentialIdentityStore
|| __DATA.__objc_data _OBJC_METACLASS_$_SFExternalCredentialIdentityStoreManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SFSafariCredential
|| __DATA.__objc_data _OBJC_METACLASS_$_SFSharablePassword
|| __DATA.__objc_data _OBJC_METACLASS_$_SFSharablePasswordReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_SFStrongPasswordGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_SFSuggestedUser
|| __DATA.__objc_data _OBJC_METACLASS_$_SFSuggestedUserProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_TOTPGeneratorSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSharablePasswordEncryptionInformation
|| __DATA_CONST.__const _SFAccountModificationExtensionPointIdentifier
|| __DATA_CONST.__const _SFAccountModificationExtensionSupportsStrongPasswordChange
|| __DATA_CONST.__const _SFAccountModificationExtensionSupportsUpgradeToSignInWithApple
|| __DATA_CONST.__const _SFAccountModificationOptOutOfSecurityPromptsOnSignIn
|| __DATA_CONST.__const _SFAccountModificationPasswordGenerationRequirements
|| __DATA_CONST.__const _SFAccountModificationSystemEntitlement
|| __DATA_CONST.__const _SFAutoFillFromAddressBookPreferenceKey
|| __DATA_CONST.__const _SFCredentialProviderDeveloperEntitlement
|| __DATA_CONST.__const _SFCredentialProviderExtensionPointIdentifier
|| __DATA_CONST.__const _SFCredentialProviderShowsConfigurationUIKey
|| __DATA_CONST.__const _SFCredentialProviderSystemEntitlement
|| __DATA_CONST.__const _SFExternalCredentialIdentityStoreErrorDomain
|| __DATA_CONST.__const _SFSharablePasswordURLSchemeForAirDrop
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFAppAutoFillOneTimeCodeProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFAutoFillFeatureManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFCredentialProviderExtensionHelperProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFCredentialProviderExtensionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFCredentialProviderExtensionState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFPasswordCredentialIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFSafariCredentialStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFSharedWebCredentialsDatabaseEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFAppAutoFillOneTimeCodeProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFAutoFillFeatureManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFCredentialProviderExtensionHelperProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFCredentialProviderExtensionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFCredentialProviderExtensionState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFPasswordCredentialIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFSafariCredentialStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFSharedWebCredentialsDatabaseEntry
|| __TEXT.__const _SFPasswordCredentialIdentityInvalidRowIdentifier
|| __TEXT.__const _SFPasswordGenerationNoLengthLimit
|| __TEXT.__const _maximumNumberOfWebCredentialEntriesToReturnForAppID
|| __TEXT.__text _SFCredentialIdentityStoreIdentifierCreateWithApplicationBundleIdentifier
|| __TEXT.__text _SFCredentialIdentityStoreIdentifierCreateWithConnectionToExtension
|| __TEXT.__text _SFCredentialIdentityStoreIdentifierGetApplicationBundleIdentifier
__ AppSupport: _CPCopySharedResourcesPreferencesDomainForDomain
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSExtensionPointName
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLProtectionSpace
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ ManagedConfiguration: _MCFeaturePasswordAutoFillAllowed
__ ManagedConfiguration: _MCFeatureSafariAutoFillAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ PlugInKit: _OBJC_CLASS_$_PKManager
__ PlugInKit: _PKUserElectionAttribute
__ SafariCore: _OBJC_CLASS_$_WBSAutoFillQuirksManager
__ SafariCore: _OBJC_CLASS_$_WBSPasswordGenerationManager
__ SafariCore: _OBJC_CLASS_$_WBSPasswordManagerURL
__ SafariCore: _OBJC_CLASS_$_WBSPasswordRuleParser
__ SafariCore: _OBJC_CLASS_$_WBSSQLiteStatement
__ SafariCore: _OBJC_CLASS_$_WBSSQLiteStatementCache
__ SafariCore: _OBJC_CLASS_$_WBSSQLiteStore
__ SafariCore: _OBJC_CLASS_$_WBSSavedAccountStore
__ SafariCore: _OBJC_CLASS_$_WBSTOTPGenerator
__ SafariCore: _OBJC_METACLASS_$_WBSSQLiteStore
__ SafariCore: _WBSApplicationIdentifierFromAuditToken
__ SafariCore: _WBSAuditTokenHasEntitlement
__ SafariCore: _WBSIsEqual
__ SafariCore: _WBSPasswordManagerURLAllowKey
__ SafariCore: _WBSPasswordManagerURLAllowShowingPasswordDetailIfLocalAuthenticationNotConfiguredKey
__ SafariCore: _WBSPasswordManagerURLEncryptedPasswordDataKey
__ SafariCore: _WBSPasswordManagerURLEncryptionKeyReferenceKey
__ SafariCore: _WBSSavedAccountStoreDidChangeNotification
__ SafariCore: __WBSLocalizedString
__ Security: _SecItemCopyMatching
__ Security: _SecKeyCopyPublicKey
__ Security: _SecKeyCreateDecryptedData
__ Security: _SecKeyCreateEncryptedData
__ Security: _SecKeyCreateRandomKey
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrApplicationTag
__ Security: _kSecAttrEndDate
__ Security: _kSecAttrIsPermanent
__ Security: _kSecAttrKeySizeInBits
__ Security: _kSecAttrKeyType
__ Security: _kSecAttrKeyTypeRSA
__ Security: _kSecAttrSynchronizable
__ Security: _kSecClass
__ Security: _kSecClassKey
__ Security: _kSecKeyAlgorithmRSAEncryptionOAEPSHA1AESGCM
__ Security: _kSecPrivateKeyAttrs
__ Security: _kSecReturnPersistentRef
__ Security: _kSecReturnRef
__ Security: _kSecUseDataProtectionKeychain
__ Security: _kSecValuePersistentRef
__ SharedWebCredentials: _OBJC_CLASS_$__SWCServiceDetails
__ SharedWebCredentials: _OBJC_CLASS_$__SWCServiceSpecifier
__ SharedWebCredentials: __SWCServiceTypeActivityContinuation
__ SharedWebCredentials: __SWCServiceTypeAppClips
__ SharedWebCredentials: __SWCServiceTypeAppLinks
__ SharedWebCredentials: __SWCServiceTypeAuthServices
__ SharedWebCredentials: __SWCServiceTypeMessageFiltering
__ SharedWebCredentials: __SWCServiceTypeSpamReporting
__ SharedWebCredentials: __SWCServiceTypeWebCredentials
__ SoftLinking: __sl_dlopen
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_unfair_recursive_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_recursive_lock_unlock
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libsqlite3.dylib: _sqlite3_bind_pointer
__ libsqlite3.dylib: _sqlite3_create_function_v2
__ libsqlite3.dylib: _sqlite3_result_int
__ libsqlite3.dylib: _sqlite3_value_int64
__ libsqlite3.dylib: _sqlite3_value_pointer
__ libsqlite3.dylib: _sqlite3_value_text
SFCredentialProviderExtensionHelperProxy : NSObject <SFCredentialProviderExtensionHelperProtocol>
  // instance methods
  -[SFCredentialProviderExtensionHelperProxy .cxx_destruct]
  -[SFCredentialProviderExtensionHelperProxy init]
  -[SFCredentialProviderExtensionHelperProxy dealloc]
  -[SFCredentialProviderExtensionHelperProxy invalidate]
  -[SFCredentialProviderExtensionHelperProxy _proxyObject]
  -[SFCredentialProviderExtensionHelperProxy fetchCredentialIdentitiesMatchingDomains:completion:]
  -[SFCredentialProviderExtensionHelperProxy getCredentialProviderExtensionStateWithCompletion:]
  -[SFCredentialProviderExtensionHelperProxy saveCredentialIdentities:completion:]
  -[SFCredentialProviderExtensionHelperProxy removeCredentialIdentities:completion:]
  -[SFCredentialProviderExtensionHelperProxy removeAllCredentialIdentitiesWithCompletion:]
  -[SFCredentialProviderExtensionHelperProxy replaceCredentialIdentitiesWithIdentities:completion:]
  -[SFCredentialProviderExtensionHelperProxy removeCredentialIdentityStoreForApplication:completion:]


SFSafariCredential : NSObject <NSSecureCoding>
 @property  <SFSafariPasswordCredential> *externalCredential
 @property  NSString *user
 @property  NSString *password
 @property  NSString *site
 @property  NSDate *creationDate
 @property  BOOL external

  // class methods
  +[SFSafariCredential supportsSecureCoding]

  // instance methods
  -[SFSafariCredential isExternal]
  -[SFSafariCredential site]
  -[SFSafariCredential initWithCoder:]
  -[SFSafariCredential password]
  -[SFSafariCredential .cxx_destruct]
  -[SFSafariCredential user]
  -[SFSafariCredential isEqual:]
  -[SFSafariCredential creationDate]
  -[SFSafariCredential encodeWithCoder:]
  -[SFSafariCredential externalCredential]
  -[SFSafariCredential initWithUser:password:site:creationDate:]
  -[SFSafariCredential initWithExternalCredential:]


SFExternalCredentialIdentityStore : WBSSQLiteStore
  // instance methods
  -[SFExternalCredentialIdentityStore _vacuum]
  -[SFExternalCredentialIdentityStore .cxx_destruct]
  -[SFExternalCredentialIdentityStore _currentSchemaVersion]
  -[SFExternalCredentialIdentityStore _createFreshDatabaseSchema]
  -[SFExternalCredentialIdentityStore initWithURL:]
  -[SFExternalCredentialIdentityStore initWithURL:protectionType:]
  -[SFExternalCredentialIdentityStore _databaseWillClose]
  -[SFExternalCredentialIdentityStore openAndCheckIntegrity:createIfNeeded:fallBackToMemoryStoreIfError:lockingPolicy:completionHandler:]
  -[SFExternalCredentialIdentityStore fetchCredentialIdentitiesMatchingDomains:completion:]
  -[SFExternalCredentialIdentityStore saveCredentialIdentities:completion:]
  -[SFExternalCredentialIdentityStore removeCredentialIdentities:completion:]
  -[SFExternalCredentialIdentityStore removeAllCredentialIdentitiesWithCompletion:]
  -[SFExternalCredentialIdentityStore replaceCredentialIdentitiesWithIdentities:completion:]
  -[SFExternalCredentialIdentityStore _saveCredentialIdentities:]
  -[SFExternalCredentialIdentityStore _removeAllCredentialIdentities]
  -[SFExternalCredentialIdentityStore _removeCredentialIdentities:]
  -[SFExternalCredentialIdentityStore _removeCredentialIdentity:]
  -[SFExternalCredentialIdentityStore _updateCredentialIdentity:]
  -[SFExternalCredentialIdentityStore _insertCredentialIdentity:]
  -[SFExternalCredentialIdentityStore _fetchCredentialIdentities]
  -[SFExternalCredentialIdentityStore _fetchCredentialIdentitiesMatchingDomains:]
  -[SFExternalCredentialIdentityStore _credentialIdentityFromRow:]
  -[SFExternalCredentialIdentityStore _fetchStoreIsEmpty]
  -[SFExternalCredentialIdentityStore fetchCredentialIdentitiesWithCompletion:]
  -[SFExternalCredentialIdentityStore fetchStoreEmptyStateWithCompletion:]


SFAutoFillHelperProxy : NSObject <SFAutoFillHelperProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFAutoFillHelperProxy .cxx_destruct]
  -[SFAutoFillHelperProxy init]
  -[SFAutoFillHelperProxy dealloc]
  -[SFAutoFillHelperProxy invalidate]
  -[SFAutoFillHelperProxy getAutomaticStrongPasswordForAppWithPasswordRules:confirmPasswordRules:completion:]
  -[SFAutoFillHelperProxy getRemoteAutoFillAvailabilityWithCompletionHandler:]


SFDomainAssociationUtilities : NSObject
  // class methods
  +[SFDomainAssociationUtilities domainByStrippingSubdomainWildcardPrefixIfNecessary:]
  +[SFDomainAssociationUtilities domainIsProhibitedForSavingCredentials:]
  +[SFDomainAssociationUtilities highLevelDomainHasSuiteOfAssociatedApps:]


SFSafariCredentialStore : NSObject
  // class methods
  +[SFSafariCredentialStore bestDomainForAutoFillFromDomains:appID:]
  +[SFSafariCredentialStore bestDomainForAppID:completionHandler:]
  +[SFSafariCredentialStore titleForPasswordCredentialIdentity:formURL:]
  +[SFSafariCredentialStore getCredentialsForAppWithAppID:externallyVerifiedAndApprovedSharedWebCredentialDomains:websiteURL:completionHandler:]
  +[SFSafariCredentialStore getAllApprovedSharedWebCredentialsEntries:]
  +[SFSafariCredentialStore getAllowedActionForAppCredentialsWithAppID:websiteURL:user:password:completionHandler:]
  +[SFSafariCredentialStore _approvedSharedWebCredentialsDatabaseEntriesForAppWithAppID:completionHandler:]
  +[SFSafariCredentialStore isAppAutoFillAvailable]
  +[SFSafariCredentialStore getCredentialsForAppWithAppID:websiteURL:completionHandler:]
  +[SFSafariCredentialStore _getCredentialsForAppWithApprovedAndValidSharedWebCredentialsDatabaseEntries:websiteURL:completionHandler:]
  +[SFSafariCredentialStore _approvedAndValidSharedWebCredentialsDatabaseEntriesForAppWithAppID:completionHandler:]
  +[SFSafariCredentialStore _getExternalCredentialsMatchingSharedWebCredentialsDatabaseEntries:websiteURL:completion:]
  +[SFSafariCredentialStore _credentialsMatchingSharedWebCredentialsDatabaseEntries:websiteURL:savedAccounts:]
  +[SFSafariCredentialStore _highLevelDomainsFromDatabaseEntries:]
  +[SFSafariCredentialStore _savedAccount:isRelatedToEntryHighLevelDomains:andWebsiteURL:]
  +[SFSafariCredentialStore _sortCredentials:usingApprovedSharedWebCredentialsDatabaseEntries:]
  +[SFSafariCredentialStore _getAllowedActionForAppCredentialsWithAppID:websiteURL:user:password:shouldAnalyzeExistingCredentials:completionHandler:]
  +[SFSafariCredentialStore _getBundleIDForPrimaryCredentialProviderWithCompletionHandler:]
  +[SFSafariCredentialStore _bestDomainFromApprovedDomainsForWebCredentials:appLinks:otherServices:appID:allDomains:]
  +[SFSafariCredentialStore getApprovedSharedWebCredentialsEntriesForAppWithAppID:completionHandler:]
  +[SFSafariCredentialStore _sharedWebCredentialsDatabaseEntriesForAppWithAppID:completionHandler:]
  +[SFSafariCredentialStore _credentialProviderExtensionHelperProxy]
  +[SFSafariCredentialStore isRemoteAutoFillAvailable]
  +[SFSafariCredentialStore getCredentialsForAppWithAppID:completionHandler:]
  +[SFSafariCredentialStore getCredentialsForAppWithAppID:externallyVerifiedAndApprovedSharedWebCredentialDomains:completionHandler:]
  +[SFSafariCredentialStore getAllCredentialsWithCompletionHandler:]
  +[SFSafariCredentialStore getCanSaveCredentialsWithAppID:websiteURL:completionHandler:]
  +[SFSafariCredentialStore getApprovedSharedWebCredentialsEntriesSortedByHighestValueForAppWithAppID:completionHandler:]
  +[SFSafariCredentialStore textSuggestionHeaderForExternalCredential:]


SFStrongPasswordGenerator : NSObject
  // instance methods
  -[SFStrongPasswordGenerator .cxx_destruct]
  -[SFStrongPasswordGenerator init]
  -[SFStrongPasswordGenerator generatedPasswordForAppWithAppID:associatedDomains:passwordRules:confirmPasswordRules:]


SFPasswordCredentialIdentity : NSObject <SFSafariPasswordCredential, NSSecureCoding, NSCopying>
 @property  long long rowIdentifier
 @property  SFCredentialProviderExtensionState *owningExtensionState
 @property  long long serviceIdentifierType
 @property  NSString *serviceIdentifier
 @property  NSString *externalRecordIdentifier
 @property  NSString *user
 @property  long long rank
 @property  NSString *site
 @property  NSString *password
 @property  NSDate *creationDate
 @property  BOOL external
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFPasswordCredentialIdentity supportsSecureCoding]

  // instance methods
  -[SFPasswordCredentialIdentity isExternal]
  -[SFPasswordCredentialIdentity site]
  -[SFPasswordCredentialIdentity initWithCoder:]
  -[SFPasswordCredentialIdentity rank]
  -[SFPasswordCredentialIdentity serviceIdentifier]
  -[SFPasswordCredentialIdentity password]
  -[SFPasswordCredentialIdentity .cxx_destruct]
  -[SFPasswordCredentialIdentity user]
  -[SFPasswordCredentialIdentity init]
  -[SFPasswordCredentialIdentity isEqual:]
  -[SFPasswordCredentialIdentity creationDate]
  -[SFPasswordCredentialIdentity copyWithZone:]
  -[SFPasswordCredentialIdentity encodeWithCoder:]
  -[SFPasswordCredentialIdentity owningExtensionState]
  -[SFPasswordCredentialIdentity setOwningExtensionState:]
  -[SFPasswordCredentialIdentity compareForQuickTypeBar:]
  -[SFPasswordCredentialIdentity serviceIdentifierType]
  -[SFPasswordCredentialIdentity externalRecordIdentifier]
  -[SFPasswordCredentialIdentity rowIdentifier]
  -[SFPasswordCredentialIdentity setRowIdentifier:]
  -[SFPasswordCredentialIdentity initWithRowIdentifier:serviceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:]
  -[SFPasswordCredentialIdentity initWithRowIdentifier:serviceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:owningExtensionState:]
  -[SFPasswordCredentialIdentity _domainWithoutWWWDot]
  -[SFPasswordCredentialIdentity initWithServiceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:]


SFCredentialProviderExtensionState : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL enabled
 @property  BOOL supportsIncrementalUpdates
 @property  NSString *localizedDisplayName
 @property  SFExternalCredentialIdentityStoreIdentifier *credentialIdentityStoreIdentifier

  // class methods
  +[SFCredentialProviderExtensionState supportsSecureCoding]
  +[SFCredentialProviderExtensionState credentialProviderExtensionWithDisabledState]

  // instance methods
  -[SFCredentialProviderExtensionState initWithCoder:]
  -[SFCredentialProviderExtensionState localizedDisplayName]
  -[SFCredentialProviderExtensionState .cxx_destruct]
  -[SFCredentialProviderExtensionState isEnabled]
  -[SFCredentialProviderExtensionState copyWithZone:]
  -[SFCredentialProviderExtensionState encodeWithCoder:]
  -[SFCredentialProviderExtensionState initWithEnabledState:supportsIncrementalUpdates:]
  -[SFCredentialProviderExtensionState initWithEnabledState:supportsIncrementalUpdates:localizedDisplayName:credentialIdentityStoreIdentifier:]
  -[SFCredentialProviderExtensionState supportsIncrementalUpdates]
  -[SFCredentialProviderExtensionState credentialIdentityStoreIdentifier]


SFSharedWebCredentialsDatabaseEntry : NSObject
 @property  NSString *domain
 @property  NSString *appID
 @property  long long service
 @property  BOOL approved

  // instance methods
  -[SFSharedWebCredentialsDatabaseEntry isApproved]
  -[SFSharedWebCredentialsDatabaseEntry appID]
  -[SFSharedWebCredentialsDatabaseEntry .cxx_destruct]
  -[SFSharedWebCredentialsDatabaseEntry domain]
  -[SFSharedWebCredentialsDatabaseEntry service]
  -[SFSharedWebCredentialsDatabaseEntry _initWithDomain:appID:service:isApproved:]
  -[SFSharedWebCredentialsDatabaseEntry initWithServiceDetails:]


SFExternalCredentialIdentityStoreManager : NSObject
  // class methods
  +[SFExternalCredentialIdentityStoreManager sharedManager]

  // instance methods
  -[SFExternalCredentialIdentityStoreManager .cxx_destruct]
  -[SFExternalCredentialIdentityStoreManager init]
  -[SFExternalCredentialIdentityStoreManager _credentialIdentityStoreWithIdentifier:]
  -[SFExternalCredentialIdentityStoreManager getCredentialIdentityStoreWithIdentifier:completion:]
  -[SFExternalCredentialIdentityStoreManager removeCredentialIdentityStoreWithIdentifier:completion:]


SFSharablePasswordReceiver : NSObject
  // class methods
  +[SFSharablePasswordReceiver passwordHasRequiredDataToSave:]
  +[SFSharablePasswordReceiver canSavePasswordWithoutConflict:]
  +[SFSharablePasswordReceiver savePassword:]


SFAutoFillFeatureManager : NSObject <MCProfileConnectionObserver>
 @property  BOOL shouldAutoFillPasswordsFromKeychain
 @property  NSString *preferredCredentialProviderForSaving
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFAutoFillFeatureManager _syncManager]
  +[SFAutoFillFeatureManager sharedFeatureManager]
  +[SFAutoFillFeatureManager autoFillPreferencesDomain]
  +[SFAutoFillFeatureManager defaultValueForPasswordAndCreditCardAutoFill]
  +[SFAutoFillFeatureManager autoFillPreferencesDidChange]

  // instance methods
  -[SFAutoFillFeatureManager profileConnectionDidReceiveRestrictionChangedNotification:userInfo:]
  -[SFAutoFillFeatureManager init]
  -[SFAutoFillFeatureManager profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
  -[SFAutoFillFeatureManager dealloc]
  -[SFAutoFillFeatureManager shouldAutoFillPasswords]
  -[SFAutoFillFeatureManager shouldAutoFillPasswordsFromKeychain]
  -[SFAutoFillFeatureManager setShouldAutoFillPasswordsFromKeychain:]
  -[SFAutoFillFeatureManager _refreshCachedAutoFillRestrictionValues]


SFAutoFillOneTimeCodeEmbeddedDomainPair : NSObject <NSSecureCoding>
 @property  NSString *domain
 @property  BOOL strict

  // class methods
  +[SFAutoFillOneTimeCodeEmbeddedDomainPair supportsSecureCoding]

  // instance methods
  -[SFAutoFillOneTimeCodeEmbeddedDomainPair initWithCoder:]
  -[SFAutoFillOneTimeCodeEmbeddedDomainPair setDomain:]
  -[SFAutoFillOneTimeCodeEmbeddedDomainPair .cxx_destruct]
  -[SFAutoFillOneTimeCodeEmbeddedDomainPair strict]
  -[SFAutoFillOneTimeCodeEmbeddedDomainPair domain]
  -[SFAutoFillOneTimeCodeEmbeddedDomainPair isEqual:]
  -[SFAutoFillOneTimeCodeEmbeddedDomainPair encodeWithCoder:]
  -[SFAutoFillOneTimeCodeEmbeddedDomainPair setStrict:]


SFAutoFillOneTimeCode : NSObject <NSSecureCoding>
 @property  NSURL *_domainBoundTopLevelURL
 @property  NSURL *_domainBoundEmbeddedURL
 @property  WBSTOTPGenerator *totpGenerator
 @property  long long source
 @property  NSString *detectedCode
 @property  NSString *machineReadableCode
 @property  NSString *code
 @property  NSString *displayCode
 @property  NSString *GUID
 @property  NSString *handle
 @property  NSString *user
 @property  NSString *domain
 @property  BOOL domainStrictMatch
 @property  NSString *embeddedDomain
 @property  NSArray *embeddedDomains
 @property  NSDate *timestamp

  // class methods
  +[SFAutoFillOneTimeCode supportsSecureCoding]

  // instance methods
  -[SFAutoFillOneTimeCode GUID]
  -[SFAutoFillOneTimeCode initWithCoder:]
  -[SFAutoFillOneTimeCode .cxx_destruct]
  -[SFAutoFillOneTimeCode code]
  -[SFAutoFillOneTimeCode user]
  -[SFAutoFillOneTimeCode domain]
  -[SFAutoFillOneTimeCode isEqual:]
  -[SFAutoFillOneTimeCode handle]
  -[SFAutoFillOneTimeCode timestamp]
  -[SFAutoFillOneTimeCode source]
  -[SFAutoFillOneTimeCode encodeWithCoder:]
  -[SFAutoFillOneTimeCode totpGenerator]
  -[SFAutoFillOneTimeCode localizedTitleForContext:]
  -[SFAutoFillOneTimeCode localizedSubtitleForContext:]
  -[SFAutoFillOneTimeCode _embeddedDomainArrayFromIMCoreEmbeddedDomains:]
  -[SFAutoFillOneTimeCode _stringForSource:]
  -[SFAutoFillOneTimeCode _domainBoundTopLevelURL]
  -[SFAutoFillOneTimeCode _matchURL:withBoundDomainURL:strict:]
  -[SFAutoFillOneTimeCode _matchBoundDomainAndEmbeddedDomainsWithFrameURLs:]
  -[SFAutoFillOneTimeCode _matchBoundDomainAndEmbeddedDomainWithFrameURLs:]
  -[SFAutoFillOneTimeCode _domainBoundEmbeddedURL]
  -[SFAutoFillOneTimeCode _secureURLForDomain:]
  -[SFAutoFillOneTimeCode initWithIMCoreDictionary:]
  -[SFAutoFillOneTimeCode initWithTOTPGenerator:user:highLevelDomain:]
  -[SFAutoFillOneTimeCode detectedCode]
  -[SFAutoFillOneTimeCode matchDomainWithURL:]
  -[SFAutoFillOneTimeCode matchBoundDomainsWithFrameURLs:]
  -[SFAutoFillOneTimeCode machineReadableCode]
  -[SFAutoFillOneTimeCode displayCode]
  -[SFAutoFillOneTimeCode domainStrictMatch]
  -[SFAutoFillOneTimeCode embeddedDomain]
  -[SFAutoFillOneTimeCode embeddedDomains]


SFSuggestedUserProvider : NSObject
  // class methods
  +[SFSuggestedUserProvider sharedProvider]

  // instance methods
  -[SFSuggestedUserProvider .cxx_destruct]
  -[SFSuggestedUserProvider init]
  -[SFSuggestedUserProvider _accountStoreChangedNotification:]
  -[SFSuggestedUserProvider suggestedUsersOfType:matchingText:completionHandler:]
  -[SFSuggestedUserProvider _allCachedSuggestedUsersWithType:]
  -[SFSuggestedUserProvider _cachedSuggestedUsersWithType:matchingText:]
  -[SFSuggestedUserProvider _getSuggestedUsersFromSavedAccounts:suggestedEmails:suggestedNonEmails:]
  -[SFSuggestedUserProvider suggestedUsersOfType:completionHandler:]


SFCredentialProviderExtensionManager : NSObject
 @property  NSSet *extensions
 @property  NSSet *extensionsSync
 @property  NSExtension *primaryExtension
 @property  NSExtension *primaryExtensionSync

  // class methods
  +[SFCredentialProviderExtensionManager sharedManager]

  // instance methods
  -[SFCredentialProviderExtensionManager _endExtensionDiscovery]
  -[SFCredentialProviderExtensionManager _updateExtensions:]
  -[SFCredentialProviderExtensionManager setExtension:isEnabled:]
  -[SFCredentialProviderExtensionManager .cxx_destruct]
  -[SFCredentialProviderExtensionManager _beginExtensionDiscovery]
  -[SFCredentialProviderExtensionManager _notifyObservers:]
  -[SFCredentialProviderExtensionManager displayNameForExtension:]
  -[SFCredentialProviderExtensionManager _extensions]
  -[SFCredentialProviderExtensionManager shouldShowConfigurationUIForEnablingExtension:]
  -[SFCredentialProviderExtensionManager init]
  -[SFCredentialProviderExtensionManager primaryExtensionSync]
  -[SFCredentialProviderExtensionManager addObserver:]
  -[SFCredentialProviderExtensionManager extensions]
  -[SFCredentialProviderExtensionManager extensionIsEnabled:]
  -[SFCredentialProviderExtensionManager extensionsSync]
  -[SFCredentialProviderExtensionManager dealloc]
  -[SFCredentialProviderExtensionManager removeObserver:]
  -[SFCredentialProviderExtensionManager getPrimaryExtensionWithCompletion:]
  -[SFCredentialProviderExtensionManager primaryExtension]


SFSuggestedUser : NSObject <NSCopying, NSSecureCoding>
 @property  long long usageFrequency
 @property  NSString *value
 @property  long long type

  // class methods
  +[SFSuggestedUser supportsSecureCoding]
  +[SFSuggestedUser suggestedUserWithValue:type:]

  // instance methods
  -[SFSuggestedUser initWithCoder:]
  -[SFSuggestedUser .cxx_destruct]
  -[SFSuggestedUser initWithValue:type:]
  -[SFSuggestedUser init]
  -[SFSuggestedUser isEqual:]
  -[SFSuggestedUser compare:]
  -[SFSuggestedUser value]
  -[SFSuggestedUser type]
  -[SFSuggestedUser copyWithZone:]
  -[SFSuggestedUser encodeWithCoder:]
  -[SFSuggestedUser usageFrequency]
  -[SFSuggestedUser setUsageFrequency:]


TOTPGeneratorSnapshot : NSObject
 @property  NSDate *startDateOfInterval
 @property  SFAutoFillOneTimeCode *oneTimeCode

  // instance methods
  -[TOTPGeneratorSnapshot .cxx_destruct]
  -[TOTPGeneratorSnapshot oneTimeCode]
  -[TOTPGeneratorSnapshot startDateOfInterval]
  -[TOTPGeneratorSnapshot setStartDateOfInterval:]
  -[TOTPGeneratorSnapshot setOneTimeCode:]


SFAppAutoFillOneTimeCodeProvider : NSObject
 @property  <SFAppAutoFillOneTimeCodeProviderDelegate> *delegate
 @property  BOOL hasOneTimeCode

  // instance methods
  -[SFAppAutoFillOneTimeCodeProvider _appWithAuditTokenIsWebBrowser:]
  -[SFAppAutoFillOneTimeCodeProvider consumeCurrentOneTimeCode]
  -[SFAppAutoFillOneTimeCodeProvider removeObserverForOneTimeCode:]
  -[SFAppAutoFillOneTimeCodeProvider .cxx_destruct]
  -[SFAppAutoFillOneTimeCodeProvider currentOneTimeCodesWithAuditToken:website:usernameHint:fieldClassification:]
  -[SFAppAutoFillOneTimeCodeProvider currentOneTimeCodesForWebBrowserWithWebsiteFrameURLs:fieldClassification:]
  -[SFAppAutoFillOneTimeCodeProvider _validateCurrentOneTimeCode]
  -[SFAppAutoFillOneTimeCodeProvider setDelegate:]
  -[SFAppAutoFillOneTimeCodeProvider _validateURL:withURLFromOriginBoundCode:]
  -[SFAppAutoFillOneTimeCodeProvider init]
  -[SFAppAutoFillOneTimeCodeProvider _processOneTimeCodeFromMessages:]
  -[SFAppAutoFillOneTimeCodeProvider currentOneTimeCodeWithAuditToken:website:]
  -[SFAppAutoFillOneTimeCodeProvider addObserver:]
  -[SFAppAutoFillOneTimeCodeProvider consumeOneTimeCode:]
  -[SFAppAutoFillOneTimeCodeProvider hasOneTimeCodeForAppWithAuditToken:]
  -[SFAppAutoFillOneTimeCodeProvider _sortedOneTimeCodesFromSavedAccounts:]
  -[SFAppAutoFillOneTimeCodeProvider delegate]
  -[SFAppAutoFillOneTimeCodeProvider _stopGeneratorTimer]
  -[SFAppAutoFillOneTimeCodeProvider addObserver:forOneTimeCode:]
  -[SFAppAutoFillOneTimeCodeProvider _savedAccountsForURL:]
  -[SFAppAutoFillOneTimeCodeProvider removeObserver:]
  -[SFAppAutoFillOneTimeCodeProvider _associatedDomainEntriesForAppWithIdentifier:]
  -[SFAppAutoFillOneTimeCodeProvider _secureURLWithDomain:]
  -[SFAppAutoFillOneTimeCodeProvider _startGeneratorTimer]
  -[SFAppAutoFillOneTimeCodeProvider hasOneTimeCode]


_SFSharablePasswordEncryptionInformation : NSObject
 @property  NSData *encryptedPasswordData
 @property  NSData *encryptionKeyReference

  // instance methods
  -[_SFSharablePasswordEncryptionInformation .cxx_destruct]
  -[_SFSharablePasswordEncryptionInformation initWithEncryptedPasswordData:encryptionKeyReference:]
  -[_SFSharablePasswordEncryptionInformation encryptedPasswordData]
  -[_SFSharablePasswordEncryptionInformation encryptionKeyReference]


SFSharablePassword : NSObject <NSSecureCoding>
 @property  NSString *username
 @property  NSString *password
 @property  NSString *displayName
 @property  NSString *highLevelDomain
 @property  NSURL *otpAuthURL
 @property  NSString *notesEntry
 @property  NSArray *protectionSpaces
 @property  NSURL *passwordManagerURL

  // class methods
  +[SFSharablePassword supportsSecureCoding]
  +[SFSharablePassword sharablePasswordFromData:]
  +[SFSharablePassword sharablePasswordFromURL:]
  +[SFSharablePassword sharablePasswordFromEncryptedData:encryptionKeyReference:]
  +[SFSharablePassword _decryptedDataForEncryptedData:encryptionKeyReference:]

  // instance methods
  -[SFSharablePassword displayName]
  -[SFSharablePassword initWithCoder:]
  -[SFSharablePassword password]
  -[SFSharablePassword .cxx_destruct]
  -[SFSharablePassword username]
  -[SFSharablePassword isEqual:]
  -[SFSharablePassword encodeWithCoder:]
  -[SFSharablePassword highLevelDomain]
  -[SFSharablePassword notesEntry]
  -[SFSharablePassword protectionSpaces]
  -[SFSharablePassword otpAuthURL]
  -[SFSharablePassword initWithSavedPassword:]
  -[SFSharablePassword urlRepresentationForAirDrop]
  -[SFSharablePassword initWithUsername:password:displayName:highLevelDomain:protectionSpaces:]
  -[SFSharablePassword _encryptionInformationWithNewKey]
  -[SFSharablePassword passwordManagerURL]


NSExtension(SafariFoundationExtras)
	// instance methods
	-[NSExtension(SafariFoundationExtras) sf_bundleIdentifierForContainingApp]
	-[NSExtension(SafariFoundationExtras) _sf_addHandlerForRequestIdentifier:withBlock:]

01 00 0100 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0600 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLProtectionSpace 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0200 /System/Library/PrivateFrameworks/PlugInKit.framework/PlugInKit: PKManager 
01 00 0800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSAutoFillQuirksManager 
01 00 0800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSPasswordGenerationManager 
01 00 0800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSPasswordManagerURL 
01 00 0800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSPasswordRuleParser 
01 00 0800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSQLiteStatement 
01 00 0800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSQLiteStatementCache 
01 00 0800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSQLiteStore 
01 00 0800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSavedAccountStore 
01 00 0800 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSTOTPGenerator 
01 00 0400 /System/Library/PrivateFrameworks/SharedWebCredentials.framework/SharedWebCredentials: _SWCServiceDetails 
01 00 0400 /System/Library/PrivateFrameworks/SharedWebCredentials.framework/SharedWebCredentials: _SWCServiceSpecifier 
