|| __DATA.__objc_data _OBJC_CLASS_$_EXEnumerator
|| __DATA.__objc_data _OBJC_CLASS_$_EXFrameworkScanner
|| __DATA.__objc_data _OBJC_CLASS_$_EXUIKit_Subsystem
|| __DATA.__objc_data _OBJC_CLASS_$__EXExtension
|| __DATA.__objc_data _OBJC_CLASS_$__EXExtensionProcess
|| __DATA.__objc_data _OBJC_CLASS_$__EXExtensionRep
|| __DATA.__objc_data _OBJC_CLASS_$__EXQuery
|| __DATA.__objc_data _OBJC_CLASS_$__EXQueryObserver
|| __DATA.__objc_data _OBJC_CLASS_$__EXRunningExtension
|| __DATA.__objc_data _OBJC_CLASS_$__EXService
|| __DATA.__objc_data _OBJC_CLASS_$__EXServiceClient
|| __DATA.__objc_data _OBJC_METACLASS_$_EXEnumerator
|| __DATA.__objc_data _OBJC_METACLASS_$_EXFrameworkScanner
|| __DATA.__objc_data _OBJC_METACLASS_$_EXUIKit_Subsystem
|| __DATA.__objc_data _OBJC_METACLASS_$__EXExtension
|| __DATA.__objc_data _OBJC_METACLASS_$__EXExtensionProcess
|| __DATA.__objc_data _OBJC_METACLASS_$__EXExtensionRep
|| __DATA.__objc_data _OBJC_METACLASS_$__EXQuery
|| __DATA.__objc_data _OBJC_METACLASS_$__EXQueryObserver
|| __DATA.__objc_data _OBJC_METACLASS_$__EXRunningExtension
|| __DATA.__objc_data _OBJC_METACLASS_$__EXService
|| __DATA.__objc_data _OBJC_METACLASS_$__EXServiceClient
|| __DATA_CONST.__const _EXExtensionKitErrorDomain
|| __DATA_CONST.__const __kEXCatalystSDKVariantKey
|| __DATA_CONST.__const __kEXConcreteExtensionKey
|| __DATA_CONST.__const _kEXInternalSubserviceName
|| __DATA_CONST.__const _kExtensionKitErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EXConcreteExtension
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EXSwiftUI_Subsystem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EXDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EXConcreteExtension
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EXSwiftUI_Subsystem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EXDefaults
|| __TEXT.__text _EXExtensionIsPredicateSafeToExecuteWithObject
|| __TEXT.__text _EXExtensionIsSafeKeyPathForObject
|| __TEXT.__text _EXExtensionMain
|| __TEXT.__text _EXGetExtensionClass
|| __TEXT.__text _EXGetExtensionContextInternalClass
|| __TEXT.__text _EXGetExtensionContextVendorClass
|| __TEXT.__text __EXAuditTokenForCurrentProcess
|| __TEXT.__text __EXAuditTokenGetEntitlementValue
|| __TEXT.__text __EXAuditTokenGetPID
|| __TEXT.__text __EXDefaultLog
|| __TEXT.__text __EXDiscoveryLog
|| __TEXT.__text __EXLegacyLog
|| __TEXT.__text __EXRegistrationLog
|| __TEXT.__text __EXStartService
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ CoreFoundation: _CFBundleCopyBuiltInPlugInsURL
__ CoreFoundation: _CFBundleCopyBundleURL
__ CoreFoundation: _CFBundleCopyExecutableURL
__ CoreFoundation: _CFBundleCopyResourceURLsOfType
__ CoreFoundation: _CFBundleGetInfoDictionary
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFLog
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopObserverCreate
__ CoreFoundation: _CFURLStartAccessingSecurityScopedResource
__ CoreFoundation: _CFURLStopAccessingSecurityScopedResource
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSURLIsApplicationKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLIsRegularFileKey
__ CoreFoundation: _NSURLIsSymbolicLinkKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_METACLASS_$_NSEnumerator
__ CoreFoundation: __CFBundleCreateUnique
__ CoreFoundation: __CFURLAttachSecurityScopeToFileURL
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: __NSIsNSArray
__ CoreFoundation: __NSIsNSData
__ CoreFoundation: __NSIsNSDictionary
__ CoreFoundation: __NSIsNSNumber
__ CoreFoundation: __NSIsNSString
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreServices: _OBJC_CLASS_$_LSApplicationExtensionRecord
__ CoreServices: _OBJC_CLASS_$_LSBundleRecord
__ CoreServices: _OBJC_CLASS_$_LSDatabaseContext
__ CoreServices: _OBJC_CLASS_$_LSExtensionPointRecord
__ CoreServices: _OBJC_CLASS_$_LSObserver
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _kUTTypeURL
__ Foundation: _NSClassFromString
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSExtensionAdditionalServiceName
__ Foundation: _NSExtensionErrorDomain
__ Foundation: _NSExtensionHostDidBecomeActiveNotification
__ Foundation: _NSExtensionHostDidEnterBackgroundNotification
__ Foundation: _NSExtensionHostWillEnterForegroundNotification
__ Foundation: _NSExtensionHostWillResignActiveNotification
__ Foundation: _NSExtensionIdentifierName
__ Foundation: _NSExtensionPointName
__ Foundation: _NSItemProviderOptionsDispatchModeAsynchronous
__ Foundation: _NSItemProviderOptionsDispatchModeKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromProtocol
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSExtensionItem
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_CLASS_$_NSXPCListenerEndpoint
__ Foundation: _OBJC_CLASS_$__NSExtensionContextVendor
__ Foundation: _OBJC_METACLASS_$_NSExtension
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$__NSExtensionContextVendor
__ PlugInKit: _OBJC_CLASS_$_PKHost
__ PlugInKit: _OBJC_CLASS_$_PKService
__ PlugInKit: _PKUUIDAttribute
__ RunningBoardServices: _OBJC_CLASS_$_RBSLaunchContext
__ RunningBoardServices: _OBJC_CLASS_$_RBSLaunchRequest
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentifier
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentity
__ SoftLinking: __sl_dlopen
__ libSystem.B.dylib: _APP_SANDBOX_READ
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __NSGetArgc
__ libSystem.B.dylib: __NSGetArgv
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dyld_get_prog_image_header
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_activity_initiate
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _atoi
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_get_active_platform
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _getsectiondata
__ libSystem.B.dylib: _launch_add_external_service
__ libSystem.B.dylib: _launch_copy_extension_properties
__ libSystem.B.dylib: _launch_copy_extension_properties_for_pid
__ libSystem.B.dylib: _launch_extension_check_in_live_4UIKit
__ libSystem.B.dylib: _launch_extension_property_pid
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memorystatus_control
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_issue_file_to_process
__ libSystem.B.dylib: _sandbox_extension_issue_mach_to_process
__ libSystem.B.dylib: _sandbox_extension_release
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlcat
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _terminate_with_reason
__ libSystem.B.dylib: _xpc_connection_activate
__ libSystem.B.dylib: _xpc_connection_create
__ libSystem.B.dylib: _xpc_connection_kill
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_oneshot_instance
__ libSystem.B.dylib: _xpc_copy_entitlement_for_token
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_init_services
__ libSystem.B.dylib: _xpc_release
__ libSystem.B.dylib: _xpc_strerror
__ libbsm.0.dylib: _audit_token_to_au32
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getName
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_allocateProtocol
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_getProtocol
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_registerProtocol
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_addProtocol
__ libobjc.A.dylib: _protocol_getName
_EXRunningExtension : _EXExtension <NSXPCListenerDelegate>
 @property  <_EXConnectionHandler> *principalObject
 @property  BOOL hasSwiftEntryPoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXRunningExtension sharedInstance]
  +[_EXRunningExtension entryPointFunction]

  // instance methods
  -[_EXRunningExtension checkIn]
  -[_EXRunningExtension principalObject]
  -[_EXRunningExtension .cxx_destruct]
  -[_EXRunningExtension init]
  -[_EXRunningExtension _startWithArguments:count:]
  -[_EXRunningExtension hasSwiftEntryPoint]
  -[_EXRunningExtension startWithArguments:count:]
  -[_EXRunningExtension resume]
  -[_EXRunningExtension listener:shouldAcceptNewConnection:]
  -[_EXRunningExtension installRunloopObserverToPingLaunchdAfterEvent]
  -[_EXRunningExtension setPrincipalObject:]


EXConcreteExtension : NSExtension
 @property  NSString *_localizedName
 @property  NSString *_localizedShortName
 @property  <PKPlugIn> *_plugIn
 @property  NSBundle *_extensionBundle
 @property  @? _requestPostCompletionBlock
 @property  @? _requestPostCompletionBlockWithItems
 @property  double requestTeardownDelay
 @property  NSUUID *connectionUUID
 @property  long long wantsDedicatedQueue
 @property  NSMutableDictionary *_extensionExpirationIdentifiers
 @property  NSMutableDictionary *_extensionServiceConnections
 @property  NSMutableDictionary *_extensionContexts
 @property  NSDictionary *_extensionState
 @property  NSSet *_allowedErrorClasses
 @property  BOOL observingHostAppStateChanges
 @property  id _stashedPlugInConnection

  // class methods
  +[EXConcreteExtension initialize]
  +[EXConcreteExtension endMatchingExtensions:]
  +[EXConcreteExtension _dictionaryIncludingOnlyItemsWithRegisteredTypeIdentifier:fromMatchingDictionary:]
  +[EXConcreteExtension _matchingDictionaryMatchesActiveWebPageAlternative:]
  +[EXConcreteExtension extensionWithURL:completion:]
  +[EXConcreteExtension _evaluateActivationRule:withDictionaryIfItMatchesActiveWebPageAlternative:matchResult:]
  +[EXConcreteExtension _shouldLogExtensionDiscovery]
  +[EXConcreteExtension _inputItemsByApplyingActiveWebPageAlternative:ifNeededByActivationRule:]
  +[EXConcreteExtension evaluateActivationRule:withExtensionItemsRepresentation:]
  +[EXConcreteExtension _evaluateActivationRuleWithoutWorkarounds:withExtensionItemsRepresentation:]
  +[EXConcreteExtension extensionWithIdentifier:error:]
  +[EXConcreteExtension _inputItemsMatchActiveWebPageAlternative:]
  +[EXConcreteExtension extensionsWithMatchingAttributes:synchronously:completion:]
  +[EXConcreteExtension extensionWithUUID:completion:]
  +[EXConcreteExtension extensionsWithMatchingAttributes:completion:]
  +[EXConcreteExtension _genericValuesMatchActiveWebPageAlternativeWithExtensionItems:attachmentsLens:registeredTypeIdentifiersLens:isActiveWebPageAttachmentCheck:]
  +[EXConcreteExtension predicateForActivationRule:]
  +[EXConcreteExtension beginMatchingExtensionsWithAttributes:completion:]
  +[EXConcreteExtension globalStateQueueForExtension:]
  +[EXConcreteExtension extensionsWithMatchingAttributes:error:]
  +[EXConcreteExtension _evaluateActivationRule:withInputItemsIfTheyMatchActiveWebPageAlternative:matchResult:]
  +[EXConcreteExtension extensionWithIdentifier:excludingDisabledExtensions:error:]
  +[EXConcreteExtension initializeFiltering]

  // instance methods
  -[EXConcreteExtension _openURL:completion:]
  -[EXConcreteExtension beginExtensionRequestWithOptions:inputItems:listenerEndpoint:error:]
  -[EXConcreteExtension _hostWillEnterForegroundNote:]
  -[EXConcreteExtension setRequestInterruptionBlock:]
  -[EXConcreteExtension _loadPreviewImageForPayload:contextIdentifier:completionHandler:]
  -[EXConcreteExtension infoDictionary]
  -[EXConcreteExtension _beginUsingAndCreateExtensionAssertionWithRequest:error:]
  -[EXConcreteExtension cancelExtensionRequestWithIdentifier:]
  -[EXConcreteExtension _loadItemForPayload:contextIdentifier:completionHandler:]
  -[EXConcreteExtension _setAllowedErrorClasses:]
  -[EXConcreteExtension set_stashedPlugInConnection:]
  -[EXConcreteExtension _localizedShortName]
  -[EXConcreteExtension extensionContexts]
  -[EXConcreteExtension _safelyBeginUsingWithRequest:readyHandler:]
  -[EXConcreteExtension _extensionBundle]
  -[EXConcreteExtension attemptOptIn:]
  -[EXConcreteExtension _setExtensionState:]
  -[EXConcreteExtension _reallyBeginExtensionRequest:synchronously:completion:]
  -[EXConcreteExtension _hostContextClass]
  -[EXConcreteExtension icons]
  -[EXConcreteExtension pidForRequestIdentifier:]
  -[EXConcreteExtension requestCancellationBlock]
  -[EXConcreteExtension .cxx_destruct]
  -[EXConcreteExtension _reallyBeginExtensionRequest:completion:]
  -[EXConcreteExtension attemptOptOut:]
  -[EXConcreteExtension requestCompletionBlock]
  -[EXConcreteExtension _hostWillResignActiveNote:]
  -[EXConcreteExtension _localizedName]
  -[EXConcreteExtension connectionUUID]
  -[EXConcreteExtension _cancelRequestWithError:forExtensionContextWithUUID:completion:]
  -[EXConcreteExtension _allowedItemPayloadClasses]
  -[EXConcreteExtension _plugInProcessIdentifier]
  -[EXConcreteExtension requestTeardownDelay]
  -[EXConcreteExtension beginExtensionRequestWithInputItems:completion:]
  -[EXConcreteExtension _beginExtensionRequest:error:]
  -[EXConcreteExtension _safelyEndUsingRequestWithPKUUID:processAssertion:continuation:]
  -[EXConcreteExtension beginExtensionRequestWithInputItems:listenerEndpoint:completion:]
  -[EXConcreteExtension _setExtensionServiceConnections:]
  -[EXConcreteExtension _stashedPlugInConnection]
  -[EXConcreteExtension init]
  -[EXConcreteExtension setRequestCancellationBlock:]
  -[EXConcreteExtension optedIn]
  -[EXConcreteExtension _itemProviderForPayload:extensionContext:]
  -[EXConcreteExtension setRequestCompletionBlock:]
  -[EXConcreteExtension isEqual:]
  -[EXConcreteExtension beginExtensionRequestWithOptions:inputItems:error:]
  -[EXConcreteExtension beginExtensionRequestWithInputItems:error:]
  -[EXConcreteExtension _wantsProcessPerRequest]
  -[EXConcreteExtension extensionPointIdentifier]
  -[EXConcreteExtension _requestPostCompletionBlock]
  -[EXConcreteExtension identifier]
  -[EXConcreteExtension _requestPostCompletionBlockWithItems]
  -[EXConcreteExtension _extensionState]
  -[EXConcreteExtension _dropAssertion]
  -[EXConcreteExtension wantsDedicatedQueue]
  -[EXConcreteExtension _extensionExpirationIdentifiers]
  -[EXConcreteExtension _initWithPKPlugin:]
  -[EXConcreteExtension _safelyBeginUsing:]
  -[EXConcreteExtension _beginExtensionRequest:completion:]
  -[EXConcreteExtension _hostDidBecomeActiveNote:]
  -[EXConcreteExtension _didCreateExtensionContext:]
  -[EXConcreteExtension requestInterruptionBlock]
  -[EXConcreteExtension _extensionContextForUUID:]
  -[EXConcreteExtension _allowedErrorClasses]
  -[EXConcreteExtension beginExtensionRequestWithOptions:inputItems:listenerEndpoint:completion:]
  -[EXConcreteExtension version]
  -[EXConcreteExtension _setPlugIn:]
  -[EXConcreteExtension _safelyBeginUsingSynchronously:request:readyHandler:]
  -[EXConcreteExtension beginExtensionRequestWithInputItems:listenerEndpoint:error:]
  -[EXConcreteExtension _extensionServiceConnections]
  -[EXConcreteExtension set_requestPostCompletionBlockWithItems:]
  -[EXConcreteExtension makeExtensionContextAndXPCConnectionForRequest:error:]
  -[EXConcreteExtension dealloc]
  -[EXConcreteExtension _isMarkedNew]
  -[EXConcreteExtension _setExtensionContexts:]
  -[EXConcreteExtension _setObservingHostAppStateChanges:]
  -[EXConcreteExtension validateRequest:error:]
  -[EXConcreteExtension attributes]
  -[EXConcreteExtension _plugIn]
  -[EXConcreteExtension setConnectionUUID:]
  -[EXConcreteExtension _completeRequestReturningItems:forExtensionContextWithUUID:completion:]
  -[EXConcreteExtension _isPhotoServiceAccessGranted]
  -[EXConcreteExtension objectForInfoDictionaryKey:]
  -[EXConcreteExtension _isObservingHostAppStateChanges]
  -[EXConcreteExtension _resetExtensionState]
  -[EXConcreteExtension _setExtensionExpirationsIdentifiers:]
  -[EXConcreteExtension set_requestPostCompletionBlock:]
  -[EXConcreteExtension _hostDidEnterBackgroundNote:]
  -[EXConcreteExtension _bareExtensionServiceConnection]
  -[EXConcreteExtension _extensionContexts]
  -[EXConcreteExtension _didShowNewExtensionIndicator]
  -[EXConcreteExtension _kill:]
  -[EXConcreteExtension _isSystemExtension]
  -[EXConcreteExtension _didShowExtensionManagementInterface]
  -[EXConcreteExtension setWantsDedicatedQueue:]
  -[EXConcreteExtension beginExtensionRequestWithOptions:inputItems:completion:]
  -[EXConcreteExtension _safelyEndUsing:]


EXExtensionContextImplementation : NSObject <NSSecureCoding, NSCopying, NSXPCListenerDelegate, _NSExtensionAuxHostingBase, _NSExtensionContextInternalImplementation>
 @property  NSUUID *_UUID
 @property  NSArray *inputItems
 @property  NSXPCConnection *_auxiliaryConnection
 @property  BOOL _dummyExtension
 @property  NSExtensionContext *extensionContext
 @property  EXExtensionRequest *extensionRequest
 @property  <EXExtensionContextHosting> *_extensionHostProxy
 @property  {?=[8I]} _extensionHostAuditToken
 @property  NSObject<OS_os_transaction> *_transaction
 @property  id _principalObject
 @property  id _processAssertion
 @property  <EXExtensionContextVending> *_extensionVendorProxy
 @property  NSXPCListener *_auxiliaryListener
 @property  NSUUID *_pkUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? _requestCleanUpBlock

  // class methods
  +[EXExtensionContextImplementation _extensionContextHostProtocolWithAllowedPayloadCompletionClasses:AllowedErrorClasses:]
  +[EXExtensionContextImplementation supportsSecureCoding]
  +[EXExtensionContextImplementation _extensionContextVendorProtocolWithAllowedErrorClasses:]
  +[EXExtensionContextImplementation _extensionContextHostProtocolAllowedClassesForItems]
  +[EXExtensionContextImplementation _defaultExtensionContextVendorProtocol]
  +[EXExtensionContextImplementation _extensionContextForIdentifier:]
  +[EXExtensionContextImplementation _derivedExtensionAuxiliaryHostProtocolWithContextClass:]

  // instance methods
  -[EXExtensionContextImplementation openURL:completionHandler:]
  -[EXExtensionContextImplementation _openURL:completion:]
  -[EXExtensionContextImplementation _UUID]
  -[EXExtensionContextImplementation _setExtensionHostAuditToken:]
  -[EXExtensionContextImplementation _auxiliaryListener]
  -[EXExtensionContextImplementation _setTransaction:]
  -[EXExtensionContextImplementation _completeRequestReturningItemsSecondHalf:]
  -[EXExtensionContextImplementation initWithCoder:]
  -[EXExtensionContextImplementation _extensionHostAuditToken]
  -[EXExtensionContextImplementation _auxiliaryConnection]
  -[EXExtensionContextImplementation _loadItemForPayload:completionHandler:]
  -[EXExtensionContextImplementation _requestCleanUpBlock]
  -[EXExtensionContextImplementation _transaction]
  -[EXExtensionContextImplementation _extensionHostProxy]
  -[EXExtensionContextImplementation initWithInputItems:listenerEndpoint:contextUUID:extensionContext:]
  -[EXExtensionContextImplementation .cxx_destruct]
  -[EXExtensionContextImplementation _isDummyExtension]
  -[EXExtensionContextImplementation inputItems]
  -[EXExtensionContextImplementation _willPerformHostCallback:]
  -[EXExtensionContextImplementation _setProcessAssertion:]
  -[EXExtensionContextImplementation _setDummyExtension:]
  -[EXExtensionContextImplementation extensionContext]
  -[EXExtensionContextImplementation _setExtensionVendorProxy:]
  -[EXExtensionContextImplementation _setAuxiliaryConnection:]
  -[EXExtensionContextImplementation _principalObject]
  -[EXExtensionContextImplementation _setExtensionHostProxy:]
  -[EXExtensionContextImplementation extensionRequest]
  -[EXExtensionContextImplementation _setPrincipalObject:]
  -[EXExtensionContextImplementation _initializeAuxillaryConnectionWithListenerEndpoint:]
  -[EXExtensionContextImplementation _setInputItems:]
  -[EXExtensionContextImplementation _pkUUID]
  -[EXExtensionContextImplementation _loadPreviewImageForPayload:completionHandler:]
  -[EXExtensionContextImplementation cancelRequestWithError:]
  -[EXExtensionContextImplementation set_UUID:]
  -[EXExtensionContextImplementation completeRequestReturningItems:completionHandler:]
  -[EXExtensionContextImplementation _isHost]
  -[EXExtensionContextImplementation _setAuxiliaryListener:]
  -[EXExtensionContextImplementation _processAssertion]
  -[EXExtensionContextImplementation dealloc]
  -[EXExtensionContextImplementation invalidate]
  -[EXExtensionContextImplementation listener:shouldAcceptNewConnection:]
  -[EXExtensionContextImplementation copyWithZone:]
  -[EXExtensionContextImplementation ___nsx_pingHost:]
  -[EXExtensionContextImplementation setExtensionRequest:]
  -[EXExtensionContextImplementation set_pkUUID:]
  -[EXExtensionContextImplementation _setRequestCleanUpBlock:]
  -[EXExtensionContextImplementation encodeWithCoder:]
  -[EXExtensionContextImplementation _extensionVendorProxy]


_EXDiscoveryController : NSObject <LSObserverDelegate>
 @property  NSMutableDictionary *activeQueries
 @property  LSObserver *observer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXDiscoveryController sharedInstance]

  // instance methods
  -[_EXDiscoveryController observerDidObserveDatabaseChange:]
  -[_EXDiscoveryController .cxx_destruct]
  -[_EXDiscoveryController init]
  -[_EXDiscoveryController observer]
  -[_EXDiscoveryController setObserver:]
  -[_EXDiscoveryController currentProcessCanRunQuery:error:]
  -[_EXDiscoveryController extensionsMatchingQuery:]
  -[_EXDiscoveryController addActiveQueryObserver:query:]
  -[_EXDiscoveryController removeActiveQueryObserver:query:]
  -[_EXDiscoveryController extensionsMatchingQueries:]
  -[_EXDiscoveryController activeQueries]
  -[_EXDiscoveryController setActiveQueries:]


_EXServiceDelegate : NSObject <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription


_EXService : NSObject <NSXPCListenerDelegate, _EXServiceProtocol, LSObserverDelegate>
 @property  _EXDiscoveryController *discoveryController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXService sharedService]
  +[_EXService runAsXPCService]

  // instance methods
  -[_EXService .cxx_destruct]
  -[_EXService _init]
  -[_EXService listener:shouldAcceptNewConnection:]
  -[_EXService getServiceConfigForExtension:overlay:subservices:]
  -[_EXService connection:hasRequiredEntitlements:error:]
  -[_EXService connection:canRunQuery:error:]
  -[_EXService launchExtension:clientConnection:error:]
  -[_EXService extensionsWithQuery:reply:]
  -[_EXService beginExtensionsQuery:listenerEndpoint:reply:]
  -[_EXService prepareExtension:reply:]
  -[_EXService registerServiceForClientConnection:extension:error:]
  -[_EXService discoveryController]


_EXConnectionActiveQueryObserver : NSObject <_EXActiveQueryObserver>
 @property  NSObject<OS_os_transaction> *transaction
 @property  NSXPCConnection *connection

  // instance methods
  -[_EXConnectionActiveQueryObserver transaction]
  -[_EXConnectionActiveQueryObserver .cxx_destruct]
  -[_EXConnectionActiveQueryObserver setConnection:]
  -[_EXConnectionActiveQueryObserver isEqual:]
  -[_EXConnectionActiveQueryObserver connection]
  -[_EXConnectionActiveQueryObserver setTransaction:]
  -[_EXConnectionActiveQueryObserver initWitConnection:]
  -[_EXConnectionActiveQueryObserver query:resultDidUpdate:]


EXSwiftUI_Subsystem : NSObject <PKModularService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EXSwiftUI_Subsystem sharedInstance]
  +[EXSwiftUI_Subsystem initialized]
  +[EXSwiftUI_Subsystem initForPlugInKit]

  // instance methods
  -[EXSwiftUI_Subsystem beginUsing:withBundle:]
  -[EXSwiftUI_Subsystem init]


_EXRunningExtensionInfo : NSObject <EXExtensionInfoProviding>
 @property  NSString *runLoopType
 @property  NSString *bundleIdentifier
 @property  NSString *containerBundleIdentifier
 @property  NSString *containingViewControllerClassName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXRunningExtensionInfo notifyExtensionMainCalled]
  +[_EXRunningExtensionInfo extensionInfoForCurrentProcess]

  // instance methods
  -[_EXRunningExtensionInfo bundleIdentifier]
  -[_EXRunningExtensionInfo .cxx_destruct]
  -[_EXRunningExtensionInfo initForCurrentProcess]
  -[_EXRunningExtensionInfo containerBundleIdentifier]
  -[_EXRunningExtensionInfo runLoopType]
  -[_EXRunningExtensionInfo containingViewControllerClassName]


_EXQuery : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *extensionPointIdentifier
 @property  unsigned int platform
 @property  NSPredicate *predicate

  // class methods
  +[_EXQuery executeQuery:]
  +[_EXQuery supportsSecureCoding]
  +[_EXQuery executeQueries:]
  +[_EXQuery executeQueries:completionHandler:]
  +[_EXQuery asyncQueryQueue]
  +[_EXQuery executeQuery:completionHandler:]
  +[_EXQuery extensionPointIdentifierQuery:]
  +[_EXQuery extensionPointIdentifierQuery:platform:]
  +[_EXQuery allExtensionsQuery]

  // instance methods
  -[_EXQuery setPredicate:]
  -[_EXQuery setPlatform:]
  -[_EXQuery platform]
  -[_EXQuery initWithCoder:]
  -[_EXQuery predicate]
  -[_EXQuery .cxx_destruct]
  -[_EXQuery init]
  -[_EXQuery isEqual:]
  -[_EXQuery matches:]
  -[_EXQuery extensionPointIdentifier]
  -[_EXQuery copyWithZone:]
  -[_EXQuery encodeWithCoder:]
  -[_EXQuery matchesRecord:]
  -[_EXQuery setExtensionPointIdentifier:]
  -[_EXQuery isEqualToQuery:]


_EXActiveClientQuery : NSObject <NSXPCListenerDelegate, _EXQueryResultsProtocol>
 @property  _EXQuery *query
 @property  NSSet *observers
 @property  NSXPCListenerEndpoint *endpoint
 @property  NSXPCConnection *connection
 @property  BOOL active
 @property  BOOL started
 @property  NSXPCListener *xpcListener
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_EXActiveClientQuery xpcListener]
  -[_EXActiveClientQuery setStarted:]
  -[_EXActiveClientQuery initWithQuery:]
  -[_EXActiveClientQuery query]
  -[_EXActiveClientQuery started]
  -[_EXActiveClientQuery isActive]
  -[_EXActiveClientQuery .cxx_destruct]
  -[_EXActiveClientQuery setConnection:]
  -[_EXActiveClientQuery setObservers:]
  -[_EXActiveClientQuery isEqual:]
  -[_EXActiveClientQuery connection]
  -[_EXActiveClientQuery reset]
  -[_EXActiveClientQuery observers]
  -[_EXActiveClientQuery endpoint]
  -[_EXActiveClientQuery listener:shouldAcceptNewConnection:]
  -[_EXActiveClientQuery query:resultsDidUpdate:reply:]
  -[_EXActiveClientQuery isEqualToActiveQuery:]
  -[_EXActiveClientQuery addQueryObserver:]
  -[_EXActiveClientQuery removeQueryObserver:]


_EXServiceClient : NSObject
 @property  NSXPCConnection *discoveryConnection
 @property  NSXPCConnection *launchConnection
 @property  ^{os_unfair_lock_s=I} connectionLock
 @property  NSMutableSet *activeQueries
 @property  ^{os_unfair_lock_s=I} activeQueriesLock
 @property  NSObject<OS_dispatch_queue> *notifyQueue

  // class methods
  +[_EXServiceClient sharedInstance]

  // instance methods
  -[_EXServiceClient connectionLock]
  -[_EXServiceClient notifyQueue]
  -[_EXServiceClient .cxx_destruct]
  -[_EXServiceClient _init]
  -[_EXServiceClient activeQueries]
  -[_EXServiceClient setActiveQueries:]
  -[_EXServiceClient extensionsWithQueries:]
  -[_EXServiceClient fetchExtensionsWithQueries:completionHandler:]
  -[_EXServiceClient addQueryObserver:]
  -[_EXServiceClient removeQueryObserver:]
  -[_EXServiceClient setDiscoveryConnection:]
  -[_EXServiceClient reconnectActiveQueries]
  -[_EXServiceClient setLaunchConnection:]
  -[_EXServiceClient activeQueriesLock]
  -[_EXServiceClient _beginActiveQuery:]
  -[_EXServiceClient discoveryConnection]
  -[_EXServiceClient _activeQueryForQuery:]
  -[_EXServiceClient launchConnection]
  -[_EXServiceClient prepareConnectionForExtension:error:]


_EXExtensionPredicateBuilder : NSObject
 @property  unsigned long version
 @property  BOOL strictMatchingSpecified
 @property  BOOL usesStrictMatching
 @property  NSDictionary *predicateDictionary
 @property  ^{_EXExtensionActivationRules=@@@@@@@@} activationRules

  // instance methods
  -[_EXExtensionPredicateBuilder .cxx_destruct]
  -[_EXExtensionPredicateBuilder version]
  -[_EXExtensionPredicateBuilder makePredicate]
  -[_EXExtensionPredicateBuilder predicateForCountingRule:type:exceptTypes:specifiedCount:]
  -[_EXExtensionPredicateBuilder gatherChildrenPredicateWithRuleDictionary:parentType:parentAccepted:acceptedChildTypes:exceptChildTypes:]
  -[_EXExtensionPredicateBuilder predicateForRejectExceptOtherTypesRule:type:otherTypes:]
  -[_EXExtensionPredicateBuilder applyRuleWithRuleName:acceptRule:rejectRule:types:exceptTypes:parentType:children:parentAccepted:accepted:acceptedTypesInSubtree:exceptTypesInSubtree:]
  -[_EXExtensionPredicateBuilder initWithActivationRules:predicateDictionary:]
  -[_EXExtensionPredicateBuilder strictMatchingSpecified]
  -[_EXExtensionPredicateBuilder usesStrictMatching]
  -[_EXExtensionPredicateBuilder predicateDictionary]
  -[_EXExtensionPredicateBuilder activationRules]


EXConcreteExtensionContextVendor : _NSExtensionContextVendor <NSXPCListenerDelegate, EXExtensionContextVending>
 @property  NSMutableDictionary *_extensionServiceConnections
 @property  NSMutableDictionary *_extensionContexts
 @property  NSMutableDictionary *_extensionPrincipalObjects
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EXConcreteExtensionContextVendor _extensionDictionary]
  +[EXConcreteExtensionContextVendor _extensionContextClass]
  +[EXConcreteExtensionContextVendor _allowedItemPayloadClasses]
  +[EXConcreteExtensionContextVendor _expirationConcurrentQueue]
  +[EXConcreteExtensionContextVendor _startListening:]
  +[EXConcreteExtensionContextVendor _extensionPrincipalClass]
  +[EXConcreteExtensionContextVendor _completionConcurrentQueue]
  +[EXConcreteExtensionContextVendor _startListening]
  +[EXConcreteExtensionContextVendor _extensionMainStoryboard]

  // instance methods
  -[EXConcreteExtensionContextVendor _onGlobalStateQueueOnly_setPrincipalObject:forUUID:]
  -[EXConcreteExtensionContextVendor .cxx_destruct]
  -[EXConcreteExtensionContextVendor _hostWillResignActiveForContextUUID:completion:]
  -[EXConcreteExtensionContextVendor _setExtensionServiceConnections:]
  -[EXConcreteExtensionContextVendor init]
  -[EXConcreteExtensionContextVendor _hostWillEnterForegroundForContextUUID:completion:]
  -[EXConcreteExtensionContextVendor _beginRequestWithExtensionItems:listenerEndpoint:withContextUUID:completion:]
  -[EXConcreteExtensionContextVendor _shouldCreatePrincipalObject]
  -[EXConcreteExtensionContextVendor _extensionPrincipalObjects]
  -[EXConcreteExtensionContextVendor _extensionContextForUUID:]
  -[EXConcreteExtensionContextVendor _tearDownContextWithUUID:]
  -[EXConcreteExtensionContextVendor _extensionServiceConnections]
  -[EXConcreteExtensionContextVendor _hostDidEnterBackgroundForContextUUID:completion:]
  -[EXConcreteExtensionContextVendor _setExtensionContexts:]
  -[EXConcreteExtensionContextVendor listener:shouldAcceptNewConnection:]
  -[EXConcreteExtensionContextVendor _hostDidBecomeActiveForContextUUID:completion:]
  -[EXConcreteExtensionContextVendor _setExtensionPrincipalObjects:]
  -[EXConcreteExtensionContextVendor _extensionContexts]
  -[EXConcreteExtensionContextVendor _setPrincipalObject:forUUID:]


_EXExtensionRecordRep : _EXExtensionRep
 @property  LSApplicationExtensionRecord *record
 @property  LSExtensionPointRecord *extensionPoint

  // class methods
  +[_EXExtensionRecordRep supportsSecureCoding]

  // instance methods
  -[_EXExtensionRecordRep localizedName]
  -[_EXExtensionRecordRep UUID]
  -[_EXExtensionRecordRep platform]
  -[_EXExtensionRecordRep initWithCoder:]
  -[_EXExtensionRecordRep bundleIdentifier]
  -[_EXExtensionRecordRep classForCoder]
  -[_EXExtensionRecordRep record]
  -[_EXExtensionRecordRep url]
  -[_EXExtensionRecordRep .cxx_destruct]
  -[_EXExtensionRecordRep entitlements]
  -[_EXExtensionRecordRep extensionPoint]
  -[_EXExtensionRecordRep extensionPointIdentifier]
  -[_EXExtensionRecordRep attributes]
  -[_EXExtensionRecordRep extensionDictionary]
  -[_EXExtensionRecordRep initWithApplicationExtensionRecord:]
  -[_EXExtensionRecordRep sdkDictionary]
  -[_EXExtensionRecordRep initWithPlugInKitProxy:]
  -[_EXExtensionRecordRep containingURL]
  -[_EXExtensionRecordRep entitlementNamed:ofClass:]


_EXExtensionValueRep : _EXExtensionRep
  // class methods
  +[_EXExtensionValueRep supportsSecureCoding]

  // instance methods
  -[_EXExtensionValueRep localizedName]
  -[_EXExtensionValueRep UUID]
  -[_EXExtensionValueRep platform]
  -[_EXExtensionValueRep initWithCoder:]
  -[_EXExtensionValueRep bundleIdentifier]
  -[_EXExtensionValueRep url]
  -[_EXExtensionValueRep .cxx_destruct]
  -[_EXExtensionValueRep entitlements]
  -[_EXExtensionValueRep extensionPointIdentifier]
  -[_EXExtensionValueRep attributes]
  -[_EXExtensionValueRep extensionDictionary]
  -[_EXExtensionValueRep sdkDictionary]
  -[_EXExtensionValueRep containingURL]
  -[_EXExtensionValueRep entitlementNamed:ofClass:]


_EXExtensionRep : NSObject <_EXExtensionConfigurationProviding, NSSecureCoding, _EXExtensionRepresenting>
 @property  NSDictionary *extensionPointConfiguration
 @property  unsigned long type
 @property  NSString *internalServiceName
 @property  Class principalClass
 @property  BOOL presentsUserInterface
 @property  Class connectionHandlerClass
 @property  NSDictionary *requiredHostEntitlements
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDictionary *entitlements
 @property  NSURL *url
 @property  NSURL *containingURL
 @property  NSUUID *UUID
 @property  NSURL *executableURL
 @property  NSDictionary *sdkDictionary
 @property  NSDictionary *extensionDictionary
 @property  unsigned int platform
 @property  <_EXExtensionConfigurationProviding> *configuration
 @property  Class extensionContextClass
 @property  Class hostContextClass
 @property  NSString *extensionPointIdentifier
 @property  NSString *bundleIdentifier
 @property  NSString *localizedName
 @property  BOOL presentsUserInterface
 @property  BOOL requiresMacCatalystBehavior
 @property  NSDictionary *attributes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXExtensionRep allocWithZone:]
  +[_EXExtensionRep supportsSecureCoding]

  // instance methods
  -[_EXExtensionRep executableURL]
  -[_EXExtensionRep UUID]
  -[_EXExtensionRep platform]
  -[_EXExtensionRep initWithCoder:]
  -[_EXExtensionRep url]
  -[_EXExtensionRep configuration]
  -[_EXExtensionRep .cxx_destruct]
  -[_EXExtensionRep isEqual:]
  -[_EXExtensionRep extensionProcessWithError:]
  -[_EXExtensionRep makeXPCConnectionWithError:]
  -[_EXExtensionRep extensionPointConfiguration]
  -[_EXExtensionRep internalServiceName]
  -[_EXExtensionRep type]
  -[_EXExtensionRep _init]
  -[_EXExtensionRep principalClass]
  -[_EXExtensionRep isEqualToExtension:]
  -[_EXExtensionRep encodeWithCoder:]
  -[_EXExtensionRep extensionDictionary]
  -[_EXExtensionRep initWithApplicationExtensionRecord:]
  -[_EXExtensionRep connectionHandlerClass]
  -[_EXExtensionRep presentsUserInterface]
  -[_EXExtensionRep sdkDictionary]
  -[_EXExtensionRep requiredHostEntitlements]
  -[_EXExtensionRep initWithPlugInKitProxy:]
  -[_EXExtensionRep containingURL]
  -[_EXExtensionRep entitlementNamed:ofClass:]
  -[_EXExtensionRep hostContextClass]
  -[_EXExtensionRep extensionContextClass]


_EXExtension : NSObject
 @property  NSString *bundleIdentifier
 @property  <_EXExtensionConfigurationProviding> *configuration
 @property  _EXExtensionRep *internalRep

  // instance methods
  -[_EXExtension bundleIdentifier]
  -[_EXExtension configuration]
  -[_EXExtension .cxx_destruct]
  -[_EXExtension internalRep]
  -[_EXExtension initWithApplicationExtensionRecord:]


_EXQueryObserver : NSObject <_EXActiveQueryObserver>
 @property  NSSet *internalExtensions
 @property  ^{os_unfair_lock_s=I} extensionsLock
 @property  NSObject<OS_dispatch_queue> *notificationQueue
 @property  <_EXQueryObserverDelegate> *delegate
 @property  NSArray *extensions
 @property  NSArray *queries

  // instance methods
  -[_EXQueryObserver notificationQueue]
  -[_EXQueryObserver suspend]
  -[_EXQueryObserver .cxx_destruct]
  -[_EXQueryObserver queries]
  -[_EXQueryObserver extensions]
  -[_EXQueryObserver delegate]
  -[_EXQueryObserver resume]
  -[_EXQueryObserver dealloc]
  -[_EXQueryObserver query:resultDidUpdate:]
  -[_EXQueryObserver internalExtensions]
  -[_EXQueryObserver extensionsLock]
  -[_EXQueryObserver resultDidUpdate:]
  -[_EXQueryObserver initWithQueries:delegate:]
  -[_EXQueryObserver setInternalExtensions:]


EXExtensionRequest : NSObject
 @property  unsigned long options
 @property  NSArray *inputItems
 @property  NSXPCListenerEndpoint *endpoint
 @property  NSUUID *pkUUID
 @property  id assertion
 @property  NSXPCConnection *xpcConnection
 @property  NSExtensionContext *context

  // instance methods
  -[EXExtensionRequest assertion]
  -[EXExtensionRequest setAssertion:]
  -[EXExtensionRequest setXpcConnection:]
  -[EXExtensionRequest xpcConnection]
  -[EXExtensionRequest options]
  -[EXExtensionRequest setOptions:]
  -[EXExtensionRequest .cxx_destruct]
  -[EXExtensionRequest setPkUUID:]
  -[EXExtensionRequest inputItems]
  -[EXExtensionRequest init]
  -[EXExtensionRequest setEndpoint:]
  -[EXExtensionRequest pkUUID]
  -[EXExtensionRequest setContext:]
  -[EXExtensionRequest dealloc]
  -[EXExtensionRequest endpoint]
  -[EXExtensionRequest applyActiveWebPageAlternativeIfNeededForExtension:]
  -[EXExtensionRequest setInputItems:]
  -[EXExtensionRequest context]


EXFrameworkScanner : NSOperation
 @property  NSMutableDictionary *_combinedExtensionSDK
 @property  NSMutableDictionary *_combinedAppleInternalExtensionSDK
 @property  NSMutableArray *_extensions
 @property  NSMutableArray *_appleInternalExtensions
 @property  NSURL *sourceURL
 @property  NSDictionary *combinedExtensionSDK
 @property  NSDictionary *combinedAppleInternalExtensionSDK
 @property  NSArray *extensionPaths
 @property  NSArray *appleInternalExtensionPaths

  // class methods
  +[EXFrameworkScanner rootURL]
  +[EXFrameworkScanner frameworkPaths]

  // instance methods
  -[EXFrameworkScanner main]
  -[EXFrameworkScanner .cxx_destruct]
  -[EXFrameworkScanner _extensions]
  -[EXFrameworkScanner initWithSourceURL:]
  -[EXFrameworkScanner sourceURL]
  -[EXFrameworkScanner processExtensionSDK:declaringURL:]
  -[EXFrameworkScanner isCatalystSupportURL:]
  -[EXFrameworkScanner isAppleInternalURL:]
  -[EXFrameworkScanner _combinedExtensionSDK]
  -[EXFrameworkScanner _combinedAppleInternalExtensionSDK]
  -[EXFrameworkScanner processExtensionsInDirectory:]
  -[EXFrameworkScanner enumerateBundlesWithPathExtension:atURL:block:]
  -[EXFrameworkScanner processExtensionSDKFromBundle:]
  -[EXFrameworkScanner processExtensionsFromBundle:]
  -[EXFrameworkScanner enumerateFrameworksBundlesWithFrameworkURL:block:]
  -[EXFrameworkScanner combinedExtensionSDK]
  -[EXFrameworkScanner combinedAppleInternalExtensionSDK]
  -[EXFrameworkScanner extensionPaths]
  -[EXFrameworkScanner appleInternalExtensionPaths]
  -[EXFrameworkScanner enumerateAppexptAtURL:block:]
  -[EXFrameworkScanner processExtensionSDKFromFile:]
  -[EXFrameworkScanner set_combinedExtensionSDK:]
  -[EXFrameworkScanner set_combinedAppleInternalExtensionSDK:]
  -[EXFrameworkScanner set_extensions:]
  -[EXFrameworkScanner _appleInternalExtensions]
  -[EXFrameworkScanner set_appleInternalExtensions:]


_EXItemProviderExtensionVendorLoadOperator : NSObject <_EXItemProviderLoading>
 @property  NSUUID *identifier
 @property  NSUUID *extensionContextIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXItemProviderExtensionVendorLoadOperator supportsSecureCoding]

  // instance methods
  -[_EXItemProviderExtensionVendorLoadOperator loadItemForTypeIdentifier:completionHandler:expectedValueClass:options:]
  -[_EXItemProviderExtensionVendorLoadOperator loadPreviewImageWithCompletionHandler:expectedValueClass:options:]
  -[_EXItemProviderExtensionVendorLoadOperator initWithCoder:]
  -[_EXItemProviderExtensionVendorLoadOperator .cxx_destruct]
  -[_EXItemProviderExtensionVendorLoadOperator identifier]
  -[_EXItemProviderExtensionVendorLoadOperator setIdentifier:]
  -[_EXItemProviderExtensionVendorLoadOperator dealloc]
  -[_EXItemProviderExtensionVendorLoadOperator setExtensionContextIdentifier:]
  -[_EXItemProviderExtensionVendorLoadOperator extensionContextIdentifier]
  -[_EXItemProviderExtensionVendorLoadOperator encodeWithCoder:]
  -[_EXItemProviderExtensionVendorLoadOperator initWithExtensionContextIdentifier:]


_EXItemProviderCopyingLoadOperator : NSObject <_EXItemProviderLoading>
 @property  NSItemProvider *itemProvider
 @property  NSDictionary *loadedItems
 @property  {?=[8I]} destinationProcessAuditToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXItemProviderCopyingLoadOperator supportsSecureCoding]

  // instance methods
  -[_EXItemProviderCopyingLoadOperator loadItemForTypeIdentifier:completionHandler:expectedValueClass:options:]
  -[_EXItemProviderCopyingLoadOperator loadPreviewImageWithCompletionHandler:expectedValueClass:options:]
  -[_EXItemProviderCopyingLoadOperator initWithCoder:]
  -[_EXItemProviderCopyingLoadOperator itemProvider]
  -[_EXItemProviderCopyingLoadOperator .cxx_destruct]
  -[_EXItemProviderCopyingLoadOperator initWithItemProvider:destinationProcessAuditToken:]
  -[_EXItemProviderCopyingLoadOperator setItemProvider:]
  -[_EXItemProviderCopyingLoadOperator dealloc]
  -[_EXItemProviderCopyingLoadOperator encodeWithCoder:]
  -[_EXItemProviderCopyingLoadOperator loadedItems]
  -[_EXItemProviderCopyingLoadOperator setLoadedItems:]
  -[_EXItemProviderCopyingLoadOperator setDestinationProcessAuditToken:]
  -[_EXItemProviderCopyingLoadOperator _loadItemsForTypeIdentifiers:auditToken:itemProvider:]
  -[_EXItemProviderCopyingLoadOperator _sandboxedResourceForItemIfNeeded:auditToken:error:]
  -[_EXItemProviderCopyingLoadOperator destinationProcessAuditToken]


_EXItemProviderSandboxedResource : NSObject <NSSecureCoding, NSCopying>
 @property  NSData *sandboxExtensionToken
 @property  NSURL *resourceURL
 @property  BOOL accessingSecurityScopedResource

  // class methods
  +[_EXItemProviderSandboxedResource supportsSecureCoding]

  // instance methods
  -[_EXItemProviderSandboxedResource initWithCoder:]
  -[_EXItemProviderSandboxedResource setResourceURL:]
  -[_EXItemProviderSandboxedResource .cxx_destruct]
  -[_EXItemProviderSandboxedResource sandboxExtensionToken]
  -[_EXItemProviderSandboxedResource resourceURL]
  -[_EXItemProviderSandboxedResource setSandboxExtensionToken:]
  -[_EXItemProviderSandboxedResource dealloc]
  -[_EXItemProviderSandboxedResource copyWithZone:]
  -[_EXItemProviderSandboxedResource encodeWithCoder:]
  -[_EXItemProviderSandboxedResource initWithContentsOfURL:auditToken:error:]
  -[_EXItemProviderSandboxedResource isAccessingSecurityScopedResource]
  -[_EXItemProviderSandboxedResource setAccessingSecurityScopedResource:]
  -[_EXItemProviderSandboxedResource resolveURLAndReturnError:]


EXUIKit_Subsystem : NSObject <PKModularService>
 @property  NSDictionary *infoDictionary
 @property  BOOL plugInKitProcess
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EXUIKit_Subsystem sharedInstance]
  +[EXUIKit_Subsystem initForPlugInKitWithOptions:]
  +[EXUIKit_Subsystem initForPlugInKit]

  // instance methods
  -[EXUIKit_Subsystem infoDictionary]
  -[EXUIKit_Subsystem .cxx_destruct]
  -[EXUIKit_Subsystem beginUsing:withBundle:]
  -[EXUIKit_Subsystem isPlugInKitProcess]
  -[EXUIKit_Subsystem setPlugInKitProcess:]
  -[EXUIKit_Subsystem setInfoDictionary:]
  -[EXUIKit_Subsystem endUsing:]


_EXSandboxExtension : NSObject <NSSecureCoding>
 @property  unsigned long consumedSandboxExtension
 @property  NSString *sandboxExtensionToken

  // class methods
  +[_EXSandboxExtension supportsSecureCoding]
  +[_EXSandboxExtension sandboxed]

  // instance methods
  -[_EXSandboxExtension initWithCoder:]
  -[_EXSandboxExtension .cxx_destruct]
  -[_EXSandboxExtension init]
  -[_EXSandboxExtension sandboxExtensionToken]
  -[_EXSandboxExtension consume]
  -[_EXSandboxExtension setSandboxExtensionToken:]
  -[_EXSandboxExtension dealloc]
  -[_EXSandboxExtension encodeWithCoder:]
  -[_EXSandboxExtension initWithExtensionClass:machServiceName:process:]
  -[_EXSandboxExtension consumedSandboxExtension]
  -[_EXSandboxExtension setConsumedSandboxExtension:]


_EXExtensionProcess : NSObject <NSSecureCoding>
 @property  NSArray *sandboxExtensions
 @property  {os_unfair_lock_s=I} xpcConnectionLock
 @property  NSHashTable *xpcConnections
 @property  _EXExtensionProcessMannger *manager
 @property  {os_unfair_lock_s=I} observersLock
 @property  NSHashTable *observers
 @property  _EXInternalHostConnection *internalConnection
 @property  _EXExtensionRep *extension
 @property  {?=[8I]} auditToken
 @property  NSXPCListenerEndpoint *serviceListenerEndpoint
 @property  int pid
 @property  BKSProcessAssertion *assertion
 @property  RBSProcessIdentity *processIdentity
 @property  BOOL valid

  // class methods
  +[_EXExtensionProcess supportsSecureCoding]

  // instance methods
  -[_EXExtensionProcess observersLock]
  -[_EXExtensionProcess assertion]
  -[_EXExtensionProcess auditToken]
  -[_EXExtensionProcess initWithCoder:]
  -[_EXExtensionProcess isValid]
  -[_EXExtensionProcess configuration]
  -[_EXExtensionProcess setManager:]
  -[_EXExtensionProcess .cxx_destruct]
  -[_EXExtensionProcess setObservers:]
  -[_EXExtensionProcess setSandboxExtensions:]
  -[_EXExtensionProcess extension]
  -[_EXExtensionProcess sandboxExtensions]
  -[_EXExtensionProcess processIdentity]
  -[_EXExtensionProcess pid]
  -[_EXExtensionProcess makeXPCConnectionWithError:]
  -[_EXExtensionProcess addObserver:]
  -[_EXExtensionProcess setObserversLock:]
  -[_EXExtensionProcess manager]
  -[_EXExtensionProcess observers]
  -[_EXExtensionProcess dealloc]
  -[_EXExtensionProcess invalidate]
  -[_EXExtensionProcess setXpcConnections:]
  -[_EXExtensionProcess removeObserver:]
  -[_EXExtensionProcess encodeWithCoder:]
  -[_EXExtensionProcess xpcConnections]
  -[_EXExtensionProcess internalConnection]
  -[_EXExtensionProcess setInternalConnection:]
  -[_EXExtensionProcess initWithExtension:auditToken:processIdentity:sandboxExtensions:]
  -[_EXExtensionProcess aquireAsertionWithError:]
  -[_EXExtensionProcess _handleAssertionInvalidation]
  -[_EXExtensionProcess makeXPCConnection]
  -[_EXExtensionProcess initWithExtension:auditToken:]
  -[_EXExtensionProcess xpcConnectionLock]
  -[_EXExtensionProcess setXpcConnectionLock:]
  -[_EXExtensionProcess serviceListenerEndpoint]


_EXExtensionProcessMannger : NSObject <_EXExtensionProcessObserver>
 @property  NSMapTable *processExtensionMap
 @property  {os_unfair_lock_s=I} processExtensionMapLock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_EXExtensionProcessMannger sharedInstance]

  // instance methods
  -[_EXExtensionProcessMannger .cxx_destruct]
  -[_EXExtensionProcessMannger processDidInvalidate:]
  -[_EXExtensionProcessMannger _init]
  -[_EXExtensionProcessMannger processForExtension:error:]
  -[_EXExtensionProcessMannger processExtensionMap]
  -[_EXExtensionProcessMannger setProcessExtensionMap:]
  -[_EXExtensionProcessMannger processExtensionMapLock]
  -[_EXExtensionProcessMannger setProcessExtensionMapLock:]


_EXExtensionPoint : NSObject <EXExtensionPoint, NSCopying>
 @property  NSString *identifier
 @property  NSDictionary *SDKDictionary
 @property  unsigned int platform
 @property  unsigned long variant
 @property  NSURL *url
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_EXExtensionPoint variant]
  -[_EXExtensionPoint SDKDictionary]
  -[_EXExtensionPoint setPlatform:]
  -[_EXExtensionPoint platform]
  -[_EXExtensionPoint url]
  -[_EXExtensionPoint .cxx_destruct]
  -[_EXExtensionPoint setUrl:]
  -[_EXExtensionPoint identifier]
  -[_EXExtensionPoint setVariant:]
  -[_EXExtensionPoint reset]
  -[_EXExtensionPoint setIdentifier:]
  -[_EXExtensionPoint copyWithZone:]
  -[_EXExtensionPoint setSDKDictionary:]


EXEnumeratorConfig : NSObject <EXEnumeratorConfig>
 @property  NSURL *rootURL
 @property  NSURL *xpcExtensionsCache
 @property  NSURL *xpcExtensionPointsCache
 @property  NSURL *extensionPointsConfigURL
 @property  NSDictionary *legacyExtensionPointAllowList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EXEnumeratorConfig .cxx_destruct]
  -[EXEnumeratorConfig init]
  -[EXEnumeratorConfig rootURL]
  -[EXEnumeratorConfig xpcExtensionsCache]
  -[EXEnumeratorConfig xpcExtensionPointsCache]
  -[EXEnumeratorConfig extensionPointsConfigURL]
  -[EXEnumeratorConfig legacyExtensionPointAllowList]


EXEnumerator : NSEnumerator
  // class methods
  +[EXEnumerator extensionPointDefinitionEnumeratorWithSDKDictionary:]
  +[EXEnumerator extensionPointDefinitionEnumerator]
  +[EXEnumerator config]
  +[EXEnumerator extensionURLEnumerator]
  +[EXEnumerator extensionCacheFileURLs]
  +[EXEnumerator extensionInstallDirectoryURLs]
  +[EXEnumerator _extensionLiveEnumerator]
  +[EXEnumerator extensionPointCacheFileURLs]
  +[EXEnumerator extensionPointDefinitionDirectoryURLs]
  +[EXEnumerator _extensionPointLiveEnumerator]
  +[EXEnumerator extensionEnumerator]


EXExtensionPointEnumerator : NSEnumerator
 @property  <EXEnumeratorConfig> *config
 @property  NSDictionary *extensionPoints
 @property  NSEnumerator *extensionPointsKeyEnumerator
 @property  NSDictionary *currentExtensionPointDict
 @property  _EXExtensionPoint *currentExtensionPoint
 @property  BOOL validateExtensionPoints

  // class methods
  +[EXExtensionPointEnumerator enumerateExtensionPointsInDirectoryAtURL:block:]

  // instance methods
  -[EXExtensionPointEnumerator nextObject]
  -[EXExtensionPointEnumerator .cxx_destruct]
  -[EXExtensionPointEnumerator config]
  -[EXExtensionPointEnumerator initWithCacheURLs:config:]
  -[EXExtensionPointEnumerator initWithSDKDictionary:urls:config:]
  -[EXExtensionPointEnumerator initWithSDKDictionary:config:]
  -[EXExtensionPointEnumerator validateExtensionPointIdentifier:sdkDictionary:]
  -[EXExtensionPointEnumerator translateXPCCacheDictionary:]
  -[EXExtensionPointEnumerator synthesizeNSExtensionKeysInDictionary:identifier:]
  -[EXExtensionPointEnumerator validateExtensionPoints]
  -[EXExtensionPointEnumerator extensionPoints]
  -[EXExtensionPointEnumerator extensionPointsKeyEnumerator]
  -[EXExtensionPointEnumerator currentExtensionPointDict]
  -[EXExtensionPointEnumerator currentExtensionPoint]


EXOSExtensionEnumerator : NSEnumerator
 @property  NSArray *extensionPaths
 @property  NSEnumerator *extensionPathsEnumerator

  // class methods
  +[EXOSExtensionEnumerator enumerateExtensionsInDirectoryAtURL:block:]

  // instance methods
  -[EXOSExtensionEnumerator nextObject]
  -[EXOSExtensionEnumerator .cxx_destruct]
  -[EXOSExtensionEnumerator extensionPaths]
  -[EXOSExtensionEnumerator initWithCacheURLs:]
  -[EXOSExtensionEnumerator initWithCacheURLs:paths:]
  -[EXOSExtensionEnumerator extensionPathsEnumerator]


_EXDefaults : NSObject
 @property  BOOL implementsNSExtension
 @property  BOOL queryPredicatesEvaluatedOutOfProcess
 @property  BOOL useLSDExtensionKitServiceForDiscovery
 @property  BOOL useLSDExtensionKitServiceForLaunch
 @property  BOOL preferInProcessDiscovery
 @property  BOOL rejectExtensionRequestsWithInsecureInputItems
 @property  BOOL requiresLoadOperatorSecureDecoding
 @property  BOOL appleInternal
 @property  BOOL allowsAppleInternalComponents
 @property  BOOL supportExtensionKitConfigPath
 @property  BOOL hostRequiresEntitlements
 @property  BOOL enforceLegacyExtensionPointAllowList
 @property  BOOL allowSimulatedJetsam
 @property  NSSet *errorTypes
 @property  NSSet *plistTypes
 @property  NSSet *plistAndValueTypes

  // class methods
  +[_EXDefaults sharedInstance]

  // instance methods
  -[_EXDefaults appleInternal]
  -[_EXDefaults _init]
  -[_EXDefaults plistTypes]
  -[_EXDefaults hostRequiresEntitlements]
  -[_EXDefaults allowSimulatedJetsam]
  -[_EXDefaults rejectExtensionRequestsWithInsecureInputItems]
  -[_EXDefaults useLSDExtensionKitServiceForDiscovery]
  -[_EXDefaults useLSDExtensionKitServiceForLaunch]
  -[_EXDefaults preferInProcessDiscovery]
  -[_EXDefaults queryPredicatesEvaluatedOutOfProcess]
  -[_EXDefaults allowsAppleInternalComponents]
  -[_EXDefaults requiresLoadOperatorSecureDecoding]
  -[_EXDefaults supportExtensionKitConfigPath]
  -[_EXDefaults enforceLegacyExtensionPointAllowList]
  -[_EXDefaults implementsNSExtension]
  -[_EXDefaults errorTypes]
  -[_EXDefaults plistAndValueTypes]


_EXActiveQuery : NSObject
 @property  NSMutableSet *internalObservers
 @property  _EXDiscoveryController *discoveryController
 @property  NSSet *currentUUIDs
 @property  NSSet *observers
 @property  _EXQuery *query

  // instance methods
  -[_EXActiveQuery query]
  -[_EXActiveQuery .cxx_destruct]
  -[_EXActiveQuery update]
  -[_EXActiveQuery isEqual:]
  -[_EXActiveQuery addObserver:]
  -[_EXActiveQuery observers]
  -[_EXActiveQuery removeObserver:]
  -[_EXActiveQuery initWithQuery:discoveryController:]
  -[_EXActiveQuery discoveryController]
  -[_EXActiveQuery isEqualToActiveQuery:]
  -[_EXActiveQuery internalObservers]
  -[_EXActiveQuery currentUUIDs]
  -[_EXActiveQuery setCurrentUUIDs:]


_EXActiveQueryUpdate : NSObject <NSSecureCoding>
 @property  NSSet *addedExtensions
 @property  NSSet *removedUUIDs

  // class methods
  +[_EXActiveQueryUpdate supportsSecureCoding]

  // instance methods
  -[_EXActiveQueryUpdate initWithCoder:]
  -[_EXActiveQueryUpdate .cxx_destruct]
  -[_EXActiveQueryUpdate encodeWithCoder:]
  -[_EXActiveQueryUpdate initWithCurrentExtensions:updatedExtensions:]
  -[_EXActiveQueryUpdate addedExtensions]
  -[_EXActiveQueryUpdate removedUUIDs]
  -[_EXActiveQueryUpdate initWithAddedExtensions:removedUUIDs:]


EXService_Subsystem : NSObject <PKModularService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EXService_Subsystem sharedInstance]
  +[EXService_Subsystem initForPlugInKit]

  // instance methods
  -[EXService_Subsystem beginUsing:withBundle:]


EXXPCUtil : NSObject
  // class methods
  +[EXXPCUtil sharedInstance]
  +[EXXPCUtil checkInWithLaunchd]
  +[EXXPCUtil servicePidFromXPCConnection:]
  +[EXXPCUtil addExternalServiceForPid:path:overlay:]
  +[EXXPCUtil assertIsExtensionProcess]


(extensionPointConfigurationAdditions)
	// instance methods
	-[(extensionPointConfigurationAdditions) _EX_stringForKey:]
	-[(extensionPointConfigurationAdditions) _EX_dictionaryForKey:]
	-[(extensionPointConfigurationAdditions) _EX_boolForKey:]
	-[(extensionPointConfigurationAdditions) _EX_requiredHostEntitlementsForExtensionPointIdentifier:]
	-[(extensionPointConfigurationAdditions) _EX_arrayForKey:]
	-[(extensionPointConfigurationAdditions) _EX_boolForKey:defaultValue:]
	-[(extensionPointConfigurationAdditions) _EX_objectForKey:ofClass:]
	-[(extensionPointConfigurationAdditions) _EX_dictionaryByRemovingObjectForKey:]
	-[(extensionPointConfigurationAdditions) _EX_dictionaryBySettingObject:forKey:]
	-[(extensionPointConfigurationAdditions) _EX_dictionaryBySettingValuesForKeysWithDictionary:]

NSExtensionContext(ExtensionKitAdditions)
	// class methods
	+[NSExtensionContext(ExtensionKitAdditions) _allowedItemPayloadClasses]

	// instance methods
	-[NSExtensionContext(ExtensionKitAdditions) _derivedExtensionAuxiliaryHostProtocol]

NSXPCConnection(EXTransaction)
	// instance methods
	-[NSXPCConnection(EXTransaction) _EX_transaction]
	-[NSXPCConnection(EXTransaction) _EX_setTransaction:]
	-[NSXPCConnection(EXTransaction) _EX_extensionProcess]
	-[NSXPCConnection(EXTransaction) _EX_setExtensionProcess:]

(ExtensionKitAdditions)
	// instance methods
	-[(ExtensionKitAdditions) _EX_isApplication]
	-[(ExtensionKitAdditions) _EX_isDirectory]
	-[(ExtensionKitAdditions) _EX_containingApplicationBundleURL]
	-[(ExtensionKitAdditions) _EX_isContainedInDirectory:]

(ExtensionKitAdditions)
	// instance methods
	-[(ExtensionKitAdditions) _EX_objectAtIndex:ofClass:]
	-[(ExtensionKitAdditions) _EX_dictionaryAtIndex:]
	-[(ExtensionKitAdditions) _EX_arrayAtIndex:]
	-[(ExtensionKitAdditions) _EX_stringAtIndex:]
	-[(ExtensionKitAdditions) _EX_boolAtIndex:]
	-[(ExtensionKitAdditions) _EX_boolAtIndex:defaultValue:]

(ExtensionKitAdditions)
	// class methods
	+[(ExtensionKitAdditions) _EX_parameterError]
	+[(ExtensionKitAdditions) _EX_unimplementedError]

NSXPCInterface(EXService)
	// class methods
	+[NSXPCInterface(EXService) _EX_combinedServiceInterface]
	+[NSXPCInterface(EXService) _EX_discoveryServiceInterface]
	+[NSXPCInterface(EXService) _EX_launchServiceInterface]
	+[NSXPCInterface(EXService) _EX_queryResultsInterface]
	+[NSXPCInterface(EXService) _EX_extensionSetClasses]

NSExtension(ExtensionKitAdditions)
	// class methods
	+[NSExtension(ExtensionKitAdditions) extensionInfoForCurrentProcess]
	+[NSExtension(ExtensionKitAdditions) extensionRepresentedBy:error:]

	// instance methods
	-[NSExtension(ExtensionKitAdditions) setPreferredLanguages:]
	-[NSExtension(ExtensionKitAdditions) preferredLanguages]
	-[NSExtension(ExtensionKitAdditions) containingBundleIdentifier]
	-[NSExtension(ExtensionKitAdditions) requiresMacCatalystBehavior]

01 00 0400 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationExtensionRecord 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleRecord 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSDatabaseContext 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSExtensionPointRecord 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSObserver 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSEnumerator 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionItem 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListenerEndpoint 
01 00 0300 /System/Library/PrivateFrameworks/PlugInKit.framework/PlugInKit: PKHost 
01 00 0300 /System/Library/PrivateFrameworks/PlugInKit.framework/PlugInKit: PKService 
01 00 0200 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSLaunchContext 
01 00 0200 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSLaunchRequest 
01 00 0200 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
01 00 0200 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentifier 
01 00 0200 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentity 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: _NSExtensionContextVendor 
