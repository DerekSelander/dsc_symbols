|| __DATA.__objc_data _OBJC_CLASS_$_AWFaceDetectAttentionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AWRemoteAttentionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWFaceDetectAttentionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWRemoteAttentionEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AWAttentionAwarenessClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AWAttentionAwarenessConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AWAttentionEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AWAttentionLostEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AWAttentionAwarenessClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AWAttentionAwarenessConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AWAttentionEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AWAttentionLostEvent
|| __TEXT.__text __AWAttentionServiceEventFilterFactory
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientPushValueForDistributionKey
__ BackBoardServices: _BKSHIDServicesIsSmartCoverClosed
__ BiometricKit: _OBJC_CLASS_$_BKDevice
__ BiometricKit: _OBJC_CLASS_$_BKDeviceManager
__ BiometricKit: _OBJC_CLASS_$_BKFaceDetectOperation
__ BiometricKit: _OBJC_METACLASS_$_BKFaceDetectOperation
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _CFAllocatorAllocate
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFPlugInAddInstanceForFactory
__ CoreFoundation: _CFPlugInRemoveInstanceForFactory
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyMultiple
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFUUIDCreateFromUUIDBytes
__ CoreFoundation: _CFUUIDGetConstantUUIDWithBytes
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDefaultMallocZone
__ Foundation: _NSObjectNotAvailableException
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ IOKit: _IOHIDEventCreateCopy
__ IOKit: _IOHIDEventGetIntegerValue
__ IOKit: _IOHIDEventGetTimeStamp
__ IOKit: _IOHIDEventGetType
__ PowerLog: _PLLogTimeSensitiveRegisteredEvent
__ libAccessibility.dylib: __AXSAttentionAwarenessFeaturesEnabled
__ libAccessibility.dylib: _kAXSAttentionAwarenessFeaturesEnabledNotification
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _ftruncate
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _shm_open
__ libSystem.B.dylib: _shm_unlink
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _vm_page_size
__ libSystem.B.dylib: dyld_stub_binder
__ libbsm.0.dylib: _audit_token_to_pidversion
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
AWScheduler : NSObject /usr/lib/libc++.1.dylib
 @property  <AWSchedulerObserver> *observer
 @property  AWAttentionSampler *attentionSampler

  // class methods
  +[AWScheduler sharedScheduler]
  +[AWScheduler sharedUnitTestScheduler]

  // instance methods
  -[AWScheduler observer]
  -[AWScheduler .cxx_destruct]
  -[AWScheduler setObserver:]
  -[AWScheduler addClient:]
  -[AWScheduler initForUnitTest:]
  -[AWScheduler removeInvalidClientsWithConnection:]
  -[AWScheduler removeInvalidClients]
  -[AWScheduler processHIDEvent:mask:timestamp:]
  -[AWScheduler setSmartCoverClosed:]
  -[AWScheduler armEvents]
  -[AWScheduler reevaluate]
  -[AWScheduler attentionSampler]


AWEventStatistics : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AWEventStatistics sharedStatistics]

  // instance methods
  -[AWEventStatistics init]
  -[AWEventStatistics .cxx_destruct]
  -[AWEventStatistics logEvent:]


AWPersistentDataManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AWPersistentDataManager sharedManager]
  +[AWPersistentDataManager initAWPersistentDataHeader:]
  +[AWPersistentDataManager validateAWPersistentDataHeader:]
  +[AWPersistentDataManager truncateAWPersistentData:error:]
  +[AWPersistentDataManager AWPersistentDataExists:]

  // instance methods
  -[AWPersistentDataManager init]
  -[AWPersistentDataManager .cxx_destruct]
  -[AWPersistentDataManager loadPersistentData]
  -[AWPersistentDataManager checkPreconditions:]
  -[AWPersistentDataManager isValidIndexForConnection:index:error:]
  -[AWPersistentDataManager nextFreeIndex]
  -[AWPersistentDataManager openWithConnection:error:]
  -[AWPersistentDataManager closeWithConnection:index:error:]
  -[AWPersistentDataManager clientStateWithConnection:index:error:]


AWAttentionAwareService : NSObject /usr/lib/libc++.1.dylib <AWAttentionAwareService, AWSchedulerObserver, NSXPCListenerDelegate>
 @property  unsigned long clientCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AWAttentionAwareService sharedAttentionService]

  // instance methods
  -[AWAttentionAwareService init]
  -[AWAttentionAwareService dealloc]
  -[AWAttentionAwareService .cxx_destruct]
  -[AWAttentionAwareService listener:shouldAcceptNewConnection:]
  -[AWAttentionAwareService clientCount]
  -[AWAttentionAwareService setClientCount:]
  -[AWAttentionAwareService processHIDEvent:mask:timestamp:]
  -[AWAttentionAwareService setSmartCoverClosed:]
  -[AWAttentionAwareService clientCountChangedFrom:to:forScheduler:]
  -[AWAttentionAwareService addClient:clientConfig:clientIndex:unitTestMode:reply:]
  -[AWAttentionAwareService getSupportedEventsWithReply:]
  -[AWAttentionAwareService getDebugPreferences:]
  -[AWAttentionAwareService setDebugPreference:reply:]
  -[AWAttentionAwareService outputPowerLogWithReply:]
  -[AWAttentionAwareService getUnitTestSamplerWithReply:]
  -[AWAttentionAwareService crashWithReply:]
  -[AWAttentionAwareService _createUnitTestScheduler]


AWRemoteClient : NSObject /usr/lib/libc++.1.dylib <AWRemoteClient>
 @property  NSString *identifier
 @property  unsigned long samplingInterval
 @property  unsigned long samplingDelay
 @property  BOOL invalid
 @property  int clientIndex

  // instance methods
  -[AWRemoteClient invalidate]
  -[AWRemoteClient .cxx_destruct]
  -[AWRemoteClient identifier]
  -[AWRemoteClient setIdentifier:]
  -[AWRemoteClient connection]
  -[AWRemoteClient samplingInterval]
  -[AWRemoteClient invalid]
  -[AWRemoteClient pingWithReply:]
  -[AWRemoteClient invalidateWithHandler:]
  -[AWRemoteClient setClientConfig:shouldReset:reply:]
  -[AWRemoteClient getLastEvent:]
  -[AWRemoteClient resetAttentionLostTimerWithReply:]
  -[AWRemoteClient pollWithTimeout:reply:]
  -[AWRemoteClient initWithProxy:connection:clientConfig:clientIndex:scheduler:error:]
  -[AWRemoteClient initializeClientState]
  -[AWRemoteClient _activeEventMask]
  -[AWRemoteClient _isSamplingClient]
  -[AWRemoteClient _setClientConfig:shouldReset:error:]
  -[AWRemoteClient reevaluateConfig]
  -[AWRemoteClient deliverNotification:]
  -[AWRemoteClient deliverEvent:]
  -[AWRemoteClient deliverPollEventType:event:]
  -[AWRemoteClient updateEventTimesForMask:timestamp:]
  -[AWRemoteClient notifyEvent:timestamp:metadata:]
  -[AWRemoteClient notifyEvent:timestamp:]
  -[AWRemoteClient notifyHIDEvent:mask:timestamp:]
  -[AWRemoteClient _interestedInHIDEvent:mask:metadata:]
  -[AWRemoteClient _resetAttentionLostTimer]
  -[AWRemoteClient nextAttentionLostTime:]
  -[AWRemoteClient nextSampleTime]
  -[AWRemoteClient updateDeadlinesForTime:]
  -[AWRemoteClient nextTimerForTime:]
  -[AWRemoteClient samplingDelay]
  -[AWRemoteClient clientIndex]


AWClientPreferences : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AWClientPreferences initialize]
  +[AWClientPreferences initializePreferences]


AWServiceManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AWServiceManager addObserver:]
  +[AWServiceManager removeObserver:]
  +[AWServiceManager sharedManager]
  +[AWServiceManager invokeWithService:]

  // instance methods
  -[AWServiceManager init]
  -[AWServiceManager .cxx_destruct]
  -[AWServiceManager addObserver:]
  -[AWServiceManager removeObserver:]
  -[AWServiceManager invokeWithService:]


AWClientPollWaiter : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[AWClientPollWaiter invalidate]
  -[AWClientPollWaiter .cxx_destruct]
  -[AWClientPollWaiter cancel]
  -[AWClientPollWaiter notifyPollEventType:event:]
  -[AWClientPollWaiter initWithClient:timeout:queue:block:]
  -[AWClientPollWaiter invokeClientBlock:event:]


AWAttentionSampler : NSObject /usr/lib/libc++.1.dylib
 @property  AWSampleLogger *sampleLogger
 @property  @? stateChangedCallback
 @property  int currentState
 @property  unsigned long samplingSuppressedMask
 @property  unsigned long lastTriggerTime
 @property  unsigned long lastPositiveDetectTime
 @property  unsigned long lastPollTimeoutTime
 @property  BOOL lastFaceMetadataValid
 @property  double lastPitch
 @property  double lastYaw
 @property  double lastRoll
 @property  unsigned long lastOrientation
 @property  BOOL unitTestSampling

  // instance methods
  -[AWAttentionSampler init]
  -[AWAttentionSampler .cxx_destruct]
  -[AWAttentionSampler currentState]
  -[AWAttentionSampler setCurrentState:]
  -[AWAttentionSampler lastOrientation]
  -[AWAttentionSampler setStateChangedCallback:]
  -[AWAttentionSampler stateChangedCallback]
  -[AWAttentionSampler setSmartCoverClosed:]
  -[AWAttentionSampler setUnitTestMode]
  -[AWAttentionSampler startDeadlineComputation]
  -[AWAttentionSampler updateSamplingDeadline:forClient:]
  -[AWAttentionSampler finishDeadlineComputation]
  -[AWAttentionSampler nextSampleTimeForSamplingInterval:]
  -[AWAttentionSampler minimumAttentionSamplerErrorRetryTime]
  -[AWAttentionSampler shouldSample:withDeadline:]
  -[AWAttentionSampler initWithMask:]
  -[AWAttentionSampler sampleLogger]
  -[AWAttentionSampler setSampleLogger:]
  -[AWAttentionSampler samplingSuppressedMask]
  -[AWAttentionSampler setSamplingSuppressedMask:]
  -[AWAttentionSampler lastTriggerTime]
  -[AWAttentionSampler setLastTriggerTime:]
  -[AWAttentionSampler lastPositiveDetectTime]
  -[AWAttentionSampler setLastPositiveDetectTime:]
  -[AWAttentionSampler lastPollTimeoutTime]
  -[AWAttentionSampler setLastPollTimeoutTime:]
  -[AWAttentionSampler lastFaceMetadataValid]
  -[AWAttentionSampler setLastFaceMetadataValid:]
  -[AWAttentionSampler lastPitch]
  -[AWAttentionSampler setLastPitch:]
  -[AWAttentionSampler lastYaw]
  -[AWAttentionSampler setLastYaw:]
  -[AWAttentionSampler lastRoll]
  -[AWAttentionSampler setLastRoll:]
  -[AWAttentionSampler setLastOrientation:]
  -[AWAttentionSampler unitTestSampling]


AWUnitTestSampler : NSObject /usr/lib/libc++.1.dylib <AWUnitTestSampler>
  // class methods
  +[AWUnitTestSampler sharedSampler]

  // instance methods
  -[AWUnitTestSampler init]
  -[AWUnitTestSampler .cxx_destruct]
  -[AWUnitTestSampler connect]
  -[AWUnitTestSampler _connect]
  -[AWUnitTestSampler setDisplayState:]
  -[AWUnitTestSampler setSmartCoverClosed:]
  -[AWUnitTestSampler getStatsWithBlock:]
  -[AWUnitTestSampler resetStats]
  -[AWUnitTestSampler setSampleState:]
  -[AWUnitTestSampler setSampleState:reply:]
  -[AWUnitTestSampler setSampleState:deliverEvent:]
  -[AWUnitTestSampler setSampleState:deliverEvent:reply:]
  -[AWUnitTestSampler setDisplayState:reply:]
  -[AWUnitTestSampler setDisplayCallback:]
  -[AWUnitTestSampler setSmartCoverClosed:reply:]
  -[AWUnitTestSampler setSmartCoverCallback:]
  -[AWUnitTestSampler setPearlErrorState:]
  -[AWUnitTestSampler setPearlErrorState:reply:]
  -[AWUnitTestSampler invokeSampler:]


AWUnitTestFaceDetectOperation : BKFaceDetectOperation /System/Library/PrivateFrameworks/AggregateDictionary.framework/AggregateDictionary
 @property  AWUnitTestPearlDevice *unitTestDevice

  // instance methods
  -[AWUnitTestFaceDetectOperation init]
  -[AWUnitTestFaceDetectOperation dealloc]
  -[AWUnitTestFaceDetectOperation .cxx_destruct]
  -[AWUnitTestFaceDetectOperation cancel]
  -[AWUnitTestFaceDetectOperation state]
  -[AWUnitTestFaceDetectOperation startWithError:]
  -[AWUnitTestFaceDetectOperation startWithReply:]
  -[AWUnitTestFaceDetectOperation awFinishWithReason:]
  -[AWUnitTestFaceDetectOperation awDeliverFaceFound]
  -[AWUnitTestFaceDetectOperation awSetFaceFound]
  -[AWUnitTestFaceDetectOperation awSetFaceDetectError]
  -[AWUnitTestFaceDetectOperation unitTestDevice]
  -[AWUnitTestFaceDetectOperation setUnitTestDevice:]


AWUnitTestPearlDevice : NSObject /usr/lib/libc++.1.dylib <AWUnitTestSampler>
 @property  <BKDevicePearlDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *queue
 @property  ^{?=QQQ} sampleStatsPtr
 @property  BOOL facePresent
 @property  BOOL pearlError

  // class methods
  +[AWUnitTestPearlDevice sharedDevice]

  // instance methods
  -[AWUnitTestPearlDevice init]
  -[AWUnitTestPearlDevice setQueue:]
  -[AWUnitTestPearlDevice queue]
  -[AWUnitTestPearlDevice delegate]
  -[AWUnitTestPearlDevice setDelegate:]
  -[AWUnitTestPearlDevice .cxx_destruct]
  -[AWUnitTestPearlDevice createPresenceDetectOperationWithError:]
  -[AWUnitTestPearlDevice setDisplayState:]
  -[AWUnitTestPearlDevice setSmartCoverClosed:]
  -[AWUnitTestPearlDevice getStatsWithBlock:]
  -[AWUnitTestPearlDevice resetStats]
  -[AWUnitTestPearlDevice setSampleState:]
  -[AWUnitTestPearlDevice setSampleState:reply:]
  -[AWUnitTestPearlDevice setSampleState:deliverEvent:]
  -[AWUnitTestPearlDevice setSampleState:deliverEvent:reply:]
  -[AWUnitTestPearlDevice setDisplayState:reply:]
  -[AWUnitTestPearlDevice setDisplayCallback:]
  -[AWUnitTestPearlDevice setSmartCoverClosed:reply:]
  -[AWUnitTestPearlDevice setSmartCoverCallback:]
  -[AWUnitTestPearlDevice setPearlErrorState:]
  -[AWUnitTestPearlDevice setPearlErrorState:reply:]
  -[AWUnitTestPearlDevice deliverPearlDeviceState:]
  -[AWUnitTestPearlDevice deliverPearlDeviceEvent:]
  -[AWUnitTestPearlDevice sampleStatsPtr]
  -[AWUnitTestPearlDevice setSampleStatsPtr:]
  -[AWUnitTestPearlDevice facePresent]
  -[AWUnitTestPearlDevice setFacePresent:]
  -[AWUnitTestPearlDevice pearlError]
  -[AWUnitTestPearlDevice setPearlError:]


AWPearlAttentionSampler : AWAttentionSampler <BKDevicePearlDelegate, BKFaceDetectOperationDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AWPearlAttentionSampler init]
  -[AWPearlAttentionSampler .cxx_destruct]
  -[AWPearlAttentionSampler currentState]
  -[AWPearlAttentionSampler setCurrentState:]
  -[AWPearlAttentionSampler operation:stateChanged:]
  -[AWPearlAttentionSampler operation:finishedWithReason:]
  -[AWPearlAttentionSampler operation:presenceStateChanged:]
  -[AWPearlAttentionSampler operation:faceDetectStateChanged:]
  -[AWPearlAttentionSampler device:pearlEventOccurred:]
  -[AWPearlAttentionSampler device:pearlStateChanged:]
  -[AWPearlAttentionSampler setDisplayState:]
  -[AWPearlAttentionSampler initForUnitTest:]
  -[AWPearlAttentionSampler setSmartCoverClosed:]
  -[AWPearlAttentionSampler updateSamplingDeadline:forClient:]
  -[AWPearlAttentionSampler nextSampleTimeForSamplingInterval:]
  -[AWPearlAttentionSampler minimumAttentionSamplerErrorRetryTime]
  -[AWPearlAttentionSampler shouldSample:withDeadline:]
  -[AWPearlAttentionSampler triggerFaceDetectWithDeadline:]
  -[AWPearlAttentionSampler faceDetectStalled:]
  -[AWPearlAttentionSampler finishingFaceDetect:]
  -[AWPearlAttentionSampler cancelFaceDetect:]
  -[AWPearlAttentionSampler updateFaceState:]
  -[AWPearlAttentionSampler updateFaceState:withFaceMetadata:]
  -[AWPearlAttentionSampler pearlAttentionSamplerErrorOccurred]
  -[AWPearlAttentionSampler startStalledTimerForOperation:]
  -[AWPearlAttentionSampler cancelStalledTimer]
  -[AWPearlAttentionSampler updateSuppressedMaskWithDisplayState:smartCoverClosed:]
  -[AWPearlAttentionSampler setDisplayStateFromNotification]
  -[AWPearlAttentionSampler unitTestSampler]


AWAttentionAwarenessClientConfig : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AWAttentionAwarenessClientConfig sharedClientConfig]

  // instance methods
  -[AWAttentionAwarenessClientConfig init]
  -[AWAttentionAwarenessClientConfig dealloc]
  -[AWAttentionAwarenessClientConfig .cxx_destruct]
  -[AWAttentionAwarenessClientConfig updateState:]
  -[AWAttentionAwarenessClientConfig supportedEvents]
  -[AWAttentionAwarenessClientConfig addTag:]
  -[AWAttentionAwarenessClientConfig notifySupportedEventsChangedWithQueue:block:]
  -[AWAttentionAwarenessClientConfig cancelNotification:]
  -[AWAttentionAwarenessClientConfig tagForIndex:]
  -[AWAttentionAwarenessClientConfig incrementTagIndexRefCount:]
  -[AWAttentionAwarenessClientConfig decrementTagIndexRefCount:]


AWAttentionAwarenessConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *identifier
 @property  <NSCopying> *tag
 @property  unsigned long notificationMask
 @property  unsigned long eventMask
 @property  unsigned long attentionLostEventMask
 @property  double samplingInterval
 @property  double samplingDelay
 @property  BOOL sampleWhileAbsent
 @property  NSSet *attentionLostTimeouts
 @property  NSDictionary *attentionLostTimeoutDictionary

  // class methods
  +[AWAttentionAwarenessConfiguration initialize]
  +[AWAttentionAwarenessConfiguration supportsSecureCoding]
  +[AWAttentionAwarenessConfiguration supportedEvents]
  +[AWAttentionAwarenessConfiguration notifySupportedEventsChangedWithQueue:block:]
  +[AWAttentionAwarenessConfiguration cancelNotification:]
  +[AWAttentionAwarenessConfiguration supportedEventsString]

  // instance methods
  -[AWAttentionAwarenessConfiguration init]
  -[AWAttentionAwarenessConfiguration dealloc]
  -[AWAttentionAwarenessConfiguration copyWithZone:]
  -[AWAttentionAwarenessConfiguration encodeWithCoder:]
  -[AWAttentionAwarenessConfiguration initWithCoder:]
  -[AWAttentionAwarenessConfiguration .cxx_destruct]
  -[AWAttentionAwarenessConfiguration identifier]
  -[AWAttentionAwarenessConfiguration setIdentifier:]
  -[AWAttentionAwarenessConfiguration tag]
  -[AWAttentionAwarenessConfiguration setSamplingInterval:]
  -[AWAttentionAwarenessConfiguration samplingInterval]
  -[AWAttentionAwarenessConfiguration setTag:]
  -[AWAttentionAwarenessConfiguration eventMask]
  -[AWAttentionAwarenessConfiguration setEventMask:]
  -[AWAttentionAwarenessConfiguration validateWithError:]
  -[AWAttentionAwarenessConfiguration setAttentionLostTimeouts:]
  -[AWAttentionAwarenessConfiguration samplingDelay]
  -[AWAttentionAwarenessConfiguration tagIndex]
  -[AWAttentionAwarenessConfiguration setAttentionLostEventMask:]
  -[AWAttentionAwarenessConfiguration setSamplingDelay:]
  -[AWAttentionAwarenessConfiguration setAttentionLostTimeout:]
  -[AWAttentionAwarenessConfiguration attentionLostTimeouts]
  -[AWAttentionAwarenessConfiguration setAttentionLostTimeoutDictionary:]
  -[AWAttentionAwarenessConfiguration attentionLostTimeoutDictionary]
  -[AWAttentionAwarenessConfiguration allowedHIDEventsForRemoteEvent]
  -[AWAttentionAwarenessConfiguration setAllowedHIDEventsForRemoteEvent:]
  -[AWAttentionAwarenessConfiguration notificationMask]
  -[AWAttentionAwarenessConfiguration setNotificationMask:]
  -[AWAttentionAwarenessConfiguration attentionLostEventMask]
  -[AWAttentionAwarenessConfiguration sampleWhileAbsent]
  -[AWAttentionAwarenessConfiguration setSampleWhileAbsent:]


AWAttentionEvent : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  unsigned long eventMask
 @property  double timestamp
 @property  id tag

  // class methods
  +[AWAttentionEvent supportsSecureCoding]

  // instance methods
  -[AWAttentionEvent encodeWithCoder:]
  -[AWAttentionEvent initWithCoder:]
  -[AWAttentionEvent .cxx_destruct]
  -[AWAttentionEvent timestamp]
  -[AWAttentionEvent tag]
  -[AWAttentionEvent eventMask]
  -[AWAttentionEvent tagIndex]
  -[AWAttentionEvent validateMask]
  -[AWAttentionEvent initWithTimestamp:tagIndex:eventMask:]
  -[AWAttentionEvent updateWithConfig:]


AWAttentionLostEvent : AWAttentionEvent <NSSecureCoding>
 @property  double attentionLostTimeout
 @property  id associatedObject

  // class methods
  +[AWAttentionLostEvent supportsSecureCoding]

  // instance methods
  -[AWAttentionLostEvent encodeWithCoder:]
  -[AWAttentionLostEvent initWithCoder:]
  -[AWAttentionLostEvent .cxx_destruct]
  -[AWAttentionLostEvent validateMask]
  -[AWAttentionLostEvent updateWithConfig:]
  -[AWAttentionLostEvent initWithTimestamp:tagIndex:attentionLostTimeout:]
  -[AWAttentionLostEvent attentionLostTimeout]
  -[AWAttentionLostEvent associatedObject]


AWFaceDetectAttentionEvent : AWAttentionEvent <NSSecureCoding>
 @property  BOOL metadataValid
 @property  double pitch
 @property  double yaw
 @property  double roll
 @property  unsigned long orientation

  // class methods
  +[AWFaceDetectAttentionEvent supportsSecureCoding]

  // instance methods
  -[AWFaceDetectAttentionEvent encodeWithCoder:]
  -[AWFaceDetectAttentionEvent initWithCoder:]
  -[AWFaceDetectAttentionEvent orientation]
  -[AWFaceDetectAttentionEvent pitch]
  -[AWFaceDetectAttentionEvent yaw]
  -[AWFaceDetectAttentionEvent roll]
  -[AWFaceDetectAttentionEvent validateMask]
  -[AWFaceDetectAttentionEvent initWithTimestamp:tagIndex:faceMetadata:]
  -[AWFaceDetectAttentionEvent isMetadataValid]


AWRemoteAttentionEvent : AWAttentionEvent <NSSecureCoding>
 @property  long long usagePage
 @property  long long usage

  // class methods
  +[AWRemoteAttentionEvent supportsSecureCoding]

  // instance methods
  -[AWRemoteAttentionEvent encodeWithCoder:]
  -[AWRemoteAttentionEvent initWithCoder:]
  -[AWRemoteAttentionEvent usage]
  -[AWRemoteAttentionEvent usagePage]
  -[AWRemoteAttentionEvent validateMask]
  -[AWRemoteAttentionEvent initWithTimestamp:tagIndex:remoteMetadata:]


AWAttentionAwarenessClient : NSObject /usr/lib/libc++.1.dylib <AWServiceObserver, AWFrameworkClient>
 @property  AWAttentionAwarenessConfiguration *configuration
 @property  AWAttentionEvent *lastEvent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AWAttentionAwarenessClient initialize]

  // instance methods
  -[AWAttentionAwarenessClient init]
  -[AWAttentionAwarenessClient .cxx_destruct]
  -[AWAttentionAwarenessClient setConfiguration:]
  -[AWAttentionAwarenessClient configuration]
  -[AWAttentionAwarenessClient invalidateWithError:]
  -[AWAttentionAwarenessClient notify:]
  -[AWAttentionAwarenessClient connect:]
  -[AWAttentionAwarenessClient suspendWithError:]
  -[AWAttentionAwarenessClient resumeWithError:]
  -[AWAttentionAwarenessClient pollForAttentionWithTimeout:queue:block:error:]
  -[AWAttentionAwarenessClient cancelPollForAttentionWithError:]
  -[AWAttentionAwarenessClient notifyEvent:]
  -[AWAttentionAwarenessClient notifyPollEventType:event:]
  -[AWAttentionAwarenessClient unitTestSampler]
  -[AWAttentionAwarenessClient serviceInterrupted]
  -[AWAttentionAwarenessClient setConfiguration:shouldReset:error:]
  -[AWAttentionAwarenessClient setConfiguration:shouldReset:]
  -[AWAttentionAwarenessClient _invokeRequiringClient:error:block:]
  -[AWAttentionAwarenessClient invokeRequiringClient:error:block:]
  -[AWAttentionAwarenessClient lastEvent]
  -[AWAttentionAwarenessClient resetAttentionLostTimeoutWithError:]
  -[AWAttentionAwarenessClient setNotificationHandlerWithQueue:block:]
  -[AWAttentionAwarenessClient setEventHandlerWithQueue:block:]
  -[AWAttentionAwarenessClient pollForAttentionWithTimeout:event:error:]
  -[AWAttentionAwarenessClient invalidateRemoteClientWithError:]
  -[AWAttentionAwarenessClient setUnitTestMode:]


AWSampleLogData : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *identifier
 @property  unsigned long samplingInterval
 @property  BOOL pollingClient
 @property  unsigned long cumulativeSamplingTime
 @property  unsigned long samplingStartTime

  // instance methods
  -[AWSampleLogData .cxx_destruct]
  -[AWSampleLogData identifier]
  -[AWSampleLogData setIdentifier:]
  -[AWSampleLogData setSamplingInterval:]
  -[AWSampleLogData samplingInterval]
  -[AWSampleLogData pollingClient]
  -[AWSampleLogData setPollingClient:]
  -[AWSampleLogData cumulativeSamplingTime]
  -[AWSampleLogData setCumulativeSamplingTime:]
  -[AWSampleLogData samplingStartTime]
  -[AWSampleLogData setSamplingStartTime:]


AWSampleLogger : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AWSampleLogger sharedLogger]
  +[AWSampleLogger client:attentionStateChange:]
  +[AWSampleLogger client:event:]
  +[AWSampleLogger client:pollEventType:event:]

  // instance methods
  -[AWSampleLogger init]
  -[AWSampleLogger .cxx_destruct]
  -[AWSampleLogger _outputPowerLog]
  -[AWSampleLogger outputPowerLog]
  -[AWSampleLogger powerLogName:event:]
  -[AWSampleLogger startUpdate]
  -[AWSampleLogger updateDataForClient:deadline:]
  -[AWSampleLogger shouldSample:]
  -[AWSampleLogger sampleStartedWithDeadline:]
  -[AWSampleLogger sampleSucceeded]


01 00 0140 /System/Library/PrivateFrameworks/BiometricKit.framework/BiometricKit: BKDevice 
01 00 0140 /System/Library/PrivateFrameworks/BiometricKit.framework/BiometricKit: BKDeviceManager 
01 00 0140 /System/Library/PrivateFrameworks/BiometricKit.framework/BiometricKit: BKFaceDetectOperation 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0800 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
