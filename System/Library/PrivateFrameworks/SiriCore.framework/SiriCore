|| __DATA.__data __COUNT_QUERY
|| __DATA.__data __DB_SCHEMA0
|| __DATA.__data __DB_SCHEMA1
|| __DATA.__data __DB_SCHEMA2
|| __DATA.__data __DB_SCHEMA3
|| __DATA.__data __DB_SCHEMA4
|| __DATA.__data __DB_SCHEMA5
|| __DATA.__data __DB_SCHEMA6
|| __DATA.__data __DB_SCHEMA7
|| __DATA.__data __DB_VERS
|| __DATA.__data __DELETE_OF_RECORD
|| __DATA.__data __DELETE_OF_TYPE
|| __DATA.__data __ENUM_QUERY
|| __DATA.__data __REMOVE_OF_TYPE
|| __DATA.__data __SYNC_DB_DOMAIN
|| __DATA.__objc_data _OBJC_CLASS_$_SASetRestrictionsThunk
|| __DATA.__objc_data _OBJC_CLASS_$_SiriCoreConnectionQueueMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_SiriCoreErrorInfo
|| __DATA.__objc_data _OBJC_CLASS_$_SiriCoreLinkRecommendationInfo
|| __DATA.__objc_data _OBJC_CLASS_$_SiriCoreNetworkQualityReport
|| __DATA.__objc_data _OBJC_CLASS_$_SiriCoreNetworkSessionProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SiriCoreSQLiteTableConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_SiriCoreSyncRecord
|| __DATA.__objc_data _OBJC_CLASS_$__SAMetricsSendCompletionsProxy
|| __DATA.__objc_data _OBJC_CLASS_$__SiriCoreSQLiteIndexInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_SASetRestrictionsThunk
|| __DATA.__objc_data _OBJC_METACLASS_$_SiriCoreConnectionQueueMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_SiriCoreErrorInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_SiriCoreLinkRecommendationInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_SiriCoreNetworkQualityReport
|| __DATA.__objc_data _OBJC_METACLASS_$_SiriCoreNetworkSessionProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SiriCoreSQLiteTableConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_SiriCoreSyncRecord
|| __DATA.__objc_data _OBJC_METACLASS_$__SAMetricsSendCompletionsProxy
|| __DATA.__objc_data _OBJC_METACLASS_$__SiriCoreSQLiteIndexInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$__SAMetricsSendCompletionsProxy._blocks
|| __DATA_CONST.__const _SiriCoreAceSerializationErrorDomain
|| __DATA_CONST.__const _SiriCoreAceSerializationErrorUserInfoBytesAvailableKey
|| __DATA_CONST.__const _SiriCoreAceSerializationErrorUserInfoBytesNeededKey
|| __DATA_CONST.__const _SiriCoreAceSerializationErrorUserInfoPlistKey
|| __DATA_CONST.__const _SiriCoreDataCompressorErrorDomain
|| __DATA_CONST.__const _SiriCoreSQLiteAPIErrorDomain
|| __DATA_CONST.__const _SiriCoreSQLiteDatabaseErrorDomain
|| __DATA_CONST.__const _SiriCoreSQLiteDatabaseErrorKey
|| __DATA_CONST.__const _SiriCoreSiriConnectionErrorDomain
|| __DATA_CONST.__const _SiriCoreSiriConnectionHTTPErrorStatusCodeKey
|| __DATA_CONST.__const _SiriCoreSiriConnectionHTTPRedirectValueKey
|| __DATA_CONST.__const _SiriCoreSiriConnectionShouldSkipIDSOnNextAttemptKey
|| __DATA_CONST.__const _SiriCoreSiriConnectionShouldSkipTuscanyOnNextAttemptKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreAceConnectionAnalysisInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreAceSerialization
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreConnectionMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreConnectionTCPInfoMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreConnectionType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreDataCompressor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreDataDecompressor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreNWConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreNWContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreNetworkActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreNetworkActivityTracing
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreNetworkManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreNetworkingAnalytics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCorePingInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSQLiteColumnConstraint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSQLiteColumnDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSQLiteDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSQLiteIndexDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSQLiteQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSQLiteQueryCriterion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSQLiteQueryOrder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSQLiteQueryRange
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSQLiteQueryResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSQLiteStatement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSQLiteTableDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSiriBackgroundConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSiriConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSiriConnectionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSiriDaemonLaunchContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSpeechPacket
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSymptomsReporter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreSyncDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreWiFiManagerClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreZlibDataCompressor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SiriCoreZlibDataDecompressor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SiriCoreSQLiteColumnInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SiriCoreSQLiteTableInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreAceConnectionAnalysisInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreAceSerialization
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreConnectionMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreConnectionTCPInfoMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreConnectionType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreDataCompressor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreDataDecompressor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreNWConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreNWContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreNetworkActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreNetworkActivityTracing
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreNetworkManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreNetworkingAnalytics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCorePingInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSQLiteColumnConstraint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSQLiteColumnDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSQLiteDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSQLiteIndexDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSQLiteQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSQLiteQueryCriterion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSQLiteQueryOrder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSQLiteQueryRange
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSQLiteQueryResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSQLiteStatement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSQLiteTableDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSiriBackgroundConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSiriConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSiriConnectionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSiriDaemonLaunchContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSpeechPacket
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSymptomsReporter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreSyncDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreWiFiManagerClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreZlibDataCompressor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SiriCoreZlibDataDecompressor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SiriCoreSQLiteColumnInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SiriCoreSQLiteTableInfo
|| __TEXT.__const _SiriCoreHeartbeatInterval
|| __TEXT.__const _SiriCoreHeartbeatTolerance
|| __TEXT.__text _SiriCoreConnectionTechnologyGetDescription
|| __TEXT.__text _SiriCoreGetConnectionNetworkPathReport
|| __TEXT.__text _SiriCoreGetConnectionReadyReport
|| __TEXT.__text _SiriCoreNetworkQuality
|| __TEXT.__text _SiriCoreSQLiteDatabaseIsErrorUnrecoverable
|| __TEXT.__text _SiriCoreSQLiteQueryCreateColumnDefinition
|| __TEXT.__text _SiriCoreSQLiteQueryCreateCriterionExpression
|| __TEXT.__text _SiriCoreSQLiteQueryCreateEscapedAndCommaSeparatedString
|| __TEXT.__text _SiriCoreSQLiteQueryCreateOrderExpression
|| __TEXT.__text _SiriCoreSQLiteQueryCreateParametrizedAndCommaSeparatedString
|| __TEXT.__text _SiriCoreSQLiteQueryCreateRangeExpression
|| __TEXT.__text _SiriCoreUUIDStringCreate
|| __TEXT.__text _SiriCoreUserAgentStringCreate
|| __TEXT.__text __SiriCoreSharedResourcesDirectory
|| __TEXT.__text _productTypeFromUserAgentString
__ AppSupport: _CPSharedResourcesDirectory
__ AssistantServices: _AFAnalyticsContextCreateWithError
__ AssistantServices: _AFAnalyticsContextsMerge
__ AssistantServices: _AFAnalyticsEventTypeGetName
__ AssistantServices: _AFBuildVersion
__ AssistantServices: _AFDeviceName
__ AssistantServices: _AFDeviceRegionCode
__ AssistantServices: _AFDeviceSupportsSiriUOD
__ AssistantServices: _AFDeviceSupportsWiFiLPASMode
__ AssistantServices: _AFErrorEnumerate
__ AssistantServices: _AFHasCellularData
__ AssistantServices: _AFIsHorseman
__ AssistantServices: _AFIsInternalInstall
__ AssistantServices: _AFIsNano
__ AssistantServices: _AFMachAbsoluteTimeGetTimeInterval
__ AssistantServices: _AFNetworkingLogContextFunctional
__ AssistantServices: _AFProductName
__ AssistantServices: _AFProductType
__ AssistantServices: _AFProductVersion
__ AssistantServices: _AFSiriLogContextAnalytics
__ AssistantServices: _AFSiriLogContextConnection
__ AssistantServices: _AFSiriLogContextDaemon
__ AssistantServices: _AFSiriLogContextDaemonAce
__ AssistantServices: _AFSiriLogContextDatabase
__ AssistantServices: _AFSiriLogContextSession
__ AssistantServices: _AFSiriLogContextSync
__ AssistantServices: _AFSiriSpeechErrorDomain
__ AssistantServices: _OBJC_CLASS_$_AFAggregator
__ AssistantServices: _OBJC_CLASS_$_AFAnalytics
__ AssistantServices: _OBJC_CLASS_$_AFError
__ AssistantServices: _OBJC_CLASS_$_AFFeatureFlags
__ AssistantServices: _OBJC_CLASS_$_AFMemoryPressureObserver
__ AssistantServices: _OBJC_CLASS_$_AFPreferences
__ AssistantServices: __AFMemoryPressureConditionGetName
__ AssistantServices: __AFPreferencesForceOnDeviceOnlyDictationEnabled
__ AssistantServices: __AFPreferencesGetTuscanyStatus
__ AssistantServices: __AFPreferencesNetworkStackOverride
__ AssistantServices: __AFPreferencesShouldUseTFO
__ AssistantServices: __AFPreferencesShowAllDialogVariantsEnabled
__ AssistantServices: _kAFAssistantErrorDomain
__ CFNetwork: _CFHTTPMessageAppendBytes
__ CFNetwork: _CFHTTPMessageCopyAllHeaderFields
__ CFNetwork: _CFHTTPMessageCopyBody
__ CFNetwork: _CFHTTPMessageCopyHeaderFieldValue
__ CFNetwork: _CFHTTPMessageCopySerializedMessage
__ CFNetwork: _CFHTTPMessageCreateEmpty
__ CFNetwork: _CFHTTPMessageCreateRequest
__ CFNetwork: _CFHTTPMessageGetResponseStatusCode
__ CFNetwork: _CFHTTPMessageIsHeaderComplete
__ CFNetwork: _CFHTTPMessageSetHeaderFieldValue
__ CFNetwork: __kCFStreamPropertyConnectionViabilityChangedBlock
__ CFNetwork: __kCFStreamPropertyTCPInfo
__ CFNetwork: __kCFStreamSSLUseFalseStart
__ CFNetwork: __kCFStreamSocketSetNoDelay
__ CFNetwork: _kCFHTTPVersion1_0
__ CFNetwork: _kCFStreamPropertyConnectionFastFallbackEnabled
__ CFNetwork: _kCFStreamPropertyConnectionIsCellular
__ CFNetwork: _kCFStreamPropertyConnectionIsMultipath
__ CFNetwork: _kCFStreamPropertyInterfaceIdentifier
__ CFNetwork: _kCFStreamPropertyMPTCPConnectedSubflowCount
__ CFNetwork: _kCFStreamPropertyMPTCPPrimarySubflowInterfaceName
__ CFNetwork: _kCFStreamPropertyMPTCPSubflowCount
__ CFNetwork: _kCFStreamPropertyMPTCPSubflowSwitchCounts
__ CFNetwork: _kCFStreamPropertySSLSettings
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFReadStreamSetDispatchQueue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _CFWriteStreamSetDispatchQueue
__ CoreFoundation: _CFWriteStreamSetProperty
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFBooleanTrue
__ CoreTelephony: _CTRadioAccessTechnologyCDMA1x
__ CoreTelephony: _CTRadioAccessTechnologyCDMAEVDORev0
__ CoreTelephony: _CTRadioAccessTechnologyCDMAEVDORevA
__ CoreTelephony: _CTRadioAccessTechnologyCDMAEVDORevB
__ CoreTelephony: _CTRadioAccessTechnologyEdge
__ CoreTelephony: _CTRadioAccessTechnologyGPRS
__ CoreTelephony: _CTRadioAccessTechnologyHSDPA
__ CoreTelephony: _CTRadioAccessTechnologyHSUPA
__ CoreTelephony: _CTRadioAccessTechnologyLTE
__ CoreTelephony: _CTRadioAccessTechnologyNR
__ CoreTelephony: _CTRadioAccessTechnologyNRNSA
__ CoreTelephony: _CTRadioAccessTechnologyWCDMA
__ CoreTelephony: _CTRadioAccessTechnologyeHRPD
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CTTelephonyNetworkInfo
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionDormancySuspendAssertionCreateWithExpirationCB
__ CoreTelephony: __CTServerForceFastDormancy
__ CoreTelephony: _kCTDataConnectionServiceTypeInternet
__ CoreTelephony: _kCTSIMSupportSIMStatusReady
__ CrashReporterSupport: _WriteStackshotReport_async
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSFilePathErrorKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSMapGet
__ Foundation: _NSMapInsert
__ Foundation: _NSMapRemove
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDecimalNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ MobileWiFi: _WiFiDeviceClientCopyCurrentNetwork
__ MobileWiFi: _WiFiManagerClientCopyDevices
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientGetPower
__ MobileWiFi: _WiFiManagerClientSetType
__ MobileWiFi: _WiFiNetworkGetChannel
__ MobileWiFi: _WiFiNetworkGetChannelWidthInMHz
__ MobileWiFi: _WiFiNetworkGetIntProperty
__ MobileWiFi: _WiFiNetworkGetOperatingBand
__ MobileWiFi: _WiFiNetworkGetPhyMode
__ MobileWiFi: _WiFiNetworkIsCaptive
__ Network: __nw_content_context_final_send
__ Network: __nw_parameters_configure_protocol_disable
__ Network: _kNWErrorDomainPOSIX
__ Network: _nw_activity_activate
__ Network: _nw_activity_complete_with_reason_and_underlying_error
__ Network: _nw_activity_create
__ Network: _nw_activity_get_label
__ Network: _nw_activity_get_token
__ Network: _nw_activity_set_parent_activity
__ Network: _nw_array_get_count
__ Network: _nw_array_get_object_at_index
__ Network: _nw_connection_access_establishment_report
__ Network: _nw_connection_cancel
__ Network: _nw_connection_copy_attempted_endpoint_array
__ Network: _nw_connection_copy_connected_path
__ Network: _nw_connection_copy_connected_remote_endpoint
__ Network: _nw_connection_copy_current_path
__ Network: _nw_connection_copy_description
__ Network: _nw_connection_copy_protocol_metadata
__ Network: _nw_connection_copy_tcp_info
__ Network: _nw_connection_create
__ Network: _nw_connection_end_activity
__ Network: _nw_connection_fillout_tcp_statistics
__ Network: _nw_connection_get_connected_socket
__ Network: _nw_connection_get_id
__ Network: _nw_connection_multipath_copy_subflow_counts
__ Network: _nw_connection_multipath_get_primary_subflow_interface_index
__ Network: _nw_connection_multipath_get_subflow_count
__ Network: _nw_connection_receive
__ Network: _nw_connection_send
__ Network: _nw_connection_set_better_path_available_handler
__ Network: _nw_connection_set_event_handler
__ Network: _nw_connection_set_queue
__ Network: _nw_connection_set_read_close_handler
__ Network: _nw_connection_set_viability_changed_handler
__ Network: _nw_connection_set_write_close_handler
__ Network: _nw_connection_start
__ Network: _nw_connection_start_activity
__ Network: _nw_connection_uses_multipath
__ Network: _nw_context_create
__ Network: _nw_context_set_isolate_protocol_cache
__ Network: _nw_context_set_isolate_protocol_stack
__ Network: _nw_context_set_privacy_level
__ Network: _nw_context_set_scheduling_mode
__ Network: _nw_endpoint_copy_port_string
__ Network: _nw_endpoint_create_host
__ Network: _nw_endpoint_get_description
__ Network: _nw_endpoint_get_type
__ Network: _nw_endpoint_set_alternate_port
__ Network: _nw_error_copy_cf_error
__ Network: _nw_error_get_error_code
__ Network: _nw_error_get_error_domain
__ Network: _nw_establishment_report_copy_proxy_endpoint
__ Network: _nw_establishment_report_enumerate_protocols
__ Network: _nw_establishment_report_enumerate_resolutions
__ Network: _nw_establishment_report_get_attempt_started_after_milliseconds
__ Network: _nw_establishment_report_get_duration_milliseconds
__ Network: _nw_establishment_report_get_previous_attempt_count
__ Network: _nw_establishment_report_get_proxy_configured
__ Network: _nw_establishment_report_get_used_proxy
__ Network: _nw_interface_get_index
__ Network: _nw_interface_get_name
__ Network: _nw_interface_get_type
__ Network: _nw_parameters_create_secure_tcp
__ Network: _nw_parameters_set_context
__ Network: _nw_parameters_set_data_mode
__ Network: _nw_parameters_set_expired_dns_behavior
__ Network: _nw_parameters_set_indefinite
__ Network: _nw_parameters_set_initial_data_payload
__ Network: _nw_parameters_set_multipath_service
__ Network: _nw_parameters_set_required_interface_type
__ Network: _nw_parameters_set_source_application
__ Network: _nw_parameters_set_tfo
__ Network: _nw_parameters_set_tls_session_id
__ Network: _nw_parameters_set_traffic_class
__ Network: _nw_path_copy_interface
__ Network: _nw_path_create_evaluator_for_endpoint
__ Network: _nw_path_enumerate_gateways
__ Network: _nw_path_enumerate_interfaces
__ Network: _nw_path_evaluator_cancel
__ Network: _nw_path_evaluator_set_update_handler
__ Network: _nw_path_get_status
__ Network: _nw_path_has_dns
__ Network: _nw_path_has_ipv4
__ Network: _nw_path_has_ipv6
__ Network: _nw_path_is_constrained
__ Network: _nw_path_is_expensive
__ Network: _nw_path_uses_interface_type
__ Network: _nw_protocol_copy_tls_definition
__ Network: _nw_tcp_options_set_enable_keepalive
__ Network: _nw_tcp_options_set_keepalive_count
__ Network: _nw_tcp_options_set_keepalive_idle_time
__ Network: _nw_tcp_options_set_keepalive_interval
__ Network: _nw_tcp_options_set_no_delay
__ Network: _nw_tcp_options_set_retransmit_connection_drop_time
__ Network: _nw_tls_copy_sec_protocol_options
__ NetworkServiceProxy: _NetworkServiceProxyEnableInParameters
__ NetworkServiceProxy: _NetworkServiceProxyIsEnabled
__ NetworkServiceProxy: _NetworkServiceProxySetServiceNameForConnection
__ NetworkServiceProxy: _NetworkServiceProxySetServiceNameInParameters
__ NetworkServiceProxy: _OBJC_CLASS_$_NSPControlConnection
__ SAObjects: _OBJC_CLASS_$_AceObject
__ SAObjects: _OBJC_CLASS_$_SABaseCommand
__ SAObjects: _OBJC_CLASS_$_SACFFetchScriptCommand
__ SAObjects: _OBJC_CLASS_$_SAGetResultObjects
__ SAObjects: _OBJC_CLASS_$_SAMetrics
__ SAObjects: _OBJC_CLASS_$_SAResultSelected
__ SAObjects: _OBJC_CLASS_$_SARollbackRequest
__ SAObjects: _OBJC_CLASS_$_SASCancelSpeech
__ SAObjects: _OBJC_CLASS_$_SASDisableServerEndpointer
__ SAObjects: _OBJC_CLASS_$_SASEnableServerEndpointer
__ SAObjects: _OBJC_CLASS_$_SASFinishSpeech
__ SAObjects: _OBJC_CLASS_$_SASServerBoundConfusionNetwork
__ SAObjects: _OBJC_CLASS_$_SASSpeechCorrectionStatistics
__ SAObjects: _OBJC_CLASS_$_SASSpeechEndpointIdentified
__ SAObjects: _OBJC_CLASS_$_SASSpeechPacket
__ SAObjects: _OBJC_CLASS_$_SASStartCorrectedSpeechRequest
__ SAObjects: _OBJC_CLASS_$_SASStartSpeech
__ SAObjects: _OBJC_CLASS_$_SASUpdateAudioInfo
__ SAObjects: _OBJC_CLASS_$_SASetClientFlowState
__ SAObjects: _OBJC_CLASS_$_SASetRestrictions
__ SAObjects: _OBJC_CLASS_$_SAStartBackgroundActionRequest
__ SAObjects: _OBJC_CLASS_$_SASyncChunk
__ SAObjects: _OBJC_CLASS_$_SASyncFinished
__ SAObjects: _OBJC_CLASS_$_SASyncGetAnchors
__ SAObjects: _OBJC_CLASS_$_SAUIGetResponseAlternatives
__ SAObjects: _OBJC_METACLASS_$_SASetRestrictions
__ SAObjects: _SAAceVersionCurrent
__ SAObjects: _SAAddResultObjectsClassIdentifier
__ SAObjects: _SAAppsLaunchAppClassIdentifier
__ SAObjects: _SAConnectionPolicyTypeCUSTOM_DNSValue
__ SAObjects: _SAConnectionPolicyTypePOPValue
__ SAObjects: _SASGroupIdentifier
__ SAObjects: _SASSpeechPacketClassIdentifier
__ SAObjects: _SAUIAddViewsClassIdentifier
__ Security: _sec_protocol_metadata_get_negotiated_tls_protocol_version
__ Security: _sec_protocol_options_add_tls_application_protocol
__ Security: _sec_protocol_options_set_max_tls_protocol_version
__ Security: _sec_protocol_options_set_tls_false_start_enabled
__ Security: _sec_protocol_options_set_tls_resumption_enabled
__ Security: _sec_protocol_options_set_tls_tickets_enabled
__ SiriAnalytics: _OBJC_CLASS_$_AssistantSiriAnalytics
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETBluetoothDevice
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETClientEvent
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETClientEventMetadata
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETDebugNetworkConnectionStatePreparationSnapshotCaptured
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETDebugNetworkConnectionStateReadySnapshotCaptured
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETDebugNetworkInterface
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETDebugSessionConnectionNetwork
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETDebugSessionConnectionPingInfo
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETDebugSessionConnectionQuality
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETEndpoint
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETError
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETEstablishmentResolution
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETHandShakeProtocol
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETNetworkConnectionStatePreparationSnapshotCaptured
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETNetworkConnectionStateReadySnapshotCaptured
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETNetworkInterface
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETPathInterface
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETPeerConnectionFailed
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETProxyConfiguration
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETSessionConnectionFailed
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETSessionConnectionHttpHeaderCreated
__ SiriInstrumentation: _OBJC_CLASS_$_NETSchemaNETSessionConnectionNetwork
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaRequestLink
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaRequestLinkInfo
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaUUID
__ SymptomDiagnosticReporter: _OBJC_CLASS_$_SDRDiagnosticReporter
__ SymptomDiagnosticReporter: _kSymptomDiagnosticActionProbeDuration
__ SymptomDiagnosticReporter: _kSymptomDiagnosticActionProbePacketCapture
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_data_destructor_free
__ libSystem.B.dylib: __dispatch_data_empty
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_type_data
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_data_apply
__ libSystem.B.dylib: _dispatch_data_create
__ libSystem.B.dylib: _dispatch_data_create_concat
__ libSystem.B.dylib: _dispatch_data_create_subrange
__ libSystem.B.dylib: _dispatch_data_get_size
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getnameinfo
__ libSystem.B.dylib: _getsockopt
__ libSystem.B.dylib: _if_indextoname
__ libSystem.B.dylib: _if_nametoindex
__ libSystem.B.dylib: _ioctl
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _proc_pidinfo
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _uuid_is_null
__ libSystem.B.dylib: _xpc_data_create
__ libSystem.B.dylib: _xpc_data_get_bytes_ptr
__ libSystem.B.dylib: _xpc_data_get_length
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_dictionary_get_count
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_uint64_get_value
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libsqlite3.dylib: _sqlite3_bind_blob64
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_parameter_count
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close_v2
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_name
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_errstr
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_extended_errcode
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_step
__ libsqlite3.dylib: _sqlite3_wal_checkpoint_v2
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit_
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit_
SiriCoreNetworkManager : NSObject <CoreTelephonyClientCarrierBundleDelegate, CoreTelephonyClientDataDelegate, CoreTelephonyClientSubscriberDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SiriCoreNetworkManager sharedInstance]
  +[SiriCoreNetworkManager _ifnameTypeForName:isWiFi:isCellular:]
  +[SiriCoreNetworkManager connectionSubTypeForCellularInterface]
  +[SiriCoreNetworkManager getCarrierName:signalStrength:subscriptionCount:]
  +[SiriCoreNetworkManager connectionTypeForInterfaceName:isCellular:]
  +[SiriCoreNetworkManager connectionTypeForInterface:]
  +[SiriCoreNetworkManager acquireDormancySuspendAssertion:]
  +[SiriCoreNetworkManager releaseDormancySuspendAssertion:]

  // instance methods
  -[SiriCoreNetworkManager preferredDataSimChanged:]
  -[SiriCoreNetworkManager carrierBundleChange:]
  -[SiriCoreNetworkManager simStatusDidChange:status:]
  -[SiriCoreNetworkManager addObserver:]
  -[SiriCoreNetworkManager dealloc]
  -[SiriCoreNetworkManager .cxx_destruct]
  -[SiriCoreNetworkManager removeObserver:]
  -[SiriCoreNetworkManager _init]
  -[SiriCoreNetworkManager _wiFiManagerClient]
  -[SiriCoreNetworkManager _pathUpdated:]
  -[SiriCoreNetworkManager startMonitoringNetworkForHost:]
  -[SiriCoreNetworkManager _stopMonitoringNetwork]
  -[SiriCoreNetworkManager stopMonitoringNetwork]
  -[SiriCoreNetworkManager _getNetworkPerformanceFeed]
  -[SiriCoreNetworkManager getNetworkPerformanceFeed]
  -[SiriCoreNetworkManager cellularNetworkQuality]
  -[SiriCoreNetworkManager wifiNetworkQuality]
  -[SiriCoreNetworkManager anyNetworkQuality]
  -[SiriCoreNetworkManager getQualityReport:]
  -[SiriCoreNetworkManager _reportCellularInstantQuality]
  -[SiriCoreNetworkManager _reportCellularHistoricalQuality]
  -[SiriCoreNetworkManager _reportWiFiInstantQuality]
  -[SiriCoreNetworkManager _reportWiFiHistoricalQuality]
  -[SiriCoreNetworkManager getSignalStrength:subscriptionCount:]
  -[SiriCoreNetworkManager _getCarrierName:]
  -[SiriCoreNetworkManager forceFastDormancy]
  -[SiriCoreNetworkManager releaseWiFiAssertion]
  -[SiriCoreNetworkManager acquireWiFiAssertion:]
  -[SiriCoreNetworkManager _subscribeToLinkRecommendations:]
  -[SiriCoreNetworkManager _getLinkRecommendationSafe:recommendation:]
  -[SiriCoreNetworkManager registerWithWirelessCoexManager]
  -[SiriCoreNetworkManager deRegisterWithWirelessCoexManager]
  -[SiriCoreNetworkManager getLinkRecommendation:recommendation:]
  -[SiriCoreNetworkManager updateLinkMetrics:completion:]
  -[SiriCoreNetworkManager resetLinkMetrics]
  -[SiriCoreNetworkManager _dataSubscriptionContextChange:]
  -[SiriCoreNetworkManager _defaultBTLinkRecommendation]
  -[SiriCoreNetworkManager _defaultWiFiLinkRecommendation]
  -[SiriCoreNetworkManager _getConnectionSuccessRate:hasMetric:]


SiriCoreNetworkQualityReport : NSObject
 @property  long long cellularInstant
 @property  long long cellularHistorical
 @property  long long wifiInstant
 @property  long long wifiHistorical

  // instance methods
  -[SiriCoreNetworkQualityReport cellularInstant]
  -[SiriCoreNetworkQualityReport setCellularInstant:]
  -[SiriCoreNetworkQualityReport cellularHistorical]
  -[SiriCoreNetworkQualityReport setCellularHistorical:]
  -[SiriCoreNetworkQualityReport wifiInstant]
  -[SiriCoreNetworkQualityReport setWifiInstant:]
  -[SiriCoreNetworkQualityReport wifiHistorical]
  -[SiriCoreNetworkQualityReport setWifiHistorical:]


SiriCoreSQLiteQueryRange : NSObject <NSCopying>
 @property  unsigned long limit
 @property  unsigned long offset

  // instance methods
  -[SiriCoreSQLiteQueryRange limit]
  -[SiriCoreSQLiteQueryRange initWithLimit:]
  -[SiriCoreSQLiteQueryRange copyWithZone:]
  -[SiriCoreSQLiteQueryRange offset]
  -[SiriCoreSQLiteQueryRange initWithLimit:offset:]


SiriCoreWiFiManagerClient : NSObject
  // instance methods
  -[SiriCoreWiFiManagerClient isWifiEnabled]
  -[SiriCoreWiFiManagerClient dealloc]
  -[SiriCoreWiFiManagerClient init]
  -[SiriCoreWiFiManagerClient releaseWiFiAssertion]
  -[SiriCoreWiFiManagerClient acquireWiFiAssertion:]
  -[SiriCoreWiFiManagerClient _primitiveWiFiManagerClient]
  -[SiriCoreWiFiManagerClient _setWiFiManagerClientType:]
  -[SiriCoreWiFiManagerClient hasAssociatedNetworkWithRSSI:andSNR:andPhyMode:andChannelInfo:isCaptive:]
  -[SiriCoreWiFiManagerClient registerOneShotEnabledHandler:]


SiriCoreSQLiteColumnDescription : NSObject <NSCopying>
 @property  NSString *name
 @property  NSString *type
 @property  NSArray *constraints

  // class methods
  +[SiriCoreSQLiteColumnDescription integerPrimaryKeyColumnWithName:]
  +[SiriCoreSQLiteColumnDescription uniqueTextColumnWithName:]

  // instance methods
  -[SiriCoreSQLiteColumnDescription type]
  -[SiriCoreSQLiteColumnDescription .cxx_destruct]
  -[SiriCoreSQLiteColumnDescription copyWithZone:]
  -[SiriCoreSQLiteColumnDescription name]
  -[SiriCoreSQLiteColumnDescription initWithName:type:constraintsProvider:]
  -[SiriCoreSQLiteColumnDescription initWithName:type:constraints:]
  -[SiriCoreSQLiteColumnDescription constraints]


SiriCoreAceConnectionAnalysisInfo : NSObject
 @property  NSURL *connectionURL
 @property  int interfaceIndex
 @property  NSNumber *sendBufferSize
 @property  BOOL wwanPreferred
 @property  SiriCoreConnectionType *connectionType
 @property  NSString *policyId

  // instance methods
  -[SiriCoreAceConnectionAnalysisInfo sendBufferSize]
  -[SiriCoreAceConnectionAnalysisInfo policyId]
  -[SiriCoreAceConnectionAnalysisInfo .cxx_destruct]
  -[SiriCoreAceConnectionAnalysisInfo connectionType]
  -[SiriCoreAceConnectionAnalysisInfo setPolicyId:]
  -[SiriCoreAceConnectionAnalysisInfo interfaceIndex]
  -[SiriCoreAceConnectionAnalysisInfo wwanPreferred]
  -[SiriCoreAceConnectionAnalysisInfo connectionURL]
  -[SiriCoreAceConnectionAnalysisInfo initWithConnectionURL:interfaceIndex:sendBufferSize:wwanPreferred:connectionType:policyId:]


SiriCoreConnectionMetrics : NSObject
 @property  NSNumber *timeUntilOpen
 @property  NSNumber *timeUntilFirstByteRead
 @property  NSNumber *attemptCount
 @property  NSNumber *metricsCount
 @property  NSNumber *meanPing
 @property  NSNumber *pingCount
 @property  NSNumber *unacknowledgedPingCount
 @property  NSDictionary *tcpInfoMetricsByInterfaceName
 @property  NSNumber *subflowCount
 @property  NSNumber *connectedSubflowCount
 @property  NSString *primarySubflowInterfaceName
 @property  NSDictionary *subflowSwitchCounts
 @property  SiriCoreConnectionMetrics *remoteMetrics
 @property  NSString *connectionMethod
 @property  NSString *connectionEdgeID
 @property  NSArray *connectionMethodHistory
 @property  NSString *connectionEdgeType
 @property  NSNumber *connectionFallbackReason
 @property  NSNumber *connectionDelay
 @property  NSNumber *firstTxByteDelay
 @property  NSString *carrierName
 @property  NSNumber *signalStrengthBars
 @property  NSString *providerStyle
 @property  NSString *policyId
 @property  NSDictionary *flowNetworkInterfaceType
 @property  NSString *wifiPhyMode
 @property  NSString *wifiChannelInfo
 @property  NSNumber *rssi
 @property  NSNumber *snr
 @property  NSNumber *isCaptive
 @property  NSDictionary *symptomsBasedNetworkQuality
 @property  NSNumber *dnsResolutionTime
 @property  NSNumber *connectionStartTimeToDNSResolutionTimeMsec
 @property  NSNumber *connectionEstablishmentTimeMsec
 @property  NSNumber *connectionStartTimeToConnectionEstablishmentTimeMsec
 @property  NSNumber *tlsHandshakeTimeMsec
 @property  NSNumber *connectionStartTimeToTLSHandshakeTimeMsec
 @property  NSNumber *idsLastMessageDelay
 @property  NSNumber *idsLastSocketDelay
 @property  NSNumber *idsLastSocketOpenError
 @property  NSString *tlsVersion
 @property  NSNumber *simSubscriptions

  // instance methods
  -[SiriCoreConnectionMetrics setSnr:]
  -[SiriCoreConnectionMetrics snr]
  -[SiriCoreConnectionMetrics setAttemptCount:]
  -[SiriCoreConnectionMetrics policyId]
  -[SiriCoreConnectionMetrics attemptCount]
  -[SiriCoreConnectionMetrics setRssi:]
  -[SiriCoreConnectionMetrics setSignalStrengthBars:]
  -[SiriCoreConnectionMetrics setIsCaptive:]
  -[SiriCoreConnectionMetrics rssi]
  -[SiriCoreConnectionMetrics setPingCount:]
  -[SiriCoreConnectionMetrics carrierName]
  -[SiriCoreConnectionMetrics pingCount]
  -[SiriCoreConnectionMetrics .cxx_destruct]
  -[SiriCoreConnectionMetrics isCaptive]
  -[SiriCoreConnectionMetrics setPolicyId:]
  -[SiriCoreConnectionMetrics signalStrengthBars]
  -[SiriCoreConnectionMetrics setCarrierName:]
  -[SiriCoreConnectionMetrics metricsCount]
  -[SiriCoreConnectionMetrics tlsVersion]
  -[SiriCoreConnectionMetrics setTlsVersion:]
  -[SiriCoreConnectionMetrics wifiPhyMode]
  -[SiriCoreConnectionMetrics setWifiPhyMode:]
  -[SiriCoreConnectionMetrics firstTxByteDelay]
  -[SiriCoreConnectionMetrics setFirstTxByteDelay:]
  -[SiriCoreConnectionMetrics connectionDelay]
  -[SiriCoreConnectionMetrics setConnectionDelay:]
  -[SiriCoreConnectionMetrics setConnectedSubflowCount:]
  -[SiriCoreConnectionMetrics connectedSubflowCount]
  -[SiriCoreConnectionMetrics setUnacknowledgedPingCount:]
  -[SiriCoreConnectionMetrics unacknowledgedPingCount]
  -[SiriCoreConnectionMetrics setConnectionMethod:]
  -[SiriCoreConnectionMetrics setDnsResolutionTime:]
  -[SiriCoreConnectionMetrics connectionMethod]
  -[SiriCoreConnectionMetrics primarySubflowInterfaceName]
  -[SiriCoreConnectionMetrics setPrimarySubflowInterfaceName:]
  -[SiriCoreConnectionMetrics dnsResolutionTime]
  -[SiriCoreConnectionMetrics setConnectionMetricsFromStream:isPop:withCompletion:]
  -[SiriCoreConnectionMetrics setConnectionMetricsFromStreamForDirect:withCompletion:]
  -[SiriCoreConnectionMetrics setConnectionMetricsFromStreamForPOP:withCompletion:]
  -[SiriCoreConnectionMetrics setTCPInfoMetricsByInterfaceName:]
  -[SiriCoreConnectionMetrics _setConnectionMetricsTCPInfo:]
  -[SiriCoreConnectionMetrics _setConnectionMetricsFromNSPControlConnection:withCompletion:]
  -[SiriCoreConnectionMetrics setConnectionMetricsFromConnection:isPop:isMPTCP:attemptedEndpoints:completion:]
  -[SiriCoreConnectionMetrics setConnectionMetricsFromNWConnectionForDirect:isMPTCP:attemptedEndpoints:withCompletion:]
  -[SiriCoreConnectionMetrics setConnectionMetricsFromNWConnectionForPOP:withCompletion:]
  -[SiriCoreConnectionMetrics setConnectionMetricsForIDS:messageDelay:openErrorCode:]
  -[SiriCoreConnectionMetrics getConnectionMetricsDescription]
  -[SiriCoreConnectionMetrics timeUntilOpen]
  -[SiriCoreConnectionMetrics setTimeUntilOpen:]
  -[SiriCoreConnectionMetrics timeUntilFirstByteRead]
  -[SiriCoreConnectionMetrics setTimeUntilFirstByteRead:]
  -[SiriCoreConnectionMetrics setMetricsCount:]
  -[SiriCoreConnectionMetrics meanPing]
  -[SiriCoreConnectionMetrics setMeanPing:]
  -[SiriCoreConnectionMetrics tcpInfoMetricsByInterfaceName]
  -[SiriCoreConnectionMetrics subflowCount]
  -[SiriCoreConnectionMetrics setSubflowCount:]
  -[SiriCoreConnectionMetrics subflowSwitchCounts]
  -[SiriCoreConnectionMetrics setSubflowSwitchCounts:]
  -[SiriCoreConnectionMetrics remoteMetrics]
  -[SiriCoreConnectionMetrics setRemoteMetrics:]
  -[SiriCoreConnectionMetrics connectionEdgeID]
  -[SiriCoreConnectionMetrics setConnectionEdgeID:]
  -[SiriCoreConnectionMetrics connectionMethodHistory]
  -[SiriCoreConnectionMetrics setConnectionMethodHistory:]
  -[SiriCoreConnectionMetrics connectionEdgeType]
  -[SiriCoreConnectionMetrics setConnectionEdgeType:]
  -[SiriCoreConnectionMetrics connectionFallbackReason]
  -[SiriCoreConnectionMetrics setConnectionFallbackReason:]
  -[SiriCoreConnectionMetrics providerStyle]
  -[SiriCoreConnectionMetrics setProviderStyle:]
  -[SiriCoreConnectionMetrics flowNetworkInterfaceType]
  -[SiriCoreConnectionMetrics setFlowNetworkInterfaceType:]
  -[SiriCoreConnectionMetrics wifiChannelInfo]
  -[SiriCoreConnectionMetrics setWifiChannelInfo:]
  -[SiriCoreConnectionMetrics symptomsBasedNetworkQuality]
  -[SiriCoreConnectionMetrics setSymptomsBasedNetworkQuality:]
  -[SiriCoreConnectionMetrics connectionStartTimeToDNSResolutionTimeMsec]
  -[SiriCoreConnectionMetrics setConnectionStartTimeToDNSResolutionTimeMsec:]
  -[SiriCoreConnectionMetrics connectionEstablishmentTimeMsec]
  -[SiriCoreConnectionMetrics setConnectionEstablishmentTimeMsec:]
  -[SiriCoreConnectionMetrics connectionStartTimeToConnectionEstablishmentTimeMsec]
  -[SiriCoreConnectionMetrics setConnectionStartTimeToConnectionEstablishmentTimeMsec:]
  -[SiriCoreConnectionMetrics tlsHandshakeTimeMsec]
  -[SiriCoreConnectionMetrics setTlsHandshakeTimeMsec:]
  -[SiriCoreConnectionMetrics connectionStartTimeToTLSHandshakeTimeMsec]
  -[SiriCoreConnectionMetrics setConnectionStartTimeToTLSHandshakeTimeMsec:]
  -[SiriCoreConnectionMetrics idsLastMessageDelay]
  -[SiriCoreConnectionMetrics setIdsLastMessageDelay:]
  -[SiriCoreConnectionMetrics idsLastSocketDelay]
  -[SiriCoreConnectionMetrics setIdsLastSocketDelay:]
  -[SiriCoreConnectionMetrics idsLastSocketOpenError]
  -[SiriCoreConnectionMetrics setIdsLastSocketOpenError:]
  -[SiriCoreConnectionMetrics simSubscriptions]
  -[SiriCoreConnectionMetrics setSimSubscriptions:]


_SiriCoreSQLiteColumnInfo : NSObject <SiriCoreSQLiteColumn>
 @property  long long identifier
 @property  NSString *name
 @property  NSString *type
 @property  BOOL isPrimaryKey
 @property  BOOL isNotNull
 @property  <SiriCoreSQLiteValue> *defaultValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SiriCoreSQLiteColumnInfo isNotNull]
  -[_SiriCoreSQLiteColumnInfo defaultValue]
  -[_SiriCoreSQLiteColumnInfo isPrimaryKey]
  -[_SiriCoreSQLiteColumnInfo identifier]
  -[_SiriCoreSQLiteColumnInfo type]
  -[_SiriCoreSQLiteColumnInfo .cxx_destruct]
  -[_SiriCoreSQLiteColumnInfo name]
  -[_SiriCoreSQLiteColumnInfo initWithIdentifier:name:type:isPrimaryKey:isNotNull:defaultValue:]


SiriCoreSQLiteColumnConstraint : NSObject <NSCopying>
 @property  NSString *name
 @property  long long type
 @property  <SiriCoreSQLiteValue> *value
 @property  unsigned long options

  // class methods
  +[SiriCoreSQLiteColumnConstraint defaultColumnConstraintWithName:value:]
  +[SiriCoreSQLiteColumnConstraint notNullColumnConstraintWithName:]
  +[SiriCoreSQLiteColumnConstraint primaryKeyColumnConstraintWithName:usesAutoIncrement:]
  +[SiriCoreSQLiteColumnConstraint uniqueColumnConstraintWithName:]

  // instance methods
  -[SiriCoreSQLiteColumnConstraint type]
  -[SiriCoreSQLiteColumnConstraint .cxx_destruct]
  -[SiriCoreSQLiteColumnConstraint options]
  -[SiriCoreSQLiteColumnConstraint copyWithZone:]
  -[SiriCoreSQLiteColumnConstraint initWithName:type:value:options:]
  -[SiriCoreSQLiteColumnConstraint value]
  -[SiriCoreSQLiteColumnConstraint name]


SiriCoreSQLiteIndexDescription : NSObject <NSCopying>
 @property  NSString *name
 @property  NSString *tableName
 @property  NSArray *columnNames
 @property  unsigned long options

  // instance methods
  -[SiriCoreSQLiteIndexDescription columnNames]
  -[SiriCoreSQLiteIndexDescription tableName]
  -[SiriCoreSQLiteIndexDescription .cxx_destruct]
  -[SiriCoreSQLiteIndexDescription options]
  -[SiriCoreSQLiteIndexDescription copyWithZone:]
  -[SiriCoreSQLiteIndexDescription name]
  -[SiriCoreSQLiteIndexDescription initWithName:tableName:columnNames:options:]


SiriCoreSQLiteDatabase : NSObject
 @property  NSString *path
 @property  long long dataProtectionClass
 @property  long long options

  // instance methods
  -[SiriCoreSQLiteDatabase executeQuery:]
  -[SiriCoreSQLiteDatabase openWithError:]
  -[SiriCoreSQLiteDatabase executeQuery:error:]
  -[SiriCoreSQLiteDatabase checkpointWriteAheadLogWithError:]
  -[SiriCoreSQLiteDatabase createTable:error:]
  -[SiriCoreSQLiteDatabase path]
  -[SiriCoreSQLiteDatabase releaseSavepointWithName:error:]
  -[SiriCoreSQLiteDatabase rollbackToSavepointWithName:error:]
  -[SiriCoreSQLiteDatabase vacuumWithError:]
  -[SiriCoreSQLiteDatabase countValuesInTableWithName:columnName:behavior:indexedBy:criterion:range:error:]
  -[SiriCoreSQLiteDatabase .cxx_destruct]
  -[SiriCoreSQLiteDatabase alterTableWithName:addColumn:error:]
  -[SiriCoreSQLiteDatabase alterTableWithName:renameTo:error:]
  -[SiriCoreSQLiteDatabase options]
  -[SiriCoreSQLiteDatabase deleteFromTableWithName:indexedBy:criterion:error:]
  -[SiriCoreSQLiteDatabase performIntegrityCheckWithError:]
  -[SiriCoreSQLiteDatabase insertIntoTableWithName:valueMap:error:]
  -[SiriCoreSQLiteDatabase closeWithError:]
  -[SiriCoreSQLiteDatabase updateTableWithName:valueMap:criterion:error:]
  -[SiriCoreSQLiteDatabase commitTransactionWithError:]
  -[SiriCoreSQLiteDatabase performForeignKeyCheckWithError:]
  -[SiriCoreSQLiteDatabase selectValueMapsFromTableWithName:columnNames:behavior:indexedBy:criterion:order:range:error:]
  -[SiriCoreSQLiteDatabase executeQueryString:error:]
  -[SiriCoreSQLiteDatabase selectValueTuplesFromTableWithName:columnNames:behavior:indexedBy:criterion:order:range:error:]
  -[SiriCoreSQLiteDatabase dropIndexWithName:error:]
  -[SiriCoreSQLiteDatabase createIndex:error:]
  -[SiriCoreSQLiteDatabase dataProtectionClass]
  -[SiriCoreSQLiteDatabase dropTableWithName:error:]
  -[SiriCoreSQLiteDatabase savepointWithName:error:]
  -[SiriCoreSQLiteDatabase insertIntoTableWithName:record:error:]
  -[SiriCoreSQLiteDatabase selectValuesFromTableWithName:columnName:behavior:indexedBy:criterion:order:range:error:]
  -[SiriCoreSQLiteDatabase rollbackTransactionWithError:]
  -[SiriCoreSQLiteDatabase fetchTableWithName:error:]
  -[SiriCoreSQLiteDatabase updateTableWithName:columnName:columnValue:criterion:error:]
  -[SiriCoreSQLiteDatabase selectRecordsFromTableWithName:columnNames:behavior:indexedBy:criterion:order:range:recordBuilder:error:]
  -[SiriCoreSQLiteDatabase fetchTableNamesWithError:]
  -[SiriCoreSQLiteDatabase beginTransactionWithError:]
  -[SiriCoreSQLiteDatabase performQuickCheckWithError:]
  -[SiriCoreSQLiteDatabase initWithPath:dataProtectionClass:options:]


SiriCoreNetworkingAnalytics : NSObject
  // class methods
  +[SiriCoreNetworkingAnalytics sharedSiriCoreNetworkingAnalytics]
  +[SiriCoreNetworkingAnalytics snapshotStateFromStringEvent:]
  +[SiriCoreNetworkingAnalytics tlsFromString:]
  +[SiriCoreNetworkingAnalytics connectionMethodFromString:]
  +[SiriCoreNetworkingAnalytics connectionTypeFromString:]
  +[SiriCoreNetworkingAnalytics networkInterfacesFromDictionary:]
  +[SiriCoreNetworkingAnalytics sessionConnectionNetworkFromSiriCoreConnectionMetrics:]
  +[SiriCoreNetworkingAnalytics phyModeFromString:]
  +[SiriCoreNetworkingAnalytics debugSessionConnectionNetworkFromSiriCoreConnectionMetrics:]
  +[SiriCoreNetworkingAnalytics debugNetworkInterfacesFromSiriCoreConnectionMetrics:]
  +[SiriCoreNetworkingAnalytics pingInfoFromSiriCoreConnectionMetrics:]
  +[SiriCoreNetworkingAnalytics qualityFromString:]
  +[SiriCoreNetworkingAnalytics sessionConnectionQualityFromSiriCoreConnectionMetrics:]
  +[SiriCoreNetworkingAnalytics endpointTypeFromNumber:]
  +[SiriCoreNetworkingAnalytics endpointFromDictionary:]
  +[SiriCoreNetworkingAnalytics endpointsFromArray:]
  +[SiriCoreNetworkingAnalytics pathTypeFromNumber:]
  +[SiriCoreNetworkingAnalytics pathInterfacesFromArray:]
  +[SiriCoreNetworkingAnalytics pathStatusFromNumber:]
  +[SiriCoreNetworkingAnalytics establishmentResolutionFromArray:]
  +[SiriCoreNetworkingAnalytics proxyConfigurationFromDictionary:]
  +[SiriCoreNetworkingAnalytics handshakeProtocolFromString:]
  +[SiriCoreNetworkingAnalytics handShakeProtocolFromArray:]
  +[SiriCoreNetworkingAnalytics connectionModeFromString:]
  +[SiriCoreNetworkingAnalytics sessionTypeFromString:]
  +[SiriCoreNetworkingAnalytics sessionStateFromString:]
  +[SiriCoreNetworkingAnalytics sessionConnectionFailedError:connectionMode:sessionType:sessionState:dormant:analysisInfo:]

  // instance methods
  -[SiriCoreNetworkingAnalytics reset]
  -[SiriCoreNetworkingAnalytics .cxx_destruct]
  -[SiriCoreNetworkingAnalytics _init]
  -[SiriCoreNetworkingAnalytics init]
  -[SiriCoreNetworkingAnalytics setNetId:]
  -[SiriCoreNetworkingAnalytics resetNetId]
  -[SiriCoreNetworkingAnalytics getSequenceNumber]
  -[SiriCoreNetworkingAnalytics setIsConnectionActive:]
  -[SiriCoreNetworkingAnalytics setNetIdAvailable:]
  -[SiriCoreNetworkingAnalytics isNetIdAvailable]
  -[SiriCoreNetworkingAnalytics increaseSequenceNumber]
  -[SiriCoreNetworkingAnalytics resetSequenceNumber]
  -[SiriCoreNetworkingAnalytics setOrchestratorRequestId:]
  -[SiriCoreNetworkingAnalytics orchestratorRequestId]
  -[SiriCoreNetworkingAnalytics emitLogDebug]
  -[SiriCoreNetworkingAnalytics _createRequestLinkInfoFromUUID:component:]
  -[SiriCoreNetworkingAnalytics _createSchemaClientEventFromUUID:]
  -[SiriCoreNetworkingAnalytics logRequestLinkBetweenOrchestratorAndNetworkComponent]
  -[SiriCoreNetworkingAnalytics logSessionConnectionHttpHeaderCreated:]
  -[SiriCoreNetworkingAnalytics logNetworkConnectionStatePreparationSnapshotCaptured:]
  -[SiriCoreNetworkingAnalytics logDebugNetworkConnectionStatePreparationSnapshotCaptured:]
  -[SiriCoreNetworkingAnalytics logNetworkConnectionStateReadySnapshotCaptured:]
  -[SiriCoreNetworkingAnalytics logDebugNetworkConnectionStateReadySnapshotCaptured:]
  -[SiriCoreNetworkingAnalytics logSessionConnectionSnapshotCaptured:]
  -[SiriCoreNetworkingAnalytics logDebugSessionConnectionSnapshotCaptured:]
  -[SiriCoreNetworkingAnalytics logSessionConnectionFailed:]
  -[SiriCoreNetworkingAnalytics logPeerConnectionFailed:]


SiriCoreSyncRecord : NSObject
 @property  NSString *key
 @property  NSString *identifier
 @property  int itemPriority
 @property  NSString *debugValue
 @property  NSData *dataValue
 @property  NSData *addedValue
 @property  NSData *metaValue
 @property  double updateTime
 @property  NSData *checkHash

  // class methods
  +[SiriCoreSyncRecord syncRecordWithKey:identifier:priority:debugValue:dataValue:addedValue:appMeta:]
  +[SiriCoreSyncRecord syncRecordWithKey:identifier:]

  // instance methods
  -[SiriCoreSyncRecord dataValue]
  -[SiriCoreSyncRecord identifier]
  -[SiriCoreSyncRecord .cxx_destruct]
  -[SiriCoreSyncRecord setIdentifier:]
  -[SiriCoreSyncRecord key]
  -[SiriCoreSyncRecord updateHash]
  -[SiriCoreSyncRecord setKey:]
  -[SiriCoreSyncRecord updateTime]
  -[SiriCoreSyncRecord setDataValue:]
  -[SiriCoreSyncRecord setUpdateTime:]
  -[SiriCoreSyncRecord itemPriority]
  -[SiriCoreSyncRecord setItemPriority:]
  -[SiriCoreSyncRecord initWithKey:identifier:priority:debugValue:dataValue:addedValue:appMeta:]
  -[SiriCoreSyncRecord setUpdateTimeToNow]
  -[SiriCoreSyncRecord debugValue]
  -[SiriCoreSyncRecord setDebugValue:]
  -[SiriCoreSyncRecord addedValue]
  -[SiriCoreSyncRecord setAddedValue:]
  -[SiriCoreSyncRecord metaValue]
  -[SiriCoreSyncRecord setMetaValue:]
  -[SiriCoreSyncRecord checkHash]
  -[SiriCoreSyncRecord setCheckHash:]


SiriCoreConnectionTCPInfoMetrics : NSObject
 @property  NSString *interfaceName
 @property  NSNumber *rttCurrent
 @property  NSNumber *rttSmoothed
 @property  NSNumber *rttVariance
 @property  NSNumber *rttBest
 @property  NSNumber *packetsSent
 @property  NSNumber *bytesSent
 @property  NSNumber *bytesRetransmitted
 @property  NSNumber *bytesUnacked
 @property  NSNumber *packetsReceived
 @property  NSNumber *bytesReceived
 @property  NSNumber *duplicateBytesReceived
 @property  NSNumber *outOfOrderBytesReceived
 @property  NSNumber *sendBufferBytes
 @property  NSNumber *sendBandwidth
 @property  NSNumber *synRetransmits
 @property  NSNumber *tfoSynDataAcked

  // instance methods
  -[SiriCoreConnectionTCPInfoMetrics interfaceName]
  -[SiriCoreConnectionTCPInfoMetrics .cxx_destruct]
  -[SiriCoreConnectionTCPInfoMetrics init]
  -[SiriCoreConnectionTCPInfoMetrics bytesRetransmitted]
  -[SiriCoreConnectionTCPInfoMetrics bytesSent]
  -[SiriCoreConnectionTCPInfoMetrics bytesReceived]
  -[SiriCoreConnectionTCPInfoMetrics packetsSent]
  -[SiriCoreConnectionTCPInfoMetrics packetsReceived]
  -[SiriCoreConnectionTCPInfoMetrics rttCurrent]
  -[SiriCoreConnectionTCPInfoMetrics rttSmoothed]
  -[SiriCoreConnectionTCPInfoMetrics rttVariance]
  -[SiriCoreConnectionTCPInfoMetrics rttBest]
  -[SiriCoreConnectionTCPInfoMetrics bytesUnacked]
  -[SiriCoreConnectionTCPInfoMetrics duplicateBytesReceived]
  -[SiriCoreConnectionTCPInfoMetrics outOfOrderBytesReceived]
  -[SiriCoreConnectionTCPInfoMetrics sendBufferBytes]
  -[SiriCoreConnectionTCPInfoMetrics sendBandwidth]
  -[SiriCoreConnectionTCPInfoMetrics synRetransmits]
  -[SiriCoreConnectionTCPInfoMetrics tfoSynDataAcked]
  -[SiriCoreConnectionTCPInfoMetrics initWithInterfaceName:rttCurrent:rttSmoothed:rttVariance:rttBest:packetsSent:bytesSent:bytesRetransmitted:bytesUnacked:packetsReceived:bytesReceived:duplicateBytesReceived:outOfOrderBytesReceived:sendBufferBytes:sendBandwidth:synRetransmits:tfoSynDataAcked:]


SiriCoreConnectionType : NSObject
  // instance methods
  -[SiriCoreConnectionType technology]
  -[SiriCoreConnectionType isEdge]
  -[SiriCoreConnectionType initWithTechnology:]
  -[SiriCoreConnectionType isWWAN]
  -[SiriCoreConnectionType canUseWiFiDirectly]
  -[SiriCoreConnectionType diagnosticConnectionType]
  -[SiriCoreConnectionType aggregatorConnectionType]


SiriCoreNetworkActivityTracing : NSObject
  // class methods
  +[SiriCoreNetworkActivityTracing sharedNetworkActivityTracing]

  // instance methods
  -[SiriCoreNetworkActivityTracing .cxx_destruct]
  -[SiriCoreNetworkActivityTracing init]
  -[SiriCoreNetworkActivityTracing networkActivityStart:activate:]
  -[SiriCoreNetworkActivityTracing networkActivityActivate:]
  -[SiriCoreNetworkActivityTracing networkActivityStop:withReason:andError:]
  -[SiriCoreNetworkActivityTracing networkActivityTracingCancel]
  -[SiriCoreNetworkActivityTracing networkActivityAddNWConnection:]
  -[SiriCoreNetworkActivityTracing networkActivityRemoveNWConnection:completion:]
  -[SiriCoreNetworkActivityTracing currentNetworkActivityTokenWithCompletion:]
  -[SiriCoreNetworkActivityTracing _networkActivityStart:activate:]
  -[SiriCoreNetworkActivityTracing _networkActivityActivate:]
  -[SiriCoreNetworkActivityTracing _networkActivityStop:withReason:andError:]
  -[SiriCoreNetworkActivityTracing _networkActivityTracingCancel]
  -[SiriCoreNetworkActivityTracing _networkActivityAddNWConnection:]
  -[SiriCoreNetworkActivityTracing _networkActivityRemoveNWConnection:completion:]


SiriCoreNetworkActivity : NSObject
  // instance methods
  -[SiriCoreNetworkActivity addConnection:]
  -[SiriCoreNetworkActivity activate]
  -[SiriCoreNetworkActivity .cxx_destruct]
  -[SiriCoreNetworkActivity hasStarted]
  -[SiriCoreNetworkActivity removeConnection:]
  -[SiriCoreNetworkActivity nwActivity]
  -[SiriCoreNetworkActivity setHasStarted:]
  -[SiriCoreNetworkActivity nwActivityToken]
  -[SiriCoreNetworkActivity parentLabel]
  -[SiriCoreNetworkActivity initWithLabel:parent:]
  -[SiriCoreNetworkActivity stopWithCompletionReason:andError:]
  -[SiriCoreNetworkActivity _networkActivityState:]
  -[SiriCoreNetworkActivity _networkActivityAbort]
  -[SiriCoreNetworkActivity _networkActivityRestart]
  -[SiriCoreNetworkActivity _completionReasonToNWActivityCompletionReason:]


SiriCoreConnectionQueueMonitor : NSObject
  // instance methods
  -[SiriCoreConnectionQueueMonitor dealloc]
  -[SiriCoreConnectionQueueMonitor .cxx_destruct]
  -[SiriCoreConnectionQueueMonitor init]
  -[SiriCoreConnectionQueueMonitor _startWatcher]
  -[SiriCoreConnectionQueueMonitor _signalWatcher]
  -[SiriCoreConnectionQueueMonitor startWatcher]
  -[SiriCoreConnectionQueueMonitor signalWatcher]


SiriCoreNetworkSessionProvider : NSObject <NSURLSessionDelegate, NSStreamDelegate, SiriCoreConnectionProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SiriCoreNetworkSessionProvider getMetricsContext:]

  // instance methods
  -[SiriCoreNetworkSessionProvider stream:handleEvent:]
  -[SiriCoreNetworkSessionProvider isCanceled]
  -[SiriCoreNetworkSessionProvider isReady]
  -[SiriCoreNetworkSessionProvider _closeWithError:]
  -[SiriCoreNetworkSessionProvider setDelegate:]
  -[SiriCoreNetworkSessionProvider delegate]
  -[SiriCoreNetworkSessionProvider close]
  -[SiriCoreNetworkSessionProvider .cxx_destruct]
  -[SiriCoreNetworkSessionProvider connectionType]
  -[SiriCoreNetworkSessionProvider URLSession:streamTask:didBecomeInputStream:outputStream:]
  -[SiriCoreNetworkSessionProvider initWithQueue:]
  -[SiriCoreNetworkSessionProvider URLSession:betterRouteDiscoveredForStreamTask:]
  -[SiriCoreNetworkSessionProvider isMultipath]
  -[SiriCoreNetworkSessionProvider URLSession:didBecomeInvalidWithError:]
  -[SiriCoreNetworkSessionProvider readData:]
  -[SiriCoreNetworkSessionProvider writeData:completion:]
  -[SiriCoreNetworkSessionProvider supportsInitialPayload]
  -[SiriCoreNetworkSessionProvider openConnectionForURL:withConnectionId:initialPayload:completion:]
  -[SiriCoreNetworkSessionProvider hasActiveConnection]
  -[SiriCoreNetworkSessionProvider headerDataWithForceReconnect:]
  -[SiriCoreNetworkSessionProvider shouldFallbackQuickly]
  -[SiriCoreNetworkSessionProvider analysisInfo]
  -[SiriCoreNetworkSessionProvider updateConnectionMetrics:completion:]
  -[SiriCoreNetworkSessionProvider isPeerConnectionError:]
  -[SiriCoreNetworkSessionProvider isPeerNotNearbyError:]
  -[SiriCoreNetworkSessionProvider shouldFallbackFromError:]
  -[SiriCoreNetworkSessionProvider resolvedHost]
  -[SiriCoreNetworkSessionProvider setProviderConnectionPolicy:]
  -[SiriCoreNetworkSessionProvider setPolicyRoute:]
  -[SiriCoreNetworkSessionProvider setPrefersWWAN:]
  -[SiriCoreNetworkSessionProvider setConnectByPOPMethod:]
  -[SiriCoreNetworkSessionProvider setScopeIsWiFiOnly]
  -[SiriCoreNetworkSessionProvider setKeepAlive:withInterval:withCount:]
  -[SiriCoreNetworkSessionProvider setRetransmitConnectionDropTime:]
  -[SiriCoreNetworkSessionProvider setStaleInterval:]
  -[SiriCoreNetworkSessionProvider providerStatsIndicatePoorLinkQuality]
  -[SiriCoreNetworkSessionProvider isEstablishing]
  -[SiriCoreNetworkSessionProvider _invokeOpenCompletionWithError:]
  -[SiriCoreNetworkSessionProvider _streamDidBecomeUnviable]
  -[SiriCoreNetworkSessionProvider _setupStaleConnectionTimer]
  -[SiriCoreNetworkSessionProvider _cancelStaleConnectionTimer]
  -[SiriCoreNetworkSessionProvider _setupOpenTimer]
  -[SiriCoreNetworkSessionProvider _cancelOpenTimer]


_SiriCoreSQLiteTableInfo : NSObject <SiriCoreSQLiteTable>
 @property  NSString *name
 @property  NSArray *columns
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SiriCoreSQLiteTableInfo columns]
  -[_SiriCoreSQLiteTableInfo .cxx_destruct]
  -[_SiriCoreSQLiteTableInfo name]
  -[_SiriCoreSQLiteTableInfo initWithName:columns:]


SiriCoreSQLiteQueryCriterion : NSObject <NSCopying>
 @property  NSString *columnName
 @property  long long comparisonOperator
 @property  long long logicalOperator
 @property  <SiriCoreSQLiteValue> *value
 @property  NSArray *values
 @property  NSArray *subcriteria

  // class methods
  +[SiriCoreSQLiteQueryCriterion equalToQueryCriterionWithColumnName:value:]
  +[SiriCoreSQLiteQueryCriterion greaterThanQueryCriterionWithColumnName:value:]
  +[SiriCoreSQLiteQueryCriterion greaterThanOrEqualToQueryCriterionWithColumnName:value:]
  +[SiriCoreSQLiteQueryCriterion lessThanQueryCriterionWithColumnName:value:]
  +[SiriCoreSQLiteQueryCriterion lessThanOrEqualToQueryCriterionWithColumnName:value:]
  +[SiriCoreSQLiteQueryCriterion notEqualToQueryCriterionWithColumnName:value:]
  +[SiriCoreSQLiteQueryCriterion andQueryCriterionWithSubcriteria:]
  +[SiriCoreSQLiteQueryCriterion andQueryCriterionWithSubcriteriaProvider:]
  +[SiriCoreSQLiteQueryCriterion orQueryCriterionWithSubcriteria:]
  +[SiriCoreSQLiteQueryCriterion orQueryCriterionWithSubcriteriaProvider:]
  +[SiriCoreSQLiteQueryCriterion betweenQueryCriterionWithColumnName:fromValue:toValue:negation:]
  +[SiriCoreSQLiteQueryCriterion inQueryCriterionWithColumnName:values:negation:]
  +[SiriCoreSQLiteQueryCriterion isQueryCriterionWithColumnName:value:negation:]
  +[SiriCoreSQLiteQueryCriterion isNullQueryCriterionWithColumnName:negation:]
  +[SiriCoreSQLiteQueryCriterion likeQueryCriterionWithColumnName:value:negation:]

  // instance methods
  -[SiriCoreSQLiteQueryCriterion values]
  -[SiriCoreSQLiteQueryCriterion columnName]
  -[SiriCoreSQLiteQueryCriterion .cxx_destruct]
  -[SiriCoreSQLiteQueryCriterion copyWithZone:]
  -[SiriCoreSQLiteQueryCriterion value]
  -[SiriCoreSQLiteQueryCriterion comparisonOperator]
  -[SiriCoreSQLiteQueryCriterion initWithColumnName:comparisonOperator:logicalOperator:value:values:subcriteria:]
  -[SiriCoreSQLiteQueryCriterion initWithColumnName:comparisonOperator:logicalOperator:value:values:subcriteriaProvider:]
  -[SiriCoreSQLiteQueryCriterion logicalOperator]
  -[SiriCoreSQLiteQueryCriterion subcriteria]


SiriCorePingInfo : NSObject <NSCopying>
 @property  long long pingAcknowledgedCount
 @property  double avgPingTime

  // instance methods
  -[SiriCorePingInfo .cxx_destruct]
  -[SiriCorePingInfo copyWithZone:]
  -[SiriCorePingInfo markPingSentWithIndex:]
  -[SiriCorePingInfo markPongReceivedWithIndex:]
  -[SiriCorePingInfo numberOfUnacknowledgedPings]
  -[SiriCorePingInfo pingAcknowledgedCount]
  -[SiriCorePingInfo avgPingTime]


SiriCoreSQLiteQueryResult : NSObject
 @property  SiriCoreSQLiteQuery *query
 @property  unsigned long beginMachTime
 @property  unsigned long endMachTime
 @property  SiriCoreSQLiteStatement *statement
 @property  NSArray *columnNameTuple
 @property  NSArray *columnValueTuples
 @property  NSDictionary *columnValuesMap
 @property  NSArray *rowValueTuples
 @property  NSArray *rowValueMaps
 @property  NSArray *records
 @property  NSError *error

  // instance methods
  -[SiriCoreSQLiteQueryResult records]
  -[SiriCoreSQLiteQueryResult query]
  -[SiriCoreSQLiteQueryResult statement]
  -[SiriCoreSQLiteQueryResult columnNameTuple]
  -[SiriCoreSQLiteQueryResult endMachTime]
  -[SiriCoreSQLiteQueryResult beginMachTime]
  -[SiriCoreSQLiteQueryResult error]
  -[SiriCoreSQLiteQueryResult .cxx_destruct]
  -[SiriCoreSQLiteQueryResult columnValueTuples]
  -[SiriCoreSQLiteQueryResult rowValueTuples]
  -[SiriCoreSQLiteQueryResult rowValueMaps]
  -[SiriCoreSQLiteQueryResult initWithQuery:beginMachTime:endMachTime:statement:columnNameTuple:columnValueTuples:columnValuesMap:rowValueTuples:rowValueMaps:records:error:]
  -[SiriCoreSQLiteQueryResult columnValuesMap]


SiriCoreErrorInfo : NSObject
 @property  NSError *error
 @property  BOOL isPeerConnectionError
 @property  BOOL isPeerNotNearbyError

  // instance methods
  -[SiriCoreErrorInfo error]
  -[SiriCoreErrorInfo .cxx_destruct]
  -[SiriCoreErrorInfo setError:]
  -[SiriCoreErrorInfo isPeerConnectionError]
  -[SiriCoreErrorInfo setIsPeerConnectionError:]
  -[SiriCoreErrorInfo isPeerNotNearbyError]
  -[SiriCoreErrorInfo setIsPeerNotNearbyError:]


SiriCoreSiriBackgroundConnection : NSObject <SiriCoreConnectionProviderDelegate>
 @property  <SiriCoreSiriBackgroundConnectionDelegate> *delegate
 @property  NSString *peerType
 @property  NSString *peerVersion
 @property  NSString *productTypePrefix
 @property  Class peerProviderClass
 @property  BOOL usesProxyConnection
 @property  BOOL deviceIsInWalkaboutExperimentGroup
 @property  BOOL siriConnectionUsesPeerManagedSync
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SiriCoreSiriBackgroundConnection setDelegate:]
  -[SiriCoreSiriBackgroundConnection _closeConnection]
  -[SiriCoreSiriBackgroundConnection delegate]
  -[SiriCoreSiriBackgroundConnection dealloc]
  -[SiriCoreSiriBackgroundConnection .cxx_destruct]
  -[SiriCoreSiriBackgroundConnection barrier:]
  -[SiriCoreSiriBackgroundConnection initWithQueue:]
  -[SiriCoreSiriBackgroundConnection cancel]
  -[SiriCoreSiriBackgroundConnection init]
  -[SiriCoreSiriBackgroundConnection _usingNetwork]
  -[SiriCoreSiriBackgroundConnection _connectionType]
  -[SiriCoreSiriBackgroundConnection probeConnection]
  -[SiriCoreSiriBackgroundConnection peerType]
  -[SiriCoreSiriBackgroundConnection _providerClass]
  -[SiriCoreSiriBackgroundConnection analysisInfo]
  -[SiriCoreSiriBackgroundConnection connectionProvider:receivedError:]
  -[SiriCoreSiriBackgroundConnection connectionProvider:receivedViabilityChangeNotification:]
  -[SiriCoreSiriBackgroundConnection connectionProviderReceivedBetterRouteNotification:]
  -[SiriCoreSiriBackgroundConnection _usingPOP]
  -[SiriCoreSiriBackgroundConnection _usingFlorence]
  -[SiriCoreSiriBackgroundConnection _usingPOPOnPeer]
  -[SiriCoreSiriBackgroundConnection _usingPeer]
  -[SiriCoreSiriBackgroundConnection _nextConnectionMethod]
  -[SiriCoreSiriBackgroundConnection startWithConnectionInfo:]
  -[SiriCoreSiriBackgroundConnection _startWithConnectionInfo:proposedFallbackMethod:allowFallbackToNewMethod:]
  -[SiriCoreSiriBackgroundConnection _setNetworkProvider:]
  -[SiriCoreSiriBackgroundConnection _getInitialPayloadWithBufferedLength:forceReconnect:]
  -[SiriCoreSiriBackgroundConnection _updateBuffersForInitialPayload:bufferedLength:forceReconnect:]
  -[SiriCoreSiriBackgroundConnection _startNetworkProviderWithInfo:]
  -[SiriCoreSiriBackgroundConnection updateActiveBackgroundConnectionWithSecondary]
  -[SiriCoreSiriBackgroundConnection _startSecondaryConnection]
  -[SiriCoreSiriBackgroundConnection _cancelSecondaryConnection]
  -[SiriCoreSiriBackgroundConnection _forceTriggerRetry]
  -[SiriCoreSiriBackgroundConnection _httpHeaderData]
  -[SiriCoreSiriBackgroundConnection _aceHeaderData]
  -[SiriCoreSiriBackgroundConnection _initializeBufferedGeneralOutputDataWithInitialPayload:]
  -[SiriCoreSiriBackgroundConnection _closeConnectionAndPrepareForReconnect:]
  -[SiriCoreSiriBackgroundConnection _didEncounterError:]
  -[SiriCoreSiriBackgroundConnection _bestErrorBetweenError:peerError:]
  -[SiriCoreSiriBackgroundConnection _hasBufferedDataOrOutstandingPings]
  -[SiriCoreSiriBackgroundConnection _shouldTrySameConnectionMethodForMethod:error:]
  -[SiriCoreSiriBackgroundConnection _fallBackToNextConnectionMethod:fromError:afterDelay:]
  -[SiriCoreSiriBackgroundConnection _fallBackToNextConnectionMethodWithError:orElse:]
  -[SiriCoreSiriBackgroundConnection _canFallBackFromError:]
  -[SiriCoreSiriBackgroundConnection _getCellularMetrics:]
  -[SiriCoreSiriBackgroundConnection _normalizeSNR:]
  -[SiriCoreSiriBackgroundConnection _getWifiMetrics:]
  -[SiriCoreSiriBackgroundConnection _tcpInfoIndicatesPoorLinkQuality]
  -[SiriCoreSiriBackgroundConnection _wifiOrCellularMayBeBetterThanCurrentStream]
  -[SiriCoreSiriBackgroundConnection _scheduleAceHeaderTimeoutTimerWithInterval:]
  -[SiriCoreSiriBackgroundConnection _aceHeaderTimeoutFired:afterTimeout:]
  -[SiriCoreSiriBackgroundConnection setSendPings:]
  -[SiriCoreSiriBackgroundConnection _resumePingTimer]
  -[SiriCoreSiriBackgroundConnection _pingTimerFired]
  -[SiriCoreSiriBackgroundConnection _checkForProgressOnReadingData]
  -[SiriCoreSiriBackgroundConnection _checkPings]
  -[SiriCoreSiriBackgroundConnection _handleBarrierReply:]
  -[SiriCoreSiriBackgroundConnection _cancelOutstandingBarriers]
  -[SiriCoreSiriBackgroundConnection startHeartBeat]
  -[SiriCoreSiriBackgroundConnection stopHeartBeat]
  -[SiriCoreSiriBackgroundConnection _hasReadHTTPHeader]
  -[SiriCoreSiriBackgroundConnection _consumeHTTPHeaderWithData:bytesRead:error:]
  -[SiriCoreSiriBackgroundConnection _hasReadACEHeader]
  -[SiriCoreSiriBackgroundConnection _consumeAceHeaderWithData:bytesRead:error:]
  -[SiriCoreSiriBackgroundConnection _consumeAceDataWithData:bytesRead:error:]
  -[SiriCoreSiriBackgroundConnection _connectionHasBytesAvailable:]
  -[SiriCoreSiriBackgroundConnection _networkProviderDidOpen]
  -[SiriCoreSiriBackgroundConnection _headerDataForURL:aceHost:languageCode:syncAssistantId:]
  -[SiriCoreSiriBackgroundConnection _tryToWriteBufferedOutputData]
  -[SiriCoreSiriBackgroundConnection _bufferGeneralData:]
  -[SiriCoreSiriBackgroundConnection _sendGeneralData:]
  -[SiriCoreSiriBackgroundConnection _prepareProviderHeaderWithForceReconnect:]
  -[SiriCoreSiriBackgroundConnection sendCommand:moreComing:errorHandler:]
  -[SiriCoreSiriBackgroundConnection sendCommands:errorHandler:]
  -[SiriCoreSiriBackgroundConnection _sendAcePingWithId:error:]
  -[SiriCoreSiriBackgroundConnection _sendAcePongWithId:error:]
  -[SiriCoreSiriBackgroundConnection _setupReadHandlerOnProvider]
  -[SiriCoreSiriBackgroundConnection _tryReadingHTTPHeaderData:withMessage:bytesRead:error:]
  -[SiriCoreSiriBackgroundConnection _tryParsingHTTPHeaderData:partialMessage:statusCode:bytesRead:error:]
  -[SiriCoreSiriBackgroundConnection _tryReadingAceHeaderFromData:bytesParsed:error:]
  -[SiriCoreSiriBackgroundConnection _tryReadingParsedDataFromBytes:length:packet:object:bytesParsed:error:]
  -[SiriCoreSiriBackgroundConnection _handlePacket:]
  -[SiriCoreSiriBackgroundConnection _handleAceNop]
  -[SiriCoreSiriBackgroundConnection _handleAceObject:]
  -[SiriCoreSiriBackgroundConnection _handleAcePing:]
  -[SiriCoreSiriBackgroundConnection _handleAcePong:]
  -[SiriCoreSiriBackgroundConnection _handleAceEnd]
  -[SiriCoreSiriBackgroundConnection getConnectionMethodUsed]
  -[SiriCoreSiriBackgroundConnection _connectionMethodDescription]
  -[SiriCoreSiriBackgroundConnection getConnectionMetrics:withCompletion:]
  -[SiriCoreSiriBackgroundConnection setPeerType:]
  -[SiriCoreSiriBackgroundConnection peerVersion]
  -[SiriCoreSiriBackgroundConnection setPeerVersion:]
  -[SiriCoreSiriBackgroundConnection productTypePrefix]
  -[SiriCoreSiriBackgroundConnection setProductTypePrefix:]
  -[SiriCoreSiriBackgroundConnection usesProxyConnection]
  -[SiriCoreSiriBackgroundConnection setUsesProxyConnection:]
  -[SiriCoreSiriBackgroundConnection siriConnectionUsesPeerManagedSync]
  -[SiriCoreSiriBackgroundConnection setSiriConnectionUsesPeerManagedSync:]
  -[SiriCoreSiriBackgroundConnection peerProviderClass]
  -[SiriCoreSiriBackgroundConnection setPeerProviderClass:]
  -[SiriCoreSiriBackgroundConnection deviceIsInWalkaboutExperimentGroup]
  -[SiriCoreSiriBackgroundConnection setDeviceIsInWalkaboutExperimentGroup:]


SiriCoreSiriConnectionInfo : NSObject
 @property  NSURL *url
 @property  SAConnectionPolicyRoute *connectionPolicyRoute
 @property  NSString *aceHost
 @property  NSString *languageCode
 @property  BOOL prefersWWAN
 @property  BOOL skipPeer
 @property  BOOL useWiFiHint
 @property  NSError *skipPeerErrorReason
 @property  BOOL forceReconnect
 @property  double timeout
 @property  NSString *assistantIdentifier
 @property  NSString *peerAssistantIdentifier
 @property  NSString *connectionId
 @property  BOOL imposePolicyBan
 @property  BOOL requiresURLSession
 @property  SAConnectionPolicy *connectionPolicy
 @property  BOOL forceOnDeviceOnlyDictation

  // instance methods
  -[SiriCoreSiriConnectionInfo setAssistantIdentifier:]
  -[SiriCoreSiriConnectionInfo setLanguageCode:]
  -[SiriCoreSiriConnectionInfo setUrl:]
  -[SiriCoreSiriConnectionInfo connectionId]
  -[SiriCoreSiriConnectionInfo assistantIdentifier]
  -[SiriCoreSiriConnectionInfo setTimeout:]
  -[SiriCoreSiriConnectionInfo .cxx_destruct]
  -[SiriCoreSiriConnectionInfo languageCode]
  -[SiriCoreSiriConnectionInfo timeout]
  -[SiriCoreSiriConnectionInfo connectionPolicy]
  -[SiriCoreSiriConnectionInfo url]
  -[SiriCoreSiriConnectionInfo peerAssistantIdentifier]
  -[SiriCoreSiriConnectionInfo setPeerAssistantIdentifier:]
  -[SiriCoreSiriConnectionInfo aceHost]
  -[SiriCoreSiriConnectionInfo setAceHost:]
  -[SiriCoreSiriConnectionInfo setConnectionPolicy:]
  -[SiriCoreSiriConnectionInfo connectionPolicyRoute]
  -[SiriCoreSiriConnectionInfo setConnectionId:]
  -[SiriCoreSiriConnectionInfo setPrefersWWAN:]
  -[SiriCoreSiriConnectionInfo _appendPotentiallyNilString:toMutableString:]
  -[SiriCoreSiriConnectionInfo setConnectionPolicyRoute:]
  -[SiriCoreSiriConnectionInfo prefersWWAN]
  -[SiriCoreSiriConnectionInfo skipPeer]
  -[SiriCoreSiriConnectionInfo setSkipPeer:]
  -[SiriCoreSiriConnectionInfo useWiFiHint]
  -[SiriCoreSiriConnectionInfo setUseWiFiHint:]
  -[SiriCoreSiriConnectionInfo skipPeerErrorReason]
  -[SiriCoreSiriConnectionInfo setSkipPeerErrorReason:]
  -[SiriCoreSiriConnectionInfo forceReconnect]
  -[SiriCoreSiriConnectionInfo setForceReconnect:]
  -[SiriCoreSiriConnectionInfo imposePolicyBan]
  -[SiriCoreSiriConnectionInfo setImposePolicyBan:]
  -[SiriCoreSiriConnectionInfo requiresURLSession]
  -[SiriCoreSiriConnectionInfo setRequiresURLSession:]
  -[SiriCoreSiriConnectionInfo isForceOnDeviceOnlyDictationEnabled]
  -[SiriCoreSiriConnectionInfo setForceOnDeviceOnlyDictation:]


SiriCoreNWContext : NSObject
  // class methods
  +[SiriCoreNWContext sharedInstance]

  // instance methods
  -[SiriCoreNWContext .cxx_destruct]
  -[SiriCoreNWContext _init]
  -[SiriCoreNWContext init]
  -[SiriCoreNWContext nwContext]


SiriCoreSQLiteTableDescription : NSObject <NSCopying>
 @property  NSString *name
 @property  NSArray *columns
 @property  NSArray *constraints

  // instance methods
  -[SiriCoreSQLiteTableDescription columns]
  -[SiriCoreSQLiteTableDescription initWithName:columnsProvider:constraintsProvider:]
  -[SiriCoreSQLiteTableDescription .cxx_destruct]
  -[SiriCoreSQLiteTableDescription initWithName:columns:constraints:]
  -[SiriCoreSQLiteTableDescription copyWithZone:]
  -[SiriCoreSQLiteTableDescription name]
  -[SiriCoreSQLiteTableDescription constraints]


SiriCoreSiriConnection : NSObject <SiriCoreSiriBackgroundConnectionDelegate, SiriCoreSiriConnection>
 @property  SAConnectionPolicy *connectionPolicy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SiriCoreSiriConnectionDelegate> *delegate
 @property  NSURL *url
 @property  BOOL prefersWWAN
 @property  BOOL skipPeer
 @property  BOOL useWiFiHint
 @property  NSError *skipPeerError
 @property  BOOL forceReconnect
 @property  NSString *aceHost
 @property  NSString *languageCode
 @property  double timeout
 @property  NSString *assistantIdentifier
 @property  NSString *peerAssistantIdentifier
 @property  NSString *peerType
 @property  NSString *peerVersion
 @property  NSString *productTypePrefix
 @property  BOOL usesProxyConnection
 @property  BOOL deviceIsInWalkaboutExperimentGroup
 @property  BOOL siriConnectionUsesPeerManagedSync
 @property  Class peerProviderClass
 @property  NSString *connectionId
 @property  BOOL imposePolicyBan

  // instance methods
  -[SiriCoreSiriConnection setAssistantIdentifier:]
  -[SiriCoreSiriConnection setLanguageCode:]
  -[SiriCoreSiriConnection setUrl:]
  -[SiriCoreSiriConnection setDelegate:]
  -[SiriCoreSiriConnection connectionId]
  -[SiriCoreSiriConnection assistantIdentifier]
  -[SiriCoreSiriConnection delegate]
  -[SiriCoreSiriConnection setTimeout:]
  -[SiriCoreSiriConnection dealloc]
  -[SiriCoreSiriConnection .cxx_destruct]
  -[SiriCoreSiriConnection languageCode]
  -[SiriCoreSiriConnection timeout]
  -[SiriCoreSiriConnection barrier:]
  -[SiriCoreSiriConnection initWithQueue:]
  -[SiriCoreSiriConnection connectionPolicy]
  -[SiriCoreSiriConnection url]
  -[SiriCoreSiriConnection start]
  -[SiriCoreSiriConnection init]
  -[SiriCoreSiriConnection peerAssistantIdentifier]
  -[SiriCoreSiriConnection setPeerAssistantIdentifier:]
  -[SiriCoreSiriConnection aceHost]
  -[SiriCoreSiriConnection setAceHost:]
  -[SiriCoreSiriConnection setConnectionPolicy:]
  -[SiriCoreSiriConnection probeConnection]
  -[SiriCoreSiriConnection setConnectionId:]
  -[SiriCoreSiriConnection peerType]
  -[SiriCoreSiriConnection analysisInfo]
  -[SiriCoreSiriConnection setPrefersWWAN:]
  -[SiriCoreSiriConnection siriBackgroundConnection:willStartConnectionWithHTTPHeader:]
  -[SiriCoreSiriConnection setSendPings:]
  -[SiriCoreSiriConnection sendCommands:errorHandler:]
  -[SiriCoreSiriConnection setPeerType:]
  -[SiriCoreSiriConnection peerVersion]
  -[SiriCoreSiriConnection setPeerVersion:]
  -[SiriCoreSiriConnection productTypePrefix]
  -[SiriCoreSiriConnection setProductTypePrefix:]
  -[SiriCoreSiriConnection usesProxyConnection]
  -[SiriCoreSiriConnection setUsesProxyConnection:]
  -[SiriCoreSiriConnection siriConnectionUsesPeerManagedSync]
  -[SiriCoreSiriConnection setSiriConnectionUsesPeerManagedSync:]
  -[SiriCoreSiriConnection peerProviderClass]
  -[SiriCoreSiriConnection setPeerProviderClass:]
  -[SiriCoreSiriConnection deviceIsInWalkaboutExperimentGroup]
  -[SiriCoreSiriConnection setDeviceIsInWalkaboutExperimentGroup:]
  -[SiriCoreSiriConnection prefersWWAN]
  -[SiriCoreSiriConnection skipPeer]
  -[SiriCoreSiriConnection setSkipPeer:]
  -[SiriCoreSiriConnection useWiFiHint]
  -[SiriCoreSiriConnection setUseWiFiHint:]
  -[SiriCoreSiriConnection forceReconnect]
  -[SiriCoreSiriConnection setForceReconnect:]
  -[SiriCoreSiriConnection imposePolicyBan]
  -[SiriCoreSiriConnection setImposePolicyBan:]
  -[SiriCoreSiriConnection siriBackgroundConnection:willStartWithConnectionType:]
  -[SiriCoreSiriConnection siriBackgroundConnection:didOpenWithConnectionType:routeId:delay:]
  -[SiriCoreSiriConnection siriBackgroundConnection:didReceiveAceObject:]
  -[SiriCoreSiriConnection siriBackgroundConnectionDidClose:]
  -[SiriCoreSiriConnection siriBackgroundConnection:didEncounterError:analysisInfo:]
  -[SiriCoreSiriConnection siriBackgroundConnection:didEncounterIntermediateError:]
  -[SiriCoreSiriConnection sendCommand:errorHandler:]
  -[SiriCoreSiriConnection cancelSynchronously:onQueue:completion:]
  -[SiriCoreSiriConnection getAnalysisInfo:]
  -[SiriCoreSiriConnection getConnectionMetricsSynchronously:completion:]
  -[SiriCoreSiriConnection skipPeerError]
  -[SiriCoreSiriConnection setSkipPeerError:]
  -[SiriCoreSiriConnection _connectionInfoForRoute:policy:]
  -[SiriCoreSiriConnection _startBackgroundConnectionWithRoute:policy:]
  -[SiriCoreSiriConnection _scheduleBackgroundConnectionWithRoute:delay:policy:]
  -[SiriCoreSiriConnection _cancelSynchronously:]
  -[SiriCoreSiriConnection _accessPotentiallyActiveConnections:]
  -[SiriCoreSiriConnection _waitForActiveConnection:]
  -[SiriCoreSiriConnection _activeOrAnyPendingConnection]
  -[SiriCoreSiriConnection _handleLastEventFromBackgroundConnection:pendingConnectionExhaustionHandler:]
  -[SiriCoreSiriConnection _recordConnectionMethodForMetrics:]


_SiriCoreSQLiteIndexInfo : NSObject <SiriCoreSQLiteIndex>
 @property  NSString *name
 @property  NSArray *columns
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SiriCoreSQLiteIndexInfo columns]
  -[_SiriCoreSQLiteIndexInfo .cxx_destruct]
  -[_SiriCoreSQLiteIndexInfo name]
  -[_SiriCoreSQLiteIndexInfo initWithName:columns:]


SASetRestrictionsThunk : SASetRestrictions
  // instance methods
  -[SASetRestrictionsThunk .cxx_destruct]
  -[SASetRestrictionsThunk copyWithZone:]
  -[SASetRestrictionsThunk siriCore_invokeThunk]
  -[SASetRestrictionsThunk initWithThunk:]


SiriCoreDataCompressor : NSObject
  // instance methods
  -[SiriCoreDataCompressor compressedDataForData:error:]


SiriCoreDataDecompressor : NSObject
  // instance methods
  -[SiriCoreDataDecompressor decompressedDataForData:error:]
  -[SiriCoreDataDecompressor decompressedDataForBytes:length:error:]


SiriCoreZlibDataCompressor : SiriCoreDataCompressor
  // instance methods
  -[SiriCoreZlibDataCompressor dealloc]
  -[SiriCoreZlibDataCompressor init]
  -[SiriCoreZlibDataCompressor compressedDataForData:error:]


SiriCoreZlibDataDecompressor : SiriCoreDataDecompressor
  // instance methods
  -[SiriCoreZlibDataDecompressor dealloc]
  -[SiriCoreZlibDataDecompressor init]
  -[SiriCoreZlibDataDecompressor decompressedDataForData:error:]


SiriCoreAceSerialization : NSObject
  // class methods
  +[SiriCoreAceSerialization dataForStreamHeaderWithCompressionType:]
  +[SiriCoreAceSerialization dataForObject:error:]
  +[SiriCoreAceSerialization dataForPing:]
  +[SiriCoreAceSerialization dataForPong:]
  +[SiriCoreAceSerialization dataForNop]
  +[SiriCoreAceSerialization dataForStreamEnd]
  +[SiriCoreAceSerialization dataForSpeechPacket:error:]
  +[SiriCoreAceSerialization aceDataForStreamHeaderWithCompressionType:]
  +[SiriCoreAceSerialization aceDataForObject:error:]
  +[SiriCoreAceSerialization aceDataForPing:]
  +[SiriCoreAceSerialization aceDataForPong:]
  +[SiriCoreAceSerialization aceDataForNop]
  +[SiriCoreAceSerialization aceDataForStreamEnd]
  +[SiriCoreAceSerialization aceDataForSpeechPacket:error:]
  +[SiriCoreAceSerialization tryParsingAceHeaderData:compressionType:bytesRead:error:]
  +[SiriCoreAceSerialization _tryParsingPlistPacketBytes:length:]
  +[SiriCoreAceSerialization _tryParsingSpeechPacketBytes:length:]
  +[SiriCoreAceSerialization tryParsingPacketWithBytes:length:rawPacket:object:bytesRead:error:]
  +[SiriCoreAceSerialization _insufficientDataErrorForBytesNeeded:available:]


SiriCoreSQLiteQuery : NSObject
 @property  NSString *string
 @property  SiriCoreSQLiteStatement *statement
 @property  NSArray *parameters
 @property  <SiriCoreSQLiteRecordBuilder> *recordBuilder
 @property  unsigned long options

  // instance methods
  -[SiriCoreSQLiteQuery statement]
  -[SiriCoreSQLiteQuery parameters]
  -[SiriCoreSQLiteQuery recordBuilder]
  -[SiriCoreSQLiteQuery string]
  -[SiriCoreSQLiteQuery .cxx_destruct]
  -[SiriCoreSQLiteQuery options]
  -[SiriCoreSQLiteQuery initWithString:statement:parameters:recordBuilder:options:]


SiriCoreSpeechPacket : NSObject <SiriCoreThunking, SiriCoreSessionObject>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *packets
 @property  long long packetNumber
 @property  NSString *aceId
 @property  NSString *refId
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SiriCoreSpeechPacket groupIdentifier]
  -[SiriCoreSpeechPacket .cxx_destruct]
  -[SiriCoreSpeechPacket encodedClassName]
  -[SiriCoreSpeechPacket copyWithZone:]
  -[SiriCoreSpeechPacket packets]
  -[SiriCoreSpeechPacket setPackets:]
  -[SiriCoreSpeechPacket setAceId:]
  -[SiriCoreSpeechPacket refId]
  -[SiriCoreSpeechPacket aceId]
  -[SiriCoreSpeechPacket setRefId:]
  -[SiriCoreSpeechPacket packetNumber]
  -[SiriCoreSpeechPacket setPacketNumber:]
  -[SiriCoreSpeechPacket siriCore_invokeThunk]
  -[SiriCoreSpeechPacket siriCore_bufferingAllowedDuringActiveSession]
  -[SiriCoreSpeechPacket siriCore_isRetryable]
  -[SiriCoreSpeechPacket siriCore_isRestartable]
  -[SiriCoreSpeechPacket siriCore_isProvisional]
  -[SiriCoreSpeechPacket siriCore_logDiagnostics]
  -[SiriCoreSpeechPacket siriCore_serializedAceDataError:]
  -[SiriCoreSpeechPacket siriCore_requestId]
  -[SiriCoreSpeechPacket siriCore_setSessionRequestId:]
  -[SiriCoreSpeechPacket siriCore_supportedByLocalSession]
  -[SiriCoreSpeechPacket siriCore_supportedByRemoteLimitedSession]


SiriCoreSQLiteQueryOrder : NSObject <NSCopying>
 @property  long long mode
 @property  NSArray *columnNames

  // instance methods
  -[SiriCoreSQLiteQueryOrder columnNames]
  -[SiriCoreSQLiteQueryOrder mode]
  -[SiriCoreSQLiteQueryOrder .cxx_destruct]
  -[SiriCoreSQLiteQueryOrder copyWithZone:]
  -[SiriCoreSQLiteQueryOrder initWithColumnNames:mode:]


SiriCoreSyncDatabase : NSObject
 @property  BOOL inTransaction
 @property  BOOL debugMode

  // class methods
  +[SiriCoreSyncDatabase currentSyncDatabase]
  +[SiriCoreSyncDatabase removeCurrentSyncDatabase]

  // instance methods
  -[SiriCoreSyncDatabase openWithError:]
  -[SiriCoreSyncDatabase initWithPath:]
  -[SiriCoreSyncDatabase _executeStatement:error:]
  -[SiriCoreSyncDatabase .cxx_destruct]
  -[SiriCoreSyncDatabase setDebugMode:]
  -[SiriCoreSyncDatabase closeWithError:]
  -[SiriCoreSyncDatabase commitTransactionWithError:]
  -[SiriCoreSyncDatabase prepare]
  -[SiriCoreSyncDatabase debugMode]
  -[SiriCoreSyncDatabase rollbackTransactionWithError:]
  -[SiriCoreSyncDatabase beginTransactionWithError:]
  -[SiriCoreSyncDatabase inTransaction]
  -[SiriCoreSyncDatabase succeedOrRollbackOnFail:error:whileExecuting:]
  -[SiriCoreSyncDatabase donate:error:]
  -[SiriCoreSyncDatabase remove:error:]
  -[SiriCoreSyncDatabase removeAllItemsOfKey:error:]
  -[SiriCoreSyncDatabase markAsSent:error:]
  -[SiriCoreSyncDatabase _insertSyncRec:intoTable:error:]
  -[SiriCoreSyncDatabase countRemovalsOfKey:updatedAfter:error:]
  -[SiriCoreSyncDatabase countItemsOfKey:updatedAfter:error:]
  -[SiriCoreSyncDatabase countSentItemsOfKey:updatedAfter:error:]
  -[SiriCoreSyncDatabase _countKey:fromTable:updatedAfter:error:]
  -[SiriCoreSyncDatabase enumerateItemsOfKey:updatedAfter:error:usingBlock:]
  -[SiriCoreSyncDatabase enumerateRemovalsOfKey:updatedAfter:error:usingBlock:]
  -[SiriCoreSyncDatabase enumerateSentItemsOfKey:updatedAfter:error:usingBlock:]
  -[SiriCoreSyncDatabase _enumerateKey:updatedAfter:fromTable:usingBlock:error:]
  -[SiriCoreSyncDatabase setInTransaction:]


SiriCoreSymptomsReporter : NSObject
  // class methods
  +[SiriCoreSymptomsReporter sharedInstance]

  // instance methods
  -[SiriCoreSymptomsReporter reportIssueForType:subType:context:processIdentifier:walkboutStatus:]
  -[SiriCoreSymptomsReporter _getTypeForError:completion:]
  -[SiriCoreSymptomsReporter _processNameForPid:]
  -[SiriCoreSymptomsReporter reportIssueForError:type:context:processIdentifier:walkboutStatus:triggerForIDSIdentifiers:]
  -[SiriCoreSymptomsReporter reportIssueForError:type:subtype:context:processIdentifier:walkboutStatus:triggerForIDSIdentifiers:]
  -[SiriCoreSymptomsReporter reportIssueForError:type:subtype:context:processIdentifier:walkboutStatus:triggerForIDSIdentifiers:withPcap:]
  -[SiriCoreSymptomsReporter _subtypeContextStringFromContext:]
  -[SiriCoreSymptomsReporter reportIssueForType:subType:context:processIdentifier:walkboutStatus:withPcap:]


SiriCoreSQLiteStatement : NSObject
  // instance methods
  -[SiriCoreSQLiteStatement impl]
  -[SiriCoreSQLiteStatement dealloc]
  -[SiriCoreSQLiteStatement reset]
  -[SiriCoreSQLiteStatement clearBindings]
  -[SiriCoreSQLiteStatement initWithImpl:finalizeWhenDone:]


SiriCoreSiriDaemonLaunchContext : NSObject
 @property  long long daemonType

  // instance methods
  -[SiriCoreSiriDaemonLaunchContext initWithLaunchArguments:]
  -[SiriCoreSiriDaemonLaunchContext daemonType]
  -[SiriCoreSiriDaemonLaunchContext setDaemonType:]


SiriCoreSQLiteTableConstraint : NSObject <NSCopying>
 @property  NSString *name
 @property  long long type
 @property  NSArray *columnNames

  // class methods
  +[SiriCoreSQLiteTableConstraint primaryKeyTableConstraintWithName:columnNames:]
  +[SiriCoreSQLiteTableConstraint uniqueTableConstraintWithName:columnNames:]

  // instance methods
  -[SiriCoreSQLiteTableConstraint columnNames]
  -[SiriCoreSQLiteTableConstraint type]
  -[SiriCoreSQLiteTableConstraint .cxx_destruct]
  -[SiriCoreSQLiteTableConstraint copyWithZone:]
  -[SiriCoreSQLiteTableConstraint name]
  -[SiriCoreSQLiteTableConstraint initWithName:type:columnNames:]


_SAMetricsSendCompletionsProxy : NSObject
  // instance methods
  -[_SAMetricsSendCompletionsProxy dealloc]
  -[_SAMetricsSendCompletionsProxy addBlock:]
  -[_SAMetricsSendCompletionsProxy .cxx_destruct]
  -[_SAMetricsSendCompletionsProxy init]
  -[_SAMetricsSendCompletionsProxy dispatchBlocksWithResult:error:]


SiriCoreNWConnection : NSObject <SiriCoreConnectionProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SiriCoreNWConnection getMetricsContext:]

  // instance methods
  -[SiriCoreNWConnection isCanceled]
  -[SiriCoreNWConnection _queue]
  -[SiriCoreNWConnection isReady]
  -[SiriCoreNWConnection _closeWithError:]
  -[SiriCoreNWConnection setDelegate:]
  -[SiriCoreNWConnection delegate]
  -[SiriCoreNWConnection dealloc]
  -[SiriCoreNWConnection close]
  -[SiriCoreNWConnection .cxx_destruct]
  -[SiriCoreNWConnection connectionType]
  -[SiriCoreNWConnection _configureConnection:]
  -[SiriCoreNWConnection initWithQueue:]
  -[SiriCoreNWConnection isMultipath]
  -[SiriCoreNWConnection _url]
  -[SiriCoreNWConnection readData:]
  -[SiriCoreNWConnection writeData:completion:]
  -[SiriCoreNWConnection _connectionId]
  -[SiriCoreNWConnection supportsInitialPayload]
  -[SiriCoreNWConnection openConnectionForURL:withConnectionId:initialPayload:completion:]
  -[SiriCoreNWConnection hasActiveConnection]
  -[SiriCoreNWConnection headerDataWithForceReconnect:]
  -[SiriCoreNWConnection shouldFallbackQuickly]
  -[SiriCoreNWConnection analysisInfo]
  -[SiriCoreNWConnection updateConnectionMetrics:completion:]
  -[SiriCoreNWConnection isPeerConnectionError:]
  -[SiriCoreNWConnection isPeerNotNearbyError:]
  -[SiriCoreNWConnection shouldFallbackFromError:]
  -[SiriCoreNWConnection resolvedHost]
  -[SiriCoreNWConnection setProviderConnectionPolicy:]
  -[SiriCoreNWConnection setPolicyRoute:]
  -[SiriCoreNWConnection setPrefersWWAN:]
  -[SiriCoreNWConnection setConnectByPOPMethod:]
  -[SiriCoreNWConnection setScopeIsWiFiOnly]
  -[SiriCoreNWConnection setKeepAlive:withInterval:withCount:]
  -[SiriCoreNWConnection setRetransmitConnectionDropTime:]
  -[SiriCoreNWConnection setStaleInterval:]
  -[SiriCoreNWConnection providerStatsIndicatePoorLinkQuality]
  -[SiriCoreNWConnection isEstablishing]
  -[SiriCoreNWConnection _invokeOpenCompletionWithError:]
  -[SiriCoreNWConnection _setupStaleConnectionTimer]
  -[SiriCoreNWConnection _cancelStaleConnectionTimer]
  -[SiriCoreNWConnection _setupOpenTimer]
  -[SiriCoreNWConnection _cancelOpenTimer]
  -[SiriCoreNWConnection _connectByPOPMethod]
  -[SiriCoreNWConnection _startConnectionUnviableTimer]
  -[SiriCoreNWConnection _cancelConnectionUnviableTimer]
  -[SiriCoreNWConnection _getNWConnectionWithInitialData:completion:]
  -[SiriCoreNWConnection _sendBufferBytesRemaining:]
  -[SiriCoreNWConnection _receivedViabilityChangeNotification:]
  -[SiriCoreNWConnection _receivedBetterRouteNotification:]
  -[SiriCoreNWConnection _setParametersForHost:useTLS:initialPayload:]
  -[SiriCoreNWConnection _getAttemptedEndpoints]
  -[SiriCoreNWConnection _addCorrespondingMetricsFromConnection:inState:]


SiriCoreLinkRecommendationInfo : NSObject
  // instance methods
  -[SiriCoreLinkRecommendationInfo .cxx_destruct]
  -[SiriCoreLinkRecommendationInfo initWithQueue:]
  -[SiriCoreLinkRecommendationInfo timeTaken]
  -[SiriCoreLinkRecommendationInfo setTimeTaken:]
  -[SiriCoreLinkRecommendationInfo resetLinkMetrics]
  -[SiriCoreLinkRecommendationInfo initWithPreferences:wifiPreference:timeTaken:metrics:]
  -[SiriCoreLinkRecommendationInfo btPreference]
  -[SiriCoreLinkRecommendationInfo setBTPreference:]
  -[SiriCoreLinkRecommendationInfo wifiPreference]
  -[SiriCoreLinkRecommendationInfo setWiFiPreference:]
  -[SiriCoreLinkRecommendationInfo setLinkMetrics:]
  -[SiriCoreLinkRecommendationInfo linkMetrics]
  -[SiriCoreLinkRecommendationInfo fetchLinkMetrics:]


(SiriCoreSQLiteValue)
	// instance methods
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_escapedString:]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_toString]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_toNumber]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_toData]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_type]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_blobRepresentationWithLength:]

NSDecimalNumber(SiriCoreSQLiteValue)
	// instance methods
	-[NSDecimalNumber(SiriCoreSQLiteValue) siriCoreSQLiteValue_type]
	-[NSDecimalNumber(SiriCoreSQLiteValue) siriCoreSQLiteValue_textRepresentation]

(SiriCoreSQLiteValue)
	// instance methods
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_escapedString:]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_toString]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_toNumber]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_toData]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_type]

NSNumber(SiriCoreSQLiteValue)
	// instance methods
	-[NSNumber(SiriCoreSQLiteValue) siriCoreSQLiteValue_escapedString:]
	-[NSNumber(SiriCoreSQLiteValue) siriCoreSQLiteValue_toString]
	-[NSNumber(SiriCoreSQLiteValue) siriCoreSQLiteValue_toNumber]
	-[NSNumber(SiriCoreSQLiteValue) siriCoreSQLiteValue_toData]
	-[NSNumber(SiriCoreSQLiteValue) siriCoreSQLiteValue_type]
	-[NSNumber(SiriCoreSQLiteValue) siriCoreSQLiteValue_doubleRepresentation]
	-[NSNumber(SiriCoreSQLiteValue) siriCoreSQLiteValue_integerRepresentation]

(SiriCoreSQLiteValue)
	// instance methods
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_escapedString:]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_toString]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_toNumber]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_toData]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_type]
	-[(SiriCoreSQLiteValue) siriCoreSQLiteValue_textRepresentation]

AceObject(SiriCoreAceThunk)
	// instance methods
	-[AceObject(SiriCoreAceThunk) siriCore_invokeThunk]

SABaseCommand(SiriCoreSessionObject)
	// instance methods
	-[SABaseCommand(SiriCoreSessionObject) siriCore_bufferingAllowedDuringActiveSession]
	-[SABaseCommand(SiriCoreSessionObject) siriCore_isRetryable]
	-[SABaseCommand(SiriCoreSessionObject) siriCore_isRestartable]
	-[SABaseCommand(SiriCoreSessionObject) siriCore_isProvisional]
	-[SABaseCommand(SiriCoreSessionObject) siriCore_logDiagnostics]
	-[SABaseCommand(SiriCoreSessionObject) siriCore_serializedAceDataError:]
	-[SABaseCommand(SiriCoreSessionObject) siriCore_requestId]
	-[SABaseCommand(SiriCoreSessionObject) siriCore_setSessionRequestId:]
	-[SABaseCommand(SiriCoreSessionObject) siriCore_supportedByLocalSession]
	-[SABaseCommand(SiriCoreSessionObject) siriCore_supportedByRemoteLimitedSession]

SASyncGetAnchors(SiriCoreSessionObject)
	// instance methods
	-[SASyncGetAnchors(SiriCoreSessionObject) siriCore_bufferingAllowedDuringActiveSession]
	-[SASyncGetAnchors(SiriCoreSessionObject) siriCore_isRetryable]

SASyncChunk(SiriCoreSessionObject)
	// instance methods
	-[SASyncChunk(SiriCoreSessionObject) siriCore_bufferingAllowedDuringActiveSession]
	-[SASyncChunk(SiriCoreSessionObject) siriCore_isRetryable]

SASyncFinished(SiriCoreSessionObject)
	// instance methods
	-[SASyncFinished(SiriCoreSessionObject) siriCore_bufferingAllowedDuringActiveSession]
	-[SASyncFinished(SiriCoreSessionObject) siriCore_isRetryable]

SACFFetchScriptCommand(SiriCoreSessionObject)
	// instance methods
	-[SACFFetchScriptCommand(SiriCoreSessionObject) siriCore_bufferingAllowedDuringActiveSession]
	-[SACFFetchScriptCommand(SiriCoreSessionObject) siriCore_isRetryable]
	-[SACFFetchScriptCommand(SiriCoreSessionObject) siriCore_supportedByLocalSession]

SAMetrics(SiriCoreSessionObject)
	// instance methods
	-[SAMetrics(SiriCoreSessionObject) siriCore_isRetryable]
	-[SAMetrics(SiriCoreSessionObject) siriCore_requestId]
	-[SAMetrics(SiriCoreSessionObject) siriCore_setSessionRequestId:]
	-[SAMetrics(SiriCoreSessionObject) siriCore_supportedByLocalSession]

SASStartSpeech(SiriCoreSessionObject)
	// instance methods
	-[SASStartSpeech(SiriCoreSessionObject) siriCore_isRestartable]

SASSpeechPacket(SiriCoreSessionObject)
	// instance methods
	-[SASSpeechPacket(SiriCoreSessionObject) siriCore_supportedByRemoteLimitedSession]

SASUpdateAudioInfo(SiriCoreSessionObject)
	// instance methods
	-[SASUpdateAudioInfo(SiriCoreSessionObject) siriCore_isRestartable]

SASEnableServerEndpointer(SiriCoreSessionObject)
	// instance methods
	-[SASEnableServerEndpointer(SiriCoreSessionObject) siriCore_isRestartable]
	-[SASEnableServerEndpointer(SiriCoreSessionObject) siriCore_supportedByLocalSession]
	-[SASEnableServerEndpointer(SiriCoreSessionObject) siriCore_supportedByRemoteLimitedSession]

SASFinishSpeech(SiriCoreSessionObject)
	// instance methods
	-[SASFinishSpeech(SiriCoreSessionObject) siriCore_isRestartable]
	-[SASFinishSpeech(SiriCoreSessionObject) siriCore_supportedByLocalSession]
	-[SASFinishSpeech(SiriCoreSessionObject) siriCore_supportedByRemoteLimitedSession]

SASCancelSpeech(SiriCoreSessionObject)
	// instance methods
	-[SASCancelSpeech(SiriCoreSessionObject) siriCore_isRestartable]
	-[SASCancelSpeech(SiriCoreSessionObject) siriCore_supportedByRemoteLimitedSession]

SARollbackRequest(SiriCoreSessionObject)
	// instance methods
	-[SARollbackRequest(SiriCoreSessionObject) siriCore_requestId]
	-[SARollbackRequest(SiriCoreSessionObject) siriCore_setSessionRequestId:]

SAUIGetResponseAlternatives(SiriCoreSessionObject)
	// instance methods
	-[SAUIGetResponseAlternatives(SiriCoreSessionObject) siriCore_requestId]
	-[SAUIGetResponseAlternatives(SiriCoreSessionObject) siriCore_setSessionRequestId:]

SASServerBoundConfusionNetwork(SiriCoreSessionObject)
	// instance methods
	-[SASServerBoundConfusionNetwork(SiriCoreSessionObject) siriCore_supportedByLocalSession]
	-[SASServerBoundConfusionNetwork(SiriCoreSessionObject) siriCore_supportedByRemoteLimitedSession]

SASDisableServerEndpointer(SiriCoreSessionObject)
	// instance methods
	-[SASDisableServerEndpointer(SiriCoreSessionObject) siriCore_supportedByLocalSession]
	-[SASDisableServerEndpointer(SiriCoreSessionObject) siriCore_supportedByRemoteLimitedSession]

SASSpeechCorrectionStatistics(SiriCoreSessionObject)
	// instance methods
	-[SASSpeechCorrectionStatistics(SiriCoreSessionObject) siriCore_requestId]
	-[SASSpeechCorrectionStatistics(SiriCoreSessionObject) siriCore_setSessionRequestId:]
	-[SASSpeechCorrectionStatistics(SiriCoreSessionObject) siriCore_supportedByLocalSession]
	-[SASSpeechCorrectionStatistics(SiriCoreSessionObject) siriCore_supportedByRemoteLimitedSession]

SASSpeechEndpointIdentified(SiriCoreSessionObject)
	// instance methods
	-[SASSpeechEndpointIdentified(SiriCoreSessionObject) siriCore_supportedByLocalSession]
	-[SASSpeechEndpointIdentified(SiriCoreSessionObject) siriCore_supportedByRemoteLimitedSession]

SASStartCorrectedSpeechRequest(SiriCoreSessionObject)
	// instance methods
	-[SASStartCorrectedSpeechRequest(SiriCoreSessionObject) siriCore_requestId]
	-[SASStartCorrectedSpeechRequest(SiriCoreSessionObject) siriCore_setSessionRequestId:]

SAStartBackgroundActionRequest(SiriCoreSessionObject)
	// instance methods
	-[SAStartBackgroundActionRequest(SiriCoreSessionObject) siriCore_supportedByLocalSession]

SASetClientFlowState(SiriCoreSessionObject)
	// instance methods
	-[SASetClientFlowState(SiriCoreSessionObject) siriCore_supportedByLocalSession]

SAGetResultObjects(SiriCoreSessionObject)
	// instance methods
	-[SAGetResultObjects(SiriCoreSessionObject) siriCore_isRetryable]
	-[SAGetResultObjects(SiriCoreSessionObject) siriCore_isProvisional]

SAResultSelected(SiriCoreSessionObject)
	// instance methods
	-[SAResultSelected(SiriCoreSessionObject) siriCore_isRetryable]
	-[SAResultSelected(SiriCoreSessionObject) siriCore_isProvisional]

01 00 0400 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFAggregator 
01 00 0400 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFAnalytics 
01 00 0400 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFError 
01 00 0400 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFFeatureFlags 
01 00 0400 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFMemoryPressureObserver 
01 00 0400 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFPreferences 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: AceObject 
01 00 1200 /System/Library/PrivateFrameworks/SiriAnalytics.framework/SiriAnalytics: AssistantSiriAnalytics 
01 00 0800 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 0800 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTTelephonyNetworkInfo 
01 00 0800 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETBluetoothDevice 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETClientEvent 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETClientEventMetadata 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETDebugNetworkConnectionStatePreparationSnapshotCaptured 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETDebugNetworkConnectionStateReadySnapshotCaptured 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETDebugNetworkInterface 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETDebugSessionConnectionNetwork 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETDebugSessionConnectionPingInfo 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETDebugSessionConnectionQuality 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETEndpoint 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETError 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETEstablishmentResolution 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETHandShakeProtocol 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETNetworkConnectionStatePreparationSnapshotCaptured 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETNetworkConnectionStateReadySnapshotCaptured 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETNetworkInterface 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETPathInterface 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETPeerConnectionFailed 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETProxyConfiguration 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETSessionConnectionFailed 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETSessionConnectionHttpHeaderCreated 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: NETSchemaNETSessionConnectionNetwork 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDecimalNumber 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1400 /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy: NSPControlConnection 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SABaseCommand 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACFFetchScriptCommand 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAGetResultObjects 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMetrics 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAResultSelected 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SARollbackRequest 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASCancelSpeech 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASDisableServerEndpointer 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASEnableServerEndpointer 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASFinishSpeech 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASServerBoundConfusionNetwork 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASSpeechCorrectionStatistics 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASSpeechEndpointIdentified 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASSpeechPacket 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASStartCorrectedSpeechRequest 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASStartSpeech 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASUpdateAudioInfo 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASetClientFlowState 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASetRestrictions 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAStartBackgroundActionRequest 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASyncChunk 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASyncFinished 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASyncGetAnchors 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIGetResponseAlternatives 
01 00 1600 /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/SymptomDiagnosticReporter: SDRDiagnosticReporter 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaRequestLink 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaRequestLinkInfo 
01 00 1100 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaUUID 
