|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2DeviceInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2Logging
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2Metric
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2MetricOperationGroupOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2MetricOperationOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2MetricOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2MetricRequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2ReportMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2RequestManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2RequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2Route
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2RoutingTable
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2Session
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2SessionGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2SessionPool
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2SessionTLSCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2SessionTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_C2Time
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2DeviceInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2Logging
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2Metric
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2MetricOperationGroupOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2MetricOperationOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2MetricOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2MetricRequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2ReportMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2RequestManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2RequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2Route
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2RoutingTable
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2Session
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2SessionGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2SessionPool
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2SessionTLSCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2SessionTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_C2Time
|| __TEXT.__const _C2VersionNumber
|| __TEXT.__const _C2VersionString
|| __TEXT.__const _kServerTimeBeginning
__ AuthKit: _OBJC_CLASS_$_AKAppleIDSession
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: __kCFBundleShortVersionStringKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFErrorDescriptionKey
__ CoreFoundation: _kCFErrorLocalizedDescriptionKey
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSMapGet
__ Foundation: _NSMapInsert
__ Foundation: _NSMapRemove
__ Foundation: _NSStringFromClass
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBDataWriter
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ Security: _kSecPolicyNameAppleMMCSService
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_activity_none
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
C2Route : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *destination
 @property  double lastUpdated

  // instance methods
  -[C2Route .cxx_destruct]
  -[C2Route destination]
  -[C2Route setDestination:]
  -[C2Route lastUpdated]
  -[C2Route setLastUpdated:]


C2RoutingTable : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *routingTable

  // instance methods
  -[C2RoutingTable init]
  -[C2RoutingTable .cxx_destruct]
  -[C2RoutingTable updateOriginalHostname:destinationHostname:]
  -[C2RoutingTable copyAndDecorateRequest:]
  -[C2RoutingTable routingTable]
  -[C2RoutingTable setRoutingTable:]


C2Time : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[C2Time converServerTimeToTimeInterval:]
  +[C2Time convertTimeIntervalToServerTime:]


C2MPInternalTestConfig : PBCodable /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit <NSCopying>
 @property  BOOL hasKey
 @property  NSString *key
 @property  BOOL hasValue
 @property  NSString *value

  // instance methods
  -[C2MPInternalTestConfig isEqual:]
  -[C2MPInternalTestConfig copyWithZone:]
  -[C2MPInternalTestConfig key]
  -[C2MPInternalTestConfig .cxx_destruct]
  -[C2MPInternalTestConfig value]
  -[C2MPInternalTestConfig setValue:]
  -[C2MPInternalTestConfig dictionaryRepresentation]
  -[C2MPInternalTestConfig setKey:]
  -[C2MPInternalTestConfig writeTo:]
  -[C2MPInternalTestConfig mergeFrom:]
  -[C2MPInternalTestConfig readFrom:]
  -[C2MPInternalTestConfig copyTo:]
  -[C2MPInternalTestConfig hasKey]
  -[C2MPInternalTestConfig hasValue]


C2MetricOptions : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  unsigned int reportFrequencyRandomValue
 @property  NSString *headerValueForTriggers
 @property  @? testBehavior_reportMetric
 @property  NSURL *c2MetricsEndpoint
 @property  unsigned long reportFrequency
 @property  unsigned long reportFrequencyBase
 @property  unsigned long reportClientOperationFrequency
 @property  unsigned long reportClientOperationFrequencyBase
 @property  unsigned long reportOperationGroupFrequency
 @property  unsigned long reportOperationGroupFrequencyBase
 @property  NSString *clientProcessVersion
 @property  NSString *clientProcessBundleId
 @property  NSString *container
 @property  NSString *environment
 @property  BOOL anonymous
 @property  NSArray *operationGroups
 @property  NSArray *clientOperations
 @property  BOOL pushTrigger
 @property  @? didCompleteWithError

  // class methods
  +[C2MetricOptions supportsSecureCoding]

  // instance methods
  -[C2MetricOptions init]
  -[C2MetricOptions isEqual:]
  -[C2MetricOptions copyWithZone:]
  -[C2MetricOptions container]
  -[C2MetricOptions setContainer:]
  -[C2MetricOptions encodeWithCoder:]
  -[C2MetricOptions initWithCoder:]
  -[C2MetricOptions .cxx_destruct]
  -[C2MetricOptions environment]
  -[C2MetricOptions setEnvironment:]
  -[C2MetricOptions setDidCompleteWithError:]
  -[C2MetricOptions anonymous]
  -[C2MetricOptions setAnonymous:]
  -[C2MetricOptions c2MetricsEndpoint]
  -[C2MetricOptions setC2MetricsEndpoint:]
  -[C2MetricOptions setClientProcessVersion:]
  -[C2MetricOptions setClientProcessBundleId:]
  -[C2MetricOptions setReportClientOperationFrequency:]
  -[C2MetricOptions setReportClientOperationFrequencyBase:]
  -[C2MetricOptions setReportOperationGroupFrequency:]
  -[C2MetricOptions setReportOperationGroupFrequencyBase:]
  -[C2MetricOptions setReportFrequency:]
  -[C2MetricOptions setReportFrequencyBase:]
  -[C2MetricOptions setOperationGroups:]
  -[C2MetricOptions setClientOperations:]
  -[C2MetricOptions setPushTrigger:]
  -[C2MetricOptions didCompleteWithError]
  -[C2MetricOptions reportFrequency]
  -[C2MetricOptions reportFrequencyBase]
  -[C2MetricOptions reportClientOperationFrequency]
  -[C2MetricOptions reportClientOperationFrequencyBase]
  -[C2MetricOptions reportOperationGroupFrequency]
  -[C2MetricOptions reportOperationGroupFrequencyBase]
  -[C2MetricOptions clientProcessVersion]
  -[C2MetricOptions clientProcessBundleId]
  -[C2MetricOptions operationGroups]
  -[C2MetricOptions clientOperations]
  -[C2MetricOptions pushTrigger]
  -[C2MetricOptions testBehavior_reportMetric]
  -[C2MetricOptions setTestBehavior_reportMetric:]
  -[C2MetricOptions reportFrequencyRandomValue]
  -[C2MetricOptions setReportFrequencyRandomValue:]
  -[C2MetricOptions operationGroupTriggered:]
  -[C2MetricOptions clientOperationTriggered:]
  -[C2MetricOptions generateTriggerWithResponseHeader:]
  -[C2MetricOptions rollReportFrequencyRandomValue]
  -[C2MetricOptions generateCloudKitInfo]
  -[C2MetricOptions headerValueForTriggers]


C2MetricOperationGroupOptions : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *operationGroupId
 @property  NSString *operationGroupName

  // class methods
  +[C2MetricOperationGroupOptions supportsSecureCoding]

  // instance methods
  -[C2MetricOperationGroupOptions isEqual:]
  -[C2MetricOperationGroupOptions copyWithZone:]
  -[C2MetricOperationGroupOptions encodeWithCoder:]
  -[C2MetricOperationGroupOptions initWithCoder:]
  -[C2MetricOperationGroupOptions .cxx_destruct]
  -[C2MetricOperationGroupOptions operationGroupName]
  -[C2MetricOperationGroupOptions setOperationGroupName:]
  -[C2MetricOperationGroupOptions setOperationGroupId:]
  -[C2MetricOperationGroupOptions operationGroupId]


C2MetricOperationOptions : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  C2MetricOperationGroupOptions *operationGroup
 @property  NSString *operationId
 @property  NSString *operationType

  // class methods
  +[C2MetricOperationOptions supportsSecureCoding]

  // instance methods
  -[C2MetricOperationOptions isEqual:]
  -[C2MetricOperationOptions copyWithZone:]
  -[C2MetricOperationOptions encodeWithCoder:]
  -[C2MetricOperationOptions initWithCoder:]
  -[C2MetricOperationOptions .cxx_destruct]
  -[C2MetricOperationOptions operationType]
  -[C2MetricOperationOptions setOperationType:]
  -[C2MetricOperationOptions operationGroup]
  -[C2MetricOperationOptions operationId]
  -[C2MetricOperationOptions setOperationId:]
  -[C2MetricOperationOptions setOperationGroup:]


C2MPGenericEventMetricValue : PBCodable /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit <NSCopying>
 @property  BOOL hasStringValue
 @property  NSString *stringValue
 @property  BOOL hasDoubleValue
 @property  double doubleValue
 @property  BOOL hasDateValue
 @property  unsigned long dateValue
 @property  BOOL hasErrorValue
 @property  C2MPError *errorValue

  // instance methods
  -[C2MPGenericEventMetricValue doubleValue]
  -[C2MPGenericEventMetricValue isEqual:]
  -[C2MPGenericEventMetricValue copyWithZone:]
  -[C2MPGenericEventMetricValue stringValue]
  -[C2MPGenericEventMetricValue .cxx_destruct]
  -[C2MPGenericEventMetricValue dictionaryRepresentation]
  -[C2MPGenericEventMetricValue writeTo:]
  -[C2MPGenericEventMetricValue setStringValue:]
  -[C2MPGenericEventMetricValue mergeFrom:]
  -[C2MPGenericEventMetricValue readFrom:]
  -[C2MPGenericEventMetricValue copyTo:]
  -[C2MPGenericEventMetricValue hasStringValue]
  -[C2MPGenericEventMetricValue setDoubleValue:]
  -[C2MPGenericEventMetricValue setHasDoubleValue:]
  -[C2MPGenericEventMetricValue hasDoubleValue]
  -[C2MPGenericEventMetricValue setDateValue:]
  -[C2MPGenericEventMetricValue setHasDateValue:]
  -[C2MPGenericEventMetricValue hasDateValue]
  -[C2MPGenericEventMetricValue dateValue]
  -[C2MPGenericEventMetricValue setErrorValue:]
  -[C2MPGenericEventMetricValue hasErrorValue]
  -[C2MPGenericEventMetricValue errorValue]


C2MPCloudKitOperationInfo : PBCodable /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit <NSCopying>
 @property  BOOL hasOperationId
 @property  NSString *operationId
 @property  BOOL hasOperationType
 @property  NSString *operationType
 @property  BOOL hasOperationTriggered
 @property  BOOL operationTriggered
 @property  BOOL hasOperationGroupIndex
 @property  unsigned int operationGroupIndex

  // instance methods
  -[C2MPCloudKitOperationInfo isEqual:]
  -[C2MPCloudKitOperationInfo copyWithZone:]
  -[C2MPCloudKitOperationInfo .cxx_destruct]
  -[C2MPCloudKitOperationInfo dictionaryRepresentation]
  -[C2MPCloudKitOperationInfo operationType]
  -[C2MPCloudKitOperationInfo setOperationType:]
  -[C2MPCloudKitOperationInfo writeTo:]
  -[C2MPCloudKitOperationInfo mergeFrom:]
  -[C2MPCloudKitOperationInfo readFrom:]
  -[C2MPCloudKitOperationInfo copyTo:]
  -[C2MPCloudKitOperationInfo operationId]
  -[C2MPCloudKitOperationInfo setOperationId:]
  -[C2MPCloudKitOperationInfo hasOperationType]
  -[C2MPCloudKitOperationInfo hasOperationId]
  -[C2MPCloudKitOperationInfo setOperationTriggered:]
  -[C2MPCloudKitOperationInfo setOperationGroupIndex:]
  -[C2MPCloudKitOperationInfo setHasOperationTriggered:]
  -[C2MPCloudKitOperationInfo hasOperationTriggered]
  -[C2MPCloudKitOperationInfo setHasOperationGroupIndex:]
  -[C2MPCloudKitOperationInfo hasOperationGroupIndex]
  -[C2MPCloudKitOperationInfo operationTriggered]
  -[C2MPCloudKitOperationInfo operationGroupIndex]


C2MetricRequestOptions : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned char _allowsExpensiveAccess
 @property  unsigned char _allowsPowerNapScheduling
 @property  NSString *_sourceApplicationBundleIdentifier
 @property  NSString *_sourceApplicationSecondaryIdentifier
 @property  NSUUID *metricUUID
 @property  C2MetricOptions *metricOptions

  // instance methods
  -[C2MetricRequestOptions init]
  -[C2MetricRequestOptions .cxx_destruct]
  -[C2MetricRequestOptions set_sourceApplicationSecondaryIdentifier:]
  -[C2MetricRequestOptions _sourceApplicationSecondaryIdentifier]
  -[C2MetricRequestOptions set_sourceApplicationBundleIdentifier:]
  -[C2MetricRequestOptions _sourceApplicationBundleIdentifier]
  -[C2MetricRequestOptions _allowsPowerNapScheduling]
  -[C2MetricRequestOptions _allowsExpensiveAccess]
  -[C2MetricRequestOptions set_allowsExpensiveAccess:]
  -[C2MetricRequestOptions set_allowsPowerNapScheduling:]
  -[C2MetricRequestOptions metricUUID]
  -[C2MetricRequestOptions setMetricOptions:]
  -[C2MetricRequestOptions metricOptions]
  -[C2MetricRequestOptions setMetricUUID:]
  -[C2MetricRequestOptions initWithRequestOptions:]
  -[C2MetricRequestOptions metricRequestTransportOptions]


C2MPNetworkEvent : PBCodable /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit <NSCopying>
 @property  BOOL hasTriggers
 @property  unsigned long triggers
 @property  BOOL hasReportFrequency
 @property  unsigned long reportFrequency
 @property  BOOL hasReportFrequencyBase
 @property  unsigned long reportFrequencyBase
 @property  BOOL hasNetworkTaskDescription
 @property  NSString *networkTaskDescription
 @property  BOOL hasNetworkHostname
 @property  NSString *networkHostname
 @property  BOOL hasNetworkRemoteAddresssAndPort
 @property  NSString *networkRemoteAddresssAndPort
 @property  BOOL hasNetworkConnectionUuid
 @property  NSString *networkConnectionUuid
 @property  BOOL hasNetworkConnectionReused
 @property  BOOL networkConnectionReused
 @property  BOOL hasNetworkInterfaceIdentifier
 @property  NSString *networkInterfaceIdentifier
 @property  BOOL hasNetworkProtocolName
 @property  NSString *networkProtocolName
 @property  BOOL hasNetworkRequestHeaderSize
 @property  unsigned int networkRequestHeaderSize
 @property  BOOL hasNetworkRequestBodyBytesSent
 @property  unsigned long networkRequestBodyBytesSent
 @property  BOOL hasNetworkResponseHeaderSize
 @property  unsigned int networkResponseHeaderSize
 @property  BOOL hasNetworkResponseBodyBytesReceived
 @property  unsigned long networkResponseBodyBytesReceived
 @property  BOOL hasNetworkPreviousAttemptCount
 @property  unsigned int networkPreviousAttemptCount
 @property  BOOL hasNetworkFatalError
 @property  C2MPError *networkFatalError
 @property  BOOL hasNetworkStatusCode
 @property  unsigned long networkStatusCode
 @property  BOOL hasNetworkRequestUri
 @property  NSString *networkRequestUri
 @property  BOOL hasNetworkIsDiscretionary
 @property  BOOL networkIsDiscretionary
 @property  BOOL hasTimestampC2Init
 @property  unsigned long timestampC2Init
 @property  BOOL hasTimestampC2Start
 @property  unsigned long timestampC2Start
 @property  BOOL hasTimestampC2Now
 @property  unsigned long timestampC2Now
 @property  BOOL hasTimestampDnsStart
 @property  unsigned long timestampDnsStart
 @property  BOOL hasTimestampDnsEnd
 @property  unsigned long timestampDnsEnd
 @property  BOOL hasTimestampTcpStart
 @property  unsigned long timestampTcpStart
 @property  BOOL hasTimestampTcpEnd
 @property  unsigned long timestampTcpEnd
 @property  BOOL hasTimestampSslStart
 @property  unsigned long timestampSslStart
 @property  BOOL hasTimestampRequestStart
 @property  unsigned long timestampRequestStart
 @property  BOOL hasTimestampRequestEnd
 @property  unsigned long timestampRequestEnd
 @property  BOOL hasTimestampResponseStart
 @property  unsigned long timestampResponseStart
 @property  BOOL hasTimestampResponseEnd
 @property  unsigned long timestampResponseEnd
 @property  BOOL hasOptionsQualityOfService
 @property  NSString *optionsQualityOfService
 @property  BOOL hasOptionsOutOfProcess
 @property  BOOL optionsOutOfProcess
 @property  BOOL hasOptionsOutOfProcessForceDiscretionary
 @property  BOOL optionsOutOfProcessForceDiscretionary
 @property  BOOL hasOptionsAllowExpensiveAccess
 @property  BOOL optionsAllowExpensiveAccess
 @property  BOOL hasOptionsAllowPowerNapScheduling
 @property  BOOL optionsAllowPowerNapScheduling
 @property  BOOL hasOptionsTimeoutIntervalForRequest
 @property  unsigned int optionsTimeoutIntervalForRequest
 @property  BOOL hasOptionsTimeoutIntervalForResource
 @property  unsigned int optionsTimeoutIntervalForResource
 @property  BOOL hasOptionsSourceApplicationBundleIdentifier
 @property  NSString *optionsSourceApplicationBundleIdentifier
 @property  BOOL hasOptionsSourceApplicationSecondaryIdentifier
 @property  NSString *optionsSourceApplicationSecondaryIdentifier
 @property  BOOL hasOptionsAppleIdContext
 @property  BOOL optionsAppleIdContext
 @property  BOOL hasOptionsTlsPinningRequired
 @property  BOOL optionsTlsPinningRequired
 @property  BOOL hasOptionsDiscretionaryNetworkBehavior
 @property  NSString *optionsDiscretionaryNetworkBehavior
 @property  BOOL hasOptionsDuetPreClearedMode
 @property  NSString *optionsDuetPreClearedMode

  // instance methods
  -[C2MPNetworkEvent isEqual:]
  -[C2MPNetworkEvent copyWithZone:]
  -[C2MPNetworkEvent .cxx_destruct]
  -[C2MPNetworkEvent dictionaryRepresentation]
  -[C2MPNetworkEvent writeTo:]
  -[C2MPNetworkEvent mergeFrom:]
  -[C2MPNetworkEvent readFrom:]
  -[C2MPNetworkEvent copyTo:]
  -[C2MPNetworkEvent networkProtocolName]
  -[C2MPNetworkEvent setNetworkProtocolName:]
  -[C2MPNetworkEvent triggers]
  -[C2MPNetworkEvent hasTriggers]
  -[C2MPNetworkEvent setTriggers:]
  -[C2MPNetworkEvent setReportFrequency:]
  -[C2MPNetworkEvent setReportFrequencyBase:]
  -[C2MPNetworkEvent reportFrequency]
  -[C2MPNetworkEvent reportFrequencyBase]
  -[C2MPNetworkEvent setNetworkTaskDescription:]
  -[C2MPNetworkEvent setNetworkHostname:]
  -[C2MPNetworkEvent setNetworkRemoteAddresssAndPort:]
  -[C2MPNetworkEvent setNetworkConnectionUuid:]
  -[C2MPNetworkEvent setNetworkInterfaceIdentifier:]
  -[C2MPNetworkEvent setNetworkFatalError:]
  -[C2MPNetworkEvent setNetworkRequestUri:]
  -[C2MPNetworkEvent setOptionsQualityOfService:]
  -[C2MPNetworkEvent setOptionsSourceApplicationBundleIdentifier:]
  -[C2MPNetworkEvent setOptionsSourceApplicationSecondaryIdentifier:]
  -[C2MPNetworkEvent setOptionsDiscretionaryNetworkBehavior:]
  -[C2MPNetworkEvent setOptionsDuetPreClearedMode:]
  -[C2MPNetworkEvent setHasTriggers:]
  -[C2MPNetworkEvent setHasReportFrequency:]
  -[C2MPNetworkEvent hasReportFrequency]
  -[C2MPNetworkEvent setHasReportFrequencyBase:]
  -[C2MPNetworkEvent hasReportFrequencyBase]
  -[C2MPNetworkEvent hasNetworkTaskDescription]
  -[C2MPNetworkEvent hasNetworkHostname]
  -[C2MPNetworkEvent hasNetworkRemoteAddresssAndPort]
  -[C2MPNetworkEvent hasNetworkConnectionUuid]
  -[C2MPNetworkEvent setNetworkConnectionReused:]
  -[C2MPNetworkEvent setHasNetworkConnectionReused:]
  -[C2MPNetworkEvent hasNetworkConnectionReused]
  -[C2MPNetworkEvent hasNetworkInterfaceIdentifier]
  -[C2MPNetworkEvent hasNetworkProtocolName]
  -[C2MPNetworkEvent setNetworkRequestHeaderSize:]
  -[C2MPNetworkEvent setHasNetworkRequestHeaderSize:]
  -[C2MPNetworkEvent hasNetworkRequestHeaderSize]
  -[C2MPNetworkEvent setNetworkRequestBodyBytesSent:]
  -[C2MPNetworkEvent setHasNetworkRequestBodyBytesSent:]
  -[C2MPNetworkEvent hasNetworkRequestBodyBytesSent]
  -[C2MPNetworkEvent setNetworkResponseHeaderSize:]
  -[C2MPNetworkEvent setHasNetworkResponseHeaderSize:]
  -[C2MPNetworkEvent hasNetworkResponseHeaderSize]
  -[C2MPNetworkEvent setNetworkResponseBodyBytesReceived:]
  -[C2MPNetworkEvent setHasNetworkResponseBodyBytesReceived:]
  -[C2MPNetworkEvent hasNetworkResponseBodyBytesReceived]
  -[C2MPNetworkEvent setNetworkPreviousAttemptCount:]
  -[C2MPNetworkEvent setHasNetworkPreviousAttemptCount:]
  -[C2MPNetworkEvent hasNetworkPreviousAttemptCount]
  -[C2MPNetworkEvent hasNetworkFatalError]
  -[C2MPNetworkEvent setNetworkStatusCode:]
  -[C2MPNetworkEvent setHasNetworkStatusCode:]
  -[C2MPNetworkEvent hasNetworkStatusCode]
  -[C2MPNetworkEvent hasNetworkRequestUri]
  -[C2MPNetworkEvent setNetworkIsDiscretionary:]
  -[C2MPNetworkEvent setHasNetworkIsDiscretionary:]
  -[C2MPNetworkEvent hasNetworkIsDiscretionary]
  -[C2MPNetworkEvent setTimestampC2Init:]
  -[C2MPNetworkEvent setHasTimestampC2Init:]
  -[C2MPNetworkEvent hasTimestampC2Init]
  -[C2MPNetworkEvent setTimestampC2Start:]
  -[C2MPNetworkEvent setHasTimestampC2Start:]
  -[C2MPNetworkEvent hasTimestampC2Start]
  -[C2MPNetworkEvent setTimestampC2Now:]
  -[C2MPNetworkEvent setHasTimestampC2Now:]
  -[C2MPNetworkEvent hasTimestampC2Now]
  -[C2MPNetworkEvent setTimestampDnsStart:]
  -[C2MPNetworkEvent setHasTimestampDnsStart:]
  -[C2MPNetworkEvent hasTimestampDnsStart]
  -[C2MPNetworkEvent setTimestampDnsEnd:]
  -[C2MPNetworkEvent setHasTimestampDnsEnd:]
  -[C2MPNetworkEvent hasTimestampDnsEnd]
  -[C2MPNetworkEvent setTimestampTcpStart:]
  -[C2MPNetworkEvent setHasTimestampTcpStart:]
  -[C2MPNetworkEvent hasTimestampTcpStart]
  -[C2MPNetworkEvent setTimestampTcpEnd:]
  -[C2MPNetworkEvent setHasTimestampTcpEnd:]
  -[C2MPNetworkEvent hasTimestampTcpEnd]
  -[C2MPNetworkEvent setTimestampSslStart:]
  -[C2MPNetworkEvent setHasTimestampSslStart:]
  -[C2MPNetworkEvent hasTimestampSslStart]
  -[C2MPNetworkEvent setTimestampRequestStart:]
  -[C2MPNetworkEvent setHasTimestampRequestStart:]
  -[C2MPNetworkEvent hasTimestampRequestStart]
  -[C2MPNetworkEvent setTimestampRequestEnd:]
  -[C2MPNetworkEvent setHasTimestampRequestEnd:]
  -[C2MPNetworkEvent hasTimestampRequestEnd]
  -[C2MPNetworkEvent setTimestampResponseStart:]
  -[C2MPNetworkEvent setHasTimestampResponseStart:]
  -[C2MPNetworkEvent hasTimestampResponseStart]
  -[C2MPNetworkEvent setTimestampResponseEnd:]
  -[C2MPNetworkEvent setHasTimestampResponseEnd:]
  -[C2MPNetworkEvent hasTimestampResponseEnd]
  -[C2MPNetworkEvent hasOptionsQualityOfService]
  -[C2MPNetworkEvent setOptionsOutOfProcess:]
  -[C2MPNetworkEvent setHasOptionsOutOfProcess:]
  -[C2MPNetworkEvent hasOptionsOutOfProcess]
  -[C2MPNetworkEvent setOptionsOutOfProcessForceDiscretionary:]
  -[C2MPNetworkEvent setHasOptionsOutOfProcessForceDiscretionary:]
  -[C2MPNetworkEvent hasOptionsOutOfProcessForceDiscretionary]
  -[C2MPNetworkEvent setOptionsAllowExpensiveAccess:]
  -[C2MPNetworkEvent setHasOptionsAllowExpensiveAccess:]
  -[C2MPNetworkEvent hasOptionsAllowExpensiveAccess]
  -[C2MPNetworkEvent setOptionsAllowPowerNapScheduling:]
  -[C2MPNetworkEvent setHasOptionsAllowPowerNapScheduling:]
  -[C2MPNetworkEvent hasOptionsAllowPowerNapScheduling]
  -[C2MPNetworkEvent setOptionsTimeoutIntervalForRequest:]
  -[C2MPNetworkEvent setHasOptionsTimeoutIntervalForRequest:]
  -[C2MPNetworkEvent hasOptionsTimeoutIntervalForRequest]
  -[C2MPNetworkEvent setOptionsTimeoutIntervalForResource:]
  -[C2MPNetworkEvent setHasOptionsTimeoutIntervalForResource:]
  -[C2MPNetworkEvent hasOptionsTimeoutIntervalForResource]
  -[C2MPNetworkEvent hasOptionsSourceApplicationBundleIdentifier]
  -[C2MPNetworkEvent hasOptionsSourceApplicationSecondaryIdentifier]
  -[C2MPNetworkEvent setOptionsAppleIdContext:]
  -[C2MPNetworkEvent setHasOptionsAppleIdContext:]
  -[C2MPNetworkEvent hasOptionsAppleIdContext]
  -[C2MPNetworkEvent setOptionsTlsPinningRequired:]
  -[C2MPNetworkEvent setHasOptionsTlsPinningRequired:]
  -[C2MPNetworkEvent hasOptionsTlsPinningRequired]
  -[C2MPNetworkEvent hasOptionsDiscretionaryNetworkBehavior]
  -[C2MPNetworkEvent hasOptionsDuetPreClearedMode]
  -[C2MPNetworkEvent networkTaskDescription]
  -[C2MPNetworkEvent networkHostname]
  -[C2MPNetworkEvent networkRemoteAddresssAndPort]
  -[C2MPNetworkEvent networkConnectionUuid]
  -[C2MPNetworkEvent networkConnectionReused]
  -[C2MPNetworkEvent networkInterfaceIdentifier]
  -[C2MPNetworkEvent networkRequestHeaderSize]
  -[C2MPNetworkEvent networkRequestBodyBytesSent]
  -[C2MPNetworkEvent networkResponseHeaderSize]
  -[C2MPNetworkEvent networkResponseBodyBytesReceived]
  -[C2MPNetworkEvent networkPreviousAttemptCount]
  -[C2MPNetworkEvent networkFatalError]
  -[C2MPNetworkEvent networkStatusCode]
  -[C2MPNetworkEvent networkRequestUri]
  -[C2MPNetworkEvent networkIsDiscretionary]
  -[C2MPNetworkEvent timestampC2Init]
  -[C2MPNetworkEvent timestampC2Start]
  -[C2MPNetworkEvent timestampC2Now]
  -[C2MPNetworkEvent timestampDnsStart]
  -[C2MPNetworkEvent timestampDnsEnd]
  -[C2MPNetworkEvent timestampTcpStart]
  -[C2MPNetworkEvent timestampTcpEnd]
  -[C2MPNetworkEvent timestampSslStart]
  -[C2MPNetworkEvent timestampRequestStart]
  -[C2MPNetworkEvent timestampRequestEnd]
  -[C2MPNetworkEvent timestampResponseStart]
  -[C2MPNetworkEvent timestampResponseEnd]
  -[C2MPNetworkEvent optionsQualityOfService]
  -[C2MPNetworkEvent optionsOutOfProcess]
  -[C2MPNetworkEvent optionsOutOfProcessForceDiscretionary]
  -[C2MPNetworkEvent optionsAllowExpensiveAccess]
  -[C2MPNetworkEvent optionsAllowPowerNapScheduling]
  -[C2MPNetworkEvent optionsTimeoutIntervalForRequest]
  -[C2MPNetworkEvent optionsTimeoutIntervalForResource]
  -[C2MPNetworkEvent optionsSourceApplicationBundleIdentifier]
  -[C2MPNetworkEvent optionsSourceApplicationSecondaryIdentifier]
  -[C2MPNetworkEvent optionsAppleIdContext]
  -[C2MPNetworkEvent optionsTlsPinningRequired]
  -[C2MPNetworkEvent optionsDiscretionaryNetworkBehavior]
  -[C2MPNetworkEvent optionsDuetPreClearedMode]


C2ReportMetrics : NSObject /usr/lib/libSystem.B.dylib <C2RequestDelegate>
 @property  BOOL ignoreRequestThrottle
 @property  NSString *requestThrottleIdentifier
 @property  unsigned long requestThrottleLimit
 @property  NSMutableURLRequest *metricRequest
 @property  C2RequestOptions *metricsTransportRequestOptions
 @property  NSURLSessionTask *metricTask
 @property  C2MetricOptions *metricOptions
 @property  @? testBehavior_tooManyTasksRunning
 @property  @? testBehavior_didCompleteWithError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[C2ReportMetrics reportMetricWithOptions:genericMetricType:eventName:startTime:endTime:attributes:]
  +[C2ReportMetrics gzipEncode:]
  +[C2ReportMetrics _reportWithOptions:networkEvent:genericEvent:triggers:]
  +[C2ReportMetrics requestForMetricRequestOptions:networkEvent:genericEvent:triggers:]
  +[C2ReportMetrics reportNetworkEvent:triggers:originalSessionTask:]

  // instance methods
  -[C2ReportMetrics .cxx_destruct]
  -[C2ReportMetrics URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[C2ReportMetrics URLSession:task:needNewBodyStream:]
  -[C2ReportMetrics URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:]
  -[C2ReportMetrics URLSession:task:didCompleteWithError:]
  -[C2ReportMetrics URLSession:dataTask:didReceiveData:]
  -[C2ReportMetrics URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[C2ReportMetrics URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:]
  -[C2ReportMetrics send]
  -[C2ReportMetrics URLSession:_taskIsWaitingForConnection:]
  -[C2ReportMetrics URLSession:task:_conditionalRequirementsChanged:]
  -[C2ReportMetrics URLSession:_willRetryBackgroundDataTask:withError:]
  -[C2ReportMetrics setMetricOptions:]
  -[C2ReportMetrics metricOptions]
  -[C2ReportMetrics setMetricRequest:]
  -[C2ReportMetrics initWithMetricRequest:metricRequestOptions:ignoreRequestThrottle:requestThrottleIdentifier:requestThrottleLimit:]
  -[C2ReportMetrics ignoreRequestThrottle]
  -[C2ReportMetrics setIgnoreRequestThrottle:]
  -[C2ReportMetrics requestThrottleIdentifier]
  -[C2ReportMetrics setRequestThrottleIdentifier:]
  -[C2ReportMetrics requestThrottleLimit]
  -[C2ReportMetrics setRequestThrottleLimit:]
  -[C2ReportMetrics metricRequest]
  -[C2ReportMetrics metricsTransportRequestOptions]
  -[C2ReportMetrics setMetricsTransportRequestOptions:]
  -[C2ReportMetrics metricTask]
  -[C2ReportMetrics setMetricTask:]
  -[C2ReportMetrics testBehavior_tooManyTasksRunning]
  -[C2ReportMetrics setTestBehavior_tooManyTasksRunning:]
  -[C2ReportMetrics testBehavior_didCompleteWithError]
  -[C2ReportMetrics setTestBehavior_didCompleteWithError:]


C2SessionGroup : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *configurationName
 @property  C2Session *pinnedSessionAllowingExpiredDNS
 @property  C2Session *pinnedSession
 @property  C2Session *unpinnedSession
 @property  NSArray *sessions
 @property  BOOL isEmpty

  // instance methods
  -[C2SessionGroup isEmpty]
  -[C2SessionGroup .cxx_destruct]
  -[C2SessionGroup sessions]
  -[C2SessionGroup configurationName]
  -[C2SessionGroup removeSession:]
  -[C2SessionGroup setConfigurationName:]
  -[C2SessionGroup initWithConfigurationName:]
  -[C2SessionGroup sessionForOptions:]
  -[C2SessionGroup setSession:forOptions:]
  -[C2SessionGroup pinnedSessionAllowingExpiredDNS]
  -[C2SessionGroup setPinnedSessionAllowingExpiredDNS:]
  -[C2SessionGroup pinnedSession]
  -[C2SessionGroup setPinnedSession:]
  -[C2SessionGroup unpinnedSession]
  -[C2SessionGroup setUnpinnedSession:]


C2Metric : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[C2Metric generateDeviceInfo]
  +[C2Metric generateGenericEventWithName:genericMetricType:startTime:endTime:attributes:]
  +[C2Metric generateError:]


C2MPCloudKitInfo : PBCodable /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit <NSCopying>
 @property  BOOL hasClientProcessVersion
 @property  NSString *clientProcessVersion
 @property  BOOL hasClientBundleId
 @property  NSString *clientBundleId
 @property  BOOL hasContainer
 @property  NSString *container
 @property  BOOL hasEnvironment
 @property  NSString *environment
 @property  BOOL hasAnonymous
 @property  BOOL anonymous
 @property  NSMutableArray *operationGroups
 @property  BOOL hasReportOperationGroupFrequency
 @property  unsigned long reportOperationGroupFrequency
 @property  BOOL hasReportOperationGroupFrequencyBase
 @property  unsigned long reportOperationGroupFrequencyBase
 @property  NSMutableArray *clientOperations
 @property  BOOL hasReportClientOperationFrequency
 @property  unsigned long reportClientOperationFrequency
 @property  BOOL hasReportClientOperationFrequencyBase
 @property  unsigned long reportClientOperationFrequencyBase

  // class methods
  +[C2MPCloudKitInfo operationGroupType]
  +[C2MPCloudKitInfo clientOperationType]

  // instance methods
  -[C2MPCloudKitInfo isEqual:]
  -[C2MPCloudKitInfo copyWithZone:]
  -[C2MPCloudKitInfo container]
  -[C2MPCloudKitInfo setContainer:]
  -[C2MPCloudKitInfo .cxx_destruct]
  -[C2MPCloudKitInfo dictionaryRepresentation]
  -[C2MPCloudKitInfo environment]
  -[C2MPCloudKitInfo setEnvironment:]
  -[C2MPCloudKitInfo writeTo:]
  -[C2MPCloudKitInfo mergeFrom:]
  -[C2MPCloudKitInfo readFrom:]
  -[C2MPCloudKitInfo copyTo:]
  -[C2MPCloudKitInfo hasContainer]
  -[C2MPCloudKitInfo hasEnvironment]
  -[C2MPCloudKitInfo anonymous]
  -[C2MPCloudKitInfo setAnonymous:]
  -[C2MPCloudKitInfo clientBundleId]
  -[C2MPCloudKitInfo setClientProcessVersion:]
  -[C2MPCloudKitInfo setReportClientOperationFrequency:]
  -[C2MPCloudKitInfo setReportClientOperationFrequencyBase:]
  -[C2MPCloudKitInfo setReportOperationGroupFrequency:]
  -[C2MPCloudKitInfo setReportOperationGroupFrequencyBase:]
  -[C2MPCloudKitInfo setOperationGroups:]
  -[C2MPCloudKitInfo setClientOperations:]
  -[C2MPCloudKitInfo reportClientOperationFrequency]
  -[C2MPCloudKitInfo reportClientOperationFrequencyBase]
  -[C2MPCloudKitInfo reportOperationGroupFrequency]
  -[C2MPCloudKitInfo reportOperationGroupFrequencyBase]
  -[C2MPCloudKitInfo clientProcessVersion]
  -[C2MPCloudKitInfo operationGroups]
  -[C2MPCloudKitInfo clientOperations]
  -[C2MPCloudKitInfo setClientBundleId:]
  -[C2MPCloudKitInfo addOperationGroup:]
  -[C2MPCloudKitInfo addClientOperation:]
  -[C2MPCloudKitInfo operationGroupsCount]
  -[C2MPCloudKitInfo clearOperationGroups]
  -[C2MPCloudKitInfo operationGroupAtIndex:]
  -[C2MPCloudKitInfo clientOperationsCount]
  -[C2MPCloudKitInfo clearClientOperations]
  -[C2MPCloudKitInfo clientOperationAtIndex:]
  -[C2MPCloudKitInfo hasClientProcessVersion]
  -[C2MPCloudKitInfo hasClientBundleId]
  -[C2MPCloudKitInfo setHasAnonymous:]
  -[C2MPCloudKitInfo hasAnonymous]
  -[C2MPCloudKitInfo setHasReportOperationGroupFrequency:]
  -[C2MPCloudKitInfo hasReportOperationGroupFrequency]
  -[C2MPCloudKitInfo setHasReportOperationGroupFrequencyBase:]
  -[C2MPCloudKitInfo hasReportOperationGroupFrequencyBase]
  -[C2MPCloudKitInfo setHasReportClientOperationFrequency:]
  -[C2MPCloudKitInfo hasReportClientOperationFrequency]
  -[C2MPCloudKitInfo setHasReportClientOperationFrequencyBase:]
  -[C2MPCloudKitInfo hasReportClientOperationFrequencyBase]


C2Logging : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[C2Logging printToLog:withDescription:object:]
  +[C2Logging printToLog:withDescription:dictionary:]
  +[C2Logging printToLog:withDescription:array:]
  +[C2Logging printToLog:withDescription:error:]


C2MPGenericEvent : PBCodable /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasTimestampStart
 @property  unsigned long timestampStart
 @property  BOOL hasTimestampEnd
 @property  unsigned long timestampEnd
 @property  NSMutableArray *metrics

  // class methods
  +[C2MPGenericEvent metricType]

  // instance methods
  -[C2MPGenericEvent isEqual:]
  -[C2MPGenericEvent name]
  -[C2MPGenericEvent copyWithZone:]
  -[C2MPGenericEvent type]
  -[C2MPGenericEvent setType:]
  -[C2MPGenericEvent .cxx_destruct]
  -[C2MPGenericEvent setName:]
  -[C2MPGenericEvent dictionaryRepresentation]
  -[C2MPGenericEvent writeTo:]
  -[C2MPGenericEvent metrics]
  -[C2MPGenericEvent mergeFrom:]
  -[C2MPGenericEvent readFrom:]
  -[C2MPGenericEvent copyTo:]
  -[C2MPGenericEvent typeAsString:]
  -[C2MPGenericEvent StringAsType:]
  -[C2MPGenericEvent hasName]
  -[C2MPGenericEvent setMetrics:]
  -[C2MPGenericEvent setHasType:]
  -[C2MPGenericEvent hasType]
  -[C2MPGenericEvent addMetric:]
  -[C2MPGenericEvent clearMetrics]
  -[C2MPGenericEvent setTimestampStart:]
  -[C2MPGenericEvent setTimestampEnd:]
  -[C2MPGenericEvent metricsCount]
  -[C2MPGenericEvent metricAtIndex:]
  -[C2MPGenericEvent setHasTimestampStart:]
  -[C2MPGenericEvent hasTimestampStart]
  -[C2MPGenericEvent setHasTimestampEnd:]
  -[C2MPGenericEvent hasTimestampEnd]
  -[C2MPGenericEvent timestampStart]
  -[C2MPGenericEvent timestampEnd]


C2SessionTLSCache : NSObject /usr/lib/libSystem.B.dylib <C2SessionDelegate>
 @property  C2Session *pinnedSession
 @property  C2Session *unpinnedSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[C2SessionTLSCache init]
  -[C2SessionTLSCache .cxx_destruct]
  -[C2SessionTLSCache sessionForOptions:]
  -[C2SessionTLSCache pinnedSession]
  -[C2SessionTLSCache setPinnedSession:]
  -[C2SessionTLSCache unpinnedSession]
  -[C2SessionTLSCache setUnpinnedSession:]
  -[C2SessionTLSCache _createSessionWithTLSPinning:]
  -[C2SessionTLSCache underlyingDelegateQueue]
  -[C2SessionTLSCache C2Session:didBecomeInvalidWithError:]
  -[C2SessionTLSCache C2Session:originalHost:updatedRoute:]


C2MPError : PBCodable /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit <NSCopying>
 @property  BOOL hasErrorDomain
 @property  NSString *errorDomain
 @property  BOOL hasErrorCode
 @property  long long errorCode
 @property  BOOL hasErrorDescription
 @property  NSString *errorDescription
 @property  BOOL hasUnderlyingError
 @property  C2MPError *underlyingError

  // instance methods
  -[C2MPError isEqual:]
  -[C2MPError copyWithZone:]
  -[C2MPError .cxx_destruct]
  -[C2MPError dictionaryRepresentation]
  -[C2MPError writeTo:]
  -[C2MPError mergeFrom:]
  -[C2MPError readFrom:]
  -[C2MPError copyTo:]
  -[C2MPError setUnderlyingError:]
  -[C2MPError errorCode]
  -[C2MPError errorDomain]
  -[C2MPError setErrorDomain:]
  -[C2MPError setErrorCode:]
  -[C2MPError hasErrorDomain]
  -[C2MPError setHasErrorCode:]
  -[C2MPError hasErrorCode]
  -[C2MPError errorDescription]
  -[C2MPError setErrorDescription:]
  -[C2MPError underlyingError]
  -[C2MPError hasErrorDescription]
  -[C2MPError hasUnderlyingError]


C2DeviceInfo : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[C2DeviceInfo processName]
  +[C2DeviceInfo isAppleInternal]
  +[C2DeviceInfo productVersion]
  +[C2DeviceInfo productType]
  +[C2DeviceInfo buildVersion]
  +[C2DeviceInfo testName]
  +[C2DeviceInfo productName]
  +[C2DeviceInfo processUUID]
  +[C2DeviceInfo processVersion]


C2SessionTask : NSObject /usr/lib/libSystem.B.dylib <C2SessionTaskDelegate>
 @property  NSURLSessionDataTask *task
 @property  BOOL isComplete
 @property  <C2SessionTaskDelegate> *sessionTaskDelegate
 @property  double initTime
 @property  double resetTime
 @property  unsigned int attemptCount
 @property  C2RequestOptions *options
 @property  <C2RequestDelegate> *delegate
 @property  NSObject<OS_os_activity> *activity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[C2SessionTask captureMetricsForTimingData:withKey:]
  +[C2SessionTask captureMetricDurationBetweenStart:andEnd:]

  // instance methods
  -[C2SessionTask dealloc]
  -[C2SessionTask invalidate]
  -[C2SessionTask options]
  -[C2SessionTask delegate]
  -[C2SessionTask .cxx_destruct]
  -[C2SessionTask activity]
  -[C2SessionTask task]
  -[C2SessionTask setTask:]
  -[C2SessionTask isComplete]
  -[C2SessionTask taskDescription]
  -[C2SessionTask attemptCount]
  -[C2SessionTask setAttemptCount:]
  -[C2SessionTask setIsComplete:]
  -[C2SessionTask resetTime]
  -[C2SessionTask C2Session:task:didCompleteWithError:]
  -[C2SessionTask initWithOptions:delegate:sessionTaskDelegate:]
  -[C2SessionTask handleCallbackForTask:callback:]
  -[C2SessionTask captureMetricsWithError:eventType:]
  -[C2SessionTask sessionTaskDelegate]
  -[C2SessionTask setSessionTaskDelegate:]
  -[C2SessionTask initTime]
  -[C2SessionTask setInitTime:]
  -[C2SessionTask setResetTime:]


C2MPGenericEventMetric : PBCodable /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit <NSCopying>
 @property  BOOL hasKey
 @property  NSString *key
 @property  BOOL hasValue
 @property  C2MPGenericEventMetricValue *value

  // instance methods
  -[C2MPGenericEventMetric isEqual:]
  -[C2MPGenericEventMetric copyWithZone:]
  -[C2MPGenericEventMetric key]
  -[C2MPGenericEventMetric .cxx_destruct]
  -[C2MPGenericEventMetric value]
  -[C2MPGenericEventMetric setValue:]
  -[C2MPGenericEventMetric dictionaryRepresentation]
  -[C2MPGenericEventMetric setKey:]
  -[C2MPGenericEventMetric writeTo:]
  -[C2MPGenericEventMetric mergeFrom:]
  -[C2MPGenericEventMetric readFrom:]
  -[C2MPGenericEventMetric copyTo:]
  -[C2MPGenericEventMetric hasKey]
  -[C2MPGenericEventMetric hasValue]


C2MPServerInfo : PBCodable /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit <NSCopying>
 @property  BOOL hasServiceName
 @property  NSString *serviceName
 @property  BOOL hasPartition
 @property  NSString *partition
 @property  BOOL hasServiceBuild
 @property  NSString *serviceBuild
 @property  BOOL hasServiceInstance
 @property  NSString *serviceInstance

  // instance methods
  -[C2MPServerInfo isEqual:]
  -[C2MPServerInfo copyWithZone:]
  -[C2MPServerInfo .cxx_destruct]
  -[C2MPServerInfo dictionaryRepresentation]
  -[C2MPServerInfo serviceName]
  -[C2MPServerInfo writeTo:]
  -[C2MPServerInfo mergeFrom:]
  -[C2MPServerInfo readFrom:]
  -[C2MPServerInfo copyTo:]
  -[C2MPServerInfo setServiceName:]
  -[C2MPServerInfo hasServiceName]
  -[C2MPServerInfo setPartition:]
  -[C2MPServerInfo setServiceBuild:]
  -[C2MPServerInfo setServiceInstance:]
  -[C2MPServerInfo hasPartition]
  -[C2MPServerInfo hasServiceBuild]
  -[C2MPServerInfo hasServiceInstance]
  -[C2MPServerInfo partition]
  -[C2MPServerInfo serviceBuild]
  -[C2MPServerInfo serviceInstance]


C2RequestOptions : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *originalHost
 @property  BOOL metricRequest
 @property  NSURL *invokedURL
 @property  double emptySessionExpiryInSeconds
 @property  BOOL outOfProcess
 @property  @? testBehavior_sessionGroupCreated
 @property  long long qualityOfService
 @property  NSString *outOfProcessPoolName
 @property  BOOL _allowsExpensiveAccess
 @property  BOOL _allowsPowerNapScheduling
 @property  double _timeoutIntervalForRequest
 @property  double _timeoutIntervalForResource
 @property  BOOL useAdaptiveTimeouts
 @property  NSString *_sourceApplicationBundleIdentifier
 @property  NSString *_sourceApplicationSecondaryIdentifier
 @property  NSString *_appleIDContextSessionIdentifier
 @property  BOOL tlsPinning
 @property  BOOL allowRouting
 @property  BOOL allowExpiredDNSBehavior
 @property  unsigned long discretionaryNetworkBehavior
 @property  unsigned long duetPreClearedMode
 @property  BOOL _allowsRetryForBackgroundDataTasks
 @property  NSString *identifier
 @property  NSDictionary *resolvedEndpointsWithHostname
 @property  C2MetricOptions *metricOptions
 @property  BOOL redactRemoteEndpointFromNetworkMetrics
 @property  BOOL outOfProcessDiscretionary
 @property  NSURL *c2MetricsEndpoint
 @property  unsigned long c2MetricsReportFrequency
 @property  unsigned long c2MetricsReportFrequencyBase

  // class methods
  +[C2RequestOptions supportsSecureCoding]
  +[C2RequestOptions stringForQualityOfService:]
  +[C2RequestOptions stringForDiscretionaryNetworkBehavior:]
  +[C2RequestOptions stringForDuetPreClearedMode:]
  +[C2RequestOptions triesteMetricsEnabled]

  // instance methods
  -[C2RequestOptions init]
  -[C2RequestOptions isEqual:]
  -[C2RequestOptions copyWithZone:]
  -[C2RequestOptions encodeWithCoder:]
  -[C2RequestOptions initWithCoder:]
  -[C2RequestOptions .cxx_destruct]
  -[C2RequestOptions identifier]
  -[C2RequestOptions setIdentifier:]
  -[C2RequestOptions qualityOfService]
  -[C2RequestOptions setQualityOfService:]
  -[C2RequestOptions setDiscretionaryNetworkBehavior:]
  -[C2RequestOptions set_timeoutIntervalForResource:]
  -[C2RequestOptions _timeoutIntervalForResource]
  -[C2RequestOptions _allowsRetryForBackgroundDataTasks]
  -[C2RequestOptions set_sourceApplicationSecondaryIdentifier:]
  -[C2RequestOptions _sourceApplicationSecondaryIdentifier]
  -[C2RequestOptions set_sourceApplicationBundleIdentifier:]
  -[C2RequestOptions _sourceApplicationBundleIdentifier]
  -[C2RequestOptions _allowsPowerNapScheduling]
  -[C2RequestOptions _allowsExpensiveAccess]
  -[C2RequestOptions _timeoutIntervalForRequest]
  -[C2RequestOptions set_allowsExpensiveAccess:]
  -[C2RequestOptions set_allowsPowerNapScheduling:]
  -[C2RequestOptions set_allowsRetryForBackgroundDataTasks:]
  -[C2RequestOptions discretionaryNetworkBehavior]
  -[C2RequestOptions allowExpiredDNSBehavior]
  -[C2RequestOptions setDuetPreClearedMode:]
  -[C2RequestOptions duetPreClearedMode]
  -[C2RequestOptions setTlsPinning:]
  -[C2RequestOptions setOutOfProcessPoolName:]
  -[C2RequestOptions set_timeoutIntervalForRequest:]
  -[C2RequestOptions set_appleIDContextSessionIdentifier:]
  -[C2RequestOptions setAllowRouting:]
  -[C2RequestOptions setAllowExpiredDNSBehavior:]
  -[C2RequestOptions setMetricOptions:]
  -[C2RequestOptions c2MetricsEndpoint]
  -[C2RequestOptions setC2MetricsEndpoint:]
  -[C2RequestOptions metricOptions]
  -[C2RequestOptions copyAndDecorateRequest:]
  -[C2RequestOptions setMetricRequest:]
  -[C2RequestOptions setResolvedEndpointsWithHostname:]
  -[C2RequestOptions metricRequest]
  -[C2RequestOptions tlsPinning]
  -[C2RequestOptions sessionConfigurationNameWithRouteHost:]
  -[C2RequestOptions outOfProcess]
  -[C2RequestOptions outOfProcessPoolName]
  -[C2RequestOptions _appleIDContextSessionIdentifier]
  -[C2RequestOptions redactRemoteEndpointFromNetworkMetrics]
  -[C2RequestOptions setUseAdaptiveTimeouts:]
  -[C2RequestOptions setRedactRemoteEndpointFromNetworkMetrics:]
  -[C2RequestOptions setOriginalHost:]
  -[C2RequestOptions setInvokedURL:]
  -[C2RequestOptions setTestBehavior_sessionGroupCreated:]
  -[C2RequestOptions useAdaptiveTimeouts]
  -[C2RequestOptions defaultSessionConfigurationWithName:]
  -[C2RequestOptions allowRouting]
  -[C2RequestOptions resolvedEndpointsWithHostname]
  -[C2RequestOptions originalHost]
  -[C2RequestOptions invokedURL]
  -[C2RequestOptions setOutOfProcess:]
  -[C2RequestOptions sessionConfigurationWithName:]
  -[C2RequestOptions decorateTask:]
  -[C2RequestOptions emptySessionExpiryInSeconds]
  -[C2RequestOptions outOfProcessDiscretionary]
  -[C2RequestOptions setOutOfProcessDiscretionary:]
  -[C2RequestOptions c2MetricsReportFrequency]
  -[C2RequestOptions setC2MetricsReportFrequency:]
  -[C2RequestOptions c2MetricsReportFrequencyBase]
  -[C2RequestOptions setC2MetricsReportFrequencyBase:]
  -[C2RequestOptions testBehavior_sessionGroupCreated]


C2Session : NSObject /usr/lib/libSystem.B.dylib <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionTaskDelegatePrivate, NSURLSessionDataDelegate, NSURLSessionDataDelegatePrivate, C2RequestDelegate, C2SessionTaskDelegate>
 @property  NSString *originalHost
 @property  NSString *routeHost
 @property  double routeLastUpdated
 @property  BOOL isComplete
 @property  <C2SessionDelegate> *sessionDelegate
 @property  double emptyTimestamp
 @property  NSMutableDictionary *wrappedTaskByTaskDescription
 @property  NSOperationQueue *queue
 @property  @? testBehavior_sessionInvalidated_cfnetwork
 @property  @? testBehavior_sessionInvalidated_shouldInvalidate
 @property  @? testBehavior_cleanupRetainCycle
 @property  NSString *sessionConfigurationName
 @property  NSURLSession *session
 @property  C2RequestOptions *options
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[C2Session portFromURL:]

  // instance methods
  -[C2Session dealloc]
  -[C2Session queue]
  -[C2Session options]
  -[C2Session .cxx_destruct]
  -[C2Session session]
  -[C2Session invalidateAndCancel]
  -[C2Session URLSession:didBecomeInvalidWithError:]
  -[C2Session URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[C2Session URLSession:task:needNewBodyStream:]
  -[C2Session URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:]
  -[C2Session URLSession:task:didCompleteWithError:]
  -[C2Session URLSession:dataTask:didReceiveData:]
  -[C2Session URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[C2Session removeTask:]
  -[C2Session URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:]
  -[C2Session isComplete]
  -[C2Session URLSession:_taskIsWaitingForConnection:]
  -[C2Session URLSession:task:_conditionalRequirementsChanged:]
  -[C2Session URLSession:_willRetryBackgroundDataTask:withError:]
  -[C2Session setSessionDelegate:]
  -[C2Session setIsComplete:]
  -[C2Session sessionDelegate]
  -[C2Session initWithSessionConfigurationName:routeHost:options:sessionDelegate:]
  -[C2Session C2Session:didBecomeInvalidWithError:]
  -[C2Session C2Session:task:didCompleteWithError:]
  -[C2Session setOriginalHost:]
  -[C2Session originalHost]
  -[C2Session wrappedTaskByTaskDescription]
  -[C2Session _recalculateSessionDelegateQueuePriority]
  -[C2Session cleanupRetainCycle]
  -[C2Session sessionTaskDelegateCallbackHelper:task:block:]
  -[C2Session C2Session:sessionTask:updatedRoute:]
  -[C2Session createTaskWithOptions:delegate:]
  -[C2Session addTask:withDescription:request:]
  -[C2Session shouldInvalidateAndCancel]
  -[C2Session testBehavior_triggerSessionExpiry]
  -[C2Session sessionConfigurationName]
  -[C2Session routeHost]
  -[C2Session setRouteHost:]
  -[C2Session routeLastUpdated]
  -[C2Session setRouteLastUpdated:]
  -[C2Session emptyTimestamp]
  -[C2Session setEmptyTimestamp:]
  -[C2Session testBehavior_sessionInvalidated_cfnetwork]
  -[C2Session setTestBehavior_sessionInvalidated_cfnetwork:]
  -[C2Session testBehavior_sessionInvalidated_shouldInvalidate]
  -[C2Session setTestBehavior_sessionInvalidated_shouldInvalidate:]
  -[C2Session testBehavior_cleanupRetainCycle]
  -[C2Session setTestBehavior_cleanupRetainCycle:]


C2RequestManager : NSObject /usr/lib/libSystem.B.dylib
 @property  C2SessionPool *sessionPool

  // class methods
  +[C2RequestManager sharedManager]

  // instance methods
  -[C2RequestManager init]
  -[C2RequestManager .cxx_destruct]
  -[C2RequestManager createDataTaskWithRequest:options:delegate:sessionHandle:]
  -[C2RequestManager sessionPool]
  -[C2RequestManager _testUtility_forTask:sessionHandle:taskHandle:]
  -[C2RequestManager createDataTaskWithRequest:options:delegate:]
  -[C2RequestManager testUtility_sessionForTask:]
  -[C2RequestManager testUtility_sessionTaskForTask:]


C2MPMetric : PBCodable /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit <NSCopying>
 @property  BOOL hasMetricType
 @property  int metricType
 @property  BOOL hasDeviceInfo
 @property  C2MPDeviceInfo *deviceInfo
 @property  BOOL hasCloudkitInfo
 @property  C2MPCloudKitInfo *cloudkitInfo
 @property  BOOL hasServerInfo
 @property  C2MPServerInfo *serverInfo
 @property  BOOL hasTriggers
 @property  unsigned long triggers
 @property  BOOL hasReportFrequency
 @property  unsigned long reportFrequency
 @property  BOOL hasReportFrequencyBase
 @property  unsigned long reportFrequencyBase
 @property  BOOL hasReportTransportAllowExpensiveAccess
 @property  BOOL reportTransportAllowExpensiveAccess
 @property  BOOL hasReportTransportAllowPowerNapScheduling
 @property  BOOL reportTransportAllowPowerNapScheduling
 @property  BOOL hasReportTransportSourceApplicationBundleIdentifier
 @property  NSString *reportTransportSourceApplicationBundleIdentifier
 @property  BOOL hasReportTransportSourceApplicationSecondaryIdentifier
 @property  NSString *reportTransportSourceApplicationSecondaryIdentifier
 @property  BOOL hasNetworkEvent
 @property  C2MPNetworkEvent *networkEvent
 @property  BOOL hasGenericEvent
 @property  C2MPGenericEvent *genericEvent

  // instance methods
  -[C2MPMetric isEqual:]
  -[C2MPMetric copyWithZone:]
  -[C2MPMetric .cxx_destruct]
  -[C2MPMetric dictionaryRepresentation]
  -[C2MPMetric writeTo:]
  -[C2MPMetric mergeFrom:]
  -[C2MPMetric readFrom:]
  -[C2MPMetric copyTo:]
  -[C2MPMetric metricType]
  -[C2MPMetric setMetricType:]
  -[C2MPMetric setHasMetricType:]
  -[C2MPMetric hasMetricType]
  -[C2MPMetric metricTypeAsString:]
  -[C2MPMetric StringAsMetricType:]
  -[C2MPMetric networkEvent]
  -[C2MPMetric setNetworkEvent:]
  -[C2MPMetric hasNetworkEvent]
  -[C2MPMetric deviceInfo]
  -[C2MPMetric setDeviceInfo:]
  -[C2MPMetric triggers]
  -[C2MPMetric serverInfo]
  -[C2MPMetric setServerInfo:]
  -[C2MPMetric hasTriggers]
  -[C2MPMetric setTriggers:]
  -[C2MPMetric hasDeviceInfo]
  -[C2MPMetric setReportFrequency:]
  -[C2MPMetric setReportFrequencyBase:]
  -[C2MPMetric hasServerInfo]
  -[C2MPMetric reportFrequency]
  -[C2MPMetric reportFrequencyBase]
  -[C2MPMetric setHasTriggers:]
  -[C2MPMetric setHasReportFrequency:]
  -[C2MPMetric hasReportFrequency]
  -[C2MPMetric setHasReportFrequencyBase:]
  -[C2MPMetric hasReportFrequencyBase]
  -[C2MPMetric setCloudkitInfo:]
  -[C2MPMetric setReportTransportAllowExpensiveAccess:]
  -[C2MPMetric setReportTransportAllowPowerNapScheduling:]
  -[C2MPMetric setReportTransportSourceApplicationBundleIdentifier:]
  -[C2MPMetric setReportTransportSourceApplicationSecondaryIdentifier:]
  -[C2MPMetric setGenericEvent:]
  -[C2MPMetric hasCloudkitInfo]
  -[C2MPMetric setHasReportTransportAllowExpensiveAccess:]
  -[C2MPMetric hasReportTransportAllowExpensiveAccess]
  -[C2MPMetric setHasReportTransportAllowPowerNapScheduling:]
  -[C2MPMetric hasReportTransportAllowPowerNapScheduling]
  -[C2MPMetric hasReportTransportSourceApplicationBundleIdentifier]
  -[C2MPMetric hasReportTransportSourceApplicationSecondaryIdentifier]
  -[C2MPMetric hasGenericEvent]
  -[C2MPMetric cloudkitInfo]
  -[C2MPMetric reportTransportAllowExpensiveAccess]
  -[C2MPMetric reportTransportAllowPowerNapScheduling]
  -[C2MPMetric reportTransportSourceApplicationBundleIdentifier]
  -[C2MPMetric reportTransportSourceApplicationSecondaryIdentifier]
  -[C2MPMetric genericEvent]


C2SessionPool : NSObject /usr/lib/libSystem.B.dylib <C2SessionDelegate>
 @property  NSObject<OS_dispatch_queue> *underlyingDelegateQueue
 @property  NSObject<OS_dispatch_queue> *sessionCreation_queue
 @property  NSObject<OS_dispatch_queue> *cleanUp_queue
 @property  BOOL cleanUp_running
 @property  C2RoutingTable *routingTable
 @property  C2SessionTLSCache *sessionTLSCache
 @property  NSMapTable *useCountByObject
 @property  NSMutableDictionary *sessionGroupForSessionConfigurationName
 @property  BOOL testBehavior_disableAutomaticCleanup
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[C2SessionPool init]
  -[C2SessionPool .cxx_destruct]
  -[C2SessionPool removeSession:]
  -[C2SessionPool routingTable]
  -[C2SessionPool setRoutingTable:]
  -[C2SessionPool underlyingDelegateQueue]
  -[C2SessionPool C2Session:didBecomeInvalidWithError:]
  -[C2SessionPool C2Session:originalHost:updatedRoute:]
  -[C2SessionPool createDataTaskWithRequestIdentifer:request:options:delegate:sessionHandle:]
  -[C2SessionPool sessionGroupForSessionConfigurationName]
  -[C2SessionPool _unsafe_willCreate:]
  -[C2SessionPool _unsafe_isCreating:]
  -[C2SessionPool _unsafe_didCreate:]
  -[C2SessionPool sessionTLSCache]
  -[C2SessionPool _unsafe_removeSessionGroupIfEmpty:]
  -[C2SessionPool ensureCleanUpRunning]
  -[C2SessionPool _unsafe_removeSession:]
  -[C2SessionPool _cleanUp_job]
  -[C2SessionPool _cleanUp_schedule]
  -[C2SessionPool testBehavior_cleanUp]
  -[C2SessionPool setUnderlyingDelegateQueue:]
  -[C2SessionPool sessionCreation_queue]
  -[C2SessionPool setSessionCreation_queue:]
  -[C2SessionPool cleanUp_queue]
  -[C2SessionPool setCleanUp_queue:]
  -[C2SessionPool cleanUp_running]
  -[C2SessionPool setCleanUp_running:]
  -[C2SessionPool setSessionTLSCache:]
  -[C2SessionPool useCountByObject]
  -[C2SessionPool setUseCountByObject:]
  -[C2SessionPool setSessionGroupForSessionConfigurationName:]
  -[C2SessionPool testBehavior_disableAutomaticCleanup]
  -[C2SessionPool setTestBehavior_disableAutomaticCleanup:]


C2MPCloudKitOperationGroupInfo : PBCodable /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit <NSCopying>
 @property  BOOL hasOperationGroupId
 @property  NSString *operationGroupId
 @property  BOOL hasOperationGroupName
 @property  NSString *operationGroupName
 @property  BOOL hasOperationGroupTriggered
 @property  BOOL operationGroupTriggered

  // instance methods
  -[C2MPCloudKitOperationGroupInfo isEqual:]
  -[C2MPCloudKitOperationGroupInfo copyWithZone:]
  -[C2MPCloudKitOperationGroupInfo .cxx_destruct]
  -[C2MPCloudKitOperationGroupInfo dictionaryRepresentation]
  -[C2MPCloudKitOperationGroupInfo writeTo:]
  -[C2MPCloudKitOperationGroupInfo mergeFrom:]
  -[C2MPCloudKitOperationGroupInfo readFrom:]
  -[C2MPCloudKitOperationGroupInfo copyTo:]
  -[C2MPCloudKitOperationGroupInfo operationGroupName]
  -[C2MPCloudKitOperationGroupInfo setOperationGroupName:]
  -[C2MPCloudKitOperationGroupInfo setOperationGroupId:]
  -[C2MPCloudKitOperationGroupInfo hasOperationGroupName]
  -[C2MPCloudKitOperationGroupInfo hasOperationGroupId]
  -[C2MPCloudKitOperationGroupInfo operationGroupId]
  -[C2MPCloudKitOperationGroupInfo setOperationGroupTriggered:]
  -[C2MPCloudKitOperationGroupInfo setHasOperationGroupTriggered:]
  -[C2MPCloudKitOperationGroupInfo hasOperationGroupTriggered]
  -[C2MPCloudKitOperationGroupInfo operationGroupTriggered]


C2MPDeviceInfo : PBCodable /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit <NSCopying>
 @property  BOOL hasProductName
 @property  NSString *productName
 @property  BOOL hasProductType
 @property  NSString *productType
 @property  BOOL hasProductVersion
 @property  NSString *productVersion
 @property  BOOL hasProductBuild
 @property  NSString *productBuild
 @property  BOOL hasIsAppleInternal
 @property  BOOL isAppleInternal
 @property  BOOL hasProcessName
 @property  NSString *processName
 @property  BOOL hasProcessVersion
 @property  NSString *processVersion
 @property  BOOL hasProcessUuid
 @property  NSString *processUuid
 @property  BOOL hasUserDefaultTestName
 @property  NSString *userDefaultTestName
 @property  NSMutableArray *internalTestConfigs

  // class methods
  +[C2MPDeviceInfo internalTestConfigType]

  // instance methods
  -[C2MPDeviceInfo isEqual:]
  -[C2MPDeviceInfo copyWithZone:]
  -[C2MPDeviceInfo .cxx_destruct]
  -[C2MPDeviceInfo processName]
  -[C2MPDeviceInfo dictionaryRepresentation]
  -[C2MPDeviceInfo setProcessName:]
  -[C2MPDeviceInfo isAppleInternal]
  -[C2MPDeviceInfo writeTo:]
  -[C2MPDeviceInfo productVersion]
  -[C2MPDeviceInfo mergeFrom:]
  -[C2MPDeviceInfo readFrom:]
  -[C2MPDeviceInfo copyTo:]
  -[C2MPDeviceInfo productType]
  -[C2MPDeviceInfo productName]
  -[C2MPDeviceInfo setProductName:]
  -[C2MPDeviceInfo setProductVersion:]
  -[C2MPDeviceInfo hasProcessName]
  -[C2MPDeviceInfo hasProductName]
  -[C2MPDeviceInfo setProductType:]
  -[C2MPDeviceInfo setIsAppleInternal:]
  -[C2MPDeviceInfo hasProductType]
  -[C2MPDeviceInfo setProductBuild:]
  -[C2MPDeviceInfo processVersion]
  -[C2MPDeviceInfo setProcessVersion:]
  -[C2MPDeviceInfo setProcessUuid:]
  -[C2MPDeviceInfo setUserDefaultTestName:]
  -[C2MPDeviceInfo addInternalTestConfig:]
  -[C2MPDeviceInfo internalTestConfigsCount]
  -[C2MPDeviceInfo clearInternalTestConfigs]
  -[C2MPDeviceInfo internalTestConfigAtIndex:]
  -[C2MPDeviceInfo hasProductVersion]
  -[C2MPDeviceInfo hasProductBuild]
  -[C2MPDeviceInfo setHasIsAppleInternal:]
  -[C2MPDeviceInfo hasIsAppleInternal]
  -[C2MPDeviceInfo hasProcessVersion]
  -[C2MPDeviceInfo hasProcessUuid]
  -[C2MPDeviceInfo hasUserDefaultTestName]
  -[C2MPDeviceInfo productBuild]
  -[C2MPDeviceInfo processUuid]
  -[C2MPDeviceInfo userDefaultTestName]
  -[C2MPDeviceInfo internalTestConfigs]
  -[C2MPDeviceInfo setInternalTestConfigs:]


NSUserDefaults(C2Defaults)
	// class methods
	+[NSUserDefaults(C2Defaults) c2DefaultsDomain]

NSString(C2MetricOptionsPrivateNSStringExtension)
	// instance methods
	-[NSString(C2MetricOptionsPrivateNSStringExtension) c2UniformlyDistributedIdentifier]

01 00 0600 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDSession 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0500 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0500 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBDataWriter 
