|| __DATA.__objc_data _OBJC_CLASS_$_NSCollectionLayoutGroupCustomItem
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCollectionLayoutGroupCustomItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCollectionLayoutAnchor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCollectionLayoutBoundarySupplementaryItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCollectionLayoutDecorationItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCollectionLayoutDimension
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCollectionLayoutEdgeSpacing
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCollectionLayoutGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCollectionLayoutItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCollectionLayoutSection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCollectionLayoutSize
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCollectionLayoutSpacing
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCollectionLayoutSupplementaryItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCollectionLayoutAnchor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCollectionLayoutBoundarySupplementaryItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCollectionLayoutDecorationItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCollectionLayoutDimension
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCollectionLayoutEdgeSpacing
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCollectionLayoutGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCollectionLayoutItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCollectionLayoutSection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCollectionLayoutSize
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCollectionLayoutSpacing
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCollectionLayoutSupplementaryItem
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
NSCollectionLayoutItem : NSObject <NSCopying>
 @property  NSCollectionLayoutSize *size
 @property  NSUUID *identifier
 @property  NSString *name
 @property  NSArray *supplementaryItems
 @property  NSArray *decorationItems
 @property  BOOL hasComputedContainsEstimatedItem
 @property  {NSDirectionalEdgeInsets=dddd} contentInsets
 @property  NSCollectionLayoutEdgeSpacing *edgeSpacing
 @property  NSCollectionLayoutSize *layoutSize

  // class methods
  +[NSCollectionLayoutItem itemWithLayoutSize:]
  +[NSCollectionLayoutItem itemWithSize:decorationItems:]
  +[NSCollectionLayoutItem itemWithLayoutSize:supplementaryItems:]

  // instance methods
  -[NSCollectionLayoutItem setContentInsets:]
  -[NSCollectionLayoutItem layoutSize]
  -[NSCollectionLayoutItem supplementaryItems]
  -[NSCollectionLayoutItem setSupplementaryItems:]
  -[NSCollectionLayoutItem contentInsets]
  -[NSCollectionLayoutItem identifier]
  -[NSCollectionLayoutItem setDecorationItems:]
  -[NSCollectionLayoutItem isGroup]
  -[NSCollectionLayoutItem .cxx_destruct]
  -[NSCollectionLayoutItem _effectiveContentInsets]
  -[NSCollectionLayoutItem size]
  -[NSCollectionLayoutItem _externalDescription]
  -[NSCollectionLayoutItem setIdentifier:]
  -[NSCollectionLayoutItem setName:]
  -[NSCollectionLayoutItem isCustomGroup]
  -[NSCollectionLayoutItem decorationItems]
  -[NSCollectionLayoutItem copyWithZone:]
  -[NSCollectionLayoutItem name]
  -[NSCollectionLayoutItem edgeSpacing]
  -[NSCollectionLayoutItem setSize:]
  -[NSCollectionLayoutItem setEdgeSpacing:]
  -[NSCollectionLayoutItem isEqual:]
  -[NSCollectionLayoutItem _enumerateItemsWithHandler:]
  -[NSCollectionLayoutItem initWithSize:contentInsets:edgeSpacing:supplementaryItems:decorationItems:name:identifier:]
  -[NSCollectionLayoutItem _insetSizeForContainer:displayScale:]
  -[NSCollectionLayoutItem ignoresRTL]
  -[NSCollectionLayoutItem containsEstimatedSizeItem]
  -[NSCollectionLayoutItem hasCustomGroupItemProvider]
  -[NSCollectionLayoutItem _enumerateSupplementaryItemsWithHandler:]
  -[NSCollectionLayoutItem _insetSizeForContainer:]
  -[NSCollectionLayoutItem isAuxillary]
  -[NSCollectionLayoutItem isSupplementary]
  -[NSCollectionLayoutItem isDecoration]
  -[NSCollectionLayoutItem auxillaryItems]
  -[NSCollectionLayoutItem hasComputedContainsEstimatedItem]
  -[NSCollectionLayoutItem setHasComputedContainsEstimatedItem:]


NSCollectionLayoutGroupCustomItem : NSObject <NSCopying>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  long long zIndex

  // class methods
  +[NSCollectionLayoutGroupCustomItem customItemWithFrame:]
  +[NSCollectionLayoutGroupCustomItem customItemWithFrame:zIndex:]

  // instance methods
  -[NSCollectionLayoutGroupCustomItem frame]
  -[NSCollectionLayoutGroupCustomItem zIndex]
  -[NSCollectionLayoutGroupCustomItem copyWithZone:]
  -[NSCollectionLayoutGroupCustomItem initWithFrame:zIndex:]


NSCollectionLayoutGroup : NSCollectionLayoutItem <NSCopying>
 @property  NSArray *subitems
 @property  long long layoutDirection
 @property  NSArray *visualFormats
 @property  @? customGroupItemProvider
 @property  @? itemsProvider
 @property  @? visualFormatItemProvider
 @property  long long count
 @property  BOOL _hasDecorationItemRequiringRegistration
 @property  long long groupOptions
 @property  NSArray *supplementaryItems
 @property  NSCollectionLayoutSpacing *interItemSpacing

  // class methods
  +[NSCollectionLayoutGroup horizontalGroupWithLayoutSize:repeatingSubitem:count:]
  +[NSCollectionLayoutGroup customGroupWithLayoutSize:itemProvider:]
  +[NSCollectionLayoutGroup _effectiveCopiedSubitemsForSubitems:count:layoutDirection:]
  +[NSCollectionLayoutGroup horizontalGroupWithSize:subitemsProvider:]
  +[NSCollectionLayoutGroup verticalGroupWithLayoutSize:repeatingSubitem:count:]
  +[NSCollectionLayoutGroup layoutGroupWithSize:visualFormats:itemProvider:]
  +[NSCollectionLayoutGroup _effectiveSizeForSize:count:layoutDirection:]
  +[NSCollectionLayoutGroup horizontalGroupWithLayoutSize:subitem:count:]
  +[NSCollectionLayoutGroup verticalGroupWithLayoutSize:subitems:]
  +[NSCollectionLayoutGroup verticalGroupWithLayoutSize:subitem:count:]
  +[NSCollectionLayoutGroup horizontalGroupWithLayoutSize:subitems:]
  +[NSCollectionLayoutGroup verticalGroupWithSize:subitemsProvider:]

  // instance methods
  -[NSCollectionLayoutGroup setCount:]
  -[NSCollectionLayoutGroup groupOptions]
  -[NSCollectionLayoutGroup setInterItemSpacing:]
  -[NSCollectionLayoutGroup _hasDecorationItemRequiringRegistration]
  -[NSCollectionLayoutGroup interItemSpacing]
  -[NSCollectionLayoutGroup visualFormatItemProvider]
  -[NSCollectionLayoutGroup _isListSolverCompatibleForLayoutAxis:]
  -[NSCollectionLayoutGroup initWithSize:subitems:count:interItemSpacing:contentInsets:edgeSpacing:layoutDirection:supplementaryItems:visualFormats:itemsProvider:visualFormatItemProvider:customGroupItemProvider:options:name:identifier:]
  -[NSCollectionLayoutGroup setSubitems:]
  -[NSCollectionLayoutGroup hasVisualFormat]
  -[NSCollectionLayoutGroup .cxx_destruct]
  -[NSCollectionLayoutGroup setLayoutDirection:]
  -[NSCollectionLayoutGroup layoutDirection]
  -[NSCollectionLayoutGroup isVerticalGroup]
  -[NSCollectionLayoutGroup count]
  -[NSCollectionLayoutGroup _externalDescription]
  -[NSCollectionLayoutGroup set_hasDecorationItemRequiringRegistration:]
  -[NSCollectionLayoutGroup hasItemProvider]
  -[NSCollectionLayoutGroup setItemsProvider:]
  -[NSCollectionLayoutGroup setCustomGroupItemProvider:]
  -[NSCollectionLayoutGroup layoutAxis]
  -[NSCollectionLayoutGroup isCustomGroup]
  -[NSCollectionLayoutGroup itemsProvider]
  -[NSCollectionLayoutGroup copyWithZone:]
  -[NSCollectionLayoutGroup setGroupOptions:]
  -[NSCollectionLayoutGroup setVisualFormats:]
  -[NSCollectionLayoutGroup subitems]
  -[NSCollectionLayoutGroup customGroupItemProvider]
  -[NSCollectionLayoutGroup visualDescription]
  -[NSCollectionLayoutGroup visualFormats]
  -[NSCollectionLayoutGroup isHorizontalGroup]
  -[NSCollectionLayoutGroup isEqual:]
  -[NSCollectionLayoutGroup setVisualFormatItemProvider:]


NSCollectionLayoutSection : NSObject <NSCopying>
 @property  NSCollectionLayoutGroup *group
 @property  NSArray *supplementaryItems
 @property  NSIndexSet *pinnedSupplementaryItemIndexes
 @property  NSDictionary *supplementaryItemsDict
 @property  NSDictionary *decorationItemssDict
 @property  {CGSize=dd} contentSize
 @property  <_UICollectionLayoutSectionCallback> *callback
 @property  double _cornerRadius
 @property  BOOL _clipsContentToBounds
 @property  BOOL _excludesBoundarySupplementariesFromClipping
 @property  BOOL _clipsBackgroundDecorationsToContent
 @property  BOOL prefersListSolver
 @property  {NSDirectionalEdgeInsets=dddd} contentInsets
 @property  double interGroupSpacing
 @property  long long contentInsetsReference
 @property  long long supplementaryContentInsetsReference
 @property  long long orthogonalScrollingBehavior
 @property  NSArray *boundarySupplementaryItems
 @property  BOOL supplementariesFollowContentInsets
 @property  @? visibleItemsInvalidationHandler
 @property  NSArray *decorationItems

  // class methods
  +[NSCollectionLayoutSection sectionWithGroup:]
  +[NSCollectionLayoutSection _emptySection]

  // instance methods
  -[NSCollectionLayoutSection setContentInsets:]
  -[NSCollectionLayoutSection _trailingSwipeActionsConfigurationForIndexPath:]
  -[NSCollectionLayoutSection setBoundarySupplementaryItems:]
  -[NSCollectionLayoutSection _alignedContentMarginGivenMargin:]
  -[NSCollectionLayoutSection _didEndSwiping]
  -[NSCollectionLayoutSection supplementaryItems]
  -[NSCollectionLayoutSection setSupplementaryItems:]
  -[NSCollectionLayoutSection boundarySupplementaryItems]
  -[NSCollectionLayoutSection _leadingSwipeActionsConfigurationForIndexPath:]
  -[NSCollectionLayoutSection _willBeginSwiping]
  -[NSCollectionLayoutSection contentInsets]
  -[NSCollectionLayoutSection _hasVisibleItemsHandler]
  -[NSCollectionLayoutSection setDecorationItems:]
  -[NSCollectionLayoutSection pinnedSupplementaryItemIndexes]
  -[NSCollectionLayoutSection setSupplementaryContentInsetsReference:]
  -[NSCollectionLayoutSection _wantsBandSelectionVisuals]
  -[NSCollectionLayoutSection prefersListSolver]
  -[NSCollectionLayoutSection _descriptionProperties]
  -[NSCollectionLayoutSection _callback]
  -[NSCollectionLayoutSection supplementariesFollowContentInsets]
  -[NSCollectionLayoutSection _isListSolverCompatibleForLayoutAxis:]
  -[NSCollectionLayoutSection visibleItemsInvalidationHandler]
  -[NSCollectionLayoutSection contentInsetsReference]
  -[NSCollectionLayoutSection _auxillaryItemForElementKind:category:]
  -[NSCollectionLayoutSection _wantsSwipeActions]
  -[NSCollectionLayoutSection pinnedBoundarySupplementaryItemIndexes]
  -[NSCollectionLayoutSection _excludesBoundarySupplementariesFromClipping]
  -[NSCollectionLayoutSection setInterGroupSpacing:]
  -[NSCollectionLayoutSection _checkForDuplicateSupplementaryItemKindsAndThrowIfFound]
  -[NSCollectionLayoutSection setOrthogonalScrollingBehavior:]
  -[NSCollectionLayoutSection setPrefersListSolver:]
  -[NSCollectionLayoutSection _updateStyleForSwipeActionsConfiguration:]
  -[NSCollectionLayoutSection setContentSize:]
  -[NSCollectionLayoutSection .cxx_destruct]
  -[NSCollectionLayoutSection contentSize]
  -[NSCollectionLayoutSection orthogonalScrollingBehavior]
  -[NSCollectionLayoutSection scrollsOrthogonally]
  -[NSCollectionLayoutSection _backgroundDecorationViewsRequiringCustomViewClassRegistration]
  -[NSCollectionLayoutSection _isEmptySection]
  -[NSCollectionLayoutSection _cornerRadius]
  -[NSCollectionLayoutSection setSupplementariesFollowContentInsets:]
  -[NSCollectionLayoutSection supplementaryContentInsetsReference]
  -[NSCollectionLayoutSection setContentInsetsReference:]
  -[NSCollectionLayoutSection setPinnedSupplementaryItemIndexes:]
  -[NSCollectionLayoutSection supplementaryItemsDict]
  -[NSCollectionLayoutSection _hasBackgroundDecorationItem]
  -[NSCollectionLayoutSection _pinnedSupplementariesShouldOverlap]
  -[NSCollectionLayoutSection _preferredContainerBackgroundColor]
  -[NSCollectionLayoutSection decorationItems]
  -[NSCollectionLayoutSection copyWithZone:]
  -[NSCollectionLayoutSection _setClipsContentToBounds:]
  -[NSCollectionLayoutSection shouldRestrictOrthogonalAxisDuringInteractiveMovement]
  -[NSCollectionLayoutSection _setCornerRadius:]
  -[NSCollectionLayoutSection _clipsBackgroundDecorationsToContent]
  -[NSCollectionLayoutSection initWithLayoutGroup:]
  -[NSCollectionLayoutSection _setExcludesBoundarySupplementariesFromClipping:]
  -[NSCollectionLayoutSection initWithGroup:contentInsets:contentInsetsReference:supplementaryItems:boundarySupplementaryItems:pinnedSupplementaryItemIndexes:interGroupSpacing:visibleItemsInvalidationHandler:supplementariesFollowInsets:decorationItems:orthogonalScrollingBehavior:isEmptySection:prefersListSolver:]
  -[NSCollectionLayoutSection setVisibleItemsInvalidationHandler:]
  -[NSCollectionLayoutSection _containsEstimatedSizeElement]
  -[NSCollectionLayoutSection group]
  -[NSCollectionLayoutSection decorationItemsDict]
  -[NSCollectionLayoutSection _setClipsBackgroundDecorationsToContent:]
  -[NSCollectionLayoutSection decorationItemssDict]
  -[NSCollectionLayoutSection _paddingToBoundarySupplementaries]
  -[NSCollectionLayoutSection _containsBackgroundDecorationItem:]
  -[NSCollectionLayoutSection interGroupSpacing]
  -[NSCollectionLayoutSection _clipsContentToBounds]
  -[NSCollectionLayoutSection isEqual:]
  -[NSCollectionLayoutSection setGroup:]


NSCollectionLayoutSpacing : NSObject <NSCopying>
 @property  double spacing
 @property  BOOL isFlexibleSpacing
 @property  BOOL isFixedSpacing

  // class methods
  +[NSCollectionLayoutSpacing fixedSpacing:]
  +[NSCollectionLayoutSpacing defaultSpacing]
  +[NSCollectionLayoutSpacing flexibleSpacing:]

  // instance methods
  -[NSCollectionLayoutSpacing spacing]
  -[NSCollectionLayoutSpacing isFixedSpacing]
  -[NSCollectionLayoutSpacing _externalDescription]
  -[NSCollectionLayoutSpacing initWithSpacing:isFlexible:]
  -[NSCollectionLayoutSpacing _hasSpacing]
  -[NSCollectionLayoutSpacing copyWithZone:]
  -[NSCollectionLayoutSpacing isFlexibleSpacing]
  -[NSCollectionLayoutSpacing isEqual:]


NSCollectionLayoutEdgeSpacing : NSObject <NSCopying>
 @property  NSCollectionLayoutSpacing *leading
 @property  NSCollectionLayoutSpacing *top
 @property  NSCollectionLayoutSpacing *trailing
 @property  NSCollectionLayoutSpacing *bottom

  // class methods
  +[NSCollectionLayoutEdgeSpacing fixedSpacing:]
  +[NSCollectionLayoutEdgeSpacing spacingForLeading:top:trailing:bottom:]
  +[NSCollectionLayoutEdgeSpacing defaultSpacing]
  +[NSCollectionLayoutEdgeSpacing flexibleSpacing:]

  // instance methods
  -[NSCollectionLayoutEdgeSpacing leading]
  -[NSCollectionLayoutEdgeSpacing isSpacingFixedForEdge:]
  -[NSCollectionLayoutEdgeSpacing bottom]
  -[NSCollectionLayoutEdgeSpacing spacingForEdge:]
  -[NSCollectionLayoutEdgeSpacing top]
  -[NSCollectionLayoutEdgeSpacing trailing]
  -[NSCollectionLayoutEdgeSpacing .cxx_destruct]
  -[NSCollectionLayoutEdgeSpacing _externalDescription]
  -[NSCollectionLayoutEdgeSpacing _hasSpacing]
  -[NSCollectionLayoutEdgeSpacing _spacingForEdge:]
  -[NSCollectionLayoutEdgeSpacing isSpacingFlexibleForEdge:]
  -[NSCollectionLayoutEdgeSpacing copyWithZone:]
  -[NSCollectionLayoutEdgeSpacing edgeOutsets]
  -[NSCollectionLayoutEdgeSpacing isEqual:]
  -[NSCollectionLayoutEdgeSpacing initWithLeading:top:trailing:bottom:]


NSCollectionLayoutDimension : NSObject <NSCopying>
 @property  long long semantic
 @property  double dimension
 @property  BOOL isFractionalWidth
 @property  BOOL isFractionalHeight
 @property  BOOL isAbsolute
 @property  BOOL isEstimated

  // class methods
  +[NSCollectionLayoutDimension fractionalWidthDimension:]
  +[NSCollectionLayoutDimension estimatedDimension:]
  +[NSCollectionLayoutDimension fractionalHeightDimension:]
  +[NSCollectionLayoutDimension absoluteDimension:]
  +[NSCollectionLayoutDimension _dimensionWithDimension:semantic:]

  // instance methods
  -[NSCollectionLayoutDimension dimension]
  -[NSCollectionLayoutDimension isEstimated]
  -[NSCollectionLayoutDimension setDimension:]
  -[NSCollectionLayoutDimension setSemantic:]
  -[NSCollectionLayoutDimension semantic]
  -[NSCollectionLayoutDimension copyWithZone:]
  -[NSCollectionLayoutDimension isAbsolute]
  -[NSCollectionLayoutDimension initWithDimension:semantic:]
  -[NSCollectionLayoutDimension isFractionalHeight]
  -[NSCollectionLayoutDimension isFractionalWidth]
  -[NSCollectionLayoutDimension isEqual:]


NSCollectionLayoutSize : NSObject <NSCopying>
 @property  {CGSize=dd} size
 @property  long long widthSemantic
 @property  long long heightSemantic
 @property  NSCollectionLayoutDimension *widthDimension
 @property  NSCollectionLayoutDimension *heightDimension

  // class methods
  +[NSCollectionLayoutSize sizeWithWidthDimension:heightDimension:]
  +[NSCollectionLayoutSize sizeWithSize:widthSemantic:heightSemantic:]
  +[NSCollectionLayoutSize sizeWithContainerSize]
  +[NSCollectionLayoutSize sizeWithAbsoluteSize:]
  +[NSCollectionLayoutSize sizeWithContainerWidthFactor:containerHeightFactor:]
  +[NSCollectionLayoutSize sizeWithWidth:widthSemantic:height:heightSemantic:]

  // instance methods
  -[NSCollectionLayoutSize setHeightDimension:]
  -[NSCollectionLayoutSize isEstimated]
  -[NSCollectionLayoutSize setWidthSemantic:]
  -[NSCollectionLayoutSize setHeightSemantic:]
  -[NSCollectionLayoutSize .cxx_destruct]
  -[NSCollectionLayoutSize _effectiveSizeForContainer:displayScale:ignoringInsets:]
  -[NSCollectionLayoutSize heightDimension]
  -[NSCollectionLayoutSize _effectiveSizeForContainer:]
  -[NSCollectionLayoutSize size]
  -[NSCollectionLayoutSize widthSemantic]
  -[NSCollectionLayoutSize copyWithZone:]
  -[NSCollectionLayoutSize heightSemantic]
  -[NSCollectionLayoutSize isContainerSize]
  -[NSCollectionLayoutSize setWidthDimension:]
  -[NSCollectionLayoutSize _effectiveSizeForContainer:ignoringInsets:]
  -[NSCollectionLayoutSize setSize:]
  -[NSCollectionLayoutSize widthDimension]
  -[NSCollectionLayoutSize _isEstimatedForAxis:]
  -[NSCollectionLayoutSize initWithSize:widthSemantic:heightSemantic:width:height:]
  -[NSCollectionLayoutSize _containerSizeDependentAxes]
  -[NSCollectionLayoutSize isEqual:]


NSCollectionLayoutSupplementaryItem : NSCollectionLayoutItem <_UICollectionLayoutAuxillaryItem, NSCopying>
 @property  NSString *elementKind
 @property  NSCollectionLayoutAnchor *containerAnchor
 @property  NSCollectionLayoutAnchor *itemAnchor
 @property  BOOL canAdjustContentSize
 @property  long long zIndex
 @property  NSCollectionLayoutSize *size
 @property  {NSDirectionalEdgeInsets=dddd} contentInsets
 @property  {NSDirectionalEdgeInsets=dddd} _effectiveContentInsets
 @property  NSCollectionLayoutItem *item
 @property  NSCollectionLayoutSupplementaryItem *supplementaryItem
 @property  NSCollectionLayoutBoundarySupplementaryItem *boundarySupplementaryItem
 @property  NSCollectionLayoutDecorationItem *decorationItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSCollectionLayoutSupplementaryItem itemWithLayoutSize:]
  +[NSCollectionLayoutSupplementaryItem supplementaryItemWithLayoutSize:elementKind:containerAnchor:itemAnchor:]
  +[NSCollectionLayoutSupplementaryItem itemWithLayoutSize:supplementaryItems:]
  +[NSCollectionLayoutSupplementaryItem supplementaryItemWithLayoutSize:elementKind:containerAnchor:]

  // instance methods
  -[NSCollectionLayoutSupplementaryItem setCanAdjustContentSize:]
  -[NSCollectionLayoutSupplementaryItem canAdjustContentSize]
  -[NSCollectionLayoutSupplementaryItem setZIndex:]
  -[NSCollectionLayoutSupplementaryItem .cxx_destruct]
  -[NSCollectionLayoutSupplementaryItem setItemAnchor:]
  -[NSCollectionLayoutSupplementaryItem supplementaryItem]
  -[NSCollectionLayoutSupplementaryItem _effectiveContentInsets]
  -[NSCollectionLayoutSupplementaryItem initWithSize:contentInsets:elementKind:containerAnchor:itemAnchor:zIndex:]
  -[NSCollectionLayoutSupplementaryItem item]
  -[NSCollectionLayoutSupplementaryItem elementKind]
  -[NSCollectionLayoutSupplementaryItem zIndex]
  -[NSCollectionLayoutSupplementaryItem setElementKind:]
  -[NSCollectionLayoutSupplementaryItem copyWithZone:]
  -[NSCollectionLayoutSupplementaryItem boundarySupplementaryItem]
  -[NSCollectionLayoutSupplementaryItem setContainerAnchor:]
  -[NSCollectionLayoutSupplementaryItem itemAnchor]
  -[NSCollectionLayoutSupplementaryItem containerAnchor]
  -[NSCollectionLayoutSupplementaryItem decorationItem]
  -[NSCollectionLayoutSupplementaryItem isEqual:]


NSCollectionLayoutBoundarySupplementaryItem : NSCollectionLayoutSupplementaryItem <NSCopying>
 @property  long long _pinningZIndex
 @property  BOOL extendsBoundary
 @property  BOOL pinToVisibleBounds
 @property  long long alignment
 @property  {CGPoint=dd} offset

  // class methods
  +[NSCollectionLayoutBoundarySupplementaryItem itemWithLayoutSize:]
  +[NSCollectionLayoutBoundarySupplementaryItem boundarySupplementaryItemWithLayoutSize:elementKind:alignment:]
  +[NSCollectionLayoutBoundarySupplementaryItem itemWithLayoutSize:supplementaryItems:]
  +[NSCollectionLayoutBoundarySupplementaryItem boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:]

  // instance methods
  -[NSCollectionLayoutBoundarySupplementaryItem alignment]
  -[NSCollectionLayoutBoundarySupplementaryItem _setPinningZIndex:]
  -[NSCollectionLayoutBoundarySupplementaryItem setPinningZIndex:]
  -[NSCollectionLayoutBoundarySupplementaryItem copyWithZone:]
  -[NSCollectionLayoutBoundarySupplementaryItem boundarySupplementaryItem]
  -[NSCollectionLayoutBoundarySupplementaryItem _pinningZIndex]
  -[NSCollectionLayoutBoundarySupplementaryItem setPinToVisibleBounds:]
  -[NSCollectionLayoutBoundarySupplementaryItem setExtendsBoundary:]
  -[NSCollectionLayoutBoundarySupplementaryItem initWithSize:contentInsets:elementKind:containerAnchor:itemAnchor:zIndex:alignment:offset:extendsBoundary:pinToVisibleBounds:]
  -[NSCollectionLayoutBoundarySupplementaryItem offset]
  -[NSCollectionLayoutBoundarySupplementaryItem isEqual:]
  -[NSCollectionLayoutBoundarySupplementaryItem pinToVisibleBounds]
  -[NSCollectionLayoutBoundarySupplementaryItem extendsBoundary]
  -[NSCollectionLayoutBoundarySupplementaryItem copyWithContainerAnchor:itemAnchor:]


NSCollectionLayoutDecorationItem : NSCollectionLayoutItem <_UICollectionLayoutAuxillaryItem, NSCopying>
 @property  NSString *elementKind
 @property  NSCollectionLayoutAnchor *containerAnchor
 @property  NSCollectionLayoutAnchor *itemAnchor
 @property  BOOL isBackgroundDecoration
 @property  Class _registrationViewClass
 @property  long long zIndex
 @property  NSCollectionLayoutSize *size
 @property  {NSDirectionalEdgeInsets=dddd} contentInsets
 @property  {NSDirectionalEdgeInsets=dddd} _effectiveContentInsets
 @property  NSCollectionLayoutItem *item
 @property  NSCollectionLayoutSupplementaryItem *supplementaryItem
 @property  NSCollectionLayoutBoundarySupplementaryItem *boundarySupplementaryItem
 @property  NSCollectionLayoutDecorationItem *decorationItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSCollectionLayoutDecorationItem backgroundDecorationItemWithElementKind:]
  +[NSCollectionLayoutDecorationItem itemWithLayoutSize:]
  +[NSCollectionLayoutDecorationItem itemWithLayoutSize:supplementaryItems:]
  +[NSCollectionLayoutDecorationItem decorationItemWithSize:elementKind:containerAnchor:]

  // instance methods
  -[NSCollectionLayoutDecorationItem setZIndex:]
  -[NSCollectionLayoutDecorationItem .cxx_destruct]
  -[NSCollectionLayoutDecorationItem setItemAnchor:]
  -[NSCollectionLayoutDecorationItem supplementaryItem]
  -[NSCollectionLayoutDecorationItem _setRegistrationViewClass:]
  -[NSCollectionLayoutDecorationItem _effectiveContentInsets]
  -[NSCollectionLayoutDecorationItem item]
  -[NSCollectionLayoutDecorationItem elementKind]
  -[NSCollectionLayoutDecorationItem zIndex]
  -[NSCollectionLayoutDecorationItem setElementKind:]
  -[NSCollectionLayoutDecorationItem copyWithZone:]
  -[NSCollectionLayoutDecorationItem boundarySupplementaryItem]
  -[NSCollectionLayoutDecorationItem initWithElementKind:size:contentInsets:containerAnchor:itemAnchor:zIndex:registrationViewClass:isBackgroundDecoration:]
  -[NSCollectionLayoutDecorationItem setContainerAnchor:]
  -[NSCollectionLayoutDecorationItem itemAnchor]
  -[NSCollectionLayoutDecorationItem _registrationViewClass]
  -[NSCollectionLayoutDecorationItem containerAnchor]
  -[NSCollectionLayoutDecorationItem decorationItem]
  -[NSCollectionLayoutDecorationItem isEqual:]
  -[NSCollectionLayoutDecorationItem isBackgroundDecoration]


NSCollectionLayoutAnchor : NSObject <NSCopying>
 @property  unsigned long edges
 @property  {CGPoint=dd} offset
 @property  {CGPoint=dd} anchorPoint
 @property  BOOL offsetIsUnitOffset
 @property  BOOL isAbsoluteOffset
 @property  BOOL isFractionalOffset

  // class methods
  +[NSCollectionLayoutAnchor layoutAnchorWithEdges:absoluteOffset:]
  +[NSCollectionLayoutAnchor layoutAnchorWithEdges:]
  +[NSCollectionLayoutAnchor layoutAnchorWithAnchorPoint:]
  +[NSCollectionLayoutAnchor layoutAnchorWithAnchorPoint:unitOffset:]
  +[NSCollectionLayoutAnchor layoutAnchorWithEdges:fractionalOffset:]
  +[NSCollectionLayoutAnchor layoutAnchorWithAnchorPoint:offset:]

  // instance methods
  -[NSCollectionLayoutAnchor anchorPoint]
  -[NSCollectionLayoutAnchor initWithEdges:offset:anchorPoint:offsetIsUnitOffset:]
  -[NSCollectionLayoutAnchor _itemFrameForContainerRect:itemSize:itemLayoutAnchor:]
  -[NSCollectionLayoutAnchor isFractionalOffset]
  -[NSCollectionLayoutAnchor edges]
  -[NSCollectionLayoutAnchor isAbsoluteOffset]
  -[NSCollectionLayoutAnchor offsetIsUnitOffset]
  -[NSCollectionLayoutAnchor copyWithZone:]
  -[NSCollectionLayoutAnchor setEdges:]
  -[NSCollectionLayoutAnchor offset]
  -[NSCollectionLayoutAnchor setOffsetIsUnitOffset:]
  -[NSCollectionLayoutAnchor setAnchorPoint:]
  -[NSCollectionLayoutAnchor setOffset:]
  -[NSCollectionLayoutAnchor isEqual:]


01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
