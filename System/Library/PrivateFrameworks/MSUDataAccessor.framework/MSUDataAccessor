|| __DATA_CONST.__const _kMSUDAErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSUDataAccessor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSUDataAccessor
|| __TEXT.__text _lookupPathForPersistentData
|| __TEXT.__text _lookupPathForPersonalizedData
__ APFS: _APFSVolumeCreate
__ APFS: _APFSVolumeCreateForMSU
__ APFS: _APFSVolumeDelete
__ APFS: _APFSVolumeGetVEKState
__ APFS: _APFSVolumeRole
__ APFS: _kAPFSVolumeCaseSensitiveKey
__ APFS: _kAPFSVolumeFSIndexKey
__ APFS: _kAPFSVolumeGroupSiblingFSIndexKey
__ APFS: _kAPFSVolumeNameKey
__ APFS: _kAPFSVolumeNoAutomountAtCreateKey
__ APFS: _kAPFSVolumeQuotaSizeKey
__ APFS: _kAPFSVolumeReserveSizeKey
__ APFS: _kAPFSVolumeRoleKey
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ IOKit: _IOBSDNameMatching
__ IOKit: _IOIteratorIsValid
__ IOKit: _IOIteratorNext
__ IOKit: _IOIteratorReset
__ IOKit: _IOKitWaitQuiet
__ IOKit: _IOObjectConformsTo
__ IOKit: _IOObjectIsEqualTo
__ IOKit: _IOObjectRelease
__ IOKit: _IOObjectRetain
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IORegistryEntryCreateIterator
__ IOKit: _IORegistryEntryFromPath
__ IOKit: _IORegistryEntryGetChildIterator
__ IOKit: _IORegistryEntryGetName
__ IOKit: _IORegistryEntryGetParentEntry
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceGetMatchingServices
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMasterPortDefault
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA384
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_pack_fill
__ libSystem.B.dylib: __os_log_pack_size
__ libSystem.B.dylib: _access
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dprintf
__ libSystem.B.dylib: _ffsctl
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fs_snapshot_create
__ libSystem.B.dylib: _fs_snapshot_delete
__ libSystem.B.dylib: _fs_snapshot_list
__ libSystem.B.dylib: _fs_snapshot_rename
__ libSystem.B.dylib: _fs_snapshot_revert
__ libSystem.B.dylib: _fs_snapshot_root
__ libSystem.B.dylib: _fsctl
__ libSystem.B.dylib: _getattrlist
__ libSystem.B.dylib: _getmntinfo_r_np
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _mkdtemp
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_pack_compose
__ libSystem.B.dylib: _os_log_pack_send
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _pipe
__ libSystem.B.dylib: _posix_spawn
__ libSystem.B.dylib: _posix_spawn_file_actions_addclose
__ libSystem.B.dylib: _posix_spawn_file_actions_adddup2
__ libSystem.B.dylib: _posix_spawn_file_actions_destroy
__ libSystem.B.dylib: _posix_spawn_file_actions_init
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _removefile
__ libSystem.B.dylib: _removefile_state_alloc
__ libSystem.B.dylib: _removefile_state_free
__ libSystem.B.dylib: _removefile_state_set
__ libSystem.B.dylib: _setattrlist
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _statfs
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _strrchr
__ libSystem.B.dylib: _strstr
__ libSystem.B.dylib: _sync
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _unmount
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _uuid_is_null
__ libSystem.B.dylib: _uuid_parse
__ libSystem.B.dylib: _uuid_unparse_upper
__ libSystem.B.dylib: _waitpid
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
MSUDataAccessor : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MSUDataAccessor errorNameForCode:]
  +[MSUDataAccessor buildErrorForRef:code:description:]
  +[MSUDataAccessor sharedDataAccessor]
  +[MSUDataAccessor bootUUIDWithError:]
  +[MSUDataAccessor apfsPrebootUUIDWithError:]

  // instance methods
  -[MSUDataAccessor init]
  -[MSUDataAccessor copyMountPointForVolumeType:error:]
  -[MSUDataAccessor copyBootManifestHashWithError:]
  -[MSUDataAccessor personalizedRootWithError:]
  -[MSUDataAccessor hardwareRootWithError:]
  -[MSUDataAccessor resolveFilePathForEntry:error:]
  -[MSUDataAccessor copyPathForPersonalizedData:error:]
  -[MSUDataAccessor copyPathForPersistentData:error:]


MSUDataAccessorSymbolicPathResolver : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MSUDataAccessorSymbolicPathResolver symbolicPathResolver]
  +[MSUDataAccessorSymbolicPathResolver resolvedSymbol:error:]

  // instance methods
  -[MSUDataAccessorSymbolicPathResolver init]
  -[MSUDataAccessorSymbolicPathResolver dealloc]
  -[MSUDataAccessorSymbolicPathResolver .cxx_destruct]
  -[MSUDataAccessorSymbolicPathResolver resolve:error:]
  -[MSUDataAccessorSymbolicPathResolver overrideSymbol:resolvedPath:]


MSUDataAccessorRestore : MSUDataAccessor
  // instance methods
  -[MSUDataAccessorRestore copyMountPointForVolumeType:error:]
  -[MSUDataAccessorRestore copyPathForPersonalizedData:error:]
  -[MSUDataAccessorRestore findVolumesWithRole:]
  -[MSUDataAccessorRestore specialCaseAPTicketForRamdiskWithError:]
  -[MSUDataAccessorRestore getVolumeWithUUID:]


LPAPFSContainer : LPMedia
  // class methods
  +[LPAPFSContainer allAPFSContainers]
  +[LPAPFSContainer diagsContainer]
  +[LPAPFSContainer supportedContentTypes]

  // instance methods
  -[LPAPFSContainer updateVolume]
  -[LPAPFSContainer volumes]
  -[LPAPFSContainer volumesWithRole:]
  -[LPAPFSContainer addVolumeWithName:role:caseSensitive:reserveSize:quotaSize:pairedVolume:error:]
  -[LPAPFSContainer physicalStores]
  -[LPAPFSContainer prebootVolume]
  -[LPAPFSContainer recoveryVolume]


LPAPFSPhysicalStore : LPMedia
  // class methods
  +[LPAPFSPhysicalStore supportedContentTypes]

  // instance methods
  -[LPAPFSPhysicalStore parent]
  -[LPAPFSPhysicalStore container]
  -[LPAPFSPhysicalStore role]


LPAPFSVolume : LPMedia
  // class methods
  +[LPAPFSVolume initialize]
  +[LPAPFSVolume _loadMountPointTableForMode:]
  +[LPAPFSVolume defaultMountPointGivenRole:]
  +[LPAPFSVolume defaultVolumeNameGivenRole:]
  +[LPAPFSVolume supportedContentTypes]

  // instance methods
  -[LPAPFSVolume isEncrypted]
  -[LPAPFSVolume container]
  -[LPAPFSVolume isMounted]
  -[LPAPFSVolume volumeGroupUUID]
  -[LPAPFSVolume snapshotMountPoints]
  -[LPAPFSVolume pairedVolume]
  -[LPAPFSVolume mountAtPath:error:]
  -[LPAPFSVolume mountAtPath:options:error:]
  -[LPAPFSVolume unmountWithError:]
  -[LPAPFSVolume unmountWithOptions:error:]
  -[LPAPFSVolume snapshotInfoWithError:]
  -[LPAPFSVolume setRole:withError:]
  -[LPAPFSVolume isCaseSenstive]
  -[LPAPFSVolume isFilevaultEncrypted]
  -[LPAPFSVolume eraseVolumeWithError:]
  -[LPAPFSVolume mountWithError:]
  -[LPAPFSVolume mountAtTemporaryPathWithError:]
  -[LPAPFSVolume unmountAllWithError:]
  -[LPAPFSVolume deleteVolumeWithError:]
  -[LPAPFSVolume snapshotsWithError:]
  -[LPAPFSVolume createSnapshot:error:]
  -[LPAPFSVolume deleteSnapshots:waitForDeletionFor:error:]
  -[LPAPFSVolume renameSnapshot:to:error:]
  -[LPAPFSVolume revertToSnapshot:error:]
  -[LPAPFSVolume rootToSnapshot:error:]
  -[LPAPFSVolume role]


LPMedia : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned int ioMedia

  // class methods
  +[LPMedia allMedia]
  +[LPMedia mediaForPath:]
  +[LPMedia mediaOfCorrectTypeGivenIOMedia:]
  +[LPMedia mediaForPath:snapshotName:]
  +[LPMedia liveMediaForSnapshotAtPath:]
  +[LPMedia _copyIOMediaForDiskWithPath:]
  +[LPMedia _copyLiveFilesystemIOMediaForRootedSnapshot]
  +[LPMedia mediaForPath:isSnapshot:]
  +[LPMedia snapshotNameForMediaForPath:]
  +[LPMedia mediaForUUID:]
  +[LPMedia mediaForBSDNameOrDeviceNode:]
  +[LPMedia contentTypeToSubclassMap]
  +[LPMedia supportedContentTypes]

  // instance methods
  -[LPMedia isInternal]
  -[LPMedia content]
  -[LPMedia dealloc]
  -[LPMedia name]
  -[LPMedia BSDName]
  -[LPMedia ioMedia]
  -[LPMedia isWhole]
  -[LPMedia mediaUUID]
  -[LPMedia devNodePath]
  -[LPMedia getStringPropertyWithName:]
  -[LPMedia initWithIOMediaObject:]
  -[LPMedia getBoolPropertyWithName:]
  -[LPMedia setIoMedia:]
  -[LPMedia isInternalAndIsRootDevice:]
  -[LPMedia wholeMediaForMedia]
  -[LPMedia setName:withError:]
  -[LPMedia isEqual:]
  -[LPMedia mountPoint]


LPPartitionMedia : LPMedia
  // class methods
  +[LPPartitionMedia primaryMedia]
  +[LPPartitionMedia contentTypesForPartitionMedia]
  +[LPPartitionMedia supportedContentTypes]

  // instance methods
  -[LPPartitionMedia children]
  -[LPPartitionMedia isPrimaryMedia]


01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
