|| __DATA.__data _PBBridgeAnimationSyncOffsetMaximumTime
|| __DATA.__data _PBBridgeAnimationSyncOffsetTime
|| __DATA.__objc_data _OBJC_CLASS_$_PBBGatewayManager
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoAcknowledgeBuysOnWatchCredentialIngestion
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoBecameActive
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoBeganWaitingForPresentationOfActivationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoBeganWaitingForUserResponseToActivationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoCompanionTermsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoDemoWatchDidIngestWirelessCredentials
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoDemoWirelessCredentials
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoDeviceName
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoDevicesLockedOn
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoDiagnosticsEnabled
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoDidEndPasscodeCreation
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoDidFailToCreatePasscode
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoDidMakeAutoLockChoice
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoGizmoActivationFailed
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoHandleActivationData
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoHandshake
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoHandshakeResponse
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoInitialSyncStateUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoLocationServicesEnabled
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoOfflineTerms
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoPerformanceResult
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoPopToControllerType
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoPrepareWatchForForcedSUResponse
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoPrepareWatchForInitialSync
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoPrepareWatchForInitialSyncResponse
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoProxyActivationFetch
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoPushControllerType
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoRemoteActivationFailureReport
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoSendActivationEventKeepAlive
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoSendBuysOnWatchCredentials
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoSendLanguageAndLocale
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoSetLanguage
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoSetPasscodeRestrictions
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoSetRegion
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoSetSiriEnabled
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoSiriEnabled
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoTellCompanionLanguageAndLocaleChangeStatus
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoTellGizmoToSetCrownOrientation
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoTermsAndConditions
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoTransferPerformanceResults
|| __DATA.__objc_data _OBJC_CLASS_$_PBBProtoWarrantySentinel
|| __DATA.__objc_data _OBJC_CLASS_$_PBBridgeAggregateReporter
|| __DATA.__objc_data _OBJC_CLASS_$_PBBridgeAkashiReporter
|| __DATA.__objc_data _OBJC_CLASS_$_PBBridgeAssetsManager
|| __DATA.__objc_data _OBJC_CLASS_$_PBBridgeGizmoController
|| __DATA.__objc_data _OBJC_CLASS_$_PBBridgeIDSMessageInstance
|| __DATA.__objc_data _OBJC_CLASS_$_PBBridgeIDSReachabilityStatusObject
|| __DATA.__objc_data _OBJC_CLASS_$_PBBridgeProgressView
|| __DATA.__objc_data _OBJC_CLASS_$_PBBridgeResponsePerformanceMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_PBBridgeWatchAttributeController
|| __DATA.__objc_data _OBJC_CLASS_$_PBHandshake
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBGatewayManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoAcknowledgeBuysOnWatchCredentialIngestion
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoBecameActive
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoBeganWaitingForPresentationOfActivationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoBeganWaitingForUserResponseToActivationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoCompanionTermsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoDemoWatchDidIngestWirelessCredentials
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoDemoWirelessCredentials
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoDeviceName
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoDevicesLockedOn
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoDiagnosticsEnabled
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoDidEndPasscodeCreation
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoDidFailToCreatePasscode
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoDidMakeAutoLockChoice
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoGizmoActivationFailed
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoHandleActivationData
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoHandshake
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoHandshakeResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoInitialSyncStateUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoLocationServicesEnabled
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoOfflineTerms
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoPerformanceResult
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoPopToControllerType
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoPrepareWatchForForcedSUResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoPrepareWatchForInitialSync
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoPrepareWatchForInitialSyncResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoProxyActivationFetch
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoPushControllerType
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoRemoteActivationFailureReport
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoSendActivationEventKeepAlive
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoSendBuysOnWatchCredentials
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoSendLanguageAndLocale
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoSetLanguage
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoSetPasscodeRestrictions
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoSetRegion
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoSetSiriEnabled
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoSiriEnabled
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoTellCompanionLanguageAndLocaleChangeStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoTellGizmoToSetCrownOrientation
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoTermsAndConditions
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoTransferPerformanceResults
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBProtoWarrantySentinel
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBridgeAggregateReporter
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBridgeAkashiReporter
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBridgeAssetsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBridgeGizmoController
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBridgeIDSMessageInstance
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBridgeIDSReachabilityStatusObject
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBridgeProgressView
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBridgeResponsePerformanceMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_PBBridgeWatchAttributeController
|| __DATA.__objc_data _OBJC_METACLASS_$_PBHandshake
|| __DATA_CONST.__const _PBAggregateReporterPrefix
|| __DATA_CONST.__const _PBAkashiReporterPrefix
|| __DATA_CONST.__const _PBAssetTypeKey
|| __DATA_CONST.__const _PBAssetsCacheDirName
|| __DATA_CONST.__const _PBAtlasAssetName
|| __DATA_CONST.__const _PBAtlasImageAssetPointerKey
|| __DATA_CONST.__const _PBAtlasSharedVideoAssetPointerKey
|| __DATA_CONST.__const _PBAtlasUniqueVideoAssetPointerKey
|| __DATA_CONST.__const _PBBBridgeCompanionProxyActivationFailed
|| __DATA_CONST.__const _PBBridgeActivationRequestKey
|| __DATA_CONST.__const _PBBridgeActivationResponseHeadersKey
|| __DATA_CONST.__const _PBBridgeActivationServerRespondedNotification
|| __DATA_CONST.__const _PBBridgeAdvertisingDividerComponent
|| __DATA_CONST.__const _PBBridgeAdvertisingMaterialKey
|| __DATA_CONST.__const _PBBridgeAdvertisingNameKey
|| __DATA_CONST.__const _PBBridgeAdvertisingSizeKey
|| __DATA_CONST.__const _PBBridgeAdvertisingVersionKey
|| __DATA_CONST.__const _PBBridgeAssetsKey
|| __DATA_CONST.__const _PBBridgeConnectionIdentifier
|| __DATA_CONST.__const _PBBridgeDidCompletePasscodeChangeNotification
|| __DATA_CONST.__const _PBBridgeDidCompletePasscodeCreationNotification
|| __DATA_CONST.__const _PBBridgeDidCompleteUnlockPairingNotification
|| __DATA_CONST.__const _PBBridgeDidFailToCreatePasscodeNotification
|| __DATA_CONST.__const _PBBridgeDividerComponent
|| __DATA_CONST.__const _PBBridgeDividerComponentBondiOnwards
|| __DATA_CONST.__const _PBBridgeGizmoActivationFailedNotification
|| __DATA_CONST.__const _PBBridgeGizmoAppleLanguagesKey
|| __DATA_CONST.__const _PBBridgeGizmoAppleLocaleKey
|| __DATA_CONST.__const _PBBridgeGizmoControllerActivationAbilityChanged
|| __DATA_CONST.__const _PBBridgeGizmoControllerRetryActivation
|| __DATA_CONST.__const _PBBridgeGizmoDidBeginActivatingNotification
|| __DATA_CONST.__const _PBBridgeGizmoDidFinishActivatingNotification
|| __DATA_CONST.__const _PBBridgeGizmoPairingActivityName
|| __DATA_CONST.__const _PBBridgeGizmoReachabilityAlertService
|| __DATA_CONST.__const _PBBridgeLastFailedMessageID
|| __DATA_CONST.__const _PBBridgeLastFailureCode
|| __DATA_CONST.__const _PBBridgeLastIDSFailureCode
|| __DATA_CONST.__const _PBBridgeLastNRFailureCode
|| __DATA_CONST.__const _PBBridgeLocalePreferencesKey
|| __DATA_CONST.__const _PBBridgeMessageError
|| __DATA_CONST.__const _PBBridgeMessageFailedToSend
|| __DATA_CONST.__const _PBBridgeMobileAssetsChangedDarwinNotification
|| __DATA_CONST.__const _PBBridgeOfflineTermsLicenseKey
|| __DATA_CONST.__const _PBBridgeOfflineTermsMultitermsKey
|| __DATA_CONST.__const _PBBridgeOfflineTermsNotification
|| __DATA_CONST.__const _PBBridgeOfflineTermsWarrantyKey
|| __DATA_CONST.__const _PBBridgePairingViewServiceIdentifier
|| __DATA_CONST.__const _PBBridgeProxyActivationStageOneActivityName
|| __DATA_CONST.__const _PBBridgeProxyActivationStageThreeActivityName
|| __DATA_CONST.__const _PBBridgeProxyActivationStageTwoActivityName
|| __DATA_CONST.__const _PBBridgeRemoteActivationErrorKey
|| __DATA_CONST.__const _PBBridgeRestoreBridgePath
|| __DATA_CONST.__const _PBBridgeStartPairingPath
|| __DATA_CONST.__const _PBBridgeSuppressMessageFailError
|| __DATA_CONST.__const _PBBridgeSuppressMessageRetry
|| __DATA_CONST.__const _PBBridgeWarrantySentinelExistsKey
|| __DATA_CONST.__const _PBBridgeWarrantySentinelNotification
|| __DATA_CONST.__const _PBBridgeWatchDemoDeviceString
|| __DATA_CONST.__const _PBEditionTypeKey
|| __DATA_CONST.__const _PBFormatVersionKey
|| __DATA_CONST.__const _PBHWTypeKey
|| __DATA_CONST.__const _PBMarketingBehaviorKey
|| __DATA_CONST.__const _PBMaterialTypeKey
|| __DATA_CONST.__const _PBNotifyClientOfActivityNotification
|| __DATA_CONST.__const _PBRadarReporterGizmoBuildStringPath
|| __DATA_CONST.__const _PBRadarReporterGizmoBuildStringSubpath
|| __DATA_CONST.__const _PBRadarReporterServiceUUIDString
|| __DATA_CONST.__const _PBResolutionTypeKey
|| __DATA_CONST.__const _PBSizeTypeKey
|| __DATA_CONST.__const _PBVersionKey
|| __DATA_CONST.__const _kBridgeDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBBProtoPrepareWatchForForcedSU
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBBridgeAssetsReachabilityMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBBridgeCompanionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBBridgeIDSReachability
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBBridgeIDSReachabilityObserverWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PBBridgeIDSServiceDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBBProtoPrepareWatchForForcedSU
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBBridgeAssetsReachabilityMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBBridgeCompanionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBBridgeIDSReachability
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBBridgeIDSReachabilityObserverWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PBBridgeIDSServiceDelegate
|| __TEXT.__const _ACTIVATION_RETRIES
|| __TEXT.__const _PBBridgeAdvertisingNameComponentCount
|| __TEXT.__const _PBBridgeAdvertisingNameLength
|| __TEXT.__const _PBBridgeAdvertisingPayloadFullLength
|| __TEXT.__const _PBMagicCodeComponentCount
|| __TEXT.__const _PBMagicCodePayloadCountPreBondi
|| __TEXT.__text _CleanIntendedFireTimeOffset
|| __TEXT.__text _IsCompanionMessageTypeActivationCaresAbout
|| __TEXT.__text _IsGizmoMessageTypeActivationCaresAbout
|| __TEXT.__text _PBAdvertisingInfoFromPayload
|| __TEXT.__text _PBBCMessageDescription
|| __TEXT.__text _PBBGMessageDescription
|| __TEXT.__text _PBBProtoAcknowledgeBuysOnWatchCredentialIngestionReadFrom
|| __TEXT.__text _PBBProtoBecameActiveReadFrom
|| __TEXT.__text _PBBProtoBeganWaitingForPresentationOfActivationEventReadFrom
|| __TEXT.__text _PBBProtoBeganWaitingForUserResponseToActivationEventReadFrom
|| __TEXT.__text _PBBProtoCompanionTermsResponseReadFrom
|| __TEXT.__text _PBBProtoDemoWatchDidIngestWirelessCredentialsReadFrom
|| __TEXT.__text _PBBProtoDemoWirelessCredentialsReadFrom
|| __TEXT.__text _PBBProtoDeviceNameReadFrom
|| __TEXT.__text _PBBProtoDevicesLockedOnReadFrom
|| __TEXT.__text _PBBProtoDiagnosticsEnabledReadFrom
|| __TEXT.__text _PBBProtoDidEndPasscodeCreationReadFrom
|| __TEXT.__text _PBBProtoDidFailToCreatePasscodeReadFrom
|| __TEXT.__text _PBBProtoDidMakeAutoLockChoiceReadFrom
|| __TEXT.__text _PBBProtoGizmoActivationFailedReadFrom
|| __TEXT.__text _PBBProtoHandleActivationDataReadFrom
|| __TEXT.__text _PBBProtoHandshakeReadFrom
|| __TEXT.__text _PBBProtoHandshakeResponseReadFrom
|| __TEXT.__text _PBBProtoInitialSyncStateUpdateReadFrom
|| __TEXT.__text _PBBProtoLocationServicesEnabledReadFrom
|| __TEXT.__text _PBBProtoOfflineTermsReadFrom
|| __TEXT.__text _PBBProtoPerformanceResultReadFrom
|| __TEXT.__text _PBBProtoPopToControllerTypeReadFrom
|| __TEXT.__text _PBBProtoPrepareWatchForForcedSUReadFrom
|| __TEXT.__text _PBBProtoPrepareWatchForForcedSUResponseReadFrom
|| __TEXT.__text _PBBProtoPrepareWatchForInitialSyncReadFrom
|| __TEXT.__text _PBBProtoPrepareWatchForInitialSyncResponseReadFrom
|| __TEXT.__text _PBBProtoProxyActivationFetchReadFrom
|| __TEXT.__text _PBBProtoPushControllerTypeReadFrom
|| __TEXT.__text _PBBProtoRemoteActivationFailureReportReadFrom
|| __TEXT.__text _PBBProtoSendActivationEventKeepAliveReadFrom
|| __TEXT.__text _PBBProtoSendBuysOnWatchCredentialsReadFrom
|| __TEXT.__text _PBBProtoSendLanguageAndLocaleReadFrom
|| __TEXT.__text _PBBProtoSetLanguageReadFrom
|| __TEXT.__text _PBBProtoSetPasscodeRestrictionsReadFrom
|| __TEXT.__text _PBBProtoSetRegionReadFrom
|| __TEXT.__text _PBBProtoSetSiriEnabledReadFrom
|| __TEXT.__text _PBBProtoSiriEnabledReadFrom
|| __TEXT.__text _PBBProtoTellCompanionLanguageAndLocaleChangeStatusReadFrom
|| __TEXT.__text _PBBProtoTellGizmoToSetCrownOrientationReadFrom
|| __TEXT.__text _PBBProtoTermsAndConditionsReadFrom
|| __TEXT.__text _PBBProtoTransferPerformanceResultsReadFrom
|| __TEXT.__text _PBBProtoWarrantySentinelReadFrom
|| __TEXT.__text _PBBSourceTypeFromDNDSourceType
|| __TEXT.__text _PBBridgeAggregateReporterIncrementSuccessType
|| __TEXT.__text _PBBridgeAggregateReporterPushCommunicationTimingType
|| __TEXT.__text _PBBridgeAggregateReporterPushTimingType
|| __TEXT.__text _PBBridgeMagicCodeDecoder
|| __TEXT.__text _PBBridgeMagicCodeString
|| __TEXT.__text _PBBuddyControllerDescription
|| __TEXT.__text _PBCleanedAdvertisingName
|| __TEXT.__text _PBDumpLogsWithBlock
|| __TEXT.__text _PBGetPairedNRDevicesWeShouldList
|| __TEXT.__text _PBGetVersionNumber
|| __TEXT.__text _PBHasPairedDevice
|| __TEXT.__text _PBHexStringFromOOBData
|| __TEXT.__text _PBIntegerValueRepresentationFromString
|| __TEXT.__text _PBIsInternalInstall
|| __TEXT.__text _PBLogPerformanceMetrics
|| __TEXT.__text _PBNotifyClientOfActivity
|| __TEXT.__text _PBOOBDataFromHexString
|| __TEXT.__text _PBPairedSyncComplete
|| __TEXT.__text _PBPairedSyncCompleteState
|| __TEXT.__text _PBPairingGlobalProgress
|| __TEXT.__text _PBProtoSend
|| __TEXT.__text _PBStringRepresentationFromInteger
|| __TEXT.__text _PBUserCorrectableNetworkError
|| __TEXT.__text _PBVariantSizeForProductType
|| __TEXT.__text _SizeForInternalSize
|| __TEXT.__text __PBBridgeMagicCodeString
|| __TEXT.__text __PostMessageSendFailureError
|| __TEXT.__text __ResponseDataForTestType
|| __TEXT.__text __ResponseFilePathForTestType
|| __TEXT.__text _pbb_accountsignin_log
|| __TEXT.__text _pbb_activation_log
|| __TEXT.__text _pbb_bridge_log
|| __TEXT.__text _pbb_manualunpairing_log
|| __TEXT.__text _pbb_mobileasset_log
|| __TEXT.__text _pbb_setup_log
|| __TEXT.__text _pbb_setupflow_log
|| __TEXT.__text _pbb_shared_log
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientPushValueForDistributionKey
__ AggregateDictionary: _ADClientSetValueForScalarKey
__ AppleAccount: _OBJC_CLASS_$_AAGenericTermsUIRequest
__ AppleAccount: _kAAProtocolGenericTermsUIBuddyMLKey
__ BackBoardServices: _OBJC_CLASS_$_BKSProcessAssertion
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactGivenNameKey
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesFlushCaches
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: __CFLocaleResetCurrent
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: __kCFSystemVersionProductVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextRotateCTM
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetStrokeColor
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CrashReporterSupport: _SimulateCrash
__ DoNotDisturb: _DNDResolvedScheduleEnabledSetting
__ DoNotDisturb: _OBJC_CLASS_$_DNDSettingsService
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLConnection
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSValue
__ IDS: _IDSSendMessageOptionExpectsPeerResponseKey
__ IDS: _IDSSendMessageOptionPeerResponseIdentifierKey
__ IDS: _OBJC_CLASS_$_IDSService
__ IDSFoundation: _IDSDefaultPairedDevice
__ IDSFoundation: _OBJC_CLASS_$_IDSMessageContext
__ IDSFoundation: _OBJC_CLASS_$_IDSProtobuf
__ IntlPreferences: _OBJC_CLASS_$_IntlUtility
__ ManagedConfiguration: _MCFeatureAlphanumericPasscodeRequired
__ ManagedConfiguration: _MCFeatureAssistantAllowed
__ ManagedConfiguration: _MCFeatureDiagnosticsSubmissionAllowed
__ ManagedConfiguration: _MCFeatureMaximumPasscodeAgeDays
__ ManagedConfiguration: _MCFeatureMinimumPasscodeLength
__ ManagedConfiguration: _MCFeaturePasscodeRequired
__ ManagedConfiguration: _MCFeatureSimplePasscodeAllowed
__ ManagedConfiguration: _MCRestrictedBoolKey
__ ManagedConfiguration: _MCRestrictedBoolPreferenceKey
__ ManagedConfiguration: _MCRestrictedBoolValueKey
__ ManagedConfiguration: _MCRestrictedValueKey
__ ManagedConfiguration: _MCRestrictedValuePreferSmallerValuesKey
__ ManagedConfiguration: _MCRestrictedValueValueKey
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileAsset: _ASServerURLForAssetType
__ MobileAsset: _OBJC_CLASS_$_MAAsset
__ MobileAsset: _OBJC_CLASS_$_MAAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MADownloadOptions
__ MobileKeyBag: _MKBDeviceLockAssertion
__ MobileWiFi: _WiFiDeviceClientCopyCurrentNetwork
__ MobileWiFi: _WiFiManagerClientCopyInterfaces
__ MobileWiFi: _WiFiManagerClientCopyNetworks
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiNetworkCopyPassword
__ MobileWiFi: _WiFiNetworkCopyRecord
__ MobileWiFi: _WiFiNetworkGetSSID
__ MobileWiFi: _WiFiNetworkIsCaptive
__ MobileWiFi: _WiFiNetworkIsProfileBased
__ MobileWiFi: _kWiFiNetworkPasswordStringKey
__ NanoPreferencesSync: _NPSManagedConfigurationClientID
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoRegistry: _NRDevicePropertyDeviceBrand
__ NanoRegistry: _NRDevicePropertyDeviceHousingColor
__ NanoRegistry: _NRDevicePropertyDmin
__ NanoRegistry: _NRDevicePropertyIsArchived
__ NanoRegistry: _NRDevicePropertyIsPaired
__ NanoRegistry: _NRDevicePropertyLocalPairingDataStorePath
__ NanoRegistry: _NRDevicePropertyPairingID
__ NanoRegistry: _NRDevicePropertyProductType
__ NanoRegistry: _NRDeviceSizeForProductType
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidEnterCompatibilityStateNotification
__ NanoRegistry: _NRPairedDeviceRegistryStatusCodeString
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ NanoRegistry: _OBJC_CLASS_$_NRPairingCompatibilityVersionInfo
__ NanoRegistry: __NRDevicePropertyBluetoothIdentifier
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ RemoteUI: _OBJC_CLASS_$_RUILoader
__ SettingsFoundation: _SFLicenseFilePath
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIApp
__ UIKit: _UIGraphicsGetCurrentContext
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libSystem.B.dylib: dyld_stub_binder
__ liblockdown.dylib: _kLockdownDeviceNameKey
__ liblockdown.dylib: _lockdown_connect
__ liblockdown.dylib: _lockdown_disconnect
__ liblockdown.dylib: _lockdown_set_value
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _method_exchangeImplementations
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
PBBProtoPrepareWatchForForcedSU : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
  // instance methods
  -[PBBProtoPrepareWatchForForcedSU isEqual:]
  -[PBBProtoPrepareWatchForForcedSU copyWithZone:]
  -[PBBProtoPrepareWatchForForcedSU dictionaryRepresentation]
  -[PBBProtoPrepareWatchForForcedSU writeTo:]
  -[PBBProtoPrepareWatchForForcedSU mergeFrom:]
  -[PBBProtoPrepareWatchForForcedSU readFrom:]
  -[PBBProtoPrepareWatchForForcedSU copyTo:]


PBBProtoCompanionTermsResponse : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasTermsAccepted
 @property  BOOL termsAccepted
 @property  BOOL hasUserAgent
 @property  NSString *userAgent
 @property  BOOL hasIsExistingAccountTerms
 @property  BOOL isExistingAccountTerms
 @property  BOOL hasResponseData
 @property  NSString *responseData

  // instance methods
  -[PBBProtoCompanionTermsResponse isEqual:]
  -[PBBProtoCompanionTermsResponse copyWithZone:]
  -[PBBProtoCompanionTermsResponse .cxx_destruct]
  -[PBBProtoCompanionTermsResponse dictionaryRepresentation]
  -[PBBProtoCompanionTermsResponse writeTo:]
  -[PBBProtoCompanionTermsResponse mergeFrom:]
  -[PBBProtoCompanionTermsResponse readFrom:]
  -[PBBProtoCompanionTermsResponse copyTo:]
  -[PBBProtoCompanionTermsResponse responseData]
  -[PBBProtoCompanionTermsResponse setResponseData:]
  -[PBBProtoCompanionTermsResponse userAgent]
  -[PBBProtoCompanionTermsResponse setUserAgent:]
  -[PBBProtoCompanionTermsResponse termsAccepted]
  -[PBBProtoCompanionTermsResponse setTermsAccepted:]
  -[PBBProtoCompanionTermsResponse hasUserAgent]
  -[PBBProtoCompanionTermsResponse setHasTermsAccepted:]
  -[PBBProtoCompanionTermsResponse hasTermsAccepted]
  -[PBBProtoCompanionTermsResponse setIsExistingAccountTerms:]
  -[PBBProtoCompanionTermsResponse setHasIsExistingAccountTerms:]
  -[PBBProtoCompanionTermsResponse hasIsExistingAccountTerms]
  -[PBBProtoCompanionTermsResponse hasResponseData]
  -[PBBProtoCompanionTermsResponse isExistingAccountTerms]


PBBProtoAcknowledgeBuysOnWatchCredentialIngestion : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasErrorDescription
 @property  NSString *errorDescription
 @property  BOOL hasErrorCode
 @property  int errorCode

  // instance methods
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion isEqual:]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion copyWithZone:]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion .cxx_destruct]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion dictionaryRepresentation]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion writeTo:]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion mergeFrom:]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion readFrom:]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion copyTo:]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion success]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion setSuccess:]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion errorCode]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion setErrorCode:]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion setHasErrorCode:]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion hasErrorCode]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion errorDescription]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion setErrorDescription:]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion hasSuccess]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion setHasSuccess:]
  -[PBBProtoAcknowledgeBuysOnWatchCredentialIngestion hasErrorDescription]


PBBProtoHandshake : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  unsigned int position
 @property  unsigned int version
 @property  unsigned int state

  // instance methods
  -[PBBProtoHandshake isEqual:]
  -[PBBProtoHandshake copyWithZone:]
  -[PBBProtoHandshake version]
  -[PBBProtoHandshake dictionaryRepresentation]
  -[PBBProtoHandshake setVersion:]
  -[PBBProtoHandshake state]
  -[PBBProtoHandshake position]
  -[PBBProtoHandshake setState:]
  -[PBBProtoHandshake writeTo:]
  -[PBBProtoHandshake mergeFrom:]
  -[PBBProtoHandshake readFrom:]
  -[PBBProtoHandshake copyTo:]
  -[PBBProtoHandshake setPosition:]


PBBProtoSetLanguage : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  NSString *language

  // instance methods
  -[PBBProtoSetLanguage isEqual:]
  -[PBBProtoSetLanguage copyWithZone:]
  -[PBBProtoSetLanguage .cxx_destruct]
  -[PBBProtoSetLanguage dictionaryRepresentation]
  -[PBBProtoSetLanguage writeTo:]
  -[PBBProtoSetLanguage mergeFrom:]
  -[PBBProtoSetLanguage readFrom:]
  -[PBBProtoSetLanguage copyTo:]
  -[PBBProtoSetLanguage language]
  -[PBBProtoSetLanguage setLanguage:]


PBBProtoDiagnosticsEnabled : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL enabled

  // instance methods
  -[PBBProtoDiagnosticsEnabled isEqual:]
  -[PBBProtoDiagnosticsEnabled copyWithZone:]
  -[PBBProtoDiagnosticsEnabled enabled]
  -[PBBProtoDiagnosticsEnabled setEnabled:]
  -[PBBProtoDiagnosticsEnabled dictionaryRepresentation]
  -[PBBProtoDiagnosticsEnabled writeTo:]
  -[PBBProtoDiagnosticsEnabled mergeFrom:]
  -[PBBProtoDiagnosticsEnabled readFrom:]
  -[PBBProtoDiagnosticsEnabled copyTo:]


PBBridgeAggregateReporter : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PBBridgeAggregateReporter descriptionForSuccessType:]
  +[PBBridgeAggregateReporter descriptionForTimingType:]
  +[PBBridgeAggregateReporter pushTimingForTypeNamed:withValue:]
  +[PBBridgeAggregateReporter descriptionForCommTimingType:]
  +[PBBridgeAggregateReporter activationServerRespondedAtPage:]
  +[PBBridgeAggregateReporter incrementSuccessType:]
  +[PBBridgeAggregateReporter pushTimingType:withValue:]
  +[PBBridgeAggregateReporter pushCommunicationTimingType:withValue:]
  +[PBBridgeAggregateReporter recordSigninEventPair:]
  +[PBBridgeAggregateReporter recordSigninEventFollowup:]
  +[PBBridgeAggregateReporter recordSigninEventDaily:]
  +[PBBridgeAggregateReporter recordSigninEventPostPair:]


PBBProtoProxyActivationFetch : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  NSData *request

  // instance methods
  -[PBBProtoProxyActivationFetch isEqual:]
  -[PBBProtoProxyActivationFetch copyWithZone:]
  -[PBBProtoProxyActivationFetch .cxx_destruct]
  -[PBBProtoProxyActivationFetch dictionaryRepresentation]
  -[PBBProtoProxyActivationFetch writeTo:]
  -[PBBProtoProxyActivationFetch mergeFrom:]
  -[PBBProtoProxyActivationFetch readFrom:]
  -[PBBProtoProxyActivationFetch copyTo:]
  -[PBBProtoProxyActivationFetch setRequest:]
  -[PBBProtoProxyActivationFetch request]


PBBProtoPushControllerType : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  unsigned int controllerType
 @property  BOOL hasIntendedFireDate
 @property  double intendedFireDate

  // instance methods
  -[PBBProtoPushControllerType isEqual:]
  -[PBBProtoPushControllerType copyWithZone:]
  -[PBBProtoPushControllerType dictionaryRepresentation]
  -[PBBProtoPushControllerType writeTo:]
  -[PBBProtoPushControllerType mergeFrom:]
  -[PBBProtoPushControllerType readFrom:]
  -[PBBProtoPushControllerType copyTo:]
  -[PBBProtoPushControllerType setIntendedFireDate:]
  -[PBBProtoPushControllerType setHasIntendedFireDate:]
  -[PBBProtoPushControllerType hasIntendedFireDate]
  -[PBBProtoPushControllerType controllerType]
  -[PBBProtoPushControllerType setControllerType:]
  -[PBBProtoPushControllerType intendedFireDate]


PBBridgeWatchAttributeController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSCache *stringCache
 @property  unsigned long edition
 @property  unsigned long material
 @property  unsigned long internalSize
 @property  unsigned long size
 @property  unsigned long hardwareBehavior
 @property  BOOL hasTwoYearWarranty
 @property  NRDevice *device

  // class methods
  +[PBBridgeWatchAttributeController sharedDeviceController]
  +[PBBridgeWatchAttributeController materialFromDevice:]
  +[PBBridgeWatchAttributeController sizeFromDevice:]
  +[PBBridgeWatchAttributeController resourceString:material:size:forAttributes:]
  +[PBBridgeWatchAttributeController sizeFromInternalSize:]
  +[PBBridgeWatchAttributeController materialDescription:]
  +[PBBridgeWatchAttributeController sizeDescription:]
  +[PBBridgeWatchAttributeController editionDescription:]
  +[PBBridgeWatchAttributeController hwBehaviorDescription:]
  +[PBBridgeWatchAttributeController materialKeyColorForMaterial:]
  +[PBBridgeWatchAttributeController _materialForCLHSValue:]

  // instance methods
  -[PBBridgeWatchAttributeController init]
  -[PBBridgeWatchAttributeController .cxx_destruct]
  -[PBBridgeWatchAttributeController size]
  -[PBBridgeWatchAttributeController device]
  -[PBBridgeWatchAttributeController edition]
  -[PBBridgeWatchAttributeController setDevice:]
  -[PBBridgeWatchAttributeController material]
  -[PBBridgeWatchAttributeController setMaterial:]
  -[PBBridgeWatchAttributeController setInternalSize:]
  -[PBBridgeWatchAttributeController resourceString:forAttributes:]
  -[PBBridgeWatchAttributeController stringCache]
  -[PBBridgeWatchAttributeController setStringCache:]
  -[PBBridgeWatchAttributeController attributesDescription]
  -[PBBridgeWatchAttributeController _setMaterialWithCLHSValue:]
  -[PBBridgeWatchAttributeController getGestaltDmin]
  -[PBBridgeWatchAttributeController _populateMaterialDetailsWithDMinProperities:]
  -[PBBridgeWatchAttributeController hardwareBehavior]
  -[PBBridgeWatchAttributeController hasTwoYearWarranty]
  -[PBBridgeWatchAttributeController materialKeyColor]
  -[PBBridgeWatchAttributeController internalSize]


PBBridgeAssetsReachabilityMonitor : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PBBridgeAssetsReachabilityMonitor checkServerReachabilityWithCompletion:]


PBBProtoPopToControllerType : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  unsigned int controllerType
 @property  BOOL hasIntendedFireDate
 @property  double intendedFireDate

  // instance methods
  -[PBBProtoPopToControllerType isEqual:]
  -[PBBProtoPopToControllerType copyWithZone:]
  -[PBBProtoPopToControllerType dictionaryRepresentation]
  -[PBBProtoPopToControllerType writeTo:]
  -[PBBProtoPopToControllerType mergeFrom:]
  -[PBBProtoPopToControllerType readFrom:]
  -[PBBProtoPopToControllerType copyTo:]
  -[PBBProtoPopToControllerType setIntendedFireDate:]
  -[PBBProtoPopToControllerType setHasIntendedFireDate:]
  -[PBBProtoPopToControllerType hasIntendedFireDate]
  -[PBBProtoPopToControllerType controllerType]
  -[PBBProtoPopToControllerType setControllerType:]
  -[PBBProtoPopToControllerType intendedFireDate]


PBBProtoInitialSyncStateUpdate : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasProgress
 @property  double progress
 @property  BOOL hasState
 @property  unsigned int state

  // instance methods
  -[PBBProtoInitialSyncStateUpdate isEqual:]
  -[PBBProtoInitialSyncStateUpdate copyWithZone:]
  -[PBBProtoInitialSyncStateUpdate dictionaryRepresentation]
  -[PBBProtoInitialSyncStateUpdate progress]
  -[PBBProtoInitialSyncStateUpdate state]
  -[PBBProtoInitialSyncStateUpdate setState:]
  -[PBBProtoInitialSyncStateUpdate writeTo:]
  -[PBBProtoInitialSyncStateUpdate mergeFrom:]
  -[PBBProtoInitialSyncStateUpdate readFrom:]
  -[PBBProtoInitialSyncStateUpdate copyTo:]
  -[PBBProtoInitialSyncStateUpdate setProgress:]
  -[PBBProtoInitialSyncStateUpdate hasState]
  -[PBBProtoInitialSyncStateUpdate setHasState:]
  -[PBBProtoInitialSyncStateUpdate setHasProgress:]
  -[PBBProtoInitialSyncStateUpdate hasProgress]


PBBProtoHandleActivationData : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  NSData *activationData
 @property  NSData *responseHeaders

  // instance methods
  -[PBBProtoHandleActivationData isEqual:]
  -[PBBProtoHandleActivationData copyWithZone:]
  -[PBBProtoHandleActivationData .cxx_destruct]
  -[PBBProtoHandleActivationData dictionaryRepresentation]
  -[PBBProtoHandleActivationData writeTo:]
  -[PBBProtoHandleActivationData mergeFrom:]
  -[PBBProtoHandleActivationData readFrom:]
  -[PBBProtoHandleActivationData copyTo:]
  -[PBBProtoHandleActivationData responseHeaders]
  -[PBBProtoHandleActivationData activationData]
  -[PBBProtoHandleActivationData setActivationData:]
  -[PBBProtoHandleActivationData setResponseHeaders:]


PBBProtoSendLanguageAndLocale : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  NSMutableArray *appleLanguages
 @property  BOOL hasAppleLocale
 @property  NSString *appleLocale
 @property  BOOL hasArchivedPreferences
 @property  NSData *archivedPreferences

  // class methods
  +[PBBProtoSendLanguageAndLocale appleLanguagesType]

  // instance methods
  -[PBBProtoSendLanguageAndLocale isEqual:]
  -[PBBProtoSendLanguageAndLocale copyWithZone:]
  -[PBBProtoSendLanguageAndLocale .cxx_destruct]
  -[PBBProtoSendLanguageAndLocale dictionaryRepresentation]
  -[PBBProtoSendLanguageAndLocale writeTo:]
  -[PBBProtoSendLanguageAndLocale mergeFrom:]
  -[PBBProtoSendLanguageAndLocale readFrom:]
  -[PBBProtoSendLanguageAndLocale copyTo:]
  -[PBBProtoSendLanguageAndLocale archivedPreferences]
  -[PBBProtoSendLanguageAndLocale setArchivedPreferences:]
  -[PBBProtoSendLanguageAndLocale addAppleLanguages:]
  -[PBBProtoSendLanguageAndLocale appleLanguagesCount]
  -[PBBProtoSendLanguageAndLocale clearAppleLanguages]
  -[PBBProtoSendLanguageAndLocale appleLanguagesAtIndex:]
  -[PBBProtoSendLanguageAndLocale setAppleLocale:]
  -[PBBProtoSendLanguageAndLocale hasAppleLocale]
  -[PBBProtoSendLanguageAndLocale hasArchivedPreferences]
  -[PBBProtoSendLanguageAndLocale appleLanguages]
  -[PBBProtoSendLanguageAndLocale setAppleLanguages:]
  -[PBBProtoSendLanguageAndLocale appleLocale]


PBBProtoSendActivationEventKeepAlive : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
  // instance methods
  -[PBBProtoSendActivationEventKeepAlive isEqual:]
  -[PBBProtoSendActivationEventKeepAlive copyWithZone:]
  -[PBBProtoSendActivationEventKeepAlive dictionaryRepresentation]
  -[PBBProtoSendActivationEventKeepAlive writeTo:]
  -[PBBProtoSendActivationEventKeepAlive mergeFrom:]
  -[PBBProtoSendActivationEventKeepAlive readFrom:]
  -[PBBProtoSendActivationEventKeepAlive copyTo:]


PBBridgeAssetsManager : NSObject /usr/lib/libSystem.B.dylib
 @property  @? assetDownloadCompletion
 @property  @? allAssetsDownloadCompletion
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[PBBridgeAssetsManager init]
  -[PBBridgeAssetsManager setQueue:]
  -[PBBridgeAssetsManager queue]
  -[PBBridgeAssetsManager .cxx_destruct]
  -[PBBridgeAssetsManager beginPullingAssetsForAdvertisingName:completion:]
  -[PBBridgeAssetsManager _runAssetQuery:completion:]
  -[PBBridgeAssetsManager _beginPullingAssetsForDeviceAttributes:completion:]
  -[PBBridgeAssetsManager hardwareGenerationForProductType:]
  -[PBBridgeAssetsManager _gatherQueries:withAtlas:]
  -[PBBridgeAssetsManager _beginDownloadsForAssets:]
  -[PBBridgeAssetsManager _runMultipleAssetQueries:completion:]
  -[PBBridgeAssetsManager _assetQueryForDeviceAttributes:deviceAttributes:atlasDetails:]
  -[PBBridgeAssetsManager _checkAssetDownloadStateWithAssets:]
  -[PBBridgeAssetsManager beginPullingAssetsForDeviceMaterial:size:branding:completion:]
  -[PBBridgeAssetsManager beginPullingAssetsForDevice:completion:]
  -[PBBridgeAssetsManager purgeAllAssetsLocalOnly:]
  -[PBBridgeAssetsManager _assetQueryForType:forDevice:atlasDetails:]
  -[PBBridgeAssetsManager assetDownloadCompletion]
  -[PBBridgeAssetsManager setAssetDownloadCompletion:]
  -[PBBridgeAssetsManager allAssetsDownloadCompletion]
  -[PBBridgeAssetsManager setAllAssetsDownloadCompletion:]


PBBProtoSiriEnabled : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL enabled

  // instance methods
  -[PBBProtoSiriEnabled isEqual:]
  -[PBBProtoSiriEnabled copyWithZone:]
  -[PBBProtoSiriEnabled enabled]
  -[PBBProtoSiriEnabled setEnabled:]
  -[PBBProtoSiriEnabled dictionaryRepresentation]
  -[PBBProtoSiriEnabled writeTo:]
  -[PBBProtoSiriEnabled mergeFrom:]
  -[PBBProtoSiriEnabled readFrom:]
  -[PBBProtoSiriEnabled copyTo:]


PBHandshake : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned int position
 @property  unsigned int version
 @property  unsigned int state

  // instance methods
  -[PBHandshake version]
  -[PBHandshake setVersion:]
  -[PBHandshake state]
  -[PBHandshake position]
  -[PBHandshake setState:]
  -[PBHandshake setPosition:]


PBBProtoBeganWaitingForUserResponseToActivationEvent : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
  // instance methods
  -[PBBProtoBeganWaitingForUserResponseToActivationEvent isEqual:]
  -[PBBProtoBeganWaitingForUserResponseToActivationEvent copyWithZone:]
  -[PBBProtoBeganWaitingForUserResponseToActivationEvent dictionaryRepresentation]
  -[PBBProtoBeganWaitingForUserResponseToActivationEvent writeTo:]
  -[PBBProtoBeganWaitingForUserResponseToActivationEvent mergeFrom:]
  -[PBBProtoBeganWaitingForUserResponseToActivationEvent readFrom:]
  -[PBBProtoBeganWaitingForUserResponseToActivationEvent copyTo:]


PBBProtoPrepareWatchForInitialSync : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
  // instance methods
  -[PBBProtoPrepareWatchForInitialSync isEqual:]
  -[PBBProtoPrepareWatchForInitialSync copyWithZone:]
  -[PBBProtoPrepareWatchForInitialSync dictionaryRepresentation]
  -[PBBProtoPrepareWatchForInitialSync writeTo:]
  -[PBBProtoPrepareWatchForInitialSync mergeFrom:]
  -[PBBProtoPrepareWatchForInitialSync readFrom:]
  -[PBBProtoPrepareWatchForInitialSync copyTo:]


PBBProtoDeviceName : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasDeviceName
 @property  NSString *deviceName

  // instance methods
  -[PBBProtoDeviceName isEqual:]
  -[PBBProtoDeviceName copyWithZone:]
  -[PBBProtoDeviceName .cxx_destruct]
  -[PBBProtoDeviceName dictionaryRepresentation]
  -[PBBProtoDeviceName writeTo:]
  -[PBBProtoDeviceName mergeFrom:]
  -[PBBProtoDeviceName readFrom:]
  -[PBBProtoDeviceName copyTo:]
  -[PBBProtoDeviceName setDeviceName:]
  -[PBBProtoDeviceName deviceName]
  -[PBBProtoDeviceName hasDeviceName]


PBBProtoDidEndPasscodeCreation : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL success
 @property  BOOL hasIsLong
 @property  BOOL isLong

  // instance methods
  -[PBBProtoDidEndPasscodeCreation isEqual:]
  -[PBBProtoDidEndPasscodeCreation copyWithZone:]
  -[PBBProtoDidEndPasscodeCreation dictionaryRepresentation]
  -[PBBProtoDidEndPasscodeCreation writeTo:]
  -[PBBProtoDidEndPasscodeCreation mergeFrom:]
  -[PBBProtoDidEndPasscodeCreation readFrom:]
  -[PBBProtoDidEndPasscodeCreation copyTo:]
  -[PBBProtoDidEndPasscodeCreation success]
  -[PBBProtoDidEndPasscodeCreation setSuccess:]
  -[PBBProtoDidEndPasscodeCreation setIsLong:]
  -[PBBProtoDidEndPasscodeCreation setHasIsLong:]
  -[PBBProtoDidEndPasscodeCreation hasIsLong]
  -[PBBProtoDidEndPasscodeCreation isLong]


PBBProtoDevicesLockedOn : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasIntendedFireDate
 @property  double intendedFireDate

  // instance methods
  -[PBBProtoDevicesLockedOn isEqual:]
  -[PBBProtoDevicesLockedOn copyWithZone:]
  -[PBBProtoDevicesLockedOn dictionaryRepresentation]
  -[PBBProtoDevicesLockedOn writeTo:]
  -[PBBProtoDevicesLockedOn mergeFrom:]
  -[PBBProtoDevicesLockedOn readFrom:]
  -[PBBProtoDevicesLockedOn copyTo:]
  -[PBBProtoDevicesLockedOn setIntendedFireDate:]
  -[PBBProtoDevicesLockedOn setHasIntendedFireDate:]
  -[PBBProtoDevicesLockedOn hasIntendedFireDate]
  -[PBBProtoDevicesLockedOn intendedFireDate]


PBBProtoLocationServicesEnabled : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL enabled

  // instance methods
  -[PBBProtoLocationServicesEnabled isEqual:]
  -[PBBProtoLocationServicesEnabled copyWithZone:]
  -[PBBProtoLocationServicesEnabled enabled]
  -[PBBProtoLocationServicesEnabled setEnabled:]
  -[PBBProtoLocationServicesEnabled dictionaryRepresentation]
  -[PBBProtoLocationServicesEnabled writeTo:]
  -[PBBProtoLocationServicesEnabled mergeFrom:]
  -[PBBProtoLocationServicesEnabled readFrom:]
  -[PBBProtoLocationServicesEnabled copyTo:]


PBBProtoDemoWirelessCredentials : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasSsid
 @property  NSString *ssid
 @property  BOOL hasPassword
 @property  NSString *password

  // instance methods
  -[PBBProtoDemoWirelessCredentials isEqual:]
  -[PBBProtoDemoWirelessCredentials copyWithZone:]
  -[PBBProtoDemoWirelessCredentials password]
  -[PBBProtoDemoWirelessCredentials .cxx_destruct]
  -[PBBProtoDemoWirelessCredentials dictionaryRepresentation]
  -[PBBProtoDemoWirelessCredentials setPassword:]
  -[PBBProtoDemoWirelessCredentials writeTo:]
  -[PBBProtoDemoWirelessCredentials mergeFrom:]
  -[PBBProtoDemoWirelessCredentials readFrom:]
  -[PBBProtoDemoWirelessCredentials copyTo:]
  -[PBBProtoDemoWirelessCredentials ssid]
  -[PBBProtoDemoWirelessCredentials setSsid:]
  -[PBBProtoDemoWirelessCredentials hasPassword]
  -[PBBProtoDemoWirelessCredentials hasSsid]


PBBProtoWarrantySentinel : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasSentinelExists
 @property  BOOL sentinelExists
 @property  BOOL hasRemoveSentinel
 @property  BOOL removeSentinel
 @property  NSMutableArray *appleLanguages
 @property  BOOL hasAppleLocale
 @property  NSString *appleLocale
 @property  BOOL hasDeviceName
 @property  NSString *deviceName

  // class methods
  +[PBBProtoWarrantySentinel appleLanguagesType]

  // instance methods
  -[PBBProtoWarrantySentinel isEqual:]
  -[PBBProtoWarrantySentinel copyWithZone:]
  -[PBBProtoWarrantySentinel .cxx_destruct]
  -[PBBProtoWarrantySentinel dictionaryRepresentation]
  -[PBBProtoWarrantySentinel writeTo:]
  -[PBBProtoWarrantySentinel mergeFrom:]
  -[PBBProtoWarrantySentinel readFrom:]
  -[PBBProtoWarrantySentinel copyTo:]
  -[PBBProtoWarrantySentinel setDeviceName:]
  -[PBBProtoWarrantySentinel deviceName]
  -[PBBProtoWarrantySentinel hasDeviceName]
  -[PBBProtoWarrantySentinel addAppleLanguages:]
  -[PBBProtoWarrantySentinel appleLanguagesCount]
  -[PBBProtoWarrantySentinel clearAppleLanguages]
  -[PBBProtoWarrantySentinel appleLanguagesAtIndex:]
  -[PBBProtoWarrantySentinel setAppleLocale:]
  -[PBBProtoWarrantySentinel hasAppleLocale]
  -[PBBProtoWarrantySentinel appleLanguages]
  -[PBBProtoWarrantySentinel setAppleLanguages:]
  -[PBBProtoWarrantySentinel appleLocale]
  -[PBBProtoWarrantySentinel setSentinelExists:]
  -[PBBProtoWarrantySentinel setHasSentinelExists:]
  -[PBBProtoWarrantySentinel hasSentinelExists]
  -[PBBProtoWarrantySentinel setRemoveSentinel:]
  -[PBBProtoWarrantySentinel setHasRemoveSentinel:]
  -[PBBProtoWarrantySentinel hasRemoveSentinel]
  -[PBBProtoWarrantySentinel sentinelExists]
  -[PBBProtoWarrantySentinel removeSentinel]


PBBProtoGizmoActivationFailed : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  NSString *failureDescription

  // instance methods
  -[PBBProtoGizmoActivationFailed isEqual:]
  -[PBBProtoGizmoActivationFailed copyWithZone:]
  -[PBBProtoGizmoActivationFailed .cxx_destruct]
  -[PBBProtoGizmoActivationFailed dictionaryRepresentation]
  -[PBBProtoGizmoActivationFailed writeTo:]
  -[PBBProtoGizmoActivationFailed mergeFrom:]
  -[PBBProtoGizmoActivationFailed readFrom:]
  -[PBBProtoGizmoActivationFailed copyTo:]
  -[PBBProtoGizmoActivationFailed failureDescription]
  -[PBBProtoGizmoActivationFailed setFailureDescription:]


PBBProtoTellCompanionLanguageAndLocaleChangeStatus : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasStatus
 @property  double status

  // instance methods
  -[PBBProtoTellCompanionLanguageAndLocaleChangeStatus isEqual:]
  -[PBBProtoTellCompanionLanguageAndLocaleChangeStatus copyWithZone:]
  -[PBBProtoTellCompanionLanguageAndLocaleChangeStatus dictionaryRepresentation]
  -[PBBProtoTellCompanionLanguageAndLocaleChangeStatus status]
  -[PBBProtoTellCompanionLanguageAndLocaleChangeStatus writeTo:]
  -[PBBProtoTellCompanionLanguageAndLocaleChangeStatus mergeFrom:]
  -[PBBProtoTellCompanionLanguageAndLocaleChangeStatus readFrom:]
  -[PBBProtoTellCompanionLanguageAndLocaleChangeStatus copyTo:]
  -[PBBProtoTellCompanionLanguageAndLocaleChangeStatus setStatus:]
  -[PBBProtoTellCompanionLanguageAndLocaleChangeStatus setHasStatus:]
  -[PBBProtoTellCompanionLanguageAndLocaleChangeStatus hasStatus]


PBBridgeResponsePerformanceMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableString *logBuffer
 @property  NSMutableArray *measurements
 @property  NSMutableDictionary *milestones
 @property  NSMutableDictionary *macroActivities
 @property  NSArray *remoteMeasurements
 @property  NSDictionary *remoteMilestones
 @property  NSDictionary *remoteMacroActivities

  // class methods
  +[PBBridgeResponsePerformanceMonitor shareMonitor]

  // instance methods
  -[PBBridgeResponsePerformanceMonitor .cxx_destruct]
  -[PBBridgeResponsePerformanceMonitor milestones]
  -[PBBridgeResponsePerformanceMonitor measurements]
  -[PBBridgeResponsePerformanceMonitor _logMeasurements]
  -[PBBridgeResponsePerformanceMonitor _logMacroActivitiesLocal:]
  -[PBBridgeResponsePerformanceMonitor _logMilestones]
  -[PBBridgeResponsePerformanceMonitor _logLocalMeasurements:]
  -[PBBridgeResponsePerformanceMonitor beginMonitorTransaction]
  -[PBBridgeResponsePerformanceMonitor endMonitorTransaction]
  -[PBBridgeResponsePerformanceMonitor addMeasurement:timeSent:activityType:activityIdentifier:]
  -[PBBridgeResponsePerformanceMonitor addMilestone:activityType:activityIdentifier:]
  -[PBBridgeResponsePerformanceMonitor beginMacroActivity:beginTime:]
  -[PBBridgeResponsePerformanceMonitor endMacroActivity:beginTime:]
  -[PBBridgeResponsePerformanceMonitor macroActivities]
  -[PBBridgeResponsePerformanceMonitor remoteMeasurements]
  -[PBBridgeResponsePerformanceMonitor setRemoteMeasurements:]
  -[PBBridgeResponsePerformanceMonitor remoteMilestones]
  -[PBBridgeResponsePerformanceMonitor setRemoteMilestones:]
  -[PBBridgeResponsePerformanceMonitor remoteMacroActivities]
  -[PBBridgeResponsePerformanceMonitor setRemoteMacroActivities:]
  -[PBBridgeResponsePerformanceMonitor logBuffer]
  -[PBBridgeResponsePerformanceMonitor setLogBuffer:]


PBBProtoOfflineTerms : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasLicense
 @property  NSData *license
 @property  BOOL hasMultiterms
 @property  NSData *multiterms
 @property  BOOL hasWarranty
 @property  NSData *warranty
 @property  BOOL hasLanguageCode
 @property  NSString *languageCode
 @property  BOOL hasCountryCode
 @property  NSString *countryCode
 @property  NSMutableArray *appleLanguages

  // class methods
  +[PBBProtoOfflineTerms appleLanguagesType]

  // instance methods
  -[PBBProtoOfflineTerms isEqual:]
  -[PBBProtoOfflineTerms copyWithZone:]
  -[PBBProtoOfflineTerms .cxx_destruct]
  -[PBBProtoOfflineTerms languageCode]
  -[PBBProtoOfflineTerms countryCode]
  -[PBBProtoOfflineTerms dictionaryRepresentation]
  -[PBBProtoOfflineTerms writeTo:]
  -[PBBProtoOfflineTerms mergeFrom:]
  -[PBBProtoOfflineTerms readFrom:]
  -[PBBProtoOfflineTerms copyTo:]
  -[PBBProtoOfflineTerms license]
  -[PBBProtoOfflineTerms setLanguageCode:]
  -[PBBProtoOfflineTerms setCountryCode:]
  -[PBBProtoOfflineTerms hasLanguageCode]
  -[PBBProtoOfflineTerms hasCountryCode]
  -[PBBProtoOfflineTerms setWarranty:]
  -[PBBProtoOfflineTerms warranty]
  -[PBBProtoOfflineTerms addAppleLanguages:]
  -[PBBProtoOfflineTerms appleLanguagesCount]
  -[PBBProtoOfflineTerms clearAppleLanguages]
  -[PBBProtoOfflineTerms appleLanguagesAtIndex:]
  -[PBBProtoOfflineTerms appleLanguages]
  -[PBBProtoOfflineTerms setAppleLanguages:]
  -[PBBProtoOfflineTerms setLicense:]
  -[PBBProtoOfflineTerms setMultiterms:]
  -[PBBProtoOfflineTerms hasLicense]
  -[PBBProtoOfflineTerms hasMultiterms]
  -[PBBProtoOfflineTerms hasWarranty]
  -[PBBProtoOfflineTerms multiterms]


PBBProtoSetSiriEnabled : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL enabled

  // instance methods
  -[PBBProtoSetSiriEnabled isEqual:]
  -[PBBProtoSetSiriEnabled copyWithZone:]
  -[PBBProtoSetSiriEnabled enabled]
  -[PBBProtoSetSiriEnabled setEnabled:]
  -[PBBProtoSetSiriEnabled dictionaryRepresentation]
  -[PBBProtoSetSiriEnabled writeTo:]
  -[PBBProtoSetSiriEnabled mergeFrom:]
  -[PBBProtoSetSiriEnabled readFrom:]
  -[PBBProtoSetSiriEnabled copyTo:]


PBBProtoSetPasscodeRestrictions : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  NSData *restrictions
 @property  BOOL hasWristDetectionDisabled
 @property  BOOL wristDetectionDisabled

  // instance methods
  -[PBBProtoSetPasscodeRestrictions isEqual:]
  -[PBBProtoSetPasscodeRestrictions copyWithZone:]
  -[PBBProtoSetPasscodeRestrictions .cxx_destruct]
  -[PBBProtoSetPasscodeRestrictions dictionaryRepresentation]
  -[PBBProtoSetPasscodeRestrictions writeTo:]
  -[PBBProtoSetPasscodeRestrictions mergeFrom:]
  -[PBBProtoSetPasscodeRestrictions readFrom:]
  -[PBBProtoSetPasscodeRestrictions copyTo:]
  -[PBBProtoSetPasscodeRestrictions restrictions]
  -[PBBProtoSetPasscodeRestrictions setRestrictions:]
  -[PBBProtoSetPasscodeRestrictions setWristDetectionDisabled:]
  -[PBBProtoSetPasscodeRestrictions setHasWristDetectionDisabled:]
  -[PBBProtoSetPasscodeRestrictions hasWristDetectionDisabled]
  -[PBBProtoSetPasscodeRestrictions wristDetectionDisabled]


PBBProtoSetRegion : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  NSString *region

  // instance methods
  -[PBBProtoSetRegion isEqual:]
  -[PBBProtoSetRegion copyWithZone:]
  -[PBBProtoSetRegion .cxx_destruct]
  -[PBBProtoSetRegion dictionaryRepresentation]
  -[PBBProtoSetRegion writeTo:]
  -[PBBProtoSetRegion region]
  -[PBBProtoSetRegion mergeFrom:]
  -[PBBProtoSetRegion readFrom:]
  -[PBBProtoSetRegion copyTo:]
  -[PBBProtoSetRegion setRegion:]


PBBProtoSendBuysOnWatchCredentials : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasUsername
 @property  NSString *username
 @property  BOOL hasPassword
 @property  NSString *password

  // instance methods
  -[PBBProtoSendBuysOnWatchCredentials isEqual:]
  -[PBBProtoSendBuysOnWatchCredentials copyWithZone:]
  -[PBBProtoSendBuysOnWatchCredentials password]
  -[PBBProtoSendBuysOnWatchCredentials .cxx_destruct]
  -[PBBProtoSendBuysOnWatchCredentials dictionaryRepresentation]
  -[PBBProtoSendBuysOnWatchCredentials setPassword:]
  -[PBBProtoSendBuysOnWatchCredentials writeTo:]
  -[PBBProtoSendBuysOnWatchCredentials mergeFrom:]
  -[PBBProtoSendBuysOnWatchCredentials readFrom:]
  -[PBBProtoSendBuysOnWatchCredentials copyTo:]
  -[PBBProtoSendBuysOnWatchCredentials username]
  -[PBBProtoSendBuysOnWatchCredentials setUsername:]
  -[PBBProtoSendBuysOnWatchCredentials hasUsername]
  -[PBBProtoSendBuysOnWatchCredentials hasPassword]


PBBProtoRemoteActivationFailureReport : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasActivationError
 @property  NSData *activationError

  // instance methods
  -[PBBProtoRemoteActivationFailureReport isEqual:]
  -[PBBProtoRemoteActivationFailureReport copyWithZone:]
  -[PBBProtoRemoteActivationFailureReport .cxx_destruct]
  -[PBBProtoRemoteActivationFailureReport dictionaryRepresentation]
  -[PBBProtoRemoteActivationFailureReport writeTo:]
  -[PBBProtoRemoteActivationFailureReport mergeFrom:]
  -[PBBProtoRemoteActivationFailureReport readFrom:]
  -[PBBProtoRemoteActivationFailureReport copyTo:]
  -[PBBProtoRemoteActivationFailureReport activationError]
  -[PBBProtoRemoteActivationFailureReport setActivationError:]
  -[PBBProtoRemoteActivationFailureReport hasActivationError]


PBBridgeProgressView : UIView /System/Library/PrivateFrameworks/AggregateDictionary.framework/AggregateDictionary
 @property  UIImageView *appleLogo
 @property  unsigned long style
 @property  unsigned long version
 @property  double currentProgress

  // instance methods
  -[PBBridgeProgressView .cxx_destruct]
  -[PBBridgeProgressView version]
  -[PBBridgeProgressView _size]
  -[PBBridgeProgressView setVersion:]
  -[PBBridgeProgressView currentProgress]
  -[PBBridgeProgressView style]
  -[PBBridgeProgressView setStyle:]
  -[PBBridgeProgressView sizeThatFits:]
  -[PBBridgeProgressView layoutSubviews]
  -[PBBridgeProgressView initWithStyle:]
  -[PBBridgeProgressView drawRect:]
  -[PBBridgeProgressView setCurrentProgress:]
  -[PBBridgeProgressView _tickLength]
  -[PBBridgeProgressView initWithStyle:andVersion:]
  -[PBBridgeProgressView appleLogo]
  -[PBBridgeProgressView setAppleLogo:]


PBBridgeAkashiReporter : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PBBridgeAkashiReporter descriptionForSetUpType:]
  +[PBBridgeAkashiReporter incrementSetUpEvent:]


PBBProtoHandshakeResponse : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  unsigned int position
 @property  unsigned int version
 @property  unsigned int state

  // instance methods
  -[PBBProtoHandshakeResponse isEqual:]
  -[PBBProtoHandshakeResponse copyWithZone:]
  -[PBBProtoHandshakeResponse version]
  -[PBBProtoHandshakeResponse dictionaryRepresentation]
  -[PBBProtoHandshakeResponse setVersion:]
  -[PBBProtoHandshakeResponse state]
  -[PBBProtoHandshakeResponse position]
  -[PBBProtoHandshakeResponse setState:]
  -[PBBProtoHandshakeResponse writeTo:]
  -[PBBProtoHandshakeResponse mergeFrom:]
  -[PBBProtoHandshakeResponse readFrom:]
  -[PBBProtoHandshakeResponse copyTo:]
  -[PBBProtoHandshakeResponse setPosition:]


PBBridgeIDSReachabilityStatusObject : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSUUID *idsDeviceID
 @property  unsigned long reachability

  // class methods
  +[PBBridgeIDSReachabilityStatusObject connectivityString:]

  // instance methods
  -[PBBridgeIDSReachabilityStatusObject isEqual:]
  -[PBBridgeIDSReachabilityStatusObject copyWithZone:]
  -[PBBridgeIDSReachabilityStatusObject .cxx_destruct]
  -[PBBridgeIDSReachabilityStatusObject reachability]
  -[PBBridgeIDSReachabilityStatusObject setReachability:]
  -[PBBridgeIDSReachabilityStatusObject idsDeviceID]
  -[PBBridgeIDSReachabilityStatusObject setIdsDeviceID:]


PBBridgeIDSReachabilityObserverWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  <PBBridgeIDSReachabilityObserver> *observer

  // instance methods
  -[PBBridgeIDSReachabilityObserverWrapper observer]
  -[PBBridgeIDSReachabilityObserverWrapper .cxx_destruct]
  -[PBBridgeIDSReachabilityObserverWrapper setObserver:]
  -[PBBridgeIDSReachabilityObserverWrapper fireReachability:deviceStatus:devices:]


PBBridgeIDSReachability : NSObject /usr/lib/libSystem.B.dylib <IDSServiceDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBBridgeIDSReachability sharedInstance]
  +[PBBridgeIDSReachability deviceStatusFromIDSDevices:nrDevices:]
  +[PBBridgeIDSReachability nrDevices]

  // instance methods
  -[PBBridgeIDSReachability init]
  -[PBBridgeIDSReachability .cxx_destruct]
  -[PBBridgeIDSReachability addObserver:]
  -[PBBridgeIDSReachability removeObserver:]
  -[PBBridgeIDSReachability service:activeAccountsChanged:]
  -[PBBridgeIDSReachability service:devicesChanged:]
  -[PBBridgeIDSReachability service:nearbyDevicesChanged:]
  -[PBBridgeIDSReachability service:connectedDevicesChanged:]
  -[PBBridgeIDSReachability _processDevices:]
  -[PBBridgeIDSReachability getDeviceStatusChangeFromIDSDevices:nrDevices:]
  -[PBBridgeIDSReachability reachabilityForDevice:]
  -[PBBridgeIDSReachability service:linkedDevicesChanged:]


PBBGatewayManager : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long repeatedCallsEnabled
 @property  BBSettingsGateway *settingsGateway
 @property  NSString *allowedGroupName
 @property  unsigned long doNotDisturbPrivilegedSenderType
 @property  NSString *doNotDisturbPrivilegedSenderTypeGroupIdentifier
 @property  BOOL isScheduled
 @property  NSDateComponents *dndFromComponents
 @property  NSDateComponents *dndToComponents
 @property  NSArray *bbSections

  // class methods
  +[PBBGatewayManager sharedManager]
  +[PBBGatewayManager dateComponentsFromDNDScheduleTime:]

  // instance methods
  -[PBBGatewayManager init]
  -[PBBGatewayManager dealloc]
  -[PBBGatewayManager .cxx_destruct]
  -[PBBGatewayManager isScheduled]
  -[PBBGatewayManager loadBBSections]
  -[PBBGatewayManager bbSections]
  -[PBBGatewayManager settingsGateway]
  -[PBBGatewayManager setSettingsGateway:]
  -[PBBGatewayManager loadDNDState]
  -[PBBGatewayManager repeatedCalls]
  -[PBBGatewayManager setBbSections:]
  -[PBBGatewayManager repeatedCallsEnabled]
  -[PBBGatewayManager setRepeatedCallsEnabled:]
  -[PBBGatewayManager allowedGroupName]
  -[PBBGatewayManager doNotDisturbPrivilegedSenderType]
  -[PBBGatewayManager doNotDisturbPrivilegedSenderTypeGroupIdentifier]
  -[PBBGatewayManager dndFromComponents]
  -[PBBGatewayManager dndToComponents]


PBBProtoBeganWaitingForPresentationOfActivationEvent : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
  // instance methods
  -[PBBProtoBeganWaitingForPresentationOfActivationEvent isEqual:]
  -[PBBProtoBeganWaitingForPresentationOfActivationEvent copyWithZone:]
  -[PBBProtoBeganWaitingForPresentationOfActivationEvent dictionaryRepresentation]
  -[PBBProtoBeganWaitingForPresentationOfActivationEvent writeTo:]
  -[PBBProtoBeganWaitingForPresentationOfActivationEvent mergeFrom:]
  -[PBBProtoBeganWaitingForPresentationOfActivationEvent readFrom:]
  -[PBBProtoBeganWaitingForPresentationOfActivationEvent copyTo:]


PBBProtoDemoWatchDidIngestWirelessCredentials : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
  // instance methods
  -[PBBProtoDemoWatchDidIngestWirelessCredentials isEqual:]
  -[PBBProtoDemoWatchDidIngestWirelessCredentials copyWithZone:]
  -[PBBProtoDemoWatchDidIngestWirelessCredentials dictionaryRepresentation]
  -[PBBProtoDemoWatchDidIngestWirelessCredentials writeTo:]
  -[PBBProtoDemoWatchDidIngestWirelessCredentials mergeFrom:]
  -[PBBProtoDemoWatchDidIngestWirelessCredentials readFrom:]
  -[PBBProtoDemoWatchDidIngestWirelessCredentials copyTo:]


PBBridgeGizmoController : PBBridgeIDSServiceDelegate <IDSServiceDelegate, PBBridgeGizmoProtocol>
 @property  unsigned short activationState
 @property  NSTimer *activationTimeout
 @property  NSString *internalLastSendMessageID
 @property  @? updateLanguageCompletion
 @property  @? updateRegionCompletion
 @property  @? sessionCompletion
 @property  @? activationCompletion
 @property  @? siriStateCompletion
 @property  @? enableSiriCompletion
 @property  <PBBridgeConnectionDelegate> *delegate
 @property  NSString *languageIdentifer
 @property  NSString *regionIdentifer
 @property  BOOL canBeginActivation
 @property  BOOL readyToCreatePasscode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBBridgeGizmoController prepareOfflineTermsResponse:]
  +[PBBridgeGizmoController warrantyFilePathForLanguageCode:countryCode:]

  // instance methods
  -[PBBridgeGizmoController init]
  -[PBBridgeGizmoController delegate]
  -[PBBridgeGizmoController setDelegate:]
  -[PBBridgeGizmoController .cxx_destruct]
  -[PBBridgeGizmoController setDeviceName:]
  -[PBBridgeGizmoController activationState]
  -[PBBridgeGizmoController serviceIdentifier]
  -[PBBridgeGizmoController setDiagnosticsEnabled:]
  -[PBBridgeGizmoController setSiriEnabled:]
  -[PBBridgeGizmoController setActivationState:]
  -[PBBridgeGizmoController sessionCompletion]
  -[PBBridgeGizmoController setSessionCompletion:]
  -[PBBridgeGizmoController setLocationEnabled:]
  -[PBBridgeGizmoController companionBecameAvailableWantsConfirmation:]
  -[PBBridgeGizmoController pushControllerType:]
  -[PBBridgeGizmoController popToControllerType:]
  -[PBBridgeGizmoController handleActivationData:]
  -[PBBridgeGizmoController setCompanionLanguage:]
  -[PBBridgeGizmoController setCompanionRegion:]
  -[PBBridgeGizmoController gotSiriState:]
  -[PBBridgeGizmoController setCanBeginActivating:]
  -[PBBridgeGizmoController waitForDynamicActivationEventPresentation:]
  -[PBBridgeGizmoController waitForUserResponseToDynamicEventPresentation:]
  -[PBBridgeGizmoController retryActivation:]
  -[PBBridgeGizmoController handleWarrantySentinelRequest:]
  -[PBBridgeGizmoController handleOfflineTermsRequest:]
  -[PBBridgeGizmoController showLockedOnAnimation:]
  -[PBBridgeGizmoController setCrownOrientationRight:]
  -[PBBridgeGizmoController setPasscodeRestrictions:]
  -[PBBridgeGizmoController updateSynchProgress:]
  -[PBBridgeGizmoController doInitialSyncPrep:]
  -[PBBridgeGizmoController remoteRequestToKeepAlive:]
  -[PBBridgeGizmoController companionDidSendLanguageAndLocale:]
  -[PBBridgeGizmoController companionDidSendWirelessCredentials:]
  -[PBBridgeGizmoController prepareForForcedWatchSU:]
  -[PBBridgeGizmoController fetchTermsAndConditions:]
  -[PBBridgeGizmoController companionTermsResponse:]
  -[PBBridgeGizmoController handleRenameDeviceRequest:]
  -[PBBridgeGizmoController handleBuysOnWatchIngestion:]
  -[PBBridgeGizmoController endSetupTransaction]
  -[PBBridgeGizmoController _sendRemoteCommandWithMessageID:withArguments:]
  -[PBBridgeGizmoController invalidateTimeoutTimer]
  -[PBBridgeGizmoController _recordThatWatchFinishedActivating]
  -[PBBridgeGizmoController refreshTimeoutTimer]
  -[PBBridgeGizmoController _getActivationData:forRequest:withCompletion:]
  -[PBBridgeGizmoController tellCompanionGizmoFinishedActivating]
  -[PBBridgeGizmoController activationTimeout:]
  -[PBBridgeGizmoController _sendResponseToMessage:withResponseMessageID:withArguments:]
  -[PBBridgeGizmoController transportBecameReachable]
  -[PBBridgeGizmoController transportBecameUnreachable]
  -[PBBridgeGizmoController enabledSiri:]
  -[PBBridgeGizmoController setupServiceMessageSelectorMappings]
  -[PBBridgeGizmoController updateLanguageIdentifierWithCompletion:]
  -[PBBridgeGizmoController updateRegionIdentifierWithCompletion:]
  -[PBBridgeGizmoController tellCompanionGizmoBeganActivating]
  -[PBBridgeGizmoController tellCompanionGizmoFinishedActivatingAsDeKOTA]
  -[PBBridgeGizmoController tellCompanionGizmoFailedActivating:]
  -[PBBridgeGizmoController getSiriStateWithCompletion:]
  -[PBBridgeGizmoController enableSiriForGizmoWithCompletion:]
  -[PBBridgeGizmoController getActivationDataAndHeadersForRequest:withCompletion:]
  -[PBBridgeGizmoController getSessionDataForRequest:withCompletion:]
  -[PBBridgeGizmoController getActivationDataForRequest:withCompletion:]
  -[PBBridgeGizmoController reportRemoteActivationFailureError:]
  -[PBBridgeGizmoController tellCompanionThatLanguageAndLanguageCompletedWithStatus:]
  -[PBBridgeGizmoController customDescriptionOfMessageType:]
  -[PBBridgeGizmoController tellCompanionThatGizmoFinishedSettingPasscode:isLong:]
  -[PBBridgeGizmoController tellCompanionThatGizmoFailedToCreatePasscode:]
  -[PBBridgeGizmoController tellCompanionThatGizmoFinishedChangingPasscode:isLong:]
  -[PBBridgeGizmoController tellCompanionThatGizmoStartedUnlockPairing]
  -[PBBridgeGizmoController tellCompanionThatGizmoFinishedUnlockPairing:]
  -[PBBridgeGizmoController beganAwaitingAbilityToActivate]
  -[PBBridgeGizmoController sendCompanionPerformanceResults]
  -[PBBridgeGizmoController languageIdentifer]
  -[PBBridgeGizmoController regionIdentifer]
  -[PBBridgeGizmoController canBeginActivation]
  -[PBBridgeGizmoController readyToCreatePasscode]
  -[PBBridgeGizmoController activationTimeout]
  -[PBBridgeGizmoController setActivationTimeout:]
  -[PBBridgeGizmoController internalLastSendMessageID]
  -[PBBridgeGizmoController setInternalLastSendMessageID:]
  -[PBBridgeGizmoController updateLanguageCompletion]
  -[PBBridgeGizmoController setUpdateLanguageCompletion:]
  -[PBBridgeGizmoController updateRegionCompletion]
  -[PBBridgeGizmoController setUpdateRegionCompletion:]
  -[PBBridgeGizmoController activationCompletion]
  -[PBBridgeGizmoController setActivationCompletion:]
  -[PBBridgeGizmoController siriStateCompletion]
  -[PBBridgeGizmoController setSiriStateCompletion:]
  -[PBBridgeGizmoController enableSiriCompletion]
  -[PBBridgeGizmoController setEnableSiriCompletion:]


PBBProtoTellGizmoToSetCrownOrientation : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasCrownOrientationRight
 @property  BOOL crownOrientationRight

  // instance methods
  -[PBBProtoTellGizmoToSetCrownOrientation isEqual:]
  -[PBBProtoTellGizmoToSetCrownOrientation copyWithZone:]
  -[PBBProtoTellGizmoToSetCrownOrientation dictionaryRepresentation]
  -[PBBProtoTellGizmoToSetCrownOrientation writeTo:]
  -[PBBProtoTellGizmoToSetCrownOrientation mergeFrom:]
  -[PBBProtoTellGizmoToSetCrownOrientation readFrom:]
  -[PBBProtoTellGizmoToSetCrownOrientation copyTo:]
  -[PBBProtoTellGizmoToSetCrownOrientation setCrownOrientationRight:]
  -[PBBProtoTellGizmoToSetCrownOrientation crownOrientationRight]
  -[PBBProtoTellGizmoToSetCrownOrientation setHasCrownOrientationRight:]
  -[PBBProtoTellGizmoToSetCrownOrientation hasCrownOrientationRight]


PBBridgeIDSMessageInstance : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *sentAbsoluteTime
 @property  unsigned short typeID
 @property  long long retryCount
 @property  double retryInterval
 @property  @? retryAction

  // class methods
  +[PBBridgeIDSMessageInstance newMessageInstanceOfType:retryCount:retryInterval:withAction:]

  // instance methods
  -[PBBridgeIDSMessageInstance init]
  -[PBBridgeIDSMessageInstance .cxx_destruct]
  -[PBBridgeIDSMessageInstance retryCount]
  -[PBBridgeIDSMessageInstance setRetryCount:]
  -[PBBridgeIDSMessageInstance retryAction]
  -[PBBridgeIDSMessageInstance retryInterval]
  -[PBBridgeIDSMessageInstance setRetryInterval:]
  -[PBBridgeIDSMessageInstance setSentAbsoluteTime:]
  -[PBBridgeIDSMessageInstance setTypeID:]
  -[PBBridgeIDSMessageInstance setRetryAction:]
  -[PBBridgeIDSMessageInstance sentAbsoluteTime]
  -[PBBridgeIDSMessageInstance typeID]


PBBridgeIDSServiceDelegate : NSObject /usr/lib/libSystem.B.dylib <IDSServiceDelegate>
 @property  NSTimer *transportReachabilityTimer
 @property  NSMutableDictionary *inflightMessages
 @property  NSMutableDictionary *pendingMessages
 @property  BKSProcessAssertion *suspendAssertion
 @property  IDSService *service
 @property  BOOL shouldSuppressTransportReachabilityTimeout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PBBridgeIDSServiceDelegate .cxx_destruct]
  -[PBBridgeIDSServiceDelegate service]
  -[PBBridgeIDSServiceDelegate setService:]
  -[PBBridgeIDSServiceDelegate serviceIdentifier]
  -[PBBridgeIDSServiceDelegate service:account:incomingUnhandledProtobuf:fromID:context:]
  -[PBBridgeIDSServiceDelegate service:activeAccountsChanged:]
  -[PBBridgeIDSServiceDelegate service:devicesChanged:]
  -[PBBridgeIDSServiceDelegate service:nearbyDevicesChanged:]
  -[PBBridgeIDSServiceDelegate service:account:identifier:didSendWithSuccess:error:]
  -[PBBridgeIDSServiceDelegate pendingMessages]
  -[PBBridgeIDSServiceDelegate service:linkedDevicesChanged:]
  -[PBBridgeIDSServiceDelegate endSetupTransaction]
  -[PBBridgeIDSServiceDelegate sendProtoBuf:service:priority:responseIdentifier:expectsResponse:retryCount:retryInterval:]
  -[PBBridgeIDSServiceDelegate transportBecameReachable]
  -[PBBridgeIDSServiceDelegate transportBecameUnreachable]
  -[PBBridgeIDSServiceDelegate setupServiceMessageSelectorMappings]
  -[PBBridgeIDSServiceDelegate customDescriptionOfMessageType:]
  -[PBBridgeIDSServiceDelegate clearPowerAssertionIfNotPairing:]
  -[PBBridgeIDSServiceDelegate _sendProtoBuf:service:priority:responseIdentifier:expectsResponse:]
  -[PBBridgeIDSServiceDelegate startReachabilityTimer]
  -[PBBridgeIDSServiceDelegate cancelReachabilityTimer]
  -[PBBridgeIDSServiceDelegate checkReachability]
  -[PBBridgeIDSServiceDelegate connectionStateWithDevices:accounts:]
  -[PBBridgeIDSServiceDelegate reportConnectionForService:accounts:devices:]
  -[PBBridgeIDSServiceDelegate updateConnectivityTimer:]
  -[PBBridgeIDSServiceDelegate beginSetupTransaction]
  -[PBBridgeIDSServiceDelegate resetTransportReachabilityTimer]
  -[PBBridgeIDSServiceDelegate setShouldSuppressTransportReachabilityTimeout:]
  -[PBBridgeIDSServiceDelegate shouldSuppressTransportReachabilityTimeout]
  -[PBBridgeIDSServiceDelegate transportReachabilityTimer]
  -[PBBridgeIDSServiceDelegate setTransportReachabilityTimer:]
  -[PBBridgeIDSServiceDelegate inflightMessages]
  -[PBBridgeIDSServiceDelegate setInflightMessages:]
  -[PBBridgeIDSServiceDelegate setPendingMessages:]
  -[PBBridgeIDSServiceDelegate suspendAssertion]
  -[PBBridgeIDSServiceDelegate setSuspendAssertion:]


PBBProtoPerformanceResult : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasActivityType
 @property  NSString *activityType
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasTimeDelta
 @property  double timeDelta
 @property  BOOL hasTimeStarted
 @property  double timeStarted
 @property  BOOL hasTimeEnded
 @property  double timeEnded

  // class methods
  +[PBBProtoPerformanceResult initialize]

  // instance methods
  -[PBBProtoPerformanceResult isEqual:]
  -[PBBProtoPerformanceResult copyWithZone:]
  -[PBBProtoPerformanceResult .cxx_destruct]
  -[PBBProtoPerformanceResult identifier]
  -[PBBProtoPerformanceResult setIdentifier:]
  -[PBBProtoPerformanceResult dictionaryRepresentation]
  -[PBBProtoPerformanceResult activityType]
  -[PBBProtoPerformanceResult writeTo:]
  -[PBBProtoPerformanceResult mergeFrom:]
  -[PBBProtoPerformanceResult readFrom:]
  -[PBBProtoPerformanceResult copyTo:]
  -[PBBProtoPerformanceResult setActivityType:]
  -[PBBProtoPerformanceResult hasIdentifier]
  -[PBBProtoPerformanceResult detailedDescription]
  -[PBBProtoPerformanceResult hasActivityType]
  -[PBBProtoPerformanceResult timeEnded]
  -[PBBProtoPerformanceResult timeStarted]
  -[PBBProtoPerformanceResult timeDelta]
  -[PBBProtoPerformanceResult setTimeDelta:]
  -[PBBProtoPerformanceResult setTimeStarted:]
  -[PBBProtoPerformanceResult setTimeEnded:]
  -[PBBProtoPerformanceResult setHasTimeDelta:]
  -[PBBProtoPerformanceResult hasTimeDelta]
  -[PBBProtoPerformanceResult setHasTimeStarted:]
  -[PBBProtoPerformanceResult hasTimeStarted]
  -[PBBProtoPerformanceResult setHasTimeEnded:]
  -[PBBProtoPerformanceResult hasTimeEnded]


PBBProtoPrepareWatchForInitialSyncResponse : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
  // instance methods
  -[PBBProtoPrepareWatchForInitialSyncResponse isEqual:]
  -[PBBProtoPrepareWatchForInitialSyncResponse copyWithZone:]
  -[PBBProtoPrepareWatchForInitialSyncResponse dictionaryRepresentation]
  -[PBBProtoPrepareWatchForInitialSyncResponse writeTo:]
  -[PBBProtoPrepareWatchForInitialSyncResponse mergeFrom:]
  -[PBBProtoPrepareWatchForInitialSyncResponse readFrom:]
  -[PBBProtoPrepareWatchForInitialSyncResponse copyTo:]


PBBProtoTransferPerformanceResults : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  NSMutableArray *milestones
 @property  NSMutableArray *measures
 @property  NSMutableArray *macroActivites

  // class methods
  +[PBBProtoTransferPerformanceResults milestonesType]
  +[PBBProtoTransferPerformanceResults measuresType]
  +[PBBProtoTransferPerformanceResults macroActivitesType]

  // instance methods
  -[PBBProtoTransferPerformanceResults isEqual:]
  -[PBBProtoTransferPerformanceResults copyWithZone:]
  -[PBBProtoTransferPerformanceResults .cxx_destruct]
  -[PBBProtoTransferPerformanceResults dictionaryRepresentation]
  -[PBBProtoTransferPerformanceResults writeTo:]
  -[PBBProtoTransferPerformanceResults mergeFrom:]
  -[PBBProtoTransferPerformanceResults readFrom:]
  -[PBBProtoTransferPerformanceResults copyTo:]
  -[PBBProtoTransferPerformanceResults addMilestones:]
  -[PBBProtoTransferPerformanceResults milestones]
  -[PBBProtoTransferPerformanceResults setMilestones:]
  -[PBBProtoTransferPerformanceResults setMacroActivites:]
  -[PBBProtoTransferPerformanceResults setMeasures:]
  -[PBBProtoTransferPerformanceResults addMeasures:]
  -[PBBProtoTransferPerformanceResults addMacroActivites:]
  -[PBBProtoTransferPerformanceResults milestonesCount]
  -[PBBProtoTransferPerformanceResults clearMilestones]
  -[PBBProtoTransferPerformanceResults milestonesAtIndex:]
  -[PBBProtoTransferPerformanceResults measuresCount]
  -[PBBProtoTransferPerformanceResults clearMeasures]
  -[PBBProtoTransferPerformanceResults measuresAtIndex:]
  -[PBBProtoTransferPerformanceResults macroActivitesCount]
  -[PBBProtoTransferPerformanceResults clearMacroActivites]
  -[PBBProtoTransferPerformanceResults macroActivitesAtIndex:]
  -[PBBProtoTransferPerformanceResults measures]
  -[PBBProtoTransferPerformanceResults macroActivites]


PBBridgeCompanionController : PBBridgeIDSServiceDelegate <IDSServiceDelegate, NSURLConnectionDelegate, RUILoaderDelegate, PBBridgeCompanionProtocol>
 @property  NSURLConnection *activationConnection
 @property  NSMutableURLRequest *activationRequest
 @property  NSMutableData *activationData
 @property  RUILoader *ruiLoader
 @property  NSString *contentType
 @property  NSDictionary *allHeaders
 @property  BOOL nonSilentActivation
 @property  BOOL connectionFailed
 @property  BOOL awaitingCustomResponse
 @property  int activationState
 @property  BOOL isEstablishingPairing
 @property  unsigned short granularActivationState
 @property  NSTimer *activationTimeout
 @property  NSString *internalLastSendMessageID
 @property  BOOL allowAnyHTTPSCertificate
 @property  NSString *remoteActivationUserAgent
 @property  @? lockedOnAnimationCompletion
 @property  @? initialSyncPrepCompletion
 @property  @? languageLocaleCompletion
 @property  @? prepareWatchForForcedSUCompletion
 @property  @? buysOnWatchCredentialsIngestedCompletion
 @property  BOOL sentSessionRequest
 @property  BOOL sentActivationRequest
 @property  NSMutableDictionary *reportMapping
 @property  BOOL passcodeSet
 @property  BOOL selectedPairedUnlock
 @property  int activationRetries
 @property  RUIStyle *remoteUIStyle
 @property  <RUILoaderDelegate> *ruiDelegate
 @property  <PBBridgeConnectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PBBridgeCompanionController iCloudFirstName:lastName:]
  +[PBBridgeCompanionController meCardFirstName:lastName:]
  +[PBBridgeCompanionController displayNameWithFirstName:lastName:]

  // instance methods
  -[PBBridgeCompanionController init]
  -[PBBridgeCompanionController delegate]
  -[PBBridgeCompanionController setDelegate:]
  -[PBBridgeCompanionController .cxx_destruct]
  -[PBBridgeCompanionController contentType]
  -[PBBridgeCompanionController setContentType:]
  -[PBBridgeCompanionController connection:didFailWithError:]
  -[PBBridgeCompanionController connection:willSendRequest:redirectResponse:]
  -[PBBridgeCompanionController connection:didReceiveResponse:]
  -[PBBridgeCompanionController connection:didReceiveData:]
  -[PBBridgeCompanionController connectionDidFinishLoading:]
  -[PBBridgeCompanionController _cleanup]
  -[PBBridgeCompanionController activationState]
  -[PBBridgeCompanionController serviceIdentifier]
  -[PBBridgeCompanionController viewControllerForAlertPresentation]
  -[PBBridgeCompanionController loader:receivedObjectModel:actionSignal:]
  -[PBBridgeCompanionController loader:didFailWithError:]
  -[PBBridgeCompanionController loader:didReceiveHTTPResponse:]
  -[PBBridgeCompanionController objectModel:pressedButton:attributes:]
  -[PBBridgeCompanionController remoteUIStyle]
  -[PBBridgeCompanionController setRemoteUIStyle:]
  -[PBBridgeCompanionController activationData]
  -[PBBridgeCompanionController setActivationData:]
  -[PBBridgeCompanionController setPasscodeSet:]
  -[PBBridgeCompanionController setActivationState:]
  -[PBBridgeCompanionController endSetupTransaction]
  -[PBBridgeCompanionController _sendRemoteCommandWithMessageID:withArguments:]
  -[PBBridgeCompanionController invalidateTimeoutTimer]
  -[PBBridgeCompanionController refreshTimeoutTimer]
  -[PBBridgeCompanionController activationTimeout:]
  -[PBBridgeCompanionController _sendResponseToMessage:withResponseMessageID:withArguments:]
  -[PBBridgeCompanionController transportBecameReachable]
  -[PBBridgeCompanionController transportBecameUnreachable]
  -[PBBridgeCompanionController setupServiceMessageSelectorMappings]
  -[PBBridgeCompanionController customDescriptionOfMessageType:]
  -[PBBridgeCompanionController activationTimeout]
  -[PBBridgeCompanionController setActivationTimeout:]
  -[PBBridgeCompanionController internalLastSendMessageID]
  -[PBBridgeCompanionController setInternalLastSendMessageID:]
  -[PBBridgeCompanionController beginSetupTransaction]
  -[PBBridgeCompanionController gizmoBecameAvailableWantsConfirmation:]
  -[PBBridgeCompanionController sendProxyActivationRequest:]
  -[PBBridgeCompanionController gizmoDidBeginActivating:]
  -[PBBridgeCompanionController gizmoDidFinishActivating:]
  -[PBBridgeCompanionController getCompanionLanguage:]
  -[PBBridgeCompanionController getCompanionRegion:]
  -[PBBridgeCompanionController gizmoDidEndPasscodeCreation:]
  -[PBBridgeCompanionController gizmoDidEndPasscodeChange:]
  -[PBBridgeCompanionController gizmoDidBeginUnlockPairing:]
  -[PBBridgeCompanionController gizmoDidEndUnlockPairing:]
  -[PBBridgeCompanionController getSiriState:]
  -[PBBridgeCompanionController gizmoActivationFailed:]
  -[PBBridgeCompanionController handlePerformanceResults:]
  -[PBBridgeCompanionController handleWarrantySentinelResponse:]
  -[PBBridgeCompanionController handleOfflineTermsResponse:]
  -[PBBridgeCompanionController gizmoFailedToCreatePasscode:]
  -[PBBridgeCompanionController watchDidPrepareForInitialSync:]
  -[PBBridgeCompanionController watchDidRespondWithLanguageAndLocaleStatus:]
  -[PBBridgeCompanionController watchDidIngestWirelessCredentials:]
  -[PBBridgeCompanionController watchDidPrepareForForcedSU:]
  -[PBBridgeCompanionController handleRemoteActivationDetails:]
  -[PBBridgeCompanionController offsetEventTime]
  -[PBBridgeCompanionController setReporter:forConnection:]
  -[PBBridgeCompanionController _dumpActivationResquests]
  -[PBBridgeCompanionController _connectionWithRequest:]
  -[PBBridgeCompanionController reporterForConnection:]
  -[PBBridgeCompanionController _testActivationResponseType]
  -[PBBridgeCompanionController tellGizmoToBeginActivation]
  -[PBBridgeCompanionController currentNetworks:]
  -[PBBridgeCompanionController enableSiriForGizmo:]
  -[PBBridgeCompanionController tellWatchLanguagesAndLocaleWithCompletion:]
  -[PBBridgeCompanionController beganWaitingForPresentationOfActivationEvent]
  -[PBBridgeCompanionController beganWaitingForUserResponseToActivationEvent]
  -[PBBridgeCompanionController sendProxyActivationWithCustomRequest:]
  -[PBBridgeCompanionController sendGizmoPasscodeRestrictions]
  -[PBBridgeCompanionController tellGizmoToSetDiagnosticsEnabled:]
  -[PBBridgeCompanionController tellGizmoToSetLocationEnabled:]
  -[PBBridgeCompanionController tellWatchToSetSiriEnabled:]
  -[PBBridgeCompanionController tellGizmoToPushControllerType:]
  -[PBBridgeCompanionController tellGizmoToPopToControllerType:]
  -[PBBridgeCompanionController tellGizmoToShowLockedOnAnimationTimeToFlash:animationCompletion:]
  -[PBBridgeCompanionController tellGizmoToSeCrownOrientationRight:]
  -[PBBridgeCompanionController tellGizmoToUpdateSyncProgressTo:withState:]
  -[PBBridgeCompanionController startEstablishingPairing]
  -[PBBridgeCompanionController tellGizmoToRetryActivation]
  -[PBBridgeCompanionController tellGizmoToKeepAliveForActivationEvent]
  -[PBBridgeCompanionController queryGizmoForShowWarrantySentinelAndRestoreDeviceName:]
  -[PBBridgeCompanionController tellGizmoToDeleteWarrantySentinel]
  -[PBBridgeCompanionController tellGizmoToPrepareForInitialSyncWithCompletion:]
  -[PBBridgeCompanionController queryGizmoForOfflineTerms]
  -[PBBridgeCompanionController tellWatchToChangeDeviceNameFor:]
  -[PBBridgeCompanionController sendDemoWatchWirelessCredentials]
  -[PBBridgeCompanionController currentWiFiNetworkName]
  -[PBBridgeCompanionController tellWatchToPrepareForForcedSUWithCompletion:]
  -[PBBridgeCompanionController sendBuysOnWatchUsername:andPassword:withCompletion:]
  -[PBBridgeCompanionController ruiDelegate]
  -[PBBridgeCompanionController setRuiDelegate:]
  -[PBBridgeCompanionController activationConnection]
  -[PBBridgeCompanionController setActivationConnection:]
  -[PBBridgeCompanionController activationRequest]
  -[PBBridgeCompanionController setActivationRequest:]
  -[PBBridgeCompanionController ruiLoader]
  -[PBBridgeCompanionController setRuiLoader:]
  -[PBBridgeCompanionController allHeaders]
  -[PBBridgeCompanionController setAllHeaders:]
  -[PBBridgeCompanionController nonSilentActivation]
  -[PBBridgeCompanionController setNonSilentActivation:]
  -[PBBridgeCompanionController connectionFailed]
  -[PBBridgeCompanionController setConnectionFailed:]
  -[PBBridgeCompanionController awaitingCustomResponse]
  -[PBBridgeCompanionController setAwaitingCustomResponse:]
  -[PBBridgeCompanionController isEstablishingPairing]
  -[PBBridgeCompanionController setIsEstablishingPairing:]
  -[PBBridgeCompanionController granularActivationState]
  -[PBBridgeCompanionController setGranularActivationState:]
  -[PBBridgeCompanionController allowAnyHTTPSCertificate]
  -[PBBridgeCompanionController setAllowAnyHTTPSCertificate:]
  -[PBBridgeCompanionController remoteActivationUserAgent]
  -[PBBridgeCompanionController setRemoteActivationUserAgent:]
  -[PBBridgeCompanionController lockedOnAnimationCompletion]
  -[PBBridgeCompanionController setLockedOnAnimationCompletion:]
  -[PBBridgeCompanionController initialSyncPrepCompletion]
  -[PBBridgeCompanionController setInitialSyncPrepCompletion:]
  -[PBBridgeCompanionController languageLocaleCompletion]
  -[PBBridgeCompanionController setLanguageLocaleCompletion:]
  -[PBBridgeCompanionController prepareWatchForForcedSUCompletion]
  -[PBBridgeCompanionController setPrepareWatchForForcedSUCompletion:]
  -[PBBridgeCompanionController buysOnWatchCredentialsIngestedCompletion]
  -[PBBridgeCompanionController setBuysOnWatchCredentialsIngestedCompletion:]
  -[PBBridgeCompanionController sentSessionRequest]
  -[PBBridgeCompanionController setSentSessionRequest:]
  -[PBBridgeCompanionController sentActivationRequest]
  -[PBBridgeCompanionController setSentActivationRequest:]
  -[PBBridgeCompanionController reportMapping]
  -[PBBridgeCompanionController setReportMapping:]
  -[PBBridgeCompanionController passcodeSet]
  -[PBBridgeCompanionController selectedPairedUnlock]
  -[PBBridgeCompanionController setSelectedPairedUnlock:]
  -[PBBridgeCompanionController activationRetries]
  -[PBBridgeCompanionController setActivationRetries:]


PBBProtoDidMakeAutoLockChoice : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasAccept
 @property  BOOL accept

  // instance methods
  -[PBBProtoDidMakeAutoLockChoice isEqual:]
  -[PBBProtoDidMakeAutoLockChoice copyWithZone:]
  -[PBBProtoDidMakeAutoLockChoice dictionaryRepresentation]
  -[PBBProtoDidMakeAutoLockChoice writeTo:]
  -[PBBProtoDidMakeAutoLockChoice mergeFrom:]
  -[PBBProtoDidMakeAutoLockChoice readFrom:]
  -[PBBProtoDidMakeAutoLockChoice copyTo:]
  -[PBBProtoDidMakeAutoLockChoice accept]
  -[PBBProtoDidMakeAutoLockChoice setAccept:]
  -[PBBProtoDidMakeAutoLockChoice setHasAccept:]
  -[PBBProtoDidMakeAutoLockChoice hasAccept]


PBBProtoDidFailToCreatePasscode : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasError
 @property  int error

  // instance methods
  -[PBBProtoDidFailToCreatePasscode isEqual:]
  -[PBBProtoDidFailToCreatePasscode copyWithZone:]
  -[PBBProtoDidFailToCreatePasscode error]
  -[PBBProtoDidFailToCreatePasscode setError:]
  -[PBBProtoDidFailToCreatePasscode dictionaryRepresentation]
  -[PBBProtoDidFailToCreatePasscode writeTo:]
  -[PBBProtoDidFailToCreatePasscode mergeFrom:]
  -[PBBProtoDidFailToCreatePasscode readFrom:]
  -[PBBProtoDidFailToCreatePasscode copyTo:]
  -[PBBProtoDidFailToCreatePasscode hasError]
  -[PBBProtoDidFailToCreatePasscode setHasError:]


PBBProtoBecameActive : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL wantsConfirmation

  // instance methods
  -[PBBProtoBecameActive isEqual:]
  -[PBBProtoBecameActive copyWithZone:]
  -[PBBProtoBecameActive dictionaryRepresentation]
  -[PBBProtoBecameActive writeTo:]
  -[PBBProtoBecameActive mergeFrom:]
  -[PBBProtoBecameActive readFrom:]
  -[PBBProtoBecameActive copyTo:]
  -[PBBProtoBecameActive setWantsConfirmation:]
  -[PBBProtoBecameActive wantsConfirmation]


PBBProtoTermsAndConditions : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
 @property  BOOL hasLicense
 @property  NSData *license
 @property  BOOL hasMultiterms
 @property  NSData *multiterms
 @property  BOOL hasWarranty
 @property  NSData *warranty
 @property  BOOL hasLicenseLabel
 @property  NSString *licenseLabel
 @property  BOOL hasWarrantyLabel
 @property  NSString *warrantyLabel
 @property  BOOL hasAgreeDialogTitle
 @property  NSString *agreeDialogTitle
 @property  BOOL hasAgreeDialogText
 @property  NSString *agreeDialogText
 @property  BOOL hasAgreeLabel
 @property  NSString *agreeLabel
 @property  BOOL hasCancelLabel
 @property  NSString *cancelLabel
 @property  BOOL hasDisagreeLabel
 @property  NSString *disagreeLabel
 @property  BOOL hasServerTerms
 @property  NSData *serverTerms
 @property  BOOL hasUserAgent
 @property  NSString *userAgent

  // instance methods
  -[PBBProtoTermsAndConditions isEqual:]
  -[PBBProtoTermsAndConditions copyWithZone:]
  -[PBBProtoTermsAndConditions .cxx_destruct]
  -[PBBProtoTermsAndConditions dictionaryRepresentation]
  -[PBBProtoTermsAndConditions writeTo:]
  -[PBBProtoTermsAndConditions mergeFrom:]
  -[PBBProtoTermsAndConditions readFrom:]
  -[PBBProtoTermsAndConditions copyTo:]
  -[PBBProtoTermsAndConditions userAgent]
  -[PBBProtoTermsAndConditions setUserAgent:]
  -[PBBProtoTermsAndConditions license]
  -[PBBProtoTermsAndConditions cancelLabel]
  -[PBBProtoTermsAndConditions setCancelLabel:]
  -[PBBProtoTermsAndConditions hasUserAgent]
  -[PBBProtoTermsAndConditions setWarranty:]
  -[PBBProtoTermsAndConditions warranty]
  -[PBBProtoTermsAndConditions setLicense:]
  -[PBBProtoTermsAndConditions setMultiterms:]
  -[PBBProtoTermsAndConditions hasLicense]
  -[PBBProtoTermsAndConditions hasMultiterms]
  -[PBBProtoTermsAndConditions hasWarranty]
  -[PBBProtoTermsAndConditions multiterms]
  -[PBBProtoTermsAndConditions setServerTerms:]
  -[PBBProtoTermsAndConditions setLicenseLabel:]
  -[PBBProtoTermsAndConditions setWarrantyLabel:]
  -[PBBProtoTermsAndConditions setAgreeDialogTitle:]
  -[PBBProtoTermsAndConditions setAgreeDialogText:]
  -[PBBProtoTermsAndConditions setAgreeLabel:]
  -[PBBProtoTermsAndConditions setDisagreeLabel:]
  -[PBBProtoTermsAndConditions hasLicenseLabel]
  -[PBBProtoTermsAndConditions hasWarrantyLabel]
  -[PBBProtoTermsAndConditions hasAgreeDialogTitle]
  -[PBBProtoTermsAndConditions hasAgreeDialogText]
  -[PBBProtoTermsAndConditions hasAgreeLabel]
  -[PBBProtoTermsAndConditions hasCancelLabel]
  -[PBBProtoTermsAndConditions hasDisagreeLabel]
  -[PBBProtoTermsAndConditions hasServerTerms]
  -[PBBProtoTermsAndConditions licenseLabel]
  -[PBBProtoTermsAndConditions warrantyLabel]
  -[PBBProtoTermsAndConditions agreeDialogTitle]
  -[PBBProtoTermsAndConditions agreeDialogText]
  -[PBBProtoTermsAndConditions agreeLabel]
  -[PBBProtoTermsAndConditions disagreeLabel]
  -[PBBProtoTermsAndConditions serverTerms]


PBBProtoPrepareWatchForForcedSUResponse : PBCodable /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation <NSCopying>
  // instance methods
  -[PBBProtoPrepareWatchForForcedSUResponse isEqual:]
  -[PBBProtoPrepareWatchForForcedSUResponse copyWithZone:]
  -[PBBProtoPrepareWatchForForcedSUResponse dictionaryRepresentation]
  -[PBBProtoPrepareWatchForForcedSUResponse writeTo:]
  -[PBBProtoPrepareWatchForForcedSUResponse mergeFrom:]
  -[PBBProtoPrepareWatchForForcedSUResponse readFrom:]
  -[PBBProtoPrepareWatchForForcedSUResponse copyTo:]


IDSMessageContext(PBProtoAdditions)
	// instance methods
	-[IDSMessageContext(PBProtoAdditions) pbDescription]

IDSProtobuf(PBProtoAdditions)
	// instance methods
	-[IDSProtobuf(PBProtoAdditions) pbDescription]

IDSService(PB)
	// instance methods
	-[IDSService(PB) pb_defaultPairedDeviceID]
	-[IDSService(PB) pb_mineDevices]

01 00 0e00 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AAGenericTermsUIRequest 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0800 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSProcessAssertion 
01 00 1d00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0c00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0900 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDSettingsService 
01 00 1a00 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSMessageContext 
01 00 1a00 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSProtobuf 
01 00 1b00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 1400 /System/Library/PrivateFrameworks/IntlPreferences.framework/IntlPreferences: IntlUtility 
01 00 0b00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAsset 
01 00 0b00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAssetQuery 
01 00 0b00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MADownloadOptions 
01 00 1f00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0f00 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 1800 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 1800 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairingCompatibilityVersionInfo 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLConnection 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1900 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0300 /System/Library/PrivateFrameworks/RemoteUI.framework/RemoteUI: RUILoader 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
