|| __DATA.__objc_data _OBJC_CLASS_$_MTLCountersBlitCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLCountersCommandBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLCountersCommandQueue
|| __DATA.__objc_data _OBJC_CLASS_$_MTLCountersComputeCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLCountersDevice
|| __DATA.__objc_data _OBJC_CLASS_$_MTLCountersParallelRenderCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLCountersRenderCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLCountersResourceStateCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugAccelerationStructure
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugAccelerationStructureCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugArgumentEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugBinaryArchive
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugBlitCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugBufferMarker
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugCommandBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugCommandQueue
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugComputeCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugComputePipelineState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugCounterSampleBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugDepthStencilState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugDevice
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugDynamicLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugFunction
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugFunctionHandle
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugHeap
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugIndirectCommandBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugIndirectComputeCommand
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugIndirectRenderCommand
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugIntersectionFunctionTable
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugLateEvalEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugParallelRenderCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugPipelineLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugRenderCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugRenderPipelineState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugResource
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugResourceStateCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugSamplerState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugSharedEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugTexture
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugTextureLayout
|| __DATA.__objc_data _OBJC_CLASS_$_MTLDebugVisibleFunctionTable
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugAccelerationStructure
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugAccelerationStructureCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugArgumentEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugBinaryArchive
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugBlitCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugBufferErrorLog
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugCommandBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugCommandQueue
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugComputeCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugComputePipelineState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugDevice
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugDynamicLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugFunction
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugFunctionHandle
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugGPULog
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugHeap
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugIndirectCommandBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugIndirectComputeCommand
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugIndirectRenderCommand
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugIntersectionFunctionTable
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugParallelRenderCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugRenderCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugRenderPipelineState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugTexture
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugTextureErrorLog
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugTrapErrorLog
|| __DATA.__objc_data _OBJC_CLASS_$_MTLGPUDebugVisibleFunctionTable
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetryBlitCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetryBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetryCommandBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetryCommandQueue
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetryComputeCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetryComputePipelineState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetryDepthStencilState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetryDevice
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetryHeap
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetryParallelRenderCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetryRenderCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetryRenderPipelineState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetrySamplerState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLTelemetryTexture
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsAccelerationStructure
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsAccelerationStructureCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsArgumentEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsBinaryArchive
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsBlitCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsCommandBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsCommandQueue
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsComputeCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsComputePipelineState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsCounterSampleBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsDepthStencilState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsDevice
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsDynamicLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsFence
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsFunction
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsFunctionHandle
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsHeap
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsIndirectCommandBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsIndirectComputeCommand
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsIndirectRenderCommand
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsIntersectionFunctionTable
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsLateEvalEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsObject
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsParallelRenderCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsPipelineLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsRasterizationRateMap
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsRenderCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsRenderPipelineState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsResource
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsResourceStateCommandEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsSamplerState
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsSharedEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsTexture
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsTextureLayout
|| __DATA.__objc_data _OBJC_CLASS_$_MTLToolsVisibleFunctionTable
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLCountersBlitCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLCountersCommandBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLCountersCommandQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLCountersComputeCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLCountersDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLCountersParallelRenderCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLCountersRenderCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLCountersResourceStateCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugAccelerationStructure
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugAccelerationStructureCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugArgumentEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugBinaryArchive
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugBlitCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugBufferMarker
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugCommandBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugCommandQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugComputeCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugComputePipelineState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugCounterSampleBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugDepthStencilState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugDynamicLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugFunction
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugFunctionHandle
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugHeap
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugIndirectCommandBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugIndirectComputeCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugIndirectRenderCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugIntersectionFunctionTable
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugLateEvalEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugParallelRenderCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugPipelineLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugRenderCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugRenderPipelineState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugResource
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugResourceStateCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugSamplerState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugSharedEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugTexture
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugTextureLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLDebugVisibleFunctionTable
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugAccelerationStructure
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugAccelerationStructureCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugArgumentEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugBinaryArchive
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugBlitCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugBufferErrorLog
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugCommandBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugCommandQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugComputeCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugComputePipelineState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugDynamicLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugFunction
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugFunctionHandle
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugGPULog
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugHeap
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugIndirectCommandBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugIndirectComputeCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugIndirectRenderCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugIntersectionFunctionTable
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugParallelRenderCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugRenderCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugRenderPipelineState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugTexture
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugTextureErrorLog
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugTrapErrorLog
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLGPUDebugVisibleFunctionTable
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetryBlitCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetryBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetryCommandBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetryCommandQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetryComputeCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetryComputePipelineState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetryDepthStencilState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetryDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetryHeap
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetryParallelRenderCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetryRenderCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetryRenderPipelineState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetrySamplerState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLTelemetryTexture
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsAccelerationStructure
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsAccelerationStructureCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsArgumentEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsBinaryArchive
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsBlitCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsCommandBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsCommandQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsComputeCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsComputePipelineState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsCounterSampleBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsDepthStencilState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsDynamicLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsFence
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsFunction
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsFunctionHandle
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsHeap
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsIndirectCommandBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsIndirectComputeCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsIndirectRenderCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsIntersectionFunctionTable
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsLateEvalEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsObject
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsParallelRenderCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsPipelineLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsRasterizationRateMap
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsRenderCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsRenderPipelineState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsResource
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsResourceStateCommandEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsSamplerState
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsSharedEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsTexture
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsTextureLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_MTLToolsVisibleFunctionTable
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLDebugBuffer._common
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLDebugCommandBuffer._currentEncoder
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLDebugRenderCommandEncoder._attachmentInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLDebugRenderCommandEncoder._dirtyBits
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLDebugRenderCommandEncoder._openGLModeEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLDebugRenderCommandEncoder._previousRenderPipelineStateWithWritesToImageBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLDebugRenderCommandEncoder._resolvedRasterSampleCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLDebugRenderCommandEncoder._vertexBuiltinArguments
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLGPUDebugDevice.boundsCheckOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLGPUDebugDevice.bufferHeap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLGPUDebugDevice.constantBufferCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLGPUDebugDevice.deviceOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLGPUDebugDevice.globalBufferHeap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLGPUDebugDevice.globalICBBufferResidentList
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.anisoClippedCounts
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.attachmentCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.blitEncoderBlitDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.blitMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.cbBlits
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.cbDispatches
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.cbDraws
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.cbMemoryBarriers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.computeEncoderDispatchDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.depthClipModeClampCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.dispatchDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.drawDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.encoderCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.parallellRenderEncoderDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.renderEncoderDrawCallDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.renderTargetArrayLengthDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.renderTargetMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.scissorRectDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.textureBindCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryCommandBuffer.viewportDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryComputePipelineState.device
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryComputePipelineState.uniqueID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.anisoClippedCounts
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.attachmentCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.backFaceStencilStateDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.blitEncoderBlitDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.blitMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.bufferDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.commandBufferBlitDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.commandBufferDispatchDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.commandBufferDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.commandBufferDrawCallDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.commandBufferMemoryBarrierDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.computeEncoderDispatchDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.computePipeUsageMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.computePipelineDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.computeStatDistributionMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.depthClipModeClampDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.depthStateDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.dispatchDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.drawDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.encoderDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.fragStatDistributionMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.frontFaceStencilStateDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.kernelDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.kernelUsageMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.parallellRenderEncoderDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.renderEncoderDrawCallDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.renderFuncUsageMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.renderPipeUsageMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.renderPipelineDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.renderTargetArrayLengthDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.renderTargetMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.samplerDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.scissorRectDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.textureBindCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.textureMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.viewportDistribution
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryDevice.vtxStatDistributionMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryRenderPipelineState.activeFragmentSamplers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryRenderPipelineState.activeFragmentTextures
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryRenderPipelineState.device
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryRenderPipelineState.hasAnisoConstantSampler
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryRenderPipelineState.uniqueID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetrySamplerState.isAniso
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLTelemetryTexture.mipmapClipType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsCommandBuffer._flags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsCommandBuffer._retainedObjectsLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsCommandBuffer._useRetainedObjectsLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsDevice._deviceWrapper
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsDevice.depthStencilObjectCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsDevice.dynamicLibraryObjectCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsDevice.functionHandleObjectCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsDevice.functionObjectCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsDevice.samplerObjectCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsDevice.sourceLibraryObjectCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsObject._baseObject
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsObject._device
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsObject._parent
|| __DATA.__objc_ivar _OBJC_IVAR_$_MTLToolsResource._options
|| __TEXT.__text _MTLToolsGetAssociatedObject
|| __TEXT.__text _MTLToolsSetAssociatedObject
|| __TEXT.__text __Z14MTLGPUDebugLogv
|| __TEXT.__text __Z19emitKernelTelemetryP18MTLTelemetryDevice
|| __TEXT.__text __Z20emitBlitDistributionP18MTLTelemetryDeviceNSt3__113unordered_mapI14MTLPixelFormat28MTLTelemetryBlitDistributionNS1_4hashIyEENS1_8equal_toIS3_EENS1_9allocatorINS1_4pairIKS3_S4_EEEEEE
|| __TEXT.__text __Z20emitDrawDistributionP18MTLTelemetryDeviceP31MTLTelemetryDrawDistributionRec
|| __TEXT.__text __Z22emitAnisoClippedCountsP18MTLTelemetryDeviceP33MTLTelemetryAnisoClippedCountsRec
|| __TEXT.__text __Z22emitBufferDistributionP18MTLTelemetryDeviceP33MTLTelemetryBufferDistributionRec
|| __TEXT.__text __Z23emitEncoderDistributionP18MTLTelemetryDeviceP34MTLTelemetryEncoderDistributionRec
|| __TEXT.__text __Z23emitRenderPipelineStatsP18MTLTelemetryDeviceRKNSt3__113unordered_mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE26MTLTelemetryStatisticUIRecNS1_4hashIS8_EENS1_8equal_toIS8_EENS6_INS1_4pairIKS8_S9_EEEEEESK_P41MTLTelemetryRenderPipelineDistributionRec
|| __TEXT.__text __Z23emitRenderPipelineUsageP18MTLTelemetryDeviceNSt3__113unordered_mapIj34MTLTelemetryRenderPipelineUsageRecNS1_4hashIjEENS1_8equal_toIjEENS1_9allocatorINS1_4pairIKjS3_EEEEEENS2_Ij30MTLTelemetryRenderFuncUsageRecS5_S7_NS8_INS9_ISA_SE_EEEEEE
|| __TEXT.__text __Z23emitSamplerDistributionP18MTLTelemetryDeviceP34MTLTelemetrySamplerDistributionRec
|| __TEXT.__text __Z23getKernelTelemetryStateR26MTLTelemetryKernelStateRec
|| __TEXT.__text __Z24emitComputePipelineStatsP18MTLTelemetryDeviceRKNSt3__113unordered_mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE26MTLTelemetryStatisticUIRecNS1_4hashIS8_EENS1_8equal_toIS8_EENS6_INS1_4pairIKS8_S9_EEEEEEP42MTLTelemetryComputePipelineDistributionRec
|| __TEXT.__text __Z24emitComputePipelineUsageP18MTLTelemetryDeviceNSt3__113unordered_mapIj35MTLTelemetryComputePipelineUsageRecNS1_4hashIjEENS1_8equal_toIjEENS1_9allocatorINS1_4pairIKjS3_EEEEEENS2_Ij26MTLTelemetryKernelUsageRecS5_S7_NS8_INS9_ISA_SE_EEEEEE
|| __TEXT.__text __Z24emitDispatchDistributionP18MTLTelemetryDeviceP35MTLTelemetryDispatchDistributionRec
|| __TEXT.__text __Z24emitRenderPassAttributesP18MTLTelemetryDeviceP26MTLTelemetryStatisticUIRec
|| __TEXT.__text __Z28emitDepthStencilDistributionP18MTLTelemetryDeviceP37MTLTelemetryDepthStateDistributionRecP39MTLTelemetryStencilStateDistributionRecS4_
|| __TEXT.__text __Z28emitRenderTargetDistributionP18MTLTelemetryDeviceNSt3__113unordered_mapI14MTLPixelFormat36MTLTelemetryRenderTargetDistributionNS1_4hashIyEENS1_8equal_toIS3_EENS1_9allocatorINS1_4pairIKS3_S4_EEEEEE
|| __TEXT.__text __Z29emitCommandBufferDistributionP18MTLTelemetryDeviceP34MTLTelemetryCommandBufferCounttRec
|| __TEXT.__text __Z31MTLGPUDebugBufferHandleToOffsety
|| __TEXT.__text __Z37MTLGPUDebugSetBufferForResourceHandleP17MTLGPUDebugDeviceyP17MTLGPUDebugBuffer
|| __TEXT.__text __Z38emitParallellRenderEncoderDistributionP18MTLTelemetryDevice26MTLTelemetryStatisticUIRec
|| __TEXT.__text __ZN11MetalBuffer12getMTLBufferEv
|| __TEXT.__text __ZN11MetalBuffer4freeEv
|| __TEXT.__text __ZN11MetalBufferC1EP15MetalBufferHeapj
|| __TEXT.__text __ZN11MetalBufferC2EP15MetalBufferHeapj
|| __TEXT.__text __ZN15MetalBufferHeap10freeBufferEO11MetalBuffer
|| __TEXT.__text __ZN15MetalBufferHeap11allocBufferEv
|| __TEXT.__text __ZN15MetalBufferHeap4growEj
|| __TEXT.__text __ZN15MetalBufferHeap4initEP17MTLGPUDebugDevicey
|| __TEXT.__text __ZN15MetalBufferHeapD1Ev
|| __TEXT.__text __ZN15MetalBufferHeapD2Ev
|| __TEXT.__text __ZN24GlobalResidentBufferList10useBuffersEP31MTLGPUDebugRenderCommandEncoder
|| __TEXT.__text __ZN24GlobalResidentBufferList10useBuffersEP32MTLGPUDebugComputeCommandEncoder
|| __TEXT.__text __ZN24GlobalResidentBufferList12removeBufferEPU19objcproto9MTLBuffer11objc_object
|| __TEXT.__text __ZN24GlobalResidentBufferList9addBufferEPU19objcproto9MTLBuffer11objc_object
|| __TEXT.__text __ZN27GPUDebugConstantBufferCache13releaseBufferERNS_13KeyBufferPairE
|| __TEXT.__text __ZN27GPUDebugConstantBufferCache17getOrCreateBufferEP6NSData
|| __TEXT.__text __ZN27GPUDebugConstantBufferCache4initEP17MTLGPUDebugDevice
|| __TEXT.__text __ZN28GPUDebugBufferDescriptorHeap12createHandleEP17MTLGPUDebugBuffer
|| __TEXT.__text __ZN28GPUDebugBufferDescriptorHeap16freeBufferHandleEy
|| __TEXT.__text __ZN28GPUDebugBufferDescriptorHeap4initEP17MTLGPUDebugDevicej
|| __TEXT.__text __ZN29GPUDebugArgumentEncoderLayoutC1EP13MTLStructTypeP17MTLGPUDebugDevice
|| __TEXT.__text __ZN29GPUDebugArgumentEncoderLayoutC2EP13MTLStructTypeP17MTLGPUDebugDevice
|| __TEXT.__text __ZN29GPUDebugArgumentEncoderLayoutD1Ev
|| __TEXT.__text __ZN29GPUDebugArgumentEncoderLayoutD2Ev
|| __TEXT.__text __ZNK29GPUDebugArgumentEncoderLayout9sublayoutEj
|| __TEXT.__text _checkAccelerationStructure
|| __TEXT.__text _checkAccelerationStructureDescriptor
|| __TEXT.__text _unwrapAccelerationStructureDescriptor
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: _kCFAllocatorDefault
__ Foundation: _NSIntersectionRange
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSValue
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMainPortDefault
__ IOSurface: _IOSurfaceCopyValue
__ IOSurface: _IOSurfaceGetBaseAddress
__ IOSurface: _IOSurfaceGetBytesPerRow
__ IOSurface: _kIOSurfaceCreationProperties
__ Metal: _MTLCreateStructTypeFromArgumentDescriptors
__ Metal: _MTLDataTypeGetAlignment
__ Metal: _MTLDataTypeGetSize
__ Metal: _MTLDataTypeString
__ Metal: _MTLDynamicLibraryLoadOptionsFromPipelineOptions
__ Metal: _MTLEnumerateIndirectResources
__ Metal: _MTLFunctionTypeString
__ Metal: _MTLGPUOperationString
__ Metal: _MTLGetEnvDefault
__ Metal: _MTLGetTextureLevelInfoForDevice
__ Metal: _MTLGetTextureLevelInfoForDeviceWithOptions
__ Metal: _MTLPipelinePerformanceKeyFragmentShader
__ Metal: _MTLPipelinePerformanceKeyVertexShader
__ Metal: _MTLPixelFormatCompatibilityString
__ Metal: _MTLPixelFormatComputeTotalSizeUsed
__ Metal: _MTLPixelFormatGetInfoForDevice
__ Metal: _MTLPixelFormatGetName
__ Metal: _MTLReadWriteTextureIsSupported
__ Metal: _MTLReleaseAssertionFailure
__ Metal: _MTLReportFailure
__ Metal: _MTLReportFailureTypeEnabled
__ Metal: _MTLSamplerBorderColorString
__ Metal: _MTLStorageModeString
__ Metal: _MTLTextureSwizzleKeyToChannels
__ Metal: _MTLTextureTypeString
__ Metal: _MTLValidateFeatureSupport
__ Metal: _MTLVertexAmplificationModeString
__ Metal: _OBJC_CLASS_$_MTLAccelerationStructureBoundingBoxGeometryDescriptor
__ Metal: _OBJC_CLASS_$_MTLAccelerationStructureMotionBoundingBoxGeometryDescriptor
__ Metal: _OBJC_CLASS_$_MTLAccelerationStructureMotionTriangleGeometryDescriptor
__ Metal: _OBJC_CLASS_$_MTLAccelerationStructureTriangleGeometryDescriptor
__ Metal: _OBJC_CLASS_$_MTLArgumentDescriptor
__ Metal: _OBJC_CLASS_$_MTLArrayType
__ Metal: _OBJC_CLASS_$_MTLBinaryArchiveDescriptor
__ Metal: _OBJC_CLASS_$_MTLBlitPassDescriptor
__ Metal: _OBJC_CLASS_$_MTLBufferRelocation
__ Metal: _OBJC_CLASS_$_MTLCommandQueueDescriptor
__ Metal: _OBJC_CLASS_$_MTLCompileOptions
__ Metal: _OBJC_CLASS_$_MTLComputePassDescriptor
__ Metal: _OBJC_CLASS_$_MTLComputePipelineDescriptor
__ Metal: _OBJC_CLASS_$_MTLComputePipelineReflection
__ Metal: _OBJC_CLASS_$_MTLConstantRelocation
__ Metal: _OBJC_CLASS_$_MTLCounterSampleBufferDescriptor
__ Metal: _OBJC_CLASS_$_MTLDepthStencilDescriptor
__ Metal: _OBJC_CLASS_$_MTLFunctionConstantValues
__ Metal: _OBJC_CLASS_$_MTLFunctionDescriptor
__ Metal: _OBJC_CLASS_$_MTLGenericBVHBuffersSPI
__ Metal: _OBJC_CLASS_$_MTLIndirectConstantArgument
__ Metal: _OBJC_CLASS_$_MTLInstanceAccelerationStructureDescriptor
__ Metal: _OBJC_CLASS_$_MTLIntersectionFunctionDescriptor
__ Metal: _OBJC_CLASS_$_MTLIntersectionFunctionTableDescriptor
__ Metal: _OBJC_CLASS_$_MTLLinkedFunctions
__ Metal: _OBJC_CLASS_$_MTLPrimitiveAccelerationStructureDescriptor
__ Metal: _OBJC_CLASS_$_MTLRasterizationRateLayerDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPassDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPipelineDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPipelineFunctionsDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPipelineReflection
__ Metal: _OBJC_CLASS_$_MTLResourceStatePassDescriptor
__ Metal: _OBJC_CLASS_$_MTLSamplerDescriptor
__ Metal: _OBJC_CLASS_$_MTLStructMember
__ Metal: _OBJC_CLASS_$_MTLStructType
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ Metal: _OBJC_CLASS_$_MTLTileRenderPipelineDescriptor
__ Metal: _OBJC_CLASS_$_MTLVisibleFunctionTableDescriptor
__ Metal: _OBJC_CLASS_$__MTLFunctionLogDebugLocation
__ Metal: __MTLAdjustMTLSize
__ Metal: __MTLCompatibleTextureDataTypeAndPixelFormatInfo
__ Metal: __MTLGetAttachmentSize
__ Metal: __MTLHashState
__ Metal: __MTLMessageContextBegin_
__ Metal: __MTLMessageContextEnd
__ Metal: __MTLMessageContextPush_
__ Metal: __Z46MTLAccelerationStructureInstanceDescriptorSize46MTLAccelerationStructureInstanceDescriptorType
__ Metal: __Z53isValidMTLAccelerationStructureInstanceDescriptorType46MTLAccelerationStructureInstanceDescriptorType
__ Metal: __mtlNumMipmapLevelsForSize
__ Metal: _initLogMode
__ Metal: _kMetalRegistryID
__ Metal: _kMetalTextureArrayLength
__ Metal: _kMetalTextureDepth
__ Metal: _kMetalTextureGPUOptimization
__ Metal: _kMetalTextureHeight
__ Metal: _kMetalTextureMipmapLevelCount
__ Metal: _kMetalTexturePixelFormat
__ Metal: _kMetalTextureResourceOptions
__ Metal: _kMetalTextureSampleCount
__ Metal: _kMetalTextureSparseValue
__ Metal: _kMetalTextureSwizzleKey
__ Metal: _kMetalTextureType
__ Metal: _kMetalTextureUsage
__ Metal: _kMetalTextureWidth
__ Metal: _logMode
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __tlv_bootstrap
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _atoi
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _sprintf
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _vm_page_size
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt3__111__call_onceERVmPvPFvS2_E
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__115recursive_mutex4lockEv
__ libc++.1.dylib: __ZNSt3__115recursive_mutex6unlockEv
__ libc++.1.dylib: __ZNSt3__115recursive_mutexC1Ev
__ libc++.1.dylib: __ZNSt3__115recursive_mutexD1Ev
__ libc++.1.dylib: __ZNSt3__15mutex4lockEv
__ libc++.1.dylib: __ZNSt3__15mutex6unlockEv
__ libc++.1.dylib: __ZNSt3__15mutexD1Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_rethrow
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libcompression.dylib: _compression_encode_buffer
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeWeak
MTLDebugIndirectComputeCommand : MTLToolsIndirectComputeCommand
 @property  unsigned long index
 @property  <MTLIndirectCommandBuffer> *indirectCommandBuffer

  // instance methods
  -[MTLDebugIndirectComputeCommand setComputePipelineState:]
  -[MTLDebugIndirectComputeCommand index]
  -[MTLDebugIndirectComputeCommand dealloc]
  -[MTLDebugIndirectComputeCommand setKernelBuffer:offset:atIndex:]
  -[MTLDebugIndirectComputeCommand concurrentDispatchThreadgroups:threadsPerThreadgroup:]
  -[MTLDebugIndirectComputeCommand concurrentDispatchThreads:threadsPerThreadgroup:]
  -[MTLDebugIndirectComputeCommand initWithBaseObject:descriptor:indexCount:indirectCommandBuffer:]
  -[MTLDebugIndirectComputeCommand indirectCommandBuffer]


MTLGPUDebugRenderCommandEncoder : MTLToolsRenderCommandEncoder <MTLGPUDebugCommandEncoder>
 @property  MTLGPUDebugCommandBuffer *commandBuffer
 @property  unsigned int encoderID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLGPUDebugRenderCommandEncoder setVertexBuffers:offsets:withRange:]
  -[MTLGPUDebugRenderCommandEncoder setVertexTexture:atIndex:]
  -[MTLGPUDebugRenderCommandEncoder setFragmentBuffers:offsets:withRange:]
  -[MTLGPUDebugRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:]
  -[MTLGPUDebugRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:]
  -[MTLGPUDebugRenderCommandEncoder useResources:count:usage:]
  -[MTLGPUDebugRenderCommandEncoder .cxx_construct]
  -[MTLGPUDebugRenderCommandEncoder useHeaps:count:]
  -[MTLGPUDebugRenderCommandEncoder setTileVisibleFunctionTables:withBufferRange:]
  -[MTLGPUDebugRenderCommandEncoder setVertexAmplificationCount:viewMappings:]
  -[MTLGPUDebugRenderCommandEncoder setVertexIntersectionFunctionTables:withBufferRange:]
  -[MTLGPUDebugRenderCommandEncoder setVertexBytes:length:atIndex:]
  -[MTLGPUDebugRenderCommandEncoder setFragmentBytes:length:atIndex:]
  -[MTLGPUDebugRenderCommandEncoder setVertexAccelerationStructure:atBufferIndex:]
  -[MTLGPUDebugRenderCommandEncoder setVertexVisibleFunctionTable:atBufferIndex:]
  -[MTLGPUDebugRenderCommandEncoder setVertexVisibleFunctionTables:withBufferRange:]
  -[MTLGPUDebugRenderCommandEncoder setFragmentIntersectionFunctionTable:atBufferIndex:]
  -[MTLGPUDebugRenderCommandEncoder setFragmentIntersectionFunctionTables:withBufferRange:]
  -[MTLGPUDebugRenderCommandEncoder setTileAccelerationStructure:atBufferIndex:]
  -[MTLGPUDebugRenderCommandEncoder setTileTexture:atIndex:]
  -[MTLGPUDebugRenderCommandEncoder setTileBuffer:offset:atIndex:]
  -[MTLGPUDebugRenderCommandEncoder dispatchThreadsPerTile:]
  -[MTLGPUDebugRenderCommandEncoder setFragmentAccelerationStructure:atBufferIndex:]
  -[MTLGPUDebugRenderCommandEncoder setFragmentVisibleFunctionTable:atBufferIndex:]
  -[MTLGPUDebugRenderCommandEncoder setTileVisibleFunctionTable:atBufferIndex:]
  -[MTLGPUDebugRenderCommandEncoder useHeap:]
  -[MTLGPUDebugRenderCommandEncoder useResource:usage:]
  -[MTLGPUDebugRenderCommandEncoder executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:]
  -[MTLGPUDebugRenderCommandEncoder setVertexBuffer:offset:atIndex:]
  -[MTLGPUDebugRenderCommandEncoder setFragmentBuffer:offset:atIndex:]
  -[MTLGPUDebugRenderCommandEncoder setVertexBufferOffset:atIndex:]
  -[MTLGPUDebugRenderCommandEncoder setFragmentBufferOffset:atIndex:]
  -[MTLGPUDebugRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:]
  -[MTLGPUDebugRenderCommandEncoder setRenderPipelineState:]
  -[MTLGPUDebugRenderCommandEncoder setFragmentTexture:atIndex:]
  -[MTLGPUDebugRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:instanceCount:]
  -[MTLGPUDebugRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:]
  -[MTLGPUDebugRenderCommandEncoder setDepthStencilState:]
  -[MTLGPUDebugRenderCommandEncoder executeCommandsInBuffer:withRange:]
  -[MTLGPUDebugRenderCommandEncoder setTileIntersectionFunctionTable:atBufferIndex:]
  -[MTLGPUDebugRenderCommandEncoder endEncoding]
  -[MTLGPUDebugRenderCommandEncoder setFragmentVisibleFunctionTables:withBufferRange:]
  -[MTLGPUDebugRenderCommandEncoder setVertexIntersectionFunctionTable:atBufferIndex:]
  -[MTLGPUDebugRenderCommandEncoder setTileIntersectionFunctionTables:withBufferRange:]
  -[MTLGPUDebugRenderCommandEncoder useHeap:stages:]
  -[MTLGPUDebugRenderCommandEncoder useHeaps:count:stages:]
  -[MTLGPUDebugRenderCommandEncoder useResource:usage:stages:]
  -[MTLGPUDebugRenderCommandEncoder useResources:count:usage:stages:]
  -[MTLGPUDebugRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:]
  -[MTLGPUDebugRenderCommandEncoder setVertexTextures:withRange:]
  -[MTLGPUDebugRenderCommandEncoder setFragmentTextures:withRange:]
  -[MTLGPUDebugRenderCommandEncoder drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:]
  -[MTLGPUDebugRenderCommandEncoder drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:]
  -[MTLGPUDebugRenderCommandEncoder drawPrimitives:indirectBuffer:indirectBufferOffset:]
  -[MTLGPUDebugRenderCommandEncoder drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLGPUDebugRenderCommandEncoder setThreadgroupMemoryLength:offset:atIndex:]
  -[MTLGPUDebugRenderCommandEncoder setTileBytes:length:atIndex:]
  -[MTLGPUDebugRenderCommandEncoder _initBufferArgumentData:]
  -[MTLGPUDebugRenderCommandEncoder temporaryBufferWithBytes:length:]
  -[MTLGPUDebugRenderCommandEncoder temporaryBufferWithLength:]
  -[MTLGPUDebugRenderCommandEncoder flushBindings]
  -[MTLGPUDebugRenderCommandEncoder drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLGPUDebugRenderCommandEncoder setTessellationControlPointIndexBuffer:offset:]
  -[MTLGPUDebugRenderCommandEncoder drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLGPUDebugRenderCommandEncoder dispatchThreadsPerTile:inRegion:]
  -[MTLGPUDebugRenderCommandEncoder useResourceInternal:usage:stages:]
  -[MTLGPUDebugRenderCommandEncoder _useResourceCommon:usage:stages:]
  -[MTLGPUDebugRenderCommandEncoder setRenderPipelineStateBuffers:]
  -[MTLGPUDebugRenderCommandEncoder encoderID]
  -[MTLGPUDebugRenderCommandEncoder initWithRenderCommandEncoder:commandBuffer:descriptor:encoderID:]
  -[MTLGPUDebugRenderCommandEncoder initWithRenderCommandEncoder:parallelEncoder:descriptor:encoderID:]
  -[MTLGPUDebugRenderCommandEncoder setBufferUsageTable:textureUsageTable:forStage:]
  -[MTLGPUDebugRenderCommandEncoder setVertexReportBuffer:offset:]
  -[MTLGPUDebugRenderCommandEncoder setFragmentReportBuffer:offset:]
  -[MTLGPUDebugRenderCommandEncoder setTileReportBuffer:offset:]
  -[MTLGPUDebugRenderCommandEncoder setTileBufferOffset:atIndex:]
  -[MTLGPUDebugRenderCommandEncoder setTileBuffers:offsets:withRange:]
  -[MTLGPUDebugRenderCommandEncoder setTileTextures:withRange:]
  -[MTLGPUDebugRenderCommandEncoder setVertexAccelerationStructures:withBufferRange:]
  -[MTLGPUDebugRenderCommandEncoder setFragmentAccelerationStructures:withBufferRange:]
  -[MTLGPUDebugRenderCommandEncoder setTileAccelerationStructures:withBufferRange:]


MTLToolsIndirectCommandBuffer : MTLToolsResource <MTLIndirectCommandBufferSPI>
 @property  unsigned long uniqueIdentifier
 @property  unsigned long storageMode
 @property  unsigned long gpuAddress
 @property  unsigned long resourceIndex
 @property  unsigned long size
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long cpuCacheMode
 @property  unsigned long hazardTrackingMode
 @property  unsigned long resourceOptions
 @property  <MTLHeap> *heap
 @property  unsigned long heapOffset
 @property  unsigned long allocatedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsIndirectCommandBuffer uniqueIdentifier]
  -[MTLToolsIndirectCommandBuffer gpuAddress]
  -[MTLToolsIndirectCommandBuffer resourceIndex]
  -[MTLToolsIndirectCommandBuffer resetWithRange:]
  -[MTLToolsIndirectCommandBuffer storageMode]
  -[MTLToolsIndirectCommandBuffer indirectComputeCommandAtIndex:]
  -[MTLToolsIndirectCommandBuffer size]
  -[MTLToolsIndirectCommandBuffer getHeader:headerSize:]
  -[MTLToolsIndirectCommandBuffer indirectRenderCommandAtIndex:]


MTLGPUDebugGPULog : NSObject <MTLFunctionLog>
 @property  MTLGPUDebugImageData *image
 @property  NSArray *errorStackTrace
 @property  unsigned long callIndex
 @property  unsigned long type
 @property  NSString *encoderLabel
 @property  <MTLFunction> *function
 @property  <MTLFunctionLogDebugLocation> *debugLocation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLGPUDebugGPULog image]
  -[MTLGPUDebugGPULog setFunction:]
  -[MTLGPUDebugGPULog setType:]
  -[MTLGPUDebugGPULog type]
  -[MTLGPUDebugGPULog setImage:]
  -[MTLGPUDebugGPULog function]
  -[MTLGPUDebugGPULog dealloc]
  -[MTLGPUDebugGPULog encoderLabel]
  -[MTLGPUDebugGPULog debugLocation]
  -[MTLGPUDebugGPULog errorStackTrace]
  -[MTLGPUDebugGPULog setErrorStackTrace:]
  -[MTLGPUDebugGPULog callIndex]
  -[MTLGPUDebugGPULog setCallIndex:]
  -[MTLGPUDebugGPULog setEncoderLabel:]
  -[MTLGPUDebugGPULog setDebugLocation:]


MTLGPUDebugBufferErrorLog : MTLGPUDebugGPULog
 @property  unsigned long addressSpace
 @property  <MTLBuffer> *buffer
 @property  unsigned long offset
 @property  unsigned long operation
 @property  MTLArgument *argument
 @property  int specifiedUsage

  // instance methods
  -[MTLGPUDebugBufferErrorLog operation]
  -[MTLGPUDebugBufferErrorLog setOperation:]
  -[MTLGPUDebugBufferErrorLog argument]
  -[MTLGPUDebugBufferErrorLog offset]
  -[MTLGPUDebugBufferErrorLog init]
  -[MTLGPUDebugBufferErrorLog setBuffer:]
  -[MTLGPUDebugBufferErrorLog dealloc]
  -[MTLGPUDebugBufferErrorLog setOffset:]
  -[MTLGPUDebugBufferErrorLog buffer]
  -[MTLGPUDebugBufferErrorLog setArgument:]
  -[MTLGPUDebugBufferErrorLog setAddressSpace:]
  -[MTLGPUDebugBufferErrorLog setSpecifiedUsage:]
  -[MTLGPUDebugBufferErrorLog addressSpace]
  -[MTLGPUDebugBufferErrorLog specifiedUsage]


MTLGPUDebugTextureErrorLog : MTLGPUDebugGPULog
 @property  unsigned char errorReason

  // instance methods
  -[MTLGPUDebugTextureErrorLog errorReason]
  -[MTLGPUDebugTextureErrorLog setErrorReason:]


MTLGPUDebugTrapErrorLog : MTLGPUDebugGPULog
 @property  NSString *functionName

  // instance methods
  -[MTLGPUDebugTrapErrorLog setFunctionName:]
  -[MTLGPUDebugTrapErrorLog functionName]
  -[MTLGPUDebugTrapErrorLog dealloc]


MTLToolsBlitCommandEncoder : MTLToolsCommandEncoder <MTLBlitCommandEncoderSPI>
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:]
  -[MTLToolsBlitCommandEncoder optimizeContentsForGPUAccess:]
  -[MTLToolsBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:]
  -[MTLToolsBlitCommandEncoder copyFromTexture:toTexture:]
  -[MTLToolsBlitCommandEncoder fillBuffer:range:pattern4:]
  -[MTLToolsBlitCommandEncoder sampleCountersInBuffer:atSampleIndex:withBarrier:]
  -[MTLToolsBlitCommandEncoder optimizeContentsForCPUAccess:]
  -[MTLToolsBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:]
  -[MTLToolsBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:]
  -[MTLToolsBlitCommandEncoder copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:]
  -[MTLToolsBlitCommandEncoder fillTexture:level:slice:region:color:pixelFormat:]
  -[MTLToolsBlitCommandEncoder synchronizeResource:]
  -[MTLToolsBlitCommandEncoder optimizeContentsForCPUAccess:slice:level:]
  -[MTLToolsBlitCommandEncoder updateFence:]
  -[MTLToolsBlitCommandEncoder copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:]
  -[MTLToolsBlitCommandEncoder fillBuffer:range:value:]
  -[MTLToolsBlitCommandEncoder fillTexture:level:slice:region:bytes:length:]
  -[MTLToolsBlitCommandEncoder optimizeIndirectCommandBuffer:withRange:]
  -[MTLToolsBlitCommandEncoder fillTexture:level:slice:region:color:]
  -[MTLToolsBlitCommandEncoder generateMipmapsForTexture:]
  -[MTLToolsBlitCommandEncoder synchronizeTexture:slice:level:]
  -[MTLToolsBlitCommandEncoder resetCommandsInBuffer:withRange:]
  -[MTLToolsBlitCommandEncoder resolveCounters:inRange:destinationBuffer:destinationOffset:]
  -[MTLToolsBlitCommandEncoder waitForFence:]
  -[MTLToolsBlitCommandEncoder optimizeContentsForGPUAccess:slice:level:]
  -[MTLToolsBlitCommandEncoder invalidateCompressedTexture:]
  -[MTLToolsBlitCommandEncoder invalidateCompressedTexture:slice:level:]
  -[MTLToolsBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]
  -[MTLToolsBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:]
  -[MTLToolsBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]
  -[MTLToolsBlitCommandEncoder getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:]
  -[MTLToolsBlitCommandEncoder resetTextureAccessCounters:region:mipLevel:slice:]
  -[MTLToolsBlitCommandEncoder initWithBlitCommandEncoder:parent:descriptor:]


MTLToolsFence : MTLToolsObject <MTLFence>
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsFence label]
  -[MTLToolsFence setLabel:]
  -[MTLToolsFence device]


MTLCountersRenderCommandEncoder : MTLToolsRenderCommandEncoder
  // instance methods
  -[MTLCountersRenderCommandEncoder setLineWidth:]
  -[MTLCountersRenderCommandEncoder pushDebugGroup:]
  -[MTLCountersRenderCommandEncoder setColorStoreAction:atIndex:]
  -[MTLCountersRenderCommandEncoder setStencilReferenceValue:]
  -[MTLCountersRenderCommandEncoder setDepthClipMode:]
  -[MTLCountersRenderCommandEncoder setVertexBuffers:offsets:withRange:]
  -[MTLCountersRenderCommandEncoder setVertexTexture:atIndex:]
  -[MTLCountersRenderCommandEncoder setVertexSamplerState:atIndex:]
  -[MTLCountersRenderCommandEncoder setFragmentBuffers:offsets:withRange:]
  -[MTLCountersRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:]
  -[MTLCountersRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:]
  -[MTLCountersRenderCommandEncoder useResources:count:usage:]
  -[MTLCountersRenderCommandEncoder useHeaps:count:]
  -[MTLCountersRenderCommandEncoder setVertexAmplificationCount:viewMappings:]
  -[MTLCountersRenderCommandEncoder setVertexBytes:length:atIndex:]
  -[MTLCountersRenderCommandEncoder setFragmentBytes:length:atIndex:]
  -[MTLCountersRenderCommandEncoder setDepthStoreAction:]
  -[MTLCountersRenderCommandEncoder setStencilStoreAction:]
  -[MTLCountersRenderCommandEncoder setTileTexture:atIndex:]
  -[MTLCountersRenderCommandEncoder setTileSamplerState:atIndex:]
  -[MTLCountersRenderCommandEncoder setTileBuffer:offset:atIndex:]
  -[MTLCountersRenderCommandEncoder dispatchThreadsPerTile:]
  -[MTLCountersRenderCommandEncoder setViewport:]
  -[MTLCountersRenderCommandEncoder memoryBarrierWithResources:count:afterStages:beforeStages:]
  -[MTLCountersRenderCommandEncoder useHeap:]
  -[MTLCountersRenderCommandEncoder useResource:usage:]
  -[MTLCountersRenderCommandEncoder setVertexBuffer:offset:atIndex:]
  -[MTLCountersRenderCommandEncoder setFragmentBuffer:offset:atIndex:]
  -[MTLCountersRenderCommandEncoder setVertexBufferOffset:atIndex:]
  -[MTLCountersRenderCommandEncoder setFragmentBufferOffset:atIndex:]
  -[MTLCountersRenderCommandEncoder setScissorRect:]
  -[MTLCountersRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:]
  -[MTLCountersRenderCommandEncoder insertDebugSignpost:]
  -[MTLCountersRenderCommandEncoder setRenderPipelineState:]
  -[MTLCountersRenderCommandEncoder setFragmentTexture:atTextureIndex:samplerState:atSamplerIndex:]
  -[MTLCountersRenderCommandEncoder setFragmentTexture:atIndex:]
  -[MTLCountersRenderCommandEncoder setFragmentSamplerState:atIndex:]
  -[MTLCountersRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:instanceCount:]
  -[MTLCountersRenderCommandEncoder setFrontFacingWinding:]
  -[MTLCountersRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:]
  -[MTLCountersRenderCommandEncoder setTriangleFillMode:]
  -[MTLCountersRenderCommandEncoder setBlendColorRed:green:blue:alpha:]
  -[MTLCountersRenderCommandEncoder setDepthBias:slopeScale:clamp:]
  -[MTLCountersRenderCommandEncoder setDepthStencilState:]
  -[MTLCountersRenderCommandEncoder setVisibilityResultMode:offset:]
  -[MTLCountersRenderCommandEncoder popDebugGroup]
  -[MTLCountersRenderCommandEncoder endEncoding]
  -[MTLCountersRenderCommandEncoder dealloc]
  -[MTLCountersRenderCommandEncoder setLabel:]
  -[MTLCountersRenderCommandEncoder updateFence:afterStages:]
  -[MTLCountersRenderCommandEncoder memoryBarrierWithScope:afterStages:beforeStages:]
  -[MTLCountersRenderCommandEncoder setCullMode:]
  -[MTLCountersRenderCommandEncoder useResource:usage:stages:]
  -[MTLCountersRenderCommandEncoder useResources:count:usage:stages:]
  -[MTLCountersRenderCommandEncoder waitForFence:beforeStages:]
  -[MTLCountersRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:]
  -[MTLCountersRenderCommandEncoder setTessellationFactorScale:]
  -[MTLCountersRenderCommandEncoder setVertexTextures:withRange:]
  -[MTLCountersRenderCommandEncoder setFragmentTextures:withRange:]
  -[MTLCountersRenderCommandEncoder setViewports:count:]
  -[MTLCountersRenderCommandEncoder setScissorRects:count:]
  -[MTLCountersRenderCommandEncoder drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:]
  -[MTLCountersRenderCommandEncoder setTessellationFactorBuffer:offset:instanceStride:]
  -[MTLCountersRenderCommandEncoder drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:]
  -[MTLCountersRenderCommandEncoder setVertexSamplerStates:withRange:]
  -[MTLCountersRenderCommandEncoder setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLCountersRenderCommandEncoder setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLCountersRenderCommandEncoder setFragmentSamplerStates:withRange:]
  -[MTLCountersRenderCommandEncoder setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLCountersRenderCommandEncoder setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLCountersRenderCommandEncoder setStencilFrontReferenceValue:backReferenceValue:]
  -[MTLCountersRenderCommandEncoder drawPrimitives:indirectBuffer:indirectBufferOffset:]
  -[MTLCountersRenderCommandEncoder drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLCountersRenderCommandEncoder setThreadgroupMemoryLength:offset:atIndex:]
  -[MTLCountersRenderCommandEncoder setTileBytes:length:atIndex:]
  -[MTLCountersRenderCommandEncoder initWithRenderCommandEncoder:parent:descriptor:]
  -[MTLCountersRenderCommandEncoder drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLCountersRenderCommandEncoder drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLCountersRenderCommandEncoder setTileBufferOffset:atIndex:]
  -[MTLCountersRenderCommandEncoder setTileBuffers:offsets:withRange:]
  -[MTLCountersRenderCommandEncoder setTileTextures:withRange:]
  -[MTLCountersRenderCommandEncoder setTileSamplerStates:withRange:]
  -[MTLCountersRenderCommandEncoder setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLCountersRenderCommandEncoder setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLCountersRenderCommandEncoder setVertexAmplificationMode:value:]
  -[MTLCountersRenderCommandEncoder setColorResolveTexture:slice:depthPlane:level:atIndex:]
  -[MTLCountersRenderCommandEncoder setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:]
  -[MTLCountersRenderCommandEncoder setDepthResolveTexture:slice:depthPlane:level:]
  -[MTLCountersRenderCommandEncoder setDepthResolveTexture:slice:depthPlane:level:yInvert:]
  -[MTLCountersRenderCommandEncoder setStencilResolveTexture:slice:depthPlane:level:]
  -[MTLCountersRenderCommandEncoder setStencilResolveTexture:slice:depthPlane:level:yInvert:]


MTLToolsCounterSampleBuffer : MTLToolsObject <MTLCounterSampleBuffer>
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  unsigned long sampleCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsCounterSampleBuffer label]
  -[MTLToolsCounterSampleBuffer sampleCount]
  -[MTLToolsCounterSampleBuffer resolveCounterRange:]


MTLTelemetryHeap : MTLToolsHeap
 @property  MTLTelemetryDevice *telemetryDevice

  // instance methods
  -[MTLTelemetryHeap setPurgeableState:]
  -[MTLTelemetryHeap newBufferWithLength:options:]
  -[MTLTelemetryHeap newTextureWithDescriptor:]
  -[MTLTelemetryHeap newBufferWithLength:options:offset:]
  -[MTLTelemetryHeap newTextureWithDescriptor:offset:]
  -[MTLTelemetryHeap initWithHeap:descriptor:device:]
  -[MTLTelemetryHeap telemetryDevice]


MTLGPUDebugLibrary : MTLToolsLibrary
  // instance methods
  -[MTLGPUDebugLibrary newIntersectionFunctionWithDescriptor:completionHandler:]
  -[MTLGPUDebugLibrary newIntersectionFunctionWithDescriptor:error:]
  -[MTLGPUDebugLibrary newFunctionWithName:constantValues:functionCache:error:]
  -[MTLGPUDebugLibrary newFunctionWithDescriptor:error:]
  -[MTLGPUDebugLibrary newFunctionWithName:constantValues:pipelineLibrary:completionHandler:]
  -[MTLGPUDebugLibrary newFunctionWithName:constantValues:pipelineLibrary:error:]
  -[MTLGPUDebugLibrary newFunctionWithDescriptor:completionHandler:]
  -[MTLGPUDebugLibrary newFunctionWithName:constantValues:error:]
  -[MTLGPUDebugLibrary newFunctionWithName:constantValues:completionHandler:]
  -[MTLGPUDebugLibrary newFunctionWithName:]
  -[MTLGPUDebugLibrary initWithLibrary:device:]


MTLTelemetrySamplerState : MTLToolsSamplerState
 @property  MTLSamplerDescriptor *descriptor

  // instance methods
  -[MTLTelemetrySamplerState descriptor]
  -[MTLTelemetrySamplerState dealloc]
  -[MTLTelemetrySamplerState setSamplerStatsWithDescriptor:telemetryStat:]
  -[MTLTelemetrySamplerState initWithBaseSamplerState:device:descriptor:]


MTLToolsBuffer : MTLToolsResource <MTLBuffer>
 @property  unsigned long length
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long cpuCacheMode
 @property  unsigned long storageMode
 @property  unsigned long hazardTrackingMode
 @property  unsigned long resourceOptions
 @property  <MTLHeap> *heap
 @property  unsigned long heapOffset
 @property  unsigned long allocatedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsBuffer iosurface]
  -[MTLToolsBuffer didModifyRange:]
  -[MTLToolsBuffer contents]
  -[MTLToolsBuffer newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:]
  -[MTLToolsBuffer gpuAddress]
  -[MTLToolsBuffer parentGPUSize]
  -[MTLToolsBuffer formattedDescription:]
  -[MTLToolsBuffer length]
  -[MTLToolsBuffer newTextureWithDescriptor:offset:bytesPerRow:]
  -[MTLToolsBuffer _aneIOSurface]
  -[MTLToolsBuffer addDebugMarker:range:]
  -[MTLToolsBuffer removeAllDebugMarkers]
  -[MTLToolsBuffer dealloc]
  -[MTLToolsBuffer parentGPUAddress]
  -[MTLToolsBuffer setParentGPUAddress:]
  -[MTLToolsBuffer setParentGPUSize:]


MTLToolsCommandBuffer : MTLToolsObject <MTLCommandBufferSPI, MTLToolsRetainingContainer>
 @property  BOOL useRetainedObjectsLock
 @property  NSMutableSet *retainedObjects
 @property  unsigned long listIndex
 @property  BOOL profilingEnabled
 @property  NSDictionary *profilingResults
 @property  NSMutableDictionary *userDictionary
 @property  unsigned long globalTraceObjectID
 @property  <MTLDevice> *device
 @property  <MTLCommandQueue> *commandQueue
 @property  BOOL retainedReferences
 @property  unsigned long errorOptions
 @property  NSString *label
 @property  double kernelStartTime
 @property  double kernelEndTime
 @property  <MTLLogContainer> *logs
 @property  double GPUStartTime
 @property  double GPUEndTime
 @property  unsigned long status
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MTLToolsCommandBuffer unwrapMTLComputePassDescriptorInternal:]

  // instance methods
  -[MTLToolsCommandBuffer GPUStartTime]
  -[MTLToolsCommandBuffer presentDrawable:]
  -[MTLToolsCommandBuffer logs]
  -[MTLToolsCommandBuffer kernelStartTime]
  -[MTLToolsCommandBuffer presentDrawable:atTime:]
  -[MTLToolsCommandBuffer commit]
  -[MTLToolsCommandBuffer commitAndHold]
  -[MTLToolsCommandBuffer userDictionary]
  -[MTLToolsCommandBuffer computeCommandEncoderWithDispatchType:]
  -[MTLToolsCommandBuffer getListIndex]
  -[MTLToolsCommandBuffer presentDrawable:afterMinimumDuration:]
  -[MTLToolsCommandBuffer encodeDashboardFinalizeForResourceGroup:dashboard:value:forIndex:]
  -[MTLToolsCommandBuffer addSynchronizationNotification:]
  -[MTLToolsCommandBuffer profilingResults]
  -[MTLToolsCommandBuffer pushDebugGroup:]
  -[MTLToolsCommandBuffer encodeWaitForEvent:value:]
  -[MTLToolsCommandBuffer accelerationStructureCommandEncoder]
  -[MTLToolsCommandBuffer debugBufferContentsWithLength:]
  -[MTLToolsCommandBuffer setProfilingEnabled:]
  -[MTLToolsCommandBuffer isProfilingEnabled]
  -[MTLToolsCommandBuffer executeSynchronizationNotifications:scope:resources:count:]
  -[MTLToolsCommandBuffer label]
  -[MTLToolsCommandBuffer globalTraceObjectID]
  -[MTLToolsCommandBuffer computeCommandEncoderWithDescriptor:]
  -[MTLToolsCommandBuffer protectionOptions]
  -[MTLToolsCommandBuffer encodeDashboardFinalizeForResourceGroup:dashboard:values:indices:count:]
  -[MTLToolsCommandBuffer commandQueue]
  -[MTLToolsCommandBuffer retainedReferences]
  -[MTLToolsCommandBuffer .cxx_construct]
  -[MTLToolsCommandBuffer .cxx_destruct]
  -[MTLToolsCommandBuffer GPUEndTime]
  -[MTLToolsCommandBuffer waitUntilScheduled]
  -[MTLToolsCommandBuffer encodeSignalEvent:value:]
  -[MTLToolsCommandBuffer encodeDashboardTagForResourceGroup:]
  -[MTLToolsCommandBuffer errorOptions]
  -[MTLToolsCommandBuffer setProtectionOptions:]
  -[MTLToolsCommandBuffer encodeWaitForEvent:value:timeout:]
  -[MTLToolsCommandBuffer enqueue]
  -[MTLToolsCommandBuffer blitCommandEncoderWithDescriptor:]
  -[MTLToolsCommandBuffer status]
  -[MTLToolsCommandBuffer addScheduledHandler:]
  -[MTLToolsCommandBuffer kernelEndTime]
  -[MTLToolsCommandBuffer renderCommandEncoderWithDescriptor:]
  -[MTLToolsCommandBuffer blitCommandEncoder]
  -[MTLToolsCommandBuffer addCompletedHandler:]
  -[MTLToolsCommandBuffer encodeCacheHintTag:resourceGroups:count:]
  -[MTLToolsCommandBuffer encodeCacheHintFinalize:resourceGroups:count:]
  -[MTLToolsCommandBuffer popDebugGroup]
  -[MTLToolsCommandBuffer resourceStateCommandEncoderWithDescriptor:]
  -[MTLToolsCommandBuffer dealloc]
  -[MTLToolsCommandBuffer setLabel:]
  -[MTLToolsCommandBuffer addPurgedHeap:]
  -[MTLToolsCommandBuffer commitAndWaitUntilSubmitted]
  -[MTLToolsCommandBuffer executeSynchronizationNotifications:]
  -[MTLToolsCommandBuffer addPurgedResource:]
  -[MTLToolsCommandBuffer waitUntilCompleted]
  -[MTLToolsCommandBuffer error]
  -[MTLToolsCommandBuffer computeCommandEncoder]
  -[MTLToolsCommandBuffer parallelRenderCommandEncoderWithDescriptor:]
  -[MTLToolsCommandBuffer resourceStateCommandEncoder]
  -[MTLToolsCommandBuffer initWithBaseObject:parent:]
  -[MTLToolsCommandBuffer sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:]
  -[MTLToolsCommandBuffer debugCommandEncoder]
  -[MTLToolsCommandBuffer setResourceGroups:count:]
  -[MTLToolsCommandBuffer dropResourceGroups:count:]
  -[MTLToolsCommandBuffer addRetainedObject:]
  -[MTLToolsCommandBuffer invokeScheduledHandlers]
  -[MTLToolsCommandBuffer invokeCompletedHandlers]
  -[MTLToolsCommandBuffer preScheduledHandlers]
  -[MTLToolsCommandBuffer postScheduledHandlers]
  -[MTLToolsCommandBuffer preCompletionHandlers]
  -[MTLToolsCommandBuffer postCompletionHandlers]
  -[MTLToolsCommandBuffer clearRetainedObjects]
  -[MTLToolsCommandBuffer preCommit]
  -[MTLToolsCommandBuffer unwrapMTLRenderPassDescriptor:]
  -[MTLToolsCommandBuffer setUseRetainedObjectsLock:]
  -[MTLToolsCommandBuffer sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:]
  -[MTLToolsCommandBuffer unwrapMTLComputePassDescriptor:]
  -[MTLToolsCommandBuffer sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:]
  -[MTLToolsCommandBuffer unwrapMTLBlitPassDescriptor:]
  -[MTLToolsCommandBuffer unwrapMTLResourceStatePassDescriptor:]
  -[MTLToolsCommandBuffer sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:]
  -[MTLToolsCommandBuffer retainedObjects]
  -[MTLToolsCommandBuffer willEncodeSignalEvent:value:writeableResources:]
  -[MTLToolsCommandBuffer useRetainedObjectsLock]


MTLToolsCommandEncoder : MTLToolsObject <MTLCommandEncoder>
 @property  MTLToolsCommandBuffer *commandBuffer
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsCommandEncoder pushDebugGroup:]
  -[MTLToolsCommandEncoder label]
  -[MTLToolsCommandEncoder globalTraceObjectID]
  -[MTLToolsCommandEncoder insertDebugSignpost:]
  -[MTLToolsCommandEncoder popDebugGroup]
  -[MTLToolsCommandEncoder endEncoding]
  -[MTLToolsCommandEncoder setLabel:]
  -[MTLToolsCommandEncoder commandBuffer]
  -[MTLToolsCommandEncoder initWithBaseObject:parent:]
  -[MTLToolsCommandEncoder filterCounterRangeWithFirstBatch:lastBatch:filterIndex:]
  -[MTLToolsCommandEncoder addRetainedObject:]


MTLToolsPerfCounterMailbox : NSObject
  // instance methods
  -[MTLToolsPerfCounterMailbox .cxx_construct]
  -[MTLToolsPerfCounterMailbox .cxx_destruct]
  -[MTLToolsPerfCounterMailbox extractDataAndNumSamples:forRequester:isLast:]
  -[MTLToolsPerfCounterMailbox insertData:andNumSamples:forRequester:]


MTLToolsCommandQueue : MTLToolsObject <MTLCommandQueueSPI>
 @property  int backgroundTrackingPID
 @property  unsigned long maxCommandBufferCount
 @property  unsigned long qosLevel
 @property  NSObject<OS_dispatch_queue> *commitQueue
 @property  BOOL commitSynchronously
 @property  NSObject<OS_dispatch_queue> *completionQueue
 @property  BOOL disableCrossQueueHazardTracking
 @property  BOOL skipRender
 @property  BOOL executionEnabled
 @property  BOOL isOpenGLQueue
 @property  BOOL profilingEnabled
 @property  BOOL StatEnabled
 @property  unsigned long StatOptions
 @property  unsigned long StatLocations
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsCommandQueue maxCommandBufferCount]
  -[MTLToolsCommandQueue setStatEnabled:]
  -[MTLToolsCommandQueue isStatEnabled]
  -[MTLToolsCommandQueue disableCrossQueueHazardTracking]
  -[MTLToolsCommandQueue commitSynchronously]
  -[MTLToolsCommandQueue setProfilingEnabled:]
  -[MTLToolsCommandQueue isProfilingEnabled]
  -[MTLToolsCommandQueue skipRender]
  -[MTLToolsCommandQueue insertDebugCaptureBoundary]
  -[MTLToolsCommandQueue commitQueue]
  -[MTLToolsCommandQueue isOpenGLQueue]
  -[MTLToolsCommandQueue label]
  -[MTLToolsCommandQueue setSubmissionQueue:]
  -[MTLToolsCommandQueue qosLevel]
  -[MTLToolsCommandQueue getStatLocations]
  -[MTLToolsCommandQueue completionQueue]
  -[MTLToolsCommandQueue requestCounters:withIndex:]
  -[MTLToolsCommandQueue commandBufferWithUnretainedReferences]
  -[MTLToolsCommandQueue requestCounters:]
  -[MTLToolsCommandQueue getBackgroundGPUPriority]
  -[MTLToolsCommandQueue backgroundTrackingPID]
  -[MTLToolsCommandQueue setCompletionQueue:]
  -[MTLToolsCommandQueue setGPUPriority:offset:]
  -[MTLToolsCommandQueue addPerfSampleHandler:]
  -[MTLToolsCommandQueue setExecutionEnabled:]
  -[MTLToolsCommandQueue executionEnabled]
  -[MTLToolsCommandQueue setGPUPriority:]
  -[MTLToolsCommandQueue setStatLocations:]
  -[MTLToolsCommandQueue setBackgroundTrackingPID:]
  -[MTLToolsCommandQueue getStatOptions]
  -[MTLToolsCommandQueue getGPUPriority]
  -[MTLToolsCommandQueue finish]
  -[MTLToolsCommandQueue setSkipRender:]
  -[MTLToolsCommandQueue setBackgroundGPUPriority:]
  -[MTLToolsCommandQueue dealloc]
  -[MTLToolsCommandQueue setLabel:]
  -[MTLToolsCommandQueue commandBufferWithDescriptor:]
  -[MTLToolsCommandQueue commandBuffer]
  -[MTLToolsCommandQueue setStatOptions:]
  -[MTLToolsCommandQueue setBackgroundGPUPriority:offset:]
  -[MTLToolsCommandQueue availableCounters]
  -[MTLToolsCommandQueue initWithBaseObject:parent:]
  -[MTLToolsCommandQueue getRequestedCounters]
  -[MTLToolsCommandQueue counterInfo]
  -[MTLToolsCommandQueue snapshotPerfSampleHandlerAndStatEnabled:forCommandBuffer:]
  -[MTLToolsCommandQueue getSPIStats]
  -[MTLToolsCommandQueue subdivideCounterList:]


MTLDebugVisibleFunctionTable : MTLToolsVisibleFunctionTable <MTLDebugResourcePurgeable>
 @property  unsigned long functionCount
 @property  unsigned long stage

  // instance methods
  -[MTLDebugVisibleFunctionTable functionCount]
  -[MTLDebugVisibleFunctionTable setFunctions:withRange:]
  -[MTLDebugVisibleFunctionTable setPurgeableState:]
  -[MTLDebugVisibleFunctionTable setFunction:atIndex:]
  -[MTLDebugVisibleFunctionTable dealloc]
  -[MTLDebugVisibleFunctionTable stage]
  -[MTLDebugVisibleFunctionTable initWithBaseObject:parent:]
  -[MTLDebugVisibleFunctionTable lockPurgeableState]
  -[MTLDebugVisibleFunctionTable unlockPurgeableState]
  -[MTLDebugVisibleFunctionTable purgeableStateValidForRendering]
  -[MTLDebugVisibleFunctionTable initWithVisibleFunctionTable:parent:descriptor:stage:]
  -[MTLDebugVisibleFunctionTable initWithVisibleFunctionTable:parent:descriptor:pipelineState:stage:]


MTLToolsDynamicLibrary : MTLToolsObject <MTLDynamicLibrarySPI>
 @property  NSObject<OS_dispatch_data> *binaryData
 @property  NSArray *exportedFunctions
 @property  NSArray *exportedVariables
 @property  NSArray *importedSymbols
 @property  NSArray *importedLibraries
 @property  NSString *libraryPath
 @property  r^{?=[32C]} libraryUUID
 @property  NSArray *relocations
 @property  MTLDebugInstrumentationData *debugInstrumentationData
 @property  BOOL shaderValidationEnabled
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  NSString *installName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsDynamicLibrary importedSymbols]
  -[MTLToolsDynamicLibrary installName]
  -[MTLToolsDynamicLibrary importedLibraries]
  -[MTLToolsDynamicLibrary debugInstrumentationData]
  -[MTLToolsDynamicLibrary label]
  -[MTLToolsDynamicLibrary setDebugInstrumentationData:]
  -[MTLToolsDynamicLibrary formattedDescription:]
  -[MTLToolsDynamicLibrary libraryPath]
  -[MTLToolsDynamicLibrary shaderValidationEnabled]
  -[MTLToolsDynamicLibrary setRelocations:]
  -[MTLToolsDynamicLibrary serializeToURL:error:]
  -[MTLToolsDynamicLibrary dealloc]
  -[MTLToolsDynamicLibrary setLabel:]
  -[MTLToolsDynamicLibrary relocations]
  -[MTLToolsDynamicLibrary device]
  -[MTLToolsDynamicLibrary serializeToURL:options:error:]
  -[MTLToolsDynamicLibrary binaryData]
  -[MTLToolsDynamicLibrary exportedFunctions]
  -[MTLToolsDynamicLibrary exportedVariables]
  -[MTLToolsDynamicLibrary libraryUUID]


MTLToolsBinaryArchive : MTLToolsObject <MTLBinaryArchiveSPI>
 @property  unsigned long options
 @property  NSArray *keys
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsBinaryArchive keys]
  -[MTLToolsBinaryArchive label]
  -[MTLToolsBinaryArchive options]
  -[MTLToolsBinaryArchive formattedDescription:]
  -[MTLToolsBinaryArchive serializeToURL:error:]
  -[MTLToolsBinaryArchive setLabel:]
  -[MTLToolsBinaryArchive device]
  -[MTLToolsBinaryArchive addComputePipelineFunctionsWithDescriptor:options:error:]
  -[MTLToolsBinaryArchive storeComputePipelineDescriptor:]
  -[MTLToolsBinaryArchive addRenderPipelineFunctionsWithDescriptor:options:error:]
  -[MTLToolsBinaryArchive storeRenderPipelineDescriptor:]
  -[MTLToolsBinaryArchive addTileRenderPipelineFunctionsWithDescriptor:options:error:]
  -[MTLToolsBinaryArchive storeTileRenderPipelineDescriptor:]
  -[MTLToolsBinaryArchive serializeToURL:options:error:]
  -[MTLToolsBinaryArchive addComputePipelineFunctionsWithDescriptor:error:]
  -[MTLToolsBinaryArchive addRenderPipelineFunctionsWithDescriptor:error:]
  -[MTLToolsBinaryArchive addTileRenderPipelineFunctionsWithDescriptor:error:]
  -[MTLToolsBinaryArchive addFunctionWithDescriptor:library:error:]
  -[MTLToolsBinaryArchive addBinaryEntry:forKey:]
  -[MTLToolsBinaryArchive getBinaryDataForKey:]
  -[MTLToolsBinaryArchive addArchiveEntry:forKey:]
  -[MTLToolsBinaryArchive getArchiveDataForKey:]
  -[MTLToolsBinaryArchive addLibraryWithDescriptor:error:]
  -[MTLToolsBinaryArchive pipelineCollection]
  -[MTLToolsBinaryArchive enumerateArchivesFromBackingFile:]
  -[MTLToolsBinaryArchive enumerateArchivesFromPipelineCollection:]


MTLToolsHeap : MTLToolsObject <MTLHeapSPI>
 @property  unsigned long unfilteredResourceOptions
 @property  unsigned long gpuAddress
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long storageMode
 @property  unsigned long cpuCacheMode
 @property  unsigned long hazardTrackingMode
 @property  unsigned long resourceOptions
 @property  unsigned long size
 @property  unsigned long usedSize
 @property  unsigned long currentAllocatedSize
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsHeap label]
  -[MTLToolsHeap hazardTrackingMode]
  -[MTLToolsHeap cpuCacheMode]
  -[MTLToolsHeap gpuAddress]
  -[MTLToolsHeap formattedDescription:]
  -[MTLToolsHeap currentAllocatedSize]
  -[MTLToolsHeap resourceOptions]
  -[MTLToolsHeap unfilteredResourceOptions]
  -[MTLToolsHeap storageMode]
  -[MTLToolsHeap setPurgeableState:]
  -[MTLToolsHeap type]
  -[MTLToolsHeap newBufferWithLength:options:]
  -[MTLToolsHeap newTextureWithDescriptor:]
  -[MTLToolsHeap usedSize]
  -[MTLToolsHeap size]
  -[MTLToolsHeap setLabel:]
  -[MTLToolsHeap maxAvailableSizeWithAlignment:]
  -[MTLToolsHeap newBufferWithLength:options:offset:]
  -[MTLToolsHeap newTextureWithDescriptor:offset:]
  -[MTLToolsHeap _newToolsBuffer:]
  -[MTLToolsHeap _newToolsTexture:]
  -[MTLToolsHeap notifyResourceReleasing:]


MTLToolsComputeCommandEncoder : MTLToolsCommandEncoder <MTLComputeCommandEncoderSPI>
 @property  unsigned long dispatchType
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsComputeCommandEncoder memoryBarrierWithScope:]
  -[MTLToolsComputeCommandEncoder setBuffer:offset:atIndex:]
  -[MTLToolsComputeCommandEncoder useResources:count:usage:]
  -[MTLToolsComputeCommandEncoder sampleCountersInBuffer:atSampleIndex:withBarrier:]
  -[MTLToolsComputeCommandEncoder setVisibleFunctionTable:atBufferIndex:]
  -[MTLToolsComputeCommandEncoder useHeaps:count:]
  -[MTLToolsComputeCommandEncoder setAccelerationStructure:atBufferIndex:]
  -[MTLToolsComputeCommandEncoder setIntersectionFunctionTable:atBufferIndex:]
  -[MTLToolsComputeCommandEncoder updateFence:]
  -[MTLToolsComputeCommandEncoder setBytes:length:atIndex:]
  -[MTLToolsComputeCommandEncoder setSamplerState:atIndex:]
  -[MTLToolsComputeCommandEncoder dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:]
  -[MTLToolsComputeCommandEncoder setComputePipelineState:]
  -[MTLToolsComputeCommandEncoder useHeap:]
  -[MTLToolsComputeCommandEncoder useResource:usage:]
  -[MTLToolsComputeCommandEncoder executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:]
  -[MTLToolsComputeCommandEncoder setTexture:atIndex:]
  -[MTLToolsComputeCommandEncoder setIntersectionFunctionTables:withBufferRange:]
  -[MTLToolsComputeCommandEncoder setThreadgroupMemoryLength:atIndex:]
  -[MTLToolsComputeCommandEncoder setBuffers:offsets:withRange:]
  -[MTLToolsComputeCommandEncoder executeCommandsInBuffer:withRange:]
  -[MTLToolsComputeCommandEncoder memoryBarrierWithResources:count:]
  -[MTLToolsComputeCommandEncoder dispatchThreadgroups:threadsPerThreadgroup:]
  -[MTLToolsComputeCommandEncoder setVisibleFunctionTables:withBufferRange:]
  -[MTLToolsComputeCommandEncoder waitForFence:]
  -[MTLToolsComputeCommandEncoder setTextures:withRange:]
  -[MTLToolsComputeCommandEncoder setBufferOffset:atIndex:]
  -[MTLToolsComputeCommandEncoder setSamplerStates:withRange:]
  -[MTLToolsComputeCommandEncoder setSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLToolsComputeCommandEncoder setSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLToolsComputeCommandEncoder setImageblockWidth:height:]
  -[MTLToolsComputeCommandEncoder setStageInRegion:]
  -[MTLToolsComputeCommandEncoder setStageInRegionWithIndirectBuffer:indirectBufferOffset:]
  -[MTLToolsComputeCommandEncoder dispatchThreads:threadsPerThreadgroup:]
  -[MTLToolsComputeCommandEncoder dispatchType]
  -[MTLToolsComputeCommandEncoder dispatchThreadsWithIndirectBuffer:indirectBufferOffset:]
  -[MTLToolsComputeCommandEncoder newKernelDebugInfo]
  -[MTLToolsComputeCommandEncoder enableNullBufferBinds:]
  -[MTLToolsComputeCommandEncoder useResourceGroup:usage:]
  -[MTLToolsComputeCommandEncoder insertCompressedTextureReinterpretationFlush]
  -[MTLToolsComputeCommandEncoder encodeStartDoWhile]
  -[MTLToolsComputeCommandEncoder encodeEndDoWhile:offset:comparison:referenceValue:]
  -[MTLToolsComputeCommandEncoder encodeStartWhile:offset:comparison:referenceValue:]
  -[MTLToolsComputeCommandEncoder encodeEndWhile]
  -[MTLToolsComputeCommandEncoder encodeStartIf:offset:comparison:referenceValue:]
  -[MTLToolsComputeCommandEncoder encodeStartElse]
  -[MTLToolsComputeCommandEncoder encodeEndIf]
  -[MTLToolsComputeCommandEncoder insertUncompressedToCompressedFlush]
  -[MTLToolsComputeCommandEncoder initWithComputeCommandEncoder:parent:descriptor:]
  -[MTLToolsComputeCommandEncoder setImageBlockWidth:height:]


MTLGPUDebugImageData : NSObject
 @property  NSString *loadedImageName
 @property  int imageType
 @property  MTLDebugInstrumentationData *debugInstrumentationData
 @property  unsigned long functionType
 @property  MTLGPUDebugFunction *function
 @property  MTLGPUDebugDynamicLibrary *dynamicLibrary

  // instance methods
  -[MTLGPUDebugImageData debugInstrumentationData]
  -[MTLGPUDebugImageData functionType]
  -[MTLGPUDebugImageData imageType]
  -[MTLGPUDebugImageData .cxx_construct]
  -[MTLGPUDebugImageData .cxx_destruct]
  -[MTLGPUDebugImageData function]
  -[MTLGPUDebugImageData dealloc]
  -[MTLGPUDebugImageData initWithFunction:]
  -[MTLGPUDebugImageData _applyImageIDRelocation:]
  -[MTLGPUDebugImageData initWithFunction:debugInstrumentationData:]
  -[MTLGPUDebugImageData _applyConstantRelocation:]
  -[MTLGPUDebugImageData _applyConstantRelocation]
  -[MTLGPUDebugImageData initWithDynamicLibrary:]
  -[MTLGPUDebugImageData setConstantData:]
  -[MTLGPUDebugImageData loadedImageName]
  -[MTLGPUDebugImageData dynamicLibrary]


MTLToolsAccelerationStructureCommandEncoder : MTLToolsCommandEncoder <MTLAccelerationStructureCommandEncoderSPI>
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsAccelerationStructureCommandEncoder useResources:count:usage:]
  -[MTLToolsAccelerationStructureCommandEncoder sampleCountersInBuffer:atSampleIndex:withBarrier:]
  -[MTLToolsAccelerationStructureCommandEncoder useHeaps:count:]
  -[MTLToolsAccelerationStructureCommandEncoder updateFence:]
  -[MTLToolsAccelerationStructureCommandEncoder useHeap:]
  -[MTLToolsAccelerationStructureCommandEncoder useResource:usage:]
  -[MTLToolsAccelerationStructureCommandEncoder waitForFence:]
  -[MTLToolsAccelerationStructureCommandEncoder buildAccelerationStructure:descriptor:scratchBuffer:scratchBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder refitAccelerationStructure:descriptor:destination:scratchBuffer:scratchBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder copyAccelerationStructure:toAccelerationStructure:]
  -[MTLToolsAccelerationStructureCommandEncoder writeCompactedAccelerationStructureSize:toBuffer:offset:]
  -[MTLToolsAccelerationStructureCommandEncoder writeCompactedAccelerationStructureSize:toBuffer:offset:sizeDataType:]
  -[MTLToolsAccelerationStructureCommandEncoder copyAndCompactAccelerationStructure:toAccelerationStructure:]
  -[MTLToolsAccelerationStructureCommandEncoder writeSerializedAccelerationStructureSize:toBuffer:sizeBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder writeDeserializedAccelerationStructureSize:serializedOffset:toBuffer:sizeBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder writeDeserializedPrimitiveAccelerationStructureSizes:serializedOffset:toBuffer:sizesBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder serializePrimitiveAccelerationStructure:toBuffer:serializedBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder serializeInstanceAccelerationStructure:primitiveAccelerationStructures:toBuffer:serializedBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder deserializePrimitiveAccelerationStructure:fromBuffer:serializedBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder deserializeInstanceAccelerationStructure:primitiveAccelerationStructures:fromBuffer:serializedBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder serializeAccelerationStructure:toBuffer:serializedBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder deserializeAccelerationStructure:fromBuffer:serializedBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder deserializeAccelerationStructure:primitiveAccelerationStructures:fromBuffer:serializedBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder writeGeometrySizeOfAccelerationStructure:toBuffer:sizeBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder writeGeometryOfAccelerationStructure:toBuffer:geometryBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder deserializePrimitiveAccelerationStructure:fromBuffer:serializedBufferOffset:withDescriptor:]
  -[MTLToolsAccelerationStructureCommandEncoder deserializeInstanceAccelerationStructure:primitiveAccelerationStructures:fromBuffer:serializedBufferOffset:withDescriptor:]
  -[MTLToolsAccelerationStructureCommandEncoder writeGenericBVHStructureSizesOfAccelerationStructure:into:]
  -[MTLToolsAccelerationStructureCommandEncoder writeGenericBVHStructureOfAccelerationStructure:into:]
  -[MTLToolsAccelerationStructureCommandEncoder writeGenericBVHStructureSizesOfAccelerationStructure:toBuffer:sizesBufferOffset:]
  -[MTLToolsAccelerationStructureCommandEncoder writeGenericBVHStructureOfAccelerationStructure:headerBuffer:headerBufferOffset:innerNodeBuffer:innerNodeBufferOffset:leafNodeBuffer:leafNodeBufferOffset:primitiveBuffer:primitiveBufferOffset:geometryBuffer:geometryOffset:instanceTransformBuffer:instanceTransformOffset:]


MTLToolsComputePipelineState : MTLToolsObject <MTLComputePipelineStateSPI>
 @property  long long textureWriteRoundingMode
 @property  unsigned long staticThreadgroupMemoryLength
 @property  unsigned long resourceIndex
 @property  unsigned long gpuAddress
 @property  unsigned long allocatedSize
 @property  unsigned long uniqueIdentifier
 @property  MTLDebugInstrumentationData *debugInstrumentationData
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long maxTotalThreadsPerThreadgroup
 @property  unsigned long threadExecutionWidth
 @property  BOOL supportIndirectCommandBuffers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsComputePipelineState textureWriteRoundingMode]
  -[MTLToolsComputePipelineState debugInstrumentationData]
  -[MTLToolsComputePipelineState supportIndirectCommandBuffers]
  -[MTLToolsComputePipelineState label]
  -[MTLToolsComputePipelineState imageblockMemoryLengthForDimensions:]
  -[MTLToolsComputePipelineState functionPointerHandlesWithFunctions:range:]
  -[MTLToolsComputePipelineState newIntersectionFunctionTableWithDescriptor:]
  -[MTLToolsComputePipelineState uniqueIdentifier]
  -[MTLToolsComputePipelineState functionHandleWithFunction:]
  -[MTLToolsComputePipelineState functionPointerHandleWithFunction:]
  -[MTLToolsComputePipelineState gpuAddress]
  -[MTLToolsComputePipelineState resourceIndex]
  -[MTLToolsComputePipelineState maxTotalThreadsPerThreadgroup]
  -[MTLToolsComputePipelineState allocatedSize]
  -[MTLToolsComputePipelineState getComputeKernelTelemetryID]
  -[MTLToolsComputePipelineState staticThreadgroupMemoryLength]
  -[MTLToolsComputePipelineState newComputePipelineStateWithAdditionalBinaryFunctions:error:]
  -[MTLToolsComputePipelineState newVisibleFunctionTableWithDescriptor:]
  -[MTLToolsComputePipelineState threadExecutionWidth]
  -[MTLToolsComputePipelineState dealloc]
  -[MTLToolsComputePipelineState device]
  -[MTLToolsComputePipelineState newComputePipelineStateWithAdditionalBinaryFunctions:]


MTLGPUDebugAccelerationStructure : MTLToolsAccelerationStructure <MTLGPUDebugResource>
 @property  <MTLAccelerationStructure> *baseObject
 @property  unsigned long length
 @property  unsigned long gpuAddress
 @property  int responsibleProcess
 @property  unsigned long allocationID
 @property  unsigned long protectionOptions
 @property  unsigned long unfilteredResourceOptions
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long cpuCacheMode
 @property  unsigned long storageMode
 @property  unsigned long hazardTrackingMode
 @property  unsigned long resourceOptions
 @property  <MTLHeap> *heap
 @property  unsigned long heapOffset
 @property  unsigned long allocatedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLGPUDebugAccelerationStructure gpuAddress]
  -[MTLGPUDebugAccelerationStructure length]
  -[MTLGPUDebugAccelerationStructure handleForOffset:]
  -[MTLGPUDebugAccelerationStructure _setupIdentifier]
  -[MTLGPUDebugAccelerationStructure initWithAccelerationStructure:parent:]


MTLGPUDebugBuffer : MTLToolsBuffer <MTLGPUDebugResource>
 @property  unsigned long offset
 @property  unsigned long gpuAddress
 @property  <MTLBuffer> *baseObject
 @property  unsigned long bufferIndex
 @property  BOOL isTracked
 @property  unsigned long length
 @property  int responsibleProcess
 @property  unsigned long allocationID
 @property  unsigned long protectionOptions
 @property  unsigned long unfilteredResourceOptions
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long cpuCacheMode
 @property  unsigned long storageMode
 @property  unsigned long hazardTrackingMode
 @property  unsigned long resourceOptions
 @property  <MTLHeap> *heap
 @property  unsigned long heapOffset
 @property  unsigned long allocatedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLGPUDebugBuffer bufferIndex]
  -[MTLGPUDebugBuffer contents]
  -[MTLGPUDebugBuffer newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:]
  -[MTLGPUDebugBuffer gpuAddress]
  -[MTLGPUDebugBuffer offset]
  -[MTLGPUDebugBuffer setBufferIndex:]
  -[MTLGPUDebugBuffer length]
  -[MTLGPUDebugBuffer newTextureWithDescriptor:offset:bytesPerRow:]
  -[MTLGPUDebugBuffer dealloc]
  -[MTLGPUDebugBuffer isTracked]
  -[MTLGPUDebugBuffer handleForOffset:]
  -[MTLGPUDebugBuffer initWithBuffer:device:offset:length:track:]
  -[MTLGPUDebugBuffer initWithBuffer:heap:device:offset:length:track:]
  -[MTLGPUDebugBuffer initWithBuffer:device:]
  -[MTLGPUDebugBuffer initWithBuffer:device:offset:length:]
  -[MTLGPUDebugBuffer initWithBuffer:heap:device:]


MTLToolsDepthStencilState : MTLToolsObject <MTLDepthStencilStateSPI>
 @property  BOOL readsDepth
 @property  BOOL writesDepth
 @property  BOOL readsStencil
 @property  BOOL writesStencil
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsDepthStencilState label]
  -[MTLToolsDepthStencilState dealloc]
  -[MTLToolsDepthStencilState device]
  -[MTLToolsDepthStencilState readsDepth]
  -[MTLToolsDepthStencilState writesDepth]
  -[MTLToolsDepthStencilState readsStencil]
  -[MTLToolsDepthStencilState writesStencil]
  -[MTLToolsDepthStencilState initWithDepthStencilState:descriptor:device:]


MTLToolsIndirectComputeCommand : MTLToolsObject <MTLIndirectComputeCommandSPI>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsIndirectComputeCommand reset]
  -[MTLToolsIndirectComputeCommand setComputePipelineState:]
  -[MTLToolsIndirectComputeCommand setThreadgroupMemoryLength:atIndex:]
  -[MTLToolsIndirectComputeCommand setImageblockWidth:height:]
  -[MTLToolsIndirectComputeCommand setStageInRegion:]
  -[MTLToolsIndirectComputeCommand getCommandType]
  -[MTLToolsIndirectComputeCommand getOptimizedStatus]
  -[MTLToolsIndirectComputeCommand getPipelineStateUniqueIdentifier]
  -[MTLToolsIndirectComputeCommand setKernelBuffer:offset:atIndex:]
  -[MTLToolsIndirectComputeCommand concurrentDispatchThreadgroups:threadsPerThreadgroup:]
  -[MTLToolsIndirectComputeCommand concurrentDispatchThreads:threadsPerThreadgroup:]
  -[MTLToolsIndirectComputeCommand setBarrier]
  -[MTLToolsIndirectComputeCommand clearBarrier]
  -[MTLToolsIndirectComputeCommand getKernelBufferAtIndex:]
  -[MTLToolsIndirectComputeCommand dispatchThreadgroupsArguments]
  -[MTLToolsIndirectComputeCommand dispatchThreadsArguments]
  -[MTLToolsIndirectComputeCommand getThreadgroupMemoryLengthAtIndex:]
  -[MTLToolsIndirectComputeCommand getStageInRegion]
  -[MTLToolsIndirectComputeCommand hasBarrier]
  -[MTLToolsIndirectComputeCommand getImageBlockSize]


MTLGPUDebugDevice : MTLToolsDevice
 @property  <MTLRenderPipelineState> *ICB_Inherit_PSO_VertexPipelineState
 @property  <MTLRenderPipelineState> *ICB_Inherit_None_VertexPipelineState
 @property  <MTLRenderPipelineState> *ICB_Inherit_Buffers_VertexPipelineState
 @property  <MTLDepthStencilState> *ICB_DepthStencilState
 @property  <MTLComputePipelineState> *ICB_Inherit_PSO_ComputePipelineState
 @property  <MTLComputePipelineState> *ICB_Inherit_None_ComputePipelineState
 @property  <MTLComputePipelineState> *ICB_Inherit_Buffers_ComputePipelineState
 @property  <MTLComputePipelineState> *ICB_Inherit_Both_ComputePipelineState
 @property  <MTLComputePipelineState> *accelerationStructureComputePipelineState
 @property  BOOL supportsResourceUsageValidation

  // instance methods
  -[MTLGPUDebugDevice supportsForkJoin]
  -[MTLGPUDebugDevice newBinaryArchiveWithDescriptor:error:]
  -[MTLGPUDebugDevice newSharedTextureWithDescriptor:]
  -[MTLGPUDebugDevice newComputePipelineStateWithFunction:completionHandler:]
  -[MTLGPUDebugDevice loadDynamicLibrariesForComputeDescriptor:error:]
  -[MTLGPUDebugDevice supportsArgumentBuffersTier2]
  -[MTLGPUDebugDevice newLibraryWithDescriptor:error:]
  -[MTLGPUDebugDevice newLibraryWithStitchedDescriptorSPI:error:]
  -[MTLGPUDebugDevice newSharedTextureWithHandle:]
  -[MTLGPUDebugDevice newRenderPipelineStateWithDescriptor:error:]
  -[MTLGPUDebugDevice newCommandQueueWithMaxCommandBufferCount:]
  -[MTLGPUDebugDevice newRenderPipelineStateWithDescriptor:completionHandler:]
  -[MTLGPUDebugDevice newLibraryWithData:error:]
  -[MTLGPUDebugDevice newDagStringWithGraphs:]
  -[MTLGPUDebugDevice loadDynamicLibrariesForFunction:insertLibraries:options:error:]
  -[MTLGPUDebugDevice supportsStackOverflowErrorCode]
  -[MTLGPUDebugDevice newComputePipelineStateWithFunction:error:]
  -[MTLGPUDebugDevice newArgumentEncoderWithLayout:]
  -[MTLGPUDebugDevice newDynamicLibrary:computeDescriptor:error:]
  -[MTLGPUDebugDevice newLibraryWithSource:options:error:]
  -[MTLGPUDebugDevice newComputePipelineStateWithDescriptor:options:completionHandler:]
  -[MTLGPUDebugDevice newDynamicLibraryWithURL:options:error:]
  -[MTLGPUDebugDevice newLibraryWithCIFilters:imageFilterFunctionInfo:error:]
  -[MTLGPUDebugDevice loadDynamicLibrariesForFunction:insertLibraries:error:]
  -[MTLGPUDebugDevice newLibraryWithStitchedDescriptor:error:]
  -[MTLGPUDebugDevice newDefaultLibrary]
  -[MTLGPUDebugDevice newComputePipelineStateWithFunction:options:completionHandler:]
  -[MTLGPUDebugDevice newLibraryWithDescriptorSPI:error:]
  -[MTLGPUDebugDevice loadDynamicLibrariesForComputeDescriptor:options:error:]
  -[MTLGPUDebugDevice newComputePipelineStateWithDescriptor:error:]
  -[MTLGPUDebugDevice newArgumentEncoderWithArguments:]
  -[MTLGPUDebugDevice newCommandQueueWithDescriptor:]
  -[MTLGPUDebugDevice newLibraryWithSource:options:completionHandler:]
  -[MTLGPUDebugDevice newDefaultLibraryWithBundle:error:]
  -[MTLGPUDebugDevice supportsFunctionPointersFromRender]
  -[MTLGPUDebugDevice newRenderPipelineStateWithDescriptor:options:reflection:error:]
  -[MTLGPUDebugDevice supportsSharedFunctionTables]
  -[MTLGPUDebugDevice supportsCMPIndirectCommandBuffers]
  -[MTLGPUDebugDevice supportsRaytracingFromRender]
  -[MTLGPUDebugDevice newComputePipelineStateWithFunction:options:reflection:error:]
  -[MTLGPUDebugDevice newDynamicLibraryFromURL:error:]
  -[MTLGPUDebugDevice newBinaryLibraryWithOptions:url:error:]
  -[MTLGPUDebugDevice supportsRaytracing]
  -[MTLGPUDebugDevice newComputePipelineStateWithDescriptor:completionHandler:]
  -[MTLGPUDebugDevice supportsRenderDynamicLibraries]
  -[MTLGPUDebugDevice newRenderPipelineStateWithTileDescriptor:options:reflection:error:]
  -[MTLGPUDebugDevice newLibraryWithFile:error:]
  -[MTLGPUDebugDevice newLibraryWithDAG:functions:error:]
  -[MTLGPUDebugDevice accelerationStructureSizesWithDescriptor:]
  -[MTLGPUDebugDevice newAccelerationStructureWithBuffer:offset:]
  -[MTLGPUDebugDevice newRenderPipelineStateWithTileDescriptor:options:completionHandler:]
  -[MTLGPUDebugDevice newDynamicLibraryWithURL:error:]
  -[MTLGPUDebugDevice newComputePipelineStateWithDescriptor:options:reflection:error:]
  -[MTLGPUDebugDevice newDynamicLibrary:error:]
  -[MTLGPUDebugDevice newArgumentEncoderWithArguments:structType:]
  -[MTLGPUDebugDevice newRenderPipelineStateWithDescriptor:options:completionHandler:]
  -[MTLGPUDebugDevice newLibraryWithStitchedDescriptor:completionHandler:]
  -[MTLGPUDebugDevice newIntersectionFunctionTableWithDescriptor:]
  -[MTLGPUDebugDevice newAccelerationStructureWithDescriptor:]
  -[MTLGPUDebugDevice newLibraryWithURL:error:]
  -[MTLGPUDebugDevice newLibraryWithDescriptor:completionHandler:]
  -[MTLGPUDebugDevice newCommandQueue]
  -[MTLGPUDebugDevice newAccelerationStructureWithSize:]
  -[MTLGPUDebugDevice newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:]
  -[MTLGPUDebugDevice newAccelerationStructureWithSize:resourceIndex:]
  -[MTLGPUDebugDevice supportsGFXIndirectCommandBuffers]
  -[MTLGPUDebugDevice newHeapWithDescriptor:]
  -[MTLGPUDebugDevice .cxx_construct]
  -[MTLGPUDebugDevice .cxx_destruct]
  -[MTLGPUDebugDevice newIndirectCommandBufferWithDescriptor:maxCommandCount:options:]
  -[MTLGPUDebugDevice newBufferWithBytes:length:options:]
  -[MTLGPUDebugDevice newVisibleFunctionTableWithDescriptor:]
  -[MTLGPUDebugDevice newBufferWithLength:options:]
  -[MTLGPUDebugDevice newTextureWithDescriptor:]
  -[MTLGPUDebugDevice newTextureWithDescriptor:iosurface:plane:]
  -[MTLGPUDebugDevice newBufferWithBytesNoCopy:length:options:deallocator:]
  -[MTLGPUDebugDevice newTextureWithBytesNoCopy:length:descriptor:deallocator:]
  -[MTLGPUDebugDevice newBufferWithIOSurface:]
  -[MTLGPUDebugDevice dealloc]
  -[MTLGPUDebugDevice newBufferWithLength:options:gpuAddress:]
  -[MTLGPUDebugDevice newBufferWithBytes:length:options:gpuAddress:]
  -[MTLGPUDebugDevice newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:]
  -[MTLGPUDebugDevice newBufferWithDescriptor:]
  -[MTLGPUDebugDevice newRenderPipelineStateWithTileDescriptor:error:]
  -[MTLGPUDebugDevice newRenderPipelineStateWithTileDescriptor:completionHandler:]
  -[MTLGPUDebugDevice newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:]
  -[MTLGPUDebugDevice initWithBaseObject:parent:]
  -[MTLGPUDebugDevice modifyFunctionDescriptor:]
  -[MTLGPUDebugDevice getFunctionForBaseObject:library:]
  -[MTLGPUDebugDevice newInternalBufferWithLength:options:]
  -[MTLGPUDebugDevice _modifyPluginData:]
  -[MTLGPUDebugDevice _modifyCompileOptions:]
  -[MTLGPUDebugDevice _prepareBinaryLinkedFunctions:]
  -[MTLGPUDebugDevice _prepareInsertLibraries:]
  -[MTLGPUDebugDevice _modifyRenderPipelineDescriptor:]
  -[MTLGPUDebugDevice _modifyComputePipelineDescriptor:]
  -[MTLGPUDebugDevice _modifyTilePipelineDescriptor:]
  -[MTLGPUDebugDevice unwrapAndModifyRenderPipelineDescriptor:options:]
  -[MTLGPUDebugDevice onRenderPipelineCreated:]
  -[MTLGPUDebugDevice unwrapAndModifyTileRenderPipelineDescriptor:options:]
  -[MTLGPUDebugDevice unwrapAndModifyComputePipelineDescriptor:options:]
  -[MTLGPUDebugDevice onComputePipelineCreated:]
  -[MTLGPUDebugDevice unwrapStitchedLibraryDescriptor:]
  -[MTLGPUDebugDevice validateRaytracing]
  -[MTLGPUDebugDevice newStageBufferArgumentEncoder]
  -[MTLGPUDebugDevice newStageArgumentBuffer]
  -[MTLGPUDebugDevice ICB_Inherit_PSO_VertexPipelineState]
  -[MTLGPUDebugDevice ICB_Inherit_None_VertexPipelineState]
  -[MTLGPUDebugDevice ICB_Inherit_Buffers_VertexPipelineState]
  -[MTLGPUDebugDevice ICB_DepthStencilState]
  -[MTLGPUDebugDevice ICB_Inherit_PSO_ComputePipelineState]
  -[MTLGPUDebugDevice ICB_Inherit_None_ComputePipelineState]
  -[MTLGPUDebugDevice ICB_Inherit_Buffers_ComputePipelineState]
  -[MTLGPUDebugDevice ICB_Inherit_Both_ComputePipelineState]
  -[MTLGPUDebugDevice getDynamicLibraryForBaseObject:]
  -[MTLGPUDebugDevice supportsResourceUsageValidation]
  -[MTLGPUDebugDevice accelerationStructureComputePipelineState]


MTLToolsDevice : MTLToolsObject <MTLDeviceSPI>
 @property  BOOL lowPower
 @property  BOOL headless
 @property  BOOL depth24Stencil8PixelFormatSupported
 @property  BOOL integrated
 @property  unsigned long memorySize
 @property  unsigned long recommendedMaxWorkingSetSize
 @property  BOOL removable
 @property  unsigned long registryID
 @property  BOOL hasUnifiedMemory
 @property  BOOL supportsBufferlessClientStorageTexture
 @property  BOOL supportsComputeMemoryBarrier
 @property  BOOL supportsRenderMemoryBarrier
 @property  BOOL supportsArgumentBuffersTier2
 @property  BOOL supportsReadWriteTextureArgumentsTier2
 @property  BOOL supportsStreamingCodecSignaling
 @property  BOOL supportsProgrammableSamplePositions
 @property  BOOL supportsLargeFramebufferConfigs
 @property  BOOL supportsCustomBorderColor
 @property  BOOL supportsSamplerAddressModeClampToHalfBorder
 @property  BOOL supportsBCTextureCompression
 @property  BOOL supports3DBCTextures
 @property  BOOL supportsRGBA10A2Gamma
 @property  BOOL supportsPrimitiveRestartOverride
 @property  BOOL supportsGlobalVariableRelocation
 @property  BOOL supportsGlobalVariableRelocationRender
 @property  BOOL supportsGlobalVariableRelocationCompute
 @property  BOOL supportsTLS
 @property  BOOL supports32bpcMSAATextures
 @property  BOOL supports32BitMSAA
 @property  BOOL supports32BitFloatFiltering
 @property  BOOL supportsQueryTextureLOD
 @property  BOOL supportsVertexAmplification
 @property  BOOL supportsPlacementHeaps
 @property  BOOL supportsOpenCLTextureWriteSwizzles
 @property  BOOL supportsPullModelInterpolation
 @property  BOOL supportsInt64
 @property  BOOL supportsFixedLinePointFillDepthGradient
 @property  BOOL supportsLateEvalEvent
 @property  BOOL supportsNonZeroTextureWriteLOD
 @property  BOOL supportsSharedTextureHandles
 @property  BOOL supportsBufferPrefetchStatistics
 @property  BOOL supportsLimitedYUVFormats
 @property  BOOL supportsNonPrivateDepthStencilTextures
 @property  BOOL supportsNonPrivateMSAATextures
 @property  BOOL supportsSharedStorageHeapResources
 @property  BOOL supportsSharedStorageTextures
 @property  BOOL supportsLinearTextureFromSharedBuffer
 @property  BOOL supportsPipelineLibraries
 @property  BOOL supportsFragmentOnlyEncoders
 @property  BOOL supportsBufferWithIOSurface
 @property  BOOL supportsProgrammableBlending
 @property  BOOL supportsRenderToLinearTextures
 @property  BOOL supportsMemorylessRenderTargets
 @property  BOOL supportsFastMathInfNaNPropagation
 @property  BOOL supportsInvariantVertexPosition
 @property  BOOL supportsShaderLODAverage
 @property  BOOL supportsRelaxedTextureViewRequirements
 @property  BOOL supportsSeparateDepthStencil
 @property  BOOL supportsGPUStatistics
 @property  BOOL supportsCompressedTextureViewSPI
 @property  BOOL supportsRenderTargetTextureRotation
 @property  BOOL supportsDynamicControlPointCount
 @property  BOOL supportsIABHashForTools
 @property  BOOL supportsBinaryArchives
 @property  BOOL supportsBinaryLibraries
 @property  BOOL supportsASTCTextureCompression
 @property  BOOL supportsExtendedYUVFormats
 @property  BOOL supportsPublicXR10Formats
 @property  BOOL supportsSRGBwrites
 @property  BOOL supportsDepthClipMode
 @property  BOOL supportsPacked32TextureBufferWrites
 @property  BOOL supports3DASTCTextures
 @property  BOOL supportsExtendedXR10Formats
 @property  BOOL supportsFragmentBufferWrites
 @property  BOOL supportsCountingOcclusionQuery
 @property  BOOL supportsBaseVertexInstanceDrawing
 @property  BOOL supportsIndirectDrawAndDispatch
 @property  BOOL supportsTessellation
 @property  BOOL supportsReadWriteBufferArguments
 @property  BOOL supportsArrayOfTextures
 @property  BOOL supportsArrayOfSamplers
 @property  BOOL supportsCombinedMSAAStoreAndResolveAction
 @property  BOOL supportsMutableTier1ArgumentBuffers
 @property  BOOL supportsSamplerCompareFunction
 @property  BOOL supportsMSAADepthResolve
 @property  BOOL supportsMSAAStencilResolve
 @property  BOOL supportsMSAADepthResolveFilter
 @property  BOOL supportsGFXIndirectCommandBuffers
 @property  BOOL supportsCMPIndirectCommandBuffers
 @property  BOOL supportsIndirectStageInRegion
 @property  BOOL supportsIndirectTextures
 @property  BOOL supportsNorm16BCubicFiltering
 @property  BOOL supportsTextureOutOfBoundsReads
 @property  BOOL supportsTextureSwizzle
 @property  BOOL supportsAlphaYUVFormats
 @property  BOOL supportsMemoryOrderAtomics
 @property  BOOL supportsQuadGroup
 @property  BOOL supportsRenderTextureWrites
 @property  BOOL supportsImageBlocks
 @property  BOOL supportsTileShaders
 @property  BOOL supportsImageBlockSampleCoverageControl
 @property  BOOL supportsNativeHardwareFP16
 @property  BOOL supportsPostDepthCoverage
 @property  BOOL supportsMipLevelsSmallerThanBlockSize
 @property  BOOL supportsNonUniformThreadgroupSize
 @property  BOOL supportsReadWriteTextureArguments
 @property  BOOL supportsReadWriteTextureCubeArguments
 @property  BOOL supportsTextureCubeArray
 @property  BOOL supportsQuadShufflesAndBroadcast
 @property  BOOL supportsConcurrentComputeDispatch
 @property  BOOL supportsRenderPassWithoutRenderTarget
 @property  BOOL supportsRasterOrderGroups
 @property  BOOL supportsRasterOrderGroupsColorAttachment
 @property  BOOL supportsLinearTexture2DArray
 @property  BOOL supportsNonSquareTileShaders
 @property  BOOL supportsSeparateVisibilityAndShadingRate
 @property  BOOL supports2DLinearTexArraySPI
 @property  BOOL supportsLayeredRendering
 @property  BOOL supportsViewportAndScissorArray
 @property  BOOL supportsIndirectTessellation
 @property  BOOL supportsMSAAStencilResolveFilter
 @property  BOOL supportsStencilFeedback
 @property  BOOL supportsFP32TessFactors
 @property  BOOL supportsUnalignedVertexFetch
 @property  BOOL supportsSIMDGroup
 @property  BOOL supportsShaderMinLODClamp
 @property  BOOL supportsSIMDShufflesAndBroadcast
 @property  BOOL supportsWritableArrayOfTextures
 @property  BOOL supportsVariableRateRasterization
 @property  BOOL supportsYCBCRFormats
 @property  BOOL supportsYCBCRFormatsPQ
 @property  BOOL supportsYCBCRFormats12
 @property  BOOL supportsYCBCRFormatsXR
 @property  BOOL supportsASTCHDRTextureCompression
 @property  BOOL supportsSparseTextures
 @property  BOOL supportsSparseHeaps
 @property  BOOL supportsIndirectWritableTextures
 @property  BOOL supportsFunctionPointers
 @property  BOOL supportsDynamicLibraries
 @property  BOOL supportsStatefulDynamicLibraries
 @property  BOOL supportsRenderDynamicLibraries
 @property  BOOL supportsFunctionPointersFromRender
 @property  BOOL supportsSharedFunctionTables
 @property  BOOL supportsRaytracingFromRender
 @property  BOOL supportsPrimitiveMotionBlur
 @property  BOOL supportsShaderBarycentricCoordinates
 @property  BOOL supportsBlackOrWhiteSamplerBorderColors
 @property  BOOL supportsMirrorClampToEdgeSamplerMode
 @property  BOOL supportsSIMDReduction
 @property  BOOL supportsDepthClipModeClampExtended
 @property  BOOL supportsTexture2DMultisampleArray
 @property  BOOL supportsForceSeamsOnCubemaps
 @property  BOOL supportsFloat16BCubicFiltering
 @property  BOOL supportsFloat16InfNanFiltering
 @property  BOOL supportsRTZRounding
 @property  BOOL supportsAnisoSampleFix
 @property  BOOL supportsYCBCRPackedFormatsPQ
 @property  BOOL supportsYCBCRPackedFormats12
 @property  BOOL supportsYCBCRPackedFormatsXR
 @property  BOOL supportsBufferBoundsChecking
 @property  BOOL supportsForkJoin
 @property  BOOL supportsDevicePartitioning
 @property  BOOL supportsComputeCompressedTextureWrite
 @property  BOOL supportsSIMDGroupMatrix
 @property  BOOL supportsInterchangeTiled
 @property  BOOL supportsQuadReduction
 @property  BOOL supportsSIMDShuffleAndFill
 @property  BOOL supportsBfloat16Format
 @property  BOOL supportsSparseDepthAttachments
 @property  BOOL supportsAtomicUlongVoidMinMax
 @property  BOOL supportsLossyCompression
 @property  BOOL supportsCommandBufferJump
 @property  BOOL supportsStackOverflowErrorCode
 @property  unsigned long deviceCreationFlags
 @property  BOOL gpuAssertionsEnabled
 @property  unsigned long commandBufferErrorOptions
 @property  BOOL BCTextureCompressionSupported
 @property  r^{MTLTargetDeviceArch=QI*} targetDeviceInfo
 @property  MTLTargetDeviceArchitecture *targetDeviceArchitecture
 @property  BOOL shaderDebugInfoCaching
 @property  unsigned long halfFPConfig
 @property  unsigned long singleFPConfig
 @property  unsigned long doubleFPConfig
 @property  BOOL metalAssertionsEnabled
 @property  unsigned long featureProfile
 @property  r^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ} limits
 @property  unsigned long maxFramebufferStorageBits
 @property  unsigned long linearTextureArrayAlignmentBytes
 @property  unsigned long linearTextureArrayAlignmentSlice
 @property  unsigned long maxTileBuffers
 @property  unsigned long maxTileTextures
 @property  unsigned long maxTileSamplers
 @property  unsigned long maxTileInlineDataSize
 @property  unsigned long minTilePixels
 @property  unsigned long maxColorAttachments
 @property  unsigned long maxVertexAttributes
 @property  unsigned long maxVertexBuffers
 @property  unsigned long maxVertexTextures
 @property  unsigned long maxVertexSamplers
 @property  unsigned long maxVertexInlineDataSize
 @property  unsigned long maxInterpolants
 @property  unsigned long maxFragmentBuffers
 @property  unsigned long maxFragmentTextures
 @property  unsigned long maxFragmentSamplers
 @property  unsigned long maxFragmentInlineDataSize
 @property  unsigned long maxComputeBuffers
 @property  unsigned long maxComputeTextures
 @property  unsigned long maxComputeSamplers
 @property  unsigned long maxComputeInlineDataSize
 @property  unsigned long maxComputeLocalMemorySizes
 @property  unsigned long maxTotalComputeThreadsPerThreadgroup
 @property  unsigned long maxComputeThreadgroupMemory
 @property  float maxLineWidth
 @property  float maxPointSize
 @property  unsigned long maxVisibilityQueryOffset
 @property  unsigned long minConstantBufferAlignmentBytes
 @property  unsigned long minBufferNoCopyAlignmentBytes
 @property  unsigned long maxTextureWidth1D
 @property  unsigned long maxTextureWidth2D
 @property  unsigned long maxTextureHeight2D
 @property  unsigned long maxTextureWidth3D
 @property  unsigned long maxTextureHeight3D
 @property  unsigned long maxTextureDepth3D
 @property  unsigned long maxTextureDimensionCube
 @property  unsigned long maxTextureLayers
 @property  unsigned long linearTextureAlignmentBytes
 @property  unsigned long iosurfaceTextureAlignmentBytes
 @property  unsigned long iosurfaceReadOnlyTextureAlignmentBytes
 @property  unsigned long deviceLinearTextureAlignmentBytes
 @property  unsigned long deviceLinearReadOnlyTextureAlignmentBytes
 @property  unsigned long maxFunctionConstantIndices
 @property  unsigned long maxComputeThreadgroupMemoryAlignmentBytes
 @property  unsigned long maxInterpolatedComponents
 @property  unsigned long maxTessellationFactor
 @property  unsigned long maxIndirectBuffers
 @property  unsigned long maxIndirectTextures
 @property  unsigned long maxIndirectSamplers
 @property  unsigned long maxIndirectSamplersPerDevice
 @property  unsigned long maxFenceInstances
 @property  unsigned long maxViewportCount
 @property  unsigned long maxCustomSamplePositions
 @property  unsigned long maxVertexAmplificationFactor
 @property  unsigned long maxVertexAmplificationCount
 @property  unsigned long maxTextureBufferWidth
 @property  unsigned long maxComputeAttributes
 @property  unsigned long maxPredicatedNestingDepth
 @property  unsigned long maxConstantBufferArguments
 @property  unsigned int acceleratorPort
 @property  BOOL supportPriorityBand
 @property  unsigned long sharedMemorySize
 @property  unsigned long dedicatedMemorySize
 @property  {IndirectArgumentBufferCapabilities=b1b1b1b29} indirectArgumentBufferCapabilities
 @property  BOOL quadDataSharingSupported
 @property  unsigned long sparseTexturesSupport
 @property  BOOL float32FilteringSupported
 @property  BOOL msaa32bSupported
 @property  BOOL RTZRoundingSupported
 @property  long long defaultTextureWriteRoundingMode
 @property  BOOL AnisoSampleFixSupported
 @property  BOOL FixedLinePointFillDepthGradientSupported
 @property  BOOL largeMRTSupported
 @property  unsigned long maxRasterizationRateLayerCount
 @property  BOOL RGB10A2GammaSupported
 @property  BOOL CustomBorderColorSupported
 @property  BOOL ClampToHalfBorderSupported
 @property  BOOL placementHeapSupported
 @property  MTLGPUBVHBuilder *GPUBVHBuilder
 @property  BOOL requiresRaytracingEmulation
 @property  NSDictionary *pluginData
 @property  NSString *name
 @property  {?=QQQ} maxThreadsPerThreadgroup
 @property  unsigned long readWriteTextureSupport
 @property  unsigned long argumentBuffersSupport
 @property  BOOL rasterOrderGroupsSupported
 @property  BOOL barycentricCoordsSupported
 @property  unsigned long currentAllocatedSize
 @property  unsigned long maxThreadgroupMemoryLength
 @property  unsigned long maxArgumentBufferSamplerCount
 @property  BOOL programmableSamplePositionsSupported
 @property  unsigned long sparseTileSizeInBytes
 @property  unsigned long maxBufferLength
 @property  NSArray *counterSets
 @property  BOOL supportsRaytracing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MTLToolsDevice registerDevices]
  +[MTLToolsDevice newTextureDescriptorFromIOSurfaceProperties:]
  +[MTLToolsDevice newTextureDescriptorFromIOSurface:]

  // instance methods
  -[MTLToolsDevice getDefaultSamplePositions:count:]
  -[MTLToolsDevice supportsForkJoin]
  -[MTLToolsDevice supportsPrimitiveRestartOverride]
  -[MTLToolsDevice maxVertexTextures]
  -[MTLToolsDevice maxIndirectTextures]
  -[MTLToolsDevice getShaderCacheKeys]
  -[MTLToolsDevice isRGB10A2GammaSupported]
  -[MTLToolsDevice newBinaryArchiveWithDescriptor:error:]
  -[MTLToolsDevice supportsOpenCLTextureWriteSwizzles]
  -[MTLToolsDevice maxPointSize]
  -[MTLToolsDevice supportsFastMathInfNaNPropagation]
  -[MTLToolsDevice maxVertexBuffers]
  -[MTLToolsDevice newFence]
  -[MTLToolsDevice supportsExtendedXR10Formats]
  -[MTLToolsDevice newSharedTextureWithDescriptor:]
  -[MTLToolsDevice newPipelineLibraryWithFilePath:error:]
  -[MTLToolsDevice maxPredicatedNestingDepth]
  -[MTLToolsDevice supportsCountingOcclusionQuery]
  -[MTLToolsDevice newComputePipelineStateWithFunction:completionHandler:]
  -[MTLToolsDevice supportsLossyCompression]
  -[MTLToolsDevice supportsDepthClipMode]
  -[MTLToolsDevice supportsVertexAmplification]
  -[MTLToolsDevice isClampToHalfBorderSupported]
  -[MTLToolsDevice loadDynamicLibrariesForComputeDescriptor:error:]
  -[MTLToolsDevice supportsYCBCRPackedFormatsXR]
  -[MTLToolsDevice supportsFP32TessFactors]
  -[MTLToolsDevice iosurfaceReadOnlyTextureAlignmentBytes]
  -[MTLToolsDevice maxVertexAttributes]
  -[MTLToolsDevice serializeRenderPipelineDescriptor:]
  -[MTLToolsDevice supportsPrimitiveType:]
  -[MTLToolsDevice maxTessellationFactor]
  -[MTLToolsDevice supportsArgumentBuffersTier2]
  -[MTLToolsDevice maxRasterizationRateLayerCount]
  -[MTLToolsDevice maxTileInlineDataSize]
  -[MTLToolsDevice isQuadDataSharingSupported]
  -[MTLToolsDevice newLibraryWithDescriptor:error:]
  -[MTLToolsDevice supportsUnalignedVertexFetch]
  -[MTLToolsDevice copyShaderCacheToPath:]
  -[MTLToolsDevice supportsFloat16InfNanFiltering]
  -[MTLToolsDevice isAnisoSampleFixSupported]
  -[MTLToolsDevice supportsMutableTier1ArgumentBuffers]
  -[MTLToolsDevice newLibraryWithStitchedDescriptorSPI:error:]
  -[MTLToolsDevice supportsSparseDepthAttachments]
  -[MTLToolsDevice newComputePipelineDescriptorWithSerializedData:deserializationContext:]
  -[MTLToolsDevice supportsRenderTextureWrites]
  -[MTLToolsDevice supportsTextureWriteRoundingMode:]
  -[MTLToolsDevice newSharedTextureWithHandle:]
  -[MTLToolsDevice supportsSIMDGroup]
  -[MTLToolsDevice validateDynamicLibrary:state:error:]
  -[MTLToolsDevice newSharedEvent]
  -[MTLToolsDevice newRenderPipelineStateWithDescriptor:error:]
  -[MTLToolsDevice supportsRGBA10A2Gamma]
  -[MTLToolsDevice supportsNorm16BCubicFiltering]
  -[MTLToolsDevice newCommandQueueWithMaxCommandBufferCount:]
  -[MTLToolsDevice newRenderPipelineStateWithDescriptor:completionHandler:]
  -[MTLToolsDevice familyName]
  -[MTLToolsDevice newLibraryWithData:error:]
  -[MTLToolsDevice supportsQuadShufflesAndBroadcast]
  -[MTLToolsDevice isCustomBorderColorSupported]
  -[MTLToolsDevice isLargeMRTSupported]
  -[MTLToolsDevice supportsInt64]
  -[MTLToolsDevice maxInterpolants]
  -[MTLToolsDevice newDagStringWithGraphs:]
  -[MTLToolsDevice supportsReadWriteTextureArguments]
  -[MTLToolsDevice memorySize]
  -[MTLToolsDevice supportsRenderToLinearTextures]
  -[MTLToolsDevice maxTextureBufferWidth]
  -[MTLToolsDevice sparseTexturesSupport]
  -[MTLToolsDevice deviceLinearReadOnlyTextureAlignmentBytes]
  -[MTLToolsDevice supportsMSAAStencilResolve]
  -[MTLToolsDevice supports3DASTCTextures]
  -[MTLToolsDevice maxTextureLayers]
  -[MTLToolsDevice maxVertexAmplificationCount]
  -[MTLToolsDevice supportsSamplerCompareFunction]
  -[MTLToolsDevice maxVisibilityQueryOffset]
  -[MTLToolsDevice supportsGPUStatistics]
  -[MTLToolsDevice supportsMSAADepthResolve]
  -[MTLToolsDevice isPlacementHeapSupported]
  -[MTLToolsDevice loadDynamicLibrariesForFunction:insertLibraries:options:error:]
  -[MTLToolsDevice newRenderPipelineDescriptorWithSerializedData:deserializationContext:]
  -[MTLToolsDevice supportsVariableRateRasterization]
  -[MTLToolsDevice supportsQueryTextureLOD]
  -[MTLToolsDevice supportsViewportAndScissorArray]
  -[MTLToolsDevice supportsGlobalVariableRelocationRender]
  -[MTLToolsDevice supportsFragmentBufferWrites]
  -[MTLToolsDevice supportsLinearTextureFromSharedBuffer]
  -[MTLToolsDevice maxTextureWidth2D]
  -[MTLToolsDevice linearTextureArrayAlignmentSlice]
  -[MTLToolsDevice supportsStackOverflowErrorCode]
  -[MTLToolsDevice supportsIABHashForTools]
  -[MTLToolsDevice supportsSeparateVisibilityAndShadingRate]
  -[MTLToolsDevice supportsGlobalVariableRelocation]
  -[MTLToolsDevice supportsFloat16BCubicFiltering]
  -[MTLToolsDevice supportsGlobalVariableRelocationCompute]
  -[MTLToolsDevice newComputePipelineStateWithFunction:error:]
  -[MTLToolsDevice supportsTexture2DMultisampleArray]
  -[MTLToolsDevice minConstantBufferAlignmentBytes]
  -[MTLToolsDevice supportsPullModelInterpolation]
  -[MTLToolsDevice supportsSharedStorageHeapResources]
  -[MTLToolsDevice vendorName]
  -[MTLToolsDevice deviceCreationFlags]
  -[MTLToolsDevice newArgumentEncoderWithLayout:]
  -[MTLToolsDevice supportsTextureCubeArray]
  -[MTLToolsDevice supportsAtomicUlongVoidMinMax]
  -[MTLToolsDevice supportsSparseTextures]
  -[MTLToolsDevice newDynamicLibrary:computeDescriptor:error:]
  -[MTLToolsDevice convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:]
  -[MTLToolsDevice supportsBufferBoundsChecking]
  -[MTLToolsDevice maxTextureDimensionCube]
  -[MTLToolsDevice newLibraryWithSource:options:error:]
  -[MTLToolsDevice maxColorAttachments]
  -[MTLToolsDevice supportsRenderPassWithoutRenderTarget]
  -[MTLToolsDevice deviceSupportsFeatureSet:]
  -[MTLToolsDevice newComputePipelineStateWithDescriptor:options:completionHandler:]
  -[MTLToolsDevice supportsRenderTargetTextureRotation]
  -[MTLToolsDevice isBCTextureCompressionSupported]
  -[MTLToolsDevice maxComputeTextures]
  -[MTLToolsDevice supportsTextureWriteFPRoundingMode:]
  -[MTLToolsDevice sharedMemorySize]
  -[MTLToolsDevice supportsAlphaYUVFormats]
  -[MTLToolsDevice supportsQuadReduction]
  -[MTLToolsDevice newIndirectArgumentBufferLayoutWithStructType:]
  -[MTLToolsDevice maxFunctionConstantIndices]
  -[MTLToolsDevice newDynamicLibraryWithURL:options:error:]
  -[MTLToolsDevice newLibraryWithCIFilters:imageFilterFunctionInfo:error:]
  -[MTLToolsDevice loadDynamicLibrariesForFunction:insertLibraries:error:]
  -[MTLToolsDevice supportsSamplerAddressModeClampToHalfBorder]
  -[MTLToolsDevice minimumLinearTextureAlignmentForPixelFormat:]
  -[MTLToolsDevice supportsForceSeamsOnCubemaps]
  -[MTLToolsDevice newStructTypeWithSerializedData:]
  -[MTLToolsDevice maxInterpolatedComponents]
  -[MTLToolsDevice setGPUAssertionsEnabled:]
  -[MTLToolsDevice supportsImageBlockSampleCoverageControl]
  -[MTLToolsDevice maxVertexSamplers]
  -[MTLToolsDevice newLibraryWithStitchedDescriptor:error:]
  -[MTLToolsDevice areBarycentricCoordsSupported]
  -[MTLToolsDevice maxTileTextures]
  -[MTLToolsDevice maxTotalComputeThreadsPerThreadgroup]
  -[MTLToolsDevice newDefaultLibrary]
  -[MTLToolsDevice newComputePipelineStateWithFunction:options:completionHandler:]
  -[MTLToolsDevice pipelineCacheStats]
  -[MTLToolsDevice supportsPostDepthCoverage]
  -[MTLToolsDevice supportsBaseVertexInstanceDrawing]
  -[MTLToolsDevice maxIndirectBuffers]
  -[MTLToolsDevice supportsTileShaders]
  -[MTLToolsDevice supportsFixedLinePointFillDepthGradient]
  -[MTLToolsDevice supportsLimitedYUVFormats]
  -[MTLToolsDevice newLibraryWithDescriptorSPI:error:]
  -[MTLToolsDevice supportsYCBCRFormats12]
  -[MTLToolsDevice newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:]
  -[MTLToolsDevice loadDynamicLibrariesForComputeDescriptor:options:error:]
  -[MTLToolsDevice GPUBVHBuilder]
  -[MTLToolsDevice libraryCacheStats]
  -[MTLToolsDevice supportsSIMDShuffleAndFill]
  -[MTLToolsDevice minTilePixels]
  -[MTLToolsDevice indirectArgumentBufferCapabilities]
  -[MTLToolsDevice allowLibrariesFromOtherPlatforms]
  -[MTLToolsDevice supports32BitMSAA]
  -[MTLToolsDevice newComputePipelineStateWithDescriptor:error:]
  -[MTLToolsDevice newArgumentEncoderWithArguments:]
  -[MTLToolsDevice maxComputeThreadgroupMemory]
  -[MTLToolsDevice supportsBufferPrefetchStatistics]
  -[MTLToolsDevice newCommandQueueWithDescriptor:]
  -[MTLToolsDevice areRasterOrderGroupsSupported]
  -[MTLToolsDevice supportsProgrammableSamplePositions]
  -[MTLToolsDevice newLibraryWithSource:options:completionHandler:]
  -[MTLToolsDevice supportsShaderMinLODClamp]
  -[MTLToolsDevice newCounterSampleBufferWithDescriptor:error:]
  -[MTLToolsDevice supportsRenderMemoryBarrier]
  -[MTLToolsDevice maxFragmentTextures]
  -[MTLToolsDevice maxFragmentInlineDataSize]
  -[MTLToolsDevice newEvent]
  -[MTLToolsDevice maxFragmentBuffers]
  -[MTLToolsDevice supportsTextureSampleCount:]
  -[MTLToolsDevice maxFenceInstances]
  -[MTLToolsDevice maxComputeAttributes]
  -[MTLToolsDevice supportsFunctionPointers]
  -[MTLToolsDevice supportsNativeHardwareFP16]
  -[MTLToolsDevice supportsPrimitiveMotionBlur]
  -[MTLToolsDevice maxComputeLocalMemorySizes]
  -[MTLToolsDevice maxTileBuffers]
  -[MTLToolsDevice minBufferNoCopyAlignmentBytes]
  -[MTLToolsDevice supportsSharedTextureHandles]
  -[MTLToolsDevice endCollectingPipelineDescriptors]
  -[MTLToolsDevice supportsCustomBorderColor]
  -[MTLToolsDevice serializeStructType:]
  -[MTLToolsDevice supportsYCBCRPackedFormats12]
  -[MTLToolsDevice supportsBinaryLibraries]
  -[MTLToolsDevice supportsSeparateDepthStencil]
  -[MTLToolsDevice convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:]
  -[MTLToolsDevice supportsASTCTextureCompression]
  -[MTLToolsDevice newDefaultLibraryWithBundle:error:]
  -[MTLToolsDevice commandBufferErrorOptions]
  -[MTLToolsDevice maxFragmentSamplers]
  -[MTLToolsDevice argumentBuffersSupport]
  -[MTLToolsDevice supportsFunctionPointersFromRender]
  -[MTLToolsDevice supportsReadWriteBufferArguments]
  -[MTLToolsDevice supportsMemorylessRenderTargets]
  -[MTLToolsDevice getSupportedCommandBufferErrorOptions]
  -[MTLToolsDevice supportsWritableArrayOfTextures]
  -[MTLToolsDevice supportsCommandBufferJump]
  -[MTLToolsDevice newRenderPipelineStateWithDescriptor:options:reflection:error:]
  -[MTLToolsDevice supportsShaderBarycentricCoordinates]
  -[MTLToolsDevice supportsComputeCompressedTextureWrite]
  -[MTLToolsDevice supports32bpcMSAATextures]
  -[MTLToolsDevice supportsProgrammableBlending]
  -[MTLToolsDevice supportsMemoryOrderAtomics]
  -[MTLToolsDevice maximumComputeSubstreams]
  -[MTLToolsDevice supportsSharedFunctionTables]
  -[MTLToolsDevice minLinearTextureAlignmentForPixelFormat:]
  -[MTLToolsDevice supportsCMPIndirectCommandBuffers]
  -[MTLToolsDevice setCommandBufferErrorOptions:]
  -[MTLToolsDevice supportsRaytracingFromRender]
  -[MTLToolsDevice newFunctionWithGLESIR:inputsDescription:functionType:]
  -[MTLToolsDevice supportsReadWriteTextureArgumentsTier2]
  -[MTLToolsDevice supportsStreamingCodecSignaling]
  -[MTLToolsDevice newComputePipelineStateWithFunction:options:reflection:error:]
  -[MTLToolsDevice supportsArrayOfTextures]
  -[MTLToolsDevice maxComputeBuffers]
  -[MTLToolsDevice setShaderDebugInfoCaching:]
  -[MTLToolsDevice newLateEvalEvent]
  -[MTLToolsDevice newDynamicLibraryFromURL:error:]
  -[MTLToolsDevice setPluginData:]
  -[MTLToolsDevice supportsShaderLODAverage]
  -[MTLToolsDevice newBinaryLibraryWithOptions:url:error:]
  -[MTLToolsDevice productName]
  -[MTLToolsDevice maxComputeInlineDataSize]
  -[MTLToolsDevice startCollectingPipelineDescriptors]
  -[MTLToolsDevice newFunctionWithGLIR:functionType:]
  -[MTLToolsDevice isFixedLinePointFillDepthGradientSupported]
  -[MTLToolsDevice maxViewportCount]
  -[MTLToolsDevice newSharedEventWithHandle:]
  -[MTLToolsDevice supports2DLinearTexArraySPI]
  -[MTLToolsDevice linearTextureArrayAlignmentBytes]
  -[MTLToolsDevice newFunctionWithGLESIR:functionType:]
  -[MTLToolsDevice supportsSIMDShufflesAndBroadcast]
  -[MTLToolsDevice compilerPropagatesThreadPriority:]
  -[MTLToolsDevice requiresRaytracingEmulation]
  -[MTLToolsDevice supportsRaytracing]
  -[MTLToolsDevice supportsMirrorClampToEdgeSamplerMode]
  -[MTLToolsDevice newComputePipelineStateWithDescriptor:completionHandler:]
  -[MTLToolsDevice acceleratorPort]
  -[MTLToolsDevice supportsArrayOfSamplers]
  -[MTLToolsDevice supportsReadWriteTextureCubeArguments]
  -[MTLToolsDevice supportsIndirectDrawAndDispatch]
  -[MTLToolsDevice supportsStencilFeedback]
  -[MTLToolsDevice maxComputeSamplers]
  -[MTLToolsDevice supportsRenderDynamicLibraries]
  -[MTLToolsDevice areProgrammableSamplePositionsSupported]
  -[MTLToolsDevice supportsBinaryArchives]
  -[MTLToolsDevice maxTileSamplers]
  -[MTLToolsDevice supportsTextureOutOfBoundsReads]
  -[MTLToolsDevice supportsLayeredRendering]
  -[MTLToolsDevice supportsNonSquareTileShaders]
  -[MTLToolsDevice newRenderPipelineStateWithTileDescriptor:options:reflection:error:]
  -[MTLToolsDevice supportsFragmentOnlyEncoders]
  -[MTLToolsDevice unloadShaderCaches]
  -[MTLToolsDevice supportsAnisoSampleFix]
  -[MTLToolsDevice supportsRasterOrderGroups]
  -[MTLToolsDevice supportsBufferWithIOSurface]
  -[MTLToolsDevice supportsTessellation]
  -[MTLToolsDevice supportsIndirectStageInRegion]
  -[MTLToolsDevice newLibraryWithFile:error:]
  -[MTLToolsDevice supportsCounterSampling:]
  -[MTLToolsDevice maxTextureHeight3D]
  -[MTLToolsDevice newLibraryWithDAG:functions:error:]
  -[MTLToolsDevice targetDeviceInfo]
  -[MTLToolsDevice accelerationStructureSizesWithDescriptor:]
  -[MTLToolsDevice supportsSRGBwrites]
  -[MTLToolsDevice supportsInterchangeTiled]
  -[MTLToolsDevice maxVertexAmplificationFactor]
  -[MTLToolsDevice newRasterizationRateMapWithDescriptor:]
  -[MTLToolsDevice supportsYCBCRFormats]
  -[MTLToolsDevice maxTextureHeight2D]
  -[MTLToolsDevice newFunctionWithGLCoreIR:inputsDescription:functionType:]
  -[MTLToolsDevice shaderDebugInfoCaching]
  -[MTLToolsDevice newAccelerationStructureWithBuffer:offset:]
  -[MTLToolsDevice supportsBufferlessClientStorageTexture]
  -[MTLToolsDevice supportsStatefulDynamicLibraries]
  -[MTLToolsDevice newRenderPipelineStateWithTileDescriptor:options:completionHandler:]
  -[MTLToolsDevice newDynamicLibraryWithURL:error:]
  -[MTLToolsDevice supportsInvariantVertexPosition]
  -[MTLToolsDevice supportsYCBCRFormatsXR]
  -[MTLToolsDevice maxVertexInlineDataSize]
  -[MTLToolsDevice newComputePipelineStateWithDescriptor:options:reflection:error:]
  -[MTLToolsDevice _deviceWrapper]
  -[MTLToolsDevice supportsLargeFramebufferConfigs]
  -[MTLToolsDevice deviceOrFeatureProfileSupportsFeatureSet:]
  -[MTLToolsDevice sparseTileSizeInBytes]
  -[MTLToolsDevice newDynamicLibrary:error:]
  -[MTLToolsDevice maxIndirectSamplers]
  -[MTLToolsDevice newArgumentEncoderWithArguments:structType:]
  -[MTLToolsDevice newRenderPipelineStateWithDescriptor:options:completionHandler:]
  -[MTLToolsDevice supportsPlacementHeaps]
  -[MTLToolsDevice supportsYCBCRFormatsPQ]
  -[MTLToolsDevice supportsFamily:]
  -[MTLToolsDevice supports3DBCTextures]
  -[MTLToolsDevice newLibraryWithStitchedDescriptor:completionHandler:]
  -[MTLToolsDevice supportsNonUniformThreadgroupSize]
  -[MTLToolsDevice isCompatibleWithAccelerationStructure:]
  -[MTLToolsDevice supportsImageBlocks]
  -[MTLToolsDevice supportsSparseHeaps]
  -[MTLToolsDevice supportsTLS]
  -[MTLToolsDevice newIntersectionFunctionTableWithDescriptor:]
  -[MTLToolsDevice supportsIndirectTextures]
  -[MTLToolsDevice supportsNonPrivateMSAATextures]
  -[MTLToolsDevice newAccelerationStructureWithDescriptor:]
  -[MTLToolsDevice newFunctionWithGLIR:inputsDescription:functionType:]
  -[MTLToolsDevice newLibraryWithURL:error:]
  -[MTLToolsDevice validateDynamicLibraryURL:error:]
  -[MTLToolsDevice isMsaa32bSupported]
  -[MTLToolsDevice supportsFeatureSet:]
  -[MTLToolsDevice iosurfaceTextureAlignmentBytes]
  -[MTLToolsDevice supportsIndirectWritableTextures]
  -[MTLToolsDevice supportsIndirectTessellation]
  -[MTLToolsDevice newLibraryWithDescriptor:completionHandler:]
  -[MTLToolsDevice maxLineWidth]
  -[MTLToolsDevice supportsSIMDReduction]
  -[MTLToolsDevice supportsSIMDGroupMatrix]
  -[MTLToolsDevice supportsBCTextureCompression]
  -[MTLToolsDevice supportsCombinedMSAAStoreAndResolveAction]
  -[MTLToolsDevice supportsRTZRounding]
  -[MTLToolsDevice supportsBlackOrWhiteSamplerBorderColors]
  -[MTLToolsDevice maxConstantBufferArguments]
  -[MTLToolsDevice supportsQuadGroup]
  -[MTLToolsDevice maxComputeThreadgroupMemoryAlignmentBytes]
  -[MTLToolsDevice isRTZRoundingSupported]
  -[MTLToolsDevice supportsSharedStorageTextures]
  -[MTLToolsDevice newCommandQueue]
  -[MTLToolsDevice supportsDevicePartitioning]
  -[MTLToolsDevice pluginData]
  -[MTLToolsDevice maxFramebufferStorageBits]
  -[MTLToolsDevice supportsYCBCRPackedFormatsPQ]
  -[MTLToolsDevice _setDeviceWrapper:]
  -[MTLToolsDevice newSharedEventWithMachPort:]
  -[MTLToolsDevice areGPUAssertionsEnabled]
  -[MTLToolsDevice newAccelerationStructureWithSize:]
  -[MTLToolsDevice supportsMSAADepthResolveFilter]
  -[MTLToolsDevice supportsRasterOrderGroupsColorAttachment]
  -[MTLToolsDevice supportsRelaxedTextureViewRequirements]
  -[MTLToolsDevice maxCustomSamplePositions]
  -[MTLToolsDevice limits]
  -[MTLToolsDevice supportsLateEvalEvent]
  -[MTLToolsDevice supportsRasterizationRateMapWithLayerCount:]
  -[MTLToolsDevice supportsDepthClipModeClampExtended]
  -[MTLToolsDevice newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:]
  -[MTLToolsDevice supportsConcurrentComputeDispatch]
  -[MTLToolsDevice supportsBfloat16Format]
  -[MTLToolsDevice supportsDynamicControlPointCount]
  -[MTLToolsDevice counterSets]
  -[MTLToolsDevice name]
  -[MTLToolsDevice newAccelerationStructureWithSize:resourceIndex:]
  -[MTLToolsDevice supportsPipelineLibraries]
  -[MTLToolsDevice readWriteTextureSupport]
  -[MTLToolsDevice supportsPublicXR10Formats]
  -[MTLToolsDevice maxTextureWidth1D]
  -[MTLToolsDevice supportsComputeMemoryBarrier]
  -[MTLToolsDevice supportsMSAAStencilResolveFilter]
  -[MTLToolsDevice deviceLinearTextureAlignmentBytes]
  -[MTLToolsDevice supportsASTCHDRTextureCompression]
  -[MTLToolsDevice sampleTimestamps:gpuTimestamp:]
  -[MTLToolsDevice supportsExtendedYUVFormats]
  -[MTLToolsDevice maxArgumentBufferSamplerCount]
  -[MTLToolsDevice defaultTextureWriteRoundingMode]
  -[MTLToolsDevice newFunctionWithGLCoreIR:functionType:]
  -[MTLToolsDevice supportsTextureSwizzle]
  -[MTLToolsDevice supportsNonZeroTextureWriteLOD]
  -[MTLToolsDevice isFloat32FilteringSupported]
  -[MTLToolsDevice supportsMipLevelsSmallerThanBlockSize]
  -[MTLToolsDevice supportsLinearTexture2DArray]
  -[MTLToolsDevice targetDeviceArchitecture]
  -[MTLToolsDevice supportsGFXIndirectCommandBuffers]
  -[MTLToolsDevice maxIndirectSamplersPerDevice]
  -[MTLToolsDevice supportsNonPrivateDepthStencilTextures]
  -[MTLToolsDevice supportsCompressedTextureViewSPI]
  -[MTLToolsDevice maxTextureWidth3D]
  -[MTLToolsDevice supportsPacked32TextureBufferWrites]
  -[MTLToolsDevice linearTextureAlignmentBytes]
  -[MTLToolsDevice supports32BitFloatFiltering]
  -[MTLToolsDevice supportsDynamicLibraries]
  -[MTLToolsDevice maxTextureDepth3D]
  -[MTLToolsDevice heapTextureSizeAndAlignWithDescriptor:]
  -[MTLToolsDevice newHeapWithDescriptor:]
  -[MTLToolsDevice maxThreadsPerThreadgroup]
  -[MTLToolsDevice newTextureLayoutWithDescriptor:isHeapOrBufferBacked:]
  -[MTLToolsDevice .cxx_destruct]
  -[MTLToolsDevice currentAllocatedSize]
  -[MTLToolsDevice registryID]
  -[MTLToolsDevice newIndirectArgumentEncoderWithLayout:]
  -[MTLToolsDevice hasUnifiedMemory]
  -[MTLToolsDevice newIndirectCommandBufferWithDescriptor:maxCommandCount:options:]
  -[MTLToolsDevice respondsToSelector:]
  -[MTLToolsDevice newBufferWithBytes:length:options:]
  -[MTLToolsDevice dedicatedMemorySize]
  -[MTLToolsDevice newVisibleFunctionTableWithDescriptor:]
  -[MTLToolsDevice setResourcesPurgeableState:newState:oldState:count:]
  -[MTLToolsDevice maxBufferLength]
  -[MTLToolsDevice supportPriorityBand]
  -[MTLToolsDevice newBufferWithLength:options:]
  -[MTLToolsDevice newDepthStencilStateWithDescriptor:]
  -[MTLToolsDevice newTextureWithDescriptor:]
  -[MTLToolsDevice newSamplerStateWithDescriptor:]
  -[MTLToolsDevice newResourceGroupFromResources:count:]
  -[MTLToolsDevice newTextureWithDescriptor:iosurface:plane:]
  -[MTLToolsDevice newBufferWithBytesNoCopy:length:options:deallocator:]
  -[MTLToolsDevice newTextureWithBytesNoCopy:length:descriptor:deallocator:]
  -[MTLToolsDevice newBufferWithIOSurface:]
  -[MTLToolsDevice supportsVertexAmplificationCount:]
  -[MTLToolsDevice dealloc]
  -[MTLToolsDevice isRemovable]
  -[MTLToolsDevice recommendedMaxWorkingSetSize]
  -[MTLToolsDevice isLowPower]
  -[MTLToolsDevice heapBufferSizeAndAlignWithLength:options:]
  -[MTLToolsDevice newIndirectComputeCommandEncoderWithBuffer:]
  -[MTLToolsDevice newIndirectRenderCommandEncoderWithBuffer:]
  -[MTLToolsDevice featureProfile]
  -[MTLToolsDevice copyIOSurfaceSharedTextureProperties:]
  -[MTLToolsDevice supportsSampleCount:]
  -[MTLToolsDevice newIndirectCommandBufferWithDescriptor:maxCount:options:]
  -[MTLToolsDevice minimumTextureBufferAlignmentForPixelFormat:]
  -[MTLToolsDevice sparseTileSizeWithTextureType:pixelFormat:sampleCount:]
  -[MTLToolsDevice isHeadless]
  -[MTLToolsDevice isDepth24Stencil8PixelFormatSupported]
  -[MTLToolsDevice maxThreadgroupMemoryLength]
  -[MTLToolsDevice halfFPConfig]
  -[MTLToolsDevice singleFPConfig]
  -[MTLToolsDevice doubleFPConfig]
  -[MTLToolsDevice metalAssertionsEnabled]
  -[MTLToolsDevice setMetalAssertionsEnabled:]
  -[MTLToolsDevice setupMPSFunctionTable:]
  -[MTLToolsDevice resourcePatchingTypeForResourceType:]
  -[MTLToolsDevice reserveResourceIndicesForResourceType:indices:indexCount:]
  -[MTLToolsDevice reserveGPUAddressRange:]
  -[MTLToolsDevice newBufferWithLength:options:gpuAddress:]
  -[MTLToolsDevice newBufferWithBytes:length:options:gpuAddress:]
  -[MTLToolsDevice newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:]
  -[MTLToolsDevice newBufferWithDescriptor:]
  -[MTLToolsDevice mapShaderSampleBufferWithBuffer:capacity:size:]
  -[MTLToolsDevice unmapShaderSampleBuffer]
  -[MTLToolsDevice newRenderPipelineStateWithTileDescriptor:error:]
  -[MTLToolsDevice newRenderPipelineStateWithTileDescriptor:completionHandler:]
  -[MTLToolsDevice newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:]
  -[MTLToolsDevice tileSizeWithSparsePageSize:textureType:pixelFormat:sampleCount:]
  -[MTLToolsDevice initWithBaseObject:parent:]
  -[MTLToolsDevice getFunctionForBaseObject:library:]
  -[MTLToolsDevice unwrapMTLRelocations:]
  -[MTLToolsDevice unwrapMTLComputePipelineDescriptor:]
  -[MTLToolsDevice unwrapMTLRenderPipelineDescriptor:]
  -[MTLToolsDevice unwrapMTLTileRenderPipelineDescriptor:]
  -[MTLToolsDevice unwrapMTLStitchedLibraryDescriptor:]
  -[MTLToolsDevice unwrapMTLFunctionDescriptor:]
  -[MTLToolsDevice getDynamicLibraryForBaseObject:]
  -[MTLToolsDevice unwrapMTLCompileOptions:]
  -[MTLToolsDevice getDepthStencilStateForBaseObject:descriptor:]
  -[MTLToolsDevice getSamplerStateForBaseObject:descriptor:]
  -[MTLToolsDevice notifyExternalReferencesNonZeroOnDealloc:]
  -[MTLToolsDevice debugPipelineOptions:includePipelinePerfStats:]
  -[MTLToolsDevice isIntegrated]


MTLToolsEvent : MTLToolsObject <MTLEvent>
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsEvent label]
  -[MTLToolsEvent setLabel:]
  -[MTLToolsEvent device]


MTLToolsSharedEvent : MTLToolsEvent <MTLSharedEvent>
 @property  unsigned long signaledValue
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsSharedEvent label]
  -[MTLToolsSharedEvent notifyListener:atValue:block:]
  -[MTLToolsSharedEvent setLabel:]
  -[MTLToolsSharedEvent newSharedEventHandle]
  -[MTLToolsSharedEvent signaledValue]
  -[MTLToolsSharedEvent setSignaledValue:]
  -[MTLToolsSharedEvent waitUntilSignaledValue:timeoutMS:]


MTLToolsLateEvalEvent : MTLToolsSharedEvent <MTLLateEvalEvent>
 @property  unsigned long signaledValue
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription


MTLToolsFunction : MTLToolsObject <MTLFunctionSPI>
 @property  NSString *filePath
 @property  long long lineNumber
 @property  NSString *unpackedFilePath
 @property  unsigned long renderTargetArrayIndexType
 @property  MTLType *returnType
 @property  NSArray *arguments
 @property  NSArray *importedSymbols
 @property  NSArray *importedLibraries
 @property  MTLDebugInstrumentationData *debugInstrumentationData
 @property  <MTLFunctionHandle> *functionHandle
 @property  NSArray *relocations
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long functionType
 @property  unsigned long patchType
 @property  long long patchControlPointCount
 @property  NSArray *vertexAttributes
 @property  NSArray *stageInputAttributes
 @property  NSString *name
 @property  NSDictionary *functionConstantsDictionary
 @property  unsigned long options
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsFunction filePath]
  -[MTLToolsFunction importedSymbols]
  -[MTLToolsFunction importedLibraries]
  -[MTLToolsFunction newFunctionWithPluginData:bitcodeType:]
  -[MTLToolsFunction debugInstrumentationData]
  -[MTLToolsFunction functionConstantsDictionary]
  -[MTLToolsFunction functionType]
  -[MTLToolsFunction lineNumber]
  -[MTLToolsFunction functionHandle]
  -[MTLToolsFunction newArgumentEncoderWithBufferIndex:]
  -[MTLToolsFunction newArgumentEncoderWithBufferIndex:reflection:]
  -[MTLToolsFunction bitcodeData]
  -[MTLToolsFunction reflectionWithOptions:binaryArchives:]
  -[MTLToolsFunction unpackedFilePath]
  -[MTLToolsFunction label]
  -[MTLToolsFunction reflectionWithOptions:]
  -[MTLToolsFunction newArgumentEncoderWithBufferIndex:reflection:binaryArchives:]
  -[MTLToolsFunction name]
  -[MTLToolsFunction vertexAttributes]
  -[MTLToolsFunction options]
  -[MTLToolsFunction returnType]
  -[MTLToolsFunction formattedDescription:]
  -[MTLToolsFunction arguments]
  -[MTLToolsFunction patchControlPointCount]
  -[MTLToolsFunction newArgumentEncoderWithBufferIndex:reflection:pipelineLibrary:]
  -[MTLToolsFunction precompiledOutput]
  -[MTLToolsFunction bitCodeHash]
  -[MTLToolsFunction renderTargetArrayIndexType]
  -[MTLToolsFunction newArgumentEncoderWithBufferIndex:pipelineLibrary:]
  -[MTLToolsFunction setRelocations:]
  -[MTLToolsFunction stageInputAttributes]
  -[MTLToolsFunction dealloc]
  -[MTLToolsFunction setLabel:]
  -[MTLToolsFunction patchType]
  -[MTLToolsFunction relocations]
  -[MTLToolsFunction reflectionWithOptions:completionHandler:]
  -[MTLToolsFunction reflectionWithOptions:pipelineLibrary:]
  -[MTLToolsFunction functionInputs]
  -[MTLToolsFunction initWithFunction:library:]


MTLToolsLibrary : MTLToolsObject <MTLLibrarySPI>
 @property  NSString *overrideTriple
 @property  BOOL shaderValidationEnabled
 @property  NSArray *externFunctionNames
 @property  NSData *bitcodeData
 @property  NSUUID *libraryIdentifier
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  NSArray *functionNames
 @property  long long type
 @property  NSString *installName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsLibrary installName]
  -[MTLToolsLibrary bitcodeData]
  -[MTLToolsLibrary label]
  -[MTLToolsLibrary libraryIdentifier]
  -[MTLToolsLibrary newIntersectionFunctionWithDescriptor:completionHandler:]
  -[MTLToolsLibrary newIntersectionFunctionWithDescriptor:error:]
  -[MTLToolsLibrary functionNames]
  -[MTLToolsLibrary externFunctionNames]
  -[MTLToolsLibrary newFunctionWithDescriptor:error:]
  -[MTLToolsLibrary shaderValidationEnabled]
  -[MTLToolsLibrary newFunctionWithName:constantValues:pipelineLibrary:completionHandler:]
  -[MTLToolsLibrary setOverrideTriple:]
  -[MTLToolsLibrary setShaderValidationEnabled:]
  -[MTLToolsLibrary serializeToURL:error:]
  -[MTLToolsLibrary type]
  -[MTLToolsLibrary overrideTriple]
  -[MTLToolsLibrary newFunctionWithName:constantValues:pipelineLibrary:error:]
  -[MTLToolsLibrary newFunctionWithDescriptor:destinationArchive:error:]
  -[MTLToolsLibrary dealloc]
  -[MTLToolsLibrary setLabel:]
  -[MTLToolsLibrary newExternFunctionWithName:]
  -[MTLToolsLibrary newFunctionWithDescriptor:completionHandler:]
  -[MTLToolsLibrary newFunctionWithName:constantValues:error:]
  -[MTLToolsLibrary newFunctionWithName:constantValues:completionHandler:]
  -[MTLToolsLibrary device]
  -[MTLToolsLibrary newFunctionWithName:]


MTLToolsVisibleFunctionTable : MTLToolsResource <MTLVisibleFunctionTableSPI>
 @property  unsigned long resourceIndex
 @property  unsigned long uniqueIdentifier
 @property  <MTLBuffer> *globalBuffer
 @property  unsigned long globalBufferOffset
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long cpuCacheMode
 @property  unsigned long storageMode
 @property  unsigned long hazardTrackingMode
 @property  unsigned long resourceOptions
 @property  <MTLHeap> *heap
 @property  unsigned long heapOffset
 @property  unsigned long allocatedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsVisibleFunctionTable setValue:atIndex:]
  -[MTLToolsVisibleFunctionTable uniqueIdentifier]
  -[MTLToolsVisibleFunctionTable setBuffer:offset:atIndex:]
  -[MTLToolsVisibleFunctionTable resourceIndex]
  -[MTLToolsVisibleFunctionTable setVisibleFunctionTable:atBufferIndex:]
  -[MTLToolsVisibleFunctionTable setFunctions:withRange:]
  -[MTLToolsVisibleFunctionTable setFunction:atIndex:]
  -[MTLToolsVisibleFunctionTable setValue:withRange:]
  -[MTLToolsVisibleFunctionTable setBuffers:offsets:withRange:]
  -[MTLToolsVisibleFunctionTable setVisibleFunctionTables:withBufferRange:]


MTLDebugPipelineLibrary : MTLToolsPipelineLibrary
 @property  NSString *filePath

  // instance methods
  -[MTLDebugPipelineLibrary filePath]
  -[MTLDebugPipelineLibrary newRenderPipelineStateWithName:options:reflection:error:]
  -[MTLDebugPipelineLibrary setFilePath:]
  -[MTLDebugPipelineLibrary newComputePipelineStateWithName:options:reflection:error:]
  -[MTLDebugPipelineLibrary dealloc]
  -[MTLDebugPipelineLibrary initWithLibrary:parent:filePath:]


MTLCountersComputeCommandEncoder : MTLToolsComputeCommandEncoder
  // instance methods
  -[MTLCountersComputeCommandEncoder pushDebugGroup:]
  -[MTLCountersComputeCommandEncoder memoryBarrierWithScope:]
  -[MTLCountersComputeCommandEncoder setBuffer:offset:atIndex:]
  -[MTLCountersComputeCommandEncoder useResources:count:usage:]
  -[MTLCountersComputeCommandEncoder setVisibleFunctionTable:atBufferIndex:]
  -[MTLCountersComputeCommandEncoder useHeaps:count:]
  -[MTLCountersComputeCommandEncoder setIntersectionFunctionTable:atBufferIndex:]
  -[MTLCountersComputeCommandEncoder updateFence:]
  -[MTLCountersComputeCommandEncoder setBytes:length:atIndex:]
  -[MTLCountersComputeCommandEncoder setSamplerState:atIndex:]
  -[MTLCountersComputeCommandEncoder dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:]
  -[MTLCountersComputeCommandEncoder setComputePipelineState:]
  -[MTLCountersComputeCommandEncoder useHeap:]
  -[MTLCountersComputeCommandEncoder useResource:usage:]
  -[MTLCountersComputeCommandEncoder insertDebugSignpost:]
  -[MTLCountersComputeCommandEncoder setTexture:atIndex:]
  -[MTLCountersComputeCommandEncoder setIntersectionFunctionTables:withBufferRange:]
  -[MTLCountersComputeCommandEncoder setThreadgroupMemoryLength:atIndex:]
  -[MTLCountersComputeCommandEncoder setBuffers:offsets:withRange:]
  -[MTLCountersComputeCommandEncoder popDebugGroup]
  -[MTLCountersComputeCommandEncoder endEncoding]
  -[MTLCountersComputeCommandEncoder dealloc]
  -[MTLCountersComputeCommandEncoder memoryBarrierWithResources:count:]
  -[MTLCountersComputeCommandEncoder setLabel:]
  -[MTLCountersComputeCommandEncoder dispatchThreadgroups:threadsPerThreadgroup:]
  -[MTLCountersComputeCommandEncoder setVisibleFunctionTables:withBufferRange:]
  -[MTLCountersComputeCommandEncoder waitForFence:]
  -[MTLCountersComputeCommandEncoder setTextures:withRange:]
  -[MTLCountersComputeCommandEncoder setBufferOffset:atIndex:]
  -[MTLCountersComputeCommandEncoder setSamplerStates:withRange:]
  -[MTLCountersComputeCommandEncoder setSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLCountersComputeCommandEncoder setSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLCountersComputeCommandEncoder setStageInRegion:]
  -[MTLCountersComputeCommandEncoder setStageInRegionWithIndirectBuffer:indirectBufferOffset:]
  -[MTLCountersComputeCommandEncoder dispatchThreads:threadsPerThreadgroup:]
  -[MTLCountersComputeCommandEncoder dispatchThreadsWithIndirectBuffer:indirectBufferOffset:]
  -[MTLCountersComputeCommandEncoder setImageBlockWidth:height:]
  -[MTLCountersComputeCommandEncoder initWithComputeCommandEncoder:commandBuffer:]


MTLGPUDebugRenderPipelineState : MTLToolsRenderPipelineState
 @property  NSArray *binaryFunctionData
 @property  MTLGPUDebugImageData *vertexFunctionData
 @property  MTLGPUDebugImageData *fragmentFunctionData
 @property  MTLGPUDebugImageData *tileFunctionData
 @property  MTLRenderPipelineReflection *internalReflection
 @property  MTLRenderPipelineReflection *userReflection
 @property  MTLGPUDebugBuffer *vertexConstantsBuffer
 @property  MTLGPUDebugBuffer *fragmentConstantsBuffer
 @property  MTLGPUDebugBuffer *tileConstantsBuffer
 @property  MTLGPUDebugBuffer *indirectStateBuffer

  // instance methods
  -[MTLGPUDebugRenderPipelineState newRenderPipelineStateWithAdditionalBinaryFunctions:fragmentAdditionalBinaryFunctions:error:]
  -[MTLGPUDebugRenderPipelineState newIntersectionFunctionTableWithDescriptor:]
  -[MTLGPUDebugRenderPipelineState newFragmentIntersectionFunctionTableWithDescriptor:]
  -[MTLGPUDebugRenderPipelineState functionHandleWithFunction:stage:]
  -[MTLGPUDebugRenderPipelineState newVertexIntersectionFunctionTableWithDescriptor:]
  -[MTLGPUDebugRenderPipelineState newVisibleFunctionTableWithDescriptor:]
  -[MTLGPUDebugRenderPipelineState newRenderPipelineStateWithAdditionalBinaryFunctions:error:]
  -[MTLGPUDebugRenderPipelineState newTileIntersectionFunctionTableWithDescriptor:]
  -[MTLGPUDebugRenderPipelineState newVisibleFunctionTableFromVertexStageWithDescriptor:]
  -[MTLGPUDebugRenderPipelineState newTileRenderPipelineStateWithAdditionalBinaryFunctions:error:]
  -[MTLGPUDebugRenderPipelineState newVisibleFunctionTableFromTileStageWithDescriptor:]
  -[MTLGPUDebugRenderPipelineState newIntersectionFunctionTableWithDescriptor:stage:]
  -[MTLGPUDebugRenderPipelineState dealloc]
  -[MTLGPUDebugRenderPipelineState newVisibleFunctionTableFromFragmentStageWithDescriptor:]
  -[MTLGPUDebugRenderPipelineState newVisibleFunctionTableWithDescriptor:stage:]
  -[MTLGPUDebugRenderPipelineState vertexFunctionData]
  -[MTLGPUDebugRenderPipelineState fragmentFunctionData]
  -[MTLGPUDebugRenderPipelineState tileFunctionData]
  -[MTLGPUDebugRenderPipelineState vertexConstantsBuffer]
  -[MTLGPUDebugRenderPipelineState fragmentConstantsBuffer]
  -[MTLGPUDebugRenderPipelineState tileConstantsBuffer]
  -[MTLGPUDebugRenderPipelineState binaryFunctionData]
  -[MTLGPUDebugRenderPipelineState userReflection]
  -[MTLGPUDebugRenderPipelineState initWithRenderPipelineState:descriptor:unwrappedDescriptor:reflection:device:pipelineOptions:]
  -[MTLGPUDebugRenderPipelineState releaseReflection]
  -[MTLGPUDebugRenderPipelineState initWithRenderPipelineState:tileDescriptor:reflection:device:]
  -[MTLGPUDebugRenderPipelineState _initConstantsBuffer:device:]
  -[MTLGPUDebugRenderPipelineState unwrapBinaryFunctions:]
  -[MTLGPUDebugRenderPipelineState initWithRenderPipelineState:vertexBinaryFunctions:fragmentBinaryFunctions:tileBinaryFunctions:withState:device:]
  -[MTLGPUDebugRenderPipelineState internalReflection]
  -[MTLGPUDebugRenderPipelineState indirectStateBuffer]


MTLGPUDebugAccelerationStructureCommandEncoder : MTLToolsAccelerationStructureCommandEncoder
  // instance methods
  -[MTLGPUDebugAccelerationStructureCommandEncoder serializeInstanceAccelerationStructure:primitiveAccelerationStructures:toBuffer:serializedBufferOffset:]
  -[MTLGPUDebugAccelerationStructureCommandEncoder deserializeInstanceAccelerationStructure:primitiveAccelerationStructures:fromBuffer:serializedBufferOffset:]
  -[MTLGPUDebugAccelerationStructureCommandEncoder deserializeAccelerationStructure:primitiveAccelerationStructures:fromBuffer:serializedBufferOffset:]
  -[MTLGPUDebugAccelerationStructureCommandEncoder deserializeInstanceAccelerationStructure:primitiveAccelerationStructures:fromBuffer:serializedBufferOffset:withDescriptor:]


MTLToolsObject : NSObject
 @property  id baseObject
 @property  <MTLDevice> *device

  // instance methods
  -[MTLToolsObject originalObject]
  -[MTLToolsObject parent]
  -[MTLToolsObject dealloc]
  -[MTLToolsObject device]
  -[MTLToolsObject initWithBaseObject:parent:]
  -[MTLToolsObject baseObject]
  -[MTLToolsObject setOriginalObject:]
  -[MTLToolsObject strongParent]
  -[MTLToolsObject setBaseObject:]


MTLTelemetryDepthStencilState : MTLToolsDepthStencilState
  // instance methods
  -[MTLTelemetryDepthStencilState initWithBaseDepthStencilState:device:descriptor:]


MTLToolsParallelRenderCommandEncoder : MTLToolsCommandEncoder <MTLParallelRenderCommandEncoder>
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsParallelRenderCommandEncoder setColorStoreAction:atIndex:]
  -[MTLToolsParallelRenderCommandEncoder isMemorylessRender]
  -[MTLToolsParallelRenderCommandEncoder setDepthStoreAction:]
  -[MTLToolsParallelRenderCommandEncoder setStencilStoreAction:]
  -[MTLToolsParallelRenderCommandEncoder setColorStoreActionOptions:atIndex:]
  -[MTLToolsParallelRenderCommandEncoder setStencilStoreActionOptions:]
  -[MTLToolsParallelRenderCommandEncoder setDepthStoreActionOptions:]
  -[MTLToolsParallelRenderCommandEncoder endEncoding]
  -[MTLToolsParallelRenderCommandEncoder renderCommandEncoder]


MTLToolsIntersectionFunctionTable : MTLToolsResource <MTLIntersectionFunctionTableSPI>
 @property  unsigned long resourceIndex
 @property  unsigned long uniqueIdentifier
 @property  <MTLBuffer> *globalBuffer
 @property  unsigned long globalBufferOffset
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long cpuCacheMode
 @property  unsigned long storageMode
 @property  unsigned long hazardTrackingMode
 @property  unsigned long resourceOptions
 @property  <MTLHeap> *heap
 @property  unsigned long heapOffset
 @property  unsigned long allocatedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsIntersectionFunctionTable uniqueIdentifier]
  -[MTLToolsIntersectionFunctionTable setBuffer:offset:atIndex:]
  -[MTLToolsIntersectionFunctionTable resourceIndex]
  -[MTLToolsIntersectionFunctionTable setVisibleFunctionTable:atBufferIndex:]
  -[MTLToolsIntersectionFunctionTable globalBufferOffset]
  -[MTLToolsIntersectionFunctionTable setGlobalBufferOffset:]
  -[MTLToolsIntersectionFunctionTable setOpaqueTriangleIntersectionFunctionWithSignature:withRange:]
  -[MTLToolsIntersectionFunctionTable setFunctions:withRange:]
  -[MTLToolsIntersectionFunctionTable setFunction:atIndex:]
  -[MTLToolsIntersectionFunctionTable globalBuffer]
  -[MTLToolsIntersectionFunctionTable setOpaqueTriangleIntersectionFunctionWithSignature:atIndex:]
  -[MTLToolsIntersectionFunctionTable setBuffers:offsets:withRange:]
  -[MTLToolsIntersectionFunctionTable dealloc]
  -[MTLToolsIntersectionFunctionTable setGlobalBuffer:]
  -[MTLToolsIntersectionFunctionTable setVisibleFunctionTables:withBufferRange:]


MTLToolsRenderCommandEncoder : MTLToolsCommandEncoder <MTLRenderCommandEncoderSPI>
 @property  unsigned long tileWidth
 @property  unsigned long tileHeight
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsRenderCommandEncoder setLineWidth:]
  -[MTLToolsRenderCommandEncoder setColorStoreAction:atIndex:]
  -[MTLToolsRenderCommandEncoder setStencilReferenceValue:]
  -[MTLToolsRenderCommandEncoder setDepthClipMode:]
  -[MTLToolsRenderCommandEncoder setVertexBuffers:offsets:withRange:]
  -[MTLToolsRenderCommandEncoder setVertexTexture:atIndex:]
  -[MTLToolsRenderCommandEncoder setVertexSamplerState:atIndex:]
  -[MTLToolsRenderCommandEncoder setFragmentBuffers:offsets:withRange:]
  -[MTLToolsRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:]
  -[MTLToolsRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:]
  -[MTLToolsRenderCommandEncoder useResources:count:usage:]
  -[MTLToolsRenderCommandEncoder sampleCountersInBuffer:atSampleIndex:withBarrier:]
  -[MTLToolsRenderCommandEncoder isMemorylessRender]
  -[MTLToolsRenderCommandEncoder useHeaps:count:]
  -[MTLToolsRenderCommandEncoder setTileVisibleFunctionTables:withBufferRange:]
  -[MTLToolsRenderCommandEncoder setVertexAmplificationCount:viewMappings:]
  -[MTLToolsRenderCommandEncoder setVertexIntersectionFunctionTables:withBufferRange:]
  -[MTLToolsRenderCommandEncoder setVertexBytes:length:atIndex:]
  -[MTLToolsRenderCommandEncoder setFragmentBytes:length:atIndex:]
  -[MTLToolsRenderCommandEncoder setVertexAccelerationStructure:atBufferIndex:]
  -[MTLToolsRenderCommandEncoder setVertexVisibleFunctionTable:atBufferIndex:]
  -[MTLToolsRenderCommandEncoder setVertexVisibleFunctionTables:withBufferRange:]
  -[MTLToolsRenderCommandEncoder setFragmentIntersectionFunctionTable:atBufferIndex:]
  -[MTLToolsRenderCommandEncoder tileWidth]
  -[MTLToolsRenderCommandEncoder setFragmentIntersectionFunctionTables:withBufferRange:]
  -[MTLToolsRenderCommandEncoder tileHeight]
  -[MTLToolsRenderCommandEncoder setPointSize:]
  -[MTLToolsRenderCommandEncoder setDepthStoreAction:]
  -[MTLToolsRenderCommandEncoder setStencilStoreAction:]
  -[MTLToolsRenderCommandEncoder setTileAccelerationStructure:atBufferIndex:]
  -[MTLToolsRenderCommandEncoder setTileTexture:atIndex:]
  -[MTLToolsRenderCommandEncoder setTileSamplerState:atIndex:]
  -[MTLToolsRenderCommandEncoder setTileBuffer:offset:atIndex:]
  -[MTLToolsRenderCommandEncoder dispatchThreadsPerTile:]
  -[MTLToolsRenderCommandEncoder setFragmentAccelerationStructure:atBufferIndex:]
  -[MTLToolsRenderCommandEncoder setDepthClipModeSPI:]
  -[MTLToolsRenderCommandEncoder setViewport:]
  -[MTLToolsRenderCommandEncoder memoryBarrierWithResources:count:afterStages:beforeStages:]
  -[MTLToolsRenderCommandEncoder setColorStoreActionOptions:atIndex:]
  -[MTLToolsRenderCommandEncoder setStencilStoreActionOptions:]
  -[MTLToolsRenderCommandEncoder setDepthStoreActionOptions:]
  -[MTLToolsRenderCommandEncoder setStencilCleared]
  -[MTLToolsRenderCommandEncoder setFragmentVisibleFunctionTable:atBufferIndex:]
  -[MTLToolsRenderCommandEncoder setTileVisibleFunctionTable:atBufferIndex:]
  -[MTLToolsRenderCommandEncoder useHeap:]
  -[MTLToolsRenderCommandEncoder useResource:usage:]
  -[MTLToolsRenderCommandEncoder executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:]
  -[MTLToolsRenderCommandEncoder setVertexBuffer:offset:atIndex:]
  -[MTLToolsRenderCommandEncoder setFragmentBuffer:offset:atIndex:]
  -[MTLToolsRenderCommandEncoder setVertexBufferOffset:atIndex:]
  -[MTLToolsRenderCommandEncoder setFragmentBufferOffset:atIndex:]
  -[MTLToolsRenderCommandEncoder setScissorRect:]
  -[MTLToolsRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:]
  -[MTLToolsRenderCommandEncoder setRenderPipelineState:]
  -[MTLToolsRenderCommandEncoder setFragmentTexture:atTextureIndex:samplerState:atSamplerIndex:]
  -[MTLToolsRenderCommandEncoder setFragmentTexture:atIndex:]
  -[MTLToolsRenderCommandEncoder setFragmentSamplerState:atIndex:]
  -[MTLToolsRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:instanceCount:]
  -[MTLToolsRenderCommandEncoder setFrontFacingWinding:]
  -[MTLToolsRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:]
  -[MTLToolsRenderCommandEncoder setTriangleFillMode:]
  -[MTLToolsRenderCommandEncoder setBlendColorRed:green:blue:alpha:]
  -[MTLToolsRenderCommandEncoder setDepthBias:slopeScale:clamp:]
  -[MTLToolsRenderCommandEncoder setDepthStencilState:]
  -[MTLToolsRenderCommandEncoder setVisibilityResultMode:offset:]
  -[MTLToolsRenderCommandEncoder executeCommandsInBuffer:withRange:]
  -[MTLToolsRenderCommandEncoder setTileIntersectionFunctionTable:atBufferIndex:]
  -[MTLToolsRenderCommandEncoder setFragmentVisibleFunctionTables:withBufferRange:]
  -[MTLToolsRenderCommandEncoder setVertexIntersectionFunctionTable:atBufferIndex:]
  -[MTLToolsRenderCommandEncoder updateFence:afterStages:]
  -[MTLToolsRenderCommandEncoder memoryBarrierWithScope:afterStages:beforeStages:]
  -[MTLToolsRenderCommandEncoder setTileIntersectionFunctionTables:withBufferRange:]
  -[MTLToolsRenderCommandEncoder useHeap:stages:]
  -[MTLToolsRenderCommandEncoder setCullMode:]
  -[MTLToolsRenderCommandEncoder useHeaps:count:stages:]
  -[MTLToolsRenderCommandEncoder useResource:usage:stages:]
  -[MTLToolsRenderCommandEncoder useResources:count:usage:stages:]
  -[MTLToolsRenderCommandEncoder waitForFence:beforeStages:]
  -[MTLToolsRenderCommandEncoder setDepthCleared]
  -[MTLToolsRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:]
  -[MTLToolsRenderCommandEncoder setTessellationFactorScale:]
  -[MTLToolsRenderCommandEncoder setVertexTextures:withRange:]
  -[MTLToolsRenderCommandEncoder setFragmentTextures:withRange:]
  -[MTLToolsRenderCommandEncoder setViewports:count:]
  -[MTLToolsRenderCommandEncoder setScissorRects:count:]
  -[MTLToolsRenderCommandEncoder drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:]
  -[MTLToolsRenderCommandEncoder setTessellationFactorBuffer:offset:instanceStride:]
  -[MTLToolsRenderCommandEncoder drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:]
  -[MTLToolsRenderCommandEncoder setVertexSamplerStates:withRange:]
  -[MTLToolsRenderCommandEncoder setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLToolsRenderCommandEncoder setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLToolsRenderCommandEncoder setFragmentSamplerStates:withRange:]
  -[MTLToolsRenderCommandEncoder setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLToolsRenderCommandEncoder setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLToolsRenderCommandEncoder setStencilFrontReferenceValue:backReferenceValue:]
  -[MTLToolsRenderCommandEncoder drawPrimitives:indirectBuffer:indirectBufferOffset:]
  -[MTLToolsRenderCommandEncoder drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLToolsRenderCommandEncoder setThreadgroupMemoryLength:offset:atIndex:]
  -[MTLToolsRenderCommandEncoder setTileBytes:length:atIndex:]
  -[MTLToolsRenderCommandEncoder initWithRenderCommandEncoder:parent:descriptor:]
  -[MTLToolsRenderCommandEncoder drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLToolsRenderCommandEncoder drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLToolsRenderCommandEncoder dispatchThreadsPerTile:inRegion:]
  -[MTLToolsRenderCommandEncoder setTileBufferOffset:atIndex:]
  -[MTLToolsRenderCommandEncoder setTileBuffers:offsets:withRange:]
  -[MTLToolsRenderCommandEncoder setTileTextures:withRange:]
  -[MTLToolsRenderCommandEncoder setTileSamplerStates:withRange:]
  -[MTLToolsRenderCommandEncoder setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLToolsRenderCommandEncoder setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLToolsRenderCommandEncoder setVertexAmplificationMode:value:]
  -[MTLToolsRenderCommandEncoder setColorResolveTexture:slice:depthPlane:level:atIndex:]
  -[MTLToolsRenderCommandEncoder setDepthResolveTexture:slice:depthPlane:level:]
  -[MTLToolsRenderCommandEncoder setDepthResolveTexture:slice:depthPlane:level:yInvert:]
  -[MTLToolsRenderCommandEncoder setStencilResolveTexture:slice:depthPlane:level:]
  -[MTLToolsRenderCommandEncoder setStencilResolveTexture:slice:depthPlane:level:yInvert:]
  -[MTLToolsRenderCommandEncoder setVertexSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:]
  -[MTLToolsRenderCommandEncoder setCommandDataCorruptModeSPI:]
  -[MTLToolsRenderCommandEncoder setFragmentSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:]
  -[MTLToolsRenderCommandEncoder setAlphaTestReferenceValue:]
  -[MTLToolsRenderCommandEncoder setClipPlane:p2:p3:p4:atIndex:]
  -[MTLToolsRenderCommandEncoder setViewportTransformEnabled:]
  -[MTLToolsRenderCommandEncoder setProvokingVertexMode:]
  -[MTLToolsRenderCommandEncoder setPrimitiveRestartEnabled:]
  -[MTLToolsRenderCommandEncoder setPrimitiveRestartEnabled:index:]
  -[MTLToolsRenderCommandEncoder setTriangleFrontFillMode:backFillMode:]
  -[MTLToolsRenderCommandEncoder setTransformFeedbackState:]
  -[MTLToolsRenderCommandEncoder addSplitHandler:]
  -[MTLToolsRenderCommandEncoder useRenderPipelineState:]
  -[MTLToolsRenderCommandEncoder useRenderPipelineStates:count:]
  -[MTLToolsRenderCommandEncoder useResourceGroup:usage:stages:]
  -[MTLToolsRenderCommandEncoder setVisibleFunctionTable:atBufferIndex:stage:]
  -[MTLToolsRenderCommandEncoder setVisibleFunctionTables:withBufferRange:stage:]
  -[MTLToolsRenderCommandEncoder setIntersectionFunctionTable:atBufferIndex:stage:]
  -[MTLToolsRenderCommandEncoder setIntersectionFunctionTables:withBufferRange:stage:]
  -[MTLToolsRenderCommandEncoder setAccelerationStructure:atBufferIndex:stage:]
  -[MTLToolsRenderCommandEncoder setColorResolveTexture:slice:depthPlane:level:atIndex:yInvert:]


MTLGPUDebugIntersectionFunctionTable : MTLToolsIntersectionFunctionTable <MTLGPUDebugResource>
 @property  <MTLIntersectionFunctionTable> *baseObject
 @property  unsigned long length
 @property  unsigned long gpuAddress
 @property  int responsibleProcess
 @property  unsigned long allocationID
 @property  unsigned long protectionOptions
 @property  unsigned long unfilteredResourceOptions
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long cpuCacheMode
 @property  unsigned long storageMode
 @property  unsigned long hazardTrackingMode
 @property  unsigned long resourceOptions
 @property  <MTLHeap> *heap
 @property  unsigned long heapOffset
 @property  unsigned long allocatedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLGPUDebugIntersectionFunctionTable setBuffer:offset:atIndex:]
  -[MTLGPUDebugIntersectionFunctionTable gpuAddress]
  -[MTLGPUDebugIntersectionFunctionTable setVisibleFunctionTable:atBufferIndex:]
  -[MTLGPUDebugIntersectionFunctionTable length]
  -[MTLGPUDebugIntersectionFunctionTable setFunctions:withRange:]
  -[MTLGPUDebugIntersectionFunctionTable setFunction:atIndex:]
  -[MTLGPUDebugIntersectionFunctionTable setBuffers:offsets:withRange:]
  -[MTLGPUDebugIntersectionFunctionTable dealloc]
  -[MTLGPUDebugIntersectionFunctionTable setVisibleFunctionTables:withBufferRange:]
  -[MTLGPUDebugIntersectionFunctionTable handleForOffset:]
  -[MTLGPUDebugIntersectionFunctionTable useWithRenderEncoder:usage:stages:]
  -[MTLGPUDebugIntersectionFunctionTable _setupIdentifier]
  -[MTLGPUDebugIntersectionFunctionTable initWithIntersectionFunctionTable:device:descriptor:]
  -[MTLGPUDebugIntersectionFunctionTable initWithIntersectionFunctionTable:device:descriptor:renderPipelineState:]
  -[MTLGPUDebugIntersectionFunctionTable initWithIntersectionFunctionTable:device:descriptor:computePipelineState:]
  -[MTLGPUDebugIntersectionFunctionTable useWithComputeEncoder:usage:]


MTLTelemetryTexture : MTLToolsTexture
  // instance methods
  -[MTLTelemetryTexture newTextureViewWithPixelFormat:]
  -[MTLTelemetryTexture newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:]
  -[MTLTelemetryTexture newTextureViewWithPixelFormat:textureType:levels:slices:]
  -[MTLTelemetryTexture initWithBaseTexture:device:descriptor:]
  -[MTLTelemetryTexture initMipmapClipType]
  -[MTLTelemetryTexture accumTextureDistribution:category:pixelFormat:baseAddr:rowBytes:isLinear:]
  -[MTLTelemetryTexture initWithBaseTexture:device:descriptor:plane:]
  -[MTLTelemetryTexture initWithBaseTexture:device:texture:descriptor:]
  -[MTLTelemetryTexture initWithBaseTexture:device:texture:pixelFormat:textureType:levels:slices:swizzle:]
  -[MTLTelemetryTexture initWithBaseTexture:device:buffer:descriptor:offset:bytesPerRow:]
  -[MTLTelemetryTexture initWithBaseTexture:device:texture:pixelFormat:]


MTLGPUDebugIndirectComputeCommand : MTLToolsIndirectComputeCommand
  // instance methods
  -[MTLGPUDebugIndirectComputeCommand reset]
  -[MTLGPUDebugIndirectComputeCommand setComputePipelineState:]
  -[MTLGPUDebugIndirectComputeCommand setThreadgroupMemoryLength:atIndex:]
  -[MTLGPUDebugIndirectComputeCommand dealloc]
  -[MTLGPUDebugIndirectComputeCommand setStageInRegion:]
  -[MTLGPUDebugIndirectComputeCommand setKernelBuffer:offset:atIndex:]
  -[MTLGPUDebugIndirectComputeCommand concurrentDispatchThreadgroups:threadsPerThreadgroup:]
  -[MTLGPUDebugIndirectComputeCommand concurrentDispatchThreads:threadsPerThreadgroup:]
  -[MTLGPUDebugIndirectComputeCommand setBarrier]
  -[MTLGPUDebugIndirectComputeCommand clearBarrier]
  -[MTLGPUDebugIndirectComputeCommand initWithIndirectComputeCommand:commandIndex:indirectCommandBuffer:]


MTLToolsRasterizationRateMap : MTLToolsObject <MTLRasterizationRateMapSPI>
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  {?=QQQ} screenSize
 @property  {?=QQQ} physicalGranularity
 @property  unsigned long layerCount
 @property  {?=QQ} parameterBufferSizeAndAlign
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsRasterizationRateMap label]
  -[MTLToolsRasterizationRateMap formattedDescription:]
  -[MTLToolsRasterizationRateMap screenSize]
  -[MTLToolsRasterizationRateMap layerCount]
  -[MTLToolsRasterizationRateMap device]
  -[MTLToolsRasterizationRateMap copyParameterDataToBuffer:offset:]
  -[MTLToolsRasterizationRateMap physicalGranularity]
  -[MTLToolsRasterizationRateMap parameterBufferSizeAndAlign]
  -[MTLToolsRasterizationRateMap physicalSizeForLayer:]
  -[MTLToolsRasterizationRateMap mapScreenToPhysicalCoordinates:forLayer:]
  -[MTLToolsRasterizationRateMap mapPhysicalToScreenCoordinates:forLayer:]


MTLDebugIntersectionFunctionTable : MTLToolsIntersectionFunctionTable <MTLDebugResourcePurgeable>
 @property  unsigned long functionCount
 @property  unsigned long stage

  // instance methods
  -[MTLDebugIntersectionFunctionTable functionCount]
  -[MTLDebugIntersectionFunctionTable setOpaqueTriangleIntersectionFunctionWithSignature:withRange:]
  -[MTLDebugIntersectionFunctionTable setFunctions:withRange:]
  -[MTLDebugIntersectionFunctionTable setPurgeableState:]
  -[MTLDebugIntersectionFunctionTable setFunction:atIndex:]
  -[MTLDebugIntersectionFunctionTable setOpaqueTriangleIntersectionFunctionWithSignature:atIndex:]
  -[MTLDebugIntersectionFunctionTable dealloc]
  -[MTLDebugIntersectionFunctionTable stage]
  -[MTLDebugIntersectionFunctionTable initWithBaseObject:parent:]
  -[MTLDebugIntersectionFunctionTable lockPurgeableState]
  -[MTLDebugIntersectionFunctionTable unlockPurgeableState]
  -[MTLDebugIntersectionFunctionTable purgeableStateValidForRendering]
  -[MTLDebugIntersectionFunctionTable initWithIntersectionFunctionTable:parent:descriptor:stage:]
  -[MTLDebugIntersectionFunctionTable initWithIntersectionFunctionTable:parent:descriptor:pipelineState:stage:]


MTLCountersTraceCommandEncoder : NSObject
 @property  unsigned long flags
 @property  {_NSRange=QQ} segment

  // instance methods
  -[MTLCountersTraceCommandEncoder pushDebugGroup:]
  -[MTLCountersTraceCommandEncoder segment]
  -[MTLCountersTraceCommandEncoder flags]
  -[MTLCountersTraceCommandEncoder insertDebugSignpost:]
  -[MTLCountersTraceCommandEncoder popDebugGroup]
  -[MTLCountersTraceCommandEncoder endEncoding]
  -[MTLCountersTraceCommandEncoder setLabel:]
  -[MTLCountersTraceCommandEncoder init:flags:]


MTLCountersTraceBlitCommandEncoder : MTLCountersTraceCommandEncoder
  // instance methods
  -[MTLCountersTraceBlitCommandEncoder init:]
  -[MTLCountersTraceBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:]
  -[MTLCountersTraceBlitCommandEncoder optimizeContentsForGPUAccess:]
  -[MTLCountersTraceBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:]
  -[MTLCountersTraceBlitCommandEncoder copyFromTexture:toTexture:]
  -[MTLCountersTraceBlitCommandEncoder fillBuffer:range:pattern4:]
  -[MTLCountersTraceBlitCommandEncoder optimizeContentsForCPUAccess:]
  -[MTLCountersTraceBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:]
  -[MTLCountersTraceBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:]
  -[MTLCountersTraceBlitCommandEncoder fillTexture:level:slice:region:color:pixelFormat:]
  -[MTLCountersTraceBlitCommandEncoder synchronizeResource:]
  -[MTLCountersTraceBlitCommandEncoder optimizeContentsForCPUAccess:slice:level:]
  -[MTLCountersTraceBlitCommandEncoder updateFence:]
  -[MTLCountersTraceBlitCommandEncoder copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:]
  -[MTLCountersTraceBlitCommandEncoder fillBuffer:range:value:]
  -[MTLCountersTraceBlitCommandEncoder fillTexture:level:slice:region:bytes:length:]
  -[MTLCountersTraceBlitCommandEncoder fillTexture:level:slice:region:color:]
  -[MTLCountersTraceBlitCommandEncoder generateMipmapsForTexture:]
  -[MTLCountersTraceBlitCommandEncoder synchronizeTexture:slice:level:]
  -[MTLCountersTraceBlitCommandEncoder waitForFence:]
  -[MTLCountersTraceBlitCommandEncoder optimizeContentsForGPUAccess:slice:level:]
  -[MTLCountersTraceBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]
  -[MTLCountersTraceBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:]
  -[MTLCountersTraceBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]
  -[MTLCountersTraceBlitCommandEncoder getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:]
  -[MTLCountersTraceBlitCommandEncoder resetTextureAccessCounters:region:mipLevel:slice:]


MTLCountersTraceComputeCommandEncoder : MTLCountersTraceCommandEncoder
  // instance methods
  -[MTLCountersTraceComputeCommandEncoder init:]
  -[MTLCountersTraceComputeCommandEncoder memoryBarrierWithScope:]
  -[MTLCountersTraceComputeCommandEncoder setBuffer:offset:atIndex:]
  -[MTLCountersTraceComputeCommandEncoder useResources:count:usage:]
  -[MTLCountersTraceComputeCommandEncoder setVisibleFunctionTable:atBufferIndex:]
  -[MTLCountersTraceComputeCommandEncoder useHeaps:count:]
  -[MTLCountersTraceComputeCommandEncoder setIntersectionFunctionTable:atBufferIndex:]
  -[MTLCountersTraceComputeCommandEncoder updateFence:]
  -[MTLCountersTraceComputeCommandEncoder setBytes:length:atIndex:]
  -[MTLCountersTraceComputeCommandEncoder setSamplerState:atIndex:]
  -[MTLCountersTraceComputeCommandEncoder dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:]
  -[MTLCountersTraceComputeCommandEncoder setComputePipelineState:]
  -[MTLCountersTraceComputeCommandEncoder useHeap:]
  -[MTLCountersTraceComputeCommandEncoder useResource:usage:]
  -[MTLCountersTraceComputeCommandEncoder setTexture:atIndex:]
  -[MTLCountersTraceComputeCommandEncoder setIntersectionFunctionTables:withBufferRange:]
  -[MTLCountersTraceComputeCommandEncoder setThreadgroupMemoryLength:atIndex:]
  -[MTLCountersTraceComputeCommandEncoder setBuffers:offsets:withRange:]
  -[MTLCountersTraceComputeCommandEncoder memoryBarrierWithResources:count:]
  -[MTLCountersTraceComputeCommandEncoder dispatchThreadgroups:threadsPerThreadgroup:]
  -[MTLCountersTraceComputeCommandEncoder setVisibleFunctionTables:withBufferRange:]
  -[MTLCountersTraceComputeCommandEncoder waitForFence:]
  -[MTLCountersTraceComputeCommandEncoder setTextures:withRange:]
  -[MTLCountersTraceComputeCommandEncoder setBufferOffset:atIndex:]
  -[MTLCountersTraceComputeCommandEncoder setSamplerStates:withRange:]
  -[MTLCountersTraceComputeCommandEncoder setSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLCountersTraceComputeCommandEncoder setSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLCountersTraceComputeCommandEncoder setStageInRegion:]
  -[MTLCountersTraceComputeCommandEncoder setStageInRegionWithIndirectBuffer:indirectBufferOffset:]
  -[MTLCountersTraceComputeCommandEncoder dispatchThreads:threadsPerThreadgroup:]
  -[MTLCountersTraceComputeCommandEncoder dispatchThreadsWithIndirectBuffer:indirectBufferOffset:]


MTLCountersTraceRenderCommandEncoder : MTLCountersTraceCommandEncoder
  // instance methods
  -[MTLCountersTraceRenderCommandEncoder init:]
  -[MTLCountersTraceRenderCommandEncoder setColorStoreAction:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setStencilReferenceValue:]
  -[MTLCountersTraceRenderCommandEncoder setDepthClipMode:]
  -[MTLCountersTraceRenderCommandEncoder setVertexBuffers:offsets:withRange:]
  -[MTLCountersTraceRenderCommandEncoder setVertexTexture:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setVertexSamplerState:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setFragmentBuffers:offsets:withRange:]
  -[MTLCountersTraceRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:]
  -[MTLCountersTraceRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:]
  -[MTLCountersTraceRenderCommandEncoder useResources:count:usage:]
  -[MTLCountersTraceRenderCommandEncoder useHeaps:count:]
  -[MTLCountersTraceRenderCommandEncoder setVertexBytes:length:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setFragmentBytes:length:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setDepthStoreAction:]
  -[MTLCountersTraceRenderCommandEncoder setStencilStoreAction:]
  -[MTLCountersTraceRenderCommandEncoder setTileTexture:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setTileSamplerState:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setTileBuffer:offset:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder dispatchThreadsPerTile:]
  -[MTLCountersTraceRenderCommandEncoder setViewport:]
  -[MTLCountersTraceRenderCommandEncoder memoryBarrierWithResources:count:afterStages:beforeStages:]
  -[MTLCountersTraceRenderCommandEncoder useHeap:]
  -[MTLCountersTraceRenderCommandEncoder useResource:usage:]
  -[MTLCountersTraceRenderCommandEncoder setVertexBuffer:offset:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setFragmentBuffer:offset:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setVertexBufferOffset:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setFragmentBufferOffset:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setScissorRect:]
  -[MTLCountersTraceRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:]
  -[MTLCountersTraceRenderCommandEncoder setRenderPipelineState:]
  -[MTLCountersTraceRenderCommandEncoder setFragmentTexture:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setFragmentSamplerState:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:instanceCount:]
  -[MTLCountersTraceRenderCommandEncoder setFrontFacingWinding:]
  -[MTLCountersTraceRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:]
  -[MTLCountersTraceRenderCommandEncoder setTriangleFillMode:]
  -[MTLCountersTraceRenderCommandEncoder setBlendColorRed:green:blue:alpha:]
  -[MTLCountersTraceRenderCommandEncoder setDepthBias:slopeScale:clamp:]
  -[MTLCountersTraceRenderCommandEncoder setDepthStencilState:]
  -[MTLCountersTraceRenderCommandEncoder setVisibilityResultMode:offset:]
  -[MTLCountersTraceRenderCommandEncoder updateFence:afterStages:]
  -[MTLCountersTraceRenderCommandEncoder memoryBarrierWithScope:afterStages:beforeStages:]
  -[MTLCountersTraceRenderCommandEncoder useHeap:stages:]
  -[MTLCountersTraceRenderCommandEncoder setCullMode:]
  -[MTLCountersTraceRenderCommandEncoder useHeaps:count:stages:]
  -[MTLCountersTraceRenderCommandEncoder useResource:usage:stages:]
  -[MTLCountersTraceRenderCommandEncoder useResources:count:usage:stages:]
  -[MTLCountersTraceRenderCommandEncoder waitForFence:beforeStages:]
  -[MTLCountersTraceRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:]
  -[MTLCountersTraceRenderCommandEncoder setTessellationFactorScale:]
  -[MTLCountersTraceRenderCommandEncoder setVertexTextures:withRange:]
  -[MTLCountersTraceRenderCommandEncoder setFragmentTextures:withRange:]
  -[MTLCountersTraceRenderCommandEncoder setViewports:count:]
  -[MTLCountersTraceRenderCommandEncoder setScissorRects:count:]
  -[MTLCountersTraceRenderCommandEncoder drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:]
  -[MTLCountersTraceRenderCommandEncoder setTessellationFactorBuffer:offset:instanceStride:]
  -[MTLCountersTraceRenderCommandEncoder drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:]
  -[MTLCountersTraceRenderCommandEncoder setVertexSamplerStates:withRange:]
  -[MTLCountersTraceRenderCommandEncoder setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLCountersTraceRenderCommandEncoder setFragmentSamplerStates:withRange:]
  -[MTLCountersTraceRenderCommandEncoder setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLCountersTraceRenderCommandEncoder setStencilFrontReferenceValue:backReferenceValue:]
  -[MTLCountersTraceRenderCommandEncoder drawPrimitives:indirectBuffer:indirectBufferOffset:]
  -[MTLCountersTraceRenderCommandEncoder drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLCountersTraceRenderCommandEncoder setThreadgroupMemoryLength:offset:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setTileBytes:length:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLCountersTraceRenderCommandEncoder drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLCountersTraceRenderCommandEncoder setTileBufferOffset:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setTileBuffers:offsets:withRange:]
  -[MTLCountersTraceRenderCommandEncoder setTileTextures:withRange:]
  -[MTLCountersTraceRenderCommandEncoder setTileSamplerStates:withRange:]
  -[MTLCountersTraceRenderCommandEncoder setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLCountersTraceRenderCommandEncoder setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:]


MTLCountersTraceResourceStateCommandEncoder : MTLCountersTraceCommandEncoder
  // instance methods
  -[MTLCountersTraceResourceStateCommandEncoder init:]
  -[MTLCountersTraceResourceStateCommandEncoder updateFence:]
  -[MTLCountersTraceResourceStateCommandEncoder waitForFence:]
  -[MTLCountersTraceResourceStateCommandEncoder updateTextureMappings:mode:regions:mipLevels:slices:numRegions:]
  -[MTLCountersTraceResourceStateCommandEncoder updateTextureMapping:mode:region:mipLevel:slice:]
  -[MTLCountersTraceResourceStateCommandEncoder updateTextureMapping:mode:indirectBuffer:indirectBufferOffset:]
  -[MTLCountersTraceResourceStateCommandEncoder copyMappingStateFromTexture:mipLevel:slice:toBuffer:offset:numTiles:]


MTLCountersTraceCommandBuffer : NSObject
  // instance methods
  -[MTLCountersTraceCommandBuffer presentDrawable:]
  -[MTLCountersTraceCommandBuffer presentDrawable:atTime:]
  -[MTLCountersTraceCommandBuffer init:]
  -[MTLCountersTraceCommandBuffer .cxx_construct]
  -[MTLCountersTraceCommandBuffer waitUntilScheduled]
  -[MTLCountersTraceCommandBuffer blitCommandEncoder]
  -[MTLCountersTraceCommandBuffer dealloc]
  -[MTLCountersTraceCommandBuffer waitUntilCompleted]
  -[MTLCountersTraceCommandBuffer computeCommandEncoder]
  -[MTLCountersTraceCommandBuffer resourceStateCommandEncoder]
  -[MTLCountersTraceCommandBuffer renderCommandEncoder]
  -[MTLCountersTraceCommandBuffer appendSamples:length:]
  -[MTLCountersTraceCommandBuffer saveCommandBuffer:queue:profilingResults:]


MTLToolsRenderPipelineState : MTLToolsObject <MTLRenderPipelineStateSPI>
 @property  unsigned long resourceIndex
 @property  unsigned long gpuAddress
 @property  long long textureWriteRoundingMode
 @property  unsigned long allocatedSize
 @property  unsigned long uniqueIdentifier
 @property  MTLDebugInstrumentationData *vertexDebugInstrumentationData
 @property  MTLDebugInstrumentationData *fragmentDebugInstrumentationData
 @property  MTLDebugInstrumentationData *tileDebugInstrumentationData
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long maxTotalThreadsPerThreadgroup
 @property  BOOL threadgroupSizeMatchesTileSize
 @property  unsigned long imageblockSampleLength
 @property  BOOL supportIndirectCommandBuffers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsRenderPipelineState textureWriteRoundingMode]
  -[MTLToolsRenderPipelineState imageblockSampleLength]
  -[MTLToolsRenderPipelineState supportIndirectCommandBuffers]
  -[MTLToolsRenderPipelineState label]
  -[MTLToolsRenderPipelineState newRenderPipelineStateWithAdditionalBinaryFunctions:fragmentAdditionalBinaryFunctions:error:]
  -[MTLToolsRenderPipelineState imageblockMemoryLengthForDimensions:]
  -[MTLToolsRenderPipelineState uniqueIdentifier]
  -[MTLToolsRenderPipelineState gpuAddress]
  -[MTLToolsRenderPipelineState vertexFunctionHandleWithFunction:]
  -[MTLToolsRenderPipelineState resourceIndex]
  -[MTLToolsRenderPipelineState newFragmentIntersectionFunctionTableWithDescriptor:]
  -[MTLToolsRenderPipelineState maxTotalThreadsPerThreadgroup]
  -[MTLToolsRenderPipelineState allocatedSize]
  -[MTLToolsRenderPipelineState functionHandleWithFunction:stage:]
  -[MTLToolsRenderPipelineState getFragmentShaderTelemetryID]
  -[MTLToolsRenderPipelineState tileDebugInstrumentationData]
  -[MTLToolsRenderPipelineState newVertexIntersectionFunctionTableWithDescriptor:]
  -[MTLToolsRenderPipelineState fragmentDebugInstrumentationData]
  -[MTLToolsRenderPipelineState getVertexShaderTelemetryID]
  -[MTLToolsRenderPipelineState tileFunctionHandleWithFunction:]
  -[MTLToolsRenderPipelineState newRenderPipelineStateWithAdditionalBinaryFunctions:error:]
  -[MTLToolsRenderPipelineState newTileIntersectionFunctionTableWithDescriptor:]
  -[MTLToolsRenderPipelineState newVisibleFunctionTableFromVertexStageWithDescriptor:]
  -[MTLToolsRenderPipelineState threadgroupSizeMatchesTileSize]
  -[MTLToolsRenderPipelineState newTileRenderPipelineStateWithAdditionalBinaryFunctions:error:]
  -[MTLToolsRenderPipelineState newVisibleFunctionTableFromTileStageWithDescriptor:]
  -[MTLToolsRenderPipelineState newIntersectionFunctionTableWithDescriptor:stage:]
  -[MTLToolsRenderPipelineState dealloc]
  -[MTLToolsRenderPipelineState newVisibleFunctionTableFromFragmentStageWithDescriptor:]
  -[MTLToolsRenderPipelineState newVisibleFunctionTableWithDescriptor:stage:]
  -[MTLToolsRenderPipelineState vertexDebugInstrumentationData]
  -[MTLToolsRenderPipelineState fragmentFunctionHandleWithFunction:]
  -[MTLToolsRenderPipelineState device]
  -[MTLToolsRenderPipelineState newVertexShaderDebugInfo]
  -[MTLToolsRenderPipelineState newFragmentShaderDebugInfo]
  -[MTLToolsRenderPipelineState newVisibleFunctionTableWithDescriptor:selector:]
  -[MTLToolsRenderPipelineState newIntersectionFunctionTableWithDescriptor:selector:]


MTLToolsResource : MTLToolsObject <MTLResourceSPI>
 @property  unsigned long options
 @property  int responsibleProcess
 @property  unsigned long allocationID
 @property  unsigned long protectionOptions
 @property  unsigned long unfilteredResourceOptions
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long cpuCacheMode
 @property  unsigned long storageMode
 @property  unsigned long hazardTrackingMode
 @property  unsigned long resourceOptions
 @property  <MTLHeap> *heap
 @property  unsigned long heapOffset
 @property  unsigned long allocatedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsResource label]
  -[MTLToolsResource hazardTrackingMode]
  -[MTLToolsResource isPurgeable]
  -[MTLToolsResource heapOffset]
  -[MTLToolsResource heap]
  -[MTLToolsResource cpuCacheMode]
  -[MTLToolsResource protectionOptions]
  -[MTLToolsResource setOwnerWithIdentity:]
  -[MTLToolsResource options]
  -[MTLToolsResource isAliasable]
  -[MTLToolsResource allocatedSize]
  -[MTLToolsResource responsibleProcess]
  -[MTLToolsResource doesAliasAnyResources:count:]
  -[MTLToolsResource doesAliasAllResources:count:]
  -[MTLToolsResource resourceOptions]
  -[MTLToolsResource unfilteredResourceOptions]
  -[MTLToolsResource setResponsibleProcess:]
  -[MTLToolsResource doesAliasResource:]
  -[MTLToolsResource makeAliasable]
  -[MTLToolsResource waitUntilComplete]
  -[MTLToolsResource storageMode]
  -[MTLToolsResource allocationID]
  -[MTLToolsResource setPurgeableState:]
  -[MTLToolsResource isComplete]
  -[MTLToolsResource dealloc]
  -[MTLToolsResource setLabel:]
  -[MTLToolsResource initWithBaseObject:parent:]
  -[MTLToolsResource initWithBaseObject:parent:heap:]
  -[MTLToolsResource validateCPUReadable]
  -[MTLToolsResource validateCPUWriteable]


MTLToolsResourceGroupSPI : MTLToolsObject <MTLResourceGroupSPI>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsResourceGroupSPI containsResource:]


MTLGPUDebugIndirectRenderCommand : MTLToolsIndirectRenderCommand
  // instance methods
  -[MTLGPUDebugIndirectRenderCommand setVertexBuffer:offset:atIndex:]
  -[MTLGPUDebugIndirectRenderCommand setFragmentBuffer:offset:atIndex:]
  -[MTLGPUDebugIndirectRenderCommand setRenderPipelineState:]
  -[MTLGPUDebugIndirectRenderCommand dealloc]
  -[MTLGPUDebugIndirectRenderCommand drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:]
  -[MTLGPUDebugIndirectRenderCommand initWithIndirectRenderCommand:commandIndex:indirectCommandBuffer:]


MTLToolsSamplerState : MTLToolsObject <MTLSamplerState, MTLSamplerStateSPI>
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long pixelFormat
 @property  unsigned long resourceIndex
 @property  unsigned long gpuAddress
 @property  unsigned long uniqueIdentifier

  // instance methods
  -[MTLToolsSamplerState label]
  -[MTLToolsSamplerState uniqueIdentifier]
  -[MTLToolsSamplerState gpuAddress]
  -[MTLToolsSamplerState resourceIndex]
  -[MTLToolsSamplerState pixelFormat]
  -[MTLToolsSamplerState dealloc]
  -[MTLToolsSamplerState device]
  -[MTLToolsSamplerState initWithSamplerState:descriptor:device:]


MTLToolsTexture : MTLToolsResource <MTLTextureImplementation>
 @property  <MTLTexture> *parentTexture
 @property  <MTLBuffer> *buffer
 @property  unsigned long bufferOffset
 @property  unsigned long bufferBytesPerRow
 @property  ^{__IOSurface=} iosurface
 @property  unsigned long iosurfacePlane
 @property  unsigned long rotation
 @property  BOOL isCompressed
 @property  long long compressionFeedback
 @property  unsigned long uniqueIdentifier
 @property  unsigned long resourceIndex
 @property  unsigned long gpuAddress
 @property  unsigned int swizzleKey
 @property  unsigned long numFaces
 @property  BOOL isDrawable
 @property  unsigned long sparseSurfaceDefaultValue
 @property  unsigned long compressionFootprint
 @property  <MTLResource> *rootResource
 @property  unsigned long parentRelativeLevel
 @property  unsigned long parentRelativeSlice
 @property  unsigned long textureType
 @property  unsigned long pixelFormat
 @property  unsigned long width
 @property  unsigned long height
 @property  unsigned long depth
 @property  unsigned long mipmapLevelCount
 @property  unsigned long sampleCount
 @property  unsigned long arrayLength
 @property  unsigned long usage
 @property  BOOL shareable
 @property  BOOL framebufferOnly
 @property  unsigned long firstMipmapInTail
 @property  unsigned long tailSizeInBytes
 @property  BOOL isSparse
 @property  BOOL allowGPUOptimizedContents
 @property  long long compressionType
 @property  {?=CCCC} swizzle
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long cpuCacheMode
 @property  unsigned long storageMode
 @property  unsigned long hazardTrackingMode
 @property  unsigned long resourceOptions
 @property  <MTLHeap> *heap
 @property  unsigned long heapOffset
 @property  unsigned long allocatedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int responsibleProcess
 @property  unsigned long allocationID
 @property  unsigned long protectionOptions
 @property  unsigned long unfilteredResourceOptions

  // instance methods
  -[MTLToolsTexture isDrawable]
  -[MTLToolsTexture sparseSurfaceDefaultValue]
  -[MTLToolsTexture width]
  -[MTLToolsTexture parentRelativeSlice]
  -[MTLToolsTexture numFaces]
  -[MTLToolsTexture uniqueIdentifier]
  -[MTLToolsTexture tailSizeInBytes]
  -[MTLToolsTexture iosurface]
  -[MTLToolsTexture allowGPUOptimizedContents]
  -[MTLToolsTexture copyFromSlice:mipmapLevel:origin:size:toPixels:rowBytes:imageBytes:]
  -[MTLToolsTexture newSharedTextureHandle]
  -[MTLToolsTexture swizzleKey]
  -[MTLToolsTexture gpuAddress]
  -[MTLToolsTexture getBytes:bytesPerRow:fromRegion:mipmapLevel:]
  -[MTLToolsTexture resourceIndex]
  -[MTLToolsTexture compressionFootprint]
  -[MTLToolsTexture sampleCount]
  -[MTLToolsTexture swizzle]
  -[MTLToolsTexture rootResource]
  -[MTLToolsTexture newCompressedTextureViewWithPixelFormat:textureType:level:slice:]
  -[MTLToolsTexture bufferOffset]
  -[MTLToolsTexture iosurfacePlane]
  -[MTLToolsTexture textureType]
  -[MTLToolsTexture isFramebufferOnly]
  -[MTLToolsTexture compressionFeedback]
  -[MTLToolsTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:]
  -[MTLToolsTexture arrayLength]
  -[MTLToolsTexture pixelFormat]
  -[MTLToolsTexture depth]
  -[MTLToolsTexture formattedDescription:]
  -[MTLToolsTexture isShareable]
  -[MTLToolsTexture isCompressed]
  -[MTLToolsTexture generateMipmapLevel:slice:]
  -[MTLToolsTexture rotation]
  -[MTLToolsTexture copyFromPixels:rowBytes:imageBytes:toSlice:mipmapLevel:origin:size:]
  -[MTLToolsTexture bufferBytesPerRow]
  -[MTLToolsTexture parentRelativeLevel]
  -[MTLToolsTexture isSparse]
  -[MTLToolsTexture usage]
  -[MTLToolsTexture parentTexture]
  -[MTLToolsTexture height]
  -[MTLToolsTexture mipmapLevelCount]
  -[MTLToolsTexture replaceRegion:mipmapLevel:withBytes:bytesPerRow:]
  -[MTLToolsTexture compressionType]
  -[MTLToolsTexture getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:]
  -[MTLToolsTexture tailSize]
  -[MTLToolsTexture newTextureViewWithPixelFormat:]
  -[MTLToolsTexture newTextureViewWithPixelFormat:textureType:levels:slices:resourceIndex:]
  -[MTLToolsTexture newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:resourceIndex:]
  -[MTLToolsTexture newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:]
  -[MTLToolsTexture firstMipmapInTail]
  -[MTLToolsTexture dealloc]
  -[MTLToolsTexture canGenerateMipmapLevels]
  -[MTLToolsTexture newTextureViewWithPixelFormat:resourceIndex:]
  -[MTLToolsTexture buffer]
  -[MTLToolsTexture newTextureViewWithPixelFormat:textureType:levels:slices:]
  -[MTLToolsTexture initWithBaseObject:parent:buffer:]
  -[MTLToolsTexture initWithBaseObject:parent:parentTexture:]
  -[MTLToolsTexture realRootResource]


MTLToolsTextureLayout : MTLToolsObject <MTLTextureLayout>
 @property  unsigned long size
 @property  unsigned long alignment
 @property  {?=QQQ} copyGranularity
 @property  {?=[2Q]} watermark
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsTextureLayout alignment]
  -[MTLToolsTextureLayout copyGranularity]
  -[MTLToolsTextureLayout initializeTextureMemory:]
  -[MTLToolsTextureLayout finalizeTextureMemory:]
  -[MTLToolsTextureLayout watermark]
  -[MTLToolsTextureLayout copyFromTextureMemory:textureSlice:textureLevel:textureRegion:toLinearBytes:linearOffset:linearBytesPerRow:linearBytesPerImage:]
  -[MTLToolsTextureLayout size]
  -[MTLToolsTextureLayout copyFromLinearBytes:linearOffset:linearBytesPerRow:linearBytesPerImage:toTextureMemory:textureSlice:textureLevel:textureRegion:]


MTLCountersParallelRenderCommandEncoder : MTLToolsParallelRenderCommandEncoder
  // instance methods
  -[MTLCountersParallelRenderCommandEncoder setColorStoreAction:atIndex:]
  -[MTLCountersParallelRenderCommandEncoder setDepthStoreAction:]
  -[MTLCountersParallelRenderCommandEncoder setStencilStoreAction:]
  -[MTLCountersParallelRenderCommandEncoder endEncoding]
  -[MTLCountersParallelRenderCommandEncoder dealloc]
  -[MTLCountersParallelRenderCommandEncoder renderCommandEncoder]
  -[MTLCountersParallelRenderCommandEncoder sampledRenderCommandEncoderWithProgramInfoBuffer:capacity:]
  -[MTLCountersParallelRenderCommandEncoder initWithBaseRenderPass:commandBuffer:descriptor:]


MTLGPUDebugCommandBuffer : MTLToolsCommandBuffer <MTLGPUDebugBufferEncoder>
 @property  MTLGPUDebugDevice *device

  // instance methods
  -[MTLGPUDebugCommandBuffer computeCommandEncoderWithDispatchType:]
  -[MTLGPUDebugCommandBuffer accelerationStructureCommandEncoder]
  -[MTLGPUDebugCommandBuffer computeCommandEncoderWithDescriptor:]
  -[MTLGPUDebugCommandBuffer .cxx_construct]
  -[MTLGPUDebugCommandBuffer .cxx_destruct]
  -[MTLGPUDebugCommandBuffer blitCommandEncoderWithDescriptor:]
  -[MTLGPUDebugCommandBuffer renderCommandEncoderWithDescriptor:]
  -[MTLGPUDebugCommandBuffer blitCommandEncoder]
  -[MTLGPUDebugCommandBuffer dealloc]
  -[MTLGPUDebugCommandBuffer computeCommandEncoder]
  -[MTLGPUDebugCommandBuffer parallelRenderCommandEncoderWithDescriptor:]
  -[MTLGPUDebugCommandBuffer sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:]
  -[MTLGPUDebugCommandBuffer temporaryBufferWithBytes:length:]
  -[MTLGPUDebugCommandBuffer temporaryBufferWithLength:]
  -[MTLGPUDebugCommandBuffer markBuffer:usage:stages:]
  -[MTLGPUDebugCommandBuffer markTexture:usage:stages:]
  -[MTLGPUDebugCommandBuffer markHeap:stages:]
  -[MTLGPUDebugCommandBuffer endingEncoder:type:]
  -[MTLGPUDebugCommandBuffer encodeBuffers:offsets:withRange:resultOffset:]
  -[MTLGPUDebugCommandBuffer resourceUsageForBuffer:stage:]
  -[MTLGPUDebugCommandBuffer encoderIdentifierForEncoderIndex:]
  -[MTLGPUDebugCommandBuffer preCompletionHandlers]
  -[MTLGPUDebugCommandBuffer preCommit]
  -[MTLGPUDebugCommandBuffer sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:]
  -[MTLGPUDebugCommandBuffer sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:]
  -[MTLGPUDebugCommandBuffer sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:]
  -[MTLGPUDebugCommandBuffer _newReportBuffer]
  -[MTLGPUDebugCommandBuffer _temporaryBufferWithLength:]
  -[MTLGPUDebugCommandBuffer _encodeReportBuffer:type:]
  -[MTLGPUDebugCommandBuffer _encodeResourceTableBuffers:type:]
  -[MTLGPUDebugCommandBuffer _allocReportEntryStorageForType:]
  -[MTLGPUDebugCommandBuffer _lateInit]
  -[MTLGPUDebugCommandBuffer beginingEncoder:type:]
  -[MTLGPUDebugCommandBuffer _checkReportBuffers]
  -[MTLGPUDebugCommandBuffer initWithCommandBuffer:commandQueue:]
  -[MTLGPUDebugCommandBuffer resourceUsageForTexture:stage:]


MTLToolsResourceStateCommandEncoder : MTLToolsCommandEncoder <MTLResourceStateCommandEncoder>
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsResourceStateCommandEncoder updateFence:]
  -[MTLToolsResourceStateCommandEncoder waitForFence:]
  -[MTLToolsResourceStateCommandEncoder updateTextureMappings:mode:regions:mipLevels:slices:numRegions:]
  -[MTLToolsResourceStateCommandEncoder updateTextureMapping:mode:region:mipLevel:slice:]
  -[MTLToolsResourceStateCommandEncoder updateTextureMapping:mode:indirectBuffer:indirectBufferOffset:]
  -[MTLToolsResourceStateCommandEncoder copyMappingStateFromTexture:mipLevel:slice:toBuffer:offset:numTiles:]


MTLTelemetryParallelRenderCommandEncoder : MTLToolsParallelRenderCommandEncoder
  // instance methods
  -[MTLTelemetryParallelRenderCommandEncoder endEncoding]
  -[MTLTelemetryParallelRenderCommandEncoder renderCommandEncoder]
  -[MTLTelemetryParallelRenderCommandEncoder initWithBaseRenderPass:commandBuffer:descriptor:]


MTLDebugBlitCommandEncoder : MTLToolsBlitCommandEncoder
  // instance methods
  -[MTLDebugBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:]
  -[MTLDebugBlitCommandEncoder optimizeContentsForGPUAccess:]
  -[MTLDebugBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:]
  -[MTLDebugBlitCommandEncoder copyFromTexture:toTexture:]
  -[MTLDebugBlitCommandEncoder fillBuffer:range:pattern4:]
  -[MTLDebugBlitCommandEncoder sampleCountersInBuffer:atSampleIndex:withBarrier:]
  -[MTLDebugBlitCommandEncoder optimizeContentsForCPUAccess:]
  -[MTLDebugBlitCommandEncoder .cxx_construct]
  -[MTLDebugBlitCommandEncoder .cxx_destruct]
  -[MTLDebugBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:]
  -[MTLDebugBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:]
  -[MTLDebugBlitCommandEncoder copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:]
  -[MTLDebugBlitCommandEncoder fillTexture:level:slice:region:color:pixelFormat:]
  -[MTLDebugBlitCommandEncoder optimizeContentsForCPUAccess:slice:level:]
  -[MTLDebugBlitCommandEncoder updateFence:]
  -[MTLDebugBlitCommandEncoder copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:]
  -[MTLDebugBlitCommandEncoder fillBuffer:range:value:]
  -[MTLDebugBlitCommandEncoder fillTexture:level:slice:region:bytes:length:]
  -[MTLDebugBlitCommandEncoder optimizeIndirectCommandBuffer:withRange:]
  -[MTLDebugBlitCommandEncoder fillTexture:level:slice:region:color:]
  -[MTLDebugBlitCommandEncoder generateMipmapsForTexture:]
  -[MTLDebugBlitCommandEncoder endEncoding]
  -[MTLDebugBlitCommandEncoder dealloc]
  -[MTLDebugBlitCommandEncoder resetCommandsInBuffer:withRange:]
  -[MTLDebugBlitCommandEncoder resolveCounters:inRange:destinationBuffer:destinationOffset:]
  -[MTLDebugBlitCommandEncoder waitForFence:]
  -[MTLDebugBlitCommandEncoder optimizeContentsForGPUAccess:slice:level:]
  -[MTLDebugBlitCommandEncoder filterCounterRangeWithFirstBatch:lastBatch:filterIndex:]
  -[MTLDebugBlitCommandEncoder invalidateCompressedTexture:]
  -[MTLDebugBlitCommandEncoder invalidateCompressedTexture:slice:level:]
  -[MTLDebugBlitCommandEncoder _setDefaults]
  -[MTLDebugBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]
  -[MTLDebugBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:]
  -[MTLDebugBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]
  -[MTLDebugBlitCommandEncoder getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:]
  -[MTLDebugBlitCommandEncoder resetTextureAccessCounters:region:mipLevel:slice:]
  -[MTLDebugBlitCommandEncoder internalValidateCopyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]
  -[MTLDebugBlitCommandEncoder validateCopyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:move:]
  -[MTLDebugBlitCommandEncoder validateCopyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]
  -[MTLDebugBlitCommandEncoder validateCopyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:]
  -[MTLDebugBlitCommandEncoder validateTextureAccess:region:mipLevel:slice:]
  -[MTLDebugBlitCommandEncoder validateCopyFromTexture:sourceSlice:sourceLevel:sourceSize:toTexture:destinationSlice:destinationLevel:options:sliceCount:levelCount:]
  -[MTLDebugBlitCommandEncoder initWithBlitCommandEncoder:commandBuffer:]


MTLDebugResourceStateCommandEncoder : MTLToolsResourceStateCommandEncoder
  // instance methods
  -[MTLDebugResourceStateCommandEncoder .cxx_construct]
  -[MTLDebugResourceStateCommandEncoder .cxx_destruct]
  -[MTLDebugResourceStateCommandEncoder updateFence:]
  -[MTLDebugResourceStateCommandEncoder endEncoding]
  -[MTLDebugResourceStateCommandEncoder dealloc]
  -[MTLDebugResourceStateCommandEncoder waitForFence:]
  -[MTLDebugResourceStateCommandEncoder updateTextureMappings:mode:regions:mipLevels:slices:numRegions:]
  -[MTLDebugResourceStateCommandEncoder updateTextureMapping:mode:region:mipLevel:slice:]
  -[MTLDebugResourceStateCommandEncoder updateTextureMapping:mode:indirectBuffer:indirectBufferOffset:]
  -[MTLDebugResourceStateCommandEncoder _setDefaults]
  -[MTLDebugResourceStateCommandEncoder validateTextureAccess:region:mipLevel:slice:]
  -[MTLDebugResourceStateCommandEncoder checkEncoderState]
  -[MTLDebugResourceStateCommandEncoder validateSparseTextureMappingMode:]
  -[MTLDebugResourceStateCommandEncoder initWithResourceStateCommandEncoder:commandBuffer:]


MTLDebugBufferMarker : NSObject
 @property  NSString *label
 @property  {_NSRange=QQ} range

  // instance methods
  -[MTLDebugBufferMarker range]
  -[MTLDebugBufferMarker label]
  -[MTLDebugBufferMarker setRange:]
  -[MTLDebugBufferMarker dealloc]
  -[MTLDebugBufferMarker setLabel:]


MTLDebugBuffer : MTLToolsBuffer <MTLDebugResourcePurgeable>
 @property  MTLDebugResource *common
 @property  r^v pointer
 @property  BOOL isContentExposedToCPU

  // instance methods
  -[MTLDebugBuffer didModifyRange:]
  -[MTLDebugBuffer contents]
  -[MTLDebugBuffer newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:]
  -[MTLDebugBuffer gpuAddress]
  -[MTLDebugBuffer resourceIndex]
  -[MTLDebugBuffer parentGPUSize]
  -[MTLDebugBuffer doesAliasAnyResources:count:]
  -[MTLDebugBuffer doesAliasAllResources:count:]
  -[MTLDebugBuffer doesAliasResource:]
  -[MTLDebugBuffer length]
  -[MTLDebugBuffer makeAliasable]
  -[MTLDebugBuffer pointer]
  -[MTLDebugBuffer newTextureWithDescriptor:offset:bytesPerRow:]
  -[MTLDebugBuffer setPurgeableState:]
  -[MTLDebugBuffer addDebugMarker:range:]
  -[MTLDebugBuffer removeAllDebugMarkers]
  -[MTLDebugBuffer common]
  -[MTLDebugBuffer dealloc]
  -[MTLDebugBuffer parentGPUAddress]
  -[MTLDebugBuffer setParentGPUAddress:]
  -[MTLDebugBuffer setParentGPUSize:]
  -[MTLDebugBuffer initWithBuffer:device:options:]
  -[MTLDebugBuffer lockPurgeableState]
  -[MTLDebugBuffer unlockPurgeableState]
  -[MTLDebugBuffer purgeableStateValidForRendering]
  -[MTLDebugBuffer initWithBuffer:heap:device:options:]
  -[MTLDebugBuffer initWithBuffer:device:bytes:options:]
  -[MTLDebugBuffer copyDebugMarkers]
  -[MTLDebugBuffer isContentExposedToCPU]
  -[MTLDebugBuffer setIsContentExposedToCPU:]


MTLGPUDebugCommandQueue : MTLToolsCommandQueue
 @property  NSString *tracePath

  // instance methods
  -[MTLGPUDebugCommandQueue commandBufferWithUnretainedReferences]
  -[MTLGPUDebugCommandQueue commandBufferWithDescriptor:]
  -[MTLGPUDebugCommandQueue commandBuffer]
  -[MTLGPUDebugCommandQueue tracePath]
  -[MTLGPUDebugCommandQueue initWithCommandQueue:device:]


MTLTelemetryBuffer : MTLToolsBuffer
  // instance methods
  -[MTLTelemetryBuffer newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:]
  -[MTLTelemetryBuffer newTextureWithDescriptor:offset:bytesPerRow:]
  -[MTLTelemetryBuffer initWithBuffer:device:options:]
  -[MTLTelemetryBuffer initWithBuffer:device:bytes:options:]
  -[MTLTelemetryBuffer accumBufferDistribution:options:]


MTLDebugCommandBuffer : MTLToolsCommandBuffer
  // instance methods
  -[MTLDebugCommandBuffer computeCommandEncoderWithDispatchType:]
  -[MTLDebugCommandBuffer encodeDashboardFinalizeForResourceGroup:dashboard:value:forIndex:]
  -[MTLDebugCommandBuffer addSynchronizationNotification:]
  -[MTLDebugCommandBuffer encodeWaitForEvent:value:]
  -[MTLDebugCommandBuffer accelerationStructureCommandEncoder]
  -[MTLDebugCommandBuffer debugBufferContentsWithLength:]
  -[MTLDebugCommandBuffer executeSynchronizationNotifications:scope:resources:count:]
  -[MTLDebugCommandBuffer computeCommandEncoderWithDescriptor:]
  -[MTLDebugCommandBuffer encodeDashboardFinalizeForResourceGroup:dashboard:values:indices:count:]
  -[MTLDebugCommandBuffer .cxx_construct]
  -[MTLDebugCommandBuffer .cxx_destruct]
  -[MTLDebugCommandBuffer waitUntilScheduled]
  -[MTLDebugCommandBuffer encodeSignalEvent:value:]
  -[MTLDebugCommandBuffer encodeDashboardTagForResourceGroup:]
  -[MTLDebugCommandBuffer encodeWaitForEvent:value:timeout:]
  -[MTLDebugCommandBuffer blitCommandEncoderWithDescriptor:]
  -[MTLDebugCommandBuffer addScheduledHandler:]
  -[MTLDebugCommandBuffer renderCommandEncoderWithDescriptor:]
  -[MTLDebugCommandBuffer blitCommandEncoder]
  -[MTLDebugCommandBuffer addCompletedHandler:]
  -[MTLDebugCommandBuffer resourceStateCommandEncoderWithDescriptor:]
  -[MTLDebugCommandBuffer dealloc]
  -[MTLDebugCommandBuffer executeSynchronizationNotifications:]
  -[MTLDebugCommandBuffer waitUntilCompleted]
  -[MTLDebugCommandBuffer computeCommandEncoder]
  -[MTLDebugCommandBuffer parallelRenderCommandEncoderWithDescriptor:]
  -[MTLDebugCommandBuffer resourceStateCommandEncoder]
  -[MTLDebugCommandBuffer sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:]
  -[MTLDebugCommandBuffer preCompletionHandlers]
  -[MTLDebugCommandBuffer postCompletionHandlers]
  -[MTLDebugCommandBuffer preCommit]
  -[MTLDebugCommandBuffer unwrapMTLRenderPassDescriptor:]
  -[MTLDebugCommandBuffer sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:]
  -[MTLDebugCommandBuffer sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:]
  -[MTLDebugCommandBuffer sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:]
  -[MTLDebugCommandBuffer initWithCommandBuffer:commandQueue:]
  -[MTLDebugCommandBuffer addObject:retained:purgeable:]
  -[MTLDebugCommandBuffer addReferencedObject:internallyRetained:]
  -[MTLDebugCommandBuffer addPurgeableObject:]
  -[MTLDebugCommandBuffer lockPurgeableObjects]
  -[MTLDebugCommandBuffer unlockPurgeableObjects]
  -[MTLDebugCommandBuffer removeAllReferencedObjects:]
  -[MTLDebugCommandBuffer onParallelRenderCommanderEndEncoding]
  -[MTLDebugCommandBuffer validateStoreLoadTransition:atIndex:renderTargetArrayLength:]
  -[MTLDebugCommandBuffer testObjectReferenced:wasInternallyRetained:]
  -[MTLDebugCommandBuffer addActiveRenderTargets:]
  -[MTLDebugCommandBuffer addActiveRenderTarget:]
  -[MTLDebugCommandBuffer renderTargetInActiveRenderTargets:]


MTLGPUDebugBinaryArchive : MTLToolsBinaryArchive
  // instance methods
  -[MTLGPUDebugBinaryArchive addComputePipelineFunctionsWithDescriptor:options:error:]
  -[MTLGPUDebugBinaryArchive addRenderPipelineFunctionsWithDescriptor:options:error:]
  -[MTLGPUDebugBinaryArchive addTileRenderPipelineFunctionsWithDescriptor:options:error:]
  -[MTLGPUDebugBinaryArchive addComputePipelineFunctionsWithDescriptor:error:]
  -[MTLGPUDebugBinaryArchive addRenderPipelineFunctionsWithDescriptor:error:]
  -[MTLGPUDebugBinaryArchive addTileRenderPipelineFunctionsWithDescriptor:error:]
  -[MTLGPUDebugBinaryArchive initWithBinaryArchive:device:]


MTLGPUDebugPipelineStateInfoEncoder : NSObject
 @property  unsigned long encodedLength

  // instance methods
  -[MTLGPUDebugPipelineStateInfoEncoder initWithDevice:]
  -[MTLGPUDebugPipelineStateInfoEncoder setComputePipelineState:]
  -[MTLGPUDebugPipelineStateInfoEncoder setRenderPipelineState:]
  -[MTLGPUDebugPipelineStateInfoEncoder dealloc]
  -[MTLGPUDebugPipelineStateInfoEncoder encodedLength]
  -[MTLGPUDebugPipelineStateInfoEncoder setArgumentBuffer:offset:]


MTLDebugDynamicLibrary : MTLToolsDynamicLibrary
  // instance methods
  -[MTLDebugDynamicLibrary serializeToURL:error:]
  -[MTLDebugDynamicLibrary serializeToURL:options:error:]


MTLToolsIndirectRenderCommand : MTLToolsObject <MTLIndirectRenderCommandSPI>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsIndirectRenderCommand drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:]
  -[MTLToolsIndirectRenderCommand drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:]
  -[MTLToolsIndirectRenderCommand reset]
  -[MTLToolsIndirectRenderCommand setVertexBuffer:offset:atIndex:]
  -[MTLToolsIndirectRenderCommand setFragmentBuffer:offset:atIndex:]
  -[MTLToolsIndirectRenderCommand setRenderPipelineState:]
  -[MTLToolsIndirectRenderCommand drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:]
  -[MTLToolsIndirectRenderCommand drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:]
  -[MTLToolsIndirectRenderCommand getVertexBufferAtIndex:]
  -[MTLToolsIndirectRenderCommand getFragmentBufferAtIndex:]
  -[MTLToolsIndirectRenderCommand getCommandType]
  -[MTLToolsIndirectRenderCommand drawArguments]
  -[MTLToolsIndirectRenderCommand drawIndexedArguments]
  -[MTLToolsIndirectRenderCommand drawPatchesArguments]
  -[MTLToolsIndirectRenderCommand drawIndexedPatchesArguments]
  -[MTLToolsIndirectRenderCommand getTessellationFactorArguments]
  -[MTLToolsIndirectRenderCommand getOptimizedStatus]
  -[MTLToolsIndirectRenderCommand getPipelineStateUniqueIdentifier]


MTLDebugCounterSampleBuffer : MTLToolsCounterSampleBuffer
 @property  MTLCounterSampleBufferDescriptor *descriptor
 @property  unsigned long storageMode

  // instance methods
  -[MTLDebugCounterSampleBuffer descriptor]
  -[MTLDebugCounterSampleBuffer formattedDescription:]
  -[MTLDebugCounterSampleBuffer storageMode]
  -[MTLDebugCounterSampleBuffer dealloc]
  -[MTLDebugCounterSampleBuffer resolveCounterRange:]
  -[MTLDebugCounterSampleBuffer initWithCounterSampleBuffer:device:descriptor:]


MTLDebugBinaryArchive : MTLToolsBinaryArchive
  // instance methods
  -[MTLDebugBinaryArchive serializeToURL:error:]
  -[MTLDebugBinaryArchive addComputePipelineFunctionsWithDescriptor:options:error:]
  -[MTLDebugBinaryArchive addRenderPipelineFunctionsWithDescriptor:options:error:]
  -[MTLDebugBinaryArchive addTileRenderPipelineFunctionsWithDescriptor:options:error:]
  -[MTLDebugBinaryArchive serializeToURL:options:error:]
  -[MTLDebugBinaryArchive addComputePipelineFunctionsWithDescriptor:error:]
  -[MTLDebugBinaryArchive addRenderPipelineFunctionsWithDescriptor:error:]
  -[MTLDebugBinaryArchive addTileRenderPipelineFunctionsWithDescriptor:error:]


MTLCountersDevice : MTLToolsDevice
 @property  BOOL APITimingEnabled

  // instance methods
  -[MTLCountersDevice newFence]
  -[MTLCountersDevice newComputePipelineStateWithFunction:completionHandler:]
  -[MTLCountersDevice newLibraryWithDescriptor:error:]
  -[MTLCountersDevice newLibraryWithStitchedDescriptorSPI:error:]
  -[MTLCountersDevice newRenderPipelineStateWithDescriptor:error:]
  -[MTLCountersDevice newCommandQueueWithMaxCommandBufferCount:]
  -[MTLCountersDevice newRenderPipelineStateWithDescriptor:completionHandler:]
  -[MTLCountersDevice newLibraryWithData:error:]
  -[MTLCountersDevice newDagStringWithGraphs:]
  -[MTLCountersDevice newComputePipelineStateWithFunction:error:]
  -[MTLCountersDevice newDynamicLibrary:computeDescriptor:error:]
  -[MTLCountersDevice newLibraryWithSource:options:error:]
  -[MTLCountersDevice newComputePipelineStateWithDescriptor:options:completionHandler:]
  -[MTLCountersDevice newLibraryWithCIFilters:imageFilterFunctionInfo:error:]
  -[MTLCountersDevice newLibraryWithStitchedDescriptor:error:]
  -[MTLCountersDevice newDefaultLibrary]
  -[MTLCountersDevice newComputePipelineStateWithFunction:options:completionHandler:]
  -[MTLCountersDevice newLibraryWithDescriptorSPI:error:]
  -[MTLCountersDevice newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:]
  -[MTLCountersDevice newComputePipelineStateWithDescriptor:error:]
  -[MTLCountersDevice newCommandQueueWithDescriptor:]
  -[MTLCountersDevice newLibraryWithSource:options:completionHandler:]
  -[MTLCountersDevice newDefaultLibraryWithBundle:error:]
  -[MTLCountersDevice newRenderPipelineStateWithDescriptor:options:reflection:error:]
  -[MTLCountersDevice newFunctionWithGLESIR:inputsDescription:functionType:]
  -[MTLCountersDevice newComputePipelineStateWithFunction:options:reflection:error:]
  -[MTLCountersDevice newDynamicLibraryFromURL:error:]
  -[MTLCountersDevice newFunctionWithGLIR:functionType:]
  -[MTLCountersDevice newFunctionWithGLESIR:functionType:]
  -[MTLCountersDevice newComputePipelineStateWithDescriptor:completionHandler:]
  -[MTLCountersDevice newRenderPipelineStateWithTileDescriptor:options:reflection:error:]
  -[MTLCountersDevice newLibraryWithFile:error:]
  -[MTLCountersDevice newLibraryWithDAG:functions:error:]
  -[MTLCountersDevice newFunctionWithGLCoreIR:inputsDescription:functionType:]
  -[MTLCountersDevice newRenderPipelineStateWithTileDescriptor:options:completionHandler:]
  -[MTLCountersDevice newDynamicLibraryWithURL:error:]
  -[MTLCountersDevice newComputePipelineStateWithDescriptor:options:reflection:error:]
  -[MTLCountersDevice newDynamicLibrary:error:]
  -[MTLCountersDevice newRenderPipelineStateWithDescriptor:options:completionHandler:]
  -[MTLCountersDevice newLibraryWithStitchedDescriptor:completionHandler:]
  -[MTLCountersDevice newFunctionWithGLIR:inputsDescription:functionType:]
  -[MTLCountersDevice newLibraryWithURL:error:]
  -[MTLCountersDevice newLibraryWithDescriptor:completionHandler:]
  -[MTLCountersDevice newCommandQueue]
  -[MTLCountersDevice newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:]
  -[MTLCountersDevice newFunctionWithGLCoreIR:functionType:]
  -[MTLCountersDevice newHeapWithDescriptor:]
  -[MTLCountersDevice newBufferWithBytes:length:options:]
  -[MTLCountersDevice newBufferWithLength:options:]
  -[MTLCountersDevice newDepthStencilStateWithDescriptor:]
  -[MTLCountersDevice newTextureWithDescriptor:]
  -[MTLCountersDevice newSamplerStateWithDescriptor:]
  -[MTLCountersDevice newTextureWithDescriptor:iosurface:plane:]
  -[MTLCountersDevice newBufferWithBytesNoCopy:length:options:deallocator:]
  -[MTLCountersDevice newTextureWithBytesNoCopy:length:descriptor:deallocator:]
  -[MTLCountersDevice newBufferWithIOSurface:]
  -[MTLCountersDevice dealloc]
  -[MTLCountersDevice newBufferWithDescriptor:]
  -[MTLCountersDevice newRenderPipelineStateWithTileDescriptor:error:]
  -[MTLCountersDevice newRenderPipelineStateWithTileDescriptor:completionHandler:]
  -[MTLCountersDevice newLibraryWithGraphs:functions:error:]
  -[MTLCountersDevice newLibraryWithGraphsSPI:functions:error:]
  -[MTLCountersDevice newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:]
  -[MTLCountersDevice initWithBaseObject:parent:]
  -[MTLCountersDevice APITimingEnabled]
  -[MTLCountersDevice _newRenderPipelineStateWithTileDescriptor:options:reflection:error:]
  -[MTLCountersDevice _newRenderPipelineStateWithTileDescriptor:options:completionHandler:]


MTLGPUDebugArgumentEncoder : MTLToolsArgumentEncoder
  // instance methods
  -[MTLGPUDebugArgumentEncoder setBuffer:offset:atIndex:]
  -[MTLGPUDebugArgumentEncoder setBuffers:offsets:withRange:]
  -[MTLGPUDebugArgumentEncoder setArgumentBuffer:offset:]
  -[MTLGPUDebugArgumentEncoder setArgumentBuffer:startOffset:arrayElement:]
  -[MTLGPUDebugArgumentEncoder setRenderPipelineState:atIndex:]
  -[MTLGPUDebugArgumentEncoder setRenderPipelineStates:withRange:]
  -[MTLGPUDebugArgumentEncoder setComputePipelineState:atIndex:]
  -[MTLGPUDebugArgumentEncoder setComputePipelineStates:withRange:]
  -[MTLGPUDebugArgumentEncoder setIndirectCommandBuffer:atIndex:]
  -[MTLGPUDebugArgumentEncoder setIndirectCommandBuffers:withRange:]
  -[MTLGPUDebugArgumentEncoder newArgumentEncoderForBufferAtIndex:]
  -[MTLGPUDebugArgumentEncoder initWithArgumentEncoder:layout:device:]


MTLGPUDebugComputePipelineState : MTLToolsComputePipelineState
 @property  NSArray *binaryFunctionData
 @property  MTLGPUDebugImageData *kernelFunctionData
 @property  MTLComputePipelineReflection *internalReflection
 @property  MTLComputePipelineReflection *userReflection
 @property  MTLGPUDebugBuffer *globalConstantsBuffer
 @property  unsigned long constantOffset
 @property  unsigned long staticThreadgroupMemoryLength
 @property  MTLGPUDebugBuffer *indirectStateBuffer

  // instance methods
  -[MTLGPUDebugComputePipelineState newIntersectionFunctionTableWithDescriptor:]
  -[MTLGPUDebugComputePipelineState functionHandleWithFunction:]
  -[MTLGPUDebugComputePipelineState staticThreadgroupMemoryLength]
  -[MTLGPUDebugComputePipelineState newComputePipelineStateWithAdditionalBinaryFunctions:error:]
  -[MTLGPUDebugComputePipelineState newVisibleFunctionTableWithDescriptor:]
  -[MTLGPUDebugComputePipelineState dealloc]
  -[MTLGPUDebugComputePipelineState binaryFunctionData]
  -[MTLGPUDebugComputePipelineState userReflection]
  -[MTLGPUDebugComputePipelineState kernelFunctionData]
  -[MTLGPUDebugComputePipelineState releaseReflection]
  -[MTLGPUDebugComputePipelineState initWithComputePipelineState:descriptor:unwrappedDescriptor:reflection:device:]
  -[MTLGPUDebugComputePipelineState _initConstantsBuffer:device:]
  -[MTLGPUDebugComputePipelineState internalReflection]
  -[MTLGPUDebugComputePipelineState indirectStateBuffer]
  -[MTLGPUDebugComputePipelineState globalConstantsBuffer]
  -[MTLGPUDebugComputePipelineState initWithComputePipelineState:binaryFunctions:withState:device:]
  -[MTLGPUDebugComputePipelineState constantOffset]


MTLTelemetryComputePipelineState : MTLToolsComputePipelineState
  // class methods
  +[MTLTelemetryComputePipelineState generateUniqueID]

  // instance methods
  -[MTLTelemetryComputePipelineState initWithComputePipelineState:reflection:parent:descriptor:]
  -[MTLTelemetryComputePipelineState accumulateUsage]


MTLDebugCommandQueue : MTLToolsCommandQueue
  // instance methods
  -[MTLDebugCommandQueue insertDebugCaptureBoundary]
  -[MTLDebugCommandQueue commandBufferWithUnretainedReferences]
  -[MTLDebugCommandQueue commandBufferWithDescriptor:]
  -[MTLDebugCommandQueue commandBuffer]


MTLDebugComputeCommandEncoder : MTLToolsComputeCommandEncoder
 @property  <MTLComputePipelineState> *computePipelineState

  // instance methods
  -[MTLDebugComputeCommandEncoder memoryBarrierWithScope:]
  -[MTLDebugComputeCommandEncoder setBuffer:offset:atIndex:]
  -[MTLDebugComputeCommandEncoder useResources:count:usage:]
  -[MTLDebugComputeCommandEncoder sampleCountersInBuffer:atSampleIndex:withBarrier:]
  -[MTLDebugComputeCommandEncoder .cxx_construct]
  -[MTLDebugComputeCommandEncoder setVisibleFunctionTable:atBufferIndex:]
  -[MTLDebugComputeCommandEncoder .cxx_destruct]
  -[MTLDebugComputeCommandEncoder useHeaps:count:]
  -[MTLDebugComputeCommandEncoder setAccelerationStructure:atBufferIndex:]
  -[MTLDebugComputeCommandEncoder formattedDescription:]
  -[MTLDebugComputeCommandEncoder setIntersectionFunctionTable:atBufferIndex:]
  -[MTLDebugComputeCommandEncoder updateFence:]
  -[MTLDebugComputeCommandEncoder setBytes:length:atIndex:]
  -[MTLDebugComputeCommandEncoder setSamplerState:atIndex:]
  -[MTLDebugComputeCommandEncoder dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:]
  -[MTLDebugComputeCommandEncoder setComputePipelineState:]
  -[MTLDebugComputeCommandEncoder useHeap:]
  -[MTLDebugComputeCommandEncoder useResource:usage:]
  -[MTLDebugComputeCommandEncoder executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:]
  -[MTLDebugComputeCommandEncoder setTexture:atIndex:]
  -[MTLDebugComputeCommandEncoder setIntersectionFunctionTables:withBufferRange:]
  -[MTLDebugComputeCommandEncoder setThreadgroupMemoryLength:atIndex:]
  -[MTLDebugComputeCommandEncoder setBuffers:offsets:withRange:]
  -[MTLDebugComputeCommandEncoder executeCommandsInBuffer:withRange:]
  -[MTLDebugComputeCommandEncoder endEncoding]
  -[MTLDebugComputeCommandEncoder dealloc]
  -[MTLDebugComputeCommandEncoder memoryBarrierWithResources:count:]
  -[MTLDebugComputeCommandEncoder dispatchThreadgroups:threadsPerThreadgroup:]
  -[MTLDebugComputeCommandEncoder setVisibleFunctionTables:withBufferRange:]
  -[MTLDebugComputeCommandEncoder waitForFence:]
  -[MTLDebugComputeCommandEncoder setTextures:withRange:]
  -[MTLDebugComputeCommandEncoder setBufferOffset:atIndex:]
  -[MTLDebugComputeCommandEncoder setSamplerStates:withRange:]
  -[MTLDebugComputeCommandEncoder setSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLDebugComputeCommandEncoder setSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLDebugComputeCommandEncoder setImageblockWidth:height:]
  -[MTLDebugComputeCommandEncoder setStageInRegion:]
  -[MTLDebugComputeCommandEncoder setStageInRegionWithIndirectBuffer:indirectBufferOffset:]
  -[MTLDebugComputeCommandEncoder dispatchThreads:threadsPerThreadgroup:]
  -[MTLDebugComputeCommandEncoder filterCounterRangeWithFirstBatch:lastBatch:filterIndex:]
  -[MTLDebugComputeCommandEncoder _setDefaults]
  -[MTLDebugComputeCommandEncoder dispatchThreadsWithIndirectBuffer:indirectBufferOffset:]
  -[MTLDebugComputeCommandEncoder enableNullBufferBinds:]
  -[MTLDebugComputeCommandEncoder initWithComputeCommandEncoder:commandBuffer:]
  -[MTLDebugComputeCommandEncoder _validateThreadsPerThreadgroup:]
  -[MTLDebugComputeCommandEncoder validateStageInRegion:]
  -[MTLDebugComputeCommandEncoder _validateAllFunctionArguments]
  -[MTLDebugComputeCommandEncoder computePipelineState]
  -[MTLDebugComputeCommandEncoder enumerateBuffersUsingBlock:]
  -[MTLDebugComputeCommandEncoder enumerateTexturesUsingBlock:]
  -[MTLDebugComputeCommandEncoder enumerateSamplersUsingBlock:]
  -[MTLDebugComputeCommandEncoder enumerateThreadgroupMemoryLengthsUsingBlock:]


MTLTelemetryDevice : MTLToolsDevice
 @property  NSObject<OS_os_log> *telemetryLog
 @property  unsigned long startTime

  // instance methods
  -[MTLTelemetryDevice newComputePipelineStateWithFunction:completionHandler:]
  -[MTLTelemetryDevice newRenderPipelineStateWithDescriptor:error:]
  -[MTLTelemetryDevice newCommandQueueWithMaxCommandBufferCount:]
  -[MTLTelemetryDevice newRenderPipelineStateWithDescriptor:completionHandler:]
  -[MTLTelemetryDevice newComputePipelineStateWithFunction:error:]
  -[MTLTelemetryDevice newComputePipelineStateWithDescriptor:options:completionHandler:]
  -[MTLTelemetryDevice newComputePipelineStateWithFunction:options:completionHandler:]
  -[MTLTelemetryDevice newComputePipelineStateWithDescriptor:error:]
  -[MTLTelemetryDevice newCommandQueueWithDescriptor:]
  -[MTLTelemetryDevice supportsTextureSampleCount:]
  -[MTLTelemetryDevice newRenderPipelineStateWithDescriptor:options:reflection:error:]
  -[MTLTelemetryDevice newComputePipelineStateWithFunction:options:reflection:error:]
  -[MTLTelemetryDevice newComputePipelineStateWithDescriptor:completionHandler:]
  -[MTLTelemetryDevice newComputePipelineStateWithDescriptor:options:reflection:error:]
  -[MTLTelemetryDevice newRenderPipelineStateWithDescriptor:options:completionHandler:]
  -[MTLTelemetryDevice supportsFeatureSet:]
  -[MTLTelemetryDevice newCommandQueue]
  -[MTLTelemetryDevice heapTextureSizeAndAlignWithDescriptor:]
  -[MTLTelemetryDevice newHeapWithDescriptor:]
  -[MTLTelemetryDevice setStartTime:]
  -[MTLTelemetryDevice .cxx_construct]
  -[MTLTelemetryDevice .cxx_destruct]
  -[MTLTelemetryDevice newBufferWithBytes:length:options:]
  -[MTLTelemetryDevice startTime]
  -[MTLTelemetryDevice newBufferWithLength:options:]
  -[MTLTelemetryDevice newDepthStencilStateWithDescriptor:]
  -[MTLTelemetryDevice newTextureWithDescriptor:]
  -[MTLTelemetryDevice newSamplerStateWithDescriptor:]
  -[MTLTelemetryDevice newTextureWithDescriptor:iosurface:plane:]
  -[MTLTelemetryDevice newBufferWithBytesNoCopy:length:options:deallocator:]
  -[MTLTelemetryDevice dealloc]
  -[MTLTelemetryDevice heapBufferSizeAndAlignWithLength:options:]
  -[MTLTelemetryDevice newBufferWithDescriptor:]
  -[MTLTelemetryDevice initWithBaseObject:parent:]
  -[MTLTelemetryDevice enableTelemetry]
  -[MTLTelemetryDevice telemetryLog]
  -[MTLTelemetryDevice initDistributions]
  -[MTLTelemetryDevice setTimerInterval:]
  -[MTLTelemetryDevice emitTelemetry]
  -[MTLTelemetryDevice emitFeatureQueryUsage]
  -[MTLTelemetryDevice _newRenderPipelineStateWithDescriptor:options:reflection:error:]
  -[MTLTelemetryDevice _newRenderPipelineStateWithDescriptor:options:completionHandler:]
  -[MTLTelemetryDevice _newComputePipelineStateWithDescriptor:options:reflection:error:]
  -[MTLTelemetryDevice _newComputePipelineStateWithDescriptor:options:completionHandler:]
  -[MTLTelemetryDevice _newComputePipelineStateWithFunction:options:reflection:error:]
  -[MTLTelemetryDevice _newComputePipelineStateWithFunction:options:completionHandler:]
  -[MTLTelemetryDevice setGLMode:]
  -[MTLTelemetryDevice startTimerWithInterval:]


MTLDebugAccelerationStructureCommandEncoder : MTLToolsAccelerationStructureCommandEncoder
  // instance methods
  -[MTLDebugAccelerationStructureCommandEncoder buildAccelerationStructure:descriptor:scratchBuffer:scratchBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder refitAccelerationStructure:descriptor:destination:scratchBuffer:scratchBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder copyAccelerationStructure:toAccelerationStructure:]
  -[MTLDebugAccelerationStructureCommandEncoder writeCompactedAccelerationStructureSize:toBuffer:offset:]
  -[MTLDebugAccelerationStructureCommandEncoder writeCompactedAccelerationStructureSize:toBuffer:offset:sizeDataType:]
  -[MTLDebugAccelerationStructureCommandEncoder copyAndCompactAccelerationStructure:toAccelerationStructure:]
  -[MTLDebugAccelerationStructureCommandEncoder writeSerializedAccelerationStructureSize:toBuffer:sizeBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder writeDeserializedAccelerationStructureSize:serializedOffset:toBuffer:sizeBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder writeDeserializedPrimitiveAccelerationStructureSizes:serializedOffset:toBuffer:sizesBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder serializePrimitiveAccelerationStructure:toBuffer:serializedBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder serializeInstanceAccelerationStructure:primitiveAccelerationStructures:toBuffer:serializedBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder deserializePrimitiveAccelerationStructure:fromBuffer:serializedBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder deserializeInstanceAccelerationStructure:primitiveAccelerationStructures:fromBuffer:serializedBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder serializeAccelerationStructure:toBuffer:serializedBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder deserializeAccelerationStructure:fromBuffer:serializedBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder deserializeAccelerationStructure:primitiveAccelerationStructures:fromBuffer:serializedBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder writeGeometrySizeOfAccelerationStructure:toBuffer:sizeBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder writeGeometryOfAccelerationStructure:toBuffer:geometryBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder deserializePrimitiveAccelerationStructure:fromBuffer:serializedBufferOffset:withDescriptor:]
  -[MTLDebugAccelerationStructureCommandEncoder deserializeInstanceAccelerationStructure:primitiveAccelerationStructures:fromBuffer:serializedBufferOffset:withDescriptor:]
  -[MTLDebugAccelerationStructureCommandEncoder writeGenericBVHStructureSizesOfAccelerationStructure:into:]
  -[MTLDebugAccelerationStructureCommandEncoder writeGenericBVHStructureOfAccelerationStructure:into:]
  -[MTLDebugAccelerationStructureCommandEncoder writeGenericBVHStructureSizesOfAccelerationStructure:toBuffer:sizesBufferOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder writeGenericBVHStructureOfAccelerationStructure:headerBuffer:headerBufferOffset:innerNodeBuffer:innerNodeBufferOffset:leafNodeBuffer:leafNodeBufferOffset:primitiveBuffer:primitiveBufferOffset:geometryBuffer:geometryOffset:instanceTransformBuffer:instanceTransformOffset:]
  -[MTLDebugAccelerationStructureCommandEncoder checkEncoderState]
  -[MTLDebugAccelerationStructureCommandEncoder initWithAccelerationStructureCommandEncoder:parent:]


MTLDebugFunctionHandle : MTLToolsFunctionHandle <MTLFunctionHandle>
 @property  unsigned long stage
 @property  unsigned long functionType
 @property  NSString *name
 @property  <MTLDevice> *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLDebugFunctionHandle stage]
  -[MTLDebugFunctionHandle initWithBaseObject:parent:function:stage:]


MTLDebugComputePipelineState : MTLToolsComputePipelineState
 @property  <MTLFunction> *function
 @property  MTLComputePipelineDescriptor *descriptor
 @property  MTLComputePipelineReflection *reflection

  // instance methods
  -[MTLDebugComputePipelineState newIntersectionFunctionTableWithDescriptor:]
  -[MTLDebugComputePipelineState functionHandleWithFunction:]
  -[MTLDebugComputePipelineState descriptor]
  -[MTLDebugComputePipelineState formattedDescription:]
  -[MTLDebugComputePipelineState newComputePipelineStateWithAdditionalBinaryFunctions:error:]
  -[MTLDebugComputePipelineState newVisibleFunctionTableWithDescriptor:]
  -[MTLDebugComputePipelineState function]
  -[MTLDebugComputePipelineState dealloc]
  -[MTLDebugComputePipelineState validateHandleForSetFunction:]
  -[MTLDebugComputePipelineState newComputePipelineStateWithAdditionalBinaryFunctions:]
  -[MTLDebugComputePipelineState initWithComputePipelineState:reflection:parent:descriptor:]
  -[MTLDebugComputePipelineState reflection]
  -[MTLDebugComputePipelineState getParameter:]
  -[MTLDebugComputePipelineState functionHandleToDebugFunctionHandle:parentFunction:]
  -[MTLDebugComputePipelineState isAncestorOf:]


MTLTelemetryRenderPipelineState : MTLToolsRenderPipelineState
  // class methods
  +[MTLTelemetryRenderPipelineState generateUniqueID]

  // instance methods
  -[MTLTelemetryRenderPipelineState dealloc]
  -[MTLTelemetryRenderPipelineState initWithPipelineState:reflection:parent:descriptor:]
  -[MTLTelemetryRenderPipelineState accumulateUsage]


MTLDebugIndirectCommandBuffer : MTLToolsIndirectCommandBuffer <MTLDebugResourcePurgeable>
 @property  NSMutableArray *optimizedRangeList
 @property  MTLIndirectCommandBufferDescriptor *descriptor

  // instance methods
  -[MTLDebugIndirectCommandBuffer descriptor]
  -[MTLDebugIndirectCommandBuffer resetWithRange:]
  -[MTLDebugIndirectCommandBuffer setPurgeableState:]
  -[MTLDebugIndirectCommandBuffer indirectComputeCommandAtIndex:]
  -[MTLDebugIndirectCommandBuffer dealloc]
  -[MTLDebugIndirectCommandBuffer indirectRenderCommandAtIndex:]
  -[MTLDebugIndirectCommandBuffer lockPurgeableState]
  -[MTLDebugIndirectCommandBuffer unlockPurgeableState]
  -[MTLDebugIndirectCommandBuffer purgeableStateValidForRendering]
  -[MTLDebugIndirectCommandBuffer optimizedRangeList]
  -[MTLDebugIndirectCommandBuffer initWithIndirectCommandBuffer:device:descriptor:maxCommandCount:options:]


MTLCountersCommandQueue : MTLToolsCommandQueue
 @property  NSString *tracePath

  // instance methods
  -[MTLCountersCommandQueue commandBufferWithUnretainedReferences]
  -[MTLCountersCommandQueue commandBufferWithDescriptor:]
  -[MTLCountersCommandQueue commandBuffer]
  -[MTLCountersCommandQueue tracePath]
  -[MTLCountersCommandQueue initWithCommandQueue:device:]


MTLToolsPipelineLibrary : MTLToolsObject <MTLPipelineLibrarySPI>
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  NSArray *pipelineNames
 @property  BOOL disableRunTimeCompilation
 @property  <MTLPipelineCache> *pipelineCache
 @property  <MTLPipelineCache> *functionCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsPipelineLibrary label]
  -[MTLToolsPipelineLibrary setDisableRunTimeCompilation:]
  -[MTLToolsPipelineLibrary newRenderPipelineStateWithName:options:reflection:error:]
  -[MTLToolsPipelineLibrary pipelineCache]
  -[MTLToolsPipelineLibrary functionCache]
  -[MTLToolsPipelineLibrary disableRunTimeCompilation]
  -[MTLToolsPipelineLibrary pipelineNames]
  -[MTLToolsPipelineLibrary newRenderPipelineDescriptorWithName:error:]
  -[MTLToolsPipelineLibrary newComputePipelineStateWithName:options:reflection:error:]
  -[MTLToolsPipelineLibrary setLabel:]
  -[MTLToolsPipelineLibrary newComputePipelineDescriptorWithName:error:]
  -[MTLToolsPipelineLibrary device]


MTLToolsArgumentEncoder : MTLToolsObject <MTLArgumentEncoderSPI>
 @property  _MTLIndirectArgumentBufferLayout *layout
 @property  <MTLDevice> *device
 @property  NSString *label
 @property  unsigned long encodedLength
 @property  unsigned long alignment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsArgumentEncoder label]
  -[MTLToolsArgumentEncoder alignment]
  -[MTLToolsArgumentEncoder setBuffer:offset:atIndex:]
  -[MTLToolsArgumentEncoder setVisibleFunctionTable:atBufferIndex:]
  -[MTLToolsArgumentEncoder setIntersectionFunctionTable:atBufferIndex:]
  -[MTLToolsArgumentEncoder setSamplerState:atIndex:]
  -[MTLToolsArgumentEncoder setTexture:atIndex:]
  -[MTLToolsArgumentEncoder setIntersectionFunctionTables:withBufferRange:]
  -[MTLToolsArgumentEncoder setBuffers:offsets:withRange:]
  -[MTLToolsArgumentEncoder setLabel:]
  -[MTLToolsArgumentEncoder device]
  -[MTLToolsArgumentEncoder layout]
  -[MTLToolsArgumentEncoder setVisibleFunctionTables:withBufferRange:]
  -[MTLToolsArgumentEncoder setTextures:withRange:]
  -[MTLToolsArgumentEncoder setSamplerStates:withRange:]
  -[MTLToolsArgumentEncoder encodedLength]
  -[MTLToolsArgumentEncoder setArgumentBuffer:offset:]
  -[MTLToolsArgumentEncoder constantDataAtIndex:]
  -[MTLToolsArgumentEncoder setArgumentBuffer:startOffset:arrayElement:]
  -[MTLToolsArgumentEncoder setRenderPipelineState:atIndex:]
  -[MTLToolsArgumentEncoder setRenderPipelineStates:withRange:]
  -[MTLToolsArgumentEncoder setComputePipelineState:atIndex:]
  -[MTLToolsArgumentEncoder setComputePipelineStates:withRange:]
  -[MTLToolsArgumentEncoder setIndirectCommandBuffer:atIndex:]
  -[MTLToolsArgumentEncoder setIndirectCommandBuffers:withRange:]
  -[MTLToolsArgumentEncoder setAccelerationStructure:atIndex:]
  -[MTLToolsArgumentEncoder newArgumentEncoderForBufferAtIndex:]
  -[MTLToolsArgumentEncoder setVisibleFunctionTable:atIndex:]
  -[MTLToolsArgumentEncoder setVisibleFunctionTables:withRange:]
  -[MTLToolsArgumentEncoder setIntersectionFunctionTable:atIndex:]
  -[MTLToolsArgumentEncoder setIntersectionFunctionTables:withRange:]
  -[MTLToolsArgumentEncoder setFunctionPointer:atIndex:]
  -[MTLToolsArgumentEncoder setFunctionPointers:withRange:]


MTLGPUDebugHeap : MTLToolsHeap
  // instance methods
  -[MTLGPUDebugHeap .cxx_construct]
  -[MTLGPUDebugHeap .cxx_destruct]
  -[MTLGPUDebugHeap newBufferWithLength:options:]
  -[MTLGPUDebugHeap newTextureWithDescriptor:]
  -[MTLGPUDebugHeap newBufferWithLength:options:offset:]
  -[MTLGPUDebugHeap newTextureWithDescriptor:offset:]
  -[MTLGPUDebugHeap initWithHeap:descriptor:device:]
  -[MTLGPUDebugHeap notifyResourceReleasing:]
  -[MTLGPUDebugHeap enumerateBufferIndices:]
  -[MTLGPUDebugHeap enumerateTextureIndices:]


MTLDebugArgumentEncoder : MTLToolsArgumentEncoder
  // instance methods
  -[MTLDebugArgumentEncoder setBuffer:offset:atIndex:]
  -[MTLDebugArgumentEncoder setVisibleFunctionTable:atBufferIndex:]
  -[MTLDebugArgumentEncoder setIntersectionFunctionTable:atBufferIndex:]
  -[MTLDebugArgumentEncoder setSamplerState:atIndex:]
  -[MTLDebugArgumentEncoder setTexture:atIndex:]
  -[MTLDebugArgumentEncoder setIntersectionFunctionTables:withBufferRange:]
  -[MTLDebugArgumentEncoder setBuffers:offsets:withRange:]
  -[MTLDebugArgumentEncoder dealloc]
  -[MTLDebugArgumentEncoder setVisibleFunctionTables:withBufferRange:]
  -[MTLDebugArgumentEncoder setTextures:withRange:]
  -[MTLDebugArgumentEncoder setSamplerStates:withRange:]
  -[MTLDebugArgumentEncoder setArgumentBuffer:offset:]
  -[MTLDebugArgumentEncoder constantDataAtIndex:]
  -[MTLDebugArgumentEncoder setArgumentBuffer:startOffset:arrayElement:]
  -[MTLDebugArgumentEncoder setRenderPipelineState:atIndex:]
  -[MTLDebugArgumentEncoder setRenderPipelineStates:withRange:]
  -[MTLDebugArgumentEncoder setComputePipelineState:atIndex:]
  -[MTLDebugArgumentEncoder setComputePipelineStates:withRange:]
  -[MTLDebugArgumentEncoder setIndirectCommandBuffer:atIndex:]
  -[MTLDebugArgumentEncoder setIndirectCommandBuffers:withRange:]
  -[MTLDebugArgumentEncoder setAccelerationStructure:atIndex:]
  -[MTLDebugArgumentEncoder newArgumentEncoderForBufferAtIndex:]
  -[MTLDebugArgumentEncoder setVisibleFunctionTable:atIndex:]
  -[MTLDebugArgumentEncoder setVisibleFunctionTables:withRange:]
  -[MTLDebugArgumentEncoder setIntersectionFunctionTable:atIndex:]
  -[MTLDebugArgumentEncoder setIntersectionFunctionTables:withRange:]
  -[MTLDebugArgumentEncoder setFunctionPointer:atIndex:]
  -[MTLDebugArgumentEncoder setFunctionPointers:withRange:]
  -[MTLDebugArgumentEncoder setArgumentBuffer:startOffset:elementIndex:]
  -[MTLDebugArgumentEncoder initWithBaseObject:structType:parent:]


MTLDebugDevice : MTLToolsDevice
 @property  BOOL loadValidationEnabled
 @property  BOOL storeValidationEnabled

  // class methods
  +[MTLDebugDevice complainAboutSloppyTextureUsage]

  // instance methods
  -[MTLDebugDevice newBinaryArchiveWithDescriptor:error:]
  -[MTLDebugDevice newFence]
  -[MTLDebugDevice newSharedTextureWithDescriptor:]
  -[MTLDebugDevice newPipelineLibraryWithFilePath:error:]
  -[MTLDebugDevice newComputePipelineStateWithFunction:completionHandler:]
  -[MTLDebugDevice newLibraryWithDescriptor:error:]
  -[MTLDebugDevice newLibraryWithStitchedDescriptorSPI:error:]
  -[MTLDebugDevice newSharedTextureWithHandle:]
  -[MTLDebugDevice validateDynamicLibrary:state:error:]
  -[MTLDebugDevice newSharedEvent]
  -[MTLDebugDevice newRenderPipelineStateWithDescriptor:error:]
  -[MTLDebugDevice newCommandQueueWithMaxCommandBufferCount:]
  -[MTLDebugDevice newRenderPipelineStateWithDescriptor:completionHandler:]
  -[MTLDebugDevice newLibraryWithData:error:]
  -[MTLDebugDevice newDagStringWithGraphs:]
  -[MTLDebugDevice loadDynamicLibrariesForFunction:insertLibraries:options:error:]
  -[MTLDebugDevice newComputePipelineStateWithFunction:error:]
  -[MTLDebugDevice newArgumentEncoderWithLayout:]
  -[MTLDebugDevice newDynamicLibrary:computeDescriptor:error:]
  -[MTLDebugDevice newLibraryWithSource:options:error:]
  -[MTLDebugDevice newComputePipelineStateWithDescriptor:options:completionHandler:]
  -[MTLDebugDevice newDynamicLibraryWithURL:options:error:]
  -[MTLDebugDevice minimumLinearTextureAlignmentForPixelFormat:]
  -[MTLDebugDevice newLibraryWithStitchedDescriptor:error:]
  -[MTLDebugDevice newDefaultLibrary]
  -[MTLDebugDevice newComputePipelineStateWithFunction:options:completionHandler:]
  -[MTLDebugDevice newLibraryWithDescriptorSPI:error:]
  -[MTLDebugDevice newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:]
  -[MTLDebugDevice loadDynamicLibrariesForComputeDescriptor:options:error:]
  -[MTLDebugDevice newComputePipelineStateWithDescriptor:error:]
  -[MTLDebugDevice newArgumentEncoderWithArguments:]
  -[MTLDebugDevice newCommandQueueWithDescriptor:]
  -[MTLDebugDevice newLibraryWithSource:options:completionHandler:]
  -[MTLDebugDevice newCounterSampleBufferWithDescriptor:error:]
  -[MTLDebugDevice newEvent]
  -[MTLDebugDevice newDefaultLibraryWithBundle:error:]
  -[MTLDebugDevice newRenderPipelineStateWithDescriptor:options:reflection:error:]
  -[MTLDebugDevice minLinearTextureAlignmentForPixelFormat:]
  -[MTLDebugDevice newComputePipelineStateWithFunction:options:reflection:error:]
  -[MTLDebugDevice newLateEvalEvent]
  -[MTLDebugDevice newDynamicLibraryFromURL:error:]
  -[MTLDebugDevice newBinaryLibraryWithOptions:url:error:]
  -[MTLDebugDevice newSharedEventWithHandle:]
  -[MTLDebugDevice newComputePipelineStateWithDescriptor:completionHandler:]
  -[MTLDebugDevice newRenderPipelineStateWithTileDescriptor:options:reflection:error:]
  -[MTLDebugDevice newLibraryWithFile:error:]
  -[MTLDebugDevice newLibraryWithDAG:functions:error:]
  -[MTLDebugDevice targetDeviceInfo]
  -[MTLDebugDevice accelerationStructureSizesWithDescriptor:]
  -[MTLDebugDevice newRasterizationRateMapWithDescriptor:]
  -[MTLDebugDevice newAccelerationStructureWithBuffer:offset:]
  -[MTLDebugDevice newRenderPipelineStateWithTileDescriptor:options:completionHandler:]
  -[MTLDebugDevice newDynamicLibraryWithURL:error:]
  -[MTLDebugDevice newComputePipelineStateWithDescriptor:options:reflection:error:]
  -[MTLDebugDevice newDynamicLibrary:error:]
  -[MTLDebugDevice newRenderPipelineStateWithDescriptor:options:completionHandler:]
  -[MTLDebugDevice newLibraryWithStitchedDescriptor:completionHandler:]
  -[MTLDebugDevice newIntersectionFunctionTableWithDescriptor:]
  -[MTLDebugDevice newAccelerationStructureWithDescriptor:]
  -[MTLDebugDevice newLibraryWithURL:error:]
  -[MTLDebugDevice validateDynamicLibraryURL:error:]
  -[MTLDebugDevice newLibraryWithDescriptor:completionHandler:]
  -[MTLDebugDevice newCommandQueue]
  -[MTLDebugDevice newSharedEventWithMachPort:]
  -[MTLDebugDevice newAccelerationStructureWithSize:]
  -[MTLDebugDevice newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:]
  -[MTLDebugDevice newAccelerationStructureWithSize:resourceIndex:]
  -[MTLDebugDevice heapTextureSizeAndAlignWithDescriptor:]
  -[MTLDebugDevice newHeapWithDescriptor:]
  -[MTLDebugDevice newTextureLayoutWithDescriptor:isHeapOrBufferBacked:]
  -[MTLDebugDevice .cxx_construct]
  -[MTLDebugDevice .cxx_destruct]
  -[MTLDebugDevice newIndirectCommandBufferWithDescriptor:maxCommandCount:options:]
  -[MTLDebugDevice newBufferWithBytes:length:options:]
  -[MTLDebugDevice newVisibleFunctionTableWithDescriptor:]
  -[MTLDebugDevice newBufferWithLength:options:]
  -[MTLDebugDevice newDepthStencilStateWithDescriptor:]
  -[MTLDebugDevice newTextureWithDescriptor:]
  -[MTLDebugDevice newSamplerStateWithDescriptor:]
  -[MTLDebugDevice newTextureWithDescriptor:iosurface:plane:]
  -[MTLDebugDevice newBufferWithBytesNoCopy:length:options:deallocator:]
  -[MTLDebugDevice newTextureWithBytesNoCopy:length:descriptor:deallocator:]
  -[MTLDebugDevice newBufferWithIOSurface:]
  -[MTLDebugDevice heapBufferSizeAndAlignWithLength:options:]
  -[MTLDebugDevice newBufferWithDescriptor:]
  -[MTLDebugDevice newRenderPipelineStateWithTileDescriptor:error:]
  -[MTLDebugDevice newRenderPipelineStateWithTileDescriptor:completionHandler:]
  -[MTLDebugDevice initWithBaseObject:parent:]
  -[MTLDebugDevice getFunctionForBaseObject:library:]
  -[MTLDebugDevice validateRaytracing]
  -[MTLDebugDevice getDynamicLibraryForBaseObject:]
  -[MTLDebugDevice getDepthStencilStateForBaseObject:descriptor:]
  -[MTLDebugDevice getSamplerStateForBaseObject:descriptor:]
  -[MTLDebugDevice notifyExternalReferencesNonZeroOnDealloc:]
  -[MTLDebugDevice addReferenceTrackingCommandBuffer:]
  -[MTLDebugDevice loadValidationEnabled]
  -[MTLDebugDevice removeReferenceTrackingCommandBuffer:]
  -[MTLDebugDevice _newRenderPipelineStateWithTileDescriptor:options:reflection:error:]
  -[MTLDebugDevice _newRenderPipelineStateWithTileDescriptor:options:completionHandler:]
  -[MTLDebugDevice _newRenderPipelineStateWithDescriptor:options:reflection:error:]
  -[MTLDebugDevice _newRenderPipelineStateWithDescriptor:options:completionHandler:]
  -[MTLDebugDevice _newComputePipelineStateWithDescriptor:options:reflection:error:]
  -[MTLDebugDevice _newComputePipelineStateWithDescriptor:options:completionHandler:]
  -[MTLDebugDevice _newComputePipelineStateWithFunction:options:reflection:error:]
  -[MTLDebugDevice _newComputePipelineStateWithFunction:options:completionHandler:]
  -[MTLDebugDevice validateResourceOptions:isTexture:isIOSurface:context:]
  -[MTLDebugDevice validateNewBufferArgs:options:context:]
  -[MTLDebugDevice validateMemorylessResource:context:]
  -[MTLDebugDevice validateLinkedFunctions:context:]
  -[MTLDebugDevice notifySamplerStateDeallocated:]
  -[MTLDebugDevice clearRenderEncoder:writeMask:withCheckerboard:]
  -[MTLDebugDevice storeValidationEnabled]


MTLDebugDepthStencilState : MTLToolsDepthStencilState
 @property  MTLDepthStencilDescriptor *descriptor
 @property  unsigned char attachmentWriteMask

  // instance methods
  -[MTLDebugDepthStencilState descriptor]
  -[MTLDebugDepthStencilState formattedDescription:]
  -[MTLDebugDepthStencilState dealloc]
  -[MTLDebugDepthStencilState initWithDepthStencilState:descriptor:device:]
  -[MTLDebugDepthStencilState attachmentWriteMask]


MTLGPUDebugIndirectCommandBuffer : MTLToolsIndirectCommandBuffer
 @property  <MTLBuffer> *internalICBBuffer
 @property  <MTLBuffer> *internalDrawOrDispatchIDBuffer
 @property  unsigned long maxCommands
 @property  unsigned long maxVertexBindings
 @property  unsigned long maxFragmentBindings
 @property  unsigned long maxKernelBindings
 @property  unsigned long commandByteStride
 @property  BOOL inheritsPipelineState
 @property  BOOL inheritsBuffers

  // instance methods
  -[MTLGPUDebugIndirectCommandBuffer hazardTrackingMode]
  -[MTLGPUDebugIndirectCommandBuffer cpuCacheMode]
  -[MTLGPUDebugIndirectCommandBuffer resourceOptions]
  -[MTLGPUDebugIndirectCommandBuffer storageMode]
  -[MTLGPUDebugIndirectCommandBuffer indirectComputeCommandAtIndex:]
  -[MTLGPUDebugIndirectCommandBuffer dealloc]
  -[MTLGPUDebugIndirectCommandBuffer indirectRenderCommandAtIndex:]
  -[MTLGPUDebugIndirectCommandBuffer internalICBBuffer]
  -[MTLGPUDebugIndirectCommandBuffer internalDrawOrDispatchIDBuffer]
  -[MTLGPUDebugIndirectCommandBuffer initWithIndirectCommandBuffer:descriptor:maxCommandCount:resourceOptions:device:]
  -[MTLGPUDebugIndirectCommandBuffer resetAtIndex:]
  -[MTLGPUDebugIndirectCommandBuffer setBuffer:offset:atIndex:forStage:commandIndex:]
  -[MTLGPUDebugIndirectCommandBuffer setThreadgroupMemoryLength:atIndex:commandIndex:]
  -[MTLGPUDebugIndirectCommandBuffer setComputePipelineStateBuffers:commandIndex:]
  -[MTLGPUDebugIndirectCommandBuffer setRenderPipelineStateBuffers:commandIndex:]
  -[MTLGPUDebugIndirectCommandBuffer setTessellationControlPointIndexBuffer:offset:commandIndex:]
  -[MTLGPUDebugIndirectCommandBuffer maxCommands]
  -[MTLGPUDebugIndirectCommandBuffer maxVertexBindings]
  -[MTLGPUDebugIndirectCommandBuffer maxFragmentBindings]
  -[MTLGPUDebugIndirectCommandBuffer maxKernelBindings]
  -[MTLGPUDebugIndirectCommandBuffer commandByteStride]
  -[MTLGPUDebugIndirectCommandBuffer inheritsBuffers]
  -[MTLGPUDebugIndirectCommandBuffer inheritsPipelineState]
  -[MTLGPUDebugIndirectCommandBuffer onExecuteWithRenderEncoder:]
  -[MTLGPUDebugIndirectCommandBuffer onExecuteWithComputeEncoder:]


MTLDebugEvent : MTLToolsEvent

MTLDebugSharedEvent : MTLToolsSharedEvent

MTLDebugLateEvalEvent : MTLToolsLateEvalEvent

MTLGPUDebugFunctionHandle : MTLToolsFunctionHandle
  // instance methods
  -[MTLGPUDebugFunctionHandle initWithFunctionHandle:renderPipelineState:stage:function:]
  -[MTLGPUDebugFunctionHandle initWithFunctionHandle:computePiplineState:function:]


MTLGPUDebugParallelRenderCommandEncoder : MTLToolsParallelRenderCommandEncoder
  // instance methods
  -[MTLGPUDebugParallelRenderCommandEncoder dealloc]
  -[MTLGPUDebugParallelRenderCommandEncoder renderCommandEncoder]
  -[MTLGPUDebugParallelRenderCommandEncoder initWithParallelRenderCommandEncoder:parent:descriptor:encoderID:]


MTLCountersResourceStateCommandEncoder : MTLToolsResourceStateCommandEncoder
  // instance methods
  -[MTLCountersResourceStateCommandEncoder pushDebugGroup:]
  -[MTLCountersResourceStateCommandEncoder updateFence:]
  -[MTLCountersResourceStateCommandEncoder insertDebugSignpost:]
  -[MTLCountersResourceStateCommandEncoder popDebugGroup]
  -[MTLCountersResourceStateCommandEncoder endEncoding]
  -[MTLCountersResourceStateCommandEncoder dealloc]
  -[MTLCountersResourceStateCommandEncoder setLabel:]
  -[MTLCountersResourceStateCommandEncoder waitForFence:]
  -[MTLCountersResourceStateCommandEncoder updateTextureMappings:mode:regions:mipLevels:slices:numRegions:]
  -[MTLCountersResourceStateCommandEncoder updateTextureMapping:mode:region:mipLevel:slice:]
  -[MTLCountersResourceStateCommandEncoder updateTextureMapping:mode:indirectBuffer:indirectBufferOffset:]
  -[MTLCountersResourceStateCommandEncoder copyMappingStateFromTexture:mipLevel:slice:toBuffer:offset:numTiles:]
  -[MTLCountersResourceStateCommandEncoder initWithResourceStateCommandEncoder:commandBuffer:]


MTLTelemetryComputeCommandEncoder : MTLToolsComputeCommandEncoder
  // instance methods
  -[MTLTelemetryComputeCommandEncoder memoryBarrierWithScope:]
  -[MTLTelemetryComputeCommandEncoder dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:]
  -[MTLTelemetryComputeCommandEncoder setComputePipelineState:]
  -[MTLTelemetryComputeCommandEncoder setTexture:atIndex:]
  -[MTLTelemetryComputeCommandEncoder setThreadgroupMemoryLength:atIndex:]
  -[MTLTelemetryComputeCommandEncoder endEncoding]
  -[MTLTelemetryComputeCommandEncoder memoryBarrierWithResources:count:]
  -[MTLTelemetryComputeCommandEncoder dispatchThreadgroups:threadsPerThreadgroup:]
  -[MTLTelemetryComputeCommandEncoder setTextures:withRange:]
  -[MTLTelemetryComputeCommandEncoder dispatchThreads:threadsPerThreadgroup:]
  -[MTLTelemetryComputeCommandEncoder dispatchThreadsWithIndirectBuffer:indirectBufferOffset:]
  -[MTLTelemetryComputeCommandEncoder initWithComputeCommandEncoder:commandBuffer:]
  -[MTLTelemetryComputeCommandEncoder accumDispatchDistribution:threadgroupsPerGrid:threadsPerThreadgroup:threadsPerGrid:]


MTLToolsAccelerationStructure : MTLToolsResource <MTLAccelerationStructureSPI>
 @property  unsigned long uniqueIdentifier
 @property  <MTLBuffer> *buffer
 @property  unsigned long bufferOffset
 @property  MTLAccelerationStructureDescriptor *descriptor
 @property  unsigned long resourceIndex
 @property  unsigned long size
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long cpuCacheMode
 @property  unsigned long storageMode
 @property  unsigned long hazardTrackingMode
 @property  unsigned long resourceOptions
 @property  <MTLHeap> *heap
 @property  unsigned long heapOffset
 @property  unsigned long allocatedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsAccelerationStructure uniqueIdentifier]
  -[MTLToolsAccelerationStructure setDescriptor:]
  -[MTLToolsAccelerationStructure resourceIndex]
  -[MTLToolsAccelerationStructure bufferOffset]
  -[MTLToolsAccelerationStructure descriptor]
  -[MTLToolsAccelerationStructure size]
  -[MTLToolsAccelerationStructure dealloc]
  -[MTLToolsAccelerationStructure buffer]
  -[MTLToolsAccelerationStructure initWithBaseObject:parent:]


MTLToolsObjectCache : NSObject
  // instance methods
  -[MTLToolsObjectCache removeKey:]
  -[MTLToolsObjectCache .cxx_construct]
  -[MTLToolsObjectCache .cxx_destruct]
  -[MTLToolsObjectCache init]
  -[MTLToolsObjectCache dealloc]
  -[MTLToolsObjectCache getCachedObjectForKey:onMiss:]
  -[MTLToolsObjectCache getCachedObjectForKey:]


MTLDebugFunction : MTLToolsFunction
 @property  MTLFunctionConstantValues *constantValues

  // instance methods
  -[MTLDebugFunction importedSymbols]
  -[MTLDebugFunction importedLibraries]
  -[MTLDebugFunction newArgumentEncoderWithBufferIndex:]
  -[MTLDebugFunction newArgumentEncoderWithBufferIndex:reflection:]
  -[MTLDebugFunction bitcodeData]
  -[MTLDebugFunction newArgumentEncoderWithBufferIndex:reflection:binaryArchives:]
  -[MTLDebugFunction constantValues]
  -[MTLDebugFunction formattedDescription:]
  -[MTLDebugFunction newArgumentEncoderWithBufferIndex:reflection:pipelineLibrary:]
  -[MTLDebugFunction newArgumentEncoderWithBufferIndex:pipelineLibrary:]
  -[MTLDebugFunction setConstantValues:]
  -[MTLDebugFunction dealloc]


MTLDebugLibrary : MTLToolsLibrary
 @property  unsigned long debugType
 @property  id code
 @property  MTLCompileOptions *compileOptions
 @property  NSArray *imageFilterFunctions
 @property  ^{?=BQ^{?}} imageFilterFunctionInfo

  // instance methods
  -[MTLDebugLibrary setCode:]
  -[MTLDebugLibrary newIntersectionFunctionWithDescriptor:completionHandler:]
  -[MTLDebugLibrary newIntersectionFunctionWithDescriptor:error:]
  -[MTLDebugLibrary code]
  -[MTLDebugLibrary newFunctionWithDescriptor:error:]
  -[MTLDebugLibrary dealloc]
  -[MTLDebugLibrary newFunctionWithDescriptor:completionHandler:]
  -[MTLDebugLibrary newFunctionWithName:constantValues:error:]
  -[MTLDebugLibrary newFunctionWithName:constantValues:completionHandler:]
  -[MTLDebugLibrary newFunctionWithName:]
  -[MTLDebugLibrary debugType]
  -[MTLDebugLibrary initWithLibrary:parent:type:code:options:]
  -[MTLDebugLibrary setImageFilterFunctions:imageFilterFunctionInfo:]
  -[MTLDebugLibrary validateDescriptor:expectedClass:]
  -[MTLDebugLibrary copyConstantValues:]
  -[MTLDebugLibrary setDebugType:]
  -[MTLDebugLibrary compileOptions]
  -[MTLDebugLibrary setCompileOptions:]
  -[MTLDebugLibrary imageFilterFunctions]
  -[MTLDebugLibrary imageFilterFunctionInfo]


MTLDebugParallelRenderCommandEncoder : MTLToolsParallelRenderCommandEncoder
 @property  MTLRenderPassDescriptor *descriptor

  // instance methods
  -[MTLDebugParallelRenderCommandEncoder setColorStoreAction:atIndex:]
  -[MTLDebugParallelRenderCommandEncoder descriptor]
  -[MTLDebugParallelRenderCommandEncoder formattedDescription:]
  -[MTLDebugParallelRenderCommandEncoder setDepthStoreAction:]
  -[MTLDebugParallelRenderCommandEncoder setStencilStoreAction:]
  -[MTLDebugParallelRenderCommandEncoder setColorStoreActionOptions:atIndex:]
  -[MTLDebugParallelRenderCommandEncoder setStencilStoreActionOptions:]
  -[MTLDebugParallelRenderCommandEncoder setDepthStoreActionOptions:]
  -[MTLDebugParallelRenderCommandEncoder endEncoding]
  -[MTLDebugParallelRenderCommandEncoder dealloc]
  -[MTLDebugParallelRenderCommandEncoder renderCommandEncoder]
  -[MTLDebugParallelRenderCommandEncoder sampledRenderCommandEncoderWithProgramInfoBuffer:capacity:]
  -[MTLDebugParallelRenderCommandEncoder filterCounterRangeWithFirstBatch:lastBatch:filterIndex:]
  -[MTLDebugParallelRenderCommandEncoder initWithBaseRenderPass:commandBuffer:descriptor:]
  -[MTLDebugParallelRenderCommandEncoder mergeAttachmentWriteMask:]


MTLDebugRenderTargetAttachmentInfo : NSObject
 @property  <MTLTexture> *attachmentTexture
 @property  <MTLTexture> *baseResolveTexture
 @property  <MTLTexture> *baseTexture
 @property  unsigned long renderTargetArrayLength
 @property  unsigned long baseLevelOffset
 @property  unsigned long resolveLevelOffset
 @property  {_NSRange=QQ} baseSliceRangeOffset
 @property  {_NSRange=QQ} resolveSliceRangeOffset

  // instance methods
  -[MTLDebugRenderTargetAttachmentInfo isEqual:]
  -[MTLDebugRenderTargetAttachmentInfo renderTargetArrayLength]
  -[MTLDebugRenderTargetAttachmentInfo baseTexture]
  -[MTLDebugRenderTargetAttachmentInfo baseLevelOffset]
  -[MTLDebugRenderTargetAttachmentInfo baseSliceRangeOffset]
  -[MTLDebugRenderTargetAttachmentInfo baseResolveTexture]
  -[MTLDebugRenderTargetAttachmentInfo resolveLevelOffset]
  -[MTLDebugRenderTargetAttachmentInfo resolveSliceRangeOffset]
  -[MTLDebugRenderTargetAttachmentInfo initWithDesc:renderTargetArrayLength:]
  -[MTLDebugRenderTargetAttachmentInfo intersectsTexture:]
  -[MTLDebugRenderTargetAttachmentInfo attachmentTexture]


MTLDebugRenderCommandEncoder : MTLToolsRenderCommandEncoder
 @property  unsigned long attachmentWriteMask
 @property  MTLRenderPassDescriptor *descriptor
 @property  ^v viewports
 @property  ^v scissorRects
 @property  {?=dddddd} viewport
 @property  {?=QQQQ} scissorRect
 @property  unsigned long frontFacingWinding
 @property  unsigned long cullMode
 @property  unsigned long depthClipMode
 @property  float lineWidth
 @property  float depthBias
 @property  float depthBiasSlopeScale
 @property  float depthBiasClamp
 @property  unsigned long triangleFillMode
 @property  <MTLRenderPipelineState> *renderPipelineState
 @property  unsigned long peakPerSampleStorage
 @property  unsigned long resolvedSampleCount
 @property  <MTLDepthStencilState> *depthStencilState
 @property  MTLDepthStencilDescriptor *defaultDepthStencilDescriptor
 @property  unsigned int frontStencilRef
 @property  unsigned int backStencilRef
 @property  unsigned long visibilityResultMode
 @property  unsigned long visibilityResultOffset
 @property  float blendColorRed
 @property  float blendColorGreen
 @property  float blendColorBlue
 @property  float blendColorAlpha
 @property  unsigned long width
 @property  unsigned long height
 @property  {?=BBQ@QQQQQBff} tessellationFactorBufferArgument
 @property  unsigned long tessellationFactorBufferInstanceStride
 @property  float tessellationFactorScale

  // instance methods
  -[MTLDebugRenderCommandEncoder setLineWidth:]
  -[MTLDebugRenderCommandEncoder setColorStoreAction:atIndex:]
  -[MTLDebugRenderCommandEncoder width]
  -[MTLDebugRenderCommandEncoder setStencilReferenceValue:]
  -[MTLDebugRenderCommandEncoder setDepthClipMode:]
  -[MTLDebugRenderCommandEncoder setVertexBuffers:offsets:withRange:]
  -[MTLDebugRenderCommandEncoder setVertexTexture:atIndex:]
  -[MTLDebugRenderCommandEncoder setVertexSamplerState:atIndex:]
  -[MTLDebugRenderCommandEncoder setFragmentBuffers:offsets:withRange:]
  -[MTLDebugRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:]
  -[MTLDebugRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:]
  -[MTLDebugRenderCommandEncoder useResources:count:usage:]
  -[MTLDebugRenderCommandEncoder sampleCountersInBuffer:atSampleIndex:withBarrier:]
  -[MTLDebugRenderCommandEncoder .cxx_construct]
  -[MTLDebugRenderCommandEncoder .cxx_destruct]
  -[MTLDebugRenderCommandEncoder useHeaps:count:]
  -[MTLDebugRenderCommandEncoder descriptor]
  -[MTLDebugRenderCommandEncoder setTileVisibleFunctionTables:withBufferRange:]
  -[MTLDebugRenderCommandEncoder setVertexAmplificationCount:viewMappings:]
  -[MTLDebugRenderCommandEncoder formattedDescription:]
  -[MTLDebugRenderCommandEncoder setVertexIntersectionFunctionTables:withBufferRange:]
  -[MTLDebugRenderCommandEncoder setVertexBytes:length:atIndex:]
  -[MTLDebugRenderCommandEncoder setFragmentBytes:length:atIndex:]
  -[MTLDebugRenderCommandEncoder setVertexAccelerationStructure:atBufferIndex:]
  -[MTLDebugRenderCommandEncoder viewport]
  -[MTLDebugRenderCommandEncoder setVertexVisibleFunctionTable:atBufferIndex:]
  -[MTLDebugRenderCommandEncoder setVertexVisibleFunctionTables:withBufferRange:]
  -[MTLDebugRenderCommandEncoder lineWidth]
  -[MTLDebugRenderCommandEncoder setFragmentIntersectionFunctionTable:atBufferIndex:]
  -[MTLDebugRenderCommandEncoder textureBarrier]
  -[MTLDebugRenderCommandEncoder setFragmentIntersectionFunctionTables:withBufferRange:]
  -[MTLDebugRenderCommandEncoder height]
  -[MTLDebugRenderCommandEncoder setDepthStoreAction:]
  -[MTLDebugRenderCommandEncoder setStencilStoreAction:]
  -[MTLDebugRenderCommandEncoder setTileAccelerationStructure:atBufferIndex:]
  -[MTLDebugRenderCommandEncoder setTileTexture:atIndex:]
  -[MTLDebugRenderCommandEncoder setTileSamplerState:atIndex:]
  -[MTLDebugRenderCommandEncoder setTileBuffer:offset:atIndex:]
  -[MTLDebugRenderCommandEncoder dispatchThreadsPerTile:]
  -[MTLDebugRenderCommandEncoder setFragmentAccelerationStructure:atBufferIndex:]
  -[MTLDebugRenderCommandEncoder setViewport:]
  -[MTLDebugRenderCommandEncoder memoryBarrierWithResources:count:afterStages:beforeStages:]
  -[MTLDebugRenderCommandEncoder setColorStoreActionOptions:atIndex:]
  -[MTLDebugRenderCommandEncoder setStencilStoreActionOptions:]
  -[MTLDebugRenderCommandEncoder setDepthStoreActionOptions:]
  -[MTLDebugRenderCommandEncoder setFragmentVisibleFunctionTable:atBufferIndex:]
  -[MTLDebugRenderCommandEncoder setTileVisibleFunctionTable:atBufferIndex:]
  -[MTLDebugRenderCommandEncoder useHeap:]
  -[MTLDebugRenderCommandEncoder useResource:usage:]
  -[MTLDebugRenderCommandEncoder executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:]
  -[MTLDebugRenderCommandEncoder setVertexBuffer:offset:atIndex:]
  -[MTLDebugRenderCommandEncoder setFragmentBuffer:offset:atIndex:]
  -[MTLDebugRenderCommandEncoder setVertexBufferOffset:atIndex:]
  -[MTLDebugRenderCommandEncoder setFragmentBufferOffset:atIndex:]
  -[MTLDebugRenderCommandEncoder setScissorRect:]
  -[MTLDebugRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:]
  -[MTLDebugRenderCommandEncoder setRenderPipelineState:]
  -[MTLDebugRenderCommandEncoder setFragmentTexture:atTextureIndex:samplerState:atSamplerIndex:]
  -[MTLDebugRenderCommandEncoder setFragmentTexture:atIndex:]
  -[MTLDebugRenderCommandEncoder setFragmentSamplerState:atIndex:]
  -[MTLDebugRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:instanceCount:]
  -[MTLDebugRenderCommandEncoder setFrontFacingWinding:]
  -[MTLDebugRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:]
  -[MTLDebugRenderCommandEncoder setTriangleFillMode:]
  -[MTLDebugRenderCommandEncoder setBlendColorRed:green:blue:alpha:]
  -[MTLDebugRenderCommandEncoder setDepthBias:slopeScale:clamp:]
  -[MTLDebugRenderCommandEncoder setDepthStencilState:]
  -[MTLDebugRenderCommandEncoder setVisibilityResultMode:offset:]
  -[MTLDebugRenderCommandEncoder executeCommandsInBuffer:withRange:]
  -[MTLDebugRenderCommandEncoder setTileIntersectionFunctionTable:atBufferIndex:]
  -[MTLDebugRenderCommandEncoder endEncoding]
  -[MTLDebugRenderCommandEncoder dealloc]
  -[MTLDebugRenderCommandEncoder setFragmentVisibleFunctionTables:withBufferRange:]
  -[MTLDebugRenderCommandEncoder setVertexIntersectionFunctionTable:atBufferIndex:]
  -[MTLDebugRenderCommandEncoder updateFence:afterStages:]
  -[MTLDebugRenderCommandEncoder memoryBarrierWithScope:afterStages:beforeStages:]
  -[MTLDebugRenderCommandEncoder setTileIntersectionFunctionTables:withBufferRange:]
  -[MTLDebugRenderCommandEncoder useHeap:stages:]
  -[MTLDebugRenderCommandEncoder setCullMode:]
  -[MTLDebugRenderCommandEncoder useHeaps:count:stages:]
  -[MTLDebugRenderCommandEncoder useResource:usage:stages:]
  -[MTLDebugRenderCommandEncoder useResources:count:usage:stages:]
  -[MTLDebugRenderCommandEncoder waitForFence:beforeStages:]
  -[MTLDebugRenderCommandEncoder filterCounterRangeWithFirstBatch:lastBatch:filterIndex:]
  -[MTLDebugRenderCommandEncoder _setDefaults]
  -[MTLDebugRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:]
  -[MTLDebugRenderCommandEncoder setTessellationFactorScale:]
  -[MTLDebugRenderCommandEncoder cullMode]
  -[MTLDebugRenderCommandEncoder frontFacingWinding]
  -[MTLDebugRenderCommandEncoder setVertexTextures:withRange:]
  -[MTLDebugRenderCommandEncoder setFragmentTextures:withRange:]
  -[MTLDebugRenderCommandEncoder setViewports:count:]
  -[MTLDebugRenderCommandEncoder setScissorRects:count:]
  -[MTLDebugRenderCommandEncoder drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:]
  -[MTLDebugRenderCommandEncoder setTessellationFactorBuffer:offset:instanceStride:]
  -[MTLDebugRenderCommandEncoder drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:]
  -[MTLDebugRenderCommandEncoder tessellationFactorScale]
  -[MTLDebugRenderCommandEncoder renderPipelineState]
  -[MTLDebugRenderCommandEncoder setVertexSamplerStates:withRange:]
  -[MTLDebugRenderCommandEncoder setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLDebugRenderCommandEncoder setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLDebugRenderCommandEncoder setFragmentSamplerStates:withRange:]
  -[MTLDebugRenderCommandEncoder setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLDebugRenderCommandEncoder setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLDebugRenderCommandEncoder setStencilFrontReferenceValue:backReferenceValue:]
  -[MTLDebugRenderCommandEncoder drawPrimitives:indirectBuffer:indirectBufferOffset:]
  -[MTLDebugRenderCommandEncoder drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLDebugRenderCommandEncoder triangleFillMode]
  -[MTLDebugRenderCommandEncoder setThreadgroupMemoryLength:offset:atIndex:]
  -[MTLDebugRenderCommandEncoder setTileBytes:length:atIndex:]
  -[MTLDebugRenderCommandEncoder initWithRenderCommandEncoder:parent:descriptor:]
  -[MTLDebugRenderCommandEncoder drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLDebugRenderCommandEncoder drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLDebugRenderCommandEncoder dispatchThreadsPerTile:inRegion:]
  -[MTLDebugRenderCommandEncoder setTileBufferOffset:atIndex:]
  -[MTLDebugRenderCommandEncoder setTileBuffers:offsets:withRange:]
  -[MTLDebugRenderCommandEncoder setTileTextures:withRange:]
  -[MTLDebugRenderCommandEncoder setTileSamplerStates:withRange:]
  -[MTLDebugRenderCommandEncoder setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLDebugRenderCommandEncoder setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLDebugRenderCommandEncoder setVertexAmplificationMode:value:]
  -[MTLDebugRenderCommandEncoder setColorResolveTexture:slice:depthPlane:level:atIndex:]
  -[MTLDebugRenderCommandEncoder setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:]
  -[MTLDebugRenderCommandEncoder setDepthResolveTexture:slice:depthPlane:level:]
  -[MTLDebugRenderCommandEncoder setDepthResolveTexture:slice:depthPlane:level:yInvert:]
  -[MTLDebugRenderCommandEncoder setStencilResolveTexture:slice:depthPlane:level:]
  -[MTLDebugRenderCommandEncoder setStencilResolveTexture:slice:depthPlane:level:yInvert:]
  -[MTLDebugRenderCommandEncoder setVertexSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:]
  -[MTLDebugRenderCommandEncoder setFragmentSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:]
  -[MTLDebugRenderCommandEncoder setTriangleFrontFillMode:backFillMode:]
  -[MTLDebugRenderCommandEncoder setTransformFeedbackState:]
  -[MTLDebugRenderCommandEncoder attachmentWriteMask]
  -[MTLDebugRenderCommandEncoder validateFramebufferWithRenderPipelineState:context:]
  -[MTLDebugRenderCommandEncoder _dispatchThreadsPerTile:inRegion:]
  -[MTLDebugRenderCommandEncoder validateCommonDrawErrors:]
  -[MTLDebugRenderCommandEncoder updatePipelineData]
  -[MTLDebugRenderCommandEncoder validateCommonDrawErrors:instanceCount:baseInstance:maxVertexID:]
  -[MTLDebugRenderCommandEncoder validateDrawPrimitives:vertexStart:vertexCount:instanceCount:function:]
  -[MTLDebugRenderCommandEncoder validateDrawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:function:]
  -[MTLDebugRenderCommandEncoder _validateAllFunctionArguments:]
  -[MTLDebugRenderCommandEncoder setVisibleFunctionTable:atBufferIndex:maxBuffers:buffers:buffersLength:stage:]
  -[MTLDebugRenderCommandEncoder setVisibleFunctionTables:withBufferRange:maxBuffers:buffers:buffersLength:stage:]
  -[MTLDebugRenderCommandEncoder setIntersectionFunctionTable:atBufferIndex:maxBuffers:buffers:buffersLength:stage:]
  -[MTLDebugRenderCommandEncoder setIntersectionFunctionTables:withBufferRange:maxBuffers:buffers:buffersLength:stage:]
  -[MTLDebugRenderCommandEncoder setAccelerationStructure:atBufferIndex:maxBuffers:buffers:buffersLength:stage:]
  -[MTLDebugRenderCommandEncoder viewports]
  -[MTLDebugRenderCommandEncoder scissorRects]
  -[MTLDebugRenderCommandEncoder scissorRect]
  -[MTLDebugRenderCommandEncoder enumerateVertexBuffersUsingBlock:]
  -[MTLDebugRenderCommandEncoder enumerateVertexTexturesUsingBlock:]
  -[MTLDebugRenderCommandEncoder enumerateVertexSamplersUsingBlock:]
  -[MTLDebugRenderCommandEncoder enumerateFragmentBuffersUsingBlock:]
  -[MTLDebugRenderCommandEncoder enumerateFragmentTexturesUsingBlock:]
  -[MTLDebugRenderCommandEncoder enumerateFragmentSamplersUsingBlock:]
  -[MTLDebugRenderCommandEncoder enumerateTileBuffersUsingBlock:]
  -[MTLDebugRenderCommandEncoder enumerateTileTexturesUsingBlock:]
  -[MTLDebugRenderCommandEncoder enumerateTileSamplersUsingBlock:]
  -[MTLDebugRenderCommandEncoder enumerateThreadgroupMemoryUsingBlock:]
  -[MTLDebugRenderCommandEncoder depthClipMode]
  -[MTLDebugRenderCommandEncoder depthBias]
  -[MTLDebugRenderCommandEncoder depthBiasSlopeScale]
  -[MTLDebugRenderCommandEncoder depthBiasClamp]
  -[MTLDebugRenderCommandEncoder peakPerSampleStorage]
  -[MTLDebugRenderCommandEncoder resolvedSampleCount]
  -[MTLDebugRenderCommandEncoder depthStencilState]
  -[MTLDebugRenderCommandEncoder defaultDepthStencilDescriptor]
  -[MTLDebugRenderCommandEncoder frontStencilRef]
  -[MTLDebugRenderCommandEncoder backStencilRef]
  -[MTLDebugRenderCommandEncoder visibilityResultMode]
  -[MTLDebugRenderCommandEncoder visibilityResultOffset]
  -[MTLDebugRenderCommandEncoder blendColorRed]
  -[MTLDebugRenderCommandEncoder blendColorGreen]
  -[MTLDebugRenderCommandEncoder blendColorBlue]
  -[MTLDebugRenderCommandEncoder blendColorAlpha]
  -[MTLDebugRenderCommandEncoder tessellationFactorBufferArgument]
  -[MTLDebugRenderCommandEncoder tessellationFactorBufferInstanceStride]


MTLCountersCommandBuffer : MTLToolsCommandBuffer
 @property  MTLCountersTraceCommandBuffer *traceBuffer

  // instance methods
  -[MTLCountersCommandBuffer presentDrawable:]
  -[MTLCountersCommandBuffer presentDrawable:atTime:]
  -[MTLCountersCommandBuffer computeCommandEncoderWithDispatchType:]
  -[MTLCountersCommandBuffer computeCommandEncoderWithDescriptor:]
  -[MTLCountersCommandBuffer waitUntilScheduled]
  -[MTLCountersCommandBuffer blitCommandEncoderWithDescriptor:]
  -[MTLCountersCommandBuffer renderCommandEncoderWithDescriptor:]
  -[MTLCountersCommandBuffer blitCommandEncoder]
  -[MTLCountersCommandBuffer resourceStateCommandEncoderWithDescriptor:]
  -[MTLCountersCommandBuffer dealloc]
  -[MTLCountersCommandBuffer addPurgedHeap:]
  -[MTLCountersCommandBuffer addPurgedResource:]
  -[MTLCountersCommandBuffer waitUntilCompleted]
  -[MTLCountersCommandBuffer computeCommandEncoder]
  -[MTLCountersCommandBuffer parallelRenderCommandEncoderWithDescriptor:]
  -[MTLCountersCommandBuffer resourceStateCommandEncoder]
  -[MTLCountersCommandBuffer sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:]
  -[MTLCountersCommandBuffer traceBuffer]
  -[MTLCountersCommandBuffer sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:]
  -[MTLCountersCommandBuffer sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:]
  -[MTLCountersCommandBuffer sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:]
  -[MTLCountersCommandBuffer initWithCommandBuffer:commandQueue:]


MTLGPUDebugBlitCommandEncoder : MTLToolsBlitCommandEncoder <MTLGPUDebugCommandEncoder>
 @property  unsigned int encoderID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLGPUDebugBlitCommandEncoder copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:]
  -[MTLGPUDebugBlitCommandEncoder optimizeIndirectCommandBuffer:withRange:]
  -[MTLGPUDebugBlitCommandEncoder temporaryBufferWithBytes:length:]
  -[MTLGPUDebugBlitCommandEncoder temporaryBufferWithLength:]
  -[MTLGPUDebugBlitCommandEncoder encoderID]
  -[MTLGPUDebugBlitCommandEncoder initWithBlitCommandEncoder:parent:encoderID:]


MTLGPUDebugVisibleFunctionTable : MTLToolsVisibleFunctionTable <MTLGPUDebugResource>
 @property  <MTLVisibleFunctionTable> *baseObject
 @property  unsigned long length
 @property  unsigned long gpuAddress
 @property  int responsibleProcess
 @property  unsigned long allocationID
 @property  unsigned long protectionOptions
 @property  unsigned long unfilteredResourceOptions
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long cpuCacheMode
 @property  unsigned long storageMode
 @property  unsigned long hazardTrackingMode
 @property  unsigned long resourceOptions
 @property  <MTLHeap> *heap
 @property  unsigned long heapOffset
 @property  unsigned long allocatedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLGPUDebugVisibleFunctionTable gpuAddress]
  -[MTLGPUDebugVisibleFunctionTable length]
  -[MTLGPUDebugVisibleFunctionTable handleForOffset:]
  -[MTLGPUDebugVisibleFunctionTable _setupIdentifier]
  -[MTLGPUDebugVisibleFunctionTable initWithVisibleFunctionTable:descriptor:device:]
  -[MTLGPUDebugVisibleFunctionTable initWithVisibleFunctionTable:descriptor:renderPipeline:]
  -[MTLGPUDebugVisibleFunctionTable initWithVisibleFunctionTable:descriptor:computePipeline:]


MTLDebugResource : NSObject <NSObject>
 @property  id baseObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLDebugResource doesAliasAnyResources:count:]
  -[MTLDebugResource doesAliasAllResources:count:]
  -[MTLDebugResource doesAliasResource:]
  -[MTLDebugResource baseObject]
  -[MTLDebugResource initWithBaseObject:]


MTLGPUDebugComputeCommandEncoder : MTLToolsComputeCommandEncoder <MTLGPUDebugCommandEncoder>
 @property  MTLGPUDebugCommandBuffer *commandBuffer
 @property  unsigned int encoderID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLGPUDebugComputeCommandEncoder setBuffer:offset:atIndex:]
  -[MTLGPUDebugComputeCommandEncoder useResources:count:usage:]
  -[MTLGPUDebugComputeCommandEncoder .cxx_construct]
  -[MTLGPUDebugComputeCommandEncoder setVisibleFunctionTable:atBufferIndex:]
  -[MTLGPUDebugComputeCommandEncoder useHeaps:count:]
  -[MTLGPUDebugComputeCommandEncoder setAccelerationStructure:atBufferIndex:]
  -[MTLGPUDebugComputeCommandEncoder setIntersectionFunctionTable:atBufferIndex:]
  -[MTLGPUDebugComputeCommandEncoder setBytes:length:atIndex:]
  -[MTLGPUDebugComputeCommandEncoder dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:]
  -[MTLGPUDebugComputeCommandEncoder setComputePipelineState:]
  -[MTLGPUDebugComputeCommandEncoder useHeap:]
  -[MTLGPUDebugComputeCommandEncoder useResource:usage:]
  -[MTLGPUDebugComputeCommandEncoder executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:]
  -[MTLGPUDebugComputeCommandEncoder setTexture:atIndex:]
  -[MTLGPUDebugComputeCommandEncoder setIntersectionFunctionTables:withBufferRange:]
  -[MTLGPUDebugComputeCommandEncoder setThreadgroupMemoryLength:atIndex:]
  -[MTLGPUDebugComputeCommandEncoder setBuffers:offsets:withRange:]
  -[MTLGPUDebugComputeCommandEncoder executeCommandsInBuffer:withRange:]
  -[MTLGPUDebugComputeCommandEncoder endEncoding]
  -[MTLGPUDebugComputeCommandEncoder dispatchThreadgroups:threadsPerThreadgroup:]
  -[MTLGPUDebugComputeCommandEncoder setVisibleFunctionTables:withBufferRange:]
  -[MTLGPUDebugComputeCommandEncoder setTextures:withRange:]
  -[MTLGPUDebugComputeCommandEncoder setBufferOffset:atIndex:]
  -[MTLGPUDebugComputeCommandEncoder dispatchThreads:threadsPerThreadgroup:]
  -[MTLGPUDebugComputeCommandEncoder _initBufferArgumentData:]
  -[MTLGPUDebugComputeCommandEncoder temporaryBufferWithBytes:length:]
  -[MTLGPUDebugComputeCommandEncoder temporaryBufferWithLength:]
  -[MTLGPUDebugComputeCommandEncoder flushBindings]
  -[MTLGPUDebugComputeCommandEncoder encoderID]
  -[MTLGPUDebugComputeCommandEncoder dispatchThreadsWithIndirectBuffer:indirectBufferOffset:]
  -[MTLGPUDebugComputeCommandEncoder encodeStartDoWhile]
  -[MTLGPUDebugComputeCommandEncoder encodeEndDoWhile:offset:comparison:referenceValue:]
  -[MTLGPUDebugComputeCommandEncoder encodeStartWhile:offset:comparison:referenceValue:]
  -[MTLGPUDebugComputeCommandEncoder encodeEndWhile]
  -[MTLGPUDebugComputeCommandEncoder encodeStartIf:offset:comparison:referenceValue:]
  -[MTLGPUDebugComputeCommandEncoder encodeEndIf]
  -[MTLGPUDebugComputeCommandEncoder setBufferUsageTable:textureUsageTable:]
  -[MTLGPUDebugComputeCommandEncoder setKernelReportBuffer:offset:]
  -[MTLGPUDebugComputeCommandEncoder initWithComputeCommandEncoder:parent:encoderID:]
  -[MTLGPUDebugComputeCommandEncoder initWithComputeCommandEncoder:commandBuffer:descriptor:encoderID:]
  -[MTLGPUDebugComputeCommandEncoder setComputePipelineStateBuffers:]
  -[MTLGPUDebugComputeCommandEncoder setAccelerationStructures:withBufferRange:]


MTLToolsFunctionHandle : MTLToolsObject <MTLFunctionHandle>
 @property  MTLToolsFunction *function
 @property  unsigned long functionType
 @property  NSString *name
 @property  <MTLDevice> *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLToolsFunctionHandle functionType]
  -[MTLToolsFunctionHandle name]
  -[MTLToolsFunctionHandle function]
  -[MTLToolsFunctionHandle dealloc]
  -[MTLToolsFunctionHandle initWithBaseObject:parent:function:]


MTLGPUDebugFunction : MTLToolsFunction
  // class methods
  +[MTLGPUDebugFunction internalStructTypeFromUserStructType:]
  +[MTLGPUDebugFunction internalArrayTypeFromUserArrayType:]
  +[MTLGPUDebugFunction convertUserType:]

  // instance methods
  -[MTLGPUDebugFunction newArgumentEncoderWithBufferIndex:]
  -[MTLGPUDebugFunction newArgumentEncoderWithBufferIndex:reflection:]
  -[MTLGPUDebugFunction newArgumentEncoderWithBufferIndex:reflection:binaryArchives:]
  -[MTLGPUDebugFunction .cxx_construct]
  -[MTLGPUDebugFunction .cxx_destruct]
  -[MTLGPUDebugFunction newArgumentEncoderWithBufferIndex:reflection:pipelineLibrary:]
  -[MTLGPUDebugFunction newArgumentEncoderWithBufferIndex:pipelineLibrary:]
  -[MTLGPUDebugFunction dealloc]
  -[MTLGPUDebugFunction prepareForBinaryFunctionUsage]
  -[MTLGPUDebugFunction prepareForRenderPipelineUsage]
  -[MTLGPUDebugFunction prepareForComputePipelineUsage]
  -[MTLGPUDebugFunction initWithFunction:library:]
  -[MTLGPUDebugFunction _initImageData]
  -[MTLGPUDebugFunction newArgumentEncoderWithBufferIndex:reflection:pipelineLibrary:binaryArchives:]


MTLDebugIndirectRenderCommand : MTLToolsIndirectRenderCommand
 @property  unsigned long index
 @property  <MTLIndirectCommandBuffer> *indirectCommandBuffer

  // instance methods
  -[MTLDebugIndirectRenderCommand drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:]
  -[MTLDebugIndirectRenderCommand drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:]
  -[MTLDebugIndirectRenderCommand setVertexBuffer:offset:atIndex:]
  -[MTLDebugIndirectRenderCommand setFragmentBuffer:offset:atIndex:]
  -[MTLDebugIndirectRenderCommand setRenderPipelineState:]
  -[MTLDebugIndirectRenderCommand index]
  -[MTLDebugIndirectRenderCommand dealloc]
  -[MTLDebugIndirectRenderCommand drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:]
  -[MTLDebugIndirectRenderCommand drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:]
  -[MTLDebugIndirectRenderCommand initWithBaseObject:descriptor:indexCount:indirectCommandBuffer:]
  -[MTLDebugIndirectRenderCommand indirectCommandBuffer]


MTLTelemetryRenderCommandEncoder : MTLToolsRenderCommandEncoder
  // instance methods
  -[MTLTelemetryRenderCommandEncoder setDepthClipMode:]
  -[MTLTelemetryRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:]
  -[MTLTelemetryRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:]
  -[MTLTelemetryRenderCommandEncoder setViewport:]
  -[MTLTelemetryRenderCommandEncoder memoryBarrierWithResources:count:afterStages:beforeStages:]
  -[MTLTelemetryRenderCommandEncoder setScissorRect:]
  -[MTLTelemetryRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:]
  -[MTLTelemetryRenderCommandEncoder setRenderPipelineState:]
  -[MTLTelemetryRenderCommandEncoder setFragmentTexture:atIndex:]
  -[MTLTelemetryRenderCommandEncoder setFragmentSamplerState:atIndex:]
  -[MTLTelemetryRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:]
  -[MTLTelemetryRenderCommandEncoder setDepthStencilState:]
  -[MTLTelemetryRenderCommandEncoder endEncoding]
  -[MTLTelemetryRenderCommandEncoder memoryBarrierWithScope:afterStages:beforeStages:]
  -[MTLTelemetryRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:]
  -[MTLTelemetryRenderCommandEncoder setFragmentTextures:withRange:]
  -[MTLTelemetryRenderCommandEncoder setViewports:count:]
  -[MTLTelemetryRenderCommandEncoder setScissorRects:count:]
  -[MTLTelemetryRenderCommandEncoder setFragmentSamplerStates:withRange:]
  -[MTLTelemetryRenderCommandEncoder setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:]
  -[MTLTelemetryRenderCommandEncoder setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:]
  -[MTLTelemetryRenderCommandEncoder drawPrimitives:indirectBuffer:indirectBufferOffset:]
  -[MTLTelemetryRenderCommandEncoder drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:]
  -[MTLTelemetryRenderCommandEncoder initWithRenderCommandEncoder:parent:descriptor:]
  -[MTLTelemetryRenderCommandEncoder initWithRenderCommandEncoder:parent:commandBuffer:descriptor:]
  -[MTLTelemetryRenderCommandEncoder initTelemetryWithDescriptor:commandBuffer:]
  -[MTLTelemetryRenderCommandEncoder accumDrawWithType:indexType:primitiveType:vertexCount:instanceCount:]
  -[MTLTelemetryRenderCommandEncoder accumViewportTelemetry:count:]
  -[MTLTelemetryRenderCommandEncoder accumScissorRectTelemetry:count:]


MTLTelemetryCommandBuffer : MTLToolsCommandBuffer
  // instance methods
  -[MTLTelemetryCommandBuffer computeCommandEncoderWithDescriptor:]
  -[MTLTelemetryCommandBuffer .cxx_construct]
  -[MTLTelemetryCommandBuffer .cxx_destruct]
  -[MTLTelemetryCommandBuffer blitCommandEncoderWithDescriptor:]
  -[MTLTelemetryCommandBuffer renderCommandEncoderWithDescriptor:]
  -[MTLTelemetryCommandBuffer blitCommandEncoder]
  -[MTLTelemetryCommandBuffer dealloc]
  -[MTLTelemetryCommandBuffer computeCommandEncoder]
  -[MTLTelemetryCommandBuffer parallelRenderCommandEncoderWithDescriptor:]
  -[MTLTelemetryCommandBuffer postCompletionHandlers]
  -[MTLTelemetryCommandBuffer initWithCommandBuffer:commandQueue:]
  -[MTLTelemetryCommandBuffer initDistributions]
  -[MTLTelemetryCommandBuffer mergeDistributions]


MTLDebugRenderPipelineState : MTLToolsRenderPipelineState
 @property  BOOL rasterizationEnabled
 @property  MTLRenderPipelineDescriptor *descriptor
 @property  MTLRenderPipelineReflection *reflection
 @property  unsigned long attachmentWriteMask
 @property  MTLTileRenderPipelineDescriptor *tileDescriptor

  // instance methods
  -[MTLDebugRenderPipelineState newRenderPipelineStateWithAdditionalBinaryFunctions:fragmentAdditionalBinaryFunctions:error:]
  -[MTLDebugRenderPipelineState vertexFunctionHandleWithFunction:]
  -[MTLDebugRenderPipelineState newFragmentIntersectionFunctionTableWithDescriptor:]
  -[MTLDebugRenderPipelineState descriptor]
  -[MTLDebugRenderPipelineState functionHandleWithFunction:stage:]
  -[MTLDebugRenderPipelineState formattedDescription:]
  -[MTLDebugRenderPipelineState newVertexIntersectionFunctionTableWithDescriptor:]
  -[MTLDebugRenderPipelineState tileFunctionHandleWithFunction:]
  -[MTLDebugRenderPipelineState newRenderPipelineStateWithAdditionalBinaryFunctions:error:]
  -[MTLDebugRenderPipelineState newTileIntersectionFunctionTableWithDescriptor:]
  -[MTLDebugRenderPipelineState newVisibleFunctionTableFromVertexStageWithDescriptor:]
  -[MTLDebugRenderPipelineState newTileRenderPipelineStateWithAdditionalBinaryFunctions:error:]
  -[MTLDebugRenderPipelineState newVisibleFunctionTableFromTileStageWithDescriptor:]
  -[MTLDebugRenderPipelineState newIntersectionFunctionTableWithDescriptor:stage:]
  -[MTLDebugRenderPipelineState dealloc]
  -[MTLDebugRenderPipelineState newVisibleFunctionTableFromFragmentStageWithDescriptor:]
  -[MTLDebugRenderPipelineState newVisibleFunctionTableWithDescriptor:stage:]
  -[MTLDebugRenderPipelineState fragmentFunctionHandleWithFunction:]
  -[MTLDebugRenderPipelineState rasterizationEnabled]
  -[MTLDebugRenderPipelineState validateHandleForSetFunction:]
  -[MTLDebugRenderPipelineState initWithPipelineState:reflection:parent:descriptor:]
  -[MTLDebugRenderPipelineState reflection]
  -[MTLDebugRenderPipelineState getParameter:]
  -[MTLDebugRenderPipelineState isAncestorOf:]
  -[MTLDebugRenderPipelineState initWithPipelineState:reflection:parent:tileDescriptor:]
  -[MTLDebugRenderPipelineState attachmentWriteMask]
  -[MTLDebugRenderPipelineState tileDescriptor]
  -[MTLDebugRenderPipelineState outputImageBlockData]
  -[MTLDebugRenderPipelineState isImageBlockLayoutInputCompatibleWithOutputOf:]
  -[MTLDebugRenderPipelineState _updateCachedPipelineState]
  -[MTLDebugRenderPipelineState _updateCachedTilePipelineState]
  -[MTLDebugRenderPipelineState _findMasterStruct:includeImageBlockData:]
  -[MTLDebugRenderPipelineState validateBinaryFunctions:stage:]
  -[MTLDebugRenderPipelineState newVisibleFunctionTableWithDescriptor:stage:selector:]
  -[MTLDebugRenderPipelineState functionHandleToDebugFunctionHandle:parentFunction:stage:]
  -[MTLDebugRenderPipelineState functionHandleWithFunction:stage:selector:]
  -[MTLDebugRenderPipelineState newIntersectionFunctionTableWithDescriptor:withStage:selector:]


MTLDebugSamplerState : MTLToolsSamplerState
 @property  MTLSamplerDescriptor *descriptor

  // instance methods
  -[MTLDebugSamplerState descriptor]
  -[MTLDebugSamplerState formattedDescription:]
  -[MTLDebugSamplerState dealloc]
  -[MTLDebugSamplerState initWithSamplerState:descriptor:device:]


MTLDebugHeap : MTLToolsHeap <MTLDebugResourcePurgeable>
 @property  MTLDebugDevice *debugDevice

  // instance methods
  -[MTLDebugHeap setPurgeableState:]
  -[MTLDebugHeap newBufferWithLength:options:]
  -[MTLDebugHeap newTextureWithDescriptor:]
  -[MTLDebugHeap maxAvailableSizeWithAlignment:]
  -[MTLDebugHeap newBufferWithLength:options:offset:]
  -[MTLDebugHeap newTextureWithDescriptor:offset:]
  -[MTLDebugHeap lockPurgeableState]
  -[MTLDebugHeap unlockPurgeableState]
  -[MTLDebugHeap purgeableStateValidForRendering]
  -[MTLDebugHeap initWithHeap:device:]
  -[MTLDebugHeap validateHeapResourceOptions:isTexture:isIOSurface:context:]
  -[MTLDebugHeap validateHeapTextureUsage:options:context:]
  -[MTLDebugHeap validatePixelFormatWithHeap:context:]
  -[MTLDebugHeap validateOffset:withRequirements:]
  -[MTLDebugHeap debugDevice]


MTLDebugTexture : MTLToolsTexture <MTLDebugResourcePurgeable>
 @property  MTLDebugResource *common
 @property  unsigned long offset
 @property  unsigned long bytesPerRow
 @property  unsigned long bytesPerImage
 @property  unsigned long plane
 @property  {unordered_map<SubView activeSubViews
 @property  BOOL isLinearTexture

  // instance methods
  -[MTLDebugTexture getBytes:bytesPerRow:fromRegion:mipmapLevel:]
  -[MTLDebugTexture offset]
  -[MTLDebugTexture .cxx_construct]
  -[MTLDebugTexture newCompressedTextureViewWithPixelFormat:textureType:level:slice:]
  -[MTLDebugTexture .cxx_destruct]
  -[MTLDebugTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:]
  -[MTLDebugTexture doesAliasAnyResources:count:]
  -[MTLDebugTexture doesAliasAllResources:count:]
  -[MTLDebugTexture plane]
  -[MTLDebugTexture doesAliasResource:]
  -[MTLDebugTexture makeAliasable]
  -[MTLDebugTexture replaceRegion:mipmapLevel:withBytes:bytesPerRow:]
  -[MTLDebugTexture setPurgeableState:]
  -[MTLDebugTexture getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:]
  -[MTLDebugTexture newTextureViewWithPixelFormat:]
  -[MTLDebugTexture common]
  -[MTLDebugTexture newTextureViewWithPixelFormat:textureType:levels:slices:resourceIndex:]
  -[MTLDebugTexture newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:resourceIndex:]
  -[MTLDebugTexture newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:]
  -[MTLDebugTexture dealloc]
  -[MTLDebugTexture bytesPerImage]
  -[MTLDebugTexture newTextureViewWithPixelFormat:resourceIndex:]
  -[MTLDebugTexture bytesPerRow]
  -[MTLDebugTexture newTextureViewWithPixelFormat:textureType:levels:slices:]
  -[MTLDebugTexture lockPurgeableState]
  -[MTLDebugTexture unlockPurgeableState]
  -[MTLDebugTexture purgeableStateValidForRendering]
  -[MTLDebugTexture initWithBaseTexture:device:texture:pixelFormat:]
  -[MTLDebugTexture initWithBaseTexture:device:buffer:offset:bytesPerRow:]
  -[MTLDebugTexture initWithBaseTexture:device:buffer:offset:bytesPerRow:bytesPerImage:]
  -[MTLDebugTexture addUsedRenderTarget:slices:]
  -[MTLDebugTexture removeUsedRenderTarget:slices:]
  -[MTLDebugTexture requireUsage:]
  -[MTLDebugTexture initWithBaseTexture:device:]
  -[MTLDebugTexture initWithBaseTexture:device:plane:]
  -[MTLDebugTexture initWithBaseTexture:heap:device:]
  -[MTLDebugTexture initWithBaseTexture:device:texture:]
  -[MTLDebugTexture initWithBaseTexture:device:texture:pixelFormat:textureType:levels:slices:]
  -[MTLDebugTexture _resourceHasMemory]
  -[MTLDebugTexture activeSubViews]
  -[MTLDebugTexture setActiveSubViews:]
  -[MTLDebugTexture isLinearTexture]


MTLDebugTextureLayout : MTLToolsTextureLayout
 @property  MTLDebugDevice *debugDevice
 @property  MTLTextureDescriptor *descriptor

  // instance methods
  -[MTLDebugTextureLayout descriptor]
  -[MTLDebugTextureLayout dealloc]
  -[MTLDebugTextureLayout initWithBaseTextureLayout:device:descriptor:]
  -[MTLDebugTextureLayout debugDevice]


MTLTelemetryCommandQueue : MTLToolsCommandQueue
  // instance methods
  -[MTLTelemetryCommandQueue commandBufferWithUnretainedReferences]
  -[MTLTelemetryCommandQueue commandBufferWithDescriptor:]
  -[MTLTelemetryCommandQueue commandBuffer]


MTLTelemetryBlitCommandEncoder : MTLToolsBlitCommandEncoder
  // instance methods
  -[MTLTelemetryBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:]
  -[MTLTelemetryBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:]
  -[MTLTelemetryBlitCommandEncoder copyFromTexture:toTexture:]
  -[MTLTelemetryBlitCommandEncoder fillBuffer:range:pattern4:]
  -[MTLTelemetryBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:]
  -[MTLTelemetryBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:]
  -[MTLTelemetryBlitCommandEncoder fillTexture:level:slice:region:color:pixelFormat:]
  -[MTLTelemetryBlitCommandEncoder copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:]
  -[MTLTelemetryBlitCommandEncoder fillBuffer:range:value:]
  -[MTLTelemetryBlitCommandEncoder fillTexture:level:slice:region:bytes:length:]
  -[MTLTelemetryBlitCommandEncoder fillTexture:level:slice:region:color:]
  -[MTLTelemetryBlitCommandEncoder endEncoding]
  -[MTLTelemetryBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]
  -[MTLTelemetryBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:]
  -[MTLTelemetryBlitCommandEncoder initWithBlitCommandEncoder:commandBuffer:]
  -[MTLTelemetryBlitCommandEncoder accumulateBlitDistribution:samples:bytesPerRow:bytesPerImage:bufferSize:type:option:src:]


MTLGPUDebugDynamicLibrary : MTLToolsDynamicLibrary <MTLDynamicLibrarySPI>
 @property  MTLGPUDebugImageData *imageData
 @property  NSObject<OS_dispatch_data> *binaryData
 @property  NSArray *exportedFunctions
 @property  NSArray *exportedVariables
 @property  NSArray *importedSymbols
 @property  NSArray *importedLibraries
 @property  NSString *libraryPath
 @property  r^{?=[32C]} libraryUUID
 @property  NSArray *relocations
 @property  MTLDebugInstrumentationData *debugInstrumentationData
 @property  BOOL shaderValidationEnabled
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  NSString *installName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLGPUDebugDynamicLibrary imageData]
  -[MTLGPUDebugDynamicLibrary dealloc]
  -[MTLGPUDebugDynamicLibrary prepareForUsage]
  -[MTLGPUDebugDynamicLibrary initWithDynamicLibrary:device:]


MTLDebugAccelerationStructure : MTLToolsAccelerationStructure <MTLDebugResourcePurgeable>
  // instance methods
  -[MTLDebugAccelerationStructure setPurgeableState:]
  -[MTLDebugAccelerationStructure dealloc]
  -[MTLDebugAccelerationStructure buffer]
  -[MTLDebugAccelerationStructure initWithBaseObject:parent:]
  -[MTLDebugAccelerationStructure lockPurgeableState]
  -[MTLDebugAccelerationStructure unlockPurgeableState]
  -[MTLDebugAccelerationStructure purgeableStateValidForRendering]


MTLGPUDebugTexture : MTLToolsTexture <MTLGPUDebugResource>
 @property  <MTLTextureSPI> *baseObject
 @property  unsigned long gpuIdentifier
 @property  unsigned long length
 @property  unsigned long gpuAddress
 @property  int responsibleProcess
 @property  unsigned long allocationID
 @property  unsigned long protectionOptions
 @property  unsigned long unfilteredResourceOptions
 @property  NSString *label
 @property  <MTLDevice> *device
 @property  unsigned long cpuCacheMode
 @property  unsigned long storageMode
 @property  unsigned long hazardTrackingMode
 @property  unsigned long resourceOptions
 @property  <MTLHeap> *heap
 @property  unsigned long heapOffset
 @property  unsigned long allocatedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MTLGPUDebugTexture newCompressedTextureViewWithPixelFormat:textureType:level:slice:]
  -[MTLGPUDebugTexture length]
  -[MTLGPUDebugTexture newTextureViewWithPixelFormat:]
  -[MTLGPUDebugTexture newTextureViewWithPixelFormat:textureType:levels:slices:resourceIndex:]
  -[MTLGPUDebugTexture newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:resourceIndex:]
  -[MTLGPUDebugTexture newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:]
  -[MTLGPUDebugTexture newTextureViewWithPixelFormat:resourceIndex:]
  -[MTLGPUDebugTexture newTextureViewWithPixelFormat:textureType:levels:slices:]
  -[MTLGPUDebugTexture baseObject]
  -[MTLGPUDebugTexture handleForOffset:]
  -[MTLGPUDebugTexture initWithTextureView:parentBuffer:heap:device:]
  -[MTLGPUDebugTexture initWithTexture:heap:device:]
  -[MTLGPUDebugTexture gpuIdentifier]
  -[MTLGPUDebugTexture initWithTextureView:parentTexture:heap:device:]


MTLCountersBlitCommandEncoder : MTLToolsBlitCommandEncoder
  // instance methods
  -[MTLCountersBlitCommandEncoder pushDebugGroup:]
  -[MTLCountersBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:]
  -[MTLCountersBlitCommandEncoder optimizeContentsForGPUAccess:]
  -[MTLCountersBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:]
  -[MTLCountersBlitCommandEncoder copyFromTexture:toTexture:]
  -[MTLCountersBlitCommandEncoder fillBuffer:range:pattern4:]
  -[MTLCountersBlitCommandEncoder optimizeContentsForCPUAccess:]
  -[MTLCountersBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:]
  -[MTLCountersBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:]
  -[MTLCountersBlitCommandEncoder fillTexture:level:slice:region:color:pixelFormat:]
  -[MTLCountersBlitCommandEncoder optimizeContentsForCPUAccess:slice:level:]
  -[MTLCountersBlitCommandEncoder updateFence:]
  -[MTLCountersBlitCommandEncoder copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:]
  -[MTLCountersBlitCommandEncoder fillBuffer:range:value:]
  -[MTLCountersBlitCommandEncoder fillTexture:level:slice:region:bytes:length:]
  -[MTLCountersBlitCommandEncoder fillTexture:level:slice:region:color:]
  -[MTLCountersBlitCommandEncoder insertDebugSignpost:]
  -[MTLCountersBlitCommandEncoder generateMipmapsForTexture:]
  -[MTLCountersBlitCommandEncoder popDebugGroup]
  -[MTLCountersBlitCommandEncoder endEncoding]
  -[MTLCountersBlitCommandEncoder dealloc]
  -[MTLCountersBlitCommandEncoder setLabel:]
  -[MTLCountersBlitCommandEncoder waitForFence:]
  -[MTLCountersBlitCommandEncoder optimizeContentsForGPUAccess:slice:level:]
  -[MTLCountersBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]
  -[MTLCountersBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:]
  -[MTLCountersBlitCommandEncoder copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:]
  -[MTLCountersBlitCommandEncoder initWithBlitCommandEncoder:commandBuffer:]


01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLAccelerationStructureBoundingBoxGeometryDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLAccelerationStructureMotionBoundingBoxGeometryDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLAccelerationStructureMotionTriangleGeometryDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLAccelerationStructureTriangleGeometryDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLArgumentDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLArrayType 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLBinaryArchiveDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLBlitPassDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLBufferRelocation 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLCommandQueueDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLCompileOptions 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLComputePassDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLComputePipelineDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLComputePipelineReflection 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLConstantRelocation 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLCounterSampleBufferDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLDepthStencilDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLFunctionConstantValues 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLFunctionDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLGenericBVHBuffersSPI 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLIndirectConstantArgument 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLInstanceAccelerationStructureDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLIntersectionFunctionDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLIntersectionFunctionTableDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLLinkedFunctions 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLPrimitiveAccelerationStructureDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLRasterizationRateLayerDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPassDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPipelineDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPipelineFunctionsDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPipelineReflection 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLResourceStatePassDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLSamplerDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLStructMember 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLStructType 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLTileRenderPipelineDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLVisibleFunctionTableDescriptor 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: _MTLFunctionLogDebugLocation 
