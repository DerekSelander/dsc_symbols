|| __DATA.__common _gAppleCareLogArray
|| __DATA.__common _gEnableTimeToDryPopup
|| __DATA.__common _gLdcmBehaviorPlist
|| __DATA.__common _gPrevLog
|| __DATA.__common _stats
|| __DATA.__data _enableVoltageEventMonitorModeAggD
|| __DATA.__data _enableVoltageEventMonitorModeAppleCareLogging
|| __DATA.__data _enableVoltageEventMonitorModeConsole
|| __DATA.__data _gEnableTapToRadarPopup
|| __DATA.__data _gGiveUserRadarOption
|| __DATA.__data _kIOAMLDCMBehaviorDryThresholdDictionarykey
|| __DATA.__data _kIOAMLDCMBehaviorPlistBehaviorBitmaskKey
|| __DATA.__data _kIOAMLDCMBehaviorPlistConsecutiveDetectedInterval
|| __DATA.__data _kIOAMLDCMBehaviorPlistConsecutiveDetectedThresh
|| __DATA.__data _kIOAMLDCMBehaviorPlistConsecutiveNotDetectedInterval
|| __DATA.__data _kIOAMLDCMBehaviorPlistConsecutiveNotDetectedThresh
|| __DATA.__data _kIOAMLDCMBehaviorPlistDeviceGen1SubKey
|| __DATA.__data _kIOAMLDCMBehaviorPlistFdpBitmaskKey
|| __DATA.__data _kIOAMLDCMBehaviorPlistLegacySubKey
|| __DATA.__data _kIOAMLDCMBehaviorPlistVersionKey
|| __DATA.__data _kIOAMLDCMBehaviorThresholdDefaultKey
|| __DATA.__data _kIOAMLDCMBehaviorWetThresholdDictionaryKey
|| __DATA.__objc_data _OBJC_CLASS_$_HalogenAudio
|| __DATA.__objc_data _OBJC_CLASS_$_HalogenCalcTypeC
|| __DATA.__objc_data _OBJC_CLASS_$_HalogenLdcmCalc
|| __DATA.__objc_data _OBJC_CLASS_$_HalogenMeasurement
|| __DATA.__objc_data _OBJC_CLASS_$_HalogenTypeC
|| __DATA.__objc_data _OBJC_CLASS_$_HalogenWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_IOAccessoryLDCMPortManagerTypeC
|| __DATA.__objc_data _OBJC_CLASS_$_IOAccessoryLdcmHealthClass
|| __DATA.__objc_data _OBJC_METACLASS_$_HalogenAudio
|| __DATA.__objc_data _OBJC_METACLASS_$_HalogenCalcTypeC
|| __DATA.__objc_data _OBJC_METACLASS_$_HalogenLdcmCalc
|| __DATA.__objc_data _OBJC_METACLASS_$_HalogenMeasurement
|| __DATA.__objc_data _OBJC_METACLASS_$_HalogenTypeC
|| __DATA.__objc_data _OBJC_METACLASS_$_HalogenWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_IOAccessoryLDCMPortManagerTypeC
|| __DATA.__objc_data _OBJC_METACLASS_$_IOAccessoryLdcmHealthClass
|| __DATA_DIRTY.__common _gAccyHealthDictionary
|| __DATA_DIRTY.__common _gAssetContext
|| __DATA_DIRTY.__common _gBatteryStatusNotificationContext
|| __DATA_DIRTY.__common _gDigitalIDCountWetDict
|| __DATA_DIRTY.__common _gDigitalIDTimeWetDict
|| __DATA_DIRTY.__common _gDockState
|| __DATA_DIRTY.__common _gHalogenMeasurements
|| __DATA_DIRTY.__common _gIOAMLogFilepath
|| __DATA_DIRTY.__common _gIOAMLogLock
|| __DATA_DIRTY.__common _gIOiter
|| __DATA_DIRTY.__common _gIOnotify
|| __DATA_DIRTY.__common _gIsInternalBuild
|| __DATA_DIRTY.__common _gLdcmParams
|| __DATA_DIRTY.__common _gLiquidNotificationContext
|| __DATA_DIRTY.__common _gUserLdcmParams
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IOAccessoryUserLdcmParamClass
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IOAccessoryUserLdcmParamClass
|| __TEXT.__const _DRY_TRANSITION_CAPACITANCE_THRESHOLD_NF
|| __TEXT.__const _IOAccessoryManagerVersionNumber
|| __TEXT.__const _IOAccessoryManagerVersionString
|| __TEXT.__const _WET_TRANSITION_CAPACITANCE_THRESHOLD_NF
|| __TEXT.__const _kAccyHealthDictionaryMaxCount
|| __TEXT.__const _kAggDKnownDigitalID
|| __TEXT.__const _kAggDUnknownDigitalID
|| __TEXT.__const _kLdcmMaxEventHistoryCount
|| __TEXT.__const _kMaximumErrorAssetQueryExtraSec
|| __TEXT.__const _kMaximumRegularAssetQueryExtraSec
|| __TEXT.__const _kMinimumErrorAssetQueryIntervalSec
|| __TEXT.__const _kMinimumRegularAssetQueryIntervalSec
|| __TEXT.__const _kSupportedLdcmBehaviorPlistVersion
|| __TEXT.__text _IOAccessoryRequestResetLifetimeDuration
|| __TEXT.__text _IOAccessoryResetLifetimeDuration
|| __TEXT.__text _IOAccessoryStartVoltageEventMonitor
|| __TEXT.__text _IOAccessoryVoltageEventMonitorMode
|| __TEXT.__text _absoluteToNanoseconds
|| __TEXT.__text _compare
|| __TEXT.__text _isDeviceTypeC
__ Accelerate: _vDSP_create_fftsetupD
__ Accelerate: _vDSP_destroy_fftsetupD
__ Accelerate: _vDSP_fft_zripD
__ AudioToolbox: _AudioComponentFindNext
__ AudioToolbox: _AudioComponentInstanceDispose
__ AudioToolbox: _AudioComponentInstanceNew
__ AudioToolbox: _AudioOutputUnitStart
__ AudioToolbox: _AudioOutputUnitStop
__ AudioToolbox: _AudioUnitInitialize
__ AudioToolbox: _AudioUnitRender
__ AudioToolbox: _AudioUnitSetProperty
__ AudioToolbox: _AudioUnitUninitialize
__ AudioToolbox: _ExtAudioFileCreateWithURL
__ AudioToolbox: _ExtAudioFileDispose
__ AudioToolbox: _ExtAudioFileWrite
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayContainsValue
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFCalendarCreateWithIdentifier
__ CoreFoundation: _CFCalendarDecomposeAbsoluteTime
__ CoreFoundation: _CFCalendarSetTimeZone
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFTimeZoneCopySystem
__ CoreFoundation: _CFURLCreateFromFileSystemRepresentation
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _CFUserNotificationDisplayAlert
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFGregorianCalendar
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationLocalizationURLKey
__ CoreFoundation: _kCFUserNotificationOtherButtonTitleKey
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ Foundation: _NSFileCreationDate
__ Foundation: _NSFileHandleOperationException
__ Foundation: _NSFileSize
__ Foundation: _NSLog
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCondition
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSExtensionItem
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPipe
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSTask
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ IOKit: _IOAllowPowerChange
__ IOKit: _IODeregisterForSystemPower
__ IOKit: _IOIteratorNext
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortGetRunLoopSource
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IOObjectRelease
__ IOKit: _IOPMAssertionCreateWithProperties
__ IOKit: _IOPMAssertionRelease
__ IOKit: _IORegisterForSystemPower
__ IOKit: _IORegistryEntryCreateCFProperties
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IORegistryEntryFromPath
__ IOKit: _IORegistryEntrySetCFProperty
__ IOKit: _IOServiceAddInterestNotification
__ IOKit: _IOServiceAddMatchingNotification
__ IOKit: _IOServiceClose
__ IOKit: _IOServiceGetMatchingServices
__ IOKit: _IOServiceMatching
__ IOKit: _IOServiceOpen
__ IOKit: _kIOMasterPortDefault
__ MobileAsset: _OBJC_CLASS_$_ASAssetQuery
__ SpringBoardServices: _SBUserNotificationDismissOnLock
__ SpringBoardServices: _SBUserNotificationDontDismissOnUnlock
__ SpringBoardServices: _SBUserNotificationExtensionIdentifierKey
__ SpringBoardServices: _SBUserNotificationExtensionItemsKey
__ SpringBoardServices: _SBUserNotificationHeaderImageAssetCatalogImageKey
__ SpringBoardServices: _SBUserNotificationHeaderImageAssetCatalogPathKey
__ SpringBoardServices: _SBUserNotificationIconDoNotMaskKey
__ SpringBoardServices: _SBUserNotificationIconImageAssetCatalogImageKey
__ SpringBoardServices: _SBUserNotificationIconImageAssetCatalogPathKey
__ SpringBoardServices: _SBUserNotificationLockScreenAlertHeaderKey
__ SpringBoardServices: _SBUserNotificationLockScreenAlertMessageKey
__ libIOAccessoryManager.dylib: _IOAccessoryManagerConfigureGoldbondMode
__ libIOAccessoryManager.dylib: _IOAccessoryManagerCopyDeviceInfo
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetAccessoryID
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetDigitalID
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetFreePinMask
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetLdcmParams
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetPrimaryPort
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetServiceWithPrimaryPort
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetType
__ libIOAccessoryManager.dylib: _IOAccessoryManagerLDCMEnableMitigations
__ libIOAccessoryManager.dylib: _IOAccessoryManagerLDCMGetMeasurementStatus
__ libIOAccessoryManager.dylib: _IOAccessoryManagerLDCMSetLiquidDetected
__ libIOAccessoryManager.dylib: _IOAccessoryManagerRequestLdcmMeasurement
__ libIOAccessoryManager.dylib: _IOAccessoryManagerSelectEisPin
__ libIOAccessoryManager.dylib: _IOAccessoryManagerSetLDCM
__ libIOAccessoryManager.dylib: _IOAccessoryManagerSetVoltageDetected
__ libIOAccessoryManager.dylib: _OBJC_CLASS_$_BaseResourceArbiterClient
__ libIOAccessoryManager.dylib: _OBJC_CLASS_$_ResourceArbiterClient
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _cabs
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _carg
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _qsort
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: _usleep
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_setProperty_nonatomic
HalogenTypeC : NSObject <HalogenAudioDelegate>
 @property  int nInputChannels
 @property  int nOutputChannels
 @property  int sampleRate
 @property  int bitDepth
 @property  int inputFrameSizeInBytes
 @property  int outputFrameSizeInBytes
 @property  ^{OpaqueAudioComponentInstance=} audioComponentInst
 @property  HalogenAudio *halogenAudioUnit
 @property  int warmupTimeInMs
 @property  int AceSettlingTimeInMs
 @property  int nMeasurementSamples
 @property  int nWarmupSamples
 @property  int nAceSettlingSamples
 @property  int nTotalSamples
 @property  int nPaddingSamples
 @property  double signalFreq
 @property  int initalPhaseInDegrees
 @property  unsigned short maxOutputAmplitude
 @property  unsigned short signalOffset
 @property  NSMutableData *pcmInputData
 @property  int pcmInputDataMaxSzInBytes
 @property  int pcmInputDataIndexInBytes
 @property  int pcmInputDataSampleCnt
 @property  BOOL isCalibrationDone
 @property  BOOL isMeasurementDone
 @property  BOOL selfTestCapable
 @property  NSMutableData *pcmOutputData
 @property  int pcmOutputDataMaxSzInBytes
 @property  int pcmOutputDataIndexInBytes
 @property  NSMutableData *currentData
 @property  NSMutableData *voltageData
 @property  int audioTimeoutInSec
 @property  NSCondition *audioTimeoutCond
 @property  int measurementSampleOffsetInFrames
 @property  HalogenCalcTypeC *halogenCalcTypeC
 @property  {?=iiiddddddddddddddddddddd} measurementInfoDefault
 @property  unsigned int service
 @property  unsigned int connect
 @property  BOOL measureSBU
 @property  int pinToMeasure
 @property  int ldcmState
 @property  BOOL isInternalBuild
 @property  NSMutableString *measurementInfoOutputString
 @property  NSMutableString *measurementInfoAcchalogenOutputString
 @property  NSObject<OS_dispatch_queue> *systemPowerQueue
 @property  unsigned int systemPowerPort
 @property  ^{IONotificationPort=} systemPowerNotifyPortRef
 @property  unsigned int systemPowerIterator
 @property  int powerState
 @property  NSCondition *powerStateCond
 @property  int precalibrationSampleOffsetInFrames
 @property  double precalVoltageSignalLevel
 @property  double precalVoltageNoiseLevel
 @property  double precalVoltageSNR
 @property  double precalCurrentSignalLevel
 @property  double precalCurrentNoiseLevel
 @property  double precalCurrentSNR
 @property  int calibrationSampleOffsetInFrames
 @property  double voltageGainCorrection
 @property  double currentGainCorrection
 @property  double currentPhaseCompensation
 @property  double calVoltageSignalLevel
 @property  double calVoltageNoiseLevel
 @property  double calVoltageSNR
 @property  double calCurrentSignalLevel
 @property  double calCurrentNoiseLevel
 @property  double calCurrentSNR
 @property  double calVoltageAmplitude
 @property  double calCurrentAmplitude
 @property  double goertzelImpedance
 @property  double goertzelPhase
 @property  double compensatedImpedance
 @property  double compensatedPhase
 @property  double resistanceInOhms
 @property  double capacitanceInNanoF
 @property  double clippingScore
 @property  double measurementVoltageSignalLevel
 @property  double measurementVoltageNoiseLevel
 @property  double measurementVoltageSNR
 @property  double measurementCurrentSignalLevel
 @property  double measurementCurrentNoiseLevel
 @property  double measurementCurrentSNR
 @property  double measurementCondetSNR
 @property  double measurementVoltageAmplitude
 @property  double measurementCurrentAmplitude
 @property  double measurementVoltagePhase
 @property  double measurementCurrentPhase
 @property  double measurementLoadImpedanceMagnitude
 @property  double measurementLoadImpedancePhase
 @property  BOOL wetTooLong
 @property  int halogenResult
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HalogenTypeC connect]
  -[HalogenTypeC setPowerState:]
  -[HalogenTypeC sampleRate]
  -[HalogenTypeC setSystemPowerPort:]
  -[HalogenTypeC setSystemPowerQueue:]
  -[HalogenTypeC systemPowerPort]
  -[HalogenTypeC systemPowerQueue]
  -[HalogenTypeC systemPowerIterator]
  -[HalogenTypeC isInternalBuild]
  -[HalogenTypeC setSystemPowerIterator:]
  -[HalogenTypeC currentData]
  -[HalogenTypeC powerState]
  -[HalogenTypeC setSystemPowerNotifyPortRef:]
  -[HalogenTypeC setBitDepth:]
  -[HalogenTypeC service]
  -[HalogenTypeC bitDepth]
  -[HalogenTypeC dealloc]
  -[HalogenTypeC systemPowerNotifyPortRef]
  -[HalogenTypeC setSampleRate:]
  -[HalogenTypeC setIsInternalBuild:]
  -[HalogenTypeC setService:]
  -[HalogenTypeC setConnect:]
  -[HalogenTypeC _freeBuffers]
  -[HalogenTypeC supportsSelfTest]
  -[HalogenTypeC _allocBuffers]
  -[HalogenTypeC _connectToAccessoryManager:]
  -[HalogenTypeC _createSleepWakeNotifier]
  -[HalogenTypeC _generateSineWave]
  -[HalogenTypeC _destroySleepWakeNotifier]
  -[HalogenTypeC _disconnectFromAccessoryManager]
  -[HalogenTypeC setPowerStateCond:]
  -[HalogenTypeC powerStateCond]
  -[HalogenTypeC maxOutputAmplitude]
  -[HalogenTypeC signalOffset]
  -[HalogenTypeC setPcmInputDataIndexInBytes:]
  -[HalogenTypeC setPcmInputDataSampleCnt:]
  -[HalogenTypeC _runHPMTool:]
  -[HalogenTypeC setPcmOutputDataIndexInBytes:]
  -[HalogenTypeC _resetCalcValues]
  -[HalogenTypeC _doLDCMMeasurement:isReceptacleEmpty:isReceptacleWet:withWetTransitionThreshold:withDryTransitionThreshold:measurementType:]
  -[HalogenTypeC _storeMeasurementData:measurementType:measurementInfo:halogenResult:]
  -[HalogenTypeC _buildMeasurementOutputString:]
  -[HalogenTypeC _doLDCMCalculation:isReceptacleWet:withWetTransitionThreshold:withDryTransitionThreshold:pinParasitics:measurementType:]
  -[HalogenTypeC calVoltageSNR]
  -[HalogenTypeC calCurrentSNR]
  -[HalogenTypeC calVoltageAmplitude]
  -[HalogenTypeC calCurrentAmplitude]
  -[HalogenTypeC voltageGainCorrection]
  -[HalogenTypeC currentGainCorrection]
  -[HalogenTypeC currentPhaseCompensation]
  -[HalogenTypeC _writeCalResults:]
  -[HalogenTypeC goertzelImpedance]
  -[HalogenTypeC goertzelPhase]
  -[HalogenTypeC compensatedImpedance]
  -[HalogenTypeC compensatedPhase]
  -[HalogenTypeC resistanceInOhms]
  -[HalogenTypeC capacitanceInNanoF]
  -[HalogenTypeC measurementVoltageSignalLevel]
  -[HalogenTypeC measurementVoltageNoiseLevel]
  -[HalogenTypeC measurementVoltageSNR]
  -[HalogenTypeC measurementCurrentSignalLevel]
  -[HalogenTypeC measurementCurrentNoiseLevel]
  -[HalogenTypeC measurementCurrentSNR]
  -[HalogenTypeC measurementVoltageAmplitude]
  -[HalogenTypeC measurementCurrentAmplitude]
  -[HalogenTypeC measurementVoltagePhase]
  -[HalogenTypeC measurementCurrentPhase]
  -[HalogenTypeC setWetTooLong:]
  -[HalogenTypeC _getHalogenMeasurementTypeString:]
  -[HalogenTypeC _getLDCMPinString:]
  -[HalogenTypeC getHalogenResultString:]
  -[HalogenTypeC _buildVerboseMeasurementOutputString:]
  -[HalogenTypeC measurementLoadImpedanceMagnitude]
  -[HalogenTypeC measurementLoadImpedancePhase]
  -[HalogenTypeC recordCallBackFunc:AudioTimeStamp:busNum:numFrames:AudioBufferList:]
  -[HalogenTypeC playbackCallBackFunc:AudioTimeStamp:busNum:numFrames:AudioBufferList:]
  -[HalogenTypeC initWithParams:onPort:]
  -[HalogenTypeC saveAsWav:]
  -[HalogenTypeC doLDCMMeasurement:isCalibrationNeeded:isReceptacleEmpty:isReceptacleWet:withWetTransitionThreshold:withDryTransitionThreshold:]
  -[HalogenTypeC setMitigations:]
  -[HalogenTypeC setLiquidDetected:]
  -[HalogenTypeC _readCalibrationParameters:]
  -[HalogenTypeC getVerboseMeasurementOutputString]
  -[HalogenTypeC getMeasurementOutputString]
  -[HalogenTypeC getMeasurementInfo]
  -[HalogenTypeC isHWSelfTestCapable]
  -[HalogenTypeC precalibrationSampleOffsetInFrames]
  -[HalogenTypeC precalVoltageSignalLevel]
  -[HalogenTypeC precalVoltageNoiseLevel]
  -[HalogenTypeC precalVoltageSNR]
  -[HalogenTypeC precalCurrentSignalLevel]
  -[HalogenTypeC precalCurrentNoiseLevel]
  -[HalogenTypeC precalCurrentSNR]
  -[HalogenTypeC calibrationSampleOffsetInFrames]
  -[HalogenTypeC calVoltageSignalLevel]
  -[HalogenTypeC calVoltageNoiseLevel]
  -[HalogenTypeC calCurrentSignalLevel]
  -[HalogenTypeC calCurrentNoiseLevel]
  -[HalogenTypeC measurementSampleOffsetInFrames]
  -[HalogenTypeC setMeasurementSampleOffsetInFrames:]
  -[HalogenTypeC clippingScore]
  -[HalogenTypeC measurementCondetSNR]
  -[HalogenTypeC wetTooLong]
  -[HalogenTypeC halogenResult]
  -[HalogenTypeC nInputChannels]
  -[HalogenTypeC setNInputChannels:]
  -[HalogenTypeC nOutputChannels]
  -[HalogenTypeC setNOutputChannels:]
  -[HalogenTypeC inputFrameSizeInBytes]
  -[HalogenTypeC setInputFrameSizeInBytes:]
  -[HalogenTypeC outputFrameSizeInBytes]
  -[HalogenTypeC setOutputFrameSizeInBytes:]
  -[HalogenTypeC audioComponentInst]
  -[HalogenTypeC setAudioComponentInst:]
  -[HalogenTypeC halogenAudioUnit]
  -[HalogenTypeC setHalogenAudioUnit:]
  -[HalogenTypeC warmupTimeInMs]
  -[HalogenTypeC setWarmupTimeInMs:]
  -[HalogenTypeC AceSettlingTimeInMs]
  -[HalogenTypeC setAceSettlingTimeInMs:]
  -[HalogenTypeC nMeasurementSamples]
  -[HalogenTypeC setNMeasurementSamples:]
  -[HalogenTypeC nWarmupSamples]
  -[HalogenTypeC setNWarmupSamples:]
  -[HalogenTypeC nAceSettlingSamples]
  -[HalogenTypeC setNAceSettlingSamples:]
  -[HalogenTypeC nTotalSamples]
  -[HalogenTypeC setNTotalSamples:]
  -[HalogenTypeC nPaddingSamples]
  -[HalogenTypeC setNPaddingSamples:]
  -[HalogenTypeC signalFreq]
  -[HalogenTypeC setSignalFreq:]
  -[HalogenTypeC initalPhaseInDegrees]
  -[HalogenTypeC setInitalPhaseInDegrees:]
  -[HalogenTypeC pcmInputData]
  -[HalogenTypeC setPcmInputData:]
  -[HalogenTypeC pcmInputDataMaxSzInBytes]
  -[HalogenTypeC setPcmInputDataMaxSzInBytes:]
  -[HalogenTypeC pcmInputDataIndexInBytes]
  -[HalogenTypeC pcmInputDataSampleCnt]
  -[HalogenTypeC isCalibrationDone]
  -[HalogenTypeC setIsCalibrationDone:]
  -[HalogenTypeC isMeasurementDone]
  -[HalogenTypeC setIsMeasurementDone:]
  -[HalogenTypeC selfTestCapable]
  -[HalogenTypeC setSelfTestCapable:]
  -[HalogenTypeC pcmOutputData]
  -[HalogenTypeC setPcmOutputData:]
  -[HalogenTypeC pcmOutputDataMaxSzInBytes]
  -[HalogenTypeC setPcmOutputDataMaxSzInBytes:]
  -[HalogenTypeC pcmOutputDataIndexInBytes]
  -[HalogenTypeC setCurrentData:]
  -[HalogenTypeC voltageData]
  -[HalogenTypeC setVoltageData:]
  -[HalogenTypeC audioTimeoutInSec]
  -[HalogenTypeC setAudioTimeoutInSec:]
  -[HalogenTypeC audioTimeoutCond]
  -[HalogenTypeC setAudioTimeoutCond:]
  -[HalogenTypeC halogenCalcTypeC]
  -[HalogenTypeC setHalogenCalcTypeC:]
  -[HalogenTypeC measurementInfoDefault]
  -[HalogenTypeC setMeasurementInfoDefault:]
  -[HalogenTypeC measureSBU]
  -[HalogenTypeC setMeasureSBU:]
  -[HalogenTypeC pinToMeasure]
  -[HalogenTypeC setPinToMeasure:]
  -[HalogenTypeC ldcmState]
  -[HalogenTypeC setLdcmState:]
  -[HalogenTypeC measurementInfoOutputString]
  -[HalogenTypeC setMeasurementInfoOutputString:]
  -[HalogenTypeC measurementInfoAcchalogenOutputString]
  -[HalogenTypeC setMeasurementInfoAcchalogenOutputString:]


HalogenAudio : NSObject
 @property  ^{OpaqueAudioComponentInstance=} audioComponentInst
 @property  int nInputChannels
 @property  int nOutputChannels
 @property  int sampleRate
 @property  int bitDepth
 @property  int inputFrameSizeInBytes
 @property  int outputFrameSizeInBytes
 @property  <HalogenAudioDelegate> *halogenUnitDelegate

  // instance methods
  -[HalogenAudio sampleRate]
  -[HalogenAudio setBitDepth:]
  -[HalogenAudio bitDepth]
  -[HalogenAudio dealloc]
  -[HalogenAudio setSampleRate:]
  -[HalogenAudio initAudioWithParameters:nInputChannels:nOutputChannels:sampleRate:bitDepth:inputFrameSizeInBytes:outputFrameSizeInBytes:]
  -[HalogenAudio getAudioComponentInstance]
  -[HalogenAudio startAudioUnit]
  -[HalogenAudio stopAudioUnit]
  -[HalogenAudio releaseAudioUnitInstance]
  -[HalogenAudio nInputChannels]
  -[HalogenAudio setNInputChannels:]
  -[HalogenAudio nOutputChannels]
  -[HalogenAudio setNOutputChannels:]
  -[HalogenAudio inputFrameSizeInBytes]
  -[HalogenAudio setInputFrameSizeInBytes:]
  -[HalogenAudio outputFrameSizeInBytes]
  -[HalogenAudio setOutputFrameSizeInBytes:]
  -[HalogenAudio audioComponentInst]
  -[HalogenAudio setAudioComponentInst:]
  -[HalogenAudio setHalogenUnitDelegate:]
  -[HalogenAudio _deinitAudioInstance]
  -[HalogenAudio halogenUnitDelegate]


IOAccessoryLdcmHealthClass : NSObject <NSSecureCoding>
 @property  unsigned int version
 @property  BOOL isHealthy
 @property  unsigned long leakagePassedCount
 @property  unsigned long dryCount
 @property  unsigned long wetCount
 @property  unsigned long overVoltageCount
 @property  unsigned long outOfProfileCount
 @property  unsigned long lastSeenTimestamp
 @property  unsigned long rsvd0
 @property  unsigned long rsvd1
 @property  unsigned long rsvd2
 @property  unsigned long rsvd3
 @property  unsigned long overVoltageTimestamp

  // class methods
  +[IOAccessoryLdcmHealthClass supportsSecureCoding]

  // instance methods
  -[IOAccessoryLdcmHealthClass initWithCoder:]
  -[IOAccessoryLdcmHealthClass rsvd0]
  -[IOAccessoryLdcmHealthClass rsvd1]
  -[IOAccessoryLdcmHealthClass rsvd2]
  -[IOAccessoryLdcmHealthClass rsvd3]
  -[IOAccessoryLdcmHealthClass init]
  -[IOAccessoryLdcmHealthClass setVersion:]
  -[IOAccessoryLdcmHealthClass version]
  -[IOAccessoryLdcmHealthClass setLastSeenTimestamp:]
  -[IOAccessoryLdcmHealthClass lastSeenTimestamp]
  -[IOAccessoryLdcmHealthClass encodeWithCoder:]
  -[IOAccessoryLdcmHealthClass isHealthy]
  -[IOAccessoryLdcmHealthClass leakagePassedCount]
  -[IOAccessoryLdcmHealthClass dryCount]
  -[IOAccessoryLdcmHealthClass wetCount]
  -[IOAccessoryLdcmHealthClass overVoltageCount]
  -[IOAccessoryLdcmHealthClass outOfProfileCount]
  -[IOAccessoryLdcmHealthClass setIsHealthy:]
  -[IOAccessoryLdcmHealthClass setLeakagePassedCount:]
  -[IOAccessoryLdcmHealthClass setDryCount:]
  -[IOAccessoryLdcmHealthClass setWetCount:]
  -[IOAccessoryLdcmHealthClass setOverVoltageCount:]
  -[IOAccessoryLdcmHealthClass setOutOfProfileCount:]
  -[IOAccessoryLdcmHealthClass setRsvd0:]
  -[IOAccessoryLdcmHealthClass setRsvd1:]
  -[IOAccessoryLdcmHealthClass setRsvd2:]
  -[IOAccessoryLdcmHealthClass setRsvd3:]
  -[IOAccessoryLdcmHealthClass overVoltageTimestamp]
  -[IOAccessoryLdcmHealthClass setOverVoltageTimestamp:]


IOAccessoryUserLdcmParamClass : NSObject
 @property  unsigned long minVhiDurationSec
 @property  unsigned long maxVhiDurationSec
 @property  unsigned long maxUpFluctuationMv
 @property  int userBehaviorMask
 @property  int fdpBehaviorMask
 @property  unsigned long numEisHalogenSamples
 @property  unsigned long wetPollingIntervalSec
 @property  unsigned long dryPollingIntervalSec
 @property  unsigned long ldcmArbiterRetrySec
 @property  unsigned long ldcmStartMeasurementsDelayMs
 @property  unsigned long ldcmStartMeasurementsRetryMs
 @property  unsigned long minDryReadings
 @property  unsigned long enableHalogenSnrTtr
 @property  unsigned long enableHalogenMitigationsAndUI
 @property  double wetTransitionCapacitanceThreshold
 @property  double dryTransitionCapacitanceThreshold

  // instance methods
  -[IOAccessoryUserLdcmParamClass setWetTransitionCapacitanceThreshold:]
  -[IOAccessoryUserLdcmParamClass setMaxUpFluctuationMv:]
  -[IOAccessoryUserLdcmParamClass numEisHalogenSamples]
  -[IOAccessoryUserLdcmParamClass setLdcmStartMeasurementsRetryMs:]
  -[IOAccessoryUserLdcmParamClass setMinVhiDurationSec:]
  -[IOAccessoryUserLdcmParamClass enableHalogenSnrTtr]
  -[IOAccessoryUserLdcmParamClass dryPollingIntervalSec]
  -[IOAccessoryUserLdcmParamClass ldcmStartMeasurementsRetryMs]
  -[IOAccessoryUserLdcmParamClass setLdcmArbiterRetrySec:]
  -[IOAccessoryUserLdcmParamClass init]
  -[IOAccessoryUserLdcmParamClass wetTransitionCapacitanceThreshold]
  -[IOAccessoryUserLdcmParamClass setEnableHalogenSnrTtr:]
  -[IOAccessoryUserLdcmParamClass dryTransitionCapacitanceThreshold]
  -[IOAccessoryUserLdcmParamClass fdpBehaviorMask]
  -[IOAccessoryUserLdcmParamClass setWetPollingIntervalSec:]
  -[IOAccessoryUserLdcmParamClass setMaxVhiDurationSec:]
  -[IOAccessoryUserLdcmParamClass setFdpBehaviorMask:]
  -[IOAccessoryUserLdcmParamClass setUserBehaviorMask:]
  -[IOAccessoryUserLdcmParamClass ldcmArbiterRetrySec]
  -[IOAccessoryUserLdcmParamClass maxVhiDurationSec]
  -[IOAccessoryUserLdcmParamClass maxUpFluctuationMv]
  -[IOAccessoryUserLdcmParamClass wetPollingIntervalSec]
  -[IOAccessoryUserLdcmParamClass minDryReadings]
  -[IOAccessoryUserLdcmParamClass setNumEisHalogenSamples:]
  -[IOAccessoryUserLdcmParamClass setEnableHalogenMitigationsAndUI:]
  -[IOAccessoryUserLdcmParamClass minVhiDurationSec]
  -[IOAccessoryUserLdcmParamClass ldcmStartMeasurementsDelayMs]
  -[IOAccessoryUserLdcmParamClass enableHalogenMitigationsAndUI]
  -[IOAccessoryUserLdcmParamClass setMinDryReadings:]
  -[IOAccessoryUserLdcmParamClass setDryTransitionCapacitanceThreshold:]
  -[IOAccessoryUserLdcmParamClass setLdcmStartMeasurementsDelayMs:]
  -[IOAccessoryUserLdcmParamClass userBehaviorMask]
  -[IOAccessoryUserLdcmParamClass setDryPollingIntervalSec:]


HalogenWrapper : NSObject
 @property  NSObject<OS_dispatch_queue> *halogenMeasurementDispatchQueue
 @property  NSObject<OS_dispatch_queue> *halogenTtrDispatchQueue
 @property  NSObject<OS_dispatch_source> *timer
 @property  BOOL attachDelayTimerRunning
 @property  unsigned long wetPollingIntervalNs
 @property  unsigned long dryPollingIntervalNs
 @property  unsigned long ldcmArbiterRetryNs
 @property  unsigned long ldcmStartMeasurementsDelayNs
 @property  unsigned long ldcmStartMeasurementsRetryNs
 @property  unsigned long minDryReadings
 @property  unsigned long dryCnt
 @property  unsigned long firstDryTimestamp
 @property  BOOL isWet
 @property  BOOL wasTapToRadarShown
 @property  BOOL isTapToRadarPending
 @property  BOOL isReceptacleEmpty
 @property  unsigned long wetDryTransitionTimestamp
 @property  BOOL isTimestampValid
 @property  NSCondition *cond
 @property  BOOL isMeasurementEnabled
 @property  BOOL isMeasurementActive
 @property  HalogenMeasurement *halogenMeasurement
 @property  unsigned int service
 @property  int portID
 @property  NSData *eventBasedPDigitalID
 @property  unsigned long eventBasedDigitalID
 @property  int eventBasedOrientation
 @property  NSData *connectedAccessoryPDigitalID
 @property  unsigned long connectedAccessoryDigitalID
 @property  int connectedAccessoryOrientation
 @property  int pinID
 @property  BOOL didNotify
 @property  BOOL didConfidentNotify
 @property  BOOL didHighConfidentNotify
 @property  BOOL didWetDuration
 @property  BOOL accessoryConnectedWhileWet
 @property  unsigned long wetAccessoryAttachTimestamp
 @property  BOOL didWetTooLong
 @property  BOOL isHeadsetConnected
 @property  BOOL isDebugAccessoryConnected
 @property  BOOL isBlacklistedAccessoryConnected
 @property  BOOL justDetached
 @property  BOOL justAttachedCase
 @property  BOOL isPowerAssertionHeld
 @property  unsigned int sleepAssertionID

  // instance methods
  -[HalogenWrapper cond]
  -[HalogenWrapper isWet]
  -[HalogenWrapper pinID]
  -[HalogenWrapper init]
  -[HalogenWrapper timer]
  -[HalogenWrapper setTimer:]
  -[HalogenWrapper service]
  -[HalogenWrapper dealloc]
  -[HalogenWrapper minDryReadings]
  -[HalogenWrapper dryCnt]
  -[HalogenWrapper portID]
  -[HalogenWrapper setService:]
  -[HalogenWrapper setMinDryReadings:]
  -[HalogenWrapper halogenMeasurementDispatchQueue]
  -[HalogenWrapper setHalogenMeasurementDispatchQueue:]
  -[HalogenWrapper halogenTtrDispatchQueue]
  -[HalogenWrapper setHalogenTtrDispatchQueue:]
  -[HalogenWrapper attachDelayTimerRunning]
  -[HalogenWrapper setAttachDelayTimerRunning:]
  -[HalogenWrapper wetPollingIntervalNs]
  -[HalogenWrapper setWetPollingIntervalNs:]
  -[HalogenWrapper dryPollingIntervalNs]
  -[HalogenWrapper setDryPollingIntervalNs:]
  -[HalogenWrapper ldcmArbiterRetryNs]
  -[HalogenWrapper setLdcmArbiterRetryNs:]
  -[HalogenWrapper ldcmStartMeasurementsDelayNs]
  -[HalogenWrapper setLdcmStartMeasurementsDelayNs:]
  -[HalogenWrapper ldcmStartMeasurementsRetryNs]
  -[HalogenWrapper setLdcmStartMeasurementsRetryNs:]
  -[HalogenWrapper setDryCnt:]
  -[HalogenWrapper firstDryTimestamp]
  -[HalogenWrapper setFirstDryTimestamp:]
  -[HalogenWrapper setIsWet:]
  -[HalogenWrapper wasTapToRadarShown]
  -[HalogenWrapper setWasTapToRadarShown:]
  -[HalogenWrapper isTapToRadarPending]
  -[HalogenWrapper setIsTapToRadarPending:]
  -[HalogenWrapper isReceptacleEmpty]
  -[HalogenWrapper setIsReceptacleEmpty:]
  -[HalogenWrapper wetDryTransitionTimestamp]
  -[HalogenWrapper setWetDryTransitionTimestamp:]
  -[HalogenWrapper isTimestampValid]
  -[HalogenWrapper setIsTimestampValid:]
  -[HalogenWrapper setCond:]
  -[HalogenWrapper isMeasurementEnabled]
  -[HalogenWrapper setIsMeasurementEnabled:]
  -[HalogenWrapper isMeasurementActive]
  -[HalogenWrapper setIsMeasurementActive:]
  -[HalogenWrapper halogenMeasurement]
  -[HalogenWrapper setHalogenMeasurement:]
  -[HalogenWrapper setPortID:]
  -[HalogenWrapper eventBasedPDigitalID]
  -[HalogenWrapper setEventBasedPDigitalID:]
  -[HalogenWrapper eventBasedDigitalID]
  -[HalogenWrapper setEventBasedDigitalID:]
  -[HalogenWrapper eventBasedOrientation]
  -[HalogenWrapper setEventBasedOrientation:]
  -[HalogenWrapper connectedAccessoryPDigitalID]
  -[HalogenWrapper setConnectedAccessoryPDigitalID:]
  -[HalogenWrapper connectedAccessoryDigitalID]
  -[HalogenWrapper setConnectedAccessoryDigitalID:]
  -[HalogenWrapper connectedAccessoryOrientation]
  -[HalogenWrapper setConnectedAccessoryOrientation:]
  -[HalogenWrapper setPinID:]
  -[HalogenWrapper didNotify]
  -[HalogenWrapper setDidNotify:]
  -[HalogenWrapper didConfidentNotify]
  -[HalogenWrapper setDidConfidentNotify:]
  -[HalogenWrapper didHighConfidentNotify]
  -[HalogenWrapper setDidHighConfidentNotify:]
  -[HalogenWrapper didWetDuration]
  -[HalogenWrapper setDidWetDuration:]
  -[HalogenWrapper accessoryConnectedWhileWet]
  -[HalogenWrapper setAccessoryConnectedWhileWet:]
  -[HalogenWrapper wetAccessoryAttachTimestamp]
  -[HalogenWrapper setWetAccessoryAttachTimestamp:]
  -[HalogenWrapper didWetTooLong]
  -[HalogenWrapper setDidWetTooLong:]
  -[HalogenWrapper isHeadsetConnected]
  -[HalogenWrapper setIsHeadsetConnected:]
  -[HalogenWrapper isDebugAccessoryConnected]
  -[HalogenWrapper setIsDebugAccessoryConnected:]
  -[HalogenWrapper isBlacklistedAccessoryConnected]
  -[HalogenWrapper setIsBlacklistedAccessoryConnected:]
  -[HalogenWrapper justDetached]
  -[HalogenWrapper setJustDetached:]
  -[HalogenWrapper justAttachedCase]
  -[HalogenWrapper setJustAttachedCase:]
  -[HalogenWrapper isPowerAssertionHeld]
  -[HalogenWrapper setIsPowerAssertionHeld:]
  -[HalogenWrapper sleepAssertionID]
  -[HalogenWrapper setSleepAssertionID:]


IOAccessoryLDCMPortManagerTypeC : NSObject
 @property  BOOL isPowerAssertionHeld
 @property  BOOL isMeasurementActive
 @property  BOOL isWet
 @property  BOOL enableTapToRadarPopup
 @property  BOOL wasTapToRadarShown
 @property  BOOL isInternalBuild
 @property  BOOL isReceptacleEmpty
 @property  BOOL newAccArrived
 @property  BOOL userNotified
 @property  BOOL measureSBU
 @property  BOOL wetTooLongRecorded
 @property  BOOL enableTTRCooldown
 @property  BOOL mitigationsEnabled
 @property  BOOL mitigationsOverrideEnabled
 @property  BOOL fakeWetMeasurements
 @property  BOOL measurementsEnabled
 @property  BOOL selfTestFailed
 @property  BOOL refMeasurementFailed
 @property  BOOL sbuBootArgSet
 @property  BOOL skipMitigationsBootArgSet
 @property  BOOL skipTTRBootArgSet
 @property  BOOL didReportDisabledAnalytic
 @property  unsigned int drySinceWetCount
 @property  unsigned int selfTestFailureCount
 @property  unsigned int selfTestPassCount
 @property  unsigned int referenceMeasurementFailureCount
 @property  unsigned int referenceMeasurementPassCount
 @property  unsigned long lastTTRTimeStamp
 @property  unsigned long lastUserNotificationTimeStamp
 @property  ^v FBSOpenApplicationOptionKeyPromptUnlockDevice
 @property  NSObject<OS_dispatch_source> *timerSelfTest
 @property  NSObject<OS_dispatch_source> *timerReferenceMeasurement
 @property  NSMutableDictionary *ldcmErrorCountDict
 @property  NSLock *defaultsRWLock
 @property  unsigned int sleepAssertionID
 @property  NSCondition *condition
 @property  {?=dddd} wetMeasurementInfo
 @property  int analyticsDebugEvent
 @property  {mach_timebase_info=II} timeBase
 @property  NSObject<OS_dispatch_queue> *halogenTypeCTTRDispatchQueue
 @property  int lastMeasurementResult
 @property  int lastMeasurementStatus
 @property  HalogenTypeC *typeC
 @property  NSObject<OS_dispatch_queue> *halogenTypeCDispatchQueue
 @property  NSObject<OS_dispatch_source> *timer
 @property  unsigned long wetPollingIntervalNs
 @property  unsigned long dryPollingIntervalNs
 @property  BOOL isTapToRadarPending

  // instance methods
  -[IOAccessoryLDCMPortManagerTypeC condition]
  -[IOAccessoryLDCMPortManagerTypeC setCondition:]
  -[IOAccessoryLDCMPortManagerTypeC setMeasurementsEnabled:]
  -[IOAccessoryLDCMPortManagerTypeC measurementsEnabled]
  -[IOAccessoryLDCMPortManagerTypeC isWet]
  -[IOAccessoryLDCMPortManagerTypeC typeC]
  -[IOAccessoryLDCMPortManagerTypeC setTimeBase:]
  -[IOAccessoryLDCMPortManagerTypeC isInternalBuild]
  -[IOAccessoryLDCMPortManagerTypeC timer]
  -[IOAccessoryLDCMPortManagerTypeC setTimer:]
  -[IOAccessoryLDCMPortManagerTypeC dealloc]
  -[IOAccessoryLDCMPortManagerTypeC setIsInternalBuild:]
  -[IOAccessoryLDCMPortManagerTypeC measureSBU]
  -[IOAccessoryLDCMPortManagerTypeC setMeasureSBU:]
  -[IOAccessoryLDCMPortManagerTypeC wetPollingIntervalNs]
  -[IOAccessoryLDCMPortManagerTypeC setWetPollingIntervalNs:]
  -[IOAccessoryLDCMPortManagerTypeC dryPollingIntervalNs]
  -[IOAccessoryLDCMPortManagerTypeC setDryPollingIntervalNs:]
  -[IOAccessoryLDCMPortManagerTypeC setIsWet:]
  -[IOAccessoryLDCMPortManagerTypeC wasTapToRadarShown]
  -[IOAccessoryLDCMPortManagerTypeC setWasTapToRadarShown:]
  -[IOAccessoryLDCMPortManagerTypeC isTapToRadarPending]
  -[IOAccessoryLDCMPortManagerTypeC setIsTapToRadarPending:]
  -[IOAccessoryLDCMPortManagerTypeC isReceptacleEmpty]
  -[IOAccessoryLDCMPortManagerTypeC setIsReceptacleEmpty:]
  -[IOAccessoryLDCMPortManagerTypeC isMeasurementActive]
  -[IOAccessoryLDCMPortManagerTypeC setIsMeasurementActive:]
  -[IOAccessoryLDCMPortManagerTypeC isPowerAssertionHeld]
  -[IOAccessoryLDCMPortManagerTypeC setIsPowerAssertionHeld:]
  -[IOAccessoryLDCMPortManagerTypeC sleepAssertionID]
  -[IOAccessoryLDCMPortManagerTypeC setSleepAssertionID:]
  -[IOAccessoryLDCMPortManagerTypeC initWithParams:dryPollingIntervalNs:]
  -[IOAccessoryLDCMPortManagerTypeC halogenTypeCDispatchQueue]
  -[IOAccessoryLDCMPortManagerTypeC performTypeCMeasurement]
  -[IOAccessoryLDCMPortManagerTypeC handleAttachEvent]
  -[IOAccessoryLDCMPortManagerTypeC handleDetachEvent]
  -[IOAccessoryLDCMPortManagerTypeC _controlLDCMMeasurements]
  -[IOAccessoryLDCMPortManagerTypeC _registerForLDCMNotifications]
  -[IOAccessoryLDCMPortManagerTypeC performTypeCReferenceMeasurement]
  -[IOAccessoryLDCMPortManagerTypeC performTypeCSelfTest]
  -[IOAccessoryLDCMPortManagerTypeC _readLDCMBootArgs]
  -[IOAccessoryLDCMPortManagerTypeC _checkIsReceptacleEmpty]
  -[IOAccessoryLDCMPortManagerTypeC _processLDCMDefauts:]
  -[IOAccessoryLDCMPortManagerTypeC _manageLDCMSettings]
  -[IOAccessoryLDCMPortManagerTypeC _processLDCMAnalyticsDefauts]
  -[IOAccessoryLDCMPortManagerTypeC _writeAndNotifyDefaults:value:domain:notify:notification:]
  -[IOAccessoryLDCMPortManagerTypeC _resetLDCMErrorDict]
  -[IOAccessoryLDCMPortManagerTypeC _setMitigations:]
  -[IOAccessoryLDCMPortManagerTypeC setNewAccArrived:]
  -[IOAccessoryLDCMPortManagerTypeC _holdPowerAssertionTypeC:]
  -[IOAccessoryLDCMPortManagerTypeC _generateLDCMCSVData]
  -[IOAccessoryLDCMPortManagerTypeC _generateAlternateMeasurementAnalytics:measurementInfo:intervalSinceLastPass:]
  -[IOAccessoryLDCMPortManagerTypeC setWetTooLongRecorded:]
  -[IOAccessoryLDCMPortManagerTypeC _giveUserRadarPrompt:]
  -[IOAccessoryLDCMPortManagerTypeC _showMitigationAlert]
  -[IOAccessoryLDCMPortManagerTypeC _measurementErrorToAnalyticError:]
  -[IOAccessoryLDCMPortManagerTypeC _recordLDCMError:]
  -[IOAccessoryLDCMPortManagerTypeC _generateFailureAnalytics:recordLDCMDisabled:analyticsError:]
  -[IOAccessoryLDCMPortManagerTypeC _generateAnalytics:dryToWetTransition:measurementInfo:]
  -[IOAccessoryLDCMPortManagerTypeC _halogenErrorToAnalyticError:]
  -[IOAccessoryLDCMPortManagerTypeC _fetchFilesToUpload:]
  -[IOAccessoryLDCMPortManagerTypeC _loadFrontBoard]
  -[IOAccessoryLDCMPortManagerTypeC _setInitialTTRTimestamp]
  -[IOAccessoryLDCMPortManagerTypeC _setInitialUserNotificationTimestamp]
  -[IOAccessoryLDCMPortManagerTypeC _throttleTTR]
  -[IOAccessoryLDCMPortManagerTypeC _fileRadarHalogenTypeC:TTRCategory:]
  -[IOAccessoryLDCMPortManagerTypeC _throttleUserNotification]
  -[IOAccessoryLDCMPortManagerTypeC _processMitigationsOverride]
  -[IOAccessoryLDCMPortManagerTypeC setTypeC:]
  -[IOAccessoryLDCMPortManagerTypeC setHalogenTypeCDispatchQueue:]
  -[IOAccessoryLDCMPortManagerTypeC enableTapToRadarPopup]
  -[IOAccessoryLDCMPortManagerTypeC setEnableTapToRadarPopup:]
  -[IOAccessoryLDCMPortManagerTypeC newAccArrived]
  -[IOAccessoryLDCMPortManagerTypeC userNotified]
  -[IOAccessoryLDCMPortManagerTypeC setUserNotified:]
  -[IOAccessoryLDCMPortManagerTypeC wetTooLongRecorded]
  -[IOAccessoryLDCMPortManagerTypeC enableTTRCooldown]
  -[IOAccessoryLDCMPortManagerTypeC setEnableTTRCooldown:]
  -[IOAccessoryLDCMPortManagerTypeC mitigationsEnabled]
  -[IOAccessoryLDCMPortManagerTypeC setMitigationsEnabled:]
  -[IOAccessoryLDCMPortManagerTypeC mitigationsOverrideEnabled]
  -[IOAccessoryLDCMPortManagerTypeC setMitigationsOverrideEnabled:]
  -[IOAccessoryLDCMPortManagerTypeC fakeWetMeasurements]
  -[IOAccessoryLDCMPortManagerTypeC setFakeWetMeasurements:]
  -[IOAccessoryLDCMPortManagerTypeC selfTestFailed]
  -[IOAccessoryLDCMPortManagerTypeC setSelfTestFailed:]
  -[IOAccessoryLDCMPortManagerTypeC refMeasurementFailed]
  -[IOAccessoryLDCMPortManagerTypeC setRefMeasurementFailed:]
  -[IOAccessoryLDCMPortManagerTypeC sbuBootArgSet]
  -[IOAccessoryLDCMPortManagerTypeC setSbuBootArgSet:]
  -[IOAccessoryLDCMPortManagerTypeC skipMitigationsBootArgSet]
  -[IOAccessoryLDCMPortManagerTypeC setSkipMitigationsBootArgSet:]
  -[IOAccessoryLDCMPortManagerTypeC skipTTRBootArgSet]
  -[IOAccessoryLDCMPortManagerTypeC setSkipTTRBootArgSet:]
  -[IOAccessoryLDCMPortManagerTypeC didReportDisabledAnalytic]
  -[IOAccessoryLDCMPortManagerTypeC setDidReportDisabledAnalytic:]
  -[IOAccessoryLDCMPortManagerTypeC drySinceWetCount]
  -[IOAccessoryLDCMPortManagerTypeC setDrySinceWetCount:]
  -[IOAccessoryLDCMPortManagerTypeC selfTestFailureCount]
  -[IOAccessoryLDCMPortManagerTypeC setSelfTestFailureCount:]
  -[IOAccessoryLDCMPortManagerTypeC selfTestPassCount]
  -[IOAccessoryLDCMPortManagerTypeC setSelfTestPassCount:]
  -[IOAccessoryLDCMPortManagerTypeC referenceMeasurementFailureCount]
  -[IOAccessoryLDCMPortManagerTypeC setReferenceMeasurementFailureCount:]
  -[IOAccessoryLDCMPortManagerTypeC referenceMeasurementPassCount]
  -[IOAccessoryLDCMPortManagerTypeC setReferenceMeasurementPassCount:]
  -[IOAccessoryLDCMPortManagerTypeC lastTTRTimeStamp]
  -[IOAccessoryLDCMPortManagerTypeC setLastTTRTimeStamp:]
  -[IOAccessoryLDCMPortManagerTypeC lastUserNotificationTimeStamp]
  -[IOAccessoryLDCMPortManagerTypeC setLastUserNotificationTimeStamp:]
  -[IOAccessoryLDCMPortManagerTypeC FBSOpenApplicationOptionKeyPromptUnlockDevice]
  -[IOAccessoryLDCMPortManagerTypeC setFBSOpenApplicationOptionKeyPromptUnlockDevice:]
  -[IOAccessoryLDCMPortManagerTypeC timerSelfTest]
  -[IOAccessoryLDCMPortManagerTypeC setTimerSelfTest:]
  -[IOAccessoryLDCMPortManagerTypeC timerReferenceMeasurement]
  -[IOAccessoryLDCMPortManagerTypeC setTimerReferenceMeasurement:]
  -[IOAccessoryLDCMPortManagerTypeC ldcmErrorCountDict]
  -[IOAccessoryLDCMPortManagerTypeC setLdcmErrorCountDict:]
  -[IOAccessoryLDCMPortManagerTypeC defaultsRWLock]
  -[IOAccessoryLDCMPortManagerTypeC setDefaultsRWLock:]
  -[IOAccessoryLDCMPortManagerTypeC wetMeasurementInfo]
  -[IOAccessoryLDCMPortManagerTypeC setWetMeasurementInfo:]
  -[IOAccessoryLDCMPortManagerTypeC analyticsDebugEvent]
  -[IOAccessoryLDCMPortManagerTypeC setAnalyticsDebugEvent:]
  -[IOAccessoryLDCMPortManagerTypeC timeBase]
  -[IOAccessoryLDCMPortManagerTypeC halogenTypeCTTRDispatchQueue]
  -[IOAccessoryLDCMPortManagerTypeC setHalogenTypeCTTRDispatchQueue:]
  -[IOAccessoryLDCMPortManagerTypeC lastMeasurementResult]
  -[IOAccessoryLDCMPortManagerTypeC setLastMeasurementResult:]
  -[IOAccessoryLDCMPortManagerTypeC lastMeasurementStatus]
  -[IOAccessoryLDCMPortManagerTypeC setLastMeasurementStatus:]


HalogenLdcmCalc : NSObject
 @property  int nSamples
 @property  int diffWindowSize
 @property  int clipDetectWindowSize
 @property  int sizeofSample
 @property  double sampleRate
 @property  double signalFrequency
 @property  double adcGain
 @property  double tiaGain
 @property  double hydraImpedance
 @property  double movesumClipThreshold
 @property  double hydraR
 @property  double ldcmAcCap
 @property  double sanitycheckImpedanceLowerbound
 @property  double sanitycheckImpedanceUpperbound
 @property  double sanitycheckPhaseLowerbound
 @property  double sanitycheckPhaseUperbound
 @property  double sanitycheckVoltageGainCorrectionLowerbound
 @property  double sanitycheckVoltageGainCorrectionUpperbound
 @property  double sanitycheckCurrentGainCorrectionLowerbound
 @property  double sanitycheckCurrentGainCorrectionUpperbound
 @property  double sanitycheckCurrentPhaseCompensationLowerbound
 @property  double sanitycheckCurrentPhaseCompensationUpperbound
 @property  BOOL isDigitalFilterTrigger
 @property  NSMutableData *tmp1DataBuff
 @property  int tmp1DataBuffSize
 @property  NSMutableData *tmp2DataBuff
 @property  int tmp2DataBuffSize
 @property  NSMutableData *tmp3DataBuff
 @property  int tmp3DataBuffSize
 @property  ^{OpaqueFFTSetupD=} fftContext
 @property  double precalVoltageSignalLevel
 @property  double precalVoltageNoiseLevel
 @property  double precalVoltageSNR
 @property  double precalCurrentSignalLevel
 @property  double precalCurrentNoiseLevel
 @property  double precalCurrentSNR
 @property  double voltageGainCorrection
 @property  double currentGainCorrection
 @property  double currentPhaseCompensation
 @property  double calVoltageSignalLevel
 @property  double calVoltageNoiseLevel
 @property  double calVoltageSNR
 @property  double calCurrentSignalLevel
 @property  double calCurrentNoiseLevel
 @property  double calCurrentSNR
 @property  double goertzelImpedance
 @property  double goertzelPhase
 @property  double compensatedImpedance
 @property  double compensatedPhase
 @property  double clippingScore
 @property  double resistanceInOhms
 @property  double capacitanceInNanoF
 @property  double measurementVoltageSignalLevel
 @property  double measurementVoltageNoiseLevel
 @property  double measurementVoltageSNR
 @property  double measurementCurrentSignalLevel
 @property  double measurementCurrentNoiseLevel
 @property  double measurementCurrentSNR
 @property  double measurementCondetSNR

  // instance methods
  -[HalogenLdcmCalc sampleRate]
  -[HalogenLdcmCalc initWithSize:]
  -[HalogenLdcmCalc adcGain]
  -[HalogenLdcmCalc tiaGain]
  -[HalogenLdcmCalc dealloc]
  -[HalogenLdcmCalc hydraR]
  -[HalogenLdcmCalc setSampleRate:]
  -[HalogenLdcmCalc _freeBuffers]
  -[HalogenLdcmCalc _allocBuffers]
  -[HalogenLdcmCalc doCalibration:withCurrentData:]
  -[HalogenLdcmCalc calVoltageSNR]
  -[HalogenLdcmCalc calCurrentSNR]
  -[HalogenLdcmCalc voltageGainCorrection]
  -[HalogenLdcmCalc currentGainCorrection]
  -[HalogenLdcmCalc currentPhaseCompensation]
  -[HalogenLdcmCalc goertzelImpedance]
  -[HalogenLdcmCalc goertzelPhase]
  -[HalogenLdcmCalc compensatedImpedance]
  -[HalogenLdcmCalc compensatedPhase]
  -[HalogenLdcmCalc resistanceInOhms]
  -[HalogenLdcmCalc capacitanceInNanoF]
  -[HalogenLdcmCalc measurementVoltageSignalLevel]
  -[HalogenLdcmCalc measurementVoltageNoiseLevel]
  -[HalogenLdcmCalc measurementVoltageSNR]
  -[HalogenLdcmCalc measurementCurrentSignalLevel]
  -[HalogenLdcmCalc measurementCurrentNoiseLevel]
  -[HalogenLdcmCalc measurementCurrentSNR]
  -[HalogenLdcmCalc precalVoltageSignalLevel]
  -[HalogenLdcmCalc precalVoltageNoiseLevel]
  -[HalogenLdcmCalc precalVoltageSNR]
  -[HalogenLdcmCalc precalCurrentSignalLevel]
  -[HalogenLdcmCalc precalCurrentNoiseLevel]
  -[HalogenLdcmCalc precalCurrentSNR]
  -[HalogenLdcmCalc calVoltageSignalLevel]
  -[HalogenLdcmCalc calVoltageNoiseLevel]
  -[HalogenLdcmCalc calCurrentSignalLevel]
  -[HalogenLdcmCalc calCurrentNoiseLevel]
  -[HalogenLdcmCalc clippingScore]
  -[HalogenLdcmCalc measurementCondetSNR]
  -[HalogenLdcmCalc isBoundViolation_currentGainCorrection]
  -[HalogenLdcmCalc isBoundViolation_currentPhaseCompensation]
  -[HalogenLdcmCalc isLowerBoundViolation_goertzelImpedance]
  -[HalogenLdcmCalc isUpperBoundViolation_goertzelImpedance]
  -[HalogenLdcmCalc isLowerBoundViolation_goertzelPhase]
  -[HalogenLdcmCalc isUpperBoundViolation_goertzelPhase]
  -[HalogenLdcmCalc isBoundViolation_measurementCondetSNR]
  -[HalogenLdcmCalc _snr:withGain:hasSignalLevel:hasNoiseLevel:hasCondetSnr:]
  -[HalogenLdcmCalc _goertzelSecondOrder:hasFftValue:hasPhase:withHanning:]
  -[HalogenLdcmCalc isBoundViolation_voltageGainCorrection]
  -[HalogenLdcmCalc _applyGain:toData:]
  -[HalogenLdcmCalc _applyFractionalPhaseShift:withPhaseDelay:]
  -[HalogenLdcmCalc _isClipped:]
  -[HalogenLdcmCalc _applyTiaGain:toCurrentData:]
  -[HalogenLdcmCalc setIsDigitalFilterTrigger:]
  -[HalogenLdcmCalc _applyDigitalFilter:]
  -[HalogenLdcmCalc _doHydraComp:withPhase:]
  -[HalogenLdcmCalc _rcSolver]
  -[HalogenLdcmCalc _applyHanningWindow:withSize:]
  -[HalogenLdcmCalc _condetSnr:]
  -[HalogenLdcmCalc _mean:ofSize:]
  -[HalogenLdcmCalc _variance:ofSize:]
  -[HalogenLdcmCalc _median:ofSize:]
  -[HalogenLdcmCalc _stdev:ofSize:]
  -[HalogenLdcmCalc _reconstructSignal:]
  -[HalogenLdcmCalc _sineExtractor:]
  -[HalogenLdcmCalc doPreCalibration:withCurrentData:]
  -[HalogenLdcmCalc doLiquidDetection:withCurrentData:isReceptacleEmpty:isReceptacleWet:withWetTransitionThreshold:withDryTransitionThreshold:]
  -[HalogenLdcmCalc nSamples]
  -[HalogenLdcmCalc setNSamples:]
  -[HalogenLdcmCalc diffWindowSize]
  -[HalogenLdcmCalc setDiffWindowSize:]
  -[HalogenLdcmCalc clipDetectWindowSize]
  -[HalogenLdcmCalc setClipDetectWindowSize:]
  -[HalogenLdcmCalc sizeofSample]
  -[HalogenLdcmCalc setSizeofSample:]
  -[HalogenLdcmCalc signalFrequency]
  -[HalogenLdcmCalc setSignalFrequency:]
  -[HalogenLdcmCalc setAdcGain:]
  -[HalogenLdcmCalc setTiaGain:]
  -[HalogenLdcmCalc hydraImpedance]
  -[HalogenLdcmCalc setHydraImpedance:]
  -[HalogenLdcmCalc movesumClipThreshold]
  -[HalogenLdcmCalc setMovesumClipThreshold:]
  -[HalogenLdcmCalc setHydraR:]
  -[HalogenLdcmCalc ldcmAcCap]
  -[HalogenLdcmCalc setLdcmAcCap:]
  -[HalogenLdcmCalc sanitycheckImpedanceLowerbound]
  -[HalogenLdcmCalc setSanitycheckImpedanceLowerbound:]
  -[HalogenLdcmCalc sanitycheckImpedanceUpperbound]
  -[HalogenLdcmCalc setSanitycheckImpedanceUpperbound:]
  -[HalogenLdcmCalc sanitycheckPhaseLowerbound]
  -[HalogenLdcmCalc setSanitycheckPhaseLowerbound:]
  -[HalogenLdcmCalc sanitycheckPhaseUperbound]
  -[HalogenLdcmCalc setSanitycheckPhaseUperbound:]
  -[HalogenLdcmCalc sanitycheckVoltageGainCorrectionLowerbound]
  -[HalogenLdcmCalc setSanitycheckVoltageGainCorrectionLowerbound:]
  -[HalogenLdcmCalc sanitycheckVoltageGainCorrectionUpperbound]
  -[HalogenLdcmCalc setSanitycheckVoltageGainCorrectionUpperbound:]
  -[HalogenLdcmCalc sanitycheckCurrentGainCorrectionLowerbound]
  -[HalogenLdcmCalc setSanitycheckCurrentGainCorrectionLowerbound:]
  -[HalogenLdcmCalc sanitycheckCurrentGainCorrectionUpperbound]
  -[HalogenLdcmCalc setSanitycheckCurrentGainCorrectionUpperbound:]
  -[HalogenLdcmCalc sanitycheckCurrentPhaseCompensationLowerbound]
  -[HalogenLdcmCalc setSanitycheckCurrentPhaseCompensationLowerbound:]
  -[HalogenLdcmCalc sanitycheckCurrentPhaseCompensationUpperbound]
  -[HalogenLdcmCalc setSanitycheckCurrentPhaseCompensationUpperbound:]
  -[HalogenLdcmCalc isDigitalFilterTrigger]
  -[HalogenLdcmCalc tmp1DataBuff]
  -[HalogenLdcmCalc setTmp1DataBuff:]
  -[HalogenLdcmCalc tmp1DataBuffSize]
  -[HalogenLdcmCalc setTmp1DataBuffSize:]
  -[HalogenLdcmCalc tmp2DataBuff]
  -[HalogenLdcmCalc setTmp2DataBuff:]
  -[HalogenLdcmCalc tmp2DataBuffSize]
  -[HalogenLdcmCalc setTmp2DataBuffSize:]
  -[HalogenLdcmCalc tmp3DataBuff]
  -[HalogenLdcmCalc setTmp3DataBuff:]
  -[HalogenLdcmCalc tmp3DataBuffSize]
  -[HalogenLdcmCalc setTmp3DataBuffSize:]
  -[HalogenLdcmCalc fftContext]
  -[HalogenLdcmCalc setFftContext:]


HalogenMeasurement : NSObject
 @property  HalogenLdcmCalc *halogenLdcmCalc
 @property  int nInputChannels
 @property  int nOutputChannels
 @property  int sampleRate
 @property  int bitDepth
 @property  int inputFrameSizeInBytes
 @property  int outputFrameSizeInBytes
 @property  ^{OpaqueAudioComponentInstance=} audioComponentInst
 @property  int warmupTimeInMs
 @property  int hydraSettlingTimeInMs
 @property  int nMeasurementSamples
 @property  int nWarmupSamples
 @property  int nHydraSettlingSamples
 @property  int nTotalSamples
 @property  int nPaddingSamples
 @property  double signalFreq
 @property  int initalPhaseInDegrees
 @property  unsigned short maxOutputAmplitude
 @property  unsigned short signalOffset
 @property  NSMutableData *pcmInputData
 @property  int pcmInputDataMaxSzInBytes
 @property  int pcmInputDataIndexInBytes
 @property  int pcmInputDataSampleCnt
 @property  BOOL isCalibrationDone
 @property  BOOL isMeasurementDone
 @property  NSMutableData *pcmOutputData
 @property  int pcmOutputDataMaxSzInBytes
 @property  int pcmOutputDataIndexInBytes
 @property  NSMutableData *currentData
 @property  NSMutableData *voltageData
 @property  BOOL shouldInvertData
 @property  int audioTimeoutInSec
 @property  NSCondition *audioTimeoutCond
 @property  int measurementSampleOffsetInFrames
 @property  unsigned int service
 @property  unsigned int connect
 @property  int pinToMeasure
 @property  unsigned long eisPinToken1
 @property  unsigned long eisPinToken2
 @property  NSObject<OS_dispatch_queue> *systemPowerQueue
 @property  unsigned int systemPowerPort
 @property  ^{IONotificationPort=} systemPowerNotifyPortRef
 @property  unsigned int systemPowerIterator
 @property  int powerState
 @property  NSCondition *powerStateCond
 @property  BaseResourceArbiterClient *arbiterClient
 @property  BOOL arbiterLocked
 @property  BOOL arbitrationRequired
 @property  int precalibrationSampleOffsetInFrames
 @property  double precalVoltageSignalLevel
 @property  double precalVoltageNoiseLevel
 @property  double precalVoltageSNR
 @property  double precalCurrentSignalLevel
 @property  double precalCurrentNoiseLevel
 @property  double precalCurrentSNR
 @property  int calibrationSampleOffsetInFrames
 @property  double voltageGainCorrection
 @property  double currentGainCorrection
 @property  double currentPhaseCompensation
 @property  double calVoltageSignalLevel
 @property  double calVoltageNoiseLevel
 @property  double calVoltageSNR
 @property  double calCurrentSignalLevel
 @property  double calCurrentNoiseLevel
 @property  double calCurrentSNR
 @property  double goertzelImpedance
 @property  double goertzelPhase
 @property  double compensatedImpedance
 @property  double compensatedPhase
 @property  double resistanceInOhms
 @property  double capacitanceInNanoF
 @property  double clippingScore
 @property  double measurementVoltageSignalLevel
 @property  double measurementVoltageNoiseLevel
 @property  double measurementVoltageSNR
 @property  double measurementCurrentSignalLevel
 @property  double measurementCurrentNoiseLevel
 @property  double measurementCurrentSNR
 @property  double measurementCondetSNR
 @property  int halogenResult

  // instance methods
  -[HalogenMeasurement connect]
  -[HalogenMeasurement setPowerState:]
  -[HalogenMeasurement sampleRate]
  -[HalogenMeasurement setSystemPowerPort:]
  -[HalogenMeasurement setSystemPowerQueue:]
  -[HalogenMeasurement systemPowerPort]
  -[HalogenMeasurement systemPowerQueue]
  -[HalogenMeasurement systemPowerIterator]
  -[HalogenMeasurement setSystemPowerIterator:]
  -[HalogenMeasurement currentData]
  -[HalogenMeasurement powerState]
  -[HalogenMeasurement setSystemPowerNotifyPortRef:]
  -[HalogenMeasurement setBitDepth:]
  -[HalogenMeasurement service]
  -[HalogenMeasurement bitDepth]
  -[HalogenMeasurement dealloc]
  -[HalogenMeasurement systemPowerNotifyPortRef]
  -[HalogenMeasurement setSampleRate:]
  -[HalogenMeasurement setService:]
  -[HalogenMeasurement setConnect:]
  -[HalogenMeasurement _freeBuffers]
  -[HalogenMeasurement _allocBuffers]
  -[HalogenMeasurement _connectToAccessoryManager:]
  -[HalogenMeasurement _createSleepWakeNotifier]
  -[HalogenMeasurement _generateSineWave]
  -[HalogenMeasurement _destroySleepWakeNotifier]
  -[HalogenMeasurement _disconnectFromAccessoryManager]
  -[HalogenMeasurement setPowerStateCond:]
  -[HalogenMeasurement powerStateCond]
  -[HalogenMeasurement maxOutputAmplitude]
  -[HalogenMeasurement signalOffset]
  -[HalogenMeasurement setPcmInputDataIndexInBytes:]
  -[HalogenMeasurement setPcmInputDataSampleCnt:]
  -[HalogenMeasurement setPcmOutputDataIndexInBytes:]
  -[HalogenMeasurement _resetCalcValues]
  -[HalogenMeasurement calVoltageSNR]
  -[HalogenMeasurement calCurrentSNR]
  -[HalogenMeasurement voltageGainCorrection]
  -[HalogenMeasurement currentGainCorrection]
  -[HalogenMeasurement currentPhaseCompensation]
  -[HalogenMeasurement goertzelImpedance]
  -[HalogenMeasurement goertzelPhase]
  -[HalogenMeasurement compensatedImpedance]
  -[HalogenMeasurement compensatedPhase]
  -[HalogenMeasurement resistanceInOhms]
  -[HalogenMeasurement capacitanceInNanoF]
  -[HalogenMeasurement measurementVoltageSignalLevel]
  -[HalogenMeasurement measurementVoltageNoiseLevel]
  -[HalogenMeasurement measurementVoltageSNR]
  -[HalogenMeasurement measurementCurrentSignalLevel]
  -[HalogenMeasurement measurementCurrentNoiseLevel]
  -[HalogenMeasurement measurementCurrentSNR]
  -[HalogenMeasurement saveAsWav:]
  -[HalogenMeasurement precalibrationSampleOffsetInFrames]
  -[HalogenMeasurement precalVoltageSignalLevel]
  -[HalogenMeasurement precalVoltageNoiseLevel]
  -[HalogenMeasurement precalVoltageSNR]
  -[HalogenMeasurement precalCurrentSignalLevel]
  -[HalogenMeasurement precalCurrentNoiseLevel]
  -[HalogenMeasurement precalCurrentSNR]
  -[HalogenMeasurement calibrationSampleOffsetInFrames]
  -[HalogenMeasurement calVoltageSignalLevel]
  -[HalogenMeasurement calVoltageNoiseLevel]
  -[HalogenMeasurement calCurrentSignalLevel]
  -[HalogenMeasurement calCurrentNoiseLevel]
  -[HalogenMeasurement measurementSampleOffsetInFrames]
  -[HalogenMeasurement setMeasurementSampleOffsetInFrames:]
  -[HalogenMeasurement clippingScore]
  -[HalogenMeasurement measurementCondetSNR]
  -[HalogenMeasurement halogenResult]
  -[HalogenMeasurement nInputChannels]
  -[HalogenMeasurement setNInputChannels:]
  -[HalogenMeasurement nOutputChannels]
  -[HalogenMeasurement setNOutputChannels:]
  -[HalogenMeasurement inputFrameSizeInBytes]
  -[HalogenMeasurement setInputFrameSizeInBytes:]
  -[HalogenMeasurement outputFrameSizeInBytes]
  -[HalogenMeasurement setOutputFrameSizeInBytes:]
  -[HalogenMeasurement audioComponentInst]
  -[HalogenMeasurement setAudioComponentInst:]
  -[HalogenMeasurement warmupTimeInMs]
  -[HalogenMeasurement setWarmupTimeInMs:]
  -[HalogenMeasurement nMeasurementSamples]
  -[HalogenMeasurement setNMeasurementSamples:]
  -[HalogenMeasurement nWarmupSamples]
  -[HalogenMeasurement setNWarmupSamples:]
  -[HalogenMeasurement nTotalSamples]
  -[HalogenMeasurement setNTotalSamples:]
  -[HalogenMeasurement nPaddingSamples]
  -[HalogenMeasurement setNPaddingSamples:]
  -[HalogenMeasurement signalFreq]
  -[HalogenMeasurement setSignalFreq:]
  -[HalogenMeasurement initalPhaseInDegrees]
  -[HalogenMeasurement setInitalPhaseInDegrees:]
  -[HalogenMeasurement pcmInputData]
  -[HalogenMeasurement setPcmInputData:]
  -[HalogenMeasurement pcmInputDataMaxSzInBytes]
  -[HalogenMeasurement setPcmInputDataMaxSzInBytes:]
  -[HalogenMeasurement pcmInputDataIndexInBytes]
  -[HalogenMeasurement pcmInputDataSampleCnt]
  -[HalogenMeasurement isCalibrationDone]
  -[HalogenMeasurement setIsCalibrationDone:]
  -[HalogenMeasurement isMeasurementDone]
  -[HalogenMeasurement setIsMeasurementDone:]
  -[HalogenMeasurement pcmOutputData]
  -[HalogenMeasurement setPcmOutputData:]
  -[HalogenMeasurement pcmOutputDataMaxSzInBytes]
  -[HalogenMeasurement setPcmOutputDataMaxSzInBytes:]
  -[HalogenMeasurement pcmOutputDataIndexInBytes]
  -[HalogenMeasurement setCurrentData:]
  -[HalogenMeasurement voltageData]
  -[HalogenMeasurement setVoltageData:]
  -[HalogenMeasurement audioTimeoutInSec]
  -[HalogenMeasurement setAudioTimeoutInSec:]
  -[HalogenMeasurement audioTimeoutCond]
  -[HalogenMeasurement setAudioTimeoutCond:]
  -[HalogenMeasurement pinToMeasure]
  -[HalogenMeasurement setPinToMeasure:]
  -[HalogenMeasurement initWithSize:onPort:]
  -[HalogenMeasurement getResultString]
  -[HalogenMeasurement doMeasurement:onPin:isReceptacleEmpty:isReceptacleWet:withWetTransitionThreshold:withDryTransitionThreshold:]
  -[HalogenMeasurement isBoundViolation_currentGainCorrection]
  -[HalogenMeasurement isBoundViolation_currentPhaseCompensation]
  -[HalogenMeasurement isLowerBoundViolation_goertzelImpedance]
  -[HalogenMeasurement isUpperBoundViolation_goertzelImpedance]
  -[HalogenMeasurement isLowerBoundViolation_goertzelPhase]
  -[HalogenMeasurement isUpperBoundViolation_goertzelPhase]
  -[HalogenMeasurement isBoundViolation_measurementCondetSNR]
  -[HalogenMeasurement isBoundViolation_voltageGainCorrection]
  -[HalogenMeasurement _initArbiter]
  -[HalogenMeasurement _deinitArbiter]
  -[HalogenMeasurement _initAudioPath]
  -[HalogenMeasurement _doHalogenLdcmCalc:isReceptacleWet:withWetTransitionThreshold:withDryTransitionThreshold:]
  -[HalogenMeasurement _deinitAudioPath]
  -[HalogenMeasurement shouldInvertData]
  -[HalogenMeasurement halogenLdcmCalc]
  -[HalogenMeasurement setHalogenLdcmCalc:]
  -[HalogenMeasurement hydraSettlingTimeInMs]
  -[HalogenMeasurement setHydraSettlingTimeInMs:]
  -[HalogenMeasurement nHydraSettlingSamples]
  -[HalogenMeasurement setNHydraSettlingSamples:]
  -[HalogenMeasurement eisPinToken1]
  -[HalogenMeasurement setEisPinToken1:]
  -[HalogenMeasurement eisPinToken2]
  -[HalogenMeasurement setEisPinToken2:]
  -[HalogenMeasurement arbiterClient]
  -[HalogenMeasurement arbiterLocked]
  -[HalogenMeasurement arbitrationRequired]


HalogenCalcTypeC : NSObject
 @property  int nSamples
 @property  int sizeofSample
 @property  double sampleRate
 @property  double signalFrequency
 @property  double tiaGain
 @property  double adcGain
 @property  double parasiticCap
 @property  double pinParasitics
 @property  double seriesResistance
 @property  double seriesRCResistance
 @property  double LDCMACCapacitance
 @property  jd seriesTotalImpedance
 @property  NSMutableData *tmp1DataBuff
 @property  int tmp1DataBuffSize
 @property  NSMutableData *tmp2DataBuff
 @property  int tmp2DataBuffSize
 @property  NSMutableData *tmp3DataBuff
 @property  int tmp3DataBuffSize
 @property  ^{OpaqueFFTSetupD=} fftContext
 @property  double voltageGainCorrection
 @property  double currentGainCorrection
 @property  double currentPhaseCompensation
 @property  double calVoltageSignalLevel
 @property  double calVoltageNoiseLevel
 @property  double calCurrentSignalLevel
 @property  double calCurrentNoiseLevel
 @property  double calVoltageSNR
 @property  double calCurrentSNR
 @property  double calVoltageAmplitude
 @property  double calCurrentAmplitude
 @property  double measurementVoltageSignalLevel
 @property  double measurementVoltageNoiseLevel
 @property  double measurementVoltageSNR
 @property  double measurementCurrentSignalLevel
 @property  double measurementCurrentNoiseLevel
 @property  double measurementCurrentSNR
 @property  double measurementVoltageAmplitude
 @property  double measurementCurrentAmplitude
 @property  double measurementVoltagePhase
 @property  double measurementCurrentPhase
 @property  double goertzelImpedance
 @property  double goertzelPhase
 @property  double compensatedImpedance
 @property  double compensatedPhase
 @property  double loadImpedanceInOhms
 @property  double loadPhase
 @property  double resistanceInOhms
 @property  double capacitanceInNanoF
 @property  BOOL wetTooLong

  // instance methods
  -[HalogenCalcTypeC sampleRate]
  -[HalogenCalcTypeC adcGain]
  -[HalogenCalcTypeC tiaGain]
  -[HalogenCalcTypeC dealloc]
  -[HalogenCalcTypeC setSampleRate:]
  -[HalogenCalcTypeC _freeBuffers]
  -[HalogenCalcTypeC _allocBuffers]
  -[HalogenCalcTypeC initWithParams:signalFrequency:sampleRate:tiaGain:adcGain:parasiticCap:]
  -[HalogenCalcTypeC doCalibration:withCurrentData:]
  -[HalogenCalcTypeC calVoltageSNR]
  -[HalogenCalcTypeC calCurrentSNR]
  -[HalogenCalcTypeC calVoltageAmplitude]
  -[HalogenCalcTypeC calCurrentAmplitude]
  -[HalogenCalcTypeC voltageGainCorrection]
  -[HalogenCalcTypeC currentGainCorrection]
  -[HalogenCalcTypeC currentPhaseCompensation]
  -[HalogenCalcTypeC doLiquidDetection:withCurrentData:isReceptacleEmpty:isReceptacleWet:withWetTransitionThreshold:withDryTransitionThreshold:pinParasitics:measurementType:]
  -[HalogenCalcTypeC goertzelImpedance]
  -[HalogenCalcTypeC goertzelPhase]
  -[HalogenCalcTypeC compensatedImpedance]
  -[HalogenCalcTypeC compensatedPhase]
  -[HalogenCalcTypeC resistanceInOhms]
  -[HalogenCalcTypeC capacitanceInNanoF]
  -[HalogenCalcTypeC measurementVoltageSignalLevel]
  -[HalogenCalcTypeC measurementVoltageNoiseLevel]
  -[HalogenCalcTypeC measurementVoltageSNR]
  -[HalogenCalcTypeC measurementCurrentSignalLevel]
  -[HalogenCalcTypeC measurementCurrentNoiseLevel]
  -[HalogenCalcTypeC measurementCurrentSNR]
  -[HalogenCalcTypeC measurementVoltageAmplitude]
  -[HalogenCalcTypeC measurementCurrentAmplitude]
  -[HalogenCalcTypeC measurementVoltagePhase]
  -[HalogenCalcTypeC measurementCurrentPhase]
  -[HalogenCalcTypeC loadImpedanceInOhms]
  -[HalogenCalcTypeC loadPhase]
  -[HalogenCalcTypeC setWetTooLong:]
  -[HalogenCalcTypeC calVoltageSignalLevel]
  -[HalogenCalcTypeC calVoltageNoiseLevel]
  -[HalogenCalcTypeC calCurrentSignalLevel]
  -[HalogenCalcTypeC calCurrentNoiseLevel]
  -[HalogenCalcTypeC wetTooLong]
  -[HalogenCalcTypeC _applyGain:toData:]
  -[HalogenCalcTypeC _applyFractionalPhaseShift:withPhaseDelay:]
  -[HalogenCalcTypeC _applyTiaGain:toCurrentData:]
  -[HalogenCalcTypeC _rcSolver]
  -[HalogenCalcTypeC _applyHanningWindow:withSize:]
  -[HalogenCalcTypeC nSamples]
  -[HalogenCalcTypeC setNSamples:]
  -[HalogenCalcTypeC sizeofSample]
  -[HalogenCalcTypeC setSizeofSample:]
  -[HalogenCalcTypeC signalFrequency]
  -[HalogenCalcTypeC setSignalFrequency:]
  -[HalogenCalcTypeC setAdcGain:]
  -[HalogenCalcTypeC setTiaGain:]
  -[HalogenCalcTypeC tmp1DataBuff]
  -[HalogenCalcTypeC setTmp1DataBuff:]
  -[HalogenCalcTypeC tmp1DataBuffSize]
  -[HalogenCalcTypeC setTmp1DataBuffSize:]
  -[HalogenCalcTypeC tmp2DataBuff]
  -[HalogenCalcTypeC setTmp2DataBuff:]
  -[HalogenCalcTypeC tmp2DataBuffSize]
  -[HalogenCalcTypeC setTmp2DataBuffSize:]
  -[HalogenCalcTypeC tmp3DataBuff]
  -[HalogenCalcTypeC setTmp3DataBuff:]
  -[HalogenCalcTypeC tmp3DataBuffSize]
  -[HalogenCalcTypeC setTmp3DataBuffSize:]
  -[HalogenCalcTypeC fftContext]
  -[HalogenCalcTypeC setFftContext:]
  -[HalogenCalcTypeC _goertzelSecondOrder:hasFftValue:hasPhase:withHanning:amplitudeCorrectionFactor:]
  -[HalogenCalcTypeC _snr:withGain:hasSignalLevel:hasNoiseLevel:]
  -[HalogenCalcTypeC _isResistiveOnly:resistanceInOhms:loadPhase:]
  -[HalogenCalcTypeC _doMuxComp:withPhase:]
  -[HalogenCalcTypeC parasiticCap]
  -[HalogenCalcTypeC setParasiticCap:]
  -[HalogenCalcTypeC pinParasitics]
  -[HalogenCalcTypeC setPinParasitics:]
  -[HalogenCalcTypeC seriesResistance]
  -[HalogenCalcTypeC setSeriesResistance:]
  -[HalogenCalcTypeC seriesRCResistance]
  -[HalogenCalcTypeC setSeriesRCResistance:]
  -[HalogenCalcTypeC LDCMACCapacitance]
  -[HalogenCalcTypeC setLDCMACCapacitance:]
  -[HalogenCalcTypeC seriesTotalImpedance]
  -[HalogenCalcTypeC setSeriesTotalImpedance:]


(DockState)
	// class methods
	+[(DockState) valueWithDockState:]

	// instance methods
	-[(DockState) dockStateValue]

01 00 0700 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: ASAssetQuery 
01 00 0900 /usr/lib/libIOAccessoryManager.dylib: BaseResourceArbiterClient 
01 00 0a00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCondition 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionItem 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0e00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPipe 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSTask 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0900 /usr/lib/libIOAccessoryManager.dylib: ResourceArbiterClient 
