|| __DATA.__data _EDConversationFlagsChanged
|| __DATA.__data _EDReadLaterCloudStorageDictionaryKeyDate
|| __DATA.__data _EDReadLaterCloudStorageDictionaryKeyDisplayDate
|| __DATA.__data _EDReadLaterCloudStorageDictionaryKeyMessageID
|| __DATA.__data _EDSpotlightVerificationActivityIdentifier
|| __DATA.__data _EDWidgetUpdateActivityIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddBrandIndicatorsTableUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddDisplayDateColumnUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddFollowUpJsonStringForModelEvaluationForSuggestionsColumnUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddMessagesBrandIndicatorColumnUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddMessagesDeletedDateReceivedIndexUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddMessagesFollowUpColumnUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddMessagesSearchableMessageColumnUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddReadLaterTableUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddRebuildTableUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddRemoteContentLinksTableUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddRichLinkTableUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddSearchableDataDetectionResultsTableUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddSendLaterTableUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddSendersTableUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddThreadTablesUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDAddUnsubscribeFlagsStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDExistingMessageWithMessageIDHeader
|| __DATA.__objc_data _OBJC_CLASS_$_EDInteractionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_EDLocalizableStrings
|| __DATA.__objc_data _OBJC_CLASS_$_EDMailboxAction
|| __DATA.__objc_data _OBJC_CLASS_$_EDMessageActionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_EDMessageActionProvider
|| __DATA.__objc_data _OBJC_CLASS_$_EDMessageComparisonPredicateParser
|| __DATA.__objc_data _OBJC_CLASS_$_EDMessageCompoundPredicateParser
|| __DATA.__objc_data _OBJC_CLASS_$_EDMessageListItemPredicates
|| __DATA.__objc_data _OBJC_CLASS_$_EDMessagePredicateParser
|| __DATA.__objc_data _OBJC_CLASS_$_EDMessageQueryParser
|| __DATA.__objc_data _OBJC_CLASS_$_EDMessageQueryParserObject
|| __DATA.__objc_data _OBJC_CLASS_$_EDMessageQueryTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_EDMigrateBlockedSenderEnabledToBlockedSenderActionEnumUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDMigrateUserDefaultsUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDNonAcceptingServer
|| __DATA.__objc_data _OBJC_CLASS_$_EDPBInteractionEventCategoryInferred
|| __DATA.__objc_data _OBJC_CLASS_$_EDPBInteractionEventCategoryMarked
|| __DATA.__objc_data _OBJC_CLASS_$_EDPBInteractionEventFlagChanged
|| __DATA.__objc_data _OBJC_CLASS_$_EDPBInteractionEventForwardDraftStarted
|| __DATA.__objc_data _OBJC_CLASS_$_EDPBInteractionEventForwardSent
|| __DATA.__objc_data _OBJC_CLASS_$_EDPBInteractionEventMarkedMuteThread
|| __DATA.__objc_data _OBJC_CLASS_$_EDPBInteractionEventMessageCopied
|| __DATA.__objc_data _OBJC_CLASS_$_EDPBInteractionEventMessageFetched
|| __DATA.__objc_data _OBJC_CLASS_$_EDPBInteractionEventReadChanged
|| __DATA.__objc_data _OBJC_CLASS_$_EDPBInteractionEventReplyDraftStarted
|| __DATA.__objc_data _OBJC_CLASS_$_EDPBInteractionEventReplySent
|| __DATA.__objc_data _OBJC_CLASS_$_EDPBModelFeaturesImportant
|| __DATA.__objc_data _OBJC_CLASS_$_EDPBModelFeaturesPromotion
|| __DATA.__objc_data _OBJC_CLASS_$_EDPETInteractionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_EDPETQuotaReachedEvent
|| __DATA.__objc_data _OBJC_CLASS_$_EDPersistenceDatabaseJournal
|| __DATA.__objc_data _OBJC_CLASS_$_EDPersonaPersistenceLayoutManager
|| __DATA.__objc_data _OBJC_CLASS_$_EDPopulateSendersTableMigrationStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDReadLaterCloudStorageChangeElement
|| __DATA.__objc_data _OBJC_CLASS_$_EDRemoveUnusedSchemaTableUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDRenameThreadsTableUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDRichLinkData
|| __DATA.__objc_data _OBJC_CLASS_$_EDSearchableIndexPersistenceRichLinkDatum
|| __DATA.__objc_data _OBJC_CLASS_$_EDSearchableIndexRichLinkItemMetadatum
|| __DATA.__objc_data _OBJC_CLASS_$_EDSearchableMessagesIndexReindexTypeUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_EDSmartSortSuggestionsInterface
|| __DATA.__objc_data _OBJC_CLASS_$_EDVisibleMessagesReloadRegistry
|| __DATA.__objc_data _OBJC_CLASS_$_MUIBucketEphemeralSenderList
|| __DATA.__objc_data _OBJC_CLASS_$_MUIBucketSenderCloudStorage
|| __DATA.__objc_data _OBJC_CLASS_$_MUIBucketSendersCloudStorageUpgrader
|| __DATA.__objc_data _OBJC_CLASS_$_MUIBucketUnscreenedSendersQueryHandler
|| __DATA.__objc_data _OBJC_CLASS_$__EDAssetDownloadSchedulerContinuation
|| __DATA.__objc_data _OBJC_CLASS_$__EDGroupedSenderList
|| __DATA.__objc_data _OBJC_CLASS_$__EDMessageChangeManagerFlagChange
|| __DATA.__objc_data _OBJC_CLASS_$__EDUserActionState
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddBrandIndicatorsTableUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddDisplayDateColumnUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddFollowUpJsonStringForModelEvaluationForSuggestionsColumnUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddMessagesBrandIndicatorColumnUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddMessagesDeletedDateReceivedIndexUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddMessagesFollowUpColumnUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddMessagesSearchableMessageColumnUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddReadLaterTableUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddRebuildTableUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddRemoteContentLinksTableUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddRichLinkTableUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddSearchableDataDetectionResultsTableUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddSendLaterTableUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddSendersTableUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddThreadTablesUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDAddUnsubscribeFlagsStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDExistingMessageWithMessageIDHeader
|| __DATA.__objc_data _OBJC_METACLASS_$_EDInteractionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_EDLocalizableStrings
|| __DATA.__objc_data _OBJC_METACLASS_$_EDMailboxAction
|| __DATA.__objc_data _OBJC_METACLASS_$_EDMessageActionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_EDMessageActionProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_EDMessageComparisonPredicateParser
|| __DATA.__objc_data _OBJC_METACLASS_$_EDMessageCompoundPredicateParser
|| __DATA.__objc_data _OBJC_METACLASS_$_EDMessageListItemPredicates
|| __DATA.__objc_data _OBJC_METACLASS_$_EDMessagePredicateParser
|| __DATA.__objc_data _OBJC_METACLASS_$_EDMessageQueryParser
|| __DATA.__objc_data _OBJC_METACLASS_$_EDMessageQueryParserObject
|| __DATA.__objc_data _OBJC_METACLASS_$_EDMessageQueryTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_EDMigrateBlockedSenderEnabledToBlockedSenderActionEnumUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDMigrateUserDefaultsUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDNonAcceptingServer
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventCategoryInferred
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventCategoryMarked
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventFlagChanged
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventForwardDraftStarted
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventForwardSent
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventMarkedMuteThread
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventMessageCopied
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventMessageFetched
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventReadChanged
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventReplyDraftStarted
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventReplySent
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPBModelFeaturesImportant
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPBModelFeaturesPromotion
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPETInteractionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPETQuotaReachedEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPersistenceDatabaseJournal
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPersonaPersistenceLayoutManager
|| __DATA.__objc_data _OBJC_METACLASS_$_EDPopulateSendersTableMigrationStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDReadLaterCloudStorageChangeElement
|| __DATA.__objc_data _OBJC_METACLASS_$_EDRemoveUnusedSchemaTableUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDRenameThreadsTableUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDRichLinkData
|| __DATA.__objc_data _OBJC_METACLASS_$_EDSearchableIndexPersistenceRichLinkDatum
|| __DATA.__objc_data _OBJC_METACLASS_$_EDSearchableIndexRichLinkItemMetadatum
|| __DATA.__objc_data _OBJC_METACLASS_$_EDSearchableMessagesIndexReindexTypeUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_EDSmartSortSuggestionsInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_EDVisibleMessagesReloadRegistry
|| __DATA.__objc_data _OBJC_METACLASS_$_MUIBucketEphemeralSenderList
|| __DATA.__objc_data _OBJC_METACLASS_$_MUIBucketSenderCloudStorage
|| __DATA.__objc_data _OBJC_METACLASS_$_MUIBucketSendersCloudStorageUpgrader
|| __DATA.__objc_data _OBJC_METACLASS_$_MUIBucketUnscreenedSendersQueryHandler
|| __DATA.__objc_data _OBJC_METACLASS_$__EDAssetDownloadSchedulerContinuation
|| __DATA.__objc_data _OBJC_METACLASS_$__EDGroupedSenderList
|| __DATA.__objc_data _OBJC_METACLASS_$__EDMessageChangeManagerFlagChange
|| __DATA.__objc_data _OBJC_METACLASS_$__EDUserActionState
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._appBackground
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._appLaunch
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._appResume
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._categoryInferred
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._categoryMarked
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._eventName
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._flagChanged
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._forwardDraftStarted
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._forwardSent
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._linkClicked
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._markedMuteThread
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._messageCopied
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._messageFetched
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._messageMoved
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._messageSent
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._messageViewEnd
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._messageViewStart
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._readChanged
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._replyDraftStarted
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._replySent
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._sequenceNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEvent._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryInferred._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryInferred._categoryType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryInferred._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryInferred._featuresImportant
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryInferred._featuresPromotion
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryInferred._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryInferred._mailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryInferred._mailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryInferred._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryInferred._modelId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryInferred._modelVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryInferred._positive
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryInferred._score
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryMarked._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryMarked._categoryType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryMarked._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryMarked._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryMarked._mailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryMarked._mailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryMarked._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryMarked._positive
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventCategoryMarked._removeAllUserOverrides
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventFlagChanged._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventFlagChanged._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventFlagChanged._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventFlagChanged._mailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventFlagChanged._mailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventFlagChanged._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventFlagChanged._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventForwardDraftStarted._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventForwardDraftStarted._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventForwardDraftStarted._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventForwardDraftStarted._mailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventForwardDraftStarted._mailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventForwardDraftStarted._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventForwardSent._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventForwardSent._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventForwardSent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventForwardSent._mailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventForwardSent._mailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventForwardSent._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventHeader._categoryRootInstalled
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventHeader._deviceId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventHeader._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventHeader._locale
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventHeader._timezoneOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventHeader._userId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventHeader._userSegment
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventHeader._version
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventLinkClicked._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventLinkClicked._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventLinkClicked._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventLinkClicked._mailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventLinkClicked._mailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventLinkClicked._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMarkedMuteThread._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMarkedMuteThread._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMarkedMuteThread._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageCopied._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageCopied._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageCopied._fromMailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageCopied._fromMailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageCopied._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageCopied._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageCopied._toMailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageCopied._toMailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageMoved._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageMoved._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageMoved._fromMailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageMoved._fromMailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageMoved._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageMoved._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageMoved._toMailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageMoved._toMailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageSent._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageSent._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageSent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageSent._headers
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageSent._mailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageSent._mailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageSent._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewEnd._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewEnd._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewEnd._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewEnd._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewEnd._mailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewEnd._mailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewEnd._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewEnd._scrolledToEnd
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewStart._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewStart._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewStart._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewStart._mailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewStart._mailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventMessageViewStart._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReadChanged._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReadChanged._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReadChanged._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReadChanged._mailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReadChanged._mailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReadChanged._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReadChanged._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReplyDraftStarted._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReplyDraftStarted._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReplyDraftStarted._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReplyDraftStarted._mailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReplyDraftStarted._mailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReplyDraftStarted._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReplySent._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReplySent._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReplySent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReplySent._mailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReplySent._mailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBInteractionEventReplySent._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageData._accountId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageData._conversationId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageData._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageData._headers
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageData._mailboxId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageData._mailboxType
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageData._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageDataIDOnly._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageDataIDOnly._messageId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._bccAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._bccContactIds
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._bccDomains
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._bccIsVips
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._ccAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._ccContactIds
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._ccDomains
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._ccIsVips
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._dateReceived
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._listId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._messageIsForwarded
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._messageIsReply
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._references
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._sender
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._senderContactId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._senderDomain
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._senderIsVip
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._subjectWords
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._toAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._toContactIds
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._toDomains
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._toIsVips
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._userIsBcc
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._userIsCc
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._userIsSender
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBMessageHeaders._userIsTo
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._ccContainsContact
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._ccIsTopDirectAddressesBasedOnRespond
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._ccIsTopDirectAddressesBasedOnScroll
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._ccIsTopDirectAddressesBasedOnSend
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._ccIsTopDirectAddressesBasedOnView
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._ccIsTopIndirectAddressesBasedOnRespond
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._ccIsTopIndirectAddressesBasedOnScroll
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._ccIsTopIndirectAddressesBasedOnSend
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._ccIsTopIndirectAddressesBasedOnView
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._ccIsVip
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._fromListId
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._messageIsForward
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._messageIsReply
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._numRecipients
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._senderIsContact
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._senderIsTopDirectAddressesBasedOnRespond
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._senderIsTopDirectAddressesBasedOnScroll
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._senderIsTopDirectAddressesBasedOnSend
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._senderIsTopDirectAddressesBasedOnView
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._senderIsTopIndirectAddressesBasedOnRespond
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._senderIsTopIndirectAddressesBasedOnScroll
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._senderIsTopIndirectAddressesBasedOnSend
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._senderIsTopIndirectAddressesBasedOnView
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._senderIsVip
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._subjectIsTopWordsBasedOnRespond
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._subjectIsTopWordsBasedOnScroll
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._subjectIsTopWordsBasedOnSend
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._subjectIsTopWordsBasedOnView
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._timeReceived
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._toContainsContact
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._toIsTopDirectAddressesBasedOnRespond
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._toIsTopDirectAddressesBasedOnScroll
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._toIsTopDirectAddressesBasedOnSend
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._toIsTopDirectAddressesBasedOnView
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._toIsTopIndirectAddressesBasedOnRespond
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._toIsTopIndirectAddressesBasedOnScroll
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._toIsTopIndirectAddressesBasedOnSend
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._toIsTopIndirectAddressesBasedOnView
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._toIsVip
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._unknownFeatureCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._userIsBcc
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._userIsCc
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._userIsSender
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesImportant._userIsTo
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesPromotion._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesPromotion._headerKeyFilteredCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesPromotion._language
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesPromotion._toCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPBModelFeaturesPromotion._unknownFeatureCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPETBatchedWrapper._quotaEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPETBatchedWrapper._rawData
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPETBatchedWrapper._submittedEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPETQuotaReachedEvent._droppedEventsCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPETQuotaReachedEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPETQuotaReachedEvent._sequenceNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPETQuotaReachedEvent._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPETQuotaReachedEvent._timezoneOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPETSubmittedEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPETSubmittedEvent._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_EDPETSubmittedEvent._timezoneOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$__EDThreadPersistence_PersistedThread._didCreateTempMessagesView
|| __DATA.__objc_ivar _OBJC_IVAR_$__EDWrappedMessage._databaseID
|| __DATA_CONST.__const _EDClientStateForegroundStateDidChangeKeyIsForeground
|| __DATA_CONST.__const _EDClientStateForegroundStateDidChangeNotification
|| __DATA_CONST.__const _EDClientStateForegroundStateVisibleMailboxesDidChangeNotification
|| __DATA_CONST.__const _EDClientStateIsRunningTestsKey
|| __DATA_CONST.__const _EDClientStateVisibleMailboxObjectIDsKey
|| __DATA_CONST.__const _EDConversationFlagsChangedConversationIDKey
|| __DATA_CONST.__const _EDConversationFlagsChangesKey
|| __DATA_CONST.__const _EDConversationFlagsKey
|| __DATA_CONST.__const _EDConversationFlagsOldFlags
|| __DATA_CONST.__const _EDConversationFlagsReason
|| __DATA_CONST.__const _EDConversationRemoteCloudKitStoragePushNotificationName
|| __DATA_CONST.__const _EDDDResultCategoryAddress
|| __DATA_CONST.__const _EDDDResultCategoryCalendarEvent
|| __DATA_CONST.__const _EDDDResultCategoryLink
|| __DATA_CONST.__const _EDDDResultCategoryMisc
|| __DATA_CONST.__const _EDDDResultCategoryPhoneNumber
|| __DATA_CONST.__const _EDInteractionEventLogDataKeyDuration
|| __DATA_CONST.__const _EDInteractionEventLogDataKeyFeatures
|| __DATA_CONST.__const _EDInteractionEventLogDataKeyModelIdentifier
|| __DATA_CONST.__const _EDInteractionEventLogDataKeyModelVersion
|| __DATA_CONST.__const _EDInteractionEventLogDataKeyScore
|| __DATA_CONST.__const _EDInteractionEventLogDataKeyScrolledToEnd
|| __DATA_CONST.__const _EDInteractionEventLogDataKeyValue
|| __DATA_CONST.__const _EDMessageActionHandlerProvidersChangedNotification
|| __DATA_CONST.__const _EDMessageListItemPredicatesKeyPathBody
|| __DATA_CONST.__const _EDMessageListItemPredicatesKeyPathMailboxObjectIDs
|| __DATA_CONST.__const _EDMessageListItemPredicatesKeyPathRecipientCcAddress
|| __DATA_CONST.__const _EDMessageListItemPredicatesKeyPathRecipientCcDisplayName
|| __DATA_CONST.__const _EDMessageListItemPredicatesKeyPathRecipientToAddress
|| __DATA_CONST.__const _EDMessageListItemPredicatesKeyPathRecipientToDisplayName
|| __DATA_CONST.__const _EDMessageListItemPredicatesKeyPathSenderAddress
|| __DATA_CONST.__const _EDMessageListItemPredicatesKeyPathSenderDisplayName
|| __DATA_CONST.__const _EDMessageListItemPredicatesKeyPathSpotlight
|| __DATA_CONST.__const _EDMessageListItemPredicatesKeyPathSpotlightAnyRecipient
|| __DATA_CONST.__const _EDMessageListItemPredicatesKeyPathSpotlightSender
|| __DATA_CONST.__const _EDMessageListItemPredicatesKeyPathSpotlightSubject
|| __DATA_CONST.__const _EDMessageListItemPredicatesKeyPathSubject
|| __DATA_CONST.__const _EDNotificationDidSyncMailbox
|| __DATA_CONST.__const _EDNotificationKeyMailbox
|| __DATA_CONST.__const _EDNotificationWillSyncMailbox
|| __DATA_CONST.__const _EDPersistenceProtectedDatabaseFilename
|| __DATA_CONST.__const _EDPropertyMapperLookupKeySelectIndex
|| __DATA_CONST.__const _EDSearchableIndexItemEncryptedAttributeName
|| __DATA_CONST.__const _EDSearchableIndexSchedulerActivityTypeBudgeted
|| __DATA_CONST.__const _EDSearchableIndexSchedulerActivityTypeMaintenance
|| __DATA_CONST.__const _EDSendersCloudStorageUpgradeStatusDefault
|| __DATA_CONST.__const _EDSyncableSettingsKeyTrackingProtection
|| __DATA_CONST.__const _EDSyncableSettingsMapKeyCloudKey
|| __DATA_CONST.__const _EDSyncableSettingsMapKeyCustomMergeBlock
|| __DATA_CONST.__const _EDSyncableSettingsMapKeyMergeType
|| __DATA_CONST.__const _EDUserDefaultUserNotificationMailboxCutoffs
|| __DATA_CONST.__const _EMPersistenceConversationFlagChangeKeyIsMuted
|| __DATA_CONST.__const _EMPersistenceConversationFlagChangeKeyIsVIP
|| __DATA_CONST.__const _LibraryMessageRichLinkDataBecameAvailableNotification
|| __DATA_CONST.__const _MUIBucketEphemeralSenderListWriteLocation
|| __DATA_CONST.__const _MUIBucketSenderCloudStorageKeyBucket
|| __DATA_CONST.__const _MUIBucketSenderCloudStorageKeyEmailAddress
|| __DATA_CONST.__const _MUIBucketSenderCloudStorageKeyUpdatedDeviceIdentifier
|| __DATA_CONST.__const _MUIBucketSenderCloudStorageKeyUserInitiated
|| __DATA_CONST.__const _MUIBucketSendersCloudStorageUpgraderesetCloudSenders
|| __DATA_CONST.__const _kEDSearchableIndexOutboxIdentifier
|| __DATA_CONST.__const _kEDSearchableIndexTransactionAttributeKey
|| __DATA_CONST.__const _kEDSearchableIndexTransportIdentifier
|| __DATA_CONST.__const _kMUIBucketEphemeralSenderList
|| __DATA_CONST.__const _kMUIBucketEphemeralSenderListWriteNotification
|| __DATA_CONST.__const _kSearchableIndexItemAddressesAttributeKey
|| __DATA_CONST.__const _kSearchableIndexItemLinksAttributeKey
|| __DATA_CONST.__const _kSearchableIndexItemRichLinkIDAttributeKey
|| __DATA_CONST.__const _kSearchableIndexItemRichLinkTitleAttributeKey
|| __DATA_CONST.__const _kSearchableIndexItemRichLinkURLAttributeKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DefaultEDRemindMeNotificationControllerAlarmDateProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ECWebContentObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDAccountECAccountTransformer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDAccountRepository
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDActivityPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDActivityRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDAssetDownloadScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDAttachmentMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDAttachmentPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDAttachmentPersistenceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDBIMIManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDBiomeInteractionEventLog
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDCachingMailboxPredictor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDCategorySubsystem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDClientResumer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDClientState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDCloudKitControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDCloudMirroringPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDConversationDailyCloudExportActivityManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDConversationDailyiCloudExporter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDConversationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDConversationMultipleRemoteStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDConversationPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDConversationPruningActivityManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDConversationRemoteCloudKitStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDConversationRemoteKVSStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDDaemonInterfaceFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDDataDetectionPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDDefaultSendLaterUpdateControllerAlarmDateProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDDiagnosticInfoGatherer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDDifferentialPrivacyReporter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDFetchController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDGmailLabelPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDGroupedSenderQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDHeuristicsMailboxPredictor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDInMemoryThread
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDInMemoryThreadQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDInteractionEventLogLegacyPersistentBitsProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDInteractionEventLogMultiplexer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDInteractionEventLogSaltProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDInteractionLogger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDListUnsubscribeHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDLocalActionPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMailDropMetadataGenerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMailDropWebViewScriptHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMailDynamicDataAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMailboxActionPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMailboxPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMailboxPredictionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMailboxProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMailboxRepository
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMessageAttachmentMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMessageChangeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMessageCountQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMessageDataLayoutManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMessagePersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMessagePersistenceStatistics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMessageQueryEvaluator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMessageQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMessageQueryHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMessageRepository
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMessageRepositoryQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDMessageTransformer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDOutgoingMessageRepository
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPBInteractionEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPBInteractionEventAppBackground
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPBInteractionEventAppLaunch
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPBInteractionEventAppResume
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPBInteractionEventHeader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPBInteractionEventLinkClicked
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPBInteractionEventMessageMoved
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPBInteractionEventMessageSent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPBInteractionEventMessageViewEnd
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPBInteractionEventMessageViewStart
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPBMessageData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPBMessageDataIDOnly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPBMessageHeaders
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPETBatchedWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPETInteractionEventLog
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPETSubmittedEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPersistedMessageQueryIterator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPersistenceAssociationPlaceholder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPersistenceDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPersistenceDatabaseConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPersistenceDatabaseConnectionPool
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPersistenceDatabaseGenerationWindow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPersistenceDatabaseJournalManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPersistenceDatabaseSchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPersistenceForeignKeyPlaceholder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPersistenceHookRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDPrecomputedThreadQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDProtectedDatabasePersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDQueryCreator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDReadLaterCloudStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDReadLaterPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDRemindMeNotificationController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDRemoteClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDRemoteClientResumer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDRemoteContentCacheConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDRemoteContentManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDRemoteContentPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDRichLinkPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndex
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexAttachmentItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexAttachmentItemMetadatum
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexBudgetConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexClientState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexPendingItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexPersistenceAttachmentDatum
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexRichLinkItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexSubjectTester
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexUpdates
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexVerificationData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSearchableIndexVerifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSendLaterPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSendLaterUpdateController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSenderPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSenderRepository
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDServerMessagePersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDServerMessagePersistenceFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSubjectTokenizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDSyncableSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDTableMetadataPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDTaskScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDThreadMigrator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDThreadPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDThreadQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDThreadReloadSummaryHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDThreadScopeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDTransactionService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDUbiquitousConversationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDUpdateThrottler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDUserNotificationFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDUserNotificationMailboxCutoffController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDVIPManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDVIPManagerProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDWebContentParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDWebContentParserResults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDWebContentParserState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDWidgetUpdateController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_EDiCloudAliasSupport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDLazyWrappedMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDMailboxServerCount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDMessageDuplicateInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDMessageItemIDCollector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDPartitionedObjectIDs
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDPersistenceDatabaseConnectionWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDThreadMigrationState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDThreadPersistence_PersistedThread
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDThreadPersistence_SQLHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDThreadPersistence_StatementCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDThreadPersistence_ThreadMessages
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDThreadPersistence_ThreadScope
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDThreadPositionChangeSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDThreadQueryUnderlyingHandlers
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDThreadScopeInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__EDWrappedMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MSTTLReference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DefaultEDRemindMeNotificationControllerAlarmDateProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ECWebContentObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDAccountECAccountTransformer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDAccountRepository
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDActivityPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDActivityRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDAssetDownloadScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDAttachmentMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDAttachmentPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDAttachmentPersistenceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDBIMIManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDBiomeInteractionEventLog
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDCachingMailboxPredictor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDCategorySubsystem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDClientResumer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDClientState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDCloudKitControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDCloudMirroringPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDConversationDailyCloudExportActivityManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDConversationDailyiCloudExporter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDConversationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDConversationMultipleRemoteStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDConversationPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDConversationPruningActivityManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDConversationRemoteCloudKitStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDConversationRemoteKVSStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDDaemonInterfaceFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDDataDetectionPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDDefaultSendLaterUpdateControllerAlarmDateProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDDiagnosticInfoGatherer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDDifferentialPrivacyReporter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDFetchController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDGmailLabelPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDGroupedSenderQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDHeuristicsMailboxPredictor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDInMemoryThread
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDInMemoryThreadQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDInteractionEventLogLegacyPersistentBitsProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDInteractionEventLogMultiplexer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDInteractionEventLogSaltProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDInteractionLogger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDListUnsubscribeHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDLocalActionPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMailDropMetadataGenerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMailDropWebViewScriptHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMailDynamicDataAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMailboxActionPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMailboxPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMailboxPredictionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMailboxProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMailboxRepository
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMessageAttachmentMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMessageChangeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMessageCountQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMessageDataLayoutManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMessagePersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMessagePersistenceStatistics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMessageQueryEvaluator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMessageQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMessageQueryHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMessageRepository
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMessageRepositoryQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDMessageTransformer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDOutgoingMessageRepository
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPBInteractionEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventAppBackground
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventAppLaunch
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventAppResume
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventHeader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventLinkClicked
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventMessageMoved
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventMessageSent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventMessageViewEnd
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPBInteractionEventMessageViewStart
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPBMessageData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPBMessageDataIDOnly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPBMessageHeaders
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPETBatchedWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPETInteractionEventLog
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPETSubmittedEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPersistedMessageQueryIterator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPersistenceAssociationPlaceholder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPersistenceDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPersistenceDatabaseConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPersistenceDatabaseConnectionPool
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPersistenceDatabaseGenerationWindow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPersistenceDatabaseJournalManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPersistenceDatabaseSchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPersistenceForeignKeyPlaceholder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPersistenceHookRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDPrecomputedThreadQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDProtectedDatabasePersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDQueryCreator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDReadLaterCloudStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDReadLaterPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDRemindMeNotificationController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDRemoteClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDRemoteClientResumer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDRemoteContentCacheConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDRemoteContentManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDRemoteContentPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDRichLinkPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndex
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexAttachmentItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexAttachmentItemMetadatum
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexBudgetConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexClientState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexPendingItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexPersistenceAttachmentDatum
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexRichLinkItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexSubjectTester
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexUpdates
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexVerificationData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSearchableIndexVerifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSendLaterPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSendLaterUpdateController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSenderPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSenderRepository
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDServerMessagePersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDServerMessagePersistenceFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSubjectTokenizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDSyncableSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDTableMetadataPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDTaskScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDThreadMigrator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDThreadPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDThreadQueryHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDThreadReloadSummaryHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDThreadScopeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDTransactionService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDUbiquitousConversationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDUpdateThrottler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDUserNotificationFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDUserNotificationMailboxCutoffController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDVIPManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDVIPManagerProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDWebContentParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDWebContentParserResults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDWebContentParserState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDWidgetUpdateController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_EDiCloudAliasSupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDLazyWrappedMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDMailboxServerCount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDMessageDuplicateInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDMessageItemIDCollector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDPartitionedObjectIDs
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDPersistenceDatabaseConnectionWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDThreadMigrationState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDThreadPersistence_PersistedThread
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDThreadPersistence_SQLHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDThreadPersistence_StatementCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDThreadPersistence_ThreadMessages
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDThreadPersistence_ThreadScope
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDThreadPositionChangeSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDThreadQueryUnderlyingHandlers
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDThreadScopeInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__EDWrappedMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MSTTLReference
|| __TEXT.__const _EDInteractionEventLogVersion
|| __TEXT.__const _EDMessageBatchSize
|| __TEXT.__const _EDMessageRepositoryOneShotBatchSize
|| __TEXT.__const _EDMessageRepositoryOneShotMaxInitialSize
|| __TEXT.__const _EDNoMessageLimit
|| __TEXT.__const _EDSearchableIndexMaxAttachmentItemsToIndexPerBatch
|| __TEXT.__const _EDSearchableIndexMaxRichLinkItemsToIndexPerBatch
|| __TEXT.__const _kEDSearchableIndexMaximumBodySizeForBodyIndexing
|| __TEXT.__const _kFailingVerificationFullReindexThreshold
|| __TEXT.__const _kMaximumNumberOfMessageIdsToSync
|| __TEXT.__const _kSpotlightVerificationSampleSize
|| __TEXT.__text _EDAttachmentsLog
|| __TEXT.__text _EDDescriptionForConversationFlags
|| __TEXT.__text _EDPBInteractionEventAppBackgroundReadFrom
|| __TEXT.__text _EDPBInteractionEventAppLaunchReadFrom
|| __TEXT.__text _EDPBInteractionEventAppResumeReadFrom
|| __TEXT.__text _EDPBInteractionEventCategoryInferredReadFrom
|| __TEXT.__text _EDPBInteractionEventCategoryMarkedReadFrom
|| __TEXT.__text _EDPBInteractionEventFlagChangedReadFrom
|| __TEXT.__text _EDPBInteractionEventForwardDraftStartedReadFrom
|| __TEXT.__text _EDPBInteractionEventForwardSentReadFrom
|| __TEXT.__text _EDPBInteractionEventHeaderReadFrom
|| __TEXT.__text _EDPBInteractionEventLinkClickedReadFrom
|| __TEXT.__text _EDPBInteractionEventMarkedMuteThreadReadFrom
|| __TEXT.__text _EDPBInteractionEventMessageCopiedReadFrom
|| __TEXT.__text _EDPBInteractionEventMessageFetchedReadFrom
|| __TEXT.__text _EDPBInteractionEventMessageMovedReadFrom
|| __TEXT.__text _EDPBInteractionEventMessageSentReadFrom
|| __TEXT.__text _EDPBInteractionEventMessageViewEndReadFrom
|| __TEXT.__text _EDPBInteractionEventMessageViewStartReadFrom
|| __TEXT.__text _EDPBInteractionEventReadChangedReadFrom
|| __TEXT.__text _EDPBInteractionEventReadFrom
|| __TEXT.__text _EDPBInteractionEventReplyDraftStartedReadFrom
|| __TEXT.__text _EDPBInteractionEventReplySentReadFrom
|| __TEXT.__text _EDPBMessageDataIDOnlyReadFrom
|| __TEXT.__text _EDPBMessageDataReadFrom
|| __TEXT.__text _EDPBMessageHeadersReadFrom
|| __TEXT.__text _EDPBModelFeaturesImportantReadFrom
|| __TEXT.__text _EDPBModelFeaturesPromotionReadFrom
|| __TEXT.__text _EDPETBatchedWrapperReadFrom
|| __TEXT.__text _EDPETInteractionEventReadFrom
|| __TEXT.__text _EDPETQuotaReachedEventReadFrom
|| __TEXT.__text _EDPETSubmittedEventReadFrom
|| __TEXT.__text _EDRemindMeLog
|| __TEXT.__text _EDSenderLog
|| __TEXT.__text _EDUserNotificationCenterLog
|| __TEXT.__text __ef_log_EDBIMIManager
|| __TEXT.__text __ef_log_EDDataDetectionPersistence
|| __TEXT.__text __ef_log_EDGroupedSenderQueryHandler
|| __TEXT.__text __ef_log_EDMailDropMetadataGenerator
|| __TEXT.__text __ef_log_EDMailboxProvider
|| __TEXT.__text __ef_log_EDPopulateSendersTableMigrationStep
|| __TEXT.__text __ef_log_EDRemoteContentCacheConfiguration
|| __TEXT.__text __ef_log_EDRemoteContentManager
|| __TEXT.__text __ef_log_EDRemoteContentPersistence
|| __TEXT.__text __ef_log_EDRichLinkPersistence
|| __TEXT.__text __ef_log_EDSyncableSettings
|| __TEXT.__text __ef_log_EDWebContentParser
|| __TEXT.__text __ef_log_MUIBucketEphemeralSenderList
|| __TEXT.__text __ef_log_MUIBucketSenderCloudStorage
|| __TEXT.__text __ef_log_MUIBucketSendersCloudStorageUpgrader
|| __TEXT.__text __ef_log_MUIBucketUnscreenedSendersQueryHandler
|| __TEXT.__text __expandForComparisonPredicate
|| __TEXT.__text __expandForCompoundPredicate
|| __TEXT.__text __expandPredicate
|| __TEXT.__text __groupMessagesBySender
|| __TEXT.__text __indexedEmptySubjectDiags
|| __TEXT.__text _fuzzedCountForCount
|| __TEXT.__text _fuzzedIntervalForInterval
__ Accounts: _kAccountDataclassMail
__ AppSupport: _OBJC_CLASS_$_CPNetworkObserver
__ BackBoardServices: _OBJC_CLASS_$_BKSProcessAssertion
__ BiomeStorage: _OBJC_CLASS_$_BMStoreConfig
__ BiomeStorage: _bm_defaultStoreSegmentSize
__ BiomeStreams: _OBJC_CLASS_$_BMStoreStream
__ CloudKit: _CKRetryAfterSecondsForError
__ CloudKit: _OBJC_CLASS_$_CKContainerOptions
__ CloudKit: _OBJC_CLASS_$_CKNotification
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactGivenNameKey
__ Contacts: _CNContactIdentifierKey
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ ContactsFoundation: _OBJC_CLASS_$_CNNameComponentsStringTokenizer
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreData: _NSCloudKitMirroringDelegateDidResetSyncNotificationName
__ CoreData: _NSCloudKitMirroringDelegateWillResetSyncNotificationName
__ CoreData: _NSPersistentHistoryTrackingKey
__ CoreData: _NSPersistentStoreMirroringDelegateOptionKey
__ CoreData: _OBJC_CLASS_$_NSCloudKitMirroringDelegate
__ CoreData: _OBJC_CLASS_$_NSCloudKitMirroringDelegateOptions
__ CoreData: _OBJC_CLASS_$_NSCloudKitMirroringExportRequest
__ CoreData: _OBJC_CLASS_$_NSCloudKitMirroringImportRequest
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSPersistentContainer
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryChangeRequest
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryToken
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFDictionaryApplyFunction
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryRemoveAllValues
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringConvertEncodingToIANACharSetName
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSURLFileProtectionComplete
__ CoreFoundation: _NSURLFileProtectionCompleteUnlessOpen
__ CoreFoundation: _NSURLFileProtectionCompleteUntilFirstUserAuthentication
__ CoreFoundation: _NSURLFileProtectionKey
__ CoreFoundation: _NSURLTypeIdentifierKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGRectZero
__ CoreML: _OBJC_CLASS_$_MLArrayBatchProvider
__ CoreML: _OBJC_CLASS_$_MLFeatureValue
__ CoreML: _OBJC_CLASS_$_MLModel
__ CoreML: _OBJC_CLASS_$_MLPredictionOptions
__ CoreSpotlight: _CSMailboxArchive
__ CoreSpotlight: _CSMailboxDrafts
__ CoreSpotlight: _CSMailboxInbox
__ CoreSpotlight: _CSMailboxJunk
__ CoreSpotlight: _CSMailboxSent
__ CoreSpotlight: _CSMailboxTrash
__ CoreSpotlight: _MDItemRelatedUniqueIdentifier
__ CoreSpotlight: _MDItemSubject
__ CoreSpotlight: _MDQueryResultMatchingHints
__ CoreSpotlight: _OBJC_CLASS_$_CSCustomAttributeKey
__ CoreSpotlight: _OBJC_CLASS_$_CSPerson
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableIndex
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableItem
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableItemAttributeSet
__ CoreSuggestions: _OBJC_CLASS_$_SGMailIntelligenceStringHasher
__ CoreSuggestions: _OBJC_CLASS_$_SGSuggestionsService
__ DataDetectorsCore: _DDBinderHttpURLKey
__ DataDetectorsCore: _DDBinderWebURLKey
__ DataDetectorsCore: _OBJC_CLASS_$_DDScannerResult
__ DifferentialPrivacy: _OBJC_CLASS_$__DPStringRecorder
__ Email: _EMAccountSchemeDataAccess
__ Email: _EMAccountSchemeEWS
__ Email: _EMAccountSchemeIMAP
__ Email: _EMBlockedSenderManagerAddedBlockedSendersKey
__ Email: _EMBlockedSenderManagerBlockedListDidChangeNotification
__ Email: _EMBlockedSenderManagerBlockedSendersKey
__ Email: _EMBlockedSenderManagerIsBlockedSenderEnabledKey
__ Email: _EMBlockedSenderManagerRemovedBlockedSendersKey
__ Email: _EMCollectionLoadBatchSize
__ Email: _EMCollectionLoadFirstBatchSize
__ Email: _EMContentRepresentationTypeHTML
__ Email: _EMDaemonServiceAvailabilityNotification
__ Email: _EMDaemonServiceName
__ Email: _EMDatabaseIDUndefined
__ Email: _EMErrorDomain
__ Email: _EMInteractionLoggerShouldLog
__ Email: _EMInvalidCount
__ Email: _EMLogCategoryMessageLoading
__ Email: _EMMailDropItemClass
__ Email: _EMMessageListAddedItemsExtraInfoKeySnippetHintsByObjectID
__ Email: _EMMessageListAddedItemsExtraInfoKeyUnreadMessageIDs
__ Email: _EMMessageListIgnoreMessageAdditionsPredicate
__ Email: _EMMessageListItemKeyPathCCList
__ Email: _EMMessageListItemKeyPathConversationID
__ Email: _EMMessageListItemKeyPathCount
__ Email: _EMMessageListItemKeyPathDate
__ Email: _EMMessageListItemKeyPathDisplayDate
__ Email: _EMMessageListItemKeyPathDisplayMessageItemID
__ Email: _EMMessageListItemKeyPathFlagColors
__ Email: _EMMessageListItemKeyPathFlags
__ Email: _EMMessageListItemKeyPathFollowUpEndDate
__ Email: _EMMessageListItemKeyPathFollowUpIsActive
__ Email: _EMMessageListItemKeyPathFollowUpStartDate
__ Email: _EMMessageListItemKeyPathHasAttachments
__ Email: _EMMessageListItemKeyPathHasUnflagged
__ Email: _EMMessageListItemKeyPathIsBlocked
__ Email: _EMMessageListItemKeyPathIsVIP
__ Email: _EMMessageListItemKeyPathMailboxObjectIDs
__ Email: _EMMessageListItemKeyPathMailboxType
__ Email: _EMMessageListItemKeyPathMailboxes
__ Email: _EMMessageListItemKeyPathReadLaterDate
__ Email: _EMMessageListItemKeyPathReadLaterIsActive
__ Email: _EMMessageListItemKeyPathSendLaterDate
__ Email: _EMMessageListItemKeyPathSenderBucket
__ Email: _EMMessageListItemKeyPathSenderList
__ Email: _EMMessageListItemKeyPathSubject
__ Email: _EMMessageListItemKeyPathSummary
__ Email: _EMMessageListItemKeyPathToList
__ Email: _EMMessageListItemQueryOptionUpdateDisplayDate
__ Email: _EMPersistenceStatisticsKeyMessageData
__ Email: _EMPersistenceStatisticsKeyMessageDataDeleted
__ Email: _EMPersistenceStatisticsKeyMessages
__ Email: _EMPersistenceStatisticsKeyMessagesDeleted
__ Email: _EMPredicateAccountKeyPathName
__ Email: _EMPredicateMailboxKeyPathName
__ Email: _EMPredicateMailboxKeyPathType
__ Email: _EMPredicateMessageKeyPathObjectID
__ Email: _EMPrivacyProxyIsDisabledForNetwork
__ Email: _EMRecodeDataToNetwork
__ Email: _EMUbiquitouslyPersistedDictionaryKeyUpdatedAt
__ Email: _EMUbiquitouslyPersistedDictionaryKeyValue
__ Email: _EMUserDefaultBlockedSenderAction
__ Email: _EMUserDefaultBlockedSenderEnabled
__ Email: _EMUserDefaultForceInMemoryThreading
__ Email: _EMUserDefaultInteractionEventLogDebug
__ Email: _EMUserDefaultLoadRemoteContentKey
__ Email: _EMUserDefaultNewFilterCardEnabled
__ Email: _EMUserDefaultNewQueryResults
__ Email: _EMUserDefaultQueryResultComparison
__ Email: _EMUserDefaultSharingFromSafariUI
__ Email: _EMVIPsDidChangeNotification
__ Email: _EMVIPsRemovedKey
__ Email: _EMVIPsUpdatedKey
__ Email: _OBJC_CLASS_$_EMAccount
__ Email: _OBJC_CLASS_$_EMActivity
__ Email: _OBJC_CLASS_$_EMBiomeEvent
__ Email: _OBJC_CLASS_$_EMBiomeStreamDirectory
__ Email: _OBJC_CLASS_$_EMBlockedSenderManager
__ Email: _OBJC_CLASS_$_EMCollectionItemIDStateCapturer
__ Email: _OBJC_CLASS_$_EMContentRepresentation
__ Email: _OBJC_CLASS_$_EMContentRequestOptions
__ Email: _OBJC_CLASS_$_EMCreateMailboxChangeAction
__ Email: _OBJC_CLASS_$_EMDaemonInterface
__ Email: _OBJC_CLASS_$_EMDaemonInterfaceRequest
__ Email: _OBJC_CLASS_$_EMDeleteMailboxChangeAction
__ Email: _OBJC_CLASS_$_EMDeliveryAccount
__ Email: _OBJC_CLASS_$_EMFollowUp
__ Email: _OBJC_CLASS_$_EMGroupedSender
__ Email: _OBJC_CLASS_$_EMGroupedSenderObjectID
__ Email: _OBJC_CLASS_$_EMInternalPreferences
__ Email: _OBJC_CLASS_$_EMListUnsubscribeDetector
__ Email: _OBJC_CLASS_$_EMMailbox
__ Email: _OBJC_CLASS_$_EMMailboxObjectID
__ Email: _OBJC_CLASS_$_EMMailboxScope
__ Email: _OBJC_CLASS_$_EMMessage
__ Email: _OBJC_CLASS_$_EMMessageCollectionItemID
__ Email: _OBJC_CLASS_$_EMMessageConversationFlagChangeAction
__ Email: _OBJC_CLASS_$_EMMessageDeleteAction
__ Email: _OBJC_CLASS_$_EMMessageDeleteAllAction
__ Email: _OBJC_CLASS_$_EMMessageFlagChangeAction
__ Email: _OBJC_CLASS_$_EMMessageFlagChangeAllAction
__ Email: _OBJC_CLASS_$_EMMessageFollowUpAction
__ Email: _OBJC_CLASS_$_EMMessageListItemChange
__ Email: _OBJC_CLASS_$_EMMessageListItemPredicates
__ Email: _OBJC_CLASS_$_EMMessageObjectID
__ Email: _OBJC_CLASS_$_EMMessageReadLaterAction
__ Email: _OBJC_CLASS_$_EMMessageRepositoryRemoteContentURLInfo
__ Email: _OBJC_CLASS_$_EMMessageSnippetHintZoneBuilder
__ Email: _OBJC_CLASS_$_EMMessageTransferAction
__ Email: _OBJC_CLASS_$_EMMessageTransferAllAction
__ Email: _OBJC_CLASS_$_EMMoveMailboxChangeAction
__ Email: _OBJC_CLASS_$_EMObjectID
__ Email: _OBJC_CLASS_$_EMPersistenceLayoutManager
__ Email: _OBJC_CLASS_$_EMQuery
__ Email: _OBJC_CLASS_$_EMReadLater
__ Email: _OBJC_CLASS_$_EMReceivingAccount
__ Email: _OBJC_CLASS_$_EMRenameMailboxChangeAction
__ Email: _OBJC_CLASS_$_EMSearchableIndex
__ Email: _OBJC_CLASS_$_EMSearchableIndexQuery
__ Email: _OBJC_CLASS_$_EMSearchableIndexQueryExpression
__ Email: _OBJC_CLASS_$_EMSearchableIndexSchema
__ Email: _OBJC_CLASS_$_EMSearchableIndexUserQuery
__ Email: _OBJC_CLASS_$_EMSearchableItemSnippetData
__ Email: _OBJC_CLASS_$_EMSender
__ Email: _OBJC_CLASS_$_EMSenderBlockingAction
__ Email: _OBJC_CLASS_$_EMServerConfiguration
__ Email: _OBJC_CLASS_$_EMThread
__ Email: _OBJC_CLASS_$_EMThreadCollectionItemID
__ Email: _OBJC_CLASS_$_EMThreadObjectID
__ Email: _OBJC_CLASS_$_EMThreadScope
__ Email: _OBJC_CLASS_$_EMUbiquitouslyPersistedDictionary
__ Email: _OBJC_CLASS_$_EMUbiquitouslyPersistedDictionaryMergeResult
__ Email: _OBJC_CLASS_$_EMUndoIndividualAction
__ Email: _OBJC_CLASS_$_EMUndoMessageAction
__ Email: _OBJC_CLASS_$_EMUnsubscribeAction
__ Email: _OBJC_CLASS_$_EMVIP
__ Email: _kEMBiomeStreamIdentifier
__ Email: _kEMEventNameMessageListDisplayEnded
__ Email: _kEMEventNameMessageListDisplayStarted
__ Email: _kEMEventNameMessageMoved
__ Email: _kEMEventNameMessageViewEnd
__ Email: _kEMPayloadKeyAccountID
__ Email: _kEMPayloadKeyConversationID
__ Email: _kEMPayloadKeyDuration
__ Email: _kEMPayloadKeyGlobalMessageID
__ Email: _kEMPayloadKeyMailboxType
__ Email: _kEMPayloadKeyPersistentID
__ Email: _kEMSearchableIndexAttachmentIdentifierPrefix
__ Email: _kEMSearchableIndexRichLinkIdentifierPrefix
__ EmailAddressing: _OBJC_CLASS_$_EAEmailAddressParser
__ EmailAddressing: _OBJC_CLASS_$_EAEmailAddressSet
__ EmailCore: _ECHeaderAuthenticationResultPropertyTypePolicy
__ EmailCore: _ECMailAccountsDidChangeNotification
__ EmailCore: _ECMessageHeaderKeyAuthenticationResults
__ EmailCore: _ECMessageHeaderKeyContentType
__ EmailCore: _ECMessageHeaderKeyUserAgent
__ EmailCore: _ECMessageHeaderKeyXUniversallyUniqueIdentifier
__ EmailCore: _ECMessagePropertyNumberOfAttachments
__ EmailCore: _ECMessagePropertySummary
__ EmailCore: _OBJC_CLASS_$_ECAccount
__ EmailCore: _OBJC_CLASS_$_ECAngleBracketIDHash
__ EmailCore: _OBJC_CLASS_$_ECBIMIData
__ EmailCore: _OBJC_CLASS_$_ECDKIMVerifier
__ EmailCore: _OBJC_CLASS_$_ECEmailAddress
__ EmailCore: _OBJC_CLASS_$_ECEmailAddressComponents
__ EmailCore: _OBJC_CLASS_$_ECEmailCoreFramework
__ EmailCore: _OBJC_CLASS_$_ECFlagChangeMessageAction
__ EmailCore: _OBJC_CLASS_$_ECFlagChangeMessageActionResults
__ EmailCore: _OBJC_CLASS_$_ECFlagChangeUndownloadedMessageAction
__ EmailCore: _OBJC_CLASS_$_ECHeaderAuthenticationResults
__ EmailCore: _OBJC_CLASS_$_ECLabelChangeMessageAction
__ EmailCore: _OBJC_CLASS_$_ECMessageFlagChange
__ EmailCore: _OBJC_CLASS_$_ECMessageFlags
__ EmailCore: _OBJC_CLASS_$_ECServerMessage
__ EmailCore: _OBJC_CLASS_$_ECSubject
__ EmailCore: _OBJC_CLASS_$_ECTransferMessageAction
__ EmailCore: _OBJC_CLASS_$_ECTransferMessageActionItem
__ EmailCore: _OBJC_CLASS_$_ECTransferMessageActionResults
__ EmailCore: _OBJC_CLASS_$_ECTransferUndownloadedMessageAction
__ EmailFoundation: _EFARC4NormallyDistributedRandomDoubleInRange
__ EmailFoundation: _EFARC4NormallyDistributedRandomDoubleWithMinimum
__ EmailFoundation: _EFAtomicObjectLoad
__ EmailFoundation: _EFAtomicObjectRelease
__ EmailFoundation: _EFAtomicObjectReleaseIfIdentical
__ EmailFoundation: _EFAtomicObjectSetIfIdentical
__ EmailFoundation: _EFAtomicObjectSetIfNil
__ EmailFoundation: _EFBundleIdentifierForXPCConnection
__ EmailFoundation: _EFComparatorFromSortDescriptors
__ EmailFoundation: _EFCopyResponseDataForURLRequest
__ EmailFoundation: _EFDeviceUnlockedSinceBoot
__ EmailFoundation: _EFFetchSignpostLog
__ EmailFoundation: _EFFrameworkVersion
__ EmailFoundation: _EFIsNotNull
__ EmailFoundation: _EFIsNull
__ EmailFoundation: _EFIsRunningUnitTests
__ EmailFoundation: _EFObjectsAreEqual
__ EmailFoundation: _EFPostUTF8FormData
__ EmailFoundation: _EFProductName
__ EmailFoundation: _EFProtectedDataAvailable
__ EmailFoundation: _EFRegisterContentProtectionObserver
__ EmailFoundation: _EFSQLSchemaColumnNameRowID
__ EmailFoundation: _EFSQLVerboseDebugLoggingEnabled
__ EmailFoundation: _EFSQLiteErrorDomain
__ EmailFoundation: _EFSQLiteExtendedErrorCodeKey
__ EmailFoundation: _EFSaveTailspin
__ EmailFoundation: _EFStringWithInt64
__ EmailFoundation: _EFSystemBuildVersion
__ EmailFoundation: _EFUnregisterContentProtectionObserver
__ EmailFoundation: _EFVerifyFileProtectionType
__ EmailFoundation: _OBJC_CLASS_$_EFCancelationToken
__ EmailFoundation: _OBJC_CLASS_$_EFCoalescer
__ EmailFoundation: _OBJC_CLASS_$_EFDebouncer
__ EmailFoundation: _OBJC_CLASS_$_EFDevice
__ EmailFoundation: _OBJC_CLASS_$_EFFileCompression
__ EmailFoundation: _OBJC_CLASS_$_EFFileWrapper
__ EmailFoundation: _OBJC_CLASS_$_EFFuture
__ EmailFoundation: _OBJC_CLASS_$_EFInvocationToken
__ EmailFoundation: _OBJC_CLASS_$_EFLazyCache
__ EmailFoundation: _OBJC_CLASS_$_EFLinearFunction
__ EmailFoundation: _OBJC_CLASS_$_EFListStateCapturer
__ EmailFoundation: _OBJC_CLASS_$_EFLocked
__ EmailFoundation: _OBJC_CLASS_$_EFMeasuredObject
__ EmailFoundation: _OBJC_CLASS_$_EFMutableInt64Set
__ EmailFoundation: _OBJC_CLASS_$_EFNetworkStatus
__ EmailFoundation: _OBJC_CLASS_$_EFObserver
__ EmailFoundation: _OBJC_CLASS_$_EFPair
__ EmailFoundation: _OBJC_CLASS_$_EFPrivacy
__ EmailFoundation: _OBJC_CLASS_$_EFProcessBoost
__ EmailFoundation: _OBJC_CLASS_$_EFProcessTransaction
__ EmailFoundation: _OBJC_CLASS_$_EFPromise
__ EmailFoundation: _OBJC_CLASS_$_EFQuery
__ EmailFoundation: _OBJC_CLASS_$_EFQueue
__ EmailFoundation: _OBJC_CLASS_$_EFResourcePool
__ EmailFoundation: _OBJC_CLASS_$_EFSQLAggregateFunction
__ EmailFoundation: _OBJC_CLASS_$_EFSQLAndExpression
__ EmailFoundation: _OBJC_CLASS_$_EFSQLBetweenExpression
__ EmailFoundation: _OBJC_CLASS_$_EFSQLBinaryExpression
__ EmailFoundation: _OBJC_CLASS_$_EFSQLBinding
__ EmailFoundation: _OBJC_CLASS_$_EFSQLBitExpression
__ EmailFoundation: _OBJC_CLASS_$_EFSQLColumnExpression
__ EmailFoundation: _OBJC_CLASS_$_EFSQLColumnSchema
__ EmailFoundation: _OBJC_CLASS_$_EFSQLConnection
__ EmailFoundation: _OBJC_CLASS_$_EFSQLDeleteStatement
__ EmailFoundation: _OBJC_CLASS_$_EFSQLFunction
__ EmailFoundation: _OBJC_CLASS_$_EFSQLIndexSchema
__ EmailFoundation: _OBJC_CLASS_$_EFSQLInsertStatement
__ EmailFoundation: _OBJC_CLASS_$_EFSQLNotExpression
__ EmailFoundation: _OBJC_CLASS_$_EFSQLObjectPropertyMapper
__ EmailFoundation: _OBJC_CLASS_$_EFSQLOrExpression
__ EmailFoundation: _OBJC_CLASS_$_EFSQLPropertyMapper
__ EmailFoundation: _OBJC_CLASS_$_EFSQLQueryGenerator
__ EmailFoundation: _OBJC_CLASS_$_EFSQLSchema
__ EmailFoundation: _OBJC_CLASS_$_EFSQLSelectStatement
__ EmailFoundation: _OBJC_CLASS_$_EFSQLTableSchema
__ EmailFoundation: _OBJC_CLASS_$_EFSQLUpdateStatement
__ EmailFoundation: _OBJC_CLASS_$_EFSQLUpsertStatement
__ EmailFoundation: _OBJC_CLASS_$_EFSandboxedURLWrapper
__ EmailFoundation: _OBJC_CLASS_$_EFScheduler
__ EmailFoundation: _OBJC_CLASS_$_EFStoppableScheduler
__ EmailFoundation: _OBJC_CLASS_$_EFStringHash
__ EmailFoundation: _OBJC_CLASS_$_EFXPCAlarm
__ EmailFoundation: _OBJC_CLASS_$_EFXPCAlarmScheduler
__ EmailFoundation: __EFLocalizedString
__ EmailFoundation: _ef_xpc_activity_register
__ EmailFoundation: _ef_xpc_activity_register_withcriteria
__ EmailFoundation: _ef_xpc_activity_run_if_necessary
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileCreationDate
__ Foundation: _NSFileProtectionComplete
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileSize
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSLinguisticTagPunctuation
__ Foundation: _NSLinguisticTagSchemeTokenType
__ Foundation: _NSLog
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUbiquitousKeyValueStoreChangeReasonKey
__ Foundation: _NSUbiquitousKeyValueStoreChangedKeysKey
__ Foundation: _NSUbiquitousKeyValueStoreDidChangeExternallyNotification
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBackgroundActivityScheduler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConditionLock
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLinguisticTagger
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUbiquitousKeyValueStore
__ Foundation: _OBJC_CLASS_$_NSValueTransformer
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSValueTransformer
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ MailKit: _MEMailExtensionCapabilityMessageActions
__ MailKit: _MEVisibleMessagesReload
__ MobileAsset: _ASAttributeCompatibilityVersion
__ MobileAsset: _ASAttributeContentVersion
__ MobileAsset: _OBJC_CLASS_$_MAAsset
__ MobileAsset: _OBJC_CLASS_$_MAAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MADownloadOptions
__ ProactiveEventTracker: _OBJC_CLASS_$_PETEventTracker2
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterPlaceMark
__ ProtocolBuffer: _PBDataWriterRecallMark
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteSint32Field
__ ProtocolBuffer: _PBDataWriterWriteSint64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedBOOLAdd
__ ProtocolBuffer: _PBRepeatedBOOLClear
__ ProtocolBuffer: _PBRepeatedBOOLCopy
__ ProtocolBuffer: _PBRepeatedBOOLHash
__ ProtocolBuffer: _PBRepeatedBOOLIsEqual
__ ProtocolBuffer: _PBRepeatedBOOLNSArray
__ ProtocolBuffer: _PBRepeatedBOOLSet
__ ProtocolBuffer: _PBRepeatedInt64Add
__ ProtocolBuffer: _PBRepeatedInt64Clear
__ ProtocolBuffer: _PBRepeatedInt64Copy
__ ProtocolBuffer: _PBRepeatedInt64Hash
__ ProtocolBuffer: _PBRepeatedInt64IsEqual
__ ProtocolBuffer: _PBRepeatedInt64NSArray
__ ProtocolBuffer: _PBRepeatedInt64Set
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAfterFirstUnlock
__ Security: _kSecAttrCreationDate
__ Security: _kSecAttrIsInvisible
__ Security: _kSecAttrService
__ Security: _kSecAttrSynchronizable
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecMatchLimit
__ Security: _kSecReturnAttributes
__ Security: _kSecReturnData
__ Security: _kSecValueData
__ SoftLinking: __sl_dlopen
__ SymptomDiagnosticReporter: _OBJC_CLASS_$_SDRDiagnosticReporter
__ SymptomDiagnosticReporter: _kSymptomDiagnosticReplyReason
__ SymptomDiagnosticReporter: _kSymptomDiagnosticReplySessionID
__ SymptomDiagnosticReporter: _kSymptomDiagnosticReplySuccess
__ UniformTypeIdentifiers: _UTTypeEmailMessage
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ WebKit: _OBJC_CLASS_$_WKUserScript
__ WebKit: _OBJC_CLASS_$_WKWebView
__ WebKit: _OBJC_CLASS_$_WKWebViewConfiguration
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_4_HOURS
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_5_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_7_DAYS
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRES_CLASS_A
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_SCREEN_SLEEP
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_activity_none
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _chmod
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _container_create_or_lookup_app_group_paths_for_current_user
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _open_dprotected_np
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _pthread_main_np
__ libSystem.B.dylib: _sscanf_l
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _write
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_count
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libcompression.dylib: _compression_stream_destroy
__ libcompression.dylib: _compression_stream_init
__ libcompression.dylib: _compression_stream_process
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_copyMethodDescriptionList
__ libsqlite3.dylib: __sqlite3_integrity_check
__ libsqlite3.dylib: _sqlite3_busy_timeout
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_create_function
__ libsqlite3.dylib: _sqlite3_errcode
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_result_int64
__ libsqlite3.dylib: _sqlite3_set_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_step
__ libsqlite3.dylib: _sqlite3_value_int64
__ libsqlite3.dylib: _sqlite3_vfs_find
__ libsqlite3.dylib: _sqlite3_vfs_register
EDAccountECAccountTransformer : NSValueTransformer
  // class methods
  +[EDAccountECAccountTransformer transformedValueClass]
  +[EDAccountECAccountTransformer allowsReverseTransformation]

  // instance methods
  -[EDAccountECAccountTransformer transformedValue:]
  -[EDAccountECAccountTransformer transformAccount:]
  -[EDAccountECAccountTransformer transformReceivingAccount:]
  -[EDAccountECAccountTransformer transformDeliveryAccount:]


EDAccountRepository : NSObject <EFLoggable, EDAccountChangeHookResponder>
 @property  EDAccountECAccountTransformer *transformer
 @property  <EDAccountsProvider> *accountsProvider
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAccountRepository log]

  // instance methods
  -[EDAccountRepository setTransformer:]
  -[EDAccountRepository hookRegistry]
  -[EDAccountRepository setAccountsProvider:]
  -[EDAccountRepository transformer]
  -[EDAccountRepository .cxx_destruct]
  -[EDAccountRepository accountsChanged:]
  -[EDAccountRepository accountsProvider]
  -[EDAccountRepository allAccounts]
  -[EDAccountRepository accountsAdded:]
  -[EDAccountRepository accountsRemoved:]
  -[EDAccountRepository registerObserver:completionHandler:]
  -[EDAccountRepository initWithAccountsProvider:hookRegistry:]
  -[EDAccountRepository allAccountsWithCompletionHandler:]
  -[EDAccountRepository transformAccounts:]
  -[EDAccountRepository setHookRegistry:]


EDActivityPersistence : NSObject
 @property  <EDActivityHookResponder> *activityHookResponder

  // instance methods
  -[EDActivityPersistence currentActivities]
  -[EDActivityPersistence .cxx_destruct]
  -[EDActivityPersistence startActivityOfType:userInfo:]
  -[EDActivityPersistence activityWithID:setCompletedCount:totalCount:]
  -[EDActivityPersistence activityWithID:setUserInfoObject:forKey:]
  -[EDActivityPersistence activityWithID:finishedWithError:]
  -[EDActivityPersistence initWithHookResponder:]
  -[EDActivityPersistence activityHookResponder]
  -[EDActivityPersistence setActivityHookResponder:]


EDActivityRegistry : NSObject <EFLoggable, EDActivityHookResponder, EMActivityRegistryInterface>
 @property  EDActivityPersistence *activityPersistence
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDActivityRegistry log]

  // instance methods
  -[EDActivityRegistry hookRegistry]
  -[EDActivityRegistry .cxx_destruct]
  -[EDActivityRegistry activityPersistence]
  -[EDActivityRegistry activityWithID:setCompletedCount:totalCount:]
  -[EDActivityRegistry activityWithID:setUserInfoObject:forKey:]
  -[EDActivityRegistry activityWithID:finishedWithError:]
  -[EDActivityRegistry startedActivity:]
  -[EDActivityRegistry removedActivityWithID:]
  -[EDActivityRegistry registerActivityObserver:completion:]
  -[EDActivityRegistry initWithHookRegistry:activityPersistence:]


EDAddBrandIndicatorsTableUpgradeStep : NSObject
  // class methods
  +[EDAddBrandIndicatorsTableUpgradeStep _brandIndicatorsTableSchema]
  +[EDAddBrandIndicatorsTableUpgradeStep runWithConnection:databaseName:]


EDAddDisplayDateColumnUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddDisplayDateColumnUpgradeStep runWithConnection:]


EDAddFollowUpJsonStringForModelEvaluationForSuggestionsColumnUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddFollowUpJsonStringForModelEvaluationForSuggestionsColumnUpgradeStep runWithConnection:]


EDAddMessagesBrandIndicatorColumnUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddMessagesBrandIndicatorColumnUpgradeStep runWithConnection:]


EDAddMessagesDeletedDateReceivedIndexUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddMessagesDeletedDateReceivedIndexUpgradeStep runWithConnection:]


EDAddMessagesFollowUpColumnUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddMessagesFollowUpColumnUpgradeStep runWithConnection:]


EDAddMessagesSearchableMessageColumnUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddMessagesSearchableMessageColumnUpgradeStep runWithConnection:]


EDAddReadLaterTableUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddReadLaterTableUpgradeStep runWithConnection:]


EDAddRebuildTableUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddRebuildTableUpgradeStep runWithConnection:]


EDAddRemoteContentLinksTableUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddRemoteContentLinksTableUpgradeStep runWithConnection:]
  +[EDAddRemoteContentLinksTableUpgradeStep _remoteContentLinksTableSchema]


EDAddRichLinkTableUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddRichLinkTableUpgradeStep runWithConnection:]


EDAddSearchableDataDetectionResultsTableUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddSearchableDataDetectionResultsTableUpgradeStep runWithConnection:]


EDAddSendersTableUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddSendersTableUpgradeStep schema]
  +[EDAddSendersTableUpgradeStep runWithConnection:]
  +[EDAddSendersTableUpgradeStep sendersTableSchema]
  +[EDAddSendersTableUpgradeStep senderAddressesTableSchema]


EDAddSendLaterTableUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddSendLaterTableUpgradeStep runWithConnection:]


EDAddThreadTablesUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddThreadTablesUpgradeStep runWithConnection:]
  +[EDAddThreadTablesUpgradeStep threadSendersTableSchema]
  +[EDAddThreadTablesUpgradeStep threadRecipientsTableSchema]
  +[EDAddThreadTablesUpgradeStep _schemaWithMessagesTable:mailboxesTable:conversationsTable:]
  +[EDAddThreadTablesUpgradeStep threadScopesTableSchema]
  +[EDAddThreadTablesUpgradeStep threadsTableSchema]
  +[EDAddThreadTablesUpgradeStep threadMailboxesTableSchema]


EDAddUnsubscribeFlagsStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAddUnsubscribeFlagsStep runWithConnection:]


EDAssetDownloadScheduler : NSObject
 @property  NSString *_identifier
 @property  NSString *_lastFailureIntervalKey
 @property  @? _handler
 @property  long long _regularInterval
 @property  long long _failureInterval
 @property  long long _backOffFactor
 @property  NSObject<OS_dispatch_queue> *_queue
 @property  @? activityHandlerBlock

  // instance methods
  -[EDAssetDownloadScheduler set_queue:]
  -[EDAssetDownloadScheduler _queue]
  -[EDAssetDownloadScheduler activityHandlerBlock]
  -[EDAssetDownloadScheduler _xpcCriteriaForInterval:]
  -[EDAssetDownloadScheduler initWithIdentifier:regularInterval:failureInterval:backOffFactor:handler:]
  -[EDAssetDownloadScheduler _identifier]
  -[EDAssetDownloadScheduler _regularInterval]
  -[EDAssetDownloadScheduler .cxx_destruct]
  -[EDAssetDownloadScheduler set_identifier:]
  -[EDAssetDownloadScheduler set_lastFailureIntervalKey:]
  -[EDAssetDownloadScheduler set_failureInterval:]
  -[EDAssetDownloadScheduler _rescheduleAfterFailureActivity:]
  -[EDAssetDownloadScheduler _rescheduleAfterSuccessActivity:]
  -[EDAssetDownloadScheduler set_handler:]
  -[EDAssetDownloadScheduler _lastFailureIntervalKey]
  -[EDAssetDownloadScheduler _handler]
  -[EDAssetDownloadScheduler _backOffFactor]
  -[EDAssetDownloadScheduler set_regularInterval:]
  -[EDAssetDownloadScheduler _stopSchedulingActivity:]
  -[EDAssetDownloadScheduler _failureInterval]
  -[EDAssetDownloadScheduler set_backOffFactor:]
  -[EDAssetDownloadScheduler initWithIdentifier:handler:]
  -[EDAssetDownloadScheduler _nextFailureInterval]


_EDAssetDownloadSchedulerContinuation : NSObject <EDAssetDownloadSchedulerContinuation>
 @property  EDAssetDownloadScheduler *scheduler
 @property  NSObject<OS_xpc_object> *activity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_EDAssetDownloadSchedulerContinuation scheduler]
  -[_EDAssetDownloadSchedulerContinuation setScheduler:]
  -[_EDAssetDownloadSchedulerContinuation .cxx_destruct]
  -[_EDAssetDownloadSchedulerContinuation activity]
  -[_EDAssetDownloadSchedulerContinuation setActivity:]
  -[_EDAssetDownloadSchedulerContinuation rescheduleAfterSuccess]
  -[_EDAssetDownloadSchedulerContinuation rescheduleAfterFailure]
  -[_EDAssetDownloadSchedulerContinuation stopScheduling]


EDAttachmentMetadata : NSObject
 @property  NSNumber *attachmentID
 @property  NSString *attachmentHash
 @property  NSString *nameOnDisk
 @property  NSNumber *size
 @property  NSDate *downloadDate
 @property  NSNumber *viewCount
 @property  NSDate *lastViewed
 @property  NSNumber *viewCountByTapped

  // instance methods
  -[EDAttachmentMetadata .cxx_destruct]
  -[EDAttachmentMetadata size]
  -[EDAttachmentMetadata viewCount]
  -[EDAttachmentMetadata downloadDate]
  -[EDAttachmentMetadata attachmentID]
  -[EDAttachmentMetadata setAttachmentID:]
  -[EDAttachmentMetadata initWithAttachmentID:attachmentHash:nameOnDisk:size:downloadDate:viewCount:lastViewed:viewCountByTapped:]
  -[EDAttachmentMetadata initWithAttachmentHash:nameOnDisk:size:downloadDate:]
  -[EDAttachmentMetadata initWithAttachmentID:nameOnDisk:]
  -[EDAttachmentMetadata attachmentHash]
  -[EDAttachmentMetadata nameOnDisk]
  -[EDAttachmentMetadata lastViewed]
  -[EDAttachmentMetadata viewCountByTapped]


EDAttachmentPersistence : NSObject <EFLoggable>
 @property  EDPersistenceDatabase *database
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAttachmentPersistence log]
  +[EDAttachmentPersistence tablesAndForeignKeysToResolve:associationsToResolve:]
  +[EDAttachmentPersistence attachmentsTableName]
  +[EDAttachmentPersistence messageAttachmentsTableName]
  +[EDAttachmentPersistence globalMessageIDColumnNameInMessageAttachmentTable]
  +[EDAttachmentPersistence attachmentIDColumnNameInMessageAttachmentsTable]
  +[EDAttachmentPersistence attachmentColumnNameHash]
  +[EDAttachmentPersistence attachmentTableSchema]
  +[EDAttachmentPersistence messageAttachmentTableSchema]
  +[EDAttachmentPersistence hashForAttachmentData:]
  +[EDAttachmentPersistence hashForAttachmentName:]

  // instance methods
  -[EDAttachmentPersistence initWithDatabase:]
  -[EDAttachmentPersistence setDatabase:]
  -[EDAttachmentPersistence .cxx_destruct]
  -[EDAttachmentPersistence database]
  -[EDAttachmentPersistence insertAttachmentMetadata:]
  -[EDAttachmentPersistence insertMessageAttachmentMetadata:]
  -[EDAttachmentPersistence updateAttachmentIDForMessageAttachment:]
  -[EDAttachmentPersistence attachmentsForGlobalMessageIDs:]
  -[EDAttachmentPersistence globalMessageIDsForAttachment:]
  -[EDAttachmentPersistence removeAttachments:]
  -[EDAttachmentPersistence messageAttachmentExistsForGlobalMessageID:mimePartNumber:hasAttachmentEntry:]
  -[EDAttachmentPersistence messageAttachmentExistsForGlobalMessageID:remoteURL:hasAttachmentEntry:]
  -[EDAttachmentPersistence messageAttachmentMetadataForMessageID:]
  -[EDAttachmentPersistence uniqueAttachmentDataForHash:]
  -[EDAttachmentPersistence attachmentMetadataForMessage:mimePartNumber:]
  -[EDAttachmentPersistence attachmentMetadataForMessage:remoteURL:]
  -[EDAttachmentPersistence attachmentMetadataForMessageAttachmentID:]


EDAttachmentPersistenceManager : NSObject <EFLoggable>
 @property  EDAttachmentPersistence *attachmentPersistence
 @property  EDMessagePersistence *messagePersistence
 @property  NSURL *tempDirectoryForArchiveAttachments
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDAttachmentPersistenceManager log]
  +[EDAttachmentPersistenceManager attachmentDirectoryURLWithBasePath:]

  // instance methods
  -[EDAttachmentPersistenceManager .cxx_destruct]
  -[EDAttachmentPersistenceManager setMessagePersistence:]
  -[EDAttachmentPersistenceManager messagePersistence]
  -[EDAttachmentPersistenceManager persistenceIsDeletingMessages:generationWindow:]
  -[EDAttachmentPersistenceManager persistAttachment:attachmentMetadata:basePath:error:]
  -[EDAttachmentPersistenceManager persistAttachmentMetadata:]
  -[EDAttachmentPersistenceManager persistAttachmentWithURL:attachmentMetadata:basePath:error:]
  -[EDAttachmentPersistenceManager initWithDatabase:messagePersistence:]
  -[EDAttachmentPersistenceManager attachmentURLForGlobalMessageID:mimePartNumber:basePath:]
  -[EDAttachmentPersistenceManager attachmentURLForGlobalMessageID:remoteURL:basePath:]
  -[EDAttachmentPersistenceManager attachmentURLForMessageAttachmentID:basePath:]
  -[EDAttachmentPersistenceManager persistenceWillDeleteMessages:]
  -[EDAttachmentPersistenceManager _updateFileWrapperNameToStaticFileName:]
  -[EDAttachmentPersistenceManager _persistAndUpdateAttachmentPersistenceTableFromFileWrapper:orURL:attachmentMetadata:basePath:shouldUpdateAttachmentID:]
  -[EDAttachmentPersistenceManager _persistAttachmentWithWrapper:orURL:attachmentMetadata:basePath:error:]
  -[EDAttachmentPersistenceManager removeDatabaseAttachments:]
  -[EDAttachmentPersistenceManager removeFilesystemAttachmentsByAccountIdentifier:]
  -[EDAttachmentPersistenceManager attachmentDirectoryURLForMessageID:basePath:]
  -[EDAttachmentPersistenceManager _moveAttachmentAtURL:toURL:outError:]
  -[EDAttachmentPersistenceManager _writeAttachment:toDirectory:outError:]
  -[EDAttachmentPersistenceManager _writeFileWrapper:toURL:outError:]
  -[EDAttachmentPersistenceManager _tempDirectoryForArchiveAttachmentsWithParentDirectory:]
  -[EDAttachmentPersistenceManager willDeleteAttachmentsForMessages:]
  -[EDAttachmentPersistenceManager _accountIdentifiersByAttachmentIDs:]
  -[EDAttachmentPersistenceManager isDeletingMessages:]
  -[EDAttachmentPersistenceManager attachmentPersistence]
  -[EDAttachmentPersistenceManager tempDirectoryForArchiveAttachments]
  -[EDAttachmentPersistenceManager setTempDirectoryForArchiveAttachments:]


EDBIMIManager : NSObject
 @property  EDMessagePersistence *messagePersistence
 @property  EMRemoteContentURLSession *urlSession
 @property  <EFScheduler> *downloadScheduler

  // instance methods
  -[EDBIMIManager test_tearDown]
  -[EDBIMIManager urlSession]
  -[EDBIMIManager dealloc]
  -[EDBIMIManager .cxx_destruct]
  -[EDBIMIManager downloadScheduler]
  -[EDBIMIManager processBIMIHeadersForMessages:]
  -[EDBIMIManager scheduleRecurringActivity]
  -[EDBIMIManager initWithMessagePersistence:urlSession:]
  -[EDBIMIManager messagePersistence]


EDBiomeInteractionEventLog : NSObject <EFLoggable, EDInteractionEventLog>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDBiomeInteractionEventLog log]
  +[EDBiomeInteractionEventLog payloadFromData:message:]

  // instance methods
  -[EDBiomeInteractionEventLog persistEvent:date:conversationID:data:]
  -[EDBiomeInteractionEventLog persistEvent:date:message:mailboxType:]
  -[EDBiomeInteractionEventLog persistEvent:date:message:mailbox:]
  -[EDBiomeInteractionEventLog persistEvent:date:message:data:]
  -[EDBiomeInteractionEventLog persistEvent:dataFromMessage:account:]
  -[EDBiomeInteractionEventLog persistEvent:dataFromMessage:]
  -[EDBiomeInteractionEventLog .cxx_destruct]
  -[EDBiomeInteractionEventLog donateToBiomeWithEvent:]
  -[EDBiomeInteractionEventLog init]


EDCachingMailboxPredictor : NSObject <EDMailboxPredictor>
 @property  <EDMailboxPredictor> *predictor
 @property  NSCache *cache
 @property  NSMutableDictionary *cacheKeysByProperty
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDCachingMailboxPredictor predictor]
  -[EDCachingMailboxPredictor setCache:]
  -[EDCachingMailboxPredictor setPredictor:]
  -[EDCachingMailboxPredictor cache]
  -[EDCachingMailboxPredictor .cxx_destruct]
  -[EDCachingMailboxPredictor predictMailboxIDsForMessages:limit:diagnostics:]
  -[EDCachingMailboxPredictor initWithPredictor:]
  -[EDCachingMailboxPredictor invalidatePredictionsAffectedByMessage:]
  -[EDCachingMailboxPredictor removeAllPredictions]
  -[EDCachingMailboxPredictor _cacheKeyForMessages:]
  -[EDCachingMailboxPredictor _trackCacheKey:forPropertyKey:]
  -[EDCachingMailboxPredictor _propertyKeysForMessage:]
  -[EDCachingMailboxPredictor cacheKeysByProperty]
  -[EDCachingMailboxPredictor setCacheKeysByProperty:]


EDCategorySubsystem : NSObject
 @property  EDPETInteractionEventLog *petLog
 @property  EDBiomeInteractionEventLog *biomeLog
 @property  EDDifferentialPrivacyReporter *differentialPrivacyReporter
 @property  EDInteractionLogger *interactionLogger

  // instance methods
  -[EDCategorySubsystem petLog]
  -[EDCategorySubsystem initWithPersistence:userProfileProvider:vipManager:sourceApplicationBundleIdentifier:]
  -[EDCategorySubsystem .cxx_destruct]
  -[EDCategorySubsystem differentialPrivacyReporter]
  -[EDCategorySubsystem scheduleRecurringActivity]
  -[EDCategorySubsystem _schedulePETSubmissionActivityForLog:]
  -[EDCategorySubsystem biomeLog]
  -[EDCategorySubsystem interactionLogger]


EDClientResumer : NSObject <EDProtectedDataReconciliationHookResponder, EFContentProtectionObserver, EDResumable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDClientResumer signpostLog]
  +[EDClientResumer log]

  // instance methods
  -[EDClientResumer signpostID]
  -[EDClientResumer persistenceDidReconcileProtectedData]
  -[EDClientResumer dealloc]
  -[EDClientResumer contentProtectionStateChanged:previousState:]
  -[EDClientResumer .cxx_destruct]
  -[EDClientResumer invalidate]
  -[EDClientResumer resumeForUpdates]
  -[EDClientResumer initWithClientBundleIdentifier:hookRegistry:clientState:]


EDClientState : NSObject <EDClientStateReporting, EFLoggable>
 @property  BOOL isForeground
 @property  BOOL isRunningTests
 @property  NSArray *visibleMailboxObjectIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDClientState sharedInstance]
  +[EDClientState log]

  // instance methods
  -[EDClientState giveBoostWithCompletionBlock:]
  -[EDClientState dealloc]
  -[EDClientState isRunningTests]
  -[EDClientState .cxx_destruct]
  -[EDClientState setIsForeground:]
  -[EDClientState setVisibleMailboxObjectIDs:]
  -[EDClientState visibleMailboxObjectIDs]
  -[EDClientState isForeground]
  -[EDClientState setStateForDemoMode:]
  -[EDClientState init]
  -[EDClientState setIsRunningTests:]


EDCloudKitControl : NSManagedObject
 @property  NSString *ckRecordID
 @property  NSData *ckRecordSystemFields
 @property  BOOL migratedFromKVSStorage

  // class methods
  +[EDCloudKitControl fetchRequest]


EDCloudMirroringPersistentStore : NSObject <EFLoggable>
 @property  NSPersistentContainer *persistentContainer
 @property  EDTaskScheduler *importScheduler
 @property  EDTaskScheduler *exportScheduler
 @property  NSManagedObjectContext *managedObjectContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDCloudMirroringPersistentStore log]

  // instance methods
  -[EDCloudMirroringPersistentStore performBlock:]
  -[EDCloudMirroringPersistentStore persistentContainer]
  -[EDCloudMirroringPersistentStore managedObjectContext]
  -[EDCloudMirroringPersistentStore requestExportWithCompletionBlock:]
  -[EDCloudMirroringPersistentStore exportScheduler]
  -[EDCloudMirroringPersistentStore setImportScheduler:]
  -[EDCloudMirroringPersistentStore _requestWithKind:completionBlock:]
  -[EDCloudMirroringPersistentStore setExportScheduler:]
  -[EDCloudMirroringPersistentStore _wrapCompletion:forRequestKind:]
  -[EDCloudMirroringPersistentStore .cxx_destruct]
  -[EDCloudMirroringPersistentStore importScheduler]
  -[EDCloudMirroringPersistentStore performBlockAndWait:]
  -[EDCloudMirroringPersistentStore requestImportWithCompletionBlock:]
  -[EDCloudMirroringPersistentStore _executeRequestWithKind:completionBlock:]
  -[EDCloudMirroringPersistentStore _schedulerForKind:]
  -[EDCloudMirroringPersistentStore _setupCoreDataStack]
  -[EDCloudMirroringPersistentStore init]


EDConversationDailyCloudExportActivityManager : NSObject <EFLoggable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDConversationDailyCloudExportActivityManager scheduleWithConversationExportDelegate:conversationManager:]
  +[EDConversationDailyCloudExportActivityManager log]


EDConversationDailyiCloudExporter : NSObject <EFLoggable>
 @property  <EDConversationDailyCloudExporterDelegate> *delegate
 @property  EDUbiquitousConversationManager *conversationManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDConversationDailyiCloudExporter log]

  // instance methods
  -[EDConversationDailyiCloudExporter conversationManager]
  -[EDConversationDailyiCloudExporter delegate]
  -[EDConversationDailyiCloudExporter run]
  -[EDConversationDailyiCloudExporter .cxx_destruct]
  -[EDConversationDailyiCloudExporter initWithDelegate:conversationManager:]


EDConversationInfo : NSManagedObject
 @property  NSString *ckRecordID
 @property  NSData *ckRecordSystemFields
 @property  NSString *conversationUUID
 @property  NSDate *lastModified
 @property  NSString *messageIds
 @property  BOOL notifyMe
 @property  BOOL muted

  // class methods
  +[EDConversationInfo fetchRequest]


EDConversationMultipleRemoteStorage : NSObject <EDConversationRemoteStorageDelegate, EDConversationRemoteStorage, EFLoggable>
 @property  <EDConversationRemoteStorageDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *privateQueue
 @property  <EDConversationRemoteStorage> *kvsStorage
 @property  EDConversationRemoteCloudKitStorage *cloudKitStorage
 @property  EDTransactionService *dataReplicationTransaction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDConversationMultipleRemoteStorage log]

  // instance methods
  -[EDConversationMultipleRemoteStorage refresh]
  -[EDConversationMultipleRemoteStorage isInitialized]
  -[EDConversationMultipleRemoteStorage synchronize]
  -[EDConversationMultipleRemoteStorage setKvsStorage:]
  -[EDConversationMultipleRemoteStorage setDelegate:]
  -[EDConversationMultipleRemoteStorage setDictionary:forKey:]
  -[EDConversationMultipleRemoteStorage delegate]
  -[EDConversationMultipleRemoteStorage conversationRemoteStorageDidResetData:]
  -[EDConversationMultipleRemoteStorage conversationRemoteStorageDidInitialize:]
  -[EDConversationMultipleRemoteStorage .cxx_destruct]
  -[EDConversationMultipleRemoteStorage setPrivateQueue:]
  -[EDConversationMultipleRemoteStorage privateQueue]
  -[EDConversationMultipleRemoteStorage storageName]
  -[EDConversationMultipleRemoteStorage initWithDelegate:]
  -[EDConversationMultipleRemoteStorage dictionaryForKey:]
  -[EDConversationMultipleRemoteStorage dictionaryRepresentation]
  -[EDConversationMultipleRemoteStorage setDataReplicationTransaction:]
  -[EDConversationMultipleRemoteStorage kvsStorage]
  -[EDConversationMultipleRemoteStorage _saveChanges:fromStorage:toStorage:synchronize:]
  -[EDConversationMultipleRemoteStorage _handleStorageReady:]
  -[EDConversationMultipleRemoteStorage cloudKitStorage]
  -[EDConversationMultipleRemoteStorage removeDictionaryForKey:]
  -[EDConversationMultipleRemoteStorage _replicateAllContentFromStore:toStore:synchronize:]
  -[EDConversationMultipleRemoteStorage conversationRemoteStorage:didChangeEntries:reason:]
  -[EDConversationMultipleRemoteStorage setCloudKitStorage:]
  -[EDConversationMultipleRemoteStorage conversationRemoteStorageWillResetData:]
  -[EDConversationMultipleRemoteStorage dataReplicationTransaction]


EDConversationPersistence : NSObject <EDUbiquitousConversationManagerDelegate, EDConversationDailyCloudExporterDelegate, EDPersistenceDatabaseSchemaProvider, EDConversationSubscriptionProvider>
 @property  EDPersistenceDatabase *database
 @property  EDUbiquitousConversationManager *conversationManager
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  NSObject<OS_dispatch_queue> *notificationQueue
 @property  BOOL hasSubscribedConversations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDConversationPersistence log]
  +[EDConversationPersistence tablesAndForeignKeysToResolve:associationsToResolve:]
  +[EDConversationPersistence conversationsTableName]
  +[EDConversationPersistence conversationsTableSchema]
  +[EDConversationPersistence conversationIDMessageIDTableSchema]
  +[EDConversationPersistence conversationNotificationLevelForConversationFlags:]
  +[EDConversationPersistence conversationFlagsForConversationNotificationLevel:]

  // instance methods
  -[EDConversationPersistence flaggedConversationsChangedBetweenStartAnchor:endAnchor:]
  -[EDConversationPersistence hasSubscribedConversations]
  -[EDConversationPersistence createConversationWithFlags:]
  -[EDConversationPersistence conversationManager]
  -[EDConversationPersistence updateAssociationTableForMessageIDs:conversationID:]
  -[EDConversationPersistence initWithDatabase:hookRegistry:]
  -[EDConversationPersistence hookRegistry]
  -[EDConversationPersistence updateAssociationTableForMessagePersistentIDs:conversationID:]
  -[EDConversationPersistence previousSyncAnchorForDailyExport]
  -[EDConversationPersistence markConversationWithIDs:notify:]
  -[EDConversationPersistence .cxx_destruct]
  -[EDConversationPersistence updateAssociationTableForMessageID:dateSent:conversationID:]
  -[EDConversationPersistence markConversationWithIDs:mute:]
  -[EDConversationPersistence initializeConversationManagerAndPerformInitialSync]
  -[EDConversationPersistence _notifyOfFlagChangeForConversationID:oldFlags:newFlags:reason:generationWindow:]
  -[EDConversationPersistence syncedConversationIDsBySyncKey]
  -[EDConversationPersistence database]
  -[EDConversationPersistence setNewPreviousSyncAnchorForDailyExport:]
  -[EDConversationPersistence setPersistenceConversationFlags:forConversationIDs:reason:]
  -[EDConversationPersistence setNotificationQueue:]
  -[EDConversationPersistence _postChangeNotificationForConversationID:flags:oldFlags:reason:]
  -[EDConversationPersistence clearConversationFlagsAndSyncKeyForConversationIDs:]
  -[EDConversationPersistence setPersistenceConversationFlags:syncKey:forConversationID:reason:]
  -[EDConversationPersistence remoteMessageIDsAdded:forConversationID:]
  -[EDConversationPersistence messageIDsForConversationID:limit:]
  -[EDConversationPersistence conversationIDForMessageIDs:]
  -[EDConversationPersistence notificationQueue]
  -[EDConversationPersistence persistenceConversationFlagsForConversationID:]
  -[EDConversationPersistence pruneConversationTables:]
  -[EDConversationPersistence currentSyncAnchorForDailyExport]
  -[EDConversationPersistence updateConversationNotificationLevel:forConversationIDs:]


EDConversationPruningActivityManager : NSObject <EFLoggable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDConversationPruningActivityManager log]
  +[EDConversationPruningActivityManager scheduleWithConversationManager:]


EDConversationRemoteCloudKitStorage : NSObject <NSFetchedResultsControllerDelegate, EDConversationRemoteStorage, EFLoggable>
 @property  EDCloudMirroringPersistentStore *mirroringPersistentStore
 @property  <EDConversationRemoteStorageDelegate> *delegate
 @property  NSFetchedResultsController *fetchedResultsController
 @property  BOOL initialized
 @property  NSPersistentHistoryToken *historyToken
 @property  EDTransactionService *exportTransaction
 @property  EDTransactionService *importTransaction
 @property  BOOL migratedFromKVSStorage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDConversationRemoteCloudKitStorage log]
  +[EDConversationRemoteCloudKitStorage cloudKitAPSTopics]

  // instance methods
  -[EDConversationRemoteCloudKitStorage refresh]
  -[EDConversationRemoteCloudKitStorage setInitialized:]
  -[EDConversationRemoteCloudKitStorage isInitialized]
  -[EDConversationRemoteCloudKitStorage synchronize]
  -[EDConversationRemoteCloudKitStorage _conversationInfosWithUUID:managedObjectContext:]
  -[EDConversationRemoteCloudKitStorage _handleDuplicationsForConversationUUIDs:managedObjectContext:]
  -[EDConversationRemoteCloudKitStorage _initialSetup]
  -[EDConversationRemoteCloudKitStorage _requestFirstSyncWithManagedObjectContext:]
  -[EDConversationRemoteCloudKitStorage setImportTransaction:]
  -[EDConversationRemoteCloudKitStorage setDelegate:]
  -[EDConversationRemoteCloudKitStorage allConversationInfosInManagedObjectContext:]
  -[EDConversationRemoteCloudKitStorage setDictionary:forKey:]
  -[EDConversationRemoteCloudKitStorage delegate]
  -[EDConversationRemoteCloudKitStorage setHistoryToken:]
  -[EDConversationRemoteCloudKitStorage _recoverHistoryToken]
  -[EDConversationRemoteCloudKitStorage .cxx_destruct]
  -[EDConversationRemoteCloudKitStorage persistHistoryToken]
  -[EDConversationRemoteCloudKitStorage exportTransaction]
  -[EDConversationRemoteCloudKitStorage dictionaryForConversationInfo:]
  -[EDConversationRemoteCloudKitStorage storageName]
  -[EDConversationRemoteCloudKitStorage initWithDelegate:]
  -[EDConversationRemoteCloudKitStorage _removeConversationInfoWithObjectId:save:managedObjectContext:]
  -[EDConversationRemoteCloudKitStorage _retrieveChangesSinceLastRequestInManagedObjectContext:]
  -[EDConversationRemoteCloudKitStorage enumerateChangeHistorySinceToken:managedObjectContext:usingBlock:]
  -[EDConversationRemoteCloudKitStorage dictionaryForKey:]
  -[EDConversationRemoteCloudKitStorage _transactionHistorySinceToken:managedObjectContext:error:]
  -[EDConversationRemoteCloudKitStorage _addOrUpdateConversationInfo:managedObjectContext:]
  -[EDConversationRemoteCloudKitStorage dictionaryRepresentation]
  -[EDConversationRemoteCloudKitStorage setExportTransaction:]
  -[EDConversationRemoteCloudKitStorage entityForConversationDictionary:key:managedObjectContext:]
  -[EDConversationRemoteCloudKitStorage _removeConversationInfoWithId:managedObjectContext:]
  -[EDConversationRemoteCloudKitStorage _updateConversationInfo:withAnotherConversationInfo:]
  -[EDConversationRemoteCloudKitStorage _handleDidResetSyncDataNotification:]
  -[EDConversationRemoteCloudKitStorage isMigratedFromKVSStorage]
  -[EDConversationRemoteCloudKitStorage importTransaction]
  -[EDConversationRemoteCloudKitStorage removeDictionaryForKey:]
  -[EDConversationRemoteCloudKitStorage _controlInManagedObjectContext:]
  -[EDConversationRemoteCloudKitStorage _requestExportWithManagedObjectContext:]
  -[EDConversationRemoteCloudKitStorage mirroringPersistentStore]
  -[EDConversationRemoteCloudKitStorage historyToken]
  -[EDConversationRemoteCloudKitStorage _handlePushNotification:]
  -[EDConversationRemoteCloudKitStorage _conversationInfoWithUUID:managedObjectContext:]
  -[EDConversationRemoteCloudKitStorage _handleWillResetSyncDataNotification:]
  -[EDConversationRemoteCloudKitStorage _requestImportWithManagedObjectContext:]
  -[EDConversationRemoteCloudKitStorage _conversationInfoWithObjectId:managedObjectContext:]
  -[EDConversationRemoteCloudKitStorage fetchedResultsController]
  -[EDConversationRemoteCloudKitStorage setMigratedFromKVSStorage:]


EDConversationRemoteKVSStorage : NSObject <EDConversationRemoteStorage, EFLoggable>
 @property  <EDConversationRemoteStorageDelegate> *delegate
 @property  NSUbiquitousKeyValueStore *kvStore
 @property  NSObject<OS_dispatch_queue> *privateQueue
 @property  BOOL initialized
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDConversationRemoteKVSStorage log]

  // instance methods
  -[EDConversationRemoteKVSStorage initialized]
  -[EDConversationRemoteKVSStorage refresh]
  -[EDConversationRemoteKVSStorage setKvStore:]
  -[EDConversationRemoteKVSStorage kvStore]
  -[EDConversationRemoteKVSStorage setInitialized:]
  -[EDConversationRemoteKVSStorage _storeChangedExternally:]
  -[EDConversationRemoteKVSStorage isInitialized]
  -[EDConversationRemoteKVSStorage synchronize]
  -[EDConversationRemoteKVSStorage subsetOfMessageIDsToSyncFromMessageIDString:]
  -[EDConversationRemoteKVSStorage setDelegate:]
  -[EDConversationRemoteKVSStorage setDictionary:forKey:]
  -[EDConversationRemoteKVSStorage delegate]
  -[EDConversationRemoteKVSStorage .cxx_destruct]
  -[EDConversationRemoteKVSStorage setPrivateQueue:]
  -[EDConversationRemoteKVSStorage privateQueue]
  -[EDConversationRemoteKVSStorage storageName]
  -[EDConversationRemoteKVSStorage initWithDelegate:]
  -[EDConversationRemoteKVSStorage dictionaryForKey:]
  -[EDConversationRemoteKVSStorage dictionaryRepresentation]
  -[EDConversationRemoteKVSStorage removeDictionaryForKey:]


EDDaemonInterfaceFactory : NSObject
 @property  EDCategorySubsystem *categorySubsystem
 @property  EDPersistence *persistence

  // instance methods
  -[EDDaemonInterfaceFactory test_tearDown]
  -[EDDaemonInterfaceFactory initWithPersistence:categorySubsystem:]
  -[EDDaemonInterfaceFactory newOutgoingMessageRepository]
  -[EDDaemonInterfaceFactory persistence]
  -[EDDaemonInterfaceFactory categorySubsystem]
  -[EDDaemonInterfaceFactory setCategorySubsystem:]
  -[EDDaemonInterfaceFactory newFetchController]
  -[EDDaemonInterfaceFactory newSearchableIndex]
  -[EDDaemonInterfaceFactory .cxx_destruct]
  -[EDDaemonInterfaceFactory sharedInteractionLogger]
  -[EDDaemonInterfaceFactory newDiagnosticInfoGathererWithServerRemoteClientsProvider:]
  -[EDDaemonInterfaceFactory newSenderRepository]
  -[EDDaemonInterfaceFactory sharedDonationController]
  -[EDDaemonInterfaceFactory newActivityRegistry]
  -[EDDaemonInterfaceFactory newMailboxRepository]
  -[EDDaemonInterfaceFactory newMessageRepositoryWithResumable:]
  -[EDDaemonInterfaceFactory newVIPManagerInterface]
  -[EDDaemonInterfaceFactory newClientResumerWithClientState:]
  -[EDDaemonInterfaceFactory newAccountRepository]


EDDataDetectionPersistence : NSObject <EDPersistenceDatabaseProtectedSchemaProvider, EDMessageChangeHookResponder>
 @property  EDPersistenceDatabase *database
 @property  EDMessagePersistence *messagePersistence
 @property  <EDMessageChangeHookResponder> *hookResponder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDDataDetectionPersistence protectedTablesAndForeignKeysToResolve:]
  +[EDDataDetectionPersistence _dataDetectionResultsTableSchemaWithName:]

  // instance methods
  -[EDDataDetectionPersistence .cxx_destruct]
  -[EDDataDetectionPersistence database]
  -[EDDataDetectionPersistence messagePersistence]
  -[EDDataDetectionPersistence hookResponder]
  -[EDDataDetectionPersistence initWithDatabase:messagePersistence:hookResponder:]
  -[EDDataDetectionPersistence addDataDetectionResults:globalMessageID:]
  -[EDDataDetectionPersistence getDataDetectionResultsForGlobalMessageID:]
  -[EDDataDetectionPersistence _addDataDetectionResults:withGlobalMessageID:toTable:withConnection:]
  -[EDDataDetectionPersistence getDataDetectionResultRowIDsForGlobalMessageID:]
  -[EDDataDetectionPersistence _getPersistedMessagesFromGlobalMessageID:]
  -[EDDataDetectionPersistence _hookResponderRespondsToRequiredMethods:]


EDDiagnosticInfoGatherer : NSObject <EFLoggable, EMDiagnosticInfoGathererInterface>
 @property  <EMDiagnosticInfoProvidingXPC> *diagnosticInfoProvider
 @property  <EDServerRemoteClientsProvider> *remoteClientsProvider
 @property  EDFetchController *fetchController
 @property  <EFScheduler> *gathererQueue
 @property  EDPersistence *persistence
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDDiagnosticInfoGatherer log]

  // instance methods
  -[EDDiagnosticInfoGatherer persistence]
  -[EDDiagnosticInfoGatherer .cxx_destruct]
  -[EDDiagnosticInfoGatherer setPersistence:]
  -[EDDiagnosticInfoGatherer registerDiagnosticInfoProvider:completionHandler:]
  -[EDDiagnosticInfoGatherer gatherDiagnosticsWithOptions:completionHandler:]
  -[EDDiagnosticInfoGatherer fetchControllerStatusWithCompletionHandler:]
  -[EDDiagnosticInfoGatherer databaseStatisticsWithCompletionHandler:]
  -[EDDiagnosticInfoGatherer fetchController]
  -[EDDiagnosticInfoGatherer initWithFetchController:remoteClientsProvider:persistence:]
  -[EDDiagnosticInfoGatherer diagnosticInfoProvider]
  -[EDDiagnosticInfoGatherer setDiagnosticInfoProvider:]
  -[EDDiagnosticInfoGatherer remoteClientsProvider]
  -[EDDiagnosticInfoGatherer setRemoteClientsProvider:]
  -[EDDiagnosticInfoGatherer gathererQueue]
  -[EDDiagnosticInfoGatherer setGathererQueue:]


_MSTTLReference : NSObject
 @property  id value
 @property  double ttl
 @property  NSDate *lastSet

  // instance methods
  -[_MSTTLReference ttl]
  -[_MSTTLReference .cxx_destruct]
  -[_MSTTLReference setLastSet:]
  -[_MSTTLReference lastSet]
  -[_MSTTLReference getValueWithGenerator:]
  -[_MSTTLReference setValue:]
  -[_MSTTLReference setTtl:]
  -[_MSTTLReference value]
  -[_MSTTLReference initWithTTL:]


EDDifferentialPrivacyReporter : NSObject <EDMessageChangeHookResponder>
 @property  @? recordingHandler
 @property  NSObject<OS_dispatch_queue> *recordingQueue
 @property  NSString *_recordingKey
 @property  <EMUserProfileProvider> *_profileProvider
 @property  _MSTTLReference *_userDomains
 @property  EDMailDynamicDataAsset *_mailDynamicData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDDifferentialPrivacyReporter _shouldRecordMailbox:]
  -[EDDifferentialPrivacyReporter set_mailDynamicData:]
  -[EDDifferentialPrivacyReporter _userDomains]
  -[EDDifferentialPrivacyReporter _recordSenders:]
  -[EDDifferentialPrivacyReporter set_userDomains:]
  -[EDDifferentialPrivacyReporter setRecordingQueue:]
  -[EDDifferentialPrivacyReporter setRecordingHandler:]
  -[EDDifferentialPrivacyReporter _isUserAccountDomain:]
  -[EDDifferentialPrivacyReporter .cxx_destruct]
  -[EDDifferentialPrivacyReporter persistenceDidAddMessages:generationWindow:]
  -[EDDifferentialPrivacyReporter initWithUserProfileProvider:]
  -[EDDifferentialPrivacyReporter set_recordingKey:]
  -[EDDifferentialPrivacyReporter _mailDynamicData]
  -[EDDifferentialPrivacyReporter recordingQueue]
  -[EDDifferentialPrivacyReporter _profileProvider]
  -[EDDifferentialPrivacyReporter set_profileProvider:]
  -[EDDifferentialPrivacyReporter recordingHandler]
  -[EDDifferentialPrivacyReporter _recordingKey]
  -[EDDifferentialPrivacyReporter reportSenderDomainForMessages:]
  -[EDDifferentialPrivacyReporter _localeIdentifier]


EDFetchController : NSObject <EFLoggable>
 @property  <EDAccountsProvider> *accountsProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDFetchController log]

  // instance methods
  -[EDFetchController initWithAccountsProvider:]
  -[EDFetchController setAccountsProvider:]
  -[EDFetchController .cxx_destruct]
  -[EDFetchController accountsProvider]


EDGmailLabelPersistence : NSObject
  // instance methods
  -[EDGmailLabelPersistence labelURLForDatabaseID:]
  -[EDGmailLabelPersistence labelForDatabaseID:]


EDGroupedSenderQueryHandler : EDMessageRepositoryQueryHandler <EDMessageQueryHelperDelegate>
 @property  EDMessageQueryHelper *messageQueryHelper
 @property  <EMMessageListItemQueryResultsObserver> *resultsObserverIfUncanceled
 @property  _EDGroupedSenderList *groupedSenders
 @property  <EFScheduler> *scheduler
 @property  NSObject<OS_dispatch_queue> *resultQueue
 @property  BOOL didCancel
 @property  BOOL keepMessagesInListOnBucketChange
 @property  EMThreadScope *filteredMailboxScope
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDGroupedSenderQueryHandler didCancel]
  -[EDGroupedSenderQueryHandler test_tearDown]
  -[EDGroupedSenderQueryHandler tearDown]
  -[EDGroupedSenderQueryHandler scheduler]
  -[EDGroupedSenderQueryHandler .cxx_destruct]
  -[EDGroupedSenderQueryHandler filteredMailboxScope]
  -[EDGroupedSenderQueryHandler start]
  -[EDGroupedSenderQueryHandler cancel]
  -[EDGroupedSenderQueryHandler resultQueue]
  -[EDGroupedSenderQueryHandler setDidCancel:]
  -[EDGroupedSenderQueryHandler queryHelper:didFindMessages:]
  -[EDGroupedSenderQueryHandler queryHelperDidFindAllMessages:]
  -[EDGroupedSenderQueryHandler queryHelper:didAddMessages:]
  -[EDGroupedSenderQueryHandler queryHelper:messageFlagsDidChangeForMessages:]
  -[EDGroupedSenderQueryHandler queryHelper:conversationIDDidChangeForMessages:fromConversationID:]
  -[EDGroupedSenderQueryHandler queryHelper:conversationNotificationLevelDidChangeForConversation:conversationID:]
  -[EDGroupedSenderQueryHandler queryHelper:objectIDDidChangeForMessage:oldObjectID:oldConversationID:]
  -[EDGroupedSenderQueryHandler queryHelper:didUpdateMessages:forKeyPaths:]
  -[EDGroupedSenderQueryHandler queryHelper:didDeleteMessages:]
  -[EDGroupedSenderQueryHandler queryHelperDidFinishRemoteSearch:]
  -[EDGroupedSenderQueryHandler queryHelperNeedsRestart:]
  -[EDGroupedSenderQueryHandler initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:observer:observationIdentifier:keepMessagesInListOnBucketChange:]
  -[EDGroupedSenderQueryHandler groupedSenderForObjectID:]
  -[EDGroupedSenderQueryHandler resultsObserverIfUncanceled]
  -[EDGroupedSenderQueryHandler _messagesWereAdded:]
  -[EDGroupedSenderQueryHandler _messagesWereChanged:forKeyPaths:deleted:]
  -[EDGroupedSenderQueryHandler _notifyResultsObserverOfChangesToVisibleGroupedSendersFrom:to:logMessage:]
  -[EDGroupedSenderQueryHandler _filterGroupedSenderChanges:withVisibleSenders:]
  -[EDGroupedSenderQueryHandler _messageQueryFromGroupedQuery:]
  -[EDGroupedSenderQueryHandler _queryHelperIsCurrent:]
  -[EDGroupedSenderQueryHandler messageQueryHelper]
  -[EDGroupedSenderQueryHandler setMessageQueryHelper:]
  -[EDGroupedSenderQueryHandler groupedSenders]
  -[EDGroupedSenderQueryHandler setGroupedSenders:]
  -[EDGroupedSenderQueryHandler keepMessagesInListOnBucketChange]
  -[EDGroupedSenderQueryHandler setKeepMessagesInListOnBucketChange:]


_EDGroupedSenderList : NSObject
 @property  unsigned long count

  // instance methods
  -[_EDGroupedSenderList .cxx_destruct]
  -[_EDGroupedSenderList count]
  -[_EDGroupedSenderList objectForKeyedSubscript:]
  -[_EDGroupedSenderList objectAtIndexedSubscript:]
  -[_EDGroupedSenderList initWithSortDescriptors:]
  -[_EDGroupedSenderList groupedSenderAtIndex:]
  -[_EDGroupedSenderList groupedSenderForSenderAddress:]
  -[_EDGroupedSenderList orderedGroupedSendersWithLimit:]
  -[_EDGroupedSenderList addGroupedSender:]
  -[_EDGroupedSenderList removeGroupedSender:]
  -[_EDGroupedSenderList _checkConsistencyAndRebuildIfNecessary]


EDHeuristicsMailboxPredictor : NSObject <EDMailboxPredictor>
 @property  <EMUserProfileProvider> *userProfileProvider
 @property  <EDMailboxPredictionQueryAdapter> *library
 @property  NSDictionary *parameters
 @property  NSCache *mailboxIDCache
 @property  NSMutableString *debugLog
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDHeuristicsMailboxPredictor parameters]
  -[EDHeuristicsMailboxPredictor userProfileProvider]
  -[EDHeuristicsMailboxPredictor library]
  -[EDHeuristicsMailboxPredictor setUserProfileProvider:]
  -[EDHeuristicsMailboxPredictor setLibrary:]
  -[EDHeuristicsMailboxPredictor .cxx_destruct]
  -[EDHeuristicsMailboxPredictor setParameters:]
  -[EDHeuristicsMailboxPredictor debugLog]
  -[EDHeuristicsMailboxPredictor setDebugLog:]
  -[EDHeuristicsMailboxPredictor predictMailboxIDsForMessages:limit:diagnostics:]
  -[EDHeuristicsMailboxPredictor initWithUserProfileProvider:queryAdapter:]
  -[EDHeuristicsMailboxPredictor initWithUserProfileProvider:queryAdapter:parameters:]
  -[EDHeuristicsMailboxPredictor _mergeDefaultParameters:withParameters:]
  -[EDHeuristicsMailboxPredictor _modeParameterIs:]
  -[EDHeuristicsMailboxPredictor _predictionsForMessage:limit:]
  -[EDHeuristicsMailboxPredictor _orderedModePredictionForMessage:]
  -[EDHeuristicsMailboxPredictor _summedWeightedPredictionsForMessage:limit:]
  -[EDHeuristicsMailboxPredictor _weightedModePredictionsForMessage:]
  -[EDHeuristicsMailboxPredictor _countsForField:message:]
  -[EDHeuristicsMailboxPredictor _limitToRecents]
  -[EDHeuristicsMailboxPredictor _groupedMessagesCountByMailboxMatchingQuery:variable:]
  -[EDHeuristicsMailboxPredictor _conversationIDCountsForMessage:]
  -[EDHeuristicsMailboxPredictor _senderCountsForMessage:]
  -[EDHeuristicsMailboxPredictor _listIDCountsForMessage:]
  -[EDHeuristicsMailboxPredictor _recipientCountsForMessage:]
  -[EDHeuristicsMailboxPredictor _userCreatedMailboxIDs]
  -[EDHeuristicsMailboxPredictor _removeSpecialMailboxesInCounts:message:]
  -[EDHeuristicsMailboxPredictor _topHitFromMailboxDictionary:]
  -[EDHeuristicsMailboxPredictor _topHitFromMailboxDictionary:message:]
  -[EDHeuristicsMailboxPredictor _objectWithMeasure:timesHigherThanFollowUpInMeasures:]
  -[EDHeuristicsMailboxPredictor _normalizedTermFrequencyTopHitFromDictionary:withThreshold:]
  -[EDHeuristicsMailboxPredictor _isAllowedRecipient:]
  -[EDHeuristicsMailboxPredictor _allowedRecipientsForMessage:]
  -[EDHeuristicsMailboxPredictor mailboxIDCache]
  -[EDHeuristicsMailboxPredictor setMailboxIDCache:]


EDiCloudAliasSupport : NSObject <EFLoggable>
 @property  ACAccount *appleAccount
 @property  NSURL *aliasLookupURL
 @property  NSString *aliasUserAgent
 @property  NSString *aliasAuthorizationHeader
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDiCloudAliasSupport log]

  // instance methods
  -[EDiCloudAliasSupport aliasLookupURL]
  -[EDiCloudAliasSupport aliasAuthorizationHeader]
  -[EDiCloudAliasSupport initWithAppleAccount:]
  -[EDiCloudAliasSupport pushUpdateForAliasDataWithEmailAddresses:defaultEmailAddress:]
  -[EDiCloudAliasSupport anisetteDataWithError:]
  -[EDiCloudAliasSupport appleAccount]
  -[EDiCloudAliasSupport .cxx_destruct]
  -[EDiCloudAliasSupport _prepareAliasDataForEmailAddresses:defaultEmailAddress:]
  -[EDiCloudAliasSupport aliasUserAgent]


EDInMemoryThread : NSObject <NSCopying>
 @property  EMThreadScope *threadScope
 @property  EMThread *thread
 @property  EFQuery *originatingQuery
 @property  <EMMailboxTypeResolver> *mailboxTypeResolver
 @property  EMMessage *newestMessage
 @property  EMMessage *displayMessage
 @property  NSArray *messages

  // class methods
  +[EDInMemoryThread _dateSortDescriptors]

  // instance methods
  -[EDInMemoryThread thread]
  -[EDInMemoryThread messages]
  -[EDInMemoryThread .cxx_destruct]
  -[EDInMemoryThread setDisplayMessage:]
  -[EDInMemoryThread copyWithZone:]
  -[EDInMemoryThread addMessages:]
  -[EDInMemoryThread displayMessage]
  -[EDInMemoryThread threadScope]
  -[EDInMemoryThread newestMessage]
  -[EDInMemoryThread mailboxTypeResolver]
  -[EDInMemoryThread originatingQuery]
  -[EDInMemoryThread setThread:]
  -[EDInMemoryThread initWithMessages:originatingQuery:mailboxTypeResolver:]
  -[EDInMemoryThread _createThreadWithObjectID:]
  -[EDInMemoryThread _addMessagesToThread:]
  -[EDInMemoryThread changeMessages:forKeyPaths:threadIsEmpty:]
  -[EDInMemoryThread removeMessages:threadIsEmpty:]
  -[EDInMemoryThread updateMessage:fromOldObjectID:]
  -[EDInMemoryThread _calculateChangesAfterRemovingMessages:applyingChanges:threadIsEmpty:]
  -[EDInMemoryThread _calculateAndApplyChange]
  -[EDInMemoryThread _isSortedByDate:]
  -[EDInMemoryThread _combinedReadLater]
  -[EDInMemoryThread _combinedSenderList]
  -[EDInMemoryThread _combinedToList]
  -[EDInMemoryThread _combinedCCList]
  -[EDInMemoryThread _combinedFlags]
  -[EDInMemoryThread _combinedHasUnflagged]
  -[EDInMemoryThread _combinedFlagColors]
  -[EDInMemoryThread _combinedIsVIP]
  -[EDInMemoryThread _combinedIsBlocked]
  -[EDInMemoryThread _combinedHasAttachments]
  -[EDInMemoryThread _combinedMailboxes]
  -[EDInMemoryThread _combinedSenderBucket]
  -[EDInMemoryThread _recalculateDisplayMessage]
  -[EDInMemoryThread _dateSortedMessages]


EDInMemoryThreadQueryHandler : EDMessageRepositoryQueryHandler <EDMessageQueryHelperDelegate, EFLoggable, EFContentProtectionObserver, EMCollectionItemIDStateCapturerDelegate>
 @property  EDVIPManager *vipManager
 @property  <EDRemoteSearchProvider> *remoteSearchProvider
 @property  <EMMessageListItemQueryResultsObserver> *resultsObserverIfNotPaused
 @property  EDMessageQueryHelper *messageQueryHelper
 @property  NSArray *messageSortDescriptors
 @property  @? comparator
 @property  EDUpdateThrottler *updateThrottler
 @property  EDThreadReloadSummaryHelper *reloadSummaryHelper
 @property  <EFScheduler> *scheduler
 @property  NSObject<OS_dispatch_queue> *contentProtectionQueue
 @property  NSObject<OS_dispatch_queue> *resultQueue
 @property  BOOL didCancel
 @property  BOOL isInitialized
 @property  BOOL isPaused
 @property  BOOL hasChangesWhilePaused
 @property  EMMailboxScope *mailboxScope
 @property  EMCollectionItemIDStateCapturer *stateCapturer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDInMemoryThreadQueryHandler log]

  // instance methods
  -[EDInMemoryThreadQueryHandler didCancel]
  -[EDInMemoryThreadQueryHandler comparator]
  -[EDInMemoryThreadQueryHandler test_tearDown]
  -[EDInMemoryThreadQueryHandler isInitialized]
  -[EDInMemoryThreadQueryHandler tearDown]
  -[EDInMemoryThreadQueryHandler scheduler]
  -[EDInMemoryThreadQueryHandler setIsPaused:]
  -[EDInMemoryThreadQueryHandler isPaused]
  -[EDInMemoryThreadQueryHandler dealloc]
  -[EDInMemoryThreadQueryHandler contentProtectionStateChanged:previousState:]
  -[EDInMemoryThreadQueryHandler .cxx_destruct]
  -[EDInMemoryThreadQueryHandler mailboxScope]
  -[EDInMemoryThreadQueryHandler remoteSearchProvider]
  -[EDInMemoryThreadQueryHandler labelForStateCapture]
  -[EDInMemoryThreadQueryHandler start]
  -[EDInMemoryThreadQueryHandler vipManager]
  -[EDInMemoryThreadQueryHandler _vipsDidChange:]
  -[EDInMemoryThreadQueryHandler contentProtectionQueue]
  -[EDInMemoryThreadQueryHandler cancel]
  -[EDInMemoryThreadQueryHandler resultQueue]
  -[EDInMemoryThreadQueryHandler _blockedSendersDidChange:]
  -[EDInMemoryThreadQueryHandler setDidCancel:]
  -[EDInMemoryThreadQueryHandler itemIDsForStateCaptureWithErrorString:]
  -[EDInMemoryThreadQueryHandler stateCapturer]
  -[EDInMemoryThreadQueryHandler queryHelper:didFindMessages:]
  -[EDInMemoryThreadQueryHandler queryHelperDidFindAllMessages:]
  -[EDInMemoryThreadQueryHandler queryHelper:didAddMessages:]
  -[EDInMemoryThreadQueryHandler queryHelper:messageFlagsDidChangeForMessages:]
  -[EDInMemoryThreadQueryHandler queryHelper:conversationIDDidChangeForMessages:fromConversationID:]
  -[EDInMemoryThreadQueryHandler queryHelper:conversationNotificationLevelDidChangeForConversation:conversationID:]
  -[EDInMemoryThreadQueryHandler queryHelper:objectIDDidChangeForMessage:oldObjectID:oldConversationID:]
  -[EDInMemoryThreadQueryHandler queryHelper:didUpdateMessages:forKeyPaths:]
  -[EDInMemoryThreadQueryHandler queryHelper:didDeleteMessages:]
  -[EDInMemoryThreadQueryHandler queryHelperDidFinishRemoteSearch:]
  -[EDInMemoryThreadQueryHandler queryHelperNeedsRestart:]
  -[EDInMemoryThreadQueryHandler _messagesWereAdded:]
  -[EDInMemoryThreadQueryHandler _messagesWereChanged:forKeyPaths:deleted:]
  -[EDInMemoryThreadQueryHandler _queryHelperIsCurrent:]
  -[EDInMemoryThreadQueryHandler messageQueryHelper]
  -[EDInMemoryThreadQueryHandler setMessageQueryHelper:]
  -[EDInMemoryThreadQueryHandler initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:vipManager:remoteSearchProvider:observer:observationIdentifier:observationResumer:]
  -[EDInMemoryThreadQueryHandler resultsObserverIfNotPaused]
  -[EDInMemoryThreadQueryHandler _prepareToSendUpdates]
  -[EDInMemoryThreadQueryHandler _didSendUpdates]
  -[EDInMemoryThreadQueryHandler _refreshObserver]
  -[EDInMemoryThreadQueryHandler _restartHelper]
  -[EDInMemoryThreadQueryHandler _createHelperAndReconcileJournal:]
  -[EDInMemoryThreadQueryHandler _contentProtectionChangedToLocked]
  -[EDInMemoryThreadQueryHandler _contentProtectionChangedToUnlocked]
  -[EDInMemoryThreadQueryHandler threadForObjectID:error:]
  -[EDInMemoryThreadQueryHandler messagesForThread:]
  -[EDInMemoryThreadQueryHandler _messagesByConversationIDForMessages:]
  -[EDInMemoryThreadQueryHandler _mergeInThreads:forMove:]
  -[EDInMemoryThreadQueryHandler _reportChanges:]
  -[EDInMemoryThreadQueryHandler _reportDeletes:]
  -[EDInMemoryThreadQueryHandler _removeThreadsForInMemoryThreads:forMove:]
  -[EDInMemoryThreadQueryHandler _initializeOldestThreadsByMailbox]
  -[EDInMemoryThreadQueryHandler _updateCurrentOldestThreadWithThreadIfApplicable:forMailbox:]
  -[EDInMemoryThreadQueryHandler _didMergeInThreads:]
  -[EDInMemoryThreadQueryHandler _threadsWereDeleted]
  -[EDInMemoryThreadQueryHandler _updateOldestThreadsForMailboxes:]
  -[EDInMemoryThreadQueryHandler _notifyObserverOfOldestThreadsByMailboxObjectIDs]
  -[EDInMemoryThreadQueryHandler _messageQueryFromThreadsQuery:]
  -[EDInMemoryThreadQueryHandler _inMemoryThreadSortDescriptorsForThreadSortDescriptors:]
  -[EDInMemoryThreadQueryHandler _messageListItemChangeAffectsSorting:]
  -[EDInMemoryThreadQueryHandler messageSortDescriptors]
  -[EDInMemoryThreadQueryHandler updateThrottler]
  -[EDInMemoryThreadQueryHandler reloadSummaryHelper]
  -[EDInMemoryThreadQueryHandler setIsInitialized:]
  -[EDInMemoryThreadQueryHandler hasChangesWhilePaused]
  -[EDInMemoryThreadQueryHandler setHasChangesWhilePaused:]


EDInteractionEvent : NSObject
 @property  long long eventID
 @property  long long version
 @property  NSDate *date
 @property  NSString *accountID
 @property  long long mailboxID
 @property  long long conversationID
 @property  long long messageIDHash
 @property  long long messagePersistentID
 @property  NSString *name
 @property  NSDictionary *data

  // instance methods
  -[EDInteractionEvent accountID]
  -[EDInteractionEvent eventID]
  -[EDInteractionEvent setAccountID:]
  -[EDInteractionEvent setDate:]
  -[EDInteractionEvent date]
  -[EDInteractionEvent .cxx_destruct]
  -[EDInteractionEvent setEventID:]
  -[EDInteractionEvent version]
  -[EDInteractionEvent setData:]
  -[EDInteractionEvent setName:]
  -[EDInteractionEvent name]
  -[EDInteractionEvent setVersion:]
  -[EDInteractionEvent conversationID]
  -[EDInteractionEvent data]
  -[EDInteractionEvent setConversationID:]
  -[EDInteractionEvent messagePersistentID]
  -[EDInteractionEvent mailboxID]
  -[EDInteractionEvent setMailboxID:]
  -[EDInteractionEvent messageIDHash]
  -[EDInteractionEvent setMessageIDHash:]
  -[EDInteractionEvent setMessagePersistentID:]


EDInteractionEventLogLegacyPersistentBitsProvider : NSObject <EFLoggable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDInteractionEventLogLegacyPersistentBitsProvider log]

  // instance methods
  -[EDInteractionEventLogLegacyPersistentBitsProvider _queryKeychainError:]
  -[EDInteractionEventLogLegacyPersistentBitsProvider _findExistingSaltError:]
  -[EDInteractionEventLogLegacyPersistentBitsProvider _persistentBits]
  -[EDInteractionEventLogLegacyPersistentBitsProvider _oldSalt]


EDInteractionEventLogMultiplexer : NSObject <EDInteractionEventLog>
 @property  NSArray *logs

  // instance methods
  -[EDInteractionEventLogMultiplexer persistEvent:date:conversationID:data:]
  -[EDInteractionEventLogMultiplexer persistEvent:date:message:mailboxType:]
  -[EDInteractionEventLogMultiplexer logs]
  -[EDInteractionEventLogMultiplexer persistEvent:date:message:mailbox:]
  -[EDInteractionEventLogMultiplexer persistEvent:date:message:data:]
  -[EDInteractionEventLogMultiplexer persistEvent:dataFromMessage:account:]
  -[EDInteractionEventLogMultiplexer persistEvent:dataFromMessage:]
  -[EDInteractionEventLogMultiplexer setLogs:]
  -[EDInteractionEventLogMultiplexer initWithLogs:]
  -[EDInteractionEventLogMultiplexer .cxx_destruct]


EDInteractionEventLogSaltProvider : NSObject <EFLoggable>
 @property  NSData *salt
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDInteractionEventLogSaltProvider log]
  +[EDInteractionEventLogSaltProvider saltProviderWithString:]
  +[EDInteractionEventLogSaltProvider saltProviderFromKeyChain]

  // instance methods
  -[EDInteractionEventLogSaltProvider _deleteSalt]
  -[EDInteractionEventLogSaltProvider _queryKeychainError:]
  -[EDInteractionEventLogSaltProvider setSalt:]
  -[EDInteractionEventLogSaltProvider _findExistingSaltError:]
  -[EDInteractionEventLogSaltProvider .cxx_destruct]
  -[EDInteractionEventLogSaltProvider _createSalt]
  -[EDInteractionEventLogSaltProvider salt]
  -[EDInteractionEventLogSaltProvider _findOrCreateSalt]
  -[EDInteractionEventLogSaltProvider init]
  -[EDInteractionEventLogSaltProvider migrateAccessClass]


_EDUserActionState : NSObject
 @property  NSDate *viewingStarted
 @property  <ECMessage> *message
 @property  BOOL scrolledToEnd
 @property  BOOL mutedThread
 @property  NSString *key
 @property  NSString *cellStyle
 @property  NSString *messageListType
 @property  long long row

  // instance methods
  -[_EDUserActionState setMessage:]
  -[_EDUserActionState cellStyle]
  -[_EDUserActionState .cxx_destruct]
  -[_EDUserActionState key]
  -[_EDUserActionState row]
  -[_EDUserActionState setKey:]
  -[_EDUserActionState message]
  -[_EDUserActionState setCellStyle:]
  -[_EDUserActionState setRow:]
  -[_EDUserActionState viewingStarted]
  -[_EDUserActionState setViewingStarted:]
  -[_EDUserActionState scrolledToEnd]
  -[_EDUserActionState setScrolledToEnd:]
  -[_EDUserActionState messageListType]
  -[_EDUserActionState setMessageListType:]
  -[_EDUserActionState mutedThread]
  -[_EDUserActionState setMutedThread:]


EDInteractionLogger : NSObject <EDMessageChangeHookResponder, EDMessageDeliveryHookResponder, EMInteractionLoggerInterface>
 @property  NSMutableDictionary *_viewedMessages
 @property  NSMutableDictionary *_messageListMessages
 @property  {_NSRange=QQ} _messageListVisibleRows
 @property  NSObject<OS_dispatch_queue> *_stateTrackingQueue
 @property  EDMessagePersistence *messagePersistence
 @property  EDMailboxPersistence *mailboxPersistence
 @property  <EDInteractionEventLog> *_eventLog
 @property  NSObject<OS_dispatch_queue> *processingQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDInteractionLogger _logMessageListDisplayEndedForState:now:]
  -[EDInteractionLogger viewingStartedForMessage:]
  -[EDInteractionLogger scrolledToEndOfMessage:]
  -[EDInteractionLogger logEvent:date:messageID:data:]
  -[EDInteractionLogger logEvent:date:data:]
  -[EDInteractionLogger _messageListMessages]
  -[EDInteractionLogger set_messageListMessages:]
  -[EDInteractionLogger setProcessingQueue:]
  -[EDInteractionLogger set_eventLog:]
  -[EDInteractionLogger processingQueue]
  -[EDInteractionLogger messageListDisplayEndedForMessage:cellStyle:]
  -[EDInteractionLogger messageListDisplayVisibleRowsChanged:]
  -[EDInteractionLogger set_stateTrackingQueue:]
  -[EDInteractionLogger applicationLaunched]
  -[EDInteractionLogger clickedLinkInMessage:scheme:]
  -[EDInteractionLogger messageListDisplayStartedForMessage:messageListType:row:cellStyle:]
  -[EDInteractionLogger .cxx_destruct]
  -[EDInteractionLogger waitForPendingStateChanges]
  -[EDInteractionLogger initWithMessagePersistence:mailboxPersistence:eventLog:]
  -[EDInteractionLogger archivedMessages:]
  -[EDInteractionLogger persistenceDidAddMessages:generationWindow:]
  -[EDInteractionLogger _viewingEndedForAllMessages]
  -[EDInteractionLogger _composeStartedForMessage:eventName:]
  -[EDInteractionLogger setMessagePersistence:]
  -[EDInteractionLogger setMailboxPersistence:]
  -[EDInteractionLogger persistenceWillChangeFlags:messages:]
  -[EDInteractionLogger _conversationFlagsChanged:]
  -[EDInteractionLogger set_viewedMessages:]
  -[EDInteractionLogger _range:minusRange:]
  -[EDInteractionLogger _stateForMessage:extra:container:]
  -[EDInteractionLogger deletedMessages:]
  -[EDInteractionLogger _eventLog]
  -[EDInteractionLogger messagePersistence]
  -[EDInteractionLogger composeFowardStartedForMessage:]
  -[EDInteractionLogger viewingEndedForMessage:]
  -[EDInteractionLogger movedMessages:toMailboxType:]
  -[EDInteractionLogger composedMessageSent:account:]
  -[EDInteractionLogger _stateTrackingQueue]
  -[EDInteractionLogger applicationWillResume]
  -[EDInteractionLogger _messageListVisibleRows]
  -[EDInteractionLogger persistenceWillTransferMessages:transferType:destinationMailboxURL:userInitiated:]
  -[EDInteractionLogger _logMessageListDisplayStartedMessage:now:type:row:cellStyle:]
  -[EDInteractionLogger applicationWillSuspend]
  -[EDInteractionLogger composeReplyStartedForMessage:]
  -[EDInteractionLogger mailboxPersistence]
  -[EDInteractionLogger messageListDisplayEndedForAllMessages]
  -[EDInteractionLogger deliveredMessage:account:]
  -[EDInteractionLogger copiedMessages:toMailbox:]
  -[EDInteractionLogger movedMessages:toMailbox:]
  -[EDInteractionLogger set_messageListVisibleRows:]
  -[EDInteractionLogger _viewedMessages]


EDListUnsubscribeHandler : NSObject
 @property  <EFScheduler> *scheduler
 @property  EMListUnsubscribeDetector *detector

  // class methods
  +[EDListUnsubscribeHandler log]

  // instance methods
  -[EDListUnsubscribeHandler scheduler]
  -[EDListUnsubscribeHandler .cxx_destruct]
  -[EDListUnsubscribeHandler init]
  -[EDListUnsubscribeHandler unsubscribeWithCommand:completion:]
  -[EDListUnsubscribeHandler ignoreWithCommand:completion:]
  -[EDListUnsubscribeHandler detector]
  -[EDListUnsubscribeHandler unsubscribeMailtoWithCommand:completion:]
  -[EDListUnsubscribeHandler unsubscribeHTMLWithCommand:timeout:completion:]


EDLocalActionPersistence : NSObject <EFLoggable>
 @property  EDPersistenceDatabase *database
 @property  EDGmailLabelPersistence *gmailLabelPersistence
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDLocalActionPersistence log]
  +[EDLocalActionPersistence tablesAndForeignKeysToResolve:associationsToResolve:]
  +[EDLocalActionPersistence localMessageActionsTableSchema]
  +[EDLocalActionPersistence actionMessagesTableSchema]
  +[EDLocalActionPersistence actionLabelsTableSchema]
  +[EDLocalActionPersistence actionFlagsTableSchema]

  // instance methods
  -[EDLocalActionPersistence moveSupportedFromMailboxURL:toURL:]
  -[EDLocalActionPersistence .cxx_destruct]
  -[EDLocalActionPersistence messageForDatabaseID:]
  -[EDLocalActionPersistence database]
  -[EDLocalActionPersistence initWithDatabase:gmailLabelPersistence:]
  -[EDLocalActionPersistence init]
  -[EDLocalActionPersistence gmailLabelPersistence]
  -[EDLocalActionPersistence mailboxURLIsInRemoteAccount:]
  -[EDLocalActionPersistence messageActionsForAccountURL:previousActionID:]
  -[EDLocalActionPersistence _transferActionForRow:connection:failedMessages:]
  -[EDLocalActionPersistence _transferUndownloadedActionForRow:connection:]
  -[EDLocalActionPersistence _flagChangeActionForRow:connection:]
  -[EDLocalActionPersistence _flagChangeAllActionForRow:connection:]
  -[EDLocalActionPersistence _labelChangeActionForRow:connection:]
  -[EDLocalActionPersistence _findMessagesForAction:remoteIDs:messages:connection:]
  -[EDLocalActionPersistence _flagChangeForAction:connection:]
  -[EDLocalActionPersistence persistFlagChangeAction:]
  -[EDLocalActionPersistence persistFlagChangeUndownloadedAction:]
  -[EDLocalActionPersistence _addFlagChange:actionID:connection:]
  -[EDLocalActionPersistence persistTransferAction:]
  -[EDLocalActionPersistence persistTransferUndownloadedAction:]
  -[EDLocalActionPersistence persistLabelChangeAction:]
  -[EDLocalActionPersistence _setLabelsOnAction:labels:add:connection:]
  -[EDLocalActionPersistence _addActionMessageForMessage:destinationMessage:actionID:actionPhase:connection:]
  -[EDLocalActionPersistence _addActionMessageForSourceRemoteID:actionID:connection:]
  -[EDLocalActionPersistence updateTransferAction:withResults:]
  -[EDLocalActionPersistence _updateCopyItems:toPhase:actionID:connection:]
  -[EDLocalActionPersistence _deleteCopyItems:actionID:connection:]
  -[EDLocalActionPersistence _whereClauseToFindCopyItems:]
  -[EDLocalActionPersistence _sourceRemoteIDListForCopyItems:]
  -[EDLocalActionPersistence updateTransferUndownloadedMessageAction:withResults:]
  -[EDLocalActionPersistence updateFlagChangeAction:withRemainingUIDs:]
  -[EDLocalActionPersistence removeMessageAction:]


EDLocalizableStrings : NSObject
  // class methods
  +[EDLocalizableStrings noSenderTitle]


EDMailboxAction : NSObject
 @property  long long actionID
 @property  long long actionType
 @property  NSString *mailboxName
 @property  NSString *renamedMailboxName

  // instance methods
  -[EDMailboxAction setActionType:]
  -[EDMailboxAction actionType]
  -[EDMailboxAction .cxx_destruct]
  -[EDMailboxAction mailboxName]
  -[EDMailboxAction setRenamedMailboxName:]
  -[EDMailboxAction setMailboxName:]
  -[EDMailboxAction renamedMailboxName]
  -[EDMailboxAction actionID]
  -[EDMailboxAction setActionID:]


EDMailboxActionPersistence : NSObject
 @property  EDPersistenceDatabase *database

  // class methods
  +[EDMailboxActionPersistence tablesAndForeignKeysToResolve:associationsToResolve:]

  // instance methods
  -[EDMailboxActionPersistence initWithDatabase:]
  -[EDMailboxActionPersistence .cxx_destruct]
  -[EDMailboxActionPersistence deleteMailboxAction:]
  -[EDMailboxActionPersistence database]
  -[EDMailboxActionPersistence nextMailboxActionForAccountID:]
  -[EDMailboxActionPersistence allMailboxActionForAccountID:]
  -[EDMailboxActionPersistence saveMailboxActionForAccountID:action:]
  -[EDMailboxActionPersistence deleteMailboxActions:]


EDMailboxPersistence : NSObject <EDMailboxProviderDelegate, EMMailboxTypeResolver>
 @property  NSMutableDictionary *changeObserversByIdentifier
 @property  EDMailboxProvider *mailboxProvider
 @property  NSSet *allMailboxObjectIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDMailboxPersistence test_tearDown]
  -[EDMailboxPersistence mailboxDatabaseIDsForMailboxObjectIDs:createIfNecessary:]
  -[EDMailboxPersistence moveMailbox:newParentMailboxID:]
  -[EDMailboxPersistence serverCountsForMailboxScope:block:]
  -[EDMailboxPersistence .cxx_destruct]
  -[EDMailboxPersistence deleteMailbox:]
  -[EDMailboxPersistence legacyMailboxForObjectID:]
  -[EDMailboxPersistence renameMailbox:newName:]
  -[EDMailboxPersistence createMailbox:parentMailboxID:]
  -[EDMailboxPersistence mailboxObjectIDsForMailboxType:]
  -[EDMailboxPersistence initWithMailboxProvider:]
  -[EDMailboxPersistence mailboxProvider]
  -[EDMailboxPersistence mailboxTypeForMailboxObjectID:]
  -[EDMailboxPersistence allMailboxObjectIDs]
  -[EDMailboxPersistence mailboxListInvalidated]
  -[EDMailboxPersistence allMailboxes]
  -[EDMailboxPersistence allMailboxesWithCompletionHandler:]
  -[EDMailboxPersistence userCreatedMailboxObjectIDs]
  -[EDMailboxPersistence fetchMailboxLists]
  -[EDMailboxPersistence legacyMailboxForMailboxURL:]
  -[EDMailboxPersistence addChangeObserver:withIdentifier:]
  -[EDMailboxPersistence removeChangeObserverWithIdentifier:]
  -[EDMailboxPersistence changeObserversByIdentifier]
  -[EDMailboxPersistence setChangeObserversByIdentifier:]
  -[EDMailboxPersistence setMailboxProvider:]


EDMailboxPredictionController : NSObject <EDMessageChangeHookResponder, EFLoggable>
 @property  <EDMailboxPredictionQueryAdapter> *queryAdapter
 @property  EDMessagePersistence *messagePersistence
 @property  NSObject<OS_dispatch_queue> *processingQueue
 @property  EDCachingMailboxPredictor *cachingPredictor
 @property  EDMailboxPersistence *mailboxPersistence
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  <EMUserProfileProvider> *userProfileProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDMailboxPredictionController log]

  // instance methods
  -[EDMailboxPredictionController userProfileProvider]
  -[EDMailboxPredictionController processingQueue]
  -[EDMailboxPredictionController hookRegistry]
  -[EDMailboxPredictionController .cxx_destruct]
  -[EDMailboxPredictionController messagePersistence]
  -[EDMailboxPredictionController mailboxPersistence]
  -[EDMailboxPredictionController initWithMessagePersistence:mailboxPersistence:hookRegistry:userProfileProvider:]
  -[EDMailboxPredictionController persistenceWillAddNewMessage:fromExistingMessage:]
  -[EDMailboxPredictionController predictMailboxForMovingObjectIDs:completionHandler:]
  -[EDMailboxPredictionController _predictMailboxForMovingMessages:cancelationToken:completionHandler:]
  -[EDMailboxPredictionController _processPredictionForMessages:]
  -[EDMailboxPredictionController _accountsForMessages:]
  -[EDMailboxPredictionController _invalidateCacheForAddedMessage:]
  -[EDMailboxPredictionController _createPredictor]
  -[EDMailboxPredictionController queryAdapter]
  -[EDMailboxPredictionController cachingPredictor]


EDMailboxProvider : NSObject <EMMailboxTypeResolver>
 @property  <EDAccountsProvider> *accountsProvider
 @property  NSMapTable *legacyMailboxToMailboxMap
 @property  NSMapTable *objectIDToLegacyMailboxMap
 @property  NSArray *allMailboxCache
 @property  NSObject<OS_dispatch_queue> *mailboxCacheQueue
 @property  <EFScheduler> *observerScheduler
 @property  <EDMailboxProviderDelegate> *delegate
 @property  NSSet *allMailboxObjectIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDMailboxProvider test_tearDown]
  -[EDMailboxProvider initWithAccountsProvider:]
  -[EDMailboxProvider setDelegate:]
  -[EDMailboxProvider _transformMailbox:legacyMailboxToMailboxMap:objectIDToLegacyMailboxMap:]
  -[EDMailboxProvider setAccountsProvider:]
  -[EDMailboxProvider delegate]
  -[EDMailboxProvider .cxx_destruct]
  -[EDMailboxProvider accountsProvider]
  -[EDMailboxProvider _fetchMailboxesForAccount:]
  -[EDMailboxProvider legacyMailboxForObjectID:]
  -[EDMailboxProvider observerScheduler]
  -[EDMailboxProvider _invalidateCache]
  -[EDMailboxProvider mailboxObjectIDsForMailboxType:]
  -[EDMailboxProvider _mailboxInvalidated:]
  -[EDMailboxProvider _didChangeMailboxList:]
  -[EDMailboxProvider _willReloadMailboxList:]
  -[EDMailboxProvider _didReloadMailboxList:]
  -[EDMailboxProvider _willFetchMailboxList:]
  -[EDMailboxProvider _didFetchMailboxList:]
  -[EDMailboxProvider mailboxTypeForMailboxObjectID:]
  -[EDMailboxProvider allMailboxObjectIDs]
  -[EDMailboxProvider mailboxForObjectID:]
  -[EDMailboxProvider setObserverScheduler:]
  -[EDMailboxProvider _populateCache]
  -[EDMailboxProvider allMailboxes]
  -[EDMailboxProvider enumerateAccountsWithBlock:]
  -[EDMailboxProvider fetchMailboxes]
  -[EDMailboxProvider mailboxFromLegacyMailbox:]
  -[EDMailboxProvider mailboxesFromLegacyMailboxes:]
  -[EDMailboxProvider legacyMailboxesForObjectIDs:]
  -[EDMailboxProvider _beginDeferringInvalidation]
  -[EDMailboxProvider _endDeferringInvalidation]
  -[EDMailboxProvider _isDeferringInvalidation]
  -[EDMailboxProvider invalidateMailboxes]
  -[EDMailboxProvider legacyMailboxToMailboxMap]
  -[EDMailboxProvider setLegacyMailboxToMailboxMap:]
  -[EDMailboxProvider objectIDToLegacyMailboxMap]
  -[EDMailboxProvider setObjectIDToLegacyMailboxMap:]
  -[EDMailboxProvider allMailboxCache]
  -[EDMailboxProvider setAllMailboxCache:]
  -[EDMailboxProvider mailboxCacheQueue]


EDMailboxRepository : NSObject <EFLoggable>
 @property  EDMailboxPersistence *mailboxPersistence
 @property  NSObject<OS_dispatch_queue> *serializationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDMailboxRepository log]

  // instance methods
  -[EDMailboxRepository .cxx_destruct]
  -[EDMailboxRepository setMailboxPersistence:]
  -[EDMailboxRepository mailboxPersistence]
  -[EDMailboxRepository serializationQueue]
  -[EDMailboxRepository getMailboxesWithCompletion:]
  -[EDMailboxRepository startObservingMailboxChangesWithChangeObserver:observationIdentifier:]
  -[EDMailboxRepository cancelObservation:]
  -[EDMailboxRepository refreshMailboxList]
  -[EDMailboxRepository performMailboxChangeAction:completionHandler:]
  -[EDMailboxRepository mailboxObjectIDsForMailboxType:completionHandler:]
  -[EDMailboxRepository mailboxTypeForMailboxObjectID:completionHandler:]
  -[EDMailboxRepository initWithMailboxPersistence:]
  -[EDMailboxRepository _performCreateMailboxChangeAction:]
  -[EDMailboxRepository _performDeleteMailboxChangeAction:]
  -[EDMailboxRepository _performMoveMailboxChangeAction:]
  -[EDMailboxRepository _performRenameMailboxChangeAction:]


EDMailDropMetadataGenerator : NSObject <WKNavigationDelegate>
 @property  WKWebView *webView
 @property  NSMutableArray *scriptHandlers
 @property  EFPromise *activePromise
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDMailDropMetadataGenerator webView:didFailProvisionalNavigation:withError:]
  -[EDMailDropMetadataGenerator dealloc]
  -[EDMailDropMetadataGenerator .cxx_destruct]
  -[EDMailDropMetadataGenerator setWebView:]
  -[EDMailDropMetadataGenerator webViewWebContentProcessDidTerminate:]
  -[EDMailDropMetadataGenerator webView:didFinishNavigation:]
  -[EDMailDropMetadataGenerator webView]
  -[EDMailDropMetadataGenerator insertMailDropAttachmentViewForContentURL:HTMLByContentID:completionHandler:]
  -[EDMailDropMetadataGenerator generateMailDropMetadataForContentURL:completionHandler:]
  -[EDMailDropMetadataGenerator withTimeout:do:completion:]
  -[EDMailDropMetadataGenerator tearDownWebView]
  -[EDMailDropMetadataGenerator _shouldSearchForMailDropNodesInFileURL:]
  -[EDMailDropMetadataGenerator _findMailDropNodesInFileURL:promise:]
  -[EDMailDropMetadataGenerator _addScriptHandlerForKey:handler:]
  -[EDMailDropMetadataGenerator scriptHandlers]
  -[EDMailDropMetadataGenerator setScriptHandlers:]
  -[EDMailDropMetadataGenerator activePromise]
  -[EDMailDropMetadataGenerator setActivePromise:]


EDMailDropWebViewScriptHandler : NSObject <WKScriptMessageHandler>
 @property  WKWebView *webView
 @property  NSString *name
 @property  @? handler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDMailDropWebViewScriptHandler setHandler:]
  -[EDMailDropWebViewScriptHandler .cxx_destruct]
  -[EDMailDropWebViewScriptHandler setWebView:]
  -[EDMailDropWebViewScriptHandler setName:]
  -[EDMailDropWebViewScriptHandler handler]
  -[EDMailDropWebViewScriptHandler name]
  -[EDMailDropWebViewScriptHandler webView]
  -[EDMailDropWebViewScriptHandler userContentController:didReceiveScriptMessage:]


EDMailDynamicDataAsset : NSObject <EFLoggable>
 @property  BOOL shouldIgnoreUserAccountDomains
 @property  NSSet *ignoredDomains
 @property  EDAssetDownloadScheduler *scheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDMailDynamicDataAsset log]
  +[EDMailDynamicDataAsset _ignoredDomainsFallback]

  // instance methods
  -[EDMailDynamicDataAsset scheduler]
  -[EDMailDynamicDataAsset setScheduler:]
  -[EDMailDynamicDataAsset _updateStateFromAsset:]
  -[EDMailDynamicDataAsset _updateIgnoredDomains:]
  -[EDMailDynamicDataAsset shouldIgnoreUserAccountDomains]
  -[EDMailDynamicDataAsset .cxx_destruct]
  -[EDMailDynamicDataAsset _queryForAssetWithCompletion:]
  -[EDMailDynamicDataAsset shouldIgnoreDomain:]
  -[EDMailDynamicDataAsset setShouldIgnoreUserAccountDomains:]
  -[EDMailDynamicDataAsset setIgnoredDomains:]
  -[EDMailDynamicDataAsset _downloadAssetCatalogWithCompletion:]
  -[EDMailDynamicDataAsset ignoredDomains]
  -[EDMailDynamicDataAsset init]


EDMessageActionHandler : NSObject <MEAppExtensionsObserver, EFLoggable>
 @property  NSArray *messageActionProviders
 @property  NSArray *requiredHeaders
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDMessageActionHandler log]

  // instance methods
  -[EDMessageActionHandler dealloc]
  -[EDMessageActionHandler .cxx_destruct]
  -[EDMessageActionHandler extensionsMatched:]
  -[EDMessageActionHandler extensionsNoLongerMatching:]
  -[EDMessageActionHandler initWithExtensionsController:]
  -[EDMessageActionHandler actionProviderInterfacesByExtensionID]
  -[EDMessageActionHandler messageActionProviders]
  -[EDMessageActionHandler actionDecisionForMessage:usingMessageActionProvider:]
  -[EDMessageActionHandler requiredHeaders]


EDMessageActionProvider : NSObject
 @property  NSString *ID
 @property  NSString *name

  // instance methods
  -[EDMessageActionProvider ID]
  -[EDMessageActionProvider .cxx_destruct]
  -[EDMessageActionProvider name]
  -[EDMessageActionProvider initWithID:name:]


EDMessageAttachmentMetadata : NSObject <EFPubliclyDescribable>
 @property  long long globalMessageID
 @property  NSString *name
 @property  NSString *mimePartNumber
 @property  NSNumber *attachmentID
 @property  NSURL *remoteURL
 @property  NSString *ef_publicDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDMessageAttachmentMetadata ef_publicDescription]
  -[EDMessageAttachmentMetadata remoteURL]
  -[EDMessageAttachmentMetadata .cxx_destruct]
  -[EDMessageAttachmentMetadata name]
  -[EDMessageAttachmentMetadata globalMessageID]
  -[EDMessageAttachmentMetadata initWithGlobalMessageID:name:mimePart:attachmentID:remoteURL:]
  -[EDMessageAttachmentMetadata mimePartNumber]
  -[EDMessageAttachmentMetadata attachmentID]
  -[EDMessageAttachmentMetadata setAttachmentID:]
  -[EDMessageAttachmentMetadata initWithGlobalMessageID:attachmentID:]


_EDMessageChangeManagerFlagChange : NSObject
 @property  <EDPersistedMessage> *message
 @property  ECMessageFlagChange *serverChange
 @property  ECMessageFlagChange *localChange

  // instance methods
  -[_EDMessageChangeManagerFlagChange setMessage:]
  -[_EDMessageChangeManagerFlagChange .cxx_destruct]
  -[_EDMessageChangeManagerFlagChange message]
  -[_EDMessageChangeManagerFlagChange serverChange]
  -[_EDMessageChangeManagerFlagChange setServerChange:]
  -[_EDMessageChangeManagerFlagChange localChange]
  -[_EDMessageChangeManagerFlagChange setLocalChange:]


EDMessageChangeManager : NSObject <EFLoggable>
 @property  EDPersistenceDatabase *database
 @property  EDLocalActionPersistence *localActionPersistence
 @property  EDReadLaterPersistence *readLaterPersistence
 @property  EDServerMessagePersistenceFactory *serverMessagePersistenceFactory
 @property  EDBIMIManager *bimiManager
 @property  NSObject<OS_dispatch_queue> *markAllWorkQueue
 @property  EDMessagePersistence *messagePersistence
 @property  <EDMessageChangeHookResponder> *hookResponder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDMessageChangeManager signpostLog]
  +[EDMessageChangeManager log]

  // instance methods
  -[EDMessageChangeManager test_tearDown]
  -[EDMessageChangeManager willStartPersistenceDidAddMessages:]
  -[EDMessageChangeManager readLaterPersistence]
  -[EDMessageChangeManager signpostID]
  -[EDMessageChangeManager moveMessages:destinationMailboxURL:userInitiated:]
  -[EDMessageChangeManager copyMessages:destinationMailboxURL:userInitiated:]
  -[EDMessageChangeManager .cxx_destruct]
  -[EDMessageChangeManager messagesToJournalForMessages:inMailbox:]
  -[EDMessageChangeManager didReflectNewMessages:]
  -[EDMessageChangeManager didFinishPersistenceDidAddMessages:]
  -[EDMessageChangeManager addNewMessages:mailboxURL:userInitiated:]
  -[EDMessageChangeManager localActionPersistence]
  -[EDMessageChangeManager database]
  -[EDMessageChangeManager messagePersistence]
  -[EDMessageChangeManager hookResponder]
  -[EDMessageChangeManager deleteMessages:]
  -[EDMessageChangeManager bimiManager]
  -[EDMessageChangeManager serverMessagePersistenceFactory]
  -[EDMessageChangeManager init]
  -[EDMessageChangeManager accountForMailboxURL:]
  -[EDMessageChangeManager mailboxURL:isInSameAccountAsMailboxURL:]
  -[EDMessageChangeManager mailboxURLIsInRemoteAccount:]
  -[EDMessageChangeManager applyFlagChange:toMessages:]
  -[EDMessageChangeManager applyFollowUp:toMessages:]
  -[EDMessageChangeManager reflectDeletedMessages:]
  -[EDMessageChangeManager reflectFlagChanges:forMessages:]
  -[EDMessageChangeManager reflectFlagChanges:forMessagesWithRemoteIDs:mailboxURL:]
  -[EDMessageChangeManager initWithDatabase:localActionPersistence:messagePersistence:serverMessagePersistenceFactory:readLaterPersistence:bimiManager:hookResponder:hookRegistry:]
  -[EDMessageChangeManager persistResults:forAction:]
  -[EDMessageChangeManager reflectSortedFlagChanges:mailboxURL:]
  -[EDMessageChangeManager reflectAllMessagesDeletedInMailboxURL:]
  -[EDMessageChangeManager reflectNewMessages:mailboxURL:]
  -[EDMessageChangeManager reflectDeletedMessagesWithRemoteIDs:mailboxURL:]
  -[EDMessageChangeManager _hookResponderRespondsToRequiredMethods:]
  -[EDMessageChangeManager transferMessages:transferType:destinationMailboxURL:userInitiated:]
  -[EDMessageChangeManager transferMessages:transferType:destinationMailboxURL:userInitiated:oldMessagesByNewMessage:]
  -[EDMessageChangeManager deleteAllMessageFromMailboxes:exceptMessages:]
  -[EDMessageChangeManager transferAllMessagesFromMailboxes:exceptMessages:transferType:destinationMailboxURL:userInitiated:]
  -[EDMessageChangeManager applyFlagChange:toAllMessagesFromMailboxes:exceptMessages:]
  -[EDMessageChangeManager applyFollowUp:toMessages:withNegativeFeedbackForSuggestions:]
  -[EDMessageChangeManager applyReadLaterDate:toMessages:]
  -[EDMessageChangeManager _applyReadLaterDate:toMessages:changeIsRemote:]
  -[EDMessageChangeManager _applyReadLaterDate:toMessages:changeIsRemote:hookResponder:]
  -[EDMessageChangeManager _truncateReadLaterDate:]
  -[EDMessageChangeManager applyVIPStatus:forMessages:]
  -[EDMessageChangeManager addLabels:removeLabels:forMessages:]
  -[EDMessageChangeManager reflectDeletedAllClearedMessagesInMailboxURL:]
  -[EDMessageChangeManager _reflectFlagChanges:messages:remoteIDs:mailboxURL:]
  -[EDMessageChangeManager reflectAddedLabels:removedLabels:forMessagesWithRemoteIDs:mailboxURL:]
  -[EDMessageChangeManager _persistResults:forLabelChangeAction:]
  -[EDMessageChangeManager _resetLocalLabelsToServerLabelsForMessagesWithRemoteIDs:mailboxURL:]
  -[EDMessageChangeManager _persistResults:forFlagChangeAction:]
  -[EDMessageChangeManager _persistFlagChangeResults:forFlagChangeAction:]
  -[EDMessageChangeManager _clearFollowUpsFromThreadsForMessages:]
  -[EDMessageChangeManager _resetLocalFlagsToServerFlagsForMessagesWithRemoteIDs:mailboxURL:]
  -[EDMessageChangeManager _persistResults:forTransferAction:]
  -[EDMessageChangeManager _handleFailedDownload:generationWindow:]
  -[EDMessageChangeManager _handleFailedCopyItems:transferAction:generationWindow:]
  -[EDMessageChangeManager _storeServerMessages:mailboxURL:generationWindow:]
  -[EDMessageChangeManager _deleteDestinationMessagesFromCompletedItems:notInServerMessages:]
  -[EDMessageChangeManager _findDestinationMessagesFromCompletedItems:notInServerMessages:]
  -[EDMessageChangeManager _handleDuplicateServerMessage:serverMessagePersistence:]
  -[EDMessageChangeManager _needToStoreServerMessagesForMailboxURL:]
  -[EDMessageChangeManager remindMeCloudStorageChangedWithAddedOrChangedItems:deletedItems:]
  -[EDMessageChangeManager markAllWorkQueue]
  -[EDMessageChangeManager setMarkAllWorkQueue:]


EDMessageCountQueryHandler : NSObject <EFListStateCapturerDelegate, EFLoggable, EDMailboxChangeHookResponder, EDMessageChangeHookResponder, EMMailboxChangeObserver, EFCancelable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDMessageCountQueryHandler log]

  // instance methods
  -[EDMessageCountQueryHandler test_tearDown]
  -[EDMessageCountQueryHandler persistenceDidDeleteMessages:generationWindow:]
  -[EDMessageCountQueryHandler persistenceDidUpdateSendLaterDate:messages:generationWindow:]
  -[EDMessageCountQueryHandler persistenceIsAddingMailboxWithDatabaseID:objectID:generationWindow:]
  -[EDMessageCountQueryHandler persistenceDidChangeGlobalMessageID:orConversationID:message:generationWindow:]
  -[EDMessageCountQueryHandler persistenceDidUpdateFollowUpForMessages:generationWindow:]
  -[EDMessageCountQueryHandler willSyncMailbox:]
  -[EDMessageCountQueryHandler persistenceDidUpdateServerCount:forMailboxWithObjectID:generationWindow:]
  -[EDMessageCountQueryHandler persistenceDidUpdateMostRecentStatusCount:forMailboxWithObjectID:generationWindow:]
  -[EDMessageCountQueryHandler dealloc]
  -[EDMessageCountQueryHandler didSyncMailbox:]
  -[EDMessageCountQueryHandler .cxx_destruct]
  -[EDMessageCountQueryHandler persistenceDidUpdateLastSyncAndMostRecentStatusCount:forMailboxWithObjectID:generationWindow:]
  -[EDMessageCountQueryHandler persistenceDidAddMessages:generationWindow:]
  -[EDMessageCountQueryHandler itemsForStateCaptureWithErrorString:]
  -[EDMessageCountQueryHandler persistenceWillChangeFlags:messages:]
  -[EDMessageCountQueryHandler labelForStateCapture]
  -[EDMessageCountQueryHandler persistenceDidUpdateDisplayDateForMessages:changeIsRemote:generation:]
  -[EDMessageCountQueryHandler persistenceDidChangeVIPStatus:messages:]
  -[EDMessageCountQueryHandler persistenceDidChangeReadLaterDate:messages:changeIsRemote:generationWindow:]
  -[EDMessageCountQueryHandler mailboxListChanged:]
  -[EDMessageCountQueryHandler persistenceDidChangeFlags:messages:generationWindow:]
  -[EDMessageCountQueryHandler initWithQuery:serverCountMailboxScope:messagePersistence:hookRegistry:observer:refireDebounceInterval:]
  -[EDMessageCountQueryHandler cancel]
  -[EDMessageCountQueryHandler initWithQuery:serverCountMailboxScope:messagePersistence:hookRegistry:observer:]
  -[EDMessageCountQueryHandler persistenceDidUpdateProperties:message:generationWindow:]
  -[EDMessageCountQueryHandler descriptionForItem:]


_EDMailboxServerCount : NSObject

EDMessageDataLayoutManager : NSObject
  // class methods
  +[EDMessageDataLayoutManager messageDataDirectoryURLForGlobalMessageID:basePath:purgeable:]
  +[EDMessageDataLayoutManager rootMessageDataDirectoryForBasePath:purgeable:]


EDMessageListItemPredicates : NSObject
  // class methods
  +[EDMessageListItemPredicates predicateForMessagesFromVIPs:]
  +[EDMessageListItemPredicates predicateForMessagesToAddresses:]
  +[EDMessageListItemPredicates predicateForMessagesThatCCAddresses:]
  +[EDMessageListItemPredicates _predicateForRecipientMessagesAddressesKey:addresses:]
  +[EDMessageListItemPredicates predicateForMailboxTypePredicate:mailboxes:]
  +[EDMessageListItemPredicates predicateForMessagesWithObjectIDsPredicate:objectIDConverter:]
  +[EDMessageListItemPredicates _objectIDsFromRightExpression:]
  +[EDMessageListItemPredicates _predicateForAnyMailboxWithPredicate:]
  +[EDMessageListItemPredicates predicateForMessageIDHeaderHashPredicate:]
  +[EDMessageListItemPredicates predicateForAnyRecipientPredicate:]
  +[EDMessageListItemPredicates predicateForSenderPredicate:]
  +[EDMessageListItemPredicates predicateForSubjectPredicate:]
  +[EDMessageListItemPredicates predicateForBody:]
  +[EDMessageListItemPredicates predicateForSpotlightPredicate:]


EDMessagePersistence : NSObject <EFLoggable, EFSignpostable, EDMailboxPredictionQueryAdapter, EDMessageObjectIDToDatabaseIDConverter>
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  NSObject<OS_dispatch_queue> *cachedMetadataIsolation
 @property  NSNumber *cachedMetadataEstimatedRowCount
 @property  int cachedMetadataUpdatesSinceLastCheck
 @property  EDPersistenceDatabase *database
 @property  EDMessageTransformer *messageTransformer
 @property  EDMailboxPersistence *mailboxPersistence
 @property  EDMessagePersistenceStatistics *persistenceStatistics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long signpostID

  // class methods
  +[EDMessagePersistence objectPropertyMapperForSchema:protectedSchema:]
  +[EDMessagePersistence messageGlobalDataTableSchema]
  +[EDMessagePersistence allDatabaseIDsForSimpleAddresses:connection:]
  +[EDMessagePersistence _addressesTableSchema]
  +[EDMessagePersistence _brandIndicatorsTableSchema]
  +[EDMessagePersistence _messageReferencesTableSchema]
  +[EDMessagePersistence signpostLog]
  +[EDMessagePersistence addJoinsForAddressToSelectComponent:withSourceAddressColumn:]
  +[EDMessagePersistence bitExpressionForAttachments]
  +[EDMessagePersistence protectedTablesAndForeignKeysToResolve:]
  +[EDMessagePersistence messagesDateReceivedColumnName]
  +[EDMessagePersistence _summariesTableSchema]
  +[EDMessagePersistence messagesTableName]
  +[EDMessagePersistence log]
  +[EDMessagePersistence partialMessagesTableSchemaAndForeignKeysToResolve:associationsToResolve:]
  +[EDMessagePersistence selectAddressesStatementWithResultColumns:]
  +[EDMessagePersistence tablesAndForeignKeysToResolve:associationsToResolve:]
  +[EDMessagePersistence bitExpressionForConversationFlag:]
  +[EDMessagePersistence _subjectsTableSchema]
  +[EDMessagePersistence _protectedMessageDataTableSchema]
  +[EDMessagePersistence _databaseIDFromSelect:connection:]
  +[EDMessagePersistence databaseIDForEmailAddress:connection:]
  +[EDMessagePersistence recipientsTableSchemaAndForeignKeysToResolve:associationsToResolve:]
  +[EDMessagePersistence messagesDisplayDateColumnName]
  +[EDMessagePersistence addressesTableName]
  +[EDMessagePersistence messageGlobalDataTableName]
  +[EDMessagePersistence _cachedMetadataTableSchema]

  // instance methods
  -[EDMessagePersistence globalIDForMessageWithDatabaseID:mailboxScope:]
  -[EDMessagePersistence signpostID]
  -[EDMessagePersistence hookRegistry]
  -[EDMessagePersistence countOfMessagesMatchingQuery:]
  -[EDMessagePersistence iteratePersistedMessagesMatchingQuery:limit:cancelationToken:handler:]
  -[EDMessagePersistence enabledAccountMailboxesExpression]
  -[EDMessagePersistence .cxx_destruct]
  -[EDMessagePersistence requestContentForMessageObjectID:requestID:options:delegate:completionHandler:]
  -[EDMessagePersistence database]
  -[EDMessagePersistence requestSummaryForMessageObjectID:]
  -[EDMessagePersistence persistedMessageForOutgoingMessage:isDraft:]
  -[EDMessagePersistence persistedMessagesForDatabaseIDs:requireProtectedData:temporarilyUnavailableDatabaseIDs:]
  -[EDMessagePersistence iterateMessagesMatchingQuery:batchSize:firstBatchSize:limit:cancelationToken:handler:]
  -[EDMessagePersistence groupedMessagesCountByMailboxMatchingQuery:variable:]
  -[EDMessagePersistence compressFile:error:]
  -[EDMessagePersistence collectStatistics]
  -[EDMessagePersistence countOfMessagesWithGlobalMessageID:matchingQuery:]
  -[EDMessagePersistence mailboxPersistence]
  -[EDMessagePersistence cachedDatabaseIDsDictionaryForGlobalMessageIDs:]
  -[EDMessagePersistence persistenceStatistics]
  -[EDMessagePersistence persistedMessagesForMessageObjectIDs:requireProtectedData:temporarilyUnavailableMessageObjectIDs:]
  -[EDMessagePersistence reconcileJournalWithCompletionBlock:]
  -[EDMessagePersistence setCachedMetadataJSON:forKey:messageID:]
  -[EDMessagePersistence iterateMessagesMatchingSmartSortQuery:limit:handler:]
  -[EDMessagePersistence messageObjectIDCriterionExpressionForPredicateValue:]
  -[EDMessagePersistence queryWithExpandedMailboxesFromQuery:]
  -[EDMessagePersistence messageTransformer]
  -[EDMessagePersistence performDatabaseWorkInBlockWithHighPriority:]
  -[EDMessagePersistence messagesForPersistedMessages:mailboxScope:]
  -[EDMessagePersistence cachedMetadataJSONForKey:messageID:]
  -[EDMessagePersistence initWithMailboxPersistence:database:hookRegistry:userProfileProvider:blockedSenderManager:vipReader:]
  -[EDMessagePersistence collectStatisticsWithStatistics:]
  -[EDMessagePersistence compressDirectory:shouldCancel:error:]
  -[EDMessagePersistence messageObjectIDForURL:]
  -[EDMessagePersistence messageObjectIDsForSearchableItemIdentifiers:]
  -[EDMessagePersistence validMailboxesForPrediction]
  -[EDMessagePersistence databaseIDsDictionaryForMessageObjectIDs:]
  -[EDMessagePersistence performDatabaseReadBlock:]
  -[EDMessagePersistence messagesMatchingQuery:]
  -[EDMessagePersistence messagesMatchingQuery:limit:]
  -[EDMessagePersistence messagesMatchingQuery:limit:cancelationToken:]
  -[EDMessagePersistence persistedMessagesMatchingQuery:limit:]
  -[EDMessagePersistence _databaseIDsDictionaryForGlobalMessageIDs:mailboxScope:]
  -[EDMessagePersistence persistedMessagesForObjectIDs:requireProtectedData:]
  -[EDMessagePersistence _threadQueryForThreadObjectID:]
  -[EDMessagePersistence persistedMessageIDsForMessagesWithFollowUpsForConversationIDs:]
  -[EDMessagePersistence persistedMessageIDsForGlobalMessageIDs:]
  -[EDMessagePersistence messagesForMessageObjectIDs:missedMessageObjectIDs:]
  -[EDMessagePersistence _groupMessageObjectIDsByMailboxScope:]
  -[EDMessagePersistence _cachedMetadataJSONForKey:globalMessageID:]
  -[EDMessagePersistence _setCachedMetadataJSON:forKey:globalMessageID:]
  -[EDMessagePersistence _checkCachedMetadataRowLimitWithConnection:]
  -[EDMessagePersistence brandIndicatorForDatabaseID:]
  -[EDMessagePersistence brandIndicatorForURL:]
  -[EDMessagePersistence brandIndicatorsForURLs:]
  -[EDMessagePersistence addBrandIndicatorWithData:]
  -[EDMessagePersistence undownloadedBrandIndicatorsWithLimit:]
  -[EDMessagePersistence setBrandIndicator:forURL:]
  -[EDMessagePersistence removeBrandIndicatorForURL:]
  -[EDMessagePersistence setBrandIndicatorDatabaseID:location:forMessages:]
  -[EDMessagePersistence retrieveFollowUpJsonStringForModelEvaluationForSuggestionsForMessages:]
  -[EDMessagePersistence persistFollowUp:forMessages:]
  -[EDMessagePersistence updateBeforeDisplayForMessagesMatchingQuery:]
  -[EDMessagePersistence updateBeforeDisplayForPersistedMessages:]
  -[EDMessagePersistence updateDisplayDateForPersistedMessage:displayDate:changeIsRemote:]
  -[EDMessagePersistence _checkForFollowUpExpirationWithQuery:]
  -[EDMessagePersistence globalIDForMessageIDHash:]
  -[EDMessagePersistence globalIDForMessageIDHeader:]
  -[EDMessagePersistence cachedMetadataIsolation]
  -[EDMessagePersistence cachedMetadataEstimatedRowCount]
  -[EDMessagePersistence setCachedMetadataEstimatedRowCount:]
  -[EDMessagePersistence cachedMetadataUpdatesSinceLastCheck]
  -[EDMessagePersistence setCachedMetadataUpdatesSinceLastCheck:]
  -[EDMessagePersistence setMessageTransformer:]


EDMessagePersistenceStatistics : NSObject
 @property  double start
 @property  double duration
 @property  unsigned long messages
 @property  unsigned long messageData
 @property  unsigned long messagesDeleted
 @property  unsigned long messageDataDeleted
 @property  unsigned long indexableMessages
 @property  unsigned long messagesIndexed
 @property  unsigned long messagesToIndex
 @property  unsigned long indexableAttachments
 @property  unsigned long attachmentsIndexed
 @property  unsigned long attachmentsToIndex

  // instance methods
  -[EDMessagePersistenceStatistics setDuration:]
  -[EDMessagePersistenceStatistics messages]
  -[EDMessagePersistenceStatistics duration]
  -[EDMessagePersistenceStatistics setStart:]
  -[EDMessagePersistenceStatistics start]
  -[EDMessagePersistenceStatistics messageData]
  -[EDMessagePersistenceStatistics setMessageData:]
  -[EDMessagePersistenceStatistics setMessages:]
  -[EDMessagePersistenceStatistics setAttachmentsIndexed:]
  -[EDMessagePersistenceStatistics setAttachmentsToIndex:]
  -[EDMessagePersistenceStatistics setIndexableAttachments:]
  -[EDMessagePersistenceStatistics attachmentsIndexed]
  -[EDMessagePersistenceStatistics attachmentsToIndex]
  -[EDMessagePersistenceStatistics messageDataDeleted]
  -[EDMessagePersistenceStatistics indexableAttachments]
  -[EDMessagePersistenceStatistics setMessageDataDeleted:]
  -[EDMessagePersistenceStatistics indexableMessages]
  -[EDMessagePersistenceStatistics messagesDeleted]
  -[EDMessagePersistenceStatistics messagesIndexed]
  -[EDMessagePersistenceStatistics messagesToIndex]
  -[EDMessagePersistenceStatistics setMessagesDeleted:]
  -[EDMessagePersistenceStatistics setIndexableMessages:]
  -[EDMessagePersistenceStatistics setMessagesIndexed:]
  -[EDMessagePersistenceStatistics setMessagesToIndex:]


EDMessageQueryEvaluator : NSObject <EFLoggable>
 @property  EFQuery *messageQuery
 @property  EDMessagePersistence *messagePersistence
 @property  EMMailboxScope *mailboxScope
 @property  NSCache *spotlightPredicateCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDMessageQueryEvaluator log]

  // instance methods
  -[EDMessageQueryEvaluator transformAndFilterMessages:includeDeleted:]
  -[EDMessageQueryEvaluator .cxx_destruct]
  -[EDMessageQueryEvaluator initWithQuery:messagePersistence:]
  -[EDMessageQueryEvaluator mailboxScope]
  -[EDMessageQueryEvaluator transformMessages:includeDeleted:]
  -[EDMessageQueryEvaluator messagePersistence]
  -[EDMessageQueryEvaluator transformAndFilterMessages:]
  -[EDMessageQueryEvaluator setSpotlightPredicateCache:]
  -[EDMessageQueryEvaluator spotlightPredicateCache]
  -[EDMessageQueryEvaluator messageQuery]
  -[EDMessageQueryEvaluator transformMessages:]
  -[EDMessageQueryEvaluator filterMessages:unmatchedMessages:]


EDMessageQueryHandler : EDMessageRepositoryQueryHandler <EMCollectionItemIDStateCapturerDelegate, EDMessageQueryHelperDelegate, EFLoggable, EFContentProtectionObserver>
 @property  <EDRemoteSearchProvider> *remoteSearchProvider
 @property  EDMessageQueryHelper *currentQueryHelper
 @property  <EFScheduler> *scheduler
 @property  NSObject<OS_dispatch_queue> *contentProtectionQueue
 @property  NSObject<OS_dispatch_queue> *resultQueue
 @property  BOOL didCancel
 @property  BOOL isInitialized
 @property  NSMutableDictionary *oldestMessageIDsByMailboxObjectIDs
 @property  EMCollectionItemIDStateCapturer *stateCapturer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDMessageQueryHandler log]
  +[EDMessageQueryHandler findMessagesByPreviousObjectIDForAddedMessages:messageSource:]

  // instance methods
  -[EDMessageQueryHandler didCancel]
  -[EDMessageQueryHandler isInitialized]
  -[EDMessageQueryHandler scheduler]
  -[EDMessageQueryHandler dealloc]
  -[EDMessageQueryHandler contentProtectionStateChanged:previousState:]
  -[EDMessageQueryHandler .cxx_destruct]
  -[EDMessageQueryHandler remoteSearchProvider]
  -[EDMessageQueryHandler labelForStateCapture]
  -[EDMessageQueryHandler start]
  -[EDMessageQueryHandler contentProtectionQueue]
  -[EDMessageQueryHandler cancel]
  -[EDMessageQueryHandler resultQueue]
  -[EDMessageQueryHandler setDidCancel:]
  -[EDMessageQueryHandler itemIDsForStateCaptureWithErrorString:]
  -[EDMessageQueryHandler stateCapturer]
  -[EDMessageQueryHandler queryHelper:didFindMessages:]
  -[EDMessageQueryHandler queryHelperDidFindAllMessages:]
  -[EDMessageQueryHandler queryHelper:didAddMessages:]
  -[EDMessageQueryHandler queryHelper:messageFlagsDidChangeForMessages:]
  -[EDMessageQueryHandler queryHelper:conversationIDDidChangeForMessages:fromConversationID:]
  -[EDMessageQueryHandler queryHelper:conversationNotificationLevelDidChangeForConversation:conversationID:]
  -[EDMessageQueryHandler queryHelper:objectIDDidChangeForMessage:oldObjectID:oldConversationID:]
  -[EDMessageQueryHandler queryHelper:didUpdateMessages:forKeyPaths:]
  -[EDMessageQueryHandler queryHelper:didDeleteMessages:]
  -[EDMessageQueryHandler queryHelperDidFinishRemoteSearch:]
  -[EDMessageQueryHandler queryHelperNeedsRestart:]
  -[EDMessageQueryHandler _queryHelperIsCurrent:]
  -[EDMessageQueryHandler _restartHelper]
  -[EDMessageQueryHandler _createHelperAndReconcileJournal:]
  -[EDMessageQueryHandler _contentProtectionChangedToLocked]
  -[EDMessageQueryHandler _contentProtectionChangedToUnlocked]
  -[EDMessageQueryHandler setIsInitialized:]
  -[EDMessageQueryHandler initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:remoteSearchProvider:observer:observationIdentifier:]
  -[EDMessageQueryHandler _objectIDsAndUnreadObjectIDsFromMessages:unreadObjectIDs:]
  -[EDMessageQueryHandler _createChangesForMessagesWithConversationID:block:]
  -[EDMessageQueryHandler _initializeOldestMessagesByMailbox]
  -[EDMessageQueryHandler _oldestMessagesNeedUpdate]
  -[EDMessageQueryHandler _updateOldestMessagesForMailboxes:cancelationToken:]
  -[EDMessageQueryHandler _oldestItemQueryForMailbox:]
  -[EDMessageQueryHandler _oldestMessagesByMailboxObjectIDsWasUpdated]
  -[EDMessageQueryHandler findMessagesByPreviousObjectIDForAddedMessages:helper:]
  -[EDMessageQueryHandler currentQueryHelper]
  -[EDMessageQueryHandler setCurrentQueryHelper:]
  -[EDMessageQueryHandler oldestMessageIDsByMailboxObjectIDs]


_EDMessageItemIDCollector : NSObject <EDMessageQueryHelperDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_EDMessageItemIDCollector .cxx_destruct]
  -[_EDMessageItemIDCollector init]
  -[_EDMessageItemIDCollector queryHelper:didFindMessages:]
  -[_EDMessageItemIDCollector queryHelperDidFindAllMessages:]
  -[_EDMessageItemIDCollector queryHelper:didAddMessages:]
  -[_EDMessageItemIDCollector queryHelper:messageFlagsDidChangeForMessages:]
  -[_EDMessageItemIDCollector queryHelper:conversationIDDidChangeForMessages:fromConversationID:]
  -[_EDMessageItemIDCollector queryHelper:conversationNotificationLevelDidChangeForConversation:conversationID:]
  -[_EDMessageItemIDCollector queryHelper:objectIDDidChangeForMessage:oldObjectID:oldConversationID:]
  -[_EDMessageItemIDCollector queryHelper:didUpdateMessages:forKeyPaths:]
  -[_EDMessageItemIDCollector queryHelper:didDeleteMessages:]
  -[_EDMessageItemIDCollector queryHelperDidFinishRemoteSearch:]
  -[_EDMessageItemIDCollector queryHelperNeedsRestart:]
  -[_EDMessageItemIDCollector collectItemIDsWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:remoteSearchProvider:errorString:]


EDMessageQueryHelper : NSObject <EDMessageChangeHookResponder, EDRemindMeNotificationControllerObserver, EDRemoteSearchDelegate, EDSenderBucketChangeHookResponder, EFLoggable, EDMessageQueryHelperMessageSource, EFCancelable>
 @property  EDMessagePersistence *messagePersistence
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  <EDRemoteSearchProvider> *remoteSearchProvider
 @property  EDRemindMeNotificationController *remindMeNotificationController
 @property  <EFScheduler> *scheduler
 @property  <EDMessageQueryHelperDelegate> *delegate
 @property  EDMessageQueryEvaluator *queryEvaluator
 @property  EFCancelationToken *cancelationToken
 @property  BOOL shouldReconcileJournal
 @property  BOOL keepMessagesInListOnBucketChange
 @property  BOOL updateDisplayDate
 @property  NSPredicate *ignoreMessagesPredicate
 @property  BOOL addMessagesSynchronously
 @property  NSString *pendingFlagChangesKey
 @property  NSString *pendingConversationIDChangesKey
 @property  NSString *pendingJournaledMessageAddsKey
 @property  NSString *pendingSenderBucketChangesKey
 @property  NSString *pendingReadLaterDateChangesKey
 @property  NSString *pendingDisplayDateChangesKey
 @property  EFQuery *query
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDMessageQueryHelper log]

  // instance methods
  -[EDMessageQueryHelper persistenceDidDeleteMessages:generationWindow:]
  -[EDMessageQueryHelper query]
  -[EDMessageQueryHelper scheduler]
  -[EDMessageQueryHelper persistenceDidChangeGlobalMessageID:orConversationID:message:generationWindow:]
  -[EDMessageQueryHelper hookRegistry]
  -[EDMessageQueryHelper delegate]
  -[EDMessageQueryHelper persistenceDidAddAddresses:toSender:generation:]
  -[EDMessageQueryHelper dealloc]
  -[EDMessageQueryHelper .cxx_destruct]
  -[EDMessageQueryHelper persistenceDidAddMessages:generationWindow:]
  -[EDMessageQueryHelper persistenceDidDeleteAllMessagesInMailboxesWithURLs:generationWindow:]
  -[EDMessageQueryHelper remindMeNotificationController]
  -[EDMessageQueryHelper persistenceDidRemoveAddresses:fromSender:generation:]
  -[EDMessageQueryHelper persistenceWillChangeFlags:messages:]
  -[EDMessageQueryHelper remoteSearchProvider]
  -[EDMessageQueryHelper persistenceDidUpdateDisplayDateForMessages:changeIsRemote:generation:]
  -[EDMessageQueryHelper messagePersistence]
  -[EDMessageQueryHelper persistenceIsAddingMessages:journaled:generationWindow:]
  -[EDMessageQueryHelper start]
  -[EDMessageQueryHelper persistenceDidChangeReadLaterDate:messages:changeIsRemote:generationWindow:]
  -[EDMessageQueryHelper persistenceIsChangingConversationID:messages:generationWindow:]
  -[EDMessageQueryHelper persistenceDidChangeFlags:messages:generationWindow:]
  -[EDMessageQueryHelper cancel]
  -[EDMessageQueryHelper cancelationToken]
  -[EDMessageQueryHelper setCancelationToken:]
  -[EDMessageQueryHelper persistenceDidUpdateProperties:message:generationWindow:]
  -[EDMessageQueryHelper persistenceDidReconcileJournaledMessages:generationWindow:]
  -[EDMessageQueryHelper persistenceWillChangeReadLaterDate:messages:]
  -[EDMessageQueryHelper persistenceWillUpdateDisplayDateForMessages:]
  -[EDMessageQueryHelper persistenceDidChangeConversationNotificationLevel:conversationID:generationWindow:]
  -[EDMessageQueryHelper persistenceWillChangeConversationID:messages:]
  -[EDMessageQueryHelper updateDisplayDate]
  -[EDMessageQueryHelper keepMessagesInListOnBucketChange]
  -[EDMessageQueryHelper setKeepMessagesInListOnBucketChange:]
  -[EDMessageQueryHelper controller:messageTimerFired:]
  -[EDMessageQueryHelper remoteSearchDidFindMessages:]
  -[EDMessageQueryHelper remoteSearchDidFinish]
  -[EDMessageQueryHelper persistenceWillChangeSenderBucketForAddresses:toBucket:]
  -[EDMessageQueryHelper persistenceWillChangeSenderBucketForSender:toBucket:]
  -[EDMessageQueryHelper persistenceDidChangeSenderBucketForSender:toBucket:generation:]
  -[EDMessageQueryHelper persistenceWillAddAddresses:toSender:]
  -[EDMessageQueryHelper persistenceWillRemoveAddresses:fromSender:]
  -[EDMessageQueryHelper messagesWithAdditionalPredicates:limit:]
  -[EDMessageQueryHelper initWithQuery:messagePersistence:hookRegistry:remoteSearchProvider:scheduler:remindMeNotificationController:delegate:shouldReconcileJournal:shouldAddMessagesSynchronously:keepMessagesInListOnBucketChange:]
  -[EDMessageQueryHelper _updateDisplayDateForMessagesIfNeeded]
  -[EDMessageQueryHelper _getInitialResults]
  -[EDMessageQueryHelper _foundMessages:]
  -[EDMessageQueryHelper _persistenceDidDeleteMessages:includeMessagesWithDeletedFlag:]
  -[EDMessageQueryHelper _prepareForSenderBucketChangeForThreadsWithSenderAddresses:]
  -[EDMessageQueryHelper _reportSenderBucketChangeForThreadsWithSenderAddresses:]
  -[EDMessageQueryHelper _reportChangesForPersistedMessages:withPendingChangesKey:keyPaths:]
  -[EDMessageQueryHelper _reportChangesForCurrentlyMatchingMessages:previouslyMatchingMessages:keyPaths:]
  -[EDMessageQueryHelper _persistedMessagesFromSendersWithAddresses:]
  -[EDMessageQueryHelper _calculateAndReportChangesForPersistedMessages:withPendingChangesKey:changeBlock:]
  -[EDMessageQueryHelper _transformAndFilterMessages:includeDeleted:removeIgnoredMessages:]
  -[EDMessageQueryHelper queryEvaluator]
  -[EDMessageQueryHelper setQueryEvaluator:]
  -[EDMessageQueryHelper shouldReconcileJournal]
  -[EDMessageQueryHelper setShouldReconcileJournal:]
  -[EDMessageQueryHelper ignoreMessagesPredicate]
  -[EDMessageQueryHelper setIgnoreMessagesPredicate:]
  -[EDMessageQueryHelper addMessagesSynchronously]
  -[EDMessageQueryHelper setAddMessagesSynchronously:]
  -[EDMessageQueryHelper pendingFlagChangesKey]
  -[EDMessageQueryHelper pendingConversationIDChangesKey]
  -[EDMessageQueryHelper pendingJournaledMessageAddsKey]
  -[EDMessageQueryHelper pendingSenderBucketChangesKey]
  -[EDMessageQueryHelper pendingReadLaterDateChangesKey]
  -[EDMessageQueryHelper pendingDisplayDateChangesKey]


EDMessageQueryParserObject : NSObject
 @property  unsigned long queryType
 @property  NSPredicate *predicate

  // instance methods
  -[EDMessageQueryParserObject queryType]
  -[EDMessageQueryParserObject predicate]
  -[EDMessageQueryParserObject .cxx_destruct]
  -[EDMessageQueryParserObject initWithQueryType:predicate:]


EDMessagePredicateParser : NSObject
 @property  EDMessageQueryParser *queryParser

  // class methods
  +[EDMessagePredicateParser parserForPredicate:queryParser:]

  // instance methods
  -[EDMessagePredicateParser .cxx_destruct]
  -[EDMessagePredicateParser queryParser]
  -[EDMessagePredicateParser initWithQueryParser:]
  -[EDMessagePredicateParser parseResultsFromPredicate:]


EDMessageComparisonPredicateParser : EDMessagePredicateParser
  // instance methods
  -[EDMessageComparisonPredicateParser parseResultsFromPredicate:]
  -[EDMessageComparisonPredicateParser isSearchableIndexQueryableKeypath:searchableIndexPropertyMapper:]


EDMessageCompoundPredicateParser : EDMessagePredicateParser
  // instance methods
  -[EDMessageCompoundPredicateParser parseResultsFromPredicate:]
  -[EDMessageCompoundPredicateParser parseMixedSubpredicateResults:predicate:]
  -[EDMessageCompoundPredicateParser resultQueryType:]


EDMessageQueryParser : NSObject
 @property  EDMessageQueryTransformer *transformer
 @property  EDSearchableIndex *searchableIndex
 @property  EFSQLObjectPropertyMapper *sqlPropertyMapper
 @property  EFSearchableIndexObjectPropertyMapper *searchableIndexMapper

  // class methods
  +[EDMessageQueryParser performSearchableIndexQueryPredicate:propertyMapper:searchableIndex:]

  // instance methods
  -[EDMessageQueryParser transformer]
  -[EDMessageQueryParser .cxx_destruct]
  -[EDMessageQueryParser searchableIndex]
  -[EDMessageQueryParser initWithSchema:protectedSchema:searchableIndex:accountsProvider:vipManager:messagePersistence:mailboxPersistence:]
  -[EDMessageQueryParser sqlQueryForQuery:]
  -[EDMessageQueryParser sqlQueryForQuery:predicate:]
  -[EDMessageQueryParser sqlPropertyMapper]
  -[EDMessageQueryParser searchableIndexMapper]


EDMessageQueryTransformer : NSObject
 @property  <EDAccountsProvider> *accountsProvider
 @property  EDMailboxPersistence *mailboxPersistence
 @property  EDMessagePersistence *messagePersistence
 @property  <EMVIPManager> *vipManager

  // instance methods
  -[EDMessageQueryTransformer .cxx_destruct]
  -[EDMessageQueryTransformer accountsProvider]
  -[EDMessageQueryTransformer messagePersistence]
  -[EDMessageQueryTransformer vipManager]
  -[EDMessageQueryTransformer mailboxPersistence]
  -[EDMessageQueryTransformer initWithAccountsProvider:mailboxPersistence:messagePersistence:vipManager:]
  -[EDMessageQueryTransformer transformPredicate:]
  -[EDMessageQueryTransformer transformCompoundPredicate:]
  -[EDMessageQueryTransformer transformSubpredicates:]
  -[EDMessageQueryTransformer transformComparisonPredicate:]
  -[EDMessageQueryTransformer simplifyCompoundPredicate:]
  -[EDMessageQueryTransformer simplifyAndPredicate:]
  -[EDMessageQueryTransformer simplifyOrPredicate:]
  -[EDMessageQueryTransformer simplifyNotPredicate:]
  -[EDMessageQueryTransformer simplifySingleSubpredicate:]


EDMessageRepository : NSObject <EDAccountChangeHookResponder, EDThreadQueryHandlerDelegate, EFContentProtectionObserver, EMMessageRepositoryInterface, EDReconciliationQueryProvider, EFLoggable>
 @property  NSMutableDictionary *queryHandlers
 @property  NSMutableDictionary *threadQueryHandlers
 @property  NSMutableSet *handlerTokens
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  EDMessagePersistence *messagePersistence
 @property  EDConversationPersistence *conversationPersistence
 @property  EDThreadPersistence *threadPersistence
 @property  EDRemoteContentPersistence *remoteContentPersistence
 @property  EDRichLinkPersistence *richLinkPersistence
 @property  EDMessageChangeManager *messageChangeManager
 @property  NSConditionLock *performQueryOnSerializationQueue
 @property  NSObject<OS_dispatch_queue> *serializationQueue
 @property  NSObject<OS_dispatch_queue> *contentProtectionQueue
 @property  <EFScheduler> *asyncWorkScheduler
 @property  EDMailboxPersistence *mailboxPersistence
 @property  <EMUserProfileProvider> *userProfileProvider
 @property  EDVIPManager *vipManager
 @property  <EDRemoteSearchProvider> *remoteSearchProvider
 @property  EDFetchController *fetchController
 @property  <EDResumable> *observerResumer
 @property  EDRemoteContentManager *remoteContentManager
 @property  EDRemoteContentCacheConfiguration *remoteContentCacheConfiguration
 @property  <EFScheduler> *updateThrottlerResetScheduler
 @property  @? updateThrottlerResetBlock
 @property  EDWebContentParser *remoteContentParser
 @property  EMBlockedSenderManager *blockedSenderManager
 @property  EDListUnsubscribeHandler *listUnsubscribeHandler
 @property  EDRemindMeNotificationController *remindMeNotificationController
 @property  NSMutableDictionary *filteredMailboxScopedQueryHandlers
 @property  NSSet *test_activeQueryCancelationTokens
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDMessageRepository signpostLog]
  +[EDMessageRepository log]

  // instance methods
  -[EDMessageRepository test_tearDown]
  -[EDMessageRepository signpostID]
  -[EDMessageRepository threadPersistence]
  -[EDMessageRepository userProfileProvider]
  -[EDMessageRepository hookRegistry]
  -[EDMessageRepository dealloc]
  -[EDMessageRepository contentProtectionStateChanged:previousState:]
  -[EDMessageRepository .cxx_destruct]
  -[EDMessageRepository remindMeNotificationController]
  -[EDMessageRepository setMessagePersistence:]
  -[EDMessageRepository conversationPersistence]
  -[EDMessageRepository remoteSearchProvider]
  -[EDMessageRepository richLinkPersistence]
  -[EDMessageRepository remoteContentCacheConfiguration]
  -[EDMessageRepository messagePersistence]
  -[EDMessageRepository remoteContentPersistence]
  -[EDMessageRepository noteViewOfRemoteContentLinks:]
  -[EDMessageRepository vipManager]
  -[EDMessageRepository messageReconciliationQueries]
  -[EDMessageRepository threadReconciliationQueries]
  -[EDMessageRepository blockedSenderManager]
  -[EDMessageRepository contentProtectionQueue]
  -[EDMessageRepository handlerTokens]
  -[EDMessageRepository mailboxPersistence]
  -[EDMessageRepository remoteContentManager]
  -[EDMessageRepository messageChangeManager]
  -[EDMessageRepository serializationQueue]
  -[EDMessageRepository accountBecameActive:]
  -[EDMessageRepository accountBecameInactive:]
  -[EDMessageRepository setCachedMetadataJSON:forKey:messageID:]
  -[EDMessageRepository listUnsubscribeHandler]
  -[EDMessageRepository remoteContentParser]
  -[EDMessageRepository isDataAccessible:]
  -[EDMessageRepository performQuery:limit:completionHandler:]
  -[EDMessageRepository performCountQuery:completionHandler:]
  -[EDMessageRepository performQuery:withObserver:observationIdentifier:completionHandler:]
  -[EDMessageRepository startCountingQuery:includingServerCountsForMailboxScope:withObserver:completionHandler:]
  -[EDMessageRepository messageListItemsForObjectIDs:requestID:observationIdentifier:loadSummaryForAdditionalObjectIDs:completionHandler:]
  -[EDMessageRepository performMessageChangeAction:requestID:returnUndoAction:completionHandler:]
  -[EDMessageRepository requestRepresentationForMessageWithID:requestID:options:delegate:completionHandler:]
  -[EDMessageRepository requestRichLinkMetadataForRichLinkID:messageID:completionHandler:]
  -[EDMessageRepository resetPrecomputedThreadScopesForMailboxScope:]
  -[EDMessageRepository getCachedMetadataJSONForKey:messageID:completionHandler:]
  -[EDMessageRepository predictMailboxForMovingMessages:withObserver:completionHandler:]
  -[EDMessageRepository loadOlderMessagesForMailboxes:]
  -[EDMessageRepository messageObjectIDForURL:completionHandler:]
  -[EDMessageRepository messageObjectIDsForSearchableItemIdentifiers:completionHandler:]
  -[EDMessageRepository getURLCacheInformationWithCompletion:]
  -[EDMessageRepository getRemoteContentURLInfoOrderedBy:inReverseOrder:limit:completionHandler:]
  -[EDMessageRepository parseRemoteContentURLsFromMessageWithObjectID:requestID:completionHandler:]
  -[EDMessageRepository brandIndicatorForLocation:completionHandler:]
  -[EDMessageRepository fetchController]
  -[EDMessageRepository setHookRegistry:]
  -[EDMessageRepository threadQueryHandlerStateDidChange:]
  -[EDMessageRepository initWithMessagePersistence:conversationPersistence:threadPersistence:remoteContentPersistence:messageChangeManager:richLinkPersistence:hookRegistry:mailboxPersistence:remoteSearchProvider:userProfileProvider:vipManager:fetchController:observerResumer:remoteContentManager:remoteContentCacheConfiguration:blockedSenderManager:listUnsubscribeHandler:remindMeNotificationController:]
  -[EDMessageRepository _performQuery:withObserver:observationIdentifier:completionHandler:]
  -[EDMessageRepository _triggerMigrationForThreadScopes:]
  -[EDMessageRepository _triggerMigrationWithThreadScopesMatcher:]
  -[EDMessageRepository test_activeQueryCancelationTokens]
  -[EDMessageRepository cancelAllHandlers]
  -[EDMessageRepository _partitionObjectIDs:]
  -[EDMessageRepository _enumerateObjectIDsAndQueryHandlersForObjectIDsByScope:withTargetClass:usingBlock:]
  -[EDMessageRepository _enumerateThreadObjectIDsByScope:usingBlock:]
  -[EDMessageRepository _performMessageFlagChangeAction:returnUndoAction:]
  -[EDMessageRepository _performMessageFollowUpAction:returnUndoAction:]
  -[EDMessageRepository _performMessageFollowUpDate:persistedMessages:returnUndoAction:]
  -[EDMessageRepository _performMessageReadLaterAction:returnUndoAction:]
  -[EDMessageRepository _performMessageReadLaterDate:persistedMessages:returnUndoAction:]
  -[EDMessageRepository _performSenderBlockingAction:returnUndoAction:]
  -[EDMessageRepository _performBlockSender:persistedMessages:returnUndoAction:]
  -[EDMessageRepository _performUnsubscribeAction:]
  -[EDMessageRepository _performMessageFlagChangeAllAction:]
  -[EDMessageRepository _performMessageDeleteAllAction:]
  -[EDMessageRepository _performMessageDeleteAction:]
  -[EDMessageRepository _changeFlagsForPersistedMessages:flagChange:returnUndoAction:]
  -[EDMessageRepository _performMessageTransferAction:returnUndoAction:]
  -[EDMessageRepository _performMessageTransferAllAction:]
  -[EDMessageRepository _performMessageTransferActionToSpecialMailbox:returnUndoAction:]
  -[EDMessageRepository _performMessageTransferAllActionToSpecialMailbox:]
  -[EDMessageRepository _undoActionsForMovedMessages:]
  -[EDMessageRepository _performUndoAction:]
  -[EDMessageRepository _performMessageConversationFlagChangeAction:returnUndoAction:]
  -[EDMessageRepository _performConversationIDs:conversationNotificationLevel:returnUndoAction:]
  -[EDMessageRepository _persistedMessagesForMessageChangeAction:]
  -[EDMessageRepository _persistedMessagesForObjectIDs:]
  -[EDMessageRepository _persistedObjectIDsForObjectIDs:]
  -[EDMessageRepository mailboxPredictionController]
  -[EDMessageRepository _resetUpdateThrottlersWithLogMessage:]
  -[EDMessageRepository queryHandlers]
  -[EDMessageRepository setQueryHandlers:]
  -[EDMessageRepository threadQueryHandlers]
  -[EDMessageRepository setThreadQueryHandlers:]
  -[EDMessageRepository setHandlerTokens:]
  -[EDMessageRepository setThreadPersistence:]
  -[EDMessageRepository setRichLinkPersistence:]
  -[EDMessageRepository setMessageChangeManager:]
  -[EDMessageRepository performQueryOnSerializationQueue]
  -[EDMessageRepository asyncWorkScheduler]
  -[EDMessageRepository observerResumer]
  -[EDMessageRepository updateThrottlerResetScheduler]
  -[EDMessageRepository updateThrottlerResetBlock]
  -[EDMessageRepository setUpdateThrottlerResetBlock:]
  -[EDMessageRepository filteredMailboxScopedQueryHandlers]
  -[EDMessageRepository setFilteredMailboxScopedQueryHandlers:]


_EDPartitionedObjectIDs : NSObject
 @property  NSArray *messageObjectIDs
 @property  NSDictionary *threadObjectIDsByScope
 @property  NSDictionary *groupedSenderObjectIDsByScope

  // instance methods
  -[_EDPartitionedObjectIDs .cxx_destruct]
  -[_EDPartitionedObjectIDs messageObjectIDs]
  -[_EDPartitionedObjectIDs initWithMessageObjectIDs:threadObjectIDsByScope:groupedSenderObjectIDsByScope:]
  -[_EDPartitionedObjectIDs threadObjectIDsByScope]
  -[_EDPartitionedObjectIDs groupedSenderObjectIDsByScope]


EDMessageRepositoryQueryHandler : NSObject <EFCancelable, EDMessageRepositoryQueryHandler>
 @property  EFLocked *summaryLoadersMapTable
 @property  EFQuery *query
 @property  EDMessagePersistence *messagePersistence
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  EDRemindMeNotificationController *remindMeNotificationController
 @property  <EMMessageListItemQueryResultsObserver> *resultsObserver
 @property  EMObjectID *observationIdentifier
 @property  NSSet *mailboxes
 @property  long long dateSortOrder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDMessageRepositoryQueryHandler test_tearDown]
  -[EDMessageRepositoryQueryHandler query]
  -[EDMessageRepositoryQueryHandler tearDown]
  -[EDMessageRepositoryQueryHandler hookRegistry]
  -[EDMessageRepositoryQueryHandler dealloc]
  -[EDMessageRepositoryQueryHandler .cxx_destruct]
  -[EDMessageRepositoryQueryHandler mailboxes]
  -[EDMessageRepositoryQueryHandler remindMeNotificationController]
  -[EDMessageRepositoryQueryHandler requestSummaryForMessageObjectID:]
  -[EDMessageRepositoryQueryHandler messagePersistence]
  -[EDMessageRepositoryQueryHandler start]
  -[EDMessageRepositoryQueryHandler messageReconciliationQueries]
  -[EDMessageRepositoryQueryHandler threadReconciliationQueries]
  -[EDMessageRepositoryQueryHandler cancel]
  -[EDMessageRepositoryQueryHandler initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:observer:observationIdentifier:]
  -[EDMessageRepositoryQueryHandler keyPathsAffectSorting:]
  -[EDMessageRepositoryQueryHandler _distinctObjectIDs:queryHandlerLog:]
  -[EDMessageRepositoryQueryHandler resultsObserver]
  -[EDMessageRepositoryQueryHandler observationIdentifier]
  -[EDMessageRepositoryQueryHandler dateSortOrder]
  -[EDMessageRepositoryQueryHandler summaryLoadersMapTable]
  -[EDMessageRepositoryQueryHandler setSummaryLoadersMapTable:]


_EDMessageDuplicateInfo : NSObject
 @property  EDMailboxProvider *mailboxProvider
 @property  NSMutableSet *mailboxes
 @property  NSMutableArray *flags
 @property  NSMutableArray *dates
 @property  NSMutableArray *senderBuckets

  // instance methods
  -[_EDMessageDuplicateInfo addMessage:]
  -[_EDMessageDuplicateInfo setMailboxes:]
  -[_EDMessageDuplicateInfo setFlags:]
  -[_EDMessageDuplicateInfo .cxx_destruct]
  -[_EDMessageDuplicateInfo flags]
  -[_EDMessageDuplicateInfo mailboxes]
  -[_EDMessageDuplicateInfo setDates:]
  -[_EDMessageDuplicateInfo dates]
  -[_EDMessageDuplicateInfo initWithMailboxProvider:]
  -[_EDMessageDuplicateInfo mailboxProvider]
  -[_EDMessageDuplicateInfo setMailboxProvider:]
  -[_EDMessageDuplicateInfo senderBuckets]
  -[_EDMessageDuplicateInfo combinedMailboxes]
  -[_EDMessageDuplicateInfo combinedMessageFlags]
  -[_EDMessageDuplicateInfo combinedDate]
  -[_EDMessageDuplicateInfo combinedSenderBucket]
  -[_EDMessageDuplicateInfo setSenderBuckets:]


EDMessageTransformer : NSObject <EFLoggable>
 @property  EDMailboxProvider *mailboxProvider
 @property  <EMUserProfileProvider> *userProfileProvider
 @property  EMBlockedSenderManager *blockedSenderManager
 @property  <EMVIPReader> *vipReader
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDMessageTransformer log]
  +[EDMessageTransformer mailboxesForPersistedMessage:mailboxProvider:]

  // instance methods
  -[EDMessageTransformer userProfileProvider]
  -[EDMessageTransformer .cxx_destruct]
  -[EDMessageTransformer blockedSenderManager]
  -[EDMessageTransformer transformBaseMessage:mailboxScope:loaderBlock:]
  -[EDMessageTransformer mailboxProvider]
  -[EDMessageTransformer initWithMailboxProvider:userProfileProvider:blockedSenderManager:vipReader:]
  -[EDMessageTransformer transformPersistedMessages:mailboxScope:]
  -[EDMessageTransformer _transformBaseMessage:mailboxScope:duplicateInfo:loaderBlock:]
  -[EDMessageTransformer vipReader]


EDMigrateBlockedSenderEnabledToBlockedSenderActionEnumUpgradeStep : NSObject
  // class methods
  +[EDMigrateBlockedSenderEnabledToBlockedSenderActionEnumUpgradeStep run]


EDMigrateUserDefaultsUpgradeStep : NSObject
  // class methods
  +[EDMigrateUserDefaultsUpgradeStep run]
  +[EDMigrateUserDefaultsUpgradeStep propertiesToMigrate]


EDNonAcceptingServer : NSObject <NSXPCListenerDelegate, EFLoggable>
 @property  NSMutableArray *listeners
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDNonAcceptingServer log]

  // instance methods
  -[EDNonAcceptingServer setListeners:]
  -[EDNonAcceptingServer listeners]
  -[EDNonAcceptingServer .cxx_destruct]
  -[EDNonAcceptingServer listener:shouldAcceptNewConnection:]
  -[EDNonAcceptingServer initWithMachServiceNames:]


EDOutgoingMessageRepository : NSObject <EMOutgoingMessageRepositoryInterface>
 @property  EDMessagePersistence *messagePersistence
 @property  EDSendLaterPersistence *sendLaterPersistence
 @property  EDMessageChangeManager *messageChangeManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDOutgoingMessageRepository signpostLog]
  +[EDOutgoingMessageRepository log]

  // instance methods
  -[EDOutgoingMessageRepository performBlock:]
  -[EDOutgoingMessageRepository signpostID]
  -[EDOutgoingMessageRepository sendLaterPersistence]
  -[EDOutgoingMessageRepository .cxx_destruct]
  -[EDOutgoingMessageRepository setMessagePersistence:]
  -[EDOutgoingMessageRepository messagePersistence]
  -[EDOutgoingMessageRepository messageChangeManager]
  -[EDOutgoingMessageRepository cancelObservation:]
  -[EDOutgoingMessageRepository saveDraftMessage:mailboxID:previousDraftObjectID:completion:]
  -[EDOutgoingMessageRepository saveSendLaterMessage:sendLaterDate:completion:]
  -[EDOutgoingMessageRepository updateSendLaterDate:message:completion:]
  -[EDOutgoingMessageRepository scheduleAlarmForSendLaterDate:completion:]
  -[EDOutgoingMessageRepository deleteDraftsInMailboxID:documentID:previousDraftObjectID:]
  -[EDOutgoingMessageRepository deliverMessage:usingMailDrop:isCancelable:completion:]
  -[EDOutgoingMessageRepository cancelLastDelayedMessage:]
  -[EDOutgoingMessageRepository outboxContainsMessageFromAccountObjectID:completion:]
  -[EDOutgoingMessageRepository suspendDeliveryQueue]
  -[EDOutgoingMessageRepository resumeDeliveryQueue]
  -[EDOutgoingMessageRepository processAllQueuedMessages]
  -[EDOutgoingMessageRepository isProcessingWithCompletion:]
  -[EDOutgoingMessageRepository numberOfPendingMessagesWithCompletion:]
  -[EDOutgoingMessageRepository startObservingPendingMessageChangesWithChangeObserver:observationIdentifier:]
  -[EDOutgoingMessageRepository initWithMessagePersistence:messageChangeManager:sendLaterPersistence:]
  -[EDOutgoingMessageRepository outgoingMessageFromPersistedMessage:]
  -[EDOutgoingMessageRepository messagesForDocumentID:mailboxID:]
  -[EDOutgoingMessageRepository urlForSendLaterFolder]
  -[EDOutgoingMessageRepository setSendLaterPersistence:]


EDPBInteractionEvent : PBCodable <EDPETMessageFrameTypeIntrospectable, EDPBDataSetters, NSCopying>
 @property  BOOL hasSequenceNumber
 @property  unsigned int sequenceNumber
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasEventName
 @property  int eventName
 @property  BOOL hasMessageFetched
 @property  EDPBInteractionEventMessageFetched *messageFetched
 @property  BOOL hasMessageSent
 @property  EDPBInteractionEventMessageSent *messageSent
 @property  BOOL hasMessageMoved
 @property  EDPBInteractionEventMessageMoved *messageMoved
 @property  BOOL hasMessageCopied
 @property  EDPBInteractionEventMessageCopied *messageCopied
 @property  BOOL hasLinkClicked
 @property  EDPBInteractionEventLinkClicked *linkClicked
 @property  BOOL hasAppLaunch
 @property  EDPBInteractionEventAppLaunch *appLaunch
 @property  BOOL hasAppBackground
 @property  EDPBInteractionEventAppBackground *appBackground
 @property  BOOL hasAppResume
 @property  EDPBInteractionEventAppResume *appResume
 @property  BOOL hasFlagChanged
 @property  EDPBInteractionEventFlagChanged *flagChanged
 @property  BOOL hasReadChanged
 @property  EDPBInteractionEventReadChanged *readChanged
 @property  BOOL hasMessageViewStart
 @property  EDPBInteractionEventMessageViewStart *messageViewStart
 @property  BOOL hasMessageViewEnd
 @property  EDPBInteractionEventMessageViewEnd *messageViewEnd
 @property  BOOL hasReplyDraftStarted
 @property  EDPBInteractionEventReplyDraftStarted *replyDraftStarted
 @property  BOOL hasForwardDraftStarted
 @property  EDPBInteractionEventForwardDraftStarted *forwardDraftStarted
 @property  BOOL hasReplySent
 @property  EDPBInteractionEventReplySent *replySent
 @property  BOOL hasForwardSent
 @property  EDPBInteractionEventForwardSent *forwardSent
 @property  BOOL hasMarkedMuteThread
 @property  EDPBInteractionEventMarkedMuteThread *markedMuteThread
 @property  BOOL hasCategoryMarked
 @property  EDPBInteractionEventCategoryMarked *categoryMarked
 @property  BOOL hasCategoryInferred
 @property  EDPBInteractionEventCategoryInferred *categoryInferred

  // instance methods
  -[EDPBInteractionEvent hasSequenceNumber]
  -[EDPBInteractionEvent setHasSequenceNumber:]
  -[EDPBInteractionEvent setTimestamp:]
  -[EDPBInteractionEvent setEventName:]
  -[EDPBInteractionEvent eventName]
  -[EDPBInteractionEvent copyTo:]
  -[EDPBInteractionEvent messageFrameType]
  -[EDPBInteractionEvent setSequenceNumber:]
  -[EDPBInteractionEvent respondsToSelector:]
  -[EDPBInteractionEvent .cxx_destruct]
  -[EDPBInteractionEvent mergeFrom:]
  -[EDPBInteractionEvent setHasTimestamp:]
  -[EDPBInteractionEvent dictionaryRepresentation]
  -[EDPBInteractionEvent hasTimestamp]
  -[EDPBInteractionEvent copyWithZone:]
  -[EDPBInteractionEvent forwardInvocation:]
  -[EDPBInteractionEvent sequenceNumber]
  -[EDPBInteractionEvent timestamp]
  -[EDPBInteractionEvent readFrom:]
  -[EDPBInteractionEvent writeTo:]
  -[EDPBInteractionEvent appLaunch]
  -[EDPBInteractionEvent isEqual:]
  -[EDPBInteractionEvent hasEventName]
  -[EDPBInteractionEvent setAppLaunch:]
  -[EDPBInteractionEvent readChanged]
  -[EDPBInteractionEvent setReadChanged:]
  -[EDPBInteractionEvent setMessageSent:]
  -[EDPBInteractionEvent hasMessageSent]
  -[EDPBInteractionEvent messageSent]
  -[EDPBInteractionEvent replyDraftStarted]
  -[EDPBInteractionEvent forwardDraftStarted]
  -[EDPBInteractionEvent linkClicked]
  -[EDPBInteractionEvent flagChanged]
  -[EDPBInteractionEvent ed_oneOfConcreteEvent]
  -[EDPBInteractionEvent setHasEventName:]
  -[EDPBInteractionEvent eventNameAsString:]
  -[EDPBInteractionEvent StringAsEventName:]
  -[EDPBInteractionEvent hasMessageFetched]
  -[EDPBInteractionEvent hasMessageMoved]
  -[EDPBInteractionEvent hasMessageCopied]
  -[EDPBInteractionEvent hasLinkClicked]
  -[EDPBInteractionEvent hasAppLaunch]
  -[EDPBInteractionEvent hasAppBackground]
  -[EDPBInteractionEvent hasAppResume]
  -[EDPBInteractionEvent hasFlagChanged]
  -[EDPBInteractionEvent hasReadChanged]
  -[EDPBInteractionEvent hasMessageViewStart]
  -[EDPBInteractionEvent hasMessageViewEnd]
  -[EDPBInteractionEvent hasReplyDraftStarted]
  -[EDPBInteractionEvent hasForwardDraftStarted]
  -[EDPBInteractionEvent hasReplySent]
  -[EDPBInteractionEvent hasForwardSent]
  -[EDPBInteractionEvent hasMarkedMuteThread]
  -[EDPBInteractionEvent hasCategoryMarked]
  -[EDPBInteractionEvent hasCategoryInferred]
  -[EDPBInteractionEvent messageFetched]
  -[EDPBInteractionEvent setMessageFetched:]
  -[EDPBInteractionEvent messageMoved]
  -[EDPBInteractionEvent setMessageMoved:]
  -[EDPBInteractionEvent messageCopied]
  -[EDPBInteractionEvent setMessageCopied:]
  -[EDPBInteractionEvent setLinkClicked:]
  -[EDPBInteractionEvent appBackground]
  -[EDPBInteractionEvent setAppBackground:]
  -[EDPBInteractionEvent appResume]
  -[EDPBInteractionEvent setAppResume:]
  -[EDPBInteractionEvent setFlagChanged:]
  -[EDPBInteractionEvent messageViewStart]
  -[EDPBInteractionEvent setMessageViewStart:]
  -[EDPBInteractionEvent messageViewEnd]
  -[EDPBInteractionEvent setMessageViewEnd:]
  -[EDPBInteractionEvent setReplyDraftStarted:]
  -[EDPBInteractionEvent setForwardDraftStarted:]
  -[EDPBInteractionEvent replySent]
  -[EDPBInteractionEvent setReplySent:]
  -[EDPBInteractionEvent forwardSent]
  -[EDPBInteractionEvent setForwardSent:]
  -[EDPBInteractionEvent markedMuteThread]
  -[EDPBInteractionEvent setMarkedMuteThread:]
  -[EDPBInteractionEvent categoryMarked]
  -[EDPBInteractionEvent setCategoryMarked:]
  -[EDPBInteractionEvent categoryInferred]
  -[EDPBInteractionEvent setCategoryInferred:]


EDPBInteractionEventAppBackground : PBCodable <EDPBDataSetters, NSCopying>
  // instance methods
  -[EDPBInteractionEventAppBackground copyTo:]
  -[EDPBInteractionEventAppBackground mergeFrom:]
  -[EDPBInteractionEventAppBackground dictionaryRepresentation]
  -[EDPBInteractionEventAppBackground copyWithZone:]
  -[EDPBInteractionEventAppBackground readFrom:]
  -[EDPBInteractionEventAppBackground writeTo:]
  -[EDPBInteractionEventAppBackground isEqual:]
  -[EDPBInteractionEventAppBackground withHasher:setMessage:data:]


EDPBInteractionEventAppLaunch : PBCodable <EDPBDataSetters, NSCopying>
  // instance methods
  -[EDPBInteractionEventAppLaunch copyTo:]
  -[EDPBInteractionEventAppLaunch mergeFrom:]
  -[EDPBInteractionEventAppLaunch dictionaryRepresentation]
  -[EDPBInteractionEventAppLaunch copyWithZone:]
  -[EDPBInteractionEventAppLaunch readFrom:]
  -[EDPBInteractionEventAppLaunch writeTo:]
  -[EDPBInteractionEventAppLaunch isEqual:]
  -[EDPBInteractionEventAppLaunch withHasher:setMessage:data:]


EDPBInteractionEventAppResume : PBCodable <EDPBDataSetters, NSCopying>
  // instance methods
  -[EDPBInteractionEventAppResume copyTo:]
  -[EDPBInteractionEventAppResume mergeFrom:]
  -[EDPBInteractionEventAppResume dictionaryRepresentation]
  -[EDPBInteractionEventAppResume copyWithZone:]
  -[EDPBInteractionEventAppResume readFrom:]
  -[EDPBInteractionEventAppResume writeTo:]
  -[EDPBInteractionEventAppResume isEqual:]
  -[EDPBInteractionEventAppResume withHasher:setMessage:data:]


EDPBInteractionEventCategoryInferred : PBCodable <EDPBDataSetters, EDPBBaseMessageFields, NSCopying>
 @property  long long accountId
 @property  long long mailboxId
 @property  int mailboxType
 @property  long long conversationId
 @property  long long messageId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasMailboxId
 @property  long long mailboxId
 @property  BOOL hasMailboxType
 @property  int mailboxType
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId
 @property  BOOL hasScore
 @property  double score
 @property  BOOL hasPositive
 @property  BOOL positive
 @property  BOOL hasCategoryType
 @property  int categoryType
 @property  BOOL hasModelId
 @property  unsigned int modelId
 @property  BOOL hasModelVersion
 @property  unsigned int modelVersion
 @property  BOOL hasFeaturesImportant
 @property  EDPBModelFeaturesImportant *featuresImportant
 @property  BOOL hasFeaturesPromotion
 @property  EDPBModelFeaturesPromotion *featuresPromotion

  // instance methods
  -[EDPBInteractionEventCategoryInferred modelVersion]
  -[EDPBInteractionEventCategoryInferred setModelVersion:]
  -[EDPBInteractionEventCategoryInferred setModelId:]
  -[EDPBInteractionEventCategoryInferred messageId]
  -[EDPBInteractionEventCategoryInferred hasScore]
  -[EDPBInteractionEventCategoryInferred copyTo:]
  -[EDPBInteractionEventCategoryInferred setHasModelVersion:]
  -[EDPBInteractionEventCategoryInferred setHasScore:]
  -[EDPBInteractionEventCategoryInferred score]
  -[EDPBInteractionEventCategoryInferred hasModelVersion]
  -[EDPBInteractionEventCategoryInferred .cxx_destruct]
  -[EDPBInteractionEventCategoryInferred setAccountId:]
  -[EDPBInteractionEventCategoryInferred categoryType]
  -[EDPBInteractionEventCategoryInferred mergeFrom:]
  -[EDPBInteractionEventCategoryInferred dictionaryRepresentation]
  -[EDPBInteractionEventCategoryInferred copyWithZone:]
  -[EDPBInteractionEventCategoryInferred accountId]
  -[EDPBInteractionEventCategoryInferred setCategoryType:]
  -[EDPBInteractionEventCategoryInferred readFrom:]
  -[EDPBInteractionEventCategoryInferred hasModelId]
  -[EDPBInteractionEventCategoryInferred setScore:]
  -[EDPBInteractionEventCategoryInferred modelId]
  -[EDPBInteractionEventCategoryInferred writeTo:]
  -[EDPBInteractionEventCategoryInferred isEqual:]
  -[EDPBInteractionEventCategoryInferred setMessageId:]
  -[EDPBInteractionEventCategoryInferred conversationId]
  -[EDPBInteractionEventCategoryInferred setConversationId:]
  -[EDPBInteractionEventCategoryInferred hasConversationId]
  -[EDPBInteractionEventCategoryInferred mailboxId]
  -[EDPBInteractionEventCategoryInferred mailboxType]
  -[EDPBInteractionEventCategoryInferred setMailboxType:]
  -[EDPBInteractionEventCategoryInferred setHasModelId:]
  -[EDPBInteractionEventCategoryInferred setHasAccountId:]
  -[EDPBInteractionEventCategoryInferred hasAccountId]
  -[EDPBInteractionEventCategoryInferred setHasMailboxType:]
  -[EDPBInteractionEventCategoryInferred hasMailboxType]
  -[EDPBInteractionEventCategoryInferred mailboxTypeAsString:]
  -[EDPBInteractionEventCategoryInferred StringAsMailboxType:]
  -[EDPBInteractionEventCategoryInferred hasMessageId]
  -[EDPBInteractionEventCategoryInferred setHasCategoryType:]
  -[EDPBInteractionEventCategoryInferred hasCategoryType]
  -[EDPBInteractionEventCategoryInferred categoryTypeAsString:]
  -[EDPBInteractionEventCategoryInferred StringAsCategoryType:]
  -[EDPBInteractionEventCategoryInferred withHasher:setMessage:data:]
  -[EDPBInteractionEventCategoryInferred setMailboxId:]
  -[EDPBInteractionEventCategoryInferred setHasMailboxId:]
  -[EDPBInteractionEventCategoryInferred hasMailboxId]
  -[EDPBInteractionEventCategoryInferred setHasConversationId:]
  -[EDPBInteractionEventCategoryInferred setHasMessageId:]
  -[EDPBInteractionEventCategoryInferred setPositive:]
  -[EDPBInteractionEventCategoryInferred setHasPositive:]
  -[EDPBInteractionEventCategoryInferred hasPositive]
  -[EDPBInteractionEventCategoryInferred hasFeaturesImportant]
  -[EDPBInteractionEventCategoryInferred hasFeaturesPromotion]
  -[EDPBInteractionEventCategoryInferred positive]
  -[EDPBInteractionEventCategoryInferred featuresImportant]
  -[EDPBInteractionEventCategoryInferred setFeaturesImportant:]
  -[EDPBInteractionEventCategoryInferred featuresPromotion]
  -[EDPBInteractionEventCategoryInferred setFeaturesPromotion:]


EDPBInteractionEventCategoryMarked : PBCodable <EDPBDataSetters, EDPBBaseMessageFields, NSCopying>
 @property  long long accountId
 @property  long long mailboxId
 @property  int mailboxType
 @property  long long conversationId
 @property  long long messageId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasMailboxId
 @property  long long mailboxId
 @property  BOOL hasMailboxType
 @property  int mailboxType
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId
 @property  BOOL hasCategoryType
 @property  int categoryType
 @property  BOOL hasPositive
 @property  BOOL positive
 @property  BOOL hasRemoveAllUserOverrides
 @property  BOOL removeAllUserOverrides

  // instance methods
  -[EDPBInteractionEventCategoryMarked messageId]
  -[EDPBInteractionEventCategoryMarked copyTo:]
  -[EDPBInteractionEventCategoryMarked setAccountId:]
  -[EDPBInteractionEventCategoryMarked categoryType]
  -[EDPBInteractionEventCategoryMarked mergeFrom:]
  -[EDPBInteractionEventCategoryMarked dictionaryRepresentation]
  -[EDPBInteractionEventCategoryMarked copyWithZone:]
  -[EDPBInteractionEventCategoryMarked accountId]
  -[EDPBInteractionEventCategoryMarked setCategoryType:]
  -[EDPBInteractionEventCategoryMarked readFrom:]
  -[EDPBInteractionEventCategoryMarked writeTo:]
  -[EDPBInteractionEventCategoryMarked isEqual:]
  -[EDPBInteractionEventCategoryMarked setMessageId:]
  -[EDPBInteractionEventCategoryMarked conversationId]
  -[EDPBInteractionEventCategoryMarked setConversationId:]
  -[EDPBInteractionEventCategoryMarked hasConversationId]
  -[EDPBInteractionEventCategoryMarked mailboxId]
  -[EDPBInteractionEventCategoryMarked mailboxType]
  -[EDPBInteractionEventCategoryMarked setMailboxType:]
  -[EDPBInteractionEventCategoryMarked setHasAccountId:]
  -[EDPBInteractionEventCategoryMarked hasAccountId]
  -[EDPBInteractionEventCategoryMarked setHasMailboxType:]
  -[EDPBInteractionEventCategoryMarked hasMailboxType]
  -[EDPBInteractionEventCategoryMarked mailboxTypeAsString:]
  -[EDPBInteractionEventCategoryMarked StringAsMailboxType:]
  -[EDPBInteractionEventCategoryMarked hasMessageId]
  -[EDPBInteractionEventCategoryMarked setHasCategoryType:]
  -[EDPBInteractionEventCategoryMarked hasCategoryType]
  -[EDPBInteractionEventCategoryMarked categoryTypeAsString:]
  -[EDPBInteractionEventCategoryMarked StringAsCategoryType:]
  -[EDPBInteractionEventCategoryMarked withHasher:setMessage:data:]
  -[EDPBInteractionEventCategoryMarked setMailboxId:]
  -[EDPBInteractionEventCategoryMarked setHasMailboxId:]
  -[EDPBInteractionEventCategoryMarked hasMailboxId]
  -[EDPBInteractionEventCategoryMarked setHasConversationId:]
  -[EDPBInteractionEventCategoryMarked setHasMessageId:]
  -[EDPBInteractionEventCategoryMarked setPositive:]
  -[EDPBInteractionEventCategoryMarked setHasPositive:]
  -[EDPBInteractionEventCategoryMarked hasPositive]
  -[EDPBInteractionEventCategoryMarked positive]
  -[EDPBInteractionEventCategoryMarked setRemoveAllUserOverrides:]
  -[EDPBInteractionEventCategoryMarked setHasRemoveAllUserOverrides:]
  -[EDPBInteractionEventCategoryMarked hasRemoveAllUserOverrides]
  -[EDPBInteractionEventCategoryMarked removeAllUserOverrides]


EDPBInteractionEventFlagChanged : PBCodable <EDPBDataSetters, EDPBBaseMessageFields, NSCopying>
 @property  long long accountId
 @property  long long mailboxId
 @property  int mailboxType
 @property  long long conversationId
 @property  long long messageId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasMailboxId
 @property  long long mailboxId
 @property  BOOL hasMailboxType
 @property  int mailboxType
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId
 @property  BOOL hasValue
 @property  BOOL value

  // instance methods
  -[EDPBInteractionEventFlagChanged messageId]
  -[EDPBInteractionEventFlagChanged copyTo:]
  -[EDPBInteractionEventFlagChanged hasValue]
  -[EDPBInteractionEventFlagChanged setAccountId:]
  -[EDPBInteractionEventFlagChanged mergeFrom:]
  -[EDPBInteractionEventFlagChanged setValue:]
  -[EDPBInteractionEventFlagChanged dictionaryRepresentation]
  -[EDPBInteractionEventFlagChanged copyWithZone:]
  -[EDPBInteractionEventFlagChanged accountId]
  -[EDPBInteractionEventFlagChanged value]
  -[EDPBInteractionEventFlagChanged readFrom:]
  -[EDPBInteractionEventFlagChanged setHasValue:]
  -[EDPBInteractionEventFlagChanged writeTo:]
  -[EDPBInteractionEventFlagChanged isEqual:]
  -[EDPBInteractionEventFlagChanged setMessageId:]
  -[EDPBInteractionEventFlagChanged conversationId]
  -[EDPBInteractionEventFlagChanged setConversationId:]
  -[EDPBInteractionEventFlagChanged hasConversationId]
  -[EDPBInteractionEventFlagChanged mailboxId]
  -[EDPBInteractionEventFlagChanged mailboxType]
  -[EDPBInteractionEventFlagChanged setMailboxType:]
  -[EDPBInteractionEventFlagChanged setHasAccountId:]
  -[EDPBInteractionEventFlagChanged hasAccountId]
  -[EDPBInteractionEventFlagChanged setHasMailboxType:]
  -[EDPBInteractionEventFlagChanged hasMailboxType]
  -[EDPBInteractionEventFlagChanged mailboxTypeAsString:]
  -[EDPBInteractionEventFlagChanged StringAsMailboxType:]
  -[EDPBInteractionEventFlagChanged hasMessageId]
  -[EDPBInteractionEventFlagChanged withHasher:setMessage:data:]
  -[EDPBInteractionEventFlagChanged setMailboxId:]
  -[EDPBInteractionEventFlagChanged setHasMailboxId:]
  -[EDPBInteractionEventFlagChanged hasMailboxId]
  -[EDPBInteractionEventFlagChanged setHasConversationId:]
  -[EDPBInteractionEventFlagChanged setHasMessageId:]


EDPBInteractionEventForwardDraftStarted : PBCodable <EDPBDataSetters, EDPBBaseMessageFields, NSCopying>
 @property  long long accountId
 @property  long long mailboxId
 @property  int mailboxType
 @property  long long conversationId
 @property  long long messageId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasMailboxId
 @property  long long mailboxId
 @property  BOOL hasMailboxType
 @property  int mailboxType
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId

  // instance methods
  -[EDPBInteractionEventForwardDraftStarted messageId]
  -[EDPBInteractionEventForwardDraftStarted copyTo:]
  -[EDPBInteractionEventForwardDraftStarted setAccountId:]
  -[EDPBInteractionEventForwardDraftStarted mergeFrom:]
  -[EDPBInteractionEventForwardDraftStarted dictionaryRepresentation]
  -[EDPBInteractionEventForwardDraftStarted copyWithZone:]
  -[EDPBInteractionEventForwardDraftStarted accountId]
  -[EDPBInteractionEventForwardDraftStarted readFrom:]
  -[EDPBInteractionEventForwardDraftStarted writeTo:]
  -[EDPBInteractionEventForwardDraftStarted isEqual:]
  -[EDPBInteractionEventForwardDraftStarted setMessageId:]
  -[EDPBInteractionEventForwardDraftStarted conversationId]
  -[EDPBInteractionEventForwardDraftStarted setConversationId:]
  -[EDPBInteractionEventForwardDraftStarted hasConversationId]
  -[EDPBInteractionEventForwardDraftStarted mailboxId]
  -[EDPBInteractionEventForwardDraftStarted mailboxType]
  -[EDPBInteractionEventForwardDraftStarted setMailboxType:]
  -[EDPBInteractionEventForwardDraftStarted setHasAccountId:]
  -[EDPBInteractionEventForwardDraftStarted hasAccountId]
  -[EDPBInteractionEventForwardDraftStarted setHasMailboxType:]
  -[EDPBInteractionEventForwardDraftStarted hasMailboxType]
  -[EDPBInteractionEventForwardDraftStarted mailboxTypeAsString:]
  -[EDPBInteractionEventForwardDraftStarted StringAsMailboxType:]
  -[EDPBInteractionEventForwardDraftStarted hasMessageId]
  -[EDPBInteractionEventForwardDraftStarted withHasher:setMessage:data:]
  -[EDPBInteractionEventForwardDraftStarted setMailboxId:]
  -[EDPBInteractionEventForwardDraftStarted setHasMailboxId:]
  -[EDPBInteractionEventForwardDraftStarted hasMailboxId]
  -[EDPBInteractionEventForwardDraftStarted setHasConversationId:]
  -[EDPBInteractionEventForwardDraftStarted setHasMessageId:]


EDPBInteractionEventForwardSent : PBCodable <EDPBDataSetters, EDPBBaseMessageFields, NSCopying>
 @property  long long accountId
 @property  long long mailboxId
 @property  int mailboxType
 @property  long long conversationId
 @property  long long messageId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasMailboxId
 @property  long long mailboxId
 @property  BOOL hasMailboxType
 @property  int mailboxType
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId

  // instance methods
  -[EDPBInteractionEventForwardSent messageId]
  -[EDPBInteractionEventForwardSent copyTo:]
  -[EDPBInteractionEventForwardSent setAccountId:]
  -[EDPBInteractionEventForwardSent mergeFrom:]
  -[EDPBInteractionEventForwardSent dictionaryRepresentation]
  -[EDPBInteractionEventForwardSent copyWithZone:]
  -[EDPBInteractionEventForwardSent accountId]
  -[EDPBInteractionEventForwardSent readFrom:]
  -[EDPBInteractionEventForwardSent writeTo:]
  -[EDPBInteractionEventForwardSent isEqual:]
  -[EDPBInteractionEventForwardSent setMessageId:]
  -[EDPBInteractionEventForwardSent conversationId]
  -[EDPBInteractionEventForwardSent setConversationId:]
  -[EDPBInteractionEventForwardSent hasConversationId]
  -[EDPBInteractionEventForwardSent mailboxId]
  -[EDPBInteractionEventForwardSent mailboxType]
  -[EDPBInteractionEventForwardSent setMailboxType:]
  -[EDPBInteractionEventForwardSent setHasAccountId:]
  -[EDPBInteractionEventForwardSent hasAccountId]
  -[EDPBInteractionEventForwardSent setHasMailboxType:]
  -[EDPBInteractionEventForwardSent hasMailboxType]
  -[EDPBInteractionEventForwardSent mailboxTypeAsString:]
  -[EDPBInteractionEventForwardSent StringAsMailboxType:]
  -[EDPBInteractionEventForwardSent hasMessageId]
  -[EDPBInteractionEventForwardSent withHasher:setMessage:data:]
  -[EDPBInteractionEventForwardSent setMailboxId:]
  -[EDPBInteractionEventForwardSent setHasMailboxId:]
  -[EDPBInteractionEventForwardSent hasMailboxId]
  -[EDPBInteractionEventForwardSent setHasConversationId:]
  -[EDPBInteractionEventForwardSent setHasMessageId:]


EDPBInteractionEventHeader : PBCodable <EDPETMessageFrameTypeIntrospectable, NSCopying>
 @property  BOOL hasVersion
 @property  unsigned int version
 @property  BOOL hasUserId
 @property  long long userId
 @property  BOOL hasDeviceId
 @property  long long deviceId
 @property  BOOL hasLocale
 @property  NSString *locale
 @property  BOOL hasTimezoneOffset
 @property  int timezoneOffset
 @property  BOOL hasUserSegment
 @property  unsigned int userSegment
 @property  BOOL hasCategoryRootInstalled
 @property  BOOL categoryRootInstalled

  // instance methods
  -[EDPBInteractionEventHeader userId]
  -[EDPBInteractionEventHeader deviceId]
  -[EDPBInteractionEventHeader setUserId:]
  -[EDPBInteractionEventHeader hasLocale]
  -[EDPBInteractionEventHeader timezoneOffset]
  -[EDPBInteractionEventHeader copyTo:]
  -[EDPBInteractionEventHeader categoryRootInstalled]
  -[EDPBInteractionEventHeader hasDeviceId]
  -[EDPBInteractionEventHeader messageFrameType]
  -[EDPBInteractionEventHeader setCategoryRootInstalled:]
  -[EDPBInteractionEventHeader setHasTimezoneOffset:]
  -[EDPBInteractionEventHeader setDeviceId:]
  -[EDPBInteractionEventHeader .cxx_destruct]
  -[EDPBInteractionEventHeader setUserSegment:]
  -[EDPBInteractionEventHeader hasTimezoneOffset]
  -[EDPBInteractionEventHeader mergeFrom:]
  -[EDPBInteractionEventHeader locale]
  -[EDPBInteractionEventHeader hasVersion]
  -[EDPBInteractionEventHeader version]
  -[EDPBInteractionEventHeader setLocale:]
  -[EDPBInteractionEventHeader dictionaryRepresentation]
  -[EDPBInteractionEventHeader hasUserId]
  -[EDPBInteractionEventHeader hasCategoryRootInstalled]
  -[EDPBInteractionEventHeader setHasUserId:]
  -[EDPBInteractionEventHeader setTimezoneOffset:]
  -[EDPBInteractionEventHeader copyWithZone:]
  -[EDPBInteractionEventHeader hasUserSegment]
  -[EDPBInteractionEventHeader setHasDeviceId:]
  -[EDPBInteractionEventHeader setHasVersion:]
  -[EDPBInteractionEventHeader readFrom:]
  -[EDPBInteractionEventHeader setHasCategoryRootInstalled:]
  -[EDPBInteractionEventHeader setHasUserSegment:]
  -[EDPBInteractionEventHeader setVersion:]
  -[EDPBInteractionEventHeader userSegment]
  -[EDPBInteractionEventHeader writeTo:]
  -[EDPBInteractionEventHeader isEqual:]


EDPBInteractionEventLinkClicked : PBCodable <EDPBDataSetters, EDPBBaseMessageFields, NSCopying>
 @property  long long accountId
 @property  long long mailboxId
 @property  int mailboxType
 @property  long long conversationId
 @property  long long messageId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasMailboxId
 @property  long long mailboxId
 @property  BOOL hasMailboxType
 @property  int mailboxType
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId

  // instance methods
  -[EDPBInteractionEventLinkClicked messageId]
  -[EDPBInteractionEventLinkClicked copyTo:]
  -[EDPBInteractionEventLinkClicked setAccountId:]
  -[EDPBInteractionEventLinkClicked mergeFrom:]
  -[EDPBInteractionEventLinkClicked dictionaryRepresentation]
  -[EDPBInteractionEventLinkClicked copyWithZone:]
  -[EDPBInteractionEventLinkClicked accountId]
  -[EDPBInteractionEventLinkClicked readFrom:]
  -[EDPBInteractionEventLinkClicked writeTo:]
  -[EDPBInteractionEventLinkClicked isEqual:]
  -[EDPBInteractionEventLinkClicked setMessageId:]
  -[EDPBInteractionEventLinkClicked conversationId]
  -[EDPBInteractionEventLinkClicked setConversationId:]
  -[EDPBInteractionEventLinkClicked hasConversationId]
  -[EDPBInteractionEventLinkClicked mailboxId]
  -[EDPBInteractionEventLinkClicked mailboxType]
  -[EDPBInteractionEventLinkClicked setMailboxType:]
  -[EDPBInteractionEventLinkClicked setHasAccountId:]
  -[EDPBInteractionEventLinkClicked hasAccountId]
  -[EDPBInteractionEventLinkClicked setHasMailboxType:]
  -[EDPBInteractionEventLinkClicked hasMailboxType]
  -[EDPBInteractionEventLinkClicked mailboxTypeAsString:]
  -[EDPBInteractionEventLinkClicked StringAsMailboxType:]
  -[EDPBInteractionEventLinkClicked hasMessageId]
  -[EDPBInteractionEventLinkClicked withHasher:setMessage:data:]
  -[EDPBInteractionEventLinkClicked setMailboxId:]
  -[EDPBInteractionEventLinkClicked setHasMailboxId:]
  -[EDPBInteractionEventLinkClicked hasMailboxId]
  -[EDPBInteractionEventLinkClicked setHasConversationId:]
  -[EDPBInteractionEventLinkClicked setHasMessageId:]


EDPBInteractionEventMarkedMuteThread : PBCodable <EDPBDataSetters, NSCopying>
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasValue
 @property  BOOL value

  // instance methods
  -[EDPBInteractionEventMarkedMuteThread copyTo:]
  -[EDPBInteractionEventMarkedMuteThread hasValue]
  -[EDPBInteractionEventMarkedMuteThread mergeFrom:]
  -[EDPBInteractionEventMarkedMuteThread setValue:]
  -[EDPBInteractionEventMarkedMuteThread dictionaryRepresentation]
  -[EDPBInteractionEventMarkedMuteThread copyWithZone:]
  -[EDPBInteractionEventMarkedMuteThread value]
  -[EDPBInteractionEventMarkedMuteThread readFrom:]
  -[EDPBInteractionEventMarkedMuteThread setHasValue:]
  -[EDPBInteractionEventMarkedMuteThread writeTo:]
  -[EDPBInteractionEventMarkedMuteThread isEqual:]
  -[EDPBInteractionEventMarkedMuteThread conversationId]
  -[EDPBInteractionEventMarkedMuteThread setConversationId:]
  -[EDPBInteractionEventMarkedMuteThread hasConversationId]
  -[EDPBInteractionEventMarkedMuteThread withHasher:setConversationID:data:]
  -[EDPBInteractionEventMarkedMuteThread setHasConversationId:]


EDPBInteractionEventMessageCopied : PBCodable <EDPBDataSetters, NSCopying>
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId
 @property  BOOL hasFromMailboxId
 @property  long long fromMailboxId
 @property  BOOL hasFromMailboxType
 @property  int fromMailboxType
 @property  BOOL hasToMailboxId
 @property  long long toMailboxId
 @property  BOOL hasToMailboxType
 @property  int toMailboxType

  // instance methods
  -[EDPBInteractionEventMessageCopied messageId]
  -[EDPBInteractionEventMessageCopied copyTo:]
  -[EDPBInteractionEventMessageCopied setAccountId:]
  -[EDPBInteractionEventMessageCopied mergeFrom:]
  -[EDPBInteractionEventMessageCopied dictionaryRepresentation]
  -[EDPBInteractionEventMessageCopied copyWithZone:]
  -[EDPBInteractionEventMessageCopied accountId]
  -[EDPBInteractionEventMessageCopied readFrom:]
  -[EDPBInteractionEventMessageCopied writeTo:]
  -[EDPBInteractionEventMessageCopied isEqual:]
  -[EDPBInteractionEventMessageCopied setMessageId:]
  -[EDPBInteractionEventMessageCopied conversationId]
  -[EDPBInteractionEventMessageCopied setConversationId:]
  -[EDPBInteractionEventMessageCopied hasConversationId]
  -[EDPBInteractionEventMessageCopied setHasAccountId:]
  -[EDPBInteractionEventMessageCopied hasAccountId]
  -[EDPBInteractionEventMessageCopied hasMessageId]
  -[EDPBInteractionEventMessageCopied withHasher:setMessage:mailbox:]
  -[EDPBInteractionEventMessageCopied setHasConversationId:]
  -[EDPBInteractionEventMessageCopied setHasMessageId:]
  -[EDPBInteractionEventMessageCopied setFromMailboxId:]
  -[EDPBInteractionEventMessageCopied setHasFromMailboxId:]
  -[EDPBInteractionEventMessageCopied hasFromMailboxId]
  -[EDPBInteractionEventMessageCopied fromMailboxType]
  -[EDPBInteractionEventMessageCopied setFromMailboxType:]
  -[EDPBInteractionEventMessageCopied setHasFromMailboxType:]
  -[EDPBInteractionEventMessageCopied hasFromMailboxType]
  -[EDPBInteractionEventMessageCopied fromMailboxTypeAsString:]
  -[EDPBInteractionEventMessageCopied StringAsFromMailboxType:]
  -[EDPBInteractionEventMessageCopied setToMailboxId:]
  -[EDPBInteractionEventMessageCopied setHasToMailboxId:]
  -[EDPBInteractionEventMessageCopied hasToMailboxId]
  -[EDPBInteractionEventMessageCopied toMailboxType]
  -[EDPBInteractionEventMessageCopied setToMailboxType:]
  -[EDPBInteractionEventMessageCopied setHasToMailboxType:]
  -[EDPBInteractionEventMessageCopied hasToMailboxType]
  -[EDPBInteractionEventMessageCopied toMailboxTypeAsString:]
  -[EDPBInteractionEventMessageCopied StringAsToMailboxType:]
  -[EDPBInteractionEventMessageCopied fromMailboxId]
  -[EDPBInteractionEventMessageCopied toMailboxId]


EDPBInteractionEventMessageFetched : PBCodable <NSCopying>
  // class methods
  +[EDPBInteractionEventMessageFetched options]

  // instance methods
  -[EDPBInteractionEventMessageFetched copyTo:]
  -[EDPBInteractionEventMessageFetched mergeFrom:]
  -[EDPBInteractionEventMessageFetched dictionaryRepresentation]
  -[EDPBInteractionEventMessageFetched copyWithZone:]
  -[EDPBInteractionEventMessageFetched readFrom:]
  -[EDPBInteractionEventMessageFetched writeTo:]
  -[EDPBInteractionEventMessageFetched isEqual:]


EDPBInteractionEventMessageMoved : PBCodable <EDPBDataSetters, NSCopying>
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId
 @property  BOOL hasFromMailboxId
 @property  long long fromMailboxId
 @property  BOOL hasFromMailboxType
 @property  int fromMailboxType
 @property  BOOL hasToMailboxId
 @property  long long toMailboxId
 @property  BOOL hasToMailboxType
 @property  int toMailboxType

  // instance methods
  -[EDPBInteractionEventMessageMoved messageId]
  -[EDPBInteractionEventMessageMoved copyTo:]
  -[EDPBInteractionEventMessageMoved setAccountId:]
  -[EDPBInteractionEventMessageMoved mergeFrom:]
  -[EDPBInteractionEventMessageMoved dictionaryRepresentation]
  -[EDPBInteractionEventMessageMoved copyWithZone:]
  -[EDPBInteractionEventMessageMoved accountId]
  -[EDPBInteractionEventMessageMoved readFrom:]
  -[EDPBInteractionEventMessageMoved writeTo:]
  -[EDPBInteractionEventMessageMoved isEqual:]
  -[EDPBInteractionEventMessageMoved setMessageId:]
  -[EDPBInteractionEventMessageMoved conversationId]
  -[EDPBInteractionEventMessageMoved setConversationId:]
  -[EDPBInteractionEventMessageMoved hasConversationId]
  -[EDPBInteractionEventMessageMoved setHasAccountId:]
  -[EDPBInteractionEventMessageMoved hasAccountId]
  -[EDPBInteractionEventMessageMoved hasMessageId]
  -[EDPBInteractionEventMessageMoved withHasher:setMessage:mailbox:]
  -[EDPBInteractionEventMessageMoved setHasConversationId:]
  -[EDPBInteractionEventMessageMoved setHasMessageId:]
  -[EDPBInteractionEventMessageMoved setFromMailboxId:]
  -[EDPBInteractionEventMessageMoved setHasFromMailboxId:]
  -[EDPBInteractionEventMessageMoved hasFromMailboxId]
  -[EDPBInteractionEventMessageMoved fromMailboxType]
  -[EDPBInteractionEventMessageMoved setFromMailboxType:]
  -[EDPBInteractionEventMessageMoved setHasFromMailboxType:]
  -[EDPBInteractionEventMessageMoved hasFromMailboxType]
  -[EDPBInteractionEventMessageMoved fromMailboxTypeAsString:]
  -[EDPBInteractionEventMessageMoved StringAsFromMailboxType:]
  -[EDPBInteractionEventMessageMoved setToMailboxId:]
  -[EDPBInteractionEventMessageMoved setHasToMailboxId:]
  -[EDPBInteractionEventMessageMoved hasToMailboxId]
  -[EDPBInteractionEventMessageMoved toMailboxType]
  -[EDPBInteractionEventMessageMoved setToMailboxType:]
  -[EDPBInteractionEventMessageMoved setHasToMailboxType:]
  -[EDPBInteractionEventMessageMoved hasToMailboxType]
  -[EDPBInteractionEventMessageMoved toMailboxTypeAsString:]
  -[EDPBInteractionEventMessageMoved StringAsToMailboxType:]
  -[EDPBInteractionEventMessageMoved fromMailboxId]
  -[EDPBInteractionEventMessageMoved toMailboxId]


EDPBInteractionEventMessageSent : PBCodable <EDPBDataSetters, EDPBBaseMessageFields, NSCopying>
 @property  long long accountId
 @property  long long mailboxId
 @property  int mailboxType
 @property  long long conversationId
 @property  long long messageId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasMailboxId
 @property  long long mailboxId
 @property  BOOL hasMailboxType
 @property  int mailboxType
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId
 @property  BOOL hasHeaders
 @property  EDPBMessageHeaders *headers

  // instance methods
  -[EDPBInteractionEventMessageSent headers]
  -[EDPBInteractionEventMessageSent messageId]
  -[EDPBInteractionEventMessageSent copyTo:]
  -[EDPBInteractionEventMessageSent setHeaders:]
  -[EDPBInteractionEventMessageSent .cxx_destruct]
  -[EDPBInteractionEventMessageSent setAccountId:]
  -[EDPBInteractionEventMessageSent mergeFrom:]
  -[EDPBInteractionEventMessageSent dictionaryRepresentation]
  -[EDPBInteractionEventMessageSent copyWithZone:]
  -[EDPBInteractionEventMessageSent accountId]
  -[EDPBInteractionEventMessageSent readFrom:]
  -[EDPBInteractionEventMessageSent writeTo:]
  -[EDPBInteractionEventMessageSent isEqual:]
  -[EDPBInteractionEventMessageSent setMessageId:]
  -[EDPBInteractionEventMessageSent conversationId]
  -[EDPBInteractionEventMessageSent setConversationId:]
  -[EDPBInteractionEventMessageSent hasConversationId]
  -[EDPBInteractionEventMessageSent mailboxId]
  -[EDPBInteractionEventMessageSent mailboxType]
  -[EDPBInteractionEventMessageSent setMailboxType:]
  -[EDPBInteractionEventMessageSent setHasAccountId:]
  -[EDPBInteractionEventMessageSent hasAccountId]
  -[EDPBInteractionEventMessageSent setHasMailboxType:]
  -[EDPBInteractionEventMessageSent hasMailboxType]
  -[EDPBInteractionEventMessageSent mailboxTypeAsString:]
  -[EDPBInteractionEventMessageSent StringAsMailboxType:]
  -[EDPBInteractionEventMessageSent hasMessageId]
  -[EDPBInteractionEventMessageSent withHasher:setDataFromMessage:account:]
  -[EDPBInteractionEventMessageSent setMailboxId:]
  -[EDPBInteractionEventMessageSent setHasMailboxId:]
  -[EDPBInteractionEventMessageSent hasMailboxId]
  -[EDPBInteractionEventMessageSent setHasConversationId:]
  -[EDPBInteractionEventMessageSent setHasMessageId:]
  -[EDPBInteractionEventMessageSent hasHeaders]


EDPBInteractionEventMessageViewEnd : PBCodable <EDPBDataSetters, EDPBBaseMessageFields, NSCopying>
 @property  long long accountId
 @property  long long mailboxId
 @property  int mailboxType
 @property  long long conversationId
 @property  long long messageId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasMailboxId
 @property  long long mailboxId
 @property  BOOL hasMailboxType
 @property  int mailboxType
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId
 @property  BOOL hasDuration
 @property  double duration
 @property  BOOL hasScrolledToEnd
 @property  BOOL scrolledToEnd

  // instance methods
  -[EDPBInteractionEventMessageViewEnd messageId]
  -[EDPBInteractionEventMessageViewEnd setDuration:]
  -[EDPBInteractionEventMessageViewEnd hasDuration]
  -[EDPBInteractionEventMessageViewEnd copyTo:]
  -[EDPBInteractionEventMessageViewEnd setAccountId:]
  -[EDPBInteractionEventMessageViewEnd duration]
  -[EDPBInteractionEventMessageViewEnd mergeFrom:]
  -[EDPBInteractionEventMessageViewEnd dictionaryRepresentation]
  -[EDPBInteractionEventMessageViewEnd copyWithZone:]
  -[EDPBInteractionEventMessageViewEnd accountId]
  -[EDPBInteractionEventMessageViewEnd readFrom:]
  -[EDPBInteractionEventMessageViewEnd setHasDuration:]
  -[EDPBInteractionEventMessageViewEnd writeTo:]
  -[EDPBInteractionEventMessageViewEnd isEqual:]
  -[EDPBInteractionEventMessageViewEnd setMessageId:]
  -[EDPBInteractionEventMessageViewEnd conversationId]
  -[EDPBInteractionEventMessageViewEnd setConversationId:]
  -[EDPBInteractionEventMessageViewEnd hasConversationId]
  -[EDPBInteractionEventMessageViewEnd mailboxId]
  -[EDPBInteractionEventMessageViewEnd mailboxType]
  -[EDPBInteractionEventMessageViewEnd setMailboxType:]
  -[EDPBInteractionEventMessageViewEnd setHasAccountId:]
  -[EDPBInteractionEventMessageViewEnd hasAccountId]
  -[EDPBInteractionEventMessageViewEnd scrolledToEnd]
  -[EDPBInteractionEventMessageViewEnd setScrolledToEnd:]
  -[EDPBInteractionEventMessageViewEnd setHasMailboxType:]
  -[EDPBInteractionEventMessageViewEnd hasMailboxType]
  -[EDPBInteractionEventMessageViewEnd mailboxTypeAsString:]
  -[EDPBInteractionEventMessageViewEnd StringAsMailboxType:]
  -[EDPBInteractionEventMessageViewEnd hasMessageId]
  -[EDPBInteractionEventMessageViewEnd withHasher:setMessage:data:]
  -[EDPBInteractionEventMessageViewEnd setMailboxId:]
  -[EDPBInteractionEventMessageViewEnd setHasMailboxId:]
  -[EDPBInteractionEventMessageViewEnd hasMailboxId]
  -[EDPBInteractionEventMessageViewEnd setHasConversationId:]
  -[EDPBInteractionEventMessageViewEnd setHasMessageId:]
  -[EDPBInteractionEventMessageViewEnd setHasScrolledToEnd:]
  -[EDPBInteractionEventMessageViewEnd hasScrolledToEnd]


EDPBInteractionEventMessageViewStart : PBCodable <EDPBDataSetters, EDPBBaseMessageFields, NSCopying>
 @property  long long accountId
 @property  long long mailboxId
 @property  int mailboxType
 @property  long long conversationId
 @property  long long messageId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasMailboxId
 @property  long long mailboxId
 @property  BOOL hasMailboxType
 @property  int mailboxType
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId

  // instance methods
  -[EDPBInteractionEventMessageViewStart messageId]
  -[EDPBInteractionEventMessageViewStart copyTo:]
  -[EDPBInteractionEventMessageViewStart setAccountId:]
  -[EDPBInteractionEventMessageViewStart mergeFrom:]
  -[EDPBInteractionEventMessageViewStart dictionaryRepresentation]
  -[EDPBInteractionEventMessageViewStart copyWithZone:]
  -[EDPBInteractionEventMessageViewStart accountId]
  -[EDPBInteractionEventMessageViewStart readFrom:]
  -[EDPBInteractionEventMessageViewStart writeTo:]
  -[EDPBInteractionEventMessageViewStart isEqual:]
  -[EDPBInteractionEventMessageViewStart setMessageId:]
  -[EDPBInteractionEventMessageViewStart conversationId]
  -[EDPBInteractionEventMessageViewStart setConversationId:]
  -[EDPBInteractionEventMessageViewStart hasConversationId]
  -[EDPBInteractionEventMessageViewStart mailboxId]
  -[EDPBInteractionEventMessageViewStart mailboxType]
  -[EDPBInteractionEventMessageViewStart setMailboxType:]
  -[EDPBInteractionEventMessageViewStart setHasAccountId:]
  -[EDPBInteractionEventMessageViewStart hasAccountId]
  -[EDPBInteractionEventMessageViewStart setHasMailboxType:]
  -[EDPBInteractionEventMessageViewStart hasMailboxType]
  -[EDPBInteractionEventMessageViewStart mailboxTypeAsString:]
  -[EDPBInteractionEventMessageViewStart StringAsMailboxType:]
  -[EDPBInteractionEventMessageViewStart hasMessageId]
  -[EDPBInteractionEventMessageViewStart withHasher:setMessage:data:]
  -[EDPBInteractionEventMessageViewStart setMailboxId:]
  -[EDPBInteractionEventMessageViewStart setHasMailboxId:]
  -[EDPBInteractionEventMessageViewStart hasMailboxId]
  -[EDPBInteractionEventMessageViewStart setHasConversationId:]
  -[EDPBInteractionEventMessageViewStart setHasMessageId:]


EDPBInteractionEventReadChanged : PBCodable <EDPBDataSetters, EDPBBaseMessageFields, NSCopying>
 @property  long long accountId
 @property  long long mailboxId
 @property  int mailboxType
 @property  long long conversationId
 @property  long long messageId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasMailboxId
 @property  long long mailboxId
 @property  BOOL hasMailboxType
 @property  int mailboxType
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId
 @property  BOOL hasValue
 @property  BOOL value

  // instance methods
  -[EDPBInteractionEventReadChanged messageId]
  -[EDPBInteractionEventReadChanged copyTo:]
  -[EDPBInteractionEventReadChanged hasValue]
  -[EDPBInteractionEventReadChanged setAccountId:]
  -[EDPBInteractionEventReadChanged mergeFrom:]
  -[EDPBInteractionEventReadChanged setValue:]
  -[EDPBInteractionEventReadChanged dictionaryRepresentation]
  -[EDPBInteractionEventReadChanged copyWithZone:]
  -[EDPBInteractionEventReadChanged accountId]
  -[EDPBInteractionEventReadChanged value]
  -[EDPBInteractionEventReadChanged readFrom:]
  -[EDPBInteractionEventReadChanged setHasValue:]
  -[EDPBInteractionEventReadChanged writeTo:]
  -[EDPBInteractionEventReadChanged isEqual:]
  -[EDPBInteractionEventReadChanged setMessageId:]
  -[EDPBInteractionEventReadChanged conversationId]
  -[EDPBInteractionEventReadChanged setConversationId:]
  -[EDPBInteractionEventReadChanged hasConversationId]
  -[EDPBInteractionEventReadChanged mailboxId]
  -[EDPBInteractionEventReadChanged mailboxType]
  -[EDPBInteractionEventReadChanged setMailboxType:]
  -[EDPBInteractionEventReadChanged setHasAccountId:]
  -[EDPBInteractionEventReadChanged hasAccountId]
  -[EDPBInteractionEventReadChanged setHasMailboxType:]
  -[EDPBInteractionEventReadChanged hasMailboxType]
  -[EDPBInteractionEventReadChanged mailboxTypeAsString:]
  -[EDPBInteractionEventReadChanged StringAsMailboxType:]
  -[EDPBInteractionEventReadChanged hasMessageId]
  -[EDPBInteractionEventReadChanged withHasher:setMessage:data:]
  -[EDPBInteractionEventReadChanged setMailboxId:]
  -[EDPBInteractionEventReadChanged setHasMailboxId:]
  -[EDPBInteractionEventReadChanged hasMailboxId]
  -[EDPBInteractionEventReadChanged setHasConversationId:]
  -[EDPBInteractionEventReadChanged setHasMessageId:]


EDPBInteractionEventReplyDraftStarted : PBCodable <EDPBDataSetters, EDPBBaseMessageFields, NSCopying>
 @property  long long accountId
 @property  long long mailboxId
 @property  int mailboxType
 @property  long long conversationId
 @property  long long messageId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasMailboxId
 @property  long long mailboxId
 @property  BOOL hasMailboxType
 @property  int mailboxType
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId

  // instance methods
  -[EDPBInteractionEventReplyDraftStarted messageId]
  -[EDPBInteractionEventReplyDraftStarted copyTo:]
  -[EDPBInteractionEventReplyDraftStarted setAccountId:]
  -[EDPBInteractionEventReplyDraftStarted mergeFrom:]
  -[EDPBInteractionEventReplyDraftStarted dictionaryRepresentation]
  -[EDPBInteractionEventReplyDraftStarted copyWithZone:]
  -[EDPBInteractionEventReplyDraftStarted accountId]
  -[EDPBInteractionEventReplyDraftStarted readFrom:]
  -[EDPBInteractionEventReplyDraftStarted writeTo:]
  -[EDPBInteractionEventReplyDraftStarted isEqual:]
  -[EDPBInteractionEventReplyDraftStarted setMessageId:]
  -[EDPBInteractionEventReplyDraftStarted conversationId]
  -[EDPBInteractionEventReplyDraftStarted setConversationId:]
  -[EDPBInteractionEventReplyDraftStarted hasConversationId]
  -[EDPBInteractionEventReplyDraftStarted mailboxId]
  -[EDPBInteractionEventReplyDraftStarted mailboxType]
  -[EDPBInteractionEventReplyDraftStarted setMailboxType:]
  -[EDPBInteractionEventReplyDraftStarted setHasAccountId:]
  -[EDPBInteractionEventReplyDraftStarted hasAccountId]
  -[EDPBInteractionEventReplyDraftStarted setHasMailboxType:]
  -[EDPBInteractionEventReplyDraftStarted hasMailboxType]
  -[EDPBInteractionEventReplyDraftStarted mailboxTypeAsString:]
  -[EDPBInteractionEventReplyDraftStarted StringAsMailboxType:]
  -[EDPBInteractionEventReplyDraftStarted hasMessageId]
  -[EDPBInteractionEventReplyDraftStarted withHasher:setMessage:data:]
  -[EDPBInteractionEventReplyDraftStarted setMailboxId:]
  -[EDPBInteractionEventReplyDraftStarted setHasMailboxId:]
  -[EDPBInteractionEventReplyDraftStarted hasMailboxId]
  -[EDPBInteractionEventReplyDraftStarted setHasConversationId:]
  -[EDPBInteractionEventReplyDraftStarted setHasMessageId:]


EDPBInteractionEventReplySent : PBCodable <EDPBDataSetters, EDPBBaseMessageFields, NSCopying>
 @property  long long accountId
 @property  long long mailboxId
 @property  int mailboxType
 @property  long long conversationId
 @property  long long messageId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasMailboxId
 @property  long long mailboxId
 @property  BOOL hasMailboxType
 @property  int mailboxType
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId

  // instance methods
  -[EDPBInteractionEventReplySent messageId]
  -[EDPBInteractionEventReplySent copyTo:]
  -[EDPBInteractionEventReplySent setAccountId:]
  -[EDPBInteractionEventReplySent mergeFrom:]
  -[EDPBInteractionEventReplySent dictionaryRepresentation]
  -[EDPBInteractionEventReplySent copyWithZone:]
  -[EDPBInteractionEventReplySent accountId]
  -[EDPBInteractionEventReplySent readFrom:]
  -[EDPBInteractionEventReplySent writeTo:]
  -[EDPBInteractionEventReplySent isEqual:]
  -[EDPBInteractionEventReplySent setMessageId:]
  -[EDPBInteractionEventReplySent conversationId]
  -[EDPBInteractionEventReplySent setConversationId:]
  -[EDPBInteractionEventReplySent hasConversationId]
  -[EDPBInteractionEventReplySent mailboxId]
  -[EDPBInteractionEventReplySent mailboxType]
  -[EDPBInteractionEventReplySent setMailboxType:]
  -[EDPBInteractionEventReplySent setHasAccountId:]
  -[EDPBInteractionEventReplySent hasAccountId]
  -[EDPBInteractionEventReplySent setHasMailboxType:]
  -[EDPBInteractionEventReplySent hasMailboxType]
  -[EDPBInteractionEventReplySent mailboxTypeAsString:]
  -[EDPBInteractionEventReplySent StringAsMailboxType:]
  -[EDPBInteractionEventReplySent hasMessageId]
  -[EDPBInteractionEventReplySent withHasher:setMessage:data:]
  -[EDPBInteractionEventReplySent setMailboxId:]
  -[EDPBInteractionEventReplySent setHasMailboxId:]
  -[EDPBInteractionEventReplySent hasMailboxId]
  -[EDPBInteractionEventReplySent setHasConversationId:]
  -[EDPBInteractionEventReplySent setHasMessageId:]


EDPBMessageData : PBCodable <EDPETMessageFrameTypeIntrospectable, EDPBDataSetters, EDPBBaseMessageFields, NSCopying>
 @property  long long accountId
 @property  long long mailboxId
 @property  int mailboxType
 @property  long long conversationId
 @property  long long messageId
 @property  BOOL hasAccountId
 @property  long long accountId
 @property  BOOL hasMailboxId
 @property  long long mailboxId
 @property  BOOL hasMailboxType
 @property  int mailboxType
 @property  BOOL hasConversationId
 @property  long long conversationId
 @property  BOOL hasMessageId
 @property  long long messageId
 @property  BOOL hasHeaders
 @property  EDPBMessageHeaders *headers

  // instance methods
  -[EDPBMessageData headers]
  -[EDPBMessageData messageId]
  -[EDPBMessageData copyTo:]
  -[EDPBMessageData setHeaders:]
  -[EDPBMessageData messageFrameType]
  -[EDPBMessageData .cxx_destruct]
  -[EDPBMessageData setAccountId:]
  -[EDPBMessageData mergeFrom:]
  -[EDPBMessageData dictionaryRepresentation]
  -[EDPBMessageData copyWithZone:]
  -[EDPBMessageData accountId]
  -[EDPBMessageData readFrom:]
  -[EDPBMessageData writeTo:]
  -[EDPBMessageData isEqual:]
  -[EDPBMessageData setMessageId:]
  -[EDPBMessageData conversationId]
  -[EDPBMessageData setConversationId:]
  -[EDPBMessageData hasConversationId]
  -[EDPBMessageData mailboxId]
  -[EDPBMessageData mailboxType]
  -[EDPBMessageData setMailboxType:]
  -[EDPBMessageData setHasAccountId:]
  -[EDPBMessageData hasAccountId]
  -[EDPBMessageData setHasMailboxType:]
  -[EDPBMessageData hasMailboxType]
  -[EDPBMessageData mailboxTypeAsString:]
  -[EDPBMessageData StringAsMailboxType:]
  -[EDPBMessageData hasMessageId]
  -[EDPBMessageData withHasher:setDataFromMessage:]
  -[EDPBMessageData withHasher:setDataFromMessage:account:]
  -[EDPBMessageData setMailboxId:]
  -[EDPBMessageData setHasMailboxId:]
  -[EDPBMessageData hasMailboxId]
  -[EDPBMessageData setHasConversationId:]
  -[EDPBMessageData setHasMessageId:]
  -[EDPBMessageData hasHeaders]


EDPBMessageDataIDOnly : PBCodable <NSCopying>
 @property  BOOL hasMessageId
 @property  long long messageId

  // instance methods
  -[EDPBMessageDataIDOnly messageId]
  -[EDPBMessageDataIDOnly copyTo:]
  -[EDPBMessageDataIDOnly mergeFrom:]
  -[EDPBMessageDataIDOnly dictionaryRepresentation]
  -[EDPBMessageDataIDOnly copyWithZone:]
  -[EDPBMessageDataIDOnly readFrom:]
  -[EDPBMessageDataIDOnly writeTo:]
  -[EDPBMessageDataIDOnly isEqual:]
  -[EDPBMessageDataIDOnly setMessageId:]
  -[EDPBMessageDataIDOnly hasMessageId]
  -[EDPBMessageDataIDOnly setHasMessageId:]


EDPBMessageHeaders : PBCodable <NSCopying>
 @property  BOOL hasSender
 @property  long long sender
 @property  BOOL hasSenderDomain
 @property  long long senderDomain
 @property  BOOL hasSenderIsVip
 @property  BOOL senderIsVip
 @property  BOOL hasSenderContactId
 @property  long long senderContactId
 @property  BOOL hasUserIsSender
 @property  BOOL userIsSender
 @property  unsigned long subjectWordsCount
 @property  ^q subjectWords
 @property  BOOL hasMessageIsReply
 @property  BOOL messageIsReply
 @property  BOOL hasMessageIsForwarded
 @property  BOOL messageIsForwarded
 @property  BOOL hasUserIsTo
 @property  BOOL userIsTo
 @property  BOOL hasUserIsCc
 @property  BOOL userIsCc
 @property  BOOL hasUserIsBcc
 @property  BOOL userIsBcc
 @property  BOOL hasDateReceived
 @property  unsigned long dateReceived
 @property  BOOL hasListId
 @property  long long listId
 @property  unsigned long referencesCount
 @property  ^q references
 @property  unsigned long toAddressCount
 @property  ^q toAddress
 @property  unsigned long toDomainsCount
 @property  ^q toDomains
 @property  unsigned long toIsVipsCount
 @property  ^B toIsVips
 @property  unsigned long toContactIdsCount
 @property  ^q toContactIds
 @property  unsigned long ccAddressCount
 @property  ^q ccAddress
 @property  unsigned long ccDomainsCount
 @property  ^q ccDomains
 @property  unsigned long ccIsVipsCount
 @property  ^B ccIsVips
 @property  unsigned long ccContactIdsCount
 @property  ^q ccContactIds
 @property  unsigned long bccAddressCount
 @property  ^q bccAddress
 @property  unsigned long bccDomainsCount
 @property  ^q bccDomains
 @property  unsigned long bccIsVipsCount
 @property  ^B bccIsVips
 @property  unsigned long bccContactIdsCount
 @property  ^q bccContactIds

  // instance methods
  -[EDPBMessageHeaders setSender:]
  -[EDPBMessageHeaders referencesCount]
  -[EDPBMessageHeaders copyTo:]
  -[EDPBMessageHeaders addReferences:]
  -[EDPBMessageHeaders dealloc]
  -[EDPBMessageHeaders clearReferences]
  -[EDPBMessageHeaders references]
  -[EDPBMessageHeaders mergeFrom:]
  -[EDPBMessageHeaders dateReceived]
  -[EDPBMessageHeaders dictionaryRepresentation]
  -[EDPBMessageHeaders copyWithZone:]
  -[EDPBMessageHeaders hasSender]
  -[EDPBMessageHeaders readFrom:]
  -[EDPBMessageHeaders referencesAtIndex:]
  -[EDPBMessageHeaders sender]
  -[EDPBMessageHeaders writeTo:]
  -[EDPBMessageHeaders setDateReceived:]
  -[EDPBMessageHeaders isEqual:]
  -[EDPBMessageHeaders hasListId]
  -[EDPBMessageHeaders listId]
  -[EDPBMessageHeaders setListId:]
  -[EDPBMessageHeaders userIsSender]
  -[EDPBMessageHeaders setUserIsSender:]
  -[EDPBMessageHeaders senderIsVip]
  -[EDPBMessageHeaders senderDomain]
  -[EDPBMessageHeaders setHasSender:]
  -[EDPBMessageHeaders setSenderDomain:]
  -[EDPBMessageHeaders setHasSenderDomain:]
  -[EDPBMessageHeaders hasSenderDomain]
  -[EDPBMessageHeaders setSenderIsVip:]
  -[EDPBMessageHeaders setHasSenderIsVip:]
  -[EDPBMessageHeaders hasSenderIsVip]
  -[EDPBMessageHeaders setSenderContactId:]
  -[EDPBMessageHeaders setHasSenderContactId:]
  -[EDPBMessageHeaders hasSenderContactId]
  -[EDPBMessageHeaders setHasUserIsSender:]
  -[EDPBMessageHeaders hasUserIsSender]
  -[EDPBMessageHeaders subjectWordsCount]
  -[EDPBMessageHeaders subjectWords]
  -[EDPBMessageHeaders clearSubjectWords]
  -[EDPBMessageHeaders addSubjectWords:]
  -[EDPBMessageHeaders subjectWordsAtIndex:]
  -[EDPBMessageHeaders setSubjectWords:count:]
  -[EDPBMessageHeaders setMessageIsReply:]
  -[EDPBMessageHeaders setHasMessageIsReply:]
  -[EDPBMessageHeaders hasMessageIsReply]
  -[EDPBMessageHeaders setMessageIsForwarded:]
  -[EDPBMessageHeaders setHasMessageIsForwarded:]
  -[EDPBMessageHeaders hasMessageIsForwarded]
  -[EDPBMessageHeaders setUserIsTo:]
  -[EDPBMessageHeaders setHasUserIsTo:]
  -[EDPBMessageHeaders hasUserIsTo]
  -[EDPBMessageHeaders setUserIsCc:]
  -[EDPBMessageHeaders setHasUserIsCc:]
  -[EDPBMessageHeaders hasUserIsCc]
  -[EDPBMessageHeaders setUserIsBcc:]
  -[EDPBMessageHeaders setHasUserIsBcc:]
  -[EDPBMessageHeaders hasUserIsBcc]
  -[EDPBMessageHeaders setHasDateReceived:]
  -[EDPBMessageHeaders hasDateReceived]
  -[EDPBMessageHeaders setHasListId:]
  -[EDPBMessageHeaders setReferences:count:]
  -[EDPBMessageHeaders toAddressCount]
  -[EDPBMessageHeaders toAddress]
  -[EDPBMessageHeaders clearToAddress]
  -[EDPBMessageHeaders addToAddress:]
  -[EDPBMessageHeaders toAddressAtIndex:]
  -[EDPBMessageHeaders setToAddress:count:]
  -[EDPBMessageHeaders toDomainsCount]
  -[EDPBMessageHeaders toDomains]
  -[EDPBMessageHeaders clearToDomains]
  -[EDPBMessageHeaders addToDomain:]
  -[EDPBMessageHeaders toDomainAtIndex:]
  -[EDPBMessageHeaders setToDomains:count:]
  -[EDPBMessageHeaders toIsVipsCount]
  -[EDPBMessageHeaders toIsVips]
  -[EDPBMessageHeaders clearToIsVips]
  -[EDPBMessageHeaders addToIsVip:]
  -[EDPBMessageHeaders toIsVipAtIndex:]
  -[EDPBMessageHeaders setToIsVips:count:]
  -[EDPBMessageHeaders toContactIdsCount]
  -[EDPBMessageHeaders toContactIds]
  -[EDPBMessageHeaders clearToContactIds]
  -[EDPBMessageHeaders addToContactId:]
  -[EDPBMessageHeaders toContactIdAtIndex:]
  -[EDPBMessageHeaders setToContactIds:count:]
  -[EDPBMessageHeaders ccAddressCount]
  -[EDPBMessageHeaders ccAddress]
  -[EDPBMessageHeaders clearCcAddress]
  -[EDPBMessageHeaders addCcAddress:]
  -[EDPBMessageHeaders ccAddressAtIndex:]
  -[EDPBMessageHeaders setCcAddress:count:]
  -[EDPBMessageHeaders ccDomainsCount]
  -[EDPBMessageHeaders ccDomains]
  -[EDPBMessageHeaders clearCcDomains]
  -[EDPBMessageHeaders addCcDomain:]
  -[EDPBMessageHeaders ccDomainAtIndex:]
  -[EDPBMessageHeaders setCcDomains:count:]
  -[EDPBMessageHeaders ccIsVipsCount]
  -[EDPBMessageHeaders ccIsVips]
  -[EDPBMessageHeaders clearCcIsVips]
  -[EDPBMessageHeaders addCcIsVip:]
  -[EDPBMessageHeaders ccIsVipAtIndex:]
  -[EDPBMessageHeaders setCcIsVips:count:]
  -[EDPBMessageHeaders ccContactIdsCount]
  -[EDPBMessageHeaders ccContactIds]
  -[EDPBMessageHeaders clearCcContactIds]
  -[EDPBMessageHeaders addCcContactId:]
  -[EDPBMessageHeaders ccContactIdAtIndex:]
  -[EDPBMessageHeaders setCcContactIds:count:]
  -[EDPBMessageHeaders bccAddressCount]
  -[EDPBMessageHeaders bccAddress]
  -[EDPBMessageHeaders clearBccAddress]
  -[EDPBMessageHeaders addBccAddress:]
  -[EDPBMessageHeaders bccAddressAtIndex:]
  -[EDPBMessageHeaders setBccAddress:count:]
  -[EDPBMessageHeaders bccDomainsCount]
  -[EDPBMessageHeaders bccDomains]
  -[EDPBMessageHeaders clearBccDomains]
  -[EDPBMessageHeaders addBccDomain:]
  -[EDPBMessageHeaders bccDomainAtIndex:]
  -[EDPBMessageHeaders setBccDomains:count:]
  -[EDPBMessageHeaders bccIsVipsCount]
  -[EDPBMessageHeaders bccIsVips]
  -[EDPBMessageHeaders clearBccIsVips]
  -[EDPBMessageHeaders addBccIsVip:]
  -[EDPBMessageHeaders bccIsVipAtIndex:]
  -[EDPBMessageHeaders setBccIsVips:count:]
  -[EDPBMessageHeaders bccContactIdsCount]
  -[EDPBMessageHeaders bccContactIds]
  -[EDPBMessageHeaders clearBccContactIds]
  -[EDPBMessageHeaders addBccContactId:]
  -[EDPBMessageHeaders bccContactIdAtIndex:]
  -[EDPBMessageHeaders setBccContactIds:count:]
  -[EDPBMessageHeaders senderContactId]
  -[EDPBMessageHeaders messageIsReply]
  -[EDPBMessageHeaders messageIsForwarded]
  -[EDPBMessageHeaders userIsTo]
  -[EDPBMessageHeaders userIsCc]
  -[EDPBMessageHeaders userIsBcc]


EDPBModelFeaturesImportant : PBCodable <NSCopying>
 @property  BOOL hasUnknownFeatureCount
 @property  unsigned int unknownFeatureCount
 @property  BOOL hasCcContainsContact
 @property  BOOL ccContainsContact
 @property  BOOL hasCcIsTopDirectAddressesBasedOnRespond
 @property  BOOL ccIsTopDirectAddressesBasedOnRespond
 @property  BOOL hasCcIsTopDirectAddressesBasedOnScroll
 @property  BOOL ccIsTopDirectAddressesBasedOnScroll
 @property  BOOL hasCcIsTopDirectAddressesBasedOnSend
 @property  BOOL ccIsTopDirectAddressesBasedOnSend
 @property  BOOL hasCcIsTopDirectAddressesBasedOnView
 @property  BOOL ccIsTopDirectAddressesBasedOnView
 @property  BOOL hasCcIsTopIndirectAddressesBasedOnRespond
 @property  BOOL ccIsTopIndirectAddressesBasedOnRespond
 @property  BOOL hasCcIsTopIndirectAddressesBasedOnScroll
 @property  BOOL ccIsTopIndirectAddressesBasedOnScroll
 @property  BOOL hasCcIsTopIndirectAddressesBasedOnSend
 @property  BOOL ccIsTopIndirectAddressesBasedOnSend
 @property  BOOL hasCcIsTopIndirectAddressesBasedOnView
 @property  BOOL ccIsTopIndirectAddressesBasedOnView
 @property  BOOL hasCcIsVip
 @property  BOOL ccIsVip
 @property  BOOL hasFromListId
 @property  BOOL fromListId
 @property  BOOL hasMessageIsForward
 @property  BOOL messageIsForward
 @property  BOOL hasMessageIsReply
 @property  BOOL messageIsReply
 @property  BOOL hasNumRecipients
 @property  unsigned int numRecipients
 @property  BOOL hasSenderIsContact
 @property  BOOL senderIsContact
 @property  BOOL hasSenderIsTopDirectAddressesBasedOnRespond
 @property  BOOL senderIsTopDirectAddressesBasedOnRespond
 @property  BOOL hasSenderIsTopDirectAddressesBasedOnScroll
 @property  BOOL senderIsTopDirectAddressesBasedOnScroll
 @property  BOOL hasSenderIsTopDirectAddressesBasedOnSend
 @property  BOOL senderIsTopDirectAddressesBasedOnSend
 @property  BOOL hasSenderIsTopDirectAddressesBasedOnView
 @property  BOOL senderIsTopDirectAddressesBasedOnView
 @property  BOOL hasSenderIsTopIndirectAddressesBasedOnRespond
 @property  BOOL senderIsTopIndirectAddressesBasedOnRespond
 @property  BOOL hasSenderIsTopIndirectAddressesBasedOnScroll
 @property  BOOL senderIsTopIndirectAddressesBasedOnScroll
 @property  BOOL hasSenderIsTopIndirectAddressesBasedOnSend
 @property  BOOL senderIsTopIndirectAddressesBasedOnSend
 @property  BOOL hasSenderIsTopIndirectAddressesBasedOnView
 @property  BOOL senderIsTopIndirectAddressesBasedOnView
 @property  BOOL hasSenderIsVip
 @property  BOOL senderIsVip
 @property  BOOL hasSubjectIsTopWordsBasedOnRespond
 @property  BOOL subjectIsTopWordsBasedOnRespond
 @property  BOOL hasSubjectIsTopWordsBasedOnScroll
 @property  BOOL subjectIsTopWordsBasedOnScroll
 @property  BOOL hasSubjectIsTopWordsBasedOnSend
 @property  BOOL subjectIsTopWordsBasedOnSend
 @property  BOOL hasSubjectIsTopWordsBasedOnView
 @property  BOOL subjectIsTopWordsBasedOnView
 @property  BOOL hasTimeReceived
 @property  int timeReceived
 @property  BOOL hasToContainsContact
 @property  BOOL toContainsContact
 @property  BOOL hasToIsTopDirectAddressesBasedOnRespond
 @property  BOOL toIsTopDirectAddressesBasedOnRespond
 @property  BOOL hasToIsTopDirectAddressesBasedOnScroll
 @property  BOOL toIsTopDirectAddressesBasedOnScroll
 @property  BOOL hasToIsTopDirectAddressesBasedOnSend
 @property  BOOL toIsTopDirectAddressesBasedOnSend
 @property  BOOL hasToIsTopDirectAddressesBasedOnView
 @property  BOOL toIsTopDirectAddressesBasedOnView
 @property  BOOL hasToIsTopIndirectAddressesBasedOnRespond
 @property  BOOL toIsTopIndirectAddressesBasedOnRespond
 @property  BOOL hasToIsTopIndirectAddressesBasedOnScroll
 @property  BOOL toIsTopIndirectAddressesBasedOnScroll
 @property  BOOL hasToIsTopIndirectAddressesBasedOnSend
 @property  BOOL toIsTopIndirectAddressesBasedOnSend
 @property  BOOL hasToIsTopIndirectAddressesBasedOnView
 @property  BOOL toIsTopIndirectAddressesBasedOnView
 @property  BOOL hasToIsVip
 @property  BOOL toIsVip
 @property  BOOL hasUserIsBcc
 @property  BOOL userIsBcc
 @property  BOOL hasUserIsCc
 @property  BOOL userIsCc
 @property  BOOL hasUserIsSender
 @property  BOOL userIsSender
 @property  BOOL hasUserIsTo
 @property  BOOL userIsTo

  // instance methods
  -[EDPBModelFeaturesImportant copyTo:]
  -[EDPBModelFeaturesImportant mergeFrom:]
  -[EDPBModelFeaturesImportant dictionaryRepresentation]
  -[EDPBModelFeaturesImportant copyWithZone:]
  -[EDPBModelFeaturesImportant readFrom:]
  -[EDPBModelFeaturesImportant writeTo:]
  -[EDPBModelFeaturesImportant isEqual:]
  -[EDPBModelFeaturesImportant userIsSender]
  -[EDPBModelFeaturesImportant setUserIsSender:]
  -[EDPBModelFeaturesImportant timeReceived]
  -[EDPBModelFeaturesImportant setTimeReceived:]
  -[EDPBModelFeaturesImportant senderIsVip]
  -[EDPBModelFeaturesImportant setSenderIsVip:]
  -[EDPBModelFeaturesImportant setHasSenderIsVip:]
  -[EDPBModelFeaturesImportant hasSenderIsVip]
  -[EDPBModelFeaturesImportant setHasUserIsSender:]
  -[EDPBModelFeaturesImportant hasUserIsSender]
  -[EDPBModelFeaturesImportant setMessageIsReply:]
  -[EDPBModelFeaturesImportant setHasMessageIsReply:]
  -[EDPBModelFeaturesImportant hasMessageIsReply]
  -[EDPBModelFeaturesImportant setUserIsTo:]
  -[EDPBModelFeaturesImportant setHasUserIsTo:]
  -[EDPBModelFeaturesImportant hasUserIsTo]
  -[EDPBModelFeaturesImportant setUserIsCc:]
  -[EDPBModelFeaturesImportant setHasUserIsCc:]
  -[EDPBModelFeaturesImportant hasUserIsCc]
  -[EDPBModelFeaturesImportant setUserIsBcc:]
  -[EDPBModelFeaturesImportant setHasUserIsBcc:]
  -[EDPBModelFeaturesImportant hasUserIsBcc]
  -[EDPBModelFeaturesImportant messageIsReply]
  -[EDPBModelFeaturesImportant userIsTo]
  -[EDPBModelFeaturesImportant userIsCc]
  -[EDPBModelFeaturesImportant userIsBcc]
  -[EDPBModelFeaturesImportant setUnknownFeatureCount:]
  -[EDPBModelFeaturesImportant setHasUnknownFeatureCount:]
  -[EDPBModelFeaturesImportant hasUnknownFeatureCount]
  -[EDPBModelFeaturesImportant setCcContainsContact:]
  -[EDPBModelFeaturesImportant setHasCcContainsContact:]
  -[EDPBModelFeaturesImportant hasCcContainsContact]
  -[EDPBModelFeaturesImportant setCcIsTopDirectAddressesBasedOnRespond:]
  -[EDPBModelFeaturesImportant setHasCcIsTopDirectAddressesBasedOnRespond:]
  -[EDPBModelFeaturesImportant hasCcIsTopDirectAddressesBasedOnRespond]
  -[EDPBModelFeaturesImportant setCcIsTopDirectAddressesBasedOnScroll:]
  -[EDPBModelFeaturesImportant setHasCcIsTopDirectAddressesBasedOnScroll:]
  -[EDPBModelFeaturesImportant hasCcIsTopDirectAddressesBasedOnScroll]
  -[EDPBModelFeaturesImportant setCcIsTopDirectAddressesBasedOnSend:]
  -[EDPBModelFeaturesImportant setHasCcIsTopDirectAddressesBasedOnSend:]
  -[EDPBModelFeaturesImportant hasCcIsTopDirectAddressesBasedOnSend]
  -[EDPBModelFeaturesImportant setCcIsTopDirectAddressesBasedOnView:]
  -[EDPBModelFeaturesImportant setHasCcIsTopDirectAddressesBasedOnView:]
  -[EDPBModelFeaturesImportant hasCcIsTopDirectAddressesBasedOnView]
  -[EDPBModelFeaturesImportant setCcIsTopIndirectAddressesBasedOnRespond:]
  -[EDPBModelFeaturesImportant setHasCcIsTopIndirectAddressesBasedOnRespond:]
  -[EDPBModelFeaturesImportant hasCcIsTopIndirectAddressesBasedOnRespond]
  -[EDPBModelFeaturesImportant setCcIsTopIndirectAddressesBasedOnScroll:]
  -[EDPBModelFeaturesImportant setHasCcIsTopIndirectAddressesBasedOnScroll:]
  -[EDPBModelFeaturesImportant hasCcIsTopIndirectAddressesBasedOnScroll]
  -[EDPBModelFeaturesImportant setCcIsTopIndirectAddressesBasedOnSend:]
  -[EDPBModelFeaturesImportant setHasCcIsTopIndirectAddressesBasedOnSend:]
  -[EDPBModelFeaturesImportant hasCcIsTopIndirectAddressesBasedOnSend]
  -[EDPBModelFeaturesImportant setCcIsTopIndirectAddressesBasedOnView:]
  -[EDPBModelFeaturesImportant setHasCcIsTopIndirectAddressesBasedOnView:]
  -[EDPBModelFeaturesImportant hasCcIsTopIndirectAddressesBasedOnView]
  -[EDPBModelFeaturesImportant setCcIsVip:]
  -[EDPBModelFeaturesImportant setHasCcIsVip:]
  -[EDPBModelFeaturesImportant hasCcIsVip]
  -[EDPBModelFeaturesImportant setFromListId:]
  -[EDPBModelFeaturesImportant setHasFromListId:]
  -[EDPBModelFeaturesImportant hasFromListId]
  -[EDPBModelFeaturesImportant setMessageIsForward:]
  -[EDPBModelFeaturesImportant setHasMessageIsForward:]
  -[EDPBModelFeaturesImportant hasMessageIsForward]
  -[EDPBModelFeaturesImportant setNumRecipients:]
  -[EDPBModelFeaturesImportant setHasNumRecipients:]
  -[EDPBModelFeaturesImportant hasNumRecipients]
  -[EDPBModelFeaturesImportant setSenderIsContact:]
  -[EDPBModelFeaturesImportant setHasSenderIsContact:]
  -[EDPBModelFeaturesImportant hasSenderIsContact]
  -[EDPBModelFeaturesImportant setSenderIsTopDirectAddressesBasedOnRespond:]
  -[EDPBModelFeaturesImportant setHasSenderIsTopDirectAddressesBasedOnRespond:]
  -[EDPBModelFeaturesImportant hasSenderIsTopDirectAddressesBasedOnRespond]
  -[EDPBModelFeaturesImportant setSenderIsTopDirectAddressesBasedOnScroll:]
  -[EDPBModelFeaturesImportant setHasSenderIsTopDirectAddressesBasedOnScroll:]
  -[EDPBModelFeaturesImportant hasSenderIsTopDirectAddressesBasedOnScroll]
  -[EDPBModelFeaturesImportant setSenderIsTopDirectAddressesBasedOnSend:]
  -[EDPBModelFeaturesImportant setHasSenderIsTopDirectAddressesBasedOnSend:]
  -[EDPBModelFeaturesImportant hasSenderIsTopDirectAddressesBasedOnSend]
  -[EDPBModelFeaturesImportant setSenderIsTopDirectAddressesBasedOnView:]
  -[EDPBModelFeaturesImportant setHasSenderIsTopDirectAddressesBasedOnView:]
  -[EDPBModelFeaturesImportant hasSenderIsTopDirectAddressesBasedOnView]
  -[EDPBModelFeaturesImportant setSenderIsTopIndirectAddressesBasedOnRespond:]
  -[EDPBModelFeaturesImportant setHasSenderIsTopIndirectAddressesBasedOnRespond:]
  -[EDPBModelFeaturesImportant hasSenderIsTopIndirectAddressesBasedOnRespond]
  -[EDPBModelFeaturesImportant setSenderIsTopIndirectAddressesBasedOnScroll:]
  -[EDPBModelFeaturesImportant setHasSenderIsTopIndirectAddressesBasedOnScroll:]
  -[EDPBModelFeaturesImportant hasSenderIsTopIndirectAddressesBasedOnScroll]
  -[EDPBModelFeaturesImportant setSenderIsTopIndirectAddressesBasedOnSend:]
  -[EDPBModelFeaturesImportant setHasSenderIsTopIndirectAddressesBasedOnSend:]
  -[EDPBModelFeaturesImportant hasSenderIsTopIndirectAddressesBasedOnSend]
  -[EDPBModelFeaturesImportant setSenderIsTopIndirectAddressesBasedOnView:]
  -[EDPBModelFeaturesImportant setHasSenderIsTopIndirectAddressesBasedOnView:]
  -[EDPBModelFeaturesImportant hasSenderIsTopIndirectAddressesBasedOnView]
  -[EDPBModelFeaturesImportant setSubjectIsTopWordsBasedOnRespond:]
  -[EDPBModelFeaturesImportant setHasSubjectIsTopWordsBasedOnRespond:]
  -[EDPBModelFeaturesImportant hasSubjectIsTopWordsBasedOnRespond]
  -[EDPBModelFeaturesImportant setSubjectIsTopWordsBasedOnScroll:]
  -[EDPBModelFeaturesImportant setHasSubjectIsTopWordsBasedOnScroll:]
  -[EDPBModelFeaturesImportant hasSubjectIsTopWordsBasedOnScroll]
  -[EDPBModelFeaturesImportant setSubjectIsTopWordsBasedOnSend:]
  -[EDPBModelFeaturesImportant setHasSubjectIsTopWordsBasedOnSend:]
  -[EDPBModelFeaturesImportant hasSubjectIsTopWordsBasedOnSend]
  -[EDPBModelFeaturesImportant setSubjectIsTopWordsBasedOnView:]
  -[EDPBModelFeaturesImportant setHasSubjectIsTopWordsBasedOnView:]
  -[EDPBModelFeaturesImportant hasSubjectIsTopWordsBasedOnView]
  -[EDPBModelFeaturesImportant setHasTimeReceived:]
  -[EDPBModelFeaturesImportant hasTimeReceived]
  -[EDPBModelFeaturesImportant timeReceivedAsString:]
  -[EDPBModelFeaturesImportant StringAsTimeReceived:]
  -[EDPBModelFeaturesImportant setToContainsContact:]
  -[EDPBModelFeaturesImportant setHasToContainsContact:]
  -[EDPBModelFeaturesImportant hasToContainsContact]
  -[EDPBModelFeaturesImportant setToIsTopDirectAddressesBasedOnRespond:]
  -[EDPBModelFeaturesImportant setHasToIsTopDirectAddressesBasedOnRespond:]
  -[EDPBModelFeaturesImportant hasToIsTopDirectAddressesBasedOnRespond]
  -[EDPBModelFeaturesImportant setToIsTopDirectAddressesBasedOnScroll:]
  -[EDPBModelFeaturesImportant setHasToIsTopDirectAddressesBasedOnScroll:]
  -[EDPBModelFeaturesImportant hasToIsTopDirectAddressesBasedOnScroll]
  -[EDPBModelFeaturesImportant setToIsTopDirectAddressesBasedOnSend:]
  -[EDPBModelFeaturesImportant setHasToIsTopDirectAddressesBasedOnSend:]
  -[EDPBModelFeaturesImportant hasToIsTopDirectAddressesBasedOnSend]
  -[EDPBModelFeaturesImportant setToIsTopDirectAddressesBasedOnView:]
  -[EDPBModelFeaturesImportant setHasToIsTopDirectAddressesBasedOnView:]
  -[EDPBModelFeaturesImportant hasToIsTopDirectAddressesBasedOnView]
  -[EDPBModelFeaturesImportant setToIsTopIndirectAddressesBasedOnRespond:]
  -[EDPBModelFeaturesImportant setHasToIsTopIndirectAddressesBasedOnRespond:]
  -[EDPBModelFeaturesImportant hasToIsTopIndirectAddressesBasedOnRespond]
  -[EDPBModelFeaturesImportant setToIsTopIndirectAddressesBasedOnScroll:]
  -[EDPBModelFeaturesImportant setHasToIsTopIndirectAddressesBasedOnScroll:]
  -[EDPBModelFeaturesImportant hasToIsTopIndirectAddressesBasedOnScroll]
  -[EDPBModelFeaturesImportant setToIsTopIndirectAddressesBasedOnSend:]
  -[EDPBModelFeaturesImportant setHasToIsTopIndirectAddressesBasedOnSend:]
  -[EDPBModelFeaturesImportant hasToIsTopIndirectAddressesBasedOnSend]
  -[EDPBModelFeaturesImportant setToIsTopIndirectAddressesBasedOnView:]
  -[EDPBModelFeaturesImportant setHasToIsTopIndirectAddressesBasedOnView:]
  -[EDPBModelFeaturesImportant hasToIsTopIndirectAddressesBasedOnView]
  -[EDPBModelFeaturesImportant setToIsVip:]
  -[EDPBModelFeaturesImportant setHasToIsVip:]
  -[EDPBModelFeaturesImportant hasToIsVip]
  -[EDPBModelFeaturesImportant unknownFeatureCount]
  -[EDPBModelFeaturesImportant ccContainsContact]
  -[EDPBModelFeaturesImportant ccIsTopDirectAddressesBasedOnRespond]
  -[EDPBModelFeaturesImportant ccIsTopDirectAddressesBasedOnScroll]
  -[EDPBModelFeaturesImportant ccIsTopDirectAddressesBasedOnSend]
  -[EDPBModelFeaturesImportant ccIsTopDirectAddressesBasedOnView]
  -[EDPBModelFeaturesImportant ccIsTopIndirectAddressesBasedOnRespond]
  -[EDPBModelFeaturesImportant ccIsTopIndirectAddressesBasedOnScroll]
  -[EDPBModelFeaturesImportant ccIsTopIndirectAddressesBasedOnSend]
  -[EDPBModelFeaturesImportant ccIsTopIndirectAddressesBasedOnView]
  -[EDPBModelFeaturesImportant ccIsVip]
  -[EDPBModelFeaturesImportant fromListId]
  -[EDPBModelFeaturesImportant messageIsForward]
  -[EDPBModelFeaturesImportant numRecipients]
  -[EDPBModelFeaturesImportant senderIsContact]
  -[EDPBModelFeaturesImportant senderIsTopDirectAddressesBasedOnRespond]
  -[EDPBModelFeaturesImportant senderIsTopDirectAddressesBasedOnScroll]
  -[EDPBModelFeaturesImportant senderIsTopDirectAddressesBasedOnSend]
  -[EDPBModelFeaturesImportant senderIsTopDirectAddressesBasedOnView]
  -[EDPBModelFeaturesImportant senderIsTopIndirectAddressesBasedOnRespond]
  -[EDPBModelFeaturesImportant senderIsTopIndirectAddressesBasedOnScroll]
  -[EDPBModelFeaturesImportant senderIsTopIndirectAddressesBasedOnSend]
  -[EDPBModelFeaturesImportant senderIsTopIndirectAddressesBasedOnView]
  -[EDPBModelFeaturesImportant subjectIsTopWordsBasedOnRespond]
  -[EDPBModelFeaturesImportant subjectIsTopWordsBasedOnScroll]
  -[EDPBModelFeaturesImportant subjectIsTopWordsBasedOnSend]
  -[EDPBModelFeaturesImportant subjectIsTopWordsBasedOnView]
  -[EDPBModelFeaturesImportant toContainsContact]
  -[EDPBModelFeaturesImportant toIsTopDirectAddressesBasedOnRespond]
  -[EDPBModelFeaturesImportant toIsTopDirectAddressesBasedOnScroll]
  -[EDPBModelFeaturesImportant toIsTopDirectAddressesBasedOnSend]
  -[EDPBModelFeaturesImportant toIsTopDirectAddressesBasedOnView]
  -[EDPBModelFeaturesImportant toIsTopIndirectAddressesBasedOnRespond]
  -[EDPBModelFeaturesImportant toIsTopIndirectAddressesBasedOnScroll]
  -[EDPBModelFeaturesImportant toIsTopIndirectAddressesBasedOnSend]
  -[EDPBModelFeaturesImportant toIsTopIndirectAddressesBasedOnView]
  -[EDPBModelFeaturesImportant toIsVip]


EDPBModelFeaturesPromotion : PBCodable <NSCopying>
 @property  BOOL hasUnknownFeatureCount
 @property  unsigned int unknownFeatureCount
 @property  BOOL hasToCount
 @property  unsigned int toCount
 @property  BOOL hasLanguage
 @property  NSString *language
 @property  BOOL hasHeaderKeyFilteredCount
 @property  unsigned int headerKeyFilteredCount

  // instance methods
  -[EDPBModelFeaturesPromotion setLanguage:]
  -[EDPBModelFeaturesPromotion copyTo:]
  -[EDPBModelFeaturesPromotion .cxx_destruct]
  -[EDPBModelFeaturesPromotion mergeFrom:]
  -[EDPBModelFeaturesPromotion dictionaryRepresentation]
  -[EDPBModelFeaturesPromotion copyWithZone:]
  -[EDPBModelFeaturesPromotion language]
  -[EDPBModelFeaturesPromotion readFrom:]
  -[EDPBModelFeaturesPromotion writeTo:]
  -[EDPBModelFeaturesPromotion isEqual:]
  -[EDPBModelFeaturesPromotion hasLanguage]
  -[EDPBModelFeaturesPromotion setUnknownFeatureCount:]
  -[EDPBModelFeaturesPromotion setHasUnknownFeatureCount:]
  -[EDPBModelFeaturesPromotion hasUnknownFeatureCount]
  -[EDPBModelFeaturesPromotion unknownFeatureCount]
  -[EDPBModelFeaturesPromotion setToCount:]
  -[EDPBModelFeaturesPromotion setHasToCount:]
  -[EDPBModelFeaturesPromotion hasToCount]
  -[EDPBModelFeaturesPromotion setHeaderKeyFilteredCount:]
  -[EDPBModelFeaturesPromotion setHasHeaderKeyFilteredCount:]
  -[EDPBModelFeaturesPromotion hasHeaderKeyFilteredCount]
  -[EDPBModelFeaturesPromotion toCount]
  -[EDPBModelFeaturesPromotion headerKeyFilteredCount]


EDPersistedMessageQueryIterator : NSObject <EFCancelable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDPersistedMessageQueryIterator shouldCancel]
  -[EDPersistedMessageQueryIterator .cxx_destruct]
  -[EDPersistedMessageQueryIterator flush]
  -[EDPersistedMessageQueryIterator cancel]
  -[EDPersistedMessageQueryIterator addPersistedMessage:]
  -[EDPersistedMessageQueryIterator initWithMessagePersistence:query:batchSize:firstBatchSize:limit:handler:]
  -[EDPersistedMessageQueryIterator _processPersistedMessages:forceFlush:]
  -[EDPersistedMessageQueryIterator addPersistedMessages:]


EDPersistence : NSObject <EFLoggable>
 @property  <EDAccountsProvider> *accountsProvider
 @property  EDVIPManager *vipManager
 @property  EDListUnsubscribeHandler *listUnsubscribeHandler
 @property  EDBIMIManager *bimiManager
 @property  EDPersistenceDatabase *database
 @property  EDConversationPersistence *conversationPersistence
 @property  EDLocalActionPersistence *localActionPersistence
 @property  EDServerMessagePersistenceFactory *serverMessagePersistenceFactory
 @property  EDGmailLabelPersistence *gmailLabelPersistence
 @property  EDThreadPersistence *threadPersistence
 @property  EDSenderPersistence *senderPersistence
 @property  EDMailboxActionPersistence *mailboxActionPersistence
 @property  EDMailboxPersistence *mailboxPersistence
 @property  EDMessagePersistence *messagePersistence
 @property  EDMessageChangeManager *messageChangeManager
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  <EMUserProfileProvider> *userProfileProvider
 @property  EDSearchableIndexManager *searchableIndexManager
 @property  <EDRemoteSearchProvider> *remoteSearchProvider
 @property  EMBlockedSenderManager *blockedSenderManager
 @property  EDActivityPersistence *activityPersistence
 @property  EDRemoteContentManager *remoteContentManager
 @property  EDRemoteContentPersistence *remoteContentPersistence
 @property  EDAttachmentPersistenceManager *attachmentPersistenceManager
 @property  EDRemoteContentCacheConfiguration *remoteContentCacheConfiguration
 @property  EMRemoteContentURLCache *remoteContentURLCache
 @property  EMRemoteContentURLSession *remoteContentURLSession
 @property  MEContentRuleListManager *contentRuleListManager
 @property  EDReadLaterPersistence *readLaterPersistence
 @property  EDSendLaterPersistence *sendLaterPersistence
 @property  EDDataDetectionPersistence *dataDetectionPersistence
 @property  EDRichLinkPersistence *richLinkPersistence
 @property  EDRemindMeNotificationController *remindMeNotificationController
 @property  EFXPCAlarmScheduler *alarmScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDPersistence log]

  // instance methods
  -[EDPersistence test_tearDown]
  -[EDPersistence readLaterPersistence]
  -[EDPersistence threadPersistence]
  -[EDPersistence userProfileProvider]
  -[EDPersistence hookRegistry]
  -[EDPersistence setAccountsProvider:]
  -[EDPersistence sendLaterPersistence]
  -[EDPersistence searchableIndexManager]
  -[EDPersistence dataDetectionPersistence]
  -[EDPersistence dealloc]
  -[EDPersistence setRemoteContentURLSession:]
  -[EDPersistence .cxx_destruct]
  -[EDPersistence remoteContentURLSession]
  -[EDPersistence setRemoteContentURLCache:]
  -[EDPersistence remindMeNotificationController]
  -[EDPersistence conversationPersistence]
  -[EDPersistence accountsProvider]
  -[EDPersistence remoteSearchProvider]
  -[EDPersistence scheduleRecurringActivity]
  -[EDPersistence localActionPersistence]
  -[EDPersistence remoteContentURLCache]
  -[EDPersistence attachmentPersistenceManager]
  -[EDPersistence richLinkPersistence]
  -[EDPersistence database]
  -[EDPersistence remoteContentCacheConfiguration]
  -[EDPersistence messagePersistence]
  -[EDPersistence remoteContentPersistence]
  -[EDPersistence mailboxActionPersistence]
  -[EDPersistence vipManager]
  -[EDPersistence bimiManager]
  -[EDPersistence blockedSenderManager]
  -[EDPersistence serverMessagePersistenceFactory]
  -[EDPersistence alarmScheduler]
  -[EDPersistence mailboxPersistence]
  -[EDPersistence senderPersistence]
  -[EDPersistence init]
  -[EDPersistence remoteContentManager]
  -[EDPersistence messageChangeManager]
  -[EDPersistence persistenceStatistics]
  -[EDPersistence gmailLabelPersistence]
  -[EDPersistence listUnsubscribeHandler]
  -[EDPersistence persistenceStateWithStatistics:]
  -[EDPersistence activityPersistence]
  -[EDPersistence setVipManager:]
  -[EDPersistence setListUnsubscribeHandler:]
  -[EDPersistence contentRuleListManager]


EDPersistenceDatabase : NSObject <EDPersistenceDatabaseConnectionPoolDelegate, EDPersistenceDatabaseConnectionDelegate>
 @property  EDProtectedDatabasePersistence *protectedDatabasePersistence
 @property  NSString *basePath
 @property  NSString *databaseName
 @property  NSString *fullPath
 @property  BOOL databaseIsCorrupt
 @property  BOOL enforceDataProtection
 @property  BOOL setupIsComplete
 @property  BOOL isNestedDatabaseCall
 @property  BOOL writersAreWaiting
 @property  EFSQLSchema *schema
 @property  EFSQLSchema *protectedSchema
 @property  EFSQLPropertyMapper *propertyMapper
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDPersistenceDatabase schema]
  -[EDPersistenceDatabase checkOutConnectionIsWriter:]
  -[EDPersistenceDatabase databaseIsCorrupt]
  -[EDPersistenceDatabase .cxx_destruct]
  -[EDPersistenceDatabase basePath]
  -[EDPersistenceDatabase propertyMapper]
  -[EDPersistenceDatabase scheduleRecurringActivity]
  -[EDPersistenceDatabase openConnectionIsWriter:]
  -[EDPersistenceDatabase checkInConnection:]
  -[EDPersistenceDatabase databaseName]
  -[EDPersistenceDatabase initWithBasePath:databaseName:maxConcurrentReaders:schema:protectedSchema:propertyMapper:protectedDatabasePersistence:]
  -[EDPersistenceDatabase closeAllConnections]
  -[EDPersistenceDatabase enforceDataProtection]
  -[EDPersistenceDatabase init]
  -[EDPersistenceDatabase fullPath]
  -[EDPersistenceDatabase reconcileJournalWithCompletionBlock:]
  -[EDPersistenceDatabase fileProtectionForDatabaseType:]
  -[EDPersistenceDatabase urlForDatabasePath:type:]
  -[EDPersistenceDatabase urlForDatabasePath:type:fileProtection:]
  -[EDPersistenceDatabase setSetupIsComplete:]
  -[EDPersistenceDatabase performDatabaseWorkInBlockWithHighPriority:]
  -[EDPersistenceDatabase performReadBlock:]
  -[EDPersistenceDatabase performWriteBlock:]
  -[EDPersistenceDatabase protectedSchema]
  -[EDPersistenceDatabase writersAreWaiting]
  -[EDPersistenceDatabase performDatabaseSetupUsingTransaction:block:]
  -[EDPersistenceDatabase performWithOptions:block:]
  -[EDPersistenceDatabase isNestedDatabaseCall]
  -[EDPersistenceDatabase handleExceptionCreatingConnection:]
  -[EDPersistenceDatabase protectedDatabasePersistence]
  -[EDPersistenceDatabase setupIsComplete]


EDPersistenceDatabaseConnection : NSObject <EFLoggable>
 @property  EFSQLConnection *sqlConnection
 @property  NSString *basePath
 @property  NSString *fullPath
 @property  NSString *protectedDatabasePath
 @property  BOOL isValid
 @property  BOOL protectedDatabaseAttached
 @property  BOOL journalDatabaseAttached
 @property  ^{sqlite3=} sqlDB
 @property  BOOL isWriter
 @property  long long lastInsertedDatabaseID
 @property  long long transactionGeneration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDPersistenceDatabaseConnection log]

  // instance methods
  -[EDPersistenceDatabaseConnection dealloc]
  -[EDPersistenceDatabaseConnection close]
  -[EDPersistenceDatabaseConnection isValid]
  -[EDPersistenceDatabaseConnection .cxx_destruct]
  -[EDPersistenceDatabaseConnection preparedStatementForQueryString:]
  -[EDPersistenceDatabaseConnection open]
  -[EDPersistenceDatabaseConnection tableExists:]
  -[EDPersistenceDatabaseConnection transactionTypeForWriting]
  -[EDPersistenceDatabaseConnection basePath]
  -[EDPersistenceDatabaseConnection isWriter]
  -[EDPersistenceDatabaseConnection handleSQLResult:message:]
  -[EDPersistenceDatabaseConnection configureSQLConnection]
  -[EDPersistenceDatabaseConnection sqlDB]
  -[EDPersistenceDatabaseConnection init]
  -[EDPersistenceDatabaseConnection performWithOptions:transactionError:block:]
  -[EDPersistenceDatabaseConnection fullPath]
  -[EDPersistenceDatabaseConnection transactionGeneration]
  -[EDPersistenceDatabaseConnection handleError:message:]
  -[EDPersistenceDatabaseConnection databaseIsAttached:]
  -[EDPersistenceDatabaseConnection checkForConnectionErrorWithMessage:]
  -[EDPersistenceDatabaseConnection attachProtectedDatabaseWithName:url:error:]
  -[EDPersistenceDatabaseConnection lastInsertedDatabaseID]
  -[EDPersistenceDatabaseConnection columnExists:inTable:type:]
  -[EDPersistenceDatabaseConnection protectedDatabaseAttached]
  -[EDPersistenceDatabaseConnection protectedDatabasePath]
  -[EDPersistenceDatabaseConnection tableExists:inDatabase:]
  -[EDPersistenceDatabaseConnection detachProtectedDatabase]
  -[EDPersistenceDatabaseConnection sqlConnection]
  -[EDPersistenceDatabaseConnection executeDeleteStatement:error:]
  -[EDPersistenceDatabaseConnection executeInsertStatement:error:]
  -[EDPersistenceDatabaseConnection executeSelectStatement:withBlock:error:]
  -[EDPersistenceDatabaseConnection executeStatementString:errorMessage:]
  -[EDPersistenceDatabaseConnection executeUpdateStatement:error:]
  -[EDPersistenceDatabaseConnection initWithBasePath:databaseName:isWriter:delegate:]
  -[EDPersistenceDatabaseConnection executeUpdateStatement:rowsChanged:]
  -[EDPersistenceDatabaseConnection initForInMemoryDatabaseIsWriter:delegate:]
  -[EDPersistenceDatabaseConnection initWithSQLDB:isWriter:delegate:]
  -[EDPersistenceDatabaseConnection executeInsertStatement:rowsChanged:]
  -[EDPersistenceDatabaseConnection executeUpsertStatement:error:]
  -[EDPersistenceDatabaseConnection executeUpsertStatement:rowsChanged:]
  -[EDPersistenceDatabaseConnection executeDeleteStatement:rowsChanged:]
  -[EDPersistenceDatabaseConnection clearLastInsertedDatabaseID]
  -[EDPersistenceDatabaseConnection setIsWriter:]
  -[EDPersistenceDatabaseConnection columnExists:inTable:database:type:]
  -[EDPersistenceDatabaseConnection journalDatabaseAttached]
  -[EDPersistenceDatabaseConnection attachProtectedDatabaseWithName:error:]
  -[EDPersistenceDatabaseConnection attachProtectedDatabaseWithName:]
  -[EDPersistenceDatabaseConnection attachJournalDatabase:withName:error:]
  -[EDPersistenceDatabaseConnection attachJournalDatabase:withName:]
  -[EDPersistenceDatabaseConnection detachJournalDatabase]


EDPersistenceDatabaseConnectionPool : NSObject
 @property  <EDPersistenceDatabaseConnectionPoolDelegate> *delegate
 @property  unsigned long cacheSize
 @property  unsigned long maxConcurrentBackgroundReaders
 @property  unsigned long backgroundReadersWaiting
 @property  unsigned long writersWaiting

  // instance methods
  -[EDPersistenceDatabaseConnectionPool setCacheSize:]
  -[EDPersistenceDatabaseConnectionPool maxConcurrentBackgroundReaders]
  -[EDPersistenceDatabaseConnectionPool setDelegate:]
  -[EDPersistenceDatabaseConnectionPool maxConcurrentReaders]
  -[EDPersistenceDatabaseConnectionPool readerConnection]
  -[EDPersistenceDatabaseConnectionPool delegate]
  -[EDPersistenceDatabaseConnectionPool dealloc]
  -[EDPersistenceDatabaseConnectionPool backgroundReadersWaiting]
  -[EDPersistenceDatabaseConnectionPool .cxx_destruct]
  -[EDPersistenceDatabaseConnectionPool _lockForConnectionType:resource:]
  -[EDPersistenceDatabaseConnectionPool cacheSize]
  -[EDPersistenceDatabaseConnectionPool backgroundReaderConnection]
  -[EDPersistenceDatabaseConnectionPool _unlockForConnectionType:resource:]
  -[EDPersistenceDatabaseConnectionPool _connectionWithType:]
  -[EDPersistenceDatabaseConnectionPool checkInConnection:]
  -[EDPersistenceDatabaseConnectionPool initWithDelegate:maxConcurrentBackgroundReaders:]
  -[EDPersistenceDatabaseConnectionPool writersWaiting]
  -[EDPersistenceDatabaseConnectionPool flush]
  -[EDPersistenceDatabaseConnectionPool init]
  -[EDPersistenceDatabaseConnectionPool writerConnection]


_EDPersistenceDatabaseConnectionWrapper : NSObject
 @property  EFResource *resource
 @property  EDPersistenceDatabaseConnection *connection
 @property  unsigned long generation
 @property  unsigned long type

  // instance methods
  -[_EDPersistenceDatabaseConnectionWrapper generation]
  -[_EDPersistenceDatabaseConnectionWrapper initWithConnection:generation:]
  -[_EDPersistenceDatabaseConnectionWrapper type]
  -[_EDPersistenceDatabaseConnectionWrapper .cxx_destruct]
  -[_EDPersistenceDatabaseConnectionWrapper connection]
  -[_EDPersistenceDatabaseConnectionWrapper setType:]
  -[_EDPersistenceDatabaseConnectionWrapper resource]
  -[_EDPersistenceDatabaseConnectionWrapper setResource:]


EDPersistenceDatabaseGenerationWindow : NSObject
 @property  long long earliestGeneration
 @property  long long latestGeneration

  // instance methods
  -[EDPersistenceDatabaseGenerationWindow init]
  -[EDPersistenceDatabaseGenerationWindow insertGeneration:]
  -[EDPersistenceDatabaseGenerationWindow earliestGeneration]
  -[EDPersistenceDatabaseGenerationWindow latestGeneration]


EDPersistenceDatabaseJournal : NSObject
 @property  EDPersistenceDatabaseJournalManager *journalManager
 @property  unsigned long referenceCount
 @property  NSString *path
 @property  unsigned long number

  // instance methods
  -[EDPersistenceDatabaseJournal number]
  -[EDPersistenceDatabaseJournal checkIn]
  -[EDPersistenceDatabaseJournal path]
  -[EDPersistenceDatabaseJournal .cxx_destruct]
  -[EDPersistenceDatabaseJournal journalManager]
  -[EDPersistenceDatabaseJournal checkOut]
  -[EDPersistenceDatabaseJournal initWithJournalManager:number:]
  -[EDPersistenceDatabaseJournal referenceCount]


EDPersistenceDatabaseJournalManager : NSObject <EFLoggable>
 @property  NSString *journalDirectoryPath
 @property  NSObject<OS_dispatch_queue> *checkExistingQueue
 @property  NSObject<OS_dispatch_queue> *deleteQueue
 @property  EDPersistenceDatabaseJournal *oldestJournal
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDPersistenceDatabaseJournalManager log]

  // instance methods
  -[EDPersistenceDatabaseJournalManager initWithBasePath:]
  -[EDPersistenceDatabaseJournalManager mergedJournal:]
  -[EDPersistenceDatabaseJournalManager deleteQueue]
  -[EDPersistenceDatabaseJournalManager waitForDeletes]
  -[EDPersistenceDatabaseJournalManager journalDirectoryPath]
  -[EDPersistenceDatabaseJournalManager .cxx_destruct]
  -[EDPersistenceDatabaseJournalManager checkExistingQueue]
  -[EDPersistenceDatabaseJournalManager currentJournalCreateIfNeeded:]
  -[EDPersistenceDatabaseJournalManager _getJournalWithBlock:]
  -[EDPersistenceDatabaseJournalManager _journalNoLongerReferenced:]
  -[EDPersistenceDatabaseJournalManager _deleteJournalNumber:]
  -[EDPersistenceDatabaseJournalManager oldestJournal]


EDPersistenceDatabaseSchema : NSObject
  // class methods
  +[EDPersistenceDatabaseSchema schema]
  +[EDPersistenceDatabaseSchema objectPropertyMapperForSchema:protectedSchema:]
  +[EDPersistenceDatabaseSchema propertyMapper]
  +[EDPersistenceDatabaseSchema mailboxesTableName]
  +[EDPersistenceDatabaseSchema protectedSchema]
  +[EDPersistenceDatabaseSchema propertiesTableSchema]
  +[EDPersistenceDatabaseSchema partialMailboxesTableSchema]
  +[EDPersistenceDatabaseSchema additionalSchemaProviders]
  +[EDPersistenceDatabaseSchema _schemaProviders]
  +[EDPersistenceDatabaseSchema test_resetSchema]
  +[EDPersistenceDatabaseSchema _initializeSchemas]
  +[EDPersistenceDatabaseSchema _schemaWithPopulationBlock:]
  +[EDPersistenceDatabaseSchema _protectedSchemaProviders]
  +[EDPersistenceDatabaseSchema propertiesTableName]


EDPersistenceForeignKeyPlaceholder : NSObject
 @property  EFSQLColumnSchema *column
 @property  NSString *tableName
 @property  unsigned long deleteAction
 @property  unsigned long updateAction

  // instance methods
  -[EDPersistenceForeignKeyPlaceholder updateAction]
  -[EDPersistenceForeignKeyPlaceholder tableName]
  -[EDPersistenceForeignKeyPlaceholder initWithColumn:tableName:onDelete:onUpdate:]
  -[EDPersistenceForeignKeyPlaceholder .cxx_destruct]
  -[EDPersistenceForeignKeyPlaceholder column]
  -[EDPersistenceForeignKeyPlaceholder resolveToStringForTableNames:]
  -[EDPersistenceForeignKeyPlaceholder deleteAction]
  -[EDPersistenceForeignKeyPlaceholder resolveWithSchema:]


EDPersistenceAssociationPlaceholder : NSObject
 @property  EFSQLColumnSchema *column
 @property  NSString *tableName

  // instance methods
  -[EDPersistenceAssociationPlaceholder initWithColumn:tableName:]
  -[EDPersistenceAssociationPlaceholder tableName]
  -[EDPersistenceAssociationPlaceholder .cxx_destruct]
  -[EDPersistenceAssociationPlaceholder column]
  -[EDPersistenceAssociationPlaceholder resolveWithSchema:]


EDPersistenceHookRegistry : NSObject <EFLoggable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDPersistenceHookRegistry _proxiedProtocols]
  +[EDPersistenceHookRegistry log]

  // instance methods
  -[EDPersistenceHookRegistry methodSignatureForSelector:]
  -[EDPersistenceHookRegistry dealloc]
  -[EDPersistenceHookRegistry respondsToSelector:]
  -[EDPersistenceHookRegistry forwardInvocation:]
  -[EDPersistenceHookRegistry _forwardStackInvocation:]
  -[EDPersistenceHookRegistry init]
  -[EDPersistenceHookRegistry unregisterAllHookResponders]
  -[EDPersistenceHookRegistry registerDatabaseChangeHookResponder:]
  -[EDPersistenceHookRegistry registerMessageChangeHookResponder:]
  -[EDPersistenceHookRegistry registerProtectedDataReconciliationHookResponder:]
  -[EDPersistenceHookRegistry _initializeMethodSignatures]
  -[EDPersistenceHookRegistry _registerSelector:]
  -[EDPersistenceHookRegistry _registerHookResponder:withMethodDescription:]
  -[EDPersistenceHookRegistry _registerHookResponder:protocol:]
  -[EDPersistenceHookRegistry unregisterHookResponder:]
  -[EDPersistenceHookRegistry _copyRespondersForSelector:]
  -[EDPersistenceHookRegistry _messageRespondersWithInvocation:]
  -[EDPersistenceHookRegistry registerMailboxChangeHookResponder:]
  -[EDPersistenceHookRegistry registerThreadChangeHookResponder:]
  -[EDPersistenceHookRegistry registerAccountChangeHookResponder:]
  -[EDPersistenceHookRegistry registerSearchableIndexHookResponder:]
  -[EDPersistenceHookRegistry registerMessageReadHookResponder:]
  -[EDPersistenceHookRegistry registerMessageDeliveryHookResponder:]
  -[EDPersistenceHookRegistry registerCloudStorageChangeHookResponder:]
  -[EDPersistenceHookRegistry registerActivityHookResponder:]
  -[EDPersistenceHookRegistry registerBrandIndicatorChangeHookResponder:]
  -[EDPersistenceHookRegistry registerSenderBucketChangeHookResponder:]


EDPersonaPersistenceLayoutManager : NSObject <EFLoggable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDPersonaPersistenceLayoutManager log]
  +[EDPersonaPersistenceLayoutManager baseAccountDirectoryPathForPersonaIdentifier:]
  +[EDPersonaPersistenceLayoutManager baseAccountDirectoryForPersonaIdentifier:]
  +[EDPersonaPersistenceLayoutManager macOS_baseAccountDirectoryPathForPersonaIdentifier:]
  +[EDPersonaPersistenceLayoutManager iOS_baseAccountDirectoryPathForPersonaIdentifier:]


EDPETBatchedWrapper : PBCodable <NSCopying>
 @property  BOOL hasQuotaEvent
 @property  EDPETQuotaReachedEvent *quotaEvent
 @property  BOOL hasSubmittedEvent
 @property  EDPETSubmittedEvent *submittedEvent
 @property  BOOL hasRawData
 @property  NSData *rawData

  // instance methods
  -[EDPETBatchedWrapper rawData]
  -[EDPETBatchedWrapper copyTo:]
  -[EDPETBatchedWrapper .cxx_destruct]
  -[EDPETBatchedWrapper mergeFrom:]
  -[EDPETBatchedWrapper dictionaryRepresentation]
  -[EDPETBatchedWrapper copyWithZone:]
  -[EDPETBatchedWrapper readFrom:]
  -[EDPETBatchedWrapper setRawData:]
  -[EDPETBatchedWrapper writeTo:]
  -[EDPETBatchedWrapper isEqual:]
  -[EDPETBatchedWrapper hasQuotaEvent]
  -[EDPETBatchedWrapper hasSubmittedEvent]
  -[EDPETBatchedWrapper hasRawData]
  -[EDPETBatchedWrapper quotaEvent]
  -[EDPETBatchedWrapper setQuotaEvent:]
  -[EDPETBatchedWrapper submittedEvent]
  -[EDPETBatchedWrapper setSubmittedEvent:]


EDPETInteractionEvent : PBCodable <NSCopying>
  // instance methods
  -[EDPETInteractionEvent copyTo:]
  -[EDPETInteractionEvent mergeFrom:]
  -[EDPETInteractionEvent dictionaryRepresentation]
  -[EDPETInteractionEvent copyWithZone:]
  -[EDPETInteractionEvent readFrom:]
  -[EDPETInteractionEvent writeTo:]
  -[EDPETInteractionEvent isEqual:]


EDPETInteractionEventLog : NSObject <EFLoggable, EDPBHasher, EDInteractionEventLog>
 @property  <EMUserProfileProvider> *profileProvider
 @property  CNContactStore *contactStore
 @property  <EMVIPManager> *vipManager
 @property  EFLazyCache *contactIDCache
 @property  NSString *meContactIdentifier
 @property  NSData *rotatingSalt
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  AI sequenceNumber
 @property  NSURL *directory
 @property  NSURL *currentLogFile
 @property  NSFileHandle *logFileHandle
 @property  AB shouldLog
 @property  EFMutableInt64Set *currentLogMessageIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDPETInteractionEventLog enumerateFramesInData:block:]
  +[EDPETInteractionEventLog log]

  // instance methods
  -[EDPETInteractionEventLog persistEvent:date:conversationID:data:]
  -[EDPETInteractionEventLog persistEvent:date:message:mailboxType:]
  -[EDPETInteractionEventLog persistEvent:date:message:mailbox:]
  -[EDPETInteractionEventLog deviceID]
  -[EDPETInteractionEventLog persistEvent:date:message:data:]
  -[EDPETInteractionEventLog persistEvent:dataFromMessage:account:]
  -[EDPETInteractionEventLog persistEvent:dataFromMessage:]
  -[EDPETInteractionEventLog shouldLog]
  -[EDPETInteractionEventLog setShouldLog:]
  -[EDPETInteractionEventLog _writeMessageDataIfNecessary:]
  -[EDPETInteractionEventLog directory]
  -[EDPETInteractionEventLog hashedContactIDForAddress:]
  -[EDPETInteractionEventLog hashedConversationID:]
  -[EDPETInteractionEventLog _messageDataEventForMessage:account:]
  -[EDPETInteractionEventLog _buildLogFileURLInDir:]
  -[EDPETInteractionEventLog workQueue]
  -[EDPETInteractionEventLog hashedSubject:]
  -[EDPETInteractionEventLog hashedMailboxID:]
  -[EDPETInteractionEventLog logFileHandle]
  -[EDPETInteractionEventLog hashedAccountID:]
  -[EDPETInteractionEventLog _rotateLogWithCompressedData:]
  -[EDPETInteractionEventLog _openCurrentLogfile]
  -[EDPETInteractionEventLog _truncatedUNIXTimestampFromDate:]
  -[EDPETInteractionEventLog setSequenceNumber:]
  -[EDPETInteractionEventLog hashedString:]
  -[EDPETInteractionEventLog _scanForMessageIDs:logVersion:]
  -[EDPETInteractionEventLog userID]
  -[EDPETInteractionEventLog .cxx_destruct]
  -[EDPETInteractionEventLog _writeEvent:]
  -[EDPETInteractionEventLog rotatingSalt]
  -[EDPETInteractionEventLog contactIDCache]
  -[EDPETInteractionEventLog setRotatingSalt:]
  -[EDPETInteractionEventLog setCurrentLogMessageIDs:]
  -[EDPETInteractionEventLog _eventForName:date:]
  -[EDPETInteractionEventLog persistentBits]
  -[EDPETInteractionEventLog _truncatedSHA256:]
  -[EDPETInteractionEventLog initWithDirectory:userProfileProvider:contactStore:vipManager:]
  -[EDPETInteractionEventLog currentLogFile]
  -[EDPETInteractionEventLog _writeQuotaReachedEvent]
  -[EDPETInteractionEventLog setMeContactIdentifier:]
  -[EDPETInteractionEventLog waitForPendingWrites]
  -[EDPETInteractionEventLog _writeHeader]
  -[EDPETInteractionEventLog _currentLocaleIdentifier]
  -[EDPETInteractionEventLog _eventNameFromString:]
  -[EDPETInteractionEventLog meContactIdentifier]
  -[EDPETInteractionEventLog _timezoneOffset]
  -[EDPETInteractionEventLog profileProvider]
  -[EDPETInteractionEventLog sequenceNumber]
  -[EDPETInteractionEventLog setCurrentLogFile:]
  -[EDPETInteractionEventLog currentLogMessageIDs]
  -[EDPETInteractionEventLog _estimateStopCount:]
  -[EDPETInteractionEventLog vipManager]
  -[EDPETInteractionEventLog contactStore]
  -[EDPETInteractionEventLog _framedMessage:]
  -[EDPETInteractionEventLog hashedMessageHeadersForMessage:]
  -[EDPETInteractionEventLog _isLogQuotaReached]
  -[EDPETInteractionEventLog _writeMessageDataIfNecessary:account:]
  -[EDPETInteractionEventLog _compressFramedMessagesIntoBatch:]
  -[EDPETInteractionEventLog _openFileForAppending:]
  -[EDPETInteractionEventLog setLogFileHandle:]
  -[EDPETInteractionEventLog _resetIdentifiers]
  -[EDPETInteractionEventLog batchedEventsForSubmission]


EDPETQuotaReachedEvent : PBCodable <EDPETMessageFrameTypeIntrospectable, NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasSequenceNumber
 @property  unsigned int sequenceNumber
 @property  BOOL hasTimezoneOffset
 @property  int timezoneOffset
 @property  BOOL hasDroppedEventsCount
 @property  unsigned long droppedEventsCount

  // instance methods
  -[EDPETQuotaReachedEvent hasSequenceNumber]
  -[EDPETQuotaReachedEvent setHasSequenceNumber:]
  -[EDPETQuotaReachedEvent timezoneOffset]
  -[EDPETQuotaReachedEvent setTimestamp:]
  -[EDPETQuotaReachedEvent copyTo:]
  -[EDPETQuotaReachedEvent messageFrameType]
  -[EDPETQuotaReachedEvent setHasTimezoneOffset:]
  -[EDPETQuotaReachedEvent setSequenceNumber:]
  -[EDPETQuotaReachedEvent hasTimezoneOffset]
  -[EDPETQuotaReachedEvent mergeFrom:]
  -[EDPETQuotaReachedEvent setHasTimestamp:]
  -[EDPETQuotaReachedEvent dictionaryRepresentation]
  -[EDPETQuotaReachedEvent hasTimestamp]
  -[EDPETQuotaReachedEvent setTimezoneOffset:]
  -[EDPETQuotaReachedEvent copyWithZone:]
  -[EDPETQuotaReachedEvent sequenceNumber]
  -[EDPETQuotaReachedEvent timestamp]
  -[EDPETQuotaReachedEvent readFrom:]
  -[EDPETQuotaReachedEvent writeTo:]
  -[EDPETQuotaReachedEvent isEqual:]
  -[EDPETQuotaReachedEvent setDroppedEventsCount:]
  -[EDPETQuotaReachedEvent setHasDroppedEventsCount:]
  -[EDPETQuotaReachedEvent hasDroppedEventsCount]
  -[EDPETQuotaReachedEvent droppedEventsCount]


EDPETSubmittedEvent : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasTimezoneOffset
 @property  int timezoneOffset

  // instance methods
  -[EDPETSubmittedEvent timezoneOffset]
  -[EDPETSubmittedEvent setTimestamp:]
  -[EDPETSubmittedEvent copyTo:]
  -[EDPETSubmittedEvent setHasTimezoneOffset:]
  -[EDPETSubmittedEvent hasTimezoneOffset]
  -[EDPETSubmittedEvent mergeFrom:]
  -[EDPETSubmittedEvent setHasTimestamp:]
  -[EDPETSubmittedEvent dictionaryRepresentation]
  -[EDPETSubmittedEvent hasTimestamp]
  -[EDPETSubmittedEvent setTimezoneOffset:]
  -[EDPETSubmittedEvent copyWithZone:]
  -[EDPETSubmittedEvent timestamp]
  -[EDPETSubmittedEvent readFrom:]
  -[EDPETSubmittedEvent writeTo:]
  -[EDPETSubmittedEvent isEqual:]


EDPopulateSendersTableMigrationStep : NSObject
  // class methods
  +[EDPopulateSendersTableMigrationStep _combineDictionary:withDictionary:]
  +[EDPopulateSendersTableMigrationStep runWithConnection:sentMailboxURLs:contactStore:]
  +[EDPopulateSendersTableMigrationStep _allSenderAddressIDsWithConnection:sentMailboxURLStrings:]
  +[EDPopulateSendersTableMigrationStep _addressesForSenderIDs:withConnection:]
  +[EDPopulateSendersTableMigrationStep _senderIDsGroupedByContactsForEmailAddressesByContact:withConnection:]
  +[EDPopulateSendersTableMigrationStep _insertSendersGroupedByContact:withConnection:]
  +[EDPopulateSendersTableMigrationStep _insertGroupedSendersWithoutContact:withConnection:]
  +[EDPopulateSendersTableMigrationStep _clearSendersTableWithConnection:]
  +[EDPopulateSendersTableMigrationStep _clearSendersAddressesTableWithConnection:]
  +[EDPopulateSendersTableMigrationStep _insertSenderWithAddresses:contact:connection:error:]
  +[EDPopulateSendersTableMigrationStep _senderIDsGroupedByContactsForSenderAddressesToIDs:withContactStore:unmatchedEmailAddresses:otherEmailAddressesByContact:]
  +[EDPopulateSendersTableMigrationStep _senderIDsGroupedBySimpleAddressForEmailAddresses:senderIDsByEmailAddress:]


EDPrecomputedThreadQueryHandler : EDMessageRepositoryQueryHandler <EDMessageChangeHookResponder, EDRemindMeNotificationControllerObserver, EDThreadChangeHookResponder, EFLoggable, EMCollectionItemIDStateCapturerDelegate>
 @property  <EFScheduler> *changeScheduler
 @property  <EFScheduler> *backgroundWorkScheduler
 @property  EFCancelationToken *cancelationToken
 @property  NSMutableDictionary *pendingChanges
 @property  NSMutableArray *pendingPositionChanges
 @property  NSMutableSet *unreportedJournaledObjectIDs
 @property  NSMutableDictionary *reportedJournaledObjectIDs
 @property  NSMutableDictionary *oldestThreadObjectIDsByMailbox
 @property  <EFCancelable> *updateOldestThreadsCancelationToken
 @property  EDUpdateThrottler *updateThrottler
 @property  EDThreadReloadSummaryHelper *reloadSummaryHelper
 @property  EMMailboxScope *mailboxScope
 @property  EMCollectionItemIDStateCapturer *stateCapturer
 @property  BOOL updateDisplayDate
 @property  EMThreadScope *threadScope
 @property  EDThreadPersistence *threadPersistence
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDPrecomputedThreadQueryHandler log]

  // instance methods
  -[EDPrecomputedThreadQueryHandler test_tearDown]
  -[EDPrecomputedThreadQueryHandler pendingChanges]
  -[EDPrecomputedThreadQueryHandler setPendingChanges:]
  -[EDPrecomputedThreadQueryHandler persistenceDidChangeGlobalMessageID:orConversationID:message:generationWindow:]
  -[EDPrecomputedThreadQueryHandler threadPersistence]
  -[EDPrecomputedThreadQueryHandler .cxx_destruct]
  -[EDPrecomputedThreadQueryHandler mailboxScope]
  -[EDPrecomputedThreadQueryHandler backgroundWorkScheduler]
  -[EDPrecomputedThreadQueryHandler labelForStateCapture]
  -[EDPrecomputedThreadQueryHandler start]
  -[EDPrecomputedThreadQueryHandler threadScope]
  -[EDPrecomputedThreadQueryHandler cancel]
  -[EDPrecomputedThreadQueryHandler cancelationToken]
  -[EDPrecomputedThreadQueryHandler setCancelationToken:]
  -[EDPrecomputedThreadQueryHandler persistenceDidUpdateProperties:message:generationWindow:]
  -[EDPrecomputedThreadQueryHandler persistenceDidFinishThreadUpdates]
  -[EDPrecomputedThreadQueryHandler persistenceIsReconcilingJournaledThreadsWithObjectIDs:generationWindow:]
  -[EDPrecomputedThreadQueryHandler persistenceDidChangeConversationNotificationLevel:conversationID:generationWindow:]
  -[EDPrecomputedThreadQueryHandler updateDisplayDate]
  -[EDPrecomputedThreadQueryHandler itemIDsForStateCaptureWithErrorString:]
  -[EDPrecomputedThreadQueryHandler stateCapturer]
  -[EDPrecomputedThreadQueryHandler threadForObjectID:error:]
  -[EDPrecomputedThreadQueryHandler updateThrottler]
  -[EDPrecomputedThreadQueryHandler reloadSummaryHelper]
  -[EDPrecomputedThreadQueryHandler controller:messageTimerFired:]
  -[EDPrecomputedThreadQueryHandler _updateDisplayDateForMessagesIfNeeded]
  -[EDPrecomputedThreadQueryHandler _getInitialResults]
  -[EDPrecomputedThreadQueryHandler persistenceIsAddingThreadWithObjectID:journaled:generationWindow:]
  -[EDPrecomputedThreadQueryHandler persistenceIsMarkingThreadAsJournaledWithObjectID:generationWindow:]
  -[EDPrecomputedThreadQueryHandler persistenceIsChangingThreadWithObjectID:changedKeyPaths:generationWindow:]
  -[EDPrecomputedThreadQueryHandler persistenceIsDeletingThreadWithObjectID:generationWindow:]
  -[EDPrecomputedThreadQueryHandler initWithQuery:threadScope:messagePersistence:threadPersistence:hookRegistry:remindMeNotificationController:observer:observationIdentifier:observationResumer:]
  -[EDPrecomputedThreadQueryHandler _onScheduler:performCancelableBlock:]
  -[EDPrecomputedThreadQueryHandler _addChangeToPendingChanges:forThreadObjectID:]
  -[EDPrecomputedThreadQueryHandler _isAddingOrDeletingObjectID:]
  -[EDPrecomputedThreadQueryHandler _flushUpdatesWithReason:]
  -[EDPrecomputedThreadQueryHandler _persistenceIsAddingThreadWithObjectID:]
  -[EDPrecomputedThreadQueryHandler _persistenceIsChangingThreadWithObjectID:changedKeyPaths:]
  -[EDPrecomputedThreadQueryHandler _messageForPersistedMessage:]
  -[EDPrecomputedThreadQueryHandler _oldestThreadsNeedUpdate]
  -[EDPrecomputedThreadQueryHandler changeScheduler]
  -[EDPrecomputedThreadQueryHandler pendingPositionChanges]
  -[EDPrecomputedThreadQueryHandler setPendingPositionChanges:]
  -[EDPrecomputedThreadQueryHandler unreportedJournaledObjectIDs]
  -[EDPrecomputedThreadQueryHandler setUnreportedJournaledObjectIDs:]
  -[EDPrecomputedThreadQueryHandler reportedJournaledObjectIDs]
  -[EDPrecomputedThreadQueryHandler setReportedJournaledObjectIDs:]
  -[EDPrecomputedThreadQueryHandler oldestThreadObjectIDsByMailbox]
  -[EDPrecomputedThreadQueryHandler setOldestThreadObjectIDsByMailbox:]
  -[EDPrecomputedThreadQueryHandler updateOldestThreadsCancelationToken]
  -[EDPrecomputedThreadQueryHandler setUpdateOldestThreadsCancelationToken:]


_EDThreadPositionChangeSet : NSObject <NSCopying>
 @property  NSMutableDictionary *objectIDsToAddByBeforeObjectID
 @property  NSMutableDictionary *objectIDsToMoveByBeforeObjectID
 @property  NSMutableSet *objectIDsToDelete

  // instance methods
  -[_EDThreadPositionChangeSet .cxx_destruct]
  -[_EDThreadPositionChangeSet copyWithZone:]
  -[_EDThreadPositionChangeSet init]
  -[_EDThreadPositionChangeSet addObjectIDToAdd:before:]
  -[_EDThreadPositionChangeSet addObjectIDToMove:before:]
  -[_EDThreadPositionChangeSet addObjectIDToDelete:]
  -[_EDThreadPositionChangeSet isAddingObjectID:]
  -[_EDThreadPositionChangeSet _isMovingObjectID:]
  -[_EDThreadPositionChangeSet isDeletingObjectID:]
  -[_EDThreadPositionChangeSet objectIDsToAddByBeforeObjectID]
  -[_EDThreadPositionChangeSet setObjectIDsToAddByBeforeObjectID:]
  -[_EDThreadPositionChangeSet objectIDsToMoveByBeforeObjectID]
  -[_EDThreadPositionChangeSet setObjectIDsToMoveByBeforeObjectID:]
  -[_EDThreadPositionChangeSet objectIDsToDelete]
  -[_EDThreadPositionChangeSet setObjectIDsToDelete:]


EDProtectedDatabasePersistence : NSObject <EFLoggable, EFSignpostable>
 @property  EDPersistenceDatabaseJournalManager *journalManager
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  NSObject<OS_dispatch_queue> *reconciliationQueue
 @property  BOOL isInitialized
 @property  BOOL isReconciling
 @property  EFLocked *reconciliationMergeHandlers
 @property  BOOL supportsJournaling
 @property  BOOL protectedDataAvailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long signpostID

  // class methods
  +[EDProtectedDatabasePersistence signpostLog]
  +[EDProtectedDatabasePersistence log]
  +[EDProtectedDatabasePersistence protectedDatabaseName]
  +[EDProtectedDatabasePersistence journalDatabaseName]
  +[EDProtectedDatabasePersistence _isRecoverableError:]
  +[EDProtectedDatabasePersistence _resultForConnection:success:error:errorMessage:]

  // instance methods
  -[EDProtectedDatabasePersistence isInitialized]
  -[EDProtectedDatabasePersistence signpostID]
  -[EDProtectedDatabasePersistence hookRegistry]
  -[EDProtectedDatabasePersistence setDatabase:]
  -[EDProtectedDatabasePersistence .cxx_destruct]
  -[EDProtectedDatabasePersistence supportsJournaling]
  -[EDProtectedDatabasePersistence scheduleRecurringActivity]
  -[EDProtectedDatabasePersistence database]
  -[EDProtectedDatabasePersistence protectedDataAvailable]
  -[EDProtectedDatabasePersistence journalManager]
  -[EDProtectedDatabasePersistence addAdditionalCriteriaToCleanupActivity:]
  -[EDProtectedDatabasePersistence finishJournalReconciliation:]
  -[EDProtectedDatabasePersistence initWithBasePath:hookRegistry:]
  -[EDProtectedDatabasePersistence setIsInitialized:]
  -[EDProtectedDatabasePersistence initWithJournalManager:hookRegistry:]
  -[EDProtectedDatabasePersistence attachProtectedOrJournalDatabaseToConnectionIfNecessary:withSchema:]
  -[EDProtectedDatabasePersistence detachProtectedOrJournalDatabaseFromConnectionIfNecessary:]
  -[EDProtectedDatabasePersistence _ensureJournalIsAttachedToConnection:withSchema:]
  -[EDProtectedDatabasePersistence _ensureProtectedDatabaseOrJournalIsAttachedToConnection:withSchema:]
  -[EDProtectedDatabasePersistence _attachProtectedDatabaseToConnection:withSchema:error:]
  -[EDProtectedDatabasePersistence _detachProtectedDatabaseFromConnection:]
  -[EDProtectedDatabasePersistence _attachJournalDatabaseToConnection:withSchema:]
  -[EDProtectedDatabasePersistence _detachJournalDatabaseFromConnection:]
  -[EDProtectedDatabasePersistence _initializeDatabase:withConnection:schema:error:]
  -[EDProtectedDatabasePersistence _upgradeJournalWithConnection:schema:error:]
  -[EDProtectedDatabasePersistence _updateSqliteSequenceForDatabase:schema:withConnection:error:]
  -[EDProtectedDatabasePersistence _maxRowIDForColumn:withConnection:]
  -[EDProtectedDatabasePersistence _performOnDemandReconciliationForConnection:withSchema:]
  -[EDProtectedDatabasePersistence reconcileJournalsWithSchema:completionBlock:]
  -[EDProtectedDatabasePersistence _reconcileJournalsWithSchema:connection:]
  -[EDProtectedDatabasePersistence _runReconciliationWithSchema:connection:]
  -[EDProtectedDatabasePersistence _mergeSchema:connection:journaledRows:newRows:]
  -[EDProtectedDatabasePersistence _mergeTable:connection:journaledRows:newRows:]
  -[EDProtectedDatabasePersistence _deleteRowIDs:fromJournal:withConnection:]
  -[EDProtectedDatabasePersistence _databaseIDsToDeleteForTable:]
  -[EDProtectedDatabasePersistence _deleteDatabaseIDs:fromTable:]
  -[EDProtectedDatabasePersistence _removeExistingDatabaseIDs:withColumn:connection:]
  -[EDProtectedDatabasePersistence _isJournalMalformedForSchema:connection:]
  -[EDProtectedDatabasePersistence _executeUpdateStatement:onConnection:errorMessage:]
  -[EDProtectedDatabasePersistence _executeStatementString:onConnection:errorMessage:]
  -[EDProtectedDatabasePersistence _allReferencingColumnsForTable:]
  -[EDProtectedDatabasePersistence registerMergeHandler:forTable:]
  -[EDProtectedDatabasePersistence reconciliationQueue]
  -[EDProtectedDatabasePersistence isReconciling]
  -[EDProtectedDatabasePersistence setIsReconciling:]
  -[EDProtectedDatabasePersistence reconciliationMergeHandlers]


EDQueryCreator : NSObject
 @property  NSString *queryType

  // instance methods
  -[EDQueryCreator queryType]
  -[EDQueryCreator .cxx_destruct]
  -[EDQueryCreator queryWithStartDate:endDate:]
  -[EDQueryCreator initWithQueryType:]


EDReadLaterCloudStorageChangeElement : NSObject
 @property  ECAngleBracketIDHash *messageID
 @property  NSDate *readLaterDate
 @property  NSDate *displayDate

  // instance methods
  -[EDReadLaterCloudStorageChangeElement .cxx_destruct]
  -[EDReadLaterCloudStorageChangeElement displayDate]
  -[EDReadLaterCloudStorageChangeElement messageID]
  -[EDReadLaterCloudStorageChangeElement readLaterDate]
  -[EDReadLaterCloudStorageChangeElement initWithMessageID:readLaterDate:displayDate:]


EDReadLaterCloudStorage : NSObject <EMUbiquitouslyPersistedDictionaryDelegate, EDMessageChangeHookResponder, EDReadLaterCloudStorageDateProvider>
 @property  EDMessagePersistence *messagePersistence
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDReadLaterCloudStorage hookRegistry]
  -[EDReadLaterCloudStorage _messageHashForKey:]
  -[EDReadLaterCloudStorage removeEntryForMessage:]
  -[EDReadLaterCloudStorage .cxx_destruct]
  -[EDReadLaterCloudStorage updateDisplayDateForMessage:displayDate:]
  -[EDReadLaterCloudStorage persistedDictionaryDidChangeRemotelyWithChangedItems:deletedItems:]
  -[EDReadLaterCloudStorage persistenceDidUpdateDisplayDateForMessages:changeIsRemote:generation:]
  -[EDReadLaterCloudStorage messagePersistence]
  -[EDReadLaterCloudStorage addEntryForMessage:date:]
  -[EDReadLaterCloudStorage cloudStorageReadLaterDateForMessage:]
  -[EDReadLaterCloudStorage persistenceDidChangeReadLaterDate:messages:changeIsRemote:generationWindow:]
  -[EDReadLaterCloudStorage initWithHookRegistry:]
  -[EDReadLaterCloudStorage initWithMutableDictionary:hookRegistry:]
  -[EDReadLaterCloudStorage _keyFormessage:]


EDReadLaterPersistence : NSObject <EDPersistenceDatabaseSchemaProvider, EDReadLaterProvider, EDReadLaterCloudStorageDateProvider>
 @property  EDPersistenceDatabase *database
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  EDReadLaterCloudStorage *cloudStorage
 @property  BOOL hasReadLaterMessages

  // class methods
  +[EDReadLaterPersistence tablesAndForeignKeysToResolve:associationsToResolve:]

  // instance methods
  -[EDReadLaterPersistence initWithDatabase:hookRegistry:]
  -[EDReadLaterPersistence hookRegistry]
  -[EDReadLaterPersistence setDatabase:]
  -[EDReadLaterPersistence .cxx_destruct]
  -[EDReadLaterPersistence scheduleRecurringActivity]
  -[EDReadLaterPersistence database]
  -[EDReadLaterPersistence cloudStorage]
  -[EDReadLaterPersistence cloudStorageReadLaterDateForMessage:]
  -[EDReadLaterPersistence setCloudStorage:]
  -[EDReadLaterPersistence setHookRegistry:]
  -[EDReadLaterPersistence hasReadLaterMessages]
  -[EDReadLaterPersistence persistReadLaterForMessage:date:]
  -[EDReadLaterPersistence removeReadLaterForMessage:]
  -[EDReadLaterPersistence _persistReadLater:date:]
  -[EDReadLaterPersistence _removeReadLater:]
  -[EDReadLaterPersistence _resetDisplayDateForMessage:connection:]


DefaultEDRemindMeNotificationControllerAlarmDateProvider : NSObject <EDRemindMeNotificationControllerAlarmDateProvider>
 @property  NSDate *nextDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DefaultEDRemindMeNotificationControllerAlarmDateProvider nextDate]
  -[DefaultEDRemindMeNotificationControllerAlarmDateProvider setNextDate:]


EDRemindMeNotificationController : NSObject <EFLoggable, EDRemindMeNotificationControllerEventDelegate, EDMessageChangeHookResponder>
 @property  NSHashTable *observers
 @property  <EDRemindMeNotificationControllerEventDelegate> *eventDelegate
 @property  EFXPCAlarm *xpcAlarm
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDRemindMeNotificationController log]
  +[EDRemindMeNotificationController localizedRemindMeNotificationTitle]

  // instance methods
  -[EDRemindMeNotificationController test_tearDown]
  -[EDRemindMeNotificationController persistenceDidDeleteMessages:generationWindow:]
  -[EDRemindMeNotificationController initWithHookRegistry:messagePersistence:alarmScheduler:]
  -[EDRemindMeNotificationController controller:scheduleAlarmForMessage:date:]
  -[EDRemindMeNotificationController addObserver:]
  -[EDRemindMeNotificationController _notify:]
  -[EDRemindMeNotificationController .cxx_destruct]
  -[EDRemindMeNotificationController initWithHookRegistry:messagePersistence:alarmDateProvider:eventDelegate:alarmScheduler:]
  -[EDRemindMeNotificationController _updateAlarm]
  -[EDRemindMeNotificationController eventDelegate]
  -[EDRemindMeNotificationController xpcAlarm]
  -[EDRemindMeNotificationController _alarmFired]
  -[EDRemindMeNotificationController performDelayedTasks]
  -[EDRemindMeNotificationController test_waitForUpdates]
  -[EDRemindMeNotificationController persistenceDidChangeReadLaterDate:messages:changeIsRemote:generationWindow:]
  -[EDRemindMeNotificationController _fetchMessagesToNotifyWithStartDate:endDate:]
  -[EDRemindMeNotificationController removeObserver:]
  -[EDRemindMeNotificationController observers]
  -[EDRemindMeNotificationController _updateAlarmUpdatedMessages:readLaterDate:]
  -[EDRemindMeNotificationController resetRemindMeAlarmIfNeeded]


EDRemoteClient : NSObject <EFLoggable, EMDaemonInterfaceXPC, EDReconciliationQueryProvider>
 @property  NSXPCConnection *clientConnection
 @property  EDDaemonInterfaceFactory *daemonInterfaceFactory
 @property  <EDServerRemoteClientsProvider> *serverRemoteClientsProvider
 @property  EDAccountRepository *accountRepository
 @property  EDClientState *clientState
 @property  EDFetchController *fetchController
 @property  EDMailboxRepository *mailboxRepository
 @property  EDMessageRepository *messageRepository
 @property  EDOutgoingMessageRepository *outgoingMessageRepository
 @property  EDSenderRepository *senderRepository
 @property  EDSearchableIndex *searchableIndex
 @property  EDInteractionLogger *interactionLogger
 @property  EDActivityRegistry *activityRegistry
 @property  <EMVIPManagerInterface> *vipManagerInterface
 @property  EDClientResumer *clientResumer
 @property  EDDiagnosticInfoGatherer *diagnosticInfoGatherer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDRemoteClient log]
  +[EDRemoteClient exportedInterface]

  // instance methods
  -[EDRemoteClient test_tearDown]
  -[EDRemoteClient clientConnection]
  -[EDRemoteClient clientState]
  -[EDRemoteClient dealloc]
  -[EDRemoteClient .cxx_destruct]
  -[EDRemoteClient daemonInterfaceFactory]
  -[EDRemoteClient messageReconciliationQueries]
  -[EDRemoteClient interactionLogger]
  -[EDRemoteClient threadReconciliationQueries]
  -[EDRemoteClient searchableIndex]
  -[EDRemoteClient messageRepository]
  -[EDRemoteClient getMessageRepositoryInterface:]
  -[EDRemoteClient getOutgoingMessageRepositoryInterface:]
  -[EDRemoteClient getAccountRepositoryInterface:]
  -[EDRemoteClient getSenderRepositoryInterface:]
  -[EDRemoteClient getFetchControllerInterface:]
  -[EDRemoteClient getMailboxRepositoryInterface:]
  -[EDRemoteClient getClientStateInterface:]
  -[EDRemoteClient getSearchableIndexInterface:]
  -[EDRemoteClient getInteractionLoggerInterface:]
  -[EDRemoteClient getVIPManagerInterface:]
  -[EDRemoteClient getActivityRegistryInterface:]
  -[EDRemoteClient getDiagnosticInfoGathererInterface:]
  -[EDRemoteClient launchForEarlyRecovery:]
  -[EDRemoteClient setAllowsBackgroundResume:]
  -[EDRemoteClient outgoingMessageRepository]
  -[EDRemoteClient mailboxRepository]
  -[EDRemoteClient accountRepository]
  -[EDRemoteClient senderRepository]
  -[EDRemoteClient fetchController]
  -[EDRemoteClient activityRegistry]
  -[EDRemoteClient diagnosticInfoGatherer]
  -[EDRemoteClient initWithConnection:daemonInterfaceFactory:serverRemoteClientsProvider:]
  -[EDRemoteClient vipManagerInterface]
  -[EDRemoteClient serverRemoteClientsProvider]
  -[EDRemoteClient clientResumer]


EDRemoteClientResumer : NSObject <EDResumable>
 @property  EDRemoteClient *remoteClient
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDRemoteClientResumer .cxx_destruct]
  -[EDRemoteClientResumer resumeForUpdates]
  -[EDRemoteClientResumer initWithRemoteClient:]
  -[EDRemoteClientResumer remoteClient]
  -[EDRemoteClientResumer setRemoteClient:]


EDRemoteContentCacheConfiguration : NSObject
 @property  NSURL *cacheURL
 @property  unsigned long diskCapacity

  // instance methods
  -[EDRemoteContentCacheConfiguration diskCapacity]
  -[EDRemoteContentCacheConfiguration cacheURL]
  -[EDRemoteContentCacheConfiguration .cxx_destruct]
  -[EDRemoteContentCacheConfiguration initWithBaseURL:diskCapacity:]
  -[EDRemoteContentCacheConfiguration _cacheURLWithBaseURL:]


EDRemoteContentManager : NSObject
 @property  EDRemoteContentPersistence *remoteContentPersistence
 @property  EMRemoteContentURLSession *urlSession
 @property  <EFScheduler> *backgroundWorkScheduler
 @property  <EFScheduler> *unconditionalRequestScheduler
 @property  NSLock *requestLock
 @property  unsigned long requestedSinceLastPrune
 @property  double minimumTimeout
 @property  double maximumTimeout
 @property  NSDate *timeoutLastUpdate
 @property  double requestInterval
 @property  unsigned long batchSize
 @property  NSDate *schedulingLastUpdate
 @property  <EDRemoteContentManagerTestDelegate> *testDelegate
 @property  @? requestSchedulerBlock
 @property  unsigned long pruneFrequency

  // instance methods
  -[EDRemoteContentManager test_tearDown]
  -[EDRemoteContentManager requestedSinceLastPrune]
  -[EDRemoteContentManager urlSession]
  -[EDRemoteContentManager setBatchSize:]
  -[EDRemoteContentManager setTimeoutLastUpdate:]
  -[EDRemoteContentManager _scheduleRequestForLinks:unconditionally:withDelay:completionHandler:]
  -[EDRemoteContentManager setMinimumTimeout:]
  -[EDRemoteContentManager _scheduleBackgroundRequests]
  -[EDRemoteContentManager batchSize]
  -[EDRemoteContentManager initWithRemoteContentPersistence:contentRuleListManager:urlSession:]
  -[EDRemoteContentManager setPruneFrequency:]
  -[EDRemoteContentManager addRemoteContentLinks:]
  -[EDRemoteContentManager setRequestInterval:]
  -[EDRemoteContentManager setMaximumTimeout:]
  -[EDRemoteContentManager _addRemoteContentLinks:andVerify:WithParsedLinks:defaultCharsetName:]
  -[EDRemoteContentManager .cxx_destruct]
  -[EDRemoteContentManager _requestRemoteLinksInBackground:unconditionally:hasMoreLinks:deferBlock:]
  -[EDRemoteContentManager _requestSchedulerWithInterval:]
  -[EDRemoteContentManager testDelegate]
  -[EDRemoteContentManager _issueAndWaitForBatch:deferBlock:successful:failed:canceled:deferred:]
  -[EDRemoteContentManager shouldAddRemoteContentLinksForMessage:logMessage:]
  -[EDRemoteContentManager pruneFrequency]
  -[EDRemoteContentManager _updateTimeoutSettingDefaultIfNeeded:]
  -[EDRemoteContentManager setTestDelegate:]
  -[EDRemoteContentManager unconditionalRequestScheduler]
  -[EDRemoteContentManager backgroundWorkScheduler]
  -[EDRemoteContentManager setRequestSchedulerBlock:]
  -[EDRemoteContentManager _performRequests:unconditionally:withDeferBlock:completedCount:]
  -[EDRemoteContentManager shouldVerifyRemoteLinks]
  -[EDRemoteContentManager maximumTimeout]
  -[EDRemoteContentManager scheduleRecurringActivity]
  -[EDRemoteContentManager addRemoteContentLinks:andVerifyWithParsedLinks:defaultCharsetName:]
  -[EDRemoteContentManager timeoutLastUpdate]
  -[EDRemoteContentManager setSchedulingLastUpdate:]
  -[EDRemoteContentManager _getTimeout]
  -[EDRemoteContentManager requestInterval]
  -[EDRemoteContentManager remoteContentPersistence]
  -[EDRemoteContentManager requestLock]
  -[EDRemoteContentManager requestSchedulerBlock]
  -[EDRemoteContentManager noteViewOfRemoteContentLinks:]
  -[EDRemoteContentManager setRequestedSinceLastPrune:]
  -[EDRemoteContentManager minimumTimeout]
  -[EDRemoteContentManager schedulingLastUpdate]
  -[EDRemoteContentManager shouldAddRemoteContentLinksForMessageWithDateReceived:]
  -[EDRemoteContentManager addRemoteContentLinks:requiredParsing:]
  -[EDRemoteContentManager _viewDurationsFromBiome]
  -[EDRemoteContentManager _updateScheduling]


EDRemoteContentPersistence : NSObject <EFContentProtectionObserver, EDPersistenceDatabaseSchemaProvider, EDPersistenceDatabaseProtectedSchemaProvider>
 @property  EDPersistenceDatabase *database
 @property  NSObject<OS_dispatch_queue> *contentProtectionQueue
 @property  BOOL useAdditionalTable
 @property  NSBackgroundActivityScheduler *analyticsScheduler
 @property  unsigned long maximumRemoteContentLinks
 @property  unsigned long pruneThreshold
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDRemoteContentPersistence protectedTablesAndForeignKeysToResolve:]
  +[EDRemoteContentPersistence tablesAndForeignKeysToResolve:associationsToResolve:]
  +[EDRemoteContentPersistence _remoteContentLinksTableSchemaWithName:]

  // instance methods
  -[EDRemoteContentPersistence test_tearDown]
  -[EDRemoteContentPersistence _protectedRowCount]
  -[EDRemoteContentPersistence maximumRemoteContentLinks]
  -[EDRemoteContentPersistence addRemoteContentLinks:newLinks:]
  -[EDRemoteContentPersistence remoteContentLinksBelowCount:limit:]
  -[EDRemoteContentPersistence _addRemoteContentLinks:withDate:toTable:withConnection:newLinks:]
  -[EDRemoteContentPersistence setPruneThreshold:]
  -[EDRemoteContentPersistence analyticsScheduler]
  -[EDRemoteContentPersistence _rowCountForTable:]
  -[EDRemoteContentPersistence dealloc]
  -[EDRemoteContentPersistence contentProtectionStateChanged:previousState:]
  -[EDRemoteContentPersistence .cxx_destruct]
  -[EDRemoteContentPersistence _initializeProtectedRowCount]
  -[EDRemoteContentPersistence _decrementCurrentRowCountBy:]
  -[EDRemoteContentPersistence initWithDatabase:useAdditionalTable:]
  -[EDRemoteContentPersistence _currentRowCount]
  -[EDRemoteContentPersistence _decrementProtectedRowCountBy:]
  -[EDRemoteContentPersistence countOfLinksLastSeenSince:]
  -[EDRemoteContentPersistence _incrementProtectedRowCountBy:]
  -[EDRemoteContentPersistence database]
  -[EDRemoteContentPersistence useAdditionalTable]
  -[EDRemoteContentPersistence _incrementCurrentRowCountBy:]
  -[EDRemoteContentPersistence _refillFromAdditionalTable]
  -[EDRemoteContentPersistence countOfUnrequestedLinks]
  -[EDRemoteContentPersistence _initializeCurrentRowCount]
  -[EDRemoteContentPersistence updateRequestCountForRemoteContentLinks:updateLastSeen:]
  -[EDRemoteContentPersistence contentProtectionQueue]
  -[EDRemoteContentPersistence pruneAllRemoteContentLinksWithMinimumCount:]
  -[EDRemoteContentPersistence setMaximumRemoteContentLinks:]
  -[EDRemoteContentPersistence getRemoteContentURLInfoOrderedBy:inReverseOrder:limit:error:]
  -[EDRemoteContentPersistence pruneThreshold]
  -[EDRemoteContentPersistence _getRemoteContentURLInfoForTable:orderedBy:inReverseOrder:limit:connection:error:]


EDRemoveUnusedSchemaTableUpgradeStep : NSObject <EFLoggable, EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDRemoveUnusedSchemaTableUpgradeStep log]
  +[EDRemoveUnusedSchemaTableUpgradeStep runWithConnection:]
  +[EDRemoveUnusedSchemaTableUpgradeStep _recreateMessagesIndices:]
  +[EDRemoveUnusedSchemaTableUpgradeStep _createTempMessagesTable:]
  +[EDRemoveUnusedSchemaTableUpgradeStep _copyMessagesData:]
  +[EDRemoveUnusedSchemaTableUpgradeStep _swapMessagesTables:]
  +[EDRemoveUnusedSchemaTableUpgradeStep _recreateThreadsTable:]
  +[EDRemoveUnusedSchemaTableUpgradeStep _recreateThreadsIndices:]
  +[EDRemoveUnusedSchemaTableUpgradeStep _dropTable:connection:]
  +[EDRemoveUnusedSchemaTableUpgradeStep _truncateTable:connection:]
  +[EDRemoveUnusedSchemaTableUpgradeStep _dropThreadCategoriesIndex:]


EDRenameThreadsTableUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDRenameThreadsTableUpgradeStep runWithConnection:]


EDRichLinkData : NSObject
 @property  NSNumber *persistentID
 @property  NSString *title
 @property  NSURL *url
 @property  NSData *data

  // instance methods
  -[EDRichLinkData .cxx_destruct]
  -[EDRichLinkData title]
  -[EDRichLinkData url]
  -[EDRichLinkData data]
  -[EDRichLinkData persistentID]
  -[EDRichLinkData initWithPersistentID:title:url:data:]
  -[EDRichLinkData initWithTitle:url:data:]


EDRichLinkPersistence : NSObject <EDPersistenceDatabaseSchemaProvider>
 @property  EDPersistenceDatabase *database

  // class methods
  +[EDRichLinkPersistence tablesAndForeignKeysToResolve:associationsToResolve:]
  +[EDRichLinkPersistence richLinksTableSchema]
  +[EDRichLinkPersistence messagesRichLinksTableSchema]
  +[EDRichLinkPersistence richLinksTableName]
  +[EDRichLinkPersistence messageRichLinksTableName]

  // instance methods
  -[EDRichLinkPersistence initWithDatabase:]
  -[EDRichLinkPersistence setDatabase:]
  -[EDRichLinkPersistence .cxx_destruct]
  -[EDRichLinkPersistence database]
  -[EDRichLinkPersistence saveRichLinkData:globalMessageID:basePath:]
  -[EDRichLinkPersistence saveRichLinkData:url:title:globalMessageID:basePath:]
  -[EDRichLinkPersistence richLinkDataForPersistentID:basePath:]
  -[EDRichLinkPersistence datasForPersistentIDs:basePath:]
  -[EDRichLinkPersistence richLinkPersistentIDsForGlobalMessageID:]
  -[EDRichLinkPersistence _hashForRichLinkData:]
  -[EDRichLinkPersistence _richLinkDirectoryURLWithBasePath:]
  -[EDRichLinkPersistence _richLinkFileURLWithID:basePath:]
  -[EDRichLinkPersistence richLinkFileURLWithID:basePath:]
  -[EDRichLinkPersistence richLinkMetadataDataForPersistentID:basePath:]
  -[EDRichLinkPersistence verifyFileExistsForRichLinkID:basePath:]


EDSearchableIndex : NSObject <CSSearchableIndexDelegate, EDSearchableIndexVerifierDataSource, EFLoggable, EFSignpostable, EDSearchableIndexSchedulable, EMSearchableIndexInterface>
 @property  long long transaction
 @property  CSSearchableIndex *searchIndex
 @property  NSString *copyDiagnosticInformation
 @property  BOOL skipIndexExclusionCheck
 @property  BOOL clientStateFetched
 @property  BOOL enableSpotlightVerification
 @property  NSString *searchableIndexBundleID
 @property  double coalescingDelaySeconds
 @property  double dataSourceUpdateTimeLimit
 @property  long long resumeCount
 @property  BOOL active
 @property  EFFuture *delayDataSourceAssignmentFuture
 @property  NSString *indexName
 @property  <EDSearchableIndexDataSource> *dataSource
 @property  <EDSearchableIndexReasonProvider> *reasonProvider
 @property  <EDSearchableIndexSchedulableDelegate> *schedulableDelegate
 @property  unsigned long pendingIndexItemsCount
 @property  BOOL performingBlockAffectingDataSourceAndIndex
 @property  BOOL persistenceAvailable
 @property  EFObservable *powerObservable
 @property  BOOL pluggedIn
 @property  BOOL shouldCancelSearchQuery
 @property  BOOL canIndexAttachments
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long signpostID
 @property  BOOL dataSourceIndexingPermitted

  // class methods
  +[EDSearchableIndex signpostLog]
  +[EDSearchableIndex log]
  +[EDSearchableIndex userHandle]
  +[EDSearchableIndex isIncrementalIndexingType:]
  +[EDSearchableIndex isValidTransaction:]
  +[EDSearchableIndex _localClientStateURL]
  +[EDSearchableIndex _localClientState]
  +[EDSearchableIndex _saveLocalClientState:]

  // instance methods
  -[EDSearchableIndex test_tearDown]
  -[EDSearchableIndex _suspend]
  -[EDSearchableIndex refresh]
  -[EDSearchableIndex _resume]
  -[EDSearchableIndex shouldCancelSearchQuery]
  -[EDSearchableIndex searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:]
  -[EDSearchableIndex dataSource]
  -[EDSearchableIndex signpostID]
  -[EDSearchableIndex setForeground:]
  -[EDSearchableIndex suspend]
  -[EDSearchableIndex dealloc]
  -[EDSearchableIndex isActive]
  -[EDSearchableIndex logPowerEventWithIdentifier:eventData:]
  -[EDSearchableIndex .cxx_destruct]
  -[EDSearchableIndex exclusionReasons]
  -[EDSearchableIndex resume]
  -[EDSearchableIndex scheduleRecurringActivity]
  -[EDSearchableIndex currentReasons]
  -[EDSearchableIndex removeSearchQueryCancelable:]
  -[EDSearchableIndex setDataSource:]
  -[EDSearchableIndex resumeCount]
  -[EDSearchableIndex removeAllItems]
  -[EDSearchableIndex setDataSourceIndexingPermitted:]
  -[EDSearchableIndex copyDiagnosticInformation]
  -[EDSearchableIndex indexMessages:includeBody:indexingType:]
  -[EDSearchableIndex applicationWillResume]
  -[EDSearchableIndex initWithName:dataSource:reasonProvider:]
  -[EDSearchableIndex _transaction]
  -[EDSearchableIndex applicationWillSuspend]
  -[EDSearchableIndex dataSourceRefreshReasons]
  -[EDSearchableIndex powerObservable]
  -[EDSearchableIndex isDataSourceIndexingPermitted]
  -[EDSearchableIndex indexName]
  -[EDSearchableIndex _invalidateCache]
  -[EDSearchableIndex purgeReasons]
  -[EDSearchableIndex searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:]
  -[EDSearchableIndex reindexAllSearchableItemsWithAcknowledgementHandler:]
  -[EDSearchableIndex isPluggedIn]
  -[EDSearchableIndex addSearchQueryCancelable:]
  -[EDSearchableIndex searchIndex]
  -[EDSearchableIndex setSearchIndex:]
  -[EDSearchableIndex removeItemsWithIdentifiers:]
  -[EDSearchableIndex setPersistenceAvailable:]
  -[EDSearchableIndex searchableItemSnippetDataMatchingCriterion:]
  -[EDSearchableIndex setSchedulableDelegate:]
  -[EDSearchableIndex setSearchableIndexBundleID:]
  -[EDSearchableIndex removeItemsForDomainIdentifier:]
  -[EDSearchableIndex indexItems:]
  -[EDSearchableIndex indexItems:immediately:]
  -[EDSearchableIndex pendingIndexItemsCount]
  -[EDSearchableIndex reindexSearchableItemsWithIdentifiers:acknowledgementHandler:]
  -[EDSearchableIndex attachmentBecameAvailable:]
  -[EDSearchableIndex richLinkBecameAvailable:]
  -[EDSearchableIndex bundleIDForSearchableIndexVerifier:]
  -[EDSearchableIndex dataSamplesForSearchableIndexVerifier:searchableIndex:count:lastVerifiedMessageID:]
  -[EDSearchableIndex searchableIndexForSearchableIndexVerifier:]
  -[EDSearchableIndex knownTransactionIDsForSearchableIndexVerifier:]
  -[EDSearchableIndex _powerStateChanged]
  -[EDSearchableIndex _promptToFileRadarAboutReindexing:]
  -[EDSearchableIndex _scheduleSpotlightVerification]
  -[EDSearchableIndex _clearOrphanedSearchableMessagesFromDatabase]
  -[EDSearchableIndex _scheduleSpotlightVerificationOnIndexingQueueWithCompletion:]
  -[EDSearchableIndex _registerDistantFutureSpotlightVerification]
  -[EDSearchableIndex _verifySpotlightIndex]
  -[EDSearchableIndex _handleFailingTransactionIDs:]
  -[EDSearchableIndex _throttleRequestedSize:targetTime:action:]
  -[EDSearchableIndex _fetchLastClientState]
  -[EDSearchableIndex _noteNeedsLastClientStateFetch]
  -[EDSearchableIndex _nextTransaction]
  -[EDSearchableIndex _eventDataForTransitionState:]
  -[EDSearchableIndex isPersistenceAvailable]
  -[EDSearchableIndex _queueContentsAllowsRefresh]
  -[EDSearchableIndex _dataSourceScheduleWork:]
  -[EDSearchableIndex _dataSourceAssignTransaction:updates:completion:]
  -[EDSearchableIndex _dataSourceAssignTransaction:forIdentifiers:completion:]
  -[EDSearchableIndex _dataSourceInvalidateItemsGreaterThanTransaction:completion:]
  -[EDSearchableIndex _dataSourceRequestNeededUpdatesExcludingIdentifiers:completion:]
  -[EDSearchableIndex _dataSourceVerifyRepresentativeSampleWithCompletion:]
  -[EDSearchableIndex _dataSourcePrepareToIndexItems:fromRefresh:withCompletion:]
  -[EDSearchableIndex _startCoalescingTimer]
  -[EDSearchableIndex _stopCoalescingTimer]
  -[EDSearchableIndex _coalescingTimerFired]
  -[EDSearchableIndex _transitionWithBudgetTimeUsed:]
  -[EDSearchableIndex _queueConsumeBudgetElapsedPeriod:]
  -[EDSearchableIndex _queueConsumeBudgetItemCount:]
  -[EDSearchableIndex _queueRefresh]
  -[EDSearchableIndex _countOfItemsInPendingQueues]
  -[EDSearchableIndex _queueTransitionActive:fromRefresh:]
  -[EDSearchableIndex _suspendIndexingScheduler]
  -[EDSearchableIndex _resumeIndexingScheduler]
  -[EDSearchableIndex _logSignpostForIndexingBatchStartWithPendingItemsCount:]
  -[EDSearchableIndex _logSignpostForIndexingBatchAssignedDomainRemovalCount:]
  -[EDSearchableIndex _logSignpostForIndexingBatchAssignedUpdatesWithItemsIndexedCount:]
  -[EDSearchableIndex _logSignpostForIndexingBatchCompletedWithItemsIndexedCount:]
  -[EDSearchableIndex _scheduleProcessPendingItemsFromRefresh:]
  -[EDSearchableIndex _scheduleDataSourceRefresh]
  -[EDSearchableIndex beginUpdatesAffectingDataSourceAndIndex]
  -[EDSearchableIndex endUpdatesAffectingDataSourceAndIndex]
  -[EDSearchableIndex performBlockAffectingDataSourceAndIndex:]
  -[EDSearchableIndex isPerformingBlockAffectingDataSourceAndIndex]
  -[EDSearchableIndex _consumeBatchOfSize:]
  -[EDSearchableIndex _identifiersForItems:]
  -[EDSearchableIndex _identifiersStringForItems:maxLength:]
  -[EDSearchableIndex _getDomainRemovals:identifierRemovals:]
  -[EDSearchableIndex _processIndexingBatch:clientState:itemsNotIndexed:]
  -[EDSearchableIndex _processDomainRemovals:]
  -[EDSearchableIndex _processIdentifierRemovals:]
  -[EDSearchableIndex _pendingIdentifiers]
  -[EDSearchableIndex _processRefreshRequestWithCompletion:]
  -[EDSearchableIndex _processSpotlightVerificationWithCompletion:]
  -[EDSearchableIndex issueDiagnosticsRequestForMessageRowId:]
  -[EDSearchableIndex indexedEmptySubjectIdentifers]
  -[EDSearchableIndex _invalidateItemsInTransactions:]
  -[EDSearchableIndex reindexAllItemsWithOptions:acknowledgementHandler:]
  -[EDSearchableIndex indexItems:fromRefresh:immediately:]
  -[EDSearchableIndex _indexItems:fromRefresh:immediately:]
  -[EDSearchableIndex _doIndexItems:fromRefresh:immediately:]
  -[EDSearchableIndex removeItemsWithIdentifiers:reasons:fromRefresh:]
  -[EDSearchableIndex removeAllItemsWithAcknowledgementHandler:]
  -[EDSearchableIndex messageIDsMatchingQuery:]
  -[EDSearchableIndex _preprocessItemIfNecessary:fromRefresh:]
  -[EDSearchableIndex removeMessages:]
  -[EDSearchableIndex indexAttachmentsForMessageWithIdentifier:immediately:]
  -[EDSearchableIndex indexRichLinksForMessageWithIdentifier:immediately:]
  -[EDSearchableIndex markMessagesAsPrinted:]
  -[EDSearchableIndex canIndexAttachments]
  -[EDSearchableIndex reasonProvider]
  -[EDSearchableIndex setReasonProvider:]
  -[EDSearchableIndex schedulableDelegate]
  -[EDSearchableIndex skipIndexExclusionCheck]
  -[EDSearchableIndex setSkipIndexExclusionCheck:]
  -[EDSearchableIndex clientStateFetched]
  -[EDSearchableIndex setClientStateFetched:]
  -[EDSearchableIndex enableSpotlightVerification]
  -[EDSearchableIndex setEnableSpotlightVerification:]
  -[EDSearchableIndex searchableIndexBundleID]
  -[EDSearchableIndex coalescingDelaySeconds]
  -[EDSearchableIndex setCoalescingDelaySeconds:]
  -[EDSearchableIndex dataSourceUpdateTimeLimit]
  -[EDSearchableIndex setDataSourceUpdateTimeLimit:]
  -[EDSearchableIndex delayDataSourceAssignmentFuture]
  -[EDSearchableIndex setDelayDataSourceAssignmentFuture:]


_EMSearchableIndexResultKey : NSObject
 @property  <EDSearchableCriterion> *criterion
 @property  NSIndexSet *mailboxIDs

  // instance methods
  -[_EMSearchableIndexResultKey criterion]
  -[_EMSearchableIndexResultKey .cxx_destruct]
  -[_EMSearchableIndexResultKey setCriterion:]
  -[_EMSearchableIndexResultKey isEqual:]
  -[_EMSearchableIndexResultKey mailboxIDs]
  -[_EMSearchableIndexResultKey setMailboxIDs:]


_EMSearchableIndexPendingRemovals : NSObject <NSCopying>
 @property  unsigned long count
 @property  NSArray *identifiers
 @property  NSArray *purgedIdentifiers
 @property  NSArray *deletedIdentifiers
 @property  NSSet *purgeReasons
 @property  NSSet *exclusionReasons

  // instance methods
  -[_EMSearchableIndexPendingRemovals identifiers]
  -[_EMSearchableIndexPendingRemovals addIdentifiers:withReasons:]
  -[_EMSearchableIndexPendingRemovals setExclusionReasons:]
  -[_EMSearchableIndexPendingRemovals .cxx_destruct]
  -[_EMSearchableIndexPendingRemovals exclusionReasons]
  -[_EMSearchableIndexPendingRemovals count]
  -[_EMSearchableIndexPendingRemovals purgedIdentifiers]
  -[_EMSearchableIndexPendingRemovals setPurgeReasons:]
  -[_EMSearchableIndexPendingRemovals _identifiersPassingReasonsTest:]
  -[_EMSearchableIndexPendingRemovals initWithPurgeReasons:exclusionReasons:]
  -[_EMSearchableIndexPendingRemovals copyWithZone:]
  -[_EMSearchableIndexPendingRemovals removeIdentifier:]
  -[_EMSearchableIndexPendingRemovals removeAllIdentifiers]
  -[_EMSearchableIndexPendingRemovals deletedIdentifiers]
  -[_EMSearchableIndexPendingRemovals purgeReasons]


EDSearchableIndexAttachmentItem : NSObject <EFLoggable, EDIndexableItem>
 @property  EFPromise *attributeSetForFilePromise
 @property  NSString *attachmentPersistentID
 @property  NSString *messagePersistentID
 @property  EDSearchableIndexAttachmentItemMetadatum *metadatum
 @property  BOOL requiresPreprocessing
 @property  double searchableItemProcessingDelay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier
 @property  NSString *domainIdentifier
 @property  long long indexingType
 @property  NSDate *dateReceived
 @property  unsigned long itemInstantiationTime
 @property  unsigned long estimatedSizeInBytes
 @property  NSData *underlyingData
 @property  BOOL hasCompleteData
 @property  BOOL alwaysMarkAsIndexed
 @property  BOOL shouldExcludeFromIndex

  // class methods
  +[EDSearchableIndexAttachmentItem log]
  +[EDSearchableIndexAttachmentItem attachmentPersistentIDFromItemIdentifier:]
  +[EDSearchableIndexAttachmentItem identifierForAttachmentPersistentID:]

  // instance methods
  -[EDSearchableIndexAttachmentItem domainIdentifier]
  -[EDSearchableIndexAttachmentItem identifier]
  -[EDSearchableIndexAttachmentItem searchableItem]
  -[EDSearchableIndexAttachmentItem compare:]
  -[EDSearchableIndexAttachmentItem .cxx_destruct]
  -[EDSearchableIndexAttachmentItem dateReceived]
  -[EDSearchableIndexAttachmentItem preprocess]
  -[EDSearchableIndexAttachmentItem underlyingData]
  -[EDSearchableIndexAttachmentItem setIndexingType:]
  -[EDSearchableIndexAttachmentItem indexingType]
  -[EDSearchableIndexAttachmentItem messagePersistentID]
  -[EDSearchableIndexAttachmentItem shouldExcludeFromIndex]
  -[EDSearchableIndexAttachmentItem setNeedsAllAttributesIndexingType]
  -[EDSearchableIndexAttachmentItem setNeedsAllAttributesIncludingDataDetectionResultsIndexingType]
  -[EDSearchableIndexAttachmentItem fetchIndexableAttachments]
  -[EDSearchableIndexAttachmentItem setMessagePersistentID:]
  -[EDSearchableIndexAttachmentItem itemInstantiationTime]
  -[EDSearchableIndexAttachmentItem estimatedSizeInBytes]
  -[EDSearchableIndexAttachmentItem setUnderlyingData:]
  -[EDSearchableIndexAttachmentItem hasCompleteData]
  -[EDSearchableIndexAttachmentItem alwaysMarkAsIndexed]
  -[EDSearchableIndexAttachmentItem requiresPreprocessing]
  -[EDSearchableIndexAttachmentItem initWithAttachmentPersistentID:messagePersistentID:metadatum:]
  -[EDSearchableIndexAttachmentItem attributeSetForFilePromise]
  -[EDSearchableIndexAttachmentItem attachmentPersistentID]
  -[EDSearchableIndexAttachmentItem setAttachmentPersistentID:]
  -[EDSearchableIndexAttachmentItem metadatum]
  -[EDSearchableIndexAttachmentItem setMetadatum:]
  -[EDSearchableIndexAttachmentItem setAttributeSetForFilePromise:]
  -[EDSearchableIndexAttachmentItem setRequiresPreprocessing:]
  -[EDSearchableIndexAttachmentItem searchableItemProcessingDelay]
  -[EDSearchableIndexAttachmentItem setSearchableItemProcessingDelay:]


EDSearchableIndexAttachmentItemMetadatum : NSObject <EDSearchableIndexAttachmentItemMetadatumBuilder>
 @property  NSString *name
 @property  NSString *domainIdentifier
 @property  NSString *accountIdentifier
 @property  NSArray *mailboxIdentifiers
 @property  NSString *senderAddress
 @property  NSArray *recipientAddresses
 @property  NSDate *dateReceived
 @property  NSDate *dateSent
 @property  NSURL *attachmentFileURL
 @property  BOOL canReadAttachmentFile
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDSearchableIndexAttachmentItemMetadatum domainIdentifier]
  -[EDSearchableIndexAttachmentItemMetadatum setAccountIdentifier:]
  -[EDSearchableIndexAttachmentItemMetadatum .cxx_destruct]
  -[EDSearchableIndexAttachmentItemMetadatum accountIdentifier]
  -[EDSearchableIndexAttachmentItemMetadatum dateReceived]
  -[EDSearchableIndexAttachmentItemMetadatum setName:]
  -[EDSearchableIndexAttachmentItemMetadatum name]
  -[EDSearchableIndexAttachmentItemMetadatum setDateReceived:]
  -[EDSearchableIndexAttachmentItemMetadatum setRecipientAddresses:]
  -[EDSearchableIndexAttachmentItemMetadatum setDomainIdentifier:]
  -[EDSearchableIndexAttachmentItemMetadatum dateSent]
  -[EDSearchableIndexAttachmentItemMetadatum setDateSent:]
  -[EDSearchableIndexAttachmentItemMetadatum setMailboxIdentifiers:]
  -[EDSearchableIndexAttachmentItemMetadatum mailboxIdentifiers]
  -[EDSearchableIndexAttachmentItemMetadatum recipientAddresses]
  -[EDSearchableIndexAttachmentItemMetadatum senderAddress]
  -[EDSearchableIndexAttachmentItemMetadatum setSenderAddress:]
  -[EDSearchableIndexAttachmentItemMetadatum initWithAttachmentFileURL:builder:]
  -[EDSearchableIndexAttachmentItemMetadatum canReadAttachmentFile]
  -[EDSearchableIndexAttachmentItemMetadatum attachmentFileURL]


EDSearchableIndexBudgetConfiguration : NSObject <EFPubliclyDescribable>
 @property  BOOL enableActivityBasedScheduling
 @property  BOOL autoStartMaintenanceIndexing
 @property  BOOL allowBacklogIndexingOnPower
 @property  double time
 @property  double periodDuration
 @property  long long numberOfItemsToIndexOnResume
 @property  NSString *ef_publicDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDSearchableIndexBudgetConfiguration defaultConfiguration]
  +[EDSearchableIndexBudgetConfiguration nonSchedulingBudgetConfiguration]

  // instance methods
  -[EDSearchableIndexBudgetConfiguration ef_publicDescription]
  -[EDSearchableIndexBudgetConfiguration setAllowBacklogIndexingOnPower:]
  -[EDSearchableIndexBudgetConfiguration setAutoStartMaintenanceIndexing:]
  -[EDSearchableIndexBudgetConfiguration time]
  -[EDSearchableIndexBudgetConfiguration enableActivityBasedScheduling]
  -[EDSearchableIndexBudgetConfiguration numberOfItemsToIndexOnResume]
  -[EDSearchableIndexBudgetConfiguration setEnableActivityBasedScheduling:]
  -[EDSearchableIndexBudgetConfiguration autoStartMaintenanceIndexing]
  -[EDSearchableIndexBudgetConfiguration initWithTime:periodDuration:numberOfItemsToIndexOnResume:enableActivityBasedScheduling:autoStartMaintenanceIndexing:allowBacklogIndexingOnPower:]
  -[EDSearchableIndexBudgetConfiguration initWithTime:periodDuration:numberOfItemsToIndexOnResume:]
  -[EDSearchableIndexBudgetConfiguration periodDuration]
  -[EDSearchableIndexBudgetConfiguration init]
  -[EDSearchableIndexBudgetConfiguration allowBacklogIndexingOnPower]


EDSearchableIndexClientState : NSObject
 @property  long long transaction
 @property  NSNumber *transactionValue
 @property  NSDate *transactionDate
 @property  NSString *systemBuildVersion

  // class methods
  +[EDSearchableIndexClientState clientState]
  +[EDSearchableIndexClientState clientStateFromData:]
  +[EDSearchableIndexClientState transactionAttributeKey]

  // instance methods
  -[EDSearchableIndexClientState systemBuildVersion]
  -[EDSearchableIndexClientState transaction]
  -[EDSearchableIndexClientState setTransactionDate:]
  -[EDSearchableIndexClientState initWithDictionary:]
  -[EDSearchableIndexClientState .cxx_destruct]
  -[EDSearchableIndexClientState setTransaction:]
  -[EDSearchableIndexClientState setSystemBuildVersion:]
  -[EDSearchableIndexClientState transactionValue]
  -[EDSearchableIndexClientState archiveRepresentation]
  -[EDSearchableIndexClientState transactionDate]
  -[EDSearchableIndexClientState init]
  -[EDSearchableIndexClientState addTransactionValueToAttributeSet:]


EDSearchableIndexItem : NSObject <EFLoggable, EDIndexableItem>
 @property  <EDBaseMessage> *message
 @property  NSData *bodyData
 @property  BOOL isEncrypted
 @property  BOOL includeEncryptedBody
 @property  BOOL fetchBody
 @property  BOOL shouldExcludeFromIndex
 @property  BOOL hasCompleteData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier
 @property  NSString *domainIdentifier
 @property  long long indexingType
 @property  NSDate *dateReceived
 @property  unsigned long itemInstantiationTime
 @property  unsigned long estimatedSizeInBytes
 @property  NSData *underlyingData
 @property  BOOL alwaysMarkAsIndexed
 @property  BOOL requiresPreprocessing

  // class methods
  +[EDSearchableIndexItem log]
  +[EDSearchableIndexItem domainIdentifierForMessage:]
  +[EDSearchableIndexItem mailboxIdentifiersForMessage:result:]
  +[EDSearchableIndexItem accountIdentifierForMessage:]
  +[EDSearchableIndexItem itemWithIdentifier:message:bodyData:fetchBody:]
  +[EDSearchableIndexItem itemWithMessage:bodyData:fetchBody:]
  +[EDSearchableIndexItem indexingPriorityByIndexingType:]
  +[EDSearchableIndexItem domainIdentifierForAccountID:mailboxPersistentID:]
  +[EDSearchableIndexItem peopleFromCommentedAddresses:]
  +[EDSearchableIndexItem csIdentifierForMailbox:]

  // instance methods
  -[EDSearchableIndexItem domainIdentifier]
  -[EDSearchableIndexItem identifier]
  -[EDSearchableIndexItem isEncrypted]
  -[EDSearchableIndexItem searchableItem]
  -[EDSearchableIndexItem compare:]
  -[EDSearchableIndexItem .cxx_destruct]
  -[EDSearchableIndexItem setIsEncrypted:]
  -[EDSearchableIndexItem bodyData]
  -[EDSearchableIndexItem initWithIdentifier:]
  -[EDSearchableIndexItem dateReceived]
  -[EDSearchableIndexItem message]
  -[EDSearchableIndexItem preprocess]
  -[EDSearchableIndexItem setBodyData:]
  -[EDSearchableIndexItem underlyingData]
  -[EDSearchableIndexItem setIndexingType:]
  -[EDSearchableIndexItem initWithMessage:bodyData:fetchBody:]
  -[EDSearchableIndexItem indexingType]
  -[EDSearchableIndexItem shouldExcludeFromIndex]
  -[EDSearchableIndexItem setNeedsAllAttributesIndexingType]
  -[EDSearchableIndexItem setNeedsAllAttributesIncludingDataDetectionResultsIndexingType]
  -[EDSearchableIndexItem addAttachmentAttributesToAttributeSet:]
  -[EDSearchableIndexItem fetchIndexableAttachments]
  -[EDSearchableIndexItem itemInstantiationTime]
  -[EDSearchableIndexItem estimatedSizeInBytes]
  -[EDSearchableIndexItem setUnderlyingData:]
  -[EDSearchableIndexItem hasCompleteData]
  -[EDSearchableIndexItem alwaysMarkAsIndexed]
  -[EDSearchableIndexItem requiresPreprocessing]
  -[EDSearchableIndexItem initWithIdentifier:message:bodyData:fetchBody:]
  -[EDSearchableIndexItem linksAttributeKey]
  -[EDSearchableIndexItem phoneNumbersAttributeKey]
  -[EDSearchableIndexItem addressesAttributeKey]
  -[EDSearchableIndexItem calendarEventsAttributeKey]
  -[EDSearchableIndexItem trackingNumbersAttributeKey]
  -[EDSearchableIndexItem flightNumbersAttributeKey]
  -[EDSearchableIndexItem addFlagsAttributesToAttributeSet:]
  -[EDSearchableIndexItem addUpdatableAttributesToAttributeSet:]
  -[EDSearchableIndexItem addStaticAttributesToAttributeSet:]
  -[EDSearchableIndexItem _addStaticAttributesToAttributeSet:]
  -[EDSearchableIndexItem addDataDetectionAttributesToAttributeSet:]
  -[EDSearchableIndexItem includeEncryptedBody]
  -[EDSearchableIndexItem setIncludeEncryptedBody:]
  -[EDSearchableIndexItem fetchBody]
  -[EDSearchableIndexItem setHasCompleteData:]


EDSearchableIndexManager : NSObject <EFLoggable, EDMessageChangeHookResponder>
 @property  BOOL needsReindex
 @property  BOOL needsToScheduleRecurringActivity
 @property  EDSearchableIndexPersistence *persistence
 @property  EDSearchableIndexScheduler *scheduler
 @property  EDPersistenceDatabase *database
 @property  EDSearchableIndex *index
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDSearchableIndexManager log]

  // instance methods
  -[EDSearchableIndexManager test_tearDown]
  -[EDSearchableIndexManager persistenceDidDeleteMessages:generationWindow:]
  -[EDSearchableIndexManager enableIndexingAndBeginScheduling:budgetConfiguration:]
  -[EDSearchableIndexManager scheduler]
  -[EDSearchableIndexManager index]
  -[EDSearchableIndexManager persistence]
  -[EDSearchableIndexManager enableIndexingAndBeginScheduling:]
  -[EDSearchableIndexManager .cxx_destruct]
  -[EDSearchableIndexManager persistenceDidAddMessages:generationWindow:]
  -[EDSearchableIndexManager scheduleRecurringActivity]
  -[EDSearchableIndexManager initWithDatabase:messagePersistence:richLinkPersistence:hookResponder:]
  -[EDSearchableIndexManager database]
  -[EDSearchableIndexManager persistenceDidChangeFlags:messages:generationWindow:]
  -[EDSearchableIndexManager setNeedsReindex]
  -[EDSearchableIndexManager persistenceWillBeginUpdates]
  -[EDSearchableIndexManager persistenceDidFinishUpdates]
  -[EDSearchableIndexManager persistenceDidUpdateData:message:]
  -[EDSearchableIndexManager persistenceDidAddLabels:removeLabels:messages:generationWindow:]
  -[EDSearchableIndexManager persistenceDidAddDataDetectionResults:generationWindow:]
  -[EDSearchableIndexManager _removeAllItemsFromIndexAndWait:options:]
  -[EDSearchableIndexManager removeAllItemsFromIndexAndWait:skipInvalidation:]
  -[EDSearchableIndexManager _removeItemsForPersistedMessages:]
  -[EDSearchableIndexManager needsReindex]
  -[EDSearchableIndexManager setNeedsReindex:]
  -[EDSearchableIndexManager needsToScheduleRecurringActivity]
  -[EDSearchableIndexManager setNeedsToScheduleRecurringActivity:]


EDSearchableIndexPendingItem : NSObject
 @property  NSMutableArray *items
 @property  NSString *identifier
 @property  <EDIndexableItem> *referenceItem
 @property  unsigned long estimatedSizeInBytes
 @property  BOOL requiresPreprocessing

  // instance methods
  -[EDSearchableIndexPendingItem addItem:]
  -[EDSearchableIndexPendingItem identifier]
  -[EDSearchableIndexPendingItem setItems:]
  -[EDSearchableIndexPendingItem compare:]
  -[EDSearchableIndexPendingItem .cxx_destruct]
  -[EDSearchableIndexPendingItem items]
  -[EDSearchableIndexPendingItem isEqual:]
  -[EDSearchableIndexPendingItem initWithItem:]
  -[EDSearchableIndexPendingItem estimatedSizeInBytes]
  -[EDSearchableIndexPendingItem requiresPreprocessing]
  -[EDSearchableIndexPendingItem addPendingItem:]
  -[EDSearchableIndexPendingItem referenceItem]


EDSearchableIndexPersistenceAttachmentDatum : NSObject
 @property  NSString *attachmentPersistentID
 @property  NSString *messagePersistentID
 @property  NSString *attachmentID
 @property  NSString *name
 @property  long long mailboxID

  // instance methods
  -[EDSearchableIndexPersistenceAttachmentDatum .cxx_destruct]
  -[EDSearchableIndexPersistenceAttachmentDatum setName:]
  -[EDSearchableIndexPersistenceAttachmentDatum name]
  -[EDSearchableIndexPersistenceAttachmentDatum messagePersistentID]
  -[EDSearchableIndexPersistenceAttachmentDatum mailboxID]
  -[EDSearchableIndexPersistenceAttachmentDatum setMailboxID:]
  -[EDSearchableIndexPersistenceAttachmentDatum setMessagePersistentID:]
  -[EDSearchableIndexPersistenceAttachmentDatum attachmentID]
  -[EDSearchableIndexPersistenceAttachmentDatum setAttachmentID:]
  -[EDSearchableIndexPersistenceAttachmentDatum attachmentPersistentID]
  -[EDSearchableIndexPersistenceAttachmentDatum setAttachmentPersistentID:]


EDSearchableIndexPersistenceRichLinkDatum : NSObject
 @property  NSString *richLinkItemIdentifier
 @property  NSString *messagePersistentID
 @property  NSString *richLinkID
 @property  long long mailboxID
 @property  NSString *title
 @property  NSString *url

  // instance methods
  -[EDSearchableIndexPersistenceRichLinkDatum setUrl:]
  -[EDSearchableIndexPersistenceRichLinkDatum .cxx_destruct]
  -[EDSearchableIndexPersistenceRichLinkDatum title]
  -[EDSearchableIndexPersistenceRichLinkDatum url]
  -[EDSearchableIndexPersistenceRichLinkDatum setTitle:]
  -[EDSearchableIndexPersistenceRichLinkDatum setRichLinkID:]
  -[EDSearchableIndexPersistenceRichLinkDatum richLinkID]
  -[EDSearchableIndexPersistenceRichLinkDatum messagePersistentID]
  -[EDSearchableIndexPersistenceRichLinkDatum mailboxID]
  -[EDSearchableIndexPersistenceRichLinkDatum setMailboxID:]
  -[EDSearchableIndexPersistenceRichLinkDatum setMessagePersistentID:]
  -[EDSearchableIndexPersistenceRichLinkDatum richLinkItemIdentifier]
  -[EDSearchableIndexPersistenceRichLinkDatum setRichLinkItemIdentifier:]


EDSearchableIndexPersistence : NSObject <EFLoggable, EFSignpostable, EDPersistenceDatabaseSchemaProvider, EDSearchableIndexDataSource>
 @property  <EDSearchableIndexHookResponder> *hookResponder
 @property  EDMessagePersistence *messagePersistence
 @property  EDRichLinkPersistence *richLinkPersistence
 @property  long long lastProcessedAttachmentID
 @property  unsigned long rebuildIndexState
 @property  EDPersistenceDatabase *database
 @property  NSString *additionalFilterClause
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long signpostID

  // class methods
  +[EDSearchableIndexPersistence searchableMessagesTableName]
  +[EDSearchableIndexPersistence searchableAttachmentsTableSchema]
  +[EDSearchableIndexPersistence signpostLog]
  +[EDSearchableIndexPersistence searchableRebuildTableSchema]
  +[EDSearchableIndexPersistence log]
  +[EDSearchableIndexPersistence tablesAndForeignKeysToResolve:associationsToResolve:]
  +[EDSearchableIndexPersistence searchableDataDetectionResultsTableSchema]
  +[EDSearchableIndexPersistence searchableMessageTombstonesTableSchema]
  +[EDSearchableIndexPersistence searchableRichLinksTableSchema]
  +[EDSearchableIndexPersistence searchableMessagesTableSchema]

  // instance methods
  -[EDSearchableIndexPersistence signpostID]
  -[EDSearchableIndexPersistence verificationDataSamplesFromMessageIDTransactionIDDictionary:]
  -[EDSearchableIndexPersistence allMailboxIdentifiersForMessage:result:]
  -[EDSearchableIndexPersistence attachmentItemMetadataForAttachmentID:attachmentPersistentID:messagePersistentID:name:mailboxID:result:]
  -[EDSearchableIndexPersistence .cxx_destruct]
  -[EDSearchableIndexPersistence additionalFilterClause]
  -[EDSearchableIndexPersistence attachmentItemMetadataForAttachmentID:messagePersistentID:name:mailboxID:result:]
  -[EDSearchableIndexPersistence initWithDatabase:messagePersistence:richLinkPersistence:hookResponder:]
  -[EDSearchableIndexPersistence richLinkPersistence]
  -[EDSearchableIndexPersistence database]
  -[EDSearchableIndexPersistence messagePersistence]
  -[EDSearchableIndexPersistence messagesWhere:sortedBy:limit:]
  -[EDSearchableIndexPersistence hookResponder]
  -[EDSearchableIndexPersistence searchableIndexItemsFromMessages:type:]
  -[EDSearchableIndexPersistence rebuildIndexState]
  -[EDSearchableIndexPersistence searchableIndex:prepareToIndexAttachmentsForMessageWithIdentifier:]
  -[EDSearchableIndexPersistence updatesForSearchableIndex:excludingIdentifiers:count:cancelationToken:]
  -[EDSearchableIndexPersistence indexingTypeForSearchableIndex:item:]
  -[EDSearchableIndexPersistence searchableIndex:assignIndexingType:forIdentifiers:]
  -[EDSearchableIndexPersistence searchableIndex:willRemoveIdentifiers:type:]
  -[EDSearchableIndexPersistence childIdentifiersToRemoveFromSearchableIndex:whenRemovingParentIdentifiers:]
  -[EDSearchableIndexPersistence searchableIndex:assignTransaction:updates:]
  -[EDSearchableIndexPersistence searchableIndex:invalidateItemsGreaterThanTransaction:]
  -[EDSearchableIndexPersistence searchableIndex:invalidateItemsInTransactions:]
  -[EDSearchableIndexPersistence verificationDataSamplesForSearchableIndex:count:lastVerifiedMessageID:]
  -[EDSearchableIndexPersistence distinctTransactionIDsForSearchableIndex:]
  -[EDSearchableIndexPersistence clearOrphanedSearchableMessagesFromDatabase]
  -[EDSearchableIndexPersistence searchableIndex:attachmentItemsForMessageWithIdentifier:]
  -[EDSearchableIndexPersistence lastProcessedAttachmentID]
  -[EDSearchableIndexPersistence setLastProcessedAttachmentID:]
  -[EDSearchableIndexPersistence _messagesRequiringIndexingForType:excludingIdentifiers:limit:]
  -[EDSearchableIndexPersistence _canPerformIncrementalIndexForIdentifier:indexingType:]
  -[EDSearchableIndexPersistence _searchableIndexMessageIndexingTypes]
  -[EDSearchableIndexPersistence _assignIndexedItems:connection:query:indexedBindingsGenerator:]
  -[EDSearchableIndexPersistence _assignIndexedItems:transaction:connection:]
  -[EDSearchableIndexPersistence _addTombstonesForIdentifiers:type:connection:]
  -[EDSearchableIndexPersistence _assignTombstonesForIdentifiers:type:transaction:connection:]
  -[EDSearchableIndexPersistence _purgeSpotlightTombstonesBeforeTransaction:connection:]
  -[EDSearchableIndexPersistence _identifiersForTombstonesOfType:connection:]
  -[EDSearchableIndexPersistence _removeIndexedIdentifiers:connection:]
  -[EDSearchableIndexPersistence _identifiersForRemovedItemsUsingConnection:]
  -[EDSearchableIndexPersistence _identifiersForDeletedMessagesUsingConnection:]
  -[EDSearchableIndexPersistence _messageIDTransactionIDDictionaryToVerifyUsingConnection:count:lastVerifiedMessageID:]
  -[EDSearchableIndexPersistence _attachmentDataForItemsRequiringIndexingExcludingIdentifiers:limit:cancelationToken:connection:]
  -[EDSearchableIndexPersistence _attachmentDataForMessageWithIdentifier:connection:]
  -[EDSearchableIndexPersistence _attachmentItemsFromAttachmentData:limit:cancelationToken:]
  -[EDSearchableIndexPersistence _identifiersForDeletedAttachmentsUsingConnection:]
  -[EDSearchableIndexPersistence _identifiersForAttachmentsInTransactions:usingConnection:]
  -[EDSearchableIndexPersistence _identifiersForAttachmentsWithQuery:usingConnection:]
  -[EDSearchableIndexPersistence _richLinkDataForItemsRequiringIndexingExcludingIdentifiers:limit:cancelationToken:connection:]
  -[EDSearchableIndexPersistence _richLinkItemsFromRichLinkData:limit:cancelationToken:]
  -[EDSearchableIndexPersistence searchableRichLinkItemMetadataForRichLinkID:richLinkItemIdentifier:messagePersistentID:mailboxID:title:url:result:]
  -[EDSearchableIndexPersistence _assignIndexedAttachmentItems:transaction:connection:]
  -[EDSearchableIndexPersistence _assignIndexedRichLinkItems:transaction:connection:]
  -[EDSearchableIndexPersistence _assignIndexedDataDetectionItems:transaction:connection:]
  -[EDSearchableIndexPersistence _addSearchableDataDetectionResults:withMessage:transaction:]
  -[EDSearchableIndexPersistence setRebuildIndexState:]


EDSearchableIndexRichLinkItem : NSObject <EFLoggable, EDIndexableItem>
 @property  NSString *richLinkPersistentID
 @property  NSString *messagePersistentID
 @property  EDSearchableIndexRichLinkItemMetadatum *metadatum
 @property  BOOL requiresPreprocessing
 @property  NSString *richLinkItemIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier
 @property  NSString *domainIdentifier
 @property  long long indexingType
 @property  NSDate *dateReceived
 @property  unsigned long itemInstantiationTime
 @property  unsigned long estimatedSizeInBytes
 @property  NSData *underlyingData
 @property  BOOL hasCompleteData
 @property  BOOL alwaysMarkAsIndexed
 @property  BOOL shouldExcludeFromIndex

  // class methods
  +[EDSearchableIndexRichLinkItem log]
  +[EDSearchableIndexRichLinkItem richLinkItemIdentifierFromSearchableItemIdentifier:]
  +[EDSearchableIndexRichLinkItem messageIDandRichLinkIDFromRichLinkIdentifier:]
  +[EDSearchableIndexRichLinkItem completeSearchableIndexRichLinkItemIdentifierFromID:]

  // instance methods
  -[EDSearchableIndexRichLinkItem domainIdentifier]
  -[EDSearchableIndexRichLinkItem identifier]
  -[EDSearchableIndexRichLinkItem searchableItem]
  -[EDSearchableIndexRichLinkItem compare:]
  -[EDSearchableIndexRichLinkItem .cxx_destruct]
  -[EDSearchableIndexRichLinkItem dateReceived]
  -[EDSearchableIndexRichLinkItem preprocess]
  -[EDSearchableIndexRichLinkItem underlyingData]
  -[EDSearchableIndexRichLinkItem setIndexingType:]
  -[EDSearchableIndexRichLinkItem indexingType]
  -[EDSearchableIndexRichLinkItem messagePersistentID]
  -[EDSearchableIndexRichLinkItem shouldExcludeFromIndex]
  -[EDSearchableIndexRichLinkItem setNeedsAllAttributesIndexingType]
  -[EDSearchableIndexRichLinkItem setNeedsAllAttributesIncludingDataDetectionResultsIndexingType]
  -[EDSearchableIndexRichLinkItem fetchIndexableAttachments]
  -[EDSearchableIndexRichLinkItem setMessagePersistentID:]
  -[EDSearchableIndexRichLinkItem itemInstantiationTime]
  -[EDSearchableIndexRichLinkItem estimatedSizeInBytes]
  -[EDSearchableIndexRichLinkItem setUnderlyingData:]
  -[EDSearchableIndexRichLinkItem hasCompleteData]
  -[EDSearchableIndexRichLinkItem alwaysMarkAsIndexed]
  -[EDSearchableIndexRichLinkItem requiresPreprocessing]
  -[EDSearchableIndexRichLinkItem metadatum]
  -[EDSearchableIndexRichLinkItem setMetadatum:]
  -[EDSearchableIndexRichLinkItem setRequiresPreprocessing:]
  -[EDSearchableIndexRichLinkItem richLinkItemIdentifier]
  -[EDSearchableIndexRichLinkItem initWithRichLinkItemIdentifier:messagePersistentID:metadatum:]
  -[EDSearchableIndexRichLinkItem richLinkPersistentID]
  -[EDSearchableIndexRichLinkItem setRichLinkPersistentID:]


EDSearchableIndexRichLinkItemMetadatum : NSObject <EDSearchableIndexRichLinkItemMetadatumBuilder>
 @property  NSString *domainIdentifier
 @property  NSString *accountIdentifier
 @property  NSArray *mailboxIdentifiers
 @property  NSString *senderAddress
 @property  NSArray *recipientAddresses
 @property  NSDate *dateReceived
 @property  NSDate *dateSent
 @property  NSString *title
 @property  NSString *richLinkID
 @property  NSString *url
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDSearchableIndexRichLinkItemMetadatum domainIdentifier]
  -[EDSearchableIndexRichLinkItemMetadatum setUrl:]
  -[EDSearchableIndexRichLinkItemMetadatum setAccountIdentifier:]
  -[EDSearchableIndexRichLinkItemMetadatum initWithBuilder:]
  -[EDSearchableIndexRichLinkItemMetadatum .cxx_destruct]
  -[EDSearchableIndexRichLinkItemMetadatum title]
  -[EDSearchableIndexRichLinkItemMetadatum accountIdentifier]
  -[EDSearchableIndexRichLinkItemMetadatum dateReceived]
  -[EDSearchableIndexRichLinkItemMetadatum url]
  -[EDSearchableIndexRichLinkItemMetadatum setTitle:]
  -[EDSearchableIndexRichLinkItemMetadatum setDateReceived:]
  -[EDSearchableIndexRichLinkItemMetadatum setRecipientAddresses:]
  -[EDSearchableIndexRichLinkItemMetadatum setDomainIdentifier:]
  -[EDSearchableIndexRichLinkItemMetadatum dateSent]
  -[EDSearchableIndexRichLinkItemMetadatum setDateSent:]
  -[EDSearchableIndexRichLinkItemMetadatum setMailboxIdentifiers:]
  -[EDSearchableIndexRichLinkItemMetadatum mailboxIdentifiers]
  -[EDSearchableIndexRichLinkItemMetadatum recipientAddresses]
  -[EDSearchableIndexRichLinkItemMetadatum setRichLinkID:]
  -[EDSearchableIndexRichLinkItemMetadatum richLinkID]
  -[EDSearchableIndexRichLinkItemMetadatum senderAddress]
  -[EDSearchableIndexRichLinkItemMetadatum setSenderAddress:]


EDSearchableIndexScheduler : NSObject <EFLoggable, EDSearchableIndexSchedulableDelegate>
 @property  BOOL scheduledDeferralCheck
 @property  NSString *budgetTimeUserDefaultsKey
 @property  NSObject<OS_dispatch_queue> *indexingStateQueue
 @property  NSMutableDictionary *activities
 @property  NSMutableSet *indexingEnabledForActivityTypes
 @property  BOOL dataSourceIndexingPermitted
 @property  long long budgetedItemCountRemaining
 @property  double budgetedTimeRemaining
 @property  double noActivityIndexingTime
 @property  double maintenanceIndexingTime
 @property  BOOL scheduling
 @property  <EDSearchableIndexSchedulable> *schedulable
 @property  EDSearchableIndexBudgetConfiguration *budgetConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDSearchableIndexScheduler activityTypes]
  +[EDSearchableIndexScheduler budgetTimeUserDefaultsKeyForIndexName:]
  +[EDSearchableIndexScheduler isDeferrableActivityType:]
  +[EDSearchableIndexScheduler log]
  +[EDSearchableIndexScheduler deferrableActivityTypes]

  // instance methods
  -[EDSearchableIndexScheduler setBudgetTimeUserDefaultsKey:]
  -[EDSearchableIndexScheduler _xpcActivityIdentifierForActivityType:]
  -[EDSearchableIndexScheduler _registerActivityForType:builder:runner:]
  -[EDSearchableIndexScheduler setScheduling:]
  -[EDSearchableIndexScheduler budgetTimeUserDefaultsKey]
  -[EDSearchableIndexScheduler _stopScheduling]
  -[EDSearchableIndexScheduler isIndexingEnabledForActivityType:]
  -[EDSearchableIndexScheduler _startScheduling]
  -[EDSearchableIndexScheduler setIndexingStateQueue:]
  -[EDSearchableIndexScheduler indexingStateQueue]
  -[EDSearchableIndexScheduler budgetedTimeRemainingForSearchableIndexSchedulable:]
  -[EDSearchableIndexScheduler budgetedTimeRemaining]
  -[EDSearchableIndexScheduler dealloc]
  -[EDSearchableIndexScheduler budgetedItemCountRemainingForSearchableIndexSchedulable:]
  -[EDSearchableIndexScheduler budgetedItemCountRemaining]
  -[EDSearchableIndexScheduler _isIndexingEnabledByActivities]
  -[EDSearchableIndexScheduler setActivities:]
  -[EDSearchableIndexScheduler indexingDidResumeForSearchableIndexSchedulable:]
  -[EDSearchableIndexScheduler setNoActivityIndexingTime:]
  -[EDSearchableIndexScheduler searchableIndexSchedulable:didGeneratePowerEventWithIdentifier:eventData:]
  -[EDSearchableIndexScheduler .cxx_destruct]
  -[EDSearchableIndexScheduler didFinishIndexingBacklogForSearchableIndexSchedulable:]
  -[EDSearchableIndexScheduler isScheduling]
  -[EDSearchableIndexScheduler searchableIndexSchedulable:didIndexItemCount:]
  -[EDSearchableIndexScheduler setIndexingEnabledForActivityTypes:]
  -[EDSearchableIndexScheduler activities]
  -[EDSearchableIndexScheduler _beginIndexingForActivityType:activity:]
  -[EDSearchableIndexScheduler beginIndexingForActivityType:activity:]
  -[EDSearchableIndexScheduler indexingDidSuspendForSearchableIndexSchedulable:]
  -[EDSearchableIndexScheduler hasAvailableIndexingBudgetForSearchableIndexSchedulable:]
  -[EDSearchableIndexScheduler _stopIndexingForActivityType:shouldDeferIfPossible:]
  -[EDSearchableIndexScheduler initWithSchedulable:budgetConfiguration:]
  -[EDSearchableIndexScheduler setScheduledDeferralCheck:]
  -[EDSearchableIndexScheduler budgetConfiguration]
  -[EDSearchableIndexScheduler searchableIndexSchedulable:didGenerateImportantPowerEventWithIdentifier:eventData:]
  -[EDSearchableIndexScheduler _xpcCriteriaBuilderBlockForActivityType:]
  -[EDSearchableIndexScheduler indexingEnabledForActivityTypes]
  -[EDSearchableIndexScheduler _setBudgetedTimeRemaining:]
  -[EDSearchableIndexScheduler setDataSourceIndexingPermitted:]
  -[EDSearchableIndexScheduler _isIndexingEnabledForActivityType:]
  -[EDSearchableIndexScheduler _budgetTimeFromUserDefaults]
  -[EDSearchableIndexScheduler searchableIndexSchedulable:didIndexForTime:]
  -[EDSearchableIndexScheduler _deferActivitiesIfNecessary]
  -[EDSearchableIndexScheduler _setDataSourceIndexingPermitted:]
  -[EDSearchableIndexScheduler _disableIndexingForActivityType:defer:]
  -[EDSearchableIndexScheduler _enableIndexingForActivityType:]
  -[EDSearchableIndexScheduler deferIndexingForActivityType:]
  -[EDSearchableIndexScheduler _periodicallyCheckForDeferralIfNecessary]
  -[EDSearchableIndexScheduler schedulable]
  -[EDSearchableIndexScheduler isDataSourceIndexingPermitted]
  -[EDSearchableIndexScheduler noActivityIndexingTime]
  -[EDSearchableIndexScheduler maintenanceIndexingTime]
  -[EDSearchableIndexScheduler setBudgetedItemCountRemaining:]
  -[EDSearchableIndexScheduler _logIndexingPowerEventWithIdentifier:additionalEventData:usePersistentLog:]
  -[EDSearchableIndexScheduler setMaintenanceIndexingTime:]
  -[EDSearchableIndexScheduler _stopAllIndexing]
  -[EDSearchableIndexScheduler scheduledDeferralCheck]
  -[EDSearchableIndexScheduler setBudgetedTimeRemaining:]


EDSearchableIndexSubjectTester : NSObject <EDSearchableIndexTesting>
 @property  NSArray *fetchAttributes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDSearchableIndexSubjectTester transformDataForVerification:]
  -[EDSearchableIndexSubjectTester fetchAttributes]
  -[EDSearchableIndexSubjectTester expressionFromDataSamples:]
  -[EDSearchableIndexSubjectTester verifySearchableItem:againstExpectedData:]


EDSearchableIndexUpdates : NSObject <EFPubliclyDescribable>
 @property  NSArray *itemsRequiringIndexing
 @property  NSArray *removedIdentifiers
 @property  NSArray *removedDomainIdentifiers
 @property  BOOL hasUpdates
 @property  NSString *ef_publicDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDSearchableIndexUpdates updates]

  // instance methods
  -[EDSearchableIndexUpdates ef_publicDescription]
  -[EDSearchableIndexUpdates hasUpdates]
  -[EDSearchableIndexUpdates removedDomainIdentifiers]
  -[EDSearchableIndexUpdates setItemsRequiringIndexing:]
  -[EDSearchableIndexUpdates setRemovedDomainIdentifiers:]
  -[EDSearchableIndexUpdates .cxx_destruct]
  -[EDSearchableIndexUpdates setRemovedIdentifiers:]
  -[EDSearchableIndexUpdates itemsRequiringIndexing]
  -[EDSearchableIndexUpdates removedIdentifiers]


EDSearchableIndexVerifier : NSObject <EFLoggable, EFSignpostable>
 @property  NSObject<OS_os_activity> *indexVerificationActivity
 @property  <EDSearchableIndexVerifierDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long signpostID

  // class methods
  +[EDSearchableIndexVerifier signpostLog]
  +[EDSearchableIndexVerifier log]

  // instance methods
  -[EDSearchableIndexVerifier initWithDataSource:]
  -[EDSearchableIndexVerifier setIndexVerificationActivity:]
  -[EDSearchableIndexVerifier dataSource]
  -[EDSearchableIndexVerifier signpostID]
  -[EDSearchableIndexVerifier .cxx_destruct]
  -[EDSearchableIndexVerifier verifyDataSamplesWithCompletionHandler:scheduler:]
  -[EDSearchableIndexVerifier _findMissingTransactionIDs:dataSource:]
  -[EDSearchableIndexVerifier setDataSource:]
  -[EDSearchableIndexVerifier _verifyDataSamples:]
  -[EDSearchableIndexVerifier indexVerificationActivity]
  -[EDSearchableIndexVerifier _addFailingSamples:toResultDictionary:]
  -[EDSearchableIndexVerifier _failingSamples:tester:]
  -[EDSearchableIndexVerifier _missingTransactionIDsFromTransactionIDs:]
  -[EDSearchableIndexVerifier _verifySamples:]


EDSearchableIndexVerificationData : NSObject <NSCopying>
 @property  NSString *subject
 @property  NSArray *toEmailAddresses
 @property  NSString *deleted
 @property  NSNumber *transactionID
 @property  NSNumber *flags
 @property  NSNumber *indexedAsEmptySubject
 @property  NSDate *dateReceived
 @property  NSDictionary *userInfo

  // instance methods
  -[EDSearchableIndexVerificationData subject]
  -[EDSearchableIndexVerificationData setDeleted:]
  -[EDSearchableIndexVerificationData deleted]
  -[EDSearchableIndexVerificationData setUserInfo:]
  -[EDSearchableIndexVerificationData indexedAsEmptySubject]
  -[EDSearchableIndexVerificationData userInfo]
  -[EDSearchableIndexVerificationData setSubject:]
  -[EDSearchableIndexVerificationData transactionID]
  -[EDSearchableIndexVerificationData setFlags:]
  -[EDSearchableIndexVerificationData .cxx_destruct]
  -[EDSearchableIndexVerificationData flags]
  -[EDSearchableIndexVerificationData setIndexedAsEmptySubject:]
  -[EDSearchableIndexVerificationData setToEmailAddresses:]
  -[EDSearchableIndexVerificationData dateReceived]
  -[EDSearchableIndexVerificationData copyWithZone:]
  -[EDSearchableIndexVerificationData toEmailAddresses]
  -[EDSearchableIndexVerificationData setTransactionID:]
  -[EDSearchableIndexVerificationData setDateReceived:]


EDSearchableMessagesIndexReindexTypeUpgradeStep : NSObject <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDSearchableMessagesIndexReindexTypeUpgradeStep runWithConnection:]


EDSenderPersistence : NSObject <EDMessageChangeHookResponder, EDProtectedDatabasePersistenceReconciliationMergeHandler, EDPersistenceDatabaseSchemaProvider>
 @property  EDPersistenceDatabase *database
 @property  EMBlockedSenderManager *blockedSenderManager
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  CNContactStore *contactStore
 @property  EFLazyCache *emailAddressToBucketCache
 @property  EFLazyCache *databaseIDToEmailAddressCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDSenderPersistence tablesAndForeignKeysToResolve:associationsToResolve:]
  +[EDSenderPersistence sendersTableSchema]
  +[EDSenderPersistence senderAddressesTableSchema]
  +[EDSenderPersistence addJoinsForSenderBucketToSelectStatement:withSourceAddressColumn:]

  // instance methods
  -[EDSenderPersistence test_tearDown]
  -[EDSenderPersistence setContactStore:]
  -[EDSenderPersistence _addressesToDatabaseIDsForSelect:addressColumns:connection:error:]
  -[EDSenderPersistence handleReconciliationMergeErrorForTable:columnName:statement:journalRowID:protectedRowID:connection:rowsUpdated:error:]
  -[EDSenderPersistence hookRegistry]
  -[EDSenderPersistence _bucketForSenderWithDatabaseID:connection:]
  -[EDSenderPersistence emailAddressToBucketCache]
  -[EDSenderPersistence _addressesToDatabaseIDsForSimpleAddresses:connection:]
  -[EDSenderPersistence _newlyUnblockedAddressesForBlockedAddressDatabaseIDs:connection:]
  -[EDSenderPersistence _addressesGroupedByContactForAddresses:unmatchedAddresses:otherAddressesByContact:]
  -[EDSenderPersistence _addNewSenderWithAddressIDs:contactIdentifier:toBucket:connection:senderDatabaseID:]
  -[EDSenderPersistence .cxx_destruct]
  -[EDSenderPersistence moveSenderWithEmailAddresses:toBucket:]
  -[EDSenderPersistence _invalidateCaches]
  -[EDSenderPersistence _moveAddressesFromSentMessagesToPrimaryForMessages:]
  -[EDSenderPersistence persistenceDidAddMessages:generationWindow:]
  -[EDSenderPersistence databaseIDToEmailAddressCache]
  -[EDSenderPersistence _blockOrUnblockSendersForAddresses:block:blockedAddressDatabaseIDs:connection:addressesToUpdate:]
  -[EDSenderPersistence _moveSenderWithEmailAddresses:toBucket:sync:userInitiated:]
  -[EDSenderPersistence initWithDatabase:blockedSenderManager:hookRegistry:contactStore:]
  -[EDSenderPersistence scheduleRecurringActivity]
  -[EDSenderPersistence _reloadBlockedSendersWithAddresses:]
  -[EDSenderPersistence database]
  -[EDSenderPersistence _addressIDsGroupedByContactsForAddressesByContact:withConnection:addressesByID:]
  -[EDSenderPersistence bucketForSenderAddress:]
  -[EDSenderPersistence _newlyBlockedAddressesForBlockedAddressDatabaseIDs:connection:]
  -[EDSenderPersistence _updateBlockedSendersWithBlockedSenderAddresses:newlyBlockedAddresses:newlyUnblockedAddresses:]
  -[EDSenderPersistence _moveSenderWithDatabaseID:toBucket:connection:]
  -[EDSenderPersistence _setIsBlocked:forAddresses:]
  -[EDSenderPersistence _addNewSendersForEmailAddresses:toBucket:connection:newSenders:]
  -[EDSenderPersistence _bucketForSenderAddress:]
  -[EDSenderPersistence removeAddresses:fromSender:]
  -[EDSenderPersistence _simpleAddressesForAddresses:]
  -[EDSenderPersistence _addressIDsForAddresses:connection:]
  -[EDSenderPersistence contactStore]
  -[EDSenderPersistence _addAddressesWithDatabaseIDs:toSenderWithDatabaseID:connection:error:]
  -[EDSenderPersistence relevantSendersForSearch]
  -[EDSenderPersistence _contactIdentifierForSenderWithDatabaseID:connection:]
  -[EDSenderPersistence addAddresses:toSender:]
  -[EDSenderPersistence blockedSenderManager]
  -[EDSenderPersistence _moveSenderWithSimpleEmailAddresses:toBucket:sync:userInitiated:transactionGeneration:]
  -[EDSenderPersistence _emailAddressForDatabaseID:connection:]
  -[EDSenderPersistence _addressesGroupedBySimpleAddressForAddresses:]
  -[EDSenderPersistence _invalidateCachesForAddresses:]
  -[EDSenderPersistence _combineDictionary:withDictionary:]
  -[EDSenderPersistence _addNewSender:toBucket:connection:]
  -[EDSenderPersistence _blockedSendersDidChange:]


EDSenderRepository : NSObject
 @property  EDSenderPersistence *senderPersistence
 @property  <EFScheduler> *persistenceScheduler

  // instance methods
  -[EDSenderRepository .cxx_destruct]
  -[EDSenderRepository senderPersistence]
  -[EDSenderRepository simpleAddressesForRelevantSendersForSearchWithCompletionHandler:]
  -[EDSenderRepository initWithSenderPersistence:]
  -[EDSenderRepository persistenceScheduler]


EDSendLaterPersistence : NSObject <EFLoggable, EDPersistenceDatabaseSchemaProvider>
 @property  EDPersistenceDatabase *database
 @property  NSObject<OS_dispatch_queue> *writeQueue
 @property  <EDMessageChangeHookResponder> *hookResponder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDSendLaterPersistence log]
  +[EDSendLaterPersistence tablesAndForeignKeysToResolve:associationsToResolve:]

  // instance methods
  -[EDSendLaterPersistence setDatabase:]
  -[EDSendLaterPersistence .cxx_destruct]
  -[EDSendLaterPersistence database]
  -[EDSendLaterPersistence hookResponder]
  -[EDSendLaterPersistence writeQueue]
  -[EDSendLaterPersistence setWriteQueue:]
  -[EDSendLaterPersistence initWithDatabase:hookResponder:]
  -[EDSendLaterPersistence persistSendLaterForMessages:date:]


EDDefaultSendLaterUpdateControllerAlarmDateProvider : NSObject <EDSendLaterUpdateControllerAlarmDateProvider>
 @property  NSDate *nextDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDDefaultSendLaterUpdateControllerAlarmDateProvider nextDate]
  -[EDDefaultSendLaterUpdateControllerAlarmDateProvider setNextDate:]


EDSendLaterUpdateController : NSObject <EFLoggable, EDMessageChangeHookResponder>
 @property  EDMessagePersistence *messagePersistence
 @property  EDOutgoingMessageRepository *outgoingRepository
 @property  NSDate *nextAlarmDate
 @property  <EDMessageChangeHookResponder> *hookResponder
 @property  EDQueryCreator *sendLaterQueryCreator
 @property  <EDSendLaterUpdateControllerAlarmDateProvider> *alarmDateProvider
 @property  EFXPCAlarm *xpcAlarm
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDSendLaterUpdateController log]

  // instance methods
  -[EDSendLaterUpdateController persistenceDidUpdateSendLaterDate:messages:generationWindow:]
  -[EDSendLaterUpdateController setXpcAlarm:]
  -[EDSendLaterUpdateController sendLaterQueryCreator]
  -[EDSendLaterUpdateController _updateAlarmUpdatedMessages:sendLaterDate:]
  -[EDSendLaterUpdateController outgoingRepository]
  -[EDSendLaterUpdateController setSendLaterQueryCreator:]
  -[EDSendLaterUpdateController alarmDateProvider]
  -[EDSendLaterUpdateController .cxx_destruct]
  -[EDSendLaterUpdateController nextAlarmDate]
  -[EDSendLaterUpdateController setNextAlarmDate:]
  -[EDSendLaterUpdateController xpcAlarm]
  -[EDSendLaterUpdateController _alarmFired]
  -[EDSendLaterUpdateController initWithHookRegistry:messagePersistence:outgoingRepository:alarmScheduler:]
  -[EDSendLaterUpdateController messagePersistence]
  -[EDSendLaterUpdateController hookResponder]
  -[EDSendLaterUpdateController resetSendLaterAlarmIfNeeded]


EDServer : NSObject <NSXPCListenerDelegate, EDServerRemoteClientsProvider, EFLoggable, EDReconciliationQueryProvider>
 @property  NSXPCListener *listener
 @property  EFLocked *connectedClients
 @property  EDDaemonInterfaceFactory *daemonInterfaceFactory
 @property  NSXPCListenerEndpoint *serverXPCEndpoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *remoteClients

  // class methods
  +[EDServer log]

  // instance methods
  -[EDServer test_tearDown]
  -[EDServer connectedClients]
  -[EDServer initWithDaemonInterfaceFactory:]
  -[EDServer remoteClients]
  -[EDServer .cxx_destruct]
  -[EDServer initWithDaemonInterfaceFactory:listener:]
  -[EDServer setListener:]
  -[EDServer removeRemoteClient:]
  -[EDServer serverXPCEndpoint]
  -[EDServer setDaemonInterfaceFactory:]
  -[EDServer addRemoteClient:]
  -[EDServer start]
  -[EDServer daemonInterfaceFactory]
  -[EDServer messageReconciliationQueries]
  -[EDServer listener]
  -[EDServer threadReconciliationQueries]
  -[EDServer listener:shouldAcceptNewConnection:]


EDServerMessagePersistenceFactory : NSObject
 @property  EDPersistenceDatabase *database
 @property  EDGmailLabelPersistence *gmailLabelPersistence

  // instance methods
  -[EDServerMessagePersistenceFactory .cxx_destruct]
  -[EDServerMessagePersistenceFactory database]
  -[EDServerMessagePersistenceFactory initWithDatabase:gmailLabelPersistence:]
  -[EDServerMessagePersistenceFactory init]
  -[EDServerMessagePersistenceFactory gmailLabelPersistence]
  -[EDServerMessagePersistenceFactory serverMessagePersistenceForMailboxURL:]


EDServerMessagePersistence : NSObject <EFLoggable>
 @property  EDPersistenceDatabase *database
 @property  EDGmailLabelPersistence *gmailLabelPersistence
 @property  long long mailboxID
 @property  BOOL useNumericSearch
 @property  unsigned long messageCount
 @property  unsigned long unreadMessageCount
 @property  unsigned long undeletedMessageCount
 @property  unsigned int maximumIMAPUID
 @property  unsigned int minimumIMAPUID
 @property  BOOL supportsLabels
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDServerMessagePersistence log]
  +[EDServerMessagePersistence tablesAndForeignKeysToResolve:associationsToResolve:]
  +[EDServerMessagePersistence serverMessagesTableSchema]
  +[EDServerMessagePersistence serverLabelsTableSchema]

  // instance methods
  -[EDServerMessagePersistence .cxx_destruct]
  -[EDServerMessagePersistence database]
  -[EDServerMessagePersistence init]
  -[EDServerMessagePersistence messageCount]
  -[EDServerMessagePersistence unreadMessageCount]
  -[EDServerMessagePersistence gmailLabelPersistence]
  -[EDServerMessagePersistence maximumIMAPUID]
  -[EDServerMessagePersistence deleteAllServerMessagesInMailbox]
  -[EDServerMessagePersistence mailboxID]
  -[EDServerMessagePersistence applySortedFlags:]
  -[EDServerMessagePersistence minimumIMAPUID]
  -[EDServerMessagePersistence enumerateUIDsInRanges:withBlock:]
  -[EDServerMessagePersistence serverMessagesForIMAPUIDs:limit:returnLastEntries:]
  -[EDServerMessagePersistence initWithDatabase:gmailLabelPersistence:mailboxID:useNumericSearch:supportsLabels:]
  -[EDServerMessagePersistence undeletedMessageCount]
  -[EDServerMessagePersistence serverMessagesForRemoteIDs:]
  -[EDServerMessagePersistence clearRemoteIDsForAllMessages]
  -[EDServerMessagePersistence deleteAllClearedUIDMessages]
  -[EDServerMessagePersistence serverMessagesForMessageIDHeaders:]
  -[EDServerMessagePersistence assignUIDsToServerMessages:]
  -[EDServerMessagePersistence _serverMessagesWithWhereClause:limitClause:returnLastEntries:]
  -[EDServerMessagePersistence _serverMessageForRow:connection:]
  -[EDServerMessagePersistence addServerMessage:invalidMessage:duplicateRemoteID:]
  -[EDServerMessagePersistence attachMessage:toServerMessageWithRemoteID:]
  -[EDServerMessagePersistence deleteServerMessagesWithRemoteIDs:]
  -[EDServerMessagePersistence applyFlagChange:toMessagesWithRemoteIDs:]
  -[EDServerMessagePersistence addLabels:removeLabels:toMessagesWithRemoteIDs:]
  -[EDServerMessagePersistence _addLabels:removeLabels:forUID:connection:]
  -[EDServerMessagePersistence _remoteIDStringForRemoteIDArray:]
  -[EDServerMessagePersistence supportsLabels]
  -[EDServerMessagePersistence useNumericSearch]


EDExistingMessageWithMessageIDHeader : NSObject
 @property  ECAngleBracketIDHash *messageIDHash
 @property  ECServerMessage *serverMessage
 @property  long long messagePersistentID

  // instance methods
  -[EDExistingMessageWithMessageIDHeader .cxx_destruct]
  -[EDExistingMessageWithMessageIDHeader messagePersistentID]
  -[EDExistingMessageWithMessageIDHeader messageIDHash]
  -[EDExistingMessageWithMessageIDHeader serverMessage]
  -[EDExistingMessageWithMessageIDHeader initWithMessageIDHash:serverMessage:messagePersistentID:]


EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep : NSObject <EFLoggable, EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep log]
  +[EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep runWithConnection:]
  +[EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep runWithConnection:dataProvider:]
  +[EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep createNewAttachmentTableWithConnection:]
  +[EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep deleteAttachmentsTableWithConnection:]
  +[EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep deleteMessageAttachmentsTableWithConnection:]
  +[EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep createMessageAttachmentsTableWithConnection:]
  +[EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep createNewSearchableAttachmentsTable:]
  +[EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep insertIntoMessageAttachmentTableGlobalMessageID:attachmentMetadata:attachmentID:connection:]
  +[EDSkyAddMessageAttachmentsAndMigrateAttachmentsTableUpgradeStep insertAttachmentIntoAttachmentTableWithAttachmentMetadata:connection:]


EDSmartSortSuggestionsInterface : NSObject <EFLoggable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDSmartSortSuggestionsInterface log]
  +[EDSmartSortSuggestionsInterface topSalienciesForMailboxID:limit:error:]


EDSubjectTokenizer : NSObject
  // class methods
  +[EDSubjectTokenizer tokenizeString:]


EDSyncableSettings : NSObject
 @property  @? proxyChangeHandler

  // instance methods
  -[EDSyncableSettings _storeChangedExternally:]
  -[EDSyncableSettings dealloc]
  -[EDSyncableSettings .cxx_destruct]
  -[EDSyncableSettings init]
  -[EDSyncableSettings initWithDefaults:store:]
  -[EDSyncableSettings beginSyncing]
  -[EDSyncableSettings observeChangesForKey:cloudKey:conflictResolver:]
  -[EDSyncableSettings proxyChangeHandler]
  -[EDSyncableSettings setProxyChangeHandler:]


EDTableMetadataPersistence : NSObject <EDPersistenceDatabaseSchemaProvider>
  // class methods
  +[EDTableMetadataPersistence updateLargestDeletedRowID:forTableName:withConnection:]
  +[EDTableMetadataPersistence tablesAndForeignKeysToResolve:associationsToResolve:]
  +[EDTableMetadataPersistence largestDeletedRowIDForTableName:withConnection:]


EDTaskScheduler : NSObject
 @property  NSObject<OS_dispatch_source> *timerSource
 @property  NSObject<OS_dispatch_queue> *executionQueue
 @property  double backOffInterval
 @property  BOOL isReachable
 @property  BOOL pendingWaitingForNetwork
 @property  @? task
 @property  @? canceledCallback
 @property  @? work
 @property  double initialDelay
 @property  double maxBackOffInterval
 @property  double backoffMultiplier
 @property  BOOL observeForNetworkReachability

  // instance methods
  -[EDTaskScheduler setInitialDelay:]
  -[EDTaskScheduler observeForNetworkReachability]
  -[EDTaskScheduler setTask:]
  -[EDTaskScheduler backOffInterval]
  -[EDTaskScheduler initialDelay]
  -[EDTaskScheduler isReachable]
  -[EDTaskScheduler dealloc]
  -[EDTaskScheduler setTimerSource:]
  -[EDTaskScheduler setIsReachable:]
  -[EDTaskScheduler .cxx_destruct]
  -[EDTaskScheduler _incrementBackoffInterval]
  -[EDTaskScheduler _cancelTimer]
  -[EDTaskScheduler setBackOffInterval:]
  -[EDTaskScheduler setCanceledCallback:]
  -[EDTaskScheduler setWork:]
  -[EDTaskScheduler _startObservingNetworkReachability]
  -[EDTaskScheduler setPendingWaitingForNetwork:]
  -[EDTaskScheduler maxBackOffInterval]
  -[EDTaskScheduler _reportReachabilityChange:]
  -[EDTaskScheduler executionQueue]
  -[EDTaskScheduler _stopObservingNetworkReachability]
  -[EDTaskScheduler _doScheduleTask:canceledCallback:]
  -[EDTaskScheduler backoffMultiplier]
  -[EDTaskScheduler setExecutionQueue:]
  -[EDTaskScheduler timerSource]
  -[EDTaskScheduler initWithExecutionQueue:]
  -[EDTaskScheduler pendingWaitingForNetwork]
  -[EDTaskScheduler rescheduleTask]
  -[EDTaskScheduler task]
  -[EDTaskScheduler setBackoffMultiplier:]
  -[EDTaskScheduler scheduleTask:canceledCallback:]
  -[EDTaskScheduler setObserveForNetworkReachability:]
  -[EDTaskScheduler setMaxBackOffInterval:]
  -[EDTaskScheduler canceledCallback]
  -[EDTaskScheduler work]


EDThreadMigrator : NSObject <EFLoggable>
 @property  EMThreadScope *threadScope
 @property  EFLocked *state
 @property  <EFScheduler> *workScheduler
 @property  EDThreadPersistence *threadPersistence
 @property  EDInMemoryThreadQueryHandler *queryHandler
 @property  <EDThreadMigratorDelegate> *delegate
 @property  double threadFinalizationInterval
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDThreadMigrator log]

  // instance methods
  -[EDThreadMigrator queryHandler]
  -[EDThreadMigrator threadPersistence]
  -[EDThreadMigrator delegate]
  -[EDThreadMigrator state]
  -[EDThreadMigrator reset]
  -[EDThreadMigrator .cxx_destruct]
  -[EDThreadMigrator workScheduler]
  -[EDThreadMigrator start]
  -[EDThreadMigrator threadScope]
  -[EDThreadMigrator cancel]
  -[EDThreadMigrator initWithThreadScope:threadPersistence:queryHandler:delegate:]
  -[EDThreadMigrator _failMigration]
  -[EDThreadMigrator _migrateNextBatchWithGeneration:]
  -[EDThreadMigrator _scheduleFinalizationForBatchedObjectIDs:withGeneration:forDelete:]
  -[EDThreadMigrator _finishMigrating]
  -[EDThreadMigrator addObjectIDsToMigrate:]
  -[EDThreadMigrator changeObjectIDsToMigrate:]
  -[EDThreadMigrator deleteObjectIDsToMigrate:]
  -[EDThreadMigrator threadFinalizationInterval]
  -[EDThreadMigrator setThreadFinalizationInterval:]


_EDThreadMigrationState : NSObject
 @property  unsigned long state
 @property  unsigned long generation
 @property  unsigned long unmigratedCount
 @property  BOOL isEmpty
 @property  BOOL isFullyMigrated

  // instance methods
  -[_EDThreadMigrationState nextBatch]
  -[_EDThreadMigrationState generation]
  -[_EDThreadMigrationState state]
  -[_EDThreadMigrationState reset]
  -[_EDThreadMigrationState .cxx_destruct]
  -[_EDThreadMigrationState isEmpty]
  -[_EDThreadMigrationState cancel]
  -[_EDThreadMigrationState init]
  -[_EDThreadMigrationState setState:]
  -[_EDThreadMigrationState fail]
  -[_EDThreadMigrationState removeObjectIDs:]
  -[_EDThreadMigrationState unmigratedCount]
  -[_EDThreadMigrationState isFullyMigrated]
  -[_EDThreadMigrationState _removeAllObjectIDs]
  -[_EDThreadMigrationState isRecentlyMigrated:]
  -[_EDThreadMigrationState addObjectIDs:]
  -[_EDThreadMigrationState removeMigratedObjectIDs:]
  -[_EDThreadMigrationState addDeletedObjectIDs:]
  -[_EDThreadMigrationState removeDeletedObjectIDs:]
  -[_EDThreadMigrationState verifyIsMigratingGeneration:andIsInState:logIdentifier:logAction:logCount:]
  -[_EDThreadMigrationState verifyIsMigratingGeneration:andIsInState:orState:logIdentifier:logAction:logCount:]
  -[_EDThreadMigrationState _verifyIsMigratingGeneration:stateVerifier:logIdentifier:logAction:logCount:]


EDThreadPersistence : NSObject <EDDatabaseChangeHookResponder, EDAccountChangeHookResponder, EDMailboxChangeHookResponder, EDMessageChangeHookResponder, EDProtectedDataReconciliationHookResponder, EDSenderBucketChangeHookResponder, EDThreadScopeManagerDataSource, EFSignpostable, EDPersistenceDatabaseSchemaProvider, EFLoggable>
 @property  EDMessagePersistence *messagePersistence
 @property  EDPersistenceDatabase *database
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  <EMVIPManager> *vipManager
 @property  EMBlockedSenderManager *blockedSenderManager
 @property  EDThreadScopeManager *threadScopeManager
 @property  <EFScheduler> *consistencyCheckScheduler
 @property  <EFScheduler> *threadRecomputationScheduler
 @property  EFDebouncer *threadRecomputationDebouncer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long signpostID

  // class methods
  +[EDThreadPersistence signpostLog]
  +[EDThreadPersistence log]
  +[EDThreadPersistence tablesAndForeignKeysToResolve:associationsToResolve:]
  +[EDThreadPersistence threadSendersTableSchema]
  +[EDThreadPersistence threadRecipientsTableSchema]
  +[EDThreadPersistence threadScopesTableSchema]
  +[EDThreadPersistence threadsTableSchema]
  +[EDThreadPersistence threadMailboxesTableSchema]

  // instance methods
  -[EDThreadPersistence test_tearDown]
  -[EDThreadPersistence persistenceDidDeleteMessages:generationWindow:]
  -[EDThreadPersistence setThreadRecomputationScheduler:]
  -[EDThreadPersistence _databaseIDForThreadObjectID:]
  -[EDThreadPersistence _wrappedMessageForPersistedMessages:threadScope:messageFilter:]
  -[EDThreadPersistence persistenceIsAddingMailboxWithDatabaseID:objectID:generationWindow:]
  -[EDThreadPersistence _messageActiveFollowUpExpressionForSentMailboxObjectIDs:]
  -[EDThreadPersistence _persistedMessagesForMailboxScope:messageExpression:]
  -[EDThreadPersistence resetThreadScopesForDeactivatedAccount:]
  -[EDThreadPersistence oldestThreadObjectIDForMailbox:threadScope:]
  -[EDThreadPersistence persistenceDidChangeGlobalMessageID:orConversationID:message:generationWindow:]
  -[EDThreadPersistence signpostID]
  -[EDThreadPersistence persistenceDidUpdateFollowUpForMessages:generationWindow:]
  -[EDThreadPersistence _deleteSendersFromThreadWithDatabaseID:messageThreadExpression:]
  -[EDThreadPersistence beginMigratingThreadScope:]
  -[EDThreadPersistence _messageMailboxesExpressionForMailboxScope:]
  -[EDThreadPersistence threadObjectIDsByNextExistingForThreadObjectIDs:forSortDescriptors:excluding:]
  -[EDThreadPersistence _wrappedMessagesByThreadScopeForPersistedMessages:messageFilter:]
  -[EDThreadPersistence hookRegistry]
  -[EDThreadPersistence _threadScopedToResetForActivatedAccount:]
  -[EDThreadPersistence threadScopesByDatabaseID]
  -[EDThreadPersistence _deleteRecipientsOfType:fromThreadWithDatabaseID:messageThreadExpression:]
  -[EDThreadPersistence _getIndividualMailboxScopes:unifiedMailboxThreadScopes:forAccount:]
  -[EDThreadPersistence _deleteWrappedMessages:fromThreadWithObjectID:threadScopeDatabaseID:generationWindow:]
  -[EDThreadPersistence _enumerateThreadObjectIDsForThreadScope:filterClause:sortDescriptors:batchBlock:]
  -[EDThreadPersistence _writeThreadedMessages:withChangedKeyPaths:journaled:generationWindow:]
  -[EDThreadPersistence threadForObjectID:originatingQuery:error:]
  -[EDThreadPersistence persistenceDidAddAddresses:toSender:generation:]
  -[EDThreadPersistence nextExistingThreadObjectIDForThreadObjectID:forSortDescriptors:excluding:]
  -[EDThreadPersistence initWithMessagePersistence:database:hookRegistry:vipManager:blockedSenderManager:]
  -[EDThreadPersistence _expressionForThreadScope:]
  -[EDThreadPersistence _addKeyPathsForBasicPropertiesChangeToKeyPaths:]
  -[EDThreadPersistence endMigratingThreadScope:]
  -[EDThreadPersistence _updateNewestReadMessageWithWrappedMessage:threadExpression:]
  -[EDThreadPersistence _messageThreadExpressionForThreadScope:objectIDs:]
  -[EDThreadPersistence _sendersForThreadDatabaseID:senderBucket:]
  -[EDThreadPersistence .cxx_destruct]
  -[EDThreadPersistence _updateThreadForDeleteWithObjectID:threadScopeDatabaseID:generationWindow:]
  -[EDThreadPersistence _messageFilterExpressionForFilterPredicate:]
  -[EDThreadPersistence resetThreadScopesForMailboxScope:]
  -[EDThreadPersistence _threadDatabaseIDExpressionForThreadScopeDatabaseID:conversation:]
  -[EDThreadPersistence _recalculateDisplayMessageForThreadObjectID:threadScopeDatabaseID:]
  -[EDThreadPersistence setThreadRecomputationDebouncer:]
  -[EDThreadPersistence persistenceDidAddMessages:generationWindow:]
  -[EDThreadPersistence setPriorityForDisplayMessageSenderForThreadObjectID:]
  -[EDThreadPersistence persistenceIsDeletingAllMessagesInMailboxWithURL:generationWindow:]
  -[EDThreadPersistence _isThreadScopePrecomputed:shouldMigrate:]
  -[EDThreadPersistence _recipientsOfType:forThreadDatabaseID:]
  -[EDThreadPersistence deleteThreadsWithObjectIDs:]
  -[EDThreadPersistence _addThreadScopeToDatabase:withMailboxDatabaseID:filterPredicate:needsUpdate:lastViewedDate:updateThreadScopeManager:connection:]
  -[EDThreadPersistence persistenceDidDeleteAllMessagesInMailboxesWithURLs:generationWindow:]
  -[EDThreadPersistence persistenceIsChangingFlags:messages:generationWindow:]
  -[EDThreadPersistence _reportSenderBucketChangeForThreadsWithSenderAddresses:generation:]
  -[EDThreadPersistence threadScopeManager:evictThreadScopesWithDatabaseIDs:completionBlock:]
  -[EDThreadPersistence _addKeyPathsForDisplayMessageChangeToKeyPaths:]
  -[EDThreadPersistence _messageThreadExpressionForThreadObjectID:]
  -[EDThreadPersistence _recalculateNewestReadMessageForThreadObjectID:threadScopeDatabaseID:]
  -[EDThreadPersistence threadRecomputationScheduler]
  -[EDThreadPersistence _countMessagesForExpression:]
  -[EDThreadPersistence _threadQueryForThreadScope:]
  -[EDThreadPersistence _senderAddressesExpressionForMessages:]
  -[EDThreadPersistence _persistenceIsDeletingMessages:generationWindow:]
  -[EDThreadPersistence persistenceDidRemoveAddresses:fromSender:generation:]
  -[EDThreadPersistence _persistedMessagesByPossibleThreadScopeForPersistedMessages:]
  -[EDThreadPersistence _mailboxScopeForThreadScope:andFilterPredicate:]
  -[EDThreadPersistence _addressesFromMessageAddressesStatement:]
  -[EDThreadPersistence _inactiveMailboxDatabaseIDsForMailboxScope:forThreadScopeDatabaseID:]
  -[EDThreadPersistence persistenceDidChangeSenderBucketForSender:generation:]
  -[EDThreadPersistence _flagColorsFromRow:]
  -[EDThreadPersistence _iterateWrappedMessagesByConversationForPersistedMessages:block:]
  -[EDThreadPersistence verifyConsistencyOfThreadScope:]
  -[EDThreadPersistence threadScopeMatcherForActivatedAccount:]
  -[EDThreadPersistence _mailboxDatabaseIDsForWrappedMessages:]
  -[EDThreadPersistence _recipientAddressesExpressionForRecipientType:messages:]
  -[EDThreadPersistence addThreadScopeToDatabase:needsUpdate:lastViewedDate:]
  -[EDThreadPersistence database]
  -[EDThreadPersistence _resetThreadScope:withDatabaseID:]
  -[EDThreadPersistence _nonJournaledSubjectForThreadWithObjectID:connection:]
  -[EDThreadPersistence statisticsForThreadScopesWithDatabaseIDs:]
  -[EDThreadPersistence _scheduleRecomputationForThread:reason:]
  -[EDThreadPersistence threadScopeManager:gatherStatisticsForThreadScopesWithDatabaseIDs:block:]
  -[EDThreadPersistence threadScopeManager]
  -[EDThreadPersistence persistenceDidUpdateDisplayDateForMessages:changeIsRemote:generation:]
  -[EDThreadPersistence _messageMailboxesExpressionForMailboxType:]
  -[EDThreadPersistence threadScopeManager:populateThreadScopesWithBlock:]
  -[EDThreadPersistence addThreads:]
  -[EDThreadPersistence _threadForWrappedMessages:objectID:]
  -[EDThreadPersistence _mailboxesForThreadDatabaseID:]
  -[EDThreadPersistence _messagesAreJournaledForThreadWithObjectID:]
  -[EDThreadPersistence messagePersistence]
  -[EDThreadPersistence threadScopeManager:mailboxScopeExists:]
  -[EDThreadPersistence threadObjectIDsForThreadScope:sortDescriptors:initialBatchSize:journaledObjectIDs:batchBlock:]
  -[EDThreadPersistence _recipientsOfType:fromMessagesForThreadObjectID:]
  -[EDThreadPersistence _filteredPersistedMessagesForPersistedMessages:]
  -[EDThreadPersistence persistenceIsAddingMessages:journaled:generationWindow:]
  -[EDThreadPersistence persistenceIsDeletingMessages:generationWindow:]
  -[EDThreadPersistence _deleteMailboxesFromWrappedMessages:fromThreadWithDatabaseID:messageThreadExpression:]
  -[EDThreadPersistence consistencyCheckScheduler]
  -[EDThreadPersistence _addOrderByToThreadSelect:forSortDescriptors:]
  -[EDThreadPersistence persistenceIsUpdatingDisplayDateForMessage:fromDate:generation:]
  -[EDThreadPersistence _upsertForThreadsWithThreadScopeDatabaseID:conversation:]
  -[EDThreadPersistence _comparisonExpressionForSortDescriptors:conversationID:threadExpression:threadScopeDatabaseID:connection:]
  -[EDThreadPersistence threadScopeManager:isValidMailboxObjectID:]
  -[EDThreadPersistence persistenceStateForThreadScope:]
  -[EDThreadPersistence _columnForSortDescriptor:]
  -[EDThreadPersistence vipManager]
  -[EDThreadPersistence _threadExpressionForThreadScopeDatabaseID:conversation:]
  -[EDThreadPersistence _iterateWrappedMessagesByConversationForPersistedMessages:messageFilter:writeBlock:]
  -[EDThreadPersistence _persistenceIsChangingFlags:messages:generationWindow:]
  -[EDThreadPersistence _sendersFromMessagesForThreadObjectID:]
  -[EDThreadPersistence _addedMailboxObjectIDsForActivatedAccount:]
  -[EDThreadPersistence persistenceDidChangeReadLaterDate:messages:changeIsRemote:generationWindow:]
  -[EDThreadPersistence persistenceIsChangingConversationID:messages:generationWindow:]
  -[EDThreadPersistence blockedSenderManager]
  -[EDThreadPersistence _addressesFromSelectStatement:additionalRowHandling:]
  -[EDThreadPersistence _addThreadScopeToDatabase:needsUpdate:lastViewedDate:updateThreadScopeManager:]
  -[EDThreadPersistence persistenceDidChangeFlags:messages:generationWindow:]
  -[EDThreadPersistence _messageMailboxesExpressionForMailboxObjectIDs:]
  -[EDThreadPersistence _messageThreadExpressionForThreadScope:conversationExpression:]
  -[EDThreadPersistence _updateBasicPropertiesAfterDeleteForThreadObjectID:threadScopeDatabaseID:]
  -[EDThreadPersistence _statementForOldestThreadInMailbox:threadScope:createMailboxDatabaseIDIfNecessary:]
  -[EDThreadPersistence setNeedsUpdateForThreadScope:]
  -[EDThreadPersistence resetThreadScopedForActivatedAccount:]
  -[EDThreadPersistence updateLastViewedDateForThreadScope:]
  -[EDThreadPersistence persistenceIsInitializingDatabaseWithConnection:]
  -[EDThreadPersistence _enumerateThreadScopesUsingBlock:]
  -[EDThreadPersistence _recomputeThreads]
  -[EDThreadPersistence _persistenceIsChangingFlags:wrappedMessages:threadObjectID:threadScopeDatabaseID:]
  -[EDThreadPersistence persistenceDidUpdateProperties:message:generationWindow:]
  -[EDThreadPersistence changeForThreadWithObjectID:changedKeyPaths:]
  -[EDThreadPersistence threadRecomputationDebouncer]
  -[EDThreadPersistence _addPersistedMessages:journaled:generationWindow:]
  -[EDThreadPersistence _addThreadScopeToDatabaseWithMailboxType:filterPredicate:needsUpdate:lastViewedDate:connection:]


_EDThreadPersistence_ThreadMessages : NSObject
 @property  _EDThreadPersistence_SQLHelper *sqlHelper
 @property  EDMessagePersistence *messagePersistence
 @property  long long threadScopeDatabaseID
 @property  EMThreadObjectID *threadObjectID
 @property  NSArray *wrappedMessages
 @property  EMThread *thread

  // instance methods
  -[_EDThreadPersistence_ThreadMessages thread]
  -[_EDThreadPersistence_ThreadMessages .cxx_destruct]
  -[_EDThreadPersistence_ThreadMessages messagePersistence]
  -[_EDThreadPersistence_ThreadMessages initWithSQLHelper:messagePersistence:threadScopeDatabaseID:threadObjectID:wrappedMessages:]
  -[_EDThreadPersistence_ThreadMessages _threadQuery]
  -[_EDThreadPersistence_ThreadMessages addThreadReplacingExisting:journaled:]
  -[_EDThreadPersistence_ThreadMessages updateThreadTableWithJournaled:]
  -[_EDThreadPersistence_ThreadMessages _newestUnreadWrappedMessagesWithNewestReadWrappedMessage:]
  -[_EDThreadPersistence_ThreadMessages _displayWrappedMessageWithNewestReadWrappedMessage:]
  -[_EDThreadPersistence_ThreadMessages _iterateNewestUnreadWrappedMessagesInWrappedMessages:iteratorBlock:]
  -[_EDThreadPersistence_ThreadMessages threadScopeDatabaseID]
  -[_EDThreadPersistence_ThreadMessages threadObjectID]
  -[_EDThreadPersistence_ThreadMessages wrappedMessages]
  -[_EDThreadPersistence_ThreadMessages sqlHelper]


_EDThreadPersistence_PersistedThread : NSObject
 @property  _EDThreadPersistence_ThreadMessages *messages
 @property  long long threadDatabaseID
 @property  _EDThreadPersistence_SQLHelper *sqlHelper
 @property  EDMessagePersistence *messagePersistence
 @property  long long threadScopeDatabaseID
 @property  EMThreadObjectID *threadObjectID
 @property  NSArray *wrappedMessages
 @property  EMThread *thread

  // instance methods
  -[_EDThreadPersistence_PersistedThread thread]
  -[_EDThreadPersistence_PersistedThread messages]
  -[_EDThreadPersistence_PersistedThread .cxx_destruct]
  -[_EDThreadPersistence_PersistedThread messagePersistence]
  -[_EDThreadPersistence_PersistedThread threadScopeDatabaseID]
  -[_EDThreadPersistence_PersistedThread threadObjectID]
  -[_EDThreadPersistence_PersistedThread wrappedMessages]
  -[_EDThreadPersistence_PersistedThread sqlHelper]
  -[_EDThreadPersistence_PersistedThread initWithMessages:threadDatabaseID:]
  -[_EDThreadPersistence_PersistedThread updateNewestReadAndDisplayMessage]
  -[_EDThreadPersistence_PersistedThread updateNewestReadMessage:]
  -[_EDThreadPersistence_PersistedThread updateDisplayMessageWithUnreadWrappedMessages:]
  -[_EDThreadPersistence_PersistedThread addKeyPathsForDisplayMessageChangeToKeyPaths:]
  -[_EDThreadPersistence_PersistedThread addMailboxes]
  -[_EDThreadPersistence_PersistedThread _mailboxDatabaseIDsForWrappedMessages]
  -[_EDThreadPersistence_PersistedThread addSenders]
  -[_EDThreadPersistence_PersistedThread senderDatabaseIDsAndDates]
  -[_EDThreadPersistence_PersistedThread addSenders:]
  -[_EDThreadPersistence_PersistedThread setPriorityForDisplayMessageSender]
  -[_EDThreadPersistence_PersistedThread addRecipientsForType:]
  -[_EDThreadPersistence_PersistedThread recipientDatabaseIDsAndDatesForRecipientType:]
  -[_EDThreadPersistence_PersistedThread addRecipients:ofType:]
  -[_EDThreadPersistence_PersistedThread _ensureTempMessagesView]
  -[_EDThreadPersistence_PersistedThread dropTemporaryView]
  -[_EDThreadPersistence_PersistedThread threadDatabaseID]


_EDThreadPersistence_ThreadScope : NSObject
 @property  <EFSQLExpressable> *threadScopeExpression
 @property  _EDThreadPersistence_SQLHelper *sqlHelper
 @property  EDMessagePersistence *messagePersistence
 @property  long long threadScopeDatabaseID

  // instance methods
  -[_EDThreadPersistence_ThreadScope .cxx_destruct]
  -[_EDThreadPersistence_ThreadScope messagePersistence]
  -[_EDThreadPersistence_ThreadScope threadScopeDatabaseID]
  -[_EDThreadPersistence_ThreadScope sqlHelper]
  -[_EDThreadPersistence_ThreadScope dropTemporaryView]
  -[_EDThreadPersistence_ThreadScope initWithCache:messagePersistence:threadScopeDatabaseID:threadScopeExpression:]
  -[_EDThreadPersistence_ThreadScope createMessagesWithThreadObjectID:wrappedMessages:]
  -[_EDThreadPersistence_ThreadScope _ensureTempScopeView]
  -[_EDThreadPersistence_ThreadScope threadScopeExpression]


_EDThreadPersistence_StatementCache : NSObject
 @property  NSMutableDictionary *preparedStatements
 @property  EDPersistenceDatabaseConnection *connection

  // instance methods
  -[_EDThreadPersistence_StatementCache initWithConnection:]
  -[_EDThreadPersistence_StatementCache .cxx_destruct]
  -[_EDThreadPersistence_StatementCache preparedStatementForQueryString:]
  -[_EDThreadPersistence_StatementCache connection]
  -[_EDThreadPersistence_StatementCache preparedStatements]


_EDThreadPersistence_SQLHelper : NSObject
 @property  EDPersistenceDatabaseConnection *connection
 @property  _EDThreadPersistence_StatementCache *cache

  // instance methods
  -[_EDThreadPersistence_SQLHelper cache]
  -[_EDThreadPersistence_SQLHelper .cxx_destruct]
  -[_EDThreadPersistence_SQLHelper connection]
  -[_EDThreadPersistence_SQLHelper initWithCache:]
  -[_EDThreadPersistence_SQLHelper executeUpdateSQL:bindings:errorHandler:]
  -[_EDThreadPersistence_SQLHelper executeUpsertSQL:bindings:errorHandler:]
  -[_EDThreadPersistence_SQLHelper executeSelectSQL:bindings:errorHandler:rowHandler:]
  -[_EDThreadPersistence_SQLHelper executeSQL:indexBindings:errorHandler:]
  -[_EDThreadPersistence_SQLHelper executeSQL:errorHandler:]


_EDWrappedMessage : NSObject
 @property  EMMessage *message
 @property  long long databaseID

  // instance methods
  -[_EDWrappedMessage databaseID]
  -[_EDWrappedMessage .cxx_destruct]
  -[_EDWrappedMessage message]
  -[_EDWrappedMessage initWithMessage:databaseID:]


_EDLazyWrappedMessage : _EDWrappedMessage
 @property  EDMessagePersistence *messagePersistence

  // instance methods
  -[_EDLazyWrappedMessage databaseID]
  -[_EDLazyWrappedMessage .cxx_destruct]
  -[_EDLazyWrappedMessage messagePersistence]
  -[_EDLazyWrappedMessage initWithMessage:messagePersistence:]


_EDThreadQueryUnderlyingHandlers : NSObject
 @property  EMObjectID *inMemoryObservationID
 @property  EMObjectID *precomputedObservationID
 @property  EDInMemoryThreadQueryHandler *inMemoryQueryHandler
 @property  EDPrecomputedThreadQueryHandler *precomputedQueryHandler
 @property  EDThreadMigrator *threadMigrator

  // instance methods
  -[_EDThreadQueryUnderlyingHandlers .cxx_destruct]
  -[_EDThreadQueryUnderlyingHandlers _isCurrentObservationToken:]
  -[_EDThreadQueryUnderlyingHandlers inMemoryObservationID]
  -[_EDThreadQueryUnderlyingHandlers setInMemoryObservationID:]
  -[_EDThreadQueryUnderlyingHandlers precomputedObservationID]
  -[_EDThreadQueryUnderlyingHandlers setPrecomputedObservationID:]
  -[_EDThreadQueryUnderlyingHandlers inMemoryQueryHandler]
  -[_EDThreadQueryUnderlyingHandlers setInMemoryQueryHandler:]
  -[_EDThreadQueryUnderlyingHandlers precomputedQueryHandler]
  -[_EDThreadQueryUnderlyingHandlers setPrecomputedQueryHandler:]
  -[_EDThreadQueryUnderlyingHandlers threadMigrator]
  -[_EDThreadQueryUnderlyingHandlers setThreadMigrator:]


EDThreadQueryHandler : NSObject <EDThreadChangeHookResponder, EDThreadMigratorDelegate, EMMessageListItemQueryResultsObserver, EFLoggable, EDMessageRepositoryQueryHandler>
 @property  <EMMessageListItemQueryResultsObserver> *resultsObserver
 @property  EMObjectID *observationIdentifier
 @property  EDMessagePersistence *messagePersistence
 @property  EDThreadPersistence *threadPersistence
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  EDVIPManager *vipManager
 @property  <EDRemoteSearchProvider> *remoteSearchProvider
 @property  EDRemindMeNotificationController *remindMeNotificationController
 @property  EFLocked *underlyingHandler
 @property  <EDThreadQueryHandlerDelegate> *delegate
 @property  <EDResumable> *observerResumer
 @property  EMThreadScope *threadScope
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  EFQuery *query

  // class methods
  +[EDThreadQueryHandler log]

  // instance methods
  -[EDThreadQueryHandler test_tearDown]
  -[EDThreadQueryHandler query]
  -[EDThreadQueryHandler tearDown]
  -[EDThreadQueryHandler threadPersistence]
  -[EDThreadQueryHandler isStarted]
  -[EDThreadQueryHandler hookRegistry]
  -[EDThreadQueryHandler delegate]
  -[EDThreadQueryHandler .cxx_destruct]
  -[EDThreadQueryHandler remindMeNotificationController]
  -[EDThreadQueryHandler remoteSearchProvider]
  -[EDThreadQueryHandler requestSummaryForMessageObjectID:]
  -[EDThreadQueryHandler messagePersistence]
  -[EDThreadQueryHandler start]
  -[EDThreadQueryHandler vipManager]
  -[EDThreadQueryHandler messageReconciliationQueries]
  -[EDThreadQueryHandler threadReconciliationQueries]
  -[EDThreadQueryHandler threadScope]
  -[EDThreadQueryHandler cancel]
  -[EDThreadQueryHandler observer:wasUpdated:]
  -[EDThreadQueryHandler observer:matchedAddedObjectIDs:before:extraInfo:]
  -[EDThreadQueryHandler observer:matchedAddedObjectIDs:after:extraInfo:]
  -[EDThreadQueryHandler observer:matchedMovedObjectIDs:before:]
  -[EDThreadQueryHandler observer:matchedMovedObjectIDs:after:]
  -[EDThreadQueryHandler observer:matchedChangesForObjectIDs:]
  -[EDThreadQueryHandler observer:matchedDeletedObjectIDs:]
  -[EDThreadQueryHandler observer:replacedExistingObjectID:withNewObjectID:]
  -[EDThreadQueryHandler observer:matchedOldestItemsUpdatedForMailboxes:]
  -[EDThreadQueryHandler observerDidFinishInitialLoad:]
  -[EDThreadQueryHandler observerWillRestart:]
  -[EDThreadQueryHandler observerDidFinishRemoteSearch:]
  -[EDThreadQueryHandler observerResumer]
  -[EDThreadQueryHandler resultsObserver]
  -[EDThreadQueryHandler observationIdentifier]
  -[EDThreadQueryHandler persistenceDidResetThreadScope:]
  -[EDThreadQueryHandler threadMigratorDidComplete:]
  -[EDThreadQueryHandler initWithQuery:messagePersistence:threadPersistence:hookRegistry:vipManager:remoteSearchProvider:remindMeNotificationController:observer:observationIdentifier:delegate:observationResumer:]
  -[EDThreadQueryHandler _createUnderlyingHandlerIfNeededAndStart]
  -[EDThreadQueryHandler _tearDownWithQueryHandlerBlock:]
  -[EDThreadQueryHandler threadForObjectID:isPersisted:error:]
  -[EDThreadQueryHandler inMemoryMessageObjectIDsForThread:]
  -[EDThreadQueryHandler triggerMigration]
  -[EDThreadQueryHandler checkIfPrecomputedStateIsAvailable]
  -[EDThreadQueryHandler _addSnippetHintsToExtraInfo:]
  -[EDThreadQueryHandler underlyingHandler]


EDThreadReloadSummaryHelper : NSObject
  // instance methods
  -[EDThreadReloadSummaryHelper summariesToReloadForChanges:mailboxScope:]


EDThreadScopeManager : NSObject <EFLoggable>
 @property  <EDThreadScopeManagerDataSource> *dataSource
 @property  <EFScheduler> *evictionScheduler
 @property  NSArray *threadScopes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDThreadScopeManager log]
  +[EDThreadScopeManager mailboxTypesToPrecompute]

  // instance methods
  -[EDThreadScopeManager initWithDataSource:]
  -[EDThreadScopeManager dataSource]
  -[EDThreadScopeManager threadScopesByDatabaseID]
  -[EDThreadScopeManager .cxx_destruct]
  -[EDThreadScopeManager isThreadScopePrecomputed:mailboxProvider:shouldMigrate:]
  -[EDThreadScopeManager _threadScopeInfoForThreadScope:]
  -[EDThreadScopeManager precomputedMailboxScopeForThreadScope:mailboxProvider:hasFollowUpPredicate:]
  -[EDThreadScopeManager _precomputedMailboxScopeForFilterPredicate:mailboxProvider:hasFollowUpPredicate:]
  -[EDThreadScopeManager threadScopeFromPrecomputedMailboxScope:hasFollowUpPredicate:mailboxProvider:]
  -[EDThreadScopeManager _shouldPrecomputeMailboxWithObjectID:]
  -[EDThreadScopeManager _shouldPrecomputeMailboxType:]
  -[EDThreadScopeManager threadScopes]
  -[EDThreadScopeManager databaseIDForThreadScope:]
  -[EDThreadScopeManager addThreadScope:withDatabaseID:needsUpdate:lastViewedDate:]
  -[EDThreadScopeManager setNeedsUpdate:forThreadScope:]
  -[EDThreadScopeManager setLastViewedDate:forThreadScope:]
  -[EDThreadScopeManager removeAllThreadScopes]
  -[EDThreadScopeManager removeThreadScope:]
  -[EDThreadScopeManager removeThreadScopesForMailboxScope:]
  -[EDThreadScopeManager _initializeThreadScopesIfNeeded]
  -[EDThreadScopeManager _evictAtLeast:upTo:fromThreadScopesWithDatabaseIDs:]
  -[EDThreadScopeManager _evictionScoreForCount:timeInterval:]
  -[EDThreadScopeManager _threadScopesWithLastViewedOlderThanLimit]
  -[EDThreadScopeManager _numberOfThreadScopesToEvictFrom:upTo:]
  -[EDThreadScopeManager evictionScheduler]


_EDThreadScopeInfo : NSObject
 @property  long long databaseID
 @property  BOOL needsUpdate
 @property  NSDate *lastViewedDate

  // instance methods
  -[_EDThreadScopeInfo databaseID]
  -[_EDThreadScopeInfo setNeedsUpdate:]
  -[_EDThreadScopeInfo setLastViewedDate:]
  -[_EDThreadScopeInfo .cxx_destruct]
  -[_EDThreadScopeInfo lastViewedDate]
  -[_EDThreadScopeInfo needsUpdate]
  -[_EDThreadScopeInfo initWithDatabaseID:needsUpdate:lastViewedDate:]


EDTransactionService : NSObject
 @property  NSString *serviceName
 @property  NSObject<OS_dispatch_queue> *serialQueue

  // instance methods
  -[EDTransactionService setServiceName:]
  -[EDTransactionService setSerialQueue:]
  -[EDTransactionService serialQueue]
  -[EDTransactionService serviceName]
  -[EDTransactionService startTransaction]
  -[EDTransactionService .cxx_destruct]
  -[EDTransactionService hasPendingTransactions]
  -[EDTransactionService initWithServiceName:]
  -[EDTransactionService resetPendingTransactions]
  -[EDTransactionService endTransaction:]


EDUbiquitousConversationManager : NSObject <EDConversationRemoteStorageDelegate, EFLoggable>
 @property  <EDUbiquitousConversationManagerDelegate> *delegate
 @property  <EDConversationRemoteStorage> *cloudStorage
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableDictionary *conversationIDsBySyncKey
 @property  NSMutableSet *unmatchedKeys
 @property  BOOL initialized
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDUbiquitousConversationManager log]

  // instance methods
  -[EDUbiquitousConversationManager initialized]
  -[EDUbiquitousConversationManager _synchronize]
  -[EDUbiquitousConversationManager setInitialized:]
  -[EDUbiquitousConversationManager hasSubscribedConversations]
  -[EDUbiquitousConversationManager setDelegate:]
  -[EDUbiquitousConversationManager _mergeServerChanges:]
  -[EDUbiquitousConversationManager performInitialSync]
  -[EDUbiquitousConversationManager setConversationIDsBySyncKey:]
  -[EDUbiquitousConversationManager delegate]
  -[EDUbiquitousConversationManager .cxx_destruct]
  -[EDUbiquitousConversationManager initWithDelegate:]
  -[EDUbiquitousConversationManager setFlags:forConversations:]
  -[EDUbiquitousConversationManager setQueue:]
  -[EDUbiquitousConversationManager cloudStorage]
  -[EDUbiquitousConversationManager conversationIDsBySyncKey]
  -[EDUbiquitousConversationManager queue]
  -[EDUbiquitousConversationManager pruneDatabasePurgingOldestEntries:]
  -[EDUbiquitousConversationManager syncKeyForUpdatedConversation:flags:]
  -[EDUbiquitousConversationManager _setCloudStorageValue:forKey:]
  -[EDUbiquitousConversationManager unmatchedKeys]
  -[EDUbiquitousConversationManager _syncKeyForConversationID:]
  -[EDUbiquitousConversationManager conversationRemoteStorage:didChangeEntries:reason:]
  -[EDUbiquitousConversationManager performDailyExportForChangedConversations:]
  -[EDUbiquitousConversationManager setUnmatchedKeys:]
  -[EDUbiquitousConversationManager setCloudStorage:]


EDUpdateThrottler : NSObject
 @property  NSString *name
 @property  double delayInterval
 @property  long long scalingFactor
 @property  BOOL hasChangesSinceLastUpdate
 @property  NSDate *lastUpdateDate
 @property  NSDate *lastAcknowledgementDate
 @property  long long updateCounter
 @property  <EDResumable> *resumable
 @property  EFDebouncer *resumeClientDebouncer
 @property  <EFScheduler> *resumeClientScheduler

  // class methods
  +[EDUpdateThrottler resetAllInstances]
  +[EDUpdateThrottler _registerInstance:]
  +[EDUpdateThrottler instances]

  // instance methods
  -[EDUpdateThrottler setLastUpdateDate:]
  -[EDUpdateThrottler setResumeClientDebouncer:]
  -[EDUpdateThrottler _reset]
  -[EDUpdateThrottler setHasChangesSinceLastUpdate:]
  -[EDUpdateThrottler lastUpdateDate]
  -[EDUpdateThrottler setResumeClientScheduler:]
  -[EDUpdateThrottler lastAcknowledgementDate]
  -[EDUpdateThrottler unacknowledgedUpdatesCountAndTimeSinceLastAcknowledgement:]
  -[EDUpdateThrottler dealloc]
  -[EDUpdateThrottler resumable]
  -[EDUpdateThrottler hasChangesSinceLastUpdate]
  -[EDUpdateThrottler initWithDelayInterval:scalingFactor:]
  -[EDUpdateThrottler .cxx_destruct]
  -[EDUpdateThrottler updateWithBlock:unacknowledgedUpdatesCount:]
  -[EDUpdateThrottler setUpdateCounter:]
  -[EDUpdateThrottler setLastAcknowledgementDate:]
  -[EDUpdateThrottler setResumable:]
  -[EDUpdateThrottler initWithName:delayInterval:resumable:]
  -[EDUpdateThrottler delayInterval]
  -[EDUpdateThrottler resumeClientDebouncer]
  -[EDUpdateThrottler name]
  -[EDUpdateThrottler resumeClientScheduler]
  -[EDUpdateThrottler initWithName:delayInterval:scalingFactor:]
  -[EDUpdateThrottler scalingFactor]
  -[EDUpdateThrottler updateCounter]


EDUserNotificationFilter : NSObject
 @property  <EMBlockedSenderReader> *blockedSenderReader
 @property  <EMVIPReader> *vipReader

  // instance methods
  -[EDUserNotificationFilter .cxx_destruct]
  -[EDUserNotificationFilter vipReader]
  -[EDUserNotificationFilter initWithBlockedSenderReader:vipReader:]
  -[EDUserNotificationFilter messagesNeedingNotification:]
  -[EDUserNotificationFilter _messageNeedsNotification:]
  -[EDUserNotificationFilter blockedSenderReader]


EDUserNotificationMailboxCutoffController : NSObject <EFLoggable>
 @property  NSMutableDictionary *mailboxCutoffs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDUserNotificationMailboxCutoffController log]

  // instance methods
  -[EDUserNotificationMailboxCutoffController .cxx_destruct]
  -[EDUserNotificationMailboxCutoffController cutoffDateForMailbox:]
  -[EDUserNotificationMailboxCutoffController isMessageAboveMailboxCutoff:]
  -[EDUserNotificationMailboxCutoffController updateCutoffForMailboxesWithMessages:]
  -[EDUserNotificationMailboxCutoffController clearCutoffForMailbox:]
  -[EDUserNotificationMailboxCutoffController _shouldUpdateCutoffForMessage:]
  -[EDUserNotificationMailboxCutoffController _updateCutoffForMailbox:date:]
  -[EDUserNotificationMailboxCutoffController _initializeIfNeeded]
  -[EDUserNotificationMailboxCutoffController _readFromDefaults]
  -[EDUserNotificationMailboxCutoffController _writeToDefaults]
  -[EDUserNotificationMailboxCutoffController mailboxCutoffs]
  -[EDUserNotificationMailboxCutoffController setMailboxCutoffs:]


EDVIPManager : NSObject <EFLoggable, EMVIPManager>
 @property  CNContactStore *contactStore
 @property  NSUbiquitousKeyValueStore *keyValueStore
 @property  <EDAccountsProvider> *accountsProvider
 @property  NSObject<OS_dispatch_queue> *operationQueue
 @property  NSObject<OS_dispatch_queue> *notificationQueue
 @property  NSURL *plistURL
 @property  <EDVIPManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *allVIPs
 @property  EAEmailAddressSet *allVIPEmailAddresses
 @property  BOOL hasVIPs

  // class methods
  +[EDVIPManager log]
  +[EDVIPManager _contactDescriptors]

  // instance methods
  -[EDVIPManager setContactStore:]
  -[EDVIPManager getAllVIPsWithCompletion:]
  -[EDVIPManager _validatedCloudVIPFromStore:withCloudKey:]
  -[EDVIPManager setDelegate:]
  -[EDVIPManager hasVIPs]
  -[EDVIPManager allVIPs]
  -[EDVIPManager operationQueue]
  -[EDVIPManager delegate]
  -[EDVIPManager dealloc]
  -[EDVIPManager _updateLocalWithCloud:refresh:]
  -[EDVIPManager _serializedData]
  -[EDVIPManager _removeVIPsWithIdentifiers:]
  -[EDVIPManager .cxx_destruct]
  -[EDVIPManager _initializeKVSStore]
  -[EDVIPManager _synchronizeKVStore]
  -[EDVIPManager initWithDirectoryURL:keyValueStore:accountsProvider:contactStore:delegate:]
  -[EDVIPManager _allVIPEmailAddresses]
  -[EDVIPManager _saveVIPsLocally]
  -[EDVIPManager keyValueStore]
  -[EDVIPManager _accountsChanged:]
  -[EDVIPManager vipWithIdentifier:]
  -[EDVIPManager setKeyValueStore:]
  -[EDVIPManager initWithDirectoryURL:accountsProvider:delegate:]
  -[EDVIPManager accountsProvider]
  -[EDVIPManager _loadVIPs]
  -[EDVIPManager _saveVIPs]
  -[EDVIPManager _keyValueStoreChanged:]
  -[EDVIPManager gatherStatisticsWithVIPCount:]
  -[EDVIPManager removeVIPsWithIdentifiers:]
  -[EDVIPManager allVIPWaitForResult]
  -[EDVIPManager _contactForName:emailAddresses:]
  -[EDVIPManager _updateCloudWithLocal]
  -[EDVIPManager isVIPAddress:]
  -[EDVIPManager _mergeVIPs]
  -[EDVIPManager saveVIPs:]
  -[EDVIPManager _vipsDictionary]
  -[EDVIPManager _cloudKeyForIdentifier:]
  -[EDVIPManager contactStore]
  -[EDVIPManager removeVIPsWithEmailAddresses:]
  -[EDVIPManager plistURL]
  -[EDVIPManager notificationQueue]
  -[EDVIPManager _isVIPForContact:orAddresses:]
  -[EDVIPManager _contactFromContacts:matchingMostAddresses:]
  -[EDVIPManager allVIPEmailAddresses]


EDVIPManagerProxy : NSObject <EMVIPManagerInterface>
 @property  EDVIPManager *vipManager
 @property  NSSet *allVIPWaitForResult
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[EDVIPManagerProxy dealloc]
  -[EDVIPManagerProxy .cxx_destruct]
  -[EDVIPManagerProxy removeVIPsWithIdentifiers:]
  -[EDVIPManagerProxy allVIPWaitForResult]
  -[EDVIPManagerProxy saveVIPs:]
  -[EDVIPManagerProxy vipManager]
  -[EDVIPManagerProxy _vipsDidChange:]
  -[EDVIPManagerProxy removeVIPsWithEmailAddresses:]
  -[EDVIPManagerProxy cancelObservation:]
  -[EDVIPManagerProxy registerObserver:observationIdentifier:]
  -[EDVIPManagerProxy initWithVIPManager:]


EDVisibleMessagesReloadRegistry : NSObject
  // class methods
  +[EDVisibleMessagesReloadRegistry log]

  // instance methods
  -[EDVisibleMessagesReloadRegistry addObserver:]
  -[EDVisibleMessagesReloadRegistry dealloc]
  -[EDVisibleMessagesReloadRegistry .cxx_destruct]
  -[EDVisibleMessagesReloadRegistry init]
  -[EDVisibleMessagesReloadRegistry _scheduleVisibleMessageReload]
  -[EDVisibleMessagesReloadRegistry _reloadVisibleMessages]


EDWebContentParser : NSObject <ECWebContentObserver, WKNavigationDelegate, EFSignpostable, WKScriptMessageHandler>
 @property  WKWebView *webView
 @property  <EFScheduler> *backgroundWorkScheduler
 @property  unsigned long options
 @property  BOOL isDataDetectionEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long signpostID

  // class methods
  +[EDWebContentParser signpostLog]

  // instance methods
  -[EDWebContentParser test_tearDown]
  -[EDWebContentParser webView:decidePolicyForNavigationAction:decisionHandler:]
  -[EDWebContentParser signpostID]
  -[EDWebContentParser dealloc]
  -[EDWebContentParser .cxx_destruct]
  -[EDWebContentParser options]
  -[EDWebContentParser backgroundWorkScheduler]
  -[EDWebContentParser setOptions:]
  -[EDWebContentParser webView]
  -[EDWebContentParser webViewConfiguration]
  -[EDWebContentParser userContentController:didReceiveScriptMessage:]
  -[EDWebContentParser parseHTMLData:withOptions:characterEncodingName:forMessage:completionHandler:]
  -[EDWebContentParser initWithOptions:cancelationToken:]
  -[EDWebContentParser baseURL:didRequestRemoteContentURLs:]
  -[EDWebContentParser requestDataDetectionResultsWithBaseURL:]
  -[EDWebContentParser receiveDataDetectionResults:]
  -[EDWebContentParser logWebBundleMessage:]
  -[EDWebContentParser _richLinkMetadataScript]
  -[EDWebContentParser _parseHTMLData:withOptions:characterEncodingName:messageID:]
  -[EDWebContentParser _addRemoteContentWebViewObserver]
  -[EDWebContentParser _enableDataDetection]
  -[EDWebContentParser _disableDataDetection]
  -[EDWebContentParser _extractDataDetectorResultsMetadata:]
  -[EDWebContentParser _getDataDetectionCategoryString:]
  -[EDWebContentParser _setContentRuleLists:]
  -[EDWebContentParser _setRemoteContentRuleLists:]
  -[EDWebContentParser contentRuleListMangager:didAddRuleList:]
  -[EDWebContentParser contentRuleListMangager:didUpdateContentRuleList:oldContentRuleList:]
  -[EDWebContentParser contentRuleListMangager:didRemoveRuleList:]
  -[EDWebContentParser _retrieveRichLinkMetadata:]
  -[EDWebContentParser isDataDetectionEnabled]
  -[EDWebContentParser setIsDataDetectionEnabled:]


ECWebContentObserver : NSObject <ECWebContentObserver>
 @property  EDWebContentParser *parser
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ECWebContentObserver parser]
  -[ECWebContentObserver .cxx_destruct]
  -[ECWebContentObserver setParser:]
  -[ECWebContentObserver baseURL:didRequestRemoteContentURLs:]
  -[ECWebContentObserver requestDataDetectionResultsWithBaseURL:]
  -[ECWebContentObserver receiveDataDetectionResults:]
  -[ECWebContentObserver logWebBundleMessage:]
  -[ECWebContentObserver initWithParser:]


EDWebContentParserState : NSObject
 @property  NSURL *baseURL
 @property  EFPromise *dataDetectionPromise
 @property  EFPromise *remoteContentPromise
 @property  EFPromise *richLinkPromise

  // instance methods
  -[EDWebContentParserState setBaseURL:]
  -[EDWebContentParserState baseURL]
  -[EDWebContentParserState .cxx_destruct]
  -[EDWebContentParserState dataDetectionPromise]
  -[EDWebContentParserState setDataDetectionPromise:]
  -[EDWebContentParserState remoteContentPromise]
  -[EDWebContentParserState setRemoteContentPromise:]
  -[EDWebContentParserState richLinkPromise]
  -[EDWebContentParserState setRichLinkPromise:]


EDWebContentParserResults : NSObject
 @property  NSDictionary *dataDetectionResults
 @property  NSArray *remoteContentLinks
 @property  NSArray *richLinkResults

  // instance methods
  -[EDWebContentParserResults .cxx_destruct]
  -[EDWebContentParserResults richLinkResults]
  -[EDWebContentParserResults dataDetectionResults]
  -[EDWebContentParserResults remoteContentLinks]
  -[EDWebContentParserResults setRemoteContentLinks:]
  -[EDWebContentParserResults setDataDetectionResults:]
  -[EDWebContentParserResults setRichLinkResults:]


EDWidgetUpdateController : NSObject <EFLoggable, EDMessageChangeHookResponder>
 @property  NSArray *timelineControllers
 @property  NSDate *lastUpdate
 @property  long long numberOfUpdates
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EDWidgetUpdateController log]

  // instance methods
  -[EDWidgetUpdateController lastUpdate]
  -[EDWidgetUpdateController numberOfUpdates]
  -[EDWidgetUpdateController _activityDelay]
  -[EDWidgetUpdateController _writeUserDefaults]
  -[EDWidgetUpdateController dealloc]
  -[EDWidgetUpdateController setNumberOfUpdates:]
  -[EDWidgetUpdateController setTimelineControllers:]
  -[EDWidgetUpdateController .cxx_destruct]
  -[EDWidgetUpdateController _runActivity]
  -[EDWidgetUpdateController persistenceDidAddMessages:generationWindow:]
  -[EDWidgetUpdateController setLastUpdate:]
  -[EDWidgetUpdateController _updateLastUpdateInformation]
  -[EDWidgetUpdateController timelineControllers]
  -[EDWidgetUpdateController _scheduleActivityWithReason:]
  -[EDWidgetUpdateController initWithWidgetBundleIdentifier:widgetKindIdentifiers:hookRegistry:]
  -[EDWidgetUpdateController _refreshTimelinesWithReason:]
  -[EDWidgetUpdateController _restoreFromUserDefaults]
  -[EDWidgetUpdateController persistenceDidChangeFlags:messages:generationWindow:]


MUIBucketEphemeralSenderList : NSObject <EFContentProtectionObserver>
 @property  NSURL *url
 @property  EFLocked *addresses
 @property  <EFScheduler> *writeScheduler
 @property  NSObject<OS_dispatch_queue> *contentProtectionQueue
 @property  BOOL isWaitingOnUnlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MUIBucketEphemeralSenderList contentProtectionStateChanged:previousState:]
  -[MUIBucketEphemeralSenderList .cxx_destruct]
  -[MUIBucketEphemeralSenderList url]
  -[MUIBucketEphemeralSenderList contentProtectionQueue]
  -[MUIBucketEphemeralSenderList addresses]
  -[MUIBucketEphemeralSenderList initWithDirectory:populationBlock:]
  -[MUIBucketEphemeralSenderList _loadFromURL:]
  -[MUIBucketEphemeralSenderList _stringAddressesFromPopulationBlock:]
  -[MUIBucketEphemeralSenderList _simpleAddressForString:]
  -[MUIBucketEphemeralSenderList isAddressInList:]
  -[MUIBucketEphemeralSenderList addSenderToList:]
  -[MUIBucketEphemeralSenderList addAddressesToList:]
  -[MUIBucketEphemeralSenderList removeSenderFromList:]
  -[MUIBucketEphemeralSenderList removeAddressesFromList:]
  -[MUIBucketEphemeralSenderList _scheduleWrite]
  -[MUIBucketEphemeralSenderList writeScheduler]
  -[MUIBucketEphemeralSenderList isWaitingOnUnlock]


MUIBucketSenderCloudStorage : NSObject <EMUbiquitouslyPersistedDictionaryDelegate_Private>
 @property  <MUIBucketSenderCloudStorageDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MUIBucketSenderCloudStorage removeAllObjects]
  -[MUIBucketSenderCloudStorage delegate]
  -[MUIBucketSenderCloudStorage .cxx_destruct]
  -[MUIBucketSenderCloudStorage initWithDelegate:]
  -[MUIBucketSenderCloudStorage persistedDictionaryDidChangeRemotelyWithChangedItems:deletedItems:]
  -[MUIBucketSenderCloudStorage _mergeChangesForRemotelyChangedKeys:localStore:cloudStore:]
  -[MUIBucketSenderCloudStorage initWithMutableDictionary:delegate:]
  -[MUIBucketSenderCloudStorage moveSender:toBucket:userInitiated:]
  -[MUIBucketSenderCloudStorage moveSenderWithEmailAddresses:toBucket:userInitiated:]
  -[MUIBucketSenderCloudStorage removeSender:]
  -[MUIBucketSenderCloudStorage _removeSenderWithEmailAddresses:]
  -[MUIBucketSenderCloudStorage _addressToUseFromAddress:]


MUIBucketSendersCloudStorageUpgrader : NSObject <EFContentProtectionObserver>
 @property  <MUIBucketSendersCloudStorageUpgraderDelegate> *delegate
 @property  MUIBucketSenderCloudStorage *cloudStorage
 @property  NSArray *sentMailboxURLs
 @property  CNContactStore *contactStore
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <EFAssertableScheduler> *scheduler
 @property  BOOL observingContentProtection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MUIBucketSendersCloudStorageUpgrader scheduler]
  -[MUIBucketSendersCloudStorageUpgrader delegate]
  -[MUIBucketSendersCloudStorageUpgrader contentProtectionStateChanged:previousState:]
  -[MUIBucketSendersCloudStorageUpgrader .cxx_destruct]
  -[MUIBucketSendersCloudStorageUpgrader cloudStorage]
  -[MUIBucketSendersCloudStorageUpgrader queue]
  -[MUIBucketSendersCloudStorageUpgrader contactStore]
  -[MUIBucketSendersCloudStorageUpgrader _upgrade]
  -[MUIBucketSendersCloudStorageUpgrader initWithDelegate:senderCloudStorage:sentMailboxURLs:contactStore:]
  -[MUIBucketSendersCloudStorageUpgrader performUpgradeIfNecessary]
  -[MUIBucketSendersCloudStorageUpgrader _verifyDatabaseAccessAndPerformUpgrade]
  -[MUIBucketSendersCloudStorageUpgrader _resetDatabaseAndCloud]
  -[MUIBucketSendersCloudStorageUpgrader _hasBeenUpgraded]
  -[MUIBucketSendersCloudStorageUpgrader _markUpgradeComplete]
  -[MUIBucketSendersCloudStorageUpgrader _canAccessDatabase]
  -[MUIBucketSendersCloudStorageUpgrader sentMailboxURLs]
  -[MUIBucketSendersCloudStorageUpgrader observingContentProtection]
  -[MUIBucketSendersCloudStorageUpgrader setObservingContentProtection:]


MUIBucketUnscreenedSendersQueryHandler : NSObject <EMMessageListItemQueryResultsObserver, EFCancelable>
 @property  EMObjectID *objectID
 @property  EDGroupedSenderQueryHandler *groupedSenderQueryHandler
 @property  <EMMessageRepositoryUnscreenedSendersQueryObserver_xpc> *observer
 @property  <EFScheduler> *scheduler
 @property  BOOL didFinishInitialLoad
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MUIBucketUnscreenedSendersQueryHandler objectID]
  -[MUIBucketUnscreenedSendersQueryHandler setObjectID:]
  -[MUIBucketUnscreenedSendersQueryHandler scheduler]
  -[MUIBucketUnscreenedSendersQueryHandler setScheduler:]
  -[MUIBucketUnscreenedSendersQueryHandler .cxx_destruct]
  -[MUIBucketUnscreenedSendersQueryHandler observer]
  -[MUIBucketUnscreenedSendersQueryHandler start]
  -[MUIBucketUnscreenedSendersQueryHandler setObserver:]
  -[MUIBucketUnscreenedSendersQueryHandler cancel]
  -[MUIBucketUnscreenedSendersQueryHandler observer:wasUpdated:]
  -[MUIBucketUnscreenedSendersQueryHandler observer:matchedAddedObjectIDs:before:extraInfo:]
  -[MUIBucketUnscreenedSendersQueryHandler observer:matchedAddedObjectIDs:after:extraInfo:]
  -[MUIBucketUnscreenedSendersQueryHandler observer:matchedMovedObjectIDs:before:]
  -[MUIBucketUnscreenedSendersQueryHandler observer:matchedMovedObjectIDs:after:]
  -[MUIBucketUnscreenedSendersQueryHandler observer:matchedChangesForObjectIDs:]
  -[MUIBucketUnscreenedSendersQueryHandler observer:matchedDeletedObjectIDs:]
  -[MUIBucketUnscreenedSendersQueryHandler observer:replacedExistingObjectID:withNewObjectID:]
  -[MUIBucketUnscreenedSendersQueryHandler observer:matchedOldestItemsUpdatedForMailboxes:]
  -[MUIBucketUnscreenedSendersQueryHandler observerDidFinishInitialLoad:]
  -[MUIBucketUnscreenedSendersQueryHandler observerWillRestart:]
  -[MUIBucketUnscreenedSendersQueryHandler initWithQuery:messagePersistence:hookRegistry:remindMeNotificationController:observer:]
  -[MUIBucketUnscreenedSendersQueryHandler _addNewObjectIDs:before:]
  -[MUIBucketUnscreenedSendersQueryHandler _addNewObjectIDs:after:]
  -[MUIBucketUnscreenedSendersQueryHandler _notifyObserverOfLatestGroupedSenders]
  -[MUIBucketUnscreenedSendersQueryHandler groupedSenderQueryHandler]
  -[MUIBucketUnscreenedSendersQueryHandler setGroupedSenderQueryHandler:]
  -[MUIBucketUnscreenedSendersQueryHandler didFinishInitialLoad]
  -[MUIBucketUnscreenedSendersQueryHandler setDidFinishInitialLoad:]


EDImportantMLModelInput : NSObject <MLFeatureProvider>
 @property  double cc_contains_contact
 @property  double cc_is_top_direct_addresses_based_on_respond
 @property  double cc_is_top_direct_addresses_based_on_scroll
 @property  double cc_is_top_direct_addresses_based_on_send
 @property  double cc_is_top_direct_addresses_based_on_view
 @property  double cc_is_top_indirect_addresses_based_on_respond
 @property  double cc_is_top_indirect_addresses_based_on_scroll
 @property  double cc_is_top_indirect_addresses_based_on_send
 @property  double cc_is_top_indirect_addresses_based_on_view
 @property  double cc_is_vip
 @property  double from_list_id
 @property  double message_is_forward
 @property  double message_is_reply
 @property  double num_recipients
 @property  double sender_is_contact
 @property  double sender_is_top_direct_addresses_based_on_respond
 @property  double sender_is_top_direct_addresses_based_on_scroll
 @property  double sender_is_top_direct_addresses_based_on_send
 @property  double sender_is_top_direct_addresses_based_on_view
 @property  double sender_is_top_indirect_addresses_based_on_respond
 @property  double sender_is_top_indirect_addresses_based_on_scroll
 @property  double sender_is_top_indirect_addresses_based_on_send
 @property  double sender_is_top_indirect_addresses_based_on_view
 @property  double sender_is_vip
 @property  double subject_is_top_words_based_on_respond
 @property  double subject_is_top_words_based_on_scroll
 @property  double subject_is_top_words_based_on_send
 @property  double subject_is_top_words_based_on_view
 @property  NSString *time_received
 @property  double to_contains_contact
 @property  double to_is_top_direct_addresses_based_on_respond
 @property  double to_is_top_direct_addresses_based_on_scroll
 @property  double to_is_top_direct_addresses_based_on_send
 @property  double to_is_top_direct_addresses_based_on_view
 @property  double to_is_top_indirect_addresses_based_on_respond
 @property  double to_is_top_indirect_addresses_based_on_scroll
 @property  double to_is_top_indirect_addresses_based_on_send
 @property  double to_is_top_indirect_addresses_based_on_view
 @property  double to_is_vip
 @property  double user_is_bcc
 @property  double user_is_cc
 @property  double user_is_sender
 @property  double user_is_to
 @property  NSSet *featureNames

  // instance methods
  -[EDImportantMLModelInput featureNames]
  -[EDImportantMLModelInput featureValueForName:]
  -[EDImportantMLModelInput .cxx_destruct]
  -[EDImportantMLModelInput initWithCc_contains_contact:cc_is_top_direct_addresses_based_on_respond:cc_is_top_direct_addresses_based_on_scroll:cc_is_top_direct_addresses_based_on_send:cc_is_top_direct_addresses_based_on_view:cc_is_top_indirect_addresses_based_on_respond:cc_is_top_indirect_addresses_based_on_scroll:cc_is_top_indirect_addresses_based_on_send:cc_is_top_indirect_addresses_based_on_view:cc_is_vip:from_list_id:message_is_forward:message_is_reply:num_recipients:sender_is_contact:sender_is_top_direct_addresses_based_on_respond:sender_is_top_direct_addresses_based_on_scroll:sender_is_top_direct_addresses_based_on_send:sender_is_top_direct_addresses_based_on_view:sender_is_top_indirect_addresses_based_on_respond:sender_is_top_indirect_addresses_based_on_scroll:sender_is_top_indirect_addresses_based_on_send:sender_is_top_indirect_addresses_based_on_view:sender_is_vip:subject_is_top_words_based_on_respond:subject_is_top_words_based_on_scroll:subject_is_top_words_based_on_send:subject_is_top_words_based_on_view:time_received:to_contains_contact:to_is_top_direct_addresses_based_on_respond:to_is_top_direct_addresses_based_on_scroll:to_is_top_direct_addresses_based_on_send:to_is_top_direct_addresses_based_on_view:to_is_top_indirect_addresses_based_on_respond:to_is_top_indirect_addresses_based_on_scroll:to_is_top_indirect_addresses_based_on_send:to_is_top_indirect_addresses_based_on_view:to_is_vip:user_is_bcc:user_is_cc:user_is_sender:user_is_to:]
  -[EDImportantMLModelInput cc_contains_contact]
  -[EDImportantMLModelInput setCc_contains_contact:]
  -[EDImportantMLModelInput cc_is_top_direct_addresses_based_on_respond]
  -[EDImportantMLModelInput setCc_is_top_direct_addresses_based_on_respond:]
  -[EDImportantMLModelInput cc_is_top_direct_addresses_based_on_scroll]
  -[EDImportantMLModelInput setCc_is_top_direct_addresses_based_on_scroll:]
  -[EDImportantMLModelInput cc_is_top_direct_addresses_based_on_send]
  -[EDImportantMLModelInput setCc_is_top_direct_addresses_based_on_send:]
  -[EDImportantMLModelInput cc_is_top_direct_addresses_based_on_view]
  -[EDImportantMLModelInput setCc_is_top_direct_addresses_based_on_view:]
  -[EDImportantMLModelInput cc_is_top_indirect_addresses_based_on_respond]
  -[EDImportantMLModelInput setCc_is_top_indirect_addresses_based_on_respond:]
  -[EDImportantMLModelInput cc_is_top_indirect_addresses_based_on_scroll]
  -[EDImportantMLModelInput setCc_is_top_indirect_addresses_based_on_scroll:]
  -[EDImportantMLModelInput cc_is_top_indirect_addresses_based_on_send]
  -[EDImportantMLModelInput setCc_is_top_indirect_addresses_based_on_send:]
  -[EDImportantMLModelInput cc_is_top_indirect_addresses_based_on_view]
  -[EDImportantMLModelInput setCc_is_top_indirect_addresses_based_on_view:]
  -[EDImportantMLModelInput cc_is_vip]
  -[EDImportantMLModelInput setCc_is_vip:]
  -[EDImportantMLModelInput from_list_id]
  -[EDImportantMLModelInput setFrom_list_id:]
  -[EDImportantMLModelInput message_is_forward]
  -[EDImportantMLModelInput setMessage_is_forward:]
  -[EDImportantMLModelInput message_is_reply]
  -[EDImportantMLModelInput setMessage_is_reply:]
  -[EDImportantMLModelInput num_recipients]
  -[EDImportantMLModelInput setNum_recipients:]
  -[EDImportantMLModelInput sender_is_contact]
  -[EDImportantMLModelInput setSender_is_contact:]
  -[EDImportantMLModelInput sender_is_top_direct_addresses_based_on_respond]
  -[EDImportantMLModelInput setSender_is_top_direct_addresses_based_on_respond:]
  -[EDImportantMLModelInput sender_is_top_direct_addresses_based_on_scroll]
  -[EDImportantMLModelInput setSender_is_top_direct_addresses_based_on_scroll:]
  -[EDImportantMLModelInput sender_is_top_direct_addresses_based_on_send]
  -[EDImportantMLModelInput setSender_is_top_direct_addresses_based_on_send:]
  -[EDImportantMLModelInput sender_is_top_direct_addresses_based_on_view]
  -[EDImportantMLModelInput setSender_is_top_direct_addresses_based_on_view:]
  -[EDImportantMLModelInput sender_is_top_indirect_addresses_based_on_respond]
  -[EDImportantMLModelInput setSender_is_top_indirect_addresses_based_on_respond:]
  -[EDImportantMLModelInput sender_is_top_indirect_addresses_based_on_scroll]
  -[EDImportantMLModelInput setSender_is_top_indirect_addresses_based_on_scroll:]
  -[EDImportantMLModelInput sender_is_top_indirect_addresses_based_on_send]
  -[EDImportantMLModelInput setSender_is_top_indirect_addresses_based_on_send:]
  -[EDImportantMLModelInput sender_is_top_indirect_addresses_based_on_view]
  -[EDImportantMLModelInput setSender_is_top_indirect_addresses_based_on_view:]
  -[EDImportantMLModelInput sender_is_vip]
  -[EDImportantMLModelInput setSender_is_vip:]
  -[EDImportantMLModelInput subject_is_top_words_based_on_respond]
  -[EDImportantMLModelInput setSubject_is_top_words_based_on_respond:]
  -[EDImportantMLModelInput subject_is_top_words_based_on_scroll]
  -[EDImportantMLModelInput setSubject_is_top_words_based_on_scroll:]
  -[EDImportantMLModelInput subject_is_top_words_based_on_send]
  -[EDImportantMLModelInput setSubject_is_top_words_based_on_send:]
  -[EDImportantMLModelInput subject_is_top_words_based_on_view]
  -[EDImportantMLModelInput setSubject_is_top_words_based_on_view:]
  -[EDImportantMLModelInput time_received]
  -[EDImportantMLModelInput setTime_received:]
  -[EDImportantMLModelInput to_contains_contact]
  -[EDImportantMLModelInput setTo_contains_contact:]
  -[EDImportantMLModelInput to_is_top_direct_addresses_based_on_respond]
  -[EDImportantMLModelInput setTo_is_top_direct_addresses_based_on_respond:]
  -[EDImportantMLModelInput to_is_top_direct_addresses_based_on_scroll]
  -[EDImportantMLModelInput setTo_is_top_direct_addresses_based_on_scroll:]
  -[EDImportantMLModelInput to_is_top_direct_addresses_based_on_send]
  -[EDImportantMLModelInput setTo_is_top_direct_addresses_based_on_send:]
  -[EDImportantMLModelInput to_is_top_direct_addresses_based_on_view]
  -[EDImportantMLModelInput setTo_is_top_direct_addresses_based_on_view:]
  -[EDImportantMLModelInput to_is_top_indirect_addresses_based_on_respond]
  -[EDImportantMLModelInput setTo_is_top_indirect_addresses_based_on_respond:]
  -[EDImportantMLModelInput to_is_top_indirect_addresses_based_on_scroll]
  -[EDImportantMLModelInput setTo_is_top_indirect_addresses_based_on_scroll:]
  -[EDImportantMLModelInput to_is_top_indirect_addresses_based_on_send]
  -[EDImportantMLModelInput setTo_is_top_indirect_addresses_based_on_send:]
  -[EDImportantMLModelInput to_is_top_indirect_addresses_based_on_view]
  -[EDImportantMLModelInput setTo_is_top_indirect_addresses_based_on_view:]
  -[EDImportantMLModelInput to_is_vip]
  -[EDImportantMLModelInput setTo_is_vip:]
  -[EDImportantMLModelInput user_is_bcc]
  -[EDImportantMLModelInput setUser_is_bcc:]
  -[EDImportantMLModelInput user_is_cc]
  -[EDImportantMLModelInput setUser_is_cc:]
  -[EDImportantMLModelInput user_is_sender]
  -[EDImportantMLModelInput setUser_is_sender:]
  -[EDImportantMLModelInput user_is_to]
  -[EDImportantMLModelInput setUser_is_to:]


EDImportantMLModelOutput : NSObject <MLFeatureProvider>
 @property  long long important
 @property  NSDictionary *importantProbability
 @property  NSSet *featureNames

  // instance methods
  -[EDImportantMLModelOutput featureNames]
  -[EDImportantMLModelOutput featureValueForName:]
  -[EDImportantMLModelOutput .cxx_destruct]
  -[EDImportantMLModelOutput setImportant:]
  -[EDImportantMLModelOutput important]
  -[EDImportantMLModelOutput initWithImportant:importantProbability:]
  -[EDImportantMLModelOutput importantProbability]
  -[EDImportantMLModelOutput setImportantProbability:]


EDImportantMLModel : NSObject
 @property  MLModel *model

  // class methods
  +[EDImportantMLModel loadContentsOfURL:configuration:completionHandler:]
  +[EDImportantMLModel URLOfModelInThisBundle]
  +[EDImportantMLModel loadWithConfiguration:completionHandler:]

  // instance methods
  -[EDImportantMLModel initWithContentsOfURL:error:]
  -[EDImportantMLModel predictionFromFeatures:options:error:]
  -[EDImportantMLModel model]
  -[EDImportantMLModel .cxx_destruct]
  -[EDImportantMLModel initWithConfiguration:error:]
  -[EDImportantMLModel predictionFromFeatures:error:]
  -[EDImportantMLModel init]
  -[EDImportantMLModel initWithMLModel:]
  -[EDImportantMLModel initWithContentsOfURL:configuration:error:]
  -[EDImportantMLModel predictionsFromInputs:options:error:]
  -[EDImportantMLModel predictionFromCc_contains_contact:cc_is_top_direct_addresses_based_on_respond:cc_is_top_direct_addresses_based_on_scroll:cc_is_top_direct_addresses_based_on_send:cc_is_top_direct_addresses_based_on_view:cc_is_top_indirect_addresses_based_on_respond:cc_is_top_indirect_addresses_based_on_scroll:cc_is_top_indirect_addresses_based_on_send:cc_is_top_indirect_addresses_based_on_view:cc_is_vip:from_list_id:message_is_forward:message_is_reply:num_recipients:sender_is_contact:sender_is_top_direct_addresses_based_on_respond:sender_is_top_direct_addresses_based_on_scroll:sender_is_top_direct_addresses_based_on_send:sender_is_top_direct_addresses_based_on_view:sender_is_top_indirect_addresses_based_on_respond:sender_is_top_indirect_addresses_based_on_scroll:sender_is_top_indirect_addresses_based_on_send:sender_is_top_indirect_addresses_based_on_view:sender_is_vip:subject_is_top_words_based_on_respond:subject_is_top_words_based_on_scroll:subject_is_top_words_based_on_send:subject_is_top_words_based_on_view:time_received:to_contains_contact:to_is_top_direct_addresses_based_on_respond:to_is_top_direct_addresses_based_on_scroll:to_is_top_direct_addresses_based_on_send:to_is_top_direct_addresses_based_on_view:to_is_top_indirect_addresses_based_on_respond:to_is_top_indirect_addresses_based_on_scroll:to_is_top_indirect_addresses_based_on_send:to_is_top_indirect_addresses_based_on_view:to_is_vip:user_is_bcc:user_is_cc:user_is_sender:user_is_to:error:]


EDPromotionMLModelInput : NSObject <MLFeatureProvider>
 @property  NSDictionary *header_key_filtered
 @property  double to_count
 @property  NSSet *featureNames

  // instance methods
  -[EDPromotionMLModelInput featureNames]
  -[EDPromotionMLModelInput featureValueForName:]
  -[EDPromotionMLModelInput .cxx_destruct]
  -[EDPromotionMLModelInput initWithHeader_key_filtered:to_count:]
  -[EDPromotionMLModelInput header_key_filtered]
  -[EDPromotionMLModelInput setHeader_key_filtered:]
  -[EDPromotionMLModelInput to_count]
  -[EDPromotionMLModelInput setTo_count:]


EDPromotionMLModelOutput : NSObject <MLFeatureProvider>
 @property  long long promo
 @property  NSDictionary *promoProbability
 @property  NSSet *featureNames

  // instance methods
  -[EDPromotionMLModelOutput featureNames]
  -[EDPromotionMLModelOutput featureValueForName:]
  -[EDPromotionMLModelOutput .cxx_destruct]
  -[EDPromotionMLModelOutput initWithPromo:promoProbability:]
  -[EDPromotionMLModelOutput promo]
  -[EDPromotionMLModelOutput setPromo:]
  -[EDPromotionMLModelOutput promoProbability]
  -[EDPromotionMLModelOutput setPromoProbability:]


EDPromotionMLModel : NSObject
 @property  MLModel *model

  // class methods
  +[EDPromotionMLModel loadContentsOfURL:configuration:completionHandler:]
  +[EDPromotionMLModel URLOfModelInThisBundle]
  +[EDPromotionMLModel loadWithConfiguration:completionHandler:]

  // instance methods
  -[EDPromotionMLModel initWithContentsOfURL:error:]
  -[EDPromotionMLModel predictionFromFeatures:options:error:]
  -[EDPromotionMLModel model]
  -[EDPromotionMLModel .cxx_destruct]
  -[EDPromotionMLModel initWithConfiguration:error:]
  -[EDPromotionMLModel predictionFromFeatures:error:]
  -[EDPromotionMLModel init]
  -[EDPromotionMLModel initWithMLModel:]
  -[EDPromotionMLModel initWithContentsOfURL:configuration:error:]
  -[EDPromotionMLModel predictionsFromInputs:options:error:]
  -[EDPromotionMLModel predictionFromHeader_key_filtered:to_count:error:]


EMContentRepresentation(EDMessagePersistence)
	// instance methods
	-[EMContentRepresentation(EDMessagePersistence) requestRepresentationForItemWithObjectID:options:delegate:completionHandler:]
	-[EMContentRepresentation(EDMessagePersistence) requestUpdatedRepresentationWithCompletion:]

NSIndexSet(EDServerMessagePersistence)
	// instance methods
	-[NSIndexSet(EDServerMessagePersistence) ed_enumerateUIDsWithLimit:reverseEnumeration:usingBlock:]
	-[NSIndexSet(EDServerMessagePersistence) ed_enumerateUIDsWithLimit:reverseEnumeration:queryRangeCountLimit:batchLimit:usingBlock:]
	-[NSIndexSet(EDServerMessagePersistence) ed_nextRangesWithRangeCountLimit:reverseEnumeration:]
	-[NSIndexSet(EDServerMessagePersistence) ed_uidQueryExpression]
	-[NSIndexSet(EDServerMessagePersistence) ed_logDescription]

NSPersistentHistoryToken(EDAdditions)
	// class methods
	+[NSPersistentHistoryToken(EDAdditions) ed_unarchivedTokenWithData:error:]

	// instance methods
	-[NSPersistentHistoryToken(EDAdditions) ed_archiveTokenWithError:]

01 00 0500 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSProcessAssertion 
01 00 0900 /System/Library/PrivateFrameworks/BiomeStorage.framework/BiomeStorage: BMStoreConfig 
01 00 0800 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMStoreStream 
01 00 0c00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerOptions 
01 00 0c00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotification 
01 00 0d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 0d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 0d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0e00 /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation: CNNameComponentsStringTokenizer 
01 00 0b00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPNetworkObserver 
01 00 1300 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSCustomAttributeKey 
01 00 1300 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSPerson 
01 00 1300 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableIndex 
01 00 1300 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableItem 
01 00 1300 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableItemAttributeSet 
01 00 1400 /System/Library/PrivateFrameworks/DataDetectorsCore.framework/DataDetectorsCore: DDScannerResult 
01 00 1600 /System/Library/PrivateFrameworks/EmailAddressing.framework/EmailAddressing: EAEmailAddressParser 
01 00 1600 /System/Library/PrivateFrameworks/EmailAddressing.framework/EmailAddressing: EAEmailAddressSet 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECAccount 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECAngleBracketIDHash 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECBIMIData 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECDKIMVerifier 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECEmailAddress 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECEmailAddressComponents 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECEmailCoreFramework 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECFlagChangeMessageAction 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECFlagChangeMessageActionResults 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECFlagChangeUndownloadedMessageAction 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECHeaderAuthenticationResults 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECLabelChangeMessageAction 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECMessageFlagChange 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECMessageFlags 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECServerMessage 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECSubject 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECTransferMessageAction 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECTransferMessageActionItem 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECTransferMessageActionResults 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECTransferUndownloadedMessageAction 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFCancelationToken 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFCoalescer 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFDebouncer 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFDevice 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFFileCompression 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFFileWrapper 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFFuture 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFInvocationToken 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFLazyCache 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFLinearFunction 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFListStateCapturer 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFLocked 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFMeasuredObject 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFMutableInt64Set 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFNetworkStatus 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFObserver 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFPair 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFPrivacy 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFProcessBoost 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFProcessTransaction 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFPromise 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFQuery 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFQueue 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFResourcePool 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLAggregateFunction 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLAndExpression 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLBetweenExpression 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLBinaryExpression 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLBinding 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLBitExpression 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLColumnExpression 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLColumnSchema 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLConnection 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLDeleteStatement 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLFunction 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLIndexSchema 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLInsertStatement 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLNotExpression 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLObjectPropertyMapper 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLOrExpression 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLPropertyMapper 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLQueryGenerator 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLSchema 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLSelectStatement 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLTableSchema 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLUpdateStatement 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLUpsertStatement 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSandboxedURLWrapper 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFScheduler 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFStoppableScheduler 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFStringHash 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFXPCAlarm 
01 00 1800 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFXPCAlarmScheduler 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMAccount 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMActivity 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMBiomeEvent 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMBiomeStreamDirectory 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMBlockedSenderManager 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMCollectionItemIDStateCapturer 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMContentRepresentation 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMContentRequestOptions 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMCreateMailboxChangeAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMDaemonInterface 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMDaemonInterfaceRequest 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMDeleteMailboxChangeAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMDeliveryAccount 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMFollowUp 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMGroupedSender 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMGroupedSenderObjectID 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMInternalPreferences 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMListUnsubscribeDetector 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMailbox 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMailboxObjectID 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMailboxScope 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessage 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageCollectionItemID 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageConversationFlagChangeAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageDeleteAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageDeleteAllAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageFlagChangeAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageFlagChangeAllAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageFollowUpAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageListItemChange 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageListItemPredicates 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageObjectID 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageReadLaterAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageRepositoryRemoteContentURLInfo 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageSnippetHintZoneBuilder 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageTransferAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageTransferAllAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMoveMailboxChangeAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMObjectID 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMPersistenceLayoutManager 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMQuery 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMReadLater 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMReceivingAccount 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMRenameMailboxChangeAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMSearchableIndex 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMSearchableIndexQuery 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMSearchableIndexQueryExpression 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMSearchableIndexSchema 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMSearchableIndexUserQuery 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMSearchableItemSnippetData 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMSender 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMSenderBlockingAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMServerConfiguration 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMThread 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMThreadCollectionItemID 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMThreadObjectID 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMThreadScope 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMUbiquitouslyPersistedDictionary 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMUbiquitouslyPersistedDictionaryMergeResult 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMUndoIndividualAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMUndoMessageAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMUnsubscribeAction 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMVIP 
01 00 0600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 0600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 1d00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAsset 
01 00 1d00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAssetQuery 
01 00 1d00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MADownloadOptions 
01 00 1200 /System/Library/Frameworks/CoreML.framework/CoreML: MLArrayBatchProvider 
01 00 1200 /System/Library/Frameworks/CoreML.framework/CoreML: MLFeatureValue 
01 00 1200 /System/Library/Frameworks/CoreML.framework/CoreML: MLModel 
01 00 1200 /System/Library/Frameworks/CoreML.framework/CoreML: MLPredictionOptions 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBackgroundActivityScheduler 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSCloudKitMirroringDelegate 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSCloudKitMirroringDelegateOptions 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSCloudKitMirroringExportRequest 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSCloudKitMirroringImportRequest 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConditionLock 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSLinguisticTagger 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentContainer 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryChangeRequest 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryToken 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUbiquitousKeyValueStore 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSValueTransformer 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 2200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 1e00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0400 /System/Library/PrivateFrameworks/ProactiveEventTracker.framework/ProactiveEventTracker: PETEventTracker2 
01 00 0100 /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/SymptomDiagnosticReporter: SDRDiagnosticReporter 
01 00 0700 /System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions: SGMailIntelligenceStringHasher 
01 00 0700 /System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions: SGSuggestionsService 
01 00 0300 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 2100 /System/Library/Frameworks/WebKit.framework/WebKit: WKUserScript 
01 00 2100 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebView 
01 00 2100 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebViewConfiguration 
01 00 0200 /System/Library/PrivateFrameworks/DifferentialPrivacy.framework/DifferentialPrivacy: _DPStringRecorder 
