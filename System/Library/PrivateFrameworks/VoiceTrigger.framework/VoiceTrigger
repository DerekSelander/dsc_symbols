|| __DATA.__common __ZN8NMemPool13m_iAlignBytesE
|| __DATA.__common __ZN8NMemPool6m_iPosE
|| __DATA.__common __ZN8NMemPool7m_iSizeE
|| __DATA.__common __ZN8NMemPool7m_pDataE
|| __DATA.__common _hammingWindow
|| __DATA.__common _setup
|| __DATA.__common _snrSetup
|| __DATA.__common _snrWindow
|| __DATA.__const_weak __ZTV14NPhoneHMMArray
|| __DATA.__const_weak __ZTV22NGaussianMixtureModels
|| __DATA.__data _VTLoggingSubsystem
|| __DATA.__data __ZN8NMemPool9m_bLockedE
|| __DATA.__data _gVTRTModelData
|| __DATA.__data _kVTLoggingContextFramework
|| __DATA.__data _kVTPeerRemotePhraseSpotterRecommendedTimeout
|| __DATA.__objc_data _OBJC_CLASS_$_AudioFileWriter
|| __DATA.__objc_data _OBJC_CLASS_$_VTAggregator
|| __DATA.__objc_data _OBJC_CLASS_$_VTAnalyzerNDAPI
|| __DATA.__objc_data _OBJC_CLASS_$_VTAssetManager
|| __DATA.__objc_data _OBJC_CLASS_$_VTAssetManagerEnablePolicy
|| __DATA.__objc_data _OBJC_CLASS_$_VTAudioCircularBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_VTAudioFileLog
|| __DATA.__objc_data _OBJC_CLASS_$_VTAudioFileReader
|| __DATA.__objc_data _OBJC_CLASS_$_VTAudioRouteChangeMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_VTBatteryMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_VTBiometricMatchMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_VTBlobBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_VTCorruptDetector
|| __DATA.__objc_data _OBJC_CLASS_$_VTEvent
|| __DATA.__objc_data _OBJC_CLASS_$_VTEventAudioCorrupt
|| __DATA.__objc_data _OBJC_CLASS_$_VTEventNearTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_VTEventPHSReject
|| __DATA.__objc_data _OBJC_CLASS_$_VTEventPrepare
|| __DATA.__objc_data _OBJC_CLASS_$_VTEventTrackerManager
|| __DATA.__objc_data _OBJC_CLASS_$_VTEventTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_VTInvalidSATEntriesCleaner
|| __DATA.__objc_data _OBJC_CLASS_$_VTKeywordAnalyzerNDAPI
|| __DATA.__objc_data _OBJC_CLASS_$_VTKeywordAnalyzerNDEAPI
|| __DATA.__objc_data _OBJC_CLASS_$_VTKeywordAnalyzerPhraseScore
|| __DATA.__objc_data _OBJC_CLASS_$_VTKeywordAnalyzerQuasar
|| __DATA.__objc_data _OBJC_CLASS_$_VTKeywordAnalyzerResults
|| __DATA.__objc_data _OBJC_CLASS_$_VTKeywordDetector
|| __DATA.__objc_data _OBJC_CLASS_$_VTKeywordDetectorAssets
|| __DATA.__objc_data _OBJC_CLASS_$_VTKeywordDetectorContext
|| __DATA.__objc_data _OBJC_CLASS_$_VTKeywordDetectorPhraseScore
|| __DATA.__objc_data _OBJC_CLASS_$_VTKeywordDetectorResults
|| __DATA.__objc_data _OBJC_CLASS_$_VTLowPowerModeMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_VTNovDetector
|| __DATA.__objc_data _OBJC_CLASS_$_VTNovDetectorResult
|| __DATA.__objc_data _OBJC_CLASS_$_VTPeerRemoteConnection
|| __DATA.__objc_data _OBJC_CLASS_$_VTPhraseSpotterControlConnection
|| __DATA.__objc_data _OBJC_CLASS_$_VTPhraseSpotterControlRemote
|| __DATA.__objc_data _OBJC_CLASS_$_VTPhraseSpotterEnabledPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_VTSiriAssertionMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_VTSiriNotifications
|| __DATA.__objc_data _OBJC_CLASS_$_VTSoftwareUpdateCheckingMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_VTSpeakerIdUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_VTTextDependentSpeakerRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_VTTranscriber
|| __DATA.__objc_data _OBJC_CLASS_$_VTTriggerEventMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_VTUtteranceMetadataManager
|| __DATA.__objc_data _OBJC_CLASS_$_VTVoiceProfileMigration
|| __DATA.__objc_data _OBJC_CLASS_$_VTVoiceProfileRetrainer
|| __DATA.__objc_data _OBJC_CLASS_$_VTVoiceTriggerEnabledPolicyHorseman
|| __DATA.__objc_data _OBJC_CLASS_$_VTVoiceTriggerEnabledPolicyNonAOP
|| __DATA.__objc_data _OBJC_CLASS_$_VTVoiceTriggerEnabledPolicyWatch
|| __DATA.__objc_data _OBJC_METACLASS_$_AudioFileWriter
|| __DATA.__objc_data _OBJC_METACLASS_$_VTAggregator
|| __DATA.__objc_data _OBJC_METACLASS_$_VTAnalyzerNDAPI
|| __DATA.__objc_data _OBJC_METACLASS_$_VTAssetManager
|| __DATA.__objc_data _OBJC_METACLASS_$_VTAssetManagerEnablePolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_VTAudioCircularBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_VTAudioFileLog
|| __DATA.__objc_data _OBJC_METACLASS_$_VTAudioFileReader
|| __DATA.__objc_data _OBJC_METACLASS_$_VTAudioRouteChangeMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_VTBatteryMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_VTBiometricMatchMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_VTBlobBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_VTCorruptDetector
|| __DATA.__objc_data _OBJC_METACLASS_$_VTEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_VTEventAudioCorrupt
|| __DATA.__objc_data _OBJC_METACLASS_$_VTEventNearTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_VTEventPHSReject
|| __DATA.__objc_data _OBJC_METACLASS_$_VTEventPrepare
|| __DATA.__objc_data _OBJC_METACLASS_$_VTEventTrackerManager
|| __DATA.__objc_data _OBJC_METACLASS_$_VTEventTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_VTInvalidSATEntriesCleaner
|| __DATA.__objc_data _OBJC_METACLASS_$_VTKeywordAnalyzerNDAPI
|| __DATA.__objc_data _OBJC_METACLASS_$_VTKeywordAnalyzerNDEAPI
|| __DATA.__objc_data _OBJC_METACLASS_$_VTKeywordAnalyzerPhraseScore
|| __DATA.__objc_data _OBJC_METACLASS_$_VTKeywordAnalyzerQuasar
|| __DATA.__objc_data _OBJC_METACLASS_$_VTKeywordAnalyzerResults
|| __DATA.__objc_data _OBJC_METACLASS_$_VTKeywordDetector
|| __DATA.__objc_data _OBJC_METACLASS_$_VTKeywordDetectorAssets
|| __DATA.__objc_data _OBJC_METACLASS_$_VTKeywordDetectorContext
|| __DATA.__objc_data _OBJC_METACLASS_$_VTKeywordDetectorPhraseScore
|| __DATA.__objc_data _OBJC_METACLASS_$_VTKeywordDetectorResults
|| __DATA.__objc_data _OBJC_METACLASS_$_VTLowPowerModeMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_VTNovDetector
|| __DATA.__objc_data _OBJC_METACLASS_$_VTNovDetectorResult
|| __DATA.__objc_data _OBJC_METACLASS_$_VTPeerRemoteConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_VTPhraseSpotterControlConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_VTPhraseSpotterControlRemote
|| __DATA.__objc_data _OBJC_METACLASS_$_VTPhraseSpotterEnabledPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_VTSiriAssertionMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_VTSiriNotifications
|| __DATA.__objc_data _OBJC_METACLASS_$_VTSoftwareUpdateCheckingMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_VTSpeakerIdUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_VTTextDependentSpeakerRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_VTTranscriber
|| __DATA.__objc_data _OBJC_METACLASS_$_VTTriggerEventMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_VTUtteranceMetadataManager
|| __DATA.__objc_data _OBJC_METACLASS_$_VTVoiceProfileMigration
|| __DATA.__objc_data _OBJC_METACLASS_$_VTVoiceProfileRetrainer
|| __DATA.__objc_data _OBJC_METACLASS_$_VTVoiceTriggerEnabledPolicyHorseman
|| __DATA.__objc_data _OBJC_METACLASS_$_VTVoiceTriggerEnabledPolicyNonAOP
|| __DATA.__objc_data _OBJC_METACLASS_$_VTVoiceTriggerEnabledPolicyWatch
|| __DATA_CONST.__const _VTAssetTypeVoiceTriggerModel
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_biometricClue
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_captureFilePath
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_configData
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_configPath
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_configVersion
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_deltaTimeFromlastPHSReject
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_deviceHandHeld
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_didWakeAP
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_downtime
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_earlyDetectFiredMachTime
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_earlyDetectFiredTime
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_effectiveThreshold
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_extraSamplesAtStart
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_firstPassScore
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_hardwareSamplerate
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_isMaximized
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_isSecondChance
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_isTriggerEvent
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_languageCode
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_lastConsecutivePHSRejects
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_numFramesFromPreTrigger
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_numberOfHSPayloadUtterances
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_numberOfPayloadUtterances
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_onBatteryPower
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_recognizerScore
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_recognizerScoreScaleFactor
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_recognizerThresholdOffset
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_recognizerWaitTime
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_satBeingTrained
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_satNumTrainingUtts
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_satScore
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_satThreshold
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_satTriggered
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_siriIsActiveOrOtherAssertion
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_textDependentSpeakerRecognizerCombinationWeight
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_textDependentSpeakerRecognizerCombinedScore
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_textDependentSpeakerRecognizerCombinedThreshold
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_textDependentSpeakerRecognizerScore
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_threshold
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_triggerEndMachTime
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_triggerEndTime
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_triggerFireMachTime
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_triggerFireSeconds
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_triggerFiredTime
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_triggerPhrases
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_triggerScore
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_triggerStartMachTime
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_triggerStartTime
|| __DATA_CONST.__const _VTPhraseSpotterEventInformationKey_uptime
|| __DATA_CONST.__const _VTRemoteConnectionErrorDomain
|| __DATA_CONST.__const __VTPhraseSpotterControlServiceName
|| __DATA_CONST.__const __ZTI11NAutoString
|| __DATA_CONST.__const __ZTI11NOffsetFile
|| __DATA_CONST.__const __ZTI11NSATSpeaker
|| __DATA_CONST.__const __ZTI11TSSATScorer
|| __DATA_CONST.__const __ZTI12NSATImpostor
|| __DATA_CONST.__const __ZTI13TSHMMDetector
|| __DATA_CONST.__const __ZTI14NDEHMMDetector
|| __DATA_CONST.__const __ZTI14NPhoneHMMArray
|| __DATA_CONST.__const __ZTI17NFixedPointScales
|| __DATA_CONST.__const __ZTI18NFloatDistribution
|| __DATA_CONST.__const __ZTI19NDistributionLoader
|| __DATA_CONST.__const __ZTI19TSSupervectorScorer
|| __DATA_CONST.__const __ZTI20NDeepnetDistribution
|| __DATA_CONST.__const __ZTI22NGaussianMixtureModels
|| __DATA_CONST.__const __ZTI25NGaussianFixedPointScales
|| __DATA_CONST.__const __ZTI5NFile
|| __DATA_CONST.__const __ZTI6NTimer
|| __DATA_CONST.__const __ZTI6NZFile
|| __DATA_CONST.__const __ZTI7NString
|| __DATA_CONST.__const __ZTI8NFidFile
|| __DATA_CONST.__const __ZTI8NZipFile
|| __DATA_CONST.__const __ZTI9NPipeFile
|| __DATA_CONST.__const __ZTV11NAutoString
|| __DATA_CONST.__const __ZTV11NOffsetFile
|| __DATA_CONST.__const __ZTV11NSATSpeaker
|| __DATA_CONST.__const __ZTV11TSSATScorer
|| __DATA_CONST.__const __ZTV12NSATImpostor
|| __DATA_CONST.__const __ZTV13TSHMMDetector
|| __DATA_CONST.__const __ZTV14NDEHMMDetector
|| __DATA_CONST.__const __ZTV17NFixedPointScales
|| __DATA_CONST.__const __ZTV18NFloatDistribution
|| __DATA_CONST.__const __ZTV19NDistributionLoader
|| __DATA_CONST.__const __ZTV19TSSupervectorScorer
|| __DATA_CONST.__const __ZTV20NDeepnetDistribution
|| __DATA_CONST.__const __ZTV25NGaussianFixedPointScales
|| __DATA_CONST.__const __ZTV5NFile
|| __DATA_CONST.__const __ZTV6NTimer
|| __DATA_CONST.__const __ZTV6NZFile
|| __DATA_CONST.__const __ZTV7NString
|| __DATA_CONST.__const __ZTV8NFidFile
|| __DATA_CONST.__const __ZTV8NZipFile
|| __DATA_CONST.__const __ZTV9NPipeFile
|| __DATA_CONST.__const _kAggKeyVTNumDiscardImplicitUttScore
|| __DATA_CONST.__const _kAggKeyVTNumDiscardedUttsPHS
|| __DATA_CONST.__const _kAggKeyVTNumExplicitUttScore
|| __DATA_CONST.__const _kAggKeyVTNumFailedExplicitUttScore
|| __DATA_CONST.__const _kAggKeyVTNumImplicitUttScore
|| __DATA_CONST.__const _kAggKeyVTNumPrunedUttsPHS
|| __DATA_CONST.__const _kAggKeyVTNumRetainedUttsPHS
|| __DATA_CONST.__const _kVTAudioRecordContextKey
|| __DATA_CONST.__const _kVTAudioRecordDeviceInfoKey
|| __DATA_CONST.__const _kVTContainsPayload
|| __DATA_CONST.__const _kVTExplicitTrainingType
|| __DATA_CONST.__const _kVTFarField
|| __DATA_CONST.__const _kVTImplicitTrainingType
|| __DATA_CONST.__const _kVTKeywordDetectorAssetPathContextKey
|| __DATA_CONST.__const _kVTKeywordDetectorAudioOptionKey
|| __DATA_CONST.__const _kVTKeywordDetectorCategoryContextKey
|| __DATA_CONST.__const _kVTKeywordDetectorEnableMultiPhraseVTKey
|| __DATA_CONST.__const _kVTKeywordDetectorLocaleContextKey
|| __DATA_CONST.__const _kVTMetaHandheldKey
|| __DATA_CONST.__const _kVTMetaProductTypeKey
|| __DATA_CONST.__const _kVTMetaProductVersionKey
|| __DATA_CONST.__const _kVTMetaTrainingTypeKey
|| __DATA_CONST.__const _kVTMetaUtteranceWavKey
|| __DATA_CONST.__const _kVTMetaVersionFileName
|| __DATA_CONST.__const _kVTMetaVersionKey
|| __DATA_CONST.__const _kVTNearField
|| __DATA_CONST.__const _kVTNotBackedupPreferencesDomain
|| __DATA_CONST.__const _kVTOtherBiometricResultKey
|| __DATA_CONST.__const _kVTPreferencesDomain
|| __DATA_CONST.__const _kVTPreferencesPhraseSpotterEnabledDidChangeDarwinNotification
|| __DATA_CONST.__const _kVTPreferencesVoiceTriggerEnabledDidChangeDarwinNotification
|| __DATA_CONST.__const _kVTRecordingTimeStampKey
|| __DATA_DIRTY.__common _VTLogContextFacilityVoiceTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTAssetMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTBuiltInRTModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTCoreSpeechKeepAliveHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTEventMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTFirstUnlockMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTGestureMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTGestureMonitorPhone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTLanguageCodeUpdateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTLockScreenMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTPhraseSpotter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTSiriEnabledMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTSiriPHash
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTSiriRestrictionOnLockScreenMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTSpringboardStartMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTStateManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTTriggerEventMonitorManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTVoiceTriggerEnabledMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTVoiceTriggerEnabledPolicyAOP
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTXPCServiceClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VTXPCServiceServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTAssetMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTBuiltInRTModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTCoreSpeechKeepAliveHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTEventMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTFirstUnlockMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTGestureMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTGestureMonitorPhone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTLanguageCodeUpdateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTLockScreenMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTPhraseSpotter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTSiriEnabledMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTSiriPHash
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTSiriRestrictionOnLockScreenMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTSpringboardStartMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTStateManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTTriggerEventMonitorManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTVoiceTriggerEnabledMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTVoiceTriggerEnabledPolicyAOP
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTXPCServiceClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VTXPCServiceServer
|| __TEXT.__const _VTPhraseSpotterDefaultAnalysisSampleRates
|| __TEXT.__const _VTPhraseSpotterDefaultDeviceHandHeldTimeout
|| __TEXT.__const _VTPhraseSpotterDefaultKeywordId
|| __TEXT.__const _VTPhraseSpotterDefaultMarshRecognitionSamples
|| __TEXT.__const _VTPhraseSpotterDefaultMarshRecognitionTrailingTime
|| __TEXT.__const _VTPhraseSpotterDefaultMinimumExplicitUtts
|| __TEXT.__const _VTPhraseSpotterDefaultNearMissLogDelaySamples
|| __TEXT.__const _VTPhraseSpotterDefaultNumChannels
|| __TEXT.__const _VTPhraseSpotterDefaultSecondChanceEffectiveTime
|| __TEXT.__const _VTPhraseSpotterDefaultSecondPassPrependingTime
|| __TEXT.__const _VTPhraseSpotterDefaultSecondPassResetSamples
|| __TEXT.__const _VTPhraseSpotterDefaultTrainingAudioBufferLengthInSeconds
|| __TEXT.__const __ZTS11NAutoString
|| __TEXT.__const __ZTS11NOffsetFile
|| __TEXT.__const __ZTS11NSATSpeaker
|| __TEXT.__const __ZTS11TSSATScorer
|| __TEXT.__const __ZTS12NSATImpostor
|| __TEXT.__const __ZTS13TSHMMDetector
|| __TEXT.__const __ZTS14NDEHMMDetector
|| __TEXT.__const __ZTS14NPhoneHMMArray
|| __TEXT.__const __ZTS17NFixedPointScales
|| __TEXT.__const __ZTS18NFloatDistribution
|| __TEXT.__const __ZTS19NDistributionLoader
|| __TEXT.__const __ZTS19TSSupervectorScorer
|| __TEXT.__const __ZTS20NDeepnetDistribution
|| __TEXT.__const __ZTS22NGaussianMixtureModels
|| __TEXT.__const __ZTS25NGaussianFixedPointScales
|| __TEXT.__const __ZTS5NFile
|| __TEXT.__const __ZTS6NTimer
|| __TEXT.__const __ZTS6NZFile
|| __TEXT.__const __ZTS7NString
|| __TEXT.__const __ZTS8NFidFile
|| __TEXT.__const __ZTS8NZipFile
|| __TEXT.__const __ZTS9NPipeFile
|| __TEXT.__const _kCurrVTMetaVersion
|| __TEXT.__const _kNDEConfigDataMaxSizeBytes
|| __TEXT.__const _kNDEStateBufferSizeBytes
|| __TEXT.__const _kTdSpeakerRecognizerDetectionWaitTimeMs
|| __TEXT.__const _kTdSpeakerRecognizerRetrainingWaitTimeMs
|| __TEXT.__const _kVTNonceTriggerExpireTime
|| __TEXT.__text _NDBlobBuildBlob
|| __TEXT.__text _NDBlobBuildDefaultBlob
|| __TEXT.__text _NDBlobGetBlobSize
|| __TEXT.__text _NDBlobGetDefaultBlobSize
|| __TEXT.__text _VTAudioLogDirectory
|| __TEXT.__text _VTBuildVersion
|| __TEXT.__text _VTInternalPreferencesSynchronize
|| __TEXT.__text _VTLogDirectory
|| __TEXT.__text _VTLogInitIfNeeded
|| __TEXT.__text _VTMakeTimestampedAudioLogFilenameWithPrefixAndSuffix
|| __TEXT.__text __VTNotBackedupPreferencesSetValueForKey
|| __TEXT.__text __VTNotBackedupPreferencesSynchronize
|| __TEXT.__text __VTNotBackedupPreferencesValueForKey
|| __TEXT.__text __VTPreferencesSetValueForKey
|| __TEXT.__text __VTPreferencesValueForKey
|| __TEXT.__text __VTReloadVoiceTrigger
|| __TEXT.__text __Z10gNextPrimeRKj
|| __TEXT.__text __Z11_nde_createPKvm
|| __TEXT.__text __Z12nextPowerOf2RKi
|| __TEXT.__text __Z13base64_decodeRK7NStringb
|| __TEXT.__text __Z13base64_encodeRK7NString
|| __TEXT.__text __Z18sanity_check_modelPK15NDEConfigHeaderm
|| __TEXT.__text __Z20read_gaussian_modelsRK7NString
|| __TEXT.__text __Z8gIsPrimeRKj
|| __TEXT.__text __Z9initndlibv
|| __TEXT.__text __ZN10NScrambler10unscrambleERK7NString
|| __TEXT.__text __ZN10NScrambler7convertERK7NString
|| __TEXT.__text __ZN10NScrambler8scrambleERK7NString
|| __TEXT.__text __ZN10NScrambler9keystreamEv
|| __TEXT.__text __ZN10NScramblerC1E7NString
|| __TEXT.__text __ZN10NScramblerC2E7NString
|| __TEXT.__text __ZN11AccelCosine10lifterCoefEv
|| __TEXT.__text __ZN11AccelCosine4initERKjS1_S1_
|| __TEXT.__text __ZN11AccelCosine7dctCoefEv
|| __TEXT.__text __ZN11AccelWindow11initHammingEv
|| __TEXT.__text __ZN11AccelWindow4initERKjRKbS3_
|| __TEXT.__text __ZN11AccelWindow5applyER6NArrayIfE
|| __TEXT.__text __ZN11AccelWindow7rescaleER6NArrayIfE
|| __TEXT.__text __ZN11BlobBuilder13buildDistBlobERK14NConfigSection
|| __TEXT.__text __ZN11BlobBuilder13serializeHeapER7NString
|| __TEXT.__text __ZN11BlobBuilder15buildNormConfigERK14NConfigSection
|| __TEXT.__text __ZN11BlobBuilder15getHmmArraySizeEv
|| __TEXT.__text __ZN11BlobBuilder16buildConfgHeaderEv
|| __TEXT.__text __ZN11BlobBuilder16serializePaddingEjR7NString
|| __TEXT.__text __ZN11BlobBuilder17buildAcAnalConfigERK14NConfigSection
|| __TEXT.__text __ZN11BlobBuilder17buildDetectConfigERK14NConfigSectionS2_S2_
|| __TEXT.__text __ZN11BlobBuilder17getNormConfigSizeEv
|| __TEXT.__text __ZN11BlobBuilder17serializeDistBlobER7NString
|| __TEXT.__text __ZN11BlobBuilder17serializeHmmArrayER7NString
|| __TEXT.__text __ZN11BlobBuilder18analysisTargetKindERK14NConfigSectionR15NDEAcAnalConfig
|| __TEXT.__text __ZN11BlobBuilder18buildPhoneHmmArrayERK14NConfigSection
|| __TEXT.__text __ZN11BlobBuilder19getAcAnalConfigSizeEv
|| __TEXT.__text __ZN11BlobBuilder19getConfigHeaderSizeEv
|| __TEXT.__text __ZN11BlobBuilder19getDistributionSizeEv
|| __TEXT.__text __ZN11BlobBuilder19serializeNormConfigER7NString
|| __TEXT.__text __ZN11BlobBuilder21getActualHmmArraySizeEv
|| __TEXT.__text __ZN11BlobBuilder21getDetectorConfigSizeEv
|| __TEXT.__text __ZN11BlobBuilder21serializeAcAnalConfigER7NString
|| __TEXT.__text __ZN11BlobBuilder21serializeConfigHeaderER7NString
|| __TEXT.__text __ZN11BlobBuilder21serializeDetectConfigER7NString
|| __TEXT.__text __ZN11BlobBuilder23sanityCheckAcAnalOptionERK14NConfigSection
|| __TEXT.__text __ZN11BlobBuilder25getActualDistributionSizeEv
|| __TEXT.__text __ZN11BlobBuilder5buildERK7NConfigR7NStringb
|| __TEXT.__text __ZN11BlobBuilder9buildBlobERK7NConfigR7NStringb
|| __TEXT.__text __ZN11NAutoString8appendToEPKvRKj
|| __TEXT.__text __ZN11NAutoString8assignToEPKvRKj
|| __TEXT.__text __ZN11NAutoStringC1ERK7NString
|| __TEXT.__text __ZN11NAutoStringC1ERKS_
|| __TEXT.__text __ZN11NAutoStringC1ERKjS1_
|| __TEXT.__text __ZN11NAutoStringC1Ev
|| __TEXT.__text __ZN11NAutoStringC2ERK7NString
|| __TEXT.__text __ZN11NAutoStringC2ERKS_
|| __TEXT.__text __ZN11NAutoStringC2ERKjS1_
|| __TEXT.__text __ZN11NAutoStringC2Ev
|| __TEXT.__text __ZN11NAutoStringD0Ev
|| __TEXT.__text __ZN11NAutoStringD1Ev
|| __TEXT.__text __ZN11NAutoStringD2Ev
|| __TEXT.__text __ZN11NAutoStringaSEPKc
|| __TEXT.__text __ZN11NAutoStringaSERK7NString
|| __TEXT.__text __ZN11NAutoStringpLERK7NString
|| __TEXT.__text __ZN11NLRHMMModel4initERK9NPhoneHMMRKiRKf
|| __TEXT.__text __ZN11NOffsetFile10readStringEv
|| __TEXT.__text __ZN11NOffsetFile11getPositionEv
|| __TEXT.__text __ZN11NOffsetFile11setPositionERKj
|| __TEXT.__text __ZN11NOffsetFile4openERK7NStringS2_RKjS4_
|| __TEXT.__text __ZN11NOffsetFile4readERKj
|| __TEXT.__text __ZN11NOffsetFile4readERKjR7NString
|| __TEXT.__text __ZN11NOffsetFile4readEv
|| __TEXT.__text __ZN11NOffsetFile8readLineERKcR7NString
|| __TEXT.__text __ZN11NOffsetFileC1ERK7NStringS2_RKjS4_
|| __TEXT.__text __ZN11NOffsetFileC1Ev
|| __TEXT.__text __ZN11NOffsetFileC2ERK7NStringS2_RKjS4_
|| __TEXT.__text __ZN11NOffsetFileC2Ev
|| __TEXT.__text __ZN11NOffsetFileD0Ev
|| __TEXT.__text __ZN11NOffsetFileD1Ev
|| __TEXT.__text __ZN11NOffsetFileD2Ev
|| __TEXT.__text __ZN11NSATSpeaker10loadOrInitEv
|| __TEXT.__text __ZN11NSATSpeaker15writeIfModifiedEv
|| __TEXT.__text __ZN11NSATSpeaker4readEv
|| __TEXT.__text __ZN11NSATSpeaker5resetEv
|| __TEXT.__text __ZN11NSATSpeaker6insertERK6NArrayIfE
|| __TEXT.__text __ZN11NSATSpeaker6removeERKj
|| __TEXT.__text __ZN11NSATSpeaker9configureERKjS1_RKbS3_S3_RKfS1_RK7NStringS8_
|| __TEXT.__text __ZN11NSATSpeakerC1Ev
|| __TEXT.__text __ZN11NSATSpeakerC2Ev
|| __TEXT.__text __ZN11NSATSpeakerD0Ev
|| __TEXT.__text __ZN11NSATSpeakerD1Ev
|| __TEXT.__text __ZN11NSATSpeakerD2Ev
|| __TEXT.__text __ZN11TSSATScorer12deleteVectorERKj
|| __TEXT.__text __ZN11TSSATScorer12setModelFileERK7NString
|| __TEXT.__text __ZN11TSSATScorer16scoreTransformedEv
|| __TEXT.__text __ZN11TSSATScorer18scoreSpeakerVectorEPKfj
|| __TEXT.__text __ZN11TSSATScorer4initERK7NStringS2_RKjRKbS6_S6_RKfS4_S4_S4_
|| __TEXT.__text __ZN11TSSATScorer5resetEv
|| __TEXT.__text __ZN11TSSATScorer5scoreEPKfj
|| __TEXT.__text __ZN11TSSATScorer6updateEv
|| __TEXT.__text __ZN11TSSATScorerC1Ev
|| __TEXT.__text __ZN11TSSATScorerC2Ev
|| __TEXT.__text __ZN11TSSATScorerD0Ev
|| __TEXT.__text __ZN11TSSATScorerD1Ev
|| __TEXT.__text __ZN11TSSATScorerD2Ev
|| __TEXT.__text __ZN12IntNovDetect10clearErrorEv
|| __TEXT.__text __ZN12IntNovDetect10getresultsEv
|| __TEXT.__text __ZN12IntNovDetect10initializeEPKcS1_
|| __TEXT.__text __ZN12IntNovDetect10sat_updateEv
|| __TEXT.__text __ZN12IntNovDetect11phrasecountEv
|| __TEXT.__text __ZN12IntNovDetect11rescoreInitEv
|| __TEXT.__text __ZN12IntNovDetect11sat_analyzeEPKfj
|| __TEXT.__text __ZN12IntNovDetect13getresultsstrEv
|| __TEXT.__text __ZN12IntNovDetect13zeroWavePrimeEv
|| __TEXT.__text __ZN12IntNovDetect14getsupervectorEj
|| __TEXT.__text __ZN12IntNovDetect14sat_initializeEPKc
|| __TEXT.__text __ZN12IntNovDetect15feedFrameToNormERK6NFrame
|| __TEXT.__text __ZN12IntNovDetect15sat_vectorcountEv
|| __TEXT.__text __ZN12IntNovDetect16advanceDetectionEv
|| __TEXT.__text __ZN12IntNovDetect16getphraseresultsEj
|| __TEXT.__text __ZN12IntNovDetect16sat_deletevectorEi
|| __TEXT.__text __ZN12IntNovDetect16scoresupervectorEPKfj
|| __TEXT.__text __ZN12IntNovDetect19feedFrameToDetectorERK6NFrame
|| __TEXT.__text __ZN12IntNovDetect19nextFrameFromAcanalEv
|| __TEXT.__text __ZN12IntNovDetect20sat_getspeakervectorEi
|| __TEXT.__text __ZN12IntNovDetect22handleWavedataOverflowEPKvRiRKb
|| __TEXT.__text __ZN12IntNovDetect22sat_analyzetransformedEPKfj
|| __TEXT.__text __ZN12IntNovDetect23resetMultiphraseResultsEv
|| __TEXT.__text __ZN12IntNovDetect24updateMultiphraseResultsERK13TSHMMDetectorRKfS4_
|| __TEXT.__text __ZN12IntNovDetect5resetEv
|| __TEXT.__text __ZN12IntNovDetect8setErrorERK7NString
|| __TEXT.__text __ZN12IntNovDetect8wavedataEPKsi
|| __TEXT.__text __ZN12IntNovDetect9getoptionEPKc
|| __TEXT.__text __ZN12IntNovDetect9resetbestEv
|| __TEXT.__text __ZN12IntNovDetect9sat_resetEv
|| __TEXT.__text __ZN12IntNovDetect9wavedatafEPKfi
|| __TEXT.__text __ZN12IntNovDetectC1Ev
|| __TEXT.__text __ZN12IntNovDetectC2Ev
|| __TEXT.__text __ZN12IntNovDetectD1Ev
|| __TEXT.__text __ZN12IntNovDetectD2Ev
|| __TEXT.__text __ZN12NDEFrameProc4initERKjRKfS3_RKb
|| __TEXT.__text __ZN12NDEFrameProc5applyEPKfRKj
|| __TEXT.__text __ZN12NDEFrameProcC1Ev
|| __TEXT.__text __ZN12NDEFrameProcC2Ev
|| __TEXT.__text __ZN12NDynamicMFCC4initERKjS1_S1_
|| __TEXT.__text __ZN12NDynamicMFCC5resetEv
|| __TEXT.__text __ZN12NDynamicMFCC6finishEv
|| __TEXT.__text __ZN12NDynamicMFCC7isFrameERK6NArrayIfE
|| __TEXT.__text __ZN12NDynamicMFCC8getFrameEv
|| __TEXT.__text __ZN12NDynamicMFCC9makeFrameERK6NArrayIfE
|| __TEXT.__text __ZN12NFrameWindow10frameReadyEv
|| __TEXT.__text __ZN12NFrameWindow11copyInFrameEPKf
|| __TEXT.__text __ZN12NFrameWindow14endPadOneFrameEv
|| __TEXT.__text __ZN12NFrameWindow20setOutputFrameWindowEPf
|| __TEXT.__text __ZN12NFrameWindow20setOutputFrameWindowER6NFrame
|| __TEXT.__text __ZN12NFrameWindow5resetEv
|| __TEXT.__text __ZN12NFrameWindow9configureERKjS1_S1_S1_S1_S1_S1_
|| __TEXT.__text __ZN12NFrameWindow9endFramesEv
|| __TEXT.__text __ZN12NFrameWindow9pushFrameEPKf
|| __TEXT.__text __ZN12NFrameWindow9pushFrameERK6NFrame
|| __TEXT.__text __ZN12NFrameWindowC1Ev
|| __TEXT.__text __ZN12NFrameWindowC2Ev
|| __TEXT.__text __ZN12NSATImpostor10dotproductERK6NArrayIfEPKfRKj
|| __TEXT.__text __ZN12NSATImpostor12matrixvectorEPKfRK6NArrayIfEPfRKjS8_S8_
|| __TEXT.__text __ZN12NSATImpostor4loadERK7NString
|| __TEXT.__text __ZN12NSATImpostor5scoreERK6NArrayIfERfS4_
|| __TEXT.__text __ZN12NSATImpostorC1Ev
|| __TEXT.__text __ZN12NSATImpostorC2Ev
|| __TEXT.__text __ZN12NSATImpostorD0Ev
|| __TEXT.__text __ZN12NSATImpostorD1Ev
|| __TEXT.__text __ZN12NSATImpostorD2Ev
|| __TEXT.__text __ZN13AccelWin2MFCC3runER6NArrayIfE
|| __TEXT.__text __ZN13AccelWin2MFCC4initERKjS1_RKbS3_S3_S3_S1_RKfS5_S1_S1_S5_S5_S5_S5_
|| __TEXT.__text __ZN13AccelWin2MFCC8initDataEv
|| __TEXT.__text __ZN13AccelWin2MFCC8initProcEv
|| __TEXT.__text __ZN13AccelWin2MFCCC1Ev
|| __TEXT.__text __ZN13AccelWin2MFCCC2Ev
|| __TEXT.__text __ZN13AccelWin2MFCCD1Ev
|| __TEXT.__text __ZN13AccelWin2MFCCD2Ev
|| __TEXT.__text __ZN13IntNovDetectE12processframeEPKfiPbS2_P9NDEResult
|| __TEXT.__text __ZN13IntNovDetectE15feedFrameToNormERK6NFrame
|| __TEXT.__text __ZN13IntNovDetectE16setTriggerSignalEPbS0_RKj
|| __TEXT.__text __ZN13IntNovDetectE19feedFrameToDetectorERK6NFrame
|| __TEXT.__text __ZN13IntNovDetectE22handleWavedataOverflowEPKsRKi
|| __TEXT.__text __ZN13IntNovDetectE25advanceDetectionAfterFeedEv
|| __TEXT.__text __ZN13IntNovDetectE4initEPK20NDEHMMDetectorConfigPK15NDEAcAnalConfigPK19NLocalCepNormConfigPKcRKjSA_SC_
|| __TEXT.__text __ZN13IntNovDetectE5resetEv
|| __TEXT.__text __ZN13IntNovDetectE7processEPKsiPbS2_P9NDEResult
|| __TEXT.__text __ZN13IntNovDetectE8wavedataEPKsi
|| __TEXT.__text __ZN13IntNovDetectE9framedataEPKfi
|| __TEXT.__text __ZN13IntNovDetectE9getResultEP9NDEResult
|| __TEXT.__text __ZN13IntNovDetectE9resetbestEv
|| __TEXT.__text __ZN13IntNovDetectEC1Ev
|| __TEXT.__text __ZN13IntNovDetectEC2Ev
|| __TEXT.__text __ZN13IntNovDetectED1Ev
|| __TEXT.__text __ZN13IntNovDetectED2Ev
|| __TEXT.__text __ZN13NLocalCepNorm10frameReadyEv
|| __TEXT.__text __ZN13NLocalCepNorm14setOutputFrameER6NFrame
|| __TEXT.__text __ZN13NLocalCepNorm5resetEv
|| __TEXT.__text __ZN13NLocalCepNorm6resyncEv
|| __TEXT.__text __ZN13NLocalCepNorm8getFrameEv
|| __TEXT.__text __ZN13NLocalCepNorm9configureERKjS1_RKf
|| __TEXT.__text __ZN13NLocalCepNorm9endFramesEv
|| __TEXT.__text __ZN13NLocalCepNorm9pushFrameERK6NFrame
|| __TEXT.__text __ZN13NLocalCepNormC1Ev
|| __TEXT.__text __ZN13NLocalCepNormC2Ev
|| __TEXT.__text __ZN13TSHMMDetector14disablePrimingEv
|| __TEXT.__text __ZN13TSHMMDetector16updateStateProbsERK11NLRHMMModelR17NLRHMMStateTokensRKfRKb
|| __TEXT.__text __ZN13TSHMMDetector19skipUntilInitializeERK6NFrame
|| __TEXT.__text __ZN13TSHMMDetector23skipUntilProcessedFrameEv
|| __TEXT.__text __ZN13TSHMMDetector4initERK7NStringS2_S2_S2_S2_fjjjji
|| __TEXT.__text __ZN13TSHMMDetector5resetEv
|| __TEXT.__text __ZN13TSHMMDetector8maxScoreERK6NArrayIfE
|| __TEXT.__text __ZN13TSHMMDetector9feedFrameERK6NFrame
|| __TEXT.__text __ZN13TSHMMDetector9stepFrameERK6NFrame
|| __TEXT.__text __ZN13TSHMMDetectorC1Ev
|| __TEXT.__text __ZN13TSHMMDetectorC2Ev
|| __TEXT.__text __ZN13TSHMMDetectorD0Ev
|| __TEXT.__text __ZN13TSHMMDetectorD1Ev
|| __TEXT.__text __ZN13TSHMMDetectorD2Ev
|| __TEXT.__text __ZN14AccelMelFilter10setFiltersERK6NArrayIfES3_S3_
|| __TEXT.__text __ZN14AccelMelFilter3runEPf
|| __TEXT.__text __ZN14AccelMelFilter4initERKjS1_S1_RKfS3_S3_S3_
|| __TEXT.__text __ZN14AccelMelFilter9setPointsERKfS1_S1_S1_R6NArrayIfES4_S4_
|| __TEXT.__text __ZN14NConfigSection6setOptERK7NStringS2_
|| __TEXT.__text __ZN14NConfigSection9appendOptERK7NStringS2_
|| __TEXT.__text __ZN14NConfigSectionC1ERK7NString
|| __TEXT.__text __ZN14NConfigSectionC2ERK7NString
|| __TEXT.__text __ZN14NDEHMMDetector23skipUntilProcessedFrameEv
|| __TEXT.__text __ZN14NDEHMMDetector4initEPK20NDEHMMDetectorConfigPKcRKjS4_S6_fj
|| __TEXT.__text __ZN14NDEHMMDetector5resetEv
|| __TEXT.__text __ZN14NDEHMMDetector7initHMMEPKcRKjS3_
|| __TEXT.__text __ZN14NDEHMMDetector8maxScoreERK6NArrayIfE
|| __TEXT.__text __ZN14NDEHMMDetector9feedFrameERK6NFrame
|| __TEXT.__text __ZN14NDEHMMDetector9stepFrameERK6NFrame
|| __TEXT.__text __ZN14NDEHMMDetectorC1Ev
|| __TEXT.__text __ZN14NDEHMMDetectorC2Ev
|| __TEXT.__text __ZN14NDEHMMDetectorD0Ev
|| __TEXT.__text __ZN14NDEHMMDetectorD1Ev
|| __TEXT.__text __ZN14NDEHMMDetectorD2Ev
|| __TEXT.__text __ZN14NPhoneHMMArray16endReverseLookupEv
|| __TEXT.__text __ZN14NPhoneHMMArray17initReverseLookupEv
|| __TEXT.__text __ZN14NPhoneHMMArray4readERK7NStringRKj
|| __TEXT.__text __ZN14NPhoneHMMArrayC1Ev
|| __TEXT.__text __ZN14NPhoneHMMArrayC2Ev
|| __TEXT.__text __ZN14NPhoneHMMArrayD0Ev
|| __TEXT.__text __ZN14NPhoneHMMArrayD1Ev
|| __TEXT.__text __ZN14NPhoneHMMArrayD2Ev
|| __TEXT.__text __ZN15AccelStaticMFCC4initERKjS1_S1_RKbRKfS3_S3_S3_S1_S5_S5_S1_S1_S5_S5_S5_S5_
|| __TEXT.__text __ZN15AccelStaticMFCC5resetEv
|| __TEXT.__text __ZN15AccelStaticMFCC5startEPKvRKjRK11NSampleType
|| __TEXT.__text __ZN15AccelStaticMFCC7isFrameEv
|| __TEXT.__text __ZN15AccelStaticMFCC7preemphEv
|| __TEXT.__text __ZN15NLRHMMTraceback4dropERK6NArrayIbE
|| __TEXT.__text __ZN15NLRHMMTraceback5resetEv
|| __TEXT.__text __ZN15NLRHMMTraceback6resizeERKjS1_
|| __TEXT.__text __ZN15NLRHMMTracebackC1ERKjS1_
|| __TEXT.__text __ZN15NLRHMMTracebackC2ERKjS1_
|| __TEXT.__text __ZN15NRingDropBuffer5resetEv
|| __TEXT.__text __ZN15NRingDropBuffer6resizeERKj
|| __TEXT.__text __ZN15NRingDropBuffer9pushFrameERK6NFrame
|| __TEXT.__text __ZN15NRingDropBufferC1ERKj
|| __TEXT.__text __ZN15NRingDropBufferC2ERKj
|| __TEXT.__text __ZN17NFixedPointScales10initializeERKiRK6NArrayIiE
|| __TEXT.__text __ZN17NFixedPointScales15makeParamScalesEv
|| __TEXT.__text __ZN17NFixedPointScales4readER8NFilePtrRKjRKb
|| __TEXT.__text __ZN17NFixedPointScales5setUpEv
|| __TEXT.__text __ZN17NFixedPointScalesC1Ev
|| __TEXT.__text __ZN17NFixedPointScalesC2Ev
|| __TEXT.__text __ZN17NFixedPointScalesD0Ev
|| __TEXT.__text __ZN17NFixedPointScalesD1Ev
|| __TEXT.__text __ZN17NFixedPointScalesD2Ev
|| __TEXT.__text __ZN17NLRHMMStateTokens4initERKj
|| __TEXT.__text __ZN17NLRHMMStateTokens5resetEv
|| __TEXT.__text __ZN18NFloatDistribution4readERK7NString
|| __TEXT.__text __ZN18NFloatDistributionC1Ev
|| __TEXT.__text __ZN18NFloatDistributionC2Ev
|| __TEXT.__text __ZN18NFloatDistributionD0Ev
|| __TEXT.__text __ZN18NFloatDistributionD1Ev
|| __TEXT.__text __ZN18NFloatDistributionD2Ev
|| __TEXT.__text __ZN19NDistributionLoader4readERK7NString
|| __TEXT.__text __ZN19NDistributionLoaderC1Ev
|| __TEXT.__text __ZN19NDistributionLoaderC2Ev
|| __TEXT.__text __ZN19NDistributionLoaderD0Ev
|| __TEXT.__text __ZN19NDistributionLoaderD1Ev
|| __TEXT.__text __ZN19NDistributionLoaderD2Ev
|| __TEXT.__text __ZN19NWavChunk2HTKFrames10initStaticEv
|| __TEXT.__text __ZN19NWavChunk2HTKFrames13changeSamRateERKj
|| __TEXT.__text __ZN19NWavChunk2HTKFrames3runEPKvRKjRK11NSampleTypeR14NResizingQueueI6NFrameE
|| __TEXT.__text __ZN19NWavChunk2HTKFrames4initERK7NStringRKjRKbS6_
|| __TEXT.__text __ZN19NWavChunk2HTKFrames5resetEv
|| __TEXT.__text __ZN19NWavChunk2HTKFrames6finishER14NResizingQueueI6NFrameE
|| __TEXT.__text __ZN19NWavChunk2HTKFrames7initDynEv
|| __TEXT.__text __ZN19NWavChunk2HTKFrames7loadCfgERK7NStringRKb
|| __TEXT.__text __ZN19NWavChunk2HTKFrames8c0InvertEv
|| __TEXT.__text __ZN19NWavChunk2HTKFrames8resetOptEv
|| __TEXT.__text __ZN19NWavChunk2HTKFrames9toOutTypeERK6NArrayIfE
|| __TEXT.__text __ZN19TSSupervectorScorer4initERK7NStringj
|| __TEXT.__text __ZN19TSSupervectorScorer5scoreEPKfj
|| __TEXT.__text __ZN19TSSupervectorScorerC1Ev
|| __TEXT.__text __ZN19TSSupervectorScorerC2Ev
|| __TEXT.__text __ZN19TSSupervectorScorerD0Ev
|| __TEXT.__text __ZN19TSSupervectorScorerD1Ev
|| __TEXT.__text __ZN19TSSupervectorScorerD2Ev
|| __TEXT.__text __ZN20NDeepnetDistribution13mapFromMemoryEPKcRKjS1_
|| __TEXT.__text __ZN20NDeepnetDistribution4initEPKcRKj
|| __TEXT.__text __ZN20NDeepnetDistribution4readERK7NString
|| __TEXT.__text __ZN20NDeepnetDistribution5resetEv
|| __TEXT.__text __ZN20NDeepnetDistribution7mapFileERK7NString
|| __TEXT.__text __ZN20NDeepnetDistributionC1Ev
|| __TEXT.__text __ZN20NDeepnetDistributionC2Ev
|| __TEXT.__text __ZN20NDeepnetDistributionD0Ev
|| __TEXT.__text __ZN20NDeepnetDistributionD1Ev
|| __TEXT.__text __ZN20NDeepnetDistributionD2Ev
|| __TEXT.__text __ZN22NGaussianMixtureModels14refreshOffsetsEv
|| __TEXT.__text __ZN22NGaussianMixtureModels2idEv
|| __TEXT.__text __ZN22NGaussianMixtureModels4readERK7NString
|| __TEXT.__text __ZN22NGaussianMixtureModelsC1Ev
|| __TEXT.__text __ZN22NGaussianMixtureModelsC2Ev
|| __TEXT.__text __ZN22NGaussianMixtureModelsD0Ev
|| __TEXT.__text __ZN22NGaussianMixtureModelsD1Ev
|| __TEXT.__text __ZN22NGaussianMixtureModelsD2Ev
|| __TEXT.__text __ZN25NGaussianFixedPointScales10initializeERKiS1_S1_RK6NArrayIiES5_
|| __TEXT.__text __ZN25NGaussianFixedPointScales13setDimenShiftERK6NArrayIiE
|| __TEXT.__text __ZN25NGaussianFixedPointScales15makeLogAddTableERKj
|| __TEXT.__text __ZN25NGaussianFixedPointScales4readER8NFilePtrRKjRKb
|| __TEXT.__text __ZN25NGaussianFixedPointScales5setUpEv
|| __TEXT.__text __ZN25NGaussianFixedPointScalesC1Ev
|| __TEXT.__text __ZN25NGaussianFixedPointScalesC2Ev
|| __TEXT.__text __ZN25NGaussianFixedPointScalesD0Ev
|| __TEXT.__text __ZN25NGaussianFixedPointScalesD1Ev
|| __TEXT.__text __ZN25NGaussianFixedPointScalesD2Ev
|| __TEXT.__text __ZN33NChunkGaussianMixtureModelsHeader4readERK7NStringR8NFilePtrS2_RKb
|| __TEXT.__text __ZN33NChunkGaussianMixtureModelsHeader9readFieldERK7NStringR8NFilePtrS2_RS0_
|| __TEXT.__text __ZN33NChunkGaussianMixtureModelsHeaderC1Ev
|| __TEXT.__text __ZN33NChunkGaussianMixtureModelsHeaderC2Ev
|| __TEXT.__text __ZN33NChunkGaussianMixtureModelsHeaderD1Ev
|| __TEXT.__text __ZN33NChunkGaussianMixtureModelsHeaderD2Ev
|| __TEXT.__text __ZN5Error5chuckEPKcz
|| __TEXT.__text __ZN5Error5errorEPKcz
|| __TEXT.__text __ZN5Error6headerEPKcl
|| __TEXT.__text __ZN5Error7warningEPKcz
|| __TEXT.__text __ZN5NFile10readStringEv
|| __TEXT.__text __ZN5NFile11getPositionEv
|| __TEXT.__text __ZN5NFile11setPositionERKj
|| __TEXT.__text __ZN5NFile11writeStringERK7NString
|| __TEXT.__text __ZN5NFile4openERK7NStringS2_
|| __TEXT.__text __ZN5NFile4readERKj
|| __TEXT.__text __ZN5NFile4readERKjR7NString
|| __TEXT.__text __ZN5NFile4readEv
|| __TEXT.__text __ZN5NFile5closeEv
|| __TEXT.__text __ZN5NFile5flushEv
|| __TEXT.__text __ZN5NFile5printERK7NString
|| __TEXT.__text __ZN5NFile5writeERK7NString
|| __TEXT.__text __ZN5NFile6printfEPKcz
|| __TEXT.__text __ZN5NFile8readLineERKc
|| __TEXT.__text __ZN5NFile8readLineERKcR7NString
|| __TEXT.__text __ZN5NFileC1ERK7NStringS2_
|| __TEXT.__text __ZN5NFileC1Ev
|| __TEXT.__text __ZN5NFileC2ERK7NStringS2_
|| __TEXT.__text __ZN5NFileC2Ev
|| __TEXT.__text __ZN5NFileD0Ev
|| __TEXT.__text __ZN5NFileD1Ev
|| __TEXT.__text __ZN5NFileD2Ev
|| __TEXT.__text __ZN6NDelta4initERKjS1_
|| __TEXT.__text __ZN6NDelta7isFrameERK11NLinkedListI6NArrayIfEE
|| __TEXT.__text __ZN6NTimer4stopEv
|| __TEXT.__text __ZN6NTimer5startEv
|| __TEXT.__text __ZN6NTimerC1Ev
|| __TEXT.__text __ZN6NTimerC2Ev
|| __TEXT.__text __ZN6NTimerD0Ev
|| __TEXT.__text __ZN6NTimerD1Ev
|| __TEXT.__text __ZN6NTimerD2Ev
|| __TEXT.__text __ZN6NZFile10readStringEv
|| __TEXT.__text __ZN6NZFile11getPositionEv
|| __TEXT.__text __ZN6NZFile11setPositionERKj
|| __TEXT.__text __ZN6NZFile11writeStringERK7NString
|| __TEXT.__text __ZN6NZFile4openERK7NStringS2_
|| __TEXT.__text __ZN6NZFile4openERK7NStringS2_RKj
|| __TEXT.__text __ZN6NZFile4readERKj
|| __TEXT.__text __ZN6NZFile4readERKjR7NString
|| __TEXT.__text __ZN6NZFile4readEv
|| __TEXT.__text __ZN6NZFile5closeEv
|| __TEXT.__text __ZN6NZFile5writeERK7NString
|| __TEXT.__text __ZN6NZFile8readLineERKc
|| __TEXT.__text __ZN6NZFileC1ERK7NStringS2_RKj
|| __TEXT.__text __ZN6NZFileC1Ev
|| __TEXT.__text __ZN6NZFileC2ERK7NStringS2_RKj
|| __TEXT.__text __ZN6NZFileC2Ev
|| __TEXT.__text __ZN6NZFileD0Ev
|| __TEXT.__text __ZN6NZFileD1Ev
|| __TEXT.__text __ZN6NZFileD2Ev
|| __TEXT.__text __ZN7NConfig10loadStringERK7NStringS2_S2_
|| __TEXT.__text __ZN7NConfig4loadERK7NStringS2_
|| __TEXT.__text __ZN7NConfigC1ERKb
|| __TEXT.__text __ZN7NConfigC2ERKb
|| __TEXT.__text __ZN7NString13newAllocationERKj
|| __TEXT.__text __ZN7NString13stripCommentsEc
|| __TEXT.__text __ZN7NString5chompEv
|| __TEXT.__text __ZN7NString6printfEPKcz
|| __TEXT.__text __ZN7NString7replaceERKS_S1_
|| __TEXT.__text __ZN7NString7vprintfEPKcPc
|| __TEXT.__text __ZN7NString8appendToEPKvRKj
|| __TEXT.__text __ZN7NString8assignToEPKvRKj
|| __TEXT.__text __ZN7NStringC1EPKc
|| __TEXT.__text __ZN7NStringC1EPKcRKj
|| __TEXT.__text __ZN7NStringC1ERKS_
|| __TEXT.__text __ZN7NStringC1ERKcRKj
|| __TEXT.__text __ZN7NStringC1ERKd
|| __TEXT.__text __ZN7NStringC1ERKi
|| __TEXT.__text __ZN7NStringC1ERKj
|| __TEXT.__text __ZN7NStringC1Ev
|| __TEXT.__text __ZN7NStringC2EPKc
|| __TEXT.__text __ZN7NStringC2EPKcRKj
|| __TEXT.__text __ZN7NStringC2ERKS_
|| __TEXT.__text __ZN7NStringC2ERKcRKj
|| __TEXT.__text __ZN7NStringC2ERKd
|| __TEXT.__text __ZN7NStringC2ERKi
|| __TEXT.__text __ZN7NStringC2ERKj
|| __TEXT.__text __ZN7NStringC2Ev
|| __TEXT.__text __ZN7NStringD0Ev
|| __TEXT.__text __ZN7NStringD1Ev
|| __TEXT.__text __ZN7NStringD2Ev
|| __TEXT.__text __ZN7NStringaSEPKc
|| __TEXT.__text __ZN7NStringaSERKS_
|| __TEXT.__text __ZN7NStringixERKj
|| __TEXT.__text __ZN7NStringpLERKS_
|| __TEXT.__text __ZN8AccelFFT11zeroPadDataERK6NArrayIfE
|| __TEXT.__text __ZN8AccelFFT3runER6NArrayIfER15DSPSplitComplex
|| __TEXT.__text __ZN8AccelFFT4initERKjS1_S1_
|| __TEXT.__text __ZN8AccelFFTD1Ev
|| __TEXT.__text __ZN8AccelFFTD2Ev
|| __TEXT.__text __ZN8AccelPSD4initERKjRKb
|| __TEXT.__text __ZN8NFidFile10getSubFileERK7NStringR8NFilePtr
|| __TEXT.__text __ZN8NFidFile10readHeaderEv
|| __TEXT.__text __ZN8NFidFile4openERK7NString
|| __TEXT.__text __ZN8NFidFile5closeEv
|| __TEXT.__text __ZN8NFidFileC1ERK7NString
|| __TEXT.__text __ZN8NFidFileC1Ev
|| __TEXT.__text __ZN8NFidFileC2ERK7NString
|| __TEXT.__text __ZN8NFidFileC2Ev
|| __TEXT.__text __ZN8NFidFileD0Ev
|| __TEXT.__text __ZN8NFidFileD1Ev
|| __TEXT.__text __ZN8NFidFileD2Ev
|| __TEXT.__text __ZN8NFilePtr4openERK7NStringS2_
|| __TEXT.__text __ZN8NMemPool14getAlignedSizeEj
|| __TEXT.__text __ZN8NMemPool4initEPcjj
|| __TEXT.__text __ZN8NMemPool4lockEb
|| __TEXT.__text __ZN8NMemPool6getMemEj
|| __TEXT.__text __ZN8NMemPool6reportEv
|| __TEXT.__text __ZN8NMemPool8isLockedEv
|| __TEXT.__text __ZN8NVersion11releaseDateEv
|| __TEXT.__text __ZN8NVersion12buildMachineEv
|| __TEXT.__text __ZN8NVersion12compileFlagsEv
|| __TEXT.__text __ZN8NVersion14versionMessageEv
|| __TEXT.__text __ZN8NVersion15compilerVersionEv
|| __TEXT.__text __ZN8NVersion7releaseEv
|| __TEXT.__text __ZN8NVersion9buildDateEv
|| __TEXT.__text __ZN8NVersion9buildTypeEv
|| __TEXT.__text __ZN8NZipFile10getSubFileERK7NStringR8NFilePtr
|| __TEXT.__text __ZN8NZipFile10nextHeaderEv
|| __TEXT.__text __ZN8NZipFile17getCurrentSubFileER8NFilePtr
|| __TEXT.__text __ZN8NZipFile4openERK7NString
|| __TEXT.__text __ZN8NZipFile5closeEv
|| __TEXT.__text __ZN8NZipFile5startEv
|| __TEXT.__text __ZN8NZipFileC1ERK7NString
|| __TEXT.__text __ZN8NZipFileC1Ev
|| __TEXT.__text __ZN8NZipFileC2ERK7NString
|| __TEXT.__text __ZN8NZipFileC2Ev
|| __TEXT.__text __ZN8NZipFileD0Ev
|| __TEXT.__text __ZN8NZipFileD1Ev
|| __TEXT.__text __ZN8NZipFileD2Ev
|| __TEXT.__text __ZN8NZipFileppEi
|| __TEXT.__text __ZN8TSAcAnal11feedFromIntEPKsRKj
|| __TEXT.__text __ZN8TSAcAnal13feedFromFloatEPKfRKj
|| __TEXT.__text __ZN8TSAcAnal13getFrameByRefEv
|| __TEXT.__text __ZN8TSAcAnal4feedERK7NString
|| __TEXT.__text __ZN8TSAcAnal4initERK7NStringjS2_bb
|| __TEXT.__text __ZN8TSAcAnal5resetEv
|| __TEXT.__text __ZN8TSAcAnal7endfeedEv
|| __TEXT.__text __ZN8TSAcAnal8getframeEv
|| __TEXT.__text __ZN9AccelLoga4initERKjf
|| __TEXT.__text __ZN9NDEAcAnal10initStaticEv
|| __TEXT.__text __ZN9NDEAcAnal10setSamRateERKj
|| __TEXT.__text __ZN9NDEAcAnal11feedFromIntEPKsRKj
|| __TEXT.__text __ZN9NDEAcAnal4initEPK15NDEAcAnalConfigRKj
|| __TEXT.__text __ZN9NDEAcAnal5resetEv
|| __TEXT.__text __ZN9NDEAcAnal8c0InvertEv
|| __TEXT.__text __ZN9NDEAcAnal9toOutTypeERK6NArrayIfE
|| __TEXT.__text __ZN9NGaussian13refreshOffsetEv
|| __TEXT.__text __ZN9NPipeFile10readStringEv
|| __TEXT.__text __ZN9NPipeFile11getPositionEv
|| __TEXT.__text __ZN9NPipeFile11setPositionERKj
|| __TEXT.__text __ZN9NPipeFile11writeStringERK7NString
|| __TEXT.__text __ZN9NPipeFile4openERK7NStringS2_
|| __TEXT.__text __ZN9NPipeFile4readERKj
|| __TEXT.__text __ZN9NPipeFile4readERKjR7NString
|| __TEXT.__text __ZN9NPipeFile4readEv
|| __TEXT.__text __ZN9NPipeFile5closeEv
|| __TEXT.__text __ZN9NPipeFile5writeERK7NString
|| __TEXT.__text __ZN9NPipeFile8readLineERKc
|| __TEXT.__text __ZN9NPipeFileC1ERK7NStringS2_
|| __TEXT.__text __ZN9NPipeFileC1Ev
|| __TEXT.__text __ZN9NPipeFileC2ERK7NStringS2_
|| __TEXT.__text __ZN9NPipeFileC2Ev
|| __TEXT.__text __ZN9NPipeFileD0Ev
|| __TEXT.__text __ZN9NPipeFileD1Ev
|| __TEXT.__text __ZN9NPipeFileD2Ev
|| __TEXT.__text __ZNK11AccelCosine3runEPKfR6NArrayIfE
|| __TEXT.__text __ZNK11AccelWindow10getHammingEv
|| __TEXT.__text __ZNK11AccelWindow12applyHammingER6NArrayIfE
|| __TEXT.__text __ZNK11AccelWindow16getScalingFactorEv
|| __TEXT.__text __ZNK11AccelWindow9getOffsetER6NArrayIfE
|| __TEXT.__text __ZNK11NOffsetFile3eofEv
|| __TEXT.__text __ZNK11NOffsetFile4goodEv
|| __TEXT.__text __ZNK11NSATSpeaker10bubbleSortEPKfPfRKj
|| __TEXT.__text __ZNK11NSATSpeaker11numInsertedEv
|| __TEXT.__text __ZNK11NSATSpeaker12matrixvectorEPKfRK6NArrayIfEPfRKjS8_S8_
|| __TEXT.__text __ZNK11NSATSpeaker14findPercentileEPKfRKjRS0_
|| __TEXT.__text __ZNK11NSATSpeaker15findTopNAverageEPKfRKjS3_RKbRS0_
|| __TEXT.__text __ZNK11NSATSpeaker18calcModelNormScaleEv
|| __TEXT.__text __ZNK11NSATSpeaker5scoreERK6NArrayIfERKfS5_
|| __TEXT.__text __ZNK11NSATSpeaker5writeEv
|| __TEXT.__text __ZNK11NSATSpeaker8findMeanEPKfRKj
|| __TEXT.__text __ZNK11NSATSpeaker9getVectorER6NArrayIfERKj
|| __TEXT.__text __ZNK11TSSATScorer11vectorCountEv
|| __TEXT.__text __ZNK11TSSATScorer14applyTransformERK6NFrameR6NArrayIfE
|| __TEXT.__text __ZNK11TSSATScorer15normaliseVectorER6NArrayIfE
|| __TEXT.__text __ZNK11TSSATScorer16getSpeakerVectorER6NArrayIfERKj
|| __TEXT.__text __ZNK11TSSATScorer21getSpeakerVectorDimenEv
|| __TEXT.__text __ZNK12IntNovDetect5errorEv
|| __TEXT.__text __ZNK12NDEFrameProc13getFrameByRefEv
|| __TEXT.__text __ZNK12NDEFrameProc13get_framerateEv
|| __TEXT.__text __ZNK12NDEFrameProc9frameSizeEv
|| __TEXT.__text __ZNK12NSATImpostor5dimenEv
|| __TEXT.__text __ZNK13AccelWin2MFCC16getScalingFactorEv
|| __TEXT.__text __ZNK13TSHMMDetector10bestLengthEv
|| __TEXT.__text __ZNK13TSHMMDetector10bestPhraseEv
|| __TEXT.__text __ZNK13TSHMMDetector10numPhrasesEv
|| __TEXT.__text __ZNK13TSHMMDetector11scorePhraseERKj
|| __TEXT.__text __ZNK13TSHMMDetector12frameLatencyEv
|| __TEXT.__text __ZNK13TSHMMDetector12partialScoreEv
|| __TEXT.__text __ZNK13TSHMMDetector13partialLengthEv
|| __TEXT.__text __ZNK13TSHMMDetector14stateAlignmentER6NArrayIjEj
|| __TEXT.__text __ZNK13TSHMMDetector16bestLengthPhraseERKj
|| __TEXT.__text __ZNK13TSHMMDetector5scoreEv
|| __TEXT.__text __ZNK13TSHMMDetector9frameSizeEv
|| __TEXT.__text __ZNK13TSHMMDetector9numStatesEv
|| __TEXT.__text __ZNK14AccelMelFilter16getScalingFactorEv
|| __TEXT.__text __ZNK14AccelMelFilter8freq2melERKf
|| __TEXT.__text __ZNK14AccelMelFilter8mel2freqERKf
|| __TEXT.__text __ZNK14NConfigSection4bOptERK7NString
|| __TEXT.__text __ZNK14NConfigSection4fOptERK7NString
|| __TEXT.__text __ZNK14NConfigSection4iOptERK7NString
|| __TEXT.__text __ZNK14NConfigSection4sOptERK7NString
|| __TEXT.__text __ZNK14NConfigSection6hasOptERK7NString
|| __TEXT.__text __ZNK14NDEHMMDetector10bestLengthEv
|| __TEXT.__text __ZNK14NDEHMMDetector12frameLatencyEv
|| __TEXT.__text __ZNK14NDEHMMDetector12partialScoreEv
|| __TEXT.__text __ZNK14NDEHMMDetector13partialLengthEv
|| __TEXT.__text __ZNK14NDEHMMDetector5scoreEv
|| __TEXT.__text __ZNK14NPhoneHMMArray5writeERK7NString
|| __TEXT.__text __ZNK14NPhoneHMMArrayclERK7NString
|| __TEXT.__text __ZNK15AccelStaticMFCC16getScalingFactorEv
|| __TEXT.__text __ZNK15AccelStaticMFCC8getFrameEv
|| __TEXT.__text __ZNK15AccelStaticMFCC9getWindowEv
|| __TEXT.__text __ZNK15NLRHMMTraceback14stateAlignmentER6NArrayIjERKj
|| __TEXT.__text __ZNK15NRingDropBuffer4sizeEv
|| __TEXT.__text __ZNK15NRingDropBuffer7maxSizeEv
|| __TEXT.__text __ZNK15NRingDropBufferixERKj
|| __TEXT.__text __ZNK17NConfigSectionExt4bOptERK7NStringRKb
|| __TEXT.__text __ZNK17NConfigSectionExt4fOptERK7NStringRKf
|| __TEXT.__text __ZNK17NConfigSectionExt4iOptERK7NStringRKi
|| __TEXT.__text __ZNK17NConfigSectionExt4sOptERK7NStringS2_
|| __TEXT.__text __ZNK17NFixedPointScales10paramLimitEv
|| __TEXT.__text __ZNK17NFixedPointScales10readIntVecER8NFilePtrRKbRK7NStringRKjR6NArrayIiE
|| __TEXT.__text __ZNK17NFixedPointScales10toFloatVecE6NArrayIsE
|| __TEXT.__text __ZNK17NFixedPointScales5writeER8NFilePtrRKb
|| __TEXT.__text __ZNK17NFixedPointScales7readIntER8NFilePtrRKbRK7NString
|| __TEXT.__text __ZNK17NFixedPointScales8toFixVecE6NArrayIfE
|| __TEXT.__text __ZNK18NFloatDistribution13numComponentsEv
|| __TEXT.__text __ZNK18NFloatDistribution14componentScoreERKjRK6NArrayIfE
|| __TEXT.__text __ZNK18NFloatDistribution15scoreUsingCacheERKjRK6NArrayIbERKS2_IfE
|| __TEXT.__text __ZNK18NFloatDistribution16firstComponentIdERKj
|| __TEXT.__text __ZNK18NFloatDistribution16setComponentMaskERKjR6NArrayIbE
|| __TEXT.__text __ZNK18NFloatDistribution17fixedPointScalesPEv
|| __TEXT.__text __ZNK18NFloatDistribution21posteriorWeightedMeanERKjRK6NArrayIfERS3_
|| __TEXT.__text __ZNK18NFloatDistribution4sizeEv
|| __TEXT.__text __ZNK18NFloatDistribution5dimenEv
|| __TEXT.__text __ZNK18NFloatDistribution5scoreERKjRK6NArrayIfE
|| __TEXT.__text __ZNK18NFloatDistribution7baseGMMEv
|| __TEXT.__text __ZNK19NFastFixedGaussiansIaihE5scoreERKjRK6NArrayIsE
|| __TEXT.__text __ZNK19NFastFixedGaussiansIaitE5scoreERKjRK6NArrayIsE
|| __TEXT.__text __ZNK19NFastFixedGaussiansIsihE5scoreERKjRK6NArrayIsE
|| __TEXT.__text __ZNK19NWavChunk2HTKFrames10isTypeInt4Ev
|| __TEXT.__text __ZNK19NWavChunk2HTKFrames12getFrameRateEv
|| __TEXT.__text __ZNK19NWavChunk2HTKFrames8parmCodeEv
|| __TEXT.__text __ZNK19NWavChunk2HTKFrames9frameSizeEv
|| __TEXT.__text __ZNK19NWavChunk2HTKFrames9numStaticEv
|| __TEXT.__text __ZNK20NDeepnetDistribution10resetStateEPv
|| __TEXT.__text __ZNK20NDeepnetDistribution13numComponentsEv
|| __TEXT.__text __ZNK20NDeepnetDistribution14allocateStatePEv
|| __TEXT.__text __ZNK20NDeepnetDistribution14componentScoreERKjRK6NArrayIfE
|| __TEXT.__text __ZNK20NDeepnetDistribution15deallocateStateEPv
|| __TEXT.__text __ZNK20NDeepnetDistribution15scoreCacheTypesEv
|| __TEXT.__text __ZNK20NDeepnetDistribution15scoreUsingCacheERKjRK6NArrayIbERKS2_IfE
|| __TEXT.__text __ZNK20NDeepnetDistribution16firstComponentIdERKj
|| __TEXT.__text __ZNK20NDeepnetDistribution16setComponentMaskERKjR6NArrayIbE
|| __TEXT.__text __ZNK20NDeepnetDistribution17fixedPointScalesPEv
|| __TEXT.__text __ZNK20NDeepnetDistribution19forwardComputeFixedERK6NArrayIfERS1_
|| __TEXT.__text __ZNK20NDeepnetDistribution19forwardComputeFloatERK6NArrayIfERS1_Pv
|| __TEXT.__text __ZNK20NDeepnetDistribution19loadFixedInputLayerERK6NArrayIfEPi
|| __TEXT.__text __ZNK20NDeepnetDistribution21posteriorWeightedMeanERKjRK6NArrayIfERS3_
|| __TEXT.__text __ZNK20NDeepnetDistribution23extractFixedOutputLayerEPKiR6NArrayIfE
|| __TEXT.__text __ZNK20NDeepnetDistribution4sizeEv
|| __TEXT.__text __ZNK20NDeepnetDistribution5dimenEv
|| __TEXT.__text __ZNK20NDeepnetDistribution5scoreERKjRK6NArrayIfE
|| __TEXT.__text __ZNK20NDeepnetDistribution7baseGMMEv
|| __TEXT.__text __ZNK20NDeepnetDistribution8scoreAllERK6NArrayIfERS1_Pv
|| __TEXT.__text __ZNK20NDeepnetDistribution9frameSizeEv
|| __TEXT.__text __ZNK20NDeepnetDistribution9numFramesEv
|| __TEXT.__text __ZNK22NGaussianMixtureModels10expWeightsERK6NArrayIfE
|| __TEXT.__text __ZNK22NGaussianMixtureModels10invertVarsERK6NArrayIfE
|| __TEXT.__text __ZNK22NGaussianMixtureModels10logWeightsERK6NArrayIfE
|| __TEXT.__text __ZNK22NGaussianMixtureModels10posteriorsERKjRK6NArrayIfERS3_
|| __TEXT.__text __ZNK22NGaussianMixtureModels11writeBinaryERK7NString
|| __TEXT.__text __ZNK22NGaussianMixtureModels12validateVarsERK6NArrayIfE
|| __TEXT.__text __ZNK22NGaussianMixtureModels14invertSqrtVarsERK6NArrayIfE
|| __TEXT.__text __ZNK22NGaussianMixtureModels15scoreUsingCacheERKjRK6NArrayIbERKS2_IfE
|| __TEXT.__text __ZNK22NGaussianMixtureModels15validateWeightsERK6NArrayIfE
|| __TEXT.__text __ZNK22NGaussianMixtureModels16invertSquareVarsERK6NArrayIfE
|| __TEXT.__text __ZNK22NGaussianMixtureModels21posteriorWeightedMeanERKjRK6NArrayIfERS3_
|| __TEXT.__text __ZNK22NGaussianMixtureModels2idEv
|| __TEXT.__text __ZNK22NGaussianMixtureModels5dimenEv
|| __TEXT.__text __ZNK22NGaussianMixtureModels5scoreERKjRK6NArrayIfE
|| __TEXT.__text __ZNK22NGaussianMixtureModels5writeERK7NStringRK8NVarTypeRK11NWeightType
|| __TEXT.__text __ZNK22NGaussianMixtureModels6score2ERKjRK6NArrayIfE
|| __TEXT.__text __ZNK22NGaussianMixtureModels6weightERKjS1_
|| __TEXT.__text __ZNK22NGaussianMixtureModels8gaussianERKjS1_
|| __TEXT.__text __ZNK22NGaussianMixtureModels9gaussiansEv
|| __TEXT.__text __ZNK25NGaussianFixedPointScales10paramLimitEv
|| __TEXT.__text __ZNK25NGaussianFixedPointScales5writeER8NFilePtrRKb
|| __TEXT.__text __ZNK25NGaussianFixedPointScales6logaddEii
|| __TEXT.__text __ZNK33NChunkGaussianMixtureModelsHeader11writeBinaryER8NFilePtr
|| __TEXT.__text __ZNK33NChunkGaussianMixtureModelsHeader14encodingStringEv
|| __TEXT.__text __ZNK33NChunkGaussianMixtureModelsHeader5writeER8NFilePtr
|| __TEXT.__text __ZNK5NFile3eofEv
|| __TEXT.__text __ZNK5NFile4goodEv
|| __TEXT.__text __ZNK5NFile6isOpenEv
|| __TEXT.__text __ZNK6NDelta8getFrameEv
|| __TEXT.__text __ZNK6NTimer7elapsedE10NTimerType
|| __TEXT.__text __ZNK6NTimer7runningEv
|| __TEXT.__text __ZNK6NZFile3eofEv
|| __TEXT.__text __ZNK6NZFile4goodEv
|| __TEXT.__text __ZNK6NZFile6isOpenEv
|| __TEXT.__text __ZNK7NConfig10hasSectionERK7NString
|| __TEXT.__text __ZNK7NConfig7sectionERK7NString
|| __TEXT.__text __ZNK7NString10checkFloatEv
|| __TEXT.__text __ZNK7NString10hexdecodedEv
|| __TEXT.__text __ZNK7NString10startswithEPKc
|| __TEXT.__text __ZNK7NString10startswithERKS_
|| __TEXT.__text __ZNK7NString13containsafterERKS_RKj
|| __TEXT.__text __ZNK7NString13prefixDirnameEv
|| __TEXT.__text __ZNK7NString4headERKj
|| __TEXT.__text __ZNK7NString4tailERKj
|| __TEXT.__text __ZNK7NString5sliceERKjS1_
|| __TEXT.__text __ZNK7NString5splitER11NLinkedListIS_ERKS_RKj
|| __TEXT.__text __ZNK7NString5splitER6NArrayIS_ERKS_RKj
|| __TEXT.__text __ZNK7NString5splitER6NArrayIS_EcRKj
|| __TEXT.__text __ZNK7NString5splitERKS_RKj
|| __TEXT.__text __ZNK7NString5stripERKS_
|| __TEXT.__text __ZNK7NString5tointERKj
|| __TEXT.__text __ZNK7NString6lengthEv
|| __TEXT.__text __ZNK7NString6toboolEv
|| __TEXT.__text __ZNK7NString6touintERKj
|| __TEXT.__text __ZNK7NString7cuttailERKj
|| __TEXT.__text __ZNK7NString7dirnameEv
|| __TEXT.__text __ZNK7NString7pointerEv
|| __TEXT.__text __ZNK7NString7tofloatEv
|| __TEXT.__text __ZNK7NString8basenameERKS_
|| __TEXT.__text __ZNK7NString8basenameEv
|| __TEXT.__text __ZNK7NString8checkIntERKj
|| __TEXT.__text __ZNK7NString8containsEPKc
|| __TEXT.__text __ZNK7NString8containsERKS_
|| __TEXT.__text __ZNK7NString8containsERKc
|| __TEXT.__text __ZNK7NString8creplaceERKS_S1_
|| __TEXT.__text __ZNK7NString8endswithEPKc
|| __TEXT.__text __ZNK7NString8endswithERKS_
|| __TEXT.__text __ZNK7NString8hexcodedEv
|| __TEXT.__text __ZNK7NString9checkUintERKj
|| __TEXT.__text __ZNK7NString9hashValueEv
|| __TEXT.__text __ZNK7NString9lowercaseEv
|| __TEXT.__text __ZNK7NString9uppercaseEv
|| __TEXT.__text __ZNK7NStringeqEPKc
|| __TEXT.__text __ZNK7NStringeqERKS_
|| __TEXT.__text __ZNK7NStringgeERKS_
|| __TEXT.__text __ZNK7NStringgtERKS_
|| __TEXT.__text __ZNK7NStringixERKj
|| __TEXT.__text __ZNK7NStringleERKS_
|| __TEXT.__text __ZNK7NStringltERKS_
|| __TEXT.__text __ZNK7NStringneERKS_
|| __TEXT.__text __ZNK7NStringplERKS_
|| __TEXT.__text __ZNK8AccelPSD15fixp_sqrt_rangeERKiS1_ii
|| __TEXT.__text __ZNK8AccelPSD16getScalingFactorEv
|| __TEXT.__text __ZNK8AccelPSD3runER15DSPSplitComplex
|| __TEXT.__text __ZNK8AccelPSD9fixp_sqrtEi
|| __TEXT.__text __ZNK8NZipFile5validEv
|| __TEXT.__text __ZNK8NZipFiledeEv
|| __TEXT.__text __ZNK8TSAcAnal10isTypeInt4Ev
|| __TEXT.__text __ZNK8TSAcAnal12framesQueuedEv
|| __TEXT.__text __ZNK8TSAcAnal13get_framerateEv
|| __TEXT.__text __ZNK8TSAcAnal14getStringFrameEv
|| __TEXT.__text __ZNK8TSAcAnal15framesAvailableEv
|| __TEXT.__text __ZNK8TSAcAnal3eosEv
|| __TEXT.__text __ZNK8TSAcAnal8parmCodeEv
|| __TEXT.__text __ZNK8TSAcAnal9frameSizeEv
|| __TEXT.__text __ZNK8TSAcAnal9numStaticEv
|| __TEXT.__text __ZNK9AccelLoga16getScalingFactorEv
|| __TEXT.__text __ZNK9AccelLoga3runEPf
|| __TEXT.__text __ZNK9AccelLoga7findMaxERK6NArrayIfE
|| __TEXT.__text __ZNK9NDEAcAnal13getFrameByRefEv
|| __TEXT.__text __ZNK9NDEAcAnal13get_framerateEv
|| __TEXT.__text __ZNK9NDEAcAnal14frameAvailableEv
|| __TEXT.__text __ZNK9NDEAcAnal9frameSizeEv
|| __TEXT.__text __ZNK9NGaussian5scoreERK6NArrayIfE
|| __TEXT.__text __ZNK9NPipeFile3eofEv
|| __TEXT.__text __ZNK9NPipeFile4goodEv
|| __TEXT.__text __ZNK9NPipeFile6isOpenEv
|| __TEXT.__text __ZlsR7NStringRKS_
|| __TEXT.__text __ZlsR7NStringRKd
|| __TEXT.__text __ZlsR7NStringRKf
|| __TEXT.__text __ZlsR7NStringRKi
|| __TEXT.__text __ZlsR7NStringRKj
|| __TEXT.__text __ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK7NString
|| __TEXT.__text __baseDir
|| __TEXT.__text _countZeroCrossings
|| __TEXT.__text _createFloatArray
|| __TEXT.__text _fftEnergies
|| __TEXT.__text _nd_close
|| __TEXT.__text _nd_create
|| __TEXT.__text _nd_error
|| __TEXT.__text _nd_getoption
|| __TEXT.__text _nd_getphraseresults
|| __TEXT.__text _nd_getresults
|| __TEXT.__text _nd_getresultsstr
|| __TEXT.__text _nd_getsupervector
|| __TEXT.__text _nd_initialize
|| __TEXT.__text _nd_initlog
|| __TEXT.__text _nd_logcontrol
|| __TEXT.__text _nd_phrasecount
|| __TEXT.__text _nd_reset
|| __TEXT.__text _nd_resetbest
|| __TEXT.__text _nd_sat_analyze
|| __TEXT.__text _nd_sat_analyzetransformed
|| __TEXT.__text _nd_sat_deletevector
|| __TEXT.__text _nd_sat_getspeakervector
|| __TEXT.__text _nd_sat_initialize
|| __TEXT.__text _nd_sat_reset
|| __TEXT.__text _nd_sat_update
|| __TEXT.__text _nd_sat_vectorcount
|| __TEXT.__text _nd_scoresupervector
|| __TEXT.__text _nd_wavedata
|| __TEXT.__text _nd_wavedataf
|| __TEXT.__text _nde_create
|| __TEXT.__text _nde_destroy
|| __TEXT.__text _nde_enable_multiinstance
|| __TEXT.__text _nde_process
|| __TEXT.__text _nde_process_v2
|| __TEXT.__text _nde_processframe
|| __TEXT.__text _nde_processframe_v2
|| __TEXT.__text _nde_reset
|| __TEXT.__text _sumsegment
|| __TEXT.__text _vecsqrt
|| __TEXT.__text _zeroCrossingVAD
__ Accelerate: _BNNSFilterApply
__ Accelerate: _BNNSFilterCreateLayerFullyConnected
__ Accelerate: _BNNSFilterDestroy
__ Accelerate: _cblas_sgemm
__ Accelerate: _cblas_sgemv
__ Accelerate: _vDSP_DFT_DestroySetup
__ Accelerate: _vDSP_DFT_Execute
__ Accelerate: _vDSP_DFT_zrop_CreateSetup
__ Accelerate: _vDSP_conv
__ Accelerate: _vDSP_create_fftsetup
__ Accelerate: _vDSP_ctoz
__ Accelerate: _vDSP_dotpr
__ Accelerate: _vDSP_fft_zip
__ Accelerate: _vDSP_hamm_window
__ Accelerate: _vDSP_meanv
__ Accelerate: _vDSP_sve
__ Accelerate: _vDSP_vclip
__ Accelerate: _vDSP_vfix16
__ Accelerate: _vDSP_vflt16
__ Accelerate: _vDSP_vmul
__ Accelerate: _vDSP_vneg
__ Accelerate: _vDSP_vsadd
__ Accelerate: _vDSP_vsmul
__ Accelerate: _vDSP_zvmags
__ Accelerate: _vvexpf
__ Accelerate: _vvlogf
__ Accelerate: _vvrecf
__ Accelerate: _vvsqrtf
__ Accelerate: _vvtanhf
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientPushValueForDistributionKey
__ AppSupport: _CPSharedResourcesDirectory
__ AssistantServices: _AFLanguageCodeDidChangeDarwinNotification
__ AssistantServices: _AFPreferencesAssistantEnabled
__ AssistantServices: _AFPreferencesMobileUserSessionLanguage
__ AssistantServices: _AFSiriActivationBuiltInMicVoiceTrigger
__ AssistantServices: _AFSiriActivationBuiltInMicVoiceTriggerPrewarm
__ AssistantServices: _OBJC_CLASS_$_AFPreferences
__ AssistantServices: _OBJC_CLASS_$_AFSettingsConnection
__ AssistantServices: _kAFPreferencesDidChangeDarwinNotification
__ AudioToolbox: _AudioConverterConvertComplexBuffer
__ AudioToolbox: _AudioConverterNew
__ AudioToolbox: _AudioFileClose
__ AudioToolbox: _AudioFileOpenURL
__ AudioToolbox: _ExtAudioFileCreateWithURL
__ AudioToolbox: _ExtAudioFileDispose
__ AudioToolbox: _ExtAudioFileGetProperty
__ AudioToolbox: _ExtAudioFileOpenURL
__ AudioToolbox: _ExtAudioFileRead
__ AudioToolbox: _ExtAudioFileSetProperty
__ AudioToolbox: _ExtAudioFileWrapAudioFileID
__ AudioToolbox: _ExtAudioFileWrite
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSURLCreationDateKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLNameKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreMotion: _OBJC_CLASS_$_CMWakeGestureManager
__ DistributedEvaluation: _OBJC_CLASS_$_DESRecordStore
__ EmbeddedAcousticRecognition: _OBJC_CLASS_$_EARPSRAudioProcessor
__ EmbeddedAcousticRecognition: _OBJC_CLASS_$__EARSpeechRecognizer
__ EmbeddedAcousticRecognition: _OBJC_CLASS_$__EARSyncSpeechRecognizer
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSProcessInfoPowerStateDidChangeNotification
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ IDS: _IDSDefaultPairedDevice
__ IDS: _IDSSendMessageOptionEnforceRemoteTimeoutsKey
__ IDS: _IDSSendMessageOptionFireAndForgetKey
__ IDS: _IDSSendMessageOptionForceLocalDeliveryKey
__ IDS: _IDSSendMessageOptionNonWakingKey
__ IDS: _IDSSendMessageOptionPeerResponseIdentifierKey
__ IDS: _IDSSendMessageOptionQueueOneIdentifierKey
__ IDS: _IDSSendMessageOptionTimeoutKey
__ IDS: _OBJC_CLASS_$_IDSProtobuf
__ IDS: _OBJC_CLASS_$_IDSService
__ IOKit: _IOPSDrawingUnlimitedPower
__ ManagedConfiguration: _MCFeatureAssistantWhileLockedAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MediaExperience: _kCMSession_RouteDescriptionKey_BTDetails_SupportsDoAP
__ MediaExperience: _kCMSession_RouteDescriptionKey_PreferredExternalRouteDetails_InEarDetectSupported
__ MediaExperience: _kCMSession_RouteDescriptionKey_PreferredExternalRouteDetails_IsActive
__ MobileAsset: _ASAttributeCompatibilityVersion
__ MobileAsset: _ASAttributeContentVersion
__ MobileAsset: _OBJC_CLASS_$_MAAsset
__ MobileAsset: _OBJC_CLASS_$_MAAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MADownloadOptions
__ MobileAsset: __MACleanV1Repository
__ MobileAsset: __MAMigrateAssets
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ PowerLog: _PLLogRegisteredEvent
__ PowerLog: _PLShouldLogRegisteredEvent
__ SoftLinking: __sl_dlopen_audited
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___exp10f
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___tolower
__ libSystem.B.dylib: ___toupper
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _atof
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _cosf
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _expf
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fputc
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _frexpf
__ libSystem.B.dylib: _fseek
__ libSystem.B.dylib: _fseeko
__ libSystem.B.dylib: _ftello
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _ldexp
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _log10f
__ libSystem.B.dylib: _log2
__ libSystem.B.dylib: _logf
__ libSystem.B.dylib: _lseek
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _posix_memalign
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _rename
__ libSystem.B.dylib: _sinf
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _strchr
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strrchr
__ libSystem.B.dylib: _strtod
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _sysconf
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _times
__ libSystem.B.dylib: _vfprintf
__ libSystem.B.dylib: _vsnprintf
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9has_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE4readEPcl
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE5seekgExNS_8ios_base7seekdirE
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE5tellgEv
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE7getlineEPclc
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5writeEPKcl
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16localeC1ERKS0_
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__17codecvtIcc11__mbstate_tE2idE
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt8bad_castC1Ev
__ libc++.1.dylib: __ZNSt8bad_castD1Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__113basic_istreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTINSt3__113basic_ostreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTINSt3__114basic_iostreamIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTINSt3__115basic_streambufIcNS_11char_traitsIcEEEE
__ libc++.1.dylib: __ZTISt8bad_cast
__ libc++.1.dylib: __ZTISt9exception
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZThn16_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
__ libc++.1.dylib: __ZTv0_n24_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
VTAudioCircularBuffer : NSObject /usr/lib/libc++.1.dylib
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long bufferLength

  // instance methods
  -[VTAudioCircularBuffer sampleCount]
  -[VTAudioCircularBuffer .cxx_construct]
  -[VTAudioCircularBuffer .cxx_destruct]
  -[VTAudioCircularBuffer addSamples:numSamples:]
  -[VTAudioCircularBuffer setQueue:]
  -[VTAudioCircularBuffer queue]
  -[VTAudioCircularBuffer reset]
  -[VTAudioCircularBuffer saveRecordingBufferFrom:to:toURL:]
  -[VTAudioCircularBuffer initWithNumChannels:recordingDuration:samplingRate:]
  -[VTAudioCircularBuffer bufferLength]
  -[VTAudioCircularBuffer copyBufferWithNumSamplesCopiedIn:]
  -[VTAudioCircularBuffer setBufferLength:]
  -[VTAudioCircularBuffer copySamplesFrom:to:withNumSamplesCopiedIn:]


VTEventPrepare : VTEvent
  // instance methods
  -[VTEventPrepare _buildTitle]
  -[VTEventPrepare _buildContent]
  -[VTEventPrepare _buildDetail]


VTBuiltInRTModel : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *builtInRTModelDictionary

  // class methods
  +[VTBuiltInRTModel sharedInstance]

  // instance methods
  -[VTBuiltInRTModel dealloc]
  -[VTBuiltInRTModel .cxx_destruct]
  -[VTBuiltInRTModel builtInRTModelDictionary]
  -[VTBuiltInRTModel setBuiltInRTModelDictionary:]


VTEventTrigger : VTEvent
  // instance methods
  -[VTEventTrigger _buildTitle]
  -[VTEventTrigger _buildContent]
  -[VTEventTrigger _buildDetail]


VTTriggerEventMonitorManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VTTriggerEventMonitorManager sharedManager]

  // instance methods
  -[VTTriggerEventMonitorManager init]
  -[VTTriggerEventMonitorManager notifyVoiceTrigger]
  -[VTTriggerEventMonitorManager .cxx_destruct]
  -[VTTriggerEventMonitorManager addConnection:]
  -[VTTriggerEventMonitorManager removeConnection:]
  -[VTTriggerEventMonitorManager notifyEarlyDetect]


VTEventTrackerManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[VTEventTrackerManager init]
  -[VTEventTrackerManager .cxx_destruct]
  -[VTEventTrackerManager _contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:]
  -[VTEventTrackerManager _contentsOfDirectoryAtURL:matchingPattern:sortedByDateWithResourceKey:error:]
  -[VTEventTrackerManager _sortedURLsInDirectory:matchingPattern:]
  -[VTEventTrackerManager voiceTriggerEvent:]
  -[VTEventTrackerManager _dictionaryToJson:]


VTTextDependentSpeakerRecognizer : NSObject /usr/lib/libc++.1.dylib <EARPSRAudioProcessorDelegate>
 @property  EARPSRAudioProcessor *speakerVectorGenerator
 @property  <VTTextDependentSpeakerRecognizerDelegate> *delegate
 @property  NSString *resourcePath
 @property  NSString *satDirectory
 @property  NSString *tdSATModelDirPath
 @property  NSString *assetHash
 @property  NSString *tdSATModelFilePath
 @property  BOOL tdPsrCanProcessRequest
 @property  float lastRequestSatScore
 @property  NSData *speakerVector
 @property  unsigned long numSamplesProecssed
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_queue> *stateSerialQueue
 @property  NSMutableData *psrAudioDataForLogging
 @property  long long getSATVectorCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VTTextDependentSpeakerRecognizer errorWithCode:message:]
  +[VTTextDependentSpeakerRecognizer _createDirectoryIfDoesNotExist:]
  +[VTTextDependentSpeakerRecognizer psrTdAssetExistsAtResourcePath:]

  // instance methods
  -[VTTextDependentSpeakerRecognizer resourcePath]
  -[VTTextDependentSpeakerRecognizer dealloc]
  -[VTTextDependentSpeakerRecognizer .cxx_destruct]
  -[VTTextDependentSpeakerRecognizer endAudio]
  -[VTTextDependentSpeakerRecognizer setQueue:]
  -[VTTextDependentSpeakerRecognizer queue]
  -[VTTextDependentSpeakerRecognizer setDelegate:]
  -[VTTextDependentSpeakerRecognizer delegate]
  -[VTTextDependentSpeakerRecognizer setResourcePath:]
  -[VTTextDependentSpeakerRecognizer resetForNewRequest]
  -[VTTextDependentSpeakerRecognizer stateSerialQueue]
  -[VTTextDependentSpeakerRecognizer setStateSerialQueue:]
  -[VTTextDependentSpeakerRecognizer psrAudioProcessor:hasResult:numElements:]
  -[VTTextDependentSpeakerRecognizer getSATVectorCount]
  -[VTTextDependentSpeakerRecognizer processAudio:numSamples:]
  -[VTTextDependentSpeakerRecognizer deleteVectorAtIndex:]
  -[VTTextDependentSpeakerRecognizer updateSAT]
  -[VTTextDependentSpeakerRecognizer _getValueForNDAPIConfigOption:]
  -[VTTextDependentSpeakerRecognizer _getFloatValueForNDAPIConfigOption:defaultValue:]
  -[VTTextDependentSpeakerRecognizer speakerVector]
  -[VTTextDependentSpeakerRecognizer setSpeakerVector:]
  -[VTTextDependentSpeakerRecognizer setTdPsrCanProcessRequest:]
  -[VTTextDependentSpeakerRecognizer tdPsrCanProcessRequest]
  -[VTTextDependentSpeakerRecognizer _getSATVectorCount]
  -[VTTextDependentSpeakerRecognizer initWithResourcePath:satDirectory:assetHash:shouldCreateModelDir:delegate:]
  -[VTTextDependentSpeakerRecognizer getThresholdSAT]
  -[VTTextDependentSpeakerRecognizer getCombinationWeight]
  -[VTTextDependentSpeakerRecognizer deleteExistingSATModel]
  -[VTTextDependentSpeakerRecognizer logWithAudioFilepath:]
  -[VTTextDependentSpeakerRecognizer tdSATModelFilePath]
  -[VTTextDependentSpeakerRecognizer setTdSATModelFilePath:]
  -[VTTextDependentSpeakerRecognizer lastRequestSatScore]
  -[VTTextDependentSpeakerRecognizer setLastRequestSatScore:]
  -[VTTextDependentSpeakerRecognizer speakerVectorGenerator]
  -[VTTextDependentSpeakerRecognizer setSpeakerVectorGenerator:]
  -[VTTextDependentSpeakerRecognizer satDirectory]
  -[VTTextDependentSpeakerRecognizer setSatDirectory:]
  -[VTTextDependentSpeakerRecognizer tdSATModelDirPath]
  -[VTTextDependentSpeakerRecognizer setTdSATModelDirPath:]
  -[VTTextDependentSpeakerRecognizer assetHash]
  -[VTTextDependentSpeakerRecognizer setAssetHash:]
  -[VTTextDependentSpeakerRecognizer numSamplesProecssed]
  -[VTTextDependentSpeakerRecognizer setNumSamplesProecssed:]
  -[VTTextDependentSpeakerRecognizer psrAudioDataForLogging]
  -[VTTextDependentSpeakerRecognizer setPsrAudioDataForLogging:]


VTPhraseSpotterEnabledPolicy : VTPolicy
  // instance methods
  -[VTPhraseSpotterEnabledPolicy init]
  -[VTPhraseSpotterEnabledPolicy _addVoiceTriggerEnabledConditions]
  -[VTPhraseSpotterEnabledPolicy _subscribeEventMonitors]


VTVoiceTriggerEnabledPolicyWatch : VTPolicy
  // instance methods
  -[VTVoiceTriggerEnabledPolicyWatch init]
  -[VTVoiceTriggerEnabledPolicyWatch _addVoiceTriggerEnabledConditions]
  -[VTVoiceTriggerEnabledPolicyWatch _subscribeEventMonitors]


VTLanguageCodeUpdateMonitor : VTEventMonitor
  // class methods
  +[VTLanguageCodeUpdateMonitor sharedInstance]

  // instance methods
  -[VTLanguageCodeUpdateMonitor init]
  -[VTLanguageCodeUpdateMonitor _stopMonitoring]
  -[VTLanguageCodeUpdateMonitor _startMonitoringWithQueue:]
  -[VTLanguageCodeUpdateMonitor _notifyObserver:withLanguageCode:]
  -[VTLanguageCodeUpdateMonitor _didReceiveLanguageCodeUpdate]


VTXPCServiceServer : NSObject /usr/lib/libc++.1.dylib <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VTXPCServiceServer init]
  -[VTXPCServiceServer .cxx_destruct]
  -[VTXPCServiceServer listener:shouldAcceptNewConnection:]
  -[VTXPCServiceServer startService]


VTSpeakerIdUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VTSpeakerIdUtilities timeStampWithSaltGrain]
  +[VTSpeakerIdUtilities getSATDirectoryForLanguageCode:]
  +[VTSpeakerIdUtilities stringForVTSpIdType:]
  +[VTSpeakerIdUtilities getSATDirectoryForModelType:forLanguageCode:]
  +[VTSpeakerIdUtilities getSATAudioDirectoryForType:forLanguageCode:]
  +[VTSpeakerIdUtilities getSATModelDirectoryForType:forLanguageCode:]
  +[VTSpeakerIdUtilities createSATDirectoriesForType:forLanguageCode:]
  +[VTSpeakerIdUtilities _getAssetHashFromConfigPath:]
  +[VTSpeakerIdUtilities getSpeakerModelPathForType:withLanguageCode:withConfigPath:createDirectory:]
  +[VTSpeakerIdUtilities getProfileVersionFilePathForLanguageCode:]
  +[VTSpeakerIdUtilities getExplicitEnrollmentUtterancesForType:forLanguageCode:]
  +[VTSpeakerIdUtilities getSortedImplicitEnrollmentUtterancesForType:forLanguageCode:]
  +[VTSpeakerIdUtilities getImplicitEnrollmentUtterancesPriorTo:forType:forLanguageCode:]
  +[VTSpeakerIdUtilities getSortedEnrollmentUtterancesForType:forLanguageCode:]
  +[VTSpeakerIdUtilities deleteExistingSATModelForLanguageCode:]


VTSiriPHash : NSObject /usr/lib/libc++.1.dylib
 @property  short signalEstimate
 @property  unsigned char signalFractional

  // class methods
  +[VTSiriPHash sharedPhash]
  +[VTSiriPHash sampleSizeForSignalEstimate]

  // instance methods
  -[VTSiriPHash init]
  -[VTSiriPHash pHash:length:]
  -[VTSiriPHash signalEstimate]
  -[VTSiriPHash signalFractional]
  -[VTSiriPHash setSignalEstimate:]
  -[VTSiriPHash setSignalFractional:]


VTGestureMonitorPhone : VTGestureMonitor <CMWakeGestureDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VTGestureMonitorPhone init]
  -[VTGestureMonitorPhone .cxx_destruct]
  -[VTGestureMonitorPhone wakeGestureManager:didUpdateWakeGesture:]
  -[VTGestureMonitorPhone startObserving]


VTPeerRemoteConnection : NSObject /usr/lib/libc++.1.dylib <IDSServiceDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VTPeerRemoteConnection serviceIdentifier]
  -[VTPeerRemoteConnection service:account:incomingUnhandledProtobuf:fromID:context:]
  -[VTPeerRemoteConnection .cxx_destruct]
  -[VTPeerRemoteConnection _service]
  -[VTPeerRemoteConnection _pairedDevice]
  -[VTPeerRemoteConnection initWithServiceIdentifier:]
  -[VTPeerRemoteConnection _destination]
  -[VTPeerRemoteConnection service:account:identifier:didSendWithSuccess:error:]
  -[VTPeerRemoteConnection setDelegate:]
  -[VTPeerRemoteConnection _account]
  -[VTPeerRemoteConnection hasPeer]
  -[VTPeerRemoteConnection initWithServiceIdentifier:requireNearbyPeer:]
  -[VTPeerRemoteConnection _invokeCompletionForIdentifier:response:error:]
  -[VTPeerRemoteConnection _sendResponse:forRequestId:]
  -[VTPeerRemoteConnection _wrappedSendFailureError:]
  -[VTPeerRemoteConnection _hasNearbyPeer]
  -[VTPeerRemoteConnection sendRequestType:nonWaking:]


VTAssetManagerEnablePolicy : VTPolicy
  // instance methods
  -[VTAssetManagerEnablePolicy init]
  -[VTAssetManagerEnablePolicy _subscribeEventMonitors]
  -[VTAssetManagerEnablePolicy _addAssetManagerEnabledConditions]


VTKeywordDetectorContext : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *assetPath
 @property  NSString *categoryKey
 @property  NSString *locale
 @property  unsigned long audioSourceOption
 @property  BOOL isMultiPhraseVTEnabled

  // instance methods
  -[VTKeywordDetectorContext assetPath]
  -[VTKeywordDetectorContext locale]
  -[VTKeywordDetectorContext .cxx_destruct]
  -[VTKeywordDetectorContext isMultiPhraseVTEnabled]
  -[VTKeywordDetectorContext initWithVTContext:error:]
  -[VTKeywordDetectorContext categoryKey]
  -[VTKeywordDetectorContext audioSourceOption]


VTKeywordDetector : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableArray *analyzers
 @property  VTKeywordDetectorAssets *asset
 @property  VTKeywordDetectorContext *context
 @property  <VTKeywordDetectorDelegate> *delegate

  // instance methods
  -[VTKeywordDetector context]
  -[VTKeywordDetector setAsset:]
  -[VTKeywordDetector asset]
  -[VTKeywordDetector .cxx_destruct]
  -[VTKeywordDetector endAudio]
  -[VTKeywordDetector setContext:]
  -[VTKeywordDetector _fetchResults]
  -[VTKeywordDetector setDelegate:]
  -[VTKeywordDetector delegate]
  -[VTKeywordDetector initWithContext:withDelegate:error:]
  -[VTKeywordDetector setStartSampleCount:]
  -[VTKeywordDetector analyzers]
  -[VTKeywordDetector processAudioBuffer:numSamples:]
  -[VTKeywordDetector getKeywordDetectorResults]
  -[VTKeywordDetector _analyzeAndConstructFinalResults:]
  -[VTKeywordDetector _getScoreForPhraseId:withScaleFactor:fromResults:]
  -[VTKeywordDetector resetWithSamplingRate:withAudioSource:]
  -[VTKeywordDetector getKeywordDetectorDetailedResults]
  -[VTKeywordDetector setAnalyzers:]


VTVoiceTriggerEnabledPolicyNonAOP : VTPolicy
  // instance methods
  -[VTVoiceTriggerEnabledPolicyNonAOP init]
  -[VTVoiceTriggerEnabledPolicyNonAOP _addVoiceTriggerEnabledConditions]
  -[VTVoiceTriggerEnabledPolicyNonAOP _subscribeEventMonitors]


VTUtteranceMetadataManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VTUtteranceMetadataManager _getBaseMetaDictionaryForUtterancePath:]
  +[VTUtteranceMetadataManager isUtteranceImplicitlyTrained:]
  +[VTUtteranceMetadataManager recordedTimeStampOfFile:]
  +[VTUtteranceMetadataManager _writeMetaDict:forUtterancePath:]
  +[VTUtteranceMetadataManager _saveMetaVersionFileAtPath:]
  +[VTUtteranceMetadataManager _upgradeLocaleDirectoryIfNecessary:]
  +[VTUtteranceMetadataManager _audioDirectoryNeedsUpgrade:]
  +[VTUtteranceMetadataManager _upgradeUtteranceMeta:]
  +[VTUtteranceMetadataManager saveUtteranceMetadataForUtterance:isExplicitEnrollment:isHandheldEnrollment:withBiometricResult:]
  +[VTUtteranceMetadataManager saveMetaVersionFileAtSATAudioDirectory:]
  +[VTUtteranceMetadataManager upgradeMetaFilesIfNecessaaryAtSATRoot:]


VTPolicy : NSObject /usr/lib/libc++.1.dylib <VTEventMonitorDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VTPolicy defaultVoiceTriggerEnablePolicy]

  // instance methods
  -[VTPolicy init]
  -[VTPolicy dealloc]
  -[VTPolicy .cxx_destruct]
  -[VTPolicy addConditions:]
  -[VTPolicy isEnabled]
  -[VTPolicy setCallback:]
  -[VTPolicy subscribeEventMonitor:]
  -[VTPolicy _checkAllConditionsEnabled]
  -[VTPolicy VTEventMonitorDidReceiveEvent:]
  -[VTPolicy notifyCallback:]


VTTranscriber : NSObject /usr/lib/libc++.1.dylib <_EARSpeechRecognitionResultStream>
 @property  double triggerConfidence
 @property  BOOL isTriggerFollowedByWords
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VTTranscriber .cxx_destruct]
  -[VTTranscriber endAudio]
  -[VTTranscriber reset]
  -[VTTranscriber speechRecognizer:didRecognizePartialResult:]
  -[VTTranscriber speechRecognizer:didFinishRecognitionWithError:]
  -[VTTranscriber speechRecognizer:didRecognizeFinalResults:]
  -[VTTranscriber _getConfidence:]
  -[VTTranscriber triggerConfidence]
  -[VTTranscriber initWithConfiguration:triggerTokens:useKeywordSpotting:]
  -[VTTranscriber runRecognitionWithCallback:]
  -[VTTranscriber recognizeWavData:length:]
  -[VTTranscriber recognizedTokens]
  -[VTTranscriber isTriggerFollowedByWords]


VTEventAudioCorrupt : VTEvent
  // instance methods
  -[VTEventAudioCorrupt _buildTitle]
  -[VTEventAudioCorrupt _buildContent]
  -[VTEventAudioCorrupt _buildDetail]


VTXPCServiceClient : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[VTXPCServiceClient clearVoiceTriggerCount]
  -[VTXPCServiceClient init]
  -[VTXPCServiceClient resetAssertions]
  -[VTXPCServiceClient getFirstChanceAudioBuffer]
  -[VTXPCServiceClient dealloc]
  -[VTXPCServiceClient .cxx_destruct]
  -[VTXPCServiceClient enableVoiceTrigger:withAssertion:]
  -[VTXPCServiceClient _service]
  -[VTXPCServiceClient requestAudioCapture:]
  -[VTXPCServiceClient getVoiceTriggerCount]
  -[VTXPCServiceClient getLastTriggerType]
  -[VTXPCServiceClient requestCurrentBuiltInRTModelDictionary]
  -[VTXPCServiceClient notifyVoiceTriggeredSiriSessionCancelled:]
  -[VTXPCServiceClient requestCurrentVoiceTriggerAssetDictionary]
  -[VTXPCServiceClient notifySecondChanceRequest]
  -[VTXPCServiceClient notifyTriggerEventRequest]
  -[VTXPCServiceClient isLastTriggerFollowedBySpeech]
  -[VTXPCServiceClient setRaiseToSpeakBypassing:timeout:]
  -[VTXPCServiceClient requestCurrentVoiceTriggerAssetDictionaryWithReply:]
  -[VTXPCServiceClient getFirstChanceVTEventInfo]
  -[VTXPCServiceClient setPhraseSpotterBypassing:timeout:]
  -[VTXPCServiceClient getFirstChanceTriggeredDate]
  -[VTXPCServiceClient setCurrentBuiltInRTModelDictionary:]


VTSiriEnabledMonitor : VTEventMonitor
  // class methods
  +[VTSiriEnabledMonitor sharedInstance]

  // instance methods
  -[VTSiriEnabledMonitor _didReceiveSiriSettingChanged:]
  -[VTSiriEnabledMonitor init]
  -[VTSiriEnabledMonitor _stopMonitoring]
  -[VTSiriEnabledMonitor _startMonitoringWithQueue:]
  -[VTSiriEnabledMonitor _notifyObserver:withEnabled:]
  -[VTSiriEnabledMonitor isEnabled]


VTCoreSpeechKeepAliveHandler : NSObject /usr/lib/libc++.1.dylib <VTSiriEnabledMonitorDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VTCoreSpeechKeepAliveHandler _handleSpeakerActivated]
  -[VTCoreSpeechKeepAliveHandler init]
  -[VTCoreSpeechKeepAliveHandler _enableCoreSpeechDaemonKeepAlive]
  -[VTCoreSpeechKeepAliveHandler dealloc]
  -[VTCoreSpeechKeepAliveHandler .cxx_destruct]
  -[VTCoreSpeechKeepAliveHandler voiceTriggerPolicyDidChange:]
  -[VTCoreSpeechKeepAliveHandler _disableCoreSpeechDaemonKeepAlive]
  -[VTCoreSpeechKeepAliveHandler VTSiriEnabledMonitor:didReceiveEnabled:]
  -[VTCoreSpeechKeepAliveHandler _voiceTriggerPolicyEnabled]
  -[VTCoreSpeechKeepAliveHandler _voiceTriggerPolicyDisabled]
  -[VTCoreSpeechKeepAliveHandler _coreSpeechDaemonKeepAlived]
  -[VTCoreSpeechKeepAliveHandler _handleSpeakerInactivated]
  -[VTCoreSpeechKeepAliveHandler start]


VTPhraseSpotterControlRemote : NSObject /usr/lib/libc++.1.dylib <VTPeerRemoteConnectionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VTPhraseSpotterControlRemote initWithDelegate:]
  -[VTPhraseSpotterControlRemote .cxx_destruct]
  -[VTPhraseSpotterControlRemote remoteConnection:handleMessageType:completion:]


VTGestureMonitor : NSObject /usr/lib/libc++.1.dylib
 @property  <VTGestureMonitorDelegate> *delegate

  // class methods
  +[VTGestureMonitor defaultGestureMonitor]

  // instance methods
  -[VTGestureMonitor .cxx_destruct]
  -[VTGestureMonitor startObserving]
  -[VTGestureMonitor setDelegate:]
  -[VTGestureMonitor delegate]


VTKeywordDetectorAssets : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *configFile
 @property  NSString *resourcePath
 @property  NSDictionary *dictionary
 @property  NSString *configVersion
 @property  NSString *categoryKey
 @property  NSString *locale

  // instance methods
  -[VTKeywordDetectorAssets _dictionary]
  -[VTKeywordDetectorAssets resourcePath]
  -[VTKeywordDetectorAssets locale]
  -[VTKeywordDetectorAssets configVersion]
  -[VTKeywordDetectorAssets .cxx_destruct]
  -[VTKeywordDetectorAssets dictionary]
  -[VTKeywordDetectorAssets ctcKwdToPhraseIdMap]
  -[VTKeywordDetectorAssets configFile]
  -[VTKeywordDetectorAssets _decodeJson:]
  -[VTKeywordDetectorAssets categoryKey]
  -[VTKeywordDetectorAssets initWithAssetPath:categoryKey:forLocale:]
  -[VTKeywordDetectorAssets VTSecondPassConfigPathNDAPI]
  -[VTKeywordDetectorAssets VTSecondPassConfigPathRecognizerExist]
  -[VTKeywordDetectorAssets VTSecondPassConfigPathRecognizer]
  -[VTKeywordDetectorAssets supportedVTPhrasesInfo]
  -[VTKeywordDetectorAssets _hearstRTModelWithMajorVersion:minorVersion:locale:]
  -[VTKeywordDetectorAssets _getStringForKey:category:default:]
  -[VTKeywordDetectorAssets _containsKey:category:]
  -[VTKeywordDetectorAssets _getNumberForKey:category:default:]
  -[VTKeywordDetectorAssets VTSecondPassRecognizerScoreScaleFactor]
  -[VTKeywordDetectorAssets latestHearstRTModel]
  -[VTKeywordDetectorAssets VTSecondPassUseKeywordSpotting]
  -[VTKeywordDetectorAssets VTSecondPassRecognizerToken]
  -[VTKeywordDetectorAssets _getBoolForKey:category:default:]
  -[VTKeywordDetectorAssets _containsCategory:]


VTBlobBuilder : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VTBlobBuilder getBlobWithConfigFilename:rootDirectory:]
  +[VTBlobBuilder getDefaultBlob]


VTKeywordAnalyzerPhraseScore : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long phraseId
 @property  NSString *phStr
 @property  unsigned long samplesFed
 @property  unsigned long bestStart
 @property  unsigned long bestEnd
 @property  float bestScore
 @property  BOOL isEarlyWarning
 @property  BOOL isRescoring
 @property  BOOL isSecondChance
 @property  unsigned long samplesAtFire
 @property  unsigned long startSampleCount
 @property  NSDictionary *dictionary

  // instance methods
  -[VTKeywordAnalyzerPhraseScore init]
  -[VTKeywordAnalyzerPhraseScore phStr]
  -[VTKeywordAnalyzerPhraseScore .cxx_destruct]
  -[VTKeywordAnalyzerPhraseScore dictionary]
  -[VTKeywordAnalyzerPhraseScore bestEnd]
  -[VTKeywordAnalyzerPhraseScore setBestScore:]
  -[VTKeywordAnalyzerPhraseScore bestScore]
  -[VTKeywordAnalyzerPhraseScore phraseId]
  -[VTKeywordAnalyzerPhraseScore bestStart]
  -[VTKeywordAnalyzerPhraseScore startSampleCount]
  -[VTKeywordAnalyzerPhraseScore setPhraseId:]
  -[VTKeywordAnalyzerPhraseScore setSamplesFed:]
  -[VTKeywordAnalyzerPhraseScore setBestStart:]
  -[VTKeywordAnalyzerPhraseScore setBestEnd:]
  -[VTKeywordAnalyzerPhraseScore setIsEarlyWarning:]
  -[VTKeywordAnalyzerPhraseScore setIsRescoring:]
  -[VTKeywordAnalyzerPhraseScore samplesFed]
  -[VTKeywordAnalyzerPhraseScore isEarlyWarning]
  -[VTKeywordAnalyzerPhraseScore isRescoring]
  -[VTKeywordAnalyzerPhraseScore isSecondChance]
  -[VTKeywordAnalyzerPhraseScore setIsSecondChance:]
  -[VTKeywordAnalyzerPhraseScore samplesAtFire]
  -[VTKeywordAnalyzerPhraseScore setSamplesAtFire:]
  -[VTKeywordAnalyzerPhraseScore setStartSampleCount:]
  -[VTKeywordAnalyzerPhraseScore setPhStr:]


VTKeywordAnalyzerResults : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long detectorType
 @property  unsigned long numPhraseResults
 @property  NSArray *phraseScores

  // instance methods
  -[VTKeywordAnalyzerResults init]
  -[VTKeywordAnalyzerResults .cxx_destruct]
  -[VTKeywordAnalyzerResults detectorType]
  -[VTKeywordAnalyzerResults setDetectorType:]
  -[VTKeywordAnalyzerResults numPhraseResults]
  -[VTKeywordAnalyzerResults phraseScores]
  -[VTKeywordAnalyzerResults setNumPhraseResults:]
  -[VTKeywordAnalyzerResults setPhraseScores:]


VTKeywordDetectorPhraseScore : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long phraseId
 @property  float score

  // instance methods
  -[VTKeywordDetectorPhraseScore setScore:]
  -[VTKeywordDetectorPhraseScore score]
  -[VTKeywordDetectorPhraseScore phraseId]
  -[VTKeywordDetectorPhraseScore setPhraseId:]
  -[VTKeywordDetectorPhraseScore initWithPhraseId:withScore:]


VTKeywordDetectorResults : NSObject /usr/lib/libc++.1.dylib
 @property  VTKeywordDetectorPhraseScore *bestResult
 @property  NSArray *nBestResults

  // instance methods
  -[VTKeywordDetectorResults .cxx_destruct]
  -[VTKeywordDetectorResults nBestResults]
  -[VTKeywordDetectorResults initWithResultArray:]
  -[VTKeywordDetectorResults _getBestResultIdx:]
  -[VTKeywordDetectorResults bestResult]
  -[VTKeywordDetectorResults setBestResult:]
  -[VTKeywordDetectorResults setNBestResults:]


VTAssetMonitor : VTEventMonitor
  // class methods
  +[VTAssetMonitor sharedInstance]

  // instance methods
  -[VTAssetMonitor notifyNewAssetDownloaded]
  -[VTAssetMonitor init]
  -[VTAssetMonitor _stopMonitoring]
  -[VTAssetMonitor _startMonitoringWithQueue:]
  -[VTAssetMonitor _notifyObserver:]
  -[VTAssetMonitor _didReceiveNewAssetAvailable]


VTLowPowerModeMonitor : VTEventMonitor
  // class methods
  +[VTLowPowerModeMonitor sharedInstance]

  // instance methods
  -[VTLowPowerModeMonitor init]
  -[VTLowPowerModeMonitor _stopMonitoring]
  -[VTLowPowerModeMonitor _startMonitoringWithQueue:]
  -[VTLowPowerModeMonitor _didReceiveLowPowerModeChanged]
  -[VTLowPowerModeMonitor _checkPowerMode]
  -[VTLowPowerModeMonitor _didReceiveLowPowerModeChangedInQueue:]
  -[VTLowPowerModeMonitor _notifyObserver:withPowerMode:]
  -[VTLowPowerModeMonitor powerMode]
  -[VTLowPowerModeMonitor isLowPowerMode]


VTSpringboardStartMonitor : VTEventMonitor
  // class methods
  +[VTSpringboardStartMonitor sharedInstance]

  // instance methods
  -[VTSpringboardStartMonitor init]
  -[VTSpringboardStartMonitor _stopMonitoring]
  -[VTSpringboardStartMonitor _startMonitoringWithQueue:]
  -[VTSpringboardStartMonitor _didReceiveSpringboardStartedInQueue:]
  -[VTSpringboardStartMonitor _didReceiveSpringboardStarted:]
  -[VTSpringboardStartMonitor _checkSpringBoardStarted]
  -[VTSpringboardStartMonitor _notifyObserver:withStarted:]
  -[VTSpringboardStartMonitor isSpringboardStarted]


VTPreferences : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VTPreferences sharedPreferences]
  +[VTPreferences deviceCategoryStringRepresentationForCategoryType:]

  // instance methods
  -[VTPreferences phraseSpotterEnabled]
  -[VTPreferences synchronize]
  -[VTPreferences voiceTriggerEnabledWhenChargerConnected]
  -[VTPreferences _storeModeEnabled]
  -[VTPreferences init]
  -[VTPreferences discardAllSATEnrollment]
  -[VTPreferences _getSATEnrollmentAudioPathForLanguageCodeForLegacyVoiceProfile:]
  -[VTPreferences secondPassAudioLoggingEnabled]
  -[VTPreferences isRemoteVoiceTriggerAvailable]
  -[VTPreferences setVoiceTriggerEnabled:]
  -[VTPreferences markSATEnrollmentSuccessForLanguageCode:]
  -[VTPreferences _languageCode]
  -[VTPreferences setPhraseSpotterEnabled:sender:]
  -[VTPreferences setSecondPassAudioLoggingEnabled:]
  -[VTPreferences setPhraseSpotterEnabled:]
  -[VTPreferences fileLoggingLevel]
  -[VTPreferences fileLoggingIsEnabled]
  -[VTPreferences _gibraltarHasBuiltInMic]
  -[VTPreferences _VTSATBasePath]
  -[VTPreferences isSATAvailable]
  -[VTPreferences setVoiceTriggerEnabled:sender:]
  -[VTPreferences corespeechDaemonEnabled]
  -[VTPreferences _voiceTriggerEnabled]
  -[VTPreferences getSATEnrollmentPath]
  -[VTPreferences setVoiceTriggerEnabledWhenChargerConnected:]
  -[VTPreferences isSATEnrolledForLanguageCode:]
  -[VTPreferences setFileLoggingLevel:]
  -[VTPreferences isSATEnrollmentMigratedForLanguageCode:]
  -[VTPreferences setFileLoggingIsEnabled:]
  -[VTPreferences getMD5HashForSATEnrollmentAudioForLanguageCode:]
  -[VTPreferences voiceTriggerEnabledWhenChargerDisconnected]
  -[VTPreferences discardSATEnrollmentForLanguageCode:]
  -[VTPreferences audioInjectionFilePath]
  -[VTPreferences _isSATMarkedForMarker:languageCode:]
  -[VTPreferences useSiriActivationSPIForwatchOS]
  -[VTPreferences _localeIdentifier]
  -[VTPreferences onetimeRemoteAssetQueryRanSuccessfully]
  -[VTPreferences devicesWithVoiceProfileIniCloudForLanguage:]
  -[VTPreferences voiceTriggerInCoreSpeech]
  -[VTPreferences localizedTriggerPhrase]
  -[VTPreferences _setVoiceTriggerEnabled:sender:]
  -[VTPreferences hasExplicitlySetVoiceTriggerEnabled]
  -[VTPreferences setOnetimeRemoteAssetQueryRanSuccessfully:]
  -[VTPreferences voiceTriggerEnabled]
  -[VTPreferences localizedTriggerPhraseForLanguageCode:]
  -[VTPreferences setVoiceTriggerEnabledWhenChargerDisconnected:]
  -[VTPreferences isMultiPhraseVTEnabled]
  -[VTPreferences hasVoiceProfileIniCloudForLanguageCode:]
  -[VTPreferences gestureSubscriptionEnabled]
  -[VTPreferences _VTSATCachePath]
  -[VTPreferences isVoiceTriggerAvailable]
  -[VTPreferences _isLocalVoiceTriggerAvailable]
  -[VTPreferences enableVoiceTriggerUponVoiceProfileSyncForLanguage:]
  -[VTPreferences useSiriActivationSPIForiOS]


VTNovDetectorResult : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long sampleFed
 @property  unsigned long bestPhrase
 @property  unsigned long bestStart
 @property  unsigned long bestEnd
 @property  float bestScore
 @property  BOOL earlyWarning
 @property  BOOL isRescoring
 @property  NSDictionary *dictionary

  // instance methods
  -[VTNovDetectorResult initWithResult:]
  -[VTNovDetectorResult dictionary]
  -[VTNovDetectorResult bestEnd]
  -[VTNovDetectorResult setBestScore:]
  -[VTNovDetectorResult bestScore]
  -[VTNovDetectorResult bestStart]
  -[VTNovDetectorResult setBestPhrase:]
  -[VTNovDetectorResult setBestStart:]
  -[VTNovDetectorResult setBestEnd:]
  -[VTNovDetectorResult setIsRescoring:]
  -[VTNovDetectorResult bestPhrase]
  -[VTNovDetectorResult isRescoring]
  -[VTNovDetectorResult sampleFed]
  -[VTNovDetectorResult earlyWarning]
  -[VTNovDetectorResult setSampleFed:]
  -[VTNovDetectorResult setEarlyWarning:]


VTNovDetector : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[VTNovDetector analyzeWavData:numSamples:]
  -[VTNovDetector dealloc]
  -[VTNovDetector initWithConfigPath:resourcePath:]
  -[VTNovDetector getSuperVectorWithEndPoint:]
  -[VTNovDetector reset]
  -[VTNovDetector getOptionValue:]
  -[VTNovDetector resetBest]
  -[VTNovDetector analyzeWavFloatData:numSamples:]
  -[VTNovDetector getAnalyzedResultForPhraseId:]
  -[VTNovDetector numResultsAvailable]


VTUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VTUtilities isInternalInstall]
  +[VTUtilities systemUpTime]
  +[VTUtilities deviceSoftwareVersion]
  +[VTUtilities isIOS]
  +[VTUtilities sanitizeEventInfoForLogging:]
  +[VTUtilities deviceProductType]
  +[VTUtilities getAssetHashFromConfigPath:]
  +[VTUtilities isNano]
  +[VTUtilities supportBargeIn]
  +[VTUtilities supportTTS]
  +[VTUtilities VTIsHorseman]
  +[VTUtilities convertToShortLPCMBufFromFloatLPCMBuf:]
  +[VTUtilities isTorpedo]
  +[VTUtilities supportPremiumAssets]
  +[VTUtilities deviceProductVersion]
  +[VTUtilities supportExternalPhraseSpotter]
  +[VTUtilities _round:withPlaces:]
  +[VTUtilities forceReload]
  +[VTUtilities isAlwaysOn]
  +[VTUtilities VTMachAbsoluteTimeGetTimeInterval:]
  +[VTUtilities deviceCategoryForDeviceProductType:]


VTSiriRestrictionOnLockScreenMonitor : VTEventMonitor <MCProfileConnectionObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VTSiriRestrictionOnLockScreenMonitor sharedInstance]

  // instance methods
  -[VTSiriRestrictionOnLockScreenMonitor profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
  -[VTSiriRestrictionOnLockScreenMonitor isRestricted]
  -[VTSiriRestrictionOnLockScreenMonitor init]
  -[VTSiriRestrictionOnLockScreenMonitor _stopMonitoring]
  -[VTSiriRestrictionOnLockScreenMonitor _didReceiveRestrictionChanged:]
  -[VTSiriRestrictionOnLockScreenMonitor _startMonitoringWithQueue:]
  -[VTSiriRestrictionOnLockScreenMonitor _checkSiriRestrictedOnLockScreen]
  -[VTSiriRestrictionOnLockScreenMonitor _didReceiveRestrictionChangedInQueue:]
  -[VTSiriRestrictionOnLockScreenMonitor _notifyObserver:withRestricted:]


VTSiriAssertionMonitor : VTEventMonitor
  // class methods
  +[VTSiriAssertionMonitor sharedInstance]

  // instance methods
  -[VTSiriAssertionMonitor init]
  -[VTSiriAssertionMonitor _stopMonitoring]
  -[VTSiriAssertionMonitor dealloc]
  -[VTSiriAssertionMonitor _startMonitoringWithQueue:]
  -[VTSiriAssertionMonitor _notifyObserver:]
  -[VTSiriAssertionMonitor isEnabled]
  -[VTSiriAssertionMonitor enableAssertionReceived]
  -[VTSiriAssertionMonitor disableAssertionReceived]


VTTriggerEventMonitor : NSObject /usr/lib/libc++.1.dylib <VTTriggerEventMonitorDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VTTriggerEventMonitor sharedMonitor]

  // instance methods
  -[VTTriggerEventMonitor init]
  -[VTTriggerEventMonitor _invalidateConnection]
  -[VTTriggerEventMonitor dealloc]
  -[VTTriggerEventMonitor .cxx_destruct]
  -[VTTriggerEventMonitor removeObserver:]
  -[VTTriggerEventMonitor addObserver:]
  -[VTTriggerEventMonitor voiceTriggered]
  -[VTTriggerEventMonitor earlyDetected]
  -[VTTriggerEventMonitor _attemptConnection]
  -[VTTriggerEventMonitor _enableTriggerEventXPCNotification:]
  -[VTTriggerEventMonitor _voiceTriggered]
  -[VTTriggerEventMonitor _earlyDetected]
  -[VTTriggerEventMonitor _attemptConnectionInQueue]


VTStateManager : NSObject /usr/lib/libc++.1.dylib <VTFirstUnlockMonitorDelegate, VTGestureMonitorDelegate>
 @property  VTCoreSpeechKeepAliveHandler *coreSpeechKeepAliveHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VTStateManager clearVoiceTriggerCount]
  +[VTStateManager requestVoiceTriggerEnabled:forReason:]
  +[VTStateManager requestPhraseSpotterBypassing:timeout:]
  +[VTStateManager notifyVoiceTrigger]
  +[VTStateManager requestForcedSecondChance]
  +[VTStateManager requestRaiseToSpeakBypassing:timeout:]
  +[VTStateManager notifyVoiceTriggeredSiriSessionCancelled]
  +[VTStateManager isLastTriggerSecondChanceTriggered]
  +[VTStateManager requestAudioCapture:]
  +[VTStateManager getVoiceTriggerCount]
  +[VTStateManager requestCurrentBuiltInRTModelDictionary]
  +[VTStateManager isLastTriggerForced]
  +[VTStateManager notifyVoiceTriggeredSiriSessionCancelled:]
  +[VTStateManager requestCurrentVoiceTriggerAssetDictionary]
  +[VTStateManager firstChanceVTEventInfo]
  +[VTStateManager iPhoneShouldStartVoiceTriggerInCoreSpeech]
  +[VTStateManager requestForcedTriggerEvent]
  +[VTStateManager firstChanceTriggeredDate]
  +[VTStateManager firstChanceAudioBuffer]
  +[VTStateManager requestCurrentVoiceTriggerAssetDictionaryWithReply:]
  +[VTStateManager _serviceClient]
  +[VTStateManager setCurrentBuiltInRTModelDictionary:]

  // instance methods
  -[VTStateManager getModel]
  -[VTStateManager getPhraseSpotter]
  -[VTStateManager _initializeXPCService]
  -[VTStateManager .cxx_destruct]
  -[VTStateManager coreSpeechKeepAliveHandler]
  -[VTStateManager _powerlog:]
  -[VTStateManager gestureMonitorDidReceiveWakeGesture:]
  -[VTStateManager _stateTransitionDidOccur:fromCallback:]
  -[VTStateManager gestureMonitorDidReceiveSleepGesture:]
  -[VTStateManager VTFirstUnlockMonitor:didReceiveFirstUnlock:]
  -[VTStateManager _notifyStateTransitionToState:withStartTimestamp:]
  -[VTStateManager initWithProperty:phraseSpotter:enablePolicy:callbackWithMessageAndTimestamp:]
  -[VTStateManager setCoreSpeechKeepAliveHandler:]
  -[VTStateManager initWithProperty:callbackWithMessageAndTimestamp:]
  -[VTStateManager initWithProperty:callbackWithMessage:]


VTBatteryMonitor : VTEventMonitor
  // class methods
  +[VTBatteryMonitor sharedInstance]

  // instance methods
  -[VTBatteryMonitor init]
  -[VTBatteryMonitor _stopMonitoring]
  -[VTBatteryMonitor _startMonitoringWithQueue:]
  -[VTBatteryMonitor batteryState]
  -[VTBatteryMonitor _checkBatteryState]
  -[VTBatteryMonitor _didReceiveBatteryStatusChanged:]
  -[VTBatteryMonitor _notifyObserver:withBatteryState:]
  -[VTBatteryMonitor _didReceiveBatteryStatusChangedInQueue:]


AudioFileWriter : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[AudioFileWriter dealloc]
  -[AudioFileWriter close]
  -[AudioFileWriter initWithURL:inputFormat:outputFormat:]
  -[AudioFileWriter addSamples:len:]


VTSiriNotifications : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[VTSiriNotifications init]
  -[VTSiriNotifications .cxx_destruct]
  -[VTSiriNotifications broadcastAudioPayload:numSamples:superVectorScore:absoluteTime:]


VTVoiceProfileRetrainer : NSObject /usr/lib/libc++.1.dylib <VTTextDependentSpeakerRecognizerDelegate>
 @property  VTAnalyzerNDAPI *analyzer
 @property  NSString *languageCode
 @property  unsigned long modelType
 @property  NSString *configPath
 @property  NSString *resourcePath
 @property  VTTextDependentSpeakerRecognizer *satRetrainingTdSr
 @property  NSObject<OS_dispatch_semaphore> *satRetrainingTdSrSemaphore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VTVoiceProfileRetrainer setLanguageCode:]
  -[VTVoiceProfileRetrainer modelType]
  -[VTVoiceProfileRetrainer languageCode]
  -[VTVoiceProfileRetrainer textDependentSpeakerRecognizer:hasSatScore:]
  -[VTVoiceProfileRetrainer resourcePath]
  -[VTVoiceProfileRetrainer setModelType:]
  -[VTVoiceProfileRetrainer dealloc]
  -[VTVoiceProfileRetrainer .cxx_destruct]
  -[VTVoiceProfileRetrainer setAnalyzer:]
  -[VTVoiceProfileRetrainer analyzer]
  -[VTVoiceProfileRetrainer textDependentSpeakerRecognizer:failedWithError:]
  -[VTVoiceProfileRetrainer setResourcePath:]
  -[VTVoiceProfileRetrainer _deleteUtterances:]
  -[VTVoiceProfileRetrainer _analyzeEnrollmentUtts:thresholdTrigger:thresholdSAT:thresholdTDSR:isUpdatingModel:extraUtts:discardUtts:psrTimeout:]
  -[VTVoiceProfileRetrainer _getLastPruningCookie]
  -[VTVoiceProfileRetrainer _updatePruningCookie:]
  -[VTVoiceProfileRetrainer _computeSamplingMSEForUtts:withBeforeScores:]
  -[VTVoiceProfileRetrainer initWithAnalyzer:languageCode:modelType:configPath:resourcePath:]
  -[VTVoiceProfileRetrainer retrainSATModelWithCompletion:]
  -[VTVoiceProfileRetrainer pruneVoiceProfileIfNecessary]
  -[VTVoiceProfileRetrainer configPath]
  -[VTVoiceProfileRetrainer setConfigPath:]
  -[VTVoiceProfileRetrainer satRetrainingTdSr]
  -[VTVoiceProfileRetrainer setSatRetrainingTdSr:]
  -[VTVoiceProfileRetrainer satRetrainingTdSrSemaphore]
  -[VTVoiceProfileRetrainer setSatRetrainingTdSrSemaphore:]


VTVoiceTriggerEnabledPolicyHorseman : VTPolicy
  // instance methods
  -[VTVoiceTriggerEnabledPolicyHorseman init]
  -[VTVoiceTriggerEnabledPolicyHorseman _addVoiceTriggerEnabledConditions]
  -[VTVoiceTriggerEnabledPolicyHorseman _subscribeEventMonitors]


VTAssetManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VTAssetManager sharedInstance]

  // instance methods
  -[VTAssetManager init]
  -[VTAssetManager .cxx_destruct]
  -[VTAssetManager _defaultDownloadOptions]
  -[VTAssetManager _runAssetQuery:completion:]
  -[VTAssetManager _fetchRemoteMetaData]
  -[VTAssetManager _isReadyToUse]
  -[VTAssetManager _findLatestInstalledAsset:]
  -[VTAssetManager _downloadAsset:withComplete:]
  -[VTAssetManager installedAssetForLanguage:]
  -[VTAssetManager _fetchRemoteAssetForLanguage:supportPremium:]
  -[VTAssetManager _installedAssetForLanguage:supportPremium:]
  -[VTAssetManager _assetQueryForLanguage:supportPremium:]
  -[VTAssetManager _filteredAssetsForAssets:language:supportPremium:]
  -[VTAssetManager _installedAssetWithoutMetaDataForLanguage:supportPremium:]
  -[VTAssetManager _updateFromRemoteToLocalAssets:]
  -[VTAssetManager _addKeyValuePairForQuery:]
  -[VTAssetManager _startDownloadingVoiceTriggerAsset:progress:completion:]
  -[VTAssetManager assetForLanguage:]


VTLockScreenMonitor : VTEventMonitor
  // class methods
  +[VTLockScreenMonitor sharedInstance]

  // instance methods
  -[VTLockScreenMonitor init]
  -[VTLockScreenMonitor _stopMonitoring]
  -[VTLockScreenMonitor lockScreenStateDescription:]
  -[VTLockScreenMonitor _startMonitoringWithQueue:]
  -[VTLockScreenMonitor _didReceiveLockScreenStateChanged:]
  -[VTLockScreenMonitor _checkLockScreenState]
  -[VTLockScreenMonitor _didReceiveLockScreenStateChangedInQueue:]
  -[VTLockScreenMonitor lockScreenState]
  -[VTLockScreenMonitor _notifyObserver:withLockScreenState:]


VTPhraseSpotterControlConnection : NSObject /usr/lib/libc++.1.dylib <VTPeerRemoteConnectionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VTPhraseSpotterControlConnection init]
  -[VTPhraseSpotterControlConnection .cxx_destruct]
  -[VTPhraseSpotterControlConnection remoteConnection:handleMessageType:completion:]
  -[VTPhraseSpotterControlConnection updateRemotePhraseSpotterEnabled:]
  -[VTPhraseSpotterControlConnection notifyRemoteOfEarlyDetect]
  -[VTPhraseSpotterControlConnection notifyRemoteOfTriggerEvent]
  -[VTPhraseSpotterControlConnection notifyRemoteOfDismissal]


VTVoiceTriggerEnabledMonitor : VTEventMonitor
  // class methods
  +[VTVoiceTriggerEnabledMonitor sharedInstance]

  // instance methods
  -[VTVoiceTriggerEnabledMonitor init]
  -[VTVoiceTriggerEnabledMonitor _stopMonitoring]
  -[VTVoiceTriggerEnabledMonitor _didReceiveVoiceTriggerSettingChanged:]
  -[VTVoiceTriggerEnabledMonitor _startMonitoringWithQueue:]
  -[VTVoiceTriggerEnabledMonitor _notifyObserver:withEnabled:]
  -[VTVoiceTriggerEnabledMonitor _didReceiveVoiceTriggerSettingChangedInQueue:]
  -[VTVoiceTriggerEnabledMonitor isEnabled]
  -[VTVoiceTriggerEnabledMonitor _checkVoiceTriggerEnabled]


VTAnalyzerNDAPI : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[VTAnalyzerNDAPI dealloc]
  -[VTAnalyzerNDAPI getAnalyzedResult]
  -[VTAnalyzerNDAPI .cxx_destruct]
  -[VTAnalyzerNDAPI initWithConfigPath:resourcePath:]
  -[VTAnalyzerNDAPI getSuperVectorWithEndPoint:]
  -[VTAnalyzerNDAPI reset]
  -[VTAnalyzerNDAPI resetBest]
  -[VTAnalyzerNDAPI _decodeJson:]
  -[VTAnalyzerNDAPI getSATVectorCount]
  -[VTAnalyzerNDAPI updateSAT]
  -[VTAnalyzerNDAPI _getOptionValueFromConfigurationName:]
  -[VTAnalyzerNDAPI _getFloatValueFromConfigurationName:defaultTo:]
  -[VTAnalyzerNDAPI _getIntValueFromConfigurationName:defaultTo:]
  -[VTAnalyzerNDAPI _getStringValueFromConfigurationName:defaultTo:]
  -[VTAnalyzerNDAPI getThresholdSAT]
  -[VTAnalyzerNDAPI _getNumberForKey:category:default:]
  -[VTAnalyzerNDAPI getRetrainThresholdTrigger]
  -[VTAnalyzerNDAPI getRetrainExplicitUttThresholdSAT]
  -[VTAnalyzerNDAPI getRetrainExplicitUttThresholdTDSR]
  -[VTAnalyzerNDAPI getRetrainThresholdSAT]
  -[VTAnalyzerNDAPI getRetrainThresholdTDSR]
  -[VTAnalyzerNDAPI getVoiceProfilePruningNumRetentionUtterances]
  -[VTAnalyzerNDAPI initializeSAT:]
  -[VTAnalyzerNDAPI getVoiceProfilePruningCookie]
  -[VTAnalyzerNDAPI analyzeSAT:size:]
  -[VTAnalyzerNDAPI analyzeWavData:length:]
  -[VTAnalyzerNDAPI getAnalyzedResult:]
  -[VTAnalyzerNDAPI _getBooleanValueFromConfigurationName:defaultTo:]
  -[VTAnalyzerNDAPI getScoreSuperVector:size:]
  -[VTAnalyzerNDAPI deleteVectorIndex:]
  -[VTAnalyzerNDAPI getCombinedTriggerThreshold]
  -[VTAnalyzerNDAPI getNDAPITriggerThreshold]
  -[VTAnalyzerNDAPI getCombinedSecondChanceThreshold]
  -[VTAnalyzerNDAPI getNDAPISecondChanceThreshold]
  -[VTAnalyzerNDAPI getCombinedLoggingThreshold]
  -[VTAnalyzerNDAPI getNDAPILoggingThreshold]
  -[VTAnalyzerNDAPI getExtraSamplesAtStart]
  -[VTAnalyzerNDAPI getSecondPassTrailingTime]
  -[VTAnalyzerNDAPI getDoSupervectorSecondaryTest]
  -[VTAnalyzerNDAPI getThresholdPresuperVector]
  -[VTAnalyzerNDAPI getDoSAT]
  -[VTAnalyzerNDAPI getRetrainNumExplicitUtt]
  -[VTAnalyzerNDAPI getRetrainNumImplicitUtt]
  -[VTAnalyzerNDAPI getRetrainSamplingPolicy]
  -[VTAnalyzerNDAPI getMaximumSpeakerVectors]
  -[VTAnalyzerNDAPI getPayloadUtteranceLifeTimeInDays]
  -[VTAnalyzerNDAPI getUseRecognizer]
  -[VTAnalyzerNDAPI getRecognizerConfig]
  -[VTAnalyzerNDAPI getRecognizerThresholdOffset]
  -[VTAnalyzerNDAPI getRecognizerWaitTime]
  -[VTAnalyzerNDAPI getRecognizerScoreScaleFactor]
  -[VTAnalyzerNDAPI getTriggerTokens]
  -[VTAnalyzerNDAPI getUseFallbackThresholdUponTimeout]
  -[VTAnalyzerNDAPI getUseKeywordSpotting]


VTEventNearTrigger : VTEvent
  // instance methods
  -[VTEventNearTrigger _buildTitle]
  -[VTEventNearTrigger _buildContent]
  -[VTEventNearTrigger _buildDetail]


VTAudioRouteChangeMonitor : VTEventMonitor
  // class methods
  +[VTAudioRouteChangeMonitor sharedInstance]

  // instance methods
  -[VTAudioRouteChangeMonitor init]
  -[VTAudioRouteChangeMonitor _stopMonitoring]
  -[VTAudioRouteChangeMonitor _startMonitoringWithQueue:]
  -[VTAudioRouteChangeMonitor _notifyObserver:]
  -[VTAudioRouteChangeMonitor _CMSessionDispatchQueue]
  -[VTAudioRouteChangeMonitor _updateHearstConnectionStatus]
  -[VTAudioRouteChangeMonitor updateExternalRouteConnectionStatus]
  -[VTAudioRouteChangeMonitor hearstConnectionStatus]
  -[VTAudioRouteChangeMonitor _hasInEarDetectSupport:]
  -[VTAudioRouteChangeMonitor _isActiveRoute:]
  -[VTAudioRouteChangeMonitor _hasDoAPSupport:]


VTAudioFileLog : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VTAudioFileLog sharedInstance]

  // instance methods
  -[VTAudioFileLog startRecording]
  -[VTAudioFileLog stopRecording]
  -[VTAudioFileLog init]
  -[VTAudioFileLog dealloc]
  -[VTAudioFileLog .cxx_destruct]
  -[VTAudioFileLog _closeAudioFile]
  -[VTAudioFileLog appendAudioData:]


VTEvent : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *jsonFileUrl
 @property  NSDictionary *voiceTriggerEventInfo

  // class methods
  +[VTEvent eventFromURL:]
  +[VTEvent eventTypeFromURL:]

  // instance methods
  -[VTEvent .cxx_destruct]
  -[VTEvent voiceTriggerEventInfo]
  -[VTEvent timestampString]
  -[VTEvent _packNumberFomVTEventInfo:key:format:]
  -[VTEvent _buildTitle]
  -[VTEvent _buildContent]
  -[VTEvent _buildDetail]
  -[VTEvent _buildTriggerContent]
  -[VTEvent _packAudioURLFromVTEventInfo:key:]
  -[VTEvent _packStringContent:value:]
  -[VTEvent _buildTriggerDetail]
  -[VTEvent eventTrackerDictionary]
  -[VTEvent initWithEventLogURL:]
  -[VTEvent _readJsonFile:]
  -[VTEvent jsonFileName]
  -[VTEvent _packStringFromVTEventInfo:key:]
  -[VTEvent _packAudioContent:filepath:]
  -[VTEvent _packBooleanFromVTEventInfo:key:]
  -[VTEvent jsonFileUrl]


VTAudioFileReader : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[VTAudioFileReader initWithURL:]
  -[VTAudioFileReader dealloc]
  -[VTAudioFileReader close]
  -[VTAudioFileReader readSamples:]


VTAggregator : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VTAggregator sharedAggregator]

  // instance methods
  -[VTAggregator setLanguageCode:]
  -[VTAggregator init]
  -[VTAggregator .cxx_destruct]
  -[VTAggregator logFalseWakeUp:]
  -[VTAggregator logTimeVoiceTriggerTransitionsToState:]
  -[VTAggregator logVoiceProfilePruningFailureWithReasonCode:]
  -[VTAggregator logProfileUpdateUtt:withScore:]
  -[VTAggregator logProfileUpdateScoreMSE:]
  -[VTAggregator logProfileUpdateNumDiscardedUttsPHS:]
  -[VTAggregator logProfileUpdateNumPrunedUttsPHS:]
  -[VTAggregator logProfileUpdateNumRetainedUttsPHS:]
  -[VTAggregator logTdPsrSATRetrainingTimedOut]
  -[VTAggregator logTdPsrSATRetrainingWaitTimeMs:]
  -[VTAggregator logTdPsrFailedDuringSATRetraining]
  -[VTAggregator _logUptime]
  -[VTAggregator _makeKeyWithLanguageAndAssetString:]
  -[VTAggregator _addValueForScalarKey:withValue:]
  -[VTAggregator _pushValueForDistributionKey:withValue:]
  -[VTAggregator _makeKeyWithLanguageCode:]
  -[VTAggregator _makeKey:]
  -[VTAggregator cumulativeUptime:cumulativeDowntime:reset:]
  -[VTAggregator setAssetString:]
  -[VTAggregator logActivation]
  -[VTAggregator logSecondPassResult:]
  -[VTAggregator logZeroRunAudio:]
  -[VTAggregator logRecognizerTimedOut]
  -[VTAggregator logProfileUpdateNumDeletedUttsStrategy:]
  -[VTAggregator logTdPsrSATDetectionWaitTimeMs:]
  -[VTAggregator logTdPsrFailedDuringSATDetection]
  -[VTAggregator logTdPsrSATDetectionTimedOut]
  -[VTAggregator logTdPsrExtraAudioSamplesProcessed:]


VTEventPHSReject : VTEvent
  // instance methods
  -[VTEventPHSReject _buildTitle]
  -[VTEventPHSReject _buildContent]
  -[VTEventPHSReject _buildDetail]


VTKeywordAnalyzerQuasar : NSObject /usr/lib/libc++.1.dylib <VTKeywordAnalyzer>
 @property  NSDictionary *ctcKwdToPhraseIdMap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VTKeywordAnalyzerQuasar .cxx_destruct]
  -[VTKeywordAnalyzerQuasar endAudio]
  -[VTKeywordAnalyzerQuasar initWithAsset:]
  -[VTKeywordAnalyzerQuasar ctcKwdToPhraseIdMap]
  -[VTKeywordAnalyzerQuasar setCtcKwdToPhraseIdMap:]
  -[VTKeywordAnalyzerQuasar setStartSampleCount:]
  -[VTKeywordAnalyzerQuasar resetWithLanguage:withSamplingRate:withAudioSource:]
  -[VTKeywordAnalyzerQuasar processFloatAudioBuffer:numSamples:]
  -[VTKeywordAnalyzerQuasar processAudioBuffer:numSamples:]
  -[VTKeywordAnalyzerQuasar getDetailedResults]
  -[VTKeywordAnalyzerQuasar getAnalyzerType]


VTFirstUnlockMonitor : VTEventMonitor
  // class methods
  +[VTFirstUnlockMonitor sharedInstance]

  // instance methods
  -[VTFirstUnlockMonitor init]
  -[VTFirstUnlockMonitor _stopMonitoring]
  -[VTFirstUnlockMonitor _checkFirstUnlocked]
  -[VTFirstUnlockMonitor _didReceiveFirstUnlockInQueue:]
  -[VTFirstUnlockMonitor _startMonitoringWithQueue:]
  -[VTFirstUnlockMonitor isFirstUnlocked]
  -[VTFirstUnlockMonitor _notifyObserver:withUnlocked:]
  -[VTFirstUnlockMonitor _didReceiveFirstUnlock:]


VTVoiceTriggerEnabledPolicyAOP : VTPolicy
  // instance methods
  -[VTVoiceTriggerEnabledPolicyAOP init]
  -[VTVoiceTriggerEnabledPolicyAOP _addVoiceTriggerEnabledConditions]
  -[VTVoiceTriggerEnabledPolicyAOP _subscribeEventMonitors]


VTEventMonitor : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[VTEventMonitor init]
  -[VTEventMonitor _stopMonitoring]
  -[VTEventMonitor dealloc]
  -[VTEventMonitor .cxx_destruct]
  -[VTEventMonitor _startMonitoringWithQueue:]
  -[VTEventMonitor notifyObserver:]
  -[VTEventMonitor removeObserver:]
  -[VTEventMonitor enumerateObservers:]
  -[VTEventMonitor addObserver:]
  -[VTEventMonitor enumerateObserversInQueue:]


VTKeywordAnalyzerNDAPI : NSObject /usr/lib/libc++.1.dylib <VTKeywordAnalyzer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VTKeywordAnalyzerNDAPI .cxx_destruct]
  -[VTKeywordAnalyzerNDAPI endAudio]
  -[VTKeywordAnalyzerNDAPI _resetStartAnalyzeTime]
  -[VTKeywordAnalyzerNDAPI initWithAsset:]
  -[VTKeywordAnalyzerNDAPI _setStartAnalyzeTime:]
  -[VTKeywordAnalyzerNDAPI setStartSampleCount:]
  -[VTKeywordAnalyzerNDAPI resetWithLanguage:withSamplingRate:withAudioSource:]
  -[VTKeywordAnalyzerNDAPI processFloatAudioBuffer:numSamples:]
  -[VTKeywordAnalyzerNDAPI processAudioBuffer:numSamples:]
  -[VTKeywordAnalyzerNDAPI getDetailedResults]
  -[VTKeywordAnalyzerNDAPI getAnalyzerType]
  -[VTKeywordAnalyzerNDAPI _populateScoreForPhraseId:withNovDetectorResult:]


VTVoiceProfileMigration : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VTVoiceProfileMigration getCurrentVoiceProfileVersionForLanguageCode:]
  +[VTVoiceProfileMigration updateVoiceProfileVersionFileForLanguageCode:]
  +[VTVoiceProfileMigration checkIfMigrationNecessaryForCompatibilityVersion:forLanguageCode:]
  +[VTVoiceProfileMigration migrateVoiceProfileToVersion:forLanguageCode:]


VTKeywordAnalyzerNDEAPI : NSObject /usr/lib/libc++.1.dylib <VTKeywordAnalyzer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VTKeywordAnalyzerNDEAPI dealloc]
  -[VTKeywordAnalyzerNDEAPI .cxx_destruct]
  -[VTKeywordAnalyzerNDEAPI endAudio]
  -[VTKeywordAnalyzerNDEAPI initWithAsset:]
  -[VTKeywordAnalyzerNDEAPI initWithBlob:]
  -[VTKeywordAnalyzerNDEAPI setStartSampleCount:]
  -[VTKeywordAnalyzerNDEAPI resetWithLanguage:withSamplingRate:withAudioSource:]
  -[VTKeywordAnalyzerNDEAPI processFloatAudioBuffer:numSamples:]
  -[VTKeywordAnalyzerNDEAPI processAudioBuffer:numSamples:]
  -[VTKeywordAnalyzerNDEAPI getDetailedResults]
  -[VTKeywordAnalyzerNDEAPI getAnalyzerType]
  -[VTKeywordAnalyzerNDEAPI _checkForTriggerWithBytes:withNumberOfSamples:]


VTInvalidSATEntriesCleaner : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VTInvalidSATEntriesCleaner cleanupOrphanedMetafilesForLanguage:payloadUtteranceLifeTimeInDays:dryRun:]
  +[VTInvalidSATEntriesCleaner cleanupOrphanedMetafilesAtURL:dryRun:]
  +[VTInvalidSATEntriesCleaner cleanupPayloadUtterancesExceedingLifeTimeInDays:forType:forLanguageCode:dryRun:]
  +[VTInvalidSATEntriesCleaner cleanupInvalidSATEntriesAtSATRoot:payloadUtteranceLifeTimeInDays:dryRun:]


VTSoftwareUpdateCheckingMonitor : VTEventMonitor
  // class methods
  +[VTSoftwareUpdateCheckingMonitor sharedInstance]

  // instance methods
  -[VTSoftwareUpdateCheckingMonitor init]
  -[VTSoftwareUpdateCheckingMonitor _stopMonitoring]
  -[VTSoftwareUpdateCheckingMonitor _startMonitoringWithQueue:]
  -[VTSoftwareUpdateCheckingMonitor isSoftwareUpdateCheckingRunning]
  -[VTSoftwareUpdateCheckingMonitor _checkSoftwareUpdateCheckingState]
  -[VTSoftwareUpdateCheckingMonitor _didReceiveSoftwareUpdateCheckingStateChanged:]
  -[VTSoftwareUpdateCheckingMonitor _softwareUpdateCheckingState]
  -[VTSoftwareUpdateCheckingMonitor _notifyObserver:withSoftwareUpdateCheckingRunning:]
  -[VTSoftwareUpdateCheckingMonitor _didReceiveSoftwareUpdateCheckingStateChangedInQueue:]


VTCorruptDetector : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[VTCorruptDetector init]
  -[VTCorruptDetector reset]
  -[VTCorruptDetector analyze:]
  -[VTCorruptDetector getMaxZeroSampleCount]
  -[VTCorruptDetector audioHasZeroRun]


VTXPCConnection : NSObject /usr/lib/libc++.1.dylib <VTXPCService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VTXPCConnection initialize]

  // instance methods
  -[VTXPCConnection setPhraseSpotterBypassing:timeout:timestamp:]
  -[VTXPCConnection clearVoiceTriggerCount]
  -[VTXPCConnection requestCurrentBuiltInRTModelDictionaryWithReply:]
  -[VTXPCConnection init]
  -[VTXPCConnection resetAssertions]
  -[VTXPCConnection isLastTriggerFollowedBySpeechWithReply:]
  -[VTXPCConnection queryLastTriggerEventTypeWithReply:]
  -[VTXPCConnection getTestResponse:]
  -[VTXPCConnection getFirstChanceAudioBufferWithReply:]
  -[VTXPCConnection enableTriggerEventXPCNotification:]
  -[VTXPCConnection .cxx_destruct]
  -[VTXPCConnection getFirstChanceVTEventInfoWithReply:]
  -[VTXPCConnection requestAudioCapture:]
  -[VTXPCConnection _setPhraseSpotterBypassing:]
  -[VTXPCConnection notifyVoiceTriggeredSiriSessionCancelled:]
  -[VTXPCConnection notifySecondChanceRequest]
  -[VTXPCConnection notifyTriggerEventRequest]
  -[VTXPCConnection enableVoiceTrigger:withAssertion:timestamp:]
  -[VTXPCConnection getVoiceTriggerCountWithReply:]
  -[VTXPCConnection requestCurrentVoiceTriggerAssetDictionaryWithReply:]
  -[VTXPCConnection getFirstChanceTriggeredDateWithReply:]
  -[VTXPCConnection setRaiseToSpeakBypassing:timeout:timestamp:]
  -[VTXPCConnection _setRaiseToSpeakBypassing:]
  -[VTXPCConnection handleDisconnect]
  -[VTXPCConnection setCurrentBuiltInRTModelDictionary:]


VTPhraseSpotter : NSObject /usr/lib/libc++.1.dylib <VTTextDependentSpeakerRecognizerDelegate, VTAssetMonitorDelegate, VTLanguageCodeUpdateMonitorDelegate>
 @property  unsigned long samplerate
 @property  unsigned long sampleCount
 @property  unsigned long sampleCountAtStartOfTrigger
 @property  unsigned long sampleCountAtEndOfTrigger
 @property  double lastScore
 @property  double lastSupervecScore
 @property  unsigned char lastTriggerType
 @property  long long triggerCount
 @property  NSData *firstChanceAudioBuffer
 @property  NSDictionary *firstChanceVTEventInfo
 @property  NSDate *firstChanceTriggeredDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VTPhraseSpotter initialize]
  +[VTPhraseSpotter currentSpotter]

  // instance methods
  -[VTPhraseSpotter didReceiveSleepGesture]
  -[VTPhraseSpotter stopAudioCapture]
  -[VTPhraseSpotter sampleCount]
  -[VTPhraseSpotter _applyExtraTime:to:]
  -[VTPhraseSpotter textDependentSpeakerRecognizer:hasSatScore:]
  -[VTPhraseSpotter getCorealisRTModel]
  -[VTPhraseSpotter _createVTEventInfoString:]
  -[VTPhraseSpotter _commonInit]
  -[VTPhraseSpotter _storeFirstChanceAudio]
  -[VTPhraseSpotter _handleAssetChangeForLanguageCode:]
  -[VTPhraseSpotter init]
  -[VTPhraseSpotter initWithConfig:assetDir:runMode:]
  -[VTPhraseSpotter VTAssetMonitor:didReceiveNewAssetAvailable:]
  -[VTPhraseSpotter _logDESRecord:result:isActualTrigger:]
  -[VTPhraseSpotter initWithHardwareSampleRate:readyCompletion:]
  -[VTPhraseSpotter clearTriggerCount]
  -[VTPhraseSpotter _isDeviceHandheld]
  -[VTPhraseSpotter _analyzeResetWithOption:]
  -[VTPhraseSpotter dealloc]
  -[VTPhraseSpotter _logMetaData:]
  -[VTPhraseSpotter startAudioCapture]
  -[VTPhraseSpotter initWithLanguageCodeForSATEnrollment:]
  -[VTPhraseSpotter notifyAssetChangeWithCallback:]
  -[VTPhraseSpotter VTAudioRouteChangeMonitorDidChangeAudioRoute:]
  -[VTPhraseSpotter getSATDirectory]
  -[VTPhraseSpotter .cxx_destruct]
  -[VTPhraseSpotter _sampleLengthFrom:To:]
  -[VTPhraseSpotter _safeConfigureWithAnalyzer:path:data:resourcePath:]
  -[VTPhraseSpotter _setDeviceHandHeld]
  -[VTPhraseSpotter requestSecondChance]
  -[VTPhraseSpotter isFollowedBySpeech]
  -[VTPhraseSpotter _logPHSDESRecord:]
  -[VTPhraseSpotter getAudioBuffer]
  -[VTPhraseSpotter VTLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
  -[VTPhraseSpotter _analyzeMakeResult:eventKind:satScore:]
  -[VTPhraseSpotter _logPrepareProperty:]
  -[VTPhraseSpotter _phraseSpotterEnabledDidChange]
  -[VTPhraseSpotter setStartSampleHostTime:]
  -[VTPhraseSpotter _safeReconfig]
  -[VTPhraseSpotter _shouldPerformRetrainingWithAnalyzerNDAPI:resourcePath:]
  -[VTPhraseSpotter sampleCountAtStartOfTrigger]
  -[VTPhraseSpotter _computeSATScore:]
  -[VTPhraseSpotter _capturePathWithPrefix:eventKind:]
  -[VTPhraseSpotter _performReadyCompletion]
  -[VTPhraseSpotter getAdjustedDeviceStartTime:]
  -[VTPhraseSpotter lastScore]
  -[VTPhraseSpotter _resetVoiceTriggerDueToRTSTrigger]
  -[VTPhraseSpotter firstChanceVTEventInfo]
  -[VTPhraseSpotter samplerate]
  -[VTPhraseSpotter _clearDeviceHandHeld]
  -[VTPhraseSpotter _getNumberOfAudioFilesInDirectory:]
  -[VTPhraseSpotter didReceiveSiriSessionCancellation:]
  -[VTPhraseSpotter lastSupervecScore]
  -[VTPhraseSpotter _randomSubset:numSelected:]
  -[VTPhraseSpotter requestFoceTrigger]
  -[VTPhraseSpotter _getBiometricMatchResult]
  -[VTPhraseSpotter firstChanceTriggeredDate]
  -[VTPhraseSpotter _cancelSecondChance]
  -[VTPhraseSpotter _sampleFromSortedArray:numSelected:]
  -[VTPhraseSpotter _logDESRecord:result:]
  -[VTPhraseSpotter _voiceTriggerEnabledDidChange]
  -[VTPhraseSpotter _logDESTriggerRecord:result:]
  -[VTPhraseSpotter _resetCounters]
  -[VTPhraseSpotter _shouldCreateAudioBuffer]
  -[VTPhraseSpotter setBypass:]
  -[VTPhraseSpotter assetDictionary]
  -[VTPhraseSpotter initWithHardwareSampleRate:]
  -[VTPhraseSpotter firstChanceAudioBuffer]
  -[VTPhraseSpotter analyzeBufferList:]
  -[VTPhraseSpotter triggerCount]
  -[VTPhraseSpotter _desRecordFromTriggerData:sampleCount:]
  -[VTPhraseSpotter analyze:]
  -[VTPhraseSpotter looseTriggerThreshold]
  -[VTPhraseSpotter _addExtraTime:to:]
  -[VTPhraseSpotter getLanguageCode]
  -[VTPhraseSpotter _storeTrainingAudioAndMetaInfo]
  -[VTPhraseSpotter _setSecondChance]
  -[VTPhraseSpotter initWithConfig:resourcePath:]
  -[VTPhraseSpotter _firstUnlockedAndSpringBoardStarted]
  -[VTPhraseSpotter lastVoiceTriggerEventInfo]
  -[VTPhraseSpotter textDependentSpeakerRecognizer:failedWithError:]
  -[VTPhraseSpotter _analyzeEvents:]
  -[VTPhraseSpotter _logCorruptAudio]
  -[VTPhraseSpotter _createFirstChanceMeta:]
  -[VTPhraseSpotter _getSecondChanceEffective]
  -[VTPhraseSpotter lastTriggerType]
  -[VTPhraseSpotter _handleTriggerEvent:num_new_samples:satScore:]
  -[VTPhraseSpotter _configureWithDefaults]
  -[VTPhraseSpotter _configureWithConfig:resourcePath:]
  -[VTPhraseSpotter _initDetector]
  -[VTPhraseSpotter prepareWithProperty:readyCompletion:]
  -[VTPhraseSpotter _notifyAssetChangedCallback]
  -[VTPhraseSpotter sampleCountAtEndOfTrigger]
  -[VTPhraseSpotter didReceiveWakeGesture]


VTBiometricMatchMonitor : VTEventMonitor <BKDeviceDelegate>
 @property  BKDevice *biometricDevice
 @property  <VTBiometricMatchMonitorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VTBiometricMatchMonitor sharedInstance]

  // instance methods
  -[VTBiometricMatchMonitor init]
  -[VTBiometricMatchMonitor .cxx_destruct]
  -[VTBiometricMatchMonitor startObserving]
  -[VTBiometricMatchMonitor setDelegate:]
  -[VTBiometricMatchMonitor delegate]
  -[VTBiometricMatchMonitor getLastBiometricMatchEvent:atTime:]
  -[VTBiometricMatchMonitor device:matchEventOccurred:]
  -[VTBiometricMatchMonitor biometricDevice]
  -[VTBiometricMatchMonitor setBiometricDevice:]


MAAsset(VTAsset)
	// instance methods
	-[MAAsset(VTAsset) path]
	-[MAAsset(VTAsset) footprint]
	-[MAAsset(VTAsset) description]
	-[MAAsset(VTAsset) isPremium]
	-[MAAsset(VTAsset) canBePurged]
	-[MAAsset(VTAsset) compatibilityVersion]
	-[MAAsset(VTAsset) isDownloading]
	-[MAAsset(VTAsset) version]
	-[MAAsset(VTAsset) languages]
	-[MAAsset(VTAsset) isAvailableLocally]
	-[MAAsset(VTAsset) isLatestCompareTo:]
	-[MAAsset(VTAsset) isVTAssetInstalled]

(VTAddition)
	// instance methods
	-[(VTAddition) MD5HashString]

01 00 1000 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFPreferences 
01 00 1000 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFSettingsConnection 
01 00 0540 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMWakeGestureManager 
01 00 0b00 /System/Library/PrivateFrameworks/DistributedEvaluation.framework/DistributedEvaluation: DESRecordStore 
01 00 0a40 /System/Library/PrivateFrameworks/EmbeddedAcousticRecognition.framework/EmbeddedAcousticRecognition: EARPSRAudioProcessor 
01 00 0e00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSProtobuf 
01 00 0e00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0400 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAsset 
01 00 0400 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAssetQuery 
01 00 0400 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MADownloadOptions 
01 00 0300 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1400 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0a40 /System/Library/PrivateFrameworks/EmbeddedAcousticRecognition.framework/EmbeddedAcousticRecognition: _EARSpeechRecognizer 
01 00 0a40 /System/Library/PrivateFrameworks/EmbeddedAcousticRecognition.framework/EmbeddedAcousticRecognition: _EARSyncSpeechRecognizer 
