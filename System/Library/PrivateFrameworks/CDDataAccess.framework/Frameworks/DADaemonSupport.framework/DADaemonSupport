|| __DATA.__common _gDADMainRunloopStopped
|| __DATA.__objc_data _OBJC_CLASS_$_DAAgent
|| __DATA.__objc_data _OBJC_CLASS_$_DAChangeHistoryClerk
|| __DATA.__objc_data _OBJC_CLASS_$_DACoreDAVAgent
|| __DATA.__objc_data _OBJC_CLASS_$_DADREMShareResponseDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DADREMXPCPerformerDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_DAFolderSyncRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DARefreshWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_DATokenRegistrationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_REMDAAccountInfo
|| __DATA.__objc_data _OBJC_CLASS_$__DAChangeHistoryABLegacyClerk
|| __DATA.__objc_data _OBJC_CLASS_$__DAChangeHistoryContactsClerk
|| __DATA.__objc_data _OBJC_METACLASS_$_DAAgent
|| __DATA.__objc_data _OBJC_METACLASS_$_DAChangeHistoryClerk
|| __DATA.__objc_data _OBJC_METACLASS_$_DACoreDAVAgent
|| __DATA.__objc_data _OBJC_METACLASS_$_DADREMShareResponseDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DADREMXPCPerformerDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_DAFolderSyncRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DARefreshWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_DATokenRegistrationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_REMDAAccountInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__DAChangeHistoryABLegacyClerk
|| __DATA.__objc_data _OBJC_METACLASS_$__DAChangeHistoryContactsClerk
|| __DATA_DIRTY.__common ___RootDomainConnect
|| __DATA_DIRTY.__common _gDADHighAvailabilityQueue
|| __DATA_DIRTY.__common _gDADOperationQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DADAgentManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DADBuddyStateObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DADMain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DADREMLocalDBWatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DADSystemAvailabilityChecker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DADaemonPowerAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DARefreshManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DADAgentManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DADBuddyStateObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DADMain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DADREMLocalDBWatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DADSystemAvailabilityChecker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DADaemonPowerAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DARefreshManager
|| __TEXT.__text __devicePowerChanged
|| __TEXT.__text _handleSignal
__ Accounts: _ACAccountTypeIdentifierExchange
__ Accounts: _ACAccountTypeIdentifierHotmail
__ Accounts: _kAccountDataclassCalendars
__ Accounts: _kAccountDataclassContacts
__ Accounts: _kAccountDataclassContactsSearch
__ Accounts: _kAccountDataclassMail
__ Accounts: _kAccountDataclassNotes
__ Accounts: _kAccountDataclassReminders
__ AddressBookLegacy: _ABChangeHistoryCopyAllRegisteredClientIdentifiers
__ AddressBookLegacy: _ABChangeHistoryRegisterClientForSource
__ AddressBookLegacy: _ABChangeHistoryUnregisterClientForSource
__ AggregateDictionary: _ADClientPushValueForDistributionKey
__ AggregateDictionary: _ADClientSetValueForScalarKey
__ AppSupport: _CPNetworkObserverNetworkReachableNotification
__ AppSupport: _CPNetworkObserverReachable
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _OBJC_CLASS_$_CPNetworkObserver
__ ApplePushService: _APSEnvironmentDemo
__ ApplePushService: _APSEnvironmentDevelopment
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ CDDataAccess: _DAUserAgent
__ CDDataAccess: _OBJC_CLASS_$_DAAccount
__ CDDataAccess: _OBJC_CLASS_$_DAAccountLoader
__ CDDataAccess: _OBJC_CLASS_$_DAActivity
__ CDDataAccess: _OBJC_CLASS_$_DABabysitter
__ CDDataAccess: _OBJC_CLASS_$_DAPowerAssertionManager
__ CDDataAccess: _OBJC_CLASS_$_DARunLoopRegistry
__ CDDataAccess: _OBJC_CLASS_$_DATransaction
__ CDDataAccess: _OBJC_CLASS_$_DATransactionMonitor
__ CDDataAccess: _OBJC_METACLASS_$_DAPowerAssertionManager
__ CDDataAccess: _dataaccess_get_global_queue
__ CDDataAccess: _kDAAccountPersistentUUID
__ CDDataAccess: _sharedDAAccountStore
__ CDDataAccess: _statusAndErrorIndicateWeShouldTurnOnReachability
__ CDDataAccessExpress: _DACPLoggingFlush
__ CDDataAccessExpress: _DAErrorDomain
__ CDDataAccessExpress: _DALoggingwithCategory
__ CDDataAccessExpress: _OBJC_CLASS_$_DABehaviorOptions
__ CDDataAccessExpress: _OBJC_CLASS_$_DADisableableObject
__ CDDataAccessExpress: _OBJC_METACLASS_$_DADisableableObject
__ CDDataAccessExpress: __CPLog_to_os_log_type
__ CDDataAccessExpress: _shouldDALogAtLevel
__ CFNetwork: _CFURLCacheCopySharedURLCache
__ CFNetwork: _CFURLCacheRemoveAllCachedResponses
__ CFNetwork: _CFURLConnectionInvalidateConnectionCache
__ CoreDAV: _CoreDAVErrorDomain
__ CoreDAV: _OBJC_CLASS_$_CoreDAVOptionsTask
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFLocaleCurrentLocaleDidChangeNotification
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreTelephony: __CTServerConnectionCopyCellularUsagePolicy
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionRegisterForNotification
__ CoreTelephony: _kCTCellularDataUsagePolicy
__ CoreTelephony: _kCTCellularDataUsagePolicyAlwaysAllow
__ CoreTelephony: _kCTCellularDataUsagePolicyDeny
__ CoreTelephony: _kCTPerAppNetworkDataAccessPolicyChangedNotification
__ CoreTelephony: _kCTWiFiDataUsagePolicy
__ DataMigration: _DMPerformMigrationReturningAfterPlugin
__ Foundation: _NSClassFromString
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSURLAuthenticationMethodClientCertificate
__ Foundation: _NSURLAuthenticationMethodHTTPBasic
__ Foundation: _NSURLAuthenticationMethodHTTPDigest
__ Foundation: _NSURLAuthenticationMethodServerTrust
__ Foundation: _NSURLAuthenticationMethodXMobileMeAuthToken
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLCredential
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ IOKit: _IOAllowPowerChange
__ IOKit: _IODeregisterForSystemPower
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortGetRunLoopSource
__ IOKit: _IORegisterForSystemPower
__ IOKit: _IOServiceClose
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientSetType
__ PersistentConnection: _PCSettingsGetClassPollInterval
__ PersistentConnection: _PCSettingsGetPollInterval
__ PersistentConnection: _PCSettingsGetStyle
__ ReminderKit: _OBJC_CLASS_$_REMDatabaseMigrationContext
__ ReminderKit: _REMDA_kCalDAVMobileAccountDelegatePrincipalPath
__ SetupAssistant: _BYSetupAssistantFinishedDarwinNotification
__ SetupAssistant: _BYSetupAssistantNeedsToRun
__ Symbolication: _OBJC_CLASS_$_VMUVMRegionIdentifier
__ Symbolication: _OBJC_IVAR_$_VMUVMRegion.pages_dirtied
__ Symbolication: _OBJC_IVAR_$_VMUVMRegion.pages_resident
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ UserManagement: _OBJC_CLASS_$_UMUserSwitchBlockingTask
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_15_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_30_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _setenv
__ libSystem.B.dylib: _signal
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _sysconf
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_equal
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_getName
DADBuddyStateObserver : NSObject /usr/lib/libSystem.B.dylib
 @property  @? buddyDidFinishHandler

  // class methods
  +[DADBuddyStateObserver isSetupUser]
  +[DADBuddyStateObserver hasPassedBuddy]

  // instance methods
  -[DADBuddyStateObserver dealloc]
  -[DADBuddyStateObserver .cxx_destruct]
  -[DADBuddyStateObserver initWithQueue:]
  -[DADBuddyStateObserver stop]
  -[DADBuddyStateObserver isRunning]
  -[DADBuddyStateObserver start]
  -[DADBuddyStateObserver stopWithAssertQueue:]
  -[DADBuddyStateObserver buddyDidFinish]
  -[DADBuddyStateObserver createPeriodicPollingTimer]
  -[DADBuddyStateObserver checkBuddyStatus]
  -[DADBuddyStateObserver buddyDidFinishHandler]
  -[DADBuddyStateObserver setBuddyDidFinishHandler:]


DADREMLocalDBWatcher : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DADREMLocalDBWatcher sharedDBWatcher]

  // instance methods
  -[DADREMLocalDBWatcher init]
  -[DADREMLocalDBWatcher remindersDatabaseDidChange]
  -[DADREMLocalDBWatcher removeConcernedRemindersParty:]
  -[DADREMLocalDBWatcher registerConcernedRemindersParty:withChangedBlock:]
  -[DADREMLocalDBWatcher .cxx_destruct]


DAAgent : NSObject /usr/lib/libSystem.B.dylib
 @property  DAAccount *account
 @property  double lastRetryTimeout
 @property  BOOL syncWhenReachable
 @property  @? networkReachableBlock
 @property  BOOL isWaitingForPassword
 @property  BOOL isMonitoring
 @property  DATrustHandler *trustHandler

  // class methods
  +[DAAgent launchingAgentWithAccount:]

  // instance methods
  -[DAAgent stateString]
  -[DAAgent isMonitoring]
  -[DAAgent startMonitoring]
  -[DAAgent shutdown]
  -[DAAgent setAccount:]
  -[DAAgent account]
  -[DAAgent trustHandler]
  -[DAAgent .cxx_destruct]
  -[DAAgent saveXpcActivity:]
  -[DAAgent _reachabilityChanged:]
  -[DAAgent initWithAccount:]
  -[DAAgent stopObservingReachability]
  -[DAAgent syncWhenReachable]
  -[DAAgent networkReachableBlock]
  -[DAAgent setSyncWhenReachable:]
  -[DAAgent setNetworkReachableBlock:]
  -[DAAgent setIsMonitoring:]
  -[DAAgent observeReachabilityWithBlock:]
  -[DAAgent monitorFoldersWithSyncKeyMap:]
  -[DAAgent resumeMonitoringFoldersWithSyncKeyMap:]
  -[DAAgent requestAgentStopMonitoringWithCompletionBlock:]
  -[DAAgent refreshFolderListRequireChangedFolders:isUserRequested:]
  -[DAAgent syncFolderIDs:forDataclasses:isUserRequested:]
  -[DAAgent processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:callback:]
  -[DAAgent getDAAccount]
  -[DAAgent lastRetryTimeout]
  -[DAAgent setLastRetryTimeout:]
  -[DAAgent isWaitingForPassword]
  -[DAAgent setIsWaitingForPassword:]


DADaemonPowerAssertionManager : DAPowerAssertionManager /System/Library/Frameworks/Foundation.framework/Foundation
  // class methods
  +[DADaemonPowerAssertionManager _getWiFiClientRef]

  // instance methods
  -[DADaemonPowerAssertionManager _retainAssertionForContext:]
  -[DADaemonPowerAssertionManager _releaseAssertionForContext:]


_DAChangeHistoryABLegacyClerk : DAChangeHistoryClerk
 @property  ^v addressBook

  // instance methods
  -[_DAChangeHistoryABLegacyClerk dealloc]
  -[_DAChangeHistoryABLegacyClerk initWithAddressBook:]
  -[_DAChangeHistoryABLegacyClerk addressBook]
  -[_DAChangeHistoryABLegacyClerk unregisterClientWithIdentifier:forContainer:]
  -[_DAChangeHistoryABLegacyClerk registerClientWithIdentifier:forContainer:]
  -[_DAChangeHistoryABLegacyClerk identifiersOfAllRegisterdClients]


DADAgentManager : NSObject /usr/lib/libSystem.B.dylib
 @property  DADREMLocalDBWatcher *rem_localDBWatcher
 @property  @? rem_xpcEventHandler
 @property  <DADREMUserNotificationPresentingProvider> *rem_userNotificationPresentingProvider
 @property  <DADREMStoreProvider> *rem_storeProvider
 @property  NSMutableArray *subCalHandlers
 @property  unsigned long nextDisableMonitoringAgentsToken
 @property  NSMutableDictionary *disableMonitoringAgentsTokens
 @property  NSArray *activeAgents

  // class methods
  +[DADAgentManager sharedManager]
  +[DADAgentManager wirelessPolicy:isMorePermissiveThanPolicy:]

  // instance methods
  -[DADAgentManager stateString]
  -[DADAgentManager addPendingAccountSetup]
  -[DADAgentManager disableMonitoringAgentsTokens]
  -[DADAgentManager setRem_xpcEventHandler:]
  -[DADAgentManager init]
  -[DADAgentManager rem_userNotificationPresentingProvider]
  -[DADAgentManager subCalHandlers]
  -[DADAgentManager dealloc]
  -[DADAgentManager updateContentsOfAllFoldersForAccountID:andDataclasses:isUserRequested:]
  -[DADAgentManager rem_xpcEventHandler]
  -[DADAgentManager enableActiveSync]
  -[DADAgentManager _accountInfoPath]
  -[DADAgentManager setRem_localDBWatcher:]
  -[DADAgentManager .cxx_destruct]
  -[DADAgentManager _configFileForAgent:]
  -[DADAgentManager _systemMayNowBeReady]
  -[DADAgentManager registerForBuddy]
  -[DADAgentManager accountWithAccountID:]
  -[DADAgentManager removePendingAccountSetup]
  -[DADAgentManager setSubCalHandlers:]
  -[DADAgentManager resumeMonitoringAccountID:syncKeyMap:]
  -[DADAgentManager hasActiveAccounts]
  -[DADAgentManager updateContentsOfAllFoldersForAccountIDs:]
  -[DADAgentManager _resetMonitoringRequestsAndLoadAgents]
  -[DADAgentManager loadAgents:]
  -[DADAgentManager setRem_userNotificationPresentingProvider:]
  -[DADAgentManager setNextDisableMonitoringAgentsToken:]
  -[DADAgentManager unregisterForBuddy]
  -[DADAgentManager updateContentsOfFolders:forAccountID:andDataclasses:isUserRequested:]
  -[DADAgentManager activeAgents]
  -[DADAgentManager _registerForCTDataUsageNotificaiton]
  -[DADAgentManager requestPolicyUpdateForAccount:]
  -[DADAgentManager startMonitoringAccountID:syncKeyMap:]
  -[DADAgentManager suspendMonitoringAccountID:folderIDs:]
  -[DADAgentManager disableMonitoringAgents]
  -[DADAgentManager _deviceWillSleep]
  -[DADAgentManager _loadAndStartMonitoringAgents:]
  -[DADAgentManager rem_storeProvider]
  -[DADAgentManager _hasDataclassWeCareAbout:]
  -[DADAgentManager rem_localDBWatcher]
  -[DADAgentManager _deviceDidWake]
  -[DADAgentManager disableActiveSync]
  -[DADAgentManager processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:callback:]
  -[DADAgentManager _addAccountAggdEntries]
  -[DADAgentManager stopMonitoringAccountID:folderIDs:]
  -[DADAgentManager saveAndReleaseAgents]
  -[DADAgentManager nextDisableMonitoringAgentsToken]
  -[DADAgentManager enableMonitoringAgentsWithToken:]
  -[DADAgentManager _handleCellularDataUsageChangedNotification]
  -[DADAgentManager hasEASAccountConfigured]
  -[DADAgentManager getStatusReportDictsWithCompletionBlock:]
  -[DADAgentManager _stopMonitoringAndSaveAgents]
  -[DADAgentManager setRem_storeProvider:]
  -[DADAgentManager currentPolicyKeyForAccount:]
  -[DADAgentManager hasPendingAccountSetup]
  -[DADAgentManager activeAccountBundleIDs]
  -[DADAgentManager updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:]
  -[DADAgentManager agentWithAccountID:]
  -[DADAgentManager _clearOrphanedStores]
  -[DADAgentManager accountWithAccountID:andClassName:]


DADMain : DADisableableObject /System/Library/PrivateFrameworks/CDDataAccess.framework/CDDataAccess <UMUserSwitchStakeholder, DATransactionMonitorDelegate>
 @property  NSArray *userSwitchTasks
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DADMain sharedMain]

  // instance methods
  -[DADMain disable]
  -[DADMain willSwitchUser]
  -[DADMain init]
  -[DADMain dealloc]
  -[DADMain addSignalHandler]
  -[DADMain .cxx_destruct]
  -[DADMain didFinishAllXPCTransactions]
  -[DADMain addToOperationsQueueDisabledCheckAndGoBlock:wrappedBlock:]
  -[DADMain shutdownDAD]
  -[DADMain userSwitchTasks]
  -[DADMain _setRunLoopStopped:]
  -[DADMain _shutdownDaemon]
  -[DADMain _forceShutdownTimerFired:]
  -[DADMain setUserSwitchTasks:]
  -[DADMain _forceShutdownDaemonOnLogoutInTimeInterval:]
  -[DADMain addLanguageChangeHandler]
  -[DADMain waitForSystemAvailabilityWithCompletionBlock:completionQueue:]
  -[DADMain _configureAggdLogging]


DAFolderSyncRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  DAFolder *folder
 @property  BOOL hasRemoteChanges
 @property  BOOL isInitialUberSync
 @property  NSArray *actions
 @property  BOOL isResyncAfterConnectionFailed
 @property  BOOL isResyncAfterServerError
 @property  BOOL containsPostponedActions

  // instance methods
  -[DAFolderSyncRequest actions]
  -[DAFolderSyncRequest setActions:]
  -[DAFolderSyncRequest .cxx_destruct]
  -[DAFolderSyncRequest folder]
  -[DAFolderSyncRequest hasRemoteChanges]
  -[DAFolderSyncRequest setHasRemoteChanges:]
  -[DAFolderSyncRequest setFolder:]
  -[DAFolderSyncRequest setIsInitialUberSync:]
  -[DAFolderSyncRequest setIsResyncAfterConnectionFailed:]
  -[DAFolderSyncRequest setIsResyncAfterServerError:]
  -[DAFolderSyncRequest isInitialUberSync]
  -[DAFolderSyncRequest isResyncAfterConnectionFailed]
  -[DAFolderSyncRequest initWithFolder:hasRemoteChanges:isInitialUberSync:]
  -[DAFolderSyncRequest isResyncAfterServerError]
  -[DAFolderSyncRequest containsPostponedActions]
  -[DAFolderSyncRequest setContainsPostponedActions:]


DADREMXPCPerformerDelegate : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *accountID
 @property  BOOL finished
 @property  NSString *delegateID
 @property  @? remXPCCompletion

  // instance methods
  -[DADREMXPCPerformerDelegate finishWithError:]
  -[DADREMXPCPerformerDelegate finished]
  -[DADREMXPCPerformerDelegate setFinished:]
  -[DADREMXPCPerformerDelegate setAccountID:]
  -[DADREMXPCPerformerDelegate .cxx_destruct]
  -[DADREMXPCPerformerDelegate initWithAccountID:]
  -[DADREMXPCPerformerDelegate accountID]
  -[DADREMXPCPerformerDelegate delegateID]
  -[DADREMXPCPerformerDelegate setDelegateID:]
  -[DADREMXPCPerformerDelegate remXPCCompletion]
  -[DADREMXPCPerformerDelegate setRemXPCCompletion:]


DADREMShareResponseDelegate : DADREMXPCPerformerDelegate <DAEventsCalendarSharingResponseConsumer>
 @property  NSString *calendarID
 @property  NSString *shareID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DADREMShareResponseDelegate finishWithError:]
  -[DADREMShareResponseDelegate shareID]
  -[DADREMShareResponseDelegate setShareID:]
  -[DADREMShareResponseDelegate .cxx_destruct]
  -[DADREMShareResponseDelegate shareResponseFinishedWithError:]
  -[DADREMShareResponseDelegate calendarID]
  -[DADREMShareResponseDelegate setCalendarID:]
  -[DADREMShareResponseDelegate _doResponseWithBlock:]
  -[DADREMShareResponseDelegate initWithAccountID:calendarID:]
  -[DADREMShareResponseDelegate respondToShareRequestWithResponse:]
  -[DADREMShareResponseDelegate reportAsJunk]


DADSystemAvailabilityChecker : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DADSystemAvailabilityChecker waitForSyncEngineSystemAvailabilityBlockingQueue:completionQueue:completionBlock:]


_DAChangeHistoryContactsClerk : DAChangeHistoryClerk
 @property  CNContactStore *contactStore

  // class methods
  +[_DAChangeHistoryContactsClerk os_log]

  // instance methods
  -[_DAChangeHistoryContactsClerk initWithContactStore:]
  -[_DAChangeHistoryContactsClerk contactStore]
  -[_DAChangeHistoryContactsClerk .cxx_destruct]
  -[_DAChangeHistoryContactsClerk unregisterClientWithIdentifier:forContainer:]
  -[_DAChangeHistoryContactsClerk registerClientWithIdentifier:forContainer:]
  -[_DAChangeHistoryContactsClerk identifiersOfAllRegisterdClients]


DARefreshManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *enabledTopicWrappersByEnv
 @property  NSMutableDictionary *suspendedTopicWrappersByEnv
 @property  NSMutableSet *wrappers
 @property  NSMutableSet *wrappersForDailyRefresh
 @property  BOOL dailyRefreshInitialized
 @property  NSMutableDictionary *apsConnections
 @property  NSTimer *tokenRegistrationTimer
 @property  NSObject<OS_dispatch_queue> *pcQueue
 @property  BOOL persistAPSAfterShutdown

  // class methods
  +[DARefreshManager sharedManager]

  // instance methods
  -[DARefreshManager connection:didReceiveMessageForTopic:userInfo:]
  -[DARefreshManager stateString]
  -[DARefreshManager unregisterDelegate:]
  -[DARefreshManager connection:didReceivePublicToken:]
  -[DARefreshManager _unregisterWrapper:forTopic:inTopicDictionary:]
  -[DARefreshManager _registerAPSTopicsForDelegates:withConnection:]
  -[DARefreshManager init]
  -[DARefreshManager tokenRegistrationTimer]
  -[DARefreshManager dealloc]
  -[DARefreshManager enabledTopicWrappersByEnv]
  -[DARefreshManager .cxx_destruct]
  -[DARefreshManager retryRefreshForDelegate:withCollections:after:originalRefreshReason:]
  -[DARefreshManager _performBlockOnRefreshManagerThread:]
  -[DARefreshManager suspendedTopicWrappersByEnv]
  -[DARefreshManager _portNameForEnvironmentName:]
  -[DARefreshManager startDailyRefreshActivityForWrapper:]
  -[DARefreshManager setTokenRegistrationTimer:]
  -[DARefreshManager pushTokenForEnvironment:]
  -[DARefreshManager unregisterTopic:forDelegate:inEnvironment:]
  -[DARefreshManager _suspendTopicsForDelegate:]
  -[DARefreshManager endDailyRefreshActivityForWrapper:]
  -[DARefreshManager setApsConnections:]
  -[DARefreshManager setDailyRefreshInitialized:]
  -[DARefreshManager registerTopic:forDelegate:inEnvironment:]
  -[DARefreshManager setPersistAPSAfterShutdown:]
  -[DARefreshManager wrappersForDailyRefresh]
  -[DARefreshManager wrappers]
  -[DARefreshManager setSuspendedTopicWrappersByEnv:]
  -[DARefreshManager _pushRegistrationForDelegateFailed:]
  -[DARefreshManager _unregisterTopicLocked:forDelegate:inEnvironment:]
  -[DARefreshManager setPcQueue:]
  -[DARefreshManager dailyRefreshInitialized]
  -[DARefreshManager _overriddenPCStyleForWrapper:]
  -[DARefreshManager _currentTruePCStyleForDelegate:]
  -[DARefreshManager _enabledTopicsForWrapper:]
  -[DARefreshManager _wrapperIsSuspended:]
  -[DARefreshManager setWrappers:]
  -[DARefreshManager setWrappersForDailyRefresh:]
  -[DARefreshManager registerDelegate:]
  -[DARefreshManager _suspendedTopicsForWrapper:]
  -[DARefreshManager pushPreferenceDidChange]
  -[DARefreshManager _tearDownAllAPSConnectionsUnregisteringTopics:]
  -[DARefreshManager persistAPSAfterShutdown]
  -[DARefreshManager _registerAPSTopics]
  -[DARefreshManager establishAllApsConnections]
  -[DARefreshManager delegateDidCompleteRefresh:]
  -[DARefreshManager _apsEnvStringForDAEnvString:]
  -[DARefreshManager _dailyRefreshActivityFired]
  -[DARefreshManager apsConnections]
  -[DARefreshManager _resumeTopicsForSuspendedDelegate:]
  -[DARefreshManager setEnabledTopicWrappersByEnv:]
  -[DARefreshManager pcQueue]
  -[DARefreshManager _connectionForEnv:]
  -[DARefreshManager _refreshWrapperForDelegate:]


DATokenRegistrationRequest : NSObject /usr/lib/libSystem.B.dylib <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate>
 @property  DARefreshWrapper *wrapper
 @property  NSString *onBehalfOfBundleIdentifier
 @property  NSData *token
 @property  NSString *pushKey
 @property  AKAppleIDSession *hsa2Session
 @property  BOOL finished
 @property  <DATokenRegistrationDelegate> *delegate
 @property  NSMutableURLRequest *request
 @property  NSURLSession *session
 @property  NSURLSessionDataTask *task
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DATokenRegistrationRequest requestWithToken:pushKey:wrapper:onBehalfOf:]

  // instance methods
  -[DATokenRegistrationRequest finished]
  -[DATokenRegistrationRequest setFinished:]
  -[DATokenRegistrationRequest URLSession:dataTask:didReceiveData:]
  -[DATokenRegistrationRequest setSession:]
  -[DATokenRegistrationRequest URLSession:didReceiveChallenge:completionHandler:]
  -[DATokenRegistrationRequest session]
  -[DATokenRegistrationRequest URLSession:didBecomeInvalidWithError:]
  -[DATokenRegistrationRequest onBehalfOfBundleIdentifier]
  -[DATokenRegistrationRequest setRequest:]
  -[DATokenRegistrationRequest pushKey]
  -[DATokenRegistrationRequest .cxx_destruct]
  -[DATokenRegistrationRequest URLSession:task:didReceiveChallenge:completionHandler:]
  -[DATokenRegistrationRequest setPushKey:]
  -[DATokenRegistrationRequest URLSession:task:didCompleteWithError:]
  -[DATokenRegistrationRequest URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[DATokenRegistrationRequest token]
  -[DATokenRegistrationRequest cancel]
  -[DATokenRegistrationRequest wrapper]
  -[DATokenRegistrationRequest setToken:]
  -[DATokenRegistrationRequest setTask:]
  -[DATokenRegistrationRequest task]
  -[DATokenRegistrationRequest setDelegate:]
  -[DATokenRegistrationRequest request]
  -[DATokenRegistrationRequest delegate]
  -[DATokenRegistrationRequest _handleAuthenticationChallenge:completionHandler:]
  -[DATokenRegistrationRequest _canAuthenticateAgainstProtectionSpace:]
  -[DATokenRegistrationRequest setWrapper:]
  -[DATokenRegistrationRequest setOnBehalfOfBundleIdentifier:]
  -[DATokenRegistrationRequest initWithToken:pushKey:wrapper:onBehalfOf:]
  -[DATokenRegistrationRequest _reallyHandleAuthenticationChallenge:completionHandler:]
  -[DATokenRegistrationRequest sendRegistrationRequestForAccount:]
  -[DATokenRegistrationRequest hsa2Session]
  -[DATokenRegistrationRequest setHsa2Session:]


REMDAAccountInfo : NSObject /usr/lib/libSystem.B.dylib <REMDAAccountProviding>
 @property  NSString *accountID
 @property  REMObjectID *rem_accountObjectID
 @property  NSString *accountDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[REMDAAccountInfo setAccountID:]
  -[REMDAAccountInfo .cxx_destruct]
  -[REMDAAccountInfo setAccountDescription:]
  -[REMDAAccountInfo accountDescription]
  -[REMDAAccountInfo accountID]
  -[REMDAAccountInfo loggingDescription]
  -[REMDAAccountInfo rem_accountObjectID]
  -[REMDAAccountInfo initWithAccountID:remAccountObjectID:accountDescription:]
  -[REMDAAccountInfo setRem_accountObjectID:]


DARefreshWrapper : NSObject /usr/lib/libSystem.B.dylib <DATokenRegistrationDelegate>
 @property  NSMutableSet *tokenRegistrations
 @property  int refreshReason
 @property  NSMutableSet *refreshCollections
 @property  long long fetchInterval
 @property  <DARefreshManagerDelegate> *delegate
 @property  int pushState
 @property  NSDate *pushRegistrationTime
 @property  int curStyle

  // instance methods
  -[DARefreshWrapper init]
  -[DARefreshWrapper refreshCollections]
  -[DARefreshWrapper .cxx_destruct]
  -[DARefreshWrapper refreshReason]
  -[DARefreshWrapper setRefreshReason:]
  -[DARefreshWrapper _stringForStyle:]
  -[DARefreshWrapper pushState]
  -[DARefreshWrapper setDelegate:]
  -[DARefreshWrapper delegate]
  -[DARefreshWrapper pushRegistrationTime]
  -[DARefreshWrapper performTokenRegistrationRequestsWithToken:onBehalfOf:]
  -[DARefreshWrapper setPushState:]
  -[DARefreshWrapper startFetchActivityForPush]
  -[DARefreshWrapper setPushRegistrationTime:]
  -[DARefreshWrapper startFetchActivityForSystemPCStyle]
  -[DARefreshWrapper curStyle]
  -[DARefreshWrapper isSetToSystemFetchInterval]
  -[DARefreshWrapper setCurStyle:]
  -[DARefreshWrapper refreshCollections:withReason:]
  -[DARefreshWrapper stopCollectionsRefresh]
  -[DARefreshWrapper dailyRefreshActivityFired]
  -[DARefreshWrapper retryCollections:after:reason:]
  -[DARefreshWrapper tokenRegistrationRequest:finishedWithError:]
  -[DARefreshWrapper cancelFetchActivity]
  -[DARefreshWrapper setTokenRegistrations:]
  -[DARefreshWrapper retryActivityIdentifier]
  -[DARefreshWrapper cancelRetryActivity]
  -[DARefreshWrapper cancelDailyRefreshActivity]
  -[DARefreshWrapper cancelAllTokenRegistrations]
  -[DARefreshWrapper fetchActivityIdentifier]
  -[DARefreshWrapper fetchInterval]
  -[DARefreshWrapper _fetchActivityCriteriaWithInterval:]
  -[DARefreshWrapper _fetchActivityCriteriaInOnPowerMode]
  -[DARefreshWrapper XPCActivityIntervalFromSystemSetting]
  -[DARefreshWrapper setFetchInterval:]
  -[DARefreshWrapper startFetchActivityWithInterval:]
  -[DARefreshWrapper tokenRegistrations]
  -[DARefreshWrapper startDailyRefreshActivity]
  -[DARefreshWrapper setRefreshCollections:]
  -[DARefreshWrapper _retryActivityFired]


DACoreDAVAgent : DAAgent <DABabysittable>
 @property  CoreDAVOptionsTask *optionsProbe
 @property  NSTimer *optionsTimeoutTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DACoreDAVAgent dealloc]
  -[DACoreDAVAgent .cxx_destruct]
  -[DACoreDAVAgent initWithAccount:]
  -[DACoreDAVAgent waiterID]
  -[DACoreDAVAgent optionsTimeoutTimer]
  -[DACoreDAVAgent setOptionsTimeoutTimer:]
  -[DACoreDAVAgent _cancelOptionsTimer]
  -[DACoreDAVAgent optionsProbe]
  -[DACoreDAVAgent setOptionsProbe:]
  -[DACoreDAVAgent _serverProbeTimedOut]
  -[DACoreDAVAgent _probeAndSyncWithBlock:]


DAChangeHistoryClerk : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DAChangeHistoryClerk clerkWithContactStore:]
  +[DAChangeHistoryClerk clerkWithAddressBook:]

  // instance methods
  -[DAChangeHistoryClerk unregisterClientWithIdentifier:forContainer:]
  -[DAChangeHistoryClerk registerClientWithIdentifier:forContainer:]
  -[DAChangeHistoryClerk identifiersOfAllRegisterdClients]


DAAccount(DaemonAdditions)
	// instance methods
	-[DAAccount(DaemonAdditions) agentClass]
	-[DAAccount(DaemonAdditions) rem_account]
	-[DAAccount(DaemonAdditions) rem_saveRequest]
	-[DAAccount(DaemonAdditions) rem_store]
	-[DAAccount(DaemonAdditions) rem_provideAccountInfo]
	-[DAAccount(DaemonAdditions) deviceWillSleep]
	-[DAAccount(DaemonAdditions) deviceDidWake]

01 00 1200 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 0c00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPNetworkObserver 
01 00 1300 /System/Library/PrivateFrameworks/CoreDAV.framework/CoreDAV: CoreDAVOptionsTask 
01 00 0f00 /System/Library/PrivateFrameworks/CDDataAccess.framework/CDDataAccess: DAAccount 
01 00 0f00 /System/Library/PrivateFrameworks/CDDataAccess.framework/CDDataAccess: DAAccountLoader 
01 00 0f00 /System/Library/PrivateFrameworks/CDDataAccess.framework/CDDataAccess: DAActivity 
01 00 0f00 /System/Library/PrivateFrameworks/CDDataAccess.framework/CDDataAccess: DABabysitter 
01 00 0e00 /System/Library/PrivateFrameworks/CDDataAccessExpress.framework/CDDataAccessExpress: DABehaviorOptions 
01 00 0e00 /System/Library/PrivateFrameworks/CDDataAccessExpress.framework/CDDataAccessExpress: DADisableableObject 
01 00 0f00 /System/Library/PrivateFrameworks/CDDataAccess.framework/CDDataAccess: DAPowerAssertionManager 
01 00 0f00 /System/Library/PrivateFrameworks/CDDataAccess.framework/CDDataAccess: DARunLoopRegistry 
01 00 0f00 /System/Library/PrivateFrameworks/CDDataAccess.framework/CDDataAccess: DATransaction 
01 00 0f00 /System/Library/PrivateFrameworks/CDDataAccess.framework/CDDataAccess: DATransactionMonitor 
01 00 0600 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCredential 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0700 /System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit: REMDatabaseMigrationContext 
01 00 0200 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 0200 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserSwitchBlockingTask 
01 00 0800 /System/Library/PrivateFrameworks/Symbolication.framework/Symbolication: VMUVMRegionIdentifier 
