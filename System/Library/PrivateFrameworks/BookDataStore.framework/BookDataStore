|| __DATA.__objc_data _OBJC_CLASS_$_BCAnnotationRange
|| __DATA.__objc_data _OBJC_CLASS_$_BCAnnotationsProtoBook
|| __DATA.__objc_data _OBJC_CLASS_$_BCCloudDataNullPrivacyDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_BCCollectionDetail
|| __DATA.__objc_data _OBJC_CLASS_$_BCProtoAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_BCSecureUserDatum
|| __DATA.__objc_data _OBJC_CLASS_$_BDSAppVersion
|| __DATA.__objc_data _OBJC_CLASS_$_BDSMediaLibraryUtils
|| __DATA.__objc_data _OBJC_CLASS_$_BDSNBPinningManager
|| __DATA.__objc_data _OBJC_CLASS_$_BDSServiceCenter
|| __DATA.__objc_data _OBJC_CLASS_$_BDSUserPreferencesSync
|| __DATA.__objc_data _OBJC_CLASS_$_BookDataStoreBundleLookupClass
|| __DATA.__objc_data _OBJC_METACLASS_$_BCAnnotationRange
|| __DATA.__objc_data _OBJC_METACLASS_$_BCAnnotationsProtoBook
|| __DATA.__objc_data _OBJC_METACLASS_$_BCCloudDataNullPrivacyDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_BCCloudKitDataChangedTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_BCCollectionDetail
|| __DATA.__objc_data _OBJC_METACLASS_$_BCProtoAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSecureUserDatum
|| __DATA.__objc_data _OBJC_METACLASS_$_BDSAppVersion
|| __DATA.__objc_data _OBJC_METACLASS_$_BDSMediaLibraryUtils
|| __DATA.__objc_data _OBJC_METACLASS_$_BDSServiceCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_BDSUserPreferencesSync
|| __DATA.__objc_data _OBJC_METACLASS_$_BookDataStoreBundleLookupClass
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCAnnotationRange._length
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCAnnotationRange._location
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCAnnotationsProtoBook._annotations
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCAnnotationsProtoBook._appVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCAnnotationsProtoBook._assetID
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCAnnotationsProtoBook._assetVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._annotationVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._assetVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._attachments
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._chapterTitle
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._creationDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._creatorIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._deleted
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._futureProofing11
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._futureProofing12
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._isUnderline
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._locationCFIString
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._locationModificationDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._modificationDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._note
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._physicalPageNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._plAbsolutePhysicalLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._plLocationRangeEnd
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._plLocationRangeStart
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._plLocationStorageUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._plUserData
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._readingProgress
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._readingProgressHighWaterMark
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._representativeText
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._selectedText
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._selectedTextRange
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._spineIndexUpdated
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._style
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._userModificationDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_BCProtoAnnotation._uuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_BDSReachability.localWiFiRef
|| __DATA.__objc_ivar _OBJC_IVAR_$_BDSReachability.reachabilityRef
|| __DATA_CONST.__const _BCCloudAssetAnnotationManagerChanged
|| __DATA_CONST.__const _BCCloudAssetDetailManagerChanged
|| __DATA_CONST.__const _BCCloudAssetReviewManagerChanged
|| __DATA_CONST.__const _BCCloudCollectionDetailManagerChanged
|| __DATA_CONST.__const _BCCloudCollectionMemberManagerChanged
|| __DATA_CONST.__const _BCCloudReadingNowDetailManagerChanged
|| __DATA_CONST.__const _BCCloudSecureUserDataManagerChanged
|| __DATA_CONST.__const _BCCloudSecureUserDataManagerFetchedRecordsChanged
|| __DATA_CONST.__const _BCCloudStoreAssetManagerChanged
|| __DATA_CONST.__const _BCCollectionDefaultIDWantToRead
|| __DATA_CONST.__const _BDSArrayAdditionsError
|| __DATA_CONST.__const _BDSCloudGlobalMetadataManagerChanged
|| __DATA_CONST.__const _BDSCloudGlobalMetadataManagerFetchedRecordsChanged
|| __DATA_CONST.__const _BDSErrorDomain
|| __DATA_CONST.__const _BDSReachabilityErrorDomain
|| __DATA_CONST.__const _BDSSyncedPreferencePrefix
|| __DATA_CONST.__const _BDSUserPreferenceAudiobookSkipBackward
|| __DATA_CONST.__const _BDSUserPreferenceAudiobookSkipForward
|| __DATA_CONST.__const _BDSUserPreferenceOverrideRecentBookAlgorithm
|| __DATA_CONST.__const _BDSUserPreferenceSyncEnabledForReadingNow
|| __DATA_CONST.__const _BDSUserPreferenceTimeThresholdPromotionOverride
|| __DATA_CONST.__const _NSManagedObjectContextIMAdditionsSafeAccessState
|| __DATA_CONST.__const _kBCAssetAnnotationsRecord
|| __DATA_CONST.__const _kBCCloudKitAssetDetailBookmarkTime
|| __DATA_CONST.__const _kBCCloudKitAssetDetailDateFinished
|| __DATA_CONST.__const _kBCCloudKitAssetDetailDatePlaybackTimeUpdated
|| __DATA_CONST.__const _kBCCloudKitAssetDetailIsFinished
|| __DATA_CONST.__const _kBCCloudKitAssetDetailLastOpenDate
|| __DATA_CONST.__const _kBCCloudKitAssetDetailNotFinished
|| __DATA_CONST.__const _kBCCloudKitAssetDetailReadingPosition
|| __DATA_CONST.__const _kBCCloudKitAssetDetailReadingPositionAbsolutePhysicalLocation
|| __DATA_CONST.__const _kBCCloudKitAssetDetailReadingPositionAnnotationVersion
|| __DATA_CONST.__const _kBCCloudKitAssetDetailReadingPositionAssetVersion
|| __DATA_CONST.__const _kBCCloudKitAssetDetailReadingPositionLocationRangeEnd
|| __DATA_CONST.__const _kBCCloudKitAssetDetailReadingPositionLocationRangeStart
|| __DATA_CONST.__const _kBCCloudKitAssetDetailReadingPositionLocationUpdateDate
|| __DATA_CONST.__const _kBCCloudKitAssetDetailReadingPositionStorageUUID
|| __DATA_CONST.__const _kBCCloudKitAssetDetailReadingPositionUserData
|| __DATA_CONST.__const _kBCCloudKitAssetDetailReadingProgress
|| __DATA_CONST.__const _kBCCloudKitAssetDetailReadingProgressHighWaterMark
|| __DATA_CONST.__const _kBCCloudKitAssetDetailRecordType
|| __DATA_CONST.__const _kBCCloudKitAssetDetailTaste
|| __DATA_CONST.__const _kBCCloudKitAssetDetailTasteSyncedToStore
|| __DATA_CONST.__const _kBCCloudKitAssetReviewRecordType
|| __DATA_CONST.__const _kBCCloudKitAssetReviewReviewBody
|| __DATA_CONST.__const _kBCCloudKitAssetReviewReviewTitle
|| __DATA_CONST.__const _kBCCloudKitAssetReviewStarRating
|| __DATA_CONST.__const _kBCCloudKitCollectionDetailCollectionDescription
|| __DATA_CONST.__const _kBCCloudKitCollectionDetailHidden
|| __DATA_CONST.__const _kBCCloudKitCollectionDetailName
|| __DATA_CONST.__const _kBCCloudKitCollectionDetailRecordType
|| __DATA_CONST.__const _kBCCloudKitCollectionDetailSortMode
|| __DATA_CONST.__const _kBCCloudKitCollectionDetailSortOrder
|| __DATA_CONST.__const _kBCCloudKitCollectionMemberRecordType
|| __DATA_CONST.__const _kBCCloudKitCollectionMemberSortOrder
|| __DATA_CONST.__const _kBCCloudKitDeletedFlag
|| __DATA_CONST.__const _kBCCloudKitEditGeneration
|| __DATA_CONST.__const _kBCCloudKitGlobalMetadataRecordType
|| __DATA_CONST.__const _kBCCloudKitGlobalMetadataValue
|| __DATA_CONST.__const _kBCCloudKitLocalRecordID
|| __DATA_CONST.__const _kBCCloudKitLocalRecordIDEncrypted
|| __DATA_CONST.__const _kBCCloudKitModificationDate
|| __DATA_CONST.__const _kBCCloudKitReadingNowDetailIsTrackedAsRecent
|| __DATA_CONST.__const _kBCCloudKitReadingNowDetailLastEngagedDate
|| __DATA_CONST.__const _kBCCloudKitReadingNowDetailRecordType
|| __DATA_CONST.__const _kBCCloudKitSecureUserDataKey
|| __DATA_CONST.__const _kBCCloudKitSecureUserDataRecordType
|| __DATA_CONST.__const _kBCCloudKitSecureUserDataValue
|| __DATA_CONST.__const _kBCCloudKitStoreItemRecordType
|| __DATA_CONST.__const _kBCCloudKitSyncGeneration
|| __DATA_CONST.__const _kBCCloudKitSyncVersionsCloudVersion
|| __DATA_CONST.__const _kBCCloudKitSyncVersionsDataType
|| __DATA_CONST.__const _kBCCloudKitSyncVersionsHistoryToken
|| __DATA_CONST.__const _kBCCloudKitSyncVersionsHistoryTokenOffset
|| __DATA_CONST.__const _kBCCloudKitSyncVersionsLocalVersion
|| __DATA_CONST.__const _kBCCloudKitSyncVersionsSyncVersion
|| __DATA_CONST.__const _kBCCloudKitSystemFields
|| __DATA_CONST.__const _kBCCloudKitZoneAsset
|| __DATA_CONST.__const _kBCCloudKitZoneCollection
|| __DATA_CONST.__const _kBCCloudKitZoneGlobalMetadata
|| __DATA_CONST.__const _kBCCloudKitZoneReadingHistoryModel
|| __DATA_CONST.__const _kBCCloudKitZoneReadingStatistics
|| __DATA_CONST.__const _kBCCloudKitZoneSecureUserData
|| __DATA_CONST.__const _kBCFetchChangesEntityName
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCAssetAnnotations
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCAssetDetail
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCAssetReview
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudAssetAnnotationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudAssetManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudChangeTokenController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudCollectionsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudDataManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudDataSyncManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudKitConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudKitController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudKitDataChangedTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudKitDatabaseController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudKitFetchChangesTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudKitRecordZone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudKitSecureConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudKitSyncToCKTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudKitTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudKitTransactionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudSecureUserDataManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCloudSyncVersions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCCollectionMember
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCGlobalMetadatum
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCMutableAssetAnnotations
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCMutableAssetDetail
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCMutableAssetReview
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCMutableCloudData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCMutableCloudSyncVersions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCMutableCollectionDetail
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCMutableCollectionMember
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCMutableGlobalMetadatum
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCMutableReadingNowDetail
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCMutableSecureUserDatum
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCMutableStoreItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCReadingNowDetail
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCStoreItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BDSAppGroupContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BDSApplication
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BDSCloudGlobalMetadataManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BDSICloudIdentityToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BDSICloudIdentityTokenTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BDSLiverpoolStatusMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BDSOSTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BDSReachability
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BDSServiceProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BDSSyncUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BDSUserAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCAssetAnnotations
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCAssetDetail
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCAssetReview
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudAssetAnnotationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudAssetManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudChangeTokenController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudCollectionsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudDataManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudDataSyncManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudKitConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudKitController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudKitDatabaseController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudKitFetchChangesTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudKitRecordZone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudKitSecureConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudKitSyncToCKTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudKitTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudKitTransactionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudSecureUserDataManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCloudSyncVersions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCCollectionMember
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCGlobalMetadatum
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCMutableAssetAnnotations
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCMutableAssetDetail
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCMutableAssetReview
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCMutableCloudData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCMutableCloudSyncVersions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCMutableCollectionDetail
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCMutableCollectionMember
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCMutableGlobalMetadatum
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCMutableReadingNowDetail
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCMutableSecureUserDatum
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCMutableStoreItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCReadingNowDetail
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCStoreItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BDSAppGroupContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BDSApplication
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BDSCloudGlobalMetadataManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BDSICloudIdentityToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BDSICloudIdentityTokenTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BDSLiverpoolStatusMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BDSNBPinningManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BDSOSTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BDSReachability
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BDSServiceProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BDSSyncUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BDSUserAccount
|| __TEXT.__const _BCNormalizedNumberOfStars
|| __TEXT.__text _BCAnnotationRangeReadFrom
|| __TEXT.__text _BCAnnotationsProtoBookReadFrom
|| __TEXT.__text _BCProtoAnnotationReadFrom
|| __TEXT.__text _BDSCloudKitAudiobookLog
|| __TEXT.__text _BDSCloudKitLog
|| __TEXT.__text _BDSReportAssertionFailureWithMessage
|| __TEXT.__text _BDSServiceCenterLog
|| __TEXT.__text _BDSServiceLog
|| __TEXT.__text _BookDataStoreBundle
|| __TEXT.__text _BookDataStoreCFBundle
|| __TEXT.__text _bc_isRunningTests
|| __TEXT.__text _bc_turnProtoAnnotationIntoTombstone
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kAccountDataclassUbiquity
__ BookUtility: _BUClassAndProtocolCast
__ BookUtility: _BUDynamicCast
__ BookUtility: _BUProtocolCast
__ BookUtility: _OBJC_CLASS_$_BUCoalescingCallBlock
__ CloudKit: _CKAccountChangedNotification
__ CloudKit: _CKCurrentUserDefaultName
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKErrorRetryAfterKey
__ CloudKit: _CKIdentityUpdateNotification
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudKit: _CKRecordChangedErrorServerRecordKey
__ CloudKit: _OBJC_CLASS_$_CKAsset
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKDatabaseSubscription
__ CloudKit: _OBJC_CLASS_$_CKFetchDatabaseChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesConfiguration
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifySubscriptionsOperation
__ CloudKit: _OBJC_CLASS_$_CKNotification
__ CloudKit: _OBJC_CLASS_$_CKNotificationInfo
__ CloudKit: _OBJC_CLASS_$_CKOperationConfiguration
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordID
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CloudKit: _OBJC_CLASS_$_CKServerChangeToken
__ CoreData: _NSDeletedObjectIDsKey
__ CoreData: _NSInferMappingModelAutomaticallyOption
__ CoreData: _NSInsertedObjectsKey
__ CoreData: _NSManagedObjectContextDidSaveNotification
__ CoreData: _NSMigratePersistentStoresAutomaticallyOption
__ CoreData: _NSPersistentHistoryTrackingKey
__ CoreData: _NSSQLiteStoreType
__ CoreData: _NSUpdatedObjectsKey
__ CoreData: _OBJC_CLASS_$_NSBatchDeleteRequest
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_CLASS_$_NSManagedObjectContext
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryChangeRequest
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryResult
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryToken
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryTransaction
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreCoordinator
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFRunLoopDefaultMode
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSObjectInaccessibleException
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ ManagedConfiguration: _MCFeatureAccountModificationAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MediaPlayer: _MPMediaItemPropertyPurchaseHistoryID
__ MediaPlayer: _MPMediaItemPropertyStoreID
__ MediaPlayer: _OBJC_CLASS_$_MPMediaPropertyPredicate
__ MediaPlayer: _OBJC_CLASS_$_MPMediaQuery
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBDataReader
__ ProtocolBuffer: _OBJC_CLASS_$_PBDataWriter
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteFloatField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ Security: _SecRandomCopyBytes
__ Security: _kSecRandomDefault
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilityScheduleWithRunLoop
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilityUnscheduleFromRunLoop
__ TCC: _TCCAccessCopyBundleIdentifiersDisabledForService
__ TCC: _TCCAccessCopyBundleIdentifiersForService
__ TCC: _TCCAccessSetForBundleId
__ libSystem.B.dylib: _CCHmacFinal
__ libSystem.B.dylib: _CCHmacInit
__ libSystem.B.dylib: _CCHmacUpdate
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _container_create_or_lookup_app_group_paths_for_current_user
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_copy_description
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_dictionary_get_count
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
BDSMediaLibraryUtils : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BDSMediaLibraryUtils _storeRepresentativeItem:]
  +[BDSMediaLibraryUtils representativeDAAPMediaItemsWithAssetId:]


BDSServiceProxy : NSObject /usr/lib/libSystem.B.dylib <NSXPCProxyCreating, BDSServiceProtocol>
 @property  <BDSServiceProtocol><NSXPCProxyCreating> *remoteObjectProxy
 @property  NSXPCConnection *connection
 @property  BOOL connectionHealthy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BDSServiceProxy init]
  -[BDSServiceProxy .cxx_destruct]
  -[BDSServiceProxy remoteObjectProxyWithErrorHandler:]
  -[BDSServiceProxy remoteObjectProxy]
  -[BDSServiceProxy connection]
  -[BDSServiceProxy shutdown]
  -[BDSServiceProxy formXPCConnection]
  -[BDSServiceProxy dissociateCloudDataFromSyncWithCompletion:]
  -[BDSServiceProxy currentAssetDetailCloudSyncVersions:]
  -[BDSServiceProxy setAssetDetail:completion:]
  -[BDSServiceProxy setAssetDetails:completion:]
  -[BDSServiceProxy deleteAssetDetailForAssetID:completion:]
  -[BDSServiceProxy assetDetailForAssetID:completion:]
  -[BDSServiceProxy assetDetailsForAssetIDs:completion:]
  -[BDSServiceProxy resolvedAssetDetailForAssetID:completion:]
  -[BDSServiceProxy fetchAssetDetailsIncludingDeleted:completion:]
  -[BDSServiceProxy fetchAssetDetailsForUnsyncedTastes:]
  -[BDSServiceProxy fetchFinishedDatesByAssetIDForYear:completion:]
  -[BDSServiceProxy fetchFinishedAssetCountByYearWithCompletion:]
  -[BDSServiceProxy getAssetDetailChangesSince:completion:]
  -[BDSServiceProxy currentReadingNowDetailCloudSyncVersions:]
  -[BDSServiceProxy setReadingNowDetails:completion:]
  -[BDSServiceProxy deleteReadingNowDetailForAssetID:completion:]
  -[BDSServiceProxy readingNowDetailsForAssetIDs:completion:]
  -[BDSServiceProxy getReadingNowDetailChangesSince:completion:]
  -[BDSServiceProxy setAssetReview:completion:]
  -[BDSServiceProxy setAssetReviews:completion:]
  -[BDSServiceProxy deleteAssetReviewForAssetReviewID:completion:]
  -[BDSServiceProxy deleteAssetReviewForAssetReviewIDs:completion:]
  -[BDSServiceProxy assetReviewForAssetReviewID:completion:]
  -[BDSServiceProxy assetReviewsForAssetReviewIDs:completion:]
  -[BDSServiceProxy fetchAssetReviewsForUserID:includingDeleted:completion:]
  -[BDSServiceProxy getAssetReviewChangesSince:completion:]
  -[BDSServiceProxy addStoreItem:completion:]
  -[BDSServiceProxy addStoreItems:completion:]
  -[BDSServiceProxy deleteStoreItemWithStoreID:completion:]
  -[BDSServiceProxy deleteStoreItemsWithStoreIDs:completion:]
  -[BDSServiceProxy storeItemForStoreID:completion:]
  -[BDSServiceProxy fetchStoreItemsIncludingDeleted:completion:]
  -[BDSServiceProxy getStoreItemChangesSince:completion:]
  -[BDSServiceProxy currentCollectionDetailCloudSyncVersions:]
  -[BDSServiceProxy setCollectionDetail:completion:]
  -[BDSServiceProxy setCollectionDetails:completion:]
  -[BDSServiceProxy deleteCollectionDetailForCollectionID:completion:]
  -[BDSServiceProxy deleteCollectionDetailForCollectionIDs:completion:]
  -[BDSServiceProxy collectionDetailForCollectionID:completion:]
  -[BDSServiceProxy collectionDetailsForCollectionIDs:completion:]
  -[BDSServiceProxy fetchCollectionDetailsIncludingDeleted:completion:]
  -[BDSServiceProxy getCollectionDetailChangesSince:completion:]
  -[BDSServiceProxy currentCollectionMemberCloudSyncVersions:]
  -[BDSServiceProxy setCollectionMember:completion:]
  -[BDSServiceProxy setCollectionMembers:completion:]
  -[BDSServiceProxy deleteCollectionMemberForCollectionMemberID:completion:]
  -[BDSServiceProxy deleteCollectionMemberForCollectionMemberIDs:completion:]
  -[BDSServiceProxy collectionMemberForCollectionMemberID:completion:]
  -[BDSServiceProxy fetchCollectionMembersIncludingDeleted:completion:]
  -[BDSServiceProxy fetchCollectionMembersInCollectionID:completion:]
  -[BDSServiceProxy fetchMaxSortOrderInCollectionID:completion:]
  -[BDSServiceProxy getCollectionMemberChangesSince:completion:]
  -[BDSServiceProxy setEnableCollectionSync:]
  -[BDSServiceProxy setEnableCloudSync:enableReadingNowSync:]
  -[BDSServiceProxy setEnableSecureUserDataCloudSync:]
  -[BDSServiceProxy setCloudSyncPaused:]
  -[BDSServiceProxy deleteCloudDataWithCompletion:]
  -[BDSServiceProxy signalFetchChangesTransaction:]
  -[BDSServiceProxy fetchMostRecentAudiobookWithCompletion:]
  -[BDSServiceProxy updateWantToReadAndReadingNowWithCompletion:]
  -[BDSServiceProxy updateWantToReadWithCompletion:]
  -[BDSServiceProxy updateReadingNowWithCompletion:]
  -[BDSServiceProxy updateBitrateForItemWithAdamID:completion:]
  -[BDSServiceProxy currentCloudSyncVersions:]
  -[BDSServiceProxy setUserDatum:completion:]
  -[BDSServiceProxy setUserData:completion:]
  -[BDSServiceProxy deleteUserDatumForKey:completion:]
  -[BDSServiceProxy userDatumForKey:completion:]
  -[BDSServiceProxy userDatumIncludingDeleted:forKey:completion:]
  -[BDSServiceProxy fetchUserDataIncludingDeleted:completion:]
  -[BDSServiceProxy getUserDataChangesSince:completion:]
  -[BDSServiceProxy resolvedUserDataValueForKey:completion:]
  -[BDSServiceProxy userDataValueForKey:completion:]
  -[BDSServiceProxy setUserDataValue:forKey:completion:]
  -[BDSServiceProxy audiobookStoreEnabledWithCompletion:]
  -[BDSServiceProxy setConnectionHealthy:]
  -[BDSServiceProxy scheduleRestart]
  -[BDSServiceProxy connectionHealthy]


BCCollectionDetail : BCCloudData <BCCollectionDetail>
 @property  NSString *collectionID
 @property  NSString *name
 @property  NSString *collectionDescription
 @property  BOOL hidden
 @property  int sortOrder
 @property  int sortMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCCollectionDetail propertyIDKey]

  // instance methods
  -[BCCollectionDetail mutableCopy]
  -[BCCollectionDetail identifier]
  -[BCCollectionDetail recordType]
  -[BCCollectionDetail zoneName]
  -[BCCollectionDetail _configureFromCollectionDetail:withMergers:]
  -[BCCollectionDetail isEqualExceptForDate:]
  -[BCCollectionDetail configureFromCloudData:withMergers:]
  -[BCCollectionDetail resolveConflictsFromRecord:withResolvers:]


BCMutableCollectionDetail : BCMutableCloudData <BCCollectionDetail, NSSecureCoding>
 @property  NSString *collectionID
 @property  NSString *name
 @property  NSString *collectionDescription
 @property  BOOL hidden
 @property  int sortOrder
 @property  int sortMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCMutableCollectionDetail supportsSecureCoding]

  // instance methods
  -[BCMutableCollectionDetail name]
  -[BCMutableCollectionDetail encodeWithCoder:]
  -[BCMutableCollectionDetail initWithCoder:]
  -[BCMutableCollectionDetail .cxx_destruct]
  -[BCMutableCollectionDetail setName:]
  -[BCMutableCollectionDetail identifier]
  -[BCMutableCollectionDetail recordType]
  -[BCMutableCollectionDetail zoneName]
  -[BCMutableCollectionDetail setHidden:]
  -[BCMutableCollectionDetail hidden]
  -[BCMutableCollectionDetail initWithRecord:]
  -[BCMutableCollectionDetail sortOrder]
  -[BCMutableCollectionDetail setSortOrder:]
  -[BCMutableCollectionDetail setCollectionID:]
  -[BCMutableCollectionDetail collectionID]
  -[BCMutableCollectionDetail setCollectionDescription:]
  -[BCMutableCollectionDetail collectionDescription]
  -[BCMutableCollectionDetail initWithCloudData:]
  -[BCMutableCollectionDetail sortMode]
  -[BCMutableCollectionDetail configuredRecordFromAttributes]
  -[BCMutableCollectionDetail initWithCollectionID:]
  -[BCMutableCollectionDetail setSortMode:]


BCCloudKitFetchChangesTransaction : BCCloudKitTransaction
 @property  BCCloudKitController *cloudKitController

  // class methods
  +[BCCloudKitFetchChangesTransaction transactionNameForEntityName:]

  // instance methods
  -[BCCloudKitFetchChangesTransaction .cxx_destruct]
  -[BCCloudKitFetchChangesTransaction cloudKitController]
  -[BCCloudKitFetchChangesTransaction initWithCloudKitController:delegate:]
  -[BCCloudKitFetchChangesTransaction performWorkWithCompletion:]
  -[BCCloudKitFetchChangesTransaction coalescingDelay]
  -[BCCloudKitFetchChangesTransaction transactionLifetimeTimout]
  -[BCCloudKitFetchChangesTransaction setCloudKitController:]


BCCloudSyncVersions : NSManagedObject /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer <BCCloudSyncVersions>
 @property  NSString *dataType
 @property  NSData *rawHistoryToken
 @property  NSPersistentHistoryToken *historyToken
 @property  long long historyTokenOffset
 @property  long long cloudVersion
 @property  long long localVersion
 @property  long long syncVersion

  // instance methods
  -[BCCloudSyncVersions mutableCopy]
  -[BCCloudSyncVersions historyToken]
  -[BCCloudSyncVersions setHistoryToken:]
  -[BCCloudSyncVersions configureFromSyncVersions:]


BCMutableCloudSyncVersions : NSObject /usr/lib/libSystem.B.dylib <BCCloudSyncVersions, NSSecureCoding>
 @property  NSString *dataType
 @property  NSPersistentHistoryToken *historyToken
 @property  long long historyTokenOffset
 @property  long long cloudVersion
 @property  long long localVersion
 @property  long long syncVersion

  // class methods
  +[BCMutableCloudSyncVersions supportsSecureCoding]

  // instance methods
  -[BCMutableCloudSyncVersions encodeWithCoder:]
  -[BCMutableCloudSyncVersions initWithCoder:]
  -[BCMutableCloudSyncVersions .cxx_destruct]
  -[BCMutableCloudSyncVersions dataType]
  -[BCMutableCloudSyncVersions setDataType:]
  -[BCMutableCloudSyncVersions setLocalVersion:]
  -[BCMutableCloudSyncVersions historyToken]
  -[BCMutableCloudSyncVersions setHistoryToken:]
  -[BCMutableCloudSyncVersions localVersion]
  -[BCMutableCloudSyncVersions initWithCloudSyncVersions:]
  -[BCMutableCloudSyncVersions cloudVersion]
  -[BCMutableCloudSyncVersions setCloudVersion:]
  -[BCMutableCloudSyncVersions syncVersion]
  -[BCMutableCloudSyncVersions setSyncVersion:]
  -[BCMutableCloudSyncVersions historyTokenOffset]
  -[BCMutableCloudSyncVersions setHistoryTokenOffset:]


BCCloudKitDataChangedTransaction : BCCloudKitTransaction
 @property  NSString *notificationName

  // class methods
  +[BCCloudKitDataChangedTransaction transactionNameForEntityName:]

  // instance methods
  -[BCCloudKitDataChangedTransaction .cxx_destruct]
  -[BCCloudKitDataChangedTransaction notificationName]
  -[BCCloudKitDataChangedTransaction setNotificationName:]
  -[BCCloudKitDataChangedTransaction performWorkWithCompletion:]
  -[BCCloudKitDataChangedTransaction coalescingDelay]
  -[BCCloudKitDataChangedTransaction initWithEntityName:notificationName:delegate:]


BDSSyncUserDefaults : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BDSSyncUserDefaults isGlobalICloudDriveSyncOptedIn]
  +[BDSSyncUserDefaults _isBundleIdentifierInArray:]
  +[BDSSyncUserDefaults isSignedIntoICloud]
  +[BDSSyncUserDefaults isCloudKitSyncOptedIn]
  +[BDSSyncUserDefaults iCloudIdentity]
  +[BDSSyncUserDefaults _isServiceEnabledAlternative:]
  +[BDSSyncUserDefaults _isServiceDisabledAlternative:]
  +[BDSSyncUserDefaults _setService:enabled:]


BCCloudAssetAnnotationManager : NSObject /usr/lib/libSystem.B.dylib <BCCloudDataSyncManagerDelegate, BCCloudAssetAnnotationManager>
 @property  BCCloudKitController *cloudKitController
 @property  BCCloudDataSource *annotationsDataSource
 @property  BCCloudDataSyncManager *syncManager
 @property  BCCloudDataManager *dataManager
 @property  NSURL *ckAssetStoreDirectory
 @property  BOOL enableCloudSync
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCCloudAssetAnnotationManager dealloc]
  -[BCCloudAssetAnnotationManager .cxx_destruct]
  -[BCCloudAssetAnnotationManager entityName]
  -[BCCloudAssetAnnotationManager dataManager]
  -[BCCloudAssetAnnotationManager setDataManager:]
  -[BCCloudAssetAnnotationManager syncManager]
  -[BCCloudAssetAnnotationManager setSyncManager:]
  -[BCCloudAssetAnnotationManager dissociateCloudDataFromSyncWithCompletion:]
  -[BCCloudAssetAnnotationManager cloudKitController]
  -[BCCloudAssetAnnotationManager setCloudKitController:]
  -[BCCloudAssetAnnotationManager ckAssetStoreDirectory]
  -[BCCloudAssetAnnotationManager enableCloudSync]
  -[BCCloudAssetAnnotationManager syncManager:startSyncToCKWithCompletion:]
  -[BCCloudAssetAnnotationManager signalSyncToCKForSyncManager:]
  -[BCCloudAssetAnnotationManager syncManager:removeCloudDataForIDs:completion:]
  -[BCCloudAssetAnnotationManager syncManager:updateSyncGenerationFromCloudData:completion:]
  -[BCCloudAssetAnnotationManager syncManager:resolveConflictsForRecords:completion:]
  -[BCCloudAssetAnnotationManager syncManager:failedRecordIDs:completion:]
  -[BCCloudAssetAnnotationManager assetWithID:updatedAnnotations:completion:]
  -[BCCloudAssetAnnotationManager fileURLForCachingCKAssetWithAssetID:]
  -[BCCloudAssetAnnotationManager getAnnotationChangesSince:completion:]
  -[BCCloudAssetAnnotationManager initWithCloudDataSource:cloudKitController:]
  -[BCCloudAssetAnnotationManager setEnableCloudSync:]
  -[BCCloudAssetAnnotationManager annotationsDataSource]
  -[BCCloudAssetAnnotationManager setAnnotationsDataSource:]
  -[BCCloudAssetAnnotationManager setCkAssetStoreDirectory:]


BCAnnotationRange : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  unsigned long location
 @property  unsigned long length

  // instance methods
  -[BCAnnotationRange length]
  -[BCAnnotationRange isEqual:]
  -[BCAnnotationRange copyWithZone:]
  -[BCAnnotationRange setLength:]
  -[BCAnnotationRange dictionaryRepresentation]
  -[BCAnnotationRange location]
  -[BCAnnotationRange writeTo:]
  -[BCAnnotationRange mergeFrom:]
  -[BCAnnotationRange readFrom:]
  -[BCAnnotationRange copyTo:]
  -[BCAnnotationRange setLocation:]


BCStoreItem : BCCloudData <BCStoreItem>
 @property  NSString *storeID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCStoreItem propertyIDKey]

  // instance methods
  -[BCStoreItem mutableCopy]
  -[BCStoreItem identifier]
  -[BCStoreItem recordType]
  -[BCStoreItem zoneName]
  -[BCStoreItem isEqualExceptForDate:]
  -[BCStoreItem configureFromCloudData:withMergers:]
  -[BCStoreItem resolveConflictsFromRecord:withResolvers:]
  -[BCStoreItem _configureFromStoreItem:withMergers:]


BCMutableStoreItem : BCMutableCloudData <BCStoreItem, NSSecureCoding>
 @property  NSString *storeID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCMutableStoreItem supportsSecureCoding]

  // instance methods
  -[BCMutableStoreItem encodeWithCoder:]
  -[BCMutableStoreItem initWithCoder:]
  -[BCMutableStoreItem .cxx_destruct]
  -[BCMutableStoreItem identifier]
  -[BCMutableStoreItem recordType]
  -[BCMutableStoreItem zoneName]
  -[BCMutableStoreItem storeID]
  -[BCMutableStoreItem initWithRecord:]
  -[BCMutableStoreItem setStoreID:]
  -[BCMutableStoreItem initWithCloudData:]
  -[BCMutableStoreItem configuredRecordFromAttributes]
  -[BCMutableStoreItem initWithStoreID:]


BDSServiceCenter : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BDSServiceCenter _nextSortOrderForCollectionMemberManager:collectionID:completion:]
  +[BDSServiceCenter addStoreID:toCollectionID:completion:]
  +[BDSServiceCenter fetchIsAssetID:inCollectionID:completion:]


BCAssetReview : BCCloudData <BCAssetReview>
 @property  NSString *assetReviewID
 @property  NSString *userID
 @property  short starRating
 @property  double normalizedStarRating
 @property  NSString *reviewTitle
 @property  NSString *reviewBody
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCAssetReview propertyIDKey]
  +[BCAssetReview userIDFromAssetReviewID:]
  +[BCAssetReview assetReviewIDWithUserID:assetID:]
  +[BCAssetReview assetIDFromAssetReviewID:]

  // instance methods
  -[BCAssetReview mutableCopy]
  -[BCAssetReview identifier]
  -[BCAssetReview recordType]
  -[BCAssetReview zoneName]
  -[BCAssetReview isEqualExceptForDate:]
  -[BCAssetReview configureFromCloudData:withMergers:]
  -[BCAssetReview resolveConflictsFromRecord:withResolvers:]
  -[BCAssetReview normalizedStarRating]
  -[BCAssetReview _configureFromAssetReview:withMergers:]
  -[BCAssetReview setNormalizedStarRating:]


BCMutableAssetReview : BCMutableCloudData <BCAssetReview, NSSecureCoding>
 @property  NSString *assetReviewID
 @property  NSString *userID
 @property  short starRating
 @property  double normalizedStarRating
 @property  NSString *reviewTitle
 @property  NSString *reviewBody
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCMutableAssetReview supportsSecureCoding]

  // instance methods
  -[BCMutableAssetReview encodeWithCoder:]
  -[BCMutableAssetReview initWithCoder:]
  -[BCMutableAssetReview userID]
  -[BCMutableAssetReview .cxx_destruct]
  -[BCMutableAssetReview identifier]
  -[BCMutableAssetReview recordType]
  -[BCMutableAssetReview zoneName]
  -[BCMutableAssetReview setUserID:]
  -[BCMutableAssetReview initWithRecord:]
  -[BCMutableAssetReview starRating]
  -[BCMutableAssetReview setStarRating:]
  -[BCMutableAssetReview initWithCloudData:]
  -[BCMutableAssetReview configuredRecordFromAttributes]
  -[BCMutableAssetReview assetReviewID]
  -[BCMutableAssetReview normalizedStarRating]
  -[BCMutableAssetReview reviewTitle]
  -[BCMutableAssetReview reviewBody]
  -[BCMutableAssetReview setAssetReviewID:]
  -[BCMutableAssetReview setNormalizedStarRating:]
  -[BCMutableAssetReview initWithAssetReviewID:]
  -[BCMutableAssetReview setReviewTitle:]
  -[BCMutableAssetReview setReviewBody:]


BCCloudKitTransactionManager : NSObject /usr/lib/libSystem.B.dylib <BCCloudKitTransactionDelegate, BCCloudKitTransactionManagerService>
 @property  BCCloudKitController *cloudKitController
 @property  NSObject<OS_dispatch_queue> *transactionAccessQueue
 @property  NSMutableDictionary *transactions
 @property  BDSServiceProxy *serviceProxy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCCloudKitTransactionManager .cxx_destruct]
  -[BCCloudKitTransactionManager serviceProxy]
  -[BCCloudKitTransactionManager setServiceProxy:]
  -[BCCloudKitTransactionManager transactions]
  -[BCCloudKitTransactionManager setTransactions:]
  -[BCCloudKitTransactionManager signalFetchChangesTransaction:]
  -[BCCloudKitTransactionManager cloudKitController]
  -[BCCloudKitTransactionManager setCloudKitController:]
  -[BCCloudKitTransactionManager initWithCloudKitController:]
  -[BCCloudKitTransactionManager signalSyncToCKTransactionForEntityName:syncManager:]
  -[BCCloudKitTransactionManager transactionAccessQueue]
  -[BCCloudKitTransactionManager transactionCompleted:]
  -[BCCloudKitTransactionManager signalDataChangeTransactionForEntityName:notificationName:]
  -[BCCloudKitTransactionManager signalFetchChangesTransactionInService:]
  -[BCCloudKitTransactionManager setTransactionAccessQueue:]


BCCloudCollectionsManager : NSObject /usr/lib/libSystem.B.dylib <BDSCloudKitSupportSignOut>
 @property  NSObject<BCCloudCollectionDetailManager> *collectionDetailManager
 @property  NSObject<BCCloudCollectionMemberManager> *collectionMemberManager
 @property  BCCloudChangeTokenController *changeTokenController
 @property  NSManagedObjectModel *objectModel
 @property  BCCloudDataSource *collectionDataSource
 @property  BOOL proxyMode
 @property  BDSServiceProxy *serviceProxy
 @property  BOOL enableCloudSync

  // class methods
  +[BCCloudCollectionsManager sharedManager]
  +[BCCloudCollectionsManager sharedClientXPCProxy]

  // instance methods
  -[BCCloudCollectionsManager .cxx_destruct]
  -[BCCloudCollectionsManager serviceProxy]
  -[BCCloudCollectionsManager setServiceProxy:]
  -[BCCloudCollectionsManager setObjectModel:]
  -[BCCloudCollectionsManager objectModel]
  -[BCCloudCollectionsManager dissociateCloudDataFromSyncWithCompletion:]
  -[BCCloudCollectionsManager deleteCloudDataWithCompletion:]
  -[BCCloudCollectionsManager setEnableCloudSync:]
  -[BCCloudCollectionsManager collectionMemberManager]
  -[BCCloudCollectionsManager initClientXPCProxy]
  -[BCCloudCollectionsManager collectionDataSource]
  -[BCCloudCollectionsManager setCollectionDataSource:]
  -[BCCloudCollectionsManager collectionDetailManager]
  -[BCCloudCollectionsManager setCollectionDetailManager:]
  -[BCCloudCollectionsManager setCollectionMemberManager:]
  -[BCCloudCollectionsManager changeTokenController]
  -[BCCloudCollectionsManager setChangeTokenController:]
  -[BCCloudCollectionsManager proxyMode]
  -[BCCloudCollectionsManager setProxyMode:]


BDSNBPinningManager : NSObject /usr/lib/libSystem.B.dylib
 @property  BDSServiceProxy *serviceProxy

  // instance methods
  -[BDSNBPinningManager init]
  -[BDSNBPinningManager .cxx_destruct]
  -[BDSNBPinningManager serviceProxy]
  -[BDSNBPinningManager setServiceProxy:]
  -[BDSNBPinningManager fetchMostRecentAudiobookWithCompletion:]
  -[BDSNBPinningManager updateWantToReadAndReadingNowWithCompletion:]
  -[BDSNBPinningManager updateWantToReadWithCompletion:]
  -[BDSNBPinningManager updateReadingNowWithCompletion:]
  -[BDSNBPinningManager updateBitrateForItemWithAdamID:completion:]
  -[BDSNBPinningManager audiobookStoreEnabledWithCompletion:]


BCCloudDataNullPrivacyDelegate : NSObject /usr/lib/libSystem.B.dylib <BCCloudDataPrivacyDelegate>
  // class methods
  +[BCCloudDataNullPrivacyDelegate nullPrivacyDelegate]

  // instance methods
  -[BCCloudDataNullPrivacyDelegate establishedSalt]
  -[BCCloudDataNullPrivacyDelegate recordNameFromRecordType:identifier:]


BCCloudData : NSManagedObject /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer <BCCloudData>
 @property  NSString *saltedHashedID
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCCloudData localIdentifierFromRecord:]
  +[BCCloudData propertyIDKey]

  // instance methods
  -[BCCloudData mutableCopy]
  -[BCCloudData .cxx_destruct]
  -[BCCloudData identifier]
  -[BCCloudData recordType]
  -[BCCloudData zoneName]
  -[BCCloudData privacyDelegate]
  -[BCCloudData setPrivacyDelegate:]
  -[BCCloudData incrementEditGeneration]
  -[BCCloudData systemFields]
  -[BCCloudData isEqualExceptForDate:]
  -[BCCloudData configureFromCloudData:withMergers:]
  -[BCCloudData resolveConflictsFromRecord:withResolvers:]
  -[BCCloudData configuredRecordFromAttributes]
  -[BCCloudData setSystemFields:]


BCMutableCloudData : NSObject /usr/lib/libSystem.B.dylib <BCCloudData, NSSecureCoding>
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  NSString *localRecordID
 @property  CKRecord *systemFields
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCMutableCloudData supportsSecureCoding]

  // instance methods
  -[BCMutableCloudData init]
  -[BCMutableCloudData isEqual:]
  -[BCMutableCloudData encodeWithCoder:]
  -[BCMutableCloudData initWithCoder:]
  -[BCMutableCloudData .cxx_destruct]
  -[BCMutableCloudData identifier]
  -[BCMutableCloudData modificationDate]
  -[BCMutableCloudData recordType]
  -[BCMutableCloudData zoneName]
  -[BCMutableCloudData privacyDelegate]
  -[BCMutableCloudData setPrivacyDelegate:]
  -[BCMutableCloudData setModificationDate:]
  -[BCMutableCloudData initWithRecord:]
  -[BCMutableCloudData setDeletedFlag:]
  -[BCMutableCloudData deletedFlag]
  -[BCMutableCloudData initWithCloudData:]
  -[BCMutableCloudData incrementEditGeneration]
  -[BCMutableCloudData editGeneration]
  -[BCMutableCloudData syncGeneration]
  -[BCMutableCloudData systemFields]
  -[BCMutableCloudData ckSystemFields]
  -[BCMutableCloudData configuredRecordFromAttributes]
  -[BCMutableCloudData localRecordID]
  -[BCMutableCloudData setSystemFields:]
  -[BCMutableCloudData setEditGeneration:]
  -[BCMutableCloudData setSyncGeneration:]
  -[BCMutableCloudData setLocalRecordID:]


BCCloudKitConfiguration : NSObject /usr/lib/libSystem.B.dylib <BCContainerConfiguration>
 @property  NSString *queueIdentifier
 @property  NSString *containerIdentifier
 @property  NSArray *appZones
 @property  NSArray *serviceZones
 @property  NSString *dbArchiveFolderName
 @property  NSString *dbArchiveExtension
 @property  NSString *dbArchiveFilename
 @property  NSString *dbSubscriptionID
 @property  NSString *appBundleIdentifier
 @property  BOOL requiresDeviceToDeviceEncryption
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCCloudKitConfiguration configuration]

  // instance methods
  -[BCCloudKitConfiguration .cxx_destruct]
  -[BCCloudKitConfiguration containerIdentifier]
  -[BCCloudKitConfiguration setContainerIdentifier:]
  -[BCCloudKitConfiguration appBundleIdentifier]
  -[BCCloudKitConfiguration setAppBundleIdentifier:]
  -[BCCloudKitConfiguration queueIdentifier]
  -[BCCloudKitConfiguration setQueueIdentifier:]
  -[BCCloudKitConfiguration requiresDeviceToDeviceEncryption]
  -[BCCloudKitConfiguration setAppZones:]
  -[BCCloudKitConfiguration setServiceZones:]
  -[BCCloudKitConfiguration setDbArchiveFolderName:]
  -[BCCloudKitConfiguration setDbArchiveExtension:]
  -[BCCloudKitConfiguration setDbArchiveFilename:]
  -[BCCloudKitConfiguration setDbSubscriptionID:]
  -[BCCloudKitConfiguration setRequiresDeviceToDeviceEncryption:]
  -[BCCloudKitConfiguration shouldArchiveData:]
  -[BCCloudKitConfiguration shouldPerformDatabaseSubscriptionForServiceMode:]
  -[BCCloudKitConfiguration appZones]
  -[BCCloudKitConfiguration serviceZones]
  -[BCCloudKitConfiguration dbArchiveFolderName]
  -[BCCloudKitConfiguration dbArchiveExtension]
  -[BCCloudKitConfiguration dbArchiveFilename]
  -[BCCloudKitConfiguration dbSubscriptionID]


BCCloudSecureUserDataManager : NSObject /usr/lib/libSystem.B.dylib <BCCloudDataSyncManagerDelegate, BCCloudSecureUserDataManager, BDSCloudKitSupportSignOutDeleteWithoutInstance>
 @property  BDSServiceProxy *serviceProxy
 @property  BOOL proxyMode
 @property  BCCloudDataSource *secureUserDataSource
 @property  BCCloudDataSyncManager *syncManager
 @property  BCCloudDataManager *dataManager
 @property  NSManagedObjectModel *objectModel
 @property  BCCloudChangeTokenController *changeTokenController
 @property  BOOL enableCloudSync
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCCloudSecureUserDataManager sharedManager]
  +[BCCloudSecureUserDataManager deleteCloudDataWithCompletion:]
  +[BCCloudSecureUserDataManager sharedClientXPCProxy]

  // instance methods
  -[BCCloudSecureUserDataManager .cxx_destruct]
  -[BCCloudSecureUserDataManager entityName]
  -[BCCloudSecureUserDataManager serviceProxy]
  -[BCCloudSecureUserDataManager setServiceProxy:]
  -[BCCloudSecureUserDataManager dataManager]
  -[BCCloudSecureUserDataManager setDataManager:]
  -[BCCloudSecureUserDataManager setObjectModel:]
  -[BCCloudSecureUserDataManager objectModel]
  -[BCCloudSecureUserDataManager syncManager]
  -[BCCloudSecureUserDataManager setSyncManager:]
  -[BCCloudSecureUserDataManager dissociateCloudDataFromSyncWithCompletion:]
  -[BCCloudSecureUserDataManager setEnableSecureUserDataCloudSync:]
  -[BCCloudSecureUserDataManager currentCloudSyncVersions:]
  -[BCCloudSecureUserDataManager setUserDatum:completion:]
  -[BCCloudSecureUserDataManager setUserData:completion:]
  -[BCCloudSecureUserDataManager deleteUserDatumForKey:completion:]
  -[BCCloudSecureUserDataManager userDatumForKey:completion:]
  -[BCCloudSecureUserDataManager userDatumIncludingDeleted:forKey:completion:]
  -[BCCloudSecureUserDataManager fetchUserDataIncludingDeleted:completion:]
  -[BCCloudSecureUserDataManager getUserDataChangesSince:completion:]
  -[BCCloudSecureUserDataManager resolvedUserDataValueForKey:completion:]
  -[BCCloudSecureUserDataManager userDataValueForKey:completion:]
  -[BCCloudSecureUserDataManager setUserDataValue:forKey:completion:]
  -[BCCloudSecureUserDataManager enableCloudSync]
  -[BCCloudSecureUserDataManager syncManager:startSyncToCKWithCompletion:]
  -[BCCloudSecureUserDataManager signalSyncToCKForSyncManager:]
  -[BCCloudSecureUserDataManager syncManager:removeCloudDataForIDs:completion:]
  -[BCCloudSecureUserDataManager syncManager:updateSyncGenerationFromCloudData:completion:]
  -[BCCloudSecureUserDataManager syncManager:resolveConflictsForRecords:completion:]
  -[BCCloudSecureUserDataManager syncManager:failedRecordIDs:completion:]
  -[BCCloudSecureUserDataManager syncManager:fetchedAllRecordsInZone:]
  -[BCCloudSecureUserDataManager setEnableCloudSync:]
  -[BCCloudSecureUserDataManager changeTokenController]
  -[BCCloudSecureUserDataManager setChangeTokenController:]
  -[BCCloudSecureUserDataManager proxyMode]
  -[BCCloudSecureUserDataManager setProxyMode:]
  -[BCCloudSecureUserDataManager removeUserDataForSaltedHashedRecordIDs:completion:]
  -[BCCloudSecureUserDataManager updateSyncGenerationFromCloudData:completion:]
  -[BCCloudSecureUserDataManager secureUserDataSource]
  -[BCCloudSecureUserDataManager setSecureUserDataSource:]


BCProtoAnnotation : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  double creationDate
 @property  NSString *creatorIdentifier
 @property  BOOL hasDeleted
 @property  BOOL deleted
 @property  BOOL hasIsUnderline
 @property  BOOL isUnderline
 @property  BOOL hasLocationCFIString
 @property  NSString *locationCFIString
 @property  double modificationDate
 @property  BOOL hasNote
 @property  NSString *note
 @property  BOOL hasRepresentativeText
 @property  NSString *representativeText
 @property  BOOL hasSelectedText
 @property  NSString *selectedText
 @property  BOOL hasStyle
 @property  unsigned int style
 @property  BOOL hasType
 @property  unsigned int type
 @property  NSString *uuid
 @property  BOOL hasPhysicalPageNumber
 @property  NSString *physicalPageNumber
 @property  BOOL hasAnnotationVersion
 @property  NSString *annotationVersion
 @property  BOOL hasAssetVersion
 @property  NSString *assetVersion
 @property  BOOL hasAttachments
 @property  NSString *attachments
 @property  BOOL hasChapterTitle
 @property  NSString *chapterTitle
 @property  BOOL hasUserModificationDate
 @property  double userModificationDate
 @property  BOOL hasSelectedTextRange
 @property  BCAnnotationRange *selectedTextRange
 @property  BOOL hasReadingProgressHighWaterMark
 @property  float readingProgressHighWaterMark
 @property  BOOL hasSpineIndexUpdated
 @property  BOOL spineIndexUpdated
 @property  BOOL hasReadingProgress
 @property  float readingProgress
 @property  BOOL hasFutureProofing11
 @property  NSString *futureProofing11
 @property  BOOL hasFutureProofing12
 @property  NSString *futureProofing12
 @property  BOOL hasPlAbsolutePhysicalLocation
 @property  int plAbsolutePhysicalLocation
 @property  BOOL hasPlLocationRangeEnd
 @property  int plLocationRangeEnd
 @property  BOOL hasPlLocationRangeStart
 @property  int plLocationRangeStart
 @property  BOOL hasPlLocationStorageUUID
 @property  NSString *plLocationStorageUUID
 @property  BOOL hasPlUserData
 @property  NSData *plUserData
 @property  BOOL hasLocationModificationDate
 @property  double locationModificationDate

  // instance methods
  -[BCProtoAnnotation isEqual:]
  -[BCProtoAnnotation copyWithZone:]
  -[BCProtoAnnotation type]
  -[BCProtoAnnotation setType:]
  -[BCProtoAnnotation .cxx_destruct]
  -[BCProtoAnnotation attachments]
  -[BCProtoAnnotation dictionaryRepresentation]
  -[BCProtoAnnotation setAttachments:]
  -[BCProtoAnnotation uuid]
  -[BCProtoAnnotation modificationDate]
  -[BCProtoAnnotation style]
  -[BCProtoAnnotation setStyle:]
  -[BCProtoAnnotation setUuid:]
  -[BCProtoAnnotation creationDate]
  -[BCProtoAnnotation writeTo:]
  -[BCProtoAnnotation assetVersion]
  -[BCProtoAnnotation mergeFrom:]
  -[BCProtoAnnotation readFrom:]
  -[BCProtoAnnotation copyTo:]
  -[BCProtoAnnotation setCreationDate:]
  -[BCProtoAnnotation deleted]
  -[BCProtoAnnotation selectedTextRange]
  -[BCProtoAnnotation setSelectedTextRange:]
  -[BCProtoAnnotation selectedText]
  -[BCProtoAnnotation setSelectedText:]
  -[BCProtoAnnotation setModificationDate:]
  -[BCProtoAnnotation setHasType:]
  -[BCProtoAnnotation hasType]
  -[BCProtoAnnotation setHasStyle:]
  -[BCProtoAnnotation hasStyle]
  -[BCProtoAnnotation setDeleted:]
  -[BCProtoAnnotation setHasDeleted:]
  -[BCProtoAnnotation hasDeleted]
  -[BCProtoAnnotation note]
  -[BCProtoAnnotation setNote:]
  -[BCProtoAnnotation hasNote]
  -[BCProtoAnnotation hasAttachments]
  -[BCProtoAnnotation isUnderline]
  -[BCProtoAnnotation setAssetVersion:]
  -[BCProtoAnnotation creatorIdentifier]
  -[BCProtoAnnotation setCreatorIdentifier:]
  -[BCProtoAnnotation hasAssetVersion]
  -[BCProtoAnnotation plAbsolutePhysicalLocation]
  -[BCProtoAnnotation plLocationRangeStart]
  -[BCProtoAnnotation plLocationRangeEnd]
  -[BCProtoAnnotation plUserData]
  -[BCProtoAnnotation physicalPageNumber]
  -[BCProtoAnnotation annotationVersion]
  -[BCProtoAnnotation chapterTitle]
  -[BCProtoAnnotation userModificationDate]
  -[BCProtoAnnotation readingProgressHighWaterMark]
  -[BCProtoAnnotation readingProgress]
  -[BCProtoAnnotation spineIndexUpdated]
  -[BCProtoAnnotation locationModificationDate]
  -[BCProtoAnnotation futureProofing12]
  -[BCProtoAnnotation setIsUnderline:]
  -[BCProtoAnnotation setLocationCFIString:]
  -[BCProtoAnnotation setRepresentativeText:]
  -[BCProtoAnnotation setPhysicalPageNumber:]
  -[BCProtoAnnotation setAnnotationVersion:]
  -[BCProtoAnnotation setChapterTitle:]
  -[BCProtoAnnotation setUserModificationDate:]
  -[BCProtoAnnotation setReadingProgressHighWaterMark:]
  -[BCProtoAnnotation setSpineIndexUpdated:]
  -[BCProtoAnnotation setReadingProgress:]
  -[BCProtoAnnotation setFutureProofing12:]
  -[BCProtoAnnotation setPlAbsolutePhysicalLocation:]
  -[BCProtoAnnotation setPlLocationRangeEnd:]
  -[BCProtoAnnotation setPlLocationRangeStart:]
  -[BCProtoAnnotation setPlLocationStorageUUID:]
  -[BCProtoAnnotation setPlUserData:]
  -[BCProtoAnnotation setLocationModificationDate:]
  -[BCProtoAnnotation setFutureProofing11:]
  -[BCProtoAnnotation setHasIsUnderline:]
  -[BCProtoAnnotation hasIsUnderline]
  -[BCProtoAnnotation hasLocationCFIString]
  -[BCProtoAnnotation hasRepresentativeText]
  -[BCProtoAnnotation hasSelectedText]
  -[BCProtoAnnotation hasPhysicalPageNumber]
  -[BCProtoAnnotation hasAnnotationVersion]
  -[BCProtoAnnotation hasChapterTitle]
  -[BCProtoAnnotation setHasUserModificationDate:]
  -[BCProtoAnnotation hasUserModificationDate]
  -[BCProtoAnnotation hasSelectedTextRange]
  -[BCProtoAnnotation setHasReadingProgressHighWaterMark:]
  -[BCProtoAnnotation hasReadingProgressHighWaterMark]
  -[BCProtoAnnotation setHasSpineIndexUpdated:]
  -[BCProtoAnnotation hasSpineIndexUpdated]
  -[BCProtoAnnotation setHasReadingProgress:]
  -[BCProtoAnnotation hasReadingProgress]
  -[BCProtoAnnotation hasFutureProofing11]
  -[BCProtoAnnotation hasFutureProofing12]
  -[BCProtoAnnotation setHasPlAbsolutePhysicalLocation:]
  -[BCProtoAnnotation hasPlAbsolutePhysicalLocation]
  -[BCProtoAnnotation setHasPlLocationRangeEnd:]
  -[BCProtoAnnotation hasPlLocationRangeEnd]
  -[BCProtoAnnotation setHasPlLocationRangeStart:]
  -[BCProtoAnnotation hasPlLocationRangeStart]
  -[BCProtoAnnotation hasPlLocationStorageUUID]
  -[BCProtoAnnotation hasPlUserData]
  -[BCProtoAnnotation setHasLocationModificationDate:]
  -[BCProtoAnnotation hasLocationModificationDate]
  -[BCProtoAnnotation locationCFIString]
  -[BCProtoAnnotation representativeText]
  -[BCProtoAnnotation futureProofing11]
  -[BCProtoAnnotation plLocationStorageUUID]


BDSAppVersion : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BDSAppVersion appVersion]


BCAssetAnnotations : BCCloudData <BCAssetAnnotations>
 @property  NSString *assetID
 @property  NSString *assetVersion
 @property  NSData *bookAnnotations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCAssetAnnotations propertyIDKey]

  // instance methods
  -[BCAssetAnnotations mutableCopy]
  -[BCAssetAnnotations identifier]
  -[BCAssetAnnotations recordType]
  -[BCAssetAnnotations zoneName]
  -[BCAssetAnnotations isEqualExceptForDate:]
  -[BCAssetAnnotations configureFromCloudData:withMergers:]
  -[BCAssetAnnotations resolveConflictsFromRecord:withResolvers:]
  -[BCAssetAnnotations _configureFromAssetAnnotations:withMergers:]
  -[BCAssetAnnotations _mergeInAssetID:assetVersion:serializedData:]


BCMutableAssetAnnotations : BCMutableCloudData <BCAssetAnnotations>
 @property  NSString *assetVersion
 @property  NSData *bookAnnotations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate
 @property  NSString *assetID

  // instance methods
  -[BCMutableAssetAnnotations .cxx_destruct]
  -[BCMutableAssetAnnotations identifier]
  -[BCMutableAssetAnnotations assetVersion]
  -[BCMutableAssetAnnotations recordType]
  -[BCMutableAssetAnnotations zoneName]
  -[BCMutableAssetAnnotations initWithRecord:]
  -[BCMutableAssetAnnotations assetID]
  -[BCMutableAssetAnnotations setAssetVersion:]
  -[BCMutableAssetAnnotations initWithCloudData:]
  -[BCMutableAssetAnnotations configuredRecordFromAttributes]
  -[BCMutableAssetAnnotations initWithAssetID:]
  -[BCMutableAssetAnnotations setBookAnnotations:]
  -[BCMutableAssetAnnotations bookAnnotations]


BDSCloudGlobalMetadataManager : NSObject /usr/lib/libSystem.B.dylib <BCCloudDataSyncManagerDelegate, BDSCloudGlobalMetadataManager>
 @property  BCCloudDataSource *globalMetadataDataSource
 @property  BCCloudDataSyncManager *syncManager
 @property  BCCloudDataManager *dataManager
 @property  NSManagedObjectModel *objectModel
 @property  BCCloudChangeTokenController *changeTokenController
 @property  NSMutableDictionary *conflictResolvers
 @property  BOOL enableCloudSync
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BDSCloudGlobalMetadataManager sharedManager]
  +[BDSCloudGlobalMetadataManager deleteCloudDataWithCompletion:]

  // instance methods
  -[BDSCloudGlobalMetadataManager init]
  -[BDSCloudGlobalMetadataManager .cxx_destruct]
  -[BDSCloudGlobalMetadataManager entityName]
  -[BDSCloudGlobalMetadataManager dataManager]
  -[BDSCloudGlobalMetadataManager setDataManager:]
  -[BDSCloudGlobalMetadataManager setObjectModel:]
  -[BDSCloudGlobalMetadataManager objectModel]
  -[BDSCloudGlobalMetadataManager syncManager]
  -[BDSCloudGlobalMetadataManager setSyncManager:]
  -[BDSCloudGlobalMetadataManager currentCloudSyncVersions:]
  -[BDSCloudGlobalMetadataManager enableCloudSync]
  -[BDSCloudGlobalMetadataManager syncManager:startSyncToCKWithCompletion:]
  -[BDSCloudGlobalMetadataManager signalSyncToCKForSyncManager:]
  -[BDSCloudGlobalMetadataManager syncManager:removeCloudDataForIDs:completion:]
  -[BDSCloudGlobalMetadataManager syncManager:updateSyncGenerationFromCloudData:completion:]
  -[BDSCloudGlobalMetadataManager syncManager:resolveConflictsForRecords:completion:]
  -[BDSCloudGlobalMetadataManager syncManager:failedRecordIDs:completion:]
  -[BDSCloudGlobalMetadataManager syncManager:fetchedAllRecordsInZone:]
  -[BDSCloudGlobalMetadataManager setEnableCloudSync:]
  -[BDSCloudGlobalMetadataManager changeTokenController]
  -[BDSCloudGlobalMetadataManager setChangeTokenController:]
  -[BDSCloudGlobalMetadataManager updateSyncGenerationFromCloudData:completion:]
  -[BDSCloudGlobalMetadataManager initWithCloudDataSource:]
  -[BDSCloudGlobalMetadataManager conflictResolvers]
  -[BDSCloudGlobalMetadataManager setConflictResolvers:]
  -[BDSCloudGlobalMetadataManager removeMetadataForSaltedHashedRecordIDs:completion:]
  -[BDSCloudGlobalMetadataManager metadatumForKey:completion:]
  -[BDSCloudGlobalMetadataManager setMetadatum:completion:]
  -[BDSCloudGlobalMetadataManager setMetadata:completion:]
  -[BDSCloudGlobalMetadataManager deleteMetadatumForKey:completion:]
  -[BDSCloudGlobalMetadataManager metadatumIncludingDeleted:forKey:completion:]
  -[BDSCloudGlobalMetadataManager fetchMetadataIncludingDeleted:completion:]
  -[BDSCloudGlobalMetadataManager getMetadataChangesSince:completion:]
  -[BDSCloudGlobalMetadataManager resolvedMetadataValueForKey:completion:]
  -[BDSCloudGlobalMetadataManager metadataValueForKey:completion:]
  -[BDSCloudGlobalMetadataManager setMetadataValue:forKey:completion:]
  -[BDSCloudGlobalMetadataManager setConflictResolver:forKey:]
  -[BDSCloudGlobalMetadataManager removeConflictResolverForKey:]
  -[BDSCloudGlobalMetadataManager globalMetadataDataSource]
  -[BDSCloudGlobalMetadataManager setGlobalMetadataDataSource:]


BDSICloudIdentityTokenTracker : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *plistContents
 @property  NSURL *plistURL
 @property  BDSICloudIdentityToken *currentToken
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  BOOL trackLiverpool

  // instance methods
  -[BDSICloudIdentityTokenTracker .cxx_destruct]
  -[BDSICloudIdentityTokenTracker dispatchQueue]
  -[BDSICloudIdentityTokenTracker setDispatchQueue:]
  -[BDSICloudIdentityTokenTracker currentToken]
  -[BDSICloudIdentityTokenTracker plistURL]
  -[BDSICloudIdentityTokenTracker setCurrentToken:]
  -[BDSICloudIdentityTokenTracker trackLiverpool]
  -[BDSICloudIdentityTokenTracker plistContents]
  -[BDSICloudIdentityTokenTracker initWithContainerURL:trackingLiverpool:]
  -[BDSICloudIdentityTokenTracker fetchCurrentToken]
  -[BDSICloudIdentityTokenTracker forceUpdateTokenWithString:]
  -[BDSICloudIdentityTokenTracker didUnacknowledgediCloudLogoutOccur]
  -[BDSICloudIdentityTokenTracker acknowledgeiCloudIdentity]
  -[BDSICloudIdentityTokenTracker setPlistContents:]
  -[BDSICloudIdentityTokenTracker setPlistURL:]
  -[BDSICloudIdentityTokenTracker setTrackLiverpool:]


BCCloudKitTransaction : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *entityName
 @property  BUCoalescingCallBlock *coalescedNotification
 @property  BDSOSTransaction *osTransaction
 @property  NSObject<OS_dispatch_queue> *lifecycleAccessQueue
 @property  NSObject<OS_dispatch_source> *transactionLifetime
 @property  <BCCloudKitTransactionDelegate> *delegate
 @property  long long clientCount

  // class methods
  +[BCCloudKitTransaction transactionNameForEntityName:]

  // instance methods
  -[BCCloudKitTransaction delegate]
  -[BCCloudKitTransaction setDelegate:]
  -[BCCloudKitTransaction .cxx_destruct]
  -[BCCloudKitTransaction signal]
  -[BCCloudKitTransaction entityName]
  -[BCCloudKitTransaction setEntityName:]
  -[BCCloudKitTransaction clientCount]
  -[BCCloudKitTransaction setClientCount:]
  -[BCCloudKitTransaction setOsTransaction:]
  -[BCCloudKitTransaction osTransaction]
  -[BCCloudKitTransaction initWithEntityName:delegate:]
  -[BCCloudKitTransaction performWorkWithCompletion:]
  -[BCCloudKitTransaction coalescingDelay]
  -[BCCloudKitTransaction transactionLifetimeTimout]
  -[BCCloudKitTransaction transactionName]
  -[BCCloudKitTransaction clientConnected]
  -[BCCloudKitTransaction lifecycleAccessQueue]
  -[BCCloudKitTransaction transactionLifetime]
  -[BCCloudKitTransaction coalescedNotification]
  -[BCCloudKitTransaction laq_scheduleTransactionLifetime]
  -[BCCloudKitTransaction setTransactionLifetime:]
  -[BCCloudKitTransaction setCoalescedNotification:]
  -[BCCloudKitTransaction setLifecycleAccessQueue:]


BCCloudKitRecordZone : NSObject /usr/lib/libSystem.B.dylib
 @property  CKRecordZone *recordZone

  // instance methods
  -[BCCloudKitRecordZone .cxx_destruct]
  -[BCCloudKitRecordZone recordZone]
  -[BCCloudKitRecordZone initWithRecordZone:]


BCCloudKitDatabaseController : NSObject /usr/lib/libSystem.B.dylib <BCCloudDataPrivacyDelegate>
 @property  CKDatabase *database
 @property  CKContainer *container
 @property  NSURL *archiveURL
 @property  NSArray *desiredRecordZoneIDs
 @property  NSMutableSet *changedRecordZoneIDs
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  BUCoalescingCallBlock *coalescedArchive
 @property  NSString *subscriptionID
 @property  NSString *containerIdentifier
 @property  NSString *appBundleIdentifier
 @property  CKRecordID *userRecordID
 @property  CKServerChangeToken *serverChangeToken
 @property  NSData *recordIDSalt
 @property  NSMutableDictionary *recordZones
 @property  NSMutableDictionary *observers
 @property  NSMutableDictionary *tokenStores
 @property  BUCoalescingCallBlock *coalescedZoneFetch
 @property  BOOL attachedToContainer
 @property  double backOffInterval
 @property  BOOL serverFetchPostponed
 @property  BOOL fetchRecordZoneChangesSuccess
 @property  BOOL hasSubscription

  // class methods
  +[BCCloudKitDatabaseController decodeRecordFromSystemFields:]
  +[BCCloudKitDatabaseController encodeRecordSystemFields:]

  // instance methods
  -[BCCloudKitDatabaseController container]
  -[BCCloudKitDatabaseController setContainer:]
  -[BCCloudKitDatabaseController .cxx_destruct]
  -[BCCloudKitDatabaseController removeObserver:]
  -[BCCloudKitDatabaseController setDatabase:]
  -[BCCloudKitDatabaseController accessQueue]
  -[BCCloudKitDatabaseController database]
  -[BCCloudKitDatabaseController containerIdentifier]
  -[BCCloudKitDatabaseController setContainerIdentifier:]
  -[BCCloudKitDatabaseController appBundleIdentifier]
  -[BCCloudKitDatabaseController setObservers:]
  -[BCCloudKitDatabaseController observers]
  -[BCCloudKitDatabaseController detach]
  -[BCCloudKitDatabaseController hasSubscription]
  -[BCCloudKitDatabaseController setHasSubscription:]
  -[BCCloudKitDatabaseController changedRecordZoneIDs]
  -[BCCloudKitDatabaseController recordZones]
  -[BCCloudKitDatabaseController subscriptionID]
  -[BCCloudKitDatabaseController userRecordID]
  -[BCCloudKitDatabaseController setRecordZones:]
  -[BCCloudKitDatabaseController setUserRecordID:]
  -[BCCloudKitDatabaseController serverChangeToken]
  -[BCCloudKitDatabaseController setServerChangeToken:]
  -[BCCloudKitDatabaseController setSubscriptionID:]
  -[BCCloudKitDatabaseController setAppBundleIdentifier:]
  -[BCCloudKitDatabaseController setAccessQueue:]
  -[BCCloudKitDatabaseController archiveURL]
  -[BCCloudKitDatabaseController setArchiveURL:]
  -[BCCloudKitDatabaseController setBackOffInterval:]
  -[BCCloudKitDatabaseController backOffInterval]
  -[BCCloudKitDatabaseController fetchChangesWithCompletion:]
  -[BCCloudKitDatabaseController establishedSalt]
  -[BCCloudKitDatabaseController addObserver:recordType:]
  -[BCCloudKitDatabaseController removeObserver:recordType:]
  -[BCCloudKitDatabaseController recordNameFromRecordType:identifier:]
  -[BCCloudKitDatabaseController p_unarchive]
  -[BCCloudKitDatabaseController p_internetReachabilityChanged:]
  -[BCCloudKitDatabaseController p_archiveToData]
  -[BCCloudKitDatabaseController attachedToContainer]
  -[BCCloudKitDatabaseController fetchRecordZoneChangesSuccess]
  -[BCCloudKitDatabaseController setAttachedToContainer:]
  -[BCCloudKitDatabaseController p_informObserversOfAttachmentChange]
  -[BCCloudKitDatabaseController p_fetchZoneChanges:]
  -[BCCloudKitDatabaseController coalescedZoneFetch]
  -[BCCloudKitDatabaseController p_fetchDatabaseChanges:]
  -[BCCloudKitDatabaseController p_unsubscribeToContainer:]
  -[BCCloudKitDatabaseController p_scheduleArchiveWithCompletion:]
  -[BCCloudKitDatabaseController p_subscribeWithCompletion:]
  -[BCCloudKitDatabaseController desiredRecordZoneIDs]
  -[BCCloudKitDatabaseController p_createRecordIDSaltWithCompletion:]
  -[BCCloudKitDatabaseController zonesUnreadableDueToMissingD2DEncryptionIdentity:completion:]
  -[BCCloudKitDatabaseController zonesTemporarilyUnreadableDueToMissingD2DEncryptionIdentity:completion:]
  -[BCCloudKitDatabaseController p_createRecordZones:completionHandler:]
  -[BCCloudKitDatabaseController detachWithCompletion:]
  -[BCCloudKitDatabaseController recordIDSalt]
  -[BCCloudKitDatabaseController saltedAndHashedIDFromLocalID:]
  -[BCCloudKitDatabaseController setRecordIDSalt:]
  -[BCCloudKitDatabaseController serverFetchPostponed]
  -[BCCloudKitDatabaseController tokenStores]
  -[BCCloudKitDatabaseController p_informObserversOfCompletedFetchOfZone:]
  -[BCCloudKitDatabaseController p_fetchRecordZoneChangesForRecordZoneIDs:completionHandler:]
  -[BCCloudKitDatabaseController p_fetchRecordZoneChanges:optionsByRecordZoneID:completionHandler:]
  -[BCCloudKitDatabaseController p_informObserversOfRecordsChanged:forRecordType:]
  -[BCCloudKitDatabaseController p_informObserversOfRecordsChanged:]
  -[BCCloudKitDatabaseController setServerFetchPostponed:]
  -[BCCloudKitDatabaseController p_updateRetryParametersFromFetchZoneChangesOperationError:]
  -[BCCloudKitDatabaseController setFetchRecordZoneChangesSuccess:]
  -[BCCloudKitDatabaseController coalescedArchive]
  -[BCCloudKitDatabaseController p_unarchiveFromData:]
  -[BCCloudKitDatabaseController attachToZones:completion:]
  -[BCCloudKitDatabaseController _deleteRecordZonesWithIDs:qualityOfService:completion:]
  -[BCCloudKitDatabaseController initWithSubscriptionID:appBundleIdentifier:archiveURL:]
  -[BCCloudKitDatabaseController fetchRecordForRecordID:completion:]
  -[BCCloudKitDatabaseController willAttachToContainer:serviceMode:completion:]
  -[BCCloudKitDatabaseController connectUserTo:container:updateSubscription:completion:subscriptionCompletion:]
  -[BCCloudKitDatabaseController getAttached:]
  -[BCCloudKitDatabaseController recordZoneWithName:completionHandler:]
  -[BCCloudKitDatabaseController registerServerChangeTokenStore:forZoneID:]
  -[BCCloudKitDatabaseController unregisterServerChangeTokenStore:]
  -[BCCloudKitDatabaseController setDesiredRecordZoneIDs:]
  -[BCCloudKitDatabaseController setChangedRecordZoneIDs:]
  -[BCCloudKitDatabaseController setCoalescedArchive:]
  -[BCCloudKitDatabaseController setTokenStores:]
  -[BCCloudKitDatabaseController setCoalescedZoneFetch:]


BDSLiverpoolStatusMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  BDSICloudIdentityToken *lastArchivedICloudIdentityToken
 @property  BDSICloudIdentityToken *lastArchivedNonNilICloudIdentityToken
 @property  BDSICloudIdentityToken *currentICloudIdentityToken
 @property  BOOL optedIn
 @property  BOOL optedInKnown
 @property  BOOL lastArchivedNonNilICloudIdentityTokenWasNonNilAtColdLaunch
 @property  int tccNotifyToken
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  NSObject<OS_dispatch_queue> *containerQueue
 @property  NSObject<OS_dispatch_queue> *notifyQueue
 @property  NSHashTable *observers
 @property  <BDSLiverpoolStatusChangeObserving> *coordinatingObserver
 @property  BCICloudIdentityToken *iCloudIdentityToken
 @property  BOOL userIdentityPreviouslyRecordedOnThisDevice

  // instance methods
  -[BDSLiverpoolStatusMonitor init]
  -[BDSLiverpoolStatusMonitor dealloc]
  -[BDSLiverpoolStatusMonitor .cxx_destruct]
  -[BDSLiverpoolStatusMonitor addObserver:]
  -[BDSLiverpoolStatusMonitor removeObserver:]
  -[BDSLiverpoolStatusMonitor optedIn]
  -[BDSLiverpoolStatusMonitor dispatchQueue]
  -[BDSLiverpoolStatusMonitor isCloudKitEnabled]
  -[BDSLiverpoolStatusMonitor setDispatchQueue:]
  -[BDSLiverpoolStatusMonitor setObservers:]
  -[BDSLiverpoolStatusMonitor observers]
  -[BDSLiverpoolStatusMonitor notifyQueue]
  -[BDSLiverpoolStatusMonitor setNotifyQueue:]
  -[BDSLiverpoolStatusMonitor setOptedIn:]
  -[BDSLiverpoolStatusMonitor containerQueue]
  -[BDSLiverpoolStatusMonitor setContainerQueue:]
  -[BDSLiverpoolStatusMonitor dq_refreshICloudAvailabilityStatus]
  -[BDSLiverpoolStatusMonitor p_iCloudIdentityDidChange:]
  -[BDSLiverpoolStatusMonitor setTccNotifyToken:]
  -[BDSLiverpoolStatusMonitor optedInKnown]
  -[BDSLiverpoolStatusMonitor refreshICloudTokensAndUpdateWithOptedIn:]
  -[BDSLiverpoolStatusMonitor dq_archiveCurrentICloudIdentityToken]
  -[BDSLiverpoolStatusMonitor tccNotifyToken]
  -[BDSLiverpoolStatusMonitor lastArchivedNonNilICloudIdentityTokenWasNonNilAtColdLaunch]
  -[BDSLiverpoolStatusMonitor lastArchivedNonNilICloudIdentityToken]
  -[BDSLiverpoolStatusMonitor currentICloudIdentityToken]
  -[BDSLiverpoolStatusMonitor dq_isCloudKitEnabled]
  -[BDSLiverpoolStatusMonitor setCoordinatingObserver:]
  -[BDSLiverpoolStatusMonitor lastArchivedICloudIdentityToken]
  -[BDSLiverpoolStatusMonitor _notifyObserversWithCurrentToken:lastToken:]
  -[BDSLiverpoolStatusMonitor coordinatingObserver]
  -[BDSLiverpoolStatusMonitor updateWithOptedIn:]
  -[BDSLiverpoolStatusMonitor userIdentityPreviouslyRecordedOnThisDevice]
  -[BDSLiverpoolStatusMonitor iCloudIdentityToken]
  -[BDSLiverpoolStatusMonitor registerCoordinatingObserver:]
  -[BDSLiverpoolStatusMonitor restartObserving]
  -[BDSLiverpoolStatusMonitor setLastArchivedICloudIdentityToken:]
  -[BDSLiverpoolStatusMonitor setLastArchivedNonNilICloudIdentityToken:]
  -[BDSLiverpoolStatusMonitor setCurrentICloudIdentityToken:]
  -[BDSLiverpoolStatusMonitor setOptedInKnown:]
  -[BDSLiverpoolStatusMonitor setLastArchivedNonNilICloudIdentityTokenWasNonNilAtColdLaunch:]


BDSUserAccount : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *prewarmQueue
 @property  BOOL cachedIsPrimaryAccountManagedAppleID
 @property  BOOL cachedICloudValuesPrewarmed
 @property  BOOL cachedIsUserSignedInToiCloud
 @property  NSString *cachedICloudIdentity
 @property  NSString *cachedICloudAccountName
 @property  BOOL cachedIsGlobalICloudDriveSyncOptedIn
 @property  ACAccountStore *accountStore
 @property  int tccNotifyToken

  // class methods
  +[BDSUserAccount sharedInstance]
  +[BDSUserAccount prewarm]
  +[BDSUserAccount storeFrontIdentifier]
  +[BDSUserAccount storeAccountID]
  +[BDSUserAccount iCloudAccountName]
  +[BDSUserAccount storeAccountName]
  +[BDSUserAccount isUserSignedInToiCloud]
  +[BDSUserAccount isGlobalICloudDriveSyncOptedIn]
  +[BDSUserAccount iCloudIdentity]
  +[BDSUserAccount isPrimaryAccountManagedAppleID]
  +[BDSUserAccount isStoreAccountManagedAppleID]
  +[BDSUserAccount isUserSignedInToiTunes]
  +[BDSUserAccount detectedUserSwitchWithId:outSignedIn:outSignedOut:outAccountNumberChanged:]
  +[BDSUserAccount lastUsedStoreAccountID]
  +[BDSUserAccount clearLastUsedStoreAccountID]
  +[BDSUserAccount updateLastUsedStoreAccountID]
  +[BDSUserAccount isAccountModificationAllowed]
  +[BDSUserAccount clearCachedData]

  // instance methods
  -[BDSUserAccount init]
  -[BDSUserAccount dealloc]
  -[BDSUserAccount .cxx_destruct]
  -[BDSUserAccount setAccountStore:]
  -[BDSUserAccount accountStore]
  -[BDSUserAccount _iCloudAccountName]
  -[BDSUserAccount setTccNotifyToken:]
  -[BDSUserAccount tccNotifyToken]
  -[BDSUserAccount _prewarmAsyncICloudValuesIfNeeded]
  -[BDSUserAccount _isPrimaryAccountManagedAppleID]
  -[BDSUserAccount _isUserSignedInToiCloud]
  -[BDSUserAccount _iCloudIdentity]
  -[BDSUserAccount _isGlobalICloudDriveSyncOptedIn]
  -[BDSUserAccount _clearCachedData]
  -[BDSUserAccount prewarmQueue]
  -[BDSUserAccount setCachedICloudValuesPrewarmed:]
  -[BDSUserAccount cachedICloudValuesPrewarmed]
  -[BDSUserAccount _evaluateIsPrimaryAccountManagedAppleIDForAccount:]
  -[BDSUserAccount setCachedIsPrimaryAccountManagedAppleID:]
  -[BDSUserAccount _evaluateIsUserSignedInToiCloudForAccount:]
  -[BDSUserAccount setCachedIsUserSignedInToiCloud:]
  -[BDSUserAccount _evaluateICloudAccountNameForAccount:]
  -[BDSUserAccount setCachedICloudAccountName:]
  -[BDSUserAccount _evaluateICloudIdentityForAccount:]
  -[BDSUserAccount setCachedICloudIdentity:]
  -[BDSUserAccount _evaluateIsGlobalICloudDriveSyncOptedInForAccount:]
  -[BDSUserAccount setCachedIsGlobalICloudDriveSyncOptedIn:]
  -[BDSUserAccount _cacheValues]
  -[BDSUserAccount _prewarmICloudValuesIfNeeded]
  -[BDSUserAccount cachedIsPrimaryAccountManagedAppleID]
  -[BDSUserAccount cachedIsUserSignedInToiCloud]
  -[BDSUserAccount cachedICloudAccountName]
  -[BDSUserAccount cachedICloudIdentity]
  -[BDSUserAccount cachedIsGlobalICloudDriveSyncOptedIn]
  -[BDSUserAccount setPrewarmQueue:]


BCCloudChangeTokenController : NSObject /usr/lib/libSystem.B.dylib <BCCloudKitChangeTokenStore>
 @property  NSManagedObjectContext *moc
 @property  NSString *zoneName
 @property  BCCloudKitController *cloudKitController
 @property  BOOL enableCloudSync

  // instance methods
  -[BCCloudChangeTokenController .cxx_destruct]
  -[BCCloudChangeTokenController cloudSyncEnabled]
  -[BCCloudChangeTokenController zoneName]
  -[BCCloudChangeTokenController setZoneName:]
  -[BCCloudChangeTokenController moc]
  -[BCCloudChangeTokenController setMoc:]
  -[BCCloudChangeTokenController dissociateCloudDataFromSyncWithCompletion:]
  -[BCCloudChangeTokenController deleteCloudDataWithCompletion:]
  -[BCCloudChangeTokenController cloudKitController]
  -[BCCloudChangeTokenController setCloudKitController:]
  -[BCCloudChangeTokenController enableCloudSync]
  -[BCCloudChangeTokenController setEnableCloudSync:]
  -[BCCloudChangeTokenController initWithMOC:zoneName:cloudKitController:]
  -[BCCloudChangeTokenController serverChangeTokenWithCompletion:]
  -[BCCloudChangeTokenController storeServerChangeToken:completion:]


BCSecureUserDatum : BCCloudData <BCSecureUserDatum>
 @property  NSString *key
 @property  NSString *value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCSecureUserDatum propertyIDKey]

  // instance methods
  -[BCSecureUserDatum mutableCopy]
  -[BCSecureUserDatum identifier]
  -[BCSecureUserDatum recordType]
  -[BCSecureUserDatum zoneName]
  -[BCSecureUserDatum isEqualExceptForDate:]
  -[BCSecureUserDatum configureFromCloudData:withMergers:]
  -[BCSecureUserDatum resolveConflictsFromRecord:withResolvers:]
  -[BCSecureUserDatum _configureFromUserDatum:withMergers:]


BCMutableSecureUserDatum : BCMutableCloudData <BCSecureUserDatum, NSSecureCoding>
 @property  NSString *value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate
 @property  NSString *key

  // class methods
  +[BCMutableSecureUserDatum supportsSecureCoding]

  // instance methods
  -[BCMutableSecureUserDatum key]
  -[BCMutableSecureUserDatum encodeWithCoder:]
  -[BCMutableSecureUserDatum initWithCoder:]
  -[BCMutableSecureUserDatum .cxx_destruct]
  -[BCMutableSecureUserDatum identifier]
  -[BCMutableSecureUserDatum value]
  -[BCMutableSecureUserDatum setValue:]
  -[BCMutableSecureUserDatum initWithKey:]
  -[BCMutableSecureUserDatum recordType]
  -[BCMutableSecureUserDatum zoneName]
  -[BCMutableSecureUserDatum initWithRecord:]
  -[BCMutableSecureUserDatum initWithCloudData:]
  -[BCMutableSecureUserDatum configuredRecordFromAttributes]


BDSReachability : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BDSReachability reachabilityWithAddress:]
  +[BDSReachability reachabilityWithHostName:]
  +[BDSReachability reachabilityForInternetConnection]
  +[BDSReachability reachabilityForLocalWiFi]
  +[BDSReachability isOffline]
  +[BDSReachability sharedReachabilityForInternetConnection]
  +[BDSReachability _updateIsOffline]

  // instance methods
  -[BDSReachability dealloc]
  -[BDSReachability localWiFiStatusForFlags:]
  -[BDSReachability networkStatusForFlags:]
  -[BDSReachability connectionRequired]
  -[BDSReachability currentReachabilityStatus]
  -[BDSReachability stopNotifier]
  -[BDSReachability startNotifier]


BDSOSTransaction : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_os_transaction> *osTransaction

  // instance methods
  -[BDSOSTransaction dealloc]
  -[BDSOSTransaction .cxx_destruct]
  -[BDSOSTransaction endTransaction]
  -[BDSOSTransaction setOsTransaction:]
  -[BDSOSTransaction osTransaction]
  -[BDSOSTransaction initWithTransactionName:]


BCCloudAssetManager : NSObject /usr/lib/libSystem.B.dylib <BDSCloudKitSupportSignOut>
 @property  BCCloudAssetAnnotationManager *assetAnnotationManager
 @property  NSObject<BCCloudAssetDetailManager> *assetDetailManager
 @property  NSObject<BCCloudReadingNowDetailManager> *readingNowDetailManager
 @property  NSObject<BCCloudAssetReviewManager> *assetReviewManager
 @property  NSObject<BCCloudStoreAssetManager> *storeAssetManager
 @property  BCCloudChangeTokenController *changeTokenController
 @property  NSManagedObjectModel *objectModel
 @property  BDSServiceProxy *serviceProxy
 @property  BOOL proxyMode
 @property  BCCloudDataSource *assetDataSource

  // class methods
  +[BCCloudAssetManager sharedManager]
  +[BCCloudAssetManager sharedClientXPCProxy]

  // instance methods
  -[BCCloudAssetManager dealloc]
  -[BCCloudAssetManager .cxx_destruct]
  -[BCCloudAssetManager serviceProxy]
  -[BCCloudAssetManager setServiceProxy:]
  -[BCCloudAssetManager setObjectModel:]
  -[BCCloudAssetManager objectModel]
  -[BCCloudAssetManager dissociateCloudDataFromSyncWithCompletion:]
  -[BCCloudAssetManager setEnableCloudSync:enableReadingNowSync:]
  -[BCCloudAssetManager deleteCloudDataWithCompletion:]
  -[BCCloudAssetManager storeAssetManager]
  -[BCCloudAssetManager initClientXPCProxy]
  -[BCCloudAssetManager changeTokenController]
  -[BCCloudAssetManager setChangeTokenController:]
  -[BCCloudAssetManager proxyMode]
  -[BCCloudAssetManager setProxyMode:]
  -[BCCloudAssetManager assetAnnotationManager]
  -[BCCloudAssetManager assetDataSource]
  -[BCCloudAssetManager setAssetDataSource:]
  -[BCCloudAssetManager setAssetAnnotationManager:]
  -[BCCloudAssetManager assetDetailManager]
  -[BCCloudAssetManager setAssetDetailManager:]
  -[BCCloudAssetManager readingNowDetailManager]
  -[BCCloudAssetManager setReadingNowDetailManager:]
  -[BCCloudAssetManager assetReviewManager]
  -[BCCloudAssetManager setAssetReviewManager:]
  -[BCCloudAssetManager setStoreAssetManager:]


BCCloudDataSyncManager : NSObject /usr/lib/libSystem.B.dylib <BCCloudKitDatabaseObserver>
 @property  BCCloudKitController *cloudKitController
 @property  <BCCloudDataMapper> *dataMapper
 @property  NSObject<OS_dispatch_queue> *syncQueue
 @property  BOOL processingCloudData
 @property  double backOffInterval
 @property  unsigned long tooBigBatch
 @property  BOOL serverPushPostponed
 @property  <BCCloudDataSyncManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCCloudDataSyncManager delegate]
  -[BCCloudDataSyncManager setDelegate:]
  -[BCCloudDataSyncManager .cxx_destruct]
  -[BCCloudDataSyncManager syncQueue]
  -[BCCloudDataSyncManager setSyncQueue:]
  -[BCCloudDataSyncManager setBackOffInterval:]
  -[BCCloudDataSyncManager backOffInterval]
  -[BCCloudDataSyncManager cloudKitController]
  -[BCCloudDataSyncManager setCloudKitController:]
  -[BCCloudDataSyncManager initWithCloudKitController:]
  -[BCCloudDataSyncManager startSyncToCKWithCompletion:]
  -[BCCloudDataSyncManager databaseController:recordWithIDWasDeleted:recordType:]
  -[BCCloudDataSyncManager databaseController:reachabilityChanged:]
  -[BCCloudDataSyncManager databaseController:attachmentChanged:]
  -[BCCloudDataSyncManager databaseController:recordsChanged:]
  -[BCCloudDataSyncManager databaseController:fetchedAllRecordsInZone:]
  -[BCCloudDataSyncManager fetchRecordForRecordID:completion:]
  -[BCCloudDataSyncManager initWithCloudKitController:dataMapper:]
  -[BCCloudDataSyncManager _syncQueueSyncForCloudData:completion:]
  -[BCCloudDataSyncManager serverPushPostponed]
  -[BCCloudDataSyncManager tooBigBatch]
  -[BCCloudDataSyncManager _maxCloudDataPerBatch]
  -[BCCloudDataSyncManager dataMapper]
  -[BCCloudDataSyncManager setTooBigBatch:]
  -[BCCloudDataSyncManager _leaveDispatchGroup:times:]
  -[BCCloudDataSyncManager setServerPushPostponed:]
  -[BCCloudDataSyncManager _updateRetryParametersFromModifyRecordsOperationError:batchSize:]
  -[BCCloudDataSyncManager setProcessingCloudData:]
  -[BCCloudDataSyncManager _batchFromCloudData:]
  -[BCCloudDataSyncManager _fromBatch:getRecordsToSave:recordIDsToDelete:buildingMap:]
  -[BCCloudDataSyncManager _enterDispatchGroup:times:]
  -[BCCloudDataSyncManager _modifyRecordsCompletionBlockWithDispatchGroup:cloudDataMap:recordCount:]
  -[BCCloudDataSyncManager syncCloudData:completion:]
  -[BCCloudDataSyncManager signalSyncToCK]
  -[BCCloudDataSyncManager setDataMapper:]
  -[BCCloudDataSyncManager processingCloudData]


BCCloudKitSecureConfiguration : NSObject /usr/lib/libSystem.B.dylib <BCContainerConfiguration>
 @property  NSString *queueIdentifier
 @property  NSString *containerIdentifier
 @property  NSArray *appZones
 @property  NSArray *serviceZones
 @property  NSString *dbArchiveFolderName
 @property  NSString *dbArchiveExtension
 @property  NSString *dbArchiveFilename
 @property  NSString *dbSubscriptionID
 @property  NSString *appBundleIdentifier
 @property  BOOL requiresDeviceToDeviceEncryption
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCCloudKitSecureConfiguration configuration]

  // instance methods
  -[BCCloudKitSecureConfiguration .cxx_destruct]
  -[BCCloudKitSecureConfiguration containerIdentifier]
  -[BCCloudKitSecureConfiguration setContainerIdentifier:]
  -[BCCloudKitSecureConfiguration appBundleIdentifier]
  -[BCCloudKitSecureConfiguration setAppBundleIdentifier:]
  -[BCCloudKitSecureConfiguration queueIdentifier]
  -[BCCloudKitSecureConfiguration setQueueIdentifier:]
  -[BCCloudKitSecureConfiguration requiresDeviceToDeviceEncryption]
  -[BCCloudKitSecureConfiguration setAppZones:]
  -[BCCloudKitSecureConfiguration setServiceZones:]
  -[BCCloudKitSecureConfiguration setDbArchiveFolderName:]
  -[BCCloudKitSecureConfiguration setDbArchiveExtension:]
  -[BCCloudKitSecureConfiguration setDbArchiveFilename:]
  -[BCCloudKitSecureConfiguration setDbSubscriptionID:]
  -[BCCloudKitSecureConfiguration setRequiresDeviceToDeviceEncryption:]
  -[BCCloudKitSecureConfiguration shouldArchiveData:]
  -[BCCloudKitSecureConfiguration shouldPerformDatabaseSubscriptionForServiceMode:]
  -[BCCloudKitSecureConfiguration appZones]
  -[BCCloudKitSecureConfiguration serviceZones]
  -[BCCloudKitSecureConfiguration dbArchiveFolderName]
  -[BCCloudKitSecureConfiguration dbArchiveExtension]
  -[BCCloudKitSecureConfiguration dbArchiveFilename]
  -[BCCloudKitSecureConfiguration dbSubscriptionID]


BCCloudKitController : NSObject /usr/lib/libSystem.B.dylib <BDSCloudKitSupportSignOutDeleteWithoutInstance>
 @property  BCCloudKitTransactionManager *transactionManager
 @property  CKContainer *container
 @property  BCCloudKitDatabaseController *privateCloudDatabaseController
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  BOOL gettingAccountInfo
 @property  BOOL enableCloudSync
 @property  BOOL serviceMode
 @property  BOOL didChangeContainer
 @property  <BCContainerConfiguration> *configuration
 @property  BUCoalescingCallBlock *coalescedAttachment

  // class methods
  +[BCCloudKitController sharedInstance]
  +[BCCloudKitController deleteCloudDataWithCompletion:]
  +[BCCloudKitController secureSharedInstance]
  +[BCCloudKitController p_privateDatabaseArchiveURLForConfiguration:]
  +[BCCloudKitController registerForSecureNotifications]
  +[BCCloudKitController databaseFolderURLForConfiguration:]
  +[BCCloudKitController p_createDatabaseArchiveDirectoryForConfiguration:]

  // instance methods
  -[BCCloudKitController container]
  -[BCCloudKitController setContainer:]
  -[BCCloudKitController .cxx_destruct]
  -[BCCloudKitController accessQueue]
  -[BCCloudKitController setConfiguration:]
  -[BCCloudKitController configuration]
  -[BCCloudKitController initWithConfiguration:]
  -[BCCloudKitController applicationDidBecomeActive]
  -[BCCloudKitController setAccessQueue:]
  -[BCCloudKitController transactionManager]
  -[BCCloudKitController setTransactionManager:]
  -[BCCloudKitController privateCloudDatabaseController]
  -[BCCloudKitController enableCloudSync]
  -[BCCloudKitController setEnableCloudSync:]
  -[BCCloudKitController didChangeContainer]
  -[BCCloudKitController p_accountChanged:]
  -[BCCloudKitController p_identityChanged:]
  -[BCCloudKitController serviceMode]
  -[BCCloudKitController p_updateAttachment]
  -[BCCloudKitController coalescedAttachment]
  -[BCCloudKitController gettingAccountInfo]
  -[BCCloudKitController p_getAccountInfo]
  -[BCCloudKitController setGettingAccountInfo:]
  -[BCCloudKitController p_getNecessaryAccountInfoFromContainer:completion:]
  -[BCCloudKitController setEnableCloudSync:serviceMode:]
  -[BCCloudKitController handleRemoteNotification:]
  -[BCCloudKitController setPrivateCloudDatabaseController:]
  -[BCCloudKitController setDidChangeContainer:]
  -[BCCloudKitController setServiceMode:]
  -[BCCloudKitController setCoalescedAttachment:]


BCCloudDataSource : NSObject /usr/lib/libSystem.B.dylib <BDSCloudKitSupportSignOutDeleteWithoutInstance>
 @property  NSManagedObjectModel *managedObjectModel
 @property  NSManagedObjectContext *managedObjectContext
 @property  NSPersistentStoreCoordinator *persistentStoreCoordinator
 @property  BOOL setupPersistentStore

  // class methods
  +[BCCloudDataSource deleteCloudDataWithCompletion:]
  +[BCCloudDataSource _persistentStoreDirectory]

  // instance methods
  -[BCCloudDataSource .cxx_destruct]
  -[BCCloudDataSource managedObjectModel]
  -[BCCloudDataSource setPersistentStoreCoordinator:]
  -[BCCloudDataSource persistentStoreCoordinator]
  -[BCCloudDataSource setManagedObjectModel:]
  -[BCCloudDataSource managedObjectContext]
  -[BCCloudDataSource setManagedObjectContext:]
  -[BCCloudDataSource initWithPersistentStoreCoordinator:]
  -[BCCloudDataSource initWithManagedObjectModel:persistentStorePath:]
  -[BCCloudDataSource _setupPersistentStoreCoordinatorWithPath:]
  -[BCCloudDataSource setupPersistentStore]
  -[BCCloudDataSource _setupManagedObjectContextWithCoordinator:]
  -[BCCloudDataSource _persistentStoreOptions]
  -[BCCloudDataSource _createPersistentStoreDirectory]
  -[BCCloudDataSource _logIfError:operation:]
  -[BCCloudDataSource setSetupPersistentStore:]


BCReadingNowDetail : BCCloudData <BCReadingNowDetail>
 @property  NSString *assetID
 @property  BOOL isTrackedAsRecent
 @property  NSDate *lastEngagedDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCReadingNowDetail propertyIDKey]

  // instance methods
  -[BCReadingNowDetail mutableCopy]
  -[BCReadingNowDetail identifier]
  -[BCReadingNowDetail recordType]
  -[BCReadingNowDetail zoneName]
  -[BCReadingNowDetail isEqualExceptForDate:]
  -[BCReadingNowDetail configureFromCloudData:withMergers:]
  -[BCReadingNowDetail resolveConflictsFromRecord:withResolvers:]
  -[BCReadingNowDetail _configureFromReadingNowDetail:withMergers:]


BCMutableReadingNowDetail : BCMutableCloudData <BCReadingNowDetail, NSSecureCoding>
 @property  NSString *assetID
 @property  BOOL isTrackedAsRecent
 @property  NSDate *lastEngagedDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCMutableReadingNowDetail supportsSecureCoding]

  // instance methods
  -[BCMutableReadingNowDetail encodeWithCoder:]
  -[BCMutableReadingNowDetail initWithCoder:]
  -[BCMutableReadingNowDetail .cxx_destruct]
  -[BCMutableReadingNowDetail identifier]
  -[BCMutableReadingNowDetail recordType]
  -[BCMutableReadingNowDetail zoneName]
  -[BCMutableReadingNowDetail initWithRecord:]
  -[BCMutableReadingNowDetail assetID]
  -[BCMutableReadingNowDetail setAssetID:]
  -[BCMutableReadingNowDetail setLastEngagedDate:]
  -[BCMutableReadingNowDetail lastEngagedDate]
  -[BCMutableReadingNowDetail initWithCloudData:]
  -[BCMutableReadingNowDetail configuredRecordFromAttributes]
  -[BCMutableReadingNowDetail initWithAssetID:]
  -[BCMutableReadingNowDetail isTrackedAsRecent]
  -[BCMutableReadingNowDetail setIsTrackedAsRecent:]


BCAnnotationsProtoBook : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  NSString *assetID
 @property  NSString *appVersion
 @property  BOOL hasAssetVersion
 @property  NSString *assetVersion
 @property  NSMutableArray *annotations

  // class methods
  +[BCAnnotationsProtoBook annotationType]

  // instance methods
  -[BCAnnotationsProtoBook isEqual:]
  -[BCAnnotationsProtoBook copyWithZone:]
  -[BCAnnotationsProtoBook .cxx_destruct]
  -[BCAnnotationsProtoBook dictionaryRepresentation]
  -[BCAnnotationsProtoBook writeTo:]
  -[BCAnnotationsProtoBook assetVersion]
  -[BCAnnotationsProtoBook mergeFrom:]
  -[BCAnnotationsProtoBook readFrom:]
  -[BCAnnotationsProtoBook copyTo:]
  -[BCAnnotationsProtoBook appVersion]
  -[BCAnnotationsProtoBook setAppVersion:]
  -[BCAnnotationsProtoBook assetID]
  -[BCAnnotationsProtoBook setAssetID:]
  -[BCAnnotationsProtoBook annotations]
  -[BCAnnotationsProtoBook addAnnotation:]
  -[BCAnnotationsProtoBook clearAnnotations]
  -[BCAnnotationsProtoBook setAnnotations:]
  -[BCAnnotationsProtoBook setAssetVersion:]
  -[BCAnnotationsProtoBook hasAssetVersion]
  -[BCAnnotationsProtoBook annotationsCount]
  -[BCAnnotationsProtoBook annotationAtIndex:]


BDSApplication : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BDSApplication applicationCacheDirectory]
  +[BDSApplication applicationDocumentsDirectory]


BCCollectionMember : BCCloudData <BCCollectionMember>
 @property  NSString *collectionMemberID
 @property  int sortOrder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCCollectionMember propertyIDKey]
  +[BCCollectionMember collectionMemberIDWithCollectionID:assetID:]
  +[BCCollectionMember assetIDFromCollectionMemberID:]
  +[BCCollectionMember collectionIDFromCollectionMemberID:]

  // instance methods
  -[BCCollectionMember mutableCopy]
  -[BCCollectionMember identifier]
  -[BCCollectionMember recordType]
  -[BCCollectionMember zoneName]
  -[BCCollectionMember isEqualExceptForDate:]
  -[BCCollectionMember configureFromCloudData:withMergers:]
  -[BCCollectionMember resolveConflictsFromRecord:withResolvers:]
  -[BCCollectionMember _configureFromCollectionMember:withMergers:]


BCMutableCollectionMember : BCMutableCloudData <BCCollectionMember, NSSecureCoding>
 @property  NSString *collectionMemberID
 @property  int sortOrder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCMutableCollectionMember supportsSecureCoding]

  // instance methods
  -[BCMutableCollectionMember encodeWithCoder:]
  -[BCMutableCollectionMember initWithCoder:]
  -[BCMutableCollectionMember .cxx_destruct]
  -[BCMutableCollectionMember identifier]
  -[BCMutableCollectionMember recordType]
  -[BCMutableCollectionMember zoneName]
  -[BCMutableCollectionMember initWithRecord:]
  -[BCMutableCollectionMember sortOrder]
  -[BCMutableCollectionMember setSortOrder:]
  -[BCMutableCollectionMember initWithCloudData:]
  -[BCMutableCollectionMember configuredRecordFromAttributes]
  -[BCMutableCollectionMember initWithCollectionMemberID:]
  -[BCMutableCollectionMember collectionMemberID]
  -[BCMutableCollectionMember setCollectionMemberID:]


BookDataStoreBundleLookupClass : NSObject /usr/lib/libSystem.B.dylib

BDSUserPreferencesSync : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BDSUserPreferencesSync syncedPreferenceKeys]
  +[BDSUserPreferencesSync copyChangedLocalPreferencesToGroupContainerWithAppSuiteName:container:groupName:groupContainer:]
  +[BDSUserPreferencesSync objectFromGroupPreferencesForKey:]
  +[BDSUserPreferencesSync copyChangedGroupPreferencesToLocalContainer]
  +[BDSUserPreferencesSync copyChangedLocalPreferencesToGroupContainer]


BDSICloudIdentityToken : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *token

  // class methods
  +[BDSICloudIdentityToken tokenForCurrentIdentityIfCloudKitEnabled]

  // instance methods
  -[BDSICloudIdentityToken isEqual:]
  -[BDSICloudIdentityToken copyWithZone:]
  -[BDSICloudIdentityToken token]
  -[BDSICloudIdentityToken .cxx_destruct]
  -[BDSICloudIdentityToken initWithToken:]
  -[BDSICloudIdentityToken setToken:]
  -[BDSICloudIdentityToken initWithCurrentIdentity]
  -[BDSICloudIdentityToken initFromArchive:]
  -[BDSICloudIdentityToken _hashFor:]


BCAssetDetail : BCCloudData <BCAssetDetail>
 @property  NSString *assetID
 @property  BOOL isFinished
 @property  BOOL notFinished
 @property  NSDate *lastOpenDate
 @property  NSDate *dateFinished
 @property  short taste
 @property  short tasteSyncedToStore
 @property  float readingProgress
 @property  float readingProgressHighWaterMark
 @property  NSString *readingPositionCFIString
 @property  NSString *readingPositionAnnotationVersion
 @property  NSString *readingPositionAssetVersion
 @property  NSData *readingPositionUserData
 @property  int readingPositionLocationRangeStart
 @property  int readingPositionLocationRangeEnd
 @property  int readingPositionAbsolutePhysicalLocation
 @property  NSString *readingPositionStorageUUID
 @property  NSDate *readingPositionLocationUpdateDate
 @property  NSDate *datePlaybackTimeUpdated
 @property  double bookmarkTime
 @property  BOOL isAudiobook
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCAssetDetail propertyIDKey]

  // instance methods
  -[BCAssetDetail mutableCopy]
  -[BCAssetDetail identifier]
  -[BCAssetDetail recordType]
  -[BCAssetDetail zoneName]
  -[BCAssetDetail isAudiobook]
  -[BCAssetDetail isEqualExceptForDate:]
  -[BCAssetDetail configureFromCloudData:withMergers:]
  -[BCAssetDetail resolveConflictsFromRecord:withResolvers:]
  -[BCAssetDetail _configureFromAssetDetail:withMergers:]
  -[BCAssetDetail setDifferentBookmarkTime:]


BCMutableAssetDetail : BCMutableCloudData <BCAssetDetail, NSSecureCoding>
 @property  NSString *assetID
 @property  BOOL isFinished
 @property  BOOL notFinished
 @property  NSDate *lastOpenDate
 @property  NSDate *dateFinished
 @property  short taste
 @property  short tasteSyncedToStore
 @property  float readingProgress
 @property  float readingProgressHighWaterMark
 @property  NSString *readingPositionCFIString
 @property  NSString *readingPositionAnnotationVersion
 @property  NSString *readingPositionAssetVersion
 @property  NSData *readingPositionUserData
 @property  int readingPositionLocationRangeStart
 @property  int readingPositionLocationRangeEnd
 @property  int readingPositionAbsolutePhysicalLocation
 @property  NSString *readingPositionStorageUUID
 @property  NSDate *readingPositionLocationUpdateDate
 @property  NSDate *datePlaybackTimeUpdated
 @property  double bookmarkTime
 @property  BOOL isAudiobook
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCMutableAssetDetail supportsSecureCoding]

  // instance methods
  -[BCMutableAssetDetail encodeWithCoder:]
  -[BCMutableAssetDetail initWithCoder:]
  -[BCMutableAssetDetail .cxx_destruct]
  -[BCMutableAssetDetail identifier]
  -[BCMutableAssetDetail isFinished]
  -[BCMutableAssetDetail recordType]
  -[BCMutableAssetDetail zoneName]
  -[BCMutableAssetDetail setIsFinished:]
  -[BCMutableAssetDetail initWithRecord:]
  -[BCMutableAssetDetail assetID]
  -[BCMutableAssetDetail setAssetID:]
  -[BCMutableAssetDetail bookmarkTime]
  -[BCMutableAssetDetail setBookmarkTime:]
  -[BCMutableAssetDetail dateFinished]
  -[BCMutableAssetDetail isAudiobook]
  -[BCMutableAssetDetail initWithCloudData:]
  -[BCMutableAssetDetail configuredRecordFromAttributes]
  -[BCMutableAssetDetail readingProgressHighWaterMark]
  -[BCMutableAssetDetail readingProgress]
  -[BCMutableAssetDetail setReadingProgressHighWaterMark:]
  -[BCMutableAssetDetail setReadingProgress:]
  -[BCMutableAssetDetail initWithAssetID:]
  -[BCMutableAssetDetail notFinished]
  -[BCMutableAssetDetail lastOpenDate]
  -[BCMutableAssetDetail taste]
  -[BCMutableAssetDetail tasteSyncedToStore]
  -[BCMutableAssetDetail readingPositionCFIString]
  -[BCMutableAssetDetail readingPositionAnnotationVersion]
  -[BCMutableAssetDetail readingPositionAssetVersion]
  -[BCMutableAssetDetail readingPositionUserData]
  -[BCMutableAssetDetail readingPositionLocationRangeStart]
  -[BCMutableAssetDetail readingPositionLocationRangeEnd]
  -[BCMutableAssetDetail readingPositionAbsolutePhysicalLocation]
  -[BCMutableAssetDetail readingPositionStorageUUID]
  -[BCMutableAssetDetail readingPositionLocationUpdateDate]
  -[BCMutableAssetDetail datePlaybackTimeUpdated]
  -[BCMutableAssetDetail setNotFinished:]
  -[BCMutableAssetDetail setTaste:]
  -[BCMutableAssetDetail setTasteSyncedToStore:]
  -[BCMutableAssetDetail setDateFinished:]
  -[BCMutableAssetDetail setLastOpenDate:]
  -[BCMutableAssetDetail setReadingPositionCFIString:]
  -[BCMutableAssetDetail setReadingPositionAnnotationVersion:]
  -[BCMutableAssetDetail setReadingPositionAssetVersion:]
  -[BCMutableAssetDetail setReadingPositionUserData:]
  -[BCMutableAssetDetail setReadingPositionLocationRangeStart:]
  -[BCMutableAssetDetail setReadingPositionLocationRangeEnd:]
  -[BCMutableAssetDetail setReadingPositionAbsolutePhysicalLocation:]
  -[BCMutableAssetDetail setReadingPositionStorageUUID:]
  -[BCMutableAssetDetail setDatePlaybackTimeUpdated:]
  -[BCMutableAssetDetail setReadingPositionLocationUpdateDate:]


BCCloudKitSyncToCKTransaction : BCCloudKitTransaction
 @property  BCCloudDataSyncManager *syncManager

  // class methods
  +[BCCloudKitSyncToCKTransaction transactionNameForEntityName:]

  // instance methods
  -[BCCloudKitSyncToCKTransaction .cxx_destruct]
  -[BCCloudKitSyncToCKTransaction syncManager]
  -[BCCloudKitSyncToCKTransaction setSyncManager:]
  -[BCCloudKitSyncToCKTransaction performWorkWithCompletion:]
  -[BCCloudKitSyncToCKTransaction coalescingDelay]
  -[BCCloudKitSyncToCKTransaction transactionLifetimeTimout]
  -[BCCloudKitSyncToCKTransaction initWithEntityName:syncManager:delegate:]


BCGlobalMetadatum : BCCloudData <BCGlobalMetadatum>
 @property  NSString *key
 @property  NSString *value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate

  // class methods
  +[BCGlobalMetadatum propertyIDKey]

  // instance methods
  -[BCGlobalMetadatum mutableCopy]
  -[BCGlobalMetadatum identifier]
  -[BCGlobalMetadatum recordType]
  -[BCGlobalMetadatum zoneName]
  -[BCGlobalMetadatum isEqualExceptForDate:]
  -[BCGlobalMetadatum configureFromCloudData:withMergers:]
  -[BCGlobalMetadatum resolveConflictsFromRecord:withResolvers:]
  -[BCGlobalMetadatum _configureFromMetadatum:withMergers:]


BCMutableGlobalMetadatum : BCMutableCloudData <BCGlobalMetadatum>
 @property  NSString *value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL deletedFlag
 @property  NSDate *modificationDate
 @property  long long editGeneration
 @property  long long syncGeneration
 @property  CKRecord *systemFields
 @property  NSData *ckSystemFields
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate
 @property  NSString *key

  // instance methods
  -[BCMutableGlobalMetadatum key]
  -[BCMutableGlobalMetadatum .cxx_destruct]
  -[BCMutableGlobalMetadatum identifier]
  -[BCMutableGlobalMetadatum value]
  -[BCMutableGlobalMetadatum setValue:]
  -[BCMutableGlobalMetadatum initWithKey:]
  -[BCMutableGlobalMetadatum recordType]
  -[BCMutableGlobalMetadatum zoneName]
  -[BCMutableGlobalMetadatum initWithRecord:]
  -[BCMutableGlobalMetadatum initWithCloudData:]
  -[BCMutableGlobalMetadatum configuredRecordFromAttributes]


BDSAppGroupContainer : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BDSAppGroupContainer containerURL]
  +[BDSAppGroupContainer isUnitTesting]
  +[BDSAppGroupContainer containerIdentifier]
  +[BDSAppGroupContainer setUnitTesting:]
  +[BDSAppGroupContainer documentsURL]


BCCloudDataManager : NSObject /usr/lib/libSystem.B.dylib <BDSCloudKitSupportSignOutDissociate>
 @property  NSManagedObjectContext *moc
 @property  BCCloudDataSource *dataSource
 @property  NSObject<OS_dispatch_queue> *responseQueue
 @property  NSString *entityName
 @property  NSString *notificationName
 @property  BCCloudDataSyncManager *syncManager
 @property  Class immutableClass
 @property  Class mutableClass
 @property  <BCCloudDataPrivacyDelegate> *privacyDelegate
 @property  BOOL signalDataChangedTransaction
 @property  BCCloudKitController *cloudKitController
 @property  <BCCloudDataMapper> *dataMapper

  // instance methods
  -[BCCloudDataManager .cxx_destruct]
  -[BCCloudDataManager entityName]
  -[BCCloudDataManager dataSource]
  -[BCCloudDataManager setDataSource:]
  -[BCCloudDataManager privacyDelegate]
  -[BCCloudDataManager setPrivacyDelegate:]
  -[BCCloudDataManager moc]
  -[BCCloudDataManager notificationName]
  -[BCCloudDataManager setMoc:]
  -[BCCloudDataManager setEntityName:]
  -[BCCloudDataManager setNotificationName:]
  -[BCCloudDataManager syncManager]
  -[BCCloudDataManager setSyncManager:]
  -[BCCloudDataManager mutableClass]
  -[BCCloudDataManager _logError:]
  -[BCCloudDataManager setResponseQueue:]
  -[BCCloudDataManager responseQueue]
  -[BCCloudDataManager dissociateCloudDataFromSyncWithCompletion:]
  -[BCCloudDataManager currentCloudSyncVersions:]
  -[BCCloudDataManager cloudKitController]
  -[BCCloudDataManager setCloudKitController:]
  -[BCCloudDataManager initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:]
  -[BCCloudDataManager setCloudData:predicate:completion:]
  -[BCCloudDataManager startSyncToCKWithCompletion:]
  -[BCCloudDataManager updateSyncGenerationFromCloudData:predicate:propertyIDKey:completion:]
  -[BCCloudDataManager resolveConflictsForRecords:completion:]
  -[BCCloudDataManager failedRecordIDs:completion:]
  -[BCCloudDataManager getChangesSince:forEntityClass:completion:]
  -[BCCloudDataManager setCloudData:predicate:propertyIDKey:completion:]
  -[BCCloudDataManager removeCloudDataForPredicate:completion:]
  -[BCCloudDataManager deleteCloudDataForPredicate:completion:]
  -[BCCloudDataManager cloudDataWithPredicate:sortDescriptors:completion:]
  -[BCCloudDataManager fetchCloudDataIncludingDeleted:completion:]
  -[BCCloudDataManager resolvedCloudDataForCloudData:predicate:completion:]
  -[BCCloudDataManager resolveConflictsForRecords:withResolvers:completion:]
  -[BCCloudDataManager resolvedCloudDataForCloudData:withResolvers:predicate:completion:]
  -[BCCloudDataManager dataMapper]
  -[BCCloudDataManager setDataMapper:]
  -[BCCloudDataManager initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:dataMapper:]
  -[BCCloudDataManager mq_cloudSyncVersions]
  -[BCCloudDataManager signalDataChangedTransaction]
  -[BCCloudDataManager setCloudData:predicate:mergers:completion:]
  -[BCCloudDataManager mq_incrementCloudVersion]
  -[BCCloudDataManager mq_signalTransactions]
  -[BCCloudDataManager mq_sanitizeError:]
  -[BCCloudDataManager setCloudData:predicate:propertyIDKey:mergers:completion:]
  -[BCCloudDataManager resolvedCloudDataForCloudData:withResolvers:mergers:predicate:completion:]
  -[BCCloudDataManager resolveConflictsForRecords:withResolvers:mergers:completion:]
  -[BCCloudDataManager immutableClass]
  -[BCCloudDataManager cloudDatasWithPredicate:completion:]
  -[BCCloudDataManager countWithPredicate:completion:]
  -[BCCloudDataManager cloudDatasWithPredicate:sortDescriptors:maximumResultCount:filter:completion:]
  -[BCCloudDataManager transformedCloudDatasWithPredicate:transformer:limit:completion:]
  -[BCCloudDataManager setImmutableClass:]
  -[BCCloudDataManager setMutableClass:]
  -[BCCloudDataManager setSignalDataChangedTransaction:]


NSManagedObjectContext(IMAdditions)
	// class methods
	+[NSManagedObjectContext(IMAdditions) mergePredicate:andPredicate:]

	// instance methods
	-[NSManagedObjectContext(IMAdditions) copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:distinct:]
	-[NSManagedObjectContext(IMAdditions) copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:]
	-[NSManagedObjectContext(IMAdditions) copyEntityPropertyArray:fromEntityName:withPredicate:sortBy:ascending:]
	-[NSManagedObjectContext(IMAdditions) entity:withPredicate:sortDescriptors:fetchLimit:prefetchRelationships:]
	-[NSManagedObjectContext(IMAdditions) entity:withPredicate:sortBy:ascending:fetchLimit:prefetchRelationships:]
	-[NSManagedObjectContext(IMAdditions) entity:withPredicate:sortBy:ascending:fetchLimit:]
	-[NSManagedObjectContext(IMAdditions) im_pushSafeAccessState]
	-[NSManagedObjectContext(IMAdditions) im_popSafeAccessState]
	-[NSManagedObjectContext(IMAdditions) countEntity:withPredicate:]
	-[NSManagedObjectContext(IMAdditions) copyEntityProperty:fromEntityName:withPredicate:]
	-[NSManagedObjectContext(IMAdditions) newByClass:]
	-[NSManagedObjectContext(IMAdditions) objectIDsWithPredicate:forEntity:]
	-[NSManagedObjectContext(IMAdditions) unbatchedObjectsWithPredicate:forEntity:]
	-[NSManagedObjectContext(IMAdditions) entity:withPredicate:]
	-[NSManagedObjectContext(IMAdditions) im_performSafeAccess:]
	-[NSManagedObjectContext(IMAdditions) im_isPerformingSafeAccess]
	-[NSManagedObjectContext(IMAdditions) batchDeleteEntity:matching:prefetchRelationships:]

NSPersistentStoreCoordinator(Common_Stores)
	// instance methods
	-[NSPersistentStoreCoordinator(Common_Stores) hasStoreInCommonWith:]

NSManagedObject(IMAdditions)
	// instance methods
	-[NSManagedObject(IMAdditions) propertiesForKeys:]
	-[NSManagedObject(IMAdditions) setDifferentString:forKey:]
	-[NSManagedObject(IMAdditions) setDifferentNumber:forKey:]
	-[NSManagedObject(IMAdditions) setDifferentDate:forKey:]
	-[NSManagedObject(IMAdditions) setDifferentValue:forKey:klass:]
	-[NSManagedObject(IMAdditions) setDifferentObject:forKey:]

NSError(CoreDataExtras)
	// instance methods
	-[NSError(CoreDataExtras) logRecursively]

NSPointerArray(BDSAdditions)
	// instance methods
	-[NSPointerArray(BDSAdditions) bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:]

NSArray(BDSAdditions)
	// instance methods
	-[NSArray(BDSAdditions) bds_traverseBatchesOfSize:block:]
	-[NSArray(BDSAdditions) bds_arrayByRemovingNSNullsInvokingBlockForNulls:]
	-[NSArray(BDSAdditions) bds_dictionaryUsingPropertyAsKey:]
	-[NSArray(BDSAdditions) bds_arrayByRemovingNSNulls]
	-[NSArray(BDSAdditions) bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:completion:]

NSString(BDSAdditions)
	// class methods
	+[NSString(BDSAdditions) bds_UUID]

NSDictionary(BDSAdditions)
	// instance methods
	-[NSDictionary(BDSAdditions) bds_subDictionaryWithKeys:]

NSPersistentHistoryTransaction(BCCloudManagerBatchSupport)
	// instance methods
	-[NSPersistentHistoryTransaction(BCCloudManagerBatchSupport) bds_atOffset:getAtMost:moc:entityClass:privacyDelegate:updated:tombstones:]

01 00 0700 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 0700 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0100 /System/Library/PrivateFrameworks/BookUtility.framework/BookUtility: BUCoalescingCallBlock 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAsset 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDatabaseSubscription 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchDatabaseChangesOperation 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesConfiguration 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesOperation 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZonesOperation 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordsOperation 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordZonesOperation 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifySubscriptionsOperation 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotification 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotificationInfo 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationConfiguration 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordID 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 0e00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKServerChangeToken 
01 00 0400 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1300 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaPropertyPredicate 
01 00 1300 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaQuery 
01 00 0a00 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0c00 /System/Library/Frameworks/CoreData.framework/CoreData: NSBatchDeleteRequest 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0c00 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0c00 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0c00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 0c00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectContext 
01 00 0c00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0c00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryChangeRequest 
01 00 0c00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryResult 
01 00 0c00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryToken 
01 00 0c00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryTransaction 
01 00 0c00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreCoordinator 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0d00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0d00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBDataReader 
01 00 0d00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBDataWriter 
