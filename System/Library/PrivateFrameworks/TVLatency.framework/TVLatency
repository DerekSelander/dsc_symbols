|| __DATA.__objc_data _OBJC_CLASS_$_TVLALSCalibrationData
|| __DATA.__objc_data _OBJC_CLASS_$_TVLALSData
|| __DATA.__objc_data _OBJC_CLASS_$_TVLALSDataExtractor
|| __DATA.__objc_data _OBJC_CLASS_$_TVLAudioLatencyEstimator
|| __DATA.__objc_data _OBJC_CLASS_$_TVLDisplayColorCalibrator
|| __DATA.__objc_data _OBJC_CLASS_$_TVLPersistenceManager
|| __DATA.__objc_data _OBJC_CLASS_$_TVLToneProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_TVLALSCalibrationData
|| __DATA.__objc_data _OBJC_METACLASS_$_TVLALSData
|| __DATA.__objc_data _OBJC_METACLASS_$_TVLALSDataExtractor
|| __DATA.__objc_data _OBJC_METACLASS_$_TVLAudioLatencyEstimator
|| __DATA.__objc_data _OBJC_METACLASS_$_TVLDisplayColorCalibrator
|| __DATA.__objc_data _OBJC_METACLASS_$_TVLPersistenceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TVLToneProvider
|| __DATA_CONST.__const _TVLAudioLatencyEstimationInternalProgressEventEstimationConfidenceKey
|| __DATA_CONST.__const _TVLAudioLatencyEstimationInternalProgressEventEstimationLatencyKey
|| __DATA_CONST.__const _TVLAudioLatencyEstimationProgressEventErrorObjectKey
|| __DATA_CONST.__const _TVLDisplayColorCalibratorProgressEventErrorObjectKey
|| __DATA_CONST.__const _TVLToneIdentifierCalibration
|| __DATA_CONST.__const _TVLToneIdentifierFailure
|| __DATA_CONST.__const _TVLToneIdentifierSuccess
|| __DATA_CONST.__const _TVLatencyErrorDomain
|| __TEXT.__const _TVLAudioLatencyUnknown
|| __TEXT.__text _AllRecordings
|| __TEXT.__text _EraseAllRecordings
|| __TEXT.__text _TapToRadar
__ AVFAudio: _AVAudioSessionCategoryPlayAndRecord
__ AVFAudio: _AVAudioSessionInterruptionNotification
__ AVFAudio: _AVAudioSessionInterruptionTypeKey
__ AVFAudio: _AVAudioSessionModeMeasurement
__ AVFAudio: _AVAudioSessionOrientationBack
__ AVFAudio: _AVAudioSessionOrientationBottom
__ AVFAudio: _AVAudioSessionOrientationFront
__ AVFAudio: _AVAudioSessionOrientationLeft
__ AVFAudio: _AVAudioSessionOrientationRight
__ AVFAudio: _AVAudioSessionOrientationTop
__ AVFAudio: _AVAudioSessionPolarPatternOmnidirectional
__ AVFAudio: _AVAudioSessionPortBuiltInMic
__ AVFAudio: _OBJC_CLASS_$_AVAudioEngine
__ AVFAudio: _OBJC_CLASS_$_AVAudioFile
__ AVFAudio: _OBJC_CLASS_$_AVAudioFormat
__ AVFAudio: _OBJC_CLASS_$_AVAudioPlayerNode
__ AVFAudio: _OBJC_CLASS_$_AVAudioSession
__ AVFAudio: _OBJC_CLASS_$_AVAudioTime
__ AVFAudio: _OBJC_CLASS_$_AVAudioUnit
__ AVFoundation: _AVCaptureDeviceTypeBuiltInWideAngleCamera
__ AVFoundation: _AVCaptureSessionErrorKey
__ AVFoundation: _AVCaptureSessionRuntimeErrorNotification
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDevice
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoDataOutput
__ AudioToolbox: _AudioUnitSetProperty
__ CoreBrightness: _OBJC_CLASS_$_BrightnessSystemClient
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFErrorGetCode
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIFilter
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _OBJC_CLASS_$_CIVector
__ CoreImage: _kCIContextWorkingColorSpace
__ CoreImage: _kCIFormatBGRA8
__ CoreImage: _kCIInputExtentKey
__ CoreImage: _kCIInputImageKey
__ CoreMedia: _CMSampleBufferGetImageBuffer
__ CoreMotion: _OBJC_CLASS_$_CMMotionManager
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreUtils: _OBJC_CLASS_$_CUMessageSession
__ CoreVideo: _kCVPixelBufferPixelFormatTypeKey
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNetServiceBrowser
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSValue
__ IOKit: _IOHIDEventGetChildren
__ IOKit: _IOHIDEventGetDataValue
__ IOKit: _IOHIDEventGetDoubleValue
__ IOKit: _IOHIDEventGetFloatValue
__ IOKit: _IOHIDEventGetIntegerValue
__ IOKit: _IOHIDEventGetType
__ IOKit: _IOHIDEventSystemClientCreateWithType
__ IOKit: _IOHIDEventSystemClientRegisterEventCallback
__ IOKit: _IOHIDEventSystemClientScheduleWithRunLoop
__ IOKit: _IOHIDEventSystemClientUnscheduleWithRunLoop
__ IOKit: _IOHIDServiceClientCopyProperty
__ IOKit: _IOMasterPort
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryFromPath
__ IOKit: _IORegistryEntrySearchCFProperty
__ Network: _nw_interface_get_name
__ Network: _nw_interface_get_subtype
__ Network: _nw_interface_get_type
__ Network: _nw_parameters_create
__ Network: _nw_parameters_set_include_peer_to_peer
__ Network: _nw_parameters_set_required_interface_subtype
__ Network: _nw_parameters_set_required_interface_type
__ Network: _nw_path_create_evaluator_for_endpoint
__ Network: _nw_path_enumerate_interfaces
__ Network: _nw_path_get_status
__ Network: _nw_path_monitor_cancel
__ Network: _nw_path_monitor_set_queue
__ Network: _nw_path_monitor_set_update_handler
__ Network: _nw_path_monitor_start
__ SoftLinking: __sl_dlopen
__ SoundAnalysis: _OBJC_CLASS_$_SNAudioOffsetResult
__ SoundAnalysis: _OBJC_CLASS_$_SNAudioStreamAnalyzer
__ SoundAnalysis: _OBJC_CLASS_$_SNEstimateAudioOffsetRequest
__ TimeSync: _OBJC_CLASS_$_TSClockManager
__ TimeSync: _OBJC_CLASS_$_TSgPTPManager
__ TimeSync: _TSNullClockIdentifier
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UINotificationFeedbackGenerator
__ libFDR.dylib: _AMFDRSealingMapCopyLocalDataForClass
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeifaddrs
__ libSystem.B.dylib: _getifaddrs
__ libSystem.B.dylib: _getnameinfo
__ libSystem.B.dylib: _inet_pton
__ libSystem.B.dylib: _ldexp
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _usleep
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
TVLALSData : NSObject
 @property  NSNumber *x
 @property  NSNumber *y
 @property  NSNumber *z
 @property  NSNumber *lux
 @property  NSNumber *cct
 @property  NSArray *channelData

  // class methods
  +[TVLALSData instanceFromDictionary:]

  // instance methods
  -[TVLALSData z]
  -[TVLALSData x]
  -[TVLALSData setX:]
  -[TVLALSData y]
  -[TVLALSData setY:]
  -[TVLALSData setZ:]
  -[TVLALSData .cxx_destruct]
  -[TVLALSData dictionaryRepresentation]
  -[TVLALSData cct]
  -[TVLALSData lux]
  -[TVLALSData setLux:]
  -[TVLALSData channelData]
  -[TVLALSData setChannelData:]
  -[TVLALSData setCct:]


TVLALSCalibrationData : NSObject
 @property  NSNumber *channels
 @property  NSNumber *wavelengthStartVisible
 @property  NSNumber *wavelengthStartNIR
 @property  NSNumber *wavelengthEnd
 @property  NSNumber *wavelengthStep
 @property  NSNumber *version
 @property  NSNumber *displayID
 @property  NSNumber *normalizationFactor
 @property  NSArray *spectrumNom

  // class methods
  +[TVLALSCalibrationData instanceFromDictionary:]

  // instance methods
  -[TVLALSCalibrationData displayID]
  -[TVLALSCalibrationData setDisplayID:]
  -[TVLALSCalibrationData .cxx_destruct]
  -[TVLALSCalibrationData channels]
  -[TVLALSCalibrationData version]
  -[TVLALSCalibrationData dictionaryRepresentation]
  -[TVLALSCalibrationData setVersion:]
  -[TVLALSCalibrationData setChannels:]
  -[TVLALSCalibrationData wavelengthStartVisible]
  -[TVLALSCalibrationData setWavelengthStartVisible:]
  -[TVLALSCalibrationData wavelengthStartNIR]
  -[TVLALSCalibrationData setWavelengthStartNIR:]
  -[TVLALSCalibrationData wavelengthEnd]
  -[TVLALSCalibrationData setWavelengthEnd:]
  -[TVLALSCalibrationData wavelengthStep]
  -[TVLALSCalibrationData setWavelengthStep:]
  -[TVLALSCalibrationData normalizationFactor]
  -[TVLALSCalibrationData setNormalizationFactor:]
  -[TVLALSCalibrationData spectrumNom]
  -[TVLALSCalibrationData setSpectrumNom:]


TVLTimeSync : NSObject <TSClockClient>
 @property  unsigned int IPv4
 @property  NSData *IPv6
 @property  TSgPTPClock *clock
 @property  NSString *networkInterfaceName
 @property  NSObject<OS_dispatch_semaphore> *waitForPTPLock
 @property  CUMessageSession *session
 @property  BOOL master
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVLTimeSync invalidate]
  +[TVLTimeSync timeSyncWithRemoteIPv4:IPv6:interface:session:master:completion:]

  // instance methods
  -[TVLTimeSync setClock:]
  -[TVLTimeSync clock]
  -[TVLTimeSync session]
  -[TVLTimeSync setSession:]
  -[TVLTimeSync .cxx_destruct]
  -[TVLTimeSync invalidate]
  -[TVLTimeSync isMaster]
  -[TVLTimeSync setNetworkInterfaceName:]
  -[TVLTimeSync networkInterfaceName]
  -[TVLTimeSync setMaster:]
  -[TVLTimeSync didChangeClockMasterForClock:]
  -[TVLTimeSync didChangeLockStateTo:forClock:]
  -[TVLTimeSync _startPTPWithSession:completionHandler:]
  -[TVLTimeSync initWithRemoteIPv4:IPv6:interface:]
  -[TVLTimeSync negotiateGrandmasterIdentityAttempt:withCompletion:]
  -[TVLTimeSync convertToHostTimeFromDomainTime:grandmasterIdentity:]
  -[TVLTimeSync convertToDomainTimeFromHostTime:grandmasterIdentity:]
  -[TVLTimeSync _clearWaitForPTPClock]
  -[TVLTimeSync IPv4]
  -[TVLTimeSync setIPv4:]
  -[TVLTimeSync IPv6]
  -[TVLTimeSync setIPv6:]
  -[TVLTimeSync waitForPTPLock]
  -[TVLTimeSync setWaitForPTPLock:]


TVLPersistenceManager : NSObject
  // class methods
  +[TVLPersistenceManager documentsDirectory:]
  +[TVLPersistenceManager recordingsDirectory:]
  +[TVLPersistenceManager URLForRecording]
  +[TVLPersistenceManager allRecordingPaths]
  +[TVLPersistenceManager eraseAllRecordings]


TVLRGBColorDetector : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate>
 @property  AVCaptureSession *session
 @property  CMMotionManager *motionManager
 @property  NSMutableArray *hueComponents
 @property  NSMutableArray *saturationComponents
 @property  NSMutableArray *brightnessComponents
 @property  NSOperationQueue *accelerometerQueue
 @property  unsigned long noMotionDuration
 @property  double hueThreshhold
 @property  double saturationThreshhold
 @property  double brightnessThreshhold
 @property  NSObject<OS_dispatch_queue> *sessionBufferQueue
 @property  int proximityNotificationToken
 @property  BOOL proximityState
 @property  int backlightNotificationToken
 @property  BOOL backlightState
 @property  BOOL useMotionDetection
 @property  double hueErrorMarginPercent
 @property  double saturationErrorMarginPercent
 @property  double brightnessErrorMarginPercent
 @property  unsigned long rollingAverageForFrames
 @property  double pitchMargin
 @property  double yawMargin
 @property  double maximumMotion
 @property  BOOL ignoreBacklightProximityState
 @property  <TVLRGBColorDetectorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVLRGBColorDetector session]
  -[TVLRGBColorDetector setDelegate:]
  -[TVLRGBColorDetector setSession:]
  -[TVLRGBColorDetector delegate]
  -[TVLRGBColorDetector dealloc]
  -[TVLRGBColorDetector captureOutput:didOutputSampleBuffer:fromConnection:]
  -[TVLRGBColorDetector .cxx_destruct]
  -[TVLRGBColorDetector setBacklightState:]
  -[TVLRGBColorDetector backlightState]
  -[TVLRGBColorDetector proximityState]
  -[TVLRGBColorDetector setProximityState:]
  -[TVLRGBColorDetector motionManager]
  -[TVLRGBColorDetector setMotionManager:]
  -[TVLRGBColorDetector captureSessionRuntimeErrorDidOccur:]
  -[TVLRGBColorDetector initWithThresholdsForHue:saturation:brightness:]
  -[TVLRGBColorDetector beginDetection]
  -[TVLRGBColorDetector endDetection]
  -[TVLRGBColorDetector _averageColorForSampleBuffer:]
  -[TVLRGBColorDetector _prepareForDetection]
  -[TVLRGBColorDetector _setupCaptureSession]
  -[TVLRGBColorDetector _pctChange:new:max:]
  -[TVLRGBColorDetector _startDetection]
  -[TVLRGBColorDetector _stopDetection]
  -[TVLRGBColorDetector _resetRollingAverage]
  -[TVLRGBColorDetector useMotionDetection]
  -[TVLRGBColorDetector setUseMotionDetection:]
  -[TVLRGBColorDetector hueErrorMarginPercent]
  -[TVLRGBColorDetector setHueErrorMarginPercent:]
  -[TVLRGBColorDetector saturationErrorMarginPercent]
  -[TVLRGBColorDetector setSaturationErrorMarginPercent:]
  -[TVLRGBColorDetector brightnessErrorMarginPercent]
  -[TVLRGBColorDetector setBrightnessErrorMarginPercent:]
  -[TVLRGBColorDetector rollingAverageForFrames]
  -[TVLRGBColorDetector setRollingAverageForFrames:]
  -[TVLRGBColorDetector pitchMargin]
  -[TVLRGBColorDetector setPitchMargin:]
  -[TVLRGBColorDetector yawMargin]
  -[TVLRGBColorDetector setYawMargin:]
  -[TVLRGBColorDetector maximumMotion]
  -[TVLRGBColorDetector setMaximumMotion:]
  -[TVLRGBColorDetector ignoreBacklightProximityState]
  -[TVLRGBColorDetector setIgnoreBacklightProximityState:]
  -[TVLRGBColorDetector hueComponents]
  -[TVLRGBColorDetector setHueComponents:]
  -[TVLRGBColorDetector saturationComponents]
  -[TVLRGBColorDetector setSaturationComponents:]
  -[TVLRGBColorDetector brightnessComponents]
  -[TVLRGBColorDetector setBrightnessComponents:]
  -[TVLRGBColorDetector accelerometerQueue]
  -[TVLRGBColorDetector setAccelerometerQueue:]
  -[TVLRGBColorDetector noMotionDuration]
  -[TVLRGBColorDetector setNoMotionDuration:]
  -[TVLRGBColorDetector hueThreshhold]
  -[TVLRGBColorDetector setHueThreshhold:]
  -[TVLRGBColorDetector saturationThreshhold]
  -[TVLRGBColorDetector setSaturationThreshhold:]
  -[TVLRGBColorDetector brightnessThreshhold]
  -[TVLRGBColorDetector setBrightnessThreshhold:]
  -[TVLRGBColorDetector sessionBufferQueue]
  -[TVLRGBColorDetector setSessionBufferQueue:]
  -[TVLRGBColorDetector proximityNotificationToken]
  -[TVLRGBColorDetector setProximityNotificationToken:]
  -[TVLRGBColorDetector backlightNotificationToken]
  -[TVLRGBColorDetector setBacklightNotificationToken:]


TVLALSDataExtractor : NSObject
  // instance methods
  -[TVLALSDataExtractor _displayID]
  -[TVLALSDataExtractor extractALSData:]
  -[TVLALSDataExtractor extractALSCalibrationData]
  -[TVLALSDataExtractor extract:ALSReadings:]


TVLNetworkInterface : NSObject
 @property  unsigned long interfaceType
 @property  NSString *interfaceName
 @property  NSString *ipv4
 @property  NSString *ipv6

  // instance methods
  -[TVLNetworkInterface interfaceType]
  -[TVLNetworkInterface interfaceName]
  -[TVLNetworkInterface .cxx_destruct]
  -[TVLNetworkInterface ipv4]
  -[TVLNetworkInterface ipv6]
  -[TVLNetworkInterface initWithInterfaceType:interfaceName:]


TVLAudioLatencyEstimator : NSObject
 @property  float version
 @property  @? completion
 @property  TVLNetworkMonitor *networkMonitor
 @property  TVLNetworkInterface *awdlInterface
 @property  TVLNetworkInterface *wifiInterface
 @property  CUMessageSession *session
 @property  TVLTimeSync *timeSync
 @property  TVLListenEngine *listenEngine
 @property  @? internalProgressEventHandler
 @property  unsigned long role
 @property  @? progressEventHandler

  // instance methods
  -[TVLAudioLatencyEstimator activate]
  -[TVLAudioLatencyEstimator completion]
  -[TVLAudioLatencyEstimator networkMonitor]
  -[TVLAudioLatencyEstimator session]
  -[TVLAudioLatencyEstimator role]
  -[TVLAudioLatencyEstimator setSession:]
  -[TVLAudioLatencyEstimator estimate]
  -[TVLAudioLatencyEstimator setNetworkMonitor:]
  -[TVLAudioLatencyEstimator setCompletion:]
  -[TVLAudioLatencyEstimator .cxx_destruct]
  -[TVLAudioLatencyEstimator setProgressEventHandler:]
  -[TVLAudioLatencyEstimator _tearDown]
  -[TVLAudioLatencyEstimator version]
  -[TVLAudioLatencyEstimator invalidate]
  -[TVLAudioLatencyEstimator progressEventHandler]
  -[TVLAudioLatencyEstimator setVersion:]
  -[TVLAudioLatencyEstimator _invalidateWithError:]
  -[TVLAudioLatencyEstimator initWithMessageSession:]
  -[TVLAudioLatencyEstimator startNetworkMonitoring]
  -[TVLAudioLatencyEstimator networkMonitorInterfacesDidUpdate:]
  -[TVLAudioLatencyEstimator networkInterfaceOfType:fromInterfaces:]
  -[TVLAudioLatencyEstimator _initWithMessageSession:]
  -[TVLAudioLatencyEstimator estimateAudioLatencyWithToneIdentifier:]
  -[TVLAudioLatencyEstimator setAudioLatencyEstimationCompletionHandler:]
  -[TVLAudioLatencyEstimator _sendMessage:withResponse:]
  -[TVLAudioLatencyEstimator _synchronizeClocksWithOptions:withResponseHandler:]
  -[TVLAudioLatencyEstimator _estimateAudioLatencyWithOptions:withResponseHandler:]
  -[TVLAudioLatencyEstimator _respondAndInvalidateWithError:responseHandler:]
  -[TVLAudioLatencyEstimator _postProgressEvent:withInfo:]
  -[TVLAudioLatencyEstimator _postInternalProgressEvent:withInfo:]
  -[TVLAudioLatencyEstimator awdlInterface]
  -[TVLAudioLatencyEstimator setAwdlInterface:]
  -[TVLAudioLatencyEstimator wifiInterface]
  -[TVLAudioLatencyEstimator setWifiInterface:]
  -[TVLAudioLatencyEstimator timeSync]
  -[TVLAudioLatencyEstimator setTimeSync:]
  -[TVLAudioLatencyEstimator listenEngine]
  -[TVLAudioLatencyEstimator setListenEngine:]
  -[TVLAudioLatencyEstimator internalProgressEventHandler]
  -[TVLAudioLatencyEstimator setInternalProgressEventHandler:]


TVLDisplayColorCalibrator : NSObject <TVLRGBColorDetectorDelegate>
 @property  TVLALSDataExtractor *alsExtractor
 @property  TVLRGBColorDetector *colorDetector
 @property  CUMessageSession *session
 @property  unsigned long state
 @property  NSArray *detectorTarget
 @property  NSArray *detectorMargin
 @property  NSNumber *pitchMargin
 @property  NSNumber *yawMargin
 @property  NSNumber *maximumMotion
 @property  NSNumber *stationaryFrames
 @property  BOOL useSlowALS
 @property  unsigned long role
 @property  @? progressEventHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVLDisplayColorCalibrator activate]
  -[TVLDisplayColorCalibrator session]
  -[TVLDisplayColorCalibrator role]
  -[TVLDisplayColorCalibrator setSession:]
  -[TVLDisplayColorCalibrator state]
  -[TVLDisplayColorCalibrator .cxx_destruct]
  -[TVLDisplayColorCalibrator setProgressEventHandler:]
  -[TVLDisplayColorCalibrator _tearDown]
  -[TVLDisplayColorCalibrator invalidate]
  -[TVLDisplayColorCalibrator progressEventHandler]
  -[TVLDisplayColorCalibrator _invalidateWithError:]
  -[TVLDisplayColorCalibrator setState:]
  -[TVLDisplayColorCalibrator calibrate]
  -[TVLDisplayColorCalibrator initWithMessageSession:]
  -[TVLDisplayColorCalibrator pitchMargin]
  -[TVLDisplayColorCalibrator yawMargin]
  -[TVLDisplayColorCalibrator maximumMotion]
  -[TVLDisplayColorCalibrator _initWithMessageSession:]
  -[TVLDisplayColorCalibrator _sendMessage:withResponse:]
  -[TVLDisplayColorCalibrator _respondAndInvalidateWithError:responseHandler:]
  -[TVLDisplayColorCalibrator _postProgressEvent:withInfo:]
  -[TVLDisplayColorCalibrator colorDetector:metThresholdConditionsWithColor:]
  -[TVLDisplayColorCalibrator colorDetector:backlightStateChanged:]
  -[TVLDisplayColorCalibrator colorDetector:movementDetected:]
  -[TVLDisplayColorCalibrator _startPositioning]
  -[TVLDisplayColorCalibrator _startReadings]
  -[TVLDisplayColorCalibrator alsExtractor]
  -[TVLDisplayColorCalibrator setAlsExtractor:]
  -[TVLDisplayColorCalibrator colorDetector]
  -[TVLDisplayColorCalibrator setColorDetector:]
  -[TVLDisplayColorCalibrator detectorTarget]
  -[TVLDisplayColorCalibrator detectorMargin]
  -[TVLDisplayColorCalibrator stationaryFrames]
  -[TVLDisplayColorCalibrator useSlowALS]


TVLNetworkMonitor : NSObject <NSNetServiceBrowserDelegate>
 @property  BOOL monitoring
 @property  unsigned long monitoringOptions
 @property  @? updateHandler
 @property  NSObject<OS_dispatch_queue> *monitorQueue
 @property  NSNetServiceBrowser *awdlServiceBrowser
 @property  NSObject<OS_nw_path_monitor> *awdl_monitor
 @property  NSObject<OS_nw_path_monitor> *wifi_monitor
 @property  NSObject<OS_nw_path_monitor> *ethernet_monitor
 @property  TVLNetworkInterface *awdl
 @property  TVLNetworkInterface *wifi
 @property  TVLNetworkInterface *ethernet
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVLNetworkMonitor isMonitoring]
  -[TVLNetworkMonitor netServiceBrowser:didFindService:moreComing:]
  -[TVLNetworkMonitor setMonitoring:]
  -[TVLNetworkMonitor setWifi:]
  -[TVLNetworkMonitor dealloc]
  -[TVLNetworkMonitor setAwdl:]
  -[TVLNetworkMonitor .cxx_destruct]
  -[TVLNetworkMonitor wifi]
  -[TVLNetworkMonitor updateHandler]
  -[TVLNetworkMonitor setUpdateHandler:]
  -[TVLNetworkMonitor awdl]
  -[TVLNetworkMonitor stopMonitoring]
  -[TVLNetworkMonitor init]
  -[TVLNetworkMonitor monitorQueue]
  -[TVLNetworkMonitor setMonitorQueue:]
  -[TVLNetworkMonitor startMonitoringForInterfaceTypes:updateHandler:]
  -[TVLNetworkMonitor monitoringOptions]
  -[TVLNetworkMonitor setMonitoringOptions:]
  -[TVLNetworkMonitor awdlServiceBrowser]
  -[TVLNetworkMonitor setAwdlServiceBrowser:]
  -[TVLNetworkMonitor awdl_monitor]
  -[TVLNetworkMonitor setAwdl_monitor:]
  -[TVLNetworkMonitor wifi_monitor]
  -[TVLNetworkMonitor setWifi_monitor:]
  -[TVLNetworkMonitor ethernet_monitor]
  -[TVLNetworkMonitor setEthernet_monitor:]
  -[TVLNetworkMonitor ethernet]
  -[TVLNetworkMonitor setEthernet:]


TVLListenEngine : NSObject <SNResultsObserving>
 @property  AVAudioEngine *audioEngine
 @property  AVAudioInputNode *microphone
 @property  AVAudioPlayerNode *player
 @property  AVAudioUnit *mixer
 @property  SNEstimateAudioOffsetRequest *estimateAudioOffsetRequest
 @property  SNAudioStreamAnalyzer *streamAnalyzer
 @property  @? callback
 @property  @? completion
 @property  AVAudioFile *file
 @property  NSMutableArray *confidentResults
 @property  long long convergenceLossCount
 @property  NSDate *firstObservationDate
 @property  double timeToConverge
 @property  BOOL lastObservationWasConfident
 @property  NSObject<OS_dispatch_source> *timer
 @property  NSObject<OS_dispatch_queue> *analysisQueue
 @property  BOOL didMissDeadline
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVLListenEngine invalidate]
  +[TVLListenEngine engineWithCompletion:]

  // instance methods
  -[TVLListenEngine callback]
  -[TVLListenEngine setCallback:]
  -[TVLListenEngine request:didFailWithError:]
  -[TVLListenEngine audioEngine]
  -[TVLListenEngine analysisQueue]
  -[TVLListenEngine completion]
  -[TVLListenEngine setAnalysisQueue:]
  -[TVLListenEngine setFile:]
  -[TVLListenEngine setCompletion:]
  -[TVLListenEngine .cxx_destruct]
  -[TVLListenEngine file]
  -[TVLListenEngine setTimer:]
  -[TVLListenEngine timer]
  -[TVLListenEngine player]
  -[TVLListenEngine setPlayer:]
  -[TVLListenEngine invalidate]
  -[TVLListenEngine init]
  -[TVLListenEngine microphone]
  -[TVLListenEngine setMicrophone:]
  -[TVLListenEngine request:didProduceResult:]
  -[TVLListenEngine requestDidComplete:]
  -[TVLListenEngine completeAnalysis]
  -[TVLListenEngine mixer]
  -[TVLListenEngine setAudioEngine:]
  -[TVLListenEngine _handleIterruption:]
  -[TVLListenEngine _setupAndStartAudioSessionWithError:]
  -[TVLListenEngine _setupAndStartAudioEngineGraphWithTimeout:error:]
  -[TVLListenEngine _splitMicrophoneAndReferenceToneChannels]
  -[TVLListenEngine startListeningWithReferenceTone:at:saveToFile:withCallback:completion:]
  -[TVLListenEngine medianOfSortedArray:]
  -[TVLListenEngine setMixer:]
  -[TVLListenEngine estimateAudioOffsetRequest]
  -[TVLListenEngine setEstimateAudioOffsetRequest:]
  -[TVLListenEngine streamAnalyzer]
  -[TVLListenEngine setStreamAnalyzer:]
  -[TVLListenEngine confidentResults]
  -[TVLListenEngine setConfidentResults:]
  -[TVLListenEngine convergenceLossCount]
  -[TVLListenEngine setConvergenceLossCount:]
  -[TVLListenEngine firstObservationDate]
  -[TVLListenEngine setFirstObservationDate:]
  -[TVLListenEngine timeToConverge]
  -[TVLListenEngine setTimeToConverge:]
  -[TVLListenEngine lastObservationWasConfident]
  -[TVLListenEngine setLastObservationWasConfident:]
  -[TVLListenEngine didMissDeadline]
  -[TVLListenEngine setDidMissDeadline:]


TVLToneProvider : NSObject
  // class methods
  +[TVLToneProvider provideToneWithIdentifier:error:]
  +[TVLToneProvider urlForResource:]


01 00 1500 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioEngine 
01 00 1500 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioFile 
01 00 1500 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioFormat 
01 00 1500 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioPlayerNode 
01 00 1500 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioSession 
01 00 1500 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioTime 
01 00 1500 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioUnit 
01 00 0200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDevice 
01 00 0200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 0200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 0200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoDataOutput 
01 00 0100 /System/Library/PrivateFrameworks/CoreBrightness.framework/CoreBrightness: BrightnessSystemClient 
01 00 0500 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 0500 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIFilter 
01 00 0500 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 0500 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIVector 
01 00 1000 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMMotionManager 
01 00 0d00 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUMessageSession 
01 00 0a00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNetServiceBrowser 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0900 /System/Library/Frameworks/SoundAnalysis.framework/SoundAnalysis: SNAudioOffsetResult 
01 00 0900 /System/Library/Frameworks/SoundAnalysis.framework/SoundAnalysis: SNAudioStreamAnalyzer 
01 00 0900 /System/Library/Frameworks/SoundAnalysis.framework/SoundAnalysis: SNEstimateAudioOffsetRequest 
01 00 0e00 /System/Library/PrivateFrameworks/TimeSync.framework/TimeSync: TSClockManager 
01 00 0e00 /System/Library/PrivateFrameworks/TimeSync.framework/TimeSync: TSgPTPManager 
01 00 0300 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0300 /System/Library/Frameworks/UIKit.framework/UIKit: UINotificationFeedbackGenerator 
