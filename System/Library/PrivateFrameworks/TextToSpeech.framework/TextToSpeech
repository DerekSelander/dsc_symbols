|| __DATA.__data _audioDeviceKey
|| __DATA.__data _audioSessionKey
|| __DATA.__data _kTTSFirstPartySynthEntitlement
|| __DATA.__data _ttsStartReplyBlockKey
|| __DATA.__objc_data _OBJC_CLASS_$_TTSAudioSession
|| __DATA.__objc_data _OBJC_CLASS_$_TTSAudioSessionChannel
|| __DATA.__objc_data _OBJC_CLASS_$_TTSFormatArgument
|| __DATA.__objc_data _OBJC_CLASS_$_TTSProviderUtility
|| __DATA.__objc_data _OBJC_CLASS_$_TTSSpeechRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TTSSpeechRequestOwner
|| __DATA.__objc_data _OBJC_CLASS_$_TTSSpeechString
|| __DATA.__objc_data _OBJC_CLASS_$_TTSStringTransformation
|| __DATA.__objc_data _OBJC_CLASS_$_TTSSubstitution
|| __DATA.__objc_data _OBJC_CLASS_$_TTSSynthesisProviderAudioEngine
|| __DATA.__objc_data _OBJC_CLASS_$_TTSSynthesisProviderAudioOutput
|| __DATA.__objc_data _OBJC_CLASS_$_TTSSynthesisProviderMarkerSupport
|| __DATA.__objc_data _OBJC_CLASS_$_TTSSynthesisProviderPlayableBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_TTSSynthesisProviderRequestHandler
|| __DATA.__objc_data _OBJC_CLASS_$_TTSVoiceResourceAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSAudioSession
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSAudioSessionChannel
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSFormatArgument
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSProviderUtility
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSSpeechRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSSpeechRequestOwner
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSSpeechString
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSStringTransformation
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSSubstitution
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSSynthesisProviderAudioEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSSynthesisProviderAudioOutput
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSSynthesisProviderMarkerSupport
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSSynthesisProviderPlayableBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSSynthesisProviderRequestHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_TTSVoiceResourceAsset
|| __DATA.__objc_ivar _OBJC_IVAR_$_TTSFormatArgument.attributes
|| __DATA.__objc_ivar _OBJC_IVAR_$_TTSFormatArgument.formatSpecifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_TTSFormatArgument.formattedArg
|| __DATA_CONST.__const _TTSAXResourceManagerCanonicalLanguageCodeVoiceNamesMap
|| __DATA_CONST.__const _TTSAXResourceManagerGeneralLanguageCodeMap
|| __DATA_CONST.__const _TTSAXResourceManagerVoiceIdSampleStringMap
|| __DATA_CONST.__const _TTSAllCachedAvailableResourcesKey
|| __DATA_CONST.__const _TTSAllCachedAvailableVoicesKey
|| __DATA_CONST.__const _TTSAssetKeyCustomVoiceCompatibilityVersion
|| __DATA_CONST.__const _TTSAssetKeyCustomVoiceFootprint
|| __DATA_CONST.__const _TTSAssetKeyCustomVoiceGender
|| __DATA_CONST.__const _TTSAssetKeyCustomVoiceLanguages
|| __DATA_CONST.__const _TTSAssetKeyCustomVoiceMasteredVersion
|| __DATA_CONST.__const _TTSAssetKeyCustomVoiceName
|| __DATA_CONST.__const _TTSAssetKeyCustomVoiceType
|| __DATA_CONST.__const _TTSAssetKeyCustomVoiceVersion
|| __DATA_CONST.__const _TTSAssetKeyGryphonVoiceLanguages
|| __DATA_CONST.__const _TTSAssetKeyMacinTalkVoiceVersion
|| __DATA_CONST.__const _TTSAssetTypeCombinedVoice
|| __DATA_CONST.__const _TTSAssetTypeCombinedVoiceId
|| __DATA_CONST.__const _TTSAssetTypeCombinedVoiceProjectKey
|| __DATA_CONST.__const _TTSAssetTypeCustomVoice
|| __DATA_CONST.__const _TTSAssetTypeGryphonVoice
|| __DATA_CONST.__const _TTSAssetTypeMacinTalkVoice
|| __DATA_CONST.__const _TTSAssetTypeSystemVoice
|| __DATA_CONST.__const _TTSAssetValueCustomVoiceFootprintCompact
|| __DATA_CONST.__const _TTSAssetValueCustomVoiceFootprintEnhanced
|| __DATA_CONST.__const _TTSAssetValueCustomVoiceFootprintPremium
|| __DATA_CONST.__const _TTSAssetValueCustomVoiceFootprintPremiumHigh
|| __DATA_CONST.__const _TTSAssetValueCustomVoiceFootprintSuperCompact
|| __DATA_CONST.__const _TTSAssetValueCustomVoiceGenderFemale
|| __DATA_CONST.__const _TTSAssetValueCustomVoiceGenderMale
|| __DATA_CONST.__const _TTSAssetValueCustomVoiceTypeNeural
|| __DATA_CONST.__const _TTSAssetValueSystemVoiceFormatVersionKey
|| __DATA_CONST.__const _TTSAssetValueSystemVoiceLanguageKey
|| __DATA_CONST.__const _TTSCachedBuildNumberKey
|| __DATA_CONST.__const _TTSCachedIsMigrationCompleteKey
|| __DATA_CONST.__const _TTSCachedVoiceIdentifiersToMigrateKey
|| __DATA_CONST.__const _TTSFootprintCompactIdentifier
|| __DATA_CONST.__const _TTSFootprintPremiumIdentifier
|| __DATA_CONST.__const _TTSFootprintSuperCompactIdentifier
|| __DATA_CONST.__const _TTSResourceCacheVersionKey
|| __DATA_CONST.__const _TTSSynthesisProviderCachedComponentsKey
|| __DATA_CONST.__const _TTSVoiceResourceAssetBundleIdentifier
|| __DATA_CONST.__const _TTSVoiceResourceAssetConfigPlist
|| __DATA_CONST.__const _kTTSAXAssetIdKey
|| __DATA_CONST.__const _kTTSAXAssetSizeKey
|| __DATA_CONST.__const _kTTSAXCanBeDownloadedKey
|| __DATA_CONST.__const _kTTSAXDennisResourceContentsPath
|| __DATA_CONST.__const _kTTSAXIsInstalledKey
|| __DATA_CONST.__const _kTTSAXNoveltyVoiceKey
|| __DATA_CONST.__const _kTTSAXResourceContentsPath
|| __DATA_CONST.__const _kTTSAXResourceOnDiskMacinTalkContentsPath
|| __DATA_CONST.__const _kTTSAXResourceSubtypeGryphon
|| __DATA_CONST.__const _kTTSAXResourceSubtypeHydra
|| __DATA_CONST.__const _kTTSAXResourceSubtypeMacinTalk
|| __DATA_CONST.__const _kTTSAXResourceSubtypeNone
|| __DATA_CONST.__const _kTTSAXResourceSubtypeSiriNeural
|| __DATA_CONST.__const _kTTSAXResourceTypeAll
|| __DATA_CONST.__const _kTTSAXResourceTypeCustom
|| __DATA_CONST.__const _kTTSAXResourceTypeGryphon
|| __DATA_CONST.__const _kTTSAXResourceTypeInvalid
|| __DATA_CONST.__const _kTTSAXResourceTypeKona
|| __DATA_CONST.__const _kTTSAXResourceTypeLegacyCombinedVocalizer
|| __DATA_CONST.__const _kTTSAXResourceTypeLegacyVocalizer
|| __DATA_CONST.__const _kTTSAXResourceTypeMacinTalk
|| __DATA_CONST.__const _kTTSAXResourceTypeMaui
|| __DATA_CONST.__const _kTTSAXResourceTypeSynthesizerExtension
|| __DATA_CONST.__const _kTTSAXSampleKey
|| __DATA_CONST.__const _kTTSAlternativeAssetBrokerHeaderFileName
|| __DATA_CONST.__const _kTTSBrokerHeaderFileExtension
|| __DATA_CONST.__const _kTTSComponentSubTypeKey
|| __DATA_CONST.__const _kTTSErrorDomain
|| __DATA_CONST.__const _kTTSFrameworkTTSPath
|| __DATA_CONST.__const _kTTSFrameworkVoiceServicesPath
|| __DATA_CONST.__const _kTTSGryphonVoiceIdentifierPrefix
|| __DATA_CONST.__const _kTTSInfoPlist
|| __DATA_CONST.__const _kTTSMacinTalkComponentSubType
|| __DATA_CONST.__const _kTTSMacinTalkFrameworkIdentifier
|| __DATA_CONST.__const _kTTSMacinTalkSynthIdentifier
|| __DATA_CONST.__const _kTTSMacinTalkVickiIdentifier
|| __DATA_CONST.__const _kTTSMacinTalkVoiceIdentifierPrefix
|| __DATA_CONST.__const _kTTSMauiFrameworkBundlePath
|| __DATA_CONST.__const _kTTSMauiFrameworkPath
|| __DATA_CONST.__const _kTTSMauiVocalizerResourcesDirectory
|| __DATA_CONST.__const _kTTSMauiVoiceIdentifierPrefix
|| __DATA_CONST.__const _kTTSMobileAssetPropertiesKey
|| __DATA_CONST.__const _kTTSNeuralVoiceIdentifierPrefix
|| __DATA_CONST.__const _kTTSOriginalAssetBrokerHeaderFileName
|| __DATA_CONST.__const _kTTSPreferencesSpokenLanguageChangedNotification
|| __DATA_CONST.__const _kTTSResourceBuildKey
|| __DATA_CONST.__const _kTTSResourceFolderName
|| __DATA_CONST.__const _kTTSResourceFootprintKey
|| __DATA_CONST.__const _kTTSResourceGenderKey
|| __DATA_CONST.__const _kTTSResourceLanguagesKey
|| __DATA_CONST.__const _kTTSResourceMemoryPeakKey
|| __DATA_CONST.__const _kTTSResourceNameKey
|| __DATA_CONST.__const _kTTSResourceSubtypeKey
|| __DATA_CONST.__const _kTTSResourceTypeKey
|| __DATA_CONST.__const _kTTSResourceVoiceIdKey
|| __DATA_CONST.__const _kTTSSampleAssetsPath
|| __DATA_CONST.__const _kTTSSharedCachePath
|| __DATA_CONST.__const _kTTSSiriVoiceIdentifierPrefix
|| __DATA_CONST.__const _kTTSSiriVoiceLegacyIdentifierRegex
|| __DATA_CONST.__const _kTTSSpeechBundleLegacyIdentifierRegex
|| __DATA_CONST.__const _kTTSSpeechTextClassAttribute
|| __DATA_CONST.__const _kTTSSpeechTextClassName
|| __DATA_CONST.__const _kTTSSpeechTextClassTitle
|| __DATA_CONST.__const _kTTSSpeechVoiceKey
|| __DATA_CONST.__const _kTTSSynthProviderCacheUpdatedNotification
|| __DATA_CONST.__const _kTTSSynthesisProviderVoiceAttributeGroupName
|| __DATA_CONST.__const _kTTSSynthesisProviderVoiceIdentifierPrefix
|| __DATA_CONST.__const _kTTSSynthesizerBundleIdentifierKey
|| __DATA_CONST.__const _kTTSSystemVoiceIdentifierPrefix
|| __DATA_CONST.__const _kTTSValidLegacyIdentifiers
|| __DATA_CONST.__const _kTTSVocalizerLanguageKey
|| __DATA_CONST.__const _kTTSVocalizerResourceAssetInstalledNotification
|| __DATA_CONST.__const _kTTSVocalizerVoiceFormatKey
|| __DATA_CONST.__const _kTTSVocalizerVoiceLegacyIdentifierRegex
|| __DATA_CONST.__const _kTTSVocalizerVoiceNameKey
|| __DATA_CONST.__const _kTTSVoiceAssetKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTSAXResource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTSAXResourceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTSAXResourceMigrationUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTSAssetBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTSLocaleUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTSRegexCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTSSiriAssetManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTSSpeechSynthesizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTSSpeechVoice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTSSynthesisProviderComponentRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTSSynthesisProviderSpeechServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTSSynthesisProviderVoiceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTSVoiceAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTSAXResource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTSAXResourceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTSAXResourceMigrationUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTSAssetBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTSLocaleUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTSRegexCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTSSiriAssetManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTSSpeechSynthesizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTSSpeechVoice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTSSynthesisProviderComponentRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTSSynthesisProviderSpeechServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTSSynthesisProviderVoiceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTSVoiceAsset
|| __TEXT.__const _TTSAudioSessionPreferredHardwareSampleRate
|| __TEXT.__const _TTSAudioSessionPreferredHardwareSampleRateGryphon
|| __TEXT.__const _kAudioUnitMaxRetries
|| __TEXT.__const _kMarkerLagGracePeriodFrameCount
|| __TEXT.__const _kMarkerLagGracePeriodMaxSkipAhead
|| __TEXT.__const _kTTSActiveJetsamLimit
|| __TEXT.__const _kTTSAudioEngineShutdownDelay
|| __TEXT.__const _kTTSMaxPlayRetries
|| __TEXT.__const _kTTSPlayRetryBackoff
|| __TEXT.__const _kTTSPreferredIOBufferDuration
|| __TEXT.__text _AXAVVoiceQualityFromTTSFootprint
|| __TEXT.__text _AXAudioComponentDescUniqueSpeechSynthTuple
|| __TEXT.__text _AXAudioComponentDescUniqueTriple
|| __TEXT.__text _AXNSStringFromAudioUnitComponentDescription
|| __TEXT.__text _AXNSStringFromAudioUnitComponentDescriptionRaw
|| __TEXT.__text _AXSpeechReplaceJapaneseElongationCharactersIfNeeded
|| __TEXT.__text _TTSAttributedStringCreateFromSerializedAttributes
|| __TEXT.__text _TTSAttributedStringCreateSerializedAttributes
|| __TEXT.__text _TTSAudioSessionConfigureForActivity
|| __TEXT.__text _TTSAudioSessionCopyActiveInputRoute
|| __TEXT.__text _TTSAudioSessionDeregisterQueue
|| __TEXT.__text _TTSAudioSessionGetAudioSessionID
|| __TEXT.__text _TTSAudioSessionGetOutputLatency
|| __TEXT.__text _TTSAudioSessionGetServerGeneration
|| __TEXT.__text _TTSAudioSessionInitialize
|| __TEXT.__text _TTSAudioSessionRegisterQueue
|| __TEXT.__text _TTSAudioSessionSetActive
|| __TEXT.__text _TTSAudioSessionSetBluetoothInputAllowed
|| __TEXT.__text _TTSCFArrayGetValueAtIndexIfType
|| __TEXT.__text _TTSCFAttributedStringCreateStringByBracketingAttributeWithString
|| __TEXT.__text _TTSCFAttributedStringGetAttributeAndLongestEffectiveRange
|| __TEXT.__text _TTSCFDictionaryGetValueIfType
|| __TEXT.__text _TTSCFSetCreateMutableArray
|| __TEXT.__text _TTSCFSetSendDifferences
|| __TEXT.__text _TTSCFURLDeleteDirectoryContents
|| __TEXT.__text _TTSCopyContentsOfDirectoryAtURL
|| __TEXT.__text _TTSCopyModificationDateForFileAtURL
|| __TEXT.__text _TTSCreateDataFromContentsOfURL
|| __TEXT.__text _TTSCreateDecryptedDataFromEncryptedData
|| __TEXT.__text _TTSCreateDirectory
|| __TEXT.__text _TTSCreateStringFromFileAtPath
|| __TEXT.__text _TTSCreateTemporaryDirectory
|| __TEXT.__text _TTSCreateURLAndDirectory
|| __TEXT.__text _TTSDeleteItemAtURL
|| __TEXT.__text _TTSDirectoryExistsAtURL
|| __TEXT.__text _TTSErrorCreate
|| __TEXT.__text _TTSFileExistsAtURL
|| __TEXT.__text _TTSIsBaseSystem
|| __TEXT.__text _TTSIsInternalBuild
|| __TEXT.__text _TTSIsRunningInLoginWindow
|| __TEXT.__text _TTSNashvilleRateToSpeechRate
|| __TEXT.__text _TTSPreferencesBoolValueForKey
|| __TEXT.__text _TTSPreferencesCopyAutoDownloadedAssetsInfo
|| __TEXT.__text _TTSPreferencesCopyAvailableLanguageIdentifiers
|| __TEXT.__text _TTSPreferencesCopyAvailableOutputLanguageIdentifiers
|| __TEXT.__text _TTSPreferencesCopyDefaultOutputLanguageIdentifierForLanguage
|| __TEXT.__text _TTSPreferencesCopyDefaultOutputLanguageIdentifierForUserPreferences
|| __TEXT.__text _TTSPreferencesCopyDefaultSpokenLanguageIdentifierForUserPreferences
|| __TEXT.__text _TTSPreferencesCopySpokenLanguageIdentifier
|| __TEXT.__text _TTSPreferencesCopySpokenLanguageIdentifierArray
|| __TEXT.__text _TTSPreferencesCopyValueForKey
|| __TEXT.__text _TTSPreferencesHandleLanguageChange
|| __TEXT.__text _TTSPreferencesInitialize
|| __TEXT.__text _TTSPreferencesSetAutoDownloadedAssetsInfo
|| __TEXT.__text _TTSPreferencesSetValueForKey
|| __TEXT.__text _TTSRosebudLogger
|| __TEXT.__text _TTSSetThreadPriorityHigh
|| __TEXT.__text _TTSSortedAssetsFromAssets
|| __TEXT.__text _TTSSpeechRateToNashvilleRate
|| __TEXT.__text _TTSSpeechRateToNashvilleRateWithMonarchOverride
|| __TEXT.__text _TTSSpeechSetUnitTestingMode
|| __TEXT.__text _TTSSpeechUnitTestingMode
|| __TEXT.__text _TTSSpeechVolumeModulation
|| __TEXT.__text _TTSStringForResourceType
|| __TEXT.__text _TTSStringForSpeechFootprint
|| __TEXT.__text _TTSStringForSpeechGender
|| __TEXT.__text _TTSSupportsNeuralVoices
|| __TEXT.__text _TTSUniStrGetLength
|| __TEXT.__text _TTSVocalizerCopyDefaultAssetLanguage
|| __TEXT.__text _TTSVocalizerCopyFileNameForToneName
|| __TEXT.__text _TTSVocalizerCopyPathForCommonResources
|| __TEXT.__text _TTSVocalizerCopyPathForLocalizedResources
|| __TEXT.__text _TTSVocalizerCopyPathForResources
|| __TEXT.__text _TTSVocalizerCopyPathForTones
|| __TEXT.__text _TTSVocalizerCopyURLForFallbackResource
|| __TEXT.__text _TTSVocalizerCopyURLForFrameworkResources
|| __TEXT.__text _TTSVocalizerCopyVoiceEngineFormatVersionForLanguage
|| __TEXT.__text _TTSVoiceIsGryphonAssetType
|| __TEXT.__text _TTSVoiceTypeForResourceType
|| __TEXT.__text _TTSWatchSupportsSiriSpeaks
|| __TEXT.__text __AXNSStringFromOSType
|| __TEXT.__text __BuiltInVoiceNameForLanguage
|| __TEXT.__text __GetScheduledPriority
|| __TEXT.__text __SpeechFootprintForVocalizerFootprint
|| __TEXT.__text __SpeechGenderForVocalizerGender
|| __TEXT.__text __TTSBundleCopyResourceURL
|| __TEXT.__text __TTSCopyAvailableLanguageIdentifiers
|| __TEXT.__text __TTSCopyFallbackLanguageIdentifierExplicitForCurrentLocale
|| __TEXT.__text __TTSCopyFallbackLanguageIdentifierExplicitForLocale
|| __TEXT.__text __TTSCopyFallbackLanguageIdentifierForCurrentLocale
|| __TEXT.__text __TTSCopyFallbackLanguageIdentifierForLanguageIdentifier
|| __TEXT.__text __TTSCopyFallbackLanguageIdentifierForLocale
|| __TEXT.__text __TTSCopyLanguageArrayForLanguageIdentifier
|| __TEXT.__text __TTSCopyLanguageCodeFromLanguageIdentifier
|| __TEXT.__text __TTSCopyLanguageIdentifierForLocale
|| __TEXT.__text __TTSCopyLocalizedString
|| __TEXT.__text __TTSCopyLocationCodeFromLanguageIdentifier
|| __TEXT.__text __TTSCopyQualifiedLanguageIdentifierForLanguageCode
|| __TEXT.__text __TTSDeviceLanguageChanged
|| __TEXT.__text __TTSFrameworkBundle
|| __TEXT.__text __TTSIdentifierForVoiceInformation
|| __TEXT.__text __TTSLanguageIdentifierIsLanguageOnly
|| __TEXT.__text __TTSNameForVoiceInformation
|| __TEXT.__text __TTSPreferencesCopyCurrentGenericLocale
|| __TEXT.__text __TTSPreferencesCopyDefaultOutputLanguageIdentifierForLanguageAndUserPreferredLocalizations
|| __TEXT.__text __TTSPreferencesCopyDefaultOutputLanguageIdentifierForUserPreferences
|| __TEXT.__text __TTSPreferencesCopyDefaultOutputLanguageIdentifierForUserPreferredLocalizations
|| __TEXT.__text __TTSVocalizerCopyVoiceEngineFormatVersionsForLanguage
|| __TEXT.__text __VocalizerFootprintForSpeechFootprint
|| __TEXT.__text __VocalizerGenderForSpeechGender
|| __TEXT.__text __Z45TTS_NSStringFromAudioUnitComponentDescription25AudioComponentDescription
__ AVFAudio: _AVAudioSessionCategoryVoiceCommand
__ AVFAudio: _AVAudioSessionCategoryVoiceOver
__ AVFAudio: _AVAudioSessionInterruptionNotification
__ AVFAudio: _AVAudioSessionInterruptionTypeKey
__ AVFAudio: _AVAudioSessionMediaServicesWereResetNotification
__ AVFAudio: _AVSpeechSynthesisVoiceIdentifierAlex
__ AVFAudio: _OBJC_CLASS_$_AVAudioEngine
__ AVFAudio: _OBJC_CLASS_$_AVAudioFormat
__ AVFAudio: _OBJC_CLASS_$_AVAudioPCMBuffer
__ AVFAudio: _OBJC_CLASS_$_AVAudioPlayerNode
__ AVFAudio: _OBJC_CLASS_$_AVAudioSession
__ AVFAudio: _OBJC_CLASS_$_AVAudioUnit
__ AVFAudio: _OBJC_CLASS_$_AVAudioUnitComponentManager
__ AVFAudio: _OBJC_CLASS_$_AVSpeechSynthesisProviderRequest
__ AVFAudio: _OBJC_CLASS_$_AVSpeechSynthesisProviderVoice
__ AVFAudio: _OBJC_CLASS_$_AVSpeechUtterance
__ AXAssetLoader: _OBJC_CLASS_$_AXAssetController
__ AXAssetLoader: _OBJC_CLASS_$_AXAssetsService
__ AXAssetLoader: _OBJC_CLASS_$_AXTTSLegacyCombinedVocalizerAssetPolicy
__ AXAssetLoader: _OBJC_CLASS_$_AXTTSLegacyMacinTalkAssetPolicy
__ AXAssetLoader: _OBJC_CLASS_$_AXTTSResourceAssetPolicy
__ AXCoreUtilities: _AXCLanguageCanonicalFormToGeneralLanguage
__ AXCoreUtilities: _AXCLanguageConvertToCanonicalForm
__ AXCoreUtilities: _AXCLanguageFallbackPlistPath
__ AXCoreUtilities: _AXLogCommon
__ AXCoreUtilities: _AXLogSpeechSynthesis
__ AXCoreUtilities: _AXPerformBlockAsynchronouslyOnMainThread
__ AXCoreUtilities: _AXProcessIsAXAssetsd
__ AXCoreUtilities: _AXSystemRootDirectory
__ AXCoreUtilities: _AXTTSLogCommon
__ AXCoreUtilities: _AXTTSLogResourceManager
__ AXCoreUtilities: _AXTTSLogResourceMigration
__ AudioToolbox: _AudioQueueStop
__ AudioToolbox: _AudioUnitGetProperty
__ AudioToolbox: _AudioUnitSetProperty
__ AudioToolbox: _OBJC_CLASS_$_AUAudioUnit
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayApplyFunction
__ CoreFoundation: _CFArrayContainsValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFAttributedStringCreateMutable
__ CoreFoundation: _CFAttributedStringGetAttribute
__ CoreFoundation: _CFAttributedStringGetAttributeAndLongestEffectiveRange
__ CoreFoundation: _CFAttributedStringGetAttributesAndLongestEffectiveRange
__ CoreFoundation: _CFAttributedStringGetLength
__ CoreFoundation: _CFAttributedStringGetString
__ CoreFoundation: _CFAttributedStringReplaceString
__ CoreFoundation: _CFAttributedStringSetAttributes
__ CoreFoundation: _CFBagAddValue
__ CoreFoundation: _CFBagCreateMutable
__ CoreFoundation: _CFBagGetCountOfValue
__ CoreFoundation: _CFBagRemoveValue
__ CoreFoundation: _CFBundleCopyBundleLocalizations
__ CoreFoundation: _CFBundleCopyLocalizationsForPreferences
__ CoreFoundation: _CFBundleCopyLocalizedString
__ CoreFoundation: _CFBundleCopyPreferredLocalizationsFromArray
__ CoreFoundation: _CFBundleCopyResourceURL
__ CoreFoundation: _CFBundleCopyResourceURLForLocalization
__ CoreFoundation: _CFBundleCopyResourceURLsOfType
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFErrorCreateWithUserInfoKeysAndValues
__ CoreFoundation: _CFGetAllocator
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFLocaleCopyCurrent
__ CoreFoundation: _CFLocaleCopyPreferredLanguages
__ CoreFoundation: _CFLocaleCreate
__ CoreFoundation: _CFLocaleCreateCanonicalLanguageIdentifierFromString
__ CoreFoundation: _CFLocaleCreateCanonicalLocaleIdentifierFromString
__ CoreFoundation: _CFLocaleGetIdentifier
__ CoreFoundation: _CFLocaleGetValue
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPropertyListCreateWithStream
__ CoreFoundation: _CFReadStreamClose
__ CoreFoundation: _CFReadStreamCreateWithFile
__ CoreFoundation: _CFReadStreamOpen
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetApplyFunction
__ CoreFoundation: _CFSetContainsValue
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetGetCount
__ CoreFoundation: _CFSetRemoveValue
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateArrayBySeparatingStrings
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringCreateFromExternalRepresentation
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringCreateWithFileSystemRepresentation
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFURLCopyFileSystemPath
__ CoreFoundation: _CFURLCopyLastPathComponent
__ CoreFoundation: _CFURLCopyPathExtension
__ CoreFoundation: _CFURLCreateCopyAppendingPathComponent
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _CFURLGetFileSystemRepresentation
__ CoreFoundation: _CFURLGetString
__ CoreFoundation: _CFURLHasDirectoryPath
__ CoreFoundation: _NSLocaleExemplarCharacterSet
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFErrorDescriptionKey
__ CoreFoundation: _kCFLocaleCountryCode
__ CoreFoundation: _kCFLocaleCurrentLocaleDidChangeNotification
__ CoreFoundation: _kCFLocaleLanguageCode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileModificationDate
__ Foundation: _NSIntersectionRange
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromRange
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ MobileAsset: _ASAttributeCompatibilityVersion
__ MobileAsset: _ASAttributeContentVersion
__ MobileAsset: _ASAttributeMasteredVersion
__ PlugInKit: _OBJC_CLASS_$_PKManager
__ PlugInKit: _PKManagerPlugInBundleIdentifierKey
__ SSMLServices: _OBJC_CLASS_$_SSMLServices
__ SiriTTSService: _OBJC_CLASS_$_TTSAsset
__ SiriTTSService: _OBJC_CLASS_$_TTSAssetQuality
__ SiriTTSService: _OBJC_CLASS_$_TTSAssetTechnology
__ SiriTTSService: _OBJC_CLASS_$_TTSAssetType
__ SoftLinking: __sl_dlopen
__ libAccessibility.dylib: _AXNSLocalizedStringForLocale
__ libAccessibility.dylib: _AXRetrieveSupportedAccessibilityLanguages
__ libAccessibility.dylib: __AXSRosebudLoggingEnabled
__ libAccessibility.dylib: _kAXVoiceAssetsCacheUpdatedNotification
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _mach_thread_self
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _mkdtemp
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pthread_getschedparam
__ libSystem.B.dylib: _pthread_mach_thread_np
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _pthread_setschedparam
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _thread_info
__ libSystem.B.dylib: _thread_policy_set
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_copy_entitlement_for_token
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
TTSSynthesisProviderSpeechServer : NSObject <TTSSynthesisProviderAudioEngineProtocol, TTSSpeechService, TTSSpeechSynthesizerDelegate, TTSSpeechServiceUnitTesting>
 @property  NSObject<OS_dispatch_queue> *serviceQueue
 @property  NSMutableDictionary *requestMapping
 @property  NSMutableDictionary *speechEngines
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TTSSynthesisProviderSpeechServer regexRules]

  // instance methods
  -[TTSSynthesisProviderSpeechServer audioFileSettingsForVoice:]
  -[TTSSynthesisProviderSpeechServer initializeSpeechServerInstance:]
  -[TTSSynthesisProviderSpeechServer getVoicesForLanguage:queryingMobileAssets:reply:]
  -[TTSSynthesisProviderSpeechServer _escapeSSML:]
  -[TTSSynthesisProviderSpeechServer _unescapeDelimeterBoundedSSMLInString:]
  -[TTSSynthesisProviderSpeechServer speechEngines]
  -[TTSSynthesisProviderSpeechServer setSpeechEngines:]
  -[TTSSynthesisProviderSpeechServer getSpeechIsActiveForRequest:reply:]
  -[TTSSynthesisProviderSpeechServer combinedProsodyMarkupForVoice:string:rate:pitch:volume:]
  -[TTSSynthesisProviderSpeechServer .cxx_destruct]
  -[TTSSynthesisProviderSpeechServer isNashvilleService]
  -[TTSSynthesisProviderSpeechServer supportedIPAPhonemeLanguages]
  -[TTSSynthesisProviderSpeechServer stopSpeechRequest:atMark:]
  -[TTSSynthesisProviderSpeechServer startSpeechRequest:]
  -[TTSSynthesisProviderSpeechServer synthesisProviderDidFinishSpeakingRequest:successfully:withError:]
  -[TTSSynthesisProviderSpeechServer employSpeechMarkupForType:language:]
  -[TTSSynthesisProviderSpeechServer _nonSSMLSubstringRangeForRange:fromSSML:]
  -[TTSSynthesisProviderSpeechServer setServiceQueue:]
  -[TTSSynthesisProviderSpeechServer pauseSpeechRequest:atMark:]
  -[TTSSynthesisProviderSpeechServer canInitializeSpeech:]
  -[TTSSynthesisProviderSpeechServer setRequestMapping:]
  -[TTSSynthesisProviderSpeechServer continueSpeechRequest:]
  -[TTSSynthesisProviderSpeechServer isSiriService]
  -[TTSSynthesisProviderSpeechServer requestMapping]
  -[TTSSynthesisProviderSpeechServer _speechEngineForSynthesizerInstance:]
  -[TTSSynthesisProviderSpeechServer synthesisProviderDidStartSpeakingMarker:forRequest:]
  -[TTSSynthesisProviderSpeechServer setServiceQueue:forSynthesizerInstanceID:]
  -[TTSSynthesisProviderSpeechServer loadedVoiceResources]
  -[TTSSynthesisProviderSpeechServer serviceQueue]
  -[TTSSynthesisProviderSpeechServer speechMarkupStringForType:voice:string:]
  -[TTSSynthesisProviderSpeechServer init]
  -[TTSSynthesisProviderSpeechServer getVoicesForLanguage:reply:]
  -[TTSSynthesisProviderSpeechServer synthesizerInstanceDestroyed:]
  -[TTSSynthesisProviderSpeechServer isVoiceValid:]


TTSSubstitution : NSObject <NSSecureCoding, NSCopying>
 @property  NSUUID *uuid
 @property  NSString *originalString
 @property  NSString *replacementString
 @property  NSString *phonemes
 @property  NSSet *languages
 @property  NSSet *voiceIds
 @property  BOOL active
 @property  BOOL ignoreCase
 @property  {_NSRange=QQ} replacementRange
 @property  BOOL appliesToAllApps
 @property  NSSet *bundleIdentifiers
 @property  BOOL isReplacementTextAllPunctuation
 @property  BOOL isReplacementTextSurroundedByPunctuation
 @property  BOOL isUserSubstitution

  // class methods
  +[TTSSubstitution supportsSecureCoding]

  // instance methods
  -[TTSSubstitution active]
  -[TTSSubstitution languages]
  -[TTSSubstitution setLanguages:]
  -[TTSSubstitution encodeWithCoder:]
  -[TTSSubstitution originalString]
  -[TTSSubstitution dealloc]
  -[TTSSubstitution uuid]
  -[TTSSubstitution .cxx_destruct]
  -[TTSSubstitution setUuid:]
  -[TTSSubstitution setActive:]
  -[TTSSubstitution copyWithZone:]
  -[TTSSubstitution isEqual:]
  -[TTSSubstitution init]
  -[TTSSubstitution initWithCoder:]
  -[TTSSubstitution replacementString]
  -[TTSSubstitution bundleIdentifiers]
  -[TTSSubstitution replacementRange]
  -[TTSSubstitution setReplacementRange:]
  -[TTSSubstitution setBundleIdentifiers:]
  -[TTSSubstitution phonemes]
  -[TTSSubstitution setPhonemes:]
  -[TTSSubstitution setReplacementString:]
  -[TTSSubstitution setOriginalString:]
  -[TTSSubstitution voiceIds]
  -[TTSSubstitution setVoiceIds:]
  -[TTSSubstitution ignoreCase]
  -[TTSSubstitution setIgnoreCase:]
  -[TTSSubstitution appliesToAllApps]
  -[TTSSubstitution setAppliesToAllApps:]
  -[TTSSubstitution isReplacementTextAllPunctuation]
  -[TTSSubstitution isReplacementTextSurroundedByPunctuation]
  -[TTSSubstitution isUserSubstitution]
  -[TTSSubstitution setIsUserSubstitution:]


TTSSynthesisProviderPlayableBuffer : NSObject
 @property  unsigned int startFrameOffset
 @property  AVAudioPCMBuffer *buffer
 @property  NSArray *associatedMarkers

  // instance methods
  -[TTSSynthesisProviderPlayableBuffer buffer]
  -[TTSSynthesisProviderPlayableBuffer setBuffer:]
  -[TTSSynthesisProviderPlayableBuffer .cxx_destruct]
  -[TTSSynthesisProviderPlayableBuffer startFrameOffset]
  -[TTSSynthesisProviderPlayableBuffer setStartFrameOffset:]
  -[TTSSynthesisProviderPlayableBuffer associatedMarkers]
  -[TTSSynthesisProviderPlayableBuffer setAssociatedMarkers:]


TTSSynthesisProviderMarkerSupport : NSObject
  // class methods
  +[TTSSynthesisProviderMarkerSupport generateMarkerBufferGroupingsFromMarkers:buffer:bufferStartOffset:]


TTSAXResourceMigrationUtilities : NSObject
 @property  AXAssetsService *assetsService
 @property  BOOL isMigrationComplete
 @property  NSDictionary *obsoleteVoicesWithReplacements

  // class methods
  +[TTSAXResourceMigrationUtilities sharedInstance]

  // instance methods
  -[TTSAXResourceMigrationUtilities convertIdentifierIfNeeded:]
  -[TTSAXResourceMigrationUtilities writeIsMigrationCompleteToPreferences:]
  -[TTSAXResourceMigrationUtilities _readIsMigrationCompleteFromPreferences]
  -[TTSAXResourceMigrationUtilities .cxx_destruct]
  -[TTSAXResourceMigrationUtilities _readVoiceIdentifiersToMigrateFromPreferences]
  -[TTSAXResourceMigrationUtilities assetsService]
  -[TTSAXResourceMigrationUtilities obsoleteVoicesWithReplacements]
  -[TTSAXResourceMigrationUtilities writeVoiceIdentifiersToMigrateToPreferences:]
  -[TTSAXResourceMigrationUtilities isMigrationComplete]
  -[TTSAXResourceMigrationUtilities setObsoleteVoicesWithReplacements:]
  -[TTSAXResourceMigrationUtilities legacyIdentifierForUpdatedIdentifierDuringMigration:]
  -[TTSAXResourceMigrationUtilities resourceNeedsMigration:]
  -[TTSAXResourceMigrationUtilities updatedIdentifierForLegacyIdentifier:withLanguageCode:]
  -[TTSAXResourceMigrationUtilities deleteCompactResourceIfNeededForIdentifier:]
  -[TTSAXResourceMigrationUtilities restartMigrationIfNeeded]
  -[TTSAXResourceMigrationUtilities setIsMigrationComplete:]
  -[TTSAXResourceMigrationUtilities setAssetsService:]
  -[TTSAXResourceMigrationUtilities init]
  -[TTSAXResourceMigrationUtilities downloadCompactResourceIfNeededForIdentifier:]
  -[TTSAXResourceMigrationUtilities resourceCompletedMigration:]


TTSSiriAssetManager : NSObject
  // class methods
  +[TTSSiriAssetManager _siriAssetForLanguage:gender:footprint:voiceName:voiceType:locallyAvailable:]
  +[TTSSiriAssetManager installedAssetForLanguage:gender:footprint:voiceName:voiceType:]
  +[TTSSiriAssetManager _assetTypesForVoiceType:]
  +[TTSSiriAssetManager _assetTechnologyForVoiceType:]
  +[TTSSiriAssetManager deprecatedVoicesMap]
  +[TTSSiriAssetManager voiceAssetFromTTSAsset:]
  +[TTSSiriAssetManager _footprintForType:]
  +[TTSSiriAssetManager installedAssetsForLanguage:voiceType:]
  +[TTSSiriAssetManager assetsForLanguage:voiceType:]
  +[TTSSiriAssetManager voiceResourceForLanguage:voiceType:]
  +[TTSSiriAssetManager assetIsDownloading:]
  +[TTSSiriAssetManager _voiceTypeForAssetTechnology:]
  +[TTSSiriAssetManager ttsAssetFromVoiceAsset:]
  +[TTSSiriAssetManager spaceCheck:]
  +[TTSSiriAssetManager downloadAsset:progressHandler:]
  +[TTSSiriAssetManager purgeAsset:]
  +[TTSSiriAssetManager _siriAssetForLanguage:gender:footprint:voiceName:voiceType:]
  +[TTSSiriAssetManager stopDownload:]
  +[TTSSiriAssetManager assetForLanguage:gender:footprint:voiceName:voiceType:]
  +[TTSSiriAssetManager _assetsForLanguage:voiceType:installedOnly:]
  +[TTSSiriAssetManager _assetFilterForLanguage:gender:footprint:voiceName:voiceType:locallyAvailable:]


TTSAssetBase : NSObject <NSSecureCoding>
 @property  NSString *bundleIdentifier
 @property  NSNumber *compatibilityVersion
 @property  NSNumber *contentVersion
 @property  NSString *masteredVersion

  // class methods
  +[TTSAssetBase supportsSecureCoding]

  // instance methods
  -[TTSAssetBase contentVersion]
  -[TTSAssetBase encodeWithCoder:]
  -[TTSAssetBase setContentVersion:]
  -[TTSAssetBase .cxx_destruct]
  -[TTSAssetBase setCompatibilityVersion:]
  -[TTSAssetBase setBundleIdentifier:]
  -[TTSAssetBase masteredVersion]
  -[TTSAssetBase compatibilityVersion]
  -[TTSAssetBase bundleIdentifier]
  -[TTSAssetBase setMasteredVersion:]
  -[TTSAssetBase initWithCoder:]


TTSAXResource : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *assetId
 @property  TTSSpeechVoice *speechVoice
 @property  NSString *synthesizerBundleIdentifier
 @property  NSString *componentSubType
 @property  long long footprint
 @property  unsigned long assetSize
 @property  BOOL isInstalled
 @property  BOOL canBeDownloaded
 @property  long long memoryPeak
 @property  AXAsset *axAsset
 @property  TTSVoiceAsset *voiceAsset
 @property  NSArray *languages
 @property  NSString *name
 @property  NSString *localizedName
 @property  NSString *localizedNameWithFootprint
 @property  NSString *voiceId
 @property  NSString *contentPath
 @property  unsigned long type
 @property  unsigned long subtype
 @property  long long gender
 @property  BOOL isNoveltyVoice

  // class methods
  +[TTSAXResource supportsSecureCoding]

  // instance methods
  -[TTSAXResource initWithAsset:]
  -[TTSAXResource localizedStringForKey:]
  -[TTSAXResource isNoveltyVoice]
  -[TTSAXResource canBeDownloaded]
  -[TTSAXResource isInstalled]
  -[TTSAXResource componentSubType]
  -[TTSAXResource footprint]
  -[TTSAXResource setCanBeDownloaded:]
  -[TTSAXResource _isDefault]
  -[TTSAXResource contentPath]
  -[TTSAXResource voiceId]
  -[TTSAXResource setAssetSize:]
  -[TTSAXResource languages]
  -[TTSAXResource assetSize]
  -[TTSAXResource speechVoice]
  -[TTSAXResource assetId]
  -[TTSAXResource setComponentSubType:]
  -[TTSAXResource _isSystemVoice]
  -[TTSAXResource memoryPeakExceedsActiveJetsamLimit]
  -[TTSAXResource encodeWithCoder:]
  -[TTSAXResource type]
  -[TTSAXResource memoryPeak]
  -[TTSAXResource gender]
  -[TTSAXResource primaryLanguage]
  -[TTSAXResource voiceAsset]
  -[TTSAXResource .cxx_destruct]
  -[TTSAXResource shouldFilterResourceFromUI]
  -[TTSAXResource localizedNameWithFootprint]
  -[TTSAXResource synthesizerBundleIdentifier]
  -[TTSAXResource setFootprint:]
  -[TTSAXResource _ensureMacinTalkComponent]
  -[TTSAXResource localizedName]
  -[TTSAXResource setVoiceAsset:]
  -[TTSAXResource setSynthesizerBundleIdentifier:]
  -[TTSAXResource setAxAsset:]
  -[TTSAXResource setIsInstalled:]
  -[TTSAXResource setAssetId:]
  -[TTSAXResource setSpeechVoice:]
  -[TTSAXResource axAsset]
  -[TTSAXResource copyWithZone:]
  -[TTSAXResource _resourceGenderFromStringInput:]
  -[TTSAXResource name]
  -[TTSAXResource initWithData:]
  -[TTSAXResource setMemoryPeak:]
  -[TTSAXResource _resourceSubtypeFromStringInput:]
  -[TTSAXResource subtype]
  -[TTSAXResource _isDennisVoice]
  -[TTSAXResource _resourceTypeFromStringInput:]
  -[TTSAXResource _resourceFootprintFromStringInput:]
  -[TTSAXResource initWithCoder:]


TTSAudioSession : NSObject
  // class methods
  +[TTSAudioSession sharedInstance]

  // instance methods
  -[TTSAudioSession dealloc]
  -[TTSAudioSession .cxx_destruct]
  -[TTSAudioSession _mediaServicesWereReset:]
  -[TTSAudioSession init]
  -[TTSAudioSession _audioSessionInterrupted:]
  -[TTSAudioSession _setupAudioSession]
  -[TTSAudioSession _setCategoryForActivity:]
  -[TTSAudioSession _nextActivityForActive:activity:serverActivity:]
  -[TTSAudioSession _safeSetupAudioSession]
  -[TTSAudioSession _safeServerGeneration]
  -[TTSAudioSession _safeSetCategoryForActivity:]
  -[TTSAudioSession _safeSetActive:withActivity:]
  -[TTSAudioSession _safeSetBluetoothInputAllowed:]


TTSVoiceResourceAsset : TTSAssetBase <NSSecureCoding>
 @property  NSDictionary *voiceConfig
 @property  NSArray *languages
 @property  NSArray *resourceList
 @property  NSURL *searchPathURL

  // class methods
  +[TTSVoiceResourceAsset supportsSecureCoding]
  +[TTSVoiceResourceAsset legacyPlatforms]

  // instance methods
  -[TTSVoiceResourceAsset languages]
  -[TTSVoiceResourceAsset setLanguages:]
  -[TTSVoiceResourceAsset encodeWithCoder:]
  -[TTSVoiceResourceAsset setSearchPathURL:]
  -[TTSVoiceResourceAsset .cxx_destruct]
  -[TTSVoiceResourceAsset defaultTypeString]
  -[TTSVoiceResourceAsset resourceList]
  -[TTSVoiceResourceAsset defaultVoice]
  -[TTSVoiceResourceAsset setResourceList:]
  -[TTSVoiceResourceAsset setVoiceConfig:]
  -[TTSVoiceResourceAsset voiceConfig]
  -[TTSVoiceResourceAsset syncWithConfigFile:voiceType:]
  -[TTSVoiceResourceAsset searchPathURL]
  -[TTSVoiceResourceAsset defaultFootprintString]
  -[TTSVoiceResourceAsset initWithCoder:]


TTSFormatArgument : NSObject
  // instance methods
  -[TTSFormatArgument .cxx_destruct]


TTSSynthesisProviderRequestHandler : NSObject
 @property  AVSpeechSynthesisProviderRequest *managingSpeechRequest
 @property  long long currentMarkerFrameLimit
 @property  long long effectiveMarkerFrameLimit
 @property  unsigned int currentAudioBufferFrameCount
 @property  NSObject<OS_dispatch_queue> *operationQueue
 @property  unsigned long bytesPerFrame
 @property  unsigned long minimumFrameCushion
 @property  NSMutableArray *queuedBuffers
 @property  NSMutableArray *queuedMarkers
 @property  unsigned int generatedPlayableFrames
 @property  BOOL isFinishedReceivingBuffers
 @property  <TTSSynthesisProviderHandlerDelegate> *delegate

  // instance methods
  -[TTSSynthesisProviderRequestHandler setDelegate:]
  -[TTSSynthesisProviderRequestHandler operationQueue]
  -[TTSSynthesisProviderRequestHandler setOperationQueue:]
  -[TTSSynthesisProviderRequestHandler delegate]
  -[TTSSynthesisProviderRequestHandler .cxx_destruct]
  -[TTSSynthesisProviderRequestHandler bytesPerFrame]
  -[TTSSynthesisProviderRequestHandler initWithRequest:bytesPerFrame:]
  -[TTSSynthesisProviderRequestHandler addMarkers:]
  -[TTSSynthesisProviderRequestHandler addBuffers:]
  -[TTSSynthesisProviderRequestHandler updatePlayableBuffers]
  -[TTSSynthesisProviderRequestHandler completedRequestRendering]
  -[TTSSynthesisProviderRequestHandler setFrameCushion:]
  -[TTSSynthesisProviderRequestHandler _dequeueMarkersForFrameRange:end:]
  -[TTSSynthesisProviderRequestHandler managingSpeechRequest]
  -[TTSSynthesisProviderRequestHandler setManagingSpeechRequest:]
  -[TTSSynthesisProviderRequestHandler isFinishedReceivingBuffers]
  -[TTSSynthesisProviderRequestHandler setIsFinishedReceivingBuffers:]
  -[TTSSynthesisProviderRequestHandler currentMarkerFrameLimit]
  -[TTSSynthesisProviderRequestHandler setCurrentMarkerFrameLimit:]
  -[TTSSynthesisProviderRequestHandler currentAudioBufferFrameCount]
  -[TTSSynthesisProviderRequestHandler setCurrentAudioBufferFrameCount:]
  -[TTSSynthesisProviderRequestHandler generatedPlayableFrames]
  -[TTSSynthesisProviderRequestHandler setGeneratedPlayableFrames:]
  -[TTSSynthesisProviderRequestHandler effectiveMarkerFrameLimit]
  -[TTSSynthesisProviderRequestHandler setEffectiveMarkerFrameLimit:]
  -[TTSSynthesisProviderRequestHandler setBytesPerFrame:]
  -[TTSSynthesisProviderRequestHandler minimumFrameCushion]
  -[TTSSynthesisProviderRequestHandler setMinimumFrameCushion:]
  -[TTSSynthesisProviderRequestHandler queuedBuffers]
  -[TTSSynthesisProviderRequestHandler setQueuedBuffers:]
  -[TTSSynthesisProviderRequestHandler queuedMarkers]
  -[TTSSynthesisProviderRequestHandler setQueuedMarkers:]


TTSSynthesisProviderComponentRecord : NSObject <NSSecureCoding>
 @property  {AudioComponentDescription=IIIII} componentDescription
 @property  NSString *bundleIdentifier
 @property  NSString *version
 @property  BOOL isFirstParty
 @property  NSArray *voices

  // class methods
  +[TTSSynthesisProviderComponentRecord supportsSecureCoding]

  // instance methods
  -[TTSSynthesisProviderComponentRecord isFirstParty]
  -[TTSSynthesisProviderComponentRecord setIsFirstParty:]
  -[TTSSynthesisProviderComponentRecord encodeWithCoder:]
  -[TTSSynthesisProviderComponentRecord componentDescription]
  -[TTSSynthesisProviderComponentRecord .cxx_destruct]
  -[TTSSynthesisProviderComponentRecord setVoices:]
  -[TTSSynthesisProviderComponentRecord setBundleIdentifier:]
  -[TTSSynthesisProviderComponentRecord version]
  -[TTSSynthesisProviderComponentRecord bundleIdentifier]
  -[TTSSynthesisProviderComponentRecord voices]
  -[TTSSynthesisProviderComponentRecord setComponentDescription:]
  -[TTSSynthesisProviderComponentRecord setVersion:]
  -[TTSSynthesisProviderComponentRecord initWithCoder:]


TTSSynthesisProviderVoiceManager : NSObject
 @property  NSObject<OS_dispatch_queue> *operationQueue
 @property  NSObject<OS_dispatch_queue> *componentQueryQueue
 @property  <TTSSynthesisProviderVoiceManagerDelegate> *delegate

  // class methods
  +[TTSSynthesisProviderVoiceManager setComponentCache:]
  +[TTSSynthesisProviderVoiceManager allSynthesisProviderVoices]
  +[TTSSynthesisProviderVoiceManager _synthesizerHasEntitlement:entitlement:]
  +[TTSSynthesisProviderVoiceManager voiceCache]
  +[TTSSynthesisProviderVoiceManager resetInMemoryCache]
  +[TTSSynthesisProviderVoiceManager componentCache]
  +[TTSSynthesisProviderVoiceManager _componentIsEqual:to:]
  +[TTSSynthesisProviderVoiceManager allSynthesisProviderTTSVoices]
  +[TTSSynthesisProviderVoiceManager macintalkAudioUnitProvider]

  // instance methods
  -[TTSSynthesisProviderVoiceManager setDelegate:]
  -[TTSSynthesisProviderVoiceManager reloadVoicesForBundleIdentifierPrefixAsync:]
  -[TTSSynthesisProviderVoiceManager operationQueue]
  -[TTSSynthesisProviderVoiceManager _reconcileCachedComponents:]
  -[TTSSynthesisProviderVoiceManager reconcileCachedComponentsAsync]
  -[TTSSynthesisProviderVoiceManager setOperationQueue:]
  -[TTSSynthesisProviderVoiceManager delegate]
  -[TTSSynthesisProviderVoiceManager .cxx_destruct]
  -[TTSSynthesisProviderVoiceManager _loadVoicesForComponents:]
  -[TTSSynthesisProviderVoiceManager _systemAudioUnitProviders]
  -[TTSSynthesisProviderVoiceManager setComponentQueryQueue:]
  -[TTSSynthesisProviderVoiceManager componentQueryQueue]
  -[TTSSynthesisProviderVoiceManager _loadVoicesForComponentRecord:dispatchGroup:]
  -[TTSSynthesisProviderVoiceManager reconcileCachedComponents]
  -[TTSSynthesisProviderVoiceManager _loadVoicesForComponentWithTimeout:timeout:]
  -[TTSSynthesisProviderVoiceManager _reloadVoiceForBundleIdentifierPrefix:]
  -[TTSSynthesisProviderVoiceManager purgeAndReloadAllComponents]
  -[TTSSynthesisProviderVoiceManager reloadVoicesForBundleIdentifierPrefix:]
  -[TTSSynthesisProviderVoiceManager init]


TTSAXResourceManager : NSObject <AXAssetControllerObserver>
 @property  AXAssetController *assetController
 @property  AXAssetController *legacyCombinedVocalizerAssetController
 @property  AXAssetController *legacyMacinTalkAssetController
 @property  AXAssetsService *assetsService
 @property  NSSet *allAvailableLanguages
 @property  AXAsset *samplesAsset
 @property  NSString *catalogBuildVersion
 @property  BOOL downloadingSamples
 @property  NSObject<OS_dispatch_queue> *preferenceWriteQueue
 @property  NSObject<OS_dispatch_queue> *assetLoadingQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TTSAXResourceManager sharedInstance]

  // instance methods
  -[TTSAXResourceManager downloadResourceWithVoiceId:userInitiated:]
  -[TTSAXResourceManager updateCatalogBuildVersion:]
  -[TTSAXResourceManager readResourceCacheVersionFromPreferences]
  -[TTSAXResourceManager _writeResourcesToPreferences:]
  -[TTSAXResourceManager _isValidResourceTypeKey:]
  -[TTSAXResourceManager _resourcesWithType:subType:languageCode:waitForInstalledAssets:]
  -[TTSAXResourceManager superCompactVoiceIdForCompactVoiceId:]
  -[TTSAXResourceManager samplesAsset]
  -[TTSAXResourceManager assetController:didFinishDownloadingAsset:wasSuccessful:error:hasRemainingDownloads:]
  -[TTSAXResourceManager allAvailableLanguages]
  -[TTSAXResourceManager resources]
  -[TTSAXResourceManager speechVoiceWithVoiceId:]
  -[TTSAXResourceManager setCatalogBuildVersion:]
  -[TTSAXResourceManager _downloadSiriVoiceAssetWithResource:]
  -[TTSAXResourceManager _mergeInExpensiveInstalledAssets:notifyObservers:]
  -[TTSAXResourceManager refreshedResourcesForResources:]
  -[TTSAXResourceManager downloadingSamples]
  -[TTSAXResourceManager addObserver:]
  -[TTSAXResourceManager _stopDownloadSiriVoiceAssetWithResource:]
  -[TTSAXResourceManager defaultVoiceForLanguage:]
  -[TTSAXResourceManager setLegacyMacinTalkAssetController:]
  -[TTSAXResourceManager setSamplesAsset:]
  -[TTSAXResourceManager _writeResourceCacheVersionToPreferences]
  -[TTSAXResourceManager downloadSamplesIfNecessary]
  -[TTSAXResourceManager _refreshSiriResources:]
  -[TTSAXResourceManager dealloc]
  -[TTSAXResourceManager _resourcesForAssets:]
  -[TTSAXResourceManager _deleteResource:]
  -[TTSAXResourceManager setAssetController:]
  -[TTSAXResourceManager deleteResourceWithAssetId:]
  -[TTSAXResourceManager _deleteSiriVoiceAssetWithResource:]
  -[TTSAXResourceManager setAllAvailableLanguages:]
  -[TTSAXResourceManager _downloadLegacyResourceForTesting:]
  -[TTSAXResourceManager .cxx_destruct]
  -[TTSAXResourceManager _stopDownloadResource:]
  -[TTSAXResourceManager _findResourcesForLegacyAssets]
  -[TTSAXResourceManager resourcesWithLanguage:type:]
  -[TTSAXResourceManager _findAndSwapLegacyMacinTalkAssetsForMacinTalkResources:]
  -[TTSAXResourceManager refreshResourcesCacheForManagerType:]
  -[TTSAXResourceManager refreshAssetForResource:installedOnly:]
  -[TTSAXResourceManager _refreshResourcesForManagerType:]
  -[TTSAXResourceManager resourcesWithType:subType:]
  -[TTSAXResourceManager _readResourcesFromPreferences]
  -[TTSAXResourceManager assetLoadingQueue]
  -[TTSAXResourceManager _updateCachedResources:]
  -[TTSAXResourceManager _managerTypeForResourceType:]
  -[TTSAXResourceManager resourceWithAssetId:]
  -[TTSAXResourceManager allVoices:]
  -[TTSAXResourceManager resourcesWithType:subType:waitForInstalledAssets:]
  -[TTSAXResourceManager assetsService]
  -[TTSAXResourceManager setPreferenceWriteQueue:]
  -[TTSAXResourceManager resetResourcesCache]
  -[TTSAXResourceManager _downloadResource:userInitiated:]
  -[TTSAXResourceManager _refreshSamples:]
  -[TTSAXResourceManager assetController:asset:downloadProgressTotalWritten:totalExpected:isStalled:expectedTimeRemaining:]
  -[TTSAXResourceManager resourceWithVoiceId:]
  -[TTSAXResourceManager legacyCombinedVocalizerAssetController]
  -[TTSAXResourceManager setDownloadingSamples:]
  -[TTSAXResourceManager _axAssetsForTTSAXResourceModel:]
  -[TTSAXResourceManager _notifyObserversOfCacheUpdate]
  -[TTSAXResourceManager preferenceWriteQueue]
  -[TTSAXResourceManager downloadResourceWithVoiceId:]
  -[TTSAXResourceManager _refreshAssetForResource:withAssetController:installedOnly:]
  -[TTSAXResourceManager resetInMemoryAssetCatalogs]
  -[TTSAXResourceManager _dictionaryForResources:]
  -[TTSAXResourceManager legacyMacinTalkAssetController]
  -[TTSAXResourceManager setLegacyCombinedVocalizerAssetController:]
  -[TTSAXResourceManager downloadResourceWithAssetId:]
  -[TTSAXResourceManager assetController]
  -[TTSAXResourceManager languageCodeForResourceName:withType:]
  -[TTSAXResourceManager updateCatalogIfNeeded]
  -[TTSAXResourceManager removeObserver:]
  -[TTSAXResourceManager _resourceWithVoiceId:assetId:]
  -[TTSAXResourceManager catalogBuildVersion]
  -[TTSAXResourceManager deleteResourceWithVoiceId:]
  -[TTSAXResourceManager setAssetsService:]
  -[TTSAXResourceManager allLanguagesForVoices:waitForInstalledAssets:]
  -[TTSAXResourceManager _performBlockOnObservers:]
  -[TTSAXResourceManager setAssetLoadingQueue:]
  -[TTSAXResourceManager init]
  -[TTSAXResourceManager resources:]
  -[TTSAXResourceManager _findLocalResourcesForPath:]
  -[TTSAXResourceManager _debugCountSummaryForResources:]
  -[TTSAXResourceManager sampleURLForVoiceId:]
  -[TTSAXResourceManager _readCatalogBuildNumberFromPreferences]
  -[TTSAXResourceManager stopDownloadResourceWithVoiceId:]
  -[TTSAXResourceManager allVoices:waitForInstalledAssets:]
  -[TTSAXResourceManager rebuildSystemCacheForActionType:]
  -[TTSAXResourceManager _getSynthesisProviderResources]


TTSLocaleUtilities : NSObject
 @property  NSDictionary *generalLanguageCodeData
 @property  NSDictionary *voiceIdSampleStringData
 @property  NSDictionary *canonicalLanguageCodeVoiceNamesData

  // class methods
  +[TTSLocaleUtilities sharedInstance]

  // instance methods
  -[TTSLocaleUtilities .cxx_destruct]
  -[TTSLocaleUtilities defaultVoiceIdentifierForGeneralLanguageCode:]
  -[TTSLocaleUtilities canonicalLanguageCodeVoiceNamesData]
  -[TTSLocaleUtilities generalLanguageCodeData]
  -[TTSLocaleUtilities voiceIdSampleStringData]
  -[TTSLocaleUtilities sampleStringForVoiceIdentifier:]
  -[TTSLocaleUtilities defaultVoiceIdentifierForVoiceName:]
  -[TTSLocaleUtilities setGeneralLanguageCodeData:]
  -[TTSLocaleUtilities setVoiceIdSampleStringData:]
  -[TTSLocaleUtilities setCanonicalLanguageCodeVoiceNamesData:]


TTSSpeechRequest : NSObject <NSSecureCoding>
 @property  NSString *text
 @property  NSAttributedString *attributedText
 @property  TTSSpeechVoice *voice
 @property  NSString *ssmlRepresentation
 @property  TTSSpeechString *speechString
 @property  AVSpeechSynthesisProviderVoice *synthesisProviderVoice
 @property  NSString *languageCode
 @property  long long gender
 @property  NSURL *outputPath
 @property  double rate
 @property  double pitch
 @property  double volume
 @property  BOOL maintainsInput
 @property  BOOL supportsAccurateWordCallbacks
 @property  BOOL skipLuthorRules
 @property  BOOL audioSessionIDIsValid
 @property  unsigned int audioSessionID
 @property  unsigned int audioQueueFlags
 @property  double latency
 @property  double dispatchTime
 @property  double handledTime
 @property  BOOL useMonarchStyleRate
 @property  NSArray *channels
 @property  unsigned long synthesizerInstanceID
 @property  ^v clientContext
 @property  @? audioBufferCallback
 @property  NSString *originalString
 @property  NSMutableArray *originalWordRanges
 @property  NSMutableArray *processedWordRanges
 @property  NSMutableArray *replacedWords
 @property  long long wordRangeCallbacksDispatched
 @property  BOOL synthesizeSilently

  // class methods
  +[TTSSpeechRequest supportsSecureCoding]

  // instance methods
  -[TTSSpeechRequest latency]
  -[TTSSpeechRequest setLatency:]
  -[TTSSpeechRequest setLanguageCode:]
  -[TTSSpeechRequest rate]
  -[TTSSpeechRequest text]
  -[TTSSpeechRequest audioSessionID]
  -[TTSSpeechRequest setVoice:]
  -[TTSSpeechRequest setDelegate:]
  -[TTSSpeechRequest setAudioSessionID:]
  -[TTSSpeechRequest setClientContext:]
  -[TTSSpeechRequest encodeWithCoder:]
  -[TTSSpeechRequest setRate:]
  -[TTSSpeechRequest clientContext]
  -[TTSSpeechRequest delegate]
  -[TTSSpeechRequest originalString]
  -[TTSSpeechRequest gender]
  -[TTSSpeechRequest voice]
  -[TTSSpeechRequest .cxx_destruct]
  -[TTSSpeechRequest pitch]
  -[TTSSpeechRequest setAttributedText:]
  -[TTSSpeechRequest setVolume:]
  -[TTSSpeechRequest setPitch:]
  -[TTSSpeechRequest languageCode]
  -[TTSSpeechRequest attributedText]
  -[TTSSpeechRequest channels]
  -[TTSSpeechRequest volume]
  -[TTSSpeechRequest synthesisProviderVoice]
  -[TTSSpeechRequest speechString]
  -[TTSSpeechRequest setSynthesisProviderVoice:]
  -[TTSSpeechRequest setGender:]
  -[TTSSpeechRequest setChannels:]
  -[TTSSpeechRequest setText:]
  -[TTSSpeechRequest initWithCoder:]
  -[TTSSpeechRequest setSupportsAccurateWordCallbacks:]
  -[TTSSpeechRequest setSkipLuthorRules:]
  -[TTSSpeechRequest supportsAccurateWordCallbacks]
  -[TTSSpeechRequest skipLuthorRules]
  -[TTSSpeechRequest outputPath]
  -[TTSSpeechRequest setOutputPath:]
  -[TTSSpeechRequest ssmlRepresentation]
  -[TTSSpeechRequest setSsmlRepresentation:]
  -[TTSSpeechRequest setSpeechString:]
  -[TTSSpeechRequest setOriginalString:]
  -[TTSSpeechRequest vocalizerFootprint]
  -[TTSSpeechRequest vocalizerGender]
  -[TTSSpeechRequest speechRequestDidStartForService:]
  -[TTSSpeechRequest speechRequestDidPauseForService:]
  -[TTSSpeechRequest speechRequestDidContinueForService:]
  -[TTSSpeechRequest speechRequestMark:didStartForRange:forService:]
  -[TTSSpeechRequest speechRequestDidStopWithSuccess:phonemesSpoken:forService:error:]
  -[TTSSpeechRequest speechRequestDidSynthesizeSilentlyToURL:forService:]
  -[TTSSpeechRequest maintainsInput]
  -[TTSSpeechRequest setMaintainsInput:]
  -[TTSSpeechRequest audioSessionIDIsValid]
  -[TTSSpeechRequest setAudioSessionIDIsValid:]
  -[TTSSpeechRequest audioQueueFlags]
  -[TTSSpeechRequest setAudioQueueFlags:]
  -[TTSSpeechRequest dispatchTime]
  -[TTSSpeechRequest setDispatchTime:]
  -[TTSSpeechRequest handledTime]
  -[TTSSpeechRequest setHandledTime:]
  -[TTSSpeechRequest useMonarchStyleRate]
  -[TTSSpeechRequest setUseMonarchStyleRate:]
  -[TTSSpeechRequest synthesizerInstanceID]
  -[TTSSpeechRequest setSynthesizerInstanceID:]
  -[TTSSpeechRequest audioBufferCallback]
  -[TTSSpeechRequest setAudioBufferCallback:]
  -[TTSSpeechRequest originalWordRanges]
  -[TTSSpeechRequest setOriginalWordRanges:]
  -[TTSSpeechRequest processedWordRanges]
  -[TTSSpeechRequest setProcessedWordRanges:]
  -[TTSSpeechRequest replacedWords]
  -[TTSSpeechRequest setReplacedWords:]
  -[TTSSpeechRequest wordRangeCallbacksDispatched]
  -[TTSSpeechRequest setWordRangeCallbacksDispatched:]
  -[TTSSpeechRequest synthesizeSilently]
  -[TTSSpeechRequest setSynthesizeSilently:]


TTSSpeechSynthesizer : NSObject <TTSSpeechConnectionDelegate>
 @property  <TTSSpeechSynthesizerDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateTargetQueue
 @property  float rate
 @property  float pitch
 @property  float volume
 @property  NSString *voiceIdentifier
 @property  NSString *bundleIdentifier
 @property  NSString *resolvedVoiceIdentifier
 @property  unsigned long requestClientIdentifier
 @property  ^v speakingRequestClientContext
 @property  BOOL supportsAccurateWordCallbacks
 @property  BOOL skipLuthorRules
 @property  unsigned int audioQueueFlags
 @property  unsigned int audioSessionID
 @property  NSArray *userSubstitutions
 @property  NSArray *phonemeSubstitutions
 @property  @? audioBufferCallback
 @property  NSArray *outputChannels
 @property  BOOL ignoreSubstitutions
 @property  BOOL synthesizeSilently

  // class methods
  +[TTSSpeechSynthesizer audioFileSettingsForVoice:]
  +[TTSSpeechSynthesizer setSpeechJobFinishedUnitTestBlock:]
  +[TTSSpeechSynthesizer unavailableVoiceIdentifiers]
  +[TTSSpeechSynthesizer availableVoicesForLanguageCode:queryingMobileAssets:]
  +[TTSSpeechSynthesizer testingSetAllVoices:]
  +[TTSSpeechSynthesizer availableVoices]
  +[TTSSpeechSynthesizer availableLanguageCodes]
  +[TTSSpeechSynthesizer combinedProsodyMarkupForIdentifier:string:rate:pitch:volume:]
  +[TTSSpeechSynthesizer isSystemVoice:]
  +[TTSSpeechSynthesizer refreshAllAvailableVoices]
  +[TTSSpeechSynthesizer voiceForIdentifier:]
  +[TTSSpeechSynthesizer _speechVoiceForIdentifier:language:footprint:]
  +[TTSSpeechSynthesizer initialize]
  +[TTSSpeechSynthesizer supportedIPAPhonemeLanguages]
  +[TTSSpeechSynthesizer setTestingAvailableVoicesForLanguageCode:]
  +[TTSSpeechSynthesizer allAvailableVoices]
  +[TTSSpeechSynthesizer synthesizerForSynthesizerID:]
  +[TTSSpeechSynthesizer employSpeechMarkupForType:identifier:withLanguage:]
  +[TTSSpeechSynthesizer voiceAssetsForTesting]
  +[TTSSpeechSynthesizer _initializeServers]
  +[TTSSpeechSynthesizer voiceAccessQueue]
  +[TTSSpeechSynthesizer remapVoiceIdentifier:]
  +[TTSSpeechSynthesizer setVoiceAssetsForTesting:]
  +[TTSSpeechSynthesizer setSpeechJobStartedUnitTestBlock:]
  +[TTSSpeechSynthesizer refreshAllAvailableVoices:]
  +[TTSSpeechSynthesizer speechMarkupStringForType:forIdentifier:string:]

  // instance methods
  -[TTSSpeechSynthesizer _setDelegate:]
  -[TTSSpeechSynthesizer footprint]
  -[TTSSpeechSynthesizer connection:speechRequestDidPause:]
  -[TTSSpeechSynthesizer rate]
  -[TTSSpeechSynthesizer audioSessionID]
  -[TTSSpeechSynthesizer connection:speechRequest:didStopAtEnd:phonemesSpoken:error:]
  -[TTSSpeechSynthesizer setDelegate:]
  -[TTSSpeechSynthesizer minimumRate]
  -[TTSSpeechSynthesizer setRate:]
  -[TTSSpeechSynthesizer delegate]
  -[TTSSpeechSynthesizer connection:speechRequestDidStart:]
  -[TTSSpeechSynthesizer dealloc]
  -[TTSSpeechSynthesizer .cxx_destruct]
  -[TTSSpeechSynthesizer stopSpeakingAtNextBoundary:synchronously:error:]
  -[TTSSpeechSynthesizer pitch]
  -[TTSSpeechSynthesizer setVolume:]
  -[TTSSpeechSynthesizer setFootprint:]
  -[TTSSpeechSynthesizer setPitch:]
  -[TTSSpeechSynthesizer setBundleIdentifier:]
  -[TTSSpeechSynthesizer volume]
  -[TTSSpeechSynthesizer speechString]
  -[TTSSpeechSynthesizer bundleIdentifier]
  -[TTSSpeechSynthesizer connection:speechRequest:willSpeakMark:inRange:]
  -[TTSSpeechSynthesizer pauseSpeakingAtNextBoundary:synchronously:error:]
  -[TTSSpeechSynthesizer isSpeaking]
  -[TTSSpeechSynthesizer continueSpeakingWithError:]
  -[TTSSpeechSynthesizer connection:speechRequestDidContinue:]
  -[TTSSpeechSynthesizer init]
  -[TTSSpeechSynthesizer maximumRate]
  -[TTSSpeechSynthesizer voiceIdentifier]
  -[TTSSpeechSynthesizer setVoiceIdentifier:]
  -[TTSSpeechSynthesizer setSupportsAccurateWordCallbacks:]
  -[TTSSpeechSynthesizer setSkipLuthorRules:]
  -[TTSSpeechSynthesizer supportsAccurateWordCallbacks]
  -[TTSSpeechSynthesizer skipLuthorRules]
  -[TTSSpeechSynthesizer outputChannels]
  -[TTSSpeechSynthesizer setOutputChannels:]
  -[TTSSpeechSynthesizer audioQueueFlags]
  -[TTSSpeechSynthesizer setAudioQueueFlags:]
  -[TTSSpeechSynthesizer useMonarchStyleRate]
  -[TTSSpeechSynthesizer setUseMonarchStyleRate:]
  -[TTSSpeechSynthesizer synthesizerInstanceID]
  -[TTSSpeechSynthesizer audioBufferCallback]
  -[TTSSpeechSynthesizer setAudioBufferCallback:]
  -[TTSSpeechSynthesizer synthesizeSilently]
  -[TTSSpeechSynthesizer setSynthesizeSilently:]
  -[TTSSpeechSynthesizer _mediaServicesDied]
  -[TTSSpeechSynthesizer connection:speechRequest:didSynthesizeSilentlyToURL:]
  -[TTSSpeechSynthesizer testingLastRuleConversion]
  -[TTSSpeechSynthesizer testingSetLastRuleConversion:replacement:]
  -[TTSSpeechSynthesizer setUserSubstitutions:]
  -[TTSSpeechSynthesizer setPhonemeSubstitutions:]
  -[TTSSpeechSynthesizer resolvedVoiceIdentifier]
  -[TTSSpeechSynthesizer resolvedVoiceIdentifierForLanguageCode:]
  -[TTSSpeechSynthesizer _preprocessText:languageCode:]
  -[TTSSpeechSynthesizer _substitutionLanguageMatchesSpecialCase:withLanguage:]
  -[TTSSpeechSynthesizer _skipSubstition:language:bundleIdentifier:voice:]
  -[TTSSpeechSynthesizer _processUserSubstitutions:toText:request:bundleIdentifier:voice:]
  -[TTSSpeechSynthesizer _determineSubstitution:text:wordRange:request:]
  -[TTSSpeechSynthesizer applySSMLTransformation:string:voice:]
  -[TTSSpeechSynthesizer _startSpeakingString:orAttributedString:toURL:withLanguageCode:request:error:]
  -[TTSSpeechSynthesizer _stopSpeakingRequest:atNextBoundary:synchronously:error:]
  -[TTSSpeechSynthesizer _pauseSpeakingRequest:atNextBoundary:synchronously:error:]
  -[TTSSpeechSynthesizer _continueSpeakingRequest:withError:]
  -[TTSSpeechSynthesizer startSpeakingString:error:]
  -[TTSSpeechSynthesizer startSpeakingString:toURL:error:]
  -[TTSSpeechSynthesizer startSpeakingString:withLanguageCode:error:]
  -[TTSSpeechSynthesizer startSpeakingString:toURL:withLanguageCode:error:]
  -[TTSSpeechSynthesizer stopSpeakingAtNextBoundary:error:]
  -[TTSSpeechSynthesizer pauseSpeakingAtNextBoundary:error:]
  -[TTSSpeechSynthesizer useSpecificAudioSession:]
  -[TTSSpeechSynthesizer useAudioQueueFlags:]
  -[TTSSpeechSynthesizer startSpeakingString:request:error:]
  -[TTSSpeechSynthesizer startSpeakingString:withLanguageCode:request:error:]
  -[TTSSpeechSynthesizer startSpeakingString:toURL:withLanguageCode:request:error:]
  -[TTSSpeechSynthesizer stopSpeakingRequest:atNextBoundary:error:]
  -[TTSSpeechSynthesizer stopSpeakingRequest:atNextBoundary:synchronously:error:]
  -[TTSSpeechSynthesizer pauseSpeakingRequest:atNextBoundary:error:]
  -[TTSSpeechSynthesizer pauseSpeakingRequest:atNextBoundary:synchronously:error:]
  -[TTSSpeechSynthesizer continueSpeakingRequest:withError:]
  -[TTSSpeechSynthesizer delegateTargetQueue]
  -[TTSSpeechSynthesizer setDelegateTargetQueue:]
  -[TTSSpeechSynthesizer requestClientIdentifier]
  -[TTSSpeechSynthesizer setRequestClientIdentifier:]
  -[TTSSpeechSynthesizer speakingRequestClientContext]
  -[TTSSpeechSynthesizer setSpeakingRequestClientContext:]
  -[TTSSpeechSynthesizer userSubstitutions]
  -[TTSSpeechSynthesizer phonemeSubstitutions]
  -[TTSSpeechSynthesizer ignoreSubstitutions]
  -[TTSSpeechSynthesizer setIgnoreSubstitutions:]


TTSAudioSessionChannel : NSObject
 @property  AVAudioSessionChannelDescription *channel
 @property  NSString *channelName
 @property  unsigned long channelNumber
 @property  unsigned int channelLabel
 @property  NSString *owningPortUID

  // class methods
  +[TTSAudioSessionChannel channelWithChannel:]
  +[TTSAudioSessionChannel convertChannels:]

  // instance methods
  -[TTSAudioSessionChannel channelName]
  -[TTSAudioSessionChannel channelNumber]
  -[TTSAudioSessionChannel channelLabel]
  -[TTSAudioSessionChannel setChannel:]
  -[TTSAudioSessionChannel channel]
  -[TTSAudioSessionChannel dealloc]
  -[TTSAudioSessionChannel .cxx_destruct]
  -[TTSAudioSessionChannel owningPortUID]
  -[TTSAudioSessionChannel isEqual:]
  -[TTSAudioSessionChannel init]
  -[TTSAudioSessionChannel setChannelNumber:]
  -[TTSAudioSessionChannel setChannelName:]
  -[TTSAudioSessionChannel setChannelLabel:]
  -[TTSAudioSessionChannel setOwningPortUID:]


TTSSpeechRequestOwner : NSObject <TTSSpeechRequestDelegate>
 @property  <TTSSpeechService> *speechService
 @property  <TTSSpeechConnectionDelegate> *delegate
 @property  TTSSpeechRequest *request
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TTSSpeechRequestOwner setDelegate:]
  -[TTSSpeechRequestOwner availableVoicesForLanguageCode:queryingMobileAssets:]
  -[TTSSpeechRequestOwner delegate]
  -[TTSSpeechRequestOwner dealloc]
  -[TTSSpeechRequestOwner .cxx_destruct]
  -[TTSSpeechRequestOwner startSpeechRequest:]
  -[TTSSpeechRequestOwner isSystemSpeakingOnBehalfOfCurrentConnection]
  -[TTSSpeechRequestOwner request]
  -[TTSSpeechRequestOwner init]
  -[TTSSpeechRequestOwner speechRequestDidStart:forService:]
  -[TTSSpeechRequestOwner speechRequestDidPause:forService:]
  -[TTSSpeechRequestOwner speechRequestDidContinue:forService:]
  -[TTSSpeechRequestOwner speechRequest:withMark:didStartForRange:forService:]
  -[TTSSpeechRequestOwner speechRequest:didStopWithSuccess:phonemesSpoken:forService:error:]
  -[TTSSpeechRequestOwner speechRequest:didSynthesizeSilentlyToURL:]
  -[TTSSpeechRequestOwner initWithSpeechService:]
  -[TTSSpeechRequestOwner _setRequest:]
  -[TTSSpeechRequestOwner stopCurrentSpeechRequestAtMark:waitUntilStopped:]
  -[TTSSpeechRequestOwner pauseCurrentSpeechRequestAtMark:waitUntilPaused:]
  -[TTSSpeechRequestOwner continueCurrentSpeechRequest]
  -[TTSSpeechRequestOwner speechService]
  -[TTSSpeechRequestOwner setSpeechService:]


TTSSpeechVoice : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *serviceIdentifier
 @property  <TTSSpeechService> *service
 @property  NSString *name
 @property  NSString *language
 @property  NSString *identifier
 @property  long long footprint
 @property  BOOL isDefault
 @property  BOOL isSystemVoice
 @property  BOOL isFallbackDefault
 @property  BOOL excludeInAvailableVoiceList
 @property  long long gender
 @property  long long voiceType
 @property  BOOL canBeDownloaded
 @property  BOOL isNoveltyVoice
 @property  BOOL isCombinedFootprint
 @property  NSString *nonCombinedVoiceId
 @property  AVSpeechSynthesisProviderVoice *synthesisProviderVoice

  // class methods
  +[TTSSpeechVoice supportsSecureCoding]
  +[TTSSpeechVoice localizedName:forLanguage:]
  +[TTSSpeechVoice voiceFromAVSpeechSynthesisProviderVoice:]

  // instance methods
  -[TTSSpeechVoice isDefault]
  -[TTSSpeechVoice isNoveltyVoice]
  -[TTSSpeechVoice canBeDownloaded]
  -[TTSSpeechVoice setServiceIdentifier:]
  -[TTSSpeechVoice footprint]
  -[TTSSpeechVoice setCanBeDownloaded:]
  -[TTSSpeechVoice serviceIdentifier]
  -[TTSSpeechVoice identifier]
  -[TTSSpeechVoice excludeInAvailableVoiceList]
  -[TTSSpeechVoice setLanguage:]
  -[TTSSpeechVoice encodeWithCoder:]
  -[TTSSpeechVoice gender]
  -[TTSSpeechVoice setNonCombinedVoiceId:]
  -[TTSSpeechVoice setService:]
  -[TTSSpeechVoice isSystemVoice]
  -[TTSSpeechVoice .cxx_destruct]
  -[TTSSpeechVoice setIsSystemVoice:]
  -[TTSSpeechVoice setFootprint:]
  -[TTSSpeechVoice service]
  -[TTSSpeechVoice nonCombinedVoiceId]
  -[TTSSpeechVoice isCombinedFootprint]
  -[TTSSpeechVoice synthesisProviderVoice]
  -[TTSSpeechVoice localizedNameForLanguage:]
  -[TTSSpeechVoice setIdentifier:]
  -[TTSSpeechVoice setName:]
  -[TTSSpeechVoice voiceType]
  -[TTSSpeechVoice setSynthesisProviderVoice:]
  -[TTSSpeechVoice copyWithZone:]
  -[TTSSpeechVoice setGender:]
  -[TTSSpeechVoice language]
  -[TTSSpeechVoice name]
  -[TTSSpeechVoice isFallbackDefault]
  -[TTSSpeechVoice setIsNoveltyVoice:]
  -[TTSSpeechVoice setVoiceType:]
  -[TTSSpeechVoice isEqual:]
  -[TTSSpeechVoice setIsDefault:]
  -[TTSSpeechVoice init]
  -[TTSSpeechVoice initWithCoder:]


TTSSynthesisProviderAudioEngine : NSObject <TTSSynthesisProviderHandlerDelegate>
 @property  TTSSynthesisProviderAudioOutput *offlineToRealtimePlayer
 @property  AVAudioFile *file
 @property  AVAudioUnit *avAudioUnit
 @property  NSObject<OS_dispatch_queue> *deferredStateChangeQueue
 @property  unsigned long playerState
 @property  unsigned long deferredPlayerState
 @property  @? deferredReplyBlock
 @property  AVAudioEngine *offlineEngine
 @property  NSNumber *audioUnitObservedToken
 @property  NSObject<OS_dispatch_queue> *playbackQueue
 @property  NSObject<OS_dispatch_queue> *offlineRenderingQueue
 @property  TTSSynthesisProviderRequestHandler *currentRequestHandler
 @property  @? markerBlock
 @property  @? bufferCallback
 @property  BOOL isSynthesizingSilently
 @property  BOOL offlineRenderingInProgress
 @property  <TTSSynthesisProviderAudioEngineProtocol> *delegate
 @property  AVAudioFormat *audioUnitOutputFormat

  // class methods
  +[TTSSynthesisProviderAudioEngine safelyCallStartCompletionForRequest:didStart:]

  // instance methods
  -[TTSSynthesisProviderAudioEngine setFile:]
  -[TTSSynthesisProviderAudioEngine audioUnit]
  -[TTSSynthesisProviderAudioEngine setDelegate:]
  -[TTSSynthesisProviderAudioEngine playbackQueue]
  -[TTSSynthesisProviderAudioEngine delegate]
  -[TTSSynthesisProviderAudioEngine dealloc]
  -[TTSSynthesisProviderAudioEngine setPlaybackQueue:]
  -[TTSSynthesisProviderAudioEngine .cxx_destruct]
  -[TTSSynthesisProviderAudioEngine file]
  -[TTSSynthesisProviderAudioEngine playerState]
  -[TTSSynthesisProviderAudioEngine continueSpeechRequest:]
  -[TTSSynthesisProviderAudioEngine setPlayerState:]
  -[TTSSynthesisProviderAudioEngine init]
  -[TTSSynthesisProviderAudioEngine didGeneratePlayableBuffers:forRequest:]
  -[TTSSynthesisProviderAudioEngine _startPlaying]
  -[TTSSynthesisProviderAudioEngine _stopPlaying]
  -[TTSSynthesisProviderAudioEngine _pausePlaying]
  -[TTSSynthesisProviderAudioEngine _safelyCallDeferredReplyBlock:]
  -[TTSSynthesisProviderAudioEngine _setupOfflineEngine]
  -[TTSSynthesisProviderAudioEngine _setupAudioUnitForVoice:]
  -[TTSSynthesisProviderAudioEngine _setupAudioUnitForVoice:remote:]
  -[TTSSynthesisProviderAudioEngine prewarmAudioUnitForVoice:]
  -[TTSSynthesisProviderAudioEngine startSynthesizingSpeechRequest:reply:]
  -[TTSSynthesisProviderAudioEngine startSynthesizingSpeechRequest:withBufferCallback:silently:reply:]
  -[TTSSynthesisProviderAudioEngine renderWithObserver:]
  -[TTSSynthesisProviderAudioEngine renderSpeechRequest:]
  -[TTSSynthesisProviderAudioEngine _finishRequestRendering]
  -[TTSSynthesisProviderAudioEngine pauseImmediately:]
  -[TTSSynthesisProviderAudioEngine stopImmediately:]
  -[TTSSynthesisProviderAudioEngine receivedMarkers:forRequest:]
  -[TTSSynthesisProviderAudioEngine stopAtMark:reply:]
  -[TTSSynthesisProviderAudioEngine pauseAtMark:reply:]
  -[TTSSynthesisProviderAudioEngine _handleMarkerPlayback:forRequest:]
  -[TTSSynthesisProviderAudioEngine playBuffers:forRequest:]
  -[TTSSynthesisProviderAudioEngine audioUnitOutputBus]
  -[TTSSynthesisProviderAudioEngine audioUnitOutputFormat]
  -[TTSSynthesisProviderAudioEngine markerByteOffsetScalingFactor]
  -[TTSSynthesisProviderAudioEngine isSpeechActive]
  -[TTSSynthesisProviderAudioEngine offlineToRealtimePlayer]
  -[TTSSynthesisProviderAudioEngine setOfflineToRealtimePlayer:]
  -[TTSSynthesisProviderAudioEngine avAudioUnit]
  -[TTSSynthesisProviderAudioEngine setAvAudioUnit:]
  -[TTSSynthesisProviderAudioEngine deferredStateChangeQueue]
  -[TTSSynthesisProviderAudioEngine setDeferredStateChangeQueue:]
  -[TTSSynthesisProviderAudioEngine deferredPlayerState]
  -[TTSSynthesisProviderAudioEngine setDeferredPlayerState:]
  -[TTSSynthesisProviderAudioEngine deferredReplyBlock]
  -[TTSSynthesisProviderAudioEngine setDeferredReplyBlock:]
  -[TTSSynthesisProviderAudioEngine offlineEngine]
  -[TTSSynthesisProviderAudioEngine setOfflineEngine:]
  -[TTSSynthesisProviderAudioEngine audioUnitObservedToken]
  -[TTSSynthesisProviderAudioEngine setAudioUnitObservedToken:]
  -[TTSSynthesisProviderAudioEngine offlineRenderingQueue]
  -[TTSSynthesisProviderAudioEngine setOfflineRenderingQueue:]
  -[TTSSynthesisProviderAudioEngine currentRequestHandler]
  -[TTSSynthesisProviderAudioEngine setCurrentRequestHandler:]
  -[TTSSynthesisProviderAudioEngine markerBlock]
  -[TTSSynthesisProviderAudioEngine setMarkerBlock:]
  -[TTSSynthesisProviderAudioEngine bufferCallback]
  -[TTSSynthesisProviderAudioEngine setBufferCallback:]
  -[TTSSynthesisProviderAudioEngine isSynthesizingSilently]
  -[TTSSynthesisProviderAudioEngine setIsSynthesizingSilently:]
  -[TTSSynthesisProviderAudioEngine offlineRenderingInProgress]
  -[TTSSynthesisProviderAudioEngine setOfflineRenderingInProgress:]


TTSSynthesisProviderAudioOutput : NSObject
 @property  AVAudioEngine *engine
 @property  AVAudioPlayerNode *player
 @property  AVAudioFormat *outputFormat
 @property  AVAudioSession *audioSession
 @property  NSObject<OS_dispatch_source> *engineShutdownTimer
 @property  NSObject<OS_dispatch_queue> *engineShutdownQueue
 @property  NSObject<OS_dispatch_queue> *playerStateChangeQueue
 @property  NSObject<OS_dispatch_queue> *completionHandlerQueue

  // instance methods
  -[TTSSynthesisProviderAudioOutput outputFormat]
  -[TTSSynthesisProviderAudioOutput setEngine:]
  -[TTSSynthesisProviderAudioOutput engine]
  -[TTSSynthesisProviderAudioOutput pause]
  -[TTSSynthesisProviderAudioOutput isRunning]
  -[TTSSynthesisProviderAudioOutput .cxx_destruct]
  -[TTSSynthesisProviderAudioOutput stop]
  -[TTSSynthesisProviderAudioOutput player]
  -[TTSSynthesisProviderAudioOutput setPlayer:]
  -[TTSSynthesisProviderAudioOutput setOutputFormat:]
  -[TTSSynthesisProviderAudioOutput play]
  -[TTSSynthesisProviderAudioOutput init]
  -[TTSSynthesisProviderAudioOutput setAudioSession:]
  -[TTSSynthesisProviderAudioOutput audioSession]
  -[TTSSynthesisProviderAudioOutput scheduleBuffer:completionCallbackType:completionHandler:]
  -[TTSSynthesisProviderAudioOutput _play:]
  -[TTSSynthesisProviderAudioOutput _scheduleEngineShutdown]
  -[TTSSynthesisProviderAudioOutput engineShutdownTimer]
  -[TTSSynthesisProviderAudioOutput setEngineShutdownTimer:]
  -[TTSSynthesisProviderAudioOutput engineShutdownQueue]
  -[TTSSynthesisProviderAudioOutput setEngineShutdownQueue:]
  -[TTSSynthesisProviderAudioOutput playerStateChangeQueue]
  -[TTSSynthesisProviderAudioOutput setPlayerStateChangeQueue:]
  -[TTSSynthesisProviderAudioOutput completionHandlerQueue]
  -[TTSSynthesisProviderAudioOutput setCompletionHandlerQueue:]


TTSStringTransformation : NSObject
 @property  {_NSRange=QQ} range
 @property  NSString *replacement
 @property  unsigned long offsetFromEnd
 @property  {_NSRange=QQ} finalRange

  // instance methods
  -[TTSStringTransformation .cxx_destruct]
  -[TTSStringTransformation setRange:]
  -[TTSStringTransformation range]
  -[TTSStringTransformation replacement]
  -[TTSStringTransformation setReplacement:]
  -[TTSStringTransformation initWithRange:andReplacement:]
  -[TTSStringTransformation sizeDelta]
  -[TTSStringTransformation offsetFromEnd]
  -[TTSStringTransformation setOffsetFromEnd:]
  -[TTSStringTransformation finalRange]
  -[TTSStringTransformation setFinalRange:]


TTSSpeechString : NSObject
 @property  NSString *originalString
 @property  NSString *transformedString
 @property  NSMutableArray *transformations

  // instance methods
  -[TTSSpeechString originalString]
  -[TTSSpeechString .cxx_destruct]
  -[TTSSpeechString setOriginalString:]
  -[TTSSpeechString initWithOriginalString:]
  -[TTSSpeechString transformRange:to:]
  -[TTSSpeechString insertAtLocation:string:]
  -[TTSSpeechString encapsulateSubstringAtRange:withPrefix:andSuffix:]
  -[TTSSpeechString translateRangeInTransformedString:]
  -[TTSSpeechString transformedString]
  -[TTSSpeechString _rangeIsValid:]
  -[TTSSpeechString _insertTransformation:forEncapsulatedTerminator:]
  -[TTSSpeechString setTransformedString:]
  -[TTSSpeechString transformations]
  -[TTSSpeechString setTransformations:]


TTSRegexCache : NSObject
 @property  NSMutableDictionary *cache

  // class methods
  +[TTSRegexCache sharedInstance]

  // instance methods
  -[TTSRegexCache setCache:]
  -[TTSRegexCache cache]
  -[TTSRegexCache .cxx_destruct]
  -[TTSRegexCache regexForString:]
  -[TTSRegexCache regexForString:atStart:]


TTSVoiceAsset : TTSAssetBase <NSSecureCoding>
 @property  NSString *name
 @property  NSString *identifier
 @property  NSArray *languages
 @property  long long gender
 @property  long long footprint
 @property  BOOL neural
 @property  BOOL isInstalled
 @property  BOOL isDownloading
 @property  BOOL isBuiltInVoice
 @property  NSString *voicePath
 @property  long long voiceType
 @property  long long fileSize

  // class methods
  +[TTSVoiceAsset supportsSecureCoding]

  // instance methods
  -[TTSVoiceAsset isInstalled]
  -[TTSVoiceAsset footprint]
  -[TTSVoiceAsset identifier]
  -[TTSVoiceAsset fileSize]
  -[TTSVoiceAsset setFileSize:]
  -[TTSVoiceAsset languages]
  -[TTSVoiceAsset encodeWithCoder:]
  -[TTSVoiceAsset neural]
  -[TTSVoiceAsset voicePath]
  -[TTSVoiceAsset gender]
  -[TTSVoiceAsset .cxx_destruct]
  -[TTSVoiceAsset isBuiltInVoice]
  -[TTSVoiceAsset initWithDictionaryRepresentation:]
  -[TTSVoiceAsset setIsDownloading:]
  -[TTSVoiceAsset setIdentifier:]
  -[TTSVoiceAsset dictionaryRepresentation]
  -[TTSVoiceAsset initWithName:languages:gender:footprint:isInstalled:isBuiltIn:masteredVersion:compatibilityVersion:neural:]
  -[TTSVoiceAsset voiceType]
  -[TTSVoiceAsset name]
  -[TTSVoiceAsset setVoiceType:]
  -[TTSVoiceAsset isDownloading]
  -[TTSVoiceAsset setVoicePath:]
  -[TTSVoiceAsset initWithCoder:]


TTSProviderUtility : NSObject
  // class methods
  +[TTSProviderUtility AVMarkerMarkFromTTSMark:]
  +[TTSProviderUtility AVSpeechSynthesisProviderRequestFromTTSSpeechRequest:]


AVAudioPCMBuffer(SynthesisProvider)
	// instance methods
	-[AVAudioPCMBuffer(SynthesisProvider) copyFromBuffer:fromOffset:numFrames:]
	-[AVAudioPCMBuffer(SynthesisProvider) copyStartingFromSample:]
	-[AVAudioPCMBuffer(SynthesisProvider) copyUpToSample:]
	-[AVAudioPCMBuffer(SynthesisProvider) copyStartingFromSample:upToSample:]
	-[AVAudioPCMBuffer(SynthesisProvider) splitBufferAtByteOffset:]

NSAttributedString(TTSSpeechAdditions)
	// class methods
	+[NSAttributedString(TTSSpeechAdditions) attributedStringWithFormatAndAttributes:]

NSMutableAttributedString(TTSSpeechAdditions)
	// instance methods
	-[NSMutableAttributedString(TTSSpeechAdditions) appendString:withAttributes:]

NSCoder(TextToSpeech)
	// instance methods
	-[NSCoder(TextToSpeech) tts_encodeBytes:size:forKey:]
	-[NSCoder(TextToSpeech) tts_decodeBytesIntoObject:size:forKey:]
	-[NSCoder(TextToSpeech) tts_encodeMatrixFloat4x4:forKey:]
	-[NSCoder(TextToSpeech) tts_decodeMatrixFloat4x4ForKey:]

AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private)
	// class methods
	+[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) updateSpeechVoices]

	// instance methods
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) isFirstParty]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) setManufacturerName:]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) supportedLanguages]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) manufacturerName]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) setIsFirstParty:]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) setSupportedLanguages:]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) extraAttributes]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) encodeWithCoder:]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) setExtraAttributes:]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) synthesizerBundleIdentifier]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) groupName]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) setSynthesizerBundleIdentifier:]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) hash]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) copyWithZone:]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) description]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) isEqual:]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) initWithCoder:]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) initWithName:identifier:primaryLanguages:supportedLanguages:]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) primaryLanguages]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) supportedCharacterSet]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) uniqueAudioDescTriple]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) uniqueAudioDescSpeechSynthTuple]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) fullBundleIdentifier]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) setAuComponentDesc:]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) auComponentDesc]
	-[AVSpeechSynthesisProviderVoice(AXSpeechPublicInterface_Private) setPrimaryLanguages:]

(IPAPhonemeSupport)
	// class methods
	+[(IPAPhonemeSupport) binaryStringRepresentationOfInt:]
	+[(IPAPhonemeSupport) binaryStringRepresentationOfInt:numberOfDigits:chunkLength:]

	// instance methods
	-[(IPAPhonemeSupport) setIPASpeechPhonemes:]
	-[(IPAPhonemeSupport) IPASpeechPhonemes]

<DEREK BUG Categories!>(SynthesisProviderAdditions)
	// instance methods
	-[<DEREK BUG Categories!>(SynthesisProviderAdditions) ax_nextDequeuedObjects:]

AVSpeechSynthesisProviderRequest(SynthesisProviderAdditions)
	// instance methods
	-[AVSpeechSynthesisProviderRequest(SynthesisProviderAdditions) setAudioSession:]
	-[AVSpeechSynthesisProviderRequest(SynthesisProviderAdditions) audioSession]
	-[AVSpeechSynthesisProviderRequest(SynthesisProviderAdditions) setTtsServiceDidStartReplyBlock:]
	-[AVSpeechSynthesisProviderRequest(SynthesisProviderAdditions) ttsServiceDidStartReplyBlock]

AVAudioUnit(SynthesisProviderAdditions)
	// class methods
	+[AVAudioUnit(SynthesisProviderAdditions) renderErrorFromAU:]

	// instance methods
	-[AVAudioUnit(SynthesisProviderAdditions) lastRenderError]

01 00 0700 /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox: AUAudioUnit 
01 00 0f40 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioEngine 
01 00 0f40 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioFormat 
01 00 0f40 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioPCMBuffer 
01 00 0f40 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioPlayerNode 
01 00 0f40 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioSession 
01 00 0f40 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioUnit 
01 00 0f40 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioUnitComponentManager 
01 00 0f40 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechSynthesisProviderRequest 
01 00 0f40 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechSynthesisProviderVoice 
01 00 0f40 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechUtterance 
01 00 0240 /System/Library/PrivateFrameworks/AXAssetLoader.framework/AXAssetLoader: AXAssetController 
01 00 0240 /System/Library/PrivateFrameworks/AXAssetLoader.framework/AXAssetLoader: AXAssetsService 
01 00 0240 /System/Library/PrivateFrameworks/AXAssetLoader.framework/AXAssetLoader: AXTTSLegacyCombinedVocalizerAssetPolicy 
01 00 0240 /System/Library/PrivateFrameworks/AXAssetLoader.framework/AXAssetLoader: AXTTSLegacyMacinTalkAssetPolicy 
01 00 0240 /System/Library/PrivateFrameworks/AXAssetLoader.framework/AXAssetLoader: AXTTSResourceAssetPolicy 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0c00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0100 /System/Library/PrivateFrameworks/PlugInKit.framework/PlugInKit: PKManager 
01 00 0940 /System/Library/PrivateFrameworks/SSMLServices.framework/SSMLServices: SSMLServices 
01 00 0440 /System/Library/PrivateFrameworks/SiriTTSService.framework/SiriTTSService: TTSAsset 
01 00 0440 /System/Library/PrivateFrameworks/SiriTTSService.framework/SiriTTSService: TTSAssetQuality 
01 00 0440 /System/Library/PrivateFrameworks/SiriTTSService.framework/SiriTTSService: TTSAssetTechnology 
01 00 0440 /System/Library/PrivateFrameworks/SiriTTSService.framework/SiriTTSService: TTSAssetType 
